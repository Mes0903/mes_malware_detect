
3bac36f5fa513dd5920caf37ec631dc4f2de99c4df44480d4ea052dda6c4418e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428277,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42831f,0x0
  401016:	mov    DWORD PTR ds:0x4282ef,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42823f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42831f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d74
  40104b:	mov    ecx,DWORD PTR ds:0x4283a7
  401051:	sub    DWORD PTR ds:0x42825b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428287
  40105e:	and    DWORD PTR ds:0x428243,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281cf
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282c7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42837f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282ab
  401089:	mov    edx,DWORD PTR ds:0x4283ab
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42830f,ebx
  40109a:	and    DWORD PTR ds:0x428257,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0x77befcb3]
  4010b6:	pop    ecx
  4010b7:	ja     0x401135
  4010b9:	sbb    BYTE PTR [eax],bl
  4010bb:	sbb    BYTE PTR [eax],bl
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    BYTE PTR [esi-0x25],al
  4010c3:	xchg   ebx,eax
  4010c4:	faddp  st(0),st
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	clc    
  4010cb:	out    0x2e,al
  4010cd:	or     dl,bh
  4010cf:	jo     0x401082
  4010d1:	adc    BYTE PTR ds:0x5e7117f9,dl
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    esp,ebx
  40111b:	out    0x2c,eax
  40111d:	push   ds
  40111e:	pop    es
  40111f:	(bad)  
  401120:	stc    
  401121:	adc    esp,DWORD PTR [ebp+0x24]
  401124:	mov    ds:0x4fbd4e88,eax
  401129:	dec    ebx
  40112a:	je     0x401159
  40112c:	xchg   esp,eax
  40112d:	or     edx,DWORD PTR [ebx]
  40112f:	inc    esp
  401130:	add    BYTE PTR [edi+0x4fdb4ec4],bl
  401136:	fistp  QWORD PTR [ecx-0x4fdda6f0]
  40113c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40113d:	bswap  ebp
  40113f:	jae    0x401159
  401141:	in     eax,0x8c
  401143:	stos   BYTE PTR es:[edi],al
  401144:	mov    bh,0xa6
  401146:	mov    DWORD PTR [ecx-0x46],ebx
  401149:	outs   dx,DWORD PTR ds:[esi]
  40114a:	sub    eax,0xe1666379
  40114f:	aam    0x23
  401151:	mov    edx,0xddaab8f0
  401156:	xlat   BYTE PTR ds:[ebx]
  401157:	dec    esi
  401158:	outs   dx,DWORD PTR ds:[esi]
  401159:	push   edx
  40115a:	dec    ebp
  40115b:	mov    dh,0xe0
  40115d:	mov    esi,DWORD PTR [edx]
  40115f:	dec    esp
  401160:	inc    ecx
  401161:	retf   0x2c5f
  401164:	pop    edx
  401165:	popf   
  401166:	adc    eax,0xd2886477
  40116b:	mov    cl,0xa6
  40116d:	and    al,0x50
  40116f:	in     al,dx
  401170:	mov    ds:0xd33a4c70,eax
  401175:	retf   
  401176:	int3   
  401177:	aam    0x56
  401179:	pop    ss
  40117a:	(bad)  
  40117b:	push   ebx
  40117c:	sub    eax,0xf2416051
  401181:	inc    ecx
  401182:	and    eax,0xc78bb335
  401187:	data16 ja 0x4011f6
  40118a:	and    bl,BYTE PTR [eax+0x4a]
  40118d:	adc    eax,0x6ddcec2e
  401192:	dec    esp
  401193:	xchg   ebp,eax
  401194:	jecxz  0x401183
  401196:	enter  0x1d4c,0x9f
  40119a:	push   cs
  40119b:	hlt    
  40119c:	xor    edx,DWORD PTR [ebx+0x1a]
  40119f:	fadd   st(4),st
  4011a1:	sbb    al,0x2c
  4011a3:	int3   
  4011a4:	sub    bl,al
  4011a6:	and    al,0x24
  4011a8:	cdq    
  4011a9:	imul   ebx,ecx,0x2b
  4011ac:	pop    ss
  4011ad:	popf   
  4011ae:	into   
  4011af:	mov    esi,0xa76075c7
  4011b4:	cmp    DWORD PTR [ebp+0x2a],ebp
  4011b7:	adc    dh,al
  4011b9:	lahf   
  4011ba:	lea    esi,[ecx]
  4011bc:	test   al,0x2f
  4011be:	push   ebp
  4011bf:	or     al,BYTE PTR [ebx]
  4011c1:	lds    ebp,FWORD PTR [ecx]
  4011c3:	inc    esi
  4011c4:	cld    
  4011c5:	loope  0x4011db
  4011c7:	push   ds
  4011c8:	adc    DWORD PTR [esi-0x265352ed],0xcd73e6cb
  4011d2:	scas   al,BYTE PTR es:[edi]
  4011d3:	ror    eax,1
  4011d5:	js     0x401177
  4011d7:	stos   BYTE PTR es:[edi],al
  4011d8:	dec    esp
  4011d9:	xor    DWORD PTR [edi-0x45],esi
  4011dc:	jge    0x40122a
  4011de:	call   0x7730dadb
  4011e3:	pop    ss
  4011e4:	add    al,0x7f
  4011e6:	pop    ss
  4011e7:	js     0x401250
  4011e9:	lods   eax,DWORD PTR ds:[esi]
  4011ea:	adc    esi,DWORD PTR [edx]
  4011ec:	inc    ebx
  4011ed:	inc    ebx
  4011ee:	sahf   
  4011ef:	mov    edx,eax
  4011f1:	or     al,0xb7
  4011f3:	xchg   ebx,eax
  4011f4:	retf   0x8ccb
  4011f7:	push   eax
  4011f8:	addr16 jp 0x4011ce
  4011fb:	stc    
  4011fc:	jl     0x401232
  4011fe:	loopne 0x40124d
  401200:	mov    esp,0x92874370
  401205:	pusha  
  401206:	stos   BYTE PTR es:[edi],al
  401207:	fsubr  DWORD PTR [ebp+0x10]
  40120a:	aam    0x1d
  40120c:	jmp    0x401213
  40120e:	add    eax,0xbcac15bb
  401213:	xor    ebx,DWORD PTR [esp+edx*2+0x572ca0c4]
  40121a:	cmp    DWORD PTR [edx-0x39],edx
  40121d:	mov    bh,0xe3
  40121f:	xchg   ebx,eax
  401220:	cbw    
  401222:	clc    
  401223:	add    eax,DWORD PTR [ebx+0x2181a350]
  401229:	fnclex 
  40122b:	dec    ebp
  40122c:	dec    ebx
  40122d:	push   es
  40122e:	loopne 0x401278
  401230:	mov    ecx,0xf9e0bdd2
  401235:	pop    edx
  401236:	pop    ss
  401237:	popa   
  401238:	jle    0x40125b
  40123a:	pop    ss
  40123b:	fisubr DWORD PTR [ebx-0x7d5d1cba]
  401241:	mov    ss,WORD PTR [edx-0xd]
  401244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401245:	mov    esi,esi
  401247:	pop    esp
  401248:	and    eax,0x818a8a0c
  40124d:	dec    edx
  40124e:	push   0x5b18603d
  401253:	sbb    eax,esp
  401255:	jmp    0x4012a2
  401257:	jp     0x401225
  401259:	sub    dl,cl
  40125b:	mov    ebp,0x110708fb
  401260:	mov    edx,0xb1900640
  401265:	mov    dl,0xc
  401267:	pusha  
  401268:	xor    al,0xc2
  40126a:	push   esp
  40126b:	jns    0x40120f
  40126d:	fadd   QWORD PTR [ebp+0x57]
  401270:	xchg   esi,eax
  401271:	sbb    cl,BYTE PTR [ecx]
  401273:	mov    ds:0xc88fb680,al
  401278:	and    ebx,DWORD PTR [ecx]
  40127a:	xchg   esp,eax
  40127b:	rcl    BYTE PTR [edx+0x65],cl
  40127e:	repz cld 
  401280:	cmp    BYTE PTR [ebp+edi*1-0x38],dh
  401284:	loop   0x401272
  401286:	sar    DWORD PTR [eax],0x74
  401289:	jnp    0x401233
  40128b:	pop    esp
  40128c:	mov    es,WORD PTR [edi-0x14]
  40128f:	mov    ebx,0xd315b591
  401294:	rcr    ebp,cl
  401296:	xchg   ebx,eax
  401297:	icebp  
  401298:	xchg   edi,eax
  401299:	fidivr DWORD PTR [ecx]
  40129b:	test   eax,0x1d7b7372
  4012a0:	mov    al,0xad
  4012a2:	test   eax,0x14914b9c
  4012a7:	and    edi,DWORD PTR [esi+0x70]
  4012aa:	or     bl,BYTE PTR [edx]
  4012ac:	xor    eax,0x7eb5aabb
  4012b1:	xchg   ebx,eax
  4012b3:	adc    BYTE PTR [bx+si-0x78],0x3d
  4012b8:	outs   dx,DWORD PTR ds:[esi]
  4012b9:	mov    edx,0x994b379c
  4012be:	push   ss
  4012bf:	pop    es
  4012c0:	sbb    al,0x2a
  4012c2:	or     ecx,DWORD PTR [ebp+esi*1-0x44e010ac]
  4012c9:	enter  0xc4cd,0x22
  4012cd:	and    ch,ah
  4012cf:	pop    ds
  4012d0:	imul   ebx,DWORD PTR [ebx+0x5da8749b],0xdf57beb6
  4012da:	pusha  
  4012db:	imul   edx,DWORD PTR [edx+0x606b7565],0xffffff87
  4012e2:	jno    0x4012f8
  4012e4:	mov    esp,0x8fe4948
  4012e9:	iret   
  4012ea:	dec    esi
  4012eb:	sub    cl,BYTE PTR [ebx]
  4012ed:	and    edi,ebp
  4012ef:	sub    ebp,esi
  4012f1:	or     BYTE PTR [ebx+0x76],cl
  4012f4:	xchg   ebx,eax
  4012f5:	ss sub al,0x13
  4012f8:	or     edx,DWORD PTR [ebx+0x74c9c535]
  4012fe:	pop    ebp
  4012ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401300:	and    eax,0x6362e8c7
  401305:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401307:	jae    0x4012ae
  401309:	add    eax,0xc9f770f1
  40130e:	ds es mov edi,0x2ce7db9b
  401315:	inc    eax
  401316:	push   edx
  401317:	adc    BYTE PTR [edx],dh
  401319:	mov    ebp,0xc37e9439
  40131e:	in     eax,0x99
  401320:	mov    ds:0xb48c53b8,al
  401325:	push   ecx
  401326:	outs   dx,DWORD PTR ds:[esi]
  401327:	enter  0x7bfb,0x74
  40132b:	adc    eax,0x4e3f5d8a
  401330:	push   edi
  401331:	inc    esp
  401332:	adc    dh,dh
  401334:	lea    esi,[edx+0x4d]
  401337:	cmp    DWORD PTR [edx-0x9f148cb],ecx
  40133d:	push   ebp
  40133e:	and    BYTE PTR [edi-0x69170b3f],ah
  401344:	mov    ?,WORD PTR [ecx]
  401346:	scas   al,BYTE PTR es:[edi]
  401347:	loop   0x4012fc
  401349:	ss sbb cl,dl
  40134c:	xchg   BYTE PTR [edi+0x7a656be3],cl
  401352:	mov    dh,0xad
  401354:	pop    ss
  401355:	cmp    eax,0xa7f29bba
  40135a:	bound  esi,QWORD PTR [esi+0x70c69b3e]
  401360:	test   DWORD PTR [edx+eiz*4],ebx
  401363:	adc    esp,DWORD PTR [eax-0x63]
  401366:	dec    edx
  401367:	pop    ebp
  401368:	xchg   ebp,eax
  401369:	sbb    BYTE PTR [ecx+0x1f54dc6],0x1e
  401370:	cld    
  401371:	push   ss
  401372:	sub    BYTE PTR [ebx-0x3b],al
  401375:	jo     0x4013ad
  401377:	cwde   
  401378:	push   ss
  401379:	inc    edx
  40137a:	and    BYTE PTR [ebx-0x5c40b60b],bh
  401380:	scas   al,BYTE PTR es:[edi]
  401381:	imul   ebp,ebx,0x37a9e7bf
  401387:	scas   al,BYTE PTR es:[edi]
  401388:	jns    0x4013fd
  40138a:	ds jge 0x40132c
  40138d:	test   BYTE PTR [eax+0x1c],0xe2
  401391:	lahf   
  401392:	repz (bad) 
  401394:	mov    ebp,0xb01fd7df
  401399:	in     eax,0x60
  40139b:	sub    eax,0xc4a4e0e5
  4013a0:	or     eax,0xcddc094c
  4013a5:	mov    edx,0x469d0f05
  4013aa:	pop    ss
  4013ab:	or     bl,BYTE PTR [ecx-0x7281a15c]
  4013b1:	add    ecx,DWORD PTR [ecx]
  4013b3:	ins    BYTE PTR es:[edi],dx
  4013b4:	xor    eax,0x2f6faf6d
  4013b9:	imul   ebx,DWORD PTR [esi+0x50],0x26626757
  4013c0:	daa    
  4013c1:	mov    DWORD PTR [edi+0x6628e40c],edi
  4013c7:	popa   
  4013c8:	test   edi,0xf1e9ca1d
  4013ce:	imul   ebx,DWORD PTR [ebp+0xe],0x5d
  4013d2:	stos   BYTE PTR es:[edi],al
  4013d3:	div    ecx
  4013d5:	mov    ebp,0x2ee8e3b4
  4013da:	test   al,0xdb
  4013dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013dd:	and    dh,al
  4013df:	or     ah,BYTE PTR [ecx+0x3c]
  4013e2:	xor    ah,dh
  4013e4:	pusha  
  4013e5:	pop    ecx
  4013e6:	xchg   esi,eax
  4013e7:	push   0x7264e1fd
  4013ec:	and    ch,BYTE PTR [ebx+0x2a]
  4013ef:	add    dh,BYTE PTR ds:0xdc11174d
  4013f5:	mov    ecx,0x98bd65bb
  4013fa:	int3   
  4013fb:	out    0x4b,eax
  4013fd:	gs ja  0x401471
  401400:	pushf  
  401401:	dec    esp
  401402:	xchg   edx,eax
  401403:	jl     0x40140f
  401405:	(bad)  
  401406:	mov    ds:0xcfa81008,eax
  40140b:	pop    DWORD PTR [edi+edi*8+0x651efb37]
  401412:	outs   dx,BYTE PTR ds:[esi]
  401413:	hlt    
  401414:	mov    cl,0x27
  401416:	mov    edx,ss
  401418:	ror    BYTE PTR [esi+eax*1-0x67b26871],0xc2
  401420:	xchg   edx,eax
  401421:	ret    
  401422:	sub    al,0x38
  401424:	mov    ecx,0xd5b18fff
  401429:	mov    ebx,0xb81a1b3d
  40142e:	(bad)  
  401430:	ret    
  401431:	stos   DWORD PTR es:[edi],eax
  401432:	fisub  WORD PTR [ecx-0x57]
  401435:	ficomp WORD PTR [esi+0x4dd045bb]
  40143b:	push   0xffffffd7
  40143d:	test   BYTE PTR [ebp-0x3ebd6aee],bl
  401443:	test   DWORD PTR [esi-0x57],ebp
  401446:	test   DWORD PTR [eax+0x6a],edi
  401449:	xchg   ebx,eax
  40144a:	xchg   esp,eax
  40144b:	int3   
  40144c:	arpl   WORD PTR [ecx+0x5415c825],bx
  401452:	test   BYTE PTR [edx+0x498ff225],cl
  401458:	ss or  al,0x11
  40145b:	or     ah,BYTE PTR [ecx+edx*1+0x7540bf00]
  401462:	mov    eax,0x96017626
  401467:	scas   eax,DWORD PTR es:[edi]
  401468:	mov    esi,0x907628e3
  40146d:	or     DWORD PTR [edx-0xaf56028],esp
  401473:	or     BYTE PTR [edx-0x5ef6f40a],dh
  401479:	ins    DWORD PTR es:[edi],dx
  40147a:	push   esp
  40147b:	lods   al,BYTE PTR ds:[esi]
  40147c:	xchg   DWORD PTR [ebx+0x73719dfc],edx
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x42836f,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282ab
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x4282fb,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42822b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428253,0x0
  4014da:	mov    DWORD PTR ds:0x42822f,ecx
  4014e0:	mov    DWORD PTR ds:0x4282f3,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42816b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428253,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d78
  40151c:	mov    edx,DWORD PTR ds:0x4282cb
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428343
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x42819f
  401537:	mov    edi,DWORD PTR ds:0x428347
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x3e25d590]
  401569:	mov    al,0x9e
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x39181812],bl
  401573:	push   esi
  401574:	mov    al,0x31
  401576:	jmp    0x6c81:0x961c557c
  40157d:	cmp    bl,BYTE PTR [esi-0x6b]
  401580:	pop    edx
  401581:	stos   BYTE PTR es:[edi],al
  401582:	ds xor bh,dl
  401585:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  401587:	adc    eax,0x62a2dd2c
  40158c:	call   edi
  40158e:	push   ds
  40158f:	scas   eax,DWORD PTR es:[di]
  401591:	inc    ecx
  401592:	pop    esi
  401593:	stos   DWORD PTR es:[edi],eax
  401594:	fisttp DWORD PTR [ecx-0x13ab4fe9]
  40159a:	or     al,0x89
  40159c:	inc    ebp
  40159d:	pop    es
  40159e:	retf   
  40159f:	aaa    
  4015a0:	cs pop esp
  4015a2:	fidivr WORD PTR [edi+0xf13fb45]
  4015a8:	sub    eax,0x5493b40e
  4015ad:	adc    eax,0x66680367
  4015b2:	les    ecx,FWORD PTR [edi+0x17]
  4015b5:	aam    0xd7
  4015b7:	xor    esp,DWORD PTR [edx+0x5b]
  4015ba:	in     eax,0x81
  4015bc:	ret    
  4015bd:	fisub  WORD PTR [edi+edi*4]
  4015c0:	fcomp  QWORD PTR [ebx]
  4015c2:	mov    ecx,0x411593ed
  4015c7:	int3   
  4015c8:	xor    edi,DWORD PTR [ecx-0x31ea788e]
  4015ce:	inc    esp
  4015cf:	push   edx
  4015d0:	in     al,0x96
  4015d2:	xor    BYTE PTR [eax+0x47],ah
  4015d5:	push   ecx
  4015d6:	iret   
  4015d7:	mov    ds:0xd7ba78a7,al
  4015dc:	mov    bl,0x55
  4015de:	outs   dx,BYTE PTR ds:[esi]
  4015df:	jns    0x4015ee
  4015e1:	fisttp DWORD PTR [ecx-0x50]
  4015e4:	(bad)  
  4015e5:	mov    ds:0xe414ca80,al
  4015ea:	shl    edi,0xfe
  4015ed:	lock sahf 
  4015ef:	sub    al,0x12
  4015f1:	cld    
  4015f2:	mov    al,0xb5
  4015f4:	daa    
  4015f5:	push   eax
  4015f6:	sub    al,0x65
  4015f8:	out    dx,al
  4015f9:	xchg   esp,eax
  4015fa:	(bad)  [edi]
  4015fc:	mov    esi,0x6f1aac0b
  401601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401602:	xchg   ecx,eax
  401603:	adc    bl,cl
  401605:	pop    es
  401606:	addr16 aas 
  401608:	mov    ah,0x26
  40160a:	fisttp DWORD PTR [edx]
  40160c:	fwait
  40160d:	mov    dh,0x83
  40160f:	xor    al,0xeb
  401611:	jg     0x40162e
  401613:	sbb    eax,0x88dff574
  401618:	shl    esi,cl
  40161a:	scas   al,BYTE PTR es:[edi]
  40161b:	add    ebp,DWORD PTR [eax]
  40161d:	and    ebx,DWORD PTR [ebx+0x38a2e9bc]
  401623:	push   0x106389ee
  401628:	loopne 0x401665
  40162a:	sbb    ecx,DWORD PTR [ecx-0x3f]
  40162d:	test   eax,0x87cbf7f3
  401632:	dec    edi
  401633:	dec    ecx
  401634:	icebp  
  401635:	es mov cl,0x40
  401638:	push   edi
  401639:	xchg   ebx,eax
  40163a:	imul   edi,DWORD PTR [edx-0x1010d414],0xffffffa5
  401641:	fild   WORD PTR [edi-0x395b40b9]
  401647:	adc    DWORD PTR [edi],ebp
  401649:	inc    ebx
  40164a:	(bad)  
  40164b:	setne  BYTE PTR [edi]
  40164e:	cmp    BYTE PTR [esi],0x7f
  401651:	jg     0x401666
  401653:	adc    BYTE PTR [ecx+eax*2-0xf],bh
  401657:	(bad)  
  401659:	scas   al,BYTE PTR es:[edi]
  40165a:	mov    WORD PTR [edx],fs
  40165c:	fmul   DWORD PTR [edx+0x74]
  40165f:	pop    esp
  401660:	push   0x9c5bed1c
  401665:	inc    esi
  401666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401667:	dec    ebx
  401668:	cmp    ebx,ebp
  40166a:	mov    dh,0x3
  40166c:	or     eax,0x774e85ea
  401671:	ror    ch,1
  401673:	sbb    DWORD PTR [edx-0x16935307],ebp
  401679:	jp     0x4016c1
  40167b:	out    0x1d,al
  40167d:	repz jl 0x40163a
  401680:	or     al,0xa2
  401682:	and    eax,0x15d4b68e
  401687:	stc    
  401688:	adc    ah,BYTE PTR [edi+ebp*1]
  40168b:	pop    esp
  40168c:	mov    esp,0xa01fbe8a
  401691:	jno    0x401711
  401693:	push   ecx
  401694:	adc    DWORD PTR [edx],esi
  401696:	push   ds
  401697:	in     eax,0x2c
  401699:	mov    ebp,0xa70214f0
  40169e:	xor    bh,bh
  4016a0:	gs jecxz 0x40162b
  4016a3:	jae    0x4016dd
  4016a5:	xchg   esp,eax
  4016a6:	mov    edx,0xeddb9d6d
  4016ab:	pop    eax
  4016ac:	rcl    BYTE PTR [edx-0x12],1
  4016af:	mov    WORD PTR [edi],es
  4016b1:	mov    edi,0x562a05c9
  4016b6:	mov    ecx,0x9b9f97f3
  4016bb:	retf   
  4016bc:	jge    0x4016c9
  4016be:	cmp    al,0xc8
  4016c0:	mov    cl,0xf7
  4016c2:	aas    
  4016c3:	(bad)  
  4016c5:	push   edx
  4016c6:	sbb    al,0x1b
  4016c8:	mov    ebx,0xc29923f7
  4016cd:	aaa    
  4016ce:	clc    
  4016cf:	inc    edx
  4016d0:	sub    eax,0xd6eeef63
  4016d5:	test   DWORD PTR [esp+edx*2+0x3e],ecx
  4016d9:	xlat   BYTE PTR ds:[ebx]
  4016da:	inc    edx
  4016db:	test   BYTE PTR [eax+0x60e54387],dh
  4016e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e2:	jae    0x401707
  4016e4:	fcomp  DWORD PTR [edx]
  4016e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e7:	loope  0x40166e
  4016e9:	push   ecx
  4016ea:	sbb    eax,0xbcb58ff4
  4016ef:	sub    ah,BYTE PTR [edi-0x65]
  4016f2:	fisub  WORD PTR [ebx]
  4016f4:	mov    eax,0x2cf18e35
  4016f9:	xchg   ebx,eax
  4016fa:	loope  0x401721
  4016fc:	xchg   esp,eax
  4016fd:	xchg   esi,eax
  4016fe:	out    0x6e,eax
  401700:	lahf   
  401701:	dec    ebx
  401702:	sub    al,0x9b
  401704:	icebp  
  401705:	retf   
  401706:	frstor [ecx]
  401708:	pop    ecx
  401709:	and    eax,0x5ce63fd0
  40170e:	adc    al,0x95
  401710:	cld    
  401711:	dec    ebp
  401712:	mov    bl,0xe0
  401714:	jp     0x40175b
  401716:	sub    BYTE PTR [ecx+ebp*8],0x9f
  40171a:	inc    ecx
  40171b:	pop    ebx
  40171c:	rcr    BYTE PTR [ebp+0x26],0xda
  401720:	out    0x97,al
  401722:	dec    ecx
  401723:	int    0xc5
  401725:	aad    0x13
  401727:	ret    0x67e6
  40172a:	inc    ebp
  40172b:	dec    edi
  40172c:	xlat   BYTE PTR ds:[ebx]
  40172d:	and    BYTE PTR [ebp+0x20],al
  401730:	push   edx
  401731:	push   esi
  401732:	aaa    
  401733:	dec    esi
  401734:	repz aas 
  401736:	popa   
  401737:	ins    DWORD PTR es:[edi],dx
  401738:	add    cl,0xc0
  40173b:	test   al,0x0
  40173d:	sub    eax,0x5b5d0817
  401742:	xor    dl,BYTE PTR [edx-0x78b1701f]
  401748:	pop    esp
  401749:	stos   BYTE PTR es:[edi],al
  40174a:	int    0x48
  40174c:	ins    DWORD PTR es:[edi],dx
  40174d:	lock out dx,eax
  40174f:	push   eax
  401750:	dec    edx
  401751:	xor    esi,DWORD PTR [esi]
  401753:	(bad)
  401757:	inc    esp
  401758:	adc    edi,DWORD PTR [ebx-0x4e]
  40175b:	mov    al,ds:0xe892b68b
  401760:	jno    0x4017b3
  401762:	inc    esi
  401763:	aaa    
  401764:	adc    edx,DWORD PTR [ebx-0x68406e07]
  40176a:	cmc    
  40176b:	add    ch,BYTE PTR [esi-0x1656772e]
  401771:	pop    ss
  401772:	add    ebp,DWORD PTR [esi+0x6bb5d054]
  401778:	cli    
  401779:	enter  0x3b41,0xa8
  40177d:	sub    DWORD PTR [eax],0x39
  401780:	cmp    DWORD PTR [ebp+0x66],0xffffffaf
  401784:	shl    DWORD PTR [ebx-0x40654d44],1
  40178a:	adc    al,0xfa
  40178c:	fwait
  40178d:	aad    0x5f
  40178f:	mov    bh,0x7c
  401791:	dec    eax
  401792:	popf   
  401793:	pcmpeqw mm1,mm5
  401796:	ja     0x401809
  401798:	out    dx,eax
  401799:	cmp    esi,DWORD PTR [edi+0x5386e93d]
  40179f:	js     0x401779
  4017a1:	add    BYTE PTR [edx],cl
  4017a3:	jmp    0x3db1:0x7c607c5a
  4017aa:	jl     0x401761
  4017ac:	cmc    
  4017ad:	cmp    BYTE PTR [ebx-0x13],cl
  4017b0:	jle    0x401765
  4017b2:	test   al,0xf6
  4017b4:	ins    BYTE PTR es:[edi],dx
  4017b5:	jmp    0x4017e1
  4017b7:	jmp    0x6e01:0x706eaf1f
  4017be:	mov    eax,0x691b2ec4
  4017c3:	mov    dl,0x72
  4017c5:	dec    ebp
  4017c6:	xor    eax,0x12ac8e83
  4017cb:	jge    0x4017dd
  4017cd:	out    0x3a,eax
  4017cf:	int    0xb6
  4017d1:	ror    BYTE PTR [ebp+0x43],0x90
  4017d5:	jns    0x401834
  4017d7:	add    ebp,ebp
  4017d9:	cli    
  4017da:	mov    esp,DWORD PTR [edx+ebx*2-0x79b33e35]
  4017e1:	rcl    DWORD PTR [bx+si-0x6eba],1
  4017e6:	cli    
  4017e7:	ja     0x4017ac
  4017e9:	jmp    0xdba09d9d
  4017ee:	iret   
  4017ef:	mov    ds:0x440b06c3,eax
  4017f4:	es mov bh,0x3a
  4017f7:	jle    0x401851
  4017f9:	dec    eax
  4017fa:	mov    ds:0xedf2cdb0,eax
  4017ff:	popf   
  401800:	jg     0x401823
  401802:	and    eax,DWORD PTR [edi-0x42c59615]
  401808:	or     BYTE PTR [ecx],al
  40180a:	std    
  40180b:	cld    
  40180c:	jle    0x401824
  40180e:	adc    al,0x12
  401810:	lods   eax,DWORD PTR ds:[si]
  401812:	out    dx,eax
  401813:	adc    esp,DWORD PTR [esi]
  401815:	je     0x40186c
  401817:	xor    edx,eax
  401819:	jl     0x4017ce
  40181b:	cs push edi
  40181d:	inc    edx
  40181e:	jle    0x40180e
  401820:	and    ebx,edx
  401822:	arpl   WORD PTR [ebx+0x5ddd9aad],dx
  401828:	dec    esp
  401829:	iret   
  40182a:	outs   dx,DWORD PTR ds:[esi]
  40182b:	ja     0x401823
  40182d:	fld    QWORD PTR [ecx+edi*1]
  401830:	inc    ebx
  401831:	les    ecx,FWORD PTR [eax]
  401833:	cmp    DWORD PTR [esi-0x5c],edi
  401836:	stos   DWORD PTR es:[edi],eax
  401837:	cwde   
  401838:	aas    
  401839:	add    eax,0x72274849
  40183e:	pop    esi
  40183f:	pusha  
  401840:	ret    0xe636
  401843:	xchg   edi,eax
  401844:	ss jmp 0x40183a
  401847:	push   ebp
  401848:	test   BYTE PTR [eax-0x16],0x2c
  40184c:	sbb    al,al
  40184e:	gs mov ch,0xb8
  401851:	xor    dh,dl
  401853:	les    eax,FWORD PTR [ecx+0x193f6076]
  401859:	data16 and cl,BYTE PTR [ebx-0x5d832a40]
  401860:	add    al,0xa4
  401862:	lahf   
  401863:	jmp    FWORD PTR [edx-0x11]
  401866:	repz in eax,dx
  401868:	sbb    dh,al
  40186a:	cwde   
  40186b:	ud0    edx,DWORD PTR [edi-0x46]
  40186f:	popa   
  401870:	sbb    DWORD PTR [edi-0x4a],esp
  401873:	in     al,0xb5
  401875:	shl    BYTE PTR [ecx+0x40add5a6],1
  40187b:	sar    DWORD PTR [edx-0x6d045427],cl
  401881:	adc    al,0xa8
  401883:	loopne 0x401896
  401885:	aad    0xf
  401887:	xchg   esi,eax
  401888:	popa   
  401889:	je     0x40183d
  40188b:	leave  
  40188c:	xor    BYTE PTR [ecx+0x7e],dl
  40188f:	ds mov bh,0xee
  401892:	dec    ebp
  401893:	call   0x2c6d:0x7411aab8
  40189a:	or     DWORD PTR [bp+si],edx
  40189d:	xchg   esp,eax
  40189e:	loope  0x4018e3
  4018a0:	es or  edx,esi
  4018a3:	dec    eax
  4018a4:	test   BYTE PTR [esp+ebp*8-0x8],dh
  4018a8:	imul   edx,DWORD PTR [ebx],0x81b0bd9
  4018ae:	ret    0xdad2
  4018b1:	int3   
  4018b2:	(bad)
  4018b6:	leave  
  4018b7:	jno    0x401916
  4018b9:	ds push es
  4018bb:	mov    ds:0x4a91d3bc,al
  4018c0:	jl     0x4018aa
  4018c2:	jne    0x4018e2
  4018c4:	outs   dx,DWORD PTR ds:[esi]
  4018c5:	dec    ebx
  4018c6:	pop    ecx
  4018c7:	dec    ecx
  4018c8:	icebp  
  4018c9:	jge    0x4018a2
  4018cb:	ret    0xdaf3
  4018ce:	stc    
  4018cf:	sbb    dh,al
  4018d1:	(bad)  [esi-0x2904bc9c]
  4018d7:	fmul   st(4),st
  4018d9:	cmp    ebp,DWORD PTR [eax]
  4018db:	lahf   
  4018dc:	jmp    FWORD PTR [ebx-0x52]
  4018df:	inc    edi
  4018e0:	fidiv  DWORD PTR [ebx-0x51]
  4018e3:	dec    esp
  4018e4:	jae    0x40188e
  4018e6:	ret    
  4018e7:	fstp   DWORD PTR [ebx]
  4018e9:	add    BYTE PTR [edx+eiz*1-0x533a745f],ch
  4018f0:	fwait
  4018f1:	and    al,0x62
  4018f3:	jmp    0x401912
  4018f5:	stos   DWORD PTR es:[edi],eax
  4018f6:	pusha  
  4018f7:	clc    
  4018f8:	or     DWORD PTR [edi+0x4e],0xffffffe3
  4018fc:	lds    esi,FWORD PTR [esi]
  4018fe:	sub    bl,0x25
  401901:	or     BYTE PTR [edx-0x2],bh
  401904:	inc    ebx
  401905:	outs   dx,DWORD PTR ds:[esi]
  401906:	sbb    BYTE PTR [edx-0x18c992c3],ah
  40190c:	xchg   edx,eax
  40190d:	sbb    DWORD PTR [ebx],ecx
  40190f:	lods   eax,DWORD PTR ds:[esi]
  401910:	pop    esi
  401911:	jnp    0x40192a
  401913:	cld    
  401914:	mov    cl,0x53
  401916:	cmp    ebp,esp
  401918:	ins    BYTE PTR es:[edi],dx
  401919:	pop    ss
  40191a:	test   DWORD PTR [ebp-0x596a0988],edi
  401920:	lods   eax,DWORD PTR ds:[esi]
  401921:	out    dx,al
  401922:	in     eax,0x54
  401924:	xlat   BYTE PTR ds:[ebx]
  401925:	jp     0x4018fb
  401927:	js     0x268ac583
  40192d:	sbb    edi,DWORD PTR [ecx-0x6c]
  401930:	cmp    ecx,DWORD PTR [ebp+0x46]
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428277,0x0
  401946:	not    DWORD PTR ds:0x4282ef
  40194c:	mov    edi,DWORD PTR ds:0x428193
  401952:	mov    DWORD PTR ds:0x42828f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x4282fb,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428277,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d7c
  401981:	mov    edx,DWORD PTR ds:0x428397
  401987:	adc    DWORD PTR ds:0x4282ff,edx
  40198d:	and    edx,DWORD PTR ds:0x42824f
  401993:	add    DWORD PTR ds:0x42827f,edx
  401999:	mov    edi,DWORD PTR ds:0x428173
  40199f:	xor    DWORD PTR ds:0x42819b,edi
  4019a5:	and    DWORD PTR ds:0x42816b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42837b
  4019b4:	sub    ecx,DWORD PTR ds:0x42827b
  4019ba:	mov    DWORD PTR ds:0x42837b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42838b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428383,0x339b
  4019e6:	mov    eax,ds:0x4223d0
  4019eb:	cmp    DWORD PTR ds:0x428267,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428277
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428267,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428287
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e68
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428187
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428177
  401a44:	sub    DWORD PTR ds:0x428303,ecx
  401a4a:	add    DWORD PTR ds:0x428183,0x42827b
  401a54:	xor    edx,DWORD PTR ds:0x4282eb
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x428193,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x428193,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428267
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42831f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42826b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x428193,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d80
  401ac0:	sub    edx,DWORD PTR ds:0x4283a3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42838f
  401ad4:	adc    ecx,DWORD PTR ds:0x42817f
  401ada:	mov    DWORD PTR ds:0x42838f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42817b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428163,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428277,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42818f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42816f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428163,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428ed0
  401b3a:	movzx  edx,WORD PTR ds:0x42829f
  401b41:	and    edx,DWORD PTR ds:0x42817b
  401b47:	mov    DWORD PTR ds:0x42829f,edx
  401b4d:	and    DWORD PTR ds:0x428257,edx
  401b53:	add    DWORD PTR ds:0x42839b,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282a3
  401b5f:	add    DWORD PTR ds:0x42825b,edi
  401b65:	or     edx,DWORD PTR ds:0x428387
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42830b,0x0
  401b78:	mov    DWORD PTR ds:0x4282a3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428173,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428247
  401ba1:	cmp    DWORD PTR ds:0x42830b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428d94
  401bc7:	sub    DWORD PTR ds:0x4282f7,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42825b
  401bd4:	add    DWORD PTR ds:0x428307,edx
  401bda:	add    DWORD PTR ds:0x42815f,ebx
  401be0:	sbb    DWORD PTR ds:0x42822f,edi
  401be6:	inc    DWORD PTR ds:0x42822f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x428393,0x428237
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xdab0afeb
  401c11:	lods   eax,DWORD PTR ds:[esi]
  401c12:	cdq    
  401c13:	mov    esp,0x18180a25
  401c18:	sahf   
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    BYTE PTR [eax-0x6f],bh
  401c1e:	or     al,0xdf
  401c20:	add    DWORD PTR [ecx+0x5c],edx
  401c23:	fwait
  401c24:	xchg   edi,eax
  401c25:	xor    BYTE PTR [ebp+0x75],ch
  401c28:	pop    ecx
  401c29:	jge    0x401c1f
  401c2b:	inc    edi
  401c2c:	sar    DWORD PTR [ebp+0x38],1
  401c2f:	adc    esp,edi
  401c31:	cmp    al,0x1f
  401c33:	sub    eax,0xb117ac54
  401c38:	jle    0x401c9d
  401c3a:	retf   0x5862
  401c3d:	sub    ch,bl
  401c3f:	adc    bh,bh
  401c41:	pop    esp
  401c42:	xchg   esp,eax
  401c43:	adc    dl,al
  401c45:	fcmovne st,st(4)
  401c47:	sub    ch,BYTE PTR [edi+0x4fb49152]
  401c4d:	enter  0x303c,0x4f
  401c51:	add    edx,DWORD PTR [ecx-0x4e]
  401c54:	add    dh,BYTE PTR [edi-0x2483dca6]
  401c5a:	adc    al,0xd1
  401c5c:	fistp  WORD PTR ds:0x449b6c14
  401c62:	cmc    
  401c63:	pop    esi
  401c64:	or     edi,DWORD PTR [esi]
  401c66:	push   ds
  401c67:	cmp    eax,0x6c2030b7
  401c6c:	add    al,0x96
  401c6e:	mov    WORD PTR [edi+0x5fcbc65c],es
  401c74:	hlt    
  401c75:	in     al,dx
  401c76:	or     ebp,DWORD PTR [ebp+0x47]
  401c79:	mov    ds:0x9a016139,al
  401c7e:	pop    eax
  401c7f:	mov    BYTE PTR [eax-0x6a],ah
  401c82:	ins    DWORD PTR es:[edi],dx
  401c83:	xchg   ebp,eax
  401c84:	mov    ebp,edi
  401c86:	sbb    esp,edx
  401c88:	popa   
  401c89:	mov    gs,ebp
  401c8b:	mov    ch,0x67
  401c8d:	jecxz  0x401c95
  401c8f:	hlt    
  401c90:	jo     0x401d08
  401c92:	fsub   st(6),st
  401c94:	and    eax,0x9fdf6219
  401c99:	dec    DWORD PTR [edi]
  401c9b:	mov    esi,0x8a19d4a
  401ca0:	std    
  401ca1:	imul   edi,esp,0xffffff9f
  401ca4:	add    BYTE PTR [ecx+0x71],ah
  401ca7:	pusha  
  401ca8:	or     al,0x35
  401caa:	je     0x401c92
  401cac:	pop    ds
  401cad:	(bad)  
  401cae:	xchg   esp,eax
  401caf:	pop    edx
  401cb0:	ret    0x462e
  401cb3:	jo     0x401caa
  401cb5:	sub    DWORD PTR es:[eax+edx*1],esi
  401cb9:	out    dx,al
  401cba:	or     bl,BYTE PTR [edi-0x4d223c0d]
  401cc0:	add    dh,BYTE PTR [ebp+0x4]
  401cc3:	inc    edi
  401cc4:	rcr    ah,0x65
  401cc7:	pop    ecx
  401cc8:	rcl    BYTE PTR [edi],0x39
  401ccb:	xlat   BYTE PTR ds:[ebx]
  401ccc:	out    dx,al
  401ccd:	(bad)  
  401cce:	out    0x35,al
  401cd0:	sbb    eax,DWORD PTR [ebx]
  401cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd3:	push   edi
  401cd4:	add    al,0x15
  401cd6:	xchg   edi,eax
  401cd7:	sbb    DWORD PTR [esi+0x195556a2],ebp
  401cdd:	xlat   BYTE PTR ds:[ebx]
  401cde:	bound  edi,QWORD PTR es:[edi-0x7195db28]
  401ce5:	dec    eax
  401ce6:	js     0x401d09
  401ce8:	shl    BYTE PTR [ebx+0x5a],0x91
  401cec:	loope  0x401d31
  401cee:	out    dx,eax
  401cef:	mov    DWORD PTR [edx+0x3fd4ac55],0xa9003c6e
  401cf9:	mov    ?,WORD PTR [edi+0x2]
  401cfc:	mov    ds:0xbf0c1fc2,al
  401d01:	(bad)  
  401d02:	rcr    ah,1
  401d04:	bound  esi,QWORD PTR [ebx]
  401d06:	push   0x47
  401d08:	jle    0x401c92
  401d0a:	mov    al,ds:0xac00e288
  401d0f:	jmp    0x665675a0
  401d14:	leave  
  401d15:	push   eax
  401d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d17:	sahf   
  401d18:	xor    eax,0x66a4fdb3
  401d1d:	ins    DWORD PTR es:[edi],dx
  401d1e:	pop    ss
  401d1f:	push   0x604493df
  401d24:	(bad)  
  401d25:	ficomp DWORD PTR [ebx-0x5b61d404]
  401d2b:	(bad)  
  401d2c:	pushf  
  401d2d:	ja     0x401cc0
  401d2f:	hlt    
  401d30:	sbb    BYTE PTR [edx-0x35b91c87],ch
  401d36:	call   0x7bad068e
  401d3b:	mov    cl,0x5
  401d3d:	pop    eax
  401d3e:	call   0x21f5:0x158d1f46
  401d45:	jae    0x401d34
  401d47:	sub    eax,DWORD PTR [ebp+0x57a4f3e5]
  401d4d:	jae    0x401dc9
  401d4f:	in     al,0x8
  401d51:	mov    esi,0x71f13c6d
  401d56:	jne    0x401d1c
  401d58:	lock dec edi
  401d5a:	pop    edi
  401d5b:	jb     0x401d84
  401d5d:	and    al,0x24
  401d5f:	mov    ah,0xea
  401d61:	inc    esp
  401d62:	call   0xc507389f
  401d67:	sub    DWORD PTR [ebx-0x341e9b6c],0x2d4353d
  401d71:	or     ch,dh
  401d73:	sbb    al,0xfb
  401d75:	call   0x2b446f5b
  401d7a:	sbb    ecx,DWORD PTR [esi-0x186c7ee8]
  401d80:	mov    DWORD PTR [ebx+0x76],esp
  401d83:	add    bl,BYTE PTR [esi-0x25199cd0]
  401d89:	in     al,dx
  401d8a:	push   edi
  401d8b:	js     0x401df4
  401d8d:	iret   
  401d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8f:	test   BYTE PTR [ecx+edi*4+0x79],cl
  401d93:	push   ss
  401d94:	data16 je 0x401e00
  401d97:	pop    esp
  401d98:	mov    ebx,0x916b59ce
  401d9d:	mov    esi,0x9219260a
  401da2:	pop    ss
  401da3:	xlat   BYTE PTR ds:[ebx]
  401da4:	(bad)  
  401da5:	mov    al,ds:0xd720d49e
  401daa:	out    0x8a,al
  401dac:	cmp    al,0x32
  401dae:	pop    edi
  401daf:	mov    eax,0xe39c085b
  401db4:	push   edi
  401db5:	test   al,0x87
  401db7:	dec    eax
  401db8:	xlat   BYTE PTR ds:[ebx]
  401db9:	pop    es
  401dba:	sub    DWORD PTR [esi],eax
  401dbc:	hlt    
  401dbd:	cdq    
  401dbe:	jp     0x401e05
  401dc0:	aas    
  401dc1:	sub    eax,0x70dbf540
  401dc6:	sub    ch,BYTE PTR [ebp+0x27428b35]
  401dcc:	into   
  401dcd:	sub    eax,DWORD PTR [edx]
  401dcf:	std    
  401dd0:	outs   dx,DWORD PTR ds:[esi]
  401dd1:	and    eax,0xc43aa3f1
  401dd6:	fcomp  DWORD PTR [edi]
  401dd8:	inc    edx
  401dd9:	adc    BYTE PTR [ebx],bl
  401ddb:	inc    edi
  401ddc:	adc    bh,dh
  401dde:	(bad)  
  401ddf:	les    ecx,FWORD PTR ds:0x83f915c6
  401de5:	(bad)  
  401de7:	vpandn ymm3,ymm2,ymm3
  401deb:	xor    ah,BYTE PTR [esi+ecx*1+0x443c6caf]
  401df2:	in     eax,0x13
  401df4:	fdivr  st,st(6)
  401df6:	call   0xd6f4:0x1218741
  401dfd:	push   0x65b526ce
  401e02:	mul    DWORD PTR [edx-0x5f3a5b90]
  401e08:	lea    ebx,ds:0x295526a5
  401e0e:	sub    DWORD PTR [edi],esi
  401e10:	cmc    
  401e11:	out    dx,al
  401e12:	sti    
  401e13:	(bad)  
  401e14:	mov    dl,0x92
  401e16:	jae    0x401dd1
  401e18:	inc    ebp
  401e19:	pop    esi
  401e1a:	retf   0xd8a8
  401e1d:	into   
  401e1e:	cmp    eax,0xaf79752a
  401e23:	les    esp,FWORD PTR [edi+0x5cd2eb97]
  401e29:	ret    
  401e2a:	dec    edx
  401e2b:	push   cs
  401e2c:	push   esp
  401e2d:	mov    ebx,0xf8ee08b9
  401e32:	and    al,0xcf
  401e34:	fucomip st,st(4)
  401e36:	mov    eax,ds:0x39a59d82
  401e3b:	jg     0x401e37
  401e3d:	(bad)  
  401e3e:	leave  
  401e3f:	and    bh,BYTE PTR [esi]
  401e41:	sahf   
  401e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e43:	pop    edi
  401e44:	pushf  
  401e45:	jl     0x401e4c
  401e47:	ret    
  401e48:	loop   0x401e5f
  401e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e4b:	loopne 0x401e3b
  401e4d:	std    
  401e4e:	loop   0x401e6c
  401e50:	int    0x51
  401e52:	mov    bh,BYTE PTR [ebp+0x2c]
  401e55:	mov    ecx,ss
  401e57:	fcom   DWORD PTR [ebp+0x73]
  401e5a:	call   0x9b887524
  401e5f:	(bad)  
  401e60:	cmc    
  401e61:	fbld   TBYTE PTR [edi-0x6f]
  401e64:	mov    ch,0xc1
  401e66:	cld    
  401e67:	adc    al,0x96
  401e69:	loope  0x401ea1
  401e6b:	mov    ch,0x55
  401e6d:	not    BYTE PTR [edx+0x12]
  401e70:	mov    ds:0x9b5426de,al
  401e75:	add    eax,ebx
  401e77:	xchg   DWORD PTR [esi+edx*4],esp
  401e7a:	push   0x1f
  401e7c:	iret   
  401e7d:	hlt    
  401e7e:	jmp    0x401e02
  401e80:	sbb    eax,0x6b9b6ba0
  401e85:	repz sub edi,DWORD PTR [ebp+eiz*2+0x17e08e37]
  401e8d:	jecxz  0x401ed1
  401e8f:	push   esp
  401e90:	in     eax,0xc4
  401e92:	lea    esp,[ebx+ebp*8]
  401e95:	ins    DWORD PTR es:[edi],dx
  401e96:	xor    ecx,DWORD PTR [eax-0x41edbe2f]
  401e9c:	(bad)  
  401e9d:	aam    0x70
  401e9f:	cmp    cl,BYTE PTR [eax+0x7a2fefcf]
  401ea5:	cs out 0xc7,al
  401ea8:	call   0x9704dcaa
  401ead:	cld    
  401eae:	or     ebp,DWORD PTR [ecx+0x70]
  401eb1:	sub    al,0x84
  401eb3:	or     ch,BYTE PTR [eax+ecx*2-0x1f]
  401eb7:	mov    esp,0x5856b664
  401ebc:	addr16 sbb al,0x42
  401ebf:	inc    esp
  401ec0:	addr16 fdivp st(2),st
  401ec3:	sub    ah,BYTE PTR [edx-0x57a5c1a2]
  401ec9:	(bad)
  401ecd:	pop    esi
  401ece:	repz rcr BYTE PTR [edi+0xe5c74bf],1
  401ed5:	xor    cl,al
  401ed7:	mov    bh,0xee
  401ed9:	outs   dx,DWORD PTR ds:[esi]
  401eda:	ror    BYTE PTR [esi-0x6cfa6b7c],0x42
  401ee1:	popf   
  401ee2:	adc    ah,dl
  401ee4:	sbb    eax,0x76395fea
  401ee9:	jnp    0x401e8b
  401eeb:	sub    esp,0x41
  401eee:	xchg   esi,eax
  401eef:	int    0xe1
  401ef1:	popf   
  401ef2:	lods   eax,DWORD PTR ds:[esi]
  401ef3:	loope  0x401eb5
  401ef5:	and    BYTE PTR [ecx+ebp*8],ah
  401ef8:	push   ebx
  401ef9:	dec    ecx
  401efa:	and    BYTE PTR ds:0x43f89ab,dl
  401f00:	rol    BYTE PTR [ebx],cl
  401f02:	pop    esp
  401f03:	jg     0x401f3c
  401f05:	out    dx,eax
  401f06:	arpl   WORD PTR [edi-0x4f691d68],si
  401f0c:	popa   
  401f0d:	jb     0x401e9f
  401f0f:	push   0x9
  401f11:	pop    esi
  401f12:	sbb    eax,0x1eee2c1f
  401f17:	pop    ds
  401f18:	fldcw  WORD PTR [ebp+eax*2-0xc3fddc8]
  401f1f:	cmp    BYTE PTR [edx+edx*2+0x48],0x37
  401f24:	fcomp  DWORD PTR [ebp+eax*1-0x34eb58b9]
  401f2b:	loop   0x401eea
  401f2d:	les    esp,FWORD PTR [ecx-0x4626c97a]
  401f33:	pop    ecx
  401f34:	out    0xf7,al
  401f36:	loope  0x401f43
  401f38:	mov    ebp,0x46421d59
  401f3d:	scas   al,BYTE PTR es:[edi]
  401f3e:	push   0xfabe8588
  401f43:	stc    
  401f44:	std    
  401f45:	cmp    eax,0x115aaaeb
  401f4a:	rcl    BYTE PTR [eax],1
  401f4c:	test   DWORD PTR [edx+edx*1-0x7db58960],esp
  401f53:	pop    edi
  401f54:	mov    cl,0x37
  401f56:	rol    DWORD PTR [ecx-0x354fa4],1
  401f5c:	adc    dh,cl
  401f5e:	jp     0x401f02
  401f60:	or     DWORD PTR [esp+esi*2],0x20899625
  401f67:	add    esi,DWORD PTR ds:[edi+0x43]
  401f6b:	pop    esi
  401f6c:	(bad)  
  401f6d:	dec    esi
  401f6e:	inc    edx
  401f6f:	pusha  
  401f70:	lock dec ebp
  401f72:	call   0x2b8e:0xe0a512f2
  401f79:	inc    edi
  401f7a:	imul   edi,DWORD PTR [ecx],0x7d
  401f7d:	mov    eax,ds:0x2ac160f9
  401f82:	jne    0x401fb5
  401f84:	mulps  xmm4,XMMWORD PTR [ebx+0x46]
  401f88:	adc    eax,0xee56b413
  401f8d:	adc    eax,ebp
  401f8f:	mov    ch,0xdf
  401f91:	sbb    eax,0x26beb14a
  401f96:	dec    ecx
  401f97:	push   cs
  401f98:	fnstsw WORD PTR [ebx-0x695afe40]
  401f9e:	jns    0x401f31
  401fa0:	xchg   edi,eax
  401fa1:	xchg   ebp,eax
  401fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa3:	in     al,dx
  401fa4:	mov    eax,0xdf073346
  401fa9:	imul   DWORD PTR [esi*8-0x6d7e6990]
  401fb0:	sbb    BYTE PTR cs:[ebp+0x1c3c4273],cl
  401fb7:	div    bh
  401fb9:	jne    0x401f8c
  401fbb:	mov    eax,DWORD PTR [ebp+0x5b32063e]
  401fc1:	fbstp  TBYTE PTR [esi]
  401fc3:	add    eax,DWORD PTR fs:[esi]
  401fc6:	mov    dh,0x6c
  401fc8:	es xor eax,0xaff44997
  401fce:	cmp    BYTE PTR ds:0x1c5fde03,ch
  401fd4:	adc    al,0xee
  401fd6:	repnz sub al,0xf1
  401fd9:	leave  
  401fda:	dec    ecx
  401fdb:	dec    edi
  401fdc:	mov    BYTE PTR [ecx+0x45c7c455],cl
  401fe2:	nop
  401fe3:	push   ebp
  401fe4:	sub    al,0x0
  401fe6:	add    BYTE PTR [ecx+0x42836b],ah
  401fec:	adc    DWORD PTR ds:0x4283a7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42838b,0x0
  402000:	mov    DWORD PTR ds:0x42828b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428373,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42838b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428d98
  40203e:	or     DWORD PTR ds:0x42816f,0x6f29
  402048:	xor    DWORD PTR ds:0x42830b,0x4282ff
  402052:	add    DWORD PTR ds:0x42828b,0x428327
  40205c:	and    DWORD PTR ds:0x42839b,edi
  402062:	mov    DWORD PTR ds:0x42827b,0x2a04
  40206c:	sub    DWORD PTR ds:0x42819b,0x42815b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282ef,0x0
  402084:	mov    DWORD PTR ds:0x4282eb,ecx
  40208a:	mov    DWORD PTR ds:0x428197,0x59f
  402094:	mov    DWORD PTR ds:0x428197,ecx
  40209a:	mov    DWORD PTR ds:0x428317,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282ef,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42816b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428ed4
  4020ce:	sbb    DWORD PTR ds:0x42837b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x4282fb,0x42826f
  4020e2:	adc    DWORD PTR ds:0x42836f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42836f,0x42839f
  4020f6:	and    DWORD PTR ds:0x428157,0x428373
  402100:	sbb    DWORD PTR ds:0x42815b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282ef,0x42829f
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282eb
  40213c:	add    DWORD PTR ds:0x428287,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42837b
  40214e:	add    DWORD PTR ds:0x428317,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428167,0x0
  402162:	mov    DWORD PTR ds:0x42838b,0x750f
  40216c:	not    DWORD PTR ds:0x428373
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42826b,0x610f
  402181:	mov    eax,ds:0x42817f
  402186:	cmp    DWORD PTR ds:0x428167,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428069
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e70
  4021b1:	adc    DWORD PTR ds:0x42828f,0x428263
  4021bb:	add    DWORD PTR ds:0x42824f,0x168f
  4021c5:	sub    DWORD PTR ds:0x4282f3,0x428193
  4021cf:	or     DWORD PTR ds:0x428393,0xa53
  4021d9:	mov    eax,ds:0x428247
  4021de:	xor    DWORD PTR ds:0x42815b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbc6564d1
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x5ee7e7ee],bl
  40220e:	sub    al,0x3f
  402210:	fbstp  TBYTE PTR [ebp+0x5f693d4c]
  402216:	sbb    edi,ecx
  402218:	es adc eax,0xd725fc3f
  40221e:	mov    eax,ebx
  402220:	scas   al,BYTE PTR es:[edi]
  402221:	in     al,0xa6
  402223:	stos   BYTE PTR es:[edi],al
  402224:	cmc    
  402225:	test   DWORD PTR [ebp+0x5e128656],ebp
  40222b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40222c:	lea    esi,[edx-0x64446a14]
  402232:	ret    
  402233:	mov    WORD PTR [edi],fs
  402235:	mov    ss,eax
  402237:	repz mov edx,DWORD PTR [ebx]
  40223a:	inc    esp
  40223b:	repz push ss
  40223d:	or     al,0x6a
  40223f:	inc    ecx
  402240:	jecxz  0x402229
  402242:	gs mov eax,0x91ce702b
  402248:	shl    DWORD PTR [ecx],1
  40224a:	or     eax,0xeec6d947
  40224f:	push   eax
  402250:	mov    esi,0xecf2387
  402255:	adc    edx,DWORD PTR [edi-0x80]
  402258:	(bad)  
  402259:	pop    edi
  40225a:	sub    al,0x8
  40225c:	add    esi,ebx
  40225e:	sbb    al,0x80
  402260:	or     al,0x87
  402262:	add    BYTE PTR [ecx-0x3d076a81],cl
  402268:	add    al,0x8c
  40226a:	inc    ebx
  40226b:	loop   0x402298
  40226d:	or     al,0x88
  40226f:	ret    0x4839
  402272:	inc    eax
  402273:	mov    edx,0x96162097
  402278:	arpl   WORD PTR [esi],bp
  40227a:	mov    eax,0x21613948
  40227f:	push   edi
  402280:	add    dh,bh
  402282:	jno    0x4022c1
  402284:	nop
  402285:	dec    esi
  402286:	push   cs
  402287:	dec    esi
  402288:	fnstcw WORD PTR [ebx]
  40228a:	dec    ecx
  40228b:	call   0x93992910
  402290:	xchg   ecx,eax
  402291:	in     al,dx
  402292:	das    
  402293:	cs (bad) 
  402295:	mov    esi,0xa63272d8
  40229a:	fiadd  WORD PTR [ebx]
  40229c:	add    DWORD PTR [edx-0x36],0xffffffef
  4022a0:	jbe    0x4022d8
  4022a2:	sub    ebp,DWORD PTR [ebx+0x6]
  4022a5:	ins    DWORD PTR es:[edi],dx
  4022a6:	pop    es
  4022a7:	fadd   QWORD PTR [edx-0x23a22c4b]
  4022ad:	xchg   edx,eax
  4022ae:	jmp    0x402299
  4022b0:	test   cl,0x4b
  4022b3:	push   cs
  4022b4:	cdq    
  4022b5:	imul   edx,DWORD PTR [edi-0x3fc6001d],0x1c
  4022bc:	into   
  4022bd:	pop    es
  4022be:	popf   
  4022bf:	stc    
  4022c0:	sub    ebx,esp
  4022c2:	je     0x4022be
  4022c4:	and    DWORD PTR [esi*1-0x15ca7c10],ecx
  4022cb:	xchg   edx,eax
  4022cc:	ds loope 0x402270
  4022cf:	cld    
  4022d0:	ins    BYTE PTR es:[edi],dx
  4022d1:	lods   al,BYTE PTR ds:[esi]
  4022d2:	test   BYTE PTR ds:0x7bd254e1,ah
  4022d8:	jecxz  0x402273
  4022da:	or     eax,0xb5692461
  4022df:	lods   eax,DWORD PTR ds:[esi]
  4022e0:	sar    BYTE PTR ds:0x1d39731a,1
  4022e6:	xor    al,BYTE PTR [eax+0x5cde8bfb]
  4022ec:	sub    al,0xdc
  4022ee:	mul    BYTE PTR [edi+0x29]
  4022f1:	aad    0x7f
  4022f3:	inc    eax
  4022f5:	pushf  
  4022f6:	out    dx,eax
  4022f7:	adc    ebp,DWORD PTR [edi+eiz*1]
  4022fa:	cli    
  4022fb:	(bad)  
  4022fc:	stc    
  4022fd:	dec    ecx
  4022fe:	out    dx,eax
  4022ff:	push   ecx
  402300:	dec    edx
  402301:	sbb    ebp,DWORD PTR [ecx]
  402303:	fist   DWORD PTR [ecx]
  402305:	outs   dx,DWORD PTR ds:[esi]
  402306:	jns    0x40228d
  402308:	daa    
  402309:	int    0x46
  40230b:	int    0xd6
  40230d:	aad    0x50
  40230f:	xor    DWORD PTR [edx-0x55],edx
  402312:	and    BYTE PTR [ebx-0x70b30a42],al
  402318:	sti    
  402319:	jb     0x40233b
  40231b:	inc    esi
  40231c:	mov    edi,0x7fd74e3b
  402321:	mov    al,0xd3
  402323:	lock lea ecx,[eax]
  402326:	lea    esi,[esi-0x18]
  402329:	fild   WORD PTR [edx-0x53]
  40232c:	pop    ecx
  40232d:	repnz arpl WORD PTR [esi-0x3c],bp
  402331:	jo     0x40236c
  402333:	push   edi
  402334:	cs cdq 
  402336:	mov    esi,0x7953c7f3
  40233b:	bswap  ecx
  40233d:	dec    esi
  40233e:	daa    
  40233f:	mov    eax,0xdd8e0340
  402344:	jbe    0x4022ce
  402346:	inc    ebp
  402347:	int3   
  402348:	or     dl,BYTE PTR [eax]
  40234a:	push   edx
  40234b:	imul   ebx,DWORD PTR [esi-0x2fb1c0f4],0xa32d1bcd
  402355:	std    
  402356:	or     BYTE PTR [edi-0x36],bh
  402359:	cmp    bh,ch
  40235b:	sar    BYTE PTR [ecx+ebx*8+0x2266c360],cl
  402362:	and    ebx,DWORD PTR [edx]
  402364:	push   ds
  402365:	fadd   QWORD PTR [ecx]
  402367:	lods   eax,DWORD PTR ds:[esi]
  402368:	and    DWORD PTR [ebx+0x286abec7],esi
  40236e:	ficomp DWORD PTR [ecx-0x31e16625]
  402374:	test   BYTE PTR [esi],bl
  402376:	sub    ebx,DWORD PTR [ebp-0x681c593c]
  40237c:	adc    DWORD PTR [edx+0x77],eax
  40237f:	mov    ch,BYTE PTR [edi-0x57]
  402382:	cmp    DWORD PTR [edi],esi
  402384:	aaa    
  402385:	mov    dl,0x53
  402387:	out    0x13,al
  402389:	inc    edi
  40238a:	push   edi
  40238b:	adc    edi,esp
  40238d:	dec    edi
  40238e:	and    dl,ch
  402390:	jge    0xc8e0b646
  402396:	push   ebp
  402397:	inc    edi
  402398:	(bad)  
  40239a:	cmp    ebx,DWORD PTR [eax+0x50]
  40239d:	or     BYTE PTR [eiz*1+0x2d8e656e],bl
  4023a4:	add    ebx,ebx
  4023a6:	mov    cl,0x49
  4023a8:	jle    0x40234b
  4023aa:	dec    ecx
  4023ab:	inc    esi
  4023ac:	jl     0x4023fb
  4023ae:	pop    eax
  4023af:	in     eax,0xcc
  4023b1:	add    BYTE PTR [eax],dh
  4023b3:	jb     0x402424
  4023b5:	xor    DWORD PTR [edi+0x6],0x56
  4023b9:	outs   dx,DWORD PTR ds:[esi]
  4023ba:	mov    bh,0x3c
  4023bc:	loopne 0x4023f8
  4023be:	cs loopne 0x402383
  4023c1:	push   ebx
  4023c2:	mov    ch,0x75
  4023c4:	hlt    
  4023c5:	cmp    eax,0x515fd589
  4023ca:	(bad)  
  4023cb:	ficom  WORD PTR [ebx-0x44]
  4023ce:	in     eax,0x52
  4023d0:	mov    fs,WORD PTR [edx+eax*4+0x6c]
  4023d4:	jle    0x4023f0
  4023d6:	xchg   DWORD PTR [ecx+0xad9c531],esi
  4023dc:	inc    edi
  4023dd:	adc    eax,DWORD PTR [ecx+0xd]
  4023e0:	or     BYTE PTR [ecx+0x3e36bc55],bl
  4023e6:	cmp    DWORD PTR [ebx+0x46],edi
  4023e9:	repz repnz xor DWORD PTR [esi+0x2e],edx
  4023ee:	mov    ecx,esp
  4023f0:	pop    edi
  4023f1:	ret    0x6da2
  4023f4:	cli    
  4023f5:	leave  
  4023f6:	adc    esp,DWORD PTR [edx+0x5a]
  4023f9:	pop    edx
  4023fa:	or     esi,ecx
  4023fc:	fwait
  4023fd:	mov    esi,0xcb050010
  402402:	cdq    
  402403:	jns    0x402459
  402405:	jo     0x402428
  402407:	push   ss
  402408:	mov    esp,0xfd99d1bc
  40240d:	shr    bh,1
  40240f:	rcr    BYTE PTR [ecx],0xc7
  402412:	sbb    dl,BYTE PTR [edi+0x465bd68]
  402418:	sar    BYTE PTR [ebp-0x64],0x10
  40241c:	mov    WORD PTR [ecx],?
  40241e:	loopne 0x402435
  402420:	pop    edx
  402421:	inc    esp
  402422:	cs pop ebp
  402424:	mov    ch,0xda
  402426:	push   esp
  402427:	cs sar ebx,cl
  40242a:	sub    bh,BYTE PTR ds:[edx-0x69]
  40242e:	add    al,0x74
  402430:	cmp    al,BYTE PTR [ecx+0x58735e0b]
  402436:	fnstenv [eax-0x68]
  402439:	xchg   ecx,eax
  40243b:	sbb    ebp,ebx
  40243d:	sbb    al,0x80
  40243f:	daa    
  402440:	stos   BYTE PTR es:[edi],al
  402441:	ret    
  402442:	shr    BYTE PTR [ecx],0xf1
  402445:	mov    eax,edi
  402447:	es scas al,BYTE PTR es:[edi]
  402449:	outs   dx,BYTE PTR ds:[esi]
  40244a:	fcom   DWORD PTR [eax-0x30ba0f65]
  402450:	clc    
  402451:	mov    ds:0x96c11095,eax
  402456:	dec    edi
  402457:	popf   
  402458:	cmp    al,0xc6
  40245a:	sbb    bh,BYTE PTR [esi+0x1f]
  40245d:	sub    DWORD PTR [edx+0x67],esp
  402460:	jp     0x40240b
  402462:	mov    bh,0x8f
  402464:	jbe    0x40246c
  402466:	jl     0x4023f3
  402468:	jle    0x402426
  40246a:	pushf  
  40246b:	rol    DWORD PTR [ecx*8-0x6a327675],cl
  402472:	stc    
  402473:	rol    BYTE PTR [bp+si],0x5e
  402477:	psubb  mm6,QWORD PTR [esi-0x202e553]
  40247e:	push   0x6ca89410
  402483:	xor    DWORD PTR [ebx+0x222c1402],eax
  402489:	push   ds
  40248a:	or     al,0x4f
  40248c:	add    BYTE PTR [ebp-0x7732a505],dh
  402492:	aaa    
  402493:	mov    al,0x16
  402495:	js     0x4024e6
  402497:	cwde   
  402498:	(bad)  
  40249b:	rcr    edi,cl
  40249d:	scas   al,BYTE PTR es:[edi]
  40249e:	scas   eax,DWORD PTR es:[edi]
  40249f:	dec    ecx
  4024a0:	mov    edi,DWORD PTR [ebp+0x1d]
  4024a3:	outs   dx,BYTE PTR ds:[esi]
  4024a4:	mov    DWORD PTR [edx],esi
  4024a6:	je     0x402468
  4024a8:	dec    ebx
  4024a9:	pop    ecx
  4024aa:	clc    
  4024ab:	fidiv  WORD PTR [eax-0x2]
  4024ae:	dec    esp
  4024af:	mov    al,ds:0x180e9033
  4024b4:	mov    ch,0xe4
  4024b6:	cmp    dh,BYTE PTR [ecx]
  4024b8:	aad    0x8e
  4024ba:	adc    al,0xec
  4024bc:	jb     0x4024df
  4024be:	cli    
  4024bf:	push   es
  4024c0:	ja     0x4024da
  4024c2:	aam    0x2d
  4024c4:	xchg   edi,eax
  4024c5:	or     edi,DWORD PTR [ecx+eax*4+0x3f9cc6e1]
  4024cc:	mov    dh,0xae
  4024ce:	and    cl,BYTE PTR [edx+0x754426c3]
  4024d4:	popf   
  4024d5:	scas   eax,DWORD PTR es:[edi]
  4024d6:	(bad)  
  4024d7:	int3   
  4024d8:	loope  0x40251a
  4024da:	jl     0x4024a8
  4024dc:	pop    ecx
  4024dd:	mov    ebx,0x90a4469a
  4024e2:	fdivr  DWORD PTR [edx+0x2f88b8a1]
  4024e8:	mov    WORD PTR [eax],ds
  4024ea:	out    0x5,al
  4024ec:	jle    0x402470
  4024ee:	jmp    0x402568
  4024f0:	dec    esi
  4024f1:	test   DWORD PTR [eax-0x122ce48f],0x11da6698
  4024fb:	dec    ebx
  4024fc:	les    eax,FWORD PTR [edx+0x37]
  4024ff:	ja     0x40253b
  402501:	fldenv [edx-0x7d]
  402504:	jmp    0x40250e
  402506:	and    edx,ecx
  402508:	inc    ebx
  402509:	outs   dx,BYTE PTR ds:[esi]
  40250a:	mov    esp,0x83d1c858
  40250f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402510:	adc    eax,0xed6993ee
  402515:	xchg   ebx,eax
  402516:	add    al,BYTE PTR [eax+0x2b]
  402519:	ja     0x40251b
  40251b:	(bad)  
  40251d:	xchg   esi,eax
  40251e:	fild   QWORD PTR [ecx+eiz*8]
  402521:	pop    esp
  402522:	int3   
  402523:	gs clc 
  402525:	loopne 0x40259f
  402527:	xor    eax,0xc950e8e9
  40252c:	adc    al,0x5e
  40252e:	mov    ah,ch
  402530:	fstp   QWORD PTR [eax-0x9]
  402533:	push   0x3e
  402535:	jecxz  0x40257e
  402537:	cmc    
  402538:	out    dx,eax
  402539:	xchg   ebx,eax
  40253a:	xor    DWORD PTR [edi+0x2e5a2a11],eax
  402540:	lds    ebp,FWORD PTR [edx-0x2889389e]
  402546:	js     0x4025c5
  402548:	ret    
  402549:	push   eax
  40254a:	data16 sahf 
  40254c:	push   ebx
  40254d:	jno    0x40258d
  40254f:	rcl    DWORD PTR ds:0x559a3902,0x52
  402556:	push   ebx
  402557:	ror    DWORD PTR [ecx+edx*2+0x64],1
  40255b:	adc    al,BYTE PTR [edi+ebp*2-0x51]
  40255f:	push   edi
  402560:	sbb    DWORD PTR [ecx-0xa],0xab678d3b
  402567:	out    0x10,eax
  402569:	addr16 and al,0x86
  40256c:	or     DWORD PTR [bx+si+0x5757],ecx
  402571:	inc    edi
  402572:	(bad)  
  402573:	pop    ss
  402574:	xchg   ecx,eax
  402575:	dec    ebx
  402576:	pop    ecx
  402577:	or     edi,DWORD PTR [ebx-0x3b]
  40257a:	cmp    al,0xba
  40257c:	xlat   BYTE PTR ds:[ebx]
  40257d:	sub    BYTE PTR [ecx+esi*4],al
  402580:	test   al,0x3a
  402582:	ja     0x40258e
  402584:	mov    ch,0x32
  402586:	adc    ebx,DWORD PTR [edx+eiz*4-0x51294fa2]
  40258d:	arpl   bp,bp
  40258f:	mov    esi,0x30270afb
  402594:	sbb    al,0xa9
  402596:	int    0x5d
  402598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402599:	adc    dl,BYTE PTR [ebx-0x26]
  40259c:	rol    DWORD PTR [ebp+0x78d94277],cl
  4025a2:	mov    edx,0x2b7dd2d2
  4025a7:	jmp    0xdd22741
  4025ac:	psubd  mm5,QWORD PTR [esi-0x5b2464af]
  4025b3:	scas   al,BYTE PTR es:[edi]
  4025b4:	dec    edi
  4025b5:	rol    BYTE PTR [edi+0x3e],cl
  4025b8:	add    BYTE PTR [ecx],0xa1
  4025bb:	xchg   edx,eax
  4025bc:	sub    edx,DWORD PTR [esi+0x7d]
  4025bf:	out    dx,al
  4025c0:	jmp    0xb028:0x11f7247f
  4025c7:	scas   al,BYTE PTR es:[di]
  4025c9:	(bad)  [ecx]
  4025cb:	push   ss
  4025cc:	sbb    esp,edi
  4025ce:	mov    DWORD PTR [ebp-0x70],0x3b72
  4025d5:	movzx  eax,WORD PTR ds:0x4282ff
  4025dc:	adc    DWORD PTR ds:0x42818b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428173,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428167,0x0
  4025fd:	mov    DWORD PTR ds:0x428313,0x76b5
  402607:	mov    DWORD PTR ds:0x42816f,edx
  40260d:	mov    DWORD PTR ds:0x428287,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428273
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428167,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42823f
  402645:	call   DWORD PTR ds:0x428d9c
  40264b:	sbb    DWORD PTR ds:0x42838b,0x36f
  402655:	adc    DWORD PTR ds:0x42830f,0x428197
  40265f:	sub    DWORD PTR ds:0x42837f,0x42831b
  402669:	and    DWORD PTR ds:0x42815f,0x42824b
  402673:	add    DWORD PTR ds:0x42831f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428167
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42815b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42828f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282ef,edx
  4026bd:	mov    DWORD PTR ds:0x42824b,ecx
  4026c3:	mov    DWORD PTR ds:0x428173,edx
  4026c9:	mov    DWORD PTR ds:0x42826f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42815b
  4026dd:	mov    DWORD PTR ds:0x42828f,edx
  4026e3:	cmp    DWORD PTR ds:0x42828f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428da0
  402708:	add    DWORD PTR ds:0x428297,0x4282f7
  402712:	sub    DWORD PTR ds:0x428313,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42816b,0x16a6
  402726:	dec    DWORD PTR ds:0x428187
  40272c:	and    DWORD PTR ds:0x42826b,edx
  402732:	or     DWORD PTR ds:0x4282fb,edx
  402738:	mov    eax,ds:0x42818f
  40273d:	and    DWORD PTR ds:0x4283a3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283a3
  402751:	sbb    DWORD PTR ds:0x42826f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42824f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428303
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x4324e8aa
  4027a0:	push   0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [esi+0x31],bh
  4027ab:	(bad)  
  4027ac:	es pusha 
  4027ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027af:	jmp    0x4027b6
  4027b1:	sub    eax,DWORD PTR [ecx]
  4027b3:	lods   al,BYTE PTR ds:[esi]
  4027b4:	push   ecx
  4027b5:	mov    esi,DWORD PTR [ebp+edx*8-0x1edd772a]
  4027bc:	and    DWORD PTR [ecx-0x595e60c1],edx
  4027c2:	cmp    eax,0x7e0c60f6
  4027c7:	mov    cl,0x9c
  4027c9:	push   edx
  4027ca:	dec    ebx
  4027cb:	lods   al,BYTE PTR ds:[esi]
  4027cc:	out    0x8f,al
  4027ce:	in     al,dx
  4027cf:	inc    esi
  4027d0:	mov    ds:0x3d1143a9,eax
  4027d5:	shl    BYTE PTR [ecx],0x7
  4027d8:	rcl    DWORD PTR [edx],1
  4027da:	rcr    al,cl
  4027dc:	push   0xffffff8f
  4027de:	mov    dl,0x20
  4027e0:	inc    edi
  4027e1:	adc    ebx,edx
  4027e3:	cdq    
  4027e4:	or     DWORD PTR [edi-0x61],0xe8725e9f
  4027eb:	push   es
  4027ec:	pop    ss
  4027ed:	pop    esi
  4027ee:	xchg   edi,eax
  4027ef:	loop   0x402773
  4027f1:	mov    eax,0x6d573781
  4027f6:	stos   BYTE PTR es:[edi],al
  4027f7:	shl    BYTE PTR [ecx],1
  4027f9:	sbb    ch,BYTE PTR [esi+0x4062c5d8]
  4027ff:	mov    eax,ds:0xfa5a776b
  402804:	sub    DWORD PTR [ebx],edx
  402806:	sub    BYTE PTR [edx-0x26],0xcc
  40280a:	in     eax,0x55
  40280c:	icebp  
  40280d:	mov    ebx,0xbf0e106c
  402812:	cmp    edi,DWORD PTR [esi-0x5c]
  402815:	out    0xae,eax
  402817:	mov    dl,0x29
  402819:	fs fwait
  40281b:	sbb    ch,BYTE PTR [esi]
  40281d:	stc    
  40281e:	xor    ebx,DWORD PTR [ecx]
  402820:	stos   BYTE PTR es:[edi],al
  402821:	xor    ch,BYTE PTR [esi+ebp*8+0x326b0b4]
  402828:	popa   
  402829:	cmp    eax,ecx
  40282b:	pop    edx
  40282c:	stos   BYTE PTR es:[edi],al
  40282d:	pushf  
  40282e:	lods   al,BYTE PTR ds:[esi]
  40282f:	mov    dh,0xa0
  402831:	js     0x402876
  402833:	rcr    BYTE PTR [esi-0x69],0xd2
  402837:	out    0x89,eax
  402839:	push   ebp
  40283a:	test   al,0xbd
  40283c:	lea    edx,[ebx+eiz*4+0x70]
  402840:	sbb    edx,esp
  402842:	jbe    0x402828
  402844:	leave  
  402845:	ret    
  402846:	int    0xb2
  402848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402849:	or     DWORD PTR [ecx+0x13],0xffffffbf
  40284d:	sbb    al,0x4f
  40284f:	in     al,0x7d
  402851:	mov    ds:0xe8798cf8,eax
  402856:	fcomp  QWORD PTR [edx+0x62]
  402859:	cmp    ah,BYTE PTR [eax+0x33542a01]
  40285f:	jno    0x402808
  402861:	arpl   WORD PTR [ebp+0x20],di
  402864:	inc    eax
  402865:	mov    ebx,0xf7df6d4d
  40286a:	add    eax,0xdf5ccddb
  40286f:	push   0xffffffbc
  402871:	adc    BYTE PTR [edx+0x47],cl
  402874:	xchg   esi,eax
  402875:	cmp    eax,DWORD PTR [esi-0x2a]
  402878:	adc    bh,dh
  40287a:	fdivr  st(1),st
  40287c:	fisttp DWORD PTR [edx-0x3d]
  40287f:	pop    esp
  402880:	lds    esp,FWORD PTR [edx+0x24]
  402883:	mov    eax,0x20688313
  402888:	ret    
  402889:	fldcw  WORD PTR [ecx]
  40288b:	mov    bh,0x61
  40288d:	loope  0x4028f8
  40288f:	rcr    BYTE PTR [esi+0x34b9f0af],1
  402895:	adc    dh,bh
  402897:	sub    bl,BYTE PTR [edi-0x32a13c5d]
  40289d:	add    ebx,DWORD PTR [esi]
  40289f:	jb     0x4028d3
  4028a1:	aaa    
  4028a2:	iret   
  4028a3:	push   es
  4028a4:	and    eax,0x9b70108d
  4028a9:	cmp    al,0x5
  4028ab:	test   BYTE PTR [eax-0x1bdcd1e],dh
  4028b1:	jmp    0x5b5dbee2
  4028b6:	mov    edx,0xdaf6c961
  4028bb:	pop    edx
  4028bc:	jae    0x402856
  4028be:	cmp    BYTE PTR [eax+0x1],al
  4028c1:	mov    DWORD PTR [ecx-0x66456082],0xa877866a
  4028cb:	cdq    
  4028cc:	sbb    ah,BYTE PTR [esi]
  4028ce:	pop    ebx
  4028cf:	fs int3 
  4028d1:	test   al,0xcf
  4028d3:	loope  0x40290f
  4028d5:	sub    ebx,DWORD PTR [esi-0x13463c61]
  4028db:	(bad)  
  4028dc:	scas   al,BYTE PTR es:[edi]
  4028dd:	(bad)  
  4028de:	es xor eax,0x2621d830
  4028e4:	popf   
  4028e5:	jg     0x325a5a0f
  4028eb:	sub    eax,0x556b8c51
  4028f0:	call   0x7a9061b5
  4028f5:	retf   0x8566
  4028f8:	ins    BYTE PTR es:[edi],dx
  4028f9:	jae    0x4028b4
  4028fb:	rcl    DWORD PTR gs:[ebx-0x1],cl
  4028ff:	mov    eax,0xe65c803f
  402904:	lahf   
  402905:	ds pop ebp
  402907:	sub    al,0xc7
  402909:	mov    cl,0x4e
  40290b:	jl     0x4028ff
  40290d:	inc    edx
  40290e:	add    eax,0xbc85c362
  402913:	int3   
  402914:	push   0xf997b4ea
  402919:	sub    DWORD PTR [edx],eax
  40291b:	in     al,dx
  40291c:	sti    
  40291d:	imul   eax,DWORD PTR [eax-0x5f34b52e],0xffffffb9
  402924:	js     0x402984
  402926:	push   esi
  402927:	repnz add edi,DWORD PTR [ebx+0x3f222766]
  40292e:	adc    al,0xe2
  402930:	add    BYTE PTR [esi+0x4348a461],ah
  402936:	int3   
  402937:	jns    0x402900
  402939:	push   ebx
  40293a:	loopne 0x40291a
  40293c:	mov    ds:0xa459d57d,al
  402941:	stos   DWORD PTR es:[edi],eax
  402942:	sti    
  402943:	ret    
  402944:	or     BYTE PTR [edx+edi*8],cl
  402947:	sub    eax,0x595d77f5
  40294c:	clc    
  40294d:	shl    cl,0x66
  402950:	aaa    
  402951:	mov    edi,0x9b3f8487
  402956:	popa   
  402957:	lahf   
  402958:	or     BYTE PTR [edx-0x437e24f5],0x6e
  40295f:	pushf  
  402960:	cmp    DWORD PTR [edx+esi*1-0x2f9dca12],eax
  402967:	push   es
  402968:	add    al,0xf
  40296a:	jnp    0x4029c7
  40296c:	adc    BYTE PTR [edx-0x6748a298],dl
  402972:	stos   DWORD PTR es:[edi],eax
  402973:	cmp    DWORD PTR [eax-0xb587aad],edx
  402979:	mov    ebp,0x36f565f1
  40297e:	pop    edi
  40297f:	dec    edx
  402980:	sub    eax,eax
  402982:	sar    BYTE PTR [edx],1
  402984:	inc    ebx
  402985:	sub    DWORD PTR [ecx-0x1c11a6b3],edi
  40298b:	repnz pop ebp
  40298d:	add    DWORD PTR [edx+0x2af6f208],ecx
  402993:	out    dx,al
  402994:	xchg   ebp,eax
  402995:	push   0xd501a39d
  40299a:	sar    BYTE PTR [ecx+0x10],1
  40299d:	shl    DWORD PTR [ebx],1
  40299f:	cmp    BYTE PTR [ecx-0x3f5078af],al
  4029a5:	js     0x4029a1
  4029a7:	mov    esp,0xa4b321fd
  4029ac:	sti    
  4029ad:	pop    es
  4029ae:	sbb    eax,0x232c0e85
  4029b3:	call   0x13ca:0x4d81f9a1
  4029ba:	cdq    
  4029bb:	mov    dl,cl
  4029bd:	lods   al,BYTE PTR ds:[esi]
  4029be:	ins    BYTE PTR es:[edi],dx
  4029bf:	inc    ecx
  4029c0:	jb     0x402983
  4029c2:	jbe    0x4029b3
  4029c4:	not    dl
  4029c6:	jae    0x4029d9
  4029c8:	lgs    edi,FWORD PTR [ecx+0x13]
  4029cc:	xchg   esi,eax
  4029cd:	(bad)  
  4029ce:	fmul   DWORD PTR [ebx+0x76]
  4029d1:	ds inc esp
  4029d3:	fidiv  DWORD PTR [ecx+edi*2]
  4029d6:	pop    esi
  4029d7:	(bad)  
  4029d8:	lock mov esp,edx
  4029db:	sbb    al,0x4d
  4029dd:	scas   eax,DWORD PTR es:[edi]
  4029de:	test   al,0xea
  4029e0:	inc    esp
  4029e1:	cmp    eax,DWORD PTR fs:[edi+0x24]
  4029e5:	sub    bl,BYTE PTR [eax]
  4029e7:	jnp    0x4029ef
  4029e9:	popa   
  4029ea:	mov    al,0xcf
  4029ec:	xor    eax,0xab1f1312
  4029f1:	jns    0x402977
  4029f3:	outs   dx,DWORD PTR ds:[esi]
  4029f4:	(bad)  
  4029f5:	mov    eax,0xbd142788
  4029fa:	shl    DWORD PTR [esi+edx*8-0x652d3986],1
  402a01:	push   esi
  402a02:	(bad)  
  402a03:	ins    DWORD PTR es:[edi],dx
  402a04:	jmp    0x402a82
  402a06:	aaa    
  402a07:	cwde   
  402a08:	mov    bh,BYTE PTR [edi+0x27]
  402a0b:	lods   eax,DWORD PTR ds:[esi]
  402a0c:	mov    cl,0xa2
  402a0e:	cli    
  402a0f:	or     bh,cl
  402a11:	lds    edi,FWORD PTR [edx-0x5409c7a6]
  402a17:	jnp    0x402a8c
  402a19:	jge    0x402a52
  402a1b:	mov    ecx,0x31bdaa49
  402a20:	mov    ch,0xdd
  402a22:	bound  esp,QWORD PTR [edi-0x15]
  402a25:	ds (bad) 
  402a28:	xchg   esp,eax
  402a29:	sbb    eax,0x172619ae
  402a2e:	jge    0x402aaf
  402a30:	xchg   edx,eax
  402a31:	cmp    bh,BYTE PTR [edx-0x47]
  402a34:	sbb    al,0x1e
  402a36:	mov    BYTE PTR [ecx+0x6d3168d0],bh
  402a3c:	xchg   edx,eax
  402a3d:	(bad)  
  402a3e:	jmp    0x4029db
  402a40:	and    eax,0x2ba85304
  402a45:	int    0x16
  402a47:	stos   DWORD PTR es:[edi],eax
  402a48:	fldenv [edx+0x59e9e9ba]
  402a4e:	rol    DWORD PTR [ebp+0x68b371f1],0xa3
  402a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a56:	es sbb al,0x30
  402a59:	into   
  402a5a:	call   FWORD PTR [edi+0x36]
  402a5d:	mov    cl,0xd9
  402a5f:	jge    0x402a42
  402a61:	int    0x1a
  402a63:	xchg   ebp,eax
  402a64:	test   eax,0x4c8f8e49
  402a69:	loope  0x402ad9
  402a6b:	(bad)  
  402a6c:	mov    ds:0x14c80ac2,eax
  402a71:	nop
  402a72:	push   ebp
  402a73:	jae    0x402aac
  402a75:	popf   
  402a76:	mov    al,0xfa
  402a78:	mov    ah,0xf
  402a7a:	cmc    
  402a7b:	arpl   WORD PTR [ecx],dx
  402a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a7e:	mov    ds:0xef34ac9f,al
  402a83:	test   eax,0x69f43e44
  402a88:	sbb    al,0xe4
  402a8a:	jp     0x402a51
  402a8c:	jl     0x402b00
  402a8e:	in     al,0xf4
  402a90:	rcl    ebp,1
  402a92:	or     BYTE PTR [edi-0x1e59c095],0xc3
  402a99:	outs   dx,DWORD PTR ds:[esi]
  402a9a:	adc    al,0xbc
  402a9c:	jecxz  0x402b1a
  402a9e:	xchg   BYTE PTR [esi-0x2791f0d8],bh
  402aa4:	pop    esp
  402aa5:	mov    ecx,0xd629133d
  402aaa:	adc    eax,0xdc4bdad
  402aaf:	mov    dl,0xcc
  402ab1:	jae    0x402a8b
  402ab3:	mov    esp,0xcf83e5ed
  402ab8:	jl     0x402aff
  402aba:	mov    bh,0x77
  402abc:	mov    cs,WORD PTR [ebx]
  402abe:	dec    eax
  402abf:	push   edx
  402ac0:	push   eax
  402ac1:	es sbb eax,0x1527b36a
  402ac7:	aas    
  402ac8:	into   
  402ac9:	retf   
  402aca:	sub    esp,edx
  402acc:	(bad)  
  402acd:	cli    
  402ace:	push   0x966a1406
  402ad3:	ror    cl,cl
  402ad5:	xchg   ebp,eax
  402ad6:	sbb    BYTE PTR [edx-0x7c2555c3],ah
  402adc:	sahf   
  402add:	std    
  402ade:	sub    al,0xe5
  402ae0:	push   ebx
  402ae1:	cwde   
  402ae2:	push   edx
  402ae3:	sub    eax,0xca7f1021
  402ae8:	and    DWORD PTR [ebx+eiz*8+0x13ec3de9],esp
  402aef:	jae    0x402abd
  402af1:	out    dx,eax
  402af2:	stos   DWORD PTR es:[edi],eax
  402af3:	add    eax,DWORD PTR [ebx]
  402af5:	(bad)  
  402af6:	xor    eax,0x994d9f48
  402afb:	(bad)  
  402afc:	mov    al,ds:0x1019e482
  402b01:	scas   al,BYTE PTR es:[edi]
  402b02:	inc    esp
  402b03:	popf   
  402b04:	mov    cl,0x83
  402b06:	(bad)  
  402b07:	adc    BYTE PTR cs:[edx-0x31],ah
  402b0b:	pusha  
  402b0c:	pushf  
  402b0d:	jo     0x402b62
  402b0f:	cmp    al,0x49
  402b11:	pop    ecx
  402b12:	sub    esp,ecx
  402b14:	in     eax,0x8b
  402b16:	(bad)  
  402b17:	out    0x16,eax
  402b19:	(bad)  
  402b1a:	mov    BYTE PTR [edx+0x30],bh
  402b1d:	pop    edx
  402b1e:	test   al,0x1f
  402b20:	push   esi
  402b21:	call   0x4f720496
  402b26:	(bad)  
  402b27:	mov    ah,0xeb
  402b29:	fwait
  402b2a:	bound  esp,QWORD PTR [ecx+0x3cf730b2]
  402b30:	jbe    0x402b0a
  402b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b33:	or     BYTE PTR [ecx],ah
  402b35:	loope  0x402b51
  402b37:	dec    edi
  402b38:	mov    cl,0xc8
  402b3a:	mov    edi,0x4a64962f
  402b3f:	iret   
  402b40:	sub    eax,edi
  402b42:	jb     0x402b54
  402b44:	(bad)  
  402b45:	std    
  402b46:	pop    edx
  402b47:	sbb    al,bl
  402b49:	sahf   
  402b4a:	hlt    
  402b4b:	pop    esi
  402b4c:	loope  0x402baf
  402b4e:	sahf   
  402b4f:	in     al,0xb6
  402b51:	sbb    al,0x16
  402b53:	mov    al,0xcf
  402b55:	add    dl,ch
  402b57:	mov    ebp,0x99f39031
  402b5c:	mov    DWORD PTR [ebx],edx
  402b5e:	dec    ebp
  402b5f:	int3   
  402b60:	popf   
  402b61:	int3   
  402b62:	mov    ds:0x8f3b5aab,eax
  402b67:	test   BYTE PTR [ecx-0x3d],0x51
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x428397,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x42206c
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428283,0x0
  402b94:	mov    edx,DWORD PTR ds:0x428397
  402b9a:	mov    DWORD PTR ds:0x42818f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428233
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42830b,ebx
  402bb6:	cmp    DWORD PTR ds:0x428283,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d84
  402bcc:	mov    edx,DWORD PTR ds:0x428293
  402bd2:	add    DWORD PTR ds:0x42826b,edx
  402bd8:	mov    DWORD PTR ds:0x42830f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42824b
  402be8:	mov    edx,DWORD PTR ds:0x42831b
  402bee:	sbb    DWORD PTR ds:0x4282a7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428263
  402bfa:	xor    DWORD PTR ds:0x428327,edx
  402c00:	and    edx,DWORD PTR ds:0x4282ff
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42822b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281d3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42825b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422588
  402c34:	or     DWORD PTR ds:0x428153,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x4282fb,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42838f,0x42836b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [ebx+ebx*1-0x2b],0x59
  402c79:	stos   BYTE PTR es:[edi],al
  402c7a:	mov    dh,0xf4
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [ecx-0x15],bh
  402c84:	or     eax,0xae87b027
  402c89:	mov    fs,WORD PTR [edx+0x6495567f]
  402c8f:	pop    ds
  402c90:	call   0x2316:0x64e825a1
  402c97:	or     al,0x13
  402c99:	cwde   
  402c9a:	push   edi
  402c9b:	or     BYTE PTR [esi+ecx*1+0x77c89d33],dh
  402ca2:	mov    eax,ds:0x8a230489
  402ca7:	hlt    
  402ca8:	in     al,0x6d
  402caa:	lahf   
  402cab:	int3   
  402cac:	cmp    ebp,DWORD PTR [eax]
  402cae:	ins    BYTE PTR es:[edi],dx
  402caf:	fstp   QWORD PTR [edx-0x53d4fc44]
  402cb5:	idiv   DWORD PTR [edi+eiz*4]
  402cb8:	xlat   BYTE PTR ds:[ebx]
  402cb9:	pop    edx
  402cba:	loop   0x402c86
  402cbc:	push   es
  402cbd:	mov    cl,0x70
  402cbf:	inc    edi
  402cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc1:	or     BYTE PTR [edi],cl
  402cc3:	popa   
  402cc4:	xor    al,bl
  402cc6:	sub    eax,0x9e9a37c6
  402ccb:	adc    al,0x30
  402ccd:	sbb    BYTE PTR cs:[ebp-0x21fe7e1e],ch
  402cd4:	jo     0x402c76
  402cd6:	hlt    
  402cd7:	les    ecx,FWORD PTR [edi+0x34e32826]
  402cdd:	or     al,0x42
  402cdf:	or     DWORD PTR fs:[esi+0x7b],0xd1101dc8
  402ce7:	push   ebx
  402ce8:	aas    
  402ce9:	cmp    dl,BYTE PTR [edx+edi*8+0x4b]
  402ced:	mov    edi,0x3311663b
  402cf2:	mov    esp,0x1656d4e
  402cf7:	jnp    0x402c7f
  402cf9:	mov    edi,DWORD PTR [edi-0x6975b298]
  402cff:	icebp  
  402d00:	adc    BYTE PTR [ecx-0x80],0x6f
  402d04:	pushf  
  402d05:	inc    edx
  402d06:	inc    edi
  402d07:	aas    
  402d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d09:	das    
  402d0a:	push   ds
  402d0b:	leave  
  402d0c:	mov    al,0xbd
  402d0e:	test   bl,bh
  402d10:	dec    ebx
  402d11:	jge    0x402d25
  402d13:	mov    eax,0xa1bec0c5
  402d18:	sti    
  402d19:	and    BYTE PTR [edx],0x22
  402d1c:	mov    eax,0x5a8acbba
  402d21:	bound  esi,QWORD PTR [edx-0x4666df06]
  402d27:	call   0xcc1eac84
  402d2c:	call   0x1172584
  402d31:	(bad)  
  402d32:	adc    esi,DWORD PTR [esi]
  402d34:	xchg   ecx,eax
  402d35:	mov    ah,0x2f
  402d37:	cmp    al,0xe5
  402d39:	mov    edx,esp
  402d3b:	lock shl DWORD PTR [edi-0x65ef4c71],cl
  402d42:	push   ss
  402d43:	ja     0x402da1
  402d45:	adc    cl,BYTE PTR [esi]
  402d47:	(bad)
  402d4a:	dec    esi
  402d4b:	or     BYTE PTR [ebx-0x241077f4],dh
  402d51:	adc    ah,BYTE PTR [ebx+eax*2]
  402d54:	clc    
  402d55:	pop    eax
  402d56:	and    eax,0x41e62085
  402d5b:	test   al,0xf5
  402d5d:	xchg   esp,eax
  402d5e:	adc    cl,BYTE PTR [edx+0x2d87a78d]
  402d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d65:	push   ebp
  402d66:	clc    
  402d67:	jp     0x402d4d
  402d69:	and    eax,0xbbd8043e
  402d6e:	fwait
  402d6f:	lock jbe 0x402d2d
  402d72:	cmp    BYTE PTR [eax-0x5f],dh
  402d75:	inc    ebp
  402d76:	mov    edx,0x64750920
  402d7b:	sub    eax,0xffffff95
  402d7e:	xchg   ebp,eax
  402d7f:	sbb    DWORD PTR [eax],0x5b770047
  402d85:	jae    0x402dce
  402d87:	loop   0x402e01
  402d89:	pop    eax
  402d8a:	fs jb  0x402dbf
  402d8d:	outs   dx,BYTE PTR ds:[esi]
  402d8e:	aam    0xb3
  402d90:	sbb    eax,0x4ffc23b0
  402d95:	push   ss
  402d96:	sub    eax,0x8b3ccf2
  402d9b:	mov    ecx,0xc6a65e8a
  402da0:	mov    eax,0x75eeca88
  402da5:	(bad)  
  402da6:	out    0x39,al
  402da8:	in     al,0xfb
  402daa:	pop    ds
  402dab:	hlt    
  402dac:	add    eax,DWORD PTR [esi+0x257c811a]
  402db2:	ret    
  402db3:	stos   BYTE PTR es:[edi],al
  402db4:	les    ebx,FWORD PTR [eax-0x42f38ad9]
  402dba:	push   es
  402dbb:	fsubp  st(1),st
  402dbd:	daa    
  402dbe:	gs pop ds
  402dc0:	push   ebx
  402dc1:	cld    
  402dc2:	in     al,dx
  402dc3:	int    0xe0
  402dc5:	adc    eax,0xfe79e423
  402dca:	test   al,0x7a
  402dcc:	jp     0x402e36
  402dce:	shr    DWORD PTR [edx+0xb653d58],1
  402dd4:	xchg   esi,eax
  402dd5:	jle    0x402da3
  402dd7:	inc    ebp
  402dd8:	and    ch,dl
  402dda:	jbe    0x402df7
  402ddc:	xor    ecx,0x35
  402ddf:	inc    esp
  402de0:	sub    dl,BYTE PTR [ebx]
  402de2:	(bad)  
  402de3:	mov    es,esi
  402de5:	cdq    
  402de6:	push   esi
  402de7:	rcr    DWORD PTR [edx+0x22],cl
  402dea:	outs   dx,DWORD PTR ds:[esi]
  402deb:	sub    al,0x8e
  402ded:	mov    edi,eax
  402def:	adc    BYTE PTR [esp+0x7004c2e4],0xa7
  402df7:	pop    ecx
  402df8:	xor    BYTE PTR [edx],ch
  402dfa:	sub    al,0x16
  402dfc:	push   ss
  402dfd:	jo     0x402dde
  402dff:	lahf   
  402e00:	outs   dx,DWORD PTR ds:[esi]
  402e01:	dec    esi
  402e02:	or     BYTE PTR [edi-0x2f143fd7],dl
  402e08:	cmp    DWORD PTR [esi],0x67d68721
  402e0e:	loop   0x402de5
  402e10:	push   ss
  402e11:	cs sbb al,0xcf
  402e14:	dec    esp
  402e15:	jne    0x402d9d
  402e17:	push   0xc71e1261
  402e1c:	jl     0x402e1d
  402e1e:	mov    al,ds:0x9018a555
  402e23:	test   BYTE PTR [ecx+0x6fc6faf9],0xd5
  402e2a:	aam    0xb3
  402e2c:	mov    ch,0xc1
  402e2e:	cs jb  0x402e52
  402e31:	(bad)
  402e34:	dec    esp
  402e35:	push   0x3ffdfad2
  402e3a:	adc    edi,DWORD PTR [ebx]
  402e3c:	jmp    0x4e50c3fb
  402e41:	cli    
  402e42:	dec    ebp
  402e43:	sbb    ah,BYTE PTR [edx+0x9]
  402e46:	aad    0x44
  402e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e49:	push   0xc06c1066
  402e4e:	xor    al,0xc3
  402e50:	cs jbe 0x402e6f
  402e53:	gs stos BYTE PTR es:[edi],al
  402e55:	or     bl,BYTE PTR [ecx]
  402e57:	loope  0x402e17
  402e59:	or     al,0x91
  402e5b:	push   0x48
  402e5d:	add    DWORD PTR [ebx],ecx
  402e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e60:	xchg   ecx,eax
  402e61:	dec    edx
  402e62:	pop    ss
  402e63:	mov    edx,0x73e9dd1e
  402e68:	adc    eax,0xca34f4c0
  402e6d:	pushf  
  402e6e:	in     eax,0x7
  402e70:	neg    DWORD PTR [esi+0x2bfc2cef]
  402e76:	std    
  402e77:	push   0xffffff8d
  402e79:	imul   esi,DWORD PTR [ebx],0xee543687
  402e7f:	je     0x402e82
  402e81:	mov    dh,BYTE PTR [ebx]
  402e83:	inc    ecx
  402e84:	lahf   
  402e85:	ret    0x9973
  402e88:	(bad)  
  402e89:	mov    ss,WORD PTR [ebx-0x3e]
  402e8c:	inc    DWORD PTR [esi+0x7f]
  402e8f:	cdq    
  402e90:	jbe    0x402ed4
  402e92:	sbb    DWORD PTR [eax-0x30673b6f],esi
  402e98:	ins    DWORD PTR es:[edi],dx
  402e99:	xchg   ecx,eax
  402e9a:	bound  esi,QWORD PTR [edi]
  402e9c:	dec    ecx
  402e9d:	clc    
  402e9e:	and    DWORD PTR [edx-0x1c],edi
  402ea1:	fldcw  WORD PTR [esi-0x20]
  402ea4:	mov    esi,0x600e2571
  402ea9:	mov    eax,ds:0x43714551
  402eae:	(bad)  
  402eb0:	sbb    eax,0x1dbc6cd
  402eb5:	xor    al,0xa8
  402eb7:	xor    DWORD PTR [ebx-0x136ee61d],edi
  402ebd:	xchg   esp,eax
  402ebe:	xor    esp,ebx
  402ec0:	js     0x402e95
  402ec2:	push   ds
  402ec3:	test   eax,0x459ee360
  402ec8:	jns    0x402e7a
  402eca:	call   0x8080:0x9515819a
  402ed1:	add    al,0x7f
  402ed3:	adc    ch,0x78
  402ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed7:	mov    ss,ebx
  402ed9:	call   FWORD PTR [eax-0x56]
  402edc:	xor    al,0x8
  402ede:	ja     0x402e94
  402ee0:	cld    
  402ee1:	xor    al,0xea
  402ee3:	cmp    cl,dh
  402ee5:	hlt    
  402ee6:	pusha  
  402ee7:	arpl   WORD PTR [edx+0x20],sp
  402eea:	loope  0x402f4a
  402eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eed:	jge    0x402f35
  402eef:	popa   
  402ef0:	ds in  eax,dx
  402ef2:	sub    eax,0xe8dcbb6c
  402ef7:	fs mov ebp,0xaca5fc3e
  402efd:	xor    BYTE PTR [ecx+edi*2-0x3ce6283f],dl
  402f04:	add    al,BYTE PTR [esi-0xf9cb0b2]
  402f0a:	adc    ebp,DWORD PTR [edi+0x65]
  402f0d:	push   edi
  402f0e:	jp     0x402f07
  402f10:	repnz adc BYTE PTR [edi+edx*2],al
  402f14:	inc    eax
  402f15:	add    DWORD PTR ds:0x23510c2a,ecx
  402f1b:	adc    al,0x14
  402f1d:	ins    DWORD PTR es:[edi],dx
  402f1e:	mov    bl,0xb
  402f20:	add    ch,BYTE PTR [eax-0x12]
  402f23:	(bad)  
  402f24:	icebp  
  402f25:	stc    
  402f26:	adc    BYTE PTR [edx+edx*1-0x11],bl
  402f2a:	jne    0x402ee1
  402f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f2d:	inc    ecx
  402f2e:	repz add ecx,DWORD PTR [edx]
  402f31:	sbb    eax,0x95cecf6
  402f36:	icebp  
  402f37:	stos   DWORD PTR es:[edi],eax
  402f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f39:	fwait
  402f3a:	push   edi
  402f3b:	mov    ds:0xb8b0e21d,eax
  402f40:	loope  0x402f1e
  402f42:	mov    edx,0xfca603af
  402f47:	cmp    ah,ch
  402f49:	scas   al,BYTE PTR es:[edi]
  402f4a:	shl    al,1
  402f4c:	xor    BYTE PTR [edx+0x6474a001],ah
  402f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f53:	sub    eax,0xf5f379f2
  402f58:	jmp    FWORD PTR [edi-0xc]
  402f5b:	nop
  402f5c:	dec    eax
  402f5d:	jnp    0x402f19
  402f5f:	(bad)  
  402f60:	popa   
  402f61:	xchg   dl,dh
  402f63:	push   ebp
  402f64:	clc    
  402f65:	lds    esi,FWORD PTR [eax+0x48549f3c]
  402f6b:	daa    
  402f6c:	outs   dx,DWORD PTR ds:[esi]
  402f6d:	jae    0x402f29
  402f6f:	test   al,0xe2
  402f71:	jle    0x402f0d
  402f73:	lock jns 0x402f2e
  402f76:	jmp    0x6b6f278a
  402f7b:	fidiv  DWORD PTR [edi]
  402f7d:	sahf   
  402f7e:	adc    DWORD PTR [ecx],ebp
  402f80:	inc    ebx
  402f81:	jo     0x402fd2
  402f83:	cmp    ecx,esp
  402f85:	sbb    eax,0x76c5b23
  402f8a:	dec    edi
  402f8b:	inc    eax
  402f8c:	dec    esp
  402f8d:	or     ebp,ebp
  402f8f:	pusha  
  402f90:	inc    ecx
  402f91:	mov    WORD PTR [eax+0xe],ss
  402f94:	call   0x1e0f1057
  402f99:	pusha  
  402f9a:	in     al,0xed
  402f9c:	mov    ds:0x42c8d6db,eax
  402fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fa2:	pop    edi
  402fa3:	xor    DWORD PTR [esi-0x1d],eax
  402fa6:	pop    edx
  402fa7:	adc    DWORD PTR [edi],ebx
  402fa9:	push   ebx
  402faa:	cmp    ecx,esi
  402fac:	in     eax,0xaa
  402fae:	or     eax,0xfdc2d930
  402fb3:	jnp    0x402fa6
  402fb5:	psadbw mm3,mm2
  402fb8:	pop    eax
  402fb9:	inc    ebp
  402fba:	dec    esp
  402fbb:	stos   DWORD PTR es:[edi],eax
  402fbc:	rol    BYTE PTR [esi],cl
  402fbe:	and    esi,DWORD PTR [esi-0x3e830523]
  402fc4:	fdiv   DWORD PTR [esi-0x6e7930f4]
  402fca:	inc    ecx
  402fcb:	sbb    DWORD PTR [ebx+0x7697d58c],esi
  402fd1:	push   ebp
  402fd2:	(bad)  
  402fd3:	mov    esp,0x60327c70
  402fd8:	jae    0x402fcb
  402fda:	loopne 0x403017
  402fdc:	xor    al,0x37
  402fde:	out    0xb0,al
  402fe0:	ror    BYTE PTR ds:0x36a81307,1
  402fe6:	and    DWORD PTR [ebx],edx
  402fe8:	test   DWORD PTR [ebp-0x66],ebx
  402feb:	push   ebx
  402fec:	jne    0x40305f
  402fee:	xor    BYTE PTR [edx-0x3fb9f2e],dl
  402ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ff5:	cmp    al,BYTE PTR [ebx+0x7e298600]
  402ffb:	mov    DWORD PTR [ebp-0x55],ebx
  402ffe:	inc    edx
  402fff:	cmc    
  403000:	jg     0x403010
  403002:	and    al,0x77
  403004:	sub    BYTE PTR [esi-0x1a67d824],bh
  40300a:	popa   
  40300b:	dec    ebp
  40300c:	js     0x402fda
  40300e:	arpl   WORD PTR [edi-0x76],sp
  403011:	xor    eax,edx
  403013:	les    ecx,FWORD PTR [edx]
  403015:	outs   dx,DWORD PTR ds:[esi]
  403016:	lods   al,BYTE PTR ds:[esi]
  403017:	sub    BYTE PTR [ecx+0x54],dl
  40301a:	fsubr  DWORD PTR [ecx]
  40301c:	pop    ebp
  40301d:	inc    ecx
  40301e:	loopne 0x40300f
  403020:	xor    BYTE PTR [edi+ebx*4-0x2],ch
  403024:	ss jo  0x40308c
  403027:	mov    al,0xa9
  403029:	mov    ch,0x2a
  40302b:	das    
  40302c:	popf   
  40302d:	xorps  xmm3,XMMWORD PTR [edx+eax*2+0x49ee7454]
  403035:	imul   edx,edi,0xfffffffe
  403038:	sbb    ah,BYTE PTR [edi-0x23e511d0]
  40303e:	scas   eax,DWORD PTR es:[edi]
  40303f:	pushf  
  403040:	or     al,0x47
  403042:	mov    bh,0x23
  403044:	retf   0xc281
  403047:	arpl   WORD PTR [eax+eax*1],si
  40304a:	add    BYTE PTR [ebx-0x35f433ab],cl
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x42829b,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x42839f,0x0
  403071:	mov    DWORD PTR ds:0x4283a3,edx
  403077:	mov    DWORD PTR ds:0x4282eb,0x1413
  403081:	mov    edx,DWORD PTR ds:0x428393
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42815f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x42839f,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428da4
  4030b1:	mov    DWORD PTR ds:0x42824b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42826f
  4030c1:	or     edx,DWORD PTR ds:0x42830b
  4030c7:	add    edx,DWORD PTR ds:0x42818f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x428397,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42831f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428383
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283a3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42815b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283a7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x40317f
  403121:	add    eax,0xec3d7c73
  403126:	sbb    BYTE PTR [eax],bl
  403128:	sahf   
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [esi-0x52],ah
  40312e:	mov    esi,ebx
  403130:	jmp    0x67055c0f
  403135:	inc    ebp
  403136:	add    al,0xe9
  403138:	mov    eax,0xafc14ee
  40313d:	in     eax,0xeb
  40313f:	mov    dl,0x3d
  403141:	push   0x11
  403143:	les    ebp,FWORD PTR [eax-0x125e19f0]
  403149:	add    BYTE PTR [ebp-0x52],bh
  40314c:	push   ecx
  40314d:	jmp    0x6cf4f92f
  403152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403153:	push   esp
  403154:	mov    ah,0xa9
  403156:	out    dx,eax
  403157:	outs   dx,DWORD PTR ds:[esi]
  403158:	stos   BYTE PTR es:[edi],al
  403159:	inc    esp
  40315a:	out    0xff,eax
  40315c:	shl    DWORD PTR ds:0x8856f502,cl
  403162:	add    eax,0x8f33065a
  403167:	xchg   esp,eax
  403168:	aad    0x4f
  40316a:	shr    BYTE PTR [ebp+0x2bc9287a],1
  403170:	outs   dx,DWORD PTR ds:[esi]
  403171:	cmp    al,0x64
  403173:	sbb    eax,0x60141a6c
  403178:	pop    esi
  403179:	adc    BYTE PTR [edi],cl
  40317b:	add    esp,DWORD PTR ds:0x175e95ee
  403181:	nop
  403182:	or     al,BYTE PTR [eax-0x59dba8ff]
  403188:	add    dh,BYTE PTR [ebx-0x66ad9260]
  40318e:	adc    eax,0x15ce559d
  403193:	jbe    0x403166
  403195:	sbb    DWORD PTR [edx],edi
  403197:	adc    edx,DWORD PTR [esi]
  403199:	or     esp,DWORD PTR [edi-0x184ff356]
  40319f:	or     al,0x98
  4031a1:	cwde   
  4031a2:	pushf  
  4031a3:	sub    cl,BYTE PTR gs:[ecx]
  4031a6:	lock adc DWORD PTR [ecx*8-0x7308ba2f],eax
  4031ae:	dec    eax
  4031af:	outs   dx,BYTE PTR ds:[esi]
  4031b0:	les    edx,FWORD PTR [edx]
  4031b2:	xchg   BYTE PTR [ecx-0x7e],dl
  4031b5:	fwait
  4031b6:	cmp    DWORD PTR [edi-0xcd2c603],0x3
  4031bd:	loopne 0x40322e
  4031bf:	jl     0x4031ca
  4031c1:	in     eax,0xdc
  4031c3:	xor    DWORD PTR [edi-0x4153e966],ebp
  4031c9:	pop    es
  4031ca:	call   0xe8b43902
  4031cf:	leave  
  4031d0:	mov    eax,0xc052d262
  4031d5:	xor    BYTE PTR [ecx],cl
  4031d7:	retf   
  4031d8:	xor    ecx,edx
  4031da:	sub    ebp,esi
  4031dc:	jne    0x403189
  4031de:	imul   eax,edx,0xc5a56a61
  4031e4:	mov    cl,BYTE PTR [edi]
  4031e6:	je     0x403215
  4031e8:	call   0x8210f7f7
  4031ed:	fcmovb st,st(2)
  4031ef:	push   edi
  4031f0:	cs icebp 
  4031f2:	ja     0x4031ca
  4031f4:	xchg   esp,eax
  4031f5:	call   eax
  4031f7:	ret    0x3fd5
  4031fa:	std    
  4031fb:	jecxz  0x403242
  4031fd:	push   ss
  4031fe:	test   al,0x1c
  403200:	outs   dx,BYTE PTR ds:[esi]
  403201:	push   eax
  403202:	or     BYTE PTR [ebp+0x28f00ac6],dh
  403208:	mov    ch,0x5a
  40320a:	sets   BYTE PTR [ebp+0x54]
  40320e:	adc    eax,0xc7e8cb13
  403213:	inc    esi
  403214:	xor    bh,BYTE PTR [edx+ebp*8+0x5e0a4886]
  40321b:	dec    ebp
  40321c:	mov    esp,0x629a978d
  403221:	pop    ebp
  403222:	push   edi
  403223:	fwait
  403224:	push   0xfffffffc
  403226:	xchg   edi,eax
  403227:	jb     0x40327e
  403229:	(bad)  
  40322a:	jmp    0x9d7f3028
  40322f:	cli    
  403230:	pop    esp
  403231:	aaa    
  403232:	stos   BYTE PTR es:[edi],al
  403233:	jo     0x40328d
  403235:	cli    
  403236:	jl     0x4032ad
  403238:	sbb    al,dh
  40323a:	or     eax,0x5b879c1
  40323f:	push   es
  403240:	xchg   al,bh
  403242:	sub    eax,0xda3ebe3e
  403247:	lock or ebp,DWORD PTR [edi+eiz*4-0x37]
  40324c:	sub    eax,0x8b88ad31
  403251:	outs   dx,BYTE PTR ds:[esi]
  403252:	call   0x4c5dc7ed
  403257:	cmp    eax,0xd780453d
  40325c:	sar    DWORD PTR [ecx],cl
  40325e:	cs add eax,0xd07f349c
  403264:	dec    ebp
  403265:	push   eax
  403266:	repnz stc 
  403268:	mov    al,ds:0x3567c64b
  40326d:	pop    eax
  40326e:	or     esi,ebp
  403270:	and    eax,0x284317a8
  403275:	bound  edx,QWORD PTR fs:[ebp+0x22]
  403279:	xchg   ebp,eax
  40327a:	push   ss
  40327b:	mov    al,0xfc
  40327d:	addr16 in eax,dx
  40327f:	cmp    BYTE PTR [ebx-0x37],cl
  403282:	and    ecx,DWORD PTR [edx-0x4c]
  403285:	and    DWORD PTR [eax+0x51],ebx
  403288:	xchg   esp,eax
  403289:	loop   0x40321d
  40328b:	add    BYTE PTR [ecx+0x391c5b92],dh
  403291:	or     al,0x88
  403293:	xchg   esi,eax
  403294:	daa    
  403295:	fwait
  403296:	out    0x46,eax
  403298:	sub    dl,bh
  40329a:	sub    dl,BYTE PTR [ebx]
  40329c:	cmp    eax,DWORD PTR [eax+0x40ee7f0f]
  4032a2:	inc    eax
  4032a3:	aad    0xc4
  4032a5:	dec    ebx
  4032a6:	int3   
  4032a7:	call   FWORD PTR [edx]
  4032a9:	add    esi,DWORD PTR [edi+0x2d]
  4032ac:	sbb    eax,DWORD PTR [edx+0x678b313a]
  4032b2:	pop    esp
  4032b3:	mov    esp,0xd23b54d1
  4032b8:	test   BYTE PTR [edx+0x6d],ah
  4032bb:	jno    0x4032e9
  4032bd:	xor    al,0xc4
  4032bf:	imul   eax,DWORD PTR [esi],0x2c
  4032c2:	(bad)
  4032c6:	lock (bad) 
  4032c9:	xlat   BYTE PTR ds:[ebx]
  4032ca:	dec    edx
  4032cb:	xchg   BYTE PTR [edx+0x7588f170],bh
  4032d1:	pop    ebp
  4032d2:	arpl   WORD PTR [edx+0x47],si
  4032d5:	jno    0x403330
  4032d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d8:	or     BYTE PTR [eax],al
  4032da:	push   cs
  4032db:	stos   DWORD PTR es:[edi],eax
  4032dc:	pop    eax
  4032dd:	pop    es
  4032de:	aam    0x67
  4032e0:	das    
  4032e1:	push   ss
  4032e2:	iret   
  4032e3:	jg     0x40332e
  4032e5:	push   esi
  4032e6:	popa   
  4032e7:	cmp    DWORD PTR [esi-0x3a044e99],esi
  4032ed:	mov    ebx,0xef8a73b9
  4032f2:	call   0x88c5:0xd1d7fb76
  4032f9:	jecxz  0x403347
  4032fb:	cmc    
  4032fc:	(bad)
  403300:	es adc eax,0x18c55b3d
  403306:	outs   dx,DWORD PTR ds:[esi]
  403307:	ins    BYTE PTR es:[edi],dx
  403308:	inc    ebp
  403309:	inc    ecx
  40330a:	clc    
  40330b:	dec    ecx
  40330c:	adc    DWORD PTR [ecx+eiz*1-0x5ceccd4d],eax
  403313:	or     ebx,DWORD PTR [esi-0x24]
  403316:	jg     0x4032b5
  403318:	mov    es,WORD PTR [edx]
  40331a:	loopne 0x403334
  40331c:	mov    ebp,DWORD PTR [ecx*8-0xa2a5309]
  403323:	and    eax,0x7eb44037
  403328:	sbb    al,0x2e
  40332a:	xor    DWORD PTR [ecx],0xffffffff
  40332d:	or     BYTE PTR [ebx-0x1d],ch
  403330:	cmp    ecx,DWORD PTR [esi-0x55]
  403333:	and    DWORD PTR [eax-0x3703d857],eax
  403339:	lahf   
  40333a:	pop    eax
  40333b:	mov    ah,0x62
  40333d:	in     eax,dx
  40333e:	hlt    
  40333f:	(bad)  
  403340:	xchg   esp,eax
  403341:	and    BYTE PTR [ebx-0x1d],dh
  403344:	ss mov ah,0xb6
  403347:	inc    edi
  403348:	out    dx,eax
  403349:	rcl    DWORD PTR [esi],cl
  40334b:	mov    ebp,0x3809b404
  403350:	(bad)  
  403351:	xlat   BYTE PTR ds:[ebx]
  403352:	aad    0x95
  403354:	repz scas eax,DWORD PTR es:[edi]
  403356:	sbb    BYTE PTR [edx],ch
  403358:	sbb    eax,0x905aea99
  40335d:	xchg   BYTE PTR [edi],bl
  40335f:	xchg   ecx,eax
  403360:	lods   al,BYTE PTR ds:[esi]
  403361:	call   0xc6fb308f
  403366:	sub    eax,0xabdea598
  40336b:	mov    fs,WORD PTR [ebx-0x4622b3fe]
  403371:	push   ds
  403372:	shl    cl,0x47
  403375:	ss sbb ecx,ebx
  403378:	pushf  
  403379:	out    dx,eax
  40337a:	js     0x4033ba
  40337c:	xor    eax,0x7d52111a
  403381:	rcl    DWORD PTR [ebp-0x17],cl
  403384:	and    al,0x7e
  403386:	jbe    0x403406
  403388:	sub    DWORD PTR [edi],eax
  40338a:	in     al,dx
  40338b:	jl     0x403397
  40338d:	mov    edx,0x7b5fe6bf
  403392:	mov    edx,0x8ef96cca
  403397:	inc    eax
  403398:	stos   BYTE PTR es:[edi],al
  403399:	fcomp  DWORD PTR [edi-0x1d]
  40339c:	(bad)  
  40339d:	lods   eax,DWORD PTR ds:[esi]
  40339e:	add    DWORD PTR [ebx+0x3e],edi
  4033a1:	jl     0x4033d0
  4033a3:	sahf   
  4033a4:	inc    esp
  4033a5:	repnz xor al,0x24
  4033a8:	mov    eax,0x1c3278f
  4033ad:	mov    WORD PTR [esp+esi*2+0x663300a2],?
  4033b4:	call   0x3bddda86
  4033b9:	es push cs
  4033bb:	push   edx
  4033bc:	in     al,0x93
  4033be:	sub    al,0xcc
  4033c0:	inc    edx
  4033c1:	fcmovnbe st,st(0)
  4033c3:	addr16 js 0x403365
  4033c6:	inc    edi
  4033c7:	pushw  ss
  4033c9:	xor    al,0x6f
  4033cb:	pushf  
  4033cc:	pop    es
  4033cd:	dec    esi
  4033ce:	out    dx,eax
  4033cf:	rol    al,1
  4033d1:	push   ss
  4033d2:	pop    ebp
  4033d3:	jg     0x4033e2
  4033d5:	jp     0x4033ef
  4033d7:	mov    WORD PTR ds:0xe165dc4b,?
  4033dd:	arpl   WORD PTR [edi+0x40],si
  4033e0:	into   
  4033e1:	and    esp,esi
  4033e3:	adc    al,BYTE PTR [eax-0x44]
  4033e6:	pop    esp
  4033e7:	cmp    dl,BYTE PTR [ebp+0x61]
  4033ea:	pop    ss
  4033eb:	in     eax,dx
  4033ec:	das    
  4033ed:	lea    ebx,[ebx-0x64]
  4033f0:	jmp    0x5b4e:0xea30b371
  4033f7:	(bad)  
  4033f8:	pop    eax
  4033f9:	push   ds
  4033fa:	jl     0x4033ae
  4033fc:	sbb    eax,0x31422551
  403401:	pop    edx
  403402:	ror    BYTE PTR [ebx-0x4f0f182],1
  403408:	xchg   BYTE PTR [edi+0x1f],cl
  40340b:	cld    
  40340c:	add    al,0x2d
  40340e:	jmp    0x41d9166f
  403413:	jp     0x403427
  403415:	mov    WORD PTR [eax],cs
  403417:	sahf   
  403418:	or     al,0x39
  40341a:	cmp    eax,0x8d0bc49b
  40341f:	jo     0x4033ce
  403421:	icebp  
  403422:	pop    ss
  403423:	mov    al,ds:0x584c8ad4
  403428:	out    dx,eax
  403429:	lds    ebp,FWORD PTR [eax]
  40342b:	pop    ds
  40342c:	mov    ecx,0x2331fbb
  403431:	mov    al,0xf0
  403433:	adc    eax,0x98354b87
  403438:	mov    es,WORD PTR [edi+0x2c36c6bd]
  40343e:	repnz mov ax,WORD PTR [edi+0x2517b82c]
  403446:	je     0x4034aa
  403448:	mov    ebx,0xb416b39a
  40344d:	mov    bl,0xa7
  40344f:	fidivr DWORD PTR [ebx]
  403451:	dec    BYTE PTR [ebp-0x28700bd5]
  403457:	mov    bh,bl
  403459:	inc    ebp
  40345a:	xor    DWORD PTR [ebx],esi
  40345c:	push   ss
  40345d:	mov    WORD PTR [esi-0x10ddca07],?
  403463:	and    DWORD PTR [ebx+0x1a],ebp
  403466:	mov    esi,0x407ac3be
  40346b:	jg     0x403445
  40346d:	aaa    
  40346e:	pop    esp
  40346f:	jae    0x40341e
  403471:	xchg   esp,eax
  403472:	ret    
  403473:	jnp    0x4034d2
  403475:	inc    edi
  403476:	mov    bh,0xf7
  403478:	pop    ebp
  403479:	pop    ebx
  40347a:	xor    eax,0xffffff8b
  40347d:	adc    al,0xe
  40347f:	dec    edi
  403480:	test   DWORD PTR [ecx-0x26],esp
  403483:	jg     0x4034b1
  403485:	sbb    esi,DWORD PTR [eax+0x71]
  403488:	fnstsw WORD PTR [ebx+0x34a70a06]
  40348e:	cmp    dh,cl
  403490:	pop    eax
  403491:	mov    ds:0x70e75192,al
  403496:	add    bh,cl
  403498:	or     al,0x4e
  40349a:	push   esp
  40349b:	pop    edi
  40349c:	ficom  DWORD PTR [ecx]
  40349e:	mov    bl,BYTE PTR [edi]
  4034a0:	jmp    0x40345e
  4034a2:	add    DWORD PTR [edx+0x7b],edx
  4034a5:	ss (bad) 
  4034a7:	jmp    0x8711:0xabfb0d19
  4034ae:	fcom   QWORD PTR [eax+edx*4-0x1af65e9d]
  4034b5:	mov    edi,0x3bddb9f1
  4034ba:	div    DWORD PTR [ebp+0x69e2ff4b]
  4034c0:	jae    0x403463
  4034c2:	jecxz  0x403519
  4034c4:	rcr    DWORD PTR [edx+0x25a9c121],1
  4034ca:	or     eax,DWORD PTR [esi]
  4034cc:	pop    esi
  4034cd:	mov    ds:0x705ef257,al
  4034d2:	cmp    dh,BYTE PTR [edx]
  4034d4:	loop   0x4034e7
  4034d6:	sbb    eax,0xb0fb9e7b
  4034db:	ror    BYTE PTR [edi],cl
  4034dd:	(bad)  
  4034de:	lock scas al,BYTE PTR es:[edi]
  4034e0:	xor    eax,DWORD PTR [ecx+0x62ab2965]
  4034e6:	out    0x51,eax
  4034e8:	mov    eax,ds:0x2c47d6ee
  4034ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428163,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x4d],ch
  403514:	cwde   
  403515:	push   cs
  403516:	jle    0x4034db
  403518:	in     eax,0x18
  40351a:	sbb    BYTE PTR [esi-0x50e7e7ee],bl
  403520:	(bad)  
  403522:	stc    
  403523:	dec    esi
  403524:	xchg   esi,eax
  403525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403526:	test   BYTE PTR [ebp-0x15b5ca4a],dh
  40352c:	shr    BYTE PTR [esi+0x51e98e7d],0x7d
  403533:	push   0xc154ad40
  403538:	or     bh,BYTE PTR [esi-0x10]
  40353b:	ja     0x4034c9
  40353d:	xchg   esp,eax
  40353e:	dec    eax
  40353f:	push   edx
  403540:	mov    al,ds:0xd6780b9c
  403545:	js     0x4035c4
  403547:	mov    ch,0xac
  403549:	adc    BYTE PTR [esi],ah
  40354b:	pop    eax
  40354c:	or     eax,0x3bd2ed3b
  403551:	cmp    DWORD PTR [edx+esi*1],esi
  403554:	add    BYTE PTR [ecx+0x25],cl
  403557:	out    dx,eax
  403558:	mov    bh,BYTE PTR [ecx]
  40355a:	add    eax,0x42f56929
  40355f:	jbe    0x403510
  403561:	inc    edi
  403562:	dec    edx
  403563:	in     eax,dx
  403564:	hlt    
  403565:	test   eax,0xcdbacdc0
  40356a:	lea    ebx,[edi]
  40356c:	jl     0x40357e
  40356e:	inc    esp
  40356f:	pop    edi
  403570:	es lahf 
  403572:	cld    
  403573:	fild   WORD PTR [esi+0x11]
  403577:	daa    
  403578:	mov    bh,0xa3
  40357a:	xchg   edi,eax
  40357b:	mov    bl,0x36
  40357d:	in     eax,0xc1
  40357f:	retf   0x4210
  403582:	xchg   ecx,eax
  403583:	xchg   edi,eax
  403584:	out    0xcc,al
  403586:	jne    0x4035b8
  403588:	mov    dh,0x28
  40358a:	call   0x8ee667e6
  40358f:	outs   dx,DWORD PTR ds:[esi]
  403591:	mov    dl,0xbf
  403593:	mov    eax,0xbed65e87
  403598:	xchg   esi,eax
  403599:	arpl   dx,sp
  40359b:	or     edx,eax
  40359d:	fistp  WORD PTR [ebp+ebx*8-0x66b94dfc]
  4035a4:	jecxz  0x4035da
  4035a6:	loop   0x4035b3
  4035a8:	xor    BYTE PTR [edx],ah
  4035aa:	or     DWORD PTR [edi+0x6456f59a],0x15
  4035b1:	popa   
  4035b2:	jle    0x40354d
  4035b4:	ja     0x40355c
  4035b6:	fcomip st,st(2)
  4035b8:	add    esp,DWORD PTR [ebx+0x4926f14f]
  4035be:	and    BYTE PTR [edx-0x43],dh
  4035c1:	cwde   
  4035c2:	xor    eax,0xb28b499a
  4035c7:	mov    dh,0xcb
  4035c9:	inc    esi
  4035ca:	fbld   TBYTE PTR [esi]
  4035cc:	mov    al,ds:0x39503ba8
  4035d1:	pop    edi
  4035d2:	mov    dh,0x64
  4035d4:	xchg   BYTE PTR [edx+0x7f3dd897],dh
  4035da:	pop    ebp
  4035db:	mov    WORD PTR [ecx],?
  4035dd:	cmc    
  4035de:	jb     0x403564
  4035e0:	fstp   TBYTE PTR [ebx+ebp*8-0x6f146235]
  4035e7:	push   ds
  4035e8:	push   cs
  4035e9:	lds    esp,FWORD PTR [esi+0x5e089efd]
  4035ef:	in     al,0x8f
  4035f1:	cmp    bh,BYTE PTR [ebx+ebp*2-0xffcedf6]
  4035f8:	fimul  WORD PTR [ebx+ebp*4+0x22a515c]
  4035ff:	call   DWORD PTR [ecx+0x3c4800cb]
  403605:	daa    
  403606:	in     al,dx
  403607:	pop    esi
  403608:	jl     0x40360c
  40360a:	or     ecx,ebx
  40360c:	jnp    0x4035c3
  40360e:	leave  
  40360f:	repz (bad) 
  403611:	adc    ebx,DWORD PTR [eax-0x35]
  403614:	int    0x4d
  403616:	cmp    al,0x25
  403618:	mov    al,0xdf
  40361a:	mov    eax,DWORD PTR [eax+ebx*1]
  40361d:	mov    ebx,0xc5a2c67e
  403622:	clc    
  403623:	jbe    0x40364d
  403625:	(bad)  
  403626:	mov    edx,0x3d5da108
  40362b:	test   eax,0xe1474506
  403630:	mov    ecx,0xf86513b9
  403635:	jbe    0x40361f
  403637:	mov    eax,ds:0x2544d3a7
  40363c:	nop
  40363d:	(bad)  
  40363e:	loopne 0x4035fa
  403640:	inc    esp
  403641:	or     BYTE PTR [ebp-0x4d813a3],ah
  403647:	sbb    DWORD PTR ds:0xf22bda15,esp
  40364d:	jecxz  0x4035ee
  40364f:	adc    eax,0x20b6ee7
  403654:	loope  0x40365d
  403656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403657:	mov    es,WORD PTR [esi-0x283e6b9b]
  40365d:	mov    al,ds:0xb753a151
  403662:	sbb    BYTE PTR [ecx-0x66c241b5],dl
  403668:	mov    dl,0x70
  40366a:	pop    edx
  40366b:	xor    DWORD PTR [ebp-0x7],ebx
  40366e:	(bad)  
  40366f:	jecxz  0x40365a
  403671:	sub    ecx,DWORD PTR [ecx+0xa]
  403674:	cmp    esi,ebp
  403676:	gs push edx
  403678:	push   edx
  403679:	push   0xffffffb2
  40367b:	imul   esi,DWORD PTR [esi],0x1
  40367e:	ret    0x827d
  403681:	sub    eax,0xb79ac2f4
  403686:	or     ah,BYTE PTR es:0x5f5a1df4
  40368d:	pushf  
  40368e:	push   ecx
  40368f:	sub    al,0x89
  403691:	jmp    0x4c8b:0x7bb59109
  403698:	(bad)  
  403699:	out    dx,al
  40369a:	cmp    BYTE PTR [esi-0x25443b56],dh
  4036a0:	aaa    
  4036a1:	sub    cl,BYTE PTR [ebp-0x7b]
  4036a4:	hlt    
  4036a5:	mov    BYTE PTR [edx],0x1
  4036a8:	jbe    0x4036d6
  4036aa:	ins    DWORD PTR es:[edi],dx
  4036ab:	xor    eax,0xe46fd2b9
  4036b0:	cli    
  4036b1:	jle    0x40363b
  4036b3:	pop    ebx
  4036b4:	mov    BYTE PTR [ebx+0x3c2c87d5],ah
  4036ba:	popf   
  4036bb:	lock jb 0x40371e
  4036be:	sub    DWORD PTR [ebx+0x4d149beb],eax
  4036c4:	call   0xaeb79926
  4036c9:	push   edx
  4036ca:	dec    esp
  4036cb:	test   DWORD PTR [ebp+0x10],0x7fb58cb1
  4036d2:	cmp    bl,BYTE PTR [eax+0x13]
  4036d5:	push   es
  4036d6:	stos   BYTE PTR es:[edi],al
  4036d7:	test   eax,0x55f22c37
  4036dc:	or     ebx,DWORD PTR [ebx-0x70]
  4036df:	sti    
  4036e0:	fstp   st(5)
  4036e2:	and    dl,BYTE PTR ds:0xe52b6e16
  4036e8:	jmp    0x4036bb
  4036ea:	stc    
  4036eb:	imul   ebx,DWORD PTR [edx-0x1d493dcb],0x331e67c
  4036f5:	inc    ebx
  4036f6:	jge    0x4036a1
  4036f8:	push   ds
  4036f9:	and    ebp,DWORD PTR [esi]
  4036fb:	adc    al,0xde
  4036fd:	xchg   eax,ebx
  4036ff:	jo     0x403703
  403701:	fild   WORD PTR [edi+0x64]
  403704:	push   edx
  403705:	jne    0x40374e
  403707:	pop    ecx
  403708:	(bad)  
  40370b:	adc    esi,DWORD PTR [esi+0x54a37f6d]
  403711:	inc    edx
  403712:	mov    al,0x3c
  403714:	pop    esp
  403715:	add    BYTE PTR [eax+0x5d],ch
  403718:	xchg   ebx,eax
  403719:	mov    ds:0xb51eaaff,eax
  40371e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40371f:	xor    DWORD PTR [eax+0x2f],esp
  403722:	mov    ch,0x1d
  403724:	aaa    
  403725:	aam    0xe5
  403727:	jp     0x40370a
  403729:	fisub  WORD PTR [edx+0x634816bf]
  40372f:	sbb    esp,DWORD PTR [eax+0x6aab72e]
  403735:	iret   
  403736:	(bad)  
  403737:	in     eax,dx
  403738:	jnp    0x403778
  40373a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373b:	push   ds
  40373c:	jg     0x403707
  40373e:	aam    0x7
  403740:	ret    0xb9c4
  403743:	add    dl,dh
  403745:	cmc    
  403746:	pop    ss
  403747:	jnp    0x4036f8
  403749:	jge    0x4036eb
  40374b:	cmc    
  40374c:	xchg   esp,eax
  40374d:	add    eax,0xe89d872a
  403752:	test   DWORD PTR [edx+0x4761d20b],esp
  403758:	sub    al,0xb
  40375a:	inc    esp
  40375b:	add    eax,0x473c3974
  403760:	xor    eax,0xc5a5835f
  403765:	ror    DWORD PTR [esp+edx*8],0x86
  403769:	pop    ds
  40376a:	loopne 0x4037d9
  40376c:	adc    dl,ah
  40376e:	and    DWORD PTR [ecx-0x45a38376],ebx
  403774:	xchg   esi,eax
  403775:	dec    eax
  403776:	push   0xdcce2dc
  40377b:	stc    
  40377c:	pop    ecx
  40377d:	add    ebp,edi
  40377f:	daa    
  403780:	es out 0x98,eax
  403783:	push   ds
  403784:	(bad)  
  403785:	jl     0x403724
  403787:	out    dx,eax
  403788:	or     bh,BYTE PTR [ecx+0x1b0964ef]
  40378e:	xchg   ecx,eax
  40378f:	mov    al,ds:0x30eebded
  403794:	test   BYTE PTR [edx-0xe558020],ah
  40379a:	pop    ss
  40379b:	icebp  
  40379c:	cmova  ebx,DWORD PTR [ecx-0x80]
  4037a0:	add    al,BYTE PTR [esi]
  4037a2:	nop
  4037a3:	fdecstp 
  4037a5:	xchg   DWORD PTR [ebp+ebp*8+0x7e],ebx
  4037a9:	shl    BYTE PTR [edi-0x40],0xce
  4037ad:	and    al,ch
  4037af:	sti    
  4037b0:	lods   eax,DWORD PTR ds:[esi]
  4037b1:	pop    esi
  4037b2:	fld    DWORD PTR [esp+eax*1]
  4037b5:	inc    edx
  4037b6:	repnz mov edx,0xedeba6f3
  4037bc:	and    dh,BYTE PTR [esp+ecx*8+0x6e]
  4037c0:	mov    bh,BYTE PTR [edx]
  4037c2:	or     WORD PTR [eax+0x440f187],si
  4037c9:	stc    
  4037ca:	sbb    DWORD PTR [eax-0x3f],ecx
  4037cd:	in     eax,0xfa
  4037cf:	mov    ebp,0xfe192b7c
  4037d4:	adc    DWORD PTR [esi-0x2b],edx
  4037d7:	dec    ebx
  4037d8:	leave  
  4037d9:	jo     0x403779
  4037db:	ret    0x2330
  4037de:	mov    dh,0xc8
  4037e0:	pop    ds
  4037e1:	push   ss
  4037e2:	or     eax,0x7245097f
  4037e7:	je     0x403800
  4037e9:	add    ch,ch
  4037eb:	inc    eax
  4037ec:	xor    bh,BYTE PTR [eax+0x5b10bb09]
  4037f2:	or     BYTE PTR [edi+0x39],ch
  4037f5:	ds ins DWORD PTR es:[edi],dx
  4037f7:	mov    ds:0xe69c5a29,al
  4037fc:	outs   dx,DWORD PTR ds:[esi]
  4037fd:	les    esi,FWORD PTR [edi+0x46]
  403800:	sub    DWORD PTR ss:[edi+0x3a],0x51cdb0de
  403808:	or     ecx,DWORD PTR [edi]
  40380a:	int    0x61
  40380c:	femms  
  40380e:	leave  
  40380f:	in     al,dx
  403810:	cmp    esi,DWORD PTR [edi+esi*2]
  403813:	push   es
  403814:	xchg   ebx,eax
  403815:	pop    ebp
  403816:	sub    BYTE PTR [ebx+0x3a],bh
  403819:	dec    ebp
  40381a:	test   eax,0x2cb48647
  40381f:	out    dx,eax
  403820:	push   ebp
  403821:	lock pop ecx
  403823:	xchg   DWORD PTR ds:0x1fd15929,esi
  403829:	retf   
  40382a:	xchg   DWORD PTR [ecx+0x1bca4787],esi
  403830:	test   al,0xf6
  403832:	adc    DWORD PTR [ebp-0x53eb03fa],edi
  403838:	cs pushf 
  40383a:	jno    0x4037f9
  40383c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40383d:	pop    edi
  40383e:	xchg   DWORD PTR [edx+0x2864dc10],edi
  403844:	hlt    
  403845:	dec    eax
  403846:	inc    ebp
  403847:	ds bswap esp
  40384a:	inc    BYTE PTR [ebp-0x6915ddd2]
  403850:	cwde   
  403851:	xchg   esp,eax
  403852:	aaa    
  403853:	and    al,0xc4
  403855:	mov    WORD PTR [ebp-0x6948a94d],es
  40385b:	dec    eax
  40385c:	neg    DWORD PTR [ecx]
  40385e:	and    ebp,eax
  403860:	or     esi,DWORD PTR [edi]
  403862:	fwait
  403863:	cwde   
  403864:	mov    ecx,0x426b780a
  403869:	lds    ebp,FWORD PTR [edx+0x48232305]
  40386f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403870:	sbb    dh,ch
  403872:	mov    dl,0x76
  403874:	sbb    dh,bh
  403876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403877:	dec    edx
  403878:	mov    dh,0x14
  40387a:	adc    al,0x2c
  40387c:	aad    0xd6
  40387e:	es pop esi
  403880:	pmulhw mm6,QWORD PTR [ecx-0x64]
  403884:	jbe    0x40384b
  403886:	xlat   BYTE PTR ds:[ebx]
  403887:	sahf   
  403888:	lds    edx,FWORD PTR [ecx+esi*4-0x7f925891]
  40388f:	push   0xaf584b41
  403894:	push   esp
  403895:	lahf   
  403896:	pop    ecx
  403897:	inc    esp
  403898:	mov    ch,0x82
  40389a:	jmp    0x40388a
  40389c:	addr16 sbb al,0x74
  40389f:	mov    ds:0xb67e2986,eax
  4038a4:	jae    0x4038a0
  4038a6:	mov    DWORD PTR [eax+0x27],esi
  4038a9:	jmp    0x403919
  4038ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ac:	ins    DWORD PTR es:[edi],dx
  4038ad:	gs hlt 
  4038af:	dec    edx
  4038b0:	pop    ss
  4038b1:	repz js 0x40383f
  4038b4:	mov    eax,0xcdeba4e
  4038b9:	inc    BYTE PTR [ecx-0x5e]
  4038bc:	push   es
  4038bd:	lods   al,BYTE PTR ds:[esi]
  4038be:	imul   edx,DWORD PTR [ecx],0xffffffa6
  4038c1:	and    dl,BYTE PTR [eax+0x757afd9b]
  4038c7:	cmp    DWORD PTR [esi],edx
  4038c9:	btc    DWORD PTR [ebx+0x61],0x23
  4038ce:	xor    eax,0x558f7fa4
  4038d3:	cmp    DWORD PTR gs:[edi+0x5de503af],esi
  4038da:	out    dx,al
  4038db:	scas   al,BYTE PTR es:[edi]
  4038dc:	cmp    al,0x1c
  4038de:	fisttp WORD PTR [ebx+0x3d83f445]
  4038e5:	arpl   WORD PTR [edx-0x8ffffbe],ax
  4038eb:	adc    eax,0x42815b
  4038f0:	mov    ecx,DWORD PTR ds:0x428287
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428263,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428ed8
  403913:	xor    edx,DWORD PTR ds:0x42824f
  403919:	neg    DWORD PTR ds:0x428263
  40391f:	xor    DWORD PTR ds:0x428157,0x12a5
  403929:	and    DWORD PTR ds:0x4283a7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42828b
  403939:	or     ecx,DWORD PTR ds:0x42823f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428163,0x0
  403949:	mov    DWORD PTR ds:0x4283a7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428163,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dac
  40397f:	adc    DWORD PTR ds:0x428297,0x42817f
  403989:	sbb    DWORD PTR ds:0x428283,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428383
  403999:	or     DWORD PTR ds:0x42825f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428287
  4039a7:	adc    edx,DWORD PTR ds:0x42826b
  4039ad:	mov    DWORD PTR ds:0x428287,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42823f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282a7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x42829b,0x4283a7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42817b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428157,0x42831f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428163,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42815b,0x4282f3
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42826f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428287,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428157,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428283,0x0
  403a3e:	mov    DWORD PTR ds:0x42830f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283a7
  403a57:	cmp    DWORD PTR ds:0x428283,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d88
  403a6f:	mov    edx,DWORD PTR ds:0x42833f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283d3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428183,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428177,0x2089
  403aa2:	or     DWORD PTR ds:0x42815b,0x113b
  403aac:	mov    eax,ds:0x4223d0
  403ab1:	cmp    DWORD PTR ds:0x428183,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42824f
  403ac3:	mov    DWORD PTR ds:0x428233,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428323,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428183,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428183,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428123
  403af8:	call   DWORD PTR ds:0x428db0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42824b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42828f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42837b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42816b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x7cc942a7
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi-0x78e7e7ee],bl
  403b4b:	mov    ch,0xce
  403b4d:	loopne 0x403b84
  403b4f:	call   0x1be41136
  403b54:	add    al,0xa1
  403b56:	inc    esp
  403b57:	push   ebp
  403b58:	mov    ds:0xf3b9f4a,al
  403b5d:	inc    edx
  403b5e:	out    0xbc,eax
  403b60:	cld    
  403b61:	fcomp  QWORD PTR [ebp+0x22]
  403b64:	not    BYTE PTR [ebx-0x38781c08]
  403b6a:	and    ecx,DWORD PTR [ecx-0x666083b2]
  403b70:	loope  0x403b3e
  403b72:	xlat   BYTE PTR ds:[ebx]
  403b73:	jp     0x403b77
  403b75:	adc    esi,eax
  403b77:	aad    0x70
  403b79:	fmul   st(2),st
  403b7b:	pusha  
  403b7c:	out    0xb8,eax
  403b7e:	leave  
  403b7f:	in     eax,0xbd
  403b81:	adc    DWORD PTR [edx+eax*1],0xf96f0a47
  403b88:	cs loop 0x403b35
  403b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b8c:	jb     0x403b0f
  403b8e:	mov    dh,0x2b
  403b90:	pop    esp
  403b91:	dec    esi
  403b92:	xchg   edi,eax
  403b93:	pop    esi
  403b94:	rcl    BYTE PTR [edi],1
  403b96:	xchg   esp,eax
  403b97:	add    DWORD PTR [ebx],0xffffffa7
  403b9a:	jo     0x403b88
  403b9c:	lds    edx,FWORD PTR [ebp+0x36]
  403b9f:	enter  0x67b5,0xa8
  403ba3:	mov    eax,0x30bc208f
  403ba8:	stc    
  403ba9:	push   0x60e03e4e
  403bae:	(bad)  
  403baf:	clc    
  403bb0:	pop    ebx
  403bb1:	jo     0x403b58
  403bb3:	clc    
  403bb4:	adc    eax,DWORD PTR [ebx]
  403bb6:	adc    al,0xcf
  403bb8:	push   esp
  403bb9:	lahf   
  403bba:	mov    edi,0x335ee562
  403bbf:	shl    BYTE PTR [ebp-0xa],1
  403bc2:	out    0xd2,al
  403bc4:	fadd   QWORD PTR [esi+0xd]
  403bc7:	outs   dx,DWORD PTR ds:[esi]
  403bc8:	out    dx,eax
  403bc9:	dec    esi
  403bca:	push   ebx
  403bcb:	mov    ?,WORD PTR [edx+0x2e]
  403bce:	loopne 0x403c49
  403bd0:	daa    
  403bd1:	cmp    eax,0x1e2e6bdc
  403bd6:	inc    eax
  403bd7:	inc    edi
  403bd8:	jmp    DWORD PTR [edx+0x4aa3b331]
  403bde:	(bad)  
  403bdf:	addr16 mov esp,0xe6440c09
  403be5:	pop    ds
  403be6:	mov    edx,0x170e10da
  403beb:	or     bl,BYTE PTR [edi-0x1b]
  403bee:	retf   0x79c0
  403bf1:	loopne 0x403bdc
  403bf3:	out    0xd4,eax
  403bf5:	or     al,0x46
  403bf7:	repz mov edx,0x5bca8b5a
  403bfd:	mov    ecx,0x22f0273d
  403c02:	or     esi,DWORD PTR [eax+0x775f10d2]
  403c08:	adc    cl,cl
  403c0a:	push   ds
  403c0b:	add    DWORD PTR [edi],esi
  403c0d:	retf   0x888d
  403c10:	mov    WORD PTR [eax+0x1d4b4d66],cs
  403c16:	jbe    0x403bdf
  403c18:	addr16 popa 
  403c1a:	ins    DWORD PTR es:[edi],dx
  403c1b:	push   0x66
  403c1d:	repnz add eax,0x545a8723
  403c23:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  403c25:	xlat   BYTE PTR ds:[ebx]
  403c26:	out    0x2e,al
  403c28:	into   
  403c29:	sti    
  403c2a:	push   ebp
  403c2b:	iret   
  403c2c:	and    esi,DWORD PTR [ebx-0x1aa3b2fd]
  403c32:	es repz int3 
  403c35:	push   ecx
  403c36:	sahf   
  403c37:	ret    0xc853
  403c3a:	jns    0x403bd7
  403c3c:	xchg   ebp,eax
  403c3d:	inc    esi
  403c3e:	or     al,0x1e
  403c40:	add    al,bl
  403c42:	call   0xde07:0x33f1659a
  403c49:	mov    edi,0x3612bccf
  403c4e:	sub    bl,ah
  403c50:	fst    QWORD PTR [ebp+0x75]
  403c53:	jmp    0x8f8a:0xeace95d7
  403c5a:	das    
  403c5b:	push   edx
  403c5c:	mov    DWORD PTR [esi+esi*1+0x59],ebx
  403c60:	cmp    al,dl
  403c62:	in     al,dx
  403c63:	xchg   BYTE PTR [eax+0x65],ah
  403c66:	(bad)  
  403c67:	pop    esp
  403c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c69:	icebp  
  403c6a:	fist   DWORD PTR [edx-0x3893ff56]
  403c70:	or     al,0xe3
  403c72:	fist   WORD PTR [edi]
  403c74:	dec    edi
  403c75:	sbb    dh,BYTE PTR [esi-0x4e]
  403c78:	ret    0xb2d4
  403c7b:	add    dh,BYTE PTR [edx-0x61af0aa]
  403c81:	rcr    ebp,0x55
  403c84:	adc    DWORD PTR [ebx+0x7f3ad7d3],edx
  403c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c8b:	pop    ss
  403c8c:	mov    DWORD PTR [edx-0x3f],eax
  403c8f:	mov    cl,0x97
  403c91:	jmp    0xe9ae:0xd87de2d8
  403c98:	retf   
  403c99:	or     ebx,DWORD PTR [edx]
  403c9b:	(bad)  
  403c9d:	repz or ebp,DWORD PTR [edx-0x2f]
  403ca1:	adc    DWORD PTR [esi+0x7794081d],edi
  403ca7:	xchg   ecx,eax
  403ca8:	mov    BYTE PTR [edi+ebx*1],ah
  403cab:	mov    ds:0xb77fb021,al
  403cb0:	sar    BYTE PTR [edi+esi*8+0x1],1
  403cb4:	mov    eax,0x2b560fae
  403cb9:	sub    ecx,DWORD PTR ds:0xea9077e1
  403cbf:	sbb    DWORD PTR [edx+0x6d],eax
  403cc2:	sti    
  403cc3:	push   cs
  403cc4:	shl    BYTE PTR [edi-0xb4a927b],1
  403cca:	cmp    eax,0xee93a23d
  403ccf:	jmp    0x403c9d
  403cd1:	sar    DWORD PTR [esi+eiz*1-0x1aa00ebf],1
  403cd8:	sub    BYTE PTR [edx+0x58292b1f],0x24
  403cdf:	xor    ah,BYTE PTR [esi+0x5e]
  403ce2:	sub    BYTE PTR [ebx+esi*2],ah
  403ce5:	icebp  
  403ce6:	mov    cl,0x32
  403ce8:	mov    eax,ds:0xcddf758c
  403ced:	shr    cl,cl
  403cef:	jmp    0xc4d696af
  403cf4:	sub    eax,0x88d3626d
  403cf9:	add    ecx,ecx
  403cfb:	or     al,0x38
  403cfd:	jecxz  0x403cc3
  403cff:	jnp    0x403cf6
  403d01:	jno    0x403d0b
  403d03:	pop    ds
  403d04:	pop    eax
  403d05:	cwde   
  403d06:	sbb    al,0xd2
  403d08:	mov    ah,0x8b
  403d0a:	adc    al,ah
  403d0c:	arpl   di,cx
  403d0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d0f:	in     eax,dx
  403d10:	xchg   ecx,eax
  403d11:	inc    esp
  403d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d13:	inc    esp
  403d14:	jmp    0x403d76
  403d16:	sbb    DWORD PTR [ebx-0x1f],ebx
  403d19:	clc    
  403d1a:	loope  0x403d8d
  403d1c:	(bad)  
  403d1d:	sub    DWORD PTR [eax],edx
  403d1f:	iret   
  403d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d21:	or     eax,0x13cb68a8
  403d26:	jo     0x403d19
  403d28:	and    ah,BYTE PTR [ebp+0xf9abe1b]
  403d2e:	cwde   
  403d2f:	fcmovnbe st,st(4)
  403d31:	ss (bad) 
  403d33:	mov    esi,0x70de860
  403d38:	inc    ebp
  403d39:	nop
  403d3a:	mov    esi,0xb5ed7068
  403d3f:	adc    BYTE PTR [ebx],0x59
  403d42:	push   ss
  403d43:	(bad)  
  403d44:	leave  
  403d45:	add    eax,ecx
  403d47:	jle    0x403d9a
  403d49:	and    ebx,0xdce50f02
  403d4f:	cmp    BYTE PTR [esi-0x4b246eb0],bh
  403d55:	pop    esp
  403d56:	popa   
  403d57:	lea    esp,[edx+0x2e9c7a0f]
  403d5d:	cmp    al,0x2b
  403d5f:	cmp    eax,0x134b3105
  403d64:	div    eax
  403d66:	loopne 0x403d94
  403d68:	ds fwait
  403d6a:	add    BYTE PTR [ecx],bh
  403d6c:	ret    0x4f70
  403d6f:	jno    0x403d70
  403d71:	data16 fnstcw WORD PTR [ecx+0x54b32098]
  403d78:	add    DWORD PTR [ecx],edx
  403d7a:	shl    DWORD PTR [ecx],1
  403d7c:	dec    edi
  403d7d:	adc    ecx,0x24
  403d80:	mov    bh,0xce
  403d82:	fmul   QWORD PTR [edi]
  403d84:	out    0xd9,eax
  403d86:	test   al,0x20
  403d88:	in     eax,dx
  403d89:	pop    ecx
  403d8a:	adc    esi,DWORD PTR [ecx]
  403d8c:	std    
  403d8d:	jae    0x403db5
  403d8f:	jp     0x403d8b
  403d91:	repz in eax,0x4c
  403d94:	and    DWORD PTR [ecx+0x76],eax
  403d97:	xor    al,0xab
  403d99:	iret   
  403d9a:	xor    eax,0xa8b7263c
  403d9f:	jmp    0xe3f9f97f
  403da4:	jbe    0x403d63
  403da6:	or     DWORD PTR [ecx-0x412560ae],edi
  403dac:	sbb    DWORD PTR [edx-0x78],esi
  403daf:	jnp    0x403d93
  403db1:	ins    BYTE PTR es:[edi],dx
  403db2:	(bad)  
  403db4:	mov    ds:0x3a930c15,al
  403db9:	sbb    al,0xd2
  403dbb:	push   edx
  403dbc:	mov    cl,0x32
  403dbe:	pop    si
  403dc0:	pushf  
  403dc1:	adc    eax,0x8f3d3c54
  403dc6:	push   cs
  403dc7:	popa   
  403dc8:	icebp  
  403dc9:	push   esi
  403dca:	mov    edi,0xe12d854
  403dcf:	shl    ah,0xf7
  403dd2:	scas   al,BYTE PTR es:[edi]
  403dd3:	xor    BYTE PTR [ebx+eiz*2-0x6d1163d0],dl
  403dda:	cli    
  403ddb:	inc    ebp
  403ddc:	data16 cmp ah,dl
  403ddf:	ret    
  403de0:	pop    es
  403de1:	js     0x403e5d
  403de3:	or     al,ch
  403de5:	xor    al,BYTE PTR [ebp-0x52c02fbd]
  403deb:	xchg   esi,eax
  403dec:	dec    edx
  403ded:	test   al,0x3f
  403def:	pusha  
  403df0:	jge    0x403e23
  403df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403df3:	daa    
  403df4:	xchg   esi,eax
  403df5:	das    
  403df6:	not    ecx
  403df8:	xchg   edx,eax
  403df9:	enter  0x3ee6,0x7c
  403dfd:	ja     0x403dcb
  403dff:	stos   DWORD PTR es:[edi],eax
  403e00:	pop    edx
  403e01:	sub    al,0x5f
  403e03:	xchg   BYTE PTR [ecx+ecx*1+0x6677cc79],dl
  403e0a:	sbb    eax,0x62d475f4
  403e0f:	sub    esp,esp
  403e11:	push   0xc065d203
  403e16:	or     al,0x8a
  403e18:	out    dx,eax
  403e19:	push   cs
  403e1a:	test   eax,0x7b00fcd4
  403e1f:	dec    eax
  403e20:	cli    
  403e21:	in     al,dx
  403e22:	int3   
  403e23:	ret    0x7b20
  403e26:	sub    bl,BYTE PTR [ecx+0x56]
  403e29:	adc    edx,ebx
  403e2b:	int3   
  403e2c:	cmp    al,0xed
  403e2e:	mov    dl,0x20
  403e30:	sbb    al,0x15
  403e32:	sub    al,ah
  403e34:	jg     0x403e41
  403e36:	dec    edi
  403e37:	xor    al,0xf6
  403e39:	mov    eax,0xa4b803fe
  403e3e:	xor    eax,0x8c3fc19b
  403e43:	add    ah,BYTE PTR [eax]
  403e45:	pavgw  mm0,QWORD PTR [eax]
  403e48:	cmp    dl,BYTE PTR [edi+0x57]
  403e4b:	mov    ah,0x9d
  403e4d:	in     eax,0x7e
  403e4f:	dec    esp
  403e50:	adc    esi,DWORD PTR [ebx+0x1e607e7f]
  403e56:	aad    0x2
  403e58:	imul   ebx,DWORD PTR [edi+edx*4+0x24c063ae],0xffffffdb
  403e60:	xchg   edx,eax
  403e61:	jbe    0x403ed3
  403e63:	fmul   QWORD PTR ds:0xd0ca8c1
  403e69:	idiv   BYTE PTR [ebx]
  403e6b:	daa    
  403e6c:	xchg   dl,ah
  403e6e:	sub    eax,DWORD PTR [ecx+0x2]
  403e71:	add    DWORD PTR [ebx],edi
  403e73:	add    edi,DWORD PTR [ebp-0x2cf452cc]
  403e79:	mov    esp,0xaa4f9770
  403e7e:	sti    
  403e7f:	gs pop ebp
  403e81:	div    BYTE PTR [ebp+0x34]
  403e84:	jg     0x403e08
  403e86:	out    dx,eax
  403e87:	pusha  
  403e88:	into   
  403e89:	call   0x127aaeed
  403e8e:	sub    DWORD PTR [esi+0x1dac7313],eax
  403e94:	mov    eax,0x2276e680
  403e99:	in     eax,dx
  403e9a:	vpunpcklbw ymm2,ymm7,YMMWORD PTR [edx]
  403e9e:	mov    al,ds:0xb312ff97
  403ea3:	xchg   ecx,eax
  403ea4:	mov    dl,0x68
  403ea6:	or     bh,ah
  403ea8:	outs   dx,BYTE PTR ds:[esi]
  403ea9:	jae    0x403e71
  403eab:	cli    
  403eac:	loop   0x403eed
  403eae:	lods   al,BYTE PTR ds:[esi]
  403eaf:	js     0x403f06
  403eb1:	icebp  
  403eb2:	jbe    0x403f06
  403eb4:	loopne 0x403e77
  403eb6:	call   0x4ffb:0x5b3367a7
  403ebd:	popa   
  403ebe:	stc    
  403ebf:	loop   0x403f26
  403ec1:	inc    edi
  403ec2:	div    eax
  403ec4:	mov    dl,0xa3
  403ec6:	mov    dl,cl
  403ec8:	cmp    al,BYTE PTR [edi+ecx*2+0x558fc0d3]
  403ecf:	loop   0x403e68
  403ed1:	(bad)  
  403ed2:	scas   al,BYTE PTR es:[edi]
  403ed3:	leave  
  403ed4:	sub    eax,eax
  403ed6:	lea    edi,[ebx]
  403ed8:	clc    
  403ed9:	or     ah,al
  403edb:	call   0x147925a4
  403ee0:	bound  eax,QWORD PTR [ecx-0x53a8baf4]
  403ee6:	aaa    
  403ee7:	ret    
  403ee8:	mov    bl,0x7b
  403eea:	mov    ch,0x2
  403eec:	nop
  403eed:	and    DWORD PTR [edx-0x8],esp
  403ef0:	pop    eax
  403ef1:	add    BYTE PTR [ebx+0x39f63b08],bl
  403ef7:	in     al,0x5d
  403ef9:	sub    al,0xb9
  403efb:	push   esp
  403efc:	push   ss
  403efd:	xchg   BYTE PTR [edi-0x4b],ch
  403f00:	xor    al,0xc1
  403f02:	daa    
  403f03:	push   edx
  403f04:	fs (bad) 
  403f06:	leave  
  403f07:	or     edi,DWORD PTR [edx]
  403f09:	mov    edx,0x19010339
  403f0e:	sbb    eax,0x42818f
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42820f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x42839b,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428257,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x2d61b3bc],ch
  403f58:	mov    esi,0x1818d7ce
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [ecx+0x3c],bl
  403f63:	pop    edx
  403f64:	not    BYTE PTR [ebp+esi*1+0x2e]
  403f68:	sbb    eax,0xd4e402ec
  403f6d:	or     ecx,DWORD PTR [ecx]
  403f6f:	repnz mov edx,0xbdbdd7aa
  403f75:	xchg   ecx,eax
  403f76:	sub    DWORD PTR [ebx+0x3d],edi
  403f79:	test   DWORD PTR [edi-0x7a624ae9],eax
  403f7f:	rcl    BYTE PTR [edi-0x35359473],0x29
  403f86:	lea    esi,[eax]
  403f88:	xchg   esi,eax
  403f89:	loopne 0x403f0e
  403f8b:	(bad)  
  403f8c:	mov    bh,0x34
  403f8e:	test   eax,0x1c2e7ce6
  403f93:	mov    ds:0x6bb1a101,eax
  403f98:	bound  eax,QWORD PTR [eax]
  403f9a:	dec    ecx
  403f9b:	loope  0x403f5c
  403f9d:	mov    eax,0x54f49fd0
  403fa2:	in     eax,0xc0
  403fa4:	and    cl,BYTE PTR ds:0xbdfff74f
  403faa:	jmp    0x31f1:0x14dcc823
  403fb1:	and    esp,DWORD PTR [ebp-0x5eb1ddac]
  403fb7:	push   ds
  403fb8:	sub    al,BYTE PTR [eax+0x393bd81f]
  403fbe:	inc    ebp
  403fbf:	pop    edx
  403fc0:	test   ebx,edi
  403fc2:	jg     0x404039
  403fc4:	pop    ecx
  403fc5:	push   es
  403fc6:	lds    ebx,FWORD PTR ss:0xf450fe4d
  403fcd:	sbb    eax,0xd3f6ebb0
  403fd2:	leave  
  403fd3:	cmp    al,0x4e
  403fd5:	sub    edi,DWORD PTR fs:[ebp-0x3d0a8a88]
  403fdc:	push   edx
  403fdd:	pop    ebp
  403fde:	mov    gs:0x676d0b1a,al
  403fe4:	ficomp DWORD PTR [edi]
  403fe6:	mov    ebx,0x84102d26
  403feb:	jo     0x403fd5
  403fed:	xchg   ebx,eax
  403fee:	(bad)  
  403fef:	pop    ss
  403ff0:	sbb    eax,0x5cd5c260
  403ff5:	aaa    
  403ff6:	je     0x40403c
  403ff8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403ffa:	mov    eax,ds:0x9b950be7
  403fff:	push   eax
  404000:	xchg   edi,eax
  404001:	mov    ebx,0xf488ce71
  404006:	add    BYTE PTR [ebx+0x3d],dh
  404009:	sub    eax,0x1bea87e5
  40400e:	sub    dh,BYTE PTR [ebx+0x55316001]
  404014:	int3   
  404015:	jecxz  0x403fd5
  404017:	dec    edi
  404018:	in     al,0x69
  40401a:	popa   
  40401b:	adc    BYTE PTR [edi-0x376ae57d],ah
  404021:	jmp    0x403fee
  404023:	fisttp QWORD PTR [esi]
  404025:	push   ds
  404026:	loop   0x403ff6
  404028:	fs icebp 
  40402a:	in     al,0x73
  40402c:	and    ah,BYTE PTR [ebx-0x739d13dc]
  404032:	lea    edi,[edi-0x37]
  404035:	repnz adc eax,0x9d41de5d
  40403b:	icebp  
  40403c:	fidivr DWORD PTR [ebp+edx*1-0x18]
  404040:	mov    dh,0xc9
  404042:	inc    esp
  404043:	sbb    al,cl
  404045:	mov    ds,WORD PTR [esi+0x20]
  404048:	mov    ecx,0xd1da7636
  40404d:	inc    esp
  40404e:	aaa    
  40404f:	xchg   ecx,eax
  404050:	ins    BYTE PTR es:[edi],dx
  404051:	fsub   QWORD PTR [ebx-0x23821ac8]
  404057:	scas   al,BYTE PTR es:[edi]
  404058:	imul   eax,edx,0x5c
  40405b:	dec    ebp
  40405c:	pushf  
  40405d:	loope  0x403fe5
  40405f:	adc    eax,0x9efeb33f
  404064:	lea    edx,[eax+0x22c840f9]
  40406a:	push   edx
  40406b:	adc    al,ah
  40406d:	in     eax,dx
  40406e:	fsubr  DWORD PTR [edi]
  404070:	sub    ebp,DWORD PTR [ebx]
  404072:	cmp    BYTE PTR [esi-0x455d74a0],bh
  404078:	loope  0x404001
  40407a:	out    dx,eax
  40407b:	xchg   edi,eax
  40407c:	sahf   
  40407d:	mov    ecx,0xde71a048
  404082:	adc    eax,DWORD PTR ds:0x8c93bc80
  404088:	in     eax,dx
  404089:	int3   
  40408a:	mov    al,0x47
  40408c:	out    0xb7,al
  40408e:	sahf   
  40408f:	in     al,0xc8
  404091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404092:	pop    eax
  404093:	mov    WORD PTR [ecx+0x4a],fs
  404096:	sub    DWORD PTR [ecx+0x1c],0xf998303c
  40409d:	aas    
  40409e:	sahf   
  40409f:	stc    
  4040a0:	add    al,0x24
  4040a2:	xchg   ebx,eax
  4040a3:	sbb    dh,BYTE PTR [edx]
  4040a5:	mov    esp,DWORD PTR [esi]
  4040a7:	mov    ax,0xb031
  4040ab:	inc    edi
  4040ac:	fnstenv [ebx-0x4a1bc332]
  4040b2:	push   cs
  4040b3:	jnp    0x40410c
  4040b5:	fmul   QWORD PTR [edi+eiz*1-0x3f138e6f]
  4040bc:	pop    ss
  4040bd:	mov    ebx,0xcdbcc7fa
  4040c2:	iret   
  4040c3:	mov    bl,0x2f
  4040c5:	call   0x7280:0x5c05f19f
  4040cc:	pushf  
  4040cd:	mov    WORD PTR [ecx+0x6a],es
  4040d0:	xchg   edi,eax
  4040d1:	pop    eax
  4040d2:	in     eax,dx
  4040d3:	or     DWORD PTR [ebp+0x2e351eba],esi
  4040d9:	lea    edi,ds:0x11d1dcdd
  4040df:	or     BYTE PTR [bx+di],al
  4040e2:	pop    edi
  4040e3:	xlat   BYTE PTR ds:[ebx]
  4040e4:	xor    DWORD PTR [edi],0xd74e03b4
  4040ea:	pop    edx
  4040eb:	je     0x4040dc
  4040ed:	fisttp WORD PTR [eax+0x6b22a2b0]
  4040f3:	(bad)  
  4040f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040f5:	aam    0xfd
  4040f7:	fistp  WORD PTR [edi]
  4040f9:	sub    BYTE PTR [ebx+esi*2+0x2d],cl
  4040fd:	jo     0x404154
  4040ff:	push   0xbfb8de4b
  404104:	sahf   
  404105:	repnz fstp DWORD PTR [esi]
  404108:	adc    eax,0x1d4601a
  40410d:	cmp    eax,0x62e86ed9
  404112:	pop    ebx
  404113:	mov    al,0x27
  404115:	and    BYTE PTR [eax+0x7ea9f5b5],dh
  40411b:	mov    edi,DWORD PTR [esi-0x3d]
  40411e:	inc    eax
  40411f:	or     eax,DWORD PTR [ebp-0x1b18d61e]
  404125:	sbb    eax,esp
  404127:	fdivrp st(4),st
  404129:	ds inc ebx
  40412b:	stos   DWORD PTR es:[edi],eax
  40412c:	mov    ah,0x76
  40412e:	(bad)  
  40412f:	test   DWORD PTR [edx-0x56],esp
  404132:	cli    
  404133:	add    ah,al
  404135:	sub    BYTE PTR [edx],dl
  404137:	lahf   
  404138:	imul   edx,DWORD PTR [ebp+0xd],0xffffffcd
  40413c:	xlat   BYTE PTR ds:[ebx]
  40413d:	jb     0x4040f8
  40413f:	in     al,0xc
  404141:	xor    edi,eax
  404143:	push   eax
  404144:	inc    edx
  404145:	push   DWORD PTR [edx-0x65]
  404148:	imul   ebx,DWORD PTR [ecx+0x39],0xffffffa3
  40414c:	dec    edi
  40414d:	pop    eax
  40414e:	(bad)  
  40414f:	xor    eax,0xb1b00c97
  404154:	jbe    0x40411e
  404156:	mov    bl,0x3d
  404158:	push   es
  404159:	jae    0x404152
  40415b:	add    esp,DWORD PTR [ecx+0x54563790]
  404161:	mov    ?,WORD PTR [esi+0x4b]
  404164:	hlt    
  404165:	imul   esp,DWORD PTR [edx],0x49a955ed
  40416b:	add    esp,0x74
  40416e:	int3   
  40416f:	je     0x4041b5
  404171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404172:	fst    DWORD PTR [eax+0x79]
  404175:	jne    0x404151
  404177:	jae    0x4041d7
  404179:	outs   dx,DWORD PTR ds:[esi]
  40417a:	or     bl,dh
  40417c:	out    0xf9,eax
  40417e:	fidiv  WORD PTR ds:0x674f5dc2
  404184:	jecxz  0x404137
  404186:	xchg   esi,eax
  404187:	jle    0x4041e4
  404189:	sar    eax,1
  40418b:	mov    ebx,0x3a77f429
  404190:	xlat   BYTE PTR ds:[ebx]
  404191:	or     edi,DWORD PTR [edx]
  404193:	inc    ecx
  404194:	mov    dl,0x55
  404196:	fwait
  404197:	mov    esp,0xc338d5c1
  40419c:	adc    BYTE PTR [edx+esi*8],ch
  40419f:	outs   dx,DWORD PTR ds:[esi]
  4041a0:	pop    esp
  4041a1:	test   al,0x88
  4041a3:	fld    QWORD PTR [edx+0x4c]
  4041a6:	cmp    cl,BYTE PTR fs:[eax]
  4041a9:	xchg   edx,eax
  4041aa:	in     eax,dx
  4041ab:	xor    DWORD PTR [ebp+0x6a0273b8],esi
  4041b1:	fisub  DWORD PTR [esi-0x28]
  4041b4:	add    BYTE PTR [eax],bh
  4041b6:	inc    eax
  4041b7:	imul   ebx,esp,0xffffff82
  4041ba:	cdq    
  4041bb:	mov    dl,0xb1
  4041bd:	mov    eax,0xcc471a03
  4041c2:	jnp    0x4041ee
  4041c4:	movd   ebp,mm7
  4041c7:	mov    ch,0x3e
  4041c9:	push   ebx
  4041ca:	rol    DWORD PTR [edi+0x75a797f3],1
  4041d0:	lds    ebp,FWORD PTR [esi+0x6d63b660]
  4041d6:	inc    esi
  4041d7:	fs out 0x8f,al
  4041da:	jmp    0xee51:0xde031381
  4041e1:	ds mov dl,0xd2
  4041e4:	mov    ds:0x2a1708fa,al
  4041e9:	in     al,0x20
  4041eb:	test   BYTE PTR [edx+0x6b],0xe6
  4041ef:	adc    ch,al
  4041f1:	pop    ecx
  4041f2:	xor    ecx,DWORD PTR [edi+0x51]
  4041f5:	mov    DWORD PTR [esi+ebp*1],0x5c1a42d8
  4041fc:	retf   
  4041fd:	mov    bl,0x67
  4041ff:	dec    eax
  404200:	or     ch,BYTE PTR [ecx+0x75]
  404203:	sub    ch,BYTE PTR [ebp+0x377f4d5e]
  404209:	ja     0x404288
  40420b:	or     eax,0x678db6df
  404210:	jbe    0x40426f
  404212:	and    BYTE PTR [esi-0x523e32ea],0xc1
  404219:	mov    dl,0xc9
  40421b:	sub    ebp,DWORD PTR [esi]
  40421d:	xchg   ebp,eax
  40421e:	xlat   BYTE PTR ds:[ebx]
  40421f:	frstor [ecx-0x574ef2e6]
  404225:	inc    ebp
  404226:	jne    0x4041ab
  404228:	cmc    
  404229:	sbb    DWORD PTR [ebp+0x398e7359],edx
  40422f:	mov    ds:0x620134cc,eax
  404234:	xlat   BYTE PTR ds:[ebx]
  404235:	outs   dx,BYTE PTR ds:[esi]
  404236:	mov    ds:0xf1d9b722,eax
  40423b:	repz dec esp
  40423d:	clc    
  40423e:	hlt    
  40423f:	enter  0x2d85,0x6a
  404243:	sbb    bl,bl
  404245:	mov    ah,0x9a
  404247:	mov    ds:0xcb4ba621,al
  40424c:	jmp    0xce09:0x77d873c6
  404253:	lock stos DWORD PTR es:[edi],eax
  404255:	adc    DWORD PTR [edi],ebp
  404257:	dec    edx
  404258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404259:	inc    ecx
  40425a:	cwde   
  40425b:	xchg   edx,eax
  40425c:	cmc    
  40425d:	sub    cl,BYTE PTR [esi]
  40425f:	inc    edi
  404260:	xchg   ebx,eax
  404261:	push   ds
  404262:	scas   al,BYTE PTR es:[edi]
  404263:	cmp    ah,dl
  404265:	cwde   
  404266:	push   ss
  404267:	mov    edi,0x530dacfa
  40426c:	cs push cs
  40426e:	and    BYTE PTR [esi+0x0],0x3
  404272:	xor    al,0x73
  404274:	fmul   DWORD PTR gs:[edx-0x7c234ffb]
  40427b:	xor    esp,ebp
  40427d:	stc    
  40427e:	lods   eax,DWORD PTR ds:[esi]
  40427f:	mov    esp,0xf08c900
  404284:	adc    BYTE PTR es:[edx],al
  404287:	(bad)  
  404288:	mov    esp,0xc94f1cdb
  40428d:	jmp    0x687b:0x4f842f68
  404294:	add    eax,0x21fbcd01
  404299:	pusha  
  40429a:	sub    bl,BYTE PTR [ecx]
  40429c:	imul   esp,edi,0x6e69617c
  4042a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a3:	gs cdq 
  4042a5:	sub    edx,DWORD PTR [ecx]
  4042a7:	jae    0x404291
  4042a9:	xchg   BYTE PTR [ebp+0x6d],ah
  4042ac:	mov    ds:0x854e636a,eax
  4042b1:	jmp    0x1ec0d59d
  4042b6:	fwait
  4042b7:	cmp    cl,BYTE PTR [edi+0x69]
  4042ba:	bound  ecx,QWORD PTR [esi-0x6b]
  4042bd:	out    0xef,al
  4042bf:	push   esp
  4042c0:	ret    
  4042c1:	test   BYTE PTR [edx],ch
  4042c3:	jecxz  0x404333
  4042c5:	dec    ebp
  4042c6:	mov    BYTE PTR [esi-0x59],0x90
  4042ca:	cmp    BYTE PTR ds:0x10b021f9,al
  4042d0:	jmp    0x7edc:0xa546f8bb
  4042d7:	add    eax,0x1487f03f
  4042dc:	push   ss
  4042dd:	test   al,0x57
  4042df:	jmp    0xaca1:0xd4b992a2
  4042e6:	mov    ah,0x6f
  4042e8:	retf   0xe53a
  4042eb:	enter  0x1fcb,0x7e
  4042ef:	or     eax,0xb1db0f25
  4042f4:	jb     0x404315
  4042f6:	pop    eax
  4042f7:	cmp    BYTE PTR [eax-0xd],cl
  4042fa:	mov    ebx,0xfd9de77a
  4042ff:	pop    edx
  404300:	sbb    eax,0x9832fe1
  404305:	out    0xff,al
  404307:	aam    0xa
  404309:	inc    edi
  40430a:	les    esi,FWORD PTR [edx-0xa]
  40430d:	cmc    
  40430e:	adc    eax,0xae76426b
  404313:	cmp    al,0x59
  404315:	add    al,0x90
  404317:	mov    ebx,0x8576c190
  40431c:	(bad)  
  40431d:	(bad)  
  40431e:	enter  0xffee,0x4
  404322:	mov    edx,DWORD PTR [ebx+0x4]
  404325:	and    DWORD PTR ds:0x42825b,ebx
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42828b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428307
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428247
  404344:	and    DWORD PTR ds:0x4283a7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42838f
  404355:	sbb    DWORD PTR ds:0x42829b,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	mov    esp,0x557cb3b7
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    dh,ch
  40437c:	imul   eax,DWORD PTR [eax+eiz*8+0x78ba563],0xa014ab66
  404387:	pushf  
  404388:	push   esp
  404389:	sub    BYTE PTR [edx],al
  40438b:	xor    eax,0x44d2798c
  404390:	xor    BYTE PTR [edi+0x17],0x1b
  404394:	lods   eax,DWORD PTR ds:[esi]
  404395:	pop    ebx
  404396:	inc    esi
  404397:	cmp    al,0x5f
  404399:	aaa    
  40439a:	jae    0x40433d
  40439c:	mov    al,BYTE PTR [edi-0x6632db9a]
  4043a2:	mov    ebp,0x1ec4c04d
  4043a7:	jmp    0x404329
  4043a9:	repz mov ds:0xe5fbe346,al
  4043af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b0:	stc    
  4043b1:	push   edx
  4043b2:	in     eax,dx
  4043b3:	ret    
  4043b4:	(bad)  
  4043b5:	cmp    eax,0x7f2dd661
  4043ba:	push   edx
  4043bb:	mov    bl,0xb3
  4043bd:	pop    eax
  4043be:	test   BYTE PTR [edx-0x51fb5c9d],ch
  4043c4:	sbb    DWORD PTR [edx],ebp
  4043c6:	pop    ds
  4043c7:	xchg   ecx,eax
  4043c8:	aas    
  4043c9:	ds push ebp
  4043cb:	fdiv   DWORD PTR [ebx]
  4043cd:	(bad)  
  4043ce:	lds    edx,FWORD PTR [esi+0x72]
  4043d1:	test   DWORD PTR [esi-0x487ad131],0x5e63c89d
  4043db:	popa   
  4043dc:	push   ebp
  4043dd:	or     bl,BYTE PTR [ecx]
  4043df:	sub    al,0x77
  4043e1:	cmovs  esp,DWORD PTR [ecx]
  4043e4:	(bad)  
  4043e6:	sub    eax,0xbe6b6e63
  4043eb:	xor    al,cl
  4043ed:	dec    eax
  4043ee:	jle    0x40442a
  4043f0:	and    al,0xee
  4043f2:	out    dx,al
  4043f3:	jb     0x404449
  4043f5:	cdq    
  4043f6:	outs   dx,DWORD PTR ds:[esi]
  4043f7:	out    0x6a,eax
  4043f9:	out    dx,eax
  4043fa:	mov    ds:0xce88b171,al
  4043ff:	sahf   
  404400:	pop    ds
  404401:	test   eax,0xcc615c1e
  404406:	shl    BYTE PTR ds:0x1d6e70a,cl
  40440c:	popf   
  40440d:	jno    0x4043d1
  40440f:	ss stc 
  404411:	cs cdq 
  404413:	mov    al,ds:0x8d63e339
  404418:	and    al,0x86
  40441a:	div    DWORD PTR [esi]
  40441c:	xor    al,dh
  40441e:	mov    cl,0x40
  404420:	test   DWORD PTR [eax+0xc],edi
  404423:	add    edi,DWORD PTR [ecx-0x29]
  404426:	xchg   DWORD PTR [ecx-0x33436318],eax
  40442c:	mov    ds:0x1eda27f5,eax
  404431:	push   eax
  404432:	aad    0x4a
  404434:	lds    ebp,FWORD PTR [edx-0x26e4ca1a]
  40443a:	aam    0xbc
  40443c:	sti    
  40443d:	into   
  40443e:	loop   0x404445
  404440:	xor    al,0xd9
  404442:	mov    eax,0xbe036d07
  404447:	push   esp
  404448:	sub    eax,0xd76afc16
  40444d:	push   cs
  40444e:	enter  0x5878,0xe
  404452:	cmp    al,0x60
  404454:	mov    ebp,0xd8b647a0
  404459:	mov    ch,0x1f
  40445b:	test   DWORD PTR [ecx],esp
  40445d:	ins    DWORD PTR es:[edi],dx
  40445e:	call   0xecf82913
  404463:	in     eax,0x44
  404465:	out    0x4e,eax
  404467:	and    BYTE PTR [ebp+0x173c9db5],bh
  40446d:	hlt    
  40446e:	mov    cl,0x11
  404470:	ins    DWORD PTR es:[edi],dx
  404471:	push   esp
  404472:	xchg   ebx,eax
  404473:	sub    DWORD PTR [ecx-0x3f],0x3357a27d
  40447a:	or     ecx,ebx
  40447c:	test   ecx,edx
  40447e:	ret    0x81c3
  404481:	xchg   DWORD PTR [edx+0x53],ebp
  404484:	dec    edx
  404485:	ja     0x404454
  404487:	xor    al,0x6a
  404489:	imul   ecx,edi,0xffffffc3
  40448c:	mov    eax,0x42a6ae0e
  404491:	rcr    ebp,0x56
  404494:	pop    ebx
  404495:	ins    DWORD PTR es:[edi],dx
  404496:	push   0x5
  404498:	xchg   DWORD PTR [edi],esi
  40449a:	mov    cl,BYTE PTR [eax+0x65]
  40449d:	lock xchg esp,eax
  40449f:	pusha  
  4044a0:	push   ds
  4044a1:	dec    ecx
  4044a2:	mov    bh,0x10
  4044a4:	cmp    ebp,DWORD PTR [esi+esi*4]
  4044a7:	inc    ecx
  4044a8:	mov    cl,0x0
  4044aa:	cmp    bh,al
  4044ac:	out    dx,eax
  4044ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044ae:	jb     0x404515
  4044b0:	cli    
  4044b1:	cmp    BYTE PTR [eax-0x5e208be9],ah
  4044b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044b8:	(bad)  
  4044b9:	jge    0x404517
  4044bb:	mov    eax,0xe107db23
  4044c0:	pop    ebx
  4044c1:	and    BYTE PTR [ecx-0x23],dl
  4044c4:	(bad)  
  4044c5:	pop    ecx
  4044c6:	test   al,0x85
  4044c8:	mov    al,ds:0xdbc8e35a
  4044cd:	fwait
  4044ce:	test   BYTE PTR [edi+0x606d9e43],al
  4044d4:	xor    DWORD PTR [ebx-0x44c94c],0xa72c7366
  4044de:	sub    eax,DWORD PTR [esi]
  4044e0:	and    BYTE PTR [ebp-0x1e],ah
  4044e3:	dec    esp
  4044e4:	jne    0x404486
  4044e6:	and    BYTE PTR [eax+esi*4-0x78],ah
  4044ea:	xchg   esi,eax
  4044eb:	inc    esi
  4044ec:	or     al,0x37
  4044ee:	outs   dx,BYTE PTR ds:[esi]
  4044ef:	scas   al,BYTE PTR es:[edi]
  4044f0:	hlt    
  4044f1:	ja     0x404558
  4044f3:	dec    ecx
  4044f4:	es (bad) 
  4044f6:	iret   
  4044f7:	mov    edi,0xc62d644c
  4044fc:	pop    ebx
  4044fd:	call   0x7b7a7164
  404502:	(bad)  
  404503:	rcl    DWORD PTR [edx],0x80
  404506:	(bad)  ds:[edx-0x3c]
  40450a:	or     esp,DWORD PTR [esp+ebx*8]
  40450d:	pop    ds
  40450e:	adc    al,0x1e
  404510:	lods   eax,DWORD PTR ds:[esi]
  404511:	mov    ebp,0x187fbeec
  404516:	xor    eax,0xf206573e
  40451b:	mov    al,0x50
  40451d:	and    eax,0x7011a9f7
  404522:	cmp    bl,0x33
  404525:	fdiv   st,st(3)
  404527:	add    eax,0x31e66ee2
  40452c:	in     al,dx
  40452d:	bound  ecx,QWORD PTR [edx]
  40452f:	xlat   BYTE PTR ds:[ebx]
  404530:	dec    ebx
  404531:	dec    eax
  404532:	pop    edi
  404534:	ds inc edi
  404536:	dec    esp
  404537:	hlt    
  404538:	arpl   bx,bx
  40453a:	addr16 jmp 0x404585
  40453d:	dec    eax
  40453e:	or     esi,DWORD PTR [eax]
  404540:	stc    
  404541:	popa   
  404542:	and    DWORD PTR [ebx-0x1f41ade1],esp
  404548:	popa   
  404549:	push   esp
  40454a:	(bad)  
  40454b:	sub    BYTE PTR [ecx+0x6d],ch
  40454e:	ret    
  40454f:	or     al,0x9a
  404551:	test   al,0xa6
  404553:	test   al,0xf
  404555:	xchg   ebp,eax
  404556:	pop    eax
  404557:	repz ror DWORD PTR ds:0x888c9d21,1
  40455e:	rol    BYTE PTR [eax-0x59d1246],0xd0
  404565:	lock aad 0x1f
  404568:	retf   
  404569:	and    ecx,esp
  40456b:	cmc    
  40456c:	lods   al,BYTE PTR ds:[esi]
  40456d:	xchg   esi,eax
  40456e:	mov    ebx,0xa8ab6e2e
  404573:	fsub   DWORD PTR [eax+0x30]
  404576:	fsubr  QWORD PTR [esi+0x2f]
  404579:	(bad)  
  40457a:	pop    edx
  40457b:	xor    bh,dh
  40457d:	add    ebp,DWORD PTR [edi]
  40457f:	idiv   BYTE PTR [ebx+ebp*8]
  404582:	push   ds
  404583:	mov    al,ds:0xfa19f9e9
  404588:	push   ecx
  404589:	mov    ebp,0x1c8f158a
  40458e:	pop    edi
  40458f:	ja     0x4045c5
  404591:	pop    ecx
  404592:	ror    DWORD PTR [ecx],cl
  404594:	outs   dx,DWORD PTR ds:[esi]
  404595:	int3   
  404596:	(bad)  [ebx-0x30]
  404599:	ror    BYTE PTR [ebx-0x5e],cl
  40459c:	jb     0x4045d3
  40459e:	sbb    BYTE PTR [esi],dh
  4045a0:	jb     0x404609
  4045a2:	jb     0x404623
  4045a4:	das    
  4045a5:	scas   eax,DWORD PTR es:[edi]
  4045a6:	mov    es,WORD PTR [ecx]
  4045a8:	push   edi
  4045a9:	adc    ecx,DWORD PTR [ebp+0x1735327c]
  4045af:	rcl    BYTE PTR [edi],1
  4045b1:	xchg   edi,eax
  4045b2:	push   0x10
  4045b4:	sub    al,0x9c
  4045b6:	cmp    ch,BYTE PTR [ecx+0x1f]
  4045b9:	mov    es,WORD PTR [esi+eax*2]
  4045bc:	jl     0x404636
  4045be:	pop    es
  4045bf:	mov    bl,0x61
  4045c1:	dec    esi
  4045c2:	cld    
  4045c3:	mov    ebx,0x6c10530b
  4045c8:	stc    
  4045c9:	rol    BYTE PTR [esi-0x62e2df72],cl
  4045cf:	cli    
  4045d0:	fwait
  4045d1:	mov    ebx,0x878100f0
  4045d6:	pusha  
  4045d7:	icebp  
  4045d8:	(bad)  
  4045d9:	leave  
  4045da:	jbe    0x40456d
  4045dc:	adc    cl,BYTE PTR [ecx+0x34]
  4045df:	std    
  4045e0:	xchg   BYTE PTR [edx+esi*4+0x17f97385],bl
  4045e7:	sub    bh,BYTE PTR [ebx-0x2f]
  4045ea:	jae    0x4045f6
  4045ec:	retf   0xd9b9
  4045ef:	mov    ecx,0x880c090d
  4045f4:	ds xchg esp,eax
  4045f6:	or     edi,DWORD PTR [esi+0x17f83b45]
  4045fc:	xchg   esp,eax
  4045fd:	or     DWORD PTR [ebx+edx*1+0x66333d85],eax
  404604:	push   ds
  404605:	shr    BYTE PTR [ecx],0xf0
  404608:	mov    al,ds:0x12f088da
  40460d:	adc    DWORD PTR [ecx],ecx
  40460f:	or     ebp,DWORD PTR [edx]
  404611:	(bad)  
  404612:	sub    eax,0x67b86122
  404617:	js     0x404690
  404619:	loope  0x40464a
  40461b:	push   ss
  40461c:	jo     0x404696
  40461e:	nop
  40461f:	push   es
  404620:	jmp    0x1496:0xc827d9ce
  404627:	fsub   QWORD PTR [edx]
  404629:	mov    eax,ds:0xfc70b1af
  40462e:	add    edx,DWORD PTR [edx-0x5c]
  404631:	arpl   WORD PTR [ebx],ax
  404633:	jmp    0x476b8a4e
  404638:	in     eax,dx
  404639:	mov    es:0xb4cd8dfb,eax
  40463f:	or     BYTE PTR ds:0x50064e8b,dl
  404645:	sbb    DWORD PTR [edi+0x11],esi
  404648:	pop    ecx
  404649:	lods   al,BYTE PTR ds:[esi]
  40464a:	out    0xd3,eax
  40464c:	sbb    dh,BYTE PTR [edi]
  40464e:	inc    edx
  40464f:	cdq    
  404650:	loop   0x404671
  404652:	push   cs
  404653:	or     DWORD PTR [edi+0x4ff6ec38],eax
  404659:	sbb    al,0xa3
  40465b:	mov    edi,0x25375eaa
  404660:	cmc    
  404661:	ret    0xfc11
  404664:	mov    eax,ds:0x30b25799
  404669:	xchg   DWORD PTR [eax],eax
  40466b:	jbe    0x4045f0
  40466d:	aam    0x85
  40466f:	dec    ebp
  404670:	div    BYTE PTR [ecx+0x57]
  404673:	mov    ecx,0x9abe8c04
  404678:	imul   esi,DWORD PTR [edi+0x42],0xffffff81
  40467c:	mov    edx,0xff51b784
  404681:	inc    ecx
  404682:	dec    esp
  404683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404684:	cmp    edx,edx
  404686:	sbb    BYTE PTR [esi-0x2c],dl
  404689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40468a:	add    esp,ebx
  40468c:	cli    
  40468d:	and    DWORD PTR [esi-0x1d86318c],ecx
  404693:	retf   0x8f47
  404696:	xor    eax,0x56287717
  40469b:	popa   
  40469c:	mov    esi,DWORD PTR [ecx]
  40469e:	ins    BYTE PTR es:[edi],dx
  40469f:	add    al,0xf
  4046a1:	jnp    0x404708
  4046a3:	mov    eax,ds:0xd121f739
  4046a8:	aad    0xc8
  4046aa:	inc    esi
  4046ab:	cmp    BYTE PTR [edx-0x57],bl
  4046ae:	outs   dx,DWORD PTR ds:[esi]
  4046af:	inc    ebp
  4046b0:	mov    esi,0x71151869
  4046b5:	xor    edx,DWORD PTR [edi]
  4046b7:	call   0x3dbe7577
  4046bc:	ret    0x40c0
  4046bf:	sbb    ebp,DWORD PTR [edx-0x24416de8]
  4046c5:	jbe    0x40470f
  4046c7:	push   ecx
  4046c8:	mov    eax,ebp
  4046ca:	lods   al,BYTE PTR ds:[esi]
  4046cb:	sub    eax,0xab657207
  4046d0:	adc    eax,DWORD PTR [edi+0x598b2b22]
  4046d6:	sub    ebx,edi
  4046d8:	xchg   BYTE PTR [esi+0x3b],ch
  4046db:	dec    edx
  4046dc:	call   0xa4b83605
  4046e1:	idiv   DWORD PTR [esi-0x19]
  4046e4:	stos   DWORD PTR es:[edi],eax
  4046e5:	sbb    bl,BYTE PTR [edx]
  4046e7:	or     edi,ebx
  4046e9:	add    al,0x2b
  4046eb:	pop    edx
  4046ec:	shr    BYTE PTR [eax+0x5d4b656b],1
  4046f2:	imul   eax,DWORD PTR [eax],0xc25cd91
  4046f8:	(bad)  
  4046f9:	test   eax,0xa6b7bba
  4046fe:	cdq    
  4046ff:	cwde   
  404700:	cmp    DWORD PTR [ecx+0x2e0006b2],edx
  404706:	push   esi
  404707:	lock and ch,BYTE PTR [edx]
  40470a:	ror    bl,1
  40470c:	cmp    al,0xbd
  40470e:	punpckhdq mm5,QWORD PTR [ecx+ebp*4+0x17]
  404713:	pop    ecx
  404714:	xchg   edx,eax
  404715:	loop   0x404728
  404717:	sub    eax,0x51589141
  40471c:	jbe    0x4046fc
  40471e:	dec    ebp
  40471f:	and    eax,0xde17588a
  404724:	fwait
  404725:	jg     0x40473b
  404727:	mov    dl,0x8a
  404729:	and    eax,0xcfde183f
  40472e:	push   0x485e0b9f
  404733:	(bad)  
  404735:	test   BYTE PTR [esp+ebx*2+0x1922d0a8],al
  40473c:	shrd   ecx,edx,0x2
  404740:	or     DWORD PTR ds:0x428293,0x42824f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42826f
  404753:	or     DWORD PTR ds:0x42836f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xb07bb85b
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [eax+0x5b],bh
  40477b:	test   eax,0x7636292f
  404780:	adc    BYTE PTR [ebx],bh
  404782:	cmp    cl,ah
  404784:	hlt    
  404785:	rol    ecx,cl
  404787:	shl    BYTE PTR ds:[ecx],0xb6
  40478b:	push   0xd7684372
  404790:	sub    DWORD PTR es:[esi+0x49],ecx
  404794:	fcmove st,st(3)
  404796:	sub    dh,0xe0
  404799:	push   ebx
  40479a:	dec    ecx
  40479b:	rcr    edx,0x62
  40479e:	repnz fstp TBYTE PTR [eax+esi*2-0x475d1ee4]
  4047a6:	shl    BYTE PTR [ecx-0x69253206],0xd7
  4047ad:	fnstsw WORD PTR [esi+0x402278ed]
  4047b3:	popa   
  4047b4:	sahf   
  4047b5:	xor    DWORD PTR [edi-0x20],ebp
  4047b8:	imul   ecx,DWORD PTR [ebx-0xb],0xffffffb0
  4047bc:	pop    esp
  4047bd:	adc    eax,ecx
  4047bf:	fwait
  4047c0:	mov    dl,0x4d
  4047c2:	and    DWORD PTR [eax],0x38d331f4
  4047c8:	rcl    DWORD PTR [eax-0x96379b5],0x7f
  4047cf:	ret    
  4047d0:	mov    dh,0xd7
  4047d2:	inc    esi
  4047d3:	sub    ah,dh
  4047d5:	mov    dh,dl
  4047d7:	enter  0x828e,0x45
  4047db:	aam    0x24
  4047dd:	and    al,0x42
  4047df:	sub    eax,0xc277b5ba
  4047e4:	es shl bl,1
  4047e7:	or     BYTE PTR [esi-0x7b083210],0x8f
  4047ee:	jne    0x4047c7
  4047f0:	jnp    0x404851
  4047f2:	mov    bh,0x41
  4047f4:	sahf   
  4047f5:	lods   al,BYTE PTR ds:[esi]
  4047f6:	sbb    esp,DWORD PTR [eax-0x52]
  4047f9:	stos   BYTE PTR es:[edi],al
  4047fa:	push   es
  4047fb:	mov    dl,0xe7
  4047fd:	sbb    eax,0xf2676d45
  404802:	inc    edi
  404803:	pusha  
  404804:	mov    ebp,cs
  404806:	aad    0xa6
  404808:	jns    0x4047dd
  40480a:	add    BYTE PTR [edi-0x3482ca9a],cl
  404810:	inc    edi
  404811:	jns    0x4047cb
  404813:	sub    DWORD PTR [eax+0x76357f44],ecx
  404819:	and    ebx,edi
  40481b:	adc    dh,0xe1
  40481e:	xchg   al,dh
  404820:	lahf   
  404821:	ins    BYTE PTR es:[edi],dx
  404822:	jns    0x404840
  404824:	and    cl,BYTE PTR [edx+0x2198878a]
  40482a:	push   esi
  40482b:	push   es
  40482c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40482d:	mov    WORD PTR [ebx],gs
  40482f:	lock mov bh,0xec
  404832:	push   cs
  404833:	out    0x62,eax
  404835:	pop    ds
  404836:	pop    edx
  404837:	int    0x93
  404839:	int    0xf
  40483b:	clc    
  40483c:	cmp    BYTE PTR [ebp+0x4d96923b],cl
  404842:	dec    esp
  404843:	xlat   BYTE PTR ds:[ebx]
  404844:	mov    eax,ds:0x9eaa0add
  404849:	mov    dl,0xc0
  40484b:	(bad)  
  40484c:	push   ds
  40484d:	test   al,0x22
  40484f:	test   BYTE PTR [di+0x4d],0x2e
  404854:	(bad)  
  404856:	loopne 0x4047e4
  404858:	dec    esi
  404859:	in     eax,dx
  40485a:	push   esp
  40485b:	mov    ah,0x26
  40485d:	setl   BYTE PTR [ecx]
  404860:	popa   
  404861:	(bad)  
  404862:	call   0x197fe001
  404867:	std    
  404868:	aad    0x9
  40486a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40486b:	ja     0x40480c
  40486d:	scas   eax,DWORD PTR es:[edi]
  40486e:	call   0xd2506e46
  404873:	dec    esi
  404874:	rcr    dh,cl
  404876:	test   DWORD PTR [edi-0x295123eb],0xa62e82c0
  404880:	fstp   TBYTE PTR [ecx]
  404882:	in     eax,dx
  404883:	icebp  
  404884:	ret    0x668e
  404887:	call   0x9df2:0x8e0b82b
  40488e:	mov    ds:0xc396c60e,eax
  404893:	sbb    BYTE PTR [ebx+0x208cf217],ch
  404899:	xor    BYTE PTR [esi],bl
  40489b:	out    dx,al
  40489c:	les    esp,FWORD PTR [edx+0x3]
  40489f:	mov    bl,0x6d
  4048a1:	shr    BYTE PTR [ebp-0x46d1d399],0x28
  4048a8:	stos   DWORD PTR es:[edi],eax
  4048a9:	daa    
  4048aa:	jmp    0xb4e76c59
  4048af:	in     al,0x98
  4048b1:	pop    eax
  4048b2:	dec    eax
  4048b3:	sub    bh,ch
  4048b5:	lods   al,BYTE PTR ds:[esi]
  4048b6:	daa    
  4048b7:	pop    es
  4048b8:	xchg   esi,eax
  4048b9:	inc    ebx
  4048ba:	ret    0x7060
  4048bd:	sub    ch,al
  4048bf:	add    eax,0x48941b93
  4048c4:	fsub   QWORD PTR [edx+0x33]
  4048c7:	push   esi
  4048c8:	scas   al,BYTE PTR es:[edi]
  4048c9:	ficomp WORD PTR [edi+edx*4+0x5e7b45b4]
  4048d0:	es ja  0x4048cb
  4048d3:	push   eax
  4048d4:	add    BYTE PTR [eax],bl
  4048d6:	scas   al,BYTE PTR es:[edi]
  4048d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048d8:	jp     0x404931
  4048da:	and    cl,BYTE PTR [eax+eax*8]
  4048dd:	adc    eax,0x75275e25
  4048e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048e3:	fincstp 
  4048e5:	pushf  
  4048e6:	cwde   
  4048e7:	repz mov esi,0x3dc01740
  4048ed:	pop    ss
  4048ee:	stos   BYTE PTR es:[edi],al
  4048ef:	mov    ds:0xab8f1bae,al
  4048f4:	sub    dl,BYTE PTR [edx]
  4048f6:	xor    dl,BYTE PTR [eax-0x933edf]
  4048fc:	mov    ch,BYTE PTR es:[ebx+0x13]
  404900:	inc    eax
  404901:	jmp    0x404933
  404903:	test   al,0xd3
  404905:	jmp    0xf729:0x43bfb363
  40490c:	mov    al,0xaa
  40490e:	cs call 0x1a788789
  404914:	adc    BYTE PTR [esp+edx*8-0xd],bh
  404918:	jmp    0x404902
  40491a:	jbe    0x4048b7
  40491c:	inc    ecx
  40491d:	sub    eax,0x543c6ca0
  404922:	push   ecx
  404923:	add    al,0xf2
  404925:	adc    al,0x94
  404927:	inc    edi
  404928:	lds    ecx,FWORD PTR [esp+eiz*8-0x2]
  40492c:	dec    ebx
  40492d:	(bad)  
  40492e:	rol    BYTE PTR [ebx-0xe],1
  404931:	cdq    
  404932:	xchg   edi,eax
  404933:	arpl   WORD PTR [edx+0x15],dx
  404936:	push   0xffffffe2
  404938:	rcr    BYTE PTR [ecx+edi*8-0x9],1
  40493c:	out    0xae,eax
  40493e:	cmp    al,0x3e
  404940:	jl     0x4049a5
  404942:	dec    edi
  404943:	sar    edi,1
  404945:	mov    esi,0xc1d0c14e
  40494a:	inc    ebp
  40494b:	inc    edi
  40494c:	cdq    
  40494d:	scas   al,BYTE PTR es:[edi]
  40494e:	ds push edx
  404950:	dec    edx
  404951:	inc    ebp
  404952:	stos   BYTE PTR es:[edi],al
  404953:	push   ebp
  404954:	push   esi
  404955:	gs stos BYTE PTR es:[edi],al
  404957:	or     eax,0x8e794da2
  40495c:	cmp    DWORD PTR [esi-0x7589edd6],esi
  404962:	jns    0x404938
  404964:	inc    ebx
  404965:	out    dx,eax
  404966:	jne    0x4048fd
  404968:	movsx  edi,WORD PTR [eax]
  40496b:	xchg   DWORD PTR [eax+ebp*8+0x37ec3f1a],ecx
  404972:	mov    edi,0x26c2cc91
  404977:	fs xchg ebx,eax
  404979:	push   ecx
  40497a:	xchg   ecx,eax
  40497b:	fadd   st(6),st
  40497d:	mov    ebx,0x20060127
  404982:	jmp    0x786e2037
  404987:	push   0xd5039813
  40498c:	div    BYTE PTR [edi+0x23]
  40498f:	inc    esi
  404990:	pop    esp
  404991:	and    DWORD PTR [esi-0x7e],edx
  404994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404995:	and    ebx,eax
  404997:	push   esp
  404998:	int3   
  404999:	mov    dh,0x90
  40499b:	xchg   edx,eax
  40499c:	dec    eax
  40499d:	out    dx,al
  40499e:	mov    dh,0x14
  4049a0:	loopne 0x404a16
  4049a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049a3:	xor    al,0xe0
  4049a5:	jmp    0x2523:0x163cae6b
  4049ac:	cs sub dh,bh
  4049af:	outs   dx,BYTE PTR ds:[esi]
  4049b0:	push   eax
  4049b1:	iret   
  4049b2:	cmp    eax,0x93019e29
  4049b7:	sbb    eax,esp
  4049b9:	gs cdq 
  4049bb:	nop
  4049bc:	cmc    
  4049bd:	and    dl,dl
  4049bf:	jb     0x404a2f
  4049c1:	outs   dx,BYTE PTR ds:[esi]
  4049c2:	(bad)  
  4049c3:	mov    ch,0x6e
  4049c5:	fucomip st,st(5)
  4049c7:	or     ecx,DWORD PTR [esi+0x61]
  4049ca:	fild   QWORD PTR [ecx-0x5d]
  4049cd:	jge    0x4049a9
  4049cf:	call   0x5cf4:0x10731f1c
  4049d6:	xchg   DWORD PTR [edi-0x41],edi
  4049d9:	fnstenv [ecx-0x3b]
  4049dc:	out    0x59,al
  4049de:	sbb    BYTE PTR [edx+0x79b23b22],dh
  4049e4:	sub    bh,ch
  4049e6:	cs cmp esp,eax
  4049e9:	mov    ch,0x91
  4049eb:	cmovno ebp,DWORD PTR [esi+0x771ea15c]
  4049f2:	xchg   ebp,eax
  4049f3:	sar    BYTE PTR [ecx],cl
  4049f5:	addr16 mov eax,0xba6d0faf
  4049fb:	out    dx,eax
  4049fc:	test   DWORD PTR [edx+0x1a57fcd],esi
  404a02:	push   ebx
  404a03:	cmp    edx,DWORD PTR [ebp+0x43ce3a12]
  404a09:	lods   eax,DWORD PTR ds:[esi]
  404a0a:	sub    dl,BYTE PTR [ebp+0x77be4c21]
  404a10:	aaa    
  404a11:	js     0x4049c9
  404a13:	call   0x89c7:0xab69501e
  404a1a:	pop    eax
  404a1b:	mov    edi,DWORD PTR [edi+0x4402d750]
  404a21:	jl     0x404a66
  404a23:	imul   edi,DWORD PTR [ebx],0xa5bed35c
  404a29:	ds test eax,0xc36c7629
  404a2f:	neg    BYTE PTR ds:0xd266d223
  404a35:	jno    0x4049cf
  404a37:	sub    DWORD PTR [esi],eax
  404a39:	push   0xffffffd6
  404a3b:	loope  0x4049f5
  404a3d:	sahf   
  404a3e:	clc    
  404a3f:	shr    DWORD PTR [esi],cl
  404a41:	push   edx
  404a42:	inc    eax
  404a43:	in     eax,dx
  404a44:	lea    edi,ss:[edi]
  404a47:	or     DWORD PTR [ebp+ebp*1+0x4d],0x9037fca6
  404a4f:	sahf   
  404a50:	and    dl,BYTE PTR ds:[edx+0x538187ac]
  404a57:	add    esp,DWORD PTR [edx-0x74]
  404a5a:	add    BYTE PTR [ecx+0x36],ch
  404a5d:	loop   0x404a9a
  404a5f:	sub    BYTE PTR [ebx-0x1d],0x32
  404a63:	adc    al,0xc0
  404a65:	loope  0x4049eb
  404a67:	test   ebx,esp
  404a69:	sub    ch,ch
  404a6b:	retf   
  404a6c:	(bad)  
  404a6d:	mov    eax,ds:0x6b4e35ad
  404a72:	mov    edx,0xa9cc3c0
  404a77:	jl     0x404aee
  404a79:	jo     0x404a1d
  404a7b:	jbe    0x404ac0
  404a7d:	and    DWORD PTR [edi+0x7f9eb533],0xb2158733
  404a87:	je     0x404ab9
  404a89:	jae    0x404ab0
  404a8b:	pop    edx
  404a8c:	jb     0x404ae8
  404a8e:	jp     0x404a46
  404a90:	fwait
  404a91:	in     eax,0x2c
  404a93:	fidiv  WORD PTR [esi-0x41]
  404a96:	retf   0x8387
  404a99:	jae    0x404abb
  404a9b:	pop    edi
  404a9c:	(bad)  [ecx+0x5b]
  404a9f:	push   ss
  404aa0:	inc    esp
  404aa1:	dec    ebp
  404aa2:	scas   eax,DWORD PTR es:[edi]
  404aa3:	sbb    al,0xbe
  404aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa6:	xchg   BYTE PTR [edx],al
  404aa8:	push   ebp
  404aa9:	clc    
  404aaa:	lods   al,BYTE PTR ds:[esi]
  404aab:	mov    bl,al
  404aad:	test   dl,bl
  404aaf:	xchg   BYTE PTR ds:0x704e57a5,bl
  404ab5:	fwait
  404ab6:	inc    edx
  404ab7:	das    
  404ab8:	mov    ebx,0xba677bb7
  404abd:	cwde   
  404abe:	(bad)  
  404abf:	mov    ecx,0x9f9512f3
  404ac4:	psubb  mm3,QWORD PTR [ecx]
  404ac7:	jnp    0x404aac
  404ac9:	in     al,0x5b
  404acb:	jne    0x404acc
  404acd:	movaps xmm2,XMMWORD PTR [edi+0x26]
  404ad1:	jbe    0x404aeb
  404ad3:	pushf  
  404ad4:	fsub   QWORD PTR [ebx+0xb]
  404ad7:	shl    BYTE PTR [bx+si-0x4a],0xb4
  404adc:	in     al,0xe8
  404ade:	enter  0xc8db,0x26
  404ae2:	sub    dh,BYTE PTR [ecx+edi*2+0x23]
  404ae6:	fs cmp esp,ebp
  404ae9:	outs   dx,DWORD PTR ds:[esi]
  404aea:	jae    0x404b09
  404aec:	adc    BYTE PTR ds:0x8150f98f,bh
  404af2:	cld    
  404af3:	icebp  
  404af4:	or     edx,eax
  404af6:	cmc    
  404af7:	dec    ebx
  404af8:	adc    bl,BYTE PTR [ecx-0x70]
  404afb:	pop    ebp
  404afc:	jmp    0x9b52:0x45e9217
  404b03:	cs mov esi,0x4e64d12e
  404b09:	call   0x9ad46c2d
  404b0e:	aaa    
  404b0f:	test   eax,0xa1d604c6
  404b14:	outs   dx,BYTE PTR ds:[esi]
  404b15:	sbb    BYTE PTR ds:0x532feafa,0x44
  404b1c:	pusha  
  404b1d:	jge    0x404add
  404b1f:	sbb    DWORD PTR [ecx+ecx*4-0x3c],ebx
  404b23:	mov    edx,DWORD PTR [edi]
  404b25:	lock pop edx
  404b27:	outs   dx,BYTE PTR ds:[esi]
  404b28:	adc    dh,cl
  404b2a:	xor    ebp,esi
  404b2c:	mov    eax,edx
  404b2e:	dec    edi
  404b2f:	ins    DWORD PTR es:[edi],dx
  404b30:	popf   
  404b31:	cli    
  404b32:	add    eax,0xecc6209
  404b37:	adc    ch,al
  404b39:	jnp    0x493d64a
  404b3f:	xor    DWORD PTR [ebp-0x1c],edi
  404b42:	add    DWORD PTR ds:0x428283,0x4282f7
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	or     edi,DWORD PTR [edi-0x3e9f436b]
  404b65:	sbb    BYTE PTR [eax],bl
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [eax-0x4d200337],bh
  404b70:	outs   dx,BYTE PTR ds:[esi]
  404b71:	fisttp DWORD PTR [ebp-0x6c]
  404b74:	pop    ss
  404b75:	ja     0x404b7a
  404b77:	push   esi
  404b78:	xor    BYTE PTR [ebp+0x1],bh
  404b7b:	push   ss
  404b7c:	(bad)  [esi-0xa9000da]
  404b83:	(bad)  
  404b84:	and    al,0x80
  404b86:	dec    esp
  404b87:	retf   0x1c5a
  404b8a:	aam    0x7f
  404b8c:	imul   ecx,esi,0xe07252e8
  404b92:	jge    0x404b2a
  404b94:	mov    ah,ch
  404b96:	mov    bh,0x6a
  404b98:	jmp    0xb25e:0xb55fdeea
  404b9f:	(bad)  
  404ba0:	cdq    
  404ba1:	pusha  
  404ba2:	daa    
  404ba3:	push   edx
  404ba4:	jp     0x404be6
  404ba6:	sbb    BYTE PTR [edx],bl
  404ba8:	inc    ebp
  404ba9:	sub    al,BYTE PTR [ebp+0x6a]
  404bac:	ret    0x579e
  404baf:	dec    esp
  404bb0:	and    ebx,DWORD PTR [esi-0x18]
  404bb3:	out    0xf5,al
  404bb5:	aad    0x92
  404bb7:	lea    eax,[ebp-0x35a48b06]
  404bbd:	leave  
  404bbe:	aas    
  404bbf:	xor    dl,BYTE PTR [ebp-0x61]
  404bc2:	fbstp  TBYTE PTR [edx+ebx*2-0x37]
  404bc6:	add    eax,0xa593445e
  404bcb:	or     eax,DWORD PTR [eax+0x4226384]
  404bd1:	out    dx,eax
  404bd2:	push   eax
  404bd3:	jne    0x404c0c
  404bd5:	jg     0x404c54
  404bd7:	mov    edi,0x2fb8ce7f
  404bdc:	ja     0x404c16
  404bde:	(bad)
  404be1:	ficomp WORD PTR [ebp-0x1e]
  404be4:	(bad)  
  404be6:	xor    DWORD PTR [edx],0x3c780c54
  404bec:	jl     0x404c6c
  404bee:	cdq    
  404bef:	jge    0x404bcd
  404bf1:	add    edx,DWORD PTR [esi+ebx*4-0x2e]
  404bf5:	jge    0x404c09
  404bf7:	xor    ah,BYTE PTR [eax-0x73901509]
  404bfd:	jnp    0x404bea
  404bff:	int3   
  404c00:	not    BYTE PTR [eax-0x5188834d]
  404c06:	sbb    DWORD PTR [ebx+0x4e],ecx
  404c09:	xor    DWORD PTR [edx+0x242b2fe3],0xffffffde
  404c10:	sti    
  404c11:	xchg   esp,eax
  404c12:	jp     0x404c39
  404c14:	jle    0x404bc5
  404c16:	push   esi
  404c17:	jecxz  0x404bc1
  404c19:	loope  0x404c2c
  404c1b:	push   esp
  404c1c:	adc    edx,DWORD PTR [edi]
  404c1e:	ja     0x404c87
  404c20:	push   ecx
  404c21:	rol    BYTE PTR [edx+0x13875c2],cl
  404c27:	fld1   
  404c29:	in     eax,dx
  404c2a:	pop    edi
  404c2b:	mov    al,0xfb
  404c2d:	ror    BYTE PTR [edi+0x446e7c45],cl
  404c33:	scas   eax,DWORD PTR es:[edi]
  404c34:	and    DWORD PTR [ecx-0x43],ebx
  404c37:	and    BYTE PTR [edx+0x31],0xf
  404c3b:	xchg   esi,eax
  404c3c:	add    DWORD PTR [ebp-0x1c],ebp
  404c3f:	adc    eax,0xe0322eca
  404c44:	shr    BYTE PTR [esi-0x6d],cl
  404c47:	scas   eax,DWORD PTR es:[edi]
  404c48:	pop    ecx
  404c49:	int    0x8a
  404c4b:	dec    edx
  404c4c:	call   0x1a0fc58b
  404c51:	or     ecx,esi
  404c53:	addr16 jo 0x404cce
  404c56:	cdq    
  404c57:	into   
  404c58:	sbb    eax,ecx
  404c5a:	int3   
  404c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c5c:	nop
  404c5d:	add    dl,BYTE PTR [esi+eiz*1-0x1cdd1809]
  404c64:	sub    eax,0xa9419f06
  404c69:	jl     0x404bf5
  404c6b:	dec    edx
  404c6c:	xor    cl,BYTE PTR [esi-0x32d155f]
  404c72:	(bad)  
  404c73:	push   esi
  404c74:	cs jecxz 0x404cdf
  404c77:	mov    dl,0x17
  404c79:	aas    
  404c7a:	fwait
  404c7b:	std    
  404c7c:	inc    esi
  404c7d:	pusha  
  404c7e:	xchg   esp,eax
  404c7f:	cwde   
  404c80:	add    eax,0xa0fae161
  404c85:	jnp    0x404cee
  404c87:	xlat   BYTE PTR ds:[ebx]
  404c88:	(bad)  
  404c89:	sub    eax,0x3c2b7ce9
  404c8e:	xor    al,0xc5
  404c90:	and    DWORD PTR [esi],esp
  404c92:	push   ebp
  404c93:	sbb    al,0x1f
  404c95:	cmp    eax,0x1b32e8d3
  404c9a:	(bad)
  404c9d:	mov    dh,0x9
  404c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca0:	sbb    BYTE PTR [ebx],ch
  404ca2:	dec    eax
  404ca3:	cmp    DWORD PTR [eax+0x12],0xffffff8b
  404ca7:	lock mov fs:0x5d7c4b16,al
  404cae:	sub    eax,eax
  404cb0:	cmp    BYTE PTR [edx+0x3ffd7506],bl
  404cb6:	sbb    edx,eax
  404cb8:	and    ebx,ebx
  404cba:	jo     0x404c46
  404cbc:	out    0x58,eax
  404cbe:	or     DWORD PTR [edi],esp
  404cc0:	sar    DWORD PTR [ebx-0x6b8ed839],cl
  404cc6:	int3   
  404cc7:	test   BYTE PTR [esi-0x4f],dh
  404cca:	mov    ds:0x7e0c3692,al
  404ccf:	ins    DWORD PTR es:[edi],dx
  404cd0:	sub    ecx,esi
  404cd2:	dec    ebx
  404cd3:	fmul   DWORD PTR [ecx+0x49]
  404cd6:	mov    eax,esi
  404cd8:	xor    DWORD PTR [eax+ecx*8+0x6c],edx
  404cdc:	out    0xbb,al
  404cde:	push   ecx
  404cdf:	xchg   DWORD PTR [edx-0x52421ebb],esi
  404ce5:	shl    ah,0x19
  404ce8:	imul   edx,DWORD PTR [eax-0x6d],0xbcce0e42
  404cef:	fdivr  st(7),st
  404cf1:	popf   
  404cf2:	bound  eax,QWORD PTR [eax]
  404cf4:	mov    ecx,0x22fe75eb
  404cf9:	icebp  
  404cfa:	mov    ah,0x1a
  404cfc:	and    dh,bh
  404cfe:	cli    
  404cff:	sbb    cl,bl
  404d01:	loope  0x404d82
  404d03:	jae    0x404cd7
  404d05:	push   cs
  404d06:	icebp  
  404d07:	fs and al,0xb5
  404d0a:	sbb    DWORD PTR [edx+0x47ef9cf3],ebp
  404d10:	int3   
  404d11:	loope  0x404d62
  404d13:	sbb    al,0x33
  404d15:	lahf   
  404d16:	imul   eax,DWORD PTR [edx],0xffffffc1
  404d19:	fs dec ebx
  404d1b:	jns    0x404d1c
  404d1d:	or     ebx,DWORD PTR [esi+0x26b61ce]
  404d23:	scas   al,BYTE PTR es:[edi]
  404d24:	inc    edi
  404d25:	test   eax,0xd10ff31a
  404d2a:	lods   al,BYTE PTR ds:[esi]
  404d2b:	hlt    
  404d2c:	xor    eax,0x4b5075c7
  404d31:	sti    
  404d32:	into   
  404d33:	repnz aad 0x39
  404d36:	pushf  
  404d37:	hlt    
  404d38:	xor    DWORD PTR [eax],ebx
  404d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d3b:	test   BYTE PTR [ebx],ah
  404d3d:	arpl   WORD PTR [ecx+0x2],ax
  404d40:	xor    BYTE PTR [ebx+esi*1+0x10],0xf4
  404d45:	mov    bh,0x46
  404d47:	xlat   BYTE PTR fs:[ebx]
  404d49:	ret    
  404d4a:	sub    al,0x53
  404d4c:	mov    al,0xf9
  404d4e:	sti    
  404d4f:	fcmovb st,st(4)
  404d51:	jmp    0x404d40
  404d53:	and    DWORD PTR [edx+eiz*2-0x442b83a6],edx
  404d5a:	imul   ecx,DWORD PTR [eax*2+0x591e562b],0xb0faa04e
  404d65:	xchg   ecx,eax
  404d66:	jg     0x404d21
  404d68:	cmp    ah,BYTE PTR cs:[edi-0xc]
  404d6c:	push   ebp
  404d6d:	xchg   BYTE PTR [ebp+0x68],bh
  404d70:	pusha  
  404d71:	pop    ds
  404d72:	lea    ebx,[edx+0x1217a8c9]
  404d78:	ins    BYTE PTR es:[edi],dx
  404d79:	jne    0x404d03
  404d7b:	and    BYTE PTR [ebx+0x4a],0x64
  404d7f:	lea    ebp,[eax-0x49]
  404d82:	jg     0x404d84
  404d84:	and    al,0x4e
  404d86:	ret    0xd89f
  404d89:	cwde   
  404d8a:	mov    al,ds:0xc4349243
  404d8f:	xor    BYTE PTR [ecx],al
  404d91:	adc    bl,BYTE PTR [edi-0x2b636d95]
  404d97:	xor    bl,BYTE PTR [ebx]
  404d99:	pop    ebx
  404d9a:	jle    0x404d71
  404d9c:	arpl   bp,bx
  404d9e:	jne    0x404dde
  404da0:	les    ecx,FWORD PTR [edx+eiz*4-0x3]
  404da4:	pop    edi
  404da5:	jne    0x404d83
  404da7:	xor    BYTE PTR [esi+0x7fce4a4],al
  404dad:	jl     0x404d5c
  404daf:	mov    eax,0xa21f78a2
  404db4:	scas   al,BYTE PTR es:[edi]
  404db5:	outs   dx,BYTE PTR ds:[esi]
  404db6:	xchg   esp,eax
  404db7:	int3   
  404db8:	mov    ecx,0x62419cfd
  404dbd:	nop
  404dbe:	test   eax,0x89a2de29
  404dc3:	mov    ch,0xe
  404dc5:	sahf   
  404dc6:	jnp    0x404e1c
  404dc8:	lock fist WORD PTR cs:[edx]
  404dcc:	(bad)  
  404dcd:	mov    ch,0xc8
  404dcf:	retf   0x130d
  404dd2:	mov    al,0xcd
  404dd4:	add    esi,DWORD PTR ss:[ebp-0x26525fc6]
  404ddb:	loopne 0x404e0e
  404ddd:	push   ebp
  404dde:	pop    es
  404ddf:	ret    0x43dd
  404de2:	es xchg ecx,eax
  404de4:	and    BYTE PTR [ebp-0x6c],bh
  404de7:	nop
  404de8:	jmp    0xc16497fd
  404ded:	call   0x7de4:0xa2565a0d
  404df4:	sahf   
  404df5:	adc    al,0x35
  404df7:	inc    esi
  404df8:	test   DWORD PTR [eax],ecx
  404dfa:	cmp    DWORD PTR [ecx-0x38669b9b],edx
  404e00:	lea    esi,[edx+0x69]
  404e03:	shr    BYTE PTR [ebp-0x77],cl
  404e06:	ret    
  404e07:	mov    ?,WORD PTR [edi]
  404e09:	mov    ebp,0xe74d1965
  404e0e:	mov    al,ds:0x7c987030
  404e13:	not    DWORD PTR [ebx-0x4f]
  404e16:	push   ss
  404e17:	lahf   
  404e18:	mov    ds:0x8d3017c1,al
  404e1d:	cmp    al,0x2a
  404e1f:	fdiv   QWORD PTR [esi-0x6caa084a]
  404e25:	push   eax
  404e26:	xor    eax,0xb2517e07
  404e2b:	adc    al,0xde
  404e2d:	jo     0x404e08
  404e2f:	mov    eax,0x944f87fe
  404e34:	mov    edx,0xa252dd2b
  404e39:	inc    edi
  404e3a:	push   esi
  404e3b:	pop    es
  404e3c:	inc    ecx
  404e3d:	xor    BYTE PTR [esi+0x75],dh
  404e40:	xor    bl,ah
  404e42:	add    eax,0xcf09fbc8
  404e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e49:	ret    
  404e4a:	adc    eax,0x55a26c30
  404e4f:	dec    eax
  404e50:	sbb    eax,0xd005bc9
  404e55:	push   0x6b
  404e57:	pop    edx
  404e58:	cld    
  404e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e5a:	addr16 aaa 
  404e5c:	cmp    al,0x9
  404e5e:	sbb    dh,BYTE PTR [edx+0x4ddc0e5e]
  404e64:	jg     0x404e5a
  404e66:	daa    
  404e67:	int3   
  404e68:	test   al,0xf2
  404e6a:	jmp    0x818a95ab
  404e6f:	loope  0x404ee0
  404e71:	outs   dx,DWORD PTR ds:[esi]
  404e72:	pop    eax
  404e73:	mov    ds:0x5c746222,al
  404e78:	sar    DWORD PTR [edx-0x323f2fcf],cl
  404e7e:	aam    0xa4
  404e80:	adc    eax,0xc6028c5d
  404e85:	ret    0xd030
  404e88:	adc    ebp,eax
  404e8a:	sub    al,0xcd
  404e8c:	ds in  eax,dx
  404e8e:	hlt    
  404e8f:	cmp    BYTE PTR [ebx+0x461cd8b],ch
  404e95:	hlt    
  404e96:	in     eax,0x7a
  404e98:	(bad)  
  404e9a:	xchg   BYTE PTR [ecx+0x6a148f1a],dh
  404ea0:	inc    ebx
  404ea1:	cli    
  404ea2:	adc    BYTE PTR [esi+0x3c5c387],0xe6
  404ea9:	in     eax,0xc3
  404eab:	sar    ch,0x8d
  404eae:	test   DWORD PTR gs:[esi],edx
  404eb1:	jge    0x404ea8
  404eb3:	inc    ebp
  404eb4:	lahf   
  404eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb6:	mov    edi,0xc046079d
  404ebb:	adc    al,0x1c
  404ebd:	xchg   edi,eax
  404ebe:	push   esi
  404ebf:	js     0x404e86
  404ec1:	lahf   
  404ec2:	jmp    0xcbffb8e9
  404ec7:	cmp    al,al
  404ec9:	push   ebp
  404eca:	popf   
  404ecb:	and    eax,0xe66b9266
  404ed0:	add    eax,0xc1f2592e
  404ed5:	cs aaa 
  404ed7:	mov    ch,0x5d
  404ed9:	shl    DWORD PTR [edi+0x45343b9a],0x2f
  404ee0:	outs   dx,DWORD PTR ds:[esi]
  404ee1:	fsubr  st,st(5)
  404ee3:	lods   al,BYTE PTR ds:[esi]
  404ee4:	push   esi
  404ee5:	cli    
  404ee6:	pop    eax
  404ee7:	jo     0x404e6d
  404ee9:	outs   dx,BYTE PTR ds:[esi]
  404eea:	fwait
  404eeb:	adc    BYTE PTR [edi-0x4b9d20f6],bh
  404ef1:	adc    DWORD PTR [edi],esp
  404ef3:	jns    0x404ea4
  404ef5:	jl     0x404e8e
  404ef7:	dec    ebp
  404ef8:	mov    al,ds:0xf7f09fdf
  404efd:	sbb    al,0xd9
  404eff:	push   ds
  404f00:	sbb    WORD PTR ss:[edx-0x3cd5499],ax
  404f08:	and    ch,BYTE PTR gs:[eax-0x3d8eefae]
  404f0f:	xor    esp,ecx
  404f11:	aas    
  404f12:	rcl    BYTE PTR [eax],cl
  404f14:	retf   0x6ca3
  404f17:	jns    0x404ea3
  404f19:	loop   0x404ed4
  404f1b:	lods   al,BYTE PTR ds:[esi]
  404f1c:	pop    edx
  404f1d:	or     al,0x70
  404f1f:	in     al,0xcc
  404f21:	mov    ch,0x98
  404f23:	sub    al,0xa7
  404f25:	and    ecx,eax
  404f27:	pop    es
  404f28:	je     0x404f78
  404f2a:	xchg   esi,edx
  404f2c:	or     edx,DWORD PTR [ebp-0x1c]
  404f2f:	sbb    DWORD PTR ds:0x42827b,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428287
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x42839b,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428377,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428383,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428383,0x0
  404f72:	mov    DWORD PTR ds:0x428313,ebx
  404f78:	mov    DWORD PTR ds:0x42838b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42826b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42823f,ebx
  404f97:	mov    DWORD PTR ds:0x428277,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428383,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d8c
  404fbc:	and    edx,DWORD PTR ds:0x428323
  404fc2:	sub    DWORD PTR ds:0x42824f,ecx
  404fc8:	or     DWORD PTR ds:0x428243,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42817f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428363
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42816b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428163
  404ff2:	xor    DWORD PTR ds:0x4282a3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428277
  404ffe:	add    DWORD PTR ds:0x42839b,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282a3
  40500c:	add    DWORD PTR ds:0x42827b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428383,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42838f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428177,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x42839f,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42828f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428183,0x428267
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42837b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42838b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42827b,0x428387
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428273,0x428293
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428247,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42837b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42838b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x428397,0x42823b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428263,0x42824f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x42829f,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42827f,0x42825b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428167,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42838b,0x0
  40512f:	mov    DWORD PTR ds:0x42819b,edx
  405135:	mov    DWORD PTR ds:0x42836b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42817b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42838b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427fac
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428db4
  40516c:	or     DWORD PTR ds:0x428273,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283a7
  40517c:	adc    ecx,DWORD PTR ds:0x42818b
  405182:	xor    DWORD PTR ds:0x42817b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42828f,edx
  405192:	cmp    DWORD PTR ds:0x4282eb,0x0
  405199:	mov    DWORD PTR ds:0x428317,0x66a6
  4051a3:	mov    DWORD PTR ds:0x4282f7,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282eb,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428db8
  4051d1:	inc    DWORD PTR ds:0x428287
  4051d7:	mov    ecx,DWORD PTR ds:0x4281c7
  4051dd:	mov    edx,DWORD PTR ds:0x4283c7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282eb,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281bf
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428273,edx
  405201:	mov    edx,DWORD PTR ds:0x4281d7
  405207:	mov    ecx,DWORD PTR ds:0x4283c7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42837f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42828f
  405233:	sub    DWORD PTR ds:0x428193,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42836b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428177,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42827f,0x428183
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x42839b,0x428267
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x428393,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42816b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282a3,0x0
  40529a:	mov    DWORD PTR ds:0x428233,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428273
  4052aa:	mov    DWORD PTR ds:0x4282fb,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283a3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42828b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282a3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428069
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dbc
  4052ea:	add    edx,DWORD PTR ds:0x42825b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428183
  4052fc:	and    DWORD PTR ds:0x42818f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428267
  40530f:	add    DWORD PTR ds:0x4282a3,edx
  405315:	mov    edx,DWORD PTR ds:0x42828b
  40531b:	add    DWORD PTR ds:0x428173,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x4282f7,0x42822f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428313,0x0
  40533c:	mov    DWORD PTR ds:0x42830f,edi
  405342:	mov    DWORD PTR ds:0x428277,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42831b,0x4d36
  405357:	mov    DWORD PTR ds:0x428397,0x1e95
  405361:	cmp    DWORD PTR ds:0x428313,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428dc0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x42839f,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283df
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42837f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42824f
  40539c:	xor    DWORD PTR ds:0x42815b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42827b,edx
  4053ae:	cmp    DWORD PTR ds:0x4282fb,0x0
  4053b5:	mov    DWORD PTR ds:0x428167,edi
  4053bb:	not    DWORD PTR ds:0x42823b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x428197,0xab0
  4053d0:	cmp    DWORD PTR ds:0x4282fb,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428dc4
  4053f6:	sub    ecx,DWORD PTR ds:0x42819b
  4053fc:	sub    DWORD PTR ds:0x42823b,0x6432
  405406:	or     DWORD PTR ds:0x42825f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42818f
  405416:	sub    DWORD PTR ds:0x428393,edi
  40541c:	mov    DWORD PTR ds:0x42823b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428277,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282ef,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x42839f
  405450:	sub    edx,DWORD PTR ds:0x428153
  405456:	mov    DWORD PTR ds:0x42839f,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	xchg   BYTE PTR [eax],bl
  40546f:	cmp    DWORD PTR [edx-0x1a],ebp
  405472:	mov    ecx,0x129e1818
  405477:	sbb    BYTE PTR [eax],bl
  405479:	pop    es
  40547a:	fimul  WORD PTR [esi+eiz*1+0x4a0d9f86]
  405481:	mov    eax,ds:0xd89cca13
  405486:	test   al,0xee
  405488:	sbb    DWORD PTR es:[ecx-0x4a],esi
  40548c:	int3   
  40548d:	dec    ebp
  40548e:	jns    0x405465
  405490:	sbb    edx,ecx
  405492:	pop    ds
  405493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405494:	mov    ah,dl
  405496:	aam    0xcb
  405498:	sub    eax,0xf4709877
  40549d:	xor    esp,eax
  40549f:	sub    al,0x29
  4054a1:	xor    esi,DWORD PTR [edx+ecx*1+0x584a4d36]
  4054a8:	leave  
  4054a9:	xchg   ecx,eax
  4054aa:	popf   
  4054ab:	pop    eax
  4054ac:	mov    ds:0x31c749fe,al
  4054b1:	sbb    DWORD PTR [edx],0xe5f2e457
  4054b7:	add    esp,DWORD PTR [edx+0x1c5b4e8f]
  4054bd:	cs out dx,eax
  4054bf:	pop    eax
  4054c0:	mov    ch,0xb9
  4054c2:	pop    es
  4054c3:	inc    esi
  4054c4:	xor    ebx,DWORD PTR [esp+eax*8+0x7c618c52]
  4054cb:	es adc dh,cl
  4054ce:	neg    DWORD PTR [ebp-0x415bf313]
  4054d4:	push   esi
  4054d5:	mov    cl,0x4e
  4054d7:	clc    
  4054d8:	cmp    ebx,0x5b
  4054db:	rcr    BYTE PTR [edi+0x65],cl
  4054de:	ins    DWORD PTR es:[edi],dx
  4054df:	int    0xa1
  4054e1:	mov    ah,0x4
  4054e3:	xchg   ecx,eax
  4054e4:	and    ah,bh
  4054e6:	inc    edi
  4054e7:	ret    
  4054e8:	sar    dl,cl
  4054ea:	xor    DWORD PTR [edx],ebp
  4054ec:	mov    bl,0xbd
  4054ee:	loope  0x405480
  4054f0:	daa    
  4054f1:	fst    DWORD PTR [esi]
  4054f3:	jp     0x4054c2
  4054f5:	inc    ebp
  4054f6:	loopne 0x405526
  4054f8:	jecxz  0x4054c8
  4054fa:	jbe    0x405535
  4054fc:	adc    al,0x36
  4054fe:	dec    ebp
  4054ff:	lock int3 
  405501:	dec    esp
  405502:	xchg   edi,eax
  405503:	jmp    0x4869:0x8146bcf1
  40550a:	(bad)  
  40550b:	test   DWORD PTR [esi*1-0x77aec2f7],0x2faae65b
  405516:	xor    dh,BYTE PTR [edx-0x5]
  405519:	sti    
  40551a:	mov    ebx,0xeded2d74
  40551f:	call   0x108a7b1c
  405524:	test   al,0xd9
  405526:	push   edi
  405527:	mov    ebx,0xfb266c8a
  40552c:	mov    cl,0x61
  40552e:	mov    ds:0x601d16b9,eax
  405533:	jo     0x40556a
  405535:	push   cs
  405536:	xchg   ecx,eax
  405537:	adc    BYTE PTR [ebx+0xff020c2],bh
  40553d:	push   ebp
  40553e:	sbb    BYTE PTR ds:0x5448183f,bl
  405544:	pop    edi
  405545:	bound  esi,QWORD PTR [edx+ebp*1]
  405548:	xchg   BYTE PTR [ecx+eax*8-0x63],cl
  40554c:	into   
  40554d:	add    DWORD PTR [eax],esi
  40554f:	push   0xa5d483ac
  405554:	aam    0x50
  405556:	push   ebp
  405557:	das    
  405558:	pop    ss
  405559:	ret    0xee15
  40555c:	sub    BYTE PTR [edi-0x5b],al
  40555f:	xor    eax,0x214ba917
  405564:	push   esp
  405565:	sbb    edx,DWORD PTR [eax-0x4174b579]
  40556b:	add    al,0x1c
  40556d:	fsubr  QWORD PTR [ebx-0x5a41a340]
  405573:	push   0x65
  405575:	dec    ecx
  405576:	adc    al,0xfd
  405578:	adc    DWORD PTR [ecx-0x104d0d7a],0xffffffaf
  40557f:	not    BYTE PTR [eax-0xb]
  405582:	jbe    0x4055c4
  405584:	aas    
  405585:	loop   0x405524
  405587:	jmp    0xfd27544d
  40558c:	fld    DWORD PTR [ecx]
  40558e:	sub    al,0x17
  405590:	fsubr  QWORD PTR [edx]
  405592:	icebp  
  405593:	retf   0xbbe9
  405596:	mov    ebp,0x9d4ae2d
  40559b:	in     al,dx
  40559c:	jae    0x40559d
  40559e:	mov    edx,0x29f7bbd0
  4055a3:	(bad)  
  4055a4:	repnz data16 cmp BYTE PTR [edi-0x1461299b],bh
  4055ac:	sti    
  4055ad:	dec    edx
  4055ae:	jg     0x4055b1
  4055b0:	mov    ds:0xa807d789,eax
  4055b5:	int    0xb9
  4055b7:	pop    ecx
  4055b8:	mov    edi,0x5c2d659b
  4055bd:	out    dx,al
  4055be:	fdiv   QWORD PTR [eax+esi*8+0x5393f505]
  4055c5:	jecxz  0x40554c
  4055c7:	imul   esi,DWORD PTR [esi+0x24],0x4a
  4055cb:	mov    dh,0x53
  4055cd:	mov    bh,0x1c
  4055cf:	loope  0x4055bb
  4055d1:	xchg   DWORD PTR [edi-0x6b],ecx
  4055d4:	inc    edi
  4055d5:	inc    ebx
  4055d6:	pop    eax
  4055d7:	push   ss
  4055d8:	sbb    esi,DWORD PTR [edx+0x352b4676]
  4055de:	mov    al,0x22
  4055e0:	add    DWORD PTR [esi+0x3c5d2b08],edi
  4055e6:	nop
  4055e7:	add    BYTE PTR [ebx],0xa0
  4055ea:	or     al,0xf7
  4055ec:	in     al,dx
  4055ed:	call   0xc4195ee
  4055f2:	mov    cl,0x52
  4055f4:	xor    eax,0xdb25aca5
  4055f9:	mov    ebx,0x8a32fa9e
  4055fe:	xchg   DWORD PTR [eax+0x7b37b738],eax
  405604:	dec    ebx
  405606:	dec    ebp
  405607:	shr    esp,0xfd
  40560a:	fadd   st,st(5)
  40560c:	xor    eax,0xb9605795
  405611:	jp     0x405685
  405613:	sub    al,0x81
  405615:	add    eax,0x60a293e7
  40561a:	pop    ds
  40561b:	push   edi
  40561c:	dec    ebp
  40561d:	jae    0x405695
  40561f:	cli    
  405620:	nop
  405621:	call   0x2ed2:0x18d72f4a
  405628:	je     0x4055ed
  40562a:	loopne 0x40569b
  40562c:	mov    ds:0x70a79410,al
  405631:	xchg   BYTE PTR [eax-0x64a615a0],ah
  405637:	fisubr DWORD PTR [ecx]
  405639:	or     eax,0xf738a701
  40563e:	outs   dx,BYTE PTR ds:[esi]
  40563f:	mov    eax,ds:0x2940c8d2
  405644:	jle    0x4055ce
  405646:	sub    ch,bl
  405648:	push   ebp
  405649:	mov    ebp,0xea686ff9
  40564e:	xor    edx,DWORD PTR [edx+0x56d2fd0b]
  405654:	jno    0x40568d
  405656:	push   0xe8eb5935
  40565b:	and    BYTE PTR [eax],dh
  40565d:	cdq    
  40565e:	dec    esi
  40565f:	aaa    
  405660:	retf   0x542e
  405663:	test   bh,0x74
  405666:	cld    
  405667:	xor    BYTE PTR [edx+0x52],dh
  40566a:	(bad)  [ecx]
  40566c:	mov    ds:0xdc1f4261,eax
  405671:	inc    edi
  405672:	inc    eax
  405673:	jge    0x405681
  405675:	adc    DWORD PTR [eax-0x53],0xffffffea
  405679:	outs   dx,DWORD PTR ds:[esi]
  40567a:	add    DWORD PTR [ebx-0x74bdc0c5],eax
  405680:	pop    esp
  405681:	imul   esi,DWORD PTR [ecx-0x35],0xe64600ef
  405688:	mov    ecx,0xaacb2e84
  40568d:	out    dx,eax
  40568e:	lahf   
  40568f:	jmp    0x2cbd967
  405694:	ds add eax,0x9bbe174b
  40569a:	lock push ds
  40569c:	icebp  
  40569d:	shr    DWORD PTR [ecx+0x7db36b68],0xb4
  4056a4:	inc    ecx
  4056a5:	mov    ecx,0x2b888f1a
  4056aa:	push   eax
  4056ab:	cdq    
  4056ac:	rol    DWORD PTR [esi+0x66614b23],cl
  4056b2:	push   cs
  4056b3:	push   esi
  4056b4:	outs   dx,DWORD PTR ds:[esi]
  4056b5:	and    DWORD PTR [esi],esp
  4056b7:	scas   al,BYTE PTR es:[edi]
  4056b8:	je     0x4056fa
  4056ba:	hlt    
  4056bb:	sbb    edi,DWORD PTR [eax+0x1]
  4056be:	dec    esi
  4056bf:	enter  0x4c2c,0x90
  4056c3:	mov    bl,0x2e
  4056c5:	out    0x38,eax
  4056c7:	dec    ebx
  4056c8:	mov    ch,0xe8
  4056ca:	iret   
  4056cb:	pusha  
  4056cc:	or     DWORD PTR [eax+0x58],edx
  4056cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d0:	neg    BYTE PTR [ecx-0x23]
  4056d3:	mov    dh,0x6b
  4056d5:	loop   0x405728
  4056d7:	mov    eax,0x60398a6b
  4056dc:	fisttp WORD PTR [ebx]
  4056de:	inc    ebp
  4056df:	xor    al,0x78
  4056e1:	dec    ebp
  4056e2:	push   ss
  4056e3:	lahf   
  4056e4:	icebp  
  4056e5:	dec    eax
  4056e6:	out    0xfa,al
  4056e8:	and    BYTE PTR [ecx+ecx*2],0xb
  4056ec:	mov    eax,?
  4056ee:	and    al,0xc8
  4056f0:	mov    ds:0x1f3a34dc,eax
  4056f5:	or     eax,DWORD PTR [ebp+edi*8+0x3747ed92]
  4056fc:	imul   ecx,DWORD PTR [esi+edx*2],0x34
  405700:	test   ah,bh
  405702:	scas   eax,DWORD PTR es:[edi]
  405703:	aaa    
  405704:	scas   al,BYTE PTR es:[edi]
  405705:	std    
  405706:	ja     0x405786
  405708:	imul   ecx,ebx,0x3e8a9df8
  40570e:	and    al,0xc1
  405710:	or     BYTE PTR [ebx-0x3d],0x3a
  405714:	dec    esp
  405715:	pop    ss
  405716:	out    0x0,eax
  405718:	sbb    esi,edx
  40571a:	fbld   TBYTE PTR [eax]
  40571c:	jae    0x40574a
  40571e:	test   BYTE PTR [ebx-0x4c],ch
  405721:	(bad)  
  405722:	adc    al,bh
  405724:	jbe    0x4056a8
  405726:	adc    eax,ecx
  405728:	adc    eax,0xb395df11
  40572d:	xchg   DWORD PTR [ebx+0x53a2b1ab],edx
  405733:	and    al,0x98
  405735:	lea    eax,[eax+ebp*1]
  405738:	iret   
  405739:	mov    edi,0x5c77b8ff
  40573e:	sub    eax,0xd4c25d66
  405743:	std    
  405744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405745:	adc    DWORD PTR [eax],ebp
  405747:	or     bl,bl
  405749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40574a:	dec    eax
  40574b:	jge    0x405732
  40574d:	or     eax,0x679cd16e
  405752:	cdq    
  405753:	inc    esi
  405754:	inc    esp
  405755:	and    DWORD PTR [ebx+eax*2+0x5c5230e2],ebp
  40575c:	sbb    BYTE PTR [edx+0x50],al
  40575f:	fsub   DWORD PTR [ebp-0x7f7b0ad8]
  405765:	and    bh,BYTE PTR [esp+ebp*8-0x7a03a59d]
  40576c:	xchg   BYTE PTR [edi+0x39c98623],cl
  405772:	push   esp
  405773:	and    edi,DWORD PTR [esi-0x54144dbd]
  405779:	adc    dh,BYTE PTR [eax+0x3c9db244]
  40577f:	inc    esi
  405780:	push   0x474c87ca
  405785:	cmp    BYTE PTR [eax+0x71f92d04],cl
  40578b:	pop    edx
  40578c:	push   ebp
  40578d:	and    DWORD PTR [ebx+0x7f0d5816],ecx
  405793:	sahf   
  405794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405795:	in     eax,dx
  405796:	push   edi
  405797:	mov    WORD PTR ds:[ecx-0xc],gs
  40579b:	fld    st(3)
  40579d:	rol    DWORD PTR [esi+0x787c6fff],1
  4057a3:	lods   al,BYTE PTR ds:[esi]
  4057a4:	mov    bh,0x34
  4057a6:	shr    DWORD PTR [esi+0x21],1
  4057a9:	imul   esi,DWORD PTR [edi-0x636af230],0x43
  4057b0:	and    BYTE PTR [ebp+0x597b8e04],bl
  4057b6:	ins    DWORD PTR es:[edi],dx
  4057b7:	nop
  4057b8:	jnp    0x405807
  4057ba:	xlat   BYTE PTR ds:[ebx]
  4057bb:	pop    es
  4057bc:	loope  0x4057f1
  4057be:	xchg   ebx,eax
  4057bf:	adc    DWORD PTR [ecx-0x7b],ecx
  4057c2:	and    esp,esp
  4057c4:	jg     0x4057bf
  4057c6:	or     esi,DWORD PTR [esi+0x4d]
  4057c9:	xor    DWORD PTR [edx+0x50],edi
  4057cc:	inc    ebx
  4057cd:	mov    ah,0xe1
  4057cf:	xchg   ebx,eax
  4057d0:	jmp    0x4057c2
  4057d2:	inc    ecx
  4057d3:	jb     0x4057ee
  4057d5:	dec    ecx
  4057d6:	ficomp DWORD PTR [eax-0x25]
  4057d9:	cmp    BYTE PTR [ebx-0x64],ah
  4057dc:	mov    al,ds:0x5390b158
  4057e1:	pusha  
  4057e2:	push   esp
  4057e3:	(bad)  
  4057e4:	je     0x405792
  4057e6:	(bad)  
  4057e8:	add    ah,ch
  4057ea:	inc    esp
  4057eb:	stos   BYTE PTR es:[edi],al
  4057ec:	jbe    0x405799
  4057ee:	icebp  
  4057ef:	mov    DWORD PTR [esi+0x4f36f45c],ebx
  4057f5:	pop    ss
  4057f6:	mov    esp,0x90c5bbb6
  4057fb:	dec    ebx
  4057fc:	mov    al,ds:0x87cfca48
  405801:	dec    ecx
  405802:	cld    
  405803:	(bad)  
  405804:	int3   
  405805:	dec    esi
  405806:	push   eax
  405807:	fdiv   st,st(7)
  405809:	inc    ecx
  40580a:	lods   eax,DWORD PTR ds:[esi]
  40580b:	sar    BYTE PTR [esi+esi*2],cl
  40580e:	cmp    edx,DWORD PTR [ecx]
  405810:	xchg   ecx,eax
  405811:	repz cmp BYTE PTR [ebx],dh
  405814:	jp     0x405892
  405816:	sub    al,0x89
  405818:	jle    0x405831
  40581a:	inc    ebx
  40581b:	fs test al,0xc0
  40581e:	pop    edx
  40581f:	mov    bl,0xff
  405821:	(bad)  
  405823:	fdivr  DWORD PTR [ebp+eiz*8+0x5aedff19]
  40582a:	push   esp
  40582b:	scas   al,BYTE PTR es:[edi]
  40582c:	xor    BYTE PTR [ebx-0x27ed1257],ah
  405832:	add    edi,ebx
  405834:	bound  ecx,QWORD PTR [ebx+esi*4-0x74b73608]
  40583b:	push   esi
  40583c:	add    al,0xf7
  40583e:	sbb    eax,0x42838b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428177,0x0
  40584d:	mov    DWORD PTR ds:0x428267,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428267,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428177,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e74
  40588d:	adc    DWORD PTR ds:0x42830b,edx
  405893:	or     DWORD PTR ds:0x42823b,0x369f
  40589d:	neg    DWORD PTR ds:0x42817b
  4058a3:	sub    DWORD PTR ds:0x42815b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x4058f8
  405910:	xchg   ebx,eax
  405911:	xor    eax,0x18b16d6a
  405916:	sbb    BYTE PTR [esi+0x7e181812],bl
  40591c:	stc    
  40591d:	jp     0x405945
  40591f:	sub    eax,0x986c13b3
  405924:	and    cl,BYTE PTR [ebp+0x263f8ec1]
  40592a:	out    0x5b,eax
  40592c:	add    BYTE PTR [edi+edx*4+0x6200d031],cl
  405933:	scas   eax,DWORD PTR es:[edi]
  405934:	stc    
  405935:	pushf  
  405936:	pop    eax
  405937:	fwait
  405938:	cmp    eax,0xac661c03
  40593d:	sbb    DWORD PTR [ebp-0x27],esi
  405940:	xchg   edi,eax
  405941:	test   DWORD PTR [ecx],edi
  405943:	outs   dx,DWORD PTR ds:[esi]
  405944:	popa   
  405945:	enter  0xa26d,0x38
  405949:	das    
  40594a:	or     BYTE PTR [ebp-0x2f80f1c5],bl
  405950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405951:	sub    BYTE PTR [eax-0x73122dd4],cl
  405957:	jge    0x405974
  405959:	add    BYTE PTR [ebx-0x683c1665],ch
  40595f:	or     BYTE PTR [ebp-0x73f6b78e],dl
  405965:	xchg   esi,eax
  405966:	or     BYTE PTR [edx-0x52],ah
  405969:	pop    ds
  40596a:	or     eax,0xf76b4adb
  40596f:	test   cl,al
  405971:	cmp    ebp,0x5b
  405974:	into   
  405975:	loopne 0x405940
  405977:	ficomp WORD PTR ds:0x8a6b8fd9
  40597d:	in     al,dx
  40597e:	push   esp
  40597f:	cmp    eax,0x6177f7e0
  405984:	jge    0x4059e7
  405986:	int    0x8f
  405988:	fs adc al,0x5f
  40598b:	add    esp,DWORD PTR [edi+0x1cb92347]
  405991:	dec    esp
  405992:	pop    eax
  405993:	push   0x16
  405995:	test   al,0xc3
  405997:	sub    BYTE PTR [ebx+ecx*8+0x17a2457c],ch
  40599e:	cmp    DWORD PTR [esi],edi
  4059a0:	retf   
  4059a1:	xchg   edi,eax
  4059a2:	add    BYTE PTR [esi],0x5b
  4059a5:	sbb    bh,BYTE PTR [edx+edx*8-0x17]
  4059a9:	outs   dx,BYTE PTR ds:[esi]
  4059aa:	jp     0x4059d6
  4059ac:	std    
  4059ad:	mov    ecx,ecx
  4059af:	shr    esi,1
  4059b1:	jo     0x40597f
  4059b3:	stos   BYTE PTR es:[edi],al
  4059b4:	add    eax,0xac7f5f2d
  4059b9:	jge    0x4059b3
  4059bb:	in     eax,0x66
  4059bd:	loopne 0x4059d2
  4059bf:	and    al,bl
  4059c1:	jp     0x40594d
  4059c3:	dec    esp
  4059c4:	cs out dx,eax
  4059c6:	sbb    al,BYTE PTR [ecx+0x39943f2a]
  4059cc:	pop    edi
  4059cd:	aad    0x6a
  4059cf:	(bad)  
  4059d1:	jle    0x4059a5
  4059d3:	jge    0x405974
  4059d5:	cmp    edx,0xffffffd5
  4059d8:	fisub  DWORD PTR [ecx]
  4059da:	and    ch,bh
  4059dc:	mov    eax,ds:0xadfcab18
  4059e1:	pop    esp
  4059e2:	std    
  4059e3:	fidiv  WORD PTR [ecx-0x5916c4a4]
  4059e9:	sbb    al,0xe5
  4059eb:	fs jae 0x405a3b
  4059ee:	fdiv   DWORD PTR [edi+0x4da9f5f1]
  4059f4:	inc    esi
  4059f5:	adc    eax,0x3639f58a
  4059fa:	popa   
  4059fb:	push   ss
  4059fc:	pop    ebp
  4059fd:	lds    ebx,FWORD PTR [edi-0x34777f8a]
  405a03:	cmp    esp,DWORD PTR [esi-0x63223d72]
  405a09:	mov    esi,0x8402b7f6
  405a0e:	test   DWORD PTR [ecx],ecx
  405a10:	scas   al,BYTE PTR es:[edi]
  405a11:	and    BYTE PTR [edi+0x54],al
  405a14:	adc    edx,edi
  405a16:	cmp    ecx,DWORD PTR [eax-0x69]
  405a19:	lock stc 
  405a1b:	je     0x4059ce
  405a1d:	sub    eax,DWORD PTR [edx+0x74975ac3]
  405a23:	adc    DWORD PTR [edx-0x40f5d557],ebp
  405a29:	adc    al,0xff
  405a2b:	xor    al,BYTE PTR [esi-0xb]
  405a2e:	stos   DWORD PTR es:[edi],eax
  405a2f:	pusha  
  405a30:	fisubr WORD PTR [eax+0x3]
  405a33:	loopne 0x4059cf
  405a35:	loopne 0x405a0a
  405a37:	test   al,0x61
  405a39:	push   ss
  405a3a:	push   esi
  405a3b:	add    dl,BYTE PTR [esi+0x2de2f874]
  405a41:	lods   eax,DWORD PTR ds:[esi]
  405a42:	fsubr  DWORD PTR [eax-0x4]
  405a45:	je     0x405a1b
  405a47:	dec    esp
  405a48:	pop    edi
  405a49:	into   
  405a4a:	sub    DWORD PTR [edx-0xb9b984a],esi
  405a50:	addr16 push ds
  405a52:	js     0x405ad1
  405a54:	sti    
  405a55:	outs   dx,DWORD PTR ds:[esi]
  405a57:	push   ss
  405a58:	mov    ch,0x73
  405a5a:	fidiv  DWORD PTR [ecx-0x5a4147c7]
  405a60:	pop    es
  405a61:	jb     0x405a08
  405a63:	fldenv [edx]
  405a65:	and    bl,ah
  405a67:	sti    
  405a68:	ror    DWORD PTR [eax+0x6382b44b],0x16
  405a6f:	xchg   esp,eax
  405a70:	and    al,0x1f
  405a72:	nop
  405a73:	shl    BYTE PTR [ebx+0x29a29389],1
  405a79:	jmp    0x77910248
  405a7e:	jae    0x405a5b
  405a80:	mov    ch,0xc8
  405a82:	push   ss
  405a83:	bnd jae 0x405a46
  405a86:	rcr    BYTE PTR [eax-0x3b0fe11a],0xc4
  405a8d:	mov    DWORD PTR [ebp+0x396469ec],ecx
  405a93:	push   ds
  405a94:	adc    al,BYTE PTR [esi]
  405a96:	call   0xfb3731af
  405a9b:	mov    edx,0x67c8357d
  405aa0:	sbb    DWORD PTR [ecx+eiz*2+0x1f],0xffffffc7
  405aa5:	xchg   edi,eax
  405aa6:	ss es sahf 
  405aa9:	pop    ecx
  405aaa:	arpl   bx,dx
  405aac:	mov    edx,0xb9d4e2a8
  405ab2:	fsub   QWORD PTR [edx]
  405ab4:	mov    cl,0x56
  405ab6:	in     al,0x44
  405ab8:	leave  
  405ab9:	sub    DWORD PTR [ebx-0x1c42aa0c],eax
  405abf:	xor    al,BYTE PTR [ebx+0xa5d3a19]
  405ac5:	add    DWORD PTR [ecx-0x633e5789],eax
  405acb:	cmp    esp,ecx
  405acd:	sbb    DWORD PTR [edx+ebp*4-0x16],ecx
  405ad1:	lods   al,BYTE PTR ds:[esi]
  405ad2:	ins    BYTE PTR es:[edi],dx
  405ad3:	jmp    0xf51b7b73
  405ad8:	xor    esi,DWORD PTR [edi]
  405ada:	adc    cl,BYTE PTR [edi+ebp*4-0x3cf82b9b]
  405ae1:	pop    ss
  405ae2:	sti    
  405ae3:	dec    ebp
  405ae4:	adc    al,0xef
  405ae6:	mov    cl,0x98
  405ae8:	lock jno 0x405aef
  405aeb:	dec    eax
  405aec:	sub    DWORD PTR [esi+0x44],ebx
  405aef:	rol    DWORD PTR [edx+0x480ca418],0x4e
  405af6:	mov    cl,0x2a
  405af8:	and    ecx,esi
  405afa:	pop    ss
  405afb:	das    
  405afc:	inc    ecx
  405afd:	pop    edx
  405afe:	cmp    ecx,DWORD PTR [edi-0x3e8a0435]
  405b04:	and    eax,0x8f529ef7
  405b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b0a:	adc    BYTE PTR [ebx-0x346ad708],bl
  405b10:	push   es
  405b11:	mov    dh,0x31
  405b13:	dec    edi
  405b14:	(bad)  
  405b15:	imul   ecx,DWORD PTR [ebx+edi*8-0x1db2db20],0x70
  405b1d:	ins    BYTE PTR es:[edi],dx
  405b1e:	fadd   QWORD PTR [esi+ebp*1-0x58]
  405b22:	arpl   bx,bx
  405b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b25:	jae    0x405ba1
  405b27:	xor    edx,DWORD PTR [ebx+0x6b]
  405b2a:	xor    eax,0x75eaa665
  405b2f:	push   0xffffffaf
  405b31:	fisub  WORD PTR [ebp-0x3f36f89c]
  405b37:	adc    al,0x7a
  405b39:	mov    al,0xf8
  405b3b:	push   ecx
  405b3c:	loopne 0x405b89
  405b3e:	pop    edi
  405b3f:	ins    DWORD PTR es:[edi],dx
  405b40:	test   al,0xe4
  405b42:	enter  0x24b2,0x72
  405b46:	add    DWORD PTR [edx],esi
  405b48:	fcomip st,st(0)
  405b4a:	clc    
  405b4b:	adc    eax,0x1fa86669
  405b50:	repnz pop ss
  405b52:	test   BYTE PTR [ebx+0x7d],0x20
  405b56:	add    al,0x9e
  405b58:	data16 (bad) 
  405b5a:	shl    DWORD PTR [ebp-0x4c004c67],0x8f
  405b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b62:	sbb    BYTE PTR [edx+0x7fa55350],ah
  405b68:	in     al,0xa0
  405b6a:	pop    ds
  405b6b:	sbb    BYTE PTR [edx-0x31],dl
  405b6e:	cwde   
  405b6f:	push   ebx
  405b70:	test   eax,0xfd04fde1
  405b75:	(bad)  
  405b76:	and    bl,BYTE PTR [ebp+ecx*2+0x55cdda36]
  405b7d:	jnp    0x405b72
  405b7f:	and    al,0xc3
  405b81:	maskmovq mm5,mm5
  405b84:	cmovs  edx,DWORD PTR [edi-0x34300a2]
  405b8b:	lods   al,BYTE PTR ds:[esi]
  405b8d:	push   edx
  405b8e:	cmp    eax,0x1fb0cecc
  405b93:	mov    dl,0x2e
  405b95:	mov    BYTE PTR [ecx],bh
  405b97:	pop    es
  405b98:	sub    BYTE PTR [ecx+0x24e29249],bh
  405b9e:	es or  al,0xba
  405ba1:	or     eax,0x29f4f821
  405ba6:	loop   0x405b59
  405ba8:	xchg   esi,eax
  405ba9:	in     eax,dx
  405baa:	jmp    0x4940790c
  405baf:	pop    ebp
  405bb0:	loopne 0x405b53
  405bb2:	push   ebx
  405bb3:	sub    BYTE PTR [edi],dl
  405bb5:	je     0x405b64
  405bb7:	loope  0x405bc9
  405bb9:	dec    ecx
  405bba:	dec    ecx
  405bbb:	push   cs
  405bbc:	xor    al,0x72
  405bbe:	adc    eax,0x4f71586b
  405bc3:	or     eax,0xf312a3af
  405bc8:	test   DWORD PTR [ebx-0x5e],ecx
  405bcb:	test   al,0xf4
  405bcd:	add    ch,dl
  405bcf:	cmp    ebx,eax
  405bd1:	push   cs
  405bd2:	nop
  405bd3:	and    DWORD PTR [ecx+eiz*2],ebp
  405bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bd7:	adc    BYTE PTR [ecx+0x26],ch
  405bda:	les    esi,FWORD PTR [ecx+0x35]
  405bdd:	sbb    DWORD PTR ss:[ebp-0xb],edi
  405be1:	rol    DWORD PTR [edi],cl
  405be3:	lods   al,BYTE PTR ds:[esi]
  405be4:	push   es
  405be5:	fmul   DWORD PTR [ebx+0x2d]
  405be8:	dec    edi
  405be9:	push   ebp
  405bea:	inc    edi
  405beb:	es int 0x21
  405bee:	lds    ebp,FWORD PTR ds:0x9784b7b8
  405bf4:	sub    eax,0x59041902
  405bf9:	adc    ebp,DWORD PTR ss:[ebx-0x48]
  405bfd:	pop    es
  405bfe:	mov    dh,0x85
  405c00:	mov    ah,0xba
  405c02:	xor    al,0xff
  405c04:	cld    
  405c05:	daa    
  405c06:	ja     0x405c84
  405c08:	add    bl,BYTE PTR [edx+0x3d9a081]
  405c0e:	pop    ds
  405c0f:	int    0xfa
  405c11:	xor    BYTE PTR [ebx+ebp*8-0x6d],bl
  405c15:	retf   
  405c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c17:	xchg   edx,eax
  405c18:	ins    BYTE PTR es:[edi],dx
  405c19:	adc    ecx,esi
  405c1b:	fadd   DWORD PTR [eax+0x52643929]
  405c21:	in     eax,dx
  405c22:	sbb    eax,0x6fa5cbf1
  405c27:	mov    eax,ds:0x86d399c2
  405c2c:	inc    eax
  405c2d:	pop    edi
  405c2e:	jb     0x405bf7
  405c30:	pushf  
  405c31:	out    0x1c,al
  405c33:	pop    ss
  405c34:	or     edi,DWORD PTR [eax+0x1f3e598f]
  405c3a:	and    eax,0x39abe76d
  405c3f:	xor    al,0x5f
  405c41:	loop   0x405c88
  405c43:	cmp    DWORD PTR [edi+0x22],ebp
  405c46:	dec    eax
  405c47:	ret    0xa25
  405c4a:	pop    ebx
  405c4b:	sub    edx,DWORD PTR ds:0x72c35202
  405c51:	jecxz  0x405c24
  405c53:	sub    DWORD PTR [eax-0x30],eax
  405c56:	jl     0x405cb6
  405c58:	(bad)  [ebp+0x14]
  405c5b:	sub    al,0xaf
  405c5d:	mov    bl,0x91
  405c5f:	jae    0x405ca8
  405c61:	repz int3 
  405c63:	leave  
  405c64:	loop   0x405cc7
  405c66:	sbb    DWORD PTR [ebx+0x59866dcd],ebx
  405c6c:	jns    0x405ce4
  405c6e:	push   ss
  405c6f:	fiadd  WORD PTR [ecx]
  405c71:	push   ds
  405c72:	out    0x24,eax
  405c74:	ss aam 0xda
  405c77:	cdq    
  405c78:	cmp    eax,0x19bec5d8
  405c7d:	aad    0xe4
  405c7f:	retf   0x5296
  405c82:	fdiv   QWORD PTR ds:0x859bbc96
  405c88:	popf   
  405c89:	ds test edi,0xa88ab706
  405c90:	fsqrt  
  405c92:	gs inc ebx
  405c94:	jg     0x405ce5
  405c96:	cld    
  405c97:	stos   DWORD PTR es:[edi],eax
  405c98:	push   ds
  405c99:	xchg   ebp,eax
  405c9a:	mov    ds:0x88b1d93c,eax
  405c9f:	fmul   QWORD PTR [ebp+eiz*8+0x295a7f3b]
  405ca6:	mov    bl,0xa9
  405ca8:	xchg   DWORD PTR [ebx+0x4385d94],ebx
  405cae:	jecxz  0x405cd1
  405cb0:	dec    esi
  405cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb2:	and    BYTE PTR ds:0xc45e7265,ah
  405cb8:	daa    
  405cb9:	push   cs
  405cba:	jmp    0x405d22
  405cbc:	push   ds
  405cbd:	mov    esp,0xafc85864
  405cc2:	shl    al,0x1a
  405cc5:	push   eax
  405cc6:	(bad)  
  405cc7:	stc    
  405cc8:	aas    
  405cc9:	inc    ebx
  405cca:	outs   dx,BYTE PTR ds:[esi]
  405ccb:	cmp    esi,DWORD PTR [eax-0x1b933fd8]
  405cd1:	add    al,0xce
  405cd3:	sbb    eax,0x3b0974f7
  405cd8:	cdq    
  405cd9:	sar    DWORD PTR [ebp+0x59],cl
  405cdc:	mov    DWORD PTR [ebp-0x2c],eax
  405cdf:	mov    DWORD PTR [ebp-0x20],0xca79a571
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax-0x47],1
  405d2b:	inc    eax
  405d2c:	push   ss
  405d2d:	stos   BYTE PTR es:[edi],al
  405d2e:	repnz test eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	inc    ecx
  405d37:	mov    ebp,0xe0ac2916
  405d3c:	push   eax
  405d3d:	jne    0x405da9
  405d3f:	outs   dx,BYTE PTR ds:[esi]
  405d40:	mov    ebp,0x6d31f0b1
  405d45:	add    BYTE PTR [eax],dh
  405d47:	adc    ah,cl
  405d49:	call   0x42a9e3c4
  405d4e:	add    DWORD PTR [ebx+0xf2f0625],0x1b843800
  405d58:	cmp    dl,BYTE PTR [edx]
  405d5a:	xchg   esi,eax
  405d5b:	aam    0xa2
  405d5d:	inc    esp
  405d5e:	sbb    BYTE PTR [edx-0x51],dh
  405d61:	xchg   ebx,eax
  405d62:	mov    cl,0xb9
  405d64:	ins    DWORD PTR es:[edi],dx
  405d65:	out    dx,eax
  405d66:	and    ebp,DWORD PTR [ebx+0x9]
  405d69:	pop    ebx
  405d6a:	test   DWORD PTR [esi+edi*1-0x76b2a418],esp
  405d71:	loope  0x405dd2
  405d73:	mov    bl,0x49
  405d75:	int    0x75
  405d77:	xor    dl,BYTE PTR [ebx]
  405d79:	mov    ch,0x10
  405d7b:	neg    DWORD PTR [esi+eax*1+0x4d4100eb]
  405d82:	xchg   ecx,eax
  405d83:	push   es
  405d84:	and    eax,0xaae70d40
  405d89:	lock out 0x14,al
  405d8c:	push   ds
  405d8d:	inc    ebx
  405d8e:	enter  0x9590,0x4a
  405d92:	inc    edi
  405d93:	ror    bh,0x74
  405d96:	pop    ds
  405d97:	dec    eax
  405d98:	inc    edx
  405d99:	xchg   ebp,eax
  405d9a:	int    0xa8
  405d9c:	ins    BYTE PTR es:[edi],dx
  405d9d:	rol    BYTE PTR [edx+0x4388d5d7],0xd0
  405da4:	dec    eax
  405da5:	dec    esp
  405da6:	repz jmp 0xf868:0xef37294f
  405dae:	mov    ebx,0x264f6130
  405db3:	push   ds
  405db4:	mov    esp,0xd5d35f64
  405db9:	sub    BYTE PTR [esi+0x8],0x2f
  405dbd:	pop    ebx
  405dbe:	ja     0x405e0d
  405dc0:	enter  0x1d45,0xa
  405dc4:	mov    fs,WORD PTR [esi+ebp*2]
  405dc7:	jle    0x405d61
  405dc9:	xchg   BYTE PTR [eax],dl
  405dcb:	cld    
  405dcc:	repz cmp al,0x28
  405dcf:	in     al,0xbd
  405dd1:	push   cs
  405dd2:	loope  0x405e23
  405dd4:	adc    bl,BYTE PTR [ebx+0x4d33f0e7]
  405dda:	or     eax,0x69947acf
  405ddf:	inc    ecx
  405de0:	hlt    
  405de1:	cmp    DWORD PTR ds:0x12e436de,ecx
  405de7:	and    DWORD PTR [edi-0x45],ebp
  405dea:	ja     0x405e29
  405dec:	ds xchg edi,eax
  405dee:	sbb    esi,DWORD PTR [edx+0x1fe5a10d]
  405df4:	(bad)  
  405df5:	imul   edi,DWORD PTR [edx-0x33134424],0xffffffd9
  405dfc:	adc    DWORD PTR [edi-0x66c762ce],ebp
  405e02:	fsubr  DWORD PTR [esi+0x4]
  405e05:	and    DWORD PTR [esi+0x625b42ac],ebp
  405e0b:	cld    
  405e0c:	shl    DWORD PTR [edi],1
  405e0e:	cmp    eax,DWORD PTR [eax-0x3103cf36]
  405e14:	or     BYTE PTR [ebx],cl
  405e16:	lea    edx,[ecx-0x39502857]
  405e1c:	jge    0x405ddb
  405e1e:	add    ah,dl
  405e20:	setg   BYTE PTR [edx]
  405e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e24:	fist   DWORD PTR [eax]
  405e26:	jb     0x405e21
  405e28:	pusha  
  405e29:	ins    DWORD PTR es:[edi],dx
  405e2a:	add    DWORD PTR [ebp+0x21],esi
  405e2d:	add    eax,0x599c6fc1
  405e32:	aas    
  405e33:	sbb    dh,al
  405e35:	pop    ss
  405e36:	dec    esp
  405e37:	out    dx,eax
  405e38:	or     ecx,DWORD PTR [ecx+eax*2]
  405e3b:	and    DWORD PTR [ebp-0x6c0ef395],ebp
  405e41:	dec    edx
  405e42:	shr    edx,0xe5
  405e45:	fisttp QWORD PTR [ecx+0x56f3219a]
  405e4b:	push   ebp
  405e4c:	das    
  405e4d:	test   al,0x39
  405e4f:	sbb    bh,ch
  405e51:	mov    al,bh
  405e53:	mov    ?,WORD PTR [ebx+0x47]
  405e56:	xlat   BYTE PTR ds:[ebx]
  405e57:	popa   
  405e58:	call   0x3131:0xd41c5a6b
  405e5f:	mov    edx,0x6f4041b4
  405e64:	pop    eax
  405e65:	in     al,dx
  405e66:	mov    WORD PTR [edx-0x2c],?
  405e69:	jecxz  0x405def
  405e6b:	mov    BYTE PTR [esi],ah
  405e6d:	loop   0x405e99
  405e6f:	adc    esp,edi
  405e71:	loope  0x405e36
  405e73:	mov    ds:0xce440a16,eax
  405e78:	xor    BYTE PTR [edx+edx*2-0x3],al
  405e7c:	push   esi
  405e7d:	jg     0x405e07
  405e7f:	les    esi,FWORD PTR [edi+edx*8-0x45]
  405e83:	les    edi,FWORD PTR [esi-0x75e75b70]
  405e89:	sbb    DWORD PTR [eax*8-0x4afb63ba],eax
  405e90:	or     BYTE PTR [edi],al
  405e92:	jmp    0x405e82
  405e94:	jne    0x405ecb
  405e96:	mov    ch,0x55
  405e98:	in     al,dx
  405e99:	adc    al,BYTE PTR [eax-0x14]
  405e9c:	inc    ecx
  405e9d:	aaa    
  405e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e9f:	mov    fs,WORD PTR [edx+ecx*4+0x55d152b]
  405ea6:	sar    BYTE PTR [edx],cl
  405ea8:	or     eax,0x395971f2
  405ead:	mov    al,ds:0x1e4d4844
  405eb2:	pop    edi
  405eb3:	push   0xffffff85
  405eb5:	cmp    ebx,DWORD PTR [eax]
  405eb7:	mov    esi,0x8c17f87a
  405ebc:	iret   
  405ebd:	mov    cl,0xf4
  405ebf:	inc    esi
  405ec0:	mov    edx,0x41cdfa77
  405ec5:	add    eax,0xc50aa86f
  405eca:	out    dx,eax
  405ecb:	adc    dh,bl
  405ecd:	mov    esp,0x3690c8e6
  405ed2:	call   0x21497f9a
  405ed7:	gs mov bh,0x8b
  405eda:	(bad)  
  405edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405edd:	icebp  
  405ede:	in     al,dx
  405edf:	rcl    BYTE PTR ds:0x46eaa75c,cl
  405ee5:	stos   DWORD PTR es:[edi],eax
  405ee6:	jmp    0xa867:0xdfe85686
  405eed:	jle    0x405eae
  405eef:	inc    ebx
  405ef0:	push   0xffffffd8
  405ef2:	pop    ebx
  405ef3:	and    edi,DWORD PTR [edi-0x40c6c731]
  405ef9:	out    dx,al
  405efa:	adc    BYTE PTR [ebx-0x20],al
  405efd:	ins    DWORD PTR es:[edi],dx
  405efe:	out    0x2d,al
  405f00:	inc    ebp
  405f01:	sbb    BYTE PTR [ecx+edx*8],bl
  405f04:	cli    
  405f05:	out    dx,al
  405f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f07:	mov    edx,0x60d2ac7
  405f0c:	shr    DWORD PTR [edx+0x31],cl
  405f0f:	lea    esp,[eax]
  405f11:	cmp    edx,DWORD PTR [eax]
  405f13:	or     eax,DWORD PTR ds:0x7cba92b9
  405f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f1a:	dec    esi
  405f1b:	xchg   BYTE PTR [eax+0xe1168f7],ch
  405f21:	hlt    
  405f22:	repz xchg ebx,eax
  405f24:	cmp    al,0x1f
  405f26:	inc    ebp
  405f27:	dec    esi
  405f28:	(bad)  
  405f29:	ficomp WORD PTR [eax+0x75]
  405f2c:	in     al,dx
  405f2d:	sub    al,0x1f
  405f2f:	(bad)  
  405f30:	jmp    0x405fac
  405f32:	mov    dh,0xed
  405f34:	mov    edx,edi
  405f36:	jp     0x405f81
  405f38:	jecxz  0x405ec1
  405f3a:	retf   
  405f3b:	loop   0x405f1e
  405f3d:	xor    al,0x47
  405f3f:	out    0x1,al
  405f41:	push   0xf8bdc82e
  405f46:	subps  xmm1,xmm3
  405f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f4a:	(bad)  
  405f4b:	enter  0xad12,0x83
  405f4f:	mov    edi,DWORD PTR [ecx+0x55]
  405f52:	fsub   st,st(4)
  405f54:	jmp    0x8af513a
  405f59:	mov    eax,ds:0x6a16275e
  405f5e:	sub    al,0xf6
  405f60:	cwde   
  405f61:	jl     0x405f73
  405f63:	aas    
  405f64:	loope  0x405f6e
  405f66:	cld    
  405f67:	retf   
  405f68:	rcl    ebx,cl
  405f6a:	adc    ch,0xcb
  405f6d:	out    0xb5,al
  405f6f:	sbb    BYTE PTR [ebp+0x5],ah
  405f72:	imul   ebp,DWORD PTR [ebp+0x1f],0x65
  405f76:	and    DWORD PTR [ebx+0x6],eax
  405f79:	cmp    al,0xca
  405f7b:	sti    
  405f7c:	xor    al,0x87
  405f7e:	nop
  405f7f:	dec    edi
  405f80:	aaa    
  405f81:	hlt    
  405f82:	push   ecx
  405f83:	(bad)  
  405f84:	in     eax,dx
  405f85:	inc    ecx
  405f86:	sub    al,bh
  405f88:	jnp    0x405f87
  405f8a:	jno    0x405fda
  405f8c:	jb     0x405feb
  405f8e:	lods   eax,DWORD PTR ds:[esi]
  405f8f:	pop    edi
  405f90:	or     BYTE PTR [ebp-0x45],ah
  405f93:	mov    ds:0xeae7f693,al
  405f98:	cmp    cl,BYTE PTR [ebx]
  405f9a:	rol    DWORD PTR [ebx],0xf2
  405f9d:	push   ebx
  405f9e:	xchg   ebx,eax
  405f9f:	std    
  405fa0:	fcomp  st(3)
  405fa2:	repz mov edi,0x4621fc54
  405fa8:	mov    BYTE PTR [edx+esi*2+0x70f67e80],dh
  405faf:	cmp    cl,BYTE PTR [esi+0x11]
  405fb2:	dec    esi
  405fb3:	sbb    dh,BYTE PTR [eax]
  405fb5:	adc    eax,0x85ff2f8e
  405fba:	call   0x936024d1
  405fbf:	sub    DWORD PTR [eax+0x40],eax
  405fc2:	repnz xchg edi,eax
  405fc4:	xchg   esi,eax
  405fc5:	retf   
  405fc6:	mov    al,ds:0xe2f0403f
  405fcb:	xor    al,0x50
  405fcd:	or     al,BYTE PTR [eax+0x633d75c]
  405fd3:	outs   dx,DWORD PTR ds:[esi]
  405fd4:	test   eax,0x205f63ec
  405fd9:	xchg   ecx,eax
  405fda:	adc    al,0x8f
  405fdc:	xchg   esi,eax
  405fdd:	fidiv  DWORD PTR [esi-0x34]
  405fe0:	std    
  405fe1:	pop    ebx
  405fe2:	pop    ecx
  405fe3:	aas    
  405fe4:	int3   
  405fe5:	inc    BYTE PTR [eax]
  405fe7:	mov    dl,0x38
  405fe9:	pop    esp
  405fea:	out    0x94,eax
  405fec:	mov    edx,0xa74c935d
  405ff1:	cmp    ebx,DWORD PTR ds:0xf7ea2acd
  405ff7:	sbb    ah,BYTE PTR [esi]
  405ff9:	ins    DWORD PTR es:[edi],dx
  405ffa:	cmp    ah,BYTE PTR [ecx+eiz*1]
  405ffd:	shr    DWORD PTR [edx],1
  405fff:	leave  
  406000:	jno    0x405fd9
  406002:	stos   BYTE PTR es:[edi],al
  406003:	(bad)  
  406004:	and    BYTE PTR [esp+eax*2-0x35b4f94e],ah
  40600b:	mov    al,BYTE PTR [edx]
  40600d:	inc    esp
  40600e:	stc    
  40600f:	adc    al,0xb7
  406011:	(bad)
  406014:	mov    cl,0xb9
  406016:	sar    DWORD PTR [eax],cl
  406018:	mov    esp,0xe9f7ddb0
  40601d:	enter  0x679d,0xc
  406021:	fidivr DWORD PTR [ebp+0x461569dc]
  406027:	jl     0x406034
  406029:	push   ds
  40602a:	inc    DWORD PTR [edi+0x95fecaa]
  406030:	cpuid  
  406032:	ins    BYTE PTR es:[edi],dx
  406033:	sahf   
  406034:	xor    DWORD PTR [esi+0x1e],0x697b3f3c
  40603b:	and    eax,DWORD PTR [eax-0x7b01e208]
  406041:	adc    edx,ebx
  406043:	das    
  406044:	loopne 0x4060bc
  406046:	dec    esp
  406047:	bswap  esi
  406049:	push   ebx
  40604a:	cmp    eax,0xe1fcf411
  40604f:	stos   BYTE PTR es:[edi],al
  406050:	push   ss
  406051:	jae    0x4060b2
  406053:	call   0x245bce08
  406058:	adc    al,0xf8
  40605a:	lea    edx,[ebx]
  40605c:	cdq    
  40605d:	and    bl,dh
  40605f:	mov    WORD PTR [esi+0x1152b58a],fs
  406065:	jnp    0x6c2f3385
  40606b:	jnp    0x406031
  40606d:	push   eax
  40606e:	out    dx,eax
  40606f:	imul   DWORD PTR [edx+0x45]
  406072:	iret   
  406073:	pop    ebp
  406074:	sub    eax,DWORD PTR [ebx+0x39]
  406077:	mov    edx,0x918e8284
  40607c:	ret    0x2713
  40607f:	aad    0x34
  406081:	xchg   ecx,eax
  406082:	test   ah,dl
  406084:	call   0xe79cd8f3
  406089:	gs popa 
  40608b:	push   eax
  40608c:	dec    edi
  40608d:	mov    ah,0x43
  40608f:	inc    edi
  406090:	or     DWORD PTR [edi+0x28154580],0x6e957a56
  40609a:	test   al,0xfb
  40609c:	sub    esp,esp
  40609e:	cmp    eax,0x9e11a1cb
  4060a3:	in     eax,dx
  4060a4:	fistp  WORD PTR [edx]
  4060a6:	dec    ebx
  4060a7:	pop    edx
  4060a8:	pop    edx
  4060a9:	fsubr  st,st(0)
  4060ab:	sbb    edi,edx
  4060ad:	pop    di
  4060af:	pop    edx
  4060b0:	(bad)  
  4060b1:	and    ebx,eax
  4060b3:	jno    0x4060b5
  4060b5:	in     eax,0x5e
  4060b7:	lods   al,BYTE PTR ds:[esi]
  4060b8:	sub    BYTE PTR [ebp+ebx*2-0xa],bh
  4060bc:	aas    
  4060bd:	xchg   ecx,eax
  4060be:	sahf   
  4060bf:	imul   esi,DWORD PTR [ecx],0x14478708
  4060c5:	lods   al,BYTE PTR ds:[esi]
  4060c6:	xor    eax,0xb025a5f9
  4060cb:	dec    edx
  4060cc:	scas   al,BYTE PTR es:[edi]
  4060cd:	(bad)  
  4060ce:	lar    edx,sp
  4060d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060d2:	pop    ebp
  4060d3:	pop    eax
  4060d4:	(bad)  
  4060d5:	mov    al,BYTE PTR [ecx]
  4060d7:	mov    ebp,DWORD PTR [ecx-0x50b07b6d]
  4060dd:	pop    ebp
  4060de:	call   0xc3d5:0xbe99b22
  4060e5:	ret    0xed0b
  4060e8:	jl     0x406109
  4060ea:	adc    ebp,DWORD PTR [edx]
  4060ec:	ss pop ecx
  4060ee:	pop    esp
  4060ef:	inc    ebx
  4060f0:	loope  0x406125
  4060f2:	jo     0x4060a6
  4060f4:	or     DWORD PTR [esi+edx*2],0xffffff8d
  4060f8:	inc    esp
  4060f9:	add    eax,0xcc4589fc
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	aad    0xe8
  40612e:	pop    ecx
  40612f:	stos   BYTE PTR es:[edi],al
  406130:	js     0x4060d5
  406132:	sbb    BYTE PTR [eax],bl
  406134:	sahf   
  406135:	adc    bl,BYTE PTR [eax]
  406137:	sbb    cl,dl
  406139:	sbb    al,0x11
  40613b:	daa    
  40613c:	loope  0x406174
  40613e:	push   ebp
  40613f:	jbe    0x4060cb
  406141:	leave  
  406142:	das    
  406143:	imul   ecx,DWORD PTR [edx+ebx*8+0x5b9988b0],0xfffffff6
  40614b:	dec    esp
  40614c:	test   BYTE PTR [ecx+0x3a],ch
  40614f:	mov    esi,0x696a3436
  406154:	adc    eax,0x6a3b1924
  406159:	jne    0x406148
  40615b:	call   0xf78a:0x3989a5fa
  406162:	cs pusha 
  406164:	lods   al,BYTE PTR ds:[esi]
  406165:	add    eax,DWORD PTR [edx-0x7f7139f7]
  40616b:	fsubr  DWORD PTR [edx+eax*2+0x5a1b8887]
  406172:	sahf   
  406173:	inc    esp
  406174:	mov    ecx,0x3e343df
  406179:	retf   0x3628
  40617c:	push   esi
  40617d:	inc    ebx
  40617e:	xor    eax,0x9e185adf
  406183:	mov    eax,ds:0x930a028e
  406188:	push   ecx
  406189:	lods   eax,DWORD PTR ds:[esi]
  40618a:	mov    dh,0xd6
  40618c:	aaa    
  40618d:	iret   
  40618e:	mov    edi,ebx
  406190:	cmp    eax,0x5d7f9363
  406195:	sbb    BYTE PTR [ebx-0x3c],cl
  406198:	inc    edi
  406199:	jae    0x406210
  40619b:	sub    al,0x50
  40619d:	sub    cl,BYTE PTR [esi+0x60]
  4061a0:	dec    ecx
  4061a1:	test   al,0xf
  4061a3:	test   eax,0x56c10e10
  4061a8:	xchg   ecx,eax
  4061a9:	outs   dx,BYTE PTR ds:[esi]
  4061aa:	and    eax,0x3756b6e4
  4061af:	and    DWORD PTR [ebp-0x56],0xffffffc7
  4061b3:	pop    ecx
  4061b4:	mov    ecx,0x28f94554
  4061b9:	out    dx,eax
  4061ba:	scas   eax,DWORD PTR es:[edi]
  4061bb:	or     DWORD PTR [eax+0x5e],edx
  4061be:	out    dx,eax
  4061bf:	cld    
  4061c0:	test   BYTE PTR [edi],bh
  4061c2:	fidivr WORD PTR [ebx+0xb1ac809]
  4061c8:	shr    BYTE PTR [edi],cl
  4061ca:	mov    cl,0x63
  4061cc:	out    0x8d,al
  4061ce:	sbb    al,0x9c
  4061d0:	lods   eax,DWORD PTR ds:[esi]
  4061d1:	and    dl,BYTE PTR [ebx-0x4ee45bb7]
  4061d7:	repz jle 0x4061f6
  4061da:	and    al,0xe0
  4061dc:	xor    al,BYTE PTR [esi+esi*8]
  4061df:	adc    eax,0xcbd0e667
  4061e4:	add    ah,0x6a
  4061e7:	sub    DWORD PTR [edi],ebx
  4061e9:	xlat   BYTE PTR ds:[ebx]
  4061ea:	jl     0x406182
  4061ec:	sbb    esi,eax
  4061ee:	ret    0xc2a9
  4061f1:	inc    ecx
  4061f2:	stos   DWORD PTR es:[edi],eax
  4061f3:	pop    edx
  4061f4:	enter  0x44b4,0xe2
  4061f8:	cmp    BYTE PTR [eax+edi*2-0xf98be30],bh
  4061ff:	xchg   ebx,eax
  406200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406201:	sbb    eax,0xa061154d
  406206:	adc    eax,ebx
  406208:	xor    esp,esi
  40620a:	mov    BYTE PTR [esi+0x22b89878],bl
  406210:	or     edx,edi
  406212:	pop    ebx
  406213:	ret    
  406214:	ds jecxz 0x406271
  406217:	sub    eax,0x3f6ad02b
  40621c:	retf   
  40621d:	lahf   
  40621e:	clc    
  40621f:	add    DWORD PTR [ebp-0x35],edx
  406222:	arpl   WORD PTR [edi-0x63],ax
  406225:	(bad)  
  406226:	iret   
  406227:	test   al,0x3f
  406229:	and    ch,cl
  40622b:	dec    eax
  40622c:	je     0x406237
  40622e:	mov    ds:0xa7165ca7,eax
  406233:	pop    es
  406234:	or     DWORD PTR [edx+0x60147cda],0x43
  40623b:	imul   esp,DWORD PTR [edi],0xffffffc3
  40623e:	popf   
  40623f:	pop    ss
  406240:	dec    eax
  406241:	dec    edx
  406242:	mov    dl,0x27
  406244:	jmp    0x4062a3
  406246:	mov    esi,0x4426a52
  40624b:	jp     0x4062b5
  40624d:	mov    ds:0x54dc0c7a,eax
  406252:	loopne 0x40626a
  406254:	loop   0x4062a9
  406256:	cs inc ecx
  406258:	fisub  WORD PTR [ecx+0x727d4e1b]
  40625e:	jle    0x406291
  406260:	pop    eax
  406261:	inc    edi
  406262:	shl    BYTE PTR [ecx+0x5018757e],0xb6
  406269:	xchg   ebx,eax
  40626a:	mov    ds:0xb3c991fe,al
  40626f:	scas   al,BYTE PTR es:[edi]
  406270:	jg     0x406213
  406272:	inc    ebx
  406273:	pop    ebx
  406274:	loopne 0x4062a3
  406276:	mov    cl,ch
  406278:	pop    eax
  406279:	in     al,dx
  40627a:	pop    edx
  40627b:	into   
  40627c:	push   0x42
  40627e:	xor    eax,0x4f8012b5
  406283:	xor    al,0x91
  406285:	add    cl,BYTE PTR [edi+ecx*4-0x4ba0c02d]
  40628c:	push   esi
  40628d:	and    al,BYTE PTR [ebx-0x4a]
  406290:	and    dh,BYTE PTR [ecx-0x3c]
  406293:	outs   dx,BYTE PTR ds:[esi]
  406294:	add    al,0x70
  406296:	pushf  
  406297:	clc    
  406298:	repnz mov al,dh
  40629b:	ss inc ebp
  40629d:	jne    0x406227
  40629f:	pop    esi
  4062a0:	inc    edi
  4062a1:	xchg   DWORD PTR [ebx+ebp*8-0x29661000],edx
  4062a8:	int3   
  4062a9:	mov    ecx,0x76cad280
  4062ae:	in     eax,dx
  4062af:	gs rcl ah,1
  4062b2:	popa   
  4062b3:	dec    ecx
  4062b4:	out    dx,al
  4062b5:	sar    BYTE PTR [esi],0xa6
  4062b8:	imul   ebp,DWORD PTR [edi],0xb00a8a86
  4062be:	xor    BYTE PTR [esi],bh
  4062c0:	mov    ah,0x72
  4062c2:	pop    eax
  4062c3:	leave  
  4062c4:	jb     0x4062c7
  4062c6:	mov    esp,0xccb7631b
  4062cb:	repnz retf 0x396f
  4062cf:	push   0x455612f9
  4062d4:	fwait
  4062d5:	into   
  4062d6:	shr    DWORD PTR [eax-0x3b],1
  4062d9:	es xchg ebp,eax
  4062db:	sub    ecx,DWORD PTR [edx-0xa9a3495]
  4062e1:	and    al,dh
  4062e3:	pop    ds
  4062e4:	fs ss call 0x3d138318
  4062eb:	jns    0x4062a1
  4062ed:	hlt    
  4062ee:	push   ebp
  4062ef:	ins    BYTE PTR es:[edi],dx
  4062f0:	(bad)  
  4062f1:	push   ebp
  4062f2:	mov    bl,0xc1
  4062f4:	push   eax
  4062f5:	mov    esi,0x54974d45
  4062fa:	mov    dh,0x77
  4062fc:	mov    ch,0xeb
  4062fe:	ret    
  4062ff:	mov    bh,BYTE PTR [eax+0x13]
  406302:	fstp   QWORD PTR [esi]
  406305:	enter  0x974b,0xa8
  406309:	jmp    0xecf:0x4896120d
  406310:	push   0x5b
  406312:	imul   DWORD PTR [edi]
  406314:	imul   eax,DWORD PTR [ebx],0xd389825a
  40631a:	sti    
  40631b:	add    bl,BYTE PTR [ebx+0x396417b6]
  406321:	sub    esp,ebp
  406323:	hlt    
  406324:	mov    cl,0x29
  406326:	inc    esp
  406327:	repz sti 
  406329:	or     eax,edx
  40632b:	cwde   
  40632c:	jmp    0xc9e8e24a
  406331:	adc    ecx,esi
  406333:	mov    ds:0x7a14f909,eax
  406338:	ret    
  406339:	inc    esp
  40633b:	inc    edx
  40633c:	rdtsc  
  40633e:	fisttp WORD PTR [ebp+0x1c]
  406341:	push   es
  406342:	icebp  
  406343:	mov    DWORD PTR [ebx],eax
  406345:	jle    0x40639f
  406347:	or     DWORD PTR [edi],0x30
  40634a:	fucomip st,st(3)
  40634c:	xchg   BYTE PTR [esi],ah
  40634e:	out    dx,al
  40634f:	scas   eax,DWORD PTR es:[edi]
  406350:	jnp    0x40630f
  406352:	or     ch,0x21
  406355:	inc    esp
  406356:	(bad)  
  406357:	sub    ah,bh
  406359:	sub    DWORD PTR [edi],0x5d547a2a
  40635f:	es (bad) 
  406361:	ja     0x40633e
  406363:	addr16 and eax,0xdd95e5d3
  406369:	jnp    0x4062ec
  40636b:	cmc    
  40636c:	mov    WORD PTR [eax+0x62],gs
  40636f:	aas    
  406370:	sar    DWORD PTR ss:[ebx],0x59
  406374:	aad    0x96
  406376:	ret    0x7eca
  406379:	push   ecx
  40637a:	mov    esi,0xe8b8d7cf
  40637f:	mov    ch,0x4f
  406381:	push   ecx
  406382:	cmp    eax,0x230f0085
  406387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406388:	frstor [eax+eiz*4]
  40638b:	adc    al,0x93
  40638d:	add    BYTE PTR [ebx],ch
  40638f:	ficomp WORD PTR [edi+0x29e24f0c]
  406395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406396:	mov    ecx,0xd39bd79e
  40639b:	mov    ch,dl
  40639d:	popf   
  40639e:	fcomp  DWORD PTR [edi+0x6f11d3d4]
  4063a4:	test   eax,0xe163059a
  4063a9:	scas   al,BYTE PTR es:[edi]
  4063aa:	inc    ecx
  4063ab:	xchg   ebp,eax
  4063ac:	mov    edx,?
  4063ae:	or     DWORD PTR [ebp+0x6],edx
  4063b1:	add    ebx,esp
  4063b3:	out    0x8b,eax
  4063b5:	imul   ebp,DWORD PTR [esi-0x76d93aac],0x42
  4063bc:	jnp    0x4063fd
  4063be:	jno    0x4063f5
  4063c0:	jl     0x4063a5
  4063c2:	or     bl,BYTE PTR [ecx-0xb3d023c]
  4063c8:	aam    0xef
  4063ca:	cmp    ch,dl
  4063cc:	(bad)  
  4063cd:	loop   0x4063f7
  4063cf:	leave  
  4063d0:	mov    bl,0x8
  4063d2:	pop    ebx
  4063d3:	inc    esi
  4063d4:	mov    al,ds:0x1aca35d0
  4063d9:	xchg   esi,eax
  4063da:	push   0xcb2d8ca5
  4063df:	aaa    
  4063e0:	std    
  4063e1:	aaa    
  4063e2:	mov    ecx,0x2fe894c6
  4063e7:	jns    0x4063e4
  4063e9:	pop    ecx
  4063ea:	sub    DWORD PTR [ecx+0x4e28c9bf],eax
  4063f0:	pop    ss
  4063f1:	cmp    BYTE PTR [ebx+0x41cb43f4],dh
  4063f7:	push   esp
  4063f8:	jecxz  0x406385
  4063fa:	and    esi,esp
  4063fc:	push   edx
  4063fd:	scas   eax,DWORD PTR es:[edi]
  4063fe:	mov    ch,BYTE PTR ss:[edi+edi*2]
  406402:	or     ebx,DWORD PTR [edi+esi*4-0x2e3d1d7]
  406409:	mov    ds:0x62a0bc77,eax
  40640e:	jns    0x406448
  406410:	cld    
  406411:	sbb    DWORD PTR [ebp-0x65],ecx
  406414:	add    al,0x6b
  406416:	inc    ebp
  406417:	scas   eax,DWORD PTR es:[edi]
  406418:	call   0x9fe3:0xbcd3784f
  40641f:	out    dx,eax
  406420:	out    0x62,al
  406422:	imul   BYTE PTR [ebx-0x65]
  406425:	push   edx
  406426:	jmp    0x1554:0xc1faba18
  40642d:	inc    ecx
  40642e:	(bad)  
  40642f:	jo     0x40645f
  406431:	ficom  WORD PTR [edx+0x66a537bb]
  406437:	xchg   esi,eax
  406438:	idiv   eax
  40643a:	inc    edx
  40643b:	mov    eax,ds:0x6729d3ca
  406440:	rcr    BYTE PTR [ebp+eax*2+0x56],cl
  406444:	sbb    eax,0xedf6a0a9
  406449:	call   0x23621454
  40644e:	out    dx,al
  40644f:	lods   al,BYTE PTR ds:[esi]
  406450:	and    al,0x1f
  406452:	jle    0x4063ec
  406454:	repnz in al,0x1d
  406457:	pop    ecx
  406458:	iret   
  406459:	outs   dx,DWORD PTR ds:[esi]
  40645a:	mov    dh,0xc3
  40645c:	mov    edx,0xd17af54b
  406461:	sbb    bl,dl
  406463:	mov    eax,esp
  406465:	fdivrp st(0),st
  406467:	dec    ebp
  406468:	enter  0x24e2,0x3c
  40646c:	nop
  40646d:	push   eax
  40646e:	cmp    DWORD PTR [ecx+0x52],edx
  406471:	xchg   ebp,eax
  406472:	sti    
  406473:	xor    DWORD PTR [eiz*8-0x13bb603c],0x5f
  40647b:	push   ss
  40647c:	jge    0x4064c9
  40647e:	sbb    al,0x4c
  406480:	sub    eax,0x1d13b12c
  406485:	dec    ebx
  406486:	xor    BYTE PTR [edx+0x36],0x3e
  40648a:	cmp    esp,DWORD PTR [esi-0x17b06a2]
  406490:	adc    ebx,DWORD PTR [esi]
  406492:	adc    al,0xcb
  406494:	ja     0x406444
  406496:	outs   dx,DWORD PTR ds:[esi]
  406497:	je     0x4064c4
  406499:	push   cs
  40649a:	out    0x4f,eax
  40649c:	nop
  40649d:	or     DWORD PTR [ecx-0x23],ebx
  4064a0:	pop    edi
  4064a1:	cmp    BYTE PTR [ebx-0x1b],dh
  4064a4:	lds    edi,FWORD PTR [edi]
  4064a6:	das    
  4064a7:	jb     0x4064f5
  4064a9:	sahf   
  4064aa:	je     0x4064de
  4064ac:	xchg   ecx,eax
  4064ad:	sbb    DWORD PTR [esi-0x36],ebx
  4064b0:	in     al,dx
  4064b1:	or     eax,0x426d6be8
  4064b6:	aas    
  4064b7:	repnz cdq 
  4064b9:	jecxz  0x406460
  4064bb:	xlat   BYTE PTR ds:[ebx]
  4064bc:	jge    0x4064b0
  4064be:	add    DWORD PTR [si+0x6a],edi
  4064c2:	ffreep st(3)
  4064c4:	enter  0xfc19,0xbd
  4064c8:	mov    ss,edi
  4064ca:	adc    edi,0x32
  4064cd:	xor    al,0x96
  4064cf:	and    dl,cl
  4064d1:	adc    edi,ebx
  4064d3:	aaa    
  4064d4:	adc    eax,0xad82c98e
  4064d9:	out    dx,al
  4064da:	or     dl,BYTE PTR [ecx+0xbf5b418]
  4064e0:	xor    DWORD PTR es:[ecx+0x95a25c2],esp
  4064e7:	pop    ds
  4064e8:	inc    ecx
  4064e9:	push   ss
  4064ea:	in     al,dx
  4064eb:	icebp  
  4064ec:	jl     0x406508
  4064ee:	cmp    eax,edx
  4064f0:	inc    edx
  4064f1:	jbe    0x406526
  4064f3:	int    0x72
  4064f5:	cmp    bh,BYTE PTR [edi-0x4f]
  4064f8:	push   eax
  4064f9:	or     eax,edx
  4064fb:	mov    cl,BYTE PTR [eax+ecx*1]
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x5518798b],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	push   eax
  406557:	mov    ds:0x703a2957,al
  40655c:	jb     0x406570
  40655e:	sub    esi,eax
  406560:	pop    edi
  406561:	pop    esp
  406562:	jns    0x4065ca
  406564:	repnz add edx,eax
  406567:	js     0x40656f
  406569:	sbb    eax,ebx
  40656b:	enter  0xeb40,0xad
  40656f:	inc    ebx
  406570:	dec    esi
  406571:	icebp  
  406572:	outs   dx,BYTE PTR ds:[esi]
  406573:	sahf   
  406574:	or     DWORD PTR [ecx+ebx*1+0x1db8e855],edx
  40657b:	sti    
  40657c:	into   
  40657d:	or     eax,0x1aa1b879
  406582:	push   0x67446a5c
  406587:	xor    ecx,DWORD PTR [ebx]
  406589:	test   al,0x87
  40658b:	inc    esp
  40658c:	mov    ds:0x3003de97,eax
  406591:	mov    ds:0x2790837d,al
  406596:	nop
  406597:	pop    ebx
  406598:	retf   0x57ba
  40659b:	outs   dx,DWORD PTR ds:[esi]
  40659c:	in     eax,dx
  40659d:	je     0x406547
  40659f:	inc    edx
  4065a0:	mov    edx,0xa10afbd5
  4065a5:	out    dx,al
  4065a6:	adc    eax,0x787ad541
  4065ab:	mov    WORD PTR [eax],ss
  4065ad:	ins    DWORD PTR es:[edi],dx
  4065ae:	nop
  4065af:	cmp    ecx,DWORD PTR [eax]
  4065b1:	and    DWORD PTR [ebp-0x43f5abc4],ecx
  4065b7:	fcmovbe st,st(6)
  4065b9:	imul   ebp,DWORD PTR [ebx+edi*4-0x49],0x6a
  4065be:	scas   al,BYTE PTR es:[edi]
  4065bf:	or     al,0xcb
  4065c1:	aam    0x5c
  4065c3:	add    edi,DWORD PTR [esp+eax*1+0x1a7843f7]
  4065ca:	jecxz  0x40659c
  4065cc:	out    dx,al
  4065cd:	(bad)  
  4065ce:	sbb    BYTE PTR [edi],ah
  4065d0:	outs   dx,DWORD PTR ds:[esi]
  4065d1:	js     0x4065ab
  4065d3:	sbb    al,BYTE PTR [edi-0x27]
  4065d6:	push   ds
  4065d7:	xor    BYTE PTR [bp+0x32],bh
  4065db:	lds    esp,FWORD PTR [esi]
  4065dd:	scas   al,BYTE PTR es:[edi]
  4065de:	xor    BYTE PTR [ebx-0x69ba04d6],cl
  4065e4:	inc    ebx
  4065e5:	xor    al,0xaa
  4065e7:	jmp    0xbb3be5c3
  4065ec:	lods   al,BYTE PTR ds:[esi]
  4065ed:	enter  0x6f33,0x36
  4065f1:	rcl    BYTE PTR [edx],cl
  4065f3:	sbb    edi,DWORD PTR [esi-0x13]
  4065f6:	sub    BYTE PTR [esi+0x12bc79a3],0xc3
  4065fd:	data16 (bad) 
  4065ff:	pop    ebp
  406600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406601:	in     eax,0x27
  406603:	add    bh,BYTE PTR [ecx]
  406605:	(bad)  
  406606:	push   edi
  406607:	pop    es
  406608:	cli    
  406609:	push   eax
  40660a:	adc    dh,BYTE PTR [di-0x58]
  40660e:	stc    
  40660f:	jmp    0x406640
  406611:	std    
  406612:	pop    eax
  406613:	outs   dx,BYTE PTR ds:[esi]
  406614:	jno    0x40667f
  406616:	push   esp
  406617:	xor    edx,DWORD PTR [edx+0x72]
  40661a:	xor    ecx,DWORD PTR [edi]
  40661c:	imul   esi,DWORD PTR [ecx+0x67],0x74
  406620:	(bad)  
  406621:	or     al,0xe6
  406623:	hlt    
  406624:	adc    ebp,ebp
  406626:	fisubr WORD PTR [esi-0x2]
  406629:	imul   esi,ebp,0x1214fedf
  40662f:	mov    ah,0x3d
  406631:	mov    ecx,0xc19c45a9
  406636:	adc    eax,0x2ed56912
  40663b:	cmp    al,0x56
  40663d:	inc    eax
  40663e:	aad    0xe6
  406640:	call   0x43c0ab77
  406645:	or     DWORD PTR ds:0x874323f2,ecx
  40664b:	inc    edi
  40664c:	or     DWORD PTR [edx+0x7cce2f52],0x95fb0d85
  406656:	dec    edi
  406657:	retf   
  406658:	les    ebp,FWORD PTR [eax]
  40665a:	inc    ebp
  40665b:	lahf   
  40665c:	push   ebp
  40665d:	xchg   ebp,eax
  40665e:	push   ebx
  40665f:	push   ecx
  406660:	xchg   BYTE PTR [ebp-0x2114e231],dh
  406666:	sub    BYTE PTR [ecx],bl
  406668:	xchg   BYTE PTR [esi+0x60],dl
  40666b:	inc    eax
  40666c:	aaa    
  40666d:	mov    ds:0xbb24c8d6,al
  406672:	sub    eax,DWORD PTR [esi]
  406674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406675:	adc    ah,BYTE PTR [esi+0x18]
  406678:	ja     0x4066a5
  40667a:	dec    ecx
  40667b:	adc    BYTE PTR [ebx],0xa7
  40667e:	sbb    DWORD PTR [edi+0xf515c12],esp
  406684:	jno    0x4066f4
  406686:	mov    dh,0xd6
  406688:	jae    0x406663
  40668a:	xor    dh,BYTE PTR [edx+0x53b2e4da]
  406690:	cmp    dl,bh
  406692:	clc    
  406693:	jb     0x406699
  406695:	mov    edi,0xd3134da0
  40669a:	and    DWORD PTR ds:0x588a6da3,edi
  4066a0:	jbe    0x40665b
  4066a2:	push   0xfffffffe
  4066a4:	fucomp st(3)
  4066a6:	adc    ch,bl
  4066a8:	clc    
  4066a9:	ret    0x1432
  4066ac:	push   edi
  4066ad:	xchg   edx,eax
  4066ae:	xlat   BYTE PTR ds:[ebx]
  4066af:	fwait
  4066b0:	or     eax,0xd8404999
  4066b5:	adc    edi,edx
  4066b7:	sysexit 
  4066b9:	or     edx,edi
  4066bb:	nop
  4066bc:	mov    DWORD PTR [edx-0x3a],esp
  4066bf:	scas   eax,DWORD PTR es:[edi]
  4066c0:	pop    ds
  4066c1:	addr16 ss jmp 0x406656
  4066c5:	cwde   
  4066c6:	lds    eax,FWORD PTR [edx]
  4066c8:	jp     0x4066c0
  4066ca:	mov    edx,0x9dcfb411
  4066cf:	fwait
  4066d0:	cdq    
  4066d1:	xchg   edi,eax
  4066d2:	adc    edx,ebp
  4066d4:	xor    BYTE PTR [ebx-0x7f0e98b8],al
  4066da:	add    dl,BYTE PTR [edi+eiz*1]
  4066dd:	mov    eax,ds:0xda06c774
  4066e2:	mov    edi,0xe00fdacc
  4066e7:	dec    edi
  4066e8:	stc    
  4066e9:	(bad)  
  4066ea:	les    ecx,FWORD PTR [edx+0x3138215e]
  4066f0:	fnsave [eax+0x1b6d5042]
  4066f6:	sti    
  4066f7:	lea    esi,[esi]
  4066f9:	ins    BYTE PTR es:[edi],dx
  4066fa:	jle    0x40672c
  4066fc:	xlat   BYTE PTR ds:[ebx]
  4066fd:	xchg   BYTE PTR [ecx],bl
  4066ff:	(bad)  
  406700:	fldcw  WORD PTR [edx]
  406702:	mov    ebp,0xeb97c4b6
  406707:	mov    esi,0x747119a0
  40670c:	cmp    dl,cl
  40670e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40670f:	add    eax,0x94148b45
  406714:	std    
  406715:	mov    DWORD PTR gs:[ecx-0x52],esi
  406719:	loop   0x406796
  40671b:	push   esp
  40671c:	lahf   
  40671d:	jl     0x406763
  40671f:	aad    0xe3
  406721:	xor    BYTE PTR ds:0x128eb6f2,ch
  406727:	cmp    dh,bl
  406729:	test   dl,al
  40672b:	mov    ecx,0x47159cfd
  406730:	inc    esp
  406731:	xor    BYTE PTR [ecx-0x20fa3a24],ch
  406737:	ins    DWORD PTR es:[edi],dx
  406738:	push   eax
  406739:	(bad)  
  40673a:	pushf  
  40673b:	mov    ch,0x8f
  40673d:	shl    BYTE PTR ds:0x4d9e3bec,1
  406743:	fcom   DWORD PTR [ebp+edi*1+0x62]
  406747:	jmp    0x1255:0x63d81248
  40674e:	rcl    dh,cl
  406750:	xchg   edi,eax
  406751:	inc    eax
  406752:	bound  ebx,QWORD PTR [ebx+0x5817a435]
  406758:	or     dl,BYTE PTR es:[esi]
  40675b:	cmp    esp,DWORD PTR [ebp+0x40]
  40675e:	fisub  DWORD PTR [edx+0x1a682560]
  406764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406765:	adc    BYTE PTR [ecx+0x33],bl
  406768:	mov    ecx,0x85799118
  40676d:	mov    esp,0x554dec11
  406772:	cmp    DWORD PTR [esi+0x2f3d7d61],ebp
  406778:	(bad)  
  406779:	dec    edx
  40677a:	push   cs
  40677b:	(bad)  
  40677c:	bound  esi,QWORD PTR ds:0x81711c1d
  406782:	add    al,0x3f
  406784:	scas   eax,DWORD PTR es:[edi]
  406785:	push   ss
  406786:	mov    ecx,0x6c3ceeba
  40678b:	jae    0x406754
  40678d:	out    0xc7,eax
  40678f:	imul   eax,DWORD PTR [esp+ebp*2-0x52],0x2efd23eb
  406797:	scas   eax,DWORD PTR es:[edi]
  406798:	and    al,0x6f
  40679a:	cli    
  40679b:	mov    al,ds:0x341042ff
  4067a0:	ss xchg esp,eax
  4067a2:	(bad)  
  4067a4:	inc    eax
  4067a5:	stos   DWORD PTR es:[edi],eax
  4067a6:	jns    0x406740
  4067a8:	ret    0x38f6
  4067ab:	aas    
  4067ac:	push   eax
  4067ad:	jmp    0x4067f6
  4067af:	imul   eax,DWORD PTR [eax-0x203ec909],0xbabe85f2
  4067b9:	jb     0x406832
  4067bb:	mov    dl,0xd7
  4067bd:	sub    eax,0xa93c47de
  4067c2:	inc    esi
  4067c3:	iret   
  4067c4:	push   esi
  4067c5:	ss (bad) 
  4067c7:	ins    BYTE PTR es:[edi],dx
  4067c8:	ds ds ins DWORD PTR es:[edi],dx
  4067cb:	pusha  
  4067cc:	js     0x4067a6
  4067ce:	jge    0x4067cc
  4067d0:	fstp   DWORD PTR [ecx]
  4067d2:	out    0x31,eax
  4067d4:	lea    edi,[esi+0x77a7d663]
  4067da:	iret   
  4067db:	xchg   esi,eax
  4067dc:	fcomp  DWORD PTR [ebp+0x20]
  4067df:	fsubr  DWORD PTR [esi-0x310498ba]
  4067e5:	pop    ds
  4067e6:	call   0xc443:0x876b1c85
  4067ed:	sbb    al,0x2a
  4067ef:	jg     0x406800
  4067f1:	push   esi
  4067f2:	push   esp
  4067f3:	les    eax,FWORD PTR [edx+ebp*1]
  4067f6:	mov    bl,0xfc
  4067f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067f9:	pop    edx
  4067fa:	sub    ah,bl
  4067fc:	jno    0x4067be
  4067fe:	push   0xfffffff5
  406800:	int    0x85
  406802:	test   ebx,ebp
  406804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406805:	jecxz  0x406872
  406807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406808:	gs xchg ecx,eax
  40680a:	cli    
  40680b:	push   eax
  40680c:	jb     0x4067c2
  40680e:	jg     0x4067ec
  406810:	jecxz  0x406844
  406812:	jo     0x4067ee
  406814:	and    ebx,eax
  406816:	push   cs
  406817:	mov    ds:0x2802d7e0,eax
  40681c:	aas    
  40681d:	lahf   
  40681e:	shl    BYTE PTR [ecx-0x35],cl
  406821:	aaa    
  406822:	shl    esi,0x24
  406825:	mov    ebx,0x7b251970
  40682a:	add    eax,0xc9c343c
  40682f:	mov    WORD PTR [edx-0x2c],fs
  406832:	in     al,0x27
  406834:	cli    
  406835:	addr16 (bad) 
  406837:	in     al,dx
  406838:	test   al,0x9e
  40683a:	pop    edx
  40683b:	ins    BYTE PTR es:[edi],dx
  40683c:	adc    BYTE PTR [ecx+eax*2+0x47fbcc41],cl
  406843:	je     0x406830
  406845:	jo     0x406828
  406847:	ds inc ebp
  406849:	pop    es
  40684a:	mov    ch,0xfd
  40684c:	imul   ebx,ebx,0xabf32372
  406852:	dec    esp
  406853:	xchg   esp,eax
  406854:	repnz mov edx,0x98d735fd
  40685a:	das    
  40685b:	sbb    BYTE PTR ds:0xb1f9ec79,0xea
  406862:	in     al,0x54
  406864:	adc    eax,DWORD PTR [esi+0x5f967c81]
  40686a:	scas   eax,DWORD PTR es:[edi]
  40686b:	mov    ah,0x7c
  40686d:	ins    DWORD PTR es:[edi],dx
  40686e:	call   0xcb09cd77
  406873:	pop    es
  406874:	xchg   edi,eax
  406875:	mov    ch,0xe
  406877:	jae    0x4068f1
  406879:	imul   edx,DWORD PTR [ebx+0x5a],0x42
  40687d:	and    cl,dh
  40687f:	xlat   BYTE PTR ds:[ebx]
  406880:	mul    DWORD PTR [edi+0x46]
  406883:	jae    0x4068e2
  406885:	cld    
  406886:	mov    ds:0xecda7ab5,al
  40688b:	outs   dx,DWORD PTR ds:[esi]
  40688c:	ss pop edi
  40688e:	inc    esi
  40688f:	jne    0x4068bf
  406891:	mov    ebx,0xce0ed1c
  406896:	xor    dl,cl
  406898:	out    0xd0,al
  40689a:	mov    edi,DWORD PTR [esp+edi*2-0x71]
  40689e:	push   edx
  40689f:	data16 mov ah,dl
  4068a2:	fst    DWORD PTR [eax]
  4068a4:	addps  xmm2,XMMWORD PTR [edi+0x56b94f6a]
  4068ab:	aaa    
  4068ac:	mov    edx,0x413891f1
  4068b1:	sub    ah,BYTE PTR [eax]
  4068b3:	ss (bad) 
  4068b5:	xor    al,0x4e
  4068b7:	mov    ecx,0x17a5ad5c
  4068bc:	adc    eax,0xec61b682
  4068c1:	inc    BYTE PTR [ebx+0x43e6b2d9]
  4068c7:	or     eax,0x7f301b90
  4068cc:	xor    dl,BYTE PTR [edi+0x65d3a746]
  4068d2:	and    al,0x41
  4068d4:	jno    0x4068a9
  4068d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068d7:	mov    ds:0x6a707f7b,al
  4068dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068dd:	fmul   DWORD PTR [ebx-0x7f]
  4068e0:	mov    al,BYTE PTR [eax]
  4068e2:	gs stos DWORD PTR es:[edi],eax
  4068e4:	iret   
  4068e5:	les    ebx,FWORD PTR [eax+ebp*8+0x6]
  4068e9:	ret    
  4068ea:	mov    WORD PTR [ebp-0x23df9043],fs
  4068f0:	std    
  4068f1:	add    esi,DWORD PTR [esi]
  4068f3:	push   DWORD PTR [ebp-0x14ddaa57]
  4068f9:	mov    dl,dl
  4068fb:	aad    0x67
  4068fd:	enter  0x724d,0x18
  406901:	or     ebp,DWORD PTR [ebx-0x35bc3757]
  406907:	loope  0x40689e
  406909:	and    DWORD PTR [edx-0x21],eax
  40690c:	xlat   BYTE PTR ss:[ebx]
  40690e:	mov    al,ch
  406910:	test   al,0x7d
  406912:	pop    ss
  406913:	in     eax,0x56
  406915:	cmp    DWORD PTR [eax-0x3f],0x4d8b1ee1
  40691c:	in     al,dx
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xaa275373
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	pop    eax
  406981:	repnz push edx
  406983:	daa    
  406984:	lds    edi,FWORD PTR ds:0x8c0f3c69
  40698a:	adc    bh,BYTE PTR [ebp+0x2edfd4a1]
  406990:	pop    eax
  406991:	jle    0x4069b0
  406993:	xchg   esi,eax
  406994:	pop    ss
  406995:	dec    eax
  406996:	pop    edi
  406997:	sub    al,BYTE PTR [edi]
  406999:	jmp    0x406983
  40699b:	push   ebx
  40699c:	sbb    eax,0xd8f8a43f
  4069a1:	cmp    BYTE PTR [esi-0x5f38a9af],dl
  4069a7:	mov    esp,0x7b33da89
  4069ac:	xchg   esi,eax
  4069ad:	loop   0x40694a
  4069af:	push   ebp
  4069b0:	mov    eax,ds:0x777c7877
  4069b5:	cmc    
  4069b6:	inc    ebx
  4069b7:	xchg   edx,eax
  4069b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069b9:	inc    esi
  4069ba:	sbb    esp,DWORD PTR [edi+0x7e]
  4069bd:	cmp    DWORD PTR [edx],ebx
  4069bf:	cli    
  4069c0:	jae    0x406a17
  4069c2:	imul   ebp,DWORD PTR [ecx+0x5df91636],0x24f08a06
  4069cc:	ins    DWORD PTR es:[edi],dx
  4069cd:	iret   
  4069ce:	fwait
  4069cf:	and    ch,BYTE PTR [esi+0x474de89d]
  4069d5:	xchg   esp,eax
  4069d6:	and    eax,0xe617f828
  4069db:	cmp    BYTE PTR [eax],bl
  4069dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069de:	adc    BYTE PTR [eax-0x8],dh
  4069e1:	xor    DWORD PTR [ebx-0x5a70736f],ebx
  4069e7:	pop    esi
  4069e8:	inc    eax
  4069e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ea:	jg     0x406a2a
  4069ec:	push   ebp
  4069ed:	jge    0x406a16
  4069ef:	or     eax,0x5b111b1a
  4069f4:	push   cs
  4069f5:	adc    BYTE PTR [esp+edi*8],dh
  4069f8:	sub    al,0xcc
  4069fa:	push   cs
  4069fb:	ror    dh,cl
  4069fd:	pusha  
  4069fe:	iret   
  4069ff:	ds inc ebp
  406a01:	jmp    0x406999
  406a03:	into   
  406a04:	fcomp  DWORD PTR [edx]
  406a06:	mov    esi,DWORD PTR [edi]
  406a08:	int    0xeb
  406a0a:	ret    
  406a0b:	(bad)  
  406a0c:	pop    es
  406a0d:	cdq    
  406a0e:	mov    al,0xbf
  406a10:	rol    DWORD PTR [eax+0x7b869388],1
  406a16:	push   esi
  406a17:	jecxz  0x406a18
  406a19:	daa    
  406a1a:	cs in  al,0x69
  406a1d:	rcl    BYTE PTR [ebp-0x1],0xf9
  406a21:	hlt    
  406a22:	cld    
  406a23:	cmp    bl,0x4b
  406a26:	pop    es
  406a27:	push   ebx
  406a28:	cdq    
  406a29:	sbb    dh,BYTE PTR [esi+0x2]
  406a2c:	sub    al,0xab
  406a2e:	sahf   
  406a2f:	std    
  406a30:	mul    BYTE PTR ds:0x6cd4ccfa
  406a36:	xor    eax,0xf4e722bd
  406a3b:	xchg   ecx,eax
  406a3c:	push   edx
  406a3d:	push   eax
  406a3e:	sub    BYTE PTR [ebx+0x3d1b60ca],al
  406a44:	dec    ebx
  406a45:	xor    ah,dl
  406a47:	ins    DWORD PTR es:[edi],dx
  406a48:	xlat   BYTE PTR ds:[ebx]
  406a49:	test   BYTE PTR [ebx+0x30],0x97
  406a4d:	adc    BYTE PTR [esi-0x623b5f82],bl
  406a53:	dec    edi
  406a54:	(bad)  
  406a55:	or     ch,ah
  406a57:	sbb    eax,0x1bc29128
  406a5c:	stos   DWORD PTR es:[edi],eax
  406a5d:	pusha  
  406a5e:	and    DWORD PTR [eax-0x47],0x6f1c42df
  406a65:	dec    ebx
  406a66:	mov    ebp,0x444a38f0
  406a6b:	(bad)  
  406a6c:	jg     0x406a2e
  406a6e:	ficom  DWORD PTR [edx-0x71f88ee0]
  406a74:	dec    ebx
  406a75:	ss adc esi,esp
  406a78:	outs   dx,DWORD PTR ds:[esi]
  406a79:	fldenv [edi+0x5]
  406a7c:	xlat   BYTE PTR ds:[ebx]
  406a7d:	inc    esp
  406a7e:	mov    eax,0x4bdd3ca8
  406a83:	gs jb  0x406a86
  406a86:	popf   
  406a87:	push   esp
  406a88:	adc    BYTE PTR [edx],0xc9
  406a8b:	icebp  
  406a8c:	mov    esi,0xec9aaeee
  406a91:	sbb    BYTE PTR [ecx+0x5bc1cb9d],dh
  406a97:	test   bl,dh
  406a99:	outs   dx,BYTE PTR ds:[esi]
  406a9a:	arpl   WORD PTR [edx-0x53],bx
  406a9d:	jnp    0x406a61
  406a9f:	fbstp  TBYTE PTR [esi-0x3b8d5c63]
  406aa5:	sub    eax,0x9f960eb1
  406aaa:	cmp    BYTE PTR [edx+0x7c17d640],bh
  406ab0:	mov    BYTE PTR [ebx+ecx*2+0x16],cl
  406ab4:	jg     0x406a9d
  406ab6:	mov    DWORD PTR [ebx],ecx
  406ab8:	data16 data16 lods al,BYTE PTR fs:[esi]
  406abc:	adc    al,BYTE PTR [eax-0x7ecff84d]
  406ac2:	cmp    al,0x5f
  406ac4:	loop   0x406a5a
  406ac6:	in     eax,0x6e
  406ac8:	mov    eax,ds:0x78b410b9
  406acd:	inc    esp
  406ace:	sub    al,0xfb
  406ad0:	inc    esp
  406ad1:	add    BYTE PTR [edx+edi*2-0xfaab113],0x11
  406ad9:	fsubp  st(5),st
  406adb:	add    al,0x28
  406add:	int3   
  406ade:	and    ebx,DWORD PTR [ebx+0x2aa0bab4]
  406ae4:	mov    esp,0xa0a908c0
  406ae9:	sbb    DWORD PTR [ebx+eiz*8-0x52615006],edx
  406af0:	arpl   di,cx
  406af2:	mov    cl,0x51
  406af4:	imul   ebx,DWORD PTR [ebx+edx*2-0x51359ff],0x10
  406afc:	test   bl,dl
  406afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aff:	push   esp
  406b00:	cmp    eax,0x206cc125
  406b05:	cmp    DWORD PTR [edi],esp
  406b07:	test   DWORD PTR [edx+0x47],edx
  406b0a:	jae    0x406ac3
  406b0c:	mov    al,ds:0xe5dabbc0
  406b11:	add    eax,ebp
  406b13:	dec    ebx
  406b14:	sub    BYTE PTR [ebx+0x7621f4f7],ah
  406b1a:	lock ins DWORD PTR es:[edi],dx
  406b1c:	mov    ds:0x74189782,al
  406b21:	lahf   
  406b22:	mov    cl,0xb5
  406b24:	pusha  
  406b25:	and    BYTE PTR [eax+0x698b5d7c],bl
  406b2b:	cmp    eax,0xbf66b5fc
  406b30:	xchg   edx,eax
  406b31:	mov    esp,0x7e8dcced
  406b36:	btc    DWORD PTR [edi-0x15],edx
  406b3a:	cmc    
  406b3b:	dec    ebp
  406b3c:	add    eax,DWORD PTR [ecx]
  406b3e:	push   esi
  406b3f:	xchg   ecx,eax
  406b40:	dec    esp
  406b41:	test   DWORD PTR [edx-0x2d],esi
  406b44:	sbb    al,0x17
  406b46:	adc    BYTE PTR es:[ecx],bh
  406b49:	mov    ecx,0x8e56ae39
  406b4e:	sub    edi,ecx
  406b50:	retf   0xb7bf
  406b53:	call   0x6d937eee
  406b58:	mov    eax,ds:0x6b927a99
  406b5d:	dec    ebp
  406b5e:	lock aaa 
  406b60:	add    bl,BYTE PTR [edx]
  406b62:	sub    DWORD PTR [esi],ebp
  406b64:	dec    esi
  406b65:	xchg   DWORD PTR ds:0xac939851,esp
  406b6b:	test   al,0x93
  406b6d:	or     DWORD PTR [ebx],0x2075fbd
  406b73:	sub    ecx,DWORD PTR [ebp+0x55558f71]
  406b79:	mov    ah,0xa
  406b7b:	or     eax,0x112b7876
  406b80:	cmp    esi,0xffffffa3
  406b83:	ja     0x406b83
  406b85:	cli    
  406b86:	je     0x406b8a
  406b88:	jp     0x406b9b
  406b8a:	or     bl,BYTE PTR [edx+0x28]
  406b8d:	and    ebx,esp
  406b8f:	push   0xffffffbf
  406b91:	das    
  406b92:	sub    eax,DWORD PTR ds:0xb6aa516d
  406b98:	call   0x798a:0x5a73da37
  406b9f:	test   DWORD PTR [ebp+0x123754bd],ebp
  406ba5:	sub    eax,DWORD PTR [edx-0x1b]
  406ba8:	jmp    0x4a03:0x3ddfa447
  406baf:	scas   al,BYTE PTR es:[edi]
  406bb0:	ins    DWORD PTR es:[edi],dx
  406bb1:	call   0xaeb:0xa8995d1
  406bb8:	ins    BYTE PTR es:[edi],dx
  406bb9:	cld    
  406bba:	in     al,dx
  406bbb:	jle    0x406be5
  406bbd:	xor    esp,DWORD PTR [edx-0x55]
  406bc0:	call   FWORD PTR [edx]
  406bc2:	pop    esp
  406bc3:	inc    esi
  406bc4:	repnz sub DWORD PTR [eax+0xf],ebx
  406bc8:	in     eax,dx
  406bc9:	loop   0x406be6
  406bcb:	dec    edx
  406bcc:	pop    edx
  406bcd:	adc    DWORD PTR [eax+edx*4],eax
  406bd0:	or     eax,0x27ccada0
  406bd5:	in     eax,dx
  406bd6:	xchg   esp,eax
  406bd7:	jl     0x406c23
  406bd9:	dec    edi
  406bda:	jmp    0x9425:0xcb337aa5
  406be1:	in     al,dx
  406be2:	xchg   ebx,eax
  406be3:	mov    dh,0x5b
  406be5:	aas    
  406be6:	or     ecx,edi
  406be8:	sbb    ebx,DWORD PTR [ebp+0x23a3f6f5]
  406bee:	mov    bh,0xb6
  406bf0:	adc    al,0xdc
  406bf2:	or     BYTE PTR ds:0x4fbbb01b,al
  406bf8:	and    BYTE PTR [ebp-0x73],cl
  406bfb:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bfd:	mov    esi,0x905f1bdf
  406c03:	inc    ecx
  406c04:	xchg   ebx,eax
  406c05:	cmp    DWORD PTR [ecx-0x762848c2],0xffffffe7
  406c0c:	fcom   DWORD PTR [edi-0x72]
  406c0f:	jp     0x406bbd
  406c11:	mov    ds:0x7d84c8a7,eax
  406c16:	ror    BYTE PTR [edi+0x40],0xec
  406c1a:	test   BYTE PTR [esp+ebx*2+0x2],dl
  406c1e:	int    0xe0
  406c20:	sub    eax,0x24506ee4
  406c25:	sub    esi,esp
  406c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c29:	aam    0x2
  406c2b:	fs push ebp
  406c2d:	jmp    0x406bbf
  406c2f:	(bad)  
  406c30:	shl    BYTE PTR [esi+ecx*1+0x33],1
  406c34:	push   edx
  406c35:	lock jnp 0x406c37
  406c38:	inc    ecx
  406c39:	mov    dh,0x58
  406c3b:	cmp    eax,0xce6e9d20
  406c40:	ficomp DWORD PTR ds:0x4f2f2baa
  406c46:	jmp    0x406c52
  406c48:	into   
  406c49:	mov    dh,ah
  406c4b:	mov    ebp,0x7a957fb2
  406c50:	fwait
  406c51:	call   0x8486:0x80bf0f03
  406c58:	popf   
  406c59:	inc    ebx
  406c5a:	mov    eax,ds:0xbb2f0739
  406c5f:	cmp    edi,DWORD PTR [edx+0x27841e69]
  406c65:	mul    cl
  406c67:	loop   0x406c08
  406c69:	push   es
  406c6a:	dec    ecx
  406c6b:	jg     0x406bee
  406c6d:	xlat   BYTE PTR ds:[ebx]
  406c6e:	ret    0x5840
  406c71:	stos   DWORD PTR es:[edi],eax
  406c72:	dec    ebx
  406c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c74:	jmp    0xa386c37d
  406c79:	(bad)  
  406c7a:	sbb    DWORD PTR [eax],esi
  406c7c:	mov    dh,0xe
  406c7e:	inc    esp
  406c7f:	adc    DWORD PTR [edx+0x18],esi
  406c82:	add    DWORD PTR [eax-0x46],esp
  406c85:	xchg   ebx,eax
  406c86:	lods   al,BYTE PTR ds:[esi]
  406c87:	ficom  WORD PTR [ebx+0x2c]
  406c8a:	jmp    0x42f793dc
  406c8f:	xor    al,0xfe
  406c91:	push   esp
  406c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c93:	add    eax,0x5a416533
  406c98:	sub    DWORD PTR [ecx+0x60256c47],ebx
  406c9e:	loope  0x406d1e
  406ca0:	or     BYTE PTR [ebx+ecx*1+0x2194f909],bh
  406ca7:	lods   eax,DWORD PTR ds:[esi]
  406ca8:	out    dx,al
  406ca9:	int    0x15
  406cab:	inc    esi
  406cac:	xor    eax,0x90fa7f7f
  406cb1:	in     eax,dx
  406cb2:	call   0xff189611
  406cb7:	jb     0x406cb8
  406cb9:	dec    ebx
  406cba:	aad    0xc4
  406cbc:	into   
  406cbd:	inc    eax
  406cbe:	lock adc al,0x7c
  406cc1:	or     ebp,edx
  406cc3:	mov    al,BYTE PTR [eax+0x5a]
  406cc6:	std    
  406cc7:	xor    DWORD PTR [esi-0x13],eax
  406cca:	mov    esi,0x12331eb9
  406ccf:	fs call 0x9d14f4bd
  406cd5:	out    0x2a,eax
  406cd7:	adc    BYTE PTR [edi],0x9a
  406cda:	scas   eax,DWORD PTR es:[edi]
  406cdb:	xchg   esp,eax
  406cdc:	loope  0x406ce8
  406cde:	sbb    al,0x7d
  406ce0:	sbb    eax,0xc8d777a2
  406ce5:	test   BYTE PTR [edi],bl
  406ce7:	ins    BYTE PTR es:[edi],dx
  406ce8:	jecxz  0x406cb4
  406cea:	fld    TBYTE PTR [ebp+ecx*2-0x2f]
  406cee:	and    ch,BYTE PTR [ecx-0x335c7eb9]
  406cf4:	adc    BYTE PTR [ebx-0x10],bl
  406cf7:	push   eax
  406cf8:	out    dx,al
  406cf9:	enter  0x8f96,0x48
  406cfd:	xlat   BYTE PTR ds:[ebx]
  406cfe:	add    bh,BYTE PTR [ecx+0x45]
  406d01:	test   DWORD PTR [esi],0x37ed9458
  406d07:	sub    cl,dl
  406d09:	inc    ebp
  406d0a:	in     al,dx
  406d0b:	sbb    dl,BYTE PTR [eax+edi*8]
  406d0e:	fwait
  406d0f:	adc    ah,BYTE PTR [edi]
  406d11:	mov    eax,0xff01d3be
  406d16:	jecxz  0x406d43
  406d18:	ret    0xca61
  406d1b:	push   0x7f441590
  406d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d21:	jns    0x406d03
  406d23:	bound  edi,QWORD PTR ds:0xe8e4f58a
  406d29:	jl     0x406ce8
  406d2b:	sbb    dh,dh
  406d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d2e:	xchg   esp,eax
  406d2f:	cmc    
  406d30:	inc    ebp
  406d31:	mov    BYTE PTR [ebx+0x5e],ah
  406d34:	maskmovq mm4,(bad)
  406d35:	mul    DWORD PTR [edi+0x41]
  406d38:	xlat   BYTE PTR ds:[ebx]
  406d39:	dec    ebx
  406d3a:	xchg   esp,eax
  406d3b:	cmp    eax,0x9e649e66
  406d40:	out    0xc1,eax
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x5c6a0603]
  406db5:	mov    WORD PTR [edi],?
  406db7:	mov    esi,0x18188b0a
  406dbc:	sahf   
  406dbd:	adc    bl,BYTE PTR [eax]
  406dbf:	sbb    BYTE PTR [eax+0xf],dh
  406dc2:	mov    dh,0xf6
  406dc4:	outs   dx,BYTE PTR ds:[esi]
  406dc5:	dec    esp
  406dc6:	(bad)  
  406dc7:	mov    ebx,0xc776fd07
  406dcc:	inc    eax
  406dcd:	xor    WORD PTR [ebp+edx*4+0x13796ec3],bp
  406dd5:	pop    ebp
  406dd6:	jle    0x406dfe
  406dd8:	push   0x101d7663
  406ddd:	inc    ebx
  406dde:	mov    ds:0x830d3f30,eax
  406de3:	(bad)  
  406de5:	mov    esi,DWORD PTR [eax+0x32883372]
  406deb:	add    edx,DWORD PTR [ebx+0x76]
  406dee:	(bad)  
  406def:	scas   al,BYTE PTR es:[edi]
  406df0:	push   0xe04ac659
  406df5:	into   
  406df6:	lock jbe 0x406dbf
  406df9:	clc    
  406dfa:	or     esp,DWORD PTR [edx]
  406dfc:	ret    0x5ada
  406dff:	nop
  406e00:	cld    
  406e01:	call   DWORD PTR [eax-0x5713ada1]
  406e07:	sahf   
  406e08:	push   edi
  406e09:	adc    bl,al
  406e0b:	inc    bp
  406e0d:	sbb    al,0x18
  406e0f:	std    
  406e10:	ins    DWORD PTR es:[edi],dx
  406e11:	mov    cl,0xf1
  406e13:	pop    edi
  406e14:	xchg   ebx,eax
  406e15:	dec    edx
  406e16:	call   0xbc8d9c46
  406e1b:	mov    esp,DWORD PTR [edi-0x54]
  406e1e:	retf   0xafd
  406e21:	fwait
  406e22:	and    BYTE PTR [ecx],ah
  406e24:	call   0x114b6234
  406e29:	mov    ebp,0xca98b0ff
  406e2e:	or     bl,dl
  406e30:	jne    0x406de0
  406e32:	jbe    0x406db7
  406e34:	aaa    
  406e35:	sub    al,0xf4
  406e37:	shl    DWORD PTR cs:[eax-0x4f2629c2],cl
  406e3e:	(bad)  
  406e3f:	daa    
  406e40:	repnz adc DWORD PTR [esi+0x29c46c16],0x299e6eaa
  406e4b:	cwde   
  406e4c:	jbe    0x406e0b
  406e4e:	outs   dx,BYTE PTR ds:[esi]
  406e4f:	mov    ch,0x69
  406e51:	mov    eax,ds:0x24c89cdb
  406e56:	pop    es
  406e57:	pop    esp
  406e58:	(bad)  [eax+esi*1+0x58bf83c5]
  406e5f:	add    ebp,ecx
  406e61:	rol    BYTE PTR ds:0x800b930c,1
  406e67:	fstp   TBYTE PTR [esi]
  406e69:	cmc    
  406e6a:	or     eax,0x66bf062b
  406e6f:	popa   
  406e70:	mov    edi,0x213e6316
  406e75:	pop    esp
  406e76:	adc    esp,ecx
  406e78:	add    BYTE PTR [ebx+0x5d3f544],bh
  406e7e:	cmc    
  406e7f:	mov    bl,0x6e
  406e81:	fdivr  st,st(6)
  406e83:	jno    0x406ea2
  406e85:	cmp    ecx,ebx
  406e87:	sahf   
  406e88:	sbb    eax,0xdbfc67c1
  406e8d:	shr    ch,cl
  406e8f:	pop    ebp
  406e90:	and    al,0x63
  406e92:	test   BYTE PTR ds:0x6830b1d0,0x9e
  406e99:	outs   dx,DWORD PTR ds:[esi]
  406e9a:	sbb    BYTE PTR [eax+edx*2-0x342265cb],cl
  406ea1:	dec    esp
  406ea2:	lods   eax,DWORD PTR ds:[esi]
  406ea3:	repz cmp eax,0x581ad168
  406ea9:	lahf   
  406eaa:	and    eax,0x8b60d2d5
  406eaf:	mov    eax,0x709a9097
  406eb4:	sbb    DWORD PTR ds:0xee935fd4,eax
  406eba:	mov    ds:0x8a59e9d2,al
  406ebf:	out    0x55,eax
  406ec1:	in     al,0xc2
  406ec3:	fldcw  WORD PTR [ecx]
  406ec5:	repz ret 0x5602
  406ec9:	jmp    0x3927:0x62b2dc6
  406ed0:	je     0x406f3d
  406ed2:	pop    ss
  406ed3:	leave  
  406ed4:	xchg   BYTE PTR [ecx],ch
  406ed6:	sbb    cl,al
  406ed8:	inc    DWORD PTR [esi-0x7f08bbb]
  406ede:	xlat   BYTE PTR ds:[ebx]
  406edf:	mov    cl,0x27
  406ee1:	add    al,cl
  406ee3:	lods   eax,DWORD PTR ds:[esi]
  406ee4:	cli    
  406ee5:	loop   0x406e76
  406ee7:	xor    DWORD PTR [edx+0x19573550],eax
  406eed:	es jecxz 0x406e97
  406ef0:	in     eax,dx
  406ef1:	push   cs
  406ef2:	shr    BYTE PTR [eax-0x7c],cl
  406ef5:	aad    0xbe
  406ef7:	stos   DWORD PTR es:[edi],eax
  406ef8:	lods   al,BYTE PTR ds:[esi]
  406ef9:	aam    0xa0
  406efb:	pop    edi
  406efc:	mov    al,ds:0xe0b7bd86
  406f01:	ins    DWORD PTR es:[edi],dx
  406f02:	sub    al,0x49
  406f04:	rcl    DWORD PTR [esi+ecx*2+0x48],0xf2
  406f09:	hlt    
  406f0a:	outs   dx,DWORD PTR ds:[esi]
  406f0b:	or     DWORD PTR [eax+0x4e],edi
  406f0e:	sbb    edi,DWORD PTR [edi+0x434fe418]
  406f14:	adc    esi,DWORD PTR [ecx]
  406f16:	test   al,0x7d
  406f18:	mov    dl,0x27
  406f1a:	pop    ecx
  406f1b:	or     al,0xb8
  406f1d:	leave  
  406f1e:	sub    DWORD PTR [ebp-0x7bc95049],esp
  406f24:	lahf   
  406f25:	jns    0x406f43
  406f27:	adc    edx,eax
  406f29:	mov    al,ds:0x74f3c464
  406f2e:	outs   dx,DWORD PTR ds:[esi]
  406f2f:	sbb    al,0xf9
  406f31:	and    BYTE PTR [ebx],ch
  406f33:	jp     0x406f33
  406f35:	je     0x406f71
  406f37:	mov    ch,0x31
  406f39:	inc    ebx
  406f3a:	pushf  
  406f3b:	xor    ebp,esi
  406f3d:	mov    ebx,0x6b3d15b
  406f42:	mov    ds:0xc93b6af4,al
  406f47:	(bad)  
  406f48:	cmp    bh,bl
  406f4a:	test   DWORD PTR [ebx],ecx
  406f4c:	dec    edi
  406f4d:	repnz ins BYTE PTR es:[edi],dx
  406f4f:	idiv   DWORD PTR [ecx]
  406f51:	retf   
  406f52:	mov    ebx,0xde6a4f32
  406f57:	repnz and BYTE PTR [edx+0x74],al
  406f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5c:	fld    DWORD PTR [eax+0x56]
  406f5f:	into   
  406f60:	mov    dl,0xd9
  406f62:	cmp    eax,0x3bf9f1f
  406f67:	jg     0x406f90
  406f69:	add    esp,DWORD PTR [edi-0x2b]
  406f6c:	xchg   esi,eax
  406f6d:	call   0x1036:0x67a1de0e
  406f74:	jbe    0x406f01
  406f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f77:	jnp    0x406fe1
  406f79:	das    
  406f7a:	cmp    DWORD PTR es:[edx-0x7560f9e2],edx
  406f81:	xchg   edi,eax
  406f82:	cld    
  406f83:	out    0xcf,eax
  406f85:	jmp    0x406f40
  406f87:	push   eax
  406f88:	push   0xffffffd4
  406f8a:	jmp    0x90ec43de
  406f8f:	in     al,dx
  406f90:	mov    cs,WORD PTR [eax]
  406f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f93:	xlat   BYTE PTR ds:[ebx]
  406f94:	je     0x406fa4
  406f96:	fstp   QWORD PTR [ebp-0x55a9de4d]
  406f9c:	je     0x406fb1
  406f9e:	aas    
  406f9f:	clc    
  406fa0:	test   esi,edx
  406fa2:	test   eax,0x8f8a45c0
  406fa7:	sub    dl,BYTE PTR [edx+ebp*2]
  406faa:	dec    esi
  406fab:	das    
  406fac:	rcl    edi,1
  406fae:	xchg   eax,eax
  406fb0:	or     edx,DWORD PTR [ecx+0x7d028870]
  406fb6:	outs   dx,BYTE PTR ds:[esi]
  406fb7:	pusha  
  406fb8:	cmp    al,0xba
  406fba:	fimul  WORD PTR [edx-0x6c78a609]
  406fc0:	sar    DWORD PTR [ecx+0x103ef7ad],0x73
  406fc7:	leave  
  406fc8:	mov    esi,0x4fe41d41
  406fcd:	jns    0x406f9d
  406fcf:	adc    al,0x9a
  406fd1:	enter  0xb1e4,0x5b
  406fd5:	jb     0x406fb5
  406fd7:	fstp   TBYTE PTR [edx]
  406fd9:	cmp    al,BYTE PTR [edx+0xc]
  406fdc:	ja     0x407046
  406fde:	out    0xb0,al
  406fe0:	push   esp
  406fe1:	stc    
  406fe2:	aas    
  406fe3:	jnp    0x406ff6
  406fe5:	mov    bl,0x48
  406fe7:	aaa    
  406fe8:	jmp    0x1b8a:0x5fee785b
  406fef:	or     eax,ebx
  406ff1:	rol    DWORD PTR [esi+0x404cac6b],0xce
  406ff8:	or     bh,dh
  406ffa:	femms  
  406ffc:	popa   
  406ffd:	jo     0x407004
  406fff:	jmp    0x61af14de
  407004:	in     eax,dx
  407005:	outs   dx,BYTE PTR ds:[esi]
  407006:	mov    DWORD PTR [ecx+0x38],edx
  407009:	lahf   
  40700a:	jecxz  0x40704e
  40700c:	(bad)  
  40700d:	inc    ecx
  40700e:	inc    esi
  40700f:	aam    0xf2
  407011:	aam    0xd4
  407013:	push   ss
  407014:	pop    esi
  407015:	fild   QWORD PTR [eax+0xb452df8]
  40701b:	loop   0x406fad
  40701d:	mov    bl,0x30
  40701f:	inc    esi
  407020:	mov    dl,0x44
  407022:	ficom  DWORD PTR [ebx]
  407024:	jnp    0x407065
  407026:	pop    edi
  407027:	xchg   edi,eax
  407029:	inc    esi
  40702a:	dec    esp
  40702b:	fwait
  40702c:	mov    dl,0xaa
  40702e:	adc    eax,0x1a6b8b26
  407033:	mov    eax,0x5bce39c6
  407038:	adc    al,cl
  40703a:	mov    bh,dh
  40703c:	sbb    eax,0x3bdcf2a4
  407041:	xor    edi,edi
  407043:	enter  0x6f9a,0xe5
  407047:	popf   
  407048:	ds popf 
  40704a:	sbb    ebp,DWORD PTR [ebp+0x33]
  40704d:	fstp   QWORD PTR [edx+0x287ffaf6]
  407053:	mov    fs,WORD PTR [ecx+edi*4]
  407056:	fstp   TBYTE PTR [ebx+0x3dd71a37]
  40705c:	rcl    DWORD PTR [eax],0xf4
  40705f:	sub    BYTE PTR [ebp+edi*4-0x6c],ch
  407063:	pop    es
  407064:	dec    eax
  407065:	cmp    bl,BYTE PTR [esi+edx*8-0x66caf36]
  40706c:	fbstp  TBYTE PTR ds:0x156dfa49
  407072:	xlat   BYTE PTR ds:[ebx]
  407073:	jne    0x407016
  407075:	fsubr  st,st(2)
  407077:	test   eax,0x8db16628
  40707c:	mov    edi,0xe2fbe6b8
  407081:	repz sub BYTE PTR [edi+0x62],al
  407085:	pusha  
  407086:	fsubr  DWORD PTR [ebx+0x9b3671a]
  40708c:	xlat   BYTE PTR ds:[ebx]
  40708d:	aas    
  40708e:	(bad)  
  40708f:	lahf   
  407090:	push   cs
  407091:	add    esi,esp
  407093:	das    
  407094:	xor    bh,bl
  407096:	push   ebx
  407097:	jg     0x407095
  407099:	cdq    
  40709a:	and    al,0xb2
  40709c:	jbe    0x4070a8
  40709e:	xor    BYTE PTR [ecx+0x6c],ch
  4070a1:	mov    ebx,0x2ecbe37f
  4070a6:	xor    eax,0x5fa8918c
  4070ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ac:	inc    esp
  4070ad:	mov    al,0xdc
  4070af:	icebp  
  4070b0:	sub    BYTE PTR [ecx+0x37ac0266],dh
  4070b6:	lock push esi
  4070b8:	dec    edx
  4070b9:	add    eax,0x80042e8f
  4070be:	xor    ch,BYTE PTR [eax-0x61f0169a]
  4070c4:	lods   eax,DWORD PTR ds:[esi]
  4070c5:	inc    ecx
  4070c6:	outs   dx,DWORD PTR ds:[esi]
  4070c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070c8:	xchg   ebp,eax
  4070c9:	jle    0x4070a8
  4070cb:	sar    edx,cl
  4070cd:	in     al,0x81
  4070cf:	xchg   ecx,eax
  4070d0:	jle    0x407056
  4070d2:	pop    ebp
  4070d3:	jns    0x407106
  4070d5:	neg    DWORD PTR [edi]
  4070d7:	xchg   BYTE PTR [edi],bl
  4070d9:	data16 and bh,BYTE PTR [edx]
  4070dc:	xor    dh,BYTE PTR [ebp+0x5e]
  4070df:	ds and cl,dh
  4070e2:	pusha  
  4070e3:	xchg   edi,eax
  4070e4:	jnp    0x407098
  4070e6:	inc    esi
  4070e7:	inc    edx
  4070e8:	inc    edi
  4070e9:	mov    esp,0x850257d7
  4070ee:	sti    
  4070ef:	pop    esi
  4070f0:	(bad)  
  4070f1:	pushf  
  4070f2:	mov    bl,0xa8
  4070f4:	inc    esp
  4070f5:	popf   
  4070f6:	push   0x62a48a0
  4070fb:	inc    ecx
  4070fc:	sbb    DWORD PTR [edi+0x11cadcc3],edx
  407102:	aad    0x3a
  407104:	or     bh,BYTE PTR [ebp+0x1fb9c9c1]
  40710a:	inc    esi
  40710b:	xchg   esi,eax
  40710c:	push   edx
  40710d:	aas    
  40710e:	pushf  
  40710f:	int    0x28
  407111:	jl     0x407153
  407113:	push   esp
  407114:	daa    
  407115:	push   0xe41f2ce3
  40711a:	lock test edx,edi
  40711d:	inc    edx
  40711e:	into   
  40711f:	sbb    al,0xcc
  407121:	sub    al,0x30
  407123:	je     0x407122
  407125:	cdq    
  407126:	or     cl,bh
  407128:	shl    DWORD PTR [ebx],1
  40712a:	mov    bl,BYTE PTR [eax]
  40712c:	add    eax,0xa46362f
  407131:	xor    BYTE PTR [ebx-0x62],dh
  407134:	xor    eax,0x5021d766
  407139:	xchg   DWORD PTR [ebx+0x640599f8],edx
  40713f:	mov    DWORD PTR [ebx],ebp
  407141:	std    
  407142:	not    eax
  407144:	inc    esi
  407145:	lods   al,BYTE PTR ds:[esi]
  407146:	xor    esp,DWORD PTR [ebx]
  407148:	ins    DWORD PTR es:[edi],dx
  407149:	fdivr  QWORD PTR [eax+0x118ee3c6]
  40714f:	dec    edx
  407150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407151:	stc    
  407152:	sbb    cl,BYTE PTR [ebp-0x22bf2297]
  407158:	xchg   DWORD PTR [edi+0x31bdab42],esp
  40715e:	out    0xfe,eax
  407160:	jbe    0x40716e
  407162:	pop    ecx
  407163:	adc    al,0xb2
  407165:	popf   
  407166:	ret    
  407167:	jno    0x4071ba
  407169:	ret    
  40716a:	adc    DWORD PTR [edi],ebp
  40716c:	test   al,0x59
  40716e:	pop    edi
  40716f:	pop    ss
  407170:	test   BYTE PTR [edx],cl
  407172:	xor    BYTE PTR [edi],0xed
  407175:	dec    ebp
  407176:	rol    BYTE PTR [edx],1
  407178:	push   esi
  407179:	std    
  40717a:	aaa    
  40717b:	cmp    ch,BYTE PTR [eax+ebx*1]
  40717e:	push   es
  40717f:	ror    ecx,0x8b
  407182:	enter  0xac0f,0xd1
  407186:	add    al,cl
  407188:	loopne 0x4071a8
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	xchg   esp,eax
  4071c5:	jo     0x4071b3
  4071c7:	mov    esi,0x18188590
  4071cc:	sahf   
  4071cd:	adc    bl,BYTE PTR [eax]
  4071cf:	sbb    al,dl
  4071d1:	jle    0x407232
  4071d3:	clc    
  4071d4:	ret    
  4071d5:	sbb    al,ch
  4071d7:	loopne 0x407174
  4071d9:	sbb    eax,0x11c8c0d1
  4071de:	push   edi
  4071df:	popa   
  4071e0:	mov    dl,0x86
  4071e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071e3:	mul    ecx
  4071e5:	adc    al,0x67
  4071e7:	mov    ds:0x809149b4,al
  4071ec:	popf   
  4071ed:	pop    es
  4071ee:	nop
  4071ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f0:	pushf  
  4071f1:	and    eax,0xb9417696
  4071f6:	rol    DWORD PTR [ebx],cl
  4071f8:	jb     0x40720a
  4071fa:	bnd jle 0x407268
  4071fd:	pop    esp
  4071fe:	adc    eax,0xbbdce41e
  407203:	jle    0x4071a7
  407205:	push   es
  407206:	adc    dl,BYTE PTR [ecx-0x21]
  407209:	mov    ebx,0x6760d893
  40720e:	loope  0x407274
  407210:	outs   dx,BYTE PTR ds:[esi]
  407211:	xchg   DWORD PTR [esi+edi*2+0x313ceebf],ebp
  407218:	test   ah,bl
  40721a:	adc    ebx,DWORD PTR [ecx+0x4a]
  40721d:	test   DWORD PTR [eax],eax
  40721f:	jecxz  0x40721e
  407221:	lods   al,BYTE PTR ds:[esi]
  407222:	sbb    DWORD PTR [ecx-0x73c168ac],0xffffff9c
  407229:	mov    ebp,0x8f898e9e
  40722e:	cmc    
  40722f:	sub    ebp,DWORD PTR [ebp-0x180a8b6e]
  407235:	(bad)  [edx-0x20]
  407238:	cdq    
  407239:	add    eax,0x9d0bd4cf
  40723e:	add    al,0x55
  407240:	lods   al,BYTE PTR ds:[esi]
  407241:	hlt    
  407242:	xor    ebx,DWORD PTR [esi+ebp*2]
  407245:	mov    bh,0xac
  407247:	stos   BYTE PTR es:[edi],al
  407248:	add    edi,DWORD PTR [ecx]
  40724a:	xchg   BYTE PTR [ebx+0x2e8ccad8],dh
  407250:	xor    BYTE PTR [edx],bh
  407252:	jno    0x40724d
  407254:	mov    bl,0xc4
  407256:	dec    eax
  407257:	loopne 0x407222
  407259:	bound  esi,QWORD PTR [ebx+0x2d9e23d7]
  40725f:	cdq    
  407260:	mov    WORD PTR [ebx-0x66847622],fs
  407266:	fld    DWORD PTR [ecx+0x687dcc6c]
  40726c:	cmp    ebx,DWORD PTR [esi-0x4d8bb0d6]
  407272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407273:	std    
  407274:	loop   0x40722c
  407276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407277:	mov    ds:0x4ecda98,eax
  40727c:	pop    esp
  40727d:	cmp    dh,0x37
  407280:	jge    0x407265
  407282:	cmp    esi,DWORD PTR [eax]
  407284:	mov    DWORD PTR [ebx+ebp*8+0x2097779b],esi
  40728b:	jl     0x4072ad
  40728d:	push   cs
  40728e:	jne    0x407302
  407290:	loopne 0x40722c
  407292:	fistp  QWORD PTR [ecx+0x63e4652c]
  407298:	jo     0x4072f5
  40729a:	xor    DWORD PTR [si+0x67f7],eax
  40729f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072a0:	inc    edx
  4072a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072a2:	(bad)  
  4072a3:	scas   al,BYTE PTR es:[edi]
  4072a4:	adc    BYTE PTR [ecx+0x48],0x71
  4072a8:	jmp    0x9029eb62
  4072ad:	add    al,0xb
  4072af:	dec    edx
  4072b0:	stos   DWORD PTR es:[edi],eax
  4072b1:	adc    DWORD PTR [eax],ecx
  4072b3:	mov    ds:0xa0496e22,eax
  4072b8:	pop    edi
  4072b9:	repz pop esi
  4072bb:	mov    ecx,0x29440ef
  4072c0:	stos   DWORD PTR es:[edi],eax
  4072c1:	mov    al,ds:0x6a20cfb
  4072c6:	ror    eax,1
  4072c8:	sbb    DWORD PTR [ecx+0x5],0xffffffa1
  4072cc:	stos   DWORD PTR es:[edi],eax
  4072cd:	pop    ebp
  4072ce:	jmp    0xab01:0xa2b55b06
  4072d5:	out    0xed,eax
  4072d7:	jecxz  0x4072a9
  4072d9:	dec    edi
  4072da:	lds    edx,FWORD PTR [edx]
  4072dc:	jg     0x4072dc
  4072de:	xor    DWORD PTR [ecx+0x228b3ba5],ecx
  4072e4:	sub    dl,BYTE PTR [ecx+0x1df969e1]
  4072ea:	inc    esi
  4072eb:	sar    ah,1
  4072ed:	inc    ecx
  4072ee:	jmp    0xe2920073
  4072f3:	xlat   BYTE PTR ds:[ebx]
  4072f4:	mul    eax
  4072f6:	or     al,0x3e
  4072f8:	mov    bl,0xec
  4072fa:	fs icebp 
  4072fc:	(bad)  
  4072fd:	mov    dh,0x57
  4072ff:	push   ebx
  407300:	mov    dl,0xe5
  407302:	mov    BYTE PTR [ecx+edi*8],cl
  407305:	sbb    eax,0xc2fa1291
  40730a:	call   0x4b3a:0xe4c3b6a7
  407311:	dec    edx
  407312:	dec    esi
  407313:	push   eax
  407314:	mov    bl,0x53
  407317:	inc    edx
  407318:	add    DWORD PTR [esi-0x76],eax
  40731b:	push   ebx
  40731c:	scas   eax,DWORD PTR es:[edi]
  40731d:	adc    bh,BYTE PTR [ebx+0x38]
  407320:	repz adc ebx,esi
  407323:	cs shl DWORD PTR gs:[eax],0xb6
  407328:	gs call 0x420c:0x17a77d02
  407330:	dec    esp
  407331:	lock cs mov esi,ecx
  407335:	mov    ebx,0x603daabb
  40733a:	mov    edi,0xfdee7bab
  40733f:	mov    ecx,0x847939b7
  407344:	push   edx
  407345:	pand   mm0,QWORD PTR [ecx]
  407348:	les    edx,FWORD PTR [edx-0x10ac00b2]
  40734e:	push   ecx
  40734f:	test   al,0xaf
  407351:	call   DWORD PTR [eax]
  407353:	jb     0x4072de
  407355:	mov    bl,0xb5
  407357:	in     eax,0xf7
  407359:	jns    0x4072fb
  40735b:	sbb    eax,0x564d891
  407360:	stc    
  407361:	xchg   edi,eax
  407362:	cs pop edx
  407364:	out    0x3,al
  407366:	fwait
  407367:	pop    edx
  407368:	mov    ?,WORD PTR [eax+eiz*8-0x4e]
  40736c:	call   ebp
  40736e:	and    bh,dh
  407370:	fs inc eax
  407372:	dec    edi
  407373:	pop    ds
  407374:	xor    al,0xb2
  407376:	pop    ds
  407377:	popa   
  407378:	push   edi
  407379:	sti    
  40737a:	mov    WORD PTR [ebx-0x648aaf39],fs
  407380:	xor    eax,DWORD PTR ds:0x3e23c122
  407386:	jl     0x40730e
  407388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407389:	in     al,dx
  40738a:	inc    edi
  40738b:	mov    esp,0x4736d998
  407390:	out    0x2e,eax
  407392:	mov    ecx,0x47469b88
  407397:	or     DWORD PTR [esi],eax
  407399:	and    edi,DWORD PTR [eax-0x4b5fe63c]
  40739f:	loop   0x407371
  4073a1:	mov    ds:0x1a8e123,al
  4073a6:	les    esp,FWORD PTR [esi-0x67afea41]
  4073ac:	mov    dh,0xd5
  4073ae:	xor    edx,DWORD PTR [edi-0x39ed8391]
  4073b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073b5:	(bad)  
  4073b6:	outs   dx,DWORD PTR ds:[esi]
  4073b7:	push   es
  4073b8:	arpl   WORD PTR [ebx+0x11],ax
  4073bb:	fwait
  4073bc:	or     ecx,DWORD PTR [ebp-0x23c926cd]
  4073c2:	in     al,dx
  4073c3:	ds retf 
  4073c5:	dec    esi
  4073c6:	inc    ebx
  4073c7:	cmp    BYTE PTR [ebp+0x67],ch
  4073ca:	arpl   di,bp
  4073cc:	gs popf 
  4073ce:	or     eax,0xeb2a893c
  4073d3:	data16 lahf 
  4073d5:	daa    
  4073d6:	cmp    ch,al
  4073d8:	fs adc al,0xce
  4073db:	xor    DWORD PTR [ebp-0x58],eax
  4073de:	mov    dh,0x30
  4073e0:	stos   DWORD PTR es:[edi],eax
  4073e1:	je     0x407378
  4073e3:	fbstp  TBYTE PTR [eax-0x4e]
  4073e6:	repz cmp dh,BYTE PTR [eax-0x1a8a66b5]
  4073ed:	xchg   edi,eax
  4073ee:	or     al,BYTE PTR [ecx]
  4073f0:	(bad)  
  4073f1:	repz jp 0x77e1cb08
  4073f8:	push   esp
  4073f9:	push   0xc929bd27
  4073fe:	jl     0x407420
  407400:	hlt    
  407401:	mov    esi,0x59a6615c
  407406:	jmp    0x37240c64
  40740b:	ss into 
  40740d:	mov    eax,0xa7a444d3
  407412:	pop    ebp
  407413:	jl     0x4073ee
  407415:	cmp    eax,0x343f9255
  40741a:	sbb    DWORD PTR [edi+edi*8+0x61],esi
  40741e:	ror    BYTE PTR [esi-0x57],0x55
  407422:	mov    bh,BYTE PTR [esi-0x6c]
  407425:	ret    0xdbcb
  407428:	inc    eax
  407429:	ss popa 
  40742b:	retf   
  40742c:	and    BYTE PTR [ebp+0xe74da97],0x2b
  407433:	or     ebx,DWORD PTR [eax+eax*8-0x406dcafd]
  40743a:	imul   edx,ebp,0x5a317917
  407440:	ja     0x40742f
  407442:	shr    DWORD PTR [edx],0x4b
  407445:	mov    esp,0xcea8e8d2
  40744a:	or     ebp,DWORD PTR [ebp+0x2d]
  40744d:	xchg   ebp,eax
  40744e:	in     eax,dx
  40744f:	adc    DWORD PTR [edx],ebx
  407451:	(bad)  
  407452:	mov    ch,0xee
  407454:	mov    dl,0x9
  407456:	in     al,0xd5
  407458:	add    al,0x68
  40745a:	xor    DWORD PTR [edi+0x30],ebp
  40745d:	sub    ebp,ebp
  40745f:	inc    eax
  407460:	mov    al,ds:0x7374980f
  407465:	int3   
  407466:	out    dx,al
  407467:	or     bh,BYTE PTR [eax+0xf]
  40746a:	cmp    eax,0xd7d39583
  40746f:	sbb    bh,0x8
  407472:	out    dx,al
  407473:	loope  0x4074a7
  407475:	jae    0x4074e8
  407477:	pop    edx
  407478:	mov    ds:0x8001b82f,al
  40747d:	push   ebx
  40747e:	mov    esp,0x6dc153e3
  407483:	inc    ecx
  407484:	fs fcmovnbe st,st(2)
  407487:	or     dh,dh
  407489:	(bad)  
  40748a:	jl     0x4074ee
  40748c:	sbb    ebx,edx
  40748e:	stc    
  40748f:	popf   
  407490:	cld    
  407491:	or     al,0xd6
  407493:	addr16 sysenter 
  407496:	inc    eax
  407497:	sahf   
  407498:	jae    0x4074fe
  40749a:	popa   
  40749b:	xor    BYTE PTR [ebx-0x50],0xe7
  40749f:	xlat   BYTE PTR ds:[ebx]
  4074a0:	sar    dl,0xe2
  4074a3:	add    ecx,ebp
  4074a5:	xor    eax,0x224abe79
  4074aa:	icebp  
  4074ab:	xchg   ebp,eax
  4074ac:	jecxz  0x40748b
  4074ae:	fcom   DWORD PTR [edx-0x16]
  4074b1:	gs mov al,0x2b
  4074b4:	add    ebx,DWORD PTR ds:0x64d568d7
  4074ba:	clc    
  4074bb:	add    BYTE PTR [ecx+0x2b],ah
  4074be:	jns    0x407497
  4074c0:	mov    ebx,ds
  4074c2:	(bad)  
  4074c3:	ror    BYTE PTR [ebx+ecx*4],cl
  4074c6:	sbb    DWORD PTR [ebx-0x61],esi
  4074c9:	push   ss
  4074ca:	mov    es,WORD PTR [ebp+0x766edecb]
  4074d0:	mov    bh,0x6d
  4074d2:	inc    esi
  4074d3:	xchg   ebx,eax
  4074d4:	jmp    0xb27b:0x9ff157f7
  4074db:	or     BYTE PTR [edi],bl
  4074dd:	ins    DWORD PTR es:[edi],dx
  4074de:	popa   
  4074df:	push   cs
  4074e0:	and    al,0x75
  4074e2:	or     al,0x3f
  4074e4:	xchg   edi,eax
  4074e5:	mov    ah,0xac
  4074e7:	sub    DWORD PTR [esi+edi*4-0x40a3c074],edx
  4074ee:	xchg   BYTE PTR [ecx-0x4ddc70df],dh
  4074f4:	and    edx,ebp
  4074f6:	pop    ds
  4074f7:	(bad)  
  4074f8:	mov    edx,0x9b29354b
  4074fd:	aad    0x53
  4074ff:	fnstsw WORD PTR [ecx+edx*2+0x641736c0]
  407506:	repz mov ?,eax
  407509:	les    ecx,FWORD PTR [ebx+0x22]
  40750c:	inc    esi
  40750d:	rol    BYTE PTR [ecx+0x4a],1
  407510:	aam    0xf6
  407512:	(bad)  
  407513:	mov    ch,0x86
  407515:	push   ds
  407516:	xchg   BYTE PTR [esi-0x6cad2d7],dh
  40751c:	and    dl,BYTE PTR [esi+0x1c4bf5d4]
  407522:	jnp    0x4074ab
  407524:	cs mov ebx,0x4dc6adba
  40752a:	dec    esi
  40752b:	xor    BYTE PTR [ecx],ch
  40752d:	cmp    bl,BYTE PTR [esi+0x1f]
  407530:	mov    dh,0x8a
  407532:	push   edi
  407533:	ror    BYTE PTR [ecx],0x89
  407536:	in     al,0x26
  407538:	xchg   edi,eax
  407539:	mov    ecx,0x8c9890fd
  40753e:	sahf   
  40753f:	stos   BYTE PTR es:[edi],al
  407540:	pusha  
  407541:	sub    BYTE PTR [edx+ebx*8-0x5b],cl
  407545:	lea    ebp,[esi-0xa]
  407548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407549:	jo     0x407523
  40754b:	enter  0x1e9e,0x44
  40754f:	push   ecx
  407550:	jns    0x4074f2
  407552:	pushf  
  407553:	jmp    0x4074f3
  407555:	push   esi
  407556:	mov    ?,WORD PTR [edx-0x23ca18ab]
  40755c:	lods   eax,DWORD PTR ds:[esi]
  40755d:	dec    ecx
  40755e:	or     DWORD PTR [ebp-0x73c142cc],edx
  407564:	iret   
  407565:	mov    eax,ds:0xdb03291f
  40756a:	cmp    DWORD PTR [eax],esp
  40756c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40756d:	push   edi
  40756e:	pushf  
  40756f:	out    dx,eax
  407570:	or     ebp,esi
  407572:	rol    dh,1
  407574:	pusha  
  407575:	cmp    cl,bl
  407577:	es lahf 
  407579:	bound  esi,QWORD PTR [ebx]
  40757b:	mov    bh,0x4e
  40757d:	cmp    ah,BYTE PTR gs:[ecx-0x76]
  407581:	pushf  
  407582:	adc    DWORD PTR [eax],esp
  407584:	push   esi
  407585:	dec    esi
  407586:	stos   DWORD PTR es:[edi],eax
  407587:	jno    0x407576
  407589:	xchg   edi,eax
  40758a:	fwait
  40758b:	(bad)  
  40758c:	cmp    DWORD PTR [edi],esi
  40758e:	or     eax,0x4d8bdfd9
  407593:	mov    ah,0xf
  407595:	lods   al,BYTE PTR ds:[esi]
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0xda
  407613:	push   eax
  407614:	sbb    edi,DWORD PTR [esi+0x17]
  407617:	jge    0x407631
  407619:	sbb    BYTE PTR [esi+0x76181812],bl
  40761f:	add    BYTE PTR [esi],ah
  407621:	neg    DWORD PTR [eax+0x7d]
  407624:	lahf   
  407625:	pop    ebp
  407626:	jno    0x4075e8
  407628:	(bad)  
  407629:	sti    
  40762a:	and    al,0xe4
  40762c:	repz mov ebx,0x26d8964a
  407632:	ss dec edx
  407634:	pop    ss
  407635:	adc    eax,0x4f312af5
  40763a:	test   BYTE PTR [ebp-0x7b2f263a],bh
  407640:	daa    
  407641:	add    al,0x66
  407643:	lahf   
  407644:	jmp    0x25ae:0x68b9ec9c
  40764b:	push   cs
  40764c:	mov    ecx,0x16aa714d
  407651:	inc    edx
  407652:	jno    0x40768a
  407654:	retf   0x398c
  407657:	int    0x31
  407659:	mov    al,0x6b
  40765b:	pusha  
  40765c:	out    0x36,eax
  40765e:	icebp  
  40765f:	mov    edx,0xcada0a25
  407664:	pop    ss
  407665:	xor    DWORD PTR [edi],edi
  407667:	cdq    
  407668:	push   esi
  407669:	shl    edx,0x9f
  40766c:	push   edi
  40766d:	jmp    0xa32aee09
  407672:	mov    ebx,0xb0dcb88f
  407677:	xchg   edi,eax
  407678:	(bad)  
  407679:	fiadd  WORD PTR [esi+esi*8]
  40767c:	mov    BYTE PTR [ebp-0x53],al
  40767f:	push   ecx
  407680:	cmp    eax,0x5f3eefaf
  407685:	push   ebx
  407686:	xchg   ecx,eax
  407687:	push   esp
  407688:	retf   
  407689:	sar    ah,cl
  40768b:	cdq    
  40768c:	add    esi,ecx
  40768e:	or     ebx,DWORD PTR [ebx+edx*8]
  407691:	(bad)  
  407692:	mov    ds:0x84178d10,al
  407697:	dec    esi
  407698:	enter  0xb4c0,0xb7
  40769c:	dec    ebx
  40769d:	push   ecx
  40769e:	jbe    0x407625
  4076a0:	clc    
  4076a1:	pop    ds
  4076a2:	aas    
  4076a3:	cmp    eax,0x68eacb67
  4076a8:	fsub   DWORD PTR [ebx]
  4076aa:	test   eax,0x58d30f40
  4076af:	hlt    
  4076b0:	fucomip st,st(7)
  4076b2:	dec    eax
  4076b3:	sbb    BYTE PTR [eax],dh
  4076b5:	or     DWORD PTR [edx],0x17
  4076b8:	mov    bh,0xae
  4076ba:	retf   
  4076bb:	and    al,0x6d
  4076bd:	aas    
  4076be:	out    dx,al
  4076bf:	and    BYTE PTR [ebp+0x747faeb0],bl
  4076c5:	(bad)  
  4076c6:	cmc    
  4076c7:	and    BYTE PTR [edx+0x172c9a1],bl
  4076cd:	jge    0x407668
  4076cf:	jp     0x4076c1
  4076d1:	arpl   WORD PTR [ebx],bx
  4076d3:	sub    ah,BYTE PTR [esi+eiz*2]
  4076d6:	push   cs
  4076d7:	rol    esp,0x99
  4076da:	or     BYTE PTR [edx+0x1b],al
  4076dd:	adc    BYTE PTR [eax+0x67],ch
  4076e0:	lahf   
  4076e1:	rcpps  xmm1,xmm0
  4076e4:	adc    ebp,eax
  4076e6:	xor    al,0xbb
  4076e8:	stc    
  4076e9:	rcl    DWORD PTR ds:0x645a1ece,cl
  4076ef:	int    0xae
  4076f1:	sbb    al,0x4a
  4076f3:	loopne 0x407679
  4076f5:	sub    DWORD PTR ds:[eax],ecx
  4076f8:	mov    ebp,0x6f545236
  4076fd:	outs   dx,BYTE PTR ds:[esi]
  4076fe:	mov    esi,0x9fa40428
  407703:	or     ecx,DWORD PTR [esi-0x1c74ce16]
  407709:	iret   
  40770a:	mov    eax,0x8179e498
  40770f:	ret    0x55a1
  407712:	ja     0x4076b5
  407714:	dec    ebp
  407715:	fcmovbe st,st(3)
  407717:	adc    eax,0xf31084c5
  40771c:	and    al,0xa1
  40771e:	mov    BYTE PTR [edi-0x3],ch
  407721:	sahf   
  407722:	or     eax,0xd5a41ef
  407727:	inc    ebp
  407728:	sbb    ah,dl
  40772a:	jecxz  0x4076cb
  40772c:	sbb    eax,0xacf3c866
  407731:	mov    ebx,0xfd46d3d3
  407736:	pop    es
  407737:	icebp  
  407738:	call   0x5c2278ea
  40773d:	mov    eax,ds:0x53f79624
  407742:	push   DWORD PTR [ecx-0x58fdd585]
  407748:	sub    ebp,eax
  40774a:	add    cl,ch
  40774c:	test   DWORD PTR [ecx+0x69],eax
  40774f:	imul   edx,DWORD PTR [esi+0x77],0x4c
  407753:	and    eax,0x13de7310
  407758:	lahf   
  407759:	push   esp
  40775a:	retf   
  40775b:	adc    al,0xb7
  40775d:	xor    DWORD PTR [ebx+0x7d1d7778],ebx
  407763:	imul   esi
  407765:	cs jnp 0x40779e
  407768:	mov    ecx,0xe820e2fd
  40776d:	jge    0x4077c9
  40776f:	ins    DWORD PTR es:[edi],dx
  407770:	rsqrtps xmm7,xmm3
  407773:	inc    ebx
  407774:	adc    ah,BYTE PTR [esi]
  407776:	pop    edi
  407777:	pop    edi
  407778:	dec    eax
  407779:	loopne 0x4077bb
  40777b:	pop    eax
  40777c:	aas    
  40777d:	pop    ebp
  40777e:	sbb    al,0x6a
  407780:	mov    cl,0x8a
  407782:	or     ch,BYTE PTR [ebp-0x41]
  407785:	dec    esp
  407786:	xlat   BYTE PTR ds:[ebx]
  407787:	nop
  407788:	imul   ebx,DWORD PTR [ebp+ecx*4+0x66],0x48
  40778d:	mov    bl,0x9e
  40778f:	cmp    al,0x7e
  407791:	test   bl,0x4f
  407794:	add    DWORD PTR [ecx-0x3d],ebx
  407797:	and    BYTE PTR [ebp-0x5d],bl
  40779a:	push   ds
  40779b:	mov    dh,BYTE PTR [esp+ecx*2+0x2a3bb251]
  4077a2:	ret    
  4077a3:	inc    edi
  4077a4:	pop    ecx
  4077a5:	jle    0x4077a9
  4077a7:	inc    eax
  4077a8:	pop    ecx
  4077a9:	mov    DWORD PTR [ebx+0x20a3fbb2],esp
  4077af:	pusha  
  4077b0:	inc    ebx
  4077b1:	leave  
  4077b2:	dec    ebp
  4077b3:	gs push ebp
  4077b5:	xchg   DWORD PTR [ebx],ebp
  4077b7:	(bad)
  4077ba:	clc    
  4077bb:	int    0xac
  4077bd:	jbe    0x407793
  4077bf:	sub    eax,0x2b436b6b
  4077c4:	xrelease xchg DWORD PTR [edx+0x60a66361],esi
  4077cb:	or     BYTE PTR [esi+edi*2+0x69874895],bh
  4077d2:	inc    edi
  4077d3:	sbb    ah,bh
  4077d5:	and    al,0xa9
  4077d7:	jge    0x407805
  4077d9:	jns    0x407818
  4077db:	mov    edx,0xd3aeae6e
  4077e0:	pshufw mm2,QWORD PTR [eax+0x5e01aebb],0xea
  4077e8:	call   0x3577:0xe0b09447
  4077ef:	popa   
  4077f0:	cmp    eax,0x956bf734
  4077f5:	ret    0x8ad7
  4077f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f9:	add    eax,0x6335147a
  4077fe:	push   ss
  4077ff:	dec    esi
  407800:	jge    0x407820
  407802:	arpl   WORD PTR [edx+0x571869c4],si
  407808:	xor    bh,BYTE PTR [ecx+0x3c843055]
  40780e:	js     0x4077de
  407810:	clc    
  407811:	mov    eax,0xdd1865c4
  407816:	mov    edi,0x13f4aa67
  40781b:	mov    ah,0x8f
  40781d:	sahf   
  40781e:	les    edx,FWORD PTR [ecx+eiz*8+0x1f40f27e]
  407825:	icebp  
  407826:	cli    
  407827:	jecxz  0x407838
  407829:	push   ecx
  40782a:	jl     0x407857
  40782c:	xchg   BYTE PTR [edi],dl
  40782e:	rcl    DWORD PTR ds:0x608649b,cl
  407834:	mov    ds:0xfd19dd0c,al
  407839:	pusha  
  40783a:	lods   eax,DWORD PTR ds:[esi]
  40783b:	and    al,0x89
  40783d:	xlat   BYTE PTR ds:[ebx]
  40783e:	(bad)
  407841:	or     BYTE PTR [eax],ch
  407843:	add    al,BYTE PTR [eax]
  407845:	ins    DWORD PTR es:[edi],dx
  407846:	in     al,0x2
  407848:	mov    ds:0x701e8e1e,al
  40784d:	xchg   ecx,eax
  40784e:	cmp    al,0x8a
  407850:	or     ebx,ebx
  407852:	out    dx,eax
  407853:	sar    DWORD PTR [ecx],cl
  407855:	in     al,dx
  407856:	xor    dl,BYTE PTR [edx-0x2bf870ce]
  40785c:	ins    BYTE PTR es:[edi],dx
  40785d:	mov    al,0xa1
  40785f:	or     BYTE PTR [edi],dh
  407861:	rol    DWORD PTR [ebx+0x39],0x5c
  407865:	(bad)  
  407866:	outs   dx,BYTE PTR ds:[esi]
  407867:	mov    ebx,0xffa4105f
  40786c:	pop    si
  40786e:	fwait
  40786f:	shl    cl,0x0
  407872:	in     eax,0x36
  407874:	repz mov ds:0x3d182960,al
  40787a:	mov    edi,0x46761ec6
  40787f:	xchg   esp,eax
  407880:	push   edi
  407881:	adc    BYTE PTR [ecx-0x2],cl
  407884:	in     al,0x1a
  407886:	push   ds
  407887:	in     eax,dx
  407888:	mov    es,WORD PTR [esi+0x14]
  40788b:	or     eax,0x9e7eb38f
  407890:	mov    cl,0xe9
  407892:	sbb    ecx,0xffffffdb
  407895:	inc    esp
  407896:	lods   al,BYTE PTR ds:[esi]
  407897:	je     0x4078db
  407899:	(bad)
  40789d:	shl    BYTE PTR ss:[esi+0x38988cf5],cl
  4078a4:	xor    edx,DWORD PTR [ecx-0xd]
  4078a7:	lods   eax,DWORD PTR ds:[esi]
  4078a8:	cmp    eax,0xef0a18d4
  4078ad:	nop
  4078ae:	(bad)  
  4078b0:	xchg   esi,eax
  4078b1:	jecxz  0x40791a
  4078b3:	adc    DWORD PTR [ebx+0x804153e],esp
  4078b9:	xlat   BYTE PTR ds:[ebx]
  4078ba:	pop    ecx
  4078bb:	sar    DWORD PTR [ebx+0x1e],1
  4078be:	(bad)  
  4078bf:	mov    ds,WORD PTR ds:0xefc2844a
  4078c5:	lahf   
  4078c6:	je     0x4078df
  4078c8:	push   esp
  4078c9:	dec    ebx
  4078ca:	jns    0x4078e8
  4078cc:	arpl   WORD PTR [ebx],di
  4078ce:	arpl   WORD PTR [edi],dx
  4078d0:	dec    ebp
  4078d1:	call   0x7e7b:0x8e4ac2c9
  4078d8:	jns    0x4078c6
  4078da:	xchg   esi,eax
  4078db:	pusha  
  4078dc:	push   0x65106fa5
  4078e1:	push   ebp
  4078e2:	cmp    eax,0x2e408013
  4078e7:	mov    bh,0xb2
  4078e9:	mov    BYTE PTR [edi-0x32],dl
  4078ec:	sub    BYTE PTR [eax+0x7059f973],bl
  4078f2:	cli    
  4078f3:	repz jge 0x40794b
  4078f6:	mov    edi,ebp
  4078f8:	pop    edx
  4078f9:	or     eax,0x140dd419
  4078fe:	stos   BYTE PTR es:[edi],al
  4078ff:	jne    0x40794a
  407901:	(bad)  
  407902:	test   al,0xb6
  407904:	es daa 
  407906:	jmp    0x99248fcf
  40790b:	pop    edx
  40790c:	call   0xbb44:0x9d44ff64
  407913:	adc    DWORD PTR [eax+0x5c],eax
  407916:	push   ecx
  407917:	ds adc al,0xbc
  40791a:	pusha  
  40791b:	call   0x9d7d4920
  407920:	mov    al,ds:0xa036027c
  407925:	push   eax
  407926:	call   0x7fa091d5
  40792b:	jae    0x40795c
  40792d:	mov    esp,0x7cce27b9
  407932:	es sbb dl,al
  407935:	(bad)  
  407936:	shr    BYTE PTR [ebp+ebx*2-0x338c2dee],0x81
  40793e:	gs jb  0x4079b9
  407941:	and    DWORD PTR ss:[edi-0x20f4fd41],ebp
  407948:	pop    ebp
  407949:	dec    ebp
  40794a:	or     eax,0x759e16da
  40794f:	mov    al,BYTE PTR [ebx-0x57e6a12d]
  407955:	mov    al,0x1b
  407957:	add    al,0xbf
  407959:	sbb    al,0xd
  40795b:	gs out 0x99,eax
  40795e:	jmp    0x407930
  407960:	shr    al,cl
  407962:	test   al,0x58
  407964:	jmp    0x1e5f:0x4e1d6ac3
  40796b:	loope  0x4079a5
  40796d:	pop    ecx
  40796e:	(bad)  
  40796f:	cmp    bl,BYTE PTR [eax]
  407971:	mov    edi,0xac7c1f82
  407976:	push   0x55690361
  40797b:	sub    eax,0xe6ca4727
  407980:	cld    
  407981:	outs   dx,DWORD PTR ds:[esi]
  407982:	pop    ecx
  407983:	lods   al,BYTE PTR ds:[esi]
  407984:	or     BYTE PTR [eax+0x18],bl
  407987:	xchg   esp,eax
  407988:	jmp    0xd720:0x29308d22
  40798f:	jmp    0x6818d444
  407994:	xor    bl,BYTE PTR [esi+ebp*4]
  407997:	mov    ebp,0x8033acd4
  40799c:	push   edi
  40799d:	not    cl
  40799f:	js     0x4079e4
  4079a1:	lods   al,BYTE PTR ds:[esi]
  4079a2:	mov    ch,0xc6
  4079a4:	add    DWORD PTR [edi+0x4f],ebx
  4079a7:	jo     0x407991
  4079a9:	add    bl,ah
  4079ab:	jg     0x407a0c
  4079ad:	jmp    0x4079d3
  4079af:	adc    BYTE PTR [ebp+0x30106ce8],ah
  4079b5:	repz shl ax,1
  4079b9:	enter  0xa08c,0xde
  4079bd:	dec    esp
  4079be:	cmp    eax,0x4be6a652
  4079c3:	push   ebx
  4079c4:	fnstcw WORD PTR [ebx]
  4079c6:	push   edx
  4079c7:	sub    eax,0x5841cfe6
  4079cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079cd:	inc    edx
  4079ce:	sahf   
  4079cf:	jae    0x4079d5
  4079d1:	mov    ecx,0xc595e490
  4079d6:	into   
  4079d7:	inc    ecx
  4079d8:	clc    
  4079d9:	xchg   ecx,eax
  4079da:	pop    es
  4079db:	(bad)  
  4079dc:	ret    0x1aaa
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407a1c
  4079f4:	pop    ds
  4079f5:	repnz push 0xffffff9d
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x7f181812],bl
  407a00:	inc    edi
  407a01:	sub    DWORD PTR [eax],0x4a
  407a04:	int3   
  407a05:	popf   
  407a06:	dec    edi
  407a07:	mov    dl,0x55
  407a09:	adc    dh,BYTE PTR [eax+eiz*1+0x68]
  407a0d:	sysret 
  407a0f:	outs   dx,BYTE PTR ds:[esi]
  407a10:	sti    
  407a11:	bound  esp,QWORD PTR [ecx-0x299def7c]
  407a17:	jae    0x4079ae
  407a19:	(bad)  
  407a1a:	pop    ebp
  407a1b:	dec    edx
  407a1c:	repz mov cl,0x8d
  407a1f:	mov    bh,0xb9
  407a21:	out    0xfe,eax
  407a23:	add    BYTE PTR [edi+esi*2-0x11fbf7ff],ch
  407a2a:	mov    DWORD PTR [esi-0xeef5543],eax
  407a30:	aad    0xad
  407a32:	jnp    0x407a99
  407a34:	xchg   ebx,eax
  407a35:	and    esp,DWORD PTR [edi-0x2e96036e]
  407a3b:	call   0x89e4:0x44fc0b4f
  407a42:	dec    ebx
  407a43:	dec    edx
  407a44:	xchg   BYTE PTR [eax+0x42eca5ad],ch
  407a4a:	sub    ebp,DWORD PTR [ecx+eiz*1-0x7f]
  407a4e:	mov    al,ds:0xc757a3f4
  407a53:	lods   eax,DWORD PTR ds:[esi]
  407a54:	out    dx,eax
  407a55:	std    
  407a56:	es enter 0x820e,0x60
  407a5b:	pop    esi
  407a5c:	dec    edx
  407a5d:	sbb    al,ah
  407a5f:	nop
  407a60:	out    0xc1,eax
  407a62:	dec    esp
  407a63:	ficomp DWORD PTR [ebx-0x6ec1cefc]
  407a69:	sub    eax,0xf2cb462
  407a6e:	xor    al,0x4c
  407a70:	pop    edi
  407a71:	mov    ch,0x2f
  407a73:	stos   BYTE PTR es:[edi],al
  407a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a75:	jbe    0x407a57
  407a77:	xchg   ecx,eax
  407a78:	ret    
  407a79:	sbb    eax,0x77416141
  407a7e:	shl    ecx,cl
  407a80:	jle    0x407b01
  407a82:	inc    eax
  407a83:	(bad)  
  407a85:	(bad)  
  407a86:	sub    ebx,esi
  407a88:	sub    al,0xc3
  407a8a:	jle    0x407a2b
  407a8c:	mov    ebp,0xaf90fcf4
  407a91:	sub    BYTE PTR [edx+0x6c],cl
  407a94:	aad    0x1e
  407a96:	push   ebx
  407a97:	dec    esi
  407a98:	mov    ebp,0xd3399b9d
  407a9d:	js     0x407b05
  407a9f:	jecxz  0x407aa2
  407aa1:	rcl    esp,cl
  407aa3:	ja     0x407a76
  407aa5:	lahf   
  407aa6:	add    DWORD PTR [eax],esp
  407aa8:	add    DWORD PTR [ebx-0x1d9b1f17],0x1dc4b87a
  407ab2:	jmp    0x5797:0xf8b69cec
  407ab9:	fdivr  QWORD PTR [edi+0x1e]
  407abc:	add    BYTE PTR [edx+0x20418b9],dh
  407ac2:	sub    eax,DWORD PTR [ebp*4-0x138985f]
  407ac9:	or     BYTE PTR [ebx-0x3f],cl
  407acc:	xlat   BYTE PTR ds:[ebx]
  407acd:	stos   DWORD PTR es:[edi],eax
  407ace:	sbb    ecx,ebp
  407ad0:	mov    ds:0x965b5b61,al
  407ad5:	adc    DWORD PTR [ebp+0x64],ebx
  407ad8:	enter  0x9500,0xca
  407adc:	jg     0x407af7
  407ade:	inc    ecx
  407adf:	stos   DWORD PTR es:[edi],eax
  407ae0:	pop    eax
  407ae1:	pop    ds
  407ae2:	and    esp,DWORD PTR [eax]
  407ae4:	ins    BYTE PTR es:[edi],dx
  407ae5:	shl    DWORD PTR [edx-0x13],0x2c
  407ae9:	sbb    DWORD PTR [ecx+0x2d8974d5],0x2a
  407af0:	lods   al,BYTE PTR ds:[esi]
  407af1:	or     bl,bh
  407af3:	xchg   edi,eax
  407af4:	retf   
  407af5:	loop   0x407b57
  407af7:	xor    edx,DWORD PTR [esi+0x2cee2aa9]
  407afd:	mov    ?,WORD PTR [ebp+0x49ef4d8e]
  407b03:	jbe    0x407aff
  407b05:	xchg   esp,eax
  407b06:	mov    bl,0x7c
  407b08:	fldenv [ecx-0x1d]
  407b0b:	mov    ch,BYTE PTR [esi-0x31898ce4]
  407b11:	sub    DWORD PTR [edi],edi
  407b13:	hlt    
  407b14:	sbb    al,0x7b
  407b16:	xchg   ecx,eax
  407b17:	arpl   WORD PTR [ebx-0x57],bx
  407b1a:	adc    eax,0x11182b8a
  407b1f:	push   ds
  407b20:	lea    esi,[ebx+0x63]
  407b23:	into   
  407b24:	icebp  
  407b25:	sub    eax,0x59e546c4
  407b2a:	cmc    
  407b2b:	mov    al,ds:0xd5bf4117
  407b30:	xchg   ebp,eax
  407b31:	(bad)  
  407b32:	js     0x407b2e
  407b34:	(bad)  
  407b35:	arpl   WORD PTR [edx],bp
  407b37:	dec    edi
  407b38:	mov    al,ds:0xa317a945
  407b3d:	inc    ebp
  407b3e:	xchg   edx,eax
  407b3f:	in     eax,0xed
  407b41:	xor    esp,edx
  407b43:	xchg   ecx,eax
  407b44:	pop    eax
  407b45:	sub    edx,DWORD PTR ds:0xf0a99618
  407b4b:	stos   DWORD PTR es:[edi],eax
  407b4c:	fidivr WORD PTR [edi-0x470e303]
  407b52:	mov    ebp,0xebff85ec
  407b57:	mov    BYTE PTR ds:0x36062e7c,dl
  407b5d:	mov    ds:0xa6d8c9ab,al
  407b62:	mov    eax,ds:0x9645c2de
  407b67:	xor    BYTE PTR [ecx-0x80],dl
  407b6a:	mov    ds:0x32f2a107,eax
  407b6f:	lods   eax,DWORD PTR ds:[esi]
  407b70:	xchg   ebp,eax
  407b71:	test   DWORD PTR [ecx-0xb5821de],esp
  407b77:	test   al,0x2e
  407b79:	mov    esi,0xd8dee839
  407b7e:	jge    0x407b72
  407b80:	sub    al,0x81
  407b82:	jnp    0x407be9
  407b84:	lahf   
  407b85:	push   edx
  407b86:	pop    eax
  407b87:	xchg   edx,eax
  407b88:	idiv   BYTE PTR [edi+eax*2]
  407b8b:	aaa    
  407b8c:	cli    
  407b8d:	neg    DWORD PTR [edi-0x62]
  407b90:	or     al,0xfe
  407b92:	enter  0x4247,0xc9
  407b96:	push   ecx
  407b97:	cwde   
  407b98:	and    al,0x41
  407b9a:	xchg   esi,eax
  407b9b:	dec    ebp
  407b9c:	adc    eax,0x257f14b0
  407ba1:	mov    ds,WORD PTR [esi]
  407ba3:	mov    ch,0xad
  407ba5:	cmp    al,0xc9
  407ba7:	pop    ebp
  407ba8:	push   esp
  407ba9:	sahf   
  407baa:	jae    0x407b4a
  407bac:	inc    esi
  407bad:	xor    BYTE PTR [edi+0x78],ch
  407bb0:	test   eax,0xbe8fe7d9
  407bb5:	mov    DWORD PTR [esi-0x1ded77a9],edx
  407bbb:	out    dx,al
  407bbc:	in     al,dx
  407bbd:	jnp    0x407bf9
  407bbf:	jg     0x407c3d
  407bc1:	pxor   mm0,QWORD PTR [ebp-0x3030a7eb]
  407bc8:	daa    
  407bc9:	cmp    DWORD PTR [ebx+0x1d8107b0],ebx
  407bcf:	cs push esi
  407bd1:	repnz pop edx
  407bd3:	das    
  407bd4:	mov    bh,0xea
  407bd6:	jge    0x407b7d
  407bd8:	jns    0x407b78
  407bda:	mov    ds:0xbeddd79,al
  407bdf:	repnz adc ah,BYTE PTR [ebp+0x5fc41454]
  407be6:	daa    
  407be7:	pop    ds
  407be8:	sub    edi,DWORD PTR ds:0xd9b6b805
  407bee:	stos   DWORD PTR es:[edi],eax
  407bef:	jp     0x407c64
  407bf1:	add    DWORD PTR [edx+ebx*1-0x4bc6d07c],esp
  407bf8:	out    dx,al
  407bf9:	es cdq 
  407bfb:	push   ds
  407bfc:	fisubr DWORD PTR [eax-0x78]
  407bff:	or     eax,0x5fe8a99a
  407c04:	mov    BYTE PTR [edx+0x57b936d],0x84
  407c0b:	push   ds
  407c0c:	sbb    DWORD PTR [ebx+0x62945980],0xa450a198
  407c16:	(bad)  
  407c17:	repnz pop ebx
  407c19:	js     0x407bc9
  407c1b:	xor    esi,esi
  407c1d:	and    BYTE PTR [edx],bh
  407c1f:	mov    esi,0xf3c40210
  407c24:	mov    dl,BYTE PTR [ecx-0x61]
  407c27:	pusha  
  407c28:	push   0x5107c4d
  407c2d:	adc    bh,0x24
  407c30:	fld    QWORD PTR [edi*8+0x2d12f2fb]
  407c37:	or     bh,BYTE PTR [esi+0xf]
  407c3a:	(bad)  
  407c3b:	fisubr DWORD PTR [ecx+edx*1+0x57]
  407c3f:	ficom  WORD PTR [ecx+0x5454445c]
  407c45:	dec    ebp
  407c46:	sub    al,0xc4
  407c48:	mov    cl,0xc6
  407c4a:	pop    edi
  407c4b:	call   0x3e33:0xd37ab875
  407c52:	fucom  st(0)
  407c54:	or     BYTE PTR [edx-0x52c9e5f5],al
  407c5a:	inc    edx
  407c5b:	jno    0x407c7d
  407c5d:	dec    esi
  407c5e:	sbb    BYTE PTR [ebp-0x2b4c13c0],0x4
  407c65:	fimul  WORD PTR [edi-0x80]
  407c68:	dec    ebp
  407c69:	ss push 0x64
  407c6c:	mov    eax,ds:0x7d8ce0fb
  407c71:	test   al,0xae
  407c73:	xchg   BYTE PTR [esi+0x1f0195dc],al
  407c79:	shr    DWORD PTR [edi+ecx*4+0x2b],1
  407c7d:	loope  0x407cec
  407c7f:	ins    DWORD PTR es:[edi],dx
  407c80:	adc    bh,BYTE PTR [edx]
  407c82:	cmc    
  407c83:	xchg   edi,edi
  407c85:	xchg   ecx,eax
  407c86:	jnp    0x407cc1
  407c88:	cmp    dh,cl
  407c8a:	add    al,0xee
  407c8c:	inc    esi
  407c8d:	sub    BYTE PTR [ecx],0x50
  407c90:	addr16 adc cl,ah
  407c93:	mov    ebp,0x1acfec2e
  407c98:	lods   al,BYTE PTR ds:[esi]
  407c99:	dec    ebp
  407c9a:	mov    al,ds:0xbf8ea7ed
  407c9f:	shl    ebx,0xca
  407ca2:	cmc    
  407ca3:	sbb    bh,BYTE PTR [edx]
  407ca5:	mov    ebp,0xd8c7001d
  407caa:	pop    ebp
  407cab:	ds xchg ecx,eax
  407cad:	adc    ebp,ebx
  407caf:	ret    
  407cb0:	xchg   esi,eax
  407cb1:	js     0x407cc8
  407cb3:	cmp    BYTE PTR [edi],dl
  407cb5:	xchg   edi,eax
  407cb6:	into   
  407cb7:	add    ebp,0x71678a5b
  407cbd:	sbb    al,0x9b
  407cbf:	aas    
  407cc0:	idiv   DWORD PTR [ebx]
  407cc2:	mov    eax,ds:0x273edc3
  407cc7:	popf   
  407cc8:	adc    eax,0x52d64ee3
  407ccd:	cdq    
  407cce:	sub    ecx,esp
  407cd0:	xchg   DWORD PTR ds:0x5bd5c2e4,ebp
  407cd6:	test   BYTE PTR [edx-0x32c94331],al
  407cdc:	icebp  
  407cdd:	or     al,0x57
  407cdf:	push   eax
  407ce0:	pop    es
  407ce1:	push   bp
  407ce3:	into   
  407ce4:	es pop cx
  407ce7:	jecxz  0x407ce8
  407ce9:	lock scas al,BYTE PTR es:[edi]
  407ceb:	cwd    
  407ced:	push   es
  407cee:	das    
  407cef:	test   bl,bh
  407cf1:	mov    al,0x79
  407cf3:	loope  0x407c96
  407cf5:	pushf  
  407cf6:	lea    ebx,[esp+esi*8+0x163c056]
  407cfd:	cmp    eax,0x224d6971
  407d02:	mov    al,BYTE PTR [ecx-0x5f]
  407d05:	xlat   BYTE PTR ds:[ebx]
  407d06:	jne    0x407d6f
  407d08:	jmp    0xf34dc57f
  407d0d:	jg     0x407d6f
  407d0f:	jb     0x407cc7
  407d11:	ja     0x407ca5
  407d13:	mov    ebx,0xcbf31ed
  407d18:	es (bad) 
  407d1a:	les    ecx,FWORD PTR [edi]
  407d1c:	cmp    dh,ah
  407d1e:	inc    DWORD PTR [ebx-0x2827af0]
  407d24:	ins    BYTE PTR es:[edi],dx
  407d25:	fisttp DWORD PTR [ecx+0x3e06a9f8]
  407d2b:	int    0x0
  407d2d:	xchg   DWORD PTR [eax],ebp
  407d2f:	pop    ebx
  407d30:	or     ebx,DWORD PTR [eax]
  407d32:	arpl   WORD PTR [edx],si
  407d34:	cmp    ch,BYTE PTR [edx-0x52169003]
  407d3a:	or     dl,dl
  407d3c:	sbb    eax,0xc0884dae
  407d41:	or     al,0x51
  407d43:	shr    DWORD PTR [edi+0x4f963be1],0xe9
  407d4a:	int    0x84
  407d4c:	mov    eax,0x6b977061
  407d51:	cmp    eax,0x482bd765
  407d56:	mov    eax,gs
  407d58:	test   eax,ebp
  407d5a:	stos   DWORD PTR es:[edi],eax
  407d5b:	bts    DWORD PTR [edx+0x3e],ebx
  407d5f:	std    
  407d60:	inc    eax
  407d61:	inc    eax
  407d62:	inc    esp
  407d63:	mov    eax,ds:0xe12ce00f
  407d68:	cs icebp 
  407d6a:	pop    ecx
  407d6b:	mov    ds:0x72ef29ef,eax
  407d70:	das    
  407d71:	add    DWORD PTR [ebp-0x4a],esp
  407d74:	pop    ss
  407d75:	(bad)  
  407d76:	test   BYTE PTR [eax+0x236fad9f],0xe5
  407d7d:	popf   
  407d7e:	inc    esp
  407d7f:	or     dh,BYTE PTR [ebx-0x3c]
  407d82:	jno    0x407d39
  407d84:	cmp    al,0xbb
  407d86:	les    esi,FWORD PTR [edi]
  407d88:	clc    
  407d89:	mov    eax,0x6c6d57a6
  407d8e:	mov    ss:0xc4aa7320,eax
  407d94:	ja     0x407d81
  407d96:	arpl   WORD PTR [ebx+0x19f3556a],ax
  407d9c:	pop    edx
  407d9d:	jmp    0x407d45
  407d9f:	ret    0xccb4
  407da2:	into   
  407da3:	pop    edx
  407da4:	push   cs
  407da5:	dec    edi
  407da6:	mov    bl,0x56
  407da8:	ret    
  407da9:	aaa    
  407daa:	dec    ecx
  407dab:	cs cmc 
  407dad:	ins    DWORD PTR es:[edi],dx
  407dae:	into   
  407daf:	sbb    bl,BYTE PTR [edx]
  407db1:	and    eax,0x60871b5b
  407db6:	dec    esp
  407db7:	dec    edi
  407db8:	xchg   ebx,eax
  407db9:	mov    al,0x4a
  407dbb:	cmp    dh,bl
  407dbd:	adc    ah,dl
  407dbf:	adc    al,0x8b
  407dc1:	ror    DWORD PTR [ebx-0x53f033b3],0xc1
  407dc8:	add    al,cl
  407dca:	loop   0x407dea
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0x1f5a987e
  407e7d:	jle    0x407ea1
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [esi-0x6b08c9aa],bh
  407e8b:	adc    al,bh
  407e8d:	dec    ecx
  407e8e:	imul   ecx,DWORD PTR [ecx-0x395fae18],0xfffffff8
  407e95:	stos   DWORD PTR es:[edi],eax
  407e96:	adc    al,0xe0
  407e98:	mov    edi,0xfa033e66
  407e9d:	xor    ch,BYTE PTR [ecx+0x335600e7]
  407ea3:	rcl    BYTE PTR [edi+0xc],1
  407ea6:	and    ebx,DWORD PTR [eax+0x2a]
  407ea9:	int3   
  407eaa:	mov    al,ds:0x1c91da84
  407eaf:	imul   esp,DWORD PTR [ebp-0x2b],0x43bd52e0
  407eb6:	in     eax,0x82
  407eb8:	test   DWORD PTR [eax+0x26],eax
  407ebb:	mov    esp,0x8444fc45
  407ec0:	retf   0xd219
  407ec3:	inc    esp
  407ec4:	and    ebp,DWORD PTR [edx+0x4e]
  407ec7:	dec    edi
  407ec8:	xchg   esi,eax
  407ec9:	fs push 0xc8b6652f
  407ecf:	jne    0x407ee1
  407ed1:	jnp    0x407efa
  407ed3:	mov    dh,0xa9
  407ed5:	jp     0x407edc
  407ed7:	pushf  
  407ed8:	aaa    
  407ed9:	sbb    BYTE PTR [edx],ah
  407edb:	xor    DWORD PTR [eax-0x2fc56c3],esp
  407ee1:	popf   
  407ee2:	push   0xffffffba
  407ee4:	dec    ebp
  407ee5:	gs scas al,BYTE PTR es:[edi]
  407ee7:	pop    esi
  407ee8:	imul   edx,DWORD PTR [edi+0x68],0xe11f5d29
  407eef:	mov    edi,esp
  407ef1:	test   eax,0x138ad7e5
  407ef6:	mov    ds:0x5ac6759e,al
  407efb:	retf   0x4df7
  407efe:	test   DWORD PTR [edi-0x6e75e8f9],esi
  407f04:	stos   DWORD PTR es:[edi],eax
  407f05:	daa    
  407f06:	shr    DWORD PTR [eax+0x5722e64e],1
  407f0c:	popa   
  407f0d:	mov    dh,0x32
  407f0f:	sub    cl,BYTE PTR [esp+eax*2+0x2]
  407f13:	mov    edx,0x5157f516
  407f18:	mov    bl,0xfd
  407f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f1b:	sbb    eax,0x9c8fee3
  407f20:	sti    
  407f21:	push   es
  407f22:	fcmovnb st,st(0)
  407f24:	adc    BYTE PTR [edi-0x2cdedb17],al
  407f2a:	dec    esp
  407f2b:	test   eax,0x64b9534c
  407f30:	data16 add ah,BYTE PTR [edi]
  407f33:	xchg   edi,eax
  407f34:	and    eax,0xc4c3ae23
  407f39:	pop    esp
  407f3a:	add    esi,DWORD PTR [edx-0x42]
  407f3d:	mov    eax,0x9d0db028
  407f42:	adc    BYTE PTR [eax-0x59],0x7e
  407f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f47:	shl    DWORD PTR [edx-0x32e60e1b],1
  407f4d:	fadd   st(3),st
  407f4f:	sub    edi,edx
  407f51:	jmp    0xfbb7:0xe53f03dd
  407f58:	add    eax,0x6f14605
  407f5d:	dec    esp
  407f5e:	mov    esp,0x1c66a823
  407f63:	xor    eax,0x9641d518
  407f68:	push   0x716fff05
  407f6d:	cmp    eax,0xf6f604a2
  407f72:	and    dh,bh
  407f74:	add    al,0xee
  407f76:	out    0x6,eax
  407f78:	scas   eax,DWORD PTR es:[edi]
  407f79:	repz pop edx
  407f7b:	add    esi,ecx
  407f7d:	nop
  407f7e:	ret    
  407f7f:	stos   BYTE PTR es:[edi],al
  407f80:	mov    esp,0xecb3f3ea
  407f85:	xchg   edi,eax
  407f86:	dec    esp
  407f87:	cmp    bl,BYTE PTR [ebp+0x12]
  407f8a:	ja     0x407f0d
  407f8c:	leavew 
  407f8e:	sub    ebp,0xc
  407f91:	jle    0x407ff0
  407f93:	xchg   DWORD PTR ds:0xc82afb17,edi
  407f99:	xchg   ecx,eax
  407f9a:	pop    esi
  407f9b:	cli    
  407f9c:	pop    ecx
  407f9d:	fcmovu st,st(0)
  407f9f:	add    eax,0x56ce8e9e
  407fa4:	inc    esi
  407fa5:	sar    DWORD PTR [ebx-0x38887dca],1
  407fab:	sahf   
  407fac:	daa    
  407fad:	sti    
  407fae:	shl    dh,1
  407fb0:	(bad)  
  407fb1:	retf   0x4dab
  407fb4:	sar    eax,0xc5
  407fb7:	ficom  WORD PTR [ebp+0x33]
  407fba:	mov    dl,0x54
  407fbc:	xor    al,0xcf
  407fbe:	idiv   dh
  407fc0:	jmp    0xf0759215
  407fc5:	push   ds
  407fc6:	jae    0x407fd7
  407fc8:	xor    DWORD PTR ds:0xe894ccc1,ecx
  407fce:	xlat   BYTE PTR ds:[ebx]
  407fcf:	or     DWORD PTR [edi+0x5f],ebp
  407fd2:	das    
  407fd3:	add    eax,0x45e9a024
  407fd8:	in     al,0x74
  407fda:	jae    0x407f7d
  407fdc:	add    cl,BYTE PTR [edx+0x1f]
  407fdf:	add    DWORD PTR [esi-0x6],esi
  407fe2:	fwait
  407fe3:	and    esi,DWORD PTR [esi+edx*8]
  407fe6:	retf   0xb55e
  407fe9:	push   ss
  407fea:	sti    
  407feb:	inc    esi
  407fec:	aad    0xd
  407fee:	sbb    DWORD PTR [esi+0x2a],esi
  407ff1:	cdq    
  407ff2:	arpl   WORD PTR [esi-0x4c],sp
  407ff5:	mov    bh,0xe9
  407ff7:	xchg   edx,eax
  407ff8:	out    dx,al
  407ff9:	and    ebx,DWORD PTR [edx-0x6d]
  407ffc:	cmp    esp,esp
  407ffe:	retf   0x35f7
  408001:	mov    edx,0xe4961b7c
  408006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408007:	jne    0x407fc7
  408009:	retf   
  40800a:	adc    al,0x40
  40800c:	outs   dx,DWORD PTR ds:[esi]
  40800d:	xor    al,0x94
  40800f:	ret    
  408010:	retf   0x593a
  408013:	jmp    0x407f95
  408015:	fwait
  408016:	out    dx,eax
  408017:	mov    cl,0x7b
  408019:	ins    BYTE PTR es:[edi],dx
  40801a:	mov    al,0x0
  40801c:	xchg   edx,eax
  40801d:	mov    edi,0xe21c0d77
  408022:	add    esp,DWORD PTR [eax+0x4c]
  408025:	dec    ebp
  408026:	mov    dl,0x38
  408028:	neg    BYTE PTR [ecx-0x1e9fb523]
  40802e:	mov    DWORD PTR [esi-0x43],eax
  408031:	es in  al,0x7
  408034:	sbb    al,0x6e
  408036:	xchg   esp,ecx
  408038:	cmp    BYTE PTR [edi+0x2e],bh
  40803b:	xor    ecx,DWORD PTR [edi]
  40803d:	add    BYTE PTR [di-0x60],dl
  408041:	add    ebp,esp
  408043:	leave  
  408044:	adc    DWORD PTR [edi+0x2938d578],0x5c
  40804b:	aaa    
  40804c:	ror    BYTE PTR [eax+edx*2+0xa],cl
  408050:	lock jnp 0x408028
  408053:	adc    DWORD PTR [ecx-0x64976f49],esi
  408059:	shr    DWORD PTR [edi-0x78],1
  40805c:	jg     0x4080dd
  40805e:	adc    BYTE PTR [ecx+0x2f539559],dh
  408064:	pop    esi
  408065:	(bad)  
  408066:	hlt    
  408067:	mov    eax,0x54d5112e
  40806c:	mov    DWORD PTR [eax-0x7b],ebx
  40806f:	sub    eax,0x6e248283
  408074:	xor    eax,0x9daa0824
  408079:	pop    ss
  40807a:	daa    
  40807b:	adc    al,0x16
  40807d:	push   esp
  40807e:	xor    BYTE PTR [eax+ecx*2-0x4aff9ab1],dl
  408085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408086:	outs   dx,DWORD PTR ds:[esi]
  408087:	outs   dx,DWORD PTR ds:[esi]
  408088:	jne    0x4080ff
  40808a:	xchg   ebx,eax
  40808b:	mov    edi,0x6ab44545
  408090:	cmp    edi,DWORD PTR [edi+0x14d45e43]
  408096:	inc    ecx
  408097:	jmp    0xcc80:0x94af8909
  40809e:	cmp    dh,BYTE PTR [esi-0x4a]
  4080a1:	daa    
  4080a2:	and    eax,0x29f52386
  4080a7:	and    BYTE PTR [edx],cl
  4080a9:	mov    edx,0xbb9e995e
  4080ae:	fld    QWORD PTR [eax-0x69328177]
  4080b4:	and    DWORD PTR [ebx-0x7b6cfb01],edx
  4080ba:	lds    ecx,FWORD PTR [edi]
  4080bc:	jns    0x4080c4
  4080be:	jbe    0x408061
  4080c0:	outs   dx,BYTE PTR ds:[esi]
  4080c1:	xchg   esp,eax
  4080c2:	adc    ecx,DWORD PTR [ecx+0xe2e2190]
  4080c8:	jnp    0x4080ed
  4080ca:	outs   dx,BYTE PTR ds:[esi]
  4080cb:	shl    BYTE PTR [edi+0x2bbfeced],cl
  4080d1:	xchg   BYTE PTR [edi+0x33960c9d],dh
  4080d7:	rcr    DWORD PTR [edx-0x493bb09d],1
  4080dd:	inc    ebx
  4080de:	push   0x81647eb6
  4080e3:	jle    0x4080c5
  4080e5:	sub    eax,0xec2c7259
  4080ea:	shl    bh,1
  4080ec:	and    edi,esi
  4080ee:	and    eax,0x1d368a78
  4080f3:	mov    edi,0x6cd91767
  4080f8:	jae    0x408132
  4080fa:	push   ebp
  4080fb:	cld    
  4080fc:	cld    
  4080fd:	mov    BYTE PTR [ecx-0x4d],ah
  408100:	arpl   ax,dx
  408102:	push   0xac4cc2f6
  408107:	test   eax,0xda2490b4
  40810c:	mov    fs,WORD PTR [edx]
  40810e:	das    
  40810f:	repnz or BYTE PTR [ecx-0x75],cl
  408113:	and    eax,0x3716e31
  408118:	into   
  408119:	sbb    dl,0x24
  40811c:	aam    0x31
  40811e:	mov    edx,0x2afc46a6
  408123:	mov    eax,0xfbd815d2
  408128:	lds    ebp,FWORD PTR [edx+0x45]
  40812b:	(bad)
  40812e:	clc    
  40812f:	and    eax,0x1c934488
  408134:	scas   eax,DWORD PTR es:[edi]
  408135:	lea    ecx,[ebx-0x4]
  408138:	pop    ebp
  408139:	inc    ebp
  40813a:	adc    DWORD PTR [eax],edx
  40813c:	test   DWORD PTR [ecx-0x5210c11a],eax
  408142:	add    al,0xff
  408144:	(bad)  [eax+ebp*1-0x2f]
  408148:	adc    al,BYTE PTR [esi]
  40814a:	loopne 0x408145
  40814c:	repz fs mov edx,es
  408150:	adc    DWORD PTR [edi+edx*4+0x65],0x50f4571a
  408158:	xchg   ecx,eax
  408159:	jl     0x408156
  40815b:	adc    BYTE PTR [eax],bl
  40815d:	pop    ss
  40815e:	jg     0x4080e7
  408160:	mov    bh,0xe1
  408162:	je     0x408199
  408164:	clc    
  408165:	push   cs
  408166:	out    0x4c,eax
  408168:	aam    0xd0
  40816a:	sub    DWORD PTR [ebx],ebp
  40816c:	out    0xe3,eax
  40816e:	shr    DWORD PTR [eax+0x3a],0xc
  408172:	jno    0x408144
  408174:	dec    esp
  408175:	stc    
  408176:	mov    al,0x17
  408178:	fmul   DWORD PTR [edx+eiz*2+0x18]
  40817c:	aas    
  40817d:	dec    ebx
  40817e:	lock add DWORD PTR [esi],ebx
  408181:	pop    esi
  408182:	cmp    ch,BYTE PTR [ebx+edx*8-0x48]
  408186:	cld    
  408187:	pop    ebp
  408188:	pushf  
  408189:	xor    bl,BYTE PTR [esi-0x4c]
  40818c:	retf   
  40818d:	lock or BYTE PTR [ebx+0x29],ah
  408191:	sbb    al,0x26
  408193:	xchg   edi,eax
  408194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408195:	cs jl  0x4081d3
  408198:	pop    esp
  408199:	and    BYTE PTR [eax+0x5],cl
  40819c:	add    eax,DWORD PTR [edi-0x78f1accc]
  4081a2:	outs   dx,DWORD PTR ds:[esi]
  4081a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081a4:	sar    bh,0xd9
  4081a7:	mov    esi,0xbd5ae3ea
  4081ac:	pop    ecx
  4081ad:	(bad)  
  4081ae:	call   0x77f0:0x8458905c
  4081b5:	loop   0x4081eb
  4081b7:	xor    ah,ah
  4081b9:	pop    ebp
  4081ba:	or     BYTE PTR [ebx-0x23d7faa2],bl
  4081c0:	lea    ebx,[edi-0x2b]
  4081c3:	rol    BYTE PTR [ecx-0x6d038103],0x29
  4081ca:	add    BYTE PTR [ebx+edi*2-0x2853dc62],dh
  4081d1:	clc    
  4081d2:	sahf   
  4081d3:	cmp    eax,0xf71680c2
  4081d8:	ins    BYTE PTR es:[edi],dx
  4081d9:	adc    al,0xc0
  4081db:	fimul  DWORD PTR [edx+0x71]
  4081de:	rcr    BYTE PTR [esp+ebx*2],1
  4081e1:	dec    ebx
  4081e2:	adc    dl,bl
  4081e4:	fidivr WORD PTR [esi]
  4081e6:	les    ebp,FWORD PTR ds:0x4d4f784c
  4081ec:	inc    eax
  4081ed:	dec    esi
  4081ee:	ja     0x40826c
  4081f0:	push   ebp
  4081f1:	mov    cl,0xc0
  4081f3:	arpl   WORD PTR [ecx+0x19],ax
  4081f6:	daa    
  4081f7:	sbb    ah,BYTE PTR ds:0x4754f7d6
  4081fd:	enter  0x11cf,0x7a
  408201:	test   BYTE PTR [ecx+0x3c],cl
  408204:	call   0xf022:0xdd6a70bd
  40820b:	sbb    dl,BYTE PTR [ebx+0x44141ba0]
  408211:	pop    ss
  408212:	dec    eax
  408213:	pop    ebx
  408214:	inc    ebx
  408215:	mov    ds:0x55ec965c,eax
  40821a:	fild   WORD PTR [edi+0x7e96edd3]
  408220:	mov    dh,0x65
  408222:	fnstsw WORD PTR [edx-0x10ab2558]
  408228:	push   eax
  408229:	ret    
  40822a:	add    eax,0xbb7eca4
  40822f:	(bad)  
  408230:	mov    edx,DWORD PTR [ecx]
  408232:	mov    ebp,0x4cd4c541
  408237:	ficom  DWORD PTR [eax-0x64f9a655]
  40823d:	int    0xbc
  40823f:	or     al,BYTE PTR [edx+0x21cbd35f]
  408245:	out    0x59,al
  408247:	mov    DWORD PTR [ebp-0x6c],eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0xe37709d
  40828a:	mov    ds:0x1867a8bc,eax
  40828f:	sbb    BYTE PTR [esi+0x49181812],bl
  408295:	add    eax,DWORD PTR [ecx+eiz*8+0x5a]
  408299:	or     DWORD PTR [ebx],0x3659b511
  40829f:	mov    edi,0x59287b56
  4082a4:	add    al,0xdc
  4082a6:	inc    esi
  4082a7:	and    DWORD PTR [ebp-0x34],ebx
  4082aa:	or     eax,0x5d7c388b
  4082af:	sahf   
  4082b0:	cmc    
  4082b1:	pop    esp
  4082b2:	fisttp DWORD PTR [eax]
  4082b4:	adc    al,0x96
  4082b6:	cmp    edx,ecx
  4082b8:	mov    al,0x5b
  4082ba:	adc    DWORD PTR [ebp-0x74],edx
  4082bd:	pop    edx
  4082be:	pop    ebp
  4082bf:	scas   eax,DWORD PTR es:[edi]
  4082c0:	mov    bh,ch
  4082c2:	push   edi
  4082c3:	inc    esi
  4082c4:	or     eax,0xbec81ab9
  4082c9:	and    ecx,DWORD PTR [edx-0x15]
  4082cc:	mov    ah,0x1b
  4082ce:	dec    eax
  4082cf:	call   0x9aec:0xbe62ee63
  4082d6:	sub    al,0xdc
  4082d8:	xchg   DWORD PTR [eax],esi
  4082da:	inc    ebx
  4082db:	push   cs
  4082dc:	(bad)  
  4082dd:	mov    dh,0x89
  4082df:	and    BYTE PTR [ebx],dh
  4082e1:	mov    bh,0xd3
  4082e3:	ret    0xac8c
  4082e6:	push   esi
  4082e7:	lods   al,BYTE PTR ds:[esi]
  4082e8:	arpl   dx,di
  4082ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082eb:	mov    bh,0x4e
  4082ed:	not    DWORD PTR [edx-0x1972f9b5]
  4082f3:	enter  0x8f5,0xa4
  4082f7:	mov    ebx,0x92ea98af
  4082fc:	add    ebx,edi
  4082fe:	and    eax,0x76a9bc8c
  408303:	std    
  408304:	add    eax,0xee75fd7
  408309:	mov    ds:0x395948ad,eax
  40830e:	cwde   
  40830f:	sbb    DWORD PTR [esi+0x65bfe35e],eax
  408315:	fxch   st(0)
  408317:	ins    BYTE PTR es:[edi],dx
  408318:	and    BYTE PTR [esi-0xb95ed2e],ah
  40831e:	jne    0x4082ca
  408320:	mov    ecx,0x7b391851
  408325:	xchg   esp,eax
  408326:	or     ecx,ecx
  408328:	fwait
  408329:	scas   eax,DWORD PTR es:[edi]
  40832a:	xchg   BYTE PTR [ebx],bh
  40832c:	mov    ch,0x18
  40832e:	inc    esi
  40832f:	std    
  408330:	mov    bl,0x69
  408332:	shr    BYTE PTR [ebp-0x7e],1
  408335:	data16 adc BYTE PTR [ecx-0x4a],bh
  408339:	jo     0x40833e
  40833b:	retf   
  40833c:	iret   
  40833d:	adc    DWORD PTR [edi+0x62d0994f],ebx
  408343:	das    
  408344:	jmp    0xfa5643fd
  408349:	in     eax,0x86
  40834b:	or     DWORD PTR [esi+esi*2-0xd],ebx
  40834f:	and    ebp,DWORD PTR [esi-0x2fee37d4]
  408355:	jmp    0xe37c:0xa782d0cc
  40835c:	cdq    
  40835d:	int3   
  40835e:	int    0x22
  408360:	ins    DWORD PTR es:[edi],dx
  408361:	aas    
  408362:	and    BYTE PTR [edx+0x1b],0xae
  408366:	mov    eax,ds:0x3e74d317
  40836b:	test   DWORD PTR [esi],ebp
  40836d:	gs gs inc ebp
  408370:	push   es
  408371:	inc    eax
  408372:	jo     0x408346
  408374:	inc    esi
  408375:	scas   al,BYTE PTR es:[edi]
  408376:	pop    esp
  408377:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408379:	cmp    eax,0xcac33c2b
  40837e:	jl     0x4083a7
  408380:	or     al,BYTE PTR [esi]
  408382:	cmc    
  408383:	and    al,0xf5
  408385:	sub    DWORD PTR [eax],ecx
  408387:	or     DWORD PTR [edi-0x1a59e7d4],edx
  40838d:	mov    dh,0x1a
  40838f:	fs jg  0x408338
  408392:	mov    ds:0x6c7594bb,eax
  408397:	popf   
  408398:	jo     0x4083a9
  40839a:	cli    
  40839b:	stc    
  40839c:	stc    
  40839d:	and    eax,0xb0728ce4
  4083a2:	stos   BYTE PTR es:[edi],al
  4083a3:	test   al,0x54
  4083a5:	mov    ah,0x40
  4083a7:	or     DWORD PTR [eax+ebx*2-0x5a],esp
  4083ab:	ja     0x408421
  4083ad:	jns    0x408385
  4083af:	cmp    al,0x56
  4083b1:	xor    cl,dh
  4083b3:	ja     0x4083c1
  4083b5:	test   WORD PTR [esi],sp
  4083b8:	xchg   BYTE PTR [ecx],bl
  4083ba:	push   ss
  4083bb:	stos   BYTE PTR es:[edi],al
  4083bc:	daa    
  4083bd:	retf   
  4083be:	or     al,0x75
  4083c0:	sahf   
  4083c1:	ret    
  4083c2:	sar    DWORD PTR [eax],1
  4083c4:	mov    edi,0x7e561edf
  4083c9:	fwait
  4083ca:	cmp    al,0x2d
  4083cc:	ret    0x3ce3
  4083cf:	mov    bl,0xf5
  4083d1:	sub    DWORD PTR [edx],edx
  4083d3:	xor    al,0x65
  4083d5:	out    dx,al
  4083d6:	inc    esi
  4083d7:	retf   
  4083d8:	xchg   esp,eax
  4083d9:	cmp    ah,BYTE PTR [ebx]
  4083db:	xor    al,0x95
  4083dd:	sar    BYTE PTR [esi+0xa],cl
  4083e0:	push   edi
  4083e1:	push   cs
  4083e2:	xchg   ecx,eax
  4083e3:	repz sub ecx,DWORD PTR [esi+0x4a]
  4083e7:	fadd   DWORD PTR [ecx+0x2d21ac8c]
  4083ed:	sar    ah,cl
  4083ef:	repnz xchg edx,eax
  4083f1:	ja     0x4083f7
  4083f3:	addr16 icebp 
  4083f5:	icebp  
  4083f6:	loopne 0x40843c
  4083f8:	mov    eax,ds:0x34bb234e
  4083fd:	std    
  4083fe:	pop    ebp
  4083ff:	pop    eax
  408400:	arpl   WORD PTR fs:[ebx+0x79],cx
  408404:	adc    ecx,DWORD PTR [edx+0x7e]
  408407:	fcom   QWORD PTR [ebx+eax*8]
  40840a:	mov    BYTE PTR [edx-0x33c45c46],ch
  408410:	jmp    0x9f035fda
  408415:	cs pop es
  408417:	sbb    eax,0xe19103d9
  40841c:	xor    edx,eax
  40841e:	xchg   edx,eax
  40841f:	outs   dx,BYTE PTR ds:[esi]
  408420:	sbb    DWORD PTR [esi-0x5f],0xb4462d8
  408427:	dec    esi
  408428:	popf   
  408429:	repz push 0x5f
  40842c:	xor    edi,edx
  40842e:	int3   
  40842f:	lods   al,BYTE PTR ds:[esi]
  408430:	imul   ebp,esp,0xd852da1e
  408436:	test   eax,0x7abb2a3e
  40843b:	(bad)  
  40843d:	sub    al,0x7e
  40843f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408440:	pop    ds
  408441:	mov    BYTE PTR [ebx],dl
  408443:	inc    ecx
  408444:	xor    DWORD PTR [ebx+0x45],0xe671852f
  40844b:	into   
  40844c:	xchg   ebx,eax
  40844d:	dec    ebp
  40844e:	xor    al,0x58
  408450:	xor    dh,dh
  408452:	push   esp
  408453:	(bad)  
  408454:	loop   0x408403
  408456:	add    esi,ebp
  408458:	in     eax,dx
  408459:	jne    0x4084d0
  40845b:	dec    eax
  40845c:	mov    ecx,0x870309f0
  408461:	add    DWORD PTR [ecx+0x2b],0x8c888ee3
  408468:	ficom  WORD PTR [eax+edi*1-0x37]
  40846c:	sub    al,0xac
  40846e:	out    dx,eax
  40846f:	ror    cl,1
  408471:	outs   dx,BYTE PTR ds:[esi]
  408472:	out    dx,eax
  408473:	imul   esp,DWORD PTR [eax+0x7],0x67
  408477:	fs or  eax,0x1d0920c1
  40847d:	xlat   BYTE PTR ds:[ebx]
  40847e:	imul   edx,edi,0xd09a4416
  408484:	fisttp DWORD PTR [edi+eax*1]
  408487:	pusha  
  408488:	adc    BYTE PTR [ecx],dl
  40848a:	mov    ch,0x34
  40848c:	mov    dl,0xe4
  40848e:	sbb    al,0x63
  408490:	xchg   ebp,eax
  408491:	imul   eax,DWORD PTR [si-0x39],0xbb0db2be
  408499:	xor    DWORD PTR [esp+eax*1-0x38505d53],ebp
  4084a0:	mul    DWORD PTR [eax-0x4d]
  4084a3:	xor    DWORD PTR [ebp+0x29f26c35],edi
  4084a9:	je     0x4084d8
  4084ab:	push   0x9ee104eb
  4084b0:	inc    esp
  4084b1:	sbb    eax,0x7e4b53e2
  4084b6:	xchg   edx,eax
  4084b7:	imul   ebp,esp,0x6967f904
  4084bd:	int3   
  4084be:	dec    eax
  4084bf:	mov    dh,0x92
  4084c1:	mov    ebp,0xf3687b5f
  4084c6:	rcr    esp,1
  4084c8:	sbb    al,0x69
  4084ca:	loope  0x40848a
  4084cc:	dec    eax
  4084cd:	icebp  
  4084ce:	ds cdq 
  4084d0:	in     eax,0xae
  4084d2:	add    BYTE PTR [eax],bl
  4084d4:	icebp  
  4084d5:	or     bl,al
  4084d7:	aas    
  4084d8:	push   ds
  4084d9:	push   edx
  4084da:	shl    bl,1
  4084dc:	call   0x77b9:0xf1eadb2e
  4084e3:	xchg   ecx,eax
  4084e4:	arpl   WORD PTR [edi],cx
  4084e6:	ins    DWORD PTR es:[edi],dx
  4084e7:	cmp    BYTE PTR [esp+ebp*1],0xb
  4084eb:	inc    edi
  4084ec:	push   es
  4084ed:	mov    dl,0x5c
  4084ef:	adc    al,0x53
  4084f1:	inc    esp
  4084f2:	dec    edi
  4084f3:	inc    esp
  4084f4:	enter  0xd422,0x98
  4084f8:	outs   dx,BYTE PTR ds:[esi]
  4084f9:	adc    DWORD PTR [ebp+0x3cce2ca],edx
  4084ff:	jl     0x40851a
  408501:	mov    al,0xae
  408503:	or     esi,DWORD PTR [ecx]
  408505:	call   FWORD PTR [ebp-0x21]
  408508:	ss addr16 mov ch,0x8e
  40850c:	sbb    esi,DWORD PTR cs:[bx+si]
  408510:	pusha  
  408511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408512:	ficom  WORD PTR [ecx+0x6b]
  408515:	inc    ebp
  408516:	cmc    
  408517:	add    al,0xa5
  408519:	div    DWORD PTR [edi]
  40851b:	je     0x4084b9
  40851d:	pusha  
  40851e:	arpl   WORD PTR [ebp-0x30],ax
  408521:	retf   
  408522:	out    0xd9,eax
  408524:	daa    
  408525:	(bad)  
  408526:	out    dx,al
  408527:	rcr    BYTE PTR [esi],1
  408529:	imul   eax,DWORD PTR [ebp+0x24],0x2721e708
  408530:	jmp    0x40851c
  408532:	lds    ebx,FWORD PTR [eax+esi*1-0x61]
  408536:	xor    BYTE PTR [ebp+0x5e44447c],dh
  40853c:	jg     0x408505
  40853e:	pop    eax
  40853f:	pop    ebp
  408540:	push   edi
  408541:	mov    ?,WORD PTR [bx+si-0x7a]
  408545:	pop    esp
  408546:	mov    dh,0xaa
  408548:	push   ds
  408549:	pop    edx
  40854a:	jne    0x4084fc
  40854c:	push   esp
  40854d:	into   
  40854e:	cwde   
  40854f:	je     0x408570
  408551:	or     edi,DWORD PTR [esi]
  408553:	jmp    0x41bebe52
  408558:	jnp    0x408537
  40855a:	popf   
  40855b:	inc    ecx
  40855c:	aad    0xc1
  40855e:	pop    ecx
  40855f:	dec    esi
  408560:	mov    eax,0xb8e723aa
  408565:	div    edx
  408567:	cmpxchg BYTE PTR [edx-0xa6b339f],ch
  40856e:	lar    edi,WORD PTR [edi+ebx*2-0x16]
  408573:	loope  0x408596
  408575:	int    0xa
  408577:	cmp    cl,BYTE PTR [eax+0x11]
  40857a:	add    al,0xb2
  40857c:	mov    dl,0x6f
  40857e:	inc    esi
  40857f:	lock add al,0xbf
  408582:	xchg   ecx,eax
  408583:	mov    dh,BYTE PTR [ecx+0xbff7bcc]
  408589:	iret   
  40858a:	fisub  WORD PTR [ebp+0x236cb7c1]
  408590:	mov    eax,0xa8cdbfa4
  408595:	mov    ds:0x82c6297f,eax
  40859a:	lea    edx,[edx-0x61]
  40859d:	pop    ebx
  40859e:	adc    al,0x42
  4085a0:	ror    DWORD PTR [edx],1
  4085a2:	nop
  4085a3:	mov    edx,DWORD PTR ds:0x7493e0fb
  4085a9:	xlat   BYTE PTR ds:[ebx]
  4085aa:	inc    eax
  4085ab:	inc    edx
  4085ac:	dec    ebp
  4085ad:	jbe    0x4085dc
  4085af:	sti    
  4085b0:	(bad)  
  4085b1:	pop    ss
  4085b2:	inc    ecx
  4085b3:	ror    DWORD PTR ds:0x2dfd8fc7,1
  4085b9:	lahf   
  4085ba:	push   ebx
  4085bb:	jmp    0x778b089b
  4085c0:	sub    eax,0x7f5104cc
  4085c5:	in     al,0xea
  4085c7:	add    BYTE PTR [eax+0x36539b9f],al
  4085cd:	mov    DWORD PTR [ecx-0x2f],ecx
  4085d0:	retf   
  4085d1:	adc    al,0xa7
  4085d3:	dec    edx
  4085d4:	test   DWORD PTR [eax],ebx
  4085d6:	pop    ss
  4085d7:	add    DWORD PTR [esi+0x7b],ecx
  4085da:	stos   DWORD PTR es:[edi],eax
  4085db:	lahf   
  4085dc:	ret    0xfa13
  4085df:	inc    esi
  4085e0:	jne    0x408653
  4085e2:	xor    eax,0x673db796
  4085e7:	adc    DWORD PTR [edx+0x7a],edi
  4085ea:	test   DWORD PTR [esi-0x3d2e0c4f],ebx
  4085f0:	push   edi
  4085f1:	(bad)  
  4085f2:	cli    
  4085f3:	(bad)  
  4085f4:	dec    esp
  4085f5:	add    dh,BYTE PTR [ebx+0x51a5ab49]
  4085fb:	std    
  4085fc:	and    ebx,DWORD PTR [ecx]
  4085fe:	pop    esp
  4085ff:	mov    edi,0xd518c641
  408604:	iret   
  408605:	loope  0x40859c
  408607:	sar    BYTE PTR [edi+ecx*2+0x74954ad4],0x51
  40860f:	mov    ch,0x73
  408611:	push   esi
  408612:	and    ch,BYTE PTR [edx]
  408614:	and    eax,0x23cb7584
  408619:	jns    0x4085d4
  40861b:	jg     0x4085bc
  40861d:	sbb    BYTE PTR [ebp-0x27292bf],cl
  408623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408624:	mov    ebx,esi
  408626:	adc    BYTE PTR [ebx+0x63],bh
  408629:	arpl   WORD PTR [eax-0x44],di
  40862c:	sub    DWORD PTR [edx],ebx
  40862e:	inc    esp
  40862f:	push   esi
  408630:	sbb    dl,BYTE PTR [edx+0x4d]
  408633:	(bad)  
  408635:	sbb    ah,BYTE PTR [edi]
  408637:	and    al,0x77
  408639:	and    ebx,esp
  40863b:	aam    0xd3
  40863d:	push   ss
  40863e:	xchg   ecx,eax
  40863f:	out    0x8c,al
  408641:	fwait
  408642:	jge    0x40869c
  408644:	or     ebp,DWORD PTR [ebx-0x7a]
  408647:	xchg   ecx,eax
  408648:	sbb    al,0xce
  40864a:	(bad)  
  40864c:	(bad)  
  40864d:	mov    dl,0x70
  40864f:	xchg   ebp,eax
  408650:	es fld st(1)
  408653:	push   esi
  408654:	xchg   ecx,eax
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xb0af61e1
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [eax+0x3c],ah
  40869f:	jb     0x4086d2
  4086a1:	sbb    DWORD PTR [edx],edi
  4086a3:	jp     0x40868f
  4086a5:	xchg   esi,eax
  4086a6:	push   cs
  4086a7:	repnz xchg ebx,eax
  4086a9:	js     0x4086dd
  4086ab:	dec    ecx
  4086ac:	aas    
  4086ad:	mov    esi,edi
  4086af:	mov    al,ds:0x22081476
  4086b4:	push   edi
  4086b5:	and    BYTE PTR [edx+esi*1-0x725d37d9],dh
  4086bc:	sahf   
  4086bd:	das    
  4086be:	add    ecx,DWORD PTR [esi+0xa605f1]
  4086c4:	or     DWORD PTR [esi-0x56],ebp
  4086c7:	mov    esi,0x1470d49
  4086cc:	dec    esp
  4086cd:	in     al,0x98
  4086cf:	or     DWORD PTR [eax],esp
  4086d1:	and    dh,BYTE PTR [edi-0x32]
  4086d4:	adc    eax,0x8339dce9
  4086d9:	fnsave [eax+eiz*2-0x74]
  4086dd:	outs   dx,BYTE PTR ds:[esi]
  4086de:	loopne 0x408728
  4086e0:	mov    dh,0x8
  4086e2:	fcos   
  4086e4:	dec    esi
  4086e5:	adc    al,0x53
  4086e7:	mov    cl,0x36
  4086e9:	lea    ecx,[esi]
  4086eb:	xchg   DWORD PTR [esi],eax
  4086ed:	hlt    
  4086ee:	mov    ah,0x1c
  4086f0:	xchg   esi,eax
  4086f1:	jg     0x40874f
  4086f3:	js     0x4086b4
  4086f5:	xor    DWORD PTR [esi-0x6a],0xa3d95470
  4086fc:	pop    es
  4086fd:	lods   al,BYTE PTR ds:[esi]
  4086fe:	dec    edi
  4086ff:	sbb    eax,0xb44f42d
  408704:	jmp    0x3efb10fd
  408709:	ret    0xfec8
  40870c:	fnstsw WORD PTR [edx-0x2fab282a]
  408712:	cmp    ebx,edx
  408714:	cwde   
  408715:	je     0x4086f9
  408717:	dec    ebx
  408718:	jp     0x4086e5
  40871a:	stos   BYTE PTR es:[edi],al
  40871b:	mov    ds,ebx
  40871d:	shl    esi,0xe5
  408720:	mov    bl,0xa8
  408722:	sbb    al,0xd5
  408724:	jecxz  0x4086d7
  408726:	jnp    0x408799
  408728:	shl    DWORD PTR [ecx+0x5a109265],0x5d
  40872f:	(bad)  [edx-0xee77da5]
  408735:	xlat   BYTE PTR ds:[ebx]
  408736:	fisttp QWORD PTR [esi-0x54]
  408739:	jecxz  0x4086c9
  40873b:	out    0x52,al
  40873d:	retf   
  40873e:	xor    cl,cl
  408740:	stos   DWORD PTR es:[edi],eax
  408741:	(bad)  
  408742:	pop    eax
  408743:	pop    ebp
  408744:	dec    DWORD PTR [edi+0x6]
  408747:	pop    ss
  408748:	cld    
  408749:	cmp    DWORD PTR [ecx-0x45],esp
  40874c:	jmp    0x4087cd
  40874e:	mov    eax,0x80ac2f47
  408753:	in     al,dx
  408754:	into   
  408755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408756:	xor    eax,0x177724af
  40875b:	stos   DWORD PTR es:[edi],eax
  40875c:	mov    BYTE PTR [ebx+0x44178044],ch
  408762:	sti    
  408763:	daa    
  408764:	inc    esi
  408765:	retf   
  408766:	mov    ah,0x77
  408768:	pop    esp
  408769:	in     al,dx
  40876a:	leave  
  40876b:	not    BYTE PTR [eax]
  40876d:	aas    
  40876e:	or     al,0xbd
  408770:	push   es
  408771:	mov    esi,0x2d963599
  408776:	or     BYTE PTR [ecx+0x3f3a5f8c],bl
  40877c:	or     DWORD PTR [ebx],0xffffff9a
  40877f:	adc    al,0xfd
  408781:	inc    ecx
  408782:	inc    ebp
  408783:	dec    esi
  408784:	retf   0xabf1
  408787:	jno    0x4087e1
  408789:	fisttp QWORD PTR [eax-0x21e6d8e6]
  40878f:	or     DWORD PTR [ecx*4+0xab0d063],esi
  408796:	test   eax,0x3b36ed2e
  40879b:	call   0x8f5:0x5872891c
  4087a2:	repnz scas al,BYTE PTR es:[edi]
  4087a4:	in     eax,dx
  4087a5:	(bad)  
  4087a6:	out    0x5,al
  4087a8:	sahf   
  4087a9:	sti    
  4087aa:	lahf   
  4087ab:	pop    ss
  4087ac:	lahf   
  4087ad:	ss dec eax
  4087af:	xor    eax,0x1a8cd5db
  4087b4:	jnp    0x40881d
  4087b6:	push   0x24dfdbc4
  4087bb:	jmp    0x4087a0
  4087bd:	popf   
  4087be:	call   0xaee1:0xfe87a537
  4087c5:	xor    ecx,DWORD PTR [ebx+0x685c6996]
  4087cb:	and    al,0xde
  4087cd:	push   edi
  4087ce:	enter  0x3fb,0x48
  4087d2:	jbe    0x4087ec
  4087d4:	ja     0x408830
  4087d6:	cmp    al,0x6c
  4087d8:	test   eax,0x603de599
  4087dd:	int    0xb0
  4087df:	dec    ecx
  4087e0:	test   al,0x1b
  4087e2:	add    eax,0x2d3f2dcb
  4087e7:	ss sahf 
  4087e9:	iret   
  4087ea:	(bad)  
  4087eb:	mov    ds:0xffdadf69,eax
  4087f0:	sahf   
  4087f1:	jg     0x4087fd
  4087f3:	xor    al,0x3c
  4087f5:	mov    bh,0xa7
  4087f7:	adc    dh,BYTE PTR [ecx-0x68]
  4087fa:	pop    esi
  4087fb:	add    BYTE PTR [esp+edi*8-0x63],ch
  4087ff:	adc    ah,BYTE PTR [edi-0x6a6cce6a]
  408805:	xor    eax,0x2a1f4e0d
  40880a:	and    BYTE PTR [esp+esi*1-0x3d],0xf6
  40880f:	aam    0xb3
  408811:	aas    
  408812:	mov    BYTE PTR [esi-0x67],ah
  408815:	bound  eax,QWORD PTR [ebx-0x67]
  408818:	aam    0xc
  40881a:	cmp    eax,0x27882f81
  40881f:	fld    DWORD PTR [eax]
  408821:	adc    eax,0x966e134f
  408826:	jle    0x40885a
  408828:	mov    bl,0x8c
  40882a:	loope  0x4087d1
  40882c:	dec    ebx
  40882d:	fistp  DWORD PTR [edx]
  40882f:	and    al,0x32
  408831:	dec    esi
  408832:	and    al,0x9d
  408834:	add    BYTE PTR [esi-0x5e],0x24
  408838:	pmaddwd mm6,QWORD PTR [eax+edx*2+0x17]
  40883d:	jg     0x408899
  40883f:	mov    al,ds:0x281b4b42
  408844:	xchg   ebp,ebp
  408846:	pop    esp
  408847:	(bad)  
  408848:	jge    0x40880d
  40884a:	stc    
  40884b:	pop    edi
  40884c:	mov    edi,0xfc588e16
  408851:	cmp    ebp,DWORD PTR [ebp-0xa175d4c]
  408857:	inc    eax
  408858:	mov    BYTE PTR [ecx+eax*4+0x74],bh
  40885c:	outs   dx,DWORD PTR ds:[esi]
  40885d:	(bad)  
  40885e:	fwait
  40885f:	daa    
  408860:	(bad)  
  408862:	stc    
  408863:	push   esi
  408864:	iret   
  408865:	mov    ebx,0x3de10257
  40886a:	jb     0x40883c
  40886c:	adc    al,0x71
  40886e:	push   ss
  40886f:	mov    DWORD PTR [ecx],ecx
  408871:	pop    esp
  408872:	cmp    eax,0xd1fbdc7e
  408877:	cdq    
  408878:	pop    esi
  408879:	lock sti 
  40887b:	daa    
  40887c:	jo     0x408880
  40887e:	jle    0x408870
  408880:	ins    BYTE PTR es:[edi],dx
  408881:	jae    0x4088a9
  408883:	stos   DWORD PTR es:[edi],eax
  408884:	xor    edi,DWORD PTR [edi-0x8d178bf]
  40888a:	mov    esp,0xc83becb2
  40888f:	lea    edx,[edx-0x79]
  408892:	shr    DWORD PTR [eax],0x4e
  408895:	aaa    
  408896:	cdq    
  408897:	std    
  408898:	repz xor edx,DWORD PTR [ebx]
  40889b:	cli    
  40889c:	ss push ss
  40889e:	mov    ebp,0xb7a733e9
  4088a3:	stos   DWORD PTR es:[edi],eax
  4088a4:	dec    eax
  4088a5:	and    DWORD PTR [edx+0x73101d05],ebp
  4088ab:	test   DWORD PTR [ebp-0x4b],eax
  4088ae:	add    eax,0xbd4559c6
  4088b3:	inc    ecx
  4088b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088b5:	push   ecx
  4088b6:	jl     0x40887a
  4088b8:	mov    edi,0x256cc550
  4088bd:	repz enter 0x4a8e,0xb3
  4088c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088c3:	xchg   ebx,eax
  4088c4:	pop    esi
  4088c5:	int3   
  4088c6:	mov    ah,0x8f
  4088c8:	(bad)  
  4088c9:	aas    
  4088ca:	div    DWORD PTR [ecx]
  4088cc:	pushf  
  4088cd:	xor    eax,0xf8233878
  4088d2:	pop    edx
  4088d3:	(bad)  
  4088d5:	push   0xffffffcb
  4088d7:	in     eax,dx
  4088d8:	lods   eax,DWORD PTR ds:[esi]
  4088d9:	lock mov al,0xb9
  4088dc:	push   es
  4088dd:	xlat   BYTE PTR ds:[ebx]
  4088de:	jl     0x4088f0
  4088e0:	cmp    ebp,ecx
  4088e2:	loope  0x408892
  4088e4:	test   al,0xfe
  4088e6:	inc    esi
  4088e7:	gs pusha 
  4088e9:	sub    eax,0x4260ab56
  4088ee:	adc    ecx,DWORD PTR [eax+0x4a]
  4088f1:	mov    edx,0x4527613f
  4088f6:	ds mov cl,0x54
  4088f9:	adc    eax,0x2c01afd2
  4088fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088ff:	lahf   
  408900:	mov    bl,0x8d
  408902:	dec    esi
  408903:	pop    esp
  408904:	ins    DWORD PTR es:[edi],dx
  408905:	sti    
  408906:	out    dx,al
  408907:	frstor [edi]
  408909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40890a:	mov    al,ds:0x31e5857
  40890f:	ja     0x40895b
  408911:	xor    cl,BYTE PTR ss:[ebp-0x27]
  408915:	pop    es
  408916:	adc    dh,BYTE PTR [ecx]
  408918:	(bad)  
  408919:	xlat   BYTE PTR ds:[ebx]
  40891a:	dec    edi
  40891b:	pop    eax
  40891c:	stc    
  40891d:	jp     0x40895c
  40891f:	sahf   
  408920:	mov    esp,0x65f5df86
  408925:	xchg   ebp,eax
  408926:	jle    0x408973
  408928:	push   esi
  408929:	push   es
  40892a:	push   ss
  40892b:	retf   
  40892c:	cld    
  40892d:	dec    ebx
  40892e:	cmp    esp,eax
  408930:	mov    esi,DWORD PTR [ebx-0x692d6a69]
  408936:	dec    DWORD PTR [ebp+0x4e]
  408939:	and    BYTE PTR [ebx+0x57],dh
  40893c:	mov    esp,0x528c0b9c
  408941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408942:	push   es
  408943:	imul   eax,DWORD PTR [esi+0x2c],0x254ae78d
  40894a:	sar    BYTE PTR [edi],1
  40894c:	sbb    esp,DWORD PTR [esi-0x7d]
  40894f:	xchg   esi,eax
  408950:	jl     0x40892f
  408952:	adc    cx,WORD PTR [eax]
  408955:	add    DWORD PTR [eax+edx*4-0xe],ebx
  408959:	dec    ebx
  40895a:	jo     0x4089ca
  40895c:	add    dl,BYTE PTR [edi+eiz*2-0x35]
  408960:	fdiv   DWORD PTR [edx+0x2601c71d]
  408966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408967:	pop    eax
  408968:	nop
  408969:	push   0x62874049
  40896e:	stos   BYTE PTR es:[edi],al
  40896f:	bound  edi,QWORD PTR [eax-0x79]
  408972:	dec    ebp
  408973:	mov    cl,0x41
  408975:	das    
  408976:	shr    BYTE PTR [ecx+ebp*4],cl
  408979:	sar    DWORD PTR [edx+0x54],cl
  40897c:	pop    ebp
  40897d:	adc    bl,BYTE PTR [ebp+0x30]
  408980:	pop    ebx
  408981:	in     al,dx
  408982:	push   0xffffffa4
  408984:	aaa    
  408985:	cwde   
  408986:	xchg   ecx,eax
  408987:	or     eax,0xef4bfe5d
  40898c:	xor    al,0xdb
  40898e:	xlat   BYTE PTR ds:[ebx]
  40898f:	push   ebp
  408990:	out    0x95,al
  408992:	dec    edi
  408993:	sbb    al,0xa9
  408995:	stos   DWORD PTR es:[edi],eax
  408996:	pop    es
  408997:	dec    ebx
  408998:	hlt    
  408999:	(bad)
  40899d:	arpl   di,bp
  40899f:	jle    0x4089cc
  4089a1:	jmp    0x5d7:0x7055ddb1
  4089a8:	loope  0x408a1f
  4089aa:	dec    eax
  4089ab:	sub    eax,0x3fd1309a
  4089b0:	mov    bh,0xe1
  4089b2:	push   0xefd87033
  4089b7:	push   ebx
  4089b8:	push   ebx
  4089b9:	or     DWORD PTR [edx-0x29693983],esp
  4089bf:	mov    ds:0xbae34764,eax
  4089c4:	outs   dx,DWORD PTR ds:[esi]
  4089c5:	or     esi,esp
  4089c7:	mov    bl,0x78
  4089c9:	mov    fs,WORD PTR [ebp+0x32]
  4089cc:	shl    BYTE PTR [ebp+ebx*2+0x10],1
  4089d0:	sub    ebx,ebx
  4089d2:	in     al,dx
  4089d3:	mov    esp,0x47dec844
  4089d8:	in     al,0x2
  4089da:	inc    ebx
  4089db:	fdecstp 
  4089dd:	or     DWORD PTR [esi+0x29af42a5],0xffffffe1
  4089e4:	pushf  
  4089e5:	imul   edi,DWORD PTR [edx-0x5d],0xffffff9e
  4089e9:	add    eax,0x584245e9
  4089ee:	fidivr WORD PTR [ecx+edi*8]
  4089f1:	in     al,dx
  4089f2:	repnz xchg esp,eax
  4089f4:	and    ah,BYTE PTR [ebx+esi*8]
  4089f7:	and    dl,bl
  4089f9:	mov    eax,ds:0x25864f6f
  4089fe:	mov    bl,0xa0
  408a00:	mov    esi,0x293fd673
  408a05:	inc    eax
  408a06:	pop    ds
  408a07:	in     al,0x73
  408a09:	mov    ds:0xe7c75670,eax
  408a0e:	les    ebp,FWORD PTR [ebx+0x4425e102]
  408a14:	call   0x6e34:0x824b41a2
  408a1b:	push   ds
  408a1c:	xor    eax,0xce05b274
  408a21:	dec    ebx
  408a22:	jno    0x4089f5
  408a24:	push   sp
  408a26:	adc    DWORD PTR [ebp-0x60],eax
  408a29:	fwait
  408a2a:	gs ins DWORD PTR es:[edi],dx
  408a2c:	(bad)  
  408a2d:	popa   
  408a2e:	repz fadd st,st(6)
  408a31:	lods   al,BYTE PTR ds:[esi]
  408a32:	sar    DWORD PTR [ebp+0x2ac4f9a0],0xb4
  408a39:	sub    ch,BYTE PTR [edi-0x8]
  408a3c:	sub    dl,BYTE PTR fs:[edx+0x4aa019c3]
  408a43:	mov    ecx,0x222a1862
  408a48:	lock or al,dh
  408a4b:	inc    esi
  408a4c:	aam    0x7b
  408a4e:	fld    DWORD PTR ds:[edi+0x7fb793da]
  408a55:	sbb    ch,bl
  408a57:	js     0x408a40
  408a59:	mov    edx,0x72526368
  408a5e:	mov    eax,DWORD PTR [esi]
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	es jmp 0x1818:0x57b5bc95
  408a7c:	sahf   
  408a7d:	adc    bl,BYTE PTR [eax]
  408a7f:	sbb    BYTE PTR [ecx-0x3420ff6a],cl
  408a85:	push   ss
  408a86:	add    bh,BYTE PTR [esi+0x2c]
  408a89:	jbe    0x408a32
  408a8b:	sbb    eax,0xc46de86b
  408a90:	mov    eax,0x7a053aa6
  408a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a96:	std    
  408a97:	mov    eax,ds:0x89bcac64
  408a9c:	idiv   DWORD PTR [ebx]
  408a9e:	out    dx,eax
  408a9f:	ror    DWORD PTR [ebx],0x51
  408aa2:	sub    edx,esp
  408aa4:	add    BYTE PTR [ebx],0x37
  408aa7:	or     dl,BYTE PTR [eax-0x51]
  408aaa:	mov    esi,0x6cfd4128
  408aaf:	mov    bh,cl
  408ab1:	jecxz  0x408a85
  408ab3:	arpl   WORD PTR [esi+eax*2+0x3f693466],di
  408aba:	retf   
  408abb:	in     al,0x3c
  408abd:	jbe    0x408adb
  408abf:	addr16 mov ebp,0xb702a2cd
  408ac5:	imul   ebx,DWORD PTR [ebp+0x597cfa4e],0x637bfc00
  408acf:	xor    esi,DWORD PTR [edx-0x7]
  408ad2:	aam    0x17
  408ad4:	pop    es
  408ad5:	and    esp,edi
  408ad7:	mov    ecx,0x4b1ec86f
  408adc:	ins    BYTE PTR es:[edi],dx
  408add:	pop    ds
  408ade:	cmp    al,0x9d
  408ae0:	push   ebx
  408ae1:	pushf  
  408ae2:	cmp    al,0x4b
  408ae4:	out    0xaf,al
  408ae6:	pop    esi
  408ae7:	hlt    
  408ae8:	loope  0x408a90
  408aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aeb:	fimul  DWORD PTR [esi+eiz*8-0x25aeef2a]
  408af2:	jl     0x408aba
  408af4:	or     al,dl
  408af6:	loop   0x408b69
  408af8:	inc    edi
  408af9:	mov    ebx,0xb9c466ce
  408afe:	jno    0x408ae0
  408b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b01:	jge    0x408b7c
  408b03:	dec    edx
  408b04:	arpl   WORD PTR [esi+0xd],cx
  408b07:	or     BYTE PTR [eax+eiz*8+0x155c3c2d],cl
  408b0e:	rcr    ch,cl
  408b10:	fidiv  WORD PTR [esi-0x2e90b630]
  408b16:	scas   eax,DWORD PTR es:[edi]
  408b17:	mov    ds:0x7a243b26,eax
  408b1c:	jno    0x408b72
  408b1e:	or     bl,BYTE PTR [eax-0x20f12c2e]
  408b24:	xchg   edx,eax
  408b25:	sub    DWORD PTR [ecx-0x77941122],ebp
  408b2b:	dec    ebp
  408b2c:	pop    eax
  408b2d:	xchg   ebx,eax
  408b2e:	push   ecx
  408b2f:	imul   ebx,DWORD PTR [eax+0x50],0x85eac31a
  408b36:	dec    esi
  408b37:	iret   
  408b38:	retf   0xf66e
  408b3b:	push   es
  408b3c:	pop    ebp
  408b3d:	push   ss
  408b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b3f:	sub    bl,bl
  408b41:	jmp    0x6906d744
  408b46:	shr    DWORD PTR [edx+0x625207eb],0x39
  408b4d:	in     eax,0xcf
  408b4f:	daa    
  408b50:	dec    eax
  408b51:	scas   eax,DWORD PTR es:[edi]
  408b52:	outs   dx,DWORD PTR ds:[esi]
  408b53:	jp     0x408afe
  408b55:	and    BYTE PTR [esi+0x58d65fcc],bh
  408b5b:	dec    eax
  408b5c:	lods   al,BYTE PTR ds:[esi]
  408b5d:	pop    ecx
  408b5e:	mov    esi,0x8f01b576
  408b63:	and    ecx,DWORD PTR [edx+0x24268c5a]
  408b69:	push   0x32
  408b6b:	aam    0xf8
  408b6d:	sub    eax,0x74
  408b70:	pop    ecx
  408b71:	das    
  408b72:	ret    
  408b73:	ror    BYTE PTR [ebx-0x5f],cl
  408b76:	or     BYTE PTR [edx-0x43],0xdf
  408b7a:	popa   
  408b7b:	icebp  
  408b7c:	pop    edi
  408b7d:	out    0x34,al
  408b7f:	in     al,0x66
  408b81:	mov    al,0x2e
  408b83:	sub    eax,DWORD PTR [edx+0x28e3dc4f]
  408b89:	cs ror edx,0xd6
  408b8d:	adc    ebx,DWORD PTR [ebp+0x7ab8454e]
  408b93:	pandn  mm3,QWORD PTR [ebx+0x2f0552e7]
  408b9a:	lods   al,BYTE PTR ds:[esi]
  408b9b:	pop    ds
  408b9c:	push   0x9957f0bd
  408ba1:	ss mov ebp,0xb8ed73e2
  408ba7:	fisubr DWORD PTR [ebp-0x6a3e63cc]
  408bad:	mov    bh,0x88
  408baf:	ds inc edx
  408bb1:	jno    0x408c16
  408bb3:	sbb    dh,BYTE PTR [ebx+0xb]
  408bb6:	push   0x11
  408bb8:	fadd   QWORD PTR [ecx]
  408bba:	or     ebx,0x596390c8
  408bc0:	sbb    eax,0x9fa631f1
  408bc5:	add    al,0x99
  408bc7:	add    edi,edi
  408bc9:	mov    dh,0xf3
  408bcb:	mov    esi,ds
  408bcd:	jl     0x408b98
  408bcf:	jae    0x408bdc
  408bd1:	and    DWORD PTR [esi],ebp
  408bd3:	jg     0x408be7
  408bd5:	xchg   esi,eax
  408bd6:	mov    cl,0x34
  408bd8:	pop    es
  408bd9:	sti    
  408bda:	retf   0xead0
  408bdd:	sbb    BYTE PTR [ebx+0x767bb371],ch
  408be3:	ins    BYTE PTR es:[edi],dx
  408be4:	retf   
  408be5:	push   edx
  408be6:	push   ss
  408be7:	mov    al,0x13
  408be9:	and    BYTE PTR [ebx-0x2c],0x1b
  408bed:	mov    al,0xa1
  408bef:	jmp    0x408bbc
  408bf1:	fcmovne st,st(1)
  408bf3:	fidiv  WORD PTR [edx+ecx*8+0x49]
  408bf7:	or     al,0xd0
  408bf9:	cmp    ah,al
  408bfb:	std    
  408bfc:	sti    
  408bfd:	mov    ecx,?
  408bff:	aam    0x9c
  408c01:	scas   al,BYTE PTR es:[edi]
  408c02:	add    edx,esi
  408c04:	pop    ebx
  408c05:	pop    ebx
  408c06:	mov    eax,ds:0x8759bec0
  408c0b:	adc    DWORD PTR [eax-0x32],esi
  408c0e:	les    esi,FWORD PTR [ebp-0x38721db]
  408c14:	sub    eax,0xe5a16a96
  408c19:	test   edx,ebp
  408c1b:	jp     0x408c31
  408c1d:	pop    edx
  408c1e:	into   
  408c1f:	(bad)  
  408c20:	push   ebx
  408c21:	pop    es
  408c22:	int    0xd
  408c24:	mov    al,0xe0
  408c26:	xor    esp,edi
  408c28:	jmp    0xe4c2:0x7aa864fc
  408c2f:	js     0x408c11
  408c31:	push   esi
  408c32:	sbb    al,0x48
  408c34:	stc    
  408c35:	ret    0xe13e
  408c38:	inc    ebx
  408c39:	mov    edx,0x1a03d85a
  408c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c40:	mov    ch,0xd1
  408c42:	mov    es,eax
  408c44:	aam    0x5e
  408c46:	lods   al,BYTE PTR ds:[esi]
  408c47:	rcl    dh,1
  408c49:	sub    al,BYTE PTR [ebx]
  408c4b:	xchg   ebx,eax
  408c4c:	sbb    DWORD PTR [ecx],ebp
  408c4e:	ins    BYTE PTR es:[edi],dx
  408c4f:	bound  ebx,QWORD PTR [ebp-0x7f16b39]
  408c55:	pop    ebx
  408c56:	and    bl,BYTE PTR [ebx]
  408c58:	pop    ds
  408c59:	shr    DWORD PTR [ecx-0x7eeeb8a5],0x46
  408c60:	xchg   ebp,eax
  408c61:	fldcw  WORD PTR [ebp+0x7b]
  408c64:	jmp    0x72f366ca
  408c69:	or     DWORD PTR [ebp-0x6],ebx
  408c6c:	icebp  
  408c6d:	add    eax,DWORD PTR [esi]
  408c6f:	sub    ebx,DWORD PTR [edi+ebp*1+0x65]
  408c73:	mov    bl,0x99
  408c75:	ror    BYTE PTR [eax+edx*4-0x5be61746],1
  408c7c:	pushf  
  408c7d:	out    0xfe,eax
  408c7f:	push   esp
  408c80:	leave  
  408c81:	hlt    
  408c82:	sub    BYTE PTR [edx-0x6fa5695b],ch
  408c88:	sbb    ecx,DWORD PTR [ecx-0x1a59ae0b]
  408c8e:	mov    BYTE PTR [edx],ch
  408c90:	(bad)  
  408c91:	xchg   edi,eax
  408c92:	sbb    DWORD PTR [ecx],edi
  408c94:	pusha  
  408c95:	iret   
  408c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c97:	pop    es
  408c98:	ret    
  408c99:	mov    ah,0xaa
  408c9b:	jmp    0x7ef1:0x8530475f
  408ca2:	mov    BYTE PTR [ebp-0x700db089],ch
  408ca8:	fstp   QWORD PTR [ebx-0x7f]
  408cab:	retf   
  408cac:	xchg   ebp,eax
  408cad:	cwde   
  408cae:	mov    esi,0x7c953ef1
  408cb3:	pop    ecx
  408cb4:	add    bl,bl
  408cb6:	pop    esi
  408cb7:	fnstenv [esi+0xb]
  408cba:	mov    dh,0xde
  408cbc:	ret    0x691f
  408cbf:	rcr    DWORD PTR [ebp+0x101a5551],0xd4
  408cc6:	out    dx,eax
  408cc7:	mov    edi,0xcc8ef9e6
  408ccc:	and    ch,dh
  408cce:	lods   eax,DWORD PTR ds:[esi]
  408ccf:	call   0xd77b9186
  408cd4:	jecxz  0x408cb0
  408cd6:	fisubr DWORD PTR [edx-0xc53bf9c]
  408cdc:	int    0x29
  408cde:	or     bh,ah
  408ce0:	dec    eax
  408ce1:	mov    edi,0x7d94e2fa
  408ce6:	ficom  WORD PTR [edx-0x3ee12991]
  408cec:	mov    al,ds:0xffc5c1ee
  408cf1:	cmp    DWORD PTR [eax-0x50],esp
  408cf4:	and    edi,DWORD PTR [eax]
  408cf6:	(bad)  
  408cf8:	repnz xlat BYTE PTR ds:[ebx]
  408cfa:	out    0xb6,eax
  408cfc:	adc    ch,BYTE PTR [esi+eax*1]
  408cff:	sub    BYTE PTR [edi-0x69],bh
  408d02:	inc    edx
  408d03:	xchg   esp,eax
  408d04:	xchg   esi,eax
  408d05:	jecxz  0x408d61
  408d07:	les    edi,FWORD PTR [ebx+0x282c81a4]
  408d0d:	(bad)  
  408d0e:	jp     0x408cef
  408d10:	xor    DWORD PTR [esi+0x9],esi
  408d13:	int    0x45
  408d15:	in     al,dx
  408d16:	xchg   ebx,eax
  408d17:	je     0x408d3c
  408d19:	cmp    BYTE PTR [edx],0xc4
  408d1c:	jne    0x408cbd
  408d1e:	dec    eax
  408d1f:	jb     0x408d29
  408d21:	jns    0x408cbc
  408d23:	sbb    esp,esp
  408d25:	test   eax,0xa23bdfaa
  408d2a:	xor    eax,0x66bc441c
  408d2f:	jo     0x408cc0
  408d31:	stos   BYTE PTR es:[edi],al
  408d32:	inc    ebp
  408d33:	xor    cl,BYTE PTR [ebx-0x3117bd2b]
  408d39:	fwait
  408d3a:	cmp    ah,BYTE PTR [edi]
  408d3c:	scas   eax,DWORD PTR es:[edi]
  408d3d:	sar    DWORD PTR [esi+0x7f],cl
  408d40:	add    al,0xff
  408d42:	jno    0x408d2b
  408d44:	inc    ecx
  408d45:	mov    eax,0x1bdbb40f
  408d4a:	bound  ebx,QWORD PTR [esi+0x7e]
  408d4d:	lods   al,BYTE PTR ds:[esi]
  408d4e:	pop    ss
  408d4f:	(bad)  
  408d50:	fsub   st,st(2)
  408d52:	add    edi,DWORD PTR [esi]
  408d54:	gs out dx,eax
  408d56:	test   eax,0x568f4a35
  408d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d5c:	mov    ecx,0x943967fd
  408d61:	inc    ecx
  408d62:	mov    edi,0xf945921b
  408d68:	pop    ecx
  408d69:	int    0x15
  408d6b:	ins    DWORD PTR es:[edi],dx
  408d6c:	sub    DWORD PTR [edi-0x32],esi
  408d6f:	out    dx,eax
  408d70:	dec    ebp
  408d71:	repnz mov BYTE PTR [ecx],ch
  408d74:	xor    DWORD PTR ds:0xfe304c25,esi
  408d7a:	inc    ebx
  408d7b:	sbb    BYTE PTR [ebx-0x4fb240dc],cl
  408d81:	lea    edi,[edi-0x5a]
  408d84:	fnsave [edx+edi*2-0xa7b444b]
  408d8b:	push   es
  408d8c:	push   0xd63f48d4
  408d91:	add    DWORD PTR [edx+0x7e46f5d8],ecx
  408d97:	push   ecx
  408d98:	pop    edi
  408d99:	retf   0x2bd3
  408d9c:	loopne 0x408db2
  408d9e:	test   dx,0xb068
  408da3:	pop    es
  408da4:	into   
  408da5:	mov    DWORD PTR [edi],eax
  408da7:	das    
  408da8:	adc    BYTE PTR [esi-0x32],bl
  408dab:	add    DWORD PTR [ebx+0x25012c37],esp
  408db1:	cmp    al,0x53
  408db4:	mov    ?,WORD PTR [edi+eiz*4]
  408db7:	push   ebx
  408db8:	es out dx,eax
  408dba:	mov    bl,0xb4
  408dbc:	or     BYTE PTR ds:0xfcf6faa6,ch
  408dc2:	arpl   WORD PTR [edi-0x6],ax
  408dc5:	fdivr  DWORD PTR [ebx+0x25]
  408dc8:	mov    ebx,0x531a2d64
  408dcd:	mov    esp,DWORD PTR [ecx+0x7ff11a7]
  408dd3:	inc    edi
  408dd4:	add    eax,DWORD PTR [eax-0x6e]
  408dd7:	and    al,BYTE PTR [eax-0x74cd1321]
  408ddd:	xchg   ebp,eax
  408dde:	(bad)  
  408de0:	jp     0x408e54
  408de2:	js     0x408e1b
  408de4:	push   edi
  408de5:	add    DWORD PTR [edx-0x53],ebp
  408de8:	inc    edi
  408de9:	adc    BYTE PTR [edi],0x9b
  408dec:	cmp    al,0x56
  408dee:	test   eax,0x837829ea
  408df3:	out    dx,eax
  408df4:	push   0x6c63abf2
  408df9:	ds xchg edx,eax
  408dfb:	adc    al,0x62
  408dfd:	dec    edx
  408dfe:	jns    0x408df4
  408e00:	mov    dl,BYTE PTR [ecx+0x14cceb58]
  408e06:	push   esp
  408e07:	dec    esi
  408e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e09:	jecxz  0x408deb
  408e0b:	fidiv  DWORD PTR [ebp-0x35]
  408e0e:	aam    0x14
  408e10:	(bad)  
  408e11:	rol    ebx,cl
  408e13:	pop    edi
  408e14:	dec    eax
  408e15:	retf   
  408e16:	mov    esp,0xdfecc092
  408e1b:	es xchg esp,eax
  408e1d:	push   esi
  408e1e:	ret    0xbe75
  408e21:	adc    BYTE PTR [esp+ebx*8+0x64d7d5d7],bh
  408e28:	inc    ecx
  408e29:	mov    bl,0x4f
  408e2b:	fisttp QWORD PTR [ebx+0x7215e235]
  408e31:	dec    esp
  408e32:	test   BYTE PTR [ebp+0x11],dh
  408e35:	jge    0x408e9b
  408e37:	xor    ah,BYTE PTR [ecx+0x215bdae6]
  408e3d:	iret   
  408e3e:	scas   al,BYTE PTR es:[edi]
  408e3f:	inc    BYTE PTR [ebp+0x2d0ac0f]
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	xchg   DWORD PTR ds:0x513a7cc7,ebp
  408e7b:	sbb    BYTE PTR [eax],bl
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    BYTE PTR [edi],al
  408e82:	mov    edx,edx
  408e84:	loopne 0x408ed3
  408e86:	dec    esi
  408e87:	cli    
  408e88:	jae    0x408e20
  408e8a:	mov    WORD PTR [ecx-0x24],ds
  408e8d:	add    eax,0x51d69ada
  408e92:	ret    0x7489
  408e95:	xor    edx,DWORD PTR cs:[edi]
  408e98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e99:	dec    esi
  408e9a:	add    eax,DWORD PTR [ebx-0x20]
  408e9d:	mov    ds:0x350ffcf3,eax
  408ea2:	dec    eax
  408ea3:	test   al,0x3
  408ea5:	xchg   edx,eax
  408ea6:	in     al,0xb9
  408ea8:	call   0x1d0c:0x8a76a5b4
  408eaf:	test   DWORD PTR [eax],esp
  408eb1:	mov    ecx,0x6d8faeac
  408eb6:	ret    0xce17
  408eb9:	aam    0x29
  408ebb:	leave  
  408ebc:	bound  edx,QWORD PTR [edx]
  408ebe:	adc    eax,0xfe72d12
  408ec3:	adc    DWORD PTR [ebx+0x1c],0xc0529fd3
  408eca:	push   esp
  408ecb:	jg     0x408f27
  408ecd:	add    ebp,esp
  408ecf:	sub    eax,0xbfcac204
  408ed4:	sahf   
  408ed5:	push   ds
  408ed6:	cli    
  408ed7:	add    cl,BYTE PTR [esi]
  408ed9:	sbb    DWORD PTR [ebx+0x26],eax
  408edc:	xchg   edi,eax
  408edd:	stos   DWORD PTR es:[edi],eax
  408ede:	lahf   
  408edf:	adc    al,0xa8
  408ee1:	mov    ds:0x7151b611,eax
  408ee6:	mov    ds:0x153597fd,eax
  408eeb:	(bad)  
  408eec:	in     al,dx
  408eed:	xor    al,0x11
  408eef:	xchg   edx,eax
  408ef0:	xor    BYTE PTR [ecx],dl
  408ef2:	mov    DWORD PTR [ecx],ecx
  408ef4:	lods   al,BYTE PTR ds:[esi]
  408ef5:	lock mov esi,0x76800afd
  408efb:	cli    
  408efc:	lahf   
  408efd:	jge    0x408eb5
  408eff:	imul   edx,DWORD PTR [ebp+0x47041463],0xffffffef
  408f06:	adc    BYTE PTR [ecx],ch
  408f08:	lds    ecx,FWORD PTR [esi]
  408f0a:	iret   
  408f0b:	sbb    DWORD PTR [eax-0x50],edx
  408f0e:	jmp    0x408f6f
  408f10:	(bad)  
  408f11:	fsubr  QWORD PTR [eax-0x68]
  408f14:	clc    
  408f15:	shl    ah,0x9a
  408f18:	fs and ebx,edi
  408f1b:	jmp    0x7621:0x2a1babc5
  408f22:	mov    ebx,0xe3b46956
  408f27:	sub    DWORD PTR [edx-0x6],edx
  408f2a:	retf   0x3e76
  408f2d:	clc    
  408f2e:	cmp    ebp,DWORD PTR [ebp-0xa]
  408f31:	in     al,0x45
  408f33:	fprem1 
  408f35:	addr16 hlt 
  408f37:	add    dh,BYTE PTR [edx]
  408f39:	(bad)
  408f3c:	stos   DWORD PTR es:[edi],eax
  408f3d:	iret   
  408f3e:	stos   DWORD PTR es:[edi],eax
  408f3f:	pusha  
  408f40:	mov    esp,0x8be8886a
  408f45:	bound  ebp,QWORD PTR [ebp-0x6ce994b6]
  408f4b:	jmp    0xf2bd5780
  408f50:	mov    eax,ds:0xecd4f743
  408f55:	cmp    eax,0x3397664
  408f5a:	xor    DWORD PTR [edi+0x2c],ebp
  408f5d:	pusha  
  408f5e:	and    BYTE PTR [ecx+ecx*4+0x49],bh
  408f62:	ja     0x408f47
  408f64:	fild   WORD PTR [ebx]
  408f66:	aas    
  408f67:	push   0x371e82ca
  408f6c:	dec    esi
  408f6d:	cmp    edi,DWORD PTR [edi-0x1b]
  408f70:	daa    
  408f71:	inc    esp
  408f72:	jge    0x408fda
  408f74:	sub    al,0x25
  408f76:	lds    edi,FWORD PTR [eax+0x63]
  408f79:	or     DWORD PTR [ecx-0x67],esp
  408f7c:	ret    0x10f6
  408f7f:	into   
  408f80:	add    al,0xde
  408f82:	cmp    eax,0x272a9bb7
  408f87:	clc    
  408f88:	xor    BYTE PTR [ecx],ah
  408f8a:	jnp    0x408f2a
  408f8c:	and    eax,0x84acaf26
  408f91:	add    al,0x8
  408f93:	ret    
  408f94:	inc    ebx
  408f95:	push   cs
  408f96:	push   0xffffffb7
  408f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f99:	in     al,0x36
  408f9b:	cmp    ecx,DWORD PTR [ebx-0x64]
  408f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f9f:	or     BYTE PTR ds:0x8fc9e678,bh
  408fa5:	sub    ecx,edi
  408fa7:	xor    al,0x60
  408faa:	mov    eax,0x3afbca4f
  408faf:	mov    ch,0xe6
  408fb1:	scas   al,BYTE PTR es:[edi]
  408fb2:	push   es
  408fb3:	ficom  WORD PTR [edx+0x7f52a162]
  408fb9:	iret   
  408fba:	push   cs
  408fbb:	jge    0x408f69
  408fbd:	cmc    
  408fbe:	cwd    
  408fc0:	in     eax,dx
  408fc1:	pop    eax
  408fc2:	sub    DWORD PTR [ebx-0x209930b5],ecx
  408fc8:	and    esp,edx
  408fca:	jae    0x408fd7
  408fcc:	scas   eax,DWORD PTR es:[edi]
  408fcd:	stc    
  408fce:	inc    ecx
  408fcf:	add    edi,DWORD PTR [edi+0x328adcfe]
  408fd5:	mov    WORD PTR [esi],fs
  408fd7:	scas   al,BYTE PTR es:[edi]
  408fd8:	es jbe 0x408feb
  408fdb:	or     BYTE PTR fs:[ecx+0x1420fd23],bl
  408fe2:	pusha  
  408fe3:	xor    al,0x86
  408fe5:	not    BYTE PTR [ecx-0x4a5c68c6]
  408feb:	xchg   DWORD PTR [ebx],eax
  408fed:	dec    BYTE PTR ds:0x623edf6c
  408ff3:	fst    QWORD PTR [edi]
  408ff5:	loope  0x408f8d
  408ff7:	push   ecx
  408ff8:	pop    edi
  408ff9:	aaa    
  408ffa:	or     cl,ch
  408ffc:	ret    
  408ffd:	fsub   DWORD PTR [edi]
  408fff:	call   0xb426:0xd5a14d0a
  409006:	cld    
  409007:	fnsave [ebp-0x285b8333]
  40900d:	xchg   ebp,ebp
  40900f:	outs   dx,DWORD PTR ds:[esi]
  409010:	sub    DWORD PTR ds:0x150d17d9,esp
  409016:	ss int 0x5e
  409019:	mov    ah,BYTE PTR [esi]
  40901b:	adc    DWORD PTR [eax+0x67cdf595],esp
  409021:	in     al,dx
  409022:	mov    esp,0x19f2fa7a
  409027:	shl    BYTE PTR [ebp+0xf],cl
  40902a:	sbb    eax,0x8e205ba5
  40902f:	test   esp,eax
  409031:	out    dx,al
  409032:	mov    ecx,0xb66d799a
  409037:	scas   eax,DWORD PTR es:[edi]
  409038:	mov    bh,0x83
  40903a:	push   edi
  40903b:	fnsave [ebx-0x202522bd]
  409041:	push   ecx
  409042:	adc    ebp,DWORD PTR [eax-0x76]
  409045:	imul   DWORD PTR [eax]
  409047:	cmp    BYTE PTR [esi+edi*8+0x1b],ah
  40904b:	push   ebx
  40904c:	loopne 0x409003
  40904e:	mov    al,ds:0xee4e76a5
  409053:	and    al,0x40
  409055:	mov    esp,0x34f3966a
  40905a:	cmp    dh,BYTE PTR [edx+0x12]
  40905d:	inc    esi
  40905e:	rcr    DWORD PTR [ebx+ebp*1],cl
  409061:	lds    esp,FWORD PTR [ebx]
  409063:	out    dx,eax
  409064:	stos   BYTE PTR es:[edi],al
  409065:	xor    di,sp
  409068:	inc    esi
  409069:	das    
  40906a:	ret    0x4b9c
  40906d:	out    0xb6,eax
  40906f:	dec    ebp
  409070:	ss and dh,ah
  409073:	adc    DWORD PTR [edx],0xf1d6d01e
  409079:	pusha  
  40907a:	outs   dx,DWORD PTR ds:[esi]
  40907b:	dec    edi
  40907c:	adc    edx,DWORD PTR [ebp+0x3bc67613]
  409082:	lock jp 0x4090a2
  409085:	add    BYTE PTR [ecx],bl
  409087:	inc    edx
  409088:	dec    esi
  409089:	inc    esp
  40908a:	jle    0x4090aa
  40908c:	repnz add ch,BYTE PTR [ebp+0x6a]
  409090:	xlat   BYTE PTR ds:[ebx]
  409091:	cli    
  409092:	ins    DWORD PTR es:[edi],dx
  409093:	test   DWORD PTR [ebp-0x302f49b],0x943ad28
  40909d:	push   eax
  40909e:	or     al,0xd
  4090a0:	lods   eax,DWORD PTR ds:[esi]
  4090a1:	call   0x6936:0xe9194541
  4090a8:	inc    ebp
  4090a9:	fcmovnbe st,st(1)
  4090ab:	sbb    BYTE PTR [edx+ecx*2-0x3d],dl
  4090af:	loopne 0x40903b
  4090b1:	fwait
  4090b2:	les    eax,FWORD PTR [ebp+0x69]
  4090b5:	add    eax,0x1845cd00
  4090ba:	out    0xed,eax
  4090bc:	push   ds
  4090bd:	add    BYTE PTR [ecx+0x579ef5ff],ch
  4090c3:	pop    eax
  4090c4:	adc    dh,BYTE PTR [ebx-0x585846dc]
  4090ca:	scas   al,BYTE PTR es:[edi]
  4090cb:	jle    0x409074
  4090cd:	sbb    BYTE PTR [eax-0x1f998ced],al
  4090d3:	add    eax,0x5a9d078b
  4090d8:	jbe    0x409128
  4090da:	xor    ecx,DWORD PTR [edx]
  4090dc:	and    bl,ch
  4090de:	dec    ebp
  4090df:	icebp  
  4090e0:	push   ss
  4090e1:	rol    DWORD PTR [edi],0xa2
  4090e4:	loope  0x409113
  4090e6:	icebp  
  4090e7:	jae    0x4090cc
  4090e9:	xchg   edx,eax
  4090ea:	mov    bl,0x2f
  4090ec:	aas    
  4090ed:	(bad)  
  4090ee:	cdq    
  4090ef:	fdivrp st(1),st
  4090f1:	sti    
  4090f2:	jle    0x4090c4
  4090f4:	push   ebp
  4090f5:	(bad)
  4090f8:	cld    
  4090f9:	out    dx,eax
  4090fa:	jge    0x4090c8
  4090fc:	xchg   esp,eax
  4090fd:	xchg   esi,eax
  4090fe:	div    BYTE PTR [edi-0x2d]
  409101:	aaa    
  409102:	jecxz  0x4090cb
  409104:	xor    esi,esp
  409106:	shl    DWORD PTR [bp+si+0xe1e],0x35
  40910c:	push   0xffffffd9
  40910e:	push   ecx
  40910f:	cmp    ebx,edi
  409111:	add    dh,bh
  409113:	shl    esp,cl
  409115:	loopne 0x40912e
  409117:	mov    edx,0x8a2d70b9
  40911c:	pop    ebp
  40911d:	inc    ecx
  40911e:	scas   eax,DWORD PTR es:[edi]
  40911f:	and    al,0x6a
  409121:	fs je  0x409178
  409124:	frstor [ecx+ebp*2+0x21]
  409128:	fwait
  409129:	into   
  40912a:	pop    ebx
  40912b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912c:	sbb    BYTE PTR [edi+edx*2],bl
  40912f:	arpl   WORD PTR [ebx-0xbe958a0],si
  409135:	adc    ebp,DWORD PTR [esi]
  409137:	cmc    
  409138:	retf   
  409139:	bound  ebx,QWORD PTR [ebp-0x74]
  40913c:	iret   
  40913d:	in     al,dx
  40913e:	loop   0x4090dd
  409140:	pop    es
  409141:	out    dx,al
  409142:	shl    BYTE PTR [ecx+0x6eda07c1],1
  409148:	push   esp
  409149:	push   ebx
  40914a:	shl    BYTE PTR [edx],0x69
  40914d:	mov    ah,0x48
  40914f:	xor    ebp,esp
  409151:	into   
  409152:	sub    ch,BYTE PTR [edi-0x2]
  409155:	inc    ecx
  409156:	loope  0x409154
  409158:	dec    ecx
  409159:	cmp    eax,0x6ea45598
  40915e:	mov    esi,0x80625a79
  409163:	xchg   DWORD PTR [ecx+0x1f1cd33],edi
  409169:	data16 cli 
  40916b:	ins    DWORD PTR es:[edi],dx
  40916c:	jae    0x409101
  40916e:	sbb    dh,BYTE PTR [ebx-0x80]
  409171:	jp     0x4091bb
  409173:	imul   edi,DWORD PTR [esp+edx*8],0x6d
  409177:	xchg   ebx,esi
  409179:	push   edx
  40917a:	mov    edi,0x8d5fa784
  40917f:	sub    ch,BYTE PTR [edi+0xd]
  409182:	and    al,0x50
  409184:	pushf  
  409185:	inc    edi
  409186:	mov    ah,0xf6
  409188:	lds    esp,FWORD PTR [esi-0x9c74331]
  40918e:	rcl    bl,0x13
  409191:	sub    eax,0x371b0d0e
  409196:	sti    
  409197:	js     0x40913c
  409199:	sbb    DWORD PTR [esi+0x4d565979],ecx
  40919f:	ret    0x10b6
  4091a2:	neg    BYTE PTR [ebp+0x27]
  4091a5:	cdq    
  4091a6:	(bad)  
  4091a7:	scas   eax,DWORD PTR es:[edi]
  4091a8:	adc    DWORD PTR [edi+0x52],esi
  4091ab:	and    BYTE PTR [ecx-0x3b],0xe7
  4091af:	test   BYTE PTR [ecx+0x2b],0x88
  4091b3:	xchg   ecx,eax
  4091b4:	loope  0x4091d5
  4091b6:	stos   DWORD PTR es:[edi],eax
  4091b7:	push   ecx
  4091b8:	ror    BYTE PTR [esi-0x7c],0xa9
  4091bc:	test   al,0x64
  4091be:	in     al,0xe1
  4091c0:	jo     0x697aa5c9
  4091c6:	aam    0x29
  4091c8:	in     al,0x87
  4091ca:	aas    
  4091cb:	loope  0x40920a
  4091cd:	clc    
  4091ce:	lahf   
  4091cf:	(bad)  [ecx+0x33065509]
  4091d5:	mov    eax,ds:0xedbbe91d
  4091da:	fs stc 
  4091dc:	xchg   ebx,eax
  4091dd:	sbb    eax,0x73c5a869
  4091e2:	push   0x23
  4091e4:	shl    DWORD PTR [esp+esi*2],0xb3
  4091e8:	ins    BYTE PTR es:[edi],dx
  4091e9:	push   ebp
  4091ea:	lods   al,BYTE PTR ds:[esi]
  4091eb:	shr    BYTE PTR fs:[esi+0x20fb893e],cl
  4091f2:	sbb    eax,0xed59ebdf
  4091f7:	repz sub DWORD PTR [ebx+0x23dec6de],eax
  4091fe:	push   eax
  4091ff:	into   
  409200:	fild   QWORD PTR [esi]
  409202:	push   ss
  409203:	dec    edi
  409204:	mov    ds:0xa909ee1a,al
  409209:	clc    
  40920a:	fwait
  40920b:	shr    DWORD PTR [edi],cl
  40920d:	js     0x40927f
  40920f:	pop    es
  409210:	je     0x409273
  409212:	cdq    
  409213:	inc    eax
  409214:	inc    edi
  409215:	shl    BYTE PTR [esi-0x29db252c],1
  40921b:	stos   BYTE PTR es:[edi],al
  40921c:	ds mov dl,0xbc
  40921f:	cli    
  409220:	imul   edx,DWORD PTR ds:0x380adba2,0x8cbd898c
  40922a:	or     cl,BYTE PTR [eax]
  40922c:	mov    dh,0x6c
  40922e:	adc    al,0x77
  409230:	pusha  
  409231:	xor    BYTE PTR [edx],bh
  409233:	sbb    eax,0xa4592682
  409238:	jb     0x409264
  40923a:	shr    DWORD PTR [ebx-0x72],0xfe
  40923e:	mov    ecx,DWORD PTR [edx-0x35]
  409241:	imul   esi,DWORD PTR [ebx],0xffffffd2
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0x6565ae70
  409261:	mov    esp,0x181849c0
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [ecx],ch
  40926b:	xor    BYTE PTR [ebx],bh
  40926d:	(bad)  
  40926f:	mov    ds:0xcaa9f907,eax
  409274:	cmc    
  409275:	ds mov dh,0xf5
  409278:	xchg   ebx,eax
  409279:	dec    esp
  40927a:	inc    ecx
  40927b:	mov    BYTE PTR [edx+esi*8],al
  40927e:	jmp    DWORD PTR [eax-0x1d]
  409281:	mov    al,0xd7
  409283:	xchg   edi,eax
  409284:	mov    al,ds:0xea8e698
  409289:	and    DWORD PTR [edi-0xccb923],edi
  40928f:	xchg   ecx,eax
  409291:	nop
  409292:	mov    ds:0x16d43e9e,al
  409297:	cmp    eax,0xac43f35c
  40929c:	stc    
  40929d:	fwait
  40929e:	mov    esp,0x963b1059
  4092a3:	mov    bh,0x64
  4092a5:	call   0x3c957ffc
  4092aa:	pop    ds
  4092ab:	and    DWORD PTR [ecx],edi
  4092ad:	ds inc ebp
  4092af:	sbb    edi,DWORD PTR [esi]
  4092b1:	xor    edx,DWORD PTR [ecx+0x7]
  4092b4:	xchg   ecx,eax
  4092b5:	jo     0x409237
  4092b7:	adc    eax,0xf0aec0d8
  4092bc:	adc    edi,DWORD PTR ds:0x8cadc771
  4092c2:	bound  edi,QWORD PTR [esi-0x34959fef]
  4092c8:	mov    eax,DWORD PTR [ecx+0x12]
  4092cb:	imul   DWORD PTR [edi-0x29]
  4092ce:	mov    eax,0x2ec1bf65
  4092d3:	arpl   di,sp
  4092d5:	retf   
  4092d6:	adc    ebx,edi
  4092d8:	mov    cs,WORD PTR ds:0x8d577b8b
  4092de:	imul   edx,DWORD PTR [edi],0xffffff8f
  4092e1:	and    bl,al
  4092e3:	cli    
  4092e4:	jg     0x40935c
  4092e6:	xor    cl,BYTE PTR [eax+0x2aac6eb4]
  4092ec:	push   edx
  4092ed:	mov    edi,0xea89fde0
  4092f2:	xor    edx,edx
  4092f4:	sar    BYTE PTR [edi+esi*4-0x5e09ef6f],0x37
  4092fc:	leave  
  4092fd:	imul   ebx,DWORD PTR [ebp+0x51269c25],0x12
  409304:	pop    eax
  409305:	mov    ecx,DWORD PTR [eax-0x705af761]
  40930b:	aam    0x7a
  40930d:	ficom  WORD PTR [ebp-0x2e5e72c6]
  409313:	outs   dx,BYTE PTR ds:[esi]
  409314:	fwait
  409315:	test   eax,0x92993131
  40931a:	pop    edi
  40931b:	push   edx
  40931c:	jnp    0x4092c5
  40931e:	mov    DWORD PTR [ebx+eiz*4-0x70],esp
  409322:	mov    dl,0x78
  409324:	cdq    
  409325:	daa    
  409326:	cmp    cl,al
  409328:	stc    
  409329:	mov    ecx,0x61c3c97d
  40932e:	mov    dl,0xe3
  409330:	test   DWORD PTR [eiz*2-0x44dce97],edi
  409337:	(bad)  es:[eax+eax*2]
  40933b:	call   0xeea365eb
  409340:	aas    
  409341:	xlat   BYTE PTR ds:[ebx]
  409342:	cmp    dl,bl
  409344:	inc    DWORD PTR [ebx-0x342ce3b4]
  40934a:	aam    0x20
  40934c:	dec    eax
  40934d:	mov    es,edx
  40934f:	bound  ebx,QWORD PTR [edx]
  409351:	jns    0x4092d4
  409353:	je     0x4092ee
  409355:	mul    DWORD PTR ss:0x6cc9b671
  40935c:	dec    edx
  40935d:	inc    edi
  40935e:	or     DWORD PTR [edi+0x4154cfd8],edi
  409364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409365:	pusha  
  409366:	inc    esp
  409367:	xchg   esi,eax
  409368:	test   DWORD PTR [ecx+0x42208c14],edi
  40936e:	pop    eax
  40936f:	jbe    0x4093f0
  409371:	push   eax
  409372:	mov    bh,0x9d
  409374:	lea    ecx,[eax+0x63aeb2bc]
  40937a:	mov    cl,0x2a
  40937c:	cli    
  40937d:	(bad)  
  40937f:	rol    BYTE PTR [ecx+0x139ed7bf],cl
  409385:	inc    ebp
  409386:	ins    BYTE PTR es:[edi],dx
  409387:	dec    edx
  409388:	adc    BYTE PTR [esi-0x3ec249c7],0x35
  40938f:	sub    DWORD PTR [esi-0x6243b735],eax
  409395:	mov    dl,0x10
  409397:	xchg   ebx,eax
  409398:	lea    edi,[esp+ecx*1]
  40939b:	enter  0x936a,0xd2
  40939f:	cdq    
  4093a0:	pop    ecx
  4093a1:	int    0xc8
  4093a3:	cwde   
  4093a4:	(bad)  
  4093a6:	ror    ebx,1
  4093a8:	idiv   DWORD PTR [ecx]
  4093aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ab:	xchg   esp,eax
  4093ac:	mov    eax,0x94d918db
  4093b1:	mov    ecx,0x104a03f2
  4093b6:	mov    al,0xb9
  4093b8:	imul   esp,DWORD PTR [ecx],0x41
  4093bb:	dec    ebx
  4093bc:	scas   eax,DWORD PTR es:[edi]
  4093bd:	aaa    
  4093be:	rcl    DWORD PTR [edx+0x3f043b7f],cl
  4093c4:	mov    ds:0x8215f4b6,al
  4093c9:	(bad)  
  4093ca:	stos   DWORD PTR es:[edi],eax
  4093cb:	sub    eax,0x2e09f047
  4093d0:	cmp    BYTE PTR ds:0x2105e5dd,bl
  4093d6:	loopne 0x40936a
  4093d8:	xchg   esp,eax
  4093d9:	mov    bh,0xca
  4093db:	repz mov ?,WORD PTR [edx-0x56d0d7eb]
  4093e2:	sbb    eax,0xe3d8ab97
  4093e7:	jae    0x40945d
  4093e9:	loopne 0x409370
  4093eb:	idiv   DWORD PTR [eax+0x63fb82ae]
  4093f1:	nop
  4093f2:	add    eax,0x37a656f7
  4093f7:	pop    ebx
  4093f8:	mov    WORD PTR [ebp-0x7c95aac1],gs
  4093fe:	lock mov al,0x25
  409401:	cmp    bh,BYTE PTR [edi+0x3d]
  409404:	hlt    
  409405:	mov    eax,0xd9c2bd0d
  40940a:	push   ss
  40940b:	(bad)  [esi+0x45dff440]
  409411:	mov    al,BYTE PTR [ebx]
  409413:	dec    eax
  409414:	(bad)  
  409415:	imul   esi,DWORD PTR [edx],0xffffffc3
  409418:	xor    DWORD PTR [ecx+0x28adfd86],ecx
  40941e:	fcmovbe st,st(1)
  409420:	call   0xfc28ae9
  409425:	neg    DWORD PTR ds:0x71d44835
  40942b:	(bad)  
  40942c:	in     al,dx
  40942d:	add    bh,BYTE PTR [edi-0x3149d231]
  409433:	and    BYTE PTR [eax],bh
  409435:	dec    esi
  409436:	sub    eax,0x50afb433
  40943b:	push   0x6c33546b
  409440:	jecxz  0x4093f8
  409442:	adc    eax,0x2bee3c88
  409447:	mov    ebx,0xb713821d
  40944c:	mov    bh,0x20
  40944e:	retf   
  40944f:	mov    esp,0x9d3da40e
  409454:	aam    0xa1
  409456:	mov    ch,0x34
  409458:	shl    DWORD PTR [eax-0x41c0b8eb],cl
  40945e:	scas   al,BYTE PTR es:[edi]
  40945f:	test   al,0xe7
  409461:	xchg   esi,eax
  409462:	fild   WORD PTR [eax+ebx*2]
  409465:	stc    
  409466:	ss or  eax,0x98163aef
  40946c:	xor    BYTE PTR [edi-0x6600e923],0x1
  409473:	test   BYTE PTR [eax],al
  409475:	pop    es
  409476:	imul   edi
  409478:	retf   0xb3cd
  40947b:	mov    esp,0x513ad3d1
  409480:	jae    0x4094bd
  409482:	xor    BYTE PTR [edx+esi*1+0x785a45bf],dl
  409489:	cld    
  40948a:	test   al,0x52
  40948c:	or     ecx,0xea294533
  409492:	sbb    ebp,edi
  409494:	fild   QWORD PTR [esi-0x1e]
  409497:	in     eax,0xc
  409499:	pop    ecx
  40949a:	adc    DWORD PTR fs:[esi+0x48],edx
  40949e:	icebp  
  40949f:	fcom   QWORD PTR [edi+ecx*4]
  4094a2:	or     DWORD PTR [edx],0x75238ff8
  4094a8:	and    ecx,esi
  4094aa:	call   0xa59:0xdc80013a
  4094b1:	call   0xa68b:0x8ba1ebdd
  4094b8:	inc    edx
  4094b9:	or     esp,DWORD PTR [ebx]
  4094bb:	(bad)  
  4094bc:	xchg   ebp,eax
  4094bd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4094bf:	and    edi,DWORD PTR [edi]
  4094c1:	xor    BYTE PTR [edi],cl
  4094c3:	xor    DWORD PTR [edi],eax
  4094c5:	jg     0x4094ee
  4094c7:	and    al,0xfa
  4094c9:	nop
  4094ca:	cmc    
  4094cb:	push   ebp
  4094cc:	data16 jnp 0x4094c7
  4094cf:	or     eax,0xf7706a97
  4094d4:	mov    eax,ds:0xb5c02fbc
  4094d9:	(bad)  
  4094db:	cmp    edi,DWORD PTR [esi]
  4094dd:	mov    edx,0x99f73686
  4094e2:	sbb    edx,DWORD PTR [eax-0x218af594]
  4094e8:	rcl    BYTE PTR [edi],0x25
  4094eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094ec:	xlat   BYTE PTR cs:[ebx]
  4094ee:	jge    0x4094d7
  4094f0:	sub    bh,dh
  4094f2:	dec    esp
  4094f3:	je     0x4094d8
  4094f5:	popf   
  4094f6:	into   
  4094f7:	push   esi
  4094f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094f9:	inc    ebp
  4094fa:	adc    al,0x79
  4094fc:	ror    DWORD PTR [ebx-0x6d],0x4b
  409500:	inc    ebp
  409501:	mov    bl,0x8c
  409503:	iret   
  409504:	not    BYTE PTR [eax-0x294aeb4c]
  40950a:	sub    al,0xc7
  40950c:	ins    DWORD PTR es:[edi],dx
  40950d:	and    edx,DWORD PTR [edx]
  40950f:	pop    ecx
  409510:	xchg   ecx,eax
  409511:	ja     0x4094b8
  409513:	rol    DWORD PTR [eax+0x4c],0xfd
  409517:	mov    ebx,0x120688f8
  40951c:	adc    al,0x27
  40951e:	outs   dx,DWORD PTR ds:[esi]
  40951f:	loop   0x40957b
  409521:	stc    
  409522:	inc    edx
  409523:	dec    ebx
  409524:	sbb    al,0xeb
  409526:	and    bh,BYTE PTR [esi-0x41]
  409529:	sub    eax,0x3d7032c2
  40952e:	and    eax,0x85ffdbc6
  409533:	call   0x47f061d2
  409538:	push   0x5f6d2ce7
  40953d:	dec    ebp
  40953e:	scas   eax,DWORD PTR es:[edi]
  40953f:	sar    DWORD PTR [eax],1
  409541:	dec    edx
  409542:	fdivr  QWORD PTR [edi-0x5b0a405]
  409548:	pop    ecx
  409549:	sbb    eax,ecx
  40954b:	(bad)  
  40954c:	jmp    0xc97cd451
  409551:	stos   BYTE PTR es:[edi],al
  409552:	push   ebx
  409553:	in     al,0x16
  409555:	addr16 fs aad 0x5d
  409559:	inc    eax
  40955a:	out    dx,eax
  40955b:	dec    esi
  40955c:	pop    ebp
  40955d:	sbb    bh,ch
  40955f:	aaa    
  409560:	or     eax,0xa10f9191
  409565:	add    al,0x7a
  409567:	gs pushf 
  409569:	mov    eax,DWORD PTR [esi+0x452e91a2]
  40956f:	pop    ss
  409570:	ror    ebx,0xdf
  409573:	fstp   TBYTE PTR [eax]
  409575:	loop   0x409561
  409577:	fistp  WORD PTR [esi+0x2c9d5055]
  40957d:	stos   DWORD PTR es:[edi],eax
  40957e:	inc    edx
  40957f:	sub    DWORD PTR [ebp+0x35],esi
  409582:	mov    ebp,DWORD PTR [edi+edi*1+0x3a]
  409586:	(bad)
  409589:	xor    ebp,esp
  40958b:	push   ecx
  40958c:	xchg   edx,eax
  40958d:	(bad)  
  40958e:	hlt    
  40958f:	lahf   
  409590:	mov    edi,0x1d9037cc
  409595:	adc    bh,BYTE PTR [edi]
  409597:	and    cl,BYTE PTR [ebx]
  409599:	pop    edx
  40959a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959b:	xor    bh,dl
  40959d:	adc    eax,0xef84fc0a
  4095a2:	mov    edi,0x4e8a34ba
  4095a7:	jae    0x409594
  4095a9:	in     eax,0xd7
  4095ab:	jb     0x4095ab
  4095ad:	xchg   edi,eax
  4095ae:	or     esp,DWORD PTR [eax-0x73]
  4095b1:	jmp    0xc7c4:0xb065a22e
  4095b8:	jno    0x409621
  4095ba:	sub    BYTE PTR [esi-0x6d],dl
  4095bd:	sbb    bl,cl
  4095bf:	test   eax,0xdca47929
  4095c4:	pushf  
  4095c5:	lds    edi,FWORD PTR [ecx+0x6b620556]
  4095cb:	sub    cl,0xee
  4095ce:	fcomi  st,st(4)
  4095d0:	add    ecx,DWORD PTR [ebp-0x56]
  4095d3:	gs xchg dl,cl
  4095d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095d7:	les    ecx,FWORD PTR ss:[esi-0x4847f53e]
  4095de:	sbb    eax,DWORD PTR [eax-0x46dfa99c]
  4095e4:	fs dec esp
  4095e6:	xchg   edi,eax
  4095e7:	push   ecx
  4095e8:	mov    ecx,DWORD PTR [edi-0x78]
  4095eb:	cmp    al,0x22
  4095ed:	push   0xdf52af26
  4095f2:	pop    edx
  4095f3:	ja     0x4095bb
  4095f5:	mov    ds:0x9991eaf5,al
  4095fa:	pop    edi
  4095fb:	mov    bl,0x0
  4095fd:	rcl    DWORD PTR [ebp+0x53e1f46],1
  409603:	inc    esi
  409604:	mul    DWORD PTR [edi]
  409606:	pop    esi
  409607:	ins    BYTE PTR es:[edi],dx
  409608:	adc    dl,ch
  40960a:	jb     0x4095ff
  40960c:	sbb    bh,dl
  40960e:	and    ebx,DWORD PTR [ecx-0x3b252f56]
  409614:	push   edx
  409615:	add    eax,0x51e21fbd
  40961a:	jo     0x409660
  40961c:	mov    bl,0xd3
  40961e:	pop    ebx
  40961f:	adc    eax,DWORD PTR ds:0xb1c916a0
  409625:	xor    BYTE PTR [edi],bh
  409627:	dec    ebp
  409628:	inc    edi
  409629:	ret    
  40962a:	adc    al,0x8b
  40962c:	push   ss
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422588
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x25bca5c6
  4097de:	xchg   esi,ebp
  4097e0:	mov    esi,0x18184147
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [ecx+0x73f873a2],dl
  4097ee:	adc    DWORD PTR [ebx-0x31ed5544],esp
  4097f4:	xlat   BYTE PTR ds:[ebx]
  4097f5:	jb     0x409829
  4097f7:	cmp    al,0x31
  4097f9:	xchg   esp,eax
  4097fa:	lock ins DWORD PTR es:[edi],dx
  4097fc:	push   ds
  4097fd:	(bad)  
  4097fe:	cmp    DWORD PTR [esi+0x481bc08f],edi
  409804:	sub    esi,DWORD PTR [eax]
  409806:	lahf   
  409807:	mov    al,0x8a
  409809:	xlat   BYTE PTR ds:[ebx]
  40980a:	pop    ds
  40980b:	(bad)  
  40980c:	fimul  WORD PTR [ebp+0x143852e4]
  409812:	add    esi,DWORD PTR [ebp+0x7b]
  409815:	data16 cmp dh,BYTE PTR [ecx-0x5974a9de]
  40981c:	pop    ebp
  40981d:	sub    DWORD PTR [esi-0x4],edx
  409820:	push   ss
  409821:	xor    ebp,edx
  409823:	xchg   ebx,eax
  409824:	retf   
  409825:	repz pop ebx
  409827:	adc    BYTE PTR [ebp-0x63b56588],dl
  40982d:	outs   dx,DWORD PTR ds:[esi]
  40982e:	dec    esi
  40982f:	outs   dx,BYTE PTR ds:[esi]
  409830:	rcl    DWORD PTR [ecx+0x24b1b991],0xdd
  409837:	pop    ecx
  409838:	jmp    0x258c:0x1f6c4f6a
  40983f:	inc    ebp
  409840:	sub    al,0x67
  409842:	adc    DWORD PTR [edx],esp
  409844:	sub    ebx,ecx
  409846:	sub    DWORD PTR [edx+0x7b],ebp
  409849:	jmp    0xf5d002a9
  40984e:	sub    eax,0x14a6ab92
  409853:	or     BYTE PTR [edi-0x27],bh
  409856:	(bad)  
  409857:	in     al,0xae
  409859:	inc    edi
  40985a:	xchg   edi,eax
  40985b:	call   FWORD PTR [ebp-0x2]
  40985e:	xchg   DWORD PTR [edi-0x3e],esp
  409861:	pop    edx
  409862:	xchg   edx,eax
  409863:	mov    ecx,0x906f836b
  409868:	mov    dl,0xf2
  40986a:	xor    BYTE PTR [ecx+eax*4],dl
  40986d:	sbb    eax,0xdb12963d
  409872:	int    0xd
  409874:	push   ds
  409875:	push   es
  409876:	iret   
  409877:	fmul   DWORD PTR [esi+0x2cdc5b1c]
  40987d:	into   
  40987e:	pop    ds
  40987f:	iret   
  409880:	cwde   
  409881:	pop    edx
  409882:	in     al,dx
  409883:	pop    esi
  409884:	lahf   
  409885:	jecxz  0x4098da
  409887:	xor    edx,DWORD PTR [eax+0x27fb16c7]
  40988d:	popa   
  40988e:	dec    ebx
  40988f:	mov    bl,0xbc
  409891:	mov    al,0x33
  409893:	lea    esi,[ecx-0x50]
  409896:	fisttp WORD PTR [eax+0x48]
  409899:	sub    al,0x19
  40989b:	(bad)  
  40989c:	or     DWORD PTR [edx+esi*2],eax
  40989f:	cli    
  4098a0:	aas    
  4098a1:	jmp    FWORD PTR [esi]
  4098a3:	fwait
  4098a4:	mov    ch,0xe5
  4098a6:	xchg   esp,eax
  4098a7:	cmc    
  4098a8:	lds    edx,FWORD PTR [ebx+eiz*1+0x76]
  4098ac:	sbb    ebp,DWORD PTR cs:[edi+0x79]
  4098b0:	mov    esi,ebp
  4098b2:	ror    DWORD PTR [eax-0x1e4dfaae],1
  4098b8:	nop
  4098b9:	pop    esi
  4098ba:	sbb    dl,bh
  4098bc:	add    cl,BYTE PTR [esi+0x1f6a2eb]
  4098c2:	cmp    al,0xaa
  4098c4:	(bad)  
  4098c5:	dec    edi
  4098c6:	sbb    esi,ebp
  4098c8:	xchg   edi,eax
  4098c9:	in     al,0x39
  4098cb:	cli    
  4098cc:	pop    es
  4098cd:	pop    ds
  4098ce:	(bad)  
  4098d0:	pop    esp
  4098d1:	int3   
  4098d2:	mov    ds:0x5cbc8bfc,al
  4098d7:	test   DWORD PTR [esi-0x1e],edx
  4098da:	in     al,0xd
  4098dc:	push   ss
  4098dd:	mov    eax,ds:0xa5432616
  4098e2:	adc    al,0x27
  4098e4:	int3   
  4098e5:	ins    BYTE PTR es:[edi],dx
  4098e6:	cmp    BYTE PTR [esi+0x64c5a978],ah
  4098ec:	xor    eax,0x3dc9b6cd
  4098f1:	(bad)  
  4098f2:	test   DWORD PTR [eax-0xf],0x952b34c6
  4098f9:	test   DWORD PTR [ebx],ebp
  4098fb:	fsubr  DWORD PTR [edi-0x3]
  4098fe:	pop    ebp
  4098ff:	sbb    al,0xf9
  409901:	add    eax,0x2bd6f3e0
  409906:	jmp    0x409982
  409908:	push   edx
  409909:	leave  
  40990a:	in     al,0x7c
  40990c:	repz out dx,eax
  40990e:	mov    ebp,0xca60b985
  409913:	je     0x409915
  409915:	jbe    0x40997d
  409917:	inc    edx
  409918:	popf   
  409919:	and    esi,0xffffffef
  40991c:	arpl   WORD PTR [ebx+edx*8+0x7f],di
  409920:	int3   
  409921:	fdiv   st,st(1)
  409923:	dec    esp
  409924:	pop    es
  409925:	fsubr  QWORD PTR [esi-0x1f]
  409928:	pusha  
  409929:	sub    BYTE PTR [eax],dh
  40992b:	sub    edx,esp
  40992d:	sbb    ah,BYTE PTR [esi+0x1d]
  409930:	popf   
  409931:	int    0xbe
  409933:	or     edi,esp
  409935:	xor    DWORD PTR [ebx-0x4b],ecx
  409938:	int    0xf8
  40993a:	xchg   esi,eax
  40993b:	push   0x151176e3
  409940:	dec    ebp
  409941:	daa    
  409942:	or     eax,0xbe8ef837
  409947:	nop
  409948:	mov    DWORD PTR [edx],esi
  40994a:	outs   dx,DWORD PTR ds:[esi]
  40994b:	scas   eax,DWORD PTR es:[edi]
  40994c:	mov    edi,edi
  40994e:	xchg   BYTE PTR [ebx+0x593aee3c],ah
  409954:	add    BYTE PTR ds:0xad916f2b,0x96
  40995b:	add    eax,0x2c462ac7
  409960:	mov    esp,0xf77f87a9
  409965:	sar    eax,cl
  409967:	je     0x409986
  409969:	loopne 0x4099d0
  40996b:	enter  0xf48,0xde
  40996f:	jle    0x4099d8
  409971:	pop    ss
  409972:	in     al,0x90
  409974:	not    BYTE PTR [edx*4+0x2db6a489]
  40997b:	into   
  40997c:	cli    
  40997d:	push   edx
  40997e:	fst    DWORD PTR [ebx-0x23]
  409981:	sbb    bl,dl
  409983:	adc    DWORD PTR [ecx-0x74fab5ee],ebx
  409989:	cwde   
  40998a:	add    ecx,DWORD PTR [ebp+0xe]
  40998d:	les    ecx,FWORD PTR [esi+0x6b]
  409990:	jne    0x4099e7
  409992:	inc    eax
  409993:	icebp  
  409994:	ret    0x88aa
  409997:	and    BYTE PTR [ebx+ecx*2-0x6157b170],bh
  40999e:	jmp    0xd848a53c
  4099a3:	push   edx
  4099a4:	not    DWORD PTR [esi-0x790cbc39]
  4099aa:	pusha  
  4099ab:	call   0x6ac7:0x45f2356f
  4099b2:	sub    ah,BYTE PTR [edi-0x627f3f67]
  4099b8:	loopne 0x4099d4
  4099ba:	pop    es
  4099bb:	or     ah,BYTE PTR [ecx-0x3b]
  4099be:	outs   dx,BYTE PTR ds:[esi]
  4099bf:	push   esi
  4099c0:	xor    al,0xd4
  4099c2:	imul   ebp,DWORD PTR [ebx],0x63f5463d
  4099c8:	daa    
  4099c9:	pop    esi
  4099ca:	test   al,0x28
  4099cc:	mov    bh,0xc4
  4099ce:	xor    al,BYTE PTR [esi-0x6c]
  4099d1:	dec    edi
  4099d2:	push   esp
  4099d3:	add    dh,ah
  4099d5:	mov    ds:0xada2b9be,eax
  4099da:	mov    esi,DWORD PTR [esi+0x53]
  4099dd:	sub    eax,0x94e16543
  4099e2:	and    al,0xf8
  4099e4:	mov    bl,0x33
  4099e6:	mov    ds:0xec74879,eax
  4099eb:	cmp    BYTE PTR [ebx-0x13],dl
  4099ee:	cs retf 0xfaba
  4099f2:	xor    eax,0xd5558daa
  4099f7:	xchg   ebp,eax
  4099f8:	add    DWORD PTR [eax],esp
  4099fa:	mov    edx,0x56341546
  4099ff:	jle    0x4099b1
  409a01:	outs   dx,BYTE PTR ds:[esi]
  409a02:	xor    dh,BYTE PTR [esi+ebx*2]
  409a05:	sbb    BYTE PTR [edi+0x5d678d92],cl
  409a0b:	jmp    DWORD PTR [edi+0xb0897c]
  409a11:	xchg   esp,eax
  409a12:	int    0xff
  409a14:	pop    esi
  409a15:	push   es
  409a16:	dec    esp
  409a17:	cwde   
  409a18:	cdq    
  409a19:	fwait
  409a1a:	sbb    BYTE PTR [eax-0x5b],ah
  409a1d:	or     cl,BYTE PTR [ebp-0x53dbd3ce]
  409a23:	add    DWORD PTR [edi+0x1989881],ebp
  409a29:	or     eax,0x9298c64
  409a2e:	int3   
  409a2f:	imul   esi,edx,0xffffffdb
  409a32:	retf   
  409a33:	and    BYTE PTR [eax-0x702afb5a],bh
  409a39:	cmp    al,0x99
  409a3b:	ret    
  409a3c:	aam    0xe7
  409a3e:	xlat   BYTE PTR ds:[ebx]
  409a3f:	pop    ebx
  409a40:	mov    al,0xbd
  409a42:	scas   eax,DWORD PTR es:[edi]
  409a43:	cmc    
  409a44:	inc    ebp
  409a45:	xchg   ebx,eax
  409a46:	sar    esi,cl
  409a48:	push   ebx
  409a49:	xor    ebp,0x4f0bd68a
  409a4f:	clc    
  409a50:	mov    eax,0x37c41423
  409a55:	mov    dh,0xcc
  409a57:	push   edx
  409a58:	mov    fs,WORD PTR [ebx]
  409a5a:	adc    DWORD PTR [edi+0x52],0xffffffe1
  409a5e:	in     al,dx
  409a5f:	pop    ebp
  409a60:	pop    ds
  409a61:	iret   
  409a62:	test   al,0x63
  409a64:	pop    ebp
  409a65:	ja     0x409a6e
  409a67:	adc    BYTE PTR [ecx+ecx*1],cl
  409a6a:	int3   
  409a6b:	outs   dx,DWORD PTR ds:[esi]
  409a6c:	mov    BYTE PTR [edx+ebx*4-0x23],al
  409a70:	xchg   ecx,eax
  409a71:	popf   
  409a72:	shr    BYTE PTR [edi],1
  409a74:	inc    edx
  409a75:	dec    esi
  409a76:	or     ch,bl
  409a78:	cmp    esi,eax
  409a7a:	aam    0x69
  409a7c:	and    esi,DWORD PTR [eax]
  409a7e:	adc    ebp,DWORD PTR ds:[ebx-0x69]
  409a82:	ins    DWORD PTR es:[edi],dx
  409a83:	push   eax
  409a84:	loopne 0x409a71
  409a86:	arpl   WORD PTR [edx-0x7f25bd1c],bx
  409a8c:	jecxz  0x409a87
  409a8e:	xchg   esp,eax
  409a8f:	add    esp,DWORD PTR [esi+edx*4]
  409a92:	jg     0x409aaa
  409a94:	scas   eax,DWORD PTR es:[edi]
  409a95:	push   ebp
  409a96:	xchg   edi,eax
  409a97:	mov    edx,DWORD PTR [edi+0x41]
  409a9a:	jne    0x409a68
  409a9c:	popf   
  409a9d:	xchg   ebp,eax
  409a9e:	jle    0x409a49
  409aa0:	popa   
  409aa1:	stos   DWORD PTR es:[edi],eax
  409aa2:	xchg   ebx,eax
  409aa3:	pop    ecx
  409aa4:	in     eax,0xfa
  409aa6:	aad    0xe5
  409aa8:	adc    DWORD PTR [ebp-0x31bc9f01],ebx
  409aae:	cmp    eax,DWORD PTR [ebp+0x1e]
  409ab1:	in     eax,dx
  409ab2:	dec    eax
  409ab3:	ins    BYTE PTR es:[edi],dx
  409ab4:	push   ebx
  409ab5:	push   ebp
  409ab6:	test   BYTE PTR [eax-0x6f9cd569],al
  409abc:	popa   
  409abd:	ret    
  409abe:	cmc    
  409abf:	jne    0x409aa6
  409ac1:	xchg   ecx,eax
  409ac2:	sub    al,0x52
  409ac4:	in     al,dx
  409ac5:	ficomp WORD PTR [ebp-0x7e1f86a3]
  409acb:	(bad)  
  409acc:	das    
  409acd:	adc    al,0x0
  409acf:	call   0x9674b337
  409ad4:	inc    edi
  409ad5:	adc    BYTE PTR [esi+0x2c],ch
  409ad8:	xor    al,0xca
  409ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409adb:	adc    al,0xa4
  409add:	push   ss
  409ade:	fidiv  DWORD PTR [esi-0x1f8de78b]
  409ae4:	sub    eax,0x1e6aa8a8
  409ae9:	xchg   ebx,eax
  409aea:	sub    eax,0x95b8b5f
  409aef:	jbe    0x409b22
  409af1:	test   al,dh
  409af3:	(bad)  
  409af4:	aaa    
  409af5:	sub    DWORD PTR [eax-0xdf12600],esp
  409afb:	jle    0x409ab6
  409afd:	sbb    DWORD PTR [esi-0x5b],edi
  409b00:	mov    ecx,0x7e3b51b4
  409b05:	mov    al,ds:0xe51fddf3
  409b0a:	push   esi
  409b0b:	clc    
  409b0c:	push   esi
  409b0d:	push   eax
  409b0e:	clc    
  409b0f:	cmp    bl,0x9e
  409b12:	leave  
  409b13:	jmp    0x4f91c7e6
  409b18:	mov    esi,0xed79c322
  409b1d:	pop    ss
  409b1e:	fimul  WORD PTR [esi+ebx*4+0x49]
  409b22:	xor    al,0x22
  409b24:	(bad)  
  409b25:	xor    ebx,DWORD PTR [ecx]
  409b27:	xlat   BYTE PTR ds:[ebx]
  409b28:	shl    BYTE PTR [ecx+edx*8],cl
  409b2b:	pusha  
  409b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b2d:	jae    0x409b0c
  409b2f:	lahf   
  409b30:	cmc    
  409b31:	(bad)  
  409b32:	ins    DWORD PTR es:[edi],dx
  409b33:	push   esp
  409b34:	push   edi
  409b35:	fwait
  409b36:	test   esi,ebx
  409b38:	cmp    eax,0x7886a0b0
  409b3d:	inc    ecx
  409b3e:	call   0x48fe:0x3e68f40
  409b45:	jne    0x409b65
  409b47:	cmp    eax,esi
  409b49:	push   eax
  409b4a:	jmp    0x742:0xe0a9c584
  409b51:	les    ebx,FWORD PTR [edx-0xf986ccf]
  409b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b58:	mov    dh,0xe1
  409b5a:	and    BYTE PTR [edx],bh
  409b5c:	or     bh,BYTE PTR [eax]
  409b5e:	mov    edi,0x7f69ba92
  409b63:	inc    ebx
  409b64:	fldenv [edx-0x11df8711]
  409b6a:	out    0xf0,al
  409b6c:	lock js 0x409b1f
  409b6f:	xchg   BYTE PTR [edi],cl
  409b71:	idiv   ebp
  409b73:	ss xchg ebp,eax
  409b75:	ss test eax,0x12e1d4ce
  409b7b:	xchg   esi,eax
  409b7c:	enter  0xcd98,0x56
  409b80:	stos   DWORD PTR es:[edi],eax
  409b81:	popa   
  409b82:	or     al,0x14
  409b84:	adc    DWORD PTR [edx+0xf],0x9ee37909
  409b8b:	pop    eax
  409b8c:	push   es
  409b8d:	cld    
  409b8e:	xor    BYTE PTR [ebx],0x3c
  409b91:	leave  
  409b92:	out    0x67,al
  409b94:	pusha  
  409b95:	xchg   DWORD PTR [edi-0x48f36d09],ebp
  409b9b:	mov    ds:0xb53b47d0,eax
  409ba0:	cli    
  409ba1:	push   0xdc8ebe2a
  409ba6:	sbb    ch,cl
  409ba8:	and    ebp,DWORD PTR [esi-0x3df42dcd]
  409bae:	add    eax,DWORD PTR ds:0x422588
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422588
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422588
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [edx+edx*1+0x7c],0xfffffffa
  409ce0:	mov    esi,0x181839cd
  409ce5:	sahf   
  409ce6:	adc    bl,BYTE PTR [eax]
  409ce8:	sbb    al,bl
  409cea:	int3   
  409ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cec:	clc    
  409ced:	mov    bl,0x2
  409cef:	mov    WORD PTR [eax],?
  409cf1:	(bad)  
  409cf2:	js     0x409cd1
  409cf4:	adc    DWORD PTR [si-0x13de],ecx
  409cf9:	pop    ds
  409cfa:	xor    dl,al
  409cfc:	push   ecx
  409cfd:	xchg   ecx,eax
  409cfe:	jbe    0x409d1d
  409d00:	ret    
  409d01:	in     eax,dx
  409d02:	mov    edx,0xd8d22ed0
  409d07:	jnp    0x409ca8
  409d09:	hlt    
  409d0a:	stos   DWORD PTR es:[edi],eax
  409d0b:	xchg   esp,eax
  409d0c:	add    ecx,DWORD PTR [esi]
  409d0e:	fistp  WORD PTR [eax-0x3a]
  409d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d12:	xlat   BYTE PTR ds:[ebx]
  409d13:	fcompp 
  409d15:	mov    eax,0xc560cdcb
  409d1a:	cmp    ebx,DWORD PTR [eax-0x3]
  409d1d:	call   0x129d:0x7c2c37a1
  409d24:	pop    esi
  409d25:	dec    edi
  409d27:	mov    cs,WORD PTR [ecx-0x10]
  409d2a:	mov    eax,0x6c09fdde
  409d2f:	sbb    ebx,DWORD PTR [esi-0xb]
  409d32:	mov    ebx,0xe8553f0a
  409d37:	inc    ebp
  409d38:	mov    BYTE PTR [eax-0xa],al
  409d3b:	out    dx,eax
  409d3c:	aad    0x7b
  409d3e:	add    edi,eax
  409d40:	sbb    BYTE PTR [ecx+0x22],ah
  409d43:	shr    BYTE PTR [eax+eax*4],cl
  409d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d47:	(bad)  
  409d48:	daa    
  409d49:	imul   eax,DWORD PTR [edx-0x105b106e],0x5
  409d50:	rcr    DWORD PTR [ebx+0x6d76167],0x1c
  409d57:	mov    esp,0x55ccc768
  409d5c:	add    esp,DWORD PTR [ebp-0x1b]
  409d5f:	inc    DWORD PTR [ebx+0x4b]
  409d62:	fwait
  409d63:	(bad)  
  409d64:	cmp    DWORD PTR [esi],edi
  409d66:	jnp    0x409d3a
  409d68:	xchg   BYTE PTR [ecx],dl
  409d6a:	aam    0x66
  409d6c:	adc    ebx,ecx
  409d6e:	ja     0x409dbe
  409d70:	ins    BYTE PTR es:[edi],dx
  409d71:	mov    ds:0xa598055e,eax
  409d76:	shl    DWORD PTR [eax-0x5567a09f],1
  409d7c:	in     eax,dx
  409d7d:	push   ebx
  409d7e:	inc    edi
  409d7f:	or     bl,0x33
  409d82:	mov    ch,0x3f
  409d84:	fs in  al,0x18
  409d87:	mov    cl,0x33
  409d89:	dec    ebx
  409d8a:	add    ecx,ebx
  409d8c:	mov    ebp,0xaa449031
  409d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d92:	add    ecx,DWORD PTR [esi-0x52]
  409d95:	into   
  409d96:	add    eax,0x2d781cf4
  409d9b:	(bad)  
  409d9c:	(bad)  
  409d9d:	(bad)  
  409d9e:	push   esp
  409d9f:	aas    
  409da0:	in     eax,dx
  409da1:	out    dx,al
  409da2:	pop    edx
  409da3:	dec    esi
  409da4:	inc    esi
  409da5:	and    al,0x7
  409da7:	sub    BYTE PTR [ecx],cl
  409da9:	enter  0x776,0xd5
  409dad:	stos   BYTE PTR es:[edi],al
  409dae:	mov    cs,eax
  409db0:	int    0xc2
  409db2:	(bad)  
  409db3:	gs dec eax
  409db5:	jnp    0x409e14
  409db7:	sub    al,0xe5
  409db9:	jg     0x409e35
  409dbb:	aaa    
  409dbc:	mov    es,WORD PTR [eax+0x1a]
  409dbf:	mov    ds:0xcfb96a36,al
  409dc4:	sub    ecx,edx
  409dc6:	jo     0x409e31
  409dc8:	in     al,0xc0
  409dca:	jmp    0xb888db38
  409dcf:	cmp    edx,edx
  409dd1:	xor    edi,DWORD PTR ds:[ebx+0x6d342286]
  409dd8:	test   DWORD PTR [edi],esp
  409dda:	mov    esi,0xe538baa0
  409ddf:	les    edi,FWORD PTR [ebp+0x6b]
  409de2:	cs aas 
  409de4:	lahf   
  409de5:	call   0x61a1:0x9d359e62
  409dec:	dec    edi
  409ded:	sub    BYTE PTR [ecx+0x7d1ad3dc],dh
  409df3:	fidivr DWORD PTR ds:[edi+eiz*2+0x2597c6ae]
  409dfb:	je     0x409e75
  409dfd:	les    ecx,FWORD PTR [edi]
  409dff:	div    BYTE PTR [esi+ebx*8+0x2d50457b]
  409e06:	mov    bl,0x29
  409e08:	ja     0x409e7a
  409e0a:	pusha  
  409e0b:	add    dh,BYTE PTR [eax+edx*8]
  409e0e:	add    DWORD PTR [ebp-0x7],edi
  409e11:	mov    ds:0x788d56f9,al
  409e16:	out    0x9,eax
  409e18:	fidiv  WORD PTR [ebx-0x6e]
  409e1b:	xor    dh,BYTE PTR [edi-0x7b]
  409e1e:	xchg   DWORD PTR [bp+di],ecx
  409e21:	shr    DWORD PTR [eax],0xc9
  409e24:	cmp    edi,DWORD PTR [ecx-0x31]
  409e27:	lahf   
  409e28:	cwde   
  409e29:	jb     0x409de2
  409e2b:	pop    es
  409e2c:	in     al,0xed
  409e2e:	fbstp  TBYTE PTR [ebx]
  409e30:	xchg   DWORD PTR [ebp+0x66],edi
  409e33:	dec    ebx
  409e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e35:	sbb    bl,ch
  409e37:	outs   dx,BYTE PTR ds:[esi]
  409e38:	fisub  DWORD PTR [eax+eax*4]
  409e3b:	push   edi
  409e3c:	mov    ebp,0x40a4e232
  409e41:	arpl   WORD PTR [bx+di-0x2475],di
  409e46:	cdq    
  409e47:	and    ebx,DWORD PTR [edi-0x57]
  409e4a:	enter  0x813f,0xfc
  409e4e:	mov    ch,0x75
  409e50:	hlt    
  409e51:	loopne 0x409e34
  409e53:	push   esp
  409e54:	pop    es
  409e55:	xor    BYTE PTR [edi+0x75],bl
  409e58:	popf   
  409e59:	jno    0x409e1e
  409e5b:	jno    0x409ead
  409e5d:	mov    al,ds:0x2c775c7f
  409e62:	mov    ds:0x4930b692,al
  409e67:	pop    ecx
  409e68:	out    0xdd,eax
  409e6a:	div    edx
  409e6c:	mov    eax,ds:0x2640aa36
  409e71:	add    BYTE PTR [edx+0x69077ebf],cl
  409e77:	(bad)  
  409e78:	jno    0x409eb1
  409e7a:	fs inc eax
  409e7c:	mov    bh,0xc
  409e7e:	clc    
  409e7f:	and    DWORD PTR [esi-0x3a],esi
  409e82:	adc    al,0x70
  409e84:	addr16 gs mov bl,0x58
  409e88:	mov    dl,0x3
  409e8a:	cmp    eax,0xfc9203a6
  409e8f:	mov    DWORD PTR [ecx+0x38d70c2c],esi
  409e95:	ret    0xaafb
  409e98:	aad    0xcc
  409e9a:	ds (bad) 
  409e9c:	xchg   ebx,eax
  409e9d:	movd   mm1,DWORD PTR [edx]
  409ea0:	(bad)
  409ea4:	dec    edi
  409ea5:	inc    edi
  409ea6:	dec    eax
  409ea7:	outs   dx,DWORD PTR ds:[esi]
  409ea8:	data16 scas al,BYTE PTR es:[edi]
  409eaa:	xchg   edx,eax
  409eab:	ror    BYTE PTR [esi+0x9],0x38
  409eaf:	cmc    
  409eb0:	pop    esi
  409eb1:	xchg   esp,eax
  409eb2:	dec    ebp
  409eb3:	outs   dx,BYTE PTR ds:[esi]
  409eb4:	loopne 0x409efb
  409eb6:	pop    ebp
  409eb7:	cs ret 
  409eb9:	adc    DWORD PTR ds:0x9a5f1f60,0xffffffdc
  409ec0:	mov    edx,0x19699abc
  409ec5:	das    
  409ec6:	xchg   DWORD PTR [edx-0x42fe2c6b],edi
  409ecc:	mov    dl,0x60
  409ece:	imul   edi,DWORD PTR [edx],0x4f
  409ed1:	mov    edi,ds
  409ed3:	mov    dh,0x59
  409ed5:	out    dx,eax
  409ed6:	cmp    eax,0xd507d21d
  409edb:	add    cl,BYTE PTR ds:0x11616e50
  409ee1:	dec    ebp
  409ee2:	jno    0x409e8e
  409ee4:	cdq    
  409ee5:	ret    
  409ee6:	push   ebp
  409ee7:	arpl   WORD PTR [ecx+0x61c0e77e],di
  409eed:	lods   al,BYTE PTR ds:[esi]
  409eee:	(bad)  
  409eef:	mov    dh,0xe4
  409ef1:	sar    DWORD PTR [ebx],cl
  409ef3:	ror    BYTE PTR [ebx*4-0x1cecbb36],0x86
  409efb:	std    
  409efc:	xchg   esp,eax
  409efd:	or     BYTE PTR [ebp-0x4f558878],dh
  409f03:	jmp    0xc6d6adcd
  409f08:	push   0x2aec3050
  409f0d:	aam    0x72
  409f0f:	and    al,0x8f
  409f11:	sub    BYTE PTR [ebx-0x55],cl
  409f14:	mov    eax,0xa06715ec
  409f19:	xchg   ecx,eax
  409f1a:	and    bl,cl
  409f1c:	sbb    eax,0xca8934d0
  409f21:	push   es
  409f22:	xor    DWORD PTR [edx-0x6a10ae7b],edx
  409f28:	sti    
  409f29:	mov    eax,ds:0xf7fecd38
  409f2e:	xor    esi,DWORD PTR [edi]
  409f30:	test   eax,0x1f17c2a9
  409f35:	stc    
  409f36:	cmp    eax,ebp
  409f38:	dec    edx
  409f39:	cmp    ah,BYTE PTR [ecx+0x24c5440c]
  409f3f:	sub    esp,DWORD PTR [ebp+0x75]
  409f42:	stos   BYTE PTR es:[edi],al
  409f43:	retf   
  409f44:	das    
  409f45:	pop    edi
  409f46:	into   
  409f47:	push   edi
  409f48:	xchg   esi,eax
  409f49:	jp     0x409fc3
  409f4b:	fs int3 
  409f4d:	pop    ds
  409f4e:	adc    dl,ch
  409f50:	jmp    0x6a384ffa
  409f55:	fwait
  409f56:	jp     0x409f45
  409f58:	dec    edx
  409f59:	mov    dl,cl
  409f5b:	in     al,0xb6
  409f5d:	cmp    BYTE PTR [ebp-0xee4a3f7],dh
  409f63:	add    dl,BYTE PTR [ecx]
  409f65:	sub    bl,BYTE PTR [edx]
  409f67:	sub    BYTE PTR [eax+0x1b],dl
  409f6a:	stos   BYTE PTR es:[edi],al
  409f6b:	(bad)  
  409f6c:	xor    ebp,DWORD PTR [ecx+0x70]
  409f6f:	popf   
  409f70:	je     0x409fc7
  409f72:	mov    DWORD PTR [ecx+0x674af41d],0xf603706d
  409f7c:	jns    0x409f0c
  409f7e:	neg    DWORD PTR [eax+0xf]
  409f81:	scas   eax,DWORD PTR es:[edi]
  409f82:	inc    ebx
  409f83:	std    
  409f84:	mov    DWORD PTR [edx-0x3223472e],0x2843c197
  409f8e:	sbb    dh,bl
  409f90:	enter  0x5446,0xf1
  409f94:	sar    DWORD PTR [edi+edx*1-0x51],1
  409f98:	pop    es
  409f99:	addr16 push ss
  409f9b:	loopne 0x409f4c
  409f9d:	ret    
  409f9e:	iret   
  409f9f:	(bad)  
  409fa0:	fcomip st,st(0)
  409fa2:	loopne 0x409f62
  409fa4:	retf   
  409fa5:	scas   al,BYTE PTR es:[edi]
  409fa6:	pusha  
  409fa7:	push   0x56b2fb02
  409fac:	inc    edi
  409fad:	fst    DWORD PTR ds:0x5cd1c1a5
  409fb3:	bound  eax,QWORD PTR [ecx+ecx*2-0x7e]
  409fb7:	xor    edi,DWORD PTR ds:0x1a839352
  409fbd:	outs   dx,BYTE PTR ds:[esi]
  409fbe:	adc    dl,dl
  409fc0:	out    0x8c,eax
  409fc2:	scas   al,BYTE PTR es:[edi]
  409fc3:	mov    ebx,0xba0382d4
  409fc8:	or     eax,0x7e40d64c
  409fcd:	mov    WORD PTR [esi],cs
  409fcf:	div    DWORD PTR [ecx+0x7e]
  409fd2:	xchg   BYTE PTR [esp+edi*1],ch
  409fd5:	and    al,0xa7
  409fd7:	dec    edx
  409fd8:	add    eax,0xdb59fff6
  409fdd:	out    0xa0,al
  409fdf:	into   
  409fe0:	rcl    BYTE PTR [esi-0x34],1
  409fe3:	push   edx
  409fe4:	jmp    0x40a05b
  409fe6:	call   0x6ecc8dc
  409feb:	ss inc ebx
  409fed:	cli    
  409fee:	sub    BYTE PTR [edi-0x7b],al
  409ff1:	shl    bl,cl
  409ff3:	out    dx,eax
  409ff4:	and    DWORD PTR [ecx],0xf38fd190
  409ffa:	aas    
  409ffb:	lods   eax,DWORD PTR ds:[esi]
  409ffc:	push   eax
  409ffd:	push   edi
  409ffe:	shr    DWORD PTR [esi+0x3e6b50b4],1
  40a004:	mov    eax,ds:0xb9a1e8ab
  40a009:	ins    BYTE PTR es:[edi],dx
  40a00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a00b:	jle    0x40a070
  40a00d:	ret    
  40a00e:	ss push eax
  40a010:	cld    
  40a011:	mov    ds:0x9787cd76,al
  40a016:	rcl    BYTE PTR [esi+0x1],1
  40a019:	push   eax
  40a01a:	add    al,0xc5
  40a01c:	(bad)  
  40a01d:	xchg   ebx,eax
  40a01e:	mov    BYTE PTR [edi-0x148b0e81],cl
  40a024:	fidiv  WORD PTR [ebx-0x51]
  40a027:	pushf  
  40a028:	mov    dl,0xf9
  40a02a:	xor    dl,BYTE PTR [eax-0x2ee7f60a]
  40a030:	arpl   WORD PTR [eax-0x3f],ax
  40a033:	mov    ah,0x44
  40a035:	sar    BYTE PTR [esi],0x3e
  40a038:	shl    DWORD PTR [edx],cl
  40a03a:	xchg   edx,eax
  40a03b:	push   esi
  40a03c:	xchg   edi,eax
  40a03d:	nop
  40a03e:	xor    al,0xc6
  40a040:	test   BYTE PTR [ebx],dh
  40a042:	scas   eax,DWORD PTR es:[edi]
  40a043:	jecxz  0x40a072
  40a045:	mov    ebx,DWORD PTR [eax+0x7eb33f82]
  40a04b:	pop    esp
  40a04c:	push   0xa70a95da
  40a051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a052:	and    bh,dl
  40a054:	cmp    al,0x4b
  40a056:	adc    esp,DWORD PTR [ecx+0x1a838ead]
  40a05c:	push   ds
  40a05d:	dec    ecx
  40a05e:	rcr    DWORD PTR [esi+0x79e82d07],0x6f
  40a065:	dec    eax
  40a066:	mov    edx,DWORD PTR [ebx+ebx*1]
  40a069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a06a:	fadd   st(4),st
  40a06c:	sti    
  40a06d:	dec    ebp
  40a06e:	add    DWORD PTR [ebx],ecx
  40a070:	cmp    BYTE PTR [esi+0x72],dl
  40a073:	mov    bh,0x3e
  40a075:	lock pop ebx
  40a077:	and    ecx,DWORD PTR [ecx]
  40a079:	jmp    0x5c97e43
  40a07e:	pop    ecx
  40a07f:	stos   DWORD PTR es:[edi],eax
  40a080:	and    eax,0x755ad531
  40a085:	out    0xde,eax
  40a087:	stos   BYTE PTR es:[edi],al
  40a088:	dec    esp
  40a089:	xchg   DWORD PTR [esi+0x2],ebp
  40a08c:	inc    ebx
  40a08d:	add    DWORD PTR [edx+0x6f],ebx
  40a090:	popf   
  40a091:	push   ss
  40a092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a093:	and    ecx,DWORD PTR [ebx-0x7ce0c89e]
  40a099:	cmp    DWORD PTR [ebx+0x6a],ecx
  40a09c:	sub    ecx,ebp
  40a09e:	and    bh,BYTE PTR [edx-0x1d]
  40a0a1:	add    DWORD PTR ds:0x445c8b4c,ebx
  40a0a7:	add    al,0xee
  40a0a9:	add    ecx,DWORD PTR [ebx+0x7d8b047e]
  40a0af:	adc    al,0x33
  40a0b1:	ror    BYTE PTR [ebx],cl
  40a0b3:	push   ebp
  40a0b4:	nop
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	fld    QWORD PTR [esi+0x3352be2b]
  40a12e:	sbb    BYTE PTR [eax],bl
  40a130:	sahf   
  40a131:	adc    bl,BYTE PTR [eax]
  40a133:	sbb    BYTE PTR [eax-0x5c],dh
  40a136:	data16 not BYTE PTR [esi-0x3c]
  40a13a:	mov    edx,0xe115f763
  40a13f:	call   0xb4ee:0xdf2d8c33
  40a146:	jge    0x40a196
  40a148:	xchg   ebp,eax
  40a149:	into   
  40a14a:	sbb    eax,0xeb0719e9
  40a14f:	mov    ecx,0xf53f5543
  40a154:	popa   
  40a155:	cdq    
  40a156:	jb     0x40a187
  40a158:	and    DWORD PTR [edi],0x1b2dbd2f
  40a15e:	or     al,0xaf
  40a160:	dec    edx
  40a161:	mov    esi,0x5f63a8ec
  40a166:	push   esp
  40a167:	fidivr WORD PTR [edx]
  40a169:	scas   al,BYTE PTR es:[edi]
  40a16a:	iret   
  40a16b:	adc    al,dl
  40a16d:	pop    esi
  40a16e:	imul   ebx,edx,0x50cf33de
  40a174:	sub    BYTE PTR [edi-0x572297f4],dh
  40a17a:	fucomi st,st(2)
  40a17c:	pushf  
  40a17d:	das    
  40a17e:	mov    dh,0x5c
  40a180:	sbb    edi,ecx
  40a182:	push   esp
  40a183:	cmc    
  40a184:	add    eax,0x5d12e5ab
  40a189:	aam    0xb
  40a18b:	jle    0x40a20b
  40a18d:	stc    
  40a18e:	jl     0x40a1e2
  40a190:	jo     0x40a14c
  40a192:	ds dec eax
  40a194:	call   0x227f5fd9
  40a199:	sbb    edi,DWORD PTR [ebp-0x50]
  40a19c:	stos   DWORD PTR es:[edi],eax
  40a19d:	stos   BYTE PTR es:[edi],al
  40a19e:	shr    DWORD PTR [ecx+0xe8537f6],0x9
  40a1a5:	or     eax,0x506b2bff
  40a1aa:	or     eax,0x86121078
  40a1af:	inc    esi
  40a1b0:	push   ss
  40a1b1:	xchg   ebp,eax
  40a1b2:	or     ah,bh
  40a1b4:	and    eax,0x5975909
  40a1b9:	jmp    FWORD PTR [esi-0x3d563b69]
  40a1bf:	mov    cl,0xc5
  40a1c1:	xchg   edi,eax
  40a1c2:	xchg   ebp,eax
  40a1c3:	fistp  WORD PTR [esi-0xf]
  40a1c6:	jns    0x40a216
  40a1c8:	cmp    esi,DWORD PTR [eax+0x5be847f4]
  40a1ce:	pop    ss
  40a1cf:	mov    ch,0x23
  40a1d1:	mov    edx,0x2961ac18
  40a1d6:	es ror al,1
  40a1d9:	xor    dl,BYTE PTR [ebx+0xfeb4e1f]
  40a1df:	push   esi
  40a1e0:	mov    dh,0x17
  40a1e2:	xchg   ebp,eax
  40a1e3:	mov    esi,0x66ab6ff9
  40a1e8:	clc    
  40a1e9:	imul   edx
  40a1eb:	mov    al,ds:0xa8cf0629
  40a1f0:	ret    
  40a1f1:	pop    esi
  40a1f2:	or     BYTE PTR [ebx+0x3d],bl
  40a1f5:	repnz stos DWORD PTR es:[edi],eax
  40a1f7:	imul   eax,DWORD PTR [esi+0x6d75433c],0xd9218440
  40a201:	xlat   BYTE PTR ds:[ebx]
  40a202:	jg     0x40a1c7
  40a204:	jmp    0xc0d1aedc
  40a209:	les    ebp,FWORD PTR [eax+0x4327182d]
  40a20f:	add    dh,ch
  40a211:	mov    ds:0x9c44c7e7,eax
  40a216:	test   BYTE PTR [ebp+0x60],bh
  40a219:	and    BYTE PTR [edi-0x5c8a7066],0xcd
  40a220:	repnz test eax,0xf6ed24ad
  40a226:	jbe    0x40a1be
  40a228:	pop    edi
  40a229:	or     DWORD PTR [ecx+0x22],0x3e
  40a22d:	popa   
  40a22e:	mov    ds:0xa55ee98d,eax
  40a233:	mov    ds:0xf349323,al
  40a238:	int3   
  40a239:	push   edi
  40a23a:	pusha  
  40a23b:	outs   dx,BYTE PTR ds:[esi]
  40a23c:	lock dec ebx
  40a23e:	(bad)  
  40a23f:	loop   0x40a237
  40a241:	cmp    eax,0xc1c565d2
  40a246:	cli    
  40a247:	and    edx,DWORD PTR cs:[ebp-0x3a]
  40a24b:	fucomip st,st(3)
  40a24d:	cmp    dh,BYTE PTR [esi+0x169997ef]
  40a253:	pop    ebp
  40a254:	ja     0x40a1df
  40a256:	mov    ds:0x4ab02d89,eax
  40a25b:	fwait
  40a25c:	mov    ch,0xb9
  40a25e:	cmp    DWORD PTR [esi],eax
  40a260:	pop    edi
  40a261:	mov    edx,0x4e5fd2eb
  40a266:	call   0xdef1:0xcbdde87d
  40a26d:	in     al,dx
  40a26e:	retf   
  40a26f:	inc    ebp
  40a270:	pop    ecx
  40a271:	ret    
  40a272:	add    BYTE PTR [ecx],cl
  40a274:	jo     0x40a29d
  40a276:	jae    0x40a23e
  40a278:	and    al,ch
  40a27a:	sbb    DWORD PTR [esp+ecx*1+0x5d],ebx
  40a27e:	mov    DWORD PTR [edi-0x6159a4e4],ebp
  40a284:	(bad)  
  40a285:	lods   eax,DWORD PTR ds:[esi]
  40a286:	call   0xb4ef:0x54ade0cf
  40a28d:	call   0x64892eb2
  40a292:	out    dx,eax
  40a293:	jno    0x40a2a7
  40a295:	imul   ebp,DWORD PTR [ebp+0x67],0x8f495597
  40a29c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29d:	ret    
  40a29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29f:	mov    edx,0xe8ff8063
  40a2a4:	cmp    ebx,ecx
  40a2a6:	jp     0x40a2f7
  40a2a8:	xchg   di,ax
  40a2aa:	push   ecx
  40a2ab:	inc    ecx
  40a2ac:	fucomip st,st(6)
  40a2ae:	inc    ebx
  40a2af:	xor    esp,DWORD PTR [esi]
  40a2b1:	sub    DWORD PTR [edi-0x76],esp
  40a2b4:	mov    dl,BYTE PTR [eax-0x2ed4374e]
  40a2ba:	jl     0x40a274
  40a2bc:	adc    eax,DWORD PTR [edx]
  40a2be:	jmp    0xf080:0x2a46a0ad
  40a2c5:	rcr    DWORD PTR [ecx-0x572bed6b],1
  40a2cb:	push   ebp
  40a2cc:	outs   dx,DWORD PTR ds:[esi]
  40a2cd:	adc    al,0x8d
  40a2cf:	(bad)  
  40a2d0:	xchg   esp,eax
  40a2d1:	mov    edx,0x4dc27edc
  40a2d6:	nop
  40a2d7:	ins    BYTE PTR es:[edi],dx
  40a2d8:	std    
  40a2d9:	add    eax,0xa3a3fbe1
  40a2de:	sar    BYTE PTR [ecx+esi*1+0x2],0x4
  40a2e3:	int3   
  40a2e4:	mov    ds:0xff767239,al
  40a2e9:	shl    BYTE PTR [ecx+eax*4-0x2a],cl
  40a2ed:	adc    eax,DWORD PTR [ebx+0x1a]
  40a2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f1:	inc    eax
  40a2f2:	loop   0x40a344
  40a2f4:	sub    BYTE PTR [edx+0x2b762229],ah
  40a2fa:	sbb    edi,DWORD PTR ds:0x69e31dcf
  40a300:	add    al,BYTE PTR [ecx*8+0xc224a4]
  40a307:	inc    ebp
  40a308:	add    esp,DWORD PTR ss:[edi]
  40a30b:	jne    0x40a329
  40a30d:	into   
  40a30e:	out    0x89,eax
  40a310:	inc    esp
  40a311:	cmp    ebp,edi
  40a313:	jge    0x40a36d
  40a315:	or     eax,0xc66c3179
  40a31a:	sbb    bh,BYTE PTR [ebp+0x425086eb]
  40a320:	and    DWORD PTR [edx+ebx*8+0x44],eax
  40a324:	jecxz  0x40a2db
  40a326:	clc    
  40a327:	xor    BYTE PTR [edi+0x4de12024],bl
  40a32d:	lock dec edi
  40a32f:	aad    0xb5
  40a331:	daa    
  40a332:	cmp    DWORD PTR [edx-0x45],esi
  40a335:	xchg   esi,eax
  40a336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a337:	das    
  40a338:	(bad)  
  40a339:	(bad)  
  40a33a:	std    
  40a33b:	(bad)  
  40a33d:	mov    cl,0xde
  40a33f:	aam    0xed
  40a341:	adc    al,0x91
  40a343:	push   edx
  40a344:	push   edx
  40a345:	dec    ebx
  40a346:	inc    esi
  40a347:	fist   WORD PTR [edx]
  40a349:	pushf  
  40a34a:	leave  
  40a34b:	jnp    0x40a30f
  40a34d:	adc    esp,ebp
  40a34f:	or     ebp,esi
  40a351:	pusha  
  40a352:	fs scas eax,DWORD PTR es:[edi]
  40a354:	rcr    BYTE PTR cs:[esi+0x39],cl
  40a358:	outs   dx,BYTE PTR ds:[esi]
  40a359:	(bad)  
  40a35a:	or     bh,BYTE PTR [edi-0x751d936d]
  40a360:	mov    al,BYTE PTR ds:0xdae3683c
  40a366:	ss pop ebx
  40a368:	pop    es
  40a369:	leave  
  40a36a:	test   si,ax
  40a36d:	inc    edi
  40a36e:	sub    al,0xad
  40a370:	(bad)  
  40a371:	xchg   edx,eax
  40a372:	sti    
  40a373:	into   
  40a374:	jne    0x40a3de
  40a376:	arpl   WORD PTR [esi],bp
  40a378:	sbb    al,0xd7
  40a37a:	mov    DWORD PTR [ebx],ebp
  40a37c:	xchg   ebx,eax
  40a37d:	rcr    DWORD PTR [edx-0x8],1
  40a380:	mov    ebp,DWORD PTR [edi]
  40a382:	mov    ecx,0x11cdda9
  40a387:	xlat   BYTE PTR ds:[ebx]
  40a388:	lahf   
  40a389:	push   0x662da5c8
  40a38e:	fld1   
  40a390:	out    dx,al
  40a391:	nop
  40a392:	jmp    0xba71:0x1b3b17ff
  40a399:	or     eax,0xb139d8c1
  40a39e:	mov    ch,0x7c
  40a3a0:	or     DWORD PTR [ecx+esi*8],edi
  40a3a3:	adc    bl,cl
  40a3a5:	xchg   esi,eax
  40a3a6:	ins    BYTE PTR es:[edi],dx
  40a3a7:	repz (bad) 
  40a3aa:	cmp    esp,ebp
  40a3ac:	pusha  
  40a3ad:	in     al,0xe6
  40a3af:	data16 jmp 0x40a3ed
  40a3b2:	add    dl,BYTE PTR [edx+0x44]
  40a3b5:	data16 and al,0x51
  40a3b8:	inc    ebx
  40a3b9:	pusha  
  40a3ba:	push   cs
  40a3bb:	sub    ebp,DWORD PTR [esi]
  40a3bd:	xchg   BYTE PTR [ecx],ch
  40a3bf:	cdq    
  40a3c0:	pand   mm3,mm6
  40a3c3:	cs cld 
  40a3c5:	mov    esi,0x40fd8398
  40a3ca:	je     0x40a3ff
  40a3cc:	lahf   
  40a3cd:	fldlg2 
  40a3cf:	js     0x40a3cb
  40a3d1:	mov    edi,0x5a42a97b
  40a3d6:	xchg   ebx,eax
  40a3d7:	cmovs  esp,DWORD PTR [edi]
  40a3da:	outs   dx,BYTE PTR ds:[esi]
  40a3db:	leave  
  40a3dc:	or     al,0x1b
  40a3de:	loop   0x40a430
  40a3e0:	ret    
  40a3e1:	pop    esp
  40a3e2:	(bad)  
  40a3e3:	mov    ecx,0xd04eb263
  40a3e8:	push   eax
  40a3e9:	add    eax,0xafd55cc9
  40a3ee:	mov    bl,0x16
  40a3f0:	aas    
  40a3f1:	ret    
  40a3f2:	ret    0x56a6
  40a3f5:	lea    ebx,[edx]
  40a3f7:	or     BYTE PTR ds:0xa23d1ced,ah
  40a3fd:	jnp    0x40a452
  40a3ff:	lds    ebx,FWORD PTR [eax]
  40a401:	cmp    BYTE PTR [esi],dh
  40a403:	push   edx
  40a404:	add    BYTE PTR [edi],cl
  40a406:	adc    eax,ebp
  40a408:	icebp  
  40a409:	mov    ebx,0x96f1332f
  40a40e:	dec    ebp
  40a40f:	mov    dl,0x96
  40a411:	xchg   edi,eax
  40a412:	bound  ebp,QWORD PTR [ebx+0x5bbc0a95]
  40a418:	int3   
  40a419:	add    al,0x97
  40a41b:	and    ebp,esp
  40a41d:	mov    al,0x9d
  40a41f:	push   cs
  40a420:	pop    esp
  40a421:	imul   ebp,DWORD PTR [eax-0x23bebe3d],0xffffffdc
  40a428:	(bad)  
  40a429:	and    eax,0x69c6e5dd
  40a42e:	mov    ebx,0xe0ad46dd
  40a433:	or     al,0xfe
  40a435:	jg     0x40a447
  40a437:	test   eax,ebp
  40a439:	vxorps ymm6{k7}{z},ymm2,DWORD PTR [esi+edx*8-0x1de30350]{1to8}
  40a444:	leave  
  40a445:	or     eax,0x6a8b4da
  40a44a:	leave  
  40a44b:	pop    esp
  40a44c:	mov    ebp,0x6fb5f50e
  40a451:	sub    eax,0x182e3ac1
  40a456:	into   
  40a457:	fs ins DWORD PTR es:[edi],dx
  40a459:	jge    0x40a44f
  40a45b:	idiv   bh
  40a45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a45e:	push   bx
  40a460:	xchg   ah,ah
  40a462:	or     BYTE PTR [edi],bl
  40a464:	out    dx,al
  40a465:	push   ebp
  40a466:	push   edi
  40a467:	cmp    eax,0xb84fb386
  40a46c:	xchg   ebp,eax
  40a46d:	adc    dl,dl
  40a46f:	fld    DWORD PTR [eax+ebx*8-0x2f]
  40a473:	dec    edx
  40a474:	das    
  40a475:	xor    ch,BYTE PTR ds:0x1b532550
  40a47b:	mov    WORD PTR [eax+0x2b4c1b32],es
  40a481:	pop    esi
  40a482:	(bad)  
  40a483:	fwait
  40a484:	cdq    
  40a485:	test   eax,0xc16b3725
  40a48a:	clc    
  40a48b:	fs dec edx
  40a48d:	daa    
  40a48e:	in     eax,0x1e
  40a490:	imul   edx,DWORD PTR [edi+0x6e],0x75
  40a494:	add    DWORD PTR [ebp-0x70],esp
  40a497:	enter  0xe6e2,0x8b
  40a49b:	xchg   edx,eax
  40a49c:	les    ebx,FWORD PTR fs:[edx+0x19]
  40a4a0:	adc    eax,0xcf178e97
  40a4a5:	hlt    
  40a4a6:	popf   
  40a4a7:	in     al,0x1f
  40a4a9:	test   BYTE PTR [ebp-0x26bf75db],dl
  40a4af:	mov    ebx,0xbc7b9efc
  40a4b4:	inc    ebx
  40a4b5:	adc    eax,edx
  40a4b7:	scas   al,BYTE PTR es:[edi]
  40a4b8:	div    BYTE PTR [ebp-0x5f]
  40a4bb:	or     DWORD PTR [ebx],ebp
  40a4bd:	lock jae 0x40a457
  40a4c0:	dec    edx
  40a4c1:	adc    bl,ch
  40a4c3:	sub    esi,eax
  40a4c5:	cmp    esi,edx
  40a4c7:	push   edx
  40a4c8:	pop    eax
  40a4c9:	dec    ebx
  40a4ca:	icebp  
  40a4cb:	push   eax
  40a4cc:	inc    ebx
  40a4cd:	mov    edi,0xac0ca8dc
  40a4d2:	xchg   esp,eax
  40a4d3:	xor    eax,0x7ea19d39
  40a4d8:	stos   BYTE PTR es:[edi],al
  40a4d9:	and    esp,DWORD PTR [ecx+edx*4-0x37]
  40a4dd:	xlat   BYTE PTR ds:[ebx]
  40a4de:	imul   ecx,DWORD PTR [eax+0x20f2cf2c],0xffffff9e
  40a4e5:	pop    ebp
  40a4e6:	jo     0x40a483
  40a4e8:	scas   al,BYTE PTR es:[edi]
  40a4e9:	push   ebp
  40a4ea:	btc    edx,esi
  40a4ed:	jno    0x40a4b2
  40a4ef:	loopne 0x40a4bf
  40a4f1:	test   DWORD PTR [ebp+0x26e84e53],edx
  40a4f7:	mov    DWORD PTR [eax],0x8b068b00
  40a4fd:	dec    esi
  40a4fe:	add    al,0xf
  40a500:	lods   al,BYTE PTR ds:[esi]
  40a501:	enter  0xc102,0xe9
  40a505:	add    al,cl
  40a507:	jmp    0x6e2:0x7af1811e
  40a50e:	out    0x51,eax
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a576
  40a524:	shl    DWORD PTR [ecx+0x70],0xd8
  40a528:	sub    ebx,DWORD PTR [eax]
  40a52a:	sbb    BYTE PTR [esi-0x28e7e7ee],bl
  40a530:	mov    edi,0xee472e2d
  40a535:	pushf  
  40a536:	das    
  40a537:	adc    al,0x6e
  40a539:	mov    eax,0xbcc42e4e
  40a53e:	ret    
  40a53f:	rol    DWORD PTR [ecx-0x16],1
  40a542:	dec    eax
  40a543:	jmp    0x40a4fa
  40a545:	adc    al,0x81
  40a547:	cld    
  40a548:	ss mov edi,0x53e5e0c9
  40a54e:	mov    al,ds:0xfd78b5a7
  40a553:	fwait
  40a554:	mov    ah,0x31
  40a556:	jecxz  0x40a54f
  40a558:	cdq    
  40a559:	jne    0x40a518
  40a55b:	call   0xe88c20d6
  40a560:	xchg   esp,eax
  40a561:	cmp    esi,0x5f
  40a564:	and    bh,bh
  40a566:	and    DWORD PTR [ecx+0x1572a6c0],edi
  40a56c:	leave  
  40a56d:	ins    DWORD PTR es:[edi],dx
  40a56e:	(bad)  
  40a56f:	cmc    
  40a570:	(bad)  
  40a571:	adc    esi,DWORD PTR [esi]
  40a573:	or     DWORD PTR [edx+0x23d53110],edx
  40a579:	sbb    eax,0x84b1a935
  40a57e:	daa    
  40a57f:	adc    eax,0x78106bc6
  40a584:	nop
  40a585:	jmp    0xbf96598
  40a58a:	push   es
  40a58b:	push   ebx
  40a58c:	repz ja 0x40a56b
  40a58f:	jno    0x40a5ba
  40a591:	data16 fwait
  40a593:	jns    0x40a5dc
  40a595:	xlat   BYTE PTR ds:[ebx]
  40a596:	add    cl,BYTE PTR [esi-0x4140b3d]
  40a59c:	test   al,0x7
  40a59e:	nop
  40a59f:	xchg   edi,eax
  40a5a0:	ins    BYTE PTR es:[edi],dx
  40a5a1:	xor    DWORD PTR [ebx-0x4],0x78
  40a5a5:	xor    ebx,esi
  40a5a7:	mov    eax,ds:0xeb905ba3
  40a5ac:	mov    DWORD PTR [edi],ebx
  40a5ae:	xlat   BYTE PTR ds:[ebx]
  40a5af:	out    dx,eax
  40a5b0:	jbe    0x40a5f3
  40a5b2:	mov    esi,0x232d44ef
  40a5b7:	cs or  dh,ch
  40a5ba:	dec    edx
  40a5bb:	lds    esi,FWORD PTR [ebp-0x4b05a375]
  40a5c1:	adc    DWORD PTR [ecx-0x62],esp
  40a5c4:	hlt    
  40a5c5:	stc    
  40a5c6:	pop    ds
  40a5c7:	call   0x94ec5e54
  40a5cc:	pop    DWORD PTR [ebp+0x43]
  40a5cf:	dec    ecx
  40a5d0:	jle    0x40a5e2
  40a5d2:	mov    bh,0xd0
  40a5d4:	shl    DWORD PTR [esi],cl
  40a5d6:	popf   
  40a5d7:	daa    
  40a5d8:	mov    al,0x86
  40a5da:	mov    edi,edi
  40a5dc:	mov    eax,ds:0x6e4cee3e
  40a5e1:	mov    WORD PTR [ebx-0xc],fs
  40a5e4:	mov    BYTE PTR [esi+0x4fd6970c],dl
  40a5ea:	mov    ah,0x16
  40a5ec:	add    DWORD PTR [ecx+0x50],eax
  40a5ef:	pushf  
  40a5f0:	lods   al,BYTE PTR ds:[esi]
  40a5f1:	xor    DWORD PTR [edi+0x6394efa8],0x4
  40a5f8:	push   es
  40a5f9:	add    BYTE PTR [edi+ecx*1+0x42bf3bdc],dh
  40a600:	jne    0x40a5cf
  40a602:	jo     0x40a666
  40a604:	inc    esi
  40a605:	or     al,0xee
  40a607:	fstp   QWORD PTR [ebp+0x33]
  40a60a:	push   es
  40a60b:	sar    BYTE PTR [edx+0x4c78a2f6],1
  40a611:	mov    ebp,0x3faf70c6
  40a616:	or     al,0x28
  40a618:	or     DWORD PTR [esi],eax
  40a61a:	dec    eax
  40a61b:	rol    BYTE PTR [ebx+0x4b],0xf5
  40a61f:	jmp    0x40a640
  40a621:	rcl    DWORD PTR [ecx+0x3b39294e],1
  40a627:	addr16 pop ebp
  40a629:	test   BYTE PTR [ebp+0x4f00e103],dl
  40a62f:	jo     0x40a660
  40a631:	jg     0x40a6af
  40a633:	not    dl
  40a635:	pop    edx
  40a636:	call   0x57a5afbc
  40a63b:	and    al,cl
  40a63d:	xor    DWORD PTR [edi],0xda57e2f4
  40a643:	dec    edi
  40a644:	mov    ecx,0x9447eed5
  40a649:	inc    ebx
  40a64a:	fcomi  st,st(6)
  40a64c:	cdq    
  40a64d:	imul   ecx,DWORD PTR [edx-0x4b],0xffffffce
  40a651:	fs (bad) 
  40a653:	jmp    0x916b:0x840f5c7c
  40a65a:	inc    ebp
  40a65b:	jnp    0x40a64d
  40a65d:	lock les eax,FWORD PTR [eax]
  40a660:	dec    esp
  40a661:	push   0x31222c1e
  40a666:	or     al,0x5
  40a668:	int    0x2d
  40a66a:	loopne 0x40a61c
  40a66c:	mov    ebx,0x46c502a7
  40a671:	push   0xffffffa7
  40a673:	(bad)  
  40a674:	mov    DWORD PTR [esi-0x49901906],ecx
  40a67a:	cwde   
  40a67b:	retf   
  40a67c:	adc    DWORD PTR [esi-0x78],esp
  40a67f:	ins    DWORD PTR es:[edi],dx
  40a680:	mov    edi,0x65d2db0c
  40a685:	mov    esi,0x36f88ac6
  40a68a:	or     DWORD PTR [eax],ebx
  40a68c:	je     0x40a6f7
  40a68e:	push   es
  40a68f:	mov    eax,ds:0x9c2a0f8
  40a694:	add    ebx,DWORD PTR [edx+0x71]
  40a697:	xchg   esi,eax
  40a698:	and    BYTE PTR [ecx-0x3a],ch
  40a69b:	jmp    0x40a6a9
  40a69d:	xor    eax,0x5d30aee3
  40a6a2:	rcl    dh,cl
  40a6a4:	fdivr  DWORD PTR [ecx]
  40a6a6:	and    bl,bh
  40a6a8:	leave  
  40a6a9:	les    edi,FWORD PTR [eax]
  40a6ab:	call   0x11c6ac8f
  40a6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6b1:	mov    edi,0x14862b69
  40a6b6:	inc    esp
  40a6b7:	jne    0x40a650
  40a6b9:	ins    BYTE PTR es:[edi],dx
  40a6ba:	fsubrp st(6),st
  40a6bc:	jecxz  0x40a6c3
  40a6be:	jp     0x40a733
  40a6c0:	push   esi
  40a6c1:	dec    ecx
  40a6c2:	sub    esi,edi
  40a6c4:	inc    edx
  40a6c5:	repz test al,0x9f
  40a6c8:	repnz xchg esp,eax
  40a6ca:	jg     0x40a6d2
  40a6cc:	mov    bh,0xf9
  40a6ce:	and    bh,cl
  40a6d0:	jne    0x40a6e1
  40a6d2:	mov    ah,0x6a
  40a6d4:	adc    dh,BYTE PTR [eax+0x5b]
  40a6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d8:	or     bl,al
  40a6da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6db:	ficom  WORD PTR [ebx]
  40a6dd:	mov    ebx,0xa90da7da
  40a6e2:	sub    ebx,DWORD PTR [esi+0x43ce5518]
  40a6e8:	jnp    0x40a6a8
  40a6ea:	les    eax,FWORD PTR [edi+0x4bb171e9]
  40a6f0:	add    DWORD PTR [edi+edx*1],ebx
  40a6f3:	pusha  
  40a6f4:	jmp    0xf29b:0x6a6d579c
  40a6fb:	sub    ch,bl
  40a6fd:	(bad)  
  40a6fe:	fbld   TBYTE PTR [esi-0x8]
  40a701:	loope  0x40a765
  40a703:	push   ebx
  40a704:	ffreep st(5)
  40a706:	ffreep st(7)
  40a708:	sbb    al,0x3b
  40a70a:	mov    ebp,DWORD PTR [edx+0x47]
  40a70d:	and    dl,BYTE PTR [ecx]
  40a70f:	mov    bl,0x67
  40a711:	mov    ?,WORD PTR [edi-0x4681bad4]
  40a717:	int    0xf7
  40a719:	scas   al,BYTE PTR es:[edi]
  40a71a:	sti    
  40a71b:	fwait
  40a71c:	std    
  40a71d:	push   eax
  40a71e:	jl     0x40a71c
  40a720:	ds gs retf 0xa664
  40a725:	cmp    DWORD PTR [esi+0x7fe56d92],ebx
  40a72b:	inc    edi
  40a72c:	or     ah,BYTE PTR [esp+eax*1]
  40a72f:	lods   al,BYTE PTR ds:[esi]
  40a730:	cwde   
  40a731:	sbb    ebp,DWORD PTR [esi+0x2c86d28]
  40a737:	xchg   BYTE PTR [edi*1+0x65a79dcc],cl
  40a73e:	xor    al,0x2
  40a740:	call   FWORD PTR ds:[edi]
  40a743:	pushf  
  40a744:	or     edi,DWORD PTR [esi+0xa]
  40a747:	shr    BYTE PTR [edi],cl
  40a749:	scas   al,BYTE PTR es:[edi]
  40a74a:	adc    edi,DWORD PTR [edi-0x63e2e9b2]
  40a750:	and    al,BYTE PTR [ebx]
  40a752:	into   
  40a753:	jns    0x40a707
  40a755:	cmp    al,0x68
  40a757:	fimul  WORD PTR [eax*2-0xbcbcefa]
  40a75e:	out    dx,eax
  40a75f:	pop    ds
  40a760:	add    DWORD PTR [ecx],ebx
  40a762:	xor    al,0x8d
  40a764:	dec    edi
  40a765:	add    eax,0xf0c94d79
  40a76a:	rol    ch,0xb7
  40a76d:	inc    esp
  40a76e:	and    ebx,DWORD PTR [ebx]
  40a770:	push   es
  40a771:	hlt    
  40a772:	jp     0x40a6fe
  40a774:	jle    0x40a78c
  40a776:	add    eax,0x220dcc40
  40a77b:	int    0x76
  40a77d:	xor    DWORD PTR gs:[ebx+0xdd5068e],esi
  40a784:	sub    dl,BYTE PTR [ebx]
  40a786:	pop    edx
  40a787:	jno    0x40a7b5
  40a789:	mov    ecx,0xee1fc9e0
  40a78e:	retf   0x71a9
  40a791:	add    edx,esi
  40a793:	sbb    eax,0x482b5465
  40a798:	pop    esp
  40a799:	dec    DWORD PTR [ecx-0x60]
  40a79c:	lea    ebp,[eax]
  40a79e:	sbb    DWORD PTR [esi],eax
  40a7a0:	mov    ch,0x29
  40a7a2:	les    ebx,FWORD PTR [esi+ebx*2]
  40a7a5:	repnz in ax,dx
  40a7a8:	cmp    edx,ebx
  40a7aa:	pop    ecx
  40a7ab:	cld    
  40a7ac:	mov    dh,0xe1
  40a7ae:	jb     0x40a752
  40a7b0:	iret   
  40a7b1:	stc    
  40a7b2:	nop
  40a7b3:	stos   DWORD PTR es:[edi],eax
  40a7b4:	cmp    al,0x2d
  40a7b6:	cwde   
  40a7b7:	cmp    edi,DWORD PTR [ecx+0x16]
  40a7ba:	in     al,0x12
  40a7bc:	into   
  40a7bd:	ret    0x173c
  40a7c0:	mov    bl,0xed
  40a7c2:	push   cs
  40a7c3:	ror    DWORD PTR [eax-0x15],1
  40a7c6:	mov    ds:0x83a9f6d7,eax
  40a7cb:	pop    ebp
  40a7cc:	(bad)  
  40a7cd:	xchg   edi,eax
  40a7ce:	popf   
  40a7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d0:	sub    eax,0x810769b8
  40a7d5:	pop    ecx
  40a7d6:	ins    BYTE PTR es:[edi],dx
  40a7d7:	jmp    0x73b7:0xce6af29
  40a7de:	je     0x40a848
  40a7e0:	popf   
  40a7e1:	not    edi
  40a7e3:	lea    edx,[esi+0x2df4d824]
  40a7e9:	lahf   
  40a7ea:	push   0x19bcc594
  40a7ef:	jge    0x40a791
  40a7f1:	mov    eax,DWORD PTR [ebx]
  40a7f3:	aad    0x1e
  40a7f5:	mov    ebx,0x1d7c83e
  40a7fa:	call   0xbe43:0x584e3686
  40a801:	sbb    eax,0xb670cd72
  40a806:	cwde   
  40a807:	call   FWORD PTR [edi+0x9327a62]
  40a80d:	pcmpeqd mm0,QWORD PTR [edi+eax*4-0x60]
  40a812:	sbb    al,0xfd
  40a814:	mov    ah,0xe0
  40a816:	rol    ebx,cl
  40a818:	cmp    bl,al
  40a81a:	int    0xa4
  40a81c:	repnz cmp ecx,edi
  40a81f:	add    BYTE PTR [ecx*2-0x42754465],dh
  40a826:	inc    esi
  40a827:	push   ds
  40a828:	outs   dx,DWORD PTR ds:[esi]
  40a829:	jl     0x40a7dd
  40a82b:	adc    DWORD PTR [ebx-0x955fdf4],ebx
  40a831:	lea    ebx,[edi+0x62ea57ae]
  40a837:	xchg   esp,eax
  40a838:	pushf  
  40a839:	scas   al,BYTE PTR es:[edi]
  40a83a:	std    
  40a83b:	jb     0x40a876
  40a83d:	jbe    0x40a894
  40a83f:	shr    BYTE PTR [ecx-0x4b6d26e7],cl
  40a845:	lods   eax,DWORD PTR ds:[esi]
  40a846:	out    0xf3,eax
  40a848:	test   DWORD PTR ds:0xe3656db9,esi
  40a84e:	idiv   ecx
  40a850:	out    dx,al
  40a851:	aas    
  40a852:	push   eax
  40a853:	inc    DWORD PTR [ebp+0x29]
  40a856:	jno    0x40a8a1
  40a858:	and    DWORD PTR [edi+0x7],esi
  40a85b:	daa    
  40a85c:	in     eax,0x15
  40a85e:	pop    ecx
  40a85f:	loop   0x40a826
  40a861:	(bad)  
  40a862:	sub    ebp,0x69971295
  40a868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a869:	lds    ebp,FWORD PTR [ebp+0x4e]
  40a86c:	sar    dh,0xe9
  40a86f:	dec    ebx
  40a870:	stos   DWORD PTR es:[edi],eax
  40a871:	pushf  
  40a872:	jmp    0xee03671a
  40a877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a878:	fisub  WORD PTR [esi+0x4d7ab3ff]
  40a87e:	pop    esp
  40a87f:	sahf   
  40a880:	rcl    DWORD PTR [ebx+eiz*8],cl
  40a883:	add    al,0xbb
  40a885:	mov    WORD PTR [esi+0x109b059c],gs
  40a88b:	cld    
  40a88c:	jmp    0x55ff:0x2be7043d
  40a893:	lds    ebp,FWORD PTR [esi-0x6f0f0fc6]
  40a899:	repz retf 
  40a89b:	jbe    0x40a891
  40a89d:	add    ebp,ecx
  40a89f:	test   esi,ebx
  40a8a1:	sbb    al,BYTE PTR [ecx]
  40a8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a4:	mov    esp,DWORD PTR [esp+edi*8+0x10]
  40a8a8:	cld    
  40a8a9:	xchg   edx,eax
  40a8aa:	std    
  40a8ab:	loope  0x40a8b8
  40a8ad:	in     eax,0xeb
  40a8af:	les    ebx,FWORD PTR [edi]
  40a8b1:	repz (bad) 
  40a8b3:	scas   eax,DWORD PTR es:[edi]
  40a8b4:	inc    edi
  40a8b5:	iret   
  40a8b6:	push   esi
  40a8b7:	test   eax,0xf6605f7a
  40a8bc:	xor    al,0x70
  40a8be:	out    0x71,eax
  40a8c0:	pop    ecx
  40a8c1:	mov    ch,0x65
  40a8c3:	inc    esp
  40a8c4:	push   eax
  40a8c5:	inc    esi
  40a8c6:	(bad)  
  40a8c7:	stc    
  40a8c8:	add    ebp,edi
  40a8ca:	inc    ecx
  40a8cb:	in     al,0x75
  40a8cd:	inc    ebx
  40a8ce:	mov    edx,0x73fdf506
  40a8d3:	shl    BYTE PTR [eax+0x47e01101],cl
  40a8d9:	or     eax,DWORD PTR [edi+0x36d6194a]
  40a8df:	jp     0x40a892
  40a8e1:	mov    ch,0x7d
  40a8e3:	xchg   esi,eax
  40a8e4:	aam    0xa6
  40a8e6:	jo     0x40a8d8
  40a8e8:	push   esi
  40a8e9:	lock and ch,dl
  40a8ec:	xchg   edi,eax
  40a8ed:	jb     0x40a944
  40a8ef:	dec    edi
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428303,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x4282f7,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428253,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x4282fb,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428283
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428277,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x4282f3
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42822b
  40aa46:	sbb    DWORD PTR ds:0x42816b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0xca7e1f6a
  40aa65:	ds mov ebp,0x18235fb0
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	mov    ecx,0x1d319ec9
  40aa75:	repz ror BYTE PTR ds:[ebx+0x48],1
  40aa7a:	mov    ds:0x37473196,al
  40aa7f:	dec    edx
  40aa80:	imul   esp,esi,0xc1c3fd3
  40aa86:	mov    ecx,0x4b8ad30a
  40aa8b:	addr16 call 0x88a2:0x95099e0d
  40aa93:	sub    eax,DWORD PTR [ebp-0x616f1396]
  40aa99:	in     al,dx
  40aa9a:	leave  
  40aa9b:	mov    al,0x7d
  40aa9d:	retf   
  40aa9e:	cs dec edx
  40aaa0:	cmp    al,0xec
  40aaa2:	adc    DWORD PTR [edx+0x6f99a874],eax
  40aaa8:	pop    edi
  40aaa9:	ja     0x40aaea
  40aaab:	leave  
  40aaac:	jge    0x40aaa8
  40aaae:	inc    esp
  40aaaf:	shl    bl,0x9d
  40aab2:	out    0x5d,al
  40aab4:	nop
  40aab5:	xchg   edi,eax
  40aab6:	das    
  40aab7:	ss not bl
  40aaba:	imul   edi,DWORD PTR [ebx+0x1824208c],0xffffff99
  40aac1:	call   0xb2d1:0xd300d90b
  40aac8:	in     al,0x73
  40aaca:	ins    BYTE PTR es:[edi],dx
  40aacb:	dec    edi
  40aacc:	and    ax,0x1aae
  40aad0:	cmp    ebx,DWORD PTR [edi]
  40aad2:	inc    eax
  40aad3:	mov    cl,0x8f
  40aad5:	scas   al,BYTE PTR es:[edi]
  40aad6:	dec    eax
  40aad7:	sub    ch,BYTE PTR [eax]
  40aad9:	and    bh,ch
  40aadb:	jo     0x40ab22
  40aadd:	pop    edi
  40aade:	pop    edx
  40aadf:	sub    DWORD PTR [eax+eiz*1+0x2c],eax
  40aae3:	cli    
  40aae4:	aas    
  40aae5:	mul    BYTE PTR [edi]
  40aae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aae8:	jmp    DWORD PTR [esi+ecx*2-0x42dd3ea]
  40aaef:	sub    al,0x23
  40aaf1:	inc    eax
  40aaf2:	pushf  
  40aaf3:	stos   BYTE PTR es:[edi],al
  40aaf4:	push   0x99565a36
  40aaf9:	mov    edi,0x99fde8eb
  40aafe:	loop   0x40aac1
  40ab00:	mov    ss,esi
  40ab02:	inc    edi
  40ab03:	push   ss
  40ab04:	or     BYTE PTR [ebp+0x2a],dh
  40ab07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab08:	pusha  
  40ab09:	lods   al,BYTE PTR ds:[esi]
  40ab0a:	mov    ds:0x4a89809e,eax
  40ab0f:	cli    
  40ab10:	aad    0xd7
  40ab12:	in     eax,dx
  40ab13:	cmp    al,0x10
  40ab15:	retf   
  40ab16:	(bad)  
  40ab17:	call   0x5aa2:0xefbe9ed9
  40ab1e:	aam    0x38
  40ab20:	sub    al,BYTE PTR [ebx]
  40ab22:	ins    DWORD PTR es:[edi],dx
  40ab23:	dec    esp
  40ab24:	lahf   
  40ab25:	or     DWORD PTR [edx-0x27],ebp
  40ab28:	call   0x2fd62672
  40ab2d:	mov    al,ds:0xc6ca6b55
  40ab32:	out    dx,eax
  40ab33:	les    esp,FWORD PTR [ebx]
  40ab35:	cmp    eax,0x3613e499
  40ab3a:	inc    esp
  40ab3b:	add    eax,DWORD PTR [ebp-0x16]
  40ab3e:	(bad)  
  40ab3f:	into   
  40ab40:	ds leave 
  40ab42:	xchg   ebp,eax
  40ab43:	dec    eax
  40ab44:	mov    ebx,0x661304a9
  40ab49:	add    eax,DWORD PTR [esi+eiz*1-0x3fb52415]
  40ab50:	stos   BYTE PTR es:[di],al
  40ab52:	xor    ebx,DWORD PTR [ebp-0x63d9c553]
  40ab58:	sbb    BYTE PTR ds:0x56d1574a,bh
  40ab5e:	ss out dx,al
  40ab60:	paddsb mm5,QWORD PTR [edi+0x6f]
  40ab64:	mov    ah,0xe2
  40ab66:	dec    ebp
  40ab67:	xchg   ebx,eax
  40ab68:	mov    ch,ah
  40ab6a:	mov    eax,ds:0x5829ebbd
  40ab6f:	out    dx,al
  40ab70:	mov    eax,0x2cca7c43
  40ab75:	in     eax,dx
  40ab76:	mov    ds:0xf826da87,eax
  40ab7b:	pop    edi
  40ab7c:	xchg   esi,eax
  40ab7d:	add    ebp,esp
  40ab7f:	popa   
  40ab80:	imul   esi,ecx,0xffffff9b
  40ab83:	std    
  40ab84:	out    dx,eax
  40ab85:	mov    eax,ds:0x2436811d
  40ab8a:	call   0xa22ae437
  40ab8f:	pop    DWORD PTR cs:[ecx-0x6a469796]
  40ab96:	add    al,0xfd
  40ab98:	cld    
  40ab99:	fisttp WORD PTR [ecx]
  40ab9b:	pop    eax
  40ab9c:	cvtpi2ps xmm7,QWORD PTR [edi-0xc]
  40aba0:	nop
  40aba1:	ds inc esp
  40aba3:	push   ebx
  40aba4:	cmp    BYTE PTR [ebx+0x63],0xda
  40aba8:	aam    0x28
  40abaa:	add    eax,0x176b6e76
  40abaf:	arpl   WORD PTR [ecx-0x80],dx
  40abb2:	fistp  WORD PTR [ecx]
  40abb4:	dec    esi
  40abb5:	jp     0x40abcf
  40abb7:	shufps xmm3,xmm6,0x4e
  40abbb:	call   0xdfaa9356
  40abc0:	jmp    0x40ab63
  40abc2:	das    
  40abc3:	cmp    eax,0x7c47a9c9
  40abc8:	test   BYTE PTR [esi+0x7390b140],bh
  40abce:	xchg   ebp,eax
  40abcf:	push   ebx
  40abd0:	out    dx,eax
  40abd1:	jbe    0x40abf2
  40abd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd4:	aad    0xe2
  40abd6:	ins    DWORD PTR es:[edi],dx
  40abd7:	in     eax,dx
  40abd8:	jg     0x40abf2
  40abda:	pop    edx
  40abdb:	mov    edi,DWORD PTR [edi+0x3c]
  40abde:	sbb    DWORD PTR [ecx+eiz*8-0x6a095036],eax
  40abe5:	fidivr DWORD PTR [ebp+0x63569fe8]
  40abeb:	ror    ebp,cl
  40abed:	aad    0xff
  40abef:	loope  0x40abd4
  40abf1:	bound  edi,QWORD PTR [eax-0x56aef761]
  40abf7:	xchg   DWORD PTR [ebp+0x3e7648a8],edi
  40abfd:	out    0x8f,eax
  40abff:	mov    ds:0x15af6100,al
  40ac04:	xor    BYTE PTR [ecx-0x2a],al
  40ac07:	lds    esi,FWORD PTR [ecx-0x14]
  40ac0a:	repnz inc edi
  40ac0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac0d:	lahf   
  40ac0e:	ficom  DWORD PTR [ebp-0x71573ed5]
  40ac14:	or     edi,0xffffffa8
  40ac17:	or     BYTE PTR ds:0x52300ef3,dl
  40ac1d:	icebp  
  40ac1e:	mov    eax,ds:0x6887acab
  40ac23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac24:	lock xor ecx,DWORD PTR [ebx]
  40ac27:	sbb    al,0x73
  40ac29:	push   ebx
  40ac2a:	scas   al,BYTE PTR es:[edi]
  40ac2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac2c:	sub    al,0x4b
  40ac2e:	enter  0xb327,0xbf
  40ac32:	add    ebx,edi
  40ac34:	lea    esp,[ecx]
  40ac36:	ror    BYTE PTR [edx],1
  40ac38:	(bad)  
  40ac39:	jl     0x40aca9
  40ac3b:	xchg   ebx,eax
  40ac3c:	(bad)  
  40ac3d:	retf   
  40ac3e:	int3   
  40ac3f:	inc    eax
  40ac40:	(bad)  
  40ac42:	(bad)  [ebx+0x1fc12957]
  40ac48:	jae    0x40ac23
  40ac4a:	inc    esi
  40ac4b:	idiv   BYTE PTR [edi+0x6b6e4702]
  40ac51:	in     al,dx
  40ac52:	mov    ecx,DWORD PTR [edx+0x22]
  40ac55:	cs xchg esi,eax
  40ac57:	fistp  QWORD PTR ds:[ecx-0x1c]
  40ac5b:	pop    ebp
  40ac5c:	icebp  
  40ac5d:	ret    
  40ac5e:	mov    ds:0x6dc51c7c,eax
  40ac63:	rcr    BYTE PTR ds:0x748fad2a,0xd
  40ac6a:	lahf   
  40ac6b:	inc    ebp
  40ac6c:	push   ebp
  40ac6d:	test   DWORD PTR [ecx],ebp
  40ac6f:	test   DWORD PTR [edi+0x49],eax
  40ac72:	inc    eax
  40ac73:	fsubr  st(6),st
  40ac75:	jp     0x40ace3
  40ac77:	mov    dh,ah
  40ac79:	or     eax,0xd0673c89
  40ac7e:	popf   
  40ac7f:	inc    ebp
  40ac80:	xor    DWORD PTR [edx-0x54],edi
  40ac83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac84:	mov    ds:0xd4515f8,eax
  40ac89:	ss inc edi
  40ac8b:	or     ebx,DWORD PTR [ebx-0x2a]
  40ac8e:	sahf   
  40ac8f:	ja     0x40acd5
  40ac91:	int    0xff
  40ac93:	test   ch,cl
  40ac95:	adc    BYTE PTR [edx],al
  40ac97:	cli    
  40ac98:	inc    ecx
  40ac99:	pop    ebx
  40ac9a:	ins    DWORD PTR es:[edi],dx
  40ac9b:	mov    edi,0x3632863b
  40aca0:	jo     0x40ac95
  40aca2:	nop
  40aca3:	mov    ebp,0x78385529
  40aca8:	sahf   
  40aca9:	je     0x40ad26
  40acab:	popa   
  40acac:	adc    edx,ebp
  40acae:	push   ecx
  40acaf:	ins    BYTE PTR es:[edi],dx
  40acb0:	idiv   edx
  40acb2:	xor    ebx,DWORD PTR [esi+0x1a9fe38a]
  40acb8:	call   0xcb5eda4b
  40acbd:	xchg   edi,eax
  40acbe:	jg     0x40acfe
  40acc0:	pop    edx
  40acc1:	iret   
  40acc2:	lods   al,BYTE PTR ds:[esi]
  40acc3:	and    BYTE PTR [edx],ah
  40acc5:	hlt    
  40acc6:	add    BYTE PTR [ecx+0x4871d748],al
  40accc:	test   BYTE PTR [esi+0x5a4576a5],0x64
  40acd3:	inc    eax
  40acd4:	cwde   
  40acd5:	in     al,0xa8
  40acd7:	push   edx
  40acd8:	les    edi,FWORD PTR [edx]
  40acda:	xchg   DWORD PTR [esi],esp
  40acdc:	gs jp  0x40ad5b
  40acdf:	ss call 0x44ed:0x7bb6b3ae
  40ace7:	sub    al,0x40
  40ace9:	(bad)  
  40acea:	push   eax
  40aceb:	and    edx,ebp
  40aced:	push   esp
  40acee:	out    0xff,eax
  40acf0:	or     DWORD PTR ds:0x8ffd5d1b,ebp
  40acf6:	js     0x40ad69
  40acf8:	adc    bh,BYTE PTR [edi]
  40acfa:	retf   0x252a
  40acfd:	sbb    BYTE PTR [eax-0x34a70fe3],0x68
  40ad04:	mov    BYTE PTR [ebp-0x63],dl
  40ad07:	or     al,0xa5
  40ad09:	add    DWORD PTR [ebp+0x1d],0xe13ad0dd
  40ad10:	and    edx,edx
  40ad12:	mov    eax,gs:0x2fa29752
  40ad18:	loope  0x40acbc
  40ad1a:	std    
  40ad1b:	call   0x9280:0x636a75e5
  40ad22:	aas    
  40ad23:	pop    eax
  40ad24:	xor    bl,BYTE PTR [ecx+0x46]
  40ad27:	lds    ecx,FWORD PTR [edx+0x72]
  40ad2a:	cmp    al,al
  40ad2c:	inc    edx
  40ad2d:	mov    cl,0xc9
  40ad2f:	rol    BYTE PTR [edx+0x35e1fc91],1
  40ad35:	das    
  40ad36:	xchg   BYTE PTR [ecx+0x7a],ah
  40ad39:	push   0xfffffff2
  40ad3b:	cdq    
  40ad3c:	call   0x7aa9d65b
  40ad41:	add    bh,BYTE PTR ds:[ebx+0x4e576776]
  40ad48:	ins    BYTE PTR es:[edi],dx
  40ad49:	or     al,0xdf
  40ad4b:	lods   eax,DWORD PTR ds:[esi]
  40ad4c:	dec    ebx
  40ad4d:	outs   dx,DWORD PTR ds:[esi]
  40ad4e:	or     eax,esp
  40ad50:	hlt    
  40ad51:	ror    BYTE PTR [edi+0x50f290d5],cl
  40ad57:	push   ss
  40ad58:	in     eax,0xc
  40ad5a:	icebp  
  40ad5b:	dec    esp
  40ad5c:	xchg   ebp,edx
  40ad5e:	push   0x49
  40ad60:	scas   al,BYTE PTR es:[edi]
  40ad61:	push   edi
  40ad62:	nop
  40ad63:	test   DWORD PTR [ebp-0x27a0d3af],ebx
  40ad69:	(bad)  
  40ad6a:	jbe    0x40ad3d
  40ad6c:	daa    
  40ad6d:	or     eax,0x2098997b
  40ad72:	cli    
  40ad73:	sti    
  40ad74:	into   
  40ad75:	ins    DWORD PTR es:[edi],dx
  40ad76:	out    dx,eax
  40ad77:	int3   
  40ad78:	jecxz  0x40ad19
  40ad7a:	push   ebp
  40ad7b:	scas   eax,DWORD PTR es:[edi]
  40ad7c:	mov    ds,esi
  40ad7e:	jmp    0x8ffc5076
  40ad83:	cli    
  40ad84:	add    eax,0x9bd3eaed
  40ad89:	lahf   
  40ad8a:	(bad)  
  40ad8b:	or     esp,DWORD PTR [ebx-0x7a]
  40ad8e:	jo     0x40adfe
  40ad90:	push   es
  40ad91:	out    dx,al
  40ad92:	jge    0x40ad8d
  40ad94:	aad    0x4a
  40ad96:	shl    BYTE PTR [ebx+eax*1],1
  40ad99:	jle    0x40ad2e
  40ad9b:	sbb    bh,BYTE PTR ds:[ebp+0x57e8ccfe]
  40ada2:	cmp    al,0x27
  40ada4:	rol    BYTE PTR [ecx-0x2c5d57c8],cl
  40adaa:	mov    dl,0x8c
  40adac:	jp     0x40add5
  40adae:	out    0xfd,al
  40adb0:	sub    ecx,DWORD PTR [ebx-0x7d]
  40adb3:	retf   
  40adb4:	mov    ds:0x7fb78228,eax
  40adb9:	xchg   esi,eax
  40adba:	mov    dh,0xdd
  40adbc:	fcmovb st,st(7)
  40adbe:	push   es
  40adbf:	push   esp
  40adc0:	inc    ebx
  40adc1:	cli    
  40adc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adc4:	fwait
  40adc5:	mov    fs,WORD PTR [ebx]
  40adc7:	test   eax,0xed0929c5
  40adcc:	fwait
  40adcd:	xchg   DWORD PTR fs:[ebp-0x5d],ebp
  40add1:	inc    ebx
  40add2:	leave  
  40add3:	jb     0x40ade1
  40add5:	shr    BYTE PTR [edx-0x65ab13ab],cl
  40addb:	mov    dh,0x5e
  40addd:	daa    
  40adde:	fstp   QWORD PTR [edx]
  40ade0:	int    0xfa
  40ade2:	mov    ecx,0x8c3b4991
  40ade7:	add    DWORD PTR [ebx-0x3d],edi
  40adea:	imul   BYTE PTR [edi+0x7d]
  40aded:	adc    dh,bh
  40adef:	sbb    ebx,DWORD PTR [esi+0xc]
  40adf2:	sub    eax,0x2cf95303
  40adf7:	adc    DWORD PTR ds:[ecx+0x137a7d85],ebx
  40adfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adff:	out    dx,al
  40ae00:	push   esi
  40ae01:	lds    esi,FWORD PTR [esi]
  40ae03:	dec    ebx
  40ae04:	xchg   esp,eax
  40ae05:	xchg   ebx,eax
  40ae06:	adc    al,0xca
  40ae08:	repz mov dh,0x55
  40ae0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae0c:	ja     0x40ae07
  40ae0e:	pop    ecx
  40ae0f:	or     al,0xa8
  40ae11:	mov    al,ds:0x3613449
  40ae16:	jns    0x40ae0d
  40ae18:	push   ss
  40ae19:	jecxz  0x40ae5d
  40ae1b:	mov    bh,0x28
  40ae1d:	jae    0x40ae5c
  40ae1f:	jnp    0x40ae17
  40ae21:	sub    BYTE PTR [edi],al
  40ae23:	das    
  40ae24:	popa   
  40ae25:	fs pop eax
  40ae27:	scas   al,BYTE PTR es:[edi]
  40ae28:	cmp    DWORD PTR [ecx+esi*2-0x1e00f4f9],0x5
  40ae30:	dec    eax
  40ae31:	and    BYTE PTR [esi],bl
  40ae33:	adc    DWORD PTR [edx+edx*8+0x1e43b702],eax
  40ae3a:	adc    ah,BYTE PTR [edi-0x78]
  40ae3d:	sub    eax,0x3c69562d
  40ae42:	(bad)  
  40ae43:	and    al,0xbf
  40ae45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae46:	xor    esp,DWORD PTR [ebx]
  40ae48:	in     eax,0xc7
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42828b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428253
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428387,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42826b
  40aea0:	cmp    DWORD PTR ds:0x42828b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280bb
  40aebd:	call   DWORD PTR ds:0x428e78
  40aec3:	mov    ecx,DWORD PTR ds:0x42830b
  40aec9:	xor    DWORD PTR ds:0x42822f,ecx
  40aecf:	or     DWORD PTR ds:0x42837b,ecx
  40aed5:	or     DWORD PTR ds:0x428293,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x42829f
  40aee1:	adc    DWORD PTR ds:0x428267,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428163
  40aeef:	adc    ecx,DWORD PTR ds:0x428387
  40aef5:	mov    DWORD PTR ds:0x428163,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428383,0x4282f7
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428163,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	fsub   DWORD PTR [eax-0x7f]
  40af32:	mov    al,0xb5
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	rol    DWORD PTR [eax-0x51],0x2f
  40af3f:	popf   
  40af40:	jne    0x40aefe
  40af42:	and    al,0x80
  40af44:	sub    al,0x1c
  40af46:	dec    edx
  40af47:	shr    BYTE PTR [ebx-0x2c79fd60],1
  40af4d:	dec    esp
  40af4e:	into   
  40af4f:	inc    eax
  40af50:	out    dx,al
  40af51:	and    eax,0xc17fdd75
  40af56:	sub    BYTE PTR [edx],ch
  40af58:	int3   
  40af59:	adc    BYTE PTR [edi],ah
  40af5b:	push   cs
  40af5c:	imul   ebx,esi,0x23
  40af5f:	add    al,0xbd
  40af61:	daa    
  40af62:	stos   DWORD PTR es:[edi],eax
  40af63:	jae    0x40af11
  40af65:	cmp    eax,DWORD PTR [edi]
  40af67:	mov    esp,0xd92c39bd
  40af6c:	inc    esi
  40af6d:	ss mov esi,0x9b2087cb
  40af73:	jmp    0xab38:0x5a28aaa
  40af7a:	dec    ebp
  40af7b:	sbb    al,0xd9
  40af7d:	sub    ah,BYTE PTR [edx-0x34]
  40af80:	push   eax
  40af81:	mov    al,0xce
  40af83:	test   eax,0x148ab0a3
  40af88:	sar    BYTE PTR [edi],0xc7
  40af8b:	mov    dl,0xf7
  40af8d:	pop    edx
  40af8e:	enter  0xbc06,0xc0
  40af92:	xchg   edx,eax
  40af93:	jecxz  0x40afe8
  40af95:	les    ebp,FWORD PTR [ebx+0x6b]
  40af98:	(bad)  
  40af99:	retf   0x7371
  40af9c:	inc    esi
  40af9d:	sub    bh,al
  40af9f:	jg     0x40af35
  40afa1:	int    0x16
  40afa3:	cdq    
  40afa4:	fnstsw WORD PTR [ebp-0x61]
  40afa7:	aam    0xc0
  40afa9:	out    0x5b,eax
  40afab:	xor    al,0xa7
  40afad:	nop
  40afae:	je     0x40b00e
  40afb0:	inc    eax
  40afb1:	es js  0x40afc8
  40afb4:	addr16 push ds
  40afb6:	adc    cl,BYTE PTR [ebx]
  40afb8:	jb     0x40afbb
  40afba:	rcl    DWORD PTR [ebp+ebp*2-0x34],0xe0
  40afbf:	ins    DWORD PTR es:[edi],dx
  40afc0:	sar    BYTE PTR [edx],cl
  40afc2:	adc    bh,0x10
  40afc5:	xchg   ecx,eax
  40afc6:	xchg   edi,eax
  40afc7:	lock dec esp
  40afc9:	and    BYTE PTR [esi+eax*4],cl
  40afcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afcd:	mov    eax,0xca6f5a59
  40afd2:	mov    dl,0x7e
  40afd4:	sbb    al,dh
  40afd6:	int3   
  40afd7:	adc    eax,0x67a0b321
  40afdc:	loopne 0x40afd6
  40afde:	dec    edi
  40afdf:	adc    ebx,esi
  40afe1:	ror    DWORD PTR [ebx],0x50
  40afe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afe5:	imul   ecx
  40afe7:	sub    ebx,DWORD PTR [edi-0x429090fd]
  40afed:	mov    ecx,0x65a559c3
  40aff2:	cmp    al,0x2
  40aff4:	xchg   edx,eax
  40aff5:	push   cs
  40aff6:	xor    al,0x52
  40aff8:	jne    0x40afd3
  40affa:	test   BYTE PTR [ebx+0x11],cl
  40affd:	jmp    0xd43b8127
  40b002:	ret    0xbbf5
  40b005:	fsubr  DWORD PTR [edx]
  40b007:	aam    0x64
  40b009:	or     eax,0x7b887512
  40b00e:	cli    
  40b00f:	je     0x40afd5
  40b011:	in     al,dx
  40b012:	scas   al,BYTE PTR es:[edi]
  40b013:	fimul  DWORD PTR [edi]
  40b015:	clc    
  40b016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b017:	xor    DWORD PTR [ebp-0x7e],eax
  40b01a:	stos   BYTE PTR es:[edi],al
  40b01b:	rcl    DWORD PTR [ecx],0xfd
  40b01e:	or     al,0x88
  40b020:	jg     0x40b08a
  40b022:	and    DWORD PTR [edi+esi*2+0x185d625],esp
  40b029:	fild   QWORD PTR [edx-0x160c8f62]
  40b02f:	cmp    DWORD PTR [eax-0x6],0xffffffac
  40b033:	pop    ebx
  40b034:	adc    ecx,esi
  40b036:	xchg   ebp,eax
  40b037:	rol    DWORD PTR [eax],cl
  40b039:	sbb    eax,0x75081386
  40b03e:	test   eax,0x7df7ec58
  40b043:	mov    eax,0xbffd4cbf
  40b048:	jo     0x40afdf
  40b04a:	daa    
  40b04b:	push   edi
  40b04c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b04d:	lahf   
  40b04e:	(bad)  
  40b04f:	xchg   ebx,eax
  40b050:	adc    cl,BYTE PTR [edx+0x10]
  40b053:	and    DWORD PTR [edi-0x62f4ce3a],edx
  40b059:	push   es
  40b05a:	fisub  WORD PTR [esi-0x5c]
  40b05d:	push   0x851665bc
  40b062:	imul   esi,DWORD PTR [edx+0x75],0x55
  40b066:	rol    DWORD PTR [eax],1
  40b068:	jl     0x40b008
  40b06a:	aad    0xff
  40b06c:	stos   DWORD PTR es:[edi],eax
  40b06d:	stos   DWORD PTR es:[edi],eax
  40b06e:	mov    ebx,0xa2aed851
  40b073:	pop    ebx
  40b074:	mul    DWORD PTR [edx+0x67]
  40b077:	or     ch,BYTE PTR [ebx+0x21]
  40b07a:	scas   eax,DWORD PTR es:[edi]
  40b07b:	or     BYTE PTR [eax-0x74],ah
  40b07e:	retf   0x876
  40b081:	mov    ch,dh
  40b083:	fwait
  40b084:	loop   0x40b0d3
  40b086:	xor    eax,0xbf99e5e6
  40b08b:	inc    ebp
  40b08c:	add    al,0xe4
  40b08e:	rcl    DWORD PTR [edi-0xf],1
  40b091:	mov    ds:0xc9854066,al
  40b096:	and    esi,ecx
  40b098:	mov    ah,0x7f
  40b09a:	test   eax,0x4ddfb18a
  40b09f:	mov    eax,ds:0x1a3191a8
  40b0a4:	xchg   esp,eax
  40b0a5:	pop    ebp
  40b0a6:	push   ss
  40b0a7:	icebp  
  40b0a8:	pop    esi
  40b0a9:	ror    esp,cl
  40b0ab:	xor    DWORD PTR [ebp-0x649da74d],esi
  40b0b1:	adc    al,0x3b
  40b0b3:	call   0xde921f10
  40b0b8:	bound  esi,QWORD PTR [eax-0x25]
  40b0bb:	sub    al,0xda
  40b0bd:	outs   dx,DWORD PTR ds:[esi]
  40b0be:	push   ecx
  40b0bf:	push   es
  40b0c0:	hlt    
  40b0c1:	out    0x5f,al
  40b0c3:	(bad)  
  40b0c4:	scas   al,BYTE PTR es:[edi]
  40b0c5:	shl    DWORD PTR [ecx+edi*4],0xf
  40b0c9:	rol    BYTE PTR [ebx+0x6b],1
  40b0cc:	jb     0x40b067
  40b0ce:	repnz push edi
  40b0d0:	mov    eax,ds:0xe3f75240
  40b0d5:	call   0x12ec56ab
  40b0da:	data16 sahf 
  40b0dc:	and    eax,0xcc89bc8c
  40b0e1:	jp     0x40b0af
  40b0e3:	cs out 0x70,eax
  40b0e6:	mov    eax,ds:0xd01d5f8b
  40b0eb:	mov    eax,ds:0xb5526276
  40b0f0:	(bad)  
  40b0f1:	fwait
  40b0f2:	add    ah,BYTE PTR [edi]
  40b0f4:	pop    edx
  40b0f5:	outs   dx,DWORD PTR ds:[esi]
  40b0f6:	or     al,0x63
  40b0f8:	xchg   al,ah
  40b0fa:	and    ah,ch
  40b0fc:	jne    0x40b113
  40b0fe:	jmp    0xc24c596c
  40b103:	mov    ecx,ecx
  40b105:	add    BYTE PTR [edi+0x9],bl
  40b108:	jnp    0x40b15c
  40b10a:	xchg   esp,eax
  40b10b:	cmp    ch,0x6e
  40b10e:	or     dh,BYTE PTR [ebx+esi*8-0x4a]
  40b112:	cs xchg ebx,eax
  40b114:	sub    DWORD PTR [ebx+0x63],ecx
  40b117:	call   0x721c:0xdf0037f0
  40b11e:	loopne 0x40b100
  40b120:	in     al,0xf6
  40b122:	inc    edx
  40b123:	cmp    eax,0x58f62fe7
  40b128:	das    
  40b129:	arpl   di,ax
  40b12b:	test   eax,0x1a9b8a12
  40b130:	sub    DWORD PTR [ebx+0x3c],ecx
  40b133:	rcl    DWORD PTR [ecx-0x7],1
  40b136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b137:	out    dx,eax
  40b138:	xlat   BYTE PTR ds:[ebx]
  40b139:	add    DWORD PTR [ebp-0x62009fcd],edx
  40b13f:	xor    bl,BYTE PTR [esi]
  40b141:	icebp  
  40b142:	mov    ebp,0xc5a10438
  40b147:	xchg   ebx,eax
  40b148:	jbe    0x40b191
  40b14a:	mov    dl,0xe6
  40b14c:	jge    0x40b17e
  40b14e:	mov    edx,0x9492ed04
  40b153:	sub    ah,BYTE PTR [ebp+eiz*4-0x538dc5ae]
  40b15a:	into   
  40b15b:	fimul  WORD PTR [esi]
  40b15d:	and    BYTE PTR ds:0x29e513f8,dh
  40b163:	ins    DWORD PTR es:[edi],dx
  40b164:	loop   0x40b188
  40b166:	in     al,dx
  40b167:	in     al,0xf7
  40b169:	mov    ah,0x27
  40b16b:	fs enter 0x37ff,0xee
  40b170:	imul   eax
  40b172:	mov    edi,0x6bfc586c
  40b177:	pop    es
  40b178:	bound  ebp,QWORD PTR [ecx+edx*1+0x8]
  40b17c:	loopne 0x40b15b
  40b17e:	xlat   BYTE PTR ds:[ebx]
  40b17f:	inc    ebp
  40b180:	stc    
  40b181:	inc    ebp
  40b182:	in     al,0x64
  40b184:	pusha  
  40b185:	dec    ebx
  40b186:	icebp  
  40b187:	jle    0x40b168
  40b189:	mov    al,ds:0xabe00a94
  40b18e:	sub    BYTE PTR ss:[eax-0x4],dh
  40b192:	ficomp DWORD PTR [ebx+esi*8-0x7f]
  40b196:	aaa    
  40b197:	jle    0x40b133
  40b199:	push   0x6d
  40b19b:	ret    
  40b19c:	aas    
  40b19d:	ror    DWORD PTR [eax+ebx*8-0x69cb946b],1
  40b1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a5:	or     BYTE PTR [ebx-0x32d44e8],ch
  40b1ab:	(bad)  
  40b1ad:	rcl    ch,1
  40b1af:	adc    dl,ah
  40b1b1:	sub    ecx,0x121cfe4a
  40b1b7:	mov    eax,ds:0xf470d8b9
  40b1bc:	retf   0xe1ba
  40b1bf:	mov    ebx,ebx
  40b1c1:	push   ecx
  40b1c2:	adc    bl,BYTE PTR [esi+0x2b]
  40b1c5:	enter  0x661f,0xa7
  40b1c9:	mov    edi,0x76ecdabd
  40b1ce:	ins    DWORD PTR es:[edi],dx
  40b1cf:	idiv   DWORD PTR [edi]
  40b1d1:	dec    DWORD PTR [ecx+0x1b44a35c]
  40b1d7:	push   0xffffffb5
  40b1d9:	mov    eax,ds:0xfb3e97bb
  40b1de:	and    BYTE PTR [esi+0xe],0xd8
  40b1e2:	or     al,BYTE PTR [eax-0x6764a757]
  40b1e8:	push   ebp
  40b1e9:	cmp    ebp,edx
  40b1eb:	ss pop esp
  40b1ed:	(bad)  
  40b1ee:	mov    cl,0x5
  40b1f0:	add    al,0xa7
  40b1f2:	sbb    edi,esi
  40b1f4:	pop    esp
  40b1f5:	cmp    eax,0x846da966
  40b1fa:	cmp    BYTE PTR [eax+0x7237886a],cl
  40b200:	or     al,0xb1
  40b202:	cmp    BYTE PTR [eax],bh
  40b204:	pop    ss
  40b205:	jmp    0x40b24c
  40b207:	int3   
  40b208:	(bad)  
  40b209:	push   eax
  40b20a:	jbe    0x40b26f
  40b20c:	xchg   esp,eax
  40b20d:	outs   dx,DWORD PTR ds:[esi]
  40b20e:	or     esp,DWORD PTR [ebx-0x5b]
  40b211:	xor    al,0x20
  40b213:	pop    ecx
  40b214:	sbb    dh,dl
  40b216:	mov    edi,0xe1e6b5e
  40b21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b21c:	fcmovb st,st(0)
  40b21e:	inc    esp
  40b21f:	push   ebx
  40b220:	arpl   di,si
  40b222:	in     al,0x4e
  40b224:	mov    cl,0x80
  40b226:	ret    
  40b227:	pushw  0x8976
  40b22b:	call   DWORD PTR [ebp+0x57]
  40b22e:	pop    esi
  40b22f:	add    al,0x7f
  40b231:	mov    edx,0x1910afd1
  40b236:	mov    eax,ds:0xae93cba5
  40b23b:	ffree  st(3)
  40b23d:	int3   
  40b23e:	push   esp
  40b23f:	dec    BYTE PTR [ebx]
  40b241:	adc    bh,ch
  40b243:	sbb    eax,DWORD PTR [edx+0x62]
  40b246:	sub    eax,0x8f097520
  40b24b:	sahf   
  40b24c:	in     eax,dx
  40b24d:	and    eax,0x6e79190e
  40b252:	popa   
  40b253:	cmc    
  40b254:	xchg   ebx,eax
  40b255:	mov    ds:0xa1f56dd,eax
  40b25a:	or     DWORD PTR [edi+0x1302e834],0xffffff88
  40b261:	mov    eax,0x1544da7e
  40b266:	cmp    al,0xf3
  40b268:	jo     0x40b1ee
  40b26a:	xchg   DWORD PTR [ebx+0x7709361f],eax
  40b270:	mov    eax,0x5d8482d1
  40b275:	jge    0x40b215
  40b277:	sbb    cl,bh
  40b279:	sahf   
  40b27a:	ret    
  40b27b:	(bad)  
  40b27c:	cmp    al,0x53
  40b27e:	jp     0x40b2a3
  40b280:	popf   
  40b281:	repz add DWORD PTR [ebx+0x23777460],ecx
  40b288:	jecxz  0x40b2c7
  40b28a:	mov    esp,esi
  40b28c:	push   0x56
  40b28e:	mov    DWORD PTR [ecx],ebp
  40b290:	pop    edi
  40b291:	or     DWORD PTR [edi],0x8
  40b294:	mov    edx,0xd58ac3c5
  40b299:	push   ds
  40b29a:	push   esi
  40b29b:	lahf   
  40b29c:	sahf   
  40b29d:	fwait
  40b29e:	sar    edx,0xed
  40b2a1:	xor    ebp,DWORD PTR [edx]
  40b2a3:	sub    ah,BYTE PTR [edi+0x4514772]
  40b2a9:	scas   al,BYTE PTR es:[edi]
  40b2aa:	sar    DWORD PTR [edx-0x2cceaedd],1
  40b2b0:	aam    0x7b
  40b2b2:	push   edi
  40b2b3:	xor    eax,0xf635c810
  40b2b8:	mov    ss,WORD PTR [bx-0x3b]
  40b2bc:	or     al,0xac
  40b2be:	xchg   ebp,eax
  40b2bf:	mov    eax,ds:0x8508ab8f
  40b2c4:	data16 aad 0x6d
  40b2c7:	fcmovnb st,st(7)
  40b2c9:	fmul   st(0),st
  40b2cb:	inc    ecx
  40b2cc:	outs   dx,DWORD PTR ds:[esi]
  40b2cd:	clc    
  40b2ce:	in     al,dx
  40b2cf:	jp     0x34be72b5
  40b2d5:	xor    BYTE PTR [edi],0x65
  40b2d8:	or     esp,DWORD PTR [edx]
  40b2da:	scas   eax,DWORD PTR es:[edi]
  40b2db:	into   
  40b2dc:	ja     0x40b34f
  40b2de:	ins    DWORD PTR es:[edi],dx
  40b2df:	mov    dl,BYTE PTR [edx]
  40b2e1:	pusha  
  40b2e2:	sbb    al,0xc8
  40b2e4:	and    DWORD PTR [ecx+0x3c],ebp
  40b2e7:	sahf   
  40b2e8:	sub    DWORD PTR [ebx],ebp
  40b2ea:	in     eax,0x2d
  40b2ec:	mov    ebx,0x1ca35dfa
  40b2f1:	fsubr  QWORD PTR [edx]
  40b2f3:	fldcw  WORD PTR [edx+0x4a61ac8]
  40b2f9:	test   DWORD PTR [edx+0x5a867f13],edx
  40b2ff:	add    bh,BYTE PTR [ecx+0x22025be6]
  40b305:	test   eax,0x2e0b3c5c
  40b30a:	ficom  DWORD PTR [edx-0x31]
  40b30d:	mov    WORD PTR [edi-0x59],?
  40b310:	(bad)  
  40b311:	js     0x40b2d8
  40b313:	popf   
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x4282eb,0x4282a3
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x428297
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42822b,0x4282eb
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428383,0x4282eb
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42836b,0x42825f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x42839f,0x42823f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x42829f
  40b386:	adc    DWORD PTR ds:0x428193,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428307,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428273,0x42825f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42816b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428387,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428167,0x42839b
  40b3c4:	call   0x42206c
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42826b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x42829b,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428283,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42831b
  40b3f3:	mov    eax,ds:0x428293
  40b3f8:	cmp    DWORD PTR ds:0x42829b,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428edc
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42818b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42827b
  40b422:	or     DWORD PTR ds:0x42830b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428167,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x428393,0x0
  40b441:	mov    DWORD PTR ds:0x42830b,ecx
  40b447:	mov    DWORD PTR ds:0x42838b,0x318c
  40b451:	mov    DWORD PTR ds:0x42839b,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428263,0x461b
  40b46a:	mov    DWORD PTR ds:0x42829f,0x63d9
  40b474:	cmp    DWORD PTR ds:0x428393,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ee0
  40b48f:	xor    edx,DWORD PTR ds:0x428273
  40b495:	adc    ecx,DWORD PTR ds:0x42837b
  40b49b:	and    DWORD PTR ds:0x42816b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42827f
  40b4b7:	xor    DWORD PTR ds:0x428393,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428263
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42817f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42815b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42822b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282a7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42817f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fd3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428dc8
  40b528:	sbb    DWORD PTR ds:0x428297,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281cf
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283bb
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x42819b
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428243
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428273
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282a3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42837b,0x428243
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0x3d
  40b596:	out    0x5b,eax
  40b598:	jo     0x40b5a4
  40b59a:	adc    ebx,DWORD PTR [eax]
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	out    dx,al
  40b5a2:	and    ah,BYTE PTR ds:0xcb79582e
  40b5a8:	jle    0x40b57d
  40b5aa:	xor    al,0x9b
  40b5ac:	inc    esi
  40b5ad:	int3   
  40b5ae:	pop    edx
  40b5af:	out    0x9d,eax
  40b5b1:	adc    eax,0x2ebacad8
  40b5b6:	mov    ds:0xfe295720,eax
  40b5bb:	cmp    DWORD PTR [eax],0x550d80c3
  40b5c1:	mov    ah,0x48
  40b5c3:	xchg   esi,eax
  40b5c4:	mov    bh,0x86
  40b5c6:	lods   eax,DWORD PTR ds:[esi]
  40b5c7:	enter  0x62be,0x9e
  40b5cb:	sbb    al,0x11
  40b5cd:	pop    ecx
  40b5ce:	dec    edx
  40b5cf:	test   DWORD PTR ds:0xf5060501,edi
  40b5d5:	lahf   
  40b5d6:	dec    ebp
  40b5d7:	std    
  40b5d8:	pop    esi
  40b5d9:	cwde   
  40b5da:	xor    al,0x82
  40b5dc:	sbb    al,0xdf
  40b5de:	lods   al,BYTE PTR ds:[esi]
  40b5df:	sbb    DWORD PTR [eax+0x6e],ecx
  40b5e2:	pop    ecx
  40b5e3:	sbb    al,BYTE PTR [ebx+0x5c3d631c]
  40b5e9:	repz rol BYTE PTR [edx],0x42
  40b5ed:	sbb    al,0xa
  40b5ef:	lock leave 
  40b5f1:	icebp  
  40b5f2:	das    
  40b5f3:	stos   DWORD PTR es:[edi],eax
  40b5f4:	dec    esi
  40b5f5:	fadd   st,st(6)
  40b5f7:	push   esp
  40b5f8:	push   ecx
  40b5f9:	(bad)  
  40b5fa:	cmc    
  40b5fb:	jae    0x40b59e
  40b5fd:	sub    esp,DWORD PTR [edi+0x5d89e0ae]
  40b603:	and    edx,DWORD PTR [ebx]
  40b605:	jns    0x40b588
  40b607:	mov    edx,0x55b1a1a4
  40b60c:	cmp    DWORD PTR [ebp+0x54],ebp
  40b60f:	shr    BYTE PTR [ebx-0x11],cl
  40b612:	nop
  40b613:	and    ebp,DWORD PTR [esi+0x45a673ca]
  40b619:	xor    eax,DWORD PTR [ebp+edx*8-0x70]
  40b61d:	sti    
  40b61e:	xor    DWORD PTR [ebx],0xffffffe8
  40b621:	arpl   WORD PTR [eax+edi*2],ax
  40b624:	xchg   edi,eax
  40b625:	inc    ebx
  40b626:	fs pop edi
  40b628:	scas   al,BYTE PTR es:[edi]
  40b629:	sub    dl,BYTE PTR [ebx+0x5adfbfc]
  40b62f:	jb     0x40b683
  40b631:	add    DWORD PTR [edi],edx
  40b633:	cmp    al,0xf4
  40b635:	sub    ebp,DWORD PTR [ecx-0x388c5cc8]
  40b63b:	xchg   ebx,eax
  40b63c:	mov    ah,BYTE PTR [ebx-0x4c]
  40b63f:	pop    ss
  40b640:	push   edi
  40b641:	div    DWORD PTR [edx+0x306df3e2]
  40b647:	pop    ss
  40b648:	fdivrp st(3),st
  40b64a:	add    eax,0x30ea3c9b
  40b64f:	cld    
  40b650:	jle    0x40b642
  40b652:	sti    
  40b653:	test   eax,0x8e76f2cf
  40b658:	repz rol DWORD PTR ds:0xaeaf0706,cl
  40b65f:	mov    es,ebp
  40b661:	int3   
  40b662:	push   esp
  40b663:	aas    
  40b664:	adc    al,BYTE PTR [edi-0x5244dd64]
  40b66a:	cmc    
  40b66b:	mov    cl,0x1c
  40b66d:	mov    gs,ecx
  40b66f:	xchg   edi,ebp
  40b671:	and    eax,0x3a458c78
  40b676:	adc    BYTE PTR [edi+0x78aefe65],cl
  40b67c:	les    edi,FWORD PTR [edi+0x280ed534]
  40b682:	pop    es
  40b683:	pop    ebx
  40b684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b685:	cli    
  40b686:	mov    DWORD PTR [edx-0x5d],ecx
  40b689:	mov    al,0x54
  40b68b:	(bad)  
  40b68c:	and    esp,esi
  40b68e:	push   edi
  40b68f:	test   eax,0x3f16a3b
  40b694:	mov    dl,0x4
  40b696:	popa   
  40b697:	jecxz  0x40b715
  40b699:	scas   al,BYTE PTR es:[edi]
  40b69a:	repz sub ebp,esp
  40b69d:	mov    edi,0xd9a3cf3e
  40b6a2:	cdq    
  40b6a3:	sub    cl,al
  40b6a5:	and    al,0xb5
  40b6a7:	cmp    al,0xb5
  40b6a9:	mov    eax,0x465eb49f
  40b6ae:	dec    edi
  40b6af:	test   eax,0xd846a21d
  40b6b4:	out    dx,al
  40b6b5:	les    ecx,FWORD PTR [ecx-0x19c6ca2a]
  40b6bb:	mov    ds:0xc240f9b3,eax
  40b6c0:	test   BYTE PTR [edi+0x60],cl
  40b6c3:	sahf   
  40b6c4:	xchg   esi,eax
  40b6c5:	sub    al,dh
  40b6c7:	adc    ebx,DWORD PTR [edi-0x58]
  40b6ca:	retf   0x4cdd
  40b6cd:	test   eax,0x79d695c2
  40b6d2:	pushf  
  40b6d3:	out    dx,al
  40b6d4:	arpl   di,ax
  40b6d6:	cli    
  40b6d7:	push   0x5b9d339a
  40b6dc:	add    edx,esi
  40b6de:	jmp    0x40b6b4
  40b6e0:	loopne 0x40b6e3
  40b6e2:	adc    eax,0x8f9ae23b
  40b6e7:	scas   al,BYTE PTR es:[edi]
  40b6e8:	jnp    0x40b68e
  40b6ea:	shr    BYTE PTR [edx],cl
  40b6ec:	(bad)
  40b6f1:	test   eax,0x3da03dc0
  40b6f6:	lds    ecx,FWORD PTR [ebp+0x4bb5c73a]
  40b6fc:	or     DWORD PTR [eax+esi*8-0x3a],esp
  40b700:	in     eax,0xec
  40b702:	dec    ebp
  40b703:	sbb    eax,0xa06fb528
  40b708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b709:	iret   
  40b70a:	popa   
  40b70b:	shr    BYTE PTR [edi],cl
  40b70d:	lahf   
  40b70e:	and    al,0xaa
  40b710:	ja     0x40b6ec
  40b712:	push   esp
  40b713:	pop    esi
  40b714:	mov    dh,0xe0
  40b716:	add    DWORD PTR [ebx-0x32f9cb95],edi
  40b71c:	addr16 es popf 
  40b71f:	jbe    0x40b733
  40b721:	and    al,0xc6
  40b723:	sbb    al,0xe0
  40b725:	xchg   edx,eax
  40b726:	ins    DWORD PTR es:[edi],dx
  40b727:	les    eax,FWORD PTR [edx-0x2c]
  40b72a:	xlat   BYTE PTR ds:[ebx]
  40b72b:	into   
  40b72c:	ja     0x40b721
  40b72e:	loop   0x40b6fa
  40b730:	in     eax,0x3
  40b732:	mov    bl,0x14
  40b734:	hlt    
  40b735:	or     dl,BYTE PTR [edi]
  40b737:	(bad)  
  40b739:	test   eax,0xab9f6e69
  40b73e:	or     BYTE PTR [ebp-0x24],bh
  40b741:	mov    edx,0x28a0b24f
  40b746:	js     0x40b73d
  40b748:	pop    eax
  40b749:	popw   ss
  40b74b:	scas   eax,DWORD PTR es:[edi]
  40b74c:	jmp    0x8420:0xe3009ba9
  40b753:	push   ecx
  40b754:	or     ch,BYTE PTR [ebx]
  40b756:	paddsb mm4,QWORD PTR [eax]
  40b759:	add    DWORD PTR [ebp+0x56337e69],0xffffffe6
  40b760:	daa    
  40b761:	(bad)  
  40b762:	popf   
  40b763:	pushf  
  40b764:	xor    eax,0x5463463f
  40b769:	inc    cx
  40b76b:	sub    BYTE PTR ds:0x949ca781,al
  40b771:	jo     0x40b753
  40b773:	pop    ss
  40b774:	adc    edi,ecx
  40b776:	add    al,BYTE PTR [edi-0x466820eb]
  40b77c:	shl    BYTE PTR [edx],0x1a
  40b77f:	inc    esp
  40b780:	rol    BYTE PTR [esi],cl
  40b782:	cmp    ch,BYTE PTR [esi+edi*8+0x4]
  40b786:	add    eax,0x1f9ca712
  40b78b:	cmp    al,0xe
  40b78d:	ins    DWORD PTR es:[edi],dx
  40b78e:	push   ss
  40b78f:	pop    eax
  40b790:	add    BYTE PTR [ecx+0x3b],al
  40b793:	test   BYTE PTR [ebx+esi*2],0xe3
  40b797:	pop    es
  40b798:	not    BYTE PTR [edi+ebp*2-0x7314f386]
  40b79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7a0:	repz call 0xadeb18c6
  40b7a6:	(bad)  
  40b7a7:	jne    0x40b80a
  40b7a9:	pop    edi
  40b7aa:	push   edi
  40b7ab:	and    al,0xbf
  40b7ad:	sbb    bl,BYTE PTR [eax]
  40b7af:	push   edi
  40b7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7b1:	jb     0x40b77b
  40b7b3:	ficom  WORD PTR [eax+0x6f]
  40b7b6:	daa    
  40b7b7:	(bad)  
  40b7b8:	and    ecx,DWORD PTR [edi]
  40b7ba:	sti    
  40b7bb:	ins    DWORD PTR es:[edi],dx
  40b7bc:	mov    ?,WORD PTR [eax-0x6a]
  40b7bf:	rcl    bl,0x75
  40b7c2:	mov    al,0x67
  40b7c4:	jmp    0x7e381d7b
  40b7c9:	scas   al,BYTE PTR es:[edi]
  40b7ca:	aas    
  40b7cb:	sar    BYTE PTR [ebp+eiz*1+0x64],1
  40b7cf:	xchg   ebx,eax
  40b7d0:	shl    BYTE PTR [eax-0x56],cl
  40b7d3:	jne    0x40b771
  40b7d5:	pop    edi
  40b7d6:	add    al,0x96
  40b7d8:	cli    
  40b7d9:	mov    WORD PTR [edx+ecx*4+0x1fb89eac],?
  40b7e0:	push   0xffffffbd
  40b7e2:	xor    eax,0x175322b6
  40b7e7:	ja     0x40b80d
  40b7e9:	nop
  40b7ea:	jmp    0xebf:0xdea0d187
  40b7f1:	cdq    
  40b7f2:	jb     0x40b82d
  40b7f4:	lahf   
  40b7f5:	push   0x4d2e77d7
  40b7fa:	into   
  40b7fb:	cdq    
  40b7fc:	mov    ebp,0x5d183a63
  40b801:	fidivr DWORD PTR [eax+ecx*8]
  40b804:	fdiv   st,st(6)
  40b806:	push   eax
  40b807:	mov    dl,0x46
  40b809:	aaa    
  40b80a:	iret   
  40b80b:	sbb    DWORD PTR [esi-0x2],esp
  40b80e:	cmp    ah,BYTE PTR [esp+esi*8]
  40b811:	das    
  40b812:	jl     0x40b7a9
  40b814:	mov    eax,0xb2616bf6
  40b819:	mov    gs,WORD PTR [edx+0x66]
  40b81c:	test   BYTE PTR ds:0xf4f4441d,ch
  40b822:	jns    0x40b7be
  40b824:	jge    0x40b86e
  40b826:	sub    BYTE PTR [eax],0x43
  40b829:	sbb    ebp,esi
  40b82b:	mov    ch,0x43
  40b82d:	imul   ebp,esi,0x9f1cd5b6
  40b833:	push   0xca95be19
  40b838:	jne    0x40b82a
  40b83a:	(bad)  
  40b83b:	call   0x843fe0f7
  40b840:	add    BYTE PTR [edi-0x1579e9c3],cl
  40b846:	xchg   esp,eax
  40b847:	mov    bl,0x56
  40b849:	stos   BYTE PTR es:[edi],al
  40b84a:	rol    BYTE PTR [ecx-0x79],cl
  40b84d:	sub    DWORD PTR [bx-0x31],ebp
  40b851:	mov    ds:0x523a350b,eax
  40b856:	(bad)  
  40b857:	(bad)  
  40b859:	mov    ds:0x81a54c67,al
  40b85e:	dec    esi
  40b85f:	sub    BYTE PTR [ebp-0x16],0x14
  40b863:	(bad)  
  40b864:	sbb    DWORD PTR ds:0x15ed8956,0xb848d475
  40b86e:	push   esi
  40b86f:	(bad)  
  40b871:	sub    dl,BYTE PTR [eax-0x30]
  40b874:	dec    ecx
  40b875:	lock inc ecx
  40b877:	jo     0x40b81e
  40b879:	and    eax,0x94051011
  40b87e:	cmp    DWORD PTR [edi+ebp*4-0x77a1e6f9],ecx
  40b885:	jne    0x40b8b1
  40b887:	mov    bh,0xac
  40b889:	inc    ecx
  40b88a:	outs   dx,DWORD PTR ds:[esi]
  40b88b:	mov    edx,0xaf76ad3a
  40b890:	cld    
  40b891:	sub    eax,0xd6169bc3
  40b896:	xor    al,BYTE PTR [ebx]
  40b898:	fsubr  st(5),st
  40b89a:	repnz add ah,al
  40b89d:	jne    0x40b846
  40b89f:	push   ss
  40b8a0:	and    BYTE PTR [edx+0x688ef8e1],bl
  40b8a6:	test   DWORD PTR [edx],ecx
  40b8a8:	cmp    ebx,ebp
  40b8aa:	sbb    BYTE PTR [edi+0x75],cl
  40b8ad:	lds    edi,FWORD PTR [edx-0xe2be8fb]
  40b8b3:	les    esp,FWORD PTR [esp+eax*4+0x7a50f425]
  40b8ba:	pushf  
  40b8bb:	sub    ah,dl
  40b8bd:	cmp    al,0x8a
  40b8bf:	(bad)
  40b8c2:	push   ds
  40b8c3:	dec    ecx
  40b8c4:	mov    esi,0xbce49d43
  40b8c9:	pop    eax
  40b8ca:	jle    0x40b8ba
  40b8cc:	cld    
  40b8cd:	cmp    eax,0x6a75390f
  40b8d2:	(bad)  
  40b8d3:	pop    edx
  40b8d4:	js     0x40b881
  40b8d6:	mov    ecx,0x2ccf6987
  40b8db:	repnz mov gs,ecx
  40b8de:	(bad)  
  40b8df:	pop    eax
  40b8e0:	retf   
  40b8e1:	icebp  
  40b8e2:	call   0x566e:0xd0ccfab8
  40b8e9:	mov    eax,ds:0x66329219
  40b8ee:	mov    DWORD PTR [esi],esp
  40b8f0:	call   0xcb53:0x73142710
  40b8f7:	cmp    eax,DWORD PTR [ebp+edx*4+0x48]
  40b8fb:	ss and cl,cl
  40b8fe:	mov    esp,0x1ffea9b4
  40b903:	xchg   ebp,eax
  40b904:	inc    esi
  40b905:	adc    dl,BYTE PTR [ebp-0x46423913]
  40b90b:	inc    esi
  40b90c:	dec    ebx
  40b90d:	and    DWORD PTR [ecx+eax*8-0x31335b03],ebx
  40b914:	hlt    
  40b915:	test   eax,0x9156d30
  40b91a:	push   esp
  40b91b:	jo     0x40b8bb
  40b91d:	cdq    
  40b91e:	imul   edx,DWORD PTR [ecx+0x2],0xffffff99
  40b922:	lods   al,BYTE PTR ds:[esi]
  40b923:	shr    ebx,0x6b
  40b926:	and    ebx,DWORD PTR [edx+edx*4+0x57]
  40b92a:	lock test DWORD PTR [esi+0x7b],ebp
  40b92e:	mov    bh,0xc3
  40b930:	into   
  40b931:	ja     0x40b945
  40b933:	mov    al,ds:0x53544783
  40b938:	sub    BYTE PTR [ebx+0x20],0x13
  40b93c:	cmp    edi,DWORD PTR [ecx]
  40b93e:	push   esi
  40b93f:	or     esi,ebp
  40b941:	jno    0x40b900
  40b943:	loop   0x40b970
  40b945:	pop    esi
  40b946:	jmp    0x9f2e:0x8efd28c9
  40b94d:	add    ch,BYTE PTR [ecx-0x7b065678]
  40b953:	jecxz  0x40b8f3
  40b955:	inc    eax
  40b956:	jo     0x40b978
  40b958:	mov    cl,0x1a
  40b95a:	mov    ds:0x5a9f4ded,eax
  40b95f:	idiv   al
  40b961:	loop   0x40b934
  40b963:	fadd   DWORD PTR [esi+0x8c866e3]
  40b969:	fiadd  DWORD PTR [ebx]
  40b96b:	adc    al,0x1d
  40b96d:	xchg   esp,eax
  40b96e:	xchg   edi,eax
  40b96f:	mov    ch,0x55
  40b971:	mov    ch,0x63
  40b973:	sub    BYTE PTR [ebx-0x73],al
  40b976:	jo     0x40b939
  40b978:	sub    DWORD PTR [edx+0x5],esp
  40b97b:	pop    esp
  40b97c:	xor    eax,0xd1810000
  40b981:	sbb    DWORD PTR [eax],ecx
  40b983:	add    BYTE PTR [eax],al
  40b985:	adc    DWORD PTR ds:0x4282f3,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428277
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428307,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42830f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428277,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42830f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x42839f,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42830f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428dcc
  40b9f7:	adc    DWORD PTR ds:0x42839b,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x4282f7
  40ba0a:	sub    edx,DWORD PTR ds:0x42830b
  40ba10:	mov    DWORD PTR ds:0x4282f7,edx
  40ba16:	adc    DWORD PTR ds:0x4282f3,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428167
  40ba26:	xor    DWORD PTR ds:0x428393,edx
  40ba2c:	or     DWORD PTR ds:0x42823f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428277
  40ba3c:	or     DWORD PTR ds:0x428313,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	xchg   edi,eax
  40baa4:	push   esi
  40baa5:	imul   edi,DWORD PTR [eax+eiz*2+0x6e18180d],0xc8181812
  40bab0:	jecxz  0x40bb01
  40bab2:	fild   QWORD PTR [ebp-0x49]
  40bab5:	dec    esp
  40bab6:	loope  0x40ba4f
  40bab8:	cli    
  40bab9:	pusha  
  40baba:	out    dx,al
  40babb:	aam    0x55
  40babd:	ss fs cs push esp
  40bac1:	xchg   esi,eax
  40bac2:	and    eax,0x610a3d02
  40bac7:	jp     0x40bb0a
  40bac9:	pop    eax
  40baca:	or     esp,DWORD PTR [eax+eiz*1+0x55]
  40bace:	pop    ss
  40bacf:	mov    bl,0x9f
  40bad1:	rcl    BYTE PTR [ecx],0xfd
  40bad4:	repnz and edi,DWORD PTR [ebp+0xd]
  40bad8:	push   edx
  40bad9:	jl     0x40bac3
  40badb:	dec    ebp
  40badc:	lods   eax,DWORD PTR ss:[esi]
  40bade:	fs jno 0x40bad7
  40bae1:	pushf  
  40bae2:	pop    ebx
  40bae3:	and    ebp,edi
  40bae5:	dec    esi
  40bae6:	mov    al,fs:0x79d7376b
  40baec:	ins    DWORD PTR es:[edi],dx
  40baed:	xchg   esi,eax
  40baee:	mov    ebp,0x68b728e7
  40baf3:	xchg   edx,eax
  40baf4:	adc    al,bh
  40baf6:	add    eax,DWORD PTR [ebp+0x1f]
  40baf9:	and    eax,0x7a171813
  40bafe:	or     DWORD PTR [bx],edx
  40bb01:	and    eax,0x92862ddb
  40bb06:	push   0xd6720207
  40bb0b:	push   0x2d
  40bb0d:	stc    
  40bb0e:	iret   
  40bb0f:	nop
  40bb10:	in     eax,dx
  40bb11:	out    dx,al
  40bb12:	push   ecx
  40bb13:	cmp    al,0x3e
  40bb15:	retf   
  40bb16:	js     0x40bb79
  40bb18:	pop    ecx
  40bb19:	pop    eax
  40bb1a:	pusha  
  40bb1b:	in     al,0x1f
  40bb1d:	inc    ebp
  40bb1e:	adc    dh,BYTE PTR [ebp+esi*2+0xa]
  40bb22:	(bad)  
  40bb23:	retf   0x1422
  40bb26:	(bad)  
  40bb27:	ss (bad) 
  40bb29:	lock xchg ecx,eax
  40bb2b:	bnd jle 0x40bb51
  40bb2e:	addr16 mov eax,0x7bd7fe46
  40bb34:	mov    edi,DWORD PTR [eax-0x12]
  40bb37:	sbb    al,0xa4
  40bb39:	imul   edx,DWORD PTR ds:0x8bff8068,0xffffffc2
  40bb40:	mov    dl,0xe7
  40bb42:	lahf   
  40bb43:	dec    edi
  40bb44:	inc    ebx
  40bb45:	xlat   BYTE PTR ds:[ebx]
  40bb46:	inc    esi
  40bb47:	mov    cl,0x9e
  40bb49:	adc    DWORD PTR [eax],esp
  40bb4b:	xor    dl,BYTE PTR [eax-0x3ce446d3]
  40bb51:	sti    
  40bb52:	mov    ds:0x574cd195,al
  40bb57:	into   
  40bb58:	sub    eax,0xf945ed99
  40bb5d:	xchg   ebp,eax
  40bb5e:	js     0x40bb44
  40bb60:	je     0x40bb18
  40bb62:	xor    ch,bh
  40bb64:	push   ds
  40bb65:	loopne 0x40bb29
  40bb67:	jp     0x40bb45
  40bb69:	je     0x40bb54
  40bb6b:	pop    edx
  40bb6c:	sbb    eax,DWORD PTR [esi]
  40bb6e:	xchg   esi,eax
  40bb6f:	lock outs dx,DWORD PTR ds:[esi]
  40bb71:	lock push 0xff9d85f1
  40bb77:	xor    eax,0x2ab5368c
  40bb7c:	rcl    BYTE PTR ds:0x99eb22ba,1
  40bb82:	fadd   DWORD PTR [ebx]
  40bb84:	out    dx,al
  40bb85:	in     eax,0x5e
  40bb87:	sub    ebp,DWORD PTR [esi]
  40bb89:	mov    esp,0xf9fa203b
  40bb8e:	mov    edx,0xfa5a78d1
  40bb93:	aas    
  40bb94:	fst    DWORD PTR [ebx-0x69b76431]
  40bb9a:	and    edx,DWORD PTR [esi+0x357397d4]
  40bba0:	in     al,0x4f
  40bba2:	and    edi,esp
  40bba4:	jmp    0x9ebf:0x129a2658
  40bbab:	repnz pop ss
  40bbad:	dec    esp
  40bbae:	out    0x7a,eax
  40bbb0:	rol    DWORD PTR [edx-0x18],1
  40bbb3:	in     al,dx
  40bbb4:	sub    eax,DWORD PTR [eax]
  40bbb6:	(bad)  
  40bbb7:	out    0x87,eax
  40bbb9:	ret    0xe492
  40bbbc:	scas   al,BYTE PTR es:[edi]
  40bbbd:	mov    cs,WORD PTR [esi]
  40bbbf:	inc    ebx
  40bbc0:	fsubr  QWORD PTR [ebp+0x6]
  40bbc3:	es xchg ecx,eax
  40bbc5:	out    dx,eax
  40bbc6:	(bad)  
  40bbc7:	mov    edi,DWORD PTR [edi+0xaef23f3]
  40bbcd:	cmp    bl,bl
  40bbcf:	or     DWORD PTR [edx-0x3d55f189],edx
  40bbd5:	inc    edx
  40bbd6:	inc    edi
  40bbd7:	cmp    BYTE PTR [edi+0x109201e8],ah
  40bbdd:	sub    al,cl
  40bbdf:	mov    eax,0x5db529a6
  40bbe4:	push   edi
  40bbe5:	in     al,0x23
  40bbe7:	in     al,0x8a
  40bbe9:	mov    ebp,0x71e880ea
  40bbee:	mov    bl,0x44
  40bbf0:	imul   ebp,DWORD PTR [eax+ebp*8],0xe4743d9a
  40bbf7:	in     al,dx
  40bbf8:	mov    ds:0x30b82122,eax
  40bbfd:	ret    0x5dd9
  40bc00:	aaa    
  40bc01:	jge    0x40bc3b
  40bc03:	or     eax,0xbe816dc9
  40bc08:	lahf   
  40bc09:	inc    ebp
  40bc0a:	pop    ebx
  40bc0b:	and    bh,BYTE PTR [eax]
  40bc0d:	sub    eax,0x43e3877c
  40bc12:	jle    0x40bbae
  40bc14:	xor    al,0xa5
  40bc16:	(bad)  
  40bc17:	jb     0x40bbad
  40bc19:	fwait
  40bc1a:	jb     0x40bc27
  40bc1c:	outs   dx,BYTE PTR ds:[esi]
  40bc1d:	xor    DWORD PTR [ecx+0x73811e5c],0x3c
  40bc24:	pushw  ss
  40bc26:	fst    QWORD PTR [edi+0x64]
  40bc29:	or     BYTE PTR [ebp-0x31],bh
  40bc2c:	dec    esp
  40bc2d:	sbb    BYTE PTR [esp+esi*2-0x221cdf71],cl
  40bc34:	retf   0xc4f4
  40bc37:	fwait
  40bc38:	push   esp
  40bc39:	cmc    
  40bc3a:	sub    BYTE PTR [edx],dl
  40bc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc3d:	pop    ds
  40bc3e:	stc    
  40bc3f:	(bad)  
  40bc41:	sbb    al,0xbe
  40bc43:	sub    dl,dh
  40bc45:	inc    ecx
  40bc46:	add    bh,bh
  40bc48:	hlt    
  40bc49:	push   esp
  40bc4a:	adc    al,0x49
  40bc4c:	dec    ecx
  40bc4d:	push   0xffffffdb
  40bc4f:	pop    ebp
  40bc50:	or     eax,0xd3d9bb82
  40bc55:	lds    ebx,FWORD PTR [ecx+0xc]
  40bc58:	loop   0x40bc78
  40bc5a:	pop    esp
  40bc5b:	xor    bl,bh
  40bc5d:	xchg   ebp,eax
  40bc5e:	sub    BYTE PTR [ebx-0x62],dl
  40bc61:	xchg   ebp,eax
  40bc62:	mov    dl,0xc0
  40bc64:	arpl   bp,cx
  40bc66:	(bad)  
  40bc67:	mov    esp,0x3e58314e
  40bc6c:	mov    DWORD PTR ds:0x5bb79765,edx
  40bc72:	and    al,0x14
  40bc74:	mov    bh,0xfe
  40bc76:	push   es
  40bc77:	aad    0x8d
  40bc79:	pop    esi
  40bc7a:	jecxz  0x40bc60
  40bc7c:	and    bh,ah
  40bc7e:	lods   al,BYTE PTR ds:[esi]
  40bc7f:	sub    BYTE PTR [ecx-0x6ec1b0fb],0x68
  40bc86:	xchg   DWORD PTR [edi+ecx*1+0x7f668f9b],esi
  40bc8d:	mov    bl,0xcb
  40bc8f:	loope  0x40bcd7
  40bc91:	shl    BYTE PTR [edx],cl
  40bc93:	gs js  0x40bc94
  40bc96:	ror    BYTE PTR [eax-0x5c],cl
  40bc99:	int    0x1
  40bc9b:	inc    edi
  40bc9c:	or     DWORD PTR [ebx],eax
  40bc9e:	jg     0x40bc70
  40bca0:	sub    edi,DWORD PTR [edx+0x6e665c40]
  40bca6:	mov    eax,ds:0x59920e68
  40bcab:	push   ss
  40bcac:	ficom  DWORD PTR [esi+0x761b19d4]
  40bcb2:	xchg   BYTE PTR [edi+edi*8+0x21],cl
  40bcb6:	and    BYTE PTR ss:[eax-0x52],0x7b
  40bcbb:	(bad)  
  40bcbc:	mov    ebp,DWORD PTR [esi-0x10]
  40bcbf:	je     0x40bd04
  40bcc1:	mov    al,ds:0x73418616
  40bcc6:	ret    
  40bcc7:	pop    es
  40bcc8:	mov    esi,DWORD PTR [ecx+0x2c]
  40bccb:	or     al,0x42
  40bccd:	dec    eax
  40bcce:	sti    
  40bccf:	inc    eax
  40bcd0:	xchg   BYTE PTR [eax],cl
  40bcd2:	or     eax,0xb81cf6a9
  40bcd7:	je     0x40bc95
  40bcd9:	sbb    ch,ch
  40bcdb:	shl    BYTE PTR [edi+0x70609d3e],cl
  40bce1:	iret   
  40bce2:	sti    
  40bce3:	jl     0x40bc68
  40bce5:	adc    cl,0xc
  40bce8:	xor    edx,edx
  40bcea:	or     al,0xf1
  40bcec:	pop    ss
  40bced:	pushf  
  40bcee:	fs mov al,0x59
  40bcf1:	shl    BYTE PTR [bp+si-0x221d],cl
  40bcf6:	jle    0x40bd0d
  40bcf8:	or     eax,0x5b8a054b
  40bcfd:	fsubr  DWORD PTR cs:[ebp-0x243dcc87]
  40bd04:	sbb    BYTE PTR [esi+0x37],dh
  40bd07:	ret    0xfea2
  40bd0a:	pop    edx
  40bd0b:	push   es
  40bd0c:	mov    edi,0x694f8751
  40bd11:	push   edi
  40bd12:	stos   DWORD PTR es:[edi],eax
  40bd13:	xchg   ecx,eax
  40bd14:	mov    al,0x15
  40bd16:	arpl   WORD PTR [ebx+ebp*4-0x3e839687],cx
  40bd1d:	pop    edi
  40bd1e:	in     al,dx
  40bd1f:	mov    bl,0x88
  40bd21:	mov    edx,0xe88014b7
  40bd26:	(bad)  
  40bd27:	adc    al,0x73
  40bd29:	inc    esp
  40bd2a:	test   BYTE PTR [eax],ch
  40bd2c:	lahf   
  40bd2d:	adc    DWORD PTR [eax-0x8],0xaff01ea
  40bd34:	rol    edx,cl
  40bd36:	mov    dl,0xca
  40bd38:	jle    0x40bdb8
  40bd3a:	sbb    cl,0x18
  40bd3d:	sahf   
  40bd3e:	ret    
  40bd3f:	les    edx,FWORD PTR [esi]
  40bd41:	sbb    edx,DWORD PTR ds:0xfd0448f2
  40bd47:	enter  0x690c,0x49
  40bd4b:	push   ecx
  40bd4c:	adc    DWORD PTR [ebx],eax
  40bd4e:	or     dh,ch
  40bd50:	mov    edx,edi
  40bd52:	test   DWORD PTR [edi+0x2abcd160],ebp
  40bd58:	push   ecx
  40bd59:	ret    
  40bd5a:	fld    st(6)
  40bd5c:	sub    bl,BYTE PTR [eax+0x58]
  40bd5f:	jmp    0x40bd75
  40bd61:	add    al,0xd2
  40bd63:	jmp    ecx
  40bd65:	shl    BYTE PTR [edx-0x2764d7d5],0xf2
  40bd6c:	sahf   
  40bd6d:	and    DWORD PTR [edi-0x2f],edi
  40bd70:	sub    BYTE PTR [edx],al
  40bd72:	repnz and BYTE PTR [ecx-0x62e3f0c6],cl
  40bd79:	jmp    DWORD PTR [esi]
  40bd7b:	adc    edi,edx
  40bd7d:	mov    bh,0x2c
  40bd7f:	sub    dl,0x74
  40bd82:	dec    ecx
  40bd83:	js     0x40bd0c
  40bd85:	jp     0x40bd9f
  40bd87:	cmp    BYTE PTR [ecx],dl
  40bd89:	(bad)  
  40bd8a:	nop
  40bd8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd8c:	adc    ah,BYTE PTR [edi-0x1d5b538b]
  40bd92:	inc    edx
  40bd93:	daa    
  40bd94:	and    eax,0xb119062c
  40bd99:	(bad)  
  40bd9a:	sbb    al,0x39
  40bd9c:	and    DWORD PTR [edx+0x9c4c14e],0xea64683e
  40bda6:	out    0x4f,eax
  40bda8:	(bad)  
  40bda9:	mov    ah,0xb
  40bdab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdac:	xor    eax,0x93ee77d8
  40bdb1:	add    BYTE PTR [esi-0x761ea172],ch
  40bdb7:	retf   
  40bdb8:	push   edi
  40bdb9:	fld    st(5)
  40bdbb:	daa    
  40bdbc:	mov    cl,0x29
  40bdbe:	ficomp WORD PTR [edi]
  40bdc0:	mov    edi,0xd6c63f28
  40bdc5:	push   0xffffffd6
  40bdc7:	test   al,0x1c
  40bdc9:	mov    ebx,DWORD PTR [edi+0x576d064c]
  40bdcf:	loop   0x40bd9c
  40bdd1:	jns    0x40bd77
  40bdd3:	int    0x8b
  40bdd5:	pop    esi
  40bdd6:	retf   0xe150
  40bdd9:	js     0x40bd8c
  40bddb:	bound  ebx,QWORD PTR [eax-0x62]
  40bdde:	jo     0x40be49
  40bde0:	shr    BYTE PTR [ecx+0x27392faf],cl
  40bde6:	out    dx,eax
  40bde7:	int3   
  40bde8:	inc    edi
  40bde9:	sub    eax,0x1ac87dc2
  40bdee:	scas   al,BYTE PTR es:[edi]
  40bdef:	jne    0x40be10
  40bdf1:	les    eax,FWORD PTR [ecx+0x64a74943]
  40bdf7:	push   ebp
  40bdf8:	js     0x40bda5
  40bdfa:	(bad)  
  40bdfb:	stc    
  40bdfc:	stos   DWORD PTR es:[edi],eax
  40bdfd:	repz jns 0x40be47
  40be00:	or     al,0xb2
  40be02:	rol    BYTE PTR [edi],0x48
  40be05:	xchg   BYTE PTR [eax+0x64],cl
  40be08:	xlat   BYTE PTR ds:[ebx]
  40be09:	jmp    0x40bdd9
  40be0b:	mov    dh,0xf9
  40be0d:	repnz inc esp
  40be0f:	scas   al,BYTE PTR es:[edi]
  40be10:	call   0x9a4e:0xd442aaac
  40be17:	in     eax,dx
  40be18:	jmp    0x89d0:0x58106993
  40be1f:	jno    0x40bdab
  40be21:	nop
  40be22:	stos   DWORD PTR es:[edi],eax
  40be23:	in     al,0x3f
  40be25:	add    ebx,DWORD PTR [ebp+ecx*2+0x13]
  40be29:	pusha  
  40be2a:	push   esp
  40be2b:	(bad)  
  40be2d:	int3   
  40be2e:	jmp    0x6990:0xbd2f1935
  40be35:	retf   0x6196
  40be38:	and    dl,BYTE PTR cs:[ecx+0x4fee80a]
  40be3f:	fwait
  40be40:	mov    ecx,0x761cc9e2
  40be45:	js     0x40be49
  40be47:	in     al,0xc8
  40be49:	jle    0x40be34
  40be4b:	xchg   edi,eax
  40be4c:	test   BYTE PTR [edx-0x45],dl
  40be4f:	push   es
  40be50:	and    DWORD PTR [ebx+0x3a20ed81],edi
  40be56:	dec    esp
  40be57:	int3   
  40be58:	push   0x7d332227
  40be5d:	stc    
  40be5e:	jp     0x40be81
  40be60:	cmp    DWORD PTR [ebp+0x71],eax
  40be63:	push   cs
  40be64:	xor    ebp,DWORD PTR [esi]
  40be66:	add    al,0x51
  40be68:	pop    ss
  40be69:	push   ebp
  40be6a:	repnz push esi
  40be6c:	fwait
  40be6d:	sbb    DWORD PTR [edi+ebp*1-0x2cf0aa39],ecx
  40be74:	outs   dx,DWORD PTR ds:[esi]
  40be75:	inc    esp
  40be76:	jb     0x40be6e
  40be78:	test   BYTE PTR [ecx],bh
  40be7a:	push   eax
  40be7b:	xor    al,0x94
  40be7d:	jnp    0x40be11
  40be7f:	fcom   DWORD PTR [edx]
  40be81:	(bad)  
  40be82:	sbb    BYTE PTR [ecx+0xc1ec59f],ah
  40be88:	mov    DWORD PTR [ebp-0xc],ecx
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bfbc
  40bf55:	out    0xbb,eax
  40bf57:	mov    al,0xb6
  40bf59:	add    eax,0x126e1818
  40bf5e:	sbb    BYTE PTR [eax],bl
  40bf60:	mov    BYTE PTR [edx],ah
  40bf62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf63:	xor    esi,ebp
  40bf65:	xor    BYTE PTR [eax-0xc],bh
  40bf68:	pop    eax
  40bf69:	not    BYTE PTR [ebp+0x18]
  40bf6c:	ret    0x8f44
  40bf6f:	sbb    al,0xaf
  40bf71:	adc    DWORD PTR [esi-0x56],eax
  40bf74:	xchg   edx,eax
  40bf75:	and    ax,0x5609
  40bf79:	cmp    eax,0xf6ca54fc
  40bf7e:	popf   
  40bf7f:	mov    cl,0x8d
  40bf81:	outs   dx,BYTE PTR ds:[esi]
  40bf82:	dec    edx
  40bf83:	pop    eax
  40bf84:	xor    eax,DWORD PTR [edi+0x2e098951]
  40bf8a:	or     eax,0x9ce5bee0
  40bf8f:	fnstcw WORD PTR [eax+edx*1]
  40bf92:	in     al,dx
  40bf93:	pop    ebp
  40bf94:	std    
  40bf95:	sbb    al,BYTE PTR [ebp-0x195e57cd]
  40bf9b:	sbb    DWORD PTR ds:0x18d3c671,edi
  40bfa1:	in     al,0x18
  40bfa3:	icebp  
  40bfa4:	dec    esp
  40bfa5:	cmp    esp,DWORD PTR [edi]
  40bfa7:	cmp    al,0x2e
  40bfa9:	jne    0x40bf5c
  40bfab:	sub    al,0x98
  40bfad:	xchg   ebx,eax
  40bfae:	sub    eax,DWORD PTR [esi]
  40bfb0:	or     dl,BYTE PTR ds:0xdb744a46
  40bfb6:	clc    
  40bfb7:	push   0xc
  40bfb9:	stos   DWORD PTR es:[edi],eax
  40bfba:	xor    DWORD PTR [esi+0x39],ebx
  40bfbd:	mov    DWORD PTR [ebx+0x5c69dd2e],ecx
  40bfc3:	push   edx
  40bfc4:	addr16 push ecx
  40bfc6:	jmp    0x4561:0x58184823
  40bfcd:	imul   ebx,DWORD PTR [edi],0x94a515ab
  40bfd3:	mov    esp,0xd44180e4
  40bfd8:	scas   al,BYTE PTR es:[edi]
  40bfd9:	aad    0x1c
  40bfdb:	cmp    dh,ch
  40bfdd:	rol    ebp,1
  40bfdf:	dec    ebx
  40bfe0:	dec    ebp
  40bfe1:	cmp    al,0x5f
  40bfe3:	xchg   edx,eax
  40bfe4:	out    dx,eax
  40bfe5:	mov    ds:0x7d0daa8e,al
  40bfea:	pop    ebp
  40bfeb:	push   edx
  40bfec:	fst    DWORD PTR [edi-0x1e]
  40bfef:	popf   
  40bff0:	std    
  40bff1:	jmp    0x260d2907
  40bff6:	pop    ebp
  40bff7:	lock sbb DWORD PTR [eax],edx
  40bffa:	add    BYTE PTR [edx],dh
  40bffc:	and    edx,DWORD PTR [edx+eiz*2+0x10]
  40c000:	test   DWORD PTR [esi],edi
  40c002:	dec    edi
  40c003:	mov    ecx,0xafe1145
  40c008:	inc    esp
  40c009:	dec    edi
  40c00a:	xor    al,0xf8
  40c00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c00d:	ds sub ecx,eax
  40c010:	outs   dx,DWORD PTR ds:[esi]
  40c011:	jmp    0x40c083
  40c013:	sub    al,0x59
  40c015:	pop    eax
  40c016:	and    eax,0x14f8dd6d
  40c01b:	xchg   edx,eax
  40c01c:	adc    al,0xc8
  40c01e:	sbb    eax,DWORD PTR [ecx+0x4155818b]
  40c024:	sub    dl,0x33
  40c027:	add    eax,0x240fa304
  40c02c:	inc    eax
  40c02d:	jg     0x40c085
  40c02f:	mov    bl,0x86
  40c031:	hlt    
  40c032:	psubd  mm6,QWORD PTR [ebx-0x631f324f]
  40c039:	fst    QWORD PTR [ebx]
  40c03b:	push   edi
  40c03c:	pop    esp
  40c03d:	mov    cl,0x9b
  40c03f:	push   ebp
  40c040:	mov    edi,edx
  40c042:	mov    WORD PTR [eax],?
  40c044:	sub    bl,0xa3
  40c047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c048:	sbb    DWORD PTR [esi-0x33288ff3],ebx
  40c04e:	jne    0x40c0a2
  40c050:	jge    0x40c020
  40c052:	ret    
  40c053:	rcr    DWORD PTR [ecx],1
  40c055:	outs   dx,BYTE PTR ds:[esi]
  40c056:	lods   eax,DWORD PTR ds:[esi]
  40c057:	push   0xffffffca
  40c059:	push   edi
  40c05a:	ds into 
  40c05c:	inc    eax
  40c05d:	jnp    0x40c031
  40c05f:	mov    esi,DWORD PTR [edx]
  40c061:	test   DWORD PTR [ecx],edx
  40c063:	retf   0x2bc6
  40c066:	inc    edx
  40c067:	pop    edx
  40c068:	jne    0x40bff1
  40c06a:	jbe    0x40bff7
  40c06c:	push   ebx
  40c06d:	shl    DWORD PTR [edi-0x178c0c09],0x23
  40c074:	inc    esi
  40c075:	mov    ebx,0x5927f29b
  40c07a:	hlt    
  40c07b:	in     al,dx
  40c07c:	popf   
  40c07d:	ret    
  40c07e:	xchg   ebx,eax
  40c07f:	mov    esp,0x6a021d2e
  40c084:	aas    
  40c085:	int    0xf0
  40c087:	or     DWORD PTR ds:0x19c2e293,esp
  40c08d:	dec    esi
  40c08e:	adc    DWORD PTR [esp+ebx*8+0x41923389],0xaa4941cf
  40c099:	(bad)
  40c09d:	xchg   ebp,eax
  40c09e:	arpl   si,ax
  40c0a0:	xor    BYTE PTR [eax],0x39
  40c0a3:	mov    ch,0x5d
  40c0a5:	ret    
  40c0a6:	icebp  
  40c0a7:	mov    WORD PTR [edi+ecx*8-0x67],ds
  40c0ab:	add    al,0x44
  40c0ad:	dec    edi
  40c0ae:	push   ebx
  40c0af:	add    eax,0xb9ce8fd4
  40c0b4:	mov    esi,0x415ca76b
  40c0b9:	jg     0x40c06a
  40c0bb:	nop
  40c0bc:	scas   al,BYTE PTR es:[edi]
  40c0bd:	in     eax,dx
  40c0be:	xchg   edi,edx
  40c0c0:	(bad)  
  40c0c1:	jb     0x40c0f1
  40c0c3:	push   0xb536448a
  40c0c8:	mov    ebp,0xd05487c6
  40c0cd:	xor    dl,al
  40c0cf:	push   ecx
  40c0d0:	lea    ecx,[edx+0x10]
  40c0d3:	out    dx,al
  40c0d4:	pop    ds
  40c0d5:	dec    esi
  40c0d6:	mov    ecx,0x42d67fd
  40c0db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0dc:	std    
  40c0dd:	or     al,0x47
  40c0df:	(bad)  
  40c0e0:	sbb    BYTE PTR [ebx],ch
  40c0e2:	xchg   ebp,eax
  40c0e3:	cwde   
  40c0e4:	outs   dx,DWORD PTR ds:[esi]
  40c0e5:	mov    edx,0xd2efc3f1
  40c0ea:	fld    DWORD PTR [esi]
  40c0ec:	pop    ss
  40c0ed:	jge    0x40c158
  40c0ef:	jecxz  0x40c15c
  40c0f1:	adc    DWORD PTR [edx],ebx
  40c0f3:	shr    BYTE PTR ds:0xa401c163,0xd
  40c0fa:	sub    eax,0x9cf53ed1
  40c0ff:	push   edx
  40c100:	fld    QWORD PTR [ebp+0x31704a53]
  40c106:	jmp    0x74c8:0x42ad697e
  40c10d:	adc    bh,BYTE PTR es:[eax]
  40c110:	mov    bh,cl
  40c112:	sub    edx,DWORD PTR [edx+0x48e1a2b5]
  40c118:	inc    edx
  40c119:	mov    edx,0x81f789dc
  40c11e:	inc    ebx
  40c11f:	aaa    
  40c120:	push   ebx
  40c121:	test   eax,0x224aca34
  40c126:	inc    ebp
  40c127:	lahf   
  40c128:	aaa    
  40c129:	pop    ds
  40c12a:	cmp    al,0xc
  40c12c:	jle    0x40c19e
  40c12e:	aaa    
  40c12f:	adc    eax,0xef9521de
  40c134:	or     esi,DWORD PTR [esi]
  40c136:	ds push esi
  40c138:	mov    DWORD PTR [eax+0x8],0xf2d0c0ed
  40c13f:	les    eax,FWORD PTR ds:[ecx]
  40c142:	in     eax,dx
  40c143:	fsub   DWORD PTR [ecx-0x291ad783]
  40c149:	xchg   ebp,eax
  40c14a:	mov    ds:0x41431c9c,eax
  40c14f:	and    ch,cl
  40c151:	adc    BYTE PTR [ebp+0x3d],dl
  40c154:	pop    esp
  40c155:	sar    DWORD PTR [edi+0x73],0x41
  40c159:	push   cs
  40c15a:	or     eax,0xb935237f
  40c15f:	ins    BYTE PTR es:[edi],dx
  40c160:	xlat   BYTE PTR ds:[ebx]
  40c161:	fnstenv [esi+0x45]
  40c164:	std    
  40c165:	pusha  
  40c166:	jne    0x40c10e
  40c168:	mov    DWORD PTR [ecx],ebx
  40c16a:	push   ebx
  40c16b:	imul   ecx,DWORD PTR [ecx+ebx*4],0x80192638
  40c172:	cmp    DWORD PTR [ebx-0x2d],edi
  40c175:	xor    bh,bh
  40c177:	xchg   ebx,eax
  40c178:	ds jg  0x40c1c9
  40c17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c17c:	bound  ebp,QWORD PTR [edi-0x74]
  40c17f:	adc    bl,bl
  40c181:	rcr    BYTE PTR [edx+0x6c],0x34
  40c185:	ret    0x8a2a
  40c188:	sbb    ah,cl
  40c18a:	test   al,0x53
  40c18c:	js     0x40c111
  40c18e:	xor    ah,BYTE PTR [ebp-0xb4799cf]
  40c194:	sub    ecx,DWORD PTR [esi*2+0x5d6e371]
  40c19b:	and    ah,BYTE PTR ds:0x2d4c33e5
  40c1a1:	test   eax,0xb2598a0e
  40c1a6:	inc    ebp
  40c1a7:	jmp    0x9a2f:0xb88407e5
  40c1ae:	pusha  
  40c1af:	xchg   ecx,eax
  40c1b0:	push   0xffffff89
  40c1b2:	jb     0x40c1d5
  40c1b4:	outs   dx,BYTE PTR ds:[esi]
  40c1b5:	rol    BYTE PTR [ecx],cl
  40c1b7:	dec    ecx
  40c1b8:	les    eax,FWORD PTR [ebx+0x7c]
  40c1bb:	repz cmp al,0x61
  40c1be:	dec    ecx
  40c1bf:	jmp    0x3985:0xa15d5654
  40c1c6:	in     eax,0x3e
  40c1c8:	add    DWORD PTR [ebp-0x6eb1db73],ebp
  40c1ce:	push   ebx
  40c1cf:	hlt    
  40c1d0:	push   ebx
  40c1d1:	aaa    
  40c1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d3:	xchg   BYTE PTR [edi-0x7a],ah
  40c1d6:	imul   esp,DWORD PTR [edx],0xe
  40c1d9:	push   edx
  40c1da:	mov    ebp,0x53cca7ff
  40c1df:	add    DWORD PTR [edi],ebx
  40c1e1:	mov    al,ds:0x1828c59
  40c1e6:	nop
  40c1e7:	(bad)  
  40c1e8:	push   esi
  40c1e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ea:	lods   eax,DWORD PTR ds:[esi]
  40c1eb:	daa    
  40c1ec:	push   edx
  40c1ed:	retf   0x4390
  40c1f0:	jns    0x40c198
  40c1f2:	mov    ebp,0x253e7564
  40c1f7:	mov    ecx,0x6037a227
  40c1fc:	inc    edx
  40c1fd:	shl    DWORD PTR ds:0x1e4a4ca9,0x8d
  40c204:	jns    0x40c1bd
  40c206:	int    0x20
  40c208:	es js  0x40c1e5
  40c20b:	pop    es
  40c20c:	stc    
  40c20d:	inc    edx
  40c20e:	mov    bh,0x6d
  40c210:	dec    edi
  40c211:	mov    edi,0xf63e7760
  40c216:	push   ecx
  40c217:	or     dl,BYTE PTR [ebp-0x51]
  40c21a:	ins    DWORD PTR es:[edi],dx
  40c21b:	cdq    
  40c21c:	add    eax,0x2c14c422
  40c221:	jo     0x40c250
  40c223:	aad    0x2f
  40c225:	imul   ebx,DWORD PTR [ecx+0x3b4b2a4c],0xffffff84
  40c22c:	int    0x3
  40c22e:	add    dl,BYTE PTR ds:0xcefbfbe8
  40c234:	push   0xd9c980fc
  40c239:	daa    
  40c23a:	mov    eax,0x183ac3f1
  40c23f:	pop    es
  40c240:	sbb    cl,0x8a
  40c243:	and    BYTE PTR [edi+0x73],dh
  40c246:	jge    0x40c27e
  40c248:	call   0x3387:0xd39997e8
  40c24f:	out    dx,eax
  40c250:	push   ds
  40c251:	sbb    ah,bl
  40c253:	(bad)  
  40c254:	hlt    
  40c255:	push   ecx
  40c256:	sti    
  40c257:	mul    DWORD PTR [ebp+0x6e]
  40c25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c25b:	mov    esp,0xaffc939f
  40c260:	push   edx
  40c261:	lods   eax,DWORD PTR ds:[esi]
  40c262:	lea    ebp,[edx-0x4f86ba70]
  40c268:	je     0x40c2b3
  40c26a:	test   eax,0xf768e70d
  40c26f:	call   0x843e3cbd
  40c274:	dec    edx
  40c275:	cwde   
  40c276:	shr    DWORD PTR [esi],cl
  40c278:	cmc    
  40c279:	test   al,0x25
  40c27b:	out    dx,eax
  40c27c:	add    al,0x8d
  40c27e:	dec    esi
  40c27f:	dec    edi
  40c280:	mov    ds:0xe5386178,al
  40c285:	dec    ecx
  40c286:	lahf   
  40c287:	or     dl,BYTE PTR [ebp+0x6a]
  40c28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c28b:	adc    eax,0x2a173c2
  40c290:	mov    dl,0x78
  40c292:	cmp    eax,0xc1921949
  40c297:	arpl   WORD PTR [ebp+0x24],di
  40c29a:	loop   0x40c2b3
  40c29c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c29d:	mov    BYTE PTR [ecx-0x1957ae0f],cl
  40c2a3:	cmp    bh,BYTE PTR [edi-0x6fd55634]
  40c2a9:	xchg   cl,dh
  40c2ab:	shl    BYTE PTR [esi+ebx*2-0x4c],1
  40c2af:	test   eax,0x7a9299bd
  40c2b4:	or     al,0xad
  40c2b6:	cld    
  40c2b7:	je     0x40c2af
  40c2b9:	sbb    al,0x19
  40c2bb:	jp     0x40c2d6
  40c2bd:	pop    ds
  40c2be:	xchg   esp,eax
  40c2bf:	retf   
  40c2c0:	nop
  40c2c1:	xor    ebx,DWORD PTR [esi]
  40c2c3:	fs mov esi,0xdb0b78cd
  40c2c9:	(bad)  
  40c2ca:	adc    ah,ah
  40c2cc:	inc    edi
  40c2cd:	(bad)  
  40c2ce:	out    0xb8,al
  40c2d0:	dec    edi
  40c2d1:	sub    edi,DWORD PTR [edi-0x56]
  40c2d4:	retf   
  40c2d5:	mov    ah,0x1c
  40c2d7:	pop    ebx
  40c2d8:	ja     0x40c33e
  40c2da:	jg     0x40c2f2
  40c2dc:	loopne 0x40c350
  40c2de:	cdq    
  40c2df:	test   esi,ebp
  40c2e1:	ret    0xc839
  40c2e4:	xchg   ebp,eax
  40c2e5:	shl    BYTE PTR [ebx],cl
  40c2e7:	xor    DWORD PTR [edi+edi*1+0x61],esp
  40c2eb:	xchg   edx,eax
  40c2ec:	fldenv [ecx+0x7e]
  40c2ef:	fidivr DWORD PTR [ebx+0x190d67ff]
  40c2f5:	xchg   ebp,eax
  40c2f6:	mov    bh,0x28
  40c2f8:	sbb    edi,DWORD PTR [ecx-0x5f]
  40c2fb:	add    eax,0x3a428619
  40c300:	nop
  40c301:	jecxz  0x40c36e
  40c303:	stos   BYTE PTR es:[edi],al
  40c304:	sub    BYTE PTR [ebp-0x7a],cl
  40c307:	mov    ebx,0x5cdaa095
  40c30c:	dec    esp
  40c30d:	scas   al,BYTE PTR es:[edi]
  40c30e:	cmc    
  40c30f:	bound  esi,QWORD PTR [ecx-0x5b]
  40c312:	bound  edi,QWORD PTR [edx+0x4]
  40c315:	sti    
  40c316:	fwait
  40c317:	mov    eax,0xb61d4b64
  40c31c:	ret    
  40c31d:	fstp   DWORD PTR [eax+0x2a5f208c]
  40c323:	xchg   edi,eax
  40c324:	retf   
  40c325:	lods   al,BYTE PTR ds:[esi]
  40c326:	lds    edx,FWORD PTR [edi]
  40c328:	pop    ss
  40c329:	test   eax,0xa074627
  40c32e:	nop
  40c32f:	jp     0x40c39b
  40c331:	enter  0x3508,0x66
  40c335:	push   ss
  40c336:	test   ebx,ecx
  40c338:	push   eax
  40c339:	push   eax
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42276c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422558
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42276c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	sbb    edx,DWORD PTR [edi-0x2f2432d]
  40c3d6:	sbb    BYTE PTR [eax],bl
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [ecx-0x1e],bh
  40c3de:	add    esp,ecx
  40c3e0:	push   esp
  40c3e1:	push   ebx
  40c3e2:	jle    0x40c3bb
  40c3e4:	or     dh,cl
  40c3e6:	cmp    DWORD PTR [ebx-0x661fc8ac],0x4961d40d
  40c3f0:	lock jnp 0x40c41e
  40c3f3:	jb     0x40c408
  40c3f5:	pushf  
  40c3f6:	pop    ds
  40c3f7:	in     eax,dx
  40c3f8:	ds mov ah,0x10
  40c3fb:	sbb    edx,edx
  40c3fd:	xor    edi,ebx
  40c3ff:	pmaddwd mm2,QWORD PTR [esp+esi*8+0x13]
  40c404:	mov    al,0xb2
  40c406:	xor    DWORD PTR [eax-0x1f25ffcd],edi
  40c40c:	xor    BYTE PTR [edx-0x5f],dh
  40c40f:	xor    cl,BYTE PTR [ebp-0x424a516b]
  40c415:	enter  0x2baf,0xa0
  40c419:	inc    ebp
  40c41a:	shl    DWORD PTR [edi],cl
  40c41c:	cmp    eax,0xa4c87dd6
  40c421:	mov    WORD PTR [eax-0x9fc1d16],?
  40c427:	repnz pop edx
  40c429:	scas   eax,DWORD PTR es:[edi]
  40c42a:	jno    0x40c4a6
  40c42c:	stos   DWORD PTR es:[edi],eax
  40c42d:	rol    DWORD PTR [ecx-0x11],1
  40c430:	pop    edi
  40c431:	imul   esp,DWORD PTR [esi],0x2a
  40c434:	adc    ebx,edx
  40c436:	or     ch,BYTE PTR [eax+0x7a]
  40c439:	mov    esi,0xfaa316b4
  40c43e:	pop    edx
  40c43f:	out    dx,al
  40c440:	push   0xffffffbd
  40c442:	mov    edx,0x56e9b8fe
  40c447:	out    0x87,al
  40c449:	add    eax,0x6262be13
  40c44e:	test   BYTE PTR [edi+ebp*8-0x30e46824],al
  40c455:	ret    0xfdbb
  40c458:	inc    edi
  40c459:	sti    
  40c45a:	scas   al,BYTE PTR es:[edi]
  40c45b:	mov    ecx,0x7c0ce0ff
  40c460:	mov    dh,0xe7
  40c462:	add    bl,BYTE PTR [esi-0x6f]
  40c465:	cmp    bh,BYTE PTR gs:[edx+0x18]
  40c469:	jmp    FWORD PTR [ebp-0x3c19413]
  40c46f:	cmp    al,0xa
  40c471:	dec    esi
  40c472:	fidivr WORD PTR gs:[edi-0x1da98dc9]
  40c47a:	(bad)  
  40c47b:	aaa    
  40c47c:	dec    esi
  40c47d:	outs   dx,BYTE PTR ds:[esi]
  40c47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47f:	xchg   esi,eax
  40c480:	in     eax,0x98
  40c482:	pop    ss
  40c483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c485:	and    dh,cl
  40c487:	inc    edx
  40c488:	mov    eax,0x7c68612b
  40c48d:	test   DWORD PTR [esi-0x6e348a02],esi
  40c493:	cmc    
  40c494:	aaa    
  40c495:	lahf   
  40c496:	lds    edi,FWORD PTR [ebx+eiz*1+0x24f4c80b]
  40c49d:	rcr    DWORD PTR [eax+0x1620619c],cl
  40c4a3:	add    al,BYTE PTR [ebx]
  40c4a5:	lods   al,BYTE PTR ds:[esi]
  40c4a6:	in     al,0x4e
  40c4a8:	mov    eax,ds:0x23a41447
  40c4ad:	scas   al,BYTE PTR es:[edi]
  40c4ae:	aad    0x32
  40c4b0:	xchg   esp,eax
  40c4b1:	dec    edx
  40c4b2:	pop    esp
  40c4b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4b4:	xchg   esi,eax
  40c4b5:	xor    ch,ch
  40c4b7:	sub    BYTE PTR [ebp+0x43],dl
  40c4ba:	repnz jmp FWORD PTR fs:[edx]
  40c4be:	aas    
  40c4bf:	sbb    BYTE PTR [esi-0xa556197],bl
  40c4c5:	int    0x40
  40c4c7:	aas    
  40c4c8:	push   ds
  40c4c9:	cmp    eax,0x7367c4a4
  40c4ce:	jl     0x40c488
  40c4d0:	jp     0x40c53f
  40c4d2:	daa    
  40c4d3:	xor    eax,0xe3698515
  40c4d8:	(bad)  
  40c4d9:	add    BYTE PTR [esi+0x4ea8e866],0xb7
  40c4e0:	nop
  40c4e1:	in     al,0xb6
  40c4e3:	sub    al,0x37
  40c4e5:	inc    edx
  40c4e6:	repnz dec esp
  40c4e8:	or     ebp,DWORD PTR [esi-0x595d7b25]
  40c4ee:	(bad)  
  40c4ef:	test   DWORD PTR [eax+edx*8-0x1f],0x9122db1b
  40c4f7:	pop    ecx
  40c4f8:	push   ebp
  40c4f9:	retf   0x80da
  40c4fc:	add    DWORD PTR es:[ebx+0x4567d821],eax
  40c503:	mov    DWORD PTR ds:0x8235590e,0x79b60c22
  40c50d:	ja     0x40c548
  40c50f:	jg     0x40c4c4
  40c511:	push   ebx
  40c512:	fdiv   DWORD PTR [esp+ebx*4-0x53124a5c]
  40c519:	in     al,0xa1
  40c51b:	mov    ds:0x54e5219c,al
  40c520:	sbb    DWORD PTR [esi],esi
  40c522:	fmul   QWORD PTR [ebp+ebx*1+0x53]
  40c526:	rcr    DWORD PTR [ebp+0x5156b309],0xcf
  40c52d:	arpl   dx,sp
  40c52f:	test   eax,0x1028f5ac
  40c534:	int    0xb3
  40c536:	xlat   BYTE PTR ds:[ebx]
  40c537:	stc    
  40c538:	push   ds
  40c539:	cmp    DWORD PTR [esi],edx
  40c53b:	jne    0x40c4e3
  40c53d:	outs   dx,DWORD PTR ds:[esi]
  40c53e:	inc    eax
  40c53f:	call   0x114bf161
  40c544:	enter  0x6d87,0x86
  40c548:	test   BYTE PTR [edi-0x38159d74],cl
  40c54e:	sbb    eax,0x81b22acc
  40c553:	rol    esi,cl
  40c555:	push   ebp
  40c556:	scas   al,BYTE PTR es:[edi]
  40c557:	ret    0xfe80
  40c55a:	xchg   bh,bl
  40c55c:	shr    DWORD PTR [eax+0x281cd540],0x78
  40c563:	es push ds
  40c565:	xchg   ah,al
  40c567:	mov    ds:0xb3ef9d44,eax
  40c56c:	out    0x48,eax
  40c56e:	mov    ?,WORD PTR [edx]
  40c570:	mov    ds,WORD PTR [esi+edi*2+0x61fd7f88]
  40c577:	mov    cl,0x98
  40c579:	sub    bh,bh
  40c57b:	inc    edi
  40c57c:	rcl    BYTE PTR [edi+ebx*4],cl
  40c57f:	add    cl,BYTE PTR [ecx]
  40c581:	popa   
  40c582:	fcmovnbe st,st(7)
  40c584:	adc    eax,0x61dd795c
  40c589:	inc    ebx
  40c58a:	push   ebx
  40c58b:	dec    esp
  40c58c:	mov    dh,BYTE PTR [edx-0x239be77d]
  40c592:	dec    edi
  40c593:	and    al,0x50
  40c595:	inc    edi
  40c596:	jmp    0x40c52d
  40c598:	push   0x36
  40c59a:	cmp    al,0x87
  40c59c:	lea    eax,[ebx+ebx*1+0x372ae844]
  40c5a3:	mov    edx,0x8ae6a94a
  40c5a8:	push   es
  40c5a9:	retf   
  40c5aa:	(bad)  
  40c5ab:	pop    ebp
  40c5ac:	test   eax,0xf32341a1
  40c5b1:	rol    ebp,cl
  40c5b3:	sub    al,0x8a
  40c5b5:	sbb    DWORD PTR [ebp+eax*4+0x7c21e6e],0x1c806e78
  40c5c0:	xor    bh,ch
  40c5c2:	lods   eax,DWORD PTR ds:[esi]
  40c5c3:	int3   
  40c5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5c6:	mov    BYTE PTR [ebp-0x7cc53a6c],ch
  40c5cc:	out    dx,eax
  40c5cd:	stc    
  40c5ce:	jne    0x40c5b4
  40c5d0:	inc    esp
  40c5d1:	pop    ds
  40c5d2:	jmp    0x3260:0xb6684c8f
  40c5d9:	es inc eax
  40c5db:	inc    DWORD PTR [esi+ecx*1+0x14]
  40c5df:	ss bswap edx
  40c5e2:	(bad)  [edi+0x7e]
  40c5e5:	(bad)  
  40c5e6:	mov    edx,0xf13b6349
  40c5eb:	jle    0x40c66a
  40c5ed:	push   ebx
  40c5ee:	dec    esi
  40c5ef:	mov    DWORD PTR [edi-0x43867b15],eax
  40c5f5:	dec    BYTE PTR [ebx+esi*8-0x6c]
  40c5f9:	pop    es
  40c5fa:	jge    0x40c5b2
  40c5fc:	sti    
  40c5fd:	inc    esp
  40c5fe:	or     al,0xf1
  40c600:	lea    esp,[ebx-0x53972acd]
  40c606:	cmp    BYTE PTR [ebx+ecx*8],0xb7
  40c60a:	pop    ecx
  40c60b:	rol    ah,0x57
  40c60e:	add    al,0x9d
  40c610:	(bad)  [ebx]
  40c612:	imul   edi,DWORD PTR [eax+0x24551d51],0x2c4c7174
  40c61c:	aad    0x3f
  40c61e:	cmp    eax,0xa62a074c
  40c623:	loop   0x40c5b0
  40c625:	sub    BYTE PTR [ecx],ah
  40c627:	push   ebx
  40c628:	dec    ebp
  40c629:	and    bl,BYTE PTR gs:[ebx+eiz*2+0xae9afcf]
  40c631:	jmp    0xabeae3d8
  40c636:	in     al,0xba
  40c638:	cwde   
  40c639:	clc    
  40c63a:	mov    al,0x7f
  40c63c:	in     al,0x31
  40c63e:	jbe    0x40c669
  40c640:	int3   
  40c641:	xchg   ebx,eax
  40c643:	arpl   WORD PTR [esi],dx
  40c645:	push   0xffffff96
  40c647:	xor    al,0x3c
  40c649:	sub    ch,BYTE PTR [eax-0x17]
  40c64c:	mov    cl,0x32
  40c64e:	ret    0xcc81
  40c651:	jo     0x40c5fe
  40c653:	mov    esi,DWORD PTR [esi-0x1fcd74f7]
  40c659:	mov    ds:0xf73fd0bd,al
  40c65e:	(bad)
  40c661:	out    dx,eax
  40c662:	push   esi
  40c663:	sahf   
  40c664:	xor    BYTE PTR [ecx+0xb],0xab
  40c668:	and    BYTE PTR [edx],bl
  40c66a:	adc    eax,0xfefe47c
  40c66f:	add    BYTE PTR [ecx],al
  40c671:	in     al,0x3c
  40c673:	out    dx,al
  40c674:	ja     0x2c6491f6
  40c67a:	jb     0x40c6ce
  40c67c:	cld    
  40c67d:	jp     0x40c60b
  40c67f:	mov    eax,ds:0xea70b5cd
  40c684:	ss mov ebx,ebp
  40c687:	add    al,0x62
  40c689:	push   0x67a0aeef
  40c68e:	mov    eax,0xd454a704
  40c693:	mov    bh,0x50
  40c695:	lea    eax,[ecx-0x6700a3f6]
  40c69b:	jmp    esp
  40c69d:	or     BYTE PTR [ecx],0xbd
  40c6a0:	push   ss
  40c6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6a2:	jmp    0x792cf5bc
  40c6a7:	cmp    eax,0xeafe7153
  40c6ac:	push   esi
  40c6ad:	sahf   
  40c6ae:	pop    ss
  40c6af:	std    
  40c6b0:	cdq    
  40c6b1:	ret    
  40c6b2:	cmp    ebx,DWORD PTR [ecx-0x5e]
  40c6b5:	imul   esi,DWORD PTR [edx-0x5576506f],0x69f261e4
  40c6bf:	ret    
  40c6c0:	mov    gs,esi
  40c6c2:	fsubrp st(5),st
  40c6c4:	add    al,BYTE PTR [eax+ebp*1-0x28]
  40c6c8:	and    BYTE PTR [eax*1+0x161bd9a2],al
  40c6cf:	fs jo  0x40c72f
  40c6d2:	sub    BYTE PTR gs:[eax-0x374b5a1a],al
  40c6d9:	aas    
  40c6da:	sub    eax,0x589f4000
  40c6df:	mov    cl,0xc3
  40c6e1:	sbb    al,0xd5
  40c6e3:	inc    eax
  40c6e4:	aaa    
  40c6e5:	in     eax,0x8e
  40c6e7:	dec    ecx
  40c6e8:	push   esi
  40c6e9:	jnp    0x40c71f
  40c6eb:	lahf   
  40c6ec:	imul   esi,DWORD PTR [ecx+ebp*4],0x4f29f396
  40c6f3:	inc    eax
  40c6f4:	outs   dx,BYTE PTR ds:[esi]
  40c6f5:	cs mov ah,0x96
  40c6f8:	aaa    
  40c6f9:	sbb    al,0x41
  40c6fb:	sub    ebp,DWORD PTR [eax-0xa1f01d3]
  40c701:	clc    
  40c702:	push   bx
  40c704:	mov    bl,0xe0
  40c706:	iret   
  40c707:	jp     0x40c691
  40c709:	jmp    0xef52:0xe35136a1
  40c710:	sbb    esp,edi
  40c712:	imul   edi,DWORD PTR [ebp-0x4c0f10a2],0xffffffed
  40c719:	xchg   edx,eax
  40c71a:	inc    ebx
  40c71b:	aaa    
  40c71c:	addr16 in al,dx
  40c71e:	xchg   ecx,eax
  40c71f:	lock pop edx
  40c721:	int3   
  40c722:	ja     0x40c6b3
  40c724:	and    eax,0x9ab01c04
  40c729:	xor    DWORD PTR [esi+0x6ace6e42],edi
  40c72f:	fcmovnbe st,st(6)
  40c731:	out    0x6a,eax
  40c733:	and    DWORD PTR ds:0x5a9f68f0,ecx
  40c739:	ins    DWORD PTR es:[edi],dx
  40c73a:	fwait
  40c73b:	sbb    eax,0xb8dea524
  40c740:	fcom   st(3)
  40c742:	or     ah,BYTE PTR [ecx+0x30]
  40c745:	stos   DWORD PTR es:[edi],eax
  40c746:	mov    esp,0xca86ccc8
  40c74b:	mov    eax,ds:0xe2937227
  40c750:	sbb    DWORD PTR [edi-0x47b28ad1],esi
  40c756:	shl    BYTE PTR [ebx+eax*8],cl
  40c759:	xchg   ecx,eax
  40c75a:	cmp    BYTE PTR [esi],ch
  40c75c:	cmp    ebp,DWORD PTR [eax-0x1d3758b9]
  40c762:	outs   dx,BYTE PTR ds:[esi]
  40c763:	cmp    DWORD PTR [esi],ebx
  40c765:	sbb    ecx,DWORD PTR [edx+ebp*2+0x4c]
  40c769:	sub    al,0x1
  40c76b:	cli    
  40c76c:	mov    esp,0xb951c25
  40c771:	imul   edi,DWORD PTR [ecx+edx*1-0x35b8ffd5],0xabb53708
  40c77c:	dec    edi
  40c77d:	or     DWORD PTR [esi-0x4e],0x78e4580d
  40c784:	xor    BYTE PTR [eax+esi*8+0x78],al
  40c788:	mov    WORD PTR [ebx-0x5c601b2e],?
  40c78e:	fdivr  QWORD PTR ss:[eax-0x19]
  40c792:	mov    BYTE PTR [esi+esi*2+0x1d],ah
  40c796:	aam    0x20
  40c798:	and    eax,0x410c6f6c
  40c79d:	dec    edx
  40c79e:	pop    esi
  40c79f:	inc    edx
  40c7a0:	xchg   ebx,eax
  40c7a1:	ret    
  40c7a2:	sub    eax,0xb4051fde
  40c7a7:	pop    ebx
  40c7a8:	bndldx bnd1,[edx+0x36d781c7]
  40c7af:	das    
  40c7b0:	popf   
  40c7b1:	jge    0x40c743
  40c7b3:	js     0x40c76d
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi+0x7fa31970]
  40c7fd:	mov    al,0x63
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    al,al
  40c807:	cmp    DWORD PTR [ebp+0x1ccf182f],esi
  40c80d:	repz mov ah,0x4
  40c810:	into   
  40c811:	dec    esi
  40c812:	inc    esi
  40c813:	cmc    
  40c814:	cmp    al,0x12
  40c816:	fs icebp 
  40c818:	fidiv  DWORD PTR [esi-0x27]
  40c81b:	jecxz  0x40c82f
  40c81d:	and    ebx,DWORD PTR [ebp+0x7b]
  40c820:	stos   BYTE PTR es:[edi],al
  40c821:	xor    ah,dh
  40c823:	push   cs
  40c824:	jno    0x40c86e
  40c826:	xchg   ecx,eax
  40c827:	mov    ebx,0xf9c7c848
  40c82c:	jl     0x40c7e4
  40c82e:	xchg   edx,eax
  40c82f:	loop   0x40c867
  40c831:	clc    
  40c832:	jns    0x40c7c4
  40c834:	mov    cl,0x79
  40c836:	pop    esp
  40c837:	int3   
  40c838:	test   DWORD PTR [edx+0x41],edx
  40c83b:	inc    edi
  40c83c:	push   ss
  40c83d:	jp     0x40c8a4
  40c83f:	mov    ds:0xecc0bde4,eax
  40c844:	jg     0x40c7d8
  40c846:	pop    edi
  40c847:	mov    al,0xeb
  40c849:	dec    esi
  40c84a:	call   DWORD PTR [ecx]
  40c84c:	push   ecx
  40c84d:	inc    esi
  40c84e:	sub    ch,BYTE PTR [esi]
  40c850:	push   esp
  40c851:	push   esi
  40c852:	fwait
  40c853:	sub    ecx,esi
  40c855:	mov    edi,0xaf399a7e
  40c85a:	xlat   BYTE PTR ds:[ebx]
  40c85b:	sbb    esp,edi
  40c85d:	dec    DWORD PTR [esi-0x4b]
  40c860:	fs adc al,0x23
  40c863:	aad    0x39
  40c865:	and    eax,0x85d0c327
  40c86a:	pop    eax
  40c86b:	sub    al,BYTE PTR [eax]
  40c86d:	sub    BYTE PTR [ecx+ebx*2+0x4f],dh
  40c871:	pushf  
  40c872:	pusha  
  40c873:	std    
  40c874:	sahf   
  40c875:	jl     0x40c7f7
  40c877:	xor    BYTE PTR ds:0xcfbf3f00,ah
  40c87d:	in     eax,0xd9
  40c87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c880:	cs daa 
  40c882:	dec    ebx
  40c883:	fnstcw WORD PTR [esi+0x78dd1d12]
  40c889:	sahf   
  40c88a:	aam    0x49
  40c88c:	sbb    al,0xed
  40c88e:	ficom  WORD PTR [ecx+0x736ed57c]
  40c894:	adc    dl,BYTE PTR [esi]
  40c896:	mov    DWORD PTR [ecx-0x5d0a5b5e],eax
  40c89c:	or     ah,BYTE PTR [edx-0x52]
  40c89f:	cld    
  40c8a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8a1:	retf   
  40c8a2:	out    0xdf,al
  40c8a4:	int3   
  40c8a5:	and    ebp,DWORD PTR [edi-0x44]
  40c8a8:	in     al,0xc0
  40c8aa:	or     BYTE PTR [ebx],0xd5
  40c8ad:	out    dx,eax
  40c8ae:	lods   al,BYTE PTR ds:[esi]
  40c8af:	add    cl,BYTE PTR ds:0x2d10103e
  40c8b5:	or     esp,DWORD PTR [esi+ebx*1-0x3a727c77]
  40c8bc:	adc    ecx,edi
  40c8be:	jecxz  0x40c8ce
  40c8c0:	aad    0xc1
  40c8c2:	ja     0x40c8b6
  40c8c4:	(bad)  
  40c8c5:	fild   QWORD PTR [edi-0x2c]
  40c8c8:	ror    BYTE PTR [edi-0x12],1
  40c8cb:	test   DWORD PTR [esi-0x66],ebx
  40c8ce:	xor    eax,0x8adb54d
  40c8d3:	mov    eax,0x5c3780fc
  40c8d8:	loop   0x40c8a8
  40c8da:	pop    ebp
  40c8db:	xor    al,0x5f
  40c8dd:	push   esi
  40c8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8df:	mov    ds:0x6ffecd4a,al
  40c8e4:	out    dx,eax
  40c8e5:	sbb    edx,DWORD PTR [edx]
  40c8e7:	inc    ebp
  40c8e8:	(bad)  
  40c8ea:	xchg   esi,eax
  40c8eb:	push   0xdd1cb886
  40c8f0:	les    eax,FWORD PTR [ebp-0x6d82e9ef]
  40c8f6:	mov    bh,0xea
  40c8f8:	and    al,0x1e
  40c8fa:	sub    BYTE PTR ds:0xeea7ca0c,bh
  40c900:	mov    WORD PTR [ebx-0x1a],fs
  40c903:	out    0x2b,eax
  40c905:	mov    ebp,0xcc694d92
  40c90a:	jne    0x40c943
  40c90c:	leave  
  40c90d:	or     bh,BYTE PTR [eax+eiz*4-0x7321981a]
  40c914:	inc    ebx
  40c915:	jmp    0x6f727461
  40c91a:	add    esi,DWORD PTR [esi-0x6fc8482]
  40c920:	(bad)  [edx+0x32]
  40c923:	fcomp  DWORD PTR [eax-0x4e]
  40c926:	outs   dx,DWORD PTR ds:[esi]
  40c927:	mov    ebx,0x7d0cbc68
  40c92c:	sbb    DWORD PTR [ebx],ebx
  40c92e:	lea    ebp,[edx]
  40c930:	push   edx
  40c931:	stos   DWORD PTR es:[edi],eax
  40c932:	add    BYTE PTR ds:[ecx+0x29d3ff2b],bh
  40c939:	ins    DWORD PTR es:[edi],dx
  40c93a:	and    DWORD PTR [edi+0x2786d74e],0xffffffbe
  40c941:	cli    
  40c942:	aaa    
  40c943:	xor    al,0xf5
  40c945:	out    0x36,al
  40c947:	nop
  40c948:	(bad)  
  40c949:	icebp  
  40c94a:	sub    dl,ch
  40c94c:	mov    dl,0x29
  40c94e:	dec    esp
  40c94f:	sub    al,0xbd
  40c951:	xor    DWORD PTR [edx],esp
  40c953:	pop    es
  40c954:	xor    dl,bl
  40c956:	push   ecx
  40c957:	add    dh,BYTE PTR [ebp-0x73]
  40c95a:	je     0x40c91c
  40c95c:	xor    cl,dh
  40c95e:	test   DWORD PTR [ebp-0x62276101],0x19c3c40c
  40c968:	xor    dh,BYTE PTR [ecx+0x3ac8bd7c]
  40c96e:	lds    ebx,FWORD PTR [eax]
  40c970:	nop
  40c971:	adc    DWORD PTR [edi],ecx
  40c973:	mov    eax,ds:0xd6dd68ab
  40c978:	cld    
  40c979:	sahf   
  40c97a:	in     al,0xb4
  40c97c:	cli    
  40c97d:	or     al,bh
  40c97f:	add    al,0x73
  40c981:	pop    ds
  40c982:	(bad)
  40c985:	out    0xc3,al
  40c987:	push   edi
  40c988:	or     ebp,DWORD PTR [ebx]
  40c98a:	mov    BYTE PTR [esi+0x5cad2b4b],ah
  40c990:	in     eax,0x98
  40c992:	fcomp  st(2)
  40c994:	shl    DWORD PTR [eax],0xdc
  40c997:	mov    ebx,0x2be17b81
  40c99c:	fwait
  40c99d:	das    
  40c99e:	and    bh,BYTE PTR [bx+si]
  40c9a1:	inc    edx
  40c9a2:	dec    ebx
  40c9a3:	push   cs
  40c9a4:	jne    0x40c967
  40c9a6:	lods   eax,DWORD PTR ds:[esi]
  40c9a7:	test   al,0x82
  40c9a9:	nop
  40c9aa:	fwait
  40c9ab:	nop
  40c9ac:	mov    esi,0x9683c539
  40c9b1:	push   0x9f5af3b1
  40c9b6:	xor    al,BYTE PTR cs:[edi]
  40c9b9:	sbb    al,0x6e
  40c9bb:	push   0x18
  40c9bd:	mov    ebx,0xb0649601
  40c9c2:	jl     0x40c9b9
  40c9c4:	adc    cl,BYTE PTR [ebx+ecx*2-0x30]
  40c9c8:	jle    0x40c9d2
  40c9ca:	and    ecx,esp
  40c9cc:	inc    esp
  40c9cd:	int    0xda
  40c9cf:	ss dec ebp
  40c9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d2:	jb     0x40ca0d
  40c9d4:	ss add eax,0xd4a6a340
  40c9da:	aaa    
  40c9db:	push   ebx
  40c9dc:	xchg   esi,eax
  40c9dd:	test   al,0x25
  40c9df:	push   esp
  40c9e0:	dec    edx
  40c9e1:	test   DWORD PTR [edx+eiz*8],edx
  40c9e4:	and    bh,BYTE PTR [edx+0x3080f10]
  40c9ea:	(bad)  
  40c9eb:	je     0x40c9df
  40c9ed:	sub    DWORD PTR [ebx+edx*8-0x16],ecx
  40c9f1:	out    0x37,al
  40c9f3:	ins    BYTE PTR es:[edi],dx
  40c9f4:	ret    
  40c9f5:	inc    ebp
  40c9f6:	jecxz  0x40ca5e
  40c9f8:	cs adc esp,ebp
  40c9fb:	call   0xe78b480b
  40ca00:	test   eax,0x3239a918
  40ca05:	xor    eax,0xa316a296
  40ca0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca0b:	pop    eax
  40ca0c:	js     0x40ca4b
  40ca0e:	shl    DWORD PTR [edx+0x35],cl
  40ca11:	xor    eax,0x3eee0522
  40ca16:	pop    ds
  40ca17:	fucom  st(0)
  40ca19:	sbb    ecx,DWORD PTR [eax+0x62d48e5c]
  40ca1f:	jae    0x40ca1a
  40ca21:	add    BYTE PTR [eax],bl
  40ca23:	lods   al,BYTE PTR ds:[esi]
  40ca24:	out    0xe6,al
  40ca26:	into   
  40ca27:	inc    esp
  40ca28:	push   edi
  40ca29:	add    al,0x92
  40ca2b:	scas   eax,DWORD PTR es:[edi]
  40ca2c:	inc    edx
  40ca2d:	and    ebp,ebp
  40ca2f:	ja     0x40ca00
  40ca31:	sbb    BYTE PTR [esi+0x39fee854],dl
  40ca37:	mov    cl,0xbb
  40ca39:	sti    
  40ca3a:	sub    BYTE PTR [edi+0x6e85f6b8],cl
  40ca40:	sahf   
  40ca41:	neg    DWORD PTR [ecx+0x3cb5a2cd]
  40ca47:	push   ebp
  40ca48:	push   ds
  40ca49:	sub    ebx,edi
  40ca4b:	cmp    al,0x89
  40ca4d:	mov    ds:0xb6f34f55,al
  40ca52:	outs   dx,BYTE PTR ds:[esi]
  40ca53:	aas    
  40ca54:	nop
  40ca55:	sbb    ah,BYTE PTR ds:0xeb65956c
  40ca5b:	mov    cl,0x7
  40ca5d:	aas    
  40ca5e:	sub    BYTE PTR [edi-0x1d86c4e1],0xe7
  40ca65:	call   0x3bca:0x3c13aa2c
  40ca6c:	and    BYTE PTR [ecx],dh
  40ca6e:	xchg   ebx,eax
  40ca6f:	mov    WORD PTR [ebx+ecx*2-0x29b54f2d],es
  40ca76:	add    al,BYTE PTR [ebx-0x6e]
  40ca79:	cmp    al,0x41
  40ca7b:	popa   
  40ca7c:	int    0x9b
  40ca7e:	test   DWORD PTR [ecx-0x20],edi
  40ca81:	cmp    al,0x4b
  40ca83:	push   esp
  40ca84:	push   0xffffff84
  40ca86:	dec    edx
  40ca87:	add    BYTE PTR [ecx-0x37],ah
  40ca8a:	xor    eax,0x3d03635c
  40ca8f:	sub    bl,BYTE PTR [esi]
  40ca91:	dec    edx
  40ca92:	xchg   esi,eax
  40ca93:	or     cl,cl
  40ca95:	xor    eax,0x2e19d459
  40ca9a:	std    
  40ca9b:	(bad)  
  40ca9c:	pop    ebx
  40ca9d:	repnz sti 
  40ca9f:	sbb    BYTE PTR [eax-0x50],ch
  40caa2:	push   ds
  40caa3:	loopne 0x40cae4
  40caa5:	xor    eax,0x7791123a
  40caaa:	xchg   edi,eax
  40caab:	pop    ss
  40caac:	pop    esp
  40caad:	mov    edi,0x2533f7de
  40cab2:	mov    eax,ds:0x4810c5e2
  40cab7:	(bad)
  40cabb:	cli    
  40cabc:	push   ecx
  40cabd:	xchg   ebx,eax
  40cabe:	mov    ah,cl
  40cac0:	xor    cl,dl
  40cac2:	sbb    cl,BYTE PTR [eax]
  40cac4:	or     BYTE PTR [edi+0x60b617b7],0xbf
  40cacb:	mov    ah,0xc1
  40cacd:	mov    cl,0x82
  40cacf:	xor    al,BYTE PTR ds:[esi-0x16]
  40cad3:	and    BYTE PTR [ecx-0x34],ch
  40cad6:	mov    esp,0x3f025d47
  40cadb:	or     eax,0xfb7b33dd
  40cae0:	repnz ins DWORD PTR es:[edi],dx
  40cae2:	mov    al,ds:0x558af5c9
  40cae7:	cmp    DWORD PTR [eax+0x17a35ee1],0x9224fec8
  40caf1:	adc    DWORD PTR [ecx+0x11e17db1],0xdcba1fb6
  40cafb:	adc    BYTE PTR [edi],bh
  40cafd:	mov    bl,bh
  40caff:	hlt    
  40cb00:	int    0x7f
  40cb02:	sub    al,0x18
  40cb04:	mov    bl,0xa8
  40cb06:	xchg   DWORD PTR [eax],ecx
  40cb08:	sbb    ebp,esp
  40cb0a:	mov    esi,DWORD PTR [esp+ebp*8+0x73]
  40cb0e:	cmp    esi,ecx
  40cb10:	sar    BYTE PTR [eax+0x38],1
  40cb13:	ins    DWORD PTR es:[edi],dx
  40cb14:	xchg   esi,eax
  40cb15:	push   edi
  40cb16:	mov    al,ds:0x81b8007d
  40cb1b:	imul   DWORD PTR [eax]
  40cb1d:	test   eax,0x1df8fcba
  40cb22:	dec    esp
  40cb23:	sbb    eax,0xfd2b73c5
  40cb28:	pop    eax
  40cb29:	cmp    bl,dl
  40cb2b:	sahf   
  40cb2c:	and    eax,0xd9b0d72a
  40cb31:	jo     0x40cb88
  40cb33:	lock pusha 
  40cb35:	test   BYTE PTR [ebp-0x7346a64f],0x76
  40cb3c:	dec    ecx
  40cb3d:	fistp  DWORD PTR [edx+0x74]
  40cb40:	hlt    
  40cb41:	out    dx,al
  40cb42:	enter  0x6e20,0x6e
  40cb46:	adc    DWORD PTR ds:0x5439d152,edi
  40cb4c:	es fwait
  40cb4e:	sar    DWORD PTR [ecx-0x6975159c],1
  40cb54:	sub    ch,al
  40cb56:	daa    
  40cb57:	adc    bl,BYTE PTR [ecx-0x7df77bf4]
  40cb5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb5e:	retf   0xbbce
  40cb61:	stos   BYTE PTR es:[edi],al
  40cb62:	ret    
  40cb63:	lock fcomp QWORD PTR [edi]
  40cb66:	inc    edi
  40cb67:	pop    es
  40cb68:	cwde   
  40cb69:	add    bl,BYTE PTR [ecx+0x65]
  40cb6c:	call   0x8f8365fc
  40cb71:	push   ss
  40cb72:	xor    bh,BYTE PTR [esi+0x77]
  40cb75:	jnp    0x40cbf1
  40cb77:	lods   eax,DWORD PTR ds:[esi]
  40cb78:	jno    0x40cb10
  40cb7a:	adc    eax,0x46e4d6d4
  40cb7f:	fcos   
  40cb81:	sar    BYTE PTR [esi+0x13],0x66
  40cb85:	push   0x94f0bc8d
  40cb8a:	ficom  DWORD PTR [ecx+edx*2]
  40cb8d:	in     eax,0x7c
  40cb8f:	mov    cl,0x18
  40cb91:	int    0x6f
  40cb93:	call   0xd7cfe1d8
  40cb98:	ficomp DWORD PTR [edi]
  40cb9a:	xchg   ebp,eax
  40cb9b:	jne    0x40cb40
  40cb9d:	and    bl,BYTE PTR [eax]
  40cb9f:	inc    edx
  40cba0:	xor    bh,BYTE PTR [ebx-0x11]
  40cba3:	fmul   st(7),st
  40cba5:	aad    0x92
  40cba7:	(bad)  
  40cba8:	es jp  0x40cb6e
  40cbab:	stos   DWORD PTR es:[edi],eax
  40cbac:	jmp    0x40cc13
  40cbae:	test   al,0xa6
  40cbb0:	xchg   esi,eax
  40cbb1:	scas   eax,DWORD PTR es:[edi]
  40cbb2:	cmp    al,0x97
  40cbb4:	xor    eax,0x7b0d6dff
  40cbb9:	jbe    0x40cbf7
  40cbbb:	adc    DWORD PTR [edi+ebx*1-0x15],ebx
  40cbbf:	inc    ebx
  40cbc0:	ja     0x40cb72
  40cbc2:	push   esp
  40cbc3:	in     eax,0x74
  40cbc5:	lahf   
  40cbc6:	repz retf 
  40cbc8:	aaa    
  40cbc9:	pusha  
  40cbca:	sbb    DWORD PTR [edi],esp
  40cbcc:	ret    0x1ca1
  40cbcf:	ss and esp,eax
  40cbd2:	mov    eax,0x54171788
  40cbd7:	fild   DWORD PTR [edx-0x78638eb0]
  40cbdd:	and    al,BYTE PTR [ecx+0xf]
  40cbe0:	and    DWORD PTR [ecx],0x0
  40cbe3:	add    BYTE PTR [eax],al
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422660,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x435802cf],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [ecx],ah
  40cc78:	retf   0xe158
  40cc7b:	scas   eax,DWORD PTR es:[edi]
  40cc7c:	or     esp,DWORD PTR [esi-0x2]
  40cc7f:	xor    ebx,DWORD PTR [ecx]
  40cc81:	fcomp  QWORD PTR [edx]
  40cc83:	ins    DWORD PTR es:[edi],dx
  40cc84:	inc    ecx
  40cc85:	ret    0xb3f2
  40cc88:	push   edi
  40cc89:	std    
  40cc8a:	imul   edi,DWORD PTR ds:0x68b8d5c0,0x9e4cc044
  40cc94:	lahf   
  40cc95:	dec    ebp
  40cc96:	mov    ds:0xd27431a9,eax
  40cc9b:	or     dl,BYTE PTR [esi+0xb]
  40cc9e:	sti    
  40cc9f:	jne    0x40cc8b
  40cca1:	pop    ds
  40cca2:	mov    esi,0x5bc67f08
  40cca7:	push   0x4d20f45d
  40ccac:	in     al,dx
  40ccad:	cmp    al,0xfb
  40ccaf:	pop    eax
  40ccb0:	mul    BYTE PTR ds:0xba1f5517
  40ccb6:	jns    0x40cd36
  40ccb8:	add    dh,BYTE PTR [ecx+0x40]
  40ccbb:	xadd   ebp,ecx
  40ccbe:	shr    dh,cl
  40ccc0:	fsub   QWORD PTR [edi-0x7d0eb23]
  40ccc6:	xchg   ebp,eax
  40ccc7:	mov    ds:0x42f2cb58,al
  40cccc:	rcr    DWORD PTR [esi],1
  40ccce:	pop    DWORD PTR [ecx+0x64]
  40ccd1:	ret    0x8ed5
  40ccd4:	xor    BYTE PTR [eax],0xad
  40ccd7:	push   cs
  40ccd8:	rol    DWORD PTR [ebx+eiz*1-0x27],cl
  40ccdc:	push   0xffffffdc
  40ccde:	repz add bh,bl
  40cce1:	push   ebp
  40cce2:	retf   0x171e
  40cce5:	adc    eax,0x707bd664
  40ccea:	mov    edx,0x6f079de4
  40ccef:	aam    0xda
  40ccf1:	dec    edx
  40ccf2:	xchg   BYTE PTR [ecx+eiz*2+0x17],bl
  40ccf6:	or     DWORD PTR [ecx+0x22b8f44c],0x74385c98
  40cd00:	jmp    0x607ace58
  40cd05:	div    DWORD PTR [edx-0x3c]
  40cd08:	inc    edi
  40cd09:	adc    edx,DWORD PTR [edi+edx*2+0x7e]
  40cd0d:	jno    0x40cd6b
  40cd0f:	jg     0x40cd06
  40cd11:	(bad)  
  40cd12:	cmp    edx,DWORD PTR [eax]
  40cd14:	fisub  WORD PTR [ecx+0x4]
  40cd17:	pop    ebp
  40cd18:	(bad)  
  40cd19:	into   
  40cd1a:	mov    esp,0x97f896e0
  40cd1f:	adc    cl,BYTE PTR [edi]
  40cd21:	das    
  40cd22:	loop   0x40ccf6
  40cd24:	cmp    dh,BYTE PTR [edx]
  40cd26:	test   al,0x1e
  40cd28:	cmp    eax,0xebce378
  40cd2d:	lds    edi,FWORD PTR [eax]
  40cd2f:	mov    ebx,0x82610731
  40cd34:	xlat   BYTE PTR ds:[ebx]
  40cd35:	mov    ebp,DWORD PTR [edi+0x41e7979f]
  40cd3b:	jno    0x40cd37
  40cd3d:	xor    BYTE PTR [ebp-0x28],dl
  40cd40:	retf   0xb3d8
  40cd43:	add    BYTE PTR [edx-0x33],bl
  40cd46:	dec    esi
  40cd47:	imul   BYTE PTR [esi-0x2]
  40cd4a:	jp     0x40cd18
  40cd4c:	xor    esp,ecx
  40cd4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd4f:	rcr    DWORD PTR [ecx],cl
  40cd51:	fld    DWORD PTR [ebp-0x4e50afaf]
  40cd57:	out    0x4,eax
  40cd59:	(bad)  [eax]
  40cd5b:	cli    
  40cd5c:	or     BYTE PTR [edx+0x12],cl
  40cd5f:	xchg   DWORD PTR [eax],ebx
  40cd61:	pusha  
  40cd62:	int3   
  40cd63:	mov    esp,0xf1c91383
  40cd68:	stos   DWORD PTR es:[edi],eax
  40cd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd6a:	loopne 0x40ccf5
  40cd6c:	or     DWORD PTR [edx+0x62],0xe54dfe9d
  40cd73:	sub    eax,0xb910ef12
  40cd78:	outs   dx,BYTE PTR ds:[esi]
  40cd79:	pop    eax
  40cd7a:	stos   DWORD PTR es:[edi],eax
  40cd7b:	xlat   BYTE PTR ds:[ebx]
  40cd7c:	mov    edi,0x667c3996
  40cd81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd82:	add    DWORD PTR [ebx+0x2],0x9d34b436
  40cd89:	sub    DWORD PTR ds:0x59edc01f,edi
  40cd8f:	sbb    al,0x7c
  40cd91:	cmc    
  40cd92:	inc    edi
  40cd93:	scas   al,BYTE PTR es:[edi]
  40cd94:	inc    ebp
  40cd95:	lods   eax,DWORD PTR ds:[esi]
  40cd96:	mov    dl,0x9
  40cd98:	fisttp WORD PTR [eax]
  40cd9a:	pop    es
  40cd9b:	les    esi,FWORD PTR [edx+ebp*8+0x3b458db3]
  40cda2:	into   
  40cda3:	mov    DWORD PTR [esi+0x71],esi
  40cda6:	retf   0x817c
  40cda9:	cli    
  40cdaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdab:	addr16 loopne 0x40cdfc
  40cdae:	xchg   ebp,eax
  40cdaf:	xor    al,0x89
  40cdb1:	mov    WORD PTR [ebx+0x55a81368],?
  40cdb7:	pop    eax
  40cdb8:	fist   DWORD PTR [eax+0x65f96558]
  40cdbe:	aam    0xfc
  40cdc0:	bound  edi,QWORD PTR [ecx]
  40cdc2:	xchg   BYTE PTR [eax],dl
  40cdc4:	fadd   DWORD PTR [edx-0x2450826]
  40cdca:	pop    ss
  40cdcb:	scas   al,BYTE PTR es:[edi]
  40cdcc:	pusha  
  40cdcd:	dec    esp
  40cdce:	std    
  40cdcf:	or     eax,0x27fa3720
  40cdd4:	xchg   bl,ah
  40cdd6:	cli    
  40cdd7:	and    cl,BYTE PTR [esi]
  40cdd9:	mov    dh,dl
  40cddb:	inc    eax
  40cddc:	pop    eax
  40cddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdde:	pop    ebx
  40cddf:	mov    al,0x3f
  40cde1:	and    ebx,DWORD PTR [ecx-0x3f]
  40cde4:	inc    ebx
  40cde5:	clc    
  40cde6:	cmp    dl,BYTE PTR [ecx]
  40cde8:	jb     0x40cdad
  40cdea:	(bad)  
  40cdeb:	imul   DWORD PTR [esp+esi*8+0x24913c9e]
  40cdf2:	pop    ecx
  40cdf3:	jp     0x40ce32
  40cdf5:	jb     0x40ce54
  40cdf7:	xor    al,0xb2
  40cdf9:	and    edi,DWORD PTR [ebx]
  40cdfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdfc:	arpl   WORD PTR [ebp-0x34],dx
  40cdff:	ss dec esi
  40ce01:	cs push es
  40ce03:	mov    al,ds:0x96951c95
  40ce08:	daa    
  40ce09:	out    0x2e,al
  40ce0b:	sub    BYTE PTR [eax+0x65],ch
  40ce0e:	jp     0x40ce42
  40ce10:	inc    ebp
  40ce11:	icebp  
  40ce12:	mov    dl,0xe9
  40ce14:	sbb    al,0x90
  40ce16:	pop    ds
  40ce17:	sbb    eax,0x85c781c6
  40ce1c:	mov    WORD PTR [ecx],fs
  40ce1e:	and    al,ah
  40ce20:	lea    ebp,[edx]
  40ce22:	sbb    esp,ecx
  40ce24:	mul    DWORD PTR [ebx]
  40ce26:	xor    al,0xd4
  40ce28:	inc    ebp
  40ce29:	jg     0x40ce12
  40ce2b:	inc    esi
  40ce2c:	mov    edi,0x6e73019a
  40ce31:	mov    dh,0x1
  40ce33:	dec    esp
  40ce34:	dec    esi
  40ce35:	pop    es
  40ce36:	sub    esp,DWORD PTR [edx]
  40ce38:	aas    
  40ce39:	xchg   esp,eax
  40ce3a:	mov    BYTE PTR [ebx],ah
  40ce3c:	pop    edx
  40ce3d:	and    edx,DWORD PTR [ebp-0x446d6ae2]
  40ce43:	and    ebp,DWORD PTR [esi+0x3bf7c1ba]
  40ce49:	and    al,0x47
  40ce4b:	xor    bl,al
  40ce4d:	xchg   ebx,eax
  40ce4e:	jecxz  0x40cece
  40ce50:	dec    esi
  40ce51:	repz cdq 
  40ce53:	dec    esp
  40ce54:	xcrypt-cbc (bad)
  40ce55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce56:	push   ebp
  40ce57:	cmp    al,ah
  40ce59:	jmp    0xf920eacd
  40ce5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce5f:	add    al,0x9e
  40ce61:	mov    fs,WORD PTR ss:[ebp+0x46]
  40ce65:	inc    ebx
  40ce66:	test   BYTE PTR [eax-0x58],dh
  40ce69:	(bad)
  40ce6d:	(bad)  
  40ce6e:	lods   eax,DWORD PTR ds:[esi]
  40ce6f:	xchg   DWORD PTR [edi+ebx*2+0x2d3a5909],ebp
  40ce76:	sbb    eax,0xcc43a64c
  40ce7c:	and    DWORD PTR [eax-0x7d65af4],ebx
  40ce82:	test   eax,0x4587c035
  40ce87:	mov    dl,0x35
  40ce89:	sbb    DWORD PTR [eax],eax
  40ce8b:	sbb    ah,bh
  40ce8d:	jae    0x40ce6a
  40ce8f:	shl    eax,cl
  40ce91:	cld    
  40ce92:	(bad)  
  40ce93:	adc    ebx,DWORD PTR [eax]
  40ce95:	hlt    
  40ce96:	fst    st(0)
  40ce98:	fist   WORD PTR ds:0x63735f33
  40ce9e:	or     al,0x4b
  40cea0:	pop    ebx
  40cea1:	pop    edi
  40cea2:	and    DWORD PTR [ecx-0x3198ba48],0xffffffa0
  40cea9:	fild   WORD PTR [eax+ecx*4-0xb]
  40cead:	and    al,0x5b
  40ceaf:	fstp   DWORD PTR [eax]
  40ceb1:	shr    DWORD PTR [edx-0xdbed0a5],1
  40ceb7:	or     eax,0x1be2a8f2
  40cebc:	or     al,0xa6
  40cebe:	popa   
  40cebf:	add    ecx,0x683d574a
  40cec5:	jge    0x40ceb2
  40cec7:	xor    DWORD PTR [edi+0x39],esi
  40ceca:	sub    ebp,DWORD PTR [edi+ecx*8]
  40cecd:	pushf  
  40cece:	adc    ecx,ebp
  40ced0:	pop    es
  40ced1:	dec    ecx
  40ced2:	js     0x40ce80
  40ced4:	loope  0x40ce72
  40ced6:	(bad)  
  40ced7:	repnz mov BYTE PTR [bp+0xc2b],dh
  40cedd:	in     al,dx
  40cede:	jmp    0xa56f3a0e
  40cee3:	dec    ebp
  40cee4:	xor    BYTE PTR [esi-0x11],ch
  40cee7:	push   ss
  40cee8:	ror    BYTE PTR [edx+0x13c05a2c],1
  40ceee:	int    0xc7
  40cef0:	inc    ecx
  40cef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cef2:	mov    ecx,0x5e5ef7bf
  40cef7:	push   0x20
  40cef9:	mov    bl,0x4c
  40cefb:	hlt    
  40cefc:	pop    esi
  40cefd:	in     al,0x6c
  40ceff:	sbb    DWORD PTR [esi],esp
  40cf01:	fidiv  DWORD PTR [ecx+0x1f]
  40cf04:	push   edi
  40cf05:	aad    0xcb
  40cf07:	dec    edi
  40cf08:	dec    edx
  40cf09:	mov    ds:0x4c99c171,al
  40cf0e:	xchg   ebx,eax
  40cf0f:	(bad)  
  40cf10:	mov    al,ds:0x2462e58a
  40cf15:	and    cl,BYTE PTR [edx]
  40cf17:	pop    ebx
  40cf18:	les    ebp,FWORD PTR [ebp+0x1f]
  40cf1b:	jecxz  0x40cf37
  40cf1d:	scas   al,BYTE PTR es:[edi]
  40cf1e:	mov    eax,DWORD PTR [ebp-0x4]
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422558
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi-0x6f58432d],esi
  40cfad:	sbb    edi,DWORD PTR [esi+0x72]
  40cfb0:	call   0x1512e7cd
  40cfb5:	sbb    BYTE PTR [eax],bl
  40cfb7:	xchg   ebp,edi
  40cfb9:	mul    DWORD PTR es:[ebx]
  40cfbc:	mov    eax,0x33afca0e
  40cfc1:	cmp    al,0x6e
  40cfc3:	add    eax,0x424dce86
  40cfc8:	js     0x40cff4
  40cfca:	jns    0x40cfea
  40cfcc:	add    BYTE PTR [edi+0x31],dl
  40cfcf:	push   ss
  40cfd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfd1:	mov    edi,0x58989f60
  40cfd6:	xchg   edx,eax
  40cfd7:	scas   eax,DWORD PTR es:[edi]
  40cfd8:	js     0x40d00c
  40cfda:	or     BYTE PTR [edx-0x45],0x4b
  40cfde:	pop    eax
  40cfdf:	ret    
  40cfe0:	sub    BYTE PTR [ecx+0x4afa7e55],0xb7
  40cfe7:	xor    ebp,edi
  40cfe9:	stos   BYTE PTR es:[edi],al
  40cfea:	sub    eax,0x2697259
  40cfef:	mov    cl,0xd7
  40cff1:	sub    ah,dh
  40cff3:	and    edx,DWORD PTR [ecx-0xc781fe]
  40cff9:	adc    edi,DWORD PTR ds:0xb73766c9
  40cfff:	mov    DWORD PTR [edi-0x12d222e6],ebp
  40d005:	mov    ebx,DWORD PTR [edi-0x4ebfc56d]
  40d00b:	xchg   esp,eax
  40d00c:	cmp    BYTE PTR [ebx+0x475182ae],bh
  40d012:	shr    BYTE PTR [edi],0x92
  40d015:	pop    ecx
  40d016:	shl    DWORD PTR [eax+eax*1+0x242e7cf4],1
  40d01d:	push   ss
  40d01e:	jmp    0x40cffc
  40d020:	lods   eax,DWORD PTR ds:[esi]
  40d021:	ins    BYTE PTR es:[edi],dx
  40d022:	pop    ds
  40d023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d024:	int3   
  40d025:	xchg   ebx,eax
  40d026:	sub    dh,BYTE PTR [esi+ebx*8]
  40d029:	fild   DWORD PTR [eax-0x1f]
  40d02c:	stos   DWORD PTR es:[edi],eax
  40d02d:	lods   al,BYTE PTR ds:[esi]
  40d02e:	and    BYTE PTR [eax],0x29
  40d031:	ror    BYTE PTR [ecx-0x2130964f],1
  40d037:	enter  0xea73,0x2c
  40d03b:	repnz aaa 
  40d03d:	out    dx,eax
  40d03e:	test   ebx,edx
  40d040:	aaa    
  40d041:	(bad)  
  40d043:	cmp    dh,BYTE PTR [edi+0x2b]
  40d046:	mov    cl,ah
  40d048:	mov    ds:0xbbdb50c4,eax
  40d04d:	imul   esp,DWORD PTR [ecx],0xbdf7f1fb
  40d053:	cmp    al,0x41
  40d055:	in     eax,0x8b
  40d057:	xchg   edi,eax
  40d058:	pop    esp
  40d059:	outs   dx,BYTE PTR ss:[esi]
  40d05b:	int    0xd2
  40d05d:	inc    edx
  40d05e:	jl     0x40d049
  40d060:	pop    es
  40d061:	ins    BYTE PTR es:[edi],dx
  40d062:	cmp    edx,eax
  40d064:	push   0xffffffcd
  40d066:	in     eax,0x6a
  40d068:	jo     0x40d0af
  40d06a:	(bad)  
  40d06b:	imul   BYTE PTR [edi+0x2d5144cb]
  40d071:	dec    esi
  40d072:	push   edi
  40d073:	adc    DWORD PTR [ebp+0x4e],eax
  40d076:	mov    esi,0x9c927bc2
  40d07b:	gs mov ch,0xd2
  40d07e:	jmp    0xd8fd:0x2f6185f7
  40d085:	add    al,0x2a
  40d087:	sbb    dl,BYTE PTR [esi]
  40d089:	popf   
  40d08a:	dec    ebp
  40d08b:	(bad)
  40d08e:	pop    ebx
  40d08f:	add    bh,BYTE PTR ds:[edx+0x5]
  40d093:	shl    DWORD PTR [ebx+0x1d],cl
  40d096:	adc    esi,eax
  40d098:	addr16 jle 0x40d0ff
  40d09b:	push   esp
  40d09c:	inc    ebx
  40d09d:	and    al,BYTE PTR [edx+eax*4]
  40d0a0:	mov    DWORD PTR [esi+esi*2+0x5249dc1b],ebx
  40d0a7:	pop    ebx
  40d0a8:	push   esp
  40d0a9:	loopne 0x40d115
  40d0ab:	mov    ds:0xcc58d0b4,eax
  40d0b0:	(bad)  [esi-0x4a]
  40d0b3:	jno    0x40d056
  40d0b5:	outs   dx,DWORD PTR ds:[esi]
  40d0b6:	mov    dl,0xfe
  40d0b8:	jmp    0x2255a0a
  40d0bd:	push   es
  40d0be:	push   ss
  40d0bf:	xor    al,0x9b
  40d0c1:	xchg   ebp,edi
  40d0c3:	pusha  
  40d0c4:	daa    
  40d0c5:	mov    ds:0x4da04f15,al
  40d0ca:	mov    BYTE PTR [edx],ch
  40d0cc:	jp     0x40d0de
  40d0ce:	xchg   BYTE PTR [esi-0xe],bh
  40d0d1:	aas    
  40d0d2:	or     BYTE PTR [ebx+0x41],0xdf
  40d0d6:	xchg   BYTE PTR [ebx],bl
  40d0d8:	ss cwde 
  40d0da:	inc    ebx
  40d0db:	add    ebx,0x12
  40d0de:	and    ah,ch
  40d0e0:	push   edi
  40d0e1:	dec    ecx
  40d0e2:	xchg   esi,eax
  40d0e3:	mov    ebx,edx
  40d0e5:	ss adc ecx,ebx
  40d0e8:	lods   eax,DWORD PTR ds:[esi]
  40d0e9:	scas   al,BYTE PTR es:[edi]
  40d0ea:	sub    eax,0xa65696fa
  40d0ef:	mov    bh,0xce
  40d0f1:	std    
  40d0f2:	mov    WORD PTR [edx-0x4fde207f],gs
  40d0f8:	(bad)  
  40d0f9:	mov    esi,0x6ef8ea00
  40d0fe:	ds mov dl,0x5d
  40d101:	mov    ?,WORD PTR [ebp-0x3bb786b]
  40d107:	int3   
  40d108:	adc    cl,BYTE PTR cs:[ebx+0x64eb39dc]
  40d10f:	mov    ecx,0xfbc52fe5
  40d114:	cmp    DWORD PTR [bp+di],0x26
  40d118:	adc    dl,0x7b
  40d11b:	mov    edi,0x2066cea2
  40d120:	mov    cl,0xf9
  40d122:	xchg   ebx,eax
  40d123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d124:	bound  ebp,QWORD PTR ds:0x4d3428b6
  40d12a:	(bad)  
  40d12c:	push   ebx
  40d12d:	fsubr  DWORD PTR [ebp+0x0]
  40d130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d132:	mov    bh,BYTE PTR [eax+0x5e]
  40d135:	inc    ebx
  40d136:	into   
  40d137:	lahf   
  40d138:	ss xor ebx,ecx
  40d13b:	or     al,BYTE PTR [eiz*1-0x710ae549]
  40d142:	mov    dl,0xd3
  40d144:	jge    0x40d149
  40d146:	push   ebp
  40d147:	mov    edx,fs
  40d149:	cmc    
  40d14a:	mov    al,0xbd
  40d14c:	xchg   edx,eax
  40d14d:	je     0x40d146
  40d14f:	out    0x8e,al
  40d151:	sbb    BYTE PTR [ecx-0x6e],ah
  40d154:	call   0xc20e0a4a
  40d159:	lods   al,BYTE PTR ds:[esi]
  40d15a:	stc    
  40d15b:	sbb    BYTE PTR ds:0x2d4bf106,0xe2
  40d162:	add    al,0x1c
  40d164:	stc    
  40d165:	sub    BYTE PTR [ebp+0x13],dh
  40d168:	sahf   
  40d169:	sub    al,0xae
  40d16b:	xlat   BYTE PTR ds:[ebx]
  40d16c:	ins    DWORD PTR es:[edi],dx
  40d16d:	pop    edx
  40d16e:	dec    esi
  40d16f:	mov    cl,0x10
  40d171:	xchg   esi,eax
  40d172:	call   0xf6716288
  40d177:	rcl    DWORD PTR [ecx+ecx*4+0x45e343c0],1
  40d17e:	mov    ecx,0xd0ca4b8c
  40d183:	sub    al,0x40
  40d185:	das    
  40d186:	sbb    esi,DWORD PTR [esi-0x39]
  40d189:	cdq    
  40d18a:	lea    eax,[ebx+0x3dd6fb9b]
  40d190:	jae    0x40d1ee
  40d192:	xor    al,0x5
  40d194:	mov    ah,0xee
  40d196:	xchg   esi,eax
  40d197:	xchg   edx,eax
  40d198:	inc    eax
  40d199:	push   ecx
  40d19a:	retf   0x8213
  40d19d:	and    BYTE PTR [edi-0x157d191d],al
  40d1a3:	mov    al,ds:0x4e723770
  40d1a8:	lds    edx,FWORD PTR [ebx]
  40d1aa:	sbb    cl,BYTE PTR [esi]
  40d1ac:	imul   bh
  40d1ae:	fsub   st,st(6)
  40d1b0:	mov    gs,edi
  40d1b2:	add    al,0x84
  40d1b4:	push   ebp
  40d1b5:	mov    esi,DWORD PTR [ecx]
  40d1b7:	icebp  
  40d1b8:	xchg   BYTE PTR [ebp+edx*4-0x4e3bfbe9],al
  40d1bf:	inc    edi
  40d1c0:	(bad)  
  40d1c1:	and    bl,ah
  40d1c3:	mov    DWORD PTR [ebx+0x72],edi
  40d1c6:	pop    eax
  40d1c7:	jo     0x40d222
  40d1c9:	xor    al,0x58
  40d1cb:	push   ds
  40d1cc:	push   ebx
  40d1cd:	mov    edi,0xfe09c067
  40d1d2:	sbb    BYTE PTR [esi],bl
  40d1d4:	mov    ebx,0x4033fd87
  40d1d9:	push   0x635cc36c
  40d1de:	outs   dx,DWORD PTR ds:[esi]
  40d1df:	xor    al,0x4d
  40d1e1:	in     eax,dx
  40d1e2:	sbb    dl,ah
  40d1e4:	sub    esi,DWORD PTR [ebp-0x5affd980]
  40d1ea:	xor    ebx,DWORD PTR [edi]
  40d1ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ed:	jnp    0x40d1cd
  40d1ef:	retf   0xedc
  40d1f2:	push   ebx
  40d1f3:	or     bl,al
  40d1f5:	xchg   esi,eax
  40d1f6:	aaa    
  40d1f7:	xchg   edx,eax
  40d1f8:	or     al,0x99
  40d1fa:	out    dx,al
  40d1fb:	or     ebp,DWORD PTR [ebx+eiz*4-0x45e713ad]
  40d202:	dec    ebp
  40d203:	xchg   esp,eax
  40d204:	sbb    eax,edx
  40d206:	in     eax,dx
  40d207:	cmp    DWORD PTR [ebp+0x8],ecx
  40d20a:	add    ch,bl
  40d20c:	stc    
  40d20d:	test   eax,0x34801977
  40d212:	rcl    ch,1
  40d214:	xor    ebp,DWORD PTR [esi]
  40d216:	or     al,0x59
  40d218:	sub    al,0xd7
  40d21a:	or     DWORD PTR [ebx+0x3fa46b19],0x82057bc9
  40d224:	mov    BYTE PTR [ebx],ah
  40d226:	dec    edi
  40d227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d228:	into   
  40d229:	enter  0x7214,0xaa
  40d22d:	icebp  
  40d22e:	mov    bl,0x5b
  40d230:	xlat   BYTE PTR ds:[ebx]
  40d231:	nop
  40d232:	out    dx,eax
  40d233:	inc    edx
  40d234:	inc    esi
  40d235:	out    dx,al
  40d236:	mov    bl,0x1b
  40d238:	rcr    DWORD PTR [edi+0x15],cl
  40d23b:	pop    ds
  40d23c:	data16 or al,0x47
  40d23f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d240:	adc    al,0x4d
  40d242:	inc    ecx
  40d243:	lock cmp al,0xfa
  40d246:	pop    ecx
  40d247:	push   ebx
  40d248:	aaa    
  40d249:	stc    
  40d24a:	mov    DWORD PTR [ebx+0x6cfeb048],esp
  40d250:	retf   0x6816
  40d253:	push   edx
  40d254:	fadd   st(6),st
  40d256:	mov    al,ds:0x82c74187
  40d25b:	sub    dh,dh
  40d25d:	adc    eax,0x8b0e0488
  40d262:	inc    ebp
  40d263:	in     al,dx
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	addr16 int 0xe9
  40d2f5:	stos   BYTE PTR es:[edi],al
  40d2f6:	sub    eax,0xd21818e2
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [eax+0x20294d0a],cl
  40d303:	sbb    al,0xfc
  40d305:	mov    DWORD PTR [edi],0xf750b3ae
  40d30b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d30d:	ins    BYTE PTR es:[edi],dx
  40d30e:	test   DWORD PTR [esi+0x6323e64a],eax
  40d314:	stos   DWORD PTR es:[edi],eax
  40d315:	add    cl,BYTE PTR [ebx]
  40d317:	pop    esi
  40d318:	repz arpl WORD PTR [edi-0x71],sp
  40d31c:	pop    edi
  40d31d:	pop    ecx
  40d31e:	jmp    0x40d2c5
  40d320:	adc    BYTE PTR [edi],dl
  40d322:	shr    esp,1
  40d324:	lock inc DWORD PTR [edx]
  40d327:	push   ebx
  40d328:	sbb    eax,0x706a77f1
  40d32d:	pop    esi
  40d32e:	js     0x40d2ea
  40d330:	arpl   WORD PTR [esp+eax*1+0x32],cx
  40d334:	push   esp
  40d335:	stos   BYTE PTR es:[edi],al
  40d336:	fistp  WORD PTR [ecx+0x4e]
  40d339:	in     al,0xd0
  40d33b:	minps  xmm3,XMMWORD PTR [edi]
  40d33e:	jae    0x40d2ea
  40d340:	aam    0x80
  40d342:	and    al,0x3b
  40d344:	pop    es
  40d345:	jg     0x40d2d1
  40d347:	mov    ch,0xde
  40d349:	pop    ds
  40d34a:	push   edi
  40d34b:	xor    BYTE PTR [esi+0x3c],0xa5
  40d34f:	call   0x8e8c1a09
  40d354:	or     ecx,DWORD PTR [edi-0x6d33eab4]
  40d35a:	in     al,0xdb
  40d35c:	push   eax
  40d35d:	xor    dh,dh
  40d35f:	jp     0x40d36e
  40d361:	jmp    0x40d37e
  40d363:	outs   dx,BYTE PTR ds:[esi]
  40d364:	je     0x40d367
  40d366:	xchg   DWORD PTR [ecx],edi
  40d368:	xchg   esi,eax
  40d369:	add    DWORD PTR [ebp-0x4d68c88],ecx
  40d36f:	mov    ebp,0x49ded1d2
  40d374:	push   edi
  40d375:	enter  0x913,0xe8
  40d379:	pop    esp
  40d37a:	cld    
  40d37b:	mov    ah,0x29
  40d37d:	push   es
  40d37e:	and    eax,0x81ce46ce
  40d383:	popf   
  40d384:	sbb    dh,al
  40d386:	or     bh,BYTE PTR [ebx-0x8d3142]
  40d38c:	call   FWORD PTR [ecx+0x607887d9]
  40d392:	xchg   edx,eax
  40d393:	mov    edi,0xa6e413c4
  40d398:	push   eax
  40d399:	in     eax,0x50
  40d39b:	sbb    ebp,DWORD PTR [esi-0x555cc44c]
  40d3a1:	mov    edi,0x3a4495aa
  40d3a6:	lahf   
  40d3a7:	xchg   esp,eax
  40d3a8:	jmp    0xe554972d
  40d3ad:	es int3 
  40d3af:	enter  0x821e,0xc0
  40d3b3:	and    bl,BYTE PTR [ebx+0x4b]
  40d3b6:	push   ss
  40d3b7:	mul    DWORD PTR [eax+0x18]
  40d3ba:	or     al,0x7
  40d3bc:	aad    0x82
  40d3be:	std    
  40d3bf:	jns    0x40d413
  40d3c1:	ins    BYTE PTR es:[edi],dx
  40d3c2:	pushf  
  40d3c3:	sub    al,0x60
  40d3c5:	push   0x59d4070d
  40d3ca:	add    al,0xb7
  40d3cc:	push   ds
  40d3cd:	(bad)  
  40d3ce:	sub    bh,BYTE PTR [ebx-0x4590a0af]
  40d3d4:	aam    0x86
  40d3d6:	test   BYTE PTR [ecx+0x68],dl
  40d3d9:	add    DWORD PTR [eax+0x2f270d10],edx
  40d3df:	lea    ecx,[ecx]
  40d3e1:	mov    al,bl
  40d3e3:	pop    eax
  40d3e4:	out    dx,al
  40d3e5:	mov    eax,ds:0x377aa2f4
  40d3ea:	pop    esi
  40d3eb:	lahf   
  40d3ec:	stc    
  40d3ed:	xor    ch,BYTE PTR [esi-0x2d]
  40d3f0:	xchg   esp,eax
  40d3f1:	jo     0x40d3cf
  40d3f3:	mov    edi,0x134f0f33
  40d3f8:	sbb    ebp,DWORD PTR [ecx-0x681fad08]
  40d3fe:	mov    dh,BYTE PTR [esi+eiz*1]
  40d401:	bound  ecx,QWORD PTR [edi+edi*8+0x6ec63f0a]
  40d408:	jae    0x40d3a1
  40d40a:	ja     0x40d462
  40d40c:	xor    eax,DWORD PTR [edi-0x3e]
  40d40f:	jbe    0x40d471
  40d411:	pop    ds
  40d412:	aad    0xd5
  40d414:	out    dx,al
  40d415:	pop    esi
  40d416:	ins    BYTE PTR es:[edi],dx
  40d417:	mov    bl,BYTE PTR [eax]
  40d419:	add    cl,BYTE PTR [esi+0x78]
  40d41c:	popa   
  40d41d:	sub    bl,BYTE PTR [esi]
  40d41f:	push   ss
  40d420:	ins    DWORD PTR es:[edi],dx
  40d421:	mov    edx,0xf389d9ac
  40d426:	add    eax,0x7fac6a8e
  40d42b:	add    eax,ebx
  40d42d:	push   ds
  40d42e:	and    eax,0xa1e33701
  40d433:	lods   al,BYTE PTR ds:[esi]
  40d434:	in     al,0xb9
  40d436:	rcl    dh,cl
  40d438:	call   0x8af9f850
  40d43d:	mov    gs:0xd9077c82,al
  40d443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d444:	or     al,BYTE PTR [edi+0x350ac697]
  40d44a:	sub    BYTE PTR [eax],0x62
  40d44d:	push   ebp
  40d44e:	sbb    bl,bh
  40d450:	shr    ch,1
  40d452:	gs pop ecx
  40d454:	paddsw mm1,QWORD PTR [eax]
  40d457:	mov    al,ds:0x4e18b78
  40d45c:	sub    DWORD PTR [ebx+ecx*1-0x4c],0x7ce3b23b
  40d464:	mov    ebx,0x9bcb15b9
  40d469:	mov    ds:0x6a68a24c,eax
  40d46e:	rol    DWORD PTR [edx],cl
  40d470:	cs push ebp
  40d472:	xchg   esp,eax
  40d473:	lds    ecx,FWORD PTR [ebp-0x1211a141]
  40d479:	gs mov ch,0xc9
  40d47c:	cmp    BYTE PTR [edi+0x6a896d45],dl
  40d482:	jmp    0xded:0xb5cff821
  40d489:	mov    eax,ds:0xda2d97f
  40d48e:	sti    
  40d48f:	xor    eax,0xbe9d3d59
  40d494:	push   edi
  40d495:	adc    BYTE PTR ds:0xf7f7333f,ah
  40d49b:	add    BYTE PTR [esp+ebx*8],cl
  40d49e:	or     cl,BYTE PTR [edi]
  40d4a0:	or     DWORD PTR [ebx+0x16],ebx
  40d4a3:	jne    0x40d51d
  40d4a5:	push   ebx
  40d4a6:	pop    eax
  40d4a7:	mov    cl,0xf7
  40d4a9:	daa    
  40d4aa:	popf   
  40d4ab:	stos   BYTE PTR es:[edi],al
  40d4ac:	pushf  
  40d4ad:	add    eax,0x431a88fa
  40d4b2:	mov    cl,0x76
  40d4b4:	iret   
  40d4b5:	arpl   sp,si
  40d4b7:	enter  0x92ea,0xd9
  40d4bb:	sub    ch,0x91
  40d4be:	je     0x40d511
  40d4c0:	and    eax,DWORD PTR [edi-0x1eca07aa]
  40d4c6:	push   ss
  40d4c7:	bound  ebx,QWORD PTR [ebp+0x32f0d46f]
  40d4cd:	jmp    0x40d529
  40d4cf:	clc    
  40d4d0:	mul    BYTE PTR [esi-0x778b8863]
  40d4d6:	and    dl,BYTE PTR [ecx-0x59d18e89]
  40d4dc:	push   eax
  40d4dd:	mov    bh,0x6d
  40d4df:	inc    ecx
  40d4e0:	add    eax,0x77ad58b0
  40d4e5:	out    dx,eax
  40d4e6:	shr    DWORD PTR [ebp-0x5c5f448e],cl
  40d4ec:	enter  0x9ad0,0x8f
  40d4f0:	and    DWORD PTR [edi-0x74328da3],edx
  40d4f6:	int    0x13
  40d4f8:	push   eax
  40d4f9:	dec    eax
  40d4fa:	lea    ebx,[edx+edi*4-0x2a]
  40d4fe:	cld    
  40d4ff:	(bad)  
  40d500:	scas   eax,DWORD PTR es:[edi]
  40d501:	jno    0x40d509
  40d503:	ins    DWORD PTR es:[edi],dx
  40d504:	push   esi
  40d505:	loopne 0x40d53f
  40d507:	imul   edi,DWORD PTR [eax],0xaad210a7
  40d50d:	add    esp,esp
  40d50f:	xor    al,0xd8
  40d511:	(bad)  
  40d512:	aad    0xf1
  40d514:	out    dx,eax
  40d515:	xor    al,0x84
  40d517:	fistp  QWORD PTR [ebp+0xa]
  40d51a:	scas   al,BYTE PTR es:[edi]
  40d51b:	xor    cl,cl
  40d51d:	popf   
  40d51e:	xchg   ecx,eax
  40d51f:	out    dx,eax
  40d520:	(bad)  
  40d521:	das    
  40d522:	dec    eax
  40d523:	out    dx,eax
  40d524:	int3   
  40d525:	bound  ebp,QWORD PTR [ebx]
  40d527:	pushf  
  40d528:	add    DWORD PTR [ecx],ebx
  40d52a:	cmp    ecx,eax
  40d52c:	push   edx
  40d52d:	call   0x81e3:0x2971ac02
  40d534:	fcomp  QWORD PTR [ebx+0x5e]
  40d537:	(bad)  
  40d538:	pop    ss
  40d539:	sbb    DWORD PTR [eax],edx
  40d53b:	mov    dl,0xbe
  40d53d:	and    dh,BYTE PTR [edi+eiz*2]
  40d540:	daa    
  40d541:	mov    dh,0x6a
  40d543:	xor    BYTE PTR ds:0xc58debca,cl
  40d549:	rcr    eax,0x4e
  40d54c:	sub    esp,ebx
  40d54e:	inc    ecx
  40d54f:	cmp    ecx,esp
  40d551:	mov    WORD PTR [ebx+0x27],?
  40d554:	jo     0x40d549
  40d556:	sti    
  40d557:	aaa    
  40d558:	retf   0x7880
  40d55b:	adc    DWORD PTR [ebx],esp
  40d55d:	popf   
  40d55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d560:	inc    esi
  40d561:	jb     0x40d55c
  40d563:	repz fst QWORD PTR [esp+eiz*8-0x1]
  40d568:	std    
  40d569:	out    0x1f,eax
  40d56b:	jecxz  0x40d58d
  40d56d:	nop
  40d56e:	fmul   QWORD PTR [ebx]
  40d570:	xor    BYTE PTR [ebx+0x48],bh
  40d573:	push   eax
  40d574:	les    edi,FWORD PTR [esi+ebx*2]
  40d577:	inc    esi
  40d578:	or     edx,DWORD PTR [ecx-0x7c7fa86d]
  40d57e:	int3   
  40d57f:	fsub   QWORD PTR [ebx]
  40d581:	test   BYTE PTR [edi],bh
  40d583:	pop    edx
  40d584:	add    eax,0x57c13b0d
  40d589:	cmp    al,0xb7
  40d58b:	pop    esi
  40d58c:	add    BYTE PTR [edi],dh
  40d58e:	jecxz  0x40d530
  40d590:	lock inc esi
  40d592:	mov    es,WORD PTR [edx]
  40d594:	test   DWORD PTR [ebx-0x6a],0xad720bf
  40d59b:	jo     0x40d544
  40d59d:	or     eax,0x9efdab99
  40d5a2:	mov    bl,BYTE PTR [esi-0x1fb27408]
  40d5a8:	xor    edx,edx
  40d5aa:	jmp    0x40d86e
  40d5af:	pop    edx
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	xchg   edi,eax
  40d5bc:	and    bh,BYTE PTR [ecx]
  40d5be:	push   0xffffffe7
  40d5c0:	fcomp  QWORD PTR [eax]
  40d5c2:	sbb    dl,dl
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    dh,al
  40d5c8:	xor    ecx,DWORD PTR [esi-0x3ebcda]
  40d5ce:	mov    dl,0x25
  40d5d0:	adc    edx,DWORD PTR ds:0xf5aaf7e4
  40d5d6:	cmc    
  40d5d7:	inc    edx
  40d5d8:	adc    al,0x7d
  40d5da:	lods   al,BYTE PTR ds:[esi]
  40d5db:	icebp  
  40d5dc:	test   al,0x1e
  40d5de:	out    dx,al
  40d5df:	sub    al,0x2f
  40d5e1:	mov    edx,0xde49fd9
  40d5e6:	ins    BYTE PTR es:[edi],dx
  40d5e7:	dec    edx
  40d5e8:	cmc    
  40d5e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5ea:	sbb    BYTE PTR [edi-0x5ab90eca],0xb7
  40d5f1:	je     0x40d5fe
  40d5f3:	retf   
  40d5f4:	es or  al,bh
  40d5f7:	push   cs
  40d5f8:	sbb    al,0x3
  40d5fa:	adc    ch,BYTE PTR [ecx-0x21e0038f]
  40d600:	xlat   BYTE PTR ds:[ebx]
  40d601:	shl    DWORD PTR [edx+esi*8-0x7c7fa018],cl
  40d608:	in     eax,dx
  40d609:	ror    BYTE PTR [esi],cl
  40d60b:	cmp    BYTE PTR [ecx+edi*2-0x2b],al
  40d60f:	das    
  40d610:	shl    edi,1
  40d612:	pop    eax
  40d613:	pop    esi
  40d614:	loop   0x40d67d
  40d616:	or     cl,al
  40d618:	in     al,0xc
  40d61a:	xor    edx,ebp
  40d61c:	cmp    DWORD PTR [ebp+0x67],0x96908bb1
  40d623:	pop    es
  40d624:	mov    ebp,DWORD PTR [ebx]
  40d626:	mov    DWORD PTR [esi+0x36],0xee5fd427
  40d62d:	xchg   edx,eax
  40d62e:	jno    0x40d673
  40d630:	cdq    
  40d631:	shl    BYTE PTR [ebp-0x3eb9f5eb],1
  40d637:	jbe    0x40d623
  40d639:	ret    
  40d63a:	popf   
  40d63b:	lock test eax,0x447b0d40
  40d641:	jg     0x40d66b
  40d643:	mov    dh,0x35
  40d645:	mov    dh,0x32
  40d647:	(bad)  
  40d648:	out    0x4,eax
  40d64a:	jle    0x40d618
  40d64c:	inc    ebp
  40d64d:	in     eax,0x70
  40d64f:	sub    eax,0x3cbfe855
  40d654:	xor    WORD PTR [esi],ax
  40d657:	nop
  40d658:	popa   
  40d659:	sbb    eax,0x8733fe99
  40d65e:	inc    ebp
  40d65f:	and    DWORD PTR ds:0x80d0644c,edi
  40d665:	inc    esp
  40d666:	arpl   WORD PTR [di-0x37de],bp
  40d66b:	adc    al,0xc
  40d66d:	outs   dx,BYTE PTR ds:[esi]
  40d66e:	jle    0x40d6a9
  40d670:	push   ds
  40d671:	loope  0x40d688
  40d673:	pop    es
  40d674:	jecxz  0x40d6d2
  40d676:	cmc    
  40d677:	mov    ds:0x213dd707,al
  40d67c:	test   eax,0xc47bf22a
  40d681:	and    edx,DWORD PTR [ebp+eiz*2-0x71]
  40d685:	dec    esi
  40d686:	fbld   TBYTE PTR [ebp-0x4c]
  40d689:	jo     0x40d669
  40d68b:	int3   
  40d68c:	push   cs
  40d68d:	test   bl,ah
  40d68f:	aas    
  40d690:	dec    eax
  40d691:	xor    al,0x14
  40d693:	sti    
  40d694:	pop    ebx
  40d695:	lea    esp,[edx+edi*4+0x4b]
  40d699:	adc    ebp,DWORD PTR [edi-0x344123e3]
  40d69f:	outs   dx,DWORD PTR ds:[esi]
  40d6a0:	xchg   ebp,eax
  40d6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a2:	dec    ebp
  40d6a3:	xor    eax,0x99bfccac
  40d6a8:	jmp    0x8e01a6c7
  40d6ad:	push   esp
  40d6ae:	loopne 0x40d72e
  40d6b0:	xchg   DWORD PTR [ecx],ebx
  40d6b2:	popf   
  40d6b3:	sub    DWORD PTR [ebp-0x390cce63],edi
  40d6b9:	jnp    0x40d71f
  40d6bb:	inc    bp
  40d6bd:	outs   dx,BYTE PTR ss:[esi]
  40d6bf:	fst    DWORD PTR [eax-0x186100bb]
  40d6c5:	sti    
  40d6c6:	xor    ah,bh
  40d6c8:	jmp    0xf230c480
  40d6cd:	aam    0x4b
  40d6cf:	xacquire xchg DWORD PTR [ecx-0x74],esi
  40d6d3:	sti    
  40d6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d5:	(bad)  
  40d6d6:	(bad)  
  40d6d7:	sub    al,0xea
  40d6d9:	test   eax,0xdea65dff
  40d6de:	fwait
  40d6df:	mov    bh,0x29
  40d6e1:	sub    esp,ebx
  40d6e3:	mov    edx,ebx
  40d6e5:	das    
  40d6e6:	jg     0x40d6bd
  40d6e8:	(bad)  
  40d6e9:	mov    edx,0xd1c6fc97
  40d6ee:	pop    es
  40d6ef:	mov    esi,0xf55fec4f
  40d6f4:	jg     0x40d6a4
  40d6f6:	mov    ebx,0x64c98069
  40d6fb:	adc    eax,0xadf18277
  40d700:	mov    es:0x2d40b457,al
  40d706:	jle    0x40d720
  40d708:	popa   
  40d709:	sbb    al,0xfe
  40d70b:	or     bl,al
  40d70d:	sti    
  40d70e:	inc    esi
  40d70f:	push   0x68a7770b
  40d714:	inc    esi
  40d715:	mov    eax,ds:0xf5f8e8bb
  40d71a:	push   edx
  40d71b:	inc    ebx
  40d71c:	imul   eax,DWORD PTR [eax-0x78],0xffffffda
  40d720:	sub    BYTE PTR [esi+edi*2],al
  40d723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d724:	sub    eax,0xd636efa3
  40d729:	arpl   WORD PTR [esi],bp
  40d72b:	mov    cl,0xae
  40d72d:	(bad)  
  40d72e:	fdivr  DWORD PTR [edx+0x5df33d21]
  40d734:	call   0x53cfbdde
  40d739:	fwait
  40d73a:	lock sar eax,1
  40d73d:	mov    ebp,0x71661093
  40d742:	(bad)  
  40d743:	cmp    dh,BYTE PTR [esi]
  40d745:	sbb    eax,0xa1192d77
  40d74a:	mov    edx,0x71b1b2ff
  40d74f:	das    
  40d750:	fist   DWORD PTR [edx]
  40d752:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d754:	enter  0x39fe,0x9b
  40d758:	ja     0x40d79c
  40d75a:	and    edx,DWORD PTR [edx+edx*1]
  40d75d:	dec    BYTE PTR [edi]
  40d75f:	das    
  40d760:	and    al,0x75
  40d762:	lods   al,BYTE PTR ds:[esi]
  40d763:	or     eax,0x26c8f5f2
  40d768:	je     0x40d796
  40d76a:	add    al,0xc5
  40d76c:	arpl   WORD PTR [ecx+0x35],bp
  40d76f:	outs   dx,DWORD PTR ds:[esi]
  40d770:	mov    DWORD PTR [ebx],0xada29ea5
  40d776:	std    
  40d777:	jb     0x40d77b
  40d779:	and    al,0x8e
  40d77b:	out    dx,eax
  40d77c:	and    al,BYTE PTR [ecx]
  40d77e:	or     BYTE PTR [edi+0x6fc4fdd6],bh
  40d784:	lock ss push edx
  40d787:	lods   eax,DWORD PTR ds:[esi]
  40d788:	push   es
  40d789:	add    edi,edi
  40d78b:	fstp   DWORD PTR [edx-0x7a89d048]
  40d791:	loope  0x40d7c6
  40d793:	cmp    ebp,ebx
  40d795:	xor    ebp,0xa979978
  40d79b:	pop    ebp
  40d79c:	retf   
  40d79d:	jecxz  0x40d753
  40d79f:	mov    bl,0xec
  40d7a1:	sub    ebx,edx
  40d7a3:	in     al,dx
  40d7a4:	push   ebp
  40d7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7a6:	push   ebx
  40d7a7:	xchg   esi,eax
  40d7a8:	pop    ds
  40d7a9:	push   edx
  40d7aa:	push   cs
  40d7ab:	popa   
  40d7ac:	rcl    BYTE PTR [ecx-0x613fd886],1
  40d7b2:	adc    al,0xd3
  40d7b4:	pop    esp
  40d7b5:	out    0x7c,eax
  40d7b7:	popf   
  40d7b8:	push   0xe396402e
  40d7bd:	cmc    
  40d7be:	ins    DWORD PTR es:[edi],dx
  40d7bf:	mov    eax,ds:0x5ccdb459
  40d7c4:	je     0x40d792
  40d7c6:	sbb    al,0x6c
  40d7c8:	cmp    bl,bh
  40d7ca:	sub    DWORD PTR [di],esi
  40d7cd:	or     al,0x77
  40d7cf:	out    dx,eax
  40d7d0:	call   0x3c8a9bc8
  40d7d5:	aaa    
  40d7d6:	ins    BYTE PTR es:[edi],dx
  40d7d7:	ret    
  40d7d8:	pushf  
  40d7d9:	(bad)  [ebx-0x3d895aa1]
  40d7df:	(bad)  
  40d7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7e1:	sbb    DWORD PTR [eax-0x64],0xde4cf4c4
  40d7e8:	xor    BYTE PTR [eax],dl
  40d7ea:	inc    edi
  40d7eb:	stos   BYTE PTR es:[edi],al
  40d7ec:	add    BYTE PTR [eax-0x59f71169],al
  40d7f2:	lods   al,BYTE PTR ds:[esi]
  40d7f3:	mov    esi,0x84589944
  40d7f8:	jbe    0x40d7d6
  40d7fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7fb:	cmp    BYTE PTR [edi-0x5b39f715],0xbf
  40d802:	push   es
  40d803:	mov    ds:0xa0aefa93,al
  40d808:	jp     0x40d7f7
  40d80a:	mov    bh,0xfa
  40d80c:	icebp  
  40d80d:	imul   eax,DWORD PTR [edx],0xffffffff
  40d810:	inc    edi
  40d811:	rcr    edx,0x11
  40d814:	sar    DWORD PTR [edx+ebp*2-0x643785e3],1
  40d81b:	mov    cl,0xbc
  40d81d:	stos   DWORD PTR es:[edi],eax
  40d81e:	push   esi
  40d81f:	xchg   dh,al
  40d821:	out    dx,eax
  40d822:	(bad)  ds:0x6692ecf
  40d828:	cmp    esp,DWORD PTR [ebx]
  40d82a:	sar    DWORD PTR [edi-0x1f],0x42
  40d82e:	imul   DWORD PTR gs:[edx]
  40d831:	cld    
  40d832:	jbe    0x40d7e5
  40d834:	pop    eax
  40d835:	jae    0x40d7b7
  40d837:	pop    edx
  40d838:	adc    ebp,DWORD PTR [ecx+0x2184136a]
  40d83e:	out    dx,al
  40d83f:	and    BYTE PTR ds:0xd60909d4,dl
  40d845:	into   
  40d846:	outs   dx,DWORD PTR ds:[esi]
  40d847:	(bad)  
  40d848:	mov    esp,0x78665f7f
  40d84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d84e:	jo     0x40d81c
  40d850:	jmp    0x40d85b
  40d852:	cmc    
  40d853:	call   edx
  40d855:	rcr    ebp,0x5b
  40d858:	ins    DWORD PTR es:[edi],dx
  40d859:	sbb    al,0xc7
  40d85b:	sbb    esp,DWORD PTR [ecx+ebx*2+0x2]
  40d85f:	rol    DWORD PTR [ebp+0xf],cl
  40d862:	fld    TBYTE PTR [edx+0x4c]
  40d865:	xlat   BYTE PTR ds:[ebx]
  40d866:	stos   DWORD PTR es:[edi],eax
  40d867:	retf   
  40d868:	imul   eax,DWORD PTR [edx-0x47b08402],0x4db5bf
  40d872:	add    bh,dh
  40d874:	icebp  
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xe500ebbc
  40d894:	stos   BYTE PTR es:[edi],al
  40d895:	mov    al,ds:0xd21818d8
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [eax],bh
  40d89e:	mov    esp,0x908b293d
  40d8a3:	test   BYTE PTR [eax+0x26931a5c],ah
  40d8a9:	push   ecx
  40d8aa:	push   ds
  40d8ab:	add    eax,0xc43ea173
  40d8b0:	mov    ebx,0x4cd1cbfd
  40d8b5:	stos   BYTE PTR es:[edi],al
  40d8b6:	pop    ebx
  40d8b7:	pop    eax
  40d8b8:	inc    esp
  40d8b9:	addr16 mov dh,0xcd
  40d8bc:	lods   al,BYTE PTR ds:[esi]
  40d8bd:	add    esi,DWORD PTR [edi]
  40d8bf:	cmp    al,BYTE PTR ds:0xc07a5af4
  40d8c5:	cs jb  0x40d930
  40d8c8:	imul   ebx,DWORD PTR [edi-0x72c50e6a],0xfffffff8
  40d8cf:	fnstenv [ebp-0x5a16f65f]
  40d8d5:	loop   0x40d949
  40d8d7:	inc    BYTE PTR ss:[ebp-0x684d2639]
  40d8de:	inc    esp
  40d8df:	jg     0x40d8c1
  40d8e1:	in     al,dx
  40d8e2:	pushf  
  40d8e3:	outs   dx,DWORD PTR ds:[esi]
  40d8e4:	pusha  
  40d8e5:	and    eax,0x7e5582b2
  40d8ea:	mov    edx,edx
  40d8ec:	mov    esi,0x248ea020
  40d8f1:	and    dl,BYTE PTR [edx-0x2c7ff99a]
  40d8f7:	jl     0x40d8b6
  40d8f9:	sbb    dl,al
  40d8fb:	or     al,0x0
  40d8fd:	cli    
  40d8fe:	in     al,0xcb
  40d900:	sub    edx,DWORD PTR [esi+0x2c2df7de]
  40d906:	or     BYTE PTR [ecx+0x5b20dc03],ah
  40d90c:	sub    dh,al
  40d90e:	stc    
  40d90f:	jle    0x40d89c
  40d911:	push   ds
  40d912:	inc    esp
  40d913:	mov    al,0x2a
  40d915:	or     al,0x8d
  40d917:	jmp    0x9dc5:0xb9d60fcb
  40d91e:	jbe    0x40d8d0
  40d920:	dec    ecx
  40d921:	jne    0x40d994
  40d923:	xor    eax,0x35d39c45
  40d928:	xchg   ecx,eax
  40d929:	add    al,0xed
  40d92b:	(bad)  
  40d92c:	sub    eax,0x2995f446
  40d931:	bound  esi,QWORD PTR [ebp-0x17]
  40d934:	jp     0x40d9a6
  40d936:	add    al,BYTE PTR [ebp-0x6e]
  40d939:	je     0x40d947
  40d93b:	xchg   DWORD PTR [esi-0x75efd0bc],ecx
  40d941:	mov    edi,DWORD PTR [ebx+0x298fd3bf]
  40d947:	inc    edi
  40d948:	je     0x40d8e2
  40d94a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d94b:	add    eax,ebx
  40d94d:	mov    ah,0x56
  40d94f:	adc    ebx,DWORD PTR [edi]
  40d951:	sbb    DWORD PTR fs:[eax],ecx
  40d954:	ds pop es
  40d956:	out    0xdd,al
  40d958:	lods   al,BYTE PTR ds:[esi]
  40d959:	push   ecx
  40d95a:	sub    DWORD PTR ss:[ebp+0x1b],0xffffffb0
  40d95f:	jmp    0x40d939
  40d961:	pop    ecx
  40d962:	mov    ecx,0xdc9d540f
  40d967:	pop    es
  40d968:	dec    ecx
  40d969:	(bad)  
  40d96a:	jg     0x40d946
  40d96c:	mov    edx,0x9042adb3
  40d971:	fmul   DWORD PTR [edx-0xb]
  40d974:	sbb    al,0xd0
  40d976:	mov    ebx,0xaf18ad13
  40d97b:	popa   
  40d97c:	fst    DWORD PTR [ebx+0x43]
  40d97f:	and    DWORD PTR [edi+0x66],edi
  40d982:	push   ebp
  40d983:	jmp    0xa2388bac
  40d988:	sub    eax,0xbfd51d0d
  40d98d:	(bad)  
  40d98e:	dec    edi
  40d98f:	jmp    0xcbb6bc16
  40d994:	dec    ecx
  40d995:	xchg   ecx,eax
  40d996:	pusha  
  40d997:	loopne 0x40da0e
  40d999:	push   edi
  40d99a:	in     al,0xeb
  40d99c:	shl    BYTE PTR [ebx],0x3e
  40d99f:	inc    eax
  40d9a0:	fldenv ds:0x4fa4c9a2
  40d9a6:	pop    es
  40d9a7:	dec    edi
  40d9a8:	pop    esi
  40d9a9:	jno    0x40d9ed
  40d9ab:	add    eax,DWORD PTR [esi+0x69]
  40d9ae:	or     BYTE PTR [esi-0x60],al
  40d9b1:	push   edi
  40d9b2:	loope  0x40d936
  40d9b4:	int    0x4f
  40d9b6:	adc    DWORD PTR [edi+edi*8],edx
  40d9b9:	dec    esp
  40d9ba:	xchg   BYTE PTR [ebx+0x5],ch
  40d9bd:	cmp    edi,DWORD PTR [esi]
  40d9bf:	(bad)  
  40d9c0:	jo     0x40d978
  40d9c2:	and    edx,ebp
  40d9c4:	stc    
  40d9c5:	or     eax,0x6443e27
  40d9ca:	mov    eax,0x3938fd14
  40d9cf:	xchg   ebp,eax
  40d9d0:	in     al,0x63
  40d9d2:	test   eax,0xa0916403
  40d9d7:	pop    ebx
  40d9d8:	push   edi
  40d9d9:	ds ss mov ebx,0x16eeab8f
  40d9e0:	rol    BYTE PTR [ecx],cl
  40d9e2:	scas   eax,DWORD PTR es:[edi]
  40d9e3:	or     eax,0x7993d5fa
  40d9e8:	mov    bl,0x25
  40d9ea:	add    ch,al
  40d9ec:	push   es
  40d9ed:	mov    ah,0x12
  40d9ef:	sub    dl,BYTE PTR [edx]
  40d9f1:	addr16 jne 0x40da19
  40d9f4:	xchg   DWORD PTR [ebx],eax
  40d9f6:	iret   
  40d9f7:	pop    ds
  40d9f8:	fs pop eax
  40d9fa:	jo     0x40d985
  40d9fc:	pop    es
  40d9fd:	aaa    
  40d9fe:	mov    ebp,0xf45aab8b
  40da03:	xor    eax,0x36346336
  40da08:	mov    esp,ds
  40da0a:	dec    esp
  40da0b:	or     DWORD PTR [eax-0x69],0x3843f0dc
  40da12:	jmp    esi
  40da14:	cmc    
  40da15:	inc    eax
  40da16:	inc    eax
  40da17:	xchg   esi,eax
  40da18:	pop    ebx
  40da19:	hlt    
  40da1a:	and    eax,0x8a6232b3
  40da1f:	mov    bh,0xb9
  40da21:	xor    eax,DWORD PTR [edi]
  40da23:	lahf   
  40da24:	pusha  
  40da25:	test   eax,0x57b43cbb
  40da2a:	and    bl,bh
  40da2c:	or     al,0xaf
  40da2e:	pop    edi
  40da2f:	add    bl,BYTE PTR [ecx-0x3b18f91]
  40da35:	inc    esi
  40da36:	push   ds
  40da37:	mov    dh,0xa2
  40da39:	push   0xd03452b6
  40da3e:	repnz adc eax,0xa9b98ea1
  40da44:	add    eax,0x23348e9
  40da49:	ss inc edx
  40da4b:	sti    
  40da4c:	adc    bl,BYTE PTR [ecx]
  40da4e:	mov    ds:0x6ea7a2aa,al
  40da53:	std    
  40da54:	push   ds
  40da55:	push   esi
  40da56:	and    eax,0x50f3718f
  40da5b:	call   0x2ba2bedb
  40da60:	mov    es:0x264e7a96,al
  40da66:	pop    esp
  40da67:	pop    ds
  40da68:	enter  0x47f7,0xc3
  40da6c:	lds    edx,FWORD PTR [edx-0x4d22fb5e]
  40da72:	add    al,BYTE PTR [ecx-0x2612bd2f]
  40da78:	pop    edi
  40da79:	mov    ch,0x7f
  40da7b:	add    al,0xe2
  40da7d:	or     al,0x6a
  40da7f:	adc    BYTE PTR [edx+0x78],cl
  40da82:	(bad)  
  40da83:	scas   eax,DWORD PTR es:[edi]
  40da84:	imul   BYTE PTR [edx-0x37e7f2af]
  40da8a:	jl     0x40db00
  40da8c:	fisub  DWORD PTR [esi+0x2e]
  40da8f:	xor    eax,DWORD PTR [ecx+0x5e26c720]
  40da95:	js     0x40da90
  40da97:	popf   
  40da98:	mov    edi,esi
  40da9a:	xchg   ecx,eax
  40da9b:	pusha  
  40da9c:	sti    
  40da9d:	push   esp
  40da9e:	pop    ebp
  40da9f:	das    
  40daa0:	push   ebx
  40daa1:	pop    esi
  40daa2:	xchg   esp,eax
  40daa3:	push   esi
  40daa4:	inc    edi
  40daa5:	xchg   ebx,eax
  40daa6:	sub    al,0x6b
  40daa8:	sbb    bh,BYTE PTR [ebp+0x25]
  40daab:	cld    
  40daac:	push   edi
  40daad:	jo     0x40da4a
  40daaf:	jb     0x40da6d
  40dab1:	cwde   
  40dab2:	lds    eax,FWORD PTR [ecx+0x6e]
  40dab5:	loopne 0x40da9f
  40dab7:	scas   al,BYTE PTR es:[edi]
  40dab8:	pop    es
  40dab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daba:	or     eax,0x89e1bb0f
  40dabf:	inc    ecx
  40dac0:	pop    ss
  40dac1:	retf   0xb134
  40dac4:	xchg   DWORD PTR [edx+0x3c4feebb],edx
  40daca:	mov    edx,DWORD PTR [edi+edx*4]
  40dacd:	mov    ds:0xec5fa4ad,al
  40dad2:	std    
  40dad3:	sbb    bl,BYTE PTR [ebx]
  40dad5:	xchg   ecx,eax
  40dad6:	and    BYTE PTR [eax+0x202944a0],cl
  40dadc:	xchg   ebp,eax
  40dadd:	aad    0x46
  40dadf:	mov    edi,0xecc2a82e
  40dae4:	in     al,0xdf
  40dae6:	sub    BYTE PTR [ebp-0x24494e32],dh
  40daec:	push   cs
  40daed:	push   ss
  40daee:	scas   al,BYTE PTR es:[edi]
  40daef:	mov    ebx,es
  40daf1:	mov    WORD PTR [ebx-0x8],ds
  40daf4:	xor    ebx,DWORD PTR [edi+0x70]
  40daf7:	pop    edx
  40daf8:	or     BYTE PTR [edx+0x1a],0x99
  40dafc:	test   BYTE PTR [ebx+0x74a77581],al
  40db02:	scas   eax,DWORD PTR es:[edi]
  40db03:	dec    ebp
  40db04:	in     al,0x34
  40db06:	or     ch,BYTE PTR [edi+0x43e83ac7]
  40db0c:	or     edx,DWORD PTR [edx]
  40db0e:	and    dh,BYTE PTR [edx+edx*1+0x5c]
  40db12:	test   DWORD PTR [edx+esi*4-0x6b990b02],edi
  40db19:	gs pop eax
  40db1b:	inc    edi
  40db1c:	popa   
  40db1d:	dec    eax
  40db1e:	jl     0x40db64
  40db20:	fs inc ebp
  40db22:	js     0x40db99
  40db24:	sbb    cl,BYTE PTR [eax+0x4c2c82d8]
  40db2a:	jle    0x40db69
  40db2c:	sbb    ah,bl
  40db2e:	cwde   
  40db2f:	pop    ecx
  40db30:	pop    ss
  40db31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db32:	push   ds
  40db33:	jecxz  0x40db22
  40db35:	stc    
  40db36:	xor    al,0x25
  40db38:	push   ebx
  40db39:	add    esp,DWORD PTR [eax+0x6c73cbfb]
  40db3f:	leave  
  40db40:	add    bh,BYTE PTR [esi]
  40db42:	and    al,BYTE PTR [edx+0x6908458b]
  40db48:	leave  
  40db49:	add    DWORD PTR [esi],ebp
  40db4b:	add    BYTE PTR [eax],al
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dc15
  40db97:	imul   esp,ecx,0x18d25b7e
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    dh,ah
  40dba3:	push   ds
  40dba4:	sub    edi,ecx
  40dba6:	in     eax,dx
  40dba7:	fild   WORD PTR [edx+eiz*2]
  40dbaa:	sbb    DWORD PTR [eax-0x7e],ecx
  40dbad:	je     0x40dbc9
  40dbaf:	or     al,BYTE PTR [ebx]
  40dbb1:	xchg   ecx,eax
  40dbb2:	cmp    bh,BYTE PTR [ecx-0x2224c981]
  40dbb8:	adc    al,0x21
  40dbba:	nop
  40dbbb:	xchg   ebp,eax
  40dbbc:	sbb    esp,edx
  40dbbe:	shl    BYTE PTR [ebx+0x36],cl
  40dbc1:	add    al,0xd5
  40dbc3:	xor    DWORD PTR [ebx],edx
  40dbc5:	test   BYTE PTR [bp+si-0x11],dl
  40dbc9:	es xchg edi,eax
  40dbcb:	aam    0x1
  40dbcd:	and    BYTE PTR [edi+0x8],bl
  40dbd0:	loopne 0x40db7f
  40dbd2:	dec    edi
  40dbd3:	xchg   ebx,eax
  40dbd4:	jmp    0xdd80:0x79b4339f
  40dbdb:	lods   eax,DWORD PTR ds:[esi]
  40dbdc:	(bad)  
  40dbdd:	cs push edi
  40dbdf:	add    ebx,DWORD PTR [ebp-0x75]
  40dbe2:	call   0xd7370285
  40dbe7:	shl    DWORD PTR [ebx+ebx*2],cl
  40dbea:	mov    ?,WORD PTR [edi+0x2]
  40dbed:	xor    BYTE PTR [esi+edx*2-0x70185c37],ch
  40dbf4:	fcmovb st,st(5)
  40dbf6:	pop    eax
  40dbf7:	mov    DWORD PTR [edi+ebp*2-0x3e],ebp
  40dbfb:	jmp    0x3518:0x7f2913f8
  40dc02:	xor    BYTE PTR [esi-0x3c9bc9bf],dh
  40dc08:	clc    
  40dc09:	retf   
  40dc0a:	sti    
  40dc0b:	in     eax,0x18
  40dc0d:	lods   eax,DWORD PTR ds:[esi]
  40dc0e:	clc    
  40dc0f:	jnp    0x40dc23
  40dc11:	or     cl,ah
  40dc13:	nop
  40dc14:	push   edx
  40dc15:	enter  0x5905,0xa0
  40dc19:	aad    0xac
  40dc1b:	pop    ebp
  40dc1c:	mov    eax,ds:0x52ae7f9f
  40dc21:	push   esi
  40dc22:	fimul  DWORD PTR [edi]
  40dc24:	xor    cl,dl
  40dc26:	xchg   esp,eax
  40dc27:	nop
  40dc28:	pop    es
  40dc29:	repz int 0x8f
  40dc2c:	add    DWORD PTR [edi],0xfffffff0
  40dc2f:	inc    ebp
  40dc30:	addr16 push eax
  40dc32:	or     al,0xba
  40dc34:	push   0xf87ac14c
  40dc39:	push   eax
  40dc3a:	cwde   
  40dc3b:	inc    eax
  40dc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc3e:	in     eax,0xd3
  40dc40:	dec    ebp
  40dc41:	sub    ecx,DWORD PTR [esi+0x7f9407d3]
  40dc47:	test   al,0x87
  40dc49:	adc    ch,BYTE PTR [esi+ecx*4]
  40dc4c:	dec    ebx
  40dc4d:	std    
  40dc4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc4f:	xchg   ebx,eax
  40dc50:	xor    eax,0x5ebbcb56
  40dc55:	(bad)  
  40dc56:	push   esi
  40dc57:	pop    ds
  40dc58:	shr    DWORD PTR [ebp+ebp*1-0x437f4cf9],cl
  40dc5f:	jg     0x40dc3a
  40dc61:	ins    DWORD PTR es:[edi],dx
  40dc62:	mov    edx,0xbcfc092b
  40dc67:	shr    BYTE PTR fs:[esi-0x7501732d],cl
  40dc6e:	and    eax,0xd6e8f89d
  40dc73:	cmp    DWORD PTR [edx],ebx
  40dc75:	dec    esp
  40dc76:	jnp    0x40dc3c
  40dc78:	mov    bl,0x40
  40dc7a:	inc    ecx
  40dc7b:	xchg   ecx,eax
  40dc7c:	xchg   ecx,eax
  40dc7d:	add    al,0xf4
  40dc7f:	add    ah,BYTE PTR [edx-0x4641a95e]
  40dc85:	call   0x860e:0x61460d47
  40dc8c:	pop    ebx
  40dc8d:	and    eax,0x3e61607a
  40dc92:	les    eax,FWORD PTR [ebx-0x26]
  40dc95:	(bad)  
  40dc96:	mul    DWORD PTR [edi+0xb]
  40dc99:	rol    DWORD PTR ds:0x293e2994,1
  40dc9f:	dec    edi
  40dca0:	iret   
  40dca1:	test   DWORD PTR [eax+0x64],eax
  40dca4:	push   es
  40dca5:	in     al,0xf7
  40dca7:	xchg   ebx,eax
  40dca8:	mov    dh,0xe7
  40dcaa:	lds    edx,FWORD PTR ds:0x5ad149ac
  40dcb0:	adc    BYTE PTR ds:0x557681b3,0x4a
  40dcb7:	mov    bh,0x79
  40dcb9:	mov    BYTE PTR [eax+eiz*8+0x715f06ab],dl
  40dcc0:	xchg   esp,eax
  40dcc1:	push   edx
  40dcc2:	or     edi,DWORD PTR [bp+di]
  40dcc5:	rcl    dl,0x98
  40dcc8:	stos   BYTE PTR es:[edi],al
  40dcc9:	aaa    
  40dcca:	scas   al,BYTE PTR es:[edi]
  40dccb:	sub    BYTE PTR ds:[edx],0xfe
  40dccf:	sbb    al,BYTE PTR [edi+0x6342c48c]
  40dcd5:	je     0x40dcbe
  40dcd7:	sahf   
  40dcd8:	rcr    esp,cl
  40dcda:	inc    ecx
  40dcdb:	push   0x9cad624d
  40dce0:	dec    edi
  40dce1:	add    eax,0x93bddc93
  40dce6:	push   0x11
  40dce8:	fnstsw WORD PTR [ebx]
  40dcea:	ficomp DWORD PTR [eax+0x4a054e5f]
  40dcf0:	push   0xffffff85
  40dcf2:	dec    ecx
  40dcf3:	rol    BYTE PTR ds:0xa5caa110,1
  40dcf9:	add    DWORD PTR ds:0xda5ae2ef,0xffffffe3
  40dd00:	push   esp
  40dd01:	sbb    bh,0xf6
  40dd04:	aam    0xf3
  40dd06:	repz ficom DWORD PTR [edi+0x26]
  40dd0a:	jmp    0x80fec6e8
  40dd0f:	inc    ebp
  40dd10:	icebp  
  40dd11:	repnz mov eax,0xa14e263
  40dd17:	jbe    0x40dc99
  40dd19:	sbb    ah,BYTE PTR [ecx]
  40dd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd1c:	add    al,0x2e
  40dd1e:	mov    eax,0xbd5b6a2d
  40dd23:	ret    
  40dd24:	aam    0x72
  40dd26:	jo     0x40dcc9
  40dd28:	scas   eax,DWORD PTR es:[edi]
  40dd29:	cmc    
  40dd2a:	jp     0x40dd62
  40dd2c:	fidiv  WORD PTR [ebp-0x41]
  40dd2f:	mov    DWORD PTR [edx-0xc324adf],esi
  40dd35:	jns    0x40dd92
  40dd37:	adc    DWORD PTR [ebp+0x25],0x3052cc65
  40dd3e:	mov    edx,0x49625c80
  40dd43:	sub    al,0xe6
  40dd46:	frstor [ebp-0x37]
  40dd49:	push   0x7c76e4e
  40dd4e:	test   al,0x41
  40dd51:	xchg   DWORD PTR [edx+0x5f3a47dd],ebx
  40dd57:	ins    BYTE PTR es:[edi],dx
  40dd58:	stc    
  40dd59:	mov    esi,DWORD PTR [edx]
  40dd5b:	aas    
  40dd5c:	pop    esi
  40dd5d:	xor    DWORD PTR [ebx+0x65b1aae0],esp
  40dd63:	dec    ecx
  40dd64:	pop    es
  40dd65:	or     bl,cl
  40dd67:	fistp  QWORD PTR [edi+ebp*4+0x5a]
  40dd6b:	dec    edi
  40dd6c:	mov    al,0x8e
  40dd6e:	mov    ds:0xc0a8320,eax
  40dd73:	xchg   edi,eax
  40dd74:	push   0x3f09d0a8
  40dd79:	int3   
  40dd7a:	retf   
  40dd7b:	pop    ebp
  40dd7c:	outs   dx,DWORD PTR ds:[esi]
  40dd7d:	cmp    edx,DWORD PTR [esi-0x2c]
  40dd80:	dec    esp
  40dd81:	mov    ebx,0x96bf95e8
  40dd86:	push   ebx
  40dd87:	sbb    eax,0x56efbd26
  40dd8c:	fsubr  st,st(3)
  40dd8e:	test   al,0x52
  40dd90:	pop    ebx
  40dd91:	xor    ecx,DWORD PTR [ebp-0xa]
  40dd94:	xor    BYTE PTR [edx-0x3],ch
  40dd97:	inc    edx
  40dd98:	dec    esi
  40dd99:	xor    esp,eax
  40dd9b:	xchg   esp,eax
  40dd9c:	ja     0x40dd87
  40dd9e:	add    ah,ah
  40dda0:	push   ebx
  40dda1:	mov    ds:0x51e1cc25,eax
  40dda6:	cmp    eax,0xd164ad9d
  40ddab:	fld    DWORD PTR [ecx-0x50]
  40ddae:	fld    DWORD PTR [edx+0x32]
  40ddb1:	popf   
  40ddb2:	or     eax,0xbfb5136
  40ddb7:	int3   
  40ddb8:	cmp    DWORD PTR [edx-0xd],edx
  40ddbb:	add    DWORD PTR [esi],0x245c0b4
  40ddc1:	push   0x7f87210
  40ddc6:	lahf   
  40ddc7:	pop    ebp
  40ddc8:	in     eax,0x61
  40ddca:	rcl    BYTE PTR [esi],0x63
  40ddcd:	das    
  40ddce:	icebp  
  40ddcf:	lds    esp,FWORD PTR [ecx-0x364f4447]
  40ddd5:	sbb    DWORD PTR [eax+0xc],ebx
  40ddd8:	pusha  
  40ddd9:	mov    ds:0x75acea93,eax
  40ddde:	dec    ebp
  40dddf:	push   es
  40dde0:	ja     0x40de46
  40dde2:	leave  
  40dde3:	cmp    bh,cl
  40dde5:	xor    DWORD PTR [edx-0x7ef6c391],esi
  40ddeb:	xchg   ecx,eax
  40ddec:	pop    ebx
  40dded:	mov    edi,0x483da058
  40ddf2:	inc    esp
  40ddf3:	or     eax,0x541e09fe
  40ddf8:	push   ebx
  40ddf9:	push   edi
  40ddfa:	iret   
  40ddfb:	add    BYTE PTR [edi-0x50],dh
  40ddfe:	pop    ebx
  40ddff:	fs dec edi
  40de01:	cmp    ebx,DWORD PTR [ecx+0x7179159c]
  40de07:	cmp    eax,0x1e8c703b
  40de0c:	xor    BYTE PTR [eax+esi*1-0x43],bh
  40de10:	or     ebx,eax
  40de12:	add    edi,DWORD PTR [ebx+0x21]
  40de15:	add    edx,DWORD PTR [edx]
  40de17:	jne    0x40de2f
  40de19:	ror    ah,1
  40de1b:	dec    esp
  40de1c:	lods   eax,DWORD PTR ds:[esi]
  40de1d:	add    edx,DWORD PTR [eax-0x7c]
  40de20:	jl     0x40ddde
  40de22:	aaa    
  40de23:	sahf   
  40de24:	and    esp,edx
  40de26:	xor    BYTE PTR [ecx+eax*1],cl
  40de29:	out    dx,al
  40de2a:	(bad)  
  40de2b:	add    al,0x21
  40de2d:	xor    bh,0xe5
  40de30:	push   ebx
  40de31:	fimul  DWORD PTR [ecx+0x76]
  40de34:	sub    BYTE PTR [ebp+0x5bfc529b],bh
  40de3a:	mov    edx,0x7463141f
  40de3f:	inc    ebp
  40de40:	popa   
  40de41:	fs and eax,0x7cd311c1
  40de47:	pop    edx
  40de48:	jb     0x40de11
  40de4a:	inc    ebp
  40de4b:	fdivr  QWORD PTR [edx]
  40de4d:	cmp    al,BYTE PTR [eax]
  40de4f:	add    bh,al
  40de51:	inc    ebp
  40de52:	in     al,dx
  40de53:	int    0x13
  40de55:	add    BYTE PTR [eax],al
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422558
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40de90
  40deca:	imul   esp,DWORD PTR [ecx+0x70],0x14
  40dece:	int3   
  40decf:	sbb    BYTE PTR [eax],bl
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    BYTE PTR [esi],al
  40ded6:	cwde   
  40ded7:	sub    ebp,DWORD PTR [esi]
  40ded9:	mov    cl,0x2f
  40dedb:	inc    edx
  40dedc:	push   ebx
  40dedd:	mov    BYTE PTR [edx],cl
  40dedf:	pop    esp
  40dee0:	cmp    al,0x46
  40dee2:	stos   DWORD PTR es:[edi],eax
  40dee3:	stc    
  40dee4:	jno    0x40df48
  40dee6:	rcr    BYTE PTR [ebx],cl
  40dee8:	jmp    0x2971:0xba9908d9
  40deef:	xchg   edx,eax
  40def0:	cmp    DWORD PTR [esi+ecx*4],eax
  40def3:	cmc    
  40def4:	(bad)  [ebp+0x2f]
  40def7:	push   cs
  40def8:	dec    esi
  40def9:	inc    esi
  40defa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40defb:	xchg   ecx,eax
  40defc:	push   esi
  40defd:	cs push edi
  40deff:	or     esi,DWORD PTR [ebp-0x61]
  40df02:	or     eax,0xa8cc8a0a
  40df07:	push   ebp
  40df08:	popf   
  40df09:	pop    esi
  40df0a:	lea    edx,ds:0x552507cd
  40df10:	out    dx,al
  40df11:	and    al,0xfd
  40df13:	mov    eax,ds:0xa38e2feb
  40df18:	mov    eax,ds:0x16683f9a
  40df1d:	xchg   esp,eax
  40df1e:	popf   
  40df1f:	dec    ecx
  40df20:	xchg   esi,eax
  40df21:	adc    dh,al
  40df23:	pop    es
  40df24:	addr16 out dx,eax
  40df26:	sar    DWORD PTR [eax+0x70fc6b3d],cl
  40df2c:	je     0x40deff
  40df2e:	mov    edi,0x165dd972
  40df33:	push   es
  40df34:	cmp    eax,0xb57860b9
  40df39:	popf   
  40df3a:	test   DWORD PTR [esi+edi*1],ebx
  40df3d:	fnstsw WORD PTR [edi]
  40df3f:	mov    ebp,0x7dc88003
  40df44:	cs mov ebp,0x85f1ca12
  40df4a:	jno    0x40df8a
  40df4c:	xor    BYTE PTR [eax],ah
  40df4e:	ficomp WORD PTR [edx+0x24ff6f73]
  40df54:	out    dx,al
  40df55:	sub    ebx,DWORD PTR [esi+0x3d9d8c9]
  40df5b:	inc    ebx
  40df5c:	jecxz  0x40df03
  40df5e:	or     DWORD PTR [ebx-0x31],ebp
  40df61:	lods   al,BYTE PTR ds:[esi]
  40df62:	xchg   esi,eax
  40df63:	pop    edi
  40df64:	pop    esi
  40df65:	ret    
  40df66:	out    dx,al
  40df67:	dec    ebx
  40df68:	xor    al,0x79
  40df6a:	jge    0x40deed
  40df6c:	push   esp
  40df6d:	mov    ?,ebx
  40df6f:	pop    ebp
  40df70:	cli    
  40df71:	sbb    eax,0x42327cc7
  40df76:	idiv   BYTE PTR [edx+edi*2+0x12]
  40df7a:	shl    DWORD PTR [eax+edi*4],0x2a
  40df7e:	dec    ebp
  40df7f:	and    eax,0xe2b09ae2
  40df84:	das    
  40df85:	inc    edx
  40df86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df87:	into   
  40df88:	retf   
  40df89:	cmc    
  40df8a:	pop    edi
  40df8b:	or     esi,edx
  40df8d:	scas   eax,DWORD PTR es:[edi]
  40df8e:	or     ecx,eax
  40df90:	push   esi
  40df91:	ins    DWORD PTR es:[edi],dx
  40df92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df93:	fsub   QWORD PTR [esi]
  40df95:	inc    esi
  40df96:	jecxz  0x40df40
  40df98:	mov    esp,0x74baeeab
  40df9d:	jae    0x40df92
  40df9f:	mov    edi,DWORD PTR [eax-0xb]
  40dfa2:	or     eax,0x212e3460
  40dfa7:	les    esi,FWORD PTR [ebx*4+0x57e69703]
  40dfae:	lea    ebp,[edx]
  40dfb0:	inc    eax
  40dfb1:	dec    esp
  40dfb2:	mov    ch,cl
  40dfb4:	(bad)  
  40dfb5:	popf   
  40dfb6:	ds xchg esi,esp
  40dfb9:	mov    edx,?
  40dfbb:	jns    0x40df7d
  40dfbd:	std    
  40dfbe:	xor    DWORD PTR fs:[esi+0x57],edi
  40dfc2:	adc    ch,BYTE PTR [ebp+0x7fe32535]
  40dfc8:	cs add al,0x30
  40dfcb:	in     al,dx
  40dfcc:	add    eax,0x71f49a91
  40dfd1:	pop    edx
  40dfd2:	mov    ds:0x24da2a99,eax
  40dfd7:	rcr    BYTE PTR [eax],cl
  40dfd9:	std    
  40dfda:	dec    ebx
  40dfdb:	xor    ebp,DWORD PTR [edi]
  40dfdd:	mov    esi,0x8043e71a
  40dfe2:	sub    al,0x8
  40dfe4:	sti    
  40dfe5:	mov    esp,0x3e6d8a3b
  40dfea:	push   eax
  40dfeb:	stos   DWORD PTR es:[edi],eax
  40dfec:	jmp    0x7147b928
  40dff1:	cmp    bh,BYTE PTR [esi+0x75954f5d]
  40dff7:	adc    DWORD PTR [edi+0x182333b6],0x1f
  40dffe:	call   0x3f1:0x667fe662
  40e005:	sbb    al,0x1b
  40e007:	add    DWORD PTR [edi+ebp*4-0x33],0x1f
  40e00c:	xchg   ebx,eax
  40e00d:	test   BYTE PTR [edi],bl
  40e00f:	inc    ebx
  40e010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e011:	out    dx,eax
  40e012:	je     0x40dfab
  40e014:	pop    ds
  40e015:	mov    esi,0x5113393
  40e01a:	sahf   
  40e01b:	fst    QWORD PTR [eax-0x3d]
  40e01f:	push   es
  40e020:	mov    eax,0xd2f0c50d
  40e025:	mov    edi,0xe8813a66
  40e02a:	(bad)  
  40e02b:	xchg   edx,eax
  40e02c:	aaa    
  40e02d:	jle    0x40e00f
  40e02f:	daa    
  40e030:	sahf   
  40e031:	xchg   BYTE PTR [edx-0x6ce88a44],dh
  40e037:	out    dx,eax
  40e038:	imul   esp,DWORD PTR [ebx-0x3d],0xa3b9fab8
  40e03f:	sbb    BYTE PTR [ebp+esi*1-0x12],al
  40e043:	or     al,0xe4
  40e045:	mov    edi,0xb754ecea
  40e04a:	sbb    ebx,DWORD PTR [ebx]
  40e04c:	out    dx,eax
  40e04d:	test   eax,0x464d2f25
  40e052:	mov    es,ebx
  40e054:	and    al,0xd7
  40e056:	add    ch,bl
  40e058:	fdiv   st(1),st
  40e05a:	les    esp,FWORD PTR [edx]
  40e05c:	inc    edx
  40e05d:	or     eax,0xa0834ef7
  40e062:	loopne 0x40e0ad
  40e064:	jnp    0x40e0db
  40e066:	push   es
  40e067:	sahf   
  40e068:	into   
  40e069:	nop
  40e06a:	and    al,0xc2
  40e06c:	pop    ebx
  40e06d:	adc    al,0xe3
  40e06f:	or     edi,DWORD PTR [eax]
  40e071:	push   edi
  40e072:	push   edi
  40e073:	outs   dx,DWORD PTR ds:[esi]
  40e074:	mov    edi,DWORD PTR [ebx+ebx*1+0x61]
  40e078:	dec    ebp
  40e079:	xchg   ebx,eax
  40e07a:	inc    esi
  40e07b:	xlat   BYTE PTR ds:[ebx]
  40e07c:	fidiv  WORD PTR [ecx-0x12775d45]
  40e082:	fisttp DWORD PTR [edx+0x3eaa1b1b]
  40e088:	into   
  40e089:	dec    ebp
  40e08a:	or     BYTE PTR [edi+0x7b48a642],0xbd
  40e091:	enter  0x2d8e,0xe6
  40e095:	imul   ecx,DWORD PTR [ebx+0x50],0xfffffff5
  40e099:	sar    BYTE PTR [ebp-0x66d9c062],cl
  40e09f:	xor    DWORD PTR [edi+esi*4-0xf73c2cd],ecx
  40e0a6:	aaa    
  40e0a7:	push   esi
  40e0a8:	cdq    
  40e0a9:	dec    esp
  40e0aa:	popa   
  40e0ab:	out    dx,al
  40e0ac:	mov    bh,0x82
  40e0ae:	(bad)  
  40e0af:	repnz cmp DWORD PTR [ecx+0x22],esp
  40e0b3:	(bad)  
  40e0b4:	loop   0x40e0cd
  40e0b6:	add    BYTE PTR [ebp-0x1b],ah
  40e0b9:	xor    eax,DWORD PTR ds:0x3c9bda50
  40e0bf:	pop    es
  40e0c0:	add    eax,0x3f79b600
  40e0c5:	sub    ebx,DWORD PTR [edx]
  40e0c7:	or     ch,BYTE PTR [edx+0x15]
  40e0ca:	les    edi,FWORD PTR [eax+0x20]
  40e0cd:	shl    BYTE PTR [ebx],1
  40e0cf:	(bad)  
  40e0d0:	sbb    esi,DWORD PTR [ecx]
  40e0d2:	inc    ebp
  40e0d3:	xchg   ecx,eax
  40e0d4:	mov    eax,0xe29407a5
  40e0d9:	fisttp DWORD PTR [edx+ebx*8]
  40e0dc:	ja     0x40e081
  40e0de:	jmp    0x2848:0x7b4cbe9d
  40e0e5:	test   ah,0x23
  40e0e8:	addr16 push ss
  40e0ea:	xchg   ecx,eax
  40e0eb:	sub    DWORD PTR [edi],eax
  40e0ed:	sahf   
  40e0ee:	sbb    DWORD PTR [edi],edi
  40e0f0:	pop    ebp
  40e0f1:	aad    0x87
  40e0f3:	loope  0x40e15a
  40e0f5:	pusha  
  40e0f6:	cmp    ebp,eax
  40e0f8:	and    BYTE PTR [edi+0x50a796de],ah
  40e0fe:	sub    bh,BYTE PTR [esi+0x4a722594]
  40e104:	repnz fidiv WORD PTR [esi+0x1e30d9a3]
  40e10b:	xchg   edx,eax
  40e10c:	loopne 0x40e123
  40e10e:	in     al,0x94
  40e110:	in     al,dx
  40e111:	dec    eax
  40e112:	jo     0x40e170
  40e114:	addr16 push ebp
  40e116:	sbb    eax,0xba810029
  40e11b:	push   es
  40e11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e11d:	outs   dx,BYTE PTR ds:[esi]
  40e11e:	push   ebx
  40e11f:	mov    bh,0x8c
  40e121:	test   eax,0x12f0b051
  40e126:	dec    edx
  40e127:	mov    edi,0x613c20f3
  40e12c:	(bad)  [ebx]
  40e12e:	and    DWORD PTR [edx+0x5c499dad],edi
  40e134:	mov    dh,0x7e
  40e136:	mov    ch,0x67
  40e138:	js     0x40e13a
  40e13a:	fadd   st(1),st
  40e13c:	test   al,0xec
  40e13e:	cmp    ebx,0x3b596705
  40e144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e145:	add    eax,0xca94cf2b
  40e14a:	pop    edi
  40e14b:	inc    edi
  40e14c:	and    DWORD PTR [ecx-0xa5a0739],0xffffffa7
  40e153:	push   es
  40e154:	pop    es
  40e155:	not    dl
  40e157:	loope  0x40e0f4
  40e159:	(bad)  
  40e15b:	pop    ecx
  40e15c:	dec    ecx
  40e15d:	ret    0x3968
  40e160:	aaa    
  40e161:	ins    DWORD PTR es:[edi],dx
  40e162:	gs sbb eax,0x4baea313
  40e168:	ss sti 
  40e16a:	(bad)  
  40e16b:	xchg   edi,eax
  40e16c:	fwait
  40e16d:	in     eax,dx
  40e16e:	adc    eax,0xd9e3893
  40e173:	das    
  40e174:	mov    edi,0xa0e526d0
  40e179:	pop    esp
  40e17a:	(bad)  
  40e17b:	fimul  DWORD PTR [ebx-0x31ca0fbb]
  40e181:	loope  0x40e182
  40e183:	inc    DWORD PTR [ebx]
  40e185:	inc    ebp
  40e186:	hlt    
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e204
  40e199:	sbb    eax,0xc8cebe3b
  40e19e:	sbb    BYTE PTR [eax],bl
  40e1a0:	rcl    BYTE PTR [eax+ebx*1],cl
  40e1a3:	sbb    BYTE PTR [eax],bh
  40e1a5:	dec    ebx
  40e1a6:	mov    ds:0xa4bc3bf6,al
  40e1ab:	jmp    0x40e1a6
  40e1ad:	mov    ebx,0xe8bc6f1a
  40e1b2:	dec    edx
  40e1b3:	push   ecx
  40e1b4:	in     eax,dx
  40e1b5:	(bad)  
  40e1b6:	daa    
  40e1b7:	xor    edi,DWORD PTR [edx]
  40e1b9:	mov    ebp,0xaf81e483
  40e1be:	push   esp
  40e1bf:	das    
  40e1c0:	out    dx,al
  40e1c1:	sbb    BYTE PTR [ebx],dl
  40e1c3:	out    0x98,al
  40e1c5:	mov    ax,ds:0x269f2463
  40e1cb:	in     eax,dx
  40e1cc:	push   ds
  40e1cd:	mov    al,ds:0xe46f5e44
  40e1d2:	(bad)  
  40e1d4:	sbb    ebp,DWORD PTR es:[ebx]
  40e1d7:	int    0xc7
  40e1d9:	ins    DWORD PTR es:[edi],dx
  40e1da:	jp     0x40e22c
  40e1dc:	fist   WORD PTR [ecx]
  40e1de:	fwait
  40e1df:	or     DWORD PTR [eax-0x67],eax
  40e1e2:	xchg   BYTE PTR [ebx+edx*8-0x28],al
  40e1e6:	gs jp  0x40e1d9
  40e1e9:	add    bl,bh
  40e1eb:	or     esi,DWORD PTR [ebp+0x72b8f1f3]
  40e1f1:	popf   
  40e1f2:	out    dx,eax
  40e1f3:	jb     0x40e186
  40e1f5:	mov    bh,0x2f
  40e1f7:	pushf  
  40e1f8:	and    al,0x18
  40e1fb:	or     BYTE PTR [eax-0x1992720a],bh
  40e201:	ss jmp 0x68a7e2c
  40e207:	(bad)  
  40e209:	cmp    bl,dl
  40e20b:	sbb    al,0xc6
  40e20d:	add    eax,0x697da14a
  40e212:	ret    
  40e213:	pop    esp
  40e214:	sub    bl,dh
  40e216:	xor    al,0x20
  40e218:	in     eax,dx
  40e219:	cmc    
  40e21a:	ret    
  40e21b:	dec    ebx
  40e21c:	or     ch,ah
  40e21e:	mov    esi,0xc9731aff
  40e223:	push   edx
  40e224:	or     DWORD PTR [ebp-0xf],0x76066d32
  40e22b:	sti    
  40e22c:	dec    ebx
  40e22d:	into   
  40e22e:	ret    
  40e22f:	jb     0x40e258
  40e231:	jb     0x40e281
  40e233:	jno    0x40e27c
  40e235:	js     0x40e234
  40e237:	pop    esp
  40e238:	rcl    BYTE PTR [edx+ecx*8],cl
  40e23b:	cmp    cl,cl
  40e23d:	inc    eax
  40e23e:	fs popf 
  40e240:	xor    dl,BYTE PTR [esi]
  40e242:	retf   
  40e243:	shr    esi,1
  40e245:	jae    0x40e237
  40e247:	loopne 0x40e1d7
  40e249:	into   
  40e24a:	jae    0x40e253
  40e24c:	cld    
  40e24d:	pop    esi
  40e24e:	sub    al,0x49
  40e250:	sbb    eax,0x589cb001
  40e255:	adc    dh,bl
  40e257:	pop    edi
  40e258:	mov    edi,0x3cd6cba6
  40e25d:	cmp    ebp,DWORD PTR [edi-0x5b]
  40e260:	test   esi,edi
  40e262:	ins    BYTE PTR es:[edi],dx
  40e263:	call   0x377a:0xa9c52aef
  40e26a:	mov    BYTE PTR [ebx+0x4cb4d3b7],ch
  40e270:	int3   
  40e271:	iret   
  40e272:	sbb    dh,bh
  40e274:	sbb    bl,BYTE PTR [ebp+0xb]
  40e277:	dec    ebp
  40e278:	loope  0x40e26d
  40e27a:	cmp    eax,0xd5fa252a
  40e27f:	mov    esp,DWORD PTR [esi]
  40e281:	xor    bh,dl
  40e283:	out    dx,al
  40e284:	in     eax,dx
  40e285:	push   0x58
  40e287:	adc    esi,DWORD PTR [eax]
  40e289:	cmp    al,0x87
  40e28b:	(bad)
  40e28e:	outs   dx,BYTE PTR ds:[esi]
  40e28f:	popf   
  40e290:	cmp    bl,BYTE PTR [edi-0x26]
  40e293:	icebp  
  40e294:	outs   dx,BYTE PTR ds:[esi]
  40e295:	xchg   esp,eax
  40e296:	pop    edx
  40e297:	sbb    DWORD PTR [si-0x28],edi
  40e29b:	dec    ecx
  40e29c:	and    al,0x29
  40e29e:	nop
  40e29f:	mov    ah,0xa4
  40e2a1:	inc    ebp
  40e2a2:	div    BYTE PTR [ecx]
  40e2a4:	ins    BYTE PTR es:[edi],dx
  40e2a5:	jb     0x40e2f7
  40e2a7:	xor    cl,bl
  40e2a9:	and    BYTE PTR ds:0xa1504750,cl
  40e2af:	sbb    eax,0x3dd0087a
  40e2b4:	aas    
  40e2b5:	or     DWORD PTR [ebx],edi
  40e2b7:	mov    esi,0xb76ffe6b
  40e2bc:	mov    ah,0xa2
  40e2be:	jmp    0x40e287
  40e2c0:	jmp    0xf2d2e149
  40e2c5:	test   al,0xb8
  40e2c7:	sar    DWORD PTR [ecx-0x7f2149b5],1
  40e2cd:	fnstcw WORD PTR [ecx+0x387ec8c0]
  40e2d3:	cs xchg esi,eax
  40e2d5:	sbb    BYTE PTR [eax+0x64],cl
  40e2d8:	mov    edx,0xacce82a1
  40e2dd:	cmp    DWORD PTR [ebx+0x7bf1b844],edx
  40e2e3:	test   ch,dh
  40e2e5:	pop    esi
  40e2e6:	out    0x12,eax
  40e2e8:	clc    
  40e2e9:	xchg   DWORD PTR [ebp-0x4],ebx
  40e2ec:	cmp    ecx,0xffffffc4
  40e2ef:	push   ss
  40e2f0:	pop    ebp
  40e2f1:	popa   
  40e2f2:	pop    esp
  40e2f3:	pop    ss
  40e2f4:	mov    esp,?
  40e2f6:	sti    
  40e2f7:	xchg   BYTE PTR [ebx-0x117f3b36],bl
  40e2fd:	xor    edi,ecx
  40e2ff:	fisub  DWORD PTR [ecx-0x32f667fc]
  40e305:	stos   DWORD PTR es:[edi],eax
  40e306:	es pop ecx
  40e308:	push   ebp
  40e309:	int    0xcd
  40e30b:	mov    ds:0x63a44240,al
  40e310:	cmp    eax,eax
  40e312:	sub    edx,eax
  40e314:	scas   eax,DWORD PTR es:[edi]
  40e315:	jbe    0x40e30c
  40e317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e318:	(bad)  
  40e319:	sahf   
  40e31a:	outs   dx,BYTE PTR ds:[esi]
  40e31b:	pop    eax
  40e31c:	into   
  40e31d:	or     BYTE PTR [edi],dh
  40e31f:	vcvttps2dq xmm4,XMMWORD PTR [esp+ebx*4]
  40e324:	jo     0x40e2ce
  40e326:	pop    ecx
  40e327:	std    
  40e328:	mov    WORD PTR [esi+0x1e866c6a],?
  40e32e:	lahf   
  40e32f:	sahf   
  40e330:	frstor [esi+ecx*8]
  40e333:	mov    bl,0xe1
  40e335:	mov    al,ds:0xab6190a0
  40e33a:	imul   ebp,DWORD PTR [eax],0x77
  40e33d:	jmp    ebx
  40e33f:	mov    eax,0x59404bbf
  40e344:	into   
  40e345:	call   0xb704fd85
  40e34a:	mov    al,ds:0x73a0bdb1
  40e34f:	outs   dx,BYTE PTR ds:[esi]
  40e350:	cli    
  40e351:	test   eax,0x28d52f13
  40e356:	fadd   QWORD PTR [edx-0x30]
  40e359:	sub    esp,ecx
  40e35b:	xor    bh,BYTE PTR [ecx]
  40e35d:	std    
  40e35e:	or     esp,DWORD PTR [ecx]
  40e360:	xchg   esp,eax
  40e361:	xchg   ebp,eax
  40e362:	pop    ss
  40e363:	push   0xffffffea
  40e365:	mov    WORD PTR [edx],fs
  40e367:	je     0x40e300
  40e369:	push   cs
  40e36a:	sbb    ch,BYTE PTR gs:[ecx-0x3d89d2f3]
  40e371:	hlt    
  40e372:	pusha  
  40e373:	popa   
  40e374:	xchg   edi,eax
  40e375:	or     DWORD PTR [ebp+0x66753897],ecx
  40e37b:	scas   al,BYTE PTR es:[edi]
  40e37c:	adc    al,BYTE PTR [edi-0x45]
  40e37f:	rol    DWORD PTR [edi],1
  40e381:	shr    ecx,0xd2
  40e384:	daa    
  40e385:	dec    eax
  40e386:	loope  0x40e33d
  40e388:	test   al,0x8b
  40e38a:	(bad)  
  40e38b:	dec    ebx
  40e38c:	pop    edx
  40e38d:	inc    eax
  40e38e:	int3   
  40e38f:	mov    eax,0x8fb28679
  40e394:	or     edi,DWORD PTR [ecx+0x53]
  40e397:	(bad)  
  40e398:	lahf   
  40e399:	(bad)  
  40e39a:	fist   WORD PTR [esi]
  40e39c:	inc    edx
  40e39d:	repz aam 0xc8
  40e3a0:	pop    esi
  40e3a1:	popf   
  40e3a2:	je     0x40e33c
  40e3a4:	inc    esp
  40e3a5:	test   DWORD PTR [eax+eax*1-0xcf0e5b1],eax
  40e3ac:	and    DWORD PTR [eax+edx*8+0x75],0xf5ceae15
  40e3b4:	jno    0x40e376
  40e3b6:	call   FWORD PTR [edi+0x37]
  40e3b9:	gs cmp al,0xb8
  40e3bc:	pop    eax
  40e3bd:	ret    
  40e3be:	ror    BYTE PTR [edx],cl
  40e3c0:	jbe    0x40e398
  40e3c2:	xlat   BYTE PTR ds:[ebx]
  40e3c3:	jge    0x40e383
  40e3c5:	fld    DWORD PTR [esi+ecx*4-0x62]
  40e3c9:	jno    0x40e385
  40e3cb:	dec    esi
  40e3cc:	rol    BYTE PTR [eax-0x11],cl
  40e3cf:	sbb    DWORD PTR [edi+0x40],edx
  40e3d2:	leave  
  40e3d3:	push   eax
  40e3d4:	popf   
  40e3d5:	ret    0x25b2
  40e3d8:	or     al,0xa5
  40e3da:	and    eax,0xa0c4e83e
  40e3df:	aas    
  40e3e0:	or     al,0x3a
  40e3e2:	sar    cl,1
  40e3e4:	xchg   esp,eax
  40e3e5:	mov    esi,0x61b8b3fa
  40e3ea:	mov    WORD PTR [edi+0x55],fs
  40e3ed:	int3   
  40e3ee:	scas   al,BYTE PTR es:[edi]
  40e3ef:	pop    ds
  40e3f0:	rcl    DWORD PTR [esi+0x4b88bfde],cl
  40e3f6:	xchg   edi,eax
  40e3f7:	in     al,dx
  40e3f8:	or     eax,0x99448e08
  40e3fd:	mov    al,ds:0xfcfd91f6
  40e402:	mov    ebx,0x7cfc42c0
  40e407:	mov    dh,0x5c
  40e409:	inc    esp
  40e40a:	in     al,dx
  40e40b:	mov    WORD PTR [eax],fs
  40e40d:	call   0x732f3249
  40e412:	das    
  40e413:	fstp   QWORD PTR [eax-0x2c6c78f4]
  40e419:	jno    0x40e485
  40e41b:	push   edi
  40e41c:	mov    DWORD PTR [ebp+0x6fcbcd72],edi
  40e422:	pusha  
  40e423:	xor    BYTE PTR [ebx-0x366dda28],0xc
  40e42a:	outs   dx,DWORD PTR ds:[esi]
  40e42b:	(bad)  
  40e42d:	(bad)  
  40e42e:	sub    bl,BYTE PTR [esi+edi*8+0x1d6fe6a6]
  40e435:	xchg   DWORD PTR [edx],eax
  40e437:	xor    al,0x6c
  40e439:	aad    0xf6
  40e43b:	scas   eax,DWORD PTR es:[edi]
  40e43c:	cdq    
  40e43d:	cmc    
  40e43e:	aam    0xe0
  40e440:	jp     0x40e455
  40e442:	jne    0x40e452
  40e444:	adc    BYTE PTR [ebx+0x4a],cl
  40e447:	jns    0x40e3eb
  40e449:	lods   al,BYTE PTR ds:[esi]
  40e44a:	jns    0x40e47f
  40e44c:	shl    BYTE PTR ds:0x6d33,cl
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x7091b5f4],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [esi+0x6d],cl
  40e4ec:	in     al,dx
  40e4ed:	mov    fs,WORD PTR cs:[ebx+edi*1+0x1761d4b5]
  40e4f5:	pop    ss
  40e4f6:	je     0x40e4a9
  40e4f8:	mov    bh,0xc7
  40e4fa:	push   cs
  40e4fb:	inc    esi
  40e4fc:	js     0x40e4d1
  40e4fe:	or     edx,DWORD PTR [ebp-0x64]
  40e501:	dec    edx
  40e502:	je     0x40e4cc
  40e504:	repnz xchg ecx,eax
  40e507:	test   eax,0x37d2804
  40e50c:	jmp    0x40e490
  40e50e:	push   eax
  40e50f:	mov    ds:0xc2431251,al
  40e514:	dec    ebx
  40e515:	rol    ah,cl
  40e517:	cdq    
  40e518:	pop    es
  40e519:	cmp    edx,edi
  40e51b:	enter  0x8b71,0xd4
  40e51f:	in     eax,dx
  40e520:	fs repnz inc ebp
  40e523:	ins    DWORD PTR es:[edi],dx
  40e524:	add    al,0xac
  40e526:	inc    esp
  40e527:	outs   dx,BYTE PTR ds:[esi]
  40e528:	arpl   WORD PTR [ecx+0x9],dx
  40e52b:	or     BYTE PTR [esi],0xd7
  40e52e:	test   eax,0xb69fb686
  40e533:	xor    BYTE PTR [edx+0x5],0x8
  40e537:	or     eax,0xd9a1a6a2
  40e53c:	das    
  40e53d:	repz sbb DWORD PTR [ebp+0xc],edx
  40e541:	sbb    esp,eax
  40e543:	mov    edx,0x657fba6a
  40e548:	dec    eax
  40e549:	adc    al,0xfd
  40e54b:	push   0x5577d5db
  40e550:	xchg   DWORD PTR [esi+0x68b6816],esi
  40e556:	pop    ecx
  40e557:	mov    cl,0x60
  40e559:	dec    edx
  40e55a:	data16 setp BYTE PTR [ebx]
  40e55e:	pop    es
  40e55f:	mov    BYTE PTR [edx+0x59f48dde],dl
  40e565:	in     al,dx
  40e566:	adc    eax,DWORD PTR [eax]
  40e568:	jne    0x40e5b2
  40e56a:	mov    edx,0x8e47b0ae
  40e56f:	fadd   QWORD PTR [esi]
  40e571:	(bad)  
  40e572:	pop    edi
  40e573:	sub    eax,0xcc0056ec
  40e578:	push   esp
  40e579:	mov    dh,0x68
  40e57b:	test   DWORD PTR [ebx],esp
  40e57d:	es in  al,0xeb
  40e580:	call   0xf7a2d2c2
  40e585:	retf   0xc56
  40e588:	jbe    0x40e5ee
  40e58a:	xchg   edx,eax
  40e58b:	out    dx,eax
  40e58c:	jno    0x40e53d
  40e58e:	dec    DWORD PTR [ebx-0x33]
  40e591:	(bad)  
  40e592:	clc    
  40e593:	lahf   
  40e594:	sub    al,BYTE PTR [ebx+0x814bec2]
  40e59a:	ins    DWORD PTR es:[edi],dx
  40e59b:	push   eax
  40e59c:	push   esp
  40e59d:	ror    DWORD PTR [ebx-0x66],cl
  40e5a0:	xor    ah,ah
  40e5a2:	test   eax,0x77cf7cea
  40e5a7:	(bad)  
  40e5a9:	cli    
  40e5aa:	mov    ah,BYTE PTR [edx+esi*2]
  40e5ad:	ja     0x40e55f
  40e5af:	add    DWORD PTR [ebp-0x19],ebp
  40e5b2:	mov    cl,0x6e
  40e5b4:	push   0xffffffee
  40e5b6:	mov    edi,0x74f6d48b
  40e5bb:	and    al,0xec
  40e5bd:	dec    DWORD PTR [eax-0x6e11bf2d]
  40e5c3:	cmc    
  40e5c4:	psrlw  mm1,mm6
  40e5c7:	popf   
  40e5c8:	loop   0x40e5b9
  40e5ca:	xchg   ecx,eax
  40e5cb:	hlt    
  40e5cc:	fld    QWORD PTR [eax]
  40e5ce:	sbb    DWORD PTR [edx+0x7eaf6b25],esp
  40e5d4:	push   cs
  40e5d5:	pop    edi
  40e5d6:	or     edx,DWORD PTR [ebx-0x8]
  40e5d9:	mov    ebx,0x5e44ea82
  40e5de:	mov    DWORD PTR [ebx],0xf142284c
  40e5e4:	lds    esi,FWORD PTR [edi-0x73]
  40e5e7:	jb     0x40e606
  40e5e9:	fld    QWORD PTR [edi-0x4c]
  40e5ec:	lea    ecx,[ebx-0x29a6d41c]
  40e5f2:	pop    ecx
  40e5f3:	xchg   BYTE PTR [ebx+edx*8],al
  40e5f6:	dec    ecx
  40e5f7:	pop    esp
  40e5f8:	mov    ds:0xac4379d3,eax
  40e5fd:	jecxz  0x40e5f2
  40e5ff:	sub    BYTE PTR [edi+0x5480fada],cl
  40e605:	dec    ebx
  40e606:	test   al,0x39
  40e608:	ret    
  40e609:	xchg   esi,eax
  40e60a:	(bad)  
  40e60c:	dec    esp
  40e60d:	sbb    ecx,DWORD PTR [ebx+0x3f]
  40e610:	pushf  
  40e611:	jle    0x40e687
  40e613:	pop    eax
  40e614:	imul   edx,DWORD PTR [edx-0x7c],0xffffff84
  40e618:	in     eax,dx
  40e619:	daa    
  40e61a:	jg     0x40e698
  40e61c:	and    al,0x59
  40e61e:	or     al,0x88
  40e620:	cdq    
  40e621:	sbb    eax,0x6104276f
  40e626:	mov    eax,ds:0xc6b7ca3
  40e62b:	call   0x7f854e87
  40e630:	jle    0x40e5c3
  40e632:	cmp    BYTE PTR [eax],ch
  40e634:	cmp    ah,0xb4
  40e637:	scas   al,BYTE PTR es:[edi]
  40e638:	mov    dh,0x6f
  40e63a:	jo     0x40e5da
  40e63c:	xchg   esp,eax
  40e63d:	loope  0x40e653
  40e63f:	pushw  ds
  40e641:	in     eax,dx
  40e642:	cs sub bh,al
  40e645:	shl    BYTE PTR [ebx-0xce2dc5c],1
  40e64b:	sub    ebp,edi
  40e64d:	xchg   ebx,eax
  40e64e:	sub    DWORD PTR [eax-0x1e],0xf1b3dee
  40e655:	cs enter 0xeb31,0xd7
  40e65a:	lahf   
  40e65b:	loope  0x40e66c
  40e65d:	leave  
  40e65e:	push   ss
  40e65f:	push   es
  40e660:	sub    DWORD PTR [edi+ecx*2-0x39],ebx
  40e664:	mov    ds:0x9a58aefc,al
  40e669:	mov    edi,0x84531f8
  40e66e:	cld    
  40e66f:	pop    ebp
  40e670:	mov    ch,0x2e
  40e672:	xchg   ebx,eax
  40e673:	add    DWORD PTR [edi+esi*8+0x4fc0266c],0xbb3582a7
  40e67e:	popf   
  40e67f:	cmp    ebp,DWORD PTR [edi-0x2ec104ae]
  40e685:	test   DWORD PTR [ecx],ebx
  40e687:	std    
  40e688:	push   ebp
  40e689:	mov    bh,0x95
  40e68b:	stos   BYTE PTR es:[edi],al
  40e68c:	shl    BYTE PTR [edx-0x42d6103c],0x30
  40e693:	pop    ebp
  40e694:	add    ecx,edx
  40e696:	xchg   edi,eax
  40e697:	into   
  40e698:	or     al,0xf2
  40e69a:	pushf  
  40e69b:	and    BYTE PTR [ebx],cl
  40e69d:	jns    0x40e66a
  40e69f:	push   ecx
  40e6a0:	mov    bh,0xdd
  40e6a2:	cmp    ecx,DWORD PTR [eax-0x17]
  40e6a5:	fisubr DWORD PTR [edi]
  40e6a7:	lea    ecx,[ebp-0x2767c14f]
  40e6ad:	mov    dh,BYTE PTR [edx+0x1f]
  40e6b0:	aas    
  40e6b1:	sub    dh,BYTE PTR [ecx-0x40a0db60]
  40e6b7:	xor    BYTE PTR [eax],ch
  40e6b9:	sub    al,0xef
  40e6bb:	push   eax
  40e6bc:	xor    ebp,edx
  40e6be:	ds lahf 
  40e6c0:	jl     0x40e71a
  40e6c2:	mov    eax,0x9d424d6a
  40e6c7:	sbb    DWORD PTR ds:0xec16a6c2,0xf8ee8aa5
  40e6d1:	fnstcw WORD PTR [ecx+0x2f]
  40e6d4:	popa   
  40e6d5:	push   ds
  40e6d6:	test   BYTE PTR [eax-0x1565cff7],bh
  40e6dc:	outs   dx,DWORD PTR ds:[esi]
  40e6dd:	push   es
  40e6de:	test   eax,0x9dd92ceb
  40e6e3:	ds (bad) 
  40e6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6e6:	mov    gs,ebp
  40e6e8:	lds    ebx,FWORD PTR [esi]
  40e6ea:	jg     0x40e6f0
  40e6ec:	sahf   
  40e6ed:	inc    esp
  40e6ee:	xor    eax,0xac16a2af
  40e6f3:	(bad)  
  40e6f5:	lock dec edx
  40e6f7:	aad    0x28
  40e6f9:	add    eax,0x4848f068
  40e6fe:	ret    
  40e6ff:	push   ecx
  40e700:	retf   0x566d
  40e703:	dec    esi
  40e704:	mov    DWORD PTR [esi+0x46],ebx
  40e707:	or     cl,0x74
  40e70a:	into   
  40e70b:	icebp  
  40e70c:	mov    bh,0x8c
  40e70e:	in     eax,dx
  40e70f:	mov    eax,ds:0xc12096c9
  40e714:	push   ds
  40e715:	retf   
  40e716:	test   esi,edi
  40e718:	and    dl,ah
  40e71a:	sbb    BYTE PTR [eax+0x69],ah
  40e71d:	aam    0xfd
  40e71f:	(bad)  
  40e720:	daa    
  40e721:	mov    ch,0xe6
  40e723:	cli    
  40e724:	sbb    edi,DWORD PTR [ecx+0x8f49ba6]
  40e72a:	mov    BYTE PTR [edx+0x6adb95cf],bl
  40e730:	and    al,0xe2
  40e732:	fisttp WORD PTR [esi-0x37ac94ec]
  40e738:	lds    ebx,FWORD PTR [ecx]
  40e73a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40e73c:	push   edi
  40e73d:	xchg   ebp,eax
  40e73e:	and    dh,BYTE PTR [ebx+0x79]
  40e741:	push   ebx
  40e742:	push   ds
  40e743:	repz mov ch,0x2
  40e746:	imul   ebx,DWORD PTR [eax+0x0],0xffffffda
  40e74a:	jg     0x40e75b
  40e74c:	imul   ebx,DWORD PTR [ecx+0x3c7136b7],0xc641d771
  40e756:	cmp    BYTE PTR [ebx-0x78731cda],dl
  40e75c:	mov    edi,0x58d121dc
  40e761:	je     0x40e74f
  40e763:	push   eax
  40e764:	outs   dx,DWORD PTR ds:[esi]
  40e765:	mov    esi,0xcc70bbc4
  40e76a:	xor    edi,0xfffffff6
  40e76d:	and    DWORD PTR [edx-0x53],edx
  40e770:	outs   dx,DWORD PTR ss:[esi]
  40e772:	xor    cl,al
  40e774:	and    BYTE PTR [esi],bh
  40e776:	sahf   
  40e777:	dec    esp
  40e778:	jne    0x40e7a3
  40e77a:	and    DWORD PTR [edx+0x16],esp
  40e77d:	imul   ebp,DWORD PTR [ebx],0xfe71a77e
  40e783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e784:	push   ebp
  40e785:	xchg   edx,eax
  40e786:	sahf   
  40e787:	adc    al,BYTE PTR [edi+0x7e48ac17]
  40e78d:	inc    edx
  40e78e:	push   ebp
  40e78f:	shl    eax,cl
  40e791:	sub    ecx,eax
  40e793:	mov    DWORD PTR [ebp+0xc],0x8d3
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	out    dx,al
  40e7f0:	repz cmp DWORD PTR [edx+0x42],ebp
  40e7f4:	mov    esi,0x14d21818
  40e7f9:	sbb    BYTE PTR [eax],bl
  40e7fb:	es je  0x40e78e
  40e7fe:	es sti 
  40e800:	jo     0x40e825
  40e802:	dec    ecx
  40e803:	xor    eax,DWORD PTR [edi+0x4]
  40e806:	lahf   
  40e807:	int    0x9b
  40e809:	push   ebp
  40e80b:	mov    bl,0x8f
  40e80d:	(bad)  [esi-0x5a]
  40e810:	mov    ah,0x8d
  40e812:	call   0x5757:0xe1bc1c13
  40e819:	ret    
  40e81a:	mov    ch,0xa
  40e81c:	sbb    edi,ecx
  40e81e:	out    0xd6,eax
  40e820:	cmp    bl,BYTE PTR [eax-0x1]
  40e823:	fwait
  40e824:	rol    DWORD PTR ss:[eax],0x98
  40e828:	dec    edx
  40e829:	sub    al,0xb2
  40e82b:	aaa    
  40e82c:	das    
  40e82d:	es icebp 
  40e82f:	push   ebp
  40e830:	(bad)  [ebp-0x3]
  40e833:	test   al,0x1e
  40e835:	fistp  QWORD PTR [edx-0x77a4254]
  40e83b:	and    al,0xaa
  40e83d:	dec    edx
  40e83e:	mov    cl,0x4
  40e840:	cmp    DWORD PTR [esi-0x8],edx
  40e843:	pop    edx
  40e844:	xchg   ebp,eax
  40e845:	mov    ds:0x52172464,eax
  40e84a:	retf   
  40e84b:	std    
  40e84c:	inc    eax
  40e84d:	jns    0x40e814
  40e84f:	call   0x95a8:0xeac642fa
  40e856:	mov    ebp,?
  40e858:	add    DWORD PTR [edi-0x14487835],ecx
  40e85e:	mov    ds:0xa8cea90b,al
  40e863:	lods   al,BYTE PTR ds:[esi]
  40e864:	pop    esi
  40e865:	outs   dx,BYTE PTR ds:[esi]
  40e866:	mov    dh,0x8e
  40e868:	rcl    BYTE PTR [esi],1
  40e86a:	push   cs
  40e86b:	xlat   BYTE PTR ds:[ebx]
  40e86c:	cmc    
  40e86d:	enter  0xd949,0x94
  40e871:	inc    edx
  40e872:	in     al,0x2
  40e874:	sahf   
  40e875:	or     DWORD PTR [edx-0x1cacee49],edi
  40e87b:	jp     0x40e879
  40e87d:	lahf   
  40e87e:	test   al,0x4c
  40e880:	jecxz  0x40e84b
  40e882:	js     0x40e8f4
  40e884:	jl     0x40e8fc
  40e886:	pop    esi
  40e887:	daa    
  40e888:	xor    BYTE PTR [eax+0x23c2c70d],dh
  40e88e:	xchg   esp,eax
  40e88f:	in     eax,dx
  40e890:	repnz adc ecx,esi
  40e893:	mul    ebx
  40e895:	inc    edx
  40e896:	outs   dx,BYTE PTR ds:[esi]
  40e897:	fwait
  40e898:	nop
  40e899:	mov    ebx,0x53a45ecf
  40e89e:	cld    
  40e89f:	push   esi
  40e8a0:	popf   
  40e8a1:	mov    bh,0x11
  40e8a3:	add    DWORD PTR [edi],esp
  40e8a5:	mov    ecx,0x6827aba5
  40e8aa:	rcr    dh,0x23
  40e8ad:	in     eax,0x83
  40e8af:	sbb    ebp,edx
  40e8b1:	int3   
  40e8b2:	add    al,bl
  40e8b4:	repnz add cl,al
  40e8b7:	iret   
  40e8b8:	xchg   esp,eax
  40e8b9:	mov    ch,0x3d
  40e8bb:	fst    DWORD PTR [ecx+0x49]
  40e8be:	sub    dl,BYTE PTR [ebx]
  40e8c0:	sbb    dh,bl
  40e8c2:	xor    DWORD PTR [eax-0x71372217],esp
  40e8c8:	cmp    bh,0x5e
  40e8cb:	iret   
  40e8cc:	inc    edi
  40e8cd:	or     al,0xc4
  40e8cf:	mov    cl,0x34
  40e8d1:	pushf  
  40e8d2:	test   al,0x80
  40e8d4:	jae    0x40e911
  40e8d6:	clc    
  40e8d7:	aad    0x88
  40e8d9:	pop    eax
  40e8da:	sub    BYTE PTR [ecx],0x56
  40e8dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8de:	(bad)
  40e8e1:	dec    ebp
  40e8e2:	ds ret 0xb3c0
  40e8e6:	add    ecx,ebx
  40e8e8:	adc    al,0xa0
  40e8ea:	push   ss
  40e8eb:	les    eax,FWORD PTR [edx]
  40e8ed:	int3   
  40e8ee:	lods   al,BYTE PTR ds:[esi]
  40e8ef:	fistp  WORD PTR [edx]
  40e8f1:	xlat   BYTE PTR ds:[ebx]
  40e8f2:	adc    eax,0x1b31c6c3
  40e8f7:	rcr    BYTE PTR [esi-0x6bad4b2f],0xbd
  40e8fe:	jecxz  0x40e93d
  40e900:	and    BYTE PTR [esi+eax*2],ch
  40e903:	inc    ebp
  40e904:	loop   0x40e903
  40e906:	aaa    
  40e907:	sti    
  40e908:	adc    BYTE PTR [edi-0xe4bbc73],ch
  40e90e:	or     BYTE PTR [ecx],dh
  40e910:	xor    BYTE PTR [edi+ebp*1],al
  40e913:	pop    eax
  40e914:	add    eax,0xae5000a2
  40e919:	sbb    DWORD PTR [ecx+0x27],esi
  40e91c:	sbb    BYTE PTR [edi],0x9b
  40e91f:	push   ebp
  40e920:	push   0x24
  40e922:	(bad)  
  40e923:	test   BYTE PTR [eax+0x61],0xd9
  40e927:	in     eax,dx
  40e928:	rol    BYTE PTR [esi-0x3d5a00ad],cl
  40e92e:	dec    edi
  40e92f:	gs ret 0x9b9
  40e933:	push   ebx
  40e934:	popf   
  40e935:	sahf   
  40e936:	mov    edx,0xa377bd03
  40e93b:	in     eax,0xb4
  40e93d:	xor    dh,dh
  40e93f:	mov    al,0x1
  40e941:	stos   BYTE PTR es:[edi],al
  40e942:	cmp    eax,DWORD PTR [edx+ecx*8-0x6d1b8275]
  40e949:	cwde   
  40e94a:	cmp    ch,bl
  40e94c:	push   cs
  40e94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e94e:	jl     0x40e8d8
  40e950:	aad    0x5e
  40e952:	add    ecx,DWORD PTR [edi+ebx*8]
  40e955:	push   ebp
  40e956:	adc    BYTE PTR [eax-0x72],bl
  40e959:	inc    eax
  40e95a:	cmp    cl,dh
  40e95c:	test   bl,0xe6
  40e95f:	dec    edx
  40e960:	add    eax,DWORD PTR [edx+0x46e4ef1f]
  40e966:	cmp    bh,BYTE PTR [edx+ebx*2-0xf685543]
  40e96d:	loop   0x40e96c
  40e96f:	outs   dx,BYTE PTR ds:[esi]
  40e970:	adc    cl,BYTE PTR [ebp+0x2a29a5e6]
  40e976:	jmp    0xffbb03e5
  40e97b:	and    eax,0x463238e6
  40e980:	adc    ah,BYTE PTR [ecx]
  40e982:	and    ebp,DWORD PTR [edi-0x6df49cec]
  40e988:	mov    edi,0xf9cb4ec0
  40e98d:	jns    0x40e986
  40e98f:	cli    
  40e990:	and    eax,0x3aa48fc8
  40e995:	xor    bl,dl
  40e997:	add    al,0x5f
  40e999:	(bad)  
  40e99a:	imul   edx,DWORD PTR [edi],0xffffffdb
  40e99d:	mov    dh,0xd4
  40e99f:	out    0xda,al
  40e9a1:	dec    ebp
  40e9a2:	aad    0x2a
  40e9a4:	ficomp WORD PTR [ecx]
  40e9a6:	cdq    
  40e9a7:	adc    BYTE PTR ds:0x5b04e4a0,0xa8
  40e9ae:	add    al,0x26
  40e9b0:	mov    cl,0x8c
  40e9b2:	pop    edx
  40e9b4:	in     al,0x9c
  40e9b6:	popa   
  40e9b7:	fist   DWORD PTR [eax]
  40e9b9:	stos   DWORD PTR es:[edi],eax
  40e9ba:	jnp    0x40e998
  40e9bc:	jo     0x40e9e6
  40e9be:	push   ebx
  40e9bf:	and    ebx,DWORD PTR [edi-0x35871da7]
  40e9c5:	jne    0x40e9c3
  40e9c7:	loope  0x40e98d
  40e9c9:	pshufw mm7,QWORD PTR [ebx-0x15],0x6f
  40e9ce:	dec    edx
  40e9cf:	stc    
  40e9d0:	les    ebp,FWORD PTR [edx+0x2b]
  40e9d3:	stc    
  40e9d4:	push   0xea5e440d
  40e9d9:	retf   
  40e9da:	inc    edx
  40e9db:	cmp    DWORD PTR [edx],0xc20f4986
  40e9e1:	mov    ebp,0xa0bb88d4
  40e9e6:	xchg   edi,eax
  40e9e7:	jp     0x40ea35
  40e9e9:	mov    ah,0x68
  40e9eb:	adc    ecx,DWORD PTR [ebp+0x4a431f07]
  40e9f1:	sub    eax,DWORD PTR [esi+0x24]
  40e9f4:	mov    cl,0x55
  40e9f6:	fucom  st(0)
  40e9f8:	jmp    0x40e9a1
  40e9fa:	neg    eax
  40e9fc:	inc    eax
  40e9fd:	mov    ah,0x29
  40e9ff:	pop    edx
  40ea00:	dec    eax
  40ea01:	popa   
  40ea02:	dec    esp
  40ea03:	lods   eax,DWORD PTR ds:[esi]
  40ea04:	push   esi
  40ea05:	es jbe 0x40ea0e
  40ea08:	stc    
  40ea09:	push   ecx
  40ea0a:	and    ch,BYTE PTR [esp+ecx*1]
  40ea0d:	pop    esi
  40ea0e:	(bad)  
  40ea0f:	and    DWORD PTR [edx-0xc],ebp
  40ea12:	dec    esi
  40ea13:	pop    eax
  40ea14:	jns    0x40e9ed
  40ea16:	lahf   
  40ea17:	loope  0x40e9b9
  40ea19:	lds    ebp,FWORD PTR [ecx]
  40ea1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea1c:	and    al,0xae
  40ea1e:	aas    
  40ea1f:	mov    ebx,0x4bd07eb3
  40ea24:	das    
  40ea25:	mov    dh,0x67
  40ea27:	test   edi,ebp
  40ea29:	repnz icebp 
  40ea2b:	fst    QWORD PTR [ebx+0x395a2a33]
  40ea31:	push   cs
  40ea32:	jp     0x40ea6f
  40ea34:	pop    eax
  40ea35:	rcl    DWORD PTR [eax-0x2f7ebb79],0x62
  40ea3c:	pop    ebx
  40ea3d:	test   eax,0x5d69d706
  40ea42:	int    0x63
  40ea44:	push   ds
  40ea45:	inc    eax
  40ea46:	mov    esi,0xdacea13e
  40ea4b:	test   BYTE PTR [eax+0x7e6db872],al
  40ea51:	mov    cs,WORD PTR ds:0x582bb4b9
  40ea57:	popa   
  40ea58:	ret    
  40ea59:	in     al,dx
  40ea5a:	ret    
  40ea5b:	arpl   WORD PTR [eax],bp
  40ea5d:	xor    eax,0xe844df4b
  40ea62:	out    0x64,al
  40ea64:	cld    
  40ea65:	enter  0x4c30,0x9c
  40ea69:	xor    eax,0x8760bc3d
  40ea6e:	(bad)  
  40ea6f:	(bad)  
  40ea70:	xchg   BYTE PTR es:[edx],cl
  40ea73:	or     eax,0x2c33e4da
  40ea78:	push   es
  40ea79:	mov    ebp,0xc70bf1c5
  40ea7e:	sub    eax,0x446de08c
  40ea83:	je     0x40eaab
  40ea85:	and    ebx,esp
  40ea87:	shr    DWORD PTR [ebx+0x51],cl
  40ea8a:	mov    ah,0x19
  40ea8c:	add    eax,0x311aa12f
  40ea91:	aad    0x11
  40ea93:	into   
  40ea94:	jp     0x40ea23
  40ea96:	scas   al,BYTE PTR es:[edi]
  40ea97:	test   eax,0x55e0c99
  40ea9c:	jbe    0x40ea5e
  40ea9e:	xor    al,0x6a
  40eaa0:	mov    ebp,0xf7d233cb
  40eaa5:	test   DWORD PTR [ebx+0x42255815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xc7aa14b9
  40eaf1:	hlt    
  40eaf2:	shl    DWORD PTR [eax-0x3],1
  40eaf5:	mov    eax,0x14d21818
  40eafa:	sbb    BYTE PTR [eax],bl
  40eafc:	push   es
  40eafd:	ins    BYTE PTR es:[edi],dx
  40eafe:	in     eax,dx
  40eaff:	xor    cl,ah
  40eb01:	inc    ecx
  40eb02:	rol    BYTE PTR [ebp+0x4c9cace7],1
  40eb08:	sbb    dl,BYTE PTR [edx+ebx*2]
  40eb0b:	sbb    BYTE PTR [edx-0x1a4395c4],ah
  40eb11:	jmp    0x40eb1b
  40eb13:	pop    esp
  40eb14:	mov    ebp,gs
  40eb16:	out    0x69,eax
  40eb18:	jnp    0x40eb72
  40eb1a:	mov    edi,0xf787547d
  40eb1f:	(bad)  
  40eb20:	jp     0x40eb62
  40eb22:	mov    ch,0x75
  40eb24:	xor    ah,BYTE PTR [edx-0x35]
  40eb27:	sti    
  40eb28:	loopne 0x40eb04
  40eb2a:	cmp    al,0x24
  40eb2c:	xor    al,0x59
  40eb2e:	pop    ebp
  40eb2f:	mov    dh,0x2b
  40eb31:	dec    eax
  40eb32:	call   0xa7f12455
  40eb37:	fnstcw WORD PTR [edi+esi*1-0x12]
  40eb3b:	shr    DWORD PTR [ebp-0x6b500c0f],cl
  40eb41:	jb     0x40eb13
  40eb43:	arpl   bp,sp
  40eb45:	xor    BYTE PTR [eax-0x3c],bl
  40eb48:	js     0x40ebaf
  40eb4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb4b:	popf   
  40eb4c:	retf   0xb0e2
  40eb4f:	xor    al,0x5a
  40eb51:	xor    eax,0xe2934581
  40eb56:	push   0xffffff98
  40eb58:	ds xor ebp,esp
  40eb5b:	mov    cl,0x2e
  40eb5d:	in     eax,dx
  40eb5e:	and    al,BYTE PTR [edx-0x516a2958]
  40eb64:	cwde   
  40eb65:	out    dx,eax
  40eb66:	pop    ds
  40eb67:	push   edx
  40eb68:	adc    al,0xc2
  40eb6a:	fsubr  QWORD PTR [esi-0x18]
  40eb6d:	lods   al,BYTE PTR ds:[esi]
  40eb6e:	push   ecx
  40eb6f:	das    
  40eb70:	add    ah,BYTE PTR [edi+0x2e4cc95c]
  40eb76:	pop    edi
  40eb77:	adc    DWORD PTR [edx+0x4e838cde],0x5c
  40eb7e:	pop    esp
  40eb7f:	pop    ebp
  40eb80:	cwde   
  40eb81:	mov    al,ds:0xb23bb0ca
  40eb86:	push   ebx
  40eb87:	shl    BYTE PTR [edx],1
  40eb89:	push   0x396252c2
  40eb8e:	xchg   ebp,eax
  40eb8f:	in     al,0x9a
  40eb91:	(bad)  
  40eb92:	ficom  DWORD PTR [esi+0x6ce2d32d]
  40eb98:	popf   
  40eb99:	ror    BYTE PTR [edx+edi*2+0x1600cf97],1
  40eba0:	outs   dx,DWORD PTR ds:[esi]
  40eba1:	sbb    ebp,DWORD PTR ds:0xff3a6d22
  40eba7:	call   0x12814a8d
  40ebac:	xchg   ebx,eax
  40ebad:	aad    0x16
  40ebaf:	pushf  
  40ebb0:	or     esi,DWORD PTR [eax-0x36]
  40ebb3:	xchg   esi,eax
  40ebb4:	(bad)
  40ebb8:	sub    BYTE PTR [ebp-0x3f],0xad
  40ebbc:	dec    ebp
  40ebbd:	inc    ecx
  40ebbe:	div    BYTE PTR [ebx-0xb98cd30]
  40ebc4:	fcomp  DWORD PTR [ebx-0x17]
  40ebc7:	xchg   BYTE PTR [eax+ecx*8+0x3d997626],dh
  40ebce:	aaa    
  40ebcf:	loop   0x40ebf9
  40ebd1:	loopne 0x40eb99
  40ebd3:	push   esi
  40ebd4:	ins    DWORD PTR es:[edi],dx
  40ebd5:	ds fwait
  40ebd7:	int    0x8b
  40ebd9:	xlat   BYTE PTR ds:[ebx]
  40ebda:	std    
  40ebdb:	in     eax,0x9
  40ebdd:	jecxz  0x40eb7b
  40ebdf:	adc    ch,bl
  40ebe1:	jmp    0x40eb6a
  40ebe3:	push   edx
  40ebe4:	push   edi
  40ebe5:	mov    dl,0xe7
  40ebe7:	aas    
  40ebe8:	push   ebp
  40ebe9:	lahf   
  40ebea:	jle    0x40ec13
  40ebec:	aam    0xab
  40ebee:	frstor [eax-0x96d2e32]
  40ebf4:	js     0x40ec4b
  40ebf6:	je     0x40ebf9
  40ebf8:	loope  0x40ebc4
  40ebfa:	dec    ebx
  40ebfb:	stc    
  40ebfc:	(bad)  
  40ebfd:	repz mov ah,0x61
  40ec00:	sbb    bh,BYTE PTR [ebx-0xe050eee]
  40ec06:	cmp    eax,0x1ae781d4
  40ec0b:	or     BYTE PTR [edx+0x7d067463],bh
  40ec11:	adc    al,0x4c
  40ec13:	jmp    0x40ec0b
  40ec15:	xchg   ch,cl
  40ec17:	scas   eax,DWORD PTR es:[edi]
  40ec18:	add    eax,DWORD PTR [ebp+0x26f9fbb1]
  40ec1e:	push   0xb7c21c9e
  40ec23:	mov    ecx,0x57f618ed
  40ec28:	unpckhps xmm7,XMMWORD PTR [ecx-0x1bc2b9f7]
  40ec2f:	jl     0x40ebe4
  40ec31:	sub    al,BYTE PTR [ecx+0x1]
  40ec34:	and    BYTE PTR [ebx-0x51198871],dh
  40ec3a:	pop    ecx
  40ec3b:	addr16 jbe 0x40ec8f
  40ec3e:	mov    al,ds:0x93b26d4b
  40ec43:	call   0x6960:0xf63bfb6e
  40ec4a:	scas   eax,DWORD PTR es:[edi]
  40ec4b:	inc    esi
  40ec4c:	jge    0x40ec41
  40ec4e:	mov    bl,0x56
  40ec50:	push   0x13fc7d1d
  40ec55:	dec    ebp
  40ec56:	sub    al,cl
  40ec58:	sbb    al,0x48
  40ec5a:	out    0xe5,eax
  40ec5c:	lods   al,BYTE PTR ds:[esi]
  40ec5d:	pusha  
  40ec5e:	aam    0x52
  40ec60:	inc    edi
  40ec61:	jb     0x40ece1
  40ec63:	enter  0x6556,0xb
  40ec67:	jne    0x40ec67
  40ec69:	mov    ecx,0xc61a23e9
  40ec6e:	repz ror DWORD PTR [edx+0x62],1
  40ec72:	push   ecx
  40ec73:	(bad)  
  40ec74:	scas   al,BYTE PTR es:[edi]
  40ec75:	jno    0x40ec15
  40ec77:	mov    esp,0x15a5e9bc
  40ec7c:	inc    edi
  40ec7d:	add    cl,BYTE PTR [edi+0x2839b65c]
  40ec83:	sub    dl,bh
  40ec85:	mov    bh,0x20
  40ec87:	lods   eax,DWORD PTR ds:[esi]
  40ec88:	mov    esp,0x25ac300e
  40ec8d:	push   ebx
  40ec8e:	inc    esp
  40ec8f:	dec    ecx
  40ec90:	sub    ebp,DWORD PTR [edi+edx*4]
  40ec93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec94:	ss mov ebx,0xa04fa071
  40ec9a:	aam    0x60
  40ec9c:	adc    dl,BYTE PTR [ebp+0x74]
  40ec9f:	call   0x8ed95974
  40eca4:	(bad)  
  40eca5:	outs   dx,DWORD PTR ds:[esi]
  40eca6:	aam    0xdc
  40eca8:	nop
  40eca9:	xchg   esp,eax
  40ecaa:	repz (bad) [esi+0x37]
  40ecae:	in     al,dx
  40ecaf:	nop
  40ecb0:	jmp    0x4ef5:0xf70bfd27
  40ecb7:	and    edx,DWORD PTR [edi]
  40ecb9:	jo     0x40ec41
  40ecbb:	pop    edi
  40ecbc:	nop
  40ecbd:	add    al,0x75
  40ecbf:	adc    eax,0x98522c44
  40ecc4:	sub    BYTE PTR [ecx-0x7f],bl
  40ecc7:	adc    ebp,esi
  40ecc9:	jmp    0x40ecf9
  40eccb:	cdq    
  40eccc:	cdq    
  40eccd:	lahf   
  40ecce:	push   ecx
  40eccf:	jno    0x40ed48
  40ecd1:	mov    esp,0x82754913
  40ecd6:	lahf   
  40ecd7:	je     0x40ecda
  40ecd9:	(bad)  
  40ecda:	push   ds
  40ecdb:	sahf   
  40ecdc:	push   ss
  40ecdd:	test   al,0x57
  40ecdf:	leave  
  40ece0:	cs int3 
  40ece2:	or     dl,BYTE PTR [esi-0x1e]
  40ece5:	lock aam 0x46
  40ece8:	mov    ebx,0xe4776dd8
  40eced:	mov    ah,0xeb
  40ecef:	add    al,0xfd
  40ecf1:	push   ss
  40ecf2:	jg     0x40ecdd
  40ecf4:	cli    
  40ecf5:	out    dx,eax
  40ecf6:	push   eax
  40ecf7:	dec    ebx
  40ecf8:	data16 hlt 
  40ecfa:	or     ecx,ecx
  40ecfc:	cdq    
  40ecfd:	dec    ecx
  40ecfe:	ror    DWORD PTR [ebp+0x60],1
  40ed01:	pop    edi
  40ed02:	jecxz  0x40ed12
  40ed04:	nop
  40ed05:	inc    ebp
  40ed06:	(bad)  [eax+0x16]
  40ed09:	pop    es
  40ed0a:	adc    ebx,eax
  40ed0c:	xor    DWORD PTR [eax+0x4b],ebp
  40ed0f:	stos   DWORD PTR es:[edi],eax
  40ed10:	xor    DWORD PTR [ecx+ebp*8-0x14b3d39b],0xffffffed
  40ed18:	ficom  DWORD PTR [ecx+ecx*2]
  40ed1b:	sbb    eax,0x73d3b925
  40ed20:	inc    edx
  40ed21:	jno    0x40ed4c
  40ed23:	and    eax,0x53d0c226
  40ed28:	push   cs
  40ed29:	or     bh,dh
  40ed2b:	addr16 or eax,0x93867802
  40ed31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed32:	mov    WORD PTR [edx+0xe51bc7b],es
  40ed38:	cld    
  40ed39:	inc    edi
  40ed3a:	into   
  40ed3b:	test   al,0x50
  40ed3d:	pop    esi
  40ed3e:	mov    eax,esi
  40ed40:	mov    edx,0x796ffb62
  40ed45:	xor    al,0xbe
  40ed47:	fsubr  st,st(7)
  40ed49:	push   ebx
  40ed4a:	shl    BYTE PTR [ecx],0x56
  40ed4d:	cmp    al,0x35
  40ed4f:	push   edx
  40ed50:	or     bl,BYTE PTR [ebx+0x510a5019]
  40ed56:	gs f2xm1 
  40ed59:	in     eax,dx
  40ed5a:	retf   
  40ed5b:	pop    ss
  40ed5c:	lods   al,BYTE PTR ds:[esi]
  40ed5d:	xor    eax,0x52174e2a
  40ed62:	inc    ebx
  40ed63:	pop    ds
  40ed64:	sbb    al,0xcf
  40ed66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed67:	sbb    cl,BYTE PTR [edi]
  40ed69:	mov    al,0xef
  40ed6b:	mov    ah,0xd9
  40ed6d:	mov    eax,ds:0x366e499d
  40ed73:	aam    0x15
  40ed75:	ins    DWORD PTR es:[edi],dx
  40ed76:	pusha  
  40ed77:	sub    BYTE PTR [ecx],0x4f
  40ed7a:	retf   0xf442
  40ed7d:	xchg   ebp,eax
  40ed7e:	jmp    FWORD PTR [edx-0x4c2031bc]
  40ed84:	push   eax
  40ed85:	jecxz  0x40ed50
  40ed87:	sbb    ch,bl
  40ed89:	pop    ecx
  40ed8a:	cmp    ebx,0xffffffa8
  40ed8d:	or     ecx,ecx
  40ed8f:	(bad)  
  40ed90:	mov    dh,0x54
  40ed92:	hlt    
  40ed93:	pop    ebx
  40ed94:	sbb    ebp,DWORD PTR [edi+eiz*2]
  40ed97:	mov    esp,0x7848630e
  40ed9c:	idiv   DWORD PTR [edi]
  40ed9e:	xor    ch,ch
  40eda0:	jle    0x40eddc
  40eda2:	(bad)  
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x28aa1270]
  40edd3:	push   es
  40edd4:	out    0xaa,eax
  40edd6:	mov    bh,0xb2
  40edd8:	sbb    BYTE PTR [eax],bl
  40edda:	rcl    BYTE PTR [eax+ebx*1],cl
  40eddd:	sbb    BYTE PTR [ecx-0x4cd6aa5a],al
  40ede3:	pushf  
  40ede4:	dec    ebx
  40ede5:	popa   
  40ede6:	fxch   st(6)
  40ede8:	loopne 0x40ed6b
  40edea:	std    
  40edeb:	shl    DWORD PTR [esi+0x74],cl
  40edee:	inc    esp
  40edef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf0:	clc    
  40edf1:	jge    0x40eda4
  40edf3:	out    dx,eax
  40edf4:	jle    0x40edeb
  40edf6:	je     0x40ee39
  40edf8:	inc    ebp
  40edf9:	arpl   WORD PTR [eax-0x67557b0c],dx
  40edff:	jp     0x40ed85
  40ee01:	inc    edi
  40ee02:	xchg   edx,eax
  40ee03:	outs   dx,BYTE PTR ds:[esi]
  40ee04:	mov    ebx,0x49330981
  40ee09:	jbe    0x40ee63
  40ee0b:	test   eax,0x8db0fec6
  40ee10:	adc    al,0x1e
  40ee12:	mov    ebp,ebx
  40ee14:	jg     0x40eda0
  40ee16:	rcl    DWORD PTR [ecx+ebp*8],0x11
  40ee1a:	into   
  40ee1b:	pop    ds
  40ee1c:	test   DWORD PTR [ecx+0x2a6f2238],ebp
  40ee22:	and    al,0x15
  40ee24:	pusha  
  40ee25:	sar    BYTE PTR [eax],cl
  40ee27:	std    
  40ee28:	int    0x99
  40ee2a:	cmp    BYTE PTR [ecx-0x4a3e35dc],al
  40ee30:	aas    
  40ee31:	and    BYTE PTR [ecx+edx*4+0x4c],dl
  40ee35:	xor    BYTE PTR [esi+0xd11949a],bl
  40ee3b:	std    
  40ee3c:	pop    eax
  40ee3d:	mov    al,0x56
  40ee3f:	aas    
  40ee40:	jnp    0x40eea0
  40ee42:	mov    eax,0x97c97c60
  40ee47:	inc    edi
  40ee48:	out    0x88,al
  40ee4a:	int3   
  40ee4b:	daa    
  40ee4c:	enter  0x600a,0x94
  40ee50:	stc    
  40ee51:	sbb    al,BYTE PTR [edx-0x27b73f67]
  40ee57:	jge    0x40ee94
  40ee59:	jmp    0xa4dd85c4
  40ee5e:	push   0xffffff98
  40ee60:	dec    esp
  40ee61:	in     al,0xec
  40ee63:	mov    eax,ds:0x2a8d1def
  40ee68:	loope  0x40eed5
  40ee6a:	xchg   esp,eax
  40ee6b:	cmp    eax,0x34b48ba
  40ee70:	imul   esp,DWORD PTR [edi-0x40736c31],0xffffffd4
  40ee77:	fstp   st(3)
  40ee79:	sar    BYTE PTR [edi],1
  40ee7b:	add    BYTE PTR [ebx-0x51],bh
  40ee7e:	cmp    DWORD PTR [eax],esp
  40ee80:	inc    edi
  40ee81:	lods   eax,DWORD PTR ds:[esi]
  40ee82:	mov    ebx,0xd802fa0a
  40ee87:	cmc    
  40ee88:	nop
  40ee89:	data16 loopne 0x40ee0c
  40ee8c:	jle    0x40eea3
  40ee8e:	data16 sahf 
  40ee90:	outs   dx,DWORD PTR ds:[esi]
  40ee91:	stc    
  40ee92:	js     0x40ee9d
  40ee94:	mov    esi,0xc19c762b
  40ee99:	daa    
  40ee9a:	add    DWORD PTR [edx+0x7b],edi
  40ee9d:	fs jb  0x40ee77
  40eea0:	mov    ch,0x7f
  40eea2:	test   eax,0x640624c7
  40eea7:	xchg   DWORD PTR [ecx+0x34],edx
  40eeaa:	jl     0x40eee2
  40eeac:	lods   al,BYTE PTR ds:[esi]
  40eead:	out    dx,al
  40eeae:	lds    ebp,FWORD PTR [esi+0x1c2d1428]
  40eeb4:	loopne 0x40eea1
  40eeb6:	int    0x21
  40eeb8:	pop    esp
  40eeb9:	rol    DWORD PTR [edi-0x4347bea0],cl
  40eebf:	les    ebx,FWORD PTR [ecx+ecx*8-0x33]
  40eec3:	dec    ah
  40eec5:	pop    edi
  40eec6:	fdivr  st(1),st
  40eec8:	cmp    eax,0x5adccb7e
  40eecd:	test   ebx,edx
  40eecf:	jmp    0x3d5c:0xb20e7aaa
  40eed6:	push   esi
  40eed7:	push   es
  40eed8:	sbb    al,0x7a
  40eeda:	and    DWORD PTR [ecx-0x71],ecx
  40eedd:	lods   eax,DWORD PTR ds:[esi]
  40eede:	loopne 0x40ef1b
  40eee0:	loop   0x40ee8c
  40eee2:	xchg   esi,eax
  40eee3:	std    
  40eee4:	xchg   BYTE PTR [eax-0x19abff0c],al
  40eeea:	dec    ecx
  40eeeb:	sub    eax,0x89f479cb
  40eef0:	dec    ebp
  40eef1:	jb     0x22dda90e
  40eef7:	push   0x87a35fb0
  40eefc:	adc    eax,0x882936b4
  40ef01:	xor    BYTE PTR [ebx],bh
  40ef03:	push   0x2ec80ad3
  40ef08:	icebp  
  40ef09:	and    dh,BYTE PTR [esi]
  40ef0b:	loopne 0x40ee8f
  40ef0d:	(bad)  
  40ef0e:	jnp    0x40ef3a
  40ef10:	rcr    BYTE PTR [eax+0x32d4326a],1
  40ef16:	ret    0xbe46
  40ef19:	mov    bl,BYTE PTR [eax]
  40ef1b:	je     0x40ef0f
  40ef1d:	mov    eax,0x568c7b1f
  40ef22:	test   edi,ebx
  40ef24:	fild   DWORD PTR [ecx]
  40ef26:	xchg   ebx,eax
  40ef27:	mov    ebx,0x390cc558
  40ef2c:	shr    DWORD PTR [ecx-0x1b],cl
  40ef2f:	or     ch,BYTE PTR [ebp-0x4854ade7]
  40ef35:	out    0xea,eax
  40ef37:	push   0xbb65ce0e
  40ef3c:	lods   al,BYTE PTR ds:[esi]
  40ef3d:	and    ebp,DWORD PTR [ebp-0x6]
  40ef40:	pop    edx
  40ef41:	and    al,0x99
  40ef43:	mov    ss,eax
  40ef45:	cmp    al,0xbf
  40ef47:	push   0xd4c76a75
  40ef4c:	lea    eax,[esi-0x1a]
  40ef4f:	ficomp WORD PTR ds:0xcee54a5f
  40ef55:	repz push es
  40ef57:	les    esi,FWORD PTR [edx+0x73f9c029]
  40ef5d:	sub    ch,cl
  40ef5f:	inc    ebx
  40ef60:	inc    BYTE PTR [eax+ebx*4]
  40ef63:	xchg   edx,eax
  40ef64:	shl    DWORD PTR [edx],0xfb
  40ef67:	fsubr  st(7),st
  40ef69:	es aam 0xc
  40ef6c:	(bad)  
  40ef6d:	(bad)  
  40ef6e:	mov    cl,0x62
  40ef70:	push   eax
  40ef71:	pushf  
  40ef72:	sbb    eax,0xf04af899
  40ef77:	inc    eax
  40ef78:	aas    
  40ef79:	mov    edx,0xfcd2f1f4
  40ef7e:	cli    
  40ef7f:	je     0x40ef83
  40ef81:	mov    ds,WORD PTR [ebx+esi*1]
  40ef84:	push   eax
  40ef85:	and    BYTE PTR [edi+0x2e],bh
  40ef88:	(bad)  
  40ef8a:	cdq    
  40ef8b:	push   edx
  40ef8c:	mov    esi,0xbff877ab
  40ef91:	loopne 0x40efb4
  40ef93:	xlat   BYTE PTR ds:[ebx]
  40ef94:	mov    ebx,0xe73fbca2
  40ef99:	inc    edx
  40ef9a:	cmc    
  40ef9b:	das    
  40ef9c:	nop
  40ef9d:	repnz adc BYTE PTR [edi-0x409262f1],al
  40efa4:	sti    
  40efa5:	sub    BYTE PTR ds:[edx-0x29941d5a],0x8b
  40efad:	aaa    
  40efae:	pop    edi
  40efaf:	jg     0x40ef4b
  40efb1:	push   edi
  40efb2:	sub    BYTE PTR [ebx+0x17],0x51
  40efb6:	clc    
  40efb7:	cmp    BYTE PTR [eax],dl
  40efb9:	les    ecx,FWORD PTR [ebp-0x6b4c9e2f]
  40efbf:	pop    es
  40efc0:	mov    WORD PTR [edi+0x65],es
  40efc3:	push   edi
  40efc4:	cmp    ecx,esi
  40efc6:	ficomp DWORD PTR [edi-0x37aa9fe]
  40efcc:	mov    ds:0xd7aa9661,al
  40efd1:	es dec ebp
  40efd3:	inc    ecx
  40efd4:	cmp    eax,DWORD PTR [eax+0x6c]
  40efd7:	xchg   ecx,eax
  40efd8:	or     eax,0xab8c99c2
  40efdd:	pop    ss
  40efde:	cmp    BYTE PTR [ecx+ebp*4],dl
  40efe1:	and    eax,0x9d1884db
  40efe6:	sahf   
  40efe7:	adc    al,0xba
  40efe9:	ror    BYTE PTR [ecx],cl
  40efeb:	jg     0x40f03b
  40efed:	or     al,0xc9
  40efef:	ins    BYTE PTR es:[edi],dx
  40eff0:	cmp    esi,DWORD PTR [esi+0x72157235]
  40eff6:	aaa    
  40eff7:	fldenv [edx-0xc89dacf]
  40effd:	aas    
  40effe:	mov    ecx,0x14619d1
  40f003:	(bad)  
  40f004:	jg     0x40f07a
  40f006:	or     ch,BYTE PTR [ecx+0x73]
  40f009:	lds    esi,FWORD PTR [ebx-0x53]
  40f00c:	retf   
  40f00d:	and    DWORD PTR [edi],ebp
  40f00f:	xchg   ebx,eax
  40f010:	outs   dx,DWORD PTR ds:[esi]
  40f011:	or     BYTE PTR [edi],al
  40f013:	cmp    eax,0x54b2a748
  40f018:	ds cs cmp al,0xfc
  40f01c:	or     eax,0xbd4b04f5
  40f021:	retf   0xbf3a
  40f024:	lahf   
  40f025:	fild   WORD PTR [esi]
  40f027:	leave  
  40f028:	and    BYTE PTR [ebx-0x75],cl
  40f02b:	pop    esi
  40f02c:	lods   eax,DWORD PTR ds:[esi]
  40f02d:	jge    0x40efca
  40f02f:	out    0x66,eax
  40f031:	in     al,0x3d
  40f033:	(bad)  
  40f034:	aaa    
  40f035:	adc    edi,edi
  40f037:	test   BYTE PTR [ebp+eax*2+0x7572cbbc],bl
  40f03e:	fisttp WORD PTR [ebx-0x3086b0a5]
  40f044:	push   eax
  40f045:	sub    DWORD PTR [edi-0x59df9d57],0x793c23b1
  40f04f:	es (bad) 
  40f051:	adc    BYTE PTR [ecx],al
  40f053:	lock and eax,0x236faf67
  40f059:	and    BYTE PTR ds:0x7b63323f,cl
  40f05f:	and    dh,dh
  40f061:	xchg   ebx,eax
  40f062:	sub    eax,0x85827e14
  40f067:	idiv   BYTE PTR [ecx+0x4]
  40f06a:	js     0x40f07f
  40f06c:	mov    BYTE PTR ss:[edi+0x3d9cdbfe],0x2
  40f074:	or     al,0xfd
  40f076:	mov    BYTE PTR [edi+0xe6dbdf3],dl
  40f07c:	add    eax,0x5ec3e4cd
  40f081:	push   ebp
  40f082:	and    al,0xab
  40f084:	bound  ecx,QWORD PTR [edi]
  40f086:	test   DWORD PTR [eax],ecx
  40f088:	idiv   edi
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0x8d3a:0xaa146552
  40f09f:	push   edi
  40f0a0:	stos   BYTE PTR es:[edi],al
  40f0a1:	jo     0x40f051
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    al,bh
  40f0aa:	movlps QWORD PTR [edi],xmm4
  40f0ad:	xchg   DWORD PTR [esi+0x418f4b4],eax
  40f0b3:	inc    edx
  40f0b4:	stos   BYTE PTR es:[edi],al
  40f0b5:	xor    eax,0xd4b3aff1
  40f0ba:	test   al,0x58
  40f0bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0bd:	mov    ebp,0x678cf2f0
  40f0c2:	jne    0x40f0b3
  40f0c4:	xor    ebx,DWORD PTR [edi]
  40f0c6:	adc    al,BYTE PTR [edi]
  40f0c8:	ret    0x26f6
  40f0cb:	in     al,dx
  40f0cc:	repz sbb DWORD PTR [ebx+0x25],edi
  40f0d0:	fidiv  DWORD PTR [ebx-0x7e]
  40f0d3:	and    eax,0x59722875
  40f0d8:	sbb    BYTE PTR [ebx+eax*8-0x74],dl
  40f0dc:	pop    eax
  40f0dd:	int    0x96
  40f0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0e0:	ins    BYTE PTR es:[edi],dx
  40f0e1:	mov    DWORD PTR [ecx-0x7fc66a45],edi
  40f0e7:	clc    
  40f0e8:	pop    ebx
  40f0e9:	loope  0x40f145
  40f0eb:	das    
  40f0ec:	mov    gs,WORD PTR [edx+0x7b78318a]
  40f0f2:	mov    edi,DWORD PTR [ebx+0x769029c1]
  40f0f8:	enter  0x230f,0xa9
  40f0fc:	test   al,0x6f
  40f0fe:	sbb    eax,0xa4df4d14
  40f103:	stc    
  40f104:	and    eax,0x59c147a0
  40f109:	sbb    al,0xae
  40f10b:	and    dh,0x2
  40f10e:	and    esi,DWORD PTR [edx-0x69]
  40f111:	fild   WORD PTR [ebx-0x75]
  40f114:	daa    
  40f115:	aaa    
  40f116:	jmp    0x9c124a0d
  40f11b:	push   0x59c978f0
  40f120:	sub    esi,DWORD PTR [edx+ebx*8-0x67]
  40f124:	addr16 icebp 
  40f126:	into   
  40f127:	mov    BYTE PTR [ebp-0x43],dl
  40f12a:	mov    eax,ds:0xf01d0c9a
  40f12f:	arpl   WORD PTR [ecx-0x31],bp
  40f132:	call   0x2142c970
  40f137:	xchg   BYTE PTR [eax-0x5a],al
  40f13a:	cmp    BYTE PTR [ebx+0x7e9fb43e],ch
  40f140:	shl    edi,cl
  40f142:	adc    eax,DWORD PTR [ecx+0x5cd1856d]
  40f148:	xchg   DWORD PTR [ebp-0x74d702df],edx
  40f14e:	imul   esp,DWORD PTR [edi+eax*8+0x57],0x4
  40f153:	sbb    BYTE PTR [esi],cl
  40f155:	jge    0x40f14b
  40f157:	outs   dx,DWORD PTR ds:[esi]
  40f158:	and    ch,BYTE PTR [edx-0x4f]
  40f15b:	and    bl,BYTE PTR [esi]
  40f15d:	inc    ebx
  40f15e:	loopne 0x40f14b
  40f160:	in     al,0x9d
  40f162:	es inc ecx
  40f164:	add    cl,al
  40f166:	adc    eax,0x9e47c63c
  40f16b:	pop    es
  40f16c:	add    ecx,DWORD PTR [ebp+0x6]
  40f16f:	xor    eax,0x11f2d529
  40f174:	mov    WORD PTR [ebx-0x5d],es
  40f177:	and    al,0xae
  40f179:	cdq    
  40f17a:	mov    ebp,0xe0b5a9a9
  40f17f:	cmp    eax,0x67c0d363
  40f184:	xor    bh,BYTE PTR [ecx+0x3]
  40f187:	fs cmp al,0x44
  40f18a:	push   ds
  40f18b:	test   DWORD PTR [eax-0x18],ebx
  40f18e:	push   0xffffffdc
  40f190:	sbb    eax,0xdd169ba8
  40f195:	sub    al,0x60
  40f197:	mov    cl,0x1e
  40f199:	mov    cl,0x60
  40f19b:	inc    esi
  40f19c:	gs xor esi,esi
  40f19f:	cmp    al,0x54
  40f1a1:	lods   eax,DWORD PTR ds:[esi]
  40f1a2:	xor    cl,BYTE PTR ds:0xdc69b603
  40f1a8:	jne    0x40f131
  40f1aa:	xchg   ebx,eax
  40f1ab:	or     al,BYTE PTR [ebx+0x18]
  40f1ae:	inc    ecx
  40f1af:	dec    ebx
  40f1b0:	loope  0x40f22f
  40f1b2:	jmp    0x44da:0x618355ce
  40f1b9:	inc    cl
  40f1bb:	mov    ch,0x7b
  40f1bd:	retf   0xa7f
  40f1c0:	cld    
  40f1c1:	aad    0x17
  40f1c3:	jg     0x40f1d8
  40f1c5:	mov    bl,bl
  40f1c7:	hlt    
  40f1c8:	add    BYTE PTR [esp+edx*8+0x50d67248],ch
  40f1cf:	or     bl,al
  40f1d1:	repz shl BYTE PTR [ebp+0x2d10a639],cl
  40f1d8:	cld    
  40f1d9:	lods   eax,DWORD PTR ds:[esi]
  40f1da:	out    0xdd,al
  40f1dc:	push   ebp
  40f1dd:	adc    al,0xd8
  40f1df:	shl    BYTE PTR [esi-0x3f2c73df],1
  40f1e5:	mov    esp,0x31b1880d
  40f1ea:	test   DWORD PTR [ecx+0x10],esi
  40f1ed:	inc    ecx
  40f1ee:	xchg   ebp,eax
  40f1ef:	push   0x11dd510c
  40f1f4:	xchg   ecx,eax
  40f1f5:	jne    0x40f26c
  40f1f7:	nop
  40f1f8:	pop    ebx
  40f1f9:	popa   
  40f1fa:	cli    
  40f1fb:	cmc    
  40f1fc:	adc    DWORD PTR [edi],edx
  40f1fe:	mov    dh,BYTE PTR [edx]
  40f200:	and    al,0x2b
  40f202:	add    ah,ch
  40f204:	sbb    al,0xb2
  40f206:	xor    ecx,DWORD PTR ds:0xfb45bcf8
  40f20c:	add    al,0x8c
  40f20e:	xor    ebx,DWORD PTR [edx-0x44]
  40f211:	mov    al,ds:0x47fe4986
  40f216:	pushw  0x2904
  40f21a:	cmp    eax,0xd9dc57f0
  40f21f:	sub    ch,cl
  40f221:	jmp    0xa7cdb03c
  40f226:	jbe    0x40f1cc
  40f228:	mov    ebx,0xfd61fb08
  40f22d:	call   FWORD PTR [esp+esi*1-0x70]
  40f231:	lea    edx,[edx]
  40f233:	cmp    al,0xe9
  40f235:	call   0x52fb49ad
  40f23a:	mov    cl,0x64
  40f23c:	popa   
  40f23d:	leave  
  40f23e:	xor    eax,0x8a21d84c
  40f243:	mov    bl,BYTE PTR [ebx]
  40f245:	push   ds
  40f246:	ror    DWORD PTR [ebx+0x79df723c],cl
  40f24c:	jb     0x40f25c
  40f24e:	in     al,dx
  40f24f:	xchg   BYTE PTR [ebx],ah
  40f251:	mov    esi,0xaa3d94a0
  40f256:	lea    ebp,[eax+0x340980b1]
  40f25c:	idiv   DWORD PTR [esi-0x3f]
  40f25f:	push   ds
  40f260:	xor    ebx,DWORD PTR [edx]
  40f262:	inc    ebx
  40f263:	inc    esp
  40f264:	pop    esi
  40f265:	sbb    ah,BYTE PTR [ecx-0x5e]
  40f268:	cmp    ebp,ebp
  40f26a:	out    0x5e,al
  40f26c:	in     eax,dx
  40f26d:	jne    0x40f255
  40f26f:	add    BYTE PTR [edx-0x134f7943],ch
  40f275:	sar    DWORD PTR [ebp+0x49],0x2e
  40f279:	mov    bh,0x2c
  40f27b:	jg     0x40f2f3
  40f27d:	sar    BYTE PTR ds:0x50e66478,1
  40f283:	sahf   
  40f284:	adc    ebp,DWORD PTR [edi-0x79a8827e]
  40f28a:	mov    ah,BYTE PTR [edx]
  40f28c:	stc    
  40f28d:	ja     0x40f296
  40f28f:	inc    edi
  40f290:	mov    bh,0xe4
  40f292:	push   eax
  40f294:	lds    edx,FWORD PTR [esi-0x26d63c81]
  40f29a:	ins    DWORD PTR es:[edi],dx
  40f29b:	aad    0x7e
  40f29d:	test   ebp,esp
  40f29f:	fwait
  40f2a0:	add    BYTE PTR [edx],bh
  40f2a2:	mov    cl,0x3f
  40f2a4:	push   edx
  40f2a5:	jmp    0x40f283
  40f2a7:	pop    ecx
  40f2a8:	adc    DWORD PTR [edi-0x3b],edx
  40f2ab:	jp     0x40f2d5
  40f2ad:	stos   BYTE PTR es:[edi],al
  40f2ae:	test   eax,0xbda56952
  40f2b3:	xchg   esp,eax
  40f2b4:	mov    dl,0xa0
  40f2b6:	sbb    dh,ah
  40f2b8:	stos   DWORD PTR es:[edi],eax
  40f2b9:	mov    ds:0x59a1755d,eax
  40f2be:	mov    edx,0xa0549eb0
  40f2c3:	xchg   ebx,eax
  40f2c4:	idiv   ebx
  40f2c6:	push   ss
  40f2c7:	popa   
  40f2c8:	fwait
  40f2c9:	jnp    0x40f33a
  40f2cb:	or     ebp,DWORD PTR [eax-0x3c]
  40f2ce:	xchg   DWORD PTR [eax-0x2028e415],ecx
  40f2d4:	sbb    ecx,DWORD PTR [eax+0xe]
  40f2d7:	push   cs
  40f2d8:	loope  0x40f2ad
  40f2da:	push   edi
  40f2db:	ja     0x40f2e1
  40f2dd:	ret    
  40f2de:	push   cs
  40f2df:	cmp    ecx,esi
  40f2e1:	fdivr  QWORD PTR [ebp+0x69]
  40f2e4:	adc    BYTE PTR [ebp+0x20],0x38
  40f2e8:	dec    eax
  40f2e9:	pop    eax
  40f2ea:	bound  esp,QWORD PTR [edi+0x5549d3cb]
  40f2f0:	pop    ebp
  40f2f1:	dec    esp
  40f2f2:	retf   
  40f2f3:	cmp    al,BYTE PTR [esp+ebx*4+0xabc2a06]
  40f2fa:	sbb    ch,0xbf
  40f2fd:	push   es
  40f2fe:	loopne 0x40f364
  40f300:	into   
  40f301:	and    bh,BYTE PTR [edx-0x5acb506c]
  40f307:	(bad)  
  40f308:	xor    BYTE PTR [eax+edx*4],ch
  40f30b:	jnp    0x40f2bc
  40f30d:	xor    al,0x95
  40f30f:	imul   ebx,DWORD PTR ds:0xb31cbf57,0xe7e6b754
  40f319:	shl    DWORD PTR [ebp+0x3aa421d9],1
  40f31f:	mov    ch,0x1e
  40f321:	test   DWORD PTR [edx+0x4f],esp
  40f324:	enter  0xc546,0xea
  40f328:	loopne 0x40f367
  40f32a:	dec    edi
  40f32b:	xor    edx,DWORD PTR [eax+0x2e]
  40f32e:	dec    ebx
  40f32f:	xor    al,0xf8
  40f331:	mov    cl,0xc3
  40f333:	jno    0x40f2ed
  40f335:	or     BYTE PTR [ebx+0x17],0x9f
  40f339:	cmc    
  40f33a:	xlat   BYTE PTR ds:[ebx]
  40f33b:	push   cs
  40f33c:	aaa    
  40f33d:	inc    ecx
  40f33e:	clc    
  40f33f:	outs   dx,DWORD PTR ds:[esi]
  40f340:	shl    DWORD PTR [ecx],1
  40f342:	jecxz  0x40f2e6
  40f344:	fisubr WORD PTR [ecx-0x26f493e6]
  40f34a:	pop    edi
  40f34b:	sahf   
  40f34c:	mov    dh,0xa8
  40f34e:	shr    DWORD PTR [ebp-0x3d36a4a2],cl
  40f354:	or     al,0x0
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x4a
  40f384:	jg     0x40f3d9
  40f386:	stos   BYTE PTR es:[edi],al
  40f387:	sub    ebp,DWORD PTR [eax+0x14be1818]
  40f38d:	sbb    BYTE PTR [eax],bl
  40f38f:	mov    ecx,0x462703c6
  40f394:	inc    ebx
  40f395:	(bad)  
  40f396:	mov    ah,0xcc
  40f398:	test   bh,bh
  40f39a:	mov    ss,WORD PTR [ecx-0x18]
  40f39d:	push   edi
  40f39e:	or     eax,0xf6bd2877
  40f3a3:	jp     0x40f373
  40f3a5:	gs lahf 
  40f3a7:	retf   0x2a35
  40f3aa:	pop    ecx
  40f3ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3ac:	fwait
  40f3ad:	push   edi
  40f3ae:	xor    eax,DWORD PTR [esp+ebx*8-0x7f487170]
  40f3b5:	jp     0xaa0821f6
  40f3bb:	mov    bh,0xd2
  40f3bd:	dec    esi
  40f3be:	dec    esp
  40f3bf:	dec    esi
  40f3c0:	cmp    eax,0x60a21eee
  40f3c5:	js     0x40f38f
  40f3c7:	sbb    al,0xe2
  40f3c9:	jno    0x40f3ad
  40f3cb:	jmp    0xfa1ebeb3
  40f3d0:	xor    BYTE PTR ds:0x566916ae,al
  40f3d6:	test   DWORD PTR [ebp+0x13],edi
  40f3d9:	in     eax,0xa6
  40f3db:	sbb    ch,BYTE PTR [edi]
  40f3dd:	xor    esp,DWORD PTR [edi+ebp*8]
  40f3e0:	mov    ebp,0x726b2ad8
  40f3e5:	xor    al,ch
  40f3e7:	jg     0x40f3f7
  40f3e9:	ret    0xef8
  40f3ec:	dec    esi
  40f3ed:	xor    eax,0x9138af5
  40f3f2:	dec    ecx
  40f3f3:	fild   DWORD PTR [edi]
  40f3f5:	aad    0x42
  40f3f7:	or     eax,esp
  40f3f9:	xchg   ebp,eax
  40f3fa:	xor    eax,0x7bf4eff9
  40f3ff:	fwait
  40f400:	nop
  40f401:	(bad)  
  40f402:	xchg   edi,eax
  40f403:	out    dx,eax
  40f404:	lea    edi,ds:0x1728ebaa
  40f40a:	aaa    
  40f40b:	xor    esp,DWORD PTR [edx]
  40f40d:	retf   0x3e11
  40f410:	fisttp WORD PTR [edi+0x14ca11ae]
  40f416:	pop    es
  40f417:	sahf   
  40f418:	je     0x40f489
  40f41a:	ja     0x40f3b6
  40f41c:	repnz mov ecx,cs
  40f41f:	xor    eax,0x83638dd8
  40f424:	icebp  
  40f425:	fcom   QWORD PTR [ecx+0x7c583f6f]
  40f42b:	stc    
  40f42c:	test   DWORD PTR [eax+0x619d6ef3],edx
  40f432:	add    al,0xad
  40f434:	push   esp
  40f435:	add    bl,BYTE PTR [ebx]
  40f437:	xchg   ebp,eax
  40f438:	js     0x40f414
  40f43a:	in     eax,dx
  40f43b:	test   BYTE PTR [esi+edx*4],cl
  40f43e:	jl     0x40f492
  40f440:	or     eax,0x323bf879
  40f445:	ins    DWORD PTR es:[di],dx
  40f447:	pusha  
  40f448:	mov    al,0x5f
  40f44a:	push   es
  40f44b:	push   esi
  40f44c:	neg    BYTE PTR [ebp+0x56df187b]
  40f452:	(bad)  
  40f453:	pop    edx
  40f454:	fcom   DWORD PTR [esp+ebp*4-0x47]
  40f458:	pop    edi
  40f459:	xchg   BYTE PTR [eax-0x15],dl
  40f45c:	xchg   esi,eax
  40f45d:	inc    esi
  40f45e:	call   0x61c7:0xb9e08fd1
  40f465:	mov    edx,0xad62a2e
  40f46a:	test   ch,bl
  40f46c:	cld    
  40f46d:	cli    
  40f46e:	cwde   
  40f46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f470:	scas   eax,DWORD PTR es:[edi]
  40f471:	adc    al,0x7f
  40f473:	stc    
  40f474:	cwde   
  40f475:	sahf   
  40f476:	into   
  40f477:	add    eax,0x9ca5ca67
  40f47c:	pop    esi
  40f47d:	jmp    0x80cb2c14
  40f482:	out    0x3e,eax
  40f484:	pop    esp
  40f485:	mov    eax,0x1796576c
  40f48a:	cs dec edi
  40f48c:	and    eax,0xe8f25a11
  40f491:	ror    BYTE PTR [edx+0x1f705371],1
  40f497:	pop    ebp
  40f498:	adc    al,0x17
  40f49a:	ss nop
  40f49c:	or     DWORD PTR [edi-0x2c],eax
  40f49f:	int    0xc4
  40f4a1:	mov    cl,0x4c
  40f4a3:	daa    
  40f4a4:	sbb    al,0x4a
  40f4a6:	add    eax,0x27d55b5a
  40f4ab:	lds    esi,FWORD PTR [edi-0x71fd77c2]
  40f4b1:	jne    0x40f47a
  40f4b3:	xchg   edx,eax
  40f4b4:	mov    ds:0x64c561eb,eax
  40f4b9:	mov    ebx,0xb6f4114f
  40f4be:	jmp    0x40f4e5
  40f4c0:	cmc    
  40f4c1:	and    DWORD PTR [esi+0x5409750b],eax
  40f4c7:	loop   0x40f4c5
  40f4c9:	jmp    0x2dd3a48f
  40f4ce:	bsr    ebp,ebp
  40f4d1:	lock in eax,dx
  40f4d3:	jns    0x40f4e0
  40f4d5:	js     0x40f52d
  40f4d7:	push   ss
  40f4d8:	mov    esp,0x58737c03
  40f4dd:	pop    ebp
  40f4de:	cmp    eax,ecx
  40f4e0:	nop
  40f4e1:	loop   0x40f4ac
  40f4e3:	cs stc 
  40f4e5:	add    eax,0xf91f370a
  40f4ea:	sbb    al,0x5f
  40f4ec:	dec    esp
  40f4ed:	xchg   ebx,eax
  40f4ee:	(bad)  
  40f4f1:	jnp    0x40f4b1
  40f4f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4f4:	(bad)  
  40f4f5:	jbe    0x40f531
  40f4f7:	movaps xmm3,XMMWORD PTR [edi-0x205bab6b]
  40f4fe:	jge    0x40f576
  40f500:	cmp    eax,0x76e78e0d
  40f505:	mov    dl,0x9d
  40f507:	sub    DWORD PTR ds:0xca613c71,ecx
  40f50d:	inc    edx
  40f50e:	fadd   QWORD PTR [esi]
  40f510:	pusha  
  40f511:	out    dx,eax
  40f512:	adc    BYTE PTR [ebp+0x21],dh
  40f515:	stos   DWORD PTR es:[edi],eax
  40f516:	in     al,0x2
  40f518:	and    dl,BYTE PTR [esi+0x7f6d3f5d]
  40f51e:	ret    0x20c8
  40f521:	pushf  
  40f522:	push   edi
  40f523:	jnp    0x40f4ac
  40f525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f526:	pusha  
  40f527:	nop
  40f528:	sahf   
  40f529:	mov    ds:0x6eb8903,al
  40f52e:	sbb    ebp,ebx
  40f530:	xchg   BYTE PTR [ecx],cl
  40f532:	hlt    
  40f533:	rcr    DWORD PTR [edi+0x68],1
  40f536:	jne    0x40f4f3
  40f538:	fst    DWORD PTR [edi+0x1f]
  40f53b:	clc    
  40f53c:	add    esp,DWORD PTR [edi]
  40f53e:	ss and eax,0x548c864
  40f544:	and    al,0x5
  40f546:	nop
  40f547:	jae    0x40f51d
  40f549:	xor    bh,BYTE PTR [edi+0x9]
  40f54c:	add    DWORD PTR [ecx+eiz*8-0x482b8401],eax
  40f553:	cmc    
  40f554:	or     BYTE PTR ss:[ebp-0x2e10148],bh
  40f55b:	sub    dl,ah
  40f55d:	or     al,0xc2
  40f55f:	push   esi
  40f560:	fnsave [edi-0x47bc3767]
  40f566:	jns    0x40f5a1
  40f568:	sbb    eax,0x2eee3370
  40f56d:	or     DWORD PTR [eax+0x5c],eax
  40f570:	rcr    BYTE PTR [ebp-0x74],0x38
  40f574:	sbb    eax,0xf5fadb4e
  40f579:	jb     0x40f54d
  40f57b:	adc    edx,DWORD PTR ds:0x19e7ed27
  40f581:	push   ds
  40f582:	pop    ss
  40f583:	imul   esp,DWORD PTR [edi],0xffffffef
  40f586:	aam    0x82
  40f588:	sub    ecx,DWORD PTR [edi]
  40f58a:	or     DWORD PTR [edi-0x253db91b],edi
  40f590:	dec    ebp
  40f591:	mov    ah,bh
  40f593:	mov    esp,DWORD PTR [esi]
  40f595:	pusha  
  40f596:	mov    WORD PTR [edx-0x423699da],?
  40f59c:	les    esp,FWORD PTR [edx+eax*4-0x62]
  40f5a0:	sub    ebp,0xffffffa4
  40f5a3:	mov    esp,0x6cfe6350
  40f5a8:	leave  
  40f5a9:	jmp    0x22f2964b
  40f5ae:	push   cs
  40f5af:	imul   DWORD PTR [edx+ebx*4-0x52]
  40f5b3:	test   al,0x7c
  40f5b5:	sbb    eax,0x7c109439
  40f5ba:	addr16 repz or eax,0x8b065122
  40f5c1:	jmp    0x40f5be
  40f5c3:	mov    ebp,0xb557ecc6
  40f5c8:	repz xlat BYTE PTR ds:[ebx]
  40f5ca:	ja     0x40f57f
  40f5cc:	add    DWORD PTR [ecx+edx*8+0x7d],0x90e34975
  40f5d4:	mov    ah,0x71
  40f5d6:	inc    esp
  40f5d7:	jb     0x40f600
  40f5d9:	ins    DWORD PTR es:[edi],dx
  40f5da:	adc    al,0xa6
  40f5dc:	mov    bh,0x7e
  40f5de:	xor    dh,dl
  40f5e0:	cmp    BYTE PTR [edi-0x51],dl
  40f5e3:	inc    edi
  40f5e4:	lods   eax,DWORD PTR ds:[esi]
  40f5e5:	and    eax,0xe79eecef
  40f5ea:	rol    DWORD PTR [ebx+0x73],0x6a
  40f5ee:	out    dx,eax
  40f5ef:	jbe    0x40f642
  40f5f1:	or     ecx,edx
  40f5f3:	outs   dx,BYTE PTR ds:[esi]
  40f5f4:	sub    al,0x1
  40f5f6:	fsubr  QWORD PTR [ecx+0x2f]
  40f5f9:	mov    cl,0x1e
  40f5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5fc:	bound  eax,QWORD PTR [ebx]
  40f5fe:	retf   
  40f5ff:	or     BYTE PTR [ecx+0x1f],dh
  40f602:	stos   DWORD PTR es:[edi],eax
  40f603:	mov    bl,0x11
  40f605:	out    0xa5,al
  40f607:	dec    eax
  40f608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f609:	add    eax,0xe5009efb
  40f60e:	xor    bl,cl
  40f610:	lea    ebp,[edi+0x2cf56812]
  40f616:	pushf  
  40f617:	(bad)  
  40f618:	arpl   bp,di
  40f61a:	rcl    DWORD PTR ds:0xfcd097e6,1
  40f620:	push   edx
  40f621:	aas    
  40f622:	sbb    eax,0x479e733e
  40f627:	andps  xmm0,xmm0
  40f62a:	mov    dl,0x41
  40f62c:	xor    eax,0x57313b50
  40f632:	pop    esp
  40f633:	or     esp,eax
  40f635:	popf   
  40f636:	popf   
  40f637:	cld    
  40f638:	push   ss
  40f639:	jo     0x40f665
  40f63b:	scas   al,BYTE PTR es:[edi]
  40f63c:	es daa 
  40f63e:	js     0x40f653
  40f640:	mov    ecx,DWORD PTR [ebp-0x8]
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422558
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42268c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx+0x70cb6fbc],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	out    dx,al
  40f732:	mov    dl,ah
  40f734:	xor    BYTE PTR [ecx+esi*4-0x77],dl
  40f738:	inc    edx
  40f739:	pop    esi
  40f73a:	retf   0x9e4a
  40f73d:	clc    
  40f73e:	jo     0x40f770
  40f740:	jno    0x40f6ef
  40f742:	adc    eax,0xc43ef18a
  40f747:	push   edx
  40f748:	cmp    eax,ebx
  40f74a:	cdq    
  40f74b:	fwait
  40f74c:	cwde   
  40f74d:	rcl    DWORD PTR [ebp-0x5f],cl
  40f750:	(bad)  
  40f751:	sub    BYTE PTR [edx+0x3a],dl
  40f754:	sbb    al,0x3c
  40f756:	pop    es
  40f757:	sbb    BYTE PTR [eax+0x64],ah
  40f75a:	into   
  40f75b:	pop    es
  40f75c:	sti    
  40f75d:	loopne 0x40f7b8
  40f75f:	or     BYTE PTR [ebx],ch
  40f761:	xor    BYTE PTR [ebx-0x3b0be193],dh
  40f767:	dec    edi
  40f768:	dec    eax
  40f769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f76a:	out    dx,eax
  40f76b:	inc    ebp
  40f76c:	cmp    esi,DWORD PTR [ecx]
  40f76e:	add    eax,0xbea574bb
  40f773:	mov    ds:0x9a0faccb,eax
  40f778:	lahf   
  40f779:	sub    al,0x41
  40f77b:	int3   
  40f77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f77d:	mov    edi,0x5d2b4c76
  40f782:	dec    ebx
  40f783:	sub    bh,BYTE PTR [eax]
  40f785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f786:	push   esp
  40f787:	and    eax,0x11a9b1f0
  40f78c:	(bad)  
  40f78d:	jecxz  0x40f755
  40f78f:	cmp    DWORD PTR [edx],0xad40a72c
  40f795:	cmp    eax,0x72ed69de
  40f79a:	stos   BYTE PTR es:[edi],al
  40f79b:	inc    esi
  40f79c:	inc    ebp
  40f79d:	je     0x40f73f
  40f79f:	add    ecx,DWORD PTR [eiz*2-0x254f2235]
  40f7a6:	data16 das 
  40f7a8:	pushf  
  40f7a9:	push   ss
  40f7aa:	push   0x10
  40f7ac:	sub    BYTE PTR [ebx+0x41298b46],0x26
  40f7b3:	cmp    DWORD PTR [ecx],esi
  40f7b5:	repnz (bad) 
  40f7b7:	cmp    eax,DWORD PTR [eax+0x26728fc3]
  40f7bd:	jno    0x40f789
  40f7bf:	push   eax
  40f7c0:	push   eax
  40f7c1:	test   BYTE PTR [esi+esi*2],bl
  40f7c4:	(bad)  
  40f7c5:	jg     0x40f7ef
  40f7c7:	retf   
  40f7c8:	mov    ebx,0x55f234c2
  40f7cd:	fidiv  WORD PTR [ebx+0x916d5e8]
  40f7d4:	(bad)  [edx-0x21]
  40f7d7:	fs push edi
  40f7d9:	mov    ebp,0xbddf8ac6
  40f7de:	push   0x2e0908b9
  40f7e3:	dec    ecx
  40f7e4:	xor    bh,BYTE PTR [ebp-0x6d6bd042]
  40f7ea:	(bad)  
  40f7eb:	cmp    BYTE PTR [edx+ebx*4-0x39741e99],ah
  40f7f2:	xlat   BYTE PTR ds:[ebx]
  40f7f3:	cli    
  40f7f4:	add    al,0x2e
  40f7f6:	(bad)  
  40f7f8:	and    esi,edi
  40f7fa:	adc    esp,ebp
  40f7fc:	sar    DWORD PTR [esi+0x60182f2],1
  40f802:	sub    al,0x54
  40f804:	pop    es
  40f805:	aam    0x55
  40f807:	ds add al,0xb0
  40f80a:	retf   0x8f8e
  40f80d:	repnz sbb ebx,DWORD PTR [edi+edi*4]
  40f811:	xor    ax,0x46db
  40f815:	in     eax,0x5c
  40f817:	lods   al,BYTE PTR ds:[esi]
  40f818:	je     0x40f86e
  40f81a:	mov    DWORD PTR [ebp+0x5903d785],esp
  40f820:	pop    ebx
  40f821:	inc    edx
  40f822:	outs   dx,BYTE PTR ds:[esi]
  40f823:	pop    ebx
  40f824:	xor    BYTE PTR [edx+0x1950bee4],al
  40f82a:	mov    al,ds:0x1a7d407c
  40f82f:	mov    esp,0xb66856d
  40f834:	and    DWORD PTR [esi],edi
  40f836:	repz xor eax,0xbf2bd55
  40f83c:	pop    ds
  40f83d:	(bad)  
  40f83e:	out    dx,eax
  40f83f:	aam    0xf3
  40f841:	add    eax,0x52c0ae4f
  40f846:	and    al,0xcf
  40f848:	dec    ebx
  40f849:	mov    bh,BYTE PTR [ecx+0x1ae0854e]
  40f84f:	js     0x40f7e8
  40f851:	outs   dx,BYTE PTR ds:[esi]
  40f852:	jg     0x40f892
  40f854:	jmp    DWORD PTR [edx+0x39]
  40f857:	sub    eax,0x98402fd6
  40f85c:	into   
  40f85d:	int    0xa2
  40f85f:	jmp    0x2eeb:0xc8a0b060
  40f866:	daa    
  40f867:	popf   
  40f868:	ss call 0x60d76ff
  40f86e:	mov    cl,0x6
  40f870:	cmp    BYTE PTR [ebx-0x697c9c4d],dh
  40f876:	mov    al,ds:0xc4b470ce
  40f87b:	or     DWORD PTR [esi+0xfa03a2d],ecx
  40f881:	pop    esi
  40f882:	repnz pushf 
  40f884:	loopne 0x40f845
  40f886:	jbe    0x40f85b
  40f888:	pop    esi
  40f889:	hlt    
  40f88a:	enter  0xced6,0x49
  40f88e:	cmp    DWORD PTR [edi+0x4],eax
  40f891:	inc    ecx
  40f892:	push   0x6c
  40f894:	sbb    DWORD PTR [ebp-0x6ba92fd5],0x61d146f9
  40f89e:	mov    ?,WORD PTR [ebx+0x51]
  40f8a1:	add    ebx,DWORD PTR cs:0x7d41961f
  40f8a8:	cld    
  40f8a9:	daa    
  40f8aa:	push   ebx
  40f8ab:	int3   
  40f8ac:	icebp  
  40f8ad:	sti    
  40f8ae:	ins    DWORD PTR es:[edi],dx
  40f8af:	int    0x48
  40f8b1:	(bad)  
  40f8b2:	test   BYTE PTR fs:[ebx+0x3d3fe878],dh
  40f8b9:	xlat   BYTE PTR ds:[ebx]
  40f8ba:	lods   eax,DWORD PTR ds:[esi]
  40f8bb:	xchg   esi,eax
  40f8bc:	dec    esp
  40f8bd:	jns    0x40f8a6
  40f8bf:	rcr    DWORD PTR [edi-0x5f],cl
  40f8c2:	addr16 mov eax,ds:0x16a9
  40f8c6:	pop    esi
  40f8c7:	jmp    0x9b77:0xfc7fefb1
  40f8ce:	call   0x1a0cf7f9
  40f8d3:	lods   eax,DWORD PTR ds:[esi]
  40f8d4:	and    cl,BYTE PTR [ecx+0x68c03eaa]
  40f8da:	pop    edi
  40f8db:	pop    esp
  40f8dc:	popa   
  40f8dd:	cmp    al,BYTE PTR [edx+0x658d1242]
  40f8e3:	or     ecx,esi
  40f8e5:	test   BYTE PTR [edx],ah
  40f8e7:	mov    ah,bl
  40f8e9:	fbld   TBYTE PTR [ecx]
  40f8eb:	jge    0x40f8ae
  40f8ed:	icebp  
  40f8ee:	(bad)  
  40f8ef:	pop    ebp
  40f8f0:	or     BYTE PTR [ebp-0x39],bl
  40f8f3:	adc    DWORD PTR [esi+0x17f9420d],ecx
  40f8f9:	pop    ebp
  40f8fa:	lea    ebx,[esi+0x6f]
  40f8fd:	xor    al,0x2a
  40f8ff:	mov    ebx,0x8ac6dd31
  40f904:	popa   
  40f905:	(bad)  
  40f907:	ret    0xcc61
  40f90a:	fdivr  DWORD PTR [eax+0xb]
  40f90d:	mov    BYTE PTR [ebp+0x196b4f3c],ah
  40f913:	adc    eax,0x9fed04c
  40f918:	sbb    dl,ah
  40f91a:	xchg   ecx,eax
  40f91b:	xchg   ebp,eax
  40f91c:	or     DWORD PTR ds:0xeb635739,0x1b05842f
  40f926:	push   eax
  40f927:	nop
  40f928:	and    bl,BYTE PTR [esi-0x71]
  40f92b:	mov    al,ds:0x950e22f0
  40f930:	lods   eax,DWORD PTR ds:[esi]
  40f931:	into   
  40f932:	cmp    DWORD PTR [ecx],edx
  40f934:	sbb    eax,0x8d521981
  40f939:	mov    bl,0x6d
  40f93b:	sub    esp,DWORD PTR [eax+edi*4]
  40f93e:	call   0x74df:0x72d2801f
  40f945:	imul   ecx,eax,0x36
  40f948:	jmp    DWORD PTR ds:0x6674a3c8
  40f94e:	inc    edx
  40f94f:	jnp    0x40f8df
  40f951:	add    edx,DWORD PTR [edi+0x4fe3ae14]
  40f957:	sbb    edx,DWORD PTR ds:0x61d44158
  40f95d:	cmp    al,BYTE PTR [edi]
  40f95f:	retf   
  40f960:	xlat   BYTE PTR ds:[ebx]
  40f961:	pop    ebp
  40f962:	add    BYTE PTR [esi+0x43],0x26
  40f966:	push   ebx
  40f967:	jae    0x40f95e
  40f969:	push   0x2ee6e2e
  40f96e:	push   esi
  40f96f:	adc    al,0x8b
  40f971:	xor    DWORD PTR [edx+0x766022c9],edx
  40f977:	cld    
  40f978:	jge    0x40f9c7
  40f97a:	mov    ch,0xbc
  40f97c:	mov    ebp,0x366c21c7
  40f981:	enter  0xd525,0xba
  40f985:	rol    dh,cl
  40f987:	mov    ah,BYTE PTR [edx-0x4247ce43]
  40f98d:	iret   
  40f98e:	sub    bh,ah
  40f990:	out    dx,al
  40f991:	or     eax,0x1a496929
  40f996:	nop
  40f997:	shl    BYTE PTR [edx+0x26],1
  40f99a:	fimul  DWORD PTR [edi+0x30]
  40f99d:	jecxz  0x40f96d
  40f99f:	nop
  40f9a0:	add    al,0xac
  40f9a2:	les    ecx,FWORD PTR [esi-0x5a]
  40f9a5:	dec    edx
  40f9a6:	jl     0x40f9f6
  40f9a8:	inc    edx
  40f9a9:	adc    BYTE PTR [edi],al
  40f9ab:	in     al,dx
  40f9ac:	mov    ah,0xdb
  40f9ae:	loope  0x40f9ae
  40f9b0:	and    eax,DWORD PTR [edx+0x7f2aa97a]
  40f9b6:	inc    ecx
  40f9b7:	loope  0x40f9ec
  40f9b9:	imul   ebx,DWORD PTR [esp+esi*1],0xffffffd7
  40f9bd:	aam    0x42
  40f9bf:	pop    esi
  40f9c0:	sbb    al,0xaf
  40f9c2:	stos   BYTE PTR es:[edi],al
  40f9c3:	xchg   ecx,eax
  40f9c4:	pop    esp
  40f9c5:	retf   
  40f9c6:	sti    
  40f9c7:	dec    esp
  40f9c8:	cmc    
  40f9c9:	test   DWORD PTR [esi],edx
  40f9cb:	add    edx,0xffffff96
  40f9ce:	mov    edi,0x99c90acc
  40f9d3:	mov    ch,0xb2
  40f9d5:	sar    BYTE PTR [edi+0x2c710484],cl
  40f9db:	nop
  40f9dc:	cmp    BYTE PTR [ebx],dl
  40f9de:	jl     0x40f98a
  40f9e0:	jmp    0x40f98b
  40f9e2:	sub    eax,ecx
  40f9e4:	xor    eax,0xc3e
  40f9e9:	mov    DWORD PTR [ebp-0x58],eax
  40f9ec:	mov    DWORD PTR [ebp-0x14],0x66bd
  40f9f3:	pop    ecx
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x42206c
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x7ff6f670]
  40fc87:	mov    al,0x76
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0x48181814
  40fc91:	fs mov ch,0x2f
  40fc94:	mov    eax,0x3e7012c6
  40fc99:	gs pop ebp
  40fc9b:	(bad)  
  40fc9d:	and    eax,0x18
  40fca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca1:	push   edi
  40fca2:	push   ecx
  40fca3:	and    eax,0x58cc35a9
  40fca8:	(bad)  
  40fca9:	push   ds
  40fcaa:	fimul  DWORD PTR [ecx+0x40]
  40fcad:	scas   eax,DWORD PTR es:[edi]
  40fcae:	aam    0x9a
  40fcb0:	test   DWORD PTR [ebp+esi*1+0x2fd95c5e],edi
  40fcb7:	retf   0x7606
  40fcba:	scas   eax,DWORD PTR es:[edi]
  40fcbb:	inc    eax
  40fcbc:	push   ebp
  40fcbd:	xor    DWORD PTR [esi],eax
  40fcbf:	test   DWORD PTR [ecx-0x2d],edi
  40fcc2:	push   ds
  40fcc3:	push   ds
  40fcc4:	or     eax,esi
  40fcc6:	and    cl,bl
  40fcc8:	adc    ebp,edi
  40fcca:	inc    edi
  40fccb:	(bad)  
  40fccc:	xchg   edx,eax
  40fccd:	xor    dl,BYTE PTR [eax+eax*1-0x27081235]
  40fcd4:	in     al,dx
  40fcd5:	and    al,0xfa
  40fcd7:	fs in  al,dx
  40fcd9:	or     WORD PTR es:[si-0x26d8],si
  40fce0:	inc    edi
  40fce1:	jnp    0x40fc74
  40fce3:	inc    edx
  40fce4:	mov    bh,0x40
  40fce6:	clc    
  40fce7:	xor    DWORD PTR [ecx],0x9b43c72f
  40fced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcee:	retf   0x5942
  40fcf1:	mov    dl,BYTE PTR [ebx-0x6f9e68b9]
  40fcf7:	cmp    DWORD PTR [ebp+ecx*2+0x57],edx
  40fcfb:	div    edx
  40fcfd:	cdq    
  40fcfe:	mov    dh,BYTE PTR [edi+ebp*4-0x7e]
  40fd02:	push   edi
  40fd03:	ret    0xf4c
  40fd06:	mov    ah,0x18
  40fd08:	inc    esi
  40fd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd0a:	push   esp
  40fd0b:	int    0x72
  40fd0d:	enter  0x2dd9,0xe4
  40fd11:	xchg   ebp,eax
  40fd12:	jne    0x40fd84
  40fd14:	popa   
  40fd15:	add    ah,al
  40fd17:	push   esi
  40fd18:	push   ecx
  40fd19:	adc    eax,0x57d3d3f1
  40fd1e:	sub    BYTE PTR [ebp+0x25],ah
  40fd21:	in     eax,dx
  40fd22:	jecxz  0x40fccd
  40fd24:	inc    edi
  40fd25:	add    eax,0xf1547d3b
  40fd2a:	icebp  
  40fd2b:	(bad)  
  40fd2c:	fcomp  QWORD PTR [edi]
  40fd2e:	or     al,0x4e
  40fd30:	xchg   ebp,eax
  40fd31:	adc    bh,BYTE PTR [ebp+eax*1+0x22990367]
  40fd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd39:	sbb    DWORD PTR [esi-0x143535c8],edi
  40fd3f:	or     DWORD PTR [esi+0x5d8d2396],0x88a80310
  40fd49:	inc    esi
  40fd4a:	cmp    DWORD PTR [edi],esi
  40fd4c:	jo     0x40fdcb
  40fd4e:	loopne 0x40fd59
  40fd50:	add    BYTE PTR [ebp-0x56],dh
  40fd53:	fsub   DWORD PTR [esi+edi*4-0x33]
  40fd57:	sub    eax,0x57d69a04
  40fd5c:	outs   dx,DWORD PTR ds:[esi]
  40fd5d:	sbb    DWORD PTR [edi],ebx
  40fd5f:	cmp    ch,BYTE PTR [eax-0x2fc39b8d]
  40fd65:	jecxz  0x40fcf6
  40fd67:	call   FWORD PTR [edx+0x3f799515]
  40fd6d:	dec    ebp
  40fd6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd6f:	sti    
  40fd70:	mov    ah,0xdb
  40fd72:	xchg   BYTE PTR [ebp+edi*8+0x66180f39],cl
  40fd79:	out    0x22,eax
  40fd7b:	push   cs
  40fd7c:	sub    esp,DWORD PTR [esi-0x223158f0]
  40fd82:	xchg   ecx,eax
  40fd83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd84:	cmp    BYTE PTR [esi-0x19],bl
  40fd87:	nop    DWORD PTR [edx+0x6f507974]
  40fd8e:	dec    ecx
  40fd8f:	dec    ebp
  40fd90:	mov    dh,0x4a
  40fd92:	mov    DWORD PTR [ebx-0x5dcb9422],edx
  40fd98:	or     BYTE PTR [ebp+0x41303688],dh
  40fd9e:	mov    dl,0xd1
  40fda0:	nop
  40fda1:	adc    bh,bh
  40fda3:	push   ecx
  40fda4:	mov    ch,0x8b
  40fda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fda7:	arpl   WORD PTR ds:0x99e0dbd8,ax
  40fdad:	adc    ah,bl
  40fdaf:	push   ss
  40fdb0:	add    cl,0x3a
  40fdb3:	pop    ss
  40fdb4:	inc    edx
  40fdb5:	push   0xae0e7d7f
  40fdba:	adc    BYTE PTR [edx-0x6d],cl
  40fdbd:	or     DWORD PTR [ecx+0x64d3e7ca],edx
  40fdc3:	mov    bl,0x3d
  40fdc5:	dec    esp
  40fdc6:	or     DWORD PTR [edx-0x4e],ecx
  40fdc9:	push   ebp
  40fdca:	pop    eax
  40fdcb:	adc    dl,BYTE PTR [edx+0x1a]
  40fdce:	xchg   edx,eax
  40fdcf:	in     al,0xf8
  40fdd1:	pop    edi
  40fdd2:	fsubrp st(3),st
  40fdd4:	cmp    al,0xa1
  40fdd6:	dec    eax
  40fdd7:	or     bh,BYTE PTR [eax+0x34dc87e9]
  40fddd:	and    al,0x73
  40fddf:	add    ebp,DWORD PTR [ebp-0x58adb413]
  40fde5:	jle    0x40fdd1
  40fde7:	push   0xf45a8090
  40fdec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fded:	out    dx,al
  40fdee:	or     eax,DWORD PTR [edx-0x6a1cf399]
  40fdf4:	int3   
  40fdf5:	(bad)  
  40fdf6:	cmp    ah,bh
  40fdf8:	mov    edx,0x42bfedba
  40fdfd:	sti    
  40fdfe:	sub    BYTE PTR [edi],ah
  40fe00:	aam    0x4d
  40fe02:	cmp    dh,BYTE PTR [ecx]
  40fe04:	mov    cl,0x6a
  40fe06:	pop    esp
  40fe07:	pushf  
  40fe08:	sar    BYTE PTR [ecx],1
  40fe0a:	ss pop eax
  40fe0c:	loop   0x40fdfd
  40fe0e:	(bad)  
  40fe0f:	out    dx,al
  40fe10:	shl    DWORD PTR [edx-0x6ab51cf1],cl
  40fe16:	outs   dx,BYTE PTR ds:[esi]
  40fe17:	push   esi
  40fe18:	sbb    bh,BYTE PTR [ebx+0x4d]
  40fe1b:	arpl   WORD PTR [ebp+0x1],ax
  40fe1e:	sub    bh,BYTE PTR [ebp+0x7a]
  40fe21:	fcmovu st,st(5)
  40fe23:	das    
  40fe24:	lock push ss
  40fe26:	or     dl,BYTE PTR [ebx+0x4c]
  40fe29:	hlt    
  40fe2a:	push   es
  40fe2b:	or     DWORD PTR [esi-0x14f439f2],ecx
  40fe31:	test   al,cl
  40fe33:	mov    cl,0xf5
  40fe35:	push   esi
  40fe36:	mov    dh,0x53
  40fe38:	mov    esi,0xfbba265e
  40fe3d:	jnp    0x40fe1a
  40fe3f:	lock inc ebp
  40fe41:	dec    ebx
  40fe42:	jb     0x40fe90
  40fe44:	pop    ebp
  40fe45:	cmp    bh,BYTE PTR [edi+ebp*2+0x73]
  40fe49:	ret    
  40fe4a:	cmp    eax,0x9b35bf35
  40fe4f:	adc    eax,0x4ebbba7e
  40fe54:	xchg   DWORD PTR [ebp-0x4e],esp
  40fe57:	mov    BYTE PTR [ecx-0x38d27095],dh
  40fe5d:	je     0x40fe74
  40fe5f:	sbb    BYTE PTR [ebx],ch
  40fe61:	jmp    0x19476594
  40fe66:	aad    0x8e
  40fe68:	and    eax,0x95f451d4
  40fe6d:	inc    ebp
  40fe6e:	pop    es
  40fe6f:	cmp    BYTE PTR [ebx+0x470ea59e],dh
  40fe75:	pop    eax
  40fe76:	lods   eax,DWORD PTR ds:[esi]
  40fe77:	adc    eax,eax
  40fe79:	imul   ecx,eax,0x9f163ba0
  40fe7f:	js     0x40feae
  40fe81:	push   edx
  40fe82:	out    dx,eax
  40fe83:	adc    BYTE PTR [edx+0x52],al
  40fe86:	mov    ah,0x48
  40fe88:	pop    eax
  40fe89:	add    edx,DWORD PTR [esi-0xc]
  40fe8c:	pusha  
  40fe8d:	lods   al,BYTE PTR ds:[esi]
  40fe8e:	cmp    eax,DWORD PTR [ebx-0x38]
  40fe91:	gs dec esi
  40fe93:	jo     0x40fe33
  40fe95:	inc    edx
  40fe96:	and    eax,edi
  40fe98:	pop    edi
  40fe99:	clc    
  40fe9a:	cmp    DWORD PTR [ebx+esi*2-0x4f3f9ca0],esi
  40fea1:	aas    
  40fea2:	in     al,dx
  40fea3:	out    dx,al
  40fea4:	ror    BYTE PTR [edi+0x20],0xcf
  40fea8:	push   ss
  40fea9:	cmp    esp,ecx
  40feab:	sub    DWORD PTR [esi-0x5c],esp
  40feae:	sbb    DWORD PTR [eax],eax
  40feb0:	push   cs
  40feb1:	fisttp QWORD PTR ds:0x70074703
  40feb7:	cdq    
  40feb8:	or     DWORD PTR [eax+0x30],esi
  40febb:	lock fidiv DWORD PTR [esi+0x62]
  40febf:	or     eax,0xe50e991e
  40fec4:	dec    edi
  40fec5:	adc    ah,dh
  40fec7:	sbb    al,0x1c
  40fec9:	push   es
  40feca:	pop    ebp
  40fecb:	std    
  40fecc:	or     eax,DWORD PTR [edx+0x41195c2c]
  40fed2:	mov    bh,0x47
  40fed4:	sbb    BYTE PTR [ebx+ecx*1+0x6ac0b681],0xab
  40fedc:	add    ebx,edx
  40fede:	mov    fs,WORD PTR [edi]
  40fee0:	dec    ecx
  40fee1:	paddsw mm0,QWORD PTR ds:0x7cd33d94
  40fee8:	in     al,0x9
  40feea:	jo     0x40fe97
  40feec:	daa    
  40feed:	jae    0x40ff5b
  40feef:	push   cs
  40fef0:	(bad)  
  40fef1:	iret   
  40fef2:	jl     0x40feb2
  40fef4:	jmp    0x40fe8f
  40fef6:	push   eax
  40fef7:	aaa    
  40fef8:	dec    ebx
  40fef9:	cmc    
  40fefa:	pushf  
  40fefb:	and    al,0x34
  40fefd:	and    BYTE PTR [edi+0x1e1726b7],dl
  40ff03:	retf   0xe0d3
  40ff06:	jb     0x40feb5
  40ff08:	popa   
  40ff09:	jb     0x40ff44
  40ff0b:	gs stc 
  40ff0d:	push   ss
  40ff0e:	and    BYTE PTR [eax+0x2d],ah
  40ff11:	nop
  40ff12:	inc    esi
  40ff13:	ja     0x40ff0d
  40ff15:	push   esp
  40ff16:	rcr    DWORD PTR [ebp+0xc],0x9a
  40ff1a:	sbb    ch,BYTE PTR [ecx+edi*2+0x29]
  40ff1e:	fbstp  TBYTE PTR [esi]
  40ff20:	pop    ebx
  40ff21:	inc    esp
  40ff22:	nop
  40ff23:	or     al,0x3d
  40ff25:	jge    0x40ff93
  40ff27:	or     edi,ebp
  40ff29:	fs inc esp
  40ff2b:	sbb    DWORD PTR [eax-0x53],0x70e56042
  40ff32:	inc    esp
  40ff33:	xlat   BYTE PTR ds:[ebx]
  40ff34:	pop    ecx
  40ff35:	rol    BYTE PTR [esi+eiz*1-0x72d3a290],cl
  40ff3c:	cmp    BYTE PTR [ebp+0x5fe820d],bh
  40ff42:	add    DWORD PTR [ecx],edi
  40ff44:	add    BYTE PTR [eax],al
  40ff46:	xor    eax,0x40c2
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1-0x21838c47]
  40ff68:	frstor ds:0x18981daa
  40ff6e:	sbb    BYTE PTR [esi+0x68181814],bh
  40ff74:	push   eax
  40ff75:	cmp    al,0x27
  40ff77:	addr16 sub al,0x42
  40ff7a:	jae    0x40ffa6
  40ff7c:	icebp  
  40ff7d:	push   esi
  40ff7e:	pop    esp
  40ff7f:	mov    esi,0xbfad3137
  40ff84:	loope  0x40ff9b
  40ff86:	and    al,0xbe
  40ff88:	pop    ss
  40ff89:	or     al,0xab
  40ff8b:	aaa    
  40ff8c:	push   ss
  40ff8d:	cwde   
  40ff8e:	dec    eax
  40ff8f:	dec    ecx
  40ff90:	xchg   ebx,eax
  40ff91:	dec    ebp
  40ff92:	sbb    al,0xc2
  40ff94:	lahf   
  40ff95:	add    eax,0x1e4c5bc4
  40ff9a:	mov    DWORD PTR [edi-0x42e9b4c1],esi
  40ffa0:	jmp    DWORD PTR [esi]
  40ffa2:	add    ecx,eax
  40ffa4:	inc    edi
  40ffa5:	test   BYTE PTR [ecx-0x6e3f5224],ch
  40ffab:	(bad)  
  40ffac:	jb     0x40ff7f
  40ffae:	aas    
  40ffaf:	aad    0x4c
  40ffb1:	mov    edi,DWORD PTR [esi]
  40ffb3:	popa   
  40ffb4:	and    DWORD PTR [eax],esi
  40ffb6:	or     dl,BYTE PTR [eax+0x39b0271a]
  40ffbc:	mov    edi,0x837c376f
  40ffc1:	xchg   ecx,eax
  40ffc2:	jbe    0x40ff46
  40ffc4:	or     ebx,DWORD PTR [edi]
  40ffc6:	sbb    BYTE PTR [edi-0x1d],bh
  40ffc9:	mov    edi,0x7e466232
  40ffce:	loopne 0x410040
  40ffd0:	fwait
  40ffd1:	sar    ah,cl
  40ffd3:	out    dx,eax
  40ffd4:	fnstsw WORD PTR [eax*8+0x1d296e95]
  40ffdb:	push   cs
  40ffdc:	dec    ebp
  40ffdd:	or     al,0xa0
  40ffdf:	or     eax,DWORD PTR [eax]
  40ffe1:	fcomp  QWORD PTR [edx+eax*4-0x66b2ebff]
  40ffe8:	mov    edx,0x81d76523
  40ffed:	xchg   esp,eax
  40ffee:	mov    DWORD PTR [edx+0x493bbd73],esi
  40fff4:	inc    edx
  40fff5:	xor    DWORD PTR ds:0x6728f2a4,edi
  40fffb:	xor    al,0x7a
  40fffd:	scas   eax,DWORD PTR es:[edi]
  40fffe:	or     dl,BYTE PTR [ebx]
  410000:	xor    esi,DWORD PTR [ebx+0x64]
  410003:	shr    DWORD PTR [edi+ebp*8-0x78ac6de2],cl
  41000a:	(bad)  
  41000b:	push   edi
  41000c:	mov    bh,0x70
  41000e:	push   ebx
  41000f:	add    eax,0x995ea78f
  410014:	lds    ecx,FWORD PTR [edx-0x6a0fadb0]
  41001a:	mov    dh,0xe
  41001c:	xor    eax,0x77e2e3eb
  410021:	push   ss
  410022:	pop    esi
  410023:	dec    edx
  410024:	stos   BYTE PTR es:[edi],al
  410025:	and    BYTE PTR [eax+eax*8-0x1],al
  410029:	add    eax,0xf951ab8f
  41002e:	shl    DWORD PTR [ebp-0x50],0x96
  410032:	(bad)  
  410033:	jp     0x410008
  410035:	lods   al,BYTE PTR ds:[esi]
  410036:	inc    edi
  410037:	pop    ss
  410038:	out    dx,eax
  410039:	adc    ecx,esi
  41003b:	adc    cl,ah
  41003d:	sub    esi,DWORD PTR [ebx+ebp*4]
  410040:	sub    al,0x65
  410042:	jno    0x410087
  410044:	pusha  
  410045:	repnz mov bl,0xea
  410048:	ficom  DWORD PTR [ebp+0x330d3c4f]
  41004e:	ins    BYTE PTR es:[edi],dx
  41004f:	lock xor eax,0xd5f0fb7d
  410055:	inc    esp
  410056:	mov    ecx,DWORD PTR [ebp-0x40231b03]
  41005c:	paddsb mm5,QWORD PTR [edx+0x42fcc405]
  410063:	xlat   BYTE PTR ds:[ebx]
  410064:	mov    ebx,0x84328054
  410069:	push   es
  41006a:	mov    edi,cr5
  41006d:	fsubr  QWORD PTR [esi]
  41006f:	test   al,0xc4
  410071:	in     al,dx
  410072:	or     al,BYTE PTR [edi+esi*4-0x2475980d]
  410079:	sub    eax,0x8567c599
  41007e:	aad    0x9a
  410080:	aam    0xbd
  410082:	cmc    
  410083:	mov    edx,0xb1ea2066
  410088:	ret    0x21b0
  41008b:	sar    DWORD PTR [eax+0xd3259c0],cl
  410091:	test   BYTE PTR [edi-0x6d97ba28],al
  410097:	pop    ebx
  410098:	sbb    DWORD PTR [edx],esi
  41009a:	xchg   edx,eax
  41009b:	adc    eax,0xa54893e3
  4100a0:	push   ss
  4100a1:	pusha  
  4100a2:	in     al,0x6b
  4100a4:	sti    
  4100a5:	js     0x4100aa
  4100a7:	add    bh,cl
  4100a9:	in     al,dx
  4100aa:	or     ch,bh
  4100ac:	and    DWORD PTR [esi],ecx
  4100ae:	leave  
  4100af:	ja     0x41007c
  4100b1:	pop    esi
  4100b2:	or     DWORD PTR [eax-0x23470e4f],0x54
  4100b9:	xor    DWORD PTR [ebx],0x7
  4100bc:	mov    edi,0xf04527b7
  4100c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c2:	jmp    0x410084
  4100c4:	pop    esp
  4100c5:	in     eax,dx
  4100c6:	in     eax,0x57
  4100c8:	loop   0x4100c5
  4100ca:	mov    bh,0xc8
  4100cc:	xor    al,0x68
  4100ce:	sbb    ecx,DWORD PTR [edi-0x5e]
  4100d1:	pop    esi
  4100d2:	push   0x5d
  4100d4:	jge    0x410133
  4100d6:	jns    0x41013f
  4100d8:	fsub   st(1),st
  4100da:	cs and al,0x9c
  4100dd:	cli    
  4100de:	inc    BYTE PTR [ebp-0x24]
  4100e1:	loop   0x410120
  4100e3:	retf   0x2510
  4100e6:	inc    eax
  4100e7:	(bad)  
  4100e8:	(bad)  
  4100e9:	imul   ebp,DWORD PTR [edx-0x51],0xffffffaa
  4100ed:	adc    ecx,DWORD PTR [ebx-0x1826944a]
  4100f3:	pop    ecx
  4100f4:	lea    esp,[eax-0x611a2a17]
  4100fa:	push   edx
  4100fb:	sub    DWORD PTR [ebp-0x47],0x4e
  4100ff:	xchg   ebx,eax
  410100:	push   ds
  410101:	ins    DWORD PTR es:[edi],dx
  410102:	pop    ss
  410103:	rcr    BYTE PTR [edi],0xd0
  410106:	js     0x410186
  410108:	mov    eax,0x389929da
  41010d:	bound  edx,QWORD PTR [ecx+0x1db6c77e]
  410113:	adc    bl,dh
  410115:	add    ebp,DWORD PTR [edx+0x62]
  410118:	jl     0x4100fd
  41011a:	scas   al,BYTE PTR es:[edi]
  41011b:	and    al,0xf9
  41011d:	loop   0x410165
  41011f:	je     0x410157
  410121:	test   al,0x13
  410123:	lea    ebp,ss:[eax]
  410126:	push   eax
  410127:	cmp    ebp,DWORD PTR [ebx+ebx*8+0x2b]
  41012b:	lods   al,BYTE PTR ds:[esi]
  41012c:	push   cs
  41012d:	in     eax,0x3d
  41012f:	jae    0x410174
  410131:	inc    edi
  410132:	mov    ah,0xb2
  410134:	fbstp  TBYTE PTR [edi+0x58]
  410137:	in     al,dx
  410138:	cmp    eax,ebp
  41013a:	inc    esi
  41013b:	inc    ecx
  41013d:	mov    esi,edx
  41013f:	fbld   TBYTE PTR [edi]
  410141:	aad    0x80
  410143:	in     eax,0x4f
  410145:	mov    edi,0xecaa51b0
  41014a:	xchg   ebp,eax
  41014c:	lock mov al,ds:0x9d8123e2
  410152:	or     BYTE PTR [eax*2+0x4fe3fdb2],0x4a
  41015a:	push   edi
  41015b:	or     BYTE PTR [edi],cl
  41015d:	push   es
  41015e:	ret    
  41015f:	das    
  410160:	pop    edi
  410161:	lock adc eax,DWORD PTR [edx+ecx*2+0x71]
  410166:	dec    ebp
  410167:	and    esi,ebp
  410169:	inc    ebx
  41016a:	scas   al,BYTE PTR es:[edi]
  41016b:	mov    al,0x91
  41016d:	jno    0x410145
  41016f:	adc    bh,BYTE PTR [ecx+0xdd57cd6]
  410175:	popf   
  410176:	outs   dx,DWORD PTR ds:[esi]
  410177:	xor    cl,al
  410179:	mov    al,0x14
  41017b:	pop    esp
  41017c:	test   al,0x9d
  41017e:	rcl    BYTE PTR [esi-0x74456a45],cl
  410184:	ins    DWORD PTR es:[edi],dx
  410185:	in     al,dx
  410186:	mov    ebx,0x466ef31
  41018b:	lods   al,BYTE PTR ds:[esi]
  41018c:	mov    BYTE PTR [edi+0x19],bh
  41018f:	mov    eax,ds:0x8f0327a3
  410194:	push   ebx
  410195:	mov    eax,0xa099d45b
  41019a:	xchg   esi,eax
  41019b:	xchg   esp,eax
  41019c:	je     0x4101fa
  41019e:	xor    eax,0x8ce7aabb
  4101a3:	popf   
  4101a4:	leave  
  4101a5:	xchg   BYTE PTR [edi+0x282d88e9],al
  4101ab:	outs   dx,BYTE PTR ds:[esi]
  4101ac:	add    eax,0xe11a5b5c
  4101b1:	jnp    0x410175
  4101b3:	mov    fs:0x9de197b0,al
  4101b9:	mov    bh,ch
  4101bb:	in     al,dx
  4101bc:	jmp    0x2fe16f3c
  4101c1:	sub    al,0x44
  4101c3:	mov    al,ds:0x226ca8b5
  4101c8:	mov    bh,ah
  4101ca:	pop    ss
  4101cb:	mov    eax,0x739da821
  4101d0:	jbe    0x4101af
  4101d2:	mov    ecx,eax
  4101d4:	or     ah,BYTE PTR [ebx+0x6f]
  4101d7:	aam    0x22
  4101d9:	icebp  
  4101da:	test   eax,0xfe5e3b70
  4101df:	out    dx,eax
  4101e0:	inc    esp
  4101e1:	cmp    al,0xeb
  4101e3:	push   ds
  4101e4:	arpl   WORD PTR [eax+0x58],bx
  4101e7:	outs   dx,BYTE PTR ds:[esi]
  4101e8:	jmp    0xab114116
  4101ed:	leave  
  4101ee:	add    eax,0x8d9dd165
  4101f3:	or     al,0x73
  4101f5:	dec    ebp
  4101f6:	pop    ebp
  4101f7:	dec    eax
  4101f8:	inc    edx
  4101f9:	jge    0x41025a
  4101fb:	mov    ebx,0xad5507bf
  410200:	push   ebp
  410201:	fmul   DWORD PTR [edi+0x7f]
  410204:	repnz int 0x6d
  410207:	dec    eax
  410208:	ja     0x4101ac
  41020a:	xchg   DWORD PTR [edx],eax
  41020c:	das    
  41020d:	lods   eax,DWORD PTR ds:[esi]
  41020e:	push   ebx
  41020f:	enter  0xbf78,0x1c
  410213:	nop
  410214:	cmp    DWORD PTR [esi+0x55],edx
  410217:	gs xchg edi,eax
  410219:	or     ecx,ebp
  41021b:	cli    
  41021c:	inc    ebp
  41021d:	mov    ecx,0x7a1a2f88
  410222:	xchg   edi,eax
  410223:	in     al,dx
  410224:	jne    0x41065f
  41022a:	mov    ecx,DWORD PTR [ebp-0x78]
  41022d:	xor    edx,edx
  41022f:	mov    eax,0x209c
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422558
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422558
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422660
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422658],eax
  4102bc:	inc    DWORD PTR ds:0x422660
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	in     eax,0x70
  41030e:	aaa    
  41030f:	push   0xffffffc3
  410311:	xchg   edx,eax
  410312:	sbb    BYTE PTR [eax],bl
  410314:	mov    esi,0x8e181814
  410319:	jl     0x4102b1
  41031b:	es fwait
  41031d:	out    0x9,eax
  41031f:	(bad)  
  410320:	loop   0x4102a9
  410322:	cmc    
  410323:	mov    WORD PTR [esi+ebx*2-0x73011e4e],fs
  41032a:	mov    BYTE PTR [edx+0x61],ch
  41032d:	fstp   DWORD PTR [ecx]
  41032f:	and    al,BYTE PTR [esi]
  410331:	mov    eax,ds:0x316d32d1
  410336:	sbb    bh,BYTE PTR [ebp+0x35]
  410339:	jmp    0x4102c7
  41033b:	repz mov al,ds:0xe29f8bdc
  410341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410342:	jbe    0x410385
  410344:	call   0x2f3cca8e
  410349:	jg     0x4103b2
  41034b:	lods   eax,DWORD PTR ds:[esi]
  41034c:	mov    ds:0x640b5bc8,eax
  410351:	out    0xef,eax
  410353:	jl     0x410383
  410355:	adc    dh,BYTE PTR [esi]
  410357:	shl    BYTE PTR [eax],1
  410359:	dec    esi
  41035a:	clc    
  41035b:	sub    bl,dl
  41035d:	sbb    al,0x20
  41035f:	js     0x4103d1
  410361:	jecxz  0x4102ef
  410363:	pop    es
  410364:	adc    DWORD PTR [edx],esi
  410366:	sub    edx,DWORD PTR [ebx]
  410368:	test   DWORD PTR [ecx],edi
  41036a:	out    0x31,eax
  41036c:	add    DWORD PTR [eax+eiz*4],ebx
  41036f:	leave  
  410370:	test   eax,0x6ef82a26
  410375:	fst    DWORD PTR [esi-0x6e]
  410378:	mov    ah,0xb5
  41037a:	xchg   sp,ax
  41037c:	sbb    DWORD PTR [eax-0x1e464a5c],edx
  410382:	fucom  st(5)
  410384:	mov    bh,0xef
  410386:	fbstp  TBYTE PTR [edi+eiz*2]
  410389:	retf   
  41038a:	retf   0x55f6
  41038d:	lock and eax,0x9b3ce127
  410393:	inc    ebp
  410394:	sbb    eax,0x1f51f413
  410399:	mov    ds:0x7e6ed0ef,al
  41039e:	das    
  41039f:	retf   0x9799
  4103a2:	ins    DWORD PTR es:[edi],dx
  4103a3:	inc    esi
  4103a4:	(bad)  
  4103a5:	sub    al,0x3f
  4103a7:	sub    ah,BYTE PTR [ebx-0x52718072]
  4103ad:	sbb    edx,DWORD PTR [ecx+0x4c526924]
  4103b3:	adc    ebp,DWORD PTR [ebx-0x3d]
  4103b6:	call   0xf133:0x8931fe63
  4103bd:	add    eax,0x44e1b40c
  4103c2:	ins    BYTE PTR es:[edi],dx
  4103c3:	mov    ch,0xd5
  4103c5:	test   BYTE PTR [edi],0xe6
  4103c8:	dec    ecx
  4103c9:	inc    ecx
  4103ca:	mov    esi,0xcaff67ee
  4103cf:	push   ecx
  4103d0:	xchg   esp,eax
  4103d1:	out    dx,al
  4103d2:	xchg   ebx,eax
  4103d3:	in     eax,0xfa
  4103d5:	xlat   BYTE PTR ds:[ebx]
  4103d6:	mov    dh,0x10
  4103d8:	jne    0x4103fd
  4103da:	lahf   
  4103db:	xchg   esi,eax
  4103dc:	jl     0x4103dc
  4103de:	mov    ecx,0x65bc3950
  4103e3:	add    edx,DWORD PTR [ebx+ebx*2+0x2a055fa]
  4103ea:	and    eax,0xf4e10930
  4103ef:	rcl    dl,1
  4103f1:	test   al,0x51
  4103f3:	js     0x4103c8
  4103f5:	fs add al,0x6a
  4103f8:	pop    ecx
  4103f9:	fisttp DWORD PTR [ecx+0x139cf42f]
  4103ff:	jg     0x41046b
  410401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410402:	xor    dl,al
  410404:	mov    bl,0x74
  410406:	adc    bh,BYTE PTR [eax]
  410408:	mov    edx,0x24c1af37
  41040d:	idiv   DWORD PTR [eax-0x716c6bf3]
  410413:	repz xlat BYTE PTR ds:[ebx]
  410415:	pop    ds
  410416:	adc    eax,0xf8beb157
  41041b:	jne    0x4103d9
  41041d:	loop   0x41043f
  41041f:	jle    0x4103f5
  410421:	fisubr WORD PTR [edx-0x30]
  410424:	or     BYTE PTR [edi-0x7a],al
  410427:	in     al,0xe4
  410429:	mov    ah,0xd3
  41042b:	jge    0x410438
  41042d:	mov    esp,0x57fb30fa
  410432:	pop    es
  410433:	dec    esi
  410434:	jns    0x410460
  410436:	stc    
  410437:	pop    ds
  410438:	pushf  
  410439:	(bad)  
  41043b:	push   0xffffffe5
  41043d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41043e:	sbb    BYTE PTR [esi+0x46],cl
  410441:	pop    ss
  410442:	imul   ecx,DWORD PTR [eax+ebx*4-0x2c],0xffffffd0
  410447:	shr    al,cl
  410449:	xchg   ebx,eax
  41044a:	inc    edi
  41044b:	cdq    
  41044c:	rcl    DWORD PTR [edx+0x72b02738],1
  410452:	mov    ch,BYTE PTR [esi-0x29b5f4da]
  410458:	xor    BYTE PTR [edx-0x39],dl
  41045b:	mov    ebp,0xa4615464
  410460:	push   ebp
  410461:	or     al,0x83
  410463:	add    esi,DWORD PTR [edx]
  410465:	daa    
  410466:	popa   
  410467:	sahf   
  410468:	test   DWORD PTR [ebp+0x36],ebp
  41046b:	mov    dl,0xd0
  41046d:	and    ch,BYTE PTR [ebx+0x47311bac]
  410473:	lar    ebx,WORD PTR [ebx+0x64]
  410477:	into   
  410478:	sbb    BYTE PTR [eax+0x4d],0x40
  41047c:	cmp    al,0xe2
  41047e:	push   ebp
  41047f:	pop    esp
  410480:	adc    eax,0xbb7a7d9e
  410485:	xchg   ecx,eax
  410486:	and    DWORD PTR [ebp+0x60a2ade1],edi
  41048c:	dec    edi
  41048d:	xchg   BYTE PTR [edi+0x31],cl
  410490:	retf   
  410491:	outs   dx,BYTE PTR ds:[esi]
  410492:	pop    ss
  410493:	jp     0x410483
  410495:	mov    bl,0x46
  410497:	xor    al,0x84
  410499:	inc    edx
  41049a:	lahf   
  41049b:	or     ecx,ecx
  41049d:	out    0xc,al
  41049f:	cmp    BYTE PTR [ebx],0x69
  4104a2:	sbb    BYTE PTR [eax+eiz*2-0xd077e8e],0xc9
  4104aa:	int    0x7b
  4104ac:	add    al,0xdc
  4104ae:	imul   edi,DWORD PTR [ebx-0x61],0x1b
  4104b2:	mov    BYTE PTR [edi],bl
  4104b4:	clc    
  4104b5:	cdq    
  4104b6:	nop
  4104b7:	lock hlt 
  4104b9:	cwde   
  4104ba:	icebp  
  4104bb:	xchg   esp,eax
  4104bc:	pop    esi
  4104bd:	adc    eax,0xfa4054ae
  4104c2:	ss enter 0xc4bb,0x32
  4104c7:	das    
  4104c8:	test   al,0x1a
  4104ca:	mov    edx,0xff913706
  4104cf:	push   edx
  4104d0:	xor    ebx,DWORD PTR [eax-0x30]
  4104d3:	and    cl,BYTE PTR [esi+0x10]
  4104d6:	pusha  
  4104d7:	mov    al,ds:0x67d7f7af
  4104dc:	mov    ebp,0x627c50a2
  4104e1:	adc    ebp,ebp
  4104e3:	mov    ch,0xa1
  4104e5:	mov    dl,0xc
  4104e7:	cmp    DWORD PTR [ebx-0x3b],ebx
  4104ea:	xchg   ebx,eax
  4104eb:	popa   
  4104ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104ed:	cmp    BYTE PTR [edi-0x20cafe5],cl
  4104f3:	cdq    
  4104f4:	or     eax,0xccfe6360
  4104f9:	mov    esi,0xbde88f4a
  4104fe:	or     DWORD PTR [ebp-0x19d189dc],ebx
  410504:	pop    ecx
  410505:	iret   
  410506:	dec    edx
  410507:	add    cl,BYTE PTR [ebx-0x56db04b7]
  41050d:	cmp    ecx,DWORD PTR [ecx+0x62]
  410510:	mov    cl,0x71
  410512:	call   0xae37:0xd725e378
  410519:	les    edx,FWORD PTR [eax+0x7d]
  41051c:	mov    DWORD PTR [ecx+ebp*8+0x21],esi
  410520:	aaa    
  410521:	jecxz  0x410586
  410523:	in     eax,0xef
  410525:	aaa    
  410526:	mov    bh,0x58
  410528:	aaa    
  410529:	mov    DWORD PTR [esi+0x58df8fa5],ebx
  41052f:	add    esp,DWORD PTR [edx-0xb]
  410532:	das    
  410533:	mov    ch,0x4d
  410535:	and    DWORD PTR [edx],esi
  410537:	lds    ebx,FWORD PTR ss:[edi]
  41053a:	or     al,0x11
  41053c:	sub    dh,BYTE PTR [esi]
  41053e:	pop    ebx
  41053f:	ins    DWORD PTR es:[edi],dx
  410540:	mov    esp,0xc18692e5
  410545:	lods   al,BYTE PTR ds:[esi]
  410546:	add    eax,0xd792fe29
  41054b:	nop
  41054c:	push   cs
  41054d:	push   esi
  41054e:	mov    WORD PTR [edi-0x7bf82dbf],es
  410554:	in     eax,0x99
  410556:	xchg   ebx,eax
  410557:	sbb    eax,0xc727cd54
  41055c:	and    al,0xf0
  41055e:	mov    edi,0x882fa184
  410563:	jno    0x41056e
  410565:	push   ebp
  410566:	jno    0x4105ca
  410568:	xchg   DWORD PTR ds:[ebx],eax
  41056b:	mov    bh,0xd6
  41056d:	xchg   edx,eax
  41056e:	push   ds
  41056f:	mov    ecx,0x7f088ca
  410574:	xor    al,0x0
  410576:	lahf   
  410577:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410579:	mov    BYTE PTR [ebp+0x44],dh
  41057c:	add    BYTE PTR [eax-0x718c6730],bh
  410582:	mov    eax,0x2026c3cd
  410587:	test   al,0xc0
  410589:	mov    ch,0xd0
  41058b:	mov    DWORD PTR [ebx+0x5d],esi
  41058e:	pop    esp
  41058f:	sbb    eax,0x8d020fee
  410594:	pop    ss
  410595:	xchg   ebx,eax
  410596:	addr16 sbb edi,0xfffffffb
  41059a:	sub    bl,BYTE PTR [ecx+0x75]
  41059d:	sbb    al,0x81
  41059f:	ror    ah,1
  4105a1:	pop    esi
  4105a2:	push   esi
  4105a3:	popf   
  4105a4:	push   esp
  4105a5:	(bad)  
  4105a6:	sub    BYTE PTR [esi],dl
  4105a8:	sub    edi,DWORD PTR [esi-0x55]
  4105ab:	int3   
  4105ac:	loop   0x410552
  4105ae:	iret   
  4105af:	push   ds
  4105b0:	pop    ss
  4105b1:	jle    0x410535
  4105b3:	test   BYTE PTR [ebp-0x1e],bl
  4105b6:	pop    eax
  4105b7:	or     esi,DWORD PTR [edx+0x3450a5c3]
  4105bd:	push   esp
  4105be:	push   esp
  4105bf:	add    esi,DWORD PTR [esi]
  4105c1:	mov    edi,0xc6c5fd98
  4105c6:	fst    QWORD PTR [edx+0x1c]
  4105c9:	lea    eax,[ebp-0x10]
  4105cc:	mov    DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223d4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422648
  410612:	push   DWORD PTR ds:0x4223dc
  410618:	push   DWORD PTR ds:0x422628
  41061e:	push   DWORD PTR ds:0x42269c
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422558
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	rcl    DWORD PTR [ebp-0x71974112],cl
  4106f2:	sbb    BYTE PTR [eax],bl
  4106f4:	call   0x73ed:0xd9181814
  4106fb:	clc    
  4106fc:	(bad)  
  4106fd:	sti    
  4106fe:	sub    DWORD PTR [edx-0x7ac67636],esp
  410704:	js     0x4106e9
  410706:	mov    ecx,0x6b847ccb
  41070b:	push   ebx
  41070c:	repz inc eax
  41070e:	imul   ebp,esp,0x3c8fed71
  410714:	mov    al,ds:0x2e090c71
  410719:	and    ebp,ecx
  41071b:	shr    DWORD PTR [ebx-0x69],1
  41071e:	pop    edx
  41071f:	fdivp  st(0),st
  410721:	xor    ebp,DWORD PTR [ebx]
  410723:	mov    esi,DWORD PTR [esi-0x2eb339c8]
  410729:	cld    
  41072a:	mov    eax,ds:0x258426ad
  41072f:	das    
  410730:	je     0x4107a7
  410732:	sub    al,0x6f
  410734:	out    dx,al
  410735:	sbb    DWORD PTR [esi+0x5f],0x3d15cf51
  41073c:	gs loope 0x41075e
  41073f:	xlat   BYTE PTR ds:[ebx]
  410740:	aam    0x5f
  410742:	push   0x26bbb713
  410747:	pushf  
  410748:	and    DWORD PTR [ebp+0x7f],edi
  41074b:	push   0xffffffd7
  41074d:	xor    edx,edx
  41074f:	jbe    0x410780
  410751:	in     eax,dx
  410752:	retf   0x75de
  410755:	adc    BYTE PTR [ecx-0x61],dl
  410758:	dec    ebx
  410759:	popa   
  41075a:	inc    eax
  41075b:	push   0x11c49993
  410760:	pop    esp
  410761:	push   ebx
  410762:	jne    0x4107ae
  410764:	stc    
  410765:	mov    BYTE PTR [ebp+eiz*2-0x1],ah
  410769:	pop    esi
  41076a:	rol    BYTE PTR [edi-0x34441bfc],1
  410770:	icebp  
  410771:	int    0xb3
  410773:	adc    bl,BYTE PTR [eax]
  410775:	mov    esp,0xb6e8f7d5
  41077a:	push   ebp
  41077b:	xor    BYTE PTR [eax-0x4c],0xdc
  41077f:	and    al,0xe7
  410781:	aad    0x82
  410783:	jbe    0x41076b
  410785:	inc    edi
  410786:	cmp    BYTE PTR [eax+0x1],0x38
  41078a:	addr16 ja 0x41080c
  41078d:	int    0x25
  41078f:	gs (bad) 
  410791:	jmp    0x41074c
  410793:	sahf   
  410794:	push   edi
  410795:	and    eax,ebp
  410797:	call   0x1471:0x6ecfe48e
  41079e:	dec    eax
  41079f:	push   esp
  4107a0:	retf   0xd757
  4107a3:	ror    DWORD PTR [eax-0x55],0xb2
  4107a7:	push   0xac837754
  4107ac:	mov    ebx,0x39d31bc9
  4107b1:	and    BYTE PTR [ebp+0x3f],ah
  4107b4:	push   0x3a
  4107b6:	xlat   BYTE PTR ds:[ebx]
  4107b7:	adc    BYTE PTR [edx+esi*2+0x4283f4a7],dh
  4107be:	frstor [ebx]
  4107c0:	stos   BYTE PTR es:[edi],al
  4107c1:	pop    edx
  4107c2:	cmp    eax,0x3eca011c
  4107c7:	fcomp  QWORD PTR [eax+0x2ed801bf]
  4107cd:	mov    dl,0x6c
  4107cf:	repz mov cl,0x0
  4107d2:	push   ecx
  4107d3:	xchg   ebx,eax
  4107d4:	sub    DWORD PTR [edi+0x1f],ebx
  4107d7:	xchg   DWORD PTR [edx],eax
  4107d9:	cdq    
  4107da:	daa    
  4107db:	or     BYTE PTR [ebx-0x1d2e4b75],dl
  4107e1:	es sub al,0x5
  4107e4:	test   DWORD PTR [ebx-0x1a],eax
  4107e7:	and    DWORD PTR [ecx-0x2ab7882d],edi
  4107ed:	adc    ebx,edi
  4107ef:	xlat   BYTE PTR es:[ebx]
  4107f1:	test   al,0xca
  4107f3:	paddd  mm3,mm7
  4107f6:	push   0xefc754d9
  4107fb:	cmp    BYTE PTR [ebx+0x54c84451],bh
  410801:	pop    ecx
  410802:	mov    ecx,0x73b2389a
  410807:	inc    edx
  410808:	and    eax,0xeed4ed36
  41080d:	cmp    al,0x67
  41080f:	sbb    cl,BYTE PTR [edx+esi*4+0x53]
  410813:	dec    esi
  410814:	lock adc eax,0x8e24bab
  41081a:	leave  
  41081b:	pop    ebx
  41081c:	push   0x7844c85c
  410821:	je     0x41084e
  410823:	fimul  WORD PTR [ebp+0x5023ba1e]
  410829:	jecxz  0x4107f1
  41082b:	dec    esi
  41082c:	cmp    dh,ah
  41082e:	adc    bh,BYTE PTR ds:0x34d6ad97
  410834:	mov    WORD PTR [esi],?
  410836:	stc    
  410837:	repz inc edx
  410839:	mov    dh,bh
  41083b:	inc    esi
  41083c:	call   0x5487:0x566ee8ef
  410843:	jb     0x41089f
  410845:	cmc    
  410846:	mov    ds:0x88b35cf8,al
  41084b:	das    
  41084c:	cdq    
  41084d:	rcl    DWORD PTR [ecx+0x11],0x82
  410851:	mov    esp,0x61ca8e81
  410856:	mov    eax,0xbaf2af0b
  41085b:	sub    eax,0xac0a3c8b
  410860:	inc    ebp
  410861:	cmp    cl,cl
  410863:	mov    eax,ds:0x46811b27
  410868:	xor    cl,dh
  41086a:	push   0x76
  41086c:	idiv   DWORD PTR [edx-0xb36ba3c]
  410872:	clc    
  410873:	das    
  410874:	mov    ch,0xb6
  410876:	ins    DWORD PTR es:[edi],dx
  410877:	scas   al,BYTE PTR es:[edi]
  410878:	out    0xd8,eax
  41087a:	push   edi
  41087b:	push   es
  41087c:	iret   
  41087d:	mov    edi,gs
  41087f:	add    ah,al
  410881:	push   0xcd34581c
  410886:	mov    eax,fs
  410888:	xor    al,0x59
  41088a:	repz jne 0x410867
  41088d:	push   esp
  41088e:	in     eax,dx
  41088f:	push   es
  410890:	and    BYTE PTR [eax+0x51],bl
  410893:	test   eax,0x180d162c
  410898:	lahf   
  410899:	(bad)  
  41089a:	jmp    0xc10c:0x9c385141
  4108a1:	sbb    BYTE PTR [edi+0x23277c8d],0x39
  4108a8:	mov    ebp,DWORD PTR [edx+edi*8+0x14]
  4108ac:	dec    edi
  4108ad:	adc    al,0xf0
  4108af:	sub    al,0x90
  4108b1:	in     al,dx
  4108b2:	lock xor DWORD PTR [edi+0x67],edx
  4108b6:	and    esp,edx
  4108b8:	pushf  
  4108b9:	push   ebp
  4108ba:	scas   eax,DWORD PTR es:[edi]
  4108bb:	mov    edx,edi
  4108bd:	mov    DWORD PTR [edi+0x2b],esp
  4108c0:	or     dh,BYTE PTR [edx+0x7b5e2348]
  4108c6:	jg     0x410914
  4108c8:	mov    dl,ch
  4108ca:	pop    eax
  4108cb:	(bad)  
  4108cc:	fldcw  WORD PTR [ecx]
  4108ce:	push   ebp
  4108cf:	loopne 0x4108a0
  4108d1:	cmc    
  4108d2:	jne    0x410910
  4108d4:	xchg   ecx,eax
  4108d5:	jb     0x41085a
  4108d7:	push   ecx
  4108d8:	jb     0x41090e
  4108da:	inc    esp
  4108db:	jbe    0x4108e9
  4108dd:	ja     0x4108ea
  4108df:	and    ecx,DWORD PTR [ecx+ebx*1+0x6c]
  4108e3:	dec    eax
  4108e4:	mov    ds:0x2a2763cf,al
  4108e9:	iret   
  4108ea:	mov    BYTE PTR [ecx-0x5c6fca1f],al
  4108f0:	push   ebx
  4108f1:	xchg   ebx,eax
  4108f2:	cwde   
  4108f3:	lds    ecx,FWORD PTR [ebp+0x5b]
  4108f6:	or     eax,0x3f6c57ae
  4108fb:	(bad)  
  4108fc:	into   
  4108fd:	push   es
  4108fe:	sub    al,0x32
  410900:	inc    ecx
  410901:	aas    
  410902:	daa    
  410903:	outs   dx,DWORD PTR ds:[esi]
  410904:	das    
  410905:	push   esp
  410906:	mov    bl,0xc
  410908:	ss dec edi
  41090a:	loop   0x410950
  41090c:	pop    ebx
  41090d:	add    esp,ebp
  41090f:	cs push ebx
  410911:	mov    dl,0x6b
  410913:	sbb    DWORD PTR [edx+0x2e],esp
  410916:	mov    ds:0x3a201c2,eax
  41091b:	jg     0x410901
  41091d:	push   ebp
  41091e:	cmp    bl,BYTE PTR [esi+esi*8]
  410921:	mov    BYTE PTR [ecx-0x78],dh
  410924:	inc    edx
  410925:	gs mov edx,0xad6fa894
  41092b:	push   ecx
  41092c:	xchg   ebp,eax
  41092d:	inc    esi
  41092e:	mov    ch,0xe9
  410930:	sub    esi,edi
  410932:	shl    DWORD PTR [eax-0x11806125],cl
  410938:	mov    edx,0x1ed17b5
  41093d:	mov    eax,ds:0x729f4b07
  410942:	push   0xffffff93
  410944:	cmp    eax,0x358bcc1b
  410949:	xor    dh,BYTE PTR ds:0x3a18acfc
  41094f:	mov    cl,0xd3
  410951:	jae    0x410934
  410953:	jmp    0x2766abe1
  410958:	icebp  
  410959:	sub    esp,DWORD PTR [ecx+ecx*1]
  41095c:	or     BYTE PTR [ebx],bh
  41095e:	jbe    0x4108f6
  410960:	fwait
  410961:	pop    esp
  410962:	dec    edx
  410963:	xchg   edx,eax
  410964:	in     eax,0x40
  410966:	cmp    BYTE PTR [edi+ebx*8],dl
  410969:	fsub   st,st(1)
  41096b:	xchg   edi,eax
  41096c:	dec    edx
  41096d:	pop    es
  41096e:	popa   
  41096f:	sti    
  410970:	lods   al,BYTE PTR ds:[esi]
  410971:	adc    edi,DWORD PTR [ecx-0x1588d5fa]
  410977:	in     al,0x33
  410979:	(bad)  
  41097b:	mov    ecx,0xaabc900e
  410980:	stc    
  410981:	aas    
  410982:	fdivr  QWORD PTR [ecx+edx*2+0x6654e903]
  410989:	dec    edi
  41098a:	and    esi,DWORD PTR [edx+ebp*4]
  41098d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41098e:	jbe    0x4109ef
  410990:	loopne 0x4109f0
  410992:	mov    edi,0x3a7d3d4c
  410997:	call   0x6bafa3a
  41099c:	cmp    DWORD PTR [edi+eax*4+0x70eddb25],eax
  4109a3:	sub    bh,BYTE PTR ds:0x236e20c1
  4109a9:	out    dx,eax
  4109aa:	imul   ebp,DWORD PTR gs:[esi+0x7e771e2e],0xf04993bb
  4109b5:	fdivr  QWORD PTR [esi+0x30e2aab8]
  4109bb:	or     eax,0x58c4
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x42206c
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x42206c
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0x6af49705
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [edi],cl
  410a7d:	call   0x8f7c32fd
  410a82:	mov    edi,0x36887d38
  410a87:	in     al,0xd7
  410a89:	ror    BYTE PTR [ecx+ebp*4+0x40c723bd],1
  410a90:	jbe    0x410ad7
  410a92:	sbb    ebp,ebx
  410a94:	xchg   ebx,eax
  410a95:	fnstenv [esi]
  410a97:	clc    
  410a98:	test   BYTE PTR [eax+0x7e],bl
  410a9b:	jae    0x410b09
  410a9d:	(bad)  
  410a9f:	xor    bl,BYTE PTR [ebx+esi*2+0x38157176]
  410aa6:	iret   
  410aa7:	add    ecx,DWORD PTR [edx]
  410aa9:	imul   eax,DWORD PTR [edi],0xd69c32ba
  410aaf:	out    dx,al
  410ab0:	jo     0x410acf
  410ab2:	leave  
  410ab3:	sub    ecx,esp
  410ab5:	scas   al,BYTE PTR es:[edi]
  410ab6:	mov    edx,0x9d8abe71
  410abb:	add    eax,eax
  410abd:	sbb    al,0xc4
  410abf:	cmp    al,0x24
  410ac1:	or     eax,0xf6abc3f7
  410ac6:	and    BYTE PTR [edx+0x1aaba909],bl
  410acc:	ins    DWORD PTR es:[edi],dx
  410acd:	js     0x410ab1
  410acf:	aam    0x1a
  410ad1:	xchg   esp,eax
  410ad2:	call   0x2ad2:0x8a27314f
  410ad9:	outs   dx,DWORD PTR ds:[esi]
  410ada:	inc    edx
  410adb:	mov    esp,DWORD PTR [ebp+0x12]
  410ade:	jmp    eax
  410ae0:	cmc    
  410ae1:	and    BYTE PTR [edi],bl
  410ae3:	xchg   ecx,eax
  410ae4:	xlat   BYTE PTR ds:[ebx]
  410ae5:	rcr    cl,cl
  410ae7:	stos   DWORD PTR es:[edi],eax
  410ae8:	shl    BYTE PTR [esi],0xa6
  410aeb:	push   esp
  410aec:	outs   dx,BYTE PTR ds:[esi]
  410aed:	jne    0x410aa1
  410aef:	jns    0x410a99
  410af1:	push   ss
  410af2:	call   0x43e9:0x13d8e001
  410af9:	push   edx
  410afa:	sar    BYTE PTR [eax+0x252d7ad8],cl
  410b00:	shr    esp,0x92
  410b03:	jmp    DWORD PTR [ecx+ebx*1-0x1b]
  410b07:	js     0x410af8
  410b09:	inc    edx
  410b0a:	pop    edi
  410b0b:	(bad)  [edi+0x38cc12f6]
  410b11:	sbb    bl,BYTE PTR [eax-0x4d71a026]
  410b17:	repnz and eax,0x891068ee
  410b1d:	stos   DWORD PTR es:[edi],eax
  410b1e:	sub    DWORD PTR [ebx-0x5d0da46],esi
  410b24:	pop    ecx
  410b25:	mov    WORD PTR [ecx-0xb5b2408],?
  410b2b:	jmp    0x410acb
  410b2d:	xor    eax,0x5b9df17a
  410b32:	je     0x410b82
  410b34:	pop    esi
  410b35:	sar    BYTE PTR [ecx],cl
  410b37:	xchg   edi,eax
  410b38:	mov    ecx,0xc6924f3b
  410b3d:	mov    esi,0x26050f37
  410b42:	xor    bh,BYTE PTR [edx+0x2951ece2]
  410b48:	mov    ebx,0x2e45d3f7
  410b4d:	push   ss
  410b4e:	in     eax,0xb3
  410b50:	aas    
  410b51:	xlat   BYTE PTR ds:[ebx]
  410b52:	dec    ecx
  410b53:	lods   al,BYTE PTR ds:[esi]
  410b54:	adc    DWORD PTR ds:0x3fd7931,0xfffffff5
  410b5b:	rcl    eax,0x19
  410b5e:	or     eax,0x286508cd
  410b63:	dec    esi
  410b64:	push   ds
  410b65:	cmp    ah,dh
  410b67:	loop   0x410bb5
  410b69:	loopne 0x410bbe
  410b6b:	xor    ah,dl
  410b6d:	out    0xdd,eax
  410b6f:	ret    
  410b70:	(bad)  
  410b71:	mov    cl,0x32
  410b73:	add    DWORD PTR [edx],0x45
  410b76:	pop    edi
  410b77:	push   ebp
  410b78:	aaa    
  410b79:	out    0x75,al
  410b7b:	test   BYTE PTR [ecx-0x23f4ab54],dl
  410b81:	or     DWORD PTR [eax-0x57],ebx
  410b84:	test   al,0xdb
  410b86:	xor    eax,0x8bb8575
  410b8b:	add    cl,BYTE PTR [edi+eax*1+0x717260a2]
  410b92:	lods   eax,DWORD PTR ds:[esi]
  410b93:	inc    eax
  410b94:	sbb    BYTE PTR [edi],dh
  410b96:	inc    dl
  410b98:	xor    eax,0xc78742a6
  410b9d:	jo     0x410b7c
  410b9f:	rcr    DWORD PTR [edi+0x7bd31e50],0xc7
  410ba6:	test   BYTE PTR [eax],bl
  410ba8:	fs clc 
  410baa:	lahf   
  410bab:	scas   eax,DWORD PTR es:[edi]
  410bac:	jmp    0xa09559af
  410bb1:	retf   
  410bb2:	push   ebx
  410bb3:	call   0xe753:0x12efcdca
  410bba:	imul   edi,edi,0xc92e6ce0
  410bc0:	jge    0x410ba7
  410bc2:	ror    BYTE PTR [ecx],1
  410bc4:	dec    esp
  410bc5:	addr16 call 0xd65ee13f
  410bcb:	(bad)  
  410bcc:	and    ecx,DWORD PTR [edi+0x27]
  410bcf:	and    eax,DWORD PTR [eax]
  410bd1:	push   ebp
  410bd2:	shl    DWORD PTR [edx+0x91f6ca2],1
  410bd8:	stc    
  410bd9:	pop    edx
  410bda:	jg     0x410c00
  410bdc:	pusha  
  410bdd:	ss xchg edx,eax
  410bdf:	xchg   edx,eax
  410be0:	jmp    0x410bed
  410be2:	fistp  QWORD PTR [edi+ebx*1]
  410be5:	and    ebp,DWORD PTR [edi-0x1c2fe4c4]
  410beb:	jne    0x410bd8
  410bed:	sub    al,0x17
  410bef:	imul   ebx,DWORD PTR [ebx-0x9],0x47a6e5ba
  410bf6:	scas   eax,DWORD PTR es:[edi]
  410bf7:	push   0xffffff90
  410bf9:	mov    eax,ds:0xad00413e
  410bfe:	in     ax,dx
  410c00:	dec    esi
  410c01:	bound  ecx,QWORD PTR [edi-0x2e]
  410c04:	sbb    ah,BYTE PTR [edx-0x42eb64e1]
  410c0a:	sar    ch,1
  410c0c:	cmp    al,0x54
  410c0e:	cmp    ecx,DWORD PTR [edx-0x7ffd500a]
  410c14:	mov    WORD PTR [ecx-0x2d],ss
  410c17:	ss pop es
  410c19:	sub    esp,edi
  410c1b:	mov    al,0xb9
  410c1d:	mov    DWORD PTR [eax+0x649ff2b6],eax
  410c23:	clc    
  410c24:	xchg   DWORD PTR [edx],ebx
  410c26:	push   0x541e3555
  410c2b:	cmp    al,0xdc
  410c2d:	stc    
  410c2e:	push   ebx
  410c2f:	cmc    
  410c30:	mov    dh,0xad
  410c32:	cli    
  410c33:	fild   DWORD PTR [eax-0x57]
  410c36:	fwait
  410c37:	int3   
  410c38:	sbb    ecx,esp
  410c3a:	sub    bl,ah
  410c3c:	or     eax,0x6153dfa6
  410c41:	or     ebx,0x409d3540
  410c47:	gs cmp al,0x21
  410c4a:	cmc    
  410c4b:	imul   esi,DWORD PTR [ebp-0x6e],0x1f04ca6d
  410c52:	sub    DWORD PTR [esi-0xa],edx
  410c55:	aas    
  410c56:	mov    bh,0xb5
  410c58:	mov    ds:0x654fbba,eax
  410c5d:	cs mov bh,bl
  410c60:	adc    al,0x6c
  410c62:	rol    BYTE PTR [ebp-0x7acff7f4],1
  410c68:	outs   dx,BYTE PTR ds:[esi]
  410c69:	ins    BYTE PTR es:[edi],dx
  410c6a:	popa   
  410c6b:	mov    ecx,0x20c7c6db
  410c70:	cmc    
  410c71:	jns    0x410c4d
  410c73:	out    0x5a,eax
  410c75:	call   DWORD PTR [ecx]
  410c77:	jle    0x410c8a
  410c79:	aaa    
  410c7a:	nop
  410c7b:	jle    0x410c80
  410c7d:	inc    ebx
  410c7e:	imul   edi,DWORD PTR [esi+edx*1-0x1491d17d],0xffffff8e
  410c86:	scas   eax,DWORD PTR es:[edi]
  410c87:	in     al,dx
  410c88:	or     eax,0x299ed6df
  410c8d:	xchg   ecx,eax
  410c8e:	idiv   BYTE PTR [esi]
  410c90:	push   ebp
  410c91:	push   ss
  410c92:	test   DWORD PTR [eax-0x332cb343],ecx
  410c98:	ss xchg ebx,eax
  410c9a:	jnp    0x410c98
  410c9c:	mov    cl,BYTE PTR [edx]
  410c9e:	js     0x410c46
  410ca0:	(bad)  
  410ca1:	jmp    0x410d06
  410ca3:	cmp    DWORD PTR ds:0x2e507f1c,edx
  410ca9:	pop    es
  410caa:	jnp    0x410cb6
  410cac:	jbe    0x410c4b
  410cae:	adc    eax,0xb3d648f1
  410cb3:	sub    al,ah
  410cb5:	jne    0x410c8f
  410cb7:	mov    ebx,0x1eedb3d2
  410cbc:	inc    ebp
  410cbd:	push   ecx
  410cbe:	stos   DWORD PTR es:[edi],eax
  410cbf:	out    dx,eax
  410cc0:	int    0x31
  410cc2:	xor    ebx,edi
  410cc4:	push   ebx
  410cc5:	in     eax,dx
  410cc6:	ret    
  410cc7:	ror    BYTE PTR [ebp+0x4c],cl
  410cca:	ds mov ch,0xb4
  410ccd:	rcl    DWORD PTR [edi-0x39b59373],cl
  410cd3:	in     ax,0x47
  410cd6:	push   edi
  410cd7:	xchg   ebp,eax
  410cd8:	inc    BYTE PTR [esi-0x60]
  410cdb:	pusha  
  410cdc:	in     eax,dx
  410cdd:	loope  0x410d16
  410cdf:	xchg   esi,eax
  410ce0:	jle    0x410c84
  410ce2:	xor    ecx,DWORD PTR [edi]
  410ce4:	jp     0x410cf1
  410ce6:	or     edi,0xffffffd9
  410ce9:	sub    eax,0x69acf69a
  410cee:	xor    edi,ecx
  410cf0:	fs in  al,dx
  410cf2:	outs   dx,DWORD PTR ds:[esi]
  410cf3:	imul   edx,DWORD PTR [eax],0x284cf6d3
  410cf9:	sbb    bh,BYTE PTR [edx+0x19a532af]
  410cff:	scas   al,BYTE PTR es:[edi]
  410d00:	mov    edx,fs
  410d02:	ror    BYTE PTR ds:0xcc1a475c,0x18
  410d09:	mov    ebp,0xcb4fe139
  410d0e:	aas    
  410d0f:	xchg   esi,eax
  410d10:	dec    esp
  410d11:	push   edi
  410d12:	xchg   ecx,eax
  410d13:	int3   
  410d14:	es jle 0x410cb2
  410d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d18:	lods   eax,DWORD PTR ds:[esi]
  410d19:	xchg   ebp,eax
  410d1a:	fiadd  DWORD PTR [edi+0x66]
  410d1d:	popa   
  410d1e:	and    ebp,DWORD PTR [ecx]
  410d20:	cmp    al,0xa4
  410d22:	adc    eax,0xd4394b62
  410d27:	cdq    
  410d28:	pop    ds
  410d29:	cli    
  410d2a:	and    al,0xd2
  410d2c:	adc    BYTE PTR [esi+0x36b9dd1e],ah
  410d32:	hlt    
  410d33:	fwait
  410d34:	jl     0x410d6f
  410d36:	into   
  410d37:	push   eax
  410d38:	out    0xe1,eax
  410d3a:	shl    ecx,0xcb
  410d3d:	pushf  
  410d3e:	or     ecx,DWORD PTR [ecx+0x45c7fc7d]
  410d44:	hlt    
  410d45:	mov    ch,BYTE PTR [eax+eax*1]
  410d48:	add    BYTE PTR [ebx+0x1b8f44d],cl
  410d4e:	inc    esp
  410d4f:	add    BYTE PTR [eax],al
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0x43
  410d65:	aam    0xb7
  410d67:	jl     0x410dd6
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0x98eb:0x16181814
  410d73:	loopne 0x410d01
  410d75:	fstp   DWORD PTR [edi-0x71]
  410d78:	pop    edi
  410d79:	cwde   
  410d7a:	cld    
  410d7b:	push   cs
  410d7c:	jecxz  0x410dda
  410d7e:	xor    DWORD PTR [ebx-0x3f43fac4],ebx
  410d84:	adc    al,BYTE PTR [ebx+0x11]
  410d87:	mov    ebp,0x5c3c84ab
  410d8c:	div    BYTE PTR [edx+esi*1]
  410d8f:	pop    esp
  410d90:	jb     0x410def
  410d92:	mov    edi,0xb3354e47
  410d97:	repnz dec edx
  410d99:	(bad)  
  410d9b:	fwait
  410d9c:	add    al,0x4f
  410d9e:	test   al,0xd5
  410da0:	mov    ebx,0xf47448c9
  410da5:	stos   BYTE PTR es:[edi],al
  410da6:	sub    BYTE PTR [ecx+0x687ed2c7],dl
  410dac:	push   ds
  410dad:	pop    esi
  410dae:	imul   edx,edi,0x22bb94e1
  410db4:	or     DWORD PTR [ebx],esp
  410db6:	sahf   
  410db7:	cdq    
  410db8:	mov    esp,0x3777d669
  410dbd:	psrlq  mm5,QWORD PTR [esi+0x60]
  410dc1:	std    
  410dc2:	push   0xffffffad
  410dc4:	sub    bl,cl
  410dc6:	js     0x410de6
  410dc8:	jo     0x410e0e
  410dca:	dec    edx
  410dcb:	push   ss
  410dcc:	xchg   edi,eax
  410dcd:	inc    ecx
  410dce:	xchg   esi,eax
  410dcf:	cmp    al,0x73
  410dd1:	mov    al,0x79
  410dd3:	inc    ebp
  410dd4:	cmp    BYTE PTR es:[esp+ecx*2+0x4aaa24ad],cl
  410ddc:	fstp   QWORD PTR [ebx+0x40]
  410ddf:	ds out 0xdf,eax
  410de2:	push   eax
  410de3:	sbb    eax,0x2bc8e211
  410de8:	sub    al,0x92
  410dea:	sub    eax,0x55d18d93
  410def:	dec    DWORD PTR [ecx]
  410df1:	push   ebx
  410df2:	cs sbb al,0x74
  410df5:	dec    edi
  410df6:	mov    ch,0xf4
  410df8:	jmp    0x795b7a2
  410dfd:	scas   al,BYTE PTR es:[edi]
  410dfe:	sub    BYTE PTR [ecx+edx*4+0x50],cl
  410e02:	je     0x410de4
  410e04:	test   al,0xff
  410e06:	inc    eax
  410e07:	pop    ebp
  410e08:	sbb    DWORD PTR [eax+0x32c4739f],0xffffffea
  410e0f:	mov    DWORD PTR [ebx],edi
  410e11:	call   0xc7c1e58e
  410e16:	or     eax,0x9c867a8a
  410e1b:	imul   edi,DWORD PTR [ebx],0x4b
  410e1e:	(bad)  [edi-0x719739cf]
  410e24:	mov    dh,0x13
  410e26:	pusha  
  410e27:	ins    DWORD PTR es:[edi],dx
  410e28:	jl     0x410e7f
  410e2a:	mov    ah,0x5b
  410e2c:	fbld   TBYTE PTR [ebx+0x3ae5e507]
  410e32:	in     eax,dx
  410e33:	stc    
  410e34:	cmp    eax,0x758494b
  410e39:	fstp   TBYTE PTR ds:0x2558f606
  410e3f:	fisttp WORD PTR [ebx-0x3b]
  410e42:	adc    DWORD PTR ds:0x2a80d4f,edi
  410e48:	in     eax,0xbc
  410e4a:	inc    esp
  410e4b:	aam    0x74
  410e4d:	mov    ebx,0xfe9de2c8
  410e52:	xor    eax,0xa4afeed4
  410e57:	bound  esi,QWORD PTR [eiz*1-0x38310193]
  410e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e5f:	xchg   edi,eax
  410e60:	sbb    DWORD PTR [ebx-0x52484d60],ebx
  410e66:	test   eax,0xf9e6ac02
  410e6b:	or     ah,bh
  410e6d:	sub    eax,0x5d053dc9
  410e72:	(bad)  
  410e74:	dec    ecx
  410e75:	add    ch,ah
  410e77:	cmp    edi,esi
  410e79:	mov    al,ds:0x4e37b0b6
  410e7e:	jmp    0x6b56:0x961a8d4b
  410e85:	out    0x67,al
  410e87:	jp     0x410e9c
  410e89:	loopne 0x410e3d
  410e8b:	mov    esi,0xd1b90b1a
  410e90:	mov    esi,0x36afffd
  410e95:	leave  
  410e96:	xor    eax,0xbbd764a1
  410e9b:	dec    ebx
  410e9c:	mov    al,ds:0x183be32b
  410ea1:	pop    es
  410ea2:	int    0x7d
  410ea4:	and    eax,DWORD PTR [esi-0x2d]
  410ea7:	cmp    DWORD PTR [ebp+0x3b],edx
  410eaa:	das    
  410eab:	jg     0x410eec
  410ead:	jnp    0x410e31
  410eaf:	pop    esi
  410eb0:	fcmovbe st,st(4)
  410eb2:	mov    ds:0x22318a5b,al
  410eb7:	lds    ebx,FWORD PTR [eax]
  410eb9:	sub    al,0x3e
  410ebb:	ss jnp 0x410ed4
  410ebe:	jbe    0x410f20
  410ec0:	ds jb  0x410ed6
  410ec3:	outs   dx,DWORD PTR ds:[esi]
  410ec4:	jnp    0x410f3b
  410ec6:	sar    BYTE PTR [ebp-0x3d],0xcb
  410eca:	in     al,dx
  410ecb:	xchg   ebx,eax
  410ecc:	js     0x410ea1
  410ece:	sbb    eax,0x3c5d3100
  410ed3:	push   ebx
  410ed4:	cmc    
  410ed5:	fild   QWORD PTR [esi+0x4c710243]
  410edb:	loop   0x410e78
  410edd:	mov    ch,BYTE PTR [ebx+0x8]
  410ee0:	aas    
  410ee1:	mov    al,ds:0x4082d62e
  410ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee7:	fcom   QWORD PTR [ebp-0x7a210a09]
  410eed:	and    eax,DWORD PTR [edi+0x31]
  410ef0:	jg     0x410ecd
  410ef2:	outs   dx,BYTE PTR ds:[esi]
  410ef3:	push   es
  410ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef5:	inc    ecx
  410ef6:	scas   al,BYTE PTR es:[edi]
  410ef7:	mov    dl,0x2e
  410ef9:	iret   
  410efa:	fcom   DWORD PTR [ebx+0x74]
  410efd:	int    0x85
  410eff:	call   0xcef3:0xc1fb779e
  410f06:	fisttp WORD PTR [ecx+0x34]
  410f09:	pop    ebx
  410f0a:	fmul   DWORD PTR [eax-0x6d5fe8f1]
  410f10:	lds    ebp,FWORD PTR [ecx+0x207f31ee]
  410f16:	inc    ebx
  410f17:	mov    bl,0x27
  410f19:	icebp  
  410f1a:	add    BYTE PTR [edx-0xf],ch
  410f1d:	mov    ?,WORD PTR [eax-0x7d]
  410f20:	xchg   ebp,eax
  410f21:	lods   al,BYTE PTR ds:[esi]
  410f22:	dec    DWORD PTR [ebx+ecx*4]
  410f25:	daa    
  410f26:	outs   dx,BYTE PTR ds:[esi]
  410f27:	mov    ebx,0x467bbd36
  410f2c:	mov    ds:0x7afbf138,al
  410f31:	cwde   
  410f32:	adc    DWORD PTR [ebx+0x31a4d731],0xf678c8e1
  410f3c:	push   cs
  410f3d:	jae    0x410f8b
  410f3f:	mov    bl,dl
  410f41:	loope  0x410ed9
  410f43:	or     eax,0x3f20a4cb
  410f48:	in     eax,dx
  410f49:	xchg   BYTE PTR [esi-0xc93de94],al
  410f4f:	pop    ebx
  410f50:	jae    0x410f0c
  410f52:	xchg   ebp,eax
  410f53:	xchg   DWORD PTR [edi+0x7b8a267c],esp
  410f59:	aas    
  410f5a:	fcomp  DWORD PTR ds:0xfabd339a
  410f60:	(bad)  
  410f61:	sub    eax,0x4492a77e
  410f66:	adc    ch,bl
  410f68:	mov    bl,0xf2
  410f6a:	dec    eax
  410f6b:	popa   
  410f6c:	cwde   
  410f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f6e:	mov    eax,0x8bd0d98d
  410f73:	fsubr  st,st(3)
  410f75:	push   ebx
  410f76:	sub    DWORD PTR [ecx],0xa8aa6ac7
  410f7c:	ds push cs
  410f7e:	cdq    
  410f7f:	mov    al,0xbe
  410f81:	mov    eax,ds:0x20ba6084
  410f86:	popf   
  410f87:	fstp   QWORD PTR [esi+eax*1]
  410f8a:	pop    ss
  410f8b:	loopne 0x410fb3
  410f8d:	shr    DWORD PTR [esi+ecx*1-0x62],cl
  410f91:	add    dh,BYTE PTR [esi+ecx*2]
  410f94:	adc    eax,0x85c62ff
  410f99:	cmp    BYTE PTR ds:0x9b7cb9dc,al
  410f9f:	js     0x410fe9
  410fa1:	shr    ah,cl
  410fa3:	cmp    al,0xf0
  410fa5:	push   esi
  410fa6:	inc    ebx
  410fa7:	or     al,0x2d
  410fa9:	and    al,0xae
  410fab:	ss (bad) 
  410fae:	xchg   esi,eax
  410faf:	cmp    BYTE PTR fs:[ebx],ch
  410fb2:	cmp    ch,BYTE PTR [ebx]
  410fb4:	mov    bh,0x6d
  410fb6:	jge    0x41102f
  410fb8:	mov    ds,WORD PTR [edx+0x4]
  410fbb:	repz jns 0x410f3e
  410fbe:	icebp  
  410fbf:	cmp    al,0xbe
  410fc1:	xchg   BYTE PTR [edi],bh
  410fc3:	sti    
  410fc4:	ins    DWORD PTR es:[edi],dx
  410fc5:	das    
  410fc6:	inc    ebx
  410fc7:	mov    ecx,0x788af675
  410fcc:	jp     0x411036
  410fce:	mov    es:0x5dff8752,al
  410fd4:	jg     0x410f73
  410fd6:	pushf  
  410fd7:	scas   al,BYTE PTR es:[edi]
  410fd8:	ins    DWORD PTR es:[edi],dx
  410fd9:	dec    eax
  410fda:	data16 shl BYTE PTR [esi-0x7eea9f77],cl
  410fe1:	lods   eax,DWORD PTR ds:[esi]
  410fe2:	repnz shl DWORD PTR [eax],0x69
  410fe6:	mov    cl,dl
  410fe8:	lods   al,BYTE PTR ds:[esi]
  410fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fea:	popa   
  410feb:	pop    ds
  410fec:	mov    ch,BYTE PTR [esi+0x4f]
  410fef:	repnz (bad) 
  410ff1:	in     al,0x90
  410ff3:	clc    
  410ff4:	or     ebx,DWORD PTR [ecx+0x662f5a18]
  410ffa:	retfw  0x68f
  410ffe:	jne    0x410fe2
  411000:	mov    edi,0x9c5b2b1b
  411006:	mov    ds:0x9fa0ed65,al
  41100b:	in     eax,0x12
  41100d:	adc    al,0x45
  41100f:	ret    0x8920
  411012:	(bad)  [ebx+0x4e]
  411015:	inc    edi
  411016:	or     bh,0xea
  411019:	das    
  41101a:	mov    ah,0x1a
  41101c:	pop    edi
  41101d:	ja     0x41100d
  41101f:	mov    ebx,0xc530a358
  411024:	pop    es
  411025:	jmp    0x45cf:0x55026801
  41102c:	inc    esi
  41102d:	mov    al,ds:0xbede0b15
  411032:	hlt    
  411033:	mov    ecx,DWORD PTR [ebp-0x4]
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x1f]
  4111f1:	clc    
  4111f2:	push   ebp
  4111f3:	stos   BYTE PTR es:[edi],al
  4111f4:	out    dx,al
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	pusha  
  4111fd:	pop    esp
  4111fe:	std    
  4111ff:	daa    
  411200:	sti    
  411201:	(bad)  
  411202:	test   ch,0xe5
  411205:	dec    esp
  411206:	mov    dh,0x23
  411208:	pop    edx
  411209:	inc    eax
  41120a:	scas   eax,DWORD PTR es:[edi]
  41120b:	pop    es
  41120c:	ret    0x687e
  41120f:	bound  edx,QWORD PTR [ebp+0x55]
  411212:	inc    esp
  411213:	(bad)  
  411214:	pushf  
  411215:	xchg   esp,eax
  411216:	cld    
  411217:	jg     0x4111e3
  411219:	mov    ebp,0x41e5618d
  41121e:	mov    eax,0x4fc16a7d
  411223:	stos   BYTE PTR es:[edi],al
  411224:	jnp    0x411260
  411226:	dec    ebp
  411227:	shl    ah,1
  411229:	mov    ecx,0x1d57c4fa
  41122e:	cli    
  41122f:	(bad)  
  411230:	push   0xffffff8b
  411232:	jg     0x41121b
  411234:	pop    esi
  411235:	clc    
  411236:	(bad)  
  411238:	fstp   DWORD PTR [esi]
  41123a:	xchg   edi,eax
  41123b:	and    BYTE PTR [esi],ch
  41123d:	mov    ch,bh
  41123f:	dec    eax
  411240:	cmp    esi,DWORD PTR [esp+ecx*1-0x72]
  411244:	sbb    eax,ebx
  411246:	loopne 0x4112b1
  411248:	cmc    
  411249:	cmp    edi,eax
  41124b:	arpl   bp,ax
  41124d:	inc    esi
  41124e:	sbb    esi,DWORD PTR [ebx+0x3d0bc1dd]
  411254:	(bad)  
  411255:	mov    bh,0x8f
  411257:	jecxz  0x411286
  411259:	add    BYTE PTR [esi],cl
  41125b:	test   BYTE PTR [ebx],ch
  41125d:	lods   eax,DWORD PTR ds:[esi]
  41125e:	js     0x41122d
  411260:	pop    eax
  411261:	jecxz  0x411227
  411263:	push   es
  411264:	inc    ebp
  411265:	xchg   DWORD PTR [edi+esi*4],ecx
  411268:	jg     0x4111ea
  41126a:	xchg   ebx,esi
  41126c:	scas   eax,DWORD PTR es:[edi]
  41126d:	adc    ah,BYTE PTR [edx]
  41126f:	test   al,0xbd
  411271:	add    al,0xc1
  411273:	inc    esi
  411274:	mov    cl,0xab
  411276:	jne    0x4112d1
  411278:	mov    ebx,0x7e9f924d
  41127d:	mov    dl,BYTE PTR [ebx+0x7be62d37]
  411283:	inc    ebx
  411284:	(bad)  
  411285:	jno    0x4112ef
  411287:	std    
  411288:	mov    edx,ebx
  41128a:	cdq    
  41128b:	add    ebp,DWORD PTR [edi+0x5df01a29]
  411291:	adc    dh,al
  411293:	pushf  
  411294:	add    esi,DWORD PTR [esi]
  411296:	mov    ah,0xcc
  411298:	loop   0x411310
  41129a:	fisubr WORD PTR [ebx-0x7d]
  41129d:	test   al,0xb4
  41129f:	xchg   edi,eax
  4112a0:	inc    edx
  4112a1:	pop    ss
  4112a2:	sub    edx,DWORD PTR [edi+ebx*4-0x10e82bcb]
  4112a9:	mov    ch,0xb1
  4112ab:	mov    ?,WORD PTR [ebx-0x74]
  4112ae:	cmp    ebp,DWORD PTR [esi-0x25]
  4112b1:	mov    ch,0x9f
  4112b3:	jge    0x41126a
  4112b5:	fcomp  QWORD PTR [eax]
  4112b7:	fidivr WORD PTR [esi-0x32]
  4112ba:	cwde   
  4112bb:	mov    bl,BYTE PTR [eax+0x9a37d95]
  4112c1:	mov    fs,WORD PTR [edi+eiz*2-0x30]
  4112c5:	jnp    0x41124b
  4112c7:	scas   eax,DWORD PTR es:[edi]
  4112c8:	in     eax,0xae
  4112ca:	mov    cl,0xf8
  4112cc:	sbb    DWORD PTR [edi+0x3be770a4],esi
  4112d2:	sub    bl,dl
  4112d4:	pushaw 
  4112d6:	icebp  
  4112d7:	inc    edx
  4112d8:	neg    bh
  4112da:	inc    edi
  4112db:	dec    edx
  4112dc:	fld    DWORD PTR [ebx]
  4112de:	shl    BYTE PTR [edi+eax*4+0x25],1
  4112e2:	push   cs
  4112e3:	pop    esi
  4112e4:	dec    esp
  4112e5:	inc    edx
  4112e6:	stos   BYTE PTR es:[edi],al
  4112e7:	adc    esi,DWORD PTR [ebx-0x112718a4]
  4112ed:	shl    DWORD PTR [eax-0xb5b6936],0x67
  4112f4:	mov    esp,0x591231ac
  4112f9:	dec    ebp
  4112fa:	mov    eax,cr1
  4112fd:	mov    esp,0xeb85440f
  411302:	pop    esp
  411303:	loop   0x4112d6
  411305:	mov    BYTE PTR [ecx],al
  411307:	cs or  eax,0x502e4374
  41130d:	fwait
  41130e:	xor    eax,0xec415b5b
  411313:	imul   BYTE PTR [edx+0x58]
  411316:	xchg   esp,edx
  411318:	mov    eax,ds:0x41d98318
  41131d:	sbb    al,0xc3
  41131f:	or     eax,0xf6774596
  411324:	loop   0x4112da
  411326:	xor    bh,dh
  411328:	adc    DWORD PTR [ecx+0x31],ebp
  41132b:	stos   DWORD PTR es:[edi],eax
  41132c:	(bad)  
  41132d:	enter  0x7104,0x97
  411331:	pop    esp
  411332:	or     ecx,edx
  411334:	push   edi
  411335:	push   ebx
  411336:	scas   al,BYTE PTR es:[edi]
  411337:	adc    bl,ch
  411339:	jne    0x411355
  41133b:	outs   dx,DWORD PTR ds:[esi]
  41133c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41133d:	mov    dl,0x3b
  41133f:	aas    
  411340:	push   eax
  411341:	(bad)  
  411342:	(bad)  [edx+0x6d28f54b]
  411348:	adc    esi,ebx
  41134a:	loope  0x411329
  41134c:	ss test al,0xcd
  41134f:	mov    bl,0x65
  411351:	lahf   
  411352:	(bad)  
  411353:	rcl    DWORD PTR [ebp-0x7a],cl
  411356:	ret    0x279a
  411359:	shl    BYTE PTR [eax],1
  41135b:	(bad)  
  41135c:	adc    eax,0x40d1ab32
  411361:	lahf   
  411362:	mov    edi,fs
  411364:	out    0xfe,al
  411366:	xor    al,0x71
  411368:	sbb    esi,ecx
  41136a:	pop    ebp
  41136b:	xor    BYTE PTR [ecx+0x7ecca749],dh
  411371:	out    0x2b,al
  411373:	idiv   ecx
  411375:	cld    
  411376:	dec    edx
  411377:	lods   eax,DWORD PTR ds:[esi]
  411378:	pop    ecx
  411379:	clc    
  41137a:	mov    dl,0xfe
  41137c:	jmp    0x3495:0x90c92e11
  411383:	dec    edi
  411384:	sti    
  411385:	push   0xcd0482ba
  41138a:	mov    ds:0xd0cac815,eax
  41138f:	loope  0x411321
  411391:	cmp    eax,DWORD PTR [eax+0x401d6993]
  411397:	ins    DWORD PTR es:[edi],dx
  411398:	xchg   BYTE PTR [eax],dl
  41139a:	popf   
  41139b:	std    
  41139c:	xor    BYTE PTR [edx],0xd7
  41139f:	call   0x1409:0xf64e3146
  4113a6:	xchg   ebx,eax
  4113a7:	xor    DWORD PTR [eax-0x18],ebp
  4113aa:	push   esi
  4113ab:	mov    esi,0x7a3db74b
  4113b0:	mov    edx,0x9aca1dba
  4113b5:	add    al,0x5a
  4113b7:	mov    cs,WORD PTR [eax-0x2b]
  4113ba:	or     DWORD PTR [esi-0x50],edi
  4113bd:	mov    ds:0x54362d09,al
  4113c2:	scas   eax,DWORD PTR es:[edi]
  4113c3:	mov    al,ds:0x3c8f2df7
  4113c8:	and    BYTE PTR [ebp+0x0],bl
  4113cb:	and    bl,dl
  4113cd:	cmp    BYTE PTR ds:0xc5e7e88f,al
  4113d3:	arpl   WORD PTR [ecx],bx
  4113d5:	pop    ecx
  4113d6:	push   ecx
  4113d7:	push   0x7e
  4113d9:	or     edi,DWORD PTR [ecx+0x7679669a]
  4113df:	fidiv  WORD PTR [esp+edi*2]
  4113e2:	push   es
  4113e3:	into   
  4113e4:	add    eax,0x39967ed3
  4113e9:	aaa    
  4113ea:	pop    ecx
  4113eb:	in     al,0xb5
  4113ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ee:	into   
  4113ef:	or     DWORD PTR [edi],esi
  4113f1:	ret    0x9520
  4113f4:	dec    esi
  4113f5:	loope  0x41146d
  4113f7:	adc    eax,0xc2f4effd
  4113fc:	repz (bad) 
  4113fe:	mov    eax,0xf87393ef
  411403:	call   0x6d3e9648
  411408:	ret    
  411409:	and    bl,al
  41140b:	rcl    DWORD PTR [edx-0x51776c42],cl
  411411:	and    BYTE PTR [esi],dh
  411413:	xor    BYTE PTR [ecx],bl
  411415:	(bad)  
  411416:	mov    esi,0x736c791f
  41141b:	in     ax,dx
  41141d:	outs   dx,DWORD PTR ds:[esi]
  41141e:	aas    
  41141f:	test   BYTE PTR [edx-0x60abcd5d],dh
  411425:	sub    al,0x32
  411427:	imul   ebx,ebx,0x3d
  41142a:	pop    es
  41142b:	out    dx,al
  41142c:	lea    esi,[ebx]
  41142e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41142f:	adc    al,0xe1
  411431:	inc    ecx
  411432:	mov    esp,0xe95dea37
  411437:	adc    al,0x3f
  411439:	dec    esp
  41143a:	dec    ecx
  41143b:	inc    edx
  41143c:	sub    eax,0xe7b3ef7e
  411441:	fxch   st(2)
  411443:	dec    ecx
  411444:	jle    0x411401
  411446:	push   0x3e47a6af
  41144b:	loope  0x411409
  41144d:	int3   
  41144e:	mov    ds:0x2aca3063,al
  411453:	cmp    al,0xc7
  411455:	test   DWORD PTR [eax-0x1],edx
  411458:	(bad)  
  411459:	jmp    DWORD PTR [ebp+esi*2+0x0]
  41145d:	add    bh,al
  41145f:	test   DWORD PTR [edi+edi*8-0x1],edx
  411463:	dec    edi
  411465:	sbb    BYTE PTR [eax],al
  411467:	add    bh,al
  411469:	test   DWORD PTR [eax-0x1],esp
  41146c:	(bad)  
  41146d:	push   DWORD PTR ds:0xc7000031
  411473:	test   DWORD PTR [edi+edi*8-0x1],esp
  411477:	dec    DWORD PTR [ebp-0x38ffffaa]
  41147d:	test   DWORD PTR [eax-0x1],esi
  411480:	(bad)  
  411481:	push   edx
  411483:	adc    DWORD PTR [eax],eax
  411485:	add    bh,al
  411487:	test   DWORD PTR [edi+edi*8-0x1],esi
  41148b:	(bad)  
  41148c:	jmp    0xf045:0xc7000063
  411493:	data16 xor BYTE PTR [eax],al
  411496:	add    bh,al
  411498:	inc    ebp
  411499:	clc    
  41149a:	shr    BYTE PTR [esi+0x0],cl
  41149d:	add    BYTE PTR [eax+0x1d],ch
  4114a0:	jle    0x4114a2
  4114a2:	add    cl,ch
  4114a4:	jo     0x4114a8
  4114a6:	add    BYTE PTR [eax],al
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x7a7e2188]
  4114b5:	sahf   
  4114b6:	retf   
  4114b7:	jo     0x411500
  4114b9:	js     0x4114d3
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	test   DWORD PTR [edi-0x18],0x9884ba30
  4114c7:	jle    0x4114e2
  4114c9:	push   ds
  4114ca:	xor    DWORD PTR ds:0x6610d3a1,esi
  4114d0:	jb     0x4114d5
  4114d2:	hlt    
  4114d3:	mov    bh,0xfe
  4114d5:	pop    ss
  4114d6:	retf   
  4114d7:	mov    bh,0x42
  4114d9:	out    dx,eax
  4114da:	popa   
  4114db:	inc    edi
  4114dc:	mov    ecx,DWORD PTR [ecx]
  4114de:	sar    DWORD PTR [edi],0x5c
  4114e1:	lods   eax,DWORD PTR ds:[esi]
  4114e2:	mov    edi,0x3c216298
  4114e7:	sub    al,0xb6
  4114e9:	jnp    0x4114ca
  4114eb:	ss loopne 0x411480
  4114ee:	fs popa 
  4114f0:	es or  eax,0xa468e065
  4114f6:	cmp    esp,DWORD PTR [edx+0x68f33ade]
  4114fc:	cs push ecx
  4114fe:	(bad)  [esi-0x1]
  411501:	stos   BYTE PTR es:[edi],al
  411502:	sub    esp,DWORD PTR [edx]
  411504:	fmul   QWORD PTR [ecx+eiz*2-0x641042d0]
  41150b:	xor    BYTE PTR [esi],al
  41150d:	adc    DWORD PTR [edx+0x7e],ebp
  411510:	mov    ebx,0x59d17960
  411515:	or     al,0xf1
  411517:	or     al,0xb6
  411519:	ret    
  41151a:	popa   
  41151b:	push   edi
  41151c:	inc    ecx
  41151d:	jmp    0x4114d5
  41151f:	enter  0x7b16,0x20
  411523:	inc    edi
  411524:	aaa    
  411525:	jle    0x4114e2
  411527:	ss ror edx,cl
  41152a:	xor    bh,ch
  41152c:	sub    DWORD PTR [edx],edx
  41152e:	sub    BYTE PTR [edx+0x2841f303],0xd2
  411535:	fnstsw WORD PTR [edx-0x36]
  411538:	sbb    eax,0xe9c7eb65
  41153d:	xor    ebp,DWORD PTR [esi-0x27]
  411540:	or     DWORD PTR [esi-0x1ddceeef],ebp
  411546:	or     DWORD PTR [edx-0x1569cda9],edi
  41154c:	sbb    BYTE PTR es:[ecx+esi*1],0xe4
  411551:	cli    
  411552:	cs aad 0xb3
  411555:	outs   dx,DWORD PTR ds:[esi]
  411556:	pop    eax
  411557:	cmp    al,0x4f
  411559:	jmp    0x2548:0xb177ba40
  411560:	adc    eax,0x4c858bf
  411565:	jne    0x41151d
  411567:	mov    dl,0x5e
  411569:	push   edx
  41156a:	out    0x8f,al
  41156c:	push   0x3d
  41156e:	int    0xe0
  411570:	shl    BYTE PTR [ebx-0x6ed0cc44],1
  411576:	inc    edx
  411577:	sub    al,BYTE PTR [eax]
  411579:	xchg   BYTE PTR [eax-0x4b086fb3],cl
  41157f:	dec    edx
  411580:	std    
  411581:	mov    eax,0x2a880197
  411586:	add    BYTE PTR [esi+0x60],ah
  411589:	inc    ecx
  41158a:	hlt    
  41158b:	mov    edx,0xfbecc861
  411590:	shl    dh,1
  411592:	pusha  
  411593:	adc    eax,0x7455ab6d
  411598:	outs   dx,BYTE PTR ds:[esi]
  411599:	mov    edx,0x5328fd18
  41159e:	sbb    ebp,edx
  4115a0:	sbb    BYTE PTR [ecx],ch
  4115a2:	fwait
  4115a3:	lea    esp,[ebx]
  4115a5:	dec    edi
  4115a6:	sbb    dl,BYTE PTR [eax+eax*8+0x24]
  4115aa:	daa    
  4115ab:	(bad)  
  4115ac:	pop    ds
  4115ad:	sub    al,0x7d
  4115af:	jge    0x4115ae
  4115b1:	into   
  4115b2:	pusha  
  4115b3:	pop    esp
  4115b4:	pop    esi
  4115b5:	pop    eax
  4115b6:	sbb    bl,bh
  4115b8:	xchg   BYTE PTR [eax],cl
  4115ba:	shl    BYTE PTR [ebp+0x29b6db5c],cl
  4115c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c2:	mov    dh,0xf7
  4115c4:	in     eax,0x68
  4115c6:	enter  0xfe6a,0xb7
  4115ca:	xchg   ecx,eax
  4115cb:	jb     0x4115ad
  4115cd:	lahf   
  4115ce:	arpl   WORD PTR [ebp+0x7f16062d],dx
  4115d4:	sub    eax,0xcd37ddb2
  4115d9:	popf   
  4115da:	in     eax,dx
  4115db:	les    esi,FWORD PTR [edi+eiz*2-0x25]
  4115df:	jmp    0x7ff0bef0
  4115e4:	fdivr  DWORD PTR [edi-0x73]
  4115e7:	clc    
  4115e8:	(bad)  
  4115e9:	out    0x9b,al
  4115eb:	sbb    al,0xec
  4115ed:	adc    esi,DWORD PTR [esp+ebp*8]
  4115f0:	(bad)  
  4115f1:	stos   WORD PTR es:[edi],ax
  4115f3:	inc    eax
  4115f4:	sub    BYTE PTR [esi],dh
  4115f6:	mov    cl,0xb1
  4115f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115f9:	jne    0x4115c0
  4115fb:	sbb    BYTE PTR [edx+ebp*1+0x3a],0x44
  411600:	sub    DWORD PTR [edx+0x6357e1db],edx
  411606:	aas    
  411607:	rcl    BYTE PTR [ebp-0x627ed6c8],1
  41160d:	sub    al,0x8b
  41160f:	ret    0xecad
  411612:	pop    ds
  411613:	cmp    ebx,edi
  411615:	add    esi,DWORD PTR [edi+0x161da98d]
  41161b:	dec    ecx
  41161c:	psrld  mm4,QWORD PTR [ebx+0x2e]
  411620:	jecxz  0x411641
  411622:	mov    dh,0x6e
  411624:	jl     0x4116a5
  411626:	fimul  DWORD PTR [ecx]
  411628:	mov    dh,0xf1
  41162a:	mov    ds:0xd2f9c0b1,al
  41162f:	push   ebx
  411630:	or     esp,esp
  411632:	or     DWORD PTR [edx+0x31984870],esi
  411638:	or     ebx,DWORD PTR [ebp-0x7b]
  41163b:	inc    ebp
  41163c:	call   0x118669d3
  411641:	cmp    al,0x3c
  411643:	pop    es
  411644:	je     0x411693
  411646:	cld    
  411647:	pop    ebx
  411648:	sahf   
  411649:	jecxz  0x4115d4
  41164b:	shr    BYTE PTR [edx],cl
  41164d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41164e:	or     al,0xd5
  411650:	mov    WORD PTR [edi],gs
  411652:	inc    edi
  411653:	sbb    eax,0x2f285c01
  411658:	popa   
  411659:	and    BYTE PTR [ebx+0x41],dh
  41165c:	loop   0x411606
  41165e:	push   edx
  41165f:	ins    BYTE PTR es:[edi],dx
  411660:	mov    edi,0x73d31147
  411665:	iret   
  411666:	xchg   ebx,eax
  411667:	and    dh,dl
  411669:	dec    edi
  41166a:	inc    ebx
  41166b:	out    0x4f,al
  41166d:	mov    cl,BYTE PTR [ebp-0x7ce44924]
  411673:	jge    0x4116de
  411675:	std    
  411676:	sub    edx,DWORD PTR [esi+0x8]
  411679:	outs   dx,BYTE PTR ds:[esi]
  41167a:	jecxz  0x41162a
  41167c:	fnstenv [eax-0x5f67c0e0]
  411682:	adc    eax,0xa6ec3002
  411687:	(bad)  
  411688:	xor    DWORD PTR [ecx+0x3d],ebx
  41168b:	pop    es
  41168c:	ja     0x4116b9
  41168e:	add    edi,DWORD PTR [eax]
  411690:	adc    BYTE PTR [esi+0x67],ah
  411693:	loope  0x411668
  411695:	adc    BYTE PTR [ebx-0x4061aa2d],dl
  41169b:	or     al,0x3c
  41169d:	hlt    
  41169e:	add    eax,0x7f0d69de
  4116a3:	popa   
  4116a4:	jbe    0x4116fc
  4116a6:	imul   ebp,DWORD PTR [edi+0x18],0x92b3a9a4
  4116ad:	icebp  
  4116ae:	pop    ss
  4116af:	xchg   esp,eax
  4116b0:	push   esi
  4116b1:	push   esp
  4116b2:	xchg   ecx,eax
  4116b3:	dec    ebp
  4116b4:	fidivr DWORD PTR [ebp-0x68]
  4116b7:	push   es
  4116b8:	pop    esi
  4116b9:	adc    eax,0x18aa936f
  4116be:	jns    0x4116e9
  4116c0:	inc    ecx
  4116c1:	loope  0x411691
  4116c3:	fstp   TBYTE PTR [esi-0x557f1843]
  4116c9:	lods   eax,DWORD PTR ds:[esi]
  4116ca:	mov    al,ds:0xcc8aaf0d
  4116cf:	(bad)
  4116d2:	test   DWORD PTR [ebx-0x5d39e4ad],ecx
  4116d8:	mov    BYTE PTR [edi],cl
  4116da:	or     eax,0x10b10ca3
  4116df:	repz or DWORD PTR [edx+0x50],ebx
  4116e3:	shl    DWORD PTR [edx],cl
  4116e5:	sar    DWORD PTR [ecx+0x23],0xd9
  4116e9:	jo     0x411698
  4116eb:	mov    WORD PTR [edi],ds
  4116ed:	mov    WORD PTR es:[ecx-0x33],ds
  4116f1:	lock lahf 
  4116f3:	xor    al,0x4
  4116f5:	mov    dl,0x5a
  4116f7:	rcr    BYTE PTR [ecx],0x69
  4116fa:	mov    ecx,0xada7152
  4116ff:	push   edx
  411700:	push   esp
  411701:	lods   al,BYTE PTR ds:[si]
  411703:	and    eax,0xeb944d78
  411708:	mov    bh,0xd5
  41170a:	mov    ds:0x4086afef,al
  41170f:	push   es
  411710:	lds    eax,FWORD PTR [esi]
  411712:	sub    esp,0x4a642c31
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x84b2aa57
  411755:	sbb    eax,0x18749e7e
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	push   edi
  411760:	mov    al,0x1e
  411762:	mul    DWORD PTR [ebx+0x4cba81c4]
  411768:	imul   esi,edi,0x7c
  41176b:	push   edx
  41176c:	xchg   BYTE PTR [ebp-0x715c9f1d],bl
  411772:	cmp    BYTE PTR [ebx-0x21],dl
  411775:	retf   
  411776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411777:	jnp    0x41172d
  411779:	fldcw  WORD PTR [ebx+0x2]
  41177c:	gs pop ds
  41177e:	sti    
  41177f:	xchg   ebx,eax
  411780:	mov    al,ds:0xb8aa82a2
  411785:	or     al,0x88
  411787:	icebp  
  411788:	push   ss
  411789:	in     al,dx
  41178a:	int3   
  41178b:	add    DWORD PTR [ebp+0xa],0x51
  41178f:	adc    edx,DWORD PTR [edi+ebp*1]
  411792:	mov    ds:0x73da0ed7,al
  411797:	dec    eax
  411798:	and    bl,BYTE PTR [ebp+0x1f]
  41179b:	add    al,0xd0
  41179d:	mov    esi,0x3dc017de
  4117a2:	cmp    al,0xd3
  4117a4:	loop   0x4117e4
  4117a6:	(bad)  [edi+0x4b]
  4117a9:	aam    0x9a
  4117ab:	stos   BYTE PTR es:[edi],al
  4117ac:	add    eax,0xb4310b96
  4117b1:	jge    0x411817
  4117b3:	mov    bh,0x89
  4117b5:	cmp    al,0x20
  4117b7:	cld    
  4117b8:	dec    edi
  4117b9:	imul   eax,ebp,0xffffffe3
  4117bc:	rcr    BYTE PTR [esi+eax*8+0x77],1
  4117c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117c1:	mov    dh,0xe7
  4117c3:	sahf   
  4117c4:	ins    BYTE PTR es:[edi],dx
  4117c5:	push   0x6aa4120a
  4117ca:	pushf  
  4117cb:	mov    DWORD PTR [ebx],eax
  4117cd:	out    dx,al
  4117ce:	pop    edi
  4117cf:	out    dx,al
  4117d0:	jge    0x411826
  4117d2:	xchg   BYTE PTR [eax-0x213e8f00],al
  4117d8:	mov    WORD PTR [edx+0x270dbd3c],?
  4117de:	mov    ds:0xc67d0348,al
  4117e3:	mov    al,0xe9
  4117e5:	lds    esi,FWORD PTR [esi+0xe]
  4117e8:	stos   BYTE PTR es:[edi],al
  4117e9:	outs   dx,DWORD PTR ds:[esi]
  4117ea:	and    DWORD PTR ds:0xb6ea6bda,ebx
  4117f0:	(bad)  [esi+0x69097d5e]
  4117f6:	and    edx,DWORD PTR [ebx-0x12]
  4117f9:	ret    
  4117fa:	mov    ebx,0xd64326c7
  4117ff:	cmp    ch,BYTE PTR [edi-0x44]
  411802:	jmp    0x5541:0x6129dc58
  411809:	mov    edi,0x7ea9e6b4
  41180e:	(bad)  
  41180f:	cli    
  411810:	scas   al,BYTE PTR es:[edi]
  411811:	scas   al,BYTE PTR es:[edi]
  411812:	jae    0x41182f
  411814:	test   DWORD PTR [edx-0xb],esi
  411817:	dec    edi
  411818:	xchg   esp,eax
  411819:	or     bl,BYTE PTR [ebp+0x54]
  41181c:	into   
  41181d:	es jle 0x4117ee
  411820:	add    eax,0xca7a7f47
  411825:	fild   QWORD PTR ds:0xe8b92e8a
  41182b:	pop    ebx
  41182c:	add    dl,BYTE PTR [edx-0x5aa0783c]
  411832:	(bad)  
  411833:	ds xchg edi,edi
  411836:	in     al,0xb9
  411838:	call   0x6f98661a
  41183d:	or     DWORD PTR [edi+0x6a8059f0],ebp
  411843:	sub    BYTE PTR [eax],ah
  411845:	fisttp QWORD PTR [ebp+0x609e6c30]
  41184b:	xor    DWORD PTR [ebp-0x2f],ecx
  41184e:	popa   
  41184f:	pushf  
  411850:	mov    cl,0x99
  411852:	iret   
  411853:	imul   esi,ebp,0x7e
  411856:	stos   DWORD PTR es:[edi],eax
  411857:	fadd   st(6),st
  411859:	or     DWORD PTR [eax+0x59],edx
  41185c:	jb     0x4118c7
  41185e:	mov    ebp,0xfd3258d5
  411863:	add    al,0xfa
  411865:	mov    esp,0x44024b40
  41186a:	mov    al,0xe2
  41186c:	icebp  
  41186d:	xlat   BYTE PTR ds:[ebx]
  41186e:	out    0x41,eax
  411870:	lahf   
  411871:	mov    eax,ds:0x10f00a43
  411876:	inc    eax
  411877:	sqrtps xmm3,xmm5
  41187a:	cmp    BYTE PTR [edx-0x425f79d3],0x6f
  411881:	out    dx,eax
  411882:	pop    edi
  411883:	cmp    dl,BYTE PTR [edi-0x6a]
  411886:	imul   edx,ebx,0x3346bdc4
  41188c:	icebp  
  41188d:	idiv   BYTE PTR [ebx+0x2e]
  411890:	sti    
  411891:	adc    bh,BYTE PTR [ebx-0x40]
  411894:	jmp    0x32d6:0x6909dd39
  41189b:	mov    edi,0x9d31165b
  4118a0:	(bad)  
  4118a1:	push   edx
  4118a2:	jge    0x411875
  4118a4:	xor    eax,0x5246642
  4118a9:	cdq    
  4118aa:	(bad)  
  4118ab:	pusha  
  4118ac:	dec    ebx
  4118ad:	mov    ds:0xd60969ef,eax
  4118b2:	jo     0x41192d
  4118b4:	cdq    
  4118b5:	sub    ch,dh
  4118b7:	fld    QWORD PTR [edi+0x12]
  4118ba:	jge    0x4118e4
  4118bc:	cdq    
  4118bd:	mov    edx,0x9b1aedc0
  4118c2:	inc    esi
  4118c3:	nop
  4118c4:	xchg   edx,eax
  4118c5:	mov    DWORD PTR ds:0x262caf98,ebx
  4118cb:	pop    ebx
  4118cc:	sbb    ebp,DWORD PTR [ebp+0x228fc549]
  4118d2:	call   0xd349:0x4f43aa06
  4118d9:	fld    TBYTE PTR [esp+ecx*2]
  4118dc:	in     al,dx
  4118dd:	sti    
  4118de:	or     eax,0x19c8f0b7
  4118e3:	popf   
  4118e4:	mov    esi,0xbc9f9f5b
  4118e9:	jbe    0x411872
  4118eb:	add    edi,DWORD PTR [eax*1+0x104ef8c3]
  4118f2:	mul    DWORD PTR [edx-0xe]
  4118f5:	mov    bl,0x1d
  4118f7:	fs loope 0x41191d
  4118fa:	sti    
  4118fb:	xchg   ebx,eax
  4118fc:	(bad)  
  4118fd:	push   edi
  4118fe:	sar    cl,1
  411900:	(bad)  
  411902:	cmc    
  411903:	(bad)  
  411904:	or     ecx,edi
  411906:	(bad)  
  411907:	(bad)  
  411908:	mov    al,ds:0x75e1e35e
  41190d:	inc    esp
  41190e:	stc    
  41190f:	int    0x74
  411911:	out    dx,al
  411912:	mov    bh,0x73
  411914:	test   eax,0xfc73699
  411919:	fcomip st,st(4)
  41191b:	adc    al,dl
  41191d:	test   eax,0xbc878467
  411922:	mov    eax,eax
  411924:	sub    eax,0xa6041947
  411929:	inc    edx
  41192a:	in     eax,0x20
  41192c:	adc    eax,DWORD PTR [esi-0x41]
  41192f:	cli    
  411930:	adc    cl,ah
  411932:	pop    edx
  411933:	jo     0x4118d4
  411935:	icebp  
  411936:	ins    DWORD PTR es:[edi],dx
  411937:	cwde   
  411938:	xchg   ebp,eax
  411939:	fcomp  DWORD PTR [ebp-0x21]
  41193c:	rcr    DWORD PTR [edi-0x43981d0f],cl
  411942:	dec    ebp
  411943:	push   es
  411944:	pop    esp
  411945:	(bad)  
  411946:	or     al,0xb0
  411948:	and    dl,BYTE PTR [ebx-0x37]
  41194b:	xor    edi,DWORD PTR [eax+ebx*4+0x78]
  41194f:	sbb    al,0x14
  411951:	mov    ds:0x7efbdf24,eax
  411956:	cmp    DWORD PTR [edx+esi*4+0x206c4990],eax
  41195d:	mov    edi,ebx
  41195f:	xor    dh,dh
  411961:	and    DWORD PTR [ebx],edi
  411963:	mov    DWORD PTR [esi-0x35],esi
  411966:	and    bh,BYTE PTR [ecx+edi*2]
  411969:	cmc    
  41196a:	ret    
  41196b:	push   es
  41196c:	loop   0x411923
  41196e:	int3   
  41196f:	xchg   ecx,eax
  411970:	retf   0x8a4
  411973:	stos   DWORD PTR es:[edi],eax
  411974:	mov    eax,ds:0x58b16b33
  411979:	push   0xffffffa7
  41197b:	and    DWORD PTR [ebx],edx
  41197d:	mov    esp,0x83943528
  411982:	dec    edx
  411983:	mul    BYTE PTR [ebx-0x2e]
  411986:	aam    0x2c
  411988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411989:	test   eax,0xf90aecd6
  41198e:	lahf   
  41198f:	or     DWORD PTR [esi+0x1d],ecx
  411992:	inc    eax
  411993:	imul   ebp,DWORD PTR [edx],0xdadde962
  411999:	cmp    edi,DWORD PTR ds:0x192f67d9
  41199f:	inc    eax
  4119a0:	gs pop ecx
  4119a2:	sbb    cl,BYTE PTR [eax-0x248ad06f]
  4119a8:	es xchg edi,eax
  4119aa:	add    eax,0x372b885a
  4119af:	or     eax,0x86ab9b06
  4119b4:	call   0x81c4:0x558b7c52
  4119bb:	icebp  
  4119bc:	cmp    cl,BYTE PTR [edi]
  4119be:	add    BYTE PTR [eax],al
  4119c0:	or     ecx,eax
  4119c2:	mov    eax,ds:0x422558
  4119c7:	mov    eax,DWORD PTR [eax+0x1d8]
  4119cd:	mov    eax,DWORD PTR [eax]
  4119cf:	xor    esi,0x6665
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x7e21c74b
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	mov    bh,0xa3
  411a16:	sub    al,0xf7
  411a18:	sub    bl,BYTE PTR [eax-0x52]
  411a1b:	mov    ebp,0xa9f71bcf
  411a20:	lock shl DWORD PTR [edi-0x4d2b61dc],1
  411a27:	sar    BYTE PTR [ebx+0x692270a1],cl
  411a2d:	nop
  411a2e:	repnz aam 0x64
  411a31:	jae    0x411a02
  411a33:	pop    ss
  411a34:	adc    edx,DWORD PTR [ebx+eiz*1-0x7b9f858e]
  411a3b:	lods   al,BYTE PTR ds:[esi]
  411a3c:	lods   al,BYTE PTR ss:[esi]
  411a3e:	jmp    0xc30c9bba
  411a43:	jmp    0x411a2b
  411a45:	mov    ds:0xbe8bc83b,al
  411a4a:	call   DWORD PTR [ecx]
  411a4c:	mov    ch,0x19
  411a4e:	stc    
  411a4f:	dec    esi
  411a50:	xor    cl,dh
  411a52:	dec    eax
  411a53:	rcr    BYTE PTR [edx+0x898134e],cl
  411a59:	scas   eax,DWORD PTR es:[edi]
  411a5a:	inc    esp
  411a5b:	js     0x411a78
  411a5d:	adc    ecx,ebp
  411a5f:	aaa    
  411a60:	dec    edi
  411a61:	je     0x4119e4
  411a63:	cmp    DWORD PTR [edi],edx
  411a65:	or     BYTE PTR [ecx+ebp*2+0x3a],ah
  411a69:	jle    0x411ab4
  411a6b:	push   ecx
  411a6c:	out    0xf2,al
  411a6e:	and    al,0x97
  411a70:	pop    ds
  411a71:	add    eax,0x7c176ebe
  411a76:	clc    
  411a77:	push   ecx
  411a78:	adc    al,0xb5
  411a7a:	push   0x4f
  411a7c:	push   ecx
  411a7d:	adc    ebp,edx
  411a7f:	ror    BYTE PTR [ecx+esi*2+0x4b],0xb2
  411a84:	xchg   DWORD PTR es:0x5a9c55ca,esp
  411a8b:	push   ecx
  411a8c:	push   ss
  411a8d:	xchg   ebp,eax
  411a8e:	pop    ebx
  411a8f:	pop    ss
  411a90:	dec    ebx
  411a91:	push   eax
  411a92:	rcl    BYTE PTR [edi+0x18],cl
  411a95:	fsqrt  
  411a97:	ror    BYTE PTR [ebx+0x2165ac30],1
  411a9d:	sbb    ch,BYTE PTR [esi]
  411a9f:	add    eax,edi
  411aa1:	xor    cl,al
  411aa3:	cld    
  411aa4:	into   
  411aa5:	mov    esi,0xd734511b
  411aaa:	cli    
  411aab:	enter  0x75c,0x26
  411aaf:	out    0xf,al
  411ab1:	popa   
  411ab2:	imul   esp,DWORD PTR [eax+ecx*8+0x48],0x507a53bf
  411aba:	pop    edx
  411abb:	mov    cl,0xfa
  411abd:	iret   
  411abe:	mov    eax,0x1d351a1b
  411ac3:	inc    ecx
  411ac4:	loopne 0x411b33
  411ac6:	xchg   ecx,eax
  411ac7:	(bad)  
  411ac8:	loopne 0x411aa3
  411aca:	nop
  411acb:	(bad)  
  411acc:	(bad)  
  411ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411acf:	mov    ds:0x7b1658e4,eax
  411ad4:	xchg   ecx,eax
  411ad5:	sub    eax,0x498237da
  411ada:	push   0xffffffd3
  411adc:	mov    eax,ds:0xd175b8e5
  411ae1:	xchg   edx,eax
  411ae2:	cwde   
  411ae3:	push   es
  411ae4:	icebp  
  411ae5:	scas   eax,DWORD PTR es:[edi]
  411ae6:	pushf  
  411ae7:	aam    0x6e
  411ae9:	push   es
  411aea:	loope  0x411ac3
  411aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aed:	adc    ah,cl
  411aef:	mov    ch,BYTE PTR [ecx]
  411af1:	dec    eax
  411af2:	mov    ebp,0xbf36b785
  411af7:	sub    ch,BYTE PTR [ecx+0x7e]
  411afa:	test   eax,0x6f8c43ad
  411aff:	push   esi
  411b00:	inc    ebx
  411b01:	pop    edx
  411b02:	xrelease mov BYTE PTR [ebp+0x9],bh
  411b06:	shl    BYTE PTR [ecx+0x4d5c99eb],1
  411b0c:	rcl    edi,1
  411b0e:	ficom  WORD PTR [eax+0x53e15ff2]
  411b14:	shl    DWORD PTR [ebx],0xc4
  411b17:	icebp  
  411b18:	cmc    
  411b19:	mov    esp,0xb5d2303a
  411b1e:	mov    eax,ds:0xde6b8721
  411b23:	out    0xa6,al
  411b25:	lea    eax,[eax+0x2f1ae09b]
  411b2b:	into   
  411b2c:	inc    ebx
  411b2d:	div    BYTE PTR [edx]
  411b2f:	add    DWORD PTR [ecx-0xa],edi
  411b32:	(bad)  
  411b33:	rcl    BYTE PTR [eax+ebp*2+0x3a6d621],cl
  411b3a:	neg    DWORD PTR [ebp-0x50b42b47]
  411b40:	mov    cl,0x7c
  411b42:	add    DWORD PTR [edi+0x29],ecx
  411b45:	gs cmp eax,0x37b36f20
  411b4b:	inc    esp
  411b4c:	xor    dh,BYTE PTR [ecx]
  411b4e:	sub    DWORD PTR [ebp+0x75596a08],ecx
  411b54:	inc    ebx
  411b55:	ds pop ecx
  411b57:	(bad)  
  411b58:	lock test DWORD PTR [eax+0x1902b80b],esi
  411b5f:	mov    edi,0xed1ef01b
  411b64:	call   0x69aeb21a
  411b69:	jle    0x411b26
  411b6b:	jns    0x411af5
  411b6d:	push   ds
  411b6e:	adc    ebp,esi
  411b70:	xor    BYTE PTR [ebp-0x12654fa2],dh
  411b76:	addr16 cld 
  411b78:	ja     0x411b76
  411b7a:	stc    
  411b7b:	jmp    0xb289:0xde310a99
  411b82:	mov    ss,WORD PTR [eax-0x687423a0]
  411b88:	neg    DWORD PTR [esi-0x7c]
  411b8b:	sahf   
  411b8c:	mov    ebx,0x912e828b
  411b91:	imul   ebp,DWORD PTR [edi+0x53],0xf0b67206
  411b98:	cs loope 0x411b9a
  411b9b:	sbb    bh,BYTE PTR [edx]
  411b9d:	jb     0x411bfc
  411b9f:	sub    esp,DWORD PTR [ecx-0x55e39303]
  411ba5:	pop    edi
  411ba6:	nop
  411ba7:	mov    cl,0x65
  411ba9:	popa   
  411baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bab:	hlt    
  411bac:	hlt    
  411bad:	(bad)  
  411bae:	jae    0x411bc8
  411bb0:	(bad)  
  411bb1:	aad    0x0
  411bb3:	ss pop esp
  411bb5:	rcpps  xmm5,XMMWORD PTR [eax+0x45f58d5]
  411bbc:	das    
  411bbd:	jbe    0x411b5c
  411bbf:	lds    edx,FWORD PTR [eax-0x66]
  411bc2:	rol    al,0xdf
  411bc5:	and    esp,DWORD PTR [esi]
  411bc7:	add    al,0xb9
  411bc9:	xor    eax,0x39fde59a
  411bce:	test   DWORD PTR ds:0x29a9efd7,0x46e6784b
  411bd8:	stos   BYTE PTR es:[edi],al
  411bd9:	mov    BYTE PTR [ebx],ch
  411bdb:	and    eax,0x3b168632
  411be0:	in     eax,dx
  411be1:	out    dx,al
  411be2:	fst    QWORD PTR [ecx+0x28]
  411be5:	iret   
  411be6:	mov    ebx,DWORD PTR [edx+0x58]
  411be9:	js     0x411b89
  411beb:	loop   0x411c44
  411bed:	adc    DWORD PTR [eax-0x48],ecx
  411bf0:	or     ebx,esi
  411bf2:	ja     0x411bcd
  411bf4:	(bad)  
  411bf5:	fnstsw WORD PTR [ecx-0x538b7059]
  411bfb:	add    al,0x73
  411bfd:	push   edi
  411bfe:	outs   dx,BYTE PTR ds:[esi]
  411bff:	jmp    0x411c24
  411c01:	dec    ebp
  411c02:	mov    ?,WORD PTR [esp+esi*2+0x3be817f5]
  411c09:	cdq    
  411c0a:	jecxz  0x411c3b
  411c0c:	jmp    0x141ca662
  411c11:	sbb    eax,0x7394ad61
  411c16:	jl     0x411bf9
  411c18:	out    dx,eax
  411c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c1a:	cli    
  411c1b:	in     eax,dx
  411c1c:	aas    
  411c1d:	ja     0x411ba4
  411c1f:	lods   al,BYTE PTR ds:[esi]
  411c20:	jmp    0x3b07:0xd568686
  411c27:	mov    ebp,0xa4986716
  411c2c:	ja     0x411c21
  411c2e:	jmp    0x14f69018
  411c33:	dec    ebp
  411c34:	jns    0x411bf2
  411c36:	xchg   edi,eax
  411c37:	retf   0x5c71
  411c3a:	or     BYTE PTR [ebx-0x1075fb8a],0xc2
  411c41:	push   ecx
  411c42:	xlat   BYTE PTR ds:[ebx]
  411c43:	mov    ah,0xed
  411c45:	inc    ebx
  411c46:	shl    BYTE PTR [edx-0x52c00c66],1
  411c4c:	mov    ds,WORD PTR [ebx]
  411c4e:	dec    eax
  411c4f:	dec    edx
  411c50:	mov    ebp,DWORD PTR [esi-0x13574d32]
  411c56:	xchg   ebp,eax
  411c57:	(bad)  
  411c58:	pop    ss
  411c59:	sahf   
  411c5a:	shr    DWORD PTR [edi+ebp*2],cl
  411c5d:	mov    ecx,0x1a4f0507
  411c62:	pop    edi
  411c63:	add    eax,0x74b8a715
  411c68:	stos   DWORD PTR es:[edi],eax
  411c69:	adc    al,0xa7
  411c6b:	cld    
  411c6c:	mov    ecx,DWORD PTR [ebp-0x4c]
  411c6f:	mov    edx,DWORD PTR [ebp-0x60]
  411c72:	mov    esi,DWORD PTR [ebp-0x5c]
  411c75:	add    eax,0x7818
  411c7a:	adc    ecx,0x87
  411c80:	or     eax,edx
  411c82:	mov    edx,DWORD PTR [ebp-0x70]
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8-0x630395f8]
  411c98:	popf   
  411c99:	jo     0x411cea
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	out    dx,eax
  411ca3:	dec    ebp
  411ca4:	and    BYTE PTR [eax],dh
  411ca6:	lods   al,BYTE PTR ds:[esi]
  411ca7:	sbb    DWORD PTR [ebp-0xd],0xdf4d6da9
  411cae:	or     al,0x59
  411cb0:	adc    BYTE PTR [ecx+0x29],ch
  411cb3:	int    0x23
  411cb5:	or     BYTE PTR [edi+0x424b6623],cl
  411cbb:	cmp    DWORD PTR [ecx-0x6d],0x6a
  411cbf:	jnp    0x411cbf
  411cc1:	sub    esp,DWORD PTR [ecx]
  411cc3:	test   BYTE PTR [esi+ebx*8+0xe8ed51],ch
  411cca:	cli    
  411ccb:	sub    cl,ch
  411ccd:	aam    0x17
  411ccf:	mul    bh
  411cd1:	mov    edx,0xc97f39ff
  411cd6:	xor    al,0x7f
  411cd8:	push   0x8434e8ce
  411cdd:	or     al,0x81
  411cdf:	adc    edi,DWORD PTR ds:0xb402379f
  411ce5:	mov    bl,0xcd
  411ce7:	ficomp DWORD PTR [ecx+0x79]
  411cea:	int    0x6c
  411cec:	sbb    DWORD PTR [ebx+0x2f],ebp
  411cef:	jbe    0x411cda
  411cf1:	and    DWORD PTR [edi+0x17901342],ebx
  411cf7:	mov    esp,DWORD PTR [eax+edx*4+0x3d1ceb40]
  411cfe:	pop    edi
  411cff:	push   0xffffffe9
  411d01:	adc    dl,BYTE PTR [esi+0x56]
  411d04:	ret    
  411d05:	leave  
  411d06:	dec    ebx
  411d07:	sbb    DWORD PTR [eax+0x2b],edx
  411d0a:	loopne 0x411cd9
  411d0c:	(bad)  
  411d0d:	retf   0x83d6
  411d10:	mov    DWORD PTR [edx+0x71617a51],edi
  411d16:	jp     0x411d67
  411d18:	jae    0x411cb5
  411d1a:	stc    
  411d1b:	and    ah,al
  411d1d:	sbb    al,0x31
  411d1f:	arpl   WORD PTR [ebx-0x700c4880],si
  411d25:	xchg   ebx,eax
  411d26:	sahf   
  411d27:	ret    
  411d28:	fwait
  411d29:	or     ebx,DWORD PTR [ebp-0x3412e0f0]
  411d2f:	loope  0x411cbf
  411d31:	stos   BYTE PTR es:[edi],al
  411d32:	repz or DWORD PTR [edx],edi
  411d35:	xor    BYTE PTR [edx+0x2a41bf0d],al
  411d3b:	push   ds
  411d3c:	in     al,0x91
  411d3e:	sbb    ah,BYTE PTR ds:0x36b8f799
  411d44:	retf   0xcb50
  411d47:	xchg   esp,eax
  411d48:	xchg   BYTE PTR [esi+0x1003dc47],dh
  411d4e:	pop    esi
  411d4f:	and    dl,BYTE PTR [ebx]
  411d51:	or     eax,0x8031b242
  411d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d57:	repnz or al,0xa2
  411d5a:	sub    bl,dh
  411d5c:	int3   
  411d5d:	push   esp
  411d5e:	push   ss
  411d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d60:	ficom  WORD PTR [esi]
  411d62:	iret   
  411d63:	sub    cl,BYTE PTR [ecx+0x17bdcea3]
  411d69:	stc    
  411d6a:	jge    0x411d66
  411d6c:	popf   
  411d6d:	fld    DWORD PTR [eax-0x3bddefa9]
  411d73:	lods   al,BYTE PTR ds:[esi]
  411d74:	ret    
  411d75:	icebp  
  411d76:	and    cl,BYTE PTR [ebx]
  411d78:	cmp    edi,ecx
  411d7a:	xchg   edi,eax
  411d7b:	push   gs
  411d7d:	int    0xcd
  411d7f:	jns    0x411d2e
  411d81:	inc    ebp
  411d82:	mov    bl,0xa3
  411d84:	adc    eax,0x3dcd674
  411d89:	jno    0x411d38
  411d8b:	std    
  411d8c:	stos   BYTE PTR es:[edi],al
  411d8d:	ficomp DWORD PTR [ecx-0x2b]
  411d90:	int    0x90
  411d92:	hlt    
  411d93:	pop    es
  411d94:	enter  0xd52e,0x41
  411d98:	and    dh,BYTE PTR [ebx-0x422b4144]
  411d9e:	cmp    DWORD PTR [eax+ebx*1+0x18c1c05b],ebp
  411da5:	push   eax
  411da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411da7:	stos   BYTE PTR es:[edi],al
  411da8:	arpl   WORD PTR [ebx+0x4b],di
  411dab:	xchg   ebx,eax
  411dac:	test   DWORD PTR [ecx-0x77],0xbd8464ab
  411db3:	inc    ebx
  411db4:	hlt    
  411db5:	das    
  411db6:	mov    dl,0x16
  411db8:	mov    esp,0xb5cf879f
  411dbd:	outs   dx,BYTE PTR ds:[esi]
  411dbe:	sub    al,0xb6
  411dc0:	jecxz  0x411e0a
  411dc2:	or     eax,0x7bc2f0a3
  411dc7:	adc    eax,0x65a0245a
  411dcc:	fisttp QWORD PTR [edx+ebp*4+0xa]
  411dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dd1:	das    
  411dd2:	pushf  
  411dd3:	push   ds
  411dd4:	sub    ah,BYTE PTR [edx+0x708172c7]
  411dda:	mov    ebx,0x5a30e7f9
  411ddf:	push   eax
  411de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de1:	push   ss
  411de2:	xor    al,0x7c
  411de4:	sbb    BYTE PTR [edx],dh
  411de6:	mov    ds:0x1af1d809,eax
  411deb:	push   ss
  411dec:	aaa    
  411ded:	cli    
  411dee:	mov    edi,0x65198f65
  411df3:	jmp    0x411e55
  411df5:	cmp    ecx,ecx
  411df7:	outs   dx,BYTE PTR ds:[esi]
  411df8:	ins    BYTE PTR es:[edi],dx
  411df9:	jge    0x411e34
  411dfb:	jns    0x411de9
  411dfd:	pop    ebx
  411dfe:	lea    edi,[ecx]
  411e00:	xchg   esi,eax
  411e01:	cwde   
  411e02:	mov    ecx,0x14a2691e
  411e07:	xor    DWORD PTR [ecx+0x3c],edi
  411e0a:	aam    0xa1
  411e0c:	arpl   WORD PTR [ecx+0xe28d8a],cx
  411e12:	ja     0x411dd6
  411e14:	cld    
  411e15:	aaa    
  411e16:	in     al,0x3c
  411e18:	mov    ah,0x9e
  411e1a:	(bad)  
  411e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e1c:	fisttp QWORD PTR [ecx]
  411e1e:	jmp    0x671db69c
  411e23:	xor    al,0x99
  411e25:	int    0xe9
  411e27:	add    ch,bl
  411e29:	mov    edi,0xa9b4d9cc
  411e2e:	xchg   DWORD PTR [esi-0x50112a8e],edi
  411e34:	xor    esi,edx
  411e36:	in     eax,0xa3
  411e38:	mov    bh,0xac
  411e3a:	xchg   edi,eax
  411e3b:	inc    edi
  411e3c:	push   cs
  411e3d:	bound  ebx,QWORD PTR [edx+0x5289b072]
  411e43:	arpl   WORD PTR [ecx+esi*2-0x16],bp
  411e47:	xchg   edx,eax
  411e48:	arpl   WORD PTR [eax+edi*2-0x61],cx
  411e4c:	ret    0x1f6a
  411e4f:	inc    eax
  411e50:	jns    0x411de5
  411e52:	loope  0x411e53
  411e54:	mov    ah,dl
  411e56:	xchg   esi,eax
  411e57:	sbb    BYTE PTR [ebp+0x5d],dh
  411e5a:	ficom  DWORD PTR [esi+0x6]
  411e5d:	add    eax,0x7feaf723
  411e62:	in     eax,dx
  411e63:	and    DWORD PTR [edx],eax
  411e65:	and    eax,esp
  411e67:	retf   0x3ecd
  411e6a:	mov    ch,0x50
  411e6c:	outs   dx,BYTE PTR ds:[esi]
  411e6d:	lods   al,BYTE PTR ds:[esi]
  411e6e:	mov    eax,ds:0xabf1b760
  411e73:	fld    QWORD PTR [edx]
  411e75:	cwde   
  411e76:	adc    edx,ebp
  411e78:	adc    edx,0xffffffa1
  411e7b:	pop    eax
  411e7c:	nop
  411e7d:	inc    esp
  411e7e:	mov    dh,cl
  411e80:	cmp    al,0xd
  411e82:	mov    eax,0x295643d5
  411e87:	imul   BYTE PTR [ecx+0x4f211aa5]
  411e8d:	das    
  411e8e:	sahf   
  411e8f:	cmp    BYTE PTR [ecx-0x7345b797],0x93
  411e96:	xor    bh,al
  411e98:	icebp  
  411e99:	push   esi
  411e9a:	jl     0x411e7e
  411e9c:	lds    ecx,FWORD PTR [esi-0x7]
  411e9f:	adc    al,0x72
  411ea1:	daa    
  411ea2:	fdiv   DWORD PTR [ebp+0x7]
  411ea5:	and    DWORD PTR [ecx+0x27302093],edi
  411eab:	leave  
  411eac:	ret    
  411ead:	mov    bl,0x97
  411eaf:	add    BYTE PTR [ecx-0x72],cl
  411eb2:	repz lock dec edi
  411eb5:	rcr    BYTE PTR [esi+0x36],1
  411eb8:	jge    0x411e7d
  411eba:	xor    DWORD PTR [edx],eax
  411ebc:	(bad)  
  411ebd:	out    dx,al
  411ebe:	or     eax,0x38ff2e1b
  411ec3:	push   edi
  411ec4:	jle    0x411ed6
  411ec6:	jge    0x411f14
  411ec8:	pop    es
  411ec9:	jmp    0xcffc643e
  411ece:	and    al,0xfa
  411ed0:	cmc    
  411ed1:	clc    
  411ed2:	mov    eax,0xa76aa01a
  411ed7:	and    BYTE PTR [eax+eax*1+0x2ccab193],al
  411ede:	adc    ebx,edi
  411ee0:	mov    ch,0xc7
  411ee2:	pop    edi
  411ee3:	pop    ecx
  411ee4:	add    DWORD PTR [ebp-0x67],edi
  411ee7:	dec    edx
  411ee8:	arpl   cx,bp
  411eea:	xor    dl,bh
  411eec:	and    eax,0xfa1b132b
  411ef1:	aam    0xce
  411ef3:	mov    ds:0x7540fa0b,al
  411ef8:	retf   0xb2e
  411efb:	into   
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422558
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x4225f4
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225ec,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	inc    ecx
  411faa:	sub    DWORD PTR [ebp+0x1866a670],ecx
  411fb0:	sbb    BYTE PTR [ecx+0x14],dh
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	fistp  WORD PTR [ebx]
  411fb7:	fld    TBYTE PTR [esi]
  411fb9:	(bad)  
  411fba:	aas    
  411fbb:	push   esp
  411fbd:	push   ss
  411fbe:	or     eax,0x1d6b7c8e
  411fc3:	aaa    
  411fc4:	fs dec ebx
  411fc6:	push   es
  411fc7:	popf   
  411fc8:	dec    eax
  411fc9:	sub    al,0x9a
  411fcb:	or     bh,BYTE PTR [ebx-0x6d]
  411fce:	sub    esp,ecx
  411fd0:	jmp    0x1e83:0xd8c72700
  411fd7:	hlt    
  411fd8:	sub    al,0x2a
  411fda:	xchg   ecx,eax
  411fdb:	fld    QWORD PTR [edx+0x4c5c2fcd]
  411fe1:	les    edi,FWORD PTR [eax]
  411fe3:	imul   ecx,eax,0x7e1b1d4c
  411fe9:	pushf  
  411fea:	dec    esp
  411feb:	cmp    DWORD PTR [edi+0x1d],0x44
  411fef:	test   BYTE PTR [ecx+edi*1],ch
  411ff2:	mov    ds:0x5ce24a4,eax
  411ff7:	out    dx,eax
  411ff8:	or     ah,0xaa
  411ffb:	outs   dx,DWORD PTR ds:[esi]
  411ffc:	mov    WORD PTR [ecx+ebx*1],cs
  411fff:	sahf   
  412000:	mov    dl,0x11
  412002:	add    BYTE PTR [esi+0x73],dl
  412005:	leave  
  412006:	add    eax,0x7262d54b
  41200b:	mov    ebx,DWORD PTR [esp+ebp*2+0xa]
  41200f:	jno    0x412055
  412011:	jle    0x41203c
  412013:	fild   WORD PTR [edi+0x6e]
  412017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412018:	pop    ecx
  412019:	bound  ecx,QWORD PTR [esi+ecx*8+0x71940385]
  412020:	frstor [eax+0x44]
  412023:	mov    dl,0xa1
  412025:	and    ebp,ebx
  412027:	jae    0x411ffa
  412029:	in     eax,0xde
  41202b:	mov    al,gs:0x5e921113
  412031:	adc    edx,esi
  412033:	scas   eax,DWORD PTR es:[edi]
  412034:	sub    DWORD PTR [ecx],0x419f1edd
  41203a:	sbb    ch,BYTE PTR [ebp-0x6304334f]
  412040:	fcom   DWORD PTR ds:[ecx+edi*2-0x4f199520]
  412048:	(bad)  
  41204a:	jge    0x412057
  41204c:	lods   eax,DWORD PTR ds:[esi]
  41204d:	repnz fcmovnb st,st(2)
  412050:	pop    esp
  412051:	mov    ebx,0x885870f2
  412056:	dec    esp
  412057:	mov    ch,0x31
  412059:	or     eax,0x28719973
  41205e:	mov    cl,BYTE PTR [ebx+ebp*2]
  412061:	add    DWORD PTR [ebp-0x58ac2694],ecx
  412067:	jecxz  0x412072
  412069:	dec    ebp
  41206a:	hlt    
  41206b:	sub    al,cl
  41206d:	cmp    eax,0x3bea7e74
  412072:	mov    BYTE PTR [edx+0x414a82af],dl
  412078:	call   0x9adf4060
  41207d:	push   0x310055a
  412082:	and    eax,0xb5db6f51
  412087:	mov    edi,0xc4ca1351
  41208c:	leave  
  41208d:	push   ebp
  41208e:	sub    cl,0x68
  412091:	data16 cs ja 0x4120c8
  412095:	sub    bh,BYTE PTR [edx]
  412097:	pop    esp
  412098:	sub    eax,0x7378689c
  41209d:	dec    esp
  41209e:	xlat   BYTE PTR ds:[ebx]
  41209f:	xchg   ebx,eax
  4120a0:	adc    ah,ah
  4120a2:	push   esi
  4120a3:	repz push ebx
  4120a5:	pop    es
  4120a6:	push   ebp
  4120a7:	aas    
  4120a8:	out    0x6e,eax
  4120aa:	out    dx,eax
  4120ab:	xchg   edi,eax
  4120ac:	mov    bl,0xb9
  4120ae:	mov    BYTE PTR [edx+0x56554159],bh
  4120b4:	or     al,0x3e
  4120b6:	mov    es,esi
  4120b8:	and    BYTE PTR [eax+0x1b],0x73
  4120bc:	or     al,0xd7
  4120be:	jb     0x4120f2
  4120c0:	in     al,dx
  4120c1:	mov    ah,0x82
  4120c3:	sub    DWORD PTR [ebp+ebp*8-0x38],edi
  4120c7:	push   edi
  4120c8:	shr    DWORD PTR [ecx+0x1b],cl
  4120cb:	or     ah,BYTE PTR [ecx+0x393c4931]
  4120d1:	lods   al,BYTE PTR ds:[esi]
  4120d2:	fist   WORD PTR [ebp+0x37]
  4120d5:	and    dh,ah
  4120d7:	cld    
  4120d8:	xchg   esi,eax
  4120d9:	push   edi
  4120da:	mov    ds:0x71fec364,eax
  4120df:	mov    al,0x20
  4120e1:	stos   BYTE PTR es:[edi],al
  4120e2:	dec    esi
  4120e3:	cli    
  4120e4:	cmc    
  4120e5:	ins    DWORD PTR es:[edi],dx
  4120e6:	je     0x41209e
  4120e8:	lock xchg edx,eax
  4120ea:	scas   eax,DWORD PTR es:[edi]
  4120eb:	cmc    
  4120ec:	jns    0x41216b
  4120ee:	cmp    BYTE PTR [eax],0x17
  4120f1:	jmp    0x41211c
  4120f3:	xor    al,0xd7
  4120f5:	mov    dl,0xc3
  4120f7:	pop    ds
  4120f8:	pushf  
  4120f9:	es mov al,0x60
  4120fc:	outs   dx,DWORD PTR ds:[esi]
  4120fd:	xchg   edi,eax
  4120fe:	cdq    
  4120ff:	or     eax,0x131a3606
  412104:	xlat   BYTE PTR ds:[ebx]
  412105:	mov    bh,al
  412107:	lea    esp,[ebx+0xb]
  41210a:	jno    0x412152
  41210c:	xor    ebp,0xffffffea
  41210f:	cmp    al,0x61
  412111:	(bad)
  412114:	(bad)  
  412115:	mov    edi,0xdab29691
  41211a:	jg     0x41218a
  41211c:	(bad)  
  41211d:	push   ecx
  41211e:	pop    es
  41211f:	loopne 0x412136
  412121:	dec    ebp
  412122:	adc    al,0x1e
  412124:	shl    DWORD PTR [esi-0x751d5850],1
  41212a:	cmp    ecx,DWORD PTR [ebp+0x49]
  41212d:	mov    BYTE PTR [ebp+0x14d49527],bh
  412133:	ror    DWORD PTR [esi],0xac
  412136:	repz or ebp,DWORD PTR [ecx]
  412139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41213a:	std    
  41213b:	pop    eax
  41213c:	push   ebx
  41213d:	retf   0xcbb6
  412140:	mov    ebx,DWORD PTR [ebx-0x38]
  412143:	shl    BYTE PTR [ebp-0x58664c49],1
  412149:	push   esp
  41214a:	inc    DWORD PTR ds:[ecx]
  41214d:	leave  
  41214e:	in     eax,0xd1
  412150:	bound  esp,QWORD PTR [ebp+0x0]
  412153:	(bad)  
  412154:	xor    ch,BYTE PTR [edx-0x74188d24]
  41215a:	push   0xbc3259b2
  41215f:	clc    
  412160:	sahf   
  412161:	imul   ecx,DWORD PTR [esi],0x73
  412164:	fprem  
  412166:	inc    esp
  412167:	(bad)  
  412168:	sub    edi,DWORD PTR [ebp-0x68]
  41216b:	sub    DWORD PTR [edi],ebp
  41216d:	cmp    al,0xb9
  41216f:	push   eax
  412170:	enter  0x266c,0x35
  412174:	pushf  
  412175:	fist   DWORD PTR [ebx-0x67]
  412178:	and    bh,al
  41217a:	cs mov bl,0x8c
  41217d:	inc    ebp
  41217e:	cdq    
  41217f:	and    BYTE PTR [edi-0xf5d6bf2],dh
  412185:	xchg   esp,eax
  412186:	mov    esi,0x1e3d87ad
  41218b:	ret    
  41218c:	imul   esp,esi,0xffffff96
  41218f:	imul   ebp,DWORD PTR [edi-0x581c0604],0x3b3462da
  412199:	imul   ecx,DWORD PTR [ebp+0x2e],0x20
  41219d:	mov    ecx,0x5dba867e
  4121a2:	leave  
  4121a3:	push   DWORD PTR [ebx]
  4121a5:	sub    eax,0xcdd167d1
  4121aa:	jne    0x412161
  4121ac:	pusha  
  4121ad:	gs in  eax,dx
  4121af:	outs   dx,DWORD PTR ds:[esi]
  4121b1:	(bad)  
  4121b2:	imul   edx,DWORD PTR [edx+0x7caab13d],0xf0d219d7
  4121bc:	(bad)  gs:[ebp-0x19300364]
  4121c3:	jmp    0xc1ae4abb
  4121c8:	and    al,0x3a
  4121ca:	cmp    dl,BYTE PTR [edi+0x22]
  4121cd:	call   0x7034:0x593a20ca
  4121d4:	lods   al,BYTE PTR ds:[esi]
  4121d5:	or     bl,BYTE PTR [edi]
  4121d7:	push   0x17
  4121d9:	jns    0x41219e
  4121db:	shl    BYTE PTR [eax],0x31
  4121de:	xchg   edx,eax
  4121df:	leave  
  4121e0:	shr    DWORD PTR [edi-0x31f8000b],cl
  4121e6:	shl    DWORD PTR [eax],0x83
  4121e9:	xchg   ecx,eax
  4121ea:	std    
  4121eb:	push   esp
  4121ec:	adc    al,0xd0
  4121ee:	cdq    
  4121ef:	scas   eax,DWORD PTR es:[edi]
  4121f0:	and    eax,0xd29dff7f
  4121f5:	xchg   ecx,eax
  4121f6:	adc    BYTE PTR [esi],dh
  4121f8:	inc    edi
  4121f9:	jg     0x412221
  4121fb:	lods   al,BYTE PTR ds:[esi]
  4121fc:	xor    DWORD PTR [ecx-0x3e5c8601],edi
  412202:	mov    esi,0x9c40c973
  412207:	jl     0x412235
  412209:	(bad)  
  41220a:	arpl   WORD PTR [eax+eax*1+0x68],si
  41220e:	and    BYTE PTR [ebx-0x3d],bh
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225ec
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	jecxz  0x4122e2
  4122a3:	aad    0xbc
  4122a5:	(bad)  
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	cwde   
  4122ae:	(bad)  
  4122b1:	mov    ebp,0x5e529905
  4122b6:	fxch   st(1)
  4122b8:	repnz cdq 
  4122ba:	fimul  WORD PTR fs:[ebx-0x56]
  4122be:	mov    bh,0xdb
  4122c0:	test   eax,0x4a83908a
  4122c5:	xchg   esp,eax
  4122c6:	test   BYTE PTR [edi-0x59],0x5e
  4122ca:	xor    BYTE PTR [ebx-0x2835ef1d],dh
  4122d0:	jecxz  0x412283
  4122d2:	mov    ds:0x2dbe02f6,al
  4122d7:	and    BYTE PTR [edi-0x26dd24a1],ah
  4122dd:	imul   ebp,DWORD PTR [ebp-0x68],0x69
  4122e1:	fldcw  WORD PTR [edi-0x632d96de]
  4122e7:	jbe    0x4122bd
  4122e9:	test   BYTE PTR [esp+edi*8],0xe6
  4122ed:	cmp    cl,BYTE PTR [esi-0x64]
  4122f0:	retf   0xe617
  4122f3:	and    DWORD PTR [edi+0x13cf5aae],esi
  4122f9:	cmp    al,0x73
  4122fb:	push   0xb874c4a3
  412300:	popf   
  412301:	aad    0x28
  412303:	aaa    
  412304:	add    BYTE PTR [eax],bh
  412306:	dec    ecx
  412307:	hlt    
  412308:	fld    TBYTE PTR [ebx+eax*4+0x5c]
  41230c:	xor    cl,BYTE PTR [ecx-0x1f]
  41230f:	retf   0xb1ad
  412312:	adc    eax,0x7193bf21
  412317:	inc    ebp
  412318:	xor    cl,cl
  41231a:	push   es
  41231b:	addr16 xor cl,bl
  41231e:	cmp    DWORD PTR [edx+ebp*8+0x5f],ebp
  412322:	addr16 (bad) 
  412324:	shl    edx,cl
  412326:	xor    eax,eax
  412328:	mov    edx,0xedde1d12
  41232d:	sbb    eax,0xabc4b1bb
  412332:	inc    edi
  412333:	mov    ds:0xcc307208,eax
  412338:	sub    al,0x28
  41233a:	dec    esp
  41233b:	inc    ebx
  41233c:	xor    esi,DWORD PTR [eax]
  41233e:	(bad)  
  41233f:	mov    ds:0xf5de22a7,eax
  412344:	mov    bl,0x5c
  412346:	pcmpgtb mm3,QWORD PTR [ebx]
  412349:	dec    eax
  41234a:	mov    ds:0x63c34c70,al
  41234f:	push   0x4c02b5fa
  412354:	outs   dx,BYTE PTR ds:[esi]
  412355:	(bad)  
  412356:	mov    edx,esi
  412358:	inc    esp
  412359:	pushf  
  41235a:	in     al,0x67
  41235c:	jecxz  0x41234c
  41235e:	adc    BYTE PTR [bx+di],ah
  412361:	ja     0x412305
  412363:	sub    al,0x3b
  412365:	es or  al,0x8a
  412368:	mov    ds:0xbe78a6b4,eax
  41236d:	(bad)  
  41236e:	xor    edi,edi
  412370:	ins    BYTE PTR es:[edi],dx
  412371:	sbb    BYTE PTR [edi+eiz*2-0x80],ch
  412375:	mov    edi,DWORD PTR [edx]
  412377:	sbb    DWORD PTR [eax],eax
  412379:	add    al,0xe0
  41237b:	inc    eax
  41237c:	adc    eax,0x705d85ac
  412381:	je     0x41238d
  412383:	js     0x412403
  412385:	fwait
  412386:	or     edi,DWORD PTR [esi+0x5d02db69]
  41238c:	push   esp
  41238d:	or     ebx,DWORD PTR [eax]
  41238f:	scas   eax,DWORD PTR es:[edi]
  412390:	sahf   
  412391:	scas   al,BYTE PTR es:[edi]
  412392:	ror    DWORD PTR [edx-0x28],1
  412395:	push   ds
  412396:	mov    BYTE PTR [ebx+0x12],al
  412399:	(bad)  
  41239a:	fcom   DWORD PTR [ebx+ecx*2+0x25]
  41239e:	adc    eax,0xb782354f
  4123a3:	ror    DWORD PTR [ebx+0x8a309c],cl
  4123a9:	xor    DWORD PTR [ebp+0x7cbc742a],edx
  4123af:	mov    bl,0x2c
  4123b1:	dec    BYTE PTR ds:[esi-0x6ade7a4d]
  4123b8:	push   cs
  4123b9:	mov    DWORD PTR [esi-0x15],0xa23e3d1c
  4123c0:	lods   eax,DWORD PTR ds:[esi]
  4123c1:	cwde   
  4123c2:	test   dh,ah
  4123c4:	and    al,0xd9
  4123c6:	adc    eax,0xaa440879
  4123cb:	aam    0x46
  4123cd:	dec    esp
  4123ce:	inc    ecx
  4123cf:	inc    ebp
  4123d0:	repnz add eax,0x82f8659a
  4123d6:	mov    esi,?
  4123d8:	pushf  
  4123d9:	or     eax,0xc862a08a
  4123de:	test   BYTE PTR [ebx],dh
  4123e0:	cld    
  4123e1:	inc    edx
  4123e2:	sbb    eax,0xc0376232
  4123e7:	jl     0x4123bf
  4123e9:	push   cs
  4123ea:	imul   esp,DWORD PTR [edi+edx*4],0xdcaec88a
  4123f1:	pop    edx
  4123f2:	mov    es,WORD PTR [edi-0x6991239]
  4123f8:	add    eax,0x462d2a6f
  4123fd:	pushf  
  4123fe:	mov    eax,ds:0x4fc8876d
  412403:	retf   
  412404:	add    ecx,DWORD PTR [edi+0x85a0a20]
  41240a:	dec    ecx
  41240b:	and    eax,0xf5679527
  412410:	cwde   
  412411:	fsub   DWORD PTR [ecx-0x45]
  412414:	cdq    
  412415:	test   al,0xc9
  412417:	pusha  
  412418:	push   eax
  412419:	jle    0x4123d3
  41241b:	mov    al,0x40
  41241d:	mov    dl,0xcf
  41241f:	jle    0x412456
  412421:	les    edx,FWORD PTR [ecx]
  412423:	xchg   cl,cl
  412425:	fwait
  412426:	or     dl,ah
  412428:	sbb    eax,0x4a34ccbf
  41242d:	ret    0xd33b
  412430:	std    
  412431:	imul   ecx,edi,0xffffff9a
  412434:	int3   
  412435:	inc    ebx
  412436:	js     0x412455
  412438:	test   BYTE PTR [eax+0x7bc51ae7],al
  41243e:	mov    esp,0x5d8c5c22
  412443:	add    DWORD PTR [edx+ebp*1+0x23ef6d56],ebp
  41244a:	inc    ebx
  41244b:	rcl    BYTE PTR [ebx+0x38],1
  41244e:	mov    eax,0xfa2996dd
  412453:	inc    eax
  412454:	xchg   edi,eax
  412455:	loopne 0x4124cf
  412457:	sbb    dh,ch
  412459:	jmp    0x4124aa
  41245b:	xchg   DWORD PTR [eax-0x3f],esi
  41245e:	jae    0x4124d1
  412460:	mov    esp,0x8fff9bc0
  412465:	push   cs
  412466:	dec    ebp
  412467:	mov    dh,ch
  412469:	out    0x12,al
  41246b:	int    0x45
  41246d:	pop    eax
  41246e:	add    ah,BYTE PTR [edi]
  412470:	dec    esp
  412471:	dec    edx
  412472:	jnp    0x41249a
  412474:	idiv   edi
  412476:	pop    esp
  412477:	hlt    
  412478:	xor    BYTE PTR [ebp-0x7677b138],dl
  41247e:	das    
  41247f:	jp     0x4124e5
  412481:	(bad)  
  412482:	cld    
  412483:	xor    ecx,ebp
  412485:	cmp    ebp,ecx
  412487:	push   edx
  412488:	cmp    esi,DWORD PTR [edi-0x7a753572]
  41248e:	ja     0x4124c4
  412490:	mul    DWORD PTR [esi+0x75b0f51c]
  412496:	lahf   
  412497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412498:	test   DWORD PTR [ebx+0x5ebb30b3],0x2cc5aa0a
  4124a2:	cmp    BYTE PTR [edx-0x14],al
  4124a5:	dec    ecx
  4124a6:	fwait
  4124a7:	add    BYTE PTR [esi+0x47ab5272],dl
  4124ad:	sub    edi,DWORD PTR [edi-0x6a]
  4124b0:	div    BYTE PTR [ecx]
  4124b2:	push   0x6b
  4124b4:	mov    bh,BYTE PTR [ebx-0x6a]
  4124b7:	inc    ebx
  4124b8:	aad    0x69
  4124ba:	dec    esi
  4124bb:	in     eax,dx
  4124bc:	repnz aam 0xe
  4124bf:	test   bh,ah
  4124c1:	aad    0xb4
  4124c3:	stc    
  4124c4:	fcom   DWORD PTR [eax-0x70e08495]
  4124ca:	mov    esp,0xb7257f8e
  4124cf:	add    al,0x78
  4124d1:	push   cs
  4124d2:	je     0x4124b7
  4124d4:	xchg   esi,eax
  4124d5:	xchg   BYTE PTR [edx],ch
  4124d7:	cmp    BYTE PTR [edx+0x1b],ah
  4124da:	xchg   esp,eax
  4124db:	xor    al,0x9d
  4124dd:	xchg   esi,eax
  4124de:	pop    ss
  4124df:	daa    
  4124e0:	sbb    eax,0x82e6aab6
  4124e5:	push   edi
  4124e6:	rol    BYTE PTR [ebx-0x5eaebc1f],0xe2
  4124ed:	xchg   ebp,eax
  4124ee:	jns    0x4124ba
  4124f0:	add    BYTE PTR [esi],dl
  4124f2:	mov    al,ds:0x84a8ace1
  4124f7:	ficom  WORD PTR [ebp+0x45]
  4124fa:	push   cs
  4124fb:	pop    ebx
  4124fc:	mov    edi,0xa910c0fa
  412501:	pusha  
  412502:	pop    es
  412503:	mov    cl,bh
  412505:	add    edx,eax
  412507:	adc    esi,ecx
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x42206c
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x41251b
  412538:	inc    ecx
  412539:	addr16 mov esp,0x18185c57
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	cwde   
  412544:	mov    ebp,0x6442df53
  412549:	pusha  
  41254a:	pusha  
  41254b:	lock xor bh,BYTE PTR [esi+ebx*2+0x227ca885]
  412553:	adc    cl,dh
  412555:	clc    
  412556:	pop    ss
  412557:	inc    ebx
  412558:	push   cs
  412559:	jne    0x4125b0
  41255b:	adc    eax,0x1f3f3320
  412560:	jecxz  0x41252b
  412562:	mov    ebp,0x9133a4c0
  412567:	push   0x6c
  412569:	sub    bh,BYTE PTR [edx]
  41256b:	jae    0x4125a8
  41256d:	aad    0x30
  41256f:	es dec ebp
  412571:	test   al,0x30
  412573:	pop    ss
  412574:	pushf  
  412575:	dec    ebp
  412576:	or     DWORD PTR [ebx-0x2c],esi
  412579:	pop    es
  41257a:	and    ebx,ecx
  41257c:	rcr    DWORD PTR [edi-0x15],cl
  41257f:	popa   
  412580:	xor    al,0x37
  412582:	sahf   
  412583:	sti    
  412584:	jb     0x412552
  412586:	cs mov bh,bl
  412589:	mov    esp,DWORD PTR [ebx+eax*4+0xe]
  41258d:	cmp    cl,al
  41258f:	iret   
  412590:	out    0x82,eax
  412592:	add    eax,DWORD PTR [eax+0x1f99551a]
  412598:	adc    BYTE PTR [ecx],bh
  41259a:	jle    0x41261b
  41259c:	push   eax
  41259d:	add    esp,DWORD PTR [ebp-0x72b4133a]
  4125a3:	add    al,0xee
  4125a5:	int    0x6a
  4125a7:	call   0xc9fc:0xf0fbdb9e
  4125ae:	fbld   TBYTE PTR [eax]
  4125b0:	sbb    dh,cl
  4125b2:	inc    esp
  4125b3:	pusha  
  4125b4:	xor    ecx,DWORD PTR [edx]
  4125b6:	(bad)  
  4125b7:	pop    es
  4125b8:	into   
  4125b9:	ja     0x4125ed
  4125bb:	in     eax,dx
  4125bc:	or     ch,al
  4125be:	cmp    eax,0x56aefec5
  4125c3:	stos   DWORD PTR es:[edi],eax
  4125c4:	cdq    
  4125c5:	cs xchg ebp,eax
  4125c7:	xchg   ebx,eax
  4125c8:	test   al,0x74
  4125ca:	in     al,dx
  4125cb:	adc    eax,0x15581e67
  4125d0:	mov    dl,0x49
  4125d2:	rcr    ebp,0xaf
  4125d5:	adc    eax,0xd50a8bfc
  4125da:	nop
  4125db:	mov    esp,0xdf753df1
  4125e0:	sti    
  4125e1:	xor    bh,BYTE PTR [ebx+0x116d4f59]
  4125e7:	stos   DWORD PTR es:[edi],eax
  4125e8:	in     eax,0x74
  4125ea:	out    dx,al
  4125eb:	sbb    eax,0x6b7c577e
  4125f0:	sbb    al,0x85
  4125f2:	or     cl,al
  4125f4:	(bad)  
  4125f5:	push   eax
  4125f6:	dec    edi
  4125f7:	pusha  
  4125f8:	dec    ecx
  4125f9:	cmp    al,dl
  4125fb:	imul   edx,DWORD PTR [esi],0x36
  4125fe:	int    0xad
  412600:	and    BYTE PTR [edx+ecx*2+0xa6a4411],cl
  412607:	aam    0x7c
  412609:	ja     0x41267f
  41260b:	test   eax,0x77bf62e7
  412610:	sti    
  412611:	mov    bh,0x64
  412613:	jne    0x4125bc
  412615:	and    al,0x21
  412617:	xchg   edx,eax
  412618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412619:	mov    bh,0x9f
  41261b:	pop    esi
  41261c:	cmp    DWORD PTR [esp+edi*4+0x3a],0x800ae0a5
  412624:	aaa    
  412625:	push   ebp
  412626:	jle    0x4125c2
  412628:	inc    esp
  412629:	cld    
  41262a:	repz pusha 
  41262c:	sub    BYTE PTR [edx-0x559d8dcd],bh
  412632:	jle    0x41260f
  412634:	jnp    0x4125d4
  412636:	icebp  
  412637:	or     al,0xeb
  412639:	push   ebx
  41263a:	shr    DWORD PTR [edi-0x6a],1
  41263d:	pop    ebx
  41263e:	adc    ecx,DWORD PTR [edx+0xf988bed]
  412644:	push   es
  412645:	or     edx,esi
  412647:	fnstcw WORD PTR [ebx-0x45]
  41264a:	sbb    eax,0x9e3d3159
  41264f:	mov    cl,0xa2
  412651:	sbb    DWORD PTR ds:0x860db5aa,edi
  412657:	(bad)  
  412658:	jnp    0x4126bf
  41265a:	scas   eax,DWORD PTR es:[edi]
  41265b:	adc    al,ah
  41265d:	pushf  
  41265e:	(bad)  
  41265f:	fwait
  412660:	mov    bl,0xed
  412662:	push   ecx
  412663:	pop    edx
  412664:	hlt    
  412665:	mov    ah,bl
  412667:	fcmove st,st(4)
  412669:	mov    edi,0x1d37bb23
  41266e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41266f:	cmp    esi,DWORD PTR [edi]
  412671:	test   bh,cl
  412673:	jae    0x4126a1
  412675:	pop    ds
  412676:	jno    0x41261b
  412678:	add    eax,0xe1511f50
  41267d:	ja     0x4126a8
  41267f:	xchg   edi,eax
  412680:	mov    dh,bh
  412682:	ins    DWORD PTR es:[edi],dx
  412683:	jmp    0x412658
  412685:	das    
  412686:	or     DWORD PTR [edx],eax
  412688:	push   cs
  412689:	or     DWORD PTR [ecx-0x6b48cf23],edi
  41268f:	adc    al,0xd5
  412691:	dec    eax
  412692:	mov    DWORD PTR [edx],esi
  412694:	(bad)  
  412695:	mov    al,0xfd
  412697:	jmp    0x1a1:0xfcf82d4
  41269e:	in     al,0x8e
  4126a0:	jne    0x412674
  4126a2:	fisubr DWORD PTR [ebx-0xa6442bd]
  4126a8:	xor    ch,BYTE PTR [eax-0x47]
  4126ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ac:	or     eax,0x64c34a7a
  4126b1:	and    DWORD PTR [edx],esp
  4126b3:	xor    eax,0x5af48a5b
  4126b8:	js     0x41270d
  4126ba:	lods   al,BYTE PTR ds:[esi]
  4126bb:	imul   edi,DWORD PTR [esi],0xfcac50dc
  4126c1:	outs   dx,DWORD PTR ds:[esi]
  4126c2:	lock push esi
  4126c4:	jne    0x412701
  4126c6:	xchg   esi,eax
  4126c7:	mov    WORD PTR [ecx],gs
  4126c9:	pop    esp
  4126ca:	inc    ebp
  4126cb:	jnp    0x41265b
  4126cd:	add    esi,DWORD PTR ds:0x7df7fe9f
  4126d3:	push   edx
  4126d4:	mov    dl,0x98
  4126d6:	iret   
  4126d7:	into   
  4126d8:	shl    DWORD PTR [esi],0x93
  4126db:	lods   al,BYTE PTR ds:[esi]
  4126dc:	xchg   esi,eax
  4126dd:	jo     0x41272a
  4126df:	addr16 jmp 0x1365:0xe34e113c
  4126e7:	jb     0x412765
  4126e9:	sbb    cl,dl
  4126eb:	aas    
  4126ec:	push   esp
  4126ed:	loope  0x412697
  4126ef:	xchg   ecx,eax
  4126f0:	ja     0x4126aa
  4126f2:	fstp   QWORD PTR [edi-0x24]
  4126f5:	jmp    0xf000ecf4
  4126fa:	xchg   esi,eax
  4126fb:	jge    0x4126f1
  4126fd:	jg     0x4126d0
  4126ff:	fsubr  DWORD PTR [ebp+0x46]
  412702:	dec    ebx
  412703:	(bad)  
  412705:	not    BYTE PTR [ebp+0x528108e0]
  41270b:	push   edi
  41270d:	push   ss
  41270e:	xchg   DWORD PTR [ebx],edx
  412710:	js     0x4126f2
  412712:	sub    DWORD PTR [esi-0x32],eax
  412715:	sahf   
  412716:	jo     0x41271a
  412718:	loopne 0x41273b
  41271a:	cmp    dh,bh
  41271c:	mov    al,0xe9
  41271e:	and    eax,0xc27a5122
  412723:	fldenv ds:0xda860da4
  412729:	and    al,0x21
  41272b:	(bad)  
  41272c:	shl    DWORD PTR [ebx],cl
  41272e:	inc    ecx
  41272f:	int3   
  412730:	add    al,cl
  412732:	ret    0x80f7
  412735:	shl    ch,1
  412737:	adc    esi,DWORD PTR cs:[ecx+0x4af4a352]
  41273e:	or     al,0x89
  412740:	mov    cl,0x89
  412742:	arpl   ax,dx
  412744:	jl     0x41274f
  412746:	xlat   BYTE PTR ds:[ebx]
  412747:	sub    dl,BYTE PTR ds:0x60000893
  41274d:	fcom   st(7)
  41274f:	sbb    BYTE PTR [edi],bh
  412751:	adc    eax,DWORD PTR [ecx]
  412753:	ret    0x4737
  412756:	dec    ecx
  412757:	sahf   
  412758:	jne    0x412772
  41275a:	add    eax,0x51b05844
  41275f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412760:	scas   al,BYTE PTR es:[edi]
  412761:	push   0xffffffe3
  412763:	inc    edx
  412764:	push   ebx
  412765:	jge    0x41277b
  412767:	test   dl,bl
  412769:	jbe    0x412797
  41276b:	mov    esp,0xcd4dffa7
  412770:	out    0x37,al
  412772:	inc    ecx
  412773:	(bad)  
  412774:	mov    ds:0xf602d0f5,eax
  412779:	mov    ebp,esi
  41277b:	mov    ch,0x1c
  41277d:	retf   0xa2e7
  412780:	cwde   
  412781:	inc    eax
  412782:	pop    eax
  412783:	in     eax,dx
  412784:	ror    DWORD PTR [esi-0x6f579f26],0x6
  41278b:	loopne 0x412806
  41278d:	out    dx,eax
  41278e:	scas   eax,DWORD PTR es:[edi]
  41278f:	and    DWORD PTR [ebp+0x1d68c2a4],esp
  412795:	jl     0x412734
  412797:	xchg   edx,eax
  412798:	aaa    
  412799:	iret   
  41279a:	aad    0x1b
  41279c:	ret    0x158b
  41279f:	in     al,dx
  4127a0:	and    eax,0xf6330042
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225ec
  4127d5:	mov    ds:0x4225f4,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xbca9a811
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [eax+0x76e15021],ah
  4128b7:	aad    0x63
  4128b9:	nop
  4128ba:	sub    al,0x14
  4128bc:	mov    bl,0xc7
  4128be:	addr16 add al,ch
  4128c1:	stc    
  4128c2:	test   eax,0x169f062a
  4128c7:	arpl   WORD PTR [edx+0x12],di
  4128ca:	jns    0x4128bc
  4128cc:	aaa    
  4128cd:	sar    BYTE PTR [ecx],0x89
  4128d0:	leave  
  4128d1:	imul   edi,DWORD PTR [esi+0x3f],0xffffff88
  4128d5:	or     BYTE PTR [edx-0x3875973b],0x2b
  4128dc:	adc    al,0x1c
  4128de:	add    eax,0x353d5eac
  4128e3:	pop    eax
  4128e4:	pop    ebp
  4128e5:	imul   edi,DWORD PTR [edx-0x7ac2161e],0xc0688e61
  4128ef:	repnz jecxz 0x41296f
  4128f2:	mov    esp,0xce84d2a3
  4128f7:	hlt    
  4128f8:	ins    BYTE PTR es:[edi],dx
  4128f9:	lea    edx,[esi+0x1955e686]
  4128ff:	mov    ds:0xb39e55e7,eax
  412904:	mov    esp,DWORD PTR [ecx]
  412906:	stos   DWORD PTR es:[edi],eax
  412907:	jbe    0x4128c2
  412909:	jge    0x41294c
  41290b:	inc    edx
  41290c:	aam    0x42
  41290e:	inc    edi
  41290f:	mov    bh,0x68
  412911:	loope  0x412916
  412913:	push   ecx
  412914:	repz mov ds:0x409e2781,eax
  41291a:	fsub   QWORD PTR [esi+0x4f]
  41291d:	xchg   DWORD PTR [eax],ecx
  41291f:	jnp    0x41296e
  412921:	dec    eax
  412922:	rol    DWORD PTR [eax-0x3f],1
  412925:	jbe    0x4128fb
  412927:	xchg   edx,eax
  412928:	dec    DWORD PTR [edx-0x77]
  41292b:	mov    ds:0x80b37ba3,eax
  412930:	and    BYTE PTR [esi+0x29766806],ah
  412936:	add    DWORD PTR [ecx],esp
  412938:	ret    
  412939:	out    dx,eax
  41293a:	lea    ebp,[ebp-0x68]
  41293d:	xor    edx,DWORD PTR [edi-0x6c]
  412940:	cmp    ah,BYTE PTR [ebx+0x9a144ee]
  412946:	mov    ds:0x7c132d33,eax
  41294b:	fistp  WORD PTR [edi]
  41294d:	pop    ecx
  41294e:	test   al,bh
  412950:	ret    0x3bbd
  412953:	inc    esp
  412954:	sub    eax,DWORD PTR [edi-0x4a]
  412957:	ret    0x4c9d
  41295a:	test   eax,0x770feeb2
  41295f:	jg     0x4129d8
  412961:	in     al,0xe5
  412963:	mov    gs,WORD PTR [eax]
  412965:	std    
  412966:	js     0x4128fe
  412968:	and    esi,esi
  41296a:	sar    DWORD PTR [ecx+0x50],cl
  41296d:	mov    bh,0x95
  41296f:	add    DWORD PTR [edx-0x15],edi
  412972:	mov    ebp,0xac624902
  412977:	mov    esi,0xd2b03b2f
  41297c:	add    DWORD PTR [ebx-0x41],0x531e7e3c
  412983:	test   eax,0xdd27474b
  412988:	call   0x7d1b758d
  41298d:	clc    
  41298e:	push   0xf3ef37ae
  412993:	jl     0x41294c
  412995:	xor    eax,0x529be61d
  41299a:	sti    
  41299b:	scas   eax,DWORD PTR es:[edi]
  41299c:	cmc    
  41299d:	dec    ebp
  41299e:	cwde   
  41299f:	lds    esp,FWORD PTR [esi]
  4129a1:	pop    esp
  4129a2:	daa    
  4129a3:	mov    DWORD PTR [ecx+0x37dc95b7],ebx
  4129a9:	enter  0xaa08,0xa3
  4129ad:	sub    DWORD PTR [eax+ebx*4],ecx
  4129b0:	push   ds
  4129b1:	jmp    0xb086:0xaa821c38
  4129b8:	out    dx,eax
  4129b9:	aaa    
  4129ba:	inc    eax
  4129bb:	xor    eax,0xb9478e6f
  4129c0:	pop    ss
  4129c1:	xor    ebp,DWORD PTR [eax+0x2a06c206]
  4129c7:	pop    ecx
  4129c8:	push   0x573667f3
  4129cd:	jge    0x412a2f
  4129cf:	retf   0x59d2
  4129d2:	or     dh,ch
  4129d4:	pop    esi
  4129d5:	push   es
  4129d6:	aas    
  4129d7:	repnz in al,0xf2
  4129da:	lock pushf 
  4129dc:	sbb    eax,0xec7e73d2
  4129e1:	fsubr  DWORD PTR [esp+edi*4+0x8121b82]
  4129e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e9:	and    dh,BYTE PTR [ebx]
  4129eb:	jmp    0xe240:0xb0c88249
  4129f2:	popa   
  4129f3:	push   ecx
  4129f4:	mov    ds:0x8b3579f1,al
  4129f9:	push   0xffffffb9
  4129fb:	cdq    
  4129fc:	cmp    DWORD PTR [edi+ebx*2-0x66],ecx
  412a00:	mov    al,0xf4
  412a02:	jbe    0x412a80
  412a04:	xor    eax,0xafff7709
  412a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a0a:	jecxz  0x4129cd
  412a0c:	sahf   
  412a0d:	pop    DWORD PTR [eax]
  412a0f:	(bad)  
  412a10:	fmul   DWORD PTR [eax]
  412a12:	mov    ebx,0xe3cfdb38
  412a17:	jmp    0x76699da9
  412a1c:	in     al,dx
  412a1d:	or     bl,ah
  412a1f:	cwde   
  412a20:	pop    es
  412a21:	dec    edx
  412a22:	das    
  412a23:	fwait
  412a24:	and    BYTE PTR [esi+esi*1],bl
  412a27:	in     eax,dx
  412a28:	mov    ecx,0x8ce83456
  412a2d:	retf   0xe6da
  412a30:	in     al,0xb1
  412a32:	mov    bh,0xa2
  412a34:	add    al,0xba
  412a36:	and    DWORD PTR [edi+edx*4+0x2bb9daea],edi
  412a3d:	aad    0xf9
  412a3f:	popa   
  412a40:	call   0x61b38345
  412a45:	dec    edi
  412a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a47:	xchg   esi,eax
  412a48:	cli    
  412a49:	pop    esp
  412a4a:	xor    al,0xc3
  412a4c:	xchg   DWORD PTR [ebx-0x1a37f4d0],eax
  412a52:	or     al,0xd
  412a54:	inc    edi
  412a55:	sti    
  412a56:	sbb    eax,0xbea1b2c6
  412a5b:	(bad)  
  412a5c:	hlt    
  412a5d:	or     ah,BYTE PTR [eax-0x4c]
  412a60:	xor    eax,0xb67f6a95
  412a65:	xor    ah,BYTE PTR [ebx]
  412a67:	fild   DWORD PTR [ecx+0x24]
  412a6a:	xchg   DWORD PTR [esi],ecx
  412a6c:	inc    edi
  412a6d:	mov    esi,DWORD PTR [ebx+0x4]
  412a70:	sub    DWORD PTR cs:[edi+0x35b2836],ebp
  412a77:	mov    ch,0x23
  412a79:	lods   eax,DWORD PTR ds:[esi]
  412a7a:	mov    ch,0x2d
  412a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a7d:	and    eax,0xc7c6d7a7
  412a82:	inc    esp
  412a83:	lods   al,BYTE PTR ds:[esi]
  412a84:	mov    bl,0xe9
  412a86:	gs cli 
  412a88:	push   ebp
  412a89:	daa    
  412a8a:	rol    DWORD PTR [esi],cl
  412a8c:	xchg   esp,eax
  412a8d:	mov    bl,0xd0
  412a8f:	ins    DWORD PTR es:[edi],dx
  412a90:	and    eax,0x7f5ae68c
  412a95:	repz dec ebx
  412a97:	pop    esp
  412a98:	pusha  
  412a99:	rcr    bh,cl
  412a9b:	das    
  412a9c:	mov    al,0x3b
  412a9e:	icebp  
  412a9f:	ficom  WORD PTR [eax+0x46bd1273]
  412aa5:	shl    BYTE PTR [ebp+eiz*4+0x4c34ab7],0x2f
  412aad:	inc    ebx
  412aae:	outs   dx,DWORD PTR ds:[esi]
  412aaf:	mov    ebp,0xa07ea646
  412ab4:	daa    
  412ab5:	mov    dh,0x9f
  412ab7:	lock popa 
  412ab9:	cmp    BYTE PTR [ecx],bl
  412abb:	icebp  
  412abc:	sub    DWORD PTR [edi],edx
  412abe:	ret    
  412abf:	imul   edx,DWORD PTR [ebx],0xaa458ba0
  412ac5:	clc    
  412ac6:	dec    esi
  412ac7:	mov    dh,0x55
  412ac9:	rcl    DWORD PTR [esi-0x52],0x4b
  412acd:	sbb    esi,DWORD PTR [edx+edx*4]
  412ad0:	or     bh,ah
  412ad2:	nop
  412ad3:	inc    ecx
  412ad4:	lods   eax,DWORD PTR ds:[esi]
  412ad5:	cmp    BYTE PTR [eax],al
  412ad7:	stc    
  412ad8:	pop    esi
  412ad9:	addr16 pop eax
  412adb:	push   edx
  412adc:	cmp    WORD PTR [ecx-0x36eabbca],sp
  412ae3:	sbb    cl,bl
  412ae5:	adc    esi,esi
  412ae7:	or     al,0x66
  412ae9:	xchg   dh,ch
  412aeb:	fild   WORD PTR [edi]
  412aed:	ins    DWORD PTR es:[edi],dx
  412aee:	dec    esi
  412aef:	imul   eax,DWORD PTR [ebx+0x4b],0x19
  412af3:	test   BYTE PTR [ebx],ah
  412af5:	pop    es
  412af6:	(bad)  
  412af7:	retf   0x607
  412afa:	pop    eax
  412afb:	add    BYTE PTR ds:0x4b3d1b2d,dh
  412b01:	jle    0x412b34
  412b03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b04:	xor    eax,DWORD PTR [edx+eiz*8+0x3d]
  412b08:	ret    
  412b09:	add    eax,0x6614e5f4
  412b0e:	push   esp
  412b0f:	out    dx,eax
  412b10:	(bad)
  412b14:	dec    esi
  412b15:	mov    dl,ch
  412b17:	call   0x7ea21759
  412b1c:	cwde   
  412b1d:	jae    0x412ae7
  412b1f:	xchg   BYTE PTR [ecx+0xb],ah
  412b22:	sub    eax,0x62887c75
  412b27:	push   edx
  412b28:	mov    DWORD PTR [edi],ebp
  412b2a:	call   0x668e:0x1f38f0e0
  412b31:	sbb    eax,0x6dd2a1b7
  412b36:	popf   
  412b37:	push   esi
  412b38:	add    al,0xb7
  412b3a:	shr    DWORD PTR gs:[ecx+0x13],1
  412b3e:	imul   ecx,DWORD PTR [esi+ecx*1+0x4593aef],0xfffffff5
  412b46:	sar    DWORD PTR [ecx],1
  412b48:	sub    eax,0x64e9a728
  412b4d:	cmp    cl,BYTE PTR [edx+0x15]
  412b50:	push   esp
  412b51:	aaa    
  412b52:	push   0xffffffc8
  412b54:	xchg   ecx,eax
  412b55:	lds    ebx,FWORD PTR [edx]
  412b57:	pop    esi
  412b58:	nop
  412b59:	aaa    
  412b5a:	pop    eax
  412b5b:	aaa    
  412b5c:	add    BYTE PTR [edi],ch
  412b5e:	bound  esi,QWORD PTR [edx+0x786d1386]
  412b64:	lods   eax,DWORD PTR ds:[esi]
  412b65:	pop    ds
  412b66:	mov    ah,0xf2
  412b68:	test   al,0x9d
  412b6a:	add    BYTE PTR [edi],ah
  412b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6d:	and    eax,DWORD PTR cs:[esi]
  412b70:	add    BYTE PTR [ebx-0x17991b6c],ch
  412b76:	sbb    BYTE PTR [ebx],bl
  412b78:	ret    0xc620
  412b7b:	mov    ebp,0xe32040fb
  412b80:	mov    ebx,ebx
  412b82:	ss ss pusha 
  412b85:	int3   
  412b86:	mov    al,ds:0xf056ceed
  412b8b:	mov    DWORD PTR [ecx+0x6a7314c7],edx
  412b91:	jmp    0x7b85:0x24457605
  412b98:	loop   0x412bb4
  412b9a:	or     dl,BYTE PTR [edi-0x6]
  412b9d:	jno    0x412b95
  412b9f:	test   al,0xee
  412ba1:	dec    ecx
  412ba2:	adc    ecx,DWORD PTR [edx]
  412ba4:	cmp    BYTE PTR [edx],dh
  412ba6:	push   ecx
  412ba7:	pop    ebp
  412ba8:	test   DWORD PTR [ecx],ebx
  412baa:	or     BYTE PTR [ebx+0x7b935c6d],bh
  412bb0:	ficomp WORD PTR [edi-0x3b55f998]
  412bb6:	pop    edi
  412bb7:	leave  
  412bb8:	push   ebp
  412bb9:	cwde   
  412bba:	lea    ecx,[edi]
  412bbc:	and    eax,esi
  412bbe:	mov    eax,ds:0xf586ebc5
  412bc3:	sub    BYTE PTR [edi-0x1c1eb7c7],bh
  412bc9:	inc    edx
  412bca:	adc    bh,BYTE PTR [ecx+0x5]
  412bcd:	xchg   edi,eax
  412bce:	inc    edi
  412bcf:	jbe    0x412c49
  412bd1:	jae    0x412b79
  412bd3:	int3   
  412bd4:	xor    eax,0x8a01c725
  412bd9:	push   esp
  412bda:	mov    ss,edx
  412bdc:	in     eax,0xff
  412bde:	or     eax,0x9ede745d
  412be3:	xor    DWORD PTR [ebp+edx*2+0x4f],edx
  412be7:	xor    DWORD PTR [edx+0x14bab50b],edx
  412bed:	jg     0xcafeb17a
  412bf3:	push   ecx
  412bf4:	stc    
  412bf5:	jb     0x412bad
  412bf7:	fidivr WORD PTR [eax-0x7e]
  412bfa:	gs or  eax,0x3703a8dd
  412c00:	pop    ds
  412c01:	pop    ecx
  412c02:	loope  0x412c76
  412c04:	pop    esp
  412c05:	in     al,dx
  412c06:	and    eax,0xb7e206fe
  412c0b:	mov    ah,cl
  412c0d:	out    0x96,al
  412c0f:	cmp    ebp,DWORD PTR [esi-0x344f227b]
  412c15:	bound  ecx,QWORD PTR [esi+0x35]
  412c18:	cmp    eax,0xec185e83
  412c1d:	bound  ebx,QWORD PTR [bp+si-0x792a]
  412c22:	jge    0x412c7b
  412c24:	imul   edx,DWORD PTR [edx],0xff746fec
  412c2a:	test   BYTE PTR [eax-0x79],ah
  412c2d:	add    al,0xbb
  412c2f:	xchg   ecx,eax
  412c30:	sar    DWORD PTR [eax+0x715a249c],0xf7
  412c37:	call   0x6c8acaf5
  412c3c:	stc    
  412c3d:	imul   edx,DWORD PTR [edi-0x6d],0x3bb06105
  412c44:	je     0x412cc4
  412c46:	dec    ebx
  412c47:	pop    ds
  412c48:	mov    eax,0x78c11663
  412c4d:	(bad)  
  412c4e:	cld    
  412c4f:	xor    edi,DWORD PTR [edi-0x43]
  412c52:	iret   
  412c53:	test   al,0x7c
  412c55:	ja     0x412c51
  412c57:	add    al,0x2f
  412c59:	jns    0x412c96
  412c5b:	push   ds
  412c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c5d:	sbb    BYTE PTR [ebx+esi*4+0x30],al
  412c61:	or     eax,0xbd207a93
  412c66:	scas   eax,DWORD PTR es:[edi]
  412c67:	test   eax,0xfce81bcc
  412c6c:	hlt    
  412c6d:	mov    eax,DWORD PTR [ebp-0x8]
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xbe2f7555
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    cl,dl
  412cae:	push   0x72
  412cb0:	test   bh,0xb0
  412cb3:	jge    0x412cdd
  412cb5:	mov    esp,0x4b249b
  412cba:	push   ebp
  412cbb:	fisttp DWORD PTR [edx-0x310f2d27]
  412cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc2:	sbb    BYTE PTR ds:0xef7a0234,bl
  412cc8:	stos   DWORD PTR es:[edi],eax
  412cc9:	dec    eax
  412cca:	pop    edx
  412ccb:	mov    esp,0xdbccaf08
  412cd0:	push   ss
  412cd1:	(bad)  
  412cd2:	js     0x412ca5
  412cd4:	and    esp,DWORD PTR [ebp-0x31f2721]
  412cda:	xor    esp,DWORD PTR [eax-0xb]
  412cdd:	push   ss
  412cde:	aam    0xdb
  412ce0:	cmc    
  412ce1:	jbe    0x412ca4
  412ce3:	mov    bl,ah
  412ce5:	mov    ah,0x85
  412ce7:	int    0x60
  412ce9:	test   eax,0x94aff983
  412cee:	pop    edx
  412cef:	in     al,0xc0
  412cf1:	cmp    eax,0x506947a6
  412cf6:	cld    
  412cf7:	rol    DWORD PTR [edi],0x31
  412cfa:	mov    esi,0xa2c4eec4
  412cff:	(bad)  
  412d00:	or     ecx,ebp
  412d02:	pop    eax
  412d03:	dec    ebx
  412d04:	cmp    ecx,DWORD PTR [ebx-0x6244870d]
  412d0a:	mov    al,0x17
  412d0c:	jae    0x412d25
  412d0e:	stc    
  412d0f:	mov    WORD PTR [edi-0x2ca5a049],es
  412d15:	dec    eax
  412d16:	test   BYTE PTR [esi-0x19],0xcd
  412d1a:	sbb    eax,DWORD PTR [edx+0x10e8c905]
  412d20:	ss inc esi
  412d22:	sbb    BYTE PTR [edx],dl
  412d24:	nop    esi
  412d27:	fwait
  412d28:	in     al,dx
  412d29:	ret    0x12f2
  412d2c:	fcmovb st,st(7)
  412d2e:	cmp    bl,BYTE PTR ds:0x42c86808
  412d34:	iret   
  412d35:	cmc    
  412d36:	inc    esi
  412d37:	lds    ebx,FWORD PTR [edx]
  412d39:	addr16 (bad) 
  412d3b:	das    
  412d3c:	test   DWORD PTR [ebx],0x4032ea50
  412d42:	not    DWORD PTR [edx+0x45ae27fa]
  412d48:	es jnp 0x412d33
  412d4b:	in     al,dx
  412d4c:	pushf  
  412d4d:	mov    DWORD PTR [eax],ecx
  412d4f:	xor    DWORD PTR ds:0xaa76c44a,edi
  412d55:	lods   eax,DWORD PTR ds:[esi]
  412d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d57:	mov    BYTE PTR [ebp-0x2b],al
  412d5a:	sahf   
  412d5b:	aad    0xfb
  412d5d:	xchg   BYTE PTR [edi],cl
  412d5f:	pop    edi
  412d60:	sub    al,0x71
  412d62:	jbe    0x412db8
  412d64:	push   eax
  412d65:	and    dl,BYTE PTR [esi-0xcfc8d0e]
  412d6b:	lahf   
  412d6c:	sbb    DWORD PTR [ecx-0x2c703334],eax
  412d72:	adc    DWORD PTR [ebx-0x29],ebp
  412d75:	and    ch,BYTE PTR [ebx]
  412d77:	out    dx,al
  412d78:	adc    esi,eax
  412d7a:	outs   dx,DWORD PTR ds:[esi]
  412d7b:	sbb    ebp,DWORD PTR [eax+0x61]
  412d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d7f:	add    al,0x5e
  412d81:	bound  ebx,QWORD PTR [eax]
  412d83:	popf   
  412d84:	mov    ah,0x58
  412d86:	add    DWORD PTR [edi+eiz*2-0x6b],esp
  412d8a:	xor    DWORD PTR [ebx+ebx*4],edx
  412d8d:	mov    edi,0x7335f610
  412d92:	push   0xa25daeb0
  412d97:	pop    ds
  412d98:	les    ebx,FWORD PTR [edx-0x2494fbdf]
  412d9e:	pop    edi
  412d9f:	sub    edx,0x5c
  412da2:	dec    esi
  412da3:	cmp    eax,0xfdc68526
  412da8:	lds    edx,FWORD PTR [edi]
  412daa:	mov    bh,0x68
  412dac:	adc    eax,DWORD PTR [ebp+0x6b]
  412daf:	xchg   BYTE PTR [esi],cl
  412db1:	adc    al,0x91
  412db3:	xor    BYTE PTR [ebx+0xe],0x6c
  412db7:	test   DWORD PTR [eax],0x3001949
  412dbd:	dec    esi
  412dbe:	xchg   edx,eax
  412dbf:	pop    ebp
  412dc0:	dec    eax
  412dc1:	shl    DWORD PTR [ebx-0x6d4f26e0],0xfa
  412dc8:	jo     0x412d92
  412dca:	and    BYTE PTR [edi-0x2a5a5a83],0xcb
  412dd1:	lahf   
  412dd2:	cwde   
  412dd3:	stos   DWORD PTR es:[edi],eax
  412dd4:	(bad)  
  412dd5:	in     al,0x58
  412dd7:	mov    ebp,0x4a7e4f45
  412ddc:	add    esi,esi
  412dde:	pop    ecx
  412ddf:	mov    eax,0xbb84ba78
  412de4:	xchg   esi,eax
  412de5:	in     al,0xd8
  412de7:	(bad)  
  412de8:	sub    ch,BYTE PTR [ebp-0x278bd263]
  412dee:	mov    cs,WORD PTR ds:0x8d3e30a7
  412df4:	lods   al,BYTE PTR ds:[esi]
  412df5:	jge    0x412df2
  412df7:	out    dx,eax
  412df8:	mov    ?,esi
  412dfa:	dec    ebp
  412dfb:	fstp   st(3)
  412dfd:	cmp    eax,0x2dc485f9
  412e02:	(bad)  
  412e04:	jae    0x412daf
  412e06:	push   eax
  412e07:	js     0x412e87
  412e09:	ins    DWORD PTR es:[edi],dx
  412e0a:	mul    dl
  412e0c:	fsubr  DWORD PTR [eax-0x1a]
  412e0f:	mov    ebx,0x2a4d12bd
  412e14:	(bad)  
  412e15:	or     eax,0xacf4d8b4
  412e1a:	rcr    cl,cl
  412e1c:	jnp    0x412e10
  412e1e:	ds pop esp
  412e20:	cmp    eax,0x14c00831
  412e25:	arpl   WORD PTR [ecx+0x281b8a95],bx
  412e2b:	lods   eax,DWORD PTR ds:[esi]
  412e2c:	sub    BYTE PTR [ecx],ch
  412e2e:	or     al,0xad
  412e30:	(bad)  
  412e31:	aad    0xad
  412e33:	ret    0xb2c8
  412e36:	sub    edi,ebp
  412e38:	xchg   ebx,eax
  412e39:	inc    edi
  412e3a:	inc    ecx
  412e3b:	repnz jmp 0xa8c2:0x628ae5
  412e43:	push   edi
  412e44:	adc    al,0x91
  412e46:	lods   eax,DWORD PTR ds:[esi]
  412e47:	jne    0x412ea5
  412e49:	mov    eax,ds:0x4b588a38
  412e4e:	ret    
  412e4f:	arpl   WORD PTR [esi+0x70],bx
  412e52:	xchg   ecx,eax
  412e53:	aad    0x70
  412e55:	not    BYTE PTR [ebx+esi*4-0x7b]
  412e59:	adc    al,0xac
  412e5b:	add    eax,0xa7f4e11e
  412e60:	idiv   BYTE PTR [ecx]
  412e62:	fild   WORD PTR [ebx+eiz*2]
  412e65:	pop    ss
  412e66:	imul   ecx,DWORD PTR [esi],0x5ce89e5a
  412e6c:	mov    bh,dh
  412e6e:	mov    ds:0x8492ec2d,al
  412e73:	mov    edx,0x915b6dc
  412e78:	dec    edi
  412e79:	ds push ss
  412e7b:	dec    esp
  412e7c:	fiadd  WORD PTR [ebp+0x2e]
  412e7f:	fisttp DWORD PTR [esi+0x5f]
  412e82:	cmc    
  412e83:	add    ah,bl
  412e85:	mov    ah,bl
  412e87:	cmpxchg8b (bad)
  412e88:	(bad)  
  412e89:	leave  
  412e8a:	aam    0xcd
  412e8c:	push   esi
  412e8d:	imul   esi,DWORD PTR ds:0xf4fea1c1,0x1c61056b
  412e97:	in     al,dx
  412e98:	repnz push ss
  412e9a:	or     al,0x4a
  412e9c:	aaa    
  412e9d:	mov    ah,0x91
  412e9f:	out    dx,eax
  412ea0:	leave  
  412ea1:	aaa    
  412ea2:	inc    esi
  412ea3:	nop
  412ea4:	fwait
  412ea5:	lods   al,BYTE PTR ds:[esi]
  412ea6:	or     ah,BYTE PTR [ecx-0x50b01e5e]
  412eac:	pop    ebp
  412ead:	enter  0xaf04,0xcd
  412eb1:	push   0x7
  412eb3:	cmp    ecx,DWORD PTR [ebp+0x5a63af5b]
  412eb9:	mov    edi,0xa992f05a
  412ebe:	push   ss
  412ebf:	xchg   BYTE PTR [edi+edi*4+0x3f0fc32a],ch
  412ec6:	daa    
  412ec7:	repz pusha 
  412ec9:	out    dx,al
  412eca:	jno    0x412f14
  412ecc:	mov    ecx,0x7e2b5f09
  412ed1:	mov    dl,0x1e
  412ed3:	adc    ch,ah
  412ed5:	aam    0x6c
  412ed7:	aam    0xf6
  412ed9:	pop    esp
  412eda:	cwde   
  412edb:	cli    
  412edc:	mov    cl,0x87
  412ede:	adc    DWORD PTR ds:0xf38fd95,ebp
  412ee4:	scas   eax,DWORD PTR es:[edi]
  412ee5:	iret   
  412ee6:	gs add al,0x40
  412ee9:	dec    eax
  412eea:	mov    dl,0xb7
  412eec:	popf   
  412eed:	mov    ch,0x9e
  412eef:	shr    BYTE PTR [ecx+0x58],0x52
  412ef3:	fidivr DWORD PTR [ebx-0x1d]
  412ef6:	lahf   
  412ef7:	sub    cl,0xf8
  412efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412efb:	xchg   edi,eax
  412efc:	cmc    
  412efd:	div    BYTE PTR [esi-0x62d45074]
  412f03:	iret   
  412f04:	jl     0x412ef6
  412f06:	inc    edx
  412f07:	mov    ?,WORD PTR [eax-0x46]
  412f0a:	dec    ecx
  412f0b:	sar    BYTE PTR [ecx-0x3b397ec6],cl
  412f11:	scas   al,BYTE PTR es:[edi]
  412f12:	or     ebx,edx
  412f14:	out    0xa,al
  412f16:	or     al,0x5d
  412f18:	dec    ebp
  412f19:	ret    0xfe60
  412f1c:	sbb    eax,0xff9ddec9
  412f21:	jb     0x412f67
  412f23:	(bad)  
  412f24:	std    
  412f25:	icebp  
  412f26:	cmp    eax,0x38836f53
  412f2b:	enter  0xa679,0x2c
  412f2f:	xchg   ecx,eax
  412f30:	xor    BYTE PTR [esi+esi*4+0x6b],ah
  412f34:	es push ss
  412f36:	call   0x4bf5f2ff
  412f3b:	fs mov ebx,ecx
  412f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f3f:	sub    dl,dh
  412f41:	enter  0x4e66,0x44
  412f45:	mov    WORD PTR [eax],ss
  412f47:	inc    eax
  412f48:	outs   dx,DWORD PTR ds:[esi]
  412f49:	add    eax,0xa891fe61
  412f4e:	mov    dh,0x79
  412f50:	xchg   DWORD PTR [esi+0x4bc00efd],ebx
  412f56:	ins    BYTE PTR es:[edi],dx
  412f57:	cdq    
  412f58:	pop    ss
  412f59:	and    bh,ch
  412f5b:	loop   0x412f2c
  412f5d:	loope  0x412f2f
  412f5f:	popa   
  412f60:	jns    0x412f6e
  412f62:	xchg   ebx,eax
  412f63:	out    dx,eax
  412f64:	xchg   esi,eax
  412f65:	call   0x2fad5fb9
  412f6a:	xchg   DWORD PTR [ebx+ebp*1],ecx
  412f6d:	xchg   ebp,eax
  412f6e:	mov    eax,ds:0xc7b29bf8
  412f73:	xor    DWORD PTR [edi-0x41],ebx
  412f76:	pop    ss
  412f77:	or     BYTE PTR [edx+0x1025379b],dl
  412f7d:	ss dec edx
  412f7f:	data16 sbb BYTE PTR [ecx-0x59],0x71
  412f84:	sbb    dh,BYTE PTR [ebx+0x1d]
  412f87:	ret    0xcb5b
  412f8a:	lea    esi,[ebp+0x69]
  412f8d:	and    DWORD PTR [edx+0x25],esp
  412f90:	mov    esi,DWORD PTR [eax+esi*4]
  412f93:	fild   QWORD PTR [edi-0x3d45f580]
  412f99:	jg     0x413007
  412f9b:	mov    ds:0xe25d833c,al
  412fa0:	outs   dx,DWORD PTR ds:[esi]
  412fa1:	mov    ds:0x965b4c3b,al
  412fa6:	adc    DWORD PTR [ebx-0x470bf879],0xe582a9db
  412fb0:	mov    eax,ds:0x260c1e9a
  412fb5:	dec    ebp
  412fb6:	adc    BYTE PTR [edx],bh
  412fb8:	xchg   esi,eax
  412fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fba:	repnz mov ah,0xe5
  412fbd:	xor    bl,dh
  412fbf:	mov    eax,ds:0xaac58560
  412fc4:	imul   ecx,DWORD PTR [edx+edi*8],0xee874edb
  412fcb:	clc    
  412fcc:	into   
  412fcd:	pop    edx
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	adc    bh,ch
  412fd1:	adc    al,0x57
  412fd3:	out    0x23,eax
  412fd5:	jecxz  0x412f8d
  412fd7:	dec    ebp
  412fd8:	popf   
  412fd9:	scas   al,BYTE PTR es:[edi]
  412fda:	and    al,0xd7
  412fdc:	dec    esi
  412fdd:	lock jne 0x412fe2
  412fe0:	push   ebx
  412fe1:	push   esp
  412fe2:	pop    ds
  412fe3:	stos   BYTE PTR es:[edi],al
  412fe4:	aas    
  412fe5:	or     DWORD PTR [edx+ebx*1+0x30],edi
  412fe9:	idiv   BYTE PTR [esp+edi*4-0x51]
  412fed:	adc    al,0xc4
  412fef:	pop    esi
  412ff0:	xor    DWORD PTR [esi+0x3a23ec82],edx
  412ff6:	pop    eax
  412ff7:	lock inc edx
  412ff9:	into   
  412ffa:	add    DWORD PTR [edi],ebx
  412ffc:	xchg   esi,eax
  412ffd:	inc    ecx
  412ffe:	mov    cl,0x1f
  413000:	xor    DWORD PTR [ecx],esp
  413002:	cwde   
  413003:	imul   edx,esp,0x5f22a9ba
  413009:	add    al,0xc2
  41300b:	ins    BYTE PTR es:[edi],dx
  41300c:	fdiv   QWORD PTR [edi]
  41300e:	adc    eax,DWORD PTR [ebx+0x6af4c3e2]
  413014:	test   DWORD PTR [ebx],ebx
  413016:	push   ebx
  413017:	test   DWORD PTR [ebx],esp
  413019:	xor    ebx,edi
  41301b:	lods   al,BYTE PTR ds:[esi]
  41301c:	xchg   BYTE PTR [eax+0x7ec451f8],dl
  413022:	sti    
  413023:	pop    eax
  413024:	enter  0x6ebe,0xb
  413028:	pop    ecx
  413029:	or     al,bh
  41302b:	mov    ebx,0x4af96f60
  413030:	xchg   esp,eax
  413031:	xchg   bh,dl
  413033:	sbb    esp,ebp
  413035:	jg     0x41302b
  413037:	out    0xc,eax
  413039:	sub    BYTE PTR [ebx],ch
  41303b:	test   BYTE PTR [eax-0x6e],0xc5
  41303f:	or     eax,0xc146f0f8
  413044:	mov    ds:0x61506d4d,eax
  413049:	ss mov esi,0x5fe5f279
  41304f:	or     BYTE PTR [edi-0x29b55610],ch
  413055:	push   ebx
  413056:	pop    esi
  413057:	lods   al,BYTE PTR ds:[esi]
  413058:	bnd jb 0x4130be
  41305b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41305d:	js     0x4130cb
  41305f:	mov    al,0x75
  413061:	imul   DWORD PTR [esi]
  413063:	mov    eax,ds:0x9e807ebe
  413068:	push   ecx
  413069:	push   eax
  41306a:	call   0x42206c
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [edx+ebp*1+0x15],edi
  4130e0:	fnstsw WORD PTR [esi-0x2d]
  4130e3:	dec    eax
  4130e4:	sbb    BYTE PTR [eax],bl
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    BYTE PTR [edi],dh
  4130eb:	out    dx,eax
  4130ec:	and    ecx,edi
  4130ee:	jge    0x4130ef
  4130f0:	repnz pop eax
  4130f2:	xchg   esi,eax
  4130f3:	inc    esi
  4130f4:	xor    BYTE PTR [eax+0x1c],dl
  4130f7:	daa    
  4130f8:	push   esp
  4130f9:	inc    esi
  4130fa:	ret    
  4130fb:	xor    al,0x47
  4130fd:	addr16 xchg edi,eax
  4130ff:	sbb    BYTE PTR [ebp-0x1e9f3521],0xb3
  413106:	mov    eax,0x46f0ecf7
  41310b:	icebp  
  41310c:	int3   
  41310d:	jmp    FWORD PTR [edi+0xc]
  413110:	pop    edx
  413111:	(bad)  
  413113:	cmp    BYTE PTR [eax+0x661bd89b],dh
  413119:	lea    eax,[esp+ebx*1]
  41311c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41311d:	fidiv  DWORD PTR [ecx]
  41311f:	pop    ecx
  413120:	stos   BYTE PTR es:[edi],al
  413121:	out    0x2a,al
  413123:	inc    ecx
  413124:	lahf   
  413125:	out    0xd4,eax
  413127:	add    al,0x22
  413129:	inc    esi
  41312a:	mov    al,BYTE PTR [esi]
  41312c:	mov    eax,ds:0xf85dd92d
  413131:	retf   0xa84b
  413134:	add    BYTE PTR [edi-0x7c],bl
  413137:	xchg   edi,eax
  413138:	fdivp  st(7),st
  41313a:	adc    eax,0xe7e7c056
  41313f:	jle    0x413173
  413141:	push   ebp
  413142:	push   es
  413143:	mov    ebp,0x3904a261
  413148:	sbb    DWORD PTR [ecx-0x45e9a1e9],edi
  41314e:	sbb    eax,0x694df252
  413153:	inc    edx
  413154:	jnp    0x413105
  413156:	leave  
  413157:	dec    eax
  413158:	popf   
  413159:	icebp  
  41315a:	outs   dx,BYTE PTR ds:[esi]
  41315b:	sti    
  41315c:	jb     0x4130ff
  41315e:	jle    0x41317a
  413160:	mov    ch,0xe0
  413162:	jmp    0xed2e:0x974e9b23
  413169:	fld    DWORD PTR [ecx-0x26041e79]
  41316f:	data16 je 0x41312a
  413172:	outs   dx,BYTE PTR ds:[esi]
  413173:	sub    esp,0x628fbf98
  413179:	dec    eax
  41317a:	test   DWORD PTR [esi+ebx*2+0x6fb35aee],0xda8b6776
  413185:	shl    bl,cl
  413187:	mov    esp,ecx
  413189:	sub    DWORD PTR [eax-0x73705186],esi
  41318f:	add    eax,0x68ce8f29
  413194:	push   0x80c859be
  413199:	inc    edi
  41319a:	iret   
  41319b:	lds    eax,FWORD PTR [esi]
  41319d:	(bad)  [esi]
  41319f:	xor    cl,al
  4131a1:	push   cs
  4131a2:	loope  0x413132
  4131a4:	test   BYTE PTR [edi],al
  4131a6:	add    bh,BYTE PTR [edx]
  4131a8:	fs daa 
  4131aa:	lahf   
  4131ab:	pop    ebp
  4131ac:	ja     0x413221
  4131ae:	icebp  
  4131af:	mov    WORD PTR [esi+0x381b8a1b],es
  4131b5:	ret    
  4131b6:	cdq    
  4131b7:	jo     0x413177
  4131b9:	push   0xffffffe2
  4131bb:	stos   BYTE PTR es:[edi],al
  4131bc:	mov    esi,0x646deb9e
  4131c1:	sbb    eax,0xd2303dcc
  4131c6:	retf   
  4131c7:	loopne 0x413245
  4131c9:	into   
  4131ca:	(bad)  
  4131cb:	lds    ecx,FWORD PTR [eax+0x6c8ed32c]
  4131d1:	push   edx
  4131d2:	shl    BYTE PTR [ecx+0x647570be],cl
  4131d8:	xor    BYTE PTR [ecx-0x3dfdef13],ah
  4131de:	adc    cl,BYTE PTR [ebx+0x72]
  4131e1:	imul   ebx,DWORD PTR [esi+0x194a4fe6],0xb9dab25e
  4131eb:	pop    edx
  4131ec:	lods   al,BYTE PTR ds:[esi]
  4131ed:	not    eax
  4131ef:	mov    edi,ebx
  4131f1:	loop   0x41317a
  4131f3:	test   DWORD PTR [ebx],ebx
  4131f5:	hlt    
  4131f6:	sub    DWORD PTR [eax],edx
  4131f8:	pop    ecx
  4131f9:	mov    esi,fs
  4131fb:	mov    edx,0xb34414
  413200:	mov    esp,0xc08aa39e
  413205:	aam    0xc7
  413207:	dec    esp
  413208:	int3   
  413209:	mov    dh,0x99
  41320b:	outs   dx,DWORD PTR ds:[esi]
  41320c:	push   ecx
  41320d:	adc    esi,DWORD PTR [eax+0x5c]
  413210:	addr16 mov ds:0x49a,eax
  413214:	push   esp
  413215:	mov    dl,0x4a
  413217:	jno    0x41320b
  413219:	sti    
  41321a:	pop    edi
  41321b:	jecxz  0x4131c3
  41321d:	mov    edi,0x72425287
  413222:	scas   eax,DWORD PTR es:[edi]
  413223:	mov    edx,0xfa3b1086
  413228:	ins    BYTE PTR es:[edi],dx
  413229:	mov    cl,0xd
  41322b:	retf   0x21c8
  41322e:	xchg   esi,eax
  41322f:	cmp    DWORD PTR [esi-0x6e],ecx
  413232:	push   edx
  413233:	dec    edi
  413234:	cmp    cl,ah
  413236:	test   BYTE PTR [eax],bl
  413238:	add    eax,0xed811749
  41323d:	sub    al,0xbc
  41323f:	sbb    esi,ebx
  413241:	push   edi
  413242:	pop    eax
  413243:	rol    BYTE PTR [ebx*8-0x12d7e017],1
  41324a:	and    DWORD PTR [ecx+esi*1-0x7806483a],ebp
  413251:	leave  
  413252:	inc    ebp
  413253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413254:	jmp    0x4131f0
  413256:	enter  0xabe0,0x89
  41325a:	xlat   BYTE PTR ds:[ebx]
  41325b:	pop    ss
  41325c:	out    dx,al
  41325d:	enter  0x60d6,0xb0
  413261:	xor    edi,edi
  413263:	ret    0xa650
  413266:	adc    DWORD PTR [ecx],ebp
  413268:	inc    eax
  413269:	mov    al,0xcb
  41326b:	dec    edi
  41326c:	lock mov ebp,0x6338f74b
  413272:	inc    eax
  413273:	out    dx,eax
  413274:	xchg   edx,eax
  413275:	mov    edi,0xd47964c3
  41327a:	dec    edx
  41327b:	arpl   WORD PTR [edi-0x4a],ax
  41327e:	stc    
  41327f:	div    BYTE PTR [ebp+ebx*4-0x17]
  413283:	icebp  
  413284:	xchg   ebx,eax
  413285:	shr    DWORD PTR [edx-0x14],1
  413288:	cmp    al,BYTE PTR [edx-0x4a4a8184]
  41328e:	cmp    ebx,edx
  413290:	fisttp WORD PTR [edi-0x4e]
  413293:	inc    ecx
  413294:	xor    BYTE PTR [ebx],bl
  413296:	adc    ebp,DWORD PTR [esi+0x42]
  413299:	jnp    0x41323a
  41329b:	inc    esi
  41329c:	out    0x39,al
  41329e:	retf   
  41329f:	mov    dl,0xe6
  4132a1:	mov    cl,0xe8
  4132a3:	and    dh,0xe
  4132a6:	jmp    0x98f3:0xc6b81377
  4132ad:	je     0x413312
  4132af:	fwait
  4132b0:	test   al,0x4
  4132b2:	dec    esp
  4132b3:	jle    0x4132ca
  4132b5:	lock call 0x1f8:0x45942209
  4132bd:	aaa    
  4132be:	mov    edi,0xbc85cda3
  4132c3:	and    DWORD PTR [ebp-0x63],edx
  4132c6:	push   edi
  4132c7:	sbb    cl,BYTE PTR [ebx+ebx*4-0x3bd1701f]
  4132ce:	and    al,0xda
  4132d0:	pop    ebp
  4132d1:	sub    ecx,eax
  4132d3:	mov    gs,eax
  4132d5:	pop    edi
  4132d6:	lea    edx,[esp+edx*2-0x5b]
  4132da:	aad    0xc1
  4132dc:	inc    edx
  4132dd:	cld    
  4132de:	stc    
  4132df:	lds    edx,FWORD PTR [ebp-0x5c]
  4132e2:	add    ah,BYTE PTR [ebx+0x62eff28a]
  4132e8:	jbe    0x413312
  4132ea:	pop    eax
  4132eb:	daa    
  4132ec:	rcr    DWORD PTR [esi+edi*4],1
  4132ef:	shr    DWORD PTR [ebx+0x70],cl
  4132f2:	push   0xb61858e4
  4132f7:	jg     0x413365
  4132f9:	pop    ebx
  4132fa:	jg     0x4132c2
  4132fc:	(bad)  
  4132fe:	lods   al,BYTE PTR ds:[esi]
  4132ff:	jmp    0x41335f
  413301:	scas   eax,DWORD PTR es:[edi]
  413302:	(bad)  
  413303:	inc    DWORD PTR [ebx+0x4cd5a7b0]
  413309:	pushf  
  41330a:	in     eax,0xf8
  41330c:	daa    
  41330d:	pop    edi
  41330e:	xchg   bh,al
  413310:	sub    ch,BYTE PTR [ecx-0x73a04294]
  413316:	popf   
  413317:	mov    bh,0xda
  413319:	cmp    al,dh
  41331b:	in     al,0xa9
  41331d:	es ret 
  41331f:	ins    DWORD PTR es:[edi],dx
  413320:	cmp    al,0x51
  413322:	retf   
  413323:	inc    edx
  413324:	out    dx,al
  413325:	cmp    BYTE PTR [esi-0x4],ch
  413328:	imul   eax,DWORD PTR [edx+0x3a],0xdbd8f9cd
  41332f:	mov    esi,DWORD PTR ds:0xc0e0cb26
  413335:	scas   eax,DWORD PTR es:[edi]
  413336:	fist   WORD PTR [ebp+0x6e779b18]
  41333c:	push   ds
  41333d:	stc    
  41333e:	pop    esp
  41333f:	aam    0xa7
  413341:	sub    ch,BYTE PTR [eax]
  413343:	mov    dh,0x16
  413345:	xor    dl,BYTE PTR [edx-0x12]
  413348:	mov    eax,ds:0x5dc30e03
  41334d:	aad    0x1f
  41334f:	jg     0x4132e3
  413351:	arpl   WORD PTR [edi+edi*1],sp
  413354:	cmp    dh,BYTE PTR [eax-0x3]
  413357:	mov    esi,0x7424f88f
  41335c:	mov    WORD PTR [eax],ss
  41335e:	enter  0x6047,0x4a
  413362:	icebp  
  413363:	int    0x6b
  413365:	xor    edx,edx
  413367:	mov    edx,0x7ab8bf25
  41336c:	retf   0xcf6
  41336f:	mov    ebp,0xf55e95a
  413374:	xchg   di,ax
  413376:	shl    BYTE PTR [esi-0x4d],0xbc
  41337a:	cmp    al,0xe9
  41337c:	add    edx,DWORD PTR [edx-0x2c]
  41337f:	daa    
  413380:	retf   0x7a37
  413383:	(bad)  
  413385:	mov    dl,bh
  413387:	lods   al,BYTE PTR ds:[esi]
  413388:	jl     0x413356
  41338a:	imul   edi,DWORD PTR [edx-0x5b],0xffffffc4
  41338e:	sub    al,0x58
  413390:	xchg   BYTE PTR [ecx+0x5],al
  413393:	xchg   DWORD PTR [ebp+0x5e],edx
  413396:	gs xor al,0xf6
  413399:	pop    ecx
  41339a:	jo     0x4133c0
  41339c:	outs   dx,BYTE PTR ds:[esi]
  41339d:	mov    bl,0x30
  41339f:	mov    dl,dh
  4133a1:	adc    al,0xae
  4133a3:	mov    DWORD PTR [edi+0x5e],ebp
  4133a6:	(bad)  [ecx+ebp*2+0x33]
  4133aa:	jmp    0x75476d4f
  4133af:	test   ecx,edi
  4133b1:	retf   
  4133b2:	sub    ah,ah
  4133b4:	test   al,0x9e
  4133b6:	in     eax,dx
  4133b7:	push   0x38
  4133b9:	cli    
  4133ba:	scas   eax,DWORD PTR es:[edi]
  4133bb:	ins    DWORD PTR es:[edi],dx
  4133bc:	sbb    eax,0x257901c1
  4133c1:	xor    BYTE PTR [eax-0x5c],0xbb
  4133c5:	lock dec eax
  4133c7:	mov    esp,0x66588caf
  4133cc:	sti    
  4133cd:	push   ebx
  4133ce:	fimul  DWORD PTR [ecx+0x71c61b09]
  4133d4:	shl    eax,0xb5
  4133d7:	xchg   esp,eax
  4133d8:	mov    dl,dl
  4133da:	(bad)  
  4133dc:	out    dx,eax
  4133dd:	xor    BYTE PTR [ebp-0x24ef034d],al
  4133e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133e4:	push   es
  4133e5:	mov    bl,0x2c
  4133e7:	dec    ecx
  4133e8:	ins    DWORD PTR es:[edi],dx
  4133e9:	repz xor al,0xcd
  4133ec:	sub    BYTE PTR [edx+0x40],al
  4133ef:	cmp    ecx,DWORD PTR ds:0x176273ef
  4133f5:	jae    0x41341e
  4133f7:	cmc    
  4133f8:	jnp    0x41337a
  4133fa:	inc    esp
  4133fb:	and    eax,0xed4ad64d
  413400:	mul    BYTE PTR [ecx+0x56e3cfca]
  413406:	shr    BYTE PTR [edi],0x1f
  413409:	lock jnp 0x4133ae
  41340c:	dec    esi
  41340d:	daa    
  41340e:	icebp  
  41340f:	or     bl,0x6e
  413412:	and    al,0xc5
  413414:	inc    ecx
  413415:	xchg   eax,eax
  413417:	dec    ebx
  413418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413419:	xchg   BYTE PTR [edi+ecx*4],cl
  41341c:	jmp    0x41347f
  41341e:	jo     0x41341a
  413420:	jne    0x413433
  413422:	sar    ebx,cl
  413424:	dec    ebp
  413425:	sbb    edi,ecx
  413427:	and    DWORD PTR [ebx+0xd454382],0x4c
  41342e:	icebp  
  41342f:	not    DWORD PTR [esi+0x1]
  413432:	ds sahf 
  413434:	or     cl,BYTE PTR [edi+0x7232dbfa]
  41343a:	jle    0x4134b3
  41343c:	mov    dh,0xbf
  41343e:	mov    esi,0x94837f4c
  413443:	pop    ss
  413444:	xchg   edx,eax
  413445:	sub    edx,esi
  413447:	push   esp
  413448:	or     eax,0xb9970752
  41344d:	adc    ecx,DWORD PTR [edx-0xec8128b]
  413453:	ret    
  413454:	jo     0x4134cf
  413456:	test   esp,edi
  413458:	push   edi
  413459:	rol    esp,0xac
  41345c:	inc    esp
  41345d:	(bad)  
  41345e:	xor    BYTE PTR [ebp-0x66c5279],dh
  413464:	mov    ds:0x8ea739f1,eax
  413469:	fisttp WORD PTR [ebp-0x47969d74]
  41346f:	fistp  WORD PTR [ebp+0x40]
  413472:	into   
  413473:	jb     0x4134ba
  413475:	sub    al,0xed
  413477:	es sub al,0xcf
  41347a:	xor    al,0xec
  41347c:	mov    ah,0x5c
  41347e:	repnz mov edi,0x9dd535ea
  413484:	dec    ecx
  413485:	aaa    
  413486:	shl    DWORD PTR [eax+0x258a40a2],cl
  41348c:	scas   al,BYTE PTR es:[edi]
  41348d:	or     BYTE PTR [eax+esi*8],ah
  413490:	(bad)  
  413491:	(bad)  
  413493:	icebp  
  413494:	pop    ds
  413495:	loope  0x413454
  413497:	fcomi  st,st(5)
  413499:	test   BYTE PTR [edx+0x7fb7c70d],cl
  41349f:	in     al,0x7d
  4134a1:	scas   al,BYTE PTR es:[edi]
  4134a2:	pop    es
  4134a3:	mov    cl,0x6f
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x42206c
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx-0x4ff68f61]
  4134d4:	or     al,0x7e
  4134d6:	fs inc edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    bh,bh
  4134df:	and    ecx,0xded367f9
  4134e5:	fpatan 
  4134e7:	cmp    dl,BYTE PTR [ebx+0x337721d8]
  4134ed:	in     al,0x87
  4134ef:	or     BYTE PTR ds:0x3e6ec2e7,ah
  4134f5:	add    bh,BYTE PTR [ebp+esi*1+0x1ea6fd34]
  4134fc:	xchg   ebx,eax
  4134fd:	push   ebp
  4134fe:	dec    edi
  4134ff:	mov    ch,0xa2
  413501:	data16 adc al,0x30
  413504:	xor    ah,BYTE PTR [edi+0x55]
  413507:	add    BYTE PTR [ebp-0x67c7201c],al
  41350d:	xchg   esi,eax
  41350e:	cli    
  41350f:	outs   dx,BYTE PTR ds:[esi]
  413510:	shr    DWORD PTR [eax-0x54fe5f9],cl
  413516:	ins    BYTE PTR es:[edi],dx
  413517:	or     eax,DWORD PTR cs:[edi+edi*2]
  41351b:	out    0x55,eax
  41351d:	xor    eax,0xbb1baa13
  413522:	pop    ds
  413523:	push   esi
  413524:	pop    es
  413525:	iret   
  413526:	dec    edx
  413527:	int    0x2a
  413529:	xor    BYTE PTR [ebp-0x3b],al
  41352c:	and    ebp,esp
  41352e:	sbb    ah,BYTE PTR [eax+edi*1+0x2]
  413532:	pop    ebp
  413533:	cmp    eax,0x70e04ae9
  413538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413539:	cmp    al,0x78
  41353b:	or     al,0xc7
  41353d:	retf   
  41353e:	push   ss
  41353f:	inc    edi
  413540:	or     bl,BYTE PTR [edi+0x193c24a0]
  413546:	xlat   BYTE PTR ds:[ebx]
  413547:	or     eax,0x3baaefb
  41354c:	sbb    al,0xbe
  41354e:	or     eax,0x697e9835
  413553:	arpl   WORD PTR [eax],ax
  413555:	cmp    al,0xe4
  413557:	es retf 
  413559:	xor    bl,ch
  41355b:	jle    0x4134df
  41355d:	aaa    
  41355e:	pop    ebx
  41355f:	ins    BYTE PTR es:[edi],dx
  413560:	cmp    BYTE PTR [ebx],dh
  413562:	(bad)  
  413563:	ficomp WORD PTR [ebp+0x24936dc]
  413569:	xchg   ebp,eax
  41356a:	pop    ss
  41356b:	mov    ds:0xb0cac964,al
  413570:	data16 fmul QWORD PTR [edi+0x2c0f4ae2]
  413577:	sub    al,0x8e
  413579:	sbb    al,BYTE PTR [esi]
  41357b:	sub    eax,0xd5af61f5
  413580:	idiv   ecx
  413582:	push   edi
  413583:	push   0xffd52547
  413588:	cli    
  413589:	sub    BYTE PTR ds:0xdd8fc8ad,bl
  41358f:	fs es dec esi
  413592:	mov    dl,0x59
  413594:	mov    edx,0x42ccc8f5
  413599:	inc    ebx
  41359a:	mov    bh,0x83
  41359c:	sub    ecx,edx
  41359e:	dec    ah
  4135a0:	fcomp  DWORD PTR [edi+0x2762e57e]
  4135a6:	ror    eax,1
  4135a8:	das    
  4135a9:	cld    
  4135aa:	rol    BYTE PTR [edx+0x64b3b3bc],1
  4135b0:	inc    esp
  4135b1:	cmp    eax,0x2c9864e1
  4135b6:	fbld   TBYTE PTR [edi-0x7af37dc4]
  4135bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135bd:	mov    gs,WORD PTR [edi+0x5f080ec6]
  4135c3:	not    DWORD PTR [eax-0x66]
  4135c6:	add    BYTE PTR ds:0xa6007189,dh
  4135cc:	stos   DWORD PTR es:[edi],eax
  4135cd:	jmp    0x2f0351d6
  4135d2:	cmp    eax,DWORD PTR ds:0x263cbcff
  4135d8:	xchg   ebx,eax
  4135d9:	fisttp DWORD PTR [ebx]
  4135db:	bnd ret 
  4135dd:	out    0x97,eax
  4135df:	add    al,0xa7
  4135e1:	iret   
  4135e2:	xchg   edi,eax
  4135e3:	in     eax,0xed
  4135e5:	jns    0x4135f0
  4135e7:	std    
  4135e8:	or     esp,ebx
  4135ea:	mov    ecx,DWORD PTR [esi]
  4135ec:	mov    bl,0x57
  4135ee:	sti    
  4135ef:	fsubr  DWORD PTR [esi+0x45]
  4135f2:	xchg   ebx,eax
  4135f3:	push   ebx
  4135f4:	sub    BYTE PTR [ebx+0xb],ch
  4135f7:	adc    ch,BYTE PTR [edi*2-0x40df138f]
  4135fe:	mov    bl,0xe5
  413600:	or     DWORD PTR [eax],esp
  413602:	stos   BYTE PTR es:[edi],al
  413603:	test   DWORD PTR [eax],edi
  413605:	fstp   QWORD PTR [esi+0x5e]
  413608:	jb     0x413643
  41360a:	inc    ebx
  41360b:	add    eax,0x6b2bec38
  413610:	or     ecx,ebp
  413612:	xchg   esi,eax
  413613:	scas   eax,DWORD PTR es:[edi]
  413614:	(bad)  
  413615:	jb     0x41361c
  413617:	sub    ch,BYTE PTR [edi-0x1409bb73]
  41361d:	mov    esp,0xa81f9d73
  413622:	call   0xf2d6:0x59585959
  413629:	hlt    
  41362a:	push   ecx
  41362b:	(bad)  
  41362c:	scas   al,BYTE PTR es:[edi]
  41362d:	leave  
  41362e:	repnz sub esp,DWORD PTR [edi-0x55]
  413632:	or     ebx,DWORD PTR [edx+eiz*1]
  413635:	scas   eax,DWORD PTR es:[edi]
  413636:	js     0x4136a7
  413638:	std    
  413639:	mov    cl,0x4d
  41363b:	call   0xa45246f7
  413640:	xchg   ecx,eax
  413641:	call   0x3cea54b7
  413646:	add    DWORD PTR [edx+0x7a],ebp
  413649:	fisttp DWORD PTR [edx]
  41364b:	dec    ebp
  41364c:	out    0x86,al
  41364e:	aas    
  41364f:	jg     0x4135e7
  413651:	mov    bl,al
  413653:	xlat   BYTE PTR ds:[ebx]
  413654:	call   0x25afb93f
  413659:	dec    ebx
  41365a:	mov    al,ds:0x4036055c
  41365f:	mov    edi,0xf023ec99
  413664:	fbstp  TBYTE PTR [esi-0x37]
  413667:	jecxz  0x413671
  413669:	or     ah,BYTE PTR [edi]
  41366b:	sbb    cl,BYTE PTR [ecx]
  41366d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41366e:	mov    cl,0x7e
  413670:	jo     0x413611
  413672:	fwait
  413673:	sub    edi,esi
  413675:	sbb    BYTE PTR [esi-0x2d],0xcd
  413679:	loope  0x413654
  41367b:	mov    ah,0x83
  41367d:	sub    al,0x8c
  41367f:	gs repz fs mov esi,0xa0a0dae4
  413687:	pop    esi
  413688:	mov    bl,0x33
  41368a:	mov    DWORD PTR [ebp-0x2c4acb4f],edx
  413690:	or     al,0xa1
  413692:	pop    ebx
  413693:	pop    ebx
  413694:	test   BYTE PTR [eax+0x295a7de5],ch
  41369a:	hlt    
  41369b:	inc    eax
  41369c:	or     ch,ch
  41369e:	push   cs
  41369f:	jmp    0x413652
  4136a1:	(bad)  
  4136a2:	cld    
  4136a3:	js     0x4136a9
  4136a5:	stc    
  4136a6:	jp     0x413682
  4136a8:	scas   eax,DWORD PTR es:[edi]
  4136a9:	lods   al,BYTE PTR ds:[esi]
  4136aa:	jbe    0x4136bc
  4136ac:	push   ecx
  4136ad:	xchg   ebx,eax
  4136ae:	pushf  
  4136af:	data16 aaa 
  4136b1:	xchg   ecx,eax
  4136b2:	out    0xf4,al
  4136b4:	cmp    ebp,DWORD PTR [eax]
  4136b6:	cld    
  4136b7:	(bad)  
  4136b8:	gs nop
  4136ba:	jge    0x413671
  4136bc:	or     al,0x84
  4136be:	(bad)  
  4136bf:	bound  esp,QWORD PTR [edi+0x362c980d]
  4136c5:	cmc    
  4136c6:	retf   
  4136c7:	push   0xffffffaf
  4136c9:	inc    ecx
  4136ca:	mov    WORD PTR [ecx],ds
  4136cc:	add    cl,bh
  4136ce:	movaps xmm2,xmm5
  4136d1:	mov    dh,0x77
  4136d3:	adc    eax,0x15eab80d
  4136d8:	push   esp
  4136d9:	mov    dh,0xf5
  4136db:	test   DWORD PTR [edx-0x391cbbbb],edi
  4136e1:	(bad)
  4136e5:	push   esi
  4136e6:	dec    ebx
  4136e7:	adc    al,0xb4
  4136e9:	loop   0x41371b
  4136eb:	cmc    
  4136ec:	std    
  4136ed:	in     al,0xef
  4136ef:	in     eax,0x44
  4136f1:	inc    edi
  4136f2:	push   edx
  4136f3:	mov    WORD PTR [ecx+0x587ef73f],es
  4136f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136fa:	adc    dl,BYTE PTR [ecx-0x4522f38d]
  413700:	mov    WORD PTR [edi-0xf0678d3],ds
  413706:	cmc    
  413707:	test   ebp,edi
  413709:	aaa    
  41370a:	pop    ebx
  41370b:	fbld   TBYTE PTR ss:[eax+0x7395d538]
  413712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413713:	push   edi
  413714:	mov    ch,0xbe
  413716:	or     ebx,edi
  413718:	ins    DWORD PTR es:[edi],dx
  413719:	inc    esi
  41371a:	mov    cl,0xa4
  41371c:	js     0x4136bf
  41371e:	(bad)  
  413720:	cmp    eax,0xe05a9277
  413725:	push   edx
  413726:	arpl   WORD PTR [eax-0x216e8809],bx
  41372c:	pop    ds
  41372d:	mov    edi,0x92864ad9
  413732:	add    DWORD PTR [esp+ebp*1-0x55ebc3db],ecx
  413739:	or     al,BYTE PTR [edx]
  41373b:	ins    DWORD PTR es:[edi],dx
  41373c:	mov    ah,0x99
  41373e:	jl     0x4137b1
  413740:	ins    DWORD PTR es:[edi],dx
  413741:	mov    eax,ds:0x84ff3d61
  413746:	out    dx,al
  413747:	xchg   esi,eax
  413748:	and    al,0x65
  41374a:	dec    ebx
  41374b:	sbb    BYTE PTR [esi],bh
  41374d:	pop    ds
  41374e:	jbe    0x413783
  413750:	jno    0x4137b6
  413752:	rcl    DWORD PTR [edi+0x58b96098],1
  413758:	loop   0x41374a
  41375a:	push   DWORD PTR [eax]
  41375c:	arpl   cx,dx
  41375e:	adc    DWORD PTR [edx+0x4f],0x21
  413762:	aaa    
  413763:	fs push ds
  413765:	mov    ds:0x6d2bafb3,al
  41376a:	push   ds
  41376b:	out    0x34,eax
  41376d:	cmp    cl,BYTE PTR [edi-0x29]
  413770:	hlt    
  413771:	fiadd  WORD PTR [edx+0x1e9b85ac]
  413777:	inc    esi
  413778:	mov    edx,0xe7ffa50c
  41377d:	dec    edi
  41377e:	xor    al,0x73
  413780:	jne    0x41377d
  413782:	dec    ecx
  413783:	sti    
  413784:	into   
  413785:	and    al,0xe0
  413787:	inc    esp
  413788:	sahf   
  413789:	cmp    eax,0x1780a5f9
  41378e:	dec    edi
  41378f:	mov    DWORD PTR [eax+0x53],esp
  413792:	pop    ebx
  413793:	ds push esi
  413795:	xchg   esp,eax
  413796:	and    ebp,eax
  413798:	jb     0x4137f8
  41379a:	popa   
  41379b:	sbb    eax,0xc889026f
  4137a0:	sbb    al,0x8a
  4137a2:	mov    cl,0x3b
  4137a4:	daa    
  4137a5:	cld    
  4137a6:	inc    ecx
  4137a7:	shl    edi,cl
  4137a9:	push   eax
  4137aa:	cmp    al,dh
  4137ac:	sub    cl,ah
  4137ae:	int3   
  4137af:	in     eax,0x7c
  4137b1:	in     al,dx
  4137b2:	add    al,0xe2
  4137b4:	lea    ecx,fs:0x2cfe9be5
  4137bb:	inc    ecx
  4137bc:	hlt    
  4137bd:	stos   DWORD PTR es:[edi],eax
  4137be:	dec    ebx
  4137bf:	mov    ah,0x3f
  4137c1:	gs daa 
  4137c3:	pusha  
  4137c4:	popa   
  4137c5:	sti    
  4137c6:	div    DWORD PTR [esi-0x2604f947]
  4137cc:	test   al,0x7e
  4137ce:	jmp    0x413848
  4137d0:	ss loopne 0x4137d6
  4137d3:	sbb    BYTE PTR [edi+0x72],0x69
  4137d7:	ins    DWORD PTR es:[edi],dx
  4137d8:	mov    dh,0x50
  4137da:	loop   0x4137fb
  4137dc:	(bad)  
  4137dd:	add    BYTE PTR ds:[esi-0x4c646a52],dh
  4137e4:	icebp  
  4137e5:	xor    eax,DWORD PTR [esi+0x5e]
  4137e8:	inc    eax
  4137e9:	test   DWORD PTR [esi+0x2c],edx
  4137ec:	shr    BYTE PTR [ebx-0x7e],0xf
  4137f0:	mov    ds:0x5425f90,al
  4137f5:	and    ebp,DWORD PTR [ebp-0x3d454811]
  4137fb:	or     DWORD PTR [edi-0x19],edi
  4137fe:	mov    DWORD PTR [ebp+0x3fbc5f60],eax
  413804:	cwde   
  413805:	pop    ebx
  413806:	mov    ch,0x3e
  413808:	aad    0xc3
  41380a:	enter  0x55fe,0x61
  41380e:	adc    BYTE PTR [ecx-0x4a],ah
  413811:	add    ebp,eax
  413813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413815:	mov    eax,0xecbaac98
  41381a:	mov    esi,0x7098b684
  41381f:	adc    al,0xbd
  413821:	adc    bh,ch
  413823:	test   cl,ah
  413825:	mov    edi,0x63f77ac
  41382a:	xchg   ecx,eax
  41382b:	inc    ecx
  41382c:	jge    0x413801
  41382e:	adc    al,0xcd
  413830:	cmc    
  413831:	xor    al,0x7f
  413833:	add    DWORD PTR [edx],ebx
  413835:	mov    bh,0xa9
  413837:	stos   DWORD PTR es:[edi],eax
  413838:	dec    edi
  413839:	and    BYTE PTR [edi],0xbd
  41383c:	pop    ss
  41383d:	sar    BYTE PTR [edi+0x5f],0xe4
  413841:	pop    esi
  413842:	xor    eax,0x7a388201
  413847:	sbb    DWORD PTR [edi],eax
  413849:	push   ebx
  41384a:	loopne 0x4138b3
  41384c:	mov    ds:0xf4d4d402,eax
  413851:	xchg   DWORD PTR [edx],ebp
  413853:	mov    ebx,DWORD PTR [edi+0x4d]
  413856:	leave  
  413857:	(bad)  
  413858:	pop    ss
  413859:	ja     0x41384e
  41385b:	inc    edx
  41385c:	test   al,0x6f
  41385e:	pop    edx
  41385f:	pop    ebx
  413860:	sub    ebp,ecx
  413862:	(bad)  
  413863:	retf   
  413864:	sub    DWORD PTR [ebp-0x46e622a9],ebx
  41386a:	jle    0x41389d
  41386c:	xlat   BYTE PTR ds:[ebx]
  41386d:	cli    
  41386e:	jnp    0x4138c7
  413870:	punpckldq mm0,DWORD PTR [edx]
  413873:	nop
  413874:	mov    dh,0xe4
  413876:	sub    ecx,DWORD PTR [ebx]
  413878:	iret   
  413879:	xchg   edi,eax
  41387a:	bts    DWORD PTR [esp+edi*8+0x6e],esi
  41387f:	mov    bh,BYTE PTR [ebx+0x78e413ab]
  413885:	mov    dl,dl
  413887:	adc    esp,DWORD PTR [ecx+0x29f8519c]
  41388d:	mov    BYTE PTR [esi-0xd],bh
  413890:	fucomp st(6)
  413892:	and    al,0x8
  413894:	mov    eax,0x782f21c9
  413899:	mov    ebx,DWORD PTR [ebp-0x1c]
  41389c:	xor    ecx,0x1b8b
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx+0x64],ebp
  4138e5:	jnp    0x4138fd
  4138e7:	stos   BYTE PTR es:[edi],al
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    BYTE PTR [eax+0x502912d6],dl
  4138f5:	mov    edx,0x8c4ebf5e
  4138fa:	ret    
  4138fb:	iret   
  4138fc:	xchg   edi,eax
  4138fd:	pop    es
  4138fe:	inc    ebp
  4138ff:	fiadd  DWORD PTR [edx+0x60ce9bf1]
  413905:	fist   DWORD PTR [ebx-0x4df7c992]
  41390b:	sti    
  41390c:	cmc    
  41390d:	mov    bl,0x82
  41390f:	loop   0x41390c
  413911:	sbb    ebp,ebp
  413913:	mov    al,ds:0x6d386d7
  413918:	pushf  
  413919:	cs cmp eax,0xc448819c
  41391f:	or     ah,cl
  413921:	xchg   edi,eax
  413922:	jmp    0x384ccf51
  413927:	mov    al,ds:0xb46b6b11
  41392c:	and    bl,ah
  41392e:	dec    eax
  41392f:	adc    al,0xd8
  413931:	xor    esi,DWORD PTR [eax]
  413933:	stos   BYTE PTR es:[edi],al
  413934:	xchg   ebx,eax
  413935:	(bad)  
  413936:	retfw  
  413938:	std    
  413939:	xchg   edx,eax
  41393a:	push   ebp
  41393b:	sbb    BYTE PTR [ebx+0x1cec6a0],0xd
  413942:	mov    fs,WORD PTR [edi]
  413944:	cdq    
  413945:	outs   dx,BYTE PTR ds:[esi]
  413946:	popf   
  413947:	mov    eax,0xf7a0c3e3
  41394c:	outs   dx,DWORD PTR ds:[esi]
  41394d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41394e:	dec    edx
  41394f:	cli    
  413950:	into   
  413951:	retf   0xb8c8
  413954:	mov    esi,0x564c6e4b
  413959:	call   FWORD PTR [eax-0x11]
  41395c:	xchg   DWORD PTR [ecx],ebx
  41395e:	fdiv   DWORD PTR [esi]
  413960:	mov    ds,ebp
  413962:	je     0x4139be
  413964:	jle    0x413975
  413966:	in     al,dx
  413967:	mov    al,ds:0x504223a8
  41396c:	scas   al,BYTE PTR es:[edi]
  41396d:	push   edx
  41396e:	xor    BYTE PTR [ebx],0xff
  413971:	pusha  
  413972:	es pop eax
  413974:	inc    eax
  413975:	push   edx
  413976:	pop    ss
  413977:	mov    DWORD PTR es:[eax-0x563de903],edx
  41397e:	jns    0x41392a
  413980:	adc    dl,0x4a
  413983:	stc    
  413984:	pop    ebp
  413985:	cmp    al,0x1e
  413987:	or     BYTE PTR [eax],bl
  413989:	(bad)  
  41398a:	(bad)  
  41398c:	pusha  
  41398d:	aad    0xb6
  41398f:	lock or eax,DWORD PTR [ebp+0x4143e215]
  413996:	jp     0x4139e6
  413998:	mov    bh,0x8e
  41399a:	scas   eax,DWORD PTR es:[edi]
  41399b:	mov    eax,0x3178fa68
  4139a0:	adc    eax,0x64c6d12c
  4139a5:	bound  ebx,QWORD PTR ds:0x32217b1
  4139ab:	and    BYTE PTR gs:[eiz*8-0x133960ef],0x80
  4139b4:	push   esi
  4139b5:	pop    ss
  4139b6:	xchg   ebx,eax
  4139b7:	arpl   WORD PTR [ecx+0x34e7189c],ax
  4139bd:	mov    esp,0xa10ca5b2
  4139c2:	pop    ss
  4139c3:	pop    esp
  4139c4:	push   cs
  4139c5:	imul   esp,ebx,0x40d5728a
  4139cb:	call   0x1c7d3a84
  4139d0:	inc    eax
  4139d1:	scas   al,BYTE PTR es:[edi]
  4139d2:	out    0x58,eax
  4139d4:	push   ds
  4139d5:	cmc    
  4139d6:	std    
  4139d7:	xchg   ecx,eax
  4139d8:	and    dl,BYTE PTR [eax-0x11]
  4139db:	jae    0x4139d4
  4139dd:	pop    ss
  4139de:	pop    edi
  4139df:	aam    0xd7
  4139e1:	jmp    0x4139b8
  4139e3:	cmp    al,0x9b
  4139e5:	add    DWORD PTR [ecx-0x2ad3c3a8],edi
  4139eb:	xchg   BYTE PTR [edi-0x6a36c16b],dh
  4139f1:	pop    ds
  4139f2:	outs   dx,DWORD PTR ds:[esi]
  4139f3:	mov    eax,0xc04bd3b9
  4139f8:	arpl   WORD PTR [esi],ax
  4139fa:	xchg   esi,eax
  4139fb:	call   0xd798bfd
  413a00:	sub    DWORD PTR [eax+0x27],0x67
  413a04:	xor    al,0x9
  413a06:	js     0x413991
  413a08:	inc    eax
  413a09:	sub    BYTE PTR [edx],dl
  413a0b:	mov    dh,0x9c
  413a0d:	shl    BYTE PTR [eax+eax*8-0x1b],1
  413a11:	cmp    eax,0x835b46e8
  413a16:	push   ebp
  413a17:	pop    esp
  413a18:	push   edi
  413a19:	push   ebx
  413a1a:	int    0x51
  413a1c:	cmp    al,0xa6
  413a1e:	icebp  
  413a1f:	adc    eax,0x73c4094d
  413a24:	aaa    
  413a25:	xor    al,0x1c
  413a27:	pop    eax
  413a28:	cmp    BYTE PTR [ebp-0x23],0x99
  413a2c:	or     ebp,DWORD PTR [edx+0x65]
  413a2f:	jmp    0x3c99bd57
  413a34:	icebp  
  413a35:	js     0x413a3f
  413a37:	inc    ebp
  413a38:	imul   esp,esi,0xb042baf1
  413a3e:	inc    ecx
  413a3f:	int    0x70
  413a41:	jge    0x4139e8
  413a43:	hlt    
  413a44:	rcl    edi,cl
  413a46:	stc    
  413a47:	push   ebx
  413a48:	push   esp
  413a49:	add    DWORD PTR [edx-0x38],edx
  413a4c:	cmp    DWORD PTR [ebx-0x2a],esi
  413a4f:	out    dx,al
  413a50:	cs leave 
  413a52:	lock mov BYTE PTR [edx+0x75],dl
  413a56:	sahf   
  413a57:	(bad)  
  413a58:	mov    esi,0x167f3a03
  413a5d:	pop    es
  413a5e:	popa   
  413a5f:	adc    BYTE PTR [edx],dl
  413a61:	int    0x49
  413a63:	sbb    dh,dl
  413a65:	pop    ebx
  413a66:	out    0x11,eax
  413a68:	mov    esp,0x3dbf8146
  413a6d:	sbb    ebx,DWORD PTR [eax]
  413a6f:	cmp    ecx,esp
  413a71:	fstp   st(0)
  413a73:	in     al,0x96
  413a75:	ror    ah,0x19
  413a78:	push   ebx
  413a79:	and    DWORD PTR [ebx+0x1257a99e],esi
  413a7f:	mov    ecx,0x70f007ca
  413a84:	lea    edx,[si-0x57a8]
  413a89:	lods   al,BYTE PTR ds:[esi]
  413a8a:	jae    0x413a3c
  413a8c:	push   es
  413a8d:	push   esi
  413a8e:	rcr    BYTE PTR [ecx-0x78],cl
  413a91:	enter  0x6dfa,0x42
  413a95:	es ss call 0xe34:0x574b52d6
  413a9e:	jle    0x413b16
  413aa0:	retf   
  413aa1:	or     esp,edi
  413aa3:	stc    
  413aa4:	cmp    ebx,DWORD PTR [edi]
  413aa6:	cs call 0x52677c17
  413aac:	mov    bh,0xed
  413aae:	shr    BYTE PTR [edx+0x68181225],1
  413ab4:	jbe    0x413b11
  413ab6:	mov    bl,0x59
  413ab8:	push   ecx
  413ab9:	adc    al,0x36
  413abb:	outs   dx,BYTE PTR ds:[esi]
  413abc:	xchg   esi,eax
  413abd:	push   esi
  413abe:	xchg   ebp,eax
  413abf:	xor    eax,0x2518e02b
  413ac4:	or     DWORD PTR [edi+0x2f08f3e4],ebp
  413aca:	sbb    esi,DWORD PTR [edx+0x54a0dd7]
  413ad0:	xchg   esi,eax
  413ad1:	shl    BYTE PTR [ecx+edi*2+0x3e],1
  413ad5:	fs test eax,0x74737e9
  413adb:	or     bh,BYTE PTR [ebp+0x2464489]
  413ae1:	sub    al,0x48
  413ae3:	gs nop
  413ae5:	pop    edi
  413ae6:	add    BYTE PTR [edi+eiz*2+0x1def8b98],ch
  413aed:	cmc    
  413aee:	cmp    cl,BYTE PTR [eax]
  413af0:	arpl   WORD PTR ds:0xfdc1d0f4,ax
  413af6:	push   es
  413af7:	lds    edi,FWORD PTR [ecx]
  413af9:	stos   DWORD PTR es:[edi],eax
  413afa:	(bad)  
  413afb:	fcomi  st,st(0)
  413afd:	pop    ds
  413afe:	and    BYTE PTR [eax+esi*8-0x7e],0x73
  413b03:	jb     0x413af7
  413b05:	aad    0xc8
  413b07:	pop    esi
  413b08:	fisttp DWORD PTR [esi-0x47]
  413b0b:	repnz or dl,ah
  413b0e:	ror    BYTE PTR [ebp+0x36],0x97
  413b12:	xor    BYTE PTR [esi],ch
  413b14:	jp     0x413aa5
  413b16:	sub    DWORD PTR [ecx+0x4ffcfd37],0xffffffcc
  413b1d:	mov    dh,0x3f
  413b1f:	jb     0x413b32
  413b21:	xchg   esi,eax
  413b22:	dec    ebx
  413b23:	pop    esp
  413b24:	jge    0x413b1b
  413b26:	push   cs
  413b27:	push   ecx
  413b28:	xchg   edx,eax
  413b29:	jnp    0x413b28
  413b2b:	dec    esi
  413b2c:	mov    dl,0xf6
  413b2e:	dec    ecx
  413b2f:	ret    0x1253
  413b32:	ins    DWORD PTR es:[edi],dx
  413b33:	xchg   esp,eax
  413b34:	or     BYTE PTR [edi-0x17b62ead],0x97
  413b3b:	scas   eax,DWORD PTR es:[edi]
  413b3c:	inc    edi
  413b3d:	xor    eax,0x950f8c50
  413b42:	lds    ebp,FWORD PTR [ebp-0x1d9dbb9f]
  413b48:	inc    ebx
  413b49:	loop   0x413b5e
  413b4b:	mov    bl,al
  413b4d:	xor    dh,BYTE PTR [edi]
  413b4f:	mov    ss,edx
  413b51:	ret    
  413b52:	adc    BYTE PTR [edx],al
  413b54:	retf   
  413b55:	fisubr WORD PTR [esi+0x70]
  413b58:	add    esp,DWORD PTR [ebp+0x1818da76]
  413b5e:	inc    edi
  413b5f:	and    eax,0x948c219f
  413b64:	xchg   ebp,eax
  413b65:	rep outs dx,DWORD PTR ds:[esi]
  413b67:	leave  
  413b68:	lea    ebp,[esi+0x62ed2c87]
  413b6e:	daa    
  413b6f:	clc    
  413b70:	mov    ecx,0x238d6eed
  413b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b76:	mov    DWORD PTR [esi],edi
  413b78:	lds    edx,FWORD PTR [edi+eax*8+0x69]
  413b7c:	stos   DWORD PTR es:[edi],eax
  413b7d:	xchg   ecx,eax
  413b7e:	push   eax
  413b7f:	pop    edi
  413b80:	mov    WORD PTR [ebx-0x12],fs
  413b83:	outs   dx,DWORD PTR ds:[esi]
  413b84:	xor    eax,0x32c394b1
  413b89:	and    esi,DWORD PTR [edi]
  413b8b:	and    DWORD PTR [ebx+0x783442a2],eax
  413b91:	test   al,0xab
  413b93:	mov    bh,0xb1
  413b95:	(bad)  
  413b96:	mov    ecx,0xcbd213a4
  413b9b:	sysret 
  413b9d:	push   ss
  413b9e:	push   0x1563b171
  413ba3:	xchg   BYTE PTR [ecx-0x4a53ee1a],ah
  413ba9:	stos   BYTE PTR es:[edi],al
  413baa:	icebp  
  413bab:	inc    esi
  413bac:	sbb    BYTE PTR [edi-0x78],dh
  413baf:	dec    eax
  413bb0:	sti    
  413bb1:	mov    bl,0x43
  413bb3:	and    BYTE PTR [edx+0x1219f2d],bh
  413bb9:	and    eax,0x56ba925f
  413bbe:	test   eax,0x9b6f79f2
  413bc3:	dec    edx
  413bc4:	cli    
  413bc5:	push   ecx
  413bc6:	mov    ebp,0xc8398773
  413bcb:	jnp    0x413b56
  413bcd:	jle    0x413c36
  413bcf:	les    ebp,FWORD PTR [ebx]
  413bd1:	xor    cl,bl
  413bd3:	test   DWORD PTR [edx-0x10],eax
  413bd6:	cwde   
  413bd7:	test   eax,0x893933f9
  413bdc:	je     0x413bfa
  413bde:	push   ebx
  413bdf:	inc    ebx
  413be0:	test   al,0x53
  413be2:	adc    ch,cl
  413be4:	mov    ebx,esi
  413be6:	icebp  
  413be7:	je     0x413b6f
  413be9:	test   BYTE PTR [eax-0x2c],0xe2
  413bed:	or     eax,DWORD PTR [eax]
  413bef:	xor    esp,DWORD PTR [esi+eiz*8-0x19]
  413bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  413bf6:	lea    ebp,[ebp+0x2]
  413bf9:	or     BYTE PTR [ebx-0x18],al
  413bfc:	into   
  413bfd:	(bad)  
  413bff:	imul   ecx,DWORD PTR ds:0xc920d8f1,0xffffffb0
  413c06:	ins    BYTE PTR es:[edi],dx
  413c07:	call   0xbcf12ebe
  413c0c:	cmp    BYTE PTR [edx+0x4a],bh
  413c0f:	or     eax,0x14c82a58
  413c14:	push   edx
  413c15:	fidiv  WORD PTR [ebx+0x6e881702]
  413c1b:	ss int 0x17
  413c1e:	add    BYTE PTR [edi+0x4],ah
  413c21:	(bad)  
  413c22:	mov    cl,bl
  413c24:	pop    ecx
  413c25:	cmp    DWORD PTR ds:0x2c899f6a,0x66566c1f
  413c2f:	popa   
  413c30:	mov    al,ds:0x7dd2dd8c
  413c35:	ret    
  413c36:	sbb    dl,al
  413c38:	test   al,0xce
  413c3a:	in     al,dx
  413c3b:	mov    esp,0x7116bccc
  413c40:	mov    bl,0xfa
  413c42:	mov    dh,0xef
  413c44:	ror    BYTE PTR [ebx-0x1e],cl
  413c47:	clc    
  413c48:	mov    ch,0x1b
  413c4a:	fwait
  413c4b:	jb     0x413c51
  413c4d:	xor    DWORD PTR [eax+0x5e],ebx
  413c50:	push   0x5c
  413c52:	push   ds
  413c53:	mov    ah,0x51
  413c55:	sub    al,0xaa
  413c57:	jae    0x413c84
  413c59:	jp     0x413c6d
  413c5b:	mov    WORD PTR [eax-0xf06bbc2],gs
  413c61:	inc    ecx
  413c62:	addr16 jne 0x413c3b
  413c65:	push   0xd56984e
  413c6a:	add    eax,0xcb0df0ef
  413c6f:	fld    TBYTE PTR [eax]
  413c71:	(bad)  
  413c72:	std    
  413c73:	jbe    0x413ca2
  413c75:	mov    edx,ebx
  413c77:	shr    DWORD PTR [ebx-0x41],cl
  413c7a:	mov    ebx,0x142da1c1
  413c7f:	imul   ebx,DWORD PTR [edx],0x40
  413c82:	(bad)  
  413c83:	fdiv   DWORD PTR es:[ecx+0x23961b2e]
  413c8a:	push   es
  413c8b:	dec    eax
  413c8c:	mov    al,0xe7
  413c8e:	retf   0xf8f7
  413c91:	xchg   esi,eax
  413c92:	aad    0xf
  413c94:	cdq    
  413c95:	ficom  DWORD PTR [esi]
  413c97:	dec    esp
  413c98:	pop    edx
  413c99:	xlat   BYTE PTR ds:[ebx]
  413c9a:	push   esi
  413c9b:	pop    eax
  413c9c:	xor    bl,bl
  413c9e:	out    dx,al
  413c9f:	mov    dl,0xce
  413ca1:	adc    esp,DWORD PTR [edi-0x62]
  413ca4:	cmc    
  413ca5:	mov    dh,0x1f
  413ca7:	add    al,0x75
  413ca9:	pop    edi
  413caa:	daa    
  413cab:	add    edx,DWORD PTR [eax]
  413cad:	mov    ecx,DWORD PTR [ebp-0x28]
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	ja     0x413d49
  413d00:	lea    esi,[eax-0x77]
  413d03:	xor    bl,BYTE PTR [eax]
  413d05:	sbb    BYTE PTR [edx+0x46181812],ch
  413d0b:	fld    TBYTE PTR [esi]
  413d0e:	jb     0x413cad
  413d10:	fs sub al,0xbc
  413d13:	and    ch,BYTE PTR [ebp-0x66]
  413d16:	daa    
  413d17:	les    esp,FWORD PTR [ebp-0x2440e859]
  413d1d:	stc    
  413d1e:	(bad)  
  413d20:	mov    DWORD PTR [edi],eax
  413d22:	pop    ebx
  413d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d24:	jae    0x413d30
  413d26:	adc    BYTE PTR [edx-0x224e90e9],dl
  413d2c:	call   0x7c25:0x820c8b37
  413d33:	add    al,0x6f
  413d35:	and    BYTE PTR [edi+0x6a],0x3
  413d39:	shr    BYTE PTR [ecx-0x1f],0x11
  413d3d:	imul   ebx,esp,0x53
  413d40:	dec    esi
  413d41:	mov    dl,0x1e
  413d43:	mov    edi,0x355de727
  413d48:	push   ds
  413d49:	adc    esi,ecx
  413d4b:	aad    0x30
  413d4d:	cmp    DWORD PTR [edx],esp
  413d4f:	push   esi
  413d50:	push   edx
  413d51:	jnp    0x413d20
  413d53:	cwde   
  413d54:	xor    dh,bh
  413d56:	add    edi,ebx
  413d58:	sub    DWORD PTR [eax],ecx
  413d5a:	mov    esi,0x346414f6
  413d5f:	out    dx,eax
  413d60:	in     eax,dx
  413d61:	fst    QWORD PTR [eax+0x14]
  413d64:	psubb  mm2,QWORD PTR [esi]
  413d67:	add    esp,esp
  413d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d6a:	pop    es
  413d6b:	(bad)  
  413d6c:	stos   BYTE PTR es:[edi],al
  413d6d:	loop   0x413d00
  413d6f:	xchg   ecx,eax
  413d70:	adc    al,0xc2
  413d72:	dec    esp
  413d73:	sar    DWORD PTR [ecx+0x2d],1
  413d76:	mov    BYTE PTR [eax-0x52],dh
  413d79:	sub    BYTE PTR [ebx],bh
  413d7b:	inc    ecx
  413d7c:	push   ds
  413d7d:	inc    esi
  413d7e:	jle    0x413d6f
  413d80:	stos   BYTE PTR es:[edi],al
  413d81:	inc    esp
  413d82:	scas   al,BYTE PTR es:[edi]
  413d83:	mov    ds:0x6d6fc2f8,al
  413d88:	jbe    0x413d9d
  413d8a:	inc    ebp
  413d8b:	(bad)  
  413d8c:	imul   edx,esi,0xffffffdb
  413d8f:	mov    al,0x81
  413d91:	or     esp,DWORD PTR [edi]
  413d93:	jmp    0x413db5
  413d95:	xor    ebp,DWORD PTR [eax+0x60]
  413d98:	sub    bh,BYTE PTR [ebp-0x61cc4af2]
  413d9e:	retf   
  413d9f:	pop    ebp
  413da0:	jl     0x413d60
  413da2:	push   es
  413da3:	jnp    0x413d81
  413da5:	int3   
  413da6:	lahf   
  413da7:	or     al,0x41
  413da9:	adc    BYTE PTR [ecx-0x7e],ah
  413dac:	stos   DWORD PTR es:[edi],eax
  413dad:	ss xor eax,0xea48009f
  413db3:	jmp    0x32b3:0xfb7b
  413db9:	dec    ebx
  413dba:	int    0x8c
  413dbc:	das    
  413dbd:	push   esi
  413dbe:	mov    dl,0x8b
  413dc0:	fimul  WORD PTR [esi]
  413dc2:	gs xchg edx,eax
  413dc4:	pop    esp
  413dc5:	cmp    al,0xf8
  413dc7:	adc    dh,bh
  413dc9:	aaa    
  413dca:	stos   BYTE PTR es:[edi],al
  413dcb:	ins    BYTE PTR es:[edi],dx
  413dcc:	(bad)
  413dcf:	mov    DWORD PTR [eax+0x5b],ebp
  413dd2:	test   al,0x61
  413dd4:	leave  
  413dd5:	mov    esi,0x26081483
  413dda:	mov    ebp,0x80c7c105
  413ddf:	jo     0x413e18
  413de1:	out    dx,eax
  413de2:	push   cs
  413de3:	mov    esp,0xd3cfa57a
  413de8:	rcr    BYTE PTR [eax-0x3ef66e6e],cl
  413dee:	or     eax,0xbe4ac612
  413df3:	inc    esi
  413df4:	mov    esi,DWORD PTR [edi-0x17a72346]
  413dfa:	add    eax,0x95eff53d
  413dff:	xchg   ebx,eax
  413e00:	sub    cl,0x21
  413e03:	sub    dh,BYTE PTR [edx]
  413e05:	xor    al,BYTE PTR [ecx+esi*8]
  413e08:	and    al,BYTE PTR [bx-0x35]
  413e0c:	lock pusha 
  413e0e:	sbb    BYTE PTR [eax],dl
  413e10:	ret    
  413e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e12:	mov    eax,ds:0x8509ee70
  413e17:	rcr    BYTE PTR [edi+0x1a],1
  413e1a:	fadd   QWORD PTR [edx]
  413e1c:	jmp    0x413db2
  413e1e:	cld    
  413e1f:	iret   
  413e20:	into   
  413e21:	xchg   edx,eax
  413e22:	mov    cl,0xd4
  413e24:	sti    
  413e25:	dec    ebp
  413e26:	sbb    eax,0x6e919b27
  413e2b:	dec    edx
  413e2c:	fstp   DWORD PTR ds:0x182a4322
  413e32:	push   esp
  413e33:	sbb    ecx,DWORD PTR [esi+0x7ccb375f]
  413e39:	adc    edi,DWORD PTR [ebx+0x63e765e2]
  413e3f:	pop    ss
  413e40:	fidivr DWORD PTR [ecx]
  413e42:	fimul  DWORD PTR [ecx-0x5997b9bf]
  413e48:	aaa    
  413e49:	jg     0x413e0f
  413e4b:	add    ecx,DWORD PTR [eax]
  413e4d:	ror    BYTE PTR [esi-0x5e6cdac],cl
  413e53:	pusha  
  413e54:	dec    edx
  413e55:	mov    eax,0xa2e28fca
  413e5a:	in     eax,dx
  413e5b:	cld    
  413e5c:	jl     0x413ea8
  413e5e:	xlat   BYTE PTR ds:[ebx]
  413e5f:	gs loop 0x413ea7
  413e62:	mov    ds:0xf91230ee,al
  413e67:	mov    ebp,0xb3ecd20f
  413e6c:	mov    ecx,0x86dbcd99
  413e71:	bound  eax,QWORD PTR [esi+edx*1-0x59]
  413e75:	stos   DWORD PTR es:[edi],eax
  413e76:	lock ja 0x413e85
  413e79:	or     BYTE PTR [edi],0xc0
  413e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7d:	js     0x413e98
  413e7f:	push   0x44f197d
  413e84:	imul   DWORD PTR [edx]
  413e86:	arpl   WORD PTR [ebx+eiz*1-0x48bb856d],bx
  413e8d:	test   al,0xaf
  413e8f:	inc    eax
  413e90:	ret    0xe12c
  413e93:	enter  0x7f8,0x5d
  413e97:	jmp    0xf0c0:0x633b9b1c
  413e9e:	xor    eax,0xa758d28a
  413ea3:	test   al,0xe3
  413ea5:	sti    
  413ea6:	dec    edi
  413ea7:	stos   DWORD PTR es:[edi],eax
  413ea8:	(bad)  
  413eaa:	fnstsw WORD PTR [ebp+0x540a0fb7]
  413eb0:	sub    ch,al
  413eb2:	shr    BYTE PTR [edi+0x72],0x48
  413eb6:	push   esp
  413eb7:	mov    ch,0xb
  413eb9:	fiadd  WORD PTR [edx-0x52]
  413ebc:	sub    BYTE PTR [ecx],bl
  413ebe:	fcomp  DWORD PTR [ebx]
  413ec0:	push   es
  413ec1:	addr16 adc al,0x75
  413ec4:	mov    esp,0x364e40bd
  413ec9:	lods   al,BYTE PTR ds:[esi]
  413eca:	jmp    eax
  413ecc:	push   0x15
  413ece:	inc    ecx
  413ecf:	jnp    0x413f06
  413ed1:	mov    dh,0xac
  413ed3:	jp     0x413f19
  413ed5:	lods   eax,DWORD PTR ds:[esi]
  413ed6:	loope  0x413eaa
  413ed8:	pop    esp
  413ed9:	ret    0x5206
  413edc:	xchg   DWORD PTR [esi+0x3659541],esp
  413ee2:	imul   ebp,DWORD PTR [eax-0x650a803b],0x8
  413ee9:	iret   
  413eea:	ja     0x413ea3
  413eec:	sbb    BYTE PTR [edx+edx*1],ah
  413eef:	ja     0x413ebc
  413ef1:	add    al,0x9
  413ef3:	(bad)  
  413ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ef5:	lahf   
  413ef6:	add    al,0x8a
  413ef8:	pop    ds
  413ef9:	adc    eax,0x9faff3c7
  413efe:	aaa    
  413eff:	jno    0x413f44
  413f01:	and    dl,dh
  413f03:	dec    bl
  413f05:	add    dh,BYTE PTR [edx-0x15]
  413f08:	mov    DWORD PTR [ecx],edi
  413f0a:	or     al,0x9e
  413f0c:	push   ebx
  413f0d:	imul   DWORD PTR [edx-0x488f67dc]
  413f13:	rol    BYTE PTR [ebx+0x56],cl
  413f16:	in     eax,0x69
  413f18:	mov    dl,BYTE PTR gs:[ecx-0x14831788]
  413f1f:	push   0xffffffdd
  413f21:	mov    ebp,0x538f2ab0
  413f26:	jo     0x413eb0
  413f28:	jns    0x413f6e
  413f2a:	add    edi,DWORD PTR [edx-0x2a]
  413f2d:	(bad)  
  413f2f:	mov    DWORD PTR [esi+0xe1d7771],esi
  413f35:	das    
  413f36:	shl    bl,0x40
  413f39:	je     0x413fb8
  413f3b:	jo     0x413ec4
  413f3d:	js     0x413f1e
  413f3f:	dec    ecx
  413f40:	(bad)  
  413f41:	rcl    BYTE PTR [eax+ecx*8],0x41
  413f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f46:	loope  0x413eed
  413f48:	dec    edx
  413f49:	js     0x413f02
  413f4b:	leave  
  413f4c:	dec    ebp
  413f4d:	xchg   edx,eax
  413f4e:	lds    edi,FWORD PTR [edx+0x7c76d857]
  413f54:	pushf  
  413f55:	jae    0x413f1f
  413f57:	push   edi
  413f58:	dec    esi
  413f59:	cmp    al,0xcb
  413f5b:	or     ebx,DWORD PTR [edi-0x51b0cc9c]
  413f61:	add    eax,0x5568050a
  413f66:	imul   ebx
  413f68:	jo     0x413f6e
  413f6a:	loopne 0x413f86
  413f6c:	dec    esp
  413f6e:	adc    BYTE PTR [edx],bh
  413f70:	dec    ebp
  413f71:	rdpmc  
  413f73:	jmp    0x594c61a4
  413f78:	pop    ds
  413f79:	push   esp
  413f7a:	or     DWORD PTR [ebp+0x2d931923],eax
  413f80:	cmp    BYTE PTR [esi+0x5e],dl
  413f83:	push   0xffffffba
  413f85:	frstor [ecx]
  413f87:	out    0x2b,eax
  413f89:	ins    DWORD PTR es:[edi],dx
  413f8a:	test   eax,0x135e1eb4
  413f8f:	dec    eax
  413f90:	fbstp  TBYTE PTR [ebx]
  413f92:	nop
  413f93:	pop    ebp
  413f94:	fisttp DWORD PTR [edx-0x2d0e2a2]
  413f9a:	aam    0x24
  413f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f9d:	cwde   
  413f9e:	adc    dl,bh
  413fa0:	mov    edi,0x28b947b7
  413fa5:	jp     0x413f5a
  413fa7:	jg     0x413f9a
  413fa9:	(bad)  
  413faa:	(bad)  
  413fac:	add    BYTE PTR [edx+0x17a50821],ch
  413fb2:	xor    al,0x1a
  413fb4:	and    BYTE PTR [edx-0x4d],0x3e
  413fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb9:	cmp    eax,DWORD PTR [eax+0x6f]
  413fbc:	out    0xa0,al
  413fbe:	add    dh,0x71
  413fc1:	cs push 0x3a
  413fc4:	push   0x9e095e9
  413fc9:	int3   
  413fca:	das    
  413fcb:	xchg   ecx,eax
  413fcc:	test   al,0xe7
  413fce:	shr    BYTE PTR [esi+0x67],0xb8
  413fd2:	add    al,al
  413fd4:	inc    ebp
  413fd5:	lea    eax,[edi]
  413fd7:	in     al,0x95
  413fd9:	mov    fs,edx
  413fdb:	mov    ch,0xae
  413fdd:	in     eax,0xdd
  413fdf:	add    edx,ebp
  413fe1:	mov    cs,WORD PTR [ebp-0x51]
  413fe4:	ret    0xd7b0
  413fe7:	mov    eax,ds:0x48d1087b
  413fec:	dec    ecx
  413fed:	inc    esp
  413fee:	pop    DWORD PTR es:[ecx-0x1ae40ed9]
  413ff5:	repz rcr BYTE PTR [edi-0x34],0x21
  413ffa:	xor    BYTE PTR [eax+ecx*1-0x6a],dl
  413ffe:	mov    edx,0xc057b587
  414003:	and    BYTE PTR [ecx],bh
  414005:	repnz push edi
  414007:	addr16 inc ebp
  414009:	fbstp  TBYTE PTR ds:0x99f3f1bf
  41400f:	outs   dx,BYTE PTR ds:[esi]
  414010:	rol    DWORD PTR [ecx+0x55a9118a],1
  414016:	repnz or DWORD PTR [esi+edx*1],esi
  41401a:	dec    edi
  41401b:	push   ss
  41401c:	xor    edx,DWORD PTR [eax-0x138f68]
  414022:	gs into 
  414024:	out    dx,eax
  414025:	push   eax
  414026:	in     eax,0x1b
  414028:	cli    
  414029:	xchg   ebp,eax
  41402a:	sub    BYTE PTR [edi+ebx*4+0x73],ch
  41402e:	adc    eax,0xb56df38
  414033:	fld    TBYTE PTR [ecx]
  414035:	out    0xee,eax
  414037:	adc    eax,0xec7776b8
  41403c:	mov    WORD PTR [esi+0x57577fd5],es
  414042:	dec    ebx
  414043:	mov    cl,0xd6
  414045:	jmp    0x414077
  414047:	repnz fst st(4)
  41404a:	loop   0x414071
  41404c:	or     DWORD PTR [esi+0x4],ecx
  41404f:	mov    al,0x97
  414051:	pop    edi
  414052:	clc    
  414053:	push   cs
  414054:	sbb    dl,al
  414056:	mov    bl,0xbd
  414058:	or     eax,0x5848870
  41405d:	xchg   BYTE PTR [ebx],bh
  41405f:	sbb    BYTE PTR [edx-0x7f42008a],0xa6
  414066:	and    eax,0xbc1fc104
  41406b:	out    0x31,eax
  41406d:	aad    0x8d
  41406f:	jmp    0x5c7a7fc1
  414074:	bound  ecx,QWORD PTR [ecx+0x19e349df]
  41407a:	mov    ecx,esp
  41407c:	shr    BYTE PTR [edi-0x7f],0xfd
  414080:	lods   al,BYTE PTR ds:[esi]
  414081:	jne    0x41403d
  414083:	js     0x41407b
  414085:	cmp    BYTE PTR [ebp-0x14],al
  414088:	scas   eax,DWORD PTR es:[edi]
  414089:	inc    edi
  41408a:	hlt    
  41408b:	iret   
  41408c:	scas   al,BYTE PTR es:[edi]
  41408d:	fs shr edi,0xe
  414091:	test   DWORD PTR [ebp-0x3d],esp
  414094:	adc    al,0x44
  414096:	or     ebx,ebx
  414098:	(bad)  
  414099:	(bad)  
  41409a:	out    0x56,eax
  41409c:	mov    gs,WORD PTR [edi]
  41409e:	out    0x22,al
  4140a0:	xchg   edx,eax
  4140a1:	pop    ss
  4140a2:	in     eax,dx
  4140a3:	(bad)  
  4140a4:	sti    
  4140a5:	push   ecx
  4140a6:	jp     0x414102
  4140a8:	pop    esp
  4140a9:	mov    ebp,0xc0a3f6d3
  4140ae:	scas   al,BYTE PTR es:[edi]
  4140af:	aaa    
  4140b0:	lods   al,BYTE PTR ds:[esi]
  4140b1:	(bad)  es:[edx]
  4140b4:	out    dx,eax
  4140b5:	sub    ecx,DWORD PTR [ebp-0x4f]
  4140b8:	pushf  
  4140b9:	iret   
  4140ba:	cmp    eax,0x70b09acd
  4140bf:	retf   
  4140c0:	sub    esi,DWORD PTR [eax]
  4140c2:	push   es
  4140c3:	imul   dx,WORD PTR [edi-0x77],0x75
  4140c8:	les    ecx,FWORD PTR [ebx+0x4d8bb845]
  4140ce:	mov    esp,0x404d368
  4140d3:	scas   al,BYTE PTR es:[edi]
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x42206c
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [eax+ebp*4-0x53]
  414159:	sbb    edi,DWORD PTR [esi+0x1a]
  41415c:	sub    al,0x18
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [edi-0x6f],bh
  414165:	and    al,0xf7
  414167:	inc    BYTE PTR [ebx+0x461fdc9]
  41416d:	inc    edx
  41416e:	fisttp QWORD PTR [edx-0xb]
  414171:	jb     0x41418c
  414173:	add    DWORD PTR [edx+0x28d4e421],edx
  414179:	js     0x4141a6
  41417b:	in     eax,0x32
  41417d:	sub    bl,cl
  41417f:	loope  0x4141bd
  414181:	jp     0x41412c
  414183:	dec    esp
  414184:	jg     0x414106
  414186:	jl     0x4141eb
  414188:	mov    ebp,0xd3ebe3b4
  41418d:	cdq    
  41418e:	lods   eax,DWORD PTR ds:[esi]
  41418f:	iret   
  414190:	scas   eax,DWORD PTR es:[edi]
  414191:	push   0xffffffe1
  414193:	mov    esi,0x4f59a25
  414198:	push   ecx
  414199:	aaa    
  41419a:	xorps  xmm5,XMMWORD PTR [ebx-0x37]
  41419e:	cmp    ebx,eax
  4141a0:	mov    bh,0xf5
  4141a2:	pop    es
  4141a3:	push   esi
  4141a4:	je     0x414184
  4141a6:	test   BYTE PTR [ecx-0x488bde7e],0xca
  4141ad:	into   
  4141ae:	push   ebx
  4141af:	pop    ecx
  4141b0:	or     ebx,DWORD PTR [ecx]
  4141b2:	mov    cl,0x22
  4141b4:	pop    ds
  4141b5:	in     eax,dx
  4141b6:	lods   eax,DWORD PTR ds:[esi]
  4141b7:	ins    DWORD PTR es:[edi],dx
  4141b8:	xor    eax,0xdf75d2c8
  4141bd:	mov    ebx,0xd3055d12
  4141c2:	adc    edi,edi
  4141c4:	xor    eax,0x4819a17a
  4141c9:	ret    
  4141ca:	retf   
  4141cb:	(bad)  
  4141cc:	sahf   
  4141cd:	jb     0x4141ce
  4141cf:	pop    ebx
  4141d0:	jle    0x4141a8
  4141d2:	push   edx
  4141d3:	ret    0x4e81
  4141d6:	pop    eax
  4141d7:	xchg   esp,eax
  4141d8:	mov    ds:0xfd79f921,al
  4141dd:	mov    ebp,0x9e86097b
  4141e2:	loopne 0x41425f
  4141e4:	gs retf 0x16a8
  4141e8:	les    esi,FWORD PTR [esi]
  4141ea:	bound  ebp,QWORD PTR [edi-0x71d40aad]
  4141f0:	mov    ecx,0x255fd578
  4141f5:	xchg   ebx,eax
  4141f6:	inc    edx
  4141f7:	cs add al,0xa4
  4141fa:	es mov ebx,0x5ecc9f5
  414200:	fild   DWORD PTR [edi]
  414202:	aaa    
  414203:	add    BYTE PTR [ebx+0x317cff0f],ch
  414209:	pop    ebx
  41420a:	repnz retf 
  41420c:	ins    DWORD PTR es:[edi],dx
  41420d:	sbb    bl,BYTE PTR [edi-0x6e9b30c5]
  414213:	das    
  414214:	out    dx,al
  414215:	push   esp
  414216:	push   cs
  414217:	nop
  414218:	adc    eax,0x927f7e67
  41421d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41421e:	into   
  41421f:	ins    DWORD PTR es:[edi],dx
  414220:	sub    al,0x81
  414222:	jp     0x414280
  414224:	ins    DWORD PTR es:[edi],dx
  414225:	sbb    ah,bh
  414227:	mov    ebx,0xc9f55311
  41422c:	cdq    
  41422d:	jne    0x414270
  41422f:	jne    0x414202
  414231:	es out dx,eax
  414233:	ins    BYTE PTR es:[edi],dx
  414234:	or     eax,0x3742f391
  414239:	call   0x4de7:0x6baeddc4
  414240:	es inc ebx
  414242:	into   
  414243:	add    dl,BYTE PTR [ebx]
  414245:	jne    0x4141d7
  414247:	fidiv  WORD PTR [ebx-0x77d19623]
  41424d:	mov    esp,0xd6ef04af
  414252:	test   eax,0x941dc882
  414257:	cdq    
  414258:	in     eax,0x80
  41425a:	ret    
  41425b:	pop    ecx
  41425c:	lea    eax,[eax-0x5082b520]
  414262:	jns    0x41424c
  414264:	jb     0x414227
  414266:	push   ecx
  414267:	add    BYTE PTR [eax+0x4d],0xda
  41426b:	push   ebx
  41426c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41426d:	push   edx
  41426e:	loope  0x414295
  414270:	fbstp  TBYTE PTR [ebx+0x4b20d935]
  414276:	jecxz  0x41429b
  414278:	aas    
  414279:	mov    ds:0xdab2ad65,eax
  41427e:	rsm    
  414280:	test   DWORD PTR [ebx-0x7a68f015],eax
  414286:	pop    es
  414287:	inc    ebx
  414288:	shr    BYTE PTR [eax],0x8d
  41428b:	imul   eax,DWORD PTR [edx-0x78d37f48],0x45f4febc
  414295:	sub    dl,cl
  414297:	push   esi
  414298:	inc    esp
  414299:	stos   BYTE PTR es:[edi],al
  41429a:	rcl    DWORD PTR ds:0xbcb58f83,cl
  4142a0:	and    BYTE PTR [ebx-0x6e1fe79d],ch
  4142a6:	push   0x2238daad
  4142ab:	retf   
  4142ac:	daa    
  4142ad:	xor    BYTE PTR [ecx+0x2577c43a],0x92
  4142b4:	lods   al,BYTE PTR ds:[esi]
  4142b5:	fnstsw WORD PTR [edx+0x14]
  4142b8:	lock jbe 0x414310
  4142bb:	inc    esi
  4142bc:	cmp    esi,DWORD PTR [esi+0x24c87e6e]
  4142c2:	xor    DWORD PTR [edx-0x35],esi
  4142c5:	add    esp,DWORD PTR [edi+ebp*2-0x7d]
  4142c9:	out    0xb5,eax
  4142cb:	and    DWORD PTR [eax+0x73705aa2],ebp
  4142d1:	or     eax,0x53c232a7
  4142d6:	imul   esi,DWORD PTR fs:[edx-0x4384d3a2],0xec3bf2c6
  4142e1:	stos   BYTE PTR es:[edi],al
  4142e2:	jnp    0x414280
  4142e4:	lea    ebx,[ebp-0x76]
  4142e7:	push   edx
  4142e8:	mov    ah,0xde
  4142ea:	xor    eax,DWORD PTR [edi+ebx*4-0x11]
  4142ee:	and    al,0x7f
  4142f0:	or     BYTE PTR [esi-0x6],0x40
  4142f4:	xchg   DWORD PTR [edx],edi
  4142f6:	jecxz  0x414356
  4142f8:	push   cs
  4142f9:	stos   BYTE PTR es:[edi],al
  4142fa:	aad    0x54
  4142fc:	adc    al,0x5d
  4142fe:	mov    esp,0x61d048da
  414303:	(bad)  
  414304:	imul   DWORD PTR [ebx-0x70b2adde]
  41430a:	iret   
  41430b:	or     BYTE PTR [ebx+0x7f],dl
  41430e:	jae    0x414292
  414310:	loope  0x41434e
  414312:	cmc    
  414313:	ret    0x8a6d
  414316:	xor    eax,0x3c648796
  41431b:	leave  
  41431c:	aam    0x34
  41431e:	mov    ch,0xf0
  414320:	outs   dx,BYTE PTR ds:[esi]
  414321:	fsubr  st,st(1)
  414323:	cmp    esi,DWORD PTR [edi-0x37733e5b]
  414329:	call   0xe163:0x71bb0005
  414330:	retf   
  414331:	aam    0x26
  414333:	stc    
  414334:	push   eax
  414335:	(bad)  
  414336:	jae    0x4142d9
  414338:	popf   
  414339:	das    
  41433a:	adc    al,BYTE PTR [eax-0x2b1411ce]
  414340:	lahf   
  414341:	loop   0x414331
  414343:	push   esi
  414344:	mov    ch,0xb9
  414346:	mov    ?,WORD PTR ds:0xc5d92908
  41434c:	arpl   WORD PTR [edx+ecx*2-0x2bcc87ac],bp
  414353:	mov    ch,0x8f
  414355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414356:	mov    ds:0x91fe0d47,al
  41435b:	scas   eax,DWORD PTR es:[edi]
  41435c:	inc    ebx
  41435d:	jmp    0x41437e
  41435f:	dec    edx
  414360:	enter  0xd8a4,0x55
  414364:	rcr    bh,cl
  414366:	pop    es
  414367:	pop    eax
  414368:	mov    esp,0xbdbd4e7c
  41436d:	jl     0x41439f
  41436f:	xor    ebx,edi
  414371:	call   0x8e0a7307
  414376:	repnz les esi,FWORD PTR [eax-0x36]
  41437a:	(bad)  
  41437b:	pusha  
  41437c:	jae    0x41436e
  41437e:	sub    BYTE PTR [edi-0x60],0x4d
  414382:	add    BYTE PTR [edi+0x5b],ch
  414385:	xor    al,0x8c
  414387:	pop    esp
  414388:	fcomp  DWORD PTR [ebx]
  41438a:	add    esi,DWORD PTR [ecx]
  41438c:	inc    ebp
  41438d:	int    0x50
  41438f:	lea    esp,[edi]
  414391:	jo     0x414374
  414393:	aaa    
  414394:	mov    cs,WORD PTR [eax+0x16]
  414397:	push   ds
  414398:	lods   eax,DWORD PTR ds:[esi]
  414399:	sub    al,0x89
  41439b:	adc    eax,0xd5f6af30
  4143a0:	mov    edi,0xf775845
  4143a5:	mov    eax,ds:0xc200c0c4
  4143aa:	pop    ds
  4143ab:	mov    WORD PTR [edx+0xc],?
  4143ae:	and    DWORD PTR [ecx],edi
  4143b0:	in     al,dx
  4143b1:	mov    DWORD PTR [ecx+0x4d],esp
  4143b4:	cwde   
  4143b5:	enter  0xb815,0x58
  4143b9:	imul   edi,DWORD PTR [ecx],0x66204832
  4143bf:	and    eax,0x96612322
  4143c4:	jmp    0x406551e
  4143c9:	xchg   edi,eax
  4143ca:	mov    cl,0xc4
  4143cc:	jl     0x414396
  4143ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d0:	das    
  4143d1:	fldenv [edi]
  4143d3:	xor    eax,0x8d8958d4
  4143d8:	fidiv  WORD PTR [eax+0x37dfe534]
  4143de:	pop    esp
  4143df:	adc    dh,0x21
  4143e2:	pop    ebx
  4143e3:	xlat   BYTE PTR ds:[ebx]
  4143e4:	call   0x911c24d5
  4143e9:	sub    eax,0x580ebf4a
  4143ee:	call   0x133a:0x7cf10eda
  4143f5:	adc    BYTE PTR [ebx-0x22],0xe8
  4143f9:	pop    ecx
  4143fa:	call   0xbf917409
  4143ff:	and    DWORD PTR [eax+0x52],esp
  414402:	push   es
  414403:	inc    esp
  414404:	test   DWORD PTR [edi],0x9bce5acd
  41440a:	arpl   WORD PTR [esi+0x1b],di
  41440d:	fwait
  41440e:	aas    
  41440f:	push   ebp
  414410:	xchg   esp,eax
  414411:	jnp    0x41445b
  414413:	int3   
  414414:	pop    esp
  414415:	lea    edx,[ebp+0x20]
  414418:	loopne 0x4143ac
  41441a:	xor    DWORD PTR [edi+0xfea66ce],0x4e
  414421:	mov    DWORD PTR [edi-0x1ded41f5],esp
  414427:	pop    ebx
  414428:	adc    al,0x92
  41442a:	scas   al,BYTE PTR es:[edi]
  41442b:	(bad)  
  41442c:	sub    BYTE PTR ds:0x84ff7c04,cl
  414432:	sub    eax,0xd86a507d
  414437:	mov    al,ds:0x1d0d81dd
  41443c:	mov    edi,0xcfef4480
  414441:	sbb    al,0x4c
  414443:	xchg   edx,eax
  414444:	mov    esi,0x8d1f4f71
  414449:	add    BYTE PTR [esi+0x47],bl
  41444c:	pushf  
  41444d:	test   ebx,ebp
  41444f:	pop    eax
  414450:	lods   eax,DWORD PTR ds:[esi]
  414451:	push   esp
  414452:	pop    edi
  414453:	sbb    ch,BYTE PTR [esi+0x3e]
  414456:	int3   
  414457:	inc    ecx
  414458:	lods   eax,DWORD PTR ds:[esi]
  414459:	pop    ss
  41445a:	into   
  41445b:	jge    0x41444c
  41445d:	pushf  
  41445e:	(bad)  
  41445f:	fmul   DWORD PTR [eax-0x4e1d332f]
  414465:	leave  
  414466:	xor    al,0x73
  414468:	std    
  414469:	cmc    
  41446a:	ins    DWORD PTR es:[edi],dx
  41446b:	outs   dx,BYTE PTR ds:[esi]
  41446c:	mov    dl,bl
  41446e:	repz xor al,0xff
  414471:	add    eax,0xe1916c9a
  414476:	das    
  414477:	or     eax,0x82a936fa
  41447c:	add    BYTE PTR [ecx-0x47],al
  41447f:	arpl   bx,di
  414481:	mov    es,WORD PTR [esi+0x4c]
  414484:	or     DWORD PTR [ebx],esi
  414486:	bnd jle 0x414420
  414489:	sub    ebp,DWORD PTR [eax+0x7f954129]
  41448f:	pusha  
  414490:	add    eax,0x62664670
  414495:	push   ds
  414496:	lock or dh,bh
  414499:	push   ss
  41449a:	pop    ebx
  41449b:	xor    ch,0x6f
  41449e:	shl    DWORD PTR [ebx+0x16310d33],0xb1
  4144a5:	mov    ecx,0xd5c84970
  4144aa:	or     BYTE PTR [eax+0x76],ch
  4144ad:	test   BYTE PTR [edx+0x5bef1418],bh
  4144b3:	xor    DWORD PTR [ecx+0x74466b34],ebx
  4144b9:	retf   0x420a
  4144bc:	jbe    0x4144dd
  4144be:	jl     0x414453
  4144c0:	fidivr DWORD PTR [esi]
  4144c2:	stos   BYTE PTR es:[edi],al
  4144c3:	and    eax,0xdf1cc691
  4144c8:	xchg   esp,eax
  4144c9:	gs inc ebp
  4144cb:	xchg   ecx,eax
  4144cc:	and    eax,0x40c19675
  4144d1:	pop    eax
  4144d2:	jmp    0x8c57:0xfa75cafc
  4144d9:	imul   esi,DWORD PTR fs:[ebx+0xa0c88a0],0x76
  4144e1:	fsub   st(0),st
  4144e3:	sbb    eax,0x245f3590
  4144e8:	mov    bh,0x44
  4144ea:	push   es
  4144eb:	idiv   esi
  4144ed:	mov    al,bh
  4144ef:	xor    ebx,edi
  4144f1:	lock or BYTE PTR [ebp+0x9cf91d1],0x27
  4144f9:	(bad)  
  4144fa:	and    edx,edx
  4144fc:	and    BYTE PTR [ebp+0xa],0x83
  414500:	jge    0x4144a6
  414502:	ins    BYTE PTR es:[edi],dx
  414503:	sub    BYTE PTR [eax-0x75b009bb],bh
  414509:	cld    
  41450a:	pop    edi
  41450c:	inc    ebp
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x157c:0x73623c4c
  414595:	(bad)  
  414596:	int    0x70
  414598:	shl    BYTE PTR [eax+ebx*1],cl
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    dh,cl
  4145a1:	test   eax,0x30a630dc
  4145a6:	pop    edi
  4145a7:	adc    al,0x7b
  4145a9:	lods   eax,DWORD PTR ds:[esi]
  4145aa:	xchg   DWORD PTR [esi],ecx
  4145ac:	sub    DWORD PTR [esi],0x21
  4145af:	xchg   ecx,eax
  4145b0:	push   ecx
  4145b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145b2:	int3   
  4145b3:	push   ss
  4145b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b5:	aas    
  4145b6:	js     0x4145ce
  4145b8:	in     al,dx
  4145b9:	rcr    DWORD PTR [edi+0x44],1
  4145bc:	js     0x41456e
  4145be:	not    dh
  4145c0:	test   eax,0x199e0f92
  4145c5:	lods   eax,DWORD PTR ds:[esi]
  4145c6:	xchg   esi,eax
  4145c7:	add    esi,DWORD PTR [edx]
  4145c9:	mov    bl,dh
  4145cb:	jg     0x414566
  4145cd:	shl    DWORD PTR [ebx-0x47b38be9],1
  4145d3:	shr    dl,0x13
  4145d6:	jb     0x4145c9
  4145d8:	ret    
  4145d9:	mov    ah,0x9e
  4145db:	jb     0x41455f
  4145dd:	test   DWORD PTR [edx+0x5e],eax
  4145e0:	xchg   DWORD PTR [eax-0x78],eax
  4145e3:	ret    0xd739
  4145e6:	cmp    bl,bl
  4145e8:	adc    eax,0xd0fa642
  4145ed:	mov    cs,WORD PTR ss:[ebx]
  4145f0:	cmc    
  4145f1:	in     al,0xb0
  4145f3:	out    0xcf,eax
  4145f5:	jle    0x414602
  4145f7:	jnp    0x414649
  4145f9:	(bad)  
  4145fa:	popf   
  4145fb:	daa    
  4145fc:	add    BYTE PTR [esi+0x69],bh
  4145ff:	xor    al,0xb3
  414601:	fcmovnb st,st(0)
  414603:	sar    BYTE PTR [esi],1
  414605:	mov    ah,BYTE PTR [edi+0x42eb6cf3]
  41460b:	shr    BYTE PTR [ebp-0x656f4997],cl
  414611:	inc    ecx
  414612:	popa   
  414613:	jne    0x4145c9
  414615:	es (bad) 
  414617:	retf   0xe2e7
  41461a:	mov    dh,BYTE PTR [esi+0x6e833f21]
  414620:	cmp    al,0x61
  414622:	push   eax
  414623:	iret   
  414624:	sbb    al,0x92
  414626:	into   
  414627:	mov    dh,0x80
  414629:	in     eax,dx
  41462a:	test   BYTE PTR [esi+eax*8],cl
  41462d:	push   ebp
  41462e:	cmp    bl,ah
  414630:	inc    ecx
  414631:	in     al,0xa7
  414633:	clc    
  414634:	repz pop ds
  414636:	cmp    edx,DWORD PTR [ebx-0x430b5deb]
  41463c:	rep outs dx,DWORD PTR ds:[esi]
  41463e:	sbb    eax,DWORD PTR [ecx+0x4a]
  414641:	sar    eax,0xbf
  414644:	mov    dl,0x39
  414646:	fcomp  QWORD PTR [esi]
  414648:	pop    ss
  414649:	pusha  
  41464a:	xor    dh,BYTE PTR [ebx-0x14]
  41464d:	add    dl,BYTE PTR [edi+0x3735588c]
  414653:	ror    DWORD PTR [edx+0x49],1
  414656:	pusha  
  414657:	bound  edx,QWORD PTR [edi+esi*8+0x46370a61]
  41465e:	mov    al,0xc6
  414660:	loope  0x414654
  414662:	mov    esi,0xcf2f32b0
  414667:	dec    ebx
  414668:	jbe    0x41467a
  41466a:	push   edi
  41466b:	fwait
  41466c:	stos   DWORD PTR es:[edi],eax
  41466d:	push   eax
  41466e:	and    BYTE PTR [esi+eiz*4+0x59],bl
  414672:	ss pop esi
  414674:	sub    al,BYTE PTR [ecx+0x3eeb375a]
  41467a:	pop    ebp
  41467b:	sbb    cl,BYTE PTR [esi-0x54]
  41467e:	ret    
  41467f:	stos   BYTE PTR es:[edi],al
  414680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414681:	int3   
  414682:	lahf   
  414683:	stc    
  414684:	popa   
  414685:	or     ch,BYTE PTR [ebx+0x2d]
  414688:	adc    BYTE PTR [eax+0x1f1d72e9],0x40
  41468f:	test   al,0x87
  414691:	mov    edi,0x9e6aee96
  414696:	out    dx,al
  414697:	pop    eax
  414698:	sbb    dh,BYTE PTR gs:[edx]
  41469b:	inc    ecx
  41469c:	(bad)  
  41469d:	into   
  41469e:	in     al,dx
  41469f:	jle    0x41470c
  4146a1:	js     0x4146fa
  4146a3:	adc    bh,cl
  4146a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a6:	or     cl,BYTE PTR [ebp-0x41]
  4146a9:	xor    eax,0xe3205ac9
  4146ae:	adc    eax,0xf9f194a5
  4146b3:	gs popf 
  4146b5:	inc    dh
  4146b7:	vmovlhps xmm3,xmm2,xmm4
  4146bb:	pop    edi
  4146bc:	xor    ebx,DWORD PTR [ebx]
  4146be:	inc    ebp
  4146bf:	loop   0x414725
  4146c1:	or     al,0x64
  4146c3:	clc    
  4146c4:	jns    0x41470f
  4146c6:	sub    esi,ebp
  4146c8:	popf   
  4146c9:	push   cs
  4146ca:	jmp    0xbafcf22b
  4146cf:	or     BYTE PTR [ecx-0x44a47c3b],bl
  4146d5:	mov    edx,0x34b11088
  4146da:	outs   dx,DWORD PTR ds:[esi]
  4146db:	jmp    0x3c757329
  4146e0:	loopne 0x414713
  4146e2:	pop    ebp
  4146e3:	or     al,0x92
  4146e5:	and    bh,BYTE PTR [ebx+0x4c]
  4146e8:	or     esi,DWORD PTR [eax+0x263a3d13]
  4146ee:	mov    ebx,0x7ca9bc94
  4146f3:	daa    
  4146f4:	jbe    0x4146f1
  4146f6:	pop    esi
  4146f7:	lods   eax,DWORD PTR ds:[esi]
  4146f8:	push   ss
  4146f9:	jmp    0x78b5:0xbacd2e0d
  414700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414701:	dec    ebx
  414702:	dec    ebx
  414703:	and    al,BYTE PTR [ebx+0x305a4973]
  414709:	xchg   BYTE PTR es:[edx+0x75],ch
  41470d:	imul   ecx,DWORD PTR [ebx+0x0],0xffffffd5
  414711:	dec    eax
  414712:	lods   al,BYTE PTR ds:[esi]
  414713:	hlt    
  414714:	push   0xffffffa4
  414716:	retf   
  414717:	jmp    0x414790
  414719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41471a:	pop    edi
  41471b:	lgs    ecx,FWORD PTR [ecx]
  41471e:	inc    eax
  41471f:	sbb    eax,0xcfff3fcd
  414724:	rcl    bh,cl
  414726:	push   es
  414727:	addr16 push 0x2480f4ac
  41472d:	clc    
  41472e:	cmp    BYTE PTR gs:[ebp+0x4603de31],al
  414735:	fwait
  414736:	push   esp
  414737:	adc    cl,BYTE PTR [eax-0x6834c7]
  41473d:	inc    ebx
  41473e:	fwait
  41473f:	pop    esi
  414740:	mov    bh,0x23
  414742:	pop    ebx
  414743:	lods   eax,DWORD PTR ds:[esi]
  414744:	imul   ecx,DWORD PTR [edx+0x417da418],0x15
  41474b:	cmp    eax,0x56122c32
  414750:	sbb    eax,0x633c0466
  414755:	adc    esp,0x831febd1
  41475b:	dec    eax
  41475c:	pop    edx
  41475d:	leave  
  41475e:	(bad)  
  41475f:	mov    eax,ds:0x37e57917
  414764:	xchg   edx,eax
  414765:	lods   eax,DWORD PTR ds:[esi]
  414766:	mov    ebp,0xea2638ca
  41476b:	ins    BYTE PTR es:[edi],dx
  41476c:	loope  0x41479c
  41476e:	mov    bl,0xde
  414770:	test   esi,edx
  414772:	mov    BYTE PTR [edi-0x5d],dl
  414775:	lock shr DWORD PTR [ebx],0x83
  414779:	sbb    BYTE PTR [ebx],0xb
  41477c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41477d:	dec    edi
  41477e:	mov    ss,eax
  414780:	pop    edi
  414781:	popf   
  414782:	dec    edi
  414783:	aad    0xb
  414785:	mov    edi,0xc4d99955
  41478a:	scas   al,BYTE PTR es:[edi]
  41478b:	xchg   BYTE PTR [ebx+edi*8],al
  41478e:	pop    ebp
  41478f:	cmp    dl,cl
  414791:	push   ebx
  414792:	sbb    DWORD PTR [ebx-0x43],ecx
  414795:	xor    al,0xaa
  414798:	(bad)  
  414799:	dec    esp
  41479a:	inc    edi
  41479b:	stos   BYTE PTR es:[edi],al
  41479c:	mov    dh,0xaf
  41479e:	cmp    DWORD PTR ds:0x584c3ee,0x87efa609
  4147a8:	fs push 0xfffffff0
  4147ab:	aad    0xff
  4147ad:	fwait
  4147ae:	add    al,0xf2
  4147b0:	mov    BYTE PTR [ebx+ecx*4-0x60],dh
  4147b4:	lock jecxz 0x414766
  4147b7:	cli    
  4147b8:	mov    al,ds:0x5ea68902
  4147bd:	jnp    0x41483a
  4147bf:	mov    ch,BYTE PTR [ebp-0x113eb96e]
  4147c5:	push   ecx
  4147c6:	dec    cl
  4147c8:	pop    ecx
  4147c9:	arpl   WORD PTR [ebp-0x2c],dx
  4147cc:	retf   
  4147cd:	dec    esi
  4147ce:	loop   0x41484e
  4147d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d1:	mov    DWORD PTR ds:0xab1a848f,eax
  4147d7:	push   0xd4dcd1c5
  4147dc:	mov    ebp,0xb237f734
  4147e1:	outs   dx,BYTE PTR ds:[esi]
  4147e2:	xchg   edi,ebp
  4147e4:	pop    ebp
  4147e5:	ins    DWORD PTR es:[edi],dx
  4147e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e8:	(bad)  
  4147e9:	mov    ch,0x87
  4147eb:	repz push ecx
  4147ed:	or     al,0xcb
  4147ef:	adc    BYTE PTR [edx],bh
  4147f1:	loope  0x414802
  4147f3:	jecxz  0x41486e
  4147f5:	and    al,0x7e
  4147f7:	cmp    eax,0x95e06d17
  4147fc:	fwait
  4147fd:	retf   0x834d
  414800:	adc    BYTE PTR [ebp+0x5c],bl
  414803:	dec    edx
  414804:	(bad)  
  414805:	std    
  414806:	js     0x414881
  414808:	mov    al,ds:0xb1f2981e
  41480d:	mov    al,ds:0x7fbb2cde
  414812:	es aam 0x7f
  414815:	ins    DWORD PTR es:[edi],dx
  414816:	sub    edi,DWORD PTR [ecx+0x7b]
  414819:	std    
  41481a:	fmul   QWORD PTR ss:[ebx-0x4dd1ec85]
  414821:	lods   eax,DWORD PTR ds:[esi]
  414822:	test   BYTE PTR [edi+0x79068f90],bl
  414828:	push   0x4279bf45
  41482d:	pop    ebp
  41482e:	cmc    
  41482f:	(bad)  
  414830:	jo     0x414814
  414832:	cdq    
  414833:	xchg   ebp,eax
  414834:	xchg   ebp,eax
  414835:	sub    DWORD PTR [esi+0x30],esp
  414838:	cmp    eax,ecx
  41483a:	add    DWORD PTR [esi-0x15],0xb704294b
  414841:	fiadd  DWORD PTR [esp+ebp*2-0x2dce0117]
  414848:	cld    
  414849:	std    
  41484a:	xchg   esi,eax
  41484b:	int3   
  41484c:	fstp   DWORD PTR [ecx+0x67]
  41484f:	push   ss
  414850:	test   eax,0xc996dfc4
  414855:	repnz retf 0x5763
  414859:	xor    al,0x9e
  41485b:	scas   al,BYTE PTR es:[edi]
  41485c:	popf   
  41485d:	mov    al,ds:0x2da9dfd9
  414862:	xchg   ecx,eax
  414863:	fsubr  DWORD PTR [ebx]
  414865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414866:	imul   esp,ebx,0x15e301d
  41486c:	pusha  
  41486d:	adc    al,BYTE PTR [edi-0x5e5de54f]
  414873:	or     ah,BYTE PTR [edx+0x23]
  414876:	jne    0x414883
  414878:	(bad)  
  414879:	sbb    eax,0x770af847
  41487e:	mov    esi,0xf88d3bd0
  414883:	and    DWORD PTR [esi+ecx*8+0x29e04f1f],ebx
  41488a:	ins    BYTE PTR es:[edi],dx
  41488b:	outs   dx,BYTE PTR ds:[esi]
  41488c:	mul    ah
  41488e:	push   esi
  41488f:	pop    ebp
  414890:	fist   DWORD PTR [ecx+0x4e]
  414893:	mov    ah,BYTE PTR [edi-0x3eec582b]
  414899:	daa    
  41489a:	repz sbb BYTE PTR [ecx+esi*4+0x44ac9424],cl
  4148a2:	pushw  0xb37a
  4148a6:	pop    esp
  4148a7:	mov    cl,0xb7
  4148a9:	jmp    0xa68a9fc1
  4148ae:	enter  0x3439,0xb3
  4148b2:	jmp    0xefaa903c
  4148b7:	sbb    eax,0xf2555111
  4148bc:	xchg   BYTE PTR [ecx+0x35],dl
  4148bf:	dec    ecx
  4148c0:	jnp    0x41487a
  4148c2:	mov    WORD PTR es:[ebx+0x6dc6f443],ss
  4148c9:	xchg   esi,eax
  4148ca:	adc    ecx,DWORD PTR [edx]
  4148cc:	push   esp
  4148cd:	jns    0x414921
  4148cf:	push   esp
  4148d0:	cs mov esp,0x5b35037e
  4148d6:	xor    esi,edi
  4148d8:	retf   0xfb89
  4148db:	mov    dl,0xfe
  4148dd:	bnd ret 
  4148df:	into   
  4148e0:	daa    
  4148e1:	dec    esp
  4148e2:	mov    ch,0x6
  4148e4:	and    ecx,DWORD PTR [ebp-0x4f]
  4148e7:	inc    ebx
  4148e8:	fstp   TBYTE PTR [edx-0x12]
  4148eb:	lods   al,BYTE PTR ds:[esi]
  4148ec:	int3   
  4148ed:	retf   0x6878
  4148f0:	pop    es
  4148f1:	in     eax,0xa7
  4148f3:	cmc    
  4148f4:	pop    edi
  4148f5:	daa    
  4148f6:	adc    al,0x4c
  4148f8:	lds    esp,FWORD PTR [esp+eax*1]
  4148fb:	xor    ebx,DWORD PTR [eax-0xc]
  4148fe:	mov    bl,0x33
  414900:	mov    ebx,0xe925cac9
  414905:	adc    DWORD PTR [edx+0x19],ebp
  414908:	retf   
  414909:	add    DWORD PTR [ebp+0x63],esi
  41490c:	mov    bh,0x72
  41490e:	push   ecx
  41490f:	pushf  
  414910:	mov    bh,0x72
  414912:	sbb    ebp,edx
  414914:	ins    BYTE PTR es:[edi],dx
  414915:	mov    dl,0xb3
  414917:	cmp    DWORD PTR [ebp+0x48],0x27
  41491b:	scas   al,BYTE PTR es:[edi]
  41491c:	fs scas ax,WORD PTR es:[edi]
  41491f:	popa   
  414920:	(bad)  
  414921:	rol    ebp,1
  414923:	jp     0x414965
  414925:	cld    
  414926:	inc    esi
  414927:	shr    DWORD PTR [edi+0x14],0x93
  41492b:	inc    edx
  41492c:	fild   DWORD PTR [ebx+0x74]
  41492f:	shl    DWORD PTR [esi],1
  414931:	dec    ebp
  414932:	fisttp QWORD PTR [ecx]
  414934:	in     al,dx
  414935:	pop    ebp
  414936:	in     al,dx
  414937:	sbb    al,0x44
  414939:	popa   
  41493a:	xchg   ebx,eax
  41493b:	adc    edi,eax
  41493d:	mov    al,0x32
  41493f:	js     0x41498d
  414941:	or     eax,0x24bc0c98
  414946:	js     0x414904
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x7
  414996:	in     al,0x77
  414998:	jl     0x414925
  41499a:	sbb    al,0x18
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [edi],al
  4149a2:	xor    BYTE PTR [ecx+0x1dc63dde],bl
  4149a8:	(bad)  
  4149a9:	pushf  
  4149aa:	lock push ss
  4149ac:	pop    ebp
  4149ad:	mov    DWORD PTR [eax+0x74],ebp
  4149b0:	xchg   ebp,eax
  4149b1:	sub    ebx,0x57
  4149b4:	gs or  eax,0x4b0c5570
  4149ba:	jg     0x41493c
  4149bc:	adc    DWORD PTR [eax-0x531cf5b3],ecx
  4149c2:	push   edx
  4149c3:	mov    DWORD PTR [eax+0x5f],ecx
  4149c6:	push   esp
  4149c7:	in     al,0xe7
  4149c9:	mov    esp,0xd3f2d641
  4149ce:	xchg   esp,eax
  4149cf:	pushf  
  4149d0:	enter  0x794f,0x3b
  4149d4:	adc    dl,BYTE PTR [edx+0x7b]
  4149d7:	shr    DWORD PTR ds:0x24a1ba33,1
  4149dd:	or     dh,BYTE PTR [eax+edi*8-0x48]
  4149e1:	imul   eax,DWORD PTR [esp+ebx*2+0x28],0xd
  4149e6:	lds    edi,FWORD PTR [edx+ebp*1-0x27]
  4149ea:	and    DWORD PTR [esi],ebx
  4149ec:	popa   
  4149ed:	pop    ebx
  4149ee:	cmp    BYTE PTR ds:0x5cfccdd4,ah
  4149f4:	dec    edi
  4149f5:	repz mov edi,0xce1ed1c4
  4149fb:	imul   edx,DWORD PTR [ebx],0x580c0119
  414a01:	(bad)  
  414a02:	fistp  WORD PTR [ecx]
  414a04:	add    BYTE PTR [ebp+0x245ce0dc],al
  414a0a:	pushf  
  414a0b:	stc    
  414a0c:	or     eax,edi
  414a0e:	ret    0x41dd
  414a11:	xor    esp,edx
  414a13:	mov    ?,WORD PTR [ecx]
  414a15:	mov    ebx,0xce2a534e
  414a1a:	adc    cl,BYTE PTR [ecx-0x62e34b37]
  414a20:	push   es
  414a21:	adc    DWORD PTR [edi+ebx*8-0x6e],ebp
  414a25:	and    edi,DWORD PTR [edx]
  414a27:	dec    ebp
  414a28:	or     DWORD PTR [ecx+0x8],0x8
  414a2c:	mov    bl,ah
  414a2e:	icebp  
  414a2f:	add    ah,ah
  414a31:	push   ds
  414a32:	xor    eax,0x1af7fd3d
  414a37:	mov    es,edx
  414a39:	mov    al,ds:0x57e54ffc
  414a3e:	push   ax
  414a40:	inc    eax
  414a41:	and    bh,al
  414a43:	scas   al,BYTE PTR es:[edi]
  414a44:	jbe    0x4149de
  414a46:	enter  0xa4d0,0x46
  414a4a:	cmp    al,BYTE PTR ds:0xae8b2f59
  414a50:	jbe    0x414a44
  414a52:	or     BYTE PTR [edx],0xae
  414a55:	pop    edx
  414a56:	inc    eax
  414a57:	mov    ecx,0xabc67dd8
  414a5c:	and    al,0x84
  414a5e:	ins    BYTE PTR es:[edi],dx
  414a5f:	mov    ds:0x830be5ee,al
  414a64:	jae    0x414a81
  414a66:	push   eax
  414a67:	pop    es
  414a68:	ss dec edi
  414a6a:	gs js  0x414a43
  414a6d:	das    
  414a6e:	xchg   edi,eax
  414a6f:	fsub   QWORD PTR [edx+0x50]
  414a72:	fmulp  st(1),st
  414a74:	ret    0x8d49
  414a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a78:	or     ecx,DWORD PTR [ecx-0x35]
  414a7b:	pop    ecx
  414a7c:	pop    ebx
  414a7d:	mov    ds:0x6c7a6661,al
  414a82:	out    0xc4,eax
  414a84:	or     bl,bl
  414a86:	gs cwde 
  414a88:	adc    BYTE PTR ss:[esi+ebx*2-0x60644b01],dh
  414a90:	stos   DWORD PTR es:[edi],eax
  414a91:	lds    ebp,FWORD PTR [esi-0x3de239b1]
  414a97:	test   eax,0x156fe5b8
  414a9c:	cs test ebx,0xa86e30dd
  414aa3:	mov    ch,0x3a
  414aa5:	rcr    DWORD PTR [ecx+esi*8+0x70ce1b70],1
  414aac:	enter  0x8ef2,0x65
  414ab0:	xor    eax,0x524c872f
  414ab5:	xchg   DWORD PTR [edx],edx
  414ab7:	and    dl,BYTE PTR [ecx+0x3c]
  414aba:	inc    edx
  414abb:	push   ebx
  414abc:	out    0x73,eax
  414abe:	aam    0xc7
  414ac0:	test   DWORD PTR [eax],ecx
  414ac2:	retf   
  414ac3:	xor    BYTE PTR ds:0xfdec6057,bl
  414ac9:	stos   BYTE PTR es:[edi],al
  414aca:	add    BYTE PTR [eax-0x214dd901],dl
  414ad0:	pop    ebx
  414ad1:	jecxz  0x414aff
  414ad3:	push   ecx
  414ad4:	mov    ah,dh
  414ad6:	pushf  
  414ad7:	aad    0x22
  414ad9:	jp     0x414aff
  414adb:	jns    0x414ab4
  414add:	shld   DWORD PTR [esi],eax,0x66
  414ae1:	push   0xb9e749bb
  414ae6:	xchg   ecx,eax
  414ae7:	adc    eax,0xe33f1b21
  414aec:	stos   DWORD PTR es:[edi],eax
  414aed:	inc    ebp
  414aee:	fwait
  414aef:	sub    al,0xf9
  414af1:	jmp    0xef89c40e
  414af6:	add    DWORD PTR [edi],ebx
  414af8:	(bad)  
  414af9:	out    dx,eax
  414afa:	cmp    BYTE PTR [ebx],dh
  414afc:	js     0x414a89
  414afe:	mov    ebx,0xd71ac9a6
  414b03:	pop    esp
  414b04:	sbb    bh,BYTE PTR ds:0xc5f60266
  414b0a:	int    0x93
  414b0c:	mov    BYTE PTR [ebx-0xf36de38],dh
  414b12:	xor    ecx,DWORD PTR [edx-0x65]
  414b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b16:	popf   
  414b17:	repnz xchg ebp,eax
  414b19:	xchg   BYTE PTR ss:[ebx],ah
  414b1c:	sub    esp,DWORD PTR [ebx+0x4e]
  414b1f:	call   0x9f2196ed
  414b24:	popf   
  414b25:	in     al,0xac
  414b27:	xor    ebp,DWORD PTR [ebx]
  414b29:	jg     0x414b09
  414b2b:	cmc    
  414b2c:	loop   0x414b2d
  414b2e:	adc    DWORD PTR ds:0x8442d30a,0x998cd267
  414b38:	cli    
  414b39:	leave  
  414b3a:	hlt    
  414b3b:	sbb    bh,BYTE PTR [eax+0x2214f5dc]
  414b41:	sar    BYTE PTR [ebp+0x5c],1
  414b44:	xchg   edx,eax
  414b45:	pop    ecx
  414b46:	cmp    BYTE PTR [ebx],ch
  414b48:	add    DWORD PTR [eax],ebp
  414b4a:	test   edi,esi
  414b4c:	xlat   BYTE PTR ds:[ebx]
  414b4d:	pushf  
  414b4e:	mov    ebx,0x4ea655ee
  414b53:	pusha  
  414b54:	daa    
  414b55:	push   ss
  414b56:	in     eax,dx
  414b57:	or     ecx,DWORD PTR ds:0xbd8cfffb
  414b5d:	dec    esp
  414b5e:	mov    ch,0x26
  414b60:	ss pop esi
  414b62:	shl    DWORD PTR [ebp-0x34],0x43
  414b66:	inc    edi
  414b67:	mov    eax,0x9f3514c8
  414b6c:	jmp    0xf88f44d
  414b71:	inc    ebp
  414b72:	xchg   BYTE PTR [eax+0x2],bh
  414b75:	(bad)  
  414b76:	push   ss
  414b77:	cmp    BYTE PTR [edx-0x53ac1eca],bl
  414b7d:	fstp   QWORD PTR [esp+ebx*1+0x23]
  414b81:	fistp  QWORD PTR [edx-0x64052e34]
  414b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b88:	fist   WORD PTR [ebx-0x2e]
  414b8b:	repnz add DWORD PTR [eax+0x64],eax
  414b8f:	out    dx,al
  414b90:	in     al,dx
  414b91:	sbb    DWORD PTR [esi+0x6f48e1d4],0x85ecbe2a
  414b9b:	cmp    ch,dh
  414b9d:	addr16 or dh,ch
  414ba0:	push   eax
  414ba1:	add    eax,0xbc17a18b
  414ba6:	push   cs
  414ba7:	dec    edx
  414ba8:	mov    bl,0x75
  414baa:	shr    BYTE PTR [edx+0xd587d38],cl
  414bb0:	cwde   
  414bb1:	js     0x414b52
  414bb3:	imul   DWORD PTR [ebx]
  414bb5:	test   eax,0x2208fe0f
  414bba:	inc    ebp
  414bbb:	mov    eax,ds:0x370692ed
  414bc0:	sar    cl,cl
  414bc2:	aam    0xc4
  414bc4:	sbb    eax,0x20bd18a9
  414bc9:	stos   BYTE PTR es:[edi],al
  414bca:	imul   ecx,DWORD PTR [ebp+0x36],0xffffffda
  414bce:	fwait
  414bcf:	cmp    eax,0xd686745e
  414bd4:	test   eax,0xd0f74fcf
  414bd9:	xor    dl,BYTE PTR [edi+ebp*2]
  414bdc:	jo     0x414be3
  414bde:	and    bl,BYTE PTR [esp+esi*1-0x30]
  414be2:	push   0x55
  414be4:	je     0x414b8c
  414be6:	dec    ecx
  414be7:	aad    0x30
  414be9:	ror    DWORD PTR [ebp-0x15],cl
  414bec:	scas   eax,DWORD PTR es:[edi]
  414bed:	pop    es
  414bee:	fwait
  414bef:	pop    ebx
  414bf0:	cwde   
  414bf1:	in     al,0x65
  414bf3:	inc    edi
  414bf4:	call   0xe18c:0x371c4eed
  414bfb:	pop    ss
  414bfc:	dec    ebp
  414bfd:	les    esi,FWORD PTR [ebx+0x69d55b5]
  414c03:	in     eax,dx
  414c04:	adc    eax,0x861a1aa1
  414c09:	mov    al,0x2a
  414c0b:	push   edx
  414c0c:	xor    DWORD PTR [esi-0x18],eax
  414c0f:	mov    esi,0xfd1f4b8e
  414c14:	xlat   BYTE PTR ds:[ebx]
  414c16:	ins    BYTE PTR es:[edi],dx
  414c17:	imul   eax,eax,0xffffffe4
  414c1a:	jp     0x414c1e
  414c1c:	sub    ebx,DWORD PTR [ebp+0x6]
  414c1f:	mov    dh,0x6a
  414c21:	xchg   ebp,eax
  414c22:	call   DWORD PTR [edi]
  414c24:	test   al,0xde
  414c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c27:	xchg   edi,eax
  414c28:	into   
  414c29:	jne    0x414c1e
  414c2b:	adc    eax,0x8b72282e
  414c30:	mul    DWORD PTR [eax-0x12]
  414c33:	inc    edx
  414c34:	outs   dx,BYTE PTR ds:[esi]
  414c35:	fcom   DWORD PTR [edx+ecx*1+0xc13eea3]
  414c3c:	adc    ah,BYTE PTR [ebp+0x642f06c7]
  414c42:	(bad)  
  414c44:	(bad)  
  414c46:	jae    0x414c6d
  414c48:	cmp    eax,0x3235e300
  414c4d:	js     0x414cb7
  414c4f:	stos   DWORD PTR es:[edi],eax
  414c50:	sub    esp,ecx
  414c52:	mov    ah,0xaf
  414c54:	not    BYTE PTR ds:0xd0f0f45f
  414c5a:	test   DWORD PTR [esi],esi
  414c5c:	mov    BYTE PTR [edi+0x57],cl
  414c5f:	push   ds
  414c60:	gs ins DWORD PTR es:[edi],dx
  414c62:	push   es
  414c63:	(bad)  
  414c64:	mov    esp,0x8531f4d2
  414c69:	xchg   edx,eax
  414c6a:	inc    edx
  414c6b:	(bad)  
  414c6c:	cli    
  414c6d:	jb     0x414c9a
  414c6f:	mov    ah,0x5f
  414c71:	pushf  
  414c72:	sbb    bl,BYTE PTR [edi+0x52b6c697]
  414c78:	and    dh,BYTE PTR [edi-0x76e29f70]
  414c7e:	mov    esp,0xcd9c05fe
  414c83:	push   ds
  414c84:	test   DWORD PTR [ebx+0x791a2d2a],eax
  414c8a:	int3   
  414c8b:	(bad)
  414c8e:	mov    edx,0xd0e6554b
  414c93:	mov    esi,DWORD PTR [ecx+0x72f1df07]
  414c99:	call   0xd2d01fa5
  414c9e:	mov    edx,0x7f7ec593
  414ca3:	ret    0x5f2d
  414ca6:	xor    eax,0xa5aff931
  414cab:	nop
  414cac:	xor    DWORD PTR [ecx-0x31b55597],ebp
  414cb2:	jns    0x414cfd
  414cb4:	sbb    ebp,esp
  414cb6:	pop    esp
  414cb7:	cmp    al,0x2b
  414cb9:	or     DWORD PTR [ecx],eax
  414cbb:	jmp    0xefc9de0
  414cc0:	enter  0x80fa,0x3e
  414cc4:	push   esp
  414cc5:	fwait
  414cc6:	imul   ebx,DWORD PTR [eax+0x32e79ba2],0x7f
  414ccd:	sahf   
  414cce:	in     al,0xa
  414cd0:	shr    BYTE PTR [edi-0x1d],cl
  414cd3:	sbb    esp,DWORD PTR [esi+0x25ebc0cc]
  414cd9:	leave  
  414cda:	pop    ebx
  414cdb:	vmaxpd ymm0,ymm1,YMMWORD PTR [edi-0x1c311265]
  414ce3:	pop    ebp
  414ce4:	adc    eax,0xdc4c9b6c
  414ce9:	dec    edi
  414cea:	in     eax,dx
  414ceb:	cmp    dl,BYTE PTR [eax+esi*2-0x3ca3ccaf]
  414cf2:	loope  0x414c99
  414cf4:	popf   
  414cf5:	aaa    
  414cf6:	sub    ecx,esp
  414cf8:	push   0xb6b443d7
  414cfd:	cmp    BYTE PTR [esp+edx*1-0x45bfebc8],0x4
  414d05:	add    edx,DWORD PTR [edi+0x7de576e8]
  414d0b:	call   0x990ac2c5
  414d10:	iret   
  414d11:	cs stos BYTE PTR es:[edi],al
  414d13:	aam    0x32
  414d15:	adc    edi,edi
  414d17:	xlat   BYTE PTR ds:[ebx]
  414d18:	lds    ebp,FWORD PTR [edi+0x76]
  414d1b:	repnz xchg esp,eax
  414d1d:	sub    dl,BYTE PTR [ecx+0x60b5d17d]
  414d23:	call   0x6488:0x74959921
  414d2a:	(bad)  
  414d2b:	das    
  414d2c:	aad    0x50
  414d2e:	sti    
  414d2f:	ret    0xe10a
  414d32:	adc    edx,DWORD PTR [esi+0x5e20d2fb]
  414d38:	das    
  414d39:	jecxz  0x414d75
  414d3b:	adc    ebx,DWORD PTR [edx+0x12a67a8c]
  414d41:	cli    
  414d42:	movzx  ecx,BYTE PTR [esi-0x3c72fb1c]
  414d49:	add    eax,ecx
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0x95
  414e02:	inc    ebx
  414e03:	push   ebp
  414e04:	stos   BYTE PTR es:[edi],al
  414e05:	inc    edx
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx-0x2fe7e7ee],dl
  414e0e:	mov    bl,0xfb
  414e10:	daa    
  414e11:	xor    eax,0x88e7cb5b
  414e16:	add    edx,eax
  414e18:	call   DWORD PTR [ebp+eiz*2+0x4c]
  414e1c:	add    cl,bh
  414e1e:	in     eax,dx
  414e1f:	and    eax,0x6ae71153
  414e24:	cli    
  414e25:	imul   eax,DWORD PTR [eax],0x33
  414e28:	cwde   
  414e29:	xor    esi,ecx
  414e2b:	xchg   BYTE PTR [ebp+0x1b],cl
  414e2e:	xor    bh,BYTE PTR [ebx+edx*4-0x3]
  414e32:	cdq    
  414e33:	test   al,0x78
  414e35:	stc    
  414e36:	mov    esp,0xf381a04e
  414e3b:	dec    ebx
  414e3c:	sti    
  414e3d:	js     0x414e3c
  414e3f:	(bad)  
  414e41:	mov    edx,0xe3148bbf
  414e46:	iret   
  414e47:	mov    esi,0xb27c1832
  414e4c:	sbb    dl,cl
  414e4e:	sar    ebp,1
  414e50:	xor    DWORD PTR [ebx+0x60],0xb
  414e54:	cmp    cl,BYTE PTR [edx]
  414e56:	cmp    BYTE PTR [esi],dh
  414e58:	(bad)  
  414e59:	stos   DWORD PTR es:[edi],eax
  414e5a:	bound  eax,QWORD PTR [ecx+0x4a9c490f]
  414e60:	(bad)  
  414e61:	pop    es
  414e62:	sahf   
  414e63:	jp     0x414eb7
  414e65:	xchg   edx,eax
  414e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e67:	fwait
  414e68:	cdq    
  414e69:	sbb    eax,0x7baf7c6
  414e6e:	(bad)  [esi]
  414e70:	sub    BYTE PTR [edi+eax*4],ch
  414e73:	out    0x21,al
  414e75:	fimul  DWORD PTR [edi+0x2c442308]
  414e7b:	lea    esi,[edi-0x3eb44768]
  414e81:	cmp    ebp,DWORD PTR [ebx+eax*2]
  414e84:	mov    ch,BYTE PTR [esi+edx*8+0x46a5aaca]
  414e8b:	sbb    al,0x17
  414e8d:	push   es
  414e8e:	in     eax,dx
  414e8f:	test   DWORD PTR [edi+0x4e],eax
  414e92:	cs out 0x84,eax
  414e95:	sub    al,0x46
  414e97:	mov    edi,DWORD PTR [edx-0x72]
  414e9a:	add    bl,BYTE PTR [edi+ecx*4-0x70b80c62]
  414ea1:	adc    DWORD PTR [edi+0x1b],esp
  414ea4:	jle    0x414ecb
  414ea6:	shl    BYTE PTR [edx+ecx*2],cl
  414ea9:	dec    eax
  414eaa:	dec    edx
  414eab:	cmp    BYTE PTR [edi],0x51
  414eae:	pop    edx
  414eaf:	hlt    
  414eb0:	mov    dl,0x2c
  414eb2:	int3   
  414eb3:	xchg   ebp,eax
  414eb4:	hlt    
  414eb5:	loop   0x414e71
  414eb7:	push   ss
  414eb8:	sbb    eax,0x55c5ceb1
  414ebd:	std    
  414ebe:	lods   eax,DWORD PTR ds:[esi]
  414ebf:	retf   0x55f3
  414ec2:	pop    es
  414ec3:	mov    esp,0xa13a1ea3
  414ec8:	js     0x414ef8
  414eca:	push   esp
  414ecb:	mov    eax,ds:0x17ec103e
  414ed0:	rol    DWORD PTR [edx+0x10c39aeb],0x70
  414ed7:	adc    esi,DWORD PTR ds:0x922db0dd
  414edd:	mov    ebp,0x9f40e744
  414ee2:	ret    
  414ee3:	inc    esp
  414ee4:	inc    ecx
  414ee5:	dec    esp
  414ee6:	xchg   ebx,eax
  414ee7:	cmp    al,0x93
  414ee9:	and    DWORD PTR [esi+0x7f],ebp
  414eec:	sub    DWORD PTR [ecx-0x1e],0x6b
  414ef0:	aaa    
  414ef1:	arpl   WORD PTR [edx-0x61],ax
  414ef4:	mov    WORD PTR [edx+0x3af0848],ss
  414efa:	sub    ch,al
  414efc:	pop    ds
  414efd:	lods   al,BYTE PTR ds:[esi]
  414efe:	and    BYTE PTR [edi-0x4c],dh
  414f01:	inc    ecx
  414f02:	mov    ecx,0x7cb6d77a
  414f07:	dec    esi
  414f08:	sub    DWORD PTR [ecx+0x2b],ecx
  414f0b:	(bad)  
  414f0c:	mov    edi,0xa44bce76
  414f11:	sbb    DWORD PTR [ecx],ebx
  414f13:	lods   eax,DWORD PTR ds:[esi]
  414f14:	std    
  414f15:	dec    ebx
  414f16:	out    0xc4,eax
  414f18:	out    dx,al
  414f19:	(bad)  
  414f1d:	shr    DWORD PTR [ebx],cl
  414f1f:	loop   0x414eec
  414f21:	jae    0x414f4c
  414f23:	lea    eax,[ebp+0x1a35b5c7]
  414f29:	add    eax,edx
  414f2b:	and    ebx,DWORD PTR [edi+0x1c]
  414f2e:	push   cs
  414f2f:	sbb    DWORD PTR [ecx],edx
  414f31:	push   ss
  414f32:	popa   
  414f33:	outs   dx,DWORD PTR ds:[esi]
  414f34:	dec    esi
  414f35:	sub    bl,BYTE PTR [eax-0x591fc79f]
  414f3b:	adc    BYTE PTR [edx+0x20],dh
  414f3e:	sub    BYTE PTR ds:[eax],al
  414f41:	xchg   esp,eax
  414f42:	loop   0x414f32
  414f44:	cld    
  414f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f46:	adc    dl,dl
  414f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f49:	sbb    DWORD PTR [edi-0x7c71c258],ecx
  414f4f:	sbb    BYTE PTR [edx-0x60],ch
  414f52:	aad    0x5b
  414f54:	repz jmp 0x414f87
  414f57:	and    eax,0x125cc386
  414f5c:	mov    bl,0xbc
  414f5e:	aas    
  414f5f:	loop   0x414fbf
  414f61:	lods   eax,DWORD PTR ds:[esi]
  414f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f63:	dec    esi
  414f64:	fwait
  414f65:	pop    edx
  414f66:	(bad)  
  414f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f68:	arpl   WORD PTR [ecx+0x2a],bx
  414f6b:	stos   BYTE PTR es:[edi],al
  414f6c:	gs xchg edx,eax
  414f6e:	pop    ebp
  414f6f:	retf   0x4d65
  414f72:	sbb    DWORD PTR [ebp+eax*2-0x3f0ee05e],esp
  414f79:	sub    al,0xed
  414f7b:	xor    dl,bl
  414f7d:	pop    es
  414f7e:	and    esi,DWORD PTR [ebp+0x24]
  414f81:	add    esp,DWORD PTR [edx-0x27]
  414f84:	dec    dh
  414f86:	(bad)  
  414f87:	push   cs
  414f88:	daa    
  414f89:	jle    0x414f6c
  414f8b:	or     eax,0xfc21b5f
  414f90:	mov    edi,0xed4d5509
  414f95:	cmc    
  414f96:	jae    0x414f2c
  414f98:	mov    ebp,0x50fc110f
  414f9d:	iret   
  414f9e:	or     eax,0xfb791d82
  414fa3:	pop    eax
  414fa4:	ror    DWORD PTR [eax+ecx*2-0x3509804b],0xef
  414fac:	jb     0x41500c
  414fae:	mov    bl,0x1a
  414fb1:	adc    al,0x39
  414fb3:	iret   
  414fb4:	stc    
  414fb5:	iret   
  414fb6:	cmp    eax,0x4f66cc25
  414fbb:	fldcw  WORD PTR [edi+esi*2+0x35]
  414fbf:	push   ds
  414fc0:	test   al,0x49
  414fc2:	outs   dx,BYTE PTR ds:[esi]
  414fc3:	pop    esi
  414fc4:	add    DWORD PTR [eax],edi
  414fc6:	sbb    DWORD PTR fs:[esi-0x608b2b3b],0xffffffae
  414fce:	fwait
  414fcf:	ja     0x414f92
  414fd1:	xlat   BYTE PTR ds:[ebx]
  414fd2:	pop    esp
  414fd3:	pop    ecx
  414fd4:	adc    esi,ecx
  414fd6:	icebp  
  414fd7:	das    
  414fd8:	fbld   TBYTE PTR [edx]
  414fda:	xchg   edx,eax
  414fdb:	(bad)  
  414fdd:	nop
  414fde:	cmp    bl,BYTE PTR [ebp+0x74]
  414fe1:	jno    0x414f84
  414fe3:	and    al,0xfe
  414fe5:	(bad)  
  414fe6:	sub    eax,0xc8f6895c
  414feb:	lods   eax,DWORD PTR ds:[esi]
  414fec:	mov    edx,0x24b053dd
  414ff1:	leave  
  414ff2:	pop    es
  414ff3:	fidiv  DWORD PTR [ebp+0x5b026ca9]
  414ff9:	adc    ebp,DWORD PTR [bx+si+0x72]
  414ffd:	mov    dh,0x4b
  414fff:	adc    cl,ah
  415001:	ret    
  415002:	(bad)  
  415003:	(bad)  
  415005:	or     al,0x3c
  415007:	inc    eax
  415008:	std    
  415009:	ror    DWORD PTR [eax+0x8],0xcd
  41500d:	mul    ch
  41500f:	mov    fs,WORD PTR [eax]
  415011:	mov    eax,DWORD PTR [esi-0x7d]
  415014:	mov    bl,0x3a
  415016:	int3   
  415017:	mov    esi,0x283b2ebb
  41501c:	stos   BYTE PTR es:[edi],al
  41501d:	ret    0x3729
  415020:	cli    
  415021:	xor    dh,al
  415023:	dec    ebp
  415024:	(bad)  
  415025:	adc    bh,bh
  415027:	or     cl,BYTE PTR [edi-0x3d]
  41502a:	mov    esi,0xa902f45c
  41502f:	jmp    0xe6c:0x2fa561af
  415036:	ret    
  415037:	daa    
  415038:	nop
  415039:	xor    eax,0x50fce388
  41503e:	lock pushf 
  415040:	fsubr  st,st(5)
  415042:	sahf   
  415043:	jecxz  0x4150c4
  415045:	mov    cl,0xa1
  415047:	addr16 jno 0x415063
  41504a:	xchg   ecx,eax
  41504b:	jp     0x415006
  41504d:	ror    BYTE PTR ds:0xc844fb70,cl
  415053:	jne    0x41501d
  415055:	mov    ds:0x427c28c2,eax
  41505a:	mov    edi,0xb5ca7568
  41505f:	es test al,0xf
  415062:	push   esp
  415063:	pop    ecx
  415064:	mov    edx,0x2401b996
  415069:	cwde   
  41506a:	push   esp
  41506b:	cmp    eax,0xec7d4798
  415070:	add    ecx,DWORD PTR [eax]
  415072:	dec    edi
  415073:	adc    DWORD PTR [eax+0x584f54f1],esp
  415079:	xchg   bh,ah
  41507b:	mov    dh,0xe8
  41507d:	call   0xdef:0xc3c838ab
  415084:	jno    0x415070
  415086:	fnsave [eax+0x63]
  415089:	lods   eax,DWORD PTR ds:[esi]
  41508a:	pop    edx
  41508b:	retf   0x879f
  41508e:	call   0xa57eaae1
  415093:	inc    ecx
  415094:	sbb    edx,edx
  415096:	(bad)  
  415097:	(bad)  
  415098:	cmp    eax,0xab82da3c
  41509d:	and    DWORD PTR [esi],ebx
  41509f:	mov    edi,0x950b28fe
  4150a4:	xlat   BYTE PTR ds:[ebx]
  4150a5:	cmp    DWORD PTR [esi],0xffffffc6
  4150a8:	inc    ebp
  4150a9:	pop    esp
  4150aa:	and    al,0x25
  4150ac:	jo     0x4150ff
  4150ae:	stos   DWORD PTR es:[edi],eax
  4150af:	mov    dl,0x74
  4150b1:	dec    edx
  4150b2:	out    dx,al
  4150b3:	jo     0x4150d5
  4150b5:	dec    ebp
  4150b6:	loope  0x41508f
  4150b8:	lahf   
  4150b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150bb:	hlt    
  4150bc:	aaa    
  4150bd:	push   edx
  4150be:	stos   BYTE PTR es:[edi],al
  4150bf:	loope  0x41508f
  4150c1:	xor    eax,DWORD PTR [ebp-0xe4e6a42]
  4150c7:	fsub   st(4),st
  4150c9:	dec    ecx
  4150ca:	retf   0x9a26
  4150cd:	mov    al,ds:0x1ff5bd91
  4150d2:	pop    esp
  4150d3:	sub    DWORD PTR [eax+0x3597055],edi
  4150d9:	das    
  4150da:	pop    eax
  4150db:	push   ebx
  4150dc:	fst    st(7)
  4150de:	aas    
  4150df:	cmp    al,0xc1
  4150e1:	jae    0x4150bf
  4150e3:	xor    eax,0xc4207377
  4150e8:	addr16 ret 0x12cd
  4150ec:	xchg   ebx,eax
  4150ed:	xor    eax,DWORD PTR [ecx]
  4150ef:	jmp    0x54e0682c
  4150f4:	xor    ebp,DWORD PTR [edi]
  4150f6:	or     eax,0x5a697c2f
  4150fb:	or     al,0x97
  4150fd:	jbe    0x4150fe
  4150ff:	and    al,0x54
  415101:	sbb    ebp,DWORD PTR [ebx]
  415103:	pop    ds
  415104:	bound  ebx,QWORD PTR [ecx]
  415106:	clts   
  415108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415109:	mov    WORD PTR [edi+eax*8-0x3d0688a7],?
  415110:	xor    eax,0x903db7e1
  415115:	ret    
  415116:	fisttp DWORD PTR [ecx+ebp*1-0x42b9c143]
  41511d:	push   ecx
  41511e:	les    ebp,FWORD PTR [edx+0x501c539d]
  415124:	repz jmp 0xa502:0x17c08fda
  41512c:	sar    BYTE PTR ds:0x2b6fa09a,1
  415132:	rcl    bl,cl
  415134:	xchg   esp,eax
  415135:	jmp    0x5035:0x3cd8eecf
  41513c:	pop    DWORD PTR [edx+0x6b]
  41513f:	mov    ebp,0x15ca133
  415144:	add    dh,BYTE PTR [eax]
  415146:	sub    eax,0x96a80b23
  41514b:	nop
  41514c:	push   ebp
  41514d:	repnz push edi
  41514f:	rcr    ebp,1
  415151:	push   ds
  415152:	mov    ch,0x16
  415154:	pop    es
  415155:	repz and ah,BYTE PTR [eax]
  415158:	cmp    BYTE PTR [ebp+0x100745ba],bh
  41515e:	push   0xfffffff2
  415160:	sub    ebx,DWORD PTR [edi-0x3e]
  415163:	push   ebp
  415164:	pusha  
  415165:	sub    DWORD PTR [ebx+0x3a],ebx
  415168:	xor    BYTE PTR [ebp-0x5c6704c3],dl
  41516e:	ja     0x4151d6
  415170:	mov    bh,0xc4
  415172:	jp     0x4151df
  415174:	ror    ch,cl
  415176:	mov    eax,0xea3d4ecf
  41517b:	xchg   edi,eax
  41517c:	out    dx,eax
  41517d:	mov    BYTE PTR fs:[esi],0xa0
  415181:	pop    eax
  415182:	outs   dx,DWORD PTR ds:[esi]
  415183:	xchg   BYTE PTR [ecx+0x5e],bl
  415186:	das    
  415187:	mov    esi,0xfd5a701d
  41518c:	jg     0x415190
  41518e:	mov    dl,0xe
  415190:	(bad)
  415194:	mov    BYTE PTR [esi-0xb950cf1],ch
  41519a:	pop    ebx
  41519b:	xchg   edx,eax
  41519c:	cmp    dh,dl
  41519e:	mov    eax,ds:0x21182142
  4151a3:	xchg   esi,eax
  4151a4:	stos   DWORD PTR es:[edi],eax
  4151a5:	rol    DWORD PTR [ebx+0x6d],cl
  4151a8:	dec    esp
  4151a9:	and    al,dh
  4151ab:	adc    eax,0xdfb6982e
  4151b0:	dec    eax
  4151b1:	jo     0x415168
  4151b3:	test   DWORD PTR [eax-0x65e5ed46],0x32cb13a0
  4151bd:	(bad)  
  4151be:	scas   eax,DWORD PTR es:[edi]
  4151bf:	fsub   st(5),st
  4151c1:	sub    esp,DWORD PTR [ebx+edx*1]
  4151c4:	std    
  4151c5:	inc    edx
  4151c6:	fdivr  st(2),st
  4151c8:	inc    esp
  4151c9:	in     eax,dx
  4151ca:	or     eax,esi
  4151cc:	push   esi
  4151cd:	jbe    0x41521e
  4151cf:	cdq    
  4151d0:	fcmovnbe st,st(1)
  4151d2:	inc    ecx
  4151d3:	xor    BYTE PTR [ebx+0x29142454],cl
  4151d9:	or     BYTE PTR [ecx],bl
  4151db:	push   eax
  4151dc:	add    al,0x8b
  4151de:	inc    esp
  4151df:	and    al,0xc
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi+0x617e1b8c]
  415305:	pushf  
  415306:	cmp    edi,DWORD PTR [esi+0x18160ebc]
  41530c:	mov    ch,0x12
  41530e:	sbb    BYTE PTR [eax],bl
  415310:	pusha  
  415311:	dec    ebx
  415312:	test   al,0xf6
  415314:	pop    esp
  415315:	or     eax,0xd2c2bcff
  41531a:	dec    esp
  41531b:	pop    ecx
  41531c:	leave  
  41531d:	inc    ebp
  41531e:	scas   eax,DWORD PTR es:[edi]
  41531f:	xor    al,0x28
  415321:	sub    cl,BYTE PTR gs:[ebp+0x190d41af]
  415328:	cmp    al,0xf9
  41532a:	or     edi,DWORD PTR [esi+0xc]
  41532d:	outs   dx,BYTE PTR ds:[esi]
  41532e:	stc    
  41532f:	xchg   esp,eax
  415330:	bound  ecx,QWORD PTR [edx+0x5e]
  415333:	(bad)  
  415334:	imul   eax,esi,0xc311d57
  41533a:	and    ah,bh
  41533c:	or     eax,0x678753bb
  415341:	dec    ebx
  415342:	sub    al,BYTE PTR [ebp*8-0x136ed410]
  415349:	scas   al,BYTE PTR es:[edi]
  41534a:	loop   0x41531d
  41534c:	add    eax,0xb31a3aa1
  415351:	jecxz  0x4153ba
  415353:	scas   eax,DWORD PTR es:[edi]
  415354:	push   0xffffffc5
  415356:	xchg   ebp,eax
  415357:	pop    ecx
  415358:	jne    0x415331
  41535a:	shr    DWORD PTR [edx],0xca
  41535d:	jmp    DWORD PTR [ecx]
  41535f:	shl    BYTE PTR [edi+0x553c6b83],cl
  415365:	fimul  WORD PTR [ebx]
  415367:	mov    dl,0xd
  415369:	or     DWORD PTR [ebp-0x49],esi
  41536c:	scas   al,BYTE PTR es:[edi]
  41536d:	ss (bad) 
  41536f:	stos   BYTE PTR es:[edi],al
  415370:	in     eax,dx
  415371:	call   FWORD PTR [esp+edi*1]
  415374:	sti    
  415375:	mov    esi,0xa546a4f6
  41537a:	cmp    ebx,ebx
  41537c:	aaa    
  41537d:	sbb    DWORD PTR [ecx+0x47],esp
  415380:	push   edx
  415381:	enter  0x8f97,0x83
  415385:	cmp    BYTE PTR ds:0xf265cb11,0x51
  41538c:	cwde   
  41538d:	dec    esi
  41538e:	or     ebx,DWORD PTR [eax+eiz*4+0x1645c13d]
  415395:	and    BYTE PTR [edx+ebp*4],cl
  415398:	das    
  415399:	xchg   DWORD PTR [edx+0x37],eax
  41539c:	inc    edi
  41539d:	cmp    eax,0x49dec845
  4153a2:	aas    
  4153a3:	pop    es
  4153a4:	jbe    0x4153c1
  4153a6:	mov    cl,0x7b
  4153a8:	mov    dh,0x47
  4153aa:	les    ecx,FWORD PTR [edx+0x44940772]
  4153b0:	mov    edx,0xea984c7a
  4153b5:	jnp    0x41536a
  4153b7:	pop    ebp
  4153b8:	adc    eax,0x5682ebd
  4153bd:	mov    BYTE PTR [esp+edx*1-0x29],al
  4153c1:	lods   al,BYTE PTR ds:[esi]
  4153c2:	bound  eax,QWORD PTR [esi+0x7a]
  4153c5:	ficomp DWORD PTR [esi+edx*2+0x15769a24]
  4153cc:	jge    0x41534f
  4153ce:	popa   
  4153cf:	adc    ebp,DWORD PTR [edi]
  4153d1:	mov    al,0xf8
  4153d3:	pop    ds
  4153d4:	mov    bl,BYTE PTR [eax+0x2d6018d6]
  4153da:	cs cmc 
  4153dc:	cld    
  4153dd:	mov    bh,0x24
  4153df:	in     al,0x1c
  4153e1:	push   esi
  4153e2:	and    al,0x4d
  4153e4:	pop    esp
  4153e5:	and    eax,0x89606557
  4153ea:	xchg   edx,eax
  4153eb:	xor    BYTE PTR [eax-0x793c4d13],cl
  4153f1:	mov    WORD PTR [eax+0x17],gs
  4153f4:	adc    esi,DWORD PTR [ecx-0x4a976ce4]
  4153fa:	in     al,0x30
  4153fc:	adc    bh,BYTE PTR ds:0x607193f6
  415402:	mov    cl,0x65
  415404:	in     eax,0x20
  415406:	aas    
  415407:	adc    edx,esp
  415409:	into   
  41540a:	fidiv  DWORD PTR ds:[edi+esi*4-0x26]
  41540f:	xchg   ebx,eax
  415410:	push   es
  415411:	dec    eax
  415412:	fbld   TBYTE PTR [esi+eax*2+0x2]
  415416:	or     DWORD PTR [esi],0xcf9cb058
  41541c:	sub    DWORD PTR ds:0x14e80f9e,esi
  415422:	mov    dh,0x0
  415424:	mov    ah,0xd2
  415426:	mov    DWORD PTR [ebx+0x2b5a1874],eax
  41542c:	ds dec ecx
  41542e:	les    ebp,FWORD PTR [ebp+0x3d]
  415431:	retf   
  415432:	iret   
  415433:	adc    bh,BYTE PTR [ecx+edi*8-0x4d]
  415437:	xor    edx,DWORD PTR [edi]
  415439:	test   eax,0xfe9412bd
  41543e:	jl     0x415418
  415440:	in     eax,0x8f
  415442:	fldcw  WORD PTR [eax-0x73da319c]
  415448:	add    bh,BYTE PTR [eiz*4-0xa7f8409]
  41544f:	or     eax,0xfe3ccc8b
  415454:	sub    DWORD PTR [ecx-0x314644cc],esi
  41545a:	mov    ?,WORD PTR [eax]
  41545c:	pop    ss
  41545d:	lods   al,BYTE PTR ds:[esi]
  41545e:	cli    
  41545f:	jne    0x415421
  415461:	pop    esi
  415462:	xor    BYTE PTR [ecx+0x3a6925f7],bl
  415468:	lea    ecx,[edx]
  41546a:	inc    esp
  41546b:	xchg   ebp,eax
  41546c:	fsubr  QWORD PTR [esi-0x60]
  41546f:	outs   dx,BYTE PTR ds:[esi]
  415470:	lock adc DWORD PTR [ebx],esi
  415473:	push   ds
  415474:	(bad)  
  415475:	pop    edx
  415476:	push   ss
  415477:	mov    edi,0x8385a265
  41547c:	pop    esp
  41547d:	ret    
  41547e:	pusha  
  41547f:	sub    al,0xab
  415481:	sbb    ebx,ecx
  415483:	div    BYTE PTR [ebx]
  415485:	ret    0x16a8
  415488:	inc    ecx
  415489:	std    
  41548a:	push   ebp
  41548b:	loop   0x415488
  41548d:	inc    ebp
  41548e:	leave  
  41548f:	out    dx,al
  415490:	jne    0x415454
  415492:	add    ch,BYTE PTR [edi-0x9]
  415495:	(bad)  
  415496:	mov    ebp,0xa26da461
  41549b:	push   eax
  41549c:	pop    esp
  41549d:	jecxz  0x4154f3
  41549f:	fs sbb bh,bl
  4154a2:	neg    BYTE PTR [ecx]
  4154a4:	int    0x1
  4154a6:	mov    ecx,esi
  4154a8:	(bad)  
  4154a9:	pop    ecx
  4154aa:	xchg   ebp,eax
  4154ab:	stos   BYTE PTR es:[edi],al
  4154ac:	loop   0x415465
  4154ae:	movzx  edi,WORD PTR [ecx+0x60]
  4154b2:	push   eax
  4154b3:	xchg   edi,eax
  4154b4:	push   edi
  4154b5:	fcomi  st,st(2)
  4154b7:	int    0x6a
  4154b9:	pop    ds
  4154ba:	retf   
  4154bb:	shl    BYTE PTR [edi+0x5db96c9d],1
  4154c1:	jb     0x415518
  4154c3:	mov    ecx,DWORD PTR [edi-0x151e069]
  4154c9:	mov    ah,0x48
  4154cb:	and    al,0x80
  4154cd:	in     eax,0xf9
  4154cf:	sub    BYTE PTR [esi-0x245e1a71],bh
  4154d5:	xlat   BYTE PTR ds:[ebx]
  4154d6:	push   ss
  4154d7:	jmp    0xbad36aca
  4154dc:	in     al,dx
  4154dd:	mov    cl,BYTE PTR [edi]
  4154df:	mov    al,0x95
  4154e1:	push   DWORD PTR [ecx-0x6371d331]
  4154e7:	cmp    bl,al
  4154e9:	cmc    
  4154ea:	push   ecx
  4154eb:	mov    edi,ebx
  4154ed:	sbb    al,0xfd
  4154ef:	mov    dl,0x3e
  4154f1:	iret   
  4154f2:	mov    edx,0x7ae86184
  4154f7:	push   cs
  4154f8:	adc    ah,BYTE PTR [ecx+0x3527dbdc]
  4154fe:	sub    eax,0x91ab3063
  415503:	xor    dl,0x3a
  415506:	fimul  DWORD PTR [ebx]
  415508:	cmp    al,0x27
  41550a:	push   0x5b
  41550c:	or     dh,dh
  41550e:	jge    0x41554d
  415510:	inc    ebx
  415511:	mov    al,0x44
  415513:	ins    BYTE PTR es:[edi],dx
  415514:	das    
  415515:	sti    
  415516:	pusha  
  415517:	push   ds
  415518:	sbb    edi,DWORD PTR [ebp+0x10]
  41551b:	shl    DWORD PTR [ebx+edi*8],0x64
  41551f:	inc    esi
  415520:	mov    WORD PTR [edi+eiz*4-0x16],ds
  415524:	addr16 push eax
  415526:	fild   QWORD PTR [esi-0x71]
  415529:	mov    ah,0x84
  41552b:	sbb    eax,0x9401e3b1
  415530:	shl    edx,0x94
  415533:	pop    ebp
  415534:	stc    
  415535:	and    cl,BYTE PTR [ebx-0x67]
  415538:	cmp    dl,dl
  41553a:	mov    eax,ds:0x641c5c11
  41553f:	fdivr  DWORD PTR [edi+edx*8+0x12]
  415543:	cli    
  415544:	mov    BYTE PTR [ebx+ecx*8],dh
  415547:	gs (bad) 
  415549:	cmc    
  41554a:	mov    ds:0xcc2e46d3,eax
  41554f:	test   DWORD PTR [eax],esi
  415551:	(bad)  ds:0x31d59d1c
  415557:	pop    esi
  415558:	clc    
  415559:	xchg   DWORD PTR [esi],ebx
  41555b:	push   0xffffffb2
  41555d:	ins    DWORD PTR es:[edi],dx
  41555e:	mov    esp,0xe2c97f0
  415563:	sub    al,0x43
  415565:	pop    esi
  415566:	and    dh,BYTE PTR ds:0xd347928
  41556c:	dec    ecx
  41556d:	mov    ds:0x2e8e2e99,eax
  415572:	jp     0x415500
  415574:	add    al,BYTE PTR [ebp+0x5d9e6743]
  41557a:	shr    BYTE PTR [ebx-0x55e2053],0x7f
  415581:	cmp    al,0x84
  415583:	or     al,0x3
  415585:	mov    dl,BYTE PTR [ecx+0x66]
  415588:	pop    ebx
  415589:	pop    ecx
  41558a:	sbb    cl,BYTE PTR [ecx+0x4b]
  41558d:	mov    esp,?
  41558f:	and    DWORD PTR [edi],edx
  415591:	out    0xca,eax
  415593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415594:	adc    esp,DWORD PTR [ecx+eiz*1]
  415597:	retf   
  415598:	adc    DWORD PTR [esi],edx
  41559a:	stos   BYTE PTR es:[edi],al
  41559b:	mov    al,0x33
  41559d:	adc    al,0x92
  41559f:	and    edx,DWORD PTR ds:0xb5af9e7a
  4155a5:	dec    ecx
  4155a6:	jle    0x41554c
  4155a8:	(bad)  
  4155a9:	sub    eax,0x961d77ed
  4155ae:	cwde   
  4155af:	jmp    0x27a5501c
  4155b4:	or     BYTE PTR [ebx],0x57
  4155b7:	aam    0x23
  4155b9:	lahf   
  4155ba:	pop    eax
  4155bb:	ficom  DWORD PTR [eax+0x69]
  4155be:	cmp    al,0x72
  4155c0:	das    
  4155c1:	push   es
  4155c2:	outs   dx,DWORD PTR ds:[esi]
  4155c3:	xchg   ebx,eax
  4155c4:	inc    esp
  4155c5:	in     eax,0x46
  4155c7:	xchg   esp,eax
  4155c8:	adc    al,0x19
  4155ca:	fnsave cs:[edi+0x575339f8]
  4155d1:	stos   DWORD PTR es:[edi],eax
  4155d2:	std    
  4155d3:	or     ebp,ebp
  4155d5:	loope  0x41564d
  4155d7:	cmp    DWORD PTR [eax],esi
  4155d9:	mov    al,0xca
  4155db:	mov    cl,0xa5
  4155dd:	in     al,dx
  4155de:	pop    es
  4155df:	loopne 0x415651
  4155e1:	scas   al,BYTE PTR es:[edi]
  4155e2:	cmp    al,0x76
  4155e4:	jo     0x415589
  4155e6:	fldenv [eax+0x1d]
  4155e9:	inc    esp
  4155ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155eb:	push   edi
  4155ec:	push   ds
  4155ed:	and    ecx,DWORD PTR [eax+0x72]
  4155f0:	mov    eax,ds:0x97114c42
  4155f5:	push   edx
  4155f6:	(bad)  
  4155f7:	test   DWORD PTR [ecx+0x73],eax
  4155fa:	ins    DWORD PTR es:[edi],dx
  4155fb:	push   ebx
  4155fc:	inc    esp
  4155fd:	push   es
  4155fe:	adc    eax,0x3e5d022e
  415603:	xchg   edx,eax
  415604:	and    ebx,DWORD PTR [ecx-0x5e]
  415607:	jne    0x4155f6
  415609:	aas    
  41560a:	or     DWORD PTR [edx],edx
  41560c:	iret   
  41560d:	sti    
  41560e:	xor    DWORD PTR [edi],ebp
  415610:	fnstenv [ecx+0x2ffd516d]
  415616:	mov    edx,0x60fb823f
  41561b:	in     eax,dx
  41561c:	imul   ebx,eax,0x2e9b89c
  415622:	jae    0x415678
  415624:	sub    edx,esp
  415626:	inc    ebp
  415627:	je     0x4155af
  415629:	mov    al,0x91
  41562b:	pop    ebx
  41562c:	inc    eax
  41562d:	imul   edx,DWORD PTR [ebx+0x4a],0xffffffb4
  415631:	mov    cl,0xb5
  415633:	inc    ebp
  415634:	lahf   
  415635:	xchg   edx,eax
  415636:	and    eax,0xe350c5a3
  41563b:	push   ss
  41563c:	pop    esp
  41563d:	cld    
  41563e:	es cli 
  415640:	dec    eax
  415641:	push   ecx
  415642:	in     eax,dx
  415643:	lods   eax,DWORD PTR ds:[esi]
  415644:	mov    dh,0x14
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x4156e3
  41567f:	xlat   BYTE PTR ds:[ebx]
  415680:	int    0x70
  415682:	pop    eax
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp-0x71e7e7ee],dh
  41568b:	out    0xdc,eax
  41568d:	xor    BYTE PTR [esi-0x50a75e16],al
  415693:	inc    ebx
  415694:	adc    eax,0x5affbc77
  415699:	ss fs sar cl,cl
  41569d:	(bad)  
  41569e:	out    dx,eax
  41569f:	cmp    DWORD PTR [eax+0x1e6391e2],eax
  4156a5:	mov    ah,0x17
  4156a7:	cmp    cl,0x5a
  4156aa:	xchg   ch,dl
  4156ac:	xlat   BYTE PTR ds:[bx]
  4156ae:	(bad)  
  4156af:	(bad)  
  4156b0:	out    0x76,al
  4156b2:	push   ecx
  4156b3:	xor    al,BYTE PTR [ecx+0x12]
  4156b6:	hlt    
  4156b7:	stos   DWORD PTR es:[edi],eax
  4156b8:	enter  0xadb6,0x0
  4156bc:	fnstenv [ecx+0x1d]
  4156bf:	stos   DWORD PTR es:[edi],eax
  4156c0:	or     bh,BYTE PTR [ebx+ebx*4]
  4156c3:	stos   DWORD PTR es:[edi],eax
  4156c4:	inc    esp
  4156c5:	push   cs
  4156c6:	mov    ds:0x4340c4f2,al
  4156cb:	hlt    
  4156cc:	imul   edx,DWORD PTR [ebx+ebx*2-0x28a638ca],0xffffffd2
  4156d4:	jp     0x4156f5
  4156d6:	inc    edx
  4156d7:	lahf   
  4156d8:	out    dx,eax
  4156d9:	ret    0xc75d
  4156dc:	xor    BYTE PTR [ecx-0x22ccc652],ah
  4156e2:	loop   0x41568c
  4156e4:	mov    bh,0x56
  4156e6:	(bad)  
  4156e7:	mov    ds:0xa00c0da9,al
  4156ec:	pop    eax
  4156ed:	mov    edx,0x1da7fd96
  4156f2:	sub    BYTE PTR [ebx-0x3],bh
  4156f5:	push   0xf
  4156f7:	fs ret 0x6ffa
  4156fb:	test   al,0xc7
  4156fd:	imul   esp,DWORD PTR [eax],0x4fb5793b
  415703:	pop    ss
  415704:	inc    edx
  415705:	jge    0x4156dd
  415707:	bound  ecx,QWORD PTR [esi]
  415709:	jb     0x415711
  41570b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41570c:	add    bh,BYTE PTR [eax+0x2e5ed816]
  415712:	jg     0x4156c2
  415714:	mov    ebx,0x5a36f275
  415719:	test   al,0x31
  41571b:	adc    bh,BYTE PTR [edx-0x80]
  41571e:	xchg   esi,eax
  41571f:	loope  0x4156b4
  415721:	mov    ch,0xc6
  415723:	or     eax,DWORD PTR [esi-0x72d67df4]
  415729:	dec    ebp
  41572a:	(bad)  
  41572b:	fist   WORD PTR [esi]
  41572d:	pop    ss
  41572e:	lea    eax,[edx+0x7]
  415731:	mov    WORD PTR [eax+0x69],ss
  415734:	xor    esp,eax
  415736:	stos   DWORD PTR es:[edi],eax
  415737:	dec    BYTE PTR [edx-0x35]
  41573a:	push   edi
  41573b:	xor    eax,0xd9afe1d4
  415740:	push   cs
  415741:	scas   eax,DWORD PTR es:[edi]
  415742:	loope  0x415764
  415744:	cld    
  415745:	pop    es
  415746:	pushf  
  415747:	out    dx,eax
  415748:	sbb    BYTE PTR [esi+0x3],ah
  41574b:	int3   
  41574c:	js     0x4157bd
  41574e:	sahf   
  41574f:	int3   
  415750:	int3   
  415751:	push   ss
  415752:	xchg   BYTE PTR [edi],bh
  415754:	push   eax
  415755:	jb     0x4157c6
  415757:	shl    dh,0x39
  41575a:	ja     0x4157a0
  41575c:	(bad)  
  41575f:	mov    dl,0x80
  415761:	or     DWORD PTR [esp+eiz*2-0x4f],0xffffffc5
  415766:	rcl    cl,1
  415768:	icebp  
  415769:	pop    ecx
  41576a:	aaa    
  41576b:	pop    edi
  41576c:	sub    al,0x87
  41576e:	ret    0x909
  415771:	outs   dx,BYTE PTR ds:[esi]
  415773:	push   ds
  415774:	jp     0x41571f
  415776:	mov    ebx,0x2aedc3a0
  41577b:	mov    edx,edx
  41577d:	sbb    DWORD PTR [esi+0x691c4e7b],ebp
  415783:	inc    edx
  415784:	mov    dl,0x9
  415786:	mov    eax,cs
  415788:	and    ah,al
  41578a:	jo     0x41578b
  41578c:	fwait
  41578d:	mov    ch,0x78
  41578f:	push   edi
  415790:	mov    cl,0x46
  415792:	cs xor al,0x2b
  415795:	cwde   
  415796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415797:	(bad)  
  415798:	out    dx,al
  415799:	mov    ebx,0x612de745
  41579e:	in     ax,dx
  4157a0:	xchg   DWORD PTR [edi+0x75],edx
  4157a3:	mov    ds:0x155dab2b,al
  4157a8:	mov    bl,0x9e
  4157aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157ab:	ret    
  4157ac:	sbb    BYTE PTR [edi-0x20ec8d93],dl
  4157b2:	gs repz push 0xb4d3ab51
  4157b9:	dec    esi
  4157ba:	ja     0x4157db
  4157bc:	jno    0x415751
  4157be:	dec    eax
  4157bf:	sbb    eax,0x434abeca
  4157c4:	stc    
  4157c5:	aad    0xdb
  4157c7:	jl     0x415760
  4157c9:	fidiv  DWORD PTR [edi-0x1d0b3f7f]
  4157cf:	mov    edi,DWORD PTR [ebx+eiz*4+0x5e]
  4157d3:	sbb    DWORD PTR [ecx],ebx
  4157d5:	mov    ds:0xf9499086,eax
  4157da:	sbb    dl,cl
  4157dc:	lds    eax,FWORD PTR [ebp-0x3c]
  4157df:	pop    ebp
  4157e0:	mov    cl,0xeb
  4157e2:	ror    BYTE PTR [ebp-0x21],1
  4157e5:	or     al,0xa6
  4157e7:	sbb    DWORD PTR [ebp+edx*2+0x69],ecx
  4157eb:	retf   
  4157ec:	jge    0x4157c4
  4157ee:	aaa    
  4157ef:	les    edx,FWORD PTR [ebx-0x8]
  4157f2:	or     BYTE PTR [eax+edx*8],dl
  4157f5:	out    dx,eax
  4157f6:	sbb    edx,DWORD PTR [esi+0x72]
  4157f9:	mov    BYTE PTR [eax-0x30016dfc],ah
  4157ff:	cs pop ds
  415801:	dec    ebx
  415802:	jecxz  0x415883
  415804:	cmp    edi,DWORD PTR [edx+0x1048544a]
  41580a:	fcomp  DWORD PTR [ebx]
  41580c:	xchg   esp,eax
  41580d:	cmp    BYTE PTR [esi+esi*2-0x1e],0xe
  415812:	test   eax,0x1b0b53c5
  415817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415818:	pop    ds
  415819:	adc    ebp,ebp
  41581b:	jo     0x41584b
  41581d:	xchg   ecx,eax
  41581e:	mov    dh,0x21
  415820:	dec    edi
  415821:	sbb    DWORD PTR [ecx+0x4448603d],0x1eaefad9
  41582b:	in     al,dx
  41582c:	add    al,0x50
  41582e:	dec    ebp
  41582f:	push   edi
  415830:	xchg   edi,eax
  415831:	inc    ecx
  415832:	mov    edi,0xa3c461c6
  415837:	pop    esi
  415838:	fistp  DWORD PTR [ecx-0x465a303c]
  41583e:	pop    es
  41583f:	int    0xaa
  415841:	pushf  
  415842:	stos   DWORD PTR es:[edi],eax
  415843:	add    al,0x5
  415845:	jno    0x4157db
  415847:	adc    eax,DWORD PTR [edi+0x1a]
  41584a:	inc    esp
  41584b:	mov    ebx,DWORD PTR [ecx]
  41584d:	push   ebp
  41584e:	mov    ecx,0x56c4533a
  415853:	cmp    ah,BYTE PTR [esi]
  415855:	call   0xa8ac:0x56b76ebb
  41585c:	out    dx,al
  41585d:	xor    ebp,DWORD PTR [ebx-0x284f5af2]
  415863:	or     al,0x5b
  415865:	ret    
  415866:	mov    esi,0xebbd7314
  41586b:	ins    BYTE PTR es:[edi],dx
  41586c:	vunpckhpd xmm0,xmm6,XMMWORD PTR [ecx+esi*4-0x4a1d7906]
  415875:	rcr    BYTE PTR [ebx+esi*2],cl
  415878:	xor    ebx,DWORD PTR [ebp-0x7cfc2ee0]
  41587e:	vpshab ymm9,[eax],xmm6
  415883:	mov    al,0xd1
  415885:	pop    ss
  415886:	jne    0x41583c
  415888:	inc    edi
  415889:	in     al,0x97
  41588b:	sub    ecx,DWORD PTR [esi]
  41588d:	repz gs inc esp
  415890:	mov    eax,0x32b094f5
  415895:	dec    esi
  415896:	pop    edx
  415897:	test   eax,esp
  415899:	ficomp DWORD PTR [eax-0x516c0203]
  41589f:	mov    al,0xdf
  4158a1:	cdq    
  4158a2:	mov    ds:0x400aa83e,eax
  4158a7:	jg     0x4158dd
  4158a9:	dec    ecx
  4158aa:	and    al,0x18
  4158ac:	cmc    
  4158ad:	cmc    
  4158ae:	push   edx
  4158af:	sub    BYTE PTR [esp+esi*1],ch
  4158b2:	cmp    ch,al
  4158b4:	add    eax,0x6e268a2c
  4158b9:	jno    0x415870
  4158bb:	cdq    
  4158bc:	loope  0x4158d3
  4158be:	push   eax
  4158bf:	ret    0x84f5
  4158c2:	adc    edx,DWORD PTR [edx]
  4158c4:	(bad)  
  4158c5:	mov    ecx,0xfe4ca79a
  4158ca:	mov    bl,0x98
  4158cc:	push   ecx
  4158cd:	add    dh,BYTE PTR [edi-0x9]
  4158d0:	stos   BYTE PTR es:[edi],al
  4158d1:	mov    bh,0xe6
  4158d3:	ins    BYTE PTR es:[edi],dx
  4158d4:	adc    BYTE PTR [ecx-0x14],dl
  4158d7:	fbstp  TBYTE PTR [ebp+0x469b1f0f]
  4158dd:	cld    
  4158de:	int3   
  4158df:	dec    ecx
  4158e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158e1:	push   ebx
  4158e2:	scas   eax,DWORD PTR es:[edi]
  4158e3:	stc    
  4158e4:	cwde   
  4158e5:	cmp    DWORD PTR [esi],ebp
  4158e7:	push   edi
  4158e8:	mov    dl,0xce
  4158ea:	shr    BYTE PTR [ebx+0x10848a3a],cl
  4158f0:	mov    ebx,0xc7acee6f
  4158f5:	and    al,0xf4
  4158f7:	jae    0x415967
  4158f9:	adc    BYTE PTR [eax-0x238e790d],ah
  4158ff:	jle    0x4158f1
  415901:	sub    BYTE PTR [edx-0x12],0x9
  415905:	sti    
  415906:	pushf  
  415907:	outs   dx,DWORD PTR ds:[esi]
  415908:	out    0x2c,al
  41590a:	or     dl,BYTE PTR [edi]
  41590c:	daa    
  41590d:	cmp    al,0xfb
  41590f:	sub    bl,al
  415911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415912:	pop    esi
  415913:	mov    eax,ds:0x286fdf7b
  415918:	and    al,0xd0
  41591a:	mov    esp,0x93d3ace0
  41591f:	je     0x415919
  415921:	xor    eax,0x608725a8
  415926:	cmp    al,0xa2
  415928:	test   DWORD PTR [ebx],esi
  41592a:	leave  
  41592b:	lahf   
  41592c:	lds    edx,FWORD PTR [esi]
  41592e:	lds    edi,FWORD PTR [edi-0x48]
  415931:	fdiv   QWORD PTR [esi]
  415933:	dec    esi
  415934:	ret    
  415935:	xor    esp,eax
  415937:	cmc    
  415938:	lods   al,BYTE PTR ds:[esi]
  415939:	mov    ah,cl
  41593b:	inc    ebx
  41593c:	loopne 0x41597c
  41593e:	icebp  
  41593f:	rol    eax,0x31
  415942:	sbb    ah,BYTE PTR [ecx-0x66714711]
  415948:	and    BYTE PTR [ebx],dh
  41594a:	sar    DWORD PTR [esp+edx*2-0x2c],0x2e
  41594f:	je     0x4159ba
  415951:	lock (bad) 
  415953:	fwait
  415954:	jmp    0x41594a
  415956:	fldenv [ebx+0x5c]
  415959:	push   cs
  41595a:	ins    DWORD PTR es:[edi],dx
  41595b:	jge    0x415956
  41595d:	imul   edi,DWORD PTR [ecx+0x6b],0x67
  415961:	pop    ebp
  415962:	ins    DWORD PTR es:[edi],dx
  415963:	imul   ebx,DWORD PTR [ecx-0x70e93c25],0x71
  41596a:	inc    ebx
  41596b:	inc    esp
  41596c:	mov    ecx,0x8e790fb0
  415971:	lods   al,BYTE PTR ds:[esi]
  415972:	sub    edi,DWORD PTR [edx+ebp*4]
  415975:	stc    
  415976:	mov    bh,0x33
  415978:	bound  edi,QWORD PTR [edi]
  41597a:	inc    ebx
  41597b:	call   0x413f:0x92485c85
  415982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415983:	stc    
  415984:	xchg   esi,eax
  415985:	jbe    0x4159c9
  415987:	clc    
  415988:	js     0x41593b
  41598a:	(bad)  
  41598b:	fs mov dl,0x65
  41598e:	push   ebx
  41598f:	and    bh,BYTE PTR ds:0xf136423f
  415995:	mov    bh,0x90
  415997:	test   al,0xbf
  415999:	bound  eax,QWORD PTR [esi-0x8]
  41599c:	jnp    0x415929
  41599e:	test   al,0xc0
  4159a0:	adc    DWORD PTR [esi+0x6e903d19],edi
  4159a6:	or     ecx,DWORD PTR [ebx]
  4159a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159a9:	jo     0x4159da
  4159ab:	das    
  4159ac:	and    DWORD PTR [ebx+0x65],edx
  4159af:	jecxz  0x4159cd
  4159b1:	and    BYTE PTR [eax+0x42],ah
  4159b4:	mov    esi,0xf566730e
  4159b9:	pop    ebp
  4159ba:	push   esp
  4159bb:	mov    ds:0x5f6f6774,al
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42825b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x428397,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42822b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42818b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282ef
  415a48:	cmp    DWORD PTR ds:0x42822b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ee4
  415a74:	mov    edi,DWORD PTR ds:0x4281bf
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281df
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428177
  415a8f:	and    DWORD PTR ds:0x4283a3,edx
  415a95:	xor    DWORD PTR ds:0x428243,0x17b
  415a9f:	sbb    DWORD PTR ds:0x4282f7,ecx
  415aa5:	adc    DWORD PTR ds:0x42816b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428173
  415ac7:	xor    DWORD PTR ds:0x42829f,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281ef
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282ab
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428383,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42824f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281cf
  415b25:	mov    edx,DWORD PTR ds:0x42821f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42838f,0x0
  415b3a:	not    DWORD PTR ds:0x428313
  415b40:	mov    DWORD PTR ds:0x42826b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428163,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428373,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42838f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42815b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e7c
  415b83:	add    DWORD PTR ds:0x42836b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42831f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282eb
  415ba0:	adc    DWORD PTR ds:0x428327,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42817f,0x0
  415bb5:	mov    DWORD PTR ds:0x428177,0x74bf
  415bbf:	mov    DWORD PTR ds:0x4282f7,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42817f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428257
  415bef:	call   DWORD PTR ds:0x428e80
  415bf5:	sub    edi,DWORD PTR ds:0x4283a3
  415bfb:	sbb    DWORD PTR ds:0x428327,ecx
  415c01:	and    edx,DWORD PTR ds:0x428197
  415c07:	mov    edi,DWORD PTR ds:0x42823f
  415c0d:	and    DWORD PTR ds:0x42817b,edi
  415c13:	or     DWORD PTR ds:0x428173,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281a3
  415c23:	mov    edx,DWORD PTR ds:0x42832b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42836f,0x0
  415c38:	mov    DWORD PTR ds:0x42839b,ebx
  415c3e:	mov    DWORD PTR ds:0x42816f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42818b,edx
  415c4f:	cmp    DWORD PTR ds:0x42836f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42830b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428dd0
  415c88:	mov    edi,DWORD PTR ds:0x4281c7
  415c8e:	mov    edx,DWORD PTR ds:0x42834f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428327,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42823f
  415cab:	mov    eax,ds:0x4223d8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x4225f8
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42838b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42827b
  415cd7:	mov    ebx,DWORD PTR ds:0x4283a3
  415cdd:	mov    DWORD PTR ds:0x428243,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42837b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42838b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428dd4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428267
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42827f,0x428263
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42830f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428327,0x0
  415d58:	mov    DWORD PTR ds:0x428283,0x5216
  415d62:	not    DWORD PTR ds:0x42825b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42827b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x42829b,ebx
  415d82:	cmp    DWORD PTR ds:0x428327,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280bb
  415d94:	push   0x428069
  415d99:	call   DWORD PTR ds:0x428dd8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42827f
  415dab:	sbb    DWORD PTR ds:0x4283a3,edx
  415db1:	or     DWORD PTR ds:0x428383,ebx
  415db7:	sbb    DWORD PTR ds:0x4282a3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42831f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42815f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428157,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x42819b,0x428163
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x42819b,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42836f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428277,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282a3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42824f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42827f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428307,0x42818f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428173,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42831f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42818f,0x1988
  415e9d:	mov    DWORD PTR ds:0x428297,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428173,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428ddc
  415ec4:	or     DWORD PTR ds:0x428233,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42836b,0x174
  415ede:	mov    DWORD PTR ds:0x42838f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42838b
  415eee:	add    edx,DWORD PTR ds:0x42816f
  415ef4:	mov    DWORD PTR ds:0x42838b,edx
  415efa:	or     DWORD PTR ds:0x428377,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428327
  415f06:	or     DWORD PTR ds:0x428287,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x428297,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42831f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428153,0x0
  415f3b:	mov    DWORD PTR ds:0x428177,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428377
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428317,ebx
  415f59:	cmp    DWORD PTR ds:0x428153,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ee8
  415f91:	xor    DWORD PTR ds:0x4283a7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428283
  415f9d:	sub    DWORD PTR ds:0x42823f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42837b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428323
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428373,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42818b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42818b
  415fdc:	add    DWORD PTR ds:0x428273,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42823f,0x0
  415fec:	mov    DWORD PTR ds:0x428393,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283a7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428373,0x1cd3
  416015:	mov    DWORD PTR ds:0x42816f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42823f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428eec
  416037:	add    DWORD PTR ds:0x428173,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428317,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42824f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428247
  41605c:	adc    DWORD PTR ds:0x42826b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x42839b,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428307,0x42827f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42818f,0x0
  416089:	mov    DWORD PTR ds:0x428327,0x1e83
  416093:	mov    DWORD PTR ds:0x428383,edx
  416099:	movzx  ecx,WORD PTR ds:0x42825b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x428193
  4160ad:	cmp    DWORD PTR ds:0x42818f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428de0
  4160c6:	adc    DWORD PTR ds:0x42831b,edi
  4160cc:	or     DWORD PTR ds:0x42825b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42822f
  4160dc:	sub    DWORD PTR ds:0x42818b,ecx
  4160e2:	add    DWORD PTR ds:0x42827f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422558
  4160f5:	and    ecx,DWORD PTR ds:0x42826f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42837b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x428393,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42818b,0x0
  416120:	mov    DWORD PTR ds:0x428373,0x7b16
  41612a:	mov    DWORD PTR ds:0x42818f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42826b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42818b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428ef0
  416159:	xor    DWORD PTR ds:0x428167,0x42815b
  416163:	sub    DWORD PTR ds:0x428153,0x42817f
  41616d:	sbb    DWORD PTR ds:0x42828f,0x428287
  416177:	and    DWORD PTR ds:0x42827f,0x56d1
  416181:	xor    DWORD PTR ds:0x42826b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42825f,0x42819b
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42820f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x428193,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42818b,0x428267
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42828b,0x42824b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428317,0x42822b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428283,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	mov    al,ds:0xf4bc674b
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x61181814],bl
  41631c:	sbb    BYTE PTR [ebx-0x21],dl
  41631f:	mov    ch,0x70
  416321:	ss sahf 
  416323:	sub    BYTE PTR [edi],dl
  416325:	jp     0x4162e7
  416327:	(bad)  
  416328:	inc    esp
  416329:	add    eax,0x186a0877
  41632e:	aas    
  41632f:	or     bl,dh
  416331:	sbb    bh,BYTE PTR [eax+0x68481ff]
  416337:	jmp    0x7a160884
  41633c:	fnstsw WORD PTR [ecx]
  41633e:	test   DWORD PTR [ebx+0x78eeb10a],edi
  416344:	xor    eax,0x86fe0834
  416349:	jmp    FWORD PTR [edi-0x73]
  41634c:	dec    ebp
  41634d:	jb     0x41634a
  41634f:	xchg   esp,eax
  416350:	rcl    ah,0x11
  416353:	scas   eax,DWORD PTR es:[edi]
  416354:	mov    ds:0x95fa376f,eax
  416359:	popf   
  41635a:	int    0xed
  41635c:	lods   eax,DWORD PTR ds:[esi]
  41635d:	xchg   edx,eax
  41635e:	pop    eax
  41635f:	inc    ecx
  416360:	fistp  QWORD PTR [eax-0x77]
  416363:	mov    ch,bh
  416365:	lods   al,BYTE PTR ds:[esi]
  416366:	cmp    ecx,DWORD PTR [ebp+0x2f]
  416369:	mov    edx,0xc43ff4a8
  41636e:	xor    BYTE PTR [edi-0x1abf0df3],dh
  416374:	idiv   BYTE PTR [esi]
  416376:	inc    esi
  416377:	shr    BYTE PTR [eax-0x7d],0x15
  41637b:	je     0x4163da
  41637d:	or     BYTE PTR ds:0xb15d850c,bh
  416383:	cmp    ch,BYTE PTR [eax+eiz*4+0x6e]
  416387:	sar    DWORD PTR ds:0x39b0d4c5,0x8
  41638e:	out    0xcd,eax
  416390:	inc    esp
  416391:	aad    0x16
  416393:	sub    BYTE PTR [ebx-0xe8198de],bl
  416399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41639a:	test   al,0xda
  41639c:	stos   BYTE PTR es:[edi],al
  41639d:	push   cs
  41639e:	cwde   
  41639f:	es aas 
  4163a1:	loope  0x416389
  4163a3:	es stos DWORD PTR es:[edi],eax
  4163a5:	sbb    bl,BYTE PTR ds:0x16fbb61
  4163ab:	or     eax,DWORD PTR [eax+0x61]
  4163ae:	mov    ds:0x9547b8db,al
  4163b3:	outs   dx,BYTE PTR ds:[esi]
  4163b4:	cmp    DWORD PTR [edi],ecx
  4163b6:	es call 0x4e64:0x6313b52f
  4163be:	call   FWORD PTR [ecx+edx*8]
  4163c1:	sub    eax,0x108271e7
  4163c6:	pushf  
  4163c7:	scas   al,BYTE PTR es:[edi]
  4163c8:	push   ebx
  4163c9:	mov    dl,0x21
  4163cb:	out    0x6e,al
  4163cd:	mov    cl,0xe5
  4163cf:	sbb    al,0x8e
  4163d1:	pop    esi
  4163d2:	ficomp WORD PTR [edi-0xa]
  4163d5:	mov    WORD PTR [ecx+esi*8+0x41caf999],cs
  4163dc:	mov    ds:0xe2f95dce,eax
  4163e1:	ja     0x416389
  4163e3:	xor    al,0xb0
  4163e5:	xlat   BYTE PTR ds:[ebx]
  4163e6:	sar    BYTE PTR [ecx+0x81d681d],cl
  4163ec:	fsubr  st,st(1)
  4163ee:	call   0x6a1083b0
  4163f3:	or     DWORD PTR [edi-0x1c],ebx
  4163f6:	(bad)
  4163f9:	adc    ecx,edi
  4163fb:	xor    ch,bl
  4163fd:	push   0x47583c88
  416402:	nop
  416403:	pop    edx
  416404:	mov    esp,0xb6b4556e
  416409:	pop    esi
  41640a:	fnstenv es:[edi-0xc83a244]
  416411:	jmp    0x41639c
  416413:	aas    
  416414:	mov    dh,0x0
  416416:	dec    edi
  416417:	popf   
  416418:	cmp    DWORD PTR [ebx+eiz*8-0x4c],eax
  41641c:	sub    cl,dl
  41641e:	add    edi,DWORD PTR [eax-0x66]
  416421:	jbe    0x4163ab
  416423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416424:	rcr    DWORD PTR [edi-0x80],1
  416427:	cmp    DWORD PTR [ecx-0x7750287d],ebp
  41642d:	mov    eax,ds:0xf6bc75ce
  416432:	mov    edx,0x1ee4ce86
  416437:	scas   al,BYTE PTR es:[edi]
  416438:	dec    esp
  416439:	stos   DWORD PTR es:[edi],eax
  41643a:	pusha  
  41643b:	popf   
  41643c:	and    al,0x6e
  41643e:	in     eax,0x72
  416440:	adc    bh,ah
  416442:	out    0x9a,al
  416444:	in     al,dx
  416445:	pop    ds
  416446:	mov    dl,BYTE PTR [ebx]
  416448:	push   esi
  416449:	fmul   DWORD PTR [ecx+eax*8-0x6e]
  41644d:	sub    ecx,esp
  41644f:	les    eax,FWORD PTR [eax+0x6bd9195]
  416455:	aas    
  416456:	std    
  416457:	or     DWORD PTR [ebx+0x6c],eax
  41645a:	scas   al,BYTE PTR es:[edi]
  41645b:	mov    esi,0xcaf0792b
  416460:	xchg   DWORD PTR [edi+0x1dc2a28],esp
  416466:	pushf  
  416467:	(bad)  
  416468:	or     ebp,ebx
  41646a:	mov    ch,0x15
  41646c:	mov    edx,0x1b0e5379
  416471:	bound  eax,QWORD PTR [eax]
  416473:	sar    BYTE PTR [eax],1
  416475:	mov    WORD PTR [esi+eiz*4-0x5],?
  416479:	add    al,0x8e
  41647b:	(bad)  
  41647c:	pop    esp
  41647d:	push   eax
  41647e:	fcmovne st,st(3)
  416480:	mov    edi,0x2860e3f5
  416485:	xor    eax,DWORD PTR [eax+eiz*8+0x68]
  416489:	(bad)  
  41648b:	test   al,0xc1
  41648d:	fisttp QWORD PTR [edx-0x75]
  416490:	sub    esp,DWORD PTR ds:0xcb3d2d26
  416496:	mov    bh,BYTE PTR [ebx-0x1]
  416499:	dec    ebx
  41649a:	push   ecx
  41649b:	addr16 mov ds:0x38ed,eax
  41649f:	in     eax,0xdb
  4164a1:	adc    eax,0xb1c27e17
  4164a6:	sbb    DWORD PTR cs:[eax],edi
  4164a9:	retf   
  4164aa:	add    BYTE PTR [ecx],cl
  4164ac:	enter  0xbc53,0x98
  4164b0:	arpl   sp,di
  4164b2:	jge    0x416479
  4164b4:	rcl    DWORD PTR [ebx],1
  4164b6:	adc    al,0x87
  4164b8:	dec    esi
  4164b9:	cmp    ebx,eax
  4164bb:	mov    BYTE PTR [ebp-0x50ec65c5],bl
  4164c1:	ret    0x199c
  4164c4:	lock pop ds
  4164c6:	or     esi,DWORD PTR [eax]
  4164c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164c9:	adc    BYTE PTR [esi+0x45289cbf],ah
  4164cf:	mov    al,ds:0x3e302742
  4164d4:	mov    esp,0x578f1dec
  4164d9:	out    0xe7,eax
  4164db:	shl    ah,cl
  4164dd:	rcr    DWORD PTR [ecx+0x1e10d87f],0xa2
  4164e4:	gs inc esp
  4164e6:	test   DWORD PTR [ebp+0x5cb355b5],edx
  4164ec:	sbb    BYTE PTR [ebx+0x2aec1775],ch
  4164f2:	je     0x416499
  4164f4:	retf   
  4164f5:	and    BYTE PTR [eiz*4+0x35d20d58],ch
  4164fc:	jp     0x416485
  4164fe:	mov    ebx,0x25145b7d
  416503:	sub    bl,bh
  416505:	int    0xda
  416507:	and    eax,DWORD PTR [ebp+0x3c]
  41650a:	popa   
  41650b:	ss dec edi
  41650d:	test   BYTE PTR [ebx-0x4abbff1c],al
  416513:	iretw  
  416515:	jo     0x416570
  416517:	inc    edi
  416518:	ret    
  416519:	mov    dh,0xee
  41651b:	daa    
  41651c:	aad    0x2
  41651e:	jne    0x41656b
  416520:	call   0xab0:0x85fbc10f
  416527:	and    ebx,DWORD PTR [ebp+0x1320f727]
  41652d:	pushf  
  41652e:	or     bh,dh
  416530:	jo     0x4164ec
  416532:	adc    al,0x60
  416534:	les    esp,FWORD PTR [esp+eiz*4]
  416537:	xor    ah,ah
  416539:	fs pop ebp
  41653b:	sahf   
  41653c:	pusha  
  41653d:	test   al,0xe
  41653f:	popa   
  416540:	jmp    0xb715f8e2
  416545:	neg    DWORD PTR [esi+edi*1+0x67a97ed5]
  41654c:	jmp    0x13798852
  416551:	aad    0xbd
  416553:	push   edi
  416554:	inc    edx
  416555:	and    eax,DWORD PTR [edi+0x34]
  416558:	cmc    
  416559:	lds    esp,FWORD PTR [ecx+0x3f]
  41655c:	push   eax
  41655d:	addr16 xor eax,edi
  416560:	shr    eax,0x2
  416563:	or     ecx,eax
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422588
  416605:	mov    edi,0x4224ce
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422588
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x71a70c70]
  416729:	mov    al,0x77
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx-0x4fe7e7ec],bl
  416733:	and    eax,0x6b912f6d
  416738:	in     eax,dx
  416739:	xchg   edi,eax
  41673a:	mov    edx,0xa180dee2
  41673f:	ss and ebx,edi
  416742:	sbb    BYTE PTR [esi-0x7fe6d3c5],al
  416748:	xchg   edx,eax
  416749:	std    
  41674a:	aas    
  41674b:	mov    ch,0xf8
  41674d:	dec    eax
  41674e:	and    BYTE PTR [ebx+0x4f],ch
  416751:	ins    BYTE PTR es:[edi],dx
  416752:	dec    esp
  416753:	inc    esi
  416754:	mov    esi,0x2b5323ef
  416759:	jb     0x416781
  41675b:	push   ebp
  41675c:	rcl    cl,1
  41675e:	enter  0xf1a5,0x5b
  416762:	leave  
  416763:	fldcw  WORD PTR [ebp+0x56]
  416766:	add    dh,BYTE PTR [esi+ecx*8-0x49db65ef]
  41676d:	dec    edx
  41676e:	and    eax,0x8baf7d11
  416773:	nop
  416774:	dec    ecx
  416775:	arpl   WORD PTR [edi+0x35725ba2],bx
  41677b:	in     eax,0xec
  41677d:	cmp    al,0x40
  41677f:	mov    dh,0x97
  416781:	fsubr  st(3),st
  416783:	faddp  st(7),st
  416785:	sbb    BYTE PTR [ebx+0x74],al
  416788:	mov    cl,0xef
  41678a:	jg     0x41674d
  41678c:	xor    edi,0x85933960
  416792:	inc    eax
  416793:	xor    al,0x6c
  416795:	je     0x416718
  416797:	mov    edx,0xfb5dee8
  41679c:	inc    esp
  41679d:	out    0x87,eax
  41679f:	mov    al,0x36
  4167a1:	pop    edx
  4167a2:	fs stos BYTE PTR es:[edi],al
  4167a4:	icebp  
  4167a5:	lock dec ebp
  4167a7:	pop    ss
  4167a8:	mov    cs,WORD PTR [eax-0x357d1857]
  4167ae:	inc    ebx
  4167af:	fmul   QWORD PTR [eax-0x1e]
  4167b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167b3:	pusha  
  4167b4:	inc    edx
  4167b5:	hlt    
  4167b6:	loope  0x41682a
  4167b8:	test   DWORD PTR [ebp+0x589d9b28],ebp
  4167be:	push   es
  4167bf:	mov    ah,0x73
  4167c1:	repnz sbb DWORD PTR [ebx+0x4d],esi
  4167c5:	jnp    0x4167fd
  4167c7:	jecxz  0x41675b
  4167c9:	cld    
  4167ca:	add    eax,0x1eceab9a
  4167cf:	and    cl,BYTE PTR [ecx]
  4167d1:	sub    al,0x4f
  4167d3:	adc    cl,ah
  4167d5:	inc    ecx
  4167d6:	inc    esi
  4167d7:	mov    esp,0xe0e93cbc
  4167dc:	sbb    dh,BYTE PTR [edi+ecx*2+0x7055a5a9]
  4167e3:	mov    ds:0x4502b95c,al
  4167e8:	stc    
  4167e9:	inc    ecx
  4167ea:	mov    bl,0x77
  4167ec:	push   cs
  4167ed:	pop    es
  4167ee:	push   0x75959745
  4167f3:	push   eax
  4167f4:	ins    DWORD PTR es:[edi],dx
  4167f5:	pop    eax
  4167f6:	and    al,0xa
  4167f8:	mov    ds:0x7ddf5800,al
  4167fd:	pop    ds
  4167fe:	jae    0x416875
  416800:	test   BYTE PTR [edx],ah
  416802:	addr16 repnz pop ds
  416805:	enter  0xc463,0x3f
  416809:	jbe    0x4167bd
  41680b:	xor    al,0x9c
  41680d:	sub    ebp,DWORD PTR [esi-0x1b]
  416810:	mov    ecx,0xe5f5d034
  416815:	loope  0x4167e6
  416817:	xor    dh,BYTE PTR [ebp+0x2eead7d0]
  41681d:	xor    al,0xaf
  41681f:	jle    0x416889
  416821:	mov    cl,0x1e
  416823:	stos   DWORD PTR es:[edi],eax
  416824:	je     0x4167f5
  416826:	mov    dh,0x94
  416828:	mov    dl,0x97
  41682a:	hlt    
  41682b:	mov    esi,0xfaccb8b1
  416830:	push   esi
  416831:	stc    
  416832:	cwde   
  416833:	mov    bl,0xd7
  416835:	ds inc eax
  416837:	mov    eax,DWORD PTR [edx-0x3227282a]
  41683d:	cmp    ch,al
  41683f:	adc    BYTE PTR ds:0x391b2dce,0x48
  416846:	out    dx,al
  416847:	jmp    0x5145face
  41684c:	jp     0x416875
  41684e:	fs lea esp,ds:[eax]
  416852:	or     al,0xe3
  416854:	int3   
  416855:	nop
  416856:	xor    dh,BYTE PTR [ebp+esi*8-0x18]
  41685a:	fst    QWORD PTR [edi-0x6e]
  41685d:	mov    al,ds:0xbcd89033
  416862:	(bad)  
  416863:	xchg   ebp,eax
  416864:	mov    ebp,DWORD PTR [ebp+0x55]
  416867:	jmp    0xebd24ff8
  41686c:	fidivr DWORD PTR [eax]
  41686e:	dec    edx
  41686f:	(bad)  
  416870:	mov    ds:0x692d5a39,al
  416875:	pop    ebx
  416876:	sub    ebp,DWORD PTR [edx-0x20]
  416879:	pop    esp
  41687a:	std    
  41687b:	fdivr  QWORD PTR [ebx+0x3f]
  41687e:	sbb    ecx,DWORD PTR [edx-0x28]
  416881:	push   es
  416882:	ss pop esi
  416884:	arpl   WORD PTR ss:[edi-0x5894e978],di
  41688b:	cmp    DWORD PTR [eax-0x6162e296],ebx
  416891:	sub    DWORD PTR [ecx+0x7f],esi
  416894:	sub    cl,bl
  416896:	cmp    ch,cl
  416898:	xchg   edi,eax
  416899:	lods   eax,DWORD PTR ds:[esi]
  41689a:	fstp   TBYTE PTR [esi+edi*2+0x5b7d0c22]
  4168a1:	aam    0x26
  4168a3:	loop   0x41686a
  4168a5:	jp     0x416844
  4168a7:	in     al,dx
  4168a8:	js     0x416856
  4168aa:	cdq    
  4168ab:	pop    eax
  4168ac:	enter  0x4e45,0xef
  4168b0:	xchg   ebx,eax
  4168b1:	xlat   BYTE PTR ds:[ebx]
  4168b2:	hlt    
  4168b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b4:	inc    ebx
  4168b5:	add    eax,0xfa123365
  4168ba:	sbb    al,0xf6
  4168bc:	xchg   edx,eax
  4168bd:	jno    0x416924
  4168bf:	add    ah,dl
  4168c1:	pop    eax
  4168c2:	aad    0x5d
  4168c4:	mov    eax,ds:0xd6ecd37b
  4168c9:	imul   edi,DWORD PTR [edi+0x586fa9a8],0xfffffff9
  4168d0:	aas    
  4168d1:	(bad)  
  4168d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d4:	test   BYTE PTR [eax*8+0x6c235033],0xa9
  4168dc:	inc    esp
  4168dd:	pop    esp
  4168de:	xor    al,0x9e
  4168e0:	(bad)  
  4168e2:	jns    0x416904
  4168e4:	(bad)  
  4168e5:	cmp    bl,BYTE PTR [edx]
  4168e7:	jmp    0x416956
  4168e9:	(bad)  
  4168ea:	cmp    DWORD PTR [ecx+0x46609cd1],ebx
  4168f0:	mov    ds,ecx
  4168f2:	xor    BYTE PTR [esi-0x6a07ee23],bl
  4168f8:	xchg   edi,eax
  4168f9:	mov    ah,BYTE PTR [ecx+0x68]
  4168fc:	sub    DWORD PTR [esi-0x7c],edx
  4168ff:	jb     0x4168fe
  416901:	sti    
  416902:	sbb    DWORD PTR [esi],ebx
  416904:	mov    ebp,DWORD PTR [edx-0x3]
  416907:	scas   al,BYTE PTR es:[edi]
  416908:	xor    eax,0xc8bfa0bd
  41690d:	dec    ecx
  41690e:	adc    eax,0xec66809f
  416913:	jae    0x416982
  416915:	sti    
  416916:	jle    0x416907
  416918:	sbb    DWORD PTR [edi+0x7f],0xf190433f
  41691f:	lods   eax,DWORD PTR ds:[esi]
  416920:	push   ss
  416921:	push   esi
  416922:	sub    ah,BYTE PTR [ecx-0x4b]
  416925:	and    ebx,DWORD PTR [ebp+0x22]
  416928:	mov    edi,0x6bf41750
  41692d:	cdq    
  41692e:	cdq    
  41692f:	and    edi,ebp
  416931:	retfw  
  416933:	cwde   
  416934:	mov    esp,0x21383270
  416939:	mov    esi,0xd98fdabf
  41693e:	cmp    bl,0xcc
  416941:	pop    ebp
  416942:	push   ebp
  416943:	mov    ds:0x73b16503,eax
  416948:	popf   
  416949:	je     0x416957
  41694b:	lea    edx,ds:0xcc26ae44
  416951:	repnz hlt 
  416953:	mov    BYTE PTR [esp+ebx*1+0x3bd851f],cl
  41695a:	loopne 0x416981
  41695c:	pop    esp
  41695d:	icebp  
  41695e:	pop    ecx
  41695f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416960:	adc    al,0x29
  416962:	push   0x6
  416964:	out    0x7d,eax
  416966:	imul   ecx,DWORD PTR [esi],0xffffff95
  416969:	gs pop ebp
  41696b:	xchg   esp,eax
  41696c:	int    0xc7
  41696e:	or     BYTE PTR [eax],dl
  416970:	test   al,0x11
  416972:	inc    edi
  416973:	push   ebp
  416974:	mov    BYTE PTR [ebp-0x74af01bb],cl
  41697a:	inc    ebp
  41697b:	adc    BYTE PTR [ebx-0x53f0ebb3],cl
  416981:	enter  0xc102,0xe9
  416985:	add    cl,BYTE PTR [ebx+0x558b104d]
  41698b:	adc    al,0x33
  41698d:	(bad)  
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0x6a0269ac
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx+0x2f181814],bl
  4169ac:	and    bl,al
  4169ae:	sub    BYTE PTR [edi+0x7c],bl
  4169b1:	mov    ebx,DWORD PTR ds:[ebx-0x3cb41858]
  4169b8:	in     eax,dx
  4169b9:	stos   BYTE PTR es:[edi],al
  4169ba:	fucomp st(0)
  4169bc:	adc    ebx,DWORD PTR [ebx-0x6858f655]
  4169c2:	fld    TBYTE PTR [esp+edx*1-0x1e]
  4169c6:	sbb    al,0x6c
  4169c8:	mov    eax,ds:0xbc3f449
  4169cd:	int    0x26
  4169cf:	add    eax,0xbec10ff7
  4169d4:	aam    0x12
  4169d6:	xor    al,0xb3
  4169d8:	mov    edi,0xcf7344a9
  4169dd:	push   ds
  4169de:	(bad)  
  4169df:	jns    0x4169fd
  4169e1:	cs push es
  4169e3:	inc    ecx
  4169e4:	mov    edx,0xbadbec8b
  4169e9:	mov    edx,0x2e00cd66
  4169ee:	loope  0x416992
  4169f0:	ja     0x416a3c
  4169f2:	mov    bl,0xf9
  4169f4:	xor    ch,ch
  4169f6:	leave  
  4169f7:	stc    
  4169f8:	sub    BYTE PTR [edi+0x58],0xfb
  4169fc:	ins    BYTE PTR es:[edi],dx
  4169fd:	adc    al,0xd3
  4169ff:	js     0x4169d1
  416a01:	mov    ebp,0xf8a6af71
  416a06:	jmp    0x3650:0xfa2205a2
  416a0d:	je     0x416a46
  416a0f:	xchg   edi,eax
  416a10:	inc    ebp
  416a11:	jo     0x416a70
  416a13:	dec    ebp
  416a14:	in     eax,0xfe
  416a16:	add    eax,0x610d0f8e
  416a1b:	pop    eax
  416a1c:	test   al,0xe8
  416a1e:	mov    edi,0x36c84cc
  416a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a24:	outs   dx,BYTE PTR ds:[esi]
  416a25:	outs   dx,BYTE PTR ds:[esi]
  416a26:	sub    ecx,DWORD PTR [edx+0x139bfbbd]
  416a2c:	mov    edx,0x4bca984
  416a31:	sub    al,0x7e
  416a33:	mov    bl,0xbe
  416a35:	int3   
  416a36:	add    al,0x64
  416a38:	mov    ah,0x59
  416a3a:	push   ss
  416a3b:	cs dec eax
  416a3d:	adc    DWORD PTR [edi+edx*4],edx
  416a40:	loope  0x416a48
  416a42:	iret   
  416a43:	daa    
  416a44:	sub    eax,0xd32d0b44
  416a49:	repz jne 0x416aa1
  416a4c:	lods   eax,DWORD PTR ds:[esi]
  416a4d:	ret    
  416a4e:	inc    esi
  416a4f:	cmp    DWORD PTR [ebp-0x20fc294f],ecx
  416a55:	sub    DWORD PTR [edx-0x37],ebx
  416a58:	add    eax,0x2284af2e
  416a5d:	aas    
  416a5e:	repnz cmp dh,BYTE PTR cs:[ebp+0x33]
  416a63:	and    dh,bl
  416a65:	jnp    0x416a5c
  416a67:	mov    esp,0xf4e37dc1
  416a6c:	mov    ah,BYTE PTR [esi]
  416a6e:	nop
  416a6f:	es xchg ebp,eax
  416a71:	aaa    
  416a72:	addr16 loop 0x416a50
  416a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a76:	pop    ds
  416a77:	sbb    eax,0x51d8d66a
  416a7c:	and    BYTE PTR [ebp-0x690525b2],bh
  416a82:	cmp    al,0x4b
  416a84:	adc    ah,bh
  416a86:	clc    
  416a87:	or     DWORD PTR [ecx],edx
  416a89:	jp     0x416adb
  416a8b:	jae    0x416ad3
  416a8d:	pop    ds
  416a8e:	mov    WORD PTR [edx+0x6f28de58],fs
  416a94:	sbb    ah,BYTE PTR [esi]
  416a96:	jmp    0x361f:0xb7677ad4
  416a9d:	xor    dh,ah
  416a9f:	hlt    
  416aa0:	mov    ds:0x302e995f,eax
  416aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa6:	loope  0x416a3c
  416aa8:	das    
  416aa9:	push   0xfffffffc
  416aab:	int    0x3
  416aad:	cmp    BYTE PTR [ecx],ah
  416aaf:	add    al,0x87
  416ab1:	pop    eax
  416ab2:	sub    dh,dl
  416ab4:	sbb    DWORD PTR [esi],eax
  416ab6:	aas    
  416ab7:	enter  0xe426,0xff
  416abb:	outs   dx,BYTE PTR ds:[esi]
  416abc:	cs pop esi
  416abe:	push   esi
  416abf:	xchg   esi,eax
  416ac0:	mov    eax,ds:0x3809dbfa
  416ac5:	cld    
  416ac6:	or     eax,0x73da2d08
  416acb:	mov    edi,0x7baa7a00
  416ad0:	mov    eax,ds:0x4ee54b9
  416ad5:	rcl    DWORD PTR [ebx+0x31],0xbf
  416ad9:	bound  ebx,QWORD PTR [esi]
  416adb:	imul   edx,DWORD PTR [ecx+0x4c],0xb065cefb
  416ae2:	hlt    
  416ae3:	(bad)  [esi]
  416ae5:	mov    ebp,0xccc409bd
  416aea:	fmul   QWORD PTR [eax+0x63635b0d]
  416af0:	js     0x416a7f
  416af2:	jb     0x416aa2
  416af4:	rol    BYTE PTR [esp+ebp*1],cl
  416af7:	add    bl,dl
  416af9:	xchg   ebx,eax
  416afa:	mov    eax,0xb5729f69
  416aff:	retf   0xe7c3
  416b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b03:	mov    eax,0x59b7df07
  416b08:	enter  0x430a,0xfc
  416b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0d:	push   esp
  416b0e:	daa    
  416b0f:	ss inc ebx
  416b11:	dec    eax
  416b12:	cdq    
  416b13:	jg     0x416b1f
  416b15:	pop    ebp
  416b16:	fist   WORD PTR [eax+0x5b]
  416b19:	daa    
  416b1a:	loope  0x416b19
  416b1c:	je     0x416ab6
  416b1e:	adc    esi,DWORD PTR [ebp+0x3360be57]
  416b24:	mov    al,ds:0xadda99be
  416b29:	mov    ds:0x48399b4e,eax
  416b2e:	aaa    
  416b2f:	es dec edx
  416b31:	pop    edi
  416b32:	sar    ch,cl
  416b34:	sti    
  416b35:	or     bh,BYTE PTR [edx]
  416b37:	dec    edx
  416b38:	sub    ebx,DWORD PTR es:[ecx-0x679796ce]
  416b3f:	or     al,0xcf
  416b41:	mov    DWORD PTR ds:0xd6206d18,ebp
  416b47:	inc    ebx
  416b48:	xchg   edx,eax
  416b49:	cld    
  416b4a:	jmp    0xa9f6cc04
  416b4f:	in     al,dx
  416b50:	xchg   ebp,eax
  416b51:	sbb    eax,0xe5c6c4e
  416b56:	(bad)  
  416b58:	je     0x416b7f
  416b5a:	add    bl,BYTE PTR [edi-0x1d]
  416b5d:	adc    eax,0x7762cfaa
  416b62:	aas    
  416b63:	push   0x9955b3b2
  416b68:	ins    DWORD PTR es:[edi],dx
  416b69:	xchg   DWORD PTR [ebx+edx*1+0x1dc04a2f],ebp
  416b70:	sub    DWORD PTR [esi+0x66c02d84],0x3547a59a
  416b7a:	push   eax
  416b7b:	out    dx,eax
  416b7c:	pop    ds
  416b7d:	xlat   BYTE PTR ds:[ebx]
  416b7e:	fistp  WORD PTR [eax]
  416b80:	loope  0x416bd4
  416b82:	xchg   edi,eax
  416b83:	jne    0x416ba8
  416b85:	mov    esp,DWORD PTR [edi]
  416b87:	dec    edx
  416b88:	xchg   ebx,eax
  416b89:	ja     0x416be3
  416b8b:	xchg   eax,ebp
  416b8d:	dec    ecx
  416b8e:	lds    eax,FWORD PTR [edx-0x56868dd3]
  416b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b95:	imul   eax,esp,0x21
  416b98:	or     al,0x86
  416b9a:	xchg   edx,eax
  416b9b:	inc    ebx
  416b9c:	fistp  WORD PTR [edi]
  416b9e:	jo     0x416b5f
  416ba0:	ret    
  416ba1:	daa    
  416ba2:	and    ebp,ebx
  416ba4:	adc    ah,BYTE PTR [ebx+ecx*4+0x46d027ec]
  416bab:	fsubr  QWORD PTR [ecx+0x5c]
  416bae:	push   ebx
  416baf:	mov    ebp,ss
  416bb1:	or     BYTE PTR [ecx+0x572d7a79],cl
  416bb7:	in     eax,dx
  416bb8:	js     0x416bde
  416bba:	addr16 pop eax
  416bbc:	sub    eax,0x6c2b9c70
  416bc1:	fist   DWORD PTR [ecx+0x6a]
  416bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bc5:	ret    0x232a
  416bc8:	cdq    
  416bc9:	ds std 
  416bcb:	jg     0x416c19
  416bcd:	das    
  416bce:	adc    bl,dl
  416bd0:	adc    esi,edi
  416bd2:	ins    DWORD PTR es:[edi],dx
  416bd3:	add    ebx,DWORD PTR ds:0xc47bfcd5
  416bd9:	rol    DWORD PTR ds:[edx],1
  416bdc:	or     BYTE PTR [ecx],dh
  416bde:	sub    ecx,ebx
  416be0:	jne    0x416c26
  416be2:	sub    bl,BYTE PTR [edi-0x1b]
  416be5:	mov    edx,0xfe3b0147
  416bea:	call   0xbd2:0x33897429
  416bf1:	ret    0xc703
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42824f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42837b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42822b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282a3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428303,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281eb
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42822f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0x52
  416d7e:	dec    edi
  416d7f:	xchg   ebp,eax
  416d80:	mov    esp,0x1816f47a
  416d85:	loope  0x416d99
  416d87:	sbb    BYTE PTR [eax],bl
  416d89:	fld    DWORD PTR [esi]
  416d8b:	cli    
  416d8c:	fbstp  TBYTE PTR [edx-0x19c761c0]
  416d92:	pop    esp
  416d93:	push   eax
  416d94:	pop    esi
  416d95:	jmp    0x8364:0xfa20117e
  416d9c:	fst    QWORD PTR [ebp-0xc665616]
  416da2:	mov    bh,BYTE PTR [ebp+0xd320adc]
  416da8:	inc    eax
  416da9:	push   cs
  416daa:	sbb    ecx,DWORD PTR [edx+0x14]
  416dad:	push   esp
  416dae:	out    0xcb,eax
  416db0:	sub    eax,0xadd8a155
  416db5:	sub    cl,BYTE PTR [edi]
  416db7:	mov    dh,0x9f
  416db9:	mov    ch,0x9b
  416dbb:	aas    
  416dbc:	clc    
  416dbd:	bound  esi,QWORD PTR [esi-0x765f8600]
  416dc3:	inc    ebx
  416dc4:	scas   al,BYTE PTR es:[edi]
  416dc5:	ins    DWORD PTR es:[edi],dx
  416dc6:	xor    edx,edx
  416dc8:	ja     0x416d8f
  416dca:	jge    0x416dd9
  416dcc:	ins    BYTE PTR es:[edi],dx
  416dcd:	or     ebx,edx
  416dcf:	sub    BYTE PTR [esi-0x227806f7],al
  416dd5:	cwde   
  416dd6:	dec    eax
  416dd7:	repz inc ebp
  416dd9:	push   cs
  416dda:	ss jns 0x416e10
  416ddd:	iret   
  416dde:	mov    ebx,0xe7d7ab06
  416de3:	test   DWORD PTR [ecx+0x5cb901af],0x19232990
  416ded:	jle    0x416e47
  416def:	jne    0x416d8f
  416df1:	push   eax
  416df2:	add    DWORD PTR [edx+0x4d],ebx
  416df5:	mov    ebp,0xee5ea098
  416dfa:	test   al,0xbf
  416dfc:	sbb    eax,DWORD PTR [edi]
  416dfe:	mov    dh,0x46
  416e00:	xor    DWORD PTR [eax+0x7d],edx
  416e03:	fstp   QWORD PTR [ebp*1-0x48330f4d]
  416e0a:	lods   al,BYTE PTR ds:[esi]
  416e0b:	sub    BYTE PTR [esp+ebp*2-0x46],cl
  416e0f:	jne    0x416e19
  416e11:	pushf  
  416e12:	push   0x6e
  416e14:	imul   ebp,DWORD PTR [ebx],0x921bbd64
  416e1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e1b:	(bad)  
  416e1c:	cmp    bl,bh
  416e1e:	jno    0x416e50
  416e20:	sbb    bl,dl
  416e22:	xor    eax,0xbf4a85f9
  416e27:	xor    DWORD PTR [edx+eax*8],0xffffffce
  416e2b:	dec    ecx
  416e2c:	pop    ds
  416e2d:	mov    BYTE PTR [edx],dl
  416e2f:	sbb    BYTE PTR [ecx-0x79],0x6
  416e33:	push   ds
  416e34:	cmp    DWORD PTR [edi-0x36fcd0fa],ebp
  416e3a:	int3   
  416e3b:	pushf  
  416e3c:	out    0xf4,al
  416e3e:	rcl    DWORD PTR [ebp+0x52],1
  416e41:	pop    edx
  416e42:	pushf  
  416e43:	mov    al,ds:0x277a3df2
  416e48:	js     0x416e96
  416e4a:	mov    al,0x7b
  416e4c:	aas    
  416e4d:	test   eax,0xf0ff2d4f
  416e52:	or     dh,BYTE PTR [ebx]
  416e54:	mov    dh,0x7e
  416e56:	push   es
  416e57:	test   eax,0xf402752b
  416e5c:	sub    DWORD PTR [ebx+ecx*4-0x69c6b885],ebx
  416e63:	and    al,0x7d
  416e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e66:	push   eax
  416e67:	inc    esi
  416e68:	mov    cl,0x46
  416e6a:	push   ss
  416e6b:	in     eax,0x98
  416e6d:	pop    ebx
  416e6e:	js     0x416e0b
  416e70:	ss es in eax,0xa7
  416e74:	xchg   DWORD PTR ds:[edi],ebx
  416e77:	mov    BYTE PTR [edx],al
  416e79:	(bad)  
  416e7a:	push   ss
  416e7b:	(bad)  
  416e7c:	enter  0x7165,0x3e
  416e80:	call   FWORD PTR [ebp-0x78]
  416e83:	jmp    0x4bb9:0x51acb117
  416e8a:	xor    al,0x1b
  416e8c:	pop    es
  416e8d:	xchg   edx,eax
  416e8e:	sbb    al,0xbe
  416e90:	inc    ebx
  416e91:	ja     0x416f0f
  416e93:	xchg   edx,eax
  416e94:	and    edx,DWORD PTR [ecx]
  416e96:	daa    
  416e97:	jb     0x416e84
  416e99:	ins    BYTE PTR es:[edi],dx
  416e9a:	push   ebx
  416e9c:	jge    0x416f0c
  416e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e9f:	xor    BYTE PTR ds:0x862631c6,dh
  416ea5:	push   esi
  416ea6:	push   ebp
  416ea7:	add    BYTE PTR [edi-0x69162344],al
  416ead:	ds jecxz 0x416f1c
  416eb0:	add    al,0x6d
  416eb2:	icebp  
  416eb3:	mov    ds,edi
  416eb5:	xor    esi,DWORD PTR [esi+0x315e9dbf]
  416ebb:	test   DWORD PTR [eax+ecx*4+0x75],ebp
  416ebf:	pop    ax
  416ec1:	fnstcw WORD PTR [edi-0x6e]
  416ec4:	hlt    
  416ec5:	mov    esp,0xf2f83404
  416eca:	lahf   
  416ecb:	sbb    esp,DWORD PTR [ebx+0xf4e56eb]
  416ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ed2:	mov    BYTE PTR [esp+ecx*8-0x5],bl
  416ed6:	fbld   TBYTE PTR [ebx+0x10]
  416ed9:	mov    DWORD PTR [eax-0x2a330ae3],ecx
  416edf:	(bad)  
  416ee0:	mov    al,0x1c
  416ee2:	std    
  416ee3:	cwde   
  416ee4:	push   0x1ecd10af
  416ee9:	dec    edx
  416eea:	inc    edx
  416eeb:	in     eax,dx
  416eec:	jl     0x416f32
  416eee:	test   al,0x71
  416ef0:	adc    ch,ch
  416ef2:	jmp    FWORD PTR [eax-0x1b]
  416ef5:	test   BYTE PTR [ebx+0x51d5e539],al
  416efb:	pushf  
  416efc:	retf   
  416efd:	or     DWORD PTR [ebx+edi*4],edx
  416f00:	int    0x1f
  416f02:	inc    esi
  416f03:	mov    BYTE PTR [esi-0x49a130ed],0x2f
  416f0a:	push   0xd54de05d
  416f0f:	xchg   ebx,eax
  416f10:	xchg   DWORD PTR [eax+0x4e],ecx
  416f13:	dec    ebx
  416f14:	mov    esi,0x733096db
  416f19:	loop   0x416f3f
  416f1b:	push   es
  416f1c:	inc    ecx
  416f1d:	xor    edx,DWORD PTR [ebx+0x29]
  416f20:	(bad)  [ecx]
  416f22:	add    eax,0xaa7b58fd
  416f27:	xchg   ecx,esi
  416f29:	bound  esi,QWORD PTR [eax]
  416f2b:	pop    ecx
  416f2c:	inc    ecx
  416f2d:	rsqrtps xmm0,XMMWORD PTR [edi]
  416f30:	mov    dl,BYTE PTR [edi+eiz*2]
  416f33:	jae    0x416f6c
  416f35:	and    DWORD PTR [ecx-0x29],ecx
  416f38:	cdq    
  416f39:	(bad)  
  416f3a:	rcr    DWORD PTR [edx+0x30474cbf],1
  416f40:	adc    edx,DWORD PTR [ecx]
  416f42:	fs aad 0x2e
  416f45:	mov    al,ds:0x3bac3fe0
  416f4a:	dec    ebp
  416f4b:	push   0xffffff9c
  416f4d:	pusha  
  416f4e:	push   0xfd8f17d2
  416f53:	cwde   
  416f54:	inc    ecx
  416f55:	xor    BYTE PTR [eax-0x1f],dh
  416f58:	enter  0x1db5,0x3b
  416f5c:	xchg   esi,eax
  416f5d:	inc    ecx
  416f5e:	mov    edx,0x36c92ba5
  416f64:	loopne 0x416eeb
  416f66:	imul   eax,esi,0x5f
  416f69:	pop    ebx
  416f6a:	xchg   ecx,eax
  416f6b:	mov    cl,0x3b
  416f6d:	dec    ecx
  416f6e:	jno    0x416f24
  416f70:	adc    eax,0x8ec3754e
  416f75:	jg     0x416f45
  416f77:	enter  0x832d,0x97
  416f7b:	sbb    esi,DWORD PTR [eax-0x10]
  416f7e:	push   ss
  416f7f:	ss or  bh,0x3e
  416f83:	ins    DWORD PTR es:[edi],dx
  416f84:	jl     0x416fc1
  416f86:	or     ch,BYTE PTR ds:0x58e4d982
  416f8c:	dec    edi
  416f8d:	mov    WORD PTR [ecx-0x526f792f],fs
  416f93:	lods   eax,DWORD PTR ds:[esi]
  416f94:	rol    BYTE PTR [eax],1
  416f96:	test   eax,0x2d905948
  416f9b:	dec    esi
  416f9c:	call   0x4949:0xaf86879c
  416fa3:	sub    edx,DWORD PTR [esi+esi*8]
  416fa6:	xlat   BYTE PTR ds:[ebx]
  416fa7:	inc    edx
  416fa8:	lea    ebp,[edi]
  416faa:	cs jbe 0x416f4a
  416fad:	es inc ebp
  416faf:	and    ecx,esi
  416fb1:	call   0x1b2d62e3
  416fb6:	pop    esi
  416fb7:	sbb    ebx,DWORD PTR [ebx]
  416fb9:	lahf   
  416fba:	ss sub ch,bh
  416fbd:	jb     0x416f42
  416fbf:	leave  
  416fc0:	fbstp  TBYTE PTR [eax+0x4a]
  416fc3:	mov    edx,0x3f37709b
  416fc8:	xlat   BYTE PTR ds:[ebx]
  416fc9:	(bad)  
  416fca:	(bad)  
  416fcb:	dec    ecx
  416fcc:	into   
  416fcd:	pop    esi
  416fce:	daa    
  416fcf:	push   es
  416fd0:	and    ebp,DWORD PTR [esi-0x6c68e94b]
  416fd6:	aaa    
  416fd7:	aam    0x12
  416fd9:	mov    edx,0xbeed0581
  416fde:	xchg   ebp,eax
  416fdf:	xchg   esi,eax
  416fe0:	add    al,0xa8
  416fe2:	mov    bh,BYTE PTR [esi+0x4adc61ae]
  416fe8:	adc    DWORD PTR [edx+ecx*4],0xfffffff2
  416fec:	mov    es,WORD PTR [esi]
  416fee:	push   esp
  416fef:	ja     0x417063
  416ff1:	xchg   edx,eax
  416ff2:	dec    esi
  416ff3:	mov    ds:0x87d47df8,eax
  416ff8:	jo     0x417025
  416ffa:	xchg   BYTE PTR ds:0x7cda3400,cl
  417000:	inc    ebx
  417001:	imul   edi,DWORD PTR [ebp-0x276c39db],0x6d06c178
  41700b:	outs   dx,BYTE PTR ds:[esi]
  41700c:	or     bl,BYTE PTR [esp+eax*4+0x60fa2fa1]
  417013:	pop    edx
  417014:	shl    esi,1
  417016:	sahf   
  417017:	mov    esi,edx
  417019:	push   esp
  41701a:	ja     0x417095
  41701c:	sub    BYTE PTR [ebx+esi*2],ah
  41701f:	loop   0x416fc3
  417021:	in     al,0x15
  417023:	loopne 0x417077
  417025:	loope  0x416fb0
  417027:	jecxz  0x417010
  417029:	cs mov dl,0x4f
  41702c:	inc    eax
  41702d:	inc    ebx
  41702e:	ficom  WORD PTR [ebp+0x68d19df4]
  417034:	or     al,0x44
  417036:	or     eax,0xdbc419c7
  41703b:	jbe    0x41704e
  41703d:	and    al,0xd1
  41703f:	rcr    DWORD PTR [edx],1
  417041:	je     0x41703c
  417043:	loopne 0x417089
  417045:	mov    bl,0x7e
  417047:	mov    bl,0xc9
  417049:	outs   dx,BYTE PTR ds:[esi]
  41704a:	(bad)  
  41704b:	sub    dh,BYTE PTR [ebp-0x33f6d561]
  417051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417052:	sub    cl,dl
  417054:	push   ecx
  417055:	dec    eax
  417056:	pop    esp
  417057:	fldenv [eax+0x5edb16d5]
  41705d:	stos   DWORD PTR es:[edi],eax
  41705e:	int3   
  41705f:	inc    ebx
  417060:	iret   
  417061:	and    ch,0xf2
  417064:	add    eax,0xa91bc128
  417069:	add    BYTE PTR [esp+eax*4],0xb1
  41706d:	dec    ebx
  41706e:	fwait
  41706f:	add    bl,BYTE PTR [ebp-0x575ae389]
  417075:	jmp    0x417066
  417077:	add    cl,BYTE PTR [ecx+0x2ee956d1]
  41707d:	es in  al,0xeb
  417080:	out    0xec,al
  417082:	lods   al,BYTE PTR ds:[esi]
  417083:	xor    BYTE PTR [ecx],cl
  417085:	adc    DWORD PTR [ebx],edx
  417087:	fimul  DWORD PTR [esp+ebx*8-0x4f4d610]
  41708e:	retf   
  41708f:	mov    ch,BYTE PTR [ebx]
  417091:	out    0x23,eax
  417093:	dec    ebx
  417094:	dec    edi
  417095:	push   ebp
  417096:	in     eax,0xf2
  417098:	dec    esp
  417099:	and    bh,dl
  41709b:	aam    0x7d
  41709d:	dec    ecx
  41709e:	sahf   
  41709f:	ja     0x4170b1
  4170a1:	fs popf 
  4170a3:	adc    al,0x53
  4170a5:	shl    BYTE PTR [eax+ecx*8-0x15],1
  4170a9:	mov    eax,DWORD PTR [ebp-0x10]
  4170ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0x7ee16436
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    BYTE PTR [edi+0x2e],al
  4171a0:	das    
  4171a1:	stc    
  4171a2:	add    al,ah
  4171a4:	mov    ah,0x9a
  4171a6:	inc    eax
  4171a7:	sbb    dh,ah
  4171a9:	fcom   QWORD PTR [ebp-0x2cffd661]
  4171af:	(bad)  [esi-0x447d0a35]
  4171b5:	out    0x88,eax
  4171b7:	sub    DWORD PTR [eax+0x42],edx
  4171ba:	daa    
  4171bb:	pop    eax
  4171bc:	in     al,0x95
  4171be:	sbb    DWORD PTR ds:0xc980fad7,edi
  4171c4:	sbb    al,dh
  4171c6:	pop    ecx
  4171c7:	sti    
  4171c8:	adc    DWORD PTR [ebx+eax*8-0x5b],0xffffff8d
  4171cd:	imul   esp,DWORD PTR ds:0xf71f1866,0x9da12966
  4171d7:	jmp    0xd59f:0x2f131b2e
  4171de:	pop    ds
  4171df:	jl     0x417163
  4171e1:	lods   al,BYTE PTR ds:[esi]
  4171e2:	cmovbe esi,DWORD PTR [eax+0x5c88b3e5]
  4171e9:	add    ch,BYTE PTR [ecx+0x14fbd864]
  4171ef:	lods   al,BYTE PTR ds:[esi]
  4171f0:	scas   al,BYTE PTR es:[edi]
  4171f1:	and    eax,0x6abea30a
  4171f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f7:	(bad)  
  4171f9:	iret   
  4171fa:	in     eax,dx
  4171fb:	ja     0x4171ca
  4171fd:	shl    DWORD PTR [ecx+ecx*4-0x762fe189],1
  417204:	fimul  WORD PTR [ecx+0x21959390]
  41720a:	mov    bl,0x7f
  41720c:	outs   dx,DWORD PTR ds:[esi]
  41720d:	fbstp  TBYTE PTR [ebx]
  41720f:	cmp    dh,dh
  417211:	pop    DWORD PTR [edx+0x7375d530]
  417217:	mov    bh,0x14
  417219:	fidivr DWORD PTR [eax-0x4f]
  41721c:	inc    edx
  41721d:	sub    eax,0x62fcd944
  417222:	add    edx,DWORD PTR [edi-0x7c]
  417225:	ret    0xefb0
  417228:	fsub   st,st(7)
  41722a:	inc    ecx
  41722b:	mov    eax,ds:0xc6db62b5
  417230:	add    cl,BYTE PTR [ebx]
  417232:	mov    eax,ds:0x6754001a
  417237:	sbb    ebp,ecx
  417239:	in     al,0x1d
  41723b:	in     eax,dx
  41723c:	pop    edx
  41723d:	jl     0x41722f
  41723f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417241:	loope  0x4172ae
  417243:	loopne 0x4172a4
  417245:	pushf  
  417246:	ds adc dl,BYTE PTR fs:[edi+0x4c]
  41724b:	cmp    bl,BYTE PTR [ecx+0x43717ca5]
  417251:	in     eax,dx
  417252:	rol    DWORD PTR [ecx+0x6016b97b],cl
  417258:	cmp    al,0xf4
  41725a:	pop    DWORD PTR [ebx-0x12]
  41725d:	adc    bl,ah
  41725f:	nop
  417260:	dec    esi
  417261:	jge    0x417265
  417263:	mov    dh,0x47
  417265:	sahf   
  417266:	cmp    eax,0x3a32a312
  41726b:	and    eax,0xa0e6271d
  417270:	fild   DWORD PTR [ebx]
  417272:	repz arpl WORD PTR [eax+0x72],sp
  417276:	jo     0x417246
  417278:	cli    
  417279:	sar    DWORD PTR [esi],1
  41727b:	add    dl,BYTE PTR [edi+0x44]
  41727e:	pop    es
  41727f:	mov    bh,0xc7
  417281:	xor    BYTE PTR [edx],bl
  417283:	mov    ds:0x9b51e0b0,eax
  417288:	lock into 
  41728a:	sbb    al,0xaa
  41728c:	and    al,0xa8
  41728e:	pop    ecx
  41728f:	ins    DWORD PTR es:[edi],dx
  417290:	loopne 0x4172ae
  417292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417293:	jmp    0x93ff:0xac0dc5ad
  41729a:	inc    edi
  41729b:	xchg   esp,eax
  41729c:	(bad)  
  41729d:	adc    ebp,edx
  41729f:	addr16 xor esi,esp
  4172a2:	and    al,0xff
  4172a4:	mov    cl,al
  4172a6:	daa    
  4172a7:	lahf   
  4172a8:	in     al,dx
  4172a9:	sub    eax,eax
  4172ab:	out    dx,al
  4172ac:	push   0x6
  4172ae:	cmp    esi,DWORD PTR [esi]
  4172b0:	inc    ecx
  4172b1:	cmp    al,0x21
  4172b3:	ds xchg edi,eax
  4172b5:	adc    eax,0x70617d73
  4172ba:	not    dl
  4172bc:	mov    esp,0x30d6cfb1
  4172c1:	nop
  4172c2:	dec    esp
  4172c3:	sbb    al,0xee
  4172c5:	lahf   
  4172c6:	fisub  DWORD PTR [ecx]
  4172c8:	or     DWORD PTR [edi],edx
  4172ca:	mov    dh,0x61
  4172cc:	ds retf 
  4172ce:	hlt    
  4172cf:	sbb    al,0xa4
  4172d1:	sahf   
  4172d2:	popf   
  4172d3:	lods   al,BYTE PTR ds:[esi]
  4172d4:	and    BYTE PTR [ecx-0x8],ah
  4172d7:	mov    ss,edi
  4172d9:	sub    ebx,DWORD PTR [edi]
  4172db:	push   ebp
  4172dc:	test   ebp,ebx
  4172de:	push   ds
  4172df:	push   eax
  4172e0:	adc    eax,0xff1d6994
  4172e5:	aad    0x1d
  4172e7:	repnz or BYTE PTR [eax+0x1341608e],dh
  4172ee:	xchg   bh,bh
  4172f0:	and    ch,bl
  4172f2:	inc    esp
  4172f3:	lods   eax,DWORD PTR ds:[esi]
  4172f4:	adc    BYTE PTR [ebp+ecx*8+0x77eaec27],dh
  4172fb:	enter  0xb3f9,0xce
  4172ff:	push   ds
  417300:	dec    ecx
  417301:	test   al,0x26
  417303:	sbb    DWORD PTR [esi+0x15bf5537],ebp
  417309:	push   0x449270a7
  41730e:	clc    
  41730f:	pop    esp
  417310:	pop    ss
  417311:	aam    0x9c
  417313:	idiv   ecx
  417315:	daa    
  417316:	jge    0x417322
  417318:	jne    0x4172c8
  41731a:	xchg   ecx,eax
  41731b:	jle    0x4172d0
  41731d:	dec    ebx
  41731e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731f:	aam    0x51
  417321:	ret    0xd075
  417324:	(bad)  
  417325:	and    ah,BYTE PTR [ebp-0x59]
  417328:	push   ecx
  417329:	xchg   edx,eax
  41732a:	ret    
  41732b:	sub    ebp,DWORD PTR [edi-0x53]
  41732e:	mov    edi,edx
  417330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417331:	pop    ebx
  417332:	aam    0x6f
  417334:	dec    ecx
  417335:	lods   eax,DWORD PTR ds:[esi]
  417336:	sub    ah,BYTE PTR [edx-0x564e5090]
  41733c:	ja     0x4172be
  41733e:	xchg   edx,eax
  41733f:	sbb    edx,eax
  417341:	jns    0x41737e
  417343:	imul   esi,DWORD PTR [edx-0x5f912b9d],0xffffffda
  41734a:	cli    
  41734b:	sbb    BYTE PTR [eax-0x30f09635],bh
  417351:	sbb    ah,BYTE PTR ds:0xc3e3ab59
  417357:	mov    ds:0xfa70242b,eax
  41735c:	call   0x68236a4d
  417361:	fs cmc 
  417363:	jo     0x417376
  417365:	mov    al,ds:0x55ffa440
  41736a:	lea    eax,[edx-0x2d]
  41736d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41736e:	xor    ch,ch
  417370:	ficomp DWORD PTR [edi]
  417372:	dec    esi
  417373:	sub    BYTE PTR [ecx-0x1c1185b7],cl
  417379:	fcomp  DWORD PTR [eax-0x3c4cf601]
  41737f:	stos   BYTE PTR es:[edi],al
  417380:	in     al,0xfc
  417382:	and    ebp,edx
  417384:	adc    eax,0x26937322
  417389:	adc    eax,0x28ec8cfc
  41738e:	fcomp  DWORD PTR [esi]
  417390:	mov    esi,0x1e4e5179
  417395:	push   esp
  417396:	jbe    0x4173d3
  417398:	ja     0x417365
  41739a:	call   0x2862598c
  41739f:	or     ah,BYTE PTR [eax]
  4173a1:	popa   
  4173a2:	outs   dx,DWORD PTR ds:[esi]
  4173a3:	push   0x37
  4173a5:	clc    
  4173a6:	add    al,0xc5
  4173a8:	adc    ecx,DWORD PTR [edi+0x3d7a4c1e]
  4173ae:	pop    edx
  4173af:	mov    cl,dl
  4173b1:	or     al,al
  4173b3:	push   eax
  4173b4:	daa    
  4173b5:	nop
  4173b6:	inc    ebx
  4173b7:	dec    esi
  4173b8:	jmp    0x8d6f:0xc9109ecc
  4173bf:	addr16 xchg edx,eax
  4173c1:	in     eax,0xf7
  4173c3:	lods   al,BYTE PTR ds:[esi]
  4173c4:	into   
  4173c5:	adc    BYTE PTR [ecx],ch
  4173c7:	not    BYTE PTR [ebx-0x7a]
  4173ca:	outs   dx,DWORD PTR ds:[esi]
  4173cb:	xor    cl,al
  4173cd:	sbb    BYTE PTR [ebp-0x2b6b1c3e],cl
  4173d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173d4:	inc    edx
  4173d5:	cmp    al,0x4
  4173d7:	in     al,0x3c
  4173d9:	das    
  4173da:	into   
  4173db:	mov    eax,ds:0x1b65b60f
  4173e0:	add    ax,0x36c
  4173e4:	loop   0x41737f
  4173e6:	mov    ch,BYTE PTR [ebx+0x2c]
  4173e9:	or     eax,0x14eb7bd1
  4173ee:	push   esi
  4173ef:	loop   0x417407
  4173f1:	(bad)  
  4173f2:	mov    ch,0xf2
  4173f4:	adc    al,0xb3
  4173f6:	xchg   esi,eax
  4173f7:	iret   
  4173f8:	in     al,0x87
  4173fa:	fs jae 0x4173ed
  4173fd:	add    dh,BYTE PTR [ebp-0x709aef53]
  417403:	retf   
  417404:	mov    edx,0xf55bef2f
  417409:	scas   eax,DWORD PTR es:[edi]
  41740a:	push   esp
  41740b:	fstp   DWORD PTR [ebp+0x44]
  41740e:	sbb    BYTE PTR [edi+eiz*4+0xac53b51],dh
  417415:	jns    0x417448
  417417:	ss push ds
  417419:	and    bl,BYTE PTR [ebp+0x38]
  41741c:	mov    esi,0x620c8e37
  417421:	repz shr bl,0x92
  417425:	mov    ch,0x41
  417427:	in     eax,dx
  417428:	pushf  
  417429:	jo     0x417465
  41742b:	(bad)
  41742f:	cdq    
  417430:	cmp    ebx,edi
  417432:	ins    BYTE PTR es:[edi],dx
  417433:	pop    ebp
  417434:	shl    ecx,cl
  417436:	xchg   esp,eax
  417437:	test   DWORD PTR [eax-0x38],ebx
  41743a:	stc    
  41743b:	fsub   QWORD PTR [ebp-0x3f]
  41743e:	add    DWORD PTR [ebx+0x5fc4da8a],esi
  417444:	push   esi
  417445:	(bad)  
  417446:	and    al,0xb1
  417448:	and    al,0x6e
  41744a:	shl    BYTE PTR [ebx],cl
  41744c:	ret    0x6f94
  41744f:	popa   
  417450:	mov    eax,ds:0xc572361c
  417455:	test   eax,0xf85b64a6
  41745a:	sti    
  41745b:	dec    edx
  41745c:	add    BYTE PTR [ecx],0xdb
  41745f:	sbb    dl,BYTE PTR ds:0x42f159be
  417465:	sti    
  417466:	or     BYTE PTR ds:0xca1730e5,ch
  41746c:	inc    edi
  41746d:	(bad)  
  41746e:	or     al,0xa0
  417470:	jno    0x417451
  417472:	or     ebp,esp
  417474:	mov    DWORD PTR [esi],ecx
  417476:	(bad)  
  417477:	xor    al,0x4
  417479:	lods   al,BYTE PTR fs:[esi]
  41747b:	leave  
  41747c:	mov    DWORD PTR [ebp+0x3885defe],esi
  417482:	xchg   edi,eax
  417483:	pop    ss
  417484:	loopne 0x41744e
  417486:	in     eax,0xf8
  417488:	or     ebx,ebp
  41748a:	loopne 0x417447
  41748c:	popa   
  41748d:	(bad)  
  41748e:	mov    ds:0x6aca29b5,eax
  417493:	in     eax,dx
  417494:	call   0x365f:0x933eba90
  41749b:	lea    eax,[ebx]
  41749d:	mov    ebp,0x814f77d8
  4174a2:	stos   DWORD PTR es:[edi],eax
  4174a3:	sub    ecx,DWORD PTR [esi]
  4174a5:	ret    0x8cec
  4174a8:	add    al,0x52
  4174aa:	or     eax,0x833bd917
  4174af:	mov    bl,0x8c
  4174b1:	cs (bad) 
  4174b3:	sbb    bl,ah
  4174b5:	shr    DWORD PTR [ebx-0x1fa98501],1
  4174bb:	inc    esi
  4174bc:	push   ebp
  4174bd:	mov    ch,0x5a
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223c4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e60
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223b0
  417502:	call   DWORD PTR ds:0x428e84
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e6c
  41750f:	mov    ecx,DWORD PTR ds:0x422778
  417515:	sub    DWORD PTR ds:0x4282ff,0x42837b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [eax+edx*4+0xabefa8b]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1+0x17a01818],bh
  41753e:	mov    ds:0x562b5af8,eax
  417543:	icebp  
  417544:	sub    eax,0xc71953c5
  417549:	call   0x6178:0xef943e87
  417550:	push   ss
  417551:	sbb    eax,0xedad8a47
  417556:	xor    al,0xd2
  417558:	xlat   BYTE PTR ds:[ebx]
  417559:	scas   al,BYTE PTR es:[edi]
  41755a:	jecxz  0x417516
  41755c:	inc    edx
  41755d:	inc    esi
  41755e:	or     BYTE PTR [ecx-0x63],dh
  417561:	fcmove st,st(4)
  417563:	aas    
  417564:	jmp    0x80a277f9
  417569:	je     0x4175cf
  41756b:	in     eax,dx
  41756c:	dec    edx
  41756d:	add    BYTE PTR [esi+0x15],bl
  417570:	mul    BYTE PTR [edx-0x5de78536]
  417576:	jns    0x41759c
  417578:	cmp    al,0x0
  41757a:	stos   DWORD PTR es:[edi],eax
  41757b:	push   ss
  41757c:	int3   
  41757d:	and    eax,0x38cc48e0
  417582:	ror    BYTE PTR [ebp+edi*2-0x68],0x2f
  417587:	jne    0x417538
  417589:	jae    0x4175ad
  41758b:	xchg   ch,al
  41758d:	pop    ss
  41758e:	pop    ds
  41758f:	stos   DWORD PTR es:[edi],eax
  417590:	add    DWORD PTR [ecx],edx
  417592:	mov    bl,0x28
  417594:	dec    BYTE PTR ss:[ebp+0x77]
  417598:	mov    al,ds:0xd9403915
  41759d:	lods   al,BYTE PTR ds:[esi]
  41759e:	xchg   esp,eax
  41759f:	arpl   WORD PTR [edx],di
  4175a1:	xchg   esp,eax
  4175a2:	jbe    0x4175f5
  4175a4:	jne    0x417560
  4175a6:	pop    ds
  4175a7:	mov    bh,0x2d
  4175a9:	add    esi,esp
  4175ab:	adc    BYTE PTR [eax],0x94
  4175ae:	mov    eax,edi
  4175b0:	and    bh,BYTE PTR [edi]
  4175b2:	adc    DWORD PTR [edx-0x51],ecx
  4175b5:	pop    ds
  4175b6:	mov    ds:0x6706bc0,eax
  4175bb:	adc    ecx,eax
  4175bd:	(bad)  
  4175be:	mov    bl,0x16
  4175c0:	lods   al,BYTE PTR ds:[esi]
  4175c1:	clc    
  4175c2:	sub    eax,DWORD PTR [ecx-0x35]
  4175c5:	in     al,0xd4
  4175c7:	psrad  mm3,QWORD PTR [edx]
  4175ca:	outs   dx,BYTE PTR ds:[esi]
  4175cb:	repz and ebx,DWORD PTR [edx-0x159a81e2]
  4175d2:	mov    WORD PTR [ecx],?
  4175d4:	sub    al,0xa7
  4175d6:	fcomi  st,st(4)
  4175d8:	mov    edi,0xc4f389c9
  4175dd:	mov    WORD PTR [edi-0x4e],fs
  4175e0:	ffreep st(1)
  4175e2:	sar    BYTE PTR [ebx-0x4e0680f],1
  4175e8:	push   eax
  4175e9:	add    cl,BYTE PTR ds:0xd33da84e
  4175ef:	mov    edi,0x9bdcd1af
  4175f4:	hlt    
  4175f5:	arpl   WORD PTR [ecx],dx
  4175f7:	mov    eax,ds:0x4931b124
  4175fc:	stos   DWORD PTR es:[edi],eax
  4175fd:	lods   eax,DWORD PTR ds:[esi]
  4175fe:	retf   
  4175ff:	xor    esi,DWORD PTR [eax+eax*8-0x225211cf]
  417606:	loop   0x4175cf
  417608:	pop    esi
  417609:	xchg   ebp,eax
  41760a:	push   es
  41760b:	test   al,bl
  41760d:	adc    esp,DWORD PTR [eax+0x7b]
  417610:	or     dl,BYTE PTR [ebx+0x5ff8040c]
  417616:	mov    gs,WORD PTR [edx+0x5b9aa5c4]
  41761c:	repz mov ebp,0x8c1eff26
  417622:	xchg   esp,eax
  417623:	scas   eax,DWORD PTR es:[edi]
  417624:	test   BYTE PTR [eax],dh
  417626:	adc    bl,dh
  417628:	ds das 
  41762a:	xchg   ebp,eax
  41762b:	xchg   BYTE PTR [eax-0x24],dl
  41762e:	das    
  41762f:	pusha  
  417630:	inc    ebp
  417631:	push   cs
  417632:	jl     0x417624
  417634:	sub    BYTE PTR ds:0x358bb65,al
  41763a:	or     dh,BYTE PTR ds:0x5691c6f4
  417640:	and    al,0x0
  417642:	push   ecx
  417643:	xlat   BYTE PTR ds:[ebx]
  417644:	and    DWORD PTR [esi],ebp
  417646:	add    esp,ebp
  417648:	push   edi
  417649:	(bad)  
  41764a:	into   
  41764b:	mov    eax,ss
  41764d:	jmp    0x4176ac
  41764f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417650:	pop    eax
  417651:	cwde   
  417652:	mov    esp,DWORD PTR [eax+0x4fbc08c5]
  417658:	loopne 0x417638
  41765a:	mov    al,ds:0x99d8e53d
  41765f:	add    BYTE PTR [ecx],cl
  417661:	jmp    0x4a3e3e0e
  417666:	sub    ecx,DWORD PTR [eax]
  417668:	call   0x50c8:0x9e3d668e
  41766f:	jb     0x4176da
  417671:	call   FWORD PTR [edi]
  417673:	and    al,0xae
  417675:	mov    dh,0x37
  417677:	cwde   
  417678:	mov    edx,0x6b404c49
  41767d:	or     DWORD PTR [esi],edi
  41767f:	aaa    
  417680:	fcomp  DWORD PTR [ebp+0x616eff7a]
  417686:	nop
  417687:	inc    ebx
  417688:	inc    ebx
  417689:	lahf   
  41768a:	sbb    eax,0x5314fc21
  41768f:	mov    cl,0x24
  417691:	cld    
  417692:	cdq    
  417693:	fisubr DWORD PTR [edx-0x68]
  417696:	cmp    eax,0xdfea7cf2
  41769b:	xchg   ebp,eax
  41769c:	xchg   ebp,eax
  41769d:	pop    edi
  41769e:	mov    ah,0xca
  4176a0:	imul   edi,DWORD PTR [ebx-0x2c],0x9f7aa9b0
  4176a7:	popf   
  4176a8:	lods   al,BYTE PTR ds:[esi]
  4176a9:	mov    edi,0x3b517a46
  4176ae:	stos   BYTE PTR es:[edi],al
  4176af:	(bad)  
  4176b0:	adc    ch,BYTE PTR ds:0x340f52a7
  4176b6:	cli    
  4176b7:	sub    ah,BYTE PTR [edi-0x4a]
  4176ba:	sub    esp,DWORD PTR [eax+0x778b7f09]
  4176c0:	ret    0x57ad
  4176c3:	cmp    esi,DWORD PTR [edi+0x47773edf]
  4176c9:	mov    al,0xc9
  4176cb:	into   
  4176cc:	stc    
  4176cd:	xchg   edi,eax
  4176ce:	sub    edi,DWORD PTR [ebx+edi*2+0x41f3949]
  4176d5:	mov    ecx,0x3a1f71f3
  4176da:	xor    DWORD PTR [edi],0xa9262756
  4176e0:	(bad)  
  4176e1:	jge    0x4176f4
  4176e3:	mov    bl,0x9c
  4176e5:	sub    eax,0xef664fdb
  4176ea:	jnp    0x417743
  4176ec:	cmp    eax,0xbfaeef8a
  4176f1:	call   0x7f5b5a60
  4176f6:	ds (bad) 
  4176f8:	mov    edx,DWORD PTR [edx]
  4176fa:	mov    dh,BYTE PTR [esi]
  4176fc:	out    0xdd,eax
  4176fe:	fisub  DWORD PTR [ebp-0x30]
  417701:	popw   es
  417703:	xor    BYTE PTR [ebx-0x254ce713],bh
  417709:	lods   eax,DWORD PTR ds:[esi]
  41770a:	pusha  
  41770b:	mov    edi,0xcf77c02a
  417710:	stc    
  417711:	aas    
  417712:	ins    BYTE PTR es:[edi],dx
  417713:	jecxz  0x4176dc
  417715:	(bad)  
  417716:	stos   DWORD PTR es:[edi],eax
  417717:	xchg   BYTE PTR [ecx],al
  417719:	jmp    0x4c15:0xc612450c
  417720:	xor    DWORD PTR [eax-0x2e],esp
  417723:	pop    ecx
  417724:	cmp    esp,DWORD PTR [ebx+0x7fdc485c]
  41772a:	pop    ebp
  41772b:	xor    DWORD PTR [ecx+0xabe4764],ebp
  417731:	sbb    eax,0xfaaf7958
  417736:	das    
  417737:	pushf  
  417738:	fisttp WORD PTR [edi]
  41773a:	enter  0x3501,0xa2
  41773e:	(bad)  
  41773f:	loop   0x4177b6
  417741:	push   ebx
  417742:	test   al,0xcd
  417744:	icebp  
  417745:	pop    edi
  417746:	out    dx,al
  417747:	ss ins BYTE PTR es:[edi],dx
  417749:	sub    bl,BYTE PTR [ebx]
  41774b:	sub    eax,0x5c5d923d
  417750:	js     0x4176de
  417752:	mov    ebp,0x2868d19c
  417757:	jl     0x41777d
  417759:	(bad)  
  41775a:	lods   eax,DWORD PTR ds:[esi]
  41775b:	mov    ah,0x52
  41775d:	xlat   BYTE PTR ds:[ebx]
  41775e:	pop    eax
  41775f:	mov    edx,ds
  417761:	mov    edx,0x8552c1b0
  417766:	out    dx,al
  417767:	sub    esi,DWORD PTR ds:0xf8415c4e
  41776d:	hlt    
  41776e:	inc    eax
  41776f:	mov    ss:0x7fed0561,eax
  417775:	sbb    BYTE PTR [esi+0x5d03b06e],bh
  41777b:	ins    BYTE PTR es:[edi],dx
  41777c:	dec    edi
  41777d:	xlat   BYTE PTR ds:[ebx]
  41777e:	adc    esi,edx
  417780:	add    al,0xf7
  417782:	mov    eax,0x629d9561
  417787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417788:	fstp   DWORD PTR [ebp-0x2b]
  41778b:	ror    BYTE PTR [edx+ebx*1+0x11],cl
  41778f:	add    DWORD PTR [esi],esp
  417791:	enter  0x5f02,0xe9
  417795:	inc    esp
  417796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417797:	fist   DWORD PTR [edx+0x660c67d5]
  41779d:	clc    
  41779e:	das    
  41779f:	fisttp WORD PTR [ecx-0x54807470]
  4177a5:	and    BYTE PTR [esi+0x67],dh
  4177a8:	cli    
  4177a9:	jmp    DWORD PTR [edx-0x67]
  4177ac:	cmp    eax,0x4c8d589c
  4177b1:	jne    0x417788
  4177b3:	xor    eax,0x727f5aa0
  4177b8:	and    BYTE PTR [edx+edx*2-0x39559b1d],ah
  4177bf:	cmp    DWORD PTR [eax+0x38],edx
  4177c2:	sbb    DWORD PTR [ecx+0x12d7073],0xffffffee
  4177c9:	pop    esi
  4177ca:	cmp    al,0xfc
  4177cc:	add    al,0x40
  4177ce:	stos   BYTE PTR es:[edi],al
  4177cf:	ds aaa 
  4177d1:	and    al,BYTE PTR [ebp+eiz*2-0x47]
  4177d5:	push   esp
  4177d6:	push   cs
  4177d7:	sub    dh,BYTE PTR [ecx+ebp*2+0x42110cb5]
  4177de:	in     eax,dx
  4177df:	sub    bh,BYTE PTR [ebx+0x7fc21f6b]
  4177e5:	inc    esp
  4177e6:	dec    edi
  4177e7:	dec    edx
  4177e8:	pop    esi
  4177e9:	push   es
  4177ea:	mov    WORD PTR [edx+edi*2-0x3161e5e0],gs
  4177f1:	inc    ebx
  4177f2:	cmp    eax,DWORD PTR [edx-0x4f]
  4177f5:	add    eax,0xa4767142
  4177fa:	int3   
  4177fb:	mov    eax,0x940095d0
  417800:	sbb    cl,ch
  417802:	or     al,al
  417804:	lods   al,BYTE PTR ds:[esi]
  417805:	hlt    
  417806:	shl    al,1
  417808:	ret    
  417809:	inc    esp
  41780a:	cmp    eax,0x4f2612f4
  41780f:	lods   eax,DWORD PTR ds:[esi]
  417810:	cmp    eax,edi
  417812:	les    eax,FWORD PTR [ebx+0x26]
  417815:	push   0xf978532a
  41781a:	dec    esp
  41781b:	ja     0x417805
  41781d:	aad    0x6c
  41781f:	fcom   DWORD PTR [ebx+0x6f071470]
  417825:	and    edx,edx
  417827:	inc    esi
  417828:	jb     0x41787d
  41782a:	xor    al,0xe3
  41782c:	cs cs pop ecx
  41782f:	test   al,0x14
  417831:	push   esp
  417832:	jecxz  0x417839
  417834:	cmp    dl,BYTE PTR [edx-0x159dcfb0]
  41783a:	adc    ebx,DWORD PTR [ebx+0x4c]
  41783d:	stc    
  41783e:	xor    eax,0x86c41a72
  417843:	jmp    0x8636:0x12048c33
  41784a:	pop    eax
  41784b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41784c:	pop    ds
  41784d:	xchg   ebp,eax
  41784e:	rcl    ecx,1
  417850:	mov    edi,0x7e97772a
  417855:	sbb    DWORD PTR [ebx],edx
  417857:	cs nop
  417859:	lahf   
  41785a:	repz int3 
  41785c:	pushf  
  41785d:	jne    0x41786d
  41785f:	jbe    0x417891
  417861:	inc    edi
  417862:	loop   0x41785b
  417864:	mov    ds:0xf0bd785b,eax
  417869:	mov    al,ds:0x310280ab
  41786e:	xchg   edi,eax
  41786f:	adc    eax,0x8b758c32
  417874:	adc    DWORD PTR [ecx-0x5b],esi
  417877:	out    0x7d,al
  417879:	adc    al,0xd2
  41787b:	fidivr WORD PTR [esi+0x543c4008]
  417881:	mov    ah,0x28
  417883:	and    DWORD PTR [edi],eax
  417885:	into   
  417886:	ja     0x41781d
  417888:	push   cs
  417889:	cmp    eax,0x21fbb1e1
  41788e:	std    
  41788f:	add    BYTE PTR [ecx],bh
  417891:	or     BYTE PTR [edx],al
  417893:	pop    ecx
  417894:	std    
  417895:	xchg   ebx,eax
  417896:	sbb    DWORD PTR [eax+ecx*4-0x53],0xffffffc8
  41789b:	jno    0x4178d0
  41789d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41789e:	aas    
  41789f:	or     eax,0x308a474c
  4178a4:	bound  ebx,QWORD PTR [esi+0x2b]
  4178a7:	mov    dh,0xd4
  4178a9:	scas   al,BYTE PTR es:[edi]
  4178aa:	test   eax,0x35024f42
  4178af:	cld    
  4178b0:	(bad)  
  4178b1:	xchg   esi,eax
  4178b2:	mov    cl,0xf3
  4178b4:	lods   eax,DWORD PTR ds:[esi]
  4178b5:	cmp    DWORD PTR [edx-0xac3d9f2],0x23
  4178bc:	ja     0x41788a
  4178be:	outs   dx,DWORD PTR ds:[esi]
  4178bf:	jl     0x4178ac
  4178c1:	int3   
  4178c2:	in     al,dx
  4178c3:	ja     0x4178d1
  4178c5:	cli    
  4178c6:	add    DWORD PTR [edx],esi
  4178c8:	pop    ecx
  4178c9:	dec    BYTE PTR [ebx]
  4178cb:	jp     0x4178f8
  4178cd:	push   0xffffffcb
  4178cf:	pushf  
  4178d0:	and    al,0xd8
  4178d2:	mov    bh,BYTE PTR [edi-0x4]
  4178d5:	ja     0x417951
  4178d7:	enter  0xf211,0x88
  4178db:	xor    al,0x9a
  4178dd:	out    dx,al
  4178de:	sbb    dh,BYTE PTR [edx+0x6b]
  4178e1:	xor    edi,DWORD PTR [esp+ecx*4]
  4178e4:	arpl   WORD PTR [esi+0x1e],bx
  4178e7:	das    
  4178e8:	add    eax,0x4f171ae8
  4178ed:	dec    esi
  4178ee:	push   0x0
  4178f0:	and    DWORD PTR ds:0x428297,0x6fb6
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428237,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42824f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428237,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282d7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x42829f,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42824f,0x428257
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428313,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42826f,0x42819b
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42815b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42825f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x42829b,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283a7
  4179bb:	add    DWORD PTR ds:0x42816b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x428293,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428153,0x42836f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42816b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428257
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x4282f7,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428273,0x0
  417a53:	mov    DWORD PTR ds:0x4282ef,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428267,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428273,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428de4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428247,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282d3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42818b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x42819b,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42815f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [ebx+ecx*2-0x51432642],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x3c46e7e8],bh
  417b02:	adc    ecx,esp
  417b04:	jmp    0x417b84
  417b06:	adc    eax,0xbc2004f7
  417b0b:	jne    0x417af0
  417b0d:	aas    
  417b0e:	(bad)  
  417b0f:	cmp    esp,DWORD PTR [esi-0x50]
  417b12:	fnstenv [ecx+0x261011e6]
  417b18:	jbe    0x417ac6
  417b1a:	inc    ecx
  417b1b:	lea    esp,[eax-0x5a]
  417b1e:	sub    cl,bl
  417b20:	mov    cl,0x4c
  417b22:	popf   
  417b23:	loop   0x417aca
  417b25:	sbb    edi,esi
  417b27:	xor    BYTE PTR [ecx],bh
  417b29:	push   ebp
  417b2a:	popf   
  417b2b:	enter  0x2425,0xc8
  417b2f:	xor    eax,0x30c16226
  417b34:	jl     0x417b19
  417b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b37:	push   cs
  417b38:	jae    0x417b87
  417b3a:	sbb    BYTE PTR [esi],ah
  417b3c:	inc    esp
  417b3d:	je     0x417b59
  417b3f:	(bad)  
  417b40:	popf   
  417b41:	loope  0x417b53
  417b43:	jecxz  0x417b44
  417b45:	and    bh,bl
  417b47:	cmp    ch,al
  417b49:	cmp    eax,0x86a513ab
  417b4e:	jns    0x417b7e
  417b50:	adc    esi,esp
  417b52:	jmp    FWORD PTR [eax+0x1a1604c7]
  417b58:	jmp    0x417ae5
  417b5a:	adc    eax,0xfd9b2e7c
  417b5f:	loop   0x417b92
  417b61:	in     al,dx
  417b62:	push   esp
  417b63:	scas   al,BYTE PTR es:[edi]
  417b64:	pushf  
  417b65:	mov    eax,ebp
  417b67:	push   ds
  417b68:	inc    esp
  417b6a:	cdq    
  417b6b:	fwait
  417b6c:	or     esp,edx
  417b6e:	mov    bh,0x9
  417b70:	arpl   WORD PTR [eax+0x65],sp
  417b73:	mov    ds:0xc4eafb1b,eax
  417b78:	repnz xor al,0x15
  417b7b:	in     eax,0xc3
  417b7d:	inc    edx
  417b7e:	loopne 0x417bab
  417b80:	dec    esi
  417b81:	jb     0x417b1e
  417b83:	xchg   ebp,eax
  417b84:	jb     0x417b6b
  417b86:	pop    ebp
  417b87:	mov    eax,0x595f05f4
  417b8c:	jecxz  0x417bfe
  417b8e:	(bad)  
  417b8f:	xchg   esp,eax
  417b90:	cdq    
  417b91:	bnd jg 0x417b78
  417b94:	xchg   ebx,eax
  417b95:	jne    0x417b47
  417b97:	ret    0xace0
  417b9a:	mov    dl,0xc0
  417b9c:	pusha  
  417b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b9e:	jecxz  0x417bc0
  417ba0:	(bad)  
  417ba3:	aad    0x14
  417ba5:	mov    ecx,0x8f873f80
  417baa:	loop   0x417ba6
  417bac:	repz jp 0x417c08
  417baf:	lock push esi
  417bb1:	or     DWORD PTR [edi-0x21],0x68045689
  417bb8:	mov    al,ds:0xa5475c7c
  417bbd:	adc    al,0x31
  417bbf:	dec    eax
  417bc0:	mov    ecx,0xc8a69d9
  417bc5:	xor    eax,0x596ba856
  417bca:	in     al,0x5
  417bcc:	ret    0x627b
  417bcf:	xor    eax,0x7900b781
  417bd4:	mov    ch,0xc2
  417bd6:	add    BYTE PTR [esi],dh
  417bd8:	sbb    DWORD PTR [ebp+0x58d001d4],ebp
  417bde:	test   eax,0xaed516ae
  417be3:	call   0x762a:0xb97b4bf9
  417bea:	not    bl
  417bec:	je     0x417c6a
  417bee:	rcl    esp,cl
  417bf0:	mov    al,ds:0x110e23e5
  417bf5:	inc    eax
  417bf6:	dec    eax
  417bf7:	scas   al,BYTE PTR es:[edi]
  417bf8:	pop    ds
  417bf9:	jns    0x417ba9
  417bfb:	out    dx,eax
  417bfc:	in     eax,dx
  417bfd:	test   DWORD PTR [esi+edi*4],esi
  417c00:	mov    dl,0x3c
  417c02:	lods   eax,DWORD PTR ds:[esi]
  417c03:	aas    
  417c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c05:	js     0x417c52
  417c07:	repz jg 0x417bf2
  417c0a:	mov    esi,0xfc2a580e
  417c0f:	lea    ebp,[ebx]
  417c11:	inc    esp
  417c12:	or     DWORD PTR [eax-0x37],esp
  417c15:	mov    cs,WORD PTR [esi+ebx*8+0x33115cd5]
  417c1c:	gs ret 0x271c
  417c20:	jno    0x417c94
  417c22:	outs   dx,BYTE PTR ss:[esi]
  417c24:	jne    0x417c26
  417c26:	add    edi,DWORD PTR [esi+0x25]
  417c29:	jg     0x417c6c
  417c2b:	xor    cl,dl
  417c2d:	mov    dh,0xf5
  417c2f:	inc    ebx
  417c30:	jecxz  0x417c9d
  417c32:	fidivr DWORD PTR [ebx-0x2341b4bc]
  417c38:	(bad)  
  417c39:	scas   eax,DWORD PTR es:[edi]
  417c3a:	mov    bl,0x92
  417c3c:	pop    edx
  417c3d:	mov    ecx,0x3d174dd7
  417c42:	mov    ch,0x76
  417c44:	retf   
  417c45:	xor    BYTE PTR [ecx+ecx*8],dl
  417c48:	jno    0x417c8c
  417c4a:	mov    bl,0xe
  417c4c:	push   cs
  417c4d:	in     eax,0x49
  417c4f:	xor    dl,cl
  417c51:	fidivr DWORD PTR [ebp+0x4326d54a]
  417c57:	lods   eax,DWORD PTR ds:[esi]
  417c58:	adc    al,BYTE PTR [esp+eax*4]
  417c5b:	call   0xc7c8:0x2d1e62f6
  417c62:	xchg   edi,eax
  417c63:	cdq    
  417c64:	dec    esp
  417c65:	sbb    BYTE PTR [ebp+0x24],dl
  417c68:	in     al,dx
  417c69:	mov    ah,0x99
  417c6b:	shl    DWORD PTR [esi+ecx*4+0x35969263],cl
  417c72:	or     ah,dh
  417c74:	mov    ecx,0x87464963
  417c79:	inc    edi
  417c7a:	lock mov dl,0x93
  417c7d:	and    al,0xf5
  417c7f:	cmp    BYTE PTR [esi-0x30bb0c1a],al
  417c85:	sbb    al,0xe1
  417c87:	dec    ebp
  417c88:	pop    edx
  417c89:	int    0x0
  417c8b:	sti    
  417c8c:	adc    ebx,DWORD PTR ds:0x46e49c82
  417c92:	ret    0x1d0e
  417c95:	mov    cl,0x36
  417c97:	fild   QWORD PTR [eax+0x38]
  417c9a:	push   ebp
  417c9b:	push   esp
  417c9c:	stos   DWORD PTR es:[edi],eax
  417c9d:	mov    ds,WORD PTR [ebp+edi*4+0x1d]
  417ca1:	pop    ss
  417ca2:	out    dx,eax
  417ca3:	aaa    
  417ca4:	pop    edx
  417ca5:	cmp    ah,ch
  417ca7:	mov    al,0xba
  417ca9:	mov    edx,0xaf0dd656
  417cae:	jnp    0x417c88
  417cb0:	(bad)  
  417cb1:	shl    DWORD PTR [ecx],cl
  417cb3:	out    0xd,al
  417cb5:	and    al,0x6e
  417cb7:	jb     0x417cb0
  417cb9:	stos   DWORD PTR es:[edi],eax
  417cba:	clc    
  417cbb:	out    0x6d,al
  417cbd:	jmp    0xcd66c744
  417cc2:	enter  0x5103,0xb2
  417cc6:	xchg   ebp,eax
  417cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc8:	cmp    BYTE PTR [eax],al
  417cca:	and    edx,DWORD PTR [ecx]
  417ccc:	(bad)  
  417ccd:	cli    
  417cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ccf:	in     al,dx
  417cd0:	sub    DWORD PTR [eax+0x372b728b],eax
  417cd6:	and    DWORD PTR [edi+0x10],edx
  417cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cda:	and    esi,ebx
  417cdc:	stos   BYTE PTR es:[edi],al
  417cdd:	imul   ebp,DWORD PTR [ebx],0xe2fd0c49
  417ce3:	jo     0x417d27
  417ce5:	xor    al,BYTE PTR [edx+0x711f9e87]
  417ceb:	jo     0x417cdc
  417ced:	(bad)  ss:[ecx-0x4968e5db]
  417cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf5:	test   DWORD PTR [ebx-0xe],edx
  417cf8:	xor    DWORD PTR [edx+0x54e898d5],ebx
  417cfe:	pop    ecx
  417cff:	jb     0x417cd3
  417d01:	aaa    
  417d02:	test   eax,0x2dc3167c
  417d07:	pop    eax
  417d08:	cmp    al,0x3
  417d0a:	test   al,0x78
  417d0c:	pop    ds
  417d0d:	cdq    
  417d0e:	push   ss
  417d0f:	in     al,0x43
  417d11:	pop    edi
  417d12:	xor    eax,0xd21253e4
  417d17:	dec    ebx
  417d18:	xor    eax,0x273eab23
  417d1d:	out    0xa8,al
  417d1f:	mov    dl,cl
  417d21:	mov    cl,0xc3
  417d23:	ins    DWORD PTR es:[edi],dx
  417d24:	push   ss
  417d25:	mov    ds,WORD PTR [esi]
  417d27:	dec    eax
  417d28:	push   esp
  417d29:	push   edx
  417d2a:	jmp    0x417d81
  417d2c:	fdecstp 
  417d2e:	mov    esi,0x4321f17d
  417d33:	ja     0x417d1d
  417d35:	adc    al,0x80
  417d37:	loop   0x417d03
  417d39:	dec    ebx
  417d3a:	add    BYTE PTR [ebp-0x26ec384a],cl
  417d40:	dec    ecx
  417d41:	xchg   DWORD PTR [edi],ecx
  417d43:	and    bh,cl
  417d45:	jg     0x417d2d
  417d47:	dec    esp
  417d48:	jg     0x417db8
  417d4a:	mov    bh,0x26
  417d4c:	cmp    al,0x38
  417d4e:	loope  0x417cf1
  417d50:	fdiv   QWORD PTR [edx-0x1f]
  417d53:	cmp    al,0xfe
  417d55:	jns    0x417db8
  417d57:	leave  
  417d58:	xlat   BYTE PTR ds:[ebx]
  417d59:	mov    ds:0x2f693fa4,al
  417d5e:	es xor edi,ebp
  417d61:	daa    
  417d62:	push   edi
  417d63:	pop    ds
  417d64:	dec    esi
  417d65:	xchg   ebx,eax
  417d66:	ds sub al,0xe8
  417d69:	retf   0x26e0
  417d6c:	lahf   
  417d6d:	rol    BYTE PTR [esi+0x643a7a08],cl
  417d73:	inc    eax
  417d74:	sub    bl,BYTE PTR [edx]
  417d76:	fsubr  st(2),st
  417d78:	dec    edi
  417d79:	mov    BYTE PTR [esi+ecx*1-0x67],al
  417d7d:	rcr    BYTE PTR [eax-0x6f],0x70
  417d81:	mov    ds,WORD PTR [ecx+0xa]
  417d84:	add    al,BYTE PTR [edi+ecx*2-0x3fab28d]
  417d8b:	xchg   edi,eax
  417d8c:	(bad)  
  417d8d:	das    
  417d8e:	sub    al,0xe7
  417d90:	dec    ebx
  417d91:	jbe    0x417d3c
  417d93:	out    dx,al
  417d94:	fld    QWORD PTR [ebx-0x6d]
  417d97:	fldcw  WORD PTR [ebp+0x3c]
  417d9a:	pop    ebx
  417d9b:	ins    DWORD PTR es:[edi],dx
  417d9c:	adc    dl,al
  417d9e:	es adc al,0x20
  417da1:	ror    BYTE PTR [edi+edi*1-0x31482d9c],0x7f
  417da9:	sbb    al,0x61
  417dab:	int    0x23
  417dad:	mov    BYTE PTR [ecx-0x1a9dd1cf],al
  417db3:	push   eax
  417db4:	inc    esi
  417db5:	addr16 xchg ecx,eax
  417db7:	aam    0xc1
  417db9:	(bad)  
  417dba:	sahf   
  417dbb:	imul   ebp,DWORD PTR cs:[edi],0xffffffb0
  417dbf:	dec    ebx
  417dc0:	jecxz  0x417dd3
  417dc2:	mov    ah,0x45
  417dc4:	mov    WORD PTR [ebx],?
  417dc6:	pop    eax
  417dc7:	mov    ds:0xe12973af,eax
  417dcc:	fisubr WORD PTR [edx]
  417dce:	out    0x78,al
  417dd0:	push   ebp
  417dd1:	inc    edx
  417dd2:	outs   dx,DWORD PTR ds:[esi]
  417dd3:	push   ebp
  417dd4:	mov    WORD PTR [edi],gs
  417dd6:	push   cs
  417dd7:	std    
  417dd8:	out    dx,al
  417dd9:	push   cs
  417dda:	pop    edx
  417ddb:	ret    0x24c5
  417dde:	gs mov ah,bh
  417de1:	idiv   edx
  417de3:	out    0x94,eax
  417de5:	sbb    eax,0x24878a36
  417dea:	and    BYTE PTR [eax+0x40],cl
  417ded:	loop   0x417dd5
  417def:	ret    
  417df0:	pop    ss
  417df1:	js     0x417e06
  417df3:	leave  
  417df4:	jmp    0x417e26
  417df6:	sbb    al,0xb
  417df8:	aam    0xc4
  417dfa:	xchg   edi,eax
  417dfb:	mov    ds:0xa5cb45c4,al
  417e00:	or     al,0xde
  417e02:	xchg   edi,eax
  417e03:	inc    edi
  417e04:	das    
  417e05:	jg     0x417e24
  417e07:	push   ebp
  417e08:	cmp    cl,cl
  417e0a:	(bad)  
  417e0c:	dec    ecx
  417e0d:	jecxz  0x417e57
  417e0f:	pushf  
  417e10:	addr16 push edi
  417e12:	and    cl,0x1f
  417e15:	xor    bh,bl
  417e17:	jg     0x417e2b
  417e19:	dec    ebx
  417e1a:	scas   eax,DWORD PTR es:[edi]
  417e1b:	ja     0x417e53
  417e1d:	ficom  WORD PTR [esp+ecx*1-0x381f6325]
  417e24:	and    eax,DWORD PTR [ebx-0x51e9da3d]
  417e2a:	mov    ds:0x8200e242,al
  417e2f:	fisttp WORD PTR [ecx-0x1e]
  417e32:	and    bh,BYTE PTR [esi-0x672a9b7f]
  417e38:	lock cs cs adc al,0x6f
  417e3d:	scas   al,BYTE PTR es:[edi]
  417e3e:	fisubr DWORD PTR [edx]
  417e40:	fadd   DWORD PTR [esi-0x20]
  417e43:	mov    ax,0xa962
  417e47:	xor    dl,BYTE PTR [esi+0x1913738b]
  417e4d:	sub    BYTE PTR [eax+0x6da7621c],dh
  417e53:	add    al,0xc0
  417e55:	(bad)
  417e59:	inc    ecx
  417e5a:	inc    ebp
  417e5b:	xor    BYTE PTR gs:[eax-0x42],dh
  417e5f:	xadd   DWORD PTR [edx],esi
  417e62:	add    esi,ecx
  417e64:	out    0x89,al
  417e66:	ins    DWORD PTR es:[edi],dx
  417e67:	cmp    ebx,DWORD PTR [esi-0x52efe56d]
  417e6d:	sahf   
  417e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e6f:	ja     0x417e33
  417e71:	(bad)  [eax]
  417e73:	jno    0x417e4b
  417e75:	loope  0x417e3e
  417e77:	mov    ah,0x22
  417e79:	shl    ch,0xce
  417e7c:	mov    al,0x7b
  417e7e:	adc    esp,edi
  417e80:	jmp    0xda00:0xcccea793
  417e87:	gs pusha 
  417e89:	ins    BYTE PTR es:[edi],dx
  417e8a:	mov    DWORD PTR [ecx-0x7acb3523],ebp
  417e90:	xchg   esi,esp
  417e92:	inc    esp
  417e93:	mov    ebp,eax
  417e95:	inc    ebp
  417e96:	inc    edi
  417e97:	fnsave [eax-0x70]
  417e9a:	mov    bh,BYTE PTR [eax+0x5d]
  417e9d:	enter  0x4d9c,0x90
  417ea1:	into   
  417ea2:	jle    0x417e78
  417ea4:	ror    DWORD PTR [ecx+0x2c47c2ab],cl
  417eaa:	mov    esp,esp
  417eac:	or     BYTE PTR [ecx],bh
  417eae:	mov    cl,0x96
  417eb0:	out    dx,eax
  417eb1:	xchg   ebp,eax
  417eb2:	mov    DWORD PTR [esp+0x3c],0x63d5
  417eba:	mov    DWORD PTR ds:0x42836f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428233,0x42828b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428383,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42827f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42837b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428383,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e88
  417f43:	sub    DWORD PTR ds:0x428257,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42823b
  417f53:	mov    ecx,DWORD PTR ds:0x42829b
  417f59:	and    DWORD PTR ds:0x428197,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428373
  417f65:	mov    ecx,DWORD PTR ds:0x428187
  417f6b:	or     DWORD PTR ds:0x42831b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x42839f
  417f77:	or     DWORD PTR ds:0x428287,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x3e
  417f8f:	or     al,0x29
  417f91:	stos   BYTE PTR es:[edi],al
  417f92:	push   ebx
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1+0xfe91818],bh
  417f9c:	dec    esp
  417f9d:	daa    
  417f9e:	fistp  DWORD PTR [ebx+0x3e]
  417fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fa2:	cmp    al,0xb2
  417fa4:	fstp   TBYTE PTR [edx+0x4a]
  417fa7:	mov    es,edi
  417fa9:	mov    cl,0x9c
  417fab:	cmp    al,0xdb
  417fad:	jmp    0x417f31
  417faf:	ret    
  417fb0:	test   eax,0xbf7d0ac4
  417fb5:	stos   BYTE PTR es:[edi],al
  417fb6:	or     al,BYTE PTR [ebx]
  417fb8:	cwde   
  417fb9:	outs   dx,BYTE PTR ds:[esi]
  417fba:	cli    
  417fbb:	pop    es
  417fbc:	cmp    esi,esi
  417fbe:	stc    
  417fbf:	(bad)  
  417fc0:	std    
  417fc1:	shl    DWORD PTR [eax-0x4f],cl
  417fc4:	or     al,0x9f
  417fc6:	sub    bl,dl
  417fc8:	aas    
  417fc9:	les    ecx,FWORD PTR [esi-0x38]
  417fcc:	rcl    DWORD PTR [edx+0x1194dc15],0x5f
  417fd3:	fidivr WORD PTR [edx+0x413169c5]
  417fd9:	xchg   ebx,eax
  417fda:	(bad)  
  417fdb:	loop   0x417fe1
  417fdd:	cld    
  417fde:	ja     0x417f8a
  417fe0:	(bad)  
  417fe1:	data16 sbb bl,ah
  417fe4:	pop    edi
  417fe5:	and    al,0xce
  417fe7:	sahf   
  417fe8:	std    
  417fe9:	repnz pusha 
  417feb:	imul   esp,DWORD PTR [eax],0xffffffdb
  417fee:	pop    edx
  417fef:	sahf   
  417ff0:	sbb    DWORD PTR [esi],ebp
  417ff2:	or     edi,DWORD PTR [edi]
  417ff4:	dec    edx
  417ff5:	pop    edx
  417ff6:	jne    0x417fc9
  417ff8:	mov    ?,WORD PTR [eax+0x3f]
  417ffb:	and    edi,DWORD PTR [eax-0x281705e6]
  418001:	mov    ah,0xcb
  418003:	ins    BYTE PTR es:[edi],dx
  418004:	outs   dx,DWORD PTR ds:[esi]
  418005:	enter  0xb59e,0x9f
  418009:	or     BYTE PTR [eax+0x3f],bh
  41800c:	mov    ebx,0x76636836
  418011:	sbb    al,0x6d
  418013:	aam    0x18
  418015:	mov    dl,0xab
  418017:	ja     0x417fd7
  418019:	mov    ch,0xb9
  41801b:	inc    esi
  41801c:	(bad)  [esi]
  41801e:	xchg   BYTE PTR [ebp-0x68],ah
  418021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418022:	push   ecx
  418023:	pop    es
  418024:	ja     0x417fca
  418026:	xlat   BYTE PTR ds:[ebx]
  418027:	ds push cs
  418029:	push   es
  41802a:	push   esp
  41802b:	mov    bh,0xd
  41802d:	arpl   ax,dx
  41802f:	loopne 0x418078
  418031:	pop    ss
  418032:	xor    cl,al
  418034:	in     eax,0xf
  418036:	pop    ds
  418037:	and    ecx,ecx
  418039:	adc    BYTE PTR [edx-0x5e1543a],al
  41803f:	fincstp 
  418041:	das    
  418042:	cmp    DWORD PTR [edx+0x19],esp
  418045:	ds xor dl,al
  418048:	adc    al,0xd0
  41804a:	fwait
  41804b:	scas   eax,DWORD PTR es:[edi]
  41804c:	jo     0x418056
  41804e:	sub    DWORD PTR [ebx],edx
  418050:	cli    
  418051:	in     eax,dx
  418052:	mov    ebx,0xfcf05480
  418057:	push   ds
  418058:	(bad)  
  418059:	bound  esp,QWORD PTR [ecx+0x23]
  41805c:	mov    ebp,0xf49edf04
  418061:	aam    0x26
  418063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418064:	hlt    
  418065:	mov    ecx,0x33ad365b
  41806a:	repz push ds
  41806c:	lea    ebp,[eax+0x46c480a8]
  418072:	add    BYTE PTR [ebx*2+0x3aedd00c],bh
  418079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41807a:	pusha  
  41807b:	in     eax,dx
  41807c:	jp     0x4180e5
  41807e:	pop    es
  41807f:	or     BYTE PTR [esi+eiz*4-0xa5e33a3],0xa3
  418087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418088:	(bad)  
  418089:	xor    dl,BYTE PTR [edx+0x3215d425]
  41808f:	sub    edi,edx
  418091:	out    dx,al
  418092:	aas    
  418093:	sbb    dh,BYTE PTR [ebx-0x4e]
  418096:	jno    0x4180aa
  418098:	stc    
  418099:	pusha  
  41809a:	stos   DWORD PTR es:[edi],eax
  41809b:	cwde   
  41809c:	lds    edx,FWORD PTR [edx+0x1c]
  41809f:	cs mov edi,0x7751b296
  4180a5:	jecxz  0x418102
  4180a7:	or     cl,BYTE PTR [edx]
  4180a9:	inc    esi
  4180aa:	outs   dx,BYTE PTR ds:[esi]
  4180ab:	outs   dx,DWORD PTR ds:[esi]
  4180ac:	pushf  
  4180ad:	mov    ds:0x88189d72,al
  4180b2:	xchg   esp,eax
  4180b3:	(bad)  
  4180b5:	xor    al,0x6c
  4180b7:	sbb    eax,0x69ac18
  4180bc:	xchg   edi,eax
  4180bd:	js     0x4180fd
  4180bf:	pop    ds
  4180c0:	adc    al,0x75
  4180c2:	adc    ch,al
  4180c4:	(bad)  
  4180c6:	nop
  4180c7:	mov    ecx,0xd2c1f3f
  4180cc:	push   0x36
  4180ce:	or     dh,dl
  4180d0:	ror    ebp,cl
  4180d2:	xchg   ebx,eax
  4180d3:	xchg   ebx,eax
  4180d4:	scas   al,BYTE PTR es:[edi]
  4180d5:	cmp    al,0x98
  4180d7:	fisub  DWORD PTR [ecx+0x6fea67f4]
  4180dd:	outs   dx,DWORD PTR ds:[esi]
  4180de:	daa    
  4180df:	nop
  4180e0:	cwde   
  4180e1:	jp     0x4180f5
  4180e3:	in     eax,0x2f
  4180e5:	arpl   WORD PTR [eax-0x5a],cx
  4180e8:	xchg   DWORD PTR [ebp+0x4752c521],ebx
  4180ee:	ja     0x418163
  4180f0:	mov    eax,ds:0xefc42320
  4180f5:	test   eax,0x754c4a86
  4180fa:	xchg   ebx,eax
  4180fb:	std    
  4180fc:	aad    0xd3
  4180fe:	cli    
  4180ff:	clc    
  418100:	popf   
  418101:	icebp  
  418102:	lea    eax,[ebx]
  418104:	cld    
  418105:	mov    esp,0xc6aa814d
  41810a:	xor    ah,BYTE PTR [edi+0x303c69b6]
  418110:	mov    bl,BYTE PTR ds:0xe260df9d
  418116:	push   edx
  418117:	scas   eax,DWORD PTR es:[edi]
  418118:	fwait
  418119:	jmp    0x4586:0x66e6a349
  418120:	pop    esi
  418121:	sbb    eax,0x3e24e37c
  418126:	xor    DWORD PTR [eax+0x8],ecx
  418129:	call   DWORD PTR [edi]
  41812b:	hlt    
  41812c:	mov    esp,0x3e11bf65
  418131:	call   0x6e48ec11
  418136:	jo     0x41812e
  418138:	mov    ds:0x1f6dbdc2,eax
  41813d:	jge    0x4180df
  41813f:	sbb    DWORD PTR [eax-0x75],ebx
  418142:	fs jae 0x4181a6
  418145:	mov    esp,0x2af38e62
  41814a:	loopne 0x4180f6
  41814c:	das    
  41814d:	loop   0x41816b
  41814f:	cmp    DWORD PTR [edi],esi
  418151:	js     0x41814d
  418153:	jae    0x34e25c71
  418159:	js     0x418105
  41815b:	pushf  
  41815c:	or     DWORD PTR [ecx+ebp*8+0x6c9aa094],edx
  418163:	sbb    al,0xe1
  418165:	aas    
  418166:	imul   edi,DWORD PTR [edx+0x6301ec5f],0x6b
  41816d:	stos   BYTE PTR es:[edi],al
  41816e:	retf   
  41816f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418170:	sbb    eax,0x85c73ee2
  418175:	sbb    cl,ah
  418177:	xchg   ebp,eax
  418178:	iret   
  418179:	jmp    0x3b43:0xc22927b1
  418180:	pop    ebx
  418181:	fs inc eax
  418183:	cmp    edi,0xffffff91
  418186:	(bad)  
  418188:	mov    edx,0x5e0d80e
  41818d:	push   esp
  41818e:	push   esp
  41818f:	retf   
  418190:	adc    bl,BYTE PTR [esi-0x20]
  418193:	in     al,0xc4
  418195:	ins    DWORD PTR es:[edi],dx
  418196:	mov    al,0xba
  418198:	das    
  418199:	pop    es
  41819a:	adc    ah,bl
  41819c:	in     eax,dx
  41819d:	(bad)  
  41819e:	lea    edx,[ebp+ecx*1+0x61]
  4181a2:	xor    bh,bl
  4181a4:	(bad)  
  4181a5:	xchg   edx,eax
  4181a6:	xchg   cl,dh
  4181a8:	mov    cl,0xcf
  4181aa:	mov    dh,0xbf
  4181ac:	cdq    
  4181ad:	iret   
  4181ae:	adc    al,0xde
  4181b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181b1:	loope  0x418196
  4181b3:	cmc    
  4181b4:	jae    0x418192
  4181b6:	fistp  DWORD PTR [ebp+0x18]
  4181b9:	mov    WORD PTR fs:[esi-0x6f],ds
  4181bd:	adc    eax,DWORD PTR [edx]
  4181bf:	loop   0x4181fd
  4181c1:	cmp    ebx,0x3a
  4181c4:	or     al,0xc0
  4181c6:	retf   
  4181c7:	stos   DWORD PTR es:[edi],eax
  4181c8:	sbb    DWORD PTR [ecx-0xf],ecx
  4181cb:	and    dh,BYTE PTR ss:[ebp-0x5517b4a4]
  4181d2:	mov    esi,0x177b3a36
  4181d7:	sub    BYTE PTR ds:0x4f3f8979,ch
  4181dd:	xor    esp,DWORD PTR cs:0x3eb85e06
  4181e4:	aaa    
  4181e5:	dec    ebx
  4181e6:	mov    ecx,0x8a824d27
  4181eb:	mov    ds:0xb57fe03d,eax
  4181f0:	pop    eax
  4181f1:	sahf   
  4181f2:	lds    edx,FWORD PTR [edi]
  4181f4:	or     ah,BYTE PTR [eax-0x2]
  4181f7:	neg    DWORD PTR [edi-0x6cf909d8]
  4181fd:	sahf   
  4181fe:	ja     0x418259
  418200:	dec    edi
  418201:	jbe    0x4181bb
  418203:	ror    BYTE PTR [edx+ebp*4-0x37],0x83
  418208:	int3   
  418209:	mov    ah,0x43
  41820b:	mov    WORD PTR [eax+esi*8-0x79],cs
  41820f:	sub    edi,DWORD PTR [eax+0x440bf226]
  418215:	xchg   dh,al
  418217:	or     DWORD PTR [esi-0x2b],0x95c1f610
  41821e:	xchg   ecx,eax
  41821f:	fwait
  418220:	xchg   esi,eax
  418221:	imul   esi,esp,0xffffffb4
  418224:	cmp    eax,DWORD PTR [eax]
  418226:	xchg   edx,eax
  418227:	push   ebx
  418228:	scas   eax,DWORD PTR es:[edi]
  418229:	dec    edi
  41822a:	xlat   BYTE PTR ds:[ebx]
  41822b:	jl     0x4181c8
  41822d:	push   ebp
  41822e:	ss jne 0x41829d
  418231:	push   cs
  418232:	mov    ch,BYTE PTR [ebp+0x7b952528]
  418238:	mov    ebp,ecx
  41823a:	dec    esi
  41823b:	xchg   ecx,eax
  41823c:	leave  
  41823d:	inc    ebx
  41823e:	lahf   
  41823f:	inc    edx
  418240:	lods   eax,DWORD PTR ds:[esi]
  418241:	repz lock inc eax
  418244:	mov    eax,0x7e58d268
  418249:	xchg   edi,eax
  41824a:	and    BYTE PTR [ebx-0x47],dh
  41824d:	sbb    al,ch
  41824f:	pop    ebx
  418250:	mov    ch,0x98
  418252:	mov    dh,0x6f
  418254:	xchg   ecx,eax
  418255:	aaa    
  418256:	pop    es
  418257:	dec    edi
  418258:	cmc    
  418259:	push   0x27
  41825b:	ret    
  41825c:	out    dx,eax
  41825d:	loopne 0x418211
  41825f:	(bad)  
  418260:	(bad)  
  418261:	mov    ds:0x5d7c42c0,al
  418266:	(bad)  
  418267:	popf   
  418268:	stc    
  418269:	jbe    0x4182ac
  41826b:	inc    esi
  41826c:	das    
  41826d:	sbb    al,0xbe
  41826f:	sahf   
  418270:	and    eax,0x29966c56
  418275:	pushf  
  418276:	inc    ebx
  418277:	lahf   
  418278:	test   DWORD PTR [edx-0x5a202891],0x2fd98380
  418282:	fs cmp eax,0xb7fdce1e
  418288:	mov    al,ds:0x161d112e
  41828d:	cdq    
  41828e:	fidiv  DWORD PTR [eax]
  418290:	adc    al,0x4a
  418292:	push   ecx
  418293:	push   ss
  418294:	add    eax,0x4fbf2be1
  418299:	and    eax,0x67608253
  41829e:	pop    ecx
  41829f:	arpl   WORD PTR [ebp-0x5e68a42],cx
  4182a5:	lock mov ds:0x717ec9b3,al
  4182ab:	or     edi,DWORD PTR [eax-0x3e]
  4182ae:	repz call 0xd086:0xa8996eb4
  4182b6:	fcmove st,st(3)
  4182b8:	fistp  WORD PTR ds:[ebp+0x2e]
  4182bc:	cs pushw cs
  4182bf:	mov    BYTE PTR [ebx+0x74],dl
  4182c2:	out    0x7c,al
  4182c4:	xchg   esi,eax
  4182c5:	add    cl,BYTE PTR [edx+eax*8]
  4182c8:	mov    ch,0x14
  4182ca:	dec    esi
  4182cb:	int    0x5d
  4182cd:	cdq    
  4182ce:	cdq    
  4182cf:	addr16 jb 0x418325
  4182d2:	inc    ecx
  4182d3:	mov    al,0xe4
  4182d5:	dec    edi
  4182d6:	push   es
  4182d7:	neg    DWORD PTR [esi+0x26]
  4182da:	in     al,0xee
  4182dc:	or     esp,ecx
  4182de:	aam    0x1b
  4182e0:	and    eax,0xf0c75e18
  4182e5:	in     al,dx
  4182e6:	pop    ds
  4182e7:	pusha  
  4182e8:	call   0xc0350971
  4182ed:	pop    ds
  4182ee:	jecxz  0x418345
  4182f0:	clc    
  4182f1:	dec    ebx
  4182f2:	cmc    
  4182f3:	cdq    
  4182f4:	jae    0x4182aa
  4182f6:	push   ss
  4182f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f8:	imul   eax,DWORD PTR [ecx+0x8],0x8cfde064
  4182ff:	mov    ss,WORD PTR [edx-0x51]
  418302:	cmp    esi,esi
  418304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418305:	mov    eax,ds:0x7d717ea6
  41830a:	cdq    
  41830b:	stc    
  41830c:	push   ss
  41830d:	inc    edx
  41830e:	aas    
  41830f:	jge    0x4182e1
  418311:	push   ss
  418312:	add    cl,BYTE PTR [ecx+0x412f63a6]
  418318:	jg     0x418374
  41831a:	or     BYTE PTR [eax-0x5c],dl
  41831d:	mov    ebx,?
  41831f:	inc    ecx
  418320:	xchg   ecx,eax
  418321:	scas   al,BYTE PTR es:[edi]
  418322:	cld    
  418323:	pop    edi
  418324:	mov    al,ds:0x979a86c6
  418329:	stos   BYTE PTR es:[edi],al
  41832a:	or     BYTE PTR [ebp+0x5b],bl
  41832d:	nop
  41832e:	xor    dl,ah
  418330:	fmul   DWORD PTR [edx-0x4351fe9e]
  418336:	popf   
  418337:	sub    bh,BYTE PTR [ebp+0x5]
  41833a:	jae    0x418373
  41833c:	es xor eax,0xa6a3af59
  418342:	and    BYTE PTR [ebp+ecx*8-0x65066e5f],0x1d
  41834a:	dec    edx
  41834b:	push   DWORD PTR cs:[eax]
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x428187,0x0
  418359:	mov    DWORD PTR ds:0x42824b,0x42c6
  418363:	mov    DWORD PTR ds:0x428387,edx
  418369:	mov    DWORD PTR ds:0x428163,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428287,0x243f
  418382:	mov    DWORD PTR ds:0x42825f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428187,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428323
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e8c
  4183ae:	add    DWORD PTR ds:0x4282ef,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428273
  4183ba:	xor    DWORD PTR ds:0x428327,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428303
  4183c6:	or     DWORD PTR ds:0x42817f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42822b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42822f,0x42819b
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42818f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42838f
  418409:	or     DWORD PTR ds:0x428387,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42815f,0x428327
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42822b,0x0
  418430:	mov    DWORD PTR ds:0x42823b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428383,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42822b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428083
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428de8
  41846b:	sbb    DWORD PTR ds:0x42826f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428167,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428383
  418485:	xor    ecx,DWORD PTR ds:0x4282eb
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428387,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x4282ff,0x42826b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283a7,0x42822f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x4282fb,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	xor    al,0xaa
  4184f9:	pop    ebp
  4184fa:	jo     0x4184f2
  4184fc:	rcl    DWORD PTR [esi],1
  4184fe:	sbb    BYTE PTR [edx+edx*1-0x68b0e7e8],bh
  418505:	and    DWORD PTR [esi],ebp
  418507:	lds    eax,FWORD PTR [esi-0x132ef643]
  41850d:	enter  0xa5a5,0x8a
  418511:	dec    eax
  418512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418513:	cmp    edi,DWORD PTR [edi-0x69]
  418516:	xor    ecx,DWORD PTR ds:0xe9e76db2
  41851c:	lds    edx,FWORD PTR [esi+0x28]
  41851f:	ins    DWORD PTR es:[edi],dx
  418520:	mov    ebx,0xa0d7b261
  418525:	and    eax,0xb76364f0
  41852a:	lods   al,BYTE PTR ds:[esi]
  41852b:	cmp    ebp,0x15
  41852e:	fcmovnbe st,st(1)
  418530:	mov    ds:0x14d67e23,al
  418535:	dec    ebx
  418536:	mov    ah,0xfd
  418538:	inc    eax
  418539:	aad    0x65
  41853b:	popa   
  41853c:	xchg   ah,dl
  41853e:	outs   dx,BYTE PTR ds:[esi]
  41853f:	jb     0x4184fb
  418541:	popf   
  418542:	pop    ss
  418543:	pop    ebp
  418544:	pop    esi
  418545:	or     DWORD PTR [bp-0x67a6],0x77213df
  41854e:	fadd   DWORD PTR ds:0x88818c5c
  418554:	pop    esi
  418555:	aam    0xaa
  418557:	dec    eax
  418558:	iret   
  418559:	xor    al,0x39
  41855b:	fild   DWORD PTR [ecx]
  41855d:	ficom  DWORD PTR [eax]
  41855f:	stos   DWORD PTR es:[edi],eax
  418560:	mov    al,ds:0x2d192be3
  418565:	lahf   
  418566:	cmc    
  418567:	fidiv  DWORD PTR [eax+0x47]
  41856a:	jecxz  0x418518
  41856c:	(bad)  
  41856d:	(bad)  
  41856e:	mov    ebx,0xe1c2f1e5
  418573:	sbb    DWORD PTR [ecx],edx
  418575:	add    eax,0xab961a60
  41857a:	pop    ebx
  41857b:	xchg   edi,eax
  41857c:	fcom   QWORD PTR [esi+edx*8+0x547efb24]
  418583:	mov    ebp,0x474198f
  418588:	mov    eax,ecx
  41858a:	into   
  41858b:	retf   
  41858c:	mov    dl,0x8e
  41858e:	lahf   
  41858f:	int    0x3
  418591:	sahf   
  418592:	(bad)  
  418593:	mov    eax,ds:0x93028d3b
  418598:	pop    DWORD PTR [eax-0x50a20c8]
  41859e:	mov    edi,0xbea8b0b7
  4185a3:	sbb    DWORD PTR [ebx-0x318fe6ca],edi
  4185a9:	inc    edi
  4185aa:	inc    eax
  4185ab:	and    DWORD PTR [ebx-0x56c6c05c],edi
  4185b1:	(bad)  
  4185b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b3:	jecxz  0x418602
  4185b5:	dec    edi
  4185b6:	pop    esi
  4185b7:	add    DWORD PTR [esi+0x58],ecx
  4185ba:	std    
  4185bb:	lods   eax,DWORD PTR ds:[esi]
  4185bc:	jl     0x418603
  4185be:	aam    0xba
  4185c0:	sbb    bl,al
  4185c2:	je     0x418559
  4185c4:	add    BYTE PTR ds:0x112045b2,0xa3
  4185cb:	cmp    eax,0xd8b252fe
  4185d0:	test   dh,al
  4185d2:	sbb    ah,ah
  4185d4:	leave  
  4185d5:	dec    ebp
  4185d6:	cmp    ah,dh
  4185d8:	or     ebx,DWORD PTR [esi-0x4aacab23]
  4185de:	mov    eax,ds:0xc297cbd
  4185e3:	shr    DWORD PTR [esi+0x79],1
  4185e6:	adc    al,0xa4
  4185e8:	imul   esp,edi,0xa8357a85
  4185ee:	xor    ebp,DWORD PTR ds:0x935b12b
  4185f4:	add    eax,0xad508015
  4185f9:	lds    edi,FWORD PTR [edi]
  4185fb:	les    eax,FWORD PTR [edx+ecx*8+0x466782ac]
  418602:	idiv   BYTE PTR [edi]
  418604:	sbb    edi,DWORD PTR [eax+ecx*1]
  418607:	mov    dh,0xb4
  418609:	retf   
  41860a:	pop    es
  41860b:	fdiv   QWORD PTR [edx]
  41860d:	add    ch,BYTE PTR [esi+0x27]
  418610:	loop   0x41867c
  418612:	les    ebx,FWORD PTR [esi-0x6f]
  418615:	popf   
  418616:	xchg   BYTE PTR [ebx-0x5],dl
  418619:	(bad)  
  41861a:	push   esi
  41861b:	icebp  
  41861c:	or     ch,ah
  41861e:	gs int3 
  418620:	and    al,0x5f
  418622:	loope  0x41861b
  418624:	cmp    ch,BYTE PTR [ebx+0x6a3eba45]
  41862a:	or     ebp,ecx
  41862c:	pop    ds
  41862d:	push   esi
  41862e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862f:	adc    BYTE PTR [ecx+ebx*2+0xd6df232],ah
  418636:	test   al,0x2
  418638:	jge    0x4185c7
  41863a:	in     al,0x2f
  41863c:	in     eax,0x34
  41863e:	sbb    DWORD PTR [edi+ecx*4],eax
  418641:	push   ebp
  418642:	adc    al,0x50
  418644:	adc    al,0x8a
  418646:	lea    ebp,ds:[eax]
  418649:	sub    bh,BYTE PTR [ebp+0x3b]
  41864c:	inc    edx
  41864d:	test   DWORD PTR [ecx],ebp
  41864f:	mov    cs,WORD PTR [esi-0x54]
  418652:	cmp    al,0x5e
  418654:	push   ss
  418655:	test   eax,0x3e63e004
  41865a:	sbb    bl,BYTE PTR [edx]
  41865c:	inc    ebp
  41865d:	aaa    
  41865e:	lods   eax,DWORD PTR ds:[esi]
  41865f:	loope  0x4186ae
  418661:	adc    DWORD PTR ds:0xd79d30ca,edi
  418667:	push   esi
  418668:	(bad)  
  418669:	mov    eax,0x482e3a71
  41866e:	bound  ecx,QWORD PTR [edi-0x59f5323b]
  418674:	lock xor DWORD PTR [edi],esp
  418677:	and    eax,0x4de030be
  41867c:	inc    esi
  41867d:	loop   0x4186fe
  41867f:	call   0x13a9:0xfd28c290
  418686:	lahf   
  418687:	and    al,0x3f
  418689:	jbe    0x4186d6
  41868b:	rcr    dl,0x6b
  41868e:	popf   
  41868f:	push   cs
  418690:	jno    0x418668
  418692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418694:	mov    eax,0xfc05d941
  418699:	aaa    
  41869a:	add    esp,DWORD PTR [ebp-0x766be3fb]
  4186a0:	out    dx,eax
  4186a1:	cmp    DWORD PTR [edx],esi
  4186a3:	nop
  4186a4:	js     0x418688
  4186a6:	sbb    BYTE PTR [esi-0x53],dl
  4186a9:	loope  0x41870d
  4186ab:	lahf   
  4186ac:	pushf  
  4186ad:	outs   dx,DWORD PTR ds:[esi]
  4186ae:	ret    
  4186af:	push   edi
  4186b0:	shl    BYTE PTR [ebx-0x3],0x69
  4186b4:	mov    esp,0x49afea42
  4186b9:	outs   dx,DWORD PTR ds:[esi]
  4186ba:	repnz cdq 
  4186bc:	in     eax,0xc4
  4186be:	js     0x418708
  4186c0:	jnp    0x418721
  4186c2:	jo     0x4186d1
  4186c4:	jae    0x418716
  4186c6:	push   esi
  4186c7:	pushf  
  4186c8:	das    
  4186c9:	push   esp
  4186ca:	dec    eax
  4186cb:	fdiv   st(5),st
  4186cd:	cmp    eax,0x5dab2186
  4186d2:	inc    eax
  4186d3:	not    BYTE PTR [eax]
  4186d5:	xchg   edi,eax
  4186d6:	xor    DWORD PTR [edi],ecx
  4186d8:	sbb    esi,DWORD PTR [ebp-0x730e2a2a]
  4186de:	jne    0x4186e9
  4186e0:	repnz out 0xc,al
  4186e3:	xchg   ebp,eax
  4186e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186e5:	inc    edx
  4186e6:	cmc    
  4186e7:	(bad)  
  4186e8:	adc    al,0x2f
  4186ea:	repz fld TBYTE PTR fs:[edx+edx*4]
  4186ef:	jne    0x4186d9
  4186f1:	cmp    eax,0x57d7041d
  4186f6:	add    eax,edi
  4186f8:	cmp    ah,BYTE PTR [ecx+0xb]
  4186fb:	xchg   BYTE PTR [ecx],dl
  4186fd:	ins    DWORD PTR es:[edi],dx
  4186fe:	aaa    
  4186ff:	push   edi
  418700:	push   DWORD PTR [ebp+0x7f]
  418703:	jp     0x418758
  418705:	stos   BYTE PTR es:[edi],al
  418706:	jp     0x4186b3
  418708:	mov    al,ds:0x10e1ca1a
  41870d:	xchg   edi,eax
  41870e:	fcomp  QWORD PTR fs:[esi+0x52]
  418712:	add    BYTE PTR [ebx],dh
  418714:	sbb    BYTE PTR [eax-0x38539750],bl
  41871a:	mov    bh,0x1e
  41871c:	rol    DWORD PTR [edi-0x11],1
  41871f:	ret    
  418720:	sub    ebx,DWORD PTR [edi-0x63aeb548]
  418726:	and    esp,eax
  418728:	pop    es
  418729:	xlat   BYTE PTR ds:[ebx]
  41872a:	sub    eax,0xe390df88
  41872f:	lock div BYTE PTR [ecx]
  418732:	sbb    al,0x8e
  418734:	div    DWORD PTR [ebp+0x9]
  418737:	sub    al,cl
  418739:	stos   BYTE PTR es:[edi],al
  41873a:	daa    
  41873b:	push   es
  41873c:	jp     0x41875e
  41873e:	and    esp,DWORD PTR ds:0x374021dc
  418744:	push   ecx
  418745:	pushf  
  418746:	out    dx,eax
  418747:	ss out dx,al
  418749:	ret    
  41874a:	stc    
  41874b:	mov    ebp,0x93aabab0
  418750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418751:	inc    ecx
  418752:	rcl    ebx,0xcf
  418755:	cdq    
  418756:	stos   DWORD PTR es:[edi],eax
  418757:	adc    al,0xc7
  418759:	cmc    
  41875a:	(bad)  
  41875b:	xor    edx,DWORD PTR [eax-0x71]
  41875e:	inc    edi
  41875f:	scas   al,BYTE PTR es:[edi]
  418760:	stos   DWORD PTR es:[edi],eax
  418761:	and    DWORD PTR [edi+0x4e1b1829],ecx
  418767:	xchg   BYTE PTR [ebx+0x7d447b44],dh
  41876d:	sbb    edx,DWORD PTR [eax-0x3f]
  418770:	jmp    eax
  418772:	ret    0x6269
  418775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418776:	pop    ebp
  418777:	or     al,0xfb
  418779:	loope  0x418759
  41877b:	push   0xb4e53cba
  418780:	sbb    al,dl
  418782:	ja     0x418797
  418784:	lock pop ebp
  418786:	and    ebp,DWORD PTR ds:0x99798849
  41878c:	popf   
  41878d:	cmc    
  41878e:	xchg   ebx,eax
  41878f:	mov    WORD PTR [edx+0x1a99cf57],cs
  418795:	mov    ebp,0x9228acfc
  41879a:	mov    edi,0xbf94379d
  41879f:	fucomp st(6)
  4187a1:	js     0x418744
  4187a3:	lock sub al,0xa0
  4187a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187a7:	cmc    
  4187a8:	xchg   esp,eax
  4187a9:	lock jp 0x418733
  4187ac:	and    BYTE PTR [ecx-0x632a9dd9],ah
  4187b2:	jb     0x418825
  4187b4:	inc    ebx
  4187b5:	pop    ebx
  4187b6:	ss mov edx,0x651d9f42
  4187bc:	push   0x40
  4187be:	lahf   
  4187bf:	imul   ebp,DWORD PTR [ebx+0x372051c1],0x79
  4187c6:	js     0x418806
  4187c8:	rcl    edx,1
  4187ca:	add    BYTE PTR [ecx+ebp*4-0x2f],ah
  4187ce:	call   0x32a542ca
  4187d3:	sub    DWORD PTR [eax],esp
  4187d5:	mov    ds:0x93e14275,eax
  4187da:	mov    ah,0xa0
  4187dc:	xchg   edx,eax
  4187dd:	jnp    0x418797
  4187df:	std    
  4187e0:	out    0x3a,al
  4187e2:	leave  
  4187e3:	daa    
  4187e4:	cmc    
  4187e5:	jp     0x418845
  4187e7:	gs fs loopne 0x418772
  4187eb:	pop    ss
  4187ec:	push   ecx
  4187ed:	push   ecx
  4187ee:	ror    DWORD PTR [ebp+0x58e47f1e],cl
  4187f4:	push   edi
  4187f5:	mov    eax,0xb7650655
  4187fa:	dec    eax
  4187fb:	pop    ss
  4187fc:	and    dl,BYTE PTR [ebp+0x27acc1bc]
  418802:	and    dh,BYTE PTR [eax]
  418804:	jl     0x4187a7
  418806:	add    BYTE PTR [edi],ch
  418808:	sbb    al,BYTE PTR [edi]
  41880a:	shl    BYTE PTR [ebp+0x4fcd22ba],1
  418810:	cs mov eax,0x77761e3d
  418816:	and    BYTE PTR [edi+0x291e1c75],0x27
  41881d:	or     BYTE PTR [edi],bl
  41881f:	into   
  418820:	jae    0x418856
  418822:	xor    DWORD PTR [esp+ebx*2+0x58825005],edx
  418829:	add    dh,BYTE PTR [ecx+0x24]
  41882c:	add    eax,0xa2258794
  418831:	sub    DWORD PTR [edx-0x2d720cca],esp
  418837:	scas   al,BYTE PTR es:[edi]
  418838:	pop    es
  418839:	in     eax,0x97
  41883b:	push   ebx
  41883c:	xor    al,0x6d
  41883e:	mov    dl,0x84
  418840:	inc    eax
  418841:	adc    DWORD PTR [ebx],0x2b3cb13f
  418847:	and    BYTE PTR [ecx-0x79],0xd7
  41884b:	test   DWORD PTR [ecx+ebp*4-0x30],edi
  41884f:	outs   dx,DWORD PTR ds:[esi]
  418850:	lahf   
  418851:	xchg   DWORD PTR [eax],edx
  418853:	daa    
  418854:	popf   
  418855:	cwde   
  418856:	pop    eax
  418857:	loopne 0x418814
  418859:	stos   BYTE PTR es:[edi],al
  41885a:	cmp    eax,0xae663399
  41885f:	xlat   BYTE PTR ds:[ebx]
  418860:	test   DWORD PTR [edi+0x73b4be8f],edi
  418866:	mov    bh,0x18
  418868:	imul   edi,DWORD PTR [edx+0x7f],0xffffff80
  41886c:	cmp    eax,0x7e7109a0
  418871:	jp     0x418808
  418873:	cmp    BYTE PTR [ecx],0x38
  418876:	adc    ecx,edx
  418878:	call   0x93ef:0x471a80d6
  41887f:	iret   
  418880:	aas    
  418881:	bnd call 0xa2d7c4e1
  418887:	sub    al,0x55
  418889:	pop    es
  41888a:	jnp    0x41882f
  41888c:	in     al,0x3b
  41888e:	pusha  
  41888f:	repz iret 
  418891:	sbb    DWORD PTR [edi+0xfbefd7c],ecx
  418897:	jecxz  0x4188b4
  418899:	lock xchg ecx,eax
  41889b:	pop    eax
  41889c:	cmc    
  41889d:	clc    
  41889e:	sub    DWORD PTR [ebx],0xb
  4188a1:	jmp    edi
  4188a3:	adc    ebx,DWORD PTR [ebx+0x26190142]
  4188a9:	in     al,dx
  4188aa:	aas    
  4188ab:	pop    edx
  4188ac:	(bad)  
  4188ad:	not    DWORD PTR [esi-0x51e08bc5]
  4188b3:	sahf   
  4188b4:	inc    ebx
  4188b5:	mov    ecx,DWORD PTR [esp+0x48]
  4188b9:	or     DWORD PTR ds:0x42823b,0x42822b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428153
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428243,0x42829b
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42818f,0x428293
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42823f,0x42837f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42827b,0x7154
  418909:	call   DWORD PTR ds:0x428da8
  41890f:	or     DWORD PTR ds:0x428293,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x428397,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42831f,0x0
  418935:	mov    DWORD PTR ds:0x4282ff,ebx
  41893b:	mov    DWORD PTR ds:0x428283,ebx
  418941:	mov    esi,DWORD PTR ds:0x428253
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42831f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dec
  41896e:	movzx  esi,WORD PTR ds:0x428323
  418975:	sbb    DWORD PTR ds:0x428163,esi
  41897b:	adc    DWORD PTR ds:0x42836f,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283a7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428237
  418991:	xor    esi,DWORD PTR ds:0x428173
  418997:	mov    DWORD PTR ds:0x428237,esi
  41899d:	add    DWORD PTR ds:0x428247,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283a3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42837b,0x42823b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428163,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42831b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282a3
  4189ec:	mov    edx,DWORD PTR ds:0x42822b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283a3,0x606f
  418a03:	mov    DWORD PTR ds:0x42817f,ebx
  418a09:	cmp    DWORD PTR ds:0x42831b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428df0
  418a1c:	adc    DWORD PTR ds:0x42815b,ebx
  418a22:	or     DWORD PTR ds:0x42825f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42820f
  418a34:	mov    edx,DWORD PTR ds:0x428333
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428323
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282a7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283a3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42827b,0x11c5
  418a73:	mov    DWORD PTR ds:0x428397,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42815b
  418a85:	mov    eax,ds:0x42829b
  418a8a:	cmp    DWORD PTR ds:0x4283a3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428e90
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428373,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428283,edi
  418ac0:	or     DWORD PTR ds:0x42827b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42836f,ebx
  418ad0:	mov    eax,ds:0x422558
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42817b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xb3b0b184
  418af3:	int    0x67
  418af5:	mov    esp,0x1816cb9a
  418afa:	mov    esp,0x59181812
  418aff:	or     al,0x55
  418b01:	fild   WORD PTR [esi+0x6]
  418b04:	ret    
  418b05:	xchg   DWORD PTR [eax],esp
  418b07:	push   ecx
  418b08:	clc    
  418b09:	ja     0x418b54
  418b0b:	dec    BYTE PTR [esi+esi*1]
  418b0e:	shr    BYTE PTR [edi+eiz*4],cl
  418b11:	sub    eax,0x831e4d37
  418b16:	pop    ss
  418b17:	shl    BYTE PTR [esi],cl
  418b19:	xor    esi,DWORD PTR [esi-0x7d]
  418b1c:	jmp    0x418aca
  418b1e:	or     cl,bl
  418b20:	clc    
  418b21:	jno    0x418b39
  418b23:	aas    
  418b24:	mov    ds:0xc46fc13d,eax
  418b29:	push   0x571c798
  418b2e:	or     eax,DWORD PTR [edx]
  418b30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b31:	dec    esp
  418b32:	dec    ebx
  418b33:	in     eax,dx
  418b34:	call   0x8d7ee44e
  418b39:	mov    esi,?
  418b3b:	out    dx,eax
  418b3c:	cmp    al,0x50
  418b3e:	stc    
  418b3f:	mov    ds:0xb73064f1,eax
  418b44:	lods   eax,DWORD PTR ds:[esi]
  418b45:	cs popa 
  418b47:	aas    
  418b48:	scas   al,BYTE PTR es:[edi]
  418b49:	inc    BYTE PTR [esi]
  418b4b:	mov    esp,0x6f2b8e1
  418b50:	pop    ss
  418b51:	pop    edi
  418b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b53:	aam    0x4c
  418b55:	pop    edi
  418b56:	mov    BYTE PTR [ecx+0x73],dh
  418b59:	jg     0x418b9f
  418b5b:	stos   DWORD PTR es:[edi],eax
  418b5c:	xchg   dl,ah
  418b5e:	or     al,0x49
  418b60:	xor    BYTE PTR [edi-0x36],ah
  418b63:	xor    DWORD PTR [ecx+0x73a85610],ebp
  418b69:	add    DWORD PTR [ecx],ecx
  418b6b:	lea    ebp,[edx+0x76a578a3]
  418b71:	push   edx
  418b72:	mov    ch,0x6b
  418b74:	popf   
  418b75:	mov    dl,0x86
  418b77:	popa   
  418b78:	add    BYTE PTR [esp+ebx*2+0x41750793],dl
  418b7f:	xchg   DWORD PTR [eax-0x80],ebx
  418b82:	xor    eax,0x408c082c
  418b87:	pop    edx
  418b88:	inc    eax
  418b89:	sar    BYTE PTR [esi+0x7a54a8d6],1
  418b8f:	stc    
  418b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b91:	add    eax,0x2c322d47
  418b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b97:	hlt    
  418b98:	sar    DWORD PTR ds:0xdcd36e60,1
  418b9e:	cmc    
  418b9f:	nop
  418ba0:	xchg   ebx,eax
  418ba1:	cmp    edi,DWORD PTR [ebx+ebp*2]
  418ba4:	jl     0x418c05
  418ba6:	adc    al,0x4f
  418ba8:	sub    eax,0xf646a829
  418bad:	jle    0x418bfd
  418baf:	add    DWORD PTR [ecx+esi*8],eax
  418bb2:	dec    edx
  418bb3:	sub    DWORD PTR [eax+eax*2-0x353d4c89],esi
  418bba:	sub    al,0x10
  418bbc:	ror    DWORD PTR [eax-0x72a5c625],0xe6
  418bc3:	repz cld 
  418bc5:	pop    eax
  418bc6:	mov    WORD PTR [edi-0x31e9ba22],gs
  418bcc:	mov    ds:0xe5162bb4,eax
  418bd1:	pop    edi
  418bd2:	mov    edi,0x9d1e0211
  418bd7:	push   esi
  418bd8:	pop    esi
  418bd9:	mov    ch,bl
  418bdb:	jne    0x418c53
  418bdd:	lds    edi,FWORD PTR [ecx-0x7d]
  418be0:	jbe    0x418bf2
  418be2:	repz xchg ebx,eax
  418be4:	inc    esp
  418be5:	xchg   BYTE PTR [esi],al
  418be7:	enter  0x92e0,0x95
  418beb:	add    eax,0xc2695e58
  418bf0:	repnz mov ecx,DWORD PTR ds:0x53372c9e
  418bf7:	ror    DWORD PTR [edi+0x40],0xcd
  418bfb:	jle    0x418c04
  418bfd:	int3   
  418bfe:	mov    cl,0x64
  418c00:	out    dx,al
  418c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c02:	in     al,dx
  418c03:	xor    al,0x37
  418c05:	mov    esp,0xd9912b6f
  418c0a:	je     0x418c7b
  418c0c:	(bad)  
  418c0d:	mov    ebp,eax
  418c0f:	xchg   ebx,eax
  418c10:	cdq    
  418c11:	jmp    0x23ce924a
  418c16:	fisubr WORD PTR [esi+0x38]
  418c19:	add    ah,al
  418c1b:	fnsave [edi-0x5b]
  418c1e:	shl    BYTE PTR [ebx+0x1d13bad4],0x81
  418c25:	pop    ebx
  418c26:	popa   
  418c27:	xchg   ebx,eax
  418c28:	jbe    0x418bd9
  418c2a:	sbb    ah,BYTE PTR [ebx]
  418c2c:	xchg   BYTE PTR ds:0x422269ab,ch
  418c32:	xchg   ecx,eax
  418c33:	out    dx,eax
  418c34:	rol    bl,0x99
  418c37:	pop    ebx
  418c38:	pop    edx
  418c39:	cmp    al,0xf
  418c3b:	and    al,0x6b
  418c3e:	jmp    0x418c9f
  418c40:	push   ecx
  418c41:	inc    ebp
  418c42:	cmp    al,0x12
  418c44:	mov    ch,0x76
  418c46:	loop   0x418c0f
  418c48:	pop    esp
  418c49:	fwait
  418c4a:	aad    0xf7
  418c4c:	mov    dl,0x9d
  418c4e:	pusha  
  418c4f:	adc    eax,0xfcebc04a
  418c54:	or     al,0x38
  418c56:	sub    cl,cl
  418c58:	xor    BYTE PTR [ecx],al
  418c5a:	aad    0xea
  418c5c:	lods   eax,DWORD PTR ds:[esi]
  418c5d:	jmp    0x5c93:0xd5c07603
  418c64:	cmc    
  418c65:	and    esp,eax
  418c67:	dec    edi
  418c68:	mov    dh,0xe3
  418c6a:	jns    0x418c3e
  418c6c:	push   ebp
  418c6d:	gs jno 0x418cee
  418c70:	pop    esp
  418c71:	(bad)  
  418c72:	cld    
  418c73:	popf   
  418c74:	push   esp
  418c75:	or     ebp,DWORD PTR [esi-0x23]
  418c78:	bound  eax,QWORD PTR [edx-0x2]
  418c7b:	add    DWORD PTR [ebp-0x47c9f4d2],edi
  418c81:	jb     0x418c23
  418c83:	add    eax,0xc22cd0e6
  418c88:	iret   
  418c89:	inc    edx
  418c8a:	mov    ecx,0xe6cd0c30
  418c8f:	mov    bh,0x39
  418c91:	inc    ecx
  418c92:	adc    DWORD PTR [ecx+ebp*4],ebp
  418c95:	(bad)  
  418c96:	xor    eax,DWORD PTR [esi]
  418c98:	arpl   WORD PTR [edi+0x30],dx
  418c9b:	mov    ds:0x75903293,eax
  418ca0:	in     al,dx
  418ca1:	or     eax,0xda65253a
  418ca6:	adc    ah,bh
  418ca8:	push   ecx
  418ca9:	loopne 0x418cd1
  418cab:	sub    eax,0xaec1f9f9
  418cb0:	sub    al,0x79
  418cb2:	imul   ecx,DWORD PTR [edx],0xc95aa125
  418cb8:	pop    ds
  418cb9:	mov    eax,ds:0x7c4a2843
  418cbe:	cmp    al,0xca
  418cc0:	sbb    eax,0x43bf5734
  418cc5:	push   edx
  418cc6:	loope  0x418ca2
  418cc8:	retf   0x6108
  418ccb:	fadd   QWORD PTR [ecx+0x2b]
  418cce:	int    0x3e
  418cd0:	xchg   BYTE PTR [eax+esi*8],cl
  418cd3:	jmp    0x418cb7
  418cd5:	mov    al,ds:0xb0f8e765
  418cda:	xchg   esi,eax
  418cdb:	aad    0xba
  418cdd:	pop    ss
  418cde:	push   cs
  418cdf:	mov    cr2,ebp
  418ce2:	sub    al,0x72
  418ce4:	push   ds
  418ce5:	sub    eax,0x8b778fe8
  418cea:	mov    ch,BYTE PTR [esp+ecx*4-0x14]
  418cee:	dec    ecx
  418cef:	jo     0x418c7b
  418cf1:	push   0x807d33de
  418cf6:	mov    DWORD PTR [eax-0x78acc5e1],esp
  418cfc:	call   0x4c70:0x60925cc3
  418d03:	or     DWORD PTR [edi],ebp
  418d05:	data16 cmp al,0xe
  418d08:	sub    ebp,DWORD PTR [eax+0x24]
  418d0b:	(bad)  
  418d0c:	js     0x418cde
  418d0e:	mov    esp,0x5ea46cbe
  418d13:	add    DWORD PTR [edx+0x44],ebx
  418d16:	out    0xb,al
  418d18:	dec    edi
  418d19:	xchg   esp,eax
  418d1a:	cmp    dh,bh
  418d1c:	daa    
  418d1d:	fcmovne st,st(0)
  418d1f:	(bad)  
  418d20:	jl     0x418cc6
  418d22:	sub    dl,BYTE PTR [esi+0x165ef07c]
  418d28:	(bad)  
  418d29:	push   DWORD PTR [edi]
  418d2b:	aaa    
  418d2c:	lock mov WORD PTR [edi-0x7f],fs
  418d30:	dec    edx
  418d31:	sub    dh,BYTE PTR [edx+0x52]
  418d34:	push   ds
  418d35:	das    
  418d36:	mov    ebx,0xb184c6c6
  418d3b:	popf   
  418d3c:	xor    DWORD PTR [edx+0x39909812],ecx
  418d42:	(bad)  
  418d43:	dec    edi
  418d44:	xchg   edi,eax
  418d45:	leave  
  418d46:	adc    BYTE PTR [ebp-0x6b],0x2
  418d4a:	shl    ebp,0xee
  418d4d:	mov    WORD PTR [edi-0x2dcb1bae],ds
  418d53:	dec    ebx
  418d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d55:	lds    edi,FWORD PTR [eax-0x2599d749]
  418d5b:	rcr    DWORD PTR [edi],cl
  418d5d:	popa   
  418d5e:	jne    0x418d88
  418d60:	cmp    al,0xdc
  418d62:	lods   al,BYTE PTR ds:[esi]
  418d63:	xor    eax,DWORD PTR [ecx]
  418d65:	jmp    0x418d72
  418d67:	cmc    
  418d68:	xlat   BYTE PTR ds:[ebx]
  418d69:	push   0xf1fb03e8
  418d6e:	cmovle edx,DWORD PTR ds:0x5b6476d8
  418d75:	fidivr DWORD PTR [ebp-0x37]
  418d78:	cs push ds
  418d7a:	(bad)  [ebp+0x21b8684b]
  418d80:	inc    ecx
  418d81:	mov    esp,0x777f6a25
  418d86:	mov    ds:0xdb11e37e,eax
  418d8b:	(bad)  
  418d8c:	repnz sub al,0xe6
  418d8f:	jno    0x418d9a
  418d91:	push   edx
  418d92:	in     al,0xa1
  418d94:	or     bl,dl
  418d96:	or     BYTE PTR [ebp+0x56adb091],cl
  418d9c:	xor    DWORD PTR [edi-0x4c],esp
  418d9f:	add    DWORD PTR [ebp-0x8eaeb55],ebx
  418da5:	shr    DWORD PTR [ecx+ebp*8-0x30],cl
  418da9:	add    eax,0x400c7247
  418dae:	cmp    dh,bl
  418db0:	or     ebx,DWORD PTR [ebp-0x14]
  418db3:	cmp    al,0xe2
  418db5:	add    al,0xf0
  418db7:	les    ebp,FWORD PTR [ebx]
  418db9:	leave  
  418dba:	pop    ebx
  418dbb:	xchg   edx,eax
  418dbc:	fcomp  DWORD PTR [edi+0x7599d19c]
  418dc2:	adc    BYTE PTR [edx],cl
  418dc4:	ins    DWORD PTR es:[edi],dx
  418dc5:	jmp    0x89a6:0xcad92ed9
  418dcc:	and    DWORD PTR ds:0x3279bcf2,esi
  418dd2:	(bad)  
  418dd3:	ss int3 
  418dd5:	scas   eax,DWORD PTR es:[edi]
  418dd6:	push   ecx
  418dd7:	(bad)  
  418dd8:	idiv   DWORD PTR [ecx+ebx*1+0x6b7331ed]
  418ddf:	retf   0xbab5
  418de2:	pop    edx
  418de3:	test   al,0x2e
  418de5:	cmp    eax,0x40b5aa0a
  418dea:	das    
  418deb:	inc    ebx
  418dec:	sahf   
  418ded:	xchg   DWORD PTR [edx+0x1e],ebp
  418df0:	popa   
  418df1:	sub    bl,al
  418df3:	jmp    0x92cbb0c1
  418df8:	dec    esp
  418df9:	add    dl,0x72
  418dfc:	jle    0x418d80
  418dfe:	cmp    ecx,DWORD PTR [eax+0x5e457f9b]
  418e04:	xchg   ebx,eax
  418e05:	(bad)  
  418e06:	shl    BYTE PTR [ebp-0x3db63725],cl
  418e0c:	add    esp,DWORD PTR [esi]
  418e0e:	push   0xfffffff0
  418e10:	push   ss
  418e11:	jle    0x418de9
  418e13:	loop   0x418dc1
  418e15:	sub    ebx,DWORD PTR [ebx+ebp*2]
  418e18:	div    ah
  418e1a:	out    dx,al
  418e1b:	dec    ecx
  418e1c:	je     0x418daf
  418e1e:	mov    ah,0xed
  418e20:	jnp    0x418e77
  418e22:	cmp    DWORD PTR [edx+0x7],0x3
  418e26:	cmp    BYTE PTR [esi-0x6d54a2f3],bh
  418e2c:	out    0x9,eax
  418e2e:	mov    edx,0x62a699c
  418e33:	pop    edi
  418e34:	call   0xe23afa56
  418e39:	adc    dh,BYTE PTR [ebp-0x69]
  418e3c:	pop    es
  418e3d:	push   cs
  418e3e:	(bad)  
  418e3f:	retf   
  418e40:	mov    dl,0xae
  418e42:	dec    ecx
  418e43:	into   
  418e44:	sbb    eax,0xde13a3f8
  418e49:	outs   dx,BYTE PTR ds:[esi]
  418e4a:	dec    esp
  418e4b:	jae    0x418e57
  418e4d:	add    al,BYTE PTR [eax+0xcf415f3]
  418e53:	bound  edi,QWORD PTR [ebx+0x83fba64]
  418e59:	(bad)  
  418e5a:	scas   al,BYTE PTR es:[edi]
  418e5b:	lahf   
  418e5c:	sbb    BYTE PTR [ebx],bl
  418e5e:	push   ebx
  418e5f:	retf   
  418e60:	xchg   edi,eax
  418e61:	and    al,0x81
  418e63:	jmp    0x9c8ad80d
  418e68:	xlat   BYTE PTR ds:[ebx]
  418e69:	aam    0x60
  418e6b:	adc    bl,cl
  418e6d:	cmp    bl,BYTE PTR [esi+0x352fb2f2]
  418e73:	cmp    edi,eax
  418e75:	cld    
  418e76:	jge    0x418e39
  418e78:	push   edi
  418e79:	(bad)  
  418e7a:	jmp    0x418edc
  418e7c:	mov    ch,0x29
  418e7e:	stos   DWORD PTR es:[edi],eax
  418e7f:	stos   DWORD PTR es:[edi],eax
  418e80:	xor    BYTE PTR [ecx],0xf2
  418e83:	adc    DWORD PTR [edi-0x79],0x16ba9ac
  418e8a:	ja     0x418ef3
  418e8c:	pop    edx
  418e8d:	(bad)  
  418e8e:	pop    ecx
  418e8f:	dec    ecx
  418e90:	cld    
  418e91:	imul   ecx,DWORD PTR [eax+0x13e4ff7a],0xfffffff8
  418e98:	pop    esi
  418e99:	call   0xd9470d1d
  418e9e:	dec    ebx
  418e9f:	sub    BYTE PTR [ebx-0x49f9715a],0x56
  418ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ea7:	(bad)
  418eac:	jno    0x418ef1
  418eae:	shl    eax,1
  418eb0:	mov    eax,DWORD PTR [eax]
  418eb2:	and    ecx,ecx
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x42839f,0x0
  418ec3:	mov    DWORD PTR ds:0x428167,0x216c
  418ecd:	mov    DWORD PTR ds:0x42826b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428263,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428273,0x562c
  418ef0:	mov    DWORD PTR ds:0x42829b,0x3af5
  418efa:	cmp    DWORD PTR ds:0x42839f,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428327
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428df4
  418f1a:	not    DWORD PTR ds:0x42819b
  418f20:	sub    DWORD PTR ds:0x42838f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428153
  418f32:	mov    edx,DWORD PTR ds:0x428297
  418f38:	sbb    DWORD PTR ds:0x42837b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282d3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42830b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42838f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283a3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x4282fb,0x0
  418f6c:	not    DWORD PTR ds:0x428267
  418f72:	not    DWORD PTR ds:0x428197
  418f78:	mov    DWORD PTR ds:0x4282ef,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42831f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x4282fb,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42837b
  418fb5:	call   DWORD PTR ds:0x428df8
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42822f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42818f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42837f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42818b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42816f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42815f,0x0
  41900e:	mov    DWORD PTR ds:0x428173,0x4347
  419018:	mov    DWORD PTR ds:0x428197,0x6064
  419022:	mov    DWORD PTR ds:0x42827f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428253,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42815f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428dfc
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282ef
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42822b
  41906c:	or     DWORD PTR ds:0x42836f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi+0x5f70cbfe]
  419095:	mov    ds:0xc33faa23,al
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1+0x33681818],bh
  4190a2:	dec    eax
  4190a3:	daa    
  4190a4:	ins    DWORD PTR es:[edi],dx
  4190a5:	jnp    0x4190e5
  4190a7:	retf   
  4190a8:	xchg   ebx,eax
  4190a9:	(bad)  
  4190aa:	pop    esi
  4190ab:	add    DWORD PTR [ecx-0x28],0xaa9ca67c
  4190b2:	cmp    al,0x84
  4190b4:	cmp    BYTE PTR [eax],0x23
  4190b7:	push   ebx
  4190b8:	pop    ss
  4190b9:	fisubr DWORD PTR [ecx+0x3a]
  4190bc:	fstp   QWORD PTR [ecx+0x2e]
  4190bf:	xor    bh,BYTE PTR [ebp-0x10]
  4190c2:	daa    
  4190c3:	lods   al,BYTE PTR ds:[esi]
  4190c4:	fmul   QWORD PTR [ebx+0x205c1c36]
  4190ca:	mov    cl,0x2a
  4190cc:	hlt    
  4190cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ce:	out    dx,eax
  4190cf:	add    BYTE PTR [edi],0x61
  4190d2:	sub    al,0x2b
  4190d4:	adc    cl,0x12
  4190d7:	and    BYTE PTR [edi+0x38],0x3e
  4190db:	pop    edi
  4190dc:	retf   
  4190dd:	psubw  mm6,QWORD PTR [ecx]
  4190e0:	push   ds
  4190e1:	mov    bl,BYTE PTR [esi-0x2472eb4b]
  4190e7:	shr    ebp,0xbd
  4190ea:	push   edi
  4190eb:	jbe    0x4190e2
  4190ed:	call   0xff53:0xdc970dd5
  4190f4:	jae    0x4190c1
  4190f6:	retf   
  4190f7:	push   ecx
  4190f8:	sub    bl,ah
  4190fa:	retf   
  4190fb:	push   0x74
  4190fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190fe:	fcmovnbe st,st(0)
  419100:	xchg   edi,esp
  419102:	fst    st(5)
  419104:	and    edi,0x5505a04f
  41910a:	je     0x4190fd
  41910c:	sub    al,0xb1
  41910e:	rcr    BYTE PTR [ebx+0x62adc8ef],0x3
  419115:	fidivr DWORD PTR [ebx]
  419117:	fucomip st,st(0)
  419119:	fidivr DWORD PTR [ecx-0x17]
  41911c:	dec    edi
  41911d:	pop    eax
  41911e:	push   cs
  41911f:	sub    ebp,ebx
  419121:	test   DWORD PTR [ecx-0x43],ebx
  419124:	inc    ecx
  419125:	sbb    BYTE PTR [ebx-0x49c38657],bh
  41912b:	or     dl,BYTE PTR [eax]
  41912d:	xchg   BYTE PTR [eax-0x6b30600c],dh
  419133:	xchg   edi,eax
  419134:	xor    ecx,ebx
  419136:	in     eax,0xe4
  419138:	and    al,0x81
  41913a:	js     0x4191b8
  41913c:	int3   
  41913d:	push   0xffffffe5
  41913f:	xor    DWORD PTR [eax+0x35],0xffffffe7
  419143:	pop    eax
  419144:	mov    cl,0xf7
  419146:	daa    
  419147:	test   al,0xe3
  419149:	mov    eax,ds:0x10c0c461
  41914e:	or     BYTE PTR [edx+0x33],dh
  419151:	add    DWORD PTR ds:0x736f9cea,0x15
  419158:	ret    
  419159:	stc    
  41915a:	or     eax,0xf2dc37b7
  41915f:	call   0x4fbb:0xea204bb1
  419166:	and    esi,DWORD PTR [ebx-0x5a04cdb5]
  41916c:	pop    ecx
  41916d:	shr    DWORD PTR ds:0x9512856,1
  419173:	sub    DWORD PTR [ebp-0x79],0xffffffaf
  419177:	adc    eax,0xe839b574
  41917c:	and    eax,0x669dd41a
  419181:	cmc    
  419182:	mov    ebp,0x4db585ec
  419187:	add    esi,DWORD PTR ds:0x3b57511c
  41918d:	dec    edx
  41918e:	push   ebp
  41918f:	in     al,0xb1
  419191:	retf   
  419192:	fild   QWORD PTR [eax+ebp*1+0x36e8775e]
  419199:	fs mov eax,0x9ebe60d7
  41919f:	or     DWORD PTR [ecx+esi*2],edi
  4191a2:	xchg   esp,eax
  4191a3:	ror    cl,1
  4191a5:	sbb    DWORD PTR [esp+edx*1],ecx
  4191a8:	ins    DWORD PTR es:[edi],dx
  4191a9:	mov    esp,0xefc0527d
  4191ae:	aad    0x40
  4191b0:	and    cl,bl
  4191b2:	xchg   esi,eax
  4191b3:	in     eax,dx
  4191b4:	or     al,0x33
  4191b6:	imul   edx,DWORD PTR [edi+0x3d],0xbb362b24
  4191bd:	enter  0x1a68,0x5a
  4191c1:	mov    ss,WORD PTR ss:[eax-0xa71f905]
  4191c8:	sub    al,0x2b
  4191ca:	dec    edx
  4191cb:	xchg   edx,eax
  4191cc:	fst    QWORD PTR [esi-0x7d]
  4191cf:	data16 or BYTE PTR [edi-0x712515fc],ah
  4191d6:	add    eax,0x9f5fe46c
  4191db:	rcl    BYTE PTR [ebx+0x25],1
  4191de:	sar    BYTE PTR [ebx+0x72],cl
  4191e1:	push   eax
  4191e2:	nop
  4191e3:	inc    esp
  4191e4:	mov    ds:0xb991748,al
  4191e9:	mov    ebx,0x6ba7c6ac
  4191ee:	add    bh,dl
  4191f0:	pushf  
  4191f1:	sar    BYTE PTR [edi],cl
  4191f3:	int3   
  4191f4:	push   ebp
  4191f5:	ror    esp,cl
  4191f7:	pop    esp
  4191f8:	lds    esi,FWORD PTR [edx-0x60]
  4191fb:	leave  
  4191fc:	push   0x86651ab6
  419201:	xor    bl,BYTE PTR [esi]
  419203:	fidiv  WORD PTR [ebx+edx*8]
  419206:	ss sbb dl,dh
  419209:	jp     0x41927d
  41920b:	pop    es
  41920c:	mov    ebp,0xf23f490a
  419211:	sub    cl,BYTE PTR [ebp+0x63a1d668]
  419217:	cli    
  419218:	fnstsw WORD PTR [edx+0x614113c7]
  41921e:	sahf   
  41921f:	test   al,0x73
  419221:	shl    BYTE PTR [edi-0x70b3691b],1
  419227:	shl    ebp,cl
  419229:	jg     0x419203
  41922b:	xor    al,0xd1
  41922d:	and    eax,0x4f24d275
  419232:	mov    ebx,0xe81e77c1
  419237:	mov    DWORD PTR [ebp-0x47],eax
  41923a:	aas    
  41923b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41923c:	(bad)
  419240:	or     esi,esp
  419242:	xor    DWORD PTR [edi+0x510059e6],esi
  419248:	sub    dh,BYTE PTR [edx+0x70cea05e]
  41924e:	loopne 0x419263
  419250:	pop    eax
  419251:	loope  0x419293
  419253:	cmp    BYTE PTR [edx],0x23
  419256:	mov    DWORD PTR [edx],esi
  419258:	mov    eax,0x4eaa0095
  41925d:	push   edi
  41925e:	fistp  QWORD PTR [eax]
  419260:	das    
  419261:	adc    eax,0xfcb48d3f
  419266:	cwde   
  419267:	xchg   ebp,eax
  419268:	mul    DWORD PTR [esi]
  41926a:	add    BYTE PTR [eax+0x53],al
  41926d:	jl     0x4192a4
  41926f:	mov    dl,0x4d
  419271:	in     eax,0xb0
  419273:	sbb    eax,esi
  419275:	mov    edx,0xe2edd83d
  41927b:	jge    0x419265
  41927d:	push   ecx
  41927e:	inc    ebx
  41927f:	ja     0x41924b
  419281:	out    0x4e,al
  419283:	mov    DWORD PTR [edx+edx*8+0x1],esi
  419287:	sti    
  419288:	pop    esi
  419289:	sbb    bh,bh
  41928b:	jmp    0xc0020187
  419290:	stos   DWORD PTR es:[edi],eax
  419291:	outs   dx,DWORD PTR ds:[esi]
  419292:	seto   BYTE PTR [eax+edi*4]
  419296:	(bad)  
  419297:	into   
  419298:	push   ecx
  419299:	dec    edi
  41929a:	dec    edi
  41929b:	cmp    eax,0xe755ac9e
  4192a0:	vpcmpeqw ymm7,ymm7,YMMWORD PTR [ebx+0x5]
  4192a5:	ja     0x4192ca
  4192a7:	dec    esp
  4192a8:	push   ecx
  4192a9:	jl     0x4192f9
  4192ab:	int    0xa5
  4192ad:	stos   DWORD PTR es:[edi],eax
  4192ae:	inc    ecx
  4192af:	jae    0x41931e
  4192b1:	adc    ch,dl
  4192b3:	cmp    ch,BYTE PTR [ebx-0x22]
  4192b6:	rcl    DWORD PTR ds:0xd7affe25,cl
  4192bc:	sbb    al,bl
  4192be:	in     al,0x90
  4192c0:	fldenv [ecx+0x451c642c]
  4192c6:	cmp    DWORD PTR [esi+0x70],ebp
  4192c9:	scas   eax,DWORD PTR es:[edi]
  4192ca:	jmp    0x41926d
  4192cc:	jo     0x419318
  4192ce:	xor    DWORD PTR [ebx+eiz*1-0x44],0x4c77446f
  4192d6:	and    al,0x52
  4192d8:	ret    0x5aeb
  4192db:	sub    al,0x48
  4192dd:	lea    edi,[edx]
  4192df:	dec    eax
  4192e0:	jb     0x419291
  4192e2:	jp     0x41929c
  4192e4:	les    ebp,FWORD PTR [edi+0x398ce03c]
  4192ea:	iret   
  4192eb:	mov    dl,0x1e
  4192ed:	loope  0x4192ff
  4192ef:	adc    DWORD PTR [edi],edx
  4192f1:	mov    WORD PTR [ecx-0x7d],gs
  4192f4:	mov    esp,0x754cb850
  4192f9:	in     al,0xd6
  4192fb:	lea    ebx,[ebx]
  4192fd:	test   DWORD PTR [edx-0x30702f67],0x9b13db2c
  419307:	xor    BYTE PTR [ebp+0x69],0x51
  41930b:	fs enter 0x1051,0x9a
  419310:	stc    
  419311:	repz popf 
  419313:	or     BYTE PTR [edi+0x51],dh
  419316:	pop    ecx
  419317:	sub    edi,DWORD PTR [edi+0xd]
  41931a:	inc    ebp
  41931b:	add    ebp,DWORD PTR [edx]
  41931d:	cmp    DWORD PTR [edx+ecx*4],ecx
  419320:	sbb    al,0x6d
  419322:	xor    ch,BYTE PTR [edi+0x3f]
  419325:	scas   al,BYTE PTR es:[di]
  419327:	push   ds
  419328:	xor    BYTE PTR [ecx],ah
  41932a:	imul   ecx,DWORD PTR [ebx],0xd36aba93
  419330:	adc    dh,BYTE PTR [esp+esi*8]
  419333:	push   ds
  419334:	mov    ecx,DWORD PTR [ebx]
  419336:	jmp    0x2c32:0x71193743
  41933d:	ror    BYTE PTR [esp+edx*1+0x322cb6c0],1
  419344:	lock push 0xfffffff9
  419347:	push   cs
  419348:	push   edx
  419349:	jno    0x4193c8
  41934b:	mov    ebp,ebp
  41934d:	sbb    edi,DWORD PTR [ebp-0x562dcd77]
  419353:	setge  BYTE PTR [esi+ecx*4+0x3d9135b7]
  41935b:	jae    0x41936e
  41935d:	mov    esp,DWORD PTR [eax]
  41935f:	jl     0x4193ca
  419361:	push   0x8900706d
  419366:	dec    ebp
  419367:	jg     0x419313
  419369:	ret    
  41936a:	imul   ebp
  41936c:	mov    edi,0xf2ea3e26
  419371:	cld    
  419372:	dec    ebx
  419373:	outs   dx,BYTE PTR ds:[esi]
  419374:	sub    edx,DWORD PTR [eax-0x13]
  419377:	(bad)  
  419378:	lahf   
  419379:	pop    edi
  41937a:	ja     0x419381
  41937c:	jp     0x4193f1
  41937e:	ins    DWORD PTR es:[edi],dx
  41937f:	clc    
  419380:	in     al,dx
  419381:	scas   al,BYTE PTR es:[edi]
  419382:	stc    
  419383:	pop    edx
  419384:	xor    eax,esi
  419386:	jge    0x41939d
  419388:	rol    DWORD PTR [eax+0x13],cl
  41938b:	push   ebp
  41938c:	cmp    BYTE PTR [ecx+0x7fb9c97d],dl
  419392:	mov    BYTE PTR [esi+ebx*1+0x69],cl
  419396:	jbe    0x419320
  419398:	adc    BYTE PTR [ebp-0x67],0xc0
  41939c:	stc    
  41939d:	xchg   BYTE PTR [ebx+0x3f],dh
  4193a0:	scas   eax,DWORD PTR es:[edi]
  4193a1:	test   BYTE PTR [bx+di-0x5d],al
  4193a5:	(bad)  
  4193a6:	xlat   BYTE PTR ds:[ebx]
  4193a7:	push   esp
  4193a8:	pop    eax
  4193a9:	shl    BYTE PTR [edi],cl
  4193ab:	sbb    al,0xfe
  4193ad:	or     bh,BYTE PTR ds:[eax+0x3e5f9b23]
  4193b4:	sbb    ebx,esi
  4193b6:	pop    ds
  4193b7:	mov    dh,0xf1
  4193b9:	scas   al,BYTE PTR es:[edi]
  4193ba:	fld    st(6)
  4193bc:	iret   
  4193bd:	sub    al,0x59
  4193bf:	pop    edx
  4193c0:	dec    edi
  4193c1:	adc    al,0x91
  4193c3:	cs stos DWORD PTR es:[edi],eax
  4193c5:	call   0xbaa1aca9
  4193ca:	pop    ds
  4193cb:	pop    ecx
  4193cc:	sbb    BYTE PTR [eax],ch
  4193ce:	adc    eax,0x5f022873
  4193d3:	cld    
  4193d4:	push   0xa6a14893
  4193d9:	jmp    0x77d55b68
  4193de:	adc    al,0x2b
  4193e0:	fdiv   st(4),st
  4193e2:	ds scas eax,DWORD PTR es:[edi]
  4193e4:	cli    
  4193e5:	leave  
  4193e6:	mov    ecx,0x34fc95bd
  4193eb:	outs   dx,DWORD PTR ds:[esi]
  4193ec:	jb     0x419381
  4193ee:	dec    esp
  4193ef:	fadd   DWORD PTR ds:0x9eda7eb
  4193f5:	sbb    eax,0x9c3537d9
  4193fa:	push   edx
  4193fb:	lods   eax,DWORD PTR ds:[esi]
  4193fc:	in     eax,0xfd
  4193fe:	dec    esi
  4193ff:	sub    edi,ecx
  419401:	mov    esp,0xa4ede5aa
  419406:	dec    esp
  419407:	inc    edi
  419408:	jg     0x419482
  41940a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41940b:	scas   al,BYTE PTR es:[edi]
  41940c:	xchg   ebx,eax
  41940d:	jl     0x419452
  41940f:	mov    edi,0x514b9587
  419414:	fbstp  TBYTE PTR [esi-0x6038e80d]
  41941a:	test   DWORD PTR [ecx+ecx*1],esi
  41941d:	mov    ?,WORD PTR [esi+esi*4+0x46]
  419421:	cs sub eax,esp
  419424:	arpl   dx,ax
  419426:	mov    BYTE PTR [esi-0x31],bl
  419429:	leave  
  41942a:	in     eax,dx
  41942b:	loopne 0x419460
  41942d:	jmp    0x419404
  41942f:	arpl   WORD PTR [ecx+0x6b576a74],ax
  419435:	iret   
  419436:	or     bl,BYTE PTR [edi+eax*8]
  419439:	cwde   
  41943a:	add    BYTE PTR [edi+0x6188bec],bl
  419440:	jae    0x4193d4
  419442:	cmc    
  419443:	and    cl,al
  419445:	push   ebx
  419446:	sbb    eax,0xf1dfe836
  41944b:	jg     0x41941f
  41944d:	cmc    
  41944e:	xchg   ecx,eax
  41944f:	xor    eax,0x8c8bde98
  419454:	and    al,0x84
  419456:	add    BYTE PTR [eax],al
  419458:	add    BYTE PTR [edi],cl
  41945a:	lods   al,BYTE PTR ds:[esi]
  41945b:	enter  0x8302,0x3d
  41945f:	aas    
  419460:	add    BYTE PTR [edx+0x0],0x0
  419464:	mov    DWORD PTR ds:0x428397,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283a3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42823f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e00
  41949a:	mov    DWORD PTR ds:0x42827b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282e3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42831b,edx
  4194b2:	mov    DWORD PTR ds:0x4282a3,0x52b1
  4194bc:	or     DWORD PTR ds:0x42817b,edx
  4194c2:	and    DWORD PTR ds:0x42837f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428327,0x0
  4194cf:	mov    DWORD PTR ds:0x428327,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282a3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283a3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42817f,0x3203
  419506:	cmp    DWORD PTR ds:0x428327,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280bb
  419518:	push   0x42809f
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428e94
  419528:	adc    DWORD PTR ds:0x428187,0x266f
  419532:	xor    DWORD PTR ds:0x42837f,ebx
  419538:	xor    DWORD PTR ds:0x428307,ecx
  41953e:	mov    DWORD PTR ds:0x428177,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428253
  41954e:	dec    DWORD PTR ds:0x428307
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x4282f7,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42838b,0x4283a7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42818f,0x0
  419589:	mov    DWORD PTR ds:0x42817f,0x514f
  419593:	mov    DWORD PTR ds:0x428183,0x65eb
  41959d:	mov    DWORD PTR ds:0x428233,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x428293,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42818f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42804d
  4195cd:	push   0x428069
  4195d2:	call   DWORD PTR ds:0x428e98
  4195d8:	adc    DWORD PTR ds:0x4282a7,ecx
  4195de:	and    DWORD PTR ds:0x42829b,0x4c04
  4195e8:	add    DWORD PTR ds:0x428173,ebx
  4195ee:	and    DWORD PTR ds:0x42827f,0x6136
  4195f8:	add    DWORD PTR ds:0x428187,ebx
  4195fe:	mov    eax,ds:0x422558
  419603:	and    DWORD PTR ds:0x42830f,0x428277
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42816b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x428193,0x428167
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428277,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282a7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42827f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x428293,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428183,0x428153
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428287,0x42824f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42816b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42816b,0x4282f7
  4196ab:	push   0x4223dc
  4196b0:	sbb    DWORD PTR ds:0x428283,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42822b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42823f
  4196da:	sbb    DWORD PTR ds:0x428323,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428253,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42826f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42823b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428373,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282ef
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42826b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428383,0x5836
  419737:	cmp    DWORD PTR ds:0x428373,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e04
  41974d:	movzx  edx,BYTE PTR ds:0x42816b
  419754:	adc    DWORD PTR ds:0x4282f3,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282a7
  419761:	add    DWORD PTR ds:0x42818b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x42829f,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42818b,0x0
  419781:	mov    DWORD PTR ds:0x428253,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42826b,ebx
  419797:	cmp    DWORD PTR ds:0x42818b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e08
  4197bf:	sub    DWORD PTR ds:0x428283,0x63b8
  4197c9:	add    DWORD PTR ds:0x4282ff,0x42823f
  4197d3:	add    DWORD PTR ds:0x42825f,0x428187
  4197dd:	mov    ebx,DWORD PTR ds:0x4281a7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282b7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428237,ecx
  4197f8:	and    DWORD PTR ds:0x42828f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42830f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42818b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428377,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428317,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283a3,0x6551
  419858:	cmp    DWORD PTR ds:0x42818b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428e9c
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283ab
  419891:	mov    ecx,DWORD PTR ds:0x4283af
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x42829b
  4198a2:	cmp    DWORD PTR ds:0x42815f,0x0
  4198a9:	mov    DWORD PTR ds:0x428153,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42831f
  4198ba:	not    DWORD PTR ds:0x428313
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42815f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e0c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428283
  4198e5:	and    DWORD PTR ds:0x42831b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282ef
  4198f1:	sbb    DWORD PTR ds:0x428177,edx
  4198f7:	or     DWORD PTR ds:0x428307,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428273,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42821f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428223
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428317,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42822b,0x4551
  419946:	mov    DWORD PTR ds:0x42828f,0x487
  419950:	cmp    DWORD PTR ds:0x428317,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e10
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282ef,0x75a
  419988:	sub    DWORD PTR ds:0x428297,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42823b
  419999:	sub    ecx,DWORD PTR ds:0x42839f
  41999f:	mov    DWORD PTR ds:0x42823b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42825b,0x0
  4199ac:	mov    DWORD PTR ds:0x4282f3,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42815b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428377,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42825b,edi
  4199da:	cmp    DWORD PTR ds:0x42825b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428233
  4199ec:	push   0x427f5b
  4199f1:	call   DWORD PTR ds:0x428ea0
  4199f7:	sub    DWORD PTR ds:0x4283a7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42831f
  419a03:	sbb    DWORD PTR ds:0x4282a7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42838b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428307,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x4282ff,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428317
  419a31:	xor    DWORD PTR ds:0x42822b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42822f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx+0xc708ffa]
  419a79:	outs   dx,BYTE PTR ds:[esi]
  419a7a:	pop    ds
  419a7b:	jle    0x419a60
  419a7d:	mov    ebx,0x12bc1816
  419a82:	sbb    BYTE PTR [eax],bl
  419a84:	scas   al,BYTE PTR es:[edi]
  419a85:	test   BYTE PTR [esi],dh
  419a87:	test   edx,0xc0d7ab1a
  419a8d:	add    edx,DWORD PTR [ecx-0x73261a21]
  419a93:	inc    ebp
  419a94:	gs pop edx
  419a96:	mov    ds:0x442c0ed5,al
  419a9b:	cmp    esi,DWORD PTR [eax+0x3e]
  419a9e:	mov    dh,0x2b
  419aa0:	nop
  419aa1:	mov    esi,0x22e2e2a7
  419aa6:	or     bh,BYTE PTR [edi-0x726e93f9]
  419aac:	mov    dl,BYTE PTR [eax+0x65436996]
  419ab2:	lods   al,BYTE PTR ds:[esi]
  419ab3:	fnstenv [edx-0x35]
  419ab6:	and    ah,bl
  419ab8:	mov    al,0x35
  419aba:	leave  
  419abb:	cld    
  419abc:	sub    ah,BYTE PTR [eax]
  419abe:	inc    ecx
  419abf:	adc    al,0xe9
  419ac1:	and    ebp,eax
  419ac3:	(bad)  
  419ac4:	jl     0x419b0a
  419ac6:	and    BYTE PTR [eax],0xa3
  419ac9:	pop    ds
  419aca:	repnz mov ss,esp
  419acd:	popf   
  419ace:	(bad)  
  419acf:	ror    BYTE PTR [ecx],0xca
  419ad2:	and    ecx,edx
  419ad4:	fiadd  DWORD PTR [eax-0x1b8257ce]
  419ada:	mov    edi,0x89f21a4f
  419adf:	dec    esp
  419ae0:	mov    ch,0xef
  419ae2:	or     al,0xa1
  419ae4:	sub    BYTE PTR [ebp+esi*2-0x75],bl
  419ae8:	lods   al,BYTE PTR ds:[esi]
  419ae9:	xchg   DWORD PTR [ebp-0x8f2ca3c],ebp
  419aef:	retf   0x7910
  419af2:	retf   
  419af3:	jmp    0x9763:0x440c140b
  419afa:	mov    eax,ds:0xc54bfc58
  419aff:	dec    esp
  419b00:	int3   
  419b01:	add    eax,0x2186734f
  419b06:	lods   eax,DWORD PTR ds:[esi]
  419b07:	lods   al,BYTE PTR ds:[esi]
  419b08:	xor    BYTE PTR [eax],al
  419b0a:	or     BYTE PTR gs:[ebx],dl
  419b0d:	xor    DWORD PTR [esi],edx
  419b0f:	jno    0x419ac9
  419b11:	pusha  
  419b12:	aad    0x5b
  419b14:	push   ebp
  419b15:	push   cs
  419b16:	add    BYTE PTR ds:0x91df21af,ch
  419b1c:	jbe    0x419ad1
  419b1e:	cli    
  419b1f:	dec    eax
  419b20:	jecxz  0x419b22
  419b22:	xchg   ebp,eax
  419b23:	mov    ds,WORD PTR ds:0xc6245d25
  419b29:	es dec edi
  419b2b:	retf   
  419b2c:	mov    ch,0x24
  419b2e:	and    al,0xfe
  419b30:	mov    bh,0xfe
  419b32:	adc    BYTE PTR [ecx],0x42
  419b35:	into   
  419b36:	into   
  419b37:	cmp    bh,BYTE PTR [ebp-0x454f5e07]
  419b3d:	iret   
  419b3e:	(bad)  
  419b3f:	out    0x27,al
  419b41:	push   es
  419b42:	ins    DWORD PTR es:[edi],dx
  419b43:	xor    ecx,edi
  419b45:	out    dx,eax
  419b46:	mov    ecx,0xd70ac5a2
  419b4b:	xchg   edi,eax
  419b4c:	fadd   DWORD PTR [ebx]
  419b4e:	iret   
  419b4f:	push   ebp
  419b50:	xlat   BYTE PTR ds:[ebx]
  419b51:	push   esi
  419b52:	outs   dx,BYTE PTR ds:[esi]
  419b53:	mov    esp,0x72f4d76e
  419b58:	mov    ebx,0x1ab10f04
  419b5d:	dec    eax
  419b5e:	mov    WORD PTR [eax-0x2b],?
  419b61:	xchg   esp,eax
  419b62:	push   eax
  419b63:	and    al,0x2e
  419b65:	adc    eax,0x4bb36b85
  419b6a:	mov    cl,0xe0
  419b6c:	mov    ch,0xb7
  419b6e:	jecxz  0x419b78
  419b70:	(bad)  
  419b71:	loop   0x419b83
  419b73:	(bad)  
  419b74:	out    0x1c,al
  419b76:	and    BYTE PTR [eax-0x3bcb5688],dl
  419b7c:	adc    ebx,edx
  419b7e:	in     eax,0x2f
  419b80:	test   ebp,esp
  419b82:	inc    ebp
  419b83:	(bad)  
  419b84:	jmp    0xefa9:0x8c452a82
  419b8b:	xchg   edi,eax
  419b8c:	or     bl,BYTE PTR [edx+0x2a]
  419b8f:	sbb    al,bh
  419b91:	mov    eax,0x99826dc5
  419b96:	mov    ebp,0xb7974518
  419b9b:	dec    esi
  419b9c:	or     edi,DWORD PTR [eax+0x7375be0b]
  419ba2:	sar    DWORD PTR [ebx],cl
  419ba4:	mov    ch,0x29
  419ba6:	imul   ecx,DWORD PTR [edx],0xffffffcc
  419ba9:	dec    ebx
  419baa:	cld    
  419bab:	test   DWORD PTR ds:[edi],edi
  419bae:	sub    ch,BYTE PTR [eax-0x4c]
  419bb1:	stos   DWORD PTR es:[edi],eax
  419bb2:	or     al,ch
  419bb4:	adc    al,bh
  419bb6:	in     al,0x95
  419bb8:	es stc 
  419bba:	cdq    
  419bbb:	ret    
  419bbc:	scas   eax,DWORD PTR es:[edi]
  419bbd:	pusha  
  419bbe:	sti    
  419bbf:	cld    
  419bc0:	xor    esi,DWORD PTR [edx-0xc2df972]
  419bc6:	mov    ecx,0x755c46fe
  419bcb:	aam    0xd2
  419bcd:	inc    ebp
  419bce:	adc    edi,esp
  419bd0:	add    al,BYTE PTR [eax-0x9]
  419bd3:	pop    edi
  419bd4:	dec    edi
  419bd5:	sub    al,0x24
  419bd7:	push   eax
  419bd8:	jnp    0x419c1f
  419bda:	jmp    0xaf0c:0xd491ce67
  419be1:	pop    ds
  419be2:	adc    DWORD PTR ds:[esi-0x379d2e9a],edx
  419be9:	ret    
  419bea:	cdq    
  419beb:	lock cmp DWORD PTR [edx+0xb],ecx
  419bef:	xor    BYTE PTR [eax+0x70d8c1f6],al
  419bf5:	sbb    esi,edx
  419bf7:	popa   
  419bf8:	adc    ecx,eax
  419bfa:	fst    QWORD PTR [esp+esi*2]
  419bfd:	pop    ds
  419bfe:	out    dx,eax
  419bff:	and    BYTE PTR [eax],0x84
  419c02:	mov    esp,0xa27fe9c5
  419c07:	push   es
  419c08:	cld    
  419c09:	rcr    cl,cl
  419c0b:	push   ss
  419c0c:	pusha  
  419c0d:	inc    edi
  419c0e:	cmp    BYTE PTR [edx-0x6b],ch
  419c11:	jmp    0x805bd903
  419c16:	cmp    DWORD PTR [ecx],0xffffff85
  419c19:	pop    ds
  419c1a:	shr    dh,1
  419c1c:	cmp    al,0xf2
  419c1e:	out    0xa8,eax
  419c20:	int    0x3e
  419c22:	out    0x9f,eax
  419c24:	ins    BYTE PTR es:[edi],dx
  419c25:	retf   0x575d
  419c28:	les    eax,FWORD PTR [ecx]
  419c2a:	ret    
  419c2b:	ror    esp,cl
  419c2d:	data16 (bad) 
  419c2f:	jmp    0x419c5a
  419c31:	ss data16 aad 0xcc
  419c35:	in     al,dx
  419c36:	cmp    bl,BYTE PTR [edi-0x2f196a81]
  419c3c:	adc    BYTE PTR [eax],al
  419c3e:	add    eax,0xd54405bb
  419c43:	xor    ah,BYTE PTR [ecx]
  419c45:	ss dec esi
  419c47:	scas   al,BYTE PTR es:[edi]
  419c48:	sbb    dl,BYTE PTR [ebx+esi*1+0x14]
  419c4c:	ret    
  419c4d:	and    ebx,ebx
  419c4f:	sbb    eax,0x581fa707
  419c54:	in     al,0x5f
  419c56:	arpl   WORD PTR [eax+0x1],bx
  419c59:	outs   dx,DWORD PTR ds:[esi]
  419c5a:	xor    eax,DWORD PTR [eax-0x48]
  419c5d:	aam    0xda
  419c5f:	xchg   ecx,eax
  419c60:	xchg   BYTE PTR [ecx+0x1d],ah
  419c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c64:	ret    0x58a
  419c67:	push   edi
  419c68:	mov    es,WORD PTR [edx-0x59090749]
  419c6e:	mov    ss,WORD PTR [edi-0xb]
  419c71:	cmp    eax,DWORD PTR [ecx+eiz*4-0x7b66d1dc]
  419c78:	dec    esp
  419c79:	out    0x2c,eax
  419c7b:	pop    eax
  419c7c:	shr    esp,0x9c
  419c7f:	in     al,dx
  419c80:	jmp    0x40bb:0xfe263ce9
  419c87:	in     al,dx
  419c88:	jmp    0x419c28
  419c8a:	pop    es
  419c8b:	test   DWORD PTR [edi-0x435c1eeb],0x4ca96830
  419c95:	dec    ebp
  419c96:	fldenv [ecx]
  419c98:	or     al,0xb1
  419c9a:	pop    edi
  419c9b:	fbld   TBYTE PTR [eax-0x1c266ca6]
  419ca1:	cmp    ebp,esp
  419ca3:	xor    eax,0x7a9f7e47
  419ca8:	and    ch,BYTE PTR [ecx]
  419caa:	pop    ss
  419cab:	jge    0x419d18
  419cad:	mov    ah,0xe5
  419caf:	push   0x33
  419cb1:	xchg   ecx,eax
  419cb3:	inc    ecx
  419cb4:	or     esi,ebp
  419cb6:	or     eax,0x833b5f4a
  419cbb:	push   edx
  419cbc:	jp     0x419cee
  419cbe:	sbb    ah,BYTE PTR [edi-0x2c]
  419cc1:	sbb    edx,DWORD PTR [eax]
  419cc3:	jl     0x419d28
  419cc5:	xchg   BYTE PTR ds:0xaefe9ac5,ah
  419ccb:	adc    BYTE PTR [edi],dl
  419ccd:	sbb    bl,ah
  419ccf:	repz fld st(3)
  419cd2:	pop    esi
  419cd3:	daa    
  419cd4:	pop    ebp
  419cd5:	aam    0xac
  419cd7:	jle    0x419cfd
  419cd9:	inc    esp
  419cda:	mov    bh,0x5e
  419cdc:	cwde   
  419cdd:	xor    BYTE PTR [ecx],dl
  419cdf:	sbb    BYTE PTR [edx],cl
  419ce1:	mov    ?,WORD PTR [eax+0x12e03fbb]
  419ce7:	sub    BYTE PTR es:[eax-0x6b],bl
  419ceb:	adc    esp,esi
  419ced:	jg     0x419cb0
  419cef:	ins    BYTE PTR es:[edi],dx
  419cf0:	push   es
  419cf1:	and    ah,BYTE PTR [edx]
  419cf3:	adc    eax,edi
  419cf5:	dec    ecx
  419cf6:	mov    esp,0xbf02482e
  419cfb:	jno    0x419d41
  419cfd:	sbb    al,0x26
  419cff:	and    esp,edi
  419d01:	dec    ebx
  419d02:	mov    esi,ecx
  419d04:	sub    eax,eax
  419d06:	dec    edi
  419d07:	retf   
  419d08:	shr    al,0xcd
  419d0b:	aad    0x80
  419d0d:	sub    BYTE PTR [ecx+0x34],bl
  419d10:	lds    eax,FWORD PTR [ebp-0x5dd5a359]
  419d16:	or     eax,0xf3f73ab9
  419d1b:	sbb    edi,ecx
  419d1d:	and    BYTE PTR [edx+0x59],dl
  419d20:	dec    edi
  419d21:	out    dx,eax
  419d22:	mov    ch,0xfd
  419d24:	mov    esp,0x79ba7eda
  419d29:	(bad)  
  419d2a:	xchg   ecx,eax
  419d2b:	jle    0x419d4a
  419d2d:	iret   
  419d2e:	das    
  419d2f:	daa    
  419d30:	sub    ebp,DWORD PTR [esi-0x35]
  419d33:	push   esp
  419d34:	push   0x5b
  419d36:	or     eax,0x124cd067
  419d3b:	xchg   ebp,eax
  419d3c:	ds imul ebx,esi,0x51795c26
  419d43:	jl     0x419dbf
  419d45:	pusha  
  419d46:	add    eax,esi
  419d48:	mov    edx,DWORD PTR [esi+0x5e]
  419d4b:	mov    esi,0x96308b75
  419d50:	or     bl,ch
  419d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d54:	cwde   
  419d55:	ja     0x419d88
  419d57:	mov    ebx,0x1ec78f74
  419d5c:	mov    bl,0xf2
  419d5e:	jle    0x419dd9
  419d60:	in     al,dx
  419d61:	fs jmp 0x56f3838b
  419d67:	dec    esp
  419d68:	popa   
  419d69:	xchg   edi,eax
  419d6a:	lods   al,BYTE PTR ds:[esi]
  419d6b:	push   ecx
  419d6c:	cmp    ch,BYTE PTR [esi+0x2c7a51aa]
  419d72:	daa    
  419d73:	call   0xc95f1f47
  419d78:	pop    eax
  419d79:	(bad)  
  419d7a:	mov    edx,0xde551374
  419d7f:	jmp    0xbb0b69b8
  419d84:	xchg   ecx,eax
  419d85:	dec    esi
  419d86:	xchg   BYTE PTR [eax],dh
  419d88:	in     al,dx
  419d89:	push   0x47fa1a77
  419d8e:	add    al,0xb4
  419d90:	xchg   esp,eax
  419d91:	jns    0x419e0e
  419d93:	in     eax,dx
  419d94:	dec    edx
  419d95:	or     BYTE PTR [edi+0x4b],dl
  419d98:	mov    eax,ds:0xff9463d5
  419d9d:	mov    edi,DWORD PTR [esi+ebx*4-0x7acccddd]
  419da4:	push   cs
  419da5:	fmul   st(7),st
  419da7:	sub    edi,DWORD PTR [esi]
  419da9:	pusha  
  419daa:	push   esi
  419dab:	out    0x7e,al
  419dad:	jbe    0x419d9d
  419daf:	in     al,0x78
  419db1:	mov    eax,0x68f1a907
  419db6:	loop   0x419db3
  419db8:	(bad)  
  419db9:	bound  esi,QWORD PTR [ecx+edx*8+0x3c]
  419dbd:	pushf  
  419dbe:	xchg   esi,eax
  419dbf:	or     eax,0xd5bd0672
  419dc4:	fistp  QWORD PTR [edx+0x194702b]
  419dca:	sbb    al,0xe1
  419dcc:	xor    al,0x9a
  419dce:	cli    
  419dcf:	xchg   ebx,eax
  419dd0:	in     eax,dx
  419dd1:	inc    ecx
  419dd2:	cmp    DWORD PTR [edi],edx
  419dd4:	and    cl,dl
  419dd6:	xchg   ebx,eax
  419dd7:	sbb    al,0xc1
  419dd9:	fldenv [edi]
  419ddb:	retf   0x76f5
  419dde:	sub    al,0xc2
  419de0:	mov    eax,0x3dc46dd4
  419de5:	jl     0x419e40
  419de7:	jo     0x419de2
  419de9:	dec    esp
  419dea:	sahf   
  419deb:	(bad)  
  419dec:	xor    edi,ecx
  419dee:	outs   dx,DWORD PTR ds:[esi]
  419def:	sub    eax,0x479b8e40
  419df4:	jg     0x419dac
  419df6:	call   0x7b1b444e
  419dfb:	ins    DWORD PTR es:[edi],dx
  419dfc:	jnp    0x419e10
  419dfe:	mov    ds:0xcda51172,eax
  419e03:	xlat   BYTE PTR ds:[ebx]
  419e04:	jle    0x419e10
  419e06:	pop    ebx
  419e07:	scas   eax,DWORD PTR es:[edi]
  419e08:	xchg   ebp,eax
  419e09:	ss dec esp
  419e0b:	xor    ebp,ebx
  419e0d:	push   esi
  419e0e:	enter  0x60,0xef
  419e12:	mov    ds:0x4aaaa620,eax
  419e17:	adc    al,0x8c
  419e19:	sbb    al,0x27
  419e1b:	jge    0x419e2e
  419e1d:	inc    eax
  419e1e:	mov    ah,0xf1
  419e20:	rcl    BYTE PTR [esi-0x26],0xfc
  419e24:	adc    BYTE PTR [edi-0x95586f6],0x9a
  419e2b:	aam    0xe7
  419e2d:	fstp   TBYTE PTR [ecx+0x7d114654]
  419e33:	jmp    0x4cccbe33
  419e38:	and    al,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x7c77b32a
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	aaa    
  419e6f:	ja     0x419e06
  419e71:	fidiv  WORD PTR [edx]
  419e73:	popf   
  419e74:	lahf   
  419e75:	xchg   ecx,eax
  419e76:	mov    esp,0x47dcb286
  419e7b:	fistp  DWORD PTR [ebp+0x6f]
  419e7e:	(bad)  
  419e7f:	mov    es,ebp
  419e81:	div    ch
  419e83:	sub    BYTE PTR [edi+eiz*2-0x55],0xb7
  419e88:	mov    DWORD PTR [edi],edx
  419e8a:	adc    edi,eax
  419e8c:	outs   dx,BYTE PTR ss:[esi]
  419e8e:	pop    esp
  419e8f:	jg     0x419ef7
  419e91:	(bad)  
  419e92:	xchg   BYTE PTR [ecx+eiz*8+0x2cbc3a29],ah
  419e99:	xchg   ebp,eax
  419e9a:	xor    al,0xe6
  419e9c:	pop    ss
  419e9d:	add    al,0x2c
  419e9f:	mov    dl,BYTE PTR [ebx]
  419ea1:	push   edi
  419ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea3:	jecxz  0x419e53
  419ea5:	std    
  419ea6:	jne    0x419e8e
  419ea8:	or     ebx,DWORD PTR [esi+0xc]
  419eab:	push   cs
  419eac:	lods   eax,DWORD PTR ds:[esi]
  419ead:	nop
  419eae:	ret    0xc94
  419eb1:	div    bh
  419eb3:	add    eax,0x15cfa56b
  419eb8:	and    ebx,DWORD PTR [edx+edi*2+0x3ae5a19]
  419ebf:	pop    es
  419ec0:	xchg   ch,bh
  419ec2:	mov    ebx,0x114a3874
  419ec7:	inc    ebp
  419ec8:	pop    esp
  419ec9:	jmp    0x419e4e
  419ecb:	or     bl,BYTE PTR [ebx]
  419ecd:	aaa    
  419ece:	retf   0xd7a
  419ed1:	adc    ebx,ecx
  419ed3:	xchg   ecx,eax
  419ed4:	aaa    
  419ed5:	das    
  419ed6:	push   ss
  419ed7:	jmp    0x419ef6
  419ed9:	adc    DWORD PTR [ecx],eax
  419edb:	fsub   DWORD PTR [ecx]
  419edd:	add    al,0xec
  419edf:	pop    ebp
  419ee0:	lods   eax,DWORD PTR ds:[esi]
  419ee1:	inc    edi
  419ee2:	dec    esi
  419ee3:	dec    eax
  419ee4:	fisttp QWORD PTR [ecx+0x3d94d268]
  419eea:	dec    edx
  419eeb:	xlat   BYTE PTR ds:[ebx]
  419eec:	mov    ecx,0x7d3ea6ab
  419ef1:	sub    cl,dl
  419ef3:	fmul   st(5),st
  419ef5:	jmp    0xadcb:0x7eb4817a
  419efc:	in     eax,dx
  419efd:	jmp    0x419f10
  419eff:	imul   edx,DWORD PTR [ebx+0x302b63a2],0xc7adbc9e
  419f09:	mov    ds:0xcb3a7fcf,eax
  419f0e:	mov    esp,0x45a08ad8
  419f13:	fwait
  419f14:	adc    eax,0x2a190e74
  419f19:	and    edx,eax
  419f1b:	lahf   
  419f1c:	push   es
  419f1d:	mov    esi,0xdb1d9db9
  419f22:	enter  0xe3ee,0x2e
  419f26:	sub    al,0x64
  419f28:	fwait
  419f29:	mov    ebx,0xa559f28f
  419f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f2f:	sub    eax,0x46ba58a9
  419f34:	pusha  
  419f35:	mov    dl,0x4a
  419f37:	es mov eax,0x340c364c
  419f3d:	jb     0x419faf
  419f3f:	pop    esi
  419f40:	cmp    eax,DWORD PTR [bx+0xa]
  419f44:	shl    BYTE PTR [ecx],cl
  419f46:	jnp    0x419f3c
  419f48:	add    eax,0x2f177fab
  419f4d:	sbb    DWORD PTR [ecx-0x42532ca2],ebx
  419f53:	fst    QWORD PTR [eax+0x13]
  419f56:	nop
  419f57:	into   
  419f58:	inc    edi
  419f59:	(bad)  
  419f5a:	pop    eax
  419f5b:	mov    ds:0x78581b4,al
  419f60:	dec    edi
  419f61:	cmp    ebx,DWORD PTR [edi+0x73]
  419f64:	xor    ebx,DWORD PTR [esi+0x3a]
  419f67:	iret   
  419f68:	shl    bl,0xc7
  419f6b:	xchg   esi,eax
  419f6c:	cli    
  419f6d:	xchg   BYTE PTR ds:0xcae930a7,bh
  419f73:	dec    edx
  419f74:	arpl   di,bx
  419f76:	xchg   ah,ch
  419f78:	shl    DWORD PTR [ebx+0x28],0x8e
  419f7c:	rcr    BYTE PTR [esi+0x4f190634],0x70
  419f83:	push   edx
  419f84:	push   ss
  419f85:	push   ss
  419f86:	add    eax,esi
  419f88:	dec    edx
  419f89:	mov    ebp,0x89b7bc32
  419f8e:	push   edx
  419f8f:	mov    dl,0xc0
  419f91:	xchg   edx,eax
  419f92:	xchg   edi,eax
  419f93:	xor    BYTE PTR [esi],dh
  419f95:	int3   
  419f96:	mov    ds:0x10912442,eax
  419f9b:	and    al,0xc0
  419f9d:	retf   0x21bf
  419fa0:	inc    edi
  419fa1:	or     eax,0x20a51a2b
  419fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fa7:	sub    cl,cl
  419fa9:	dec    ebx
  419faa:	jg     0x419f80
  419fac:	fst    QWORD PTR [ebp+0x5f]
  419faf:	aaa    
  419fb0:	pop    edx
  419fb1:	dec    eax
  419fb2:	push   eax
  419fb3:	enter  0x7232,0xe
  419fb7:	push   ebx
  419fb8:	test   eax,0xbd1e289e
  419fbd:	dec    ecx
  419fbe:	fisttp QWORD PTR [ecx-0x7ee86cce]
  419fc4:	inc    ebx
  419fc5:	cmp    al,0x28
  419fc7:	cld    
  419fc8:	les    ecx,FWORD PTR [edi-0x6f]
  419fcb:	pop    eax
  419fcc:	in     al,dx
  419fcd:	clc    
  419fce:	test   DWORD PTR [ebx+0x28f8421],eax
  419fd4:	je     0x419f56
  419fd6:	jecxz  0x419fda
  419fd8:	lea    edi,[ebp-0x1395e7c]
  419fde:	in     al,dx
  419fdf:	(bad)  
  419fe0:	int3   
  419fe1:	dec    esi
  419fe2:	shl    DWORD PTR [edx],0xc4
  419fe5:	dec    ebx
  419fe6:	pop    ebx
  419fe7:	mul    DWORD PTR [ebx+0x44]
  419fea:	or     BYTE PTR [esi+0x4f2388da],ch
  419ff0:	xchg   edx,eax
  419ff1:	inc    esi
  419ff2:	sub    BYTE PTR [edi],cl
  419ff4:	js     0x41a054
  419ff6:	mov    eax,0x7d26c20
  419ffb:	retf   
  419ffc:	pop    edi
  419ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ffe:	sti    
  419fff:	jae    0x419ffb
  41a001:	sub    BYTE PTR [edx],0x8d
  41a004:	mov    dl,0x8
  41a006:	cdq    
  41a007:	shl    DWORD PTR [edi+0x5cae680e],1
  41a00d:	ret    
  41a00e:	imul   ecx,esp,0x7f
  41a011:	adc    BYTE PTR [ebx],ah
  41a013:	mov    bl,BYTE PTR [eax+0x52]
  41a016:	inc    eax
  41a017:	jp     0x419fb0
  41a019:	fst    st(5)
  41a01b:	es xchg dl,bh
  41a01e:	les    eax,FWORD PTR [edx+0x7c]
  41a021:	mov    ch,0x44
  41a023:	stos   DWORD PTR es:[edi],eax
  41a024:	ret    0xd3b1
  41a027:	sub    al,bl
  41a029:	daa    
  41a02a:	mov    ebx,0x5d507107
  41a02f:	mov    eax,0x4a43bd1d
  41a034:	mov    eax,ds:0x126ac0e7
  41a039:	cli    
  41a03a:	and    eax,0x67876fae
  41a03f:	pop    ebx
  41a040:	mov    bh,bl
  41a042:	mov    ch,0x58
  41a044:	retf   
  41a045:	mov    bh,bh
  41a047:	ret    0x300
  41a04a:	call   0x6e23b5f4
  41a04f:	lea    edx,[eax]
  41a051:	jge    0x41a010
  41a053:	jg     0x41a060
  41a055:	fucomp st(0)
  41a057:	cmp    dl,BYTE PTR [esi]
  41a059:	xor    DWORD PTR [edx],ebp
  41a05b:	and    DWORD PTR [ebx],edx
  41a05d:	sahf   
  41a05e:	lahf   
  41a05f:	add    edi,eax
  41a061:	rcl    BYTE PTR [ebx+0x8],cl
  41a064:	in     al,dx
  41a065:	xchg   esp,eax
  41a066:	or     esi,DWORD PTR [ebx-0x6c]
  41a069:	(bad)  
  41a06a:	or     DWORD PTR [ecx+0x514c62a4],ecx
  41a070:	pop    ss
  41a071:	xchg   esi,eax
  41a072:	and    ebx,esp
  41a074:	or     eax,0x5fe3781e
  41a079:	std    
  41a07a:	into   
  41a07b:	pop    ss
  41a07c:	mov    ss,edx
  41a07e:	xor    al,BYTE PTR [ebp+0x19]
  41a081:	sahf   
  41a082:	mov    dh,0x34
  41a084:	imul   ebx,esp,0x21
  41a087:	cs jmp 0x41a01e
  41a08a:	mov    ?,edx
  41a08c:	icebp  
  41a08d:	xor    ebx,DWORD PTR [ecx-0x2936316f]
  41a093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a094:	mov    ebx,0x37b03f36
  41a099:	add    eax,0x579dcf09
  41a09e:	xor    ch,bh
  41a0a0:	and    al,0xb4
  41a0a2:	cmc    
  41a0a3:	and    esp,DWORD PTR [ebp+0x17b8a05e]
  41a0a9:	pusha  
  41a0aa:	leave  
  41a0ab:	ja     0x41a068
  41a0ad:	or     al,ah
  41a0af:	clc    
  41a0b0:	es lahf 
  41a0b2:	pop    ecx
  41a0b3:	xor    DWORD PTR [esi-0x52],0x28edb351
  41a0ba:	mov    cl,0xaf
  41a0bc:	mov    edx,0x5ca2890a
  41a0c1:	adc    al,0xe0
  41a0c3:	in     eax,0xf4
  41a0c5:	mov    al,0x54
  41a0c7:	pop    esi
  41a0c8:	aam    0xb0
  41a0ca:	and    dl,BYTE PTR [ebp+edx*4-0x75]
  41a0ce:	mov    ah,0xbf
  41a0d0:	jnp    0x41a118
  41a0d2:	popa   
  41a0d3:	fild   WORD PTR [esi+0x36f3d415]
  41a0d9:	push   cs
  41a0da:	cmp    edx,esp
  41a0dc:	sub    ch,al
  41a0de:	mov    al,0xdd
  41a0e0:	(bad)  
  41a0e1:	shl    BYTE PTR [ebx],cl
  41a0e3:	loope  0x41a0f5
  41a0e5:	lods   eax,DWORD PTR ds:[esi]
  41a0e6:	hlt    
  41a0e7:	cwde   
  41a0e8:	minps  xmm6,XMMWORD PTR [eax-0x33]
  41a0ec:	xchg   esi,eax
  41a0ed:	daa    
  41a0ee:	bound  ebx,QWORD PTR [eax]
  41a0f0:	and    BYTE PTR [eax+0x3e],dh
  41a0f3:	cmp    ah,BYTE PTR [edx+0x63]
  41a0f6:	repz arpl WORD PTR [edx+0x4f],bx
  41a0fa:	mov    bl,0x19
  41a0fc:	jno    0x41a09f
  41a0fe:	fisubr DWORD PTR [edi-0x22]
  41a101:	and    DWORD PTR [ebx+0xa00ed0d],eax
  41a107:	xor    al,0x88
  41a109:	adc    DWORD PTR ss:[eax+0x11b5f9e1],ebx
  41a110:	pop    esp
  41a111:	mov    eax,ds:0x2530ea3d
  41a116:	push   eax
  41a117:	mov    ecx,0xde7f61c8
  41a11c:	jge    0x41a0f1
  41a11e:	jno    0x41a12e
  41a120:	cdq    
  41a121:	mov    ah,0x9e
  41a123:	pop    ecx
  41a124:	repnz pop ss
  41a126:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a128:	mov    ebx,edi
  41a12a:	ins    BYTE PTR es:[edi],dx
  41a12b:	call   0x9705:0xfe5c27d9
  41a132:	jb     0x41a0ef
  41a134:	stos   BYTE PTR es:[edi],al
  41a135:	push   cs
  41a136:	adc    edx,DWORD PTR [ecx+edi*4+0x677eb9ce]
  41a13d:	xor    al,al
  41a13f:	lea    ebx,[edi]
  41a141:	sahf   
  41a142:	push   ss
  41a143:	aad    0xba
  41a145:	sub    esp,ebp
  41a147:	dec    ebx
  41a148:	lock dec eax
  41a14a:	or     ah,BYTE PTR [esp+eax*8]
  41a14d:	daa    
  41a14e:	pop    ss
  41a14f:	jb     0x41a125
  41a151:	jbe    0x41a1cb
  41a153:	jg     0x41a18f
  41a155:	adc    eax,0xfcac8473
  41a15a:	out    dx,eax
  41a15b:	lds    esi,FWORD PTR [ebx-0x7b]
  41a15e:	or     BYTE PTR [ebx-0x4560f22b],dh
  41a164:	mov    al,0x61
  41a166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a167:	mov    ch,0x4e
  41a169:	jb     0x41a11f
  41a16b:	sbb    bl,BYTE PTR [esi-0xe]
  41a16e:	js     0x41a10e
  41a170:	(bad)
  41a174:	inc    edx
  41a175:	sbb    ecx,DWORD PTR [ebp+0x52]
  41a178:	push   ss
  41a179:	xor    BYTE PTR [ebx],dh
  41a17b:	sbb    eax,0x9ee64b1b
  41a180:	mov    edi,DWORD PTR [edx-0x7e]
  41a183:	sub    BYTE PTR [ecx-0x49391bbf],dh
  41a189:	push   cs
  41a18a:	leave  
  41a18b:	xor    al,BYTE PTR [edi+0x27420a68]
  41a191:	shl    BYTE PTR [esi+0x29],0x52
  41a195:	shr    DWORD PTR ds:0xc098b218,1
  41a19b:	gs mov ch,0x8c
  41a19e:	out    dx,eax
  41a19f:	inc    edi
  41a1a0:	xor    al,0xf5
  41a1a2:	lods   al,BYTE PTR ds:[esi]
  41a1a3:	retf   
  41a1a4:	icebp  
  41a1a5:	cmc    
  41a1a6:	push   ss
  41a1a7:	sbb    BYTE PTR [edx+0x7a],dh
  41a1aa:	retf   0x4b9a
  41a1ad:	adc    DWORD PTR [eax],ecx
  41a1af:	mov    ebx,ebp
  41a1b1:	sub    eax,edx
  41a1b3:	das    
  41a1b4:	out    dx,al
  41a1b5:	jne    0x41a1ac
  41a1b7:	leave  
  41a1b8:	popf   
  41a1b9:	sbb    al,0x8c
  41a1bb:	lods   al,BYTE PTR ds:[esi]
  41a1bc:	and    ecx,DWORD PTR [edi]
  41a1be:	shl    esp,cl
  41a1c0:	sbb    edi,DWORD PTR [edx]
  41a1c2:	jmp    0xbd9b:0x3710532c
  41a1c9:	mov    WORD PTR [edx+eiz*4+0xc],?
  41a1cd:	setnp  bh
  41a1d0:	hlt    
  41a1d1:	psubusb mm4,mm4
  41a1d4:	dec    BYTE PTR [ebp+0x432f6f29]
  41a1da:	fsubr  DWORD PTR [ebp+0x13d66585]
  41a1e0:	adc    DWORD PTR [esi+0x2c447e43],esp
  41a1e6:	jge    0x41a245
  41a1e8:	push   esi
  41a1e9:	call   0xf7417375
  41a1ee:	jecxz  0x41a1c3
  41a1f0:	push   ecx
  41a1f1:	aas    
  41a1f2:	xor    eax,0x50be6ad9
  41a1f7:	aad    0x87
  41a1f9:	leave  
  41a1fa:	xchg   ecx,eax
  41a1fb:	xor    DWORD PTR [eax+0x1f8c4fa1],eax
  41a201:	xlat   BYTE PTR ds:[ebx]
  41a202:	push   edi
  41a203:	sbb    DWORD PTR [edi],eax
  41a205:	sbb    al,0x3e
  41a207:	xor    cl,BYTE PTR [edi]
  41a209:	jo     0x41a265
  41a20b:	adc    BYTE PTR [eax],al
  41a20d:	sub    DWORD PTR [edx-0x37baf969],esi
  41a213:	mov    ds:0x6b6c70d1,al
  41a218:	add    DWORD PTR [eax+0x26],eax
  41a21b:	inc    edx
  41a21c:	fisttp QWORD PTR es:[ecx]
  41a21f:	fisub  DWORD PTR ds:0x325d
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	push   ebx
  41a2a1:	inc    edi
  41a2a2:	adc    al,0xaa
  41a2a4:	sub    ebp,DWORD PTR [ebp+0x12bc1816]
  41a2aa:	sbb    BYTE PTR [eax],bl
  41a2ac:	fldenv [ebx+0x5fdb29fa]
  41a2b2:	jecxz  0x41a2f6
  41a2b4:	xchg   ecx,eax
  41a2b5:	(bad)
  41a2b8:	jmp    0x41a262
  41a2ba:	pop    ebp
  41a2bb:	lea    esp,[ebx-0x39c8dfa3]
  41a2c1:	jbe    0x41a281
  41a2c3:	cli    
  41a2c4:	dec    eax
  41a2c5:	or     cl,BYTE PTR [edi]
  41a2c7:	clc    
  41a2c8:	fld    DWORD PTR [esi]
  41a2ca:	inc    edx
  41a2cb:	xor    eax,0x3109db98
  41a2d0:	jecxz  0x41a2f0
  41a2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d3:	das    
  41a2d4:	dec    ebp
  41a2d5:	fistp  QWORD PTR [esi]
  41a2d7:	mov    ebx,edi
  41a2d9:	icebp  
  41a2da:	addr16 jae 0x41a31c
  41a2dd:	(bad)  
  41a2df:	jecxz  0x41a337
  41a2e1:	dec    esp
  41a2e2:	xchg   edx,eax
  41a2e3:	repz js 0x41a2c0
  41a2e6:	arpl   WORD PTR [eax-0x48fd24e0],dx
  41a2ec:	pop    esi
  41a2ed:	mov    ecx,DWORD PTR [edi+0x40364ff6]
  41a2f3:	fisttp WORD PTR [esi+0x51]
  41a2f6:	sbb    BYTE PTR [esp+ebx*8+0x68],cl
  41a2fa:	cmp    al,0x69
  41a2fc:	lods   eax,DWORD PTR ds:[esi]
  41a2fd:	arpl   WORD PTR [edx+0x3c20fb04],ax
  41a303:	mov    ch,0x5e
  41a305:	repz sbb cl,BYTE PTR ds:0xe1d3eeb8
  41a30c:	lds    edi,FWORD PTR [edi+0x5c19b081]
  41a312:	bound  esp,QWORD PTR [edi+0x36]
  41a315:	arpl   WORD PTR [ebp*2+0x5e54302b],si
  41a31c:	pop    esi
  41a31d:	xchg   BYTE PTR [eax-0x18cf8a7b],dl
  41a323:	bound  edx,QWORD PTR [edi+0x8]
  41a326:	sbb    eax,ebp
  41a328:	push   ecx
  41a329:	mov    BYTE PTR [edx],0xe8
  41a32c:	xchg   esp,eax
  41a32d:	(bad)  
  41a32e:	in     al,0xac
  41a330:	pop    esi
  41a331:	outs   dx,DWORD PTR ds:[esi]
  41a332:	cwde   
  41a333:	mov    eax,ds:0xa5d42586
  41a338:	add    ch,BYTE PTR [edi-0x32]
  41a33b:	xchg   esp,eax
  41a33c:	and    DWORD PTR [esi-0x150bda81],ebp
  41a342:	pop    ds
  41a343:	mov    edi,0x7edf7269
  41a348:	push   ebp
  41a349:	jbe    0x41a300
  41a34b:	cmp    eax,0x448e8a64
  41a350:	call   0xfe4c:0x524f83d1
  41a357:	retf   
  41a358:	adc    BYTE PTR [edx-0x3872096e],cl
  41a35e:	stos   DWORD PTR es:[edi],eax
  41a35f:	jg     0x41a3a3
  41a361:	pushf  
  41a362:	xchg   ebx,eax
  41a363:	mov    ch,0x54
  41a365:	pop    ebp
  41a366:	add    ebx,DWORD PTR [edi-0x144765b2]
  41a36c:	out    0xa0,eax
  41a36e:	xor    eax,0x7272da5f
  41a373:	jecxz  0x41a32b
  41a375:	bound  ebp,QWORD PTR [edi-0x759ff4a3]
  41a37b:	fucomi st,st(5)
  41a37d:	mov    BYTE PTR [edx],ah
  41a37f:	mov    eax,ds:0xf7797e7d
  41a384:	(bad)  
  41a385:	xchg   ebx,eax
  41a386:	rcr    dl,cl
  41a388:	outs   dx,BYTE PTR ds:[esi]
  41a389:	dec    edi
  41a38a:	pop    bx
  41a38c:	mov    edx,0x6237cec7
  41a391:	adc    ecx,DWORD PTR [ebx-0x72f60d83]
  41a397:	dec    esi
  41a398:	mov    cl,0x9a
  41a39a:	(bad)  
  41a39b:	jnp    0x41a35d
  41a39d:	enter  0xc2d,0x65
  41a3a1:	adc    al,0xf
  41a3a3:	into   
  41a3a4:	mov    ebp,0x9d132e8b
  41a3a9:	jecxz  0x41a401
  41a3ab:	push   ecx
  41a3ac:	mov    ebp,0xdbb39ebc
  41a3b1:	xchg   BYTE PTR [edi+ebp*1-0x653c1443],bl
  41a3b8:	scas   eax,DWORD PTR es:[edi]
  41a3b9:	jae    0x41a35a
  41a3bb:	fsub   st,st(3)
  41a3bd:	in     eax,dx
  41a3be:	out    0x66,al
  41a3c0:	mov    ch,0xb1
  41a3c2:	stc    
  41a3c3:	inc    bp
  41a3c5:	inc    ebp
  41a3c6:	in     eax,0x4e
  41a3c8:	in     al,0x9f
  41a3ca:	push   ebx
  41a3cb:	(bad)  
  41a3cc:	rol    BYTE PTR [edi+0x38869dc2],1
  41a3d2:	call   0x197a:0x92ebd862
  41a3d9:	lods   al,BYTE PTR ds:[esi]
  41a3da:	cli    
  41a3db:	in     al,dx
  41a3dc:	cmp    DWORD PTR [esi],eax
  41a3de:	nop
  41a3df:	in     al,dx
  41a3e0:	test   al,0xa
  41a3e2:	inc    esp
  41a3e3:	xchg   esp,eax
  41a3e4:	adc    edx,DWORD PTR [ecx-0x44]
  41a3e7:	pop    eax
  41a3e8:	adc    ah,BYTE PTR [edi+0x5b]
  41a3eb:	xor    esp,eax
  41a3ed:	ins    BYTE PTR es:[edi],dx
  41a3ee:	mov    bh,0x97
  41a3f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3f1:	pop    eax
  41a3f2:	repnz sbb eax,0x7ba1f356
  41a3f8:	mov    cl,0x95
  41a3fa:	pushf  
  41a3fb:	xor    ebp,DWORD PTR [eax+0x6e5cad5f]
  41a401:	cdq    
  41a402:	bound  ebx,QWORD PTR [edx+0x56]
  41a405:	cs into 
  41a407:	ror    DWORD PTR [edx],cl
  41a409:	pusha  
  41a40a:	xor    BYTE PTR [ecx-0x2f],dh
  41a40d:	mov    bl,0x38
  41a40f:	jmp    0x41a423
  41a411:	sti    
  41a412:	cmove  ebx,DWORD PTR [esi+0x460bd85c]
  41a419:	add    edi,DWORD PTR [esp+ebx*2]
  41a41c:	jnp    0x41a44c
  41a41e:	lods   al,BYTE PTR ds:[esi]
  41a41f:	adc    DWORD PTR [ebp+edx*2+0x42],ebx
  41a423:	cdq    
  41a424:	add    ah,al
  41a426:	aas    
  41a427:	xchg   edi,eax
  41a428:	push   ebp
  41a429:	pop    ds
  41a42a:	xchg   esp,eax
  41a42b:	inc    edx
  41a42c:	xchg   esp,eax
  41a42d:	xor    ch,BYTE PTR [eax+0x70]
  41a430:	jmp    0x60a8:0xc5f11f6c
  41a437:	xlat   BYTE PTR ds:[ebx]
  41a438:	int    0xe0
  41a43a:	jg     0x41a4b9
  41a43c:	or     esp,edi
  41a43e:	lods   al,BYTE PTR ds:[esi]
  41a43f:	or     esp,DWORD PTR ds:0x2776e61c
  41a445:	ret    0x6b26
  41a448:	js     0x41a4a1
  41a44a:	jno    0x41a45a
  41a44c:	inc    edx
  41a44d:	rol    esp,0xe0
  41a450:	xor    edx,DWORD PTR [esi-0x1b]
  41a453:	or     BYTE PTR [ebp-0x12],0xe
  41a457:	or     cl,cl
  41a459:	pop    ebp
  41a45a:	pop    es
  41a45b:	jle    0x41a3df
  41a45d:	mov    esp,0x8f998a91
  41a462:	fs aaa 
  41a464:	nop
  41a465:	int    0x64
  41a467:	push   esp
  41a468:	inc    edx
  41a469:	dec    esi
  41a46a:	imul   ebp,DWORD PTR [ecx+0x650bcc50],0xffffffac
  41a471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a472:	aam    0xaa
  41a474:	inc    esp
  41a475:	xchg   esi,eax
  41a476:	pop    ds
  41a477:	xchg   edx,eax
  41a478:	dec    edi
  41a479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47a:	pop    ss
  41a47b:	and    eax,0x68566309
  41a480:	add    ch,BYTE PTR [eax-0x5c]
  41a483:	mov    eax,ds:0x45f04018
  41a488:	sub    al,0x76
  41a48a:	jmp    0x8f9af10c
  41a48f:	adc    al,0xf2
  41a491:	pop    edi
  41a492:	ja     0x41a4ce
  41a494:	cli    
  41a495:	ret    
  41a496:	inc    ecx
  41a497:	push   0xd1517887
  41a49c:	push   0x7e
  41a49e:	dec    edi
  41a49f:	into   
  41a4a0:	push   ebp
  41a4a1:	xor    BYTE PTR [ebp+0x1b7bbeea],bl
  41a4a7:	ror    ch,1
  41a4a9:	jmp    0x41a43e
  41a4ab:	cmp    edi,edi
  41a4ad:	int    0x7d
  41a4af:	fcom   DWORD PTR [eax]
  41a4b1:	mov    ebp,0xda846b1c
  41a4b6:	(bad)  
  41a4b7:	xor    al,0xda
  41a4b9:	jns    0x41a4ba
  41a4bb:	or     BYTE PTR [ebp+ebp*4-0x1ecc9b5d],bh
  41a4c2:	fcomp  DWORD PTR [ebx-0x26bbe99]
  41a4c8:	shl    bl,cl
  41a4ca:	pop    ebp
  41a4cb:	jbe    0x41a542
  41a4cd:	add    al,0x7a
  41a4cf:	dec    esi
  41a4d0:	mov    dl,0x52
  41a4d2:	and    ecx,DWORD PTR [eax+0x77]
  41a4d5:	pop    eax
  41a4d6:	sar    BYTE PTR [esi+edx*2],0x13
  41a4da:	push   ebp
  41a4db:	retf   
  41a4dc:	scas   al,BYTE PTR es:[edi]
  41a4dd:	mov    cl,0xb7
  41a4df:	retf   0x15a4
  41a4e2:	jmp    0x41a4a9
  41a4e4:	mov    bh,0x9d
  41a4e6:	mov    edx,0x13677fa6
  41a4eb:	aas    
  41a4ec:	ins    DWORD PTR es:[edi],dx
  41a4ed:	xor    esi,ecx
  41a4ef:	pop    ds
  41a4f0:	cmp    eax,0xbc714605
  41a4f5:	scas   al,BYTE PTR es:[edi]
  41a4f6:	mov    eax,0x207f2acc
  41a4fb:	xlat   BYTE PTR ds:[ebx]
  41a4fc:	(bad)  
  41a4fd:	sub    DWORD PTR [ebx],ebp
  41a4ff:	mov    ds:0x99a41e02,eax
  41a504:	shl    BYTE PTR [edx],0x7a
  41a507:	mov    ah,0xdd
  41a509:	push   ss
  41a50a:	fisubr DWORD PTR [edx+0x42]
  41a50d:	cmp    DWORD PTR [ebx],edi
  41a50f:	push   es
  41a510:	or     DWORD PTR [ebx],ecx
  41a512:	jo     0x41a498
  41a514:	sub    eax,0xbbf1bafd
  41a519:	cmp    eax,0x74fbb641
  41a51e:	pop    ds
  41a51f:	mov    bh,0x75
  41a521:	cld    
  41a522:	aaa    
  41a523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a524:	mov    ch,0x26
  41a526:	add    edi,DWORD PTR [edi+0x3bf2870]
  41a52c:	pop    edx
  41a52d:	and    bl,BYTE PTR [ebx]
  41a52f:	jns    0x41a525
  41a531:	push   ebx
  41a532:	mov    cl,0xa1
  41a534:	xchg   DWORD PTR [esi-0x756d105f],ebp
  41a53a:	mov    esi,0x4fe631e6
  41a53f:	ins    DWORD PTR es:[edi],dx
  41a540:	jp     0x41a50d
  41a542:	call   0xdb93929d
  41a547:	xor    al,0xa0
  41a549:	leave  
  41a54a:	int    0x62
  41a54c:	or     DWORD PTR [eax],0x79
  41a54f:	jno    0x41a511
  41a551:	dec    ebx
  41a552:	das    
  41a553:	xchg   BYTE PTR ds:0x49f8bf40,al
  41a559:	sahf   
  41a55a:	pop    es
  41a55b:	les    edx,FWORD PTR [ebx]
  41a55d:	in     eax,0xc7
  41a55f:	cdq    
  41a560:	es inc ebx
  41a562:	or     al,0xa
  41a564:	outs   dx,DWORD PTR ds:[esi]
  41a565:	outs   dx,BYTE PTR ds:[esi]
  41a566:	jp     0x41a4f2
  41a568:	sub    al,0x22
  41a56a:	xchg   ecx,eax
  41a56b:	or     DWORD PTR [edi],edx
  41a56d:	loopne 0x41a5e6
  41a56f:	in     eax,dx
  41a570:	dec    ecx
  41a572:	and    edx,edx
  41a574:	lods   al,BYTE PTR ds:[esi]
  41a575:	xor    al,0x48
  41a577:	sbb    eax,0x12ad52d7
  41a57c:	rcr    DWORD PTR [ebx],cl
  41a57e:	ins    DWORD PTR es:[edi],dx
  41a57f:	xlat   BYTE PTR ds:[ebx]
  41a580:	pop    edx
  41a581:	dec    esp
  41a582:	xchg   edi,eax
  41a583:	aad    0xb9
  41a585:	jae    0x41a5fb
  41a587:	ret    0x9283
  41a58a:	mov    DWORD PTR [edx],edi
  41a58c:	push   esi
  41a58d:	add    ecx,DWORD PTR [edx+ebp*1+0x3b]
  41a591:	xor    BYTE PTR [edx-0x5c5bb94f],cl
  41a597:	dec    eax
  41a598:	push   cs
  41a599:	fild   WORD PTR [ecx]
  41a59b:	adc    DWORD PTR es:[esi+0x34],0xb6812410
  41a5a3:	dec    ebx
  41a5a4:	mov    ecx,0x844c9327
  41a5a9:	mov    dh,0xe2
  41a5ab:	popf   
  41a5ac:	mov    ebx,0xf9ce2381
  41a5b1:	ja     0x41a5e5
  41a5b3:	cwde   
  41a5b4:	not    BYTE PTR [edx+ecx*8]
  41a5b7:	cwde   
  41a5b8:	mov    eax,ds:0xf621413a
  41a5bd:	and    al,0x28
  41a5bf:	(bad)  
  41a5c0:	jmp    0xdf0d6a23
  41a5c5:	and    al,ah
  41a5c7:	test   edx,esp
  41a5c9:	(bad)  
  41a5ca:	jns    0x41a633
  41a5cc:	scas   al,BYTE PTR es:[edi]
  41a5cd:	add    al,BYTE PTR [edx]
  41a5cf:	mov    esp,0xd28f8169
  41a5d4:	inc    ebx
  41a5d5:	and    dh,0x16
  41a5d8:	mov    cl,0x8a
  41a5da:	mov    edx,0xe65ddd3c
  41a5df:	sbb    al,0xbe
  41a5e1:	sub    al,dh
  41a5e3:	sahf   
  41a5e4:	int3   
  41a5e5:	lods   eax,DWORD PTR ds:[esi]
  41a5e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5e7:	jge    0x41a5b3
  41a5e9:	addr16 enter 0x7a10,0x61
  41a5ee:	jecxz  0x41a5e5
  41a5f0:	dec    ebp
  41a5f1:	in     eax,0xbe
  41a5f3:	retf   0x627d
  41a5f6:	add    al,0x4e
  41a5f8:	cwde   
  41a5f9:	mov    ecx,0x8dc3d174
  41a5fe:	cmc    
  41a5ff:	aam    0xac
  41a601:	das    
  41a602:	mov    dh,0xd0
  41a604:	jmp    0xb56b:0x21012ee8
  41a60b:	xchg   esp,eax
  41a60c:	sub    DWORD PTR [ebx],ebp
  41a60e:	mov    edi,0xaaeb481a
  41a613:	pusha  
  41a614:	(bad)  
  41a615:	test   eax,0xb531a695
  41a61a:	sbb    ebp,DWORD PTR [edx-0x457700a8]
  41a620:	arpl   WORD PTR [ebx],ax
  41a622:	xchg   ecx,eax
  41a623:	ret    0xb142
  41a626:	int3   
  41a627:	mov    eax,0x50d64de8
  41a62c:	inc    BYTE PTR [edx]
  41a62e:	sbb    eax,0x4829e228
  41a633:	mov    dl,0x9f
  41a635:	stos   BYTE PTR es:[edi],al
  41a636:	push   ebp
  41a637:	sub    eax,0xbb6d334d
  41a63c:	out    0x15,al
  41a63e:	stc    
  41a63f:	push   0x40
  41a641:	jae    0x41a6bd
  41a643:	out    0x62,eax
  41a645:	es in  eax,0xad
  41a648:	push   ebp
  41a649:	fbld   TBYTE PTR [ecx+edx*1]
  41a64c:	or     eax,0xfbcbf174
  41a651:	mov    edx,0x16150952
  41a656:	dec    ecx
  41a657:	xchg   edi,eax
  41a658:	int    0x9c
  41a65a:	mov    dh,0x75
  41a65c:	jbe    0x41a6db
  41a65e:	sub    eax,ecx
  41a660:	mov    ecx,DWORD PTR [esp+0x50]
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x42206c
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	into   
  41a749:	fst    QWORD PTR [edi-0x56]
  41a74c:	iret   
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1+0x50a91818],bh
  41a756:	adc    eax,0x3afb727
  41a75b:	dec    DWORD PTR [edi+eax*2+0x2e]
  41a75f:	mov    bh,0x28
  41a761:	pusha  
  41a762:	xor    BYTE PTR [ecx-0x4f],0xa7
  41a766:	pop    esi
  41a767:	in     eax,dx
  41a768:	pop    esi
  41a769:	out    dx,al
  41a76a:	xchg   ecx,eax
  41a76b:	pop    edi
  41a76c:	js     0x41a7c4
  41a76e:	hlt    
  41a76f:	leave  
  41a770:	data16 aad 0x80
  41a773:	call   0x92f9:0xbf05e27a
  41a77a:	imul   ebp,DWORD PTR [ebp-0x49],0x17
  41a77e:	dec    ebx
  41a77f:	dec    edi
  41a780:	adc    bh,bh
  41a782:	inc    edx
  41a783:	mov    WORD PTR [eax-0x10],?
  41a786:	dec    ecx
  41a787:	mov    al,ds:0x9a42191d
  41a78c:	adc    dh,dh
  41a78e:	(bad)  
  41a790:	sbb    ah,bl
  41a792:	mov    eax,ds:0x499e4f0a
  41a797:	push   ecx
  41a798:	test   BYTE PTR [edx+0x1b577c3c],al
  41a79e:	repz addr16 mov bh,0xe4
  41a7a2:	std    
  41a7a3:	fdivrp st(4),st
  41a7a5:	mov    eax,ds:0xd6c27eb8
  41a7aa:	lods   al,BYTE PTR ds:[esi]
  41a7ab:	add    BYTE PTR [ebx],bl
  41a7ad:	xor    BYTE PTR [ecx],ch
  41a7af:	(bad)  
  41a7b0:	int    0xe5
  41a7b2:	ret    0x4aec
  41a7b5:	imul   si,WORD PTR [edx-0x1b1b48a9],0x8e30
  41a7be:	push   0x44
  41a7c0:	push   es
  41a7c1:	mov    eax,ds:0xeb88333c
  41a7c6:	(bad)
  41a7ca:	dec    edx
  41a7cb:	dec    esp
  41a7cc:	jp     0x41a76d
  41a7ce:	nop
  41a7cf:	lods   eax,DWORD PTR ds:[esi]
  41a7d0:	fcomp  st(2)
  41a7d2:	or     ch,BYTE PTR [esi+0x27]
  41a7d5:	sub    ebp,edx
  41a7d7:	jg     0x41a77d
  41a7d9:	pop    ss
  41a7da:	lea    esi,[edi-0x2e0f4584]
  41a7e0:	mov    eax,ds:0x37e98b45
  41a7e5:	sub    al,0x48
  41a7e7:	ret    
  41a7e8:	jg     0x41a772
  41a7ea:	loopne 0x41a864
  41a7ec:	and    bl,dh
  41a7ee:	cmp    eax,0x762edff1
  41a7f3:	inc    edi
  41a7f4:	lahf   
  41a7f5:	xor    DWORD PTR [esi],0x6cad257a
  41a7fb:	je     0x41a839
  41a7fd:	outs   dx,BYTE PTR ds:[esi]
  41a7fe:	stos   BYTE PTR es:[edi],al
  41a7ff:	dec    esi
  41a800:	cld    
  41a801:	push   edi
  41a802:	inc    ebp
  41a803:	das    
  41a804:	inc    esi
  41a805:	jnp    0x41a879
  41a807:	mov    esp,0x99186629
  41a80c:	add    al,dh
  41a80e:	shl    DWORD PTR [edi-0x7],0xe7
  41a812:	xor    eax,0xb9513d54
  41a817:	cmp    edx,eax
  41a819:	pop    esi
  41a81a:	outs   dx,DWORD PTR ds:[si]
  41a81c:	idiv   ebx
  41a81e:	and    esp,DWORD PTR [ebp-0x41b7d61d]
  41a824:	iret   
  41a825:	adc    BYTE PTR [edi-0x27],cl
  41a828:	sbb    al,0xb5
  41a82a:	aad    0xe
  41a82c:	retf   
  41a82d:	(bad)  
  41a82e:	or     DWORD PTR [eax-0x341b2485],ebp
  41a834:	mov    ch,0xb1
  41a836:	ja     0x41a84a
  41a838:	xor    eax,esi
  41a83a:	lods   al,BYTE PTR ds:[esi]
  41a83b:	add    dl,dl
  41a83d:	pop    ecx
  41a83e:	rol    BYTE PTR ds:0x83d91a9,cl
  41a844:	test   eax,0x3307b9f4
  41a849:	mov    esi,0x12b1bb12
  41a84e:	jns    0x41a86e
  41a850:	and    al,0xd1
  41a852:	js     0x41a7dc
  41a854:	jecxz  0x41a85f
  41a856:	and    eax,0x61135777
  41a85b:	lahf   
  41a85c:	aas    
  41a85d:	sub    bl,cl
  41a85f:	or     al,BYTE PTR [edi-0x7c1783d9]
  41a865:	xor    ebp,DWORD PTR [ecx]
  41a867:	imul   esp,DWORD PTR [esi+0x4ec18c55],0x78
  41a86e:	test   DWORD PTR [ebp-0x80],ecx
  41a871:	popa   
  41a872:	or     ebp,DWORD PTR [ecx+0x75]
  41a875:	and    ebx,DWORD PTR [edi-0x2]
  41a878:	clc    
  41a879:	add    esp,DWORD PTR [esi]
  41a87b:	inc    esi
  41a87c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a87d:	adc    edx,DWORD PTR [ebp+0x519cc26f]
  41a883:	lahf   
  41a884:	hlt    
  41a885:	xchg   dh,ah
  41a887:	adc    ebp,DWORD PTR [edx+esi*2-0x54]
  41a88b:	scas   eax,DWORD PTR es:[edi]
  41a88c:	mov    DWORD PTR [ebx-0x5c],edx
  41a88f:	(bad)  [esp+eiz*8-0x51]
  41a893:	push   ss
  41a894:	cmp    bh,BYTE PTR [esi+0x56aa26d4]
  41a89a:	(bad)  
  41a89c:	mov    bh,al
  41a89e:	and    BYTE PTR [eax-0x2ea24a9b],al
  41a8a4:	ja     0x41a881
  41a8a6:	jmp    ecx
  41a8a8:	outs   dx,DWORD PTR ds:[esi]
  41a8a9:	jmp    0x41a92a
  41a8ab:	nop
  41a8ac:	jbe    0x41a879
  41a8ae:	push   ebx
  41a8af:	pop    edi
  41a8b0:	test   al,0x38
  41a8b2:	je     0x41a8d6
  41a8b4:	sub    edi,ebp
  41a8b6:	imul   ebp,DWORD PTR [edx-0x67cd33c3],0xfffffff2
  41a8bd:	pop    edi
  41a8be:	in     eax,dx
  41a8bf:	inc    ebp
  41a8c0:	mov    esp,ecx
  41a8c2:	lods   eax,DWORD PTR ds:[esi]
  41a8c3:	pop    ebx
  41a8c4:	push   esi
  41a8c5:	mov    WORD PTR [edx+eax*1+0x537c5b01],ds
  41a8cc:	adc    BYTE PTR [edx-0x186dcb09],0xc5
  41a8d3:	pop    edi
  41a8d4:	mov    al,ds:0xe82f0037
  41a8d9:	(bad)  
  41a8da:	push   edx
  41a8db:	into   
  41a8dc:	mov    esp,0x94301b94
  41a8e1:	dec    esi
  41a8e2:	push   cs
  41a8e3:	in     al,0x26
  41a8e5:	sub    BYTE PTR [ecx-0xe7cdbb8],bl
  41a8eb:	ins    BYTE PTR es:[edi],dx
  41a8ec:	sbb    ebp,esp
  41a8ee:	add    al,0x9c
  41a8f0:	mov    dh,0xc0
  41a8f2:	pop    ecx
  41a8f3:	jns    0x41a930
  41a8f5:	nop
  41a8f6:	or     al,0xad
  41a8f8:	out    0x66,eax
  41a8fa:	leave  
  41a8fb:	mov    ecx,0xa517bb67
  41a900:	lods   al,BYTE PTR ds:[esi]
  41a901:	or     esp,eax
  41a903:	push   ecx
  41a904:	add    al,0xbc
  41a906:	test   eax,0xce3d826f
  41a90b:	and    al,0x88
  41a90d:	mov    bh,0x18
  41a90f:	cmp    BYTE PTR cs:[ecx],0xc3
  41a913:	out    0xbc,eax
  41a915:	inc    DWORD PTR ds:0x978e8124
  41a91b:	(bad)
  41a91e:	outs   dx,BYTE PTR ds:[esi]
  41a91f:	lahf   
  41a920:	mov    DWORD PTR [edi+0x66ff2fe7],esp
  41a926:	cld    
  41a927:	rcr    BYTE PTR [esi+esi*1+0x5d],1
  41a92b:	sub    dl,BYTE PTR [ebx]
  41a92d:	mov    ah,0xc7
  41a92f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a930:	(bad)  [esi-0x14]
  41a933:	jge    0x41a974
  41a935:	cmp    DWORD PTR [edx+0x7f],ebp
  41a938:	cli    
  41a939:	mov    DWORD PTR fs:[ecx-0x4e],edx
  41a93d:	adc    ebx,DWORD PTR [esp+ebx*4+0x3a70de24]
  41a944:	ins    BYTE PTR es:[edi],dx
  41a945:	adc    BYTE PTR [edi+0x68264347],al
  41a94b:	cli    
  41a94c:	sbb    BYTE PTR [eax-0x38],al
  41a94f:	imul   edx,DWORD PTR [esi-0x10],0x40
  41a953:	stos   BYTE PTR es:[edi],al
  41a954:	inc    eax
  41a955:	push   esp
  41a956:	test   DWORD PTR [eax+0x1b],eax
  41a959:	daa    
  41a95a:	test   eax,0xa6c24ada
  41a95f:	es out 0x10,al
  41a962:	and    DWORD PTR [ebp-0x33ba9f3c],ebp
  41a968:	fimul  WORD PTR [esi+0x7f09129c]
  41a96e:	xlat   BYTE PTR ds:[ebx]
  41a96f:	jle    0x41a920
  41a971:	sbb    bh,BYTE PTR [ebp+ebx*8+0x66d9c397]
  41a978:	push   eax
  41a979:	addr16 call 0xd65fbfa8
  41a97f:	rdpmc  
  41a981:	div    bh
  41a983:	ins    DWORD PTR es:[edi],dx
  41a984:	retf   
  41a985:	inc    edi
  41a986:	lock nop
  41a988:	xchg   ecx,eax
  41a989:	neg    BYTE PTR [ebx+0x25]
  41a98c:	dec    ebp
  41a98d:	out    0xac,eax
  41a98f:	fadd   DWORD PTR ds:0x295de0a7
  41a995:	sub    BYTE PTR [edi-0x57206bce],bl
  41a99b:	xchg   ecx,eax
  41a99c:	mov    ch,0xb6
  41a99e:	in     eax,0x86
  41a9a0:	cmp    BYTE PTR [edx+0xde758b3],0x19
  41a9a7:	out    dx,al
  41a9a8:	jo     0x41a9d8
  41a9aa:	dec    eax
  41a9ab:	data16 mov dh,0xd7
  41a9ae:	(bad)  [edx]
  41a9b0:	xor    cl,BYTE PTR [edi-0x3b0a78da]
  41a9b6:	jnp    0x41aa35
  41a9b8:	jne    0x41aa02
  41a9ba:	and    edx,DWORD PTR [edi]
  41a9bc:	pushf  
  41a9bd:	add    BYTE PTR [ebp-0x17],0x9
  41a9c1:	xchg   DWORD PTR [eax+0x7eb0538b],esi
  41a9c7:	jnp    0x41a99d
  41a9c9:	dec    esp
  41a9ca:	push   eax
  41a9cb:	out    0x9a,eax
  41a9cd:	icebp  
  41a9ce:	lock in eax,dx
  41a9d0:	fcmovnb st,st(4)
  41a9d2:	jb     0x41a9f0
  41a9d4:	cmp    eax,esp
  41a9d6:	sub    al,0x86
  41a9d8:	add    BYTE PTR [eax+ebp*8],cl
  41a9db:	test   eax,0x88d4f24
  41a9e0:	add    ch,bh
  41a9e2:	push   ecx
  41a9e3:	cs push 0xffffff9d
  41a9e6:	pop    ss
  41a9e7:	add    al,0x44
  41a9e9:	sub    dh,BYTE PTR [ebx+0x63]
  41a9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ed:	push   esi
  41a9ee:	jne    0x41a9b4
  41a9f0:	mov    ds:0x558d0d5f,eax
  41a9f5:	sbb    al,0x54
  41a9f7:	inc    eax
  41a9f8:	(bad)  
  41a9f9:	fisttp QWORD PTR [edx-0x60abf5bf]
  41a9ff:	push   esp
  41aa00:	cmp    edi,DWORD PTR [ebx-0xf]
  41aa03:	xchg   BYTE PTR [ebp-0x6fe0587a],cl
  41aa09:	or     eax,esp
  41aa0b:	les    ebx,FWORD PTR [ebp+0x68]
  41aa0e:	pop    edx
  41aa0f:	clc    
  41aa10:	mov    edi,0xdcb5858a
  41aa15:	mov    al,0xbf
  41aa17:	xor    edi,edi
  41aa19:	and    cl,dh
  41aa1b:	mov    ah,0x7c
  41aa1d:	fs push ss
  41aa1f:	dec    esi
  41aa20:	pusha  
  41aa21:	aaa    
  41aa22:	pop    ds
  41aa23:	fisttp WORD PTR [eax-0x15d30368]
  41aa29:	push   0x8d3b44d
  41aa2e:	lods   al,BYTE PTR ds:[esi]
  41aa2f:	(bad)  
  41aa30:	lock pop edi
  41aa32:	and    esi,DWORD PTR [edx]
  41aa34:	cwde   
  41aa35:	inc    esp
  41aa36:	iret   
  41aa37:	in     al,dx
  41aa38:	xor    ebp,DWORD PTR [edi]
  41aa3a:	add    eax,0xefbeeb76
  41aa3f:	and    eax,0xfd63191a
  41aa44:	add    DWORD PTR [ecx-0x34a60b15],eax
  41aa4a:	push   esp
  41aa4b:	push   esp
  41aa4c:	dec    edx
  41aa4d:	mov    al,ds:0x634ca4a6
  41aa52:	(bad)  
  41aa53:	fadd   DWORD PTR [edi-0x6b]
  41aa56:	and    eax,0x8e03edc8
  41aa5b:	cmp    BYTE PTR [ebx],ch
  41aa5d:	dec    edx
  41aa5e:	out    0x4e,eax
  41aa60:	inc    edi
  41aa61:	dec    esi
  41aa62:	daa    
  41aa63:	scas   eax,DWORD PTR es:[edi]
  41aa64:	mov    al,ds:0xa3210e69
  41aa69:	xlat   BYTE PTR ds:[ebx]
  41aa6a:	loop   0x41aae4
  41aa6c:	inc    ebp
  41aa6d:	xor    bh,al
  41aa6f:	jb     0x41aa5a
  41aa71:	out    dx,eax
  41aa72:	sub    DWORD PTR [eax+edx*1-0x214bc084],ebp
  41aa79:	inc    ebp
  41aa7a:	rcl    BYTE PTR [edx-0x65],0x4
  41aa7e:	out    dx,al
  41aa7f:	jp     0x41aa8f
  41aa81:	in     al,dx
  41aa82:	dec    esp
  41aa83:	mov    dl,0x2
  41aa85:	pop    esp
  41aa86:	lods   eax,DWORD PTR ds:[esi]
  41aa87:	test   BYTE PTR [ebx+0xe],bh
  41aa8a:	push   cs
  41aa8b:	jl     0x41aaa5
  41aa8d:	ins    BYTE PTR es:[edi],dx
  41aa8e:	push   esp
  41aa8f:	cmp    ah,al
  41aa91:	loop   0x41aaf5
  41aa93:	or     al,0x28
  41aa95:	add    edx,DWORD PTR [eax+0x6ba75cc4]
  41aa9b:	sub    eax,0xbbe7a4fd
  41aaa0:	xchg   esi,eax
  41aaa1:	test   al,0x20
  41aaa3:	sbb    eax,0x5fd5ee15
  41aaa8:	add    al,0x0
  41aaaa:	jle    0x41aacc
  41aaac:	add    al,0x9b
  41aaae:	out    0x8c,eax
  41aab0:	inc    eax
  41aab1:	je     0x41aac8
  41aab3:	push   esi
  41aab4:	add    eax,0x3728110f
  41aab9:	mov    bh,0xc
  41aabb:	xor    al,0xfb
  41aabd:	aaa    
  41aabe:	nop
  41aabf:	sbb    ebx,esp
  41aac1:	lods   al,BYTE PTR ds:[esi]
  41aac2:	ins    DWORD PTR es:[edi],dx
  41aac3:	or     eax,0x3b0503b4
  41aac8:	jg     0x41aaa6
  41aaca:	push   eax
  41aacb:	fbstp  TBYTE PTR [ebp+0x24]
  41aace:	adc    edi,DWORD PTR [esi-0x327a7e79]
  41aad4:	and    DWORD PTR [ebx],esi
  41aad6:	mov    fs,ecx
  41aad8:	jecxz  0x41aab7
  41aada:	fcmovnbe st,st(6)
  41aadc:	fwait
  41aadd:	mov    ah,0xbc
  41aadf:	cmp    BYTE PTR [edx],ah
  41aae1:	cdq    
  41aae2:	sub    DWORD PTR [edi+ebx*8+0x4c],edx
  41aae6:	adc    al,0x7d
  41aae8:	mov    ds:0xaa220c6d,al
  41aaed:	scas   eax,DWORD PTR es:[edi]
  41aaee:	push   ebp
  41aaef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaf0:	and    DWORD PTR [eax-0x72],eax
  41aaf3:	fdivr  QWORD PTR [ecx]
  41aaf5:	push   ebx
  41aaf6:	ss inc edi
  41aaf8:	inc    eax
  41aaf9:	jo     0x41ab1e
  41aafb:	cmp    eax,0x8bdcf775
  41ab00:	sub    eax,DWORD PTR [ecx-0x2c]
  41ab03:	mov    edx,ebp
  41ab05:	aad    0x8b
  41ab07:	pop    esp
  41ab08:	and    al,0x34
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x42206c
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x42206c
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax-0x4f3effb4],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1-0x414ee7e8],bh
  41ab67:	lods   al,BYTE PTR ds:[esi]
  41ab68:	xor    DWORD PTR [esi-0x6bba8c8],ecx
  41ab6e:	push   es
  41ab6f:	add    BYTE PTR [edx],dh
  41ab71:	mov    BYTE PTR [eax],dl
  41ab73:	ss sub eax,0x1511dca0
  41ab79:	dec    ecx
  41ab7a:	jg     0x41ab70
  41ab7c:	mov    eax,ds:0xc2b9ca95
  41ab81:	les    esp,FWORD PTR [ecx]
  41ab83:	mov    ds:0xea16124f,eax
  41ab88:	mov    ebx,0x4ce5769a
  41ab8d:	shr    BYTE PTR [ebp-0x39ecda3a],cl
  41ab93:	mov    cl,0xfc
  41ab95:	or     al,BYTE PTR [eax]
  41ab97:	daa    
  41ab98:	sub    ebx,DWORD PTR [ebx]
  41ab9a:	push   edi
  41ab9b:	std    
  41ab9c:	fwait
  41ab9d:	cmp    BYTE PTR [ebp-0x255e7140],al
  41aba3:	inc    ebp
  41aba4:	or     BYTE PTR ds:0x8c512d97,0xd
  41abab:	stos   DWORD PTR es:[edi],eax
  41abac:	dec    esi
  41abad:	mov    dl,0x50
  41abaf:	hlt    
  41abb0:	jne    0x41ab79
  41abb2:	mov    esp,0x8c019f06
  41abb7:	lods   al,BYTE PTR ds:[esi]
  41abb8:	dec    ebp
  41abb9:	retf   0x60cc
  41abbc:	mov    cl,0x49
  41abbe:	jl     0x41ac17
  41abc0:	mov    esp,0xa78be764
  41abc5:	call   0xa8184e3c
  41abca:	and    eax,0x984a93c9
  41abcf:	pop    esi
  41abd0:	mov    al,0x6b
  41abd2:	mov    ah,0xf4
  41abd4:	and    al,0x81
  41abd6:	cwde   
  41abd7:	jne    0x41ab66
  41abd9:	mov    ds:0xa652bb16,eax
  41abde:	in     al,dx
  41abdf:	dec    esp
  41abe0:	daa    
  41abe1:	sbb    esi,DWORD PTR [eax-0x11]
  41abe4:	enter  0x9a66,0xe1
  41abe8:	cwde   
  41abe9:	in     eax,0x76
  41abeb:	pop    ebp
  41abec:	gs push ss
  41abee:	push   ecx
  41abef:	cmc    
  41abf0:	xchg   ebp,eax
  41abf1:	adc    al,dh
  41abf3:	popa   
  41abf4:	scas   eax,DWORD PTR es:[edi]
  41abf5:	mov    WORD PTR [eax],ds
  41abf7:	in     al,dx
  41abf8:	fldcw  WORD PTR [edi]
  41abfa:	stos   DWORD PTR es:[edi],eax
  41abfb:	jecxz  0x41aba6
  41abfd:	and    DWORD PTR [ebx+0x5838b392],0x9af6d5f4
  41ac07:	sub    DWORD PTR [esi-0xa],0xd
  41ac0b:	jmp    0x4db58f43
  41ac10:	add    eax,0xe609311f
  41ac15:	push   edi
  41ac16:	ins    BYTE PTR es:[edi],dx
  41ac17:	push   ebx
  41ac18:	call   0xc12a0973
  41ac1d:	pop    ebp
  41ac1e:	add    DWORD PTR [esp+eax*2+0x64],ebp
  41ac22:	cmp    esp,0xeed5a7c4
  41ac28:	cmp    DWORD PTR [ebx+0x4a8530a],ebx
  41ac2e:	repz add al,0xed
  41ac31:	push   es
  41ac32:	fbld   TBYTE PTR [edx+0x37]
  41ac35:	cdq    
  41ac36:	jmp    0xc858b2b3
  41ac3b:	div    cl
  41ac3d:	jno    0x41ac7d
  41ac3f:	js     0x41ac55
  41ac41:	lods   eax,DWORD PTR ds:[esi]
  41ac42:	clc    
  41ac43:	jae    0x41ac21
  41ac45:	std    
  41ac46:	xor    DWORD PTR [edi],esi
  41ac48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac49:	pop    edi
  41ac4a:	mov    esi,0xf264d11f
  41ac4f:	jae    0x41ac79
  41ac51:	hlt    
  41ac52:	dec    esi
  41ac53:	mov    ss,WORD PTR [edx]
  41ac55:	push   cs
  41ac56:	int3   
  41ac57:	mov    esp,0xf8a69eb4
  41ac5c:	jge    0x41ac80
  41ac5e:	mov    ds:0xd9a988e1,eax
  41ac63:	mov    WORD PTR [ebx],ss
  41ac65:	daa    
  41ac66:	stos   BYTE PTR es:[edi],al
  41ac67:	daa    
  41ac68:	inc    esi
  41ac69:	cmp    bl,BYTE PTR [edi+0x1e]
  41ac6c:	and    edi,eax
  41ac6e:	fsqrt  
  41ac70:	sub    eax,0x30cb20f6
  41ac75:	mov    dl,0xec
  41ac77:	push   ecx
  41ac78:	sbb    ebp,DWORD PTR [edx]
  41ac7a:	arpl   sp,dx
  41ac7c:	mov    ?,WORD PTR [eax-0x97a2702]
  41ac82:	iret   
  41ac83:	leave  
  41ac84:	mov    ebp,0x63a9f36e
  41ac89:	(bad)  
  41ac8a:	mov    eax,0xfd1701c1
  41ac8f:	push   ss
  41ac90:	jmp    0x41aca8
  41ac92:	(bad)
  41ac97:	mov    ecx,0x23d54e68
  41ac9c:	and    eax,0xff65b76e
  41aca1:	dec    esi
  41aca2:	sbb    DWORD PTR [edi+0x3d],ecx
  41aca5:	sub    BYTE PTR [edi-0x47],dh
  41aca8:	pop    ds
  41aca9:	push   edx
  41acaa:	jnp    0x41acd4
  41acac:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41acae:	es mov ebx,0xcb869a91
  41acb4:	popa   
  41acb5:	mov    ch,0xb
  41acb7:	mov    cl,0x14
  41acb9:	hlt    
  41acba:	imul   esi,DWORD PTR [edx+0x1ded7d25],0x1ac0a474
  41acc4:	mov    dl,0xd9
  41acc6:	xor    esi,DWORD PTR [edi+0x1a3b0d0b]
  41accc:	fbld   TBYTE PTR [ebx+0x28906255]
  41acd2:	jae    0x41acbc
  41acd4:	inc    ebp
  41acd5:	dec    edx
  41acd6:	push   ebx
  41acd7:	cmp    DWORD PTR [eax],ebx
  41acd9:	shl    DWORD PTR [edx+ebp*2+0x27],cl
  41acdd:	or     esp,ebp
  41acdf:	xor    BYTE PTR [ebx],0x15
  41ace2:	jb     0x41ad62
  41ace4:	mov    ds:0x8938813c,al
  41ace9:	add    ch,bl
  41aceb:	jmp    0xc7b4:0x47992c3d
  41acf2:	mov    ebp,0x1794b7d8
  41acf7:	or     eax,0x3b700c80
  41acfc:	lea    edi,[ebx]
  41acfe:	in     eax,0xf
  41ad00:	jns    0x41ad3e
  41ad02:	fs cmp al,0xef
  41ad05:	rcr    DWORD PTR [ebx+0x7c],1
  41ad08:	popa   
  41ad09:	enter  0xa04f,0xa2
  41ad0d:	xchg   ebp,eax
  41ad0e:	test   eax,0x2c99500f
  41ad13:	inc    BYTE PTR [ebx-0x2976d220]
  41ad19:	js     0x41acfb
  41ad1b:	neg    ebp
  41ad1d:	and    ebx,DWORD PTR [esi+0x62]
  41ad20:	mov    al,ds:0xe7767233
  41ad25:	bound  esp,QWORD PTR [edx]
  41ad27:	fisttp WORD PTR [edi-0x60e15f16]
  41ad2d:	test   DWORD PTR [edx+0x40697a7f],ecx
  41ad33:	jns    0x41ad28
  41ad35:	fwait
  41ad36:	pop    esp
  41ad37:	xor    DWORD PTR [ecx-0x78],0x45
  41ad3b:	ins    DWORD PTR es:[edi],dx
  41ad3c:	popa   
  41ad3d:	pop    esi
  41ad3e:	jae    0x41ad5e
  41ad40:	mov    ebx,0x404240e
  41ad45:	bsf    ecx,DWORD PTR ds:0xeb2721c7
  41ad4c:	pop    esp
  41ad4d:	lods   eax,DWORD PTR ds:[esi]
  41ad4e:	xor    bl,dh
  41ad50:	sub    ecx,esi
  41ad52:	add    ah,BYTE PTR [esi+edx*4-0x25]
  41ad56:	stos   BYTE PTR es:[edi],al
  41ad57:	fild   QWORD PTR [ecx+esi*2]
  41ad5a:	pop    edi
  41ad5b:	stos   BYTE PTR es:[edi],al
  41ad5c:	sub    bl,cl
  41ad5e:	mov    ah,0x74
  41ad60:	xor    al,0x85
  41ad62:	hlt    
  41ad63:	and    BYTE PTR [edi+0x11],dh
  41ad66:	or     eax,0x79d1f687
  41ad6b:	jbe    0x41acf6
  41ad6d:	sub    al,0x3b
  41ad6f:	xchg   edi,eax
  41ad70:	jne    0x41ad0d
  41ad72:	pop    es
  41ad73:	in     eax,0x62
  41ad75:	xor    BYTE PTR [edi-0x79],dl
  41ad78:	popf   
  41ad79:	fistp  WORD PTR ds:0x170dec5
  41ad7f:	and    edx,DWORD PTR [eax]
  41ad81:	add    al,0x24
  41ad83:	jg     0x41ad29
  41ad85:	dec    eax
  41ad86:	in     al,0x1a
  41ad88:	lds    esi,FWORD PTR [ecx-0x33e2f927]
  41ad8e:	inc    edx
  41ad8f:	dec    eax
  41ad90:	iret   
  41ad91:	cmp    BYTE PTR [ebp+0x64],bl
  41ad94:	clc    
  41ad95:	inc    ebp
  41ad96:	leave  
  41ad97:	dec    edi
  41ad98:	xor    BYTE PTR [eax],bh
  41ad9a:	adc    DWORD PTR [ecx+esi*4-0x45],0x46bdc5bb
  41ada2:	bound  ecx,QWORD PTR [ecx+0x1b]
  41ada5:	test   al,0x5b
  41ada7:	mov    ch,0xb8
  41ada9:	sbb    eax,0x19640916
  41adae:	nop
  41adaf:	fdivr  st(2),st
  41adb1:	sbb    al,0xc8
  41adb3:	mov    esp,0xb8e5b26e
  41adb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb9:	mov    ch,0x2a
  41adbb:	push   es
  41adbc:	loope  0x41ade9
  41adbe:	push   ecx
  41adbf:	jp     0x41ad60
  41adc1:	mov    WORD PTR [eax+0x78],?
  41adc4:	pop    es
  41adc5:	dec    edx
  41adc6:	sub    al,al
  41adc8:	cmp    cl,al
  41adca:	sar    DWORD PTR [eax],cl
  41adcc:	and    ebp,esi
  41adce:	pop    ebx
  41adcf:	mov    BYTE PTR [eax],dl
  41add1:	pop    ecx
  41add2:	cwde   
  41add3:	mov    dl,0x11
  41add5:	mov    ebp,0x6c0dabc
  41adda:	mov    ch,0xd3
  41addc:	push   esp
  41addd:	test   DWORD PTR [ebp+0x69],edx
  41ade0:	frstor [ecx+0x30]
  41ade3:	mov    dl,0x71
  41ade5:	jecxz  0x41ade3
  41ade7:	push   es
  41ade8:	jmp    0x851e3d32
  41aded:	addr16 jmp 0x41ad84
  41adf0:	es fsubrp st(0),st
  41adf3:	stos   BYTE PTR es:[edi],al
  41adf4:	rol    DWORD PTR ds:0x28d34bd0,0xfb
  41adfb:	idiv   al
  41adfd:	inc    ebx
  41adfe:	dec    ebp
  41adff:	mov    al,0xc5
  41ae01:	ret    
  41ae02:	inc    edi
  41ae03:	add    DWORD PTR [ebx-0x1970bca9],esi
  41ae09:	ins    BYTE PTR es:[edi],dx
  41ae0a:	arpl   sp,bx
  41ae0c:	adc    ch,ah
  41ae0e:	sub    DWORD PTR [edx+eiz*1+0x54],0xffffffdc
  41ae13:	jo     0x41ae3f
  41ae15:	lahf   
  41ae16:	sub    DWORD PTR [ebx+0x1b],eax
  41ae19:	je     0x41ae11
  41ae1b:	popa   
  41ae1c:	scas   eax,DWORD PTR es:[edi]
  41ae1d:	add    DWORD PTR [ebp+0x1a],esp
  41ae20:	jae    0x41ada5
  41ae22:	push   0x6579429
  41ae27:	or     edi,DWORD PTR [ebp+ecx*4-0x74]
  41ae2b:	cmp    DWORD PTR [edi-0x11a5072c],ebx
  41ae31:	nop
  41ae32:	fst    DWORD PTR [ebp-0x73934dea]
  41ae38:	sti    
  41ae39:	xchg   esp,eax
  41ae3a:	adc    dh,BYTE PTR [eax]
  41ae3c:	inc    eax
  41ae3d:	sbb    DWORD PTR [ebx+0x4975244e],ebx
  41ae43:	mov    eax,0xe0e82f19
  41ae48:	test   DWORD PTR [edi-0x33de9a68],ecx
  41ae4e:	mov    edx,0xaf5c8de5
  41ae53:	fsub   DWORD PTR [ecx+0x4b]
  41ae56:	xor    ah,BYTE PTR [eax]
  41ae58:	std    
  41ae59:	pop    ebx
  41ae5a:	push   esp
  41ae5b:	sub    esp,DWORD PTR [edx+0x3a05c96b]
  41ae61:	dec    eax
  41ae62:	mov    al,ds:0x2b0553b7
  41ae67:	jp     0x41aeb6
  41ae69:	in     eax,dx
  41ae6a:	jbe    0x41ae7d
  41ae6c:	ss das 
  41ae6e:	push   0x10
  41ae70:	les    esi,FWORD PTR [eax-0x314e0076]
  41ae76:	push   ds
  41ae77:	into   
  41ae78:	xlat   BYTE PTR ds:[ebx]
  41ae79:	pop    ecx
  41ae7a:	shl    DWORD PTR [eax],1
  41ae7c:	dec    edx
  41ae7d:	ds dec ebx
  41ae7f:	xor    DWORD PTR ds:0x601b31e3,ebx
  41ae85:	jg     0x41ae38
  41ae87:	cs xor al,0xa4
  41ae8a:	add    DWORD PTR [ecx],0x7b2b8a77
  41ae90:	les    edx,FWORD PTR [ebx-0x45ffa186]
  41ae96:	mov    edx,0xcc0420d9
  41ae9b:	retf   
  41ae9c:	mov    eax,ds:0x6232a6a2
  41aea1:	pop    esp
  41aea2:	in     eax,0xc6
  41aea4:	sub    al,0xde
  41aea6:	imul   ecx,DWORD PTR ds:0x4817fbea,0x6ad77594
  41aeb0:	adc    al,0x31
  41aeb2:	cwde   
  41aeb3:	int3   
  41aeb4:	test   DWORD PTR [ebp-0x7d7d6ce2],0x6027914f
  41aebe:	icebp  
  41aebf:	test   bh,dl
  41aec1:	stos   DWORD PTR es:[edi],eax
  41aec2:	xchg   ebp,eax
  41aec3:	xlat   BYTE PTR ds:[ebx]
  41aec4:	rcr    esi,1
  41aec6:	outs   dx,DWORD PTR ds:[esi]
  41aec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec8:	in     al,0x36
  41aeca:	iret   
  41aecb:	cmc    
  41aecc:	sahf   
  41aecd:	or     esp,DWORD PTR [edx+0x5232dab5]
  41aed3:	lods   eax,DWORD PTR ds:[esi]
  41aed4:	shr    DWORD PTR [esi-0x20185c5a],1
  41aeda:	call   0x33ae5bab
  41aedf:	cld    
  41aee0:	pusha  
  41aee1:	xchg   edi,eax
  41aee2:	jge    0x41aec5
  41aee4:	or     al,0xff
  41aee6:	int3   
  41aee7:	fbstp  TBYTE PTR [edx-0x2971ac32]
  41aeed:	leave  
  41aeee:	ret    0x773a
  41aef1:	sbb    BYTE PTR [edx],0x0
  41aef4:	push   ss
  41aef5:	jp     0x41af3c
  41aef7:	jg     0x41aea0
  41aef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aefa:	dec    edi
  41aefb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aefc:	scas   eax,DWORD PTR es:[edi]
  41aefd:	es dec ebp
  41aeff:	stos   BYTE PTR es:[edi],al
  41af00:	mov    WORD PTR [esp+esi*1],?
  41af03:	mov    ds:0x3e62afc0,al
  41af08:	addr16 out 0x87,eax
  41af0b:	popf   
  41af0c:	mov    al,BYTE PTR [esi+edx*4]
  41af0f:	or     ebx,edi
  41af11:	push   es
  41af12:	pop    eax
  41af13:	push   esp
  41af14:	(bad)  
  41af16:	ror    DWORD PTR [edi],1
  41af18:	test   BYTE PTR [edx+ebp*1],al
  41af1b:	add    BYTE PTR [eax],al
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af3b
  41af80:	out    dx,eax
  41af81:	mov    ebp,0x169717b0
  41af86:	sbb    BYTE PTR [edx+edx*1-0x7b07e7e8],bh
  41af8d:	mov    al,ds:0xa84b431
  41af92:	sbb    BYTE PTR [eax+0xb],ch
  41af95:	xor    cl,dh
  41af97:	xchg   ebx,eax
  41af98:	icebp  
  41af99:	shr    DWORD PTR [edx],cl
  41af9b:	inc    ecx
  41af9c:	je     0x41b004
  41af9e:	push   esp
  41af9f:	mov    ebx,0xf5218395
  41afa4:	iret   
  41afa5:	pop    esi
  41afa6:	mov    bl,0x8a
  41afa8:	jnp    0x41b00a
  41afaa:	ret    
  41afab:	cdq    
  41afac:	les    ebp,FWORD PTR [edx+0x6c]
  41afaf:	mov    WORD PTR [ebp+0x580a6955],ds
  41afb5:	data16 test BYTE PTR ds:0x99502fe,0xad
  41afbd:	mov    eax,ds:0x28f23331
  41afc2:	gs in  al,dx
  41afc4:	or     al,0x61
  41afc6:	add    edi,ebp
  41afc8:	mov    esi,DWORD PTR [esi]
  41afca:	add    BYTE PTR [edx+0x25],ah
  41afcd:	scas   al,BYTE PTR es:[edi]
  41afce:	push   ecx
  41afcf:	push   0x631c0ae3
  41afd4:	xor    BYTE PTR [edi],ah
  41afd6:	scas   al,BYTE PTR es:[edi]
  41afd7:	imul   ebx,DWORD PTR [ecx],0x739e706f
  41afdd:	call   0x3bd6884f
  41afe2:	mov    es,WORD PTR [ebx]
  41afe4:	nop
  41afe5:	call   0x3065:0xe6bb240b
  41afec:	cmc    
  41afed:	(bad)  cs:[edi+ecx*1+0xa1b4aee]
  41aff5:	push   ss
  41aff6:	push   ds
  41aff7:	or     eax,0xb79eb600
  41affc:	pop    esp
  41affd:	out    dx,al
  41affe:	shl    eax,0x87
  41b001:	push   0xac5a6cb0
  41b006:	mov    WORD PTR [esi-0x36],?
  41b009:	adc    ecx,ebx
  41b00b:	cwde   
  41b00c:	or     dh,dl
  41b00e:	push   ecx
  41b00f:	out    dx,al
  41b010:	lahf   
  41b011:	jge    0x41b061
  41b013:	dec    edi
  41b014:	jge    0x41b063
  41b016:	or     al,0x51
  41b018:	dec    esi
  41b019:	popa   
  41b01a:	adc    eax,0x6a19d840
  41b01f:	mov    ebp,cs
  41b021:	sub    BYTE PTR [edx-0x14],dh
  41b024:	fwait
  41b025:	ret    
  41b026:	push   cs
  41b027:	push   ds
  41b028:	shr    DWORD PTR [eax-0x7b59a5b7],cl
  41b02e:	test   al,0xa3
  41b030:	test   BYTE PTR fs:[ebp-0x53349a31],ch
  41b037:	jb     0x41b03b
  41b039:	jmp    0x465:0x507fc9a
  41b040:	mov    dh,BYTE PTR [esi]
  41b042:	pause  
  41b044:	neg    DWORD PTR ds:0xad929d3f
  41b04a:	pop    ss
  41b04b:	aad    0x58
  41b04d:	pop    edx
  41b04e:	inc    esp
  41b04f:	test   eax,0x2ed89e64
  41b054:	mov    al,ds:0x5a3fa7d8
  41b059:	addr16 hlt 
  41b05b:	jo     0x41b081
  41b05d:	push   edx
  41b05e:	inc    ebx
  41b05f:	js     0x41b01d
  41b061:	(bad)  
  41b062:	bound  ebx,QWORD PTR [ebx]
  41b064:	(bad)  
  41b065:	loop   0x41b05d
  41b067:	sbb    BYTE PTR [eax-0x2cd1c5e5],ch
  41b06d:	jp     0x41b06c
  41b06f:	outs   dx,BYTE PTR ds:[esi]
  41b070:	jbe    0x41b038
  41b072:	in     al,0xe
  41b074:	fs jmp 0x41b040
  41b077:	gs retf 0xa431
  41b07b:	lds    ebp,FWORD PTR [esi+0x29228a8b]
  41b081:	lods   eax,DWORD PTR ds:[esi]
  41b083:	xchg   edx,eax
  41b084:	dec    edx
  41b085:	pop    edi
  41b086:	and    edx,DWORD PTR [edi]
  41b088:	das    
  41b089:	jmp    0x41b08b
  41b08b:	out    0xd8,eax
  41b08d:	mov    bh,0xf1
  41b08f:	xchg   ebx,eax
  41b090:	pop    eax
  41b091:	std    
  41b092:	outs   dx,DWORD PTR ds:[esi]
  41b093:	cs or  eax,0xaed886ec
  41b099:	pop    ebp
  41b09a:	push   esi
  41b09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b09c:	jmp    0x41b057
  41b09e:	into   
  41b09f:	mov    al,ds:0xd69c60ce
  41b0a4:	call   0x2968053f
  41b0a9:	mov    ah,0x71
  41b0ab:	test   BYTE PTR [esi],bh
  41b0ad:	add    eax,0xd6cd8f8f
  41b0b2:	rcl    dl,1
  41b0b4:	dec    edx
  41b0b5:	out    dx,al
  41b0b6:	pop    esi
  41b0b7:	jmp    0xb952e27d
  41b0bc:	daa    
  41b0bd:	mov    es,WORD PTR [ebx+0x5b]
  41b0c0:	push   0x3
  41b0c2:	push   ebp
  41b0c3:	mov    ecx,?
  41b0c5:	sti    
  41b0c6:	mov    eax,ds:0xe181f332
  41b0cb:	ret    0xa816
  41b0ce:	ss xchg esi,eax
  41b0d0:	ss sub al,0x27
  41b0d3:	mov    eax,0x32d9c51a
  41b0d8:	pusha  
  41b0d9:	test   al,0x92
  41b0db:	repnz aas 
  41b0dd:	jnp    0x41b113
  41b0df:	cld    
  41b0e0:	call   0x5e46:0xc2326270
  41b0e7:	sbb    DWORD PTR [ebp+0xf],ebx
  41b0ea:	scas   al,BYTE PTR es:[edi]
  41b0eb:	xchg   ebp,eax
  41b0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ed:	out    dx,al
  41b0ee:	leave  
  41b0ef:	dec    ebx
  41b0f0:	lahf   
  41b0f1:	sub    al,0x68
  41b0f3:	mov    al,0x43
  41b0f5:	mov    esp,0x2cda0272
  41b0fa:	push   0xffffff9d
  41b0fc:	outs   dx,BYTE PTR ds:[esi]
  41b0fd:	pop    es
  41b0fe:	xchg   BYTE PTR [esi],dl
  41b100:	cdq    
  41b101:	add    ch,ah
  41b103:	ss dec edi
  41b105:	xchg   ebp,eax
  41b106:	leave  
  41b107:	jmp    0x7719:0xded89a51
  41b10e:	in     al,dx
  41b10f:	stc    
  41b110:	ins    DWORD PTR es:[edi],dx
  41b111:	cmp    edi,edi
  41b113:	call   0x9186:0xbdd5aaec
  41b11a:	push   esp
  41b11b:	push   esp
  41b11c:	lods   eax,DWORD PTR ds:[esi]
  41b11d:	mov    ah,BYTE PTR [edi+ebp*2+0x47]
  41b121:	(bad)  
  41b122:	add    eax,0x761dda37
  41b127:	cmp    eax,0xba0ebdd6
  41b12c:	cmp    dh,bl
  41b12e:	sti    
  41b12f:	xor    dl,bh
  41b131:	call   FWORD PTR ss:[edx+0x7060fd6c]
  41b138:	fs gs cdq 
  41b13b:	fwait
  41b13c:	mov    eax,0x8f830687
  41b141:	stos   BYTE PTR es:[edi],al
  41b142:	xlat   BYTE PTR ds:[ebx]
  41b143:	scas   eax,DWORD PTR es:[edi]
  41b144:	adc    eax,0x4ddfe63e
  41b149:	mov    edx,ebx
  41b14b:	int3   
  41b14c:	fcomp  DWORD PTR [edx+ebx*8+0x1b]
  41b150:	jne    0x41b17b
  41b152:	dec    esp
  41b153:	adc    eax,0x5369f3c9
  41b158:	bound  ebp,QWORD PTR [edx+0x70]
  41b15b:	sub    DWORD PTR [esi],esi
  41b15d:	push   eax
  41b15e:	fiadd  DWORD PTR [ebp+0x66dca145]
  41b164:	daa    
  41b165:	out    dx,eax
  41b166:	cld    
  41b167:	cwde   
  41b168:	add    BYTE PTR [esi-0xcd638b8],dl
  41b16e:	ret    
  41b16f:	sub    edx,DWORD PTR [ebp+ebp*2-0x78]
  41b173:	lods   al,BYTE PTR ds:[esi]
  41b174:	add    ah,al
  41b176:	in     al,dx
  41b177:	jb     0x41b1e7
  41b179:	jns    0x41b15d
  41b17b:	sub    bl,BYTE PTR [esi+0xd70f9c9]
  41b181:	push   cs
  41b182:	into   
  41b183:	imul   edx,DWORD PTR [ebx-0x3c],0x629ae401
  41b18a:	mov    eax,0x9ef00f88
  41b18f:	mov    bl,0xc5
  41b191:	cmp    DWORD PTR [edx+eax*8],0x7a
  41b195:	mov    esp,0xd7b1dfaf
  41b19a:	sub    edi,ecx
  41b19c:	(bad)  
  41b19d:	cmp    al,0x72
  41b19f:	push   edi
  41b1a0:	jg     0x41b137
  41b1a2:	cmp    BYTE PTR [eax+0x4f3aea93],ch
  41b1a8:	test   al,0x5b
  41b1aa:	jp     0x41b17b
  41b1ac:	xchg   BYTE PTR [eax],bh
  41b1ae:	adc    ah,0xf2
  41b1b1:	nop
  41b1b2:	(bad)  
  41b1b3:	mov    gs,WORD PTR [ebp-0x230ef2a7]
  41b1b9:	cmp    eax,0xa98b8968
  41b1be:	(bad)  
  41b1c0:	arpl   WORD PTR [edi],di
  41b1c2:	pop    edx
  41b1c3:	adc    DWORD PTR [edx+0x4abfcc3e],0x8f129d61
  41b1cd:	dec    esi
  41b1ce:	jne    0x41b1b1
  41b1d0:	xchg   esi,eax
  41b1d1:	jae    0x41b218
  41b1d3:	push   ebp
  41b1d4:	mov    ds:0x5747208f,al
  41b1d9:	js     0x41b1ea
  41b1db:	inc    ebx
  41b1dc:	cli    
  41b1dd:	and    DWORD PTR [ebx+0x7e9b3415],0x28
  41b1e4:	push   0x856cd978
  41b1e9:	mov    ah,0x8e
  41b1eb:	cmp    BYTE PTR [esi+0x27],bl
  41b1ee:	add    dl,cl
  41b1f0:	mov    WORD PTR ds:0x7a666414,?
  41b1f6:	es pop edi
  41b1f8:	inc    ebx
  41b1f9:	xchg   DWORD PTR [ecx-0x10],esp
  41b1fc:	jl     0x41b1ec
  41b1fe:	adc    DWORD PTR [ebx-0x57],esi
  41b201:	push   ecx
  41b202:	(bad)  
  41b203:	fidivr DWORD PTR [edi+0x66]
  41b206:	jb     0x41b22a
  41b208:	dec    ebp
  41b20a:	ins    BYTE PTR es:[edi],dx
  41b20b:	cmc    
  41b20c:	adc    al,0xd4
  41b20e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b20f:	jno    0x41b1bd
  41b211:	test   al,0x1
  41b213:	aam    0xd
  41b215:	dec    edx
  41b216:	jecxz  0x41b1bf
  41b218:	pop    esi
  41b219:	(bad)  
  41b21a:	adc    cl,cl
  41b21c:	out    0xb5,al
  41b21e:	push   ebx
  41b21f:	dec    ebp
  41b220:	fcom   DWORD PTR ds:0xb9431ac9
  41b226:	or     eax,0x71b10949
  41b22b:	mov    ecx,0xa04dbacf
  41b230:	inc    DWORD PTR [esi-0x4fa3f002]
  41b236:	jbe    0x41b1c0
  41b238:	in     al,dx
  41b239:	mov    esi,0xb5bc72e9
  41b23e:	mov    ebx,0x3e9f5059
  41b243:	push   edi
  41b244:	dec    ecx
  41b245:	xor    esi,DWORD PTR ds:[esi-0x5d]
  41b249:	inc    esp
  41b24a:	outs   dx,DWORD PTR ds:[esi]
  41b24b:	mov    ds:0x94f0235d,eax
  41b250:	outs   dx,BYTE PTR ds:[esi]
  41b251:	mov    ebp,0xb6383dc0
  41b256:	xlat   BYTE PTR ds:[ebx]
  41b257:	sub    al,0xc5
  41b259:	mov    ah,0xad
  41b25b:	not    DWORD PTR [eax]
  41b25d:	sub    ebx,edx
  41b25f:	dec    eax
  41b260:	xor    eax,0xf169199d
  41b265:	fist   WORD PTR [eax]
  41b267:	data16 cli 
  41b269:	in     eax,dx
  41b26a:	out    dx,eax
  41b26b:	dec    edx
  41b26c:	mov    al,cl
  41b26e:	push   edi
  41b26f:	xor    eax,0xa1180656
  41b274:	sbb    eax,0x8012557d
  41b279:	mov    dl,0x92
  41b27b:	ds ja  0x41b29d
  41b27e:	pop    ebp
  41b27f:	ret    0x7a9f
  41b282:	push   esi
  41b283:	sub    DWORD PTR [ebx-0x54],esi
  41b286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b287:	or     DWORD PTR ds:0x2159420f,0xab08343c
  41b291:	inc    ebx
  41b292:	popa   
  41b293:	loope  0x41b2d2
  41b295:	jne    0x41b2f1
  41b297:	inc    ecx
  41b298:	pop    eax
  41b299:	dec    esi
  41b29a:	jae    0x41b298
  41b29c:	or     ebp,DWORD PTR [edi+0x415e141c]
  41b2a2:	xchg   edi,eax
  41b2a3:	cmp    eax,0x5ac1200f
  41b2a8:	not    BYTE PTR [esi-0x77]
  41b2ab:	jno    0x41b2cf
  41b2ad:	xor    al,0x44
  41b2af:	test   DWORD PTR ds:0x827e14a,edi
  41b2b5:	bound  esi,QWORD PTR [edx+0x12ac84eb]
  41b2bb:	dec    edx
  41b2bc:	jp     0x41b29f
  41b2be:	cmc    
  41b2bf:	and    BYTE PTR [ecx],cl
  41b2c1:	sbb    DWORD PTR [ecx+ecx*4],eax
  41b2c4:	add    eax,DWORD PTR [edi+ecx*2+0x3e5e87b2]
  41b2cb:	stc    
  41b2cc:	mov    DWORD PTR [edi],esp
  41b2ce:	cmp    ch,BYTE PTR [edi+0x474786b9]
  41b2d4:	in     al,dx
  41b2d5:	jo     0x41b322
  41b2d7:	mov    BYTE PTR [esi+0x3e],ah
  41b2da:	imul   eax,DWORD PTR [ebx+0x5627c682],0xab81487
  41b2e4:	repz stc 
  41b2e6:	lea    esp,[edx-0x9ad45a5]
  41b2ec:	in     eax,dx
  41b2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ee:	mov    ds:0x4c97f0f6,eax
  41b2f3:	adc    dh,BYTE PTR [ebx-0x29]
  41b2f6:	xchg   ebp,edi
  41b2f8:	sub    al,0x28
  41b2fa:	loope  0x41b364
  41b2fc:	int3   
  41b2fd:	pushf  
  41b2fe:	sub    BYTE PTR [eax-0x52],0x35
  41b302:	sub    esi,DWORD PTR [edx+eiz*8+0x19ebae2a]
  41b309:	stc    
  41b30a:	ins    WORD PTR es:[edi],dx
  41b30c:	cwde   
  41b30d:	test   BYTE PTR [ecx+0x3c5e279c],0xf0
  41b314:	(bad)  
  41b316:	push   ds
  41b317:	mov    esp,0x96b3439d
  41b31c:	ret    
  41b31d:	leave  
  41b31e:	mov    cl,BYTE PTR [esi+0x4f]
  41b321:	or     eax,0x3e83708
  41b326:	test   BYTE PTR [esi+eax*1],ch
  41b329:	xchg   esp,eax
  41b32a:	pop    es
  41b32b:	push   0xfffffff5
  41b32d:	mov    eax,DWORD PTR [edx+0x4349147d]
  41b333:	pop    esi
  41b334:	ret    0x457b
  41b337:	adc    al,0xab
  41b339:	sar    BYTE PTR ds:0xf2817de4,1
  41b33f:	ja     0x41b2e6
  41b341:	jns    0x41b30d
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	pop    edx
  41b368:	fcmove st,st(7)
  41b36a:	jo     0x41b327
  41b36c:	(bad)  
  41b36d:	push   ss
  41b36e:	sbb    BYTE PTR [edx+edx*1+0x56761818],bh
  41b375:	stc    
  41b376:	xor    BYTE PTR [ecx+0x70db38f1],dl
  41b37c:	mov    ds:0x9a98e35d,al
  41b381:	cmp    BYTE PTR [ebp+0x9269c56],0xf8
  41b388:	mov    edi,0x8e33ae05
  41b38d:	inc    edx
  41b38e:	jmp    0x41b3d5
  41b390:	(bad)  
  41b391:	dec    ecx
  41b392:	sub    DWORD PTR [edx+ebp*1+0x6f],esi
  41b396:	mov    WORD PTR [esi-0x29dd8337],fs
  41b39c:	inc    eax
  41b39d:	mov    bh,0x79
  41b39f:	pop    es
  41b3a0:	sbb    DWORD PTR [ebx],edx
  41b3a2:	mov    edi,0x33cd0ef0
  41b3a7:	or     ah,ch
  41b3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3aa:	pop    ecx
  41b3ab:	loop   0x41b334
  41b3ad:	or     BYTE PTR [ebx-0x4597b44e],dl
  41b3b3:	inc    ebx
  41b3b4:	push   0x39954af0
  41b3b9:	loope  0x41b359
  41b3bb:	pusha  
  41b3bc:	jns    0x41b373
  41b3be:	sub    al,0xd0
  41b3c0:	mov    ds:0x8ff86d1d,eax
  41b3c5:	mov    eax,0x76d9be3f
  41b3ca:	fcomp  st(4)
  41b3cc:	mov    cl,0x20
  41b3ce:	dec    esp
  41b3cf:	adc    al,ch
  41b3d1:	and    al,0x89
  41b3d3:	mov    bl,0x6c
  41b3d5:	and    al,0x36
  41b3d7:	pop    esi
  41b3d8:	push   ds
  41b3d9:	clc    
  41b3da:	ins    DWORD PTR es:[edi],dx
  41b3db:	hlt    
  41b3dc:	stos   BYTE PTR es:[edi],al
  41b3dd:	mov    ch,0xd
  41b3df:	cmp    BYTE PTR [esi-0x24165a01],cl
  41b3e5:	fcmovnbe st,st(7)
  41b3e7:	mov    dl,BYTE PTR [eax+0x20eafb1a]
  41b3ed:	test   al,0x99
  41b3ef:	sbb    eax,0x87bc9086
  41b3f4:	xor    dl,dl
  41b3f6:	(bad)  
  41b3f7:	jmp    0xd81b:0x62d27bcb
  41b3fe:	xor    eax,ebx
  41b400:	xchg   DWORD PTR [ecx+eiz*8-0x66f0a441],edx
  41b407:	cli    
  41b408:	call   0xa04c110
  41b40d:	push   es
  41b40e:	div    BYTE PTR [ecx-0x6cbaf8d]
  41b414:	outs   dx,BYTE PTR ds:[esi]
  41b415:	test   BYTE PTR [ecx+0x57],ah
  41b418:	int    0xda
  41b41a:	cli    
  41b41b:	jp     0x41b402
  41b41d:	jmp    0x41b41d
  41b41f:	pop    esp
  41b420:	dec    eax
  41b421:	ss adc BYTE PTR es:[ebp+0x7d4c918e],0x1a
  41b42a:	or     BYTE PTR [edx],dh
  41b42c:	mov    ecx,0x8ca0dab2
  41b431:	outs   dx,DWORD PTR ds:[esi]
  41b432:	jg     0x41b3fd
  41b434:	popa   
  41b435:	add    eax,0x9b8cd3e6
  41b43a:	scas   al,BYTE PTR es:[edi]
  41b43b:	fistp  WORD PTR [ecx+0x4c]
  41b43e:	jp     0x41b4ae
  41b440:	jg     0x41b48d
  41b442:	jo     0x41b48e
  41b444:	push   ss
  41b445:	add    al,0x1a
  41b447:	mov    bl,0x47
  41b449:	loope  0x41b4ab
  41b44b:	pop    esi
  41b44c:	lock or ebp,DWORD PTR [edx-0x6a]
  41b450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b451:	jge    0x41b4ab
  41b453:	addr16 push eax
  41b455:	lea    ebx,[esp+edx*4]
  41b458:	mov    eax,ds:0xee84049
  41b45d:	ds leave 
  41b45f:	jge    0x41b407
  41b461:	jo     0x41b4dc
  41b463:	ja     0x41b4b0
  41b465:	pop    sp
  41b467:	or     DWORD PTR [esi],0x46da7cf5
  41b46d:	in     al,0xb0
  41b46f:	adc    dl,BYTE PTR [edi]
  41b471:	push   edi
  41b472:	rol    DWORD PTR [esi+esi*8-0x6b],1
  41b476:	outs   dx,DWORD PTR ds:[esi]
  41b477:	sbb    DWORD PTR [esi],ebp
  41b479:	addr16 pop esp
  41b47b:	xlat   BYTE PTR ds:[ebx]
  41b47c:	mov    eax,0xe9f9cac2
  41b481:	jmp    0x41b4ec
  41b483:	sub    edx,DWORD PTR [ecx+0x70]
  41b486:	(bad)  
  41b487:	jmp    0x8102:0xef15f63
  41b48e:	rcl    BYTE PTR [eax+0x24],1
  41b491:	mov    ah,0xd
  41b493:	adc    DWORD PTR [edx+edi*4+0x40513451],eax
  41b49a:	xchg   ebp,eax
  41b49b:	rcl    DWORD PTR [edx-0x1e5c5e80],1
  41b4a1:	ficomp DWORD PTR [esi]
  41b4a3:	in     al,0xc2
  41b4a5:	imul   DWORD PTR [esp+eax*4]
  41b4a8:	pop    ecx
  41b4a9:	sbb    DWORD PTR [edx+0x697ff6fe],esp
  41b4af:	cld    
  41b4b0:	data16 arpl WORD PTR [edi],bp
  41b4b3:	dec    edx
  41b4b4:	xor    al,0x9b
  41b4b6:	in     al,dx
  41b4b7:	arpl   WORD PTR [esi],bx
  41b4b9:	lods   al,BYTE PTR ds:[esi]
  41b4ba:	cs loop 0x41b538
  41b4bd:	aad    0x8d
  41b4bf:	stos   DWORD PTR es:[edi],eax
  41b4c0:	loop   0x41b4e8
  41b4c2:	pop    ds
  41b4c3:	mov    al,0xc4
  41b4c5:	rol    DWORD PTR [ebp+eax*4-0x76cb9d5e],0x88
  41b4cd:	icebp  
  41b4ce:	pop    ds
  41b4cf:	and    esp,DWORD PTR [edi+ebx*1+0x39]
  41b4d3:	or     bl,BYTE PTR ds:0xb842b6be
  41b4d9:	jg     0x41b54f
  41b4db:	jbe    0x41b543
  41b4dd:	push   esp
  41b4de:	inc    esp
  41b4df:	ins    DWORD PTR es:[edi],dx
  41b4e0:	aad    0xed
  41b4e2:	jmp    0x3abf6dbe
  41b4e7:	aam    0xce
  41b4e9:	inc    ebp
  41b4ea:	push   edi
  41b4eb:	pop    eax
  41b4ec:	test   DWORD PTR [ebx],ebp
  41b4ee:	mov    eax,0xfb60c69b
  41b4f3:	leave  
  41b4f4:	pop    es
  41b4f5:	loop   0x41b51d
  41b4f7:	adc    cl,BYTE PTR [ebp-0x71]
  41b4fa:	(bad)  
  41b4fb:	clc    
  41b4fc:	je     0x41b48c
  41b4fe:	pop    edx
  41b4ff:	fnstenv [ecx]
  41b501:	popf   
  41b502:	mov    ebx,0xeabf6f14
  41b507:	sbb    BYTE PTR [ecx-0x2d32e7e9],cl
  41b50d:	mov    ah,0x3a
  41b50f:	idiv   DWORD PTR [eax+0x67]
  41b512:	xchg   esp,eax
  41b513:	aad    0xca
  41b515:	(bad)  
  41b516:	mov    edx,esi
  41b518:	vfnmsub213ss xmm5,xmm7,DWORD PTR [edx]
  41b51d:	in     eax,dx
  41b51e:	inc    edx
  41b51f:	jle    0x41b4a2
  41b521:	xor    ah,BYTE PTR [eax+edx*1]
  41b524:	(bad)  
  41b525:	bound  edi,QWORD PTR ds:0x37bd0a8f
  41b52b:	inc    ecx
  41b52c:	xchg   ebx,eax
  41b52d:	or     dl,BYTE PTR [ecx+ebx*8-0x16]
  41b531:	mov    BYTE PTR [ebx+0x4258aad2],bl
  41b537:	int3   
  41b538:	rcr    ah,1
  41b53a:	jnp    0x41b562
  41b53c:	pop    ebx
  41b53d:	mov    dl,0x3f
  41b53f:	icebp  
  41b540:	xchg   ebx,eax
  41b541:	arpl   WORD PTR [edx],bp
  41b543:	(bad)  
  41b544:	push   cs
  41b545:	mov    edx,0x1752a7f5
  41b54a:	inc    esi
  41b54b:	enter  0x68f4,0x2d
  41b54f:	mov    edi,0x3f7fab0b
  41b554:	mov    ss:0xf60f3f6c,eax
  41b55a:	xor    esp,edx
  41b55c:	mov    edi,0x9157055f
  41b561:	push   edi
  41b562:	pop    esi
  41b563:	ins    BYTE PTR es:[edi],dx
  41b564:	add    al,0xc
  41b566:	adc    edi,DWORD PTR [edx-0x1f9a3a4b]
  41b56c:	out    dx,al
  41b56d:	inc    ebx
  41b56e:	dec    ecx
  41b56f:	sbb    esp,ecx
  41b571:	fdivr  QWORD PTR [edx-0x3259828a]
  41b577:	dec    eax
  41b578:	rcr    DWORD PTR [edx],1
  41b57a:	sbb    eax,DWORD PTR [edi+0x432f1de9]
  41b580:	sub    eax,0x210b858a
  41b585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b586:	int3   
  41b587:	pop    eax
  41b588:	inc    edx
  41b589:	icebp  
  41b58a:	nop
  41b58b:	stc    
  41b58c:	mov    edx,0x5636f129
  41b591:	xor    DWORD PTR [esi-0x7ad0cddc],0xb78defd7
  41b59b:	and    al,0xc6
  41b59d:	cmc    
  41b59e:	test   BYTE PTR [ecx],0xc2
  41b5a1:	push   0xa
  41b5a3:	sub    cl,BYTE PTR [ebx]
  41b5a5:	mov    al,ds:0xa7a4dfdf
  41b5aa:	lock fcomp DWORD PTR [eax+0x1ec4f480]
  41b5b1:	add    DWORD PTR [ecx],ebp
  41b5b3:	jge    0x41b575
  41b5b5:	jecxz  0x41b54f
  41b5b7:	pusha  
  41b5b8:	lahf   
  41b5b9:	xor    eax,0x28214ded
  41b5be:	addr16 inc esi
  41b5c0:	dec    eax
  41b5c1:	xor    DWORD PTR [edi-0x15bae27a],esp
  41b5c7:	push   sp
  41b5c9:	sti    
  41b5ca:	push   es
  41b5cb:	mov    ds:0x9d50bc3c,eax
  41b5d0:	xchg   ecx,eax
  41b5d1:	sub    dl,ah
  41b5d3:	(bad)  
  41b5d4:	jne    0x41b5ea
  41b5d6:	ss cs scas eax,DWORD PTR es:[edi]
  41b5d9:	pop    DWORD PTR [esi-0x54]
  41b5dc:	xchg   ecx,eax
  41b5dd:	dec    ebp
  41b5de:	pop    esp
  41b5df:	ret    0x9ad8
  41b5e2:	xchg   ebp,eax
  41b5e3:	mov    dh,0xc4
  41b5e5:	jp     0x41b5c4
  41b5e7:	mov    dh,0x52
  41b5e9:	js     0x41b56f
  41b5eb:	gs dec esp
  41b5ed:	leave  
  41b5ee:	sbb    ah,0x3c
  41b5f1:	xacquire xchg DWORD PTR [ebp-0x4688c714],esp
  41b5f8:	jecxz  0x41b644
  41b5fa:	inc    ebx
  41b5fb:	pop    edx
  41b5fc:	jp     0x41b653
  41b5fe:	adc    dh,BYTE PTR [edi-0x1]
  41b601:	pop    ds
  41b602:	sub    BYTE PTR [ecx+0x50630267],0x71
  41b609:	cmp    ch,dl
  41b60b:	xchg   ebx,eax
  41b60c:	push   ss
  41b60d:	jnp    0x41b59b
  41b60f:	(bad)  
  41b610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b611:	cdq    
  41b612:	jne    0x41b5e5
  41b614:	js     0x41b606
  41b616:	ins    BYTE PTR es:[edi],dx
  41b617:	xchg   ebp,eax
  41b618:	sbb    bl,BYTE PTR [ecx]
  41b61a:	push   cs
  41b61b:	cmp    BYTE PTR [esp+eiz*4-0x62c0f2e8],dh
  41b622:	pushf  
  41b623:	xchg   ebx,eax
  41b624:	rcr    DWORD PTR ss:[edi],cl
  41b627:	test   eax,0x506991ea
  41b62c:	es js  0x41b5e5
  41b62f:	ret    
  41b630:	or     eax,0x89fc79d4
  41b635:	add    edx,0x38
  41b638:	ds sbb eax,0x67eca11f
  41b63e:	push   0xffffffd8
  41b640:	pop    ds
  41b641:	repz (bad) 
  41b643:	cmc    
  41b644:	mov    ch,0xd
  41b646:	sbb    esp,esi
  41b648:	mov    ebx,0x53d03fb3
  41b64d:	jge    0x41b68f
  41b64f:	pusha  
  41b650:	imul   DWORD PTR [ebx]
  41b652:	idiv   DWORD PTR [ecx]
  41b654:	pop    es
  41b655:	cmp    cl,BYTE PTR [esi+0x42e206a5]
  41b65b:	loope  0x41b67a
  41b65d:	call   0x12ad:0xf0000e5d
  41b664:	inc    esi
  41b665:	test   al,0xb7
  41b667:	lock push ds
  41b669:	add    ah,BYTE PTR [edx-0x327c76fd]
  41b66f:	daa    
  41b670:	xor    al,bh
  41b672:	push   ecx
  41b673:	in     al,0xde
  41b675:	cmp    DWORD PTR [eax+0x55],esi
  41b678:	inc    esi
  41b679:	push   cs
  41b67a:	inc    esi
  41b67b:	mov    bl,0x59
  41b67d:	add    BYTE PTR [edx],bh
  41b67f:	(bad)  
  41b680:	fcomp  QWORD PTR [esi+eiz*4]
  41b683:	mov    BYTE PTR [eax+0x54],dl
  41b686:	cmp    eax,0xa9ce23a4
  41b68b:	sbb    esi,DWORD PTR [esi-0xf]
  41b68e:	clc    
  41b68f:	push   ebp
  41b690:	stc    
  41b691:	das    
  41b692:	ss jp  0x41b643
  41b695:	std    
  41b696:	push   ebx
  41b697:	scas   eax,DWORD PTR es:[edi]
  41b698:	lds    esp,FWORD PTR [edx+eiz*1-0x36acbbf7]
  41b69f:	mov    bh,0x24
  41b6a1:	shl    ch,1
  41b6a3:	mul    DWORD PTR [ecx+ebx*1+0x63]
  41b6a7:	inc    edi
  41b6a8:	inc    eax
  41b6a9:	inc    DWORD PTR [esi-0x2d]
  41b6ac:	and    al,0xf8
  41b6ae:	mov    ch,0x6b
  41b6b0:	into   
  41b6b1:	fadd   st(5),st
  41b6b3:	rcr    DWORD PTR ds:0xdd10ac53,1
  41b6b9:	repz sub DWORD PTR [esi-0x3],esi
  41b6bd:	lods   al,BYTE PTR ds:[esi]
  41b6be:	loopne 0x41b737
  41b6c0:	xor    edx,eax
  41b6c2:	shl    DWORD PTR ds:0x6b863536,cl
  41b6c8:	stc    
  41b6c9:	push   ebp
  41b6ca:	stos   DWORD PTR es:[edi],eax
  41b6cb:	jmp    DWORD PTR [ebx-0x6e]
  41b6ce:	cmp    BYTE PTR [eax+0x11],cl
  41b6d1:	dec    ebp
  41b6d2:	jge    0x41b697
  41b6d4:	push   0xf43276c
  41b6d9:	fsub   st(6),st
  41b6db:	and    al,0x87
  41b6dd:	inc    edx
  41b6de:	fnsave [esi]
  41b6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6e1:	mov    edx,0xd25cdfb9
  41b6e6:	iret   
  41b6e7:	in     eax,dx
  41b6e8:	and    DWORD PTR [edi-0x62],ebp
  41b6eb:	adc    BYTE PTR [eax*2-0x1cf9999],0xe5
  41b6f3:	and    ch,BYTE PTR [ebx+ebp*4]
  41b6f6:	loopne 0x41b76b
  41b6f8:	enter  0xd785,0x9b
  41b6fc:	add    dh,BYTE PTR [ecx+0x48]
  41b6ff:	sbb    eax,0x15298248
  41b704:	adc    DWORD PTR [eax],0xffffff9c
  41b707:	outs   dx,BYTE PTR ds:[esi]
  41b708:	cdq    
  41b709:	jbe    0x41b733
  41b70b:	jo     0x41b6ec
  41b70d:	inc    eax
  41b70e:	jns    0x41b716
  41b710:	das    
  41b711:	fmul   QWORD PTR [edx]
  41b713:	push   cs
  41b714:	clc    
  41b715:	loope  0x41b6ac
  41b717:	pop    edi
  41b718:	jl     0x41b6d9
  41b71a:	and    al,BYTE PTR ss:[ecx+esi*1]
  41b71e:	out    0xb7,al
  41b720:	cwde   
  41b721:	and    eax,0xc16025e2
  41b726:	loopne 0x41b746
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x4225f4
  41b758:	mov    DWORD PTR [esp+0x68],0x4225ec
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42257c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx+0x58aa298c],dh
  41b815:	xchg   edx,eax
  41b816:	and    DWORD PTR [esi+0x5e],edi
  41b819:	mov    DWORD PTR [esi],edx
  41b81b:	sbb    BYTE PTR [edx+edx*1-0x840e7e8],bh
  41b822:	cs test ecx,0x35d62ed1
  41b829:	fnstenv [eax+ebp*1]
  41b82c:	mov    dh,0x9c
  41b82e:	enter  0xe622,0xbe
  41b832:	push   edi
  41b833:	xor    ch,bh
  41b835:	or     al,0x6
  41b837:	push   edi
  41b838:	ja     0x41b7d5
  41b83a:	das    
  41b83b:	sbb    bh,al
  41b83d:	fwait
  41b83e:	repz popf 
  41b840:	fdivr  QWORD PTR [ebp+0x49291aa0]
  41b846:	clc    
  41b847:	jp     0x41b7d4
  41b849:	pop    edi
  41b84a:	inc    ebp
  41b84b:	adc    al,0xc7
  41b84d:	lods   eax,DWORD PTR ds:[esi]
  41b84e:	jmp    0x41b7ef
  41b850:	cmp    cl,BYTE PTR [edi+ebx*1]
  41b853:	rcr    DWORD PTR [ecx+0x4212bfe4],1
  41b859:	sub    edx,DWORD PTR [edi+edx*2+0x6d]
  41b85d:	imul   eax,edi,0xffffffec
  41b860:	jecxz  0x41b8b6
  41b862:	sub    BYTE PTR [edi-0x30d45f38],0x88
  41b869:	pusha  
  41b86a:	xchg   esp,eax
  41b86b:	mov    dh,0x27
  41b86d:	or     BYTE PTR [esi-0x61],ch
  41b870:	in     eax,dx
  41b871:	jmp    0xeaad8f98
  41b876:	jg     0x41b838
  41b878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b879:	sahf   
  41b87a:	xchg   edx,eax
  41b87b:	pop    ecx
  41b87c:	ds mov esi,esp
  41b87f:	mov    dl,0x60
  41b881:	cmc    
  41b882:	lods   eax,DWORD PTR ds:[esi]
  41b883:	das    
  41b884:	imul   esi,DWORD PTR [edx],0x31
  41b887:	add    BYTE PTR [esi-0x70],ah
  41b88a:	jl     0x41b8b7
  41b88c:	xchg   edx,eax
  41b88d:	sbb    DWORD PTR [esi-0x3d77d8a6],0xe7d7bba1
  41b897:	outs   dx,BYTE PTR ds:[esi]
  41b898:	aas    
  41b899:	jge    0x41b8ae
  41b89b:	call   FWORD PTR [ebx-0x6f]
  41b89e:	ret    0x8d8b
  41b8a1:	outs   dx,BYTE PTR ds:[esi]
  41b8a2:	xchg   esp,eax
  41b8a3:	pop    ds
  41b8a4:	jge    0x41b8cd
  41b8a6:	cmp    al,0x92
  41b8a8:	stc    
  41b8a9:	mov    DWORD PTR [ebp-0x28793630],edi
  41b8af:	adc    ah,BYTE PTR [esi-0x57dabe0]
  41b8b5:	sbb    edi,ebp
  41b8b7:	push   esi
  41b8b8:	dec    ebp
  41b8b9:	adc    eax,0x39bc93ac
  41b8be:	cmp    DWORD PTR [edx],eax
  41b8c0:	jno    0x41b8af
  41b8c2:	int    0x36
  41b8c4:	sbb    BYTE PTR [eax],ah
  41b8c6:	push   ds
  41b8c7:	push   edx
  41b8c8:	ret    
  41b8c9:	cs sbb al,al
  41b8cc:	jne    0x41b90c
  41b8ce:	mov    esp,0xaf1b8824
  41b8d3:	mov    dl,BYTE PTR [ebx-0xfabbfe4]
  41b8d9:	and    eax,0x1e90c376
  41b8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8df:	add    DWORD PTR [eax],esp
  41b8e1:	or     eax,0x4a903783
  41b8e6:	std    
  41b8e7:	or     ebx,0xffffff8c
  41b8ea:	inc    edx
  41b8eb:	adc    DWORD PTR [edi-0x6a],ebp
  41b8ee:	push   esi
  41b8ef:	test   DWORD PTR [edx],eax
  41b8f1:	add    ah,BYTE PTR ds:0x806aa6cf
  41b8f7:	jge    0x41b8c5
  41b8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8fa:	add    cl,BYTE PTR [ebx+0x60]
  41b8fd:	and    eax,0xef034e54
  41b902:	pop    edx
  41b903:	cmp    esp,ebx
  41b905:	dec    ebx
  41b906:	addr16 xchg ebp,eax
  41b908:	mov    al,0x90
  41b90a:	retf   
  41b90b:	push   ebp
  41b90c:	sbb    al,0x88
  41b90e:	ss jle 0x41b900
  41b911:	or     al,0x6d
  41b913:	rcr    BYTE PTR [ecx+0x1f],1
  41b916:	mov    WORD PTR [ebx-0x1e37e18f],?
  41b91c:	ja     0x41b90f
  41b91e:	dec    esp
  41b91f:	xor    DWORD PTR ds:0x2df9c149,edx
  41b925:	mov    WORD PTR [esi],bp
  41b928:	pop    esi
  41b929:	push   edi
  41b92a:	inc    esi
  41b92b:	test   eax,0xdb180e66
  41b930:	loopne 0x41b914
  41b932:	xor    BYTE PTR [edx],al
  41b934:	in     al,0xe2
  41b936:	imul   esi,DWORD PTR [eax+0x2fa7bdf7],0xb65e1ec9
  41b940:	int3   
  41b941:	and    esp,DWORD PTR [eax+0x6ca2fef]
  41b947:	xor    eax,0x829912d6
  41b94c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b94e:	ins    WORD PTR es:[edi],dx
  41b950:	es xchg ecx,eax
  41b952:	dec    edx
  41b953:	loope  0x41b915
  41b955:	out    0xd0,al
  41b957:	sahf   
  41b958:	loopne 0x41b9c8
  41b95a:	mov    dl,BYTE PTR [ecx-0x682490f4]
  41b960:	push   ebp
  41b961:	out    dx,al
  41b962:	stos   BYTE PTR es:[edi],al
  41b963:	sub    eax,0xe5bc8199
  41b968:	out    0x9a,al
  41b96a:	fdivr  st(4),st
  41b96c:	and    BYTE PTR [eax-0x19de093a],dh
  41b972:	xor    BYTE PTR ss:[ebx],dl
  41b975:	sbb    BYTE PTR [edx+0x4235daec],al
  41b97b:	pop    ecx
  41b97c:	int3   
  41b97d:	bound  ebp,QWORD PTR [edi-0x38]
  41b980:	add    bl,bh
  41b982:	(bad)  
  41b983:	fmul   st(6),st
  41b985:	and    al,BYTE PTR [ecx-0x5b648558]
  41b98b:	pop    eax
  41b98c:	push   cs
  41b98d:	jmp    0x41b9b1
  41b98f:	mov    al,ds:0x2d199f53
  41b994:	or     DWORD PTR [ebx],eax
  41b996:	inc    esp
  41b997:	ret    0x2702
  41b99a:	or     DWORD PTR [edx],0x6ee15bce
  41b9a0:	pusha  
  41b9a1:	inc    esi
  41b9a2:	xor    DWORD PTR [edx+0x2],ebx
  41b9a5:	enter  0x9c5,0x37
  41b9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9aa:	mov    ecx,0xa6978b75
  41b9af:	jae    0x41b97f
  41b9b1:	and    al,0x5
  41b9b3:	retf   
  41b9b4:	fwait
  41b9b5:	inc    ecx
  41b9b6:	jecxz  0x41b9f3
  41b9b8:	xor    al,0x26
  41b9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9bc:	cmp    DWORD PTR [esi+0x73a2192a],ebx
  41b9c2:	adc    esi,DWORD PTR [eax]
  41b9c4:	scas   al,BYTE PTR es:[edi]
  41b9c5:	int3   
  41b9c6:	and    eax,0x6035c2b2
  41b9cb:	cs stos BYTE PTR es:[edi],al
  41b9cd:	mov    es,WORD PTR [ecx]
  41b9cf:	fcmovne st,st(0)
  41b9d1:	pop    edx
  41b9d2:	mov    ch,0x1c
  41b9d4:	push   ebx
  41b9d5:	adc    bh,bh
  41b9d7:	ret    0x2e72
  41b9da:	mov    BYTE PTR [eax+0x44],0x5e
  41b9de:	test   eax,0xe45db023
  41b9e3:	mov    DWORD PTR [eax+esi*2-0x775745d5],edx
  41b9ea:	inc    ecx
  41b9eb:	cld    
  41b9ec:	fldenv [edx]
  41b9ee:	push   ecx
  41b9ef:	fcmovnb st,st(1)
  41b9f1:	add    ebp,ebx
  41b9f3:	popf   
  41b9f4:	push   esp
  41b9f5:	or     BYTE PTR [ecx],bh
  41b9f7:	push   es
  41b9f8:	ret    0x268c
  41b9fb:	inc    eax
  41b9fc:	jle    0x41ba01
  41b9fe:	xlat   BYTE PTR ds:[ebx]
  41b9ff:	bound  ebx,QWORD PTR [eax-0xc]
  41ba02:	sar    DWORD PTR [edx+0x33d52adb],0x93
  41ba09:	test   eax,0xc41d4d3d
  41ba0e:	add    edx,DWORD PTR [ecx]
  41ba10:	aad    0x43
  41ba12:	push   0xeda52e0b
  41ba17:	and    BYTE PTR [edi-0x60c65409],bh
  41ba1d:	sbb    eax,0xde5a182c
  41ba22:	std    
  41ba23:	jns    0xf2eb9cac
  41ba29:	xor    al,0x15
  41ba2b:	xor    ebp,DWORD PTR [eax]
  41ba2d:	(bad)  
  41ba2e:	out    0x5c,eax
  41ba30:	fwait
  41ba31:	add    eax,0xcfd802b5
  41ba36:	inc    esi
  41ba37:	push   eax
  41ba38:	jns    0x41b9f0
  41ba3a:	out    0xe,eax
  41ba3c:	in     al,0x36
  41ba3e:	inc    eax
  41ba3f:	adc    al,0xd0
  41ba41:	jne    0x41b9ed
  41ba43:	sbb    bl,BYTE PTR [eax+edx*4+0x52321816]
  41ba4a:	pop    eax
  41ba4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba4c:	or     BYTE PTR [ebp+0x3a],al
  41ba4f:	mov    ebp,0xb259bfaf
  41ba54:	test   BYTE PTR ds:0x2e4cda8a,0x77
  41ba5b:	loope  0x41ba29
  41ba5d:	addr16 dec edi
  41ba5f:	cmp    edi,DWORD PTR [ebp+edi*4-0x41]
  41ba63:	sub    ebx,DWORD PTR [edi]
  41ba65:	nop
  41ba66:	xor    bl,ch
  41ba68:	push   edi
  41ba69:	mov    BYTE PTR [edi+ebp*1],dl
  41ba6c:	xor    BYTE PTR [ebp+0x70],bh
  41ba6f:	jmp    0x41ba01
  41ba71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba72:	scas   al,BYTE PTR es:[edi]
  41ba73:	xor    eax,0x7210e2a7
  41ba78:	retf   
  41ba79:	jle    0x41ba67
  41ba7b:	test   DWORD PTR [ebx-0x620228da],esp
  41ba81:	in     al,0xb
  41ba83:	inc    ebp
  41ba84:	xchg   BYTE PTR [ebx+0x65],al
  41ba87:	mov    bl,0x9d
  41ba89:	dec    ebp
  41ba8a:	xchg   BYTE PTR [ebx+edi*1],dh
  41ba8d:	(bad)  
  41ba8e:	lea    ebp,[ebp+0xb]
  41ba91:	bound  ebp,QWORD PTR ds:0x28a66fdf
  41ba97:	and    al,0x96
  41ba99:	lahf   
  41ba9a:	popf   
  41ba9b:	xchg   ebx,eax
  41ba9c:	ret    0xc650
  41ba9f:	mov    edi,0xd207b9af
  41baa4:	out    dx,al
  41baa5:	nop
  41baa6:	add    DWORD PTR [eax+0x5b6f9cad],eax
  41baac:	lea    eax,[ebx]
  41baae:	xor    eax,0xc0e51f19
  41bab3:	into   
  41bab4:	push   esp
  41bab5:	and    DWORD PTR [edi-0x3f4f1613],ebx
  41babb:	ror    DWORD PTR [ebx+0x2f139ef4],0xe7
  41bac2:	mov    eax,0x159e5ee
  41bac7:	fdivrp st(0),st
  41bac9:	pop    ebp
  41baca:	stos   BYTE PTR es:[edi],al
  41bacb:	add    eax,DWORD PTR [edi+eax*2-0x29]
  41bacf:	in     al,dx
  41bad0:	lahf   
  41bad1:	and    esp,DWORD PTR [edx+0x5e]
  41bad4:	push   ds
  41bad5:	mov    esi,DWORD PTR [esi+0x1afec80a]
  41badb:	sbb    ebx,DWORD PTR [ebx-0x7f5ae236]
  41bae1:	loop   0x41bb47
  41bae3:	rol    dl,0xd0
  41bae6:	out    0x3c,al
  41bae8:	jl     0x41bb34
  41baea:	cmp    eax,0x57af4e5e
  41baef:	pop    ss
  41baf0:	push   esp
  41baf1:	xor    ax,0x178e
  41baf5:	out    dx,eax
  41baf6:	cmp    BYTE PTR [ecx-0x1e],bh
  41baf9:	push   cs
  41bafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bafb:	nop
  41bafc:	dec    ebx
  41bafd:	mov    ch,0xe
  41baff:	push   eax
  41bb00:	mov    ebx,DWORD PTR [ecx]
  41bb02:	sbb    dl,BYTE PTR [edi-0x66464dd8]
  41bb08:	fisttp QWORD PTR [edx+0x21]
  41bb0b:	into   
  41bb0c:	push   ecx
  41bb0d:	out    0xf1,al
  41bb0f:	mov    ds:0x39c0e766,al
  41bb14:	ficomp DWORD PTR [edx-0x6550f6c7]
  41bb1a:	rol    ebp,cl
  41bb1c:	mov    ecx,eax
  41bb1e:	jl     0x41bac4
  41bb20:	je     0x41bad0
  41bb22:	loop   0x41bb26
  41bb24:	and    bh,BYTE PTR [ebx+0x6b]
  41bb27:	rol    esp,cl
  41bb29:	into   
  41bb2a:	lea    edx,[esi-0xb]
  41bb2d:	jecxz  0x41badf
  41bb2f:	out    0xe7,al
  41bb31:	fldenv [esi-0x28]
  41bb34:	lock inc ebp
  41bb36:	shr    DWORD PTR [ebx+0x76],1
  41bb39:	sub    DWORD PTR [ebp+0x32a5658f],0x5ad929eb
  41bb43:	adc    ah,0x9e
  41bb46:	inc    ecx
  41bb47:	xchg   edx,eax
  41bb48:	jno    0x41baef
  41bb4a:	or     DWORD PTR [ebx-0x3b],ebp
  41bb4d:	adc    DWORD PTR [ebx-0x5f2edf26],eax
  41bb53:	sahf   
  41bb54:	imul   edx,DWORD PTR [ecx+0x10],0x90683c13
  41bb5b:	fscale 
  41bb5d:	and    eax,0x4ebd28d0
  41bb62:	pop    edx
  41bb63:	jo     0x41bb79
  41bb65:	pop    ss
  41bb66:	scas   eax,DWORD PTR es:[edi]
  41bb67:	fmul   QWORD PTR [esi-0x65109200]
  41bb6d:	addr16 adc dh,ah
  41bb70:	cld    
  41bb71:	cmp    cl,cl
  41bb73:	pop    eax
  41bb74:	aam    0xdf
  41bb76:	xor    BYTE PTR [ebx],0x8f
  41bb79:	cs mov eax,0xea8351f3
  41bb7f:	cmp    eax,0x6a018f74
  41bb84:	add    ebx,DWORD PTR [esi-0x31f7b8ad]
  41bb8a:	arpl   WORD PTR [esi+eiz*4],bp
  41bb8d:	in     al,0x81
  41bb8f:	std    
  41bb90:	inc    ebp
  41bb91:	fcomp  DWORD PTR [ebp+0x2665ea33]
  41bb97:	jmp    0xa054:0xc495bc83
  41bb9e:	mov    ecx,0x34e84d61
  41bba3:	(bad)  
  41bba4:	aad    0x5e
  41bba6:	jmp    0x40cd:0x35d16c3e
  41bbad:	inc    eax
  41bbae:	mov    ds:0x9a9a4b7c,al
  41bbb3:	and    ebp,DWORD PTR [ecx+0x1976aa19]
  41bbb9:	push   es
  41bbba:	xchg   edx,eax
  41bbbb:	jl     0x41bbfb
  41bbbd:	pop    ebp
  41bbbe:	xor    eax,0x9891449c
  41bbc3:	pop    edx
  41bbc4:	outs   dx,BYTE PTR ds:[esi]
  41bbc5:	xchg   edx,eax
  41bbc6:	mov    al,0xc4
  41bbc8:	in     al,dx
  41bbc9:	jns    0x41bc03
  41bbcb:	cmc    
  41bbcc:	les    ebp,FWORD PTR [edx+0x31]
  41bbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbd0:	idiv   BYTE PTR [esi+eiz*2-0x749935dd]
  41bbd7:	push   esp
  41bbd8:	and    al,0x24
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	push   edi
  41bc02:	rcr    BYTE PTR [eax],cl
  41bc04:	stos   BYTE PTR es:[edi],al
  41bc05:	add    eax,DWORD PTR [ecx+0x12bc1816]
  41bc0b:	sbb    BYTE PTR [eax],bl
  41bc0d:	leave  
  41bc0e:	repnz adc BYTE PTR [ecx],ch
  41bc11:	sbb    BYTE PTR [edi-0x19],0x14
  41bc15:	pop    ds
  41bc16:	cmp    eax,0x6b02a923
  41bc1b:	arpl   WORD PTR [ecx+0x1e02addf],dx
  41bc21:	jmp    FWORD PTR [eax+edx*2+0x41c698f9]
  41bc28:	and    ch,BYTE PTR [ecx]
  41bc2a:	repz sar DWORD PTR [esi+0x10a4c60f],0x57
  41bc32:	shl    DWORD PTR [ebx-0x3e],cl
  41bc35:	loopne 0x41bc22
  41bc37:	jle    0x41bc9a
  41bc39:	iret   
  41bc3a:	dec    ebp
  41bc3b:	mov    dh,0xdb
  41bc3d:	nop
  41bc3e:	lock jb 0x41bc0f
  41bc41:	ds sahf 
  41bc43:	pusha  
  41bc44:	test   BYTE PTR [edi-0x52800779],cl
  41bc4a:	ds call 0x58cd:0x7e205350
  41bc52:	and    cl,BYTE PTR [ebx-0xe88fdee]
  41bc58:	rol    BYTE PTR [edi+0x1a],1
  41bc5b:	pop    ss
  41bc5c:	lds    edi,FWORD PTR [ebx-0x7c]
  41bc5f:	and    cl,bl
  41bc61:	dec    esp
  41bc62:	jle    0x41bcd8
  41bc64:	rol    DWORD PTR [ecx+0x7c],cl
  41bc67:	add    cl,BYTE PTR [ebp+0x70]
  41bc6a:	or     cl,BYTE PTR [edx]
  41bc6c:	out    dx,eax
  41bc6d:	cwde   
  41bc6e:	mov    ah,0xf6
  41bc70:	adc    BYTE PTR [edi],0x2c
  41bc73:	ins    DWORD PTR es:[edi],dx
  41bc74:	popf   
  41bc75:	mov    dl,BYTE PTR [eax-0x59d98651]
  41bc7b:	mov    ebx,0x62487ccf
  41bc80:	mov    ch,0x60
  41bc82:	or     al,0x10
  41bc84:	(bad)  
  41bc85:	mov    ecx,0xe654744
  41bc8a:	int    0xf0
  41bc8c:	ds cld 
  41bc8e:	mov    bl,0xa5
  41bc90:	xchg   esi,eax
  41bc91:	das    
  41bc92:	push   cs
  41bc93:	out    0x52,eax
  41bc95:	add    al,0xb9
  41bc97:	jl     0x41bc35
  41bc99:	out    0x69,eax
  41bc9b:	inc    edi
  41bc9c:	popa   
  41bc9d:	pop    ecx
  41bc9e:	test   DWORD PTR [esi],esp
  41bca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bca1:	dec    edx
  41bca2:	hlt    
  41bca3:	jmp    0x842d3f5c
  41bca8:	cld    
  41bca9:	sbb    dh,BYTE PTR [esi]
  41bcab:	or     dh,0x47
  41bcae:	mov    esp,0x6cb1ed50
  41bcb3:	jmp    0xccb3bb36
  41bcb8:	div    BYTE PTR [ebx+0x6f]
  41bcbb:	clc    
  41bcbc:	stos   DWORD PTR es:[edi],eax
  41bcbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcbe:	in     al,dx
  41bcbf:	pop    es
  41bcc0:	jnp    0x41bc89
  41bcc2:	addr16 mov esi,0xb4bbd01f
  41bcc8:	stos   DWORD PTR es:[edi],eax
  41bcc9:	mov    ebp,edx
  41bccb:	je     0x41bcc4
  41bccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcce:	push   ebp
  41bccf:	xor    cl,BYTE PTR [edx-0x12728b68]
  41bcd5:	lock sub esi,edi
  41bcd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcd9:	pop    ss
  41bcda:	(bad)  
  41bcdb:	test   DWORD PTR [edx+0x2f],ecx
  41bcde:	test   eax,0x87e9b0e2
  41bce3:	pop    esi
  41bce4:	sub    eax,0x441f2520
  41bce9:	pop    edx
  41bcea:	sub    eax,0x91dd2b33
  41bcef:	pop    ebx
  41bcf0:	mov    BYTE PTR [edi+0x74],bh
  41bcf3:	push   0xffffffa1
  41bcf5:	push   edx
  41bcf6:	(bad)  
  41bcf7:	or     BYTE PTR [edx+0x59499f79],al
  41bcfd:	(bad)  
  41bcfe:	outs   dx,DWORD PTR ds:[esi]
  41bcff:	into   
  41bd00:	inc    ebx
  41bd01:	sub    al,0x37
  41bd03:	addr16 push ds
  41bd05:	or     DWORD PTR [ebx+0x4d],eax
  41bd08:	iret   
  41bd09:	int    0xaa
  41bd0b:	adc    al,0xf
  41bd0d:	test   BYTE PTR [edi],dl
  41bd0f:	xchg   edi,eax
  41bd10:	imul   BYTE PTR [ecx+0x14]
  41bd13:	repnz sbb al,0xfc
  41bd16:	add    BYTE PTR [esi-0x7c],0xea
  41bd1a:	push   esi
  41bd1b:	sub    eax,0xc812f265
  41bd20:	pop    ebp
  41bd21:	es ins DWORD PTR es:[edi],dx
  41bd23:	add    DWORD PTR [ebx-0x27],esp
  41bd26:	mov    ebx,0x6efbfa4e
  41bd2b:	fnstcw WORD PTR [ebx+0x72e93ce4]
  41bd31:	int    0x9f
  41bd33:	jp     0x41bdb2
  41bd35:	ret    
  41bd36:	ss push ds
  41bd38:	pop    ss
  41bd39:	jnp    0x41bd2b
  41bd3b:	and    dl,BYTE PTR [edi]
  41bd3d:	mov    ah,0xb5
  41bd3f:	cli    
  41bd40:	inc    edx
  41bd41:	mov    edi,0x93e20841
  41bd46:	mov    eax,ds:0x1a5fa94e
  41bd4b:	fdivp  st(1),st
  41bd4d:	aaa    
  41bd4e:	sub    eax,0x251a0f59
  41bd53:	pushf  
  41bd54:	mov    WORD PTR [esi+0x327c6857],?
  41bd5a:	inc    ebp
  41bd5b:	call   0xfe472698
  41bd60:	(bad)  
  41bd61:	stc    
  41bd62:	adc    eax,ecx
  41bd64:	and    DWORD PTR [edi-0x45],ebx
  41bd67:	or     cl,BYTE PTR [ebx-0x17c9e975]
  41bd6d:	pop    edx
  41bd6e:	xor    DWORD PTR [esp+edi*2-0x6a65419c],ecx
  41bd75:	out    dx,eax
  41bd76:	ins    BYTE PTR es:[edi],dx
  41bd77:	mov    ds:0xe1e48cf5,al
  41bd7c:	jb     0x41bdfd
  41bd7e:	das    
  41bd7f:	inc    edi
  41bd80:	pop    esp
  41bd81:	dec    ebx
  41bd82:	mov    edi,DWORD PTR [edi]
  41bd84:	and    ah,0x1
  41bd87:	scas   eax,DWORD PTR es:[edi]
  41bd88:	sbb    bl,dh
  41bd8a:	push   ecx
  41bd8b:	push   cs
  41bd8c:	fucomp st(0)
  41bd8e:	mov    BYTE PTR [esi+0x2d],dh
  41bd91:	test   al,0x62
  41bd93:	loop   0x41bd7c
  41bd95:	sub    eax,0xb8e27abd
  41bd9a:	jno    0x41bd52
  41bd9c:	(bad)  
  41bd9d:	loopne 0x41bdca
  41bd9f:	int    0x92
  41bda1:	mov    esi,0xecbd57e3
  41bda6:	aaa    
  41bda7:	out    dx,al
  41bda8:	xor    al,0xdf
  41bdaa:	push   es
  41bdab:	lds    ecx,FWORD PTR [eax+0x4f447176]
  41bdb1:	xor    ah,BYTE PTR [edi-0x5e538039]
  41bdb7:	cmp    esi,ebp
  41bdb9:	cld    
  41bdba:	xchg   ebp,eax
  41bdbb:	pop    ds
  41bdbc:	inc    eax
  41bdbd:	mov    esp,0xc941d872
  41bdc2:	leave  
  41bdc3:	jle    0x41be42
  41bdc5:	mov    dh,0x26
  41bdc7:	jnp    0x41be3e
  41bdc9:	xchg   esp,eax
  41bdca:	sti    
  41bdcb:	pop    ebx
  41bdcc:	add    edx,esi
  41bdce:	inc    eax
  41bdcf:	stos   BYTE PTR es:[edi],al
  41bdd0:	lods   al,BYTE PTR ds:[esi]
  41bdd1:	and    esp,DWORD PTR [edi+0xaf3b7e2]
  41bdd7:	adc    DWORD PTR [edx],esi
  41bdd9:	addr16 sub al,0x62
  41bddc:	pop    ebx
  41bddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdde:	shr    DWORD PTR [ebx+0x65],cl
  41bde1:	jno    0x41be15
  41bde3:	fwait
  41bde4:	and    al,0x97
  41bde6:	mov    ebp,0xf466a7ad
  41bdeb:	fs popf 
  41bded:	imul   ecx,DWORD PTR [ebx+0x6],0x6c8e55
  41bdf4:	adc    al,0x3d
  41bdf6:	mov    cl,0xe6
  41bdf8:	outs   dx,BYTE PTR ds:[esi]
  41bdf9:	inc    edi
  41bdfa:	(bad)  
  41bdfb:	pop    ss
  41bdfc:	sbb    DWORD PTR [edx+eax*2],esi
  41bdff:	sbb    al,0x4a
  41be01:	lea    edx,[ecx-0x17df8efc]
  41be07:	push   ebx
  41be08:	add    ebx,DWORD PTR [edx-0x4c]
  41be0b:	daa    
  41be0c:	and    DWORD PTR [edx-0x1a],ecx
  41be0f:	xor    ebx,DWORD PTR [eax]
  41be11:	xchg   ecx,eax
  41be12:	(bad)  
  41be13:	call   0xa789:0xc0cde54
  41be1a:	cld    
  41be1b:	addr16 xchg esp,eax
  41be1d:	outs   dx,DWORD PTR ds:[esi]
  41be1e:	and    DWORD PTR [edx+0x2a51ff00],edi
  41be24:	ds xchg ebx,eax
  41be26:	leave  
  41be27:	lds    eax,FWORD PTR [edi+0x68]
  41be2a:	sub    DWORD PTR [edx-0xa],ebx
  41be2d:	pop    eax
  41be2e:	mov    BYTE PTR [ebx+ecx*4+0x66],dl
  41be32:	pop    esp
  41be33:	xor    eax,0x671e8857
  41be38:	mov    eax,DWORD PTR [eax]
  41be3a:	mov    esp,0x7cf9528c
  41be3f:	retf   
  41be40:	ud1    ecx,DWORD PTR [edx]
  41be43:	jae    0x41be09
  41be45:	cwde   
  41be46:	and    al,0xb
  41be48:	push   es
  41be49:	push   ebx
  41be4a:	rcl    DWORD PTR [esi],1
  41be4c:	les    ebx,FWORD PTR [edi+0x52]
  41be4f:	push   ecx
  41be50:	mov    WORD PTR [edx-0x4242b2c7],?
  41be56:	xchg   esp,eax
  41be57:	iret   
  41be58:	aad    0xe0
  41be5a:	pop    ds
  41be5b:	mov    cl,0x50
  41be5d:	stos   BYTE PTR es:[edi],al
  41be5e:	ror    DWORD PTR [eax],1
  41be60:	ffree  st(3)
  41be62:	fwait
  41be63:	mov    esi,0x76a91d93
  41be68:	punpcklwd mm7,DWORD PTR es:[ebx+0x45]
  41be6d:	out    dx,al
  41be6e:	call   0x609a:0x532230b5
  41be75:	ret    
  41be76:	xchg   DWORD PTR [esi],esp
  41be78:	dec    ecx
  41be79:	mov    ah,0xbd
  41be7b:	dec    edx
  41be7c:	call   0x23d2eb90
  41be81:	rcr    DWORD PTR [edx+0x2f],1
  41be84:	popa   
  41be85:	dec    edi
  41be86:	mov    eax,0xa170c6d4
  41be8b:	sub    eax,0xdd4f15f1
  41be90:	inc    esi
  41be91:	cld    
  41be92:	iret   
  41be93:	popa   
  41be94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be95:	cmp    BYTE PTR [eax-0x53c8ea9b],dl
  41be9b:	mov    ah,0xb4
  41be9d:	(bad)  
  41be9e:	popa   
  41be9f:	(bad)  
  41bea0:	iret   
  41bea1:	mov    esp,0xb63490af
  41bea6:	push   esi
  41bea7:	xchg   ecx,eax
  41bea8:	add    ah,BYTE PTR [ecx]
  41beaa:	pcmpgtw mm4,QWORD PTR [esi+ecx*8]
  41beae:	add    ebp,DWORD PTR [edx+0x28]
  41beb1:	sub    eax,0xce1e5115
  41beb6:	dec    edi
  41beb7:	cmp    eax,0x8f5040ba
  41bebc:	(bad)  
  41bebd:	cwde   
  41bebe:	hlt    
  41bebf:	outs   dx,BYTE PTR ds:[esi]
  41bec0:	scas   eax,DWORD PTR es:[edi]
  41bec1:	cld    
  41bec2:	cmp    ebp,DWORD PTR [edi+0x211d463a]
  41bec8:	xor    BYTE PTR [edx+edi*1+0x5d3b2380],bl
  41becf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bed0:	repnz add DWORD PTR [ebp+0x6a019e0d],ecx
  41bed7:	pop    esp
  41bed8:	mov    edi,0x2d8e720b
  41bedd:	sub    dl,dh
  41bedf:	mov    ebp,0xa77a30bf
  41bee4:	cmp    eax,0x3196b075
  41bee9:	push   cs
  41beea:	dec    esi
  41beeb:	push   cs
  41beec:	or     DWORD PTR [esi],ebp
  41beee:	mov    bl,0x81
  41bef0:	jae    0x41bf30
  41bef2:	push   ecx
  41bef3:	and    cl,BYTE PTR [edx-0x528de02d]
  41bef9:	fist   DWORD PTR [eax]
  41befb:	cli    
  41befc:	dec    esp
  41befd:	mov    cs,WORD PTR [edi-0x4a]
  41bf00:	fs stos DWORD PTR es:[edi],eax
  41bf02:	sub    edx,esp
  41bf04:	inc    ebx
  41bf05:	mov    esi,0x2d8fcb0
  41bf0a:	sbb    ah,ch
  41bf0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf0d:	pop    esi
  41bf0e:	cmp    eax,DWORD PTR [ebp+ebx*8+0x2b]
  41bf12:	push   0x980ad00e
  41bf17:	std    
  41bf18:	mov    cl,BYTE PTR [ecx-0x48]
  41bf1b:	(bad)  
  41bf1c:	(bad)
  41bf1f:	mov    ah,0x3c
  41bf21:	dec    ebx
  41bf22:	xor    eax,0xaf7b40e1
  41bf27:	mov    al,0xf2
  41bf29:	pop    ss
  41bf2a:	in     al,dx
  41bf2b:	xor    ax,0x5ea0
  41bf2f:	xchg   ecx,eax
  41bf30:	mov    eax,ds:0xb387ab1b
  41bf35:	(bad)  
  41bf36:	or     al,0xb7
  41bf38:	mov    ch,0xed
  41bf3a:	or     eax,0xc6e2714a
  41bf3f:	call   0xe802:0x87ed56d2
  41bf46:	push   ebx
  41bf47:	rol    BYTE PTR [ecx],cl
  41bf49:	xchg   esp,eax
  41bf4a:	retf   0x2842
  41bf4d:	mov    DWORD PTR [esi],0xf818a4cc
  41bf53:	mov    edi,0x9f539b42
  41bf58:	xor    DWORD PTR ds:0x6a598cdb,0x1b714acc
  41bf62:	ret    0x25f7
  41bf65:	outs   dx,BYTE PTR ds:[esi]
  41bf66:	xchg   ebp,eax
  41bf67:	push   ds
  41bf68:	cmc    
  41bf69:	pop    esi
  41bf6a:	ins    BYTE PTR es:[edi],dx
  41bf6b:	xor    esp,ebp
  41bf6d:	mov    BYTE PTR [ebx-0x37],ch
  41bf70:	fimul  DWORD PTR [ecx+0x32bb9d60]
  41bf76:	mov    edi,0xb577c8c8
  41bf7b:	jl     0x41bff1
  41bf7d:	ja     0x41bf2f
  41bf7f:	pop    ecx
  41bf80:	cmp    bh,BYTE PTR [esi]
  41bf82:	pop    ds
  41bf83:	repnz and cl,BYTE PTR [edi]
  41bf86:	add    eax,0xb62fe0c8
  41bf8b:	daa    
  41bf8c:	sbb    ah,al
  41bf8e:	loop   0x41bf73
  41bf90:	jl     0x41bf3d
  41bf92:	je     0x41bf7d
  41bf94:	push   0x7ad44a4b
  41bf99:	lods   eax,DWORD PTR ds:[esi]
  41bf9a:	mov    ds:0x75b03a35,al
  41bf9f:	jo     0x41bf8f
  41bfa1:	sub    bh,BYTE PTR [eax+0x6b]
  41bfa4:	cmp    dl,dh
  41bfa6:	fcmovnu st,st(3)
  41bfa8:	dec    esi
  41bfa9:	nop
  41bfaa:	data16 aas 
  41bfac:	push   edx
  41bfad:	inc    ecx
  41bfae:	or     DWORD PTR [esi-0x6e],ecx
  41bfb1:	outs   dx,DWORD PTR ds:[esi]
  41bfb2:	int3   
  41bfb3:	pop    esp
  41bfb4:	mov    DWORD PTR [edi-0x7f4d9480],ebx
  41bfba:	addr16 adc eax,0xb9b02dd1
  41bfc0:	aam    0x57
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	test   BYTE PTR [edx],ch
  41c0f8:	jne    0x41c176
  41c0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0fb:	jns    0x41c113
  41c0fd:	sbb    BYTE PTR [edx+edx*1-0x68f0e7e8],bh
  41c104:	jg     0x41c0e4
  41c106:	pushf  
  41c107:	mov    esp,0x2c55c2b8
  41c10c:	pop    edi
  41c10d:	adc    DWORD PTR [ecx+0x70677b90],esi
  41c113:	sbb    BYTE PTR [esi+0x27],0xe
  41c117:	sbb    al,0x53
  41c119:	cli    
  41c11a:	out    0x29,al
  41c11c:	outs   dx,DWORD PTR ds:[esi]
  41c11d:	add    al,0x43
  41c11f:	push   es
  41c120:	mov    cl,0x37
  41c122:	retf   
  41c123:	loope  0x41c147
  41c125:	repz scas eax,DWORD PTR es:[edi]
  41c127:	rcl    BYTE PTR [ecx-0x1c],1
  41c12a:	jp     0x41c0e5
  41c12c:	push   ss
  41c12d:	jmp    0x41c114
  41c12f:	sbb    DWORD PTR [edx+esi*2+0x309e32a2],edx
  41c136:	or     al,0x99
  41c138:	add    DWORD PTR [esi+0x662959f3],ecx
  41c13e:	inc    esi
  41c13f:	add    al,BYTE PTR [edx+0x7f]
  41c142:	int3   
  41c143:	push   ds
  41c144:	push   cs
  41c145:	test   BYTE PTR [ecx],cl
  41c147:	mov    esi,0x67be229b
  41c14c:	arpl   WORD PTR [ebx+0x3a],dx
  41c14f:	sbb    cl,BYTE PTR [edi]
  41c151:	cmp    dl,ah
  41c153:	dec    esp
  41c154:	das    
  41c155:	dec    ebp
  41c156:	div    BYTE PTR [ebx+edi*4+0x633ae39e]
  41c15d:	dec    esi
  41c15e:	test   BYTE PTR [edi],dh
  41c160:	sar    BYTE PTR [esi+edx*2],0x9d
  41c164:	es mov ecx,0xcc68fd37
  41c16a:	fbld   TBYTE PTR [esi]
  41c16c:	jmp    0x41c1b9
  41c16e:	add    ah,BYTE PTR [ebp+eiz*1+0x65]
  41c172:	addr16 ds (bad) 
  41c175:	pop    ebx
  41c176:	cli    
  41c177:	mov    dl,0x3b
  41c179:	xchg   esi,eax
  41c17a:	cmp    BYTE PTR [edx],ch
  41c17c:	sub    al,0xb1
  41c17e:	stos   DWORD PTR es:[edi],eax
  41c17f:	jg     0x41c145
  41c181:	(bad)  
  41c182:	paddsb mm0,QWORD PTR [ebp+0x1482077d]
  41c189:	not    BYTE PTR [bx-0x5b]
  41c18d:	mov    eax,ds:0x5e1a094
  41c192:	mov    dh,0x91
  41c194:	lea    ebx,[edx-0x712cd018]
  41c19a:	fidivr DWORD PTR [ebx+0x1cf9c3ad]
  41c1a0:	jmp    0xdea7:0xe77cbd5c
  41c1a7:	push   0xc13cd30a
  41c1ac:	test   al,0xa7
  41c1ae:	pop    es
  41c1af:	fucomi st,st(6)
  41c1b1:	xor    al,0x14
  41c1b3:	xchg   BYTE PTR [edx-0x71],al
  41c1b6:	sti    
  41c1b7:	adc    edi,DWORD PTR [edx+edi*8-0x634636e9]
  41c1be:	mov    ebp,0x561e936e
  41c1c3:	loope  0x41c239
  41c1c5:	mov    bl,0x8c
  41c1c7:	retf   
  41c1c8:	mov    esp,0x19695e94
  41c1cd:	adc    eax,ecx
  41c1cf:	mov    ebx,0x65529cc0
  41c1d4:	int    0xaf
  41c1d6:	leave  
  41c1d7:	push   ebx
  41c1d8:	jo     0x41c181
  41c1da:	adc    bl,BYTE PTR [esi-0x455f50df]
  41c1e0:	mov    bh,0x36
  41c1e2:	mov    BYTE PTR [ebx+edi*4],0x2b
  41c1e6:	mov    ch,dl
  41c1e8:	rol    BYTE PTR [edx-0x6abff1dd],1
  41c1ee:	ins    DWORD PTR es:[edi],dx
  41c1ef:	adc    eax,0xc5c55f43
  41c1f4:	popa   
  41c1f5:	addr16 test eax,ecx
  41c1f8:	xor    DWORD PTR [ecx+0x58f90ce6],ebp
  41c1fe:	fadd   st(1),st
  41c200:	ins    DWORD PTR es:[edi],dx
  41c201:	les    edi,FWORD PTR ds:0x514828cb
  41c207:	mov    ds:0x6d75189a,eax
  41c20c:	into   
  41c20d:	dec    esi
  41c20e:	mov    eax,0xff3c6708
  41c213:	push   eax
  41c214:	add    DWORD PTR [ebx-0x6e],eax
  41c217:	adc    BYTE PTR [ebp-0x5e1d9272],0x3a
  41c21e:	jp     0x41c27b
  41c220:	ror    BYTE PTR [esi+0x7],1
  41c223:	sub    dh,BYTE PTR [edx-0xe]
  41c226:	inc    eax
  41c227:	(bad)  
  41c228:	faddp  st(1),st
  41c22a:	dec    ecx
  41c22b:	(bad)  
  41c22c:	rcl    DWORD PTR [edi],1
  41c22e:	outs   dx,DWORD PTR ds:[esi]
  41c22f:	stos   DWORD PTR es:[edi],eax
  41c230:	or     BYTE PTR ss:[esi-0x7eb01a6c],dh
  41c237:	push   esp
  41c238:	adc    al,BYTE PTR [eax-0x2faa94b9]
  41c23e:	dec    ebp
  41c23f:	add    esi,DWORD PTR [ebp-0x193d7a78]
  41c245:	in     al,0xa0
  41c247:	sub    DWORD PTR [ebp+0x5eb053b8],esp
  41c24d:	les    esi,FWORD PTR ds:0x24cd8a7b
  41c253:	inc    edx
  41c254:	xchg   ecx,eax
  41c255:	(bad)  
  41c256:	clc    
  41c257:	mov    edi,ecx
  41c259:	out    0x96,al
  41c25b:	push   ebp
  41c25c:	pop    ds
  41c25d:	push   ebx
  41c25e:	loope  0x41c25e
  41c260:	jmp    0x41c23f
  41c262:	or     eax,0x935bde5
  41c267:	in     al,0x27
  41c269:	lds    edx,FWORD PTR [edi+0x74]
  41c26c:	push   eax
  41c26d:	or     al,0xfa
  41c26f:	xchg   ecx,eax
  41c270:	and    eax,0x15357759
  41c275:	push   esi
  41c276:	dec    ecx
  41c277:	adc    ch,ah
  41c279:	push   cs
  41c27a:	and    ah,BYTE PTR [edi-0xf935bcd]
  41c280:	lods   eax,DWORD PTR ds:[esi]
  41c281:	and    eax,0x99772262
  41c287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c288:	fcomp  DWORD PTR [eax]
  41c28a:	or     eax,0xd8dfb84
  41c28f:	mov    al,ds:0xeefa75ab
  41c294:	bound  eax,QWORD PTR [esi-0x56]
  41c297:	cs adc al,0x2d
  41c29a:	shl    BYTE PTR [edi+0x16],1
  41c29d:	sbb    ecx,DWORD PTR [esi-0x5348f22e]
  41c2a3:	into   
  41c2a4:	shl    DWORD PTR [ecx],1
  41c2a6:	cmp    BYTE PTR [esi-0x6c],dl
  41c2a9:	add    al,0x85
  41c2ab:	mov    ds:0x26d29269,al
  41c2b0:	lahf   
  41c2b1:	add    BYTE PTR [esi+0x63c032a9],dl
  41c2b7:	add    al,0xf4
  41c2b9:	or     bl,BYTE PTR [edx]
  41c2bb:	xor    eax,0x883aed3f
  41c2c0:	popa   
  41c2c1:	pop    edx
  41c2c2:	and    esi,DWORD PTR [ebx+0x4a]
  41c2c5:	mov    ch,0x3a
  41c2c7:	cmp    DWORD PTR [ecx],ebx
  41c2c9:	dec    ebp
  41c2ca:	mov    edx,0xd1dcca7f
  41c2cf:	sbb    edx,ecx
  41c2d1:	adc    al,0x37
  41c2d3:	test   BYTE PTR [edi],ch
  41c2d5:	popa   
  41c2d6:	push   es
  41c2d7:	arpl   WORD PTR [ebx-0x25],bp
  41c2da:	fbstp  TBYTE PTR [edi-0x7b]
  41c2dd:	out    dx,eax
  41c2de:	mov    esi,?
  41c2e0:	in     al,0xe4
  41c2e2:	nop
  41c2e3:	retf   0xe74b
  41c2e6:	push   esp
  41c2e7:	push   ss
  41c2e8:	and    ah,BYTE PTR [ecx]
  41c2ea:	xchg   ebp,eax
  41c2eb:	mov    ecx,0x5c9037df
  41c2f0:	cmp    al,dh
  41c2f2:	adc    eax,0x7f1c9e32
  41c2f7:	lea    esi,[edx+0x39]
  41c2fa:	push   ds
  41c2fb:	push   esi
  41c2fc:	inc    ebp
  41c2fd:	loope  0x41c334
  41c2ff:	xor    dl,cl
  41c301:	mov    al,ds:0x94c299bc
  41c306:	mov    DWORD PTR [esi-0xf],ebx
  41c309:	mov    ss,WORD PTR [ebp-0x45a7dd21]
  41c30f:	pop    esi
  41c310:	mov    esi,0x911f0e1f
  41c315:	ret    
  41c316:	cmp    DWORD PTR [esi],esp
  41c318:	sti    
  41c319:	clc    
  41c31a:	add    BYTE PTR [eax+0x3b20cc7b],dh
  41c320:	fisub  DWORD PTR [edx]
  41c322:	loope  0x41c387
  41c324:	popa   
  41c325:	test   eax,0xf8c224ee
  41c32a:	add    ebx,DWORD PTR es:[eax+ebx*4-0x13]
  41c32f:	iret   
  41c330:	fcomp  QWORD PTR [esi+esi*2]
  41c333:	add    edi,eax
  41c335:	fcomp  QWORD PTR [esi+0x58ac173f]
  41c33b:	addr16 lahf 
  41c33d:	jnp    0x41c2ed
  41c33f:	outs   dx,BYTE PTR ds:[esi]
  41c340:	idiv   BYTE PTR [esi-0xb]
  41c343:	mov    al,0x6
  41c345:	ins    BYTE PTR es:[edi],dx
  41c346:	mov    ah,al
  41c348:	out    dx,al
  41c349:	or     bl,BYTE PTR [ecx]
  41c34b:	and    eax,0xbca6d883
  41c350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c351:	(bad)  
  41c352:	loopne 0x41c2da
  41c354:	fs pusha 
  41c356:	lods   eax,DWORD PTR ds:[esi]
  41c357:	(bad)  [eax-0x5c]
  41c35a:	cmp    al,0x68
  41c35c:	mov    BYTE PTR [edi-0x7780d6e],0x34
  41c363:	test   DWORD PTR [esp+edi*8],ebx
  41c366:	cmp    BYTE PTR [ebx-0x2f],al
  41c369:	push   ecx
  41c36a:	sbb    eax,0x5479bdbc
  41c36f:	cmp    al,0x2c
  41c371:	cmp    DWORD PTR [ecx-0x4d4c024],esi
  41c377:	xchg   BYTE PTR [ecx+0x7a],ch
  41c37a:	ss mov al,0x94
  41c37d:	or     BYTE PTR [eax],al
  41c37f:	dec    BYTE PTR [edx-0x4f60c4f2]
  41c385:	add    al,0xa7
  41c387:	jbe    0x41c3a9
  41c389:	inc    eax
  41c38a:	add    al,0xd9
  41c38c:	jne    0x41c3e2
  41c38e:	out    dx,eax
  41c38f:	out    dx,eax
  41c390:	das    
  41c391:	ds rdmsr 
  41c394:	imul   edi,DWORD PTR [esi-0xaab11ac],0x43b99bdd
  41c39e:	or     dh,dh
  41c3a0:	(bad)  
  41c3a2:	lods   al,BYTE PTR ds:[esi]
  41c3a3:	xchg   DWORD PTR [ebp-0x18],ebp
  41c3a6:	pusha  
  41c3a7:	mov    edi,0x53308585
  41c3ac:	retf   0x397b
  41c3af:	jnp    0x41c419
  41c3b1:	jle    0x41c3ae
  41c3b3:	jle    0x41c42d
  41c3b5:	ins    BYTE PTR es:[edi],dx
  41c3b6:	adc    BYTE PTR [edx*4-0x2b2af61b],ch
  41c3bd:	dec    edi
  41c3be:	mov    ds:0xc036ca5,al
  41c3c3:	clc    
  41c3c4:	(bad)  
  41c3c5:	mov    al,ds:0x41726d2
  41c3ca:	mov    bh,0x13
  41c3cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3cd:	sub    BYTE PTR [eax],al
  41c3cf:	xor    dh,BYTE PTR [edx+0x7abab526]
  41c3d5:	(bad)  [ebx]
  41c3d7:	mov    edi,0x5d3acea7
  41c3dc:	repnz xor al,0x7a
  41c3df:	repnz xchg esi,eax
  41c3e1:	call   0xebee0ae0
  41c3e6:	dec    eax
  41c3e7:	mov    BYTE PTR [esi+0x7e89f5b4],dh
  41c3ed:	fdiv   QWORD PTR [bx+di-0x40]
  41c3f1:	loope  0x41c38f
  41c3f3:	dec    esp
  41c3f4:	fistp  QWORD PTR [edx-0x2f93cbcf]
  41c3fa:	mov    ds:0x82abbb90,eax
  41c3ff:	cmp    edx,DWORD PTR [edx+0x58]
  41c402:	out    0xd2,eax
  41c404:	mov    dh,0xac
  41c406:	stos   DWORD PTR es:[edi],eax
  41c407:	adc    BYTE PTR [eax-0x1e],0x28
  41c40b:	and    DWORD PTR [esp+ecx*2-0x23760178],esi
  41c412:	sbb    bl,BYTE PTR [eax-0x72]
  41c415:	outs   dx,BYTE PTR ds:[esi]
  41c416:	push   es
  41c417:	adc    ebx,DWORD PTR [ecx+0xd]
  41c41a:	mov    ds:0xc496fba3,eax
  41c41f:	xchg   esi,eax
  41c420:	jmp    0x41c457
  41c422:	arpl   WORD PTR [ebp+0x4f],bp
  41c425:	clc    
  41c426:	fsubrp st(5),st
  41c428:	adc    BYTE PTR [edi-0x42],dl
  41c42b:	and    edi,DWORD PTR [ecx+0x3d]
  41c42e:	lahf   
  41c42f:	scas   eax,DWORD PTR es:[edi]
  41c430:	ret    
  41c431:	fiadd  DWORD PTR [ebx-0x7d45255e]
  41c437:	cmp    BYTE PTR [edi+0x2f],0xa2
  41c43b:	popf   
  41c43c:	and    dh,BYTE PTR [esi+0x43]
  41c43f:	stos   BYTE PTR es:[edi],al
  41c440:	iret   
  41c441:	mov    al,BYTE PTR [edi]
  41c443:	(bad)  
  41c444:	jp     0x41c410
  41c446:	xor    DWORD PTR [edx+0x5f],esi
  41c449:	sub    bh,dl
  41c44b:	out    dx,eax
  41c44c:	or     al,0xb3
  41c44e:	or     DWORD PTR ds:0x4f125313,ebp
  41c454:	(bad)  
  41c455:	daa    
  41c456:	nop
  41c457:	mov    dh,0xdf
  41c459:	and    eax,0x4d6e52e7
  41c45e:	je     0x41c4ac
  41c460:	cmp    al,0xa
  41c462:	shr    ecx,1
  41c464:	hlt    
  41c465:	stc    
  41c466:	or     BYTE PTR [edx+0x6699f353],bl
  41c46c:	cmp    bh,0xc4
  41c46f:	dec    eax
  41c470:	test   BYTE PTR [eax+0x6a],bl
  41c473:	jnp    0x41c4dc
  41c475:	lods   eax,DWORD PTR ds:[esi]
  41c476:	jmp    FWORD PTR [edi-0x5a974174]
  41c47c:	call   0x4d239e16
  41c481:	shr    bh,cl
  41c483:	add    DWORD PTR [ebp-0x4c],eax
  41c486:	cmp    edx,DWORD PTR [ebx+eiz*1]
  41c489:	mov    ebx,0x579523d9
  41c48e:	xchg   edi,eax
  41c48f:	call   0x35cb0892
  41c494:	dec    ebx
  41c495:	mov    al,0xa8
  41c497:	repnz dec ebx
  41c499:	dec    edi
  41c49a:	add    DWORD PTR [ebp-0x56],0xfffffff4
  41c49e:	adc    DWORD PTR [edi+0x4],0xb2e7c275
  41c4a5:	mov    edi,0xf57f5225
  41c4aa:	addr16 (bad) 
  41c4ac:	sar    BYTE PTR [edi+0x12],0xe7
  41c4b0:	(bad)  
  41c4b1:	sub    bh,BYTE PTR [esi-0x12]
  41c4b4:	call   0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4ae
  41c4cb:	jae    0x41c4a0
  41c4cd:	mov    esp,0x1816734a
  41c4d2:	mov    esp,0x98181812
  41c4d7:	je     0x41c4dc
  41c4d9:	loope  0x41c4ba
  41c4db:	jmp    0x41c545
  41c4dd:	icebp  
  41c4de:	push   esp
  41c4df:	mov    ebp,0x3bf639f1
  41c4e4:	cmp    al,0x95
  41c4e6:	mov    esp,0xdf97e21
  41c4eb:	mov    ebp,0x2ce546d2
  41c4f0:	sub    BYTE PTR [esi-0x23],dh
  41c4f3:	push   ebx
  41c4f4:	hlt    
  41c4f5:	xlat   BYTE PTR ds:[ebx]
  41c4f6:	stos   BYTE PTR es:[edi],al
  41c4f7:	(bad)  
  41c4f8:	cmp    eax,0x5f0a9533
  41c4fd:	bound  edx,QWORD PTR [esi+esi*1-0x2e]
  41c501:	fwait
  41c502:	call   0xb219:0x3715e310
  41c509:	mov    al,ds:0x3a83e568
  41c50e:	cmp    al,0x9a
  41c510:	mov    dh,0xd5
  41c512:	fsub   QWORD PTR [di]
  41c515:	or     ebp,DWORD PTR [edi-0x64c97b67]
  41c51b:	repz call 0x335d7837
  41c521:	inc    edx
  41c522:	sbb    ebx,DWORD PTR [eax+0x7f]
  41c525:	scas   al,BYTE PTR es:[edi]
  41c526:	jne    0x41c52c
  41c528:	cdq    
  41c529:	into   
  41c52a:	retf   
  41c52b:	ins    BYTE PTR es:[edi],dx
  41c52c:	adc    eax,0xcabc2af9
  41c531:	pop    eax
  41c532:	fdivr  st,st(5)
  41c534:	mov    ch,0xf2
  41c536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c537:	fdiv   st(5),st
  41c539:	jge    0x41c4f0
  41c53b:	pop    ds
  41c53c:	xchg   dh,dl
  41c53e:	cmp    al,BYTE PTR [ecx-0x2526495]
  41c544:	xchg   BYTE PTR [esi],cl
  41c546:	je     0x2d6fb832
  41c54c:	push   eax
  41c54d:	fst    QWORD PTR [ebp+0x6f]
  41c550:	adc    esi,DWORD PTR [ebx]
  41c552:	add    ebx,DWORD PTR ds:0xd8e0113f
  41c558:	aad    0xd0
  41c55a:	stos   DWORD PTR es:[edi],eax
  41c55b:	retf   
  41c55c:	adc    eax,0xedd17739
  41c561:	xor    eax,0x8778040b
  41c566:	cdq    
  41c567:	rcl    BYTE PTR [edi-0x4b],0xcc
  41c56b:	pop    edi
  41c56c:	inc    edi
  41c56d:	sbb    ebx,DWORD PTR [ecx-0x6b]
  41c570:	(bad)  
  41c571:	ss xchg esi,eax
  41c573:	jno    0x41c583
  41c575:	xchg   ebp,eax
  41c576:	xchg   BYTE PTR [ecx-0x10],bl
  41c579:	cli    
  41c57a:	jl     0x41c539
  41c57c:	push   esp
  41c57d:	outs   dx,BYTE PTR ds:[esi]
  41c57e:	in     al,0xef
  41c580:	sti    
  41c581:	pushf  
  41c582:	dec    esi
  41c583:	mov    eax,ds:0x26802dc9
  41c588:	or     ch,BYTE PTR [ecx-0x3e991fc5]
  41c58e:	pop    ecx
  41c58f:	test   eax,0x8a08924c
  41c594:	retf   
  41c595:	icebp  
  41c596:	stc    
  41c597:	inc    esi
  41c598:	cmp    esi,DWORD PTR [ebx+ebp*2]
  41c59b:	ror    edi,cl
  41c59d:	retf   
  41c59e:	jmp    0xc4381273
  41c5a3:	xlat   BYTE PTR ds:[ebx]
  41c5a4:	loop   0x41c61d
  41c5a6:	adc    esi,DWORD PTR [edx]
  41c5a8:	dec    esp
  41c5a9:	pop    ebp
  41c5aa:	push   es
  41c5ab:	push   esi
  41c5ac:	scas   al,BYTE PTR es:[edi]
  41c5ad:	xor    ch,ah
  41c5af:	mov    eax,0xbdffb29e
  41c5b4:	arpl   WORD PTR [ebp+0x6e552011],bp
  41c5ba:	mov    ecx,0xdc965ba2
  41c5bf:	or     eax,0x6b6b84f6
  41c5c4:	cld    
  41c5c5:	mov    cl,0x6c
  41c5c7:	xor    DWORD PTR [eax-0xd],0x3dea979
  41c5ce:	shl    esi,0xd8
  41c5d1:	rol    BYTE PTR [edi+0x9],0xd7
  41c5d5:	mov    WORD PTR [ebp+0x4237d83f],gs
  41c5db:	and    al,0x64
  41c5dd:	mov    al,ds:0x6884a2c1
  41c5e2:	(bad)  
  41c5e3:	mov    ebx,esp
  41c5e5:	faddp  st(4),st
  41c5e7:	stc    
  41c5e8:	add    eax,0xf6368850
  41c5ed:	cmp    bh,dh
  41c5ef:	push   ss
  41c5f0:	loope  0x41c5a1
  41c5f2:	(bad)  
  41c5f3:	xor    esi,esp
  41c5f5:	repz pop ebx
  41c5f7:	fisubr DWORD PTR [ebx-0x52]
  41c5fa:	add    ch,BYTE PTR fs:[ecx]
  41c5fd:	dec    esp
  41c5fe:	lds    ecx,FWORD PTR [ebp-0x19]
  41c601:	or     cl,BYTE PTR [ebp+0x44bf3bed]
  41c607:	sub    ebp,ebx
  41c609:	sti    
  41c60a:	out    0x67,al
  41c60c:	jns    0x41c5c8
  41c60e:	sub    ah,BYTE PTR [edx+0x2d477a09]
  41c614:	(bad)
  41c619:	sub    BYTE PTR ds:0xe23e2a51,ah
  41c61f:	inc    esi
  41c620:	and    al,0x0
  41c622:	aas    
  41c623:	lods   al,BYTE PTR ds:[esi]
  41c624:	pop    edi
  41c625:	js     0x41c5b9
  41c627:	or     eax,0xd492a644
  41c62c:	mov    al,0x5d
  41c62e:	es aas 
  41c630:	loop   0x41c66c
  41c632:	sbb    eax,0x8d41f9e5
  41c637:	arpl   WORD PTR [edx-0x559e44da],ax
  41c63d:	cmp    BYTE PTR [edx],0x6
  41c640:	cwde   
  41c641:	imul   eax,DWORD PTR [esi],0x6c9bb1e0
  41c647:	cs jae 0x41c612
  41c64a:	or     eax,0x8bdfda6e
  41c64f:	adc    BYTE PTR [ecx+ebp*4],0xed
  41c653:	add    dh,BYTE PTR [edi]
  41c655:	lea    ecx,[eax-0x18]
  41c658:	xchg   esp,eax
  41c659:	ds (bad) 
  41c65b:	cdq    
  41c65c:	sahf   
  41c65d:	mov    eax,ds:0xc870c20a
  41c662:	adc    DWORD PTR [eax-0x5bcbef86],edx
  41c668:	inc    esi
  41c669:	stos   BYTE PTR es:[edi],al
  41c66a:	test   DWORD PTR ds:0x39e6e8ae,esp
  41c670:	out    dx,eax
  41c671:	xchg   edi,eax
  41c672:	pushf  
  41c673:	hlt    
  41c674:	cld    
  41c675:	mov    cl,0xac
  41c677:	sbb    BYTE PTR [esi],al
  41c679:	sbb    al,0xcb
  41c67b:	pop    ebp
  41c67c:	(bad)  
  41c67e:	inc    esi
  41c67f:	int3   
  41c680:	add    eax,0x5395b2f2
  41c685:	in     eax,0x8e
  41c687:	adc    DWORD PTR cs:[edx+0x27],edi
  41c68b:	xchg   esp,eax
  41c68c:	cwde   
  41c68d:	or     al,0xb6
  41c68f:	inc    esi
  41c690:	push   esi
  41c691:	mov    ds:0x85070ec4,eax
  41c696:	mov    eax,ds:0xf6b7b4cc
  41c69b:	inc    esi
  41c69c:	pmulhuw mm3,QWORD PTR [eax-0x38]
  41c6a0:	in     eax,0xb4
  41c6a2:	xchg   esi,eax
  41c6a3:	push   0x9e2816e8
  41c6a8:	cwde   
  41c6a9:	inc    eax
  41c6aa:	rcl    DWORD PTR [ecx],1
  41c6ac:	retf   
  41c6ad:	ins    BYTE PTR es:[edi],dx
  41c6ae:	iret   
  41c6af:	stos   BYTE PTR es:[edi],al
  41c6b0:	sbb    esp,DWORD PTR [ebx+0x12]
  41c6b3:	xor    eax,0xe1ba8a37
  41c6b8:	lahf   
  41c6b9:	pop    ds
  41c6ba:	loopne 0x41c721
  41c6bc:	push   ecx
  41c6bd:	or     edi,ebx
  41c6bf:	or     al,0x48
  41c6c1:	pushf  
  41c6c2:	push   ecx
  41c6c3:	xchg   edx,eax
  41c6c4:	pop    edi
  41c6c5:	mov    ds,edx
  41c6c7:	xchg   edi,eax
  41c6c8:	test   DWORD PTR [edx-0x58150948],0x77532c02
  41c6d2:	addr16 std 
  41c6d4:	push   eax
  41c6d5:	mov    al,0xe8
  41c6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d8:	sub    al,0x9c
  41c6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6db:	push   edx
  41c6dc:	in     al,0xc1
  41c6de:	int    0x5e
  41c6e0:	add    dl,ch
  41c6e2:	add    ebx,DWORD PTR [edi+0x12]
  41c6e5:	adc    eax,0x2b3d95a8
  41c6ea:	fild   DWORD PTR [ebx+0x7bae00d9]
  41c6f0:	mov    eax,ds:0xf60bab41
  41c6f5:	dec    ebx
  41c6f6:	rcr    DWORD PTR [esi],0xf4
  41c6f9:	xchg   ecx,eax
  41c6fa:	and    esi,ebp
  41c6fc:	or     DWORD PTR [ebx+0x5],edi
  41c6ff:	mov    ds:0xc5a9c7bd,eax
  41c704:	es adc esi,ebp
  41c707:	push   cs
  41c708:	and    eax,0xc2116f64
  41c70d:	jp     0x41c6f0
  41c70f:	repnz jmp 0x601f:0x7db84e3b
  41c717:	stc    
  41c718:	pop    es
  41c719:	lahf   
  41c71a:	jmp    0x41c6d6
  41c71c:	fbstp  TBYTE PTR [eax]
  41c71e:	cs mov esp,0x9305a1c
  41c724:	add    al,0x9d
  41c726:	jb     0x41c714
  41c728:	fdivr  DWORD PTR [esi+0x2e]
  41c72b:	call   0xcb76:0x63ab2650
  41c732:	dec    eax
  41c733:	add    BYTE PTR [edx],dh
  41c735:	pop    ebx
  41c736:	pop    es
  41c737:	aad    0xb
  41c739:	pop    ss
  41c73a:	out    dx,eax
  41c73b:	sub    eax,0xa3d4bcf8
  41c740:	xchg   ecx,eax
  41c741:	xchg   edx,eax
  41c742:	cmp    ebx,DWORD PTR [ebx+0x1d]
  41c745:	adc    ecx,DWORD PTR [eax+0x10]
  41c748:	add    dh,ch
  41c74a:	sbb    al,BYTE PTR [eax+0x71]
  41c74d:	xchg   edx,eax
  41c74e:	icebp  
  41c74f:	pop    edx
  41c750:	xchg   esi,eax
  41c751:	test   DWORD PTR ds:0xf8a38ecd,0xcf34b6ea
  41c75b:	mov    ebp,0xd2b162f8
  41c760:	int    0x9b
  41c762:	jnp    0x41c790
  41c764:	mov    sp,0x7566
  41c768:	sub    BYTE PTR ds:0x3b9f5c29,ah
  41c76e:	adc    al,0x3c
  41c770:	sbb    eax,0x80c2a897
  41c775:	and    DWORD PTR [ebx],ebx
  41c777:	push   eax
  41c778:	aaa    
  41c779:	stos   DWORD PTR es:[edi],eax
  41c77a:	mov    ecx,0x35f01abc
  41c77f:	mov    ?,WORD PTR [ecx]
  41c781:	mov    ebp,0xc93940d9
  41c786:	adc    BYTE PTR [edi+0x6],bl
  41c789:	out    0x3e,al
  41c78b:	les    ecx,FWORD PTR [eax]
  41c78d:	push   edi
  41c78e:	mov    dh,BYTE PTR [edx]
  41c790:	(bad)  
  41c791:	popa   
  41c792:	dec    esi
  41c793:	mov    ch,0xe5
  41c795:	cmc    
  41c796:	sub    al,dl
  41c798:	xor    DWORD PTR [ecx+0x385987cf],0x5
  41c79f:	mov    DWORD PTR [eax+0x24],edi
  41c7a2:	addr16 ss js 0x41c80d
  41c7a6:	sub    al,dh
  41c7a8:	cs pushf 
  41c7aa:	test   BYTE PTR [ebx],ch
  41c7ac:	push   cs
  41c7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ae:	sbb    ah,al
  41c7b0:	lds    ebx,FWORD PTR ds:0x81998178
  41c7b6:	cmp    ch,BYTE PTR [esi+0x7d03bd60]
  41c7bc:	inc    eax
  41c7bd:	or     eax,0xf3486c61
  41c7c2:	add    DWORD PTR [ebp-0x1512bbaa],eax
  41c7c8:	dec    edx
  41c7c9:	dec    ecx
  41c7ca:	adc    BYTE PTR [edi],dl
  41c7cc:	dec    ebp
  41c7cd:	fst    QWORD PTR [ebx-0x35]
  41c7d0:	xchg   edx,eax
  41c7d1:	outs   dx,BYTE PTR ds:[esi]
  41c7d2:	arpl   WORD PTR [ebx],di
  41c7d4:	sub    BYTE PTR [ebx+eax*8+0x127ed01f],bh
  41c7db:	in     al,dx
  41c7dc:	or     BYTE PTR [esi+esi*4],ah
  41c7df:	jmp    0x41c7af
  41c7e1:	jmp    0x41c76a
  41c7e3:	out    0xf5,al
  41c7e5:	mov    WORD PTR [edx-0x70b7e721],cs
  41c7eb:	push   es
  41c7ec:	fidivr WORD PTR [ebx+0x2c588cfd]
  41c7f2:	jb     0x41c7e9
  41c7f4:	push   ebx
  41c7f5:	jl     0x41c824
  41c7f7:	mov    esp,0xf1237946
  41c7fc:	sbb    bl,BYTE PTR [ecx]
  41c7fe:	arpl   WORD PTR ds:0x6c63698a,dx
  41c804:	out    dx,eax
  41c805:	call   0x7a43:0x8e758f16
  41c80c:	xor    ebx,DWORD PTR [ebx]
  41c80e:	loopne 0x41c877
  41c810:	aaa    
  41c811:	test   BYTE PTR [edx-0x3b],bh
  41c814:	pop    edi
  41c815:	mov    cl,0x12
  41c817:	xchg   ecx,eax
  41c818:	int    0xd8
  41c81a:	je     0x41c883
  41c81c:	lock ret 
  41c81e:	aas    
  41c81f:	stos   BYTE PTR es:[edi],al
  41c820:	dec    ebx
  41c821:	jns    0x41c7e2
  41c823:	adc    eax,0x7df36223
  41c828:	add    edi,edx
  41c82a:	dec    ebx
  41c82b:	cmp    bl,dh
  41c82d:	pop    eax
  41c82e:	dec    ecx
  41c82f:	pop    ecx
  41c830:	das    
  41c831:	aad    0x48
  41c833:	push   0xffffffcc
  41c835:	sub    esp,DWORD PTR [ecx-0x6b189dc5]
  41c83b:	ins    DWORD PTR es:[edi],dx
  41c83c:	mov    edx,0xcb6571d4
  41c841:	ror    BYTE PTR [ebx-0x5f814fbe],0x95
  41c848:	imul   eax,DWORD PTR [eax+esi*4-0x6c6788e6],0x98ace951
  41c853:	sub    eax,0xabc933f6
  41c858:	cld    
  41c859:	jnp    0x41c83c
  41c85b:	and    DWORD PTR [ebp+0x40],edi
  41c85e:	push   eax
  41c85f:	xor    BYTE PTR [ecx],cl
  41c861:	es enter 0xdbe4,0x7
  41c866:	fild   WORD PTR [ebp+0xc5bcc8b]
  41c86c:	mov    ecx,0x5ecfd50c
  41c871:	jb     0x41c8d0
  41c873:	lahf   
  41c874:	test   eax,0xa7c803f3
  41c879:	push   esi
  41c87a:	lds    edi,FWORD PTR [eax-0xd91173]
  41c880:	icebp  
  41c881:	xor    eax,0x64e74e75
  41c886:	mov    dh,0x0
  41c888:	push   DWORD PTR [esp+0x74]
  41c88c:	push   DWORD PTR [esp+0x74]
  41c890:	push   DWORD PTR [esp+0x24]
  41c894:	push   DWORD PTR [esp+0x24]
  41c898:	call   0x415a06
  41c89d:	mov    edx,DWORD PTR [esp+0x18]
  41c8a1:	mov    eax,DWORD PTR [esp+0x1c]
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	lea    esp,[eax]
  41c93d:	scas   eax,DWORD PTR es:[edi]
  41c93e:	mov    al,0xef
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0xb0181812
  41c948:	cmp    esi,DWORD PTR [esi+0x31]
  41c94b:	jnp    0x41c8ce
  41c94d:	lahf   
  41c94e:	mov    esp,0x582953d6
  41c953:	mov    cl,0xa3
  41c955:	sub    esi,eax
  41c957:	mov    edx,0x168a2028
  41c95c:	icebp  
  41c95d:	test   BYTE PTR [edx],bh
  41c95f:	ror    DWORD PTR [eax],0x1b
  41c962:	inc    eax
  41c963:	stc    
  41c964:	mov    eax,0x5bd7a7de
  41c969:	sub    eax,0xbc0047f
  41c96e:	test   al,0x36
  41c970:	or     edx,esi
  41c972:	icebp  
  41c973:	and    BYTE PTR [eax],0xc8
  41c976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c977:	lods   eax,DWORD PTR ds:[esi]
  41c978:	dec    edx
  41c979:	mov    al,0x6e
  41c97b:	xor    ebx,ecx
  41c97d:	sub    eax,0x57feb0fe
  41c982:	dec    esp
  41c983:	mov    ebx,0x6e152382
  41c988:	or     al,0x9
  41c98a:	outs   dx,DWORD PTR ds:[esi]
  41c98b:	enter  0x9592,0x36
  41c98f:	paddsb mm7,QWORD PTR [edx+0x70]
  41c993:	loop   0x41c98c
  41c995:	mov    al,ds:0x98bc0f61
  41c99a:	xchg   ebp,eax
  41c99b:	jecxz  0x41c95d
  41c99d:	cdq    
  41c99e:	lahf   
  41c99f:	out    0x32,al
  41c9a1:	jecxz  0x41c9d9
  41c9a3:	arpl   WORD PTR [edx+0x5a910164],bp
  41c9a9:	addr16 jl 0x41c9fb
  41c9ac:	adc    DWORD PTR [edi+0x19c3f532],ecx
  41c9b2:	mov    ah,0xdd
  41c9b4:	push   0x2c687a61
  41c9b9:	loopne 0x41ca18
  41c9bb:	ret    
  41c9bc:	bound  esi,QWORD PTR [ebx-0x12fcd8f4]
  41c9c2:	pop    ds
  41c9c3:	add    DWORD PTR [esp+ebp*4-0x63],esi
  41c9c7:	dec    ebx
  41c9c8:	add    al,0xc9
  41c9ca:	aad    0xb6
  41c9cc:	(bad)  
  41c9cd:	jg     0x41c985
  41c9cf:	(bad)  
  41c9d0:	das    
  41c9d1:	and    edi,DWORD PTR [eax]
  41c9d3:	jecxz  0x41c9c1
  41c9d5:	dec    eax
  41c9d6:	xchg   ebx,eax
  41c9d7:	fisubr WORD PTR [ebx+0x596552c5]
  41c9dd:	fidivr DWORD PTR [edx-0x5a]
  41c9e0:	mov    eax,0xc35965dc
  41c9e5:	stos   DWORD PTR es:[edi],eax
  41c9e6:	repz retf 
  41c9e8:	out    0xff,al
  41c9ea:	sbb    eax,0xdc11870f
  41c9ef:	ret    0xc211
  41c9f2:	cdq    
  41c9f3:	outs   dx,DWORD PTR ds:[esi]
  41c9f4:	pop    es
  41c9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f6:	sti    
  41c9f7:	ret    
  41c9f8:	dec    edi
  41c9f9:	inc    esp
  41c9fa:	dec    eax
  41c9fb:	adc    BYTE PTR [edi],dl
  41c9fd:	out    0x86,eax
  41c9ff:	lods   al,BYTE PTR ds:[esi]
  41ca00:	ror    BYTE PTR [edi-0x712dc22e],cl
  41ca06:	rcl    BYTE PTR [ebx],cl
  41ca08:	and    cl,0xa0
  41ca0b:	div    DWORD PTR [edi+0x5de3b24]
  41ca11:	jge    0x41ca45
  41ca13:	ret    0x7aa7
  41ca16:	add    dl,BYTE PTR [esi]
  41ca18:	jmp    0xa79ec4c2
  41ca1d:	imul   eax,DWORD PTR [ecx+edx*4+0x10],0xac736063
  41ca25:	shl    DWORD PTR [ebp-0x28],0x8e
  41ca29:	mov    BYTE PTR [esi-0x6c93f8df],al
  41ca2f:	imul   ecx
  41ca31:	xor    eax,0xad91c612
  41ca36:	mov    cs,edi
  41ca38:	pushf  
  41ca39:	jbe    0x41c9bf
  41ca3b:	xchg   BYTE PTR [ebx-0x53bb268a],ah
  41ca41:	jp     0x41c9da
  41ca43:	(bad)  
  41ca44:	and    eax,0x8c139f70
  41ca49:	adc    al,0x4
  41ca4b:	mov    ebx,0x5e62e5fb
  41ca50:	sahf   
  41ca51:	stc    
  41ca52:	mov    ds:0x9a8b2b50,al
  41ca57:	jae    0x41c9df
  41ca59:	sub    cl,cl
  41ca5b:	retf   
  41ca5c:	xchg   edi,eax
  41ca5d:	dec    esi
  41ca5e:	gs addr16 xor ecx,edx
  41ca62:	pop    esi
  41ca63:	test   esi,edx
  41ca65:	rcr    BYTE PTR [eax-0x3a],cl
  41ca68:	sub    eax,0x8230df8e
  41ca6d:	mov    BYTE PTR ds:0x282c130c,cl
  41ca73:	push   0xffffffa1
  41ca75:	adc    DWORD PTR [edx-0x9],ebp
  41ca78:	scas   al,BYTE PTR es:[edi]
  41ca79:	jb     0x41ca14
  41ca7b:	scas   eax,DWORD PTR es:[edi]
  41ca7c:	cmp    al,0x37
  41ca7e:	sub    dh,BYTE PTR [edi-0x60]
  41ca81:	sub    al,0xa9
  41ca83:	fs inc esp
  41ca85:	cld    
  41ca86:	dec    eax
  41ca87:	inc    ecx
  41ca88:	pop    ebx
  41ca89:	xor    DWORD PTR [ebx],ecx
  41ca8b:	xchg   esi,eax
  41ca8c:	int    0x7b
  41ca8e:	(bad)  
  41ca8f:	pushf  
  41ca90:	ds std 
  41ca92:	popf   
  41ca93:	jae    0x41cb04
  41ca95:	mov    bh,0x1b
  41ca97:	cdq    
  41ca98:	test   al,bh
  41ca9a:	clc    
  41ca9b:	pop    edx
  41ca9c:	int    0xbc
  41ca9e:	out    0x58,eax
  41caa0:	cmc    
  41caa1:	pop    ecx
  41caa2:	xchg   esp,eax
  41caa3:	dec    ebp
  41caa4:	sbb    DWORD PTR [edi],esp
  41caa6:	pop    ecx
  41caa7:	cmp    al,0xcc
  41caa9:	push   esp
  41caaa:	dec    ebp
  41caab:	je     0x41ca33
  41caad:	push   ecx
  41caae:	mov    ecx,0xed21906f
  41cab3:	rol    BYTE PTR [ebx-0x74],1
  41cab6:	addr16 push ebx
  41cab8:	int    0xe8
  41caba:	nop
  41cabb:	cwde   
  41cabc:	js     0x98009c10
  41cac2:	mov    esp,0x2e7ae961
  41cac7:	int3   
  41cac8:	stos   DWORD PTR es:[edi],eax
  41cac9:	je     0x41cb29
  41cacb:	xchg   esp,edx
  41cacd:	jl     0x41ca58
  41cacf:	add    al,0x6b
  41cad1:	dec    ebx
  41cad2:	dec    ecx
  41cad3:	dec    ebp
  41cad4:	jmp    0x41ca71
  41cad6:	cdq    
  41cad7:	mov    bh,BYTE PTR [edi-0x6d30e9bf]
  41cadd:	mov    cl,0xa7
  41cadf:	cmp    esi,ebx
  41cae1:	aaa    
  41cae2:	loopne 0x41cac1
  41cae4:	cs repz cwde 
  41cae7:	cmp    DWORD PTR [ebp-0x64bc67d8],eax
  41caed:	mov    edx,0x94c6c325
  41caf2:	mov    BYTE PTR [edi-0x1d],ch
  41caf5:	pop    edx
  41caf6:	xchg   al,bl
  41caf8:	xor    edx,DWORD PTR [edi]
  41cafa:	retf   0x7583
  41cafd:	dec    ebx
  41cafe:	or     bh,ch
  41cb00:	dec    ebx
  41cb01:	(bad)  [edi+0x2eebf2c5]
  41cb07:	test   edx,ebp
  41cb09:	sbb    DWORD PTR [ebx+0x76697dd8],esp
  41cb0f:	out    0x48,al
  41cb11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb12:	xchg   ebp,eax
  41cb13:	test   DWORD PTR [ecx],esi
  41cb15:	sbb    ch,BYTE PTR [ecx-0x7c7b5345]
  41cb1b:	aas    
  41cb1c:	push   ebp
  41cb1d:	ds cmp eax,0xc9e27418
  41cb23:	push   0xdca15ea9
  41cb28:	xor    ecx,DWORD PTR [esi]
  41cb2a:	xchg   ecx,eax
  41cb2b:	sub    ah,cl
  41cb2d:	xchg   ebx,eax
  41cb2e:	pop    edi
  41cb2f:	mov    dl,0xc4
  41cb31:	xor    esi,DWORD PTR [edx-0x1f]
  41cb34:	and    ch,BYTE PTR [ecx-0xa9ee3ab]
  41cb3a:	adc    DWORD PTR [ecx+0x17],ebp
  41cb3d:	and    BYTE PTR [ebp+0x8],ch
  41cb40:	cmc    
  41cb41:	push   ebp
  41cb42:	fsub   QWORD PTR [ebp+eiz*2-0x2aaa8965]
  41cb49:	xchg   edx,eax
  41cb4a:	sar    DWORD PTR [ecx-0x2a],0x11
  41cb4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb4f:	sbb    eax,0xacbc459e
  41cb54:	adc    al,0xa3
  41cb56:	lods   al,BYTE PTR ds:[esi]
  41cb57:	popf   
  41cb58:	or     ebx,DWORD PTR ds:0xaad92078
  41cb5e:	add    DWORD PTR [esi+0x2b],ebp
  41cb61:	lods   eax,DWORD PTR ds:[esi]
  41cb62:	cmp    BYTE PTR [ecx],0xb7
  41cb65:	jbe    0x41cb9b
  41cb67:	shl    BYTE PTR [ecx+eax*1-0x77c13964],0xef
  41cb6f:	sub    al,ch
  41cb71:	bnd jo 0x41cb2e
  41cb74:	or     BYTE PTR [esi+edx*8+0x7],dl
  41cb78:	mov    al,0x6
  41cb7a:	push   ecx
  41cb7b:	out    0xa3,eax
  41cb7d:	pop    edi
  41cb7e:	mov    eax,0x8999b2d3
  41cb83:	xchg   esp,eax
  41cb84:	std    
  41cb85:	lea    edx,[ecx]
  41cb87:	out    dx,eax
  41cb88:	pop    ds
  41cb89:	adc    al,0xde
  41cb8b:	es mov dh,0x44
  41cb8e:	xor    DWORD PTR [ecx+eiz*4+0x7c0d523a],esp
  41cb95:	sbb    al,BYTE PTR [esi+0x25]
  41cb98:	cld    
  41cb99:	(bad)  
  41cb9a:	adc    DWORD PTR [ebp-0x35],ebx
  41cb9d:	pop    edx
  41cb9e:	pop    ds
  41cb9f:	jge    0x41cb3c
  41cba1:	mov    ah,0xa
  41cba3:	adc    al,0x78
  41cba5:	pop    edi
  41cba6:	dec    esi
  41cba7:	add    ebx,edi
  41cba9:	dec    esi
  41cbaa:	shl    dh,1
  41cbac:	mov    ah,0x48
  41cbae:	mov    si,0x62b6
  41cbb2:	push   ecx
  41cbb3:	iret   
  41cbb4:	jge    0x41cb9f
  41cbb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbb7:	mov    WORD PTR [edi+0x46],?
  41cbba:	sti    
  41cbbb:	fwait
  41cbbc:	sub    eax,0xbbfcc444
  41cbc1:	cmp    eax,0x720d54b0
  41cbc6:	push   0x3b5e059c
  41cbcb:	scas   eax,DWORD PTR es:[edi]
  41cbcc:	pop    es
  41cbcd:	mov    edx,0xe85f9a42
  41cbd2:	fucomp st(4)
  41cbd4:	sbb    BYTE PTR [ecx],0x38
  41cbd7:	sbb    bl,0xa0
  41cbda:	sub    DWORD PTR [edx],ebp
  41cbdc:	sub    bl,BYTE PTR [ebp-0x65]
  41cbdf:	and    cl,BYTE PTR [edx+0x6b]
  41cbe2:	lods   al,BYTE PTR ds:[esi]
  41cbe3:	daa    
  41cbe4:	jb     0x41cc20
  41cbe6:	sub    bh,BYTE PTR [ebx+0x66]
  41cbe9:	inc    esi
  41cbea:	sub    bl,BYTE PTR [eax-0x32]
  41cbed:	mov    esi,0x5ca9a34
  41cbf2:	xor    BYTE PTR [esi-0x39],ch
  41cbf5:	and    bh,BYTE PTR ds:0x616e7340
  41cbfb:	jmp    0x41cc46
  41cbfd:	add    eax,0xab35467
  41cc02:	mov    bh,0xa2
  41cc04:	push   0xca5737ec
  41cc09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc0a:	mov    eax,0x8a93234a
  41cc0f:	lahf   
  41cc10:	inc    edx
  41cc11:	ror    BYTE PTR [esi-0x35],0x9d
  41cc15:	mov    ebx,0xe41a348
  41cc1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc1b:	sahf   
  41cc1c:	les    edx,FWORD PTR [esi+0x1a]
  41cc1f:	dec    edx
  41cc20:	js     0x41cbb8
  41cc22:	dec    eax
  41cc23:	xchg   esp,eax
  41cc24:	push   0x2c
  41cc26:	cmp    eax,0xc91df592
  41cc2b:	rcr    BYTE PTR [edx],0x69
  41cc2e:	mov    bl,0x95
  41cc30:	xor    DWORD PTR [ebx],esp
  41cc32:	out    0x15,al
  41cc34:	pop    ebp
  41cc35:	xchg   esp,eax
  41cc36:	shr    DWORD PTR [ecx-0x11],1
  41cc39:	popa   
  41cc3a:	cmp    DWORD PTR [ebp-0x12552d9b],esp
  41cc40:	scas   al,BYTE PTR es:[edi]
  41cc41:	add    BYTE PTR [edi+ebx*4+0x129dadb2],bl
  41cc48:	pop    ss
  41cc49:	xor    edx,eax
  41cc4b:	cmp    eax,0x62fd0e02
  41cc50:	(bad)  
  41cc51:	xchg   edx,eax
  41cc52:	dec    esi
  41cc53:	js     0x41cccd
  41cc55:	sbb    eax,0xe8e562b6
  41cc5a:	stos   DWORD PTR es:[edi],eax
  41cc5b:	mov    al,ds:0x2ffa67b5
  41cc60:	pushf  
  41cc61:	lock sar BYTE PTR [ecx-0x62],cl
  41cc65:	(bad)  [edx-0x48]
  41cc68:	and    al,BYTE PTR [edi+0x5b]
  41cc6b:	xchg   esi,ebx
  41cc6d:	mul    al
  41cc6f:	mov    edx,0x57ac52fd
  41cc74:	leave  
  41cc75:	mov    ebx,0x96dbbc02
  41cc7a:	hlt    
  41cc7b:	(bad)  
  41cc7c:	out    0xad,al
  41cc7e:	es mov bx,0xe15d
  41cc83:	mov    esp,0xcfb86776
  41cc88:	mov    edx,0xad1623ff
  41cc8d:	cmc    
  41cc8e:	push   edi
  41cc8f:	(bad)  
  41cc90:	(bad)  
  41cc91:	ins    DWORD PTR es:[edi],dx
  41cc92:	fcomip st,st(5)
  41cc94:	mov    al,ds:0x178c7926
  41cc99:	data16 mov cl,BYTE PTR [edi-0x5371892a]
  41cca0:	dec    eax
  41cca1:	pop    eax
  41cca2:	or     eax,0xe35ef67c
  41cca7:	or     al,0x2b
  41cca9:	(bad)  
  41ccaa:	shr    bl,cl
  41ccac:	xlat   BYTE PTR ds:[ebx]
  41ccad:	jne    0x41cc4f
  41ccaf:	jae    0x41cceb
  41ccb1:	jmp    0xca4fef57
  41ccb6:	mov    esi,0x1e5a6a03
  41ccbb:	dec    ebp
  41ccbc:	inc    ebx
  41ccbd:	sbb    esi,esi
  41ccbf:	stc    
  41ccc0:	mov    al,BYTE PTR [edi]
  41ccc2:	add    BYTE PTR [edi],bh
  41ccc4:	add    cl,dh
  41ccc6:	pop    ecx
  41ccc7:	pop    esi
  41ccc8:	aam    0x65
  41ccca:	or     esp,DWORD PTR [eax+0x6d4ba14a]
  41ccd0:	dec    esi
  41ccd1:	adc    al,0x57
  41ccd3:	cmp    eax,0xa1b8258b
  41ccd8:	pushf  
  41ccd9:	ss sbb dh,0x29
  41ccdd:	cs out dx,eax
  41ccdf:	xchg   ecx,eax
  41cce0:	lea    ecx,[ebp+0x45]
  41cce3:	fld    st(1)
  41cce5:	xchg   ebx,eax
  41cce6:	xor    DWORD PTR [esi+esi*2],esi
  41cce9:	stos   DWORD PTR es:[edi],eax
  41ccea:	addr16 xchg esi,eax
  41ccec:	out    dx,eax
  41cced:	mov    bh,0x8c
  41ccef:	inc    ecx
  41ccf0:	test   al,0x8f
  41ccf2:	imul   edx,DWORD PTR [esi+0x69],0xffffffb9
  41ccf6:	popf   
  41ccf7:	fistp  WORD PTR [edx+ecx*4+0x4c]
  41ccfb:	and    al,0x3c
  41ccfd:	or     al,0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xb06df738
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x66411818],bh
  41cd1e:	popa   
  41cd1f:	das    
  41cd20:	xlat   BYTE PTR ds:[ebx]
  41cd21:	push   esi
  41cd22:	rcr    DWORD PTR [ebx+edi*1-0x4a],0xbf
  41cd27:	jno    0x41cd02
  41cd29:	loope  0x41cd53
  41cd2b:	cmp    ecx,edx
  41cd2d:	add    ch,BYTE PTR [ecx+0x12]
  41cd30:	adc    DWORD PTR [eax+0x2575a654],eax
  41cd36:	adc    eax,0xa9669555
  41cd3b:	push   ss
  41cd3c:	and    ah,BYTE PTR [ebx+0x51]
  41cd3f:	mov    al,ds:0xe5e7d3dc
  41cd44:	jb     0x41cd27
  41cd46:	xor    ebx,DWORD PTR [ebp+0x19]
  41cd49:	jbe    0x41cd1b
  41cd4b:	repz xchg esi,eax
  41cd4d:	dec    ebx
  41cd4e:	in     al,dx
  41cd4f:	aaa    
  41cd50:	(bad)  
  41cd51:	(bad)  
  41cd52:	repz add ebx,0xffffffba
  41cd56:	(bad)  
  41cd57:	push   0xfffffff0
  41cd59:	mov    eax,0x514781d9
  41cd5e:	iret   
  41cd5f:	adc    DWORD PTR [edi+ebp*8+0x2b],ebx
  41cd63:	adc    BYTE PTR [ecx-0x4f],bh
  41cd66:	jmp    esi
  41cd68:	xchg   ebp,eax
  41cd69:	jg     0x41cd8c
  41cd6b:	or     al,0x27
  41cd6d:	imul   ebp,DWORD PTR [eax],0x5d7d196a
  41cd73:	in     al,dx
  41cd74:	sbb    esp,esi
  41cd76:	(bad)  
  41cd77:	fwait
  41cd78:	repnz or BYTE PTR [esi+esi*8],dh
  41cd7c:	mov    dl,0x4f
  41cd7e:	lds    eax,FWORD PTR [ebx]
  41cd80:	(bad)  
  41cd81:	(bad)  
  41cd82:	fld    DWORD PTR [ecx]
  41cd84:	ss sbb ah,bl
  41cd87:	mov    DWORD PTR [ebx+edi*8-0x1d790dc4],edx
  41cd8e:	mov    ?,WORD PTR ds:0x1cb0c6c5
  41cd94:	mov    edi,0xd1db1acf
  41cd99:	cmp    ebx,eax
  41cd9b:	or     al,dl
  41cd9d:	fistp  QWORD PTR [ecx]
  41cd9f:	pop    es
  41cda0:	and    BYTE PTR [ecx-0x63],0x5e
  41cda4:	out    dx,al
  41cda5:	in     eax,0x19
  41cda7:	retf   0x917e
  41cdaa:	mov    ds:0xf2f47242,eax
  41cdaf:	popa   
  41cdb0:	push   es
  41cdb1:	add    ah,bh
  41cdb3:	stos   DWORD PTR es:[edi],eax
  41cdb4:	inc    esi
  41cdb5:	pop    es
  41cdb6:	push   ss
  41cdb7:	push   ss
  41cdb8:	xchg   ecx,eax
  41cdb9:	pusha  
  41cdba:	cmp    cl,0xd8
  41cdbd:	call   0x4d032bb4
  41cdc2:	loop   0x41ce34
  41cdc4:	sahf   
  41cdc5:	ss add eax,0x61255db0
  41cdcb:	jne    0x41cdd1
  41cdcd:	ret    
  41cdce:	jns    0x41ce2c
  41cdd0:	sbb    DWORD PTR [esi-0xe3e72e6],0x6
  41cdd7:	mov    ah,BYTE PTR [esi-0x4f6994f0]
  41cddd:	inc    edi
  41cdde:	nop
  41cddf:	dec    ecx
  41cde0:	mov    cs,WORD PTR [edi]
  41cde2:	adc    esp,DWORD PTR [eax+eiz*8+0x383332e7]
  41cde9:	int    0xb
  41cdeb:	cmc    
  41cdec:	cwde   
  41cded:	pop    ebp
  41cdee:	inc    ecx
  41cdef:	jecxz  0x41ce03
  41cdf1:	lods   al,BYTE PTR ds:[esi]
  41cdf2:	in     al,dx
  41cdf3:	cmp    ebx,edx
  41cdf5:	test   al,0x77
  41cdf7:	shl    DWORD PTR [ebp-0x60a817b5],1
  41cdfd:	sub    ebp,edx
  41cdff:	ja     0x41ce73
  41ce01:	bound  esp,QWORD PTR [edi-0x7c]
  41ce04:	add    DWORD PTR [ecx+0x63],0x73161bd6
  41ce0b:	call   0x5b7137af
  41ce10:	mov    dh,0x5b
  41ce12:	fsub   QWORD PTR [ebp+0x49]
  41ce15:	dec    ebp
  41ce16:	add    dl,al
  41ce18:	jb     0x41ce8b
  41ce1a:	imul   dl
  41ce1c:	lock lods al,BYTE PTR ds:[esi]
  41ce1e:	aad    0xb4
  41ce20:	(bad)  
  41ce21:	lahf   
  41ce22:	mov    ds:0xab283905,al
  41ce27:	cmp    DWORD PTR [ebx-0x74],ebp
  41ce2a:	not    BYTE PTR [ecx+eax*2]
  41ce2d:	xchg   DWORD PTR [eax-0x2],eax
  41ce30:	mov    ecx,eax
  41ce32:	out    0x30,eax
  41ce34:	or     DWORD PTR [edx],esp
  41ce36:	adc    eax,0xe798dece
  41ce3b:	clc    
  41ce3c:	bound  edx,QWORD PTR [ecx-0x2b]
  41ce3f:	into   
  41ce40:	mov    ch,0x13
  41ce42:	test   bh,dh
  41ce44:	add    al,0x92
  41ce46:	and    eax,0xdee2830c
  41ce4b:	outs   dx,BYTE PTR ds:[esi]
  41ce4c:	mov    gs,esi
  41ce4e:	add    al,0x51
  41ce50:	imul   edx,DWORD PTR [edx+0xa29d04f],0x47
  41ce57:	pop    ebp
  41ce58:	arpl   WORD PTR [esi+0x39],sp
  41ce5b:	xchg   edx,eax
  41ce5c:	sti    
  41ce5d:	pop    esp
  41ce5e:	imul   edx,DWORD PTR [ebx+0x74a75d7c],0x32ad4a84
  41ce68:	stc    
  41ce69:	sub    ah,dl
  41ce6b:	lock xchg edi,eax
  41ce6d:	pop    es
  41ce6e:	inc    eax
  41ce6f:	mov    dh,0xa8
  41ce71:	sahf   
  41ce72:	inc    eax
  41ce73:	rcl    DWORD PTR [ebx],cl
  41ce75:	mov    esi,0xefaa81f3
  41ce7a:	jle    0x41cec6
  41ce7c:	sub    edi,esi
  41ce7e:	pop    ds
  41ce7f:	xor    al,0xbe
  41ce81:	rcl    DWORD PTR [edi+edi*1+0x1d],1
  41ce85:	test   BYTE PTR [eax-0x7a],bl
  41ce88:	dec    edi
  41ce89:	leave  
  41ce8a:	or     esi,esp
  41ce8c:	neg    DWORD PTR [eax-0x2d]
  41ce8f:	bound  eax,QWORD PTR [ebx+0x7a96904e]
  41ce95:	lock rcl DWORD PTR [ebx-0x38],0x53
  41ce9a:	mov    BYTE PTR [ebx],dl
  41ce9c:	ds mov dl,0x9f
  41ce9f:	adc    eax,0xc4825ed8
  41cea4:	mov    dh,0xd5
  41cea6:	fisttp DWORD PTR [edi+edx*8]
  41cea9:	sahf   
  41ceaa:	xchg   esp,eax
  41ceab:	je     0x41ce38
  41cead:	adc    edx,DWORD PTR [ebp+0x2dc0abbb]
  41ceb3:	(bad)  
  41ceb4:	test   DWORD PTR [edi+0x65],0xa3eb743d
  41cebb:	fldcw  WORD PTR [edi+0x18]
  41cebe:	push   eax
  41cebf:	in     eax,0x7a
  41cec1:	retf   0x1feb
  41cec4:	aad    0x5
  41cec6:	jne    0x41ce7c
  41cec8:	jl     0x41cf10
  41ceca:	ret    
  41cecb:	mov    edi,0xe7df732e
  41ced0:	les    edi,FWORD PTR [ebx]
  41ced2:	pop    es
  41ced3:	sbb    al,0x69
  41ced5:	repz and al,BYTE PTR [esi-0x7636a8d]
  41cedc:	inc    eax
  41cedd:	jge    0x41cec4
  41cedf:	mov    bh,0x16
  41cee1:	xor    DWORD PTR [ecx-0x163f6e88],esp
  41cee7:	pop    ebx
  41cee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cee9:	or     ah,BYTE PTR [edx]
  41ceeb:	test   esp,esp
  41ceed:	js     0x41cec4
  41ceef:	das    
  41cef0:	pop    ebp
  41cef1:	aam    0xf6
  41cef3:	imul   esi,DWORD PTR [ebx+0x3d3801db],0x3a
  41cefa:	jns    0x41cf44
  41cefc:	pop    ds
  41cefd:	push   edi
  41cefe:	jl     0x41cf0b
  41cf00:	sar    ah,cl
  41cf02:	jmp    DWORD PTR [eax+eax*8]
  41cf05:	xor    al,0xf0
  41cf07:	shl    BYTE PTR [ecx-0x4054c3b2],0xdf
  41cf0e:	mov    bl,0xe6
  41cf10:	popf   
  41cf11:	adc    eax,0xc48b0aad
  41cf16:	jns    0x41cf42
  41cf18:	sbb    BYTE PTR [ebx-0x49e43ca7],0xf1
  41cf1f:	sar    ch,0xb7
  41cf22:	jnp    0x41cf2b
  41cf24:	outs   dx,BYTE PTR ds:[esi]
  41cf25:	mov    ebp,0x7c371f60
  41cf2a:	dec    ebp
  41cf2b:	shl    DWORD PTR [ecx],1
  41cf2d:	or     ebp,DWORD PTR [ecx+0x35cba30a]
  41cf33:	lahf   
  41cf34:	dec    esi
  41cf35:	fldcw  WORD PTR [esi+0x40]
  41cf38:	adc    ch,BYTE PTR ds:0x7b8a30f4
  41cf3e:	pop    ecx
  41cf3f:	(bad)  
  41cf40:	fdiv   DWORD PTR [eax-0x32]
  41cf43:	pop    esi
  41cf44:	sub    DWORD PTR [edx+edi*8-0x39ced427],esi
  41cf4b:	pmaddwd mm5,mm4
  41cf4e:	ss (bad) 
  41cf50:	mov    edx,0x7a631575
  41cf55:	adc    esp,DWORD PTR [ebp+0x3d95d0c4]
  41cf5b:	jg     0x41cef3
  41cf5d:	xchg   ebx,eax
  41cf5e:	in     eax,dx
  41cf5f:	test   BYTE PTR [ebx],0xa8
  41cf62:	retf   
  41cf63:	aad    0x61
  41cf65:	jle    0x41cf51
  41cf67:	xor    edx,DWORD PTR [edx]
  41cf69:	in     eax,0x59
  41cf6b:	outs   dx,DWORD PTR ds:[esi]
  41cf6c:	xor    eax,0x8cc39e8c
  41cf71:	jne    0x41cff1
  41cf73:	mov    esi,0x53362274
  41cf78:	jo     0x41cfd7
  41cf7a:	mov    dh,bh
  41cf7c:	add    al,BYTE PTR [esi]
  41cf7e:	pusha  
  41cf7f:	inc    esp
  41cf80:	into   
  41cf81:	jne    0x41cf42
  41cf83:	xchg   ebp,eax
  41cf84:	frstor [edx+edi*8+0x3131042a]
  41cf8b:	dec    edx
  41cf8c:	dec    ebx
  41cf8d:	xlat   BYTE PTR ds:[ebx]
  41cf8e:	xchg   esi,eax
  41cf8f:	(bad)  
  41cf90:	mov    edi,0x2907799a
  41cf95:	inc    ebp
  41cf96:	addr16 in eax,0x32
  41cf99:	imul   eax,edi,0x155ffeb6
  41cf9f:	aaa    
  41cfa0:	sbb    esp,DWORD PTR [eax+ebp*1]
  41cfa3:	xor    BYTE PTR [esi-0x62aa2a5f],ah
  41cfa9:	pushf  
  41cfaa:	pop    esp
  41cfab:	push   es
  41cfac:	mov    dh,0xea
  41cfae:	std    
  41cfaf:	adc    bh,BYTE PTR [ebx-0x4f]
  41cfb2:	jg     0x41d01d
  41cfb4:	mov    eax,0xce715e62
  41cfb9:	jmp    0x44c01bee
  41cfbe:	pusha  
  41cfbf:	leave  
  41cfc0:	ins    DWORD PTR es:[edi],dx
  41cfc1:	xchg   esp,eax
  41cfc2:	sbb    DWORD PTR [esp+ebx*4],0x856d8f59
  41cfc9:	add    al,0x1e
  41cfcb:	or     DWORD PTR [edi-0x8],0xb75f2851
  41cfd2:	dec    edi
  41cfd3:	and    ecx,DWORD PTR ds:0x1c63348f
  41cfd9:	add    BYTE PTR [ebx+0x7d],0x2a
  41cfdd:	mov    al,0xd3
  41cfdf:	xchg   ebp,eax
  41cfe0:	(bad)  
  41cfe1:	shl    esi,1
  41cfe3:	push   edi
  41cfe4:	stc    
  41cfe5:	mov    ecx,0xdc4379af
  41cfea:	test   ecx,ecx
  41cfec:	cs jl  0x41cfa5
  41cfef:	inc    esp
  41cff0:	das    
  41cff1:	cmp    al,BYTE PTR [ecx-0x559a6c49]
  41cff7:	jne    0x41cfbe
  41cff9:	and    DWORD PTR [ebp+0x47],ecx
  41cffc:	jle    0x41d072
  41cffe:	cmp    ebp,DWORD PTR [edi]
  41d000:	jno    0x41cff4
  41d002:	into   
  41d003:	pminub mm2,QWORD PTR [edx]
  41d006:	in     eax,dx
  41d007:	or     al,BYTE PTR ds:0x7fc6074b
  41d00d:	aas    
  41d00e:	mov    ebx,DWORD PTR [esi-0x66]
  41d011:	in     eax,0x39
  41d013:	(bad)  
  41d014:	clc    
  41d015:	mov    ebp,DWORD PTR [esi-0x7c]
  41d018:	icebp  
  41d019:	cli    
  41d01a:	clc    
  41d01b:	jmp    0x41d043
  41d01d:	frstor [eax]
  41d01f:	jno    0x41cffd
  41d021:	jno    0x41cfa4
  41d023:	pop    ss
  41d024:	ins    DWORD PTR es:[edi],dx
  41d025:	lea    ebp,[ebx]
  41d027:	jl     0x41cff8
  41d029:	or     BYTE PTR [eax],cl
  41d02b:	fs jl  0x41d088
  41d02e:	xor    BYTE PTR [edi+0x0],ch
  41d031:	aad    0xe9
  41d033:	and    esp,DWORD PTR [esi+eax*8-0x1464519d]
  41d03a:	xor    ecx,eax
  41d03c:	pop    esi
  41d03d:	outs   dx,BYTE PTR ds:[esi]
  41d03e:	leave  
  41d03f:	ret    0xed01
  41d042:	fnsave [edi+0x3066b7bf]
  41d048:	repnz add al,0xd9
  41d04b:	adc    ecx,eax
  41d04d:	fwait
  41d04e:	xor    edi,0x47
  41d051:	cmp    BYTE PTR [ebp-0x42],dl
  41d054:	mov    ds:0xae2036b2,al
  41d059:	leave  
  41d05a:	xchg   ebp,eax
  41d05b:	lahf   
  41d05c:	in     eax,dx
  41d05d:	pop    ds
  41d05e:	sbb    eax,esi
  41d060:	call   ebx
  41d062:	ja     0x41cfe9
  41d064:	jb     0x41d0b8
  41d066:	outs   dx,DWORD PTR ds:[esi]
  41d067:	cmp    bl,dh
  41d069:	push   cs
  41d06a:	jnp    0x41d0ca
  41d06c:	jp     0x41d089
  41d06e:	jecxz  0x41d0e2
  41d070:	mov    edi,0x1364c0fa
  41d075:	pushf  
  41d076:	push   ebp
  41d077:	scas   al,BYTE PTR es:[edi]
  41d078:	in     al,dx
  41d079:	loop   0x41d049
  41d07b:	sbb    ch,BYTE PTR [ecx]
  41d07d:	aad    0xd7
  41d07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d080:	adc    ah,BYTE PTR [ebx+eax*8+0x7fb305]
  41d087:	ror    ebx,cl
  41d089:	push   ds
  41d08a:	push   ds
  41d08b:	addr16 dec eax
  41d08d:	bound  edx,QWORD PTR [esi-0x180f13f0]
  41d093:	xchg   ecx,eax
  41d094:	xchg   esp,eax
  41d095:	xchg   edi,eax
  41d096:	jp     0x41d0b4
  41d098:	lea    ebp,[edi+0x542bc414]
  41d09e:	or     ebp,DWORD PTR [ebx+0x6b]
  41d0a1:	aam    0xbf
  41d0a3:	pop    ebx
  41d0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0a5:	xor    ebx,esi
  41d0a7:	sbb    ch,cl
  41d0a9:	shl    DWORD PTR [ebp+eax*4+0x4e8509b4],cl
  41d0b0:	retf   
  41d0b1:	pop    esi
  41d0b2:	retf   0xfc96
  41d0b5:	jno    0x41d05e
  41d0b7:	cmp    al,BYTE PTR [esp+ecx*2]
  41d0ba:	xchg   BYTE PTR [ebp-0x74],dl
  41d0bd:	ficomp WORD PTR [esi+edi*4]
  41d0c0:	out    dx,eax
  41d0c1:	sbb    al,0x45
  41d0c3:	(bad)  
  41d0c4:	mov    ds:0x5e15f815,al
  41d0c9:	out    0xa1,eax
  41d0cb:	and    al,0x6f
  41d0cd:	and    al,0x2a
  41d0cf:	ror    DWORD PTR [edx+0x2c38244c],0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x1bbc6585
  41d15f:	pop    esi
  41d160:	fstp   TBYTE PTR [esi+0x36]
  41d163:	pop    ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1+0x42771818],bh
  41d16c:	daa    
  41d16d:	stc    
  41d16e:	arpl   WORD PTR [esi+0x52],di
  41d171:	add    eax,0xb220eb
  41d176:	push   esi
  41d177:	out    dx,al
  41d178:	iret   
  41d179:	pop    edi
  41d17a:	mov    ds:0x98167b3a,al
  41d17f:	loope  0x41d1ed
  41d181:	or     eax,0xb66b3f98
  41d186:	data16 ja 0x41d17f
  41d189:	or     esp,DWORD PTR [edx-0x19]
  41d18c:	idiv   DWORD PTR [edi+0x3]
  41d18f:	dec    ebx
  41d190:	sti    
  41d191:	jne    0x41d1ea
  41d193:	add    BYTE PTR [ebp-0x5f8b4b4f],ah
  41d199:	jle    0x41d19d
  41d19b:	pop    ds
  41d19c:	and    DWORD PTR [edi-0x26fb45ab],0xe400c71
  41d1a6:	in     al,0xd3
  41d1a8:	sub    DWORD PTR [edi+0x64],0x2d
  41d1ac:	das    
  41d1ad:	fcomp  QWORD PTR [edi-0xd4f7bd9]
  41d1b3:	adc    DWORD PTR [edi],eax
  41d1b5:	jp     0x41d1eb
  41d1b7:	mov    edx,0x2d0255e3
  41d1bc:	sub    DWORD PTR [eax],esp
  41d1be:	sub    esp,ebx
  41d1c0:	mov    ecx,0x39cf5c69
  41d1c5:	arpl   cx,di
  41d1c7:	adc    DWORD PTR [ecx-0xe],0xa64ea015
  41d1ce:	push   ecx
  41d1cf:	ja     0x41d1bc
  41d1d1:	fdivr  QWORD PTR [eax+0x17e0fe75]
  41d1d7:	pop    edi
  41d1d8:	fs jmp 0xd80624a6
  41d1de:	loope  0x41d195
  41d1e0:	add    eax,edi
  41d1e2:	rcr    cl,0xfc
  41d1e5:	(bad)  
  41d1e6:	mov    dh,0x53
  41d1e8:	call   0x78eb:0x9c407403
  41d1ef:	and    al,0x98
  41d1f1:	xor    esi,DWORD PTR [edi]
  41d1f3:	sbb    DWORD PTR [edx+0x36],esp
  41d1f6:	jl     0x41d247
  41d1f8:	pop    esi
  41d1f9:	cmp    edi,DWORD PTR [ebp-0x2cb1effa]
  41d1ff:	jp     0x41d1d4
  41d201:	xchg   edi,eax
  41d202:	add    dh,cl
  41d204:	test   eax,0x73b4e920
  41d209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d20a:	mov    WORD PTR [esi+0x6f],ss
  41d20d:	sbb    edi,esp
  41d20f:	jmp    0x8694995d
  41d214:	xchg   esi,eax
  41d215:	aas    
  41d216:	rcl    BYTE PTR [esi+0x40],0xe5
  41d21a:	jge    0x41d23c
  41d21c:	aaa    
  41d21d:	aad    0x6b
  41d21f:	js     0x41d292
  41d221:	adc    al,BYTE PTR [eax+ebx*8-0x6a]
  41d225:	retf   0xc82a
  41d228:	dec    edi
  41d229:	retf   
  41d22a:	pop    ebx
  41d22b:	add    cl,BYTE PTR [ecx+ebx*2+0x77ebcc2d]
  41d232:	cmp    BYTE PTR [ecx+0x571edf0b],ch
  41d238:	inc    DWORD PTR [eax-0x78]
  41d23b:	popa   
  41d23c:	rcl    DWORD PTR [ecx+0x19],0x21
  41d240:	mov    al,ds:0xe2491bd4
  41d245:	or     edi,DWORD PTR [edx]
  41d247:	mov    bl,0x79
  41d249:	mov    bl,0x20
  41d24b:	xchg   edi,eax
  41d24c:	dec    ebx
  41d24d:	lock jmp 0x41d20a
  41d250:	pop    ds
  41d251:	lds    ebx,FWORD PTR [ebp-0x49]
  41d254:	in     al,dx
  41d255:	sbb    bl,BYTE PTR ss:[edi+edi*8+0x24b87c52]
  41d25d:	mov    ds:0xeae917b4,al
  41d262:	cli    
  41d263:	xchg   DWORD PTR [ebx],edx
  41d265:	icebp  
  41d266:	cmp    DWORD PTR [edi+0x28],0x4aa7ec5e
  41d26d:	outs   dx,BYTE PTR ds:[esi]
  41d26e:	(bad)  
  41d26f:	push   edx
  41d270:	imul   esp,DWORD PTR [edx-0x20d58b25],0x3
  41d277:	mov    edx,0x32d8d2c3
  41d27c:	aad    0x72
  41d27e:	rcl    BYTE PTR [edx+ebx*4-0x5e594099],cl
  41d285:	pop    ebp
  41d286:	inc    esi
  41d287:	sahf   
  41d288:	popf   
  41d289:	retf   0xc536
  41d28c:	add    DWORD PTR [edi+0x70],ecx
  41d28f:	ja     0x41d28a
  41d291:	loopne 0x41d2c4
  41d293:	stos   DWORD PTR es:[edi],eax
  41d294:	loope  0x41d2e9
  41d296:	scas   eax,DWORD PTR es:[edi]
  41d297:	sbb    al,0xb8
  41d299:	sbb    edx,esp
  41d29b:	add    al,0x77
  41d29d:	in     al,0xa4
  41d29f:	inc    ebp
  41d2a0:	sub    esi,DWORD PTR [ebp+0x61fec1ed]
  41d2a6:	lahf   
  41d2a7:	and    ecx,edi
  41d2a9:	inc    esp
  41d2aa:	push   0x670a3634
  41d2af:	mov    al,0x30
  41d2b1:	adc    eax,0xcf951e75
  41d2b6:	fstp   TBYTE PTR [eax+0x41f90895]
  41d2bc:	ret    
  41d2bd:	in     eax,0x99
  41d2bf:	call   0x98fc5888
  41d2c4:	mov    al,ds:0x9dce05f
  41d2c9:	mov    esp,0xd607e34e
  41d2ce:	std    
  41d2cf:	lea    ecx,[ebx]
  41d2d1:	mov    edx,0x11e8b740
  41d2d6:	or     eax,0x83fedfd1
  41d2db:	fimul  WORD PTR [esp+edi*1-0x62a624ca]
  41d2e2:	pop    edi
  41d2e3:	pop    edi
  41d2e4:	add    DWORD PTR ds:0xdfe2956,eax
  41d2ea:	ins    BYTE PTR es:[edi],dx
  41d2eb:	sub    eax,0x66502df2
  41d2f0:	push   ebp
  41d2f1:	mov    esp,0x13a670cb
  41d2f6:	daa    
  41d2f7:	popf   
  41d2f8:	adc    al,0x25
  41d2fa:	inc    ebp
  41d2fb:	popf   
  41d2fc:	out    dx,al
  41d2fd:	mov    ecx,0xedf10c05
  41d302:	pop    esp
  41d303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d304:	add    ch,BYTE PTR [edx+0x45158fdd]
  41d30a:	ja     0x41d389
  41d30c:	mov    eax,ds:0x8fb55056
  41d311:	mov    esp,edx
  41d313:	ins    DWORD PTR es:[edi],dx
  41d314:	inc    ebx
  41d315:	(bad)  
  41d316:	fcmovne st,st(4)
  41d318:	repz mov esi,DWORD PTR [edx]
  41d31b:	xchg   ebx,eax
  41d31c:	pop    edi
  41d31d:	out    0x96,al
  41d31f:	mov    cl,0x4d
  41d321:	outs   dx,BYTE PTR ds:[esi]
  41d322:	jl     0x41d302
  41d324:	jne    0x41d393
  41d326:	mov    cl,0xd3
  41d328:	jbe    0x41d37c
  41d32a:	in     eax,0x34
  41d32c:	or     BYTE PTR [edx],0xfd
  41d32f:	aas    
  41d330:	mov    al,ds:0xa3a55d00
  41d335:	jge    0x41d333
  41d337:	test   BYTE PTR [eax+0x1c],bl
  41d33a:	outs   dx,BYTE PTR ds:[esi]
  41d33b:	and    ecx,ecx
  41d33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d33e:	ins    DWORD PTR es:[edi],dx
  41d33f:	and    eax,0x75be5554
  41d344:	mov    dh,0xb7
  41d346:	in     eax,0x4d
  41d348:	xchg   ebx,eax
  41d349:	or     DWORD PTR [ebx-0x80],0x7d
  41d34d:	(bad)  
  41d34e:	fyl2xp1 
  41d350:	inc    ecx
  41d351:	jp     0x41d366
  41d353:	inc    ebx
  41d354:	xchg   esp,eax
  41d355:	inc    ebx
  41d356:	cmp    esi,DWORD PTR [edi]
  41d358:	sub    edx,edi
  41d35a:	pop    ss
  41d35b:	lahf   
  41d35c:	mov    ?,WORD PTR [eax+0x440dcf47]
  41d362:	mov    DWORD PTR [ebx],eax
  41d364:	and    ebx,DWORD PTR [ebp+0x67]
  41d367:	cmp    al,0xce
  41d369:	and    ah,BYTE PTR [esi]
  41d36b:	(bad)  
  41d36c:	xor    eax,0xbefc1339
  41d371:	call   0xa90a1583
  41d376:	pop    esi
  41d377:	stc    
  41d378:	fimul  DWORD PTR [edx]
  41d37a:	mov    edi,0xb75a79e4
  41d37f:	pop    edx
  41d380:	or     DWORD PTR [edi],ebx
  41d382:	lock xor DWORD PTR [ebx-0x3b],ebx
  41d386:	outs   dx,DWORD PTR ds:[esi]
  41d387:	xchg   DWORD PTR [ecx+0x79],edx
  41d38a:	outs   dx,BYTE PTR ds:[esi]
  41d38b:	stc    
  41d38c:	sub    DWORD PTR [eax-0x427ab7c],ebx
  41d392:	mov    esp,0x8b3f31e9
  41d397:	cli    
  41d398:	or     esi,0x3b9989ff
  41d39e:	push   ss
  41d39f:	imul   edx,DWORD PTR [ebp+0x1],0x631e644a
  41d3a6:	add    edi,edx
  41d3a8:	mov    bh,0x50
  41d3aa:	nop
  41d3ab:	lahf   
  41d3ac:	in     eax,0xf3
  41d3ae:	(bad)  
  41d3af:	repz adc al,0x7d
  41d3b2:	imul   ecx,DWORD PTR [ecx],0xf1fc4d79
  41d3b8:	xor    DWORD PTR [edi+0x57bd17d5],0xffffffe0
  41d3bf:	out    dx,eax
  41d3c0:	xchg   ebp,eax
  41d3c1:	outs   dx,BYTE PTR ds:[esi]
  41d3c2:	inc    esi
  41d3c3:	mov    edi,0xd6f55c00
  41d3c8:	adc    al,0x72
  41d3ca:	ret    
  41d3cb:	retf   0x5725
  41d3ce:	out    dx,al
  41d3cf:	mov    cl,0xbb
  41d3d1:	push   ds
  41d3d2:	fst    st(3)
  41d3d4:	iret   
  41d3d5:	push   cs
  41d3d6:	(bad)  
  41d3d7:	js     0x41d36e
  41d3d9:	into   
  41d3da:	test   DWORD PTR [edx],0xdd82de76
  41d3e0:	inc    ebp
  41d3e1:	pop    esp
  41d3e2:	(bad)  
  41d3e3:	fwait
  41d3e4:	inc    esi
  41d3e5:	rcr    BYTE PTR [eax-0x70],0xc3
  41d3e9:	fwait
  41d3ea:	mov    DWORD PTR [edx-0x606cc51c],eax
  41d3f0:	mov    ds:0x485934cb,al
  41d3f5:	loop   0x41d3db
  41d3f7:	push   0x1
  41d3f9:	call   0x2f7c:0xa73d143
  41d400:	add    DWORD PTR [ebx-0x48],ebp
  41d403:	mov    dh,0xa3
  41d405:	xor    bl,dh
  41d407:	push   0x9dbbb89a
  41d40c:	mov    ecx,0x69b902e2
  41d411:	jo     0x41d3ca
  41d413:	gs mov ebx,0x60706927
  41d419:	cld    
  41d41a:	cld    
  41d41b:	sub    eax,0x3fd51d8f
  41d420:	jecxz  0x41d3ff
  41d422:	ds mov ebx,0x178683da
  41d428:	(bad)  
  41d429:	sbb    eax,0x105a4b4a
  41d42e:	icebp  
  41d42f:	sbb    edx,DWORD PTR ds:0xa1a1971e
  41d435:	in     al,dx
  41d436:	into   
  41d437:	dec    esi
  41d438:	cdq    
  41d439:	out    dx,eax
  41d43a:	fadd   QWORD PTR [edi+0x35]
  41d43d:	adc    al,0xdf
  41d43f:	xchg   esp,eax
  41d440:	std    
  41d441:	sub    al,0xc9
  41d443:	mov    bl,0xa3
  41d445:	push   0x8c2bb1cb
  41d44a:	fiadd  WORD PTR [edi+0x6523f049]
  41d450:	pusha  
  41d451:	les    edx,FWORD PTR [ebx-0x6e]
  41d454:	es int3 
  41d456:	sub    eax,0x6da28a6f
  41d45b:	push   0x1a
  41d45d:	into   
  41d45e:	arpl   WORD PTR [eax],ax
  41d460:	sub    edx,DWORD PTR [esi+0x126dc975]
  41d466:	std    
  41d467:	and    al,0x1e
  41d469:	push   edx
  41d46a:	cdq    
  41d46b:	data16 shl dh,0x93
  41d46f:	hlt    
  41d470:	dec    esi
  41d471:	mul    BYTE PTR [edi]
  41d473:	xor    BYTE PTR [ebx+0x34],bh
  41d476:	lods   al,BYTE PTR ds:[esi]
  41d477:	call   0x6cb9343b
  41d47c:	cwde   
  41d47d:	loop   0x41d44f
  41d47f:	cmp    esi,DWORD PTR [ecx+eax*1]
  41d482:	jne    0x41d436
  41d484:	inc    edx
  41d485:	scas   eax,DWORD PTR es:[edi]
  41d486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d487:	sar    BYTE PTR [eax+0x11],1
  41d48a:	in     eax,dx
  41d48b:	adc    cl,ah
  41d48d:	adc    eax,ecx
  41d48f:	dec    edi
  41d490:	aas    
  41d491:	cld    
  41d492:	xchg   DWORD PTR [ebp+0x269916],ebp
  41d498:	repz adc DWORD PTR [ebp+0x358f4845],edi
  41d49f:	and    ah,BYTE PTR [ecx-0x65cad038]
  41d4a5:	sub    esi,DWORD PTR [edi+ebx*1+0x56c664d9]
  41d4ac:	sbb    DWORD PTR [eax],0xbdb81790
  41d4b2:	shl    DWORD PTR [eax+0x6d],cl
  41d4b5:	mov    BYTE PTR [ecx],dl
  41d4b7:	sub    al,0xf5
  41d4b9:	imul   edx,DWORD PTR [eax+0x4f],0xc1e4054b
  41d4c0:	mov    ebp,0xf7f886f9
  41d4c5:	dec    esp
  41d4c6:	bound  edx,QWORD PTR [eax+edi*4+0x146052d3]
  41d4cd:	out    dx,eax
  41d4ce:	dec    edi
  41d4cf:	mov    ebp,0xca945d85
  41d4d4:	xor    ebp,DWORD PTR [eax]
  41d4d6:	pop    ebp
  41d4d7:	jmp    0x31da44e0
  41d4dc:	(bad)  
  41d4dd:	adc    esp,DWORD PTR [edx]
  41d4df:	ds and al,0x9c
  41d4e2:	sbb    eax,0x84ae0e55
  41d4e7:	adc    BYTE PTR [esp+edx*8+0x16beffca],al
  41d4ee:	and    dh,dl
  41d4f0:	mov    ecx,0x144a0508
  41d4f5:	mov    cl,0x14
  41d4f7:	inc    edi
  41d4f8:	cdq    
  41d4f9:	sbb    al,0xce
  41d4fb:	push   edx
  41d4fc:	sbb    DWORD PTR [esi+0x502063d1],0xe
  41d503:	js     0x41d4ea
  41d505:	or     al,0x42
  41d507:	cmp    dl,dl
  41d509:	call   0x8986:0x3b9ecb1
  41d510:	and    DWORD PTR ds:0xe2b31dd3,ebp
  41d516:	mov    bl,0x1a
  41d518:	jmp    0x41d4bd
  41d51a:	ret    
  41d51b:	int    0xf
  41d51d:	test   DWORD PTR [esp+eax*1],eax
  41d520:	add    BYTE PTR [eax],al
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d5a1
  41d54b:	sbb    BYTE PTR [ecx+0x1655da70],dl
  41d551:	sbb    BYTE PTR [edx+edx*1-0x2138e7e8],bh
  41d558:	in     al,dx
  41d559:	cs jb  0x41d5d3
  41d55c:	mov    ds,WORD PTR [ebx+0x21]
  41d55f:	jns    0x41d56d
  41d561:	les    ecx,FWORD PTR [ebx-0x3f6c34ce]
  41d567:	int3   
  41d568:	sbb    BYTE PTR [ebx+eiz*8-0xe],0xb3
  41d56d:	mov    ds,WORD PTR [ecx]
  41d56f:	jne    0x41d577
  41d571:	bound  edi,QWORD PTR [ebx+0x5]
  41d574:	out    0x73,al
  41d576:	xlat   BYTE PTR ds:[ebx]
  41d577:	in     al,dx
  41d578:	mov    esi,0x3ece648e
  41d57d:	adc    al,0xf
  41d57f:	mov    eax,0x501af38c
  41d584:	push   DWORD PTR [eax-0x437046f9]
  41d58a:	je     0x41d56b
  41d58c:	jne    0x41d50e
  41d58e:	push   es
  41d58f:	(bad)  
  41d590:	loop   0x41d520
  41d592:	mov    edx,0xf70bd98b
  41d597:	or     DWORD PTR [ecx-0x5d],0x32
  41d59b:	inc    eax
  41d59c:	jle    0x41d595
  41d59e:	mov    al,ds:0x16287d81
  41d5a3:	call   0xbab5:0x95a0c9b3
  41d5aa:	js     0x41d5a5
  41d5ac:	iret   
  41d5ad:	retf   
  41d5ae:	ins    BYTE PTR es:[edi],dx
  41d5af:	(bad)  
  41d5b0:	mov    ecx,0x3ddeaab9
  41d5b5:	call   0xdcc2:0x62cfb981
  41d5bc:	inc    ebp
  41d5bd:	xchg   edx,eax
  41d5be:	ret    0x6d14
  41d5c1:	mov    al,0xc
  41d5c3:	in     eax,0xb4
  41d5c5:	xchg   esp,esp
  41d5c7:	jnp    0x41d600
  41d5c9:	das    
  41d5ca:	(bad)
  41d5ce:	jo     0x41d5b1
  41d5d0:	jnp    0x41d55a
  41d5d2:	fwait
  41d5d3:	cmp    BYTE PTR [eax+0x2c1cc911],dl
  41d5d9:	sub    DWORD PTR ds:0xa5958a4c,esp
  41d5df:	push   ss
  41d5e0:	sub    BYTE PTR [edi-0x5927fc23],ch
  41d5e6:	ss ins DWORD PTR es:[edi],dx
  41d5e8:	xchg   BYTE PTR [ebx],dl
  41d5ea:	ror    DWORD PTR [edi+0x42ac3b32],cl
  41d5f0:	inc    ebx
  41d5f1:	into   
  41d5f2:	jp     0x41d5a7
  41d5f4:	out    dx,al
  41d5f5:	xchg   ebx,eax
  41d5f6:	sar    al,0xa5
  41d5f9:	aaa    
  41d5fa:	pop    eax
  41d5fb:	mov    ecx,0xefb9153a
  41d600:	js     0x41d5e4
  41d602:	xchg   BYTE PTR [eax],al
  41d604:	leave  
  41d605:	test   BYTE PTR [eax+0x2cb5d143],ah
  41d60b:	scas   al,BYTE PTR es:[edi]
  41d60c:	aad    0xd8
  41d60e:	push   ss
  41d60f:	outs   dx,DWORD PTR ds:[esi]
  41d610:	cmp    DWORD PTR [ebx-0xb442a4a],eax
  41d616:	dec    edi
  41d617:	sbb    ch,cl
  41d619:	and    BYTE PTR ds:0x66e2cdc3,dl
  41d61f:	call   0x623ea553
  41d624:	arpl   WORD PTR [ebp+eax*8+0x7d5caf18],dx
  41d62b:	dec    esp
  41d62c:	pop    es
  41d62d:	mov    cl,0xc0
  41d62f:	bnd jmp 0x41d666
  41d632:	sbb    dh,dl
  41d634:	ds icebp 
  41d636:	sbb    eax,eax
  41d638:	sub    al,0xfb
  41d63a:	mov    eax,0x6e208d24
  41d63f:	sbb    al,0x33
  41d641:	(bad)  
  41d642:	xor    eax,0x15111bff
  41d647:	mov    eax,ds:0x7b2baa1c
  41d64c:	add    edi,DWORD PTR [ecx+0x239e0384]
  41d652:	cmp    di,WORD PTR [ebx+0x44]
  41d656:	push   ecx
  41d657:	jle    0x41d640
  41d659:	sub    ebx,DWORD PTR [esp+ecx*2-0x62edddca]
  41d660:	adc    DWORD PTR [eax-0x44],edx
  41d663:	retf   
  41d664:	and    dl,BYTE PTR [edi]
  41d666:	mov    bh,0x56
  41d668:	inc    edx
  41d669:	sar    ebp,cl
  41d66b:	scas   eax,DWORD PTR es:[edi]
  41d66c:	test   eax,0xa93eafc0
  41d671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d672:	fbstp  TBYTE PTR [eax-0x40]
  41d675:	ret    0xdf8
  41d678:	jecxz  0x41d67e
  41d67a:	fiadd  DWORD PTR [edx]
  41d67c:	test   BYTE PTR [eax+0x1e],cl
  41d67f:	push   esp
  41d680:	mov    WORD PTR [esi],ds
  41d682:	and    BYTE PTR [edi+0x65],bh
  41d685:	fnstenv [edi-0x6a4212]
  41d68b:	mov    ss,WORD PTR [eax+0x39cde9e6]
  41d691:	push   eax
  41d692:	dec    esi
  41d693:	shl    BYTE PTR [ebp-0x6d],0x56
  41d697:	mov    edi,0xa65dad12
  41d69d:	push   edx
  41d69e:	cmp    eax,DWORD PTR [ecx-0x43b03f4]
  41d6a4:	sbb    eax,0xc476c999
  41d6a9:	adc    eax,0x4cd94fce
  41d6ae:	xchg   esi,eax
  41d6af:	mov    edx,0xa33436d8
  41d6b4:	nop
  41d6b5:	sub    ebp,DWORD PTR [eax-0x3]
  41d6b8:	jno    0x41d6ee
  41d6ba:	imul   edi,DWORD PTR [edx],0x25aba74a
  41d6c0:	push   0xcf607dec
  41d6c5:	mov    ds:0xcdf3f589,eax
  41d6ca:	or     esi,0xd54c5b9a
  41d6d0:	adc    al,0xac
  41d6d2:	mov    ecx,0x654eb2a
  41d6d7:	mov    eax,ds:0x362ee455
  41d6dc:	and    DWORD PTR [ecx],0x48
  41d6df:	sub    al,BYTE PTR [esi-0x1e0f5c7f]
  41d6e5:	jns    0x41d6da
  41d6e7:	inc    ebp
  41d6e8:	pop    DWORD PTR [esp+ebp*8]
  41d6eb:	pop    ebp
  41d6ec:	push   cs
  41d6ed:	sar    BYTE PTR [esi],0xcb
  41d6f0:	ficom  DWORD PTR [eax]
  41d6f2:	test   al,0x2f
  41d6f4:	mov    ah,0x11
  41d6f6:	lods   al,BYTE PTR ds:[esi]
  41d6f7:	mov    ?,WORD PTR [ebp-0x46ecb8f9]
  41d6fd:	cwde   
  41d6fe:	or     bh,BYTE PTR [eax]
  41d700:	mov    ebp,0x21eb6379
  41d705:	out    0x38,al
  41d707:	sub    BYTE PTR [ecx-0x1f],0xb9
  41d70b:	je     0x41d6aa
  41d70d:	cs mov cl,0x44
  41d710:	add    DWORD PTR [edi+eax*1],ebp
  41d713:	mov    esi,0x81694303
  41d718:	fisub  WORD PTR [edx]
  41d71a:	jno    0x41d701
  41d71c:	retf   0xc02
  41d71f:	add    al,0x70
  41d721:	repnz xchg esp,eax
  41d723:	sub    esp,DWORD PTR [ebx]
  41d725:	push   esp
  41d726:	dec    eax
  41d727:	outs   dx,BYTE PTR ds:[esi]
  41d728:	popf   
  41d729:	int3   
  41d72a:	outs   dx,BYTE PTR ds:[esi]
  41d72b:	sub    DWORD PTR [esi+ebx*1-0x2f],0xffffffd2
  41d730:	rcl    al,1
  41d732:	adc    al,0xb0
  41d734:	int3   
  41d735:	pop    esp
  41d736:	je     0x41d6dc
  41d738:	jmp    0x41d703
  41d73a:	cli    
  41d73b:	mov    eax,0x4189f705
  41d740:	inc    esp
  41d741:	lods   al,BYTE PTR ds:[esi]
  41d742:	sub    al,0x68
  41d744:	mov    DWORD PTR [ecx+0x24],0xf25269b9
  41d74b:	push   ebx
  41d74c:	rol    BYTE PTR [edi],cl
  41d74e:	or     al,0x6
  41d750:	mov    al,ds:0x15a761e9
  41d755:	dec    edx
  41d756:	and    DWORD PTR [eax-0x7115c6ee],esi
  41d75c:	jns    0x41d6ed
  41d75e:	les    esi,FWORD PTR [esi+0x211bb076]
  41d764:	arpl   WORD PTR [edx+ebp*8],bx
  41d767:	xor    BYTE PTR [esi-0x4e],ch
  41d76a:	pop    esp
  41d76b:	sub    DWORD PTR ss:[edx],eax
  41d76e:	jp     0x41d790
  41d770:	push   edi
  41d771:	scas   eax,DWORD PTR es:[edi]
  41d772:	(bad)
  41d775:	inc    esi
  41d776:	aas    
  41d777:	cli    
  41d778:	xor    BYTE PTR [ebx+0x5bf2a12],bl
  41d77e:	scas   al,BYTE PTR es:[edi]
  41d77f:	jmp    0x264a9149
  41d784:	jl     0x41d73e
  41d786:	cmp    DWORD PTR [edi],ebx
  41d788:	dec    ebp
  41d789:	punpckhbw mm2,QWORD PTR [eax+0x6976e63]
  41d790:	push   edx
  41d791:	fcmove st,st(0)
  41d793:	ucomiss xmm2,DWORD PTR [ebx+0x1090bd7c]
  41d79a:	or     ecx,DWORD PTR [esi]
  41d79c:	xchg   ebx,eax
  41d79d:	mov    dh,0xdc
  41d79f:	xor    ebp,DWORD PTR [ebx+ebp*4]
  41d7a2:	mov    eax,0x2945cf50
  41d7a7:	xlat   BYTE PTR ds:[ebx]
  41d7a8:	inc    eax
  41d7a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7aa:	mov    ds:0x3ea55ba7,eax
  41d7af:	dec    ecx
  41d7b0:	mov    al,ds:0x9bfa8c2
  41d7b5:	enter  0xa7f1,0x22
  41d7b9:	rcl    edx,1
  41d7bb:	aam    0x9b
  41d7bd:	ds inc esp
  41d7bf:	sar    DWORD PTR [ebx+0x68b502e7],0x60
  41d7c6:	jno    0x41d78e
  41d7c8:	aam    0xe
  41d7ca:	mov    ebp,0x40d03dc6
  41d7cf:	mov    al,0xe2
  41d7d1:	xor    DWORD PTR cs:[edx+0x3adf04d2],0xffffffac
  41d7d9:	mov    bh,0x48
  41d7db:	inc    ecx
  41d7dc:	dec    ebp
  41d7dd:	scas   al,BYTE PTR es:[edi]
  41d7de:	xchg   ebp,eax
  41d7df:	dec    ecx
  41d7e0:	push   ecx
  41d7e1:	test   BYTE PTR [edi+0x79f0047d],0x97
  41d7e8:	bound  edx,QWORD PTR [ebx]
  41d7ea:	call   0x4b618419
  41d7ef:	shr    DWORD PTR [edx+0x6b],0xd9
  41d7f3:	cdq    
  41d7f4:	add    al,0x71
  41d7f6:	retf   0xa27
  41d7f9:	sub    eax,0xce74a3c9
  41d7fe:	gs jb  0x41d790
  41d801:	pop    ecx
  41d802:	mov    bl,0x16
  41d804:	or     DWORD PTR [ebx-0x36f77166],ebx
  41d80a:	aam    0x40
  41d80c:	sbb    DWORD PTR [ebp+0x62],edx
  41d80f:	xchg   ecx,ebp
  41d811:	out    0xca,eax
  41d813:	add    al,0x44
  41d815:	test   DWORD PTR [eax+edx*1],ecx
  41d818:	shl    DWORD PTR [edi],1
  41d81a:	push   esi
  41d81b:	daa    
  41d81c:	jmp    0xbeb8:0x18512d0e
  41d823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d824:	cmp    eax,0x46b773e6
  41d829:	adc    eax,0xc57fcc28
  41d82e:	outs   dx,DWORD PTR ds:[esi]
  41d82f:	push   0xffffff82
  41d831:	jge    0x41d7b9
  41d833:	(bad)  
  41d834:	out    dx,eax
  41d835:	jl     0x41d81f
  41d837:	jae    0x41d826
  41d839:	mov    cl,0x7
  41d83b:	aaa    
  41d83c:	adc    dh,ch
  41d83e:	jge    0x41d7c9
  41d840:	aaa    
  41d841:	cmp    BYTE PTR [esi+eiz*2+0x57],al
  41d845:	cmp    esi,DWORD PTR [edi+0x7f]
  41d848:	lods   al,BYTE PTR ds:[esi]
  41d849:	jne    0x41d85e
  41d84b:	dec    edx
  41d84c:	nop
  41d84d:	dec    eax
  41d84e:	adc    BYTE PTR [eax-0xaf2f941],dh
  41d854:	jne    0x41d852
  41d856:	lahf   
  41d857:	xor    DWORD PTR [esi-0x443a9f13],0xd
  41d85e:	test   eax,0xe38b7723
  41d863:	stos   DWORD PTR es:[edi],eax
  41d864:	xlat   BYTE PTR ds:[ebx]
  41d865:	jns    0x41d8be
  41d867:	xchg   ebp,eax
  41d868:	dec    ebx
  41d869:	push   ebp
  41d86a:	pusha  
  41d86b:	xchg   DWORD PTR [ebx],edi
  41d86d:	xchg   edi,eax
  41d86e:	int3   
  41d86f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d870:	outs   dx,BYTE PTR ds:[esi]
  41d871:	outs   dx,BYTE PTR ds:[esi]
  41d872:	inc    ebp
  41d873:	mov    ch,0x10
  41d875:	xor    eax,0x61b9ed9c
  41d87a:	push   edi
  41d87b:	lock push 0x45bb18d2
  41d881:	sbb    esp,DWORD PTR [ecx-0x5a3cecf7]
  41d887:	mov    ch,0xf4
  41d889:	into   
  41d88a:	inc    ebp
  41d88b:	gs ins BYTE PTR es:[edi],dx
  41d88d:	cdq    
  41d88e:	sar    DWORD PTR [ebx-0x77e2d7ff],1
  41d894:	test   al,0x3f
  41d896:	pop    edi
  41d897:	mov    eax,0xc6889fb9
  41d89c:	sbb    al,0x5
  41d89e:	cmp    al,0x43
  41d8a0:	jo     0x41d88a
  41d8a2:	jp     0x41d8ea
  41d8a4:	or     al,0xa1
  41d8a6:	inc    eax
  41d8a7:	loop   0x41d923
  41d8a9:	xor    eax,0x8ca1b708
  41d8ae:	push   ebx
  41d8af:	pop    edi
  41d8b0:	and    ebp,esi
  41d8b2:	sub    edx,DWORD PTR [esi+esi*8]
  41d8b5:	xchg   edi,eax
  41d8b6:	jge    0x41d92a
  41d8b8:	dec    esp
  41d8b9:	cmp    BYTE PTR [edi-0x1f],al
  41d8bc:	mov    cl,0xa1
  41d8be:	aas    
  41d8bf:	mov    ch,ch
  41d8c1:	mov    edx,0xd0c80448
  41d8c6:	lods   eax,DWORD PTR ds:[esi]
  41d8c7:	mov    BYTE PTR [edx-0x70b6bf7e],al
  41d8cd:	add    eax,0x21826f43
  41d8d2:	inc    ecx
  41d8d3:	shl    BYTE PTR [edi-0x55],0x83
  41d8d7:	mov    edx,0x63976c0e
  41d8dc:	jns    0x41d8e6
  41d8de:	inc    edi
  41d8df:	test   BYTE PTR [eax-0x1c225f7c],bh
  41d8e5:	push   cs
  41d8e6:	dec    edi
  41d8e7:	ins    DWORD PTR es:[edi],dx
  41d8e8:	gs icebp 
  41d8ea:	cli    
  41d8eb:	ficomp WORD PTR [ecx-0x1b]
  41d8ee:	push   cs
  41d8ef:	inc    esp
  41d8f0:	test   al,0x68
  41d8f2:	xor    cl,bl
  41d8f4:	add    esi,DWORD PTR [edi-0x5c]
  41d8f7:	shl    ah,0xe4
  41d8fa:	xchg   edx,eax
  41d8fb:	mov    esp,0x51fc16de
  41d900:	dec    edi
  41d901:	mov    edx,DWORD PTR [edx-0x4b64ed2c]
  41d907:	inc    ebx
  41d908:	mov    edx,DWORD PTR [esp+0x18]
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422558
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x12eb96bc,eax
  41d941:	stos   BYTE PTR es:[edi],al
  41d942:	jg     0x41d991
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1-0x6937e7e8],bh
  41d94c:	add    al,0x29
  41d94e:	mov    eax,ds:0x94d8eea
  41d953:	lahf   
  41d954:	jmp    0x13af:0x41ac086
  41d95b:	fs call 0xe8b1:0x75b164ca
  41d963:	and    dh,BYTE PTR [eax-0x1d7dee70]
  41d969:	(bad)  
  41d96a:	jge    0x41d8fb
  41d96c:	pusha  
  41d96d:	xchg   esi,eax
  41d96e:	inc    esp
  41d96f:	not    DWORD PTR [edx+ebp*2]
  41d972:	mov    eax,ds:0xe45f2b1f
  41d977:	xchg   ecx,eax
  41d978:	repnz sbb ah,BYTE PTR [eax+0x67]
  41d97c:	mov    ebx,0xc9d4d592
  41d981:	and    al,0x19
  41d983:	call   0x2cd20487
  41d988:	jb     0x41d935
  41d98a:	lods   al,BYTE PTR ds:[esi]
  41d98b:	sub    bh,BYTE PTR [ebx+0x3f]
  41d98e:	jo     0x41d93c
  41d990:	pop    ebp
  41d991:	fadd   QWORD PTR [ecx-0x4ceb985a]
  41d997:	cmp    eax,0x4bbe51ac
  41d99c:	push   esi
  41d99d:	icebp  
  41d99e:	pop    es
  41d99f:	mov    bh,0x28
  41d9a1:	and    esi,ebp
  41d9a3:	ins    DWORD PTR es:[edi],dx
  41d9a4:	jnp    0x41d96d
  41d9a6:	fild   DWORD PTR [ecx+0x668a8005]
  41d9ac:	stc    
  41d9ad:	inc    ecx
  41d9ae:	dec    edi
  41d9af:	mov    WORD PTR [eax],cs
  41d9b1:	call   0xa771e588
  41d9b6:	test   eax,0xb3047b01
  41d9bb:	sub    al,0x8a
  41d9bd:	inc    DWORD PTR [edi+0x21218fa9]
  41d9c3:	and    BYTE PTR [ecx+0x7a99373c],0xcd
  41d9ca:	mov    ebp,0xdfae604e
  41d9cf:	pusha  
  41d9d0:	lock loopne 0x41d9eb
  41d9d3:	mov    edx,0x2084188d
  41d9d8:	mov    ecx,0x74d6e6d0
  41d9dd:	jl     0x41da59
  41d9df:	and    ebp,ecx
  41d9e1:	push   es
  41d9e2:	in     eax,0x92
  41d9e4:	stos   BYTE PTR es:[edi],al
  41d9e5:	jp     0x41d9b6
  41d9e7:	test   dl,0x8c
  41d9ea:	adc    ebp,DWORD PTR [ecx-0x5ef43fae]
  41d9f0:	(bad)
  41d9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9f6:	ror    DWORD PTR [ebp+eax*2-0x67],0x2c
  41d9fb:	lock repnz (bad) 
  41d9fe:	lds    edx,FWORD PTR [ebx+0x79]
  41da01:	aad    0x4
  41da03:	sbb    al,0x60
  41da05:	or     ebp,DWORD PTR [esi+ebp*4-0x153f3013]
  41da0c:	sub    eax,0x545a2b57
  41da11:	mov    eax,0xd1df0b16
  41da16:	push   esp
  41da17:	mov    ebp,0x90cbe681
  41da1c:	fs (bad) 
  41da1e:	push   ebp
  41da1f:	ss mov eax,0x504f2d54
  41da25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da27:	add    BYTE PTR [eax-0x2c23290e],al
  41da2d:	(bad)  
  41da2e:	sub    eax,0x5a0beaab
  41da33:	inc    esi
  41da34:	mov    dh,BYTE PTR [edx]
  41da36:	dec    ebx
  41da37:	icebp  
  41da38:	loope  0x41da40
  41da3a:	fs mov ebx,0xceeeceb1
  41da40:	add    DWORD PTR [edx+0x69ed5b13],edx
  41da46:	dec    esi
  41da47:	shl    DWORD PTR [ebp-0x16b0d7fc],cl
  41da4d:	aas    
  41da4e:	shl    DWORD PTR [esi+0x211998b9],0x9c
  41da55:	xchg   esp,eax
  41da56:	fwait
  41da57:	and    eax,DWORD PTR [edx-0x340fccc2]
  41da5d:	pop    esi
  41da5e:	xchg   ebp,eax
  41da5f:	mov    bl,0xa5
  41da61:	push   eax
  41da62:	xchg   ebp,eax
  41da63:	mov    ebp,0x10d26aa
  41da68:	mov    bh,0xe4
  41da6a:	jbe    0x41da38
  41da6c:	or     al,0xbc
  41da6e:	xor    dx,ax
  41da71:	hlt    
  41da72:	mov    ds:0x59aea72d,al
  41da77:	pushf  
  41da78:	xchg   ecx,eax
  41da79:	sar    DWORD PTR [eax+0x36],0xd0
  41da7d:	int    0x9a
  41da7f:	lods   eax,DWORD PTR ds:[esi]
  41da80:	sub    al,0x88
  41da82:	lahf   
  41da83:	sub    al,0xbb
  41da85:	mov    al,ds:0xb654be82
  41da8a:	mov    ah,0xad
  41da8c:	mov    WORD PTR [ecx-0x13dc9ed],ss
  41da92:	jmp    0xfcee:0xe6aee1bd
  41da99:	scas   eax,DWORD PTR es:[edi]
  41da9a:	adc    DWORD PTR [ecx],ebx
  41da9c:	fs push cs
  41da9e:	in     eax,dx
  41da9f:	loope  0x41da79
  41daa1:	jp     0x41da9f
  41daa3:	mov    ds:0x45c2e8a0,eax
  41daa8:	popa   
  41daa9:	(bad)
  41daac:	das    
  41daad:	add    eax,0xed1b6c80
  41dab2:	lea    eax,[ecx]
  41dab4:	sbb    bl,bh
  41dab6:	test   DWORD PTR [ecx+0x5dd43252],esp
  41dabc:	cmp    al,0xf1
  41dabe:	xchg   esp,eax
  41dabf:	imul   eax,DWORD PTR [ebp+0x1b3f213c],0x68952a98
  41dac9:	dec    esp
  41daca:	loop   0x41dae7
  41dacc:	outs   dx,DWORD PTR ds:[esi]
  41dacd:	imul   ebp,DWORD PTR [eax+0x37],0xfffffffd
  41dad1:	jb     0x41dac2
  41dad3:	call   0x5cba:0xf6be6d4e
  41dada:	jecxz  0x41dafb
  41dadc:	mov    ch,0x88
  41dade:	popa   
  41dadf:	cdq    
  41dae0:	neg    BYTE PTR [ebp-0x131ce873]
  41dae6:	cwde   
  41dae7:	fmul   DWORD PTR [eax+0x5730a3bc]
  41daed:	lods   al,BYTE PTR ds:[esi]
  41daee:	fistp  DWORD PTR [ebp+0x15]
  41daf1:	imul   edx,DWORD PTR [ebx],0x1a7753a9
  41daf7:	nop
  41daf8:	aaa    
  41daf9:	fidivr WORD PTR [eax+0x10]
  41dafc:	js     0x41db60
  41dafe:	pop    esi
  41daff:	(bad)  
  41db00:	ror    BYTE PTR [eax-0x2f],1
  41db03:	add    esp,eax
  41db05:	out    dx,al
  41db06:	sub    eax,0x4c5d04fe
  41db0b:	inc    esp
  41db0c:	mov    ch,0x53
  41db0e:	es out dx,al
  41db10:	lods   al,BYTE PTR ds:[esi]
  41db11:	je     0x41dab4
  41db13:	test   DWORD PTR [ebx],0xa4264f17
  41db19:	fstp   QWORD PTR [ebp-0x4f]
  41db1c:	rcr    DWORD PTR [ebp+0x58],cl
  41db1f:	xrelease mov DWORD PTR [edi-0xa],esp
  41db23:	cmp    sp,WORD PTR [edx]
  41db26:	or     eax,0x5ad15b0
  41db2b:	jne    0x41dab0
  41db2d:	sbb    BYTE PTR [edx-0x5d],dl
  41db30:	cs mov dl,0xb6
  41db33:	out    0xdf,al
  41db35:	or     al,0x15
  41db37:	dec    edx
  41db38:	jo     0x41db71
  41db3a:	data16 hlt 
  41db3c:	cmp    eax,0x43ab9c0
  41db41:	sbb    eax,0x8ff905be
  41db46:	clc    
  41db47:	or     BYTE PTR [ecx+0x14],ah
  41db4a:	jl     0x41db29
  41db4c:	pushf  
  41db4d:	jg     0x41dbcb
  41db4f:	pop    ecx
  41db50:	push   es
  41db51:	into   
  41db52:	dec    edi
  41db53:	ss cld 
  41db55:	aaa    
  41db56:	adc    eax,0x3f80ca45
  41db5b:	mov    ecx,0xd2ba441c
  41db60:	or     ch,BYTE PTR [ebx+0x38]
  41db63:	cmp    dh,bl
  41db65:	dec    ebp
  41db66:	mov    esi,0xc09ac5ed
  41db6b:	and    al,BYTE PTR [edi+0x15]
  41db6e:	xor    BYTE PTR [ecx+0x2a82244f],dl
  41db74:	imul   ecx,DWORD PTR [ebp-0xf150361],0x7b
  41db7b:	aad    0x7b
  41db7d:	and    DWORD PTR [esi-0x26919c70],edx
  41db83:	lahf   
  41db84:	in     eax,0x45
  41db86:	adc    al,0xd6
  41db88:	int3   
  41db89:	xor    eax,0xfe154369
  41db8e:	test   BYTE PTR [ebx+0x796950d6],ah
  41db94:	mov    al,0xf6
  41db96:	fsubr  DWORD PTR [eax]
  41db98:	cmovns edx,DWORD PTR [eax+0x723c3f4f]
  41db9f:	test   al,0xe6
  41dba1:	rcr    DWORD PTR [ebx],1
  41dba3:	frstor [ebx]
  41dba5:	test   BYTE PTR [ebx],dh
  41dba7:	push   edi
  41dba8:	xor    DWORD PTR [ecx+0x1887829a],esp
  41dbae:	adc    cl,dh
  41dbb0:	in     al,dx
  41dbb1:	out    0xc5,al
  41dbb3:	bound  ebp,QWORD PTR [ebx]
  41dbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb6:	in     al,dx
  41dbb7:	je     0x41dbd1
  41dbb9:	xchg   esi,eax
  41dbba:	in     al,dx
  41dbbb:	xor    ecx,eax
  41dbbd:	adc    eax,0x737e8f5d
  41dbc2:	dec    ebx
  41dbc3:	pusha  
  41dbc4:	xor    BYTE PTR [ecx*1-0x2a320f81],0x66
  41dbcc:	mov    ch,0xd7
  41dbce:	in     eax,dx
  41dbcf:	inc    edx
  41dbd0:	xchg   DWORD PTR [ebx-0x9],edx
  41dbd3:	js     0x41dc12
  41dbd5:	push   edx
  41dbd6:	dec    eax
  41dbd7:	adc    ah,BYTE PTR [edi]
  41dbd9:	outs   dx,BYTE PTR ds:[esi]
  41dbda:	aad    0x40
  41dbdc:	pop    ss
  41dbdd:	iret   
  41dbde:	(bad)  [edx+0x79]
  41dbe1:	out    0xa6,al
  41dbe3:	xchg   esp,eax
  41dbe4:	dec    ecx
  41dbe5:	(bad)  [edi+0x5e]
  41dbe8:	repnz and al,0x3b
  41dbeb:	inc    ebp
  41dbec:	sub    esi,DWORD PTR [esi]
  41dbee:	sbb    DWORD PTR [edi+0x2367c828],ecx
  41dbf4:	push   ebp
  41dbf5:	test   BYTE PTR [eax],ah
  41dbf7:	leave  
  41dbf8:	inc    ebx
  41dbf9:	mov    eax,ds:0xb1b939c
  41dbfe:	daa    
  41dbff:	mov    ds:0xff6461fa,eax
  41dc04:	push   dx
  41dc06:	sbb    BYTE PTR [edi],bh
  41dc08:	dec    esp
  41dc09:	pop    ebp
  41dc0a:	fwait
  41dc0b:	rcl    BYTE PTR [edi],1
  41dc0d:	pop    ebp
  41dc0e:	xchg   DWORD PTR [eax+edx*1-0x26],ebx
  41dc12:	mov    ds:0x607af550,al
  41dc17:	shl    BYTE PTR [esi],0x57
  41dc1a:	and    eax,0x383cc439
  41dc1f:	nop
  41dc20:	mov    ds:0xa3589782,eax
  41dc25:	mov    ds:0x98602fa6,eax
  41dc2a:	data16 fadd DWORD PTR [edi+0x6e]
  41dc2e:	and    DWORD PTR [ebx-0x4a1b61a8],edi
  41dc34:	dec    esi
  41dc35:	xchg   edi,eax
  41dc36:	pop    ebp
  41dc37:	aaa    
  41dc38:	xchg   edx,eax
  41dc39:	arpl   WORD PTR [ebx+0x7a2d03ef],di
  41dc3f:	outs   dx,DWORD PTR ds:[esi]
  41dc40:	test   al,0xc4
  41dc42:	sbb    al,0x7e
  41dc44:	mov    esi,0xf34fa687
  41dc49:	xchg   DWORD PTR [edi-0x41fc8316],eax
  41dc4f:	jne    0x41dc2a
  41dc51:	ins    DWORD PTR es:[edi],dx
  41dc52:	loopne 0x41dcb5
  41dc54:	or     ah,ah
  41dc56:	adc    bl,BYTE PTR [ecx-0x38]
  41dc59:	jae    0x41dc6f
  41dc5b:	and    bl,dh
  41dc5d:	frstor [ebp+0x7d]
  41dc60:	(bad)  
  41dc61:	mul    DWORD PTR [edx-0x9]
  41dc64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc65:	adc    ebp,DWORD PTR [edi]
  41dc67:	shl    BYTE PTR [eax+0xab14614],0xc8
  41dc6e:	pop    ecx
  41dc6f:	or     DWORD PTR [edx],esi
  41dc71:	xchg   ecx,eax
  41dc72:	add    edx,DWORD PTR [esi-0x6f93e369]
  41dc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc79:	leave  
  41dc7a:	shl    BYTE PTR [eax-0x27],1
  41dc7d:	cdq    
  41dc7e:	mov    dl,0x3
  41dc80:	jo     0x41dc71
  41dc82:	iret   
  41dc83:	fidiv  WORD PTR [edx+0x4a]
  41dc86:	jecxz  0x41dc6e
  41dc88:	scas   eax,DWORD PTR es:[edi]
  41dc89:	sahf   
  41dc8a:	push   0xffffffe2
  41dc8c:	mov    cl,0x26
  41dc8e:	(bad)  
  41dc8f:	cdq    
  41dc90:	(bad)  
  41dc92:	pop    eax
  41dc93:	mov    ch,BYTE PTR [eax+edx*1]
  41dc96:	aas    
  41dc97:	pusha  
  41dc98:	cmp    al,0x25
  41dc9a:	dec    eax
  41dc9b:	in     al,dx
  41dc9c:	push   ds
  41dc9d:	xchg   esp,eax
  41dc9e:	jmp    FWORD PTR [edx-0x101f0b75]
  41dca4:	inc    ecx
  41dca5:	add    DWORD PTR [ebx+0x57],0xd70aa0b3
  41dcac:	icebp  
  41dcad:	push   ebx
  41dcae:	data16 stc 
  41dcb0:	and    al,cl
  41dcb2:	test   eax,0xc30993f6
  41dcb7:	xchg   esi,eax
  41dcb8:	aam    0x54
  41dcba:	add    bl,BYTE PTR [edx+0x25]
  41dcbd:	cmp    BYTE PTR [esp+esi*4+0x70],bh
  41dcc1:	test   BYTE PTR [edi-0x2a],al
  41dcc4:	fisubr DWORD PTR [eax+0x5b9dd920]
  41dcca:	sub    eax,DWORD PTR [ecx-0x623d94b0]
  41dcd0:	jge    0x41dcd4
  41dcd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd3:	test   ecx,0x2cc013ed
  41dcd9:	and    eax,0x19665af5
  41dcde:	in     eax,dx
  41dcdf:	adc    ch,BYTE PTR [edx+ecx*2+0x19a0059e]
  41dce6:	xor    cl,BYTE PTR [eax-0x66]
  41dce9:	cdq    
  41dcea:	and    DWORD PTR [eax],esp
  41dcec:	and    eax,0xedd5ec07
  41dcf1:	scas   eax,DWORD PTR es:[edi]
  41dcf2:	into   
  41dcf3:	stc    
  41dcf4:	stos   DWORD PTR es:[edi],eax
  41dcf5:	sub    eax,0x2920175d
  41dcfa:	out    0x49,eax
  41dcfc:	lea    eax,[esp+0x6c]
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0xfffffffc
  41dd5b:	scas   al,BYTE PTR es:[edi]
  41dd5c:	push   ebx
  41dd5d:	stos   BYTE PTR es:[edi],al
  41dd5e:	and    al,BYTE PTR [edi+0x16]
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x7a0ee7e8],bh
  41dd68:	or     DWORD PTR [edi],esp
  41dd6a:	aam    0xef
  41dd6c:	xor    BYTE PTR [edi-0xfaa05b5],bl
  41dd72:	adc    DWORD PTR [ecx],0x1a
  41dd75:	inc    BYTE PTR gs:[ecx+0x55]
  41dd79:	repz out dx,al
  41dd7b:	das    
  41dd7c:	dec    edx
  41dd7d:	add    al,ah
  41dd7f:	sbb    al,0x65
  41dd81:	test   BYTE PTR [eax-0x3bde450d],al
  41dd87:	cs mov ebp,0xdffd2ce0
  41dd8d:	jecxz  0x41ddfb
  41dd8f:	sub    eax,0x4a3cc8aa
  41dd94:	fidivr WORD PTR [ecx+0x6f]
  41dd97:	popf   
  41dd98:	ins    DWORD PTR es:[edi],dx
  41dd99:	xchg   BYTE PTR [esi+esi*2+0x5fb38828],al
  41dda0:	mov    bh,0xd4
  41dda2:	mov    bl,0xd2
  41dda4:	jg     0x41ddec
  41dda6:	cmp    ch,BYTE PTR [edx-0x59e60189]
  41ddac:	out    dx,al
  41ddad:	in     al,dx
  41ddae:	mov    ah,cl
  41ddb0:	mov    ds:0xc8542bd3,eax
  41ddb5:	sub    al,0x27
  41ddb7:	xchg   esi,eax
  41ddb8:	in     al,0x60
  41ddba:	push   edx
  41ddbb:	sub    esi,DWORD PTR [edx]
  41ddbd:	mov    eax,0x4b7d8c4f
  41ddc2:	fisubr WORD PTR [ebp+0x2aa7e0b0]
  41ddc8:	aad    0xbb
  41ddca:	(bad)  
  41ddcb:	inc    DWORD PTR [ebp-0x57c92c38]
  41ddd1:	sahf   
  41ddd2:	mov    gs,WORD PTR [esi]
  41ddd4:	std    
  41ddd5:	fdiv   DWORD PTR [ebp-0x56dfe07]
  41dddb:	cmp    BYTE PTR [ebp+eax*2-0x1],ah
  41dddf:	inc    esp
  41dde0:	popa   
  41dde1:	scas   eax,DWORD PTR es:[edi]
  41dde2:	or     esi,DWORD PTR [ecx-0x58aa6e51]
  41dde8:	shl    DWORD PTR [ebx+0x1fdc8234],0xc8
  41ddef:	mov    eax,0xeabe0163
  41ddf4:	js     0x41dddd
  41ddf6:	shl    BYTE PTR ds:[ebx+ebp*1],cl
  41ddfa:	mov    ebp,0xef623206
  41ddff:	bound  ebx,QWORD PTR [ebx]
  41de01:	mov    edx,0xf5230450
  41de06:	mov    DWORD PTR [edi-0x83d41fc],edx
  41de0c:	pop    ss
  41de0d:	es out 0xbc,eax
  41de10:	stc    
  41de11:	push   ebx
  41de12:	das    
  41de13:	xchg   ecx,eax
  41de14:	mov    BYTE PTR [ecx+0x35992ce4],ch
  41de1a:	test   BYTE PTR [ebx-0x48455cfd],ch
  41de20:	jp     0x41de7f
  41de22:	nop
  41de23:	push   ebp
  41de24:	(bad)  
  41de25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de26:	mov    al,ds:0x1d04dfd6
  41de2b:	mov    edi,0x8f238fa0
  41de30:	push   cs
  41de31:	test   eax,0xc214a166
  41de36:	ins    BYTE PTR es:[edi],dx
  41de37:	fwait
  41de38:	sbb    al,bh
  41de3a:	and    al,0x86
  41de3c:	aaa    
  41de3d:	jbe    0x41de5b
  41de3f:	mov    ecx,ebx
  41de41:	mov    esp,0x4e9f4e44
  41de46:	push   edi
  41de47:	fld    TBYTE PTR [ebp-0x769c6c37]
  41de4d:	scas   al,BYTE PTR es:[edi]
  41de4e:	mov    dh,0xdd
  41de50:	out    dx,eax
  41de51:	stc    
  41de52:	mov    ebx,0xab8313ae
  41de57:	mov    ebx,0x7a551472
  41de5c:	push   esp
  41de5d:	popf   
  41de5e:	out    0xee,eax
  41de60:	mov    cl,0x37
  41de62:	push   edx
  41de63:	xor    al,0x9b
  41de65:	inc    esp
  41de66:	dec    edx
  41de67:	mov    ds:0xcdefcb16,eax
  41de6c:	push   ebx
  41de6d:	mov    es,WORD PTR [edi]
  41de6f:	cmp    esi,DWORD PTR [ecx-0x79d7e3e7]
  41de75:	pop    ebx
  41de76:	xchg   ebx,eax
  41de77:	scas   eax,DWORD PTR es:[edi]
  41de78:	(bad)  
  41de79:	and    DWORD PTR [edi+edi*4-0x78a36b55],edi
  41de80:	lahf   
  41de81:	mov    dh,0x84
  41de83:	retf   
  41de84:	fistp  WORD PTR [ebx-0x7d]
  41de87:	lea    esi,[esi-0x5e36ff26]
  41de8d:	mov    ebx,0xfabd9c92
  41de92:	test   al,0x1a
  41de94:	(bad)  
  41de95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de96:	push   0x10
  41de98:	int    0x2a
  41de9a:	lods   al,BYTE PTR ds:[esi]
  41de9b:	call   0xe8ae:0x36ac8ea0
  41dea2:	aad    0xec
  41dea4:	mov    esp,?
  41dea6:	dec    eax
  41dea7:	xchg   edx,eax
  41dea8:	aad    0x31
  41deaa:	clc    
  41deab:	lds    esi,FWORD PTR [eax-0x11]
  41deae:	cmp    DWORD PTR [edi+ecx*4],ebx
  41deb1:	cmp    al,ch
  41deb3:	int3   
  41deb4:	ss xchg ecx,eax
  41deb6:	xlat   BYTE PTR ds:[ebx]
  41deb7:	in     al,0x14
  41deb9:	pop    es
  41deba:	rcl    bh,1
  41debc:	dec    ebp
  41debd:	fild   DWORD PTR [esi]
  41debf:	test   DWORD PTR [ebx-0x35],0xdb08c9e2
  41dec6:	mov    ebx,0x569b8b3c
  41decb:	push   0xffffffd3
  41decd:	sub    al,0x8c
  41decf:	and    al,0x45
  41ded1:	dec    edi
  41ded2:	jno    0x41dece
  41ded4:	in     eax,dx
  41ded5:	call   DWORD PTR [edi]
  41ded7:	cmp    edx,edi
  41ded9:	add    dl,BYTE PTR [esi]
  41dedb:	add    al,0xa
  41dedd:	mov    al,ds:0x844b8e20
  41dee2:	mov    ah,0xd3
  41dee4:	push   ecx
  41dee5:	xchg   edi,eax
  41dee6:	cmp    eax,0x34eceb91
  41deeb:	cmp    ebp,ecx
  41deed:	shl    dh,0x60
  41def0:	bound  edi,QWORD PTR [edx+edi*2-0x52]
  41def4:	inc    eax
  41def5:	or     eax,DWORD PTR [ebx]
  41def7:	test   dl,al
  41def9:	ja     0x41df63
  41defb:	push   edi
  41defc:	scas   al,BYTE PTR es:[edi]
  41defd:	inc    ebx
  41defe:	cdq    
  41deff:	retf   
  41df00:	ja     0x41df27
  41df02:	mov    bh,0x5a
  41df04:	icebp  
  41df05:	out    dx,al
  41df06:	sbb    cl,dh
  41df08:	jg     0x41df35
  41df0a:	cli    
  41df0b:	mov    edi,0x53c7abd
  41df10:	(bad)  
  41df11:	sub    BYTE PTR [edi+0x4],bh
  41df14:	lods   al,BYTE PTR ds:[esi]
  41df15:	push   ds
  41df16:	gs push ebp
  41df18:	cli    
  41df19:	cdq    
  41df1a:	mov    WORD PTR [ecx],fs
  41df1c:	in     al,0xdb
  41df1e:	push   DWORD PTR [eax+0x66]
  41df21:	sbb    al,0xaa
  41df23:	cmc    
  41df24:	sbb    edx,DWORD PTR [ebp-0x6f09bbef]
  41df2a:	jnp    0x41df96
  41df2c:	xor    BYTE PTR [edx+0x75],al
  41df2f:	es jmp 0xcbb3:0x7251aa25
  41df37:	ret    0xe3f
  41df3a:	mov    eax,0x83a108a2
  41df3f:	out    0x95,al
  41df41:	test   DWORD PTR [esi],0x988aa144
  41df47:	jbe    0x41df2f
  41df49:	cmp    edi,DWORD PTR [ecx+ebx*1+0x7d]
  41df4d:	int3   
  41df4e:	ds jle 0x41df31
  41df51:	and    al,0x94
  41df53:	dec    eax
  41df54:	js     0x41df8e
  41df56:	out    0x38,al
  41df58:	rol    DWORD PTR [ebp+0x1b87813c],1
  41df5e:	xor    dl,bh
  41df60:	mov    ds:0x5c3b71e7,al
  41df65:	mov    bl,0xed
  41df67:	dec    ecx
  41df68:	push   cs
  41df69:	xchg   ecx,eax
  41df6a:	fistp  QWORD PTR [ecx+0xe9bee02]
  41df70:	mov    ch,0x48
  41df72:	mov    ch,0x77
  41df74:	and    eax,0x6b242d29
  41df79:	(bad)  
  41df7a:	rep lods al,BYTE PTR ds:[esi]
  41df7c:	into   
  41df7d:	outs   dx,DWORD PTR ds:[esi]
  41df7e:	xor    eax,0xbf551e12
  41df83:	ret    0x3096
  41df86:	mov    ebp,0xced1796a
  41df8b:	or     BYTE PTR [esi+0x3d75dd27],ah
  41df91:	les    eax,FWORD PTR [edx+0x48f8eba0]
  41df97:	push   ebp
  41df98:	xor    ebx,edx
  41df9a:	js     0x41df9f
  41df9c:	push   cs
  41df9d:	adc    esp,DWORD PTR [edx]
  41df9f:	xchg   esp,eax
  41dfa0:	jnp    0x41dfe6
  41dfa2:	and    eax,DWORD PTR [esi+0x7163510c]
  41dfa8:	and    eax,DWORD PTR [esp+eax*4+0x43]
  41dfac:	gs xchg edx,eax
  41dfae:	mov    ds:0x86d401c,al
  41dfb3:	pop    ebp
  41dfb4:	std    
  41dfb5:	mov    ds:0xcc4b079b,eax
  41dfba:	retf   0x63a8
  41dfbd:	cmp    cl,dl
  41dfbf:	mov    DWORD PTR [ebx+edx*1-0x48c84e64],esi
  41dfc6:	shr    ch,1
  41dfc8:	loopne 0x41dffc
  41dfca:	push   0x63868254
  41dfcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfd0:	dec    edx
  41dfd1:	inc    ebp
  41dfd2:	cs xchg ebx,eax
  41dfd4:	das    
  41dfd5:	xchg   esi,eax
  41dfd6:	inc    ecx
  41dfd7:	gs adc dh,0x61
  41dfdb:	jg     0x41e035
  41dfdd:	cwde   
  41dfde:	(bad)  
  41dfdf:	imul   esp,DWORD PTR [edi+0x4fd391cd],0x48
  41dfe6:	add    al,0x26
  41dfe8:	rcl    BYTE PTR [ebp+esi*1-0x5],0x44
  41dfed:	add    ebx,0xc34d601d
  41dff3:	bound  ecx,QWORD PTR [edi]
  41dff5:	lock mov bl,ah
  41dff8:	or     esp,esp
  41dffa:	inc    ebx
  41dffb:	adc    BYTE PTR [ecx+0x53e0a330],ch
  41e001:	lea    ebp,[eax+edi*8+0x3c9a1ad4]
  41e008:	loopne 0x41dfc1
  41e00a:	cmc    
  41e00b:	or     eax,0xed605735
  41e010:	dec    edi
  41e011:	jne    0x41e024
  41e013:	xor    cl,cl
  41e015:	jb     0x41e001
  41e017:	xor    eax,0xb977a45f
  41e01c:	push   edi
  41e01d:	fisubr DWORD PTR [eax-0x6b6c2ccb]
  41e023:	mov    esi,0xefb775fe
  41e028:	lock mov ds:0xac6c6be7,eax
  41e02e:	cmp    eax,0x475747e2
  41e033:	shl    DWORD PTR [eax-0x54],0xe4
  41e037:	cmp    esi,DWORD PTR [eax+0x38]
  41e03a:	stos   BYTE PTR es:[edi],al
  41e03b:	dec    ebx
  41e03c:	enter  0xbba1,0xf1
  41e040:	ficom  WORD PTR [edx-0x2a258b60]
  41e046:	mov    ch,0x38
  41e048:	and    al,BYTE PTR [ebp+0x19]
  41e04b:	jmp    0x73ae:0x464d0be3
  41e052:	les    ebp,FWORD PTR [esi]
  41e054:	jno    0x41e038
  41e056:	xor    dl,bl
  41e058:	mov    al,0xde
  41e05a:	lock dec ebp
  41e05c:	mov    si,bx
  41e05f:	bound  esp,QWORD PTR [ebp+0x74bb9b25]
  41e065:	jmp    0xc74b7eb
  41e06a:	lods   al,BYTE PTR ds:[esi]
  41e06c:	(bad)  
  41e06d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e06e:	repz loopne 0x41e0cb
  41e071:	pusha  
  41e072:	adc    al,0x90
  41e074:	pop    es
  41e075:	mov    ?,ecx
  41e077:	retf   
  41e078:	sub    ebx,ebx
  41e07a:	ss jns 0x41e093
  41e07d:	dec    eax
  41e07e:	iret   
  41e07f:	mov    al,0x3f
  41e081:	xor    ebx,DWORD PTR [edi+edi*2-0x54]
  41e085:	les    edi,FWORD PTR [esp+edi*1-0x39]
  41e089:	leave  
  41e08a:	xor    eax,0x3661d3b1
  41e08f:	lods   eax,DWORD PTR ds:[esi]
  41e090:	popa   
  41e091:	jp     0x41e07c
  41e093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e094:	in     al,dx
  41e095:	je     0x41e0e8
  41e097:	lock pushf 
  41e099:	add    edx,DWORD PTR [ebp+0x73]
  41e09c:	outs   dx,BYTE PTR ds:[esi]
  41e09d:	int3   
  41e09e:	ret    
  41e09f:	push   eax
  41e0a0:	pushf  
  41e0a1:	dec    edx
  41e0a2:	dec    ebp
  41e0a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0a4:	(bad)  [edi-0x41]
  41e0a7:	xor    al,BYTE PTR [edx-0x19]
  41e0aa:	in     eax,dx
  41e0ab:	loop   0x41e02e
  41e0ad:	fsub   DWORD PTR [edi+edx*4]
  41e0b0:	mov    cs,WORD PTR [ecx+0xae711e]
  41e0b6:	and    eax,0xead8b9c7
  41e0bb:	loope  0x41e0ff
  41e0bd:	mov    esi,0x52aa8f94
  41e0c2:	mov    BYTE PTR [ecx-0x492346b5],0xcd
  41e0c9:	fidiv  DWORD PTR [edi-0x6d]
  41e0cc:	mov    ecx,0x9ec0c9ee
  41e0d1:	push   edi
  41e0d2:	push   esi
  41e0d3:	mov    ebx,0x3ffe33ab
  41e0d8:	sub    ecx,DWORD PTR [edx+ecx*4+0x69]
  41e0dc:	int3   
  41e0dd:	push   edx
  41e0de:	add    bh,cl
  41e0e0:	frstor [ecx]
  41e0e2:	adc    al,0x3c
  41e0e4:	mov    eax,0x92cd153b
  41e0e9:	mov    dl,BYTE PTR ds:0xfc8b1e51
  41e0ef:	cmp    eax,0x2dea5e92
  41e0f4:	popf   
  41e0f5:	pop    ds
  41e0f6:	push   eax
  41e0f7:	and    BYTE PTR [edx+0xad9a70c],bh
  41e0fd:	adc    eax,0xebcb6927
  41e102:	addr16 push es
  41e104:	mov    edi,DWORD PTR [ebp-0x7c]
  41e107:	pop    edx
  41e108:	xchg   ebp,eax
  41e109:	lds    edi,FWORD PTR [edx]
  41e10b:	sti    
  41e10c:	dec    ecx
  41e10d:	imul   eax,DWORD PTR [eax],0xffffff9e
  41e110:	in     eax,0x72
  41e112:	in     al,0xd9
  41e114:	int3   
  41e115:	mov    ebx,0x44c7fa3e
  41e11a:	and    al,0x10
  41e11c:	sbb    al,BYTE PTR [edx+0x0]
  41e11f:	add    BYTE PTR [ebx+0x25102444],cl
  41e125:	inc    esp
  41e126:	ret    0xffff
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	cmp    al,0xc7
  41e1f3:	xchg   edi,eax
  41e1f4:	mov    esp,0x18163fc6
  41e1f9:	mov    esp,0xf0181812
  41e1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1ff:	adc    al,0xdf
  41e201:	mov    ch,0xb5
  41e203:	mov    al,ds:0x7e940598
  41e208:	sub    eax,0x47eb579f
  41e20d:	add    al,0xdf
  41e20f:	fld    QWORD PTR [esi-0x7ab6c33a]
  41e215:	mov    bh,0xda
  41e217:	or     DWORD PTR [eax-0x32],ecx
  41e21a:	sub    BYTE PTR [ebx-0x2d2cb10a],0x4f
  41e221:	hlt    
  41e222:	sub    BYTE PTR [ecx+eiz*1-0x16],bl
  41e226:	and    dh,cl
  41e228:	jne    0x41e1e1
  41e22a:	nop
  41e22b:	arpl   si,si
  41e22d:	popa   
  41e22e:	sbb    bh,BYTE PTR [ebx-0x1b]
  41e231:	std    
  41e232:	stos   BYTE PTR es:[edi],al
  41e233:	adc    BYTE PTR [ebp-0x69],bh
  41e236:	pop    esp
  41e237:	xchg   BYTE PTR [ebx+0x1d],ah
  41e23a:	jo     0x41e2a4
  41e23c:	inc    esp
  41e23e:	ret    0x59f7
  41e241:	jne    0x41e24f
  41e243:	outs   dx,DWORD PTR ds:[esi]
  41e244:	pushf  
  41e245:	in     al,0xcf
  41e247:	mov    ebx,0x54e9e716
  41e24c:	pop    ecx
  41e24d:	mov    bh,0x59
  41e24f:	pushf  
  41e250:	and    BYTE PTR [ebx-0x6dafc037],cl
  41e256:	cli    
  41e257:	pop    edi
  41e258:	xor    al,BYTE PTR [ebp+0x37]
  41e25b:	push   eax
  41e25c:	test   DWORD PTR [ebp+eax*4+0x16],edi
  41e260:	cdq    
  41e261:	rcl    DWORD PTR [ebx-0xd],0x29
  41e265:	out    dx,al
  41e266:	fdivr  DWORD PTR [ebp+0x4e]
  41e269:	lahf   
  41e26a:	in     eax,0x8e
  41e26c:	scas   eax,DWORD PTR es:[edi]
  41e26d:	pop    es
  41e26e:	add    eax,0x6d673bbb
  41e273:	or     eax,0xb8f9efc1
  41e278:	shl    ebx,cl
  41e27a:	jl     0x41e29b
  41e27c:	aas    
  41e27d:	lea    edx,[edi-0x4]
  41e280:	ret    
  41e281:	imul   ecx,DWORD PTR ds:0x1f2bfa97,0xa6b7221f
  41e28b:	(bad)  
  41e28c:	dec    BYTE PTR [ebp-0x1fbbef78]
  41e292:	(bad)
  41e296:	sbb    cl,BYTE PTR [edi]
  41e298:	outs   dx,BYTE PTR ds:[esi]
  41e299:	adc    edi,ecx
  41e29b:	dec    ecx
  41e29c:	xor    eax,0xd4b297c
  41e2a1:	sub    BYTE PTR [edx],0xec
  41e2a4:	pop    edi
  41e2a5:	jb     0x41e266
  41e2a7:	xor    eax,0x600cd49c
  41e2ac:	pop    DWORD PTR [esi-0x23]
  41e2af:	imul   edx,DWORD PTR [esp+ecx*1-0x2e7cdd11],0xffffffbc
  41e2b7:	repz push ss
  41e2b9:	ja     0x41e330
  41e2bb:	cmp    DWORD PTR [ebx-0x6a262ad4],edi
  41e2c1:	aaa    
  41e2c2:	sbb    ebx,DWORD PTR ds:0x1d7345bc
  41e2c8:	outs   dx,BYTE PTR ds:[esi]
  41e2c9:	fs dec esi
  41e2cb:	inc    bl
  41e2cd:	popa   
  41e2ce:	popa   
  41e2cf:	(bad)  
  41e2d0:	or     eax,0x28e6f03a
  41e2d5:	add    al,0x58
  41e2d7:	in     eax,dx
  41e2d8:	repnz xor BYTE PTR [eax],ch
  41e2db:	push   0x2a
  41e2dd:	xchg   edx,eax
  41e2de:	add    al,0x52
  41e2e0:	int3   
  41e2e1:	int    0x12
  41e2e3:	pop    es
  41e2e4:	hlt    
  41e2e5:	lock jle 0x41e28e
  41e2e8:	sub    eax,0x66eeef01
  41e2ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2ee:	inc    ebx
  41e2ef:	mov    ds:0xbdcb0abe,eax
  41e2f4:	sbb    BYTE PTR [edi+0x26],al
  41e2f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f9:	(bad)  
  41e2fa:	jno    0x41e2a7
  41e2fc:	and    eax,0x82f8a9c1
  41e301:	mov    al,ds:0xea594dea
  41e306:	retf   
  41e307:	inc    ecx
  41e308:	sbb    BYTE PTR [ebp+0x4d],cl
  41e30b:	jbe    0x41e383
  41e30d:	test   al,0x26
  41e30f:	inc    esp
  41e310:	sub    DWORD PTR [ecx-0x42],eax
  41e313:	pop    es
  41e314:	pop    esi
  41e315:	sbb    dh,BYTE PTR [esi]
  41e317:	inc    ecx
  41e318:	inc    ebp
  41e319:	pop    ebx
  41e31a:	js     0x41e2fd
  41e31c:	mov    esi,esi
  41e31e:	pop    ss
  41e31f:	addr16 sub eax,0x8601a29a
  41e325:	mov    edi,DWORD PTR [ebx-0x47]
  41e328:	scas   al,BYTE PTR es:[edi]
  41e329:	sti    
  41e32a:	int3   
  41e32b:	or     esi,ebx
  41e32d:	inc    ebp
  41e32e:	in     al,0x59
  41e330:	lahf   
  41e331:	xchg   edx,eax
  41e332:	das    
  41e333:	push   eax
  41e334:	sbb    BYTE PTR [ebp+eax*1+0x7a],ah
  41e338:	nop    DWORD PTR [edi-0x51eb3124]
  41e33f:	int    0xa7
  41e341:	push   edx
  41e342:	pop    edi
  41e343:	in     al,dx
  41e344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e345:	popf   
  41e346:	jb     0x41e30d
  41e348:	ret    
  41e349:	pop    eax
  41e34a:	out    dx,al
  41e34b:	mov    ebx,0xa06a3d2b
  41e350:	lods   eax,DWORD PTR ds:[esi]
  41e351:	test   eax,0x7887e2b2
  41e356:	ins    BYTE PTR es:[edi],dx
  41e357:	mov    dh,0x33
  41e359:	and    BYTE PTR [esi],0x2
  41e35c:	pop    edx
  41e35d:	xchg   ecx,eax
  41e35e:	jb     0x41e38d
  41e360:	push   0x30528b6c
  41e365:	push   cs
  41e366:	pop    ebx
  41e367:	jnp    0x41e340
  41e369:	nop
  41e36a:	popa   
  41e36b:	sub    al,0x83
  41e36d:	sbb    al,0x3b
  41e36f:	xor    BYTE PTR [edi],0xf2
  41e372:	stos   BYTE PTR es:[edi],al
  41e373:	and    al,0x6d
  41e375:	xor    ebx,ebp
  41e377:	dec    edx
  41e378:	pop    ebx
  41e379:	rcr    DWORD PTR [esi],0x65
  41e37c:	call   0xe51d:0x7833ad3a
  41e383:	(bad)  
  41e384:	adc    bl,BYTE PTR [esi+0x3f823259]
  41e38a:	mov    dl,0x22
  41e38c:	push   esp
  41e38d:	nop
  41e38e:	mov    edx,0xb85bb763
  41e393:	and    DWORD PTR [edi-0x3ebc5e3d],eax
  41e399:	push   0xc846d98a
  41e39e:	or     eax,0xa3228c60
  41e3a3:	fsubrp st(1),st
  41e3a5:	imul   esp,DWORD PTR [edi-0xb],0x3341088
  41e3ac:	bound  edi,QWORD PTR [ebx]
  41e3ae:	mov    ecx,0x6cd67eb3
  41e3b3:	xlat   BYTE PTR ds:[ebx]
  41e3b4:	clc    
  41e3b5:	add    bh,bl
  41e3b7:	and    BYTE PTR [ecx+0x40],dl
  41e3ba:	xor    ch,BYTE PTR [ebp-0x5e8e7590]
  41e3c0:	gs pop edi
  41e3c2:	jg     0x41e398
  41e3c4:	dec    esp
  41e3c5:	mov    eax,ds:0xa7a4c095
  41e3ca:	imul   ebp,DWORD PTR [esi+eax*8],0xffffff8c
  41e3ce:	fwait
  41e3cf:	pop    ebx
  41e3d0:	cmp    al,0x96
  41e3d2:	jl     0x41e452
  41e3d4:	mov    esp,DWORD PTR [esi]
  41e3d6:	cdq    
  41e3d7:	clc    
  41e3d8:	aam    0xfe
  41e3da:	mov    edi,0x9dd4d967
  41e3df:	sbb    esi,DWORD PTR [eax*8+0x30c1f5e6]
  41e3e6:	push   0xffffff8c
  41e3e8:	aaa    
  41e3e9:	imul   ebx,DWORD PTR [edx+0x11d42279],0xdce0fc36
  41e3f3:	and    bl,ch
  41e3f5:	pop    ds
  41e3f6:	mov    edi,0x4f16a223
  41e3fb:	push   cs
  41e3fc:	gs jae 0x41e3bd
  41e3ff:	nop
  41e400:	ret    
  41e401:	pop    edx
  41e402:	xor    DWORD PTR [esi],esi
  41e404:	mov    eax,0xa6b6d56c
  41e409:	jnp    0x41e446
  41e40b:	jl     0x41e3d2
  41e40d:	add    al,BYTE PTR [edi+0x76]
  41e410:	xchg   edi,edi
  41e412:	in     al,0xea
  41e414:	push   0xd54ed9fa
  41e419:	push   ebx
  41e41a:	cmp    BYTE PTR [eax-0x3d],cl
  41e41d:	adc    ah,0xd4
  41e420:	(bad)  
  41e422:	add    edx,DWORD PTR [edx-0xe1d541b]
  41e428:	mov    ebp,0x13d2069f
  41e42d:	jmp    DWORD PTR [ebp+ebp*2+0x4d1affc5]
  41e434:	lods   eax,DWORD PTR ds:[esi]
  41e435:	jne    0x41e3fa
  41e437:	es cmp bl,ah
  41e43a:	fwait
  41e43b:	cdq    
  41e43c:	inc    esp
  41e43d:	jp     0x41e41a
  41e43f:	sbb    bh,BYTE PTR [edi+0x12]
  41e442:	and    eax,0xa9c6cc25
  41e447:	mov    ecx,cs
  41e449:	jecxz  0x41e40e
  41e44b:	sub    dh,bl
  41e44d:	imul   DWORD PTR [eax+0x1a]
  41e450:	and    al,0xd4
  41e452:	sbb    ebx,esp
  41e454:	mov    ah,0x34
  41e456:	push   ds
  41e457:	stos   BYTE PTR es:[edi],al
  41e458:	retf   0xedfb
  41e45b:	pop    esp
  41e45c:	loop   0x41e490
  41e45e:	push   es
  41e45f:	add    eax,0xac447ca9
  41e464:	pop    ecx
  41e465:	pop    ecx
  41e466:	ins    BYTE PTR es:[edi],dx
  41e467:	stos   BYTE PTR es:[edi],al
  41e468:	mov    al,ds:0x37077c4
  41e46d:	add    DWORD PTR [eax-0xf],0xed1ef749
  41e474:	push   ss
  41e475:	ret    
  41e476:	pop    ds
  41e477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e478:	test   al,0xe2
  41e47a:	dec    esp
  41e47b:	iret   
  41e47c:	mov    ds:0x30eebff,eax
  41e481:	adc    ebx,edi
  41e483:	sbb    bl,BYTE PTR [ebx+ecx*8-0xb1f371f]
  41e48a:	jbe    0x41e49d
  41e48c:	ins    DWORD PTR es:[edi],dx
  41e48d:	jae    0x41e4eb
  41e48f:	pop    edx
  41e490:	test   DWORD PTR [edx],esp
  41e492:	enter  0x2647,0xaa
  41e496:	dec    edx
  41e497:	push   eax
  41e498:	mov    cl,0xeb
  41e49a:	test   ah,dh
  41e49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e49d:	sbb    ebp,DWORD PTR [esi-0xc816175]
  41e4a3:	push   ds
  41e4a4:	xchg   ecx,eax
  41e4a5:	into   
  41e4a6:	repz pop eax
  41e4a8:	sub    ah,BYTE PTR [edi+edx*4-0x7e96ab32]
  41e4af:	push   edi
  41e4b0:	arpl   sp,bx
  41e4b2:	adc    DWORD PTR [ebp-0x4],esp
  41e4b5:	xchg   esi,eax
  41e4b6:	(bad)  
  41e4b7:	cdq    
  41e4b8:	lods   eax,DWORD PTR ds:[esi]
  41e4b9:	lds    edi,FWORD PTR [ebp-0x4c829877]
  41e4bf:	fist   DWORD PTR [esi+eax*8-0x1a4a8601]
  41e4c6:	jno    0x41e480
  41e4c8:	mov    ah,BYTE PTR [edx-0x38]
  41e4cb:	(bad)  
  41e4cc:	cmp    DWORD PTR [esi],edi
  41e4ce:	in     al,0x2b
  41e4d0:	pop    ebp
  41e4d1:	mov    dh,0xd4
  41e4d3:	sbb    edi,esi
  41e4d5:	out    dx,eax
  41e4d6:	and    al,0x6b
  41e4d8:	xor    dh,BYTE PTR ds:0x60ef3ee4
  41e4de:	mov    esp,DWORD PTR fs:[ebp-0x22]
  41e4e2:	lods   al,BYTE PTR ds:[esi]
  41e4e3:	push   esp
  41e4e4:	gs and eax,0x42fc6fb7
  41e4ea:	push   esp
  41e4eb:	push   0x136e2eef
  41e4f0:	push   ss
  41e4f1:	mov    dl,0x61
  41e4f3:	jge    0x41e530
  41e4f5:	or     edi,edx
  41e4f7:	mov    ebp,DWORD PTR [edi]
  41e4f9:	and    ah,BYTE PTR [ebx-0x4b]
  41e4fc:	sub    al,0x2a
  41e4fe:	mov    eax,0x13971ff6
  41e503:	in     al,dx
  41e504:	push   0x55092f45
  41e509:	aas    
  41e50a:	xchg   DWORD PTR [edx-0x4],ebx
  41e50d:	or     al,0x29
  41e50f:	xlat   BYTE PTR ds:[ebx]
  41e510:	mov    DWORD PTR [esi-0x56369b5f],eax
  41e516:	xchg   esi,eax
  41e517:	ins    DWORD PTR es:[edi],dx
  41e518:	jns    0x41e598
  41e51a:	std    
  41e51b:	jae    0x41e583
  41e51d:	adc    eax,0x7fa1bdfc
  41e522:	mov    ?,WORD PTR [ecx+0x4efccc40]
  41e528:	jne    0x41e515
  41e52a:	shl    DWORD PTR [ebp+0x13],1
  41e52d:	xor    eax,0xc9734245
  41e532:	adc    cl,BYTE PTR [edi-0x52aa5cbe]
  41e538:	cli    
  41e539:	test   al,0x87
  41e53b:	pop    edx
  41e53c:	jae    0x41e500
  41e53e:	add    ecx,esp
  41e540:	int3   
  41e541:	shl    DWORD PTR [edi+0x8d1d8f5],1
  41e547:	xor    BYTE PTR [ecx],cl
  41e549:	xchg   eax,esi
  41e54b:	std    
  41e54c:	and    eax,0x5e3398d8
  41e551:	cmp    al,0xdc
  41e553:	inc    ebx
  41e554:	cs pusha 
  41e556:	aaa    
  41e557:	test   BYTE PTR [esi],cl
  41e559:	xor    BYTE PTR [edi+0x29],0xa
  41e55d:	push   ss
  41e55e:	(bad)  
  41e55f:	into   
  41e560:	ret    0x2b74
  41e563:	push   ds
  41e564:	or     al,0x4a
  41e566:	imul   esi
  41e568:	into   
  41e569:	xchg   ebp,eax
  41e56a:	call   0xb0b3:0x164a4ecb
  41e571:	xchg   ebx,eax
  41e572:	inc    edi
  41e573:	inc    eax
  41e574:	sub    eax,0xd59d01e9
  41e579:	xchg   DWORD PTR ds:0x3c904a9f,ebp
  41e57f:	aas    
  41e580:	adc    ch,BYTE PTR [esi+eax*8]
  41e583:	push   edx
  41e584:	mov    ds:0x5c690e0e,al
  41e589:	and    eax,0xb3004ee7
  41e58e:	aas    
  41e58f:	les    eax,FWORD PTR [ecx-0x661babae]
  41e595:	push   ds
  41e596:	push   esp
  41e597:	pop    esp
  41e598:	push   edi
  41e599:	sbb    eax,0xf9c42d20
  41e59f:	dec    esp
  41e5a0:	sub    ebx,DWORD PTR [edx]
  41e5a2:	pop    ecx
  41e5a3:	xor    al,0xee
  41e5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a6:	sbb    BYTE PTR [ecx+0xe18195d],ah
  41e5ac:	jbe    0x41e59f
  41e5ae:	sub    ecx,eax
  41e5b0:	loopne 0x41e5b4
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x40aae715
  41e5c6:	fs cld 
  41e5c8:	mov    esi,0x1816376b
  41e5cd:	mov    esp,0xe1181812
  41e5d2:	cs lahf 
  41e5d4:	clc    
  41e5d5:	and    al,0xb3
  41e5d7:	ds ins DWORD PTR es:[edi],dx
  41e5d9:	pop    es
  41e5da:	and    BYTE PTR ds:0xb90cc6ec,dh
  41e5e0:	push   esp
  41e5e1:	mov    ch,0x67
  41e5e3:	fld    DWORD PTR [ecx+0x4804f753]
  41e5e9:	(bad)  
  41e5ea:	arpl   WORD PTR [edx-0x3b],di
  41e5ed:	hlt    
  41e5ee:	jb     0x41e636
  41e5f0:	push   edx
  41e5f1:	mov    edi,fs
  41e5f3:	inc    ebx
  41e5f4:	adc    eax,0x865707b
  41e5f9:	and    esi,edi
  41e5fb:	xor    BYTE PTR [esi],ah
  41e5fd:	test   BYTE PTR [edx+0x17],0x6c
  41e601:	loope  0x41e589
  41e603:	pop    esp
  41e604:	pop    ss
  41e605:	fs mov edi,0x898564f8
  41e60b:	retf   0xa4fb
  41e60e:	adc    edx,DWORD PTR [eax]
  41e610:	and    eax,0x3e126eb
  41e615:	mov    eax,ds:0x2f1a9ce4
  41e61a:	add    DWORD PTR gs:[ebx],ebp
  41e61d:	and    BYTE PTR [esi-0x787a4b7c],bh
  41e623:	ret    
  41e624:	dec    esi
  41e625:	scas   eax,DWORD PTR es:[edi]
  41e626:	ja     0x41e66c
  41e628:	inc    esp
  41e629:	fwait
  41e62a:	sbb    al,0x6d
  41e62c:	add    eax,DWORD PTR [esi]
  41e62e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e62f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e630:	mov    ebx,DWORD PTR [ecx]
  41e632:	lea    edi,[esi]
  41e634:	push   cs
  41e635:	jae    0x41e5f6
  41e637:	sub    al,0x69
  41e639:	mov    esp,0xbaa34db6
  41e63e:	mov    ds:0x6fe93597,eax
  41e643:	setns  BYTE PTR [ebp+edi*2+0x4f]
  41e648:	outs   dx,DWORD PTR ds:[esi]
  41e649:	arpl   dx,dx
  41e64b:	mov    bl,0xc5
  41e64d:	push   esi
  41e64e:	xor    DWORD PTR [ebx+0x221edc91],ecx
  41e654:	clc    
  41e655:	xchg   edi,eax
  41e656:	fbld   TBYTE PTR [ebp+ecx*8+0xd]
  41e65a:	cmp    DWORD PTR [ebp-0x48],0x416466b9
  41e661:	pop    edi
  41e662:	push   cs
  41e663:	popf   
  41e664:	cmp    eax,DWORD PTR [eax-0x4a]
  41e667:	xor    dh,BYTE PTR [edx]
  41e669:	xor    esi,DWORD PTR [eax-0x4b]
  41e66c:	xchg   esi,eax
  41e66d:	cs mov al,0xa1
  41e670:	xor    DWORD PTR [ebp+0x51ffdbaf],esi
  41e676:	cmp    eax,0x18436f71
  41e67b:	pop    ebp
  41e67c:	ins    BYTE PTR es:[edi],dx
  41e67d:	sbb    eax,0xd10f21f3
  41e682:	jae    0x41e6c3
  41e684:	add    edi,DWORD PTR [esi-0x19]
  41e687:	icebp  
  41e688:	mov    al,0x11
  41e68a:	ss inc edi
  41e68c:	sbb    ebp,DWORD PTR [edi-0xb]
  41e68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e690:	lods   eax,DWORD PTR ds:[esi]
  41e691:	mov    BYTE PTR ss:[edx+0x58],bl
  41e695:	push   ebp
  41e696:	loope  0x41e6f8
  41e698:	outs   dx,DWORD PTR ds:[esi]
  41e699:	jmp    0x2e92bd7b
  41e69e:	into   
  41e69f:	add    eax,0x5dc837f
  41e6a4:	cld    
  41e6a5:	sbb    ecx,esp
  41e6a7:	fs stos BYTE PTR es:[edi],al
  41e6a9:	fisttp QWORD PTR [eax+ebx*8-0x74902348]
  41e6b0:	popa   
  41e6b1:	stos   BYTE PTR es:[edi],al
  41e6b2:	pop    eax
  41e6b3:	push   esp
  41e6b4:	pop    ss
  41e6b5:	push   edi
  41e6b6:	inc    edi
  41e6b7:	and    BYTE PTR [esi],0x25
  41e6ba:	pop    edx
  41e6bb:	and    BYTE PTR [ebp-0x3bd90f],ah
  41e6c1:	mul    BYTE PTR [ecx]
  41e6c3:	adc    dh,BYTE PTR [ebp+0x30]
  41e6c6:	add    BYTE PTR [edx+0x2d],ah
  41e6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ca:	loop   0x41e699
  41e6cc:	inc    ebp
  41e6cd:	fsubp  st(0),st
  41e6cf:	mov    ah,0xf0
  41e6d1:	(bad)  
  41e6d2:	scas   al,BYTE PTR es:[edi]
  41e6d3:	arpl   WORD PTR [edx],bx
  41e6d5:	push   ecx
  41e6d6:	jecxz  0x41e667
  41e6d8:	(bad)  
  41e6d9:	sahf   
  41e6da:	or     eax,esp
  41e6dc:	shr    ch,cl
  41e6de:	iret   
  41e6df:	mov    ebx,DWORD PTR [ebp+0x6f]
  41e6e2:	xlat   BYTE PTR ds:[ebx]
  41e6e3:	mov    al,0xf0
  41e6e5:	dec    edx
  41e6e6:	scas   al,BYTE PTR es:[edi]
  41e6e7:	push   ds
  41e6e8:	inc    ecx
  41e6e9:	xor    DWORD PTR [eax],esp
  41e6eb:	arpl   WORD PTR [ebp+esi*2-0x4b167897],si
  41e6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f3:	mov    edi,0x8e001213
  41e6f8:	mov    cl,0xca
  41e6fa:	mov    eax,ds:0x9ae4194f
  41e6ff:	stc    
  41e700:	add    cl,dl
  41e702:	stc    
  41e703:	sub    eax,0x6cfae569
  41e708:	mov    ds:0xb3d21813,al
  41e70d:	jnp    0x41e778
  41e70f:	repnz mov BYTE PTR [ebp+0x285e3a7],0xc
  41e717:	jmp    0x7d26:0x59cfdb09
  41e71e:	xchg   ebx,eax
  41e71f:	cli    
  41e720:	outs   dx,BYTE PTR ds:[esi]
  41e721:	cmp    eax,0xd427b1f9
  41e726:	dec    ebx
  41e727:	and    cl,ch
  41e729:	imul   ecx,DWORD PTR [eax],0x7c
  41e72c:	loope  0x41e6f1
  41e72e:	mov    ebx,0x460dfb6c
  41e733:	fist   WORD PTR [eax]
  41e735:	stc    
  41e736:	inc    esi
  41e737:	test   al,0x1d
  41e739:	jns    0x41e7a3
  41e73b:	je     0x41e765
  41e73d:	inc    edx
  41e73e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73f:	adc    edx,edx
  41e741:	aad    0xc3
  41e743:	adc    dh,ch
  41e745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e746:	xor    ch,al
  41e748:	xchg   edx,eax
  41e749:	xor    eax,0x9a6d9e60
  41e74e:	mov    al,0xb6
  41e750:	xchg   esi,eax
  41e751:	into   
  41e752:	(bad)  
  41e753:	jmp    0x41e79e
  41e755:	retf   
  41e756:	retf   
  41e757:	xlat   BYTE PTR ds:[ebx]
  41e758:	js     0x41e76c
  41e75a:	enter  0xe051,0x5b
  41e75e:	ja     0x41e764
  41e760:	adc    DWORD PTR [esp+eiz*8],edx
  41e763:	xchg   ecx,eax
  41e764:	fs push ss
  41e766:	cwde   
  41e767:	jae    0x41e720
  41e769:	arpl   WORD PTR [edi+ebx*2-0x3b],ax
  41e76d:	push   ss
  41e76e:	pop    esi
  41e76f:	call   0x1eb:0x33d4470c
  41e776:	or     al,0xf7
  41e778:	pusha  
  41e779:	push   es
  41e77a:	sub    edx,DWORD PTR [edi-0x4781821a]
  41e780:	enter  0xc040,0x64
  41e784:	stc    
  41e785:	(bad)  
  41e786:	pop    edi
  41e787:	jg     0x41e79a
  41e789:	fimul  WORD PTR [esi]
  41e78b:	adc    ecx,DWORD PTR cs:[esi-0xe96944c]
  41e792:	inc    ebp
  41e793:	mov    al,ds:0xa229f5f6
  41e798:	loop   0x41e775
  41e79a:	lods   al,BYTE PTR ds:[esi]
  41e79c:	mov    al,0x6e
  41e79e:	jge    0x41e7d0
  41e7a0:	jmp    0x8258:0x3ed7200
  41e7a7:	jp     0x41e805
  41e7a9:	sahf   
  41e7aa:	rcr    edi,1
  41e7ac:	push   cs
  41e7ad:	add    cl,BYTE PTR [esi+0x4acadec8]
  41e7b3:	jmp    0xa79b1c38
  41e7b8:	mov    al,ds:0x7cb0875e
  41e7bd:	(bad)  
  41e7be:	mov    ecx,0x5cc19155
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	repz icebp 
  41e7c6:	push   edx
  41e7c7:	lahf   
  41e7c8:	ss xor eax,0x93d65331
  41e7ce:	call   DWORD PTR [edx+0x1d]
  41e7d1:	hlt    
  41e7d2:	cld    
  41e7d3:	rcl    BYTE PTR [esi-0x63],1
  41e7d6:	lock rol DWORD PTR [esi-0x29928e0a],cl
  41e7dd:	mov    eax,ds:0xb3d368b2
  41e7e2:	mov    edx,0xf1611ce3
  41e7e7:	mov    ?,WORD PTR [esi-0x3a]
  41e7ea:	mul    DWORD PTR [ebx+0x4f]
  41e7ed:	push   cs
  41e7ee:	repnz mov ah,0xa1
  41e7f1:	dec    ebp
  41e7f2:	xchg   ebp,eax
  41e7f3:	mov    edx,0xd5d65767
  41e7f8:	xchg   ah,bl
  41e7fa:	pushf  
  41e7fb:	fsub   DWORD PTR ds:0x4d2e2e19
  41e801:	sub    eax,0x6acea582
  41e806:	pop    esp
  41e807:	fs aaa 
  41e809:	repnz xchg esi,eax
  41e80b:	int    0x4d
  41e80d:	aaa    
  41e80e:	jle    0x41e859
  41e810:	test   edi,ecx
  41e812:	(bad)  
  41e813:	ins    BYTE PTR es:[edi],dx
  41e814:	lods   al,BYTE PTR ds:[esi]
  41e815:	and    cl,BYTE PTR [ecx]
  41e817:	mov    al,0x79
  41e819:	and    eax,0xe11fcd44
  41e81e:	xchg   ecx,eax
  41e81f:	lods   eax,DWORD PTR ds:[esi]
  41e820:	and    BYTE PTR [edx+0x60],al
  41e823:	add    BYTE PTR [edi-0x52250fae],al
  41e829:	push   es
  41e82a:	push   ebx
  41e82b:	pushf  
  41e82c:	add    eax,0x82000a8e
  41e831:	jns    0x41e871
  41e833:	dec    eax
  41e834:	xchg   esp,eax
  41e835:	mov    ebp,0x7d123d75
  41e83a:	out    0x58,al
  41e83c:	or     BYTE PTR [edi+0x0],0x2b
  41e840:	shl    DWORD PTR [esi+0x14],cl
  41e843:	sbb    ebx,esp
  41e845:	arpl   WORD PTR [ecx+edi*1+0x78e6c4d6],cx
  41e84c:	sbb    DWORD PTR [edx+0x7c],0x67ced0f2
  41e853:	xlat   BYTE PTR ds:[ebx]
  41e854:	enter  0xc42f,0x1f
  41e858:	stos   DWORD PTR es:[edi],eax
  41e859:	inc    eax
  41e85a:	cmp    BYTE PTR [edx-0x5cad7e44],dh
  41e860:	mov    dh,BYTE PTR [ebx+0x170fbc0c]
  41e866:	mov    BYTE PTR [eax-0x6ec10dca],0x88
  41e86d:	out    0x17,eax
  41e86f:	push   edi
  41e870:	or     al,0xf1
  41e872:	xchg   ebp,eax
  41e873:	inc    edi
  41e874:	sub    al,0x49
  41e876:	pop    ebp
  41e877:	push   ebp
  41e878:	adc    al,0x47
  41e87a:	adc    bl,cl
  41e87c:	pop    ebx
  41e87d:	jmp    0x41e875
  41e87f:	mov    edi,DWORD PTR [edi+0x718dd73c]
  41e885:	inc    edi
  41e886:	adc    eax,0xe493ba6e
  41e88b:	jmp    0x41e82d
  41e88d:	sub    ch,ah
  41e88f:	mov    DWORD PTR [edx],ecx
  41e891:	(bad)  
  41e892:	add    edx,DWORD PTR [esi-0x213767a9]
  41e898:	cwde   
  41e899:	xchg   ebx,eax
  41e89a:	ficom  WORD PTR [edx+ebp*2]
  41e89d:	push   ebx
  41e89e:	(bad)  
  41e89f:	out    0xea,eax
  41e8a1:	cld    
  41e8a2:	add    BYTE PTR [ebx],bl
  41e8a4:	jmp    0x43a4cb42
  41e8a9:	ins    DWORD PTR es:[edi],dx
  41e8aa:	xchg   esi,eax
  41e8ab:	dec    esi
  41e8ac:	mov    bh,0x72
  41e8ae:	sbb    DWORD PTR [ebx+0x7a],esi
  41e8b1:	inc    esi
  41e8b2:	dec    ebp
  41e8b3:	jg     0x41e8a0
  41e8b5:	sub    BYTE PTR [ebx+0x4a82db5a],bl
  41e8bb:	jg     0x41e83e
  41e8bd:	mov    ah,ah
  41e8bf:	jg     0x41e8f9
  41e8c1:	pop    esi
  41e8c2:	mov    al,0xc8
  41e8c4:	jmp    0x5a228b3f
  41e8c9:	dec    esi
  41e8ca:	(bad)  
  41e8cb:	cld    
  41e8cc:	pop    esp
  41e8cd:	xchg   ebx,eax
  41e8ce:	in     al,dx
  41e8cf:	es dec edi
  41e8d1:	aam    0x41
  41e8d3:	sub    DWORD PTR [esi],ebx
  41e8d5:	mov    ds:0xde68d582,al
  41e8da:	call   0x2041aac2
  41e8df:	std    
  41e8e0:	mov    ebp,0x30edf104
  41e8e5:	pop    ecx
  41e8e6:	imul   edi,edx,0xffffffc6
  41e8e9:	adc    eax,0xca506355
  41e8ee:	fs xchg ebx,eax
  41e8f0:	fnsave [edx]
  41e8f2:	cld    
  41e8f3:	cmp    cl,BYTE PTR [edx-0x63193b23]
  41e8f9:	ret    0x3693
  41e8fc:	push   ds
  41e8fd:	imul   esi,eax,0xd3f70a5
  41e903:	xchg   edx,eax
  41e904:	cmc    
  41e905:	mov    dl,0x94
  41e907:	bound  esi,QWORD PTR [eax]
  41e909:	mov    al,0x2b
  41e90b:	bound  ebp,QWORD PTR [esi+esi*4-0x4b]
  41e90f:	ins    BYTE PTR es:[edi],dx
  41e910:	ret    
  41e911:	lods   eax,DWORD PTR ds:[esi]
  41e912:	add    BYTE PTR [ebp+edi*2-0x1dea04cd],ch
  41e919:	cs retf 
  41e91b:	sub    dl,BYTE PTR ds:0x366dbed9
  41e921:	ret    
  41e922:	mov    cl,0x3d
  41e924:	and    dh,BYTE PTR [esi+edi*8]
  41e927:	dec    esp
  41e928:	aam    0x5b
  41e92a:	ins    BYTE PTR es:[edi],dx
  41e92b:	sbb    DWORD PTR [ebx],ecx
  41e92d:	adc    al,BYTE PTR [ebx-0x47953f42]
  41e933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e934:	enter  0x486f,0x98
  41e938:	imul   BYTE PTR [esp+esi*4+0x60a0db93]
  41e93f:	les    edx,FWORD PTR [edi]
  41e941:	fsub   QWORD PTR [esi+0x39cba4b6]
  41e947:	(bad)  
  41e948:	push   edx
  41e949:	out    0x28,al
  41e94b:	xor    cl,bl
  41e94d:	lods   eax,DWORD PTR ds:[esi]
  41e94e:	mov    eax,0x731ae68f
  41e953:	push   edi
  41e954:	sub    al,0x6d
  41e956:	leave  
  41e957:	mov    cl,0xae
  41e959:	test   cl,al
  41e95b:	jl     0x41e9d5
  41e95d:	stos   DWORD PTR es:[edi],eax
  41e95e:	push   es
  41e95f:	neg    DWORD PTR [ecx]
  41e961:	stc    
  41e962:	pushf  
  41e963:	push   edi
  41e964:	mov    ebx,0x8d6ef586
  41e969:	pop    ecx
  41e96a:	pop    eax
  41e96b:	sub    al,0x99
  41e96d:	pop    ds
  41e96e:	inc    esp
  41e96f:	out    0x31,al
  41e971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e972:	dec    eax
  41e973:	int3   
  41e974:	push   es
  41e975:	ror    BYTE PTR [edx+0x7d],0x3a
  41e979:	mov    eax,0xd0d567d3
  41e97e:	pop    ecx
  41e97f:	mov    ebx,0xb01b5df
  41e984:	xlat   BYTE PTR ds:[ebx]
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422648
  41e9a9:	push   DWORD PTR ds:0x4223dc
  41e9af:	mov    eax,ds:0x422558
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422558
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422558
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428267,0x0
  41ea0c:	mov    DWORD PTR ds:0x428373,0x7749
  41ea16:	mov    DWORD PTR ds:0x428173,ebx
  41ea1c:	mov    DWORD PTR ds:0x428313,edx
  41ea22:	mov    DWORD PTR ds:0x428313,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42828b,edx
  41ea37:	cmp    DWORD PTR ds:0x428267,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e14
  41ea54:	sbb    DWORD PTR ds:0x42836f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42831b
  41ea60:	xor    ecx,DWORD PTR ds:0x428307
  41ea66:	mov    DWORD PTR ds:0x42831b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428243,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x428197
  41ea80:	mov    ecx,DWORD PTR ds:0x4281e3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428187,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x4281f7
  41ea95:	mov    eax,ds:0x4282e3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42825b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42828b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42831b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x428397,0x4282ef
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428383,0x428393
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428303
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42825b,0x42818f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283a7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428327,0x0
  41eb42:	mov    DWORD PTR ds:0x428397,edx
  41eb48:	mov    DWORD PTR ds:0x428237,ebx
  41eb4e:	not    DWORD PTR ds:0x428233
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42822b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428317
  41eb69:	cmp    DWORD PTR ds:0x428327,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e18
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42838f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x428397,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42822f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282c3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x428393,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42815b,0x4282a7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42824f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x6d
  41ec04:	pop    ebx
  41ec05:	cmp    DWORD PTR [esi+ecx*1+0x2f],0x16
  41ec0a:	sbb    BYTE PTR [ebx+0x2e181812],ah
  41ec10:	push   edx
  41ec11:	ret    
  41ec12:	fsubp  st(0),st
  41ec14:	test   DWORD PTR [eax-0x2b],ebx
  41ec17:	fs loope 0x41ec38
  41ec1a:	sbb    ebp,DWORD PTR ss:[edx+0x2490e676]
  41ec21:	push   cs
  41ec22:	inc    ebx
  41ec23:	cmp    BYTE PTR [ecx-0x6dca783a],ch
  41ec29:	inc    edx
  41ec2a:	cmp    ebp,DWORD PTR [ebx+esi*1-0x37]
  41ec2e:	mov    eax,ds:0xc7cbc4f3
  41ec33:	mov    ecx,?
  41ec35:	pop    ebx
  41ec36:	add    ah,bh
  41ec38:	das    
  41ec39:	int    0x3d
  41ec3b:	sbb    esp,DWORD PTR [ebp-0x17c18d4e]
  41ec41:	xchg   esp,eax
  41ec42:	jle    0x41ec4b
  41ec44:	test   eax,0x9902fea
  41ec49:	lds    ecx,FWORD PTR [edx-0x14e0ca07]
  41ec4f:	das    
  41ec50:	push   0x7547a
  41ec55:	push   ecx
  41ec56:	out    dx,al
  41ec57:	sbb    bh,BYTE PTR [ebx+0xe]
  41ec5a:	mov    bl,0x4
  41ec5c:	xlat   BYTE PTR ds:[ebx]
  41ec5d:	(bad)  
  41ec5e:	cmp    al,0xaa
  41ec60:	jecxz  0x41ec69
  41ec62:	clc    
  41ec63:	sub    BYTE PTR [edi],ch
  41ec65:	retf   
  41ec66:	ret    
  41ec67:	pop    ebp
  41ec68:	aam    0x85
  41ec6a:	aaa    
  41ec6b:	aad    0xa9
  41ec6d:	push   0x8b09f94
  41ec72:	pop    es
  41ec73:	ror    BYTE PTR [edi+0x4],1
  41ec76:	gs mov bh,dl
  41ec79:	mov    ah,0x8a
  41ec7b:	xchg   ecx,eax
  41ec7c:	dec    eax
  41ec7d:	or     BYTE PTR [eax],dl
  41ec7f:	in     eax,0xcc
  41ec81:	pop    edi
  41ec82:	mov    ds:0x9c5b46fe,al
  41ec87:	jmp    0xbd9c:0x9f0e5177
  41ec8e:	(bad)  
  41ec8f:	mov    esp,0xe856dde6
  41ec94:	inc    ebp
  41ec95:	cmovb  esp,DWORD PTR [eax-0x7fd6e685]
  41ec9c:	pop    ebp
  41ec9d:	add    dh,ah
  41ec9f:	jns    0x41ed0a
  41eca1:	mov    al,0x55
  41eca3:	cmc    
  41eca4:	sbb    BYTE PTR [esi-0x429b7beb],bl
  41ecaa:	cmp    DWORD PTR [eax+eiz*2-0x2bc25f70],ebx
  41ecb1:	mov    edi,0x65504dac
  41ecb6:	out    0x95,al
  41ecb8:	arpl   WORD PTR [edx-0x3b40d15f],sp
  41ecbe:	cmp    ebp,DWORD PTR [edi+edi*2-0x2a31ba]
  41ecc5:	adc    dh,BYTE PTR cs:[esi]
  41ecc8:	ins    BYTE PTR es:[edi],dx
  41ecc9:	cmp    esp,ecx
  41eccb:	nop
  41eccc:	mov    ch,0xc4
  41ecce:	push   edx
  41eccf:	arpl   dx,sp
  41ecd1:	cmc    
  41ecd2:	add    al,0xe9
  41ecd4:	inc    edx
  41ecd5:	loope  0x41ec6b
  41ecd7:	les    edx,FWORD PTR [edi]
  41ecd9:	xchg   edi,eax
  41ecda:	gs (bad) 
  41ecdc:	fs xchg ebp,eax
  41ecde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecdf:	mov    ss:0x5c94d94e,al
  41ece5:	or     eax,0x4c7e4deb
  41ecea:	test   BYTE PTR [ebp+0x79703049],dh
  41ecf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecf1:	xchg   esp,eax
  41ecf2:	jno    0x41ecf0
  41ecf4:	pop    edi
  41ecf5:	leave  
  41ecf6:	add    esp,ebx
  41ecf8:	(bad)  
  41ecf9:	sub    esp,eax
  41ecfb:	aaa    
  41ecfc:	pop    edx
  41ecfd:	dec    esi
  41ecfe:	jae    0x41eced
  41ed00:	fistp  QWORD PTR [eax-0x68]
  41ed03:	ret    
  41ed04:	dec    ecx
  41ed05:	test   DWORD PTR [ebx+0x4db4dba1],esi
  41ed0b:	sub    al,0x5
  41ed0d:	(bad)  
  41ed0e:	test   eax,0x5b11b1b2
  41ed13:	je     0x41ed2a
  41ed15:	cmp    bl,dh
  41ed17:	stos   BYTE PTR es:[edi],al
  41ed18:	mov    edx,0xb7f00635
  41ed1d:	dec    esp
  41ed1e:	in     al,0x5
  41ed20:	in     al,0x50
  41ed22:	xchg   ebp,eax
  41ed23:	in     eax,0x82
  41ed25:	cmc    
  41ed26:	fucom  st(0)
  41ed28:	jns    0x41ed8b
  41ed2a:	sub    DWORD PTR [eax],ebp
  41ed2c:	lods   al,BYTE PTR ds:[esi]
  41ed2d:	mov    dl,0x32
  41ed2f:	jno    0x41ed71
  41ed31:	outs   dx,BYTE PTR ds:[esi]
  41ed32:	sbb    BYTE PTR [eax-0x1d89e04d],0xff
  41ed39:	arpl   WORD PTR [esi-0x77],si
  41ed3c:	push   esp
  41ed3d:	(bad)  
  41ed3e:	mov    dl,0x7a
  41ed40:	aad    0x4
  41ed42:	call   0x33fa:0x4cc02e7e
  41ed49:	add    al,0xe4
  41ed4b:	and    BYTE PTR [eax-0x67],al
  41ed4e:	loopne 0x41ed05
  41ed50:	arpl   dx,bx
  41ed52:	sahf   
  41ed53:	ret    
  41ed54:	mov    bh,0xd3
  41ed56:	es sub al,0xaf
  41ed59:	aas    
  41ed5a:	jne    0x41ed4b
  41ed5c:	sub    eax,0x2d416cac
  41ed61:	inc    esp
  41ed62:	ror    BYTE PTR [ebp-0x48e21422],cl
  41ed68:	cld    
  41ed69:	(bad)  
  41ed6a:	out    0x50,al
  41ed6c:	and    DWORD PTR [edi],edi
  41ed6e:	in     al,0xc7
  41ed70:	hlt    
  41ed71:	pop    ebp
  41ed72:	cdq    
  41ed73:	mov    bl,0x1d
  41ed75:	jp     0x41edd7
  41ed77:	mov    ss,WORD PTR ds:0x25cfcb59
  41ed7d:	inc    edi
  41ed7e:	and    ebp,0x69e78144
  41ed84:	cmp    eax,DWORD PTR [ebp-0x76f9dd34]
  41ed8a:	cmp    eax,ecx
  41ed8c:	imul   edx,DWORD PTR [esi],0x7240b160
  41ed92:	adc    ah,ah
  41ed94:	(bad)  
  41ed95:	pop    esp
  41ed96:	sahf   
  41ed97:	pop    es
  41ed98:	aad    0x1a
  41ed9a:	(bad)  
  41ed9b:	mov    eax,0x216f0167
  41eda0:	push   ebp
  41eda1:	fimul  WORD PTR [edi-0x3fc07cd7]
  41eda7:	sbb    BYTE PTR [ebx],ah
  41eda9:	mul    DWORD PTR [eax]
  41edab:	out    0x32,eax
  41edad:	ret    0xa63c
  41edb0:	mov    DWORD PTR [edx+0x6dfe07bd],esp
  41edb6:	sub    al,0xf6
  41edb8:	push   edx
  41edb9:	shr    BYTE PTR [ebp+edi*4+0x2ba27b3e],cl
  41edc0:	sub    al,0x30
  41edc2:	adc    DWORD PTR [ebx+0x570188b5],0xfe72aa76
  41edcc:	jmp    FWORD PTR [ebx]
  41edce:	and    al,0xda
  41edd0:	mov    DWORD PTR [edx+ebp*1-0xc644dad],eax
  41edd7:	imul   BYTE PTR [edi-0x36bc3778]
  41eddd:	idiv   DWORD PTR [edi-0x1e]
  41ede0:	push   esi
  41ede1:	adc    esp,esi
  41ede3:	fisub  WORD PTR [ebx-0x49]
  41ede6:	inc    edx
  41ede7:	inc    edi
  41ede8:	pop    edx
  41ede9:	adc    ebx,esi
  41edeb:	jge    0x41ee38
  41eded:	add    al,0x85
  41edef:	cmp    eax,0x7c71a27e
  41edf4:	xchg   bh,ah
  41edf6:	sub    eax,0xec82671c
  41edfb:	sar    DWORD PTR [esi+0x317237c6],cl
  41ee01:	nop
  41ee02:	imul   DWORD PTR fs:[ebp-0x7d]
  41ee06:	adc    eax,0x5f
  41ee09:	aad    0x28
  41ee0b:	mov    bl,0xb7
  41ee0d:	jg     0x41ee61
  41ee0f:	data16 fld DWORD PTR [edx+0x572b40a6]
  41ee16:	bound  ebp,QWORD PTR ds:0x7289a201
  41ee1c:	or     al,0x25
  41ee1e:	sbb    eax,0x17da2a45
  41ee23:	cmc    
  41ee24:	jns    0x41ee65
  41ee26:	pop    ss
  41ee27:	cdq    
  41ee28:	imul   edi,DWORD PTR [ebp+0x6a],0x36
  41ee2c:	pop    ebp
  41ee2d:	(bad)  
  41ee2f:	repnz push edi
  41ee31:	xor    ch,BYTE PTR [ebp+0x34]
  41ee34:	int3   
  41ee35:	jg     0x41ee39
  41ee37:	lock aas 
  41ee39:	xchg   ecx,esp
  41ee3b:	pusha  
  41ee3c:	loopne 0x41edf7
  41ee3e:	cdq    
  41ee3f:	outs   dx,BYTE PTR ds:[esi]
  41ee40:	mov    bl,BYTE PTR [edx]
  41ee42:	mov    ds:0xac27be85,al
  41ee47:	xor    eax,0xac26795f
  41ee4c:	inc    eax
  41ee4d:	(bad)  
  41ee4e:	aaa    
  41ee4f:	pop    esp
  41ee50:	into   
  41ee51:	sub    ebp,DWORD PTR [edi]
  41ee53:	sbb    al,0x93
  41ee55:	cmp    al,0xf3
  41ee57:	xor    ebp,DWORD PTR [esi+0x3ba4e769]
  41ee5d:	js     0x41edf3
  41ee5f:	sub    BYTE PTR [edx-0x6c],ch
  41ee62:	fs pushf 
  41ee64:	xor    al,0x1c
  41ee66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee67:	jl     0x41ee13
  41ee69:	pop    esi
  41ee6a:	cdq    
  41ee6b:	pop    ss
  41ee6c:	stos   BYTE PTR es:[edi],al
  41ee6d:	jae    0x41ee12
  41ee6f:	pop    DWORD PTR [ebx]
  41ee71:	sub    DWORD PTR [ebx-0x3a],ebp
  41ee74:	ret    0x200d
  41ee77:	or     DWORD PTR [ecx+0x65da82f8],ecx
  41ee7d:	jno    0x41ee4c
  41ee7f:	mov    ch,0xc2
  41ee81:	lds    ebx,FWORD PTR [edi+0x20]
  41ee84:	xor    BYTE PTR [edx+0x2e],bh
  41ee87:	cs (bad) 
  41ee89:	dec    ebx
  41ee8a:	mov    eax,0x7641c39d
  41ee8f:	jp     0x41ee4a
  41ee91:	xchg   esi,eax
  41ee92:	mov    dh,0x3f
  41ee94:	nop
  41ee95:	push   cs
  41ee96:	call   0x5691ea5d
  41ee9b:	xchg   edx,eax
  41ee9c:	out    0xbd,eax
  41ee9e:	ret    0x361b
  41eea1:	sbb    al,0xaf
  41eea3:	sar    DWORD PTR [edx*1+0x76bb3c72],0x3b
  41eeab:	repz shl BYTE PTR [edx+0x54],0x93
  41eeb0:	inc    esi
  41eeb1:	xchg   BYTE PTR [ebx+0xd],dh
  41eeb4:	dec    ebx
  41eeb5:	fwait
  41eeb6:	retf   0xee7b
  41eeb9:	mov    eax,ds:0xee519901
  41eebe:	lock ja 0x41ee7a
  41eec1:	aam    0x7c
  41eec3:	popf   
  41eec4:	stc    
  41eec5:	pushf  
  41eec6:	sbb    ch,BYTE PTR [edi]
  41eec8:	pop    ss
  41eec9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eecb:	sbb    cl,BYTE PTR [esi+0x29b55513]
  41eed1:	cdq    
  41eed2:	push   ebp
  41eed3:	lahf   
  41eed4:	ror    DWORD PTR cs:[esi+ecx*8-0xb],0x12
  41eeda:	add    BYTE PTR [esi],dh
  41eedc:	dec    edi
  41eedd:	jb     0x41eeef
  41eedf:	mov    edi,0xff215ac5
  41eee4:	retf   
  41eee5:	les    edi,FWORD PTR [edx]
  41eee7:	add    DWORD PTR [esi],0x30ffd623
  41eeed:	mov    edx,0x43f49ed1
  41eef2:	mov    dl,0xec
  41eef4:	sar    BYTE PTR [ecx+edx*8+0x3d986045],0x69
  41eefc:	out    0x90,eax
  41eefe:	add    al,0xb9
  41ef00:	xchg   esi,eax
  41ef01:	xor    esp,DWORD PTR [ebx+0x5c]
  41ef04:	mov    ebp,0xb8d1b15c
  41ef09:	xchg   ecx,eax
  41ef0a:	mov    ebx,0xf6b4a169
  41ef0f:	test   edx,0x27aa66a2
  41ef15:	dec    esp
  41ef16:	ret    0x59d6
  41ef19:	cmp    ah,bh
  41ef1b:	scas   al,BYTE PTR es:[edi]
  41ef1c:	ja     0x41eeb0
  41ef1e:	jns    0x41ef8d
  41ef20:	call   0xdfe4ab86
  41ef25:	shl    DWORD PTR [ebp-0x1ef747a1],0x56
  41ef2c:	bnd jmp 0x8201a003
  41ef32:	pop    ecx
  41ef33:	xchg   ecx,eax
  41ef34:	mov    eax,ds:0x919fcfb6
  41ef39:	dec    esi
  41ef3a:	ss sbb esp,eax
  41ef3d:	push   cs
  41ef3e:	out    dx,al
  41ef3f:	ret    0xb91e
  41ef42:	mov    dl,0x18
  41ef44:	loopne 0x41efa9
  41ef46:	sbb    edx,DWORD PTR [edi]
  41ef48:	je     0x41ef58
  41ef4a:	jp     0x41efa0
  41ef4c:	fst    QWORD PTR [edx]
  41ef4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41ef51:	adc    DWORD PTR ds:0x42816f,0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x428293
  41ef7a:	sbb    DWORD PTR ds:0x42816f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428187,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x4282fb,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282eb,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x4282fb,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e1c
  41efd7:	sub    edx,DWORD PTR ds:0x42822f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42824b
  41efe4:	mov    DWORD PTR ds:0x428393,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42823b
  41eff4:	xor    edx,DWORD PTR ds:0x4282a7
  41effa:	and    DWORD PTR ds:0x4283a7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0xceffab0
  41f021:	jle    0x41efbc
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx-0x8e7e7ee],ah
  41f02b:	test   cl,ah
  41f02d:	stc    
  41f02e:	cmp    dh,bl
  41f030:	test   al,0x96
  41f032:	sub    ebp,DWORD PTR ds:0x1f57fb69
  41f038:	fnstsw WORD PTR [edi-0x27716d49]
  41f03e:	mov    bh,0x0
  41f040:	mov    ah,0x6b
  41f042:	inc    ebp
  41f043:	jb     0x41f045
  41f045:	xchg   esi,eax
  41f046:	xchg   edx,eax
  41f047:	lahf   
  41f048:	dec    ecx
  41f049:	dec    esi
  41f04a:	jecxz  0x41f02b
  41f04c:	dec    esp
  41f04d:	jmp    0x100e7fe4
  41f052:	shr    BYTE PTR [ebx-0xf],0x5e
  41f056:	and    BYTE PTR [edi],bh
  41f058:	push   es
  41f059:	(bad)  
  41f05a:	pop    ebx
  41f05b:	sbb    BYTE PTR [ecx+0x3783c802],0x47
  41f062:	mov    ah,0xec
  41f064:	sbb    eax,0x9bd74a17
  41f069:	ror    BYTE PTR [ebx],1
  41f06b:	mov    edi,0x617b084c
  41f070:	sbb    al,0x47
  41f072:	sbb    al,0xe1
  41f074:	cdq    
  41f075:	xor    al,dl
  41f077:	sahf   
  41f078:	jmp    FWORD PTR [ecx]
  41f07a:	ret    0x7848
  41f07d:	mov    eax,ds:0xf5888495
  41f082:	xchg   esi,eax
  41f083:	fmul   DWORD PTR ds:0x9fca539f
  41f089:	std    
  41f08a:	call   0x5cea207e
  41f08f:	xchg   ebx,eax
  41f090:	ror    ah,cl
  41f092:	mov    ah,0x5c
  41f094:	or     edi,ecx
  41f096:	push   ss
  41f097:	(bad)  
  41f098:	pop    ds
  41f099:	inc    esp
  41f09a:	lea    edx,ds:0x92d9fe6a
  41f0a0:	pop    ebp
  41f0a1:	nop    DWORD PTR [edx+eax*8]
  41f0a5:	or     eax,DWORD PTR [ecx]
  41f0a7:	mov    BYTE PTR [ecx],al
  41f0a9:	xor    ecx,ebp
  41f0ab:	sbb    BYTE PTR [eax+0x2e],dl
  41f0ae:	(bad)  
  41f0af:	repnz mov al,BYTE PTR [esp+ebp*8+0x8262805]
  41f0b7:	dec    eax
  41f0b8:	or     BYTE PTR [ecx-0x45],al
  41f0bb:	pop    ebx
  41f0bc:	fdivr  QWORD PTR [eax]
  41f0be:	lock xor DWORD PTR [edi],esp
  41f0c1:	into   
  41f0c2:	clc    
  41f0c3:	sub    bl,BYTE PTR [edi-0x34dbbed7]
  41f0c9:	test   BYTE PTR [eax+0x5],dh
  41f0cc:	xchg   edi,eax
  41f0cd:	adc    DWORD PTR [ecx+ecx*8],ebx
  41f0d0:	ins    DWORD PTR es:[edi],dx
  41f0d1:	icebp  
  41f0d2:	or     sp,si
  41f0d5:	mov    cl,ah
  41f0d7:	pusha  
  41f0d8:	adc    ch,BYTE PTR [ebp-0x3bbc0af9]
  41f0de:	sbb    eax,0xd98b56cd
  41f0e3:	add    al,0x5b
  41f0e5:	inc    ecx
  41f0e6:	and    DWORD PTR [edx],0xfffffff1
  41f0e9:	pop    esi
  41f0ea:	into   
  41f0eb:	and    edi,DWORD PTR [ecx-0x7e]
  41f0ee:	loopne 0x41f10d
  41f0f0:	clc    
  41f0f1:	pop    es
  41f0f2:	dec    ebx
  41f0f3:	or     eax,0x69f5447c
  41f0f8:	sbb    al,BYTE PTR [ecx-0x7b]
  41f0fb:	sub    BYTE PTR [ebx],cl
  41f0fd:	and    BYTE PTR [ecx-0x96f5a13],al
  41f103:	cmp    al,0xda
  41f105:	pop    eax
  41f106:	and    eax,0xea945feb
  41f10b:	out    0x1f,al
  41f10d:	lods   eax,DWORD PTR ds:[esi]
  41f10e:	sub    DWORD PTR ss:[edx-0x55e0f59b],0x111686ef
  41f119:	add    eax,0x3abff3fa
  41f11e:	mov    bh,BYTE PTR [ebx-0x3b]
  41f121:	ficom  WORD PTR [ebp-0x27]
  41f124:	jno    0x41f0d4
  41f126:	jmp    0x41f0aa
  41f128:	cmp    DWORD PTR [ebx],edx
  41f12a:	retf   0xeca5
  41f12d:	mov    al,ds:0xdc1d8adb
  41f132:	xchg   ebp,eax
  41f133:	rcr    DWORD PTR [esi-0x5d673b8],cl
  41f139:	cmp    ch,BYTE PTR [ebp-0x34]
  41f13c:	fs int 0x38
  41f13f:	mov    esi,DWORD PTR [edi-0x6e]
  41f142:	mov    ch,0x72
  41f144:	outs   dx,BYTE PTR ds:[esi]
  41f145:	jge    0x41f156
  41f147:	adc    edi,DWORD PTR [edi+0x53]
  41f14a:	shl    ah,1
  41f14c:	cmp    al,BYTE PTR [edx]
  41f14e:	jge    0x41f120
  41f150:	pop    ss
  41f151:	and    DWORD PTR [edi-0x5286abf0],eax
  41f157:	inc    esp
  41f158:	outs   dx,DWORD PTR ds:[esi]
  41f159:	out    dx,eax
  41f15a:	pop    esp
  41f15b:	mov    cl,0xc
  41f15d:	jae    0x41f101
  41f15f:	fstp   DWORD PTR [ebx-0x44]
  41f162:	sub    eax,0xf18b716b
  41f167:	xchg   DWORD PTR [ebp+ebx*1-0x7d5dd9da],ebp
  41f16e:	repnz retf 0xf4f6
  41f172:	push   ss
  41f173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f174:	and    al,0x84
  41f176:	call   0x46737a0d
  41f17b:	push   eax
  41f17c:	mov    dl,0xce
  41f17e:	jo     0x41f1ba
  41f180:	mov    dh,BYTE PTR [ecx-0x2affa5b5]
  41f186:	retf   
  41f187:	mov    esp,ebp
  41f189:	cmp    dl,dl
  41f18b:	repz imul esi,esi,0xfffffffb
  41f18f:	icebp  
  41f190:	push   esp
  41f191:	sti    
  41f192:	mov    fs,WORD PTR ds:0x72b32c31
  41f198:	pop    ss
  41f199:	(bad)  
  41f19a:	out    dx,al
  41f19b:	inc    esi
  41f19c:	xchg   esp,eax
  41f19d:	in     eax,dx
  41f19e:	sahf   
  41f19f:	fldcw  WORD PTR [ebx+0x31]
  41f1a2:	rol    BYTE PTR [ebp+0x67c1db08],0x4
  41f1a9:	ins    BYTE PTR es:[edi],dx
  41f1aa:	dec    esi
  41f1ab:	call   0x22f4:0x40dd8132
  41f1b2:	cmp    al,0xb5
  41f1b4:	shl    BYTE PTR [ecx],cl
  41f1b6:	mov    al,0x51
  41f1b8:	mov    ebx,0xf24fe2d7
  41f1bd:	cwde   
  41f1be:	pop    eax
  41f1bf:	dec    edi
  41f1c0:	cdq    
  41f1c1:	std    
  41f1c2:	adc    BYTE PTR [edi-0x43],0x4e
  41f1c6:	jp     0x41f218
  41f1c8:	fbstp  TBYTE PTR [bp+di-0x4543]
  41f1cd:	jge    0x41f1c7
  41f1cf:	or     BYTE PTR [edi],dl
  41f1d1:	and    DWORD PTR [ecx-0x184740dd],0x5c279469
  41f1db:	jae    0x41f1ee
  41f1dd:	ja     0x41f1b9
  41f1df:	pop    ebx
  41f1e0:	repnz repnz sub al,0xe9
  41f1e4:	in     eax,dx
  41f1e5:	cmp    eax,0x1333b42
  41f1ea:	loope  0x41f188
  41f1ec:	std    
  41f1ed:	es push eax
  41f1ef:	loope  0x41f246
  41f1f1:	test   al,0xa5
  41f1f3:	adc    edi,edx
  41f1f5:	daa    
  41f1f6:	dec    ebx
  41f1f7:	mov    bl,al
  41f1f9:	lods   eax,DWORD PTR ds:[esi]
  41f1fa:	sub    eax,0x9f0189d7
  41f1ff:	mov    eax,ds:0x5d61fa6e
  41f204:	dec    ecx
  41f205:	pusha  
  41f206:	(bad)  
  41f207:	fdiv   st(2),st
  41f209:	cmp    DWORD PTR [ecx-0x14],ebx
  41f20c:	sub    eax,0x8f115bda
  41f211:	in     al,dx
  41f212:	xor    BYTE PTR [ecx+0x2],0xb6
  41f216:	ja     0x41f258
  41f218:	xchg   ebp,eax
  41f219:	xor    BYTE PTR [ecx+0x4e2d8d3f],ch
  41f21f:	cdq    
  41f220:	sbb    al,ch
  41f222:	xchg   ebx,eax
  41f223:	dec    esi
  41f224:	in     eax,0xe
  41f226:	xchg   BYTE PTR [ebx+0x1a88935],bl
  41f22c:	sbb    al,0x3b
  41f22e:	fnstsw WORD PTR [eax+0x3f]
  41f231:	ror    DWORD PTR [ebx+0xf],1
  41f234:	jbe    0x41f20e
  41f236:	jno    0x41f1d0
  41f238:	test   DWORD PTR [eax],ebp
  41f23a:	ins    DWORD PTR es:[edi],dx
  41f23b:	xor    DWORD PTR [esi-0x19],esp
  41f23e:	jns    0x41f1f1
  41f240:	(bad)  
  41f241:	push   cs
  41f242:	add    cl,BYTE PTR [ebp-0x4cf0fe73]
  41f248:	or     BYTE PTR [ebx],dh
  41f24a:	xchg   ebx,ebp
  41f24c:	xor    bl,BYTE PTR [ecx+0x71]
  41f24f:	dec    eax
  41f250:	je     0x41f2cf
  41f252:	ss retf 
  41f254:	sub    al,0xfe
  41f256:	mov    eax,0x8b2bafa2
  41f25b:	add    DWORD PTR [eax-0x7492af05],0xb0c0d0f2
  41f265:	mov    cl,0x10
  41f267:	jno    0x41f2d1
  41f269:	fbstp  TBYTE PTR [edx]
  41f26b:	jns    0x41f261
  41f26d:	jmp    0x63df7e69
  41f272:	mov    esi,0xfea18b41
  41f277:	adc    ecx,DWORD PTR [ebx-0xf]
  41f27a:	inc    eax
  41f27b:	les    esp,FWORD PTR [ecx+0xd]
  41f27e:	enter  0x97b2,0xa
  41f282:	mov    ah,dh
  41f284:	sub    cl,al
  41f286:	fiadd  WORD PTR [edi]
  41f288:	mov    esp,0x415429ee
  41f28d:	pop    ss
  41f28e:	mov    edx,0x325049b7
  41f293:	or     al,0x70
  41f295:	scas   al,BYTE PTR es:[edi]
  41f296:	jno    0x41f252
  41f298:	enter  0x97ca,0xd3
  41f29c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f29d:	call   DWORD PTR [ecx+ebx*8]
  41f2a0:	add    DWORD PTR [edx],esp
  41f2a2:	or     esp,edi
  41f2a4:	ret    0x450a
  41f2a7:	lods   eax,DWORD PTR ds:[esi]
  41f2a8:	pop    esi
  41f2a9:	push   esp
  41f2aa:	mov    BYTE PTR [ebx],ah
  41f2ac:	dec    ecx
  41f2ad:	(bad)  
  41f2ae:	pushf  
  41f2af:	xchg   ebp,eax
  41f2b0:	fisttp WORD PTR [ebp-0x5d]
  41f2b3:	xor    BYTE PTR ds:0xe9f479e3,dl
  41f2b9:	mov    ecx,eax
  41f2bb:	jne    0x41f259
  41f2bd:	mov    ah,0xd3
  41f2bf:	call   0xada287f0
  41f2c4:	inc    ebx
  41f2c5:	scas   al,BYTE PTR es:[edi]
  41f2c6:	std    
  41f2c7:	ret    
  41f2c8:	aam    0x39
  41f2ca:	ret    
  41f2cb:	addr16 (bad) 
  41f2cd:	sub    edi,ebx
  41f2cf:	cmp    DWORD PTR [ecx+0x28bee742],0xf0fab773
  41f2d9:	sub    BYTE PTR [edx+0x34bd5014],0xa9
  41f2e0:	ss mov bl,0xe
  41f2e3:	(bad)  
  41f2e4:	xchg   ebp,eax
  41f2e5:	test   BYTE PTR [edx],0x20
  41f2e8:	dec    ebp
  41f2e9:	(bad)  
  41f2ea:	mov    al,ds:0x92d9334a
  41f2ef:	pop    ss
  41f2f0:	inc    edi
  41f2f1:	or     ebx,DWORD PTR [edi]
  41f2f3:	jmp    0x41f2d6
  41f2f5:	ret    0x2ceb
  41f2f8:	or     BYTE PTR [ecx+0x58d17e4],bh
  41f2fe:	sbb    bh,ch
  41f300:	mov    bl,0xe8
  41f302:	aas    
  41f303:	push   0xffffff8d
  41f305:	xor    eax,0x22841ec6
  41f30a:	sub    eax,0x3ef02f37
  41f30f:	cmc    
  41f310:	cwde   
  41f311:	and    BYTE PTR [eax+ebp*4],dh
  41f314:	cmp    BYTE PTR [edx+0x583ecd17],0xef
  41f31b:	jae    0x41f2ab
  41f31d:	add    ch,dl
  41f31f:	mov    edx,0xc78985ed
  41f324:	fbstp  TBYTE PTR [eax]
  41f326:	jmp    0x2d1e:0x89dfa208
  41f32d:	sbb    eax,0x11ed17b6
  41f332:	mov    dl,0x23
  41f334:	xor    DWORD PTR [ebx-0x5],ecx
  41f337:	xchg   ebx,eax
  41f338:	xor    DWORD PTR [eax+0x71],eax
  41f33b:	jle    0x41f2c6
  41f33d:	cmp    eax,0x509b4494
  41f342:	scas   eax,DWORD PTR es:[edi]
  41f343:	scas   al,BYTE PTR es:[edi]
  41f344:	popa   
  41f345:	hlt    
  41f346:	or     eax,0xba7b2f78
  41f34b:	jns    0x41f308
  41f34d:	dec    esp
  41f34e:	dec    edi
  41f34f:	sbb    al,0x60
  41f351:	or     bh,BYTE PTR [edx]
  41f353:	sbb    eax,0x4a6639c8
  41f358:	clc    
  41f359:	pop    eax
  41f35a:	add    BYTE PTR [esi+0x183006e9],dl
  41f360:	adc    DWORD PTR ds:0xe74ce945,eax
  41f366:	jp     0x41f2f3
  41f368:	jecxz  0x41f331
  41f36a:	inc    ebp
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4283133d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x42822f
  41f37e:	mov    ecx,DWORD PTR ds:0x428277
  41f384:	mov    ecx,DWORD PTR ds:0x428263
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42824f,ebx
  41f397:	cmp    DWORD PTR ds:0x428313,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428123
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e20
  41f3c7:	sub    ecx,DWORD PTR ds:0x428247
  41f3cd:	mov    DWORD PTR ds:0x428197,0x2f55
  41f3d7:	and    DWORD PTR ds:0x4282f3,ebx
  41f3dd:	or     DWORD PTR ds:0x42830b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x42819f
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428327,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42817f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42838b,0x0
  41f428:	mov    DWORD PTR ds:0x42831f,0xae0
  41f432:	mov    DWORD PTR ds:0x42815b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42837b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428303,ebx
  41f449:	mov    DWORD PTR ds:0x42817f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42838b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f35
  41f468:	call   DWORD PTR ds:0x428ea4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x428397
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x428197,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282ef,0x6486
  41f49d:	mov    DWORD PTR ds:0x42825b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42828b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x428393,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x428197,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x427ffb
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e24
  41f4d7:	neg    DWORD PTR ds:0x42818b
  41f4dd:	and    DWORD PTR ds:0x42826f,0x4282f3
  41f4e7:	and    DWORD PTR ds:0x42836f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428187
  41f4f4:	sbb    edx,DWORD PTR ds:0x42830f
  41f4fa:	mov    DWORD PTR ds:0x428187,edx
  41f500:	sub    DWORD PTR ds:0x428283,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42818f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x428393,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428173,0x0
  41f53b:	mov    DWORD PTR ds:0x42838f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42824f,0x6044
  41f55b:	not    DWORD PTR ds:0x42825b
  41f561:	cmp    DWORD PTR ds:0x428173,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e28
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428153,edi
  41f5a3:	and    DWORD PTR ds:0x4282eb,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428303
  41f5b0:	add    edx,DWORD PTR ds:0x4282fb
  41f5b6:	mov    DWORD PTR ds:0x428303,edx
  41f5bc:	add    DWORD PTR ds:0x4282f7,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42825b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42838f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x42819b,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42831f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42830f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x428393,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428257,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42826b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428287,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428253
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x42829f,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42826b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e2c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42822b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x4282f7
  41f67a:	add    DWORD PTR ds:0x42831b,ecx
  41f680:	sbb    DWORD PTR ds:0x42828f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428163
  41f68c:	adc    DWORD PTR ds:0x428157,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283bf
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42824f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428323,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428307,0x0
  41f6e5:	mov    DWORD PTR ds:0x42830f,0x6375
  41f6ef:	not    DWORD PTR ds:0x42816f
  41f6f5:	mov    DWORD PTR ds:0x42822b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42823b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42827f,ebx
  41f710:	cmp    DWORD PTR ds:0x428307,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42826b
  41f727:	call   DWORD PTR ds:0x428e30
  41f72d:	movzx  ecx,WORD PTR ds:0x42823b
  41f734:	xor    DWORD PTR ds:0x4283a7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42826b
  41f740:	add    ecx,DWORD PTR ds:0x428263
  41f746:	mov    DWORD PTR ds:0x42826b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42827b
  41f752:	adc    DWORD PTR ds:0x42838b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428327,ebx
  41f75f:	sub    DWORD PTR ds:0x428187,edx
  41f765:	and    DWORD PTR ds:0x428307,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42831b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428387,0x4282fb
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428237,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428247
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42823b,0x428197
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428387,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428287
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x428393,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428377
  41f7d9:	mov    DWORD PTR ds:0x42836b,ecx
  41f7df:	mov    DWORD PTR ds:0x42830f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42828f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428187,edi
  41f7fe:	cmp    DWORD PTR ds:0x428393,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f7a
  41f813:	push   0x427ee1
  41f818:	call   DWORD PTR ds:0x428ea8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283bb
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428277,ecx
  41f830:	adc    DWORD PTR ds:0x42815f,edi
  41f836:	and    DWORD PTR ds:0x42839f,0x3101
  41f840:	mov    DWORD PTR ds:0x4283a7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42816f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42825f
  41f857:	mov    DWORD PTR ds:0x42824b,0x4504
  41f861:	mov    DWORD PTR ds:0x42837f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283a3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42830f,ebx
  41f87c:	cmp    DWORD PTR ds:0x42816f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427fac
  41f890:	push   0x427fb6
  41f895:	call   DWORD PTR ds:0x428eac
  41f89b:	and    DWORD PTR ds:0x428187,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42830f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283a3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428177,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428267,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42837b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428163,0x42839f
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428277
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42822f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f93e:	mov    DWORD PTR ds:0x428303,0x63c0
  41f948:	mov    DWORD PTR ds:0x428193,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x42829f
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x4282f3,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428eb0
  41f979:	sbb    DWORD PTR ds:0x4283a3,0x209
  41f983:	xor    DWORD PTR ds:0x428393,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42828f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x428193
  41f9bf:	or     DWORD PTR ds:0x42837f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x4282f7,0x0
  41f9d1:	mov    DWORD PTR ds:0x42823b,0x756d
  41f9db:	mov    DWORD PTR ds:0x4282f3,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x4282fb
  41f9f0:	cmp    DWORD PTR ds:0x4282f7,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e34
  41fa08:	adc    DWORD PTR ds:0x42838f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428313,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42836b
  41fa1b:	add    DWORD PTR ds:0x42837b,ecx
  41fa21:	add    DWORD PTR ds:0x428373,0x77eb
  41fa2b:	or     DWORD PTR ds:0x4282f3,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x42829f
  41fa3b:	and    DWORD PTR ds:0x42815f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42824b,0x42818b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x428293,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428277,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428307,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x428197
  41fa8d:	mov    DWORD PTR ds:0x42818f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428277,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428083
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e38
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428153
  41fabc:	sbb    ecx,DWORD PTR ds:0x42824b
  41fac2:	mov    DWORD PTR ds:0x428153,ecx
  41fac8:	xor    DWORD PTR ds:0x42829b,edx
  41face:	movzx  ecx,WORD PTR ds:0x428253
  41fad5:	or     DWORD PTR ds:0x4282eb,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42837b
  41fae3:	add    DWORD PTR ds:0x42828f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42816b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x42819b,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x4282ff
  41fb06:	mov    DWORD PTR ds:0x428383,edx
  41fb0c:	mov    DWORD PTR ds:0x42815f,ebx
  41fb12:	mov    DWORD PTR ds:0x428307,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x42819b,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e3c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283a3
  41fb48:	or     ecx,DWORD PTR ds:0x428273
  41fb4e:	mov    DWORD PTR ds:0x4283a3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42816b
  41fb5a:	add    ecx,DWORD PTR ds:0x4283a3
  41fb60:	mov    DWORD PTR ds:0x42816b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42828b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x42829f
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42824f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428257,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42818f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428287,0x42828b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x42839b,0x428303
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42836f,0x0
  41fbc2:	mov    DWORD PTR ds:0x42819b,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283a7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428277,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428177,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42836f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280df
  41fbfd:	call   DWORD PTR ds:0x428e40
  41fc03:	and    ecx,DWORD PTR ds:0x428263
  41fc09:	adc    DWORD PTR ds:0x4282f3,ecx
  41fc0f:	sub    DWORD PTR ds:0x4282fb,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42836b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42822b
  41fc21:	mov    DWORD PTR ds:0x42836b,ecx
  41fc27:	and    DWORD PTR ds:0x428313,0x55d2
  41fc31:	add    DWORD PTR ds:0x42818f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42827f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42828f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42815b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428277,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42822f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x428293,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282a7,0x2746
  41fc84:	mov    DWORD PTR ds:0x428277,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42816b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42822f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428eb4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283a3
  41fcc1:	and    DWORD PTR ds:0x42816b,0x42831f
  41fccb:	mov    ecx,DWORD PTR ds:0x428173
  41fcd1:	xor    DWORD PTR ds:0x42823f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428287
  41fcde:	sub    DWORD PTR ds:0x428393,ecx
  41fce4:	mov    DWORD PTR ds:0x428243,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283a7
  41fd0b:	add    eax,DWORD PTR ds:0x42816f
  41fd11:	mov    ds:0x4283a7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428313,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x4282fb
  41fd39:	mov    ecx,DWORD PTR ds:0x42838b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42822b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428313,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e44
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428273,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42824f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282b3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x42829f,ecx
  41fd92:	sbb    DWORD PTR ds:0x428393,0x42831b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42830f,0x428313
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42817f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42836f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42836f
  41fe15:	xor    DWORD PTR ds:0x428377,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42816f,0x0
  41fe51:	not    DWORD PTR ds:0x42829b
  41fe57:	mov    DWORD PTR ds:0x428237,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42816f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e48
  41fe7d:	and    DWORD PTR ds:0x428387,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42823f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428317
  41fe94:	and    DWORD PTR ds:0x4282f3,ecx
  41fe9a:	and    DWORD PTR ds:0x428267,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281ab
  41feab:	mov    ecx,DWORD PTR ds:0x4283df
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42818f
  41fed3:	or     DWORD PTR ds:0x4283a3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42826b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42836f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282eb,ecx
  41ff06:	cmp    DWORD PTR ds:0x42826b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428153
  41ff18:	call   DWORD PTR ds:0x428eb8
  41ff1e:	or     ecx,DWORD PTR ds:0x428173
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428317,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42823b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0xc8
  41ff55:	pop    ds
  41ff56:	dec    ecx
  41ff57:	push   0x23
  41ff59:	and    edx,DWORD PTR [esi]
  41ff5b:	sbb    BYTE PTR [ebx-0x1e7e7ee],ah
  41ff61:	dec    ecx
  41ff62:	retf   0xf626
  41ff65:	addr16 push edi
  41ff67:	pop    ebp
  41ff68:	xchg   ebp,eax
  41ff69:	enter  0x8dba,0xeb
  41ff6d:	scas   eax,DWORD PTR es:[edi]
  41ff6e:	pop    edx
  41ff6f:	xor    edi,esi
  41ff71:	xchg   esi,eax
  41ff72:	addr16 (bad) 
  41ff74:	mov    esp,0x348a5b12
  41ff79:	cmp    al,0x32
  41ff7b:	add    DWORD PTR [ecx+0x5c],0xfffffff9
  41ff7f:	cmp    DWORD PTR [edx-0x5a7d243c],ebx
  41ff85:	fs (bad) 
  41ff87:	and    eax,0x9c86507a
  41ff8c:	sbb    dh,BYTE PTR [esi]
  41ff8e:	adc    ebx,DWORD PTR [ebp+0x49fdb7b4]
  41ff94:	adc    BYTE PTR [ecx-0x6105fd55],0x59
  41ff9b:	fs push ecx
  41ff9d:	adc    BYTE PTR [ebp-0xe],al
  41ffa0:	fidivr DWORD PTR [eax+0x7afd89c6]
  41ffa6:	mov    ah,0xff
  41ffa8:	ds scas eax,DWORD PTR es:[edi]
  41ffaa:	push   ss
  41ffab:	ror    esp,cl
  41ffad:	jl     0x42002e
  41ffaf:	rcl    dl,cl
  41ffb1:	mov    al,0xb4
  41ffb3:	mov    esi,0xab20cb51
  41ffb8:	test   BYTE PTR [ebx+ecx*2],dl
  41ffbb:	rcl    ah,1
  41ffbd:	mov    cl,0x2
  41ffbf:	scas   eax,DWORD PTR es:[edi]
  41ffc0:	add    BYTE PTR [edx+0x71021971],0xe
  41ffc7:	inc    ecx
  41ffc8:	push   cs
  41ffc9:	mov    cl,0x51
  41ffcb:	(bad)  
  41ffcc:	xchg   esi,eax
  41ffcd:	test   DWORD PTR [edx+0x6aa4aa85],ebx
  41ffd3:	ret    0xe15
  41ffd6:	add    eax,0x2f424721
  41ffdb:	inc    ecx
  41ffdc:	xor    ebp,ecx
  41ffde:	mov    dl,0xf1
  41ffe0:	dec    esp
  41ffe1:	mov    cl,0x9d
  41ffe3:	popf   
  41ffe4:	sbb    BYTE PTR [ecx],ah
  41ffe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffe7:	ds test eax,0x73e4db6b
  41ffed:	jmp    0x828c531d
  41fff2:	inc    edi
  41fff3:	(bad)  
  41fff4:	loope  0x42001a
  41fff6:	sbb    BYTE PTR [ebx-0xb],0x9f
  41fffa:	call   esi
  41fffc:	mul    DWORD PTR [ebx]
  41fffe:	cmp    eax,0x1612c580
  420003:	nop
  420004:	inc    ebx
  420005:	jbe    0x42005d
  420007:	and    ch,BYTE PTR cs:[ebp+0x72f92684]
  42000e:	jle    0x41ffc5
  420010:	ja     0x42005a
  420012:	xchg   ebp,eax
  420013:	lahf   
  420014:	sub    bh,dl
  420016:	push   ecx
  420017:	push   edx
  420018:	mov    cl,0x2c
  42001a:	mov    bh,0x29
  42001c:	jns    0x42005b
  42001e:	loop   0x41fff6
  420020:	mov    esi,0x21d9e446
  420025:	push   edi
  420026:	xchg   edi,eax
  420027:	(bad)  
  420028:	fnstenv [ecx-0x56]
  42002b:	xor    al,dh
  42002d:	add    BYTE PTR [esi],0x22
  420030:	adc    eax,0xf9047227
  420035:	rcl    edx,1
  420037:	aad    0x6e
  420039:	mov    edx,0xfb316392
  42003e:	mov    edi,0x81f151d8
  420043:	xor    al,0xf4
  420045:	mov    eax,ds:0x231d6e63
  42004a:	cld    
  42004b:	add    esp,edi
  42004d:	mov    ebx,0x4ccc8b7b
  420052:	(bad)  
  420053:	mov    al,0xf5
  420055:	loope  0x42000d
  420057:	jmp    0xc43c0fdf
  42005c:	inc    edx
  42005d:	sbb    ebx,DWORD PTR [ebp+0x2644afc4]
  420063:	jnp    0x420015
  420065:	(bad)  
  420066:	scas   eax,DWORD PTR es:[edi]
  420067:	jmp    0x15dd:0x98ec08e6
  42006e:	lock sbb ah,BYTE PTR [esi-0x497e6a35]
  420075:	mov    edx,DWORD PTR [edx]
  420077:	jnp    0x420082
  420079:	xor    ch,BYTE PTR [edx+0x79]
  42007c:	dec    ecx
  42007d:	dec    edi
  42007e:	and    al,0x7b
  420080:	adc    DWORD PTR [esp+ecx*1-0x74],0x5ce0bd50
  420088:	pop    es
  420089:	pop    esp
  42008a:	jnp    0x42004c
  42008c:	hlt    
  42008d:	and    eax,0xafdb9b7c
  420092:	or     al,BYTE PTR [edi]
  420094:	daa    
  420095:	sub    dl,bh
  420097:	mov    ebp,0x58078f2
  42009c:	mov    es,esp
  42009e:	xchg   esp,eax
  42009f:	mov    ch,0x84
  4200a1:	mov    bl,0x71
  4200a3:	xor    al,0x69
  4200a5:	jecxz  0x420122
  4200a7:	mov    edi,0xd583a47c
  4200ac:	test   bl,dh
  4200ae:	cmp    DWORD PTR [edx],ebx
  4200b0:	or     DWORD PTR [ebp+0x624f75dc],0xfffffff2
  4200b7:	(bad)
  4200ba:	pop    ss
  4200bb:	jo     0x420050
  4200bd:	mov    eax,DWORD PTR [esi]
  4200bf:	repz sbb BYTE PTR [ecx+0x37f252bc],ch
  4200c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200c7:	sbb    al,0xab
  4200c9:	mov    ah,0xcb
  4200cb:	imul   esi,ebx,0x951ff2f3
  4200d1:	aam    0x5d
  4200d3:	jge    0x4200b1
  4200d5:	(bad)  
  4200d6:	shr    BYTE PTR [edx+0x334d1fc2],1
  4200dc:	es xchg edx,eax
  4200de:	adc    eax,DWORD PTR [esi-0x760bc904]
  4200e4:	or     dl,bl
  4200e6:	test   eax,0x759ff3d5
  4200eb:	pop    ds
  4200ec:	int    0xd1
  4200ee:	or     eax,0x26e123ae
  4200f3:	xchg   ebp,eax
  4200f4:	mov    esp,0x9f3c61a0
  4200f9:	push   ecx
  4200fa:	xlat   BYTE PTR ds:[ebx]
  4200fb:	push   esi
  4200fc:	cmp    DWORD PTR [eax],edx
  4200fe:	jmp    0x7d92:0x86d60101
  420105:	jp     0x420139
  420107:	adc    ch,ah
  420109:	test   eax,0x15532a8b
  42010e:	jnp    0x4200cd
  420110:	shl    BYTE PTR [ebp-0x4e91bedf],0x1b
  420117:	into   
  420118:	cs dec esi
  42011a:	pop    edx
  42011b:	xchg   edi,eax
  42011c:	fld    QWORD PTR [esi-0x4b]
  42011f:	push   edi
  420120:	inc    ebp
  420121:	aas    
  420122:	push   0x43c1c88d
  420127:	fdivr  DWORD PTR [edi-0x4441fe4e]
  42012d:	cdq    
  42012e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012f:	rcl    DWORD PTR [edi],0xc0
  420132:	jns    0x42017d
  420134:	into   
  420135:	add    al,0xf0
  420137:	jo     0x4200ed
  420139:	pop    edi
  42013a:	sbb    eax,0xebdac6b
  42013f:	daa    
  420140:	cdq    
  420141:	pop    ds
  420142:	sar    BYTE PTR [edx+0x47c407f2],cl
  420148:	jae    0x420152
  42014a:	cwde   
  42014b:	(bad)  
  42014c:	lahf   
  42014d:	imul   eax,ebp,0x4e7e8d6e
  420153:	icebp  
  420154:	push   esp
  420155:	lahf   
  420156:	enter  0x560c,0x2e
  42015a:	push   0x232c1e95
  42015f:	idiv   BYTE PTR [esi+0x1a58edb2]
  420165:	mov    ch,0xad
  420167:	mov    BYTE PTR [edx-0x3dfb5fe1],0x2a
  42016e:	cmp    eax,0xff20b66e
  420173:	inc    esp
  420174:	jbe    0x420134
  420176:	cmp    al,0x43
  420178:	out    0x67,eax
  42017a:	jbe    0x4201b0
  42017c:	cmp    eax,DWORD PTR [edx+0x1e89d44]
  420182:	mov    esi,0x16f84d92
  420187:	leave  
  420188:	xchg   ecx,eax
  420189:	iret   
  42018a:	add    al,0xf9
  42018c:	outs   dx,DWORD PTR ds:[esi]
  42018d:	ss jbe 0x42011e
  420190:	jmp    0x420211
  420192:	enter  0x4dac,0x1f
  420196:	sub    dh,BYTE PTR [ecx]
  420198:	out    dx,al
  420199:	sbb    BYTE PTR [edi],0x2a
  42019c:	mov    bh,0x9d
  42019e:	or     eax,0x5e
  4201a1:	ja     0x4201e8
  4201a3:	outs   dx,BYTE PTR ds:[esi]
  4201a4:	cli    
  4201a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a6:	mov    dl,0x17
  4201a8:	dec    esi
  4201a9:	lods   eax,DWORD PTR ds:[esi]
  4201aa:	fwait
  4201ab:	sub    esp,DWORD PTR [esi-0x58f389c1]
  4201b1:	inc    ecx
  4201b2:	add    DWORD PTR fs:[ebx+0x6e],esi
  4201b6:	sub    DWORD PTR [edi+0x1e],ebx
  4201b9:	fst    QWORD PTR [ebp-0x2cdaac42]
  4201bf:	iret   
  4201c0:	stos   BYTE PTR es:[edi],al
  4201c1:	sub    edi,DWORD PTR [esi]
  4201c3:	sbb    al,0x37
  4201c5:	les    esp,FWORD PTR ds:[ebp+0x50]
  4201c9:	add    BYTE PTR [ecx-0x7a44896],bh
  4201cf:	outs   dx,DWORD PTR ds:[esi]
  4201d0:	js     0x420172
  4201d2:	call   0x807f7967
  4201d7:	cld    
  4201d8:	and    esp,esp
  4201da:	jl     0x420171
  4201dc:	sub    al,0xee
  4201de:	adc    ah,ch
  4201e0:	mov    ah,0xe3
  4201e2:	and    esi,DWORD PTR [ecx+0x73929d15]
  4201e8:	pop    esi
  4201e9:	clc    
  4201ea:	inc    ecx
  4201eb:	outs   dx,DWORD PTR ds:[esi]
  4201ec:	popf   
  4201ed:	jnp    0x420206
  4201ef:	xadd   DWORD PTR [esi+edi*8+0x530b4531],ecx
  4201f7:	hlt    
  4201f8:	(bad)  
  4201f9:	fsubr  QWORD PTR [esi]
  4201fb:	int    0xfd
  4201fd:	push   edi
  4201fe:	jg     0x42018c
  420200:	sub    al,BYTE PTR [eax]
  420202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420203:	add    esp,esi
  420205:	or     eax,0xe144ae84
  42020a:	jns    0x42023a
  42020c:	adc    al,0x7f
  42020e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42020f:	jecxz  0x4201cc
  420211:	daa    
  420212:	int    0x6d
  420214:	fs and al,0x12
  420217:	inc    edi
  420218:	sbb    DWORD PTR [edx],esp
  42021a:	je     0x42028e
  42021c:	xor    BYTE PTR [esi+edx*8],ah
  42021f:	and    BYTE PTR [ebx],al
  420221:	jge    0x4201c7
  420223:	mov    eax,ds:0xa70daff8
  420228:	pop    edx
  42022a:	popa   
  42022b:	mov    dh,0x9
  42022d:	jp     0x420291
  42022f:	mov    ch,0xe2
  420231:	pop    ebp
  420232:	xor    al,0xf3
  420234:	leave  
  420235:	scas   eax,DWORD PTR es:[edi]
  420236:	fadd   DWORD PTR [eax-0x35]
  420239:	adc    ebx,DWORD PTR [ebp+eax*1+0x44]
  42023d:	ins    DWORD PTR es:[edi],dx
  42023e:	push   ecx
  42023f:	loope  0x42026d
  420241:	cld    
  420242:	test   BYTE PTR [edx+0x67b1629e],al
  420248:	jp     0x420265
  42024a:	int3   
  42024b:	fs clc 
  42024d:	dec    DWORD PTR [edx-0x1df6584d]
  420253:	mov    edx,0xecbaf148
  420258:	cli    
  420259:	repz push esp
  42025b:	je     0x42021f
  42025d:	pop    edx
  42025e:	aaa    
  42025f:	ret    
  420260:	adc    esp,esp
  420262:	inc    esp
  420263:	imul   esi,eax,0x5d
  420266:	dec    edx
  420267:	pop    ebp
  420268:	loope  0x4201f5
  42026a:	mov    dl,0x85
  42026c:	and    al,0x8f
  42026e:	jmp    0x4201fd
  420270:	lods   al,BYTE PTR ds:[esi]
  420271:	inc    eax
  420272:	hlt    
  420273:	mov    ebp,0x1480dcac
  420278:	pop    edi
  420279:	call   0x69f4:0x128bde0a
  420280:	xor    BYTE PTR ds:0xc693ef1c,ah
  420286:	fadd   QWORD PTR [esi+0x47]
  420289:	inc    esp
  42028a:	shl    DWORD PTR [eax+0x2c3f39fd],cl
  420290:	and    ah,al
  420292:	int3   
  420293:	hlt    
  420294:	fcomp  DWORD PTR [ecx]
  420296:	sbb    BYTE PTR [eax+eax*1-0x6419b83c],al
  42029d:	mov    fs,esp
  42029f:	mov    ecx,DWORD PTR [ebp-0x114]
  4202a5:	or     DWORD PTR ds:0x42828f,0x42830b
  4202af:	sub    eax,ecx
  4202b1:	mov    ecx,DWORD PTR ds:0x428387
  4202b7:	add    DWORD PTR ds:0x42830f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42838b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428167,0x428287
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42837b,0x42815f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428273,0x42822b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42830b,0x0
  42030c:	mov    DWORD PTR ds:0x428263,edx
  420312:	mov    esi,DWORD PTR ds:0x42822b
  420318:	mov    DWORD PTR ds:0x428307,ebx
  42031e:	mov    DWORD PTR ds:0x428317,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428183,0x3019
  420337:	not    DWORD PTR ds:0x42830b
  42033d:	cmp    DWORD PTR ds:0x42830b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42836b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428ebc
  420363:	adc    ecx,DWORD PTR ds:0x428243
  420369:	xor    DWORD PTR ds:0x4282ff,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42821b
  420377:	mov    esi,DWORD PTR ds:0x4282d3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428187,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x4282fb,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428377,0x0
  4203b4:	mov    DWORD PTR ds:0x42829f,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x42819b
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42825f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42825b,edi
  4203db:	cmp    DWORD PTR ds:0x428377,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fef
  4203ed:	call   DWORD PTR ds:0x428ec0
  4203f3:	movzx  esi,WORD PTR ds:0x428177
  4203fa:	add    DWORD PTR ds:0x4282f7,esi
  420400:	adc    DWORD PTR ds:0x428197,ebx
  420406:	add    DWORD PTR ds:0x428373,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428373
  420416:	or     DWORD PTR ds:0x42836f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x4282f3
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428273,0x0
  42042e:	mov    DWORD PTR ds:0x428373,0x5615
  420438:	mov    DWORD PTR ds:0x42816b,0x419b
  420442:	mov    DWORD PTR ds:0x42818f,0x389d
  42044c:	not    DWORD PTR ds:0x428263
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428273,0x0
  420463:	je     0x4204a0
  420469:	push   0x42823f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428ec4
  420477:	sub    DWORD PTR ds:0x4282f7,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42826b
  420488:	xor    esi,DWORD PTR ds:0x42831b
  42048e:	mov    DWORD PTR ds:0x42826b,esi
  420494:	mov    esi,DWORD PTR ds:0x428253
  42049a:	or     DWORD PTR ds:0x4282ef,esi
  4204a0:	xor    DWORD PTR ds:0x42831f,ecx
  4204a6:	add    DWORD PTR ds:0x42831f,ebx
  4204ac:	or     DWORD PTR ds:0x428377,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42818b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42816f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283a7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42818b,0x0
  420500:	mov    DWORD PTR ds:0x4282f3,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42828f
  42051b:	cmp    DWORD PTR ds:0x42818b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428ec8
  420543:	mov    esi,DWORD PTR ds:0x42817b
  420549:	sbb    DWORD PTR ds:0x428197,esi
  42054f:	and    DWORD PTR ds:0x428293,edx
  420555:	sbb    DWORD PTR ds:0x428247,edx
  42055b:	mov    esi,DWORD PTR ds:0x42837f
  420561:	or     DWORD PTR ds:0x428383,esi
  420567:	mov    esi,DWORD PTR ds:0x4281a7
  42056d:	mov    edx,DWORD PTR ds:0x42833f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42837f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428173,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x428397,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428233,0x2222
  4205bd:	not    DWORD PTR ds:0x428243
  4205c3:	cmp    DWORD PTR ds:0x428173,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x42839f
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e4c
  4205e8:	xor    edx,DWORD PTR ds:0x428247
  4205ee:	mov    ecx,DWORD PTR ds:0x42822f
  4205f4:	or     DWORD PTR ds:0x42815f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282d3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x42839b,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42827b
  42061a:	xor    DWORD PTR ds:0x428267,edx
  420620:	movzx  ecx,WORD PTR ds:0x428253
  420627:	and    ecx,DWORD PTR ds:0x42838b
  42062d:	mov    DWORD PTR ds:0x428253,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x42839f,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	mov    cl,0x74
  420670:	ja     0x4206ee
  420672:	lods   al,BYTE PTR ds:[esi]
  420673:	sbb    eax,0x12a31816
  420678:	sbb    BYTE PTR [eax],bl
  42067a:	pop    ds
  42067b:	ins    BYTE PTR es:[edi],dx
  42067c:	xchg   edi,eax
  42067d:	fidiv  WORD PTR [eax+ebp*4-0x2b]
  420681:	(bad)  
  420682:	(bad)  
  420683:	(bad)  
  420684:	push   0x61
  420686:	std    
  420687:	in     al,dx
  420688:	push   0x13
  42068a:	add    esp,DWORD PTR [ecx+esi*4]
  42068d:	rcr    BYTE PTR [ecx-0x376210c4],1
  420693:	mov    bl,0xa0
  420695:	mov    dh,0x95
  420697:	call   0x5264f763
  42069c:	xlat   BYTE PTR ds:[ebx]
  42069d:	(bad)  
  42069e:	push   ebx
  42069f:	mul    DWORD PTR [eax-0x1f]
  4206a2:	mov    eax,ds:0x85141401
  4206a7:	jle    0x420720
  4206a9:	mov    cl,BYTE PTR [ebp-0x2be19727]
  4206af:	pushf  
  4206b0:	mov    ebx,0x1e0c3385
  4206b5:	mov    edi,0x5644ef4a
  4206ba:	out    0x57,al
  4206bc:	mov    ebx,DWORD PTR [esi+0x23503dc2]
  4206c2:	fiadd  DWORD PTR [ebx-0x30ec6e4f]
  4206c8:	push   cs
  4206c9:	aas    
  4206ca:	xchg   ecx,eax
  4206cb:	lea    edi,[ebp+0x549c5d3b]
  4206d1:	aas    
  4206d2:	rcr    DWORD PTR [eax-0x5],1
  4206d5:	ins    DWORD PTR es:[edi],dx
  4206d6:	inc    ebp
  4206d7:	mov    esp,DWORD PTR [ebx-0x9]
  4206da:	cs js  0x4206ac
  4206dd:	push   ds
  4206de:	mov    ss,esp
  4206e0:	stos   BYTE PTR es:[edi],al
  4206e1:	outs   dx,BYTE PTR ds:[esi]
  4206e2:	rol    BYTE PTR [ebx-0x4192f3a],1
  4206e8:	cmp    esp,esp
  4206ea:	mov    edi,?
  4206ec:	(bad)  
  4206ee:	xor    dh,ah
  4206f0:	ficomp DWORD PTR [ebx-0x6f79c44c]
  4206f6:	add    BYTE PTR [ebp+0x7f],bh
  4206f9:	retf   
  4206fa:	sbb    dh,BYTE PTR [eax]
  4206fc:	sub    bh,dh
  4206fe:	mov    ds:0xf7c1da74,al
  420703:	xor    esp,DWORD PTR [ebx-0x2c471c33]
  420709:	sub    DWORD PTR [ecx-0x27092550],ebx
  42070f:	scas   al,BYTE PTR es:[edi]
  420710:	shl    DWORD PTR [eax-0x7c],1
  420713:	xor    ebx,DWORD PTR [edx+0x37]
  420716:	inc    edx
  420717:	sbb    al,0xec
  420719:	ret    0xe7f8
  42071c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42071d:	in     eax,dx
  42071e:	or     al,0x6a
  420720:	enter  0x3dd4,0xa5
  420724:	push   ebx
  420725:	mov    edx,0xc076b524
  42072a:	mov    bl,0x6a
  42072c:	sbb    BYTE PTR [edi+0x46],cl
  42072f:	cs sub eax,0x7a74802d
  420735:	mov    ecx,DWORD PTR [ebx]
  420737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420738:	inc    esi
  420739:	sbb    al,0x9e
  42073b:	test   ecx,ebp
  42073d:	(bad)  
  42073e:	test   eax,0x7281fd39
  420743:	imul   esp,DWORD PTR [ecx],0x556d1140
  420749:	je     0x420719
  42074b:	sbb    BYTE PTR [ebp-0x18],bh
  42074e:	lods   eax,DWORD PTR ds:[esi]
  42074f:	or     esp,ecx
  420751:	and    DWORD PTR [edx],ebp
  420753:	shr    DWORD PTR [ebp-0x37],cl
  420756:	fwait
  420757:	pushf  
  420758:	xchg   BYTE PTR [esi+esi*2-0x36],cl
  42075c:	mov    ch,0x71
  42075e:	push   edi
  42075f:	lds    ecx,FWORD PTR [edx-0x4d75f6b]
  420765:	mov    WORD PTR [ebx],gs
  420767:	jae    0x4207bc
  420769:	sub    DWORD PTR [ecx+esi*2+0x6d],ecx
  42076d:	clc    
  42076e:	xor    bl,ch
  420770:	jge    0x42072b
  420772:	sub    al,BYTE PTR [edi-0x15]
  420775:	mov    dl,BYTE PTR [edx-0x19]
  420778:	mov    bh,BYTE PTR [esi-0x59bc6d17]
  42077e:	test   edi,0xa229203e
  420784:	dec    ebp
  420785:	repz mov bh,0x14
  420788:	out    0x20,al
  42078a:	les    edi,FWORD PTR [eax]
  42078c:	mov    esi,DWORD PTR [edx]
  42078e:	sahf   
  42078f:	xor    ch,dl
  420791:	push   es
  420792:	fnstcw WORD PTR [eax+0x3e]
  420795:	ins    DWORD PTR es:[edi],dx
  420796:	cmp    BYTE PTR es:[ecx-0x3725262b],0x13
  42079e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42079f:	jle    0x42072c
  4207a1:	push   ds
  4207a2:	mov    eax,ss:0x30de590d
  4207a8:	test   eax,0x9fb51b1e
  4207ad:	out    dx,eax
  4207ae:	jmp    0x4207b7
  4207b0:	and    ah,cl
  4207b2:	pop    eax
  4207b3:	adc    eax,0xc2760de
  4207b8:	jae    0x420803
  4207ba:	jae    0x4207d4
  4207bc:	mov    bl,0x22
  4207be:	lods   eax,DWORD PTR ds:[esi]
  4207bf:	repnz test DWORD PTR [esi-0x6b],ecx
  4207c3:	xchg   edx,eax
  4207c4:	inc    eax
  4207c5:	jmp    0x42074e
  4207c7:	das    
  4207c8:	cmc    
  4207c9:	dec    ebp
  4207ca:	cmp    eax,0xc851e8ca
  4207cf:	and    cl,BYTE PTR [ebx+0x6a0201f6]
  4207d5:	jmp    DWORD PTR [edi-0x1c0be132]
  4207db:	je     0x4207bc
  4207dd:	sbb    esi,DWORD PTR [eax+0x27]
  4207e0:	adc    DWORD PTR [eax+0x64],eax
  4207e3:	test   BYTE PTR [bx+di-0x22],ch
  4207e7:	cmp    ah,BYTE PTR [esi+ecx*2]
  4207ea:	sahf   
  4207eb:	or     al,0x3
  4207ed:	mov    ecx,0x39bee663
  4207f2:	clc    
  4207f3:	(bad)  [ecx]
  4207f5:	push   ecx
  4207f6:	lods   al,BYTE PTR ds:[esi]
  4207f7:	bnd jl 0x420796
  4207fa:	xchg   BYTE PTR [eax-0x43],ah
  4207fd:	push   esp
  4207fe:	loopne 0x420874
  420800:	mov    bh,dl
  420802:	and    DWORD PTR [ebx-0x5],ebp
  420805:	pop    ebp
  420806:	jg     0x420794
  420808:	mov    al,ds:0x8347591f
  42080d:	mov    bl,0x8f
  42080f:	mov    WORD PTR [edi],?
  420811:	shl    esp,1
  420813:	sub    BYTE PTR [ecx+0x37a71056],ah
  420819:	push   ebx
  42081a:	jne    0x4207b0
  42081c:	addr16 mov cl,0xcd
  42081f:	repz mov ch,0xfb
  420822:	cdq    
  420823:	bnd jg 0x42080a
  420826:	pop    ss
  420827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420828:	aas    
  420829:	sub    bh,BYTE PTR ds:0x7709570d
  42082f:	mov    cl,0x7
  420831:	ret    
  420832:	dec    edi
  420833:	pop    ebp
  420834:	leave  
  420835:	ret    0x8de4
  420838:	test   eax,0xa5849f6e
  42083d:	cmp    eax,0x79fc620f
  420842:	cmp    BYTE PTR [edi],ah
  420844:	stos   DWORD PTR es:[edi],eax
  420845:	inc    ebx
  420846:	outs   dx,BYTE PTR ds:[esi]
  420847:	add    BYTE PTR [edi-0x29],bl
  42084a:	push   esi
  42084b:	and    ch,cl
  42084d:	outs   dx,DWORD PTR ds:[esi]
  42084e:	mov    bh,0xbf
  420850:	mov    edi,0x76d7c0e0
  420855:	mov    dl,BYTE PTR [eax-0x16]
  420858:	mov    esi,0xe39a0898
  42085d:	ins    DWORD PTR es:[edi],dx
  42085e:	push   0x33ce305d
  420863:	scas   eax,DWORD PTR es:[edi]
  420864:	inc    esp
  420865:	inc    edx
  420866:	and    dh,BYTE PTR [edi]
  420868:	stos   DWORD PTR es:[edi],eax
  420869:	stos   BYTE PTR es:[edi],al
  42086a:	sbb    ebx,edi
  42086c:	sbb    BYTE PTR [edx+eiz*1-0x2946be26],ch
  420873:	cwde   
  420874:	or     eax,0xc4fa0129
  420879:	dec    ebp
  42087a:	or     DWORD PTR [ebp+0x22],edi
  42087d:	fadd   QWORD PTR [edi+0x702890]
  420883:	mov    bh,0x1b
  420885:	xchg   edi,eax
  420886:	(bad)  
  420888:	add    DWORD PTR es:[esi],edi
  42088b:	sbb    ch,ah
  42088d:	mov    esi,0x5d777488
  420892:	jmp    0x4738ff1f
  420897:	inc    esp
  420898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420899:	sar    BYTE PTR [ecx],0x97
  42089c:	jmp    0x4208b6
  42089e:	in     eax,0x67
  4208a0:	inc    eax
  4208a1:	stos   BYTE PTR es:[edi],al
  4208a2:	xor    eax,0x101a1504
  4208a7:	cmp    al,0x20
  4208a9:	adc    dh,BYTE PTR [ebp-0x4b507e51]
  4208af:	push   0x5f5bac90
  4208b4:	push   ds
  4208b5:	cmp    DWORD PTR [esi],0x68
  4208b8:	sub    DWORD PTR [ebp-0x7a2601f5],ebp
  4208be:	jge    0x420938
  4208c0:	mov    DWORD PTR [edi-0x503ab135],ebx
  4208c6:	xor    DWORD PTR [eax],esp
  4208c8:	jmp    0x4208b2
  4208ca:	fwait
  4208cb:	cmp    DWORD PTR [ebp+0x22651ed6],ecx
  4208d1:	aas    
  4208d2:	and    bl,BYTE PTR ds:0x5071b505
  4208d8:	xchg   edi,eax
  4208d9:	lahf   
  4208da:	push   edi
  4208db:	xchg   esp,eax
  4208dc:	ror    ecx,1
  4208de:	mov    bh,BYTE PTR [ecx]
  4208e0:	push   es
  4208e1:	jno    0x420893
  4208e3:	adc    cl,ch
  4208e5:	call   0xf02:0x8a58a53e
  4208ec:	pop    edx
  4208ed:	cld    
  4208ee:	outs   dx,BYTE PTR ds:[esi]
  4208ef:	xchg   edi,eax
  4208f0:	xor    dl,bh
  4208f2:	pop    ds
  4208f3:	cdq    
  4208f4:	std    
  4208f5:	and    ah,BYTE PTR [edx-0x3963f58a]
  4208fb:	and    bh,BYTE PTR [edi+ecx*2-0x7878fed9]
  420902:	or     bh,BYTE PTR [esi+0x6]
  420905:	adc    edi,esi
  420907:	push   ss
  420908:	in     eax,dx
  420909:	es cs cli 
  42090c:	ds out dx,al
  42090e:	shl    BYTE PTR [ecx-0x4555f64b],1
  420914:	push   0xffffffaa
  420916:	pop    ss
  420917:	imul   eax,DWORD PTR [esi],0x60
  42091a:	in     eax,0x58
  42091c:	mov    edi,?
  42091e:	or     esp,edi
  420920:	sub    DWORD PTR [eiz*4-0x3f917488],eax
  420927:	sbb    cl,dl
  420929:	cmp    al,ah
  42092b:	and    BYTE PTR [eax-0x74],ah
  42092e:	xor    dl,BYTE PTR [esi]
  420930:	imul   edx,DWORD PTR [ebp+0x38],0x64
  420934:	jae    0x420930
  420936:	xchg   edi,eax
  420937:	jmp    0x50f:0xabb764f4
  42093e:	push   es
  42093f:	push   ebp
  420940:	adc    edi,DWORD PTR [ebx]
  420942:	mov    BYTE PTR [edx+0x47f49fea],dh
  420948:	retf   
  420949:	add    DWORD PTR [edx],ecx
  42094b:	test   eax,0x9246ada1
  420950:	mov    ecx,0x9627f49a
  420955:	rol    BYTE PTR [ebp+0x33],1
  420958:	pop    ss
  420959:	cmp    eax,0x85daa88f
  42095e:	cmp    eax,0x35049002
  420963:	pop    ss
  420964:	(bad)  
  420965:	ins    DWORD PTR es:[edi],dx
  420966:	inc    edi
  420967:	and    edi,DWORD PTR [eax]
  420969:	and    edx,DWORD PTR [ecx-0x19]
  42096c:	mov    ch,0x24
  42096e:	adc    BYTE PTR [ebp-0x74],ch
  420971:	fsub   QWORD PTR [ebx+0x4d]
  420974:	stc    
  420975:	mov    dh,0x61
  420977:	cdq    
  420978:	push   0x36
  42097a:	mul    BYTE PTR [ebx]
  42097c:	adc    al,0x4d
  42097e:	mov    bh,0xa8
  420980:	jnp    0x420913
  420982:	inc    eax
  420983:	mov    eax,ds:0x652777bc
  420988:	sub    esp,DWORD PTR [eax]
  42098a:	or     bh,BYTE PTR [esi+0x33]
  42098d:	mov    ebp,0xaf429426
  420992:	in     eax,dx
  420993:	pop    eax
  420994:	repz pop ebx
  420996:	in     eax,dx
  420997:	sub    dh,BYTE PTR [esi]
  420999:	or     ch,BYTE PTR [ecx+0x2c]
  42099c:	test   BYTE PTR [edi-0x68],bl
  42099f:	retf   0x1da8
  4209a2:	retf   0x2aa8
  4209a5:	imul   ebp,DWORD PTR [edi+0x52],0xffffffb3
  4209a9:	adc    eax,0x366e0f9f
  4209ae:	sub    DWORD PTR [edi],ebx
  4209b0:	sub    eax,0x7b3d26f9
  4209b5:	cwde   
  4209b6:	aad    0x4a
  4209b8:	lock mov DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428263
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x4282ff,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428327,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42823f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42816b,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283a3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428327,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e50
  420a34:	sub    DWORD PTR ds:0x4282fb,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42822f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42828b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x4282fb
  420a66:	sub    DWORD PTR ds:0x42830f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42816f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428283,0x0
  420a81:	mov    DWORD PTR ds:0x4282eb,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428323
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42826b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428283,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e54
  420abd:	mov    esi,DWORD PTR ds:0x42836b
  420ac3:	or     DWORD PTR ds:0x428293,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281a3
  420ad1:	mov    esi,DWORD PTR ds:0x4283e7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42816b
  420ae2:	or     DWORD PTR ds:0x428293,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x4282f3,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0xec
  420b0e:	pop    eax
  420b0f:	push   es
  420b10:	push   0x36
  420b12:	pop    ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx+0x2e181812],ah
  420b1a:	fst    st(7)
  420b1c:	sub    BYTE PTR [ebp-0x70],ah
  420b1f:	(bad)  
  420b21:	leave  
  420b22:	jp     0x420b35
  420b24:	mov    DWORD PTR [edi-0x3a8f654],ebx
  420b2a:	test   eax,0xb23a843a
  420b2f:	loopne 0x420b51
  420b31:	mov    edx,0x1ab08021
  420b36:	pop    esp
  420b37:	fistp  QWORD PTR [ebx-0x12ccaceb]
  420b3d:	inc    edx
  420b3e:	stos   BYTE PTR es:[edi],al
  420b3f:	push   cs
  420b40:	iret   
  420b41:	inc    ebx
  420b42:	add    bh,ch
  420b44:	sub    eax,0x5cd0807
  420b49:	test   al,0x24
  420b4b:	sbb    dh,BYTE PTR [edi+eiz*4]
  420b4e:	in     al,dx
  420b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b50:	pop    ebx
  420b51:	(bad)
  420b55:	jno    0x420b0e
  420b57:	mov    al,bl
  420b59:	(bad)  
  420b5a:	(bad)  
  420b5b:	arpl   bx,sp
  420b5d:	loopne 0x420b2e
  420b5f:	mov    ebp,DWORD PTR [ebp+0x57795389]
  420b65:	pusha  
  420b66:	sub    al,0x86
  420b68:	mul    BYTE PTR [eax+0x64]
  420b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b6c:	push   ds
  420b6d:	lds    ebx,FWORD PTR [esi]
  420b6f:	lea    eax,[esi-0x3]
  420b72:	or     DWORD PTR [edi-0x2e66811],edi
  420b78:	test   dh,dh
  420b7a:	xchg   edi,eax
  420b7b:	xor    ecx,DWORD PTR [edx+0x37]
  420b7e:	inc    ecx
  420b7f:	pop    edi
  420b80:	es jbe 0x420bcf
  420b83:	xchg   esi,eax
  420b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b85:	out    dx,eax
  420b86:	xor    al,0xf3
  420b88:	jmp    0x420b86
  420b8a:	adc    bh,BYTE PTR [ebx]
  420b8c:	stc    
  420b8d:	xor    ecx,eax
  420b8f:	lahf   
  420b90:	or     al,0x15
  420b92:	cli    
  420b93:	add    esi,ecx
  420b95:	orps   xmm1,XMMWORD PTR [edi+0x62]
  420b99:	shr    edi,1
  420b9b:	push   esi
  420b9c:	jbe    0x420b92
  420b9e:	add    al,0xf3
  420ba0:	cwde   
  420ba1:	pusha  
  420ba2:	test   esp,eax
  420ba4:	jae    0x420bde
  420ba6:	in     eax,0xa0
  420ba8:	and    al,0x9e
  420baa:	inc    ebx
  420bab:	hlt    
  420bac:	ficom  DWORD PTR [eax+esi*1-0x184c89be]
  420bb3:	dec    ebp
  420bb4:	or     eax,0x9e62e84
  420bb9:	bound  ecx,QWORD PTR [ecx]
  420bbb:	jnp    0x420b99
  420bbd:	pushf  
  420bbe:	sahf   
  420bbf:	out    0x18,al
  420bc1:	cmp    ch,BYTE PTR [edi+0x18]
  420bc4:	dec    esi
  420bc5:	xchg   edx,eax
  420bc6:	out    0x2e,al
  420bc8:	inc    esp
  420bc9:	lods   eax,DWORD PTR ds:[esi]
  420bca:	cmp    esi,DWORD PTR [esi+eiz*4+0x51]
  420bce:	xchg   DWORD PTR [edx],esi
  420bd0:	(bad)  
  420bd1:	retf   0x372c
  420bd4:	aad    0x2a
  420bd6:	jl     0x420bc0
  420bd8:	jbe    0x420bed
  420bda:	dec    ebx
  420bdb:	lahf   
  420bdc:	call   FWORD PTR [bp+di]
  420bdf:	mov    esi,0xbded1723
  420be4:	pushf  
  420be5:	inc    ebp
  420be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420be7:	push   edx
  420be8:	cmp    eax,0x5d73f6d9
  420bed:	xchg   ebp,eax
  420bee:	(bad)  
  420bef:	mov    ecx,0xf5822318
  420bf4:	out    dx,al
  420bf5:	push   ebp
  420bf6:	mov    ds:0xed57690f,eax
  420bfb:	sbb    eax,0xf77bec7d
  420c00:	sbb    DWORD PTR [ebx+0x2b],0x4d7842cd
  420c07:	and    dh,BYTE PTR [ebx-0x129093f5]
  420c0d:	xor    al,0xd6
  420c0f:	imul   DWORD PTR [esi-0x6a]
  420c12:	mov    ds,ebx
  420c14:	mov    edi,0x1e77c289
  420c19:	das    
  420c1a:	sar    DWORD PTR [ebx+0x76],1
  420c1d:	push   edx
  420c1e:	js     0x420c01
  420c20:	test   al,0x17
  420c22:	aas    
  420c23:	inc    ebp
  420c24:	scas   al,BYTE PTR es:[edi]
  420c25:	mov    BYTE PTR ss:[esp+ebx*2-0x3a],dh
  420c2a:	cmp    eax,0xee793cbe
  420c2f:	nop
  420c30:	jb     0x420be6
  420c32:	pop    ebp
  420c33:	and    dh,BYTE PTR [ecx+ebx*4]
  420c36:	cli    
  420c37:	outs   dx,BYTE PTR ds:[esi]
  420c38:	push   edx
  420c39:	xchg   esi,eax
  420c3a:	(bad)  
  420c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c3c:	dec    ebx
  420c3d:	sub    al,BYTE PTR [edx]
  420c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c40:	test   eax,0x89ec6257
  420c45:	clc    
  420c46:	mov    al,0x4
  420c48:	pop    edx
  420c49:	dec    esi
  420c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c4c:	mov    ebp,0x5dd60c07
  420c51:	add    BYTE PTR [ecx+0x3034ed64],bh
  420c57:	les    ecx,FWORD PTR [ecx]
  420c59:	cmp    ch,BYTE PTR [ebx+0x7c]
  420c5c:	jp     0x420ca6
  420c5e:	out    0x19,al
  420c60:	jmp    0x420c2b
  420c62:	push   edi
  420c63:	outs   dx,DWORD PTR ds:[esi]
  420c64:	loope  0x420cc0
  420c66:	rol    DWORD PTR [ebx],cl
  420c68:	sub    ebx,ecx
  420c6a:	test   eax,0xd8664a55
  420c6f:	push   0xffffff91
  420c71:	pop    ds
  420c72:	lock cmp edi,DWORD PTR [edx]
  420c75:	add    dl,BYTE PTR [ebp-0x1e6d2bcb]
  420c7b:	xchg   ebx,eax
  420c7c:	inc    ebx
  420c7d:	mov    ah,0x7f
  420c7f:	and    al,0x32
  420c81:	out    0x24,al
  420c83:	cmp    al,BYTE PTR [eax+0xf977d69]
  420c89:	dec    ebx
  420c8a:	loope  0x420cbb
  420c8c:	mov    al,ds:0xcd92a7e0
  420c91:	cmc    
  420c92:	sti    
  420c93:	stos   DWORD PTR es:[edi],eax
  420c94:	jbe    0x420c93
  420c96:	xlat   BYTE PTR ds:[ebx]
  420c97:	mov    cl,0xad
  420c99:	sub    BYTE PTR [esi],bh
  420c9b:	jmp    0x420ce6
  420c9d:	fldenv [eax+0x4d67686a]
  420ca3:	cmp    ebp,DWORD PTR [edi]
  420ca5:	jo     0x420cf9
  420ca7:	xor    al,0xc5
  420ca9:	lahf   
  420caa:	retf   
  420cab:	pusha  
  420cac:	push   ebp
  420cad:	xchg   ecx,eax
  420cae:	out    0xff,eax
  420cb0:	push   eax
  420cb1:	aaa    
  420cb2:	idiv   DWORD PTR [esi-0x9]
  420cb5:	sbb    DWORD PTR [esi+ebx*1-0x28],0xfffffff7
  420cba:	adc    BYTE PTR [eax+0x1e19620e],0x97
  420cc1:	inc    ebx
  420cc2:	rcl    DWORD PTR [edx],cl
  420cc4:	push   eax
  420cc5:	sub    bh,dl
  420cc7:	cmp    bh,BYTE PTR [ebp+ebp*4+0x47]
  420ccb:	mov    eax,ds:0xa401554b
  420cd0:	push   ds
  420cd1:	mov    bl,0x68
  420cd3:	and    al,0x6a
  420cd5:	jbe    0x420cec
  420cd7:	cld    
  420cd8:	inc    edi
  420cd9:	mov    dl,0x4d
  420cdb:	or     ah,BYTE PTR [ebp+0x5f9e9783]
  420ce1:	or     al,0x1b
  420ce3:	jecxz  0x420cf1
  420ce5:	xor    edx,edi
  420ce7:	and    ebp,DWORD PTR [esi-0x27]
  420cea:	adc    cl,BYTE PTR [ebx-0x574c9ac9]
  420cf0:	into   
  420cf1:	sbb    eax,0x64638f2
  420cf6:	pop    esp
  420cf7:	push   edi
  420cf8:	imul   esp,DWORD PTR [ecx],0x45db386b
  420cfe:	test   eax,0x269e2f5c
  420d03:	or     BYTE PTR [ebp+0x6b],al
  420d06:	sub    eax,0xa85ecec2
  420d0b:	adc    ebp,DWORD PTR [ebp+ebp*2+0x30]
  420d0f:	xchg   ecx,eax
  420d10:	and    ah,BYTE PTR [edi+0x7802be73]
  420d16:	cmp    DWORD PTR [eax],esp
  420d18:	shl    DWORD PTR [ebx+0x2a007ab],0x5
  420d1f:	jmp    0x420cd8
  420d21:	xor    dl,BYTE PTR [edx+0x6b7b0d90]
  420d27:	inc    edi
  420d28:	dec    esi
  420d29:	test   al,0x9f
  420d2b:	and    eax,0xc272f2b9
  420d30:	imul   ecx,ebx,0x80d3d665
  420d36:	jne    0x420cec
  420d38:	stos   DWORD PTR es:[edi],eax
  420d39:	pop    edi
  420d3a:	xor    eax,0x28aa7379
  420d3f:	rcl    BYTE PTR [ebx-0x69],0x3b
  420d43:	jmp    0x1548:0x4023628e
  420d4a:	adc    BYTE PTR [edx+0x591a2285],bh
  420d50:	mov    edi,0x6a37b31d
  420d55:	popa   
  420d56:	push   edi
  420d57:	add    BYTE PTR [ebp-0x4be4a1e7],dl
  420d5d:	int    0xfa
  420d5f:	inc    ebx
  420d60:	add    BYTE PTR [edi-0x3f],bh
  420d63:	xor    DWORD PTR [edi-0x2305b32f],ecx
  420d69:	aad    0xa4
  420d6b:	inc    edx
  420d6c:	jo     0x420cfc
  420d6e:	pop    ds
  420d6f:	jl     0x420d45
  420d71:	jns    0x420d2c
  420d73:	push   eax
  420d74:	add    eax,0x81db0dd7
  420d79:	ret    
  420d7a:	pop    ss
  420d7b:	dec    eax
  420d7c:	sbb    DWORD PTR [edi+0x7c1f3f86],0x7e6835c5
  420d86:	loopne 0x420db7
  420d88:	pop    ds
  420d89:	inc    esi
  420d8a:	jns    0x420d95
  420d8c:	loope  0x420d7d
  420d8e:	add    DWORD PTR ds:0xec5738df,eax
  420d94:	sub    edx,ebx
  420d96:	aad    0x74
  420d98:	xor    DWORD PTR [ebx+eiz*4],edi
  420d9b:	inc    ecx
  420d9c:	push   ebp
  420d9d:	or     DWORD PTR [esi*4-0x10b25bf0],ebx
  420da4:	or     al,0x81
  420da6:	jge    0x420d94
  420da8:	xor    dl,0x8b
  420dab:	inc    eax
  420dac:	(bad)  
  420dad:	addr16 bnd jnp 0x420d79
  420db1:	adc    DWORD PTR [ebp+edi*4+0x4e],esi
  420db5:	xor    dl,cl
  420db7:	inc    esi
  420db8:	xor    BYTE PTR [eax],bl
  420dba:	scas   al,BYTE PTR es:[edi]
  420dbb:	in     al,0x23
  420dbd:	repnz adc esp,ebx
  420dc0:	adc    eax,0xec7c1bf4
  420dc5:	gs repnz xchg edi,eax
  420dc8:	mov    edx,0x2b81fa57
  420dcd:	jmp    0x420dc5
  420dcf:	ret    0xcc
  420dd2:	daa    
  420dd3:	pop    edi
  420dd4:	outs   dx,BYTE PTR ds:[esi]
  420dd5:	push   ebx
  420dd6:	mov    bh,0x53
  420dd8:	popa   
  420dd9:	inc    edi
  420dda:	imul   esi,ebx,0x39bdeefa
  420de0:	ja     0x420e16
  420de2:	sub    al,0xd6
  420de4:	nop
  420de5:	and    DWORD PTR [ecx-0x53],ebp
  420de8:	call   0x8d7ca6e0
  420ded:	mov    fs,esi
  420def:	addr16 call 0xd4d3:0x62398ed4
  420df7:	mov    ecx,es
  420df9:	xor    dh,cl
  420dfb:	push   eax
  420dfc:	lahf   
  420dfd:	adc    esi,DWORD PTR [ebp+0x2db2e33e]
  420e03:	pop    ss
  420e04:	bound  esi,QWORD PTR [ebp-0x67]
  420e07:	clc    
  420e08:	fst    QWORD PTR [esi+0x3f]
  420e0b:	ret    0xd379
  420e0e:	test   eax,0xd97a93d0
  420e13:	(bad)  
  420e14:	jge    0x420de8
  420e16:	jo     0x420d9a
  420e18:	push   ecx
  420e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e1a:	dec    edx
  420e1b:	(bad)  
  420e1c:	(bad)  
  420e1e:	xor    eax,0xfa755f5a
  420e23:	sub    al,0x7b
  420e25:	push   0xffffffc0
  420e27:	and    ebp,edx
  420e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e2a:	xchg   edi,eax
  420e2b:	daa    
  420e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e2d:	push   edi
  420e2e:	rcl    BYTE PTR ds:0xc451d73a,0xdd
  420e35:	push   esi
  420e36:	fidiv  DWORD PTR [eax-0x37]
  420e39:	and    eax,0xbbb6f0b7
  420e3e:	hlt    
  420e3f:	mov    edi,0x35893b12
  420e44:	outs   dx,BYTE PTR ds:[esi]
  420e45:	jge    0x420deb
  420e47:	cli    
  420e48:	mov    BYTE PTR [edi+0xb21b95],bl
  420e4e:	add    esi,ebx
  420e50:	push   edx
  420e51:	adc    al,0x19
  420e53:	fs jbe 0x420ec6
  420e56:	cli    
  420e57:	js     0x420dda
  420e59:	jmp    0x358b:0x29ad
  420e60:	mov    eax,DWORD PTR [ecx+0x35190042]
  420e66:	jg     0x420deb
  420e68:	inc    edx
  420e69:	add    BYTE PTR [edi],cl
  420e6b:	scas   eax,DWORD PTR es:[edi]
  420e6c:	rol    BYTE PTR [ebx+0x42839b3d],1
  420e72:	add    BYTE PTR [eax],al
  420e74:	mov    DWORD PTR ds:0x428253,ebx
  420e7a:	mov    DWORD PTR ds:0x42818b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42817f
  420e8e:	mov    DWORD PTR ds:0x428263,0x776f
  420e98:	cmp    DWORD PTR ds:0x42839b,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428237
  420eaa:	push   0x42809f
  420eaf:	call   DWORD PTR ds:0x428e58
  420eb5:	add    ecx,DWORD PTR ds:0x428397
  420ebb:	xor    esi,DWORD PTR ds:0x42822f
  420ec1:	adc    DWORD PTR ds:0x428287,edx
  420ec7:	xor    DWORD PTR ds:0x42830f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42823b
  420ed3:	or     esi,DWORD PTR ds:0x428197
  420ed9:	mov    DWORD PTR ds:0x42823b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42826f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428157
  420eef:	sbb    eax,DWORD PTR ds:0x42830b
  420ef5:	mov    ds:0x428157,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428207
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42835f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42830f,0x0
  420f23:	mov    DWORD PTR ds:0x4282a3,0x1362
  420f2d:	mov    DWORD PTR ds:0x428253,edx
  420f33:	mov    DWORD PTR ds:0x42828f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428373,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42830f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428ed0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281df
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281eb
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428267,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42825f
  420f87:	sbb    edx,DWORD PTR ds:0x4283a7
  420f8d:	mov    DWORD PTR ds:0x42825f,edx
  420f93:	add    DWORD PTR ds:0x42819b,ecx
  420f99:	sub    DWORD PTR ds:0x42838b,0x4282fb
  420fa3:	cmp    DWORD PTR ds:0x428287,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42836b
  420fb0:	movzx  edx,BYTE PTR ds:0x428173
  420fb7:	mov    DWORD PTR ds:0x4282f7,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283a3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283a7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428287,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d74
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428307
  421000:	sbb    DWORD PTR ds:0x428283,edx
  421006:	movzx  edx,WORD PTR ds:0x42815b
  42100d:	or     edx,DWORD PTR ds:0x428383
  421013:	mov    DWORD PTR ds:0x42815b,edx
  421019:	dec    DWORD PTR ds:0x428373
  42101f:	sub    DWORD PTR ds:0x42827f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42816b,0x0
  421048:	mov    DWORD PTR ds:0x428377,0x62d9
  421052:	mov    DWORD PTR ds:0x428157,0x300d
  42105c:	mov    DWORD PTR ds:0x42815b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x4282ff
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42836f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42816b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428d94
  4210a1:	sbb    ecx,DWORD PTR ds:0x428283
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282a7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428163
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x422237
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x42137a
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x48bc:0x65828d2a
  42115b:	xor    eax,0xfc1aa59
  421160:	push   ss
  421161:	sbb    al,bh
  421163:	adc    al,0x18
  421165:	sbb    BYTE PTR [eax],al
  421167:	outs   dx,DWORD PTR ds:[esi]
  421168:	or     esp,DWORD PTR [edi]
  42116a:	mov    cl,0x5f
  42116c:	pop    ecx
  42116d:	outs   dx,BYTE PTR ds:[esi]
  42116e:	pop    edx
  42116f:	push   0xffffffb5
  421171:	cmp    BYTE PTR [ecx+0x1c299393],ah
  421177:	mov    al,ds:0x349a66ed
  42117c:	mov    ebx,0xdd702857
  421181:	add    esp,DWORD PTR [esi+0x3155db7f]
  421187:	out    0xc1,eax
  421189:	test   dh,dl
  42118b:	ret    
  42118c:	lods   eax,DWORD PTR ds:[esi]
  42118d:	scas   eax,DWORD PTR es:[edi]
  42118e:	or     BYTE PTR [ecx-0x57ab253b],dl
  421194:	dec    edx
  421195:	jmp    0xc868738b
  42119a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42119b:	jp     0x4211ab
  42119d:	jg     0x42115e
  42119f:	mov    esi,0x4e73346e
  4211a4:	push   ds
  4211a5:	hlt    
  4211a6:	lods   eax,DWORD PTR ds:[esi]
  4211a7:	mov    cl,0x3e
  4211aa:	(bad)  
  4211ab:	lea    eax,[ebx+0x52]
  4211ae:	lahf   
  4211af:	lods   al,BYTE PTR ds:[esi]
  4211b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211b1:	test   al,0xc6
  4211b3:	mov    ah,0xda
  4211b5:	retf   0x95c9
  4211b8:	add    eax,0xd1d990b
  4211bd:	(bad)  [edx]
  4211bf:	cld    
  4211c0:	xor    eax,0x975d9173
  4211c5:	pop    ebp
  4211c6:	loope  0x4211b2
  4211c8:	jmp    0x39d1:0x14bc9402
  4211cf:	enter  0x46a7,0xd3
  4211d3:	jne    0x4211d1
  4211d5:	lahf   
  4211d6:	fisttp QWORD PTR [esi+eax*4]
  4211d9:	daa    
  4211da:	sub    al,0x78
  4211dc:	outs   dx,DWORD PTR ds:[esi]
  4211dd:	pop    ecx
  4211de:	pusha  
  4211df:	xchg   esp,eax
  4211e0:	jl     0x42116b
  4211e2:	xor    eax,edx
  4211e4:	push   0xffffffa1
  4211e6:	pushf  
  4211e7:	pop    ss
  4211e8:	fistp  DWORD PTR [ecx+0x32f223fb]
  4211ee:	jo     0x4211b4
  4211f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211f1:	jbe    0x4211aa
  4211f3:	push   edx
  4211f4:	pmullw mm7,QWORD PTR [edx]
  4211f7:	or     al,0xa7
  4211f9:	icebp  
  4211fa:	in     eax,0x22
  4211fc:	pop    edi
  4211fd:	mov    cl,0xa5
  4211ff:	xor    dh,BYTE PTR [eax+0x3d]
  421202:	mov    al,0x1e
  421204:	dec    edx
  421205:	int3   
  421206:	jo     0x421203
  421208:	mov    bh,0xd4
  42120a:	pop    edx
  42120b:	push   edx
  42120c:	mov    bl,0x6c
  42120e:	jns    0x4211f5
  421210:	retf   
  421211:	ret    0x8bd8
  421214:	mov    eax,ebp
  421216:	mov    bh,BYTE PTR [ecx]
  421218:	iret   
  421219:	push   ds
  42121a:	push   esi
  42121b:	hlt    
  42121c:	lea    ebp,[edx+ecx*2-0x37e726e8]
  421223:	inc    ebx
  421224:	inc    edx
  421225:	push   ecx
  421226:	push   esi
  421227:	mov    cl,0x27
  421229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42122a:	jo     0x4211c9
  42122c:	push   ebx
  42122d:	pushf  
  42122e:	loopne 0x42126f
  421230:	xor    BYTE PTR [eax-0x28],dl
  421233:	ins    BYTE PTR es:[edi],dx
  421234:	mov    esp,0xcb18839e
  421239:	mov    ecx,DWORD PTR [edx]
  42123b:	dec    edi
  42123c:	into   
  42123d:	pop    ds
  42123e:	stos   DWORD PTR es:[edi],eax
  42123f:	mov    cl,0x60
  421241:	out    dx,eax
  421242:	mov    esi,DWORD PTR [edi+eax*4+0x13e838e5]
  421249:	mov    al,ds:0x250faa2a
  42124e:	inc    ebx
  42124f:	push   cs
  421250:	fimul  WORD PTR [esi-0x618cfd94]
  421256:	inc    eax
  421257:	mov    ds:0xcd7084c2,eax
  42125c:	mov    DWORD PTR [ecx+ebp*1-0x58],edx
  421260:	mov    esp,0x5668b73b
  421265:	in     eax,0x29
  421267:	pop    ebx
  421268:	cs ss ss not esi
  42126d:	sahf   
  42126e:	mov    bl,0x3a
  421270:	lds    eax,FWORD PTR ds:0x74983f13
  421276:	loop   0x4211fe
  421278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421279:	call   0x884a:0xb097448c
  421280:	jne    0x42128c
  421282:	das    
  421283:	mov    WORD PTR [ebp+0x7bc45297],?
  421289:	scas   al,BYTE PTR es:[edi]
  42128a:	inc    ecx
  42128b:	xchg   si,ax
  42128d:	dec    eax
  42128e:	xchg   ecx,edx
  421290:	nop
  421291:	leave  
  421292:	push   es
  421293:	jne    0x421250
  421295:	(bad)  
  421296:	jmp    0x42129a
  421298:	sbb    al,0x63
  42129a:	dec    esi
  42129b:	adc    al,0x9b
  42129d:	imul   edi,DWORD PTR [ebp+0x14528c79],0x7d
  4212a4:	imul   esp,DWORD PTR [esi+0x1b864b66],0x2bb3719e
  4212ae:	test   eax,0x600f50ad
  4212b3:	mov    esp,0x3e9d5b65
  4212b8:	iret   
  4212b9:	pop    ss
  4212ba:	push   esp
  4212bb:	push   ebp
  4212bc:	adc    BYTE PTR [esi+0x41],bh
  4212bf:	test   BYTE PTR [esi+esi*4+0x52d9e72e],ch
  4212c6:	add    cl,BYTE PTR [ebp-0x22]
  4212c9:	push   esi
  4212ca:	pop    edx
  4212cb:	mov    dl,0xd3
  4212cd:	dec    ebx
  4212ce:	or     eax,0xe0f4b437
  4212d3:	sub    dl,BYTE PTR [edx+0x5f]
  4212d6:	repz ret 0x7aaa
  4212da:	out    dx,al
  4212db:	(bad)  
  4212dc:	fs jbe 0x42129a
  4212df:	(bad)  
  4212e0:	mov    esi,DWORD PTR [esi]
  4212e2:	mov    dh,0x7b
  4212e4:	mov    al,0xc2
  4212e6:	mov    DWORD PTR [edx+0x73],esi
  4212e9:	pop    esi
  4212ea:	retf   
  4212eb:	pop    eax
  4212ec:	sahf   
  4212ed:	and    al,0xdc
  4212ef:	mov    edi,DWORD PTR [esi+0x26]
  4212f2:	sbb    DWORD PTR [edx+0x8],esi
  4212f5:	xchg   ebx,eax
  4212f6:	or     DWORD PTR [esi-0x66342629],0x190798de
  421300:	mov    ds:0x60fc4747,al
  421305:	sub    DWORD PTR [edi+ecx*1+0x3d],ebx
  421309:	bound  edx,QWORD PTR [ecx+0x40ff3b38]
  42130f:	(bad)  
  421310:	cld    
  421311:	or     dh,BYTE PTR [ebx+0x28]
  421314:	or     BYTE PTR [esi-0x61],0x7a
  421318:	es sti 
  42131a:	icebp  
  42131b:	call   0x9e18:0xdb02c90
  421322:	cdq    
  421323:	cmp    al,0xe5
  421325:	rcl    ecx,1
  421327:	jg     0x4212ce
  421329:	shl    DWORD PTR ds:0xb197a416,0x9e
  421330:	mov    WORD PTR [edi+edx*8-0x1883fe38],ds
  421337:	pop    eax
  421338:	sahf   
  421339:	aaa    
  42133a:	sbb    eax,0x1069a48f
  42133f:	mov    ch,0xc9
  421341:	pop    ss
  421342:	xor    eax,0xc2e7d1e1
  421347:	(bad)  
  421348:	pop    ebx
  421349:	test   al,0x1c
  42134b:	xchg   esp,eax
  42134c:	sub    eax,0x7f36e07a
  421351:	(bad)  
  421352:	iret   
  421353:	in     al,dx
  421354:	push   ebx
  421355:	inc    esi
  421356:	xor    esi,DWORD PTR [esi-0x4d641e02]
  42135c:	pop    ebx
  42135d:	nop
  42135e:	scas   al,BYTE PTR es:[edi]
  42135f:	aam    0x56
  421361:	test   bl,dl
  421363:	adc    ecx,DWORD PTR [eax]
  421365:	lock jae 0x421330
  421368:	(bad)
  42136b:	lock push 0xffffffcf
  42136e:	push   edx
  42136f:	push   es
  421370:	imul   ebp,DWORD PTR [ecx],0x3
  421373:	lock pop esi
  421375:	fld    TBYTE PTR [ebx+edx*4+0x5e]
  421379:	test   BYTE PTR [ebx-0x15b7b],cl
  42137f:	dec    DWORD PTR [ebx-0x1576b]
  421385:	push   DWORD PTR ds:0xca79a575
  42138b:	xor    edx,0x9c1b89e8
  421391:	mov    cl,0x2
  421393:	call   0x40a9b5
  421398:	mov    ecx,edx
  42139a:	mov    edx,DWORD PTR [ebp-0x15c]
  4213a0:	mov    DWORD PTR [ebp-0x218],esi
  4213a6:	mov    esi,DWORD PTR [ebp-0x158]
  4213ac:	xor    edx,0xca79a575
  4213b2:	xor    esi,0x9c1b89e8
  4213b8:	mov    DWORD PTR [ebp-0x21c],eax
  4213be:	mov    eax,edx
  4213c0:	mov    edx,esi
  4213c2:	mov    DWORD PTR [ebp-0x220],ecx
  4213c8:	mov    cl,0x3e
  4213ca:	call   0x422237
  4213cf:	mov    esi,DWORD PTR [ebp-0x21c]
  4213d5:	or     esi,eax
  4213d7:	mov    eax,DWORD PTR [ebp-0x220]
  4213dd:	or     eax,edx
  4213df:	push   eax
  4213e0:	push   esi
  4213e1:	push   ebx
  4213e2:	push   edi
  4213e3:	call   0x416c20
  4213e8:	mov    esi,DWORD PTR [ebp-0x218]
  4213ee:	cmp    esi,eax
  4213f0:	jne    0x4214a6
  4213f6:	mov    eax,DWORD PTR [ebp-0x154]
  4213fc:	mov    edx,DWORD PTR [ebp-0x150]
  421402:	xor    eax,0xca79a575
  421407:	xor    edx,0x9c1b89e8
  42140d:	mov    cl,0x2
  42140f:	call   0x40a9b5
  421414:	mov    esi,eax
  421416:	mov    edi,edx
  421418:	mov    eax,DWORD PTR [ebp-0x154]
  42141e:	mov    edx,DWORD PTR [ebp-0x150]
  421424:	xor    eax,0xca79a575
  421429:	xor    edx,0x9c1b89e8
  42142f:	mov    cl,0x3e
  421431:	call   0x422237
  421436:	or     esi,eax
  421438:	or     edi,edx
  42143a:	mov    eax,DWORD PTR [ebp-0x15c]
  421440:	mov    edx,DWORD PTR [ebp-0x158]
  421446:	xor    eax,0xca79a575
  42144b:	xor    edx,0x9c1b89e8
  421451:	mov    cl,0x2
  421453:	call   0x40a9b5
  421458:	mov    ebx,eax
  42145a:	mov    eax,edx
  42145c:	mov    ecx,DWORD PTR [ebp-0x15c]
  421462:	mov    edx,DWORD PTR [ebp-0x158]
  421468:	xor    ecx,0xca79a575
  42146e:	xor    edx,0x9c1b89e8
  421474:	mov    DWORD PTR [ebp-0x224],eax
  42147a:	mov    eax,ecx
  42147c:	mov    cl,0x3e
  42147e:	call   0x422237
  421483:	or     ebx,eax
  421485:	mov    eax,DWORD PTR [ebp-0x224]
  42148b:	or     eax,edx
  42148d:	push   eax
  42148e:	push   ebx
  42148f:	push   edi
  421490:	push   esi
  421491:	call   0x416c20
  421496:	mov    DWORD PTR [ebp-0x178],eax
  42149c:	jmp    0x421766
  4214a1:	jmp    0x42171c
  4214a6:	lea    eax,[ebp-0x168]
  4214ac:	mov    DWORD PTR [ebp-0x164],eax
  4214b2:	mov    eax,DWORD PTR [ebp-0x164]
  4214b8:	mov    DWORD PTR [eax],0xa4069aae
  4214be:	mov    eax,DWORD PTR [ebp-0x168]
  4214c4:	xor    eax,0xa4069aae
  4214c9:	shr    eax,0x2
  4214cc:	mov    ecx,DWORD PTR [ebp-0x168]
  4214d2:	xor    ecx,0xa4069aae
  4214d8:	shl    ecx,0x1e
  4214db:	or     eax,ecx
  4214dd:	mov    ecx,DWORD PTR [ebp-0x174]
  4214e3:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214e7:	mov    DWORD PTR [ebp-0x160],eax
  4214ed:	mov    esi,DWORD PTR [ebp-0x160]
  4214f3:	mov    eax,DWORD PTR [ebp-0x154]
  4214f9:	mov    edx,DWORD PTR [ebp-0x150]
  4214ff:	xor    eax,0xca79a575
  421504:	xor    edx,0x9c1b89e8
  42150a:	mov    cl,0x2
  42150c:	call   0x40a9b5
  421511:	mov    edi,eax
  421513:	mov    ebx,edx
  421515:	mov    eax,DWORD PTR [ebp-0x154]
  42151b:	mov    edx,DWORD PTR [ebp-0x150]
  421521:	xor    eax,0xca79a575
  421526:	xor    edx,0x9c1b89e8
  42152c:	mov    cl,0x3e
  42152e:	call   0x422237
  421533:	or     edi,eax
  421535:	or     ebx,edx
  421537:	mov    eax,DWORD PTR [ebp-0x15c]
  42153d:	mov    edx,DWORD PTR [ebp-0x158]
  421543:	xor    eax,0xca79a575
  421548:	xor    edx,0x9c1b89e8
  42154e:	mov    cl,0x2
  421550:	call   0x40a9b5
  421555:	mov    ecx,edx
  421557:	mov    edx,DWORD PTR [ebp-0x15c]
  42155d:	mov    DWORD PTR [ebp-0x228],esi
  421563:	mov    esi,DWORD PTR [ebp-0x158]
  421569:	xor    edx,0xca79a575
  42156f:	xor    esi,0x9c1b89e8
  421575:	mov    DWORD PTR [ebp-0x22c],eax
  42157b:	mov    eax,edx
  42157d:	mov    edx,esi
  42157f:	mov    DWORD PTR [ebp-0x230],ecx
  421585:	mov    cl,0x3e
  421587:	call   0x422237
  42158c:	mov    esi,DWORD PTR [ebp-0x22c]
  421592:	or     esi,eax
  421594:	mov    eax,DWORD PTR [ebp-0x230]
  42159a:	or     eax,edx
  42159c:	push   eax
  42159d:	push   esi
  42159e:	push   ebx
  42159f:	push   edi
  4215a0:	call   0x416c20
  4215a5:	mov    esi,DWORD PTR [ebp-0x228]
  4215ab:	cmp    esi,eax
  4215ad:	je     0x421622
  4215b3:	mov    eax,DWORD PTR [ebp-0x154]
  4215b9:	mov    edx,DWORD PTR [ebp-0x150]
  4215bf:	xor    eax,0xca79a575
  4215c4:	xor    edx,0x9c1b89e8
  4215ca:	mov    cl,0x2
  4215cc:	call   0x40a9b5
  4215d1:	mov    esi,eax
  4215d3:	mov    edi,edx
  4215d5:	mov    eax,DWORD PTR [ebp-0x154]
  4215db:	mov    edx,DWORD PTR [ebp-0x150]
  4215e1:	xor    eax,0xca79a575
  4215e6:	xor    edx,0x9c1b89e8
  4215ec:	mov    cl,0x3e
  4215ee:	call   0x422237
  4215f3:	or     esi,eax
  4215f5:	or     edi,edx
  4215f7:	mov    eax,DWORD PTR [ebp-0x160]
  4215fd:	imul   esi,eax
  421600:	add    esi,DWORD PTR [ebp-0x170]
  421606:	mov    DWORD PTR [ebp-0x16c],esi
  42160c:	mov    eax,DWORD PTR [ebp-0x16c]
  421612:	mov    DWORD PTR [ebp-0x178],eax
  421618:	jmp    0x421766
  42161d:	jmp    0x4216cd
  421622:	mov    eax,DWORD PTR [ebp-0x154]
  421628:	mov    edx,DWORD PTR [ebp-0x150]
  42162e:	xor    eax,0xca79a575
  421633:	xor    edx,0x9c1b89e8
  421639:	mov    cl,0x2
  42163b:	call   0x40a9b5
  421640:	mov    esi,eax
  421642:	mov    edi,edx
  421644:	mov    eax,DWORD PTR [ebp-0x154]
  42164a:	mov    edx,DWORD PTR [ebp-0x150]
  421650:	xor    eax,0xca79a575
  421655:	xor    edx,0x9c1b89e8
  42165b:	mov    cl,0x3e
  42165d:	call   0x422237
  421662:	or     esi,eax
  421664:	or     edi,edx
  421666:	mov    eax,DWORD PTR [ebp-0x15c]
  42166c:	mov    edx,DWORD PTR [ebp-0x158]
  421672:	xor    eax,0xca79a575
  421677:	xor    edx,0x9c1b89e8
  42167d:	mov    cl,0x2
  42167f:	call   0x40a9b5
  421684:	mov    ebx,eax
  421686:	mov    eax,edx
  421688:	mov    ecx,DWORD PTR [ebp-0x15c]
  42168e:	mov    edx,DWORD PTR [ebp-0x158]
  421694:	xor    ecx,0xca79a575
  42169a:	xor    edx,0x9c1b89e8
  4216a0:	mov    DWORD PTR [ebp-0x234],eax
  4216a6:	mov    eax,ecx
  4216a8:	mov    cl,0x3e
  4216aa:	call   0x422237
  4216af:	or     ebx,eax
  4216b1:	mov    eax,DWORD PTR [ebp-0x234]
  4216b7:	or     eax,edx
  4216b9:	push   eax
  4216ba:	push   ebx
  4216bb:	push   edi
  4216bc:	push   esi
  4216bd:	call   0x416c20
  4216c2:	mov    DWORD PTR [ebp-0x178],eax
  4216c8:	jmp    0x421766
  4216cd:	mov    eax,DWORD PTR [ebp-0x15c]
  4216d3:	mov    edx,DWORD PTR [ebp-0x158]
  4216d9:	xor    eax,0xca79a575
  4216de:	xor    edx,0x9c1b89e8
  4216e4:	mov    cl,0x2
  4216e6:	call   0x40a9b5
  4216eb:	mov    esi,eax
  4216ed:	mov    edi,edx
  4216ef:	mov    eax,DWORD PTR [ebp-0x15c]
  4216f5:	mov    edx,DWORD PTR [ebp-0x158]
  4216fb:	xor    eax,0xca79a575
  421700:	xor    edx,0x9c1b89e8
  421706:	mov    cl,0x3e
  421708:	call   0x422237
  42170d:	or     esi,eax
  42170f:	or     edi,edx
  421711:	mov    DWORD PTR [ebp-0x178],esi
  421717:	jmp    0x421766
  42171c:	mov    eax,DWORD PTR [ebp-0x15c]
  421722:	mov    edx,DWORD PTR [ebp-0x158]
  421728:	xor    eax,0xca79a575
  42172d:	xor    edx,0x9c1b89e8
  421733:	mov    cl,0x2
  421735:	call   0x40a9b5
  42173a:	mov    esi,eax
  42173c:	mov    edi,edx
  42173e:	mov    eax,DWORD PTR [ebp-0x15c]
  421744:	mov    edx,DWORD PTR [ebp-0x158]
  42174a:	xor    eax,0xca79a575
  42174f:	xor    edx,0x9c1b89e8
  421755:	mov    cl,0x3e
  421757:	call   0x422237
  42175c:	or     esi,eax
  42175e:	or     edi,edx
  421760:	mov    DWORD PTR [ebp-0x178],esi
  421766:	mov    ecx,DWORD PTR [ebp-0xd8]
  42176c:	mov    eax,0x459a
  421771:	xor    edx,edx
  421773:	div    ecx
  421775:	mov    ecx,DWORD PTR [ebp-0xdc]
  42177b:	and    eax,ecx
  42177d:	add    eax,DWORD PTR [ebp-0x44]
  421780:	mov    ecx,DWORD PTR [ebp-0xe0]
  421786:	lea    eax,[eax+ecx*1+0x272f]
  42178d:	xor    eax,0x1080c
  421792:	add    eax,DWORD PTR [ebp-0x178]
  421798:	mov    DWORD PTR [ebp-0xe8],eax
  42179e:	mov    DWORD PTR [ebp-0xc],0x5950
  4217a5:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217af:	mov    DWORD PTR [ebp-0x130],0x3
  4217b9:	mov    DWORD PTR [ebp-0x20],0x2df9
  4217c0:	mov    DWORD PTR [ebp-0x8],0x4524
  4217c7:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217d1:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217db:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217e5:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217ef:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217f9:	mov    eax,DWORD PTR [ebp-0xf8]
  4217ff:	mov    ecx,DWORD PTR [ebp-0x130]
  421805:	xor    edx,edx
  421807:	div    ecx
  421809:	add    eax,0x454e
  42180e:	mov    ecx,DWORD PTR [ebp-0xc]
  421811:	and    eax,ecx
  421813:	xor    eax,0x5940
  421818:	add    eax,DWORD PTR [ebp+0x8]
  42181b:	mov    ecx,DWORD PTR [ebp-0x110]
  421821:	mov    edx,DWORD PTR [ebp-0xa4]
  421827:	sub    ecx,edx
  421829:	mov    edx,DWORD PTR [ebp-0xd4]
  42182f:	or     ecx,edx
  421831:	mov    edx,DWORD PTR [ebp-0x8]
  421834:	and    ecx,edx
  421836:	mov    edx,DWORD PTR [ebp-0x20]
  421839:	xor    ecx,edx
  42183b:	mov    edx,DWORD PTR [ebp-0x10c]
  421841:	mov    esi,0x180f
  421846:	sub    esi,edx
  421848:	mov    edx,DWORD PTR [ebp-0xa0]
  42184e:	imul   esi,edx
  421851:	xor    esi,0x402b
  421857:	xor    esi,0xfed78c17
  42185d:	mov    edx,DWORD PTR [ebp-0xe8]
  421863:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  42186a:	add    ecx,eax
  42186c:	add    esi,ecx
  42186e:	mov    DWORD PTR [ebp-0x38],esi
  421871:	mov    DWORD PTR [ebp-0x4],0x59a8
  421878:	mov    DWORD PTR [ebp-0x30],0x7021
  42187f:	mov    DWORD PTR [ebp-0xf4],0x6210
  421889:	mov    DWORD PTR [ebp-0x58],0x73d5
  421890:	mov    DWORD PTR [ebp-0x124],0x1e7d
  42189a:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218a1:	mov    eax,DWORD PTR [ebp-0x30]
  4218a4:	xor    eax,0x75cb
  4218a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4218ac:	imul   eax,ecx
  4218af:	mov    ecx,DWORD PTR [ebp+0x8]
  4218b2:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218b9:	mov    eax,DWORD PTR [ebp-0xf4]
  4218bf:	and    eax,0x6b34
  4218c4:	and    eax,0x658d
  4218c9:	xor    edx,edx
  4218cb:	push   0x6
  4218cd:	pop    esi
  4218ce:	div    esi
  4218d0:	imul   eax,eax,0x3fb9
  4218d6:	mov    edx,DWORD PTR [ebp-0x3c]
  4218d9:	and    edx,0x58c7
  4218df:	mov    esi,DWORD PTR [ebp-0x124]
  4218e5:	or     edx,esi
  4218e7:	add    edx,0x7a25
  4218ed:	imul   edx,edx,0x28d2
  4218f3:	mov    esi,DWORD PTR [ebp-0x58]
  4218f6:	xor    edx,esi
  4218f8:	xor    edx,0x1856f731
  4218fe:	mov    esi,DWORD PTR [ebp-0xe8]
  421904:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  42190b:	add    eax,ecx
  42190d:	add    edx,eax
  42190f:	mov    DWORD PTR [ebp-0xac],edx
  421915:	mov    DWORD PTR [ebp-0x54],0x1
  42191c:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421923:	mov    DWORD PTR [ebp-0x1c],0x64d8
  42192a:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421934:	mov    DWORD PTR [ebp-0x108],0x2eeb
  42193e:	mov    DWORD PTR [ebp-0x104],0x2108
  421948:	mov    eax,DWORD PTR [ebp-0x1c]
  42194b:	xor    edx,edx
  42194d:	push   0x3
  42194f:	pop    ecx
  421950:	div    ecx
  421952:	mov    ecx,DWORD PTR [ebp-0x40]
  421955:	or     eax,ecx
  421957:	mov    ecx,DWORD PTR [ebp-0x54]
  42195a:	xor    edx,edx
  42195c:	div    ecx
  42195e:	imul   eax,eax,0x7d53
  421964:	mov    ecx,DWORD PTR [ebp+0x8]
  421967:	lea    eax,[ecx+eax*1-0x1f534807]
  42196e:	mov    ecx,DWORD PTR [ebp-0xf0]
  421974:	and    ecx,0x4108
  42197a:	and    ecx,0x40e7
  421980:	sub    ecx,0x1a54
  421986:	xor    ecx,0x25ac
  42198c:	mov    edx,DWORD PTR [ebp-0x104]
  421992:	xor    edx,0x6dda
  421998:	mov    esi,DWORD PTR [ebp-0x108]
  42199e:	and    edx,esi
  4219a0:	and    edx,0xe0c
  4219a6:	or     edx,0x5b
  4219a9:	mov    esi,DWORD PTR [ebp-0xe8]
  4219af:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219b3:	add    ecx,eax
  4219b5:	lea    eax,[edx+ecx*1-0xc5b]
  4219bc:	mov    DWORD PTR [ebp-0xa8],eax
  4219c2:	and    DWORD PTR [ebp-0x144],0x0
  4219c9:	jmp    0x4219db
  4219ce:	mov    eax,DWORD PTR [ebp-0x144]
  4219d4:	inc    eax
  4219d5:	mov    DWORD PTR [ebp-0x144],eax
  4219db:	mov    eax,DWORD PTR [ebp-0xe8]
  4219e1:	mov    ecx,DWORD PTR [ebp-0x144]
  4219e7:	cmp    ecx,DWORD PTR [eax+0x18]
  4219ea:	je     0x421fa3
  4219f0:	mov    eax,DWORD PTR [ebp-0x144]
  4219f6:	mov    ecx,DWORD PTR [ebp-0x38]
  4219f9:	mov    edx,DWORD PTR [ebp+0x8]
  4219fc:	add    edx,DWORD PTR [ecx+eax*4]
  4219ff:	mov    DWORD PTR [ebp-0x48],edx
  421a02:	mov    eax,DWORD PTR [ebp-0x48]
  421a05:	mov    DWORD PTR [ebp-0x210],eax
  421a0b:	mov    eax,DWORD PTR [ebp+0xc]
  421a0e:	mov    DWORD PTR [ebp-0x20c],eax
  421a14:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a1e:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a28:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a32:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a3c:	lea    eax,[ebp-0x1e8]
  421a42:	mov    DWORD PTR [ebp-0x1f4],eax
  421a48:	mov    eax,DWORD PTR [ebp-0x20c]
  421a4e:	movzx  eax,WORD PTR [eax+0x20]
  421a52:	xor    eax,0xa49b
  421a57:	movzx  eax,ax
  421a5a:	sar    eax,1
  421a5c:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a62:	movzx  ecx,WORD PTR [ecx+0x20]
  421a66:	xor    ecx,0xa49b
  421a6c:	movzx  ecx,cx
  421a6f:	shl    ecx,0xf
  421a72:	or     eax,ecx
  421a74:	movzx  eax,ax
  421a77:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a7d:	mov    DWORD PTR [ecx],eax
  421a7f:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a85:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a8b:	xor    eax,0xca79a575
  421a90:	xor    edx,0x9c1b89e8
  421a96:	mov    cl,0x2
  421a98:	call   0x40a9b5
  421a9d:	mov    ebx,eax
  421a9f:	mov    esi,edx
  421aa1:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aa7:	mov    edx,DWORD PTR [ebp-0x1dc]
  421aad:	xor    eax,0xca79a575
  421ab2:	xor    edx,0x9c1b89e8
  421ab8:	mov    cl,0x3e
  421aba:	call   0x422237
  421abf:	or     ebx,eax
  421ac1:	or     esi,edx
  421ac3:	movzx  eax,bl
  421ac6:	push   eax
  421ac7:	lea    eax,[ebp-0x198]
  421acd:	push   eax
  421ace:	call   0x416c9e
  421ad3:	mov    eax,DWORD PTR [ebp-0x1f0]
  421ad9:	mov    edx,DWORD PTR [ebp-0x1ec]
  421adf:	xor    eax,0xca79a575
  421ae4:	xor    edx,0x9c1b89e8
  421aea:	mov    cl,0x2
  421aec:	call   0x40a9b5
  421af1:	mov    esi,eax
  421af3:	mov    edi,edx
  421af5:	mov    eax,DWORD PTR [ebp-0x1f0]
  421afb:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b01:	xor    eax,0xca79a575
  421b06:	xor    edx,0x9c1b89e8
  421b0c:	mov    cl,0x3e
  421b0e:	call   0x422237
  421b13:	or     esi,eax
  421b15:	or     edi,edx
  421b17:	mov    DWORD PTR [ebp-0x1f8],esi
  421b1d:	jmp    0x421b72
  421b22:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b28:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b2e:	xor    eax,0xca79a575
  421b33:	xor    edx,0x9c1b89e8
  421b39:	mov    cl,0x2
  421b3b:	call   0x40a9b5
  421b40:	mov    esi,eax
  421b42:	mov    edi,edx
  421b44:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b4a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b50:	xor    eax,0xca79a575
  421b55:	xor    edx,0x9c1b89e8
  421b5b:	mov    cl,0x3e
  421b5d:	call   0x422237
  421b62:	or     esi,eax
  421b64:	or     edi,edx
  421b66:	add    esi,DWORD PTR [ebp-0x1f8]
  421b6c:	mov    DWORD PTR [ebp-0x1f8],esi
  421b72:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b78:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b7e:	je     0x421c11
  421b84:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b8a:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b90:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b95:	xor    eax,0xa49b
  421b9a:	movzx  eax,ax
  421b9d:	sar    eax,1
  421b9f:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ba5:	mov    edx,DWORD PTR [ebp-0x20c]
  421bab:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bb0:	xor    ecx,0xa49b
  421bb6:	movzx  ecx,cx
  421bb9:	shl    ecx,0xf
  421bbc:	or     eax,ecx
  421bbe:	movzx  eax,ax
  421bc1:	mov    DWORD PTR [ebp-0x1fc],eax
  421bc7:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bcd:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bd3:	movzx  eax,WORD PTR [ecx+eax*4]
  421bd7:	xor    eax,0xa49b
  421bdc:	movzx  eax,ax
  421bdf:	sar    eax,1
  421be1:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421be7:	mov    edx,DWORD PTR [ebp-0x20c]
  421bed:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bf1:	xor    ecx,0xa49b
  421bf7:	movzx  ecx,cx
  421bfa:	shl    ecx,0xf
  421bfd:	or     eax,ecx
  421bff:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c05:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c0c:	jmp    0x421b22
  421c11:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c17:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c1d:	xor    eax,0xca79a575
  421c22:	xor    edx,0x9c1b89e8
  421c28:	mov    cl,0x2
  421c2a:	call   0x40a9b5
  421c2f:	mov    esi,eax
  421c31:	mov    edi,edx
  421c33:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c39:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c3f:	xor    eax,0xca79a575
  421c44:	xor    edx,0x9c1b89e8
  421c4a:	mov    cl,0x3e
  421c4c:	call   0x422237
  421c51:	or     esi,eax
  421c53:	or     edi,edx
  421c55:	mov    DWORD PTR [ebp-0x1e4],esi
  421c5b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c61:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c67:	xor    eax,0xca79a575
  421c6c:	xor    edx,0x9c1b89e8
  421c72:	mov    cl,0x2
  421c74:	call   0x40a9b5
  421c79:	mov    esi,eax
  421c7b:	mov    edi,edx
  421c7d:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c83:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c89:	xor    eax,0xca79a575
  421c8e:	xor    edx,0x9c1b89e8
  421c94:	mov    cl,0x3e
  421c96:	call   0x422237
  421c9b:	or     esi,eax
  421c9d:	or     edi,edx
  421c9f:	mov    DWORD PTR [ebp-0x23c],esi
  421ca5:	mov    DWORD PTR [ebp-0x238],edi
  421cab:	mov    eax,DWORD PTR [ebp-0x23c]
  421cb1:	or     eax,DWORD PTR [ebp-0x238]
  421cb7:	je     0x421f17
  421cbd:	lea    eax,[ebp-0x204]
  421cc3:	mov    DWORD PTR [ebp-0x208],eax
  421cc9:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ccf:	xor    edx,edx
  421cd1:	mov    cl,0x2
  421cd3:	call   0x422237
  421cd8:	mov    esi,eax
  421cda:	mov    edi,edx
  421cdc:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ce2:	xor    edx,edx
  421ce4:	mov    cl,0x3e
  421ce6:	call   0x40a9b5
  421ceb:	or     esi,eax
  421ced:	or     edi,edx
  421cef:	xor    esi,0xca79a575
  421cf5:	xor    edi,0x9c1b89e8
  421cfb:	mov    eax,DWORD PTR [ebp-0x208]
  421d01:	mov    DWORD PTR [eax],esi
  421d03:	mov    DWORD PTR [eax+0x4],edi
  421d06:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d0c:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d14:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d1a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d20:	xor    eax,0xca79a575
  421d25:	xor    edx,0x9c1b89e8
  421d2b:	mov    cl,0x2
  421d2d:	call   0x40a9b5
  421d32:	mov    ebx,eax
  421d34:	mov    edi,edx
  421d36:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d3c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d42:	xor    eax,0xca79a575
  421d47:	xor    edx,0x9c1b89e8
  421d4d:	mov    cl,0x3e
  421d4f:	call   0x422237
  421d54:	or     ebx,eax
  421d56:	or     edi,edx
  421d58:	movsx  eax,bl
  421d5b:	cmp    esi,eax
  421d5d:	je     0x421ebd
  421d63:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d69:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d71:	mov    eax,DWORD PTR [ebp-0x204]
  421d77:	mov    edx,DWORD PTR [ebp-0x200]
  421d7d:	xor    eax,0xca79a575
  421d82:	xor    edx,0x9c1b89e8
  421d88:	mov    cl,0x2
  421d8a:	call   0x40a9b5
  421d8f:	mov    edi,eax
  421d91:	mov    ebx,edx
  421d93:	mov    eax,DWORD PTR [ebp-0x204]
  421d99:	mov    edx,DWORD PTR [ebp-0x200]
  421d9f:	xor    eax,0xca79a575
  421da4:	xor    edx,0x9c1b89e8
  421daa:	mov    cl,0x3e
  421dac:	call   0x422237
  421db1:	or     edi,eax
  421db3:	or     ebx,edx
  421db5:	mov    eax,DWORD PTR [ebp-0x210]
  421dbb:	movsx  eax,BYTE PTR [eax+edi*1]
  421dbf:	cmp    esi,eax
  421dc1:	je     0x421dd1
  421dc7:	jmp    0x421f17
  421dcc:	jmp    0x421ebd
  421dd1:	mov    eax,DWORD PTR [ebp-0x204]
  421dd7:	mov    edx,DWORD PTR [ebp-0x200]
  421ddd:	xor    eax,0xca79a575
  421de2:	xor    edx,0x9c1b89e8
  421de8:	mov    cl,0x2
  421dea:	call   0x40a9b5
  421def:	mov    esi,eax
  421df1:	mov    edi,edx
  421df3:	mov    eax,DWORD PTR [ebp-0x204]
  421df9:	mov    edx,DWORD PTR [ebp-0x200]
  421dff:	xor    eax,0xca79a575
  421e04:	xor    edx,0x9c1b89e8
  421e0a:	mov    cl,0x3e
  421e0c:	call   0x422237
  421e11:	or     esi,eax
  421e13:	or     edi,edx
  421e15:	mov    eax,DWORD PTR [ebp-0x210]
  421e1b:	movsx  esi,BYTE PTR [eax+esi*1]
  421e1f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e25:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e2b:	xor    eax,0xca79a575
  421e30:	xor    edx,0x9c1b89e8
  421e36:	mov    cl,0x2
  421e38:	call   0x40a9b5
  421e3d:	mov    ebx,eax
  421e3f:	mov    edi,edx
  421e41:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e47:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e4d:	xor    eax,0xca79a575
  421e52:	xor    edx,0x9c1b89e8
  421e58:	mov    cl,0x3e
  421e5a:	call   0x422237
  421e5f:	or     ebx,eax
  421e61:	or     edi,edx
  421e63:	movsx  eax,bl
  421e66:	cmp    esi,eax
  421e68:	jne    0x421ebd
  421e6e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e74:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e7a:	xor    eax,0xca79a575
  421e7f:	xor    edx,0x9c1b89e8
  421e85:	mov    cl,0x2
  421e87:	call   0x40a9b5
  421e8c:	mov    esi,eax
  421e8e:	mov    edi,edx
  421e90:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e96:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e9c:	xor    eax,0xca79a575
  421ea1:	xor    edx,0x9c1b89e8
  421ea7:	mov    cl,0x3e
  421ea9:	call   0x422237
  421eae:	or     esi,eax
  421eb0:	or     edi,edx
  421eb2:	mov    DWORD PTR [ebp-0x214],esi
  421eb8:	jmp    0x421f61
  421ebd:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ec3:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ec9:	xor    eax,0xca79a575
  421ece:	xor    edx,0x9c1b89e8
  421ed4:	mov    cl,0x2
  421ed6:	call   0x40a9b5
  421edb:	mov    esi,eax
  421edd:	mov    edi,edx
  421edf:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ee5:	mov    edx,DWORD PTR [ebp-0x1dc]
  421eeb:	xor    eax,0xca79a575
  421ef0:	xor    edx,0x9c1b89e8
  421ef6:	mov    cl,0x3e
  421ef8:	call   0x422237
  421efd:	or     esi,eax
  421eff:	or     edi,edx
  421f01:	add    esi,DWORD PTR [ebp-0x1e4]
  421f07:	mov    DWORD PTR [ebp-0x1e4],esi
  421f0d:	jmp    0x421c5b
  421f12:	jmp    0x421c5b
  421f17:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f1d:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f23:	xor    eax,0xca79a575
  421f28:	xor    edx,0x9c1b89e8
  421f2e:	mov    cl,0x2
  421f30:	call   0x40a9b5
  421f35:	mov    esi,eax
  421f37:	mov    edi,edx
  421f39:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f3f:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f45:	xor    eax,0xca79a575
  421f4a:	xor    edx,0x9c1b89e8
  421f50:	mov    cl,0x3e
  421f52:	call   0x422237
  421f57:	or     esi,eax
  421f59:	or     edi,edx
  421f5b:	mov    DWORD PTR [ebp-0x214],esi
  421f61:	mov    eax,DWORD PTR [ebp-0x214]
  421f67:	mov    DWORD PTR [ebp-0xc8],eax
  421f6d:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f74:	je     0x421f9e
  421f7a:	mov    eax,DWORD PTR [ebp-0x144]
  421f80:	mov    ecx,DWORD PTR [ebp-0xac]
  421f86:	movzx  eax,WORD PTR [ecx+eax*2]
  421f8a:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f90:	mov    eax,DWORD PTR [ecx+eax*4]
  421f93:	mov    DWORD PTR [ebp-0xfc],eax
  421f99:	jmp    0x421fa3
  421f9e:	jmp    0x4219ce
  421fa3:	cmp    DWORD PTR [ebp-0xfc],0x0
  421faa:	jne    0x421fb7
  421fb0:	xor    eax,eax
  421fb2:	jmp    0x422230
  421fb7:	mov    eax,DWORD PTR [ebp+0x8]
  421fba:	add    eax,DWORD PTR [ebp-0xfc]
  421fc0:	mov    DWORD PTR [ebp-0xec],eax
  421fc6:	mov    DWORD PTR [ebp-0x74],0x0
  421fcd:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fd4:	je     0x422050
  421fda:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fe1:	je     0x422050
  421fe7:	mov    eax,DWORD PTR [ebp-0xb0]
  421fed:	shl    eax,0x2
  421ff0:	mov    DWORD PTR [ebp-0x74],eax
  421ff3:	mov    DWORD PTR [ebp-0x14c],0x0
  421ffd:	sub    esp,DWORD PTR [ebp-0x74]
  422000:	mov    DWORD PTR [ebp-0x14c],esp
  422006:	mov    DWORD PTR [ebp-0x148],0x0
  422010:	mov    eax,DWORD PTR [ebp-0x148]
  422016:	cmp    eax,DWORD PTR [ebp-0xb0]
  42201c:	je     0x422050
  422022:	mov    eax,DWORD PTR [ebp-0x148]
  422028:	mov    ecx,DWORD PTR [ebp-0x14c]
  42202e:	mov    edx,DWORD PTR [ebp-0x148]
  422034:	mov    esi,DWORD PTR [ebp+0x14]
  422037:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  42203b:	mov    DWORD PTR [ecx+eax*4],edx
  42203e:	mov    eax,DWORD PTR [ebp-0x148]
  422044:	inc    eax
  422045:	mov    DWORD PTR [ebp-0x148],eax
  42204b:	jmp    0x422010
  422050:	mov    DWORD PTR [ebp-0x9c],0x0
  42205a:	push   0x4221e9
  42205f:	jmp    DWORD PTR [ebp-0xec]
  422065:	mov    eax,eax
  422067:	mov    ecx,esp
  422069:	ret    0xc
  42206c:	cmp    DWORD PTR ds:0x4282ff,0x0
  422073:	mov    DWORD PTR ds:0x4282fb,0x7476
  42207d:	mov    DWORD PTR ds:0x428177,0x1cdc
  422087:	mov    DWORD PTR ds:0x4282fb,0x65fa
  422091:	mov    DWORD PTR ds:0x428167,0x5dca
  42209b:	jmp    0x4220e5
  4220a0:	mov    eax,ds:0x4282f7
  4220a5:	cmp    DWORD PTR ds:0x4282ff,0x0
  4220ac:	jbe    0x4220cd
  4220b2:	push   0x24f1
  4220b7:	call   DWORD PTR ds:0x428d78
  4220bd:	inc    DWORD PTR ds:0x4283a3
  4220c3:	sub    DWORD PTR ds:0x428183,0x46d9
  4220cd:	inc    DWORD PTR ds:0x4282ff
  4220d3:	adc    DWORD PTR ds:0x42830b,ebx
  4220d9:	or     DWORD PTR ds:0x428233,0x4029
  4220e3:	not    eax
  4220e5:	push   ebx
  4220e6:	push   esi
  4220e7:	sbb    DWORD PTR ds:0x42838f,edx
  4220ed:	mov    eax,DWORD PTR [esp+0x18]
  4220f1:	or     eax,eax
  4220f3:	jne    0x422123
  4220f9:	mov    ecx,DWORD PTR [esp+0x14]
  4220fd:	mov    eax,DWORD PTR [esp+0x10]
  422101:	xor    edx,edx
  422103:	div    ecx
  422105:	xor    DWORD PTR ds:0x42818f,0x45f1
  42210f:	mov    ebx,eax
  422111:	mov    eax,DWORD PTR [esp+0xc]
  422115:	div    ecx
  422117:	mov    edx,0x36e3
  42211c:	mov    edx,ebx
  42211e:	jmp    0x4221e4
  422123:	mov    ecx,eax
  422125:	sbb    eax,0x67a9
  42212a:	mov    ebx,DWORD PTR [esp+0x14]
  42212e:	cmp    DWORD PTR ds:0x4282f7,0x0
  422135:	mov    edx,DWORD PTR ds:0x4283a7
  42213b:	mov    DWORD PTR ds:0x428327,0x4bc7
  422145:	mov    edx,DWORD PTR ds:0x42830f
  42214b:	jmp    0x422195
  422150:	mov    DWORD PTR ds:0x428257,0x15f
  42215a:	mov    DWORD PTR ds:0x42828f,0x4dd1
  422164:	cmp    DWORD PTR ds:0x4282f7,0x0
  42216b:	jle    0x422188
  422171:	push   0x824e
  422176:	call   DWORD PTR ds:0x428d7c
  42217c:	xor    DWORD PTR ds:0x42830f,0x6c44
  422186:	sub    edx,edx
  422188:	sbb    DWORD PTR ds:0x428257,0x445e
  422192:	dec    edx
  422193:	not    edx
  422195:	mov    edx,DWORD PTR [esp+0x10]
  422199:	mov    eax,DWORD PTR [esp+0xc]
  42219d:	shr    ecx,1
  42219f:	rcr    ebx,1
  4221a1:	shr    edx,1
  4221a3:	rcr    eax,1
  4221a5:	or     ecx,ecx
  4221a7:	jne    0x42219d
  4221ad:	div    ebx
  4221af:	mov    esi,eax
  4221b1:	mul    DWORD PTR [esp+0x18]
  4221b5:	mov    ecx,eax
  4221b7:	mov    eax,DWORD PTR [esp+0x14]
  4221bb:	mul    esi
  4221bd:	add    edx,ecx
  4221bf:	jb     0x4221df
  4221c5:	cmp    edx,DWORD PTR [esp+0x10]
  4221c9:	ja     0x4221df
  4221cf:	jb     0x4221e0
  4221d5:	cmp    eax,DWORD PTR [esp+0xc]
  4221d9:	jbe    0x4221e0
  4221df:	dec    esi
  4221e0:	xor    edx,edx
  4221e2:	mov    eax,esi
  4221e4:	pop    esi
  4221e5:	pop    ebx
  4221e6:	ret    0x10
  4221e9:	or     DWORD PTR ds:0x428373,0x42837f
  4221f3:	sub    DWORD PTR [ebp+0x10],0x1
  4221f7:	mov    DWORD PTR ds:0x42817b,0x43bf
  422201:	cmp    DWORD PTR [ebp+0x10],0x0
  422205:	mov    DWORD PTR ds:0x42836b,0x612a
  42220f:	je     0x42221e
  422215:	xor    DWORD PTR ds:0x428167,edx
  42221b:	add    esp,DWORD PTR [ebp-0x74]
  42221e:	mov    DWORD PTR [ebp-0x9c],eax
  422224:	mov    DWORD PTR ds:0x42826f,ebx
  42222a:	mov    eax,DWORD PTR [ebp-0x9c]
  422230:	pop    edi
  422231:	pop    esi
  422232:	pop    ebx
  422233:	leave  
  422234:	ret    0x10
  422237:	cmp    cl,0x40
  42223a:	mov    DWORD PTR ds:0x428253,0x43a8
  422244:	jae    0x422296
  42224a:	mov    DWORD PTR ds:0x428187,0x42f2
  422254:	cmp    cl,0x20
  422257:	mov    DWORD PTR ds:0x42816f,0x3d58
  422261:	jae    0x422281
  422267:	or     DWORD PTR ds:0x428163,0x5e1e
  422271:	shld   edx,eax,cl
  422274:	mov    DWORD PTR ds:0x428287,0x1bd2
  42227e:	shl    eax,cl
  422280:	ret    
  422281:	inc    edx
  422282:	mov    edx,eax
  422284:	sub    DWORD PTR ds:0x4283a3,0x4282fb
  42228e:	xor    eax,eax
  422290:	and    cl,0x1f
  422293:	shl    edx,cl
  422295:	ret    
  422296:	xor    eax,eax
  422298:	xor    edx,edx
  42229a:	ret    
  42229b:	add    BYTE PTR [eax],al
  42229d:	add    BYTE PTR [eax],al
  42229f:	add    cl,ch
  4222a1:	cmp    ebp,DWORD PTR [ebx+0x14]
  4222a4:	cmp    al,0x26
  4222a6:	sub    al,0x44
  4222a8:	jno    0x422313
  4222aa:	ja     0x422311
  4222ac:	int3   
  4222ad:	fsubr  QWORD PTR [edx+0x1e]
  4222b0:	jo     0x422317
  4222b2:	popa   
  4222b3:	ins    BYTE PTR es:[edi],dx
  4222b4:	push   eax
  4222b5:	lods   eax,DWORD PTR ds:[esi]
  4222b6:	xor    DWORD PTR [esi+0x41],edi
  4222b9:	ins    BYTE PTR es:[edi],dx
  4222ba:	popa   
  4222bb:	outs   dx,BYTE PTR ds:[esi]
  4222bc:	add    BYTE PTR [eax],al
  4222be:	add    BYTE PTR [eax],al
  4222c0:	addr16 jb 0x422328
  4222c3:	popa   
  4222c4:	je     0x42232d
  4222c6:	jb     0x42232d
  4222c8:	popa   
  4222c9:	je     0x422332
  4222cb:	jb     0x422332
  4222cd:	popa   
  4222ce:	je     0x422337
  4222d0:	jb     0x422337
  4222d2:	popa   
  4222d3:	je     0x42233c
  4222d5:	jb     0x42233c
  4222d7:	popa   
  4222d8:	je     0x422341
  4222da:	jb     0x422341
  4222dc:	popa   
  4222dd:	je     0x422346
  4222df:	jb     0x422346
  4222e1:	popa   
  4222e2:	je     0x42234b
  4222e4:	jb     0x42234b
  4222e6:	popa   
  4222e7:	je     0x422350
  4222e9:	jb     0x422350
  4222eb:	popa   
  4222ec:	je     0x422355
  4222ee:	jb     0x422355
  4222f0:	popa   
  4222f1:	je     0x4222f3
  4222f3:	add    BYTE PTR [eax+0x65],ch
  4222f6:	ins    BYTE PTR es:[edi],dx
  4222f7:	ins    BYTE PTR es:[edi],dx
  4222f8:	push   0x686c6c65
  4222fd:	gs ins BYTE PTR es:[edi],dx
  4222ff:	ins    BYTE PTR es:[edi],dx
  422300:	push   0x686c6c65
  422305:	gs ins BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	push   0x686c6c65
  42230d:	gs ins BYTE PTR es:[edi],dx
  42230f:	ins    BYTE PTR es:[edi],dx
  422310:	push   0x686c6c65
  422315:	gs ins BYTE PTR es:[edi],dx
  422317:	ins    BYTE PTR es:[edi],dx
  422318:	push   0x686c6c65
  42231d:	gs ins BYTE PTR es:[edi],dx
  42231f:	ins    BYTE PTR es:[edi],dx
  422320:	push   0x686c6c65
  422325:	gs ins BYTE PTR es:[edi],dx
  422327:	ins    BYTE PTR es:[edi],dx
  422328:	add    BYTE PTR [eax],al
  42232a:	add    BYTE PTR [eax],al
  42232c:	outs   dx,DWORD PTR ds:[esi]
  42232d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422331:	add    BYTE PTR [ecx+0x0],ah
  422334:	jne    0x422336
  422336:	je     0x422338
  422338:	xor    eax,DWORD PTR [eax]
  42233a:	xor    al,BYTE PTR [eax]
  42233c:	add    BYTE PTR [eax],al
  42233e:	add    BYTE PTR [eax],al
  422340:	push   0x61006500
  422345:	add    BYTE PTR [esi+0x0],dh
  422348:	add    BYTE PTR gs:[esi+0x0],ch
  42234c:	push   0x61006500
  422351:	add    BYTE PTR [esi+0x0],dh
  422354:	add    BYTE PTR gs:[esi+0x0],ch
  422358:	push   0x61006500
  42235d:	add    BYTE PTR [esi+0x0],dh
  422360:	add    BYTE PTR gs:[esi+0x0],ch
  422364:	push   0x61006500
  422369:	add    BYTE PTR [esi+0x0],dh
  42236c:	add    BYTE PTR gs:[esi+0x0],ch
  422370:	push   0x61006500
  422375:	add    BYTE PTR [esi+0x0],dh
  422378:	add    BYTE PTR gs:[esi+0x0],ch
  42237c:	push   0x61006500
  422381:	add    BYTE PTR [esi+0x0],dh
  422384:	add    BYTE PTR gs:[esi+0x0],ch
  422388:	push   0x61006500
  42238d:	add    BYTE PTR [esi+0x0],dh
  422390:	add    BYTE PTR gs:[esi+0x0],ch
  422394:	push   0x61006500
  422399:	add    BYTE PTR [esi+0x0],dh
  42239c:	add    BYTE PTR gs:[esi+0x0],ch
  4223a0:	push   0x61006500
  4223a5:	add    BYTE PTR [esi+0x0],dh
  4223a8:	add    BYTE PTR gs:[esi+0x0],ch
  4223ac:	add    BYTE PTR [eax],al
  4223ae:	add    BYTE PTR [eax],al
  4223b0:	sub    al,0x23
  4223b2:	inc    edx
  4223b3:	add    BYTE PTR [edi+0x6c],cl
  4223b6:	gs dec ecx
  4223b8:	arpl   WORD PTR [edi+0x6e],bp
  4223bb:	push   esp
  4223bc:	outs   dx,DWORD PTR ds:[esi]
  4223bd:	inc    ebx
  4223be:	jne    0x422432
  4223c0:	jae    0x422431
  4223c2:	jb     0x4223c4
  4223c4:	mov    ah,0x23
  4223c6:	inc    edx
	...
  4223cf:	add    BYTE PTR [eax+0x27],dh
  4223d2:	inc    edx
  4223d3:	add    BYTE PTR [eax+0x27],bh
  4223d6:	inc    edx
  4223d7:	add    BYTE PTR [eax],dh
  4223d9:	es inc edx
  4223db:	add    dl,dh
  4223dd:	inc    ebx
  4223de:	push   ebx
  4223df:	mov    WORD PTR ds:0x1a49ba4,ss
  4223e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e6:	popf   
  4223e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e8:	jno    0x42238e
  4223ea:	xchg   edi,eax
  4223eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223ec:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  4223f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f4:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422402:	adc    eax,0x1a49ba4
  422407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422408:	popf   
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	jno    0x4223b0
  42240c:	xchg   edi,eax
  42240d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422416:	xor    eax,0x9ba485a4
  42241b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241c:	mov    ebx,0xd1e2d3a4
  422421:	in     al,dx
  422422:	xchg   ebp,eax
  422423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422424:	adc    eax,0x3ba49ba4
  422429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242a:	popf   
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	fwait
  422435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422436:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42243d:	sub    al,0xf7
  42243f:	cs pop ss
  422441:	push   cs
  422442:	adc    eax,0x3a49108
  422447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422448:	fwait
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422452:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	shl    DWORD PTR [edx],cl
  42245c:	shr    DWORD PTR [ecx+esi*8],1
  42245f:	or     al,0xf7
  422461:	push   cs
  422462:	pop    ss
  422463:	outs   dx,BYTE PTR ds:[esi]
  422464:	adc    eax,0x3a49168
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	fwait
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	xor    eax,0x9ba48da4
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422482:	imul   DWORD PTR [esi+0x17]
  422485:	dec    esi
  422486:	adc    eax,0x37a49148
  42248b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248c:	fwait
  42248d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248e:	jae    0x422434
  422490:	popf   
  422491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422492:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  422499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249a:	fwait
  42249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249c:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224a4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ac:	aaa    
  4224ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ae:	fwait
  4224af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b0:	jae    0x422456
  4224b2:	popf   
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	pop    ss
  4224b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b6:	xchg   ebp,eax
  4224b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b8:	push   ecx
  4224b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ba:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224c1:	inc    edx
  4224c2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224c6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224cc:	xchg   ecx,eax
  4224cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ce:	aaa    
  4224cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d0:	fwait
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	jae    0x422478
  4224d4:	popf   
  4224d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	fwait
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224e7:	mov    esi,?
  4224e9:	mov    ss,WORD PTR [esi]
  4224eb:	out    dx,al
  4224ec:	adc    al,0xe8
  4224ee:	xchg   ecx,eax
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	aaa    
  4224f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f2:	fwait
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	jae    0x42249a
  4224f6:	popf   
  4224f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f8:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	fwait
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42250a:	imul   dh
  42250c:	push   ss
  42250d:	into   
  42250e:	adc    al,0xc8
  422510:	xchg   ecx,eax
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	cmp    eax,0x51a49ba4
  422517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422518:	popf   
  422519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251a:	jnp    0x4224c0
  42251c:	xchg   ebx,eax
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	fwait
  42251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422520:	xchg   ecx,eax
  422521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422522:	shl    dl,cl
  422524:	shr    ah,1
  422526:	lock int3 
  422528:	test   dh,0x16
  42252b:	cs adc al,0x28
  42252e:	push   ss
  42252f:	push   cs
  422530:	adc    al,0x8
  422532:	xchg   ebx,eax
  422533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422534:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42253b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42253c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422544:	fwait
  422545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422546:	lea    esp,[edx+edx*8-0xfd32fde]
  42254d:	or     al,0xf6
  42254f:	push   cs
  422550:	push   ss
  422551:	outs   dx,BYTE PTR ds:[esi]
  422552:	adc    al,0x68
  422554:	xchg   ecx,eax
  422555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422556:	add    BYTE PTR [eax],al
  422558:	loopne 0x42257d
  42255a:	inc    edx
  42255b:	add    ah,ch
  42255d:	and    eax,0x25f40042
  422562:	inc    edx
  422563:	add    BYTE PTR [edi+eiz*1+0x42],bh
  422567:	add    al,bl
  422569:	and    eax,DWORD PTR [edx+0x0]
  42256c:	clc    
  42256d:	and    eax,0x7c5a0042
  422572:	inc    edx
  422573:	add    dl,dl
  422575:	jle    0x4225b9
  422577:	add    al,ch
  422579:	es inc edx
  42257b:	add    BYTE PTR [edi+eiz*1+0x42],ch
  42257f:	add    ah,dl
  422581:	and    eax,0x25d80042
  422586:	inc    edx
  422587:	add    BYTE PTR [eax+0x27],ch
  42258a:	inc    edx
  42258b:	add    BYTE PTR [esi+eiz*1],bh
  42258e:	inc    edx
  42258f:	add    BYTE PTR [edx-0x35],cl
  422592:	push   es
  422593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422594:	scas   al,BYTE PTR es:[edi]
  422595:	or     al,0x6
  422597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422598:	lock and eax,0x26a00042
  42259e:	inc    edx
  42259f:	add    BYTE PTR [esi+eiz*1+0x26c00042],dh
  4225a6:	inc    edx
  4225a7:	add    al,dl
  4225a9:	es inc edx
  4225ab:	add    BYTE PTR [eax],ch
  4225ad:	es inc edx
  4225af:	add    ah,bl
  4225b1:	and    eax,DWORD PTR [edx+0x0]
  4225b4:	dec    eax
  4225b5:	es inc edx
  4225b7:	add    BYTE PTR [eax],bh
  4225b9:	es inc edx
  4225bb:	add    BYTE PTR [eax-0x51ffbdd9],al
  4225c1:	call   0xbde7:0x4338a406
  4225c8:	pop    eax
  4225c9:	es inc edx
  4225cb:	add    BYTE PTR [eax+0x26],ah
  4225ce:	inc    edx
  4225cf:	add    ah,bh
  4225d1:	and    eax,0x87240042
  4225d6:	loopne 0x422595
  4225d8:	jbe    0x422655
  4225da:	pop    ds
  4225db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225dc:	add    BYTE PTR [eax],al
  4225de:	inc    eax
  4225df:	add    dl,ch
  4225e1:	rcl    dl,cl
  4225e3:	pop    ecx
  4225e4:	iret   
  4225e5:	jle    0x422629
  4225e7:	add    bl,bl
  4225e9:	outs   dx,DWORD PTR fs:[esi]
  4225eb:	arpl   WORD PTR [edi+0xf],si
  4225ee:	pop    ebx
  4225ef:	xor    DWORD PTR [esi-0x5],esi
  4225f2:	(bad)  
  4225f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225f4:	mov    dl,0xc
  4225f6:	xchg   ebx,eax
  4225f7:	test   al,0xe4
  4225f9:	and    eax,0xdaaa0042
  4225fe:	push   es
  4225ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422600:	stos   BYTE PTR es:[edi],al
  422601:	fiadd  WORD PTR [esi]
  422603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422605:	fiadd  DWORD PTR [esi]
  422607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422608:	mov    ds:0xbea406da,al
  42260d:	fiadd  DWORD PTR [esi]
  42260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422610:	mov    edx,0xb6a406da
  422615:	fiadd  DWORD PTR [esi]
  422617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422618:	mov    dl,0xda
  42261a:	push   es
  42261b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42261c:	mov    ds,edx
  42261e:	push   es
  42261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422620:	mov    bl,dl
  422622:	push   es
  422623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422624:	out    dx,al
  422625:	fiadd  DWORD PTR [esi]
  422627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422628:	dec    DWORD PTR [ebx]
  42262a:	adc    edi,DWORD PTR [edx]
  42262c:	aam    0x23
  42262e:	inc    edx
  42262f:	add    ch,al
  422631:	sub    BYTE PTR [edx+0x0],al
  422634:	pop    ss
  422635:	loop   0x4225c0
  422637:	js     0x4225e7
  422639:	call   0xa4d7:0xcb3aa406
  422640:	and    al,0x75
  422642:	add    BYTE PTR [eax],al
  422644:	shl    BYTE PTR [ebx],1
  422646:	inc    edx
  422647:	add    BYTE PTR [edx],ah
  422649:	inc    ebx
  42264a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422658:	hlt    
  422659:	clc    
  42265a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422660:	sub    eax,DWORD PTR [edi+0x1f]
  422663:	jle    0x422665
	...
  422689:	add    BYTE PTR [eax],al
  42268b:	add    BYTE PTR [edx+0x7c],bl
  42268e:	inc    edx
	...
  42269b:	add    cl,bh
  42269d:	jmp    0xa48f26e3
  4226a2:	push   ecx
  4226a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a4:	jg     0x42264a
  4226a6:	inc    edi
  4226a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a8:	push   ecx
  4226a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226aa:	inc    ebx
  4226ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ac:	std    
  4226ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ae:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b6:	push   ebx
  4226b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b8:	dec    ecx
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	std    
  4226bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226bc:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c4:	push   ecx
  4226c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c6:	jg     0x42266c
  4226c8:	std    
  4226c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ca:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d2:	dec    ebx
  4226d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d4:	inc    ebx
  4226d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d6:	jne    0x42267c
  4226d8:	pop    ecx
  4226d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226da:	jnp    0x422680
  4226dc:	dec    ecx
  4226dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226de:	fwait
  4226df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226e8:	xor    eax,eax
  4226ea:	xor    esp,DWORD PTR [eax]
  4226ec:	xor    eax,DWORD PTR [eax]
  4226ee:	xor    esp,DWORD PTR [eax+0x33]
  4226f1:	inc    eax
  4226f2:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  4226f8:	xor    al,al
  4226fa:	xor    ah,BYTE PTR [eax]
  4226fc:	xor    al,BYTE PTR [eax]
  4226fe:	xor    ah,BYTE PTR [eax+0x32]
  422701:	inc    eax
  422702:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422708:	xor    ecx,esp
  42270a:	xor    ecx,esi
  42270c:	xor    ecx,eax
  42270e:	xor    ecx,edx
  422710:	xor    edx,esp
  422712:	xor    edx,esi
  422714:	xor    edx,eax
  422716:	xor    edx,edx
  422718:	xor    ebx,esp
  42271a:	xor    ebx,esi
  42271c:	xor    ebx,eax
  42271e:	xor    ebx,edx
  422720:	xor    eax,esi
  422722:	push   ebx
  422723:	shl    BYTE PTR [ebx-0x40],0x93
  422727:	rcl    DWORD PTR [esi-0x56],0x15
  42272b:	into   
  42272c:	xchg   ebp,eax
  42272d:	dec    ecx
  42272e:	xor    ecx,esp
  422730:	sbb    eax,0x50abaae2
  422735:	push   0x1e
  422737:	cs je  0x42274e
  42273a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422740:	imul   edi,edx,0xffffffd5
  422743:	leave  
  422744:	daa    
  422745:	dec    eax
  422746:	out    dx,eax
  422747:	pushf  
  422748:	mov    dh,0xdf
  42274a:	dec    esi
  42274b:	xchg   ebp,eax
  42274c:	lock xor DWORD PTR [esi-0x6c],ebp
  422750:	inc    ebp
  422751:	or     eax,0xc1470876
  422756:	js     0x422713
  422758:	popa   
  422759:	pop    ecx
  42275a:	jecxz  0x4227c7
  42275c:	mov    BYTE PTR [edx-0x56],0x5
  422760:	cs enter 0xaa46,0x44
  422765:	aas    
  422766:	inc    ebp
  422767:	leave  
  422768:	test   BYTE PTR [ebx+0x819a593],0xd8
  42276f:	jl     0x4227d9
  422771:	mov    es,WORD PTR [edx+0x0]
  422774:	jb     0x4227d0
  422776:	pop    ss
  422777:	sub    ebx,esp
  422779:	and    eax,0x26400042
  42277e:	inc    edx
  42277f:	add    BYTE PTR [esi-0x5],dh
  422782:	fbld   TBYTE PTR [ebp+0x0]
	...
  422790:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  422796:	popa   
  422797:	arpl   WORD PTR [edi+0x7a],bp
  42279a:	popa   
  42279b:	outs   dx,DWORD PTR ds:[si]
  42279d:	gs ins DWORD PTR es:[edi],dx
  42279f:	jae    0x4227e3
  4227a1:	outs   dx,DWORD PTR ds:[esi]
  4227a2:	ins    BYTE PTR es:[edi],dx
  4227a3:	gs mov cl,0x65
  4227a6:	in     eax,dx
  4227a7:	jg     0x4227e2
  4227a9:	ja     0x422814
  4227ab:	jp     0x4227a0
  4227ad:	inc    esp
  4227ae:	push   0x1b
  4227b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b1:	push   ecx
  4227b2:	dec    esp
  4227b3:	gs jb  0x42282f
  4227b6:	popa   
  4227b7:	push   ebx
  4227b8:	jne    0x42282b
  4227ba:	jae    0x42281d
  4227bc:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227c3:	inc    esp
  4227c4:	(bad)  [edx+0x65]
  4227c7:	jae    0x42281f
  4227c9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227d0:	jb     0x422834
  4227d2:	gs je  0x4227a8
  4227d5:	lds    edx,FWORD PTR [eax-0x68]
  4227d8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227dc:	fs jne 0x42284e
  4227df:	push   eax
  4227e0:	gs fs jae 0x422851
  4227e4:	popa   
  4227e5:	ins    DWORD PTR es:[edi],dx
  4227e6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  4227f9:	add    BYTE PTR [eax],al
  4227fb:	add    BYTE PTR [esp+ecx*4],ch
  4227fe:	push   ss
  4227ff:	mov    esi,0x6f4c8773
  422804:	jb     0x422874
  422806:	jno    0x422871
  422808:	or     al,0x36
  42280a:	lods   al,BYTE PTR ds:[esi]
  42280b:	repnz push edx
  42280d:	je     0x42287e
  42280f:	je     0x422855
  422811:	js     0x4227cf
  422813:	cmc    
  422814:	outs   dx,DWORD PTR ds:[esi]
  422815:	ins    DWORD PTR es:[edi],dx
  422816:	popa   
  422817:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42281e:	popa   
  42281f:	jb     0x422896
  422821:	push   0x68736f79
  422826:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42282d:	mov    ch,0xa5
  42282f:	jns    0x4228a4
  422831:	outs   dx,DWORD PTR ds:[esi]
  422832:	addr16 popa 
  422834:	add    BYTE PTR [bp+si],bh
  422837:	sub    bh,cl
  422839:	icebp  
  42283a:	gs ins BYTE PTR es:[edi],dx
  42283c:	jae    0x422886
  42283e:	popa   
  42283f:	je     0x4228a9
  422841:	ins    DWORD PTR es:[edi],dx
  422842:	add    BYTE PTR gs:[bx+si],al
  422846:	in     al,dx
  422847:	mov    ecx,0x414ad1d2
  42284c:	ins    DWORD PTR es:[edi],dx
  42284d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422854:	gs ins DWORD PTR es:[edi],dx
  422856:	add    BYTE PTR [eax],al
  422858:	jne    0x42286a
  42285a:	popa   
  42285b:	or     BYTE PTR [esi+0x73654dbb],al
  422861:	popa   
  422862:	push   0x78000061
  422867:	loope  0x4228ab
  422869:	stos   BYTE PTR es:[edi],al
  42286a:	je     0x4228cd
  42286c:	push   edi
  42286d:	popa   
  42286e:	jb     0x4228db
  422870:	jae    0x4228dd
  422872:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422879:	loope  0x422847
  42287b:	aad    0x6f
  42287d:	jb     0x4228eb
  42287f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422886:	je     0x42289b
  422888:	adc    al,BYTE PTR [ebp+0x77646172]
  42288e:	outs   dx,DWORD PTR ds:[esi]
  42288f:	gs ins DWORD PTR es:[edi],dx
  422891:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  422898:	outs   dx,BYTE PTR ds:[esi]
  422899:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228a0:	ja     0x422906
  4228a2:	outs   dx,DWORD PTR ds:[esi]
  4228a3:	popa   
  4228a4:	outs   dx,BYTE PTR ds:[esi]
  4228a5:	gs jae 0x42290a
  4228a8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228af:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228b7:	inc    ebx
  4228b8:	jb     0x422873
  4228ba:	sbb    al,0xd9
  4228bc:	jo     0x422927
  4228be:	addr16 js 0x422936
  4228c1:	jo     0x422938
  4228c3:	fs add ch,cl
  4228c6:	xchg   esi,eax
  4228c7:	in     eax,dx
  4228c8:	jno    0x42293b
  4228ca:	iret   
  4228cb:	jbe    0x4228c6
  4228cd:	or     dh,BYTE PTR [esi-0x3]
  4228d0:	cwde   
  4228d1:	int    0xd6
  4228d3:	std    
  4228d4:	pop    ebp
  4228d5:	fsubr  DWORD PTR [edi]
  4228d7:	dec    edx
  4228d8:	xor    eax,0xd6cd860a
  4228dd:	stc    
  4228de:	inc    ebx
  4228df:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228e5:	dec    edx
  4228e6:	sbb    BYTE PTR [ecx+0x52],bh
  4228e9:	mov    ch,al
  4228eb:	jns    0x42293f
  4228ed:	dec    edx
  4228ee:	sbb    BYTE PTR [ecx+0x6e],bh
  4228f1:	xchg   edx,eax
  4228f2:	cmp    eax,0xcd96c5cb
  4228f7:	in     eax,dx
  4228f8:	jno    0x42296b
  4228fa:	iret   
  4228fb:	jbe    0x4228f6
  4228fd:	or     dh,BYTE PTR [esi-0x3]
  422900:	int    0x96
  422902:	std    
  422903:	pop    ebp
  422904:	jns    0x422951
  422906:	pop    edx
  422907:	xor    eax,0x96cd920a
  42290c:	stc    
  42290d:	inc    ebx
  42290e:	icebp  
  42290f:	(bad)  
  422910:	das    
  422911:	int    0x76
  422913:	mov    BYTE PTR [ecx+0x6e],bh
  422916:	mov    DWORD PTR [edx-0x13749387],esi
  42291c:	jns    0x42298c
  42291e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422924:	retf   
  422925:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42292c:	jno    0x4228fd
  42292e:	jbe    0x422929
  422930:	or     dh,BYTE PTR [esi-0x3]
  422933:	int    0x96
  422935:	std    
  422936:	pop    ebp
  422937:	fdiv   DWORD PTR [ebx-0x6df55465]
  42293d:	int    0x96
  42293f:	stc    
  422940:	inc    ebx
  422941:	icebp  
  422942:	(bad)  
  422943:	test   BYTE PTR [ecx+0x6e],bh
  422946:	mov    ebp,esp
  422948:	int    0x76
  42294a:	mov    BYTE PTR [ecx+0x6e],bh
  42294d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422954:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42295b:	jno    0x42292c
  42295d:	jbe    0x422958
  42295f:	or     dh,BYTE PTR [esi-0x3]
  422962:	cwde   
  422963:	int    0xd6
  422965:	std    
  422966:	pop    ebp
  422967:	ret    0x2be4
  42296a:	cmp    DWORD PTR [edx],ecx
  42296c:	xchg   ch,cl
  42296e:	(bad)  
  42296f:	stc    
  422970:	inc    ebx
  422971:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422977:	test   BYTE PTR [ebx-0x78913648],ch
  42297d:	ret    0x79ab
  422980:	xchg   edx,eax
  422981:	aad    0xcb
  422983:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422989:	iret   
  42298a:	jbe    0x422985
  42298c:	or     dh,BYTE PTR [esi-0x3]
  42298f:	int    0x96
  422991:	std    
  422992:	pop    ebp
  422993:	pop    ecx
  422994:	ins    BYTE PTR es:[edi],dx
  422995:	cmp    dh,BYTE PTR ds:0x96cd920a
  42299b:	stc    
  42299c:	inc    ebx
  42299d:	icebp  
  42299e:	(bad)  
  42299f:	push   ebx
  4229a0:	int    0x76
  4229a2:	mov    BYTE PTR [ecx+0x6e],bh
  4229a5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229ab:	jns    0x422a1b
  4229ad:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229b3:	call   0xcded:0xcd965b98
  4229ba:	jbe    0x4229f0
  4229bc:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229c3:	sbb    al,0x81
  4229c5:	(bad)  
  4229c6:	and    al,0x98
  4229c8:	int    0xd6
  4229ca:	adc    al,0x47
  4229cc:	mov    ds:0xff8eca62,al
  4229d1:	add    al,0x7d
  4229d3:	add    ch,dl
  4229d5:	lods   eax,DWORD PTR ds:[esi]
  4229d6:	clc    
  4229d7:	icebp  
  4229d8:	jo     0x4229a4
  4229da:	(bad)  
  4229dc:	jge    0x4229de
  4229de:	aad    0xad
  4229e0:	clc    
  4229e1:	icebp  
  4229e2:	jo     0x422976
  4229e4:	adc    ecx,ebp
  4229e6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229ed:	jo     0x422a5f
  4229ef:	jo     0x422a61
  4229f1:	jo     0x42298d
  4229f3:	xor    esi,edi
  4229f5:	cwde   
  4229f6:	add    al,0xc
  4229f8:	add    BYTE PTR [ebp-0x80],bl
  4229fb:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a01:	or     DWORD PTR [eax-0x75],ebx
  422a04:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a0b:	jecxz  0x4229f8
  422a0d:	hlt    
  422a0e:	scas   eax,DWORD PTR es:[edi]
  422a0f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a16:	sub    dl,0xfa
  422a19:	iret   
  422a1a:	pop    eax
  422a1b:	iret   
  422a1c:	push   0xffffffcd
  422a1e:	out    0xfd,al
  422a20:	int    0x76
  422a22:	adc    DWORD PTR [ebx],esi
  422a24:	out    0x34,al
  422a26:	sub    ecx,ecx
  422a28:	or     dh,BYTE PTR [esi-0x43]
  422a2b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a31:	sub    BYTE PTR [edi],0x6
  422a34:	sub    DWORD PTR [eax-0x72357f80],eax
  422a3a:	cmc    
  422a3b:	sub    esp,esi
  422a3d:	in     eax,dx
  422a3e:	aad    0xe9
  422a40:	add    ebx,ebp
  422a42:	mov    bh,dh
  422a44:	fcmovnbe st,st(5)
  422a46:	out    dx,eax
  422a47:	pushf  
  422a48:	xchg   edi,edi
  422a4a:	test   al,0xcf
  422a4c:	fs adc ebx,0xffffffe9
  422a50:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a54:	iret   
  422a55:	int3   
  422a56:	call   0x80c2791f
  422a5b:	jno    0x4229f5
  422a5d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a67:	int    0xe6
  422a69:	std    
  422a6a:	xor    esp,esi
  422a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a6d:	das    
  422a6e:	pop    ecx
  422a6f:	push   0xffffffcd
  422a71:	(bad)  
  422a72:	or     eax,0xfcde9e3
  422a77:	sub    edi,eax
  422a79:	xchg   DWORD PTR [edi],ecx
  422a7b:	iret   
  422a7c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a82:	add    BYTE PTR [eax-0x102c8233],0x88
  422a89:	add    al,0xf2
  422a8b:	add    DWORD PTR [ebx+0x2],0x80818069
  422a92:	adc    dh,0x4e
  422a95:	inc    ebx
  422a96:	jns    0x422a1a
  422a98:	fldlg2 
  422a9a:	es int 0xc6
  422a9d:	or     eax,0x809221bd
  422aa2:	add    al,0x81
  422aa5:	mov    al,ds:0xfb87d287
  422aaa:	add    al,0xbd
  422aac:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422ab3:	jns    0x422a82
  422ab5:	ins    DWORD PTR es:[edi],dx
  422ab6:	and    ch,0xa0
  422ab9:	push   edx
  422aba:	add    al,0x3
  422abc:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422ac2:	push   edx
  422ac3:	add    al,0x3
  422ac5:	push   ebx
  422ac6:	mov    al,cl
  422ac8:	test   bh,bh
  422aca:	retf   
  422acb:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ad3:	(bad)  
  422ad4:	in     al,dx
  422ad5:	outs   dx,DWORD PTR ds:[esi]
  422ad6:	rcl    bl,1
  422ad8:	(bad)  
  422ad9:	jge    0x422a98
  422adb:	outs   dx,DWORD PTR ds:[esi]
  422adc:	xchg   edx,eax
  422add:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422ae4:	sahf   
  422ae5:	mov    al,ds:0x3454009e
  422aea:	jno    0x422b4e
  422aec:	popa   
  422aed:	mov    ah,0x86
  422aef:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422af6:	push   cs
  422af7:	(bad)  
  422af8:	jge    0x422ab7
  422afa:	push   eax
  422afb:	xchg   edx,eax
  422afc:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b03:	jge    0x422ac2
  422b05:	push   ss
  422b06:	xchg   edx,eax
  422b07:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b0e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b14:	jo     0x422ae3
  422b16:	(bad)  
  422b17:	std    
  422b18:	xor    edx,esi
  422b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b1b:	inc    ebx
  422b1c:	(bad)  
  422b1d:	xor    al,0x2f
  422b1f:	or     esp,ebx
  422b21:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b2b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b35:	int    0xd6
  422b37:	popf   
  422b38:	aam    0x23
  422b3a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b40:	or     ch,0xd6
  422b43:	xchg   ebp,eax
  422b44:	aam    0x89
  422b46:	int    0xd6
  422b48:	icebp  
  422b49:	int    0x8d
  422b4b:	xchg   ebp,eax
  422b4c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b52:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b58:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b5e:	pushf  
  422b5f:	stos   BYTE PTR es:[edi],al
  422b60:	sahf   
  422b61:	popa   
  422b62:	mov    esp,0xc180804a
  422b67:	mov    BYTE PTR [edi+0x649a62d9],al
  422b6d:	mov    ecx,edx
  422b6f:	rol    DWORD PTR [edx+0x70878492],cl
  422b75:	int    0xc6
  422b77:	or     eax,0x808169bd
  422b7c:	adc    dh,0x14
  422b7f:	int    0x76
  422b81:	mov    ebp,0xd30de6cd
  422b86:	lods   eax,DWORD PTR ds:[esi]
  422b87:	xchg   DWORD PTR [ebx],esi
  422b89:	retf   
  422b8a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422b91:	in     al,dx
  422b92:	push   esi
  422b93:	int    0xc6
  422b95:	or     eax,0xbd92c704
  422b9a:	daa    
  422b9b:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422ba5:	or     eax,0xc087add3
  422baa:	mov    BYTE PTR [esi-0x30577740],bl
  422bb0:	gs jp  0x422b37
  422bb3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bbd:	xchg   esi,esp
  422bbf:	or     eax,0x699e30c0
  422bc4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bcb:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bce:	int    0x10
  422bd0:	mov    ebp,0x808081bc
  422bd5:	int    0x7d
  422bd7:	xor    ecx,DWORD PTR [edi]
  422bd9:	xor    ah,0x81
  422bdc:	lea    esi,[ebp-0x7b8a19fc]
  422be2:	das    
  422be3:	add    al,0xd0
  422be5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bec:	int    0x8d
  422bee:	mov    ch,0x4
  422bf0:	cli    
  422bf1:	test   BYTE PTR [edx-0x61783f79],al
  422bf7:	int    0xe6
  422bf9:	jge    0x422bce
  422bfb:	xacquire xchg BYTE PTR [ebx],dh
  422bfe:	ins    DWORD PTR es:[edi],dx
  422bff:	ins    BYTE PTR es:[edi],dx
  422c00:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c05:	outs   dx,DWORD PTR ds:[esi]
  422c06:	lods   al,BYTE PTR ds:[esi]
  422c07:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c0d:	inc    esp
  422c0e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c18:	lea    edi,[ebp+0x4a58d0a]
  422c1e:	cli    
  422c1f:	test   BYTE PTR [edx+0x402cd77],al
  422c25:	mov    dh,0xa5
  422c27:	and    ebx,0xa58d04ef
  422c2d:	xchg   edx,eax
  422c2e:	mov    es,WORD PTR [edx+edi*8]
  422c31:	dec    esi
  422c32:	ja     0x422c52
  422c34:	pop    ebp
  422c35:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c3b:	int    0xf
  422c3d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c43:	jecxz  0x422bf2
  422c45:	xchg   DWORD PTR [esi+0x7d],esi
  422c48:	or     dh,BYTE PTR [esi+0xd]
  422c4b:	in     al,dx
  422c4c:	inc    esi
  422c4d:	add    al,0xef
  422c4f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c55:	jecxz  0x422c43
  422c57:	jecxz  0x422c0f
  422c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c5a:	pop    esi
  422c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5c:	lods   eax,DWORD PTR ds:[esi]
  422c5d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c64:	lods   eax,DWORD PTR ds:[esi]
  422c65:	mov    ss,esi
  422c67:	mov    ebp,0x8086745d
  422c6c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c73:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c79:	test   al,0x33
  422c7b:	add    BYTE PTR [edx-0x33],bh
  422c7e:	leave  
  422c7f:	int    0xc6
  422c81:	or     eax,0x808059bd
  422c86:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c8e:	jecxz  0x422c79
  422c90:	mov    ss,esi
  422c92:	in     eax,dx
  422c93:	in     al,dx
  422c94:	add    BYTE PTR [eax],0x76
  422c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c98:	int    0x8d
  422c9a:	mov    ch,0x4
  422c9c:	rcl    DWORD PTR [edx-0x32021933],cl
  422ca2:	leave  
  422ca3:	xor    esi,DWORD PTR [esi+0x34]
  422ca6:	pop    esi
  422ca7:	jbe    0x422c4e
  422ca9:	jnp    0x422c35
  422cab:	int    0xf8
  422cad:	xor    edx,esi
  422caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cb0:	int    0x96
  422cb2:	cmp    al,0x45
  422cb4:	inc    ecx
  422cb5:	inc    ebx
  422cb6:	add    esi,DWORD PTR [edi-0x79]
  422cb9:	jle    0x422c91
  422cbb:	clc    
  422cbc:	or     ah,dh
  422cbe:	std    
  422cbf:	das    
  422cc0:	pop    ecx
  422cc1:	adc    DWORD PTR [ebx-0x1a],eax
  422cc4:	cmp    al,0x2f
  422cc6:	or     esp,DWORD PTR [edx-0x2]
  422cc9:	add    BYTE PTR [eax],al
  422ccb:	mov    ebp,0x80808040
  422cd0:	xor    ebp,DWORD PTR [ebp-0x31]
  422cd3:	les    esi,FWORD PTR [esp+eiz*2]
  422cd6:	int    0x96
  422cd8:	sub    al,0xcd
  422cda:	(bad)  
  422cdb:	stc    
  422cdc:	xor    edx,esi
  422cde:	sbb    al,0xa
  422ce0:	inc    edx
  422ce1:	int    0x96
  422ce3:	inc    esp
  422ce4:	int    0xe6
  422ce6:	std    
  422ce7:	xor    esp,esi
  422ce9:	xor    al,0xa
  422ceb:	pusha  
  422cec:	retf   
  422ced:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422cf3:	test   al,0x9c
  422cf5:	xor    ebp,DWORD PTR [ebp+0x6c]
  422cf8:	in     al,dx
  422cf9:	popf   
  422cfa:	adc    bh,ah
  422cfc:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d03:	shl    ebp,cl
  422d05:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d0b:	(bad)  
  422d0c:	and    al,0x77
  422d0e:	mov    ch,0xcd
  422d10:	jbe    0x422cbf
  422d12:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d18:	lods   eax,DWORD PTR ds:[esi]
  422d19:	or     dl,dh
  422d1b:	stc    
  422d1c:	test   al,0xc5
  422d1e:	int    0x8d
  422d20:	jne    0x422d51
  422d22:	pop    ecx
  422d23:	ins    DWORD PTR es:[edi],dx
  422d24:	shl    edx,cl
  422d26:	test   BYTE PTR [edi-0x2c78428a],al
  422d2c:	in     al,dx
  422d2d:	xchg   BYTE PTR [edi],ch
  422d2f:	pop    ecx
  422d30:	ins    DWORD PTR es:[edi],dx
  422d31:	xchg   DWORD PTR [esi+0x75],esi
  422d34:	int    0xc6
  422d36:	jge    0x422d07
  422d38:	les    esi,FWORD PTR [esi-0x80]
  422d3b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d3e:	les    esi,FWORD PTR [esi-0x80]
  422d41:	adc    bh,ah
  422d43:	add    BYTE PTR [eax+0x24778180],0xcd
  422d4a:	mov    WORD PTR [esp+ebx*2],?
  422d4d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d54:	xor    al,0xa4
  422d56:	ja     0x422d7d
  422d58:	retf   0x31
  422d5b:	je     0x422d91
  422d5d:	pop    esp
  422d5e:	shl    ebp,cl
  422d60:	mov    BYTE PTR [ecx],cl
  422d62:	xchg   esp,eax
  422d63:	xor    al,0x2c
  422d65:	int    0xc
  422d67:	das    
  422d68:	mov    ebx,0xebd38096
  422d6d:	push   ebx
  422d6e:	das    
  422d6f:	rcl    DWORD PTR [ebx],1
  422d71:	pop    esi
  422d72:	mov    WORD PTR [esp+ebp*1],?
  422d75:	ja     0x422d91
  422d77:	int    0xdb
  422d79:	pop    edi
  422d7a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d81:	jmp    0x422d08
  422d83:	mov    eax,0x87808d81
  422d88:	ins    DWORD PTR es:[edi],dx
  422d89:	iret   
  422d8a:	les    esi,FWORD PTR [esp+ebp*2]
  422d8d:	(bad)
  422d90:	test   DWORD PTR [esi],edi
  422d92:	mov    WORD PTR [esp+ebp*1],?
  422d95:	xor    ebx,ebx
  422d97:	mov    eax,0x8780963e
  422d9c:	ins    DWORD PTR es:[edi],dx
  422d9d:	add    al,0x6d
  422d9f:	or     edi,0xc56c34c4
  422da5:	cwde   
  422da6:	int    0xf0
  422da8:	mov    ebp,0xfcd9
  422dad:	int    0xd9
  422daf:	int    0xf
  422db1:	jns    0x422d39
  422db3:	mov    bh,0xbd
  422db5:	sub    esp,edi
  422db7:	add    BYTE PTR [eax],al
  422db9:	cwde   
  422dba:	int    0xf0
  422dbc:	jns    0x422e36
  422dbe:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422dc4:	add    BYTE PTR [eax-0x58798787],bl
  422dca:	mov    ebp,0xfc38
  422dcf:	jns    0x422e49
  422dd1:	xchg   edx,eax
  422dd2:	cmp    eax,0xeceb99cd
  422dd7:	add    eax,DWORD PTR [eax]
  422dd9:	add    BYTE PTR [esi-0x12ed1233],dl
  422ddf:	inc    esp
  422de0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dea:	leave  
  422deb:	jbe    0x422da2
  422ded:	inc    ecx
  422dee:	and    DWORD PTR [esi-0x778932cb],eax
  422df4:	or     dh,BYTE PTR [esi-0x78]
  422df7:	int    0x76
  422df9:	stc    
  422dfa:	int    0x96
  422dfc:	stc    
  422dfd:	pop    ebx
  422dfe:	cwde   
  422dff:	call   0xd3e3:0x3b9effc0
  422e06:	jmp    0x3586:0x21d1bf28
  422e0d:	cmp    eax,ebp
  422e0f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e15:	jbe    0x422e8c
  422e17:	int    0x76
  422e19:	stc    
  422e1a:	int    0x96
  422e1c:	stc    
  422e1d:	cmp    eax,ebp
  422e1f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e25:	jmp    0xfd76:0xad25328
  422e2c:	int    0x76
  422e2e:	stc    
  422e2f:	int    0x96
  422e31:	stc    
  422e32:	cmp    eax,ebp
  422e34:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e3a:	jmp    0xd076:0xad25328
  422e41:	int    0x76
  422e43:	stc    
  422e44:	int    0x96
  422e46:	stc    
  422e47:	cmp    eax,ebp
  422e49:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e4f:	jmp    0xbd76:0xad25328
  422e56:	leave  
  422e57:	jbe    0x422e86
  422e59:	dec    ecx
  422e5a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e61:	mov    al,ds:0x76c93586
  422e66:	and    eax,0x35862169
  422e6b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e6f:	jbe    0x422e41
  422e71:	or     dh,BYTE PTR [esi-0x30]
  422e74:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e7c:	ror    cl,1
  422e7e:	jbe    0x422e50
  422e80:	jo     0x422e02
  422e82:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e89:	add    BYTE PTR [eax-0x32068933],0x96
  422e90:	stc    
  422e91:	cmp    eax,ebp
  422e93:	cmp    esp,ebx
  422e95:	sar    DWORD PTR [ebp+0x28ead392],cl
  422e9b:	push   ebx
  422e9c:	ror    BYTE PTR [edx],cl
  422e9e:	jbe    0x422e70
  422ea0:	int    0x76
  422ea2:	stc    
  422ea3:	int    0x96
  422ea5:	stc    
  422ea6:	cmp    eax,ebp
  422ea8:	cmp    esp,ebx
  422eaa:	sar    DWORD PTR [ebp+0x28ead392],cl
  422eb0:	push   ebx
  422eb1:	ror    BYTE PTR [edx],cl
  422eb3:	jbe    0x422e85
  422eb5:	leave  
  422eb6:	jbe    0x422e4d
  422eb8:	arpl   WORD PTR [edx+0x76c98080],dx
  422ebe:	lods   eax,DWORD PTR ds:[esi]
  422ebf:	pop    esi
  422ec0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422ec7:	add    BYTE PTR [eax-0xa983080],0xff
  422ece:	add    BYTE PTR [eax],al
  422ed0:	iret   
  422ed1:	push   edi
  422ed2:	xchg   ebp,eax
  422ed3:	inc    DWORD PTR [eax]
  422ed5:	add    BYTE PTR [ebp+0xff13],bh
  422edb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ee1:	lea    ebp,[ebp-0x72ff562a]
  422ee7:	xchg   ebp,eax
  422ee8:	(bad)  
  422ee9:	fcmove st,st(1)
  422eeb:	jbe    0x422e9a
  422eed:	dec    esi
  422eee:	ins    BYTE PTR es:[edi],dx
  422eef:	add    BYTE PTR [eax-0x32068933],0x8d
  422ef6:	stc    
  422ef7:	cmp    eax,ebp
  422ef9:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422eff:	cmp    ecx,DWORD PTR [edi]
  422f01:	shl    edx,cl
  422f03:	sub    BYTE PTR [ebx-0x2d],dl
  422f06:	or     dh,BYTE PTR [esi+0x6d]
  422f09:	int    0x76
  422f0b:	stc    
  422f0c:	int    0x8d
  422f0e:	stc    
  422f0f:	add    al,0xb6
  422f11:	cmc    
  422f12:	cmp    BYTE PTR [ebx],0xc5
  422f15:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f1b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f1f:	or     dh,BYTE PTR [esi-0x6b]
  422f22:	mov    ah,0xb1
  422f24:	sbb    al,0x80
  422f26:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f2d:	push   eax
  422f2e:	or     dh,BYTE PTR [esi-0x13]
  422f31:	int    0x6c
  422f33:	dec    esp
  422f34:	or     dh,BYTE PTR [esi+0x11]
  422f37:	int    0x76
  422f39:	mov    bh,cl
  422f3b:	(bad)  
  422f3c:	cmc    
  422f3d:	or     cl,BYTE PTR [ecx]
  422f3f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f45:	mov    bh,cl
  422f47:	(bad)  
  422f48:	in     eax,dx
  422f49:	or     cl,BYTE PTR [ecx]
  422f4b:	push   ebp
  422f4c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f56:	lea    edx,[ecx]
  422f58:	or     cl,BYTE PTR [ecx]
  422f5a:	pop    ebp
  422f5b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f65:	stc    
  422f66:	int    0x96
  422f68:	stc    
  422f69:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f6c:	cdq    
  422f6d:	shr    ebx,cl
  422f6f:	xchg   edx,eax
  422f70:	shr    edx,cl
  422f72:	sub    BYTE PTR [ebx+0x13],dl
  422f75:	inc    ebx
  422f76:	jge    0x422fa7
  422f78:	add    eax,0x808087ca
  422f7d:	int    0x76
  422f7f:	mov    ch,cl
  422f81:	add    DWORD PTR ds:0xcd808081,esi
  422f87:	mov    ch,cl
  422f89:	jbe    0x422f13
  422f8b:	int    0x1
  422f8d:	xor    eax,0xcd808081
  422f92:	add    BYTE PTR [edi-0x72329b92],0x88
  422f99:	int    0xa
  422f9b:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422fa1:	adc    al,0x0
  422fa3:	add    BYTE PTR [eax],al
  422fa5:	(bad)  
  422fa6:	int    0x96
  422fa8:	mov    ch,cl
  422faa:	mov    ds:0x80808125,al
  422faf:	int    0x22
  422fb1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422fb7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422fbf:	bound  eax,QWORD PTR [eax]
  422fc1:	jno    0x422fe7
  422fc3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fc6:	push   es
  422fc7:	push   esp
  422fc8:	add    BYTE PTR [eax],al
  422fca:	add    BYTE PTR [esi],cl
  422fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fcd:	aad    0x49
  422fcf:	leave  
  422fd0:	push   es
  422fd1:	pop    esp
  422fd2:	add    BYTE PTR [eax],al
  422fd4:	add    BYTE PTR [edi+0x35],dl
  422fd7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fdd:	add    BYTE PTR [eax],al
  422fdf:	mov    ds:0x79d735c1,eax
  422fe4:	push   es
  422fe5:	ins    BYTE PTR es:[edi],dx
  422fe6:	add    BYTE PTR [eax],al
  422fe8:	add    BYTE PTR [eax],bl
  422fea:	iret   
  422feb:	outs   dx,BYTE PTR ds:[si]
  422fed:	add    BYTE PTR [eax],al
  422fef:	add    BYTE PTR [edi+0x3b41afb8],ch
  422ff5:	ins    DWORD PTR es:[edi],dx
  422ff6:	leave  
  422ff7:	push   es
  422ff8:	sub    al,0x0
  422ffa:	add    BYTE PTR [eax],al
  422ffc:	push   cs
  422ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ffe:	aad    0x49
  423000:	leave  
  423001:	push   es
  423002:	xor    al,0x0
  423004:	add    BYTE PTR [eax],al
  423006:	push   edi
  423007:	xor    eax,0x6c9ab13
  42300c:	cmp    al,0x0
  42300e:	add    BYTE PTR [eax],al
  423010:	mov    ds:0x79c335c1,eax
  423015:	push   es
  423016:	inc    esp
  423017:	add    BYTE PTR [eax],al
  423019:	add    BYTE PTR [eax],bl
  42301b:	iret   
  42301c:	addr16 inc esi
  42301e:	add    BYTE PTR [eax],al
  423020:	add    BYTE PTR [edi-0x32be5048],ch
  423026:	jbe    0x422fb0
  423028:	int    0x1
  42302a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423030:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423037:	int    0x76
  423039:	mov    ch,cl
  42303b:	add    DWORD PTR [ebp-0x7f],edi
  42303e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423045:	mov    dl,0x35
  423047:	leave  
  423048:	jbe    0x42304f
  42304a:	mov    bh,0x3f
  42304c:	cmp    DWORD PTR [edi-0x48],eax
  42304f:	leave  
  423050:	jbe    0x42305b
  423052:	xlat   BYTE PTR ds:[ebx]
  423053:	sbb    cl,cl
  423055:	push   es
  423056:	les    eax,FWORD PTR [eax]
  423058:	add    BYTE PTR [eax],al
  42305a:	push   cs
  42305b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42305c:	aad    0x49
  42305e:	leave  
  42305f:	push   es
  423060:	nop
  423061:	add    BYTE PTR [eax],al
  423063:	add    BYTE PTR [edi+0x35],dl
  423066:	xlat   BYTE PTR ds:[ebx]
  423067:	inc    ecx
  423068:	leave  
  423069:	push   es
  42306a:	aam    0x0
  42306c:	add    BYTE PTR [eax],al
  42306e:	cmp    DWORD PTR [ecx+0x57],ecx
  423071:	jge    0x42303c
  423073:	push   es
  423074:	fadd   QWORD PTR [eax]
  423076:	add    BYTE PTR [eax],al
  423078:	mov    cl,0x3f
  42307a:	shl    DWORD PTR ds:0xe406c9,0x0
  423081:	add    BYTE PTR [edi-0x49],al
  423084:	xlat   BYTE PTR ds:[ebx]
  423085:	sbb    cl,cl
  423087:	push   es
  423088:	pushf  
  423089:	add    BYTE PTR [eax],al
  42308b:	add    BYTE PTR [esi],cl
  42308d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42308e:	aad    0x49
  423090:	leave  
  423091:	push   es
  423092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423093:	add    BYTE PTR [eax],al
  423095:	add    BYTE PTR [edi+0x35],dl
  423098:	xlat   BYTE PTR ds:[ebx]
  423099:	inc    ecx
  42309a:	leave  
  42309b:	push   es
  42309c:	lods   al,BYTE PTR ds:[esi]
  42309d:	add    BYTE PTR [eax],al
  42309f:	add    BYTE PTR [ecx],bh
  4230a1:	dec    ecx
  4230a2:	push   edi
  4230a3:	jge    0x42306e
  4230a5:	push   es
  4230a6:	mov    ah,0x0
  4230a8:	add    BYTE PTR [eax],al
  4230aa:	mov    cl,0x3f
  4230ac:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230b3:	add    BYTE PTR [edi-0x49],al
  4230b6:	ret    
  4230b7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230bd:	jo     0x42308c
  4230bf:	jbe    0x4230f6
  4230c1:	add    BYTE PTR [eax],dh
  4230c3:	int    0x76
  4230c5:	stc    
  4230c6:	int    0x8d
  4230c8:	stc    
  4230c9:	cmp    eax,ebp
  4230cb:	cmp    ecx,DWORD PTR [edi]
  4230cd:	shl    edx,cl
  4230cf:	sub    bl,dl
  4230d1:	mov    ebp,0xcdd35392
  4230d6:	lea    ebp,[ebp+0x52fd343]
  4230dc:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230e3:	int    0x8d
  4230e5:	mov    ch,0x3b
  4230e7:	lds    edi,FWORD PTR [ebx]
  4230e9:	psrlq  mm6,mm2
  4230ec:	sub    bl,dl
  4230ee:	mov    ebp,0xcdd35392
  4230f3:	lea    ebp,[ebp+0x76cd7d33]
  4230f9:	ins    DWORD PTR es:[edi],dx
  4230fa:	inc    ebx
  4230fb:	shr    DWORD PTR [edi],cl
  4230fd:	or     ch,dl
  4230ff:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423109:	int    0x76
  42310b:	mov    ch,cl
  42310d:	rcl    BYTE PTR [ecx],1
  42310f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423119:	add    DWORD PTR [ebp-0x7f],esi
  42311c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423123:	jo     0x423125
  423125:	cwde   
  423126:	xor    ch,cl
  423128:	lea    ecx,[eax-0x7ebaf533]
  42312e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423135:	int    0x5d
  423137:	adc    DWORD PTR [ecx-0x29327f80],eax
  42313d:	mov    BYTE PTR [ebx],bh
  42313f:	ins    DWORD PTR es:[edi],dx
  423140:	iret   
  423141:	pop    ss
  423142:	pushf  
  423143:	add    BYTE PTR [eax],al
  423145:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42314b:	jo     0x42311a
  42314d:	jbe    0x4230d7
  42314f:	int    0x1
  423151:	inc    ebp
  423152:	add    DWORD PTR [eax+0x500080],0x760a889a
  42315c:	adc    eax,0xcd8876cd
  423161:	pop    ebp
  423162:	adc    DWORD PTR [ecx-0x29327f80],eax
  423168:	mov    BYTE PTR [ebx],bh
  42316a:	ins    DWORD PTR es:[edi],dx
  42316b:	iret   
  42316c:	pop    ss
  42316d:	les    eax,FWORD PTR [eax]
  42316f:	add    BYTE PTR [eax],al
  423171:	mov    ebp,0x80803ad9
  423176:	jo     0x423145
  423178:	jbe    0x423102
  42317a:	int    0x1
  42317c:	inc    ebp
  42317d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423187:	mov    ch,cl
  423189:	pop    ebp
  42318a:	adc    DWORD PTR [ecx-0x29327f80],eax
  423190:	mov    BYTE PTR [ebx],bh
  423192:	ins    DWORD PTR es:[edi],dx
  423193:	iret   
  423194:	pop    ss
  423195:	push   esp
  423196:	add    BYTE PTR [eax],al
  423198:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  42319e:	jo     0x42316d
  4231a0:	jbe    0x42312a
  4231a2:	int    0x1
  4231a4:	inc    ebp
  4231a5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231af:	pop    ebp
  4231b0:	or     BYTE PTR [edx],0x76
  4231b3:	xor    eax,0xc05d76cd
  4231b8:	push   ds
  4231b9:	cmp    ebx,edx
  4231bb:	sahf   
  4231bc:	clc    
  4231bd:	add    al,BYTE PTR [ecx]
  4231bf:	shr    BYTE PTR [esi+0x2f],cl
  4231c2:	pop    ecx
  4231c3:	shl    BYTE PTR [eax+0x0],cl
  4231c6:	xchg   esi,eax
  4231c7:	xor    eax,0x43d66d06
  4231cc:	int    0x76
  4231ce:	pop    ebp
  4231cf:	add    al,0xad
  4231d1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231d8:	adc    eax,0x40d46d06
  4231dd:	int    0x76
  4231df:	mov    ch,cl
  4231e1:	pop    ebp
  4231e2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231e8:	mov    BYTE PTR [ebx],bh
  4231ea:	ins    DWORD PTR es:[edi],dx
  4231eb:	iret   
  4231ec:	xchg   esi,eax
  4231ed:	add    DWORD PTR [ebp-0x7f7fc560],edi
  4231f3:	jo     0x4231c2
  4231f5:	jbe    0x42317f
  4231f7:	int    0x1
  4231f9:	cmp    eax,0x808081
  4231fe:	push   eax
  4231ff:	add    BYTE PTR [edx+0xd760a88],bl
  423205:	in     al,dx
  423206:	test   BYTE PTR [esi+esi*4],al
  423209:	or     eax,0x5d760080
  42320e:	add    al,0xe6
  423210:	pop    ebp
  423211:	sub    al,0x82
  423213:	sub    eax,0xcdb576cd
  423218:	lea    esi,[ebp-0x3f772933]
  42321e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423224:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42322a:	push   ebx
  42322b:	ror    edi,cl
  42322d:	pop    ss
  42322e:	cmc    
  42322f:	inc    DWORD PTR [eax]
  423231:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423237:	jo     0x423206
  423239:	jbe    0x423234
  42323b:	int    0x8d
  42323d:	stc    
  42323e:	int    0xd6
  423240:	mov    BYTE PTR [ebx],bh
  423242:	lds    edi,FWORD PTR [ebx]
  423244:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42324b:	push   ebx
  42324c:	ror    edi,cl
  42324e:	pop    ss
  42324f:	xchg   ebp,eax
  423250:	inc    DWORD PTR [eax]
  423252:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423258:	jo     0x42325a
  42325a:	xchg   esi,eax
  42325b:	or     eax,0xcdf98dcd
  423260:	xchg   esi,eax
  423261:	stc    
  423262:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423265:	(bad)  
  423267:	jmp    0x4231fb
  423269:	shr    edx,cl
  42326b:	sub    BYTE PTR [ebx+0x13],dl
  42326e:	inc    ebx
  42326f:	jge    0x423247
  423271:	mov    ecx,ecx
  423273:	jbe    0x4232b2
  423275:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42327f:	cmp    eax,ebp
  423281:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423287:	repnz sub BYTE PTR [ebx-0x2d],dl
  42328b:	xchg   DWORD PTR [esi+0x6d],esi
  42328e:	or     dh,BYTE PTR [esi+0x6d]
  423291:	int    0x76
  423293:	cmp    eax,0x1cd46d06
  423298:	int    0x76
  42329a:	mov    ch,0xcd
  42329c:	lea    esi,[ebp-0xfc43ac5]
  4232a2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232a8:	push   ebx
  4232a9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232af:	xchg   ebp,eax
  4232b0:	int    0x76
  4232b2:	mov    ch,0xcd
  4232b4:	lea    esi,[ebp-0xfc43ac5]
  4232ba:	shl    edx,cl
  4232bc:	sub    bl,dl
  4232be:	mov    ebp,0xcdd35392
  4232c3:	lea    ebp,[ebp+0x76cd7d33]
  4232c9:	ins    DWORD PTR es:[edi],dx
  4232ca:	inc    ebx
  4232cb:	shr    DWORD PTR [edi],cl
  4232cd:	pop    es
  4232ce:	push   eax
  4232cf:	inc    DWORD PTR [eax]
  4232d1:	add    al,al
  4232d3:	jmp    FWORD PTR [eax-0x326a8933]
  4232d9:	lea    ebp,[ebp+0x43]
  4232dc:	jge    0x4232b4
  4232de:	xor    DWORD PTR [eax],eax
  4232e0:	(bad)  
  4232e1:	mov    bh,cl
  4232e3:	jbe    0x4232e2
  4232e5:	jo     0x4232a4
  4232e7:	stc    
  4232e8:	jl     0x42326a
  4232ea:	or     BYTE PTR [edx],0x76
  4232ed:	jne    0x4232db
  4232ef:	sbb    cl,ch
  4232f1:	jbe    0x423368
  4232f3:	int    0x8d
  4232f5:	mov    ch,0xcd
  4232f7:	xchg   esi,eax
  4232f8:	mov    ch,0x3b
  4232fa:	or     al,0x3b
  4232fc:	cdq    
  4232fd:	shr    ebx,cl
  4232ff:	xchg   edx,eax
  423300:	shr    edx,cl
  423302:	sub    BYTE PTR [ebx+0x13],dl
  423305:	push   ecx
  423306:	mov    ch,cl
  423308:	jbe    0x423303
  42330a:	int    0x8d
  42330c:	stc    
  42330d:	cmp    eax,ebp
  42330f:	cmp    ecx,DWORD PTR [edi]
  423311:	shl    edx,cl
  423313:	sub    bl,dl
  423315:	mov    ebp,0xcdd35392
  42331a:	lea    esi,[ebp+0x43]
  42331d:	shr    DWORD PTR [edi],cl
  42331f:	add    eax,0x80805300
  423324:	int    0x76
  423326:	stc    
  423327:	int    0x8d
  423329:	stc    
  42332a:	cmp    eax,ebp
  42332c:	cmp    ecx,DWORD PTR [edi]
  42332e:	shl    edx,cl
  423330:	sub    bl,dl
  423332:	mov    ebp,0xcdd35392
  423337:	(bad)  
  423338:	std    
  423339:	inc    ebx
  42333a:	shr    DWORD PTR [edi],cl
  42333c:	add    eax,0x808053ea
  423341:	int    0x76
  423343:	stc    
  423344:	int    0x8d
  423346:	stc    
  423347:	cmp    eax,ebp
  423349:	cmp    ecx,DWORD PTR [edi]
  42334b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423351:	push   ebx
  423352:	shr    esp,cl
  423354:	adc    al,0xcd
  423356:	lea    esi,[ebp+0x3bb596cd]
  42335c:	or     al,0x3b
  42335e:	cdq    
  42335f:	shr    ebx,cl
  423361:	xchg   edx,eax
  423362:	shr    edx,cl
  423364:	sub    BYTE PTR [ebx+0x13],dl
  423367:	xchg   ebx,edx
  423369:	int    0x8d
  42336b:	std    
  42336c:	inc    ebx
  42336d:	rol    DWORD PTR [edx-0x2893219],cl
  423373:	or     dh,BYTE PTR [esi-0x53]
  423376:	int    0x76
  423378:	jne    0x423384
  42337a:	jbe    0x42334c
  42337c:	ret    
  42337d:	dec    ecx
  42337e:	and    DWORD PTR [esi+0x45e60a35],eax
  423384:	leave  
  423385:	jbe    0x423324
  423387:	inc    ecx
  423388:	and    DWORD PTR [esi+0x4576cd35],eax
  42338e:	int    0x8d
  423390:	inc    ebp
  423391:	cmp    eax,ebp
  423393:	cmp    ecx,DWORD PTR [edi]
  423395:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42339b:	push   ebx
  42339c:	ror    DWORD PTR [edx],cl
  42339e:	jbe    0x4233f5
  4233a0:	int    0x76
  4233a2:	inc    ebp
  4233a3:	int    0x8d
  4233a5:	inc    ebp
  4233a6:	cmp    eax,ebp
  4233a8:	cmp    ecx,DWORD PTR [edi]
  4233aa:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233b0:	push   ebx
  4233b1:	ror    DWORD PTR [edx],cl
  4233b3:	jbe    0x42334a
  4233b5:	leave  
  4233b6:	jbe    0x4233f5
  4233b8:	dec    eax
  4233b9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233bf:	ret    0x8621
  4233c2:	xor    eax,0xcd4576cd
  4233c7:	lea    eax,[ebp+0x3b]
  4233ca:	lds    edi,FWORD PTR [ebx]
  4233cc:	psrlq  mm6,mm2
  4233cf:	sub    bl,dl
  4233d1:	mov    ebp,0xcdd35392
  4233d6:	lea    ebp,[ebp+0x52f7d43]
  4233dc:	push   ss
  4233dd:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233e3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233ea:	cmp    eax,0x3b5596cd
  4233ef:	jns    0x42342c
  4233f1:	or     al,0xd3
  4233f3:	lods   eax,DWORD PTR ds:[esi]
  4233f4:	sub    bl,dl
  4233f6:	jmp    0x42338a
  4233f8:	push   ebx
  4233f9:	jge    0x4233c8
  4233fb:	jbe    0x4233aa
  4233fd:	xor    edx,edx
  4233ff:	cmp    ebx,edx
  423401:	clc    
  423402:	add    cl,BYTE PTR [edx]
  423404:	jbe    0x42339b
  423406:	int    0x76
  423408:	sbb    eax,0x3b1d8dcd
  42340d:	lds    edi,FWORD PTR [ebx]
  42340f:	psrlq  mm6,mm2
  423412:	sub    bl,dl
  423414:	mov    ebp,0xcdd35392
  423419:	lea    edx,[ebp+0x16d87d43]
  42341f:	int    0x76
  423421:	sbb    eax,0x3b1d8dcd
  423426:	lds    edi,FWORD PTR [ebx]
  423428:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42342f:	push   ebx
  423430:	ror    DWORD PTR [edx],cl
  423432:	jbe    0x4233c9
  423434:	int    0x76
  423436:	cmp    eax,0x3b3d8dcd
  42343b:	lds    edi,FWORD PTR [ebx]
  42343d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423444:	push   ebx
  423445:	ror    ebp,cl
  423447:	lea    edx,[ebp+0xad3d12f]
  42344d:	jbe    0x4233e4
  42344f:	int    0x76
  423451:	inc    ebp
  423452:	int    0x8d
  423454:	inc    ebp
  423455:	cmp    eax,ebp
  423457:	cmp    ecx,DWORD PTR [edi]
  423459:	shl    edx,cl
  42345b:	sub    bl,dl
  42345d:	mov    ebp,0xcdd35392
  423462:	lea    edx,[ebp+0x52f7d43]
  423468:	pusha  
  423469:	xchg   edx,eax
  42346a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423471:	or     eax,0x875576cd
  423476:	jbe    0x423448
  423478:	or     ah,dh
  42347a:	xchg   ebp,eax
  42347b:	or     dh,BYTE PTR [esi+0x6d]
  42347e:	pop    ebp
  42347f:	inc    ecx
  423480:	and    DWORD PTR [esi+0x5d760a35],eax
  423486:	leave  
  423487:	jbe    0x42349e
  423489:	cmp    DWORD PTR [ecx],esp
  42348b:	xchg   BYTE PTR ds:0xb23576c9,dh
  423491:	and    DWORD PTR [esi-0xe89f5cb],eax
  423497:	int    0x76
  423499:	xchg   ebp,eax
  42349a:	int    0x8d
  42349c:	xchg   ebp,eax
  42349d:	cmp    eax,ebp
  42349f:	cmp    ecx,DWORD PTR [edi]
  4234a1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234a7:	push   ebx
  4234a8:	ror    DWORD PTR [edx],cl
  4234aa:	jbe    0x423529
  4234ac:	int    0x6d
  4234ae:	jmp    0x4234b6
  4234b0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234ba:	add    BYTE PTR [ebx],cl
  4234bc:	and    DWORD PTR [esi-0x369232cb],eax
  4234c2:	push   es
  4234c3:	xchg   esp,eax
  4234c4:	add    BYTE PTR [eax],al
  4234c6:	add    bh,dh
  4234c8:	and    DWORD PTR [esi-0x329232cb],eax
  4234ce:	ins    DWORD PTR es:[edi],dx
  4234cf:	int    0x76
  4234d1:	icebp  
  4234d2:	int    0x8d
  4234d4:	icebp  
  4234d5:	cmp    eax,ebp
  4234d7:	cmp    ecx,DWORD PTR [edi]
  4234d9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234df:	push   ebx
  4234e0:	ror    ebp,cl
  4234e2:	lea    edi,[ebp+0x2f]
  4234e5:	rcl    ebx,1
  4234e7:	int    0x8d
  4234e9:	ins    DWORD PTR es:[edi],dx
  4234ea:	retf   0x8884
  4234ed:	or     DWORD PTR [esi-0x57],esi
  4234f0:	int    0x6d
  4234f2:	int    0x76
  4234f4:	icebp  
  4234f5:	int    0x8d
  4234f7:	icebp  
  4234f8:	cmp    ecx,DWORD PTR [edi]
  4234fa:	cmp    eax,ebp
  4234fc:	shl    edx,cl
  4234fe:	sub    bl,dl
  423500:	mov    ebp,0xcdd35392
  423505:	lea    edi,[ebp+0x2f]
  423508:	rcl    ebx,1
  42350a:	int    0x8d
  42350c:	adc    eax,0x3b1596cd
  423511:	or     al,0x3b
  423513:	cdq    
  423514:	shr    ebx,cl
  423516:	xchg   edx,eax
  423517:	shr    edx,cl
  423519:	sub    BYTE PTR [ebx+0x13],dl
  42351c:	xchg   ebx,edx
  42351e:	int    0x8d
  423520:	ins    DWORD PTR es:[edi],dx
  423521:	das    
  423522:	pop    ecx
  423523:	dec    esp
  423524:	mov    ch,cl
  423526:	push   es
  423527:	jo     0x423529
  423529:	add    BYTE PTR [eax],al
  42352b:	int    0x17
  42352d:	jo     0x42352f
  42352f:	add    BYTE PTR [eax],al
  423531:	cmp    eax,ebp
  423533:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423539:	jmp    0x2fd3:0x87d25328
  423540:	pop    ecx
  423541:	lea    ebp,[ecx-0x72f682c5]
  423547:	test   eax,0x76ca6dcd
  42354c:	test   eax,0xcdf18dcd
  423551:	xchg   esi,eax
  423552:	icebp  
  423553:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423556:	cdq    
  423557:	shr    edx,cl
  423559:	sub    bl,dl
  42355b:	jmp    0x4234ef
  42355d:	push   ebx
  42355e:	adc    ecx,ebp
  423560:	xchg   esi,eax
  423561:	jge    0x423592
  423563:	rcl    DWORD PTR [ebx],1
  423565:	int    0x96
  423567:	ins    DWORD PTR es:[edi],dx
  423568:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42356f:	icebp  
  423570:	int    0x8d
  423572:	icebp  
  423573:	cmp    eax,ebp
  423575:	cmp    ecx,DWORD PTR [edi]
  423577:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42357d:	push   ebx
  42357e:	ror    ebp,cl
  423580:	lea    edi,[ebp+0x2f]
  423583:	rcl    ebx,1
  423585:	int    0x8d
  423587:	ins    DWORD PTR es:[edi],dx
  423588:	retf   0x8884
  42358b:	or     DWORD PTR [esi-0x57],esi
  42358e:	int    0x6d
  423590:	int    0x76
  423592:	icebp  
  423593:	int    0x8d
  423595:	icebp  
  423596:	cmp    eax,ebp
  423598:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42359e:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235a2:	int    0x8d
  4235a4:	jge    0x4235d5
  4235a6:	rcl    ebx,1
  4235a8:	int    0x8d
  4235aa:	pop    ebp
  4235ab:	int    0x96
  4235ad:	pop    ebp
  4235ae:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235b1:	cdq    
  4235b2:	shr    ebx,cl
  4235b4:	xchg   edx,eax
  4235b5:	shr    edx,cl
  4235b7:	sub    BYTE PTR [ebx+0x13],dl
  4235ba:	xchg   ebx,edx
  4235bc:	int    0x8d
  4235be:	ins    DWORD PTR es:[edi],dx
  4235bf:	das    
  4235c0:	pop    ecx
  4235c1:	dec    esp
  4235c2:	mov    ch,cl
  4235c4:	push   es
  4235c5:	xchg   esp,eax
  4235c6:	add    BYTE PTR [eax],al
  4235c8:	add    ch,cl
  4235ca:	pop    ss
  4235cb:	xchg   esp,eax
  4235cc:	add    BYTE PTR [eax],al
  4235ce:	add    BYTE PTR [ebx],bh
  4235d0:	lds    edi,FWORD PTR [ebx]
  4235d2:	cdq    
  4235d3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235d9:	push   ebx
  4235da:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235e0:	test   eax,0x8d097d3b
  4235e5:	test   eax,0x76ca6dcd
  4235ea:	test   eax,0xcdf18dcd
  4235ef:	xchg   esi,eax
  4235f0:	icebp  
  4235f1:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235f4:	cdq    
  4235f5:	shr    edx,cl
  4235f7:	sub    bl,dl
  4235f9:	jmp    0x42358d
  4235fb:	push   ebx
  4235fc:	adc    ecx,ebp
  4235fe:	xchg   esi,eax
  4235ff:	jge    0x423630
  423601:	rcl    DWORD PTR [ebx],1
  423603:	int    0x96
  423605:	ins    DWORD PTR es:[edi],dx
  423606:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42360d:	xor    eax,0x3b358dcd
  423612:	(bad)  
  423614:	(bad)
  423617:	sub    bl,dl
  423619:	mov    ebp,0xcdd35392
  42361e:	lea    ebx,[ebp-0x33]
  423621:	xchg   esi,eax
  423622:	pop    ebp
  423623:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423626:	cdq    
  423627:	shr    ebx,cl
  423629:	xchg   edx,eax
  42362a:	shr    edx,cl
  42362c:	sub    BYTE PTR [ebx+0x13],dl
  42362f:	das    
  423630:	rcl    ebx,1
  423632:	xchg   DWORD PTR [esi+0x7d],esi
  423635:	or     dh,BYTE PTR [esi+0x7d]
  423638:	int    0x76
  42363a:	jge    0x423609
  42363c:	lea    ecx,ds:0xb2f7d43
  423642:	(bad)  
  423643:	inc    DWORD PTR [eax]
  423645:	add    ch,cl
  423647:	jbe    0x4236a6
  423649:	int    0x8d
  42364b:	pop    ebp
  42364c:	cmp    ecx,DWORD PTR [edi]
  42364e:	shl    edx,cl
  423650:	sub    BYTE PTR [ebx],bh
  423652:	(bad)
  423655:	xchg   edx,eax
  423656:	push   ebx
  423657:	ror    ebp,cl
  423659:	lea    ecx,ds:0xcdd3d12f
  42365f:	lea    edx,[ebp-0x142cf3c5]
  423665:	xchg   edx,eax
  423666:	push   ebx
  423667:	ror    ebp,cl
  423669:	lea    edx,[ebp-0xd2cf0c5]
  42366f:	sub    BYTE PTR [ebx-0x2d],dl
  423672:	or     dh,BYTE PTR [esi+0x35]
  423675:	int    0x76
  423677:	popf   
  423678:	int    0x8d
  42367a:	popf   
  42367b:	cmp    ecx,DWORD PTR [edi]
  42367d:	shl    edx,cl
  42367f:	sub    BYTE PTR [ebx],bh
  423681:	(bad)
  423684:	xchg   edx,eax
  423685:	push   ebx
  423686:	ror    ebp,cl
  423688:	lea    ebx,[ebp+0x3b9d96cd]
  42368e:	or     al,0xd3
  423690:	jmp    0x423624
  423692:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  423698:	adc    eax,DWORD PTR [edi+0x7d87358d]
  42369e:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236a4:	in     al,dx
  4236a5:	sbb    al,0xcd
  4236a7:	jbe    0x423646
  4236a9:	int    0x8d
  4236ab:	popf   
  4236ac:	cmp    eax,ebp
  4236ae:	cmp    ecx,DWORD PTR [edi]
  4236b0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236b6:	push   ebx
  4236b7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236bd:	push   ebp
  4236be:	int    0x76
  4236c0:	popf   
  4236c1:	int    0x8d
  4236c3:	popf   
  4236c4:	cmp    eax,ebp
  4236c6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236d0:	int    0x8d
  4236d2:	lods   eax,DWORD PTR ds:[esi]
  4236d3:	xor    edi,DWORD PTR [ebp-0x33]
  4236d6:	jbe    0x423675
  4236d8:	int    0x96
  4236da:	popf   
  4236db:	cmp    eax,ebp
  4236dd:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236e3:	mov    ebp,0xcdd25392
  4236e8:	xchg   esi,eax
  4236e9:	push   ebp
  4236ea:	das    
  4236eb:	rcl    edx,1
  4236ed:	inc    ebx
  4236ee:	shr    DWORD PTR [edi],cl
  4236f0:	pop    es
  4236f1:	adc    ebp,edi
  4236f3:	add    BYTE PTR [eax],al
  4236f5:	int    0x76
  4236f7:	stc    
  4236f8:	int    0x76
  4236fa:	stc    
  4236fb:	int    0x76
  4236fd:	std    
  4236fe:	or     dh,BYTE PTR [esi+0x35]
  423701:	int    0x76
  423703:	mov    ch,cl
  423705:	lea    esp,ds:0x3b2596cd
  42370b:	or     al,0xd3
  42370d:	jmp    0x4236a1
  42370f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423715:	add    BYTE PTR [eax+0x5328ead3],0x13
  42371c:	jno    0x4236eb
  42371e:	lea    esp,[ebp-0x33]
  423721:	xchg   esi,eax
  423722:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423726:	cdq    
  423727:	shr    ebx,cl
  423729:	xchg   edx,eax
  42372a:	shr    edx,cl
  42372c:	sub    BYTE PTR [ebx+0x13],dl
  42372f:	jno    0x4236fe
  423731:	(bad)  
  423732:	stc    
  423733:	int    0x96
  423735:	stc    
  423736:	add    dh,dl
  423738:	xor    eax,0x993b0c3b
  42373d:	shr    ebx,cl
  42373f:	xchg   edx,eax
  423740:	shr    edx,cl
  423742:	sub    BYTE PTR [ebx+0x13],dl
  423745:	jno    0x423747
  423747:	jo     0x42375d
  423749:	int    0x8d
  42374b:	stc    
  42374c:	int    0x96
  42374e:	stc    
  42374f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423752:	cdq    
  423753:	shr    ebx,cl
  423755:	xchg   edx,eax
  423756:	shr    edx,cl
  423758:	sub    BYTE PTR [ebx+0x13],dl
  42375b:	or     dh,BYTE PTR [esi+0x65]
  42375e:	inc    ebx
  42375f:	jge    0x423790
  423761:	add    eax,0x808080ab
  423766:	int    0x76
  423768:	stc    
  423769:	in     al,dx
  42376a:	(bad)  
  42376b:	int    0x96
  42376d:	or     dh,BYTE PTR gs:[esi-0x53]
  423771:	push   ecx
  423772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423773:	lods   eax,DWORD PTR ds:[esi]
  423774:	int    0x8d
  423776:	lods   eax,DWORD PTR ds:[esi]
  423777:	shr    ebx,cl
  423779:	xchg   edx,eax
  42377a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42377d:	lods   eax,DWORD PTR ds:[esi]
  42377e:	sub    BYTE PTR [ebx-0x2d],dl
  423781:	int    0x8d
  423783:	jne    0x42374f
  423785:	dec    esp
  423786:	or     DWORD PTR [ecx],0x8dcd304c
  42378c:	mov    ch,0xcd
  42378e:	lea    esi,[ebp+0x3bb596cd]
  423794:	or     al,0x3b
  423796:	cdq    
  423797:	shr    edx,cl
  423799:	sub    bl,dl
  42379b:	jmp    0x42372f
  42379d:	push   ebx
  42379e:	adc    ecx,ebp
  4237a0:	xchg   esi,eax
  4237a1:	mov    ch,0x87
  4237a3:	jge    0x423772
  4237a5:	jbe    0x423754
  4237a7:	cmp    edx,ebp
  4237a9:	add    al,0xad
  4237ab:	std    
  4237ac:	add    al,0xea
  4237ae:	std    
  4237af:	shr    ebx,cl
  4237b1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237b7:	leave  
  4237b8:	int    0x8d
  4237ba:	std    
  4237bb:	int    0x96
  4237bd:	std    
  4237be:	shr    edx,cl
  4237c0:	xchg   edx,eax
  4237c1:	shr    ebx,cl
  4237c3:	sub    BYTE PTR [ebx-0x1d],dl
  4237c6:	cmp    ebx,ecx
  4237c8:	inc    ebx
  4237c9:	rcl    dh,cl
  4237cb:	mov    ds:0xcd8876cd,eax
  4237d0:	lea    ebp,ds:0xcd2d96cd
  4237d6:	add    DWORD PTR [ecx],edx
  4237d8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237e2:	shr    edx,cl
  4237e4:	sub    BYTE PTR [ebx+0x13],dl
  4237e7:	jno    0x4237b6
  4237e9:	(bad)  
  4237ea:	stc    
  4237eb:	int    0x96
  4237ed:	stc    
  4237ee:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4237f1:	cdq    
  4237f2:	shr    ebx,cl
  4237f4:	xchg   edx,eax
  4237f5:	shr    edx,cl
  4237f7:	sub    BYTE PTR [ebx+0x13],dl
  4237fa:	jno    0x4237fc
  4237fc:	(bad)  
  4237fd:	jne    0x4237ff
  4237ff:	jo     0x42381d
  423801:	int    0x76
  423803:	or     dh,BYTE PTR gs:[esi+0x75]
  423807:	int    0x76
  423809:	xor    eax,0xcdfd760a
  42380e:	jbe    0x42380d
  423810:	cmp    ecx,ebx
  423812:	add    al,0xbd
  423814:	test   ah,dl
  423816:	xor    ecx,ebp
  423818:	jbe    0x42388f
  42381a:	int    0x14
  42381c:	mov    ch,cl
  42381e:	jbe    0x423895
  423820:	int    0x84
  423822:	mov    BYTE PTR [ebx],bh
  423824:	jns    0x423861
  423826:	aad    0xd3
  423828:	lods   eax,DWORD PTR ds:[esi]
  423829:	sub    bl,dl
  42382b:	repz xchg edx,eax
  42382d:	push   ebx
  42382e:	ror    ch,cl
  423830:	xchg   esi,eax
  423831:	jne    0x42383d
  423833:	test   BYTE PTR [edx-0x33],cl
  423836:	jbe    0x423835
  423838:	add    al,0xd3
  42383a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423841:	xlat   BYTE PTR ds:[ebx]
  423842:	int    0x76
  423844:	std    
  423845:	cmp    ecx,ebx
  423847:	add    al,0xbd
  423849:	test   ah,dl
  42384b:	xor    ecx,ebp
  42384d:	jbe    0x4238c4
  42384f:	int    0x14
  423851:	mov    ch,cl
  423853:	jbe    0x4238ca
  423855:	int    0x84
  423857:	mov    BYTE PTR [ebx],bh
  423859:	jns    0x423896
  42385b:	aad    0xd3
  42385d:	lods   eax,DWORD PTR ds:[esi]
  42385e:	sub    bl,dl
  423860:	repz xchg edx,eax
  423862:	push   ebx
  423863:	ror    ch,cl
  423865:	xchg   esi,eax
  423866:	jne    0x423872
  423868:	test   BYTE PTR [edx-0x33],cl
  42386b:	jbe    0x42386a
  42386d:	add    al,0xd3
  42386f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423876:	xlat   BYTE PTR ds:[ebx]
  423877:	int    0x76
  423879:	jne    0x423885
  42387b:	jbe    0x42388a
  42387d:	int    0x76
  42387f:	mov    ch,0xcd
  423881:	lea    esi,[ebp+0xf3bc53b]
  423887:	shl    edx,cl
  423889:	sub    bl,dl
  42388b:	mov    ebp,0xcdd35392
  423890:	(bad)  
  423891:	stc    
  423892:	or     dh,BYTE PTR [esi+0x25]
  423895:	leave  
  423896:	jbe    0x423864
  423898:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  42389f:	imul   edx,ebp,0x8d0a0c69
  4238a5:	gs adc bh,dl
  4238a8:	into   
  4238a9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238af:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238b6:	sar    DWORD PTR [ebx],cl
  4238b8:	lds    ecx,FWORD PTR [edx]
  4238ba:	jbe    0x423869
  4238bc:	rol    esi,cl
  4238be:	lods   eax,DWORD PTR ds:[esi]
  4238bf:	xchg   edx,eax
  4238c0:	or     dh,BYTE PTR [esi-0x30]
  4238c3:	int    0xd3
  4238c5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238c8:	lods   eax,DWORD PTR ds:[esi]
  4238c9:	sub    BYTE PTR [ebx+0x76],dl
  4238cc:	lods   eax,DWORD PTR ds:[esi]
  4238cd:	retf   0x858c
  4238d0:	int3   
  4238d1:	das    
  4238d2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238dd:	retf   
  4238de:	inc    ebx
  4238df:	rcl    esi,cl
  4238e1:	jle    0x4238b0
  4238e3:	jbe    0x42389a
  4238e5:	int    0x8d
  4238e7:	mov    ch,0xcd
  4238e9:	jbe    0x4238a0
  4238eb:	int    0x96
  4238ed:	mov    ch,0x3b
  4238ef:	jns    0x42392c
  4238f1:	or     al,0xd3
  4238f3:	lods   eax,DWORD PTR ds:[esi]
  4238f4:	sub    bl,dl
  4238f6:	jmp    0x42388a
  4238f8:	push   ebx
  4238f9:	jge    0x4238c8
  4238fb:	jbe    0x423962
  4238fd:	cmp    edi,DWORD PTR [ecx-0x2d]
  423900:	lods   eax,DWORD PTR ds:[esi]
  423901:	sub    BYTE PTR [ebx+0x76],dl
  423904:	lods   eax,DWORD PTR ds:[esi]
  423905:	cmp    edx,ebp
  423907:	xchg   DWORD PTR [ebp-0x33],edi
  42390a:	jbe    0x4238dc
  42390c:	add    al,0xea
  42390e:	std    
  42390f:	add    al,0xad
  423911:	std    
  423912:	shr    ebx,cl
  423914:	sub    BYTE PTR [edi+0x3b1353f1],al
  42391a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423921:	and    DWORD PTR [esi-0x323329cb],eax
  423927:	jbe    0x42394e
  423929:	in     al,dx
  42392a:	and    cl,ch
  42392c:	jbe    0x423927
  42392e:	int    0x8d
  423930:	stc    
  423931:	cmp    eax,ebp
  423933:	cmp    ecx,DWORD PTR [edi]
  423935:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42393b:	push   ebx
  42393c:	ror    ebp,cl
  42393e:	(bad)  
  42393f:	stc    
  423940:	int    0x96
  423942:	stc    
  423943:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423946:	cdq    
  423947:	shr    ebx,cl
  423949:	xchg   edx,eax
  42394a:	shr    edx,cl
  42394c:	sub    BYTE PTR [ebx+0x13],dl
  42394f:	inc    ebx
  423950:	jge    0x423981
  423952:	add    eax,0x80809223
  423957:	int    0x76
  423959:	or     eax,0xa886ccd
  42395e:	out    0xb5,al
  423960:	leave  
  423961:	jbe    0x423988
  423963:	mov    dl,0x21
  423965:	xchg   BYTE PTR ds:0x393576c9,dh
  42396b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423971:	dec    ecx
  423972:	mov    al,ds:0x76c93586
  423977:	lods   eax,DWORD PTR ds:[esi]
  423978:	imul   esp,DWORD PTR [ecx],0x76c93586
  42397e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423982:	xor    eax,0xcd3d760a
  423987:	jbe    0x423911
  423989:	int    0x8d
  42398b:	lods   eax,DWORD PTR ds:[esi]
  42398c:	int    0x96
  42398e:	lods   eax,DWORD PTR ds:[esi]
  42398f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423992:	jmp    0x423926
  423994:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  42399a:	adc    esi,DWORD PTR [ecx-0x33]
  42399d:	lea    edx,[ebp+0x3b9596cd]
  4239a3:	or     al,0xd3
  4239a5:	jmp    0x423939
  4239a7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239ad:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239b4:	jno    0x423983
  4239b6:	lea    esp,[ebp-0x33]
  4239b9:	xchg   esi,eax
  4239ba:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239be:	cdq    
  4239bf:	shr    ebx,cl
  4239c1:	xchg   edx,eax
  4239c2:	shr    edx,cl
  4239c4:	sub    BYTE PTR [ebx+0x13],dl
  4239c7:	jno    0x423996
  4239c9:	lea    esi,[ebp+0x3bb596cd]
  4239cf:	or     al,0x3b
  4239d1:	cdq    
  4239d2:	shr    ebx,cl
  4239d4:	xchg   edx,eax
  4239d5:	shr    edx,cl
  4239d7:	sub    BYTE PTR [ebx+0x13],dl
  4239da:	jno    0x4239dc
  4239dc:	jo     0x4239f2
  4239de:	or     dh,BYTE PTR [esi+0x65]
  4239e1:	int    0x76
  4239e3:	mov    ch,cl
  4239e5:	lea    ebp,[ebp+0x3bad96cd]
  4239eb:	or     al,0xd3
  4239ed:	jmp    0x423981
  4239ef:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239f5:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239fc:	jno    0x4239cb
  4239fe:	lea    edx,[ebp+0x3b9596cd]
  423a04:	or     al,0x3b
  423a06:	cdq    
  423a07:	shr    ebx,cl
  423a09:	xchg   edx,eax
  423a0a:	shr    edx,cl
  423a0c:	sub    BYTE PTR [ebx+0x13],dl
  423a0f:	jno    0x4239de
  423a11:	lea    esi,[ebp+0xb596cd]
  423a17:	(bad)  
  423a18:	cmp    eax,0x993b0c3b
  423a1d:	shr    ebx,cl
  423a1f:	xchg   edx,eax
  423a20:	shr    edx,cl
  423a22:	sub    BYTE PTR [ebx+0x13],dl
  423a25:	jno    0x423a27
  423a27:	jo     0x423a3d
  423a29:	int    0x8d
  423a2b:	mov    ch,0xa
  423a2d:	jbe    0x4239dc
  423a2f:	int    0x76
  423a31:	mov    ch,0x3b
  423a33:	or     al,0x3b
  423a35:	jns    0x423a0a
  423a37:	jmp    0x4239cb
  423a39:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a3f:	jbe    0x423aa6
  423a41:	inc    ebx
  423a42:	jge    0x423a73
  423a44:	add    eax,0x8080853c
  423a49:	int    0x8d
  423a4b:	mov    ch,0xcd
  423a4d:	xchg   esi,eax
  423a4e:	mov    ch,0x3b
  423a50:	or     al,0x3b
  423a52:	cdq    
  423a53:	shr    ebx,cl
  423a55:	xchg   edx,eax
  423a56:	shr    edx,cl
  423a58:	sub    BYTE PTR [ebx+0x13],dl
  423a5b:	inc    ebx
  423a5c:	lea    ebp,[ebp-0x7ab2fad1]
  423a62:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a69:	and    eax,0x192ebd3
  423a6e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a74:	mov    ch,0xcd
  423a76:	lea    esi,[ebp+0x192ebd3]
  423a7c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a82:	lea    esi,ds:0xd3358dcd
  423a88:	jmp    0x423a1c
  423a8a:	add    DWORD PTR [edx],eax
  423a8c:	scas   eax,DWORD PTR es:[edi]
  423a8d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423a91:	aaa    
  423a92:	sbb    al,0x0
  423a94:	add    BYTE PTR [eax],al
  423a96:	add    BYTE PTR [edi+esi*1],0x24
  423a9a:	add    BYTE PTR [eax],al
  423a9c:	add    BYTE PTR [eax+0x24cfcf],al
  423aa2:	add    BYTE PTR [eax],al
  423aa4:	jno    0x423aa6
  423aa6:	(bad)  
  423aa7:	cmp    eax,0x1ccfcf
  423aac:	add    BYTE PTR [eax],al
  423aae:	add    dh,dl
  423ab0:	lods   eax,DWORD PTR ds:[esi]
  423ab1:	jno    0x423a80
  423ab3:	lea    ecx,ds:0xcd4c9100
  423ab9:	lea    esi,[ebp+0x4]
  423abc:	shl    DWORD PTR [eax],cl
  423abe:	jno    0x423b30
  423ac0:	mov    ebp,0xefef
  423ac5:	or     dh,BYTE PTR [esi-0x30]
  423ac8:	int    0x76
  423aca:	mov    ch,cl
  423acc:	lea    ebp,ds:0xcd2d96cd
  423ad2:	add    DWORD PTR [ecx],edx
  423ad4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423ade:	shr    edx,cl
  423ae0:	sub    BYTE PTR [ebx+0x13],dl
  423ae3:	jno    0x423ab2
  423ae5:	lea    esi,[ebp+0x3bb596cd]
  423aeb:	or     al,0x3b
  423aed:	cdq    
  423aee:	shr    ebx,cl
  423af0:	xchg   edx,eax
  423af1:	shr    edx,cl
  423af3:	sub    BYTE PTR [ebx+0x13],dl
  423af6:	jno    0x423af8
  423af8:	(bad)  
  423af9:	add    BYTE PTR gs:[eax+0x1c],dh
  423afd:	int    0x76
  423aff:	rcl    bl,1
  423b01:	ins    DWORD PTR es:[edi],dx
  423b02:	xchg   edx,eax
  423b03:	cmp    ecx,ecx
  423b05:	inc    ebx
  423b06:	leave  
  423b07:	int    0x76
  423b09:	mov    ch,cl
  423b0b:	lea    ebp,ds:0x811101cd
  423b11:	add    BYTE PTR [eax-0x29d26933],0x54
  423b18:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b1b:	cdq    
  423b1c:	shr    ebx,cl
  423b1e:	xchg   edx,eax
  423b1f:	shr    edx,cl
  423b21:	sub    BYTE PTR [ebx+0x13],dl
  423b24:	jno    0x423af3
  423b26:	lea    esi,[ebp+0x3bb596cd]
  423b2c:	or     al,0x3b
  423b2e:	cdq    
  423b2f:	shr    ebx,cl
  423b31:	xchg   edx,eax
  423b32:	shr    edx,cl
  423b34:	sub    BYTE PTR [ebx+0x13],dl
  423b37:	jno    0x423b39
  423b39:	(bad)  
  423b3a:	jne    0x423b3c
  423b3c:	jo     0x423b5a
  423b3e:	int    0x76
  423b40:	lods   eax,DWORD PTR ds:[esi]
  423b41:	or     dh,BYTE PTR [esi+0x75]
  423b44:	int    0x76
  423b46:	cmp    eax,0xecfd760a
  423b4b:	cmp    BYTE PTR [ebx],bh
  423b4d:	or     al,0x3b
  423b4f:	cdq    
  423b50:	shr    ebx,cl
  423b52:	xchg   edx,eax
  423b53:	shr    edx,cl
  423b55:	sub    BYTE PTR [ebx+0x13],dl
  423b58:	jno    0x423b27
  423b5a:	lea    esi,[ebp+0x3bb596cd]
  423b60:	or     al,0x3b
  423b62:	cdq    
  423b63:	shr    ebx,cl
  423b65:	xchg   edx,eax
  423b66:	shr    edx,cl
  423b68:	sub    BYTE PTR [ebx+0x13],dl
  423b6b:	jno    0x423b6d
  423b6d:	(bad)  
  423b6e:	lods   eax,DWORD PTR ds:[esi]
  423b6f:	add    BYTE PTR [eax+0x1c],dh
  423b72:	int    0x76
  423b74:	std    
  423b75:	or     dh,BYTE PTR [esi+0x1d]
  423b78:	int    0x76
  423b7a:	jne    0x423b86
  423b7c:	out    0x55,al
  423b7e:	or     dh,BYTE PTR [esi-0x30]
  423b81:	leave  
  423b82:	jbe    0x423b21
  423b84:	inc    ecx
  423b85:	and    DWORD PTR [esi+0x5576cd35],eax
  423b8b:	int    0x8d
  423b8d:	push   ebp
  423b8e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423b91:	or     al,0xd3
  423b93:	lods   eax,DWORD PTR ds:[esi]
  423b94:	sub    bl,dl
  423b96:	jmp    0x423b2a
  423b98:	push   ebx
  423b99:	ror    DWORD PTR [edx],cl
  423b9b:	jbe    0x423be2
  423b9d:	int    0x76
  423b9f:	push   ebp
  423ba0:	int    0x8d
  423ba2:	push   ebp
  423ba3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ba6:	or     al,0xd3
  423ba8:	lods   eax,DWORD PTR ds:[esi]
  423ba9:	sub    bl,dl
  423bab:	jmp    0x423b3f
  423bad:	push   ebx
  423bae:	ror    DWORD PTR [edx],cl
  423bb0:	jbe    0x423bbf
  423bb2:	leave  
  423bb3:	jbe    0x423b4a
  423bb5:	dec    eax
  423bb6:	and    DWORD PTR [esi-0x528936cb],eax
  423bbc:	ret    0x8621
  423bbf:	xor    eax,0xcd5576cd
  423bc4:	lea    edx,[ebp+0x3b]
  423bc7:	jns    0x423c04
  423bc9:	or     al,0xd3
  423bcb:	jmp    0x423b5f
  423bcd:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423bd3:	lea    ebx,ds:0x52f7d43
  423bd9:	push   ss
  423bda:	xchg   DWORD PTR [eax-0x6d241480],eax
  423be0:	add    BYTE PTR [eax-0x326a7233],0x76
  423be7:	xchg   ebp,eax
  423be8:	int    0x96
  423bea:	inc    ebp
  423beb:	cmp    eax,ebp
  423bed:	cmp    ecx,DWORD PTR [edi]
  423bef:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423bf5:	push   ebx
  423bf6:	jge    0x423bc5
  423bf8:	jbe    0x423c17
  423bfa:	xor    edx,edx
  423bfc:	cmp    ebx,edx
  423bfe:	clc    
  423bff:	add    cl,BYTE PTR [edx]
  423c01:	jbe    0x423c10
  423c03:	int    0x76
  423c05:	lods   eax,DWORD PTR ds:[esi]
  423c06:	int    0x8d
  423c08:	lods   eax,DWORD PTR ds:[esi]
  423c09:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c0c:	or     al,0xd3
  423c0e:	jmp    0x423ba2
  423c10:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c16:	lea    ecx,ds:0x16d87d43
  423c1c:	int    0x76
  423c1e:	lods   eax,DWORD PTR ds:[esi]
  423c1f:	int    0x8d
  423c21:	lods   eax,DWORD PTR ds:[esi]
  423c22:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c25:	or     al,0xd3
  423c27:	lods   eax,DWORD PTR ds:[esi]
  423c28:	sub    bl,dl
  423c2a:	jmp    0x423bbe
  423c2c:	push   ebx
  423c2d:	ror    DWORD PTR [edx],cl
  423c2f:	jbe    0x423c3e
  423c31:	int    0x76
  423c33:	xchg   ebp,eax
  423c34:	int    0x8d
  423c36:	xchg   ebp,eax
  423c37:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c3a:	or     al,0xd3
  423c3c:	lods   eax,DWORD PTR ds:[esi]
  423c3d:	sub    bl,dl
  423c3f:	jmp    0x423bd3
  423c41:	push   ebx
  423c42:	ror    ebp,cl
  423c44:	lea    ecx,ds:0xad3d12f
  423c4a:	jbe    0x423c59
  423c4c:	int    0x76
  423c4e:	push   ebp
  423c4f:	int    0x8d
  423c51:	push   ebp
  423c52:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c55:	or     al,0xd3
  423c57:	jmp    0x423beb
  423c59:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c5f:	lea    ecx,ds:0x52f7d43
  423c65:	pusha  
  423c66:	xchg   edx,eax
  423c67:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c6e:	or     eax,0x874576cd
  423c73:	jbe    0x423c45
  423c75:	or     ah,dh
  423c77:	cmp    eax,0x5d5d760a
  423c7c:	inc    ecx
  423c7d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c83:	leave  
  423c84:	jbe    0x423ceb
  423c86:	cmp    DWORD PTR [ecx],esp
  423c88:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c8e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423c94:	int    0x76
  423c96:	cmp    eax,0x3b3d8dcd
  423c9b:	jns    0x423cd8
  423c9d:	or     al,0xd3
  423c9f:	lods   eax,DWORD PTR ds:[esi]
  423ca0:	sub    bl,dl
  423ca2:	jmp    0x423c36
  423ca4:	push   ebx
  423ca5:	ror    DWORD PTR [edx],cl
  423ca7:	jbe    0x423d26
  423ca9:	int    0x6d
  423cab:	jmp    0x423cb3
  423cad:	add    DWORD PTR [eax-0x36923280],0x8c06
  423cb7:	add    BYTE PTR [ebx],cl
  423cb9:	and    DWORD PTR [esi-0x369232cb],eax
  423cbf:	push   es
  423cc0:	jl     0x423cc2
  423cc2:	add    BYTE PTR [eax],al
  423cc4:	mul    DWORD PTR [ecx]
  423cc6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423ccc:	int    0x76
  423cce:	icebp  
  423ccf:	int    0x8d
  423cd1:	icebp  
  423cd2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423cd5:	or     al,0xd3
  423cd7:	lods   eax,DWORD PTR ds:[esi]
  423cd8:	sub    bl,dl
  423cda:	jmp    0x423c6e
  423cdc:	push   ebx
  423cdd:	ror    ebp,cl
  423cdf:	lea    edi,[ebp+0x2f]
  423ce2:	rcl    ebx,1
  423ce4:	int    0x8d
  423ce6:	pop    ebp
  423ce7:	retf   0x8884
  423cea:	or     DWORD PTR [esi-0x1f],esi
  423ced:	int    0x6d
  423cef:	int    0x76
  423cf1:	icebp  
  423cf2:	int    0x8d
  423cf4:	icebp  
  423cf5:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423cf8:	jns    0x423ccd
  423cfa:	jmp    0x423c8e
  423cfc:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d02:	lea    edi,[ebp+0x2f]
  423d05:	rcl    ebx,1
  423d07:	int    0x8d
  423d09:	gs int 0x96
  423d0c:	cmp    ecx,DWORD PTR gs:[edi]
  423d0f:	cmp    edx,ebp
  423d11:	shl    edx,cl
  423d13:	sub    bl,dl
  423d15:	repz xchg edx,eax
  423d17:	push   ebx
  423d18:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d1e:	das    
  423d1f:	pop    ecx
  423d20:	dec    esp
  423d21:	mov    ch,cl
  423d23:	push   es
  423d24:	mov    WORD PTR [eax],es
  423d26:	add    BYTE PTR [eax],al
  423d28:	int    0x17
  423d2a:	mov    WORD PTR [eax],es
  423d2c:	add    BYTE PTR [eax],al
  423d2e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d31:	aad    0xd3
  423d33:	lods   eax,DWORD PTR ds:[esi]
  423d34:	sub    bl,dl
  423d36:	repz xchg edx,eax
  423d38:	push   ebx
  423d39:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d3f:	loope  0x423d7c
  423d41:	jge    0x423d4c
  423d43:	(bad)  
  423d44:	loope  0x423d13
  423d46:	ins    DWORD PTR es:[edi],dx
  423d47:	retf   0xe176
  423d4a:	int    0x8d
  423d4c:	icebp  
  423d4d:	int    0x96
  423d4f:	icebp  
  423d50:	cmp    ecx,DWORD PTR [edi]
  423d52:	cmp    edx,ebp
  423d54:	shl    ebx,cl
  423d56:	xchg   edx,eax
  423d57:	shl    edx,cl
  423d59:	sub    BYTE PTR [ebx+0x13],dl
  423d5c:	int    0x96
  423d5e:	jge    0x423d8f
  423d60:	rcl    DWORD PTR [ebx],1
  423d62:	int    0x96
  423d64:	pop    ebp
  423d65:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d6c:	icebp  
  423d6d:	int    0x8d
  423d6f:	icebp  
  423d70:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d73:	or     al,0xd3
  423d75:	lods   eax,DWORD PTR ds:[esi]
  423d76:	sub    bl,dl
  423d78:	jmp    0x423d0c
  423d7a:	push   ebx
  423d7b:	ror    ebp,cl
  423d7d:	lea    edi,[ebp+0x2f]
  423d80:	rcl    ebx,1
  423d82:	int    0x8d
  423d84:	pop    ebp
  423d85:	retf   0x8884
  423d88:	or     DWORD PTR [esi-0x1f],esi
  423d8b:	int    0x6d
  423d8d:	int    0x76
  423d8f:	icebp  
  423d90:	int    0x8d
  423d92:	icebp  
  423d93:	cmp    edi,DWORD PTR [ecx-0x2d]
  423d96:	lods   eax,DWORD PTR ds:[esi]
  423d97:	sub    BYTE PTR [ebx],bh
  423d99:	or     al,0xd3
  423d9b:	jmp    0x423d2f
  423d9d:	push   ebx
  423d9e:	ror    ebp,cl
  423da0:	lea    edi,[ebp+0x2f]
  423da3:	rcl    ebx,1
  423da5:	int    0x8d
  423da7:	ins    DWORD PTR es:[edi],dx
  423da8:	int    0x96
  423daa:	ins    DWORD PTR es:[edi],dx
  423dab:	cmp    ecx,DWORD PTR [edi]
  423dad:	cmp    edx,ebp
  423daf:	shl    edx,cl
  423db1:	sub    bl,dl
  423db3:	repz xchg edx,eax
  423db5:	push   ebx
  423db6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dbc:	das    
  423dbd:	pop    ecx
  423dbe:	dec    esp
  423dbf:	mov    ch,cl
  423dc1:	push   es
  423dc2:	jl     0x423dc4
  423dc4:	add    BYTE PTR [eax],al
  423dc6:	int    0x17
  423dc8:	jl     0x423dca
  423dca:	add    BYTE PTR [eax],al
  423dcc:	cmp    edi,DWORD PTR [ecx+0x3b]
  423dcf:	aad    0xd3
  423dd1:	lods   eax,DWORD PTR ds:[esi]
  423dd2:	sub    bl,dl
  423dd4:	repz xchg edx,eax
  423dd6:	push   ebx
  423dd7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423ddd:	loope  0x423e1a
  423ddf:	jge    0x423dea
  423de1:	(bad)  
  423de2:	loope  0x423db1
  423de4:	ins    DWORD PTR es:[edi],dx
  423de5:	retf   0xe176
  423de8:	int    0x8d
  423dea:	icebp  
  423deb:	int    0x96
  423ded:	icebp  
  423dee:	cmp    ecx,DWORD PTR [edi]
  423df0:	cmp    edx,ebp
  423df2:	shl    ebx,cl
  423df4:	xchg   edx,eax
  423df5:	shl    edx,cl
  423df7:	sub    BYTE PTR [ebx+0x13],dl
  423dfa:	int    0x96
  423dfc:	jge    0x423e2d
  423dfe:	rcl    DWORD PTR [ebx],1
  423e00:	int    0x96
  423e02:	pop    ebp
  423e03:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e0a:	and    eax,0x3b258dcd
  423e0f:	or     al,0x3b
  423e11:	jns    0x423de6
  423e13:	jmp    0x423da7
  423e15:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e1b:	lea    ebp,[ebp-0x33]
  423e1e:	xchg   esi,eax
  423e1f:	ins    DWORD PTR es:[edi],dx
  423e20:	cmp    ecx,DWORD PTR [edi]
  423e22:	cmp    edx,ebp
  423e24:	shl    edx,cl
  423e26:	sub    bl,dl
  423e28:	repz xchg edx,eax
  423e2a:	push   ebx
  423e2b:	adc    ebp,DWORD PTR [edi]
  423e2d:	rcl    ebx,1
  423e2f:	xchg   DWORD PTR [esi+0x7d],esi
  423e32:	or     dh,BYTE PTR [esi+0x7d]
  423e35:	int    0x76
  423e37:	jge    0x423e06
  423e39:	lea    ecx,ds:0xb2f7d43
  423e3f:	(bad)  
  423e40:	inc    DWORD PTR [eax]
  423e42:	add    ch,cl
  423e44:	jbe    0x423eb3
  423e46:	int    0x8d
  423e48:	ins    DWORD PTR es:[edi],dx
  423e49:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e4c:	jmp    0x423de0
  423e4e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e51:	lods   eax,DWORD PTR ds:[esi]
  423e52:	sub    BYTE PTR [ebx-0x2d],dl
  423e55:	int    0x8d
  423e57:	or     eax,0xcdd3d12f
  423e5c:	lea    edi,ds:0xf2d30f3b
  423e62:	sub    BYTE PTR [ebx-0x2d],dl
  423e65:	int    0x8d
  423e67:	cmp    eax,0xebd30c3b
  423e6c:	xchg   edx,eax
  423e6d:	push   ebx
  423e6e:	ror    DWORD PTR [edx],cl
  423e70:	jbe    0x423ed7
  423e72:	int    0x76
  423e74:	popf   
  423e75:	int    0x8d
  423e77:	popf   
  423e78:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e7b:	jmp    0x423e0f
  423e7d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e80:	lods   eax,DWORD PTR ds:[esi]
  423e81:	sub    BYTE PTR [ebx-0x2d],dl
  423e84:	int    0x8d
  423e86:	popf   
  423e87:	int    0x96
  423e89:	popf   
  423e8a:	cmp    ecx,DWORD PTR [edi]
  423e8c:	shl    edx,cl
  423e8e:	sub    BYTE PTR [ebx],bh
  423e90:	aad    0xd3
  423e92:	repz xchg edx,eax
  423e94:	push   ebx
  423e95:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423e9b:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423ea1:	in     al,dx
  423ea2:	sbb    al,0xcd
  423ea4:	jbe    0x423e43
  423ea6:	int    0x8d
  423ea8:	popf   
  423ea9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423eac:	or     al,0xd3
  423eae:	lods   eax,DWORD PTR ds:[esi]
  423eaf:	sub    bl,dl
  423eb1:	jmp    0x423e45
  423eb3:	push   ebx
  423eb4:	rol    DWORD PTR [edi+0x760a4576],cl
  423eba:	inc    ebp
  423ebb:	int    0x76
  423ebd:	popf   
  423ebe:	int    0x8d
  423ec0:	popf   
  423ec1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ec4:	lods   eax,DWORD PTR ds:[esi]
  423ec5:	sub    BYTE PTR [ebx],bh
  423ec7:	or     al,0xd3
  423ec9:	jmp    0x423e5d
  423ecb:	push   ebx
  423ecc:	ror    ebp,cl
  423ece:	lea    ebx,ds:0x76cd7d33
  423ed4:	popf   
  423ed5:	int    0x96
  423ed7:	popf   
  423ed8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423edb:	aad    0xd3
  423edd:	repz xchg edx,eax
  423edf:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ee5:	xchg   esi,eax
  423ee6:	inc    ebp
  423ee7:	das    
  423ee8:	rcl    edx,1
  423eea:	inc    ebx
  423eeb:	shr    DWORD PTR [edi],cl
  423eed:	pop    es
  423eee:	adc    ebp,edi
  423ef0:	add    BYTE PTR [eax],al
  423ef2:	int    0x76
  423ef4:	mov    BYTE PTR [eax],al
  423ef6:	(bad)  
  423ef7:	dec    esp
  423ef8:	iret   
  423ef9:	jbe    0x423eb8
  423efb:	add    dh,dl
  423efd:	mov    BYTE PTR [eax-0x33],dh
  423f00:	jbe    0x423e8a
  423f02:	int    0x1
  423f04:	xchg   ebp,eax
  423f05:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f0f:	icebp  
  423f10:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f1a:	jne    0x423ed9
  423f1c:	test   al,0x88
  423f1e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f25:	stc    
  423f26:	int    0x8d
  423f28:	stc    
  423f29:	cmp    eax,ebp
  423f2b:	cmp    ecx,DWORD PTR [edi]
  423f2d:	shl    edx,cl
  423f2f:	sub    bl,dl
  423f31:	mov    ebp,0xcdd35392
  423f36:	lea    esi,[ebp+0x43]
  423f39:	rcl    esp,cl
  423f3b:	push   esi
  423f3c:	int    0x76
  423f3e:	mov    ch,cl
  423f40:	lea    ebp,ds:0xcd2d96cd
  423f46:	add    DWORD PTR [ecx],edx
  423f48:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f52:	shr    edx,cl
  423f54:	sub    BYTE PTR [ebx+0x13],dl
  423f57:	jno    0x423f26
  423f59:	(bad)  
  423f5a:	stc    
  423f5b:	int    0x96
  423f5d:	stc    
  423f5e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f61:	cdq    
  423f62:	shr    ebx,cl
  423f64:	xchg   edx,eax
  423f65:	shr    edx,cl
  423f67:	sub    BYTE PTR [ebx+0x13],dl
  423f6a:	jno    0x423f6c
  423f6c:	(bad)  
  423f6d:	jne    0x423f6f
  423f6f:	jo     0x423f8d
  423f71:	stos   BYTE PTR es:[edi],al
  423f72:	test   al,0x63
  423f74:	retf   
  423f75:	ror    BYTE PTR [eax-0x12326980],cl
  423f7b:	add    al,0xed
  423f7d:	and    al,0x98
  423f7f:	int    0x11
  423f81:	int    0x12
  423f83:	sub    eax,0x4808081
  423f88:	pop    esp
  423f89:	sub    BYTE PTR [edi],0x5
  423f8c:	dec    edx
  423f8d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423f97:	add    BYTE PTR [esi],0xf7
  423f9a:	das    
  423f9b:	add    eax,0x80808003
  423fa0:	int    0x7
  423fa2:	or     DWORD PTR [eax+0x6d068080],eax
  423fa8:	das    
  423fa9:	add    eax,0x808080e9
  423fae:	add    al,0x69
  423fb0:	int3   
  423fb1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423fb8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423fbf:	add    eax,0x808080e3
  423fc4:	int    0xc1
  423fc6:	and    eax,0x4808081
  423fcb:	mov    dh,0x11
  423fcd:	or     ch,0x13
  423fd0:	xor    ecx,DWORD PTR [esi-0x79]
  423fd3:	shr    BYTE PTR [edi],cl
  423fd5:	mov    ebx,0x8d0a4c70
  423fda:	mov    ch,0x2f
  423fdc:	mov    ebx,0x13874e7c
  423fe1:	das    
  423fe2:	add    eax,0x80808049
  423fe7:	iret   
  423fe8:	jl     0x423ffe
  423fea:	pop    ebx
  423feb:	or     cl,BYTE PTR [ebp+0x69bd]
  423ff1:	add    BYTE PTR [ebx-0x2baef966],al
  423ff7:	or     ebp,0x31
  423ffa:	add    al,0xb6
  423ffc:	cmc    
  423ffd:	sub    BYTE PTR [ebx],0x99
  424000:	xchg   ecx,esi
  424002:	das    
  424003:	mov    ebx,0xbb2f4ee0
  424008:	mov    al,ds:0xd4fc874c
  42400d:	mov    esi,0xa148acf
  424012:	(bad)  
  424013:	in     eax,dx
  424014:	push   es
  424015:	push   ecx
  424016:	aam    0x6e
  424018:	int    0x89
  42401a:	add    al,0xb6
  42401c:	stc    
  42401d:	sub    BYTE PTR [ebx],0xf
  424020:	xchg   DWORD PTR [ebp+0x2f],edi
  424023:	mov    ebx,0xbb2f4ede
  424028:	sahf   
  424029:	dec    esp
  42402a:	xchg   esp,edi
  42402c:	aam    0x33
  42402e:	iret   
  42402f:	ficom  WORD PTR [edx+ecx*1]
  424032:	out    0xfd,al
  424034:	int    0xe6
  424036:	std    
  424037:	int    0x6a
  424039:	push   es
  42403a:	add    ah,dl
  42403c:	xchg   ch,cl
  42403e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42403f:	mov    ch,0x81
  424041:	and    al,0x8b
  424043:	das    
  424044:	mov    ebx,0xbb2f4ede
  424049:	sahf   
  42404a:	dec    esp
  42404b:	add    BYTE PTR [esi-0x7],dh
  42404e:	add    al,0x76
  424050:	std    
  424051:	mov    BYTE PTR [edi-0x619a104],al
  424057:	sbb    ch,0x2f
  42405a:	mov    ebx,0xbb2f4ee0
  42405f:	mov    al,ds:0xed8dcd4c
  424064:	add    BYTE PTR [esi-0xb],dh
  424067:	add    al,0xd3
  424069:	mov    BYTE PTR [edi-0x1272f504],al
  42406f:	pop    esi
  424070:	out    0xf5,al
  424072:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424079:	jo     0x4240c9
  42407b:	das    
  42407c:	mov    ebx,0x76004cdc
  424081:	adc    DWORD PTR [ebx+edx*8],eax
  424084:	mov    BYTE PTR [edi-0x4272f527],al
  42408a:	pop    esi
  42408b:	xchg   esi,eax
  42408c:	adc    DWORD PTR [edi],ebp
  42408e:	or     ebp,DWORD PTR [esi-0x56000000]
  424094:	arpl   WORD PTR [ebx],di
  424096:	ins    DWORD PTR es:[edi],dx
  424097:	ins    BYTE PTR es:[edi],dx
  424098:	in     al,dx
  424099:	xchg   edx,eax
  42409a:	cmp    ebp,DWORD PTR [ebp-0x58]
  42409d:	retf   
  42409e:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240a4:	sub    eax,0xcd808081
  4240a9:	jbe    0x4240f7
  4240ab:	add    al,0xed
  4240ad:	xor    BYTE PTR [ebx+0x3b],bl
  4240b0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240b6:	add    eax,0x8080800b
  4240bb:	inc    ebx
  4240bc:	(bad)
  4240bf:	pop    esi
  4240c0:	pushf  
  4240c1:	(bad)  
  4240c3:	test   DWORD PTR [ebx],edi
  4240c5:	ins    DWORD PTR es:[edi],dx
  4240c6:	ins    BYTE PTR es:[edi],dx
  4240c7:	in     al,dx
  4240c8:	fmul   st,st(5)
  4240ca:	ins    BYTE PTR es:[edi],dx
  4240cb:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240d1:	and    al,0xcd
  4240d3:	jo     0x424109
  4240d5:	int    0x90
  4240d7:	adc    al,0xcd
  4240d9:	fcomp  QWORD PTR [edi+eax*4]
  4240dc:	lea    ecx,[eax+0xa889687]
  4240e2:	(bad)  
  4240e3:	std    
  4240e4:	inc    ebx
  4240e5:	clc    
  4240e6:	jnp    0x42406f
  4240e8:	or     ah,dh
  4240ea:	std    
  4240eb:	or     ah,BYTE PTR [esi-0x259a107]
  4240f1:	fsub   st,st(3)
  4240f3:	inc    ebx
  4240f4:	pushf  
  4240f5:	adc    al,0x77
  4240f7:	xchg   BYTE PTR [edi],ch
  4240f9:	mov    ebx,0x92eca054
  4240fe:	int    0xf4
  424100:	iret   
  424101:	push   esp
  424102:	ror    ebp,0x68
  424105:	push   es
  424106:	add    ah,dl
  424108:	ds xchg esi,esp
  42410b:	mov    BYTE PTR [edx],cl
  42410d:	out    0x11,al
  42410f:	inc    ebx
  424110:	stc    
  424111:	fdiv   DWORD PTR [eax]
  424113:	int    0xa6
  424115:	dec    esp
  424116:	int    0x63
  424118:	in     al,0x87
  42411a:	popf   
  42411b:	inc    ebx
  42411c:	cld    
  42411d:	ja     0x4240a3
  42411f:	int    0x58
  424121:	in     al,dx
  424122:	mov    BYTE PTR [ebx],dh
  424124:	out    0x88,al
  424126:	or     ch,BYTE PTR [eax-0x33]
  424129:	(bad)  
  42412a:	adc    DWORD PTR [esi],eax
  42412c:	not    esp
  42412e:	dec    esi
  42412f:	int    0xa6
  424131:	stc    
  424132:	dec    ebx
  424133:	or     ah,BYTE PTR [esi-0x259bc07]
  424139:	sbb    BYTE PTR [ebp-0x14],0x8
  42413d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424140:	test   al,0x63
  424142:	retf   
  424143:	ror    BYTE PTR [eax-0x12326980],cl
  424149:	add    al,0xed
  42414b:	push   eax
  42414c:	pop    ebx
  42414d:	cwde   
  42414e:	pop    ebp
  42414f:	dec    ecx
  424150:	and    DWORD PTR [esi-0x289f5cb],eax
  424156:	leave  
  424157:	jbe    0x424152
  424159:	inc    ecx
  42415a:	and    DWORD PTR [esi-0x27232cb],eax
  424160:	int    0xa6
  424162:	std    
  424163:	call   0x3b81:0x90cfffc0
  42416a:	psrlq  mm5,mm3
  42416d:	xchg   edx,eax
  42416e:	stos   BYTE PTR es:[edi],al
  42416f:	cmp    esp,ecx
  424171:	shl    ebp,cl
  424173:	sub    BYTE PTR [ebx+0xc],dl
  424176:	or     cl,BYTE PTR [ebp-0x2723243]
  42417c:	int    0x8d
  42417e:	std    
  42417f:	int    0x8d
  424181:	std    
  424182:	int    0x8d
  424184:	std    
  424185:	int    0x8d
  424187:	std    
  424188:	int    0x8d
  42418a:	std    
  42418b:	int    0x8d
  42418d:	std    
  42418e:	int    0x8d
  424190:	std    
  424191:	int    0x8d
  424193:	std    
  424194:	int    0x8d
  424196:	std    
  424197:	leave  
  424198:	jbe    0x4241ab
  42419a:	fadd   st,st(5)
  42419c:	loope  0x4241f3
  42419e:	int    0x8d
  4241a0:	std    
  4241a1:	int    0xa6
  4241a3:	std    
  4241a4:	cmp    esp,ecx
  4241a6:	cmp    ecx,DWORD PTR [edi]
  4241a8:	shl    ebp,cl
  4241aa:	sub    bl,dl
  4241ac:	jmp    0x424140
  4241ae:	push   ebx
  4241af:	or     al,0xcd
  4241b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241b2:	dec    esp
  4241b3:	int    0x9f
  4241b5:	sub    eax,0x43808081
  4241ba:	push   ebx
  4241bb:	das    
  4241bc:	add    eax,0x80808717
  4241c1:	int    0x8d
  4241c3:	std    
  4241c4:	int    0xa6
  4241c6:	std    
  4241c7:	cmp    ecx,DWORD PTR [edi]
  4241c9:	cmp    esp,ecx
  4241cb:	shr    ebx,cl
  4241cd:	xchg   edx,eax
  4241ce:	shl    ebp,cl
  4241d0:	sub    BYTE PTR [ebx+0xc],dl
  4241d3:	inc    ebx
  4241d4:	adc    ebp,DWORD PTR [edi]
  4241d6:	add    eax,0x8080877f
  4241db:	int    0xca
  4241dd:	add    DWORD PTR [eax-0x69327f80],eax
  4241e3:	std    
  4241e4:	int    0xa6
  4241e6:	std    
  4241e7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241ed:	xchg   edx,eax
  4241ee:	shl    ebp,cl
  4241f0:	sub    BYTE PTR [ebx-0x2b],dl
  4241f3:	inc    ebx
  4241f4:	adc    ebp,DWORD PTR [edi]
  4241f6:	add    eax,0x8080875b
  4241fb:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424201:	int    0xf1
  424203:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424209:	shl    ebx,cl
  42420b:	xchg   edx,eax
  42420c:	shl    ebp,cl
  42420e:	sub    BYTE PTR [ebx-0x2b],dl
  424211:	or     dl,BYTE PTR [esi+0x1196cd11]
  424217:	inc    ebx
  424218:	icebp  
  424219:	aam    0x26
  42421b:	int    0x76
  42421d:	std    
  42421e:	int    0x96
  424220:	std    
  424221:	cmp    ebx,ecx
  424223:	cmp    edi,DWORD PTR [ecx-0x2d]
  424226:	jmp    0xd253:0x92bdd328
  42422d:	int    0x96
  42422f:	adc    DWORD PTR [ebx-0x26],esi
  424232:	adc    al,0x5e
  424234:	test   BYTE PTR [edx-0x2a],cl
  424237:	xor    cl,ch
  424239:	jbe    0x424238
  42423b:	int    0x96
  42423d:	std    
  42423e:	cmp    ebx,ecx
  424240:	cmp    edi,DWORD PTR [ecx-0x2d]
  424243:	jmp    0xd253:0x92bdd328
  42424a:	int    0x96
  42424c:	adc    DWORD PTR [ebx-0x26],esi
  42424f:	adc    al,0x5e
  424251:	je     0x42429d
  424253:	xor    BYTE PTR [edi],ch
  424255:	add    eax,0x808092df
  42425a:	int    0x76
  42425c:	std    
  42425d:	int    0x76
  42425f:	std    
  424260:	int    0xa6
  424262:	std    
  424263:	int    0x76
  424265:	std    
  424266:	cmp    ecx,ecx
  424268:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42426e:	in     al,dx
  42426f:	xchg   edx,eax
  424270:	push   ebx
  424271:	popf   
  424272:	int    0x76
  424274:	adc    DWORD PTR [ebx+0x6d],esi
  424277:	adc    al,0x87
  424279:	ror    ebp,cl
  42427b:	jl     0x4242ad
  42427d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424283:	int    0x8d
  424285:	std    
  424286:	int    0x96
  424288:	std    
  424289:	cmp    ecx,DWORD PTR [edi]
  42428b:	cmp    ebx,ecx
  42428d:	shr    ebx,cl
  42428f:	xchg   edx,eax
  424290:	shr    edx,cl
  424292:	sub    BYTE PTR [ebx+0x13],dl
  424295:	int    0x96
  424297:	std    
  424298:	or     cl,BYTE PTR [ebp+0xa88cd95]
  42429e:	lea    esi,[ebp+0x3bfd8dcd]
  4242a4:	cdq    
  4242a5:	cmp    esi,eax
  4242a7:	shl    edx,cl
  4242a9:	sub    bl,dl
  4242ab:	repz xchg edx,eax
  4242ad:	push   ebx
  4242ae:	jecxz  0x42427d
  4242b0:	lea    esi,[ebp-0x792becbd]
  4242b6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242bc:	int    0x8d
  4242be:	std    
  4242bf:	int    0x96
  4242c1:	std    
  4242c2:	cmp    ecx,DWORD PTR [edi]
  4242c4:	cmp    ebx,ecx
  4242c6:	shr    ebx,cl
  4242c8:	xchg   edx,eax
  4242c9:	shr    edx,cl
  4242cb:	sub    BYTE PTR [ebx+0x13],dl
  4242ce:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242d2:	jbe    0x424271
  4242d4:	popa   
  4242d5:	and    DWORD PTR [esi-0x777278cb],eax
  4242db:	or     cl,BYTE PTR [ebp-0x32781313]
  4242e1:	(bad)  
  4242e2:	in     eax,dx
  4242e3:	int    0x76
  4242e5:	dec    esp
  4242e6:	int    0x1
  4242e8:	adc    DWORD PTR [ecx+0x718080],eax
  4242ee:	xor    ch,cl
  4242f0:	jbe    0x42433e
  4242f2:	add    dh,dl
  4242f4:	in     eax,dx
  4242f5:	int    0x1
  4242f7:	adc    DWORD PTR [ecx+0x70008080],eax
  4242fd:	dec    esp
  4242fe:	leave  
  4242ff:	jbe    0x4242a6
  424301:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424308:	dec    edx
  424309:	pop    ss
  42430a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424310:	xchg   esi,eax
  424311:	std    
  424312:	cmp    ecx,DWORD PTR [edi]
  424314:	cmp    ebx,ecx
  424316:	shr    ebx,cl
  424318:	xchg   edx,eax
  424319:	shr    edx,cl
  42431b:	sub    BYTE PTR [ebx+0x13],dl
  42431e:	or     dh,BYTE PTR [esi-0x4b]
  424321:	inc    ebx
  424322:	jge    0x4242fa
  424324:	pop    eax
  424325:	int    0x76
  424327:	stc    
  424328:	int    0x8d
  42432a:	stc    
  42432b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42432e:	lock shl edx,cl
  424331:	sub    bl,dl
  424333:	mov    ebp,0xcdd35392
  424338:	lea    esp,[ebp+0x3ba596cd]
  42433e:	fnstcw WORD PTR [ebx]
  424340:	psrlq  mm5,mm2
  424343:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424349:	int    0x1
  42434b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424351:	xchg   edx,eax
  424352:	push   ebx
  424353:	jecxz  0x424384
  424355:	rcl    ebp,1
  424357:	bound  eax,QWORD PTR [eax]
  424359:	jo     0x42438f
  42435b:	int    0x76
  42435d:	std    
  42435e:	int    0x8d
  424360:	std    
  424361:	cmp    edi,DWORD PTR [ecx+0x3b]
  424364:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42436b:	push   ebx
  42436c:	rol    DWORD PTR [ebx+0x76],cl
  42436f:	mov    ch,0xd6
  424371:	and    ch,cl
  424373:	jbe    0x424312
  424375:	int    0x8d
  424377:	popf   
  424378:	cmp    esi,eax
  42437a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42437d:	mov    ebp,0x28f2d392
  424382:	push   ebx
  424383:	jge    0x4243c8
  424385:	fld    TBYTE PTR [edi]
  424387:	pop    es
  424388:	xchg   esp,eax
  424389:	add    BYTE PTR [eax],al
  42438b:	add    ch,cl
  42438d:	jbe    0x42438c
  42438f:	int    0x8d
  424391:	std    
  424392:	cmp    edi,DWORD PTR [ecx+0x3b]
  424395:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42439c:	push   ebx
  42439d:	rol    DWORD PTR [ebx+0x76],cl
  4243a0:	mov    ch,0xd6
  4243a2:	and    ch,cl
  4243a4:	jbe    0x42439f
  4243a6:	int    0x8d
  4243a8:	stc    
  4243a9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243ac:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243b3:	push   ebx
  4243b4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243ba:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243c4:	leave  
  4243c5:	jbe    0x4243bc
  4243c7:	fdivr  st,st(4)
  4243c9:	sbb    al,0xb
  4243cb:	int    0xa6
  4243cd:	std    
  4243ce:	int    0x76
  4243d0:	std    
  4243d1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243d7:	xchg   edx,eax
  4243d8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243de:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243e4:	std    
  4243e5:	int    0x8d
  4243e7:	std    
  4243e8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243eb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243f2:	push   ebx
  4243f3:	ror    DWORD PTR [edx],cl
  4243f5:	jbe    0x4243e4
  4243f7:	int    0x76
  4243f9:	std    
  4243fa:	int    0x8d
  4243fc:	std    
  4243fd:	cmp    edi,DWORD PTR [ecx+0x3b]
  424400:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424407:	push   ebx
  424408:	ror    DWORD PTR [edx],cl
  42440a:	jbe    0x424401
  42440c:	int    0x8d
  42440e:	std    
  42440f:	int    0x76
  424411:	std    
  424412:	cmp    ecx,DWORD PTR [edi]
  424414:	cmp    ecx,ecx
  424416:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42441c:	push   ebx
  42441d:	jge    0x4243ec
  42441f:	jbe    0x4243b6
  424421:	inc    ebx
  424422:	jge    0x4243f8
  424424:	xchg   ch,cl
  424426:	test   BYTE PTR ds:0xcded760a,bl
  42442c:	jbe    0x4243db
  42442e:	int    0x84
  424430:	sbb    eax,0xcdf5760a
  424435:	jbe    0x424434
  424437:	int    0x8d
  424439:	std    
  42443a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42443d:	lock shl edx,cl
  424440:	sub    bl,dl
  424442:	mov    ebp,0xcdd35392
  424447:	(bad)  
  424448:	in     eax,dx
  424449:	inc    ebx
  42444a:	rcl    esp,cl
  42444c:	push   esp
  42444d:	int    0x76
  42444f:	std    
  424450:	int    0x8d
  424452:	std    
  424453:	cmp    esi,eax
  424455:	cmp    edi,DWORD PTR [ecx-0x2d]
  424458:	repnz sub bl,dl
  42445b:	mov    ebp,0xcdd35392
  424460:	(bad)  
  424461:	in     eax,dx
  424462:	shr    ebx,cl
  424464:	sub    al,BYTE PTR [ebx-0x2d]
  424467:	aam    0x1c
  424469:	int    0x8d
  42446b:	in     eax,dx
  42446c:	int    0x76
  42446e:	dec    esp
  42446f:	int    0x1
  424471:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424477:	retf   
  424478:	jno    0x42447a
  42447a:	(bad)  
  42447b:	mov    ch,0x0
  42447d:	jo     0x424407
  42447f:	in     al,dx
  424480:	push   ds
  424481:	int    0x76
  424483:	cmc    
  424484:	xchg   DWORD PTR [esi-0x78],esi
  424487:	int    0x8d
  424489:	dec    esp
  42448a:	int    0xa
  42448c:	adc    DWORD PTR [ecx+0x6d048080],eax
  424492:	xchg   edx,eax
  424493:	jo     0x424495
  424495:	(bad)  
  424496:	mov    ch,0x0
  424498:	jno    0x424422
  42449a:	or     dh,BYTE PTR [esi-0xb]
  42449d:	int    0x76
  42449f:	std    
  4244a0:	int    0x8d
  4244a2:	std    
  4244a3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244a6:	lock shl edx,cl
  4244a9:	sub    bl,dl
  4244ab:	mov    ebp,0xcdd35392
  4244b0:	(bad)  
  4244b1:	cmc    
  4244b2:	inc    ebx
  4244b3:	ror    ebp,cl
  4244b5:	jbe    0x4244b0
  4244b7:	int    0x8d
  4244b9:	stc    
  4244ba:	(bad)  
  4244bb:	xor    DWORD PTR [ebx],edi
  4244bd:	jns    0x4244fa
  4244bf:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244c6:	push   ebx
  4244c7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244cd:	cmp    esi,eax
  4244cf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244d2:	repnz sub bl,dl
  4244d5:	mov    ebp,0xcdd35392
  4244da:	(bad)  
  4244db:	cmc    
  4244dc:	das    
  4244dd:	rcl    ebx,1
  4244df:	int    0x8d
  4244e1:	lods   eax,DWORD PTR ds:[esi]
  4244e2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244e9:	(bad)  
  4244ea:	stc    
  4244eb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244ee:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244f5:	push   ebx
  4244f6:	rol    DWORD PTR [edi-0x2893263],cl
  4244fc:	int    0x8d
  4244fe:	std    
  4244ff:	cmp    esi,eax
  424501:	cmp    edi,DWORD PTR [ecx-0x2d]
  424504:	repnz sub bl,dl
  424507:	mov    ebp,0xcdd35392
  42450c:	lea    ebp,[ebp+0x2f1f845e]
  424512:	push   es
  424513:	or     al,0xff
  424515:	add    BYTE PTR [eax],al
  424517:	int    0x76
  424519:	adc    ebp,ecx
  42451b:	lea    edx,[ecx]
  42451d:	ins    BYTE PTR es:[edi],dx
  42451e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424524:	test   BYTE PTR [eax-0x2cac7f80],al
  42452a:	int    0x8d
  42452c:	icebp  
  42452d:	push   esi
  42452e:	dec    ecx
  42452f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424535:	add    BYTE PTR [eax],al
  424537:	int    0x76
  424539:	std    
  42453a:	int    0x8d
  42453c:	std    
  42453d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424540:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424547:	push   ebx
  424548:	rcr    DWORD PTR [esi+0x76],cl
  42454b:	mov    ebp,0x76cd88d6
  424550:	stc    
  424551:	int    0x8d
  424553:	stc    
  424554:	in     al,dx
  424555:	xchg   ch,cl
  424557:	jbe    0x424556
  424559:	int    0x8d
  42455b:	std    
  42455c:	cmp    esi,eax
  42455e:	cmp    edi,DWORD PTR [ecx-0x56]
  424561:	shl    edx,cl
  424563:	sub    bl,dl
  424565:	mov    ebp,0xd353a892
  42456a:	arpl   bx,cx
  42456c:	ror    BYTE PTR [eax-0x12326980],cl
  424572:	add    al,0xed
  424574:	xor    al,0xc9
  424576:	jbe    0x424575
  424578:	dec    ecx
  424579:	and    DWORD PTR [esi-0x528936cb],eax
  42457f:	inc    ecx
  424580:	and    DWORD PTR [esi+0x4c76cd35],eax
  424586:	or     dh,BYTE PTR [esi+0x4c]
  424589:	cwde   
  42458a:	int    0x6d
  42458c:	int    0x76
  42458e:	std    
  42458f:	int    0x96
  424591:	std    
  424592:	sar    bh,0x5f
  424595:	shl    DWORD PTR [ecx],1
  424597:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  42459d:	cdq    
  42459e:	shr    edx,cl
  4245a0:	sub    bl,dl
  4245a2:	mov    ebp,0xcdd25392
  4245a7:	xchg   esi,eax
  4245a8:	mov    BYTE PTR [ebx-0xf],al
  4245ab:	das    
  4245ac:	add    eax,0x80808159
  4245b1:	int    0x76
  4245b3:	mov    ch,cl
  4245b5:	xchg   esi,eax
  4245b6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245bc:	xchg   esi,eax
  4245bd:	cmc    
  4245be:	leave  
  4245bf:	jbe    0x4245ba
  4245c1:	popa   
  4245c2:	and    DWORD PTR [esi-0x68932cb],eax
  4245c8:	int    0x96
  4245ca:	stc    
  4245cb:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245d1:	rcl    ebx,cl
  4245d3:	mov    ebp,0xcdd25392
  4245d8:	xchg   esi,eax
  4245d9:	std    
  4245da:	int    0xe6
  4245dc:	std    
  4245dd:	cmp    esp,ebx
  4245df:	cmp    edi,edi
  4245e1:	shr    ecx,cl
  4245e3:	sub    bl,dl
  4245e5:	repz xchg edx,eax
  4245e7:	push   ebx
  4245e8:	fxch   st(5)
  4245ea:	out    0xf5,al
  4245ec:	pop    esi
  4245ed:	xchg   esp,eax
  4245ee:	leave  
  4245ef:	fsubr  QWORD PTR [edi]
  4245f1:	add    eax,0x8080816b
  4245f6:	int    0x96
  4245f8:	cmc    
  4245f9:	int    0x76
  4245fb:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424601:	or     ch,0x96
  424604:	mov    ch,cl
  424606:	out    0xf5,al
  424608:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42460e:	pop    ebx
  42460f:	int    0xa6
  424611:	std    
  424612:	cmp    edi,edx
  424614:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42461a:	in     eax,0x28
  42461c:	push   ebx
  42461d:	cld    
  42461e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424624:	add    eax,0x8080814f
  424629:	int    0x96
  42462b:	std    
  42462c:	int    0xe6
  42462e:	std    
  42462f:	cmp    esp,ebx
  424631:	cmp    edi,edi
  424633:	shl    ebx,cl
  424635:	xchg   edx,eax
  424636:	shr    ecx,cl
  424638:	sub    BYTE PTR [ebx-0x27],dl
  42463b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424641:	mov    dl,0x21
  424643:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424649:	out    0xfd,al
  42464b:	cmp    esp,ebx
  42464d:	cmp    edi,edi
  42464f:	shl    ebx,cl
  424651:	xchg   edx,eax
  424652:	shr    ecx,cl
  424654:	sub    BYTE PTR [ebx-0x27],dl
  424657:	jmp    0x42465b
  424659:	add    BYTE PTR [eax-0x2693280],0xcd
  424660:	(bad)  
  424661:	std    
  424662:	add    al,0xf7
  424664:	(bad)  
  424665:	cmp    esp,ebx
  424667:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42466d:	push   ebx
  42466e:	cdq    
  42466f:	iret   
  424670:	ja     0x42466b
  424672:	jecxz  0x424663
  424674:	inc    ebx
  424675:	cdq    
  424676:	das    
  424677:	add    al,0x21
  424679:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424680:	jo     0x42460a
  424682:	or     dl,dh
  424684:	mov    ch,0x2f
  424686:	mov    ebx,0xea121a
  42468b:	das    
  42468c:	add    BYTE PTR [eax-0x321269f6],0x96
  424693:	in     eax,dx
  424694:	xchg   DWORD PTR [eax],esi
  424696:	int    0xd6
  424698:	in     eax,dx
  424699:	xchg   DWORD PTR [eax-0x2d],edx
  42469c:	repz sub bl,dl
  42469f:	mov    ecx,0x2ffb5392
  4246a4:	mov    ebx,0x4cf3d31a
  4246a9:	adc    dh,bh
  4246ab:	dec    ecx
  4246ac:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246b2:	or     dl,BYTE PTR [esi-0x12693243]
  4246b8:	int    0xd6
  4246ba:	in     eax,dx
  4246bb:	cmp    esp,ebx
  4246bd:	add    al,0xf7
  4246bf:	call   ebx
  4246c1:	repz xchg edx,eax
  4246c3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246c9:	xchg   esi,eax
  4246ca:	mov    BYTE PTR [edx],cl
  4246cc:	xchg   esi,eax
  4246cd:	in     eax,dx
  4246ce:	int    0x96
  4246d0:	dec    esp
  4246d1:	int    0xd6
  4246d3:	dec    esp
  4246d4:	cmp    esp,ebx
  4246d6:	add    al,0xf7
  4246d8:	call   ebx
  4246da:	mov    ecx,0x92f3d328
  4246df:	push   ebx
  4246e0:	cdq    
  4246e1:	int    0xd6
  4246e3:	mov    ebp,0x32d6fb43
  4246e8:	int    0x96
  4246ea:	dec    esp
  4246eb:	int    0xd6
  4246ed:	dec    esp
  4246ee:	cmp    esp,ebx
  4246f0:	add    al,0xf7
  4246f2:	call   ebx
  4246f4:	mov    ecx,0x92f3d328
  4246f9:	push   ebx
  4246fa:	cdq    
  4246fb:	int    0xd6
  4246fd:	mov    ebp,0x88d6fb43
  424702:	int    0x96
  424704:	in     eax,dx
  424705:	int    0xd6
  424707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424708:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42470f:	mov    ch,0x2f
  424711:	push   es
  424712:	xchg   ebx,eax
  424713:	add    BYTE PTR [eax],al
  424715:	add    BYTE PTR [ecx-0x6932ee5a],al
  42471b:	stc    
  42471c:	int    0xd6
  42471e:	stc    
  42471f:	cmp    esp,ebx
  424721:	add    al,0xf7
  424723:	call   ebx
  424725:	mov    ecx,0x92f3d328
  42472a:	push   ebx
  42472b:	cdq    
  42472c:	int    0xd6
  42472e:	adc    ebp,ecx
  424730:	out    0xf5,al
  424732:	inc    ebx
  424733:	aam    0xd9
  424735:	in     al,0x77
  424737:	sub    al,0xcd
  424739:	xchg   esi,eax
  42473a:	std    
  42473b:	int    0xd6
  42473d:	std    
  42473e:	cmp    esp,ebx
  424740:	add    al,0xf7
  424742:	call   ebx
  424744:	repz xchg edx,eax
  424746:	sar    DWORD PTR [ecx+0x53c58728],cl
  42474c:	cdq    
  42474d:	int    0x9c
  42474f:	test   BYTE PTR [ebx-0x1e],al
  424752:	das    
  424753:	push   es
  424754:	test   BYTE PTR [eax],al
  424756:	add    BYTE PTR [eax],al
  424758:	arpl   bp,cx
  42475a:	jbe    0x424709
  42475c:	cmp    edx,ebx
  42475e:	int    0x8d
  424760:	lods   eax,DWORD PTR ds:[esi]
  424761:	add    al,0x2
  424763:	jmp    FWORD PTR [edx+0x76cd4aec]
  424769:	std    
  42476a:	cmp    edx,ebx
  42476c:	int    0x8d
  42476e:	std    
  42476f:	cmp    ecx,DWORD PTR [edi]
  424771:	shl    edx,cl
  424773:	sub    bl,dl
  424775:	mov    ebp,0xa8d35392
  42477a:	retf   
  42477b:	ror    BYTE PTR [eax-0x12326980],cl
  424781:	adc    ch,ch
  424783:	xchg   ebp,eax
  424784:	add    BYTE PTR [eax-0x2893680],0x49
  42478b:	and    DWORD PTR [esi-0x68936cb],eax
  424791:	inc    ecx
  424792:	and    DWORD PTR [esi-0x28932cb],eax
  424798:	int    0x8d
  42479a:	std    
  42479b:	cwde   
  42479c:	call   0x8621:0xd169ffc0
  4247a3:	xor    eax,0xbdd3793b
  4247a8:	xchg   edx,eax
  4247a9:	mov    al,ds:0xf2d3133b
  4247ae:	sub    BYTE PTR [ebx-0x2d],dl
  4247b1:	or     dh,BYTE PTR [esi-0x53]
  4247b4:	int    0x76
  4247b6:	std    
  4247b7:	int    0x8d
  4247b9:	std    
  4247ba:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247bd:	mov    ebp,0xd3133b92
  4247c2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247c6:	or     dh,BYTE PTR [esi-0xf]
  4247c9:	int    0xe6
  4247cb:	and    al,0xcd
  4247cd:	jbe    0x4247bc
  4247cf:	int    0x8d
  4247d1:	in     eax,dx
  4247d2:	cmp    edx,ebx
  4247d4:	or     dh,BYTE PTR [esi-0x13]
  4247d7:	adc    dh,BYTE PTR [esi-0x13]
  4247da:	dec    ecx
  4247db:	mov    al,ds:0x76cd3586
  4247e0:	cmc    
  4247e1:	int    0x8d
  4247e3:	cmc    
  4247e4:	cmp    edx,ebx
  4247e6:	or     dh,BYTE PTR [esi-0xb]
  4247e9:	adc    dh,BYTE PTR [esi-0xb]
  4247ec:	dec    ecx
  4247ed:	lahf   
  4247ee:	xchg   BYTE PTR ds:0xcd1176cd,dh
  4247f4:	lea    edx,[ecx]
  4247f6:	cmp    edx,ebx
  4247f8:	or     dh,BYTE PTR [esi+0x11]
  4247fb:	adc    dh,BYTE PTR [esi+0x11]
  4247fe:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424804:	mov    ch,0xcd
  424806:	lea    esi,[ebp+0x760ad33b]
  42480c:	mov    ch,0x12
  42480e:	jbe    0x4247c5
  424810:	dec    ecx
  424811:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424818:	hlt    
  424819:	mov    esi,DWORD PTR ds:0x68876cd
  42481f:	ins    DWORD PTR es:[edi],dx
  424820:	das    
  424821:	add    eax,0x80808551
  424826:	int    0x76
  424828:	dec    esp
  424829:	push   es
  42482a:	ins    DWORD PTR es:[edi],dx
  42482b:	das    
  42482c:	add    eax,0x80808538
  424831:	int    0x76
  424833:	sbb    al,0x6
  424835:	ins    DWORD PTR es:[edi],dx
  424836:	das    
  424837:	add    eax,0x80808523
  42483c:	int    0x76
  42483e:	and    al,0xcd
  424840:	jbe    0x424866
  424842:	int    0x8d
  424844:	mov    bl,dl
  424846:	mov    ebp,0x39af5692
  42484b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424852:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42485c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42485f:	mov    ebp,0xd3133b92
  424864:	repnz sub BYTE PTR [ebx-0x2d],dl
  424868:	or     dh,BYTE PTR [esi-0xf]
  42486b:	int    0x76
  42486d:	std    
  42486e:	int    0x76
  424870:	std    
  424871:	int    0x76
  424873:	mov    ch,cl
  424875:	lea    ecx,[eax-0x329b8379]
  42487b:	outs   dx,BYTE PTR ds:[esi]
  42487c:	jo     0x424888
  42487e:	lea    esp,[esi+eax*1]
  424881:	ins    DWORD PTR es:[edi],dx
  424882:	das    
  424883:	add    eax,0x808084f0
  424888:	leave  
  424889:	jbe    0x424820
  42488b:	dec    ecx
  42488c:	and    DWORD PTR [eax+0x35],edi
  42488f:	int    0x76
  424891:	xchg   ebp,eax
  424892:	pop    ebx
  424893:	int    0xa6
  424895:	xchg   ebp,eax
  424896:	cmp    edi,DWORD PTR [ecx+0x3b]
  424899:	loop   0x42486e
  42489b:	mov    ebp,0x28e5d392
  4248a0:	push   ebx
  4248a1:	popf   
  4248a2:	or     ah,BYTE PTR [esi-0x289326b]
  4248a8:	int    0x76
  4248aa:	std    
  4248ab:	int    0x8
  4248ad:	sub    eax,0xcd808081
  4248b2:	xor    ch,cl
  4248b4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248b8:	int    0x76
  4248ba:	std    
  4248bb:	int    0x76
  4248bd:	std    
  4248be:	int    0x8
  4248c0:	and    eax,0xcd808081
  4248c5:	sbb    al,0xa
  4248c7:	xchg   esi,eax
  4248c8:	dec    esp
  4248c9:	inc    ebx
  4248ca:	fst    st(6)
  4248cc:	push   0xffffffcd
  4248ce:	(bad)  
  4248cf:	cmc    
  4248d0:	int    0x8
  4248d2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248d8:	lods   eax,DWORD PTR ds:[esi]
  4248d9:	(bad)  
  4248da:	int    0x96
  4248dc:	cmc    
  4248dd:	cmp    ecx,DWORD PTR [edi]
  4248df:	add    al,0xfb
  4248e1:	call   ebx
  4248e3:	jmp    0x424877
  4248e5:	shr    edx,cl
  4248e7:	sub    BYTE PTR [ebx-0x1d],dl
  4248ea:	int    0x8d
  4248ec:	dec    esp
  4248ed:	bound  eax,QWORD PTR [eax]
  4248ef:	xchg   ecx,eax
  4248f0:	jo     0x42494d
  4248f2:	add    BYTE PTR [eax+0x24],dh
  4248f5:	int    0x8d
  4248f7:	dec    esp
  4248f8:	int    0x6e
  4248fa:	xchg   esp,eax
  4248fb:	int    0x7e
  4248fd:	jo     0x424932
  4248ff:	jge    0x424972
  424901:	xchg   ebp,eax
  424903:	jo     0x4248c2
  424905:	dec    esi
  424906:	xchg   BYTE PTR [eax+0x248dcd80],al
  42490c:	int    0x8
  42490e:	xor    eax,0xa808081
  424913:	sbb    al,0x0
  424915:	xchg   ecx,eax
  424916:	xchg   esp,eax
  424917:	add    dh,dl
  424919:	mov    BYTE PTR [ebx-0x43],bl
  42491c:	or     eax,0xcd808084
  424921:	pop    ebx
  424922:	fs xchg ebp,edx
  424925:	das    
  424926:	mov    ebx,0x74cf1452
  42492b:	xor    BYTE PTR [edx+ecx*1],bl
  42492e:	jbe    0x42494c
  424930:	int    0x76
  424932:	std    
  424933:	int    0x8d
  424935:	std    
  424936:	cmp    edi,DWORD PTR [ecx+0x4]
  424939:	add    bh,bh
  42493b:	shl    edx,cl
  42493d:	sub    bl,dl
  42493f:	mov    ebp,0x2fd35392
  424944:	mov    ebx,0x960a868a
  424949:	and    al,0x43
  42494b:	jge    0x42497c
  42494d:	add    eax,0x808080e9
  424952:	int    0x76
  424954:	std    
  424955:	int    0x8d
  424957:	std    
  424958:	cmp    edi,DWORD PTR [ecx+0x4]
  42495b:	add    bh,bh
  42495d:	shl    edx,cl
  42495f:	sub    bl,dl
  424961:	mov    ebp,0xad35392
  424966:	jbe    0x42490d
  424968:	int    0x76
  42496a:	stc    
  42496b:	int    0x8d
  42496d:	stc    
  42496e:	add    al,0x2
  424970:	(bad)  
  424971:	cmp    edi,DWORD PTR [ecx-0x2d]
  424974:	repnz sub bl,dl
  424977:	mov    ebp,0x2fd35392
  42497c:	mov    ebx,0x7d33868a
  424981:	pop    esi
  424982:	lea    esp,[ebp-0x7f2ef7d1]
  424988:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42498f:	mov    BYTE PTR [edx],cl
  424991:	lea    ebx,[esp+ebp*8]
  424994:	xchg   ebp,ecx
  424996:	lea    ebx,[ecx*8+0x31cd5c52]
  42499d:	or     dh,BYTE PTR [esi-0x63]
  4249a0:	jl     0x4249a8
  4249a2:	icebp  
  4249a3:	aam    0x89
  4249a5:	clc    
  4249a6:	icebp  
  4249a7:	sub    edx,edx
  4249a9:	xchg   DWORD PTR [esi-0x63],esi
  4249ac:	in     al,dx
  4249ad:	xchg   edx,eax
  4249ae:	int    0xd2
  4249b0:	jo     0x42497f
  4249b2:	outs   dx,BYTE PTR ds:[esi]
  4249b3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249b9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249bf:	int    0x7c
  4249c1:	mov    BYTE PTR [edx],cl
  4249c3:	lea    ebx,[ebp-0x32027233]
  4249c9:	xchg   esi,eax
  4249ca:	std    
  4249cb:	cmp    ecx,DWORD PTR [edi]
  4249cd:	add    al,0xfb
  4249cf:	call   ebx
  4249d1:	jmp    0x424965
  4249d3:	shr    edx,cl
  4249d5:	sub    BYTE PTR [ebx+0x13],dl
  4249d8:	pop    esi
  4249d9:	lea    ebx,[ebp-0x7232e32c]
  4249df:	mov    BYTE PTR [edi-0x29ffb384],al
  4249e5:	popf   
  4249e6:	int    0x6c
  4249e8:	test   BYTE PTR [ecx-0x79],dh
  4249eb:	lds    esi,FWORD PTR [eax-0x43]
  4249ee:	add    eax,DWORD PTR [edi+0x76cd8080]
  4249f4:	sbb    al,0xcd
  4249f6:	(bad)  
  4249f7:	stc    
  4249f8:	int    0x96
  4249fa:	stc    
  4249fb:	cmp    ecx,DWORD PTR [edi]
  4249fd:	shr    ebx,cl
  4249ff:	xchg   edx,eax
  424a00:	add    al,0xfb
  424a02:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a09:	push   ebx
  424a0a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a10:	and    al,0xa
  424a12:	jbe    0x424a30
  424a14:	int    0x76
  424a16:	stc    
  424a17:	int    0x8d
  424a19:	stc    
  424a1a:	add    al,0x2
  424a1c:	(bad)  
  424a1d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a20:	repnz sub bl,dl
  424a23:	mov    ebp,0xcdd35392
  424a28:	lea    esp,[edi+ebp*1]
  424a2b:	mov    ebx,0x7d33867e
  424a30:	pop    esi
  424a31:	lea    esp,[ebp+0xa4072f]
  424a37:	add    BYTE PTR [eax],al
  424a39:	int    0x8
  424a3b:	and    eax,0x43808081
  424a40:	sbb    al,0xd6
  424a42:	cmp    ecx,ebp
  424a44:	lea    edx,[ecx]
  424a46:	int    0x8
  424a48:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a4e:	lods   eax,DWORD PTR ds:[esi]
  424a4f:	(bad)  
  424a50:	int    0x96
  424a52:	adc    DWORD PTR [ebx],edi
  424a54:	(bad)  
  424a56:	sti    
  424a57:	call   ebx
  424a59:	jmp    0x4249ed
  424a5b:	shr    edx,cl
  424a5d:	sub    BYTE PTR [ebx-0x1d],dl
  424a60:	int    0x8d
  424a62:	dec    esp
  424a63:	bound  eax,QWORD PTR [eax]
  424a65:	xchg   ecx,eax
  424a66:	xchg   esp,eax
  424a67:	pop    ebx
  424a68:	add    BYTE PTR [eax+0x24],dh
  424a6b:	push   es
  424a6c:	ins    DWORD PTR es:[edi],dx
  424a6d:	das    
  424a6e:	add    eax,0x808092d9
  424a73:	int    0x96
  424a75:	and    al,0xcd
  424a77:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a7d:	or     ch,0x7d
  424a80:	cmp    ecx,DWORD PTR [edi]
  424a82:	add    al,0x11
  424a84:	call   ebx
  424a86:	jmp    0x424a1a
  424a88:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a8e:	add    eax,0x808081da
  424a93:	int    0x76
  424a95:	std    
  424a96:	int    0x8d
  424a98:	std    
  424a99:	cmp    edi,DWORD PTR [ecx+0x4]
  424a9c:	add    bh,bh
  424a9e:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424aa4:	push   ebx
  424aa5:	ror    DWORD PTR [edx],cl
  424aa7:	jbe    0x424a66
  424aa9:	pop    ebp
  424aaa:	push   0xcf35869f
  424aaf:	jl     0x424a5e
  424ab1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424ab7:	leave  
  424ab8:	jbe    0x424aff
  424aba:	sbb    BYTE PTR [edi+0x76c93586],bl
  424ac0:	shr    al,1
  424ac2:	lahf   
  424ac3:	xchg   BYTE PTR ds:0xc955760a,dh
  424ac9:	jbe    0x424b38
  424acb:	dec    ecx
  424acc:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ad2:	xchg   esp,eax
  424ad3:	iret   
  424ad4:	inc    ebp
  424ad5:	shl    ebx,cl
  424ad7:	xchg   edx,eax
  424ad8:	adc    bh,bl
  424ada:	scas   eax,DWORD PTR es:[edi]
  424adb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424ae1:	lea    esi,[eax+eax*1+0x0]
  424ae5:	add    BYTE PTR [esi+0x4],ch
  424ae8:	cli    
  424ae9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aef:	xchg   BYTE PTR ds:0x94060a,dh
  424af5:	add    BYTE PTR [eax],al
  424af7:	or     al,BYTE PTR [esi]
  424af9:	mov    esp,0xa000000
  424afe:	jbe    0x424ab0
  424b00:	or     dh,BYTE PTR [esi+0x15]
  424b03:	iret   
  424b04:	outs   dx,BYTE PTR ds:[esi]
  424b05:	std    
  424b06:	iret   
  424b07:	jno    0x424b79
  424b09:	or     dh,BYTE PTR [esi+0x2d]
  424b0c:	or     dh,BYTE PTR [esi+0x35]
  424b0f:	leave  
  424b10:	push   es
  424b11:	jo     0x424b13
  424b13:	add    BYTE PTR [eax],al
  424b15:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b1b:	pushf  
  424b1c:	add    BYTE PTR [eax],al
  424b1e:	add    BYTE PTR [edx],cl
  424b20:	pop    ss
  424b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b22:	add    BYTE PTR [eax],al
  424b24:	add    cl,cl
  424b26:	push   es
  424b27:	lods   al,BYTE PTR ds:[esi]
  424b28:	add    BYTE PTR [eax],al
  424b2a:	add    BYTE PTR [edx-0x61],cl
  424b2d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b33:	add    BYTE PTR [eax],al
  424b35:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b3b:	les    eax,FWORD PTR [eax]
  424b3d:	add    BYTE PTR [eax],al
  424b3f:	popa   
  424b40:	lahf   
  424b41:	xchg   BYTE PTR ds:0x9006c9,dh
  424b47:	add    BYTE PTR [eax],al
  424b49:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b4f:	aam    0x0
  424b51:	add    BYTE PTR [eax],al
  424b53:	call   0xa77d1f7
  424b58:	iret   
  424b59:	fadd   QWORD PTR [eax]
  424b5b:	add    BYTE PTR [eax],al
  424b5d:	leave  
  424b5e:	push   es
  424b5f:	in     al,0x0
  424b61:	add    BYTE PTR [eax],al
  424b63:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b69:	add    ecx,ecx
  424b6b:	jbe    0x424b72
  424b6d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b73:	or     ecx,ecx
  424b75:	jbe    0x424b43
  424b77:	inc    ecx
  424b78:	lahf   
  424b79:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b7f:	jbe    0x424ba6
  424b81:	pusha  
  424b82:	lahf   
  424b83:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b89:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b8f:	int3   
  424b90:	push   es
  424b91:	jo     0x424b93
  424b93:	add    BYTE PTR [eax],al
  424b95:	shr    ebx,cl
  424b97:	xchg   edx,eax
  424b98:	add    DWORD PTR [edx],eax
  424b9a:	scas   eax,DWORD PTR es:[edi]
  424b9b:	or     esp,ecx
  424b9d:	test   DWORD PTR [eax+eax*1+0x0],eax
  424ba1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424ba5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424bab:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424bb5:	add    BYTE PTR [eax-0x7c],dh
  424bb8:	int    0xb3
  424bba:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424bc0:	inc    esp
  424bc1:	add    BYTE PTR [eax],al
  424bc3:	add    BYTE PTR [edx+0x70],ah
  424bc6:	add    BYTE PTR [ecx-0x78],dh
  424bc9:	or     dh,BYTE PTR [esi+0x7d]
  424bcc:	iret   
  424bcd:	jbe    0x424b8c
  424bcf:	jo     0x424b9e
  424bd1:	or     BYTE PTR ds:0x808081,ah
  424bd7:	push   eax
  424bd8:	int    0x76
  424bda:	jge    0x424bdc
  424bdc:	icebp  
  424bdd:	int    0x76
  424bdf:	std    
  424be0:	int    0x8d
  424be2:	std    
  424be3:	cmp    edi,DWORD PTR [ecx+0x4]
  424be6:	add    bh,bh
  424be8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bee:	push   ebx
  424bef:	ror    DWORD PTR [edx],cl
  424bf1:	jbe    0x424c00
  424bf3:	int    0x8d
  424bf5:	std    
  424bf6:	int    0x76
  424bf8:	std    
  424bf9:	cmp    ecx,DWORD PTR [edi]
  424bfb:	add    al,0x11
  424bfd:	call   ebx
  424bff:	lods   eax,DWORD PTR ds:[esi]
  424c00:	sub    bl,dl
  424c02:	jmp    0x424b96
  424c04:	push   ebx
  424c05:	jge    0x424bd4
  424c07:	jbe    0x424bc6
  424c09:	inc    ebx
  424c0a:	rcl    esp,cl
  424c0c:	xchg   esi,eax
  424c0d:	or     dh,BYTE PTR [esi+0x75]
  424c10:	in     al,dx
  424c11:	das    
  424c12:	int    0x80
  424c14:	int    0x8d
  424c16:	jne    0x424c22
  424c18:	jbe    0x424bd7
  424c1a:	int    0x76
  424c1c:	mov    ebp,0x4dd4d343
  424c21:	int    0x70
  424c23:	sbb    al,0xcd
  424c25:	mov    bl,0x25
  424c27:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c31:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c3b:	int    0xb3
  424c3d:	sub    eax,0xcd808081
  424c42:	xchg   esi,eax
  424c43:	dec    esp
  424c44:	int    0x62
  424c46:	cmp    al,0x87
  424c48:	xor    DWORD PTR [edx],ecx
  424c4a:	jo     0x424c70
  424c4c:	int    0x76
  424c4e:	stc    
  424c4f:	int    0x8d
  424c51:	stc    
  424c52:	cmp    edi,DWORD PTR [ecx+0x4]
  424c55:	add    bh,bh
  424c57:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c5d:	push   ebx
  424c5e:	ror    DWORD PTR [edx],cl
  424c60:	jbe    0x424c6f
  424c62:	int    0x96
  424c64:	and    al,0x9a
  424c66:	pop    ebx
  424c67:	mov    ebp,0xf5e2
  424c6c:	push   es
  424c6d:	ins    DWORD PTR es:[edi],dx
  424c6e:	das    
  424c6f:	add    eax,0x80808099
  424c74:	add    dh,dl
  424c76:	and    al,0xcd
  424c78:	lock pop ebx
  424c7a:	mov    ebp,0xf52c
  424c7f:	push   es
  424c80:	ins    DWORD PTR es:[edi],dx
  424c81:	das    
  424c82:	add    eax,0x808080c5
  424c87:	int    0x76
  424c89:	and    al,0xcd
  424c8b:	lock int 0xd5
  424c8e:	mov    ebp,0xfbe7
  424c93:	push   es
  424c94:	ins    DWORD PTR es:[edi],dx
  424c95:	das    
  424c96:	add    eax,0x808080d1
  424c9b:	call   0x0:0xf90ebd5b
  424ca2:	push   es
  424ca3:	ins    DWORD PTR es:[edi],dx
  424ca4:	das    
  424ca5:	add    eax,0x8080802d
  424caa:	int    0x8
  424cac:	and    eax,0x43808081
  424cb1:	sbb    al,0xd6
  424cb3:	sbb    cl,ch
  424cb5:	or     BYTE PTR [ecx],dl
  424cb7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424cc1:	int    0x8d
  424cc3:	dec    esp
  424cc4:	add    BYTE PTR [ecx+0x70005b94],dl
  424cca:	and    al,0xcd
  424ccc:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424cd2:	or     ch,0x7d
  424cd5:	cmp    ecx,DWORD PTR [edi]
  424cd7:	add    al,0x11
  424cd9:	call   ebx
  424cdb:	jmp    0x424c6f
  424cdd:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424ce3:	(bad)
  424ce7:	dec    ecx
  424ce8:	and    BYTE PTR [esi-0x778932cb],al
  424cee:	int    0x8d
  424cf0:	mov    ch,cl
  424cf2:	jbe    0x424d18
  424cf4:	shr    ebx,cl
  424cf6:	xchg   edx,eax
  424cf7:	adc    al,BYTE PTR [edx]
  424cf9:	scas   eax,DWORD PTR es:[edi]
  424cfa:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d00:	sbb    ch,cl
  424d02:	ins    BYTE PTR es:[edi],dx
  424d03:	cmp    al,0xcd
  424d05:	lea    ebp,[edi+eax*4]
  424d08:	lds    ecx,FWORD PTR [edx]
  424d0a:	outs   dx,BYTE PTR ds:[esi]
  424d0b:	adc    al,0xcd
  424d0d:	jbe    0x424d3b
  424d0f:	leave  
  424d10:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d17:	sub    al,0xa
  424d19:	pushf  
  424d1a:	test   ch,cl
  424d1c:	jbe    0x424d4e
  424d1e:	int    0x8d
  424d20:	sub    al,0xa
  424d22:	outs   dx,BYTE PTR ds:[esi]
  424d23:	mov    ch,cl
  424d25:	jbe    0x424d3b
  424d27:	int    0x8d
  424d29:	sub    al,0xa
  424d2b:	outs   dx,BYTE PTR ds:[esi]
  424d2c:	dec    esp
  424d2d:	in     al,dx
  424d2e:	adc    al,0xcd
  424d30:	jbe    0x424d56
  424d32:	int    0x6c
  424d34:	cmp    al,0xcd
  424d36:	lea    ebp,[edi+eax*4]
  424d39:	lds    ecx,FWORD PTR [edx]
  424d3b:	outs   dx,BYTE PTR ds:[esi]
  424d3c:	adc    al,0xcd
  424d3e:	jbe    0x424d6c
  424d40:	add    al,0x2c
  424d42:	or     cl,0x76
  424d45:	icebp  
  424d46:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d50:	cmp    ebx,ebp
  424d52:	int    0xc5
  424d54:	arpl   sp,bp
  424d56:	xchg   edx,eax
  424d57:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d5a:	test   al,0xcb
  424d5c:	shl    BYTE PTR [eax+eax*4],cl
  424d5f:	xchg   esi,eax
  424d60:	int    0xed
  424d62:	jno    0x424dd5
  424d64:	das    
  424d65:	mov    ebx,0x74cf146e
  424d6a:	mov    BYTE PTR [edi+ebp*1],bl
  424d6d:	mov    ebx,0x9a5b867e
  424d72:	leave  
  424d73:	jbe    0x424d72
  424d75:	dec    ecx
  424d76:	and    DWORD PTR [esi-0x672f5cb],eax
  424d7c:	push   es
  424d7d:	retf   
  424d7e:	aam    0xb4
  424d80:	popa   
  424d81:	shl    DWORD PTR [ecx],1
  424d83:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d89:	out    0x88,al
  424d8b:	xchg   edx,edi
  424d8d:	pop    esi
  424d8e:	out    0x4c,al
  424d90:	or     BYTE PTR [ebp-0x33],0xdc
  424d94:	mov    BYTE PTR [edi-0x77197806],al
  424d9a:	pop    esi
  424d9b:	out    0x4c,al
  424d9d:	cmp    BYTE PTR [edx-0x33],0x8d
  424da1:	std    
  424da2:	int    0xe6
  424da4:	std    
  424da5:	cmp    edx,DWORD PTR [ebx]
  424da7:	add    al,0xf8
  424da9:	call   ebx
  424dab:	jmp    0xd41e1ad8
  424db0:	in     al,dx
  424db1:	xchg   edx,eax
  424db2:	push   ebx
  424db3:	cld    
  424db4:	add    al,0xf2
  424db6:	std    
  424db7:	add    al,0xd3
  424db9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424dc0:	sub    BYTE PTR [ebx-0x6],dl
  424dc3:	adc    bh,al
  424dc5:	dec    ecx
  424dc6:	and    DWORD PTR [esi-0x2197ecb],eax
  424dcc:	int    0x8d
  424dce:	std    
  424dcf:	int    0xe6
  424dd1:	std    
  424dd2:	cmp    edx,DWORD PTR [ebx]
  424dd4:	add    al,0xf8
  424dd6:	call   ebx
  424dd8:	jmp    0x424d6c
  424dda:	shr    ecx,cl
  424ddc:	sub    BYTE PTR [ebx-0x10],dl
  424ddf:	inc    ebx
  424de0:	(bad)  
  424de1:	stc    
  424de2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424de9:	ror    BYTE PTR [eax-0x12326980],cl
  424def:	add    al,0xed
  424df1:	push   eax
  424df2:	leave  
  424df3:	jbe    0x424d9a
  424df5:	mov    edx,0xc98080ac
  424dfa:	jbe    0x424db1
  424dfc:	xchg   eax,ecx
  424dfe:	add    BYTE PTR [eax-0x68528937],0x40
  424e05:	add    BYTE PTR [eax-0x51068937],0x30
  424e0c:	test   BYTE PTR [eax-0x4a028937],al
  424e12:	lods   al,BYTE PTR ds:[esi]
  424e13:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e1a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e21:	add    BYTE PTR [eax-0x78628937],0x80
  424e28:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e2f:	add    BYTE PTR [eax-0x32128937],0x71
  424e36:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e3d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e44:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e4a:	(bad)  
  424e4b:	stc    
  424e4c:	cmp    ebx,edx
  424e4e:	clc    
  424e4f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e55:	repnz popa 
  424e57:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e5d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e64:	add    BYTE PTR [eax+0x3cded312],0x80
  424e6b:	or     cl,0x76
  424e6e:	cmc    
  424e6f:	icebp  
  424e70:	lea    eax,[eax-0x2893680]
  424e76:	jnp    0x424e4c
  424e78:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e7f:	add    BYTE PTR [eax-0x32068933],0x96
  424e86:	std    
  424e87:	ss dec eax
  424e89:	pushf  
  424e8a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424e91:	int    0xe3
  424e93:	push   esi
  424e94:	jp     0x424e95
  424e96:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424e9d:	int    0x76
  424e9f:	std    
  424ea0:	xchg   DWORD PTR [esi-0x78],esi
  424ea3:	int    0x96
  424ea5:	std    
  424ea6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424eac:	xor    ch,cl
  424eae:	jbe    0x424ec1
  424eb0:	int    0x96
  424eb2:	in     eax,dx
  424eb3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424eb7:	cmp    BYTE PTR [ebx],0xd2
  424eba:	int    0x96
  424ebc:	mov    ebp,0xe261d253
  424ec1:	fadd   DWORD PTR [eax-0x320ecc80]
  424ec7:	jbe    0x424e7e
  424ec9:	xchg   DWORD PTR [ebx],edx
  424ecb:	popa   
  424ecc:	fist   WORD PTR [eax+eax*4-0x80]
  424ed0:	xor    esi,ecx
  424ed2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424ed8:	int    0xd6
  424eda:	xor    ch,cl
  424edc:	out    0x9d,al
  424ede:	adc    bh,bl
  424ee0:	mov    DWORD PTR [ecx-0x80],esi
  424ee3:	sub    BYTE PTR [ebx],0xf1
  424ee6:	int    0x76
  424ee8:	xchg   ebp,eax
  424ee9:	adc    bh,bl
  424eeb:	mov    dh,0x2c
  424eed:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424ef4:	clc    
  424ef5:	int    0x96
  424ef7:	icebp  
  424ef8:	push   esi
  424ef9:	out    0x1e,al
  424efb:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f02:	icebp  
  424f03:	adc    dh,bl
  424f05:	pop    es
  424f06:	push   edx
  424f07:	add    BYTE PTR [eax+0x72f9943],0x63
  424f0e:	add    BYTE PTR [eax],al
  424f10:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f16:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f1d:	pop    ebx
  424f1e:	cwde   
  424f1f:	call   0x8043:0xd9ed76c9
  424f26:	or     cl,0x76
  424f29:	adc    DWORD PTR [edx+0x7e],esi
  424f2c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f33:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f3a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f41:	add    BYTE PTR [eax-0x275a8937],0x58
  424f48:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f4f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f56:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f5d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f64:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f6b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f72:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f79:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f80:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f87:	add    BYTE PTR [eax-0x32528933],0x8d
  424f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f8f:	dec    ebp
  424f90:	bound  ebp,QWORD PTR [ebx]
  424f92:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424f99:	dec    ebp
  424f9a:	pop    ds
  424f9b:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424fa1:	pop    edi
  424fa2:	xchg   ecx,eax
  424fa3:	mov    bh,0x7e
  424fa5:	stc    
  424fa6:	xor    edi,DWORD PTR [ebp-0x33]
  424fa9:	jbe    0x424fa8
  424fab:	int    0x96
  424fad:	stc    
  424fae:	sub    edx,edx
  424fb0:	int    0x96
  424fb2:	cmc    
  424fb3:	dec    ebp
  424fb4:	inc    edi
  424fb5:	outs   dx,DWORD PTR ds:[esi]
  424fb6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424fbd:	xor    edx,edx
  424fbf:	int    0x96
  424fc1:	in     eax,dx
  424fc2:	push   ebx
  424fc3:	sar    BYTE PTR [ebx],cl
  424fc5:	fisubr DWORD PTR [ecx-0x27]
  424fc8:	ret    
  424fc9:	add    BYTE PTR [eax],al
  424fcb:	clc    
  424fcc:	test   ebp,0x72c34c96
  424fd2:	push   ds
  424fd3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fda:	int    0xd6
  424fdc:	mov    ch,0x33
  424fde:	leave  
  424fdf:	das    
  424fe0:	sar    DWORD PTR [ecx+0x69],1
  424fe3:	fisttp DWORD PTR [edx]
  424fe5:	xchg   ecx,eax
  424fe6:	mov    ebx,ebp
  424fe8:	popa   
  424fe9:	add    BYTE PTR [eax-0x6a893680],0x9b
  424ff0:	push   esp
  424ff1:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  424ff8:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  424fff:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425006:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42500d:	pop    ebp
  42500e:	call   0xcdf4:0xf880806f
  425015:	xchg   esi,eax
  425016:	lods   eax,DWORD PTR ds:[esi]
  425017:	int    0xa6
  425019:	mov    BYTE PTR [ebx-0x2e],dl
  42501c:	int    0x96
  42501e:	popf   
  42501f:	xor    edx,edx
  425021:	int    0x96
  425023:	xchg   ebp,eax
  425024:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425026:	push   eax
  425027:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42502e:	mov    BYTE PTR [eax+0x2c],bl
  425031:	ret    0xafd
  425034:	jbe    0x424fcb
  425036:	int    0x76
  425038:	icebp  
  425039:	int    0x96
  42503b:	or     eax,0xf3f7f534
  425040:	int    0x96
  425042:	xchg   ebp,eax
  425043:	xor    al,0x23
  425045:	inc    esp
  425046:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42504a:	inc    esi
  42504b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425052:	rol    esi,0x80
  425055:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42505c:	cmp    ebx,edx
  42505e:	clc    
  42505f:	hlt    
  425060:	int    0x96
  425062:	gs mov edi,0xc3d9
  425068:	ss aaa 
  42506a:	push   esi
  42506b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425072:	add    BYTE PTR [eax],al
  425074:	xchg   DWORD PTR [ebp-0x33],edi
  425077:	jbe    0x425076
  425079:	int    0x96
  42507b:	stc    
  42507c:	sub    edx,edx
  42507e:	int    0x96
  425080:	cmc    
  425081:	dec    ebp
  425082:	inc    edi
  425083:	outs   dx,DWORD PTR ds:[esi]
  425084:	add    BYTE PTR [eax-0x69322dcd],0x11
  42508b:	xor    edx,edx
  42508d:	int    0x96
  42508f:	in     eax,dx
  425090:	push   ebx
  425091:	sar    BYTE PTR [ebx],cl
  425093:	(bad)  
  425095:	hlt    
  425096:	int    0x96
  425098:	dec    esp
  425099:	xor    esi,ecx
  42509b:	int    0x76
  42509d:	mov    ebp,0x33b5a6cd
  4250a2:	leave  
  4250a3:	das    
  4250a4:	rol    ebp,1
  4250a6:	int    0xdb
  4250a8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250ae:	das    
  4250af:	pop    es
  4250b0:	pop    esp
  4250b1:	add    BYTE PTR [eax],al
  4250b3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250b9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250bf:	in     eax,dx
  4250c0:	jo     0x42508b
  4250c2:	jbe    0x425094
  4250c4:	xchg   ecx,eax
  4250c5:	aaa    
  4250c6:	ficom  WORD PTR [ebx]
  4250c8:	pop    ebp
  4250c9:	mov    ebp,0xa25230a
  4250ce:	jbe    0x425125
  4250d0:	leave  
  4250d1:	jbe    0x425130
  4250d3:	mov    esi,0xa13de37
  4250d8:	jbe    0x42513f
  4250da:	leave  
  4250db:	jbe    0x42514a
  4250dd:	fidiv  WORD PTR [edi]
  4250df:	ficom  WORD PTR [ebx]
  4250e1:	or     dh,BYTE PTR [esi+0x75]
  4250e4:	pop    ebx
  4250e5:	leave  
  4250e6:	jbe    0x425165
  4250e8:	scas   al,BYTE PTR es:[edi]
  4250e9:	aaa    
  4250ea:	ficom  WORD PTR [ebx]
  4250ec:	or     dh,BYTE PTR [esi+0xd]
  4250ef:	cwde   
  4250f0:	call   0xde37:0x96f176c9
  4250f7:	adc    ecx,DWORD PTR [edx]
  4250f9:	jbe    0x425090
  4250fb:	cmp    ebx,edx
  4250fd:	cmp    eax,DWORD PTR [eax]
  4250ff:	pop    edi
  425100:	dec    ecx
  425101:	and    DWORD PTR [esi-0x628936cb],eax
  425107:	out    0x37,al
  425109:	ficom  WORD PTR [ebx]
  42510b:	jp     0x425117
  42510d:	jbe    0x4250b4
  42510f:	int    0xd3
  425111:	or     dl,BYTE PTR [esi-0x4a19f513]
  425117:	iret   
  425118:	xchg   ecx,eax
  425119:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425120:	push   ebx
  425121:	ror    bh,cl
  425123:	je     0x4250ec
  425125:	ror    ch,1
  425127:	xor    ch,cl
  425129:	pushf  
  42512a:	test   BYTE PTR [edi],ch
  42512c:	inc    ebp
  42512d:	loop   0x4250c1
  42512f:	shr    esp,cl
  425131:	xchg   edx,eax
  425132:	int    0x1c
  425134:	int    0x6c
  425136:	test   BYTE PTR [ebx],bh
  425138:	ins    DWORD PTR es:[edi],dx
  425139:	adc    bh,bl
  42513b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42513c:	mov    esi,0xf1534229
  425141:	or     dl,BYTE PTR [esi-0x6893207]
  425147:	xchg   DWORD PTR [ebp-0x2d],ebp
  42514a:	in     eax,0x28
  42514c:	inc    ebx
  42514d:	jbe    0x42519b
  42514f:	das    
  425150:	or     BYTE PTR [edi-0x327f7f80],bh
  425156:	jbe    0x425151
  425158:	add    al,0xb6
  42515a:	mov    ebp,0x11e60a80
  42515f:	int    0x76
  425161:	stc    
  425162:	push   es
  425163:	ins    DWORD PTR es:[edi],dx
  425164:	aam    0xb6
  425166:	cmp    ebp,DWORD PTR [ebp+0xa]
  425169:	out    0xf5,al
  42516b:	int    0x96
  42516d:	mov    ebp,0xcf88a6cd
  425172:	fs xor ch,cl
  425175:	xchg   esi,eax
  425176:	mov    BYTE PTR [edi-0x5269f527],al
  42517c:	retf   0x922
  42517f:	xchg   esi,eax
  425180:	add    ch,cl
  425182:	xchg   esi,eax
  425183:	stc    
  425184:	xchg   ecx,ebx
  425186:	retf   0x2014
  425189:	int    0xa6
  42518b:	lods   eax,DWORD PTR ds:[esi]
  42518c:	or     DWORD PTR [ebx],ebx
  42518e:	retf   0x96
  425191:	int    0xa6
  425193:	stc    
  425194:	xchg   ecx,esp
  425196:	int    0xe6
  425198:	mov    BYTE PTR [ecx],cl
  42519a:	adc    al,0x43
  42519c:	int    0x96
  42519e:	cmc    
  42519f:	ins    BYTE PTR es:[edi],dx
  4251a0:	add    al,0xea
  4251a2:	std    
  4251a3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251a9:	push   ebx
  4251aa:	sar    BYTE PTR [ebx],cl
  4251ac:	ror    DWORD PTR [edx],cl
  4251ae:	jbe    0x4251a5
  4251b0:	push   ecx
  4251b1:	(bad)  
  4251b2:	cmc    
  4251b3:	int    0x96
  4251b5:	cmc    
  4251b6:	add    al,0x11
  4251b8:	call   ebx
  4251ba:	repz xchg edx,eax
  4251bc:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251c2:	xchg   esi,eax
  4251c3:	stc    
  4251c4:	inc    ebx
  4251c5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251cb:	int    0x76
  4251cd:	adc    ebp,ecx
  4251cf:	xchg   esi,eax
  4251d0:	stc    
  4251d1:	int    0xa6
  4251d3:	mov    ebp,0xcffdad04
  4251d8:	test   cl,dh
  4251da:	int    0x96
  4251dc:	stc    
  4251dd:	iret   
  4251de:	adc    al,0x5b
  4251e0:	int    0xa6
  4251e2:	dec    esp
  4251e3:	shl    ebx,cl
  4251e5:	sub    BYTE PTR [ebx-0x2e],dl
  4251e8:	cmp    edx,ebx
  4251ea:	or     dh,BYTE PTR [esi+0x11]
  4251ed:	push   ecx
  4251ee:	(bad)  
  4251ef:	adc    ebp,ecx
  4251f1:	xchg   esi,eax
  4251f2:	adc    DWORD PTR [ecx+edx*1],eax
  4251f5:	call   ebx
  4251f7:	repz xchg edx,eax
  4251f9:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251ff:	xchg   esi,eax
  425200:	stc    
  425201:	xchg   edx,ebx
  425203:	xor    esp,edx
  425205:	or     dh,BYTE PTR [esi-0x43]
  425208:	inc    ebx
  425209:	lds    ebp,FWORD PTR [edi]
  42520b:	pop    es
  42520c:	outs   dx,DWORD PTR ds:[esi]
  42520d:	add    BYTE PTR [eax],al
  42520f:	add    ch,cl
  425211:	jbe    0x425200
  425213:	int    0x96
  425215:	mov    ch,0x4
  425217:	jmp    0xd384:0xd2046cfd
  42521e:	mov    ebp,0x3bd25328
  425223:	ror    ebp,cl
  425225:	popf   
  425226:	int    0xf1
  425228:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42522e:	in     eax,0x28
  425230:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425236:	or     ah,BYTE PTR [esi-0x12697613]
  42523c:	add    al,0xe6
  42523e:	in     eax,dx
  42523f:	xchg   BYTE PTR [edi],ch
  425241:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425247:	test   al,0x63
  425249:	retf   
  42524a:	ror    BYTE PTR [eax-0x12326980],cl
  425250:	add    al,0xed
  425252:	adc    al,0xcd
  425254:	jbe    0x4251de
  425256:	leave  
  425257:	jbe    0x42526a
  425259:	dec    ecx
  42525a:	and    DWORD PTR [esi-0x28936cb],eax
  425260:	inc    ecx
  425261:	and    DWORD PTR [esi+0x5b80cd35],eax
  425267:	cwde   
  425268:	or     dh,BYTE PTR [esi-0x7]
  42526b:	leave  
  42526c:	jbe    0x425263
  42526e:	into   
  42526f:	and    DWORD PTR [esi+0x76c99a35],eax
  425275:	in     eax,dx
  425276:	inc    esi
  425277:	sbb    DWORD PTR [ebp-0x22932de],esi
  42527d:	int    0x8d
  42527f:	std    
  425280:	sar    bh,0x5d
  425283:	shl    DWORD PTR [ecx],1
  425285:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42528b:	repnz sub BYTE PTR [ebx],bh
  42528e:	adc    ebx,edx
  425290:	out    dx,eax
  425291:	xchg   edx,eax
  425292:	push   ebx
  425293:	add    cl,ch
  425295:	lea    edx,[ecx]
  425297:	int    0x96
  425299:	adc    DWORD PTR [ebx],edi
  42529b:	jge    0x4252d8
  42529d:	(bad)  
  42529f:	jmp    0x425233
  4252a1:	shr    edx,cl
  4252a3:	sub    BYTE PTR [ebx+0x13],dl
  4252a6:	das    
  4252a7:	rol    DWORD PTR [edx],1
  4252a9:	jmp    0x42524a
  4252ab:	add    BYTE PTR [eax-0x6723280],0xcd
  4252b2:	xchg   esi,eax
  4252b3:	stc    
  4252b4:	cmp    ebx,ecx
  4252b6:	shr    edx,cl
  4252b8:	sub    BYTE PTR [ebx],bh
  4252ba:	jge    0x42528f
  4252bc:	jmp    0x425250
  4252be:	push   ebx
  4252bf:	adc    ecx,ebp
  4252c1:	xchg   esi,eax
  4252c2:	std    
  4252c3:	int    0xa6
  4252c5:	std    
  4252c6:	cmp    esi,ecx
  4252c8:	cmp    esp,ecx
  4252ca:	shl    ebx,cl
  4252cc:	xchg   edx,eax
  4252cd:	shl    ebp,cl
  4252cf:	sub    BYTE PTR [ebx-0x2b],dl
  4252d2:	push   es
  4252d3:	adc    ecx,ebp
  4252d5:	xchg   esi,eax
  4252d6:	stc    
  4252d7:	int    0x8d
  4252d9:	stc    
  4252da:	aam    0x58
  4252dc:	cmp    esi,eax
  4252de:	shl    edx,cl
  4252e0:	sub    BYTE PTR [ebx],bh
  4252e2:	icebp  
  4252e3:	shl    ebx,cl
  4252e5:	xchg   edx,eax
  4252e6:	push   ebx
  4252e7:	jecxz  0x4252b6
  4252e9:	(bad)  
  4252ea:	std    
  4252eb:	int    0xa6
  4252ed:	std    
  4252ee:	cmp    edi,DWORD PTR [ebp+0x3b]
  4252f1:	loope  0x4252c6
  4252f3:	jmp    0x425287
  4252f5:	shl    ebp,cl
  4252f7:	sub    BYTE PTR [ebx+0xc],dl
  4252fa:	aad    0xf3
  4252fc:	int    0x8d
  4252fe:	in     eax,dx
  4252ff:	int    0xa6
  425301:	in     eax,dx
  425302:	cmp    edi,DWORD PTR [ebp+0x3b]
  425305:	loope  0x4252da
  425307:	jmp    0x42529b
  425309:	shl    ebp,cl
  42530b:	sub    BYTE PTR [ebx+0xc],dl
  42530e:	cmp    esp,ebx
  425310:	in     al,dx
  425311:	sub    al,0x3b
  425313:	lock shl edx,cl
  425316:	sub    BYTE PTR [ebx],bh
  425318:	icebp  
  425319:	shl    ebx,cl
  42531b:	xchg   edx,eax
  42531c:	push   ebx
  42531d:	jecxz  0x4252ec
  42531f:	(bad)  
  425320:	std    
  425321:	int    0xa6
  425323:	std    
  425324:	cmp    edi,DWORD PTR [ebp+0x3b]
  425327:	loope  0x4252fc
  425329:	jmp    0x4252bd
  42532b:	shl    ebp,cl
  42532d:	sub    BYTE PTR [ebx+0xc],dl
  425330:	aad    0xf3
  425332:	or     dl,BYTE PTR [esi-0x2723207]
  425338:	int    0x96
  42533a:	std    
  42533b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42533e:	(bad)  
  425340:	jmp    0x4252d4
  425342:	shr    edx,cl
  425344:	sub    BYTE PTR [ebx+0x13],dl
  425347:	xchg   DWORD PTR [edx],eax
  425349:	int    0x8d
  42534b:	cmc    
  42534c:	int    0x96
  42534e:	cmc    
  42534f:	cmp    ebx,ecx
  425351:	cmp    edi,DWORD PTR [ebp-0x2d]
  425354:	jmp    0x1353:0x92ebd328
  42535b:	int    0x96
  42535d:	std    
  42535e:	int    0xa6
  425360:	std    
  425361:	cmp    esi,ecx
  425363:	cmp    esp,ecx
  425365:	shl    ebp,cl
  425367:	sub    bl,dl
  425369:	repz xchg edx,eax
  42536b:	push   ebx
  42536c:	aad    0x33
  42536e:	adc    eax,DWORD PTR [ebx+0x2]
  425371:	das    
  425372:	pop    es
  425373:	pop    edx
  425374:	add    BYTE PTR [eax],al
  425376:	add    ch,cl
  425378:	jbe    0x425373
  42537a:	int    0x8d
  42537c:	mov    BYTE PTR [edx-0x327ef558],ch
  425382:	jbe    0x42537d
  425384:	arpl   bx,cx
  425386:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42538d:	ins    DWORD PTR es:[edi],dx
  42538e:	pop    esi
  42538f:	jbe    0x4253dd
  425391:	aam    0x3a
  425393:	pop    esi
  425394:	jbe    0x42531e
  425396:	fdiv   DWORD PTR [edx]
  425398:	retf   0x8814
  42539b:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253a1:	das    
  4253a2:	adc    dh,bl
  4253a4:	in     eax,dx
  4253a5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253ac:	lea    ebp,[edi]
  4253ae:	retf   0x2f96
  4253b1:	or     DWORD PTR [eax+ecx*4],edx
  4253b4:	ins    BYTE PTR es:[edi],dx
  4253b5:	inc    ebx
  4253b6:	jbe    0x425340
  4253b8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253bf:	stc    
  4253c0:	std    
  4253c1:	add    BYTE PTR [eax],al
  4253c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253c4:	ror    BYTE PTR [eax-0x12326980],cl
  4253ca:	adc    ch,ch
  4253cc:	cmp    al,0x84
  4253ce:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253d5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253db:	jbe    0x4253da
  4253dd:	inc    ecx
  4253de:	and    DWORD PTR [esi-0x128936cb],eax
  4253e4:	dec    ecx
  4253e5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253eb:	jno    0x4253a3
  4253ed:	cli    
  4253ee:	arpl   bp,cx
  4253f0:	jbe    0x425403
  4253f2:	int    0x8d
  4253f4:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  4253fa:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425404:	repnz sub BYTE PTR [ebx-0x2d],dl
  425408:	or     dh,BYTE PTR [esi-0x7]
  42540b:	leave  
  42540c:	jbe    0x4253b3
  42540e:	into   
  42540f:	and    DWORD PTR [esi-0x628936cb],eax
  425415:	inc    esi
  425416:	sbb    DWORD PTR [ebp-0x528936de],esi
  42541c:	mov    BYTE PTR [eax-0x34327f80],al
  425422:	int    0x76
  425424:	std    
  425425:	int    0x8d
  425427:	std    
  425428:	cmp    esi,eax
  42542a:	shl    edx,cl
  42542c:	sub    BYTE PTR [ebx],bh
  42542e:	jns    0x425403
  425430:	mov    ebp,0xcdd35392
  425435:	lea    edx,[ecx]
  425437:	int    0x96
  425439:	adc    DWORD PTR [ebx],edi
  42543b:	(bad)  
  42543d:	(bad)  
  42543f:	jmp    0x4253d3
  425441:	shr    edx,cl
  425443:	sub    BYTE PTR [ebx+0x13],dl
  425446:	das    
  425447:	rcl    ebx,1
  425449:	in     al,dx
  42544a:	outs   dx,BYTE PTR ds:[esi]
  42544b:	int    0x76
  42544d:	cmc    
  42544e:	int    0x8d
  425450:	cmc    
  425451:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425457:	push   ebx
  425458:	sar    DWORD PTR [ebx],cl
  42545a:	lds    ecx,FWORD PTR [edx]
  42545c:	jbe    0x425457
  42545e:	iret   
  42545f:	jbe    0x42545a
  425461:	jo     0x425420
  425463:	mov    ecx,0xa0000fe
  425468:	jbe    0x425463
  42546a:	int    0x76
  42546c:	stc    
  42546d:	int    0x8d
  42546f:	cmc    
  425470:	or     al,BYTE PTR ds:0xfc9dcf
  425476:	add    ch,cl
  425478:	jbe    0x425477
  42547a:	int    0x8d
  42547c:	std    
  42547d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425480:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425487:	push   ebx
  425488:	rol    DWORD PTR [edi+0x760af576],cl
  42548e:	cmc    
  42548f:	int    0x76
  425491:	in     eax,dx
  425492:	int    0x8d
  425494:	in     eax,dx
  425495:	cmp    esi,eax
  425497:	shl    edx,cl
  425499:	sub    BYTE PTR [ebx],bh
  42549b:	jns    0x425470
  42549d:	mov    ebp,0xcdd35392
  4254a2:	(bad)  
  4254a3:	std    
  4254a4:	int    0x96
  4254a6:	std    
  4254a7:	cmp    ecx,DWORD PTR [edi]
  4254a9:	cmp    ebx,ecx
  4254ab:	shr    ebx,cl
  4254ad:	xchg   edx,eax
  4254ae:	shr    edx,cl
  4254b0:	sub    BYTE PTR [ebx+0x13],dl
  4254b3:	xor    edx,ebx
  4254b5:	int    0x8d
  4254b7:	cmc    
  4254b8:	inc    ebx
  4254b9:	jge    0x425493
  4254bb:	mov    bl,0xcd
  4254bd:	jbe    0x425474
  4254bf:	int    0x8d
  4254c1:	mov    ch,0x3b
  4254c3:	jns    0x425500
  4254c5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254cc:	push   ebx
  4254cd:	ror    DWORD PTR [edx],cl
  4254cf:	jbe    0x4254ca
  4254d1:	leave  
  4254d2:	jbe    0x4254c1
  4254d4:	bound  ebx,QWORD PTR [edi]
  4254d6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254dc:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254e3:	jbe    0x42548a
  4254e5:	cmp    ecx,ecx
  4254e7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254ed:	jmp    0x425481
  4254ef:	push   ebx
  4254f0:	jge    0x4254bf
  4254f2:	jbe    0x4254ed
  4254f4:	aad    0xbd
  4254f6:	or     dh,BYTE PTR [esi-0x63]
  4254f9:	int    0x76
  4254fb:	mov    dl,cl
  4254fd:	or     BYTE PTR [ecx],0x76
  425500:	in     al,dx
  425501:	retf   0xec76
  425504:	int    0x8d
  425506:	stc    
  425507:	das    
  425508:	pop    ecx
  425509:	ins    DWORD PTR es:[edi],dx
  42550a:	cmp    edx,ebx
  42550c:	or     dh,BYTE PTR [esi-0xb]
  42550f:	int    0x76
  425511:	in     eax,dx
  425512:	int    0x8d
  425514:	in     eax,dx
  425515:	cmp    edi,DWORD PTR [ecx-0x2d]
  425518:	mov    ebp,0xd3f03b92
  42551d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425521:	int    0x8d
  425523:	cmc    
  425524:	sub    edx,ebx
  425526:	int    0x5
  425528:	push   es
  425529:	popf   
  42552a:	cld    
  42552b:	add    BYTE PTR [eax],al
  42552d:	int    0x8d
  42552f:	popf   
  425530:	cmp    edx,ebx
  425532:	or     dh,BYTE PTR [esi-0x7]
  425535:	int    0x76
  425537:	std    
  425538:	int    0x8d
  42553a:	std    
  42553b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42553e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425545:	push   ebx
  425546:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42554c:	std    
  42554d:	int    0x8d
  42554f:	std    
  425550:	cmp    edi,DWORD PTR [ecx+0x3b]
  425553:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42555a:	push   ebx
  42555b:	sar    DWORD PTR [esi],cl
  42555d:	jbe    0x42550c
  42555f:	int    0x76
  425561:	adc    ebp,ecx
  425563:	lea    edx,[ecx]
  425565:	cmp    esi,eax
  425567:	cmp    edi,DWORD PTR [ecx-0x2d]
  42556a:	repnz sub bl,dl
  42556d:	mov    ebp,0xcdd35392
  425572:	lea    ebp,[ebp+0x62f7d43]
  425578:	imul   eax,DWORD PTR [eax],0x0
  42557b:	add    ch,cl
  42557d:	jbe    0x425534
  42557f:	int    0x8d
  425581:	mov    ch,0x3b
  425583:	jns    0x4255c0
  425585:	lock shl edx,cl
  425588:	sub    bl,dl
  42558a:	mov    ebp,0xd353aa92
  42558f:	int    0x8d
  425591:	stc    
  425592:	test   al,0x3b
  425594:	shl    DWORD PTR [ebx-0x35],cl
  425597:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  42559e:	in     eax,dx
  42559f:	xor    BYTE PTR [ebx],bh
  4255a1:	retf   
  4255a2:	pop    ebx
  4255a3:	call   0xbb05:0x2f888d5e
  4255aa:	add    BYTE PTR [eax+0x2f024380],0x5
  4255b1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255b7:	cwde   
  4255b8:	sub    al,0x5d
  4255ba:	lahf   
  4255bb:	xor    eax,0x8d0a8080
  4255c0:	std    
  4255c1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255c7:	(bad)  
  4255c8:	stc    
  4255c9:	mov    eax,0xe3b813cd
  4255ce:	retf   
  4255cf:	cmp    eax,DWORD PTR [eax]
  4255d1:	leave  
  4255d2:	jbe    0x4255c9
  4255d4:	adc    al,0x80
  4255d6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255dd:	mov    eax,0xb8fde6cd
  4255e2:	jecxz  0x4255ad
  4255e4:	mov    eax,0xbb2ff93b
  4255e9:	(bad)  
  4255ea:	stc    
  4255eb:	iret   
  4255ec:	dec    esp
  4255ed:	into   
  4255ee:	mov    eax,0xd692de5e
  4255f3:	pop    edx
  4255f4:	das    
  4255f5:	mov    ebx,0xf58d0a89
  4255fa:	mov    eax,0x4dd67d43
  4255ff:	das    
  425600:	mov    ebx,0xa6cdfd8d
  425605:	mov    BYTE PTR [ecx],al
  425607:	fs push ds
  425609:	adc    ah,0x3b
  42560c:	das    
  42560d:	mov    ebx,0xa6cdfd8d
  425612:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425618:	mov    eax,0x3bb8d3e3
  42561d:	jge    0x4255d7
  42561f:	pop    esi
  425620:	(bad)  
  425621:	cmc    
  425622:	aam    0x23
  425624:	leave  
  425625:	jbe    0x42561c
  425627:	sbb    BYTE PTR [eax+0x76008080],al
  42562d:	stc    
  42562e:	int    0x7d
  425630:	mov    eax,0xb82c8e3b
  425635:	jecxz  0x425602
  425637:	mov    eax,0x82f98d5e
  42563c:	inc    ecx
  42563d:	in     al,dx
  42563e:	dec    edx
  42563f:	add    BYTE PTR [esi+0x11],dh
  425642:	leave  
  425643:	jbe    0x42563a
  425645:	push   ss
  425646:	add    BYTE PTR [eax-0x1944d080],0xfd
  42564d:	int    0xa6
  42564f:	mov    BYTE PTR [ebx],bh
  425651:	retf   
  425652:	pop    esp
  425653:	dec    esp
  425654:	sub    dl,ah
  425656:	push   ss
  425657:	add    BYTE PTR [esi-0x3],dh
  42565a:	add    al,0xe6
  42565c:	cmc    
  42565d:	sbb    BYTE PTR [edi],ch
  42565f:	push   es
  425660:	jb     0x425662
  425662:	add    BYTE PTR [eax],al
  425664:	cmp    ebp,DWORD PTR [ebp-0x56]
  425667:	arpl   bx,cx
  425669:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425670:	jecxz  0x425645
  425672:	mov    eax,0x6d3b7d3b
  425677:	mov    eax,0x2f2c8e43
  42567c:	adc    eax,0x96b9ec6d
  425681:	int    0xed
  425683:	add    al,0xed
  425685:	mov    esp,0xc09a985b
  42568a:	inc    esp
  42568b:	add    dh,dl
  42568d:	mov    ch,cl
  42568f:	adc    DWORD PTR [ebp+0xf90b],edi
  425695:	iret   
  425696:	js     0x4256ca
  425698:	or     dh,BYTE PTR [esi+0x25]
  42569b:	iret   
  42569c:	js     0x425712
  42569e:	or     dh,BYTE PTR [esi+0x2d]
  4256a1:	iret   
  4256a2:	js     0x42565c
  4256a4:	or     dh,BYTE PTR [esi+0x35]
  4256a7:	iret   
  4256a8:	pop    es
  4256a9:	or     DWORD PTR [eax+0x760a8080],eax
  4256af:	cmp    eax,0x804107cf
  4256b4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256bb:	or     eax,0xa808080
  4256c0:	jbe    0x425692
  4256c2:	iret   
  4256c3:	pop    es
  4256c4:	out    dx,eax
  4256c5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256cc:	pop    es
  4256cd:	xor    BYTE PTR [ecx+0x760a8080],al
  4256d3:	pop    ebp
  4256d4:	iret   
  4256d5:	pop    es
  4256d6:	inc    edx
  4256d7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256e1:	pop    es
  4256e2:	xchg   esp,eax
  4256e3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256ed:	add    BYTE PTR [eax-0x25c4af33],0xa
  4256f4:	xchg   esi,eax
  4256f5:	icebp  
  4256f6:	or     dl,BYTE PTR [esi-0x6269f56b]
  4256fc:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425702:	(bad)  
  425703:	mov    cl,0xde
  425705:	adc    ebx,DWORD PTR [ebp-0x43]
  425708:	or     ah,BYTE PTR [ebx]
  42570a:	and    eax,0xcd0d760a
  42570f:	lea    edi,[ebp-0x33]
  425712:	out    0xd,al
  425714:	cmp    edi,ecx
  425716:	adc    al,BYTE PTR [edx]
  425718:	jnp    0x425751
  42571a:	ficom  WORD PTR [ebx]
  42571c:	das    
  42571d:	inc    ebp
  42571e:	cli    
  42571f:	xchg   edx,eax
  425720:	rcl    DWORD PTR [eax],cl
  425722:	xchg   edx,eax
  425723:	or     ah,dh
  425725:	mov    ch,0xcd
  425727:	out    0x7d,al
  425729:	int    0xa6
  42572b:	or     eax,0x3be1cd
  425730:	cmp    eax,DWORD PTR [ebx]
  425732:	shl    ebp,cl
  425734:	sub    BYTE PTR [ebx-0x10],dl
  425737:	int    0xe6
  425739:	mov    ch,0x61
  42573b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425742:	cld    
  425743:	push   ebx
  425744:	lock or dl,dh
  425747:	stc    
  425748:	das    
  425749:	add    eax,0x808080f2
  42574e:	adc    dh,BYTE PTR [esi-0xf]
  425751:	(bad)  
  425752:	mov    esp,0xeb5f8bbd
  425757:	or     ah,BYTE PTR [ebx]
  425759:	and    eax,0x12958d31
  42575e:	jbe    0x4256fd
  425760:	(bad)  
  425761:	mov    esp,0x8d318790
  425766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425767:	int    0x8d
  425769:	jge    0x425738
  42576b:	(bad)  
  42576c:	or     eax,0xcd7de6cd
  425771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425772:	or     eax,0x212113b
  425777:	jnp    0x4257b0
  425779:	ficom  WORD PTR [ebx]
  42577b:	das    
  42577c:	inc    ebp
  42577d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425783:	out    dx,eax
  425784:	xchg   edx,eax
  425785:	cmp    ebx,ebp
  425787:	cmp    eax,DWORD PTR [ebx]
  425789:	push   ebx
  42578a:	or     al,0x53
  42578c:	clc    
  42578d:	add    al,0xd3
  42578f:	add    BYTE PTR [ecx+ebx*4],al
  425792:	add    BYTE PTR [edx],cl
  425794:	lea    edi,[ebp+0xa]
  425797:	(bad)  
  425798:	or     eax,0x53f18dcd
  42579d:	lea    edx,[ebp+0x761223d4]
  4257a3:	icebp  
  4257a4:	mov    edx,DWORD PTR [ebx]
  4257a6:	dec    edx
  4257a7:	stc    
  4257a8:	pop    edi
  4257a9:	sbb    al,bl
  4257ab:	mov    ch,0x6b
  4257ad:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257b3:	(bad)
  4257b6:	std    
  4257b7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257bd:	(bad)  
  4257be:	icebp  
  4257bf:	(bad)  
  4257c0:	mov    esp,0x76897abd
  4257c5:	xchg   ebp,eax
  4257c6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257cc:	add    al,0x12
  4257ce:	mov    dh,0xa5
  4257d0:	jmp    0x4257dc
  4257d2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257d8:	lea    ecx,ds:0xcd7de6cd
  4257de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257df:	or     eax,0x92fc352f
  4257e4:	shr    ebx,cl
  4257e6:	sub    BYTE PTR [ebx],bh
  4257e8:	not    DWORD PTR [ebx-0xc]
  4257eb:	shr    ecx,cl
  4257ed:	xchg   edx,eax
  4257ee:	push   ebx
  4257ef:	lock adc al,BYTE PTR [edx]
  4257f2:	(bad)  
  4257f3:	aaa    
  4257f4:	ficom  WORD PTR [ebx]
  4257f6:	or     cl,BYTE PTR [ebp+0xa113b7d]
  4257fc:	(bad)  
  4257fd:	or     eax,0xcd7d8dcd
  425802:	(bad)  
  425803:	or     eax,0xcd7de6cd
  425808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425809:	or     eax,0x212113b
  42580e:	jnp    0x425847
  425810:	ficom  WORD PTR [ebx]
  425812:	das    
  425813:	inc    ebp
  425814:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42581a:	out    dx,eax
  42581b:	xchg   edx,eax
  42581c:	cmp    ebx,ebp
  42581e:	cmp    eax,DWORD PTR [ebx]
  425820:	push   ebx
  425821:	or     al,0x53
  425823:	clc    
  425824:	push   ebx
  425825:	comiss xmm0,DWORD PTR [esi]
  425828:	xor    al,BYTE PTR [eax]
  42582a:	add    BYTE PTR [eax],al
  42582c:	int    0xd6
  42582e:	stc    
  42582f:	push   es
  425830:	imul   DWORD PTR [edi]
  425832:	add    eax,0x808080d1
  425837:	int    0x78
  425839:	fs int 0xe4
  42583c:	push   eax
  42583d:	fadd   QWORD PTR [edi+0x349acdff]
  425843:	int    0x6f
  425845:	and    al,0xcd
  425847:	jp     0x425875
  425849:	int    0xaa
  42584b:	sbb    al,0x87
  42584d:	cdq    
  42584e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425854:	xchg   DWORD PTR [edi],ecx
  425856:	xchg   DWORD PTR [ecx+0xa],edi
  425859:	(bad)  
  42585a:	in     eax,dx
  42585b:	or     dh,BYTE PTR [esi-0x6b]
  42585e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425864:	xchg   DWORD PTR [edx],ecx
  425866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425867:	cmc    
  425868:	cmp    ebx,edx
  42586a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425870:	fcom   st(4)
  425872:	in     al,dx
  425873:	xchg   ebp,ecx
  425875:	jbe    0x42580c
  425877:	int    0xa6
  425879:	or     eax,0x5b24bb2f
  42587e:	inc    ebx
  42587f:	call   0x14aa:0x436b771c
  425886:	ja     0x425830
  425888:	int    0x84
  42588a:	mov    al,0xcd
  42588c:	xchg   esi,eax
  42588d:	mov    ch,cl
  42588f:	and    al,0x1f
  425891:	or     dl,BYTE PTR [esi-0x30867803]
  425897:	xchg   esi,eax
  425898:	sbb    eax,0x9633a987
  42589d:	mov    BYTE PTR [edx],cl
  42589f:	jbe    0x4258b2
  4258a1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258a7:	push   ebx
  4258a8:	add    BYTE PTR [eax-0x2693280],0x4
  4258af:	pusha  
  4258b0:	adc    dh,0x28
  4258b3:	jo     0x425882
  4258b5:	jbe    0x42592c
  4258b7:	int    0x54
  4258b9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258bf:	int    0xd6
  4258c1:	stc    
  4258c2:	int    0x8d
  4258c4:	in     eax,dx
  4258c5:	push   es
  4258c6:	ins    DWORD PTR es:[edi],dx
  4258c7:	aam    0x85
  4258c9:	int    0x76
  4258cb:	std    
  4258cc:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258d3:	std    
  4258d4:	test   BYTE PTR [eax],al
  4258d6:	lea    esi,[ebp-0x69321c2a]
  4258dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258dd:	push   edx
  4258de:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258e4:	or     dh,0xaa
  4258e7:	int    0x79
  4258e9:	test   al,0x63
  4258eb:	retf   
  4258ec:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  4258f3:	int    0xd6
  4258f5:	mov    BYTE PTR [eax],al
  4258f7:	pop    ecx
  4258f8:	adc    DWORD PTR [ecx+0x76cd8080],eax
  4258fe:	mov    BYTE PTR [ebp+0xfee4],bh
  425904:	int    0x7
  425906:	cmp    eax,0x3b808081
  42590b:	retf   
  42590c:	pop    esi
  42590d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425913:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425919:	fwait
  42591a:	sbb    eax,0x5b808081
  42591f:	cwde   
  425920:	int    0x11
  425922:	pop    ebp
  425923:	lahf   
  425924:	xor    eax,0x4eec8080
  425929:	cmp    edi,DWORD PTR [ebp-0x48]
  42592c:	jecxz  0x4258f9
  42592e:	mov    eax,0xd2044a0a
  425933:	xchg   edx,eax
  425934:	add    al,0x79
  425936:	xchg   edx,eax
  425937:	das    
  425938:	mov    ebx,0x7d43b84e
  42593d:	(bad)  
  42593e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425942:	mov    eax,0x8cd920a
  425947:	sbb    eax,0x63808081
  42594c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425952:	sbb    eax,0xd3808081
  425957:	jmp    0xed0be0e2
  42595c:	dec    edx
  42595d:	add    DWORD PTR [edx],eax
  42595f:	add    DWORD PTR [ecx],0xffffffeb
  425962:	mov    esi,0x526c8809
  425967:	retf   0x14a
  42596a:	cli    
  42596b:	sbb    dh,dl
  42596d:	adc    BYTE PTR [ecx-0x80],bh
  425970:	or     ch,0x7
  425973:	sbb    eax,0x87808081
  425978:	leave  
  425979:	stos   BYTE PTR es:[edi],al
  42597a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425980:	mov    al,0x80
  425982:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425989:	and    eax,0x76c99a98
  42598e:	cmc    
  42598f:	xchg   ecx,eax
  425990:	aaa    
  425991:	ficom  WORD PTR [ebx]
  425993:	or     cl,BYTE PTR [ebp-0x12893607]
  425999:	(bad)  
  42599a:	aaa    
  42599b:	ficom  WORD PTR [ebx]
  42599d:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259a3:	jbe    0x425962
  4259a5:	dec    ecx
  4259a6:	and    DWORD PTR [esi-0x28936cb],eax
  4259ac:	inc    ecx
  4259ad:	and    DWORD PTR [esi-0xe8936cb],eax
  4259b3:	out    0x37,al
  4259b5:	ficom  WORD PTR [ebx]
  4259b7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259bd:	fidiv  WORD PTR [edi]
  4259bf:	ficom  WORD PTR [ebx]
  4259c1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259c7:	int    0x96
  4259c9:	adc    DWORD PTR [edi],ebp
  4259cb:	inc    ebp
  4259cc:	icebp  
  4259cd:	xchg   edx,eax
  4259ce:	shl    ebx,cl
  4259d0:	xchg   edx,eax
  4259d1:	int    0x96
  4259d3:	in     eax,dx
  4259d4:	int    0xd6
  4259d6:	adc    ebx,edx
  4259d8:	jmp    0x4229:0xbea6c328
  4259df:	cmp    ecx,ecx
  4259e1:	cmp    esi,edi
  4259e3:	push   ebx
  4259e4:	jns    0x4259f0
  4259e6:	jbe    0x42598d
  4259e8:	iret   
  4259e9:	jbe    0x425998
  4259eb:	or     dh,BYTE PTR [esi+0xd]
  4259ee:	int    0x76
  4259f0:	or     eax,0x8621d169
  4259f5:	xor    eax,0x37b680c9
  4259fa:	ficom  WORD PTR [ebx]
  4259fc:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a00:	(bad)  
  425a01:	std    
  425a02:	int    0x96
  425a04:	std    
  425a05:	cmp    ecx,DWORD PTR [edi]
  425a07:	shr    ebx,cl
  425a09:	xchg   edx,eax
  425a0a:	sar    bh,0x9c
  425a0d:	cmp    esi,ecx
  425a0f:	shr    edx,cl
  425a11:	sub    BYTE PTR [ebx+0x13],dl
  425a14:	int    0x96
  425a16:	std    
  425a17:	int    0xa6
  425a19:	std    
  425a1a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a20:	popf   
  425a21:	shl    ebp,cl
  425a23:	sub    BYTE PTR [ebx-0x2b],dl
  425a26:	xchg   DWORD PTR [ebx],edx
  425a28:	int    0x96
  425a2a:	std    
  425a2b:	int    0xa6
  425a2d:	std    
  425a2e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a34:	popf   
  425a35:	shl    ebp,cl
  425a37:	sub    BYTE PTR [ebx-0x2b],dl
  425a3a:	xchg   DWORD PTR [ebx],edx
  425a3c:	int    0x96
  425a3e:	std    
  425a3f:	int    0xa6
  425a41:	std    
  425a42:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a48:	popf   
  425a49:	shl    ebp,cl
  425a4b:	sub    BYTE PTR [ebx-0x2b],dl
  425a4e:	xchg   DWORD PTR [ebx],edx
  425a50:	or     cl,bh
  425a52:	nop
  425a53:	add    BYTE PTR [eax],al
  425a55:	add    ch,cl
  425a57:	lea    edi,[ebp+0x3bbd96cd]
  425a5d:	icebp  
  425a5e:	cmp    ecx,DWORD PTR [edi]
  425a60:	shr    edx,cl
  425a62:	sub    bl,dl
  425a64:	jmp    0x4259f8
  425a66:	push   ebx
  425a67:	adc    ecx,ebp
  425a69:	xchg   esi,eax
  425a6a:	mov    ebp,0x3bbda6cd
  425a6f:	cdq    
  425a70:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a76:	in     eax,0x28
  425a78:	push   ebx
  425a79:	aad    0xa
  425a7b:	int3   
  425a7c:	pop    ss
  425a7d:	aam    0x0
  425a7f:	add    BYTE PTR [eax],al
  425a81:	int    0x8d
  425a83:	dec    esp
  425a84:	int    0x89
  425a86:	int    0x96
  425a88:	std    
  425a89:	int    0xa6
  425a8b:	std    
  425a8c:	int    0x7e
  425a8e:	jo     0x425acb
  425a90:	popf   
  425a91:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425a97:	in     eax,0x28
  425a99:	push   ebx
  425a9a:	aad    0xa
  425a9c:	int3   
  425a9d:	pop    ss
  425a9e:	aam    0x0
  425aa0:	add    BYTE PTR [eax],al
  425aa2:	int    0x8d
  425aa4:	xor    ch,cl
  425aa6:	xchg   esi,eax
  425aa7:	xor    BYTE PTR [ebx],bh
  425aa9:	icebp  
  425aaa:	cmp    ecx,DWORD PTR [edi]
  425aac:	shr    edx,cl
  425aae:	sub    bl,dl
  425ab0:	jmp    0x425a44
  425ab2:	push   ebx
  425ab3:	adc    ecx,ebp
  425ab5:	xchg   esi,eax
  425ab6:	std    
  425ab7:	int    0xa6
  425ab9:	std    
  425aba:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ac0:	cdq    
  425ac1:	shl    ebx,cl
  425ac3:	xchg   edx,eax
  425ac4:	shl    ebp,cl
  425ac6:	sub    BYTE PTR [ebx-0x2b],dl
  425ac9:	int    0xa6
  425acb:	std    
  425acc:	cmp    edi,DWORD PTR [ecx-0x2d]
  425acf:	mov    ebp,0xfff40492
  425ad4:	shl    ebp,cl
  425ad6:	sub    BYTE PTR [ebx-0x3b],dl
  425ad9:	xchg   ecx,esi
  425adb:	int    0x76
  425add:	adc    al,0xa
  425adf:	int3   
  425ae0:	pop    ss
  425ae1:	aam    0x0
  425ae3:	add    BYTE PTR [eax],al
  425ae5:	int    0x8d
  425ae7:	adc    al,0x4
  425ae9:	add    bh,bh
  425aeb:	shl    edx,cl
  425aed:	sub    BYTE PTR [ebx],bh
  425aef:	jns    0x425ac4
  425af1:	mov    ebp,0xcdd35392
  425af6:	(bad)  
  425af7:	std    
  425af8:	int    0x96
  425afa:	std    
  425afb:	add    al,0xfb
  425afd:	(bad)  
  425afe:	cmp    ecx,DWORD PTR [edi]
  425b00:	shr    edx,cl
  425b02:	sub    bl,dl
  425b04:	jmp    0x425a98
  425b06:	push   ebx
  425b07:	adc    ecx,ebp
  425b09:	xchg   esi,eax
  425b0a:	std    
  425b0b:	int    0xa6
  425b0d:	std    
  425b0e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b14:	repz xchg edx,eax
  425b16:	shl    ebp,cl
  425b18:	sub    BYTE PTR [ebx-0x2b],dl
  425b1b:	xchg   DWORD PTR [ebx],edx
  425b1d:	int    0x96
  425b1f:	std    
  425b20:	int    0xa6
  425b22:	std    
  425b23:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b29:	in     eax,0x28
  425b2b:	shl    ebx,cl
  425b2d:	xchg   edx,eax
  425b2e:	push   ebx
  425b2f:	aad    0x87
  425b31:	adc    ecx,DWORD PTR [edx]
  425b33:	add    eax,0xd4cf
  425b38:	add    bh,cl
  425b3a:	push   es
  425b3b:	nop
  425b3c:	add    BYTE PTR [eax],al
  425b3e:	add    BYTE PTR [eax-0x33],dh
  425b41:	jbe    0x425b40
  425b43:	int    0x8d
  425b45:	std    
  425b46:	sar    bh,0x63
  425b49:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b4c:	or     al,0xd3
  425b4e:	mov    ebp,0x28f2d392
  425b53:	push   ebx
  425b54:	shl    DWORD PTR [eax-0x33],cl
  425b57:	jbe    0x425b85
  425b59:	iret   
  425b5a:	or     DWORD PTR [ecx-0x80],eax
  425b5d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b64:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b6b:	int    0x8d
  425b6d:	push   esp
  425b6e:	or     al,BYTE PTR [ecx-0x32528933]
  425b74:	lea    esi,[ebp-0x6d82bad1]
  425b7a:	shr    ebx,cl
  425b7c:	xchg   edx,eax
  425b7d:	int    0x8d
  425b7f:	lods   eax,DWORD PTR ds:[esi]
  425b80:	int    0x96
  425b82:	mov    ch,0x3b
  425b84:	leave  
  425b85:	cmp    ebx,edx
  425b87:	push   ebx
  425b88:	icebp  
  425b89:	bound  eax,QWORD PTR [eax]
  425b8b:	(bad)  
  425b8c:	xor    al,0xd3
  425b8e:	repnz sub BYTE PTR [eax],al
  425b91:	(bad)  
  425b92:	inc    esp
  425b93:	mov    ebp,0xfb94
  425b98:	int    0x76
  425b9a:	lods   eax,DWORD PTR ds:[esi]
  425b9b:	int    0x8d
  425b9d:	mov    ch,0x2f
  425b9f:	inc    ebp
  425ba0:	jge    0x425b34
  425ba2:	shr    ebx,cl
  425ba4:	xchg   edx,eax
  425ba5:	int    0x8d
  425ba7:	lods   eax,DWORD PTR ds:[esi]
  425ba8:	int    0x96
  425baa:	mov    ch,0x3b
  425bac:	leave  
  425bad:	cmp    ebx,edx
  425baf:	push   ebx
  425bb0:	icebp  
  425bb1:	bound  eax,QWORD PTR [eax]
  425bb3:	(bad)  
  425bb4:	push   esp
  425bb5:	shl    edx,cl
  425bb7:	sub    BYTE PTR [eax],al
  425bb9:	(bad)  
  425bba:	cmp    al,0xbd
  425bbc:	inc    esp
  425bbd:	sti    
  425bbe:	add    BYTE PTR [eax],al
  425bc0:	int    0x76
  425bc2:	std    
  425bc3:	int    0x8d
  425bc5:	std    
  425bc6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425bc9:	repnz sub BYTE PTR [ebx],bh
  425bcc:	jns    0x425ba1
  425bce:	mov    ebp,0xcdd35392
  425bd3:	(bad)  
  425bd4:	std    
  425bd5:	int    0x96
  425bd7:	std    
  425bd8:	cmp    ecx,DWORD PTR [edi]
  425bda:	shr    ebx,cl
  425bdc:	xchg   edx,eax
  425bdd:	cmp    edx,ebp
  425bdf:	shr    edx,cl
  425be1:	sub    BYTE PTR [ebx+0x13],dl
  425be4:	xchg   ebx,edx
  425be6:	int    0x8d
  425be8:	std    
  425be9:	int    0x96
  425beb:	std    
  425bec:	cmp    ecx,DWORD PTR [edi]
  425bee:	shr    ebx,cl
  425bf0:	xchg   edx,eax
  425bf1:	cmp    edx,ebp
  425bf3:	shr    edx,cl
  425bf5:	sub    BYTE PTR [ebx+0x13],dl
  425bf8:	xchg   ebx,edx
  425bfa:	int    0x8d
  425bfc:	std    
  425bfd:	int    0x96
  425bff:	std    
  425c00:	cmp    ecx,DWORD PTR [edi]
  425c02:	shr    ebx,cl
  425c04:	xchg   edx,eax
  425c05:	cmp    edx,ebp
  425c07:	shr    edx,cl
  425c09:	sub    BYTE PTR [ebx+0x13],dl
  425c0c:	xchg   ebx,edx
  425c0e:	or     al,BYTE PTR [esi]
  425c10:	nop
  425c11:	add    BYTE PTR [eax],al
  425c13:	add    ch,cl
  425c15:	jbe    0x425c6b
  425c17:	int    0x80
  425c19:	int    0x8d
  425c1b:	mov    ebp,0x3bbd96cd
  425c20:	(bad)  
  425c22:	aad    0xd3
  425c24:	jmp    0x425bb8
  425c26:	shr    edx,cl
  425c28:	sub    BYTE PTR [ebx+0x13],dl
  425c2b:	or     al,BYTE PTR ds:0xd4cf
  425c31:	add    ch,cl
  425c33:	jbe    0x425c81
  425c35:	int    0x80
  425c37:	int    0x8d
  425c39:	std    
  425c3a:	int    0x96
  425c3c:	std    
  425c3d:	cmp    ecx,DWORD PTR [edi]
  425c3f:	shr    ebx,cl
  425c41:	xchg   edx,eax
  425c42:	int    0x6c
  425c44:	jo     0x425c81
  425c46:	aad    0xd3
  425c48:	jmp    0xcf05:0xa135328
  425c4f:	aam    0x0
  425c51:	add    BYTE PTR [eax],al
  425c53:	int    0x76
  425c55:	sbb    al,0xcd
  425c57:	lea    ebx,[ebx+edi*1]
  425c5a:	or     al,0xd3
  425c5c:	repnz sub BYTE PTR [ebx],bh
  425c5f:	jns    0x425c34
  425c61:	mov    ebp,0xcdd35392
  425c66:	(bad)  
  425c67:	std    
  425c68:	int    0x96
  425c6a:	std    
  425c6b:	cmp    edx,ebp
  425c6d:	cmp    ecx,DWORD PTR [edi]
  425c6f:	shr    edx,cl
  425c71:	sub    bl,dl
  425c73:	jmp    0x425c07
  425c75:	push   ebx
  425c76:	adc    ecx,ebp
  425c78:	xchg   esi,eax
  425c79:	std    
  425c7a:	int    0xa6
  425c7c:	std    
  425c7d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c83:	hlt    
  425c84:	call   ebx
  425c86:	in     eax,0x28
  425c88:	push   ebx
  425c89:	aad    0x87
  425c8b:	adc    ecx,DWORD PTR [edx]
  425c8d:	add    eax,0xd4cf
  425c92:	add    ch,cl
  425c94:	jbe    0x425c93
  425c96:	int    0x8d
  425c98:	std    
  425c99:	add    al,0x2
  425c9b:	call   ebx
  425c9d:	repnz sub BYTE PTR [ebx],bh
  425ca0:	jns    0x425c75
  425ca2:	mov    ebp,0xcdd35392
  425ca7:	(bad)  
  425ca8:	std    
  425ca9:	int    0x96
  425cab:	std    
  425cac:	add    al,0xfb
  425cae:	(bad)  
  425caf:	cmp    ecx,DWORD PTR [edi]
  425cb1:	shr    edx,cl
  425cb3:	sub    bl,dl
  425cb5:	jmp    0x425c49
  425cb7:	push   ebx
  425cb8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cbe:	int    0x96
  425cc0:	std    
  425cc1:	add    al,0xfb
  425cc3:	(bad)  
  425cc4:	cmp    ecx,DWORD PTR [edi]
  425cc6:	shr    edx,cl
  425cc8:	sub    bl,dl
  425cca:	jmp    0x425c5e
  425ccc:	push   ebx
  425ccd:	adc    ecx,edi
  425ccf:	pop    ss
  425cd0:	nop
  425cd1:	add    BYTE PTR [eax],al
  425cd3:	add    BYTE PTR [edx-0x33],ah
  425cd6:	xchg   esi,eax
  425cd7:	std    
  425cd8:	int    0xa6
  425cda:	std    
  425cdb:	xchg   ebx,edx
  425cdd:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425ce3:	int3   
  425ce4:	push   es
  425ce5:	aam    0x0
  425ce7:	add    BYTE PTR [eax],al
  425ce9:	int    0x76
  425ceb:	sub    al,0x4
  425ced:	hlt    
  425cee:	call   ebx
  425cf0:	repz xchg edx,eax
  425cf2:	shl    ebp,cl
  425cf4:	sub    BYTE PTR [ebx-0x2b],dl
  425cf7:	iret   
  425cf8:	or     edi,ebp
  425cfa:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d01:	add    BYTE PTR [eax+0x50007162],0x0
  425d08:	xchg   esi,eax
  425d09:	and    al,0x6
  425d0b:	ins    DWORD PTR es:[edi],dx
  425d0c:	aam    0xbc
  425d0e:	int    0x76
  425d10:	in     eax,dx
  425d11:	int    0x8d
  425d13:	adc    DWORD PTR [edi],ebp
  425d15:	inc    ebp
  425d16:	jge    0x425caa
  425d18:	shr    ebx,cl
  425d1a:	xchg   edx,eax
  425d1b:	int    0xe3
  425d1d:	int    0x7d
  425d1f:	int    0x76
  425d21:	in     eax,dx
  425d22:	int    0x96
  425d24:	adc    DWORD PTR [ebx],edi
  425d26:	fidivr DWORD PTR [ebx]
  425d28:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d2f:	push   ebx
  425d30:	adc    ecx,ebp
  425d32:	xor    BYTE PTR [ebx-0x76],al
  425d35:	jo     0x425d04
  425d37:	xchg   esi,eax
  425d38:	push   esp
  425d39:	in     al,dx
  425d3a:	push   esp
  425d3b:	int    0x92
  425d3d:	int    0xa6
  425d3f:	push   eax
  425d40:	retf   0x5324
  425d43:	or     DWORD PTR [eax+ecx*4],esp
  425d46:	int    0x76
  425d48:	cmc    
  425d49:	int    0x8d
  425d4b:	stc    
  425d4c:	das    
  425d4d:	inc    ebp
  425d4e:	jge    0x425ce2
  425d50:	shr    ebx,cl
  425d52:	xchg   edx,eax
  425d53:	int    0x8d
  425d55:	cmc    
  425d56:	int    0xa6
  425d58:	stc    
  425d59:	cmp    ecx,ecx
  425d5b:	cmp    ebx,ebp
  425d5d:	shl    edx,cl
  425d5f:	sub    ch,cl
  425d61:	lea    esi,[eax]
  425d63:	push   ebx
  425d64:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d6a:	int    0x1c
  425d6c:	inc    ebx
  425d6d:	(bad)  
  425d6e:	jo     0x425d7a
  425d70:	lea    esi,[eax]
  425d72:	or     cl,0xec
  425d75:	xchg   ch,cl
  425d77:	xchg   esi,eax
  425d78:	push   esp
  425d79:	int    0x76
  425d7b:	dec    esp
  425d7c:	int    0x4a
  425d7e:	int    0x20
  425d80:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d86:	sbb    al,0xcd
  425d88:	dec    edx
  425d89:	xchg   ebp,ecx
  425d8b:	sub    eax,0xa808080
  425d90:	lea    esi,[eax]
  425d92:	int    0x4a
  425d94:	int    0xa6
  425d96:	push   eax
  425d97:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425d9e:	int    0x80
  425da0:	int    0x4a
  425da2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425da6:	jbe    0x425d95
  425da8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dae:	das    
  425daf:	inc    ebp
  425db0:	jge    0x425d44
  425db2:	shr    ebx,cl
  425db4:	xchg   edx,eax
  425db5:	int    0x8d
  425db7:	in     eax,dx
  425db8:	int    0xa6
  425dba:	adc    DWORD PTR [ebx],edi
  425dbc:	leave  
  425dbd:	cmp    ebx,ebp
  425dbf:	shl    edx,cl
  425dc1:	sub    BYTE PTR [ebx-0x3b],dl
  425dc4:	or     dh,BYTE PTR [esi+0x44]
  425dc7:	int    0x76
  425dc9:	xor    bl,ch
  425dcb:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425dd1:	in     eax,dx
  425dd2:	int    0x8d
  425dd4:	adc    DWORD PTR [edi],ebp
  425dd6:	inc    ebp
  425dd7:	jge    0x425d6b
  425dd9:	shr    ebx,cl
  425ddb:	xchg   edx,eax
  425ddc:	int    0x8d
  425dde:	in     eax,dx
  425ddf:	int    0xa6
  425de1:	adc    ebx,edx
  425de3:	repnz sub ch,cl
  425de6:	lea    edx,[ebx+edi*1]
  425de9:	leave  
  425dea:	cmp    ebx,ebp
  425dec:	add    al,0xd3
  425dee:	stc    
  425def:	push   ebx
  425df0:	(bad)
  425df3:	inc    ebx
  425df4:	shr    DWORD PTR [edi],cl
  425df6:	add    al,0xf7
  425df8:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e00:	dec    ebx
  425e01:	mov    BYTE PTR [ebx],dh
  425e03:	jge    0x425e0f
  425e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e06:	xor    al,0xa
  425e08:	lea    edi,[ecx*8+0x76cdf18d]
  425e0f:	xchg   ebp,eax
  425e10:	das    
  425e11:	inc    ebp
  425e12:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e18:	jbe    0x425e0b
  425e1a:	int    0xa6
  425e1c:	xchg   ebp,eax
  425e1d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e23:	cmp    esi,eax
  425e25:	cmp    ebx,ebp
  425e27:	push   ebx
  425e28:	or     al,0xcd
  425e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e2b:	stc    
  425e2c:	das    
  425e2d:	inc    ebp
  425e2e:	popf   
  425e2f:	xchg   edx,eax
  425e30:	or     dh,BYTE PTR [esi+0x54]
  425e33:	int    0x76
  425e35:	cmc    
  425e36:	push   ecx
  425e37:	out    0x54,al
  425e39:	add    al,0xd3
  425e3b:	dec    edx
  425e3c:	shr    esp,cl
  425e3e:	xchg   edx,eax
  425e3f:	int    0xa6
  425e41:	stc    
  425e42:	cmp    ebx,ebp
  425e44:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e4a:	int    0xa6
  425e4c:	cmc    
  425e4d:	int    0x8d
  425e4f:	stc    
  425e50:	das    
  425e51:	inc    ebp
  425e52:	or     al,0x92
  425e54:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e5a:	shr    ebx,cl
  425e5c:	xchg   edx,eax
  425e5d:	int    0x8d
  425e5f:	stc    
  425e60:	cmp    ecx,ebx
  425e62:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e68:	cmp    esp,ecx
  425e6a:	push   ebx
  425e6b:	fcmovne st,st(5)
  425e6d:	lea    esi,[edi+ebp*1]
  425e70:	mov    ebx,0x2bc53389
  425e75:	ror    ebp,cl
  425e77:	(bad)  
  425e78:	icebp  
  425e79:	or     dh,BYTE PTR [esi+0x54]
  425e7c:	int    0x76
  425e7e:	xchg   ebp,eax
  425e7f:	das    
  425e80:	inc    ebp
  425e81:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e87:	jbe    0x425e7a
  425e89:	int    0xa6
  425e8b:	xchg   ebp,eax
  425e8c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425e92:	das    
  425e93:	mov    ebx,0xa6020180
  425e98:	cmp    ebx,ebp
  425e9a:	dec    edx
  425e9b:	or     al,0x1
  425e9d:	ror    DWORD PTR [edx-0x2b],cl
  425ea0:	mov    ebp,0xbdbfcb3b
  425ea5:	or     ah,BYTE PTR [ebx]
  425ea7:	and    eax,0x92d3352f
  425eac:	shr    DWORD PTR [ebp+0x37d65692],cl
  425eb2:	ficom  WORD PTR [ebx]
  425eb4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425eb7:	fidiv  WORD PTR [edi]
  425eb9:	ficom  WORD PTR [ebx]
  425ebb:	(bad)  
  425ebc:	ss inc ebx
  425ebe:	or     al,0xd6
  425ec0:	cs int 0x92
  425ec3:	int    0x8d
  425ec5:	xor    BYTE PTR [edi+0x548dcd81],al
  425ecb:	add    al,0x64
  425ecd:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425ed3:	int    0x8d
  425ed5:	xor    BYTE PTR [edi-0x7772327f],al
  425edb:	xchg   DWORD PTR [esi+0x54],esi
  425ede:	int    0x89
  425ee0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425eea:	push   es
  425eeb:	and    eax,DWORD PTR [eax]
  425eed:	add    BYTE PTR [eax],al
  425eef:	in     al,dx
  425ef0:	test   DWORD PTR [edi+0x25230abd],edi
  425ef6:	int    0x76
  425ef8:	adc    al,0x81
  425efa:	jbe    0x425f40
  425efc:	leave  
  425efd:	jbe    0x425f6c
  425eff:	scas   al,BYTE PTR es:[edi]
  425f00:	aaa    
  425f01:	ficom  WORD PTR [ebx]
  425f03:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f09:	int    0x8d
  425f0b:	jne    0x425f3c
  425f0d:	inc    ebp
  425f0e:	jge    0x425ea2
  425f10:	shr    ebx,cl
  425f12:	xchg   edx,eax
  425f13:	int    0x8d
  425f15:	ins    DWORD PTR es:[edi],dx
  425f16:	int    0xa6
  425f18:	jne    0x425eed
  425f1a:	repnz sub ch,cl
  425f1d:	lea    ecx,[ebp+ecx*8-0x77]
  425f21:	cmp    ecx,ecx
  425f23:	cmp    ebx,ebp
  425f25:	push   ebx
  425f26:	(bad)
  425f29:	shl    esp,cl
  425f2b:	int    0x8d
  425f2d:	inc    esp
  425f2e:	inc    ebx
  425f2f:	mov    BYTE PTR [edi+0x54],dh
  425f32:	int    0x76
  425f34:	xor    BYTE PTR [edi+0x760a1476],al
  425f3a:	xor    ch,cl
  425f3c:	ins    BYTE PTR es:[edi],dx
  425f3d:	test   BYTE PTR [edx],cl
  425f3f:	jbe    0x425f55
  425f41:	int    0x76
  425f43:	in     eax,dx
  425f44:	int    0x8d
  425f46:	adc    DWORD PTR [edi],ebp
  425f48:	inc    ebp
  425f49:	jge    0x425edd
  425f4b:	shr    ebx,cl
  425f4d:	xchg   edx,eax
  425f4e:	int    0x8d
  425f50:	in     eax,dx
  425f51:	int    0xa6
  425f53:	adc    DWORD PTR [ebx],edi
  425f55:	fnstsw WORD PTR [ebx]
  425f57:	leave  
  425f58:	push   ebx
  425f59:	(bad)
  425f5c:	sub    BYTE PTR [esi+0x76],bl
  425f5f:	adc    al,0x2f
  425f61:	push   es
  425f62:	mov    esi,0xcd0000ff
  425f67:	(bad)  
  425f68:	std    
  425f69:	int    0x96
  425f6b:	std    
  425f6c:	cmp    ecx,DWORD PTR [edi]
  425f6e:	shr    ebx,cl
  425f70:	xchg   edx,eax
  425f71:	sar    bh,0x9c
  425f74:	cmp    esi,ecx
  425f76:	shr    edx,cl
  425f78:	sub    BYTE PTR [ebx+0x13],dl
  425f7b:	int    0x96
  425f7d:	std    
  425f7e:	int    0xa6
  425f80:	std    
  425f81:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f87:	popf   
  425f88:	shl    ebp,cl
  425f8a:	sub    BYTE PTR [ebx-0x2b],dl
  425f8d:	xchg   DWORD PTR [ebx],edx
  425f8f:	int    0x96
  425f91:	std    
  425f92:	int    0xa6
  425f94:	std    
  425f95:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f9b:	popf   
  425f9c:	shl    ebp,cl
  425f9e:	sub    BYTE PTR [ebx-0x2b],dl
  425fa1:	xchg   DWORD PTR [ebx],edx
  425fa3:	int    0x96
  425fa5:	std    
  425fa6:	int    0xa6
  425fa8:	std    
  425fa9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425faf:	xchg   edx,eax
  425fb0:	shl    ebp,cl
  425fb2:	sub    BYTE PTR [ebx-0x2b],dl
  425fb5:	xchg   DWORD PTR [ebx],edx
  425fb7:	or     cl,bh
  425fb9:	nop
  425fba:	add    BYTE PTR [eax],al
  425fbc:	add    ch,cl
  425fbe:	lea    edx,[eax-0x33]
  425fc1:	xchg   esi,eax
  425fc2:	mov    ebp,0x3bbda6cd
  425fc7:	cdq    
  425fc8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fce:	in     eax,0x28
  425fd0:	push   ebx
  425fd1:	aad    0xa
  425fd3:	int3   
  425fd4:	pop    ss
  425fd5:	aam    0x0
  425fd7:	add    BYTE PTR [eax],al
  425fd9:	int    0x8d
  425fdb:	dec    esp
  425fdc:	int    0x89
  425fde:	int    0x96
  425fe0:	std    
  425fe1:	int    0xa6
  425fe3:	std    
  425fe4:	int    0x7e
  425fe6:	jo     0x426023
  425fe8:	cdq    
  425fe9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fef:	in     eax,0x28
  425ff1:	push   ebx
  425ff2:	aad    0xa
  425ff4:	int3   
  425ff5:	pop    ss
  425ff6:	aam    0x0
  425ff8:	add    BYTE PTR [eax],al
  425ffa:	int    0x8d
  425ffc:	sbb    al,0xcd
  425ffe:	xchg   esi,eax
  425fff:	sbb    al,0x3b
  426001:	icebp  
  426002:	shr    edx,cl
  426004:	sub    BYTE PTR [ebx],bh
  426006:	psrlq  mm5,mm3
  426009:	xchg   edx,eax
  42600a:	push   ebx
  42600b:	adc    ecx,ebp
  42600d:	xchg   esi,eax
  42600e:	std    
  42600f:	int    0xa6
  426011:	std    
  426012:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426018:	cdq    
  426019:	shl    ebp,cl
  42601b:	sub    bl,dl
  42601d:	repz xchg edx,eax
  42601f:	push   ebx
  426020:	aad    0xcd
  426022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426023:	std    
  426024:	cmp    edi,DWORD PTR [ecx+0x4]
  426027:	hlt    
  426028:	call   ebx
  42602a:	mov    ebp,0x28e5d392
  42602f:	push   ebx
  426030:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426036:	aam    0x0
  426038:	add    BYTE PTR [eax],al
  42603a:	int    0x8d
  42603c:	std    
  42603d:	int    0x96
  42603f:	std    
  426040:	cmp    ecx,DWORD PTR [edi]
  426042:	shr    ebx,cl
  426044:	xchg   edx,eax
  426045:	sar    bh,0x9c
  426048:	cmp    esi,ecx
  42604a:	shr    edx,cl
  42604c:	sub    BYTE PTR [ebx+0x13],dl
  42604f:	int    0x96
  426051:	std    
  426052:	int    0xa6
  426054:	std    
  426055:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42605b:	popf   
  42605c:	shl    ebp,cl
  42605e:	sub    BYTE PTR [ebx-0x2b],dl
  426061:	xchg   DWORD PTR [ebx],edx
  426063:	int    0x96
  426065:	std    
  426066:	int    0xa6
  426068:	std    
  426069:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42606f:	popf   
  426070:	shl    ebp,cl
  426072:	sub    BYTE PTR [ebx-0x2b],dl
  426075:	xchg   DWORD PTR [ebx],edx
  426077:	iret   
  426078:	xchg   esi,eax
  426079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42607a:	or     dl,BYTE PTR ds:0xd4cf
  426080:	add    bh,cl
  426082:	iret   
  426083:	nop
  426084:	add    BYTE PTR [eax],al
  426086:	add    BYTE PTR [ecx-0x33],dh
  426089:	(bad)  
  42608a:	std    
  42608b:	int    0x96
  42608d:	std    
  42608e:	cmp    ecx,DWORD PTR [edi]
  426090:	int    0xd6
  426092:	sub    al,0x3b
  426094:	icebp  
  426095:	shr    ebx,cl
  426097:	xchg   edx,eax
  426098:	shr    edx,cl
  42609a:	sub    BYTE PTR [ebx+0x13],dl
  42609d:	jno    0x42606e
  42609f:	pop    es
  4260a0:	out    dx,eax
  4260a1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260a8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260b2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260b8:	dec    esp
  4260b9:	int    0x76
  4260bb:	mov    ch,cl
  4260bd:	mov    BYTE PTR [edi-0x72f5b373],al
  4260c3:	dec    esp
  4260c4:	int    0x8d
  4260c6:	cmc    
  4260c7:	int    0x96
  4260c9:	stc    
  4260ca:	das    
  4260cb:	inc    ebp
  4260cc:	jecxz  0x426060
  4260ce:	shl    ebx,cl
  4260d0:	xchg   edx,eax
  4260d1:	int    0x96
  4260d3:	cmc    
  4260d4:	int    0xd6
  4260d6:	stc    
  4260d7:	cmp    esi,edi
  4260d9:	shr    edx,cl
  4260db:	sub    ch,cl
  4260dd:	xchg   esi,eax
  4260de:	cmc    
  4260df:	cmp    esi,eax
  4260e1:	push   ebx
  4260e2:	bswap  ebp
  4260e4:	(bad)  
  4260e5:	stc    
  4260e6:	das    
  4260e7:	inc    ebp
  4260e8:	sti    
  4260e9:	xchg   edx,eax
  4260ea:	shr    edi,cl
  4260ec:	xchg   edx,eax
  4260ed:	int    0xd6
  4260ef:	cmc    
  4260f0:	int    0xa6
  4260f2:	stc    
  4260f3:	cmp    ebx,ecx
  4260f5:	cmp    ebx,ebp
  4260f7:	push   ebx
  4260f8:	aad    0x87
  4260fa:	adc    ecx,ebp
  4260fc:	xchg   esi,eax
  4260fd:	cmc    
  4260fe:	sar    DWORD PTR [ecx-0x62932d8],cl
  426104:	das    
  426105:	inc    ebp
  426106:	sti    
  426107:	xchg   edx,eax
  426108:	shr    edi,cl
  42610a:	xchg   edx,eax
  42610b:	int    0xd6
  42610d:	cmc    
  42610e:	int    0xa6
  426110:	stc    
  426111:	cmp    ebx,ecx
  426113:	cmp    ebx,ebp
  426115:	push   ebx
  426116:	aad    0x87
  426118:	adc    ecx,ebp
  42611a:	xchg   esi,eax
  42611b:	cmc    
  42611c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426122:	das    
  426123:	inc    ebp
  426124:	sti    
  426125:	xchg   edx,eax
  426126:	shr    edi,cl
  426128:	xchg   edx,eax
  426129:	int    0xd6
  42612b:	cmc    
  42612c:	cmp    ebx,ecx
  42612e:	int    0xe6
  426130:	stc    
  426131:	cmp    eax,DWORD PTR [eax]
  426133:	push   ebx
  426134:	fld    DWORD PTR [edi+0x707113]
  42613a:	(bad)  
  42613b:	dec    esp
  42613c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426142:	add    BYTE PTR [eax],al
  426144:	int    0x76
  426146:	or     eax,0xcb63a8aa
  42614b:	rcl    BYTE PTR [eax-0x80],cl
  42614e:	xchg   esi,eax
  42614f:	int    0xed
  426151:	add    al,0xed
  426153:	inc    esp
  426154:	pop    ebx
  426155:	cwde   
  426156:	call   0x76c9:0xcb3bdd3b
  42615d:	popf   
  42615e:	(bad)  
  42615f:	aaa    
  426160:	ficom  WORD PTR [ebx]
  426162:	pop    ebp
  426163:	mov    ebp,0xa25230a
  426168:	jbe    0x42610f
  42616a:	leave  
  42616b:	jbe    0x42612a
  42616d:	xchg   ecx,eax
  42616e:	aaa    
  42616f:	ficom  WORD PTR [ebx]
  426171:	or     dh,BYTE PTR [esi-0x13]
  426174:	leave  
  426175:	jbe    0x426164
  426177:	dec    ecx
  426178:	mov    al,ds:0x76c93586
  42617d:	cmc    
  42617e:	dec    ecx
  42617f:	lahf   
  426180:	xchg   BYTE PTR ds:0x691176c9,dh
  426186:	and    DWORD PTR [esi+0x1176c935],eax
  42618c:	cmp    DWORD PTR [ecx],esp
  42618e:	xchg   BYTE PTR ds:0x49f976c9,dh
  426194:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  42619b:	jbe    0x426196
  42619d:	int    0x76
  42619f:	sbb    al,0xcd
  4261a1:	shl    BYTE PTR ds:0xcd808081,1
  4261a7:	jbe    0x4261c5
  4261a9:	int    0x8d
  4261ab:	sbb    al,0xcd
  4261ad:	add    DWORD PTR ds:0xcd808081,ebp
  4261b3:	xor    ch,cl
  4261b5:	pop    esp
  4261b6:	xchg   eax,esp
  4261b8:	fs int 0x96
  4261bb:	popf   
  4261bc:	int    0xa
  4261be:	and    eax,0xa808081
  4261c3:	out    0xb5,al
  4261c5:	int    0xe6
  4261c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261c8:	das    
  4261c9:	inc    ebp
  4261ca:	add    edx,DWORD PTR [edx-0x326def2d]
  4261d0:	out    0x9d,al
  4261d2:	int    0xa6
  4261d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261d5:	adc    bh,bl
  4261d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261d8:	mov    esi,0xdd3b4229
  4261dd:	shr    ecx,cl
  4261df:	sub    ch,cl
  4261e1:	pop    esi
  4261e2:	push   ebx
  4261e3:	aad    0x43
  4261e5:	(bad)  
  4261e7:	nop
  4261e8:	int    0x18
  4261ea:	or     dl,BYTE PTR [esi+0x1496cdf9]
  4261f0:	int    0x96
  4261f2:	xor    ch,cl
  4261f4:	xchg   esi,eax
  4261f5:	dec    esp
  4261f6:	iret   
  4261f7:	xchg   esi,eax
  4261f8:	lods   eax,DWORD PTR ds:[esi]
  4261f9:	bound  eax,QWORD PTR [eax]
  4261fb:	(bad)  
  4261fc:	stc    
  4261fd:	jno    0x42626f
  4261ff:	cwde   
  426200:	add    dh,dl
  426202:	sbb    al,0xcf
  426204:	jbe    0x4261bb
  426206:	add    dh,dl
  426208:	mov    BYTE PTR [eax],al
  42620a:	(bad)  
  42620b:	cmc    
  42620c:	add    dh,dl
  42620e:	adc    DWORD PTR [eax],eax
  426210:	(bad)  
  426211:	in     eax,dx
  426212:	jo     0x4261e3
  426214:	jbe    0x426213
  426216:	jo     0x4261d5
  426218:	stos   BYTE PTR es:[edi],al
  426219:	clc    
  42621a:	add    BYTE PTR [eax],al
  42621c:	or     dh,BYTE PTR [esi+0x1c]
  42621f:	int    0x76
  426221:	sbb    al,0xcd
  426223:	lea    esp,[edx+ecx*1]
  426226:	outs   dx,BYTE PTR ds:[esi]
  426227:	adc    al,0xcd
  426229:	jbe    0x42624f
  42622b:	leave  
  42622c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426233:	lods   eax,DWORD PTR ds:[esi]
  426234:	int    0x8d
  426236:	and    al,0xa
  426238:	outs   dx,BYTE PTR ds:[esi]
  426239:	test   ch,cl
  42623b:	jbe    0x42626d
  42623d:	int    0x8d
  42623f:	and    al,0xa
  426241:	outs   dx,BYTE PTR ds:[esi]
  426242:	mov    ch,cl
  426244:	jbe    0x42625a
  426246:	int    0x8d
  426248:	and    al,0xa
  42624a:	outs   dx,BYTE PTR ds:[esi]
  42624b:	dec    esp
  42624c:	int    0x76
  42624e:	and    al,0xc9
  426250:	ins    BYTE PTR es:[edi],dx
  426251:	and    al,0x81
  426253:	add    BYTE PTR [eax-0x32e11380],0x76
  42625a:	sbb    al,0xcd
  42625c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426263:	or     ch,0xa
  426266:	and    eax,0xcd808081
  42626b:	xor    BYTE PTR [ebx],0x81
  42626e:	or     dh,BYTE PTR [esi-0x3]
  426271:	int    0x76
  426273:	std    
  426274:	stos   BYTE PTR es:[edi],al
  426275:	test   al,0x63
  426277:	retf   
  426278:	rcr    BYTE PTR [eax+eax*4],cl
  42627b:	xchg   esi,eax
  42627c:	int    0xed
  42627e:	int    0x76
  426280:	dec    esp
  426281:	adc    ch,ch
  426283:	cmp    eax,0x5b808081
  426288:	cwde   
  426289:	call   0x2f35:0x86214966
  426290:	push   es
  426291:	mov    ecx,0xcd80804a
  426296:	jbe    0x4262c8
  426298:	inc    cx
  42629a:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262a0:	dec    edx
  4262a1:	add    BYTE PTR [eax-0x29128937],0x37
  4262a8:	ficom  WORD PTR [ebx]
  4262aa:	pop    ebp
  4262ab:	mov    ebp,0xa25230a
  4262b0:	jbe    0x4262c3
  4262b2:	leave  
  4262b3:	jbe    0x42626a
  4262b5:	xchg   ecx,eax
  4262b6:	aaa    
  4262b7:	ficom  WORD PTR [ebx]
  4262b9:	or     dh,BYTE PTR [esi-0x43]
  4262bc:	int    0x76
  4262be:	mov    BYTE PTR [edx],cl
  4262c0:	jbe    0x4262b7
  4262c2:	int    0x76
  4262c4:	cmc    
  4262c5:	int    0x1
  4262c7:	mov    ebp,0xcd808081
  4262cc:	or     ch,0x80
  4262cf:	or     dh,BYTE PTR [esi-0x7]
  4262d2:	pop    edi
  4262d3:	jle    0x42630a
  4262d5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262dc:	mov    eax,0x4b0760a
  4262e1:	ins    DWORD PTR es:[edi],dx
  4262e2:	(bad)  
  4262e3:	mov    eax,0xcda2760a
  4262e8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262ee:	(bad)  
  4262ef:	xor    eax,0xf1cd8080
  4262f4:	mov    eax,0xcf19960a
  4262f9:	nop
  4262fa:	xchg   edx,eax
  4262fb:	iret   
  4262fc:	sahf   
  4262fd:	(bad)  
  4262fe:	int    0x99
  426300:	mov    eax,0xcd1d960a
  426305:	aad    0xb8
  426307:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42630d:	mov    eax,0xcf01960a
  426312:	jno    0x426368
  426314:	int    0x3
  426316:	mov    eax,0x40be60a
  42631b:	leave  
  42631c:	xchg   ebp,eax
  42631d:	mov    eax,0xcf05e60a
  426322:	ficomp WORD PTR [eax-0x48]
  426325:	or     ah,dh
  426327:	pop    es
  426328:	mov    eax,0xb809760a
  42632d:	or     dl,dh
  42632f:	retf   0xc5cd
  426332:	mov    eax,0xb8cc760a
  426337:	or     dl,BYTE PTR [edi]
  426339:	ins    BYTE PTR es:[edi],dx
  42633a:	add    BYTE PTR [eax],al
  42633c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426343:	push   edx
  426344:	add    BYTE PTR [eax],al
  426346:	add    bh,cl
  426348:	outs   dx,BYTE PTR ds:[esi]
  426349:	add    edi,DWORD PTR [eax+0x74060a]
  42634f:	add    BYTE PTR [eax],al
  426351:	add    al,0x6d
  426353:	inc    edx
  426354:	mov    eax,0x78060a
  426359:	add    BYTE PTR [eax],al
  42635b:	iret   
  42635c:	outs   dx,BYTE PTR ds:[esi]
  42635d:	xor    BYTE PTR [eax+0x7c060a],bh
  426363:	add    BYTE PTR [eax],al
  426365:	add    al,0x6d
  426367:	xor    bh,BYTE PTR [eax+0x8a060a]
  42636d:	add    BYTE PTR [eax],al
  42636f:	mov    eax,0x8ccf0a
  426374:	add    BYTE PTR [eax],al
  426376:	int    0xc5
  426378:	mov    eax,0x8e060a
  42637d:	add    BYTE PTR [eax],al
  42637f:	int    0x76
  426381:	in     eax,dx
  426382:	int    0x8d
  426384:	adc    DWORD PTR [edi],ebp
  426386:	inc    ebp
  426387:	jge    0x42631b
  426389:	shr    ebx,cl
  42638b:	xchg   edx,eax
  42638c:	int    0x8d
  42638e:	in     eax,dx
  42638f:	int    0x96
  426391:	adc    ebx,eax
  426393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426394:	mov    esi,0xc93b4229
  426399:	cmp    ebx,edx
  42639b:	shl    edx,cl
  42639d:	sub    BYTE PTR [ebx-0x2e],dl
  4263a0:	in     al,dx
  4263a1:	outs   dx,BYTE PTR ds:[esi]
  4263a2:	iret   
  4263a3:	aam    0x76
  4263a5:	mov    al,0xb8
  4263a7:	int    0x4e
  4263a9:	das    
  4263aa:	mov    ebx,0xcbbb2f18
  4263af:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263b2:	sti    
  4263b3:	and    DWORD PTR ds:0xf3e38080,esi
  4263b9:	shl    edx,cl
  4263bb:	das    
  4263bc:	push   ebx
  4263bd:	adc    ecx,DWORD PTR [ecx]
  4263bf:	int3   
  4263c0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263c6:	lea    esi,[ebp+0x2fbd96cd]
  4263cc:	inc    ebp
  4263cd:	jecxz  0x426361
  4263cf:	shl    ebx,cl
  4263d1:	xchg   edx,eax
  4263d2:	int    0x96
  4263d4:	mov    ch,0xcd
  4263d6:	(bad)  
  4263d7:	mov    ebp,0xf73bf03b
  4263dc:	push   ebx
  4263dd:	psrlq  mm5,mm2
  4263e0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263e6:	(bad)  
  4263e7:	popa   
  4263e8:	int    0x76
  4263ea:	in     eax,dx
  4263eb:	int    0x8d
  4263ed:	adc    DWORD PTR [edi],ebp
  4263ef:	inc    ebp
  4263f0:	jge    0x426384
  4263f2:	shr    ebx,cl
  4263f4:	xchg   edx,eax
  4263f5:	int    0x8d
  4263f7:	in     eax,dx
  4263f8:	int    0x96
  4263fa:	adc    DWORD PTR [ebx],edi
  4263fc:	leave  
  4263fd:	cmp    ebx,edx
  4263ff:	shl    edx,cl
  426401:	sub    BYTE PTR [ebx-0x2e],dl
  426404:	in     al,dx
  426405:	outs   dx,BYTE PTR ds:[esi]
  426406:	iret   
  426407:	aam    0x76
  426409:	add    DWORD PTR [eax-0x44d0b133],edi
  42640f:	sbb    BYTE PTR [edi],ch
  426411:	mov    ebx,0x120c3bcb
  426416:	sti    
  426417:	and    DWORD PTR ds:0xf3e38080,esi
  42641d:	shl    edx,cl
  42641f:	das    
  426420:	push   ebx
  426421:	adc    ecx,DWORD PTR [ecx]
  426423:	int3   
  426424:	test   esp,ecx
  426426:	inc    DWORD PTR [eax]
  426428:	add    ch,cl
  42642a:	lea    esi,[ebp+0x2fbd96cd]
  426430:	inc    ebp
  426431:	jecxz  0x4263c5
  426433:	shl    ebx,cl
  426435:	xchg   edx,eax
  426436:	int    0x96
  426438:	mov    ch,0xcd
  42643a:	(bad)  
  42643b:	mov    ebp,0xf73bf03b
  426440:	push   ebx
  426441:	psrlq  mm5,mm2
  426444:	sub    BYTE PTR [edi-0x7406fb2d],al
  42644a:	(bad)  
  42644b:	popa   
  42644c:	int    0x76
  42644e:	in     eax,dx
  42644f:	int    0x8d
  426451:	adc    DWORD PTR [edi],ebp
  426453:	inc    ebp
  426454:	jge    0x4263e8
  426456:	shr    ebx,cl
  426458:	xchg   edx,eax
  426459:	int    0x8d
  42645b:	in     eax,dx
  42645c:	int    0x96
  42645e:	adc    DWORD PTR [ebx],edi
  426460:	leave  
  426461:	cmp    ebx,edx
  426463:	shl    edx,cl
  426465:	sub    BYTE PTR [ebx-0x2e],dl
  426468:	in     al,dx
  426469:	je     0x42643a
  42646b:	push   ebp
  42646c:	jbe    0x4264da
  42646e:	add    BYTE PTR [eax],al
  426470:	add    BYTE PTR [eax-0x44d0b133],bh
  426476:	sbb    BYTE PTR [edi],ch
  426478:	mov    ebx,0x120c3bcb
  42647d:	sti    
  42647e:	and    DWORD PTR ds:0xf3e38080,esi
  426484:	shl    edx,cl
  426486:	das    
  426487:	push   ebx
  426488:	adc    ecx,DWORD PTR [ecx]
  42648a:	int3   
  42648b:	test   DWORD PTR ds:0xcd0000ff,eax
  426491:	lea    esi,[ebp+0x2fbd96cd]
  426497:	inc    ebp
  426498:	jecxz  0x42642c
  42649a:	shl    ebx,cl
  42649c:	xchg   edx,eax
  42649d:	int    0x96
  42649f:	mov    ch,0xcd
  4264a1:	(bad)  
  4264a2:	mov    ebp,0xf73bf03b
  4264a7:	push   ebx
  4264a8:	psrlq  mm5,mm2
  4264ab:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264b1:	(bad)  
  4264b2:	mov    ebx,0xffb506cf
  4264b7:	add    BYTE PTR [eax],al
  4264b9:	or     dh,BYTE PTR [esi-0x7]
  4264bc:	int    0x76
  4264be:	stc    
  4264bf:	pop    edi
  4264c0:	inc    esi
  4264c1:	pop    esp
  4264c2:	inc    ebp
  4264c3:	xchg   edi,eax
  4264c4:	or     cl,BYTE PTR [eax+0x79245161]
  4264ca:	daa    
  4264cb:	or     dh,BYTE PTR [eax-0x7c]
  4264ce:	int    0x6
  4264d0:	mov    ch,0xff
  4264d2:	add    BYTE PTR [eax],al
  4264d4:	int    0x57
  4264d6:	mov    ebp,0xa0000ff
  4264db:	(bad)  
  4264dc:	mov    ebp,0x8621d169
  4264e1:	xor    eax,0x62fd343
  4264e6:	pusha  
  4264e7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  4264f1:	add    BYTE PTR [eax-0x7fca76a3],0x80
  4264f8:	mov    eax,0xfff9060a
  4264fd:	add    BYTE PTR [eax],al
  4264ff:	int    0xc5
  426501:	mov    eax,0xff03060a
  426506:	add    BYTE PTR [eax],al
  426508:	pop    ebp
  426509:	es xor eax,0xab88080
  42650f:	push   es
  426510:	std    
  426511:	inc    DWORD PTR [eax]
  426513:	add    BYTE PTR [ebp-0x5d],bl
  426516:	xor    eax,0xab88080
  42651b:	push   es
  42651c:	(bad)  
  42651d:	inc    DWORD PTR [eax]
  42651f:	add    BYTE PTR [ebp+0x1e],bl
  426522:	xor    eax,0xab88080
  426527:	push   es
  426528:	add    BYTE PTR [eax],0x0
  42652b:	add    BYTE PTR [ebp*2-0x47823218],al
  426532:	or     cl,bh
  426534:	xchg   edx,eax
  426535:	add    BYTE PTR [eax],al
  426537:	add    ch,cl
  426539:	jbe    0x42656b
  42653b:	pop    edi
  42653c:	dec    ebx
  42653d:	xor    eax,0xab88080
  426542:	iret   
  426543:	test   BYTE PTR [eax],al
  426545:	add    BYTE PTR [eax],al
  426547:	add    al,0xd3
  426549:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42654f:	add    BYTE PTR [eax],al
  426551:	pop    edi
  426552:	push   esi
  426553:	xor    eax,0xab88080
  426558:	iret   
  426559:	mov    BYTE PTR [eax],al
  42655b:	add    BYTE PTR [eax],al
  42655d:	add    al,0xd3
  42655f:	pushf  
  426560:	mov    eax,0x4acf0a
  426565:	add    BYTE PTR [eax],al
  426567:	int    0xc
  426569:	mov    eax,0x4ccf0a
  42656e:	add    BYTE PTR [eax],al
  426570:	pop    edi
  426571:	add    al,0x35
  426573:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42657a:	add    BYTE PTR [eax],al
  42657c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42657f:	adc    DWORD PTR [eax-0x80],edx
  426582:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426589:	add    bl,dl
  42658b:	mov    ebp,0x151a5f92
  426590:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  426597:	add    BYTE PTR [eax],al
  426599:	pop    edi
  42659a:	call   0xcf0a:0xb88080eb
  4265a1:	adc    al,0x0
  4265a3:	add    BYTE PTR [eax],al
  4265a5:	int    0x8d
  4265a7:	xor    BYTE PTR [edx+eax*1],al
  4265aa:	call   ebx
  4265ac:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265b0:	or     al,BYTE PTR [esi]
  4265b2:	adc    eax,0xcd0000ff
  4265b7:	jbe    0x426605
  4265b9:	int    0x8d
  4265bb:	dec    esp
  4265bc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265bf:	mov    ebp,0xff020492
  4265c4:	shl    edx,cl
  4265c6:	sub    BYTE PTR [ebx-0x2d],dl
  4265c9:	leave  
  4265ca:	add    eax,0xff1d06
  4265cf:	add    BYTE PTR [eax],al
  4265d1:	add    BYTE PTR [eax+0x1506cf80],al
  4265d7:	inc    DWORD PTR [eax]
  4265d9:	add    BYTE PTR [eax-0x33],dh
  4265dc:	jbe    0x42660e
  4265de:	int    0x8d
  4265e0:	xor    BYTE PTR [ebx],bh
  4265e2:	jns    0x4265b7
  4265e4:	mov    ebp,0xff020492
  4265e9:	shl    edx,cl
  4265eb:	sub    BYTE PTR [ebx-0x2d],dl
  4265ee:	jo     0x4265bf
  4265f0:	push   es
  4265f1:	stc    
  4265f2:	inc    DWORD PTR [eax]
  4265f4:	add    BYTE PTR [eax-0x33],dh
  4265f7:	jbe    0x4265ee
  4265f9:	int    0x1
  4265fb:	cmp    eax,0xc9808081
  426600:	push   es
  426601:	sbb    BYTE PTR [eax],al
  426603:	add    BYTE PTR [eax],al
  426605:	inc    eax
  426606:	retf   
  426607:	fwait
  426608:	xor    eax,0x76cd5000
  42660d:	adc    al,0x0
  42660f:	icebp  
  426610:	or     dh,BYTE PTR [esi-0x7]
  426613:	int    0x76
  426615:	stc    
  426616:	push   es
  426617:	ins    DWORD PTR es:[edi],dx
  426618:	aam    0x4a
  42661a:	adc    dl,BYTE PTR [esi+0x68]
  42661d:	or     BYTE PTR [ebx+ecx*1],bl
  426620:	fmul   QWORD PTR [ebx-0x17]
  426623:	(bad)  
  426624:	int    0x8d
  426626:	dec    esp
  426627:	int    0x96
  426629:	dec    esp
  42662a:	sar    bh,0x3b
  42662d:	setl   BYTE PTR [ebx]
  426630:	icebp  
  426631:	shr    edx,cl
  426633:	sub    bl,dl
  426635:	jmp    0x4265c9
  426637:	push   ebx
  426638:	adc    ecx,ebp
  42663a:	xchg   esi,eax
  42663b:	cmc    
  42663c:	int    0xa2
  42663e:	and    eax,0x5e808081
  426643:	dec    edx
  426644:	das    
  426645:	push   es
  426646:	popa   
  426647:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42664d:	int    0x96
  42664f:	dec    esp
  426650:	cmp    ecx,DWORD PTR [edi]
  426652:	shr    ebx,cl
  426654:	xchg   edx,eax
  426655:	cmp    esi,ecx
  426657:	shr    edx,cl
  426659:	sub    BYTE PTR [ebx+0x13],dl
  42665c:	int    0x96
  42665e:	cmc    
  42665f:	int    0xa2
  426661:	in     al,0x81
  426663:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42666a:	int    0x96
  42666c:	dec    esp
  42666d:	cmp    ecx,DWORD PTR [edi]
  42666f:	shr    ebx,cl
  426671:	xchg   edx,eax
  426672:	cmp    esi,ecx
  426674:	shr    edx,cl
  426676:	sub    BYTE PTR [ebx+0x13],dl
  426679:	int    0x96
  42667b:	cmc    
  42667c:	int    0xa2
  42667e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426684:	pop    edi
  426685:	xor    ax,0x8080
  426689:	mov    eax,0x24cf0a
  42668e:	add    BYTE PTR [eax],al
  426690:	int    0xc
  426692:	mov    eax,0x28cf0a
  426697:	add    BYTE PTR [eax],al
  426699:	pop    edi
  42669a:	es xor eax,0xab88080
  4266a0:	iret   
  4266a1:	sub    al,0x0
  4266a3:	add    BYTE PTR [eax],al
  4266a5:	pop    edi
  4266a6:	daa    
  4266a7:	xor    eax,0xab88080
  4266ac:	iret   
  4266ad:	xor    al,BYTE PTR [eax]
  4266af:	add    BYTE PTR [eax],al
  4266b1:	add    al,0xd3
  4266b3:	test   eax,0x34cf0ab8
  4266b8:	add    BYTE PTR [eax],al
  4266ba:	add    BYTE PTR [edi-0x69],bl
  4266bd:	xor    eax,0xab88080
  4266c2:	iret   
  4266c3:	cmp    BYTE PTR [eax],al
  4266c5:	add    BYTE PTR [eax],al
  4266c7:	add    al,0xd3
  4266c9:	mov    dl,0xb8
  4266cb:	or     cl,bh
  4266cd:	cmp    al,0x0
  4266cf:	add    BYTE PTR [eax],al
  4266d1:	pop    edi
  4266d2:	fwait
  4266d3:	xor    eax,0xab88080
  4266d8:	iret   
  4266d9:	inc    eax
  4266da:	add    BYTE PTR [eax],al
  4266dc:	add    ch,cl
  4266de:	or     al,0xb8
  4266e0:	or     cl,bh
  4266e2:	inc    esp
  4266e3:	add    BYTE PTR [eax],al
  4266e5:	add    BYTE PTR [edi+0x17],bl
  4266e8:	xor    eax,0xab88080
  4266ed:	iret   
  4266ee:	dec    eax
  4266ef:	add    BYTE PTR [eax],al
  4266f1:	add    BYTE PTR [edi+0x26],bl
  4266f4:	pop    esi
  4266f5:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  4266fc:	add    BYTE PTR [eax],al
  4266fe:	pop    edi
  4266ff:	cmp    esi,DWORD PTR [edx]
  426701:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426708:	add    BYTE PTR [eax],al
  42670a:	jns    0x426782
  42670c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42670d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42670e:	pop    edi
  42670f:	pop    esp
  426710:	adc    eax,0xab88080
  426715:	iret   
  426716:	push   esp
  426717:	add    BYTE PTR [eax],al
  426719:	add    BYTE PTR [ebx+edx*8],al
  42671c:	pop    esp
  42671d:	mov    eax,0x58cf0a
  426722:	add    BYTE PTR [eax],al
  426724:	jns    0x42679c
  426726:	fisttp WORD PTR [ecx+0x79]
  426729:	jbe    0x4266d4
  42672b:	inc    ecx
  42672c:	jns    0x4267a4
  42672e:	loope  0x4266d3
  426730:	pop    edi
  426731:	fcom   st(4)
  426733:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42673a:	add    BYTE PTR [eax],al
  42673c:	jns    0x4267b4
  42673e:	lods   eax,DWORD PTR ds:[esi]
  42673f:	push   edi
  426740:	pop    edi
  426741:	jnp    0x426798
  426743:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42674a:	add    BYTE PTR [eax],al
  42674c:	jns    0x4267c4
  42674e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426752:	jmp    0x8080:0x35a15f47
  426759:	mov    eax,0x64cf0a
  42675e:	add    BYTE PTR [eax],al
  426760:	jns    0x4267d8
  426762:	in     eax,0x18
  426764:	int    0x8d
  426766:	xor    ch,cl
  426768:	xchg   esi,eax
  426769:	xor    BYTE PTR [ebx],bh
  42676b:	(bad)  
  42676d:	icebp  
  42676e:	shr    ebx,cl
  426770:	xchg   edx,eax
  426771:	shr    edx,cl
  426773:	sub    BYTE PTR [ebx+0x13],dl
  426776:	in     al,dx
  426777:	xchg   esp,eax
  426778:	int    0x96
  42677a:	xor    ch,cl
  42677c:	out    0x30,al
  42677e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426784:	stc    
  426785:	shr    ecx,cl
  426787:	sub    BYTE PTR [ebx-0x27],dl
  42678a:	xor    edx,DWORD PTR [ebx]
  42678c:	das    
  42678d:	pop    ecx
  42678e:	mov    WORD PTR [ebp-0x5b],cs
  426791:	int    0x96
  426793:	xor    ch,cl
  426795:	out    0x30,al
  426797:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42679d:	stc    
  42679e:	shr    ecx,cl
  4267a0:	sub    BYTE PTR [ebx-0x27],dl
  4267a3:	int    0xe6
  4267a5:	stc    
  4267a6:	add    al,0x2
  4267a8:	adc    DWORD PTR [edx],0xffffffd3
  4267ab:	fwait
  4267ac:	add    BYTE PTR [eax+0x9033380],0x8c
  4267b3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267b5:	int    0x96
  4267b7:	xor    ch,cl
  4267b9:	lea    esi,[eax]
  4267bb:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267c1:	sub    bl,dl
  4267c3:	repz xchg edx,eax
  4267c5:	push   ebx
  4267c6:	jecxz  0x426795
  4267c8:	(bad)  
  4267c9:	stc    
  4267ca:	xchg   DWORD PTR [ebx],edx
  4267cc:	int    0x96
  4267ce:	xor    ch,cl
  4267d0:	out    0x30,al
  4267d2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267d8:	xchg   edx,eax
  4267d9:	shr    ecx,cl
  4267db:	sub    BYTE PTR [ebx-0x27],dl
  4267de:	add    al,0xd2
  4267e0:	mov    BYTE PTR [edx],cl
  4267e2:	(bad)  
  4267e3:	stc    
  4267e4:	inc    ebx
  4267e5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267eb:	int    0x96
  4267ed:	xor    BYTE PTR [ebx],bh
  4267ef:	(bad)  
  4267f1:	icebp  
  4267f2:	shr    ebx,cl
  4267f4:	xchg   edx,eax
  4267f5:	shr    edx,cl
  4267f7:	sub    BYTE PTR [ebx+0x13],dl
  4267fa:	or     cl,bh
  4267fc:	adc    eax,0xcd0000ff
  426801:	lea    ecx,[ebp+ecx*8-0x6a]
  426805:	dec    esp
  426806:	cmp    ecx,DWORD PTR [edi]
  426808:	cmp    esi,ecx
  42680a:	shr    edx,cl
  42680c:	sub    bl,dl
  42680e:	jmp    0x4267a2
  426810:	push   ebx
  426811:	adc    ecx,edi
  426813:	xchg   esi,eax
  426814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426815:	or     dl,BYTE PTR ds:0xff1dcf
  42681b:	add    BYTE PTR [ecx+0x6b],ah
  42681e:	xor    eax,0x13cd8080
  426823:	mov    eax,0x4258d0a
  426828:	rcl    edx,cl
  42682a:	int    0xfa
  42682c:	mov    eax,0xcf29e60a
  426831:	loopne 0x4267dc
  426833:	mov    eax,0x42de60a
  426838:	leave  
  426839:	test   BYTE PTR [eax-0x304d19f6],bh
  42683f:	loopne 0x426855
  426841:	mov    eax,0x435e60a
  426846:	leave  
  426847:	loop   0x426801
  426849:	or     ah,dh
  42684b:	cmp    ebp,ecx
  42684d:	cli    
  42684e:	mov    eax,0xcd3de60a
  426853:	add    edi,DWORD PTR [eax-0x32be19f6]
  426859:	cld    
  42685a:	mov    eax,0xcd45e60a
  42685f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426865:	cli    
  426866:	mov    eax,0xcfc2e60a
  42686b:	loopne 0x426896
  42686d:	mov    eax,0x455e60a
  426872:	leave  
  426873:	test   BYTE PTR [eax-0x30a619f6],bh
  426879:	loopne 0x426810
  42687b:	mov    eax,0x45de60a
  426880:	leave  
  426881:	loop   0x42683b
  426883:	or     ah,dh
  426885:	popa   
  426886:	mov    eax,0xb8658d0a
  42688b:	or     dl,BYTE PTR [esi-0x47f33297]
  426891:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  426897:	int    0x96
  426899:	dec    esp
  42689a:	cmp    esi,ecx
  42689c:	cmp    ecx,DWORD PTR [edi]
  42689e:	shr    edx,cl
  4268a0:	sub    bl,dl
  4268a2:	jmp    0x426836
  4268a4:	push   ebx
  4268a5:	adc    ecx,ebp
  4268a7:	xchg   esi,eax
  4268a8:	dec    esp
  4268a9:	int    0xe6
  4268ab:	dec    esp
  4268ac:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268b2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268b8:	jmp    0x301bbbe5
  4268bd:	mov    ebx,0xb8d93b5e
  4268c2:	or     dh,BYTE PTR [ecx]
  4268c4:	int    0x8d
  4268c6:	dec    esp
  4268c7:	int    0x96
  4268c9:	dec    esp
  4268ca:	cmp    ecx,DWORD PTR [edi]
  4268cc:	cmp    esi,ecx
  4268ce:	shr    ebx,cl
  4268d0:	xchg   edx,eax
  4268d1:	shr    edx,cl
  4268d3:	sub    BYTE PTR [ebx+0x13],dl
  4268d6:	int    0x96
  4268d8:	dec    esp
  4268d9:	iret   
  4268da:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268e0:	out    0x4c,al
  4268e2:	shl    ebx,cl
  4268e4:	xchg   edx,eax
  4268e5:	cmp    edi,ecx
  4268e7:	shr    ecx,cl
  4268e9:	sub    BYTE PTR [ebx-0x27],dl
  4268ec:	das    
  4268ed:	mov    ebx,0xb8d93b5e
  4268f2:	or     dh,BYTE PTR [ecx]
  4268f4:	int    0x8d
  4268f6:	dec    esp
  4268f7:	int    0x96
  4268f9:	dec    esp
  4268fa:	cmp    esi,ecx
  4268fc:	shr    edx,cl
  4268fe:	sub    BYTE PTR [ebx],bh
  426900:	psrlq  mm5,mm3
  426903:	xchg   edx,eax
  426904:	push   ebx
  426905:	adc    ecx,ebp
  426907:	xchg   esi,eax
  426908:	dec    esp
  426909:	int    0xe6
  42690b:	dec    esp
  42690c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426912:	stc    
  426913:	shr    ecx,cl
  426915:	sub    BYTE PTR [ebx-0x27],dl
  426918:	mov    eax,0x9096cc0a
  42691d:	inc    DWORD PTR [eax]
  42691f:	add    ch,cl
  426921:	lea    ecx,[ebp+ecx*8-0x6a]
  426925:	dec    esp
  426926:	cmp    esi,ecx
  426928:	shr    edx,cl
  42692a:	sub    BYTE PTR [ebx],bh
  42692c:	psrlq  mm5,mm3
  42692f:	xchg   edx,eax
  426930:	push   ebx
  426931:	adc    ecx,ebp
  426933:	xchg   esi,eax
  426934:	dec    esp
  426935:	int    0xe6
  426937:	dec    esp
  426938:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42693e:	stc    
  42693f:	shr    ecx,cl
  426941:	sub    BYTE PTR [ebx-0x27],dl
  426944:	mov    eax,0xa496cc0a
  426949:	inc    DWORD PTR [eax]
  42694b:	add    ch,cl
  42694d:	lea    esi,[eax]
  42694f:	int    0x96
  426951:	xor    BYTE PTR [ebx],bh
  426953:	icebp  
  426954:	cmp    ecx,DWORD PTR [edi]
  426956:	shr    edx,cl
  426958:	sub    bl,dl
  42695a:	jmp    0x4268ee
  42695c:	push   ebx
  42695d:	adc    ecx,ebp
  42695f:	xchg   esi,eax
  426960:	xor    ch,cl
  426962:	out    0x30,al
  426964:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42696a:	xchg   edx,eax
  42696b:	shr    ecx,cl
  42696d:	sub    BYTE PTR [ebx-0x27],dl
  426970:	xchg   DWORD PTR [ebx],edx
  426972:	or     cl,bh
  426974:	adc    eax,0xcd0000ff
  426979:	lea    ecx,[ebp+ecx*8-0x6a]
  42697d:	dec    esp
  42697e:	int    0xe6
  426980:	mov    BYTE PTR [ebx],bh
  426982:	icebp  
  426983:	cmp    ecx,DWORD PTR [edi]
  426985:	shr    ebx,cl
  426987:	xchg   edx,eax
  426988:	shr    edx,cl
  42698a:	sub    BYTE PTR [ebx+0x13],dl
  42698d:	iret   
  42698e:	push   es
  42698f:	nop
  426990:	inc    DWORD PTR [eax]
  426992:	add    BYTE PTR [edx],cl
  426994:	add    eax,0xff1dcf
  426999:	add    bh,cl
  42699b:	jbe    0x42696d
  42699d:	mov    ebp,0x10d8
  4269a2:	int    0x8d
  4269a4:	xor    ch,cl
  4269a6:	xchg   esi,eax
  4269a7:	xor    al,al
  4269a9:	(bad)  
  4269aa:	cmp    ecx,DWORD PTR [edi]
  4269ac:	stos   BYTE PTR es:[edi],al
  4269ad:	cmp    ebx,ecx
  4269af:	shr    ebx,cl
  4269b1:	xchg   edx,eax
  4269b2:	shr    edx,cl
  4269b4:	sub    BYTE PTR [ebx+0x13],dl
  4269b7:	or     al,BYTE PTR ds:0xff1dcf
  4269bd:	add    ch,cl
  4269bf:	jbe    0x426a0d
  4269c1:	int    0x8d
  4269c3:	dec    esp
  4269c4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269c7:	mov    ebp,0xd3f03b92
  4269cc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269d0:	aam    0x3c
  4269d2:	iret   
  4269d3:	push   es
  4269d4:	adc    eax,0x700000ff
  4269d9:	int    0x76
  4269db:	xor    ch,cl
  4269dd:	lea    esi,[eax]
  4269df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269e2:	mov    ebp,0xd3f03b92
  4269e7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269eb:	jo     0x4269bc
  4269ed:	push   es
  4269ee:	and    al,0x0
  4269f0:	add    BYTE PTR [eax],al
  4269f2:	jo     0x4269c1
  4269f4:	jbe    0x426a0a
  4269f6:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  4269fd:	int    0x8d
  4269ff:	dec    esp
  426a00:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a03:	lock int 0xe6
  426a06:	mov    bl,dl
  426a08:	mov    ebp,0x28f2d392
  426a0d:	push   ebx
  426a0e:	ror    edi,cl
  426a10:	iret   
  426a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a12:	inc    DWORD PTR [eax]
  426a14:	add    BYTE PTR [edx],cl
  426a16:	int3   
  426a17:	push   es
  426a18:	sbb    eax,0xcf0000ff
  426a1d:	jbe    0x426a44
  426a1f:	mov    ebp,0xeff5
  426a24:	int    0x8d
  426a26:	xor    ch,cl
  426a28:	xchg   esi,eax
  426a29:	xor    BYTE PTR [ebx],bh
  426a2b:	psrlq  mm5,mm3
  426a2e:	xchg   edx,eax
  426a2f:	add    al,0xfb
  426a31:	call   ebx
  426a33:	jmp    0xcf05:0xa135328
  426a3a:	sbb    eax,0x610000ff
  426a3f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a45:	xor    eax,0xab88080
  426a4a:	push   es
  426a4b:	jo     0x426a4d
  426a4d:	add    BYTE PTR [eax],al
  426a4f:	iret   
  426a50:	mov    dh,BYTE PTR [eax]
  426a52:	mov    eax,0xb4cf0a
  426a57:	add    BYTE PTR [eax],al
  426a59:	pop    ebp
  426a5a:	adc    BYTE PTR ds:0xab88080,dh
  426a60:	push   es
  426a61:	bound  eax,QWORD PTR [eax]
  426a63:	add    BYTE PTR [eax],al
  426a65:	int    0xd2
  426a67:	mov    eax,0x94060a
  426a6c:	add    BYTE PTR [eax],al
  426a6e:	int    0xd3
  426a70:	mov    eax,0x98060a
  426a75:	add    BYTE PTR [eax],al
  426a77:	add    al,0x6d
  426a79:	sub    ch,cl
  426a7b:	jge    0x426a35
  426a7d:	or     cl,bh
  426a7f:	mov    eax,0xcf000000
  426a84:	mov    ch,BYTE PTR [eax]
  426a86:	mov    eax,0xbccf0a
  426a8b:	add    BYTE PTR [eax],al
  426a8d:	add    al,0xd3
  426a8f:	pusha  
  426a90:	mov    eax,0xc0cf0a
  426a95:	add    BYTE PTR [eax],al
  426a97:	iret   
  426a98:	mov    cl,BYTE PTR [edx-0x48]
  426a9b:	or     cl,bh
  426a9d:	les    eax,FWORD PTR [eax]
  426a9f:	add    BYTE PTR [eax],al
  426aa1:	int    0xf9
  426aa3:	mov    eax,0x9c670a
  426aa8:	add    BYTE PTR [eax],al
  426aaa:	iret   
  426aab:	loopne 0x426a4d
  426aad:	pop    edi
  426aae:	add    BYTE PTR ds:0xab88080,dh
  426ab4:	iret   
  426ab5:	enter  0x0,0x0
  426ab9:	iret   
  426aba:	mov    bh,bh
  426abc:	mov    eax,0x90cf0a
  426ac1:	add    BYTE PTR [eax],al
  426ac3:	mov    eax,0xa0670a
  426ac8:	add    BYTE PTR [eax],al
  426aca:	add    al,0xc9
  426acc:	stc    
  426acd:	mov    eax,0xa4670a
  426ad2:	add    BYTE PTR [eax],al
  426ad4:	int    0xf9
  426ad6:	pop    edi
  426ad7:	leave  
  426ad8:	xor    eax,0xab88080
  426add:	iret   
  426ade:	add    BYTE PTR [eax],0x0
  426ae1:	add    ch,cl
  426ae3:	jge    0x426a9d
  426ae5:	or     cl,bh
  426ae7:	aam    0x0
  426ae9:	add    BYTE PTR [eax],al
  426aeb:	int    0xc5
  426aed:	mov    eax,0xe0060a
  426af2:	add    BYTE PTR [eax],al
  426af4:	cmp    ebp,DWORD PTR [ebp-0x48]
  426af7:	or     ah,BYTE PTR [edi-0x58]
  426afa:	add    BYTE PTR [eax],al
  426afc:	add    bh,cl
  426afe:	addr16 in al,0x0
  426b01:	add    BYTE PTR [eax],al
  426b03:	leave  
  426b04:	push   es
  426b05:	lods   al,BYTE PTR ds:[esi]
  426b06:	add    BYTE PTR [eax],al
  426b08:	add    dh,ah
  426b0a:	xor    eax,0x6c9352b
  426b0f:	fadd   DWORD PTR [eax]
  426b11:	add    BYTE PTR [eax],al
  426b13:	jae    0x426b4a
  426b15:	jno    0x426b4c
  426b17:	mov    eax,0x3076cdaf
  426b1c:	int    0x8d
  426b1e:	xor    ch,cl
  426b20:	xchg   esi,eax
  426b21:	xor    BYTE PTR [edx+eax*1],al
  426b24:	call   ebx
  426b26:	repnz sub BYTE PTR [ebx],bh
  426b29:	jns    0x426afe
  426b2b:	mov    ebp,0xcdd35392
  426b30:	lea    esi,[eax]
  426b32:	add    al,0x2
  426b34:	(bad)  
  426b35:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b3b:	repz xchg edx,eax
  426b3d:	push   ebx
  426b3e:	jecxz  0x426b7b
  426b40:	retf   
  426b41:	add    al,0xd2
  426b43:	sbb    bl,BYTE PTR [ebx]
  426b45:	retf   
  426b46:	cmp    eax,DWORD PTR [eax]
  426b48:	inc    ebx
  426b49:	cli    
  426b4a:	das    
  426b4b:	or     cl,dl
  426b4d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b54:	das    
  426b55:	add    al,0x37
  426b57:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b5e:	xchg   esi,eax
  426b5f:	xor    BYTE PTR [ebx],bh
  426b61:	psrlq  mm5,mm3
  426b64:	xchg   edx,eax
  426b65:	add    al,0xfb
  426b67:	call   ebx
  426b69:	jmp    0xcd7d:0x87135328
  426b70:	aad    0xb8
  426b72:	cmp    edx,DWORD PTR ds:0x708d
  426b78:	add    ch,cl
  426b7a:	lea    esi,[eax]
  426b7c:	int    0xe6
  426b7e:	xor    BYTE PTR [ebx],bh
  426b80:	psrlq  mm5,mm3
  426b83:	xchg   edx,eax
  426b84:	add    al,0xf8
  426b86:	call   ebx
  426b88:	jmp    0x8832beb5
  426b8d:	jge    0x426b47
  426b8f:	int    0xcc
  426b91:	lea    esi,[eax+0x0]
  426b94:	add    BYTE PTR [eax],al
  426b96:	mov    eax,0xd3b8e3f8
  426b9b:	repnz das 
  426b9d:	mov    eax,0x53b8f3e3
  426ba2:	jecxz  0x426b71
  426ba4:	lea    esi,[eax]
  426ba6:	int    0xe6
  426ba8:	xor    BYTE PTR [ebx],bh
  426baa:	psrlq  mm5,mm3
  426bad:	xchg   edx,eax
  426bae:	add    al,0xf8
  426bb0:	call   ebx
  426bb2:	jmp    0x8832bedf
  426bb7:	jge    0x426b71
  426bb9:	or     dl,BYTE PTR ds:0x708d
  426bbf:	add    ch,cl
  426bc1:	lea    esi,[eax]
  426bc3:	int    0x96
  426bc5:	xor    BYTE PTR [ebx],bh
  426bc7:	(bad)  
  426bc9:	sti    
  426bca:	call   ebx
  426bcc:	jmp    0x426b60
  426bce:	shr    edx,cl
  426bd0:	sub    BYTE PTR [ebx+0x13],dl
  426bd3:	int    0x96
  426bd5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426bdb:	add    al,0x2
  426bdd:	(bad)  
  426bde:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426be4:	repz xchg edx,eax
  426be6:	push   ebx
  426be7:	jecxz  0x426c24
  426be9:	retf   
  426bea:	add    al,0xd2
  426bec:	sbb    bl,BYTE PTR [ebx]
  426bee:	retf   
  426bef:	cmp    eax,DWORD PTR [eax]
  426bf1:	inc    ebx
  426bf2:	cli    
  426bf3:	das    
  426bf4:	or     ebp,DWORD PTR [esi+0x2f000000]
  426bfa:	pop    es
  426bfb:	pop    ebx
  426bfc:	add    BYTE PTR [eax],al
  426bfe:	add    bl,al
  426c00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c01:	mov    esi,0x76cf4229
  426c06:	jne    0x426c12
  426c08:	jbe    0x426b92
  426c0a:	int    0x76
  426c0c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c12:	or     bl,BYTE PTR [ecx+ecx*8]
  426c15:	ins    BYTE PTR es:[edi],dx
  426c16:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c1c:	jbe    0x426c93
  426c1e:	int    0x8d
  426c20:	jge    0x426c51
  426c22:	inc    ebp
  426c23:	jge    0x426bb7
  426c25:	shr    ebx,cl
  426c27:	xchg   edx,eax
  426c28:	int    0x8d
  426c2a:	jne    0x426bf9
  426c2c:	xchg   esi,eax
  426c2d:	jge    0x426c6a
  426c2f:	leave  
  426c30:	cmp    ebx,edx
  426c32:	push   ebx
  426c33:	icebp  
  426c34:	int    0x76
  426c36:	cmc    
  426c37:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c3d:	jo     0x426c0e
  426c3f:	push   es
  426c40:	cmc    
  426c41:	inc    DWORD PTR [eax]
  426c43:	add    BYTE PTR [eax-0x2d],dh
  426c46:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c4d:	int    0x76
  426c4f:	in     eax,dx
  426c50:	int    0x8d
  426c52:	adc    DWORD PTR [edi],ebp
  426c54:	inc    ebp
  426c55:	jge    0x426be9
  426c57:	shr    ebx,cl
  426c59:	xchg   edx,eax
  426c5a:	int    0x8d
  426c5c:	in     eax,dx
  426c5d:	int    0x96
  426c5f:	adc    ebx,edx
  426c61:	repnz sub ch,cl
  426c64:	iret   
  426c65:	cmc    
  426c66:	inc    DWORD PTR [eax]
  426c68:	add    ch,cl
  426c6a:	mov    DWORD PTR [ebx],edi
  426c6c:	leave  
  426c6d:	cmp    ebx,edx
  426c6f:	push   ebx
  426c70:	rol    BYTE PTR [ebx+0x7d],cl
  426c73:	das    
  426c74:	push   es
  426c75:	push   ebp
  426c76:	add    BYTE PTR [eax-0xa293280],0xc9
  426c7d:	jbe    0x426c8c
  426c7f:	(bad)  
  426c80:	ficom  WORD PTR ss:[ebx]
  426c83:	pop    ebp
  426c84:	mov    ebp,0xa25230a
  426c89:	jbe    0x426c7c
  426c8b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426c91:	int    0x76
  426c93:	xchg   ebp,eax
  426c94:	int    0x8d
  426c96:	popf   
  426c97:	das    
  426c98:	inc    ebp
  426c99:	jge    0x426c2d
  426c9b:	shr    ebx,cl
  426c9d:	xchg   edx,eax
  426c9e:	int    0x8d
  426ca0:	xchg   ebp,eax
  426ca1:	int    0x96
  426ca3:	popf   
  426ca4:	cmp    ecx,ecx
  426ca6:	cmp    ebx,edx
  426ca8:	push   ebx
  426ca9:	icebp  
  426caa:	bound  eax,QWORD PTR [eax]
  426cac:	(bad)  
  426cad:	xor    al,0xd3
  426caf:	repnz sub BYTE PTR [eax],al
  426cb2:	pop    ecx
  426cb3:	xor    eax,0xbd808081
  426cb8:	push   eax
  426cb9:	repnz add BYTE PTR [eax],al
  426cbc:	int    0x76
  426cbe:	xchg   ebp,eax
  426cbf:	int    0x8d
  426cc1:	popf   
  426cc2:	das    
  426cc3:	inc    ebp
  426cc4:	jge    0x426c58
  426cc6:	shr    ebx,cl
  426cc8:	xchg   edx,eax
  426cc9:	int    0x8d
  426ccb:	xchg   ebp,eax
  426ccc:	int    0x96
  426cce:	popf   
  426ccf:	cmp    ecx,ecx
  426cd1:	cmp    ebx,edx
  426cd3:	push   ebx
  426cd4:	icebp  
  426cd5:	bound  eax,QWORD PTR [eax]
  426cd7:	pop    ecx
  426cd8:	xor    eax,0xd3808081
  426cdd:	repnz sub BYTE PTR [eax],al
  426ce0:	pop    ecx
  426ce1:	sub    eax,0xbd808081
  426ce6:	xchg   edx,eax
  426ce7:	repnz add BYTE PTR [eax],al
  426cea:	int    0x7
  426cec:	xor    eax,0xcd808081
  426cf1:	mov    ch,cl
  426cf3:	jle    0x426d59
  426cf5:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426cfb:	lea    ecx,ds:0x2ff176cd
  426d01:	inc    ebp
  426d02:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d08:	jbe    0x426d17
  426d0a:	int    0x96
  426d0c:	icebp  
  426d0d:	cmp    esi,eax
  426d0f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d15:	ror    ebp,cl
  426d17:	lea    ecx,[eax+0x187ebb2f]
  426d1d:	push   es
  426d1e:	jge    0x426cf4
  426d20:	dec    esp
  426d21:	int    0x7
  426d23:	popf   
  426d24:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d2e:	jbe    0x426d7c
  426d30:	int    0x76
  426d32:	xor    BYTE PTR [eax],al
  426d34:	(bad)  
  426d35:	cmp    al,0x0
  426d37:	(bad)  
  426d38:	cmc    
  426d39:	add    dh,dl
  426d3b:	sub    al,0x0
  426d3d:	(bad)  
  426d3e:	and    al,0x0
  426d40:	(bad)  
  426d41:	sbb    al,0x0
  426d43:	(bad)  
  426d44:	adc    al,0xbd
  426d46:	test   ch,dh
  426d48:	add    BYTE PTR [eax],al
  426d4a:	or     al,BYTE PTR [esi]
  426d4c:	adc    edi,edi
  426d4e:	add    BYTE PTR [eax],al
  426d50:	int    0x76
  426d52:	cmp    al,0x4
  426d54:	fcom   QWORD PTR [eax+eax*4]
  426d57:	aam    0x1a
  426d59:	int    0x76
  426d5b:	cmp    al,0x4
  426d5d:	fsub   QWORD PTR [eax+eax*4]
  426d60:	aam    0x4e
  426d62:	int    0x6
  426d64:	adc    edi,edi
  426d66:	add    BYTE PTR [eax],al
  426d68:	int    0x8d
  426d6a:	cmp    al,0xa
  426d6c:	outs   dx,BYTE PTR ds:[esi]
  426d6d:	sbb    al,0xec
  426d6f:	push   ebx
  426d70:	add    dh,dl
  426d72:	cmp    al,0x0
  426d74:	(bad)  
  426d75:	cmc    
  426d76:	mov    ebp,0x6daa
  426d7b:	stos   BYTE PTR es:[edi],al
  426d7c:	test   al,0x63
  426d7e:	retf   
  426d7f:	shl    BYTE PTR [eax+eax*4],cl
  426d82:	xchg   esi,eax
  426d83:	int    0xed
  426d85:	jno    0x426df8
  426d87:	cwde   
  426d88:	leave  
  426d89:	jbe    0x426d88
  426d8b:	dec    ecx
  426d8c:	and    DWORD PTR [esi-0x68936cb],eax
  426d92:	inc    ecx
  426d93:	and    DWORD PTR [esi-0x28932cb],eax
  426d99:	int    0xd6
  426d9b:	std    
  426d9c:	sar    bh,0x5f
  426d9f:	shl    DWORD PTR [ecx],1
  426da1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426da7:	sti    
  426da8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dae:	push   ebx
  426daf:	jns    0x426d7e
  426db1:	(bad)  
  426db2:	mov    BYTE PTR [ebx+0x11],al
  426db5:	int    0x76
  426db7:	std    
  426db8:	aam    0xc4
  426dba:	int    0xd6
  426dbc:	std    
  426dbd:	cmp    edx,ebx
  426dbf:	cmp    edi,ebx
  426dc1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426dc7:	push   ebx
  426dc8:	jns    0x426d97
  426dca:	(bad)  
  426dcb:	dec    esp
  426dcc:	inc    ebx
  426dcd:	adc    esp,edx
  426dcf:	pop    ebx
  426dd0:	int    0x96
  426dd2:	xor    BYTE PTR [edx-0x32b31933],bl
  426dd8:	jbe    0x426d62
  426dda:	cmp    esi,edi
  426ddc:	push   es
  426ddd:	add    ah,dl
  426ddf:	push   esi
  426de0:	pop    ebx
  426de1:	retf   0x8624
  426de4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dea:	das    
  426deb:	push   es
  426dec:	fcmovbe st,st(6)
  426dee:	dec    esi
  426def:	add    al,0xf4
  426df1:	adc    DWORD PTR [edx],0xffffffc5
  426df4:	fwait
  426df5:	add    BYTE PTR [eax+0x2fa60980],0xec
  426dfc:	dec    esp
  426dfd:	adc    ch,ah
  426dff:	in     eax,dx
  426e00:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e07:	lea    ebp,[edi]
  426e09:	retf   0x2fa6
  426e0c:	or     DWORD PTR [esi+eax*4],esp
  426e0f:	js     0x426e54
  426e11:	clc    
  426e12:	or     BYTE PTR [esi],0x63
  426e15:	int    0x76
  426e17:	stc    
  426e18:	cmp    edx,ebx
  426e1a:	int    0x8d
  426e1c:	stc    
  426e1d:	add    al,0x2
  426e1f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e25:	std    
  426e26:	cmp    edx,ebx
  426e28:	int    0x8d
  426e2a:	std    
  426e2b:	cmp    edx,DWORD PTR [ebx]
  426e2d:	shl    edx,cl
  426e2f:	sub    bl,dl
  426e31:	mov    ebp,0xa8d35392
  426e36:	retf   
  426e37:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e3b:	int    0xed
  426e3d:	add    al,0xed
  426e3f:	(bad)  
  426e40:	leave  
  426e41:	jbe    0x426e40
  426e43:	dec    ecx
  426e44:	and    DWORD PTR [esi+0x21416135],eax
  426e4a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e50:	jbe    0x426e66
  426e52:	or     dh,BYTE PTR [esi+0x14]
  426e55:	int    0x76
  426e57:	adc    al,0xcd
  426e59:	add    DWORD PTR ds:0xcd808081,ebp
  426e5f:	lea    edx,[ecx*8+0x2d0acd80]
  426e66:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e70:	lea    esi,[ebp-0x32028933]
  426e76:	(bad)  
  426e77:	std    
  426e78:	cwde   
  426e79:	call   0x3b85:0x82cfffc0
  426e80:	jns    0x426e55
  426e82:	mov    ebp,0xf03baa92
  426e87:	shl    edx,cl
  426e89:	sub    BYTE PTR [ebx-0x2d],dl
  426e8c:	or     dh,BYTE PTR [esi-0x63]
  426e8f:	int    0x76
  426e91:	std    
  426e92:	int    0x8d
  426e94:	std    
  426e95:	cmp    edi,DWORD PTR [ecx-0x2d]
  426e98:	mov    ebp,0xd3f03b92
  426e9d:	repnz sub BYTE PTR [ebx-0x2d],dl
  426ea1:	or     dh,BYTE PTR [esi-0x53]
  426ea4:	int    0x76
  426ea6:	mov    ch,0xcd
  426ea8:	ins    BYTE PTR es:[edi],dx
  426ea9:	jo     0x426eaf
  426eab:	mov    ebp,0xf1760a4c
  426eb0:	int    0x76
  426eb2:	mov    ch,0xcd
  426eb4:	ins    BYTE PTR es:[edi],dx
  426eb5:	pop    esp
  426eb6:	int    0x8d
  426eb8:	mov    ch,0x7c
  426eba:	push   es
  426ebb:	outs   dx,BYTE PTR ds:[esi]
  426ebc:	xchg   esp,eax
  426ebd:	int    0x76
  426ebf:	mov    ch,0xd4
  426ec1:	sbb    al,0xcd
  426ec3:	ins    BYTE PTR es:[edi],dx
  426ec4:	pop    esp
  426ec5:	int    0x8d
  426ec7:	mov    ch,0xcd
  426ec9:	jle    0x426e5f
  426ecb:	jl     0x426ec5
  426ecd:	icebp  
  426ece:	sub    edi,DWORD PTR [ebp-0x33]
  426ed1:	jbe    0x426e88
  426ed3:	int    0x6c
  426ed5:	pop    esp
  426ed6:	xchg   ebx,edx
  426ed8:	in     al,dx
  426ed9:	xchg   ebp,ecx
  426edb:	ins    BYTE PTR es:[edi],dx
  426edc:	xchg   esp,eax
  426edd:	or     dh,BYTE PTR [esi-0x43]
  426ee0:	int    0x76
  426ee2:	std    
  426ee3:	int    0x8d
  426ee5:	std    
  426ee6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ee9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ef0:	push   ebx
  426ef1:	ror    DWORD PTR [edx],cl
  426ef3:	jbe    0x426f09
  426ef5:	int    0x76
  426ef7:	std    
  426ef8:	int    0x8d
  426efa:	std    
  426efb:	cmp    edi,DWORD PTR [ecx+0x3b]
  426efe:	lock shl edx,cl
  426f01:	sub    bl,dl
  426f03:	mov    ebp,0xad35392
  426f08:	jbe    0x426f1e
  426f0a:	int    0x76
  426f0c:	std    
  426f0d:	int    0x8d
  426f0f:	std    
  426f10:	cmp    esi,eax
  426f12:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f15:	repnz sub bl,dl
  426f18:	mov    ebp,0xcdd35392
  426f1d:	lea    esi,[eax]
  426f1f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f25:	jbe    0x426f3b
  426f27:	cmp    DWORD PTR [ecx],esp
  426f29:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f2f:	and    DWORD PTR [esi+0x1476c935],eax
  426f35:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f3b:	xchg   BYTE PTR [eax-0x2893280],al
  426f41:	int    0x8d
  426f43:	std    
  426f44:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f47:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f4e:	push   ebx
  426f4f:	ror    DWORD PTR [edx],cl
  426f51:	jbe    0x426f00
  426f53:	int    0x76
  426f55:	mov    ebp,0xa4c7687
  426f5a:	jbe    0x426ef9
  426f5c:	add    dh,dl
  426f5e:	popf   
  426f5f:	add    dh,dl
  426f61:	dec    esp
  426f62:	int    0x8d
  426f64:	mov    ch,0xbd
  426f66:	neg    bh
  426f68:	add    BYTE PTR [eax],al
  426f6a:	or     dh,BYTE PTR [esi+0x14]
  426f6d:	int    0x76
  426f6f:	adc    al,0x6
  426f71:	ins    DWORD PTR es:[edi],dx
  426f72:	aam    0x60
  426f74:	int    0x76
  426f76:	popf   
  426f77:	or     dh,BYTE PTR [esi-0x5b]
  426f7a:	int    0x76
  426f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f7d:	int    0x8d
  426f7f:	dec    esp
  426f80:	xor    edx,ebx
  426f82:	or     dh,BYTE PTR [esi-0x5b]
  426f85:	int    0x76
  426f87:	adc    al,0xcd
  426f89:	lea    edx,[ecx*8+0x6e87306c]
  426f90:	dec    esp
  426f91:	int    0x8d
  426f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f94:	inc    ebx
  426f95:	jge    0x426f19
  426f97:	sbb    ch,cl
  426f99:	jbe    0x426faf
  426f9b:	int    0x6c
  426f9d:	dec    esp
  426f9e:	int    0x8d
  426fa0:	adc    al,0x87
  426fa2:	outs   dx,BYTE PTR ds:[esi]
  426fa3:	mov    ch,cl
  426fa5:	lea    esp,[ebp-0x2e142ccd]
  426fab:	test   DWORD PTR [eax+0x2149bf80],eax
  426fb1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426fb7:	jbe    0x427036
  426fb9:	inc    ecx
  426fba:	and    DWORD PTR [esi+0x7576c935],eax
  426fc0:	cmp    DWORD PTR [ecx],esp
  426fc2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fc8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fce:	or     dh,BYTE PTR [esi-0xb]
  426fd1:	iret   
  426fd2:	jbe    0x427051
  426fd4:	or     dh,BYTE PTR [esi+0x11]
  426fd7:	iret   
  426fd8:	jbe    0x42704f
  426fda:	or     dh,BYTE PTR [esi+0x14]
  426fdd:	iret   
  426fde:	jbe    0x42704d
  426fe0:	or     dh,BYTE PTR [esi-0x13]
  426fe3:	int    0x76
  426fe5:	std    
  426fe6:	int    0x8d
  426fe8:	std    
  426fe9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426fec:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426ff3:	push   ebx
  426ff4:	ror    DWORD PTR [edx],cl
  426ff6:	jbe    0x426f9d
  426ff8:	jmp    0x42700d
  426ffa:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427000:	and    DWORD PTR [esi-0x22fad0cb],eax
  427006:	xchg   DWORD PTR [eax+0x4cc080],eax
  42700c:	(bad)  
  42700d:	popf   
  42700e:	iret   
  42700f:	jbe    0x426fe1
  427011:	jo     0x426fd0
  427013:	xlat   BYTE PTR ds:[ebx]
  427014:	fild   WORD PTR [eax]
  427016:	add    ch,cl
  427018:	jbe    0x427013
  42701a:	int    0x8d
  42701c:	stc    
  42701d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427020:	lock shl edx,cl
  427023:	sub    bl,dl
  427025:	mov    ebp,0xad35392
  42702a:	jbe    0x426fd9
  42702c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427032:	int    0x76
  427034:	xchg   ebp,eax
  427035:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42703b:	in     eax,0x28
  42703d:	push   ebx
  42703e:	popf   
  42703f:	or     ah,BYTE PTR [esi-0x689325b]
  427045:	int    0x8d
  427047:	stc    
  427048:	cmp    esi,eax
  42704a:	shl    edx,cl
  42704c:	sub    BYTE PTR [ebx],bh
  42704e:	jns    0x427023
  427050:	mov    ebp,0xcdd35392
  427055:	(bad)  
  427056:	stc    
  427057:	int    0x96
  427059:	stc    
  42705a:	cmp    ecx,DWORD PTR [edi]
  42705c:	cmp    ebx,ecx
  42705e:	shr    ebx,cl
  427060:	xchg   edx,eax
  427061:	shr    edx,cl
  427063:	sub    BYTE PTR [ebx+0x13],dl
  427066:	xchg   ebx,edx
  427068:	int    0x8d
  42706a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42706b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427071:	sub    ch,cl
  427073:	jbe    0x42706e
  427075:	int    0x8d
  427077:	stc    
  427078:	cmp    edi,DWORD PTR [ecx+0x3b]
  42707b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427082:	push   ebx
  427083:	shl    DWORD PTR [eax-0x40],cl
  427086:	dec    esp
  427087:	iret   
  427088:	jbe    0x42705a
  42708a:	jo     0x427049
  42708c:	sti    
  42708d:	std    
  42708e:	add    BYTE PTR [eax],al
  427090:	int    0x76
  427092:	std    
  427093:	int    0x8d
  427095:	std    
  427096:	cmp    edi,DWORD PTR [ecx+0x3b]
  427099:	lock shl edx,cl
  42709c:	sub    bl,dl
  42709e:	mov    ebp,0xcdd35392
  4270a3:	lea    esp,[ebp+0x28d47d43]
  4270a9:	int    0x76
  4270ab:	std    
  4270ac:	int    0x8d
  4270ae:	std    
  4270af:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270b2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270b9:	push   ebx
  4270ba:	shl    DWORD PTR [eax-0x40],cl
  4270bd:	dec    esp
  4270be:	iret   
  4270bf:	jbe    0x427091
  4270c1:	jo     0x427080
  4270c3:	mov    edi,0xcd0000fd
  4270c8:	jbe    0x4270bf
  4270ca:	int    0x8d
  4270cc:	cmc    
  4270cd:	int    0x89
  4270cf:	int    0x80
  4270d1:	cmp    esi,eax
  4270d3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270d6:	repnz sub bl,dl
  4270d9:	mov    ebp,0xcad35392
  4270de:	je     0x427065
  4270e0:	ror    ch,1
  4270e2:	(bad)  
  4270e3:	std    
  4270e4:	int    0x96
  4270e6:	std    
  4270e7:	cmp    ecx,DWORD PTR [edi]
  4270e9:	cmp    ebx,ecx
  4270eb:	shr    ebx,cl
  4270ed:	xchg   edx,eax
  4270ee:	shr    edx,cl
  4270f0:	sub    BYTE PTR [edi],ch
  4270f2:	pop    ecx
  4270f3:	ins    DWORD PTR es:[edi],dx
  4270f4:	push   ebx
  4270f5:	adc    eax,DWORD PTR [ebx-0x2d]
  4270f8:	das    
  4270f9:	add    eax,0x80809212
  4270fe:	int    0x76
  427100:	adc    ebp,ecx
  427102:	lea    edx,[ecx]
  427104:	int    0x89
  427106:	int    0x80
  427108:	cmp    esi,eax
  42710a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42710d:	repnz sub bl,dl
  427110:	mov    ebp,0xcad35392
  427115:	je     0x42709c
  427117:	ror    ch,1
  427119:	(bad)  
  42711a:	std    
  42711b:	int    0x96
  42711d:	std    
  42711e:	cmp    ecx,DWORD PTR [edi]
  427120:	cmp    ebx,ecx
  427122:	shr    ebx,cl
  427124:	xchg   edx,eax
  427125:	shr    edx,cl
  427127:	sub    BYTE PTR [edi],ch
  427129:	pop    ecx
  42712a:	ins    DWORD PTR es:[edi],dx
  42712b:	push   ebx
  42712c:	adc    eax,DWORD PTR [ebx-0x2d]
  42712f:	das    
  427130:	add    eax,0x8080928a
  427135:	int    0x76
  427137:	adc    al,0xcd
  427139:	lea    edx,[ecx*8+0x3b80cd89]
  427140:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427144:	repnz sub bl,dl
  427147:	mov    ebp,0xcad35392
  42714c:	je     0x4270d3
  42714e:	ror    ch,1
  427150:	(bad)  
  427151:	std    
  427152:	int    0x96
  427154:	std    
  427155:	cmp    ecx,DWORD PTR [edi]
  427157:	cmp    ebx,ecx
  427159:	shr    ebx,cl
  42715b:	xchg   edx,eax
  42715c:	shr    edx,cl
  42715e:	sub    BYTE PTR [edi],ch
  427160:	pop    ecx
  427161:	ins    DWORD PTR es:[edi],dx
  427162:	push   ebx
  427163:	adc    eax,DWORD PTR [ebx-0x2d]
  427166:	das    
  427167:	add    eax,0x8080921b
  42716c:	int    0x76
  42716e:	in     eax,dx
  42716f:	int    0x8d
  427171:	in     eax,dx
  427172:	int    0x89
  427174:	int    0x80
  427176:	cmp    esi,eax
  427178:	cmp    edi,DWORD PTR [ecx-0x2d]
  42717b:	repnz sub bl,dl
  42717e:	mov    ebp,0xcad35392
  427183:	je     0x42710a
  427185:	ror    ch,1
  427187:	(bad)  
  427188:	std    
  427189:	int    0x96
  42718b:	std    
  42718c:	cmp    ecx,DWORD PTR [edi]
  42718e:	cmp    ebx,ecx
  427190:	shr    ebx,cl
  427192:	xchg   edx,eax
  427193:	shr    edx,cl
  427195:	sub    BYTE PTR [edi],ch
  427197:	pop    ecx
  427198:	ins    DWORD PTR es:[edi],dx
  427199:	push   ebx
  42719a:	adc    eax,DWORD PTR [ebx-0x2d]
  42719d:	das    
  42719e:	add    eax,0x808081a5
  4271a3:	int    0x76
  4271a5:	adc    ebp,ecx
  4271a7:	lea    edx,[ecx]
  4271a9:	int    0x89
  4271ab:	int    0x80
  4271ad:	cmp    esi,eax
  4271af:	shl    edx,cl
  4271b1:	sub    BYTE PTR [ebx],bh
  4271b3:	jns    0x427188
  4271b5:	mov    ebp,0xcad35392
  4271ba:	je     0x427141
  4271bc:	ror    ch,1
  4271be:	(bad)  
  4271bf:	cmc    
  4271c0:	int    0x89
  4271c2:	int    0x96
  4271c4:	cmc    
  4271c5:	int    0x22
  4271c7:	cmp    ecx,DWORD PTR [edi]
  4271c9:	shr    ebx,cl
  4271cb:	xchg   edx,eax
  4271cc:	cmp    ebx,ecx
  4271ce:	shr    edx,cl
  4271d0:	sub    BYTE PTR [ebx+0x13],dl
  4271d3:	retf   0x4d8c
  4271d6:	rol    BYTE PTR [edx-0x2d],1
  4271d9:	int    0x8d
  4271db:	adc    al,0xcd
  4271dd:	mov    ebp,ecx
  4271df:	xchg   esi,eax
  4271e0:	adc    al,0xcd
  4271e2:	and    bh,BYTE PTR [ebx]
  4271e4:	psrlq  mm5,mm3
  4271e7:	xchg   edx,eax
  4271e8:	cmp    ebx,ecx
  4271ea:	shr    edx,cl
  4271ec:	sub    BYTE PTR [ebx+0x13],dl
  4271ef:	retf   0x4d8c
  4271f2:	ror    BYTE PTR [edx-0x2d],1
  4271f5:	int    0x8d
  4271f7:	cmc    
  4271f8:	int    0x89
  4271fa:	int    0x96
  4271fc:	cmc    
  4271fd:	int    0x22
  4271ff:	cmp    ecx,DWORD PTR [edi]
  427201:	cmp    ebx,ecx
  427203:	shr    ebx,cl
  427205:	xchg   edx,eax
  427206:	shr    edx,cl
  427208:	sub    BYTE PTR [ebx+0x13],dl
  42720b:	retf   0x4d8c
  42720e:	push   ebp
  42720f:	pusha  
  427210:	jge    0x427241
  427212:	push   es
  427213:	mov    esp,0xcd808081
  427218:	jbe    0x42722e
  42721a:	int    0x8d
  42721c:	adc    al,0xcd
  42721e:	mov    ebp,ecx
  427220:	cmp    BYTE PTR [ebx],0xf0
  427223:	shl    edx,cl
  427225:	sub    BYTE PTR [ebx],bh
  427227:	jns    0x4271fc
  427229:	mov    ebp,0xcad35392
  42722e:	je     0x4271b5
  427230:	ror    ch,1
  427232:	lea    edx,[ecx]
  427234:	int    0x89
  427236:	int    0x96
  427238:	adc    ebp,ecx
  42723a:	and    bh,BYTE PTR [ebx]
  42723c:	psrlq  mm5,mm3
  42723f:	xchg   edx,eax
  427240:	cmp    ebx,ecx
  427242:	shr    edx,cl
  427244:	sub    BYTE PTR [ebx+0x13],dl
  427247:	retf   0x4d8c
  42724a:	rol    BYTE PTR [edx-0x2d],1
  42724d:	int    0x8d
  42724f:	in     eax,dx
  427250:	int    0x89
  427252:	int    0x96
  427254:	in     eax,dx
  427255:	int    0x22
  427257:	cmp    ecx,DWORD PTR [edi]
  427259:	shr    ebx,cl
  42725b:	xchg   edx,eax
  42725c:	cmp    ebx,ecx
  42725e:	shr    edx,cl
  427260:	sub    BYTE PTR [ebx+0x13],dl
  427263:	retf   0x4d8c
  427266:	ror    BYTE PTR [edx-0x2d],1
  427269:	int    0x8d
  42726b:	adc    ebp,ecx
  42726d:	mov    ebp,ecx
  42726f:	xchg   esi,eax
  427270:	adc    ebp,ecx
  427272:	and    bh,BYTE PTR [ebx]
  427274:	(bad)  
  427276:	(bad)  
  427278:	jmp    0x42720c
  42727a:	shr    edx,cl
  42727c:	sub    BYTE PTR [ebx+0x13],dl
  42727f:	retf   0x4d8c
  427282:	push   ebp
  427283:	pusha  
  427284:	jge    0x4272b5
  427286:	push   es
  427287:	cmc    
  427288:	add    BYTE PTR [eax-0x12893280],0xcd
  42728f:	(bad)  
  427290:	in     eax,dx
  427291:	int    0x89
  427293:	int    0x80
  427295:	cmp    esi,eax
  427297:	shl    edx,cl
  427299:	sub    BYTE PTR [ebx],bh
  42729b:	jns    0x427270
  42729d:	mov    ebp,0xcad35392
  4272a2:	je     0x427229
  4272a4:	ror    ch,1
  4272a6:	lea    edx,[ecx*8+0x1496cd89]
  4272ad:	int    0x22
  4272af:	cmp    ecx,DWORD PTR [edi]
  4272b1:	shr    ebx,cl
  4272b3:	xchg   edx,eax
  4272b4:	cmp    ebx,ecx
  4272b6:	shr    edx,cl
  4272b8:	sub    BYTE PTR [ebx+0x13],dl
  4272bb:	retf   0x4d8c
  4272be:	rol    BYTE PTR [edx-0x2d],1
  4272c1:	int    0x8d
  4272c3:	cmc    
  4272c4:	int    0x89
  4272c6:	int    0x96
  4272c8:	cmc    
  4272c9:	int    0x22
  4272cb:	cmp    ecx,DWORD PTR [edi]
  4272cd:	shr    ebx,cl
  4272cf:	xchg   edx,eax
  4272d0:	cmp    ebx,ecx
  4272d2:	shr    edx,cl
  4272d4:	sub    BYTE PTR [ebx+0x13],dl
  4272d7:	retf   0x4d8c
  4272da:	ror    BYTE PTR [edx-0x2d],1
  4272dd:	int    0x8d
  4272df:	adc    al,0xcd
  4272e1:	mov    ebp,ecx
  4272e3:	xchg   esi,eax
  4272e4:	adc    al,0xcd
  4272e6:	and    bh,BYTE PTR [ebx]
  4272e8:	(bad)  
  4272ea:	(bad)  
  4272ec:	jmp    0x427280
  4272ee:	shr    edx,cl
  4272f0:	sub    BYTE PTR [ebx+0x13],dl
  4272f3:	retf   0x4d8c
  4272f6:	push   ebp
  4272f7:	pusha  
  4272f8:	jge    0x427329
  4272fa:	push   es
  4272fb:	add    DWORD PTR [eax+0x76cd8080],eax
  427301:	in     eax,dx
  427302:	int    0x8d
  427304:	in     eax,dx
  427305:	int    0x89
  427307:	int    0x80
  427309:	cmp    esi,eax
  42730b:	shl    edx,cl
  42730d:	sub    BYTE PTR [ebx],bh
  42730f:	jns    0x4272e4
  427311:	mov    ebp,0xcad35392
  427316:	je     0x42729d
  427318:	ror    ch,1
  42731a:	(bad)  
  42731b:	cmc    
  42731c:	int    0x89
  42731e:	int    0x96
  427320:	cmc    
  427321:	int    0x22
  427323:	cmp    ecx,DWORD PTR [edi]
  427325:	shr    ebx,cl
  427327:	xchg   edx,eax
  427328:	cmp    ebx,ecx
  42732a:	shr    edx,cl
  42732c:	sub    BYTE PTR [ebx+0x13],dl
  42732f:	retf   0x4d8c
  427332:	rol    BYTE PTR [edx-0x2d],1
  427335:	int    0x8d
  427337:	adc    ebp,ecx
  427339:	mov    ebp,ecx
  42733b:	xchg   esi,eax
  42733c:	adc    ebp,ecx
  42733e:	and    bh,BYTE PTR [ebx]
  427340:	psrlq  mm5,mm3
  427343:	xchg   edx,eax
  427344:	cmp    ebx,ecx
  427346:	shr    edx,cl
  427348:	sub    BYTE PTR [ebx+0x13],dl
  42734b:	retf   0x4d8c
  42734e:	ror    BYTE PTR [edx-0x2d],1
  427351:	int    0x8d
  427353:	in     eax,dx
  427354:	int    0x89
  427356:	int    0x96
  427358:	in     eax,dx
  427359:	int    0x22
  42735b:	cmp    ecx,DWORD PTR [edi]
  42735d:	cmp    ebx,ecx
  42735f:	shr    ebx,cl
  427361:	xchg   edx,eax
  427362:	shr    edx,cl
  427364:	sub    BYTE PTR [ebx+0x13],dl
  427367:	retf   0x4d8c
  42736a:	push   ebp
  42736b:	pusha  
  42736c:	jge    0x427344
  42736e:	xor    bh,cl
  427370:	jbe    0x427342
  427372:	jo     0x427331
  427374:	outs   dx,DWORD PTR ds:[esi]
  427375:	lods   eax,DWORD PTR ds:[esi]
  427376:	add    BYTE PTR [eax],al
  427378:	int    0x8d
  42737a:	pop    ebp
  42737b:	inc    ebx
  42737c:	rcl    esp,cl
  42737e:	push   ss
  42737f:	int    0x76
  427381:	std    
  427382:	int    0x8d
  427384:	std    
  427385:	cmp    esi,eax
  427387:	cmp    edi,DWORD PTR [ecx-0x2d]
  42738a:	repnz sub bl,dl
  42738d:	mov    ebp,0xad35392
  427392:	jbe    0x427341
  427394:	int    0x76
  427396:	stc    
  427397:	int    0xa6
  427399:	stc    
  42739a:	int    0x76
  42739c:	stc    
  42739d:	int    0x8d
  42739f:	stc    
  4273a0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273a6:	xchg   edx,eax
  4273a7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273ae:	gs int 0x76
  4273b1:	xchg   ebp,eax
  4273b2:	cmp    ecx,DWORD PTR [edi]
  4273b4:	add    al,0xf2
  4273b6:	std    
  4273b7:	add    al,0xad
  4273b9:	std    
  4273ba:	shr    esp,cl
  4273bc:	sub    BYTE PTR [edi+0x12db537d],al
  4273c2:	hlt    
  4273c3:	dec    ecx
  4273c4:	and    DWORD PTR [esi-0x28932cb],eax
  4273ca:	int    0x8d
  4273cc:	std    
  4273cd:	cmp    esi,eax
  4273cf:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273d2:	repnz sub bl,dl
  4273d5:	mov    ebp,0xcdd35392
  4273da:	lea    ebp,[ebp+0x52f7d43]
  4273e0:	push   ds
  4273e1:	std    
  4273e2:	add    BYTE PTR [eax],al
  4273e4:	int    0x76
  4273e6:	std    
  4273e7:	int    0x8d
  4273e9:	std    
  4273ea:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273ed:	lock shl edx,cl
  4273f0:	sub    bl,dl
  4273f2:	mov    ebp,0xcdd35392
  4273f7:	lea    ebp,[ebp+0x1ad67d43]
  4273fd:	int    0x76
  4273ff:	stc    
  427400:	int    0x8d
  427402:	stc    
  427403:	cmp    edi,DWORD PTR [ecx+0x3b]
  427406:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42740d:	push   ebx
  42740e:	shr    ebx,cl
  427410:	jle    0x427393
  427412:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427419:	(bad)  
  42741a:	popf   
  42741b:	iret   
  42741c:	jbe    0x427433
  42741e:	jo     0x4273dd
  427420:	jge    0x4273fd
  427422:	add    BYTE PTR [eax],al
  427424:	int    0x76
  427426:	std    
  427427:	int    0x8d
  427429:	std    
  42742a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42742d:	lock shl edx,cl
  427430:	sub    bl,dl
  427432:	mov    ebp,0xcdd35392
  427437:	lea    esp,[ebp+0x5bd4d343]
  42743d:	int    0x76
  42743f:	stc    
  427440:	int    0x8d
  427442:	stc    
  427443:	cmp    edi,DWORD PTR [ecx+0x3b]
  427446:	lock shl edx,cl
  427449:	sub    bl,dl
  42744b:	mov    ebp,0xcdd35392
  427450:	lea    esp,[ebp+0x26d4d343]
  427456:	int    0x76
  427458:	stc    
  427459:	int    0x8d
  42745b:	stc    
  42745c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42745f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427466:	push   ebx
  427467:	shl    DWORD PTR [eax+0x5b],cl
  42746a:	iret   
  42746b:	jbe    0x427482
  42746d:	jo     0x42742c
  42746f:	das    
  427470:	cli    
  427471:	add    BYTE PTR [eax],al
  427473:	int    0x76
  427475:	std    
  427476:	int    0x8d
  427478:	std    
  427479:	cmp    edi,DWORD PTR [ecx+0x3b]
  42747c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427483:	push   ebx
  427484:	shl    DWORD PTR [eax+0x5b],cl
  427487:	iret   
  427488:	jbe    0x42749f
  42748a:	jo     0x427449
  42748c:	sti    
  42748d:	stc    
  42748e:	add    BYTE PTR [eax],al
  427490:	int    0x76
  427492:	popf   
  427493:	xchg   ebp,eax
  427495:	or     dh,BYTE PTR [esi+0x14]
  427498:	add    dh,dl
  42749a:	cmp    eax,0xcd14d600
  42749f:	jbe    0x4274d6
  4274a1:	xchg   DWORD PTR [esi-0x78],esi
  4274a4:	jo     0x427463
  4274a6:	push   edx
  4274a7:	fild   DWORD PTR [eax]
  4274a9:	add    ch,cl
  4274ab:	jbe    0x4274aa
  4274ad:	int    0x8d
  4274af:	std    
  4274b0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274b3:	lock shl edx,cl
  4274b6:	sub    bl,dl
  4274b8:	mov    ebp,0xcdd35392
  4274bd:	lea    esp,[ebp-0x592b2cbd]
  4274c3:	int    0x76
  4274c5:	stc    
  4274c6:	int    0x8d
  4274c8:	stc    
  4274c9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274cc:	lock shl edx,cl
  4274cf:	sub    bl,dl
  4274d1:	mov    ebp,0xcdd35392
  4274d6:	lea    esp,[ebp+0x32d4d343]
  4274dc:	int    0x76
  4274de:	stc    
  4274df:	int    0x8d
  4274e1:	stc    
  4274e2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274e5:	mov    ebp,0xd3f03b92
  4274ea:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274ee:	jo     0x4274f0
  4274f0:	(bad)  
  4274f1:	cmp    eax,0x873576cd
  4274f6:	jbe    0x427480
  4274f8:	jo     0x4274b7
  4274fa:	add    eax,0xcd0000f9
  4274ff:	jbe    0x4274fe
  427501:	int    0x8d
  427503:	std    
  427504:	cmp    edi,DWORD PTR [ecx-0x2d]
  427507:	mov    ebp,0xd3f03b92
  42750c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427510:	jo     0x427512
  427512:	(bad)  
  427513:	cmp    eax,0x873576cd
  427518:	jbe    0x4274a2
  42751a:	jo     0x4274d9
  42751c:	jb     0x427517
  42751e:	add    BYTE PTR [eax],al
  427520:	int    0x8d
  427522:	inc    ebp
  427523:	int    0x76
  427525:	inc    ebp
  427526:	cmp    ecx,ecx
  427528:	cmp    ecx,DWORD PTR [edi]
  42752a:	shr    ebx,cl
  42752c:	xchg   edx,eax
  42752d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427533:	lea    ebp,ds:0x803fd33b
  427539:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427543:	jo     0x427545
  427545:	(bad)  
  427546:	cmp    eax,0x87358dcd
  42754b:	lea    ecx,[eax+0xa95abd]
  427551:	add    ch,cl
  427553:	jbe    0x427585
  427555:	int    0x8d
  427557:	cmp    eax,0x76cd8881
  42755c:	cmp    eax,0xabd7687
  427561:	jbe    0x427520
  427563:	int    0x76
  427565:	stc    
  427566:	int    0x8d
  427568:	stc    
  427569:	cmp    esi,eax
  42756b:	shl    edx,cl
  42756d:	sub    BYTE PTR [ebx],bh
  42756f:	jns    0x427544
  427571:	mov    ebp,0xcdd35392
  427576:	lea    edi,[ebp-0x322c2ed1]
  42757c:	(bad)  
  42757d:	std    
  42757e:	int    0x96
  427580:	std    
  427581:	cmp    ecx,DWORD PTR [edi]
  427583:	cmp    ebx,ecx
  427585:	shr    ebx,cl
  427587:	xchg   edx,eax
  427588:	shr    edx,cl
  42758a:	sub    BYTE PTR [ebx+0x13],dl
  42758d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  427593:	or     edi,DWORD PTR [ecx]
  427595:	cli    
  427596:	add    BYTE PTR [eax],al
  427598:	int    0x76
  42759a:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275a0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275a6:	in     eax,dx
  4275a7:	adc    al,0x5b
  4275a9:	cwde   
  4275aa:	call   0xcd34:0x76cd6d3b
  4275b1:	add    DWORD PTR ds:0xcd808081,ebp
  4275b7:	xchg   esi,eax
  4275b8:	mov    ch,cl
  4275ba:	or     ch,0xd6
  4275bd:	dec    esp
  4275be:	int    0xe6
  4275c0:	mov    ch,cl
  4275c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275c3:	dec    esp
  4275c4:	or     dh,BYTE PTR [esi-0x3]
  4275c7:	pop    edi
  4275c8:	jnp    0x427601
  4275ca:	ficom  WORD PTR [ebx]
  4275cc:	cmp    esp,ebx
  4275ce:	pop    ebp
  4275cf:	mov    ebp,0x3b25230a
  4275d4:	adc    DWORD PTR [edi],ebp
  4275d6:	inc    ebp
  4275d7:	sti    
  4275d8:	xchg   edx,eax
  4275d9:	shr    ecx,cl
  4275db:	sub    BYTE PTR [edx],dl
  4275dd:	clc    
  4275de:	add    BYTE PTR [eax-0x102c9380],0x92
  4275e5:	cmp    ebx,ebp
  4275e7:	push   ebx
  4275e8:	clc    
  4275e9:	int    0xe6
  4275eb:	sbb    al,0x53
  4275ed:	aad    0x43
  4275ef:	(bad)  
  4275f1:	sbb    eax,DWORD PTR [ebx-0xc]
  4275f4:	(bad)  
  4275f5:	das    
  4275f6:	adc    cl,BYTE PTR [ebp+0x59]
  4275f9:	je     0x4275a5
  4275fb:	push   edi
  4275fc:	ja     0x4275c3
  4275fe:	xchg   edi,eax
  4275ff:	shr    ebx,0xd9
  427602:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42760c:	xchg   esi,eax
  42760d:	mov    ch,cl
  42760f:	(bad)  
  427610:	dec    esp
  427611:	int    0x96
  427613:	mov    ch,cl
  427615:	(bad)  
  427616:	dec    esp
  427617:	int    0xe6
  427619:	mov    ch,cl
  42761b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42761c:	dec    esp
  42761d:	cmp    edx,DWORD PTR [ecx]
  42761f:	cmp    esp,ebx
  427621:	das    
  427622:	inc    ebp
  427623:	sti    
  427624:	xchg   edx,eax
  427625:	shr    ecx,cl
  427627:	sub    BYTE PTR [edx],dl
  427629:	clc    
  42762a:	add    BYTE PTR [eax-0x22c49380],0x53
  427631:	aad    0xd3
  427633:	out    dx,eax
  427634:	xchg   edx,eax
  427635:	push   ebx
  427636:	clc    
  427637:	int    0xe6
  427639:	xor    ch,cl
  42763b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42763c:	adc    al,0x3b
  42763e:	popf   
  42763f:	int    0x76
  427641:	xor    BYTE PTR [ebx],bh
  427643:	cli    
  427644:	int    0x8d
  427646:	adc    al,0x2f
  427648:	inc    ebp
  427649:	loope  0x4275dd
  42764b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427651:	cli    
  427652:	push   esi
  427653:	add    BYTE PTR [eax-0x132c9380],0x92
  42765a:	push   ebx
  42765b:	popf   
  42765c:	int    0x76
  42765e:	mov    BYTE PTR [edi-0x320be427],al
  427664:	bswap  ebp
  427666:	(bad)  
  427667:	dec    esp
  427668:	int    0xe6
  42766a:	xor    ch,cl
  42766c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42766d:	adc    al,0x4
  42766f:	lods   eax,DWORD PTR ds:[esi]
  427670:	std    
  427671:	add    al,0xe9
  427673:	std    
  427674:	shr    ebx,cl
  427676:	sub    BYTE PTR [ebx],bh
  427678:	ficom  DWORD PTR [esi-0x2c]
  42767b:	aaa    
  42767c:	ficom  WORD PTR [ebx]
  42767e:	adc    dh,bh
  427680:	mov    ebp,0x1225230a
  427685:	clc    
  427686:	aam    0x37
  427688:	ficom  WORD PTR [ebx]
  42768a:	adc    dh,ah
  42768c:	mov    ebp,0x8725230a
  427691:	leave  
  427692:	sbb    esi,esp
  427694:	push   ebx
  427695:	jge    0x4276ea
  427697:	cdq    
  427698:	pop    ebp
  427699:	mov    ebp,0x1225230a
  42769e:	add    dl,dh
  4276a0:	aaa    
  4276a1:	ficom  WORD PTR [ebx]
  4276a3:	cmp    esi,ecx
  4276a5:	adc    bh,dl
  4276a7:	out    0x37,al
  4276a9:	ficom  WORD PTR [ebx]
  4276ab:	(bad)  
  4276ac:	sbb    eax,DWORD PTR [ebx-0xf]
  4276af:	(bad)  
  4276b0:	das    
  4276b1:	adc    dl,BYTE PTR [esi-0x1]
  4276b4:	das    
  4276b5:	stos   DWORD PTR es:[edi],eax
  4276b6:	push   es
  4276b7:	in     eax,0x9b
  4276b9:	xchg   edi,eax
  4276ba:	imul   bl
  4276bc:	and    al,0x81
  4276be:	add    BYTE PTR [eax-0x32776933],0xd6
  4276c5:	dec    esp
  4276c6:	int    0xa6
  4276c8:	mov    ch,cl
  4276ca:	out    0x4c,al
  4276cc:	cmp    edx,DWORD PTR [ecx]
  4276ce:	pop    edi
  4276cf:	jnp    0x427708
  4276d1:	ficom  WORD PTR [ebx]
  4276d3:	cmp    esp,ebx
  4276d5:	das    
  4276d6:	inc    ebp
  4276d7:	sti    
  4276d8:	xchg   edx,eax
  4276d9:	shr    edi,cl
  4276db:	xchg   edx,eax
  4276dc:	cmp    eax,DWORD PTR [eax]
  4276de:	shl    ebp,cl
  4276e0:	sub    BYTE PTR [edx],cl
  4276e2:	(bad)  
  4276e3:	cmc    
  4276e4:	push   ebx
  4276e5:	fxch   st(5)
  4276e7:	out    0xf5,al
  4276e9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  4276f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f4:	and    al,0xcd
  4276f6:	and    ecx,DWORD PTR [edx]
  4276f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276f9:	adc    DWORD PTR [ebx-0x1e],eax
  4276fc:	(bad)  
  4276fd:	xchg   BYTE PTR [ebx],bh
  4276ff:	fiadd  DWORD PTR [ebx-0x27]
  427702:	aam    0x20
  427704:	add    dh,dl
  427706:	xor    al,0xcd
  427708:	(bad)  
  427709:	and    al,0x0
  42770b:	(bad)  
  42770c:	sub    al,0x0
  42770e:	(bad)  
  42770f:	std    
  427710:	add    BYTE PTR [eax-0x43],bl
  427713:	sub    edi,eax
  427715:	add    BYTE PTR [eax],al
  427717:	or     al,BYTE PTR [esi-0x7f7f9615]
  42771d:	or     ch,0x96
  427720:	mov    ch,cl
  427722:	out    0x4c,al
  427724:	cmp    edi,ecx
  427726:	cmp    esp,ebx
  427728:	das    
  427729:	inc    ebp
  42772a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427730:	out    0xf5,al
  427732:	int    0xe6
  427734:	mov    ch,cl
  427736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427737:	dec    esp
  427738:	shr    ecx,cl
  42773a:	sub    BYTE PTR [ebx],bh
  42773c:	dec    ebp
  42773e:	(bad)  
  42773f:	cmc    
  427740:	cmp    ebx,ebp
  427742:	push   ebx
  427743:	clc    
  427744:	int    0xe6
  427746:	xor    BYTE PTR [ebx],bh
  427748:	cli    
  427749:	push   ebx
  42774a:	aad    0xcd
  42774c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42774d:	adc    al,0x3b
  42774f:	popf   
  427750:	int    0xc9
  427752:	int    0xe6
  427754:	xor    ch,cl
  427756:	or     al,0xcd
  427758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427759:	adc    al,0x2f
  42775b:	inc    ebp
  42775c:	jge    0x4276f0
  42775e:	shr    ecx,cl
  427760:	sub    BYTE PTR [ebx],bh
  427762:	fst    st(3)
  427764:	jmp    0x4276f8
  427766:	adc    bh,al
  427768:	add    BYTE PTR [eax-0x3aac9380],0x53
  42776f:	lock inc ebx
  427771:	icebp  
  427772:	(bad)  
  427773:	sbb    BYTE PTR [ebx+0x2],al
  427776:	(bad)  
  427777:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42777d:	mov    esi,0xdd8bf56d
  427782:	(bad)  
  427783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427784:	cmp    edi,esp
  427786:	sbb    eax,0xcd62ec76
  42778b:	jbe    0x427715
  42778d:	int    0x8d
  42778f:	dec    esp
  427790:	int    0x96
  427792:	mov    ch,cl
  427794:	(bad)  
  427795:	dec    esp
  427796:	adc    al,BYTE PTR [edx]
  427798:	mov    ebp,0x5625230a
  42779d:	jnp    0x4277d6
  42779f:	ficom  WORD PTR [ebx]
  4277a1:	das    
  4277a2:	inc    ebp
  4277a3:	jge    0x427737
  4277a5:	int    0xfb
  4277a7:	cmp    eax,DWORD PTR [eax]
  4277a9:	cmp    ebx,edx
  4277ab:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277b1:	jmp    0x427745
  4277b3:	adc    dh,bh
  4277b5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277bc:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277c0:	(bad)  
  4277c1:	test   BYTE PTR [ebx-0x1d],al
  4277c4:	aam    0x4c
  4277c6:	adc    al,BYTE PTR [esi-0x3e]
  4277c9:	gs sub al,0x1
  4277cc:	jo     0x427808
  4277ce:	mov    edx,0x124aece0
  4277d3:	ss inc edx
  4277d5:	das    
  4277d6:	sbb    edx,esi
  4277d8:	mov    ebx,0xaa029f75
  4277dd:	test   al,0x63
  4277df:	retf   
  4277e0:	shr    BYTE PTR [eax+eax*4],cl
  4277e3:	xchg   esi,eax
  4277e4:	int    0xed
  4277e6:	add    al,0xed
  4277e8:	dec    esp
  4277e9:	int    0x76
  4277eb:	mov    ch,cl
  4277ed:	lea    ecx,[edi+ebp*1+0x45]
  4277f1:	jge    0x427785
  4277f3:	shr    ebx,cl
  4277f5:	xchg   edx,eax
  4277f6:	int    0x8d
  4277f8:	mov    ch,cl
  4277fa:	xchg   esi,eax
  4277fb:	dec    esp
  4277fc:	cwde   
  4277fd:	shl    edx,cl
  4277ff:	sub    ch,cl
  427801:	lea    ebx,[ecx+ebp*2]
  427804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427805:	mov    esi,0x793b4229
  42780a:	cmp    ebx,edx
  42780c:	push   ebx
  42780d:	ror    BYTE PTR [edx],cl
  42780f:	or     ebp,0x1cd2476
  427815:	xor    eax,0xcd808081
  42781a:	mov    ch,cl
  42781c:	jbe    0x427842
  42781e:	int    0x1
  427820:	xor    eax,0xcd808081
  427825:	add    BYTE PTR [edi-0x72329b92],0x24
  42782c:	int    0xa
  42782e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427834:	adc    al,0xc0
  427836:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42783d:	nop
  42783e:	jo     0x4278a2
  427840:	add    bl,ah
  427842:	or     cl,BYTE PTR [ebx-0x32778933]
  427848:	lea    ecx,[edi+ebp*1+0x45]
  42784c:	jge    0x4277e0
  42784e:	shr    ebx,cl
  427850:	xchg   edx,eax
  427851:	int    0x8d
  427853:	mov    ch,cl
  427855:	xchg   esi,eax
  427856:	dec    esp
  427857:	add    dh,dl
  427859:	and    al,0x3b
  42785b:	jns    0x427898
  42785d:	ficom  DWORD PTR [ebx-0x2e]
  427860:	or     dh,BYTE PTR [esi-0x3]
  427863:	iret   
  427864:	jbe    0x427863
  427866:	jo     0x427802
  427868:	add    dh,dl
  42786a:	sbb    al,0xd3
  42786c:	repnz sub BYTE PTR [eax],al
  42786f:	(bad)  
  427870:	adc    al,0x0
  427872:	(bad)  
  427873:	xor    BYTE PTR [eax],al
  427875:	(bad)  
  427876:	dec    esp
  427877:	add    dh,dl
  427879:	mov    BYTE PTR [ebp+0xfe2b],bh
  42787f:	int    0x76
  427881:	mov    ch,cl
  427883:	lea    ecx,[edi+ebp*1+0x45]
  427887:	jge    0x42781b
  427889:	shr    ebx,cl
  42788b:	xchg   edx,eax
  42788c:	int    0x8d
  42788e:	mov    ch,cl
  427890:	xchg   esi,eax
  427891:	dec    esp
  427892:	cmp    edi,DWORD PTR [ecx+0x3b]
  427895:	fcmovbe st,st(3)
  427897:	repnz sub ch,cl
  42789a:	das    
  42789b:	push   ebx
  42789c:	rol    BYTE PTR [ebx+0x7d],cl
  42789f:	aam    0x36
  4278a1:	int    0x76
  4278a3:	xor    ch,cl
  4278a5:	lea    edx,[edi+ebp*1]
  4278a8:	inc    ebp
  4278a9:	jge    0x42783d
  4278ab:	shr    ebx,cl
  4278ad:	xchg   edx,eax
  4278ae:	int    0x8d
  4278b0:	xor    ch,cl
  4278b2:	xchg   esi,eax
  4278b3:	adc    al,0x3b
  4278b5:	jns    0x4278f2
  4278b7:	fcmovbe st,st(3)
  4278b9:	repnz sub ch,cl
  4278bc:	lea    ebx,[ebx+edx*2]
  4278bf:	shr    BYTE PTR [edi],cl
  4278c1:	shl    DWORD PTR [esi-0x3],1
  4278c4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278ca:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278d1:	call   0xcd3c:0xd6cd6d3b
  4278d8:	xchg   esi,eax
  4278d9:	inc    esp
  4278da:	int    0xe6
  4278dc:	and    al,0x5d
  4278de:	mov    ebp,0x5f25230a
  4278e3:	jnp    0x42791c
  4278e5:	ficom  WORD PTR [ebx]
  4278e7:	inc    ebx
  4278e8:	icebp  
  4278e9:	das    
  4278ea:	or     BYTE PTR [edi],al
  4278ec:	add    BYTE PTR [eax-0x4613080],0x82
  4278f3:	test   BYTE PTR [ebx-0xc],al
  4278f6:	jnp    0x4278de
  4278f8:	inc    ebx
  4278f9:	hlt    
  4278fa:	(bad)  
  4278fb:	mov    BYTE PTR [ebx-0xf],al
  4278fe:	das    
  4278ff:	add    eax,0x80809216
  427904:	adc    bh,bh
  427906:	jno    0x42793f
  427908:	ficom  WORD PTR [ebx]
  42790a:	(bad)  
  42790b:	mov    BYTE PTR [ebx-0xf],al
  42790e:	das    
  42790f:	add    eax,0x80809285
  427914:	adc    bh,bh
  427916:	xchg   esi,eax
  427917:	aaa    
  427918:	ficom  WORD PTR [ebx]
  42791a:	(bad)  
  42791b:	mov    BYTE PTR [ebx-0xf],al
  42791e:	das    
  42791f:	add    eax,0x808080f8
  427924:	adc    bh,bh
  427926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427927:	aaa    
  427928:	ficom  WORD PTR [ebx]
  42792a:	(bad)  
  42792b:	test   BYTE PTR [ebx-0xf],al
  42792e:	aam    0x3e
  427930:	adc    bh,bh
  427932:	scas   al,BYTE PTR es:[edi]
  427933:	aaa    
  427934:	ficom  WORD PTR [ebx]
  427936:	(bad)  
  427937:	mov    BYTE PTR [ebx-0xf],al
  42793a:	das    
  42793b:	add    eax,0x808081db
  427940:	adc    bh,bh
  427942:	mov    dh,0x37
  427944:	ficom  WORD PTR [ebx]
  427946:	das    
  427947:	push   es
  427948:	into   
  427949:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427953:	sub    bl,0x12
  427956:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427960:	(bad)  
  427961:	adc    al,0x0
  427963:	(bad)  
  427964:	xor    BYTE PTR [eax],al
  427966:	(bad)  
  427967:	dec    esp
  427968:	add    dh,dl
  42796a:	mov    BYTE PTR [ebp+0xff77],bh
  427970:	jmp    0x427928
  427972:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42797c:	mov    BYTE PTR [ebx-0xf],al
  42797f:	das    
  427980:	add    eax,0x80808019
  427985:	adc    bh,bh
  427987:	xchg   ecx,eax
  427988:	aaa    
  427989:	ficom  WORD PTR [ebx]
  42798b:	(bad)  
  42798c:	mov    BYTE PTR [ebx-0xf],al
  42798f:	das    
  427990:	add    eax,0x8080818e
  427995:	adc    bh,bh
  427997:	(bad)  
  427998:	aaa    
  427999:	ficom  WORD PTR [ebx]
  42799b:	(bad)  
  42799c:	test   BYTE PTR [ebx-0xf],al
  42799f:	aam    0x1c
  4279a1:	adc    bh,bh
  4279a3:	fidiv  WORD PTR [edi]
  4279a5:	ficom  WORD PTR [ebx]
  4279a7:	(bad)  
  4279a8:	mov    BYTE PTR [ebx-0xf],al
  4279ab:	das    
  4279ac:	add    eax,0x80808142
  4279b1:	adc    bh,bh
  4279b3:	out    0x37,al
  4279b5:	ficom  WORD PTR [ebx]
  4279b7:	in     al,dx
  4279b8:	iret   
  4279b9:	int    0x96
  4279bb:	mov    ch,cl
  4279bd:	(bad)  
  4279be:	dec    esp
  4279bf:	int    0xe6
  4279c1:	mov    ch,cl
  4279c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279c4:	dec    esp
  4279c5:	cmp    edx,DWORD PTR [ecx]
  4279c7:	cmp    esp,ebx
  4279c9:	das    
  4279ca:	inc    ebp
  4279cb:	sti    
  4279cc:	xchg   edx,eax
  4279cd:	shr    ecx,cl
  4279cf:	sub    BYTE PTR [edx],dl
  4279d1:	clc    
  4279d2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279d9:	cmp    ebx,ebp
  4279db:	push   ebx
  4279dc:	clc    
  4279dd:	int    0xe6
  4279df:	mov    BYTE PTR [ebx-0x2b],dl
  4279e2:	int    0xa6
  4279e4:	dec    esp
  4279e5:	xchg   ecx,ebx
  4279e7:	sbb    esi,esp
  4279e9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279ef:	int    0x96
  4279f1:	mov    ch,cl
  4279f3:	(bad)  
  4279f4:	dec    esp
  4279f5:	int    0xe6
  4279f7:	mov    ch,cl
  4279f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279fa:	dec    esp
  4279fb:	cmp    edx,DWORD PTR [ecx]
  4279fd:	cmp    esp,ebx
  4279ff:	das    
  427a00:	inc    ebp
  427a01:	sti    
  427a02:	xchg   edx,eax
  427a03:	shr    ecx,cl
  427a05:	sub    BYTE PTR [ebx],bh
  427a07:	fst    st(3)
  427a09:	out    dx,eax
  427a0a:	xchg   edx,eax
  427a0b:	adc    bh,al
  427a0d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a14:	clc    
  427a15:	ds xchg esi,eax
  427a17:	xor    BYTE PTR [esi],bl
  427a19:	(bad)  
  427a1a:	adc    al,0xcd
  427a1c:	xchg   esi,eax
  427a1d:	cmp    al,0xcd
  427a1f:	(bad)  
  427a20:	inc    esp
  427a21:	int    0x96
  427a23:	xor    ch,cl
  427a25:	(bad)  
  427a26:	adc    al,0xcd
  427a28:	xchg   esi,eax
  427a29:	xor    ch,cl
  427a2b:	(bad)  
  427a2c:	adc    al,0xcd
  427a2e:	out    0x30,al
  427a30:	int    0xa6
  427a32:	adc    al,0x3b
  427a34:	adc    DWORD PTR [ebx],edi
  427a36:	jecxz  0x427a67
  427a38:	inc    ebp
  427a39:	sti    
  427a3a:	xchg   edx,eax
  427a3b:	shr    ecx,cl
  427a3d:	sub    BYTE PTR [ebx],bh
  427a3f:	fst    QWORD PTR [edx]
  427a41:	clc    
  427a42:	add    BYTE PTR [eax-0x102c9380],0x92
  427a49:	push   ebx
  427a4a:	clc    
  427a4b:	int    0xe6
  427a4d:	cmp    al,0x53
  427a4f:	aad    0xcd
  427a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a52:	inc    esp
  427a53:	cmp    edi,edx
  427a55:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a5b:	lea    eax,[edi+ebp*1+0x45]
  427a5f:	loope  0x4279f3
  427a61:	cmp    ecx,ebx
  427a63:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a69:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a6e:	lea    esi,[eax]
  427a70:	shr    esp,cl
  427a72:	xchg   edx,eax
  427a73:	push   ebx
  427a74:	popf   
  427a75:	xchg   ecx,ebx
  427a77:	int    0x96
  427a79:	adc    al,0x1b
  427a7b:	hlt    
  427a7c:	add    al,0xf2
  427a7e:	std    
  427a7f:	shr    edi,cl
  427a81:	sub    BYTE PTR [ebx],bh
  427a83:	ins    DWORD PTR es:[edi],dx
  427a84:	adc    al,BYTE PTR [edx]
  427a86:	aam    0x37
  427a88:	ficom  WORD PTR [ebx]
  427a8a:	adc    bh,bl
  427a8c:	mov    ebp,0xcd25230a
  427a91:	out    0x3c,al
  427a93:	int    0xa6
  427a95:	inc    esp
  427a96:	add    al,0xe9
  427a98:	std    
  427a99:	adc    bh,al
  427a9b:	aam    0x37
  427a9d:	ficom  WORD PTR [ebx]
  427a9f:	adc    dh,ah
  427aa1:	mov    ebp,0x8725230a
  427aa6:	lock int 0xe6
  427aa9:	and    al,0x1b
  427aab:	aad    0x53
  427aad:	rcl    BYTE PTR [esi-0x43],cl
  427ab0:	or     ah,BYTE PTR [ebx]
  427ab2:	and    eax,0x12025370
  427ab7:	not    esi
  427ab9:	aaa    
  427aba:	ficom  WORD PTR [ebx]
  427abc:	cwde   
  427abd:	add    dh,dl
  427abf:	xor    al,0x0
  427ac1:	(bad)  
  427ac2:	sub    al,0x9a
  427ac4:	add    dh,dl
  427ac6:	sbb    al,0x0
  427ac8:	(bad)  
  427ac9:	adc    al,0x0
  427acb:	(bad)  
  427acc:	xor    BYTE PTR [eax],al
  427ace:	(bad)  
  427acf:	dec    esp
  427ad0:	add    dh,dl
  427ad2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ad8:	or     cl,BYTE PTR [ebx-0x57557433]
  427ade:	arpl   bx,cx
  427ae0:	sar    BYTE PTR [eax+eax*4],cl
  427ae3:	int    0x96
  427ae5:	mov    ch,cl
  427ae7:	(bad)  
  427ae8:	dec    esp
  427ae9:	int    0xe6
  427aeb:	mov    ch,cl
  427aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aee:	dec    esp
  427aef:	cmp    esp,ebx
  427af1:	cmp    edx,DWORD PTR [ecx]
  427af3:	das    
  427af4:	inc    ebp
  427af5:	sti    
  427af6:	xchg   edx,eax
  427af7:	shr    ecx,cl
  427af9:	sub    BYTE PTR [edx],dl
  427afb:	clc    
  427afc:	add    BYTE PTR [eax-0x102c9380],0x92
  427b03:	cmp    ebx,ebp
  427b05:	push   ebx
  427b06:	aad    0x53
  427b08:	clc    
  427b09:	int    0xe6
  427b0b:	xor    ch,cl
  427b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b0e:	adc    al,0x53
  427b10:	fst    DWORD PTR [ebx-0xc]
  427b13:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b19:	int    0x96
  427b1b:	cmp    al,0xcd
  427b1d:	(bad)  
  427b1e:	inc    esp
  427b1f:	int    0x96
  427b21:	xor    ch,cl
  427b23:	(bad)  
  427b24:	adc    al,0xcd
  427b26:	xchg   esi,eax
  427b27:	mov    ch,cl
  427b29:	(bad)  
  427b2a:	dec    esp
  427b2b:	int    0x96
  427b2d:	mov    ch,cl
  427b2f:	(bad)  
  427b30:	dec    esp
  427b31:	int    0xe6
  427b33:	mov    ch,cl
  427b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b36:	dec    esp
  427b37:	cmp    esp,ebx
  427b39:	cmp    edx,DWORD PTR [ecx]
  427b3b:	das    
  427b3c:	inc    ebp
  427b3d:	sti    
  427b3e:	xchg   edx,eax
  427b3f:	shr    ecx,cl
  427b41:	sub    BYTE PTR [edx],dl
  427b43:	clc    
  427b44:	add    BYTE PTR [eax-0x22c49380],0x53
  427b4b:	aad    0xd3
  427b4d:	out    dx,eax
  427b4e:	xchg   edx,eax
  427b4f:	push   ebx
  427b50:	clc    
  427b51:	int    0xe6
  427b53:	xor    ch,cl
  427b55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b56:	adc    al,0x3b
  427b58:	cli    
  427b59:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b5f:	lea    edx,[edi+ebp*1]
  427b62:	inc    ebp
  427b63:	loope  0x427af7
  427b65:	cmp    ecx,ebx
  427b67:	push   ebx
  427b68:	cli    
  427b69:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b6f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b74:	push   ebx
  427b75:	popf   
  427b76:	int    0x76
  427b78:	cmp    al,0xcd
  427b7a:	lea    eax,[edi+eax*4-0x27]
  427b7e:	int    0xe6
  427b80:	cmp    al,0x1b
  427b82:	hlt    
  427b83:	int    0xa6
  427b85:	inc    esp
  427b86:	adc    al,BYTE PTR [edx]
  427b88:	mov    ebp,0x5625230a
  427b8d:	jnp    0x427bc6
  427b8f:	ficom  WORD PTR [ebx]
  427b91:	das    
  427b92:	inc    ebp
  427b93:	jge    0x427b27
  427b95:	shr    ecx,cl
  427b97:	sub    bl,dl
  427b99:	jmp    0x427b2d
  427b9b:	cmp    ebx,ebp
  427b9d:	adc    bh,al
  427b9f:	add    BYTE PTR [eax-0xfac9380],0x53
  427ba6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bac:	lea    ecx,[eax-0x32b36933]
  427bb2:	out    0x30,al
  427bb4:	int    0xa6
  427bb6:	adc    al,0x4
  427bb8:	repnz std 
  427bba:	add    al,0xe9
  427bbc:	std    
  427bbd:	adc    al,BYTE PTR [edx]
  427bbf:	aam    0x37
  427bc1:	ficom  WORD PTR [ebx]
  427bc3:	adc    bh,al
  427bc5:	aam    0x37
  427bc7:	ficom  WORD PTR [ebx]
  427bc9:	shr    edi,cl
  427bcb:	sub    BYTE PTR [ebx],bh
  427bcd:	ins    DWORD PTR es:[edi],dx
  427bce:	adc    bh,bl
  427bd0:	mov    ebp,0x1225230a
  427bd5:	hlt    
  427bd6:	mov    ebp,0x8725230a
  427bdb:	lock sbb edx,ebp
  427bde:	jmp    0x427c27
  427be0:	inc    DWORD PTR [eax]
  427be2:	add    BYTE PTR [esi-0x12fb1233],dl
  427be8:	sbb    al,0x98
  427bea:	pop    edi
  427beb:	(bad)  
  427bec:	aaa    
  427bed:	ficom  WORD PTR [ebx]
  427bef:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427bf5:	and    esp,DWORD PTR ds:0xc9f5760a
  427bfb:	jbe    0x427bba
  427bfd:	xchg   ecx,eax
  427bfe:	aaa    
  427bff:	ficom  WORD PTR [ebx]
  427c01:	or     dh,BYTE PTR [esi-0x13]
  427c04:	int    0x96
  427c06:	adc    ebp,ecx
  427c08:	(bad)  
  427c09:	cmc    
  427c0a:	call   0xefd3:0x92fb452f
  427c11:	xchg   edx,eax
  427c12:	int    0xd6
  427c14:	adc    ebp,ecx
  427c16:	out    0xf5,al
  427c18:	jo     0x427c2c
  427c1a:	sti    
  427c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c1c:	mov    esi,0x3b4229
  427c21:	jno    0x427c76
  427c23:	(bad)  [edx]
  427c25:	xchg   esi,eax
  427c26:	std    
  427c27:	int    0x96
  427c29:	dec    esp
  427c2a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c30:	iret   
  427c31:	jbe    0x427c30
  427c33:	add    dh,dl
  427c35:	mov    bl,dl
  427c37:	mov    ecx,0xd6007028
  427c3c:	dec    esp
  427c3d:	add    dh,dl
  427c3f:	in     eax,dx
  427c40:	add    dh,dl
  427c42:	mov    ebp,0xf5d600
  427c47:	(bad)  
  427c48:	adc    DWORD PTR [ebp+0xfde6],edi
  427c4e:	stos   BYTE PTR es:[edi],al
  427c4f:	or     dh,BYTE PTR [esi-0x3]
  427c52:	int    0x76
  427c54:	std    
  427c55:	test   al,0xcb
  427c57:	ror    BYTE PTR [eax-0x12326980],cl
  427c5d:	add    al,0xb5
  427c5f:	stc    
  427c60:	add    al,0xed
  427c62:	inc    esp
  427c63:	cwde   
  427c64:	leave  
  427c65:	je     0x427c9b
  427c67:	xor    al,0x80
  427c69:	add    BYTE PTR [eax+0x3474c980],0x44
  427c70:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c77:	xor    BYTE PTR [eax+0x0],dh
  427c7a:	(bad)  
  427c7b:	xor    al,0x0
  427c7d:	(bad)  
  427c7e:	sub    al,0x0
  427c80:	(bad)  
  427c81:	and    al,0x0
  427c83:	(bad)  
  427c84:	sbb    al,0x0
  427c86:	(bad)  
  427c87:	adc    al,0x0
  427c89:	(bad)  
  427c8a:	xor    BYTE PTR [eax],al
  427c8c:	(bad)  
  427c8d:	dec    esp
  427c8e:	add    dh,dl
  427c90:	mov    BYTE PTR [ebp+0xe7e7],bh
  427c96:	int    0x76
  427c98:	mov    BYTE PTR [edx],cl
  427c9a:	je     0x427cd0
  427c9c:	test   ch,cl
  427c9e:	je     0x427cd4
  427ca0:	xor    al,0x6
  427ca2:	ins    DWORD PTR es:[edi],dx
  427ca3:	das    
  427ca4:	add    eax,0x80808017
  427ca9:	int    0x74
  427cab:	xor    al,0x44
  427cad:	push   es
  427cae:	ins    DWORD PTR es:[edi],dx
  427caf:	das    
  427cb0:	add    eax,0x8080800a
  427cb5:	add    ah,dl
  427cb7:	xor    al,0x24
  427cb9:	add    ah,dl
  427cbb:	xor    al,0x24
  427cbd:	add    ah,dl
  427cbf:	xor    al,0x24
  427cc1:	int    0x74
  427cc3:	xor    al,0x50
  427cc5:	add    cl,dh
  427cc7:	int    0x74
  427cc9:	xor    al,0x84
  427ccb:	int    0x74
  427ccd:	xor    al,0x84
  427ccf:	int    0x74
  427cd1:	xor    al,0x84
  427cd3:	iret   
  427cd4:	jbe    0x427c5a
  427cd6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cda:	int    0x74
  427cdc:	xor    al,0x3c
  427cde:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427ce2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427ce6:	int    0x74
  427ce8:	xor    al,0x84
  427cea:	int    0x74
  427cec:	xor    al,0x84
  427cee:	int    0x8c
  427cf0:	xor    al,0x84
  427cf2:	int    0xa
  427cf4:	and    eax,0xcd808081
  427cf9:	xor    ebp,ecx
  427cfb:	aam    0x34
  427cfd:	mov    ch,cl
  427cff:	add    DWORD PTR ds:0x5e808081,ebp
  427d05:	sbb    BYTE PTR [edi],ch
  427d07:	or     edx,DWORD PTR ds:0xcd808081
  427d0d:	xor    ch,cl
  427d0f:	push   eax
  427d10:	int    0x62
  427d12:	fs iret 
  427d14:	xchg   esp,eax
  427d15:	sbb    BYTE PTR [eax-0x33],dh
  427d18:	push   ecx
  427d19:	int    0x22
  427d1b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d21:	pop    esi
  427d22:	sbb    BYTE PTR [edi],ch
  427d24:	add    al,0x7b
  427d26:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d30:	dec    edx
  427d31:	int    0x80
  427d33:	xor    ecx,DWORD PTR [edi]
  427d35:	xchg   ebx,edx
  427d37:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d3d:	or     ch,0x74
  427d40:	xor    al,0x44
  427d42:	push   es
  427d43:	ins    DWORD PTR es:[edi],dx
  427d44:	das    
  427d45:	push   es
  427d46:	cwde   
  427d47:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d51:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d5b:	je     0x427d91
  427d5d:	test   ch,cl
  427d5f:	add    DWORD PTR ds:0xcd808081,esp
  427d65:	or     BYTE PTR [edx],0x74
  427d68:	xor    al,0x4c
  427d6a:	int    0x74
  427d6c:	xor    al,0x84
  427d6e:	int    0x1
  427d70:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d76:	int    0x80
  427d78:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d7c:	int    0x74
  427d7e:	xor    al,0x84
  427d80:	int    0x1
  427d82:	int3   
  427d83:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d8d:	dec    esp
  427d8e:	int    0x74
  427d90:	xor    al,0x84
  427d92:	int    0x8c
  427d94:	xor    al,0x84
  427d96:	int    0x1
  427d98:	popf   
  427d99:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427da3:	or     ch,0x89
  427da6:	imul   edx,ecx,0x3b358621
  427dac:	jns    0x427db2
  427dae:	add    bh,bh
  427db0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427db6:	push   ebx
  427db7:	jge    0x427dc3
  427db9:	mov    WORD PTR [esp+ecx*2],?
  427dbc:	leave  
  427dbd:	je     0x427df3
  427dbf:	mov    BYTE PTR [eax-0x327f7f80],al
  427dc5:	je     0x427dfb
  427dc7:	xor    al,0x6
  427dc9:	ins    DWORD PTR es:[edi],dx
  427dca:	aam    0x73
  427dcc:	int    0x74
  427dce:	xor    al,0x30
  427dd0:	add    al,0xbd
  427dd2:	adc    ah,0x52
  427dd5:	jl     0x427dab
  427dd7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427ddb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427ddf:	add    ah,dl
  427de1:	xor    al,0x2c
  427de3:	add    ah,dl
  427de5:	xor    al,0x2c
  427de7:	add    ah,dl
  427de9:	xor    al,0x2c
  427deb:	add    ah,dl
  427ded:	xor    al,0x2c
  427def:	int    0x74
  427df1:	xor    al,0x54
  427df3:	add    cl,dh
  427df5:	in     al,dx
  427df6:	cmp    BYTE PTR [eax],al
  427df8:	aam    0x34
  427dfa:	and    al,0x0
  427dfc:	aam    0x34
  427dfe:	and    al,0x0
  427e00:	aam    0x34
  427e02:	and    al,0xcd
  427e04:	je     0x427e3a
  427e06:	push   eax
  427e07:	add    cl,dh
  427e09:	in     al,dx
  427e0a:	and    al,BYTE PTR [eax]
  427e0c:	aam    0x34
  427e0e:	adc    al,0xcd
  427e10:	je     0x427e46
  427e12:	cmp    al,0x0
  427e14:	icebp  
  427e15:	in     al,dx
  427e16:	xchg   ch,cl
  427e18:	je     0x427e4e
  427e1a:	xor    al,0x0
  427e1c:	icebp  
  427e1d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e21:	int    0x74
  427e23:	xor    al,0x4c
  427e25:	push   es
  427e26:	ins    DWORD PTR es:[edi],dx
  427e27:	aam    0x4e
  427e29:	int    0x74
  427e2b:	xor    al,0x84
  427e2d:	leave  
  427e2e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e34:	and    DWORD PTR [esi+0x3474cd35],eax
  427e3a:	mov    ch,cl
  427e3c:	mov    WORD PTR [esp+eax*4],?
  427e3f:	int    0xa
  427e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e42:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e4c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e52:	mov    ch,cl
  427e54:	mov    WORD PTR [eax+ecx*4],?
  427e57:	cmp    edi,DWORD PTR [ecx+0x4]
  427e5a:	add    bh,bh
  427e5c:	shl    edx,cl
  427e5e:	sub    bl,dl
  427e60:	mov    ebp,0xcdd35392
  427e65:	mov    WORD PTR [esp+ecx*2],?
  427e68:	inc    ebx
  427e69:	rcl    esi,cl
  427e6b:	and    ecx,ebp
  427e6d:	je     0x427ea3
  427e6f:	test   ch,cl
  427e71:	mov    WORD PTR [esp+eax*4],?
  427e74:	int    0xa
  427e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e77:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e81:	add    BYTE PTR [eax],0x70
  427e84:	cmp    al,0xec
  427e86:	push   ds
  427e87:	iret   
  427e88:	jbe    0x427e0e
  427e8a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e8e:	int    0x74
  427e90:	xor    al,0x4c
  427e92:	int    0x8c
  427e94:	xor    al,0x84
  427e96:	int    0xa
  427e98:	in     al,0x81
  427e9a:	add    BYTE PTR [eax-0x777e7633],0xcd
  427ea1:	je     0x427ed7
  427ea3:	test   ch,cl
  427ea5:	add    ebp,ebp
  427ea7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427eb1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427eb7:	or     bh,0x84
  427eba:	adc    cl,ch
  427ebc:	mov    WORD PTR [esp+eax*4],?
  427ebf:	int    0xa
  427ec1:	in     al,0x81
  427ec3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eca:	mov    BYTE PTR [eax-0x2d591833],ch
  427ed0:	sub    al,0x80
  427ed2:	lds    edx,FWORD PTR [eax+0x75]
  427ed5:	ins    BYTE PTR es:[edi],dx
  427ed6:	jae    0x427f4f
  427ed8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427edc:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ee0:	add    BYTE PTR [ecx+0x74],ah
  427ee3:	ins    BYTE PTR es:[edi],dx
  427ee4:	popa   
  427ee5:	inc    esp
  427ee6:	gs popa 
  427ee8:	fs push 0x6561686d
  427eee:	add    BYTE PTR fs:[ebp+0x74],ah
  427ef2:	push   0x65726143
  427ef7:	outs   dx,DWORD PTR ds:[esi]
  427ef8:	jns    0x427f60
  427efa:	add    BYTE PTR gs:[edi+0x72],dh
  427efe:	jns    0x427f6d
  427f00:	popa   
  427f01:	outs   dx,DWORD PTR ds:[esi]
  427f02:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f06:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f0a:	push   0x6f6d6568
  427f0f:	add    BYTE PTR fs:[edx+0x65],dl
  427f13:	arpl   WORD PTR [ebx+0x62],si
  427f16:	popa   
  427f17:	ins    BYTE PTR es:[edi],dx
  427f18:	jne    0x427f92
  427f1a:	gs jae 0x427f1d
  427f1d:	ins    DWORD PTR es:[edi],dx
  427f1e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f25:	outs   dx,DWORD PTR ds:[esi]
  427f26:	jb     0x427f97
  427f28:	jo     0x427f2a
  427f2a:	ja     0x427f8d
  427f2c:	gs je  0x427f9e
  427f2f:	jb     0x427fa0
  427f31:	bound  esp,QWORD PTR [ecx+0x70]
  427f34:	add    BYTE PTR [ebx+0x69],cl
  427f37:	outs   dx,BYTE PTR ds:[esi]
  427f38:	addr16 addr16 popa 
  427f3b:	outs   dx,BYTE PTR ds:[esi]
  427f3c:	arpl   WORD PTR [ecx+0x70],sp
  427f3f:	add    BYTE PTR [edi+0x6e],al
  427f42:	jne    0x427fb7
  427f44:	je     0x427fab
  427f46:	outs   dx,BYTE PTR ds:[esi]
  427f47:	push   esi
  427f48:	popa   
  427f49:	jb     0x427fc4
  427f4b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f4f:	jb     0x427fa1
  427f51:	popa   
  427f52:	ins    BYTE PTR es:[edi],dx
  427f53:	ins    DWORD PTR es:[edi],dx
  427f54:	je     0x427fbf
  427f56:	outs   dx,DWORD PTR ds:[esi]
  427f57:	ja     0x427fbe
  427f59:	jb     0x427f5b
  427f5b:	jo     0x427fc2
  427f5d:	ins    DWORD PTR es:[edi],dx
  427f5e:	jns    0x427fd4
  427f60:	push   0x6f656562
  427f65:	outs   dx,BYTE PTR ds:[esi]
  427f66:	push   eax
  427f67:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f6e:	inc    ebx
  427f6f:	outs   dx,DWORD PTR ds:[esi]
  427f70:	popa   
  427f71:	ins    BYTE PTR es:[edi],dx
  427f72:	popa   
  427f73:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f7a:	je     0x427ff5
  427f7c:	outs   dx,DWORD PTR gs:[esi]
  427f7e:	outs   dx,BYTE PTR ds:[esi]
  427f7f:	gs ins BYTE PTR es:[edi],dx
  427f81:	inc    ebx
  427f82:	push   0x54007261
  427f87:	jns    0x427ff9
  427f89:	jns    0x427ff8
  427f8b:	jne    0x427ff2
  427f8d:	imul   eax,DWORD PTR gs:[eax],0x70
  427f91:	outs   dx,DWORD PTR ds:[esi]
  427f92:	je     0x427fd6
  427f94:	gs gs jb 0x428008
  427f98:	outs   dx,DWORD PTR ds:[esi]
  427f99:	je     0x428006
  427f9b:	imul   eax,DWORD PTR [eax],0x616c7548
  427fa1:	jo     0x42800c
  427fa3:	popa   
  427fa4:	ins    BYTE PTR es:[edi],dx
  427fa5:	dec    ebx
  427fa6:	outs   dx,BYTE PTR ds:[esi]
  427fa7:	popa   
  427fa8:	jo     0x428023
  427faa:	add    BYTE PTR gs:[eax+0x6f],dh
  427fae:	je     0x427ff2
  427fb0:	gs ins BYTE PTR es:[edi],dx
  427fb2:	jae    0x428023
  427fb4:	js     0x427fb6
  427fb6:	popa   
  427fb7:	data16 je 0x428000
  427fba:	ins    BYTE PTR es:[edi],dx
  427fbb:	popa   
  427fbc:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fc0:	gs jae 0x428024
  427fc3:	jb     0x427fc5
  427fc5:	inc    edx
  427fc6:	ins    BYTE PTR es:[edi],dx
  427fc7:	popa   
  427fc8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fcc:	je     0x428034
  427fce:	ins    BYTE PTR es:[edi],dx
  427fcf:	jns    0x428046
  427fd1:	push   0x6d6d6800
  427fd6:	popa   
  427fd7:	inc    edi
  427fd8:	popa   
  427fd9:	ins    BYTE PTR es:[edi],dx
  427fda:	ins    BYTE PTR es:[edi],dx
  427fdb:	push   0x48007361
  427fe0:	outs   dx,DWORD PTR ds:[esi]
  427fe1:	ins    DWORD PTR es:[edi],dx
  427fe2:	outs   dx,DWORD PTR gs:[esi]
  427fe4:	jb     0x42804b
  427fe6:	data16 jno 0x428052
  427fe9:	jae    0x42804c
  427feb:	bound  esi,QWORD PTR [eax+0x61]
  427fee:	add    BYTE PTR [ebp+0x74],ah
  427ff1:	outs   dx,BYTE PTR ds:[esi]
  427ff2:	gs addr16 jbe 0x428057
  427ff6:	je     0x428071
  427ff8:	gs popa 
  427ffa:	add    BYTE PTR [ebp+0x67],ah
  427ffd:	outs   dx,DWORD PTR ds:[esi]
  427ffe:	inc    edi
  427fff:	popa   
  428000:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428008:	jo     0x42806f
  42800a:	fs jbe 0x42806e
  42800d:	je     0x428084
  42800f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428013:	outs   dx,DWORD PTR ds:[esi]
  428014:	add    BYTE PTR [edx+0x0],ch
  428017:	jne    0x428019
  428019:	add    BYTE PTR [bp+0x0],ch
  42801d:	popa   
  42801e:	add    BYTE PTR [esi+0x0],ch
  428021:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428026:	add    BYTE PTR [ebp+0x0],dh
  428029:	ins    DWORD PTR es:[edi],dx
  42802a:	add    BYTE PTR [eax],al
  42802c:	add    BYTE PTR [edi+0x0],ch
  42802f:	jb     0x428031
  428031:	ja     0x428033
  428033:	imul   eax,DWORD PTR [eax],0x680073
  428039:	outs   dx,BYTE PTR ds:[esi]
  42803a:	add    BYTE PTR [ecx+0x0],ch
  42803d:	add    BYTE PTR fs:[ecx+0x0],ch
  428041:	ja     0x428043
  428043:	imul   eax,DWORD PTR [eax],0x65006e
  428049:	push   0x70000000
  42804e:	add    BYTE PTR [ecx+0x0],ah
  428051:	je     0x428053
  428053:	jbe    0x428055
  428055:	add    BYTE PTR gs:[ebp+0x0],ah
  428059:	je     0x42805b
  42805b:	add    BYTE PTR gs:[edi+0x0],ah
  42805f:	ins    BYTE PTR es:[edi],dx
  428060:	add    BYTE PTR [ecx+0x0],ah
  428063:	imul   eax,DWORD PTR [eax],0x66
  428069:	outs   dx,DWORD PTR ds:[esi]
  42806a:	add    BYTE PTR [esi+0x0],ch
  42806d:	je     0x42806f
  42806f:	popa   
  428070:	add    BYTE PTR [edi+0x0],dh
  428073:	push   ebx
  428074:	add    BYTE PTR [edi+0x0],ch
  428077:	arpl   WORD PTR [eax],ax
  428079:	imul   eax,DWORD PTR [eax],0x61
  42807c:	add    BYTE PTR [esi+0x0],dh
  42807f:	outs   dx,DWORD PTR ds:[esi]
  428080:	add    BYTE PTR [eax],al
  428082:	add    BYTE PTR [ebp+0x0],ch
  428085:	jns    0x428087
  428087:	add    BYTE PTR gs:[esi+0x0],ah
  42808b:	ins    BYTE PTR es:[edi],dx
  42808c:	add    BYTE PTR [ecx+0x0],ah
  42808f:	jns    0x428091
  428091:	jbe    0x428093
  428093:	popa   
  428094:	add    BYTE PTR [esi+0x0],ch
  428097:	popa   
  428098:	add    BYTE PTR [edi+0x0],ah
  42809b:	outs   dx,DWORD PTR ds:[esi]
  42809c:	add    BYTE PTR [eax],al
  42809e:	add    BYTE PTR [edi+0x0],ch
  4280a1:	jb     0x4280a3
  4280a3:	jae    0x4280a5
  4280a5:	imul   eax,DWORD PTR [eax],0x47006e
  4280ab:	imul   eax,DWORD PTR [eax],0x70006d
  4280b1:	bound  eax,QWORD PTR [eax]
  4280b3:	outs   dx,DWORD PTR ds:[esi]
  4280b4:	add    BYTE PTR [eax+0x0],dh
  4280b7:	imul   eax,DWORD PTR [eax],0x650000
  4280bd:	js     0x4280bf
  4280bf:	jae    0x4280c1
  4280c1:	outs   dx,DWORD PTR ds:[esi]
  4280c2:	add    BYTE PTR [ebx+0x0],dh
  4280c5:	popa   
  4280c6:	add    BYTE PTR [esi+0x0],ch
  4280c9:	je     0x4280cb
  4280cb:	add    BYTE PTR [eax],al
  4280cd:	bound  eax,QWORD PTR [eax]
  4280cf:	jns    0x4280d1
  4280d1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280d6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280da:	add    BYTE PTR [ecx+0x0],ah
  4280dd:	add    BYTE PTR [eax],al
  4280df:	js     0x4280e1
  4280e1:	imul   eax,DWORD PTR [eax],0x610054
  4280e7:	imul   eax,DWORD PTR [eax],0x48006e
  4280ed:	popa   
  4280ee:	add    BYTE PTR [esi+0x0],ch
  4280f1:	add    BYTE PTR fs:[eax],al
  4280f4:	add    BYTE PTR [edi+0x0],cl
  4280f7:	ja     0x4280f9
  4280f9:	ins    BYTE PTR es:[edi],dx
  4280fa:	add    BYTE PTR [ebx+0x0],dh
  4280fd:	popa   
  4280fe:	add    BYTE PTR [ebx+0x0],dh
  428101:	jo     0x428103
  428103:	popa   
  428104:	add    BYTE PTR [ecx+0x0],ch
  428107:	imul   eax,DWORD PTR [eax],0x72
  42810a:	add    BYTE PTR [ebp+0x0],ah
  42810d:	jbe    0x42810f
  42810f:	add    BYTE PTR [eax],al
  428111:	jb     0x428113
  428113:	jne    0x428115
  428115:	je     0x428117
  428117:	ins    DWORD PTR es:[edi],dx
  428118:	add    BYTE PTR [ebp+0x0],dh
  42811b:	arpl   WORD PTR [eax],ax
  42811d:	jne    0x42811f
  42811f:	jo     0x428121
  428121:	add    BYTE PTR [eax],al
  428123:	jae    0x428125
  428125:	outs   dx,DWORD PTR ds:[esi]
  428126:	add    BYTE PTR [esi+0x0],ah
  428129:	imul   eax,DWORD PTR [eax],0x630062
  42812f:	outs   dx,DWORD PTR ds:[esi]
  428130:	add    BYTE PTR [ecx+0x0],ch
  428133:	jb     0x428135
  428135:	jae    0x428137
  428137:	outs   dx,DWORD PTR ds:[esi]
  428138:	add    BYTE PTR [eax],al
  42813a:	add    BYTE PTR [ebx+0x0],dl
  42813d:	outs   dx,DWORD PTR ds:[esi]
  42813e:	add    BYTE PTR [ebx+0x0],ah
  428141:	popa   
  428142:	add    BYTE PTR [ecx+0x0],ch
  428145:	jae    0x428147
  428147:	data16 add BYTE PTR [ecx+0x0],ah
  42814b:	jb     0x42814d
  42814d:	popa   
  42814e:	add    BYTE PTR [ecx+0x0],ch
  428151:	add    BYTE PTR [eax],al
  428153:	add    BYTE PTR [esi],cl
  428155:	adc    BYTE PTR [eax],al
  428157:	out    0x67,eax
  428159:	adc    BYTE PTR [eax],al
  42815b:	js     0x428184
  42815d:	adc    BYTE PTR [eax],al
  42815f:	test   al,0x13
  428161:	adc    BYTE PTR [eax],al
  428163:	fs push esi
  428165:	adc    BYTE PTR [eax],al
  428167:	jp     0x428189
  428169:	adc    BYTE PTR [eax],al
  42816b:	enter  0x1052,0x0
  42816f:	loop   0x4281e4
  428171:	adc    BYTE PTR [eax],al
  428173:	ja     0x4281e0
  428175:	adc    BYTE PTR [eax],al
  428177:	cmp    al,0x2b
  428179:	adc    BYTE PTR [eax],al
  42817b:	rcl    BYTE PTR [edx],1
  42817d:	adc    BYTE PTR [eax],al
  42817f:	sbb    DWORD PTR [eax+0x10],ebx
  428182:	add    BYTE PTR [esi],ah
  428184:	add    dl,BYTE PTR [eax]
  428186:	add    BYTE PTR [edi+0xc],dh
  428189:	adc    BYTE PTR [eax],al
  42818b:	mov    dh,BYTE PTR [ecx]
  42818d:	adc    BYTE PTR [eax],al
  42818f:	out    dx,al
  428190:	sbb    eax,0xed80010
  428195:	adc    BYTE PTR [eax],al
  428197:	add    eax,0x3300107f
  42819c:	jbe    0x4281ae
  42819e:	add    BYTE PTR [ebx-0x7f],dl
  4281a1:	inc    edx
  4281a2:	add    BYTE PTR [edi-0x7f],dl
  4281a5:	inc    edx
  4281a6:	add    BYTE PTR [ebx-0x7f],bl
  4281a9:	inc    edx
  4281aa:	add    BYTE PTR [edi-0x7f],bl
  4281ad:	inc    edx
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [edi-0x7f],bh
  4281cd:	inc    edx
  4281ce:	add    BYTE PTR [ebx-0x78ffbd7f],al
  4281d4:	add    DWORD PTR [edx+0x0],0x42818b
  4281db:	pop    DWORD PTR [ecx-0x7e6cffbe]
  4281e1:	inc    edx
  4281e2:	add    BYTE PTR [edi-0x64ffbd7f],dl
  4281e8:	add    DWORD PTR [edx+0x0],0x42822b
  4281ef:	das    
  4281f0:	add    BYTE PTR [edx+0x0],0x33
  4281f4:	add    BYTE PTR [edx+0x0],0x37
  4281f8:	add    BYTE PTR [edx+0x0],0x3b
  4281fc:	add    BYTE PTR [edx+0x0],0x3f
  428200:	add    BYTE PTR [edx+0x0],0x43
  428204:	add    BYTE PTR [edx+0x0],0x47
  428208:	add    BYTE PTR [edx+0x0],0x4b
  42820c:	add    BYTE PTR [edx+0x0],0x4f
  428210:	add    BYTE PTR [edx+0x0],0x53
  428214:	add    BYTE PTR [edx+0x0],0x57
  428218:	add    BYTE PTR [edx+0x0],0x5b
  42821c:	add    BYTE PTR [edx+0x0],0x5f
  428220:	add    BYTE PTR [edx+0x0],0x63
  428224:	add    BYTE PTR [edx+0x0],0x67
  428228:	add    BYTE PTR [edx+0x0],0x29
  42822c:	or     al,0x10
  42822e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428234:	push   edi
  428235:	adc    BYTE PTR [eax],al
  428237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428238:	outs   dx,DWORD PTR ds:[esi]
  428239:	adc    BYTE PTR [eax],al
  42823b:	push   ebx
  42823c:	popa   
  42823d:	adc    BYTE PTR [eax],al
  42823f:	add    dh,BYTE PTR [ebp+0x10]
  428242:	add    dh,cl
  428244:	jle    0x428256
  428246:	add    BYTE PTR [esi+edx*2],dl
  428249:	adc    BYTE PTR [eax],al
  42824b:	mov    al,0x68
  42824d:	adc    BYTE PTR [eax],al
  42824f:	aas    
  428250:	inc    esp
  428251:	adc    BYTE PTR [eax],al
  428253:	pop    ebp
  428254:	and    DWORD PTR [eax],edx
  428256:	add    bl,dl
  428258:	jl     0x42826a
  42825a:	add    BYTE PTR [edx+0xb],dh
  42825d:	adc    BYTE PTR [eax],al
  42825f:	inc    edx
  428260:	push   eax
  428261:	adc    BYTE PTR [eax],al
  428263:	mov    ebp,0xbb001074
  428268:	pop    ds
  428269:	adc    BYTE PTR [eax],al
  42826b:	sub    DWORD PTR [eax+0x10],eax
  42826e:	add    BYTE PTR [ecx],dh
  428270:	ja     0x428282
  428272:	add    bl,dl
  428274:	sbb    dl,BYTE PTR [eax]
  428276:	add    BYTE PTR [esi+0x1e],ch
  428279:	adc    BYTE PTR [eax],al
  42827b:	or     ch,BYTE PTR [esi]
  42827d:	adc    BYTE PTR [eax],al
  42827f:	sbb    eax,0xa100103e
  428284:	data16 adc BYTE PTR [eax],al
  428287:	xchg   ecx,eax
  428288:	bound  edx,QWORD PTR [eax]
  42828a:	add    BYTE PTR [esi],bh
  42828c:	dec    edi
  42828d:	adc    BYTE PTR [eax],al
  42828f:	in     eax,dx
  428290:	adc    BYTE PTR fs:[eax],al
  428293:	sub    bl,BYTE PTR [ecx+0x10]
  428296:	add    BYTE PTR [esi+0x43],al
  428299:	adc    BYTE PTR [eax],al
  42829b:	imul   edi,DWORD PTR [eax+edx*1],0x0
  42829f:	rol    BYTE PTR [esi+0x10],0x0
  4282a3:	in     eax,0x31
  4282a5:	adc    BYTE PTR [eax],al
  4282a7:	mov    esp,0x6b00104f
  4282ac:	add    BYTE PTR [edx+0x0],0x6f
  4282b0:	add    BYTE PTR [edx+0x0],0x73
  4282b4:	add    BYTE PTR [edx+0x0],0x77
  4282b8:	add    BYTE PTR [edx+0x0],0x7b
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0x8b
  4282cc:	add    BYTE PTR [edx+0x0],0x8f
  4282d0:	add    BYTE PTR [edx+0x0],0x93
  4282d4:	add    BYTE PTR [edx+0x0],0x97
  4282d8:	add    BYTE PTR [edx+0x0],0x9b
  4282dc:	add    BYTE PTR [edx+0x0],0x9f
  4282e0:	add    BYTE PTR [edx+0x0],0xa3
  4282e4:	add    BYTE PTR [edx+0x0],0xa7
  4282e8:	add    BYTE PTR [edx+0x0],0xe1
  4282ec:	and    dl,BYTE PTR [eax]
  4282ee:	add    bh,bh
  4282f0:	push   ecx
  4282f1:	adc    BYTE PTR [eax],al
  4282f3:	test   BYTE PTR ds:0x1d0c0010,0x10
  4282fa:	add    BYTE PTR [ebx],al
  4282fc:	sbb    dl,BYTE PTR [eax]
  4282fe:	add    ch,ah
  428300:	or     dl,BYTE PTR [eax]
  428302:	add    BYTE PTR [edi+0x42001035],bl
  428308:	pop    edi
  428309:	adc    BYTE PTR [eax],al
  42830b:	adc    eax,0xd300103f
  428310:	cmp    dl,BYTE PTR [eax]
  428312:	add    BYTE PTR [ebp+0x1001021],ah
  428318:	sbb    al,0x10
  42831a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428320:	adc    BYTE PTR cs:[eax],al
  428323:	push   eax
  428324:	adc    BYTE PTR [bx+si],al
  428327:	mov    edi,0xeb00102d
  42832c:	add    BYTE PTR [edx+0x0],0xef
  428330:	add    BYTE PTR [edx+0x0],0xf3
  428334:	add    BYTE PTR [edx+0x0],0xf7
  428338:	add    BYTE PTR [edx+0x0],0xfb
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xb
  42834c:	add    DWORD PTR [edx+0x0],0xf
  428350:	add    DWORD PTR [edx+0x0],0x13
  428354:	add    DWORD PTR [edx+0x0],0x17
  428358:	add    DWORD PTR [edx+0x0],0x1b
  42835c:	add    DWORD PTR [edx+0x0],0x1f
  428360:	add    DWORD PTR [edx+0x0],0x23
  428364:	add    DWORD PTR [edx+0x0],0x27
  428368:	add    DWORD PTR [edx+0x0],0xffffff98
  42836c:	pusha  
  42836d:	adc    BYTE PTR [eax],al
  42836f:	pop    ebp
  428370:	js     0x428382
  428372:	add    BYTE PTR [esi],bh
  428374:	dec    eax
  428375:	adc    BYTE PTR [eax],al
  428377:	cmp    al,0x7a
  428379:	adc    BYTE PTR [eax],al
  42837b:	aam    0x9
  42837d:	adc    BYTE PTR [eax],al
  42837f:	or     cl,BYTE PTR [ebx]
  428381:	adc    BYTE PTR [eax],al
  428383:	pop    ebx
  428384:	push   ebp
  428385:	adc    BYTE PTR [eax],al
  428387:	mov    esi,0x6001032
  42838c:	xor    edx,DWORD PTR [eax]
  42838e:	add    BYTE PTR [esi-0x16ffefc0],al
  428394:	and    eax,0x61460010
  428399:	adc    BYTE PTR [eax],al
  42839b:	adc    DWORD PTR [ebp+0x10],ebp
  42839e:	add    al,al
  4283a0:	dec    esi
  4283a1:	adc    BYTE PTR [eax],al
  4283a3:	jae    0x4283c3
  4283a5:	adc    BYTE PTR [eax],al
  4283a7:	dec    ebx
  4283a8:	add    eax,0x836b0010
  4283ad:	inc    edx
  4283ae:	add    BYTE PTR [edi-0x7d],ch
  4283b1:	inc    edx
  4283b2:	add    BYTE PTR [ebx-0x7d],dh
  4283b5:	inc    edx
  4283b6:	add    BYTE PTR [edi-0x7d],dh
  4283b9:	inc    edx
  4283ba:	add    BYTE PTR [ebx-0x7d],bh
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0xffffff8b
  4283cc:	add    DWORD PTR [edx+0x0],0xffffff8f
  4283d0:	add    DWORD PTR [edx+0x0],0xffffff93
  4283d4:	add    DWORD PTR [edx+0x0],0xffffff97
  4283d8:	add    DWORD PTR [edx+0x0],0xffffff9b
  4283dc:	add    DWORD PTR [edx+0x0],0xffffff9f
  4283e0:	add    DWORD PTR [edx+0x0],0xffffffa3
  4283e4:	add    DWORD PTR [edx+0x0],0xffffffa7
  4283e8:	add    DWORD PTR [edx+0x0],0x0
	...
  4283f4:	cmp    dh,BYTE PTR [ecx+0x52]
  4283f7:	dec    edi
  4283f8:	add    BYTE PTR [eax],al
  4283fa:	add    BYTE PTR [eax],al
  4283fc:	push   eax
  4283fd:	lea    eax,[edx]
  4283ff:	add    BYTE PTR [ecx],al
  428401:	add    BYTE PTR [eax],al
  428403:	add    BYTE PTR [ecx],al
  428405:	add    BYTE PTR [eax],al
  428407:	add    BYTE PTR [ecx],al
  428409:	add    BYTE PTR [eax],al
  42840b:	add    BYTE PTR [eax],ah
  42840d:	lea    eax,[edx]
  42840f:	add    BYTE PTR [eax-0x73],al
  428412:	add    al,BYTE PTR [eax]
  428414:	xor    BYTE PTR [ebp+0x2],cl
	...
  428422:	add    BYTE PTR [eax],al
  428424:	call   0x44286ae
  428429:	xchg   BYTE PTR [edx],al
  42842b:	add    BYTE PTR [esi],dl
  42842d:	xchg   BYTE PTR [edx],al
  42842f:	add    BYTE PTR [eax],ch
  428431:	xchg   BYTE PTR [edx],al
  428433:	add    BYTE PTR [eax-0x7a],al
  428436:	add    al,BYTE PTR [eax]
  428438:	push   esp
  428439:	xchg   BYTE PTR [edx],al
  42843b:	add    BYTE PTR [esi-0x7a],ch
  42843e:	add    al,BYTE PTR [eax]
  428440:	add    BYTE PTR [eax],al
  428442:	add    BYTE PTR [eax],al
  428444:	nop
  428445:	xchg   BYTE PTR [edx],al
  428447:	add    BYTE PTR [esi-0x43fffd7a],ch
  42844d:	xchg   BYTE PTR [edx],al
  42844f:	add    dl,cl
  428451:	xchg   BYTE PTR [edx],al
  428453:	add    dh,bl
  428455:	xchg   BYTE PTR [edx],al
  428457:	add    ah,ch
  428459:	xchg   BYTE PTR [edx],al
  42845b:	add    dh,bh
  42845d:	xchg   BYTE PTR [edx],al
  42845f:	add    BYTE PTR [eax],dl
  428461:	xchg   DWORD PTR [edx],eax
  428463:	add    BYTE PTR [esi],bl
  428465:	xchg   DWORD PTR [edx],eax
  428467:	add    BYTE PTR [eax],dh
  428469:	xchg   DWORD PTR [edx],eax
  42846b:	add    BYTE PTR [edx-0x79],al
  42846e:	add    al,BYTE PTR [eax]
  428470:	push   eax
  428471:	xchg   DWORD PTR [edx],eax
  428473:	add    BYTE PTR [esi-0x79],bl
  428476:	add    al,BYTE PTR [eax]
  428478:	jo     0x428401
  42847a:	add    al,BYTE PTR [eax]
  42847c:	jl     0x428405
  42847e:	add    al,BYTE PTR [eax]
  428480:	xchg   edx,eax
  428481:	xchg   DWORD PTR [edx],eax
  428483:	add    BYTE PTR [edi+eax*4-0x7849fffe],ah
  42848a:	add    al,BYTE PTR [eax]
  42848c:	ret    0x287
  42848f:	add    dl,dl
  428491:	xchg   DWORD PTR [edx],eax
  428493:	add    dl,ah
  428495:	xchg   DWORD PTR [edx],eax
  428497:	add    al,bh
  428499:	xchg   DWORD PTR [edx],eax
  42849b:	add    BYTE PTR [eax+ecx*4],al
  42849e:	add    al,BYTE PTR [eax]
  4284a0:	push   ss
  4284a1:	mov    BYTE PTR [edx],al
  4284a3:	add    BYTE PTR [eax+ecx*4],ch
  4284a6:	add    al,BYTE PTR [eax]
  4284a8:	mov    BYTE PTR ds:[edx],al
  4284ab:	add    BYTE PTR [eax+ecx*4+0x2],cl
  4284af:	add    BYTE PTR [eax+ecx*4+0x2],bl
  4284b3:	add    BYTE PTR [esi-0x78],ch
  4284b6:	add    al,BYTE PTR [eax]
  4284b8:	or     BYTE PTR [eax-0x7767fffe],0x2
  4284bf:	add    BYTE PTR [edx-0x43fffd78],ch
  4284c5:	mov    BYTE PTR [edx],al
  4284c7:	add    ah,cl
  4284c9:	mov    BYTE PTR [edx],al
  4284cb:	add    ah,bl
  4284cd:	mov    BYTE PTR [edx],al
  4284cf:	add    ah,ch
  4284d1:	mov    BYTE PTR [edx],al
  4284d3:	add    dh,bh
  4284d5:	mov    BYTE PTR [edx],al
  4284d7:	add    BYTE PTR [ecx+ecx*4],cl
  4284da:	add    al,BYTE PTR [eax]
  4284dc:	sbb    cl,BYTE PTR [ecx-0x76cdfffe]
  4284e2:	add    al,BYTE PTR [eax]
  4284e4:	inc    esp
  4284e5:	mov    DWORD PTR [edx],eax
  4284e7:	add    BYTE PTR [esi-0x77],dl
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	bound  ecx,QWORD PTR [ecx-0x7691fffe]
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	jp     0x42847f
  4284f6:	add    al,BYTE PTR [eax]
  4284f8:	mov    cl,BYTE PTR [ecx-0x765ffffe]
  4284fe:	add    al,BYTE PTR [eax]
  428500:	scas   al,BYTE PTR es:[edi]
  428501:	mov    DWORD PTR [edx],eax
  428503:	add    al,al
  428505:	mov    DWORD PTR [edx],eax
  428507:	add    dl,dl
  428509:	mov    DWORD PTR [edx],eax
  42850b:	add    BYTE PTR [eax],al
  42850d:	add    BYTE PTR [eax],al
  42850f:	add    ah,ch
  428511:	mov    DWORD PTR [edx],eax
  428513:	add    BYTE PTR [eax],al
  428515:	add    BYTE PTR [eax],al
  428517:	add    BYTE PTR [edx],cl
  428519:	mov    al,BYTE PTR [edx]
  42851b:	add    BYTE PTR [edx+ecx*4],bl
  42851e:	add    al,BYTE PTR [eax]
  428520:	mov    al,BYTE PTR cs:[edx]
  428523:	add    BYTE PTR [edx+ecx*4+0x2],al
  428527:	add    BYTE PTR [esi-0x76],dl
  42852a:	add    al,BYTE PTR [eax]
  42852c:	push   0x7800028a
  428531:	mov    al,BYTE PTR [edx]
  428533:	add    BYTE PTR [esi-0x59fffd76],dl
  428539:	mov    al,BYTE PTR [edx]
  42853b:	add    BYTE PTR [edx+ecx*4-0x753bfffe],dh
  428542:	add    al,BYTE PTR [eax]
  428544:	ror    BYTE PTR [edx-0x751dfffe],cl
  42854a:	add    al,BYTE PTR [eax]
  42854c:	out    dx,al
  42854d:	mov    al,BYTE PTR [edx]
  42854f:	add    BYTE PTR [eax],al
  428551:	mov    eax,DWORD PTR [edx]
  428553:	add    BYTE PTR [edx],dl
  428555:	mov    eax,DWORD PTR [edx]
  428557:	add    BYTE PTR [eax],ch
  428559:	mov    eax,DWORD PTR [edx]
  42855b:	add    BYTE PTR [esi],dh
  42855d:	mov    eax,DWORD PTR [edx]
  42855f:	add    BYTE PTR [edx-0x75],al
  428562:	add    al,BYTE PTR [eax]
  428564:	pop    esp
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  42856b:	add    BYTE PTR [ebx+ecx*4-0x7465fffe],cl
  428572:	add    al,BYTE PTR [eax]
  428574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428575:	mov    eax,DWORD PTR [edx]
  428577:	add    BYTE PTR [eax+0x28b],bh
  42857d:	add    BYTE PTR [eax],al
  42857f:	add    al,bl
  428581:	mov    eax,DWORD PTR [edx]
  428583:	add    dl,ah
  428585:	mov    eax,DWORD PTR [edx]
  428587:	add    al,dh
  428589:	mov    eax,DWORD PTR [edx]
  42858b:	add    ah,bh
  42858d:	mov    eax,DWORD PTR [edx]
  42858f:	add    BYTE PTR [esp+ecx*4],cl
  428592:	add    al,BYTE PTR [eax]
  428594:	sbb    cl,BYTE PTR [edx+eax*1+0x28c2600]
  42859b:	add    BYTE PTR [eax],dh
  42859d:	mov    WORD PTR [edx],es
  42859f:	add    BYTE PTR [edx-0x74],al
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	pop    eax
  4285a5:	mov    WORD PTR [edx],es
  4285a7:	add    BYTE PTR [esi-0x74],ch
  4285aa:	add    al,BYTE PTR [eax]
  4285ac:	test   BYTE PTR [edx+eax*1+0x28c9400],cl
  4285b3:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  4285ba:	add    al,BYTE PTR [eax]
  4285bc:	ret    0x28c
  4285bf:	add    dl,bl
  4285c1:	mov    WORD PTR [edx],es
  4285c3:	add    ah,ah
  4285c5:	mov    WORD PTR [edx],es
  4285c7:	add    al,dh
  4285c9:	mov    WORD PTR [edx],es
  4285cb:	add    dh,bh
  4285cd:	mov    WORD PTR [edx],es
	...
  4285df:	add    BYTE PTR [ebx+0x6d],ah
  4285e2:	fs cs gs js 0x42864c
  4285e7:	add    BYTE PTR [edi],dl
  4285e9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285ed:	je     0x428661
  4285ef:	outs   dx,DWORD PTR ds:[esi]
  4285f0:	jns    0x428642
  4285f2:	jb     0x428663
  4285f4:	jo     0x42865b
  4285f6:	jb     0x42866c
  4285f8:	jns    0x42864d
  4285fa:	push   0x50746565
  4285ff:	popa   
  428600:	add    BYTE PTR gs:[bx+si],al
  428604:	pop    esp
  428605:	add    BYTE PTR [eax+0x72],dl
  428608:	outs   dx,DWORD PTR ds:[esi]
  428609:	jo     0x428670
  42860b:	jb     0x428681
  42860d:	jns    0x428662
  42860f:	push   0x57746565
  428614:	add    BYTE PTR [eax],al
  428616:	pop    ebx
  428617:	add    BYTE PTR [eax+0x72],dl
  42861a:	outs   dx,DWORD PTR ds:[esi]
  42861b:	jo     0x428682
  42861d:	jb     0x428693
  42861f:	jns    0x428674
  428621:	push   0x41746565
  428626:	add    BYTE PTR [eax],al
  428628:	dec    esi
  428629:	add    BYTE PTR [ecx+0x6d],cl
  42862c:	popa   
  42862d:	addr16 gs dec esp
  428630:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428637:	ins    BYTE PTR es:[edi],dx
  428638:	popa   
  428639:	arpl   WORD PTR [ebp+0x49],sp
  42863c:	arpl   WORD PTR [edi+0x6e],bp
  42863f:	add    BYTE PTR [ecx],dh
  428641:	add    BYTE PTR [ecx+0x6d],cl
  428644:	popa   
  428645:	addr16 gs dec esp
  428648:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42864f:	je     0x4286c3
  428651:	outs   dx,DWORD PTR ds:[esi]
  428652:	jns    0x428654
  428654:	inc    eax
  428655:	add    BYTE PTR [ecx+0x6d],cl
  428658:	popa   
  428659:	addr16 gs dec esp
  42865c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428663:	dec    ecx
  428664:	ins    DWORD PTR es:[edi],dx
  428665:	popa   
  428666:	addr16 gs inc ebx
  428669:	outs   dx,DWORD PTR ds:[esi]
  42866a:	jne    0x4286da
  42866c:	je     0x42866e
  42866e:	dec    esp
  42866f:	add    BYTE PTR [ecx+0x6d],cl
  428672:	popa   
  428673:	addr16 gs dec esp
  428676:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42867d:	outs   dx,DWORD PTR ds:[esi]
  42867e:	jbe    0x4286e5
  428680:	add    BYTE PTR [eax],al
  428682:	inc    ebx
  428683:	dec    edi
  428684:	dec    ebp
  428685:	inc    ebx
  428686:	push   esp
  428687:	dec    esp
  428688:	xor    esi,DWORD PTR [edx]
  42868a:	cs fs ins BYTE PTR es:[edi],dx
  42868d:	ins    BYTE PTR es:[edi],dx
  42868e:	add    BYTE PTR [eax],al
  428690:	push   edi
  428691:	add    BYTE PTR [ebx+0x72],al
  428694:	gs popa 
  428696:	je     0x4286fd
  428698:	inc    esp
  428699:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286a0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286a8:	jb     0x42870b
  4286aa:	ins    DWORD PTR es:[edi],dx
  4286ab:	push   edi
  4286ac:	add    BYTE PTR [eax],al
  4286ae:	xor    al,BYTE PTR [edx]
  4286b0:	push   ebx
  4286b1:	gs je  0x4286f7
  4286b4:	popa   
  4286b5:	jb     0x42871c
  4286b7:	je     0x428709
  4286b9:	outs   dx,DWORD PTR ds:[esi]
  4286ba:	jae    0x4286bc
  4286bc:	cmp    al,BYTE PTR [ecx]
  4286be:	inc    edi
  4286bf:	gs je  0x42870f
  4286c2:	gs jae 0x428738
  4286c5:	popa   
  4286c6:	addr16 gs inc ecx
  4286c9:	add    BYTE PTR [edx+0x61724400],dh
  4286cf:	ja     0x428717
  4286d1:	jb     0x428734
  4286d3:	ins    DWORD PTR es:[edi],dx
  4286d4:	gs inc ebx
  4286d6:	outs   dx,DWORD PTR ds:[esi]
  4286d7:	outs   dx,BYTE PTR ds:[esi]
  4286d8:	je     0x42874c
  4286da:	outs   dx,DWORD PTR ds:[esi]
  4286db:	ins    BYTE PTR es:[edi],dx
  4286dc:	add    BYTE PTR [eax],al
  4286de:	sbb    BYTE PTR [ecx],al
  4286e0:	inc    edi
  4286e1:	gs je  0x42872d
  4286e4:	arpl   WORD PTR [edi+0x6e],bp
  4286e7:	dec    ecx
  4286e8:	outs   dx,BYTE PTR ds:[esi]
  4286e9:	outs   dx,WORD PTR ds:[esi]
  4286eb:	add    bl,bh
  4286ed:	add    dl,BYTE PTR [edx+esi*2+0x61]
  4286f1:	arpl   WORD PTR [ebx+0x50],bp
  4286f4:	outs   dx,DWORD PTR ds:[esi]
  4286f5:	jo     0x42876c
  4286f7:	jo     0x428746
  4286f9:	outs   dx,BYTE PTR gs:[esi]
  4286fb:	jne    0x4286fd
  4286fd:	add    cl,bl
  4286ff:	add    DWORD PTR [ebp+0x6f],ecx
  428702:	outs   dx,BYTE PTR ds:[esi]
  428703:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42870b:	push   edx
  42870c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428711:	add    BYTE PTR [ebx+0x68],al
  428714:	popa   
  428715:	jb     0x42876c
  428717:	jo     0x428789
  428719:	gs jb  0x428773
  42871c:	add    BYTE PTR [eax],al
  42871e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428722:	je     0x428768
  428724:	ins    BYTE PTR es:[edi],dx
  428725:	addr16 dec ecx
  428727:	je     0x42878e
  428729:	ins    DWORD PTR es:[edi],dx
  42872a:	push   esp
  42872b:	gs js  0x4287a2
  42872e:	inc    ecx
  42872f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428733:	push   0x774f776f
  428738:	outs   dx,BYTE PTR ds:[esi]
  428739:	gs fs push eax
  42873c:	outs   dx,DWORD PTR ds:[esi]
  42873d:	jo     0x4287b4
  42873f:	jo     0x4287b4
  428741:	add    BYTE PTR [eax],bl
  428743:	add    dl,BYTE PTR [edx+0x65]
  428746:	ins    DWORD PTR es:[edi],dx
  428747:	outs   dx,DWORD PTR ds:[esi]
  428748:	jbe    0x4287af
  42874a:	push   eax
  42874b:	jb     0x4287bc
  42874d:	jo     0x4287a6
  42874f:	add    BYTE PTR [edi+0x2],bh
  428752:	push   ebx
  428753:	push   0x6957776f
  428758:	outs   dx,BYTE PTR ds:[esi]
  428759:	outs   dx,DWORD PTR fs:[esi]
  42875b:	ja     0x42875d
  42875d:	add    BYTE PTR [ebx],bl
  42875f:	add    BYTE PTR [ebx+0x61],al
  428762:	ins    BYTE PTR es:[edi],dx
  428763:	ins    BYTE PTR es:[edi],dx
  428764:	push   edi
  428765:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42876c:	outs   dx,DWORD PTR ds:[esi]
  42876d:	arpl   WORD PTR [edi+0x0],dx
  428770:	mov    dh,0x1
  428772:	dec    esp
  428773:	outs   dx,DWORD PTR ds:[esi]
  428774:	popa   
  428775:	fs dec ebp
  428777:	outs   dx,BYTE PTR gs:[esi]
  428779:	jne    0x4287bc
  42877b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428782:	arpl   WORD PTR [eax+0x54],bp
  428785:	outs   dx,DWORD PTR ds:[esi]
  428786:	push   esp
  428787:	push   0x69577369
  42878c:	outs   dx,BYTE PTR ds:[esi]
  42878d:	outs   dx,DWORD PTR fs:[esi]
  42878f:	ja     0x428791
  428791:	add    BYTE PTR [eax],ah
  428793:	add    dl,BYTE PTR [ebx+0x63]
  428796:	jb     0x428807
  428798:	ins    BYTE PTR es:[edi],dx
  428799:	ins    BYTE PTR es:[edi],dx
  42879a:	push   edi
  42879b:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287a2:	add    BYTE PTR [eax],al
  4287a4:	pop    DWORD PTR [eax]
  4287a6:	inc    esp
  4287a7:	gs push di
  4287aa:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287b1:	outs   dx,DWORD PTR ds:[esi]
  4287b2:	arpl   WORD PTR [edi+0x0],dx
  4287b5:	add    BYTE PTR [ecx],dh
  4287b7:	add    BYTE PTR [ebx+0x68],al
  4287ba:	popa   
  4287bb:	jb     0x42880d
  4287bd:	jb     0x428824
  4287bf:	jbe    0x428818
  4287c1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287c8:	fs popa 
  4287ca:	je     0x428831
  4287cc:	push   edx
  4287cd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287d2:	xor    eax,DWORD PTR [ecx]
  4287d4:	inc    edi
  4287d5:	gs je  0x428825
  4287d8:	outs   dx,BYTE PTR gs:[esi]
  4287da:	jne    0x428825
  4287dc:	je     0x428843
  4287de:	ins    DWORD PTR es:[edi],dx
  4287df:	dec    ecx
  4287e0:	inc    esp
  4287e1:	add    BYTE PTR ds:0x6e655302,ch
  4287e7:	fs dec esi
  4287e9:	outs   dx,DWORD PTR ds:[esi]
  4287ea:	je     0x428855
  4287ec:	data16 jns 0x42883c
  4287ef:	gs jae 0x428865
  4287f2:	popa   
  4287f3:	addr16 gs push edi
  4287f6:	add    BYTE PTR [eax],al
  4287f8:	mov    al,0x1
  4287fa:	dec    esp
  4287fb:	outs   dx,DWORD PTR ds:[esi]
  4287fc:	popa   
  4287fd:	fs dec ecx
  4287ff:	arpl   WORD PTR [edi+0x6e],bp
  428802:	push   edi
  428803:	add    BYTE PTR [ecx+0x57734901],ah
  428809:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428810:	popa   
  428811:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428815:	add    BYTE PTR ds:0x74654701,dl
  42881b:	inc    esi
  42881c:	outs   dx,DWORD PTR ds:[esi]
  42881d:	jb     0x428884
  42881f:	addr16 jb 0x428891
  428822:	jne    0x428892
  428824:	fs push edi
  428826:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42882d:	add    DWORD PTR [edi+0x65],eax
  428830:	je     0x428889
  428832:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428839:	js     0x4288af
  42883b:	inc    ecx
  42883c:	add    BYTE PTR [eax],al
  42883e:	add    DWORD PTR ds:[edi+0x65],eax
  428842:	je     0x428891
  428844:	gs jae 0x4288ba
  428847:	popa   
  428848:	addr16 gs push edi
  42884b:	add    BYTE PTR [ebx],ch
  42884d:	add    dl,BYTE PTR [ebx+0x65]
  428850:	outs   dx,BYTE PTR ds:[esi]
  428851:	fs dec ebp
  428853:	gs jae 0x4288c9
  428856:	popa   
  428857:	addr16 gs push edi
  42885a:	add    BYTE PTR [eax],al
  42885c:	das    
  42885d:	add    dl,BYTE PTR [ebx+0x65]
  428860:	je     0x4288a3
  428862:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428866:	gs push edi
  428868:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42886f:	add    dl,BYTE PTR [edx+0x65]
  428872:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42887a:	popa   
  42887b:	jae    0x4288f0
  42887d:	inc    ebp
  42887e:	js     0x4288d7
  428880:	add    BYTE PTR [eax],al
  428882:	and    DWORD PTR [edx],eax
  428884:	push   ebx
  428885:	outs   dx,BYTE PTR gs:[esi]
  428887:	fs inc esp
  428889:	ins    BYTE PTR es:[edi],dx
  42888a:	addr16 dec ecx
  42888c:	je     0x4288f3
  42888e:	ins    DWORD PTR es:[edi],dx
  42888f:	dec    ebp
  428890:	gs jae 0x428906
  428893:	popa   
  428894:	addr16 gs inc ecx
  428897:	add    BYTE PTR ds:0x74654701,bh
  42889d:	dec    ebp
  42889e:	gs jae 0x428914
  4288a1:	popa   
  4288a2:	addr16 gs push esp
  4288a5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288ac:	inc    ebx
  4288ad:	popa   
  4288ae:	jae    0x428913
  4288b0:	popa   
  4288b1:	fs gs push edi
  4288b4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288bb:	add    bh,bl
  4288bd:	add    BYTE PTR [ebp+0x78],al
  4288c0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288c8:	jae    0x42890f
  4288ca:	js     0x4288cc
  4288cc:	repnz add DWORD PTR [eax+0x6f],edx
  4288d0:	jae    0x428946
  4288d2:	dec    ebp
  4288d3:	gs jae 0x428949
  4288d6:	popa   
  4288d7:	addr16 gs push edi
  4288da:	add    BYTE PTR [eax],al
  4288dc:	add    DWORD PTR fs:[edi+0x65],eax
  4288e0:	je     0x428937
  4288e2:	jo     0x428948
  4288e4:	popa   
  4288e5:	je     0x42894c
  4288e7:	push   edx
  4288e8:	outs   dx,BYTE PTR ds:[si]
  4288ea:	add    BYTE PTR [eax],al
  4288ec:	mov    BYTE PTR [edx],al
  4288ee:	push   esp
  4288ef:	popa   
  4288f0:	bound  esp,QWORD PTR [edx+0x65]
  4288f3:	fs push esp
  4288f5:	gs js  0x42896c
  4288f8:	dec    edi
  4288f9:	jne    0x42896f
  4288fb:	push   edi
  4288fc:	add    BYTE PTR [eax],al
  4288fe:	test   eax,0x616f4c01
  428903:	fs inc edx
  428905:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42890d:	add    BYTE PTR [edx+esi*2+0x61],al
  428911:	ja     0x428966
  428913:	je     0x428976
  428915:	je     0x42897c
  428917:	push   edi
  428918:	add    BYTE PTR [eax],al
  42891a:	ja     0x42891d
  42891c:	inc    edi
  42891d:	gs je  0x428977
  428920:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428927:	js     0x42899d
  428929:	dec    esp
  42892a:	outs   dx,BYTE PTR gs:[esi]
  42892c:	addr16 je 0x428997
  42892f:	push   edi
  428930:	add    BYTE PTR [eax],al
  428932:	cmp    BYTE PTR [eax],al
  428934:	inc    ebx
  428935:	push   0x70557261
  42893a:	jo     0x4289a1
  42893c:	jb     0x428980
  42893e:	jne    0x4289a6
  428940:	push   di
  428942:	add    BYTE PTR [eax],al
  428944:	daa    
  428945:	add    DWORD PTR [edi+0x65],eax
  428948:	je     0x428995
  42894a:	gs jns 0x4289af
  42894d:	outs   dx,DWORD PTR ds:[esi]
  42894e:	popa   
  42894f:	jb     0x4289b5
  428951:	push   esp
  428952:	jns    0x4289c4
  428954:	add    BYTE PTR gs:[ebx+0x1],cl
  428958:	inc    edi
  428959:	gs je  0x4289ac
  42895c:	jb     0x4289cd
  42895e:	jo     0x4289b7
  428960:	add    BYTE PTR [eax],al
  428962:	dec    ebp
  428963:	add    BYTE PTR [ebx+0x6f],al
  428966:	jo     0x4289e1
  428968:	push   edx
  428969:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42896e:	sub    eax,0x61684300
  428973:	jb     0x4289c3
  428975:	gs js  0x4289ec
  428978:	push   edi
  428979:	add    BYTE PTR [eax+0x43734901],dl
  42897f:	push   0x6f4c7261
  428984:	ja     0x4289eb
  428986:	jb     0x4289c9
  428988:	add    BYTE PTR [eax],al
  42898a:	sub    BYTE PTR [ecx],al
  42898c:	inc    edi
  42898d:	gs je  0x4289dc
  428990:	popa   
  428991:	jae    0x428a07
  428993:	inc    ecx
  428994:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428998:	gs push eax
  42899a:	outs   dx,DWORD PTR ds:[esi]
  42899b:	jo     0x428a12
  42899d:	jo     0x42899f
  42899f:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289a5:	fs push ebx
  4289a7:	je     0x428a1b
  4289a9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289b0:	inc    edi
  4289b1:	gs je  0x428a0b
  4289b4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289bb:	outs   dx,BYTE PTR ds:[esi]
  4289bc:	addr16 push edi
  4289be:	add    BYTE PTR [eax],al
  4289c0:	leave  
  4289c1:	add    DWORD PTR [ebp+0x61],ecx
  4289c4:	jo     0x428a1d
  4289c6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289cd:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289d4:	inc    ebx
  4289d5:	push   0x6f547261
  4289da:	dec    edi
  4289db:	gs ins DWORD PTR es:[edi],dx
  4289dd:	push   edi
  4289de:	add    BYTE PTR [eax],al
  4289e0:	push   ebp
  4289e1:	push   ebx
  4289e2:	inc    ebp
  4289e3:	push   edx
  4289e4:	xor    esi,DWORD PTR [edx]
  4289e6:	cs fs ins BYTE PTR es:[edi],dx
  4289e9:	ins    BYTE PTR es:[edi],dx
  4289ea:	add    BYTE PTR [eax],al
  4289ec:	xchg   edx,eax
  4289ed:	add    edx,DWORD PTR [edx+0x74]
  4289f0:	ins    BYTE PTR es:[edi],dx
  4289f1:	dec    ecx
  4289f2:	outs   dx,BYTE PTR ds:[esi]
  4289f3:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  4289fb:	jb     0x428a66
  4289fd:	outs   dx,BYTE PTR ds:[esi]
  4289fe:	add    BYTE PTR [bp+0x74],ch
  428a02:	fs ins BYTE PTR es:[edi],dx
  428a04:	ins    BYTE PTR es:[edi],dx
  428a05:	cs fs ins BYTE PTR es:[edi],dx
  428a08:	ins    BYTE PTR es:[edi],dx
  428a09:	add    BYTE PTR ds:0x74654702,al
  428a0f:	dec    esp
  428a10:	outs   dx,DWORD PTR ds:[esi]
  428a11:	arpl   WORD PTR [ecx+0x6c],sp
  428a14:	gs dec ecx
  428a16:	outs   dx,BYTE PTR ds:[esi]
  428a17:	outs   dx,WORD PTR ds:[esi]
  428a19:	push   edi
  428a1a:	add    BYTE PTR [eax],al
  428a1c:	inc    ebp
  428a1d:	add    al,BYTE PTR [edi+0x65]
  428a20:	je     0x428a72
  428a22:	jb     0x428a93
  428a24:	arpl   WORD PTR [ecx+0x64],ax
  428a27:	fs jb  0x428a8f
  428a2a:	jae    0x428a9f
  428a2c:	add    BYTE PTR [eax],al
  428a2e:	rol    DWORD PTR [eax],cl
  428a30:	inc    ebx
  428a31:	jb     0x428a98
  428a33:	popa   
  428a34:	je     0x428a9b
  428a36:	inc    esi
  428a37:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a3f:	outs   dx,BYTE PTR ds:[esi]
  428a40:	addr16 push edi
  428a42:	add    BYTE PTR [eax],al
  428a44:	sub    BYTE PTR [ebx+edx*2],al
  428a47:	gs je  0x428a92
  428a4a:	popa   
  428a4b:	outs   dx,BYTE PTR ds:[esi]
  428a4c:	fs ins BYTE PTR es:[edi],dx
  428a4e:	gs inc ebx
  428a50:	outs   dx,DWORD PTR ds:[esi]
  428a51:	jne    0x428ac1
  428a53:	je     0x428a55
  428a55:	add    ah,bl
  428a57:	add    BYTE PTR [ebx+0x72],al
  428a5a:	gs popa 
  428a5c:	je     0x428ac3
  428a5e:	dec    ebp
  428a5f:	popa   
  428a60:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a68:	pop    DWORD PTR [ecx]
  428a6a:	inc    edi
  428a6b:	gs je  0x428aaf
  428a6e:	je     0x428adf
  428a70:	ins    DWORD PTR es:[edi],dx
  428a71:	dec    esi
  428a72:	popa   
  428a73:	ins    DWORD PTR es:[edi],dx
  428a74:	gs inc ecx
  428a76:	add    BYTE PTR [eax],al
  428a78:	pusha  
  428a79:	add    al,BYTE PTR [edi+0x65]
  428a7c:	je     0x428ad1
  428a7e:	jns    0x428af3
  428a80:	je     0x428ae7
  428a82:	ins    DWORD PTR es:[edi],dx
  428a83:	push   edi
  428a84:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a8b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428a92:	jns    0x428ad5
  428a94:	add    BYTE PTR [eax],al
  428a96:	aas    
  428a97:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428a9b:	fs dec esp
  428a9d:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428aa4:	add    BYTE PTR [eax],al
  428aa6:	xchg   ecx,eax
  428aa7:	add    al,BYTE PTR [edi+0x6c]
  428aaa:	outs   dx,DWORD PTR ds:[esi]
  428aab:	bound  esp,QWORD PTR [ecx+0x6c]
  428aae:	inc    ecx
  428aaf:	ins    BYTE PTR es:[edi],dx
  428ab0:	ins    BYTE PTR es:[edi],dx
  428ab1:	outs   dx,DWORD PTR ds:[esi]
  428ab2:	arpl   WORD PTR [eax],ax
  428ab4:	xchg   edx,eax
  428ab5:	add    al,0x56
  428ab7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428abe:	jne    0x428b25
  428ac0:	jb     0x428b3b
  428ac2:	add    BYTE PTR [eax],al
  428ac4:	test   DWORD PTR [ecx],0x46746547
  428aca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ad2:	jb     0x428ad5
  428ad4:	inc    esi
  428ad5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428adc:	jne    0x428b50
  428ade:	arpl   WORD PTR [ebp+0x57],sp
  428ae1:	add    BYTE PTR [eax],bh
  428ae3:	add    ecx,DWORD PTR [ebp+0x6f]
  428ae6:	jbe    0x428b4d
  428ae8:	inc    esi
  428ae9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428af1:	popa   
  428af2:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428af9:	jo     0x428b6f
  428afb:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b02:	inc    edi
  428b03:	gs je  0x428b48
  428b06:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b0d:	jo     0x428b74
  428b0f:	inc    ecx
  428b10:	add    BYTE PTR [eax],al
  428b12:	and    DWORD PTR [ebx+edx*2],eax
  428b15:	gs je  0x428b5e
  428b18:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b20:	bound  esi,QWORD PTR [ebp+0x74]
  428b23:	gs jae 0x428b67
  428b26:	add    BYTE PTR [eax],al
  428b28:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b2c:	jbe    0x428b93
  428b2e:	inc    esi
  428b2f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b37:	add    BYTE PTR [ebx+0x6f],al
  428b3a:	jo     0x428bb5
  428b3c:	inc    esi
  428b3d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b45:	jne    0x428bac
  428b47:	jb     0x428bc2
  428b49:	push   eax
  428b4a:	gs jb  0x428bb3
  428b4d:	outs   dx,DWORD PTR ds:[esi]
  428b4e:	jb     0x428bbd
  428b50:	popa   
  428b51:	outs   dx,BYTE PTR ds:[esi]
  428b52:	arpl   WORD PTR [ebp+0x43],sp
  428b55:	outs   dx,DWORD PTR ds:[esi]
  428b56:	jne    0x428bc6
  428b58:	je     0x428bbf
  428b5a:	jb     0x428b5c
  428b5c:	sub    DWORD PTR [ebx+edx*2],eax
  428b5f:	gs je  0x428baa
  428b62:	popa   
  428b63:	outs   dx,BYTE PTR ds:[esi]
  428b64:	fs ins BYTE PTR es:[edi],dx
  428b66:	gs dec ecx
  428b68:	outs   dx,BYTE PTR ds:[esi]
  428b69:	outs   dx,WORD PTR ds:[esi]
  428b6b:	jb     0x428bda
  428b6d:	popa   
  428b6e:	je     0x428bd9
  428b70:	outs   dx,DWORD PTR ds:[esi]
  428b71:	outs   dx,BYTE PTR ds:[esi]
  428b72:	add    BYTE PTR [eax],al
  428b74:	push   ss
  428b75:	add    DWORD PTR [ebp+0x6e],eax
  428b78:	je     0x428bdf
  428b7a:	jb     0x428bbf
  428b7c:	jb     0x428be7
  428b7e:	je     0x428be9
  428b80:	arpl   WORD PTR [ecx+0x6c],sp
  428b83:	push   ebx
  428b84:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b89:	outs   dx,BYTE PTR ds:[esi]
  428b8a:	add    BYTE PTR [eax],al
  428b8c:	jg     0x428b8f
  428b8e:	inc    esi
  428b8f:	outs   dx,DWORD PTR ds:[esi]
  428b90:	ins    BYTE PTR es:[edi],dx
  428b91:	fs push ebx
  428b93:	je     0x428c07
  428b95:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428b9c:	ins    BYTE PTR es:[edi],dx
  428b9d:	jae    0x428c13
  428b9f:	jb     0x428c0d
  428ba1:	outs   dx,BYTE PTR gs:[esi]
  428ba3:	inc    ecx
  428ba4:	add    BYTE PTR [eax],al
  428ba6:	sahf   
  428ba7:	add    DWORD PTR [edi+0x65],eax
  428baa:	je     0x428bef
  428bac:	outs   dx,DWORD PTR ds:[esi]
  428bad:	ins    DWORD PTR es:[edi],dx
  428bae:	ins    DWORD PTR es:[edi],dx
  428baf:	push   esp
  428bb0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428bb7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bbb:	gs je  0x428c12
  428bbe:	push   0x64616572
  428bc3:	push   esp
  428bc4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bcb:	inc    ebp
  428bcc:	push   edx
  428bcd:	dec    esi
  428bce:	inc    ebp
  428bcf:	dec    esp
  428bd0:	xor    esi,DWORD PTR [edx]
  428bd2:	cs fs ins BYTE PTR es:[edi],dx
  428bd5:	ins    BYTE PTR es:[edi],dx
  428bd6:	add    BYTE PTR [eax],al
  428bd8:	mov    dh,0x1
  428bda:	push   eax
  428bdb:	outs   dx,DWORD PTR ds:[esi]
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	jns    0x428c46
  428bdf:	outs   dx,DWORD PTR ds:[esi]
  428be0:	outs   dx,BYTE PTR ds:[esi]
  428be1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428be5:	gs je  0x428c37
  428be8:	bound  ebp,QWORD PTR [edx+0x65]
  428beb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bef:	add    BYTE PTR [ebx+0x6c654400],dh
  428bf5:	gs je  0x428c5d
  428bf8:	inc    esp
  428bf9:	inc    ebx
  428bfa:	add    BYTE PTR [eax],al
  428bfc:	rol    DWORD PTR [ecx],1
  428bfe:	push   ebx
  428bff:	gs ins BYTE PTR es:[edi],dx
  428c01:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c06:	push   0x65
  428c08:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c0c:	jmp    0x428c0f
  428c0e:	push   ebx
  428c0f:	gs je  0x428c5f
  428c12:	popa   
  428c13:	jo     0x428c62
  428c15:	outs   dx,DWORD PTR ds:[esi]
  428c16:	fs add BYTE PTR gs:[eax],al
  428c1a:	leave  
  428c1b:	add    DWORD PTR [edx+0x6f],edx
  428c1e:	jne    0x428c8e
  428c20:	fs push edx
  428c22:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c27:	add    BYTE PTR [edx+0x69],al
  428c2a:	je     0x428c6e
  428c2c:	ins    BYTE PTR es:[edi],dx
  428c2d:	je     0x428c2f
  428c2f:	add    BYTE PTR [ebx+0x61655201],bh
  428c35:	ins    BYTE PTR es:[edi],dx
  428c36:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c3d:	je     0x428cb3
  428c3f:	add    BYTE PTR gs:[eax],al
  428c42:	jge    0x428c45
  428c44:	inc    edi
  428c45:	gs je  0x428c9b
  428c48:	jns    0x428cbd
  428c4a:	je     0x428cb1
  428c4c:	ins    DWORD PTR es:[edi],dx
  428c4d:	push   eax
  428c4e:	popa   
  428c4f:	ins    BYTE PTR es:[edi],dx
  428c50:	gs je  0x428cc7
  428c53:	gs push ebp
  428c55:	jae    0x428cbc
  428c57:	add    BYTE PTR [eax+0x74654701],cl
  428c5d:	push   esp
  428c5e:	gs js  0x428cd5
  428c61:	inc    ebp
  428c62:	js     0x428cd8
  428c64:	outs   dx,BYTE PTR gs:[esi]
  428c66:	je     0x428cb8
  428c68:	outs   dx,DWORD PTR ds:[esi]
  428c69:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c70:	push   ebx
  428c71:	arpl   WORD PTR [ecx+0x6c],sp
  428c74:	gs push esi
  428c76:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c7d:	inc    ebp
  428c7e:	js     0x428cf4
  428c80:	inc    ebp
  428c81:	js     0x428c83
  428c83:	add    bh,cl
  428c85:	add    DWORD PTR [ebx+0x65],edx
  428c88:	ins    BYTE PTR es:[edi],dx
  428c89:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c8e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428c95:	add    DWORD PTR [ebx+0x65],edx
  428c98:	je     0x428cee
  428c9a:	gs js  0x428d11
  428c9d:	inc    ebx
  428c9e:	outs   dx,DWORD PTR ds:[esi]
  428c9f:	ins    BYTE PTR es:[edi],dx
  428ca0:	outs   dx,DWORD PTR ds:[esi]
  428ca1:	jb     0x428ca3
  428ca3:	add    BYTE PTR [eax+0x74615001],ch
  428ca9:	push   0x65526f54
  428cae:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428cb6:	inc    ebx
  428cb7:	outs   dx,DWORD PTR ds:[esi]
  428cb8:	ins    DWORD PTR es:[edi],dx
  428cb9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428cbc:	gs push edx
  428cbe:	outs   dx,BYTE PTR ds:[si]
  428cc0:	add    BYTE PTR [eax],al
  428cc2:	lods   al,BYTE PTR ds:[esi]
  428cc3:	add    BYTE PTR [ebx+0x72],al
  428cc6:	gs popa 
  428cc8:	je     0x428d2f
  428cca:	push   edx
  428ccb:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428cd0:	outs   dx,BYTE PTR ds:[esi]
  428cd1:	dec    ecx
  428cd2:	outs   dx,BYTE PTR ds:[esi]
  428cd3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428cdb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428cdf:	gs push esp
  428ce1:	outs   dx,DWORD PTR ds:[esi]
  428ce2:	add    BYTE PTR [eax],al
  428ce4:	mov    ds:0x65724300,al
  428ce9:	popa   
  428cea:	je     0x428d51
  428cec:	dec    ecx
  428ced:	inc    ebx
  428cee:	push   edi
  428cef:	add    BYTE PTR [ebp+0x63655201],bh
  428cf5:	je     0x428d4d
  428cf7:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cff:	add    BYTE PTR [ebx+0x72],al
  428d02:	gs popa 
  428d04:	je     0x428d6b
  428d06:	push   eax
  428d07:	popa   
  428d08:	ins    BYTE PTR es:[edi],dx
  428d09:	gs je  0x428d80
  428d0c:	add    BYTE PTR gs:[edi+0x44],al
  428d10:	dec    ecx
  428d11:	xor    esi,DWORD PTR [edx]
  428d13:	cs fs ins BYTE PTR es:[edi],dx
  428d16:	ins    BYTE PTR es:[edi],dx
	...
  428d1f:	add    BYTE PTR [ebp+0x20],ah
  428d22:	add    al,BYTE PTR [eax]
	...
  428d40:	pop    ebx
  428d41:	lea    eax,[edx]
	...
  428d4f:	add    BYTE PTR [ecx+0x64],ch
  428d52:	js     0x428dbd
  428d54:	outs   dx,DWORD PTR fs:[esi]
  428d56:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d5a:	add    BYTE PTR [ebx+0x65],dl
  428d5d:	je     0x428da0
  428d5f:	outs   dx,BYTE PTR ds:[esi]
  428d60:	arpl   WORD PTR [eax+0x6f],bp
  428d63:	jb     0x428db4
  428d65:	jb     0x428dd0
  428d67:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d6f:	add    BYTE PTR [eax],al
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    al,ch
  428d75:	test   DWORD PTR [edx],eax
  428d77:	add    BYTE PTR [esi+eax*4],al
  428d7a:	add    al,BYTE PTR [eax]
  428d7c:	push   ss
  428d7d:	xchg   BYTE PTR [edx],al
  428d7f:	add    BYTE PTR [eax],ch
  428d81:	xchg   BYTE PTR [edx],al
  428d83:	add    BYTE PTR [eax-0x7a],al
  428d86:	add    al,BYTE PTR [eax]
  428d88:	push   esp
  428d89:	xchg   BYTE PTR [edx],al
  428d8b:	add    BYTE PTR [esi-0x7a],ch
  428d8e:	add    al,BYTE PTR [eax]
  428d90:	add    BYTE PTR [eax],al
  428d92:	add    BYTE PTR [eax],al
  428d94:	nop
  428d95:	xchg   BYTE PTR [edx],al
  428d97:	add    BYTE PTR [esi-0x43fffd7a],ch
  428d9d:	xchg   BYTE PTR [edx],al
  428d9f:	add    dl,cl
  428da1:	xchg   BYTE PTR [edx],al
  428da3:	add    dh,bl
  428da5:	xchg   BYTE PTR [edx],al
  428da7:	add    ah,ch
  428da9:	xchg   BYTE PTR [edx],al
  428dab:	add    dh,bh
  428dad:	xchg   BYTE PTR [edx],al
  428daf:	add    BYTE PTR [eax],dl
  428db1:	xchg   DWORD PTR [edx],eax
  428db3:	add    BYTE PTR [esi],bl
  428db5:	xchg   DWORD PTR [edx],eax
  428db7:	add    BYTE PTR [eax],dh
  428db9:	xchg   DWORD PTR [edx],eax
  428dbb:	add    BYTE PTR [edx-0x79],al
  428dbe:	add    al,BYTE PTR [eax]
  428dc0:	push   eax
  428dc1:	xchg   DWORD PTR [edx],eax
  428dc3:	add    BYTE PTR [esi-0x79],bl
  428dc6:	add    al,BYTE PTR [eax]
  428dc8:	jo     0x428d51
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	jl     0x428d55
  428dce:	add    al,BYTE PTR [eax]
  428dd0:	xchg   edx,eax
  428dd1:	xchg   DWORD PTR [edx],eax
  428dd3:	add    BYTE PTR [edi+eax*4-0x7849fffe],ah
  428dda:	add    al,BYTE PTR [eax]
  428ddc:	ret    0x287
  428ddf:	add    dl,dl
  428de1:	xchg   DWORD PTR [edx],eax
  428de3:	add    dl,ah
  428de5:	xchg   DWORD PTR [edx],eax
  428de7:	add    al,bh
  428de9:	xchg   DWORD PTR [edx],eax
  428deb:	add    BYTE PTR [eax+ecx*4],al
  428dee:	add    al,BYTE PTR [eax]
  428df0:	push   ss
  428df1:	mov    BYTE PTR [edx],al
  428df3:	add    BYTE PTR [eax+ecx*4],ch
  428df6:	add    al,BYTE PTR [eax]
  428df8:	mov    BYTE PTR ds:[edx],al
  428dfb:	add    BYTE PTR [eax+ecx*4+0x2],cl
  428dff:	add    BYTE PTR [eax+ecx*4+0x2],bl
  428e03:	add    BYTE PTR [esi-0x78],ch
  428e06:	add    al,BYTE PTR [eax]
  428e08:	or     BYTE PTR [eax-0x7767fffe],0x2
  428e0f:	add    BYTE PTR [edx-0x43fffd78],ch
  428e15:	mov    BYTE PTR [edx],al
  428e17:	add    ah,cl
  428e19:	mov    BYTE PTR [edx],al
  428e1b:	add    ah,bl
  428e1d:	mov    BYTE PTR [edx],al
  428e1f:	add    ah,ch
  428e21:	mov    BYTE PTR [edx],al
  428e23:	add    dh,bh
  428e25:	mov    BYTE PTR [edx],al
  428e27:	add    BYTE PTR [ecx+ecx*4],cl
  428e2a:	add    al,BYTE PTR [eax]
  428e2c:	sbb    cl,BYTE PTR [ecx-0x76cdfffe]
  428e32:	add    al,BYTE PTR [eax]
  428e34:	inc    esp
  428e35:	mov    DWORD PTR [edx],eax
  428e37:	add    BYTE PTR [esi-0x77],dl
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	bound  ecx,QWORD PTR [ecx-0x7691fffe]
  428e42:	add    al,BYTE PTR [eax]
  428e44:	jp     0x428dcf
  428e46:	add    al,BYTE PTR [eax]
  428e48:	mov    cl,BYTE PTR [ecx-0x765ffffe]
  428e4e:	add    al,BYTE PTR [eax]
  428e50:	scas   al,BYTE PTR es:[edi]
  428e51:	mov    DWORD PTR [edx],eax
  428e53:	add    al,al
  428e55:	mov    DWORD PTR [edx],eax
  428e57:	add    dl,dl
  428e59:	mov    DWORD PTR [edx],eax
  428e5b:	add    BYTE PTR [eax],al
  428e5d:	add    BYTE PTR [eax],al
  428e5f:	add    ah,ch
  428e61:	mov    DWORD PTR [edx],eax
  428e63:	add    BYTE PTR [eax],al
  428e65:	add    BYTE PTR [eax],al
  428e67:	add    BYTE PTR [edx],cl
  428e69:	mov    al,BYTE PTR [edx]
  428e6b:	add    BYTE PTR [edx+ecx*4],bl
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	mov    al,BYTE PTR cs:[edx]
  428e73:	add    BYTE PTR [edx+ecx*4+0x2],al
  428e77:	add    BYTE PTR [esi-0x76],dl
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	push   0x7800028a
  428e81:	mov    al,BYTE PTR [edx]
  428e83:	add    BYTE PTR [esi-0x59fffd76],dl
  428e89:	mov    al,BYTE PTR [edx]
  428e8b:	add    BYTE PTR [edx+ecx*4-0x753bfffe],dh
  428e92:	add    al,BYTE PTR [eax]
  428e94:	ror    BYTE PTR [edx-0x751dfffe],cl
  428e9a:	add    al,BYTE PTR [eax]
  428e9c:	out    dx,al
  428e9d:	mov    al,BYTE PTR [edx]
  428e9f:	add    BYTE PTR [eax],al
  428ea1:	mov    eax,DWORD PTR [edx]
  428ea3:	add    BYTE PTR [edx],dl
  428ea5:	mov    eax,DWORD PTR [edx]
  428ea7:	add    BYTE PTR [eax],ch
  428ea9:	mov    eax,DWORD PTR [edx]
  428eab:	add    BYTE PTR [esi],dh
  428ead:	mov    eax,DWORD PTR [edx]
  428eaf:	add    BYTE PTR [edx-0x75],al
  428eb2:	add    al,BYTE PTR [eax]
  428eb4:	pop    esp
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  428ebb:	add    BYTE PTR [ebx+ecx*4-0x7465fffe],cl
  428ec2:	add    al,BYTE PTR [eax]
  428ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ec5:	mov    eax,DWORD PTR [edx]
  428ec7:	add    BYTE PTR [eax+0x28b],bh
  428ecd:	add    BYTE PTR [eax],al
  428ecf:	add    al,bl
  428ed1:	mov    eax,DWORD PTR [edx]
  428ed3:	add    dl,ah
  428ed5:	mov    eax,DWORD PTR [edx]
  428ed7:	add    al,dh
  428ed9:	mov    eax,DWORD PTR [edx]
  428edb:	add    ah,bh
  428edd:	mov    eax,DWORD PTR [edx]
  428edf:	add    BYTE PTR [esp+ecx*4],cl
  428ee2:	add    al,BYTE PTR [eax]
  428ee4:	sbb    cl,BYTE PTR [edx+eax*1+0x28c2600]
  428eeb:	add    BYTE PTR [eax],dh
  428eed:	mov    WORD PTR [edx],es
  428eef:	add    BYTE PTR [edx-0x74],al
  428ef2:	add    al,BYTE PTR [eax]
  428ef4:	pop    eax
  428ef5:	mov    WORD PTR [edx],es
  428ef7:	add    BYTE PTR [esi-0x74],ch
  428efa:	add    al,BYTE PTR [eax]
  428efc:	test   BYTE PTR [edx+eax*1+0x28c9400],cl
  428f03:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  428f0a:	add    al,BYTE PTR [eax]
  428f0c:	ret    0x28c
  428f0f:	add    dl,bl
  428f11:	mov    WORD PTR [edx],es
  428f13:	add    ah,ah
  428f15:	mov    WORD PTR [edx],es
  428f17:	add    al,dh
  428f19:	mov    WORD PTR [edx],es
  428f1b:	add    dh,bh
  428f1d:	mov    WORD PTR [edx],es
  428f1f:	add    BYTE PTR [eax],al
  428f21:	add    BYTE PTR [eax],al
	...
