
cc7bd3749fb291a68dc7d0f0ac505ca8b7f9b52937a03a4bf0d763f80c55398c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [edx+esi*1+0x7c7c0e7d],esp
  402e98:	jl     0x402f16
  402e9a:	loopne 0x402efb
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax+0x44],0x6d6c6c63
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	pop    ds
  402f42:	xchg   esi,eax
  402f43:	jle    0x402f71
  402f45:	xchg   BYTE PTR [edx],al
  402f47:	fcom   QWORD PTR [ebx+ecx*4]
  402f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4b:	or     al,0x28
  402f4d:	popa   
  402f4e:	lahf   
  402f4f:	shr    BYTE PTR [edx-0x1e8bb2],cl
  402f55:	xor    bh,BYTE PTR [ebx-0x51]
  402f58:	cmp    eax,0x50e43030
  402f5d:	iret   
  402f5e:	mov    ds:0xe1ea273e,al
  402f63:	retf   0x3112
  402f66:	sub    DWORD PTR [edi+0x42],eax
  402f69:	jmp    0x402f62
  402f6b:	push   edx
  402f6c:	adc    DWORD PTR [ecx+0x4e22afba],edi
  402f72:	out    dx,al
  402f73:	pop    ebx
  402f74:	nop
  402f75:	sub    DWORD PTR [ecx-0x298d4e32],edx
  402f7b:	inc    edx
  402f7c:	xchg   BYTE PTR [edi+0xdac317c],ah
  402f82:	test   DWORD PTR [edi],edi
  402f84:	pop    es
  402f85:	adc    bl,bl
  402f87:	loopne 0x402fcf
  402f89:	out    dx,eax
  402f8a:	dec    esi
  402f8b:	push   eax
  402f8c:	jge    0x402fd5
  402f8e:	adc    BYTE PTR [esi],bl
  402f90:	pop    edi
  402f91:	sbb    BYTE PTR [edi-0x19a0cfa],dh
  402f97:	imul   ebp,DWORD PTR [edx+ecx*1],0x24624300
  402f9e:	sbb    eax,0xef5fa3e8
  402fa3:	(bad)  
  402fa4:	cmp    al,0x63
  402fa6:	aas    
  402fa7:	adc    eax,0x2ab66681
  402fac:	push   esi
  402fad:	inc    esp
  402fae:	jmp    esp
  402fb0:	ret    0x3368
  402fb3:	cs clc 
  402fb5:	(bad)  
  402fb6:	or     ecx,DWORD PTR [edi+0x7ac919a6]
  402fbc:	mov    esp,DWORD PTR [esi+0x14]
  402fbf:	xchg   esp,eax
  402fc0:	mov    esi,edi
  402fc2:	leave  
  402fc3:	inc    edx
  402fc4:	and    bl,bl
  402fc6:	outs   dx,BYTE PTR ds:[esi]
  402fc7:	stc    
  402fc8:	add    eax,0xd6ee191d
  402fcd:	sbb    DWORD PTR [ecx+edx*4+0x13],eax
  402fd1:	outs   dx,DWORD PTR ds:[esi]
  402fd2:	add    DWORD PTR ds:[esi],edi
  402fd5:	xor    dl,ah
  402fd7:	out    0x54,al
  402fd9:	repz addr16 sub eax,0x78584986
  402fe0:	mov    dl,0xf7
  402fe2:	fwait
  402fe3:	aam    0x60
  402fe5:	pop    es
  402fe6:	sbb    al,0xbf
  402fe8:	xchg   ebx,eax
  402fe9:	rcl    DWORD PTR [edx],1
  402feb:	aaa    
  402fec:	jmp    0x403035
  402fee:	or     al,0x2c
  402ff0:	cmp    BYTE PTR [ebx+0x1d],ah
  402ff3:	inc    eax
  402ff4:	in     eax,dx
  402ff5:	add    al,0x99
  402ff7:	sub    al,0xca
  402ff9:	out    dx,al
  402ffa:	mov    bl,0x22
  402ffc:	lahf   
  402ffd:	fs cli 
  402fff:	mov    al,ah
  403001:	nop
  403002:	mov    edi,0x67282361
  403007:	mov    BYTE PTR [esi-0x34],cl
  40300a:	cs cwde 
  40300c:	(bad)  
  40300d:	leave  
  40300e:	mov    edi,0x66327229
  403013:	mov    ebx,0x605de8ae
  403018:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40301a:	les    esp,FWORD PTR [edx-0x6c]
  40301d:	into   
  40301e:	dec    BYTE PTR [esi+0x38fb7b2]
  403024:	push   0x1e
  403026:	enter  0xe98c,0xd3
  40302a:	out    0xce,al
  40302c:	fisttp WORD PTR [eax]
  40302e:	(bad)  
  40302f:	jmp    0x40302f
  403031:	sbb    BYTE PTR [ecx+0x68],0xed
  403035:	pop    edi
  403036:	mov    cl,0xcd
  403038:	aas    
  403039:	and    DWORD PTR [edx-0x18],0xffffffa4
  40303d:	lods   eax,DWORD PTR ds:[esi]
  40303e:	out    0x19,al
  403040:	addr16 jmp 0x403096
  403043:	inc    esi
  403044:	out    dx,eax
  403045:	sub    DWORD PTR cs:[esi],esp
  403048:	inc    esp
  403049:	ins    BYTE PTR es:[edi],dx
  40304a:	pushf  
  40304b:	lods   eax,DWORD PTR ds:[esi]
  40304c:	sti    
  40304d:	mov    bl,0xdb
  40304f:	out    dx,al
  403050:	dec    eax
  403051:	cmp    ebp,ecx
  403053:	stos   BYTE PTR es:[edi],al
  403054:	add    ebp,0x78
  403057:	sahf   
  403058:	in     eax,0x63
  40305a:	scas   al,BYTE PTR es:[edi]
  40305b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40305c:	jbe    0x403022
  40305e:	mov    ?,ebp
  403060:	or     eax,0x29fb147c
  403065:	mov    cl,0x2
  403067:	das    
  403068:	in     al,dx
  403069:	int    0x39
  40306b:	ja     0x403060
  40306d:	mov    eax,0x3fc106fc
  403072:	cmp    ebx,eax
  403074:	jmp    0x40309d
  403076:	xchg   DWORD PTR [esi-0x45f88ac7],ebp
  40307c:	out    0xe4,al
  40307e:	lods   al,BYTE PTR ds:[esi]
  40307f:	jb     0x4030f4
  403081:	jle    0x403077
  403083:	lods   eax,DWORD PTR ds:[esi]
  403084:	dec    edx
  403085:	jb     0x4030a4
  403087:	call   0x9cbd9fbf
  40308c:	imul   DWORD PTR [edx]
  40308e:	inc    esp
  40308f:	fimul  WORD PTR [ebp+0x1d10d2c4]
  403095:	and    al,BYTE PTR [ecx+ebp*2]
  403098:	sub    eax,0x82cacf6d
  40309d:	fwait
  40309e:	in     al,dx
  40309f:	dec    eax
  4030a0:	cmp    BYTE PTR ds:0x15b2afe,dl
  4030a6:	mov    ebp,ds
  4030a8:	sub    bh,ch
  4030aa:	les    ebx,FWORD PTR [ecx-0x1dfb4314]
  4030b0:	dec    edx
  4030b1:	mov    ds:0x8f26b130,eax
  4030b6:	push   DWORD PTR [eax-0x6d334a0a]
  4030bc:	mov    al,ds:0x640d8a5
  4030c1:	mov    ebp,0xb24a012
  4030c6:	push   esi
  4030c7:	and    eax,DWORD PTR [esi+edi*1+0xf]
  4030cb:	aaa    
  4030cc:	pusha  
  4030cd:	dec    ebp
  4030ce:	loopne 0x403061
  4030d0:	inc    ecx
  4030d1:	scas   al,BYTE PTR es:[edi]
  4030d2:	jge    0x4030a5
  4030d4:	pop    esp
  4030d5:	pusha  
  4030d6:	jbe    0x40313e
  4030d8:	adc    eax,0x6bc1e5d8
  4030dd:	in     eax,dx
  4030de:	addr16 xchg ebx,eax
  4030e0:	loopne 0x4030ce
  4030e2:	stc    
  4030e3:	jl     0x403078
  4030e5:	push   es
  4030e6:	add    DWORD PTR ss:[eax+ecx*8-0x7c8aaadf],eax
  4030ee:	and    eax,0xd4394c5d
  4030f3:	fwait
  4030f4:	sbb    BYTE PTR [edx-0x58e6e0b5],cl
  4030fa:	fldcw  WORD PTR [esi-0x6916fa26]
  403100:	retf   0xc33a
  403103:	imul   esp,DWORD PTR [edx-0x12801335],0x3
  40310a:	ins    DWORD PTR es:[edi],dx
  40310b:	dec    ebx
  40310c:	xchg   ebp,eax
  40310d:	jmp    0xcf8c9705
  403112:	xchg   edx,eax
  403113:	ret    0x19a0
  403116:	add    DWORD PTR [esi+0x3],ebp
  403119:	cmp    al,0x89
  40311b:	aad    0xd8
  40311d:	mov    al,ds:0xc272c81
  403122:	ror    edi,cl
  403124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403125:	sub    al,0x18
  403127:	xchg   esi,eax
  403128:	sar    DWORD PTR [eax-0xe16f4b0],cl
  40312e:	lds    edx,FWORD PTR [edx+ecx*1-0x4d1d6dee]
  403135:	pop    eax
  403136:	repz cmp eax,0x3c022323
  40313c:	shl    ecx,0xfb
  40313f:	cwde   
  403140:	dec    esp
  403141:	lods   al,BYTE PTR ds:[esi]
  403142:	loope  0x4030c6
  403144:	lea    edx,[ebx+eiz*1+0xb024165]
  40314b:	ror    BYTE PTR [edi-0x6d02c04e],1
  403151:	and    eax,0x86b83efe
  403156:	xchg   edi,eax
  403157:	mov    dl,0x32
  403159:	(bad)  
  40315a:	rcr    BYTE PTR [edx+0x1e],0x9b
  40315e:	xor    eax,DWORD PTR [edx-0x4f27fbc4]
  403164:	dec    ebx
  403165:	sar    ecx,cl
  403167:	jmp    0xfdeb4a7d
  40316c:	jno    0x4031d4
  40316e:	pop    ss
  40316f:	das    
  403170:	les    esp,FWORD PTR [esi+edx*4+0x4316c004]
  403177:	xchg   esi,eax
  403178:	push   esi
  403179:	das    
  40317a:	ins    BYTE PTR es:[edi],dx
  40317b:	jp     0x4031c8
  40317d:	jecxz  0x4031f0
  40317f:	mov    dh,0x49
  403181:	shl    BYTE PTR [edi-0x71cd5656],0x30
  403188:	nop
  403189:	inc    edx
  40318a:	loopne 0x403115
  40318c:	pop    ebx
  40318d:	ret    0x3fca
  403190:	je     0x403195
  403192:	out    0x5e,eax
  403194:	retf   0xe69e
  403197:	in     eax,0x39
  403199:	out    0xc0,eax
  40319b:	pop    esp
  40319c:	xchg   ebp,eax
  40319d:	(bad)  
  40319e:	push   ebp
  40319f:	in     al,0xe
  4031a1:	mov    edx,cs
  4031a3:	ret    0x14cd
  4031a6:	cli    
  4031a7:	xor    ch,dl
  4031a9:	repz mov edi,0x30e32aa1
  4031af:	mov    al,ds:0x758172a3
  4031b4:	mov    ecx,0xa50a75b7
  4031b9:	out    dx,eax
  4031ba:	add    esp,edi
  4031bc:	mov    ch,0x59
  4031be:	scas   eax,DWORD PTR es:[edi]
  4031bf:	mov    al,ds:0xe58313fa
  4031c4:	into   
  4031c5:	dec    ebp
  4031c6:	leave  
  4031c7:	lock pop ecx
  4031c9:	loope  0x40321a
  4031cb:	add    ah,0x83
  4031ce:	scas   eax,DWORD PTR es:[edi]
  4031cf:	je     0x403234
  4031d1:	stos   BYTE PTR es:[edi],al
  4031d2:	or     eax,0x3bd274d7
  4031d7:	xor    edx,esp
  4031d9:	push   0xffffffdd
  4031db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031dc:	aas    
  4031dd:	push   0xf9f1c2e
  4031e2:	(bad)  
  4031e3:	out    dx,al
  4031e4:	cmp    eax,edi
  4031e6:	fs es adc eax,0x6a08948b
  4031ed:	and    DWORD PTR [esi+edx*1-0x4f],ebp
  4031f1:	ins    BYTE PTR es:[edi],dx
  4031f2:	mov    dh,0xfd
  4031f4:	pusha  
  4031f5:	xchg   ebx,eax
  4031f6:	adc    dl,BYTE PTR [esp+edi*4]
  4031f9:	shl    edx,1
  4031fb:	xchg   esp,eax
  4031fc:	add    esp,DWORD PTR [edx+0x5f]
  4031ff:	stc    
  403200:	inc    edi
  403201:	jno    0x4031c7
  403203:	jecxz  0x403187
  403205:	rcr    DWORD PTR [esi],1
  403207:	div    esi
  403209:	and    al,0x60
  40320b:	push   ecx
  40320c:	push   eax
  40320d:	cmp    al,0x83
  40320f:	mov    dl,0x5d
  403211:	call   0xf6c9:0xfe9ea410
  403218:	call   0xf9fd2182
  40321d:	data16 (bad) 
  40321f:	adc    ah,BYTE PTR [eax-0x4b2cc838]
  403225:	pop    ds
  403226:	dec    eax
  403227:	mov    ds:0x1837474e,al
  40322c:	(bad)  
  40322d:	cs xchg ebp,eax
  40322f:	mov    ebp,0x3d377944
  403234:	jno    0x40323e
  403236:	inc    edx
  403237:	dec    edi
  403238:	cmp    DWORD PTR [esi],eax
  40323a:	int3   
  40323b:	das    
  40323c:	xchg   BYTE PTR [edx-0x26522c32],ch
  403242:	imul   ebp,DWORD PTR [esi-0x2b],0xffffff87
  403246:	imul   edx,DWORD PTR [ebp+0x23],0xffffffb2
  40324a:	ja     0x403230
  40324c:	dec    eax
  40324d:	imul   ebp,ecx,0xf9d9325a
  403253:	or     BYTE PTR [ebx-0x7d],0x94
  403257:	jecxz  0x4032cc
  403259:	pop    ebp
  40325a:	js     0x40326f
  40325c:	xchg   ecx,eax
  40325d:	cmp    eax,0x65298a08
  403262:	mov    cl,BYTE PTR [edi+0x15]
  403265:	mov    ah,0xb6
  403267:	ss push bp
  40326a:	inc    ebx
  40326b:	dec    esp
  40326c:	jmp    0x403202
  40326e:	test   DWORD PTR [ebx+esi*1+0x64],ecx
  403272:	sbb    ch,bh
  403274:	mov    esp,0x9857bc9a
  403279:	xchg   BYTE PTR [ecx],ah
  40327b:	popa   
  40327c:	adc    BYTE PTR [eax],bl
  40327e:	mov    edx,0x842d0ca7
  403283:	pushf  
  403284:	scas   eax,DWORD PTR es:[edi]
  403285:	xor    al,0x3c
  403287:	mov    cl,0x95
  403289:	das    
  40328a:	iret   
  40328b:	dec    ecx
  40328c:	dec    ebx
  40328d:	sbb    DWORD PTR [eax+ebp*2+0x76],edx
  403291:	mov    cl,BYTE PTR [ebp-0x3366ad42]
  403297:	adc    DWORD PTR [ebp+0x5414eed7],ecx
  40329d:	pushf  
  40329e:	rcl    DWORD PTR [edi+0x599cb29],1
  4032a4:	cmp    DWORD PTR [edx-0x60],ebx
  4032a7:	addr16 push ebx
  4032a9:	loopne 0x403235
  4032ab:	rcl    BYTE PTR [edi],0x28
  4032ae:	pop    ecx
  4032af:	loopne 0x4032b8
  4032b1:	outs   dx,BYTE PTR ds:[esi]
  4032b2:	sbb    al,0x2a
  4032b4:	iret   
  4032b5:	hlt    
  4032b6:	pop    ds
  4032b7:	or     al,BYTE PTR [ebp+0x378af658]
  4032bd:	sbb    BYTE PTR [esi],bl
  4032bf:	ins    BYTE PTR es:[edi],dx
  4032c0:	(bad)  
  4032c1:	xor    al,0x50
  4032c3:	loope  0x403310
  4032c5:	lock jge 0x403285
  4032c8:	cmp    dh,bl
  4032ca:	pusha  
  4032cb:	or     BYTE PTR [edx],ch
  4032cd:	out    dx,eax
  4032ce:	sbb    eax,0xd530a6dc
  4032d3:	push   cs
  4032d4:	cmp    BYTE PTR [esi],al
  4032d6:	shl    cl,cl
  4032d8:	or     DWORD PTR [ebx],0x7b7e56fc
  4032de:	imul   edx,DWORD PTR [edi+0x9],0x6074460b
  4032e5:	mov    ecx,0xd023ee38
  4032ea:	mov    BYTE PTR [esi+0x48cd228],ah
  4032f0:	xchg   edi,eax
  4032f1:	outs   dx,BYTE PTR ds:[esi]
  4032f2:	or     eax,0x136a3657
  4032f7:	fistp  DWORD PTR [edx-0x2bc03ae7]
  4032fd:	sub    DWORD PTR [ebx],eax
  4032ff:	adc    al,0x3f
  403301:	mov    ds:0x8c5b622c,eax
  403306:	lods   eax,DWORD PTR ds:[esi]
  403307:	jmp    DWORD PTR [ebx+0x5eb6b0ca]
  40330d:	pop    ds
  40330e:	mov    ds:0x8fecde89,eax
  403313:	call   0xa909ee68
  403318:	jmp    0x31c7:0x7f80979b
  40331f:	push   ebx
  403320:	xor    ebx,DWORD PTR [ebx-0x5a]
  403323:	mov    edx,0xa958dd70
  403328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403329:	test   DWORD PTR [ecx-0x1875ab39],0xcd6815e3
  403333:	xchg   DWORD PTR [ebx],eax
  403335:	push   edi
  403336:	les    esp,FWORD PTR [ecx]
  403338:	cmp    DWORD PTR [ecx-0x6e0b8119],edi
  40333e:	dec    esp
  40333f:	ret    0xa9fd
  403342:	xor    DWORD PTR [edi],edx
  403344:	dec    edi
  403345:	jp     0x4032f1
  403347:	test   DWORD PTR [esi+0x1e6bb6d8],edi
  40334d:	fsubr  QWORD PTR es:0x2828fac0
  403354:	inc    ebx
  403355:	jg     0x4033a7
  403357:	cmp    BYTE PTR [esi-0x685c4e02],cl
  40335d:	lods   al,BYTE PTR ds:[esi]
  40335e:	sbb    ebp,DWORD PTR [eax+0x2a]
  403361:	mov    al,0x80
  403363:	xor    al,dh
  403365:	mov    edi,0x3d902168
  40336a:	call   0x135a207c
  40336f:	pop    edx
  403370:	xchg   BYTE PTR [eax],ch
  403372:	jns    0x40330d
  403374:	sub    eax,0xf0c00fe3
  403379:	stos   DWORD PTR es:[edi],eax
  40337a:	mov    ah,0x33
  40337c:	jl     0x4033ba
  40337e:	ds jge 0x40334d
  403381:	je     0x4033fc
  403383:	out    0x27,eax
  403385:	inc    eax
  403386:	(bad)  
  403387:	(bad)
  40338a:	dec    ecx
  40338b:	push   eax
  40338c:	mov    ds:0x927b8569,eax
  403391:	mov    dh,0x68
  403393:	stc    
  403394:	pusha  
  403395:	xchg   BYTE PTR [edi+0x3b],ah
  403398:	push   ss
  403399:	push   ebp
  40339a:	dec    esp
  40339b:	jle    0x4033ea
  40339d:	push   0x29
  40339f:	sti    
  4033a0:	mov    esi,0xd4a45d31
  4033a5:	(bad)  
  4033a6:	pop    ebp
  4033a7:	push   cs
  4033a8:	(bad)  
  4033aa:	xchg   ecx,eax
  4033ab:	adc    al,ah
  4033ad:	cwde   
  4033ae:	ret    
  4033af:	or     al,0xf7
  4033b1:	mov    ds:0xa9aa6228,eax
  4033b6:	lea    ebp,[ecx-0x40e2bb92]
  4033bc:	int3   
  4033bd:	push   es
  4033be:	and    BYTE PTR [ecx],ah
  4033c0:	aas    
  4033c1:	xchg   esp,eax
  4033c2:	lods   eax,DWORD PTR ds:[esi]
  4033c3:	inc    ebx
  4033c4:	pop    eax
  4033c5:	adc    dh,BYTE PTR [ecx]
  4033c7:	dec    edi
  4033c9:	pop    ecx
  4033ca:	mov    bl,0x94
  4033cc:	icebp  
  4033cd:	cmp    BYTE PTR [ebx-0x3872cb48],bl
  4033d3:	pop    eax
  4033d4:	aas    
  4033d5:	out    0xeb,al
  4033d7:	or     al,0x0
  4033d9:	cdq    
  4033da:	mov    ds:0x8591db9d,eax
  4033df:	mov    eax,DWORD PTR [eax+0x645e6423]
  4033e5:	shl    BYTE PTR [edi],1
  4033e7:	push   es
  4033e8:	repnz fmul QWORD PTR [edi]
  4033eb:	cmc    
  4033ec:	push   cs
  4033ed:	rcl    BYTE PTR [eax+0x75b63c14],cl
  4033f3:	scas   al,BYTE PTR es:[edi]
  4033f4:	out    dx,eax
  4033f5:	xchg   edi,eax
  4033f6:	and    DWORD PTR [edi],esp
  4033f8:	add    eax,0x933f2b08
  4033fd:	mov    ss,WORD PTR [ebx+0x68]
  403400:	xchg   ebx,eax
  403401:	out    0x25,al
  403403:	xchg   edi,eax
  403404:	dec    esi
  403405:	push   edx
  403406:	daa    
  403407:	mov    bh,0x9e
  403409:	scas   al,BYTE PTR es:[edi]
  40340a:	and    ebp,edi
  40340c:	mov    ebp,0x76bfe3d6
  403411:	cmp    edi,DWORD PTR [edx+0x6ecbdf8a]
  403417:	enter  0xa105,0x21
  40341b:	jle    0x4033e0
  40341d:	dec    edi
  40341e:	push   ss
  40341f:	in     eax,0x62
  403421:	xchg   esi,eax
  403422:	hlt    
  403423:	les    ebx,FWORD PTR [di-0x4883]
  403428:	mov    bh,0xbe
  40342a:	(bad)  
  40342b:	(bad)  
  40342c:	mov    esp,0xdd033cf8
  403431:	mov    ebx,0xc6fdaf50
  403436:	shl    BYTE PTR ds:0x82c8cd06,1
  40343c:	(bad)  ds:0xb4cffe80
  403442:	jb     0x403445
  403444:	push   cs
  403445:	adc    edi,ecx
  403447:	cwde   
  403448:	out    0x2c,eax
  40344a:	imul   ebp,DWORD PTR [esi-0x53],0xedf0fd65
  403451:	in     eax,0x8b
  403453:	xchg   edi,eax
  403454:	mov    ds:0x9f6da71b,al
  403459:	xor    bl,BYTE PTR [eax+0xdba5839]
  40345f:	sub    ecx,DWORD PTR [edi+0x503da754]
  403465:	fbstp  TBYTE PTR [edi-0x6c]
  403468:	jmp    0x3748:0x8f23da9c
  40346f:	call   0xafb6:0x304706fe
  403476:	mov    ah,0xbc
  403478:	std    
  403479:	loop   0x403436
  40347b:	cld    
  40347c:	dec    ebp
  40347d:	fwait
  40347e:	xlat   BYTE PTR ds:[ebx]
  40347f:	call   DWORD PTR [edi]
  403481:	ret    
  403482:	and    DWORD PTR [ebp+0x1147df19],ebx
  403488:	mov    edx,0x827de2ea
  40348d:	aaa    
  40348e:	mov    ds:0x75390923,al
  403493:	test   al,0xae
  403495:	cmp    al,0xfe
  403497:	xchg   ebx,eax
  403498:	rcr    BYTE PTR [ebx+0x367f63cc],0x47
  40349f:	push   edi
  4034a0:	inc    ebx
  4034a1:	sub    ebp,DWORD PTR [ebx+ebx*4+0x5ab6b5d5]
  4034a8:	outs   dx,DWORD PTR ds:[esi]
  4034a9:	gs pusha 
  4034ab:	pop    edx
  4034ac:	in     eax,dx
  4034ad:	mov    eax,ds:0x87694c6e
  4034b2:	or     al,0x42
  4034b4:	sbb    BYTE PTR [edx],cl
  4034b6:	int    0x4e
  4034b8:	pop    esi
  4034b9:	push   cs
  4034ba:	or     ebp,0x1ed1a47e
  4034c0:	adc    ch,BYTE PTR [edi+0x61884e4a]
  4034c6:	mov    bh,0x43
  4034c8:	inc    esi
  4034c9:	inc    ebx
  4034ca:	call   0x97bc30ce
  4034cf:	or     BYTE PTR [ebx+0x1a945c15],0x4c
  4034d6:	test   BYTE PTR [eax+edx*4],ch
  4034d9:	dec    ebx
  4034da:	out    0xf8,al
  4034dc:	dec    ebp
  4034dd:	imul   ebx,DWORD PTR [esi+0x271b6e03],0x8
  4034e4:	xchg   ecx,eax
  4034e5:	lock lods al,BYTE PTR ds:[esi]
  4034e7:	div    DWORD PTR [edi]
  4034e9:	mov    cl,0x4
  4034eb:	push   es
  4034ec:	pop    esp
  4034ed:	dec    eax
  4034ee:	xor    eax,0xd59d7ed8
  4034f3:	fisub  WORD PTR cs:[eax+ecx*4+0x32]
  4034f8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034fa:	cmp    DWORD PTR [eax+0x61],ecx
  4034fd:	(bad)  
  4034fe:	mov    ch,0x63
  403500:	jbe    0x4034ed
  403502:	retf   
  403503:	pop    ss
  403504:	sbb    BYTE PTR [edi+0x1f],ch
  403507:	pop    esp
  403508:	xlat   BYTE PTR ds:[ebx]
  403509:	repz frstor [esi+0x43]
  40350d:	leave  
  40350e:	test   DWORD PTR [esp+edi*4+0x2e],esp
  403512:	test   DWORD PTR [eax],esp
  403514:	in     al,0x78
  403516:	xchg   DWORD PTR [ebx-0x1b],edx
  403519:	das    
  40351a:	add    ebx,DWORD PTR [ecx-0x50a4494]
  403520:	icebp  
  403521:	pop    ss
  403522:	or     al,BYTE PTR [edi+0x4963b01a]
  403528:	ins    DWORD PTR es:[edi],dx
  403529:	fnstcw WORD PTR [edx-0x6a]
  40352c:	mov    ebp,0xfabbb3b4
  403531:	mov    dl,BYTE PTR [esi+0x77c1b24f]
  403537:	xchg   ebp,eax
  403538:	int3   
  403539:	dec    esp
  40353a:	push   edi
  40353b:	scas   eax,DWORD PTR es:[edi]
  40353c:	fbld   TBYTE PTR [ecx+esi*8+0x3dffd7c6]
  403543:	xlat   BYTE PTR ds:[ebx]
  403544:	xchg   edi,eax
  403545:	out    0xb0,eax
  403547:	add    al,0xdb
  403549:	xchg   edi,esp
  40354b:	ror    DWORD PTR [eax+0x5],0xff
  40354f:	cld    
  403550:	fild   WORD PTR [esi+0x4a]
  403553:	inc    ecx
  403554:	in     al,dx
  403555:	aaa    
  403556:	add    BYTE PTR [edi+ebx*1],bh
  403559:	mov    es,ebp
  40355b:	push   0x11f6c7d5
  403560:	addr16 xchg ebx,eax
  403562:	out    dx,al
  403563:	pop    ss
  403564:	(bad)  
  403565:	addr16 dec ecx
  403567:	add    eax,0xa70bd3ce
  40356c:	pushf  
  40356d:	pop    esi
  40356e:	xor    al,0xf7
  403570:	mov    bh,0x42
  403572:	mov    ebp,ebx
  403574:	xchg   ecx,eax
  403575:	shl    BYTE PTR [edi+eax*8],0xcb
  403579:	imul   ecx,DWORD PTR [ebp+0x2a],0xffffffb9
  40357d:	jecxz  0x403551
  40357f:	imul   edi,edi,0x13
  403582:	je     0x403515
  403584:	fcomp  QWORD PTR [eax]
  403586:	cmp    cl,dl
  403588:	popa   
  403589:	xchg   esi,eax
  40358a:	pop    esp
  40358b:	adc    BYTE PTR [edx-0x18],bh
  40358e:	adc    al,0x21
  403590:	fwait
  403591:	call   0xde9fec8d
  403596:	inc    edi
  403597:	adc    edi,DWORD PTR [edi+0x69]
  40359a:	inc    esp
  40359b:	stos   BYTE PTR es:[edi],al
  40359c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40359d:	iret   
  40359e:	jo     0x40354f
  4035a0:	sbb    dl,BYTE PTR ss:[ebx-0x4c]
  4035a4:	xchg   edi,eax
  4035a5:	test   edx,ebx
  4035a7:	pop    esp
  4035a8:	xor    al,0x15
  4035aa:	int3   
  4035ab:	ficom  WORD PTR [eax]
  4035ad:	fwait
  4035ae:	lahf   
  4035af:	mov    ecx,0x703a1b15
  4035b4:	inc    esp
  4035b5:	cmp    bl,BYTE PTR [ecx+0x27c2710c]
  4035bb:	xchg   BYTE PTR [edi],bl
  4035bd:	fsubr  QWORD PTR [edx]
  4035bf:	mov    edi,0x8b46a5f7
  4035c4:	fild   WORD PTR [esi]
  4035c6:	pop    ecx
  4035c7:	lods   eax,DWORD PTR ds:[esi]
  4035c8:	push   ss
  4035c9:	lds    edi,FWORD PTR [esi-0x26]
  4035cc:	push   ebp
  4035cd:	or     bh,BYTE PTR [edx]
  4035cf:	push   ss
  4035d0:	clc    
  4035d1:	push   esp
  4035d2:	lock adc al,0x5f
  4035d5:	and    DWORD PTR [ecx-0x79],0xeba360d1
  4035dc:	int    0xa7
  4035de:	lods   eax,DWORD PTR ds:[esi]
  4035df:	stc    
  4035e0:	mov    esp,0x77133271
  4035e5:	lahf   
  4035e6:	mov    al,0x9d
  4035e8:	jl     0x403602
  4035ea:	stos   DWORD PTR es:[edi],eax
  4035eb:	fwait
  4035ec:	or     esp,esp
  4035ee:	xlat   BYTE PTR ds:[ebx]
  4035ef:	jl     0x403573
  4035f1:	xchg   ecx,eax
  4035f2:	loop   0x403626
  4035f4:	pop    ecx
  4035f5:	std    
  4035f6:	jge    0x4035bd
  4035f8:	pop    edx
  4035f9:	cmc    
  4035fa:	mov    al,ds:0x7e824c86
  4035ff:	or     eax,0x9fac87f1
  403604:	and    DWORD PTR [edx+0xb56777f],edx
  40360a:	stc    
  40360b:	outs   dx,BYTE PTR ds:[esi]
  40360c:	nop
  40360d:	cmp    BYTE PTR [ebx+0x28],al
  403610:	push   edi
  403611:	mov    dl,0xcf
  403613:	or     ch,BYTE PTR [ecx+edi*8+0x43cf7b11]
  40361a:	aad    0x4d
  40361c:	add    DWORD PTR [eax-0x76],ebx
  40361f:	daa    
  403620:	fnsave [ebx]
  403622:	loope  0x4036a0
  403624:	adc    BYTE PTR [edi],dl
  403626:	cmp    al,0x12
  403628:	std    
  403629:	and    DWORD PTR [edx+0x61],ebp
  40362c:	sahf   
  40362d:	push   es
  40362e:	ss dec eax
  403630:	imul   ebx,ecx,0xffffffad
  403633:	shl    DWORD PTR [esi],1
  403635:	inc    ebp
  403636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403637:	pop    esp
  403638:	inc    esp
  403639:	aaa    
  40363a:	mov    edx,0xb11a750
  40363f:	in     eax,dx
  403640:	ds retf 0x45f7
  403644:	std    
  403645:	pop    esi
  403646:	push   ecx
  403647:	xlat   BYTE PTR ds:[ebx]
  403648:	hlt    
  403649:	in     al,0x7d
  40364b:	bound  ebp,QWORD PTR [eax-0x5e60c227]
  403651:	dec    edx
  403652:	psubusb mm0,mm4
  403655:	shl    BYTE PTR [edi+edi*8],cl
  403658:	and    eax,esi
  40365a:	pop    ecx
  40365b:	sbb    eax,0x81d0aabc
  403660:	add    DWORD PTR [ecx+esi*1+0x7ffc38f],ebx
  403667:	push   ebp
  403668:	call   DWORD PTR [edx+0xc99a7c7]
  40366e:	push   edi
  40366f:	sbb    ch,BYTE PTR [ebx-0x776abd82]
  403675:	push   esp
  403676:	and    BYTE PTR [edx+ebp*8+0x10],ch
  40367a:	jmp    0x516:0x3ee8467
  403681:	ja     0x40367f
  403683:	les    esp,FWORD PTR [ebx]
  403685:	and    al,0x83
  403687:	lods   al,BYTE PTR ds:[esi]
  403688:	aas    
  403689:	cli    
  40368a:	push   ebx
  40368b:	xor    DWORD PTR [edi+0x1f47e6c],0x299379b2
  403695:	test   DWORD PTR [edi],edi
  403697:	test   eax,0x13c52287
  40369c:	jge    0x4036a6
  40369e:	push   es
  40369f:	mov    cl,0x9c
  4036a1:	or     al,0xdd
  4036a3:	xor    dl,bh
  4036a5:	push   ebx
  4036a6:	sub    cl,BYTE PTR ds:0x44cea502
  4036ac:	cmp    BYTE PTR [ecx+0x59],0x47
  4036b0:	xchg   BYTE PTR [edx],dl
  4036b2:	xor    bl,bl
  4036b4:	idiv   DWORD PTR [ecx]
  4036b6:	jmp    0x40371b
  4036b8:	int3   
  4036b9:	mov    eax,ds:0x3e2f6d90
  4036be:	mov    edx,0x36d9bc47
  4036c3:	dec    ebp
  4036c4:	xchg   edi,eax
  4036c5:	ficom  WORD PTR [esi+0x72]
  4036c8:	and    BYTE PTR [edi+ebp*2-0x2ac5ad03],al
  4036cf:	out    dx,al
  4036d0:	lock dec ebx
  4036d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036d4:	leave  
  4036d5:	mov    esi,0xee7443a5
  4036da:	enter  0x6c99,0x9b
  4036de:	sub    al,0x82
  4036e0:	stos   BYTE PTR es:[edi],al
  4036e1:	push   ss
  4036e2:	iret   
  4036e3:	sbb    al,0x70
  4036e5:	aam    0x6e
  4036e7:	lea    edx,[ecx+0x52]
  4036ea:	jnp    0x403686
  4036ec:	cmp    DWORD PTR [edx-0x6772f425],0x19
  4036f3:	out    dx,eax
  4036f4:	stos   BYTE PTR es:[edi],al
  4036f5:	push   cs
  4036f6:	jl     0x4036b7
  4036f8:	pop    DWORD PTR [edi]
  4036fa:	clc    
  4036fb:	test   DWORD PTR [esi+esi*4+0x4864bd01],ebx
  403702:	sub    eax,0x24e5d086
  403707:	cmp    al,0x47
  403709:	inc    eax
  40370a:	sti    
  40370b:	daa    
  40370c:	push   eax
  40370d:	in     eax,dx
  40370e:	jge    0x4036ae
  403710:	idiv   ch
  403712:	pop    edx
  403713:	or     edi,DWORD PTR [ebx-0x17]
  403716:	je     0x4036e8
  403718:	pop    edi
  403719:	pusha  
  40371a:	pushf  
  40371b:	inc    edi
  40371c:	stos   BYTE PTR es:[edi],al
  40371d:	push   edi
  40371e:	clc    
  40371f:	inc    edx
  403720:	xchg   DWORD PTR [esi],esp
  403722:	repnz shl DWORD PTR [esi+edx*1-0x6f],cl
  403727:	or     dl,0x8
  40372a:	fldcw  WORD PTR [edi-0x73]
  40372d:	sub    al,0x91
  40372f:	psubusb mm6,QWORD PTR [esi+0x30]
  403733:	sti    
  403734:	call   0x7473:0x1135d458
  40373b:	dec    eax
  40373c:	mul    BYTE PTR [eax+ebp*8]
  40373f:	int3   
  403740:	dec    esp
  403741:	in     eax,dx
  403742:	(bad)  
  403743:	mov    edx,0x793c9c7c
  403748:	addr16 inc esi
  40374a:	cli    
  40374b:	hlt    
  40374c:	cmp    esi,esi
  40374e:	daa    
  40374f:	push   edi
  403750:	and    al,0x3d
  403752:	je     0x4037a6
  403754:	loope  0x403703
  403756:	adc    BYTE PTR [esp+esi*8-0x633e8b3a],dh
  40375d:	(bad)  
  40375e:	push   DWORD PTR [esi]
  403760:	stos   DWORD PTR es:[edi],eax
  403761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403762:	into   
  403763:	jp     0x403794
  403765:	fsubr  QWORD PTR [eax]
  403767:	mov    eax,0xdbd03807
  40376c:	jmp    0xa1e68a12
  403771:	(bad)  
  403772:	xor    dl,BYTE PTR [eax+0x4ad96fbf]
  403778:	or     al,BYTE PTR [eax-0x7a71881]
  40377e:	mov    edi,0xbbda6eff
  403783:	je     0x403798
  403785:	or     dh,BYTE PTR [ebp-0x66]
  403788:	iret   
  403789:	push   0xd2179765
  40378e:	adc    BYTE PTR [edx-0x4f],ah
  403791:	push   edx
  403792:	mov    eax,ds:0x495f67c4
  403797:	push   ecx
  403798:	cmp    BYTE PTR [ecx+0xaadaf09],al
  40379e:	xchg   ecx,eax
  40379f:	stos   DWORD PTR es:[edi],eax
  4037a0:	sahf   
  4037a1:	lea    esi,[esi-0x188c4bb0]
  4037a7:	mov    bh,0x7
  4037a9:	sub    BYTE PTR [eax*2+0x16028d41],dl
  4037b0:	lods   al,BYTE PTR ds:[esi]
  4037b1:	fwait
  4037b2:	sti    
  4037b3:	cld    
  4037b4:	int    0x93
  4037b6:	outs   dx,DWORD PTR ds:[esi]
  4037b7:	or     ecx,DWORD PTR [ebp+0x12bc88a5]
  4037bd:	jg     0x40381e
  4037bf:	fld    TBYTE PTR [ebx-0x4b]
  4037c2:	iret   
  4037c3:	jg     0x403745
  4037c5:	stc    
  4037c6:	add    ah,BYTE PTR [eiz*2+0x6a6764f7]
  4037cd:	push   es
  4037ce:	sar    DWORD PTR [edi-0x7879cc9e],1
  4037d4:	clc    
  4037d5:	out    0xc,al
  4037d7:	leave  
  4037d8:	mov    bl,0xe6
  4037da:	sti    
  4037db:	jp     0x40383e
  4037dd:	ror    DWORD PTR [eax+0x4a2de4c3],1
  4037e3:	or     ecx,ecx
  4037e5:	xchg   ebx,eax
  4037e6:	ret    
  4037e7:	adc    edx,DWORD PTR [ebx+0x41]
  4037ea:	ins    DWORD PTR es:[edi],dx
  4037eb:	jle    0x4037c4
  4037ed:	mov    eax,ds:0xf5b9edb2
  4037f2:	lahf   
  4037f3:	jmp    0xe107d688
  4037f8:	aad    0xc9
  4037fa:	push   esi
  4037fb:	fdiv   st(4),st
  4037fd:	jge    0x403879
  4037ff:	or     ecx,DWORD PTR [ebp-0x2afe140b]
  403805:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  403807:	stos   BYTE PTR es:[edi],al
  403808:	nop
  403809:	and    DWORD PTR [ebp+0x64],edi
  40380c:	jno    0x4037b8
  40380e:	ds ja  0x403844
  403811:	xor    bh,BYTE PTR [ecx+0x63]
  403814:	jle    0x4037b2
  403816:	sbb    al,0x11
  403818:	xor    edx,DWORD PTR ds:0x7a8e0741
  40381e:	cwde   
  40381f:	ficom  WORD PTR [esi]
  403821:	xchg   ebx,eax
  403822:	cmp    esi,esi
  403824:	jbe    0x403820
  403826:	enter  0xb051,0x1b
  40382a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40382b:	fdivr  QWORD PTR [eax-0x68]
  40382e:	aas    
  40382f:	jo     0x40385e
  403831:	enter  0xad01,0x99
  403835:	jle    0x403892
  403837:	inc    ebx
  403838:	xlat   BYTE PTR ds:[ebx]
  403839:	cmp    esi,eax
  40383b:	cmp    DWORD PTR [edx],ebp
  40383d:	js     0x403870
  40383f:	pop    ss
  403840:	shr    DWORD PTR [edi],cl
  403842:	adc    al,0xc2
  403844:	bound  esi,QWORD PTR [edx+edi*8+0x23]
  403848:	and    cl,BYTE PTR [edx+0x45909223]
  40384e:	das    
  40384f:	aam    0x54
  403851:	push   ebp
  403852:	dec    esp
  403853:	bound  esi,QWORD PTR [esi+0x64]
  403856:	repz (bad) 
  403858:	mov    BYTE PTR [esi],dh
  40385a:	mov    esi,0x94cb5805
  40385f:	lock cwde 
  403861:	ja     0x4038ac
  403863:	nop
  403864:	cmp    dl,bl
  403866:	xlat   BYTE PTR ds:[ebx]
  403867:	dec    ecx
  403868:	imul   esi,DWORD PTR [edx-0x1439bb2f],0x5e8ca03d
  403872:	adc    DWORD PTR [edx+ebp*4-0x62bd8db2],ecx
  403879:	jnp    0x40389d
  40387b:	ret    0x3cc
  40387e:	sub    bh,bh
  403880:	xor    al,0x98
  403882:	cdq    
  403883:	mov    ah,0x67
  403885:	mov    esi,0x29348d4f
  40388a:	rcl    BYTE PTR [edi-0x5026fc29],cl
  403890:	mov    ah,0x71
  403892:	xor    DWORD PTR [edi-0x338c770b],ecx
  403898:	stos   BYTE PTR es:[edi],al
  403899:	(bad)  
  40389a:	iret   
  40389b:	cmp    eax,0x3162f252
  4038a0:	inc    esp
  4038a1:	sub    edi,DWORD PTR [eax]
  4038a3:	inc    esp
  4038a4:	mov    BYTE PTR [ebp-0x16],cl
  4038a7:	inc    BYTE PTR [eax]
  4038a9:	idiv   BYTE PTR [edx-0x7f]
  4038ac:	pusha  
  4038ad:	lods   al,BYTE PTR ds:[esi]
  4038ae:	xor    edi,eax
  4038b0:	jmp    0xdce:0x5821c421
  4038b7:	aam    0x2b
  4038b9:	js     0x40392f
  4038bb:	ret    
  4038bc:	inc    ebp
  4038bd:	outs   dx,DWORD PTR ds:[esi]
  4038be:	inc    esi
  4038bf:	repz cld 
  4038c1:	out    0x85,eax
  4038c3:	push   ss
  4038c4:	and    ecx,ebx
  4038c6:	and    ch,0x54
  4038c9:	les    ebp,FWORD PTR [edi+0x4feeabdb]
  4038cf:	mov    bh,0x48
  4038d1:	and    BYTE PTR [edi-0x44],dh
  4038d4:	jne    0x403900
  4038d6:	mov    al,es:0xcc6a4788
  4038dc:	adc    edi,DWORD PTR [eax+ecx*8]
  4038df:	add    dl,0x43
  4038e2:	push   ss
  4038e3:	dec    edi
  4038e4:	xor    bh,ch
  4038e6:	pusha  
  4038e7:	mov    bh,0x66
  4038e9:	call   0xabca:0x5db69ad2
  4038f0:	inc    edi
  4038f1:	mov    WORD PTR [ebx-0x689586b8],ds
  4038f7:	push   eax
  4038f8:	push   0x3a
  4038fa:	neg    DWORD PTR [esi-0x6b]
  4038fd:	daa    
  4038fe:	jge    0x4038ef
  403900:	adc    ecx,DWORD PTR [ebx+0x60]
  403903:	jmp    0x48471f1e
  403908:	push   ebx
  403909:	pop    edi
  40390a:	dec    edi
  40390b:	ss inc esi
  40390d:	sar    BYTE PTR [eax+0x7ac06e11],cl
  403913:	rcl    DWORD PTR [eax+0x38a83352],1
  403919:	add    eax,0x29b5cbd
  40391e:	js     0x4038e9
  403920:	int3   
  403921:	and    esp,DWORD PTR [edx-0x389c6ec2]
  403927:	xor    ebx,DWORD PTR [ebx+0x17]
  40392a:	sbb    al,BYTE PTR [ecx]
  40392c:	retf   0xb483
  40392f:	mov    ds:0x4db937c6,eax
  403934:	xor    DWORD PTR [ebp+0x4389e17d],0x39
  40393b:	add    esi,ebp
  40393d:	cmc    
  40393e:	ins    BYTE PTR es:[edi],dx
  40393f:	div    bh
  403941:	cmp    al,0x6a
  403943:	or     eax,0x5cb49939
  403948:	int    0x4d
  40394a:	repz fisubr WORD PTR [ebx+ecx*4+0x52]
  40394f:	rcl    BYTE PTR [edx+edx*2+0x6446f18f],1
  403956:	adc    al,0x65
  403958:	repz push cs
  40395a:	xchg   ecx,eax
  40395b:	int    0x7a
  40395d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40395e:	repz jo 0x4038f3
  403961:	mov    eax,ds:0xb2995427
  403966:	addr16 mov ch,0x2e
  403969:	push   ebx
  40396a:	bound  edi,QWORD PTR [edx+ebp*1]
  40396d:	jecxz  0x4039b2
  40396f:	xor    eax,0xffc2f09e
  403974:	xor    BYTE PTR [ecx+0x11],ah
  403977:	loopne 0x403919
  403979:	test   DWORD PTR [edi-0x7b],esp
  40397c:	into   
  40397d:	pushf  
  40397e:	jbe    0x4039ac
  403980:	jo     0x403985
  403982:	and    cl,dh
  403984:	inc    ebp
  403985:	push   ds
  403986:	cmp    edi,ebp
  403988:	rcl    DWORD PTR [eax+0x60f69f21],cl
  40398e:	jne    0x4039c7
  403990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403991:	ficomp WORD PTR [eax+edi*1]
  403994:	mov    ss,ecx
  403996:	ret    
  403997:	rcl    BYTE PTR [ecx+0x69e7782e],1
  40399d:	push   ds
  40399e:	rol    BYTE PTR [esp+ebp*4+0x1dce40ab],cl
  4039a5:	int3   
  4039a6:	push   DWORD PTR [eax-0x10f9b38c]
  4039ac:	xchg   edx,eax
  4039ad:	sbb    edi,eax
  4039af:	and    DWORD PTR [edx+edi*8+0x7b0f7622],ebx
  4039b6:	adc    al,0x9e
  4039b8:	cli    
  4039b9:	je     0x4039fd
  4039bb:	sub    DWORD PTR [edx],eax
  4039bd:	and    edx,0x46777334
  4039c3:	test   eax,0x73f206f5
  4039c8:	in     eax,dx
  4039c9:	scas   al,BYTE PTR es:[edi]
  4039ca:	mov    DWORD PTR [edx],esp
  4039cc:	in     eax,dx
  4039cd:	mov    al,0xea
  4039cf:	mov    al,ds:0xac2655b
  4039d4:	ret    
  4039d5:	cs pop ebp
  4039d7:	out    0x27,eax
  4039d9:	jae    0x403966
  4039db:	pop    edi
  4039dc:	push   ecx
  4039dd:	add    DWORD PTR ss:[esi+eax*8-0x6b01ba84],esp
  4039e5:	xchg   DWORD PTR [ebx+edx*1-0x7a8fdadd],esp
  4039ec:	out    dx,al
  4039ed:	cmp    BYTE PTR [ebx-0x2ca216b0],dl
  4039f3:	sbb    al,0x62
  4039f5:	xor    eax,0xdf361937
  4039fa:	jmp    0xb581:0xe2dba349
  403a01:	sub    DWORD PTR [edx+eax*4],esi
  403a04:	and    DWORD PTR [esi+0x38],0x76
  403a08:	sub    BYTE PTR [ebp+0x77],dl
  403a0b:	jp     0x403a33
  403a0d:	jbe    0x403a53
  403a0f:	fld    DWORD PTR [ecx]
  403a11:	scas   al,BYTE PTR es:[edi]
  403a12:	push   edx
  403a13:	mov    ch,0xf0
  403a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a16:	xchg   DWORD PTR [ecx+0x276565aa],ebp
  403a1c:	sbb    ah,ch
  403a1e:	inc    edi
  403a1f:	scas   al,BYTE PTR es:[edi]
  403a20:	adc    al,0x7d
  403a22:	out    dx,al
  403a23:	sub    DWORD PTR [edi-0x79],0x880e5cda
  403a2a:	sub    al,0x2f
  403a2c:	xchg   ebx,eax
  403a2d:	cmc    
  403a2e:	scas   eax,DWORD PTR es:[edi]
  403a2f:	rol    BYTE PTR [edx-0x1],cl
  403a32:	ret    0x99b2
  403a35:	call   DWORD PTR [ecx+0xd]
  403a38:	pop    es
  403a39:	jecxz  0x4039fd
  403a3b:	jle    0x403a21
  403a3d:	fdiv   QWORD PTR [ebp-0x2c916a07]
  403a43:	bound  edx,QWORD PTR [ebx+0xd]
  403a46:	dec    esp
  403a47:	or     DWORD PTR [ecx],esp
  403a49:	(bad)
  403a4d:	jecxz  0x403ac4
  403a4f:	add    BYTE PTR ds:[ebx+ecx*2],al
  403a53:	shr    DWORD PTR [eax-0x9],0x12
  403a57:	xchg   edi,eax
  403a58:	out    dx,al
  403a59:	loopne 0x403aa4
  403a5b:	into   
  403a5c:	or     DWORD PTR [ebp+0x422d2dba],edx
  403a62:	and    edi,0xffffff8b
  403a65:	repnz mov al,0x23
  403a68:	pop    esi
  403a69:	or     eax,0x21fce845
  403a6e:	inc    edx
  403a6f:	xchg   esi,eax
  403a70:	test   DWORD PTR [esp+esi*4+0x61],edi
  403a74:	les    edx,FWORD PTR [ebx+0x8]
  403a77:	xchg   ebx,eax
  403a78:	dec    esp
  403a79:	adc    dh,ch
  403a7b:	add    DWORD PTR [edx+ebx*8],eax
  403a7e:	pop    ds
  403a7f:	cmp    DWORD PTR [ebx],esp
  403a81:	sub    eax,eax
  403a83:	adc    ebp,ebx
  403a85:	(bad)  
  403a86:	mov    eax,ds:0xf30330fc
  403a8c:	(bad)  
  403a8e:	mov    edi,edx
  403a90:	or     bl,ch
  403a92:	cwde   
  403a93:	or     ax,di
  403a96:	dec    ebx
  403a97:	xor    al,0x13
  403a99:	sub    ecx,DWORD PTR [esi+0x436e7ce0]
  403a9f:	push   ecx
  403aa0:	sbb    BYTE PTR [ecx+edx*1-0x32],bh
  403aa4:	loope  0x403b13
  403aa6:	std    
  403aa7:	cmp    DWORD PTR [edx+eax*2],ebp
  403aaa:	dec    ecx
  403aab:	fdivr  DWORD PTR [ebp+0x72]
  403aae:	(bad)  
  403aaf:	in     eax,dx
  403ab0:	lods   al,BYTE PTR ds:[esi]
  403ab1:	into   
  403ab2:	fxch   st(2)
  403ab4:	add    al,0xa9
  403ab6:	lahf   
  403ab7:	push   esi
  403ab8:	scas   eax,DWORD PTR es:[edi]
  403ab9:	mov    ch,0x94
  403abb:	add    ch,bl
  403abd:	jb     0x403b28
  403abf:	add    ebx,ebx
  403ac1:	addr16 push ebx
  403ac3:	(bad)  
  403ac4:	popf   
  403ac5:	in     al,0x67
  403ac7:	push   edi
  403ac8:	and    BYTE PTR [edi],al
  403aca:	fsqrt  
  403acc:	mov    ds:0x659166a4,eax
  403ad1:	rcl    BYTE PTR [ecx+edx*2-0x66ac89cb],0xa6
  403ad9:	cmc    
  403ada:	cdq    
  403adb:	mov    eax,ds:0xdd2e48be
  403ae0:	fsub   st(4),st
  403ae2:	popf   
  403ae3:	jle    0x403b63
  403ae5:	dec    ebp
  403ae6:	pop    ss
  403ae7:	cli    
  403ae8:	or     BYTE PTR [edi],ch
  403aea:	sbb    edx,DWORD PTR [ecx+0x57]
  403aed:	jbe    0x403b59
  403aef:	lea    eax,[edx-0x3b]
  403af2:	push   0x47
  403af4:	add    eax,0x6f55a566
  403af9:	ror    bl,1
  403afb:	push   0xff1df01f
  403b00:	pop    ecx
  403b01:	xchg   esi,eax
  403b02:	or     cl,al
  403b04:	outs   dx,DWORD PTR ds:[esi]
  403b05:	dec    ebp
  403b06:	mov    WORD PTR [edi-0x44],gs
  403b09:	dec    esi
  403b0a:	push   ds
  403b0b:	push   esp
  403b0c:	(bad)  
  403b0d:	jl     0x403b63
  403b0f:	ss inc edi
  403b11:	xor    al,0x65
  403b13:	or     esp,DWORD PTR [ecx-0x56]
  403b16:	neg    DWORD PTR [edi-0x54]
  403b19:	enter  0x464,0x91
  403b1d:	pop    edx
  403b1e:	sbb    DWORD PTR [edi+esi*8-0x71],ecx
  403b22:	and    al,0x28
  403b24:	inc    esp
  403b25:	popa   
  403b26:	(bad)  
  403b27:	and    dl,al
  403b29:	mov    edi,0xc1785bd8
  403b2e:	scas   eax,DWORD PTR es:[edi]
  403b2f:	sub    bh,BYTE PTR [edx]
  403b31:	into   
  403b32:	bswap  ebx
  403b34:	(bad)  
  403b35:	jmp    0x59b19c1d
  403b3a:	jmp    0xb03e:0x80194427
  403b41:	xchg   BYTE PTR [eax],bh
  403b43:	mov    dl,0x30
  403b45:	setnp  BYTE PTR [ebx+ecx*4-0x49]
  403b4a:	and    BYTE PTR [bp+si-0x28],al
  403b4e:	neg    eax
  403b50:	cwde   
  403b51:	pop    eax
  403b52:	imul   eax,DWORD PTR [esi-0x58dd0f2a],0xffffffc0
  403b59:	popf   
  403b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b5b:	jns    0x403b6d
  403b5d:	fdiv   st,st(7)
  403b5f:	rol    DWORD PTR [ecx-0x3e89209b],0x3b
  403b66:	push   edx
  403b67:	inc    ebp
  403b68:	outs   dx,BYTE PTR ds:[esi]
  403b69:	jo     0x403b09
  403b6b:	lock add BYTE PTR [ecx-0x62],al
  403b6f:	mov    ch,0xc7
  403b71:	and    eax,0x362f3c72
  403b76:	inc    eax
  403b77:	cld    
  403b78:	lea    eax,[esi]
  403b7a:	mov    DWORD PTR [ebx+0x67],edi
  403b7d:	mov    eax,0x7e78c0b
  403b82:	sub    al,0xee
  403b84:	pop    eax
  403b85:	push   ss
  403b86:	in     al,dx
  403b87:	xor    al,0x84
  403b89:	and    eax,0x527da0f4
  403b8e:	jmp    DWORD PTR [ecx+0x7dd07f57]
  403b94:	cmp    DWORD PTR [ecx+0x1e],eax
  403b97:	xor    al,0xcd
  403b99:	sub    eax,0x4a86fb76
  403b9e:	fcmovnu st,st(1)
  403ba0:	xchg   esi,eax
  403ba1:	xchg   edi,eax
  403ba2:	int    0x7e
  403ba4:	ins    DWORD PTR es:[edi],dx
  403ba5:	rol    BYTE PTR [eax],0x62
  403ba8:	xor    esi,0x6b
  403bab:	jmp    0x9fc34d4a
  403bb0:	jno    0x403b6b
  403bb2:	into   
  403bb3:	xchg   dx,ax
  403bb5:	stos   DWORD PTR es:[edi],eax
  403bb6:	pop    ss
  403bb7:	ja     0x403b78
  403bb9:	push   ebp
  403bba:	test   eax,0x21387b89
  403bbf:	fcom   DWORD PTR [edx-0x36ed1986]
  403bc5:	xchg   edx,eax
  403bc6:	push   ecx
  403bc7:	sub    DWORD PTR [edi-0x18878bb9],ebx
  403bcd:	mov    dh,0x27
  403bcf:	xor    eax,0x22fcf896
  403bd4:	ja     0x403c40
  403bd6:	ss std 
  403bd8:	push   ss
  403bd9:	call   0xf154:0x8ed76fed
  403be0:	cmp    BYTE PTR [ebp-0x21fab72c],bh
  403be6:	and    al,0xbf
  403be8:	lea    esp,[esi-0x35]
  403beb:	mov    bh,cl
  403bed:	jmp    0xb408:0x785f1b79
  403bf4:	lock imul edx,ecx,0xcade22e0
  403bfb:	rcl    BYTE PTR [esi],cl
  403bfd:	aaa    
  403bfe:	push   ss
  403bff:	jae    0x403c5a
  403c01:	jl     0x403c59
  403c03:	xlat   BYTE PTR ds:[ebx]
  403c04:	icebp  
  403c05:	int3   
  403c06:	mov    ecx,0x8a25571c
  403c0b:	add    DWORD PTR [edx-0x4b53b4f1],ebp
  403c11:	and    ah,BYTE PTR [edi+0x33]
  403c14:	addr16 sub eax,0xf4eef071
  403c1a:	sbb    cl,BYTE PTR [ecx-0x2ebf605c]
  403c20:	daa    
  403c21:	mov    edi,0x3f1222a7
  403c26:	pop    edi
  403c27:	jg     0x403c83
  403c29:	xor    eax,0x68277e58
  403c2e:	xchg   DWORD PTR [ebp+0x7c],ebx
  403c31:	cdq    
  403c32:	in     al,dx
  403c33:	ret    
  403c34:	pop    ds
  403c35:	imul   esi,edi,0x8eefa343
  403c3b:	mov    ebp,0xc51d0e3f
  403c40:	jl     0x403c88
  403c42:	cld    
  403c43:	ins    BYTE PTR es:[edi],dx
  403c44:	idiv   DWORD PTR [ecx+0x1b]
  403c47:	mov    cl,0x84
  403c49:	lock mov al,ds:0x1ce41813
  403c4f:	push   eax
  403c50:	bound  edx,QWORD PTR [esp+esi*8-0x1663092d]
  403c57:	or     ebp,edx
  403c59:	fneni(8087 only) 
  403c5b:	mov    dl,0x27
  403c5d:	xchg   esp,eax
  403c5e:	in     al,0xfe
  403c60:	hlt    
  403c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c62:	pop    ds
  403c63:	ret    
  403c64:	out    dx,eax
  403c65:	xchg   edi,eax
  403c66:	dec    DWORD PTR [edx-0x57b7d757]
  403c6c:	push   edx
  403c6d:	repz push 0xfa503e8d
  403c73:	xchg   ebp,eax
  403c74:	add    BYTE PTR [ebx-0x6f2becef],0x5
  403c7b:	xchg   ecx,eax
  403c7c:	fdiv   DWORD PTR [edi]
  403c7e:	xchg   ecx,eax
  403c7f:	push   esp
  403c80:	pushf  
  403c81:	xchg   edx,eax
  403c82:	mov    al,0x69
  403c84:	jmp    0x403c77
  403c86:	inc    ecx
  403c87:	mov    ds:0x3df0fd30,eax
  403c8c:	sbb    BYTE PTR [edx-0x67525915],0xc5
  403c93:	push   ebx
  403c94:	mov    ebx,0xff975460
  403c99:	xlat   BYTE PTR ds:[ebx]
  403c9a:	jecxz  0x403c27
  403c9c:	add    DWORD PTR [esi+0x68],ecx
  403c9f:	sbb    al,0xb9
  403ca1:	add    DWORD PTR [edx+0x9d51322],esi
  403ca7:	(bad)  
  403ca8:	sub    bl,BYTE PTR [ebx+0x7c]
  403cab:	ds jl  0x403cad
  403cae:	push   ss
  403caf:	mov    ecx,0x362686ef
  403cb4:	repnz sar DWORD PTR [eax],cl
  403cb7:	pop    ds
  403cb8:	sub    eax,0x8a9b22af
  403cbd:	test   cl,al
  403cbf:	cdq    
  403cc0:	ins    DWORD PTR es:[edi],dx
  403cc1:	mov    ebp,es
  403cc3:	adc    bh,dh
  403cc5:	lods   al,BYTE PTR ds:[esi]
  403cc6:	pop    edi
  403cc7:	inc    ecx
  403cc8:	push   ebx
  403cc9:	xchg   ebp,eax
  403cca:	cmp    BYTE PTR [ebx-0x34],ch
  403ccd:	fistp  DWORD PTR [edi+ecx*8-0x42]
  403cd1:	in     al,dx
  403cd2:	call   0x1f4bda09
  403cd7:	in     al,0x64
  403cd9:	(bad)  
  403cda:	xchg   DWORD PTR [ebx],eax
  403cdc:	push   esp
  403cdd:	jb     0x403cb7
  403cdf:	inc    eax
  403ce0:	lods   eax,DWORD PTR ds:[esi]
  403ce1:	stos   BYTE PTR es:[edi],al
  403ce2:	(bad)  
  403ce3:	fadd   QWORD PTR [ebx]
  403ce5:	xchg   ebp,eax
  403ce6:	jae    0x403cbb
  403ce8:	mov    esp,0x257b73ab
  403ced:	fstp   TBYTE PTR ds:0x7cfbdb4a
  403cf3:	fistp  WORD PTR [edi+ebp*8+0x14]
  403cf7:	loopne 0x403d09
  403cf9:	sub    eax,edi
  403cfb:	ret    
  403cfc:	push   ss
  403cfd:	jno    0x403d51
  403cff:	leave  
  403d00:	and    ebp,ebp
  403d02:	sbb    edi,DWORD PTR [ebp-0xa]
  403d05:	int    0x97
  403d07:	pop    esi
  403d08:	popf   
  403d09:	mov    bl,0x98
  403d0b:	es fucom st(1)
  403d0e:	mov    dl,0x2f
  403d10:	jmp    0x403d8d
  403d12:	push   ebx
  403d13:	outs   dx,DWORD PTR gs:[esi]
  403d15:	mov    eax,ds:0x6cd34f4b
  403d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d1b:	jmp    0x627b:0x390e1948
  403d22:	lea    edx,[esi]
  403d24:	and    DWORD PTR [ebx+0x34],0x26
  403d28:	stos   DWORD PTR es:[edi],eax
  403d29:	(bad)  
  403d2a:	repnz popf 
  403d2c:	pop    esi
  403d2d:	popf   
  403d2e:	inc    ebx
  403d2f:	sbb    BYTE PTR [ebx],0x5e
  403d32:	das    
  403d33:	scas   eax,DWORD PTR es:[edi]
  403d34:	pop    esi
  403d35:	cmp    eax,DWORD PTR [edi+edi*8-0x3c190f4b]
  403d3c:	test   eax,0x90d51a05
  403d41:	lods   al,BYTE PTR ds:[esi]
  403d42:	sar    BYTE PTR [ecx+eax*8+0x68b523c2],1
  403d49:	ss sbb eax,0x8b070b42
  403d4f:	adc    BYTE PTR [edi],ch
  403d51:	dec    ebp
  403d52:	jns    0x403d5e
  403d54:	(bad)  
  403d55:	pop    esi
  403d56:	jle    0x403d92
  403d58:	pusha  
  403d59:	cmp    eax,0xc7b629aa
  403d5e:	and    BYTE PTR [eax],0x2c
  403d61:	repz das 
  403d63:	out    dx,al
  403d64:	call   0xcf35:0x3c62fa7b
  403d6b:	ja     0x403d75
  403d6d:	loope  0x403d65
  403d6f:	std    
  403d70:	sub    DWORD PTR [edi+0x125b43ed],esp
  403d76:	or     ah,BYTE PTR [eax+0x4e]
  403d79:	mov    ecx,0x49983862
  403d7e:	add    BYTE PTR [eax],bh
  403d80:	push   es
  403d81:	jp     0x403d87
  403d83:	test   BYTE PTR [ebx-0x6daf7a7a],0x94
  403d8a:	cmp    dl,0xa1
  403d8d:	lock xchg ecx,eax
  403d8f:	push   ss
  403d90:	and    DWORD PTR [ecx],ebx
  403d92:	jge    0x403d1d
  403d94:	ficom  DWORD PTR [ebx+0x7d]
  403d97:	inc    edi
  403d98:	div    DWORD PTR [ecx+esi*8+0x79]
  403d9c:	mov    WORD PTR [ecx-0x6f],?
  403d9f:	aam    0xb3
  403da1:	xor    ebp,0xc09605bb
  403da7:	(bad)  
  403da8:	mov    eax,ds:0xd007fa36
  403dad:	mul    ah
  403daf:	hlt    
  403db0:	lods   eax,DWORD PTR ds:[esi]
  403db1:	ficom  DWORD PTR [esp+ecx*1+0x6b4fb9fc]
  403db9:	bswap  esp
  403dbb:	popa   
  403dbc:	pop    ebp
  403dbd:	xor    ecx,esi
  403dbf:	enter  0x770c,0x79
  403dc3:	iret   
  403dc4:	jmp    0xdc1a:0xff78e091
  403dcb:	or     BYTE PTR [eax+0x39],cl
  403dce:	clc    
  403dcf:	fcom   QWORD PTR [edx-0x6c186859]
  403dd5:	adc    DWORD PTR [ecx],eax
  403dd7:	outs   dx,DWORD PTR ds:[esi]
  403dd8:	lods   ax,WORD PTR ds:[esi]
  403dda:	sbb    BYTE PTR [eax+0x7a57890e],al
  403de0:	jbe    0x403d91
  403de2:	mov    dh,0x94
  403de4:	push   edx
  403de5:	inc    ebx
  403de6:	mov    ?,esp
  403de8:	mov    dl,0xf3
  403dea:	mov    ds:0x6aa629b9,al
  403def:	pushf  
  403df0:	sahf   
  403df1:	push   0xdfef51b
  403df6:	arpl   WORD PTR [ebp+0x7050ce02],di
  403dfc:	pop    ds
  403dfd:	push   eax
  403dfe:	sbb    edx,DWORD PTR [edi]
  403e00:	fcomp  DWORD PTR [ebx-0x55]
  403e03:	sub    BYTE PTR [ecx+0x14],dh
  403e06:	mov    WORD PTR [eax+0x15f93ce9],gs
  403e0c:	lods   al,BYTE PTR ds:[esi]
  403e0d:	iret   
  403e0e:	arpl   WORD PTR [ebp-0x28a57fcf],dx
  403e14:	mov    eax,0xb73f51ad
  403e19:	add    DWORD PTR [esp+edi*8],0x86d551d7
  403e20:	sbb    al,0x29
  403e22:	enter  0x1175,0x65
  403e26:	mov    ebx,0xe8414d76
  403e2b:	js     0x403e60
  403e2d:	jmp    0x403e05
  403e2f:	sahf   
  403e30:	add    DWORD PTR [eax],eax
  403e32:	sti    
  403e33:	faddp  st(4),st
  403e35:	xchg   ebp,eax
  403e36:	cmp    al,0x63
  403e38:	pop    ebx
  403e39:	pop    edx
  403e3a:	add    al,0x38
  403e3c:	jg     0x403e21
  403e3e:	fs inc eax
  403e40:	ror    bl,0xab
  403e43:	arpl   bp,ax
  403e45:	call   0x9670:0xa89c57e7
  403e4c:	cmp    bh,BYTE PTR [edx+ecx*8-0x39eb80e8]
  403e53:	sbb    DWORD PTR [ecx+0x32cc500f],edx
  403e59:	or     eax,0xca8a7f66
  403e5e:	fwait
  403e5f:	jl     0x403e9c
  403e61:	and    DWORD PTR [eax+0x7ab8c90],esp
  403e67:	xchg   edx,eax
  403e68:	(bad)  
  403e69:	push   cs
  403e6a:	sbb    al,BYTE PTR [ebp+0x4185c8f8]
  403e70:	inc    ebx
  403e71:	sub    al,0xae
  403e73:	repnz mov ah,0xc1
  403e76:	add    eax,0x8b7fac96
  403e7b:	cmp    eax,0xc538978f
  403e80:	jno    0x403ed6
  403e82:	inc    esp
  403e83:	cs stc 
  403e85:	cmp    ch,ah
  403e87:	mov    cl,0xdb
  403e89:	sar    DWORD PTR [ebx+0x391fe26b],0x53
  403e90:	sub    al,0x44
  403e92:	xor    esi,DWORD PTR [ecx+0x19]
  403e95:	loop   0x403e1b
  403e97:	cwde   
  403e98:	jmp    0xd9b9:0x66bb8bad
  403e9f:	mov    DWORD PTR [ebx+0x59],ebx
  403ea2:	cld    
  403ea3:	adc    bl,BYTE PTR [eax]
  403ea5:	dec    ebx
  403ea6:	sbb    bl,cl
  403ea8:	pop    eax
  403ea9:	ins    DWORD PTR es:[edi],dx
  403eaa:	mov    WORD PTR [edx],?
  403eac:	mov    dl,cl
  403eae:	xlat   BYTE PTR ds:[ebx]
  403eaf:	pop    ebp
  403eb0:	jecxz  0x403f0f
  403eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eb3:	fbld   TBYTE PTR [ebx]
  403eb5:	(bad)  
  403eb6:	into   
  403eb7:	nop
  403eb8:	push   DWORD PTR [esi+0x63363374]
  403ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ebf:	fldenv [ebx]
  403ec1:	in     al,dx
  403ec2:	push   ds
  403ec3:	rcr    BYTE PTR [edi],0xcb
  403ec6:	iret   
  403ec7:	lods   eax,DWORD PTR ds:[esi]
  403ec8:	xlat   BYTE PTR ds:[ebx]
  403ec9:	arpl   WORD PTR [ecx+0x1],bp
  403ecc:	xor    al,0x9
  403ece:	xchg   esp,eax
  403ecf:	sar    DWORD PTR [eax-0xc],0x55
  403ed3:	pop    ecx
  403ed4:	(bad)  
  403ed5:	and    DWORD PTR fs:[esi+0x77a15d8f],edx
  403edc:	out    dx,al
  403edd:	mov    edx,0x64d75c64
  403ee2:	push   ecx
  403ee3:	mov    ecx,0x84d645ca
  403ee8:	or     eax,0x49e642cd
  403eed:	les    eax,FWORD PTR ds:0xb0bb7d0c
  403ef3:	cmp    eax,0xe926cec5
  403ef8:	xchg   al,bl
  403efa:	mov    ch,0x12
  403efc:	and    ebp,eax
  403efe:	out    dx,al
  403eff:	int3   
  403f00:	inc    esp
  403f01:	push   ecx
  403f02:	push   0x351c577e
  403f07:	cld    
  403f08:	fadd   QWORD PTR [ebp-0x3436d3a0]
  403f0e:	in     al,dx
  403f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f10:	ret    
  403f11:	sahf   
  403f12:	(bad)  
  403f13:	addr16 call 0x8162:0x58d4a49d
  403f1b:	into   
  403f1c:	aad    0x85
  403f1e:	lahf   
  403f1f:	mov    dl,0x11
  403f21:	(bad)  
  403f22:	repnz push edx
  403f24:	add    DWORD PTR [edi],eax
  403f26:	xor    ebx,edx
  403f28:	xor    eax,0xac22000a
  403f2d:	xor    bh,BYTE PTR [edi-0x34]
  403f30:	push   ecx
  403f31:	pop    ecx
  403f32:	mov    ds:0x335fe1ba,al
  403f37:	xchg   esi,eax
  403f38:	int    0xb4
  403f3a:	test   al,0xfb
  403f3c:	mov    edi,ecx
  403f3e:	enter  0x3fa3,0x9d
  403f42:	les    edi,FWORD PTR [ecx]
  403f44:	push   0x47
  403f46:	jne    0x403f97
  403f48:	enter  0x4471,0x1d
  403f4c:	lds    esi,FWORD PTR [eax+edx*2]
  403f4f:	inc    edx
  403f50:	mov    cl,0xe0
  403f52:	pop    edi
  403f53:	les    esp,FWORD PTR [ebx+eax*8+0x11]
  403f57:	rol    BYTE PTR [esi-0x44],1
  403f5a:	and    DWORD PTR [eax+0x7],esp
  403f5d:	and    dh,BYTE PTR [edi-0xe]
  403f60:	pushf  
  403f61:	sbb    bl,BYTE PTR [eax+0x68]
  403f64:	daa    
  403f65:	cld    
  403f66:	arpl   WORD PTR [edx-0x765dbc10],si
  403f6c:	out    0x2,eax
  403f6e:	repz sbb al,0xa2
  403f71:	adc    eax,0xac6c808c
  403f76:	push   dx
  403f78:	jae    0x403f66
  403f7a:	repnz xor edi,DWORD PTR [edi+ecx*1]
  403f7e:	sub    DWORD PTR [esp+edx*2+0x2d061b27],ebp
  403f85:	jmp    0x403fdf
  403f87:	jge    0x403f7f
  403f89:	fnsave [edi]
  403f8b:	in     eax,0x23
  403f8d:	push   esi
  403f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f8f:	addr16 nop
  403f91:	iret   
  403f92:	and    ah,BYTE PTR [eax-0x13]
  403f95:	push   esp
  403f96:	ror    BYTE PTR [eax],cl
  403f98:	clc    
  403f99:	pop    esp
  403f9a:	xchg   esp,eax
  403f9b:	dec    ebx
  403f9c:	sub    DWORD PTR [ebp-0x5bfbe9b0],esi
  403fa2:	mov    WORD PTR [ebx],cs
  403fa4:	loop   0x403f2b
  403fa6:	fadd   QWORD PTR [ebx]
  403fa8:	(bad)  [bx+di+0x7]
  403fac:	in     al,0xc9
  403fae:	inc    edi
  403faf:	jge    0x403ff8
  403fb1:	inc    edi
  403fb2:	dec    edx
  403fb3:	sbb    ebp,DWORD PTR [esi]
  403fb5:	push   edx
  403fb6:	dec    ebp
  403fb7:	lds    edx,FWORD PTR [edi+0x2d6faf34]
  403fbd:	inc    edx
  403fbe:	fisttp DWORD PTR ds:0x7f82cab3
  403fc4:	mov    dh,0x18
  403fc6:	sbb    DWORD PTR [esi-0x255e8dfc],esi
  403fcc:	sbb    DWORD PTR [esi-0x2],0xb4cde04f
  403fd3:	mov    al,cl
  403fd5:	cmp    eax,0xc66cb208
  403fda:	repz add BYTE PTR [edi+0x48],al
  403fde:	test   DWORD PTR gs:[edi+0x3b],0x5f4e903
  403fe6:	sub    DWORD PTR [edx],ebp
  403fe8:	xor    eax,0xdf2efe6c
  403fed:	out    0x6b,eax
  403fef:	xor    esp,ecx
  403ff1:	clc    
  403ff2:	sar    BYTE PTR [eax+0x76396a55],1
  403ff8:	push   esp
  403ff9:	ret    
  403ffa:	repz mov dl,0xbd
  403ffd:	(bad)  
  403ffe:	mov    esp,0x810ea583
  404003:	jbe    0x40401b
  404005:	test   BYTE PTR [edx+0x20],dl
  404008:	das    
  404009:	pop    ebx
  40400a:	(bad)  
  40400b:	sbb    edi,DWORD PTR [esi+0x1e]
  40400e:	in     eax,0x66
  404010:	jno    0x403fb2
  404012:	call   0x8ccf:0xd32dc6bc
  404019:	sub    BYTE PTR [ebx+0x23eca810],bl
  40401f:	and    ch,BYTE PTR [edx]
  404021:	popa   
  404022:	pop    esi
  404023:	mov    edx,0xe0f4f189
  404028:	adc    al,0xd0
  40402a:	test   al,0x61
  40402c:	pop    ebx
  40402d:	mov    dx,di
  404030:	out    0xef,al
  404032:	fs push eax
  404034:	jae    0x4040ae
  404036:	jle    0x40408a
  404038:	rcr    edx,cl
  40403a:	inc    BYTE PTR [edi-0x50e15e1d]
  404040:	dec    esp
  404041:	or     DWORD PTR [edi-0x48],ecx
  404044:	sub    BYTE PTR [ecx],bh
  404046:	sbb    al,0xdb
  404048:	aad    0xce
  40404a:	mov    dl,0x70
  40404c:	ja     0x403ffe
  40404e:	xchg   esi,eax
  40404f:	arpl   WORD PTR [edi],ax
  404051:	adc    eax,DWORD PTR [ebp+0x51216c4b]
  404057:	pop    es
  404058:	fist   DWORD PTR [ebx-0x33]
  40405b:	sub    ah,BYTE PTR [edi+0x2f]
  40405e:	bound  ebx,QWORD PTR [ebx]
  404060:	je     0x404046
  404062:	call   0x393a:0xbdbef30a
  404069:	les    esp,FWORD PTR [ebx]
  40406b:	mov    esi,0xa6226107
  404070:	jmp    FWORD PTR [esi+esi*8]
  404073:	fild   DWORD PTR [eax-0x64]
  404076:	adc    al,0x49
  404078:	(bad)
  40407c:	or     esi,DWORD PTR [esi+0x3d]
  40407f:	jb     0x4040e8
  404081:	xchg   ecx,eax
  404082:	es into 
  404084:	add    bl,bh
  404086:	pop    ds
  404087:	jae    0x404060
  404089:	popf   
  40408a:	data16 icebp 
  40408c:	push   sp
  40408e:	ins    BYTE PTR es:[edi],dx
  40408f:	mov    bl,0x66
  404091:	mov    dl,0xee
  404093:	dec    edx
  404094:	aaa    
  404095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404096:	scas   al,BYTE PTR es:[edi]
  404097:	add    DWORD PTR [ecx-0x1ddc903b],esp
  40409d:	add    ah,ch
  40409f:	mov    bl,0x20
  4040a1:	retf   
  4040a2:	aam    0x4d
  4040a4:	xchg   DWORD PTR [ebp+0x520f21fc],ecx
  4040aa:	xor    eax,0x9a3829ba
  4040af:	pop    edi
  4040b0:	mov    ebp,?
  4040b2:	mov    DWORD PTR [ecx],ebp
  4040b4:	and    bh,BYTE PTR [ecx-0x404d66d9]
  4040ba:	add    BYTE PTR [ebx],bh
  4040bc:	push   edi
  4040bd:	mul    BYTE PTR [esi+0x768c9855]
  4040c3:	dec    esi
  4040c4:	dec    edx
  4040c5:	jmp    0x5c29:0xbea1a2e1
  4040cc:	cli    
  4040cd:	(bad)  
  4040ce:	jge    0x4040df
  4040d0:	(bad)  
  4040d1:	cmp    DWORD PTR [ebp-0x177334c2],edi
  4040d7:	in     eax,0x62
  4040d9:	and    BYTE PTR ds:0xd6663dea,ch
  4040df:	mov    ds:0xc5466e96,eax
  4040e4:	or     eax,0x875731c0
  4040e9:	push   cs
  4040ea:	cs dec esp
  4040ec:	je     0x40410b
  4040ee:	ins    BYTE PTR es:[edi],dx
  4040ef:	adc    al,0x99
  4040f1:	scas   eax,DWORD PTR es:[edi]
  4040f2:	pop    ss
  4040f3:	cld    
  4040f4:	sbb    eax,0x4915e503
  4040f9:	and    al,0x20
  4040fb:	outs   dx,BYTE PTR ds:[esi]
  4040fc:	ret    0x99da
  4040ff:	sar    BYTE PTR [edi],cl
  404101:	mov    es,WORD PTR gs:[eax+0x41]
  404105:	ins    BYTE PTR es:[edi],dx
  404106:	and    BYTE PTR [eax],0x5b
  404109:	aad    0xe8
  40410b:	pop    es
  40410c:	out    0x95,eax
  40410e:	add    al,0xc3
  404110:	mov    ebx,0x576105b8
  404115:	adc    dh,al
  404117:	push   esi
  404118:	test   edx,ebp
  40411a:	sbb    esp,ebp
  40411c:	pusha  
  40411d:	hlt    
  40411e:	pop    es
  40411f:	mov    al,ds:0x144e73c5
  404124:	mov    edi,0x9445381a
  404129:	outs   dx,BYTE PTR ds:[esi]
  40412a:	push   ecx
  40412b:	in     eax,dx
  40412c:	mov    cl,0xde
  40412e:	add    dh,al
  404130:	mov    esp,0xffd0a8d
  404135:	sub    BYTE PTR [ecx+edi*1-0x4c53980e],bl
  40413c:	sbb    esi,ebx
  40413e:	js     0x4041be
  404140:	loop   0x404105
  404142:	cs jb  0x404172
  404145:	push   esi
  404146:	inc    edi
  404147:	sti    
  404148:	les    esp,FWORD PTR [edx+eiz*1]
  40414b:	int    0xc0
  40414d:	dec    edi
  40414e:	push   ss
  40414f:	js     0x404149
  404151:	dec    ebx
  404152:	xchg   esi,eax
  404153:	xchg   DWORD PTR [esi+edi*2],esp
  404156:	mov    edi,0x5aaadf65
  40415b:	dec    ecx
  40415c:	dec    ebx
  40415d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40415e:	inc    ebx
  40415f:	enter  0xa95,0x37
  404163:	into   
  404164:	retf   0x9422
  404167:	pop    ebx
  404168:	ins    DWORD PTR es:[edi],dx
  404169:	or     BYTE PTR [ebx+0x29],0x5d
  40416d:	stos   BYTE PTR es:[edi],al
  40416e:	xor    al,0xc3
  404170:	(bad)  
  404172:	enter  0xd66c,0x15
  404176:	inc    BYTE PTR [edx+ecx*4-0x6]
  40417a:	int    0x6
  40417c:	ficomp DWORD PTR [eax+0x2ea18373]
  404182:	push   edi
  404183:	xchg   edi,eax
  404184:	inc    esi
  404185:	dec    edi
  404186:	add    al,0x8b
  404188:	mov    WORD PTR [ebx+0x2605d1da],gs
  40418e:	xchg   esi,eax
  40418f:	jmp    DWORD PTR [ebp+0x211d7300]
  404195:	in     al,dx
  404196:	ins    DWORD PTR es:[edi],dx
  404197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404199:	pop    esi
  40419a:	lods   al,BYTE PTR ds:[esi]
  40419b:	inc    ecx
  40419c:	mov    ebx,0xc81f51cb
  4041a1:	and    dh,ah
  4041a3:	xchg   ebx,eax
  4041a4:	test   esi,0x3a5ea863
  4041aa:	sub    DWORD PTR [edi-0x38],ecx
  4041ad:	or     ebx,DWORD PTR [ebx+esi*4]
  4041b0:	xor    bh,cl
  4041b2:	sbb    bl,BYTE PTR [ebp-0x730f68e9]
  4041b8:	xchg   al,ah
  4041ba:	inc    esi
  4041bb:	mov    ch,0x8a
  4041bd:	mov    eax,0xf5438df0
  4041c2:	xchg   edx,eax
  4041c3:	in     al,dx
  4041c4:	loop   0x4041ef
  4041c6:	inc    edx
  4041c7:	ss pop eax
  4041c9:	popf   
  4041ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041cb:	sbb    al,cl
  4041cd:	xor    al,0xbe
  4041cf:	and    al,BYTE PTR [ebp-0x4]
  4041d2:	ret    0x2e0d
  4041d5:	xchg   edx,eax
  4041d6:	das    
  4041d7:	adc    edx,edi
  4041d9:	xchg   ecx,eax
  4041da:	adc    BYTE PTR [eax+0x18],dh
  4041dd:	push   ebx
  4041de:	jb     0x404224
  4041e0:	inc    ecx
  4041e1:	pop    esi
  4041e2:	(bad)  
  4041e4:	loopne 0x404238
  4041e6:	cwde   
  4041e7:	mov    edx,0x507f702b
  4041ec:	sub    DWORD PTR [ebx],ebx
  4041ee:	sbb    al,0x32
  4041f0:	das    
  4041f1:	hlt    
  4041f2:	xchg   BYTE PTR [eax+0x1e],ch
  4041f5:	mul    BYTE PTR [edx]
  4041f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041f8:	test   eax,0x4832f4df
  4041fd:	dec    ebx
  4041fe:	mov    dl,0xaf
  404200:	lods   eax,DWORD PTR ds:[esi]
  404201:	and    BYTE PTR [esi-0xe],ch
  404204:	dec    edi
  404205:	test   al,ah
  404207:	sbb    eax,0x185ce493
  40420c:	xchg   ecx,eax
  40420d:	dec    edx
  40420e:	adc    BYTE PTR [ecx+0x7b18762a],bl
  404214:	(bad)  
  404216:	aad    0x2c
  404218:	hlt    
  404219:	jmp    0xa262:0xe46facba
  404220:	jmp    0x4041b1
  404222:	mov    bl,0x91
  404224:	lahf   
  404225:	gs out 0x5e,al
  404228:	shl    DWORD PTR [ebx+ecx*8+0x1ac8a56],0x88
  404230:	inc    ebp
  404231:	fst    QWORD PTR [edx-0x72]
  404234:	out    dx,eax
  404235:	call   0x11b859a5
  40423a:	mov    edx,0x63ccab30
  40423f:	adc    edx,eax
  404241:	imul   ch
  404243:	idiv   DWORD PTR [eax-0x1b]
  404246:	in     al,0xa8
  404248:	aaa    
  404249:	test   DWORD PTR [ebp+ebx*8-0x6f],edx
  40424d:	loop   0x404248
  40424f:	mov    edi,0x75fe3f79
  404254:	out    dx,al
  404255:	dec    ebp
  404256:	cmp    al,0x63
  404258:	dec    edx
  404259:	pop    eax
  40425a:	cmp    eax,0x5d5408a2
  40425f:	lds    ecx,FWORD PTR [eax-0x16978680]
  404265:	stos   DWORD PTR es:[edi],eax
  404266:	lock pop edi
  404268:	scas   al,BYTE PTR es:[edi]
  404269:	sbb    DWORD PTR [esi+eiz*8-0x7b9ad63],eax
  404270:	outs   dx,BYTE PTR ds:[esi]
  404271:	sub    DWORD PTR [edi-0x168c004a],esi
  404277:	scas   al,BYTE PTR es:[edi]
  404278:	mov    eax,fs:0xa41a4495
  40427e:	lock cmp ecx,esi
  404281:	inc    ebp
  404282:	loope  0x4042c8
  404284:	jl     0x4042c9
  404286:	and    al,ch
  404288:	push   ss
  404289:	and    eax,0x1d0c5c10
  40428e:	std    
  40428f:	outs   dx,BYTE PTR ds:[esi]
  404290:	fcom   DWORD PTR [ecx]
  404292:	test   BYTE PTR [esi-0x2b50d1f1],cl
  404298:	out    dx,al
  404299:	call   0xf40c:0x695f6dac
  4042a0:	jp     0x40426e
  4042a2:	mov    bh,0xd9
  4042a4:	xchg   edx,eax
  4042a5:	fnstsw WORD PTR [edx-0x53158771]
  4042ab:	data16 add al,0x4a
  4042af:	or     eax,0x2b2d408e
  4042b4:	or     eax,0xe5ac9c89
  4042b9:	mov    BYTE PTR [ecx-0x50],dh
  4042bc:	ret    0xfa0a
  4042bf:	imul   esi,edi,0xc334635c
  4042c5:	pop    ss
  4042c6:	inc    ebx
  4042c7:	out    dx,eax
  4042c8:	add    bl,dh
  4042ca:	mov    ecx,0xd7349799
  4042cf:	adc    cl,bl
  4042d1:	inc    esi
  4042d2:	cmp    eax,0xd48aecbf
  4042d7:	sbb    edx,edi
  4042d9:	hlt    
  4042da:	(bad)  
  4042db:	shr    dl,0x13
  4042de:	xchg   esp,eax
  4042df:	or     BYTE PTR [ebx+0x9],dh
  4042e2:	test   eax,0x1c473e43
  4042e7:	mov    al,BYTE PTR [edi]
  4042e9:	xchg   edx,eax
  4042ea:	xchg   ebx,eax
  4042eb:	outs   dx,BYTE PTR ds:[esi]
  4042ec:	mul    BYTE PTR [eax+0x168162b8]
  4042f2:	int    0xd9
  4042f4:	fiadd  DWORD PTR [ebp+0x5f]
  4042f7:	jge    0x40432b
  4042f9:	out    0xba,eax
  4042fb:	sub    ch,BYTE PTR [ebx+0x6bb0e9f2]
  404301:	xor    eax,0xedf093
  404306:	dec    esp
  404307:	sub    esp,ebp
  404309:	call   0xf046:0x6cd0e81c
  404310:	cli    
  404311:	dec    ebx
  404312:	sub    esi,DWORD PTR [edx+eiz*8+0x6098fe8a]
  404319:	rcl    BYTE PTR [eax+0x4d753ece],1
  40431f:	fnstcw WORD PTR [ebp+eax*4+0x301695b]
  404326:	jnp    0x4042ab
  404328:	pop    ds
  404329:	enter  0x4013,0x66
  40432d:	(bad)  
  40432e:	mov    ds:0xb119e7b6,eax
  404333:	add    DWORD PTR [eax+eax*8+0x18],eax
  404337:	repnz add BYTE PTR [edx+0x5e],cl
  40433b:	xchg   esp,eax
  40433c:	sbb    BYTE PTR [esi-0x4133e954],0x7f
  404343:	ja     0x40439f
  404345:	mov    esi,0x3c27d5f7
  40434a:	sub    al,0x51
  40434c:	bound  edi,QWORD PTR [edx]
  40434e:	fcmovb st,st(0)
  404350:	inc    eax
  404351:	scas   eax,DWORD PTR es:[edi]
  404352:	mov    esp,0x8e0f71a2
  404357:	dec    ebx
  404358:	xchg   ebp,eax
  404359:	xchg   esi,eax
  40435a:	mov    al,0x7e
  40435c:	dec    esp
  40435d:	js     0x404317
  40435f:	daa    
  404360:	imul   eax,DWORD PTR [ebp+0x49],0xcec7742a
  404367:	jge    0x404322
  404369:	mov    edi,0x1dc75fb7
  40436e:	or     ecx,DWORD PTR [ecx-0x32]
  404371:	jl     0x4042f3
  404373:	(bad)  
  404375:	push   ebx
  404376:	arpl   WORD PTR [eax],ax
  404378:	mov    bh,0xd1
  40437a:	pop    ss
  40437b:	xchg   DWORD PTR ds:0x329872ff,ebp
  404381:	scas   al,BYTE PTR es:[edi]
  404382:	or     eax,0xa549a5b
  404387:	pop    edx
  404388:	adc    DWORD PTR [ecx-0x37],ebp
  40438b:	xchg   cl,ch
  40438d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40438e:	stos   BYTE PTR es:[edi],al
  40438f:	and    bl,ch
  404391:	js     0x40434e
  404393:	push   esp
  404394:	and    al,0xf7
  404396:	xor    dl,al
  404398:	inc    esp
  404399:	fild   QWORD PTR [edx]
  40439b:	comiss xmm5,xmm6
  40439e:	mov    bh,BYTE PTR [ebp+edx*4-0x3f]
  4043a2:	fisttp QWORD PTR [eax+0x3c00b6e9]
  4043a8:	int    0x17
  4043aa:	mov    ebp,0x615626ef
  4043af:	xlat   BYTE PTR ds:[ebx]
  4043b0:	cmp    ah,ch
  4043b2:	sub    ah,dl
  4043b4:	(bad)  
  4043b5:	jmp    0x404357
  4043b7:	imul   ecx,DWORD PTR [edx-0x14],0x31e7c2f6
  4043be:	push   es
  4043bf:	outs   dx,BYTE PTR ds:[esi]
  4043c0:	hlt    
  4043c1:	pop    edx
  4043c2:	push   esi
  4043c3:	nop
  4043c4:	lods   eax,DWORD PTR ds:[esi]
  4043c5:	je     0x40442b
  4043c7:	or     ebx,DWORD PTR [ebx]
  4043c9:	pop    edx
  4043ca:	fdivr  QWORD PTR ds:[ebp+esi*8+0xc820dff]
  4043d2:	pushf  
  4043d3:	pop    es
  4043d4:	sbb    dl,BYTE PTR [ebp+ebp*2-0x14]
  4043d8:	mov    ebx,0x317db03d
  4043dd:	pushf  
  4043de:	icebp  
  4043df:	xor    al,0x15
  4043e1:	fwait
  4043e2:	xor    cl,BYTE PTR [ecx+0x6bf32efb]
  4043e8:	in     eax,dx
  4043e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043ea:	sub    BYTE PTR [eax-0x37a75f9],ah
  4043f0:	cmp    DWORD PTR [eax+0x1c2949c2],edi
  4043f6:	inc    edi
  4043f7:	lea    edi,[edx]
  4043f9:	jl     0x4043bb
  4043fb:	dec    eax
  4043fc:	ficom  WORD PTR [edx]
  4043fe:	leave  
  4043ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404400:	ja     0x404440
  404402:	dec    edx
  404403:	retf   
  404404:	xor    eax,ebx
  404406:	pop    ebp
  404407:	(bad)  
  404408:	leave  
  404409:	push   esi
  40440a:	push   ds
  40440b:	mov    ch,0x28
  40440d:	dec    esp
  40440e:	push   edi
  40440f:	scas   al,BYTE PTR es:[edi]
  404410:	pusha  
  404411:	push   0xffffff94
  404413:	or     cl,BYTE PTR [edx+0x1e41769f]
  404419:	loopne 0x40445c
  40441b:	lahf   
  40441c:	sub    eax,0x6f4216db
  404421:	mov    ch,0xc
  404423:	adc    ah,BYTE PTR [eax]
  404425:	scas   eax,DWORD PTR es:[edi]
  404426:	pop    ds
  404427:	jo     0x404442
  404429:	loope  0x4044a2
  40442b:	cmc    
  40442c:	jne    0x40447e
  40442e:	lds    ebp,FWORD PTR [edx+0x19d79887]
  404434:	lock mov ebp,0x730d1396
  40443a:	enter  0xe67b,0x8
  40443e:	jbe    0x404488
  404440:	jno    0x404426
  404442:	imul   ecx,esi,0x26
  404445:	inc    ebp
  404446:	dec    ebp
  404447:	fs mov bh,0x2
  40444a:	leave  
  40444b:	sbb    bl,0x34
  40444e:	mov    ch,0xb7
  404450:	fiadd  DWORD PTR [edi-0x53]
  404453:	mov    ds:0x56616400,eax
  404458:	or     ebx,eax
  40445a:	pop    ss
  40445b:	inc    ebp
  40445c:	push   edx
  40445d:	jp     0x40444b
  40445f:	cmp    DWORD PTR [edi],edx
  404461:	push   edx
  404462:	cwde   
  404463:	inc    esi
  404464:	(bad)  
  404465:	addr16 jns 0x40442a
  404468:	add    bl,BYTE PTR [ecx+eax*8+0x27086c95]
  40446f:	push   eax
  404470:	adc    edx,DWORD PTR ds:0xb304a908
  404476:	adc    al,0xc8
  404478:	clc    
  404479:	arpl   WORD PTR [ecx+ebp*4+0x5d],sp
  40447d:	test   bl,bh
  40447f:	mov    ch,0xe7
  404481:	push   esp
  404482:	adc    DWORD PTR [edi],edi
  404484:	and    al,0x2a
  404486:	adc    al,0x2e
  404488:	or     al,0xc
  40448a:	fmul   st(4),st
  40448c:	dec    esi
  40448d:	retf   0x3cbb
  404490:	test   eax,0x5e11300d
  404495:	pop    esp
  404496:	jg     0x4044d4
  404498:	mov    ecx,0xcff0cb5c
  40449d:	mov    ds:0x7be45a27,al
  4044a2:	jae    0x404512
  4044a4:	je     0x404457
  4044a6:	and    DWORD PTR [eax+eiz*2+0x44],ebp
  4044aa:	int    0x6
  4044ac:	mov    edx,0x95cd02fa
  4044b1:	xchg   edx,eax
  4044b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b3:	mov    bh,0x74
  4044b5:	push   esp
  4044b6:	jns    0x4044d1
  4044b8:	push   ecx
  4044b9:	fisubr WORD PTR [edi-0x5b5043d6]
  4044bf:	fbstp  TBYTE PTR [ebp-0x54d1466]
  4044c5:	pop    ebp
  4044c6:	arpl   dx,sp
  4044c8:	inc    esi
  4044c9:	adc    BYTE PTR [eax-0x10],0xd
  4044cd:	push   ebp
  4044ce:	or     DWORD PTR [ebx-0x707d3905],esp
  4044d4:	jp     0x4044f5
  4044d6:	mov    dh,0x2f
  4044d8:	out    dx,al
  4044d9:	mov    ecx,0x64e51231
  4044de:	mov    dh,0xa5
  4044e0:	xchg   ebp,eax
  4044e1:	and    eax,0x445a8ea
  4044e6:	xchg   esi,eax
  4044e7:	int3   
  4044e8:	gs jbe 0x404555
  4044eb:	cmp    DWORD PTR [eax],edi
  4044ed:	sti    
  4044ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ef:	adc    BYTE PTR [edx+0x51],0x52
  4044f3:	out    dx,eax
  4044f4:	sub    al,0x91
  4044f6:	rol    BYTE PTR [edx+0x44f34046],cl
  4044fc:	daa    
  4044fd:	xor    DWORD PTR [eax+ebp*2],esp
  404500:	mov    ebx,0x11196f42
  404505:	add    DWORD PTR [ecx],eax
  404507:	sub    ah,BYTE PTR [edx-0x2a]
  40450a:	aam    0xd6
  40450c:	bound  esp,QWORD PTR [ecx-0x165a9719]
  404512:	xchg   esp,eax
  404513:	mov    eax,ds:0xc0340764
  404519:	push   edx
  40451a:	psraw  mm7,QWORD PTR [ebp-0x5d86f409]
  404521:	ins    BYTE PTR es:[edi],dx
  404522:	pop    edx
  404523:	in     eax,dx
  404524:	ret    
  404525:	add    BYTE PTR [ebx+0x2ef05a65],bh
  40452b:	bound  ecx,QWORD PTR [edx-0x43ee25c7]
  404531:	mov    ch,0x92
  404533:	out    dx,al
  404534:	push   0xffffffa3
  404536:	daa    
  404537:	mov    ds:0x5c5108d9,eax
  40453c:	xchg   DWORD PTR [esp+edx*4],esp
  40453f:	mov    BYTE PTR [si],bl
  404542:	adc    al,0x36
  404544:	aaa    
  404545:	mov    ebp,0x26d09b3a
  40454a:	fs mov dl,0xd9
  40454d:	xchg   DWORD PTR [eax],esp
  40454f:	push   esi
  404550:	xchg   ecx,eax
  404551:	sbb    al,0x46
  404553:	out    dx,eax
  404554:	lods   eax,DWORD PTR ds:[esi]
  404555:	push   edx
  404556:	gs jl  0x4045b7
  404559:	stc    
  40455a:	icebp  
  40455b:	sahf   
  40455c:	cmp    BYTE PTR [edx+edi*8+0x13e8a54e],al
  404563:	stos   DWORD PTR es:[edi],eax
  404564:	cmp    ch,0xf4
  404567:	leave  
  404568:	out    0xe7,al
  40456a:	xor    al,0xd4
  40456c:	jmp    0x5da389b
  404571:	ins    DWORD PTR es:[edi],dx
  404572:	pop    edi
  404573:	adc    ebx,DWORD PTR [ebx+0x67]
  404576:	xor    al,0xd6
  404578:	stos   BYTE PTR es:[edi],al
  404579:	fistp  DWORD PTR [ebx+0x31]
  40457c:	xchg   ebp,eax
  40457d:	jmp    0x40452d
  40457f:	sub    DWORD PTR [ebp+0x695799d],0x673e7428
  404589:	mov    ds:0x7dd1cbd7,eax
  40458e:	mov    ebp,0x6aef7dea
  404593:	sub    eax,0x5ea932cd
  404598:	ins    DWORD PTR es:[edi],dx
  404599:	loope  0x40459a
  40459b:	test   al,0xc3
  40459d:	pop    ebx
  40459e:	push   0x248731e4
  4045a3:	outs   dx,DWORD PTR ds:[esi]
  4045a4:	inc    esi
  4045a5:	or     al,0x5
  4045a7:	pop    edx
  4045a8:	push   es
  4045a9:	inc    dl
  4045ab:	test   al,0xbc
  4045ad:	in     al,dx
  4045ae:	dec    ecx
  4045af:	jne    0x4045c1
  4045b1:	(bad)  
  4045b2:	outs   dx,DWORD PTR ds:[esi]
  4045b3:	and    eax,0x209ec490
  4045b8:	mov    ah,0x2c
  4045ba:	cmp    DWORD PTR [ebx+0x34b5520a],esp
  4045c0:	mov    ch,0x98
  4045c2:	dec    eax
  4045c3:	push   ss
  4045c4:	dec    ebx
  4045c5:	mov    cl,0x50
  4045c7:	fucomp st(2)
  4045c9:	pusha  
  4045ca:	mov    DWORD PTR [esp+edi*4],0x1e1cd4d7
  4045d1:	outs   dx,BYTE PTR ds:[esi]
  4045d2:	cmp    BYTE PTR [ecx],0x77
  4045d5:	lods   eax,DWORD PTR ds:[esi]
  4045d6:	in     al,0x88
  4045d8:	lods   al,BYTE PTR ds:[esi]
  4045d9:	jle    0x40456f
  4045db:	mov    BYTE PTR ds:0x9b95be33,al
  4045e1:	xchg   esp,ebp
  4045e3:	cwde   
  4045e4:	cdq    
  4045e5:	sahf   
  4045e6:	xchg   esp,eax
  4045e7:	out    dx,al
  4045e8:	nop
  4045e9:	and    edi,DWORD PTR [edi-0x3f]
  4045ec:	test   eax,0x3d397ef9
  4045f1:	xchg   ecx,ebx
  4045f3:	fsubr  DWORD PTR [ecx-0x5ed82acd]
  4045f9:	call   0x6f07b70d
  4045fe:	loopne 0x404623
  404600:	mov    ah,ah
  404602:	imul   DWORD PTR [eax+0x7327d3b1]
  404608:	inc    esp
  404609:	stc    
  40460a:	inc    BYTE PTR [edx]
  40460c:	cwde   
  40460d:	xchg   BYTE PTR [esi],ch
  40460f:	mov    dl,0x8b
  404611:	adc    eax,0x87b8c26e
  404616:	pop    ss
  404617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404618:	ja     0x40459b
  40461a:	jecxz  0x4045d3
  40461c:	dec    ecx
  40461d:	pop    esp
  40461e:	or     ah,BYTE PTR ds:0x4b6b6371
  404624:	test   ebp,eax
  404626:	outs   dx,BYTE PTR ds:[esi]
  404627:	scas   eax,DWORD PTR es:[edi]
  404628:	or     eax,DWORD PTR [ebx-0x2e721b8d]
  40462e:	(bad)  
  40462f:	pushf  
  404630:	inc    ebp
  404631:	call   0x19cfa08d
  404636:	dec    edx
  404637:	repnz add eax,0x506295f8
  40463d:	cmc    
  40463e:	xchg   ebx,eax
  40463f:	das    
  404640:	scas   al,BYTE PTR es:[edi]
  404641:	iret   
  404642:	hlt    
  404643:	jae    0x40461a
  404645:	sti    
  404646:	or     DWORD PTR [ebx+0x2],esp
  404649:	shr    edi,cl
  40464b:	outs   dx,BYTE PTR ds:[esi]
  40464c:	cmp    DWORD PTR [esp+esi*8+0x31],0x0
  404651:	sbb    edi,DWORD PTR [edi-0x3d]
  404654:	dec    ebx
  404655:	stos   DWORD PTR es:[edi],eax
  404656:	enter  0x57d8,0xd0
  40465a:	xor    al,0x73
  40465c:	(bad)  
  40465d:	stos   DWORD PTR es:[edi],eax
  40465e:	adc    al,0x3a
  404660:	dec    esp
  404661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404662:	jle    0x4046ca
  404664:	mov    ah,BYTE PTR [esi-0x6d]
  404667:	and    edi,DWORD PTR [edx+esi*2-0x23d29e0a]
  40466e:	aad    0x5b
  404670:	ror    BYTE PTR [ecx+0x210da137],cl
  404676:	sub    bh,0xd7
  404679:	pushf  
  40467a:	push   0xc5df7476
  40467f:	scas   al,BYTE PTR es:[edi]
  404680:	sub    ah,BYTE PTR [edi+0x58]
  404683:	cmp    BYTE PTR [esi+0x62153a8f],cl
  404689:	inc    ecx
  40468a:	mov    bl,0xf3
  40468c:	(bad)  
  40468e:	sub    DWORD PTR [edx-0x7e05c900],eax
  404694:	xor    al,BYTE PTR [edi+0x36]
  404697:	call   0x3dd6:0xb3fe6e18
  40469e:	jnp    0x40466f
  4046a0:	std    
  4046a1:	pusha  
  4046a2:	push   ebx
  4046a3:	xchg   DWORD PTR [esi],ebp
  4046a5:	xor    DWORD PTR [eax+0x26],ecx
  4046a8:	jb     0x4046f3
  4046aa:	test   ah,0xf7
  4046ad:	data16 jne 0x404701
  4046b0:	lods   eax,DWORD PTR ds:[esi]
  4046b1:	lds    edx,FWORD PTR [edi+0x508c2322]
  4046b7:	imul   esi,DWORD PTR [ebp+0x44d7542],0x97d8b67a
  4046c1:	and    bh,BYTE PTR [edi]
  4046c3:	js     0x4046b7
  4046c5:	xchg   ebp,eax
  4046c6:	sub    bl,BYTE PTR [esi]
  4046c8:	test   BYTE PTR [esi-0x7393f30e],bh
  4046ce:	cmc    
  4046cf:	je     0x404703
  4046d1:	pushf  
  4046d2:	inc    edx
  4046d3:	mov    cl,0xd7
  4046d5:	call   0xf7ed:0x957420e6
  4046dc:	mov    ds:0x34c4a068,eax
  4046e1:	cmp    dl,BYTE PTR [eax-0x58]
  4046e4:	mov    cl,0xd4
  4046e6:	je     0x4046f5
  4046e8:	addr16 or al,0xfc
  4046eb:	shl    BYTE PTR [eax-0x60],cl
  4046ee:	mov    ds:0x21043eb6,eax
  4046f3:	out    0x1e,al
  4046f5:	cld    
  4046f6:	cdq    
  4046f7:	cwde   
  4046f8:	and    esi,DWORD PTR [ecx-0x19]
  4046fb:	cmp    eax,0xf3bed4dd
  404700:	sbb    edx,DWORD PTR gs:0x3000fd5e
  404707:	mov    fs,ebx
  404709:	jns    0x404785
  40470b:	xchg   esp,eax
  40470c:	scas   eax,DWORD PTR es:[edi]
  40470d:	std    
  40470e:	dec    esp
  40470f:	ror    DWORD PTR [ebx],cl
  404711:	push   esp
  404712:	ins    BYTE PTR es:[edi],dx
  404713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404714:	mov    DWORD PTR [esi+0x75],eax
  404717:	or     al,0x84
  404719:	inc    ecx
  40471a:	cld    
  40471b:	jno    0x404796
  40471d:	(bad)  
  40471e:	out    dx,al
  40471f:	or     bh,BYTE PTR [eax-0x25]
  404722:	adc    ch,0xae
  404725:	enter  0x6e6,0xcb
  404729:	add    BYTE PTR [eax],ch
  40472b:	mov    ah,0xb8
  40472d:	pop    eax
  40472e:	sub    eax,0xaff0d575
  404733:	mov    esi,0x1daeedad
  404738:	mov    ebp,0xf2c03ff1
  40473e:	scas   al,BYTE PTR es:[edi]
  40473f:	push   esp
  404740:	mov    ecx,0xd3c0f747
  404745:	int    0x9d
  404747:	xchg   edi,eax
  404748:	sub    cl,bl
  40474a:	pop    ss
  40474b:	out    0x55,al
  40474d:	cmp    eax,0xfa15619d
  404752:	ror    edi,0xea
  404755:	dec    esp
  404756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404757:	pop    es
  404758:	sbb    al,0x7c
  40475a:	jmp    FWORD PTR [edx-0x19]
  40475d:	cmp    eax,0xe8905403
  404762:	and    eax,0xca6647a7
  404767:	adc    BYTE PTR [edi+0x7fbba0c7],cl
  40476d:	(bad)  
  40476e:	jmp    0xaec8:0xaf1cda5
  404775:	lods   al,BYTE PTR ds:[esi]
  404776:	in     al,dx
  404777:	xchg   esp,eax
  404778:	or     eax,0x94ce229d
  40477d:	dec    eax
  40477e:	sbb    al,dl
  404780:	adc    eax,0xbe165ad8
  404785:	test   ebx,0x3ddccd6d
  40478b:	mov    edi,0x77db2d9a
  404790:	cdq    
  404791:	mov    bh,0xe8
  404793:	aaa    
  404794:	pop    es
  404795:	jmp    FWORD PTR [edi]
  404797:	or     al,0x69
  404799:	popf   
  40479a:	lock mov dh,0x8c
  40479d:	mov    al,ds:0x489e92cd
  4047a2:	and    al,BYTE PTR [ebx+0x15]
  4047a5:	imul   esi,DWORD PTR [ecx+0x380f4ac1],0xffffff95
  4047ac:	add    al,0x3f
  4047ae:	cmp    BYTE PTR [edx],0xbc
  4047b1:	outs   dx,DWORD PTR ds:[esi]
  4047b2:	fcomp  QWORD PTR [eax-0x325a5645]
  4047b8:	imul   DWORD PTR [edx+0x70b3a9e2]
  4047be:	dec    edx
  4047bf:	pop    ss
  4047c0:	aas    
  4047c1:	mov    edx,0xfbd503c7
  4047c6:	jle    0x40481a
  4047c8:	sub    esp,edx
  4047ca:	addr16 mov ecx,0x495b1e7c
  4047d1:	out    0xfd,eax
  4047d3:	dec    edx
  4047d4:	retf   0x9227
  4047d7:	jb     0x40479e
  4047d9:	out    dx,al
  4047da:	mul    BYTE PTR [eax+0x35]
  4047dd:	add    esp,DWORD PTR [esi+0x2ad63995]
  4047e3:	das    
  4047e4:	pop    edx
  4047e5:	cmp    al,0x92
  4047e7:	cmp    cl,ah
  4047e9:	fs cmp eax,0xff19a71c
  4047ef:	loope  0x4047f0
  4047f1:	icebp  
  4047f2:	enter  0x7a4e,0x77
  4047f6:	(bad)  
  4047f8:	scas   al,BYTE PTR es:[edi]
  4047f9:	or     eax,0x9fa6efb2
  4047fe:	xchg   esp,eax
  404800:	loop   0x4047fa
  404802:	jg     0x4047c5
  404804:	add    al,0xa6
  404806:	push   ecx
  404807:	adc    eax,0xaf534aca
  40480c:	mov    ds:0xbab4289a,al
  404811:	pop    ds
  404812:	call   0x49e377be
  404817:	in     eax,dx
  404818:	clc    
  404819:	inc    edi
  40481a:	pop    edx
  40481b:	das    
  40481c:	xchg   esp,eax
  40481d:	jno    0x40489a
  40481f:	icebp  
  404820:	pop    esp
  404821:	dec    eax
  404822:	pusha  
  404823:	mov    WORD PTR [ebx-0x68],?
  404826:	sub    BYTE PTR [esi-0x4e],dl
  404829:	(bad)  
  40482a:	push   esi
  40482b:	and    ch,BYTE PTR [ebx]
  40482d:	call   0xb623:0xd2046af
  404834:	int    0x5
  404836:	scas   eax,DWORD PTR es:[edi]
  404837:	fimul  WORD PTR [edx+0x38e769d9]
  40483d:	leave  
  40483e:	adc    ah,0xe1
  404841:	ror    BYTE PTR [edi-0x5],0x7b
  404845:	jge    0x4047c7
  404847:	fnstsw WORD PTR [eax]
  404849:	mov    esp,0x5042c66e
  40484e:	jb     0x4047fc
  404850:	jl     0x4048cf
  404852:	jae    0x404843
  404854:	scas   al,BYTE PTR es:[edi]
  404855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404856:	xor    DWORD PTR [edi],ebx
  404858:	dec    esi
  404859:	inc    ebx
  40485a:	pop    ecx
  40485b:	scas   eax,DWORD PTR es:[edi]
  40485c:	loope  0x4047e1
  40485e:	loop   0x4048b5
  404860:	inc    esi
  404861:	pusha  
  404862:	loopne 0x40485b
  404864:	iret   
  404865:	xor    dl,dl
  404867:	xchg   ebx,eax
  404868:	pusha  
  404869:	xchg   ecx,eax
  40486a:	add    dl,BYTE PTR [edx-0x78]
  40486d:	cmp    ch,BYTE PTR [edx-0x10]
  404870:	in     al,0x27
  404872:	mov    al,ds:0x9eb04acc
  404877:	dec    ebp
  404878:	or     al,0x45
  40487a:	cdq    
  40487b:	test   eax,0x4248f02
  404880:	out    dx,eax
  404881:	xchg   ebx,eax
  404882:	lds    ebx,FWORD PTR [eax+0x44]
  404885:	xchg   DWORD PTR [eax-0x3ba5873],edi
  40488b:	lods   al,BYTE PTR ds:[esi]
  40488c:	xchg   ebx,eax
  40488d:	shl    bh,1
  40488f:	add    esp,DWORD PTR cs:[esp+esi*4+0x1132f9e]
  404897:	and    al,0xcc
  404899:	mov    ds:0x1d0c0fa,al
  40489e:	xchg   esp,esi
  4048a0:	dec    ecx
  4048a1:	inc    esi
  4048a2:	xchg   esi,edi
  4048a4:	ins    DWORD PTR es:[edi],dx
  4048a5:	(bad)  
  4048a6:	cmp    al,0xad
  4048a8:	mov    bl,0x47
  4048aa:	outs   dx,BYTE PTR ds:[esi]
  4048ab:	fistp  WORD PTR [edi-0x11f9ff66]
  4048b1:	mov    esp,DWORD PTR [ebx+ebp*1+0x79733e63]
  4048b8:	ds fs pop ebp
  4048bb:	xor    eax,DWORD PTR [ecx+0x80da115]
  4048c1:	pmaxsw mm0,QWORD PTR [ebp+0x4f361117]
  4048c8:	pop    ds
  4048c9:	sbb    BYTE PTR [edi-0xe],dh
  4048cc:	imul   ebx,DWORD PTR [ebx+0x5],0xdc2ff136
  4048d3:	push   ebx
  4048d4:	ss test eax,0xded1a427
  4048da:	sar    DWORD PTR [eax-0x4a],cl
  4048dd:	pop    ecx
  4048de:	int3   
  4048df:	loop   0x4048af
  4048e1:	stos   DWORD PTR es:[edi],eax
  4048e2:	loopne 0x404960
  4048e4:	imul   ebp,DWORD PTR [eax],0xd
  4048e7:	xchg   esp,eax
  4048e8:	cmp    al,0xe9
  4048ea:	mov    cl,0xf3
  4048ec:	mov    WORD PTR [esp+eax*1+0x6d],gs
  4048f0:	dec    ebp
  4048f1:	scas   al,BYTE PTR es:[edi]
  4048f2:	test   eax,0xb46f9daa
  4048f7:	loope  0x404956
  4048f9:	test   al,0x92
  4048fb:	push   es
  4048fc:	fs sar bl,0xa4
  404900:	mov    eax,ss:0xc296637f
  404906:	mov    edi,0x57d49555
  40490b:	mov    BYTE PTR [esi],bl
  40490d:	popf   
  40490e:	test   eax,0xf15bc30f
  404913:	adc    eax,0xbe308c9e
  404918:	adc    eax,0x64d092b2
  40491d:	pop    ebp
  40491e:	cmp    eax,0x1a1db13e
  404923:	popf   
  404924:	popa   
  404925:	popf   
  404926:	sub    al,BYTE PTR [edi-0x321f8645]
  40492c:	xchg   BYTE PTR [edi+0x135f4530],cl
  404932:	ret    0x94d5
  404935:	(bad)  
  404936:	dec    edx
  404937:	test   eax,0xccca8443
  40493c:	pop    eax
  40493d:	jge    0x404965
  40493f:	or     bh,BYTE PTR [esi+0x39]
  404942:	cdq    
  404943:	fld    QWORD PTR [eax+0x1b]
  404946:	scas   eax,DWORD PTR es:[edi]
  404947:	sbb    dh,BYTE PTR [ecx-0x160d81db]
  40494d:	ror    edi,0x27
  404950:	push   edi
  404951:	retf   0x2969
  404954:	lock imul esp,DWORD PTR [ebx-0x20],0x4e
  404959:	adc    eax,0xd952ac51
  40495e:	xchg   edi,eax
  40495f:	lods   eax,DWORD PTR ds:[esi]
  404960:	ret    0x8601
  404963:	repnz mov ebx,0x274248c3
  404969:	sub    ah,ah
  40496b:	ds fs nop
  40496e:	outs   dx,DWORD PTR ds:[esi]
  40496f:	std    
  404970:	sub    ebp,DWORD PTR [edi]
  404972:	pop    esi
  404973:	mov    edi,0xd62d2ad1
  404978:	mov    esp,0xdaa4e4af
  40497d:	fcmovne st,st(0)
  40497f:	mov    BYTE PTR [ebx],ah
  404981:	std    
  404982:	dec    eax
  404983:	adc    edi,DWORD PTR [eax+0x1b]
  404986:	jl     0x40497f
  404988:	(bad)  
  404989:	lahf   
  40498a:	inc    ebp
  40498b:	call   0xaf1f:0x5bc44c55
  404992:	add    al,0x6c
  404994:	int    0x27
  404996:	mov    ebx,0x11fd425a
  40499b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40499c:	mov    esi,0xb18d08a9
  4049a1:	jmp    0x404988
  4049a3:	test   al,0x54
  4049a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049a6:	ret    
  4049a7:	cmc    
  4049a8:	clc    
  4049a9:	mov    ecx,0xe4baa318
  4049ae:	inc    ebx
  4049af:	or     al,ch
  4049b1:	jno    0x40496e
  4049b3:	xor    dl,cl
  4049b5:	mov    WORD PTR [ebp+0x4fc19dfd],ss
  4049bb:	or     dl,BYTE PTR [ecx]
  4049bd:	sub    al,BYTE PTR [edi-0x4d7a9fc5]
  4049c3:	mov    dl,0x9c
  4049c5:	repz test DWORD PTR [esi],ebp
  4049c8:	xchg   ebx,eax
  4049c9:	jecxz  0x404992
  4049cb:	scas   al,BYTE PTR es:[edi]
  4049cc:	xchg   edx,eax
  4049cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ce:	imul   edx,eax,0xffffffb8
  4049d1:	bound  ebp,QWORD PTR ds:0x1eeca923
  4049d7:	pop    ebx
  4049d8:	dec    ebx
  4049d9:	mov    eax,0x466da501
  4049de:	mov    dh,ah
  4049e0:	mov    edi,0x7c4e2bcf
  4049e5:	leave  
  4049e6:	int3   
  4049e7:	(bad)  
  4049e8:	jmp    0x404a4d
  4049ea:	jg     0x404a0e
  4049ec:	jmp    0x4049a7
  4049ee:	xor    DWORD PTR [edx-0x6f],ebp
  4049f1:	repz or al,0x77
  4049f4:	das    
  4049f5:	push   ebp
  4049f6:	adc    edx,edx
  4049f8:	xor    eax,0x2010df23
  4049fd:	jbe    0x4049c0
  4049ff:	add    cl,BYTE PTR [ebx]
  404a01:	mov    dl,ch
  404a03:	cmp    al,0x66
  404a06:	sub    al,BYTE PTR [edx+0x22]
  404a09:	es int 0xee
  404a0c:	ret    0x8463
  404a0f:	adc    al,0x61
  404a11:	test   BYTE PTR [ebp-0x4a922be0],ah
  404a17:	ret    
  404a18:	iret   
  404a19:	adc    DWORD PTR [eax-0x7bd5040c],edx
  404a1f:	pop    esp
  404a20:	ficomp DWORD PTR [esi+0x31a00b81]
  404a26:	inc    ecx
  404a27:	jbe    0x404a77
  404a29:	ins    BYTE PTR es:[edi],dx
  404a2a:	cmp    BYTE PTR [esi+0x3aea0cf3],0x13
  404a31:	pusha  
  404a32:	push   ss
  404a33:	pushf  
  404a34:	lahf   
  404a35:	pop    ecx
  404a36:	rol    BYTE PTR [edi+0x20fcc10a],1
  404a3c:	fisttp DWORD PTR [ebp-0x511ce358]
  404a42:	mov    edx,0xd5827b46
  404a47:	call   0x6df:0x265cded3
  404a4e:	mov    bl,0x67
  404a50:	pop    ebx
  404a51:	add    cl,0x2f
  404a54:	dec    ebx
  404a55:	xchg   edx,eax
  404a56:	or     DWORD PTR [ebp-0x22cc8cb9],ebx
  404a5c:	or     BYTE PTR [esi],ah
  404a5e:	jle    0x404a1c
  404a60:	gs (bad) 
  404a62:	push   esp
  404a63:	mov    al,0xcc
  404a65:	and    BYTE PTR [esp+edi*1+0x59fe10e6],dh
  404a6c:	pop    DWORD PTR [edx]
  404a6e:	fcomp  QWORD PTR ds:0xc63e05dc
  404a74:	dec    ebx
  404a75:	int    0xd4
  404a77:	fld    QWORD PTR [edi]
  404a79:	fmul   QWORD PTR [ebx-0x5003d1f9]
  404a80:	pop    ebx
  404a81:	and    DWORD PTR [eax+0x256e08ad],esp
  404a87:	loope  0x404a1c
  404a89:	fiadd  WORD PTR [edx]
  404a8b:	sbb    eax,0x7aeb1e9
  404a90:	push   esi
  404a91:	das    
  404a92:	cmc    
  404a93:	pop    esi
  404a94:	mov    ebp,0x5604fcd8
  404a99:	sbb    bl,BYTE PTR [esi+0x26]
  404a9c:	int3   
  404a9d:	das    
  404a9e:	stos   DWORD PTR es:[edi],eax
  404a9f:	rcr    BYTE PTR [edx+0x6],0x31
  404aa3:	push   ds
  404aa4:	pushf  
  404aa5:	cmp    esi,DWORD PTR [esi+0x3ff716c7]
  404aab:	rol    DWORD PTR [ebp+0x2801f283],1
  404ab1:	mov    ebp,0x3d416128
  404ab6:	cmp    ch,BYTE PTR [edx+edi*2+0x18789a31]
  404abd:	xor    al,0x7b
  404abf:	fdivr  QWORD PTR ds:0x63113cab
  404ac5:	aad    0x29
  404ac7:	fxch   st(5)
  404ac9:	sub    DWORD PTR [edi],esp
  404acb:	push   0x0
  404acd:	pop    ds
  404ace:	dec    ecx
  404acf:	fcmovu st,st(0)
  404ad1:	adc    BYTE PTR [edi+0x5e],dh
  404ad4:	je     0x404aa0
  404ad6:	retf   0xc645
  404ad9:	sbb    ah,bl
  404adb:	sahf   
  404adc:	pcmpgtb mm3,QWORD PTR [ebp-0x4a]
  404ae0:	add    BYTE PTR [edi+edi*1+0x66150694],ch
  404ae7:	sbb    ch,BYTE PTR [ecx-0x2d]
  404aea:	cmp    dh,BYTE PTR [ecx-0x32]
  404aed:	jo     0x404a80
  404aef:	and    ebp,DWORD PTR [ecx+0x46349229]
  404af5:	test   eax,0x42c148b9
  404afa:	sub    BYTE PTR [edi+0x1c517e6],cl
  404b00:	push   esi
  404b01:	or     DWORD PTR [esp+esi*1+0x3b57d150],0xffffff84
  404b09:	arpl   WORD PTR [ebp+0x58],dx
  404b0c:	int3   
  404b0d:	out    0x35,eax
  404b0f:	bound  edx,QWORD PTR [ecx+ebp*2]
  404b12:	iret   
  404b13:	jge    0x404b0b
  404b15:	mov    ds:0xf282bc24,al
  404b1b:	cmp    esp,DWORD PTR gs:[esi+ecx*1+0x48fdf59b]
  404b23:	mov    al,0x26
  404b25:	js     0x404b90
  404b27:	lahf   
  404b28:	add    eax,0xcfecc0a8
  404b2d:	xchg   ebp,eax
  404b2e:	fwait
  404b2f:	int3   
  404b30:	xor    DWORD PTR [ebx+0x54],0xffffffb8
  404b34:	in     al,dx
  404b35:	mov    esi,0xbc407507
  404b3a:	fiadd  DWORD PTR [edi]
  404b3c:	icebp  
  404b3d:	in     al,0xf0
  404b3f:	lock adc eax,0x9635dc24
  404b45:	inc    ebx
  404b46:	push   esi
  404b47:	imul   esp,DWORD PTR [ebp+0x41e9391f],0xa3205906
  404b51:	pop    ds
  404b52:	or     eax,0x6303d55f
  404b57:	mov    eax,0xc136216b
  404b5c:	and    dl,BYTE PTR [edi-0x2c]
  404b5f:	push   es
  404b60:	dec    eax
  404b61:	mov    ebp,DWORD PTR [eax-0x53]
  404b64:	xchg   esp,eax
  404b65:	(bad)
  404b68:	lea    ecx,[ebx+0x79]
  404b6b:	jae    0x404bdc
  404b6d:	sub    al,0x93
  404b6f:	xchg   esi,eax
  404b70:	shl    BYTE PTR [edi-0x7f],0xe1
  404b74:	xchg   ecx,eax
  404b75:	aad    0xb0
  404b77:	mov    ecx,0xff82676d
  404b7c:	jge    0x404b42
  404b7e:	pop    edi
  404b7f:	xchg   ecx,eax
  404b80:	inc    eax
  404b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b82:	ret    0x9cf
  404b85:	and    edx,esp
  404b87:	push   edi
  404b88:	jae    0x404b66
  404b8a:	mov    ss,ebp
  404b8c:	add    edx,edi
  404b8e:	gs and al,0xb8
  404b91:	cmc    
  404b92:	ret    
  404b93:	add    al,0x4d
  404b95:	ss sub al,0x7c
  404b98:	enter  0x711c,0x68
  404b9c:	dec    ebp
  404b9d:	add    al,0xb5
  404b9f:	imul   ebp,DWORD PTR [eax+edi*4],0x49b43c4a
  404ba6:	es pop edx
  404ba8:	(bad)  
  404ba9:	push   esp
  404baa:	in     eax,0x2e
  404bac:	cmp    cl,BYTE PTR [ecx+eiz*1]
  404baf:	icebp  
  404bb0:	pop    ds
  404bb1:	inc    ebx
  404bb2:	mov    cl,0xee
  404bb4:	aaa    
  404bb5:	cmp    DWORD PTR [eax],ebx
  404bb7:	in     eax,0xc9
  404bb9:	mov    bl,0x54
  404bbb:	aaa    
  404bbc:	mov    esi,0x60dda24b
  404bc1:	fnstcw WORD PTR [esi+0x49]
  404bc4:	sub    DWORD PTR [eax],esi
  404bc6:	mov    esi,0x51a54a4b
  404bcb:	sub    edi,DWORD PTR [eax]
  404bcd:	out    dx,al
  404bce:	mov    esi,0xd9202e75
  404bd3:	mov    ch,0x9
  404bd5:	sbb    BYTE PTR [edi+0xb],al
  404bd8:	sar    esi,cl
  404bda:	xlat   BYTE PTR ds:[ebx]
  404bdb:	sbb    eax,0x6ce0a71a
  404be0:	adc    bh,BYTE PTR [edi+ebp*4-0x62]
  404be4:	push   bp
  404be6:	clc    
  404be7:	pop    ebp
  404be8:	test   al,0x8a
  404bea:	jae    0x404bac
  404bec:	jno    0x404c35
  404bee:	jne    0x404bc6
  404bf0:	push   cs
  404bf1:	sub    dh,BYTE PTR [eax-0xc]
  404bf4:	pusha  
  404bf5:	mov    al,ds:0xa6118dca
  404bfa:	xchg   ebx,eax
  404bfb:	adc    al,0x5e
  404bfd:	addr16 leave 
  404bff:	call   0x3a6a37a4
  404c04:	mov    edx,0x5097eb61
  404c09:	push   ebp
  404c0a:	ja     0x404c06
  404c0c:	aad    0xd9
  404c0e:	neg    DWORD PTR [edi+edx*8]
  404c11:	neg    BYTE PTR [edi+0x6de769dc]
  404c17:	test   bl,dl
  404c19:	ret    0x7c73
  404c1c:	push   es
  404c1d:	test   BYTE PTR [esi],ch
  404c1f:	push   edi
  404c20:	xor    DWORD PTR [esi],esi
  404c22:	adc    BYTE PTR [ebx],ah
  404c24:	cld    
  404c25:	fidivr DWORD PTR [esi]
  404c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c28:	push   ecx
  404c29:	stc    
  404c2a:	push   0x3316715b
  404c2f:	lahf   
  404c30:	std    
  404c31:	sbb    DWORD PTR [ecx-0x4c],esi
  404c34:	icebp  
  404c35:	jnp    0x404bff
  404c37:	and    ch,BYTE PTR [esi]
  404c39:	inc    ebx
  404c3a:	sti    
  404c3b:	scas   al,BYTE PTR es:[edi]
  404c3c:	jbe    0x404c8d
  404c3e:	xor    al,0xdd
  404c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c41:	and    eax,DWORD PTR [edi-0x78]
  404c44:	jmp    FWORD PTR [ebx+0x64541ed2]
  404c4a:	hlt    
  404c4b:	xchg   BYTE PTR [edx],al
  404c4d:	adc    eax,0x5b6a3852
  404c52:	icebp  
  404c53:	inc    ecx
  404c54:	push   ds
  404c55:	imul   esp,DWORD PTR [esi],0xcb99aad3
  404c5b:	add    al,0x42
  404c5d:	jg     0x404c44
  404c5f:	int    0xde
  404c61:	not    DWORD PTR [edx-0x36a71566]
  404c67:	hlt    
  404c68:	aad    0xad
  404c6a:	sub    BYTE PTR [edi-0x19],al
  404c6d:	jecxz  0x404c9c
  404c6f:	mov    ch,BYTE PTR [eax]
  404c71:	stos   DWORD PTR es:[edi],eax
  404c72:	mov    al,0x4f
  404c74:	mov    bh,0x3e
  404c76:	pusha  
  404c77:	gs xchg esp,eax
  404c79:	(bad)  
  404c7a:	mov    ds:0x127fc59a,al
  404c7f:	sbb    edi,DWORD PTR [esp]
  404c82:	xor    dl,BYTE PTR [ebx+ebx*8+0x554dc813]
  404c89:	add    bh,BYTE PTR [ecx+0x39d53fb8]
  404c8f:	mov    eax,0x848fc42d
  404c94:	inc    esi
  404c95:	mov    DWORD PTR [ebx],0x73432ab6
  404c9b:	imul   ebp,DWORD PTR [edi+0x635ab4e2],0x1dbb3ad7
  404ca5:	jnp    0x404c32
  404ca7:	inc    esp
  404ca8:	dec    ebp
  404ca9:	xor    BYTE PTR ds:0x1ec8471f,ch
  404caf:	sbb    eax,0x1ad63e25
  404cb4:	cdq    
  404cb5:	push   0x52
  404cb7:	xor    esp,eax
  404cb9:	sub    al,0xf8
  404cbb:	pop    esp
  404cbc:	xchg   esi,eax
  404cbd:	cli    
  404cbe:	xchg   ebx,eax
  404cbf:	and    BYTE PTR [edi+0x6067ef09],ch
  404cc5:	cmp    edi,esp
  404cc7:	dec    edi
  404cc8:	ins    BYTE PTR es:[edi],dx
  404cc9:	jns    0x404cc0
  404ccb:	stc    
  404ccc:	das    
  404ccd:	scas   al,BYTE PTR es:[edi]
  404cce:	fmul   DWORD PTR [edi+0xa]
  404cd1:	pop    eax
  404cd2:	daa    
  404cd3:	je     0x404cae
  404cd5:	xchg   DWORD PTR [esi+0x21394393],edx
  404cdb:	test   eax,0xc285a410
  404ce0:	call   0xbf652c62
  404ce5:	outs   dx,DWORD PTR ds:[esi]
  404ce6:	les    ecx,FWORD PTR [esi-0x3254bead]
  404cec:	in     al,0x90
  404cee:	xor    eax,0xffb387c2
  404cf3:	adc    bl,BYTE PTR [ecx-0x3a]
  404cf6:	mov    esp,0xa29b16c5
  404cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cfc:	sahf   
  404cfd:	lods   eax,DWORD PTR ds:[esi]
  404cfe:	pop    ss
  404cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d00:	mov    ds:0x5313bcb6,al
  404d05:	mov    edx,0x4baf627c
  404d0a:	adc    eax,DWORD PTR [ebp-0x55cbf4ae]
  404d10:	dec    ebx
  404d11:	mov    eax,ds:0x8fc85eb7
  404d16:	lock (bad) 
  404d18:	out    0x87,eax
  404d1a:	jp     0x404d4b
  404d1c:	mov    edi,0x90b0d62d
  404d21:	xor    cl,BYTE PTR [edx]
  404d23:	jo     0x404d22
  404d25:	xor    bh,BYTE PTR [ebp+0x24]
  404d28:	xchg   BYTE PTR [ecx],bl
  404d2a:	mov    eax,0x27faef7e
  404d2f:	adc    BYTE PTR [ebx+0x1],bl
  404d32:	push   eax
  404d33:	not    BYTE PTR [ebx+0x1576c2a8]
  404d39:	fisubr DWORD PTR [ecx]
  404d3b:	pop    ebx
  404d3c:	and    BYTE PTR [edi+0x704070b0],bh
  404d42:	data16 ficom WORD PTR [eax]
  404d45:	adc    esi,DWORD PTR [esi]
  404d47:	jp     0x404d7f
  404d49:	jge    0x404d6d
  404d4b:	je     0x404cdd
  404d4d:	out    0x0,al
  404d4f:	lock (bad) 
  404d51:	lahf   
  404d52:	jnp    0x404ce1
  404d54:	add    ebx,esp
  404d56:	imul   BYTE PTR [edi+eax*8+0x7dfab5de]
  404d5d:	out    0xe9,eax
  404d5f:	mov    esp,0xd5bc3297
  404d64:	imul   ebp,DWORD PTR [edx],0xc27bdcde
  404d6a:	mov    ebp,0x5f0de16f
  404d6f:	adc    DWORD PTR [esi-0x5d],eax
  404d72:	out    0x2a,al
  404d74:	loope  0x404dc2
  404d76:	loop   0x404d94
  404d78:	ffreep st(6)
  404d7a:	outs   dx,BYTE PTR ds:[esi]
  404d7b:	cli    
  404d7c:	push   ebx
  404d7d:	pop    ebp
  404d7e:	add    al,0x2f
  404d80:	je     0x404dc0
  404d82:	push   ebx
  404d83:	out    dx,al
  404d84:	and    ah,bh
  404d86:	sbb    ch,BYTE PTR [edx-0x54b15ee5]
  404d8c:	cmp    ecx,DWORD PTR [ebx-0x3d01f763]
  404d92:	cld    
  404d93:	ins    DWORD PTR es:[edi],dx
  404d94:	pop    eax
  404d95:	out    dx,eax
  404d96:	(bad)  
  404d97:	push   0xc551f059
  404d9c:	mov    esp,0x12941936
  404da1:	outs   dx,BYTE PTR ds:[esi]
  404da2:	rcr    BYTE PTR [ebp+0x52cb87b6],0x2c
  404da9:	stc    
  404daa:	sbb    eax,0xf5ac3081
  404db0:	xor    BYTE PTR [edi-0x53d7c909],al
  404db6:	or     eax,0x1949cf86
  404dbb:	js     0x404da1
  404dbd:	add    esi,esi
  404dbf:	shl    cl,0xdd
  404dc2:	xor    esi,DWORD PTR [edx+0x2694728]
  404dc8:	xchg   ebp,eax
  404dc9:	xchg   esp,eax
  404dca:	mov    esp,0xb9d96041
  404dcf:	icebp  
  404dd0:	mov    dl,0x29
  404dd2:	mov    eax,0x914fd2a
  404dd7:	inc    esi
  404dd8:	xchg   ebx,eax
  404dd9:	(bad)  
  404dda:	retf   
  404ddb:	and    DWORD PTR [ecx-0x51531c48],esp
  404de1:	out    dx,al
  404de2:	popa   
  404de3:	cmc    
  404de4:	aas    
  404de5:	out    0xea,eax
  404de7:	retf   0x7cbe
  404dea:	sti    
  404deb:	clc    
  404dec:	les    edx,FWORD PTR ds:0x381bcdf
  404df2:	sbb    edx,DWORD PTR [ebx+edi*1]
  404df5:	call   0xd128:0xf2c46d05
  404dfc:	inc    edi
  404dfd:	cmp    eax,0x12f5a66e
  404e02:	add    BYTE PTR [edx+0x6871b80],bh
  404e08:	jmp    0xeb7a:0x9de0cad0
  404e0f:	clc    
  404e10:	test   al,0x8c
  404e12:	rcr    DWORD PTR ds:0x89592ba,0x49
  404e19:	imul   ecx,DWORD PTR [ebx+0x79],0xe9e07d7f
  404e20:	enter  0x5a00,0x8
  404e24:	xor    eax,0x63d62193
  404e29:	dec    esi
  404e2a:	pushf  
  404e2b:	icebp  
  404e2c:	xchg   ebx,eax
  404e2d:	cmp    eax,0x10667910
  404e32:	jnp    0x404e9a
  404e34:	jg     0x404e47
  404e36:	cmp    esi,ebp
  404e38:	loopne 0x404ea1
  404e3a:	std    
  404e3b:	je     0x404dc9
  404e3d:	jp     0x404e51
  404e3f:	lods   al,BYTE PTR ds:[esi]
  404e40:	push   esi
  404e41:	pop    edi
  404e42:	imul   edx,DWORD PTR [eax-0x7b8f80f5],0x6c
  404e49:	jb     0x404e75
  404e4b:	nop
  404e4c:	cmp    al,0xfb
  404e4e:	inc    esp
  404e4f:	and    ah,BYTE PTR ds:0x69d65d6b
  404e55:	test   BYTE PTR [ebp+0x28],al
  404e58:	sub    DWORD PTR [eax],eax
  404e5a:	sub    DWORD PTR [edi],ebp
  404e5c:	xchg   ecx,eax
  404e5d:	inc    ebp
  404e5e:	sbb    dh,BYTE PTR [edx+0x20]
  404e61:	pop    ss
  404e62:	jp     0x404e0c
  404e64:	xchg   esp,eax
  404e65:	(bad)
  404e6a:	push   edx
  404e6b:	outs   dx,WORD PTR ds:[esi]
  404e6d:	fyl2xp1 
  404e6f:	inc    ecx
  404e70:	push   es
  404e71:	jmp    0x404ed1
  404e73:	jl     0x404e8b
  404e75:	pusha  
  404e76:	pop    ebx
  404e77:	mov    ecx,0x2f436716
  404e7c:	pop    ss
  404e7d:	push   ss
  404e7e:	aaa    
  404e7f:	xor    al,0xa5
  404e81:	mov    edi,es
  404e83:	push   0x6b
  404e85:	fnsave [edx+0xe]
  404e88:	sbb    al,0xe0
  404e8a:	ins    DWORD PTR es:[edi],dx
  404e8b:	cmp    esp,DWORD PTR [esi+0x23]
  404e8e:	adc    ebx,edx
  404e90:	ja     0x404e59
  404e92:	scas   al,BYTE PTR es:[edi]
  404e93:	aad    0x77
  404e95:	ds dec eax
  404e97:	pushf  
  404e98:	inc    edi
  404e99:	out    0xc,al
  404e9b:	fisubr DWORD PTR [ecx+ebx*2+0x40]
  404e9f:	clc    
  404ea0:	loope  0x404e26
  404ea2:	idiv   esp
  404ea4:	outs   dx,DWORD PTR ds:[esi]
  404ea5:	int3   
  404ea6:	mov    esp,0xc5ad7285
  404eab:	mov    WORD PTR [ebx+0x3eb42eed],ss
  404eb1:	and    ah,0x9b
  404eb4:	pushf  
  404eb5:	xchg   esi,eax
  404eb6:	jle    0x404ee9
  404eb8:	cmp    BYTE PTR [edx],al
  404eba:	mov    cl,BYTE PTR [edi-0x60]
  404ebd:	and    edi,esi
  404ebf:	and    DWORD PTR [ebx+ebx*8],0xfffffff5
  404ec3:	sub    eax,0x37f01f2c
  404ec8:	iret   
  404ec9:	fwait
  404eca:	jnp    0x404ec7
  404ecc:	les    ebx,FWORD PTR [ebx+0x2b]
  404ecf:	jmp    0x7161cc74
  404ed4:	aam    0xa4
  404ed6:	mov    bh,0x6c
  404ed8:	outs   dx,DWORD PTR ds:[esi]
  404ed9:	push   ebp
  404eda:	dec    esi
  404edb:	jge    0x404eaa
  404edd:	pusha  
  404ede:	sub    DWORD PTR [eax],esp
  404ee0:	shr    ch,0x36
  404ee3:	adc    DWORD PTR [edi+ecx*4],esp
  404ee6:	sub    DWORD PTR [edx],esi
  404ee8:	and    al,0xec
  404eea:	jmp    0x72c4:0xf216
  404ef0:	cld    
  404ef1:	or     DWORD PTR [ecx],0xffffff9f
  404ef4:	outs   dx,DWORD PTR ds:[esi]
  404ef5:	xor    bh,ah
  404ef7:	lds    ecx,FWORD PTR [ecx]
  404ef9:	lahf   
  404efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404efb:	stc    
  404efc:	cs sub eax,0x6d5aab66
  404f02:	xor    al,0xd4
  404f04:	fbld   TBYTE PTR [esi-0x7bde554d]
  404f0a:	pushf  
  404f0b:	adc    al,0xdb
  404f0d:	xlat   BYTE PTR ds:[ebx]
  404f0e:	push   0x1073e744
  404f13:	jns    0x404f21
  404f15:	ja     0x404edc
  404f17:	fs and ebx,esi
  404f1a:	sbb    BYTE PTR [eax+eiz*4+0x660651df],bl
  404f21:	in     al,dx
  404f22:	adc    eax,0x3750dfa
  404f27:	in     eax,0x87
  404f29:	imul   ebx,DWORD PTR [ecx+0x72e8f3f],0x13ad7bda
  404f33:	(bad)  
  404f34:	sbb    cl,cl
  404f36:	cmp    esp,DWORD PTR [ebx+0x44c090c0]
  404f3c:	inc    ebx
  404f3d:	xor    BYTE PTR [edx],dh
  404f3f:	adc    eax,0x2cc93a3e
  404f44:	inc    ecx
  404f45:	mov    dh,0xa9
  404f47:	sub    esi,DWORD PTR [edi]
  404f49:	test   al,0xaf
  404f4b:	in     eax,0xb6
  404f4d:	dec    ebx
  404f4e:	sbb    DWORD PTR [edx],eax
  404f50:	loope  0x404f59
  404f52:	cld    
  404f53:	jae    0x404f4d
  404f55:	pop    edx
  404f56:	adc    BYTE PTR [ebx+0xc],0xa4
  404f5a:	es dec eax
  404f5c:	jecxz  0x404f74
  404f5e:	arpl   WORD PTR [ebx-0x2c],bp
  404f61:	pop    esp
  404f62:	stos   BYTE PTR es:[edi],al
  404f63:	xchg   ebp,eax
  404f64:	cli    
  404f65:	aam    0xde
  404f67:	or     al,0xe3
  404f69:	retf   
  404f6a:	add    eax,0xf0497e44
  404f6f:	mov    al,ds:0xb84fb509
  404f74:	dec    ebp
  404f75:	shl    BYTE PTR [eax+0x4f],0x82
  404f79:	mov    ebx,0x174a5374
  404f7e:	inc    edx
  404f7f:	jnp    0x404f95
  404f81:	(bad)  
  404f82:	xchg   ebx,eax
  404f83:	pop    esp
  404f84:	and    eax,0xb8881980
  404f89:	(bad)  
  404f8a:	push   0x2a
  404f8c:	and    al,dl
  404f8e:	xchg   edi,eax
  404f8f:	xor    edx,DWORD PTR [ebp+0x54da5572]
  404f95:	mov    ch,0xbd
  404f97:	xor    al,0x80
  404f99:	daa    
  404f9a:	popa   
  404f9b:	int    0x22
  404f9d:	mov    dh,0xcc
  404f9f:	pop    esp
  404fa0:	mov    eax,ds:0x7035fe47
  404fa5:	or     bh,ah
  404fa7:	data16 out dx,al
  404fa9:	rol    BYTE PTR [ebx-0xe951291],0xf
  404fb0:	div    eax
  404fb2:	aad    0xb5
  404fb4:	lahf   
  404fb5:	in     al,dx
  404fb6:	xor    ebp,DWORD PTR [eax-0x41]
  404fb9:	sbb    edx,DWORD PTR [ebp-0x42677cfa]
  404fbf:	dec    esp
  404fc0:	inc    esp
  404fc1:	in     eax,dx
  404fc2:	cmp    al,0x38
  404fc4:	or     esp,0xffffffc5
  404fc7:	mov    WORD PTR [edx-0x65],?
  404fca:	or     DWORD PTR [edx+0x41],edi
  404fcd:	sbb    eax,0x86b84463
  404fd2:	cmp    al,BYTE PTR [ecx+edx*2-0x45a61603]
  404fd9:	scas   eax,DWORD PTR es:[edi]
  404fda:	push   esp
  404fdb:	jo     0x404f80
  404fdd:	mov    dh,0x7c
  404fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fe0:	xlat   BYTE PTR ds:[ebx]
  404fe1:	addr16 cdq 
  404fe3:	add    cl,BYTE PTR [ebx-0x3]
  404fe6:	add    esp,DWORD PTR cs:[eax-0x18157064]
  404fed:	in     eax,dx
  404fee:	push   ss
  404fef:	shl    BYTE PTR [edi],cl
  404ff1:	jmp    0x3522b96e
  404ff6:	xor    eax,0xee22da0d
  404ffb:	es jmp 0x62c00cc3
  405001:	xchg   ebp,eax
  405002:	std    
  405003:	fistp  DWORD PTR [ebp+eiz*4+0x32]
  405007:	jl     0x40502c
  405009:	sub    al,0x77
  40500b:	xchg   BYTE PTR [edx],al
  40500d:	xchg   ebx,eax
  40500e:	xor    DWORD PTR [esi+eiz*2+0x619b4795],ebp
  405015:	sub    BYTE PTR [esi],0xdb
  405018:	sub    DWORD PTR [ebp+0x55],esi
  40501b:	(bad)  
  40501c:	lock cwde 
  40501e:	test   bh,0x4b
  405021:	and    ecx,DWORD PTR [edi]
  405023:	and    dh,BYTE PTR [ebx-0x1829fcb3]
  405029:	push   ss
  40502a:	jge    0x405059
  40502c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40502d:	nop
  40502e:	loope  0x405071
  405030:	stos   DWORD PTR es:[edi],eax
  405031:	mov    ds,WORD PTR [ebx+0x221ba628]
  405037:	hlt    
  405038:	ja     0x404fef
  40503a:	jb     0x405025
  40503c:	xchg   esp,eax
  40503d:	pop    ebx
  40503e:	push   cs
  40503f:	pusha  
  405040:	pushf  
  405041:	dec    ebx
  405042:	jns    0x405060
  405044:	adc    al,0x22
  405046:	(bad)  
  405047:	mov    DWORD PTR [edx+esi*2+0x75dbe4a3],0xe7eb8aaa
  405052:	aam    0xb2
  405054:	lds    ebx,FWORD PTR [ebx+0x1f31be06]
  40505a:	(bad)  
  40505b:	aam    0xe0
  40505d:	iret   
  40505e:	adc    bh,cl
  405060:	xor    ebp,0x3
  405063:	imul   edi,DWORD PTR [esi-0x7e],0x42d194f0
  40506a:	stos   DWORD PTR es:[edi],eax
  40506b:	fcomp  st(7)
  40506d:	push   edx
  40506e:	into   
  40506f:	rcl    BYTE PTR [ecx-0x5bc8ef84],0xa8
  405076:	push   edi
  405077:	inc    edx
  405078:	add    al,0xf0
  40507a:	repz and esi,DWORD PTR [ecx+ebp*1-0x3b]
  40507f:	ds in  eax,dx
  405081:	loop   0x40504e
  405083:	jae    0x40500b
  405085:	adc    al,0xe5
  405087:	mov    DWORD PTR [eax+ecx*2+0x45c3f6b2],esi
  40508e:	je     0x405088
  405090:	pop    ecx
  405091:	pop    esi
  405092:	mov    ecx,0xbe82a143
  405097:	dec    edi
  405098:	push   ecx
  405099:	(bad)  
  40509b:	leave  
  40509c:	xchg   ecx,eax
  40509d:	and    al,0x4
  40509f:	cmp    bh,BYTE PTR [eax+0x6]
  4050a2:	pop    esi
  4050a3:	fs retf 
  4050a5:	jb     0x40505a
  4050a7:	add    ebp,DWORD PTR ds:0xb34c8520
  4050ad:	jo     0x40505b
  4050af:	or     al,0xcb
  4050b1:	add    ch,BYTE PTR [esi+esi*1]
  4050b4:	ja     0x4050d9
  4050b6:	pop    ss
  4050b7:	xchg   edi,eax
  4050b8:	mov    ds:0xed28c598,al
  4050bd:	outs   dx,BYTE PTR ds:[esi]
  4050be:	inc    edx
  4050bf:	adc    edi,ebx
  4050c1:	mov    DWORD PTR [edi-0x3bd10f07],ecx
  4050c7:	aaa    
  4050c8:	adc    al,0x35
  4050ca:	xchg   ebx,eax
  4050cb:	and    dh,BYTE PTR [edx]
  4050cd:	sti    
  4050ce:	sub    DWORD PTR [di],eax
  4050d1:	add    esi,DWORD PTR [ebp-0x3]
  4050d4:	les    ecx,FWORD PTR [esi+0x691eb00]
  4050da:	xor    al,bl
  4050dc:	pop    edi
  4050dd:	not    BYTE PTR [eax+0xa]
  4050e0:	push   ebp
  4050e1:	mov    ch,0xd3
  4050e3:	(bad)  
  4050e6:	jmp    0x405089
  4050e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e9:	test   eax,0xad52f46
  4050ee:	sti    
  4050ef:	cs call 0x221a:0xf89c191
  4050f7:	add    ebx,esp
  4050f9:	mov    WORD PTR [esi],cs
  4050fb:	jo     0x4050fd
  4050fd:	call   0x2155:0xc6e3bfbc
  405104:	and    dh,al
  405106:	add    dl,dh
  405108:	stc    
  405109:	mov    bl,0x17
  40510b:	retf   
  40510c:	xor    DWORD PTR [edx-0x76],ecx
  40510f:	or     eax,0x40657d28
  405114:	or     DWORD PTR [edx-0x94d4f48],ebp
  40511a:	frstor [edx]
  40511c:	ins    BYTE PTR es:[edi],dx
  40511d:	nop
  40511e:	or     al,0xe5
  405120:	mov    BYTE PTR [edx-0x5cadfb98],al
  405126:	mov    edx,0x279fe6e
  40512b:	cld    
  40512c:	repnz sub ch,BYTE PTR [ecx]
  40512f:	adc    ch,ch
  405131:	adc    dl,ah
  405133:	ss cwde 
  405135:	sub    BYTE PTR [ecx+esi*4+0x7e6d1391],dh
  40513c:	iret   
  40513d:	mov    ah,0x44
  40513f:	scas   al,BYTE PTR es:[edi]
  405140:	and    DWORD PTR [ecx-0x74d23c15],eax
  405146:	xchg   esi,eax
  405147:	adc    al,0xbc
  405149:	neg    cl
  40514b:	and    DWORD PTR ds:0xb1c51882,0x69aa65d4
  405155:	cld    
  405156:	repz mov esp,0x3811421
  40515c:	mov    al,BYTE PTR [ecx-0x43]
  40515f:	mov    bl,0x93
  405161:	jmp    DWORD PTR [ebx-0x3b897e56]
  405167:	dec    ebx
  405168:	sbb    dh,al
  40516a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40516b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40516c:	sub    DWORD PTR [ecx],ecx
  40516e:	jmp    0x405126
  405170:	clc    
  405171:	cmp    eax,0x8e3b63d7
  405176:	jecxz  0x4051d3
  405178:	push   es
  405179:	push   es
  40517a:	xchg   edi,eax
  40517b:	test   DWORD PTR [eax+ebp*8-0x7c33a614],0x602d492
  405186:	mov    eax,0xefe1a7f1
  40518b:	test   eax,0xba6ea6b0
  405190:	push   edx
  405191:	inc    edx
  405192:	push   ds
  405193:	mov    cl,0xae
  405195:	ss lahf 
  405197:	pop    edi
  405198:	xchg   ecx,eax
  405199:	xor    al,0x4a
  40519b:	pop    es
  40519c:	cwde   
  40519d:	fstp   TBYTE PTR [edx-0x4b]
  4051a0:	mov    cl,0xc4
  4051a2:	jp     0x40518f
  4051a4:	or     DWORD PTR fs:[ecx-0x3b17d96d],ecx
  4051ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051ac:	jae    0x4051ce
  4051ae:	cli    
  4051af:	lods   al,BYTE PTR ds:[esi]
  4051b0:	mov    ds:0x9e2455f4,al
  4051b5:	ret    
  4051b6:	mov    al,0x22
  4051b8:	xchg   edx,eax
  4051b9:	push   es
  4051ba:	jp     0x4051f4
  4051bc:	and    eax,0x98c58af6
  4051c1:	nop
  4051c2:	pop    ebx
  4051c3:	xor    al,0x8f
  4051c5:	mov    bl,0x1c
  4051c7:	imul   esp,DWORD PTR [ecx+0x3a],0x36
  4051cb:	in     eax,0x3a
  4051cd:	out    dx,al
  4051ce:	push   ss
  4051cf:	sbb    DWORD PTR [esi-0x66794dc6],eax
  4051d5:	jns    0x405234
  4051d7:	and    eax,0x5a9de16d
  4051dc:	outs   dx,BYTE PTR ds:[esi]
  4051dd:	or     ch,bh
  4051df:	jb     0x40524c
  4051e1:	cmp    DWORD PTR [edi-0x7c],eax
  4051e4:	popa   
  4051e5:	mov    ds:0x660e5f1,al
  4051ea:	stc    
  4051eb:	jb     0x40525d
  4051ed:	ins    BYTE PTR es:[edi],dx
  4051ee:	pop    ds
  4051ef:	lahf   
  4051f0:	dec    ecx
  4051f1:	jno    0x40520e
  4051f3:	pop    edx
  4051f4:	sub    eax,0x3a351d05
  4051f9:	or     ecx,edi
  4051fb:	(bad)  
  4051fc:	sub    eax,0x39907881
  405201:	mov    al,ds:0x651e7d52
  405206:	lahf   
  405207:	mov    eax,ds:0x760b9ada
  40520c:	popf   
  40520d:	push   edx
  40520e:	mov    cs,WORD PTR [ebx-0x12df7417]
  405214:	mov    bl,0x6a
  405216:	(bad)  
  405218:	push   ss
  405219:	mov    ds:0xc2dde002,al
  40521e:	sub    esi,DWORD PTR [edx+ecx*2]
  405221:	xchg   ebp,eax
  405222:	xor    eax,ebx
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xb60494ee
  405804:	push   0x7c5fe0c6
  405809:	jl     0x405856
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	fwait
  40580f:	pusha  
  405810:	dec    ebp
  405811:	sub    al,0xe5
  405813:	lods   eax,DWORD PTR ds:[esi]
  405814:	repnz retf 0x36a4
  405818:	pushf  
  405819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40581a:	xchg   ecx,eax
  40581b:	test   al,0x5b
  40581d:	xchg   edx,eax
  40581e:	inc    DWORD PTR [ebx+esi*1-0x30ffb96]
  405825:	in     eax,0xed
  405827:	dec    esp
  405828:	imul   ebx,DWORD PTR [esi+0x5e],0xad0b58ff
  40582f:	outs   dx,DWORD PTR ds:[esi]
  405830:	mov    dl,0x90
  405832:	stos   DWORD PTR es:[di],eax
  405834:	or     bh,BYTE PTR [eax+0x34]
  405837:	call   0x5eab:0x81d01851
  40583e:	inc    edx
  40583f:	int    0xa2
  405841:	adc    DWORD PTR ds:0x8eaf0aa6,eax
  405847:	daa    
  405848:	inc    ecx
  405849:	lahf   
  40584a:	into   
  40584b:	mov    es,WORD PTR [esi]
  40584d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40584e:	push   eax
  40584f:	imul   ebp,ecx,0x1dba703c
  405855:	mov    edx,0xa0663726
  40585a:	xchg   ebp,eax
  40585b:	push   esp
  40585c:	jnp    0x4057ff
  40585e:	xchg   ecx,eax
  40585f:	int3   
  405860:	cmp    BYTE PTR [edx+0x3f],bl
  405863:	(bad)  
  405864:	xchg   esp,eax
  405865:	adc    edi,DWORD PTR [edx]
  405867:	ins    DWORD PTR es:[edi],dx
  405868:	fs push ds
  40586a:	enter  0xa34e,0xb1
  40586e:	and    dh,BYTE PTR [esi-0x6e]
  405871:	in     eax,dx
  405872:	std    
  405873:	pop    es
  405874:	neg    DWORD PTR [edx]
  405876:	ficom  DWORD PTR [ebp+0x6e5d2e00]
  40587c:	push   ecx
  40587d:	mov    dl,cl
  40587f:	repz add DWORD PTR [esi],ebx
  405882:	add    dh,BYTE PTR fs:[esi+eax*8+0x4d]
  405887:	enter  0x2f48,0x46
  40588b:	js     0x4058c2
  40588d:	stos   DWORD PTR es:[edi],eax
  40588e:	jp     0x40587c
  405890:	pop    es
  405891:	jb     0x4058c8
  405893:	into   
  405894:	mov    ds:0x2ed40819,al
  405899:	(bad)  
  40589a:	adc    esp,DWORD PTR [edi]
  40589c:	ret    0x9efb
  40589f:	push   0xbab4c7ae
  4058a4:	pop    edx
  4058a5:	(bad)  
  4058a6:	fstp   TBYTE PTR [edi]
  4058a8:	sbb    DWORD PTR [eax+0x581677ae],esp
  4058ae:	ins    DWORD PTR es:[edi],dx
  4058af:	xlat   BYTE PTR ds:[ebx]
  4058b0:	cmp    eax,0x8c898934
  4058b5:	loopne 0x405839
  4058b7:	data16 and al,0x76
  4058ba:	stos   DWORD PTR es:[edi],eax
  4058bb:	pop    es
  4058bc:	aam    0xfb
  4058be:	sub    ch,ch
  4058c0:	or     esi,edx
  4058c2:	push   esi
  4058c3:	in     eax,dx
  4058c4:	xor    BYTE PTR [edx],dl
  4058c6:	xlat   BYTE PTR ds:[ebx]
  4058c7:	sahf   
  4058c8:	xor    BYTE PTR [ebx-0x68],dl
  4058cb:	mov    bl,0xa
  4058cd:	xchg   edi,eax
  4058ce:	icebp  
  4058cf:	sbb    ebp,esp
  4058d1:	(bad)  
  4058d2:	push   0xfea3f669
  4058d7:	sbb    bl,BYTE PTR [esi+0x51]
  4058da:	xchg   esi,eax
  4058db:	mov    ch,0x73
  4058dd:	inc    esp
  4058de:	ja     0x40593d
  4058e0:	pop    es
  4058e1:	fs test al,0x56
  4058e4:	iret   
  4058e5:	xor    bl,BYTE PTR [edx-0x6fb31b9e]
  4058eb:	pop    es
  4058ec:	hlt    
  4058ed:	push   ds
  4058ee:	je     0x40593f
  4058f0:	jg     0x405959
  4058f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f3:	adc    DWORD PTR [ebx-0x2f],edx
  4058f6:	ficomp DWORD PTR [eax+0x3e]
  4058f9:	fstp   st(3)
  4058fb:	adc    BYTE PTR [edx],bl
  4058fd:	arpl   WORD PTR [ebp-0x6e],di
  405900:	mov    esi,0x3384c643
  405905:	fwait
  405906:	push   0xbdcc699d
  40590b:	fisubr WORD PTR [edx]
  40590d:	add    eax,DWORD PTR [edx+0x26c897c3]
  405913:	imul   ch
  405915:	je     0x40591d
  405917:	out    0xe0,al
  405919:	push   eax
  40591a:	out    dx,al
  40591b:	stc    
  40591c:	ja     0x405952
  40591e:	aaa    
  40591f:	and    edi,edx
  405921:	jge    0x405964
  405923:	iret   
  405924:	retf   
  405925:	jnp    0x4058b8
  405927:	mov    dl,0xe6
  405929:	loope  0x405942
  40592b:	aas    
  40592c:	das    
  40592d:	or     DWORD PTR [edx-0x1426124a],esi
  405933:	xchg   ecx,eax
  405934:	ret    0x3c62
  405937:	fmul   QWORD PTR [edi-0x5e]
  40593a:	push   eax
  40593b:	xor    al,0xb3
  40593d:	jb     0x405963
  40593f:	push   edi
  405940:	je     0x405999
  405942:	sbb    BYTE PTR [esi+0x4df2ca2b],bl
  405948:	popa   
  405949:	jmp    0x4058de
  40594b:	lods   eax,DWORD PTR ds:[esi]
  40594c:	outs   dx,DWORD PTR ds:[esi]
  40594d:	jns    0x4059bb
  40594f:	inc    edx
  405950:	sub    dh,BYTE PTR [esi+eax*4-0x26]
  405954:	out    dx,al
  405955:	sbb    DWORD PTR [eax+0x43aa52f3],ecx
  40595b:	pop    ebx
  40595c:	leave  
  40595d:	(bad)  
  40595e:	in     al,dx
  40595f:	mov    DWORD PTR [edi+0x5f3a8355],ebp
  405965:	ja     0x40595b
  405967:	sahf   
  405968:	jb     0x40596f
  40596a:	ss add ecx,ecx
  40596d:	rol    ah,cl
  40596f:	leave  
  405970:	mov    DWORD PTR ds:0xeb202693,edi
  405976:	mov    ebp,0x42576d81
  40597b:	mov    ebp,0xe855e8b7
  405980:	xchg   esp,eax
  405981:	rcr    BYTE PTR cs:[edi],1
  405984:	mov    al,ds:0x8a526e1
  405989:	pop    eax
  40598a:	push   0x943e9f9f
  40598f:	or     al,0x95
  405991:	cmp    al,0x7b
  405993:	sub    bh,BYTE PTR ds:0x5667bc46
  405999:	xchg   ecx,eax
  40599a:	outs   dx,DWORD PTR ds:[esi]
  40599b:	cdq    
  40599c:	push   edi
  40599d:	cdq    
  40599e:	scas   eax,DWORD PTR es:[edi]
  40599f:	js     0x405969
  4059a1:	test   al,0x83
  4059a3:	leave  
  4059a4:	jmp    FWORD PTR [edi]
  4059a6:	test   DWORD PTR [eax-0x6d305785],ecx
  4059ac:	mov    esp,0xc8cf56dd
  4059b1:	jge    0x405938
  4059b3:	ds sub al,0x93
  4059b6:	mov    ecx,0x41dece45
  4059bb:	shl    dh,0x29
  4059be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059bf:	out    dx,al
  4059c0:	sub    ebx,esp
  4059c2:	js     0x4059ac
  4059c4:	rcr    BYTE PTR ds:0x228e6680,cl
  4059ca:	push   ss
  4059cb:	fmul   DWORD PTR [ebx]
  4059cd:	add    eax,0x560208fa
  4059d2:	xchg   edi,eax
  4059d3:	stos   BYTE PTR es:[edi],al
  4059d4:	jb     0x405957
  4059d6:	push   ebp
  4059d7:	jg     0x40596b
  4059d9:	(bad)  
  4059da:	mov    edx,0x2d8e1bfd
  4059df:	sub    ah,BYTE PTR [edx-0xe6c96c8]
  4059e5:	or     al,0xf
  4059e7:	mov    eax,0xf8017909
  4059ec:	xchg   ebp,eax
  4059ed:	in     al,dx
  4059ee:	es iret 
  4059f0:	test   eax,0xf41b465a
  4059f5:	int    0x8a
  4059f7:	lock mov esi,0xddf20c1d
  4059fd:	(bad)  
  4059fe:	or     BYTE PTR [edx],dl
  405a00:	inc    ebx
  405a01:	bound  esi,QWORD PTR [eax+eax*8]
  405a04:	xchg   ebx,eax
  405a05:	pop    esp
  405a06:	sub    BYTE PTR [ebx],bh
  405a08:	jg     0x405a41
  405a0a:	xchg   ecx,eax
  405a0b:	in     al,dx
  405a0c:	mov    BYTE PTR [eax+0x26],al
  405a0f:	ds mov ch,0x44
  405a12:	and    al,0x43
  405a14:	jmp    0x6af6f768
  405a19:	sub    DWORD PTR [bx+si],ebx
  405a1c:	jo     0x405a12
  405a1e:	scas   al,BYTE PTR es:[edi]
  405a1f:	or     esp,esp
  405a21:	push   es
  405a22:	pusha  
  405a23:	push   ebp
  405a24:	in     eax,0x6a
  405a26:	adc    al,0xad
  405a28:	jmp    0x85adffaf
  405a2d:	mov    ebp,DWORD PTR [edi+0x71cb5afd]
  405a33:	add    al,0x59
  405a35:	and    DWORD PTR [eax+0x75],ebp
  405a38:	xlat   BYTE PTR ds:[ebx]
  405a39:	fild   DWORD PTR [ecx]
  405a3b:	rol    BYTE PTR [esi],cl
  405a3d:	pop    ebx
  405a3e:	jns    0x405a14
  405a40:	and    DWORD PTR [ebx-0x7a],ebx
  405a43:	sbb    al,0x5d
  405a45:	jmp    0x3b67:0x314840c8
  405a4c:	aas    
  405a4d:	mov    edi,0xcae94583
  405a52:	dec    eax
  405a53:	ret    0xe74e
  405a56:	in     al,0x68
  405a58:	jp     0x405a8b
  405a5a:	push   ss
  405a5b:	sub    eax,DWORD PTR [eax+0x36]
  405a5e:	cld    
  405a5f:	sti    
  405a60:	bound  edi,QWORD PTR [ebx]
  405a62:	jae    0x4059f9
  405a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a65:	fs adc eax,0xfa744490
  405a6b:	(bad)  
  405a6c:	fnstcw WORD PTR [edi-0x67]
  405a6f:	les    esi,FWORD PTR ds:0x348b66dd
  405a75:	add    edx,DWORD PTR [ecx+0x294d39a8]
  405a7b:	test   BYTE PTR [edx-0x45b2ee8b],dh
  405a81:	scas   eax,DWORD PTR es:[edi]
  405a82:	outs   dx,BYTE PTR ds:[esi]
  405a83:	dec    ebx
  405a84:	dec    ebp
  405a85:	retf   
  405a86:	inc    ebp
  405a87:	push   0xcf255aa7
  405a8c:	mov    ds:0xbc827433,eax
  405a91:	je     0x405a8e
  405a93:	mov    ecx,0x29ded4ff
  405a98:	jecxz  0x405b13
  405a9a:	adc    BYTE PTR es:[ebx],0x24
  405a9e:	mov    ds,WORD PTR [edx+0x3e4e532e]
  405aa4:	lds    eax,FWORD PTR [ecx+ebx*4-0x557ddc6f]
  405aab:	jmp    0x405acd
  405aad:	adc    bl,al
  405aaf:	sbb    al,BYTE PTR [esi+0x47]
  405ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab3:	clc    
  405ab4:	mov    ebp,0xda4d973e
  405ab9:	fild   WORD PTR [edx]
  405abb:	jp     0x405a61
  405abd:	hlt    
  405abe:	ds ret 0x7a4c
  405ac2:	cwde   
  405ac3:	mov    edi,0x198ce174
  405ac8:	les    ecx,FWORD PTR [ecx+0x32]
  405acb:	xchg   BYTE PTR [edi+0x6bdce47d],dh
  405ad1:	cmp    dl,BYTE PTR [eax-0x7df1b041]
  405ad7:	in     eax,dx
  405ad8:	mov    al,0xaf
  405ada:	mov    ah,0xd
  405adc:	push   esp
  405add:	iret   
  405ade:	push   ss
  405adf:	cmp    bl,BYTE PTR [ecx+ecx*2-0x2fed945e]
  405ae6:	sbb    BYTE PTR [edx],dl
  405ae8:	and    eax,0x7a446e8e
  405aed:	addr16 push ds
  405aef:	icebp  
  405af0:	fwait
  405af1:	pop    ebx
  405af2:	popf   
  405af3:	push   eax
  405af4:	pop    esi
  405af5:	ret    0x5704
  405af8:	aas    
  405af9:	xor    edx,DWORD PTR [ecx+0x1c]
  405afc:	push   esi
  405afd:	int    0x9e
  405aff:	adc    edi,0xffffff8e
  405b02:	hlt    
  405b03:	and    DWORD PTR [eax],ebx
  405b05:	or     ebp,DWORD PTR [ebx+esi*2]
  405b08:	pop    edx
  405b09:	lods   eax,DWORD PTR ds:[esi]
  405b0a:	fs mov al,0x59
  405b0d:	loope  0x405ae6
  405b0f:	aad    0x3b
  405b11:	pop    ss
  405b12:	cli    
  405b13:	stos   DWORD PTR es:[edi],eax
  405b14:	stos   BYTE PTR es:[edi],al
  405b15:	jae    0x405ad5
  405b17:	or     al,0x80
  405b19:	cmc    
  405b1a:	pusha  
  405b1b:	sbb    eax,0x40090ab5
  405b20:	addr16 popa 
  405b22:	dec    edi
  405b23:	cmc    
  405b24:	mov    esi,0x86275663
  405b29:	pop    eax
  405b2a:	neg    dl
  405b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b2d:	out    0x60,eax
  405b2f:	enter  0xfa6,0x72
  405b33:	stos   DWORD PTR es:[edi],eax
  405b34:	addr16 mov edx,0xf4a036d3
  405b3a:	into   
  405b3b:	pop    es
  405b3c:	inc    esi
  405b3d:	fistp  WORD PTR [esi-0x67]
  405b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b41:	dec    ecx
  405b42:	je     0x405ad3
  405b44:	xor    eax,edx
  405b46:	mov    cl,0xf9
  405b48:	fcomp  QWORD PTR [eax+0x13]
  405b4b:	sbb    DWORD PTR [ebp-0x30b35f0],ebp
  405b51:	dec    esi
  405b52:	loopne 0x405ba3
  405b54:	xor    BYTE PTR [ebx],al
  405b56:	push   0x17
  405b58:	inc    esi
  405b59:	mov    ch,BYTE PTR [edx]
  405b5b:	or     BYTE PTR ds:0x58d997aa,al
  405b61:	retf   
  405b62:	and    DWORD PTR [edi-0x6a],0xffffff9f
  405b66:	call   0x9393:0x7823eacd
  405b6d:	xchg   DWORD PTR [ebp+0x57b807cf],ebp
  405b73:	pop    ds
  405b74:	and    esp,0x61817fed
  405b7a:	lds    esp,FWORD PTR [ebx]
  405b7c:	iret   
  405b7d:	dec    eax
  405b7e:	dec    ebx
  405b7f:	add    eax,0x13c3add0
  405b84:	stos   DWORD PTR es:[edi],eax
  405b85:	push   ecx
  405b86:	xor    BYTE PTR [edi+0x2e],bh
  405b89:	inc    ebx
  405b8a:	addr16 mov eax,0xc008d00d
  405b90:	popf   
  405b91:	mov    es,ecx
  405b93:	dec    ebx
  405b94:	outs   dx,BYTE PTR ds:[esi]
  405b95:	test   al,0x65
  405b97:	fs mov eax,0x1ef72811
  405b9d:	mov    WORD PTR [edx-0x5e],es
  405ba0:	inc    edx
  405ba1:	out    0xb9,eax
  405ba3:	(bad)  
  405ba4:	scas   eax,DWORD PTR es:[edi]
  405ba5:	sub    BYTE PTR ds:0xd45b709a,cl
  405bab:	inc    edx
  405bac:	fs not edi
  405baf:	pop    edi
  405bb0:	sub    ah,BYTE PTR [eax-0x76]
  405bb3:	inc    esp
  405bb4:	mov    BYTE PTR [eax+0x3e],cl
  405bb7:	pushf  
  405bb8:	popf   
  405bb9:	cwde   
  405bba:	pop    ss
  405bbb:	mov    esp,0xc76114ec
  405bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bc1:	out    dx,eax
  405bc2:	ins    DWORD PTR es:[edi],dx
  405bc3:	(bad)  
  405bc4:	or     eax,ebx
  405bc6:	pusha  
  405bc7:	mov    ebx,0x24de3d22
  405bcc:	dec    ecx
  405bcd:	aad    0xc0
  405bcf:	jmp    0x405c3c
  405bd1:	aad    0x54
  405bd3:	shl    BYTE PTR [eax+ebx*1],0x56
  405bd7:	ret    
  405bd8:	push   ebx
  405bd9:	push   esi
  405bda:	fwait
  405bdb:	cmp    BYTE PTR [esi],0xc9
  405bde:	inc    ebx
  405bdf:	sar    edx,cl
  405be1:	sub    ch,BYTE PTR [eax-0x6f6ba22f]
  405be7:	lods   eax,DWORD PTR ds:[esi]
  405be8:	in     eax,0x3e
  405bea:	push   edx
  405beb:	jae    0x405c61
  405bed:	lahf   
  405bee:	pop    ecx
  405bef:	jmp    0x405c04
  405bf1:	ss dec eax
  405bf3:	and    al,0xf3
  405bf5:	mov    bl,0xa2
  405bf7:	add    DWORD PTR [eax],edx
  405bf9:	xchg   esp,eax
  405bfa:	call   0x79eebe14
  405bff:	sti    
  405c00:	sbb    al,0x75
  405c02:	inc    esp
  405c03:	pushf  
  405c04:	mov    ds:0xc25c85f7,eax
  405c09:	inc    esi
  405c0a:	mov    cl,0xfe
  405c0c:	mov    WORD PTR [eax-0x69],fs
  405c0f:	(bad)  
  405c10:	out    dx,al
  405c11:	aad    0xb1
  405c13:	std    
  405c14:	adc    BYTE PTR [ebp-0x7e52b14c],ch
  405c1a:	add    eax,0x46d0f83f
  405c1f:	jp     0x405c56
  405c21:	add    eax,0x8b7f1def
  405c26:	retf   0x812e
  405c29:	(bad)  
  405c2a:	mov    ?,WORD PTR [eax]
  405c2c:	mov    eax,ds:0x574c4f91
  405c31:	sbb    DWORD PTR [edx-0x72b18c25],ecx
  405c37:	(bad)  
  405c38:	arpl   WORD PTR [edi-0x6c],ax
  405c3b:	leave  
  405c3c:	mov    ebx,0xc81db46c
  405c41:	push   esi
  405c42:	mov    WORD PTR [ebx-0x6b],ss
  405c45:	in     eax,dx
  405c46:	sub    DWORD PTR [eax-0x1a8117a9],ebp
  405c4c:	fidiv  DWORD PTR [edx+0x3b]
  405c4f:	into   
  405c50:	xor    al,0x9e
  405c52:	inc    ecx
  405c53:	jbe    0x405c27
  405c55:	add    BYTE PTR [ebp+0x292283fd],bl
  405c5b:	js     0x405c61
  405c5d:	imul   edx,DWORD PTR [edi-0x50],0xe159c1d
  405c64:	mov    ss,ebx
  405c66:	sub    esi,DWORD PTR ds:0x25108c75
  405c6c:	adc    BYTE PTR [ecx-0x1b],0xf0
  405c70:	ins    BYTE PTR es:[edi],dx
  405c71:	xchg   ebx,eax
  405c72:	mov    edx,0x5ac28654
  405c77:	mov    ebp,DWORD PTR [edx-0x73bb127b]
  405c7d:	mov    eax,ds:0x2b783f6e
  405c82:	ds lahf 
  405c84:	adc    BYTE PTR [edx-0x6b],bh
  405c87:	retf   0x490a
  405c8a:	ret    
  405c8b:	pop    ecx
  405c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c8d:	iret   
  405c8e:	test   eax,0x57772d94
  405c93:	mov    bh,0xde
  405c95:	pop    edi
  405c96:	inc    esp
  405c97:	aad    0xce
  405c99:	add    esi,DWORD PTR [eax]
  405c9b:	mov    al,ds:0xb6268eaf
  405ca0:	jp     0x405c47
  405ca2:	xor    al,al
  405ca4:	inc    esp
  405ca5:	inc    ebx
  405ca6:	adc    BYTE PTR [edx-0x1c],dh
  405ca9:	dec    ebx
  405caa:	xchg   ebp,eax
  405cab:	jmp    0x1ec:0xd37b832f
  405cb2:	into   
  405cb3:	jecxz  0x405c42
  405cb5:	ins    DWORD PTR es:[edi],dx
  405cb6:	cwde   
  405cb7:	call   0x791b:0x6a440b1f
  405cbe:	dec    esp
  405cbf:	mov    BYTE PTR [ebp-0xd63bd0c],ch
  405cc5:	mov    ds:0xb2720297,al
  405cca:	push   es
  405ccb:	adc    eax,0xc4956e2
  405cd0:	adc    eax,0x709e5f52
  405cd5:	pop    ss
  405cd6:	lock dec ebp
  405cd8:	(bad)  
  405cda:	add    ebp,ebx
  405cdc:	dec    esi
  405cdd:	je     0x405cef
  405cdf:	xchg   DWORD PTR [esi+0x4a9adad5],ebx
  405ce5:	bnd ret 
  405ce7:	and    ah,bh
  405ce9:	mov    eax,0x1d445b89
  405cee:	imul   ecx,eax,0x16124b71
  405cf4:	out    0xab,al
  405cf6:	jns    0x405d14
  405cf8:	idiv   DWORD PTR [esi+ebx*2-0x3a]
  405cfc:	enter  0x594,0x7e
  405d00:	push   ecx
  405d01:	(bad)  
  405d02:	mov    dh,0x7e
  405d04:	arpl   WORD PTR [ebx],si
  405d06:	dec    edi
  405d07:	scas   eax,DWORD PTR es:[edi]
  405d08:	xor    DWORD PTR [esi+0x650382e1],esp
  405d0e:	das    
  405d0f:	shl    DWORD PTR [esp+edi*8-0x615c1094],cl
  405d16:	push   ds
  405d17:	and    al,0xd8
  405d19:	jne    0x405d9a
  405d1b:	or     esi,eax
  405d1d:	repz and DWORD PTR [edi+0x6c2e1891],0xb19648b2
  405d28:	hlt    
  405d29:	xor    DWORD PTR [ebp+0x5691c3b8],esi
  405d2f:	xchg   BYTE PTR [eax+0x3d],dh
  405d32:	ins    DWORD PTR es:[edi],dx
  405d33:	mov    DWORD PTR [ebx+0x6a3d5dd3],ecx
  405d39:	mov    BYTE PTR [eax],al
  405d3b:	mov    esi,0xa7bbe996
  405d40:	rcl    BYTE PTR [ebp+0x24],cl
  405d43:	or     ch,bh
  405d45:	jl     0x405d30
  405d47:	in     eax,0x8a
  405d49:	push   ecx
  405d4a:	outs   dx,BYTE PTR ds:[esi]
  405d4b:	mov    cl,0x43
  405d4d:	in     al,dx
  405d4e:	dec    ebp
  405d4f:	pop    ebx
  405d50:	repnz dec esi
  405d52:	test   ecx,0xc8205aae
  405d58:	fsub   st(3),st
  405d5a:	aam    0x45
  405d5c:	xor    DWORD PTR [ecx+0x61145a69],0xffffffc4
  405d63:	push   es
  405d64:	(bad)  
  405d65:	fcomp  DWORD PTR [edx+edi*1-0x78e012e9]
  405d6c:	popa   
  405d6d:	mov    eax,ss
  405d6f:	push   ds
  405d70:	mov    ch,0x5c
  405d72:	add    DWORD PTR [ebp+0x29],ebp
  405d75:	mov    bh,BYTE PTR [esi+0x4a3220c5]
  405d7b:	adc    al,0x5d
  405d7d:	imul   BYTE PTR [edi-0x2e365038]
  405d83:	cvtps2pi mm0,QWORD PTR [edi-0x3e87e591]
  405d8a:	push   ecx
  405d8b:	pop    ecx
  405d8c:	rcl    BYTE PTR [eax-0x6a],0x53
  405d90:	iret   
  405d91:	aas    
  405d92:	push   cs
  405d93:	push   ds
  405d94:	add    eax,0xc4814b1b
  405d99:	dec    edx
  405d9a:	jns    0x405e19
  405d9c:	sar    BYTE PTR [edx-0x60],cl
  405d9f:	sbb    eax,ebx
  405da1:	mov    esp,0xb3af5c67
  405da6:	ret    0xe956
  405da9:	jmp    0x2d1b3dcd
  405dae:	sub    cl,BYTE PTR [eax+eiz*8]
  405db1:	dec    ebp
  405db2:	xor    ebx,DWORD PTR [esi*4+0x5e973a6c]
  405db9:	retf   0xd060
  405dbc:	lods   eax,DWORD PTR ds:[esi]
  405dbd:	ss pop esp
  405dbf:	fwait
  405dc0:	js     0x405da2
  405dc2:	ins    DWORD PTR es:[edi],dx
  405dc3:	jp     0x405dac
  405dc5:	and    esp,esp
  405dc7:	out    dx,al
  405dc8:	ret    
  405dc9:	(bad)  
  405dca:	in     al,dx
  405dcb:	push   edx
  405dcc:	or     ecx,DWORD PTR [edi]
  405dce:	inc    edx
  405dcf:	pop    esp
  405dd0:	and    al,BYTE PTR [edx-0x43]
  405dd3:	push   esi
  405dd4:	inc    ebp
  405dd5:	mov    ch,0x15
  405dd7:	call   0x89b8:0x484c12ba
  405dde:	pop    edx
  405ddf:	mov    ecx,gs
  405de1:	pop    esi
  405de2:	xchg   edx,eax
  405de3:	lods   al,BYTE PTR ds:[esi]
  405de4:	mov    ebx,0x5463f9b4
  405de9:	call   0xd7c2:0x38e6e716
  405df0:	scas   eax,DWORD PTR es:[edi]
  405df1:	call   0xd3e0:0x413d9259
  405df8:	aaa    
  405df9:	popa   
  405dfa:	adc    bh,BYTE PTR [bp+si-0x1]
  405dfe:	mov    dh,dh
  405e00:	jp     0x405daf
  405e02:	jge    0x405db8
  405e04:	ins    DWORD PTR es:[edi],dx
  405e05:	mov    ah,0x81
  405e07:	nop
  405e08:	push   cs
  405e09:	int3   
  405e0a:	dec    eax
  405e0b:	push   ecx
  405e0c:	mov    eax,ds:0xd05e4774
  405e11:	gs sysexit 
  405e14:	mov    BYTE PTR [esi-0x3a31e610],bl
  405e1a:	jle    0x405e0c
  405e1c:	pop    ebp
  405e1d:	push   esi
  405e1e:	xor    eax,DWORD PTR [edi+0x2d]
  405e21:	xchg   edi,eax
  405e22:	mov    ecx,0x34ea6bb7
  405e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e28:	adc    eax,0x2b90b42e
  405e2d:	jbe    0x405dbd
  405e2f:	shl    DWORD PTR [edx-0x13a6e7e],1
  405e35:	cmp    eax,0x89868d8d
  405e3a:	jno    0x405e74
  405e3c:	mov    al,ds:0x6b51bbec
  405e41:	test   DWORD PTR [eax],edx
  405e43:	imul   esp,DWORD PTR [edi],0xe2c812af
  405e49:	and    DWORD PTR [edi-0x17ae2e37],0xab7a60b3
  405e53:	leave  
  405e54:	popa   
  405e55:	ret    
  405e56:	mov    al,ds:0x904abd8b
  405e5b:	sbb    ecx,DWORD PTR [esi+0x1c]
  405e5e:	lds    ebp,FWORD PTR [edi]
  405e60:	cs ja  0x405e90
  405e63:	xor    al,0x48
  405e65:	ror    BYTE PTR [esi+0x33665f93],1
  405e6b:	(bad)  
  405e6c:	xchg   edi,eax
  405e6d:	mov    cl,0x3
  405e6f:	and    eax,0x9656c715
  405e74:	xchg   ebx,eax
  405e75:	jecxz  0x405e69
  405e77:	in     eax,0xb5
  405e79:	je     0x405e3e
  405e7b:	xlat   BYTE PTR ds:[ebx]
  405e7c:	adc    eax,DWORD PTR [ebx+eax*2-0x35]
  405e80:	pusha  
  405e81:	jmp    0x59f1:0x5ed8408d
  405e88:	aad    0xda
  405e8a:	fs jge 0x405ed1
  405e8d:	mov    dh,0x55
  405e8f:	sahf   
  405e90:	fisttp QWORD PTR ds:0x9f4f1227
  405e96:	mov    ch,0x26
  405e98:	mov    edi,0xdc2f65ae
  405e9d:	ja     0x405e43
  405e9f:	ja     0x405e55
  405ea1:	cmovns esp,DWORD PTR [ecx+ebp*2]
  405ea5:	pop    ebp
  405ea6:	pop    DWORD PTR [ecx+ebp*2+0x78bd223d]
  405ead:	cmp    al,0x44
  405eaf:	add    eax,0xf1ad4080
  405eb4:	fsub   QWORD PTR [edx-0x1c3a0ef4]
  405eba:	jmp    0x15a6:0xbd6dac10
  405ec1:	iret   
  405ec2:	popa   
  405ec3:	lock data16 outs dx,BYTE PTR ds:[esi]
  405ec6:	jns    0x405ee2
  405ec8:	mov    ebp,DWORD PTR [ebp+0x589fa340]
  405ece:	or     eax,0x5658dad4
  405ed3:	sbb    BYTE PTR [edi],dh
  405ed5:	dec    ebx
  405ed6:	jle    0x405ef3
  405ed8:	sbb    BYTE PTR cs:0x92b0c02c,bh
  405edf:	jg     0x405e71
  405ee1:	inc    eax
  405ee2:	outs   dx,DWORD PTR ds:[esi]
  405ee3:	push   ebx
  405ee4:	add    edi,DWORD PTR [edx+eax*8+0x5e]
  405ee8:	pop    ecx
  405ee9:	lods   eax,DWORD PTR ds:[esi]
  405eea:	das    
  405eeb:	sbb    edx,ebp
  405eed:	and    DWORD PTR [ebx+eiz*2-0x67],ebp
  405ef1:	pop    ss
  405ef2:	mov    esi,DWORD PTR ss:[edi]
  405ef5:	arpl   WORD PTR [ebx-0x60991ce1],di
  405efb:	nop
  405efc:	xlat   BYTE PTR ds:[ebx]
  405efd:	xor    al,0xcb
  405eff:	sub    bl,BYTE PTR [eax]
  405f01:	fcmovu st,st(4)
  405f03:	pop    es
  405f04:	(bad)  
  405f05:	rcr    BYTE PTR [edi],0x9f
  405f08:	je     0x405f32
  405f0a:	lea    esp,[ecx+0x67]
  405f0d:	(bad)  
  405f0e:	nop
  405f0f:	push   0x4ee2089d
  405f14:	(bad)  
  405f15:	outs   dx,DWORD PTR ds:[esi]
  405f16:	xchg   ebp,eax
  405f17:	les    ecx,FWORD PTR [esi+0x72]
  405f1a:	pop    ecx
  405f1b:	xchg   esp,eax
  405f1c:	lds    edi,FWORD PTR [edi+0xb00592c]
  405f22:	pop    ebx
  405f23:	jnp    0x405f95
  405f25:	cmp    DWORD PTR [ebx+0x24a6fb5f],edi
  405f2b:	inc    esi
  405f2c:	sbb    eax,0xf496fd03
  405f31:	xchg   ecx,eax
  405f32:	jb     0x405f49
  405f34:	dec    esp
  405f35:	jmp    0x6d6d:0x900ef84e
  405f3c:	cmp    al,0xff
  405f3e:	add    esp,DWORD PTR [esi+0x15]
  405f41:	push   esi
  405f42:	ror    DWORD PTR [ebx],1
  405f44:	mov    esp,0x958f77a3
  405f49:	dec    edi
  405f4a:	mov    ah,0xab
  405f4c:	dec    esi
  405f4d:	sbb    eax,0xf246011e
  405f52:	pop    eax
  405f53:	test   BYTE PTR [ebx+esi*8-0x5f471aa5],dh
  405f5a:	or     DWORD PTR [edi-0x4e48e6f3],eax
  405f60:	mov    BYTE PTR [edi-0x452050d1],bh
  405f66:	leave  
  405f67:	pop    esp
  405f68:	sahf   
  405f69:	mov    ecx,0x2c50b95f
  405f6e:	xor    ah,BYTE PTR [ebx+0x61866187]
  405f74:	retf   
  405f75:	push   esp
  405f76:	cs xchg ecx,eax
  405f78:	lock das 
  405f7a:	push   esp
  405f7b:	inc    ebp
  405f7c:	std    
  405f7d:	std    
  405f7e:	jg     0x405fee
  405f80:	sub    DWORD PTR [ecx],edi
  405f82:	sbb    al,0x2a
  405f84:	jno    0x405f09
  405f86:	sbb    eax,0x395353e3
  405f8b:	sar    BYTE PTR [esi+eiz*4+0xb],1
  405f8f:	cld    
  405f90:	daa    
  405f91:	cmp    al,dl
  405f93:	pop    ss
  405f94:	inc    ebx
  405f95:	mov    ebx,0xf183a7a
  405f9a:	dec    esi
  405f9b:	sub    ebx,DWORD PTR [ecx-0x499888db]
  405fa1:	or     BYTE PTR [ecx-0x5b816138],0xcc
  405fa8:	aas    
  405fa9:	dec    edi
  405faa:	sahf   
  405fab:	mov    ebx,0xdb02bf2d
  405fb0:	stos   DWORD PTR es:[edi],eax
  405fb1:	cmc    
  405fb2:	jnp    0x406029
  405fb4:	pop    edx
  405fb5:	inc    esi
  405fb6:	sbb    eax,0xc1266f0a
  405fbb:	pop    ss
  405fbc:	cmp    al,0xd
  405fbe:	jno    0x405fb0
  405fc0:	inc    ebp
  405fc1:	pop    ds
  405fc2:	stos   BYTE PTR es:[edi],al
  405fc3:	adc    DWORD PTR [esi-0x5dcb7b78],esp
  405fc9:	mov    esi,0x54760c0d
  405fce:	shl    DWORD PTR [edi-0x723c0599],0x7
  405fd5:	leave  
  405fd6:	mov    ds:0x6f02a478,eax
  405fdb:	ja     0x405fd3
  405fdd:	ret    
  405fde:	push   esi
  405fdf:	div    BYTE PTR [ebx+0x74]
  405fe2:	lahf   
  405fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fe4:	adc    bh,0x12
  405fe7:	retf   
  405fe8:	cmp    eax,0x16dfab4a
  405fed:	pop    ds
  405fee:	ds jae 0x406068
  405ff1:	add    al,0x3f
  405ff3:	call   0x6a2e:0x5bd34920
  405ffa:	icebp  
  405ffb:	sub    dh,BYTE PTR [ecx]
  405ffd:	mov    ah,0xde
  405fff:	repz adc BYTE PTR [edi],ch
  406002:	sub    esp,DWORD PTR [edx-0x2e]
  406005:	cmp    ch,dh
  406007:	imul   edx,DWORD PTR ds:0xf33bc4cf,0xffffffe5
  40600e:	clc    
  40600f:	sub    ebp,DWORD PTR [ecx]
  406011:	sbb    esp,DWORD PTR [eax-0x975f805]
  406017:	jo     0x40606f
  406019:	inc    ebx
  40601a:	xchg   ebp,eax
  40601b:	lds    edx,FWORD PTR [edx-0x66e9141e]
  406021:	fstp   TBYTE PTR [eax-0x48e2e26a]
  406027:	imul   edx,DWORD PTR [ebp-0x6b],0x40
  40602b:	(bad)  
  40602c:	(bad)  
  40602d:	es retf 
  40602f:	shl    ch,1
  406031:	add    cl,BYTE PTR [edx+0x29]
  406034:	ins    DWORD PTR es:[edi],dx
  406035:	inc    edi
  406036:	xor    esi,DWORD PTR [edx+0x68c9f721]
  40603c:	enter  0xcddb,0x7c
  406040:	mov    edi,0x5e58ec53
  406045:	add    eax,DWORD PTR [eax]
  406047:	ret    0x636a
  40604a:	push   ecx
  40604b:	shr    BYTE PTR [edx+0xb2df450],cl
  406051:	xchg   ebp,eax
  406052:	push   eax
  406053:	ret    0xcaa1
  406056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406057:	cmp    esp,edi
  406059:	(bad)  
  40605a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40605b:	cmp    eax,DWORD PTR [ecx+0x58]
  40605e:	inc    ebx
  40605f:	fs sbb eax,0x77739a3f
  406065:	ins    DWORD PTR es:[edi],dx
  406066:	push   esp
  406067:	or     DWORD PTR ds:[edx],ebx
  40606a:	pop    esp
  40606b:	mov    ebp,DWORD PTR [edi]
  40606d:	jae    0x405fef
  40606f:	mov    al,ds:0xf2473e7b
  406074:	call   0xfd73:0xf1a1bba9
  40607b:	inc    ebx
  40607c:	push   cs
  40607d:	popf   
  40607e:	outs   dx,DWORD PTR ds:[esi]
  40607f:	ins    DWORD PTR es:[edi],dx
  406080:	jp     0x4060ac
  406082:	mov    ebx,0xafd6c773
  406087:	data16 (bad) 
  406089:	add    edi,ebx
  40608b:	jp     0x406087
  40608d:	or     ecx,esp
  40608f:	(bad)  
  406090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406091:	das    
  406092:	std    
  406093:	push   ecx
  406094:	imul   ebp,DWORD PTR [ebx],0x52
  406097:	and    BYTE PTR [edx],ch
  406099:	(bad)  
  40609a:	cmp    BYTE PTR [eax+ecx*2+0x7116b48b],al
  4060a1:	dec    edi
  4060a2:	pop    edi
  4060a3:	or     DWORD PTR [eax],0x23
  4060a6:	pop    ecx
  4060a7:	add    bh,bh
  4060a9:	enter  0xfab5,0xa1
  4060ad:	into   
  4060ae:	gs mov cl,0xc8
  4060b1:	jb     0x406051
  4060b3:	lods   al,BYTE PTR ds:[esi]
  4060b4:	and    eax,0x535745c1
  4060b9:	and    eax,0x4976d87b
  4060be:	std    
  4060bf:	pop    es
  4060c0:	test   BYTE PTR [edx+0xc85e1ac],0x31
  4060c7:	mov    dl,0xe4
  4060c9:	mov    ecx,0x9f0aae34
  4060ce:	lahf   
  4060cf:	mov    edx,0x60b0ec2b
  4060d4:	jecxz  0x4060ed
  4060d6:	or     al,0x15
  4060d8:	push   ds
  4060d9:	in     al,dx
  4060da:	fld    st(3)
  4060dc:	jno    0x406129
  4060de:	push   ss
  4060df:	and    bl,dl
  4060e1:	push   edx
  4060e2:	cmc    
  4060e3:	mov    ecx,0x84b8284b
  4060e8:	cmc    
  4060e9:	adc    ax,0xd19a
  4060ed:	scas   al,BYTE PTR es:[edi]
  4060ee:	leave  
  4060ef:	ja     0x406075
  4060f1:	fsub   DWORD PTR [edx]
  4060f3:	(bad)  
  4060f4:	fcomp  QWORD PTR [ebp+0x61]
  4060f7:	sahf   
  4060f8:	ins    DWORD PTR es:[edi],dx
  4060f9:	xor    al,BYTE PTR ds:0xf9d6d6cc
  4060ff:	ret    
  406100:	dec    ebx
  406101:	adc    edx,DWORD PTR [esi]
  406103:	fiadd  DWORD PTR [eax+ebx*4-0x6a]
  406107:	add    eax,0x58a4fc16
  40610c:	ins    DWORD PTR es:[edi],dx
  40610d:	adc    al,0xe6
  40610f:	sbb    al,BYTE PTR es:[eax+0x5f617291]
  406116:	in     eax,0xd3
  406118:	sar    ah,1
  40611a:	jb     0x4060fe
  40611c:	mov    eax,ds:0x3990009d
  406121:	xchg   ebp,ebp
  406123:	mov    bl,0x43
  406125:	(bad)  [eax-0x39373a3f]
  40612b:	fs call 0xfc038976
  406131:	jmp    0x7d39:0xbef8b588
  406138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406139:	xchg   DWORD PTR [esi+ebp*1+0x64db41ab],ebp
  406140:	sub    BYTE PTR [ecx-0x5f293ac7],dh
  406146:	aad    0xd
  406148:	mov    edi,0x34043050
  40614d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40614e:	fsubr  QWORD PTR [eax]
  406150:	inc    esi
  406151:	pop    ss
  406152:	dec    eax
  406153:	adc    al,0xb
  406155:	mov    edi,0xc96d258e
  40615a:	inc    esp
  40615b:	(bad)  
  40615c:	jmp    0x40615e
  40615e:	in     eax,0x22
  406160:	cmp    BYTE PTR [edi],bh
  406162:	dec    ebx
  406163:	inc    edi
  406164:	shl    DWORD PTR [esi+0x3d],cl
  406167:	cmp    BYTE PTR [eax-0x72],bh
  40616a:	sub    dh,BYTE PTR [ecx+esi*8+0x64]
  40616e:	sub    esi,0xffffffb7
  406171:	add    al,0x18
  406173:	push   ecx
  406174:	js     0x40617e
  406176:	test   al,0x14
  406178:	inc    ecx
  406179:	je     0x40617f
  40617b:	ret    
  40617c:	push   eax
  40617d:	sbb    al,0x3c
  40617f:	push   0x749f3797
  406184:	mov    al,ds:0x4cb73cae
  406189:	inc    eax
  40618a:	sbb    DWORD PTR [eax+0x5f],eax
  40618d:	inc    edx
  40618e:	bound  edx,QWORD PTR [eax]
  406190:	mov    al,0xa1
  406192:	imul   edi,DWORD PTR [ebp+0x47b8f96],0xfd80f6ff
  40619c:	mov    ds,WORD PTR [edi+eax*1]
  40619f:	mov    al,0xbd
  4061a1:	xor    ebp,ebx
  4061a3:	or     ecx,ebx
  4061a5:	test   eax,0x2595bd47
  4061aa:	push   0x28
  4061ac:	mov    bh,0x70
  4061ae:	test   DWORD PTR [ebp+0x78],edx
  4061b1:	fstp   TBYTE PTR [esi+0x16]
  4061b4:	sbb    eax,DWORD PTR [eax]
  4061b6:	sub    BYTE PTR [ebp-0x37],ah
  4061b9:	pop    bp
  4061bb:	and    eax,0xb4f27708
  4061c0:	push   0xf8916689
  4061c5:	dec    eax
  4061c6:	sbb    eax,DWORD PTR [eax+eax*1+0x0]
  4061ca:	mov    esi,DWORD PTR [edx+ebp*4+0x4f]
  4061ce:	sub    ebx,DWORD PTR [esi-0x1d93c91c]
  4061d4:	sub    DWORD PTR [ebx],eax
  4061d6:	push   edx
  4061d7:	xor    DWORD PTR [ecx-0x7409b3c7],0xde490017
  4061e1:	pop    ebx
  4061e2:	loope  0x406243
  4061e4:	and    edx,eax
  4061e6:	push   0xffffffdf
  4061e8:	lods   al,BYTE PTR ds:[esi]
  4061e9:	inc    ebx
  4061ea:	inc    edx
  4061eb:	inc    edx
  4061ec:	or     edx,ebx
  4061ee:	xor    DWORD PTR [ebx],esp
  4061f0:	not    DWORD PTR [eax]
  4061f2:	(bad)  
  4061f3:	rcr    BYTE PTR [edi],1
  4061f5:	rcr    BYTE PTR [eax+eiz*4],1
  4061f8:	sub    al,0xc0
  4061fa:	mov    eax,ds:0x584d023e
  4061ff:	push   ds
  406200:	add    ebx,DWORD PTR [esi]
  406202:	and    BYTE PTR [ebx+0xffb042f],dl
  406208:	jmp    0x61cc0ed6
  40620d:	test   eax,0xcbaf58e2
  406212:	and    BYTE PTR [edx+edi*2-0x6a47df0],bh
  406219:	dec    esp
  40621a:	in     eax,dx
  40621b:	test   BYTE PTR [esi+0x15a871c2],dh
  406221:	dec    esi
  406222:	aaa    
  406223:	pop    ecx
  406224:	jg     0x4061e7
  406226:	adc    al,0x44
  406228:	sahf   
  406229:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40622b:	fadd   DWORD PTR [ecx+0x61]
  40622e:	push   ss
  40622f:	xchg   BYTE PTR [eax-0xe175654],dl
  406235:	nop    DWORD PTR [ebp-0x35]
  406239:	adc    bl,BYTE PTR [edi]
  40623b:	cmp    al,0xae
  40623d:	bound  ebp,QWORD PTR [esi]
  40623f:	cs dec esp
  406241:	test   DWORD PTR [edi],eax
  406243:	(bad)  
  406245:	mov    cl,0x59
  406247:	ret    0xc3cb
  40624a:	punpckhdq mm3,QWORD PTR [esi-0x55559eff]
  406251:	test   esp,esi
  406253:	jb     0x4061d5
  406255:	add    BYTE PTR [edi+edx*8+0x45],dl
  406259:	aad    0x67
  40625b:	and    BYTE PTR [ebx+0x76],bl
  40625e:	or     dl,BYTE PTR [edx+0x33fba065]
  406264:	mov    DWORD PTR [ebp+0x3415da],edx
  40626a:	sub    eax,0x1636392a
  40626f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406270:	sbb    DWORD PTR [ecx-0x6b9a5aab],esp
  406276:	xor    BYTE PTR [ebx],al
  406278:	and    al,0x80
  40627a:	cdq    
  40627b:	mov    bl,0xd9
  40627d:	sbb    DWORD PTR [edx],0x4c
  406280:	mov    DWORD PTR [ebp+0x77],esp
  406283:	aad    0x27
  406285:	cmp    eax,0x471c2396
  40628a:	push   ebx
  40628b:	bound  ebx,QWORD PTR [esi+0x7]
  40628e:	push   ebp
  40628f:	mov    DWORD PTR [esp+edx*8-0x3c],eax
  406293:	fcmovb st,st(6)
  406295:	mov    eax,0x374f763
  40629a:	dec    edx
  40629b:	mov    al,0x8a
  40629d:	(bad)  
  40629e:	cld    
  40629f:	jmp    0xbf70232f
  4062a4:	push   ebp
  4062a5:	ds push edi
  4062a7:	xor    ch,BYTE PTR [ebx+eax*8]
  4062aa:	cmp    DWORD PTR [edi+eiz*8],eax
  4062ad:	aad    0x9f
  4062af:	test   eax,0xfef5a791
  4062b4:	in     al,0xb2
  4062b6:	sahf   
  4062b7:	or     esi,DWORD PTR ds:0x3068fbfb
  4062bd:	jmp    0x40630a
  4062bf:	adc    ebp,esi
  4062c1:	xchg   edx,eax
  4062c2:	lds    ecx,FWORD PTR [ebx-0x147c43bf]
  4062c8:	sbb    BYTE PTR [edi-0x19b81e6e],dh
  4062ce:	pop    es
  4062cf:	or     esi,DWORD PTR [ebp-0x7921a089]
  4062d5:	arpl   WORD PTR [edx-0x20af9862],bx
  4062db:	cmp    BYTE PTR [edi-0x7f],ch
  4062de:	retf   
  4062df:	mov    ecx,0x3970787a
  4062e4:	add    DWORD PTR [ebx],ebp
  4062e6:	shr    BYTE PTR [ecx-0x1fe46d5a],cl
  4062ec:	push   ds
  4062ed:	and    BYTE PTR [edx],ch
  4062ef:	jne    0x4062cd
  4062f1:	mov    bh,0xe5
  4062f3:	aas    
  4062f4:	push   0x8e7d9b7b
  4062f9:	push   cs
  4062fa:	xchg   edx,eax
  4062fb:	lods   al,BYTE PTR ds:[esi]
  4062fc:	ins    DWORD PTR es:[edi],dx
  4062fd:	cmp    ebp,esp
  4062ff:	loopne 0x406356
  406301:	push   0xbea0ddcc
  406306:	imul   DWORD PTR fs:[ecx]
  406309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630a:	sub    DWORD PTR [ecx],edi
  40630c:	xchg   ebx,eax
  40630d:	cmp    eax,0x447a7c9
  406312:	pop    ebx
  406313:	inc    edx
  406314:	adc    BYTE PTR ds:0xbc4f9bd7,dh
  40631a:	and    DWORD PTR [edi],esi
  40631c:	dec    ebx
  40631d:	mov    edx,DWORD PTR [edx]
  40631f:	mov    bh,0xf4
  406321:	adc    eax,0x2e92ba24
  406326:	bound  esp,QWORD PTR [ebx]
  406328:	adc    BYTE PTR ds:0x76496e7f,dl
  40632e:	(bad)  
  406330:	push   ebp
  406331:	jge    0x40639b
  406333:	sahf   
  406334:	push   esi
  406335:	xor    al,BYTE PTR [edx-0x25]
  406338:	js     0x406370
  40633a:	rcr    DWORD PTR [esi+0x72a91177],0xa0
  406341:	loope  0x4062c9
  406343:	retf   0xa5d1
  406346:	dec    ecx
  406347:	push   cs
  406348:	iret   
  406349:	lds    ebx,FWORD PTR [ebx-0x1022c146]
  40634f:	pop    edx
  406350:	stos   DWORD PTR es:[edi],eax
  406351:	sbb    BYTE PTR [ebp+0x2f],ah
  406354:	nop
  406355:	pop    edi
  406356:	cwde   
  406357:	js     0x406325
  406359:	push   eax
  40635a:	sub    bl,BYTE PTR [edi]
  40635c:	(bad)  
  40635d:	ret    0x7bde
  406360:	iret   
  406361:	xor    al,0x45
  406363:	add    ebp,DWORD PTR [ebx+0x61c3f6ed]
  406369:	sbb    edx,ecx
  40636b:	nop
  40636c:	mov    ch,0xa0
  40636e:	(bad)  
  406370:	and    edi,eax
  406372:	sub    ebp,eax
  406374:	mov    DWORD PTR [edi+0x6b1f2dd2],esi
  40637a:	cmp    DWORD PTR [ecx],edx
  40637c:	dec    edi
  40637d:	inc    ecx
  40637e:	inc    ebx
  40637f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406380:	or     al,0xc8
  406382:	mov    ebx,0xc7ddaff5
  406387:	(bad)  
  406388:	rol    DWORD PTR [ecx-0x12b7335f],1
  40638e:	je     0x406342
  406390:	or     ch,bh
  406392:	clc    
  406393:	lods   al,BYTE PTR ds:[esi]
  406394:	xor    esp,DWORD PTR [esi-0x1a]
  406397:	cwde   
  406398:	add    dl,BYTE PTR [ecx]
  40639a:	dec    edi
  40639b:	pop    edi
  40639c:	cwde   
  40639d:	push   ecx
  40639e:	shl    DWORD PTR [eax+0x8ea69ad],1
  4063a4:	outs   dx,DWORD PTR ds:[esi]
  4063a5:	sbb    DWORD PTR [eax-0x2079f432],esi
  4063ab:	pop    es
  4063ac:	add    dh,BYTE PTR [edx+0x32]
  4063af:	call   0x82df2e9a
  4063b4:	and    esi,DWORD PTR [esi+0x6942ade2]
  4063ba:	adc    BYTE PTR [ebx+0x7d31496f],cl
  4063c0:	jmp    0x40640a
  4063c2:	xchg   ebp,eax
  4063c3:	sbb    al,0x3e
  4063c5:	mov    ebp,DWORD PTR [eax-0x26]
  4063c8:	repz test eax,0x9b7b94a8
  4063ce:	ficomp DWORD PTR [esi]
  4063d0:	lods   eax,DWORD PTR ds:[esi]
  4063d1:	pushf  
  4063d2:	(bad)  
  4063d3:	nop
  4063d4:	cwde   
  4063d5:	jecxz  0x406369
  4063d7:	mov    ch,BYTE PTR [ebx]
  4063d9:	mov    bl,0xcd
  4063db:	pop    ebp
  4063dc:	lock jb 0x4063f2
  4063df:	mov    ?,WORD PTR [esi]
  4063e1:	dec    esp
  4063e2:	jmp    0x939a3197
  4063e7:	dec    esp
  4063e8:	into   
  4063e9:	lods   al,BYTE PTR ds:[esi]
  4063ea:	cmp    ebp,ebp
  4063ec:	mov    ebx,0xc44261fd
  4063f1:	dec    ebp
  4063f2:	mov    ds:0x26f0ab27,al
  4063f7:	iret   
  4063f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f9:	mov    bl,0x8d
  4063fb:	loopne 0x40647a
  4063fd:	or     eax,0x6ce846db
  406402:	mov    dl,0x98
  406404:	inc    eax
  406405:	out    0x89,eax
  406407:	adc    eax,0xaee9f80b
  40640c:	add    al,0x7e
  40640e:	lahf   
  40640f:	sbb    edx,ebp
  406411:	push   ebx
  406412:	inc    ebx
  406413:	cmc    
  406414:	mov    ds:0xa86a6684,al
  406419:	push   esi
  40641a:	sub    ebp,esi
  40641c:	imul   ebx,DWORD PTR [ebx+0x48f9f65d],0x39398ee1
  406426:	hlt    
  406427:	sub    bl,BYTE PTR [esi]
  406429:	xchg   edi,eax
  40642a:	adc    al,0x56
  40642c:	jne    0x4064aa
  40642e:	dec    esp
  40642f:	and    DWORD PTR ds:0x75528c99,ebx
  406435:	inc    ebp
  406436:	jbe    0x406443
  406438:	int    0xda
  40643a:	mov    cs,esi
  40643c:	jmp    0x4063ec
  40643e:	jp     0x406481
  406440:	out    0x38,al
  406442:	push   ebx
  406443:	dec    ebx
  406444:	sbb    ecx,DWORD PTR [ecx-0x2d]
  406447:	and    DWORD PTR [edx+eiz*8],ebp
  40644a:	cmc    
  40644b:	fwait
  40644c:	mov    ebx,0xaf366135
  406451:	xchg   ebp,eax
  406452:	inc    eax
  406453:	cmp    al,0xd2
  406455:	inc    ecx
  406456:	mov    ds:0xa5e3c13f,eax
  40645b:	lds    ebp,FWORD PTR [ecx-0x789c006f]
  406461:	cwde   
  406462:	add    bh,cl
  406464:	fs push ecx
  406466:	push   es
  406467:	outs   dx,DWORD PTR ds:[esi]
  406468:	jb     0x40642d
  40646a:	and    al,0xd8
  40646c:	fstp   DWORD PTR [edx-0x29]
  40646f:	loope  0x40646e
  406471:	or     al,0x87
  406473:	or     BYTE PTR [eax-0x49],bh
  406476:	sub    al,ah
  406478:	imul   DWORD PTR [esi+0x8]
  40647b:	mov    bl,0xa2
  40647d:	hlt    
  40647e:	and    dh,BYTE PTR [eax+eiz*4+0x1b39a1d2]
  406485:	addr16 fs loope 0x4064c2
  406489:	push   ds
  40648a:	push   esi
  40648b:	pop    ebp
  40648c:	leave  
  40648d:	aas    
  40648e:	adc    cl,BYTE PTR [esp+edi*2-0x33887854]
  406495:	shl    BYTE PTR [ebp-0x346f8447],1
  40649b:	xchg   DWORD PTR [ebp+0x73a704b2],esi
  4064a1:	pop    edi
  4064a2:	cmp    al,0xb8
  4064a4:	dec    esi
  4064a5:	and    edx,DWORD PTR [edx-0x4f8a2d9c]
  4064ab:	inc    ebp
  4064ac:	inc    ebx
  4064ad:	in     eax,dx
  4064ae:	mov    dl,bl
  4064b0:	push   0xffffff80
  4064b2:	cmp    eax,0x295beffb
  4064b7:	pushf  
  4064b8:	push   esi
  4064b9:	rol    BYTE PTR [ebx+0x12],1
  4064bc:	and    eax,0x454510a3
  4064c1:	or     DWORD PTR [eax+0x25],edi
  4064c4:	adc    edx,DWORD PTR [ebx-0x16488b72]
  4064ca:	enter  0xc5be,0x1e
  4064ce:	sub    eax,0xa6906234
  4064d3:	dec    esp
  4064d4:	mov    WORD PTR [eax-0x7d71d9a7],fs
  4064da:	push   eax
  4064db:	add    eax,0x7f7d5040
  4064e0:	jnp    0x40652c
  4064e2:	(bad)  
  4064e3:	clc    
  4064e4:	out    dx,al
  4064e5:	out    0xe5,al
  4064e7:	jp     0x40649d
  4064e9:	call   0xf0e9d571
  4064ee:	fadd   DWORD PTR [ebp+0x3fcba141]
  4064f4:	(bad)  
  4064f5:	push   es
  4064f6:	inc    esp
  4064f7:	adc    ch,BYTE PTR [ecx-0x3b924b7]
  4064fd:	jp     0x40651e
  4064ff:	and    BYTE PTR ds:0x5c0d3ed8,bl
  406505:	daa    
  406506:	adc    DWORD PTR [edi],0x3f
  406509:	mov    dl,0xd4
  40650b:	into   
  40650c:	pop    eax
  40650d:	inc    eax
  40650e:	mov    ebp,0x82d212c5
  406513:	add    esp,DWORD PTR [ebp+eax*4+0x1907dab9]
  40651a:	cdq    
  40651b:	pusha  
  40651c:	pop    es
  40651d:	cmp    bh,dh
  40651f:	xchg   DWORD PTR [esi+ecx*4+0x847f0b8],edx
  406526:	mov    ah,0xda
  406528:	pop    es
  406529:	or     ebx,DWORD PTR ds:0x1b5e578b
  40652f:	mov    dl,0xc5
  406531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406532:	sub    BYTE PTR [ecx-0x71e8b7df],dl
  406538:	xchg   edx,eax
  406539:	jae    0x406509
  40653b:	retf   0xe6d
  40653e:	xchg   ecx,eax
  40653f:	fistp  DWORD PTR [eax-0x3d]
  406542:	sub    eax,0x19a8cb49
  406547:	jecxz  0x4064fe
  406549:	arpl   cx,sp
  40654b:	retf   
  40654c:	icebp  
  40654d:	test   al,0xfb
  40654f:	sub    dh,0xe4
  406552:	sbb    dl,0x0
  406555:	retf   
  406556:	call   0xc6a8523e
  40655b:	stc    
  40655c:	and    esp,DWORD PTR [edi+0x7ee5dffd]
  406562:	dec    edi
  406563:	or     DWORD PTR [edx+edx*4+0x2e],ebp
  406567:	and    bl,cl
  406569:	jp     0x406590
  40656b:	popf   
  40656c:	adc    eax,0x521b6af8
  406571:	ds ins BYTE PTR es:[edi],dx
  406573:	dec    edx
  406574:	in     al,0x97
  406576:	(bad)  
  406578:	ja     0x406527
  40657a:	or     BYTE PTR [bx+si-0x1fe4],ah
  40657f:	or     al,0x1e
  406581:	mul    DWORD PTR [esi-0x73a38887]
  406587:	jo     0x4065a8
  406589:	outs   dx,DWORD PTR ds:[esi]
  40658a:	dec    esi
  40658b:	(bad)  
  40658c:	cwde   
  40658d:	push   eax
  40658e:	imul   eax,DWORD PTR [edx+0x5007bfcf],0x65
  406595:	mul    ebx
  406597:	(bad)  
  406598:	jmp    0x4065c4
  40659a:	or     dl,bh
  40659c:	or     BYTE PTR [edi-0x5a],cl
  40659f:	jmp    0xea76c4da
  4065a4:	inc    ebx
  4065a5:	mov    ecx,0x3d8e3920
  4065aa:	iret   
  4065ab:	repnz inc edi
  4065ad:	and    BYTE PTR [ebx+0x61],ch
  4065b0:	in     al,dx
  4065b1:	sub    BYTE PTR [edx-0x55],cl
  4065b4:	dec    ecx
  4065b5:	push   ebp
  4065b6:	or     ecx,DWORD PTR [ebp-0x2caaadda]
  4065bc:	sub    dl,BYTE PTR [edx]
  4065be:	inc    ecx
  4065bf:	inc    ebp
  4065c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c1:	aad    0x90
  4065c3:	das    
  4065c4:	(bad)  
  4065c5:	(bad)  
  4065c6:	mov    BYTE PTR [ebp-0x3ce328b0],bl
  4065cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065cd:	into   
  4065ce:	pushf  
  4065cf:	test   ecx,ecx
  4065d1:	or     esi,DWORD PTR [esp+ecx*4]
  4065d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065d5:	hlt    
  4065d6:	or     eax,0xfcae7b84
  4065db:	imul   edx,DWORD PTR [ebx+0x6f],0x66526644
  4065e2:	add    BYTE PTR [eax-0x6f40c36f],dl
  4065e8:	nop
  4065e9:	mov    ebx,ecx
  4065eb:	aas    
  4065ec:	fcom   QWORD PTR [eax+edi*4+0x69fad034]
  4065f3:	mov    dl,0x42
  4065f5:	mov    al,ds:0xf0c4ce4
  4065fa:	adc    BYTE PTR [ecx-0x3fbd016f],dh
  406600:	retf   
  406601:	xor    BYTE PTR [edi],0x86
  406604:	adc    BYTE PTR [esi+0x47c9be26],bl
  40660a:	mov    ch,0xed
  40660c:	xchg   edi,eax
  40660d:	pop    ebp
  40660e:	xor    DWORD PTR [edx],0x5f5ce114
  406614:	cmp    DWORD PTR [esp+ecx*1-0xb2c4611],esp
  40661b:	idiv   bh
  40661d:	retf   
  40661e:	dec    eax
  40661f:	and    BYTE PTR [edi+eax*2-0x39],dl
  406623:	(bad)  
  406625:	(bad)  [esi+esi*1+0x490f0ca3]
  40662c:	jg     0x406604
  40662e:	sub    edi,DWORD PTR [edi-0x34c2714b]
  406634:	inc    ecx
  406635:	push   ss
  406636:	aad    0x33
  406638:	shr    BYTE PTR ds:0x112e07c5,cl
  40663e:	add    al,0x73
  406640:	and    bh,ch
  406642:	mov    edx,0xa3d30e12
  406647:	add    al,BYTE PTR [ebp+eiz*1+0x1172c964]
  40664e:	test   eax,0x65000083
  406653:	or     esp,ebp
  406655:	mov    ch,BYTE PTR [eax+0x10]
  406658:	enter  0x86aa,0x15
  40665c:	aas    
  40665d:	loope  0x406675
  40665f:	push   ds
  406660:	(bad)  
  406662:	sbb    al,0xba
  406664:	jge    0x406673
  406666:	or     cl,cl
  406668:	dec    ebx
  406669:	shr    BYTE PTR [esi+0x3f1fea5e],cl
  40666f:	cmp    al,0x3f
  406671:	loopne 0x406661
  406673:	call   0x5aee:0x8bad9dea
  40667a:	xchg   BYTE PTR [eax+0x147257d0],ah
  406680:	jl     0x40669e
  406682:	and    DWORD PTR [edx-0x3c],esi
  406685:	fwait
  406686:	mov    ds:0x8aeafe58,eax
  40668b:	push   esp
  40668c:	loopne 0x4066d8
  40668e:	add    al,BYTE PTR [edi]
  406690:	int    0x19
  406692:	sub    esi,DWORD PTR [edi-0x2e]
  406695:	test   al,0x22
  406697:	enter  0x143c,0x74
  40669b:	mov    ch,0x9a
  40669d:	pop    esi
  40669e:	sbb    ebp,DWORD PTR [eax+0x47]
  4066a1:	imul   esi,eax,0xfffffff7
  4066a4:	adc    eax,0xd39f4a1c
  4066a9:	loope  0x406654
  4066ab:	and    dh,BYTE PTR [ecx-0x3ed8e84f]
  4066b1:	sbb    dh,bl
  4066b3:	adc    al,0xc5
  4066b5:	mov    BYTE PTR [ebp+ecx*2+0x23],0xc7
  4066ba:	fucom  st(2)
  4066bc:	fxch   st(1)
  4066be:	dec    ebx
  4066bf:	jmp    0x40665c
  4066c1:	jmp    0x3723:0x5cfab3dd
  4066c8:	test   BYTE PTR [ecx+eax*4+0x6e],bl
  4066cc:	inc    ebx
  4066cd:	and    bl,BYTE PTR [ebx]
  4066cf:	imul   DWORD PTR [ebx+0x7cfb7c4c]
  4066d5:	test   BYTE PTR [esi+ebp*2-0x78],0x2f
  4066da:	mov    edi,0x408ed85e
  4066df:	lock inc esi
  4066e1:	hlt    
  4066e2:	arpl   WORD PTR [ecx+0x2b],ax
  4066e5:	(bad)  
  4066e6:	rol    BYTE PTR [esi-0x5d],cl
  4066e9:	inc    ecx
  4066ea:	mov    eax,0xdd7eb9ce
  4066ef:	je     0x406715
  4066f1:	(bad)  
  4066f2:	in     al,0xca
  4066f4:	sahf   
  4066f5:	add    DWORD PTR [ebp+0x3a],esp
  4066f8:	out    dx,al
  4066f9:	lea    edx,[eax+0x60]
  4066fc:	pop    edx
  4066fd:	jns    0x4066f3
  4066ff:	push   ebp
  406700:	dec    edi
  406701:	idiv   DWORD PTR [ecx+0x19]
  406704:	por    mm3,QWORD PTR [edi+0x73]
  406708:	xchg   ebp,eax
  406709:	mov    bh,0x39
  40670b:	(bad)  
  40670c:	jmp    DWORD PTR [ebx-0x3a]
  40670f:	(bad)  
  406710:	xlat   BYTE PTR ds:[ebx]
  406711:	inc    eax
  406712:	sub    eax,0xde2372df
  406717:	leave  
  406718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406719:	(bad)  
  40671a:	adc    bl,dl
  40671c:	and    DWORD PTR [ebx+esi*4],esi
  40671f:	neg    edi
  406721:	data16 fiadd DWORD PTR [esi+0x7b]
  406725:	mov    bl,0x25
  406727:	jne    0x406759
  406729:	mov    BYTE PTR [esi-0x29],cl
  40672c:	stc    
  40672d:	lock jecxz 0x40670e
  406730:	es push ecx
  406732:	sub    ecx,DWORD PTR ds:0x67a438f3
  406738:	(bad)  
  406739:	sbb    al,BYTE PTR [ebx]
  40673b:	rcr    esi,cl
  40673d:	mov    cs,WORD PTR [edx]
  40673f:	adc    al,0xaa
  406741:	jae    0x4066e6
  406743:	mov    gs,WORD PTR [edx]
  406745:	out    dx,al
  406746:	scas   al,BYTE PTR es:[edi]
  406747:	mov    eax,ds:0x44982be3
  40674c:	ss in  al,dx
  40674e:	addr16 jge 0x4066fb
  406751:	out    dx,eax
  406752:	cmp    eax,0xba1805b
  406757:	das    
  406758:	cdq    
  406759:	and    eax,0xf01503b6
  40675e:	adc    DWORD PTR [ebx+0x64013389],edx
  406764:	mov    ah,0x43
  406766:	mov    bl,0xfa
  406768:	shr    BYTE PTR [edi],0x6
  40676b:	push   ebx
  40676c:	mov    DWORD PTR [eax],eax
  40676e:	aam    0x4a
  406770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406771:	loopne 0x406790
  406773:	test   al,0xb7
  406775:	add    BYTE PTR [ebx-0x43665f97],dl
  40677b:	push   esp
  40677c:	and    eax,0x97b7aa5
  406781:	rcl    DWORD PTR [ecx],1
  406783:	loop   0x4067f3
  406785:	pop    esi
  406786:	aaa    
  406787:	adc    dh,ah
  406789:	outs   dx,DWORD PTR ds:[esi]
  40678a:	inc    edi
  40678b:	mov    bl,0x9e
  40678d:	push   0x5ff573aa
  406792:	mov    ah,dh
  406794:	sbb    al,0xd
  406796:	xchg   ebx,eax
  406797:	mov    dh,0x2b
  406799:	mov    bh,0xf7
  40679b:	push   edx
  40679c:	jbe    0x4067d5
  40679e:	mov    ch,0xb3
  4067a0:	(bad)  
  4067a1:	lahf   
  4067a2:	rcl    BYTE PTR [ebp-0x76b8fb0b],1
  4067a8:	jg     0x406752
  4067aa:	fld    QWORD PTR [edx+ebx*2]
  4067ad:	push   ss
  4067ae:	jmp    0x3082196e
  4067b3:	inc    ecx
  4067b4:	or     DWORD PTR [edi-0x3f],ecx
  4067b7:	out    0xfd,eax
  4067b9:	push   ebx
  4067ba:	sbb    esi,edx
  4067bc:	cmp    DWORD PTR [esi+0x784a2c68],edx
  4067c2:	gs sbb ebp,edx
  4067c5:	adc    dh,BYTE PTR [ebp+0x75]
  4067c8:	jbe    0x4067e0
  4067ca:	push   esi
  4067cb:	std    
  4067cc:	adc    DWORD PTR [eax],0xffffffe0
  4067cf:	cmp    eax,0x50c1b41b
  4067d4:	xlat   BYTE PTR ds:[ebx]
  4067d5:	fwait
  4067d6:	mov    bh,0xbc
  4067d8:	cmp    dl,ch
  4067da:	sti    
  4067db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067dc:	test   DWORD PTR [ecx],edx
  4067de:	mov    esi,0x3e07e7a
  4067e3:	and    ch,bl
  4067e5:	xor    al,0xfd
  4067e7:	inc    ebx
  4067e8:	daa    
  4067e9:	push   esi
  4067ea:	mov    ds:0x48a3f3a1,eax
  4067ef:	xchg   ebx,edi
  4067f1:	popf   
  4067f2:	ins    BYTE PTR es:[edi],dx
  4067f3:	push   0x20
  4067f5:	shl    DWORD PTR ss:[edx+0x28dac3dc],cl
  4067fc:	or     DWORD PTR [esi-0x1f],edx
  4067ff:	imul   edi,DWORD PTR [esi+esi*4-0x15],0xc934931b
  406807:	pop    edx
  406808:	and    BYTE PTR [esi+0x65],al
  40680b:	or     BYTE PTR [ebx+ecx*4-0x212b7b0a],ch
  406812:	xor    DWORD PTR [ecx-0x1e],ebx
  406815:	or     eax,DWORD PTR [ebx-0xa]
  406818:	or     al,0x22
  40681a:	xor    BYTE PTR [edx],dh
  40681c:	inc    edx
  40681d:	mul    edx
  40681f:	stc    
  406820:	mov    bl,0x81
  406822:	or     DWORD PTR [eax],edi
  406824:	xor    edi,ebx
  406826:	stc    
  406827:	ins    DWORD PTR es:[edi],dx
  406828:	cmp    al,0x46
  40682a:	push   ds
  40682b:	jl     0x40681e
  40682d:	je     0x40680b
  40682f:	sub    ebx,DWORD PTR [ecx]
  406831:	mov    edi,0x52775271
  406836:	mov    dh,0xbb
  406838:	xchg   edx,eax
  406839:	int    0xa8
  40683b:	adc    eax,0x21b81f6b
  406840:	inc    edx
  406841:	pop    ds
  406842:	inc    edi
  406843:	pop    ds
  406844:	imul   ecx,esp,0xc62cc8bf
  40684a:	inc    ebx
  40684b:	ret    
  40684c:	stos   DWORD PTR es:[edi],eax
  40684d:	bound  esi,QWORD PTR [eax]
  40684f:	adc    esp,0x85774b4c
  406855:	push   0xffffffd3
  406857:	xchg   edx,eax
  406858:	arpl   WORD PTR [edi+ebx*1-0x5d],bp
  40685c:	push   edi
  40685d:	push   ds
  40685e:	xchg   DWORD PTR [ebx],esi
  406860:	dec    edi
  406861:	sti    
  406862:	aam    0x63
  406864:	or     BYTE PTR [ecx+0x32],0xca
  406868:	test   BYTE PTR [esi],0x17
  40686b:	mov    edx,0x1aa5713d
  406870:	mov    al,BYTE PTR ds:0x5848ffaa
  406876:	test   al,0x3e
  406878:	call   0xe900:0xe10d1503
  40687f:	inc    esp
  406880:	pop    ss
  406881:	push   ebx
  406882:	jecxz  0x4068b0
  406884:	cmp    al,0x8e
  406886:	mov    edi,0xa65c9b4f
  40688b:	adc    esi,eax
  40688d:	mov    dh,0xf6
  40688f:	mov    ecx,0xfcf0929a
  406894:	mov    DWORD PTR [esi+0x489f11b3],eax
  40689a:	jge    0x4068fc
  40689c:	lea    esp,[edx*4+0x281bd3f3]
  4068a3:	lods   eax,DWORD PTR ds:[esi]
  4068a4:	mov    ds:0xffdec3de,eax
  4068a9:	xchg   ebp,edi
  4068ab:	daa    
  4068ac:	jecxz  0x406871
  4068ae:	and    esp,DWORD PTR [eax]
  4068b0:	pop    edx
  4068b1:	jecxz  0x4068ac
  4068b3:	aad    0x8d
  4068b5:	addr16 popa 
  4068b7:	jmp    0x406930
  4068b9:	and    BYTE PTR [edx+ebx*4+0x44a84b1a],ah
  4068c0:	pop    edi
  4068c1:	xor    DWORD PTR [edx+0x4a],ebp
  4068c4:	push   esp
  4068c5:	push   esp
  4068c6:	jne    0x40685e
  4068c8:	(bad)  
  4068c9:	fbld   TBYTE PTR [ecx+0x67645629]
  4068cf:	mov    ecx,DWORD PTR [eax-0xff95ad9]
  4068d5:	jbe    0x4068d3
  4068d7:	add    BYTE PTR [ebx],ch
  4068d9:	ja     0x4068d3
  4068db:	xchg   ebp,eax
  4068dc:	cdq    
  4068dd:	scas   eax,DWORD PTR es:[edi]
  4068de:	xlat   BYTE PTR ds:[ebx]
  4068df:	pop    ebp
  4068e0:	and    DWORD PTR [ebx-0x1e],0x4c
  4068e4:	push   DWORD PTR ds:0x5821e47
  4068ea:	adc    ch,BYTE PTR [esi]
  4068ec:	cld    
  4068ed:	lea    edx,[edx-0x43c03198]
  4068f3:	adc    edi,esp
  4068f5:	pop    esp
  4068f6:	push   ebp
  4068f7:	(bad)
  4068fa:	and    cl,dl
  4068fc:	and    esi,edi
  4068fe:	cmp    al,0xaf
  406900:	sub    BYTE PTR [eax+0x47],al
  406903:	inc    esi
  406904:	stc    
  406905:	pop    ecx
  406906:	and    DWORD PTR [ebp+0x29],esi
  406909:	test   DWORD PTR [ecx],ecx
  40690b:	stc    
  40690c:	stc    
  40690d:	pushf  
  40690e:	aaa    
  40690f:	lods   eax,DWORD PTR ds:[esi]
  406910:	sti    
  406911:	scas   al,BYTE PTR es:[edi]
  406912:	mov    DWORD PTR [eax-0x2d],edx
  406915:	sbb    DWORD PTR ds:0xcac93c81,edi
  40691b:	repz jmp FWORD PTR [edx+0x5e085236]
  406922:	jmp    0xd23c:0x20b64f70
  406929:	and    DWORD PTR [ebp+ebp*1+0x47],0xffffffac
  40692e:	iret   
  40692f:	add    al,0x83
  406931:	shl    eax,0x81
  406934:	enter  0x4ce3,0x74
  406938:	test   eax,0x4c05b14a
  40693d:	mov    eax,ds:0xade3699a
  406942:	cmp    eax,DWORD PTR [eax+0x1a]
  406945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406946:	into   
  406947:	inc    ebp
  406948:	add    dh,BYTE PTR [eax+ecx*4+0x2]
  40694c:	sbb    eax,0xc269abce
  406951:	adc    ch,BYTE PTR [esi]
  406953:	clc    
  406954:	cmp    eax,0x30c820d5
  406959:	aam    0x8
  40695b:	xor    eax,0xdb7c2b1e
  406960:	loope  0x4069df
  406962:	sub    al,0x59
  406964:	and    BYTE PTR [edx-0x5f4bcbef],dh
  40696a:	sbb    BYTE PTR [edx+0x57712e50],dl
  406970:	push   ebp
  406971:	push   esi
  406972:	xchg   ebx,eax
  406973:	mov    esp,0x3fa9d0fb
  406978:	sbb    ebx,DWORD PTR [ecx]
  40697a:	cmp    edi,DWORD PTR [ebx+0x43]
  40697d:	das    
  40697e:	dec    eax
  40697f:	loopne 0x406928
  406981:	adc    DWORD PTR [edx+0x4e],eax
  406984:	and    DWORD PTR [ebp+0xb644312],edx
  40698a:	inc    ebp
  40698b:	pushf  
  40698c:	into   
  40698d:	loop   0x406947
  40698f:	sub    BYTE PTR [ecx+0x57cc420b],0x39
  406996:	in     eax,dx
  406997:	int3   
  406998:	jg     0x4069a5
  40699a:	fs cmp eax,0x86beae69
  4069a0:	ficomp DWORD PTR [ebp+0x4b8e8ecf]
  4069a6:	ds daa 
  4069a8:	cld    
  4069a9:	and    DWORD PTR [ebx-0x8],0xf
  4069ad:	out    dx,eax
  4069ae:	mov    esp,0xb0a7630b
  4069b3:	cmp    ecx,DWORD PTR [ecx-0x78d82abc]
  4069b9:	mov    ds:0xfcb2c1f,eax
  4069be:	xlat   BYTE PTR ds:[ebx]
  4069bf:	aad    0xe0
  4069c1:	hlt    
  4069c2:	mov    ah,0xed
  4069c4:	out    dx,eax
  4069c5:	cli    
  4069c6:	(bad)  
  4069c7:	jle    0x406a1b
  4069c9:	cs repz repnz xchg edi,eax
  4069cd:	rcr    DWORD PTR [esi-0x30caee5a],1
  4069d3:	sub    al,0xfa
  4069d5:	lock push esp
  4069d7:	dec    ebx
  4069d8:	jbe    0x406990
  4069da:	loope  0x40699b
  4069dc:	sub    BYTE PTR [edx-0x1d],dl
  4069df:	add    BYTE PTR [ebp-0x26],al
  4069e2:	add    al,0xd6
  4069e4:	outs   dx,DWORD PTR ds:[esi]
  4069e5:	mov    eax,es:0xc3412723
  4069eb:	rol    BYTE PTR [ecx],0x5
  4069ee:	sbb    ah,bl
  4069f0:	push   esp
  4069f1:	loopne 0x406a01
  4069f3:	mov    bl,0x77
  4069f5:	mov    edx,0x17ddaa1c
  4069fa:	bound  edx,QWORD PTR [ebx-0x6187d7fe]
  406a00:	(bad)  
  406a01:	jmp    0x4069f9
  406a03:	or     al,0x21
  406a05:	pop    es
  406a06:	stos   DWORD PTR es:[edi],eax
  406a07:	jae    0x406a27
  406a09:	xor    al,0xd5
  406a0b:	je     0x406a45
  406a0d:	adc    BYTE PTR [esi],ch
  406a0f:	nop
  406a10:	xlat   BYTE PTR ds:[ebx]
  406a11:	cmp    bl,ch
  406a13:	mov    bh,0xf8
  406a15:	or     DWORD PTR [ecx],ecx
  406a17:	sti    
  406a18:	(bad)  
  406a19:	aam    0xbf
  406a1b:	stos   DWORD PTR es:[edi],eax
  406a1c:	dec    DWORD PTR [ecx]
  406a1e:	fmul   QWORD PTR [ebx+0x7f37790]
  406a24:	mov    dl,0x33
  406a26:	push   eax
  406a27:	fst    QWORD PTR ss:[esi+ebp*4+0x7e3e9036]
  406a2f:	sub    BYTE PTR [edi-0x2a],bh
  406a32:	dec    esi
  406a33:	pop    eax
  406a34:	xor    esi,edi
  406a36:	lods   al,BYTE PTR ds:[esi]
  406a37:	or     BYTE PTR [edx+ebp*2-0x33],cl
  406a3b:	pop    ebx
  406a3c:	add    ch,bh
  406a3e:	push   esp
  406a3f:	loope  0x4069c2
  406a41:	(bad)  
  406a42:	pushf  
  406a43:	(bad)  
  406a44:	cli    
  406a45:	xchg   ebx,eax
  406a46:	bound  ecx,QWORD PTR [ebp+0x2b29f315]
  406a4c:	xor    eax,0x8708784d
  406a51:	xlat   BYTE PTR ds:[ebx]
  406a52:	icebp  
  406a53:	push   cs
  406a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a55:	loope  0x406a37
  406a57:	aam    0xe0
  406a59:	or     ch,BYTE PTR [ecx-0x391205af]
  406a5f:	cmp    eax,0x841009e0
  406a64:	test   eax,0xac8ed859
  406a6a:	fcmove st,st(2)
  406a6c:	arpl   WORD PTR [eax],di
  406a6e:	add    al,0xa0
  406a70:	dec    ebx
  406a71:	leave  
  406a72:	std    
  406a73:	jecxz  0x406a5e
  406a75:	dec    esp
  406a76:	inc    edx
  406a77:	xor    BYTE PTR [ebp+0x5b],al
  406a7a:	pop    eax
  406a7b:	gs pusha 
  406a7d:	adc    cl,BYTE PTR [ebx]
  406a7f:	push   0x62db235c
  406a84:	xor    DWORD PTR [edx+0x3e670d62],ebp
  406a8a:	hlt    
  406a8b:	test   BYTE PTR [ecx+0x234d3ad5],ch
  406a91:	out    dx,eax
  406a92:	or     eax,0xd497f1a3
  406a97:	(bad)  
  406a98:	retf   
  406a99:	push   edx
  406a9a:	pop    esp
  406a9b:	rcl    al,1
  406a9d:	aad    0xc
  406a9f:	imul   ebx,DWORD PTR [edi+0x75],0x17
  406aa3:	adc    eax,0x7c7bbd08
  406aa8:	or     DWORD PTR [esi-0x6614f992],ebp
  406aae:	mov    ebx,DWORD PTR [eax-0x32a3e29d]
  406ab4:	arpl   bx,ax
  406ab6:	mov    WORD PTR ds:0xcade09fc,?
  406abc:	mov    ebp,DWORD PTR [ebx+esi*8]
  406abf:	(bad)  
  406ac0:	adc    ecx,DWORD PTR [edx+0x76b6f3e]
  406ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac7:	(bad)  
  406ac8:	pop    edi
  406ac9:	js     0x406ac7
  406acb:	jg     0x406b0a
  406acd:	xor    eax,esi
  406acf:	fistp  DWORD PTR [esi+0x40]
  406ad2:	xor    al,0x44
  406ad4:	mov    ds:0x521e60f5,eax
  406ad9:	push   ds
  406ada:	repnz add ebx,DWORD PTR [edx+eiz*8]
  406ade:	push   DWORD PTR [edx]
  406ae0:	(bad)  
  406ae1:	sub    cl,bh
  406ae3:	daa    
  406ae4:	das    
  406ae5:	les    esi,FWORD PTR [edi]
  406ae7:	cmp    eax,0xec93483f
  406aec:	sbb    dh,bl
  406aee:	inc    bp
  406af0:	loopne 0x406a90
  406af2:	cdq    
  406af3:	fld    DWORD PTR [esi+0x202204a]
  406af9:	pop    ebx
  406afa:	add    al,0xb5
  406afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406afd:	mov    ebp,0x39fdfc8a
  406b02:	push   ss
  406b03:	jge    0x406b1e
  406b05:	fist   DWORD PTR ds:[ebp+0x24]
  406b09:	popa   
  406b0a:	sbb    edi,ecx
  406b0c:	and    cl,BYTE PTR [edx]
  406b0e:	dec    esp
  406b0f:	push   ss
  406b10:	leave  
  406b11:	pop    esi
  406b12:	add    ebx,DWORD PTR [ebx]
  406b14:	pushf  
  406b15:	push   ebx
  406b16:	or     dh,dl
  406b18:	lods   al,BYTE PTR ds:[esi]
  406b19:	push   ds
  406b1a:	pop    esp
  406b1b:	fwait
  406b1c:	inc    ebp
  406b1d:	mov    dl,0xf4
  406b1f:	js     0x406b73
  406b21:	ds aas 
  406b23:	sub    eax,0x6eacd46
  406b28:	pop    edi
  406b29:	ror    ebx,cl
  406b2b:	ds xchg edi,eax
  406b2d:	in     al,0x5f
  406b2f:	push   0xd5a5de5
  406b34:	sbb    dl,BYTE PTR [eax+eax*2]
  406b37:	retf   
  406b38:	nop
  406b39:	imul   ebx,DWORD PTR [esi+eax*1-0x2229ab48],0x42853fdc
  406b44:	mov    gs,ebx
  406b46:	sahf   
  406b47:	push   edi
  406b48:	xchg   ecx,eax
  406b49:	repz pop ebp
  406b4b:	jbe    0x406bb1
  406b4d:	fsubr  st,st(2)
  406b4f:	or     eax,0xb9293710
  406b54:	mov    dh,0x80
  406b56:	mov    bh,0x29
  406b58:	stos   BYTE PTR es:[edi],al
  406b59:	outs   dx,DWORD PTR ds:[esi]
  406b5a:	iret   
  406b5b:	add    DWORD PTR ds:0xd74bc3cf,ecx
  406b61:	retf   
  406b62:	(bad)  
  406b64:	mov    edx,DWORD PTR [esi-0x44]
  406b67:	test   eax,0x5a7d04f6
  406b6c:	sar    ecx,0xfd
  406b6f:	in     eax,0xc9
  406b71:	(bad)  
  406b72:	mov    eax,0x13373ea
  406b77:	and    eax,0x862c5b09
  406b7c:	test   DWORD PTR [edx],0xa800eca5
  406b82:	pop    ebx
  406b83:	(bad)  
  406b84:	rol    DWORD PTR [eax],1
  406b86:	cmc    
  406b87:	sbb    al,bh
  406b89:	loope  0x406b43
  406b8b:	fwait
  406b8c:	pop    edi
  406b8d:	sub    dl,ah
  406b8f:	inc    esp
  406b90:	xchg   ah,dh
  406b92:	adc    edx,esi
  406b94:	daa    
  406b95:	push   ds
  406b96:	mov    esi,0x579b07d1
  406b9b:	sti    
  406b9c:	jl     0x406bd2
  406b9e:	sub    edx,DWORD PTR [ebx-0x709937c4]
  406ba4:	mov    ecx,0x846c9acc
  406ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406baa:	sbb    BYTE PTR [ecx-0x26d55568],ch
  406bb0:	xlat   BYTE PTR ds:[ebx]
  406bb1:	pop    ecx
  406bb2:	scas   al,BYTE PTR es:[edi]
  406bb3:	and    DWORD PTR [edi+0x1aef245f],edi
  406bb9:	loope  0x406bfd
  406bbb:	and    BYTE PTR [eax+0x4dc7ab1b],cl
  406bc1:	out    0x2b,eax
  406bc3:	jg     0x406bc2
  406bc5:	push   ebp
  406bc6:	hlt    
  406bc7:	leave  
  406bc8:	mov    eax,ds:0xe787e8a7
  406bcd:	mov    ds:0xb0d80134,eax
  406bd2:	mov    al,ds:0xae1cf82
  406bd7:	(bad)  
  406bd8:	xchg   edx,eax
  406bd9:	push   esp
  406bda:	mov    ds:0xcc4f0800,al
  406bdf:	test   al,0xae
  406be1:	imul   edx,ebx,0x2f
  406be4:	lds    ecx,FWORD PTR [ebp-0x2d760b0d]
  406bea:	fs xor al,0xec
  406bee:	adc    esi,DWORD PTR [eax+0x65]
  406bf1:	dec    ebx
  406bf2:	bound  eax,QWORD PTR [eax]
  406bf4:	popf   
  406bf5:	dec    ebp
  406bf6:	xchg   edx,eax
  406bf7:	shl    BYTE PTR [ecx],1
  406bf9:	or     eax,0x9caab1a4
  406bfe:	lock ret 0xa100
  406c02:	out    0x7a,al
  406c04:	xchg   ecx,eax
  406c05:	ja     0x406c74
  406c07:	jmp    0x1eb6:0x309b95c5
  406c0e:	and    ah,cl
  406c10:	jg     0x406bd2
  406c12:	fsub   DWORD PTR [edx+0x13fb4ee4]
  406c18:	sub    ebx,esi
  406c1a:	or     ebp,DWORD PTR [ecx]
  406c1c:	cwde   
  406c1d:	out    0x37,eax
  406c1f:	dec    esi
  406c20:	jg     0x406bb9
  406c22:	xchg   ebx,eax
  406c23:	stos   DWORD PTR es:[edi],eax
  406c24:	adc    DWORD PTR [ecx+0x18],edx
  406c27:	jne    0x406bbb
  406c29:	pop    ebp
  406c2a:	pop    ebx
  406c2b:	inc    ecx
  406c2c:	adc    DWORD PTR [ebx+0x7b],edx
  406c2f:	jb     0xd5690e82
  406c35:	outs   dx,BYTE PTR ds:[esi]
  406c36:	xchg   bp,ax
  406c38:	mov    dl,0xcc
  406c3a:	ud1    edx,esi
  406c3d:	mov    ch,BYTE PTR [ebp-0x4c]
  406c40:	push   esp
  406c41:	scas   al,BYTE PTR es:[edi]
  406c42:	xor    ch,BYTE PTR [edi+0x34a58035]
  406c48:	inc    esp
  406c49:	adc    dl,BYTE PTR [edi+0x2a0497ee]
  406c4f:	mov    ebp,0x38c08e5c
  406c54:	xor    DWORD PTR [edx],0xd712206b
  406c5a:	xchg   BYTE PTR [edx],dh
  406c5c:	fld    QWORD PTR [esi+ecx*2]
  406c5f:	test   BYTE PTR [edx+0x44bae3c],dh
  406c65:	inc    esi
  406c66:	ja     0x406c84
  406c68:	xchg   edx,eax
  406c69:	aam    0x4f
  406c6b:	jne    0x406c7a
  406c6d:	sbb    eax,0xc42b5207
  406c72:	out    dx,eax
  406c73:	daa    
  406c74:	nop
  406c75:	leave  
  406c76:	(bad)  
  406c77:	mov    bl,0x14
  406c79:	test   BYTE PTR [ecx+0x52f83bd3],dh
  406c7f:	js     0x406c3f
  406c81:	dec    esi
  406c82:	sbb    al,0xa0
  406c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c85:	retf   0x440c
  406c88:	int3   
  406c89:	test   BYTE PTR [eax-0x6b075aec],al
  406c8f:	sti    
  406c90:	mov    eax,DWORD PTR [eax-0x34]
  406c93:	inc    ecx
  406c94:	loop   0x406c4d
  406c96:	js     0x406ce6
  406c98:	nop
  406c99:	lahf   
  406c9a:	ret    0xb850
  406c9d:	in     eax,0x56
  406c9f:	mov    ?,WORD PTR [ebx+0x28]
  406ca2:	sbb    DWORD PTR [ecx-0x143f7938],ebp
  406ca8:	in     eax,0x4b
  406caa:	or     edx,DWORD PTR [esi+0x7b4dc75]
  406cb0:	add    BYTE PTR [ebx+0x1c],0xa2
  406cb4:	inc    esi
  406cb5:	out    dx,al
  406cb6:	jmp    0x9af7:0xb7082bf0
  406cbd:	rcr    DWORD PTR [edx+0x35],cl
  406cc0:	cmp    dl,BYTE PTR [ecx-0x4a]
  406cc3:	rcr    BYTE PTR [edi-0x71bf7716],cl
  406cc9:	(bad)  
  406ccb:	stc    
  406ccc:	pop    esi
  406ccd:	idiv   ebx
  406ccf:	fwait
  406cd0:	mov    bh,0x85
  406cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd3:	xor    al,0x87
  406cd5:	aad    0xa
  406cd7:	jg     0x406c89
  406cd9:	cli    
  406cda:	shl    BYTE PTR [edi+0x7a],1
  406cdd:	sbb    al,0xb9
  406cdf:	lahf   
  406ce0:	div    DWORD PTR [ecx-0x7cf664a0]
  406ce6:	mov    WORD PTR [edx-0x5e47d305],ss
  406cec:	int    0x10
  406cee:	repz sti 
  406cf0:	sbb    BYTE PTR [edx-0x47],al
  406cf3:	clc    
  406cf4:	sti    
  406cf5:	pusha  
  406cf6:	or     al,0x85
  406cf8:	push   edx
  406cf9:	xchg   edx,eax
  406cfa:	pop    edi
  406cfb:	out    0x41,al
  406cfd:	test   BYTE PTR [ecx],0x25
  406d00:	(bad)  
  406d01:	shr    DWORD PTR [ebx-0x5],cl
  406d04:	dec    esi
  406d05:	jg     0x406ce9
  406d07:	or     al,0x16
  406d09:	out    0xb6,al
  406d0b:	js     0x406d20
  406d0d:	push   ss
  406d0e:	cld    
  406d0f:	(bad)  
  406d10:	shr    BYTE PTR [edi],1
  406d12:	pop    esp
  406d13:	push   ecx
  406d14:	mov    cl,0xc9
  406d16:	mov    DWORD PTR [edi],esi
  406d18:	aad    0x99
  406d1a:	xor    DWORD PTR ds:0xc8795bf1,esp
  406d20:	pop    esp
  406d21:	xchg   edx,eax
  406d22:	dec    ebx
  406d23:	and    eax,0x45fa2342
  406d28:	out    dx,eax
  406d29:	clc    
  406d2a:	mov    ah,al
  406d2c:	retf   
  406d2d:	sbb    DWORD PTR es:[ecx],esi
  406d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d31:	push   ebx
  406d32:	sub    al,0x1f
  406d34:	std    
  406d35:	adc    DWORD PTR [edi+0x4248e23a],edx
  406d3b:	scas   eax,DWORD PTR es:[edi]
  406d3c:	xor    ecx,edi
  406d3e:	outs   dx,BYTE PTR ds:[esi]
  406d3f:	sbb    esp,ebx
  406d41:	out    0x6b,eax
  406d43:	inc    edx
  406d44:	jle    0x406ce6
  406d46:	(bad)  
  406d47:	aas    
  406d48:	arpl   di,cx
  406d4a:	mov    WORD PTR [eax-0x54],?
  406d4d:	add    eax,0x751aad9e
  406d52:	inc    edi
  406d53:	pushf  
  406d54:	into   
  406d55:	add    eax,esi
  406d57:	adc    ch,BYTE PTR [ebp-0x6541a748]
  406d5d:	les    ebx,FWORD PTR [edx-0x3d]
  406d60:	out    dx,al
  406d61:	mov    eax,0x4f7502b8
  406d66:	pop    edx
  406d67:	mov    edi,0x705bc68d
  406d6c:	xlat   BYTE PTR ds:[ebx]
  406d6d:	dec    edi
  406d6e:	or     dl,BYTE PTR [edx]
  406d70:	scas   eax,DWORD PTR es:[edi]
  406d71:	jg     0x406d02
  406d73:	ins    BYTE PTR es:[edi],dx
  406d74:	stc    
  406d75:	dec    ecx
  406d76:	pop    edx
  406d77:	std    
  406d78:	push   ebx
  406d79:	test   eax,0xdd2dc553
  406d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d7f:	(bad)  
  406d80:	mov    ecx,0x1eb9ccc4
  406d85:	jae    0x406db6
  406d87:	mov    ss,WORD PTR [eax+0x647e2074]
  406d8d:	fst    QWORD PTR [esi]
  406d8f:	or     DWORD PTR ds:0xb01150b5,ebx
  406d95:	retf   0x690b
  406d98:	sbb    al,0x8b
  406d9a:	clc    
  406d9b:	sub    esi,DWORD PTR [esi-0x59fd824e]
  406da1:	fwait
  406da2:	jb     0x406de3
  406da4:	pushf  
  406da5:	mov    al,0x9b
  406da7:	retf   
  406da8:	and    BYTE PTR [edx-0x51],ch
  406dab:	aaa    
  406dac:	(bad)  [ebx+0x3369ee9e]
  406db2:	push   ebp
  406db3:	adc    DWORD PTR [eax+0xc],ebx
  406db6:	addr16 popf 
  406db8:	mov    ebp,0xb131b974
  406dbd:	jo     0x406ddb
  406dbf:	sub    BYTE PTR [ebp+0x2a],ah
  406dc2:	(bad)  
  406dc3:	loopne 0x406dfb
  406dc5:	popf   
  406dc6:	stos   DWORD PTR es:[edi],eax
  406dc7:	xchg   ecx,eax
  406dc8:	and    BYTE PTR [esi-0x5eb6d5fe],bl
  406dce:	and    al,0xa7
  406dd0:	(bad)  
  406dd2:	mov    gs,WORD PTR [esp+eiz*8+0x4cfab92c]
  406dd9:	sub    ebp,edx
  406ddb:	ror    BYTE PTR [ebx],cl
  406ddd:	mov    cl,0x1c
  406ddf:	ds xchg eax,ebp
  406de2:	loope  0x406e1c
  406de4:	out    dx,al
  406de5:	mov    bl,0xdb
  406de7:	inc    eax
  406de8:	inc    ecx
  406de9:	inc    ecx
  406dea:	test   al,0x19
  406dec:	sahf   
  406ded:	dec    ebp
  406dee:	(bad)  
  406def:	jecxz  0x406d94
  406df1:	mov    edx,0x2560ab8a
  406df6:	push   cs
  406df7:	jle    0x406d92
  406df9:	mov    al,ds:0x8e04b683
  406dfe:	and    ah,BYTE PTR [ecx-0x5c]
  406e01:	add    BYTE PTR [edx+0xd6b33ad],0xf8
  406e08:	jns    0x406d99
  406e0a:	mov    WORD PTR [edx+0x7c],gs
  406e0d:	pop    eax
  406e0e:	nop
  406e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e10:	push   cs
  406e11:	push   esp
  406e12:	add    edx,DWORD PTR [ebx-0x1c44c11b]
  406e18:	add    ebx,ebp
  406e1a:	cmp    bh,BYTE PTR [ecx]
  406e1c:	and    eax,0x5321e04d
  406e21:	dec    ebx
  406e22:	push   ebp
  406e23:	cmc    
  406e24:	or     al,0x92
  406e26:	push   esi
  406e27:	mov    al,ds:0xc14114d2
  406e2c:	fdivr  DWORD PTR [edi+0x2e]
  406e2f:	sub    edx,DWORD PTR [ecx-0x3ae5e872]
  406e35:	push   cs
  406e36:	test   BYTE PTR [ebp+0x54ac0b79],0xcc
  406e3d:	fwait
  406e3e:	jne    0x406e0c
  406e40:	popa   
  406e41:	fsubr  QWORD PTR [esi-0x8]
  406e44:	imul   ebp,ebx,0x2786b04b
  406e4a:	or     edi,DWORD PTR [edi-0x259dd2d8]
  406e50:	adc    DWORD PTR [esi],0x6e576c65
  406e56:	cli    
  406e57:	and    ebp,DWORD PTR cs:[edx]
  406e5a:	std    
  406e5b:	test   al,0xd5
  406e5d:	push   eax
  406e5e:	movzx  esi,BYTE PTR [edi-0x30]
  406e62:	adc    esp,ecx
  406e64:	call   0xc578:0xfea40e62
  406e6b:	xchg   esp,eax
  406e6c:	rol    BYTE PTR [edx],cl
  406e6e:	dec    edi
  406e6f:	ret    0x654e
  406e72:	ret    
  406e73:	stos   DWORD PTR es:[edi],eax
  406e74:	test   DWORD PTR [edi],edx
  406e76:	jecxz  0x406e7b
  406e78:	inc    esi
  406e79:	(bad)  
  406e7a:	inc    ebx
  406e7b:	fsub   st(5),st
  406e7d:	xchg   edi,eax
  406e7e:	fld    st(6)
  406e80:	mov    WORD PTR [ebx],ds
  406e82:	pop    es
  406e83:	mov    ecx,0x57069de8
  406e88:	or     dh,BYTE PTR [ebx-0x30a018a4]
  406e8e:	xor    DWORD PTR [eax-0x25e108fb],0x5280aba9
  406e98:	cmp    BYTE PTR [edx+0x5d],ah
  406e9b:	pop    es
  406e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e9d:	popf   
  406e9e:	neg    BYTE PTR [esp+esi*2+0xa70506e]
  406ea5:	jb     0x406e44
  406ea7:	and    eax,0x2f3aa8b9
  406eac:	xor    edx,eax
  406eae:	rol    BYTE PTR [ebp+0x1332d42c],1
  406eb4:	mov    DWORD PTR [edi],eax
  406eb6:	jb     0x406ed2
  406eb8:	stos   DWORD PTR es:[edi],eax
  406eb9:	dec    ebp
  406eba:	add    DWORD PTR [edi+0x4e271512],ecx
  406ec0:	repnz xlat BYTE PTR ds:[ebx]
  406ec2:	fsub   DWORD PTR [eax]
  406ec4:	or     al,0x99
  406ec6:	aam    0xd8
  406ec8:	and    esp,ebx
  406eca:	bound  ecx,QWORD PTR [ebx+0x50]
  406ecd:	pop    ecx
  406ece:	xchg   edi,eax
  406ecf:	pop    eax
  406ed0:	cli    
  406ed1:	rcr    DWORD PTR [ebx+esi*2+0xbffb38d],cl
  406ed8:	jecxz  0x406f25
  406eda:	push   edi
  406edb:	xlat   BYTE PTR ds:[ebx]
  406edc:	xor    eax,0x4ff17d56
  406ee1:	xchg   edi,eax
  406ee2:	iret   
  406ee3:	and    dl,BYTE PTR [ecx-0x7a]
  406ee6:	daa    
  406ee7:	push   cs
  406ee8:	clc    
  406ee9:	xlat   BYTE PTR ds:[ebx]
  406eea:	dec    edi
  406eeb:	sbb    ebx,ebp
  406eed:	sbb    BYTE PTR [edi+0x4a],0x90
  406ef1:	mov    edi,0x3205fe87
  406ef6:	inc    ecx
  406ef7:	sub    al,0x4f
  406ef9:	sub    al,0xc5
  406efb:	adc    al,0x89
  406efd:	sub    DWORD PTR [ebx-0x6b],ecx
  406f00:	iret   
  406f01:	pop    eax
  406f02:	xchg   ebx,eax
  406f03:	fcomp  QWORD PTR [esi]
  406f05:	fstp   QWORD PTR [ebp+0x56ae1658]
  406f0b:	lock int3 
  406f0d:	mov    al,0x46
  406f0f:	jmp    0x406f45
  406f11:	add    al,0x8d
  406f13:	and    DWORD PTR [ecx+0x18],esi
  406f16:	adc    eax,edi
  406f18:	aas    
  406f19:	mov    esi,0x86d6b313
  406f1e:	clc    
  406f1f:	mov    edi,0x1215a840
  406f24:	jecxz  0x406edd
  406f26:	and    BYTE PTR [eax-0x90f322d],al
  406f2c:	pop    eax
  406f2d:	imul   edx,DWORD PTR [eax+0x5657e2f8],0xffffffc7
  406f34:	loopne 0x406f2d
  406f36:	mov    ?,WORD PTR [edx+eiz*8]
  406f39:	imul   esp,DWORD PTR [edx],0xffffff8b
  406f3c:	mov    bh,ch
  406f3e:	pop    ebx
  406f3f:	push   edx
  406f40:	push   0x44a53c0e
  406f45:	fcomp  QWORD PTR [ebx]
  406f47:	(bad)  
  406f48:	dec    eax
  406f49:	jge    0x406ed2
  406f4b:	pusha  
  406f4c:	push   si
  406f4e:	xor    eax,esi
  406f50:	or     ebx,ecx
  406f52:	lahf   
  406f53:	inc    edi
  406f54:	xchg   ax,ax
  406f56:	inc    eax
  406f57:	mov    edx,0x3b44a25a
  406f5c:	jb     0x406f9f
  406f5e:	setne  BYTE PTR [eax]
  406f61:	mov    cl,0xae
  406f63:	mov    esp,0x66ea9db0
  406f68:	arpl   WORD PTR [ebp+0x5d],sp
  406f6b:	dec    edi
  406f6c:	ins    DWORD PTR es:[edi],dx
  406f6d:	lock jno 0x406fa8
  406f70:	ds loope 0x406fd1
  406f73:	pop    ss
  406f74:	mov    dh,0xee
  406f76:	fsubr  QWORD PTR [edx-0x4a]
  406f79:	aaa    
  406f7a:	fdiv   DWORD PTR [ecx]
  406f7c:	adc    eax,0xd085f926
  406f81:	out    0xb,al
  406f83:	shl    bh,0xcd
  406f86:	std    
  406f87:	es pop ebx
  406f89:	test   BYTE PTR [edi],bh
  406f8b:	push   ss
  406f8c:	mov    ah,ch
  406f8e:	stc    
  406f8f:	in     al,0x7a
  406f91:	mov    bh,0xda
  406f93:	sbb    dh,BYTE PTR [eax+0x21]
  406f96:	dec    ebp
  406f97:	and    bl,BYTE PTR [ebp-0x33089e9b]
  406f9d:	pop    esi
  406f9e:	add    DWORD PTR [esi+0x4bcb1748],ebp
  406fa4:	retf   
  406fa5:	mov    dl,BYTE PTR [ecx+0x1a2ea14b]
  406fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fac:	repz shl DWORD PTR [ecx],1
  406faf:	int    0x7d
  406fb1:	in     eax,dx
  406fb2:	mov    dh,0x3f
  406fb4:	jne    0x406fd6
  406fb6:	aad    0x21
  406fb8:	add    ebx,edx
  406fba:	fdiv   st(2),st
  406fbc:	adc    BYTE PTR [eax+ebx*4],0x1a
  406fc0:	adc    eax,0x224b1a71
  406fc5:	fild   DWORD PTR [ebx+0x7b32c32f]
  406fcc:	loopne 0x407049
  406fce:	lock mov BYTE PTR [ecx+eax*8+0x1],0xf3
  406fd4:	jno    0x406ff1
  406fd6:	fbstp  TBYTE PTR [eax-0x7a]
  406fd9:	xchg   ebp,eax
  406fda:	xchg   esi,eax
  406fdb:	xchg   esi,eax
  406fdc:	repnz nop
  406fde:	iret   
  406fdf:	inc    ecx
  406fe0:	pop    ds
  406fe1:	push   eax
  406fe2:	test   BYTE PTR ds:0xa773213a,bh
  406fe8:	push   es
  406fe9:	mov    al,0xc9
  406feb:	test   DWORD PTR ds:0xace268ea,0xcf2515fb
  406ff5:	cmp    DWORD PTR [ebx+0x229c3cf8],0x55
  406ffc:	mov    ebp,0xfb5660d7
  407001:	std    
  407002:	scas   eax,DWORD PTR es:[edi]
  407003:	xchg   ebp,eax
  407004:	jp     0x407074
  407006:	mov    cl,BYTE PTR [ebx+0x17139d65]
  40700c:	sub    edx,DWORD PTR [edi+0x3c2d7b54]
  407012:	icebp  
  407013:	sbb    DWORD PTR [ecx-0x7aca7d72],esp
  407019:	mov    esp,0x60849109
  40701e:	(bad)  
  40701f:	xor    ah,BYTE PTR [esp+ebp*4+0x23095911]
  407026:	dec    eax
  407027:	int    0x31
  407029:	lods   al,BYTE PTR ds:[esi]
  40702a:	pusha  
  40702b:	cmp    esp,DWORD PTR [edx-0x17]
  40702e:	jle    0x406ffe
  407030:	mov    edx,0xa259af24
  407035:	or     dh,ah
  407037:	mov    bl,0xaa
  407039:	ficomp WORD PTR [ebx+0x1a]
  40703c:	sbb    cl,bl
  40703e:	xchg   ebx,eax
  40703f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407040:	xchg   ecx,eax
  407041:	inc    edx
  407042:	mov    ebp,0x5ad43a10
  407047:	out    0x78,eax
  407049:	pop    edi
  40704a:	pop    edx
  40704b:	mov    ecx,0xf89bf92f
  407050:	jl     0x40709b
  407052:	xchg   esp,eax
  407053:	sub    al,0x41
  407055:	dec    esp
  407056:	loop   0x40709d
  407058:	in     eax,dx
  407059:	clc    
  40705a:	dec    esp
  40705b:	ins    DWORD PTR es:[edi],dx
  40705c:	data16 or al,0x8b
  40705f:	and    edi,DWORD PTR [esp+esi*8]
  407062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407063:	stc    
  407064:	jnp    0x4070b3
  407066:	es inc ecx
  407068:	enter  0xd9f6,0xbd
  40706c:	aam    0xaf
  40706e:	pop    es
  40706f:	mov    al,ds:0x80114
  407074:	adc    eax,DWORD PTR [ebx]
  407076:	loopne 0x4070f3
  407078:	icebp  
  407079:	inc    ebx
  40707a:	sbb    eax,esp
  40707c:	push   0xffffffb2
  40707e:	or     al,0xea
  407080:	cmp    ebx,DWORD PTR [edx+0x6e]
  407083:	xchg   DWORD PTR [edx+ecx*8-0x52e5f965],ebp
  40708a:	push   cs
  40708b:	mov    edx,0x23a234a7
  407090:	jmp    0x541f0a86
  407095:	out    0x77,eax
  407097:	mov    eax,0x4d431ab6
  40709c:	in     al,dx
  40709d:	test   eax,0x919fc234
  4070a2:	dec    ebx
  4070a3:	(bad)  
  4070a4:	repz or BYTE PTR [edx],bh
  4070a7:	fstp   st(1)
  4070a9:	jnp    0x407093
  4070ab:	shl    ebp,0x6e
  4070ae:	adc    eax,0x27bbe924
  4070b3:	das    
  4070b4:	sub    al,0x3d
  4070b6:	(bad)  
  4070b7:	stos   BYTE PTR es:[edi],al
  4070b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070b9:	xchg   edi,eax
  4070ba:	stos   DWORD PTR es:[edi],eax
  4070bb:	pop    ebx
  4070bc:	loop   0x4070a5
  4070be:	lock add dh,BYTE PTR [edi]
  4070c1:	mov    esi,0xab9f9f3b
  4070c6:	add    eax,0x75800657
  4070cb:	pop    ebp
  4070cc:	(bad)  
  4070cd:	mov    edx,eax
  4070cf:	push   0xbb3451cc
  4070d4:	inc    esp
  4070d5:	ficomp DWORD PTR [ebx-0x50cc413a]
  4070db:	out    dx,al
  4070dc:	sahf   
  4070dd:	daa    
  4070de:	push   edx
  4070df:	xchg   esi,eax
  4070e0:	das    
  4070e1:	mov    bh,0xff
  4070e3:	ss jne 0x4070f8
  4070e6:	cwde   
  4070e7:	inc    edi
  4070e8:	push   cs
  4070e9:	jae    0x4070b1
  4070eb:	pop    ebp
  4070ec:	sbb    BYTE PTR [ebx],dl
  4070ee:	mov    ss,WORD PTR [ebp-0x6600d5e8]
  4070f4:	fcom   st(7)
  4070f6:	push   ds
  4070f7:	mov    ebp,0x6a6c77b0
  4070fc:	aaa    
  4070fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070fe:	repnz mov cl,0xee
  407101:	pop    edx
  407102:	imul   ebp,DWORD PTR [ebx-0x592d6212],0xffffffdb
  407109:	inc    edx
  40710a:	retf   0xf943
  40710d:	mov    bh,0x21
  40710f:	(bad)
  407113:	(bad)  
  407114:	(bad)  
  407115:	fisub  WORD PTR [eax]
  407117:	rol    BYTE PTR [ebx],1
  407119:	fnstsw WORD PTR [edi]
  40711b:	sub    DWORD PTR [esi+0x3c],esi
  40711e:	scas   al,BYTE PTR es:[edi]
  40711f:	jmp    0x7d5f1d3d
  407124:	retf   0x981a
  407127:	dec    edi
  407128:	ret    
  407129:	sbb    cl,dh
  40712b:	cs push esp
  40712d:	outs   dx,DWORD PTR ds:[esi]
  40712e:	dec    eax
  40712f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407130:	jbe    0x4070e6
  407132:	arpl   WORD PTR [eax-0x79],ax
  407135:	push   ecx
  407136:	in     al,0x57
  407138:	das    
  407139:	dec    eax
  40713a:	or     bh,BYTE PTR [edx-0x2b]
  40713d:	jbe    0x4071b1
  40713f:	je     0x407153
  407141:	xchg   ebx,eax
  407142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407143:	or     DWORD PTR [eax+0x13bbc0e4],ecx
  407149:	sub    esi,DWORD PTR [ecx-0xb5e47b5]
  40714f:	sti    
  407150:	jmp    0x20742f89
  407155:	mov    ah,0xc5
  407157:	mov    eax,0xa72b3269
  40715c:	push   0xffffffc4
  40715e:	and    ch,BYTE PTR [edx-0x2]
  407161:	sbb    eax,DWORD PTR [eax+0x5e]
  407164:	jns    0x407147
  407166:	ret    0xf210
  407169:	sub    al,bh
  40716b:	xchg   esp,eax
  40716c:	pop    esp
  40716d:	les    ecx,FWORD PTR [eax-0x6344b135]
  407173:	inc    esp
  407174:	dec    esi
  407175:	out    0x34,al
  407177:	mov    dh,bh
  407179:	sbb    eax,DWORD PTR [ebx+0x31897537]
  40717f:	jle    0x4071a3
  407181:	inc    edi
  407182:	push   ecx
  407183:	add    ch,BYTE PTR [ecx]
  407185:	adc    al,0xa9
  407187:	xchg   ebx,eax
  407188:	stos   WORD PTR es:[edi],ax
  40718a:	stc    
  40718b:	cdq    
  40718c:	call   0xd6ef4557
  407191:	cs xchg edi,edi
  407194:	sbb    eax,0xfc003ed
  407199:	dec    ebx
  40719a:	imul   edx,ecx,0xd92fa0b0
  4071a0:	dec    ebx
  4071a1:	adc    dh,ah
  4071a3:	add    ebx,DWORD PTR [edi]
  4071a5:	inc    ecx
  4071a6:	xchg   ebx,eax
  4071a7:	jp     0x40713f
  4071a9:	push   edx
  4071aa:	jg     0x407181
  4071ac:	pop    eax
  4071ad:	xchg   edx,eax
  4071ae:	mov    ch,0x56
  4071b0:	fdivr  QWORD PTR [esi-0x5a]
  4071b3:	jns    0x40719a
  4071b5:	mov    esp,0xdb7d1e91
  4071ba:	xchg   edx,eax
  4071bb:	mov    edi,0xa6ede2c
  4071c0:	mov    bl,0x84
  4071c2:	mov    edx,0x6c2dc69f
  4071c7:	stos   BYTE PTR es:[edi],al
  4071c8:	adc    esp,edi
  4071ca:	push   0x3
  4071cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071cd:	cmp    bl,BYTE PTR [eax+0x3b]
  4071d0:	ins    DWORD PTR es:[edi],dx
  4071d1:	pop    ds
  4071d2:	retf   0xb793
  4071d5:	mov    ch,0xa0
  4071d7:	mov    bl,0xb5
  4071d9:	push   es
  4071da:	jmp    0x4071f3
  4071dc:	mov    edi,0xd7a54a58
  4071e1:	sti    
  4071e2:	sbb    ch,BYTE PTR [edi+0x62e41539]
  4071e8:	data16 repz addr16 jp 0x407238
  4071ed:	mov    edi,0x13073136
  4071f2:	ins    DWORD PTR es:[edi],dx
  4071f3:	bound  ebx,QWORD PTR [ebp-0xf]
  4071f6:	sar    edx,1
  4071f8:	cdq    
  4071f9:	cmp    eax,0x2ba9a717
  4071fe:	ficomp WORD PTR [esi-0x77]
  407201:	and    al,BYTE PTR [edx+0x64]
  407204:	pop    ds
  407205:	daa    
  407206:	leave  
  407207:	stc    
  407208:	out    dx,eax
  407209:	xchg   edi,eax
  40720a:	jb     0x40721e
  40720c:	mov    bh,0x97
  40720e:	mov    esp,0x9857640f
  407213:	mov    esi,0x812f81ba
  407218:	(bad)  
  407219:	ret    
  40721a:	icebp  
  40721b:	push   di
  40721d:	out    dx,al
  40721e:	lock cmp ah,BYTE PTR [ecx-0x498933b4]
  407225:	mov    al,ds:0xbf5f3f2c
  40722a:	push   ebp
  40722b:	push   0xf32d8034
  407230:	je     0x40727b
  407232:	cmc    
  407233:	int3   
  407234:	mov    esi,esi
  407236:	mov    bh,0x5e
  407238:	lods   eax,DWORD PTR ds:[esi]
  407239:	jnp    0x407278
  40723b:	mov    BYTE PTR [eax+0x1c],dh
  40723e:	(bad)  
  40723f:	aas    
  407240:	xchg   DWORD PTR ds:0xb4ed8c9b,eax
  407246:	push   0xed5caa89
  40724b:	push   ss
  40724c:	lahf   
  40724d:	js     0x407208
  40724f:	push   ebx
  407250:	pushf  
  407251:	int3   
  407252:	aas    
  407253:	add    cl,BYTE PTR [esi]
  407255:	aad    0x1c
  407257:	imul   ebx,DWORD PTR [ecx+0x62],0xc3410ff7
  40725e:	jge    0x407208
  407260:	pop    esp
  407261:	add    edx,DWORD PTR [edx+edx*2]
  407264:	ins    DWORD PTR es:[edi],dx
  407265:	int    0x35
  407267:	fisub  DWORD PTR [esi+0x40]
  40726a:	or     DWORD PTR [edi+ebp*4],esp
  40726d:	xchg   BYTE PTR [ecx-0x67971aea],ah
  407273:	and    BYTE PTR [ebx+0x1a7484cf],dh
  407279:	push   ss
  40727a:	out    dx,al
  40727b:	jmp    DWORD PTR [edi]
  40727d:	cld    
  40727e:	sar    BYTE PTR [eax+esi*2+0x187a6fa0],1
  407285:	and    eax,DWORD PTR [ebp+0x7aafb42b]
  40728b:	or     al,0x70
  40728d:	xchg   ecx,eax
  40728e:	test   eax,0xdb7367e6
  407293:	and    BYTE PTR [edx],al
  407295:	mov    eax,0x75615727
  40729a:	lods   eax,DWORD PTR ds:[si]
  40729c:	pop    ds
  40729d:	int3   
  40729e:	cmp    ch,al
  4072a0:	inc    esp
  4072a1:	call   0xf3dfa358
  4072a6:	sti    
  4072a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072a9:	mov    ds:0xc048aff8,eax
  4072ae:	mov    ds:0xef05fa1d,al
  4072b3:	call   0xd390dd89
  4072b8:	push   ebp
  4072b9:	or     cl,al
  4072bb:	loop   0x40733a
  4072bd:	push   es
  4072be:	or     DWORD PTR ds:0xa6edafa6,esi
  4072c4:	(bad)  
  4072c5:	and    esp,ebx
  4072c7:	cmp    BYTE PTR [ebp-0x4d783ebb],ah
  4072cd:	or     bl,bh
  4072cf:	and    al,0x57
  4072d1:	lds    edi,FWORD PTR es:[eax]
  4072d4:	cmp    DWORD PTR [edi],0x2c
  4072d7:	inc    ecx
  4072d8:	push   0x38
  4072da:	push   ebp
  4072db:	aas    
  4072dc:	push   0x5d9c2094
  4072e1:	loop   0x40728c
  4072e3:	and    al,bl
  4072e5:	pop    ds
  4072e6:	jbe    0x40731f
  4072e8:	lods   al,BYTE PTR ds:[esi]
  4072e9:	pop    ebp
  4072ea:	dec    eax
  4072eb:	fistp  DWORD PTR [eax]
  4072ed:	xor    al,BYTE PTR [ebx]
  4072ef:	dec    ebp
  4072f0:	add    al,bh
  4072f2:	mov    dh,0x83
  4072f4:	mov    ds:0x9eb80ba8,eax
  4072f9:	rol    BYTE PTR [edi+0x56604bfb],0x59
  407300:	add    dl,BYTE PTR [edi+ecx*4-0x685e576c]
  407307:	push   cs
  407308:	loop   0x4072ff
  40730a:	dec    eax
  40730b:	daa    
  40730c:	or     dl,cl
  40730e:	inc    edx
  40730f:	fsub   DWORD PTR [edx-0x25]
  407312:	std    
  407313:	rcr    BYTE PTR [ecx],0xaa
  407316:	jmp    0x4072ac
  407318:	lods   al,BYTE PTR ds:[esi]
  407319:	xchg   esp,eax
  40731a:	jo     0x40730e
  40731c:	dec    edx
  40731d:	cmp    al,0x68
  40731f:	inc    edx
  407320:	inc    ebx
  407321:	outs   dx,BYTE PTR ds:[esi]
  407322:	rol    DWORD PTR [eax+0x51],0xa1
  407326:	mov    esp,0x7ad8ef0d
  40732b:	retf   
  40732c:	jge    0x4072cd
  40732e:	ins    BYTE PTR es:[edi],dx
  40732f:	aas    
  407330:	jbe    0x4072b7
  407332:	pop    esi
  407333:	xor    DWORD PTR [edi-0x45],ecx
  407336:	iret   
  407337:	jmp    0x500e:0x7cf9770c
  40733e:	lock and dl,BYTE PTR [edx]
  407341:	mov    esp,0xb8d42766
  407346:	push   ebx
  407347:	mov    esp,DWORD PTR [edx+0x4e]
  40734a:	js     0x407316
  40734c:	lods   eax,DWORD PTR ds:[esi]
  40734d:	fild   QWORD PTR [ebp-0x42]
  407350:	fwait
  407351:	cmp    ecx,DWORD PTR [edx+0x4f]
  407354:	outs   dx,DWORD PTR ds:[esi]
  407355:	cwde   
  407356:	xlat   BYTE PTR ds:[ebx]
  407357:	or     edx,DWORD PTR [ebp-0x7a]
  40735a:	loop   0x40739d
  40735c:	data16 cmp al,0x46
  40735f:	and    BYTE PTR [esi+0x6fa8ec2c],0x6d
  407366:	or     eax,0x673a2b00
  40736b:	or     BYTE PTR [edx+0x1684d5b7],ah
  407371:	sbb    bl,BYTE PTR [edi-0x592b3776]
  407377:	and    cl,BYTE PTR [ebp-0x59]
  40737a:	mov    ebp,0x6e5feca2
  40737f:	sar    edx,0x80
  407382:	and    BYTE PTR [edi],0xc1
  407385:	leave  
  407386:	sti    
  407387:	in     eax,0x68
  407389:	xchg   esi,eax
  40738a:	gs pop ecx
  40738c:	sub    al,0xfc
  40738e:	out    dx,al
  40738f:	inc    ebp
  407390:	ins    DWORD PTR es:[edi],dx
  407391:	sub    BYTE PTR [ebx],dh
  407393:	add    BYTE PTR [esp+esi*2],dl
  407396:	lods   eax,DWORD PTR ds:[esi]
  407397:	js     0x4073bd
  407399:	mov    WORD PTR [edi-0x6a],?
  40739c:	mov    ds,WORD PTR [ebx+0x43]
  40739f:	adc    ah,BYTE PTR [edi+ebx*2]
  4073a2:	push   0x8e2124f3
  4073a7:	ret    0x272b
  4073aa:	or     DWORD PTR [ebp+0x75],ecx
  4073ad:	xor    eax,0x63d662cf
  4073b2:	pop    es
  4073b3:	mov    bh,0x1b
  4073b5:	dec    eax
  4073b6:	jno    0x4073ec
  4073b8:	push   ecx
  4073b9:	jmp    0x40733e
  4073bb:	pop    ss
  4073bc:	dec    edx
  4073bd:	call   0xe440:0x84e3be79
  4073c4:	sti    
  4073c5:	xchg   ebx,eax
  4073c6:	cmp    DWORD PTR ds:0xacb7be21,ebp
  4073cc:	(bad)  
  4073cd:	xchg   esi,eax
  4073ce:	and    edi,DWORD PTR [edx+0x6871bcd2]
  4073d4:	jb     0x4073ef
  4073d6:	(bad)  
  4073d7:	jns    0x40736a
  4073d9:	sbb    al,0x82
  4073db:	fild   DWORD PTR ds:0x22133d84
  4073e1:	pop    ebx
  4073e2:	fcomp  QWORD PTR [eax]
  4073e4:	mov    ebx,0xc0dec714
  4073e9:	sub    eax,0x5ba858c6
  4073ee:	gs or  ch,bh
  4073f1:	inc    eax
  4073f2:	dec    ecx
  4073f3:	jne    0x4073ac
  4073f5:	mov    ds:0x65b9e2ff,eax
  4073fa:	sahf   
  4073fb:	aad    0x8
  4073fd:	jmp    0x3d81:0x63927411
  407404:	je     0x4073c6
  407406:	loopne 0x4073c3
  407408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407409:	xor    DWORD PTR [edi],ecx
  40740b:	addr16 jp 0x4073c3
  40740e:	xlat   BYTE PTR ds:[ebx]
  40740f:	mov    ah,0x80
  407411:	push   es
  407412:	push   esp
  407413:	ret    0x9871
  407416:	not    BYTE PTR [ecx-0x1c0d304f]
  40741c:	cwde   
  40741d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40741e:	xchg   ecx,eax
  40741f:	out    dx,eax
  407420:	mov    ah,0x82
  407422:	jmp    0x9448f10b
  407427:	lods   eax,DWORD PTR ds:[esi]
  407428:	sti    
  407429:	mov    dh,0x6d
  40742b:	xor    eax,DWORD PTR [edx+0x22]
  40742e:	pop    ds
  40742f:	lds    esp,FWORD PTR ds:0xd8636f20
  407435:	jmp    0x4074a3
  407437:	enter  0x2be6,0x66
  40743b:	jne    0x4073c1
  40743d:	dec    ebp
  40743e:	daa    
  40743f:	not    bl
  407441:	int3   
  407442:	mov    esp,0xcd6b4b45
  407447:	sbb    BYTE PTR [ebp-0x324a2b69],ch
  40744d:	push   esp
  40744e:	xchg   ecx,eax
  40744f:	xor    al,0xeb
  407451:	and    ebp,DWORD PTR [esi-0x2]
  407454:	pop    ecx
  407455:	cld    
  407456:	sub    al,0x52
  407458:	xchg   DWORD PTR [eax+edx*8],esi
  40745b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40745c:	or     eax,0x92e83823
  407461:	ds rol DWORD PTR ds:[eax+0x5b59c08b],cl
  407469:	xor    al,0x8e
  40746b:	or     ch,BYTE PTR [eax-0x6b21b922]
  407471:	jmp    0x4074b3
  407473:	push   ebp
  407474:	(bad)  
  407475:	in     al,dx
  407476:	out    dx,eax
  407477:	xchg   ebp,eax
  407478:	retf   0x58bb
  40747b:	push   ss
  40747c:	pop    ecx
  40747d:	push   0xa9246bb9
  407482:	mov    edx,0x914c1b65
  407487:	sub    dh,dl
  407489:	xchg   ebx,eax
  40748a:	ss cwde 
  40748c:	(bad)  
  40748d:	and    ebp,DWORD PTR [ebx+0x783b4ef8]
  407493:	inc    ebx
  407494:	bound  esi,QWORD PTR [edi+0x21]
  407497:	mov    WORD PTR ds:0x9c2accd6,ss
  40749d:	mov    ch,0xbd
  40749f:	imul   ecx,edi,0xbbae0a59
  4074a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a6:	add    eax,0x8d3b9991
  4074ab:	or     eax,0xd21fcfe1
  4074b0:	or     eax,0x9f23baed
  4074b5:	mov    ebp,DWORD PTR [ebp+0x2b]
  4074b8:	icebp  
  4074b9:	and    bl,dh
  4074bb:	daa    
  4074bc:	inc    eax
  4074bd:	cmp    esp,DWORD PTR [ebp+0x78]
  4074c0:	outs   dx,DWORD PTR ds:[esi]
  4074c1:	or     al,0x36
  4074c3:	(bad)  [esi+0x2abe03d0]
  4074c9:	inc    ecx
  4074ca:	push   0x68af5574
  4074cf:	ret    
  4074d0:	dec    esp
  4074d1:	gs pop ebx
  4074d3:	inc    esi
  4074d4:	aam    0xbe
  4074d6:	and    al,0x70
  4074d8:	mov    ch,0x84
  4074da:	clc    
  4074db:	retf   
  4074dc:	lods   al,BYTE PTR ds:[esi]
  4074dd:	adc    al,BYTE PTR [edx]
  4074df:	fsub   QWORD PTR [edi-0x6e]
  4074e2:	and    edi,DWORD PTR [edi]
  4074e4:	pusha  
  4074e5:	cmc    
  4074e6:	mov    ?,WORD PTR [ecx]
  4074e8:	push   ds
  4074e9:	and    ebx,eax
  4074eb:	add    bl,BYTE PTR [esi+0x77]
  4074ee:	dec    edi
  4074ef:	jnp    0x407515
  4074f1:	sbb    al,0x3
  4074f3:	jbe    0x4074ca
  4074f5:	and    eax,0x11ea95e
  4074fa:	add    BYTE PTR ds:0x1e65464c,ch
  407500:	jle    0x40756a
  407502:	out    dx,al
  407503:	in     eax,0xbf
  407505:	call   0xe30af780
  40750a:	push   0x2538c2a3
  40750f:	xor    DWORD PTR [ebp-0x36],esp
  407512:	jge    0x40751b
  407514:	fisub  WORD PTR [ecx]
  407516:	into   
  407517:	push   ebp
  407518:	mov    bh,0xe3
  40751a:	sbb    al,BYTE PTR [esi]
  40751c:	retf   0x8a55
  40751f:	les    ebx,FWORD PTR [ecx+0x35]
  407522:	adc    dl,ch
  407524:	div    DWORD PTR [eax]
  407526:	sbb    DWORD PTR [edx-0x583db026],ebx
  40752c:	xor    eax,0x68f9d8e1
  407531:	(bad)  
  407532:	push   cs
  407533:	sub    al,BYTE PTR [edx]
  407535:	inc    ecx
  407536:	arpl   cx,si
  407538:	or     al,0xd8
  40753a:	mov    ss,WORD PTR [edx+0x12043c3c]
  407540:	loop   0x4075af
  407542:	aaa    
  407543:	sbb    DWORD PTR [ebp-0x14],ebp
  407546:	pop    ds
  407547:	jae    0x407551
  407549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754a:	in     eax,0xf0
  40754c:	jmp    0xb6bed1fe
  407551:	fcom   QWORD PTR [esi+0x7e]
  407554:	jmp    0x4075b0
  407556:	cmp    eax,0x857b7013
  40755b:	popf   
  40755c:	mov    ebp,DWORD PTR [ebx-0x1369ea74]
  407562:	cmp    BYTE PTR ds:0xc4c0f35,bl
  407568:	ins    BYTE PTR es:[edi],dx
  407569:	xchg   esp,eax
  40756a:	or     eax,DWORD PTR [edi-0x40c40851]
  407570:	call   0xd72bdeeb
  407575:	xor    eax,0x5a04e0b2
  40757a:	scas   eax,DWORD PTR es:[edi]
  40757b:	in     al,0x8c
  40757d:	int3   
  40757e:	adc    al,0xa7
  407580:	ficomp DWORD PTR ds:0x75e8dff4
  407586:	daa    
  407587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407588:	pop    edx
  407589:	jbe    0x4075de
  40758b:	popa   
  40758c:	xchg   BYTE PTR [esi],al
  40758e:	lock pusha 
  407590:	pop    esi
  407591:	add    eax,esp
  407593:	lock lds ebp,FWORD PTR [esi-0x7517d894]
  40759a:	xchg   BYTE PTR [edx+edi*2],ah
  40759d:	pop    esi
  40759e:	and    al,0xb0
  4075a0:	add    eax,ebp
  4075a2:	add    eax,0x61c41fc3
  4075a7:	loopne 0x407541
  4075a9:	xchg   edx,esi
  4075ab:	add    ecx,edi
  4075ad:	loopne 0x40755c
  4075af:	jae    0x407616
  4075b1:	xchg   edx,eax
  4075b2:	xchg   esp,eax
  4075b3:	bound  eax,QWORD PTR [edi]
  4075b5:	jge    0x4075e7
  4075b7:	in     eax,0x45
  4075b9:	test   BYTE PTR [edi+0xf],bh
  4075bc:	aad    0xf0
  4075be:	or     al,0xac
  4075c0:	test   BYTE PTR [edx+0x39],0x81
  4075c4:	mov    al,0xe
  4075c6:	(bad)  
  4075c7:	fild   DWORD PTR [edi-0x25c9e778]
  4075cd:	(bad)  
  4075ce:	outs   dx,DWORD PTR ds:[esi]
  4075cf:	add    ecx,DWORD PTR [esi]
  4075d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d2:	outs   dx,DWORD PTR ds:[esi]
  4075d3:	or     ch,bl
  4075d5:	in     eax,0xc4
  4075d7:	shl    edx,1
  4075d9:	adc    al,0x40
  4075db:	fmul   st(0),st
  4075dd:	aad    0xd4
  4075df:	cmp    BYTE PTR [edx],ch
  4075e1:	int3   
  4075e2:	std    
  4075e3:	cwde   
  4075e4:	and    BYTE PTR [ebp-0x367f674c],dl
  4075ea:	jmp    0x2543:0xa13d64cf
  4075f1:	out    0x72,eax
  4075f3:	arpl   WORD PTR ds:[eax+0x7a],di
  4075f7:	adc    al,0xa
  4075f9:	repnz int3 
  4075fb:	ficomp WORD PTR [ecx+edi*8]
  4075fe:	inc    esp
  4075ff:	dec    eax
  407600:	mov    ds:0x7edb8e73,eax
  407605:	mov    cl,0x1b
  407607:	(bad)  
  407608:	ror    BYTE PTR [ecx-0x1c81867],1
  40760e:	sbb    DWORD PTR [edx+0x18],esi
  407611:	jno    0x4075eb
  407613:	and    eax,0x596a7b38
  407618:	pop    esp
  407619:	fistp  DWORD PTR [ecx+eiz*8-0x428157fb]
  407620:	out    dx,eax
  407621:	cmp    al,0x99
  407623:	sub    eax,0x24ab7cea
  407628:	daa    
  407629:	sbb    al,0x74
  40762b:	sub    ebp,DWORD PTR [edi]
  40762d:	and    al,0x57
  40762f:	add    BYTE PTR [ecx],0x60
  407632:	sub    BYTE PTR [ebp-0x7318bc41],ch
  407638:	mov    ds:0x58147215,al
  40763d:	cwde   
  40763e:	in     eax,dx
  40763f:	mov    ebx,DWORD PTR [esi]
  407641:	jne    0x4075ce
  407643:	xor    edi,ebx
  407645:	outs   dx,DWORD PTR ds:[esi]
  407646:	in     al,dx
  407647:	dec    esi
  407648:	and    al,0x9d
  40764a:	or     dl,BYTE PTR [esi-0xc79ef65]
  407650:	dec    WORD PTR es:[eax]
  407654:	push   esi
  407655:	xor    DWORD PTR [edx-0x1ec62b02],ecx
  40765b:	inc    ebp
  40765c:	ret    
  40765d:	xchg   eax,ebx
  40765f:	imul   esi,DWORD PTR [esi-0x46],0x2bcf7cfe
  407666:	dec    ebp
  407667:	aad    0x78
  407669:	ins    DWORD PTR es:[edi],dx
  40766a:	push   ebp
  40766b:	imul   edx,DWORD PTR [ebp-0x2c44b6fd],0xcf414934
  407675:	stos   BYTE PTR es:[edi],al
  407676:	scas   eax,DWORD PTR es:[edi]
  407677:	mov    esp,0x69361230
  40767c:	les    esp,FWORD PTR [edi]
  40767e:	push   esi
  40767f:	and    al,0xe
  407681:	and    al,0xb9
  407683:	pop    edx
  407684:	pop    ebx
  407685:	pop    esp
  407686:	aas    
  407687:	aaa    
  407688:	jg     0x407704
  40768a:	inc    esi
  40768b:	clc    
  40768c:	push   ebp
  40768d:	pop    edx
  40768e:	lock jmp FWORD PTR [edi]
  407691:	cs aaa 
  407693:	fnsave [esi-0x1d745a03]
  407699:	test   al,0xf3
  40769b:	push   ecx
  40769c:	pop    ecx
  40769d:	(bad)  
  40769e:	jmp    0x3995a32b
  4076a3:	pop    ecx
  4076a4:	add    BYTE PTR [esi+0x410ba501],al
  4076aa:	iret   
  4076ab:	jl     0x4076f2
  4076ad:	cmp    eax,0x7d136f6c
  4076b2:	xchg   esp,eax
  4076b3:	pushf  
  4076b4:	xchg   BYTE PTR [ecx+edx*4+0x5ec23703],ch
  4076bb:	je     0x4076e2
  4076bd:	jae    0x4076da
  4076bf:	shl    DWORD PTR [ecx+0x2edc598f],1
  4076c5:	xchg   edx,eax
  4076c6:	xchg   ch,bh
  4076c8:	ins    DWORD PTR es:[edi],dx
  4076c9:	idiv   edi
  4076cb:	and    cl,dl
  4076cd:	jo     0x4076a8
  4076cf:	jl     0x4076ea
  4076d1:	je     0x40768b
  4076d3:	pop    esi
  4076d4:	test   eax,0x6015dbbc
  4076d9:	add    ebp,DWORD PTR [esi+0x54]
  4076dc:	std    
  4076dd:	inc    edi
  4076de:	pop    ss
  4076df:	xchg   edx,eax
  4076e0:	or     bl,bl
  4076e2:	mov    ecx,0xb98d07d3
  4076e7:	push   eax
  4076e8:	mov    ds:0x68f15b4f,al
  4076ed:	push   ds
  4076ee:	(bad)  
  4076ef:	mov    eax,0xbf52ff51
  4076f4:	cmp    al,0x60
  4076f6:	xchg   ebp,eax
  4076f7:	adc    al,0x67
  4076f9:	imul   esp,DWORD PTR [esi+esi*4+0x11],0x40deee8c
  407701:	sub    eax,DWORD PTR [ebx+0x41]
  407704:	jnp    0x407707
  407706:	and    BYTE PTR [eax+0x8],al
  407709:	add    eax,0xc1da11b0
  40770e:	loopne 0x4076d4
  407710:	clc    
  407711:	add    dh,BYTE PTR [esi-0x277bd120]
  407717:	inc    esp
  407718:	mov    BYTE PTR [edi],dl
  40771a:	jge    0x40770a
  40771c:	or     ebp,edx
  40771e:	sub    eax,0x59016a93
  407723:	mov    ebx,es
  407725:	cmc    
  407726:	or     DWORD PTR [edi+0x7e7f9f7e],edx
  40772c:	sub    eax,0x507aeda9
  407731:	dec    ecx
  407732:	push   ecx
  407733:	and    bh,cl
  407735:	fnstcw WORD PTR [edx+ebx*8+0x24]
  407739:	dec    edi
  40773a:	(bad)  
  40773b:	(bad)  
  40773c:	cmp    DWORD PTR [ebp+ebp*2-0x1d],ecx
  407740:	fwait
  407741:	mov    al,0x29
  407743:	mov    ds:0x228c4b1f,al
  407748:	shr    DWORD PTR [ebx+0x303e5a51],1
  40774e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40774f:	outs   dx,DWORD PTR ds:[esi]
  407750:	or     DWORD PTR [eax],0xffffffee
  407753:	lahf   
  407754:	stos   BYTE PTR es:[edi],al
  407755:	sbb    DWORD PTR [edi-0xb4d0b6f],esp
  40775b:	ins    BYTE PTR es:[edi],dx
  40775c:	fist   DWORD PTR [esp+eax*1-0x1d]
  407760:	add    esp,0x4b8e377d
  407766:	add    ecx,esi
  407768:	dec    esp
  407769:	sub    al,0xf1
  40776b:	je     0x4077e5
  40776d:	scas   al,BYTE PTR es:[edi]
  40776e:	pop    eax
  40776f:	sar    BYTE PTR [ebp-0x5683e197],0x38
  407776:	aaa    
  407777:	test   dh,dh
  407779:	jae    0x4077c9
  40777b:	into   
  40777c:	lods   eax,DWORD PTR ds:[esi]
  40777d:	rcr    DWORD PTR [eax-0x5f],cl
  407780:	pop    ds
  407781:	jle    0x40773e
  407783:	lods   eax,DWORD PTR ds:[esi]
  407784:	stos   BYTE PTR es:[edi],al
  407785:	push   0x796529e0
  40778a:	mov    ebx,cs
  40778c:	call   0x56e8:0x54c97736
  407793:	pop    edi
  407794:	mov    ds:0x42ac2b1f,al
  407799:	or     al,0x56
  40779b:	push   esi
  40779c:	aam    0x26
  40779e:	dec    edi
  40779f:	cmp    BYTE PTR ds:0x9ec0ffbe,0x92
  4077a6:	pop    esp
  4077a7:	lods   eax,DWORD PTR ds:[esi]
  4077a8:	xchg   edx,eax
  4077a9:	sbb    BYTE PTR [edx-0x157b6395],0x9f
  4077b0:	or     eax,0x2a774b99
  4077b5:	push   cs
  4077b6:	pop    ds
  4077b7:	push   ss
  4077b8:	bound  ebx,QWORD PTR [eax+ebp*1+0x7c]
  4077bc:	jle    0x407831
  4077be:	pop    ebx
  4077bf:	stos   DWORD PTR es:[edi],eax
  4077c0:	loop   0x407827
  4077c2:	popf   
  4077c3:	loope  0x40775f
  4077c5:	or     BYTE PTR [ebp+0x7007bd1e],0x5d
  4077cc:	ret    0xc851
  4077cf:	dec    ecx
  4077d0:	inc    ebx
  4077d1:	sub    DWORD PTR [edx],0xe527657f
  4077d7:	mov    ds:0xd11a1df4,al
  4077dc:	xlat   BYTE PTR ds:[ebx]
  4077dd:	inc    edi
  4077de:	cs pop edx
  4077e0:	fldcw  WORD PTR [eax]
  4077e2:	fsubr  QWORD PTR [ecx]
  4077e4:	mov    eax,ds:0x84cda935
  4077e9:	and    ah,0x43
  4077ec:	aam    0x9d
  4077ee:	or     eax,0x62fe046b
  4077f3:	fild   DWORD PTR [edx-0x15f525ef]
  4077f9:	push   edi
  4077fa:	add    bl,ch
  4077fc:	(bad)  
  4077fe:	pop    es
  4077ff:	cmp    dh,BYTE PTR [ecx+0x35e4f623]
  407805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407806:	or     DWORD PTR [edx-0x3d759c84],edx
  40780c:	and    bl,al
  40780e:	scas   eax,DWORD PTR es:[edi]
  40780f:	and    DWORD PTR [edx+0x3b],eax
  407812:	stos   BYTE PTR es:[edi],al
  407813:	xor    al,0xa5
  407815:	das    
  407816:	dec    eax
  407817:	loopne 0x4077bb
  407819:	xchg   ebx,eax
  40781a:	sub    BYTE PTR [esi],al
  40781c:	xchg   DWORD PTR [esi+0x7e634e3e],esp
  407822:	mov    edi,0xf17c6a27
  407827:	jl     0x407858
  407829:	div    DWORD PTR [eax]
  40782b:	pushf  
  40782c:	(bad)  
  40782d:	scas   eax,DWORD PTR es:[edi]
  40782e:	out    0x7f,eax
  407830:	stc    
  407831:	je     0xea7e0d13
  407837:	jmp    0x4c3:0xd3c98265
  40783e:	mov    edi,0x31663321
  407843:	xchg   ebx,eax
  407844:	push   edx
  407845:	jae    0x407815
  407847:	jl     0x407869
  407849:	pop    ss
  40784a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40784b:	mov    dl,0x92
  40784d:	pop    esp
  40784e:	push   0x7d
  407850:	jle    0x40785f
  407852:	cdq    
  407853:	mov    edx,0xc9f5c443
  407858:	(bad)  
  407859:	mov    al,ds:0xe0310a6c
  40785e:	mov    al,ds:0xdaaa5c50
  407863:	test   al,0x40
  407865:	gs jb  0x407868
  407868:	add    cl,ah
  40786a:	inc    edi
  40786b:	or     al,0x3c
  40786d:	sub    BYTE PTR [edi],dl
  40786f:	lock int 0xb1
  407872:	mov    dh,0x6c
  407874:	je     0x40785b
  407876:	sbb    BYTE PTR [eax-0x6d79e4b5],ah
  40787c:	loop   0x407859
  40787e:	scas   al,BYTE PTR es:[edi]
  40787f:	ret    0x94d8
  407882:	call   0x4286ebd1
  407887:	jmp    0x83bd17af
  40788c:	int    0x9d
  40788e:	sbb    ebp,DWORD PTR [eax]
  407890:	or     eax,DWORD PTR [edi+eiz*8+0x15]
  407894:	iret   
  407895:	outs   dx,BYTE PTR ds:[esi]
  407896:	call   0x8258:0x87b1aed1
  40789d:	mov    al,0x9e
  40789f:	retf   
  4078a0:	ins    DWORD PTR es:[edi],dx
  4078a1:	call   0x673:0x43edd7ce
  4078a8:	dec    esi
  4078a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078aa:	jecxz  0x407888
  4078ac:	sub    al,0x93
  4078ae:	cdq    
  4078af:	test   DWORD PTR [ebx-0x13],0xf470ed12
  4078b6:	sub    al,0x54
  4078b8:	fbstp  TBYTE PTR [ecx+0x7]
  4078bb:	mov    DWORD PTR [ebp+0x63],edx
  4078be:	fnstsw WORD PTR [ecx]
  4078c0:	jo     0x4078cb
  4078c2:	xchg   edi,eax
  4078c3:	jb     0x407853
  4078c5:	or     BYTE PTR [esi],bh
  4078c7:	dec    esp
  4078c8:	mov    ebp,0x1a71139a
  4078cd:	xchg   BYTE PTR [esi-0x1a86f1a2],ch
  4078d3:	in     al,0x5b
  4078d5:	pushf  
  4078d6:	cmp    esp,DWORD PTR [edx-0x74]
  4078d9:	ins    BYTE PTR es:[edi],dx
  4078da:	adc    edx,edi
  4078dc:	aaa    
  4078dd:	gs pop edx
  4078df:	dec    ecx
  4078e0:	in     al,0x4f
  4078e2:	cmp    DWORD PTR [ebp+0x1f179cf4],esp
  4078e8:	mov    ah,0x8e
  4078ea:	xchg   edi,eax
  4078eb:	jnp    0x40796c
  4078ed:	rol    bh,1
  4078ef:	enter  0x207e,0xdc
  4078f3:	mov    ah,BYTE PTR [ebp-0x72]
  4078f6:	in     al,0x56
  4078f8:	lahf   
  4078f9:	jnp    0x40792f
  4078fb:	out    dx,eax
  4078fc:	cs mov al,0xcb
  4078ff:	shl    DWORD PTR ds:0x91a3bd49,0xa3
  407906:	xor    BYTE PTR [ebx-0x30],ah
  407909:	lahf   
  40790a:	pop    ds
  40790b:	aad    0xc
  40790d:	jns    0x407896
  40790f:	mov    edx,0x3d92b8c9
  407914:	inc    eax
  407915:	sbb    ebp,eax
  407917:	gs jne 0x4078a4
  40791a:	ins    DWORD PTR es:[edi],dx
  40791b:	inc    edi
  40791c:	out    dx,al
  40791d:	nop
  40791e:	hlt    
  40791f:	and    bh,BYTE PTR [eax+0x58]
  407922:	dec    ebx
  407923:	hlt    
  407924:	pop    edi
  407925:	cmp    DWORD PTR ds:0x1d6f6b5a,ebx
  40792b:	bound  ebp,QWORD PTR [ebx+edi*8]
  40792e:	gs dec edi
  407930:	lahf   
  407931:	leave  
  407932:	ins    DWORD PTR es:[edi],dx
  407933:	mov    edx,0xfd8fb942
  407938:	jecxz  0x40798e
  40793a:	idiv   DWORD PTR [eax+0x25]
  40793d:	scas   eax,DWORD PTR es:[edi]
  40793e:	or     DWORD PTR [ecx-0x289ac466],0x6e695cfb
  407948:	fwait
  407949:	in     al,dx
  40794a:	adc    eax,DWORD PTR [ebx+0x67529cce]
  407950:	inc    ebx
  407951:	lea    edi,[esp+ecx*8+0x45]
  407955:	and    eax,0xd6308f99
  40795a:	ror    DWORD PTR [esi+0x195c9801],0xdb
  407961:	jb     0x407928
  407963:	out    0x48,al
  407965:	xor    ebx,DWORD PTR [edx]
  407967:	xor    al,0x2c
  407969:	adc    DWORD PTR [esi],ecx
  40796b:	add    BYTE PTR [ecx-0x4c],ah
  40796e:	ret    0xdc0c
  407971:	(bad)  
  407972:	mov    al,ds:0x6398b4e4
  407977:	test   al,0x54
  407979:	xchg   esp,eax
  40797a:	jno    0x40796f
  40797c:	push   cs
  40797d:	cwde   
  40797e:	sar    DWORD PTR [ecx],cl
  407980:	push   ecx
  407981:	push   ds
  407982:	xor    DWORD PTR ds:0xf94a6179,ecx
  407988:	and    ebp,0x16f0f562
  40798e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40798f:	cmp    DWORD PTR [ebx+0x6c],edx
  407992:	push   edx
  407993:	mov    ch,0xb1
  407995:	adc    BYTE PTR [ebx+0x5529719c],cl
  40799b:	adc    al,bh
  40799d:	lea    edi,ds:0xbace077a
  4079a3:	in     al,dx
  4079a4:	cmp    BYTE PTR [ebp+0x7a],dl
  4079a7:	ins    DWORD PTR es:[edi],dx
  4079a8:	or     ecx,edi
  4079aa:	mov    ebx,0xb1ff2c05
  4079af:	loopne 0x407952
  4079b1:	dec    ecx
  4079b2:	ret    
  4079b3:	sbb    cl,dl
  4079b5:	sbb    BYTE PTR [edx-0x2f],bh
  4079b8:	aaa    
  4079b9:	jg     0x407a27
  4079bb:	add    BYTE PTR [ebx-0x5d],dl
  4079be:	sbb    dl,bl
  4079c0:	rcr    edx,cl
  4079c2:	sbb    eax,DWORD PTR [ebx-0x60a219d0]
  4079c8:	aaa    
  4079c9:	cmp    eax,DWORD PTR [edi+edx*8]
  4079cc:	leave  
  4079cd:	push   esi
  4079ce:	xchg   ebx,eax
  4079cf:	mov    ebx,esi
  4079d1:	jecxz  0x407a23
  4079d3:	int3   
  4079d4:	gs cmc 
  4079d6:	inc    esp
  4079d7:	cmp    al,0x31
  4079d9:	ds inc eax
  4079db:	pushf  
  4079dc:	xor    cl,BYTE PTR [ebp+0x6f]
  4079df:	xor    eax,0x3258503
  4079e4:	scas   al,BYTE PTR es:[edi]
  4079e5:	push   cs
  4079e6:	push   edx
  4079e7:	sub    BYTE PTR [ebp+0x146927ea],dh
  4079ed:	mov    ds:0xda827890,al
  4079f2:	ds call 0x58f578ca
  4079f8:	js     0x407991
  4079fa:	loope  0x407a37
  4079fc:	and    BYTE PTR fs:[ecx-0x56],ah
  407a00:	push   es
  407a01:	pop    edx
  407a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a03:	loop   0x407a66
  407a05:	pop    ss
  407a06:	(bad)  
  407a07:	ss sub eax,0x73a65ce1
  407a0d:	push   ebx
  407a0e:	les    edi,FWORD PTR [esi]
  407a10:	sbb    dl,al
  407a12:	(bad)  
  407a14:	popa   
  407a15:	dec    ebx
  407a16:	leave  
  407a17:	xchg   esi,eax
  407a18:	sub    ch,BYTE PTR [ebx]
  407a1a:	and    edx,DWORD PTR [ecx-0x1e]
  407a1d:	sub    al,0x55
  407a1f:	mov    esi,0x577f6583
  407a24:	mov    ds:0x16b4a3ec,eax
  407a29:	scas   eax,DWORD PTR es:[edi]
  407a2a:	in     al,dx
  407a2b:	outs   dx,DWORD PTR ds:[esi]
  407a2c:	scas   eax,DWORD PTR es:[edi]
  407a2d:	dec    ecx
  407a2e:	sbb    edi,DWORD PTR [ebp-0x12d1a7bf]
  407a34:	daa    
  407a35:	loop   0x407a67
  407a37:	pop    eax
  407a38:	outs   dx,BYTE PTR ds:[esi]
  407a39:	dec    ebp
  407a3a:	xchg   edi,eax
  407a3b:	(bad)  
  407a3c:	repz mov esp,esp
  407a3f:	xor    cl,BYTE PTR [bx+di-0x6a45]
  407a44:	add    ah,BYTE PTR [ecx]
  407a46:	call   0x4cb54745
  407a4b:	adc    edi,ebx
  407a4d:	mov    esp,0xade6e474
  407a52:	mov    dl,0x10
  407a54:	loop   0x407a4a
  407a56:	xlat   BYTE PTR ds:[ebx]
  407a57:	fisttp WORD PTR [ebx]
  407a59:	scas   eax,DWORD PTR es:[edi]
  407a5a:	mov    es,WORD PTR [esi+0x7c79de63]
  407a60:	dec    esi
  407a61:	sbb    ebx,DWORD PTR [edi-0x62]
  407a64:	cld    
  407a65:	stc    
  407a66:	cdq    
  407a67:	xchg   ecx,eax
  407a68:	cs ret 
  407a6a:	mov    edi,0xc523b4af
  407a6f:	(bad)  
  407a70:	(bad)  
  407a71:	cdq    
  407a72:	cs in  eax,0xfb
  407a75:	push   ecx
  407a76:	scas   eax,DWORD PTR es:[edi]
  407a77:	adc    dh,BYTE PTR [ecx-0x4c]
  407a7a:	cdq    
  407a7b:	popa   
  407a7c:	das    
  407a7d:	stc    
  407a7e:	mov    al,0x39
  407a80:	jle    0x407a5f
  407a82:	dec    ebp
  407a83:	shl    BYTE PTR [esi+0x8],1
  407a86:	and    eax,0x15f6d0fc
  407a8b:	xchg   ebx,eax
  407a8c:	adc    eax,0x7f5b7a44
  407a91:	outs   dx,DWORD PTR ds:[esi]
  407a92:	cdq    
  407a93:	stc    
  407a94:	jbe    0x407a44
  407a96:	dec    esi
  407a97:	mov    esp,0xdbe8cc1f
  407a9c:	retf   0x6fb9
  407a9f:	mov    dl,0x1a
  407aa1:	mov    eax,0x15947dfc
  407aa6:	lds    esi,FWORD PTR [edi-0x184e0857]
  407aac:	repz cmc 
  407aae:	int3   
  407aaf:	jecxz  0x407a56
  407ab1:	inc    edi
  407ab2:	imul   edx
  407ab4:	test   DWORD PTR ds:0x3b98caca,edx
  407aba:	xchg   ecx,eax
  407abb:	pop    ds
  407abc:	out    0xf5,al
  407abe:	xor    ah,BYTE PTR [ebp-0x47]
  407ac1:	mov    esp,DWORD PTR [ebx-0x46]
  407ac4:	cs cmp eax,0x1c888696
  407aca:	or     DWORD PTR [edi+ecx*1],esi
  407acd:	xchg   esp,eax
  407ace:	dec    edi
  407acf:	test   al,0x44
  407ad1:	xchg   esi,eax
  407ad2:	add    ebp,0x16
  407ad5:	xchg   edx,eax
  407ad6:	fmul   st(1),st
  407ad8:	sbb    BYTE PTR [eax],al
  407ada:	mov    esi,0x649d57f8
  407adf:	fld    QWORD PTR [ebp+0x44]
  407ae2:	enter  0xa297,0x89
  407ae6:	mov    dh,0x47
  407ae8:	shl    DWORD PTR [edx],1
  407aea:	add    BYTE PTR [ebx],cl
  407aec:	and    DWORD PTR [edi],eax
  407aee:	clc    
  407aef:	adc    dh,ah
  407af1:	xchg   edx,eax
  407af2:	mov    esi,0x5d52a5e8
  407af7:	push   ss
  407af8:	mov    eax,0x39e09158
  407afd:	mov    al,ds:0x193010cb
  407b02:	addr16 add ecx,eax
  407b05:	nop
  407b06:	mov    dh,0x76
  407b08:	mov    ch,0x6a
  407b0a:	jg     0x407af3
  407b0c:	jmp    0xe480:0xf8a07f73
  407b13:	dec    esp
  407b14:	inc    eax
  407b15:	repnz cdq 
  407b17:	stc    
  407b18:	cs mov edx,0xb0543026
  407b1e:	or     eax,0x6d915923
  407b23:	enter  0x46e2,0x22
  407b27:	cli    
  407b28:	mov    dh,0x88
  407b2a:	and    BYTE PTR [ecx-0x76],ch
  407b2d:	push   edx
  407b2e:	mov    DWORD PTR [eax+eiz*4+0x53f84429],edx
  407b35:	fmulp  st(5),st
  407b37:	jg     0x407bac
  407b39:	sub    BYTE PTR [ecx-0x6ccb570],dh
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xf2870e0
  407e5b:	add    ecx,DWORD PTR [ebx]
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	in     al,dx
  407e66:	mov    ch,0x9c
  407e68:	and    ebx,DWORD PTR [ebp-0x77847da3]
  407e6e:	dec    edi
  407e6f:	ret    0x3ced
  407e72:	jecxz  0x407e76
  407e74:	cmp    BYTE PTR [edi],ch
  407e76:	jo     0x407e6d
  407e78:	xor    ebp,eax
  407e7a:	popa   
  407e7b:	or     BYTE PTR es:[ebx],bh
  407e7e:	ins    DWORD PTR es:[edi],dx
  407e7f:	icebp  
  407e80:	aaa    
  407e81:	(bad)  
  407e82:	fisttp WORD PTR [edi-0x2f]
  407e85:	fwait
  407e86:	les    edx,FWORD PTR [ecx]
  407e88:	test   BYTE PTR [edx],0xc3
  407e8b:	mov    al,ds:0xbfa4f4f9
  407e90:	cmp    BYTE PTR [eax-0x6b],0xd0
  407e94:	adc    DWORD PTR [edi+0x565b59e2],edx
  407e9a:	or     DWORD PTR [edx-0x8839c8],esp
  407ea0:	add    ebx,0xffffff9b
  407ea3:	in     eax,0xa9
  407ea5:	std    
  407ea6:	loop   0x407e8e
  407ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ea9:	jnp    0x407e59
  407eab:	cdq    
  407eac:	mov    eax,ds:0x9433c9f2
  407eb1:	jno    0x407e3c
  407eb3:	adc    al,0x41
  407eb5:	cli    
  407eb6:	xor    dl,BYTE PTR [ebx]
  407eb8:	jo     0x407e72
  407eba:	pop    ebx
  407ebb:	aas    
  407ebc:	mov    WORD PTR [esi],ds
  407ebe:	cli    
  407ebf:	std    
  407ec0:	jl     0x407e4f
  407ec2:	fstp   TBYTE PTR [eax+0x8]
  407ec5:	iret   
  407ec6:	push   edx
  407ec7:	cmp    cl,BYTE PTR [ebx]
  407ec9:	jno    0x407eb2
  407ecb:	mov    bh,0xcc
  407ecd:	loop   0x407e62
  407ecf:	fist   WORD PTR [eax]
  407ed1:	ror    BYTE PTR [esi+edx*4],0x8a
  407ed5:	ret    
  407ed6:	mov    bl,0xf0
  407ed8:	outs   dx,DWORD PTR ds:[esi]
  407ed9:	inc    edi
  407eda:	fild   DWORD PTR ds:0x54d727c0
  407ee0:	popf   
  407ee1:	fdivr  DWORD PTR [edx+0x1f1c83d4]
  407ee7:	daa    
  407ee8:	gs mov bh,0x31
  407eeb:	sbb    BYTE PTR [eax+0x640222ab],al
  407ef1:	stos   DWORD PTR es:[edi],eax
  407ef2:	mov    WORD PTR [eax-0x91f82a6],es
  407ef8:	push   ecx
  407ef9:	add    ebp,ecx
  407efb:	mov    cl,0x3a
  407efd:	dec    esi
  407efe:	xchg   BYTE PTR [ebx+0x1d650a4a],cl
  407f04:	retf   0x7ade
  407f07:	rol    DWORD PTR ds:[eiz*8-0x38288a4f],0x59
  407f10:	stos   DWORD PTR es:[edi],eax
  407f11:	jl     0x407eec
  407f13:	sbb    eax,0x40d67264
  407f18:	cmc    
  407f19:	aaa    
  407f1a:	xchg   BYTE PTR [ebp+0x376f48e1],ch
  407f20:	add    esp,DWORD PTR [ecx+0x8]
  407f23:	jbe    0x407eb1
  407f25:	mov    dl,0xcc
  407f27:	out    dx,eax
  407f28:	in     eax,dx
  407f29:	shr    BYTE PTR [eax+0x692f7e92],1
  407f2f:	loop   0x407fa5
  407f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f32:	jo     0x407ebe
  407f34:	mov    ecx,0xa25e0f2f
  407f39:	sti    
  407f3a:	aam    0xa2
  407f3c:	mov    ds:0x3d683680,al
  407f41:	pusha  
  407f42:	addr16 pushf 
  407f44:	gs mov ebx,0xc7c8fdda
  407f4a:	jno    0x407ede
  407f4c:	outs   dx,BYTE PTR ds:[esi]
  407f4d:	mov    ch,0xb8
  407f4f:	jecxz  0x407fa2
  407f51:	hlt    
  407f52:	sbb    ecx,DWORD PTR [ebp-0x495bc13c]
  407f58:	mov    al,0x5c
  407f5a:	aad    0xb
  407f5c:	jmp    FWORD PTR [ecx-0x7a]
  407f5f:	pop    esp
  407f60:	sub    cl,0x87
  407f63:	out    dx,al
  407f64:	xor    al,0x25
  407f66:	call   0xee42:0xcff52e8e
  407f6d:	in     al,dx
  407f6e:	jmp    0xcb12:0x55503cbf
  407f75:	push   es
  407f76:	push   esi
  407f77:	cmp    ch,BYTE PTR [eax+0x75a320aa]
  407f7d:	inc    esi
  407f7e:	inc    esi
  407f7f:	and    al,0x13
  407f81:	call   0x10c9:0xb5065668
  407f88:	iret   
  407f89:	cmp    edx,esi
  407f8b:	jg     0x407ffb
  407f8d:	sbb    esi,0x97b2425a
  407f93:	inc    BYTE PTR [esi-0x4019f292]
  407f99:	mov    ebx,0x709302cd
  407f9e:	mov    esi,0x448529da
  407fa3:	lods   al,BYTE PTR ds:[esi]
  407fa4:	pop    ebp
  407fa5:	sub    al,ch
  407fa7:	adc    BYTE PTR [ecx],bl
  407fa9:	into   
  407faa:	test   DWORD PTR [esi+0x7e],edi
  407fad:	loop   0x407fac
  407faf:	sub    al,0x23
  407fb1:	mov    bl,0xf3
  407fb3:	fldcw  WORD PTR [edi+0x73]
  407fb6:	clc    
  407fb7:	ss push cs
  407fb9:	out    0xe0,eax
  407fbb:	pop    ss
  407fbc:	leave  
  407fbd:	test   DWORD PTR [ecx-0x38],0x252c7d03
  407fc4:	ror    DWORD PTR [esi],1
  407fc6:	mov    esp,0xc0c5266d
  407fcb:	mov    bh,0xe8
  407fcd:	inc    edx
  407fce:	push   ebx
  407fcf:	fidivr DWORD PTR [ebx+0x66]
  407fd2:	imul   eax,DWORD PTR [ecx],0xe4aff132
  407fd8:	inc    esi
  407fd9:	stos   DWORD PTR es:[edi],eax
  407fda:	ret    0xa49c
  407fdd:	add    eax,0x9d8739fb
  407fe2:	mov    bl,0xc
  407fe4:	mov    esi,ecx
  407fe6:	or     eax,ebx
  407fe8:	mov    bh,0x12
  407fea:	(bad)  
  407fec:	retf   
  407fed:	inc    edx
  407fee:	dec    esp
  407fef:	jne    0x40800a
  407ff1:	inc    esi
  407ff2:	mov    ss,WORD PTR [ebp-0x5330eaef]
  407ff8:	push   edx
  407ff9:	mov    dl,0xaa
  407ffb:	les    esi,FWORD PTR [edi]
  407ffd:	pop    es
  407ffe:	dec    edi
  407fff:	je     0x407fae
  408001:	add    al,0xa3
  408003:	mov    ebp,0xef9c350b
  408008:	ror    BYTE PTR [eax+0x69],1
  40800b:	fisttp DWORD PTR [eax+esi*2+0x10b5e3b8]
  408012:	adc    DWORD PTR [ebx+0x62],ecx
  408015:	cdq    
  408016:	mov    ch,0xa6
  408018:	add    edx,0x1c
  40801b:	fnsave [edi-0x22b1b6c]
  408021:	icebp  
  408022:	(bad)  
  408023:	fsubr  st(5),st
  408025:	push   es
  408026:	inc    BYTE PTR [ebx]
  408028:	jge    0x408068
  40802a:	rcr    DWORD PTR [ecx-0x4962854d],1
  408030:	mov    ss,WORD PTR [ecx-0x37]
  408033:	pop    edi
  408034:	xchg   edi,eax
  408035:	cmp    cl,BYTE PTR [edi+0x672803df]
  40803b:	inc    edx
  40803c:	xlat   BYTE PTR ds:[ebx]
  40803d:	jnp    0x407fe0
  40803f:	rcl    DWORD PTR [ebp+0x56c4bb59],cl
  408045:	call   0x7eab7b71
  40804a:	pop    es
  40804b:	inc    ebp
  40804c:	pop    esi
  40804d:	jb     0x407fd2
  40804f:	mov    dl,0xd4
  408051:	mov    DWORD PTR [esi+0x16],esp
  408054:	sub    al,0xd0
  408056:	call   0xd993bb86
  40805b:	jle    0x4080be
  40805d:	jp     0x408002
  40805f:	jb     0x4080a4
  408061:	mov    esi,0x668bf04b
  408066:	sbb    eax,0xe7eb8649
  40806b:	mov    al,0x7f
  40806d:	or     al,0x1a
  40806f:	sub    dl,BYTE PTR gs:[edi+0x54]
  408073:	mov    BYTE PTR [esi],dh
  408075:	pop    ecx
  408076:	sub    ch,BYTE PTR [eax+0x6e]
  408079:	hlt    
  40807a:	(bad)  
  40807b:	js     0x884a5fb8
  408081:	add    al,0xf2
  408083:	(bad)  
  408084:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408086:	lods   al,BYTE PTR ds:[esi]
  408087:	jmp    0x247e:0xa552d94e
  40808e:	mov    edx,0x6ae6a254
  408093:	scas   eax,DWORD PTR es:[edi]
  408094:	push   ss
  408095:	fwait
  408096:	out    dx,al
  408097:	in     eax,dx
  408098:	cdq    
  408099:	sub    al,0xd5
  40809b:	(bad)  
  40809c:	loop   0x4080eb
  40809e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40809f:	jg     0x4080ff
  4080a1:	rcr    al,0xf0
  4080a4:	push   edx
  4080a5:	lods   al,BYTE PTR ds:[esi]
  4080a6:	adc    BYTE PTR [ecx+0x4],0x73
  4080aa:	mov    DWORD PTR [edi-0x15],esp
  4080ad:	push   esp
  4080ae:	clc    
  4080af:	iret   
  4080b0:	jl     0x4080a6
  4080b2:	cwde   
  4080b3:	xchg   ecx,eax
  4080b4:	pop    esp
  4080b5:	xor    eax,0x4ad67d75
  4080ba:	push   0xffffff97
  4080bc:	and    bl,BYTE PTR [ebp+0x631efb6c]
  4080c2:	fsub   QWORD PTR [ecx+0x9]
  4080c5:	and    edi,DWORD PTR [ebx+0x25]
  4080c8:	pop    ecx
  4080c9:	and    eax,ebx
  4080cb:	popf   
  4080cc:	inc    ebp
  4080cd:	adc    cl,dh
  4080cf:	adc    DWORD PTR [esi+0x7b],edx
  4080d2:	xchg   ecx,eax
  4080d3:	jge    0x408117
  4080d5:	adc    BYTE PTR [ecx-0x1c344fa5],ah
  4080db:	iret   
  4080dc:	loope  0x4080dd
  4080de:	add    DWORD PTR [ecx+0x9706b81],ebp
  4080e4:	sar    dl,1
  4080e6:	inc    edi
  4080e7:	mov    bl,0xb2
  4080e9:	push   ss
  4080ea:	iret   
  4080eb:	scas   eax,DWORD PTR es:[edi]
  4080ec:	cmp    DWORD PTR [ebx-0x45960ff7],edx
  4080f2:	fst    DWORD PTR [esi-0x68]
  4080f5:	test   DWORD PTR [edi-0xb],edx
  4080f8:	dec    esp
  4080f9:	icebp  
  4080fa:	pusha  
  4080fb:	dec    esi
  4080fc:	xor    BYTE PTR [edx-0x20df17af],dh
  408102:	icebp  
  408103:	sub    edi,eax
  408105:	mov    ds:0x2935379,eax
  40810a:	retf   0x4825
  40810d:	cmp    BYTE PTR [esi+0x1e],ch
  408110:	into   
  408111:	xor    al,0x0
  408113:	xchg   BYTE PTR [esp+ebx*8],dl
  408116:	mov    edx,0x2662d4dc
  40811b:	fwait
  40811c:	pop    ss
  40811d:	outs   dx,BYTE PTR ds:[esi]
  40811e:	outs   dx,BYTE PTR ds:[esi]
  40811f:	mov    dl,0x57
  408121:	fcomp  QWORD PTR [edx+0x2b63b552]
  408127:	es or  esi,ebp
  40812a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40812b:	ds mov ah,0x9a
  40812e:	stos   DWORD PTR es:[edi],eax
  40812f:	test   BYTE PTR [edx+0x28],bl
  408132:	sbb    DWORD PTR [esi+0x26],ebx
  408135:	bound  ebp,QWORD PTR [ecx]
  408137:	push   ebp
  408138:	aas    
  408139:	mov    eax,ds:0x29ce2418
  40813e:	(bad)  
  40813f:	sbb    eax,0xdcf4c5c5
  408144:	jle    0x4081bb
  408146:	jae    0x408148
  408148:	out    0xb,eax
  40814a:	aam    0x7a
  40814c:	push   edi
  40814d:	push   cs
  40814e:	dec    edi
  40814f:	loopne 0x40816b
  408151:	outs   dx,BYTE PTR ds:[esi]
  408152:	dec    ebx
  408153:	cmp    eax,0xc26087df
  408158:	jp     0x40818d
  40815a:	sysexit 
  40815c:	inc    ebp
  40815d:	out    dx,al
  40815e:	lds    ecx,FWORD PTR [ebp+eax*1-0x9]
  408162:	xor    DWORD PTR [edx],esi
  408164:	mov    dh,0xdb
  408166:	out    0x72,eax
  408168:	stos   DWORD PTR es:[edi],eax
  408169:	sbb    al,0x59
  40816b:	cmp    BYTE PTR [eax-0x14cfd638],bh
  408171:	stos   BYTE PTR es:[edi],al
  408172:	call   0xb08a:0x5ba50d84
  408179:	hlt    
  40817a:	pop    esi
  40817b:	adc    BYTE PTR [eax],bl
  40817d:	cmp    BYTE PTR [eax],dl
  40817f:	fdiv   QWORD PTR [eax]
  408181:	loopne 0x408156
  408183:	push   cs
  408184:	push   ebx
  408185:	xor    edx,ebx
  408187:	mov    esi,0x8fbafc63
  40818c:	loop   0x4081fb
  40818e:	pop    es
  40818f:	popa   
  408190:	fisub  DWORD PTR [edi-0x558e39dc]
  408196:	fbstp  TBYTE PTR [ebp-0x4f]
  408199:	into   
  40819a:	or     DWORD PTR ds:0x40a3585a,ebp
  4081a0:	xor    DWORD PTR [ecx-0x46],0xd9c07c42
  4081a7:	xor    edx,eax
  4081a9:	pop    ss
  4081aa:	aam    0x1f
  4081ac:	dec    ecx
  4081ad:	dec    ebx
  4081ae:	jmp    0x2c34de02
  4081b3:	xchg   BYTE PTR [ebp+esi*8+0x3c],dh
  4081b7:	aam    0x5a
  4081b9:	int    0x71
  4081bb:	clc    
  4081bc:	push   edx
  4081bd:	test   DWORD PTR [eax],ecx
  4081bf:	loop   0x408153
  4081c1:	aas    
  4081c2:	add    BYTE PTR cs:[ecx+0x55],bl
  4081c6:	mov    bh,0x74
  4081c8:	fadd   st,st(6)
  4081ca:	jmp    0xb2fb:0x1df620ae
  4081d1:	push   es
  4081d2:	sub    BYTE PTR [esi-0x71f186b2],ch
  4081d8:	ror    BYTE PTR [ecx],0x33
  4081db:	inc    ebx
  4081dc:	std    
  4081dd:	les    esp,FWORD PTR [ebp+0xca2f81c]
  4081e3:	hlt    
  4081e4:	repnz cmp DWORD PTR [edx],esp
  4081e7:	mov    esp,0x821b1d0b
  4081ec:	aam    0x10
  4081ee:	into   
  4081ef:	mov    esi,DWORD PTR [edx]
  4081f1:	xchg   esp,eax
  4081f2:	push   cs
  4081f3:	in     al,0x67
  4081f5:	int3   
  4081f6:	mov    ecx,edx
  4081f8:	call   0x6e0a9427
  4081fd:	push   edx
  4081fe:	shl    BYTE PTR [ebx-0x1],1
  408201:	inc    esp
  408202:	inc    ebp
  408203:	into   
  408204:	adc    ebp,DWORD PTR [edi+edx*4+0x7083f2e0]
  40820b:	sti    
  40820c:	mov    al,ds:0x198bc91e
  408211:	pop    ss
  408212:	shl    BYTE PTR [eax-0x6fd1a0a6],1
  408218:	out    dx,eax
  408219:	inc    eax
  40821a:	cmc    
  40821b:	fwait
  40821c:	in     eax,0x58
  40821e:	xor    eax,0x1e134713
  408223:	out    dx,al
  408224:	leave  
  408225:	xor    DWORD PTR [edx+edi*2],esi
  408228:	or     al,BYTE PTR gs:[ecx-0x29]
  40822c:	push   ebx
  40822d:	sar    dl,1
  40822f:	out    dx,al
  408230:	cmp    dl,BYTE PTR [ecx+0x28]
  408233:	outs   dx,DWORD PTR ds:[esi]
  408234:	jmp    0xb39f:0x1a7e0b26
  40823b:	adc    BYTE PTR [edi-0x60],0xb4
  40823f:	jbe    0x40820d
  408241:	lods   eax,DWORD PTR ds:[esi]
  408242:	iret   
  408243:	jo     0x408275
  408245:	and    DWORD PTR [ebx+0x749f1ac7],edi
  40824b:	gs mov edi,0xa1ad9097
  408251:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  408253:	xchg   DWORD PTR [ecx+0x54047070],ebp
  408259:	pop    edi
  40825a:	mov    al,0xc7
  40825c:	adc    DWORD PTR [ecx-0x7d361eab],edx
  408262:	xor    BYTE PTR [esi+0x34f0d859],ch
  408268:	test   al,0x1a
  40826a:	ret    
  40826b:	inc    ecx
  40826c:	pop    ds
  40826d:	sub    esi,esi
  40826f:	mov    bl,0xd3
  408271:	mov    ebp,0xed8e3c82
  408276:	shl    BYTE PTR [eax+0x27],0x6c
  40827a:	xor    DWORD PTR [edi-0xd],0xffffffd0
  40827e:	scas   eax,DWORD PTR es:[edi]
  40827f:	mov    esp,0xe37b703b
  408284:	adc    dl,cl
  408286:	sbb    BYTE PTR [ecx],ah
  408288:	or     DWORD PTR [edi],ebp
  40828a:	xor    ah,dl
  40828c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40828d:	dec    ebx
  40828e:	rol    ebx,cl
  408290:	inc    eax
  408291:	push   ss
  408292:	popa   
  408293:	or     eax,0xaa70b408
  408298:	jmp    0x4082a5
  40829a:	and    al,0x31
  40829c:	inc    eax
  40829d:	mov    ah,0x99
  40829f:	inc    eax
  4082a0:	xchg   esp,eax
  4082a1:	cli    
  4082a2:	mov    al,ds:0xf40030b
  4082a7:	mov    ds:0xc27b118a,eax
  4082ac:	pusha  
  4082ad:	jb     0x408282
  4082af:	cmp    eax,0x61112936
  4082b4:	jae    0x408247
  4082b6:	out    dx,al
  4082b7:	inc    esi
  4082b8:	in     al,0xc2
  4082ba:	fimul  WORD PTR [edi+0x758bd803]
  4082c0:	les    ebp,FWORD PTR [ecx+0x5c210f03]
  4082c6:	xchg   ebp,eax
  4082c7:	add    esi,DWORD PTR [edx+0x65695e86]
  4082cd:	cmp    esp,DWORD PTR [eax-0xb]
  4082d0:	push   esp
  4082d1:	dec    esi
  4082d2:	dec    ebp
  4082d3:	lods   al,BYTE PTR ds:[esi]
  4082d4:	pop    ecx
  4082d5:	dec    ecx
  4082d6:	cld    
  4082d7:	sub    eax,0xd4363aeb
  4082dc:	cmp    edi,DWORD PTR [ebx-0x5a]
  4082df:	add    dh,BYTE PTR [ecx]
  4082e1:	retf   
  4082e2:	mov    bh,0x34
  4082e4:	in     eax,dx
  4082e5:	(bad)  
  4082e6:	shl    BYTE PTR [eax-0x3a],cl
  4082e9:	shr    BYTE PTR [esi+0x4d],1
  4082ec:	fimul  DWORD PTR [edx]
  4082ee:	and    DWORD PTR [edx+eax*2-0x2a],edx
  4082f2:	mov    bl,0x44
  4082f4:	add    cx,si
  4082f7:	sub    BYTE PTR [edx],bh
  4082f9:	jno    0x4082a5
  4082fb:	add    DWORD PTR [ecx-0x2a],edx
  4082fe:	les    edi,FWORD PTR [esi]
  408300:	retf   
  408301:	stos   DWORD PTR es:[edi],eax
  408302:	not    BYTE PTR [ebx-0x7539d99e]
  408308:	sahf   
  408309:	jg     0x4082eb
  40830b:	icebp  
  40830c:	xchg   ecx,eax
  40830d:	pop    edi
  40830e:	mov    ebx,0xe9ce0449
  408313:	leave  
  408314:	fnstenv [ebx]
  408316:	push   ecx
  408317:	xchg   BYTE PTR [edx+0x21],bh
  40831a:	sbb    eax,0xbcfec105
  40831f:	or     eax,0xf4becd29
  408324:	call   0xd81c:0x2be55d29
  40832b:	sbb    ch,dl
  40832d:	cmp    BYTE PTR [edi-0x5f],bl
  408330:	dec    ecx
  408331:	mov    ebx,0xdfb205bb
  408336:	inc    esp
  408337:	pop    ecx
  408338:	int3   
  408339:	push   ss
  40833a:	fbld   TBYTE PTR [edi-0x74]
  40833d:	add    BYTE PTR [eax+0x2c3735a8],dh
  408343:	sub    edx,DWORD PTR [esi]
  408345:	sahf   
  408346:	or     edx,DWORD PTR [eax+0x6]
  408349:	push   es
  40834a:	pop    es
  40834b:	jg     0x40834f
  40834d:	mov    WORD PTR [ebx],?
  40834f:	mov    bh,0x38
  408351:	stos   BYTE PTR es:[edi],al
  408352:	push   0x26ffa5ed
  408357:	retf   
  408358:	sbb    DWORD PTR [esi+0x29],edx
  40835b:	(bad)  
  40835c:	int3   
  40835d:	pop    esi
  40835e:	mov    dl,0x8c
  408360:	jnp    0x40832d
  408362:	(bad)  
  408363:	les    ebx,FWORD PTR [ecx-0x22]
  408366:	mov    esi,0xffc78d6b
  40836b:	xor    al,0xe7
  40836d:	lea    esi,[eax+0x6d]
  408370:	cmc    
  408371:	mov    BYTE PTR ds:0x1d87452b,al
  408377:	popa   
  408378:	test   DWORD PTR [ecx],ebp
  40837a:	push   esp
  40837b:	sub    ch,BYTE PTR [ebx]
  40837d:	pop    es
  40837e:	test   bl,bh
  408380:	xlat   BYTE PTR ds:[ebx]
  408381:	jle    0x408319
  408383:	xchg   esp,eax
  408384:	xor    esi,DWORD PTR [eax]
  408386:	sbb    dl,BYTE PTR [eax+0x36]
  408389:	aad    0xf2
  40838b:	sbb    eax,0x323afefb
  408390:	xor    al,0x87
  408392:	ud0    esi,esi
  408395:	ret    0x8eee
  408398:	jmp    0x7e95:0xfe3b19b1
  40839f:	xchg   ecx,eax
  4083a0:	cmp    eax,eax
  4083a2:	shr    DWORD PTR ss:[eax+ebx*1+0x50eae014],0x45
  4083ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083ac:	std    
  4083ad:	push   ebp
  4083ae:	jae    0x408363
  4083b0:	push   ecx
  4083b1:	dec    ecx
  4083b2:	loop   0x4083d7
  4083b4:	mov    ?,WORD PTR [edi+0x7f]
  4083b7:	cdq    
  4083b8:	aaa    
  4083b9:	jne    0x40835a
  4083bb:	dec    esi
  4083bc:	inc    esi
  4083bd:	clc    
  4083be:	cwde   
  4083bf:	cmp    ebx,ebp
  4083c1:	and    esi,DWORD PTR [edi+0x72bc2370]
  4083c7:	push   esp
  4083c8:	mov    bl,0x76
  4083ca:	and    BYTE PTR ds:0xebdc3846,bl
  4083d0:	xchg   DWORD PTR [eax],edi
  4083d2:	inc    esp
  4083d3:	ja     0x40842b
  4083d5:	sar    DWORD PTR [edx+0x5b],1
  4083d8:	les    esp,FWORD PTR [eiz*1+0x2498795d]
  4083df:	iret   
  4083e0:	jp     0x408452
  4083e2:	xchg   esi,eax
  4083e3:	js     0x408437
  4083e5:	dec    ebx
  4083e6:	ss in  eax,dx
  4083e8:	pop    ebx
  4083e9:	jecxz  0x4083a0
  4083eb:	sbb    al,0xea
  4083ed:	mov    ebp,0xfca79f11
  4083f2:	in     al,0xdb
  4083f4:	inc    edx
  4083f5:	cli    
  4083f6:	(bad)  
  4083f7:	pop    ebp
  4083f8:	adc    dl,al
  4083fa:	test   BYTE PTR [edi],ah
  4083fc:	pop    eax
  4083fd:	and    ebp,ebx
  4083ff:	mov    al,BYTE PTR [esi]
  408401:	jo     0x40839e
  408403:	sahf   
  408404:	push   es
  408405:	mov    dh,0x27
  408407:	pop    es
  408408:	cmp    bl,al
  40840a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40840b:	pop    ebp
  40840c:	ins    DWORD PTR es:[edi],dx
  40840d:	fist   DWORD PTR [edx-0x1c]
  408410:	pop    edx
  408411:	aam    0x27
  408413:	pop    edi
  408415:	cwde   
  408416:	out    0xe8,eax
  408418:	mov    ebx,0xf5db8c52
  40841d:	dec    esp
  40841e:	retf   0x7206
  408421:	cmp    DWORD PTR [edx],edi
  408423:	cmp    eax,0x25b48165
  408428:	xor    eax,0x7dfb2b78
  40842d:	(bad)  
  40842e:	sub    al,0x2b
  408430:	aas    
  408431:	pop    ecx
  408432:	test   BYTE PTR [esi+0xe],bl
  408435:	mov    ebp,0xe54e5dc7
  40843a:	imul   eax
  40843c:	mov    eax,ds:0x8688faff
  408441:	sub    bh,BYTE PTR [ebx+0x3ad0943a]
  408447:	fidivr WORD PTR [ecx]
  408449:	lods   al,BYTE PTR ds:[esi]
  40844a:	add    DWORD PTR ds:0xdb66d635,0xffffffd8
  408451:	lock mov eax,0x5841ac78
  408457:	mov    ds,WORD PTR [edi]
  408459:	iret   
  40845a:	lahf   
  40845b:	mov    DWORD PTR [eax+0x55],ebp
  40845e:	mov    ebp,0xfb7346d2
  408463:	xlat   BYTE PTR ds:[ebx]
  408464:	loopne 0x408413
  408466:	adc    bh,BYTE PTR [ecx-0x4d]
  408469:	mov    cl,al
  40846b:	mov    esp,DWORD PTR [ebx-0x48]
  40846e:	xchg   edi,eax
  40846f:	cmc    
  408470:	mov    bl,0x92
  408472:	xor    ah,BYTE PTR [edx-0x3b41bb3c]
  408478:	hlt    
  408479:	scas   eax,DWORD PTR es:[edi]
  40847a:	fldenv [eax+0x7b1f6d93]
  408480:	sbb    dl,BYTE PTR [edx]
  408482:	loopne 0x4084bb
  408484:	test   BYTE PTR ds:0x294803ff,cl
  40848a:	mov    esi,0x3fba8300
  40848f:	mov    eax,ds:0x8285b41e
  408494:	mov    ecx,0x43d09665
  408499:	sar    BYTE PTR [edi-0x44],cl
  40849c:	call   0xf5b0d1f5
  4084a1:	mov    esp,0xfb11bd35
  4084a6:	icebp  
  4084a7:	add    DWORD PTR [edx-0x45],ebx
  4084aa:	dec    edx
  4084ab:	retf   0xf74d
  4084ae:	std    
  4084af:	xor    al,0xa6
  4084b1:	cwde   
  4084b2:	jmp    0x5e77:0xa1555332
  4084b9:	or     al,0x68
  4084bb:	jmp    0x477217fd
  4084c0:	jo     0x4084f3
  4084c2:	mov    ch,0x7b
  4084c4:	aad    0x8
  4084c6:	inc    esp
  4084c7:	inc    ebx
  4084c8:	jecxz  0x4084b5
  4084ca:	mov    dh,0x85
  4084cc:	ret    0x1f8c
  4084cf:	xchg   esi,eax
  4084d0:	or     eax,DWORD PTR [ebx+0x58e5f8ac]
  4084d6:	aaa    
  4084d7:	iret   
  4084d8:	sbb    DWORD PTR [edx-0x22],esp
  4084db:	pop    eax
  4084dc:	xchg   edi,eax
  4084dd:	leave  
  4084de:	nop
  4084df:	jae    0x4084a7
  4084e1:	and    al,0x79
  4084e3:	dec    esp
  4084e4:	lods   eax,DWORD PTR ds:[esi]
  4084e5:	dec    esp
  4084e6:	aam    0x24
  4084e8:	push   ebp
  4084e9:	jbe    0x40851e
  4084eb:	leave  
  4084ec:	test   dl,ch
  4084ee:	jae    0x408543
  4084f0:	mov    edx,0x31d45d47
  4084f5:	test   eax,0xb2f61fc7
  4084fa:	icebp  
  4084fb:	adc    al,0xae
  4084fd:	scas   al,BYTE PTR es:[edi]
  4084fe:	mov    cl,0x19
  408500:	std    
  408501:	mov    ebx,0x2d5f97b1
  408506:	dec    ebx
  408507:	sbb    al,0x1e
  408509:	test   eax,0xbf000116
  40850e:	(bad)  
  40850f:	xchg   ebx,eax
  408510:	mov    dl,BYTE PTR [esi+0x6027fd3f]
  408516:	adc    eax,eax
  408518:	xchg   edi,eax
  408519:	aam    0x11
  40851b:	in     eax,0x79
  40851d:	ret    0xefbb
  408520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408521:	and    al,0xec
  408523:	test   DWORD PTR [edi-0x16],eax
  408526:	std    
  408527:	push   ebp
  408528:	sub    DWORD PTR ds:0xdef7fb77,edx
  40852e:	enter  0x2e49,0x66
  408532:	scas   eax,DWORD PTR es:[edi]
  408533:	xor    BYTE PTR [ebx-0x459da94a],ch
  408539:	fwait
  40853a:	int    0xd5
  40853c:	(bad)  
  40853d:	cs mov bl,0xc6
  408540:	push   0x2d2e938e
  408545:	ror    BYTE PTR [edx+0x232e4f22],1
  40854b:	scas   al,BYTE PTR es:[edi]
  40854c:	sbb    BYTE PTR [edx],0xd9
  40854f:	or     al,0xa5
  408551:	or     ecx,DWORD PTR [edx+0x5]
  408554:	std    
  408555:	jl     0x4084fa
  408557:	adc    eax,0x532e499f
  40855c:	add    edi,DWORD PTR [ebx-0x1b]
  40855f:	aad    0xc8
  408561:	cmp    edx,DWORD PTR fs:[edx]
  408564:	test   BYTE PTR [eax],cl
  408566:	push   esi
  408567:	shl    ch,1
  408569:	push   edi
  40856a:	xor    ch,BYTE PTR [ebx+ecx*2]
  40856d:	mov    edx,0xe8857d25
  408572:	ds inc ecx
  408574:	stos   BYTE PTR es:[edi],al
  408575:	xchg   ebx,eax
  408576:	in     al,0xae
  408578:	cwde   
  408579:	adc    al,0x7c
  40857b:	mov    al,0x41
  40857d:	mov    ebx,0x761d91c9
  408582:	add    BYTE PTR [esi+0x49e56fe7],bl
  408588:	outs   dx,DWORD PTR ds:[esi]
  408589:	js     0x40850b
  40858b:	ins    BYTE PTR es:[edi],dx
  40858c:	fsubr  QWORD PTR [ebx]
  40858e:	pop    es
  40858f:	imul   eax,DWORD PTR [ecx+0x4e],0xffffffde
  408593:	gs pusha 
  408595:	sbb    bl,cl
  408597:	retf   
  408598:	call   0x5ec9:0xf2fba92e
  40859f:	cmp    esp,esi
  4085a1:	hlt    
  4085a2:	(bad)  
  4085a3:	cmp    bl,cl
  4085a5:	inc    esi
  4085a6:	mov    ebp,0x289480c
  4085ab:	mov    BYTE PTR [ecx],al
  4085ad:	adc    eax,0xc3f46999
  4085b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b3:	dec    eax
  4085b4:	inc    edi
  4085b5:	inc    edx
  4085b6:	test   BYTE PTR [edx+0x3f],al
  4085b9:	sub    al,0x53
  4085bb:	mov    al,0xa5
  4085bd:	push   cs
  4085be:	xchg   edx,eax
  4085bf:	xchg   ebp,eax
  4085c0:	sub    al,al
  4085c2:	pop    es
  4085c3:	pop    edi
  4085c4:	es jmp 0xa296:0xb16c53c0
  4085cc:	xor    DWORD PTR [ebp-0x63a7f7ad],ebx
  4085d2:	or     dh,BYTE PTR [ecx-0xb]
  4085d5:	pop    ebp
  4085d6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4085d8:	sbb    DWORD PTR [edi-0x51],ebp
  4085db:	sti    
  4085dc:	std    
  4085dd:	loopne 0x4085d5
  4085df:	dec    ebx
  4085e0:	mov    bh,0x80
  4085e2:	icebp  
  4085e3:	xchg   ebx,eax
  4085e4:	xchg   ebp,eax
  4085e5:	sbb    al,0x13
  4085e7:	sub    bh,al
  4085e9:	daa    
  4085ea:	mov    dl,0x51
  4085ec:	dec    ebp
  4085ed:	sub    edi,DWORD PTR [edx]
  4085ef:	out    dx,al
  4085f0:	loopne 0x4085b2
  4085f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085f3:	xchg   ecx,eax
  4085f4:	cmp    al,0x8f
  4085f6:	mov    dh,0xbd
  4085f8:	test   BYTE PTR [edx+0x6aaa2181],ah
  4085fe:	inc    ebx
  4085ff:	sub    eax,0xb70edc27
  408604:	dec    ebx
  408605:	inc    edx
  408606:	test   DWORD PTR ds:0x94452fab,ebx
  40860c:	cmp    bl,BYTE PTR [esi+0x62]
  40860f:	jnp    0x40866f
  408611:	(bad)  
  408612:	cmc    
  408613:	sar    DWORD PTR [edx-0x6],0xcc
  408617:	mov    esi,0xe05b5821
  40861d:	xor    eax,0x6fdf016c
  408622:	retf   0x364e
  408625:	inc    esp
  408626:	test   eax,0xdf87aa84
  40862b:	add    edi,ebx
  40862d:	dec    esi
  40862e:	mov    bh,0xf1
  408630:	in     eax,0x37
  408632:	jne    0x4085e2
  408634:	aam    0x33
  408636:	inc    esp
  408637:	ins    BYTE PTR es:[edi],dx
  408638:	hlt    
  408639:	jmp    0x9f67:0xc262c21a
  408640:	jbe    0x40866e
  408642:	aad    0xf9
  408644:	(bad)  
  408645:	daa    
  408646:	jb     0x408606
  408648:	out    0x4d,al
  40864a:	mov    eax,ds:0x3bf09e41
  40864f:	bound  esi,QWORD PTR [edx+0x1ed4eaa7]
  408655:	or     al,0xd0
  408657:	in     eax,dx
  408658:	fdivr  st(0),st
  40865a:	and    ch,BYTE PTR [edx]
  40865c:	lds    edi,FWORD PTR [eax]
  40865e:	out    dx,eax
  40865f:	inc    esp
  408660:	in     al,dx
  408661:	inc    ecx
  408662:	outs   dx,BYTE PTR ds:[esi]
  408663:	test   DWORD PTR ds:0x547d59bd,ebx
  408669:	xor    eax,0xfa82e150
  40866e:	sbb    ch,BYTE PTR [ecx+0x3d60d9f0]
  408674:	jle    0x408679
  408676:	pop    esi
  408677:	loope  0x4086ca
  408679:	dec    esi
  40867a:	out    dx,eax
  40867b:	cmp    edx,DWORD PTR [ebx+0x7d5a6a7f]
  408681:	mov    bh,0x1
  408683:	sub    al,0x67
  408685:	clc    
  408686:	std    
  408687:	mov    al,0xc6
  408689:	sbb    dh,dh
  40868b:	daa    
  40868c:	ja     0x40865b
  40868e:	mov    ds:0x58755eff,al
  408693:	push   esp
  408694:	pop    ecx
  408695:	addr16 cdq 
  408697:	jmp    0x40864a
  408699:	sub    BYTE PTR [ecx+0x78],0xe1
  40869d:	xchg   ebp,eax
  40869e:	inc    ebp
  40869f:	sub    eax,0x643e70b
  4086a4:	and    eax,0x7ce1ca46
  4086a9:	aas    
  4086aa:	xchg   ebx,eax
  4086ab:	mov    eax,0xbef2df0d
  4086b0:	dec    eax
  4086b1:	inc    edx
  4086b2:	xor    DWORD PTR [esi-0x644e0bb],edi
  4086b8:	mov    WORD PTR [edx-0x10],ds
  4086bb:	or     cl,dh
  4086bd:	push   ecx
  4086be:	adc    ebx,DWORD PTR ds:0xc3b76320
  4086c4:	pop    edx
  4086c5:	iret   
  4086c6:	cmp    dl,bl
  4086c8:	loopne 0x408748
  4086ca:	inc    esp
  4086cb:	ins    DWORD PTR es:[edi],dx
  4086cc:	jg     0x4086e1
  4086ce:	dec    esi
  4086cf:	ins    DWORD PTR es:[edi],dx
  4086d0:	cmp    al,0x6f
  4086d2:	add    ebx,DWORD PTR [ebx]
  4086d4:	not    DWORD PTR [ebp+edx*8-0x6e680f5b]
  4086db:	pop    edi
  4086dc:	test   bh,ch
  4086de:	push   0x7dfefaf4
  4086e3:	shr    BYTE PTR [esi],1
  4086e5:	fcomp  st(5)
  4086e7:	dec    ebp
  4086e8:	mov    esp,0x72f886ea
  4086ed:	cs ss push ds
  4086f0:	mov    esi,0x1b323332
  4086f5:	pop    eax
  4086f6:	neg    DWORD PTR [edx]
  4086f8:	test   DWORD PTR [ebp+0x6861082e],esi
  4086fe:	div    DWORD PTR [edx+0x51]
  408701:	aas    
  408702:	pop    ds
  408703:	xchg   ecx,eax
  408704:	jb     0x40868a
  408706:	call   0x7836:0x5bcbde83
  40870d:	push   0x2ab5799a
  408712:	dec    esi
  408713:	cmc    
  408714:	ins    BYTE PTR es:[edi],dx
  408715:	pop    edi
  408716:	fldcw  WORD PTR [ecx]
  408718:	ja     0x4086b1
  40871a:	enter  0xd485,0xfc
  40871e:	out    dx,al
  40871f:	sbb    eax,0x64fe7773
  408724:	les    esi,FWORD PTR [edi+0x7e5e7bbc]
  40872a:	jge    0x408715
  40872c:	mov    bh,0x5d
  40872e:	mov    edi,0xbe5d92b9
  408733:	mov    WORD PTR [esi+0x77],?
  408736:	out    dx,al
  408737:	in     al,0xfd
  408739:	enter  0x56c,0x62
  40873d:	std    
  40873e:	pop    ds
  40873f:	mov    cl,BYTE PTR [eax-0x7338c896]
  408745:	xchg   ecx,eax
  408746:	repz (bad) 
  408748:	lock sbb edi,DWORD PTR [eax+esi*2]
  40874c:	imul   edi,DWORD PTR [edx+0x78],0x19c11d48
  408753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408754:	sub    DWORD PTR [edi+0x7fc1ac90],ecx
  40875a:	dec    ebp
  40875b:	mov    ss,ecx
  40875d:	mov    eax,0xd4da25e0
  408762:	stos   DWORD PTR es:[edi],eax
  408763:	xchg   esi,eax
  408764:	adc    BYTE PTR [esp+ebx*4-0x229bf531],cl
  40876b:	popa   
  40876c:	pusha  
  40876d:	add    ebp,ebx
  40876f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408770:	sbb    ebx,DWORD PTR [ecx+esi*8-0x9]
  408774:	outs   dx,BYTE PTR ds:[esi]
  408775:	ficomp DWORD PTR [edx+0x3a]
  408778:	fidivr DWORD PTR [edi-0x531eae65]
  40877e:	sub    al,0xe5
  408780:	js     0x40878d
  408782:	std    
  408783:	pop    ebx
  408784:	cs push ecx
  408786:	imul   eax,esi,0xffffffe5
  408789:	(bad)  [ecx-0x9949d27]
  40878f:	dec    edx
  408790:	dec    ebx
  408791:	fist   DWORD PTR [eax]
  408793:	outs   dx,DWORD PTR ds:[esi]
  408794:	fmul   DWORD PTR [eax-0x3c]
  408797:	inc    eax
  408798:	add    BYTE PTR [ebp+eiz*4-0x70],dh
  40879c:	push   0x15
  40879e:	popa   
  40879f:	mov    edi,DWORD PTR [eax-0x9]
  4087a2:	sub    BYTE PTR [edi-0x4943306e],0x8a
  4087a9:	scas   al,BYTE PTR es:[edi]
  4087aa:	xchg   esp,eax
  4087ab:	ss inc esp
  4087ad:	or     DWORD PTR [eax+eiz*2],ecx
  4087b0:	mov    bl,0xa0
  4087b2:	fadd   DWORD PTR [ebx-0x1786541e]
  4087b8:	dec    esi
  4087b9:	or     DWORD PTR [eax+esi*2-0x39],edi
  4087bd:	push   es
  4087be:	or     ah,dh
  4087c0:	rcl    BYTE PTR [ebp+0x1c0f2b02],cl
  4087c6:	jle    0x408798
  4087c8:	cli    
  4087c9:	(bad)
  4087cc:	or     edx,ebx
  4087ce:	pop    eax
  4087cf:	aas    
  4087d0:	push   0xffffffb1
  4087d2:	stc    
  4087d3:	mov    dh,0x37
  4087d5:	mov    al,0x6a
  4087d7:	and    DWORD PTR [esi+0x63],0xb
  4087db:	test   al,0x8e
  4087dd:	or     DWORD PTR [edx],eax
  4087df:	fucomi st,st(1)
  4087e1:	je     0x4087f0
  4087e3:	and    ah,BYTE PTR es:[esi+0x1c]
  4087e7:	cmp    ah,ch
  4087e9:	sti    
  4087ea:	(bad)  
  4087eb:	es cdq 
  4087ed:	js     0x408861
  4087ef:	and    eax,0xd5888fdb
  4087f4:	ins    BYTE PTR es:[edi],dx
  4087f5:	stos   BYTE PTR es:[edi],al
  4087f6:	retf   
  4087f7:	rcr    BYTE PTR [ecx],cl
  4087f9:	ins    DWORD PTR es:[edi],dx
  4087fa:	and    eax,0x5228c224
  4087ff:	clc    
  408800:	dec    ecx
  408801:	cmp    DWORD PTR [esi+0x59d10af9],ecx
  408807:	dec    ebp
  408808:	adc    esp,DWORD PTR [eax]
  40880a:	out    dx,al
  40880b:	icebp  
  40880c:	pop    bp
  40880e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40880f:	xchg   sp,ax
  408811:	xchg   esp,eax
  408812:	aas    
  408813:	loop   0x4087b5
  408815:	dec    edi
  408816:	dec    edx
  408817:	jae    0x40884b
  408819:	jno    0x4087c0
  40881b:	clc    
  40881c:	ret    0xa646
  40881f:	in     eax,0x69
  408821:	lods   eax,DWORD PTR ds:[esi]
  408822:	inc    esp
  408823:	jmp    0x25b3e766
  408828:	lods   eax,DWORD PTR ds:[esi]
  408829:	inc    ebp
  40882a:	jo     0x408840
  40882c:	(bad)  
  40882d:	out    0xf6,eax
  40882f:	cmc    
  408830:	inc    eax
  408831:	sub    BYTE PTR [eax+0x10fc96fe],ch
  408837:	in     al,dx
  408838:	ins    DWORD PTR es:[edi],dx
  408839:	ins    DWORD PTR es:[edi],dx
  40883a:	or     DWORD PTR [esi-0x2a756cae],edx
  408840:	cmp    esp,DWORD PTR [ebx+0xe]
  408843:	pop    edx
  408844:	cmp    edx,DWORD PTR [ecx+0x5aecf91c]
  40884a:	push   0x3e533790
  40884f:	fcom   QWORD PTR [esi]
  408851:	dec    eax
  408852:	popf   
  408853:	xchg   esi,eax
  408854:	in     al,dx
  408855:	mov    edx,0x43666110
  40885a:	rol    DWORD PTR [ecx+0x6e70a9d5],0xc7
  408861:	sub    al,ch
  408863:	repz fcmovnbe st,st(6)
  408866:	pushf  
  408867:	clc    
  408868:	in     eax,0x6a
  40886a:	adc    dl,0x69
  40886d:	sahf   
  40886e:	xor    DWORD PTR [esi+0x18],ebp
  408871:	or     al,0x28
  408873:	or     al,0x1a
  408875:	or     eax,0xa9786a10
  40887a:	mov    eax,0x8c2b58e5
  40887f:	dec    ebp
  408880:	(bad)  
  408881:	aaa    
  408882:	repz pop ds
  408884:	fild   WORD PTR [ecx]
  408886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408887:	icebp  
  408888:	sub    DWORD PTR [edi-0x13824632],0xffffffc0
  40888f:	popa   
  408890:	xor    al,0x94
  408892:	inc    edx
  408893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408894:	imul   ebx,DWORD PTR [edx-0x38],0xffffffe8
  408898:	jmp    0xcdb8:0x638cea22
  40889f:	adc    eax,0xce705305
  4088a4:	cmp    al,0x22
  4088a6:	adc    al,0xfb
  4088a8:	mov    ah,0x66
  4088aa:	(bad)  
  4088ab:	pusha  
  4088ac:	cmp    ecx,esp
  4088ae:	in     al,dx
  4088af:	in     eax,dx
  4088b0:	test   eax,0x4c9aedd7
  4088b5:	add    eax,0x2a0b396f
  4088ba:	adc    eax,0xf10864bf
  4088bf:	hlt    
  4088c0:	inc    edx
  4088c1:	pop    eax
  4088c2:	(bad)  
  4088c3:	out    0x9f,eax
  4088c5:	out    dx,al
  4088c6:	stos   DWORD PTR es:[edi],eax
  4088c7:	and    ah,0xd9
  4088ca:	pop    ebp
  4088cb:	(bad)  [eax+ebx*4-0x298a77f9]
  4088d2:	mov    eax,DWORD PTR [eax-0x48]
  4088d5:	fwait
  4088d6:	call   FWORD PTR [ecx]
  4088d8:	stc    
  4088d9:	fwait
  4088da:	aaa    
  4088db:	je     0x408952
  4088dd:	add    DWORD PTR [esi],ebx
  4088df:	mov    eax,DWORD PTR [ebx-0x3d]
  4088e2:	mov    ecx,0xfdb259b3
  4088e7:	pop    esi
  4088e8:	mov    dl,dh
  4088ea:	adc    BYTE PTR [edx+0x3977696b],cl
  4088f0:	mov    dh,BYTE PTR [edi]
  4088f2:	add    al,0x11
  4088f4:	fmul   QWORD PTR [edx-0x40]
  4088f7:	ds add al,0xe3
  4088fa:	sub    eax,0xfab013f9
  4088ff:	out    dx,al
  408900:	addr16 aad 0xd8
  408903:	mov    esi,0xd5eb5de5
  408908:	cli    
  408909:	mov    bl,0x5a
  40890b:	ins    DWORD PTR es:[edi],dx
  40890c:	sub    dh,al
  40890e:	outs   dx,DWORD PTR ds:[esi]
  40890f:	hlt    
  408910:	xor    bl,ah
  408912:	call   0xee6440d4
  408917:	aas    
  408918:	test   al,0x99
  40891a:	lea    ebp,[ebx]
  40891c:	xor    BYTE PTR [esi-0x583f6c8b],0x7f
  408923:	add    eax,0xe550c5d3
  408928:	adc    BYTE PTR [ebx+ecx*1-0x47],bl
  40892c:	dec    edx
  40892d:	test   DWORD PTR [esi-0x26],ebx
  408930:	cmp    eax,0xcf45c4a9
  408935:	push   ds
  408936:	mov    al,0x1d
  408938:	icebp  
  408939:	div    BYTE PTR [eax-0xd]
  40893c:	retf   0xa4c5
  40893f:	test   al,0xc7
  408941:	pusha  
  408942:	dec    eax
  408943:	push   ebp
  408944:	dec    edi
  408945:	outs   dx,DWORD PTR ds:[esi]
  408946:	pop    ebx
  408947:	sbb    cl,BYTE PTR [ebp-0x1868422]
  40894d:	fwait
  40894e:	pop    ebx
  40894f:	loop   0x4088f2
  408951:	mov    eax,ds:0xea079da3
  408956:	dec    edx
  408957:	and    edi,DWORD PTR [edi]
  408959:	out    0x36,al
  40895b:	push   esp
  40895c:	mov    esi,esp
  40895e:	stc    
  40895f:	(bad)  
  408960:	ror    ebp,cl
  408962:	mov    cl,0x9f
  408964:	cmp    dl,bh
  408966:	push   es
  408967:	adc    al,0xf3
  408969:	pop    ebp
  40896a:	or     ch,BYTE PTR [ecx+0x67]
  40896d:	or     BYTE PTR [ecx+0x4c],al
  408970:	mov    edx,0x37caee24
  408975:	(bad)  
  408976:	push   edi
  408977:	pusha  
  408978:	lock adc DWORD PTR [edi],0x6b
  40897c:	sbb    BYTE PTR [edi],0x72
  40897f:	add    al,bh
  408981:	out    0xa7,eax
  408983:	sahf   
  408984:	bnd ret 0xc225
  408988:	mov    ch,dh
  40898a:	sar    ebp,0xc2
  40898d:	jmp    0x86744221
  408992:	adc    ebx,esi
  408994:	addr16 out dx,al
  408996:	push   es
  408997:	ins    BYTE PTR es:[edi],dx
  408998:	hlt    
  408999:	mov    ?,WORD PTR [ecx-0x10d2b1e3]
  40899f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089a0:	mov    dh,0x6d
  4089a2:	xchg   DWORD PTR [edx-0x73],ebx
  4089a5:	out    dx,al
  4089a6:	sbb    al,0x46
  4089a8:	mov    ah,0x7c
  4089aa:	xlat   BYTE PTR ds:[ebx]
  4089ab:	test   eax,eax
  4089ad:	pop    edx
  4089ae:	mov    edi,0xa3e76316
  4089b3:	adc    esp,DWORD PTR [eax+0x44ce6419]
  4089b9:	fist   DWORD PTR [edx]
  4089bb:	mov    ds:0xa82d6f54,eax
  4089c0:	jmp    FWORD PTR [ebx+ebx*2+0x3c]
  4089c4:	daa    
  4089c5:	out    0xa6,eax
  4089c7:	cmp    eax,0x8712ea00
  4089cc:	pop    es
  4089cd:	push   DWORD PTR [ebx+0x75]
  4089d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d1:	cmc    
  4089d2:	xchg   ebp,eax
  4089d3:	add    ah,ah
  4089d5:	imul   BYTE PTR [esi]
  4089d7:	mov    esi,0xe1d04c0d
  4089dc:	push   0x5f6c88df
  4089e1:	scas   eax,DWORD PTR es:[edi]
  4089e2:	cwde   
  4089e3:	jnp    0x40898d
  4089e5:	mov    ebp,0x4cd226c3
  4089ea:	sti    
  4089eb:	or     edi,DWORD PTR [eax+0x4cf7ff66]
  4089f1:	aaa    
  4089f2:	jmp    0xb0e9:0xae3e8e46
  4089f9:	shl    DWORD PTR [edx+0xd],0x77
  4089fd:	cwde   
  4089fe:	mov    dl,0x77
  408a00:	sub    BYTE PTR [edx],bh
  408a02:	test   BYTE PTR [edx+0x76624c8],dh
  408a08:	(bad)  
  408a0a:	shl    DWORD PTR [esi-0x30],0x7
  408a0e:	in     eax,0x60
  408a10:	push   ds
  408a11:	adc    edi,DWORD PTR [ecx+0x4b]
  408a14:	sub    al,0x2e
  408a16:	inc    ebx
  408a17:	adc    BYTE PTR [eax-0x1448683e],cl
  408a1d:	je     0x4089b7
  408a1f:	fistp  WORD PTR [ebx-0x32]
  408a22:	add    BYTE PTR [eax-0x7b],dl
  408a25:	cwde   
  408a26:	mov    ebp,0xbfa9f292
  408a2b:	in     al,0xf0
  408a2d:	mov    edi,0x7b37a900
  408a32:	sbb    al,0x8a
  408a34:	mov    ds:0x98cf50b5,eax
  408a39:	jmp    0x3756:0x2f6a0c1e
  408a40:	xchg   edx,eax
  408a41:	cmp    bh,BYTE PTR [esi]
  408a43:	xor    edx,edx
  408a45:	push   cs
  408a46:	pop    ebx
  408a47:	and    edx,DWORD PTR [edx+0x1c5fd9a1]
  408a4d:	out    0xde,al
  408a4f:	test   BYTE PTR [edx-0x6eb315d2],0x79
  408a56:	das    
  408a57:	jp     0x408ace
  408a59:	int    0xbb
  408a5b:	jnp    0x408a3b
  408a5d:	and    al,0x6d
  408a5f:	outs   dx,DWORD PTR ds:[esi]
  408a60:	push   eax
  408a61:	inc    ebx
  408a62:	xchg   BYTE PTR [ebx+0x57],cl
  408a65:	ficom  DWORD PTR [edi+ebx*2+0x20070d44]
  408a6c:	mov    dh,0x52
  408a6e:	addr16 mov dh,0xe8
  408a71:	dec    ebp
  408a72:	lock cmp eax,0x27e4e79c
  408a78:	sbb    al,0x61
  408a7a:	pushf  
  408a7b:	mov    dl,al
  408a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a7e:	add    DWORD PTR [edx],esp
  408a80:	push   ebx
  408a81:	js     0x408a0f
  408a83:	sub    al,0xd
  408a85:	fs pop ecx
  408a87:	xor    eax,0xcd6bd0f3
  408a8c:	jb     0x408a28
  408a8e:	mov    ah,0x54
  408a90:	cmp    ecx,DWORD PTR [ecx]
  408a92:	scas   eax,DWORD PTR es:[edi]
  408a93:	(bad)  
  408a94:	(bad)  
  408a96:	int3   
  408a97:	or     DWORD PTR [ebp+0x70],ebx
  408a9a:	stc    
  408a9b:	push   esi
  408a9c:	fs pop edi
  408a9e:	sbb    bl,BYTE PTR [ebp+0x6d]
  408aa1:	sar    ebp,1
  408aa3:	ds test al,0xac
  408aa6:	push   ecx
  408aa7:	ss inc esi
  408aa9:	dec    ebx
  408aaa:	in     al,dx
  408aab:	push   0xffffff94
  408aad:	xchg   BYTE PTR [edx+0x60],ch
  408ab0:	dec    eax
  408ab1:	clc    
  408ab2:	push   cs
  408ab3:	sub    ah,dl
  408ab5:	xor    al,0x45
  408ab7:	pushf  
  408ab8:	cdq    
  408ab9:	int3   
  408aba:	cmp    edi,DWORD PTR [esi-0xd]
  408abd:	jle    0x408af7
  408abf:	aas    
  408ac0:	daa    
  408ac1:	adc    bl,BYTE PTR [eax-0x7974ddfb]
  408ac7:	xor    esp,ebx
  408ac9:	loope  0x408aee
  408acb:	add    eax,0xfa1b16d6
  408ad0:	pusha  
  408ad1:	pop    ss
  408ad2:	and    edi,DWORD PTR [esi+0x10c5d5c4]
  408ad8:	lahf   
  408ad9:	pop    es
  408ada:	out    0x32,eax
  408adc:	stc    
  408add:	xor    esi,DWORD PTR [eax+0x75]
  408ae0:	push   ecx
  408ae1:	xor    ebx,edi
  408ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ae4:	sub    edi,DWORD PTR [eax-0x4d]
  408ae7:	jnp    0x408b52
  408ae9:	std    
  408aea:	mov    ebx,0x34c41684
  408aef:	jnp    0x408b5b
  408af1:	and    eax,0x84036d70
  408af6:	jecxz  0x408b18
  408af8:	ret    0x4138
  408afb:	and    edi,DWORD PTR [eax]
  408afd:	das    
  408afe:	(bad)  
  408aff:	in     eax,dx
  408b00:	lds    edi,FWORD PTR [eax+0x3c]
  408b03:	test   DWORD PTR [ebx-0x42],ecx
  408b06:	in     al,0x70
  408b08:	sub    dl,ah
  408b0a:	arpl   WORD PTR [ecx+0x2d],ax
  408b0d:	dec    BYTE PTR [ebx-0x7e]
  408b10:	or     al,0x69
  408b12:	scas   al,BYTE PTR es:[edi]
  408b13:	(bad)  
  408b14:	rol    BYTE PTR [eax],1
  408b16:	popa   
  408b17:	(bad)  
  408b18:	push   ss
  408b19:	cwde   
  408b1a:	jecxz  0x408b0b
  408b1c:	cmp    bh,bh
  408b1e:	jo     0x408b79
  408b20:	push   ecx
  408b21:	test   eax,0xcee0b11e
  408b26:	push   edi
  408b27:	aaa    
  408b28:	jo     0x408af8
  408b2a:	outs   dx,DWORD PTR ds:[esi]
  408b2b:	dec    ecx
  408b2c:	call   0x377b00f0
  408b31:	add    BYTE PTR [ecx+edi*8+0x63654f47],dl
  408b38:	dec    ebx
  408b39:	xor    BYTE PTR [edi],al
  408b3b:	dec    edx
  408b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b3d:	clc    
  408b3e:	mov    WORD PTR [edx-0x60],?
  408b41:	sub    ecx,esp
  408b43:	sub    DWORD PTR [ebx+eiz*8-0x12],0xffffffe3
  408b48:	mov    bl,0x27
  408b4a:	add    ah,BYTE PTR [esi-0x40]
  408b4d:	loope  0x408b8d
  408b4f:	fiadd  DWORD PTR [ebx+edx*8-0x1867288b]
  408b56:	ss dec esi
  408b58:	mov    eax,ds:0x747ec525
  408b5d:	mov    ebp,0xc71f095c
  408b62:	inc    esp
  408b63:	or     dl,BYTE PTR [ebp-0x12b2fdd6]
  408b69:	or     al,0x8c
  408b6b:	mov    edx,0x7a03e7f5
  408b70:	les    esi,FWORD PTR [edi+0x73]
  408b73:	jecxz  0x408b3a
  408b75:	cwde   
  408b76:	or     al,BYTE PTR [edx]
  408b78:	sub    dh,bl
  408b7a:	dec    eax
  408b7b:	cmp    eax,0xda5daea7
  408b80:	(bad)
  408b83:	fcomp  DWORD PTR [edx+0x22]
  408b86:	jmp    0xb8b006d
  408b8b:	jmp    DWORD PTR [edx]
  408b8d:	inc    esp
  408b8e:	sar    DWORD PTR [ecx+0x3af44b62],1
  408b94:	inc    ebp
  408b95:	dec    ebp
  408b96:	push   ds
  408b97:	inc    DWORD PTR [ecx]
  408b99:	mov    ecx,0xb5f96ed0
  408b9e:	hlt    
  408b9f:	sbb    esi,edx
  408ba1:	dec    ecx
  408ba2:	popa   
  408ba3:	pop    edx
  408ba4:	xor    edi,DWORD PTR [esi-0x581ca7a3]
  408baa:	jmp    0x1e235fef
  408baf:	or     eax,0xfda88a00
  408bb4:	jle    0x408b52
  408bb6:	mov    dl,BYTE PTR [ecx+eax*4+0x60]
  408bba:	adc    dh,BYTE PTR [ecx]
  408bbc:	mov    dl,BYTE PTR [esi+0x5885bd89]
  408bc2:	in     eax,0xc5
  408bc4:	std    
  408bc5:	push   edi
  408bc6:	push   es
  408bc7:	cmp    BYTE PTR [ecx+0x54],0xab
  408bcb:	fisub  WORD PTR [ebp+0x3b]
  408bce:	mov    ecx,0x5168aa60
  408bd3:	retf   0x4559
  408bd6:	or     BYTE PTR [eax+0x15],al
  408bd9:	hlt    
  408bda:	je     0x408b9b
  408bdc:	inc    esp
  408bdd:	sbb    eax,0xc7e6b4e7
  408be2:	jecxz  0x408c25
  408be4:	jb     0x408b72
  408be6:	push   ebx
  408be7:	comiss xmm7,DWORD PTR [edi]
  408bea:	and    edi,DWORD PTR [ebx-0x77]
  408bed:	mov    edx,0xc634861b
  408bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf3:	cmp    al,0xbd
  408bf5:	pop    eax
  408bf6:	mov    ecx,0xf980f987
  408bfb:	pcmpgtd mm5,mm6
  408bfe:	pop    esi
  408bff:	pop    ss
  408c00:	fstp   QWORD PTR [edi+0x33]
  408c03:	pop    esp
  408c04:	jae    0x408c06
  408c06:	pop    eax
  408c07:	lds    edi,FWORD PTR ds:0x97b8a77
  408c0d:	ret    
  408c0e:	sbb    BYTE PTR [ecx+0x6548cabc],ch
  408c14:	cmp    BYTE PTR [edx+0x5a],0x40
  408c18:	int    0xca
  408c1a:	inc    ebp
  408c1b:	movhps xmm7,QWORD PTR [esi-0x3c599e7d]
  408c22:	cmp    al,0xbc
  408c24:	daa    
  408c25:	push   ebx
  408c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c27:	ror    BYTE PTR [edx+0x5],0xbf
  408c2b:	mov    eax,0x7761278c
  408c30:	mov    eax,ds:0x3a2298b9
  408c35:	aad    0x75
  408c37:	aad    0x4a
  408c39:	dec    esp
  408c3a:	and    ebx,edx
  408c3c:	cmc    
  408c3d:	inc    ecx
  408c3e:	dec    edi
  408c3f:	adc    DWORD PTR [edi+edi*8-0x72],esp
  408c43:	inc    eax
  408c44:	add    al,BYTE PTR [ecx+ecx*4]
  408c47:	sub    DWORD PTR [ecx],ecx
  408c49:	sub    esp,DWORD PTR [edi+edx*8+0x35]
  408c4d:	jl     0x408c10
  408c4f:	xchg   ecx,eax
  408c50:	mov    ah,0xcd
  408c52:	xchg   esp,eax
  408c53:	jo     0x408c80
  408c55:	(bad)  
  408c56:	lock xchg esp,eax
  408c58:	jp     0x408bfe
  408c5a:	mov    DWORD PTR [edx-0x3ea062f6],0xbba7ddb2
  408c64:	inc    esp
  408c65:	mov    ebx,?
  408c67:	icebp  
  408c68:	mov    dl,0xb9
  408c6a:	jns    0x408cb9
  408c6c:	shl    BYTE PTR [edi-0x2d],1
  408c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c70:	xor    al,0x69
  408c72:	mov    es,WORD PTR [edi+0x270f1b27]
  408c78:	pushf  
  408c79:	pusha  
  408c7a:	pop    ebp
  408c7b:	in     al,0xc5
  408c7d:	ins    BYTE PTR es:[edi],dx
  408c7e:	mov    dl,0x75
  408c80:	mov    ebx,0xf393061f
  408c85:	push   0xd2bcf1dd
  408c8a:	pop    ebx
  408c8b:	mov    al,0xfb
  408c8d:	xchg   edx,eax
  408c8e:	pop    eax
  408c8f:	rol    DWORD PTR [esi-0x7f575fb9],cl
  408c95:	es fsub st,st(4)
  408c98:	out    0x1e,al
  408c9a:	out    dx,al
  408c9b:	add    ecx,eax
  408c9d:	or     dh,ch
  408c9f:	sbb    eax,0x4af70c2f
  408ca4:	add    al,0xd
  408ca6:	rcl    BYTE PTR [ecx-0x43],1
  408ca9:	mov    DWORD PTR ds:0x27e30832,eax
  408caf:	sub    eax,0x4cf15aa2
  408cb4:	cmp    esi,DWORD PTR [eax]
  408cb6:	mov    ebx,edi
  408cb8:	xlat   BYTE PTR ds:[ebx]
  408cb9:	pusha  
  408cba:	push   0xd2f45dde
  408cbf:	lods   al,BYTE PTR ds:[esi]
  408cc0:	inc    esp
  408cc1:	adc    bh,ah
  408cc3:	cmp    ah,BYTE PTR [ebx+0xa]
  408cc6:	push   edi
  408cc7:	mov    bl,dh
  408cc9:	das    
  408cca:	gs call 0x8c3654cc
  408cd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd1:	pop    ebp
  408cd2:	hlt    
  408cd3:	out    0xb0,al
  408cd5:	jp     0x408c9b
  408cd7:	popa   
  408cd8:	push   ds
  408cd9:	sub    esp,DWORD PTR [esi+0x49907db1]
  408cdf:	cli    
  408ce0:	xlat   BYTE PTR ds:[ebx]
  408ce1:	ins    DWORD PTR es:[edi],dx
  408ce2:	sub    al,0x32
  408ce4:	dec    ebp
  408ce5:	add    ebp,DWORD PTR [esi]
  408ce7:	in     al,dx
  408ce8:	das    
  408ce9:	jno    0x408ce0
  408ceb:	adc    eax,DWORD PTR [edx+0x5797563a]
  408cf1:	adc    esi,DWORD PTR [edx-0x45]
  408cf4:	ss pop edi
  408cf6:	or     al,0x14
  408cf9:	shl    BYTE PTR [edx],0x89
  408cfc:	xchg   ebx,ebx
  408cfe:	push   0x39
  408d00:	fs enter 0x41ab,0x52
  408d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d07:	jo     0x408ccd
  408d09:	ror    DWORD PTR [ecx],1
  408d0b:	xor    DWORD PTR [ebp-0x67],0xf8409196
  408d12:	mov    dh,0xc8
  408d14:	call   0xbe58:0xe9bc837e
  408d1b:	sbb    BYTE PTR ds:0xef6aea99,dh
  408d21:	mov    fs,WORD PTR [eax+0x44]
  408d24:	xor    bl,BYTE PTR [ebx-0xdef56a7]
  408d2a:	xor    al,0x8d
  408d2c:	stos   BYTE PTR es:[edi],al
  408d2d:	shr    BYTE PTR [esi-0x36],0xdf
  408d31:	jno    0x408d66
  408d33:	imul   edi,DWORD PTR [ebx+0x32dc0376],0x8268b80a
  408d3d:	cld    
  408d3e:	adc    BYTE PTR [ebp*8+0x6ffd412e],ah
  408d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d46:	pop    ebx
  408d47:	jp     0x408d0f
  408d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d4a:	cmp    eax,0x541d86cf
  408d4f:	pop    eax
  408d50:	sub    eax,0x49fcfb38
  408d55:	sub    al,0xe6
  408d57:	addr16 jo 0x408ce7
  408d5a:	rcl    BYTE PTR [edx-0xc86f094],cl
  408d60:	mov    esp,0xa1d831d1
  408d65:	in     al,dx
  408d66:	jae    0x408d7c
  408d68:	sub    dh,BYTE PTR [eax+ecx*2-0x5c3e5568]
  408d6f:	jmp    0x8abf:0x1197176a
  408d76:	xor    DWORD PTR [edi],edx
  408d78:	dec    esi
  408d79:	xlat   BYTE PTR ds:[ebx]
  408d7a:	sbb    bl,cl
  408d7c:	cmc    
  408d7d:	ja     0x408de9
  408d7f:	fist   WORD PTR [eax-0x4d]
  408d82:	nop
  408d83:	je     0x408dd5
  408d85:	stos   BYTE PTR es:[edi],al
  408d86:	scas   al,BYTE PTR es:[edi]
  408d87:	test   eax,0x9c0c3aff
  408d8c:	ret    0x16ad
  408d8f:	jecxz  0x408da0
  408d91:	ret    0x6092
  408d94:	jmp    0x613d:0x845c5b67
  408d9b:	mov    ah,0x77
  408d9d:	add    ebp,esp
  408d9f:	sbb    DWORD PTR ss:[edx],ecx
  408da2:	or     BYTE PTR [edi+0x0],cl
  408da5:	inc    eax
  408da6:	or     eax,0xb8f75329
  408dab:	es icebp 
  408dad:	(bad)
  408db0:	mov    ecx,0xd62f01ea
  408db5:	mov    esp,DWORD PTR [edi+0x52]
  408db8:	xchg   edi,eax
  408db9:	ror    BYTE PTR [eax-0x703861c5],1
  408dbf:	mov    ebx,0xa0990fc0
  408dc4:	xchg   ebp,eax
  408dc5:	test   al,0x81
  408dc7:	pop    es
  408dc8:	mov    al,ds:0x6b2bce4c
  408dcd:	push   ss
  408dce:	inc    esp
  408dcf:	out    0x61,al
  408dd1:	push   ebx
  408dd2:	adc    BYTE PTR [ecx+0x5f00d8da],bl
  408dd8:	jp     0x408dcf
  408dda:	push   edx
  408ddb:	aaa    
  408ddc:	mov    ds:0x18cecb9c,eax
  408de1:	add    BYTE PTR [ebp+0x33],0x51
  408de5:	xor    eax,DWORD PTR [eax+0x79]
  408de8:	jbe    0x408e32
  408dea:	fucom  st(2)
  408dec:	dec    edx
  408ded:	push   ebp
  408dee:	sub    eax,0x40c53c25
  408df3:	mov    bl,0x96
  408df5:	add    eax,esp
  408df7:	lods   al,BYTE PTR ds:[esi]
  408df8:	jns    0x408e4b
  408dfa:	xchg   edx,eax
  408dfb:	push   0x20ea0622
  408e00:	xchg   edi,eax
  408e01:	mov    edx,0xc2ee848e
  408e06:	mov    bh,0x93
  408e08:	nop
  408e09:	dec    edi
  408e0a:	fsubp  st(6),st
  408e0c:	jmp    0x408e1c
  408e0e:	jno    0x408e05
  408e10:	js     0x408e79
  408e12:	jmp    0xa9a79864
  408e17:	xchg   edi,eax
  408e18:	loope  0x408e94
  408e1a:	xlat   BYTE PTR ds:[ebx]
  408e1b:	adc    al,0x54
  408e1d:	(bad)  
  408e1e:	pop    edx
  408e1f:	call   0x4661:0x22eb61c2
  408e26:	adc    al,0x9d
  408e28:	mov    edi,0xd8ebcb59
  408e2d:	(bad)  
  408e2e:	mov    bl,0x2d
  408e30:	push   ebp
  408e31:	jge    0x408db6
  408e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e34:	jns    0x408e97
  408e36:	sub    ch,BYTE PTR [esi-0x1b074200]
  408e3c:	jmp    0xe32c2a42
  408e41:	add    eax,0xaccab10e
  408e46:	mov    bl,0x17
  408e48:	gs nop
  408e4a:	xlat   BYTE PTR ds:[ebx]
  408e4b:	int3   
  408e4c:	jns    0x408e14
  408e4e:	push   es
  408e4f:	push   eax
  408e50:	push   ds
  408e51:	sbb    eax,0x4194e656
  408e56:	stos   BYTE PTR es:[edi],al
  408e57:	(bad)  
  408e58:	jmp    0x408e29
  408e5a:	cs in  eax,dx
  408e5c:	out    dx,al
  408e5d:	enter  0xf638,0xc
  408e61:	cmp    ah,dl
  408e63:	sti    
  408e64:	mov    al,dl
  408e66:	clc    
  408e67:	mov    BYTE PTR [esi+0x1a5cacd5],al
  408e6d:	jmp    0x408ee2
  408e6f:	mov    esi,0x80df7335
  408e74:	fidiv  WORD PTR [esi-0x3eb42e39]
  408e7a:	inc    edi
  408e7b:	pop    ebx
  408e7c:	cmp    ebx,DWORD PTR gs:[eax]
  408e7f:	neg    DWORD PTR [edx-0x58]
  408e82:	inc    ecx
  408e83:	xor    eax,0xa2e1261
  408e88:	and    al,0x36
  408e8a:	pop    ebp
  408e8b:	int3   
  408e8c:	fld    DWORD PTR [esi]
  408e8e:	push   esp
  408e8f:	cld    
  408e90:	xchg   esi,eax
  408e91:	outs   dx,BYTE PTR ds:[esi]
  408e92:	and    al,0x9f
  408e94:	loopne 0x408ec6
  408e96:	fcmove st,st(1)
  408e98:	popf   
  408e99:	push   0xbad58242
  408e9e:	jmp    0x80f2:0xdf4102a9
  408ea5:	xor    eax,0x251467e3
  408eaa:	xchg   ebp,eax
  408eab:	sbb    eax,0xf4a78ad9
  408eb0:	push   ebp
  408eb1:	xchg   edi,eax
  408eb2:	push   edi
  408eb3:	cmp    BYTE PTR [eax],0xc1
  408eb6:	int    0x30
  408eb8:	(bad)  
  408eb9:	mov    ?,WORD PTR [edi-0x78]
  408ebc:	cwde   
  408ebd:	es push esi
  408ebf:	jno    0x408e67
  408ec1:	cmp    al,0xb
  408ec3:	xor    al,BYTE PTR [edx-0x220e7ccc]
  408ec9:	popa   
  408eca:	sahf   
  408ecb:	add    edx,edi
  408ecd:	fsub   st(0),st
  408ecf:	out    0x97,al
  408ed1:	fcomp  DWORD PTR [ebx+0x35a50546]
  408ed7:	dec    esp
  408ed8:	xchg   edx,eax
  408ed9:	xchg   esi,eax
  408eda:	cs pushf 
  408edc:	mov    BYTE PTR [eax+0x1c230203],bh
  408ee2:	ret    
  408ee3:	pop    edx
  408ee4:	outs   dx,BYTE PTR ds:[esi]
  408ee5:	std    
  408ee6:	jp     0x408f42
  408ee8:	or     ah,BYTE PTR [esi+0x30]
  408eeb:	pop    ebp
  408eec:	andps  xmm3,XMMWORD PTR ds:0x9699ce08
  408ef3:	xchg   edx,eax
  408ef4:	in     al,dx
  408ef5:	sub    DWORD PTR [esi-0x775acb3c],edi
  408efb:	jmp    0x408ef3
  408efd:	mov    ebp,0x3b3a64d8
  408f02:	or     DWORD PTR [eax+eiz*8],esp
  408f05:	pusha  
  408f06:	(bad)  
  408f08:	outs   dx,BYTE PTR ds:[esi]
  408f09:	sub    al,0x5f
  408f0b:	(bad)
  408f0e:	push   0x62
  408f10:	mov    edi,0xc9ea7890
  408f15:	sub    al,0x1c
  408f17:	adc    ebx,eax
  408f19:	or     eax,0xd2dc87d
  408f1e:	xchg   edx,eax
  408f1f:	jbe    0x408f69
  408f21:	pop    eax
  408f22:	jp     0x408ef1
  408f24:	jae    0x408f7e
  408f26:	test   eax,0xddd90533
  408f2b:	das    
  408f2c:	shr    ah,cl
  408f2e:	hlt    
  408f2f:	mov    esp,0xf1005d95
  408f34:	(bad)  
  408f35:	imul   edi,edi,0xfb9deceb
  408f3b:	push   eax
  408f3c:	add    eax,0xed1e4dbe
  408f41:	fwait
  408f42:	dec    ebp
  408f43:	inc    edx
  408f44:	cwde   
  408f45:	jne    0x408fc1
  408f47:	addr16 cmp al,0x65
  408f4a:	hlt    
  408f4b:	cdq    
  408f4c:	jg     0x408f0e
  408f4e:	call   0x44eb:0x457109ed
  408f55:	hlt    
  408f56:	popa   
  408f57:	add    esp,DWORD PTR [edx-0x3ac61cb6]
  408f5d:	sar    ebx,cl
  408f5f:	dec    edx
  408f60:	(bad)  
  408f61:	ficom  WORD PTR [ebp-0x67]
  408f64:	in     eax,0xc7
  408f66:	cmp    BYTE PTR [edi-0x6c],dh
  408f69:	loopne 0x408f15
  408f6b:	fst    QWORD PTR [ecx+0xdeb4762]
  408f71:	sub    eax,0x6fa6d681
  408f76:	js     0x408f99
  408f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f79:	stc    
  408f7a:	hlt    
  408f7b:	push   ss
  408f7c:	sbb    BYTE PTR [edi-0x2e9547cb],ah
  408f82:	add    eax,DWORD PTR [edi+ecx*8+0x10e4903e]
  408f89:	dec    esp
  408f8a:	test   BYTE PTR [ebx-0x3aedd7eb],bh
  408f90:	js     0x408f3b
  408f92:	xchg   ecx,eax
  408f93:	sbb    ecx,DWORD PTR [edi+0x13]
  408f96:	imul   ebp,DWORD PTR [edi-0x16],0xffffff97
  408f9a:	pop    esi
  408f9b:	std    
  408f9c:	js     0x408f82
  408f9e:	rol    ecx,0xda
  408fa1:	jmp    0xaf8ef3b4
  408fa6:	test   BYTE PTR [edi],al
  408fa8:	loopne 0x408fbe
  408faa:	or     dl,ch
  408fac:	mov    bl,0xe
  408fae:	xchg   esi,eax
  408faf:	mov    esi,ebp
  408fb1:	jmp    0x4ad6:0x40102bd8
  408fb8:	xor    dh,0x8a
  408fbb:	test   al,al
  408fbd:	jb     0x408fde
  408fbf:	sbb    edi,DWORD PTR [edx]
  408fc1:	xchg   esp,eax
  408fc2:	and    DWORD PTR [edx+0x0],0x301cb7b2
  408fc9:	outs   dx,DWORD PTR ds:[esi]
  408fca:	hlt    
  408fcb:	jmp    0x1667:0x37059c6f
  408fd2:	fldcw  WORD PTR [esp+ebx*1-0x2a]
  408fd6:	sub    al,0x63
  408fd8:	add    eax,0x2e958cd6
  408fdd:	dec    esi
  408fde:	daa    
  408fdf:	push   ecx
  408fe0:	add    ecx,DWORD PTR [ecx-0x1b722326]
  408fe6:	lea    esi,[eax-0x75]
  408fe9:	sbb    ah,BYTE PTR [eax-0x343089e8]
  408fef:	out    dx,al
  408ff0:	xor    al,0x2c
  408ff2:	fist   WORD PTR [esi-0x26c52f73]
  408ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff9:	call   0x574f:0xe7d34ea1
  409000:	inc    edx
  409001:	fisttp QWORD PTR [eax+0x79]
  409004:	push   0xffffff82
  409006:	dec    esi
  409007:	adc    eax,0xc7bdbc52
  40900c:	mov    cl,0xed
  40900e:	(bad)  
  40900f:	mov    al,ds:0x23169e59
  409014:	bound  esp,QWORD PTR [edi]
  409016:	ret    0xac2c
  409019:	xor    DWORD PTR [ebx-0x5a793b4],ebp
  40901f:	out    0xa7,al
  409021:	xor    DWORD PTR [edi-0x17],0xffffffdd
  409025:	in     eax,0xd9
  409027:	add    eax,0xe7d3790d
  40902c:	stos   BYTE PTR es:[edi],al
  40902d:	stos   BYTE PTR es:[edi],al
  40902e:	xchg   ebp,eax
  40902f:	push   esi
  409030:	jge    0x40908a
  409032:	mov    ds:0x83da7360,eax
  409037:	and    BYTE PTR cs:[edx+0x7ed8865a],ch
  40903e:	lods   eax,DWORD PTR ds:[esi]
  40903f:	and    BYTE PTR [edi],dl
  409041:	push   0x8
  409043:	pop    ss
  409044:	mov    ch,0x1c
  409046:	mov    al,0x0
  409048:	stos   BYTE PTR es:[edi],al
  409049:	mov    edi,0x9553eab0
  40904e:	test   DWORD PTR [esi],ecx
  409050:	xor    cl,BYTE PTR [esi+0x5ab7b4c4]
  409056:	mov    cl,0x81
  409058:	mov    ecx,0xec616715
  40905d:	inc    ecx
  40905e:	ins    DWORD PTR es:[edi],dx
  40905f:	sahf   
  409060:	xor    BYTE PTR [ebx-0x5e57c579],dl
  409066:	jno    0x409072
  409068:	jmp    0x3677c7e4
  40906d:	pop    es
  40906e:	push   ebx
  40906f:	stc    
  409070:	jnp    0x4090a4
  409072:	xchg   edi,eax
  409073:	rcl    DWORD PTR [eax+eax*8],cl
  409076:	push   edi
  409077:	into   
  409078:	pop    edi
  409079:	cmp    DWORD PTR [ebx],esi
  40907b:	mov    DWORD PTR [ebx],eax
  40907d:	xor    esi,DWORD PTR [esi]
  40907f:	dec    edi
  409080:	jb     0x409025
  409082:	push   cs
  409083:	pop    ebx
  409084:	pop    ds
  409085:	std    
  409086:	adc    ebx,ebx
  409088:	push   esp
  409089:	push   ebp
  40908a:	push   edi
  40908b:	out    dx,al
  40908c:	sbb    eax,0x46e4cbf7
  409091:	xchg   DWORD PTR [esi],ecx
  409093:	ror    BYTE PTR [esi-0x77],1
  409096:	push   esp
  409097:	outs   dx,DWORD PTR ds:[esi]
  409098:	mov    eax,0x7d79bf42
  40909d:	rcr    BYTE PTR [ecx+edx*1-0x1c11ee66],cl
  4090a4:	mov    bh,0x21
  4090a6:	cmc    
  4090a7:	jp     0x4090dd
  4090a9:	fnstenv [edi-0x73]
  4090ac:	std    
  4090ad:	in     eax,dx
  4090ae:	outs   dx,DWORD PTR ds:[esi]
  4090af:	ins    DWORD PTR es:[edi],dx
  4090b0:	sbb    DWORD PTR [ebx+0x2aaae56d],eax
  4090b6:	xchg   ebp,eax
  4090b7:	mov    esi,ecx
  4090b9:	sbb    al,0xfb
  4090bb:	sub    DWORD PTR ds:0xb358923,edx
  4090c1:	ds test eax,0x72b7df65
  4090c7:	sbb    DWORD PTR [edi+eiz*1],edx
  4090ca:	pop    edi
  4090cb:	ins    DWORD PTR es:[edi],dx
  4090cc:	lahf   
  4090cd:	cmc    
  4090ce:	int3   
  4090cf:	push   ss
  4090d0:	(bad)  [edx+0x23c81577]
  4090d6:	xchg   edx,eax
  4090d7:	xor    DWORD PTR [edx-0x80],ebx
  4090da:	xor    BYTE PTR [eax],dh
  4090dc:	sbb    BYTE PTR ds:0xee0b4bfe,bh
  4090e2:	stos   DWORD PTR es:[edi],eax
  4090e3:	cmp    al,0x80
  4090e5:	test   al,dl
  4090e7:	das    
  4090e8:	or     BYTE PTR [eax],al
  4090ea:	icebp  
  4090eb:	(bad)  
  4090ec:	ds push ecx
  4090ee:	in     eax,dx
  4090ef:	sbb    al,0x65
  4090f1:	push   cs
  4090f2:	xchg   BYTE PTR [ebx],ah
  4090f4:	mov    BYTE PTR [edx+0x17],dh
  4090f7:	xor    eax,0xdc5df2d5
  4090fc:	adc    eax,0xb5bab0bf
  409101:	test   BYTE PTR [esi-0x2c],0xc4
  409105:	xchg   edx,eax
  409106:	pop    ebp
  409107:	cmp    BYTE PTR [esi-0x3c],al
  40910a:	in     eax,0xb5
  40910c:	repnz sbb BYTE PTR [ebx],ah
  40910f:	mov    al,ds:0xf4b23968
  409114:	(bad)  
  409117:	sahf   
  409118:	sbb    BYTE PTR [eax+0x12],dh
  40911b:	dec    DWORD PTR [ebx]
  40911d:	pop    ss
  40911e:	arpl   WORD PTR [ebx-0x72],di
  409121:	mov    eax,ds:0xbecff27c
  409126:	shl    BYTE PTR [ecx],1
  409128:	jp     0x409123
  40912a:	xchg   DWORD PTR [ebx-0x26e7fe94],eax
  409130:	ret    
  409131:	repnz mov ch,0x5a
  409134:	fwait
  409135:	mov    ah,0xbe
  409137:	lahf   
  409138:	mov    ecx,0x1fd82d4e
  40913d:	pop    edi
  40913e:	pushf  
  40913f:	imul   esp,ebx,0x421b191c
  409145:	or     eax,0x89d48a91
  40914a:	mov    dh,0x7d
  40914c:	sbb    ecx,DWORD PTR [ebx-0x3c673583]
  409152:	ss ins DWORD PTR es:[edi],dx
  409154:	(bad)  
  409155:	(bad)  ds:0xa6886227
  40915b:	leave  
  40915c:	cs push es
  40915e:	dec    eax
  40915f:	mov    ebx,0xda2b3847
  409164:	mov    bl,0x61
  409166:	cmp    ebp,DWORD PTR [ebx-0x58]
  409169:	jge    0x409180
  40916b:	jno    0x4091a5
  40916d:	sub    eax,0xb9f29c5e
  409172:	pop    ss
  409173:	jl     0x409160
  409175:	cmp    eax,0x635c4882
  40917a:	pop    edx
  40917b:	(bad)  
  40917c:	stc    
  40917d:	loop   0x409134
  40917f:	xlat   BYTE PTR ds:[ebx]
  409180:	scas   al,BYTE PTR es:[edi]
  409181:	inc    esi
  409182:	add    dl,BYTE PTR [eax-0x2fb752a8]
  409188:	and    eax,0x896b3abf
  40918d:	ss jns 0x4091a0
  409190:	sti    
  409191:	outs   dx,BYTE PTR ds:[esi]
  409192:	xor    al,0xcb
  409194:	das    
  409195:	ret    
  409196:	add    DWORD PTR [edx+0x46],eax
  409199:	aas    
  40919a:	daa    
  40919b:	jge    0x40917e
  40919d:	sar    BYTE PTR [ebp-0xf62e8d3],1
  4091a3:	dec    edx
  4091a4:	out    dx,eax
  4091a5:	sub    DWORD PTR [edx+0x2f],edi
  4091a8:	sbb    al,0x61
  4091aa:	mov    edx,0x1ca45746
  4091af:	jnp    0x409213
  4091b1:	scas   eax,DWORD PTR es:[edi]
  4091b2:	xor    ch,BYTE PTR [ebx-0xc97ad63]
  4091b8:	mov    WORD PTR ds:0x5cb74ef3,ss
  4091be:	mov    esi,0xe3152a7c
  4091c3:	in     al,dx
  4091c4:	jmp    DWORD PTR [eax-0x22]
  4091c7:	jae    0x4091ed
  4091c9:	nop/reserved BYTE PTR [ecx]
  4091cc:	cs jo  0x4091d2
  4091cf:	addr16 push 0x924986e4
  4091d5:	rcl    DWORD PTR [edi+0x70],1
  4091d8:	cmc    
  4091d9:	jns    0x40918b
  4091db:	inc    esi
  4091dc:	sti    
  4091dd:	cmp    bl,BYTE PTR [edi-0x1c53829f]
  4091e3:	add    esi,DWORD PTR [ecx-0x73e0f03b]
  4091e9:	retf   0xf40c
  4091ec:	loop   0x40919f
  4091ee:	jb     0x40922a
  4091f0:	mov    dh,0xcc
  4091f2:	mov    ds:0x6af5436e,al
  4091f7:	popa   
  4091f8:	push   ebp
  4091f9:	jmp    0x43f624cd
  4091fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ff:	pushw  0x2c
  409202:	mov    edx,0x211fc1ca
  409207:	(bad)  
  409208:	daa    
  409209:	test   al,0x69
  40920b:	outs   dx,BYTE PTR ds:[esi]
  40920c:	ja     0x409206
  40920e:	pop    ebx
  40920f:	pushf  
  409210:	xor    al,0x1a
  409212:	and    bl,BYTE PTR [ecx]
  409214:	lea    esi,[edx-0x39398a14]
  40921a:	aam    0xde
  40921c:	mov    ah,0x14
  40921e:	jo     0x409245
  409220:	dec    ebx
  409221:	sbb    eax,0x5b26b88b
  409226:	add    ecx,DWORD PTR [edi+0x1708a9d3]
  40922c:	popf   
  40922d:	pop    es
  40922e:	sub    al,0x26
  409230:	retf   
  409231:	mov    ds:0x5bda4b82,al
  409236:	cli    
  409237:	add    eax,DWORD PTR [edx+0x515c489c]
  40923d:	cmp    al,0xca
  40923f:	sbb    BYTE PTR [ebx-0x29],dl
  409242:	pop    eax
  409243:	add    DWORD PTR [edi],ebx
  409245:	icebp  
  409246:	push   edi
  409247:	push   0x7c
  409249:	cmp    ebp,DWORD PTR [edi+0x44]
  40924c:	mov    ds:0x36775531,al
  409251:	lahf   
  409252:	fs and ch,0x3d
  409256:	and    ebp,ebp
  409258:	shl    BYTE PTR [ecx-0x2b],1
  40925b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40925c:	mov    cl,0xf7
  40925e:	test   dh,bl
  409260:	and    eax,0xe2d38f11
  409265:	dec    edi
  409266:	(bad)  
  409268:	shl    bh,0xb6
  40926b:	jl     0x4092cc
  40926d:	mov    WORD PTR [ecx-0x73],cs
  409270:	iret   
  409271:	or     esp,edi
  409273:	push   edi
  409274:	jne    0x40929f
  409276:	ins    BYTE PTR es:[edi],dx
  409277:	enter  0x5dce,0x40
  40927b:	jge    0x409225
  40927d:	mov    esi,0x6086ddab
  409282:	stc    
  409283:	sbb    al,0x56
  409285:	mov    bl,0x5a
  409287:	pop    ebp
  409288:	mov    ebx,0xd332e530
  40928d:	fs sub al,0xd6
  409290:	test   DWORD PTR [ebp+0x7d],0x1f2bfc3d
  409297:	jae    0x4092ad
  409299:	xor    eax,0x5b274324
  40929e:	adc    al,0xb2
  4092a0:	(bad)  
  4092a1:	test   al,0x4c
  4092a3:	mov    al,0xd0
  4092a5:	dec    edi
  4092a6:	xor    eax,0x19144218
  4092ab:	or     edx,DWORD PTR [eax+0x71e8f9c9]
  4092b1:	adc    DWORD PTR [ecx+0x1e],ebp
  4092b4:	push   ecx
  4092b5:	cmp    bl,BYTE PTR [edi+0x23b43ebd]
  4092bb:	and    eax,0x7da98cd8
  4092c0:	push   0x35
  4092c2:	mov    ch,0xf
  4092c4:	nop
  4092c5:	push   eax
  4092c6:	mov    esi,0x8db0d380
  4092cb:	mov    ds:0x7714ad60,eax
  4092d0:	and    eax,0x8cec9ce8
  4092d5:	ret    
  4092d6:	mov    bh,BYTE PTR [ecx-0x2b]
  4092d9:	loope  0x40933e
  4092db:	(bad)  
  4092dc:	(bad)  
  4092dd:	das    
  4092de:	add    BYTE PTR [di+0x7ec4],dh
  4092e3:	and    al,BYTE PTR [eax+0x2ce8bc06]
  4092e9:	dec    edx
  4092ea:	sbb    al,0x5e
  4092ec:	jl     0x40933e
  4092ee:	les    esp,FWORD PTR [esi+0x34]
  4092f1:	sar    DWORD PTR [eax+0x756eb8cd],cl
  4092f7:	in     eax,dx
  4092f8:	shl    BYTE PTR [ebp-0x1eb1d40a],cl
  4092fe:	inc    ecx
  4092ff:	push   edi
  409300:	adc    BYTE PTR [ebp+eiz*4+0x37],bh
  409304:	inc    ebx
  409305:	(bad)  
  409306:	mov    gs:0xb70954f4,eax
  40930c:	fwait
  40930d:	imul   esi,DWORD PTR [ebp-0x22ca092b],0x51f107fd
  409317:	ins    DWORD PTR es:[edi],dx
  409318:	xchg   edx,eax
  409319:	jp     0x409309
  40931b:	xor    bh,BYTE PTR [edi]
  40931d:	push   esp
  40931e:	and    al,0x87
  409320:	mov    ah,0x5a
  409322:	sbb    al,0x5b
  409324:	mov    BYTE PTR [esi+esi*4-0x17007a44],cl
  40932b:	stc    
  40932c:	sbb    al,0x43
  40932e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40932f:	fs rcr dl,cl
  409332:	push   ebp
  409333:	mov    edx,0xa6437011
  409338:	mov    eax,edx
  40933a:	sub    dl,BYTE PTR [ebx-0x42]
  40933d:	inc    eax
  40933e:	ds jle 0x40930c
  409341:	mov    ds:0xd7cd79e2,al
  409347:	mov    ah,0x93
  409349:	call   0x7d40:0xb0a2baed
  409350:	enter  0x6b80,0xbc
  409354:	dec    edx
  409355:	add    DWORD PTR [eax-0x1e08b68a],ebx
  40935b:	outs   dx,DWORD PTR ds:[esi]
  40935c:	jb     0x40935d
  40935e:	cmp    eax,0x5d11bd95
  409363:	and    BYTE PTR [esi-0x7e0ebd1f],al
  409369:	jb     0x409312
  40936b:	es inc esi
  40936d:	inc    esp
  40936e:	sti    
  40936f:	div    BYTE PTR [eax+eax*4]
  409372:	fsubr  DWORD PTR [edi]
  409374:	mov    eax,0x28158127
  409379:	adc    edi,DWORD PTR [eax]
  40937b:	js     0x409350
  40937d:	imul   ecx,esp,0x8e2bb7f0
  409383:	mov    dl,0xf0
  409385:	add    eax,0xded51590
  40938a:	int    0x7e
  40938c:	(bad)  
  40938d:	cld    
  40938e:	mov    ah,0x79
  409390:	adc    eax,0x6eb7a753
  409395:	xchg   esi,eax
  409396:	lea    ebx,[ebx-0x645cd674]
  40939c:	(bad)  
  40939d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40939e:	int3   
  40939f:	or     al,0x7b
  4093a1:	mov    edi,gs
  4093a3:	outs   dx,DWORD PTR ds:[esi]
  4093a4:	inc    ecx
  4093a5:	xor    DWORD PTR [ecx-0x68ce84d8],ecx
  4093ab:	mov    esp,0x68f4527b
  4093b0:	add    ebp,DWORD PTR [eax]
  4093b2:	push   0xd2e7fc
  4093b7:	push   ebp
  4093b8:	and    DWORD PTR [edx+0x68],edx
  4093bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093bc:	push   ds
  4093bd:	jg     0x409374
  4093bf:	out    0x48,eax
  4093c1:	arpl   WORD PTR [ecx+ebx*4],cx
  4093c4:	in     al,dx
  4093c5:	daa    
  4093c6:	aaa    
  4093c7:	sub    BYTE PTR [ebp+edx*1-0x1589ad34],bh
  4093ce:	lods   eax,DWORD PTR ds:[esi]
  4093cf:	adc    dl,BYTE PTR [eax+0x4af6f171]
  4093d5:	jecxz  0x409442
  4093d7:	inc    ecx
  4093d8:	(bad)  
  4093d9:	dec    edx
  4093da:	lahf   
  4093db:	pop    edi
  4093dc:	dec    ecx
  4093dd:	mov    bh,0x1
  4093df:	(bad)  
  4093e0:	js     0x4093f9
  4093e2:	jbe    0x4093ae
  4093e4:	adc    al,0xec
  4093e6:	mov    ebx,0xae0c25b3
  4093eb:	or     eax,0x7cb4f6f9
  4093f0:	in     eax,dx
  4093f1:	pop    esp
  4093f2:	dec    edi
  4093f3:	dec    esi
  4093f4:	je     0x40940e
  4093f6:	call   0x9d10:0x85273189
  4093fd:	iret   
  4093fe:	mov    esp,DWORD PTR [edx-0x55]
  409401:	repz scas al,BYTE PTR es:[edi]
  409403:	add    al,0x3c
  409405:	lahf   
  409406:	adc    al,0x75
  409408:	adc    BYTE PTR [ebx],bh
  40940a:	dec    esi
  40940b:	popa   
  40940c:	mov    ah,0x25
  40940e:	pop    ebp
  40940f:	sub    DWORD PTR [ecx-0x524c9397],ecx
  409415:	pop    es
  409416:	fs pop ss
  409418:	leave  
  409419:	icebp  
  40941a:	or     al,0x47
  40941c:	adc    eax,0xcdb983d0
  409421:	and    eax,0xbfc41368
  409426:	mov    ch,dl
  409428:	leave  
  409429:	mov    al,ah
  40942b:	js     0x40940e
  40942d:	sbb    al,0x6c
  40942f:	cmp    eax,esi
  409431:	dec    edi
  409432:	xor    esi,DWORD PTR [edi]
  409434:	dec    edi
  409435:	sub    ebp,DWORD PTR [edx-0x7e93ad16]
  40943b:	adc    eax,0xbfd17a1e
  409440:	test   al,0x73
  409442:	ds dec ecx
  409444:	aad    0xc5
  409446:	stc    
  409447:	dec    edx
  409448:	fdivp  st(4),st
  40944a:	jae    0x409477
  40944c:	sbb    cl,BYTE PTR [edi]
  40944e:	push   esi
  40944f:	cdq    
  409450:	pop    ebp
  409451:	imul   ebp,DWORD PTR [eax+ebx*2-0x3686b01c],0xc9d3eb2
  40945c:	sti    
  40945d:	f2xm1  
  40945f:	pop    esp
  409460:	pop    ebx
  409461:	jne    0x409478
  409463:	sub    ecx,edx
  409465:	or     eax,0xf5271f87
  40946a:	dec    edx
  40946b:	icebp  
  40946c:	popf   
  40946d:	push   es
  40946e:	(bad)  
  409470:	or     ebp,DWORD PTR [ebp-0x13]
  409473:	inc    ebp
  409474:	test   eax,0x41c350a5
  409479:	mov    ebp,edi
  40947b:	add    al,0xc4
  40947d:	js     0x409471
  40947f:	dec    esi
  409480:	dec    esp
  409481:	push   esi
  409482:	jns    0x40943c
  409484:	xor    edi,DWORD PTR [ecx]
  409486:	push   0x184bafd2
  40948b:	sbb    eax,0xfffad113
  409490:	dec    ecx
  409491:	xchg   edx,eax
  409492:	lahf   
  409493:	inc    esi
  409494:	mov    esi,0x5ffe7777
  409499:	cmp    eax,esp
  40949b:	xchg   ecx,eax
  40949c:	xchg   ebp,eax
  40949d:	addr16 cli 
  40949f:	inc    ecx
  4094a0:	outs   dx,BYTE PTR ds:[esi]
  4094a1:	sub    bh,BYTE PTR [esi]
  4094a3:	lds    ebp,FWORD PTR [esi-0x430a26ff]
  4094a9:	mov    bl,al
  4094ab:	mov    bl,0xa4
  4094ad:	fimul  DWORD PTR [eax+ebp*1-0x1f529007]
  4094b4:	or     al,0xd
  4094b6:	or     al,0x4e
  4094b8:	test   eax,0xbeb17f92
  4094bd:	retf   0x3455
  4094c0:	shl    ch,cl
  4094c2:	fs add eax,0xfc0002f6
  4094c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c9:	mov    DWORD PTR [eax-0x6234ea77],eax
  4094cf:	addr16 stc 
  4094d1:	push   esp
  4094d2:	jg     0x4094db
  4094d4:	int    0xf8
  4094d6:	fucom  st(7)
  4094d8:	(bad)  
  4094d9:	rcr    BYTE PTR [eax-0x24df0028],cl
  4094df:	out    0xf9,eax
  4094e1:	and    BYTE PTR [ebx+0x76e8d0ae],0x29
  4094e8:	jmp    0x64a52907
  4094ed:	in     eax,0x7
  4094ef:	hlt    
  4094f0:	mov    WORD PTR [edi],fs
  4094f2:	xor    esp,esp
  4094f4:	mov    BYTE PTR [ebx-0x30315bda],cl
  4094fa:	cdq    
  4094fb:	repnz pop ds
  4094fd:	pop    es
  4094fe:	or     eax,0xd75de589
  409503:	xor    al,0xc7
  409505:	test   DWORD PTR [edx+0x53],0x99bb7f17
  40950c:	push   ebp
  40950d:	xor    BYTE PTR [edx],bl
  40950f:	mov    ah,0x93
  409511:	adc    BYTE PTR [ecx],ch
  409513:	xor    esi,DWORD PTR cs:[ebx]
  409516:	jae    0x409561
  409518:	add    eax,0x86551c9
  40951d:	mov    ds,esp
  40951f:	jle    0x409512
  409521:	imul   edi,DWORD PTR [edi+0x26bb107],0xba33f7f
  40952b:	rcr    BYTE PTR [edx],1
  40952d:	push   ss
  40952e:	popf   
  40952f:	leave  
  409530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409531:	xlat   BYTE PTR ds:[ebx]
  409532:	ss mov ebp,eax
  409535:	daa    
  409536:	dec    edi
  409537:	jmp    0xc2f3:0x97101e7b
  40953e:	pop    eax
  40953f:	mov    dl,0xce
  409541:	xor    ch,BYTE PTR [eax]
  409543:	lock jns 0x409540
  409546:	stos   BYTE PTR es:[edi],al
  409547:	rol    ecx,cl
  409549:	lea    esp,[esi+0x42]
  40954c:	xchg   esp,eax
  40954d:	std    
  40954e:	add    esp,DWORD PTR [ebx+0x3]
  409551:	mov    cl,0xce
  409553:	sub    ebx,0x8c4b12c0
  409559:	loopne 0x409589
  40955b:	sub    DWORD PTR [ecx+0x6157ea13],ecx
  409561:	int3   
  409562:	cmp    DWORD PTR [ecx+0x77],ebp
  409565:	stos   BYTE PTR es:[edi],al
  409566:	pop    ss
  409567:	sbb    BYTE PTR [edi+ecx*2+0x75],al
  40956b:	xor    eax,0xb2bc06f4
  409570:	cmp    cl,al
  409572:	aad    0xb1
  409574:	xchg   edi,eax
  409575:	pop    edi
  409576:	std    
  409577:	mov    edi,0x608d42ad
  40957c:	xor    bl,ch
  40957e:	repnz out 0x41,eax
  409581:	push   DWORD PTR [ecx+0x17]
  409584:	or     esi,DWORD PTR [ebx]
  409586:	popf   
  409587:	xchg   BYTE PTR [ecx],dl
  409589:	arpl   WORD PTR [edi-0x57],bx
  40958c:	push   edi
  40958d:	push   es
  40958e:	pop    ecx
  40958f:	xchg   BYTE PTR [ecx+0x6],dh
  409592:	enter  0x506f,0x95
  409596:	out    0xb,al
  409598:	pop    eax
  409599:	call   0x5bd5f2e7
  40959e:	xchg   ecx,eax
  40959f:	imul   BYTE PTR [edi-0x23]
  4095a2:	sub    ebx,DWORD PTR [eax]
  4095a4:	mov    ebx,0xbc38b3df
  4095a9:	pop    ebp
  4095aa:	int    0x9e
  4095ac:	push   ss
  4095ad:	stos   DWORD PTR es:[edi],eax
  4095ae:	cli    
  4095af:	jo     0x409588
  4095b1:	cmp    DWORD PTR [edi+0x4d0002a8],ebp
  4095b7:	popa   
  4095b8:	ror    BYTE PTR [ebp+0x1c],1
  4095bb:	daa    
  4095bc:	out    dx,al
  4095bd:	loopne 0x40953f
  4095bf:	mov    edx,0x72f122c9
  4095c4:	(bad)  
  4095c5:	xchg   edx,eax
  4095c6:	jo     0x409598
  4095c8:	popa   
  4095c9:	ss or  al,0x18
  4095cc:	push   eax
  4095cd:	jecxz  0x4095e6
  4095cf:	adc    edi,esi
  4095d1:	add    ebx,DWORD PTR [eax+0x1b7b7c9c]
  4095d7:	mov    si,0x1758
  4095db:	inc    esi
  4095dc:	pop    ds
  4095dd:	jae    0x40959c
  4095df:	iret   
  4095e0:	gs xor eax,0x510497ae
  4095e6:	jg     0x4095a1
  4095e8:	sahf   
  4095e9:	ficomp WORD PTR [ebx+0x4da71ee0]
  4095ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f0:	mov    ds:0x67b24c4,eax
  4095f5:	sub    BYTE PTR [ecx+0x3b452587],bl
  4095fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095fc:	(bad)  
  4095fd:	mov    ch,BYTE PTR [edx]
  4095ff:	lods   al,BYTE PTR ds:[esi]
  409600:	cmp    ah,bh
  409602:	sub    BYTE PTR [edx+0x71],dh
  409605:	dec    ecx
  409606:	xor    al,0x1f
  409608:	fwait
  409609:	pop    ebp
  40960a:	inc    eax
  40960b:	lods   eax,DWORD PTR ds:[esi]
  40960c:	and    BYTE PTR [eax-0x57cf59e6],al
  409612:	or     dl,BYTE PTR [esi-0x6708fb7a]
  409618:	mov    ch,0x9f
  40961a:	sbb    al,0xde
  40961c:	sub    esi,DWORD PTR [ebp+esi*1+0x3dbf2f5a]
  409623:	add    DWORD PTR [ecx],edi
  409625:	test   eax,0xc359ec9b
  40962a:	enter  0xed32,0x83
  40962e:	into   
  40962f:	push   es
  409630:	adc    al,0x7c
  409632:	xchg   edx,eax
  409633:	jle    0x409621
  409635:	popa   
  409636:	in     eax,dx
  409637:	mov    al,0xb6
  409639:	xlat   BYTE PTR ds:[ebx]
  40963a:	mov    bl,0x56
  40963c:	adc    DWORD PTR [edx],ebx
  40963e:	retf   
  40963f:	pop    es
  409640:	dec    edi
  409641:	inc    ecx
  409642:	sub    edi,esp
  409644:	jae    0x409698
  409646:	fisttp DWORD PTR ds:0x348ab38d
  40964c:	push   es
  40964d:	push   ebx
  40964f:	imul   bl
  409651:	cmovge edi,esp
  409654:	(bad)  
  409655:	mov    ds:0x98efdafa,eax
  40965a:	push   ds
  40965b:	mov    ah,0x34
  40965d:	fstp   TBYTE PTR [eax-0x75ff7d0d]
  409663:	jbe    0x4095f7
  409665:	mov    ebx,0xe48d9acb
  40966a:	jmp    0x409608
  40966c:	xor    eax,ebp
  40966e:	xor    BYTE PTR es:[esi],0x1a
  409672:	inc    eax
  409673:	repz mov eax,ds:0xf465029e
  409679:	cmp    dl,al
  40967b:	fnsave cs:[ebp+0x48]
  40967f:	sbb    ebp,DWORD PTR [edx]
  409681:	stos   DWORD PTR es:[edi],eax
  409682:	in     al,dx
  409683:	cmp    DWORD PTR [eax],edx
  409685:	pop    ebp
  409686:	or     esi,DWORD PTR [ebp-0x4ac8c7ad]
  40968c:	ror    BYTE PTR [edx+0x4],0x41
  409690:	pop    es
  409691:	mov    ecx,0x5133c625
  409696:	es pop edi
  409698:	(bad)  
  40969a:	xor    eax,0xbeebc324
  40969f:	out    0x37,al
  4096a1:	jecxz  0x4096d8
  4096a3:	xchg   ebp,eax
  4096a4:	xchg   bl,dh
  4096a6:	pop    ebp
  4096a7:	mov    bl,0xc1
  4096a9:	pop    esp
  4096aa:	push   0xffffffd8
  4096ac:	hlt    
  4096ad:	pop    ds
  4096ae:	pop    ecx
  4096af:	stc    
  4096b0:	je     0x40970d
  4096b2:	aad    0x8b
  4096b4:	add    ah,BYTE PTR [esi]
  4096b6:	aam    0xd0
  4096b8:	dec    esi
  4096b9:	shr    DWORD PTR [eax-0x38],1
  4096bc:	gs out dx,eax
  4096be:	xchg   esp,eax
  4096bf:	jne    0x409731
  4096c1:	scas   al,BYTE PTR es:[edi]
  4096c2:	ds lock mov edx,0xd50b6b20
  4096c9:	out    dx,eax
  4096ca:	mul    BYTE PTR [ebx+0xeacf79e]
  4096d0:	mov    dh,0x8
  4096d2:	adc    bl,BYTE PTR [eax]
  4096d4:	sbb    eax,0xeb420467
  4096d9:	cmc    
  4096da:	sub    DWORD PTR [ecx],0xf2c8d4b6
  4096e0:	sti    
  4096e1:	addr16 stc 
  4096e3:	jg     0x409676
  4096e5:	mov    eax,DWORD PTR [ebp-0x30]
  4096e8:	push   esp
  4096e9:	pushf  
  4096ea:	and    al,0xa7
  4096ec:	aaa    
  4096ed:	fbld   TBYTE PTR [ebp+0x4800ac1c]
  4096f3:	pop    ebx
  4096f4:	lods   al,BYTE PTR ds:[esi]
  4096f5:	test   eax,edi
  4096f7:	jmp    0x843e:0x49b34c8a
  4096fe:	push   es
  4096ff:	jmp    0x40973a
  409701:	jg     0x40972f
  409703:	dec    esp
  409704:	mov    ebp,0x655b56d7
  409709:	or     eax,0xf33a9590
  40970e:	pop    ecx
  40970f:	sub    ch,dh
  409711:	inc    edi
  409712:	pop    es
  409713:	mov    WORD PTR [edi+eax*2],?
  409716:	inc    ebx
  409717:	addr16 sub eax,0xa071765
  40971d:	inc    esp
  40971e:	push   ss
  40971f:	dec    ecx
  409720:	add    bh,dh
  409722:	jb     0x4096c6
  409724:	push   ebx
  409725:	cmc    
  409726:	add    ah,0x5b
  409729:	sti    
  40972a:	mov    dl,0x21
  40972c:	or     ecx,DWORD PTR [edx]
  40972e:	js     0x4096d8
  409730:	mov    ebp,0x54d0bc50
  409735:	push   ebp
  409736:	push   0x78bdb0aa
  40973b:	mov    esi,0x8b4a92ff
  409740:	xchg   ebp,eax
  409741:	inc    ebx
  409742:	(bad)
  409745:	jb     0x4096f2
  409747:	shr    BYTE PTR [edi+0x7e9b224e],1
  40974d:	or     eax,0xbc654145
  409752:	inc    ebx
  409753:	ret    
  409754:	pop    edi
  409755:	dec    ebp
  409756:	dec    ebp
  409757:	mov    ss,esi
  409759:	ret    0xd9bb
  40975c:	xchg   ebx,eax
  40975d:	xchg   edx,eax
  40975e:	data16 icebp 
  409760:	jo     0x409719
  409762:	push   esi
  409763:	sbb    DWORD PTR [ecx+eiz*2],esi
  409766:	jle    0x409760
  409768:	pop    eax
  409769:	sub    eax,0xbb0e576a
  40976e:	mov    ebp,0x5cb3e291
  409773:	push   ebx
  409774:	lods   al,BYTE PTR ds:[esi]
  409775:	and    DWORD PTR [edx+0x7f59aaaf],edi
  40977b:	jmp    0x40976e
  40977d:	(bad)  
  40977f:	fld    TBYTE PTR [ecx-0x575aec90]
  409785:	outs   dx,DWORD PTR ds:[esi]
  409786:	loope  0x40976c
  409788:	cmc    
  409789:	sub    eax,0x865df6a3
  40978e:	jmp    0x8c057dee
  409793:	in     al,dx
  409794:	rcl    ecx,cl
  409796:	mov    edx,0x8c546fc2
  40979b:	mov    cl,0x19
  40979d:	or     ch,BYTE PTR ds:0x8c103eeb
  4097a3:	jle    0x40979f
  4097a5:	loopne 0x4097d7
  4097a7:	mov    ch,0xf8
  4097a9:	xchg   DWORD PTR [ecx+0x4e62f861],ebx
  4097af:	test   BYTE PTR [ebx+0x54ebd4a],dl
  4097b5:	cmp    BYTE PTR [eax-0x4f620585],0x5e
  4097bc:	leave  
  4097bd:	jmp    0x409790
  4097bf:	out    0x58,eax
  4097c1:	or     DWORD PTR [ecx+ecx*1],ebp
  4097c4:	add    DWORD PTR [esi-0x48],edx
  4097c7:	lock jp 0x4097f6
  4097ca:	test   edx,ebx
  4097cc:	enter  0x44d5,0x67
  4097d0:	or     BYTE PTR [ecx+0x42],dh
  4097d3:	stc    
  4097d4:	test   BYTE PTR [edi+0x68],dh
  4097d7:	add    BYTE PTR [eax+ebp*8-0x5a64ac33],bl
  4097de:	pop    ds
  4097df:	neg    BYTE PTR [esi+ebp*4]
  4097e2:	inc    edx
  4097e3:	outs   dx,BYTE PTR ds:[esi]
  4097e4:	pop    ebx
  4097e5:	push   ecx
  4097e6:	cdq    
  4097e7:	mov    al,ds:0xef44b4b0
  4097ec:	dec    eax
  4097ed:	sub    DWORD PTR [ebx+0x54],ebx
  4097f0:	shl    BYTE PTR [ebx+0x470085a5],1
  4097f6:	adc    DWORD PTR [edx+ecx*4+0x53],ebp
  4097fa:	loopne 0x40982d
  4097fc:	add    eax,0xdbe2ea04
  409801:	inc    edx
  409802:	inc    esi
  409803:	cmc    
  409804:	fsub   st,st(3)
  409806:	retf   0xfe94
  409809:	retf   0x5ab7
  40980c:	dec    esi
  40980d:	push   esi
  40980e:	fnsave [esi]
  409810:	pushf  
  409811:	lods   al,BYTE PTR ds:[esi]
  409812:	or     edx,0x47b49664
  409818:	jp     0x409807
  40981a:	xchg   ecx,eax
  40981b:	loope  0x409890
  40981d:	cmp    DWORD PTR ss:[edi-0x464b47c2],0x22
  409825:	inc    esi
  409826:	test   eax,0xe8b1f140
  40982b:	inc    eax
  40982c:	or     DWORD PTR [edi+0x1583799b],ecx
  409832:	cmp    al,0x67
  409834:	enter  0xdf35,0x8
  409838:	loopne 0x4097be
  40983a:	aas    
  40983b:	xchg   ecx,eax
  40983c:	jge    0x4097eb
  40983e:	mov    ecx,0xbfd9b971
  409843:	loope  0x40980f
  409845:	scas   eax,DWORD PTR es:[edi]
  409846:	and    DWORD PTR [edx],ebx
  409848:	pop    es
  409849:	fxch   st(0)
  40984b:	outs   dx,DWORD PTR ds:[esi]
  40984c:	pop    ebx
  40984d:	push   ds
  40984e:	(bad)  
  409850:	sub    DWORD PTR [ebp-0x4e969fb2],ecx
  409856:	dec    ebp
  409857:	cld    
  409858:	or     al,0x95
  40985a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40985b:	repz adc ch,BYTE PTR [esi]
  40985e:	(bad)  
  40985f:	dec    edi
  409860:	(bad)  
  409862:	pop    edx
  409863:	pop    ebp
  409864:	inc    esp
  409865:	(bad)  
  409867:	lock mov ah,0x25
  40986a:	and    BYTE PTR [edx],al
  40986c:	and    DWORD PTR ss:[ebx+0x4116f56],ebx
  409873:	cmp    eax,0x22e9702a
  409878:	fsub   st(0),st
  40987a:	arpl   di,bp
  40987c:	sub    BYTE PTR [edi-0x985004c],ah
  409882:	ins    DWORD PTR es:[edi],dx
  409883:	xor    eax,0xd8ce9bd0
  409888:	mov    edx,0x71d325fa
  40988d:	mov    ds:0x3429721b,eax
  409892:	sti    
  409893:	adc    al,0x8b
  409895:	in     eax,0xcc
  409897:	retf   
  409898:	das    
  409899:	add    DWORD PTR [ebx-0x78],edx
  40989c:	loopne 0x409837
  40989e:	loop   0x40983b
  4098a0:	std    
  4098a1:	inc    ebp
  4098a2:	sub    esi,DWORD PTR [edi+0x38]
  4098a5:	adc    DWORD PTR [eax-0x4],ebx
  4098a8:	add    di,WORD PTR [ebp-0x39d3b655]
  4098af:	jle    0x4098ee
  4098b1:	jle    0x409917
  4098b3:	dec    ebx
  4098b4:	and    DWORD PTR [ebp+0x2616f015],ecx
  4098ba:	add    eax,0xbc2719bf
  4098bf:	xor    cl,BYTE PTR [ebx+0x56]
  4098c2:	iret   
  4098c3:	dec    ebp
  4098c4:	pusha  
  4098c5:	cmp    al,0x7a
  4098c7:	ja     0x409853
  4098c9:	call   0xcdd45b13
  4098ce:	sti    
  4098cf:	pushaw 
  4098d1:	jl     0x409883
  4098d3:	fcomp  QWORD PTR ds:0x43f83c28
  4098d9:	cmp    al,0x21
  4098db:	push   ebx
  4098dc:	xchg   esi,eax
  4098dd:	leave  
  4098de:	push   ebp
  4098df:	mov    edx,?
  4098e1:	popa   
  4098e2:	aam    0x7d
  4098e4:	aad    0x48
  4098e6:	mov    ebp,DWORD PTR [eax]
  4098e8:	cmp    dl,bl
  4098ea:	dec    ebp
  4098eb:	xchg   edx,eax
  4098ec:	xor    BYTE PTR ds:0x5e4cd3a7,0x48
  4098f3:	mov    eax,0xa709d32e
  4098f8:	in     eax,dx
  4098f9:	sub    al,0x31
  4098fb:	mov    BYTE PTR [eax+0x10],dl
  4098fe:	pop    es
  4098ff:	fmul   st,st(6)
  409901:	test   ecx,ebp
  409903:	out    dx,al
  409904:	jo     0x409950
  409906:	sub    eax,0x2e31e2b7
  40990b:	(bad)
  40990e:	or     bl,BYTE PTR gs:[ebp-0x2f]
  409912:	xor    DWORD PTR [edi+0x2c13d4d5],esp
  409918:	sbb    DWORD PTR [edx-0x3355135d],esp
  40991e:	ret    
  40991f:	cli    
  409920:	retf   0x1eb8
  409923:	xor    ah,ch
  409925:	retf   0x9e1f
  409928:	push   eax
  409929:	mov    DWORD PTR [eax+0x6ef1fc54],edx
  40992f:	push   cs
  409930:	icebp  
  409931:	jle    0x40993e
  409933:	or     edi,DWORD PTR [eax+0x13846b4c]
  409939:	fwait
  40993a:	iret   
  40993b:	push   edi
  40993c:	mov    dh,0xf3
  40993e:	imul   ecx,edi,0x8
  409941:	jmp    0x433afeb
  409946:	add    DWORD PTR [esi+eiz*4-0x2287b1c],esi
  40994d:	xlat   BYTE PTR ds:[ebx]
  40994e:	out    dx,eax
  40994f:	xchg   edx,eax
  409950:	mov    eax,ds:0xdee2bded
  409956:	lahf   
  409957:	retf   0x6c03
  40995a:	mov    edi,0x73736423
  40995f:	jo     0x4098ee
  409961:	push   0xe453b49
  409966:	ficom  DWORD PTR [ebp-0x6]
  409969:	pop    ebx
  40996a:	leave  
  40996b:	mov    ah,0x51
  40996d:	xor    al,0xb6
  40996f:	shr    BYTE PTR [edx+0xad7e2bf],cl
  409975:	and    esi,edx
  409977:	adc    al,0x24
  409979:	pop    ss
  40997a:	scas   al,BYTE PTR es:[edi]
  40997b:	fnstsw WORD PTR [ecx+eiz*2+0x1]
  40997f:	push   0x3b93efff
  409984:	popa   
  409985:	mov    ds:0x934e3070,eax
  40998a:	xchg   edi,eax
  40998b:	leave  
  40998c:	shr    ch,0xc1
  40998f:	xor    eax,0x4f86760e
  409994:	cdq    
  409995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409996:	(bad)  
  409997:	jno    0x4099b4
  409999:	(bad)  
  40999a:	es adc esp,ebp
  40999d:	sbb    al,0xae
  40999f:	sti    
  4099a0:	outs   dx,BYTE PTR ds:[esi]
  4099a1:	sbb    dh,BYTE PTR [ebx]
  4099a3:	aad    0x47
  4099a5:	pop    esi
  4099a6:	sub    BYTE PTR [ecx+0xc826d5],0xae
  4099ad:	or     al,0xbf
  4099af:	xchg   ebp,eax
  4099b0:	jno    0x409a19
  4099b2:	(bad)  
  4099b4:	test   al,0xec
  4099b6:	mov    dh,BYTE PTR [ebp-0x43d44719]
  4099bc:	cmp    BYTE PTR [ecx],ah
  4099be:	mov    BYTE PTR [ecx-0x4a],ah
  4099c1:	lds    esi,FWORD PTR [ebp-0x31]
  4099c4:	(bad)  
  4099c5:	add    BYTE PTR [ebx],0xc4
  4099c8:	dec    ecx
  4099c9:	mov    cl,BYTE PTR [edi-0x29e7716b]
  4099cf:	ss inc esp
  4099d1:	jnp    0x409a2b
  4099d3:	jb     0x409a0e
  4099d5:	shl    dh,cl
  4099d7:	dec    ebx
  4099d8:	int3   
  4099d9:	cwde   
  4099da:	mov    WORD PTR [ebp-0x44ab747a],cs
  4099e0:	pcmpgtw mm2,QWORD PTR [edi-0x440169a3]
  4099e7:	and    esi,DWORD PTR [esi-0x6f3c55b6]
  4099ed:	xchg   ecx,eax
  4099ee:	(bad)  
  4099ef:	pop    ecx
  4099f0:	leave  
  4099f1:	or     dl,BYTE PTR [ecx+0x2c754609]
  4099f7:	repnz add eax,0xb8cb10aa
  4099fd:	pop    edx
  4099fe:	retf   0xe7cf
  409a01:	mov    ds:0x4727df0b,al
  409a06:	sbb    eax,0x5fc199b
  409a0b:	and    al,0xb7
  409a0d:	inc    edx
  409a0e:	and    ecx,DWORD PTR [esi+ebx*1+0x1f]
  409a12:	push   0xffffffb7
  409a14:	xchg   edi,eax
  409a15:	jmp    0x24d8:0xb35931f8
  409a1c:	lock xchg esi,eax
  409a1e:	inc    ecx
  409a1f:	inc    esp
  409a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a21:	stos   DWORD PTR es:[edi],eax
  409a22:	mov    dh,0x65
  409a24:	bound  ecx,QWORD PTR [edx-0x5b5363b7]
  409a2a:	jnp    0x409aa7
  409a2c:	xlat   BYTE PTR ds:[ebx]
  409a2d:	in     eax,0x14
  409a2f:	push   eax
  409a30:	bound  esi,QWORD PTR [esi]
  409a32:	test   DWORD PTR [ebx-0x1],edi
  409a35:	adc    ah,BYTE PTR [esi+0x706c4a83]
  409a3b:	sbb    bl,BYTE PTR [esi-0x4872875d]
  409a41:	push   eax
  409a42:	xchg   edx,eax
  409a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a44:	daa    
  409a45:	les    edx,FWORD PTR [ebp+ebx*1-0x70d9ba74]
  409a4c:	jb     0x409a2c
  409a4e:	jo     0x4099ea
  409a50:	dec    esp
  409a51:	or     BYTE PTR [edi+0xe],al
  409a54:	outs   dx,BYTE PTR ds:[esi]
  409a55:	fcmovnu st,st(6)
  409a57:	jle    0x4099ee
  409a59:	fsubr  st(7),st
  409a5b:	mov    BYTE PTR [ecx-0x75],cl
  409a5e:	inc    eax
  409a5f:	shl    BYTE PTR [ebp+0x6f065ef7],cl
  409a65:	aad    0xa6
  409a67:	xchg   esp,eax
  409a68:	stos   DWORD PTR es:[edi],eax
  409a69:	xacquire xchg DWORD PTR [esi+0x1bbd8c75],ebp
  409a70:	mov    eax,0x788a46a1
  409a75:	xor    al,0xa4
  409a77:	loopne 0x409a52
  409a79:	ficom  DWORD PTR [eax+ecx*8+0x2b]
  409a7d:	aad    0x50
  409a7f:	cmovl  edi,ecx
  409a82:	jmp    0x8760:0x506defbd
  409a89:	sbb    BYTE PTR [edx-0x22],bh
  409a8c:	imul   edx,DWORD PTR [esi-0x4f179421],0x13
  409a93:	inc    ebp
  409a94:	aad    0xc1
  409a96:	scas   eax,DWORD PTR es:[edi]
  409a97:	cmp    DWORD PTR [eax+edx*4],esi
  409a9a:	iret   
  409a9b:	jne    0x409a2f
  409a9d:	add    al,0x86
  409a9f:	int3   
  409aa0:	xor    dl,BYTE PTR [eax-0x54]
  409aa3:	push   eax
  409aa4:	je     0x409b02
  409aa6:	mov    cl,0x67
  409aa8:	loop   0x409abe
  409aaa:	push   eax
  409aab:	jp     0x409a36
  409aad:	inc    ecx
  409aae:	mov    esi,?
  409ab0:	adc    eax,0x23e0a3be
  409ab5:	adc    al,0xdb
  409ab7:	mov    WORD PTR [esi+eax*8+0x26],ss
  409abb:	fisubr WORD PTR [eax+0xc]
  409abe:	std    
  409abf:	cli    
  409ac0:	or     al,BYTE PTR [ebx]
  409ac2:	xchg   ebp,eax
  409ac3:	jae    0x409a78
  409ac5:	sub    al,0x4d
  409ac7:	popa   
  409ac8:	fnstsw WORD PTR [edi+0x62]
  409acb:	or     esi,edi
  409acd:	cli    
  409ace:	jmp    0x4663dc89
  409ad3:	aam    0xaa
  409ad5:	inc    ebx
  409ad6:	inc    ecx
  409ad8:	mov    ebx,DWORD PTR [ebx-0xf53ac0d]
  409ade:	jge    0x409b46
  409ae0:	int3   
  409ae1:	iret   
  409ae2:	or     al,0x7a
  409ae4:	dec    esi
  409ae5:	sbb    esi,ebp
  409ae7:	push   ebp
  409ae8:	pop    ds
  409ae9:	xor    dl,BYTE PTR [edx+0x72]
  409aec:	inc    esi
  409aed:	mov    dh,0xc0
  409aef:	push   es
  409af0:	jae    0x409a7d
  409af2:	mov    eax,ds:0x741fa383
  409af7:	add    DWORD PTR [esi+0x27d3424b],ecx
  409afd:	add    DWORD PTR [ecx-0x3b],eax
  409b00:	adc    BYTE PTR [edx+0xf],cl
  409b03:	shl    al,1
  409b05:	jnp    0x409a9d
  409b07:	push   cs
  409b08:	mov    esp,0x20e50e35
  409b0d:	out    dx,eax
  409b0e:	out    dx,eax
  409b0f:	cli    
  409b10:	push   0xeab01f66
  409b15:	xchg   esp,eax
  409b17:	dec    esi
  409b18:	jmp    0x7b61ec69
  409b1d:	dec    edi
  409b1e:	dec    esi
  409b1f:	mov    BYTE PTR [edx-0x5d],al
  409b22:	retf   0xc577
  409b25:	sub    eax,0x6c6d4679
  409b2a:	loopne 0x409ac1
  409b2c:	or     DWORD PTR [esi+0x4c3d9d68],edi
  409b32:	test   eax,0x66d7225d
  409b37:	stos   DWORD PTR es:[edi],eax
  409b38:	ins    DWORD PTR es:[edi],dx
  409b39:	mov    ah,0xfe
  409b3b:	nop
  409b3c:	mov    dl,0x85
  409b3e:	push   es
  409b3f:	outs   dx,DWORD PTR es:[esi]
  409b41:	dec    esi
  409b42:	aaa    
  409b43:	pop    edi
  409b44:	adc    esi,DWORD PTR [esi]
  409b46:	jg     0x409b1e
  409b48:	or     eax,0xc556bed7
  409b4d:	sbb    eax,0xfd9a0622
  409b52:	sub    eax,0x33a9ac16
  409b57:	sbb    dl,ch
  409b59:	jmp    DWORD PTR [edi-0x752bda8f]
  409b5f:	jne    0x409af7
  409b61:	sti    
  409b62:	cli    
  409b63:	pop    eax
  409b64:	or     DWORD PTR [ecx-0x31e1333a],esp
  409b6a:	jo     0x409b08
  409b6c:	test   BYTE PTR [edi-0x38],dl
  409b6f:	int    0x75
  409b71:	ja     0x409b59
  409b73:	xchg   ecx,eax
  409b74:	fisub  DWORD PTR [esi+edx*8-0x2e]
  409b78:	cs retf 
  409b7a:	or     al,BYTE PTR [edx-0x34]
  409b7d:	mov    eax,ds:0x4804141c
  409b82:	add    DWORD PTR [edi+0x2c563317],edi
  409b88:	icebp  
  409b89:	stc    
  409b8a:	addr16 mov es:0xaee9,eax
  409b8f:	add    esp,DWORD PTR [esi+ecx*2-0x7d0c974e]
  409b96:	push   ebp
  409b97:	sar    ecx,cl
  409b99:	xchg   ebp,eax
  409b9a:	pusha  
  409b9b:	and    eax,0x2b5dd1b6
  409ba0:	(bad)  
  409ba1:	mov    esp,0x9295a452
  409ba6:	and    bh,BYTE PTR [edx-0xc6e31e4]
  409bac:	or     ebp,DWORD PTR [edi-0x34]
  409baf:	xor    esi,DWORD PTR [eax]
  409bb1:	push   edx
  409bb2:	sub    al,0xe6
  409bb4:	pop    ds
  409bb5:	scas   eax,DWORD PTR es:[edi]
  409bb6:	mov    bl,0x3
  409bb8:	addr16 popf 
  409bba:	mov    ah,0x16
  409bbc:	in     eax,dx
  409bbd:	jle    0x409c0b
  409bbf:	mov    DWORD PTR [edi+0x2d7b69ba],ebx
  409bc5:	mov    esi,0x7e78238e
  409bca:	xchg   esp,eax
  409bcb:	adc    eax,0x2d4a36bd
  409bd0:	fisub  DWORD PTR [esi+0x6343e2c5]
  409bd6:	adc    eax,0x50773f9c
  409bdb:	cwde   
  409bdc:	jmp    0x409bfa
  409bde:	rcl    BYTE PTR [ecx+0x48],cl
  409be1:	shl    ch,1
  409be3:	push   ebx
  409be4:	retf   
  409be5:	pop    esp
  409be6:	jecxz  0x409bf2
  409be8:	cdq    
  409be9:	mov    bh,0xfe
  409beb:	and    BYTE PTR [edi+edi*4-0x7b],dh
  409bef:	(bad)  
  409bf0:	rcr    DWORD PTR [esi],cl
  409bf2:	pop    edi
  409bf3:	jne    0x409c0e
  409bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bf6:	xlat   BYTE PTR ds:[ebx]
  409bf7:	inc    eax
  409bf8:	cmp    al,BYTE PTR [ebp+0x77c28742]
  409bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bff:	shl    BYTE PTR [esi],0x94
  409c02:	jmp    0x5959:0x7438708a
  409c09:	clc    
  409c0a:	(bad)  
  409c0b:	jmp    0x79daea13
  409c10:	xchg   ebx,eax
  409c11:	add    DWORD PTR [ecx],edi
  409c13:	mov    ecx,0xdeda5f7
  409c18:	ror    BYTE PTR [esi+0x3c1c2d19],cl
  409c1e:	mov    eax,gs
  409c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c21:	pushf  
  409c22:	sub    BYTE PTR [edi],al
  409c24:	hlt    
  409c25:	arpl   WORD PTR [ebx-0x3669e86b],di
  409c2b:	sub    edx,DWORD PTR [ebp+0x66]
  409c2e:	popa   
  409c2f:	or     al,0x5a
  409c31:	jb     0x409c85
  409c33:	sub    edi,DWORD PTR [ebx-0x75395e09]
  409c39:	xor    bl,BYTE PTR [eax]
  409c3b:	sub    DWORD PTR [edx],eax
  409c3d:	add    BYTE PTR [eax-0x34],dh
  409c40:	and    bl,ch
  409c42:	(bad)  
  409c43:	aad    0x84
  409c45:	mov    edx,0x835f2cc0
  409c4a:	iret   
  409c4b:	mov    bh,0x35
  409c4d:	fwait
  409c4e:	inc    eax
  409c4f:	pushf  
  409c50:	mov    edx,0x74fbbb83
  409c55:	dec    ecx
  409c56:	ds jmp 0x4d88:0x2f928aca
  409c5e:	fwait
  409c5f:	ins    BYTE PTR es:[edi],dx
  409c60:	lods   al,BYTE PTR ds:[esi]
  409c61:	(bad)  
  409c62:	(bad)  [edx]
  409c64:	fsub   st(6),st
  409c66:	arpl   dx,bp
  409c68:	or     eax,0xf69ffaea
  409c6d:	ins    DWORD PTR es:[edi],dx
  409c6e:	retf   0xe81e
  409c71:	cmp    ah,ah
  409c73:	clc    
  409c74:	jmp    DWORD PTR [ecx+0x7e489c77]
  409c7a:	iret   
  409c7b:	repz inc esp
  409c7d:	pop    ebx
  409c7e:	sti    
  409c7f:	lock or eax,0xa2541480
  409c85:	cmp    edx,DWORD PTR fs:[ecx]
  409c88:	pop    es
  409c89:	sbb    ebx,0xffffffff
  409c8c:	test   ah,ch
  409c8e:	xor    al,0x71
  409c90:	mov    DWORD PTR [edi],esp
  409c92:	cld    
  409c93:	and    BYTE PTR [edx+0x57],al
  409c96:	and    ah,bh
  409c98:	xchg   esi,eax
  409c99:	test   eax,0x40606e7a
  409c9e:	xlat   BYTE PTR ds:[ebx]
  409c9f:	data16 arpl WORD PTR [esi+0x8],bp
  409ca3:	or     ch,bh
  409ca5:	call   0x86c5ca3b
  409caa:	jns    0x409c6b
  409cac:	aad    0x62
  409cae:	loopne 0x409d0b
  409cb0:	push   ds
  409cb1:	lods   al,BYTE PTR ds:[esi]
  409cb2:	cmp    BYTE PTR [ebp+0x6723e76c],dl
  409cb8:	jmp    0x90f751e7
  409cbd:	xor    al,0x4e
  409cbf:	rcr    BYTE PTR [ecx],1
  409cc1:	jae    0x409cde
  409cc3:	ret    
  409cc4:	daa    
  409cc5:	inc    edx
  409cc6:	js     0x409cab
  409cc8:	and    esi,ebx
  409cca:	gs sbb al,0x4d
  409ccd:	jmp    0x409cab
  409ccf:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409cd1:	mov    eax,ds:0xca16a2ee
  409cd6:	pop    eax
  409cd7:	call   0x155ec900
  409cdc:	mov    cl,0x83
  409cde:	lea    esi,[esi]
  409ce0:	mov    edi,DWORD PTR [bx]
  409ce3:	cmp    edx,0x13524a24
  409ce9:	jo     0x409d1f
  409ceb:	loop   0x409cc3
  409ced:	inc    eax
  409cee:	icebp  
  409cef:	aas    
  409cf0:	add    bl,dl
  409cf2:	(bad)  
  409cf3:	mov    ebp,0xbad4d309
  409cf8:	or     edx,DWORD PTR cs:[ebx]
  409cfb:	inc    esp
  409cfc:	cmc    
  409cfd:	lea    ebp,ds:0x5bdb3b43
  409d03:	mov    bl,0x36
  409d05:	push   edx
  409d06:	mov    edi,0x3d5c4250
  409d0b:	sbb    eax,0x7c17e85d
  409d10:	test   al,0x71
  409d12:	xchg   edi,eax
  409d13:	and    DWORD PTR [ebp-0x2a],ecx
  409d16:	mov    al,ds:0x64d19b7b
  409d1b:	popa   
  409d1c:	mov    WORD PTR [ebp+0x58],fs
  409d1f:	cwde   
  409d20:	sbb    DWORD PTR [eax-0xfa2ef0b],ecx
  409d26:	push   ebp
  409d27:	sahf   
  409d28:	pop    eax
  409d29:	adc    DWORD PTR [ecx],edx
  409d2b:	in     eax,dx
  409d2c:	vpmadcsswd ymm12,ymm4,ymm1,ymm2
  409d32:	stos   DWORD PTR es:[edi],eax
  409d33:	rcr    DWORD PTR [eax],0x7b
  409d36:	sbb    esp,ecx
  409d38:	cmp    al,0x83
  409d3a:	sub    DWORD PTR cs:[ecx-0x7cf01baa],0x9f0bb876
  409d45:	and    edx,DWORD PTR [ebx+0x7b]
  409d48:	or     BYTE PTR [edx+0x452f1da1],bh
  409d4e:	push   0x8b898b44
  409d53:	inc    ebx
  409d54:	xchg   ebp,eax
  409d55:	test   eax,0xbd52643f
  409d5a:	in     eax,dx
  409d5b:	jge    0x409d96
  409d5d:	and    eax,0x61d583dc
  409d62:	dec    edi
  409d63:	sbb    BYTE PTR [ebx+0x2e],0xff
  409d67:	cmp    edx,esi
  409d69:	(bad)  
  409d6a:	pop    esp
  409d6b:	pop    es
  409d6c:	repnz mov ah,bl
  409d6f:	cs out dx,eax
  409d71:	lds    edx,FWORD PTR [edi-0x37]
  409d74:	and    eax,0x9a22b96b
  409d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d7a:	leave  
  409d7b:	inc    ecx
  409d7c:	and    al,0x5c
  409d7e:	xchg   edx,eax
  409d7f:	leave  
  409d80:	mov    ss,esp
  409d82:	dec    ebx
  409d83:	xchg   esi,eax
  409d84:	and    BYTE PTR [ebx+0x912a17e],bh
  409d8a:	cli    
  409d8b:	and    esi,DWORD PTR [ebp+0x695851d5]
  409d91:	jp     0x409e0d
  409d93:	popf   
  409d94:	lods   eax,DWORD PTR ds:[esi]
  409d95:	adc    ecx,ecx
  409d97:	lods   al,BYTE PTR ds:[esi]
  409d98:	mov    ds:0x44922561,eax
  409d9d:	inc    esp
  409d9e:	(bad)  
  409d9f:	lods   al,BYTE PTR ds:[esi]
  409da0:	dec    ecx
  409da1:	lds    ecx,FWORD PTR [esi-0x61]
  409da4:	or     BYTE PTR [edx],0xa9
  409da7:	mov    esp,0x65172574
  409dac:	cmp    dl,dl
  409dae:	ins    DWORD PTR es:[edi],dx
  409daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db0:	iret   
  409db1:	cmp    ecx,DWORD PTR [esi]
  409db3:	jmp    0x70a66e0e
  409db8:	scas   al,BYTE PTR es:[edi]
  409db9:	xlat   BYTE PTR ds:[ebx]
  409dba:	leave  
  409dbb:	hlt    
  409dbc:	gs mov bh,0xf4
  409dbf:	xchg   edx,eax
  409dc0:	or     bl,cl
  409dc2:	adc    al,0xc6
  409dc4:	and    al,0x8
  409dc6:	sar    ecx,cl
  409dc8:	adc    edx,DWORD PTR [ebx-0x225f642]
  409dce:	hlt    
  409dcf:	les    ecx,FWORD PTR [eax-0x537a8791]
  409dd5:	jae    0x409d7b
  409dd7:	jecxz  0x409dc5
  409dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dda:	test   DWORD PTR [edi+0x6c08e225],esp
  409de0:	xchg   edx,eax
  409de1:	lods   al,BYTE PTR ds:[esi]
  409de2:	shl    BYTE PTR ds:0x9f6f5012,1
  409de8:	push   0x28
  409dea:	mov    cl,0x61
  409dec:	push   ss
  409ded:	call   0xc35b:0xbeb16c70
  409df4:	mov    eax,0x373067e8
  409df9:	inc    ecx
  409dfa:	fs mov eax,0x61dcd49b
  409e00:	mov    ebx,0xe70d2add
  409e05:	(bad)  
  409e06:	sub    eax,DWORD PTR [ebx-0x38]
  409e09:	imul   eax,DWORD PTR ds:0x2d784c14,0x988ce3e2
  409e13:	jbe    0x409e03
  409e15:	xor    BYTE PTR [edi],al
  409e17:	inc    ebp
  409e18:	jb     0x409e83
  409e1a:	addr16 sbb cl,bl
  409e1d:	jno    0x409e19
  409e1f:	mov    al,0xfc
  409e21:	jp     0x409e75
  409e23:	aaa    
  409e24:	push   edx
  409e25:	lods   al,BYTE PTR ds:[esi]
  409e26:	mov    esi,edi
  409e28:	vmwrite edi,DWORD PTR [eax+0x2435f754]
  409e2f:	jmp    0xe8bd:0xc3fea557
  409e36:	mov    ch,BYTE PTR [ebx-0x2074383a]
  409e3c:	xor    DWORD PTR [ebp+0x61],0x1b
  409e40:	fwait
  409e41:	loope  0x409dcd
  409e43:	jbe    0x409eb0
  409e45:	add    DWORD PTR [edi+ebx*4+0x15cda6ff],0xffffff91
  409e4d:	test   edi,ebp
  409e4f:	push   esi
  409e50:	jo     0x409e33
  409e52:	inc    eax
  409e53:	shl    edx,cl
  409e55:	and    BYTE PTR [edi+edx*4-0x5d],ch
  409e59:	mov    dh,0xc6
  409e5b:	lods   eax,DWORD PTR ds:[esi]
  409e5c:	push   ebp
  409e5e:	xor    eax,0x42bb3293
  409e63:	mov    dh,BYTE PTR [ecx-0x2a31225d]
  409e69:	sub    dl,BYTE PTR [ebp-0x7c2b26fb]
  409e6f:	and    al,0x78
  409e71:	push   0xb6e7ef84
  409e76:	mov    dh,0x9e
  409e78:	retf   0x4a25
  409e7b:	inc    edi
  409e7c:	jmp    0x409e41
  409e7e:	push   ss
  409e7f:	mov    ebp,edi
  409e81:	add    BYTE PTR [ebp+edx*8-0x22],bh
  409e85:	mov    al,0xbb
  409e87:	enter  0x4d71,0x64
  409e8b:	adc    eax,0x65fb739d
  409e90:	xor    ecx,edi
  409e92:	dec    ebx
  409e93:	ret    
  409e94:	mov    DWORD PTR [ebp-0x62],ebp
  409e97:	loope  0x409e5b
  409e99:	xchg   BYTE PTR [ebp-0x19fd0cf8],dh
  409e9f:	inc    ebx
  409ea0:	sub    eax,0x6244f0a
  409ea5:	lock (bad) 
  409ea7:	fstp   DWORD PTR [esi]
  409ea9:	cvtps2pd xmm1,QWORD PTR [edi-0x32]
  409ead:	xor    DWORD PTR [ebx],edx
  409eaf:	add    DWORD PTR [ebp+0x4ffb6cac],edx
  409eb5:	cmp    ecx,DWORD PTR [ebp+0x40f23ddb]
  409ebb:	dec    eax
  409ebc:	jmp    0x409e70
  409ebe:	or     al,0xb1
  409ec0:	lds    eax,FWORD PTR [ebp-0x6a]
  409ec3:	pop    ecx
  409ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ec5:	sbb    al,0x70
  409ec7:	jns    0x409e88
  409ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eca:	jge    0x409f11
  409ecc:	push   ebx
  409ecd:	popf   
  409ece:	daa    
  409ecf:	jnp    0x409edb
  409ed1:	dec    edi
  409ed2:	stos   BYTE PTR es:[edi],al
  409ed3:	cwde   
  409ed4:	xor    ah,0xcb
  409ed7:	xor    bh,BYTE PTR [ebx]
  409ed9:	fisubr WORD PTR [ebx+eax*1-0xf]
  409edd:	hlt    
  409ede:	or     eax,0x9d897994
  409ee3:	mov    cl,0xdc
  409ee5:	and    BYTE PTR [edi+edx*4+0x5f],cl
  409ee9:	sbb    eax,0x1637cb9f
  409eee:	leave  
  409eef:	sub    edx,edi
  409ef1:	loopne 0x409eef
  409ef3:	bound  edi,QWORD PTR [ebp-0x2e]
  409ef6:	ins    BYTE PTR es:[edi],dx
  409ef7:	sbb    cl,BYTE PTR [edx+0x36]
  409efa:	mov    WORD PTR [esi+0x70],cs
  409efd:	mov    ah,0x8d
  409eff:	xchg   esp,eax
  409f00:	jbe    0x409e89
  409f02:	mov    ah,0x1f
  409f04:	lods   eax,DWORD PTR ds:[esi]
  409f05:	adc    DWORD PTR [edi-0x18c3c54],esp
  409f0b:	and    dl,al
  409f0d:	mov    cl,0xf9
  409f0f:	outs   dx,DWORD PTR ds:[esi]
  409f10:	cmp    ebx,ecx
  409f12:	cdq    
  409f13:	ficom  WORD PTR [edi+ecx*8]
  409f16:	iret   
  409f17:	outs   dx,BYTE PTR ds:[si]
  409f19:	xlat   BYTE PTR ds:[ebx]
  409f1a:	sahf   
  409f1b:	gs (bad) 
  409f1d:	mov    ebx,0x9bf5254f
  409f22:	add    bl,BYTE PTR [ebx]
  409f24:	popa   
  409f25:	shr    DWORD PTR [ebp-0x2b0c536e],cl
  409f2b:	popf   
  409f2c:	out    0x65,eax
  409f2e:	das    
  409f2f:	retf   0x3cf8
  409f32:	mov    edx,0x13760891
  409f37:	mov    ecx,edx
  409f39:	sub    al,0xcd
  409f3b:	inc    edi
  409f3c:	cmp    dh,BYTE PTR [ebx+ebx*4]
  409f3f:	xchg   BYTE PTR [esi+0x3429ee06],ah
  409f45:	sbb    al,0x33
  409f47:	inc    ecx
  409f48:	xchg   esi,eax
  409f49:	nop
  409f4a:	push   cs
  409f4b:	dec    esp
  409f4c:	jmp    0x409ee5
  409f4e:	ret    0x5134
  409f51:	fld    QWORD PTR ds:0xace0761e
  409f57:	popf   
  409f58:	xchg   ebp,eax
  409f59:	jns    0x409f48
  409f5b:	div    DWORD PTR [ebp-0x43]
  409f5e:	jnp    0x409f21
  409f60:	push   cs
  409f61:	fldln2 
  409f63:	not    BYTE PTR [ecx]
  409f65:	lds    esi,FWORD PTR [eax+0x60]
  409f68:	push   ebx
  409f69:	cmc    
  409f6a:	cmp    ch,BYTE PTR [esi+0x35]
  409f6d:	and    bh,BYTE PTR [ebp+0x574fab7d]
  409f73:	dec    ebx
  409f74:	iret   
  409f75:	sti    
  409f76:	push   esp
  409f77:	das    
  409f78:	xchg   ebp,eax
  409f79:	mov    ch,bl
  409f7b:	cmp    ebp,DWORD PTR [esi]
  409f7d:	mov    esp,0xfb1de3a2
  409f82:	(bad)  
  409f83:	popf   
  409f84:	jnp    0x409f71
  409f86:	mov    ch,0x5e
  409f88:	ins    BYTE PTR es:[edi],dx
  409f89:	dec    ebx
  409f8a:	pop    es
  409f8b:	fcomp  DWORD PTR [eax]
  409f8d:	scas   al,BYTE PTR es:[edi]
  409f8e:	dec    eax
  409f8f:	jno    0x409f4e
  409f91:	mov    cl,0x92
  409f93:	shl    DWORD PTR [ebx-0x2c9040da],0x4e
  409f9a:	es popa 
  409f9c:	mov    cs,WORD PTR [ecx+ecx*8-0x2b659b19]
  409fa3:	cmc    
  409fa4:	bound  esi,QWORD PTR [edx]
  409fa6:	aaa    
  409fa7:	xchg   esi,eax
  409fa8:	dec    ebp
  409fa9:	xchg   esp,eax
  409faa:	and    BYTE PTR [ecx+0x27f78f81],bl
  409fb0:	dec    esi
  409fb1:	and    eax,0xa3ee59cd
  409fb6:	push   eax
  409fb7:	add    eax,0xec43ee5c
  409fbc:	test   al,0xf0
  409fbe:	inc    edx
  409fbf:	lods   eax,DWORD PTR ds:[esi]
  409fc0:	aaa    
  409fc1:	dec    ebp
  409fc2:	sbb    al,0xc5
  409fc4:	jae    0x40a01c
  409fc6:	jmp    0x8149:0xb76723c0
  409fcd:	mov    ds:0xa1f52ac8,eax
  409fd2:	fwait
  409fd3:	nop    DWORD PTR [ecx+0x54f3ae53]
  409fda:	pushf  
  409fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fdc:	inc    esp
  409fdd:	sub    eax,0xfcb1e89e
  409fe2:	inc    edx
  409fe3:	dec    edx
  409fe4:	jb     0x409f6f
  409fe6:	int3   
  409fe7:	mov    dh,bl
  409fe9:	leave  
  409fea:	xor    cl,BYTE PTR [ebx-0x47b9290b]
  409ff0:	jmp    0x40a000
  409ff2:	push   edx
  409ff3:	les    ecx,FWORD PTR [ecx-0x32]
  409ff6:	fmul   DWORD PTR [esi-0x37]
  409ff9:	pop    ds
  409ffa:	push   esi
  409ffb:	pop    ecx
  409ffc:	mov    BYTE PTR [edx+0xf],0x9a
  40a000:	sub    dl,BYTE PTR [ecx-0x6]
  40a003:	push   es
  40a004:	add    al,0x78
  40a006:	in     al,0xc8
  40a008:	repz jno 0x40a079
  40a00b:	mov    WORD PTR [esi],gs
  40a00d:	(bad)  
  40a00e:	rcr    DWORD PTR [eax-0x116aff2f],1
  40a014:	fiadd  WORD PTR [ebp+0x28]
  40a017:	inc    esp
  40a018:	sub    DWORD PTR ds:0x2c5621c5,ebp
  40a01e:	pop    eax
  40a01f:	addr16 ds sub eax,0x9c4befbe
  40a026:	shr    ecx,0xdc
  40a029:	adc    BYTE PTR [ebx+0x56],ah
  40a02c:	mov    BYTE PTR [ebx-0x650a9607],cl
  40a032:	ret    
  40a033:	push   ecx
  40a034:	xor    DWORD PTR [ecx],ebp
  40a036:	xchg   edi,eax
  40a037:	data16 sub al,0xf6
  40a03a:	pusha  
  40a03b:	add    ebx,0xffffffed
  40a03e:	lds    ebx,FWORD PTR [edi+0x23]
  40a041:	test   esp,edi
  40a043:	xor    esp,DWORD PTR [ebx-0x2b]
  40a046:	sub    al,0x4a
  40a048:	sbb    al,0xb1
  40a04a:	xchg   ebx,eax
  40a04b:	cmp    eax,0x5931371
  40a050:	neg    DWORD PTR [esi-0x48304565]
  40a056:	mov    esi,0x3e37341e
  40a05b:	pusha  
  40a05c:	push   es
  40a05d:	int3   
  40a05e:	repnz ficomp DWORD PTR [esi]
  40a061:	jmp    0x88f45c12
  40a066:	pop    edi
  40a067:	mov    edi,0xfed4043
  40a06c:	sbb    al,0x43
  40a06e:	cli    
  40a06f:	inc    esp
  40a070:	sub    eax,0xb40e0176
  40a075:	mov    ds:0x771450cd,al
  40a07a:	cli    
  40a07b:	pop    edi
  40a07c:	sbb    al,0xf
  40a07e:	lods   al,BYTE PTR ds:[esi]
  40a07f:	rol    DWORD PTR [ebp+0x7d],cl
  40a082:	data16 cmp bh,dl
  40a085:	cwde   
  40a086:	adc    DWORD PTR [eax+0x58029974],ebp
  40a08c:	out    0x63,eax
  40a08e:	repz push edx
  40a090:	int3   
  40a091:	xchg   ebp,eax
  40a092:	and    cl,BYTE PTR [ebp-0x74]
  40a095:	jbe    0x40a109
  40a097:	fcmove st,st(2)
  40a099:	mov    bl,0xd
  40a09b:	xchg   esi,eax
  40a09c:	xor    al,0x3
  40a09e:	dec    ebp
  40a09f:	std    
  40a0a0:	(bad)  
  40a0a1:	cli    
  40a0a2:	inc    edi
  40a0a3:	or     bl,BYTE PTR [edi-0x30ebb743]
  40a0a9:	inc    eax
  40a0aa:	mov    BYTE PTR [ebx-0x36],dl
  40a0ad:	test   BYTE PTR [esi+0x31c776ae],ch
  40a0b3:	lock scas eax,DWORD PTR es:[edi]
  40a0b5:	cmp    DWORD PTR [edx+0x8],0xe07ba19f
  40a0bc:	sbb    cl,BYTE PTR [eax]
  40a0be:	fldenv fs:[ecx]
  40a0c1:	push   0x8dc0efb0
  40a0c6:	pop    ebx
  40a0c7:	ja     0x40a13d
  40a0c9:	xchg   esp,eax
  40a0ca:	xor    BYTE PTR [esi],al
  40a0cc:	cmp    eax,0x74c6ce42
  40a0d1:	add    al,0x9b
  40a0d3:	arpl   bp,bp
  40a0d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0d6:	jg     0x40a122
  40a0d8:	pop    eax
  40a0d9:	in     eax,0xb1
  40a0db:	inc    eax
  40a0dc:	mov    ds:0xaa4116e5,al
  40a0e1:	stc    
  40a0e2:	push   ebp
  40a0e3:	iret   
  40a0e4:	rcr    BYTE PTR [edx+0x2647d84],0x67
  40a0eb:	dec    ecx
  40a0ec:	push   edx
  40a0ed:	inc    ecx
  40a0ee:	ja     0x40a164
  40a0f0:	(bad)  
  40a0f1:	dec    edi
  40a0f2:	xchg   eax,esp
  40a0f4:	xor    ah,BYTE PTR [edx]
  40a0f6:	(bad)  
  40a0f7:	xchg   ecx,eax
  40a0f8:	aam    0x80
  40a0fa:	mov    DWORD PTR [edi+0xab09e9e],ecx
  40a100:	push   0x1d
  40a102:	mov    edi,0xe09e8d29
  40a107:	fwait
  40a108:	jl     0x40a0eb
  40a10a:	jmp    0x46004d57
  40a10f:	into   
  40a110:	stos   DWORD PTR es:[edi],eax
  40a111:	in     eax,dx
  40a112:	scas   al,BYTE PTR es:[edi]
  40a113:	cmp    eax,0xf5eaf0d0
  40a118:	jo     0x40a0cd
  40a11a:	ss into 
  40a11c:	imul   ebx,ebx,0xffffffdd
  40a11f:	mov    dh,0xfb
  40a121:	inc    ebp
  40a122:	imul   ebx,DWORD PTR [esi+edi*4+0x4c67039e],0xfffffff1
  40a12a:	repnz push 0x8c6bb764
  40a130:	mov    edi,0x8f6e8678
  40a135:	cmp    esi,DWORD PTR [edi+0x74]
  40a138:	scas   eax,DWORD PTR es:[edi]
  40a139:	mov    ds,WORD PTR [eax+0xf]
  40a13c:	add    dh,dl
  40a13e:	stos   DWORD PTR es:[edi],eax
  40a13f:	adc    cl,dl
  40a141:	mov    al,ds:0x58424caa
  40a146:	cmp    BYTE PTR [ebx],ah
  40a148:	call   0x3054:0xc5517d99
  40a14f:	pop    ecx
  40a150:	stos   DWORD PTR es:[edi],eax
  40a151:	daa    
  40a152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a153:	xor    al,0xe8
  40a155:	not    DWORD PTR [ebx]
  40a157:	mov    ds:0x9573a00c,al
  40a15c:	xor    edi,DWORD PTR [ebx-0x4a]
  40a15f:	fwait
  40a160:	mov    cl,ah
  40a162:	sbb    bl,BYTE PTR [esi+esi*1-0xf3d48f7]
  40a169:	int3   
  40a16a:	pusha  
  40a16b:	jae    0x40a199
  40a16d:	lods   eax,DWORD PTR ds:[esi]
  40a16e:	inc    ebx
  40a16f:	cmp    BYTE PTR [ecx],0xc6
  40a172:	ret    0x4158
  40a175:	xor    eax,0x7d4279f
  40a17a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a17b:	dec    ecx
  40a17c:	xchg   ebx,eax
  40a17d:	and    esi,esp
  40a17f:	fadd   st(1),st
  40a181:	lds    edx,FWORD PTR [ebx+0x44]
  40a184:	inc    edx
  40a185:	arpl   WORD PTR [ebx+0x8],sp
  40a188:	xchg   ebx,eax
  40a189:	mov    esi,0xddc3591c
  40a18e:	adc    bl,cl
  40a190:	scas   al,BYTE PTR es:[edi]
  40a191:	jg     0x40a1e2
  40a193:	repnz sub edi,DWORD PTR fs:[ecx]
  40a197:	xchg   esp,eax
  40a198:	jno    0x40a154
  40a19a:	data16 mov dl,0x4
  40a19d:	lea    ecx,[ebx+eiz*8]
  40a1a0:	mov    al,0x6a
  40a1a2:	sahf   
  40a1a3:	test   DWORD PTR [eax-0x131cb375],ecx
  40a1a9:	jb     0x40a180
  40a1ab:	(bad)  
  40a1ac:	in     al,dx
  40a1ad:	in     eax,0xdd
  40a1af:	shl    DWORD PTR [ecx-0x769a79cc],1
  40a1b5:	cmp    edi,edx
  40a1b7:	dec    ecx
  40a1b8:	dec    edi
  40a1b9:	loope  0x40a18e
  40a1bb:	mov    bh,0x9d
  40a1bd:	sub    eax,0x7aafe7e4
  40a1c2:	lahf   
  40a1c3:	lahf   
  40a1c4:	sub    esp,DWORD PTR [ebx+0x7e01a205]
  40a1ca:	shl    DWORD PTR ds:0x5720ea6b,1
  40a1d0:	and    eax,0xec129f04
  40a1d5:	push   ebp
  40a1d6:	pop    esp
  40a1d7:	mov    al,0xd9
  40a1d9:	mov    ch,0x62
  40a1db:	leave  
  40a1dc:	push   es
  40a1dd:	add    eax,DWORD PTR [ebp-0x1c383b3]
  40a1e3:	lds    ecx,FWORD PTR [edx]
  40a1e5:	mov    ds:0x1fcdcd45,al
  40a1ea:	mov    bh,0xbf
  40a1ec:	fs clc 
  40a1ee:	cli    
  40a1ef:	stc    
  40a1f0:	inc    DWORD PTR [edi+0x7c]
  40a1f3:	in     al,0x99
  40a1f5:	mov    ch,0x4
  40a1f7:	xchg   ebx,eax
  40a1f8:	sbb    DWORD PTR [edx],ebx
  40a1fa:	fs jp  0x40a22d
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	mov    edx,0x2728f407
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	mov    dh,0x1a
  40a5f6:	push   0x212113d
  40a5fb:	or     cl,BYTE PTR [ecx+0x63]
  40a5fe:	(bad)  
  40a5ff:	adc    DWORD PTR [esi-0x3a],0x38
  40a603:	sbb    BYTE PTR cs:[eax-0x2c0dbc51],0xb2
  40a60b:	xchg   ebx,eax
  40a60c:	in     eax,0xda
  40a60e:	adc    al,0x22
  40a610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a611:	jne    0x40a5ca
  40a613:	or     edx,ebx
  40a615:	nop
  40a616:	fsubr  DWORD PTR ds:0xe332ac5a
  40a61c:	or     BYTE PTR [edx+0x6e],dh
  40a61f:	cwde   
  40a620:	loop   0x40a668
  40a622:	or     al,0x0
  40a624:	pusha  
  40a625:	mov    bh,0xfc
  40a627:	push   ss
  40a628:	dec    ebp
  40a629:	int3   
  40a62a:	dec    ebp
  40a62b:	dec    ecx
  40a62c:	mov    DWORD PTR [eax+0xbd76de3],edi
  40a632:	fwait
  40a633:	imul   ebp,ebp,0x699cea46
  40a639:	inc    eax
  40a63a:	fadd   DWORD PTR [esp+edi*4-0x5b]
  40a63e:	push   eax
  40a63f:	call   0x89ef328c
  40a644:	jmp    0x9f96cf79
  40a649:	dec    esi
  40a64a:	aad    0x1a
  40a64c:	jo     0x40a5cf
  40a64e:	call   0x91864dd9
  40a653:	sbb    BYTE PTR [ebp-0x1e],bh
  40a656:	scas   eax,DWORD PTR es:[edi]
  40a657:	pusha  
  40a658:	mov    ecx,0x6f3d05ea
  40a65e:	in     eax,dx
  40a65f:	mov    ds:0x8dfedd69,eax
  40a664:	xor    edi,DWORD PTR [edi]
  40a666:	push   ebx
  40a667:	ja     0x40a647
  40a669:	mov    ebx,0x7a40aeb0
  40a66e:	adc    ebx,esp
  40a670:	jo     0x40a6be
  40a672:	lea    esi,[ebx-0x2d]
  40a675:	mov    BYTE PTR [edi-0x70789710],bl
  40a67b:	(bad)  
  40a67c:	imul   ebx,DWORD PTR [ebx],0xb0711d76
  40a682:	lds    esp,FWORD PTR [ebx+eax*1-0xe]
  40a686:	dec    ecx
  40a687:	fdivr  QWORD PTR [eax+ebp*8-0x20]
  40a68b:	lods   eax,DWORD PTR ds:[esi]
  40a68c:	sahf   
  40a68d:	pop    es
  40a68e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a68f:	push   esp
  40a690:	call   0xa73762b7
  40a695:	pop    esp
  40a696:	out    dx,eax
  40a697:	icebp  
  40a698:	pushf  
  40a699:	lahf   
  40a69a:	xchg   esp,eax
  40a69b:	and    al,0xe6
  40a69d:	jle    0x40a64a
  40a69f:	pop    esp
  40a6a0:	pop    ecx
  40a6a1:	sbb    ebp,DWORD PTR [ebx-0x5ea6e27c]
  40a6a7:	push   0xffffffa8
  40a6a9:	stc    
  40a6aa:	mov    edx,0x25c43399
  40a6af:	mov    ah,0xbb
  40a6b1:	and    ebp,DWORD PTR [edi]
  40a6b3:	ins    BYTE PTR es:[edi],dx
  40a6b4:	std    
  40a6b5:	cwde   
  40a6b6:	xlat   BYTE PTR cs:[ebx]
  40a6b8:	mov    esp,0x55ab49f9
  40a6bd:	sub    eax,DWORD PTR [ecx-0x4b0dbb66]
  40a6c3:	in     eax,dx
  40a6c4:	ja     0x40a667
  40a6c6:	adc    cl,BYTE PTR [ebx+0x35]
  40a6c9:	add    al,BYTE PTR [ebx+0x119c848c]
  40a6cf:	inc    ebp
  40a6d0:	add    esp,ecx
  40a6d2:	in     al,dx
  40a6d3:	mov    eax,ds:0xd7baf97f
  40a6d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6d9:	shl    BYTE PTR [ebx],0xee
  40a6dc:	or     dl,BYTE PTR ds:0xbd3fa28c
  40a6e2:	cmp    dh,BYTE PTR [esp+ebp*8-0x41]
  40a6e6:	jns    0x40a6a4
  40a6e8:	pop    ss
  40a6e9:	inc    DWORD PTR [ebp+0x1a8d0e5a]
  40a6ef:	sbb    eax,0x99e333f1
  40a6f4:	adc    BYTE PTR ss:[eax+edx*4],dl
  40a6f8:	pop    ds
  40a6f9:	repz aad 0x0
  40a6fc:	xlat   BYTE PTR ds:[ebx]
  40a6fd:	jecxz  0x40a723
  40a6ff:	(bad)  [ebp-0x11]
  40a702:	inc    ebp
  40a703:	xlat   BYTE PTR ds:[ebx]
  40a704:	jle    0x40a6e1
  40a706:	retf   0x415d
  40a709:	stos   DWORD PTR es:[edi],eax
  40a70a:	loopne 0x40a6b1
  40a70c:	cmp    BYTE PTR [eax+0x10],dh
  40a70f:	sbb    BYTE PTR [esi],0x5e
  40a712:	fisubr DWORD PTR [esi-0x1278dd95]
  40a718:	push   eax
  40a719:	or     BYTE PTR [ebx+edi*2+0x6d099618],al
  40a720:	push   ebp
  40a721:	cs loop 0x40a764
  40a724:	sub    bl,dh
  40a726:	push   edi
  40a727:	jo     0x40a6d0
  40a729:	cmp    al,0xd
  40a72b:	jbe    0x40a6e3
  40a72d:	dec    esi
  40a72e:	push   ebx
  40a72f:	sar    DWORD PTR [eax-0x2e],0x4f
  40a733:	pusha  
  40a734:	jge    0x40a6ec
  40a736:	pop    esp
  40a737:	mov    ds:0x6437a1a2,eax
  40a73c:	inc    esi
  40a73d:	push   ebx
  40a73e:	inc    edi
  40a73f:	sbb    eax,DWORD PTR [esi*2+0x95a9b07]
  40a746:	mov    ebx,0x16fbceb7
  40a74b:	mov    dh,0xb9
  40a74d:	int    0xd3
  40a74f:	push   ebx
  40a750:	jne    0x40a737
  40a752:	adc    al,0xed
  40a754:	lahf   
  40a755:	ja     0x40a730
  40a757:	not    BYTE PTR [edx+edi*2]
  40a75a:	sub    BYTE PTR [ecx+edi*8+0x33664c33],0x32
  40a762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a763:	push   ds
  40a764:	iret   
  40a765:	adc    eax,0xac7d2546
  40a76a:	push   cs
  40a76b:	jl     0x40a709
  40a76d:	push   ss
  40a76e:	jge    0x40a73f
  40a770:	stc    
  40a771:	add    ebp,ebp
  40a773:	xchg   ecx,eax
  40a774:	cmp    BYTE PTR [ebp+0x3431fc9e],ch
  40a77a:	xchg   esp,eax
  40a77b:	xchg   esp,ecx
  40a77d:	repnz mov cl,0xba
  40a780:	(bad)  
  40a781:	pop    edi
  40a782:	mov    bh,0x4d
  40a784:	xor    al,0xd6
  40a786:	neg    BYTE PTR [esi-0x437c05ab]
  40a78c:	int3   
  40a78d:	add    DWORD PTR [edx-0x3b6b64f9],eax
  40a793:	fcmove st,st(2)
  40a795:	mov    al,0x3b
  40a797:	imul   esp,DWORD PTR [eax+0x74],0x11
  40a79b:	sbb    BYTE PTR [ebx],al
  40a79d:	adc    al,BYTE PTR [edx+0x28]
  40a7a0:	ror    BYTE PTR [ebp-0x11],1
  40a7a3:	or     al,BYTE PTR [ebp-0x4aa8fc95]
  40a7a9:	lahf   
  40a7aa:	je     0x40a813
  40a7ac:	push   cs
  40a7ad:	into   
  40a7ae:	dec    ebx
  40a7af:	fisub  WORD PTR [ebp-0x37d15fbb]
  40a7b5:	cli    
  40a7b6:	cmp    ecx,esi
  40a7b8:	jb     0x40a7a6
  40a7ba:	cmp    ecx,DWORD PTR [esi-0x6de3d88]
  40a7c0:	icebp  
  40a7c1:	pop    edx
  40a7c2:	mov    ebx,0xbd3ba1d6
  40a7c7:	(bad)  
  40a7c8:	xor    ecx,DWORD PTR [edi-0x6d]
  40a7cb:	pop    ebx
  40a7cc:	es (bad) 
  40a7ce:	jo     0x40a787
  40a7d0:	lods   al,BYTE PTR ds:[esi]
  40a7d1:	or     ah,ch
  40a7d3:	xor    ecx,DWORD PTR [eax-0x18775204]
  40a7d9:	repz leave 
  40a7db:	adc    DWORD PTR [edi],edi
  40a7dd:	xchg   esp,eax
  40a7de:	in     eax,dx
  40a7df:	jbe    0x40a7a1
  40a7e1:	and    ebx,eax
  40a7e3:	jo     0x40a7ed
  40a7e5:	(bad)  
  40a7e6:	out    dx,al
  40a7e7:	inc    al
  40a7e9:	sub    eax,0x2df9e201
  40a7ee:	push   ebp
  40a7ef:	add    ebp,edx
  40a7f1:	scas   al,BYTE PTR es:[edi]
  40a7f2:	test   BYTE PTR [ebp-0x26],cl
  40a7f5:	mov    bl,bl
  40a7f7:	push   esp
  40a7f8:	repz cdq 
  40a7fa:	dec    ecx
  40a7fb:	out    dx,al
  40a7fc:	aaa    
  40a7fd:	pop    ecx
  40a7fe:	aaa    
  40a7ff:	pop    ss
  40a800:	mov    cl,0x17
  40a802:	or     esi,DWORD PTR [eax]
  40a804:	dec    edx
  40a805:	lds    ebx,FWORD PTR [ebx+eiz*1+0x51]
  40a809:	(bad)  
  40a80a:	test   DWORD PTR [edi+0x57],edi
  40a80d:	out    0x63,eax
  40a80f:	pop    ebx
  40a810:	and    al,0xf0
  40a812:	or     DWORD PTR [ebx+eiz*4+0x201e5e6f],edi
  40a819:	xor    DWORD PTR [ebp-0x6b],ebp
  40a81c:	icebp  
  40a81d:	leave  
  40a81e:	push   edx
  40a81f:	out    0x28,eax
  40a821:	mov    ds:0x637539a5,eax
  40a826:	dec    edi
  40a827:	nop
  40a828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a829:	mov    al,0x86
  40a82b:	mov    bh,0x67
  40a82d:	(bad)  
  40a82e:	js     0x40a846
  40a830:	mov    eax,ds:0xaa7e4769
  40a835:	or     al,0x24
  40a837:	out    0x9c,eax
  40a839:	sbb    ecx,edi
  40a83b:	or     eax,esp
  40a83d:	into   
  40a83e:	mov    ecx,DWORD PTR [ebp+0x53]
  40a841:	inc    ebp
  40a842:	or     ah,dh
  40a844:	out    dx,al
  40a845:	test   BYTE PTR [ebx-0x63],0xa7
  40a849:	enterw 0x988e,0x8
  40a84e:	jne    0x40a819
  40a850:	sub    eax,0xcb6620cb
  40a855:	lahf   
  40a856:	enter  0x67a3,0x9d
  40a85a:	cmp    ecx,DWORD PTR [ecx]
  40a85c:	xor    al,0xdc
  40a85f:	sbb    BYTE PTR [ecx+0x360a95d],ah
  40a865:	mov    ds:0xeaed6480,al
  40a86a:	ficomp WORD PTR [edi-0x56]
  40a86d:	sub    eax,0xca979ac5
  40a872:	or     BYTE PTR [edx+0x6f],ch
  40a875:	lock sahf 
  40a877:	inc    eax
  40a878:	cdq    
  40a879:	mov    ebx,0xb439d99e
  40a87e:	dec    esi
  40a87f:	andnps xmm6,XMMWORD PTR [esi+eax*2]
  40a883:	popa   
  40a884:	mov    eax,ds:0xa4e8398
  40a889:	stos   BYTE PTR es:[edi],al
  40a88a:	pop    ss
  40a88b:	test   DWORD PTR [edi],edx
  40a88d:	ja     0x40a83f
  40a88f:	xor    eax,0x2eeb9d33
  40a894:	sbb    DWORD PTR [ebp-0x13c32904],esi
  40a89a:	test   ebx,esp
  40a89c:	aas    
  40a89d:	clc    
  40a89e:	xor    al,0x22
  40a8a0:	add    BYTE PTR [esi+0x2a],dh
  40a8a3:	mov    dh,0x5
  40a8a5:	dec    bp
  40a8a7:	das    
  40a8a8:	mov    esp,0xc3a11af0
  40a8ad:	or     al,BYTE PTR [eax]
  40a8af:	xor    DWORD PTR [ebx+0x47],edi
  40a8b2:	gs pop edx
  40a8b4:	inc    esi
  40a8b5:	and    DWORD PTR [ebp-0x6cc4b5e1],ebx
  40a8bb:	repz mov edi,0x4d57964b
  40a8c1:	bound  ecx,QWORD PTR [eax-0x17]
  40a8c4:	xlat   BYTE PTR ds:[ebx]
  40a8c5:	loop   0x40a86e
  40a8c7:	mov    ch,bh
  40a8c9:	dec    esi
  40a8ca:	inc    ebp
  40a8cb:	imul   ebp,ebx,0x7
  40a8ce:	or     eax,0xeda8632a
  40a8d3:	mov    eax,ds:0x8339da5
  40a8d8:	adc    al,0xa4
  40a8da:	and    BYTE PTR [ecx+0xc],bh
  40a8dd:	add    DWORD PTR [edi+esi*8],0x843faf2d
  40a8e4:	inc    eax
  40a8e5:	scas   al,BYTE PTR es:[edi]
  40a8e6:	and    ebx,DWORD PTR [ebx+0x7a]
  40a8e9:	mov    al,ds:0x23fc170
  40a8ee:	mov    ds:0xb8dc8f0b,al
  40a8f3:	and    ah,BYTE PTR [eax+0x265f1751]
  40a8f9:	outs   dx,DWORD PTR ds:[esi]
  40a8fa:	idiv   BYTE PTR [edi-0x8]
  40a8fd:	sub    eax,0xd7e260dc
  40a902:	xchg   ecx,eax
  40a903:	xchg   edi,edi
  40a905:	add    bl,BYTE PTR [esi]
  40a907:	sti    
  40a908:	es popa 
  40a90a:	daa    
  40a90b:	cmp    al,0xe2
  40a90d:	stc    
  40a90e:	fidiv  DWORD PTR [eax+0xd]
  40a911:	inc    eax
  40a912:	add    al,0x9a
  40a914:	jecxz  0x40a8d5
  40a916:	in     al,dx
  40a917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a918:	pop    ebx
  40a919:	outs   dx,BYTE PTR ds:[esi]
  40a91a:	jb     0x40a989
  40a91c:	ins    DWORD PTR es:[edi],dx
  40a91d:	inc    ebp
  40a91e:	addr16 jae 0x40a92d
  40a921:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a923:	icebp  
  40a924:	aaa    
  40a925:	inc    ebx
  40a926:	jnp    0x40a941
  40a928:	cld    
  40a929:	outs   dx,DWORD PTR ds:[esi]
  40a92a:	rcl    DWORD PTR [edx],0x36
  40a92d:	lea    esi,[esi+0x40633968]
  40a933:	test   dh,bl
  40a935:	inc    esp
  40a936:	les    eax,FWORD PTR [ecx]
  40a938:	ds inc esp
  40a93a:	daa    
  40a93b:	rcr    BYTE PTR [ebx+edi*2],0xd1
  40a93f:	jnp    0x40a973
  40a941:	(bad)  
  40a942:	jg     0x40a96a
  40a944:	adc    bl,BYTE PTR [edx-0x3c167b0a]
  40a94a:	fwait
  40a94b:	sub    BYTE PTR [edi+eax*2],cl
  40a94e:	mov    dh,0x6f
  40a950:	ror    esi,cl
  40a952:	sbb    eax,0xed93c67
  40a957:	cmp    ecx,ebx
  40a959:	mov    ?,WORD PTR [ecx+esi*1-0x17]
  40a95d:	sub    al,0xf
  40a95f:	inc    ecx
  40a960:	pusha  
  40a961:	(bad)  
  40a962:	jle    0x40a90a
  40a964:	push   esp
  40a965:	sbb    al,al
  40a967:	xchg   esi,eax
  40a968:	push   ebp
  40a969:	sahf   
  40a96a:	jg     0x40a8fb
  40a96c:	xor    eax,0xe08a0729
  40a971:	inc    esi
  40a972:	ins    DWORD PTR es:[edi],dx
  40a973:	sbb    ebx,DWORD PTR fs:[edx+0x67199bc6]
  40a97a:	xchg   edx,eax
  40a97b:	fisubr DWORD PTR [ebx+0x299349fb]
  40a981:	inc    ebx
  40a982:	pop    ebp
  40a983:	pop    eax
  40a984:	xor    ecx,edx
  40a986:	clc    
  40a987:	scas   al,BYTE PTR es:[edi]
  40a988:	mov    esi,ds
  40a98a:	mov    al,0x39
  40a98c:	pusha  
  40a98d:	sbb    bl,ah
  40a98f:	inc    ebx
  40a990:	popf   
  40a991:	push   ss
  40a992:	pop    edx
  40a993:	push   ebx
  40a994:	pop    ecx
  40a995:	(bad)  [ebx+ecx*2-0x4e]
  40a999:	arpl   bp,si
  40a99b:	cmp    BYTE PTR [esi+0x39e55dec],bl
  40a9a1:	fmul   st,st(2)
  40a9a3:	mov    ecx,DWORD PTR [ebx]
  40a9a5:	or     edi,DWORD PTR [ebp+0x24]
  40a9a8:	ret    0x9efc
  40a9ab:	ret    
  40a9ac:	xchg   DWORD PTR [edi+0x11],ecx
  40a9af:	adc    ah,BYTE PTR [ecx+0x319dee18]
  40a9b5:	and    eax,0x5961707
  40a9ba:	retf   0x61cb
  40a9bd:	out    0x44,eax
  40a9bf:	mov    ds:0xb48fe71a,al
  40a9c4:	and    ebx,DWORD PTR [eax-0x3d]
  40a9c7:	int3   
  40a9c8:	dec    ebp
  40a9c9:	xor    al,0xf1
  40a9cb:	clc    
  40a9cc:	repz sub ebx,DWORD PTR [ecx+0x17]
  40a9d0:	mov    dl,0xbb
  40a9d2:	fdiv   DWORD PTR [edx+0x3ddd729c]
  40a9d8:	rol    DWORD PTR [ecx-0xff23ca7],1
  40a9de:	shl    DWORD PTR [ebx+edi*1-0x78],cl
  40a9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e3:	push   es
  40a9e4:	fwait
  40a9e5:	repz mov esp,0x780b805f
  40a9eb:	pop    esp
  40a9ec:	iret   
  40a9ed:	imul   edx,edi,0xffffffe2
  40a9f0:	cmp    DWORD PTR ds:[edx-0x1f1a2982],0x72cec06a
  40a9fb:	jmp    0x40aa1c
  40a9fd:	aad    0xb4
  40a9ff:	(bad)  
  40aa00:	clc    
  40aa01:	sub    esi,eax
  40aa03:	fs jne 0x40a9b5
  40aa06:	and    esi,DWORD PTR [esi]
  40aa08:	push   esi
  40aa09:	mov    dh,0x4a
  40aa0b:	retf   0x4812
  40aa0e:	addps  xmm2,XMMWORD PTR [edx-0x12db0f76]
  40aa15:	cwde   
  40aa16:	daa    
  40aa17:	pop    ecx
  40aa18:	aad    0x8
  40aa1a:	jl     0x40a9a1
  40aa1c:	jge    0x40aa2d
  40aa1e:	dec    esi
  40aa1f:	jp     0x40aa56
  40aa21:	pop    ds
  40aa22:	les    ebx,FWORD PTR [esi]
  40aa24:	xlat   BYTE PTR ds:[ebx]
  40aa25:	inc    edi
  40aa26:	sub    dh,ch
  40aa28:	inc    ebp
  40aa29:	in     eax,0xa9
  40aa2b:	rcr    BYTE PTR [esi+0x60],0x65
  40aa2f:	mov    esi,0x53ec13a0
  40aa34:	pop    edx
  40aa35:	call   0x845:0x2383ae17
  40aa3c:	add    eax,0xaa86f601
  40aa41:	imul   ebp,edx,0x3617568a
  40aa47:	ror    DWORD PTR [ebp-0x1],1
  40aa4a:	xchg   edx,eax
  40aa4b:	or     esp,DWORD PTR [ecx+0x7e]
  40aa4e:	fs push 0x10
  40aa51:	push   es
  40aa52:	out    dx,al
  40aa53:	jmp    0xd1e2:0x9d91037c
  40aa5a:	jmp    0x2911f1ec
  40aa5f:	jno    0x40aa31
  40aa61:	ja     0x40aa11
  40aa63:	or     eax,0xbaccf390
  40aa68:	add    eax,DWORD PTR [esi-0x4b]
  40aa6b:	pusha  
  40aa6c:	(bad)  
  40aa6d:	sar    BYTE PTR ds:0x786c53ef,1
  40aa73:	adc    eax,0xa5347119
  40aa78:	mov    eax,ds:0xe36467f9
  40aa7d:	add    al,0x60
  40aa7f:	mov    eax,DWORD PTR [ebp+0x49]
  40aa82:	(bad)  
  40aa83:	out    dx,al
  40aa84:	hlt    
  40aa85:	or     DWORD PTR [ebp-0xbd5784a],esp
  40aa8b:	jnp    0x40aab7
  40aa8d:	dec    ebp
  40aa8e:	imul   esi,DWORD PTR gs:[edi-0x14],0xffffffd4
  40aa93:	xchg   ecx,eax
  40aa94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa95:	icebp  
  40aa96:	adc    BYTE PTR ds:0x258c9267,ah
  40aa9c:	(bad)  
  40aa9d:	popa   
  40aa9e:	cmc    
  40aa9f:	or     al,0xcf
  40aaa1:	sbb    BYTE PTR [ebx+edx*1-0x42],al
  40aaa5:	add    DWORD PTR [ebp+0x2c],0xa253369b
  40aaac:	lea    edx,ds:0xfe8765aa
  40aab2:	arpl   di,cx
  40aab4:	fadd   st,st(5)
  40aab6:	jp     0x40aade
  40aab8:	js     0x40aa4f
  40aaba:	sar    DWORD PTR [ebx-0x1b9f3cc3],cl
  40aac0:	in     eax,dx
  40aac1:	out    0x3a,al
  40aac3:	imul   ecx,DWORD PTR [esi+0x2a],0x4f27872c
  40aaca:	dec    ecx
  40aacb:	dec    ebx
  40aacc:	xor    ch,0x74
  40aacf:	scas   al,BYTE PTR es:[edi]
  40aad0:	inc    esp
  40aad1:	dec    ecx
  40aad2:	xchg   ecx,eax
  40aad3:	xchg   edi,eax
  40aad4:	and    eax,0x6302eb38
  40aad9:	cdq    
  40aada:	(bad)  
  40aadb:	out    dx,eax
  40aadc:	xchg   esp,eax
  40aadd:	dec    ebp
  40aade:	mov    bh,ah
  40aae0:	xchg   edi,eax
  40aae1:	push   edx
  40aae2:	aad    0xea
  40aae4:	mov    esp,0x84a4fb80
  40aae9:	ret    0xfa2e
  40aaec:	fdivr  DWORD PTR ds:0x640c5f22
  40aaf2:	sub    al,0x9b
  40aaf4:	fs mov esi,0x95f3a3ec
  40aafa:	mov    bl,0xd
  40aafc:	minps  xmm7,xmm1
  40aaff:	ds jmp 0x7e39147d
  40ab05:	lock outs dx,BYTE PTR ds:[esi]
  40ab07:	pop    ebp
  40ab08:	jge    0x40ab74
  40ab0a:	mov    al,ds:0x98709c75
  40ab0f:	icebp  
  40ab10:	and    eax,0x4b4eccc6
  40ab15:	out    dx,al
  40ab16:	sub    eax,0xaeb6332d
  40ab1b:	stc    
  40ab1c:	test   al,cl
  40ab1e:	mov    ch,0x79
  40ab20:	mov    esp,0x4c14ee6b
  40ab25:	jle    0x40aadb
  40ab27:	mov    edx,eax
  40ab29:	jmp    0xf43b:0xc670dc89
  40ab30:	mov    ds:0xfb25c157,al
  40ab35:	out    dx,al
  40ab36:	outs   dx,BYTE PTR ds:[esi]
  40ab37:	in     eax,dx
  40ab38:	aad    0x86
  40ab3a:	out    0x96,eax
  40ab3c:	push   es
  40ab3d:	push   cs
  40ab3e:	pop    esp
  40ab3f:	cmp    eax,0x5d9a6ee1
  40ab44:	out    dx,al
  40ab45:	push   es
  40ab46:	cld    
  40ab47:	jae    0x40ab05
  40ab49:	repnz lock mov ah,0x7c
  40ab4d:	ins    DWORD PTR es:[edi],dx
  40ab4e:	test   al,0x2c
  40ab50:	popa   
  40ab51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab52:	inc    esp
  40ab53:	mov    ch,BYTE PTR [eax]
  40ab55:	xor    BYTE PTR [ebx+0x662451fb],bh
  40ab5b:	mov    ecx,0x52d3299a
  40ab61:	sbb    al,0xb5
  40ab63:	in     eax,0xfc
  40ab65:	push   es
  40ab66:	ins    BYTE PTR es:[edi],dx
  40ab67:	mov    dl,0x2
  40ab69:	sub    bl,BYTE PTR ds:0xd4f52dfb
  40ab6f:	cdq    
  40ab70:	fild   QWORD PTR [ebp-0xf]
  40ab73:	sti    
  40ab74:	pop    edi
  40ab75:	clc    
  40ab76:	jmp    0x217ba8dd
  40ab7b:	rcl    BYTE PTR [ebx-0x494abb55],0xce
  40ab82:	jnp    0x40aba8
  40ab84:	pushf  
  40ab85:	iretw  
  40ab87:	xchg   esi,eax
  40ab88:	jle    0x40ab71
  40ab8a:	pop    esp
  40ab8b:	daa    
  40ab8c:	pop    edx
  40ab8d:	(bad)  
  40ab8e:	jg     0x40ab2b
  40ab90:	fxch   st(4)
  40ab92:	jecxz  0x40abcb
  40ab94:	xlat   BYTE PTR ds:[ebx]
  40ab95:	and    bh,BYTE PTR [esp+edx*8]
  40ab98:	sbb    ah,ch
  40ab9a:	repz shr DWORD PTR [eax+0x62b5f962],cl
  40aba1:	popa   
  40aba2:	pop    esi
  40aba3:	jo     0x40abcc
  40aba5:	std    
  40aba6:	jge    0x40abd7
  40aba8:	sbb    ecx,DWORD PTR [edx-0x5a]
  40abab:	sbb    al,BYTE PTR [edi]
  40abad:	dec    ebx
  40abae:	retf   0x49dd
  40abb1:	sub    al,0xac
  40abb3:	repnz cli 
  40abb5:	int    0xf6
  40abb7:	push   edx
  40abb8:	sbb    bh,BYTE PTR [eax+0x4]
  40abbb:	cdq    
  40abbc:	cld    
  40abbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abbe:	mov    ch,0x21
  40abc0:	xchg   ecx,eax
  40abc1:	xor    al,0x25
  40abc3:	test   al,0x52
  40abc5:	fwait
  40abc6:	lds    edi,FWORD PTR [ebp+0xdb782df]
  40abcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abcd:	jl     0x40ac2d
  40abcf:	push   esp
  40abd0:	mov    esp,0x350c23e5
  40abd5:	lods   al,BYTE PTR ds:[esi]
  40abd6:	sbb    DWORD PTR [edx+0x0],edx
  40abd9:	int3   
  40abda:	cs or  eax,0x484af9c1
  40abe0:	pop    edi
  40abe1:	scas   eax,DWORD PTR es:[edi]
  40abe2:	fs mov ah,0x37
  40abe5:	sub    DWORD PTR [edi+eax*8+0x2c],ebx
  40abe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abea:	pop    edi
  40abeb:	jg     0x40aba3
  40abed:	jno    0x40abd1
  40abef:	out    dx,al
  40abf0:	and    BYTE PTR [ecx],dh
  40abf2:	lea    ecx,[ecx-0x27]
  40abf5:	adc    eax,0x74953768
  40abfa:	or     BYTE PTR [edx-0x34],0x57
  40abfe:	dec    ebp
  40abff:	loopne 0x40ac32
  40ac01:	fadd   DWORD PTR [ecx]
  40ac03:	or     BYTE PTR [esi-0x1f],ah
  40ac06:	xchg   edx,eax
  40ac07:	cdq    
  40ac08:	fimul  DWORD PTR [eax+0x18]
  40ac0b:	push   edx
  40ac0c:	loop   0x40ab98
  40ac0e:	push   ebp
  40ac0f:	pushf  
  40ac10:	jmp    0x40ac68
  40ac12:	push   ss
  40ac13:	repz or edi,edx
  40ac16:	mov    edx,0x318e6816
  40ac1b:	test   BYTE PTR [edx+0x1d],dh
  40ac1e:	sbb    al,cl
  40ac20:	xchg   esi,eax
  40ac21:	xchg   BYTE PTR [ecx+0x6465d181],bl
  40ac27:	sbb    edx,ebp
  40ac29:	repnz push 0x1c
  40ac2c:	sahf   
  40ac2d:	out    0x60,al
  40ac2f:	in     eax,0x88
  40ac31:	adc    DWORD PTR [esi-0x3a],edi
  40ac34:	add    bh,BYTE PTR [eax+0x5228038f]
  40ac3a:	retf   0x81fa
  40ac3d:	mov    eax,ds:0x18374a7e
  40ac42:	outs   dx,DWORD PTR ds:[esi]
  40ac43:	adc    DWORD PTR [ecx+edi*1+0x6969acf4],ecx
  40ac4a:	or     esp,DWORD PTR [ecx-0x30]
  40ac4d:	adc    DWORD PTR [eax-0x6d928238],ecx
  40ac53:	sub    BYTE PTR [edi+ecx*4],bh
  40ac56:	jl     0x40acb1
  40ac58:	inc    ecx
  40ac59:	adc    edi,DWORD PTR [eax+0x3d]
  40ac5c:	pop    ecx
  40ac5d:	sbb    esi,DWORD PTR [edi+0x51]
  40ac60:	push   eax
  40ac61:	mov    ch,0x57
  40ac63:	inc    esi
  40ac64:	jge    0x40ac54
  40ac66:	pop    edi
  40ac67:	and    eax,DWORD PTR [edx+0x74]
  40ac6a:	and    eax,0x77ba084e
  40ac6f:	clc    
  40ac70:	in     eax,0x3b
  40ac72:	shl    ebx,cl
  40ac74:	mov    edx,0x8fcff336
  40ac79:	mov    BYTE PTR [edi+0x6b49d69],ah
  40ac7f:	cs sbb eax,0x7f045bfc
  40ac85:	nop
  40ac86:	sbb    DWORD PTR [ecx-0x7b],esp
  40ac89:	(bad)  
  40ac8a:	and    DWORD PTR [edi-0x5ab1983a],ebx
  40ac90:	pushf  
  40ac91:	push   0xffffffcb
  40ac93:	mov    bh,0x6e
  40ac95:	mov    al,ds:0x699ed603
  40ac9a:	fnstenv [ecx+0x4d]
  40ac9d:	popa   
  40ac9e:	test   DWORD PTR [esi+0x13],0x78a04d80
  40aca5:	nop
  40aca6:	dec    edx
  40aca7:	pushf  
  40aca8:	inc    edi
  40aca9:	pop    ebp
  40acaa:	jne    0x40ac40
  40acac:	add    dh,BYTE PTR [edx+ebp*4-0x3d]
  40acb0:	xchg   esi,eax
  40acb1:	add    eax,0x173b74c
  40acb6:	xor    BYTE PTR [ecx-0x7ff5ea87],dh
  40acbc:	rol    dh,0x3e
  40acbf:	pop    edx
  40acc0:	test   BYTE PTR [ebx-0x5eb12064],dh
  40acc6:	pop    ebx
  40acc7:	inc    ecx
  40acc8:	icebp  
  40acc9:	sahf   
  40acca:	adc    dh,cl
  40accc:	push   ds
  40accd:	fwait
  40acce:	and    esp,DWORD PTR [edi-0xdcaaaea]
  40acd4:	mov    ah,0xbe
  40acd6:	rol    BYTE PTR [eax],1
  40acd8:	rol    BYTE PTR [ecx+0x601c6dce],0x6
  40acdf:	scas   al,BYTE PTR es:[edi]
  40ace0:	adc    eax,0x98d45ba
  40ace5:	pop    esp
  40ace6:	dec    edi
  40ace7:	pop    edx
  40ace8:	js     0x40ad4c
  40acea:	jns    0x40ad67
  40acec:	ins    BYTE PTR es:[edi],dx
  40aced:	add    bl,bl
  40acef:	shl    BYTE PTR [eax+0x25],0xbc
  40acf3:	cmp    al,0xae
  40acf5:	ret    
  40acf6:	lods   eax,DWORD PTR ds:[esi]
  40acf7:	hlt    
  40acf8:	and    eax,0xfdc2fa7a
  40acfd:	jl     0x40ad7e
  40acff:	imul   ecx,DWORD PTR [edi+0x54],0x77dac1af
  40ad06:	sub    esi,eax
  40ad08:	(bad)  
  40ad09:	out    0xe8,eax
  40ad0b:	fwait
  40ad0c:	adc    bl,BYTE PTR [ecx]
  40ad0e:	scas   al,BYTE PTR es:[edi]
  40ad0f:	dec    ebp
  40ad10:	add    eax,0xa58f1149
  40ad15:	jp     0x40ad12
  40ad17:	adc    BYTE PTR [eax+edx*1-0x57],cl
  40ad1b:	retf   0x98f0
  40ad1e:	pop    ss
  40ad1f:	call   0x859f:0xee49bcf1
  40ad26:	ja     0x40acd4
  40ad28:	in     al,dx
  40ad29:	imul   eax,DWORD PTR [edi],0xffffffd1
  40ad2c:	cmp    al,0x64
  40ad2e:	xor    edx,DWORD PTR ds:0x6bb5b961
  40ad34:	pop    ecx
  40ad35:	retf   0x663b
  40ad38:	pop    es
  40ad39:	shr    DWORD PTR [edi-0x5d],0x52
  40ad3d:	arpl   WORD PTR [ebp+0x374af6f4],di
  40ad43:	out    dx,eax
  40ad44:	jb     0x40ad0b
  40ad46:	not    DWORD PTR [edx+0x35]
  40ad49:	popa   
  40ad4a:	call   0x6869:0x18ebba53
  40ad51:	(bad)  
  40ad53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad54:	xchg   ebx,eax
  40ad55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad56:	ins    DWORD PTR es:[edi],dx
  40ad57:	xchg   esi,eax
  40ad58:	add    BYTE PTR [eax+0x758e7a63],0x90
  40ad5f:	nop
  40ad60:	mov    ecx,DWORD PTR [eax]
  40ad62:	xor    al,0x6
  40ad64:	ret    0x21c3
  40ad67:	pop    edx
  40ad68:	je     0x40ad39
  40ad6a:	cmc    
  40ad6b:	jmp    0x673bb6d7
  40ad70:	adc    DWORD PTR [ebx-0x1d],esp
  40ad73:	xchg   DWORD PTR [esi-0x20],edx
  40ad76:	pop    ss
  40ad77:	call   DWORD PTR [ecx-0x6]
  40ad7a:	loop   0x40adb1
  40ad7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad7d:	dec    esi
  40ad7e:	retf   0x4470
  40ad81:	inc    ecx
  40ad82:	dec    edx
  40ad83:	lea    edi,[esi-0x734c89c6]
  40ad89:	add    al,0x68
  40ad8b:	cmp    cl,BYTE PTR [ebx-0x3f73673]
  40ad91:	stc    
  40ad92:	cwde   
  40ad93:	fnstenv [eax+edx*8+0x6be79ac6]
  40ad9a:	or     esp,esp
  40ad9c:	push   edx
  40ad9d:	retf   0x5640
  40ada0:	clc    
  40ada1:	test   edx,ebx
  40ada3:	mov    cl,0x34
  40ada5:	(bad)  
  40ada6:	bound  eax,QWORD PTR [ecx+0x64]
  40ada9:	xchg   ebx,edx
  40adab:	jecxz  0x40adf3
  40adad:	cmp    ebx,esi
  40adaf:	rol    BYTE PTR [ebp+0x64],1
  40adb2:	xchg   ebp,eax
  40adb3:	push   ecx
  40adb4:	packssdw mm0,QWORD PTR [eax]
  40adb7:	arpl   WORD PTR [ecx+eax*2-0x50],bp
  40adbb:	aas    
  40adbc:	dec    eax
  40adbd:	mov    ds:0x1f1a22a2,al
  40adc2:	test   eax,0x74e2a9e9
  40adc7:	pop    ecx
  40adc8:	rcl    BYTE PTR [edx+eax*2],1
  40adcb:	lock and al,BYTE PTR [eax]
  40adce:	mov    al,ds:0xece3726b
  40add3:	arpl   si,di
  40add5:	push   ss
  40add6:	imul   edx,DWORD PTR [edi-0x19],0xb
  40adda:	fcomp  DWORD PTR [esi+0x2d4eef62]
  40ade0:	(bad)  [eax+0x3065603a]
  40ade6:	xor    dl,BYTE PTR [esi+0x49]
  40ade9:	outs   dx,DWORD PTR ds:[esi]
  40adea:	daa    
  40adeb:	inc    edi
  40adec:	shr    bl,1
  40adee:	dec    edi
  40adef:	inc    eax
  40adf0:	fist   DWORD PTR ss:[edx+0x133db555]
  40adf7:	inc    esp
  40adf8:	cmp    BYTE PTR ds:0xa45e3941,cl
  40adfe:	fbld   TBYTE PTR [ebx]
  40ae00:	sbb    BYTE PTR [esi],al
  40ae02:	mov    eax,ds:0x8b111eeb
  40ae07:	mov    ch,0x15
  40ae09:	sbb    BYTE PTR [esi+0x771530d6],bh
  40ae0f:	mov    ds:0xfd1c397f,al
  40ae14:	les    eax,FWORD PTR [ebp+0x36]
  40ae17:	sub    bl,BYTE PTR [ebx]
  40ae19:	pop    es
  40ae1a:	minps  xmm7,XMMWORD PTR [edi-0x7c]
  40ae1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1f:	aaa    
  40ae20:	push   ss
  40ae21:	enter  0x290a,0x50
  40ae25:	mov    bh,0xfe
  40ae27:	jp     0x40addc
  40ae29:	and    dh,BYTE PTR [edi-0x35f78a8a]
  40ae2f:	sbb    DWORD PTR [edx+0x62c10a2c],ebp
  40ae35:	and    DWORD PTR [edi+0x41f2eae2],edi
  40ae3b:	or     BYTE PTR [ebx-0x69],cl
  40ae3e:	sti    
  40ae3f:	jecxz  0x40adfa
  40ae41:	lods   al,BYTE PTR ds:[esi]
  40ae42:	pop    esp
  40ae43:	test   DWORD PTR [edx],esp
  40ae45:	clc    
  40ae46:	mov    esi,0xe4b4f64a
  40ae4b:	ins    DWORD PTR es:[edi],dx
  40ae4c:	pusha  
  40ae4d:	ss dec esp
  40ae4f:	mov    bh,0xe6
  40ae51:	psllq  mm6,0x2
  40ae55:	jmp    0x40ae47
  40ae57:	aaa    
  40ae58:	jg     0x40aed2
  40ae5a:	out    dx,al
  40ae5b:	enter  0xbc82,0x66
  40ae5f:	xchg   DWORD PTR [edx-0x29],edx
  40ae62:	cli    
  40ae63:	mov    bl,0x45
  40ae65:	jmp    0x40ae8d
  40ae67:	push   0xffffffef
  40ae69:	xchg   ecx,eax
  40ae6a:	hlt    
  40ae6b:	leave  
  40ae6c:	shl    esp,cl
  40ae6e:	inc    ecx
  40ae6f:	pop    ebp
  40ae70:	sbb    DWORD PTR [edi-0x45],esi
  40ae73:	fist   WORD PTR [eax]
  40ae75:	jae    0x40ae40
  40ae77:	push   ebx
  40ae78:	inc    ebp
  40ae79:	retf   0xe25f
  40ae7c:	std    
  40ae7d:	mov    eax,0xadf62ebb
  40ae82:	in     al,0x1
  40ae84:	fnstenv [ebx-0x78]
  40ae87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae88:	mov    al,ds:0xc81fdeae
  40ae8d:	push   0x39
  40ae8f:	mov    al,ds:0x550195c8
  40ae94:	addr16 sub dh,al
  40ae97:	jle    0x40aedc
  40ae99:	jne    0x40aefa
  40ae9b:	in     al,dx
  40ae9c:	outs   dx,BYTE PTR ds:[esi]
  40ae9d:	sbb    al,0x24
  40ae9f:	mov    ch,0xb1
  40aea1:	cmp    BYTE PTR [esi-0x77],cl
  40aea4:	dec    esi
  40aea5:	jb     0x40ae7e
  40aea7:	adc    edi,ebx
  40aea9:	jl     0x40ae80
  40aeab:	sbb    dh,BYTE PTR [eax]
  40aead:	dec    eax
  40aeae:	mov    ebp,0x445ef439
  40aeb3:	cmc    
  40aeb4:	mov    esi,0xca48dc13
  40aeb9:	mov    bh,0x73
  40aebb:	stos   BYTE PTR es:[edi],al
  40aebc:	xchg   ebx,eax
  40aebd:	dec    ebp
  40aebe:	mov    dl,0x8
  40aec0:	scas   al,BYTE PTR es:[edi]
  40aec1:	out    0xc3,al
  40aec3:	rcl    BYTE PTR [esi-0x48],0x1e
  40aec7:	stc    
  40aec8:	xor    al,bh
  40aeca:	gs rol ebx,1
  40aecd:	push   esi
  40aece:	fwait
  40aecf:	jp     0x40aeea
  40aed1:	daa    
  40aed2:	adc    dl,BYTE PTR [ecx+0x5e]
  40aed5:	pop    edx
  40aed6:	inc    ebp
  40aed7:	pop    esp
  40aed8:	cdq    
  40aed9:	pusha  
  40aeda:	fisub  WORD PTR [ebp-0x5b43d6ef]
  40aee0:	sahf   
  40aee1:	fidiv  DWORD PTR [ebx+esi*2+0x6b]
  40aee5:	fsubr  DWORD PTR [ecx+0x21]
  40aee8:	inc    ecx
  40aee9:	sub    al,0x51
  40aeeb:	jp     0x40ae7d
  40aeed:	ja     0x40ae85
  40aeef:	pop    ds
  40aef0:	mov    ebx,0x117dd7c9
  40aef5:	or     edx,edi
  40aef7:	jae    0x40af48
  40aef9:	bound  esi,QWORD PTR ds:0x12873502
  40aeff:	lock mov ds:0x3f09efaa,al
  40af05:	lahf   
  40af06:	aas    
  40af07:	fbstp  TBYTE PTR [edx-0x40]
  40af0a:	in     al,dx
  40af0b:	ret    
  40af0c:	push   edx
  40af0d:	add    eax,0x18d454cd
  40af12:	cmc    
  40af13:	sbb    ebx,ebp
  40af15:	sti    
  40af16:	int3   
  40af17:	adc    ecx,DWORD PTR [ecx-0x2e]
  40af1a:	dec    esi
  40af1b:	sub    eax,DWORD PTR [edx-0x6f]
  40af1e:	pop    ss
  40af1f:	xchg   esp,eax
  40af20:	adc    edi,DWORD PTR [edi+esi*2]
  40af23:	sbb    eax,0xae32bf8e
  40af28:	inc    ebx
  40af29:	mov    bl,0x42
  40af2b:	mov    bl,0x13
  40af2d:	push   ebp
  40af2e:	pop    eax
  40af2f:	popa   
  40af30:	jmp    0x40af1b
  40af32:	xchg   ebp,eax
  40af33:	adc    BYTE PTR [edi-0x7],dh
  40af36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af37:	ret    0xceff
  40af3a:	in     eax,0x8d
  40af3c:	fist   WORD PTR [ebx-0x22bee025]
  40af42:	xchg   edi,eax
  40af43:	dec    esi
  40af44:	adc    cl,BYTE PTR [ecx-0x4]
  40af47:	scas   al,BYTE PTR es:[edi]
  40af48:	or     BYTE PTR [esi-0x614ccdda],ah
  40af4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af4f:	into   
  40af50:	pushf  
  40af51:	push   ebp
  40af52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af53:	mov    gs:0x6313ec18,al
  40af59:	mov    fs,ebx
  40af5b:	mov    eax,0x7b4eba19
  40af60:	push   eax
  40af61:	adc    BYTE PTR [edx+edi*8+0x32],0x40
  40af66:	sub    eax,0x62f1ff54
  40af6b:	mov    bl,0x8d
  40af6d:	imul   edi,DWORD PTR [ebp-0x76f18d78],0x10f5fcb5
  40af77:	mov    ch,0xd1
  40af79:	or     DWORD PTR [esi],ebp
  40af7b:	mov    bl,0x8
  40af7d:	jmp    FWORD PTR [edi-0x49cf9660]
  40af83:	out    0x50,eax
  40af85:	xchg   esi,eax
  40af86:	xor    al,0x90
  40af88:	xchg   ebx,eax
  40af89:	btr    esi,ecx
  40af8c:	lock aam 0xf2
  40af8f:	mov    ebx,0x8b6ccd84
  40af94:	pop    es
  40af95:	shr    dh,cl
  40af97:	and    eax,0x93fb7ed
  40af9c:	test   BYTE PTR [edx],bh
  40af9e:	add    al,0xe3
  40afa0:	fidivr DWORD PTR [ebp-0xe74ba3a]
  40afa6:	mov    esi,0x12b71d00
  40afab:	inc    esp
  40afac:	xchg   edx,eax
  40afad:	dec    ebp
  40afae:	lds    esp,FWORD PTR [ebp-0x50bd8434]
  40afb4:	add    al,0x1f
  40afb6:	xchg   esp,eax
  40afb7:	cmp    edx,ebp
  40afb9:	xchg   esp,eax
  40afba:	xchg   edx,eax
  40afbb:	or     DWORD PTR [edx-0x23802850],esi
  40afc1:	fdivr  QWORD PTR [edi]
  40afc3:	sub    eax,0xff7ef862
  40afc8:	mov    bl,0xac
  40afca:	repnz repz pop ebp
  40afcd:	adc    ch,BYTE PTR [ebx+0x16fff8c9]
  40afd3:	xchg   edx,eax
  40afd4:	and    DWORD PTR [eiz*4-0x5e69f518],eax
  40afdb:	pop    es
  40afdc:	mov    BYTE PTR [ebp+eax*4+0x25],0xf6
  40afe1:	(bad)  
  40afe2:	test   BYTE PTR [ebp-0x44],ah
  40afe5:	cli    
  40afe6:	scas   eax,DWORD PTR es:[edi]
  40afe7:	mov    esp,0x7bc7c321
  40afec:	pop    esi
  40afed:	push   ecx
  40afee:	in     eax,0x76
  40aff0:	arpl   WORD PTR [esi+0x63],dx
  40aff3:	repz sub al,0x66
  40aff6:	aad    0x72
  40aff8:	and    DWORD PTR [esi],ecx
  40affa:	dec    ebx
  40affb:	ss mov eax,0xa93c44e
  40b001:	add    BYTE PTR [edi],bl
  40b003:	fsubr  st,st(3)
  40b005:	mov    ds,esi
  40b007:	fdiv   st,st(0)
  40b009:	xor    eax,DWORD PTR [ebp-0x2c]
  40b00c:	adc    edi,DWORD PTR [edx+0x6e]
  40b00f:	push   ss
  40b010:	inc    esp
  40b011:	aam    0x19
  40b013:	in     al,0x80
  40b015:	cmp    DWORD PTR [ebp-0x7],ebp
  40b018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b019:	in     eax,dx
  40b01a:	lock push edi
  40b01c:	mov    bl,0xb
  40b01e:	jo     0x40b07a
  40b020:	inc    ebx
  40b021:	dec    edi
  40b022:	jmp    0x17d2:0x9a249ceb
  40b029:	xchg   edi,eax
  40b02a:	add    eax,0xa0d685f2
  40b02f:	lods   eax,DWORD PTR ds:[esi]
  40b030:	call   0xd9b75ccb
  40b035:	jnp    0x40b094
  40b037:	out    0xf8,eax
  40b039:	sahf   
  40b03a:	push   ebp
  40b03b:	mov    al,0x8c
  40b03d:	clc    
  40b03e:	jne    0x40b089
  40b040:	add    edx,DWORD PTR [ecx+eiz*1+0x19]
  40b044:	cwde   
  40b045:	leave  
  40b046:	sahf   
  40b047:	loop   0x40b01d
  40b049:	jno    0x40b01d
  40b04b:	mov    ebp,0xe0d2867e
  40b050:	pop    esp
  40b051:	jp     0x40b049
  40b053:	jo     0x40b09a
  40b055:	jae    0x40b060
  40b057:	cdq    
  40b058:	fld    QWORD PTR [eax-0x79]
  40b05b:	js     0x40b0ab
  40b05d:	sbb    BYTE PTR [ebx+0x46ef5107],ah
  40b063:	repz test BYTE PTR [esp+ecx*2+0x2a901cc8],al
  40b06b:	in     eax,0x1e
  40b06d:	jnp    0x40b027
  40b06f:	mov    DWORD PTR [eax-0x2a],esi
  40b072:	aam    0x33
  40b074:	dec    esi
  40b075:	fimul  WORD PTR [ebx]
  40b077:	mov    ebp,0x4bbde8fc
  40b07c:	aad    0x51
  40b07e:	je     0x40b065
  40b080:	out    dx,al
  40b081:	mov    ds:0xbfce935f,eax
  40b086:	or     al,0x6
  40b088:	pop    edi
  40b089:	int3   
  40b08a:	or     eax,0x672f5b7c
  40b08f:	(bad)  
  40b092:	jmp    0x5a4cb49b
  40b097:	loope  0x40b0c3
  40b099:	mov    BYTE PTR [ecx-0x3743ca46],ah
  40b09f:	out    0xe0,eax
  40b0a1:	mov    dh,0x70
  40b0a3:	or     DWORD PTR [ebx+0x4b],0xffffffe5
  40b0a7:	or     bl,cl
  40b0a9:	xor    bl,dh
  40b0ab:	mul    DWORD PTR [ebx-0xdf69e99]
  40b0b1:	pop    eax
  40b0b2:	mov    ch,0xcd
  40b0b4:	mov    al,BYTE PTR [ebx]
  40b0b6:	loope  0x40b093
  40b0b8:	daa    
  40b0b9:	inc    edx
  40b0ba:	push   esp
  40b0bb:	sbb    eax,0x2e9e3937
  40b0c0:	jno    0x40b133
  40b0c2:	add    ch,BYTE PTR [ecx-0x22]
  40b0c5:	cmp    DWORD PTR [ebx-0x4ae7a5db],esp
  40b0cb:	push   eax
  40b0cc:	xor    eax,0x138140e0
  40b0d1:	inc    eax
  40b0d2:	pop    ebx
  40b0d3:	cwde   
  40b0d4:	or     al,0xca
  40b0d6:	mov    edi,0x177ab237
  40b0db:	adc    BYTE PTR [ebp+ebp*1+0x56fba02a],dh
  40b0e2:	push   es
  40b0e3:	mov    eax,0x6afba262
  40b0e8:	dec    ah
  40b0ea:	out    dx,al
  40b0eb:	sub    al,BYTE PTR [edx]
  40b0ed:	outs   dx,DWORD PTR ds:[esi]
  40b0ee:	inc    esp
  40b0ef:	gs jnp 0x40b165
  40b0f2:	fwait
  40b0f3:	xor    edx,DWORD PTR [eax-0x2f310d80]
  40b0f9:	jp     0x40b093
  40b0fb:	sbb    bl,BYTE PTR [edx-0x1d]
  40b0fe:	jg     0x40b13f
  40b100:	or     BYTE PTR [edx+0x4a],al
  40b103:	hlt    
  40b104:	fsubr  DWORD PTR [eax-0x733cf03c]
  40b10a:	(bad)  
  40b10b:	les    ebx,FWORD PTR [ebx+0x9]
  40b10e:	in     al,0xaa
  40b110:	dec    eax
  40b111:	and    esp,DWORD PTR [eax]
  40b113:	arpl   WORD PTR [ebp+0x5c98ee0c],dx
  40b119:	out    dx,eax
  40b11a:	xor    DWORD PTR gs:[ebx-0x75],esi
  40b11e:	(bad)  
  40b11f:	bound  ecx,QWORD PTR es:0xf5bb5609
  40b126:	fwait
  40b127:	inc    ecx
  40b128:	xchg   edx,eax
  40b129:	je     0x40b0e9
  40b12b:	xor    al,0x41
  40b12d:	(bad)  
  40b12f:	and    eax,0xb2528624
  40b134:	xchg   ecx,eax
  40b135:	or     BYTE PTR [eax+0x14],dl
  40b138:	push   ecx
  40b139:	scas   eax,DWORD PTR es:[edi]
  40b13a:	(bad)  
  40b13c:	pop    ebp
  40b13d:	jecxz  0x40b166
  40b13f:	pop    es
  40b140:	xchg   esi,eax
  40b141:	dec    esi
  40b142:	in     al,0x7e
  40b144:	jmp    0xb62f60fc
  40b149:	stos   DWORD PTR es:[edi],eax
  40b14a:	mov    ebp,0x43d16c9a
  40b14f:	inc    ecx
  40b150:	mov    bh,0xf2
  40b152:	loope  0x40b151
  40b154:	adc    al,0x5e
  40b156:	adc    esp,DWORD PTR [edx]
  40b158:	sbb    BYTE PTR [edi],dl
  40b15a:	test   al,0xee
  40b15c:	cli    
  40b15d:	mov    BYTE PTR [ebp-0x7186b883],ah
  40b163:	mov    bh,BYTE PTR [edi+0x3752f53b]
  40b169:	ror    BYTE PTR [edx],1
  40b16b:	xor    esp,eax
  40b16d:	push   ebx
  40b16e:	les    esp,FWORD PTR [edx]
  40b170:	into   
  40b171:	inc    edx
  40b172:	adc    bh,BYTE PTR [eax]
  40b174:	sbb    BYTE PTR [ebx],bl
  40b176:	inc    eax
  40b177:	test   esp,ecx
  40b179:	test   al,0xd1
  40b17b:	jns    0x40b1d2
  40b17d:	pop    edi
  40b17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b17f:	mov    ebx,0x84424f6c
  40b184:	jno    0x40b1cb
  40b186:	mov    bl,0xf7
  40b188:	cdq    
  40b189:	icebp  
  40b18a:	shr    BYTE PTR [esi+0x27687ad0],1
  40b190:	psubb  mm4,QWORD PTR [ecx+edi*2]
  40b194:	pop    eax
  40b195:	sbb    al,bh
  40b197:	push   0x17
  40b199:	push   ds
  40b19a:	jno    0x40b1f0
  40b19c:	inc    eax
  40b19d:	sbb    eax,0x9533de8a
  40b1a2:	(bad)  
  40b1a3:	aaa    
  40b1a4:	ret    0x35ba
  40b1a7:	in     al,0xbf
  40b1a9:	cmp    al,0x88
  40b1ab:	sub    dh,dl
  40b1ad:	add    esi,DWORD PTR [eax-0x15b3a86b]
  40b1b3:	not    BYTE PTR ds:0xe82fd806
  40b1b9:	dec    ecx
  40b1ba:	push   edi
  40b1bb:	add    esi,edi
  40b1bd:	sbb    BYTE PTR [edx],bl
  40b1bf:	xchg   BYTE PTR [ebp-0x30deaebf],dl
  40b1c5:	loope  0x40b186
  40b1c7:	dec    edx
  40b1c8:	in     al,dx
  40b1c9:	dec    edx
  40b1ca:	jbe    0x40b236
  40b1cc:	dec    edi
  40b1cd:	mov    esp,0x4232943e
  40b1d2:	shr    BYTE PTR [ecx-0x439cc558],0xec
  40b1d9:	mov    edi,0xece35fb0
  40b1de:	es das 
  40b1e0:	or     DWORD PTR [ebx+0x39],esi
  40b1e3:	mov    ah,0x9c
  40b1e5:	out    0x9f,al
  40b1e7:	fwait
  40b1e8:	iret   
  40b1e9:	es cmp eax,0xfa1caf10
  40b1ef:	shl    bl,0x8f
  40b1f2:	jge    0x40b20b
  40b1f4:	jb     0x40b1c3
  40b1f6:	pop    es
  40b1f7:	jg     0x40b1ad
  40b1f9:	fwait
  40b1fa:	push   ecx
  40b1fb:	pusha  
  40b1fc:	scas   eax,DWORD PTR es:[edi]
  40b1fd:	out    dx,eax
  40b1fe:	sbb    edi,DWORD PTR [edx-0x3767209c]
  40b204:	xchg   BYTE PTR [ebx-0x31],ah
  40b207:	sahf   
  40b208:	mov    DWORD PTR [edi],eax
  40b20a:	outs   dx,DWORD PTR es:[esi]
  40b20c:	jle    0x40b1d1
  40b20e:	pushf  
  40b20f:	sub    edi,DWORD PTR [eax-0x5a]
  40b212:	leave  
  40b213:	mov    ds:0xd6c0b068,al
  40b218:	cli    
  40b219:	xor    eax,0xf7f26e52
  40b21e:	fsub   st,st(2)
  40b220:	mov    edi,0x65e699ed
  40b225:	pop    es
  40b226:	test   DWORD PTR [esi+0xd],esp
  40b229:	aas    
  40b22a:	xor    ebx,DWORD PTR [ecx+0x42]
  40b22d:	mov    edi,0x1a06d805
  40b232:	int    0xba
  40b234:	xor    esp,DWORD PTR [ebx-0xf]
  40b237:	bound  ebx,QWORD PTR [eax+0x20]
  40b23a:	in     eax,dx
  40b23b:	ja     0x40b226
  40b23d:	sbb    BYTE PTR ds:0xa454318f,0xe0
  40b244:	ror    DWORD PTR [ebx+0x32c9918a],1
  40b24a:	adc    DWORD PTR [esi+0x77],eax
  40b24d:	(bad)  
  40b24e:	adc    al,0xc0
  40b250:	or     DWORD PTR [esi-0x57],eax
  40b253:	dec    ebp
  40b254:	xor    bl,BYTE PTR [esi+0x7506a558]
  40b25a:	scas   eax,DWORD PTR es:[edi]
  40b25b:	addr16 xchg edi,eax
  40b25d:	or     BYTE PTR [edi],0x45
  40b260:	mov    al,0x65
  40b262:	push   es
  40b263:	in     eax,0x2
  40b265:	sar    BYTE PTR [edx],1
  40b267:	pop    es
  40b268:	sub    BYTE PTR [eax+0x3e],al
  40b26b:	mov    ds:0x91b79be8,al
  40b270:	and    DWORD PTR [ecx-0x5d],eax
  40b273:	(bad)  
  40b274:	int3   
  40b275:	js     0x40b26c
  40b277:	in     al,dx
  40b278:	sub    BYTE PTR [esi],ch
  40b27a:	fidivr WORD PTR [ebx]
  40b27c:	or     al,0x44
  40b27e:	sub    DWORD PTR [esi],ecx
  40b280:	loop   0x40b2a9
  40b282:	in     al,0x21
  40b284:	(bad)  
  40b285:	sbb    eax,0xf8889d99
  40b28a:	imul   ebx,DWORD PTR [esi-0x44],0xffffffd9
  40b28e:	pop    ecx
  40b28f:	add    ecx,DWORD PTR [esi-0x1f]
  40b292:	mov    ah,al
  40b294:	test   BYTE PTR [esi-0x48],ah
  40b297:	add    eax,0x1a158cb6
  40b29c:	das    
  40b29d:	push   ecx
  40b29e:	xchg   ecx,eax
  40b29f:	pop    ebp
  40b2a0:	mov    bh,0x45
  40b2a2:	out    dx,eax
  40b2a3:	mov    eax,0xa9c37a1d
  40b2a8:	sbb    esi,0x82830593
  40b2ae:	popa   
  40b2af:	xor    edi,ecx
  40b2b1:	sub    dh,BYTE PTR [eax+0x29]
  40b2b4:	mov    esp,0x619cadb6
  40b2b9:	jmp    0x99c87ae1
  40b2be:	jl     0x40b2f4
  40b2c0:	xor    ecx,ebp
  40b2c2:	inc    ebx
  40b2c3:	mov    ?,WORD PTR [ebx+0x8b0f88b]
  40b2c9:	pop    ebx
  40b2ca:	dec    edi
  40b2cb:	mov    ebp,0xf6965762
  40b2d0:	jbe    0x40b33b
  40b2d2:	jo     0x40b2f1
  40b2d4:	mov    edi,0x38c3c4aa
  40b2d9:	aaa    
  40b2da:	and    eax,0xc553038a
  40b2df:	or     eax,0x4abc0e75
  40b2e4:	adc    DWORD PTR [edx-0x16],0xdb7f6233
  40b2eb:	and    eax,0x87398d82
  40b2f0:	aam    0x99
  40b2f2:	mov    ah,0xc
  40b2f4:	fld    DWORD PTR [edi-0x73]
  40b2f7:	or     esi,DWORD PTR [edx-0x4b]
  40b2fa:	or     DWORD PTR [eax-0x6],ebx
  40b2fd:	pop    ss
  40b2fe:	lea    eax,[edx]
  40b300:	mov    DWORD PTR [ebx-0x5ecdfdae],ebx
  40b306:	push   ss
  40b307:	ret    
  40b308:	test   al,0xc3
  40b30a:	or     DWORD PTR [esi],esp
  40b30c:	cmp    DWORD PTR [ebp+eiz*2+0x3a0058b1],edi
  40b313:	pop    ebx
  40b314:	or     bh,bh
  40b316:	dec    ebx
  40b317:	(bad)  ds:0x9ea5abdd
  40b31d:	and    eax,esi
  40b31f:	lahf   
  40b320:	mov    al,0xf3
  40b322:	neg    DWORD PTR [esi]
  40b324:	push   ecx
  40b325:	xor    edx,0x66
  40b328:	adc    al,0xc8
  40b32a:	cmp    DWORD PTR [edx],esp
  40b32c:	pop    ds
  40b32d:	pop    edi
  40b32e:	jmp    0xabb9:0x676d1943
  40b335:	inc    eax
  40b336:	fisub  DWORD PTR [ebp-0x49]
  40b339:	scas   al,BYTE PTR es:[edi]
  40b33a:	clc    
  40b33b:	xchg   ecx,eax
  40b33c:	jmp    DWORD PTR [esi+edi*8]
  40b33f:	fwait
  40b340:	repnz rcl BYTE PTR [ebp+0x3104fef4],cl
  40b347:	pusha  
  40b348:	imul   ebp,DWORD PTR [ebx-0xbc50f28],0xffffffea
  40b34f:	mov    ebp,0x15014313
  40b354:	inc    esp
  40b355:	in     eax,dx
  40b356:	dec    eax
  40b357:	add    ch,bh
  40b359:	aas    
  40b35a:	inc    edx
  40b35b:	mov    DWORD PTR [eax+0x759d3ef1],ecx
  40b361:	push   ecx
  40b362:	dec    edi
  40b363:	and    ecx,DWORD PTR [ebx-0x7f]
  40b366:	xchg   esp,eax
  40b367:	jl     0x40b3c7
  40b369:	push   ss
  40b36a:	push   edi
  40b36b:	jae    0x40b31b
  40b36d:	xor    ecx,DWORD PTR [di]
  40b370:	shl    DWORD PTR [esi+0x61c8501f],1
  40b376:	inc    ebx
  40b377:	in     al,dx
  40b378:	lods   eax,DWORD PTR ds:[esi]
  40b379:	sti    
  40b37a:	push   ecx
  40b37b:	xor    BYTE PTR ds:0xc7a35eb0,0xbd
  40b382:	jge    0x40b338
  40b384:	mov    eax,0x4d9bd2ff
  40b389:	(bad)  
  40b38a:	nop
  40b38b:	pop    eax
  40b38c:	clc    
  40b38d:	(bad)  
  40b38e:	xchg   edx,eax
  40b38f:	repnz scas al,BYTE PTR es:[edi]
  40b391:	fs mov bp,0x2efa
  40b396:	xchg   ecx,eax
  40b397:	lea    edx,[edx-0x4c8147ff]
  40b39d:	call   0x2160:0xa7ec78ba
  40b3a4:	xchg   ecx,esi
  40b3a6:	dec    edx
  40b3a7:	dec    ecx
  40b3a8:	inc    edx
  40b3a9:	add    DWORD PTR [edi+0x6f1e3424],ebp
  40b3af:	ret    
  40b3b0:	jge    0x40b38d
  40b3b2:	dec    ecx
  40b3b3:	dec    edi
  40b3b4:	jle    0x40b3e0
  40b3b6:	adc    ecx,DWORD PTR [esp+edx*1+0x155455df]
  40b3bd:	iret   
  40b3be:	xchg   ecx,eax
  40b3bf:	jb     0x40b3cd
  40b3c1:	cmp    al,0x2c
  40b3c3:	or     ebx,DWORD PTR [ebx+ebx*2]
  40b3c6:	popf   
  40b3c7:	ins    DWORD PTR es:[edi],dx
  40b3c8:	mov    ah,0x25
  40b3ca:	lahf   
  40b3cb:	mov    WORD PTR [edi-0x22033b6],?
  40b3d1:	fmul   st,st(5)
  40b3d3:	aaa    
  40b3d4:	out    dx,al
  40b3d5:	xor    al,0x7c
  40b3d7:	xchg   edx,eax
  40b3d8:	cmp    bl,BYTE PTR ds:0xc0c54d5f
  40b3de:	out    dx,eax
  40b3df:	cwde   
  40b3e0:	inc    ecx
  40b3e1:	push   ebp
  40b3e2:	cmp    ch,ah
  40b3e4:	xor    eax,0x61eaa3d4
  40b3e9:	jno    0x40b3e7
  40b3eb:	mov    cl,0x54
  40b3ed:	adc    al,0xbc
  40b3ef:	push   eax
  40b3f0:	xor    ebx,DWORD PTR [ebx+ebx*1+0x52]
  40b3f4:	pop    ecx
  40b3f5:	test   al,0xdb
  40b3f7:	ror    DWORD PTR [edi-0x5ce965b7],1
  40b3fd:	mov    ecx,0xbc91d1e5
  40b402:	pop    ds
  40b403:	adc    al,0x52
  40b405:	cdq    
  40b406:	(bad)  
  40b408:	mov    cl,0x1b
  40b40a:	xor    eax,0xa21582a9
  40b40f:	int3   
  40b410:	(bad)  
  40b411:	sbb    al,BYTE PTR [edi]
  40b413:	repnz test DWORD PTR [edi-0x5aa1ae4b],ebx
  40b41a:	repz aam 0x99
  40b41d:	ins    BYTE PTR es:[edi],dx
  40b41e:	push   edx
  40b41f:	sub    DWORD PTR [esi+edi*4-0x4984a437],ecx
  40b426:	mov    DWORD PTR [ecx+0x4],esp
  40b429:	mov    esp,0xf05f5728
  40b42e:	xchg   ebx,eax
  40b42f:	pop    ds
  40b430:	rcl    DWORD PTR [edi+0x6678d785],cl
  40b436:	lods   al,BYTE PTR ds:[esi]
  40b437:	mov    cl,0x86
  40b439:	dec    esp
  40b43a:	pop    edi
  40b43b:	xchg   ecx,eax
  40b43c:	or     eax,0x68c34eb6
  40b441:	dec    eax
  40b442:	in     eax,0x17
  40b444:	push   ds
  40b445:	(bad)  
  40b446:	in     al,0xe6
  40b448:	(bad)  
  40b449:	mov    esi,0x9a6c32cb
  40b44e:	jmp    0xa9354618
  40b453:	(bad)  [esi]
  40b455:	mov    esp,DWORD PTR [edi+edx*8-0x22]
  40b459:	add    BYTE PTR [eax+0x68],bh
  40b45c:	adc    cl,BYTE PTR [esp+edi*1-0x44d02c98]
  40b463:	dec    esi
  40b464:	pop    edx
  40b465:	inc    edi
  40b466:	jle    0x40b4e4
  40b468:	inc    edx
  40b469:	(bad)  
  40b46a:	into   
  40b46b:	enter  0x5be,0xe1
  40b46f:	jmp    0x712e:0x6bef1fa5
  40b476:	jno    0x40b4bf
  40b478:	ja     0x40b471
  40b47a:	pop    eax
  40b47b:	xor    edx,edx
  40b47d:	and    esp,DWORD PTR [ebx+0x7b4454e1]
  40b483:	sbb    DWORD PTR [eax],esi
  40b485:	iret   
  40b486:	sbb    DWORD PTR [edx+0x7d7ab647],eax
  40b48c:	xor    DWORD PTR [ebp+0x75cbc561],0x955ed1e6
  40b496:	push   ss
  40b497:	fsub   QWORD PTR [ebx-0x38]
  40b49a:	xchg   ecx,eax
  40b49b:	out    0xbd,eax
  40b49d:	fnstsw WORD PTR [ecx-0x78]
  40b4a0:	ja     0x40b46d
  40b4a2:	inc    edi
  40b4a3:	xchg   BYTE PTR [ecx-0xaf151d1],ch
  40b4a9:	mov    bh,0xe
  40b4ab:	sti    
  40b4ac:	int3   
  40b4ad:	fs call 0x5560:0x46809b14
  40b4b5:	test   BYTE PTR [eax],al
  40b4b7:	stos   BYTE PTR es:[edi],al
  40b4b8:	jecxz  0x40b527
  40b4ba:	ficomp WORD PTR [ebx+eiz*1]
  40b4bd:	xor    bl,BYTE PTR [ecx+0x74]
  40b4c0:	loopne 0x40b4c5
  40b4c2:	jns    0x40b489
  40b4c4:	xor    al,0xdc
  40b4c6:	bound  esi,QWORD PTR [edx+esi*2-0x67]
  40b4ca:	or     bl,bl
  40b4cc:	mov    bl,0x1a
  40b4ce:	(bad)  
  40b4cf:	sub    eax,0x3353e17
  40b4d4:	ins    DWORD PTR es:[edi],dx
  40b4d5:	scas   eax,DWORD PTR es:[edi]
  40b4d6:	je     0x40b4c6
  40b4d8:	ja     0x40b469
  40b4da:	aad    0x13
  40b4dc:	into   
  40b4dd:	pusha  
  40b4de:	pop    ecx
  40b4df:	pushf  
  40b4e0:	and    BYTE PTR [esi+esi*1+0x239e30ed],al
  40b4e7:	cdq    
  40b4e8:	aam    0x2a
  40b4ea:	jnp    0x40b4b4
  40b4ec:	sahf   
  40b4ed:	add    eax,0xa9ae8102
  40b4f2:	push   edi
  40b4f3:	cmp    al,0xc6
  40b4f5:	idiv   BYTE PTR [ebx-0x3b]
  40b4f8:	mov    ds:0x21f0f0cb,al
  40b4fd:	mov    ebp,0x25c48592
  40b502:	addr16 jo 0x40b4cd
  40b505:	rcl    ebx,1
  40b507:	sub    DWORD PTR [eax+edx*2+0x29e8443c],edx
  40b50e:	das    
  40b50f:	pop    ebp
  40b510:	sub    eax,0x55051703
  40b515:	sahf   
  40b516:	lock jno 0x40b4bb
  40b519:	test   esp,ecx
  40b51b:	mov    bh,0x23
  40b51d:	test   DWORD PTR [edi+eax*8+0x78bda1a3],edx
  40b524:	(bad)  
  40b525:	mov    dl,0xf
  40b527:	jbe    0x40b571
  40b529:	add    esp,0xffffff9a
  40b52c:	(bad)  
  40b52d:	lods   al,BYTE PTR ss:[esi]
  40b52f:	lds    ebx,FWORD PTR [esi-0x716897eb]
  40b535:	loopne 0x40b502
  40b537:	out    dx,al
  40b538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b539:	lds    ecx,FWORD PTR [edx+eax*2+0x66c2f4a6]
  40b540:	cmp    BYTE PTR [edi],al
  40b542:	hlt    
  40b543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b544:	repnz out 0xb3,al
  40b547:	in     eax,dx
  40b548:	popa   
  40b549:	mov    ecx,0x1b0ef88a
  40b54e:	adc    eax,0xff61afad
  40b553:	scas   eax,DWORD PTR es:[edi]
  40b554:	arpl   WORD PTR [ebp+0x17],ax
  40b557:	and    ch,cl
  40b559:	out    0x12,eax
  40b55b:	jmp    0xa1246a02
  40b560:	ss and bx,0xff86
  40b565:	sbb    al,0x61
  40b567:	jne    0x40b5d8
  40b569:	daa    
  40b56a:	mov    ?,WORD PTR [eax+0x22]
  40b56d:	jno    0x40b5c1
  40b56f:	pop    ds
  40b570:	sahf   
  40b571:	out    0x29,al
  40b573:	pop    ss
  40b574:	mov    esi,0x7fa749ea
  40b579:	pop    edi
  40b57a:	cmp    ecx,ecx
  40b57c:	mov    ds:0xcfac9386,al
  40b581:	aaa    
  40b582:	push   edx
  40b583:	mov    ch,0x69
  40b585:	ja     0x40b58f
  40b587:	or     al,0x58
  40b589:	cmp    bl,BYTE PTR [esp+ebp*4+0x69]
  40b58d:	mov    ecx,0xfce758b
  40b592:	cwde   
  40b593:	inc    ebp
  40b594:	mov    ecx,0x6798d366
  40b599:	in     al,dx
  40b59a:	and    al,0x3e
  40b59c:	mov    eax,0x8dc404a3
  40b5a1:	inc    ebp
  40b5a2:	inc    esi
  40b5a3:	push   cs
  40b5a4:	push   ss
  40b5a5:	nop
  40b5a6:	cdq    
  40b5a7:	iret   
  40b5a8:	cld    
  40b5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5aa:	push   edx
  40b5ab:	fdiv   DWORD PTR [edi-0x6aba06d0]
  40b5b1:	cmp    ah,bh
  40b5b3:	or     eax,0x22723b85
  40b5b8:	in     al,dx
  40b5b9:	loope  0x40b55f
  40b5bb:	mov    al,0xd1
  40b5bd:	jmp    0x7022:0x9c799bb0
  40b5c4:	and    al,0x32
  40b5c6:	lea    ebp,[edx+0x5f48b9a1]
  40b5cc:	icebp  
  40b5cd:	(bad)  
  40b5cf:	add    DWORD PTR [edx+eax*4-0x29610c],ebp
  40b5d6:	inc    edx
  40b5d7:	imul   ecx,DWORD PTR [ecx],0x4a
  40b5da:	out    0xd1,eax
  40b5dc:	out    dx,eax
  40b5dd:	jle    0x40b625
  40b5df:	xor    bh,BYTE PTR [edx]
  40b5e1:	add    edi,edx
  40b5e3:	repz shr BYTE PTR [ebp-0x25],0x2b
  40b5e8:	fs das 
  40b5ea:	push   0x5b
  40b5ec:	cmc    
  40b5ed:	dec    ecx
  40b5ee:	in     eax,dx
  40b5ef:	cmp    DWORD PTR [ecx+eax*4],ebx
  40b5f2:	out    0x9f,al
  40b5f4:	xlat   BYTE PTR ds:[ebx]
  40b5f5:	sbb    al,0xf0
  40b5f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f8:	jle    0x40b5b7
  40b5fa:	in     eax,dx
  40b5fb:	out    0xe0,al
  40b5fd:	mov    ebp,edx
  40b5ff:	loopne 0x40b5c7
  40b601:	fst    DWORD PTR [eax-0x2a]
  40b604:	pop    es
  40b605:	and    al,0xb9
  40b607:	ret    
  40b608:	sbb    eax,0x50265fe3
  40b60d:	aaa    
  40b60e:	cdq    
  40b60f:	mov    bh,0x6c
  40b611:	mov    ds:0x696a14a2,eax
  40b616:	jp     0x40b620
  40b618:	mov    eax,ds:0x78172200
  40b61d:	inc    edx
  40b61e:	sahf   
  40b61f:	out    dx,al
  40b620:	aam    0x7c
  40b622:	imul   edx,DWORD PTR [ecx-0x6bf3cca3],0xd777a345
  40b62c:	out    dx,al
  40b62d:	(bad)  
  40b62f:	and    al,0x83
  40b632:	mov    eax,ds:0xa42212ab
  40b637:	mov    ah,dh
  40b639:	adc    DWORD PTR [ebp+0x1a5fa3eb],ebp
  40b63f:	jmp    0x40b66b
  40b641:	add    cl,ch
  40b643:	push   DWORD PTR [edx+0x240a9e4b]
  40b649:	xchg   esp,eax
  40b64a:	dec    esi
  40b64b:	add    DWORD PTR [edx-0x7c],eax
  40b64e:	push   0xa
  40b650:	sub    ebp,DWORD PTR ds:0xbb07c137
  40b656:	call   0xf01a:0x3249319d
  40b65d:	stos   BYTE PTR es:[edi],al
  40b65e:	and    dl,bh
  40b660:	int    0x9e
  40b662:	push   0x6b21b131
  40b667:	pop    edx
  40b668:	pop    es
  40b669:	or     al,0x63
  40b66b:	repnz cs push es
  40b66e:	dec    ecx
  40b66f:	popa   
  40b670:	mov    eax,0x221645e0
  40b675:	add    ah,BYTE PTR [ebx+0x5978bc25]
  40b67b:	aas    
  40b67c:	stc    
  40b67d:	out    dx,al
  40b67e:	ins    BYTE PTR es:[edi],dx
  40b67f:	dec    esp
  40b680:	ror    DWORD PTR [esi],cl
  40b682:	mov    ecx,0x6c07b6c0
  40b687:	xchg   ecx,eax
  40b688:	dec    eax
  40b689:	ret    
  40b68a:	stos   DWORD PTR es:[edi],eax
  40b68b:	push   ss
  40b68c:	adc    ch,BYTE PTR [edx+0x7c7babe1]
  40b692:	jnp    0x40b6a3
  40b694:	mov    bh,cl
  40b696:	jmp    0x40b6cf
  40b698:	inc    ecx
  40b699:	push   ds
  40b69a:	pop    es
  40b69b:	imul   edx,DWORD PTR [ebp+0x25],0x4db6ffa0
  40b6a2:	repnz sbb bl,bl
  40b6a5:	adc    eax,0x4481ed7a
  40b6aa:	dec    eax
  40b6ab:	out    dx,al
  40b6ac:	arpl   si,si
  40b6ae:	or     eax,0x407711b6
  40b6b3:	ss call 0x501123d6
  40b6b9:	jp     0x40b672
  40b6bb:	mov    bh,0xa1
  40b6bd:	xchg   BYTE PTR [edi-0x74],ch
  40b6c0:	fidiv  WORD PTR [eax]
  40b6c2:	add    BYTE PTR [ebx-0x33],ch
  40b6c5:	xor    BYTE PTR [ecx],dl
  40b6c7:	or     BYTE PTR [ecx],cl
  40b6c9:	sbb    dh,BYTE PTR [edi-0x58]
  40b6cc:	pop    edi
  40b6cd:	int3   
  40b6ce:	fidivr DWORD PTR [ebx-0x41399139]
  40b6d4:	dec    ebp
  40b6d5:	data16 repnz adc ch,BYTE PTR [ebp-0x5a]
  40b6da:	sub    ch,BYTE PTR [ebp+0x4]
  40b6dd:	(bad)  
  40b6de:	fcomp  QWORD PTR [esi+0x21]
  40b6e1:	shl    edi,0x1
  40b6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e5:	sub    ah,bl
  40b6e7:	cwde   
  40b6e8:	cmp    eax,0xb4523382
  40b6ed:	lock fldenv [edx]
  40b6f0:	out    0x98,eax
  40b6f2:	dec    edi
  40b6f3:	mov    edx,0x8ceb41f6
  40b6f8:	mov    dh,0x1f
  40b6fa:	cmp    esp,DWORD PTR [edx]
  40b6fc:	je     0x40b73d
  40b6fe:	mov    ch,0xe5
  40b700:	jne    0x40b703
  40b702:	repnz sub al,0xb4
  40b705:	stos   DWORD PTR es:[edi],eax
  40b706:	dec    ebx
  40b707:	cmc    
  40b708:	cmp    dh,BYTE PTR [edx+0x21]
  40b70b:	leave  
  40b70c:	daa    
  40b70d:	retf   0xc5bd
  40b710:	hlt    
  40b711:	imul   ecx,DWORD PTR [eax-0x1f337d70],0xe72ff681
  40b71b:	es mov bl,0xf2
  40b71e:	push   edi
  40b71f:	dec    ebp
  40b720:	ret    
  40b721:	xchg   ebx,eax
  40b722:	adc    ebp,DWORD PTR [edi]
  40b724:	leave  
  40b725:	addr16 and al,0xc8
  40b728:	js     0x40b72a
  40b72a:	jmp    0x40b741
  40b72c:	dec    esi
  40b72d:	dec    esp
  40b72e:	bnd jb 0x40b6e2
  40b731:	adc    BYTE PTR [esi],0x31
  40b734:	mov    eax,0x2365c62e
  40b739:	mov    esp,0xd6467e3d
  40b73e:	add    BYTE PTR [eax+ebx*1],ah
  40b741:	rcr    cl,0x67
  40b744:	out    dx,eax
  40b745:	jb     0x40b762
  40b747:	lods   eax,DWORD PTR ds:[esi]
  40b748:	mov    esp,DWORD PTR [esi+0x6183d03d]
  40b74e:	hlt    
  40b74f:	push   0xffffffd5
  40b751:	(bad)  
  40b754:	ja     0x40b745
  40b756:	inc    edx
  40b757:	mov    al,0x7b
  40b759:	pop    edx
  40b75a:	cmc    
  40b75b:	mov    edi,DWORD PTR [edx]
  40b75d:	sub    dh,ah
  40b75f:	sub    al,0x60
  40b761:	mov    ecx,esi
  40b763:	lods   eax,DWORD PTR ds:[esi]
  40b764:	fcom   DWORD PTR [edx]
  40b766:	test   BYTE PTR [edi],ch
  40b768:	mov    eax,ds:0x60315e2f
  40b76d:	mov    edi,DWORD PTR [eax]
  40b76f:	popf   
  40b770:	xchg   esi,eax
  40b771:	pop    edi
  40b772:	and    bh,BYTE PTR [edx]
  40b774:	push   esp
  40b775:	ficomp WORD PTR [ebp-0x28]
  40b778:	cs retf 0xa61a
  40b77c:	xchg   ebx,eax
  40b77d:	popa   
  40b77e:	and    dh,BYTE PTR [ecx]
  40b780:	jno    0x40b7a6
  40b782:	out    0x23,eax
  40b784:	jge    0x40b72a
  40b786:	(bad)  
  40b787:	jecxz  0x40b785
  40b789:	(bad)  
  40b78a:	jg     0x40b76f
  40b78c:	in     al,dx
  40b78d:	mov    eax,ds:0x595a1efb
  40b792:	xchg   ecx,eax
  40b793:	push   ecx
  40b794:	retf   0x4fcc
  40b797:	cmc    
  40b798:	jb     0x40b754
  40b79a:	out    dx,eax
  40b79b:	push   0xfffffff0
  40b79d:	test   al,0x83
  40b79f:	out    0xae,eax
  40b7a1:	(bad)  
  40b7a2:	aad    0xb4
  40b7a4:	loope  0x40b7f8
  40b7a6:	jge    0x40b822
  40b7a8:	test   al,0x90
  40b7aa:	cmp    bh,BYTE PTR cs:[esi+0xcac72fd]
  40b7b1:	cld    
  40b7b2:	aaa    
  40b7b3:	inc    eax
  40b7b4:	mov    ah,bh
  40b7b6:	mov    esp,0xace953ab
  40b7bb:	mov    ah,0x7a
  40b7bd:	and    al,0x68
  40b7bf:	fdivr  st(1),st
  40b7c1:	pop    es
  40b7c2:	fdiv   st(4),st
  40b7c4:	lea    esp,[ecx]
  40b7c6:	jp     0x40b761
  40b7c8:	jns    0x40b7d6
  40b7ca:	mov    edi,0x5a8bc2d5
  40b7cf:	hlt    
  40b7d0:	fisttp QWORD PTR [ebx-0x1]
  40b7d3:	ror    BYTE PTR ds:[ebx+eax*2],1
  40b7d7:	push   ds
  40b7d8:	sub    DWORD PTR [edi],eax
  40b7da:	adc    ebp,DWORD PTR ds:0x49224eb5
  40b7e0:	mov    ch,0x71
  40b7e2:	call   0x100f851e
  40b7e7:	fptan  
  40b7e9:	add    BYTE PTR [ecx+0xe79447d],dl
  40b7ef:	xchg   esi,eax
  40b7f0:	xor    al,0xd2
  40b7f2:	and    ch,BYTE PTR [edi]
  40b7f4:	push   ebp
  40b7f5:	adc    eax,0xc5d1ac7b
  40b7fa:	imul   edx,eax,0x73116ddc
  40b800:	icebp  
  40b801:	in     al,0x3a
  40b803:	or     bh,ah
  40b805:	aad    0xc
  40b807:	add    edi,DWORD PTR [eax+eax*8]
  40b80a:	xor    edx,edx
  40b80c:	inc    DWORD PTR [edi]
  40b80e:	popf   
  40b80f:	cmp    edx,edi
  40b811:	or     al,0x5d
  40b813:	push   es
  40b814:	(bad)  
  40b815:	loop   0x40b7fc
  40b817:	cdq    
  40b818:	aad    0x24
  40b81a:	enter  0xbad3,0xdf
  40b81e:	add    DWORD PTR [ebp+esi*8+0x3d49f0da],esp
  40b825:	cmc    
  40b826:	xchg   edx,eax
  40b827:	cdq    
  40b828:	aas    
  40b829:	arpl   WORD PTR [ebx],cx
  40b82b:	fs ret 0x1785
  40b82f:	loop   0x40b7c4
  40b831:	push   esp
  40b832:	xor    al,0xb6
  40b834:	pop    ecx
  40b835:	jno    0x40b892
  40b837:	dec    ebp
  40b838:	shl    ebp,0x18
  40b83b:	lods   al,BYTE PTR ds:[esi]
  40b83c:	and    al,0x17
  40b83e:	ja     0x40b892
  40b840:	dec    edi
  40b841:	cmp    al,0xb5
  40b843:	and    eax,0x7ff72e55
  40b848:	jmp    DWORD PTR [edx]
  40b84a:	dec    edi
  40b84b:	sbb    ebp,DWORD PTR [eax-0x211cdc43]
  40b851:	div    BYTE PTR [edi+0x1e]
  40b854:	cwde   
  40b855:	fmul   QWORD PTR [ebp-0x3159b0ec]
  40b85b:	(bad)  
  40b85c:	in     al,0xda
  40b85e:	pop    esi
  40b85f:	mov    al,0xd2
  40b861:	icebp  
  40b862:	mov    cl,0xcb
  40b864:	aas    
  40b865:	sub    BYTE PTR ds:0x36f2f09e,cl
  40b86b:	fldcw  WORD PTR [ebx+0x35]
  40b86e:	(bad)  
  40b86f:	ficom  DWORD PTR [edx-0x1641f87]
  40b875:	xlat   BYTE PTR ds:[ebx]
  40b876:	mov    eax,0x8a67c611
  40b87b:	hlt    
  40b87c:	dec    ecx
  40b87d:	js     0x40b8e9
  40b87f:	pop    esp
  40b880:	sub    al,0x9e
  40b882:	and    eax,0x778c8152
  40b887:	mov    esp,DWORD PTR [edx+0x2db42c86]
  40b88d:	jne    0x40b898
  40b88f:	(bad)  
  40b890:	sbb    ch,bl
  40b892:	scas   eax,DWORD PTR es:[edi]
  40b893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b894:	adc    DWORD PTR [edx-0x2],edx
  40b897:	cmp    BYTE PTR [edi+0x7b718dae],bh
  40b89d:	sbb    al,0x4e
  40b89f:	pop    ss
  40b8a0:	js     0x40b8e8
  40b8a2:	mul    DWORD PTR [esi]
  40b8a4:	in     al,dx
  40b8a5:	(bad)  
  40b8a6:	shl    BYTE PTR [ecx+eax*2+0x5d1493fa],1
  40b8ad:	xchg   DWORD PTR [eax+ebx*2-0x349b7e5c],ebx
  40b8b4:	xor    al,dh
  40b8b6:	pop    ecx
  40b8b7:	std    
  40b8b8:	or     BYTE PTR [ecx+0x39285635],bh
  40b8be:	stc    
  40b8bf:	jb     0x40b8d0
  40b8c1:	jae    0x40b88b
  40b8c3:	inc    edx
  40b8c4:	xor    BYTE PTR [ecx+ebx*4+0x37],0x6e
  40b8c9:	jbe    0x40b8a5
  40b8cb:	inc    esi
  40b8cc:	jbe    0x40b897
  40b8ce:	mov    esp,0xc7d02eb7
  40b8d3:	sub    eax,0xb3779068
  40b8d8:	push   es
  40b8d9:	sbb    eax,0x5eabee58
  40b8de:	es pusha 
  40b8e0:	test   DWORD PTR [ecx],0x4d25a3e6
  40b8e6:	dec    edi
  40b8e7:	mov    ah,ah
  40b8e9:	shr    BYTE PTR [ecx-0x7b7934f3],cl
  40b8ef:	mov    al,ds:0xc7f65e35
  40b8f4:	pop    ss
  40b8f5:	push   ebp
  40b8f6:	test   edi,0x5e75333e
  40b8fc:	not    BYTE PTR [ecx-0x5cb3c245]
  40b902:	outs   dx,DWORD PTR ds:[esi]
  40b903:	ins    DWORD PTR es:[edi],dx
  40b904:	mov    BYTE PTR [ebx+0x45],dl
  40b907:	imul   esp,edi,0x70af325a
  40b90d:	rol    BYTE PTR [edx],0x7d
  40b910:	and    DWORD PTR ds:0x141e94e0,ebp
  40b916:	ret    0x1b70
  40b919:	leave  
  40b91a:	pushf  
  40b91b:	xchg   ebx,eax
  40b91c:	add    DWORD PTR [ecx],0x6
  40b91f:	dec    edx
  40b920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b921:	lahf   
  40b922:	inc    edi
  40b923:	or     esp,ebx
  40b925:	and    eax,DWORD PTR [ebx+0x4d]
  40b928:	sub    dh,bh
  40b92a:	xlat   BYTE PTR ds:[ebx]
  40b92b:	out    0x1e,eax
  40b92d:	mov    cl,0x49
  40b92f:	aad    0x6d
  40b931:	js     0x40b95d
  40b933:	outs   dx,BYTE PTR ds:[esi]
  40b934:	xchg   esp,eax
  40b935:	adc    DWORD PTR [eax+0x35],esp
  40b938:	xchg   ecx,eax
  40b939:	fwait
  40b93a:	cli    
  40b93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b93c:	cmp    eax,ebp
  40b93e:	jnp    0x40b9ba
  40b940:	xchg   DWORD PTR [esi+ebp*2],esp
  40b943:	dec    dh
  40b945:	mov    ch,0x15
  40b947:	idiv   BYTE PTR [esi-0x45]
  40b94a:	and    ebx,eax
  40b94c:	in     eax,0xb5
  40b94e:	or     eax,0xbfd8d969
  40b953:	in     al,dx
  40b954:	mov    ah,BYTE PTR [ecx]
  40b956:	cmp    ah,ah
  40b958:	xchg   ecx,eax
  40b959:	cwde   
  40b95a:	sub    BYTE PTR [ecx+0x24],0xb7
  40b95e:	pop    es
  40b95f:	dec    esp
  40b960:	inc    edx
  40b961:	mov    esp,edx
  40b963:	mov    DWORD PTR [eax-0x5a],eax
  40b966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b967:	out    0xf2,eax
  40b969:	nop
  40b96a:	pop    esi
  40b96b:	ja     0x40b900
  40b96d:	gs call 0x76ee:0xe00eb459
  40b975:	jmp    0x40b96e
  40b977:	sub    al,BYTE PTR [ecx+0x4eacaa0d]
  40b97d:	bound  esi,QWORD PTR [edi-0x48]
  40b980:	mov    al,ds:0x18ef6bbb
  40b985:	mov    BYTE PTR [ecx-0x7c537a1e],ah
  40b98b:	(bad)  
  40b98c:	out    0x4f,al
  40b98e:	pop    ss
  40b98f:	sar    DWORD PTR [eax+0x1d63d131],1
  40b995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b996:	int    0x5f
  40b998:	jge    0x40b91b
  40b99a:	les    edi,FWORD PTR [ecx-0x4740a6cf]
  40b9a0:	jl     0x40ba03
  40b9a2:	lds    ebx,FWORD PTR [ecx+0x21]
  40b9a5:	aas    
  40b9a6:	fdivrp st(4),st
  40b9a8:	sbb    esp,DWORD PTR [eax+eax*4+0x56df6a2a]
  40b9af:	retf   
  40b9b0:	lds    edi,FWORD PTR [ebx*1-0x86d4002]
  40b9b7:	pop    ebp
  40b9b8:	sub    DWORD PTR [edi-0x4c74e29f],edx
  40b9be:	ror    BYTE PTR [ebx+ecx*8-0xfa8392c],1
  40b9c5:	adc    DWORD PTR [esi+0x30776f8b],edx
  40b9cb:	imul   esp,ecx,0x4c9a2a98
  40b9d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9d2:	pop    ebx
  40b9d3:	stos   BYTE PTR es:[edi],al
  40b9d4:	sbb    ah,BYTE PTR [edi]
  40b9d6:	clc    
  40b9d7:	shl    esi,cl
  40b9d9:	mov    esi,DWORD PTR [eax]
  40b9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9dc:	inc    ecx
  40b9dd:	dec    ebx
  40b9de:	call   FWORD PTR [eax-0x70ed3f6f]
  40b9e4:	es dec eax
  40b9e6:	(bad)  [ecx]
  40b9e8:	loop   0x40b9ac
  40b9ea:	inc    ebp
  40b9eb:	lea    esp,[esi+0x45]
  40b9ee:	aam    0xf5
  40b9f0:	mov    ds:0x52981fd3,al
  40b9f6:	xor    edx,ebx
  40b9f8:	stc    
  40b9f9:	push   eax
  40b9fa:	add    bl,al
  40b9fc:	mov    ah,0x51
  40b9fe:	pop    eax
  40b9ff:	ss loope 0x40ba0e
  40ba02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba03:	dec    ebp
  40ba04:	inc    edi
  40ba05:	cmp    al,0x30
  40ba07:	sub    al,0x53
  40ba09:	cmp    BYTE PTR [esi-0x6a],bh
  40ba0c:	or     ebx,ebp
  40ba0e:	push   ecx
  40ba0f:	sub    al,0x5e
  40ba11:	sub    BYTE PTR [edi],dh
  40ba13:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40ba15:	out    0x18,eax
  40ba17:	adc    BYTE PTR [ebx-0x10267f44],bl
  40ba1d:	pop    edi
  40ba1e:	fist   WORD PTR [esi+eax*8]
  40ba21:	pop    esi
  40ba22:	jecxz  0x40b9d6
  40ba24:	aam    0xe1
  40ba26:	jmp    0xf59:0x43980eba
  40ba2d:	xlat   BYTE PTR ds:[ebx]
  40ba2e:	mov    ebp,0x22109e22
  40ba33:	ins    DWORD PTR es:[edi],dx
  40ba34:	push   ebp
  40ba35:	xchg   esp,eax
  40ba36:	int3   
  40ba37:	aaa    
  40ba38:	push   esi
  40ba39:	dec    ebp
  40ba3a:	cli    
  40ba3b:	jge    0x40ba4d
  40ba3d:	pop    es
  40ba3e:	mov    eax,DWORD PTR [edi]
  40ba40:	int3   
  40ba41:	cmp    al,0x62
  40ba43:	mov    esi,0x2af2ec46
  40ba48:	call   0xf124:0x1fc59242
  40ba4f:	sbb    al,0x6d
  40ba51:	in     eax,dx
  40ba52:	bound  edi,QWORD PTR [ebp+0x57bf73d5]
  40ba58:	xor    eax,0xc3b82e4f
  40ba5d:	leave  
  40ba5e:	sub    ecx,ebp
  40ba60:	mov    esi,0x93f937b1
  40ba65:	stos   BYTE PTR es:[edi],al
  40ba66:	rcr    DWORD PTR [edi-0x2f],0xbd
  40ba6a:	mov    esi,0x44517bbd
  40ba6f:	fsin   
  40ba71:	or     eax,0x964c91ab
  40ba76:	retf   
  40ba77:	call   0x47d00706
  40ba7c:	sub    eax,0x8688d7aa
  40ba81:	clc    
  40ba82:	test   eax,0xfc7408e3
  40ba87:	mov    cl,0x95
  40ba89:	imul   esi,DWORD PTR [esp+esi*8+0x43b5ef13],0xbc35c3fc
  40ba94:	scas   al,BYTE PTR es:[edi]
  40ba95:	sub    BYTE PTR [ebp-0x40],0xdf
  40ba99:	scas   al,BYTE PTR es:[edi]
  40ba9a:	sub    eax,0x2f5ccf56
  40ba9f:	ret    0x4bf5
  40baa2:	mov    ds:0x2e00504a,eax
  40baa7:	adc    esp,DWORD PTR [ecx]
  40baa9:	jge    0x40bafd
  40baab:	sahf   
  40baac:	jecxz  0x40ba3c
  40baae:	xchg   edx,eax
  40baaf:	xor    al,0x66
  40bab1:	jp     0x40baa2
  40bab3:	popa   
  40bab4:	fs (bad) 
  40bab6:	hlt    
  40bab7:	cld    
  40bab8:	cmp    eax,0xe450ea8d
  40babd:	and    eax,esi
  40babf:	mov    dh,0x50
  40bac1:	(bad)  
  40bac2:	dec    DWORD PTR [ebp+0x6b]
  40bac5:	xchg   edi,eax
  40bac6:	(bad)  
  40bac7:	and    dl,ah
  40bac9:	mov    ds:0xaf653f25,al
  40bace:	out    dx,al
  40bacf:	add    ah,BYTE PTR [edx+0x60]
  40bad2:	push   0x4a5e4741
  40bad7:	mov    eax,ds:0xb84b00c6
  40badc:	jecxz  0x40ba8b
  40bade:	cmp    al,ah
  40bae0:	xor    bl,cl
  40bae2:	test   DWORD PTR [edx+0x4c],ecx
  40bae5:	pusha  
  40bae6:	cmp    ebx,DWORD PTR [edi-0x74]
  40bae9:	gs stos DWORD PTR es:[edi],eax
  40baeb:	scas   al,BYTE PTR es:[edi]
  40baec:	(bad)  
  40baed:	leave  
  40baee:	add    BYTE PTR [edi-0x6a4b5451],cl
  40baf4:	adc    BYTE PTR [esi-0x5055c285],al
  40bafa:	sub    BYTE PTR [ebx-0x60],0x1e
  40bafe:	mov    ecx,0xa60931d9
  40bb03:	enter  0x8c3e,0x20
  40bb07:	pop    es
  40bb08:	out    dx,eax
  40bb09:	xchg   ebp,eax
  40bb0a:	mov    eax,ds:0x790c87cf
  40bb0f:	outs   dx,DWORD PTR ds:[esi]
  40bb10:	push   0x37
  40bb12:	push   ds
  40bb13:	fmul   st(7),st
  40bb16:	xchg   ecx,eax
  40bb17:	ret    
  40bb18:	lea    edx,[edx+0x38]
  40bb1b:	aas    
  40bb1c:	mov    bh,0x8b
  40bb1e:	ss nop
  40bb20:	xchg   ebp,eax
  40bb21:	enter  0x65af,0x63
  40bb25:	and    bh,BYTE PTR [ebx+eiz*8]
  40bb28:	(bad)  [esi-0x7d]
  40bb2b:	lahf   
  40bb2c:	push   ecx
  40bb2d:	inc    esp
  40bb2e:	adc    al,0x67
  40bb30:	nop
  40bb31:	and    cl,BYTE PTR [ecx+esi*8-0x25]
  40bb35:	jp     0x40bb0b
  40bb37:	xor    ah,BYTE PTR [ebp+eax*2-0x47416f71]
  40bb3e:	mov    ecx,0x1918d92c
  40bb43:	outs   dx,DWORD PTR ds:[esi]
  40bb44:	pusha  
  40bb45:	xchg   edx,eax
  40bb46:	add    eax,0x2d3f7e6a
  40bb4b:	xor    edx,ecx
  40bb4d:	out    0xa4,eax
  40bb4f:	outs   dx,DWORD PTR ds:[esi]
  40bb50:	in     al,dx
  40bb51:	jmp    0x40bb89
  40bb53:	mov    ah,0x51
  40bb55:	sbb    DWORD PTR [ecx+esi*8+0xc38f1f4],ecx
  40bb5c:	jmp    0x22ce1c0c
  40bb61:	mov    esi,0x3dd5c4ce
  40bb66:	retf   0x67b2
  40bb69:	clc    
  40bb6a:	sub    ch,BYTE PTR cs:[ecx-0x4b89fcd5]
  40bb71:	add    eax,0x6cf9af84
  40bb76:	adc    eax,0x1535caa6
  40bb7b:	mov    cl,0xc5
  40bb7d:	inc    edx
  40bb7e:	mov    dh,0x5f
  40bb80:	lods   eax,DWORD PTR ds:[esi]
  40bb81:	sub    al,0xdc
  40bb83:	push   ss
  40bb84:	and    BYTE PTR [ebx+eiz*1+0x58],al
  40bb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb89:	out    0xc,eax
  40bb8b:	jecxz  0x40bb99
  40bb8d:	push   es
  40bb8e:	repnz outs dx,DWORD PTR ds:[esi]
  40bb90:	pop    ebp
  40bb91:	sub    eax,0x3afce56
  40bb96:	sbb    bl,BYTE PTR [eax]
  40bb98:	int3   
  40bb99:	loopne 0x40bb2a
  40bb9b:	test   al,0x90
  40bb9d:	pop    edi
  40bb9e:	add    eax,0xc5eaeb35
  40bba3:	lods   al,BYTE PTR ds:[esi]
  40bba4:	stos   DWORD PTR es:[edi],eax
  40bba5:	push   es
  40bba6:	(bad)
  40bba9:	add    eax,DWORD PTR [eax+0x14]
  40bbac:	dec    ebx
  40bbad:	fld    st(5)
  40bbaf:	sahf   
  40bbb0:	add    eax,0x576c4efc
  40bbb5:	imul   ecx,DWORD PTR [edx],0x6612d4bf
  40bbbb:	outs   dx,BYTE PTR ds:[esi]
  40bbbc:	dec    ecx
  40bbbd:	pop    eax
  40bbbe:	adc    eax,0x70110396
  40bbc3:	ja     0x40bb78
  40bbc5:	fisubr WORD PTR [ebp+0x24]
  40bbc8:	jg     0x40bc46
  40bbca:	outs   dx,BYTE PTR ds:[esi]
  40bbcb:	add    ecx,ebp
  40bbcd:	cs mov fs,esi
  40bbd0:	pop    ebx
  40bbd1:	sub    eax,0x1f3ff2ca
  40bbd6:	mov    ebx,0xfe46cf9c
  40bbdb:	sub    esp,0x2cb04f20
  40bbe1:	lds    edx,FWORD PTR [esi-0x61280cb7]
  40bbe7:	pop    edx
  40bbe8:	leave  
  40bbe9:	out    0x7c,al
  40bbeb:	loopne 0x40bc4d
  40bbed:	(bad)  
  40bbef:	mov    cl,0x6
  40bbf1:	das    
  40bbf2:	repnz and al,0x18
  40bbf5:	mov    ch,0x41
  40bbf7:	stos   BYTE PTR es:[edi],al
  40bbf8:	mov    eax,ds:0x63a7d790
  40bbfd:	push   edi
  40bbfe:	sbb    al,0x6f
  40bc00:	adc    eax,0x67c67593
  40bc05:	sub    al,0xf9
  40bc07:	xlat   BYTE PTR ds:[ebx]
  40bc08:	aad    0x91
  40bc0a:	pop    ecx
  40bc0b:	mov    esp,0x981fd957
  40bc10:	ja     0x40bbd2
  40bc12:	pop    ebx
  40bc13:	ror    BYTE PTR [edi+0x25a54b15],1
  40bc19:	js     0x40bc76
  40bc1b:	lea    esi,[edi-0x6adc05b2]
  40bc21:	lahf   
  40bc22:	loope  0x40bc30
  40bc24:	test   al,0x33
  40bc26:	push   eax
  40bc27:	lods   al,BYTE PTR ds:[esi]
  40bc28:	inc    ecx
  40bc29:	adc    WORD PTR [ecx-0x5db0192d],0x2cd0
  40bc32:	xchg   ebx,eax
  40bc33:	mov    ?,WORD PTR [edi]
  40bc35:	pop    ss
  40bc36:	lahf   
  40bc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc38:	bound  eax,QWORD PTR [esi+0x2cd8dc0a]
  40bc3e:	fiadd  DWORD PTR [esi-0x1a]
  40bc41:	fst    DWORD PTR [esi+ebp*2+0x6ad8e83f]
  40bc48:	fucom  st(3)
  40bc4a:	test   al,0xed
  40bc4c:	punpcklbw mm6,DWORD PTR [edi+0x3e]
  40bc50:	cdq    
  40bc51:	test   al,0x94
  40bc53:	push   cs
  40bc54:	fst    QWORD PTR [esi+0x59710815]
  40bc5a:	fcmovu st,st(0)
  40bc5c:	xchg   bl,cl
  40bc5e:	sbb    ah,BYTE PTR [ebx+0x644d3418]
  40bc64:	xchg   eax,ebp
  40bc66:	pop    ebx
  40bc67:	loope  0x40bcdf
  40bc69:	xor    DWORD PTR [esi-0x5a],ebx
  40bc6c:	aad    0x14
  40bc6e:	ins    DWORD PTR es:[edi],dx
  40bc6f:	add    dl,bl
  40bc71:	inc    eax
  40bc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc73:	and    al,0x92
  40bc75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc76:	jbe    0x40bcca
  40bc78:	out    0x2e,al
  40bc7a:	stos   BYTE PTR es:[edi],al
  40bc7b:	nop
  40bc7c:	mov    ebx,0x2ba49d12
  40bc81:	push   esp
  40bc82:	and    al,0xc1
  40bc84:	xchg   ebx,eax
  40bc85:	test   bl,bl
  40bc87:	int    0x71
  40bc89:	(bad)  
  40bc8a:	push   ds
  40bc8b:	mov    ebx,0x42eccb0b
  40bc90:	mov    eax,0x9d735094
  40bc95:	loopne 0x40bc56
  40bc97:	pop    esi
  40bc98:	sti    
  40bc99:	lahf   
  40bc9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc9b:	popf   
  40bc9c:	fwait
  40bc9d:	int    0x78
  40bc9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca0:	jl     0x40bc6f
  40bca2:	push   edx
  40bca3:	and    eax,0x762c0c90
  40bca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bca9:	bnd jne 0x40bd25
  40bcac:	ins    DWORD PTR es:[edi],dx
  40bcad:	jg     0x40bc3c
  40bcaf:	scas   eax,DWORD PTR es:[edi]
  40bcb0:	jns    0x40bce3
  40bcb2:	mov    esp,0x4b82f6ee
  40bcb7:	mov    al,0x69
  40bcb9:	in     eax,0x80
  40bcbb:	and    al,0xf9
  40bcbd:	push   esp
  40bcbe:	sbb    edi,0xffffff8b
  40bcc1:	inc    ecx
  40bcc2:	(bad)  
  40bcc3:	stc    
  40bcc4:	fsubr  DWORD PTR [bp-0x26ae]
  40bcc9:	and    bl,BYTE PTR [ebx-0x1]
  40bccc:	cmp    esi,ebp
  40bcce:	ins    BYTE PTR es:[edi],dx
  40bccf:	sbb    eax,0xb3200a9f
  40bcd4:	xchg   esi,eax
  40bcd5:	adc    DWORD PTR [ebp+eiz*8+0xd],0x399e118a
  40bcdd:	cmp    eax,0xf11e4ee2
  40bce2:	dec    esp
  40bce3:	mov    esi,0xf43f8664
  40bce8:	enter  0xeb20,0x64
  40bcec:	imul   eax,ecx,0xdae0eea5
  40bcf2:	lahf   
  40bcf3:	jmp    DWORD PTR ds:0xc7b000b3
  40bcf9:	inc    esp
  40bcfa:	sub    eax,0x7ba7f28e
  40bcff:	jae    0x40bc8c
  40bd01:	stos   DWORD PTR es:[edi],eax
  40bd02:	in     al,0xb0
  40bd04:	xchg   edi,eax
  40bd05:	(bad)  
  40bd06:	or     dh,BYTE PTR [edi]
  40bd08:	std    
  40bd09:	xchg   edx,eax
  40bd0a:	mov    edx,0x3ac026ef
  40bd0f:	into   
  40bd10:	sub    eax,0x969a1ea1
  40bd15:	and    eax,0xb4842917
  40bd1a:	sbb    cl,BYTE PTR [ebx+ebp*2-0x1c575d74]
  40bd21:	int    0xe3
  40bd23:	stos   BYTE PTR es:[edi],al
  40bd24:	inc    edx
  40bd25:	imul   ebx,DWORD PTR [esp+edx*4],0x7c
  40bd29:	lods   al,BYTE PTR ds:[esi]
  40bd2a:	push   esp
  40bd2b:	lahf   
  40bd2c:	adc    BYTE PTR [edi-0x10a0459d],ah
  40bd32:	push   edi
  40bd33:	(bad)  
  40bd34:	stc    
  40bd35:	dec    esi
  40bd36:	mov    dh,0x5f
  40bd38:	jne    0x40bd49
  40bd3a:	(bad)  
  40bd3b:	xor    BYTE PTR [esi-0x6ed77a22],dh
  40bd41:	imul   edx,DWORD PTR [esi+0x3a],0xc3ba2ff6
  40bd48:	test   DWORD PTR [ebx-0x3b69da44],edi
  40bd4e:	cmp    ebp,DWORD PTR [ecx-0x50]
  40bd51:	ins    BYTE PTR es:[edi],dx
  40bd52:	pop    ss
  40bd53:	and    al,0x2b
  40bd55:	cmc    
  40bd56:	in     eax,dx
  40bd57:	add    eax,0xcaa68082
  40bd5c:	js     0x40bd21
  40bd5e:	rol    BYTE PTR [edx+esi*4-0x1f],cl
  40bd62:	pusha  
  40bd63:	fs dec edx
  40bd65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd66:	xchg   edx,eax
  40bd67:	aas    
  40bd68:	loope  0x40bdae
  40bd6a:	jl     0x40bd02
  40bd6c:	sub    DWORD PTR [ebp+0x4e],ecx
  40bd6f:	sub    bl,ch
  40bd71:	xlat   BYTE PTR ds:[ebx]
  40bd72:	jmp    0x53bbcdcf
  40bd77:	shl    DWORD PTR [esi],1
  40bd79:	push   ecx
  40bd7a:	push   ss
  40bd7b:	inc    ebx
  40bd7c:	pop    ecx
  40bd7d:	pushf  
  40bd7e:	jno    0x40bd42
  40bd80:	call   0x658f:0x95ed8e2e
  40bd87:	jmp    0x40bdff
  40bd89:	aas    
  40bd8a:	ins    BYTE PTR es:[edi],dx
  40bd8b:	jo     0x40bd8b
  40bd8d:	sub    eax,DWORD PTR [edx+0x347044c6]
  40bd93:	mov    eax,ds:0x2b18e44e
  40bd98:	sahf   
  40bd99:	pop    ds
  40bd9a:	jecxz  0x40bd9a
  40bd9c:	mov    ebx,0x2a06c1d4
  40bda1:	addr16 jl 0x40be03
  40bda4:	(bad)  
  40bda5:	into   
  40bda6:	je     0x40bd89
  40bda8:	gs dec esi
  40bdaa:	mov    esp,0x569551d0
  40bdaf:	push   ss
  40bdb0:	sub    ecx,DWORD PTR [esp+edi*8-0xe]
  40bdb4:	pop    edi
  40bdb5:	add    edi,eax
  40bdb7:	push   esi
  40bdb8:	jg     0x40bde5
  40bdba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdbb:	lods   al,BYTE PTR ds:[esi]
  40bdbc:	retf   
  40bdbd:	fnstenv [ebp-0x1a]
  40bdc0:	add    eax,0x56bfa0fa
  40bdc5:	add    ecx,ecx
  40bdc7:	xchg   ebx,eax
  40bdc8:	les    ecx,FWORD PTR [ebp+0x2f]
  40bdcb:	or     DWORD PTR [ecx],ecx
  40bdcd:	repz push ebp
  40bdcf:	outs   dx,BYTE PTR ds:[esi]
  40bdd0:	and    BYTE PTR [ebx],al
  40bdd2:	mov    ds:0x7803acb4,eax
  40bdd7:	cwde   
  40bdd8:	jne    0x40bd7f
  40bdda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bddb:	dec    ecx
  40bddc:	or     cl,dl
  40bdde:	sbb    al,0xff
  40bde0:	jp     0x40bdad
  40bde2:	mov    ebx,0x47501f43
  40bde7:	jne    0x40be14
  40bde9:	lods   al,BYTE PTR ds:[esi]
  40bdea:	retf   0x87bb
  40bded:	cdq    
  40bdee:	and    ebp,DWORD PTR [ecx-0x50353238]
  40bdf4:	cmp    al,0x48
  40bdf6:	pop    esi
  40bdf7:	das    
  40bdf8:	jne    0x40be6f
  40bdfa:	add    bh,BYTE PTR [eax-0x1f04d686]
  40be00:	xlat   BYTE PTR ds:[ebx]
  40be01:	push   eax
  40be02:	int3   
  40be03:	pop    eax
  40be04:	lea    ebp,[ebx]
  40be06:	mov    bh,0xb1
  40be08:	jmp    0xbd7e84db
  40be0d:	mov    bh,0x7f
  40be0f:	ret    
  40be10:	add    eax,0x3f08dbe5
  40be15:	add    al,0x3e
  40be17:	in     eax,0x9f
  40be19:	push   ebp
  40be1a:	xchg   edx,eax
  40be1b:	cld    
  40be1c:	xor    al,0xb2
  40be1e:	retf   
  40be1f:	xor    esi,DWORD PTR ds:0x4983c0af
  40be25:	call   0x5e1e:0xc62b85fe
  40be2c:	and    bl,BYTE PTR [edi]
  40be2e:	call   0xa1f82e3b
  40be33:	jo     0x40bea3
  40be35:	sub    DWORD PTR ds:0xba79fd40,edi
  40be3b:	lods   al,BYTE PTR ds:[esi]
  40be3c:	add    al,al
  40be3e:	pop    ecx
  40be3f:	cmc    
  40be40:	or     bl,dl
  40be42:	daa    
  40be43:	xor    BYTE PTR [ebx+eax*2+0x5e],0xe6
  40be48:	sbb    al,BYTE PTR [ebx-0x46]
  40be4b:	add    ch,BYTE PTR [esi-0x7d04c4c9]
  40be51:	in     al,0x45
  40be53:	test   eax,0xfc06264e
  40be58:	cmp    al,0xfa
  40be5a:	mov    edi,0x6de99b2b
  40be5f:	rcl    BYTE PTR [ebx+0x35ba19ed],1
  40be65:	push   es
  40be66:	xor    BYTE PTR [eax-0x325fa7fd],dh
  40be6c:	repz xor eax,0x34c8ee92
  40be72:	push   ds
  40be73:	js     0x40be1f
  40be75:	fild   WORD PTR [eax]
  40be77:	fnstcw WORD PTR [ebx-0x35d832bd]
  40be7d:	stos   BYTE PTR es:[edi],al
  40be7e:	sub    BYTE PTR [esi],0xfc
  40be81:	adc    esi,DWORD PTR [ecx]
  40be83:	push   esp
  40be84:	shl    bl,cl
  40be86:	stc    
  40be87:	call   0x54f8e3d7
  40be8c:	cmp    eax,0xe132edf4
  40be91:	(bad)  
  40be93:	fnstenv [edi+0x4e]
  40be96:	add    ch,BYTE PTR [edx-0x51]
  40be99:	cld    
  40be9a:	mov    esi,0xb46bfb95
  40be9f:	lds    eax,FWORD PTR [edi+0x7bb56556]
  40bea5:	in     al,0xff
  40bea7:	js     0x40bf16
  40bea9:	gs adc esp,edx
  40beac:	xor    eax,0x5617e91b
  40beb1:	data16 mov ch,bl
  40beb4:	std    
  40beb5:	add    ebx,DWORD PTR [ebp+0x71e2a86e]
  40bebb:	adc    al,0x1e
  40bebd:	mov    bh,cl
  40bebf:	mov    ebp,0xf5f993a4
  40bec4:	push   ebx
  40bec5:	inc    ebx
  40bec6:	rcr    BYTE PTR [ebp-0x78],cl
  40bec9:	sbb    eax,0x70873b33
  40bece:	pop    edx
  40becf:	mov    esp,0xc7866a5b
  40bed4:	ror    BYTE PTR [esi],1
  40bed6:	pop    ss
  40bed7:	dec    ebp
  40bed8:	jb     0x40bec6
  40beda:	aas    
  40bedb:	ret    0x581b
  40bede:	adc    eax,0x48010bd0
  40bee3:	adc    bl,ah
  40bee5:	mov    esi,0x557fa761
  40beea:	add    esp,esp
  40beec:	lods   al,BYTE PTR ds:[esi]
  40beed:	mov    bl,al
  40beef:	mov    ebp,0x9ff02c66
  40bef5:	mov    eax,ds:0x29718027
  40befa:	fmul   QWORD PTR ds:0x7787690
  40bf00:	or     eax,0x25a8dacf
  40bf05:	adc    ebx,DWORD PTR [edx]
  40bf07:	lods   eax,DWORD PTR ds:[esi]
  40bf08:	hlt    
  40bf09:	and    DWORD PTR [eax],eax
  40bf0b:	jp     0x40beb3
  40bf0d:	jmp    0x1f908de4
  40bf12:	(bad)  
  40bf15:	and    DWORD PTR ds:0x871acd02,ecx
  40bf1b:	xchg   ebp,eax
  40bf1c:	jmp    0x6700ed78
  40bf21:	cmp    al,al
  40bf23:	inc    BYTE PTR [eax]
  40bf25:	jo     0x40bf61
  40bf27:	xchg   DWORD PTR [ecx+0x42],esp
  40bf2a:	call   0xd290:0xc3773afe
  40bf31:	adc    edi,esi
  40bf33:	mov    al,ds:0x6d6f24b
  40bf38:	std    
  40bf39:	sub    DWORD PTR [edx-0x3d],eax
  40bf3c:	xchg   ebp,eax
  40bf3d:	popf   
  40bf3e:	ss mov dl,0x36
  40bf41:	jge    0x40bef9
  40bf43:	dec    ecx
  40bf44:	push   edx
  40bf45:	cmp    dl,BYTE PTR [edx]
  40bf47:	sub    ebx,DWORD PTR [esi-0x60f7f2da]
  40bf4d:	rcr    BYTE PTR [edi+0x2a],0x19
  40bf51:	lahf   
  40bf52:	popf   
  40bf53:	adc    al,0xd9
  40bf55:	js     0x40bfd2
  40bf57:	xlat   BYTE PTR ds:[ebx]
  40bf58:	lea    ecx,[esi+0x1528b9aa]
  40bf5e:	les    ebp,FWORD PTR [esi-0x5c6591ac]
  40bf64:	aas    
  40bf65:	dec    eax
  40bf66:	popf   
  40bf67:	lods   al,BYTE PTR ds:[esi]
  40bf68:	hlt    
  40bf69:	or     BYTE PTR ss:[ecx-0x2c],bl
  40bf6d:	aam    0x5c
  40bf6f:	xchg   esi,eax
  40bf70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf71:	sti    
  40bf72:	scas   eax,DWORD PTR es:[edi]
  40bf73:	rol    DWORD PTR [ecx],1
  40bf75:	imul   esi,esi,0x844ccacf
  40bf7b:	int    0xc7
  40bf7d:	adc    dl,BYTE PTR [eax+edx*4+0x4]
  40bf81:	ja     0x40bfe5
  40bf83:	jg     0x40bfc2
  40bf85:	test   DWORD PTR [ecx],eax
  40bf87:	fucomip st,st(1)
  40bf89:	mov    BYTE PTR [ebx-0x4f],dh
  40bf8c:	pop    ecx
  40bf8d:	pop    ebx
  40bf8e:	mov    eax,0x33dd0a5f
  40bf93:	in     al,dx
  40bf94:	jbe    0x40bfe5
  40bf96:	jge    0x40bfdb
  40bf98:	dec    esp
  40bf99:	inc    ecx
  40bf9a:	js     0x40bf32
  40bf9c:	cs mov ecx,0x2dbf5ca4
  40bfa2:	in     eax,0x31
  40bfa4:	and    BYTE PTR [ebx-0x3596f689],cl
  40bfaa:	aaa    
  40bfab:	sbb    dl,BYTE PTR [edi-0x4aa053e9]
  40bfb1:	inc    ebp
  40bfb2:	popa   
  40bfb3:	add    eax,ebp
  40bfb5:	int3   
  40bfb6:	test   DWORD PTR [ecx-0x79],esp
  40bfb9:	cmp    DWORD PTR [eax-0x6c2a7a1e],0x57457bdd
  40bfc3:	rol    BYTE PTR [ecx],0x74
  40bfc6:	fstp   QWORD PTR [edx+esi*8-0x7f5b4405]
  40bfcd:	and    eax,ebp
  40bfcf:	jnp    0x40c03e
  40bfd1:	jl     0x40bff2
  40bfd3:	retf   0x6cfa
  40bfd6:	in     al,0x52
  40bfd8:	into   
  40bfd9:	jmp    0x3f86:0x8593dfdc
  40bfe0:	mov    bl,0x3c
  40bfe2:	daa    
  40bfe3:	call   0x2924:0x7d2b1896
  40bfea:	push   edi
  40bfeb:	aaa    
  40bfec:	pop    eax
  40bfed:	dec    edi
  40bfee:	lods   al,BYTE PTR ds:[esi]
  40bfef:	push   ebp
  40bff0:	pop    esp
  40bff1:	push   cs
  40bff2:	iret   
  40bff3:	mov    gs,WORD PTR [ebp-0xd]
  40bff6:	mov    bl,0x1c
  40bff8:	(bad)  
  40bff9:	or     dh,BYTE PTR [eax+0x52]
  40bffc:	push   DWORD PTR [edx+edx*8-0x3e]
  40c000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c001:	mov    BYTE PTR [edx-0x440f47c9],dl
  40c007:	leave  
  40c008:	add    dh,BYTE PTR [edx]
  40c00a:	int3   
  40c00b:	jmp    0x40c077
  40c00d:	pushf  
  40c00e:	cmp    BYTE PTR [ecx-0x609b66f4],al
  40c014:	or     eax,0x6c9c79a4
  40c019:	out    dx,eax
  40c01a:	fimul  DWORD PTR [esi]
  40c01c:	popa   
  40c01d:	mov    eax,ds:0xdae11c77
  40c022:	push   ds
  40c023:	retf   0xb83e
  40c026:	scas   eax,DWORD PTR es:[edi]
  40c027:	out    0x70,eax
  40c029:	mov    cs,esp
  40c02b:	xchg   ebp,eax
  40c02c:	cli    
  40c02d:	clc    
  40c02e:	cmp    bl,al
  40c030:	or     al,0x77
  40c032:	sub    eax,DWORD PTR [eax+0x3f]
  40c035:	pop    esi
  40c036:	iret   
  40c037:	clc    
  40c038:	imul   esi,DWORD PTR [edx+0x34f83ada],0xb4f77cbb
  40c042:	aam    0xf4
  40c044:	dec    ebx
  40c045:	inc    ecx
  40c046:	(bad)  
  40c047:	jb     0x40c067
  40c049:	jg     0x40c0af
  40c04b:	(bad)  
  40c04c:	fisub  WORD PTR [edx+eax*8+0x1e]
  40c050:	sbb    eax,0x9c81a5a0
  40c055:	adc    esp,ebx
  40c057:	pop    esi
  40c058:	and    eax,0xe26b4b42
  40c05d:	scas   eax,DWORD PTR es:[edi]
  40c05e:	in     eax,0x1f
  40c060:	repnz (bad)
  40c063:	(bad)  
  40c064:	or     DWORD PTR [ebx+0x25ecdb24],0xffffffbd
  40c06b:	gs stos DWORD PTR es:[edi],eax
  40c06d:	retf   
  40c06e:	adc    ebx,eax
  40c070:	aam    0x21
  40c072:	mov    ecx,0x4491b1ae
  40c077:	push   eax
  40c078:	sbb    DWORD PTR [bx-0x39cc],0xd6a8049e
  40c081:	in     al,0xf3
  40c083:	xlat   BYTE PTR ds:[ebx]
  40c084:	xor    edi,edi
  40c086:	nop
  40c087:	les    ecx,FWORD PTR [edi]
  40c089:	add    DWORD PTR [ecx-0x5195e1f3],0xb11c5467
  40c093:	je     0x40c0e2
  40c095:	outs   dx,BYTE PTR ds:[esi]
  40c096:	add    DWORD PTR [ecx-0x51],edx
  40c099:	inc    esi
  40c09a:	imul   ebp,DWORD PTR ss:[ebx],0x24
  40c09e:	sahf   
  40c09f:	push   ebx
  40c0a0:	(bad)  
  40c0a1:	mov    ebp,0x577c66f1
  40c0a6:	rcr    DWORD PTR ds:0xf000aa83,1
  40c0ac:	and    edi,DWORD PTR [ecx]
  40c0ae:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b0:	loop   0x40c05b
  40c0b2:	push   ecx
  40c0b3:	cmp    al,0xaa
  40c0b5:	push   ds
  40c0b6:	fisttp WORD PTR [eax-0x38]
  40c0b9:	add    ecx,0x4ce4ec4b
  40c0bf:	outs   dx,DWORD PTR ds:[esi]
  40c0c0:	shl    DWORD PTR [ecx+0x5e5650f3],cl
  40c0c6:	loope  0x40c074
  40c0c8:	imul   ecx,DWORD PTR [ecx+0x26],0x645074e3
  40c0cf:	pop    esp
  40c0d0:	(bad)  
  40c0d1:	jge    0x40c108
  40c0d3:	push   es
  40c0d4:	cmc    
  40c0d5:	and    DWORD PTR [ebx],edi
  40c0d7:	or     al,0x88
  40c0d9:	or     ecx,edi
  40c0db:	mov    bl,0x2e
  40c0dd:	add    DWORD PTR [ebx-0x80],ebx
  40c0e0:	in     eax,0x85
  40c0e2:	shr    BYTE PTR [esi+0x28],1
  40c0e5:	aas    
  40c0e6:	or     bl,BYTE PTR [esi+ebx*2+0x11ed4fe9]
  40c0ed:	fild   WORD PTR [ebp+ebp*2+0x71]
  40c0f1:	daa    
  40c0f2:	in     eax,dx
  40c0f3:	xchg   cl,bh
  40c0f5:	call   0xcb01:0x2a6554ad
  40c0fc:	and    DWORD PTR [esi],edx
  40c0fe:	mov    al,ds:0x5845ebcb
  40c103:	pop    es
  40c104:	test   DWORD PTR [ecx+0x7c9fa598],ebp
  40c10a:	mov    eax,ds:0xcf00efca
  40c10f:	mov    edx,0x38809fdf
  40c114:	loope  0x40c17c
  40c116:	fdivr  DWORD PTR [eax-0x1dc5e8f6]
  40c11c:	add    DWORD PTR [edi-0x4b],0x2f2c4608
  40c123:	push   0x18d97eaf
  40c128:	aad    0x3a
  40c12a:	mov    bl,BYTE PTR [eax+0x7ae0a85a]
  40c130:	inc    ecx
  40c131:	mov    al,0x42
  40c133:	adc    eax,0x31818518
  40c138:	hlt    
  40c139:	mov    bl,0x62
  40c13b:	stos   DWORD PTR es:[edi],eax
  40c13c:	mov    ds:0x98b91de,al
  40c141:	sar    ah,1
  40c143:	mov    al,0xf8
  40c145:	sub    eax,0xc1640f06
  40c14a:	xor    eax,0x2640e1f9
  40c14f:	adc    al,0x72
  40c151:	sub    edi,DWORD PTR [ebp-0x1e]
  40c154:	pop    DWORD PTR [eax]
  40c156:	frstor [edx-0x1]
  40c159:	int    0xf8
  40c15b:	jmp    0xdcc77ded
  40c160:	xlat   BYTE PTR ds:[ebx]
  40c161:	int3   
  40c162:	adc    ah,BYTE PTR es:[edi+0x7d042315]
  40c169:	sbb    BYTE PTR [ebp+0x482b79e6],dh
  40c16f:	nop
  40c170:	jo     0x40c14b
  40c172:	daa    
  40c173:	pop    ss
  40c174:	or     al,BYTE PTR [ebx+0x29]
  40c177:	int    0x51
  40c179:	push   es
  40c17a:	adc    BYTE PTR [esi],dl
  40c17c:	imul   esp,DWORD PTR [edx-0x2],0x7
  40c180:	cli    
  40c181:	and    DWORD PTR [edx],ebx
  40c183:	sbb    esp,ecx
  40c185:	sub    eax,eax
  40c187:	add    esp,DWORD PTR [eax-0x54]
  40c18a:	push   eax
  40c18b:	sbb    eax,DWORD PTR [ebx]
  40c18d:	es retf 0x22a7
  40c191:	ja     0x40c171
  40c193:	xchg   esp,eax
  40c194:	xchg   edi,eax
  40c195:	fidiv  DWORD PTR [ecx+0x4430992]
  40c19b:	fldenv [eax-0x799eb3b9]
  40c1a1:	mov    esi,ecx
  40c1a3:	or     eax,0x7f081d82
  40c1a8:	jo     0x40c1ad
  40c1aa:	popa   
  40c1ab:	add    cl,ah
  40c1ad:	push   ss
  40c1ae:	imul   esp,ebp,0x4e
  40c1b1:	sar    DWORD PTR [ecx],0x20
  40c1b4:	cmp    ecx,esi
  40c1b6:	aam    0xbc
  40c1b8:	retf   
  40c1b9:	dec    ecx
  40c1ba:	in     eax,dx
  40c1bb:	ins    BYTE PTR es:[edi],dx
  40c1bc:	out    dx,eax
  40c1bd:	jne    0x40c228
  40c1bf:	dec    edi
  40c1c0:	cmp    eax,0x58334979
  40c1c5:	mov    ebp,0xded0afbc
  40c1ca:	int    0x7b
  40c1cc:	aam    0xac
  40c1ce:	mov    dl,0x66
  40c1d0:	pop    ds
  40c1d1:	ror    ebp,1
  40c1d3:	jb     0x40c252
  40c1d5:	inc    esp
  40c1d6:	jo     0x40c1b4
  40c1d8:	inc    edx
  40c1d9:	test   BYTE PTR [eax+0x2557649b],ch
  40c1df:	pop    ss
  40c1e0:	cwde   
  40c1e1:	xchg   ecx,eax
  40c1e2:	bound  eax,QWORD PTR [edx+0x58]
  40c1e5:	cmp    DWORD PTR [esi+eax*1+0x77],0xffffffcb
  40c1ea:	cli    
  40c1eb:	loop   0x40c265
  40c1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ee:	push   ss
  40c1ef:	mov    DWORD PTR [ebx],ebp
  40c1f1:	lods   al,BYTE PTR ds:[esi]
  40c1f2:	dec    ebp
  40c1f3:	mov    ds:0xa5a6c5df,eax
  40c1f8:	js     0x40c222
  40c1fa:	mov    ch,BYTE PTR ds:0x5e36816d
  40c200:	and    ecx,edi
  40c202:	xor    ch,BYTE PTR [ecx-0x6a]
  40c205:	dec    esp
  40c206:	cli    
  40c207:	in     al,0xab
  40c209:	gs mov ah,0xa7
  40c20c:	xlat   BYTE PTR ds:[ebx]
  40c20d:	dec    eax
  40c20e:	lock xor ebp,DWORD PTR [eax-0x14]
  40c212:	jns    0x40c1d2
  40c214:	icebp  
  40c215:	or     al,0xce
  40c217:	cmp    eax,0x9eec497e
  40c21c:	push   ss
  40c21d:	fstp   TBYTE PTR [edx]
  40c21f:	mov    ebx,0x8f23cded
  40c224:	shl    DWORD PTR [esp+esi*1-0x55174519],cl
  40c22b:	jne    0x40c29a
  40c22d:	xchg   ecx,eax
  40c22e:	push   cs
  40c22f:	dec    ebx
  40c230:	xchg   esp,eax
  40c232:	or     DWORD PTR [edi],esp
  40c234:	push   es
  40c235:	mov    eax,es
  40c237:	test   DWORD PTR [edx],ebp
  40c239:	push   eax
  40c23a:	icebp  
  40c23b:	inc    esi
  40c23c:	(bad)  
  40c23d:	jmp    0x40c1ec
  40c23f:	dec    ebx
  40c240:	push   ds
  40c241:	lahf   
  40c242:	(bad)  
  40c243:	sbb    eax,0x6dcd1c7
  40c248:	hlt    
  40c249:	ja     0x40c2c4
  40c24b:	sbb    al,0x62
  40c24d:	push   DWORD PTR [esi+0x4121fb7c]
  40c253:	lods   al,BYTE PTR ds:[si]
  40c255:	pop    ecx
  40c256:	fild   DWORD PTR ds:0x1a30a5b9
  40c25c:	ret    0x709b
  40c25f:	ror    BYTE PTR [bp-0x42],cl
  40c263:	dec    esi
  40c264:	(bad)  
  40c265:	cmp    al,0x7b
  40c267:	sti    
  40c268:	in     eax,dx
  40c269:	outs   dx,DWORD PTR ds:[esi]
  40c26a:	int3   
  40c26b:	call   0xb704e92a
  40c270:	call   0xe198ed3e
  40c275:	push   esi
  40c276:	sbb    dh,BYTE PTR [ecx+0xe6a68b6]
  40c27c:	aad    0xf2
  40c27e:	aas    
  40c27f:	in     al,dx
  40c280:	push   ds
  40c281:	jl     0x40c2c2
  40c283:	xlat   BYTE PTR ds:[ebx]
  40c284:	out    0x17,eax
  40c286:	or     al,0x42
  40c288:	icebp  
  40c289:	iret   
  40c28a:	adc    esi,DWORD PTR [edi-0x13c3b2d8]
  40c290:	inc    edi
  40c291:	test   BYTE PTR [esi+0x72525b4e],dl
  40c297:	fst    QWORD PTR [ebx]
  40c299:	mov    DWORD PTR [esi-0x6d],eax
  40c29c:	icebp  
  40c29d:	cmp    eax,0xfc16056c
  40c2a2:	xor    BYTE PTR [ebp-0x16],bh
  40c2a5:	fistp  WORD PTR [esi+0x5c]
  40c2a8:	and    DWORD PTR gs:[esi],esi
  40c2ab:	jmp    0x38fc6223
  40c2b0:	and    BYTE PTR [ebx+0x4b],0x56
  40c2b4:	push   ss
  40c2b5:	mov    dh,0x5e
  40c2b7:	mov    al,0xef
  40c2b9:	mov    esi,ebp
  40c2bb:	pop    esi
  40c2bc:	push   edx
  40c2bd:	inc    ebp
  40c2be:	out    0x54,al
  40c2c0:	jge    0x40c294
  40c2c2:	jno    0x40c338
  40c2c4:	xlat   BYTE PTR ds:[ebx]
  40c2c5:	scas   eax,DWORD PTR es:[edi]
  40c2c6:	mov    DWORD PTR [ecx],esp
  40c2c8:	(bad)  
  40c2c9:	fstp   QWORD PTR [ecx]
  40c2cb:	xor    BYTE PTR [esi+eiz*1],ah
  40c2ce:	xor    DWORD PTR [ebx-0x34916a05],0xbd465ae4
  40c2d8:	sbb    DWORD PTR [edi+0x43],0x58c326c3
  40c2df:	ret    
  40c2e0:	gs push esi
  40c2e2:	hlt    
  40c2e3:	pop    edi
  40c2e4:	aad    0x50
  40c2e6:	pop    ecx
  40c2e7:	pop    ebp
  40c2e8:	outs   dx,DWORD PTR ds:[esi]
  40c2e9:	mov    esi,0xabff5d38
  40c2ee:	shl    BYTE PTR ds:0xc0b3bff2,0x5
  40c2f5:	cmp    ecx,ecx
  40c2f7:	mov    bl,0x6f
  40c2f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2fa:	retf   0xca94
  40c2fd:	fbstp  TBYTE PTR [edx]
  40c2ff:	push   esp
  40c300:	cmp    al,0xf7
  40c302:	inc    eax
  40c303:	mov    ds:0x7ad24c4c,eax
  40c308:	dec    esp
  40c309:	xor    BYTE PTR [edi+eiz*4+0x4fa44d07],bl
  40c310:	dec    edx
  40c311:	inc    edx
  40c312:	ficomp DWORD PTR [ecx]
  40c314:	popf   
  40c315:	rol    BYTE PTR [eax-0x80],0x12
  40c319:	rcl    BYTE PTR [edi+0x36],1
  40c31c:	inc    ebx
  40c31d:	mov    ebx,es
  40c31f:	mov    DWORD PTR [edi-0x493268dc],eax
  40c325:	cmp    BYTE PTR [edi+0x336f606],0x92
  40c32c:	dec    edi
  40c32d:	push   ebx
  40c32e:	or     eax,0x3ff01297
  40c333:	daa    
  40c334:	xor    al,0xb0
  40c336:	gs mov ebx,0x233e11cb
  40c33c:	inc    edi
  40c33d:	jmp    0xfbcf:0x6f430d1b
  40c344:	jae    0x40c2cf
  40c346:	jbe    0x40c366
  40c348:	lea    eax,[ebx-0x2d]
  40c34b:	dec    ebp
  40c34c:	lods   eax,DWORD PTR ds:[esi]
  40c34d:	test   BYTE PTR [ebp-0x33],0x3d
  40c351:	jp     0x40c321
  40c353:	sbb    DWORD PTR [ecx],esp
  40c355:	lea    edi,[ebx+0x35745472]
  40c35b:	xor    cl,BYTE PTR [ebp-0x4]
  40c35e:	into   
  40c35f:	xchg   ebx,eax
  40c360:	sub    eax,0x3b084a70
  40c365:	test   al,0xd7
  40c367:	(bad)  
  40c368:	lahf   
  40c369:	cmp    DWORD PTR [esi],esi
  40c36b:	mov    eax,0xb9ab239b
  40c370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c371:	xor    esp,esi
  40c373:	loop   0x40c353
  40c375:	es pop edi
  40c377:	popa   
  40c378:	push   ebp
  40c379:	out    0x15,al
  40c37b:	out    dx,eax
  40c37c:	sub    BYTE PTR [edx],dl
  40c37e:	vpmaxsw xmm3,xmm0,xmm0
  40c382:	daa    
  40c383:	dec    ecx
  40c384:	dec    edi
  40c385:	lea    edx,[ebx+0x68]
  40c388:	mov    esi,0x5a605528
  40c38d:	inc    ebx
  40c38e:	scas   eax,DWORD PTR es:[edi]
  40c38f:	pusha  
  40c390:	ds push ss
  40c392:	lock sub BYTE PTR [edx-0x11],dl
  40c396:	fisttp QWORD PTR [edx]
  40c398:	mov    ebp,0x24c42e57
  40c39d:	dec    esi
  40c39e:	enter  0xcae7,0xf7
  40c3a2:	sbb    DWORD PTR [edi],ebp
  40c3a4:	pusha  
  40c3a5:	sbb    ah,dl
  40c3a7:	cmp    BYTE PTR [edi+0x10],dh
  40c3aa:	bnd call DWORD PTR [eax+0x6f]
  40c3ae:	and    dl,BYTE PTR [ebx+0x74]
  40c3b1:	dec    edx
  40c3b2:	ja     0x40c424
  40c3b4:	sub    DWORD PTR [ebx*2-0x240d10e4],edi
  40c3bb:	test   BYTE PTR [edi-0xb],bh
  40c3be:	call   DWORD PTR [ecx+0x6e]
  40c3c1:	jo     0x40c3bf
  40c3c3:	jmp    0x723e:0x691996a6
  40c3ca:	pop    edi
  40c3cb:	ffree  st(2)
  40c3cd:	ss in  al,0x77
  40c3d0:	pusha  
  40c3d1:	stos   BYTE PTR es:[edi],al
  40c3d2:	test   eax,0x2ac1945d
  40c3d7:	dec    esp
  40c3d8:	inc    esi
  40c3d9:	xchg   edi,eax
  40c3da:	xor    BYTE PTR [eax-0x1],0x9e
  40c3de:	sub    eax,0x5e88561b
  40c3e3:	xor    eax,0x8a8c8f10
  40c3e8:	enter  0x67a6,0x4e
  40c3ec:	adc    BYTE PTR ds:0x5225cbaf,0x9e
  40c3f3:	xchg   esi,eax
  40c3f4:	call   0xd047614d
  40c3f9:	imul   esp,DWORD PTR [ebx],0xffffffe8
  40c3fc:	xchg   edi,eax
  40c3fd:	push   ds
  40c3fe:	std    
  40c3ff:	test   eax,0x7ab0db54
  40c404:	ror    DWORD PTR [esi],cl
  40c406:	adc    bl,BYTE PTR [eax+0x14ffecdd]
  40c40c:	fwait
  40c40d:	clc    
  40c40e:	popa   
  40c40f:	arpl   WORD PTR [esi+0x28cbc7d6],ax
  40c415:	mov    dh,BYTE PTR [esi+0x24]
  40c418:	add    BYTE PTR [ecx-0x56],bh
  40c41b:	jae    0x40c3f1
  40c41d:	lea    ebp,[edi]
  40c41f:	push   esp
  40c420:	mov    al,0x46
  40c422:	iret   
  40c423:	cmp    cl,bl
  40c425:	add    BYTE PTR [ecx],al
  40c427:	retf   0x8042
  40c42a:	push   ebx
  40c42b:	in     eax,0x13
  40c42d:	mov    cl,0xfd
  40c42f:	jnp    0x40c3b4
  40c431:	aam    0xe
  40c433:	sbb    al,0xa5
  40c435:	fisttp DWORD PTR [eax-0x4d2ced5c]
  40c43b:	mov    ebp,0xefdfbba6
  40c440:	lea    ebp,[edx+0x1fbdf0b1]
  40c446:	mov    DWORD PTR [ecx+eax*1],edi
  40c449:	cmp    DWORD PTR [ebp-0x214ecf58],0x35
  40c450:	pop    esp
  40c451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c452:	mov    bh,0xec
  40c454:	les    ebp,FWORD PTR [edx+eiz*8-0x7023aa67]
  40c45b:	outs   dx,BYTE PTR ds:[esi]
  40c45c:	mov    eax,0x7ef3ff21
  40c461:	and    cl,bl
  40c463:	aaa    
  40c464:	push   ds
  40c465:	hlt    
  40c466:	add    al,0x71
  40c468:	jne    0x40c3fc
  40c46a:	xchg   edi,eax
  40c46b:	call   0x5eed:0xc6cff4b2
  40c472:	push   ds
  40c473:	pop    ecx
  40c474:	add    edi,DWORD PTR [ebp+0x31]
  40c477:	(bad)  
  40c479:	cs add edx,ebx
  40c47c:	call   0x67bf40b5
  40c481:	and    esi,DWORD PTR [edx]
  40c483:	inc    edx
  40c484:	add    al,0x6f
  40c486:	enter  0x3bab,0x1d
  40c48a:	sub    esp,DWORD PTR [ebx-0x1406e9a5]
  40c490:	inc    eax
  40c491:	cdq    
  40c492:	int3   
  40c493:	xchg   edx,eax
  40c494:	jge    0x40c479
  40c496:	pop    esp
  40c497:	add    BYTE PTR [edi],al
  40c499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c49a:	adc    DWORD PTR [edx-0x5b],eax
  40c49d:	pop    eax
  40c49e:	mov    ecx,esi
  40c4a0:	rcl    DWORD PTR [edi-0x248111c5],0xe0
  40c4a7:	clc    
  40c4a8:	inc    ebp
  40c4a9:	lahf   
  40c4aa:	fimul  DWORD PTR [edx]
  40c4ac:	stc    
  40c4ad:	ja     0x40c458
  40c4af:	inc    DWORD PTR [eax]
  40c4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b2:	xchg   esi,eax
  40c4b3:	rcr    ebp,cl
  40c4b5:	jmp    0x40c4b0
  40c4b7:	ja     0x40c4a1
  40c4b9:	add    bh,bl
  40c4bb:	sbb    BYTE PTR [ebx-0x709a9f2e],bl
  40c4c1:	pop    ecx
  40c4c2:	js     0x40c449
  40c4c4:	adc    esp,ebx
  40c4c6:	pop    ebp
  40c4c7:	scas   al,BYTE PTR es:[edi]
  40c4c8:	mov    eax,0x9a67bf77
  40c4cd:	and    ecx,DWORD PTR [edi]
  40c4cf:	sbb    BYTE PTR [esi+0x230a3561],dh
  40c4d5:	call   0xbea1b974
  40c4da:	jae    0x40c559
  40c4dc:	jge    0x40c4bf
  40c4de:	retf   
  40c4df:	or     al,BYTE PTR [ecx]
  40c4e1:	adc    ebp,DWORD PTR [ecx+0x7c]
  40c4e4:	push   ds
  40c4e5:	ret    
  40c4e6:	jne    0x40c559
  40c4e8:	leave  
  40c4e9:	or     BYTE PTR [edx+0x27],bl
  40c4ec:	xchg   ebx,eax
  40c4ed:	aas    
  40c4ee:	hlt    
  40c4ef:	test   DWORD PTR [edi],esi
  40c4f1:	pop    eax
  40c4f2:	test   DWORD PTR [ecx],ecx
  40c4f4:	cmp    ch,BYTE PTR [edx+0x59c2dee]
  40c4fa:	out    0x85,al
  40c4fc:	sbb    dh,BYTE PTR [esi-0x3da2efd]
  40c502:	inc    esi
  40c503:	jp     0x40c486
  40c505:	aaa    
  40c506:	imul   edi,DWORD PTR [esi-0x4a],0xffffffec
  40c50a:	and    DWORD PTR [ebx+0x320f2935],esp
  40c510:	cmp    eax,0x2b620365
  40c515:	dec    ecx
  40c516:	dec    edi
  40c517:	std    
  40c518:	in     al,dx
  40c519:	stos   DWORD PTR es:[edi],eax
  40c51a:	lds    ebp,FWORD PTR [esi-0xd]
  40c51d:	cdq    
  40c51e:	arpl   WORD PTR [edx-0x1ef4f499],cx
  40c524:	shl    dh,cl
  40c526:	jge    0x40c51d
  40c528:	jecxz  0x40c4fe
  40c52a:	add    BYTE PTR ds:0xd1db0c97,bh
  40c530:	add    BYTE PTR [edi+eiz*4+0x7333549a],bh
  40c537:	push   ecx
  40c538:	mov    DWORD PTR [ecx+0x28a4c408],edx
  40c53e:	inc    ebp
  40c53f:	sbb    dh,0x91
  40c542:	es add al,0xc4
  40c545:	inc    esp
  40c546:	or     bh,BYTE PTR [edi-0x6c]
  40c549:	sub    ebp,DWORD PTR [esi]
  40c54b:	in     al,dx
  40c54c:	adc    al,0x16
  40c54e:	xchg   edx,eax
  40c54f:	jnp    0x40c4d2
  40c551:	push   esp
  40c552:	imul   BYTE PTR [esi]
  40c554:	mov    al,ds:0x97c2414c
  40c559:	fldcw  WORD PTR [edi-0x3056ad7]
  40c55f:	cwde   
  40c560:	inc    ecx
  40c561:	push   edi
  40c562:	pop    edx
  40c563:	fadd   st,st(7)
  40c565:	push   ds
  40c566:	adc    BYTE PTR [esi],dl
  40c568:	aam    0x1
  40c56a:	jae    0x40c555
  40c56c:	out    dx,al
  40c56d:	mov    edx,0x997caf8f
  40c572:	ss (bad) 
  40c574:	xchg   ebp,eax
  40c575:	aad    0x27
  40c577:	mov    bl,0xbc
  40c579:	aaa    
  40c57a:	xor    edx,DWORD PTR [ecx]
  40c57c:	push   ds
  40c57d:	jno    0x40c5b2
  40c57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c580:	bound  esi,QWORD PTR [edx]
  40c582:	mov    ebp,0x7bb02338
  40c587:	push   0x7af150cb
  40c58c:	inc    edi
  40c58d:	popf   
  40c58e:	pop    es
  40c58f:	xchg   DWORD PTR [edx-0x22],esi
  40c592:	stc    
  40c593:	dec    esi
  40c594:	ins    BYTE PTR es:[edi],dx
  40c595:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c597:	and    ah,BYTE PTR [ebp-0x734a9026]
  40c59d:	mov    esi,0x60062fa6
  40c5a2:	push   ebp
  40c5a3:	cs stos BYTE PTR es:[edi],al
  40c5a5:	and    BYTE PTR ds:0x5b6128ea,0x2e
  40c5ac:	xchg   eax,edi
  40c5ae:	sahf   
  40c5af:	test   al,0xfc
  40c5b1:	mov    eax,DWORD PTR [edx]
  40c5b3:	pusha  
  40c5b4:	dec    edx
  40c5b5:	enter  0x578e,0xbb
  40c5b9:	adc    ch,BYTE PTR [edx+0x63]
  40c5bc:	cmp    DWORD PTR [eax-0x553c2ef8],edx
  40c5c2:	and    ah,al
  40c5c4:	retf   
  40c5c5:	aam    0x41
  40c5c7:	sar    BYTE PTR [esi],1
  40c5c9:	rol    DWORD PTR [edx],cl
  40c5cb:	call   FWORD PTR [edi]
  40c5cd:	mov    eax,ds:0x9926f028
  40c5d2:	and    BYTE PTR [edi],dl
  40c5d4:	iret   
  40c5d5:	shl    DWORD PTR [edx+0x3a],cl
  40c5d8:	rcr    DWORD PTR [ebp+0x30813120],0x65
  40c5df:	xor    BYTE PTR [ebx-0xa],dh
  40c5e2:	outs   dx,DWORD PTR ds:[esi]
  40c5e3:	jmp    0x3b8d64b1
  40c5e8:	mov    ah,0x92
  40c5ea:	ret    0x416d
  40c5ed:	ret    
  40c5ee:	cld    
  40c5ef:	dec    esi
  40c5f0:	adc    BYTE PTR [edx+0x76],bh
  40c5f3:	(bad)  
  40c5f4:	nop
  40c5f5:	shl    DWORD PTR [ebx+0x50],0xc2
  40c5f9:	lods   eax,DWORD PTR ds:[esi]
  40c5fa:	or     bl,dh
  40c5fc:	inc    ecx
  40c5fd:	iret   
  40c5fe:	call   0x8702:0xc055c4a1
  40c605:	xchg   edi,eax
  40c606:	push   esp
  40c607:	repz or WORD PTR [eax],0xb3a5
  40c60d:	mov    bh,0x9d
  40c60f:	das    
  40c610:	sub    DWORD PTR [esi+0x564055d5],0xfffffff2
  40c617:	mov    esp,0x739a9d3c
  40c61c:	fdiv   QWORD PTR [eax+0x28]
  40c61f:	into   
  40c620:	cmp    ebp,ecx
  40c622:	mov    ss,edi
  40c624:	hlt    
  40c625:	out    dx,eax
  40c626:	nop
  40c627:	xor    BYTE PTR [ebx+0x30],al
  40c62a:	mov    edi,0xa6a5606f
  40c62f:	data16 adc bh,ch
  40c632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c633:	lods   eax,DWORD PTR ds:[esi]
  40c634:	push   cs
  40c635:	in     eax,dx
  40c636:	mov    dh,0xa9
  40c638:	retf   
  40c639:	push   esp
  40c63a:	jmp    0x40c686
  40c63c:	aad    0x38
  40c63e:	not    bh
  40c640:	out    0xa5,eax
  40c642:	gs dec eax
  40c644:	scas   al,BYTE PTR es:[edi]
  40c645:	test   DWORD PTR fs:[ecx-0x47576686],ecx
  40c64c:	mov    dh,0x6d
  40c64e:	outs   dx,DWORD PTR ds:[esi]
  40c64f:	push   0xffffff95
  40c651:	add    eax,0x7efa50b5
  40c656:	cli    
  40c657:	les    ebp,FWORD PTR [ebx]
  40c659:	out    0x57,al
  40c65b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c65c:	jns    0x40c5f2
  40c65e:	pop    edx
  40c65f:	mov    ds:0xe3bd3f9b,eax
  40c664:	imul   eax,DWORD PTR [ecx],0x4986142d
  40c66a:	in     al,0x21
  40c66c:	sub    al,0xb3
  40c66e:	pop    eax
  40c66f:	mov    edi,0x4a14104b
  40c674:	pop    ecx
  40c675:	xchg   esp,eax
  40c676:	mov    cl,0x63
  40c678:	mov    dh,BYTE PTR [eax-0x38]
  40c67b:	test   bl,dh
  40c67d:	es adc eax,0x38957898
  40c683:	leave  
  40c684:	mov    gs,WORD PTR ds:0x52453102
  40c68a:	clc    
  40c68b:	mul    ah
  40c68d:	mov    al,ds:0xee6d6048
  40c692:	into   
  40c693:	push   0x21
  40c695:	cmp    ebx,DWORD PTR [edi+0x54]
  40c698:	xchg   DWORD PTR [esp+ebp*1+0x58],ebx
  40c69c:	xor    BYTE PTR [ebp+0x6298bc1e],dh
  40c6a2:	fwait
  40c6a3:	mov    edx,0xd6b9900f
  40c6a8:	or     al,0x7a
  40c6aa:	xchg   ebx,eax
  40c6ab:	(bad)  
  40c6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ad:	cwde   
  40c6ae:	sbb    ecx,0x47359463
  40c6b4:	lahf   
  40c6b5:	(bad)  
  40c6b6:	imul   esp,DWORD PTR [edx-0x460d53b0],0xffffff8b
  40c6bd:	iret   
  40c6be:	iret   
  40c6bf:	(bad)  
  40c6c0:	int    0xc5
  40c6c2:	dec    edi
  40c6c3:	stos   BYTE PTR es:[edi],al
  40c6c4:	sub    al,0x90
  40c6c6:	stos   DWORD PTR es:[edi],eax
  40c6c7:	push   esi
  40c6c8:	inc    ecx
  40c6c9:	mov    edi,0xfe417c14
  40c6ce:	inc    esi
  40c6cf:	mov    cl,0x92
  40c6d1:	out    0x59,eax
  40c6d3:	inc    edx
  40c6d4:	int    0x63
  40c6d6:	int    0x3f
  40c6d8:	pop    ds
  40c6d9:	inc    ecx
  40c6da:	adc    eax,DWORD PTR [edi+eiz*2]
  40c6dd:	jmp    0xc1d7f0c6
  40c6e2:	ins    DWORD PTR es:[edi],dx
  40c6e3:	lods   eax,DWORD PTR ds:[esi]
  40c6e4:	aam    0xc4
  40c6e6:	dec    esi
  40c6e7:	cmp    bh,BYTE PTR [ebx+0x752c0662]
  40c6ed:	retf   
  40c6ee:	jnp    0x40c6b1
  40c6f0:	adc    DWORD PTR [edx+0x1953e2c5],0x870b26f
  40c6fa:	inc    eax
  40c6fb:	xchg   ebp,eax
  40c6fc:	cli    
  40c6fd:	add    eax,0x1ef6dfee
  40c702:	mov    ebp,0xb8415137
  40c707:	and    al,0x8f
  40c709:	call   0xeeed:0x8660afc1
  40c710:	mov    esi,0xeece10ac
  40c715:	mov    edx,0x94b400d5
  40c71a:	cmp    esi,DWORD PTR [ecx]
  40c71c:	into   
  40c71d:	neg    BYTE PTR [ebx+0x73b3e691]
  40c723:	xchg   edx,eax
  40c724:	in     al,dx
  40c725:	inc    edi
  40c726:	ret    
  40c727:	pop    eax
  40c728:	cmc    
  40c729:	sbb    eax,0x784011f3
  40c72e:	fmul   DWORD PTR [eax-0x2b1c8abf]
  40c734:	test   eax,0x9b48c758
  40c739:	mov    WORD PTR ds:0xa6a558f4,?
  40c73f:	cmp    ecx,0x3c16b179
  40c745:	mov    ds:0xa421b29a,eax
  40c74a:	(bad)  
  40c74b:	ins    DWORD PTR es:[edi],dx
  40c74c:	loop   0x40c73b
  40c74e:	sbb    BYTE PTR [ecx-0xe],ah
  40c751:	push   es
  40c752:	je     0x40c75f
  40c754:	inc    ecx
  40c755:	out    dx,al
  40c756:	pop    esp
  40c757:	dec    ebx
  40c758:	dec    ebp
  40c759:	mov    bl,BYTE PTR [eax+0x4daba96c]
  40c75f:	push   esp
  40c760:	push   esi
  40c761:	mov    esi,0x6ad43ce0
  40c766:	mov    al,0x6f
  40c768:	jge    0x40c758
  40c76a:	xor    bl,BYTE PTR [ebp+0x521f9b3d]
  40c770:	lock dec ebx
  40c772:	mov    ds:0x19c67c8a,al
  40c777:	inc    esi
  40c778:	mov    gs,WORD PTR [edx-0x12fb3564]
  40c77e:	xor    al,0x6f
  40c780:	outs   dx,DWORD PTR ds:[esi]
  40c781:	into   
  40c782:	loop   0x40c793
  40c784:	(bad)  
  40c785:	(bad)  
  40c786:	aas    
  40c787:	cmp    edi,DWORD PTR ds:0x4250fa88
  40c78d:	mov    edx,0xe3fbf761
  40c792:	xchg   edi,eax
  40c793:	pushf  
  40c794:	inc    ebx
  40c795:	sub    al,0x7f
  40c797:	xchg   ebp,eax
  40c798:	add    eax,0x4ccd254e
  40c79d:	ins    DWORD PTR es:[edi],dx
  40c79e:	outs   dx,BYTE PTR ds:[esi]
  40c79f:	xor    bl,BYTE PTR [eax-0x53f80899]
  40c7a5:	mov    gs,edx
  40c7a7:	shl    DWORD PTR [esi-0x14e1bc65],1
  40c7ad:	loopne 0x40c749
  40c7af:	jmp    0x3507d537
  40c7b4:	jg     0x40c78f
  40c7b6:	ins    BYTE PTR es:[edi],dx
  40c7b7:	or     BYTE PTR [eax+0x44],ch
  40c7ba:	in     eax,0x49
  40c7bc:	inc    ebp
  40c7bd:	mov    DWORD PTR ds:0x281ceaf9,0xd6294243
  40c7c7:	xchg   BYTE PTR [edx+0x29807644],dl
  40c7cd:	test   eax,0xbb8b812a
  40c7d2:	pop    ebp
  40c7d3:	jl     0x40c7d6
  40c7d5:	imul   edi,DWORD PTR [esi-0x42],0xd66a678a
  40c7dc:	pusha  
  40c7dd:	es aaa 
  40c7df:	pop    ebx
  40c7e0:	aad    0xd3
  40c7e2:	jg     0x40c7f3
  40c7e4:	(bad)  
  40c7e5:	and    al,0xb0
  40c7e7:	add    cl,BYTE PTR [esi+0x36]
  40c7ea:	jmp    0x40c7dc
  40c7ec:	cdq    
  40c7ed:	and    ch,BYTE PTR [eax-0x5a]
  40c7f0:	in     al,0xf0
  40c7f2:	mov    edx,0x31c96f0b
  40c7f7:	or     cl,al
  40c7f9:	leave  
  40c7fa:	fst    QWORD PTR [ecx+esi*8-0x39ba8110]
  40c801:	pop    ebp
  40c802:	cld    
  40c803:	(bad)  
  40c804:	iret   
  40c805:	pop    ss
  40c806:	ret    
  40c807:	iret   
  40c808:	xor    edi,DWORD PTR [ebx+eax*1]
  40c80b:	push   ebp
  40c80c:	push   0x966fd3c
  40c811:	fsubr  DWORD PTR [edx+edi*1-0x3acb97a8]
  40c818:	jb     0x40c856
  40c81a:	sub    eax,0xdbaa7dcb
  40c81f:	jb     0x40c7e4
  40c821:	adc    BYTE PTR [ecx],0x6b
  40c824:	fmul   st,st(5)
  40c826:	retf   0x6f89
  40c829:	adc    eax,0xd491474f
  40c82e:	sar    bh,0x9c
  40c831:	cs inc ecx
  40c833:	(bad)  
  40c835:	iret   
  40c836:	mov    ebp,0x4f7f5322
  40c83b:	push   es
  40c83c:	pop    esi
  40c83d:	stos   DWORD PTR es:[edi],eax
  40c83e:	in     eax,dx
  40c83f:	cdq    
  40c840:	cld    
  40c841:	push   eax
  40c842:	pop    ds
  40c843:	cmp    dl,ch
  40c845:	loopne 0x40c825
  40c847:	jp     0x40c82d
  40c849:	popf   
  40c84a:	hlt    
  40c84b:	mov    eax,0xa29d775f
  40c850:	or     dh,BYTE PTR [edx+0x7d]
  40c853:	stc    
  40c854:	imul   BYTE PTR [ecx]
  40c856:	add    BYTE PTR [ebx-0x5a],dh
  40c859:	daa    
  40c85a:	mov    DWORD PTR [edi+0x2ee9cbd1],ecx
  40c860:	mov    bh,BYTE PTR [esi-0x539d223e]
  40c866:	sbb    ecx,esp
  40c868:	fadd   QWORD PTR [eax-0x78ff6bc1]
  40c86e:	add    BYTE PTR [ebp-0x64],0x56
  40c872:	and    al,0xe1
  40c874:	and    BYTE PTR [ebp+esi*2-0x5fefcf02],0xdf
  40c87c:	rcr    DWORD PTR [edx-0x32],1
  40c87f:	stos   BYTE PTR es:[edi],al
  40c880:	dec    edi
  40c881:	and    BYTE PTR [esp+esi*8-0x11],0x20
  40c886:	push   eax
  40c887:	pop    ss
  40c888:	mov    al,ds:0x179e9ab0
  40c88d:	inc    edi
  40c88e:	xor    DWORD PTR ds:0x5019085c,ecx
  40c894:	sar    DWORD PTR [ecx],0xd3
  40c897:	pop    ss
  40c898:	loope  0x40c90f
  40c89a:	sbb    eax,DWORD PTR [edx+0x32ff0bcd]
  40c8a0:	xor    BYTE PTR [ebx],cl
  40c8a2:	sahf   
  40c8a3:	dec    eax
  40c8a4:	leave  
  40c8a5:	rcl    DWORD PTR [ecx],cl
  40c8a7:	rcl    BYTE PTR [eax+eiz*8-0x1aec4cd2],0xf6
  40c8af:	push   ds
  40c8b0:	fld    DWORD PTR [esi-0x1]
  40c8b3:	pop    ebx
  40c8b4:	push   ebx
  40c8b5:	or     BYTE PTR [edi],ch
  40c8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b8:	jmp    0x40c8e0
  40c8ba:	imul   edi,DWORD PTR [eax-0x72],0xffffffe8
  40c8be:	mov    cl,0x15
  40c8c0:	dec    edx
  40c8c1:	loop   0x40c8c2
  40c8c3:	adc    al,BYTE PTR [edi-0x78]
  40c8c6:	and    DWORD PTR [esi-0x14062ca1],ebx
  40c8cc:	dec    edx
  40c8cd:	xchg   esp,eax
  40c8ce:	ins    DWORD PTR es:[edi],dx
  40c8cf:	nop
  40c8d0:	xchg   BYTE PTR [eax+0xa],ah
  40c8d3:	xor    al,0xd
  40c8d5:	mov    edx,0x20655cfa
  40c8da:	je     0x40c866
  40c8dc:	sti    
  40c8dd:	push   ebp
  40c8de:	popf   
  40c8df:	jne    0x40c87b
  40c8e1:	add    esi,DWORD PTR [esi-0x26ba1bda]
  40c8e7:	mov    dl,bh
  40c8e9:	je     0x40c8d2
  40c8eb:	pop    esi
  40c8ec:	cld    
  40c8ed:	cmp    al,BYTE PTR [edx-0x26]
  40c8f0:	ret    
  40c8f1:	jno    0x40c91f
  40c8f3:	cs in  eax,dx
  40c8f5:	adc    cl,BYTE PTR [esi-0x7c718d5e]
  40c8fb:	pushf  
  40c8fc:	cmc    
  40c8fd:	lods   eax,DWORD PTR ds:[esi]
  40c8fe:	or     eax,0x63527619
  40c903:	xor    BYTE PTR [eax+0x7443df2f],cl
  40c909:	das    
  40c90a:	add    al,0x46
  40c90c:	sub    al,0xda
  40c90e:	sti    
  40c90f:	cwde   
  40c910:	(bad)  [edx+0x6a045e12]
  40c916:	repz mov ah,0x3d
  40c919:	or     esi,DWORD PTR [eax]
  40c91b:	sbb    DWORD PTR [edx+esi*2+0x71],0xebeffb5c
  40c923:	stos   DWORD PTR es:[edi],eax
  40c924:	imul   edi,ebx,0x1e08a2f0
  40c92a:	rcr    BYTE PTR [ebp-0x782be432],cl
  40c930:	or     cl,BYTE PTR [eax]
  40c932:	ins    DWORD PTR es:[edi],dx
  40c933:	or     BYTE PTR [ebp-0x4875ccbb],dl
  40c939:	or     al,0x22
  40c93b:	scas   al,BYTE PTR es:[edi]
  40c93c:	xsavec [esi+0x5a9116fd]
  40c943:	sub    eax,0xe1bf4740
  40c948:	ret    0x1a2c
  40c94b:	dec    edx
  40c94c:	inc    ebx
  40c94d:	mov    WORD PTR [esi-0x60922cf],ds
  40c953:	pop    es
  40c954:	shr    ebx,1
  40c956:	xor    BYTE PTR [edx-0x37],0xaf
  40c95a:	int    0x88
  40c95c:	mov    edi,0x45c74265
  40c961:	clc    
  40c962:	mov    cl,0x85
  40c964:	pushf  
  40c965:	clc    
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0x1bc0ee5d]
  40d00c:	nop
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	fdiv   st,st(3)
  40d017:	cmp    al,0xba
  40d019:	out    0xbb,eax
  40d01b:	rcl    DWORD PTR [edx+ebp*8+0x64],cl
  40d01f:	into   
  40d020:	mov    bh,0x38
  40d022:	int3   
  40d023:	rcl    BYTE PTR [edx-0x1f],cl
  40d026:	aam    0xfe
  40d028:	dec    eax
  40d029:	or     ebp,ebp
  40d02b:	add    al,0xb1
  40d02d:	leave  
  40d02e:	and    eax,DWORD PTR [ebx+eax*2-0x7cb225bb]
  40d035:	outs   dx,BYTE PTR ds:[esi]
  40d036:	cdq    
  40d037:	pop    edi
  40d038:	(bad)  
  40d039:	and    ebp,DWORD PTR [ebx-0x74]
  40d03c:	mov    gs,WORD PTR [esi-0x39]
  40d03f:	sti    
  40d040:	or     al,BYTE PTR ds:0x2618fbb5
  40d046:	je     0x40d0c7
  40d048:	push   ecx
  40d049:	rep ins DWORD PTR es:[edi],dx
  40d04b:	loopne 0x40cfec
  40d04d:	pop    ebp
  40d04e:	int3   
  40d04f:	push   cs
  40d050:	sbb    BYTE PTR ds:0x822cf7d,cl
  40d056:	push   ecx
  40d057:	neg    BYTE PTR [eax]
  40d059:	iret   
  40d05a:	mov    bl,0x85
  40d05c:	inc    eax
  40d05d:	sbb    BYTE PTR [esi-0x2b],ah
  40d060:	icebp  
  40d061:	sub    ch,BYTE PTR [eax+0x6e]
  40d064:	loope  0x40d0b7
  40d066:	add    al,0x6f
  40d068:	shl    DWORD PTR [ebx-0x4ef78b2c],cl
  40d06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d06f:	ret    0x5374
  40d072:	or     edi,DWORD PTR [esi+esi*2+0x5e]
  40d076:	jmp    0x7c89:0x73081d4
  40d07d:	or     DWORD PTR [ebx+ebp*4],edi
  40d080:	ss rcr esp,0xd9
  40d084:	scas   al,BYTE PTR es:[edi]
  40d085:	test   eax,0xda41c841
  40d08a:	out    0xa3,al
  40d08c:	lods   al,BYTE PTR ds:[esi]
  40d08d:	popa   
  40d08e:	inc    esi
  40d08f:	add    DWORD PTR [ecx+0x509e71c4],edi
  40d095:	mov    ?,edx
  40d097:	xchg   BYTE PTR [ecx-0x2d],bh
  40d09a:	sub    bl,0xc3
  40d09d:	data16 stos BYTE PTR es:[edi],al
  40d09f:	stos   DWORD PTR es:[edi],eax
  40d0a0:	jne    0x40d03e
  40d0a2:	imul   BYTE PTR [ecx-0x510a4ecc]
  40d0a8:	mov    esi,0x6bd95019
  40d0ad:	mov    bl,0x32
  40d0af:	xchg   ah,dl
  40d0b1:	test   BYTE PTR [esi+0x73],al
  40d0b4:	loope  0x40d105
  40d0b6:	and    ebx,ebp
  40d0b8:	popa   
  40d0b9:	fwait
  40d0ba:	xor    BYTE PTR [edi],0xe1
  40d0bd:	pop    ebp
  40d0be:	call   0xac65:0xa1bbc11
  40d0c5:	daa    
  40d0c6:	push   eax
  40d0c7:	jmp    0xd869:0xd36ef57d
  40d0ce:	xor    BYTE PTR [edx+esi*2-0x4b91da8c],cl
  40d0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d6:	aas    
  40d0d7:	add    bl,BYTE PTR [ebp+0x5c]
  40d0da:	les    edx,FWORD PTR [eax+0x28]
  40d0dd:	adc    esi,0xba84b894
  40d0e3:	sub    ax,0x8f3c
  40d0e7:	add    BYTE PTR [ebx-0x66],dh
  40d0ea:	sbb    bh,BYTE PTR [ecx-0x2e0cb6fb]
  40d0f0:	and    DWORD PTR [ebp-0x51e8d61e],ebx
  40d0f6:	inc    ecx
  40d0f7:	mov    ecx,0x5b50f9be
  40d0fc:	mov    edx,DWORD PTR [esi+edx*4]
  40d0ff:	scas   eax,DWORD PTR es:[edi]
  40d100:	das    
  40d101:	mov    al,0x5e
  40d103:	sbb    DWORD PTR [eax-0x58fbdc4f],esi
  40d109:	jecxz  0x40d0ab
  40d10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d10c:	add    eax,DWORD PTR [edi+0x2705bffe]
  40d112:	test   al,0x7
  40d114:	enter  0x5976,0x10
  40d118:	jmp    0x40d0ec
  40d11a:	sub    bh,ah
  40d11c:	imul   DWORD PTR [esi+esi*4+0x5]
  40d120:	pop    esp
  40d121:	enter  0x7329,0x96
  40d125:	and    eax,0xe3c1c1c5
  40d12a:	mov    BYTE PTR [edi],cl
  40d12c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d12d:	or     ebx,DWORD PTR [esi]
  40d12f:	pop    eax
  40d130:	jb     0x40d1a0
  40d132:	push   es
  40d133:	cli    
  40d134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d135:	sub    ebx,DWORD PTR [edx+0x6cb691f0]
  40d13b:	lods   al,BYTE PTR ds:[esi]
  40d13c:	popf   
  40d13d:	pop    esp
  40d13e:	ficomp DWORD PTR [ebx+0x42c43de8]
  40d144:	inc    edx
  40d145:	rol    ebp,0xab
  40d148:	xor    esi,DWORD PTR [ebp-0x55623dc6]
  40d14e:	mov    eax,eax
  40d150:	ins    BYTE PTR es:[edi],dx
  40d151:	pop    eax
  40d152:	arpl   WORD PTR es:[edi],sp
  40d155:	jge    0x40d107
  40d157:	mov    dh,0xd8
  40d159:	scas   eax,DWORD PTR es:[edi]
  40d15a:	push   esi
  40d15b:	push   ecx
  40d15c:	jp     0x40d181
  40d15e:	inc    eax
  40d15f:	sahf   
  40d160:	push   esp
  40d161:	pop    edx
  40d162:	and    ebx,DWORD PTR [esi+esi*4-0x4a870993]
  40d169:	sar    BYTE PTR [di+0x42],cl
  40d16d:	and    al,0x87
  40d16f:	data16 lods al,BYTE PTR ds:[esi]
  40d171:	jmp    0xbbc8:0xbb35c9da
  40d178:	div    DWORD PTR ds:0x5afbc539
  40d17e:	adc    DWORD PTR [ebx-0x1f7cfde3],esp
  40d184:	jmp    0x20109c9
  40d189:	fmul   DWORD PTR [edx]
  40d18b:	push   ebx
  40d18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d18d:	and    bl,dh
  40d18f:	cmp    BYTE PTR ds:0xf4afbb73,bh
  40d195:	xchg   ebp,eax
  40d196:	lock loop 0x40d185
  40d199:	or     bl,bl
  40d19b:	ss js  0x40d186
  40d19e:	test   eax,0x30ab4750
  40d1a3:	jne    0x40d1c5
  40d1a5:	sub    BYTE PTR [ebp+ebx*8+0x48f1f7b1],bl
  40d1ac:	push   eax
  40d1ad:	test   DWORD PTR [eax+0x53],edx
  40d1b0:	lods   al,BYTE PTR ds:[esi]
  40d1b1:	and    ah,cl
  40d1b3:	inc    ebx
  40d1b4:	popf   
  40d1b5:	jge    0x40d1bf
  40d1b7:	stos   BYTE PTR es:[edi],al
  40d1b8:	mov    dh,0x5f
  40d1ba:	in     al,dx
  40d1bb:	dec    ecx
  40d1bc:	in     al,0xbd
  40d1be:	dec    ebx
  40d1bf:	xor    al,0x29
  40d1c1:	xor    BYTE PTR [ebx+0x40bfff91],dl
  40d1c7:	cmp    eax,DWORD PTR [edi-0x5b]
  40d1ca:	les    esp,FWORD PTR [edx]
  40d1cc:	inc    ebp
  40d1cd:	sbb    BYTE PTR [ebx-0x26],bl
  40d1d0:	mov    al,ds:0x8c7c3309
  40d1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1d6:	pop    ecx
  40d1d7:	popa   
  40d1d8:	int    0xe3
  40d1da:	mov    cs,esp
  40d1dc:	mov    al,ds:0x2ce5615c
  40d1e1:	adc    eax,DWORD PTR ds:0x23ef1efe
  40d1e7:	mov    bl,0x39
  40d1e9:	or     edi,DWORD PTR [ecx+0x46]
  40d1ec:	(bad)  
  40d1ed:	scas   eax,DWORD PTR es:[edi]
  40d1ee:	test   al,0xb3
  40d1f0:	xchg   DWORD PTR [esp+esi*8+0x61a856fb],edx
  40d1f7:	popa   
  40d1f8:	and    eax,0xc12016c
  40d1fd:	popf   
  40d1fe:	out    dx,eax
  40d1ff:	cs sbb bh,dl
  40d202:	cli    
  40d203:	pushf  
  40d204:	inc    eax
  40d205:	or     ebp,DWORD PTR [esi+0x43]
  40d208:	xchg   esp,eax
  40d209:	sbb    DWORD PTR [esp+esi*2+0x32],0xffffffef
  40d20e:	pushf  
  40d20f:	fisttp DWORD PTR [edx]
  40d211:	jmp    0x40d26a
  40d213:	outs   dx,DWORD PTR ds:[esi]
  40d214:	inc    edx
  40d215:	ss adc ecx,ebx
  40d218:	pop    ss
  40d219:	loopne 0x40d242
  40d21b:	sbb    ch,bl
  40d21d:	mov    ds:0x38d9aa5f,eax
  40d222:	(bad)  
  40d223:	jg     0x40d265
  40d225:	test   eax,0xd13dcc5
  40d22a:	dec    ebx
  40d22b:	pop    edx
  40d22c:	cmp    ebx,edi
  40d22e:	inc    edx
  40d22f:	add    eax,0x91e7bb41
  40d234:	loop   0x40d1b7
  40d236:	lods   eax,DWORD PTR ds:[esi]
  40d237:	cmp    BYTE PTR [edx],bh
  40d239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d23b:	mov    eax,0x1a03b98d
  40d240:	push   0xffffffc3
  40d242:	adc    al,0xa
  40d244:	push   ss
  40d245:	sub    DWORD PTR [ecx-0x3],ebp
  40d248:	and    DWORD PTR [eax],ebp
  40d24a:	scas   al,BYTE PTR es:[edi]
  40d24b:	fldcw  WORD PTR [eax]
  40d24d:	pop    ebp
  40d24e:	lods   eax,DWORD PTR ds:[esi]
  40d24f:	push   esi
  40d250:	in     eax,dx
  40d251:	div    ebx
  40d253:	cmc    
  40d254:	lods   al,BYTE PTR ds:[esi]
  40d255:	in     al,0xb3
  40d257:	rcr    DWORD PTR [edx+eax*4+0x4a],1
  40d25b:	cmp    eax,0xecff2e85
  40d260:	rol    DWORD PTR [edx+0x3ffdb75c],0x4a
  40d267:	xchg   ecx,eax
  40d268:	stos   DWORD PTR es:[edi],eax
  40d269:	in     eax,0x62
  40d26b:	sbb    ecx,edi
  40d26d:	push   eax
  40d26e:	xchg   DWORD PTR [ebp-0x6ec0c418],ebx
  40d274:	cmc    
  40d275:	nop
  40d276:	or     DWORD PTR [ecx+eax*8],edx
  40d279:	inc    eax
  40d27a:	xchg   esi,eax
  40d27b:	inc    ebp
  40d27c:	and    BYTE PTR [edi],0x88
  40d27f:	adc    cl,BYTE PTR [edx-0x1f84f9fb]
  40d285:	pop    eax
  40d286:	pop    edx
  40d287:	popf   
  40d288:	fcomp  DWORD PTR [ecx+eax*1]
  40d28b:	mov    es,ecx
  40d28d:	dec    esi
  40d28e:	es mov dl,0x8e
  40d291:	shl    DWORD PTR [bx+si+0x1a6a],1
  40d296:	xchg   ebp,eax
  40d297:	cmp    edi,DWORD PTR [edi+ecx*1-0x41db0dba]
  40d29e:	sub    cl,BYTE PTR [ecx+0x2dfdc54f]
  40d2a4:	sub    eax,0x2d67fa96
  40d2a9:	dec    edi
  40d2aa:	sub    dh,BYTE PTR [ebx+0x5b]
  40d2ad:	mov    al,0x7
  40d2af:	lods   al,BYTE PTR ds:[esi]
  40d2b0:	jg     0x40d23f
  40d2b2:	jae    0x40d250
  40d2b4:	clc    
  40d2b5:	cmp    al,0x21
  40d2b7:	(bad)  
  40d2ba:	push   ebx
  40d2bb:	scas   eax,DWORD PTR es:[edi]
  40d2bc:	mov    eax,ds:0x4c33237b
  40d2c1:	and    BYTE PTR [edx-0x7d],dh
  40d2c4:	scas   al,BYTE PTR es:[edi]
  40d2c5:	pop    es
  40d2c6:	cmc    
  40d2c7:	in     al,0x90
  40d2c9:	fiadd  WORD PTR [esi+0xc]
  40d2cc:	pop    esp
  40d2cd:	mov    eax,ds:0x21d20e71
  40d2d2:	in     al,0xbc
  40d2d4:	pusha  
  40d2d5:	test   eax,0xd5a125b0
  40d2da:	sub    ebx,ecx
  40d2dc:	in     eax,dx
  40d2dd:	xchg   esp,eax
  40d2de:	xlat   BYTE PTR ds:[ebx]
  40d2df:	mov    ch,0xc2
  40d2e1:	out    0x66,al
  40d2e3:	dec    esi
  40d2e4:	pop    ecx
  40d2e5:	in     eax,0xc8
  40d2e7:	mov    ecx,0xaa2b3501
  40d2ec:	repz push ecx
  40d2ee:	test   BYTE PTR [esi-0x2d],ah
  40d2f1:	fadd   DWORD PTR [esi+0x69]
  40d2f4:	rol    DWORD PTR [ebx+0x17],cl
  40d2f7:	ja     0x40d370
  40d2f9:	fs push edx
  40d2fb:	or     ch,BYTE PTR [esi+0x12adbad]
  40d301:	fdiv   st,st(0)
  40d303:	addr16 mov ch,0x46
  40d306:	jae    0x40d36c
  40d308:	mov    dl,0x7c
  40d30a:	cmp    bh,BYTE PTR [ecx+0x4f253942]
  40d310:	outs   dx,BYTE PTR ds:[esi]
  40d311:	scas   al,BYTE PTR es:[edi]
  40d312:	xor    al,0x26
  40d314:	mov    al,0x20
  40d316:	or     bl,bl
  40d318:	fistp  WORD PTR [edx-0x678de7a2]
  40d31e:	sbb    cl,BYTE PTR [esi]
  40d320:	ja     0x40d388
  40d322:	lock outs dx,BYTE PTR ds:[esi]
  40d324:	push   ebp
  40d325:	out    0x59,eax
  40d327:	je     0x40d325
  40d329:	cmp    al,bh
  40d32b:	jge    0x40d38e
  40d32d:	fst    QWORD PTR [edi+0x29]
  40d330:	mov    ch,0x8e
  40d332:	imul   edx
  40d334:	jae    0x40d301
  40d336:	mov    esp,0xd07c9f69
  40d33b:	das    
  40d33c:	jb     0x40d321
  40d33e:	fcmovu st,st(7)
  40d340:	fistp  QWORD PTR cs:[esi+eiz*2-0x61]
  40d345:	xchg   edi,eax
  40d346:	dec    ebx
  40d347:	icebp  
  40d348:	push   0xb
  40d34a:	xor    cl,BYTE PTR [edx-0x615bb996]
  40d350:	and    eax,0x6c7d2be6
  40d355:	dec    eax
  40d356:	out    dx,eax
  40d357:	inc    edi
  40d358:	aam    0x6b
  40d35a:	int3   
  40d35b:	or     al,0x21
  40d35d:	pop    edx
  40d35e:	sbb    DWORD PTR [ebx-0x2c],edi
  40d361:	mov    bl,0x37
  40d363:	mov    WORD PTR [edi],ss
  40d365:	adc    DWORD PTR [esi-0x4f],ecx
  40d368:	lock popa 
  40d36a:	shl    ecx,0x80
  40d36d:	dec    esi
  40d36e:	inc    eax
  40d36f:	ss push es
  40d371:	pusha  
  40d372:	inc    ch
  40d374:	ret    0x8250
  40d377:	adc    eax,0x7f5ad835
  40d37c:	imul   esi,DWORD PTR [eax+0x75329521],0xd3e9ecd9
  40d386:	pop    ecx
  40d387:	(bad)  
  40d388:	xchg   ecx,eax
  40d389:	cmp    dl,cl
  40d38b:	mov    dl,0x62
  40d38d:	push   es
  40d38e:	push   edx
  40d38f:	or     eax,0x78438437
  40d394:	add    edx,DWORD PTR [esi+0x18392473]
  40d39a:	mov    edx,0xa7a0e743
  40d39f:	inc    esi
  40d3a0:	sub    ecx,DWORD PTR [eax-0x75cb1c19]
  40d3a6:	add    bl,bh
  40d3a8:	push   eax
  40d3a9:	je     0x40d3de
  40d3ab:	push   ebp
  40d3ac:	fdivrp st(7),st
  40d3ae:	or     esp,DWORD PTR [edx]
  40d3b0:	int    0x25
  40d3b2:	inc    ebx
  40d3b3:	nop
  40d3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3b5:	and    ecx,ecx
  40d3b7:	mov    ecx,0x1d5f8c81
  40d3bc:	jno    0x40d439
  40d3be:	jmp    0x6a099607
  40d3c3:	push   esi
  40d3c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3c5:	or     dh,BYTE PTR [edx-0x1c962623]
  40d3cb:	sar    bh,cl
  40d3cd:	inc    edi
  40d3ce:	add    DWORD PTR ss:[ecx],0x9625447a
  40d3d5:	push   0x63625ff0
  40d3da:	add    ah,dl
  40d3dc:	or     DWORD PTR [ebx],edx
  40d3de:	inc    eax
  40d3df:	pusha  
  40d3e0:	ins    BYTE PTR es:[edi],dx
  40d3e1:	gs call 0x4c3b:0x7f1d981a
  40d3e9:	loopne 0x40d41c
  40d3eb:	loop   0x40d3d3
  40d3ed:	mov    ecx,0x9a1694be
  40d3f2:	mov    ebp,DWORD PTR [eax]
  40d3f4:	inc    BYTE PTR [ecx+0x8]
  40d3f7:	inc    edi
  40d3f8:	pop    es
  40d3f9:	sub    cl,dl
  40d3fb:	sbb    al,BYTE PTR [ebp-0x38fa5177]
  40d401:	cmp    DWORD PTR [edi],esp
  40d403:	out    dx,al
  40d404:	in     eax,dx
  40d405:	cpuid  
  40d407:	js     0x40d3ae
  40d409:	shl    al,0x15
  40d40c:	in     al,0xa3
  40d40e:	dec    esi
  40d40f:	jb     0x40d3b4
  40d411:	and    al,0x88
  40d413:	push   ebx
  40d414:	push   cs
  40d415:	inc    esp
  40d416:	pop    ebp
  40d417:	iret   
  40d418:	dec    ebp
  40d419:	push   0xffffff84
  40d41b:	or     ah,BYTE PTR cs:[ebp-0x6c4c6659]
  40d422:	cwde   
  40d423:	ja     0x40d3de
  40d425:	and    esi,DWORD PTR [edx]
  40d427:	pop    esi
  40d428:	mov    bl,0xf6
  40d42a:	mov    DWORD PTR [edx-0x36],esp
  40d42d:	mov    edi,0x3b070e0b
  40d432:	xchg   ebp,eax
  40d433:	mov    bh,0x27
  40d435:	stos   DWORD PTR es:[edi],eax
  40d436:	fdivr  st,st(4)
  40d438:	es mov cl,0x20
  40d43b:	or     dl,BYTE PTR [edi-0xe]
  40d43e:	fldenv [ebx+0x79]
  40d441:	out    dx,al
  40d442:	jp     0x40d3f1
  40d444:	jb     0x40d3c8
  40d446:	or     dl,BYTE PTR [edi-0x4f]
  40d449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d44a:	and    BYTE PTR [esp+eiz*4+0x610f47ee],0x47
  40d452:	and    eax,0x8188b1cf
  40d457:	jmp    0x40d4a8
  40d459:	out    dx,al
  40d45a:	jge    0x40d42d
  40d45c:	push   es
  40d45d:	lds    esp,FWORD PTR [ebp+0x73e44cb7]
  40d463:	les    esi,FWORD PTR [ecx-0xd]
  40d466:	mov    ds:0x135ba3e9,eax
  40d46b:	xor    DWORD PTR ds:0x5f9e59ff,0xa17c2389
  40d475:	xchg   ebx,eax
  40d476:	xchg   ebx,eax
  40d477:	or     al,0xb4
  40d479:	mov    ebp,0xfea8658c
  40d47e:	dec    esi
  40d47f:	pop    ebp
  40d480:	(bad)  
  40d481:	mul    bl
  40d483:	icebp  
  40d484:	push   ecx
  40d485:	xchg   ebp,eax
  40d486:	xor    bh,bl
  40d488:	out    0x6c,eax
  40d48a:	popa   
  40d48b:	sbb    ebx,DWORD PTR [ebp-0x77538908]
  40d491:	int3   
  40d492:	mov    DWORD PTR [edx],ebx
  40d494:	leave  
  40d495:	and    DWORD PTR [ebx-0x51a7d02a],eax
  40d49b:	gs adc bl,dl
  40d49e:	aas    
  40d49f:	add    DWORD PTR [eax-0x5ccda6fc],ecx
  40d4a5:	test   eax,0xd679d88f
  40d4aa:	push   ebp
  40d4ab:	push   ecx
  40d4ac:	push   cs
  40d4ad:	mov    ds:0x9d26679e,al
  40d4b2:	mov    al,fs:0x407a341a
  40d4b8:	ds fcmovb st,st(0)
  40d4bb:	add    dh,BYTE PTR [edx+0x5c]
  40d4be:	mov    es,WORD PTR [ebx+0x5e]
  40d4c1:	sub    eax,0xec242694
  40d4c6:	scas   al,BYTE PTR es:[edi]
  40d4c7:	and    DWORD PTR [ebp-0x11],ebx
  40d4ca:	std    
  40d4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4cc:	sbb    BYTE PTR [eax+0x34],cl
  40d4cf:	pop    ss
  40d4d0:	fdivr  DWORD PTR [esi-0x37]
  40d4d3:	cmp    BYTE PTR [edi],cl
  40d4d5:	mov    cl,BYTE PTR [ecx-0xd]
  40d4d8:	xchg   esi,eax
  40d4d9:	sbb    DWORD PTR [ecx-0x68a41965],esp
  40d4df:	out    dx,al
  40d4e0:	dec    esp
  40d4e1:	loope  0x40d532
  40d4e3:	pusha  
  40d4e4:	mov    ebx,0x5d9e371c
  40d4e9:	or     al,0x6f
  40d4eb:	fstp   st(1)
  40d4ed:	or     eax,0x6ca98eef
  40d4f2:	std    
  40d4f3:	pusha  
  40d4f4:	dec    eax
  40d4f5:	pop    edx
  40d4f6:	cmp    eax,0x6b8f687b
  40d4fb:	retfw  
  40d4fd:	jmp    0xc4d0:0x2b770b11
  40d504:	pop    ebx
  40d505:	hlt    
  40d506:	outs   dx,BYTE PTR ds:[esi]
  40d507:	xchg   edi,eax
  40d508:	cmp    ebp,ecx
  40d50a:	or     eax,0x37f17a58
  40d50f:	cmp    ebp,edx
  40d511:	dec    ebx
  40d512:	iret   
  40d513:	push   ecx
  40d514:	jno    0x40d556
  40d516:	add    DWORD PTR [ebp+0x1c8a457c],edi
  40d51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d51d:	lahf   
  40d51e:	punpckldq mm1,DWORD PTR [edi+0x1551d340]
  40d525:	fcomp  DWORD PTR [edx-0x1d2addb]
  40d52b:	out    0x5b,eax
  40d52d:	aad    0x63
  40d52f:	nop
  40d530:	fmul   st,st(3)
  40d533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d534:	mov    ecx,0xd36a037b
  40d539:	mov    edi,0xc30b9b83
  40d53e:	test   BYTE PTR [ebx],0x1b
  40d541:	repnz lahf 
  40d543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d544:	out    0xab,eax
  40d546:	xchg   DWORD PTR [edi-0xaa289f2],edi
  40d54c:	jl     0x40d566
  40d54e:	mov    ds:0xfab17b3d,eax
  40d553:	sbb    DWORD PTR [eax+0x2a9aa35c],eax
  40d559:	retf   0xe510
  40d55c:	mov    ds:0xe5162cdd,eax
  40d561:	xchg   esi,eax
  40d562:	lock ret 0x4ab7
  40d566:	push   edx
  40d567:	jmp    0x40d4e9
  40d569:	push   esi
  40d56a:	lahf   
  40d56b:	daa    
  40d56c:	test   eax,0xa8e24ec7
  40d571:	or     ecx,DWORD PTR ds:0xf581062d
  40d577:	inc    ebp
  40d578:	ret    
  40d579:	pop    eax
  40d57a:	xor    eax,0xc53c8485
  40d57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d580:	imul   esi,DWORD PTR ds:0x106cafe4,0xffffffb8
  40d587:	(bad)  
  40d588:	pusha  
  40d589:	(bad)  
  40d58a:	shl    DWORD PTR [ecx+0x1e],1
  40d58d:	popf   
  40d58e:	ss ins BYTE PTR es:[edi],dx
  40d590:	mov    edx,fs
  40d592:	(bad)  
  40d593:	int    0xf4
  40d595:	stos   BYTE PTR es:[edi],al
  40d596:	out    dx,al
  40d597:	(bad)  
  40d598:	cmp    al,0x5c
  40d59a:	jl     0x40d54a
  40d59c:	loope  0x40d5ce
  40d59e:	and    eax,0x7655a149
  40d5a3:	mov    eax,0xd3758aa4
  40d5a8:	test   eax,0x68384eb9
  40d5ad:	lods   al,BYTE PTR ds:[esi]
  40d5ae:	xchg   ebx,eax
  40d5af:	in     al,dx
  40d5b0:	pop    ebp
  40d5b1:	sub    cl,bh
  40d5b3:	push   0xf39d046e
  40d5b8:	dec    ebx
  40d5b9:	shr    DWORD PTR [esi],1
  40d5bb:	adc    al,BYTE PTR [ebp+0x1a]
  40d5be:	xor    ebp,DWORD PTR [ecx+0x5ff32070]
  40d5c4:	es ss dec ebx
  40d5c7:	test   DWORD PTR [edi+0x1eb92948],edx
  40d5cd:	mov    ecx,0x4f98dd17
  40d5d2:	jmp    FWORD PTR [ebx+0x5d26d1fd]
  40d5d8:	push   es
  40d5d9:	into   
  40d5da:	scas   eax,DWORD PTR es:[edi]
  40d5db:	aam    0xe2
  40d5dd:	nop
  40d5de:	fcom   QWORD PTR [ebp+0x59225759]
  40d5e4:	js     0x40d61c
  40d5e6:	cmp    BYTE PTR [edx],al
  40d5e8:	or     DWORD PTR [ebx-0x39497ba6],eax
  40d5ee:	pop    edi
  40d5ef:	lds    edi,FWORD PTR [ebp+0x6f]
  40d5f2:	adc    BYTE PTR [ebp-0x4817a153],0xf4
  40d5f9:	ja     0x40d64a
  40d5fb:	pop    eax
  40d5fc:	jb     0x40d63b
  40d5fe:	cmp    DWORD PTR [eax+ebp*1],edi
  40d601:	or     DWORD PTR [ebp-0x13926762],esi
  40d607:	mov    cl,0x2d
  40d609:	dec    edx
  40d60a:	cmovns esi,DWORD PTR [edx+0xa93d8e0]
  40d611:	xor    edx,esi
  40d613:	add    eax,0x21ccd4c0
  40d618:	pop    eax
  40d619:	gs out 0xd0,eax
  40d61c:	mov    dh,0x89
  40d61e:	mov    esi,0xa2e1b8ad
  40d623:	fld    st(3)
  40d625:	pop    ebp
  40d626:	push   ds
  40d627:	adc    BYTE PTR [ebp-0x57565b93],dh
  40d62d:	xor    eax,0xcd7ef041
  40d632:	and    ecx,DWORD PTR [edi+0x31]
  40d635:	jb     0x40d649
  40d637:	push   ebp
  40d638:	ret    
  40d639:	mov    bh,0x51
  40d63b:	jmp    0x40d652
  40d63d:	cmp    ebp,DWORD PTR [ebp+ebp*4+0x31]
  40d641:	xchg   edx,eax
  40d642:	or     al,BYTE PTR [ecx]
  40d644:	mov    edx,0xcd89b4bc
  40d649:	mov    ebp,0xf640c419
  40d64e:	pop    ss
  40d64f:	cmp    dl,BYTE PTR [ebp-0x12]
  40d652:	nop
  40d653:	arpl   WORD PTR [edi-0x2e],ax
  40d656:	xor    dh,bh
  40d658:	xchg   DWORD PTR [edi-0x55],ebx
  40d65b:	push   es
  40d65c:	fmul   QWORD PTR [edx+0x7f]
  40d65f:	ret    0xafa3
  40d662:	xor    ebp,DWORD PTR [edx]
  40d664:	mov    BYTE PTR [edi-0x5a085ade],bh
  40d66a:	and    BYTE PTR [edi-0x48],0x87
  40d66e:	jmp    0x40d63f
  40d670:	(bad)  
  40d672:	mov    al,0x1a
  40d674:	mov    ah,0x6f
  40d676:	rcr    cl,cl
  40d678:	out    0xec,al
  40d67a:	arpl   WORD PTR [ecx+0x2db4852],ax
  40d680:	xchg   ecx,eax
  40d681:	inc    esi
  40d682:	ret    
  40d683:	pop    esp
  40d684:	and    ah,BYTE PTR [eax+edx*4+0x3d]
  40d688:	inc    ebp
  40d689:	fisttp WORD PTR [esi+0x48af0000]
  40d68f:	pop    eax
  40d690:	sbb    DWORD PTR [eax+0x64b19bb0],eax
  40d696:	into   
  40d697:	in     al,dx
  40d698:	xor    DWORD PTR [edx],esp
  40d69a:	inc    ecx
  40d69b:	mov    al,ds:0x4c7bacc7
  40d6a0:	dec    eax
  40d6a1:	in     al,dx
  40d6a2:	scas   ax,WORD PTR es:[edi]
  40d6a4:	xchg   edi,eax
  40d6a5:	jae    0x40d6f7
  40d6a7:	xchg   edi,eax
  40d6a8:	imul   ecx,edi,0xffffffe8
  40d6ab:	fnsave [ebx-0x8a15801]
  40d6b1:	jg     0x40d6eb
  40d6b3:	ja     0x40d66c
  40d6b5:	idiv   BYTE PTR [ecx+0x78d69be1]
  40d6bb:	jg     0x40d660
  40d6bd:	popa   
  40d6be:	out    0xd6,eax
  40d6c0:	in     eax,0x76
  40d6c2:	leave  
  40d6c3:	jp     0x40d6c2
  40d6c5:	adc    esp,DWORD PTR ds:0x16eecc26
  40d6cb:	dec    eax
  40d6cc:	ret    0x6e39
  40d6cf:	mov    eax,ds:0x664b9d42
  40d6d4:	out    dx,eax
  40d6d5:	pop    eax
  40d6d6:	sbb    bl,BYTE PTR [esi]
  40d6d8:	pop    ebx
  40d6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6da:	fistp  QWORD PTR [ebx+0xbfb6a1f]
  40d6e0:	dec    ecx
  40d6e1:	in     eax,dx
  40d6e2:	push   edi
  40d6e3:	jle    0x40d751
  40d6e5:	mov    ds:0x8d24f5bd,al
  40d6ea:	ret    
  40d6eb:	and    al,0x70
  40d6ed:	sbb    al,0xcb
  40d6ef:	les    edi,FWORD PTR [esi+0x381651c7]
  40d6f5:	sbb    DWORD PTR [ebx],ebp
  40d6f7:	fsubr  DWORD PTR [esi]
  40d6f9:	pop    ss
  40d6fa:	jmp    0x40d6a7
  40d6fc:	push   eax
  40d6fd:	(bad)  
  40d6fe:	not    BYTE PTR [esp+edx*8]
  40d701:	mov    esi,0x39a41c2e
  40d706:	in     al,dx
  40d707:	(bad)  
  40d709:	repz out 0x65,eax
  40d70c:	loope  0x40d784
  40d70e:	fbstp  TBYTE PTR [edx]
  40d710:	xchg   ecx,eax
  40d711:	jl     0x40d6ab
  40d713:	or     eax,0xd8b4e4d2
  40d718:	sub    DWORD PTR [eax],0x55ada4f0
  40d71e:	xor    DWORD PTR [ecx-0x75],edi
  40d721:	aad    0xbd
  40d723:	nop
  40d724:	and    DWORD PTR [esi-0x6f],esi
  40d727:	out    0x5,al
  40d729:	std    
  40d72a:	sub    BYTE PTR ds:0x157c94e0,ah
  40d730:	add    dl,BYTE PTR [esi+0x39f13c0d]
  40d736:	sub    dl,BYTE PTR [edx-0x11e29de6]
  40d73c:	iret   
  40d73d:	mov    BYTE PTR [eax-0x6081805a],bl
  40d743:	loop   0x40d731
  40d745:	fs mov esp,ss
  40d748:	test   eax,0xee73c35b
  40d74d:	push   ebx
  40d74e:	(bad)  
  40d74f:	scas   eax,DWORD PTR es:[edi]
  40d750:	pop    esp
  40d751:	jmp    0x40d6ec
  40d753:	sub    DWORD PTR [edx+0x56116829],edi
  40d759:	dec    edx
  40d75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d75b:	popf   
  40d75c:	js     0x40d765
  40d75e:	and    eax,0x1c739186
  40d763:	or     bl,BYTE PTR [ebx]
  40d765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d766:	scas   al,BYTE PTR es:[edi]
  40d767:	jg     0x40d762
  40d769:	in     al,0x26
  40d76b:	inc    ebp
  40d76c:	dec    ebp
  40d76d:	fimul  WORD PTR [ecx-0x52bb32da]
  40d773:	dec    esi
  40d774:	call   0xd536de6c
  40d779:	pushf  
  40d77a:	int3   
  40d77b:	mov    ebx,0x54fc0cc7
  40d780:	mov    ebx,0xf40caadb
  40d785:	add    dh,ah
  40d787:	mov    dl,0xe7
  40d789:	pop    esp
  40d78a:	pop    edx
  40d78b:	pop    ebx
  40d78c:	jmp    0x40d765
  40d78e:	cwde   
  40d78f:	inc    ecx
  40d790:	cli    
  40d791:	fs aad 0xec
  40d794:	(bad)  [esi+edi*8-0x582d2cba]
  40d79b:	fdiv   st,st(1)
  40d79d:	mov    ch,0x66
  40d79f:	in     al,dx
  40d7a0:	stc    
  40d7a1:	iret   
  40d7a2:	imul   esi,esp,0x788b2423
  40d7a8:	std    
  40d7a9:	pusha  
  40d7aa:	fst    QWORD PTR [ebp-0x7f]
  40d7ad:	push   0xffffff8c
  40d7af:	scas   al,BYTE PTR es:[edi]
  40d7b0:	test   eax,0xea3b771d
  40d7b5:	sbb    bh,BYTE PTR [eax-0x7b]
  40d7b8:	aam    0x72
  40d7ba:	lods   al,BYTE PTR ds:[esi]
  40d7bb:	imul   ebx,DWORD PTR [eax-0x1698ddb8],0xbccf49bb
  40d7c5:	xchg   dl,cl
  40d7c7:	leave  
  40d7c8:	pusha  
  40d7c9:	pop    ebp
  40d7ca:	fstp   DWORD PTR [ecx-0x754dbb7b]
  40d7d0:	push   ds
  40d7d1:	(bad)  
  40d7d2:	pusha  
  40d7d3:	adc    DWORD PTR [bx+si+0x2e2c],eax
  40d7d8:	inc    ebp
  40d7d9:	scas   al,BYTE PTR es:[edi]
  40d7da:	jo     0x40d825
  40d7dc:	ss and eax,0x4be70646
  40d7e2:	fsub   DWORD PTR [esi+0x10]
  40d7e5:	mov    eax,0x825a42d3
  40d7ea:	enter  0x9fe8,0x9c
  40d7ee:	(bad)  
  40d7ef:	iret   
  40d7f0:	add    al,0x29
  40d7f2:	fisttp DWORD PTR [ecx+ebx*8-0x3f7b2458]
  40d7f9:	sbb    ah,BYTE PTR [ebp-0x55e2affd]
  40d7ff:	jge    0x40d867
  40d801:	scas   eax,DWORD PTR es:[edi]
  40d802:	aad    0x63
  40d804:	test   DWORD PTR [ebp-0x3c],0x324c20d7
  40d80b:	mov    dl,0x4d
  40d80d:	jbe    0x40d880
  40d80f:	xor    ecx,edi
  40d811:	pop    edx
  40d812:	ret    0xbd31
  40d815:	adc    edi,eax
  40d817:	iret   
  40d818:	int    0x10
  40d81a:	imul   ecx,ecx,0xfffffff3
  40d81d:	cmc    
  40d81e:	xchg   ebx,eax
  40d81f:	mov    cs,WORD PTR [edi]
  40d821:	ins    DWORD PTR es:[edi],dx
  40d822:	sbb    bl,ah
  40d824:	scas   eax,DWORD PTR es:[edi]
  40d825:	or     DWORD PTR [eax],edx
  40d827:	not    dh
  40d829:	push   edx
  40d82a:	cmp    eax,0xbe8a78e3
  40d82f:	mov    cs,ebx
  40d831:	cwde   
  40d832:	loope  0x40d8a4
  40d834:	inc    ebp
  40d835:	sub    BYTE PTR [eax-0x6],ah
  40d838:	int3   
  40d839:	xor    eax,0x1df904
  40d83e:	aas    
  40d83f:	sub    DWORD PTR [edi],edi
  40d841:	mov    DWORD PTR [ecx-0x7c],0xa6aee2cd
  40d848:	fdivr  QWORD PTR [edi-0x1d]
  40d84b:	add    BYTE PTR [edi+eiz*4],ch
  40d84e:	xchg   edi,eax
  40d84f:	push   edi
  40d850:	or     BYTE PTR [edx+0x2c24d528],0x98
  40d857:	aam    0x92
  40d859:	and    DWORD PTR [ebx+0x17],ebx
  40d85c:	and    BYTE PTR [edi+ebx*2+0x4b],bl
  40d860:	add    esp,ebx
  40d862:	pusha  
  40d863:	repnz test al,0x23
  40d866:	leave  
  40d867:	sub    cl,dh
  40d869:	adc    ah,BYTE PTR [ebp+eax*4+0x74c49441]
  40d870:	jno    0x40d8c2
  40d872:	mov    DWORD PTR [ecx],eax
  40d874:	lea    ecx,[ecx+0x61]
  40d877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d878:	test   eax,0x3c365404
  40d87d:	sahf   
  40d87e:	les    ecx,FWORD PTR ds:0xd0f36ae0
  40d884:	mov    ebx,0x6dd0c03a
  40d889:	jle    0x40d848
  40d88b:	retf   0x1fa
  40d88e:	cmp    ebx,0xd5939f30
  40d894:	mov    ch,0x62
  40d896:	fs pop eax
  40d898:	pop    esi
  40d899:	outs   dx,DWORD PTR ds:[esi]
  40d89a:	(bad)  
  40d89b:	lock lods al,BYTE PTR ds:[esi]
  40d89d:	gs ja  0x40d8aa
  40d8a0:	das    
  40d8a1:	(bad)  
  40d8a2:	aad    0x6f
  40d8a4:	sar    BYTE PTR [edx-0x7c71311b],cl
  40d8aa:	push   ecx
  40d8ab:	scas   eax,DWORD PTR es:[edi]
  40d8ac:	out    0x84,al
  40d8ae:	mov    al,0x74
  40d8b0:	push   ebx
  40d8b1:	cdq    
  40d8b2:	inc    edi
  40d8b3:	xchg   ecx,eax
  40d8b4:	sbb    al,0xcb
  40d8b6:	or     BYTE PTR [esi+0x6e],cl
  40d8b9:	imul   edi,DWORD PTR [edx],0x5a28dc6c
  40d8bf:	sbb    eax,0x46ec75fa
  40d8c4:	int3   
  40d8c5:	mov    ds:0xa58feabc,al
  40d8ca:	jle    0x40d92c
  40d8cc:	in     al,dx
  40d8cd:	sbb    bl,ah
  40d8cf:	std    
  40d8d0:	mov    al,0xa5
  40d8d2:	dec    ecx
  40d8d3:	enter  0x7931,0xe4
  40d8d7:	dec    eax
  40d8d8:	(bad)  [edx]
  40d8da:	fistp  QWORD PTR ds:0xa6ac9976
  40d8e0:	push   edi
  40d8e1:	jmp    0x65bc:0x6326e4d2
  40d8e8:	mov    bh,0x54
  40d8ea:	nop
  40d8eb:	inc    eax
  40d8ec:	outs   dx,BYTE PTR ds:[esi]
  40d8ed:	in     eax,dx
  40d8ee:	inc    edi
  40d8ef:	xchg   ecx,eax
  40d8f0:	int    0x21
  40d8f2:	xchg   ebx,eax
  40d8f3:	dec    eax
  40d8f4:	icebp  
  40d8f5:	into   
  40d8f6:	in     eax,0x52
  40d8f8:	mov    WORD PTR es:0x8288036e,cs
  40d8ff:	movq   xmm5,xmm5
  40d903:	mov    es,esi
  40d905:	mov    edx,0x6372f29b
  40d90a:	xchg   BYTE PTR [ecx-0x55f736ae],ch
  40d910:	fistp  QWORD PTR [edi]
  40d912:	(bad)  [eax]
  40d914:	call   0x994eada2
  40d919:	lock int3 
  40d91b:	in     eax,0x89
  40d91d:	fs out 0x1f,al
  40d920:	push   ds
  40d921:	pop    ebx
  40d922:	inc    ecx
  40d923:	int3   
  40d924:	pusha  
  40d925:	cli    
  40d926:	popa   
  40d927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d928:	cmp    DWORD PTR [edi-0x5be12df2],ecx
  40d92e:	aam    0x7e
  40d930:	pushf  
  40d931:	or     BYTE PTR [ebx+0x7e7e9e84],bh
  40d937:	and    al,0x36
  40d939:	pop    ss
  40d93a:	cmp    DWORD PTR [ebx+ebx*1],eax
  40d93d:	jg     0x40d90e
  40d93f:	lds    eax,FWORD PTR [ecx]
  40d941:	mov    dl,0x98
  40d943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d944:	mov    ebx,0x637580b5
  40d949:	imul   eax,DWORD PTR [esi-0x76f0e34c],0x23d6e7cc
  40d953:	sub    eax,0x3cee3d6b
  40d958:	adc    al,0xff
  40d95a:	or     cl,bh
  40d95c:	pop    ebx
  40d95d:	adc    eax,0xb18f9e65
  40d962:	cs aaa 
  40d964:	fidiv  WORD PTR [edi-0x32979bfa]
  40d96a:	cmp    esi,eax
  40d96c:	fild   QWORD PTR [ecx]
  40d96e:	cmc    
  40d96f:	adc    ch,BYTE PTR [ecx+0x5]
  40d972:	mov    ds:0xb51ecd9b,eax
  40d977:	std    
  40d978:	pop    ds
  40d979:	popf   
  40d97a:	stos   DWORD PTR es:[edi],eax
  40d97b:	cld    
  40d97c:	dec    esp
  40d97d:	or     eax,0x33b558ad
  40d982:	jne    0x40d950
  40d984:	jge    0x40d997
  40d986:	push   ebp
  40d987:	loopne 0x40d980
  40d989:	jecxz  0x40d9b7
  40d98b:	dec    ecx
  40d98c:	fiadd  WORD PTR [ecx+0x3c]
  40d98f:	lahf   
  40d990:	(bad)  
  40d991:	cmp    esp,ecx
  40d993:	dec    edx
  40d994:	inc    edi
  40d995:	loope  0x40d9dd
  40d997:	jmp    FWORD PTR [ebx+0x46]
  40d99a:	or     ch,BYTE PTR [ebp+0x4f045dda]
  40d9a0:	les    esi,FWORD PTR [esi-0x14]
  40d9a3:	arpl   WORD PTR [ecx],bp
  40d9a5:	jnp    0x40d92d
  40d9a7:	ds out dx,eax
  40d9a9:	mov    al,ds:0x52214d93
  40d9ae:	xchg   edx,eax
  40d9af:	outs   dx,BYTE PTR ds:[esi]
  40d9b0:	or     eax,0x8e9e335d
  40d9b5:	xchg   esi,eax
  40d9b6:	imul   edi,DWORD PTR ds:0xd21ce6c8,0x9105eb52
  40d9c0:	ret    0x75ee
  40d9c3:	in     al,0xab
  40d9c5:	cmp    ch,dl
  40d9c7:	das    
  40d9c8:	mov    eax,ds:0x47d88295
  40d9cd:	clc    
  40d9ce:	(bad)  
  40d9cf:	pop    ss
  40d9d0:	pop    ds
  40d9d1:	jmp    0x6fbf:0xcc67c339
  40d9d8:	push   eax
  40d9d9:	mov    eax,ds:0x6cabca59
  40d9de:	cwde   
  40d9df:	in     eax,0x53
  40d9e1:	pop    ebp
  40d9e2:	jge    0x40da57
  40d9e4:	mov    esp,0x33d81d37
  40d9e9:	sbb    ecx,esp
  40d9eb:	cli    
  40d9ec:	rcl    BYTE PTR [ebp-0x2f],cl
  40d9ef:	push   es
  40d9f0:	jmp    0xee0bd6c8
  40d9f5:	arpl   WORD PTR [eax-0x3c],di
  40d9f8:	xor    BYTE PTR [eax-0x6f],al
  40d9fb:	push   esi
  40d9fc:	adc    ecx,DWORD PTR [ecx+0xc]
  40d9ff:	push   0x49
  40da01:	data16 out dx,al
  40da03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da04:	xchg   DWORD PTR [edx],esp
  40da06:	pop    edi
  40da07:	or     eax,0x6d6b6429
  40da0c:	stos   BYTE PTR es:[edi],al
  40da0d:	dec    esp
  40da0e:	sub    al,0xc6
  40da10:	pop    es
  40da11:	or     esp,DWORD PTR [ebx-0x28e85047]
  40da17:	retf   0x86b
  40da1a:	cld    
  40da1b:	pop    es
  40da1c:	mov    WORD PTR [esi-0x221451d1],?
  40da22:	pop    ebx
  40da23:	add    BYTE PTR [ecx],bl
  40da25:	push   ss
  40da26:	pushf  
  40da27:	cdq    
  40da28:	mov    ebp,0xe7ee3409
  40da2d:	dec    eax
  40da2e:	fisttp QWORD PTR [edx+0x2ba973f9]
  40da34:	inc    esi
  40da35:	aas    
  40da36:	mov    ah,0xb2
  40da38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da39:	jg     0x40dab0
  40da3b:	sub    al,0x41
  40da3d:	push   ebx
  40da3e:	test   al,0x8
  40da40:	xchg   esp,eax
  40da41:	pop    es
  40da42:	outs   dx,BYTE PTR ds:[esi]
  40da43:	call   0x7dcf:0x2965bf0e
  40da4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da4b:	push   esi
  40da4c:	daa    
  40da4d:	mov    bh,0xae
  40da4f:	ins    DWORD PTR es:[edi],dx
  40da50:	xchg   ecx,eax
  40da51:	xor    BYTE PTR [ebx+0x54121d26],ch
  40da57:	jns    0x40daaa
  40da59:	sbb    BYTE PTR [edi+ebx*1],dl
  40da5c:	push   ss
  40da5d:	fwait
  40da5e:	mov    ebx,0x999586dd
  40da63:	es jae 0x40d9e8
  40da66:	mov    ah,BYTE PTR [edi-0x59]
  40da69:	sbb    DWORD PTR [ebx-0x56],ecx
  40da6c:	int3   
  40da6d:	mov    edi,0x186adfb1
  40da72:	ret    0xeb67
  40da75:	sub    ecx,eax
  40da77:	out    0x44,al
  40da79:	push   edx
  40da7a:	xor    BYTE PTR [esp+esi*1+0x23],dl
  40da7e:	mov    al,ds:0xb703990f
  40da83:	fldcw  WORD PTR [esi+0x30fb6537]
  40da89:	pop    edi
  40da8a:	ins    BYTE PTR es:[edi],dx
  40da8b:	xchg   edi,eax
  40da8c:	xchg   edi,eax
  40da8d:	dec    edi
  40da8e:	fsub   st(2),st
  40da90:	clc    
  40da91:	lahf   
  40da92:	adc    edi,DWORD PTR [ebx+0x3c5724d6]
  40da98:	push   cs
  40da99:	dec    ebp
  40da9a:	(bad)  
  40da9b:	mov    ch,0x62
  40da9d:	shr    BYTE PTR [ebp+edx*2-0x3c8c4c79],cl
  40daa4:	or     BYTE PTR [esi],dh
  40daa6:	stc    
  40daa7:	mov    esp,0xef09b760
  40daac:	popa   
  40daad:	dec    esi
  40daae:	iret   
  40daaf:	es repz int 0x41
  40dab3:	int    0xb8
  40dab5:	test   eax,0x183c45a5
  40daba:	jno    0x40daf5
  40dabc:	push   0xfb66444b
  40dac1:	add    al,0x92
  40dac3:	jp     0x40db3a
  40dac5:	push   0xffffffe7
  40dac7:	neg    DWORD PTR [eax]
  40dac9:	jle    0x40daf8
  40dacb:	inc    esi
  40dacc:	daa    
  40dacd:	push   esi
  40dace:	in     eax,0x84
  40dad0:	cmc    
  40dad1:	add    eax,0xeed4599c
  40dad6:	push   ds
  40dad7:	test   al,0x48
  40dad9:	mov    ecx,0xcbe7ab88
  40dade:	(bad)  
  40dadf:	mov    ds:0xf7ba85a,al
  40dae4:	pop    es
  40dae5:	mov    eax,DWORD PTR [esi-0xcd547fc]
  40daeb:	aas    
  40daec:	adc    ah,BYTE PTR ss:[ecx+0x1119994b]
  40daf3:	data16 mov dl,0xbc
  40daf6:	fild   DWORD PTR [ecx+0x2e7a571f]
  40dafc:	add    al,0x27
  40dafe:	mov    ch,0xbe
  40db00:	jo     0x40db1a
  40db02:	adc    DWORD PTR [ebx],0xddc2e8d1
  40db08:	arpl   bx,cx
  40db0a:	inc    eax
  40db0b:	xchg   DWORD PTR [edx+0x4bfa73ac],edi
  40db11:	std    
  40db12:	sub    BYTE PTR [ebx+0x1d0b618c],0xfe
  40db19:	test   dh,cl
  40db1b:	sti    
  40db1c:	xchg   edi,eax
  40db1d:	out    0xd2,eax
  40db1f:	cmc    
  40db20:	and    esi,DWORD PTR [esi+0x76]
  40db23:	mov    esi,0x10c5a4ce
  40db28:	jne    0x40db92
  40db2a:	cwde   
  40db2b:	push   cs
  40db2c:	xchg   edx,eax
  40db2d:	jmp    0x40db21
  40db2f:	mov    esi,0x9c240aeb
  40db34:	pop    ebp
  40db35:	mov    esp,0x47cf8c7f
  40db3a:	cmp    eax,0x8193c3cf
  40db3f:	js     0x40db0a
  40db41:	iret   
  40db42:	(bad)  
  40db43:	pop    esi
  40db44:	sub    esi,DWORD PTR [ecx]
  40db46:	push   edi
  40db47:	daa    
  40db48:	fisubr WORD PTR [ecx+ebp*1]
  40db4b:	fbstp  TBYTE PTR [edi]
  40db4d:	repz in al,0x74
  40db50:	out    dx,al
  40db51:	or     BYTE PTR [eax-0x10],dh
  40db54:	and    DWORD PTR [esi-0x13df92e2],edi
  40db5a:	dec    ebx
  40db5b:	and    DWORD PTR [edx+0x2b],edi
  40db5e:	hlt    
  40db5f:	enter  0xb8bd,0xd7
  40db63:	inc    esi
  40db64:	sub    al,0x77
  40db66:	pop    ebx
  40db67:	xor    DWORD PTR [eax+ebx*8],ebx
  40db6a:	shl    DWORD PTR [ebp+0x595286b4],1
  40db70:	inc    edx
  40db71:	xor    DWORD PTR [eax+ebp*2-0x30],edx
  40db75:	repz xor BYTE PTR [ecx-0x37],cl
  40db79:	fdiv   QWORD PTR [esi]
  40db7b:	xchg   edi,eax
  40db7c:	mov    ch,0xbb
  40db7e:	sti    
  40db7f:	stc    
  40db80:	pusha  
  40db81:	lds    edi,FWORD PTR [edi-0x78e2931e]
  40db87:	or     BYTE PTR [ebp-0x2d61a639],0x93
  40db8e:	test   DWORD PTR [ebx+0x47],ecx
  40db91:	fs pop ds
  40db93:	xchg   ecx,eax
  40db94:	push   edi
  40db95:	sbb    BYTE PTR [edx-0x2f895053],bh
  40db9b:	pop    ecx
  40db9c:	imul   esp,eax,0x48
  40db9f:	jl     0x40db54
  40dba1:	pop    es
  40dba2:	xlat   BYTE PTR ds:[ebx]
  40dba3:	std    
  40dba4:	dec    ecx
  40dba5:	icebp  
  40dba6:	sub    eax,0x27081aed
  40dbab:	dec    ecx
  40dbac:	cdq    
  40dbad:	pop    ebp
  40dbae:	inc    esp
  40dbaf:	pop    ebx
  40dbb0:	add    al,0xb9
  40dbb2:	xor    bh,BYTE PTR [esi+edx*1]
  40dbb5:	in     al,dx
  40dbb6:	cmp    al,0x5d
  40dbb8:	aam    0x40
  40dbba:	ins    BYTE PTR es:[edi],dx
  40dbbb:	repz addr16 xchg esi,eax
  40dbbe:	jmp    DWORD PTR [ebx]
  40dbc0:	cdq    
  40dbc1:	ffreep st(4)
  40dbc3:	pop    ebx
  40dbc4:	xchg   edi,eax
  40dbc5:	call   0xcf00:0x56491e8
  40dbcc:	fld    TBYTE PTR [ebx-0x44]
  40dbcf:	or     al,0xe4
  40dbd1:	bound  esp,QWORD PTR [edx+0xc]
  40dbd4:	ins    DWORD PTR es:[edi],dx
  40dbd5:	scas   eax,DWORD PTR es:[edi]
  40dbd6:	out    dx,al
  40dbd7:	mov    al,0x75
  40dbd9:	fstp   QWORD PTR [ecx+0x7cfe7642]
  40dbdf:	in     eax,0x98
  40dbe1:	lahf   
  40dbe2:	call   0x850e:0x7e821df6
  40dbe9:	dec    eax
  40dbea:	jl     0x40dbb2
  40dbec:	dec    edx
  40dbed:	test   DWORD PTR [ecx+0x5a],0x67aae95d
  40dbf4:	stos   DWORD PTR es:[edi],eax
  40dbf5:	adc    DWORD PTR [edx-0x8369e48],esp
  40dbfb:	fnstcw WORD PTR [edi+0x6618d8df]
  40dc01:	loope  0x40dbc1
  40dc03:	lock sub eax,0xbbfe7e26
  40dc09:	cmp    eax,0x643a1c68
  40dc0e:	lds    ebx,FWORD PTR [edx+0x6576b482]
  40dc14:	out    0xcb,eax
  40dc16:	(bad)  
  40dc17:	and    eax,0x4a3482d1
  40dc1c:	inc    edi
  40dc1d:	add    BYTE PTR [esi+0x2d280d27],ch
  40dc23:	outs   dx,BYTE PTR ds:[esi]
  40dc24:	fmul   DWORD PTR [edx]
  40dc26:	rcl    BYTE PTR [eax-0xe748cae],1
  40dc2c:	stos   BYTE PTR es:[edi],al
  40dc2d:	mov    al,0x46
  40dc2f:	cwde   
  40dc30:	dec    ecx
  40dc31:	das    
  40dc32:	fistp  DWORD PTR [esi+0xdc6a1c3]
  40dc38:	leave  
  40dc39:	push   edx
  40dc3a:	call   0xd31f:0xb53d56f4
  40dc41:	lods   al,BYTE PTR ds:[esi]
  40dc42:	cdq    
  40dc43:	xor    eax,0x3d76c253
  40dc48:	dec    eax
  40dc49:	mov    dh,0xb0
  40dc4b:	mov    eax,DWORD PTR [ecx+ecx*1+0x505aa2e5]
  40dc52:	ror    BYTE PTR [edi],1
  40dc54:	imul   ebp,DWORD PTR [eax+0x15169913],0xffffffdc
  40dc5b:	xor    ebp,DWORD PTR [ecx+0xe]
  40dc5e:	xor    ch,BYTE PTR [edi]
  40dc60:	mov    bh,0x5
  40dc62:	add    DWORD PTR [edx+0x3],edi
  40dc65:	dec    ebp
  40dc66:	cmp    esp,DWORD PTR [ecx-0x2fd66a6c]
  40dc6c:	cmp    al,0x3e
  40dc6e:	dec    edx
  40dc6f:	ins    BYTE PTR es:[edi],dx
  40dc70:	adc    al,0x20
  40dc72:	jns    0x40dc8a
  40dc74:	mov    ebx,0xf92227b0
  40dc7a:	inc    ebp
  40dc7b:	dec    ecx
  40dc7c:	sub    DWORD PTR [eax],edi
  40dc7e:	out    dx,eax
  40dc7f:	mov    esp,esp
  40dc81:	faddp  st(0),st
  40dc83:	imul   eax,DWORD PTR [edi],0x4d1a8d76
  40dc89:	xchg   ecx,eax
  40dc8a:	sti    
  40dc8b:	sbb    eax,0xa4899981
  40dc90:	mov    ebx,ss
  40dc92:	pop    ecx
  40dc93:	lahf   
  40dc94:	scas   eax,DWORD PTR es:[edi]
  40dc95:	add    DWORD PTR [ebx-0x6be97bfa],ebp
  40dc9b:	mov    BYTE PTR [ecx-0xf],cl
  40dc9e:	mov    ecx,0x5ba37e70
  40dca3:	imul   esp,DWORD PTR [edx+eiz*4+0x78],0xffffff9c
  40dca8:	pop    esp
  40dca9:	adc    al,0xfe
  40dcab:	push   esp
  40dcac:	xor    al,0x5f
  40dcae:	loop   0x40dc7e
  40dcb0:	sub    BYTE PTR [edx*1-0x2c6b88e8],dh
  40dcb7:	(bad)  
  40dcb8:	mov    ecx,0x6e557c0d
  40dcbd:	rcl    DWORD PTR [ecx+0x6e],1
  40dcc0:	cmp    ecx,DWORD PTR [edi]
  40dcc2:	cli    
  40dcc3:	call   0x7b7793ef
  40dcc8:	jne    0x40dc88
  40dcca:	repnz mov gs:0x4511504a,eax
  40dcd1:	pop    esi
  40dcd2:	fcomp  DWORD PTR [esi-0x5338db7a]
  40dcd8:	jbe    0x40dd2c
  40dcda:	stc    
  40dcdb:	or     al,0x64
  40dcdd:	jmp    0xfe8b:0xc3da1464
  40dce4:	sbb    eax,0xe2149ec3
  40dce9:	ror    DWORD PTR [ebx+0x1d],1
  40dcec:	cmp    esi,edi
  40dcee:	in     al,0x96
  40dcf0:	js     0x40dcbd
  40dcf2:	add    DWORD PTR [eax-0x2a579401],esp
  40dcf8:	xor    BYTE PTR [edx-0x25ee007a],dl
  40dcfe:	cs ja  0x40dd13
  40dd01:	inc    ebx
  40dd02:	mov    ebp,0xb69a65fb
  40dd07:	jl     0x40dd2b
  40dd09:	loop   0x40dd05
  40dd0b:	sbb    DWORD PTR [eax-0x2a8a5a32],ebp
  40dd11:	xchg   esp,eax
  40dd12:	add    DWORD PTR [ecx+0xa],esp
  40dd15:	outs   dx,DWORD PTR ds:[esi]
  40dd16:	jle    0x40dd87
  40dd18:	and    al,ch
  40dd1a:	xor    ah,BYTE PTR [ecx+0x54ad7ed1]
  40dd20:	or     ebx,0xeed4aac5
  40dd26:	(bad)  
  40dd27:	fistp  WORD PTR [ebx-0xd526d00]
  40dd2d:	push   ebp
  40dd2e:	sub    eax,0x4ab7150e
  40dd33:	ins    BYTE PTR es:[edi],dx
  40dd34:	mov    BYTE PTR [esi+0x58],cl
  40dd37:	pop    ecx
  40dd38:	loope  0x40dd62
  40dd3a:	jb     0x40dd11
  40dd3c:	xor    al,ah
  40dd3e:	pushf  
  40dd3f:	add    al,BYTE PTR [edi]
  40dd41:	mov    eax,ds:0xd0aa163f
  40dd46:	inc    esi
  40dd47:	sub    eax,0x1dceb183
  40dd4c:	xor    eax,0x11b81106
  40dd51:	int    0x66
  40dd53:	mov    ah,0x15
  40dd55:	cmp    ebp,DWORD PTR [esi-0x73]
  40dd58:	xor    al,0xfe
  40dd5a:	pusha  
  40dd5b:	fwait
  40dd5c:	jecxz  0x40ddc6
  40dd5e:	mov    al,ds:0x62edcbca
  40dd63:	stos   BYTE PTR es:[edi],al
  40dd64:	cmp    al,0x67
  40dd66:	mov    ebx,DWORD PTR [esi+0x67]
  40dd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd6a:	sbb    edx,DWORD PTR [eax-0x1316705]
  40dd70:	jl     0x40dd90
  40dd72:	sub    al,0x62
  40dd74:	or     al,0x17
  40dd76:	lods   al,BYTE PTR ds:[esi]
  40dd77:	or     ebp,DWORD PTR [ebp+0x24eaffc7]
  40dd7d:	push   cs
  40dd7e:	(bad)  
  40dd7f:	mov    ah,0xad
  40dd81:	test   DWORD PTR [esi+0x7b73d12d],eax
  40dd87:	dec    ebp
  40dd88:	push   es
  40dd89:	arpl   WORD PTR [ebp*2+0x477fa695],bp
  40dd90:	in     eax,0x2d
  40dd92:	dec    edx
  40dd93:	jmp    DWORD PTR [ebp+0x6f28a8]
  40dd99:	(bad)  
  40dd9a:	in     eax,dx
  40dd9b:	push   edi
  40dd9c:	dec    eax
  40dd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd9e:	dec    edx
  40dd9f:	arpl   di,dx
  40dda1:	int    0xd4
  40dda3:	shr    DWORD PTR [edx+eiz*4+0x4d910599],cl
  40ddaa:	sub    al,0x2e
  40ddac:	das    
  40ddad:	mov    edi,0xe52d7dc8
  40ddb2:	stc    
  40ddb3:	fsubr  QWORD PTR [edx+0xb702704]
  40ddb9:	pop    ss
  40ddba:	mov    WORD PTR [edi-0x664b9298],cs
  40ddc0:	loop   0x40de07
  40ddc2:	pop    ds
  40ddc3:	and    eax,0x99e1bad9
  40ddc8:	mov    al,0xb8
  40ddca:	repz icebp 
  40ddcc:	cmp    dh,BYTE PTR [edi]
  40ddce:	js     0x40dd5d
  40ddd0:	sar    bh,1
  40ddd2:	xor    eax,0x445573da
  40ddd7:	popa   
  40ddd8:	pop    ss
  40ddd9:	(bad)  
  40ddda:	xchg   edi,eax
  40dddb:	xchg   DWORD PTR ds:0x2ccaa634,ebx
  40dde1:	out    dx,al
  40dde2:	out    dx,eax
  40dde3:	mov    ds:0xf12f4cf2,eax
  40dde8:	das    
  40dde9:	js     0x40dda3
  40ddeb:	jnp    0x40ddb7
  40dded:	pop    ds
  40ddee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddef:	jo     0x40de28
  40ddf1:	and    al,dh
  40ddf3:	mov    BYTE PTR [ebx],ch
  40ddf5:	ret    0xa969
  40ddf8:	mov    ah,BYTE PTR [esi+eax*4+0x34]
  40ddfc:	into   
  40ddfd:	(bad)  
  40ddfe:	rcr    ecx,cl
  40de00:	ret    0x2b81
  40de03:	inc    ebx
  40de04:	retf   
  40de05:	mov    ebx,0xdb7a2b91
  40de0a:	dec    ebx
  40de0b:	and    eax,0x63d45d66
  40de10:	pop    edx
  40de11:	test   DWORD PTR [ebx],esp
  40de13:	shr    DWORD PTR [edi-0x12],1
  40de16:	ret    0xa6b7
  40de19:	sbb    DWORD PTR [esi-0x4d],eax
  40de1c:	cwde   
  40de1d:	ins    DWORD PTR es:[edi],dx
  40de1e:	mov    ds:0x8733cc81,al
  40de23:	mov    ah,BYTE PTR [ebp+0x6]
  40de26:	(bad)  
  40de27:	jmp    0x458f:0x6b4a66de
  40de2e:	adc    ah,BYTE PTR [ebp-0x62]
  40de31:	xchg   ebx,eax
  40de32:	sbb    dh,BYTE PTR [eax+0x34799455]
  40de38:	fiadd  WORD PTR [ebx]
  40de3b:	pop    edi
  40de3c:	jne    0x40de81
  40de3e:	adc    bh,BYTE PTR [ebx]
  40de40:	scas   eax,DWORD PTR es:[edi]
  40de41:	es out dx,ax
  40de44:	fwait
  40de45:	inc    eax
  40de46:	jb     0x40de78
  40de48:	aas    
  40de49:	cmp    BYTE PTR [edx-0x77bbd5f0],bl
  40de4f:	add    DWORD PTR [ebx+0x1ae63c7c],edx
  40de55:	sbb    ecx,DWORD PTR [eax-0x5fc20033]
  40de5b:	test   BYTE PTR [eax+0x37],bl
  40de5e:	out    dx,al
  40de5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de60:	pop    esi
  40de61:	sbb    BYTE PTR [edi],al
  40de63:	sbb    DWORD PTR [ebx-0x1c],ebp
  40de66:	xor    esp,DWORD PTR [eax-0x46]
  40de69:	xchg   ebp,eax
  40de6a:	jnp    0x40de71
  40de6c:	dec    BYTE PTR ds:0x8c0fb7d3
  40de72:	and    DWORD PTR [ecx],edx
  40de74:	test   DWORD PTR [ebx],ebx
  40de76:	cmp    edi,edi
  40de78:	xchg   edx,eax
  40de79:	xchg   ecx,eax
  40de7a:	push   0x54b5dc54
  40de7f:	mov    BYTE PTR [ecx-0x62],cl
  40de82:	cmp    DWORD PTR [eax-0xc],esi
  40de85:	out    dx,eax
  40de86:	adc    DWORD PTR [edi-0x1dbe1902],eax
  40de8c:	mov    dl,0xca
  40de8e:	test   al,0x66
  40de90:	call   0x318b:0x579393f5
  40de97:	rcr    BYTE PTR [eax-0x6463b537],1
  40de9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de9e:	sahf   
  40de9f:	mov    bh,dl
  40dea1:	fidiv  WORD PTR [eax+0x108b5cdf]
  40dea7:	pop    ebx
  40dea8:	mov    bl,0xdb
  40deaa:	test   al,0xda
  40deac:	add    al,0xee
  40deae:	xchg   ecx,eax
  40deaf:	mov    DWORD PTR [esi],0x3863108f
  40deb5:	cmp    DWORD PTR [ecx+esi*8+0x4cce7ad9],ebp
  40debc:	call   0x2f2a:0xacb1f220
  40dec3:	push   eax
  40dec4:	inc    ecx
  40dec5:	aad    0x31
  40dec7:	jne    0x40df40
  40dec9:	add    eax,0x3a43837c
  40dece:	mov    ah,0xd1
  40ded0:	fisttp QWORD PTR [edi+ecx*2]
  40ded3:	adc    esp,DWORD PTR [esi+esi*2]
  40ded6:	xchg   ecx,eax
  40ded7:	ds hlt 
  40ded9:	test   BYTE PTR [ecx-0x5e],al
  40dedc:	pushf  
  40dedd:	inc    ebx
  40dede:	sti    
  40dedf:	cmp    esi,DWORD PTR [eax]
  40dee1:	punpcklbw mm3,DWORD PTR [eax-0x192ec9eb]
  40dee8:	lahf   
  40dee9:	sbb    al,0x72
  40deeb:	xchg   esp,eax
  40deec:	mov    bh,0x13
  40deee:	xlat   BYTE PTR ds:[ebx]
  40deef:	test   eax,0x4c0902f1
  40def4:	xchg   edi,eax
  40def5:	iret   
  40def6:	int3   
  40def7:	mov    esi,gs
  40def9:	and    al,BYTE PTR [edx-0x14]
  40defc:	mov    ds:0x18a9ca92,al
  40df01:	mov    dh,0xc2
  40df03:	jg     0x40deac
  40df05:	cli    
  40df06:	hlt    
  40df07:	ficom  DWORD PTR [edx+esi*1+0x15a31140]
  40df0e:	lods   al,BYTE PTR ds:[esi]
  40df0f:	call   0xf9228c40
  40df14:	test   BYTE PTR [eax+0x54],0x56
  40df18:	outs   dx,BYTE PTR ds:[esi]
  40df19:	out    dx,al
  40df1a:	(bad)  
  40df1b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40df1d:	inc    ebp
  40df1e:	aas    
  40df1f:	mov    edx,0xc570ef1c
  40df24:	out    0x3f,eax
  40df26:	mov    al,0x38
  40df28:	jg     0x40deda
  40df2a:	stos   BYTE PTR es:[edi],al
  40df2b:	mov    dl,0xc1
  40df2d:	or     eax,0x517714d3
  40df32:	sbb    DWORD PTR ss:[ebp-0xa5ed9d],edi
  40df39:	jge    0x40def2
  40df3b:	xchg   esp,eax
  40df3c:	and    eax,0x618a39c2
  40df41:	dec    eax
  40df42:	popa   
  40df43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df44:	fs sahf 
  40df46:	mov    al,ds:0x23990483
  40df4b:	shr    edi,1
  40df4d:	dec    eax
  40df4e:	mov    dl,0xbc
  40df51:	jbe    0x40df8b
  40df53:	pop    ss
  40df54:	lods   eax,DWORD PTR ds:[esi]
  40df55:	xchg   esp,eax
  40df56:	into   
  40df57:	nop
  40df58:	ds adc BYTE PTR gs:[esi],cl
  40df5c:	dec    edx
  40df5d:	aas    
  40df5e:	fidiv  DWORD PTR ds:0xc8a05853
  40df64:	fmul   st(5),st
  40df66:	cs test eax,0x3503d0f3
  40df6c:	xor    DWORD PTR [ecx],esi
  40df6e:	add    al,0x32
  40df70:	dec    ebp
  40df71:	push   es
  40df72:	sbb    DWORD PTR [esi-0x5d],ebp
  40df75:	test   BYTE PTR [ecx+esi*8-0x1f51f331],ch
  40df7c:	test   DWORD PTR [edx+0xe],edx
  40df7f:	mov    ah,0x59
  40df81:	xchg   ebx,eax
  40df82:	scas   eax,DWORD PTR es:[edi]
  40df83:	sbb    ch,ch
  40df85:	mov    ah,0x1b
  40df87:	inc    edx
  40df88:	or     eax,0xd1399d2b
  40df8d:	out    dx,al
  40df8e:	jo     0x40df90
  40df90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df91:	mov    ds:0x85e760de,eax
  40df96:	jnp    0x40df2a
  40df98:	add    eax,0xabc4c9d1
  40df9d:	pop    ebp
  40df9e:	inc    esp
  40df9f:	xor    DWORD PTR [ebp+0x94e35bb],edx
  40dfa5:	sub    al,0xae
  40dfa7:	jns    0x40dfb0
  40dfa9:	sub    al,0x5a
  40dfab:	jns    0x40df66
  40dfad:	mov    bh,0x36
  40dfaf:	and    ecx,DWORD PTR [esi-0x29aad313]
  40dfb5:	mov    al,0xd8
  40dfb7:	pop    edi
  40dfb8:	push   ebp
  40dfb9:	aam    0x59
  40dfbb:	xor    BYTE PTR [eax+0x63],ah
  40dfbe:	jp     0x40df55
  40dfc0:	inc    ecx
  40dfc1:	and    eax,0x6c9df7e3
  40dfc6:	jnp    0x40df86
  40dfc8:	xor    eax,0x9e2cb363
  40dfcd:	dec    edi
  40dfce:	cli    
  40dfcf:	xchg   ecx,eax
  40dfd0:	mov    bl,0x37
  40dfd2:	ins    BYTE PTR es:[edi],dx
  40dfd3:	in     eax,0x1a
  40dfd5:	out    0x6b,eax
  40dfd7:	hlt    
  40dfd8:	jb     0x40df84
  40dfda:	mov    edx,0xdf3634b9
  40dfdf:	pop    ebx
  40dfe0:	mov    eax,ds:0x9c005dca
  40dfe5:	outs   dx,BYTE PTR ds:[esi]
  40dfe6:	jnp    0x40dfda
  40dfe8:	and    ecx,0x50848030
  40dfee:	lds    edi,FWORD PTR [ecx]
  40dff0:	pop    eax
  40dff1:	and    ebx,DWORD PTR [ebx]
  40dff3:	or     BYTE PTR [ebp+ecx*8-0x41],al
  40dff7:	sbb    cl,BYTE PTR [ebx]
  40dff9:	push   ebx
  40dffa:	dec    edx
  40dffb:	(bad)  
  40dffc:	call   0xea0c3bfa
  40e001:	cmp    eax,0xcb4a7eef
  40e006:	leave  
  40e007:	mov    cl,0x5
  40e009:	jo     0x40e039
  40e00b:	cmc    
  40e00c:	jge    0x40e027
  40e00e:	sbb    DWORD PTR [esi+0x33],esp
  40e011:	and    DWORD PTR [edx-0x1dbcecf6],edi
  40e017:	mov    al,0xfa
  40e019:	ficomp WORD PTR [ecx-0x279c18ee]
  40e01f:	mov    bh,0x70
  40e021:	inc    ebx
  40e022:	or     al,0x8e
  40e024:	in     eax,dx
  40e025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e026:	mov    fs,WORD PTR [esi+0xf]
  40e029:	xchg   BYTE PTR [esp+ecx*2],ah
  40e02c:	and    DWORD PTR [edi],edx
  40e02e:	pop    ecx
  40e02f:	dec    eax
  40e030:	xchg   esp,eax
  40e031:	test   al,bl
  40e033:	push   esp
  40e034:	add    bl,bl
  40e036:	call   0xdbd788af
  40e03b:	xor    eax,0x78096465
  40e040:	cdq    
  40e041:	jg     0x40e03d
  40e043:	retf   0x76af
  40e046:	jmp    0xde5bc71d
  40e04b:	cmp    al,0xe3
  40e04d:	out    0x58,eax
  40e04f:	push   esi
  40e050:	adc    al,0x4d
  40e052:	lea    esp,[esi+0x37]
  40e055:	dec    esi
  40e056:	mov    al,ds:0x580e6a78
  40e05b:	push   0x77
  40e05d:	adc    BYTE PTR [edx+edx*1-0x74b5ff48],bh
  40e064:	mov    ch,0x15
  40e066:	ja     0x40e082
  40e068:	shr    ebp,1
  40e06a:	push   0xffffffe8
  40e06c:	stc    
  40e06d:	pusha  
  40e06e:	mov    bh,0xb3
  40e070:	inc    edi
  40e071:	in     eax,0x3e
  40e073:	ror    BYTE PTR [esi],0x2
  40e076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e077:	pop    es
  40e078:	xchg   esi,eax
  40e079:	sbb    al,0x14
  40e07b:	int    0x21
  40e07d:	adc    al,BYTE PTR [edx-0x17]
  40e080:	sahf   
  40e081:	inc    ebp
  40e082:	and    DWORD PTR [ebp+eax*8+0x30d8cfda],edi
  40e089:	jmp    0x72d14be9
  40e08e:	jne    0x40e03e
  40e090:	jl     0x40e014
  40e092:	out    dx,eax
  40e093:	les    ebp,FWORD PTR [ecx-0x1f4980f1]
  40e099:	mov    WORD PTR [esi],gs
  40e09b:	scas   al,BYTE PTR es:[edi]
  40e09c:	bound  ecx,QWORD PTR [ebp-0xf8c3d72]
  40e0a2:	push   ebp
  40e0a3:	sbb    dh,BYTE PTR [eax]
  40e0a5:	mov    esp,0x84731b41
  40e0aa:	mov    ch,0x2f
  40e0ac:	jns    0x40e0b7
  40e0ae:	sbb    eax,0xe48ed05e
  40e0b3:	gs or  al,0x94
  40e0b6:	adc    BYTE PTR [ebx+0x55cdb9d0],ch
  40e0bc:	sbb    bl,BYTE PTR [edx]
  40e0be:	test   eax,0x1e22bc9d
  40e0c3:	or     edi,ebp
  40e0c5:	nop
  40e0c6:	xchg   ebx,eax
  40e0c7:	pop    ds
  40e0c8:	xchg   esi,eax
  40e0c9:	xor    BYTE PTR [edi],0x19
  40e0cc:	cmc    
  40e0cd:	out    dx,al
  40e0ce:	shr    WORD PTR [eax+0x249d297e],1
  40e0d5:	retf   0x6ef9
  40e0d8:	mov    BYTE PTR [esi+ecx*8+0x34],bl
  40e0dc:	mov    WORD PTR [ebx-0x2da054af],ss
  40e0e2:	add    al,0xd1
  40e0e4:	mov    bh,0x48
  40e0e6:	mov    ebp,0x5d21d89e
  40e0eb:	push   edx
  40e0ec:	mov    esi,0x5122f05c
  40e0f1:	sbb    al,0xd5
  40e0f3:	rcr    esi,0xcc
  40e0f6:	and    BYTE PTR fs:[edi],dh
  40e0f9:	pop    eax
  40e0fa:	sbb    BYTE PTR [ebx],0xbf
  40e0fd:	sub    BYTE PTR [esi+0x6],ah
  40e100:	es (bad) 
  40e102:	cwde   
  40e103:	mov    eax,ds:0x57f0a39f
  40e108:	out    0x28,al
  40e10a:	sbb    ecx,DWORD PTR [ebp+0x48fb093]
  40e110:	fcmovnu st,st(0)
  40e112:	mov    al,ds:0x2b29a5cd
  40e117:	daa    
  40e118:	ror    BYTE PTR [ebx-0xf],0x20
  40e11c:	ror    DWORD PTR [ecx+0x1e],0x92
  40e120:	cwde   
  40e121:	xor    DWORD PTR [esi-0x17],esp
  40e124:	repz lahf 
  40e126:	stos   BYTE PTR es:[edi],al
  40e127:	retf   
  40e128:	test   BYTE PTR [edi],bl
  40e12a:	rcr    DWORD PTR [edi-0x5d],cl
  40e12d:	jecxz  0x40e198
  40e12f:	(bad)  
  40e133:	inc    ebp
  40e134:	iret   
  40e135:	mov    dl,0xe1
  40e137:	xor    al,0x20
  40e139:	sub    DWORD PTR [edx-0x64],esp
  40e13c:	mov    DWORD PTR [edx+0x42],edx
  40e13f:	outs   dx,BYTE PTR ds:[esi]
  40e140:	(bad)
  40e144:	lods   eax,DWORD PTR ds:[esi]
  40e145:	xchg   edx,eax
  40e146:	sub    DWORD PTR [esi],esi
  40e148:	xor    DWORD PTR [ebx],eax
  40e14a:	scas   eax,DWORD PTR es:[edi]
  40e14b:	inc    ebp
  40e14c:	xor    BYTE PTR ds:0xf6dba5db,dl
  40e152:	enter  0x17a,0x99
  40e156:	jle    0x40e0f7
  40e158:	jne    0x40e168
  40e15a:	test   edi,esp
  40e15c:	inc    esi
  40e15d:	das    
  40e15e:	jmp    0x39b5ab13
  40e163:	sub    ch,BYTE PTR [edx+eax*1-0x7f]
  40e167:	das    
  40e168:	push   ecx
  40e169:	mov    ebx,0xfc14a96c
  40e16e:	and    DWORD PTR [edi+0x638dd77a],esp
  40e174:	retf   
  40e175:	inc    eax
  40e176:	mov    al,0xb0
  40e178:	xor    esp,DWORD PTR [ebx+0x5ad52528]
  40e17e:	loopne 0x40e1c1
  40e180:	lds    ebp,FWORD PTR [edi]
  40e182:	inc    esp
  40e183:	dec    ecx
  40e184:	shr    edx,1
  40e186:	int3   
  40e187:	jecxz  0x40e140
  40e189:	jnp    0x40e116
  40e18b:	aas    
  40e18c:	add    ebp,DWORD PTR [edx]
  40e18e:	pop    eax
  40e18f:	mov    bl,0x3a
  40e191:	pusha  
  40e192:	push   edi
  40e193:	retf   
  40e194:	mov    esp,ebx
  40e196:	mov    ds:0xab6f567d,eax
  40e19b:	cmp    ecx,ebp
  40e19d:	sub    DWORD PTR [edx],ebx
  40e19f:	inc    esp
  40e1a0:	mov    ebx,0xb9e8d29e
  40e1a5:	push   eax
  40e1a6:	mov    edx,0x1e7b5244
  40e1ab:	sbb    BYTE PTR [eax],bl
  40e1ad:	mov    ebx,0xa7134af1
  40e1b2:	jae    0x40e21d
  40e1b4:	lods   al,BYTE PTR ds:[esi]
  40e1b5:	fs jmp 0x6a39c213
  40e1bb:	mov    ch,0x47
  40e1bd:	mov    ch,0x36
  40e1bf:	sub    al,0xbc
  40e1c1:	je     0x40e19f
  40e1c3:	dec    esp
  40e1c4:	mov    esi,0x927259e2
  40e1c9:	mov    al,0x48
  40e1cb:	fcomp  QWORD PTR [ebx+0x73]
  40e1ce:	into   
  40e1cf:	jecxz  0x40e1c2
  40e1d1:	xor    eax,0xa85ac904
  40e1d6:	loop   0x40e18d
  40e1d8:	cdq    
  40e1d9:	fdivr  DWORD PTR [eax-0x7fa5cdd5]
  40e1df:	adc    cl,ch
  40e1e1:	add    al,0x31
  40e1e3:	mov    al,cl
  40e1e5:	jmp    0xb7f3:0xceb6425f
  40e1ec:	sub    dh,BYTE PTR [esi+0x1f]
  40e1ef:	pusha  
  40e1f0:	shl    BYTE PTR [edx],1
  40e1f2:	mov    ebp,?
  40e1f4:	icebp  
  40e1f5:	call   0x436:0x50965251
  40e1fc:	or     ecx,DWORD PTR [esi+0x1bbe6cfb]
  40e202:	push   eax
  40e203:	jmp    0x729c:0x4c08d98f
  40e20a:	add    si,di
  40e20d:	pop    ss
  40e20e:	add    eax,0xa5542f6b
  40e213:	inc    edx
  40e214:	clc    
  40e215:	and    BYTE PTR ds:0x24ffeb07,0x31
  40e21c:	xchg   BYTE PTR [edx+0x577daa6],bl
  40e222:	retf   0x807c
  40e225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e226:	push   esi
  40e227:	sbb    DWORD PTR [esi+0x57],ebx
  40e22a:	xchg   ecx,eax
  40e22b:	jae    0x40e239
  40e22d:	lahf   
  40e22e:	loopne 0x40e1f7
  40e230:	adc    BYTE PTR [eax],cl
  40e232:	mov    al,0x2d
  40e234:	dec    BYTE PTR [ebp+0x3d]
  40e237:	adc    eax,0x5c3b25b
  40e23c:	cld    
  40e23d:	and    al,0x36
  40e23f:	pop    es
  40e240:	push   es
  40e241:	(bad)  
  40e243:	mov    eax,0x650c0574
  40e248:	outs   dx,DWORD PTR ds:[esi]
  40e249:	cmp    ecx,DWORD PTR [ebx+0x7d]
  40e24c:	lods   eax,DWORD PTR ds:[esi]
  40e24d:	popa   
  40e24e:	mov    bh,cl
  40e250:	(bad)  
  40e251:	out    dx,al
  40e252:	pop    ss
  40e253:	les    ebx,FWORD PTR [edi+ebp*4]
  40e256:	push   ebx
  40e257:	popf   
  40e258:	dec    esi
  40e259:	dec    esp
  40e25a:	pop    edx
  40e25b:	popa   
  40e25c:	mov    cl,0xff
  40e25e:	mov    al,ds:0x19b9ae51
  40e263:	add    al,ch
  40e265:	mov    ch,al
  40e267:	add    dh,dh
  40e269:	mov    esp,edx
  40e26b:	sbb    BYTE PTR [esi-0x5f],ah
  40e26e:	push   cs
  40e26f:	ins    BYTE PTR es:[edi],dx
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	pop    ecx
  40e272:	push   ds
  40e273:	das    
  40e274:	pop    edi
  40e275:	mov    bh,0xc9
  40e277:	push   edx
  40e278:	addr16 hlt 
  40e27a:	in     eax,dx
  40e27b:	sub    edi,DWORD PTR [edx-0xc]
  40e27e:	(bad)  
  40e27f:	push   ecx
  40e280:	push   ebx
  40e281:	fistp  QWORD PTR ds:0x8df6ed4e
  40e287:	call   0x6d12:0x4b59d95a
  40e28e:	fstp   TBYTE PTR [ebx-0x4e]
  40e291:	ins    BYTE PTR es:[edi],dx
  40e292:	js     0x40e2ab
  40e294:	lods   eax,DWORD PTR ds:[esi]
  40e295:	and    DWORD PTR [ebx+0x68b8a722],esi
  40e29b:	xchg   esi,eax
  40e29c:	mov    dh,0xf3
  40e29e:	outs   dx,DWORD PTR ds:[esi]
  40e29f:	pushf  
  40e2a0:	retf   0xa867
  40e2a3:	addr16 test al,0xec
  40e2a6:	cmp    ebx,DWORD PTR [edx+ebp*4+0x4a]
  40e2aa:	retf   0xe150
  40e2ad:	ret    0x4a17
  40e2b0:	into   
  40e2b1:	mov    cl,0xf6
  40e2b3:	sbb    eax,0x19b1741a
  40e2b8:	mov    esi,esp
  40e2ba:	rol    BYTE PTR [ebp-0x25aba0fb],1
  40e2c0:	xor    DWORD PTR [esi],edx
  40e2c2:	xor    edx,ebx
  40e2c4:	mov    edi,0x701e22f1
  40e2c9:	sbb    eax,0x459da97b
  40e2ce:	mov    ebp,0x7341ce16
  40e2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2d4:	out    dx,ax
  40e2d6:	push   esp
  40e2d7:	cdq    
  40e2d8:	not    bh
  40e2da:	out    dx,al
  40e2db:	cld    
  40e2dc:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40e2de:	aas    
  40e2df:	inc    ebx
  40e2e0:	jmp    0x2ada707c
  40e2e5:	mov    al,ds:0x2edbad1f
  40e2ea:	xchg   esi,eax
  40e2eb:	in     eax,dx
  40e2ec:	sub    eax,0xcdac428f
  40e2f1:	(bad)  
  40e2f3:	scas   eax,DWORD PTR es:[edi]
  40e2f4:	ret    
  40e2f5:	push   ds
  40e2f6:	push   ebp
  40e2f7:	sbb    al,0xf0
  40e2f9:	cdq    
  40e2fa:	add    BYTE PTR [edi+0x5484901a],0x92
  40e301:	vpsubusw ymm4,ymm0,ymm0
  40e305:	adc    eax,0xb091a30c
  40e30a:	sub    eax,0xaace324f
  40e30f:	jle    0x40e2ad
  40e311:	fld    QWORD PTR [esi+ebp*1]
  40e314:	mov    eax,0xba5bdbcc
  40e319:	xor    DWORD PTR [edi],ebx
  40e31b:	add    al,0x42
  40e31d:	std    
  40e31e:	inc    esp
  40e31f:	sbb    DWORD PTR [ebp+edi*4+0x6d7c90b5],edx
  40e326:	addr16 in al,dx
  40e328:	sub    ch,BYTE PTR [edx]
  40e32a:	xor    edx,DWORD PTR [ebx]
  40e32c:	push   0x5e
  40e32e:	xchg   esi,eax
  40e32f:	xor    eax,0x57312de3
  40e334:	stc    
  40e335:	or     BYTE PTR [ecx-0x3ea73438],dl
  40e33b:	mov    bl,0x98
  40e33d:	out    dx,eax
  40e33e:	inc    ebx
  40e33f:	add    ebp,DWORD PTR [ebx]
  40e341:	imul   eax,DWORD PTR [ecx+0x10f4098a],0x3299ffce
  40e34b:	mov    dl,0xcd
  40e34d:	sub    eax,0x379e8a5d
  40e352:	xor    edx,eax
  40e354:	out    0xb,al
  40e356:	mov    dl,0xd3
  40e358:	aas    
  40e359:	jecxz  0x40e39a
  40e35b:	add    eax,0x866238a1
  40e360:	rcr    edx,0xad
  40e363:	loopne 0x40e363
  40e365:	add    eax,0xb70f1981
  40e36a:	pop    edx
  40e36b:	ds push esp
  40e36d:	and    al,0x31
  40e36f:	xchg   ebp,eax
  40e370:	icebp  
  40e371:	xor    cl,BYTE PTR [ebp+0x65e384c2]
  40e377:	gs test eax,0xc4cdfc22
  40e37d:	push   esi
  40e37e:	outs   dx,BYTE PTR ds:[esi]
  40e37f:	mov    ch,0xda
  40e381:	aas    
  40e382:	test   eax,0xbf8d183
  40e387:	sbb    edx,DWORD PTR [esi-0x31b119f9]
  40e38d:	jns    0x40e37e
  40e38f:	jecxz  0x40e3f3
  40e391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e392:	mov    ah,0x29
  40e394:	pslld  mm6,QWORD PTR [esi+0x2870ad68]
  40e39b:	xor    ecx,esp
  40e39d:	out    dx,al
  40e39e:	jg     0x40e3ff
  40e3a0:	jle    0x40e363
  40e3a2:	test   al,0xf0
  40e3a4:	pop    ebx
  40e3a5:	mov    esp,0xf2464068
  40e3aa:	(bad)  
  40e3ab:	xor    DWORD PTR [edx-0x5bace718],edi
  40e3b1:	rcr    BYTE PTR [esi],cl
  40e3b3:	adc    esi,DWORD PTR [ecx]
  40e3b5:	xchg   edi,edi
  40e3b7:	mov    DWORD PTR [eax],esp
  40e3b9:	adc    DWORD PTR [eax],esi
  40e3bb:	jp     0x40e35f
  40e3bd:	loopne 0x40e345
  40e3bf:	cmp    ecx,edx
  40e3c1:	shl    BYTE PTR [edi+0x61],1
  40e3c4:	adc    DWORD PTR [edx],ecx
  40e3c6:	(bad)  [eax]
  40e3c8:	jne    0x40e43f
  40e3ca:	loope  0x40e41d
  40e3cc:	add    cl,BYTE PTR gs:[edx]
  40e3cf:	xchg   ebp,eax
  40e3d0:	jo     0x40e40c
  40e3d2:	or     eax,0x967fc13
  40e3d7:	mov    ah,0xee
  40e3d9:	xchg   ebp,eax
  40e3da:	into   
  40e3db:	and    BYTE PTR [ebp-0x9b7c95],dl
  40e3e1:	lds    esi,FWORD PTR [edx]
  40e3e3:	sub    eax,0xde3abdb2
  40e3e8:	sub    esi,DWORD PTR [edx]
  40e3ea:	jle    0x40e413
  40e3ec:	push   0xa
  40e3ee:	xchg   ebp,eax
  40e3ef:	inc    ebx
  40e3f0:	push   edx
  40e3f1:	jecxz  0x40e435
  40e3f3:	lods   eax,DWORD PTR ds:[esi]
  40e3f4:	add    DWORD PTR [ecx-0x57],ebx
  40e3f7:	lahf   
  40e3f8:	es adc eax,0x7af0d921
  40e3fe:	ret    
  40e3ff:	ficom  DWORD PTR [ecx+0x3dee960d]
  40e405:	data16 sti 
  40e407:	mov    eax,0x7497cdee
  40e40c:	inc    edx
  40e40d:	add    eax,0xd5088ad4
  40e412:	ins    DWORD PTR es:[edi],dx
  40e413:	iret   
  40e414:	dec    esp
  40e415:	cmp    esp,DWORD PTR [edx]
  40e417:	or     eax,0x1e0dd343
  40e41c:	test   eax,0x7eaee653
  40e421:	pop    ecx
  40e422:	sahf   
  40e423:	fmul   DWORD PTR [esi-0x6a]
  40e426:	or     DWORD PTR [edi+0x33ed8299],esp
  40e42c:	out    dx,eax
  40e42d:	cdq    
  40e42e:	jl     0x40e3ea
  40e430:	dec    esp
  40e431:	or     edx,DWORD PTR [ebx+0x6fa386bc]
  40e437:	mov    ds:0xa311b24,eax
  40e43c:	add    al,0x2b
  40e43e:	stos   DWORD PTR es:[edi],eax
  40e43f:	inc    ebp
  40e440:	adc    ah,al
  40e442:	jmp    0x40e3da
  40e444:	cmp    al,0xc6
  40e446:	retf   0x5a12
  40e449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e44a:	icebp  
  40e44b:	test   cl,ah
  40e44d:	in     al,dx
  40e44e:	pop    ebp
  40e44f:	sub    DWORD PTR [edx+0x21],0x26
  40e453:	jb     0x40e411
  40e455:	je     0x40e491
  40e457:	ja     0x40e467
  40e459:	ins    BYTE PTR es:[edi],dx
  40e45a:	or     bh,ch
  40e45c:	xchg   esp,eax
  40e45d:	and    DWORD PTR [ebx],ecx
  40e45f:	jg     0x40e470
  40e461:	mov    DWORD PTR [edx+0x5a],0xd600fa42
  40e468:	xchg   edi,eax
  40e469:	ss push esi
  40e46b:	mov    edx,ebp
  40e46d:	cli    
  40e46e:	aad    0xbd
  40e470:	cmp    al,al
  40e472:	and    bh,BYTE PTR [edx+0x754ee8ed]
  40e478:	(bad)  
  40e479:	mov    edx,0x35338856
  40e47e:	sub    dl,bh
  40e480:	pop    edi
  40e481:	enter  0xd0bf,0x5b
  40e485:	xchg   ecx,eax
  40e486:	push   eax
  40e487:	out    0x6e,al
  40e489:	ja     0x40e502
  40e48b:	retf   0xea43
  40e48e:	aam    0xd5
  40e490:	stc    
  40e491:	inc    ebp
  40e492:	imul   esi,esi,0x26250837
  40e498:	or     eax,edi
  40e49a:	jno    0x40e4a0
  40e49c:	stos   DWORD PTR es:[edi],eax
  40e49d:	xor    BYTE PTR [eax-0x2c],bh
  40e4a0:	retf   
  40e4a1:	into   
  40e4a2:	inc    edi
  40e4a3:	and    esi,edi
  40e4a5:	test   al,0xf2
  40e4a7:	push   DWORD PTR [esi-0xf]
  40e4aa:	sbb    DWORD PTR [edx],0x7fd1d1cd
  40e4b0:	sbb    al,0x66
  40e4b2:	imul   esi,DWORD PTR [esi-0x72],0x79fe27a1
  40e4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4ba:	and    eax,0x55c78127
  40e4bf:	or     eax,0x80c19e12
  40e4c4:	scas   al,BYTE PTR es:[edi]
  40e4c5:	iret   
  40e4c6:	xor    dl,0xdc
  40e4c9:	cs push edx
  40e4cb:	jecxz  0x40e520
  40e4cd:	push   0xf14c5f55
  40e4d2:	(bad)  
  40e4d4:	rol    BYTE PTR gs:[ebx],cl
  40e4d7:	stc    
  40e4d8:	mov    esp,0x2a7c8f42
  40e4dd:	pop    ds
  40e4de:	or     al,0x87
  40e4e0:	sbb    DWORD PTR [esp+eax*4-0x705f5d6a],edx
  40e4e7:	stc    
  40e4e8:	cwde   
  40e4e9:	repnz into 
  40e4eb:	sub    al,0x88
  40e4ed:	mov    eax,0x5ab57e85
  40e4f2:	cwde   
  40e4f3:	push   0xc
  40e4f5:	loope  0x40e4a7
  40e4f7:	out    0xcf,eax
  40e4f9:	mov    al,ds:0xb4c1dd37
  40e4fe:	adc    edi,DWORD PTR [ebx+0x6ff3a901]
  40e504:	pop    esi
  40e505:	push   cs
  40e506:	cli    
  40e507:	ss sti 
  40e509:	and    eax,0xb04716fa
  40e50e:	dec    eax
  40e50f:	mov    bh,0xf7
  40e511:	mov    ebx,0x31530ebc
  40e516:	int3   
  40e517:	arpl   WORD PTR [ecx-0xe6d6932],di
  40e51d:	mov    ebx,0x34b4e1aa
  40e522:	cmp    dl,ch
  40e524:	mov    ds:0x1765c550,al
  40e529:	mov    ah,0x47
  40e52b:	idiv   DWORD PTR [ecx+0x4]
  40e52e:	push   cs
  40e52f:	xchg   ebx,eax
  40e530:	jmp    0xd17c:0xfdef682e
  40e537:	pop    esi
  40e538:	pop    esp
  40e539:	dec    esp
  40e53a:	mov    ds:0x6dfb385c,eax
  40e53f:	mov    esi,0x824081a3
  40e544:	pop    esp
  40e545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e546:	int    0x9c
  40e548:	icebp  
  40e549:	push   ss
  40e54a:	inc    edi
  40e54b:	jmp    0x40e4de
  40e54d:	fwait
  40e54e:	dec    esi
  40e54f:	popa   
  40e550:	pop    ebx
  40e551:	xchg   BYTE PTR [edx-0xf],bh
  40e554:	cld    
  40e555:	and    dl,ah
  40e557:	mov    dh,0x1c
  40e559:	aad    0xc8
  40e55b:	mov    edx,0xded157dd
  40e560:	or     al,0x15
  40e562:	and    BYTE PTR [ebp+ebp*1-0x5f],cl
  40e566:	cmp    BYTE PTR [ebp-0x43],0xf1
  40e56a:	push   ds
  40e56b:	das    
  40e56c:	sub    ecx,DWORD PTR [eax]
  40e56e:	stos   BYTE PTR es:[edi],al
  40e56f:	sbb    eax,0x85db82b1
  40e574:	dec    edi
  40e575:	test   DWORD PTR [ebp+0x45],edx
  40e578:	adc    eax,0xd06aa8b1
  40e57d:	je     0x40e527
  40e57f:	shr    BYTE PTR [ecx-0x2eef95c6],cl
  40e585:	dec    esi
  40e586:	rcl    BYTE PTR es:[edx+eax*2+0x27],1
  40e58b:	sbb    bh,bh
  40e58d:	sub    DWORD PTR [edi+0x5d],0x77
  40e591:	jl     0x40e5a2
  40e593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e594:	push   ds
  40e595:	repz mov ds:0xd5875eef,al
  40e59b:	jns    0x40e598
  40e59d:	aad    0x29
  40e59f:	and    DWORD PTR [ebx+0x47],ecx
  40e5a2:	jmp    0x40e58e
  40e5a4:	jmp    0xdd37aa35
  40e5a9:	in     eax,0x1f
  40e5ab:	mov    DWORD PTR fs:[ebp+0x17],ebx
  40e5af:	cmp    DWORD PTR [ebx+0x1b7ed4e6],esp
  40e5b5:	or     edx,DWORD PTR [ecx]
  40e5b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5b8:	loope  0x40e541
  40e5ba:	aam    0x85
  40e5bc:	lods   eax,DWORD PTR ds:[esi]
  40e5bd:	sub    ax,0x16f
  40e5c1:	pop    ebx
  40e5c2:	push   eax
  40e5c3:	cmp    al,0xce
  40e5c5:	cmp    BYTE PTR [edi],ah
  40e5c7:	jl     0x40e634
  40e5c9:	fsub   DWORD PTR [ebx+ecx*2+0x11]
  40e5cd:	push   ecx
  40e5ce:	cwde   
  40e5cf:	cmp    ecx,DWORD PTR [ebx-0x416b3c7e]
  40e5d5:	xchg   ebp,eax
  40e5d6:	mov    eax,ds:0x553c2cd6
  40e5db:	fwait
  40e5dc:	and    bl,BYTE PTR [eax]
  40e5de:	out    0xfc,al
  40e5e0:	and    ebx,DWORD PTR [edi-0x55]
  40e5e3:	xor    eax,0x58476df8
  40e5e8:	jnp    0x40e62c
  40e5ea:	(bad)  
  40e5eb:	lea    eax,[edx+0x39c1d241]
  40e5f1:	pop    edi
  40e5f2:	mov    ds:0xce86c36c,eax
  40e5f7:	ret    0xb13f
  40e5fa:	rol    DWORD PTR [edi+0x3f],0x67
  40e5fe:	mov    ah,0x49
  40e600:	scas   eax,DWORD PTR es:[edi]
  40e601:	(bad)  
  40e602:	fwait
  40e603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e604:	dec    edi
  40e605:	or     eax,0x7c255ea8
  40e60a:	dec    edi
  40e60b:	inc    ecx
  40e60c:	fmul   QWORD PTR [esi-0x36262f90]
  40e612:	dec    eax
  40e613:	test   BYTE PTR [edx-0x14534933],0xd4
  40e61a:	add    DWORD PTR [ecx],esi
  40e61c:	hlt    
  40e61d:	jge    0x40e60d
  40e61f:	cmp    DWORD PTR [ebp+0x1a4aa553],edx
  40e625:	dec    edi
  40e626:	lahf   
  40e627:	ds out 0x81,eax
  40e62a:	ins    DWORD PTR es:[edi],dx
  40e62b:	test   cl,0xe0
  40e62e:	imul   ecx,DWORD PTR [ecx+0x18],0xffffffe4
  40e632:	xlat   BYTE PTR ds:[ebx]
  40e633:	mov    esp,0x9bdb14e2
  40e638:	stos   BYTE PTR es:[edi],al
  40e639:	hlt    
  40e63a:	ret    
  40e63b:	(bad)  
  40e63c:	idiv   cl
  40e63e:	push   es
  40e63f:	sub    ebp,DWORD PTR [ecx+0x7f5ecf05]
  40e645:	sbb    al,0x9a
  40e647:	jne    0x40e686
  40e649:	fwait
  40e64a:	xchg   bl,ch
  40e64c:	xchg   edx,eax
  40e64d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e64e:	cmp    al,0xad
  40e650:	push   ecx
  40e651:	or     BYTE PTR [edi-0x6d11b830],bh
  40e657:	jbe    0x40e6d0
  40e659:	jno    0x40e6b2
  40e65b:	adc    esp,DWORD PTR [edx+ecx*8-0x67]
  40e65f:	ins    DWORD PTR es:[edi],dx
  40e660:	int    0x62
  40e662:	and    dl,BYTE PTR ds:[edx+edx*1+0x1c]
  40e667:	xor    edx,ebp
  40e669:	jge    0x40e6d1
  40e66b:	sub    eax,0x4ed51e93
  40e670:	int    0x8f
  40e672:	fs ss xor eax,0x1b55cdd8
  40e679:	mov    bl,0xa5
  40e67b:	hlt    
  40e67c:	jbe    0x40e67e
  40e67e:	add    cl,BYTE PTR [ecx+0x11f47d48]
  40e684:	dec    esi
  40e685:	inc    ebx
  40e686:	mov    edx,DWORD PTR [ebx+0x28a61140]
  40e68c:	daa    
  40e68d:	call   0x2a0b29ca
  40e692:	mov    BYTE PTR [esi],dl
  40e694:	shl    DWORD PTR [ecx],cl
  40e696:	mov    WORD PTR [edi-0x5f0dc102],?
  40e69c:	sub    eax,0xe6ae4c77
  40e6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6a2:	push   ds
  40e6a3:	cmp    BYTE PTR [eax-0x154e2a0f],0x2b
  40e6aa:	inc    ebp
  40e6ab:	mov    ebx,0x132a18bf
  40e6b0:	mov    ah,0x2d
  40e6b2:	aaa    
  40e6b3:	adc    al,0x19
  40e6b5:	add    DWORD PTR [ecx-0x12039bf0],0xfffffffc
  40e6bc:	dec    edx
  40e6bd:	and    BYTE PTR [ebp+0x20],ch
  40e6c0:	aas    
  40e6c1:	add    eax,0x5575bd2c
  40e6c6:	sub    eax,ebp
  40e6c8:	or     DWORD PTR [edx+0x4eb24e47],esp
  40e6ce:	sbb    ebx,edx
  40e6d0:	xor    eax,0xf8599de2
  40e6d6:	mov    ds:0x7593650f,al
  40e6db:	adc    ebx,DWORD PTR [ebx-0x50]
  40e6de:	jmp    0xf64adfd1
  40e6e3:	mov    bh,0x3b
  40e6e5:	inc    esp
  40e6e6:	fwait
  40e6e7:	shr    ch,0x68
  40e6ea:	pop    ebx
  40e6eb:	pop    esi
  40e6ec:	sti    
  40e6ed:	and    BYTE PTR [esi-0x6b6f88bb],ch
  40e6f3:	and    al,0xe9
  40e6f5:	lds    eax,FWORD PTR ss:[esi-0x2a4cac5b]
  40e6fc:	mov    WORD PTR [eax-0x36],cs
  40e6ff:	jp     0x40e779
  40e701:	mov    ch,0xb9
  40e703:	adc    DWORD PTR [esi+0xe],ebp
  40e706:	sar    DWORD PTR [edi-0x72d613f4],0x61
  40e70d:	mov    ebx,0xb3d3e3a3
  40e712:	inc    edx
  40e713:	out    0x3c,al
  40e715:	sar    BYTE PTR [eax+eiz*2+0x3cee3d56],1
  40e71c:	mov    ebx,0x79c50c54
  40e721:	jne    0x40e74e
  40e723:	fdivr  DWORD PTR [ecx+0x4f]
  40e726:	test   eax,0x9a60e4b4
  40e72b:	xchg   DWORD PTR [ebp+ecx*1+0x37e1179d],ebx
  40e732:	jge    0x40e7af
  40e734:	mov    eax,0x2c6652dd
  40e739:	ins    DWORD PTR es:[edi],dx
  40e73a:	repnz and bh,BYTE PTR [eax+0x41]
  40e73e:	or     al,0x25
  40e740:	call   0x835c24e6
  40e745:	pop    ebp
  40e746:	mov    edi,0x832aea36
  40e74b:	shl    BYTE PTR [esi-0x7617b0af],cl
  40e751:	sar    BYTE PTR [edx+edx*4],cl
  40e754:	push   ecx
  40e755:	icebp  
  40e756:	dec    eax
  40e757:	les    edx,FWORD PTR [eax+eax*1-0xb]
  40e75b:	pop    ebp
  40e75c:	in     eax,0x67
  40e75e:	shl    BYTE PTR [eax],0xab
  40e761:	ss stos BYTE PTR es:[edi],al
  40e763:	dec    esi
  40e764:	mov    bh,0x70
  40e766:	and    edi,DWORD PTR [ebx-0x728d1f2f]
  40e76c:	mov    cl,0x9c
  40e76e:	mov    ebx,0x3e5f5de4
  40e773:	gs aas 
  40e775:	js     0x40e77e
  40e777:	adc    eax,0xd52e3b39
  40e77c:	nop
  40e77d:	fstp   DWORD PTR [esi+0x7a8c78f3]
  40e783:	push   ds
  40e784:	and    DWORD PTR [ebx],eax
  40e786:	pop    ebp
  40e787:	jmp    0x40e772
  40e789:	pushf  
  40e78a:	jo     0x40e75e
  40e78c:	or     edi,ebx
  40e78e:	sub    ecx,esp
  40e790:	and    ecx,DWORD PTR [ebx-0x1e69f18a]
  40e796:	imul   edx,ebx,0x56
  40e799:	mov    dl,0x6d
  40e79b:	mov    DWORD PTR [eax-0x44],edi
  40e79e:	mov    bl,dh
  40e7a0:	pop    es
  40e7a1:	mov    al,ds:0x70460785
  40e7a6:	adc    al,0xe0
  40e7a8:	das    
  40e7a9:	shl    DWORD PTR [edx+0x40f3c2bd],cl
  40e7af:	ror    DWORD PTR [ebp+0x72],1
  40e7b2:	clc    
  40e7b3:	mov    bh,0x9a
  40e7b5:	and    al,0x14
  40e7b7:	in     al,0xa6
  40e7b9:	ds dec eax
  40e7bb:	into   
  40e7bc:	repz mov gs,WORD PTR [eax]
  40e7bf:	jg     0x40e746
  40e7c1:	sub    BYTE PTR [ecx+0x1b],ch
  40e7c4:	sub    DWORD PTR [ebx],ebp
  40e7c6:	pop    edx
  40e7c7:	out    0x76,eax
  40e7c9:	stos   DWORD PTR es:[edi],eax
  40e7ca:	fbld   TBYTE PTR [edx+0xd6b9a7]
  40e7d0:	dec    ecx
  40e7d1:	push   cs
  40e7d2:	sub    al,BYTE PTR [edx-0x3a7359f7]
  40e7d8:	or     cl,BYTE PTR [esi-0x34]
  40e7db:	shr    BYTE PTR [ebp+0x3a456dcd],cl
  40e7e1:	push   0xffffff9c
  40e7e3:	js     0x40e7e2
  40e7e5:	cwde   
  40e7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7e7:	mov    esp,0x37ed140a
  40e7ec:	cmp    DWORD PTR [edx+0x1226b2cc],ecx
  40e7f2:	sbb    BYTE PTR [edx-0x192c44b0],0x72
  40e7f9:	pop    ss
  40e7fa:	les    edx,FWORD PTR [edi-0x10118984]
  40e800:	data16 sbb dh,cl
  40e803:	sbb    eax,edx
  40e805:	and    eax,0xdb8aca53
  40e80a:	lds    ebp,FWORD PTR [ecx-0xd4e84bf]
  40e810:	sahf   
  40e811:	test   DWORD PTR [edx],0xccf10536
  40e817:	jns    0x40e858
  40e819:	inc    ebx
  40e81a:	ja     0x40e7d2
  40e81c:	sub    BYTE PTR [edi+0xf],bh
  40e81f:	cli    
  40e820:	and    DWORD PTR [eax+0x56],ecx
  40e823:	mov    al,ds:0x309ce8c3
  40e828:	jnp    0x40e858
  40e82a:	int3   
  40e82b:	(bad)
  40e82e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e82f:	mov    edi,0xed7ed880
  40e834:	mov    ecx,0x9a24ea74
  40e839:	loope  0x40e8a8
  40e83b:	nop
  40e83c:	in     eax,0xd5
  40e83e:	push   ebp
  40e83f:	push   ss
  40e840:	arpl   WORD PTR [eax+0x1d4865a3],sp
  40e846:	inc    ebp
  40e847:	ret    
  40e848:	test   eax,0x1364be67
  40e84d:	loope  0x40e8be
  40e84f:	pusha  
  40e850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e851:	fdivr  QWORD PTR [ebx+0x4]
  40e854:	idiv   DWORD PTR [ebx]
  40e856:	icebp  
  40e857:	jmp    0x40e86b
  40e859:	jne    0x40e8c6
  40e85b:	shl    DWORD PTR [edi+0x71],cl
  40e85e:	xor    al,0x85
  40e860:	(bad)  
  40e861:	(bad)  
  40e862:	mov    edi,0x3d70dbe
  40e867:	or     al,0x37
  40e869:	xor    esi,DWORD PTR [edx+0x27e1461a]
  40e86f:	adc    ebx,DWORD PTR ds:0x857462ad
  40e875:	inc    ecx
  40e876:	xchg   ecx,eax
  40e877:	push   ebp
  40e878:	loop   0x40e8ca
  40e87a:	arpl   dx,ax
  40e87c:	les    edx,FWORD PTR [ebx+0x7840ec13]
  40e882:	mov    ecx,DWORD PTR [edx+0x11]
  40e885:	jmp    0x40e8d2
  40e887:	push   es
  40e888:	sub    dh,0xea
  40e88b:	sahf   
  40e88c:	jmp    0x14716974
  40e891:	fdivr  st,st(7)
  40e893:	adc    al,0x59
  40e895:	mov    al,0xae
  40e897:	cmp    DWORD PTR [esp+ecx*1-0x11c3f8f9],esp
  40e89e:	adc    BYTE PTR ds:0xbb9cf88f,dh
  40e8a4:	jmp    0x1bea:0x87872fdb
  40e8ab:	inc    esp
  40e8ac:	mov    esp,0xd85589e
  40e8b1:	popf   
  40e8b2:	mov    al,0x2e
  40e8b4:	jp     0x40e8c8
  40e8b6:	sbb    al,BYTE PTR [ebx]
  40e8b8:	in     eax,0x76
  40e8ba:	(bad)  
  40e8bb:	cmp    eax,0x42e96863
  40e8c0:	push   ss
  40e8c1:	or     eax,0xc4b443f0
  40e8c6:	push   0xf578ab72
  40e8cb:	and    al,0x9c
  40e8cd:	lods   al,BYTE PTR ds:[esi]
  40e8ce:	div    DWORD PTR [esi]
  40e8d0:	dec    ebp
  40e8d1:	iret   
  40e8d2:	dec    esp
  40e8d3:	(bad)  
  40e8d4:	(bad)  
  40e8d5:	stc    
  40e8d6:	mov    ds:0x9817d0e4,eax
  40e8db:	popa   
  40e8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8dd:	test   al,0xa5
  40e8df:	adc    al,0x58
  40e8e1:	mov    ecx,0x8cf5bd41
  40e8e6:	add    eax,0x9ecb8b95
  40e8eb:	adc    al,0xcc
  40e8ed:	push   ebx
  40e8ee:	std    
  40e8ef:	dec    eax
  40e8f0:	dec    ebx
  40e8f1:	mov    al,0xea
  40e8f3:	inc    edx
  40e8f4:	or     eax,DWORD PTR [edx-0x4b]
  40e8f7:	jmp    0x40e932
  40e8f9:	mov    esi,0xcfd5c7c6
  40e8fe:	sahf   
  40e8ff:	popf   
  40e900:	sar    cl,1
  40e902:	xchg   edi,eax
  40e903:	(bad)  
  40e904:	iret   
  40e905:	sub    al,0x53
  40e907:	inc    eax
  40e908:	arpl   ax,si
  40e90a:	jb     0x40e932
  40e90c:	leave  
  40e90d:	dec    esi
  40e90e:	sahf   
  40e90f:	and    edx,DWORD PTR [eax+edi*1]
  40e912:	aas    
  40e913:	arpl   ax,ax
  40e915:	leave  
  40e916:	stc    
  40e917:	add    DWORD PTR [eax+0x6e],ebp
  40e91a:	dec    ebx
  40e91b:	das    
  40e91c:	pop    ss
  40e91d:	adc    cl,BYTE PTR [ecx]
  40e91f:	dec    BYTE PTR [edi-0x71]
  40e922:	cli    
  40e923:	add    esi,esi
  40e925:	xchg   edx,eax
  40e926:	stos   DWORD PTR es:[edi],eax
  40e927:	out    0xc,eax
  40e929:	ins    BYTE PTR es:[edi],dx
  40e92a:	int3   
  40e92b:	push   ecx
  40e92c:	xchg   edx,eax
  40e92d:	xchg   ecx,eax
  40e92e:	or     esp,edi
  40e930:	popa   
  40e931:	pop    edx
  40e932:	push   ebp
  40e933:	rcl    BYTE PTR [edi],cl
  40e935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e936:	icebp  
  40e937:	push   ss
  40e938:	pop    eax
  40e939:	in     al,dx
  40e93a:	add    dl,BYTE PTR [edi+0x12]
  40e93d:	mov    fs,WORD PTR [ebx]
  40e93f:	sar    DWORD PTR [edx-0x6628a0a3],1
  40e945:	rol    DWORD PTR [edx+eax*4],0x52
  40e949:	mov    gs,WORD PTR [esi]
  40e94b:	sub    edi,eax
  40e94d:	jp     0x40e907
  40e94f:	dec    ebx
  40e950:	dec    ebx
  40e951:	xlat   BYTE PTR ds:[ebx]
  40e952:	cs ret 
  40e954:	ins    DWORD PTR es:[edi],dx
  40e955:	mov    ah,0xd
  40e957:	pop    ebx
  40e958:	pop    esp
  40e959:	test   al,0xa9
  40e95b:	push   eax
  40e95c:	test   DWORD PTR [edi+0x1f],edi
  40e95f:	jge    0x40e93f
  40e961:	pushf  
  40e962:	dec    DWORD PTR [ecx-0x499082e7]
  40e968:	nop
  40e969:	outs   dx,DWORD PTR ds:[esi]
  40e96a:	sub    ebp,DWORD PTR [ecx-0x48]
  40e96d:	out    dx,eax
  40e96e:	xor    al,0x5d
  40e970:	je     0x40e992
  40e972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e973:	iret   
  40e974:	popf   
  40e975:	jge    0x40e90f
  40e977:	sbb    ecx,0x5c93ea4d
  40e97d:	sbb    BYTE PTR ds:0x1d057f61,al
  40e983:	xchg   edi,eax
  40e984:	in     eax,dx
  40e985:	lahf   
  40e986:	or     esi,esi
  40e988:	data16 aas 
  40e98a:	adc    al,0xd7
  40e98c:	fsub   QWORD PTR [eax-0x3f8d7fe9]
  40e992:	xchg   DWORD PTR [edi],edi
  40e994:	pop    ecx
  40e995:	sbb    bl,BYTE PTR [edi]
  40e997:	inc    ebp
  40e998:	ins    DWORD PTR es:[edi],dx
  40e999:	xchg   edx,eax
  40e99a:	adc    ch,dh
  40e99c:	clc    
  40e99d:	frstor [ebp-0x5df80f16]
  40e9a3:	mov    dl,bh
  40e9a5:	mov    al,0x6c
  40e9a7:	push   ss
  40e9a8:	and    ebx,DWORD PTR [edx]
  40e9aa:	push   edi
  40e9ab:	lods   eax,DWORD PTR ds:[esi]
  40e9ac:	or     ch,BYTE PTR [ecx+0x6b15a12b]
  40e9b2:	cmp    BYTE PTR [ebx-0x55376ab7],al
  40e9b8:	jbe    0x40e93b
  40e9ba:	sar    BYTE PTR [esi+0x3d],cl
  40e9bd:	xchg   ecx,eax
  40e9be:	in     eax,0x72
  40e9c0:	push   edi
  40e9c1:	inc    ebp
  40e9c2:	cmp    DWORD PTR [ebx-0x4a],ebp
  40e9c5:	cdq    
  40e9c6:	ins    DWORD PTR es:[edi],dx
  40e9c7:	ret    
  40e9c8:	std    
  40e9c9:	xchg   edx,eax
  40e9ca:	cmp    esp,eax
  40e9cc:	push   edx
  40e9cd:	in     eax,dx
  40e9ce:	jg     0x40ea49
  40e9d0:	test   ebp,ebp
  40e9d2:	jg     0x40e9b5
  40e9d4:	mov    eax,ds:0x82af5904
  40e9d9:	pop    esi
  40e9da:	and    ebx,ebx
  40e9dc:	aam    0xc8
  40e9de:	jle    0x40e960
  40e9e0:	into   
  40e9e1:	pop    esp
  40e9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9e3:	ins    DWORD PTR es:[edi],dx
  40e9e4:	hlt    
  40e9e5:	pop    eax
  40e9e6:	nop
  40e9e7:	push   cs
  40e9e8:	out    0xac,al
  40e9ea:	ret    0xd884
  40e9ed:	sub    al,0x8f
  40e9ef:	mov    edi,0x7328397
  40e9f4:	icebp  
  40e9f5:	pop    ebp
  40e9f6:	jmp    0x40e995
  40e9f8:	lds    ecx,FWORD PTR [edi-0xed4cb9]
  40e9fe:	push   esi
  40e9ff:	sub    edi,DWORD PTR [ebp-0x236a2816]
  40ea05:	out    dx,eax
  40ea06:	fdiv   DWORD PTR ds:0x4043fb68
  40ea0c:	lock mov ah,0x83
  40ea0f:	lods   al,BYTE PTR ds:[esi]
  40ea10:	jle    0x40e9a0
  40ea12:	and    eax,0xb7e51f8b
  40ea17:	inc    esi
  40ea18:	push   ds
  40ea19:	push   ss
  40ea1a:	lods   eax,DWORD PTR ds:[esi]
  40ea1b:	leave  
  40ea1c:	mov    al,ds:0x23ccde72
  40ea21:	jg     0x40e9a4
  40ea23:	loop   0x40ea94
  40ea25:	clc    
  40ea26:	jnp    0x40e9dd
  40ea28:	jle    0x40e9ac
  40ea2a:	(bad)  
  40ea2b:	cmp    al,0x22
  40ea2d:	sub    eax,0x31aeb080
  40ea32:	ret    0x769a
  40ea35:	sbb    ebp,DWORD PTR [esi-0x219c6838]
  40ea3b:	jns    0x40ea8a
  40ea3d:	adc    ecx,DWORD PTR [ebp+0x5d]
  40ea40:	push   cs
  40ea41:	retf   
  40ea42:	xlat   BYTE PTR ds:[ebx]
  40ea43:	pushf  
  40ea44:	hlt    
  40ea45:	push   edi
  40ea46:	aad    0x77
  40ea48:	rcr    BYTE PTR [ebx+0x6d],cl
  40ea4b:	loopne 0x40eaa8
  40ea4d:	imul   edx,DWORD PTR [edx],0xf
  40ea50:	(bad)  
  40ea51:	ja     0x40ea7b
  40ea53:	cld    
  40ea54:	mov    al,0x0
  40ea56:	jmp    0x52a0:0x91fd2028
  40ea5d:	xchg   DWORD PTR [edi],eax
  40ea5f:	and    DWORD PTR [edi+0x37],0xffffffd4
  40ea63:	hlt    
  40ea64:	and    ebp,DWORD PTR [esi]
  40ea66:	or     eax,0x6881b68
  40ea6b:	push   es
  40ea6c:	dec    esi
  40ea6d:	xor    DWORD PTR [ebp-0x59ff0648],0xffffffe2
  40ea74:	imul   esp,edx,0xd8dcb726
  40ea7a:	lods   al,BYTE PTR ds:[esi]
  40ea7b:	jl     0x40ea7f
  40ea7d:	xchg   esp,eax
  40ea7e:	dec    ebx
  40ea7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea80:	sbb    eax,0x10fc8244
  40ea85:	popf   
  40ea86:	js     0x40ea7e
  40ea88:	mov    ecx,0x556d7654
  40ea8d:	dec    ebx
  40ea8e:	cdq    
  40ea8f:	pop    edi
  40ea90:	mov    bl,0x52
  40ea92:	cld    
  40ea93:	push   DWORD PTR [eax+ebp*2-0x4c281af]
  40ea9a:	xor    al,0xfb
  40ea9c:	shl    bh,0xb0
  40ea9f:	cli    
  40eaa0:	add    bl,bh
  40eaa2:	push   DWORD PTR [eax]
  40eaa4:	xor    cl,dl
  40eaa6:	fs out 0x34,eax
  40eaa9:	retf   
  40eaaa:	cmp    al,0xdb
  40eaac:	xchg   ah,al
  40eaae:	sub    eax,0x96d14d82
  40eab3:	pop    ss
  40eab4:	and    dl,BYTE PTR [ecx-0x1c]
  40eab7:	inc    ecx
  40eab8:	sbb    ecx,0x5e
  40eabb:	pop    edi
  40eabc:	and    BYTE PTR [esi+0x4a70d54e],dl
  40eac2:	jb     0x40eaa5
  40eac4:	sbb    edx,DWORD PTR [edi+0x14]
  40eac7:	xor    BYTE PTR [ecx],al
  40eac9:	cmp    eax,0x244fb918
  40eace:	clc    
  40eacf:	add    eax,0xe4df4a97
  40ead4:	adc    edx,DWORD PTR [ebp+0x3a]
  40ead7:	fdiv   QWORD PTR [esp+edi*2-0x58]
  40eadb:	scas   eax,DWORD PTR es:[edi]
  40eadc:	pop    esi
  40eadd:	dec    edx
  40eade:	jne    0x40ead8
  40eae0:	ret    
  40eae1:	xchg   esp,eax
  40eae2:	(bad)  
  40eae3:	cld    
  40eae4:	mov    ebp,0x6b867ca9
  40eae9:	in     eax,0xf1
  40eaeb:	xchg   esp,eax
  40eaec:	or     eax,edi
  40eaee:	repz jns 0x40ea79
  40eaf1:	pushf  
  40eaf2:	in     al,0xd2
  40eaf4:	inc    edx
  40eaf5:	test   eax,0x992b1c58
  40eafa:	mov    ds:0x8355b8dd,al
  40eaff:	(bad)  
  40eb00:	push   esp
  40eb01:	inc    ebx
  40eb02:	dec    BYTE PTR [edi]
  40eb04:	xchg   esp,eax
  40eb05:	push   ebx
  40eb06:	inc    edi
  40eb07:	dec    edx
  40eb08:	sub    DWORD PTR [ecx],edi
  40eb0a:	mov    ebx,0xe746146e
  40eb0f:	sbb    eax,0xcd84a2e2
  40eb14:	mov    ebx,0xc053a4ce
  40eb19:	adc    eax,0x6a163674
  40eb1e:	push   esp
  40eb1f:	les    esp,FWORD PTR [esi-0x29]
  40eb22:	aad    0x50
  40eb24:	stc    
  40eb25:	in     eax,dx
  40eb26:	loopne 0x40eb4f
  40eb28:	ds js  0x40eb76
  40eb2b:	jbe    0x40eb59
  40eb2d:	dec    ebx
  40eb2e:	js     0x40eba1
  40eb30:	jmp    0x40eb53
  40eb32:	jno    0x40eaf5
  40eb34:	imul   ecx,DWORD PTR [edx+0x41],0xe9408f25
  40eb3b:	push   edx
  40eb3c:	push   edx
  40eb3d:	test   eax,0xecc9c643
  40eb42:	mov    bl,0x53
  40eb44:	push   ecx
  40eb45:	dec    ebp
  40eb46:	adc    eax,0xd3f97fab
  40eb4b:	lock ret 
  40eb4d:	dec    esp
  40eb4e:	lea    ebx,[eax+0x563965fd]
  40eb54:	add    DWORD PTR [ebp+0x638d71b3],edi
  40eb5a:	int    0xa
  40eb5c:	add    eax,0xbd4e57e9
  40eb61:	cdq    
  40eb62:	xor    ebp,DWORD PTR [ecx-0x4d]
  40eb65:	fcmovnbe st,st(6)
  40eb67:	xlat   BYTE PTR ds:[ebx]
  40eb68:	es dec eax
  40eb6a:	aam    0x64
  40eb6c:	shl    BYTE PTR [ecx+0x2e8f37e7],1
  40eb72:	outs   dx,DWORD PTR ds:[esi]
  40eb73:	cs push cs
  40eb75:	mov    ebp,0x57336a5f
  40eb7a:	inc    ebx
  40eb7b:	in     al,0x26
  40eb7d:	pop    esp
  40eb7e:	test   ebp,esp
  40eb80:	mov    ebp,0x71814656
  40eb85:	das    
  40eb86:	popa   
  40eb87:	jno    0x40eb2e
  40eb89:	in     eax,0xda
  40eb8b:	mov    BYTE PTR [edx],cl
  40eb8d:	sbb    edx,edi
  40eb8f:	xor    al,0x74
  40eb91:	mov    esp,0x8247684a
  40eb96:	xchg   ebx,eax
  40eb97:	sbb    ebp,esp
  40eb99:	cmp    ebp,DWORD PTR [esi-0x2c]
  40eb9c:	jmp    0xda535688
  40eba1:	xchg   edx,eax
  40eba3:	dec    ebp
  40eba4:	icebp  
  40eba5:	lds    esi,FWORD PTR [edx-0x5b19c722]
  40ebab:	and    eax,0x1b02111b
  40ebb0:	daa    
  40ebb1:	fild   DWORD PTR [edx+0x3f70c275]
  40ebb7:	shl    DWORD PTR [edx],cl
  40ebb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebba:	pop    eax
  40ebbb:	imul   edx,DWORD PTR [ebx-0x34],0xcc49f417
  40ebc2:	addr16 mov ds:0xc4d5,eax
  40ebc6:	mov    bl,0x5d
  40ebc8:	xchg   esp,eax
  40ebc9:	lds    edx,FWORD PTR [eax-0x47484e97]
  40ebcf:	sar    BYTE PTR [esp+ebp*8],0x59
  40ebd3:	mov    edx,0x430c083e
  40ebd8:	mov    ds:0x502512d,eax
  40ebdd:	xor    cl,BYTE PTR [edi+0x6e]
  40ebe0:	and    ebx,DWORD PTR [ebx-0x57]
  40ebe3:	dec    eax
  40ebe4:	daa    
  40ebe5:	mov    al,0xb8
  40ebe7:	push   cs
  40ebe8:	pop    ecx
  40ebe9:	pop    ecx
  40ebeb:	lea    ebp,[edi+ecx*2-0x5453ed5a]
  40ebf2:	push   edi
  40ebf3:	push   ebp
  40ebf4:	sti    
  40ebf5:	outs   dx,DWORD PTR ds:[esi]
  40ebf6:	mov    ds:0x53f4b310,al
  40ebfb:	ret    0x647e
  40ebfe:	xlat   BYTE PTR ds:[ebx]
  40ebff:	sub    al,0x9b
  40ec01:	sub    ebx,edx
  40ec03:	inc    edi
  40ec04:	jo     0x40ec28
  40ec06:	push   edi
  40ec07:	mov    BYTE PTR [eax-0xf],dh
  40ec0a:	mov    al,ds:0x47103397
  40ec0f:	or     cl,dh
  40ec11:	cmp    eax,0x720472cb
  40ec16:	xlat   BYTE PTR ds:[ebx]
  40ec17:	dec    esp
  40ec18:	out    dx,al
  40ec19:	pop    es
  40ec1a:	(bad)  
  40ec1b:	ins    DWORD PTR es:[edi],dx
  40ec1c:	das    
  40ec1d:	pop    ds
  40ec1e:	pop    edx
  40ec1f:	mov    dh,0x6c
  40ec21:	xor    ah,0x4f
  40ec24:	xor    bl,bh
  40ec26:	add    al,0x1f
  40ec28:	mov    dl,0xa
  40ec2a:	cmc    
  40ec2b:	pop    ebx
  40ec2c:	pushf  
  40ec2d:	push   ecx
  40ec2e:	pop    ebp
  40ec2f:	test   BYTE PTR [edi+0x5b942ce4],cl
  40ec35:	adc    ebx,DWORD PTR ds:0xa74c3752
  40ec3b:	imul   ebp,DWORD PTR [edx-0x67287cc8],0xffffff93
  40ec42:	(bad)  
  40ec43:	imul   ecx,DWORD PTR [eax-0x7d],0x60
  40ec47:	sti    
  40ec48:	mov    al,ds:0xb92fcab5
  40ec4d:	sbb    BYTE PTR [ecx],ah
  40ec4f:	xlat   BYTE PTR fs:[ebx]
  40ec51:	dec    edx
  40ec52:	jb     0x40ebe8
  40ec54:	pushf  
  40ec55:	xor    al,0x63
  40ec57:	in     al,0x52
  40ec59:	jle    0x40ec33
  40ec5b:	xor    esi,ecx
  40ec5d:	ret    0x5dbc
  40ec60:	sub    DWORD PTR [ecx],ebx
  40ec62:	outs   dx,BYTE PTR ds:[esi]
  40ec63:	mov    ?,WORD PTR [ebp+0x8]
  40ec66:	test   bh,bl
  40ec68:	inc    ebx
  40ec69:	dec    esp
  40ec6a:	xor    BYTE PTR [edx-0x34],bh
  40ec6d:	out    dx,eax
  40ec6e:	je     0x40ec93
  40ec70:	data16 jno 0x40ec78
  40ec73:	add    dh,ch
  40ec75:	dec    ebp
  40ec76:	push   ds
  40ec77:	imul   ebx,DWORD PTR [edx-0x7712393e],0x76
  40ec7e:	xchg   ecx,eax
  40ec7f:	inc    ecx
  40ec80:	bound  edi,QWORD PTR [ebp+0x37]
  40ec83:	jne    0x40ec95
  40ec85:	adc    ch,BYTE PTR [eax]
  40ec87:	push   0xffffffff
  40ec89:	xor    BYTE PTR [edx+0x4d],bh
  40ec8c:	xchg   esi,eax
  40ec8d:	fst    DWORD PTR [ebx+0x1bd6ac2b]
  40ec93:	xlat   BYTE PTR ds:[ebx]
  40ec94:	mov    ah,0x65
  40ec96:	rcl    BYTE PTR [eax+0x54],cl
  40ec99:	adc    al,0x7a
  40ec9b:	mov    ds:0x7116be54,al
  40eca0:	fisubr DWORD PTR [ebx+ebx*4+0x44c553d6]
  40eca7:	repz repz dec edi
  40ecaa:	and    al,0xde
  40ecac:	sub    al,0xc
  40ecae:	xchg   edx,eax
  40ecaf:	shl    al,1
  40ecb1:	push   ss
  40ecb2:	dec    ebx
  40ecb3:	sahf   
  40ecb4:	or     BYTE PTR [ebp+0x7a6bc86],dh
  40ecba:	sbb    DWORD PTR [eax],esp
  40ecbc:	test   DWORD PTR [ebx+0x16],ecx
  40ecbf:	adc    dh,BYTE PTR [ecx]
  40ecc1:	sbb    al,0xe2
  40ecc3:	push   ss
  40ecc4:	aad    0x32
  40ecc6:	call   0xa48b3bfc
  40eccb:	int    0x4f
  40eccd:	popa   
  40ecce:	rcr    DWORD PTR [edx],0x1f
  40ecd1:	cmp    ecx,0x1f
  40ecd4:	inc    ecx
  40ecd5:	dec    BYTE PTR [ecx-0x3fbf7a16]
  40ecdb:	or     al,0xbe
  40ecdd:	mov    ah,ah
  40ecdf:	jp     0x40ed4a
  40ece1:	cmp    eax,0x5b1ccd3b
  40ece6:	int3   
  40ece7:	push   es
  40ece8:	fidiv  WORD PTR [edx+0x514fbb21]
  40ecee:	adc    ch,BYTE PTR [ebp-0x13]
  40ecf1:	aas    
  40ecf2:	mov    ?,edx
  40ecf4:	xchg   ebp,eax
  40ecf5:	xor    ebp,edx
  40ecf7:	xchg   ebx,eax
  40ecf8:	es xchg esi,eax
  40ecfa:	jae    0x40ecaa
  40ecfc:	repz data16 sub dl,dl
  40ed00:	pop    ecx
  40ed01:	stc    
  40ed02:	repnz stc 
  40ed04:	mov    bl,0xd3
  40ed06:	or     ebp,DWORD PTR [ebp+0x2da98bef]
  40ed0c:	adc    DWORD PTR [edi+0x7a],ebp
  40ed0f:	inc    ebx
  40ed10:	stos   BYTE PTR es:[edi],al
  40ed11:	mov    eax,0x42cda789
  40ed16:	and    al,0xf0
  40ed18:	cmp    bl,bh
  40ed1a:	repz mov eax,ds:0xc3208074
  40ed20:	sub    eax,0x3dfe4d6b
  40ed25:	or     eax,0x6c350741
  40ed2a:	idiv   DWORD PTR [ebp+0x1f]
  40ed2d:	rol    BYTE PTR [edx-0xf808b3e],0x82
  40ed34:	cwde   
  40ed35:	adc    BYTE PTR [esi+0x3f],bl
  40ed38:	mov    esp,0x6034dcce
  40ed3d:	mov    ebp,0x540fc653
  40ed42:	ror    BYTE PTR [eax],cl
  40ed44:	gs pop ds
  40ed46:	or     al,BYTE PTR [edx]
  40ed48:	rol    DWORD PTR [edi+0x755893ee],0x83
  40ed4f:	test   BYTE PTR [ebx-0x7],bh
  40ed52:	in     al,dx
  40ed53:	lods   al,BYTE PTR ds:[esi]
  40ed54:	cmp    eax,0x2e8b0459
  40ed59:	xor    DWORD PTR [eax],ebx
  40ed5b:	sbb    ebx,DWORD PTR [eax+edx*1]
  40ed5e:	mov    dh,cl
  40ed60:	out    0x3f,eax
  40ed62:	xor    al,0xe8
  40ed64:	outs   dx,BYTE PTR ds:[esi]
  40ed65:	push   ss
  40ed66:	pop    edi
  40ed67:	jb     0x40ed0d
  40ed69:	loope  0x40eddd
  40ed6b:	das    
  40ed6c:	push   0x89110b3f
  40ed71:	push   0x36
  40ed73:	int    0xc1
  40ed75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed76:	retf   
  40ed77:	stc    
  40ed78:	test   DWORD PTR [edx-0x34],edi
  40ed7b:	ror    BYTE PTR [eax+0x4407ede1],cl
  40ed81:	xchg   esp,eax
  40ed82:	cmc    
  40ed83:	nop
  40ed84:	cld    
  40ed85:	into   
  40ed86:	inc    edx
  40ed87:	ss sahf 
  40ed89:	inc    ebx
  40ed8a:	mov    ds:0x5ab6f2f,al
  40ed8f:	aas    
  40ed90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed91:	call   0x5b22:0x1b4d3225
  40ed98:	pop    es
  40ed99:	sbb    DWORD PTR [edi-0x7cb2d5cf],edx
  40ed9f:	je     0x40ee03
  40eda1:	or     eax,0x3e1b28b0
  40eda6:	loope  0x40edbc
  40eda8:	sub    DWORD PTR [edi+ebx*1+0x79],0x7d
  40edad:	sub    edi,DWORD PTR [edx]
  40edaf:	js     0x40ed9c
  40edb1:	adc    al,0x6e
  40edb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edb4:	jmp    0x40edee
  40edb6:	mov    al,ds:0x31ee041f
  40edbb:	push   eax
  40edbc:	mov    dl,0xb2
  40edbe:	mov    ds:0x8db99d50,al
  40edc3:	pop    DWORD PTR [edi+0x1c]
  40edc6:	jmp    0x9fe19d73
  40edcb:	xor    eax,0x63942642
  40edd0:	lds    sp,DWORD PTR ds:0x3745b432
  40edd7:	call   0x4b8a441c
  40eddc:	push   0xf6cd391a
  40ede1:	xchg   esi,eax
  40ede2:	jo     0x40ee2b
  40ede4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ede5:	ss cmc 
  40ede7:	add    BYTE PTR [edx+0x49],ah
  40edea:	push   eax
  40edeb:	(bad)
  40edef:	mov    es,WORD PTR [edx-0x681cd306]
  40edf5:	inc    esp
  40edf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edf7:	stos   BYTE PTR es:[edi],al
  40edf8:	arpl   WORD PTR [ebx+0x35],si
  40edfb:	icebp  
  40edfc:	jg     0x40ee55
  40edfe:	ss and eax,0x2553084f
  40ee04:	xor    BYTE PTR [ebp-0x759fc4b0],cl
  40ee0a:	jl     0x40eda5
  40ee0c:	out    dx,eax
  40ee0d:	xchg   ebp,eax
  40ee0e:	mov    al,0xcf
  40ee10:	sub    DWORD PTR [edi+0x1015b260],ebp
  40ee16:	in     eax,dx
  40ee17:	repnz cli 
  40ee19:	and    DWORD PTR [ecx-0x2b],edi
  40ee1c:	sti    
  40ee1d:	add    edi,edx
  40ee1f:	stos   BYTE PTR es:[edi],al
  40ee20:	mov    ebx,0xc1697121
  40ee25:	xor    DWORD PTR [ebp-0xf],0x66c5b143
  40ee2c:	dec    edx
  40ee2d:	cmp    al,0x2c
  40ee2f:	mov    ebp,0x2484cb2c
  40ee34:	aaa    
  40ee35:	push   es
  40ee36:	jecxz  0x40edcc
  40ee38:	xchg   ebx,eax
  40ee39:	shl    BYTE PTR [ebx+0x12],cl
  40ee3c:	fwait
  40ee3d:	xchg   ebp,eax
  40ee3e:	repnz pop esi
  40ee40:	daa    
  40ee41:	dec    esi
  40ee42:	mov    ah,0xe5
  40ee44:	aad    0x32
  40ee46:	jo     0x40ee25
  40ee48:	sti    
  40ee49:	jl     0x40edd5
  40ee4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee4c:	add    BYTE PTR [edi-0x44],dl
  40ee4f:	and    ebp,0x548a0ff1
  40ee55:	pushf  
  40ee56:	mov    esp,0x98812c20
  40ee5b:	add    al,0xa4
  40ee5d:	sbb    dl,bl
  40ee5f:	(bad)  
  40ee60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee61:	icebp  
  40ee62:	lods   eax,DWORD PTR ds:[esi]
  40ee63:	not    DWORD PTR [ecx+0x45]
  40ee66:	cmp    BYTE PTR [edi+0x41c70ba5],ch
  40ee6c:	shr    DWORD PTR [edx-0x2c7d6798],cl
  40ee72:	pop    eax
  40ee73:	push   0x3e
  40ee75:	xor    ebp,eax
  40ee77:	push   0xc7bac263
  40ee7c:	add    eax,ebp
  40ee7e:	fdivr  QWORD PTR [esi]
  40ee80:	xchg   ebp,eax
  40ee81:	retf   0x545c
  40ee84:	rol    esi,1
  40ee86:	sbb    al,0x0
  40ee88:	xchg   BYTE PTR ds:0x936b70b0,ah
  40ee8e:	mov    eax,ds:0x143f4cac
  40ee93:	inc    esi
  40ee94:	lea    edi,[ebx+edx*8+0x0]
  40ee98:	inc    eax
  40ee99:	rol    DWORD PTR [edx+0xb07efb3],1
  40ee9f:	fwait
  40eea0:	(bad)  
  40eea1:	push   esi
  40eea2:	adc    DWORD PTR [bx+di],ebp
  40eea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eea6:	rcl    dh,1
  40eea8:	mov    dl,0x41
  40eeaa:	mov    fs,ecx
  40eeac:	or     eax,0x196dbffa
  40eeb1:	dec    esi
  40eeb2:	inc    edx
  40eeb3:	int3   
  40eeb4:	and    DWORD PTR [edx],esi
  40eeb6:	sub    al,0x8a
  40eeb8:	sub    eax,0x395748ba
  40eebd:	in     al,0x9f
  40eebf:	cmp    eax,0x3f7a955d
  40eec4:	mov    ds:0xebacde0c,al
  40eec9:	jns    0x40ef48
  40eecb:	dec    esp
  40eecc:	arpl   WORD PTR [edi-0x4f],bx
  40eecf:	not    cl
  40eed1:	jg     0x40eeb1
  40eed3:	push   0x14
  40eed5:	sub    edi,DWORD PTR [eax+0x7f]
  40eed8:	test   eax,0xa8c18c4b
  40eedd:	or     al,0x35
  40eedf:	into   
  40eee0:	cdq    
  40eee1:	adc    DWORD PTR [eax+0x4b],0xeac0767f
  40eee8:	sub    BYTE PTR [ebp-0x57584a86],cl
  40eeee:	sub    DWORD PTR [esi+0x27],0x85c87a72
  40eef5:	mov    al,0xaf
  40eef7:	lods   al,BYTE PTR ds:[esi]
  40eef8:	lods   eax,DWORD PTR ds:[esi]
  40eef9:	adc    DWORD PTR [ecx],esi
  40eefb:	jne    0x40eec5
  40eefd:	imul   ebp,DWORD PTR [ebx],0x6f6bfad8
  40ef03:	sub    al,0xb9
  40ef05:	fadd   QWORD PTR [esi+0x25]
  40ef08:	dec    edx
  40ef09:	mov    bh,0x34
  40ef0b:	adc    edx,DWORD PTR [ecx+0x137b2ef]
  40ef11:	xchg   ebp,eax
  40ef12:	imul   edi,DWORD PTR [ecx],0x4f504585
  40ef18:	int3   
  40ef19:	dec    esp
  40ef1a:	fwait
  40ef1b:	and    ah,dl
  40ef1d:	push   ebp
  40ef1e:	push   esp
  40ef1f:	xor    ebx,edi
  40ef21:	jns    0x40eeab
  40ef23:	add    al,0x10
  40ef25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef26:	fadd   st(1),st
  40ef28:	xor    BYTE PTR [eax-0x5e],al
  40ef2b:	sbb    esi,ecx
  40ef2d:	jg     0x40ef0c
  40ef2f:	shr    WORD PTR [esi-0x3d],cl
  40ef33:	pop    esp
  40ef34:	add    ah,BYTE PTR [ebp-0x2fe70510]
  40ef3a:	and    BYTE PTR [eax+edi*8],dl
  40ef3d:	sub    al,0xb6
  40ef3f:	xor    DWORD PTR ss:[edx],eax
  40ef42:	mov    ch,0x3d
  40ef44:	dec    ecx
  40ef45:	cwde   
  40ef46:	inc    ebp
  40ef47:	pushf  
  40ef48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef49:	sub    edi,DWORD PTR [edx-0x6c]
  40ef4c:	mov    cl,0xc3
  40ef4e:	jns    0x40efc0
  40ef50:	das    
  40ef51:	daa    
  40ef52:	push   es
  40ef53:	xchg   ebx,eax
  40ef54:	jg     0x40ef5d
  40ef56:	xor    esp,DWORD PTR [eax-0x72395258]
  40ef5c:	pop    ebp
  40ef5d:	xchg   edx,eax
  40ef5e:	push   0x0
  40ef60:	push   0xb8e9c90d
  40ef65:	jns    0x40ef7d
  40ef67:	add    eax,0x143c838f
  40ef6c:	xchg   edi,eax
  40ef6d:	ins    BYTE PTR es:[edi],dx
  40ef6e:	mov    edx,0x6fb81588
  40ef73:	test   BYTE PTR [ebx-0x69582084],dh
  40ef79:	cwde   
  40ef7a:	in     eax,dx
  40ef7b:	sub    BYTE PTR [ebx+eiz*1+0x7c3313ef],ch
  40ef82:	iret   
  40ef83:	push   ds
  40ef84:	test   al,0xfa
  40ef86:	repnz int3 
  40ef88:	pop    ss
  40ef89:	xor    BYTE PTR [ecx-0x51b13b0d],ch
  40ef8f:	out    dx,al
  40ef90:	mov    ebx,0x17aeb7b8
  40ef95:	or     DWORD PTR [esi],ebx
  40ef97:	arpl   cx,di
  40ef99:	mov    dh,0x78
  40ef9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef9c:	mov    eax,0x8227abe3
  40efa1:	mov    cl,0xab
  40efa3:	jp     0x40ef7a
  40efa5:	cmp    DWORD PTR [ebp-0x48],0x9fab1963
  40efac:	ds dec ebx
  40efae:	fsubr  st,st(5)
  40efb0:	cli    
  40efb1:	or     eax,0x2c1f6367
  40efb6:	xor    BYTE PTR [ebx*1+0x12ac7ed1],0x4c
  40efbe:	add    edi,DWORD PTR [eax]
  40efc0:	cmp    BYTE PTR [ebp+0x7c6d5db9],al
  40efc6:	std    
  40efc7:	push   eax
  40efc8:	ficomp WORD PTR [ecx-0x131874c4]
  40efce:	lahf   
  40efcf:	mov    ds:0x6bf0c951,al
  40efd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efd5:	or     ah,BYTE PTR [ebx+0x369ec0b1]
  40efdb:	mov    al,0x3
  40efdd:	int3   
  40efde:	cmp    dl,BYTE PTR [esp+ebp*4-0x13cf27d0]
  40efe5:	push   0x6ad261fb
  40efea:	popf   
  40efeb:	(bad)  
  40efec:	ret    
  40efed:	repnz or al,0x59
  40eff0:	jns    0x40f012
  40eff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eff3:	(bad)  
  40eff4:	clc    
  40eff5:	add    BYTE PTR [ebx-0x1ae327a9],dl
  40effb:	mov    esp,0xa8d51450
  40f000:	in     eax,dx
  40f001:	jno    0x40eff1
  40f003:	pusha  
  40f004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f005:	mov    ch,0x38
  40f007:	ds int3 
  40f009:	adc    al,0x88
  40f00b:	dec    esp
  40f00c:	adc    al,0xf2
  40f00e:	lods   eax,DWORD PTR ds:[esi]
  40f00f:	mov    ch,0xed
  40f011:	or     eax,0x97fac02a
  40f016:	sti    
  40f017:	nop
  40f018:	sub    dh,BYTE PTR ds:0x2f970e4c
  40f01e:	gs jbe 0x40efd9
  40f021:	scas   eax,DWORD PTR es:[edi]
  40f022:	mov    dl,0x12
  40f024:	mov    al,0x2e
  40f026:	ficomp WORD PTR [ebp+0x2c]
  40f029:	push   ss
  40f02a:	adc    DWORD PTR [edi],edi
  40f02c:	je     0x40f055
  40f02e:	pop    edx
  40f02f:	dec    esp
  40f030:	aas    
  40f031:	outs   dx,BYTE PTR ds:[esi]
  40f032:	inc    eax
  40f033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f034:	jns    0x40f02c
  40f036:	mov    esi,0x80ae42c2
  40f03b:	inc    esi
  40f03c:	retf   0x9188
  40f03f:	sub    bh,al
  40f041:	inc    esp
  40f042:	repz data16 je 0x40f0ae
  40f046:	push   ds
  40f047:	xchg   edx,eax
  40f048:	inc    eax
  40f049:	and    al,0xde
  40f04b:	push   ecx
  40f04c:	push   edx
  40f04d:	inc    ecx
  40f04e:	jae    0x40f0b8
  40f050:	test   eax,0x236d64e4
  40f055:	repz or bl,al
  40f058:	push   0xe97ae2f3
  40f05d:	jo     0x40f072
  40f05f:	fst    QWORD PTR [ebx+0x4f]
  40f062:	cld    
  40f063:	cli    
  40f064:	(bad)  
  40f065:	into   
  40f066:	in     al,dx
  40f067:	mov    eax,0xd4db04c8
  40f06c:	mov    al,0x8b
  40f06e:	inc    ebp
  40f06f:	push   cs
  40f070:	sub    dl,ch
  40f072:	xor    ah,BYTE PTR [esi+ebp*8+0x2e0fe6cd]
  40f079:	dec    esi
  40f07a:	(bad)  
  40f07b:	pop    ecx
  40f07c:	cmp    DWORD PTR [ebp-0x1dbf0d35],eax
  40f082:	out    dx,al
  40f083:	jecxz  0x40f0fb
  40f085:	cmp    DWORD PTR [edx-0x679380f8],eax
  40f08b:	cmp    eax,0xe9f7e1a3
  40f090:	repnz cmp esi,esi
  40f093:	div    ch
  40f095:	mov    eax,ds:0x97a6e523
  40f09a:	cmp    BYTE PTR [ebp+0x24],cl
  40f09d:	pop    ecx
  40f09e:	daa    
  40f09f:	sbb    BYTE PTR [ecx+0x15],0xb5
  40f0a3:	jge    0x40f04d
  40f0a5:	icebp  
  40f0a6:	mov    al,0x0
  40f0a8:	xchg   BYTE PTR gs:[edx],al
  40f0ab:	push   esi
  40f0ac:	push   edi
  40f0ad:	in     eax,dx
  40f0ae:	cld    
  40f0af:	fisttp QWORD PTR [edi-0x65]
  40f0b2:	ss mov ah,0x2a
  40f0b5:	adc    dh,BYTE PTR [edx]
  40f0b7:	pushf  
  40f0b8:	stos   DWORD PTR es:[edi],eax
  40f0b9:	into   
  40f0ba:	push   esp
  40f0bb:	fild   WORD PTR [esi-0x13fddc45]
  40f0c1:	pop    ebp
  40f0c2:	or     eax,0x7e52b52c
  40f0c7:	test   ch,dh
  40f0c9:	test   eax,0x1c0b5ee
  40f0ce:	and    BYTE PTR [ebx],0xe0
  40f0d1:	scas   al,BYTE PTR es:[edi]
  40f0d2:	push   ecx
  40f0d3:	mov    ds:0xf93be95f,al
  40f0d8:	arpl   WORD PTR [edx+ecx*4-0xbd8fe79],cx
  40f0df:	adc    al,0xd4
  40f0e1:	inc    eax
  40f0e2:	dec    esi
  40f0e3:	adc    esp,DWORD PTR [esi+edx*2-0x780d7490]
  40f0ea:	cmc    
  40f0eb:	push   eax
  40f0ec:	inc    edx
  40f0ed:	cli    
  40f0ee:	inc    esp
  40f0ef:	jp     0x40f0de
  40f0f1:	adc    ah,BYTE PTR [ecx+0x2ea60260]
  40f0f7:	dec    BYTE PTR [edi-0x3b]
  40f0fa:	outs   dx,DWORD PTR ds:[esi]
  40f0fb:	sbb    esp,edx
  40f0fd:	xor    eax,0x54a92e62
  40f102:	pop    ss
  40f103:	sbb    BYTE PTR [ecx+0x73],al
  40f106:	pusha  
  40f107:	jmp    0xdfe50d21
  40f10c:	pusha  
  40f10d:	mov    ah,0x43
  40f10f:	and    eax,DWORD PTR [ecx+0x3c]
  40f112:	sbb    eax,0x8334d55d
  40f117:	cmp    eax,0x11d95136
  40f11c:	mov    DWORD PTR [edi+0x3a70c091],esi
  40f122:	xlat   BYTE PTR ds:[ebx]
  40f123:	add    DWORD PTR [ebp+0x27],esp
  40f126:	(bad)  
  40f127:	popa   
  40f128:	mov    ds:0x8ea861ed,eax
  40f12d:	mov    gs,ebp
  40f12f:	les    edx,FWORD PTR [ebx]
  40f131:	call   DWORD PTR [edx+esi*8+0x37]
  40f135:	jnp    0x40f126
  40f137:	loop   0x40f180
  40f139:	jne    0x40f195
  40f13b:	xchg   ecx,eax
  40f13c:	push   0xe19a32de
  40f141:	cmc    
  40f142:	aaa    
  40f143:	mov    bh,0x5a
  40f145:	ins    DWORD PTR es:[edi],dx
  40f146:	push   ebx
  40f147:	test   BYTE PTR [eax],dh
  40f149:	(bad)  
  40f14a:	clc    
  40f14b:	adc    bh,BYTE PTR [eax-0x5f58dee0]
  40f151:	push   0xffffffb9
  40f153:	(bad)  
  40f154:	xchg   edx,eax
  40f155:	cld    
  40f156:	mov    al,ds:0xa3ec577d
  40f15b:	(bad)  
  40f15c:	and    al,0x55
  40f15e:	jmp    0x480:0x4e317228
  40f165:	mov    al,0x3
  40f167:	mov    ds:0xf0caf40f,al
  40f16c:	js     0x40f138
  40f16e:	sti    
  40f16f:	add    BYTE PTR [ecx-0x4],ah
  40f172:	jne    0x40f19d
  40f174:	adc    DWORD PTR [ecx],edx
  40f176:	push   cs
  40f177:	retf   
  40f178:	dec    ebp
  40f179:	popf   
  40f17a:	ret    
  40f17b:	ficom  WORD PTR [ecx-0x2a4c888c]
  40f181:	sar    BYTE PTR [edx+eiz*1+0x36b59b7c],0x4f
  40f189:	ja     0x40f1af
  40f18b:	inc    edx
  40f18c:	loop   0x40f1bf
  40f18e:	(bad)  
  40f18f:	xchg   esp,eax
  40f190:	jecxz  0x40f210
  40f192:	vdivss xmm6,xmm1,xmm4
  40f196:	sub    eax,0xa806f541
  40f19b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f19c:	mov    eax,ss
  40f19e:	jle    0x40f15a
  40f1a0:	cmp    eax,0x4e62e95c
  40f1a5:	fiadd  WORD PTR [ecx+0x59]
  40f1a8:	mov    cl,bl
  40f1aa:	sbb    ch,BYTE PTR [ebx*1-0xb475ec5]
  40f1b1:	(bad)  
  40f1b2:	je     0x40f1cf
  40f1b4:	(bad)  
  40f1b5:	in     eax,0x3b
  40f1b7:	daa    
  40f1b8:	ins    DWORD PTR es:[edi],dx
  40f1b9:	inc    esp
  40f1ba:	ja     0x40f1ab
  40f1bc:	jge    0x40f1cc
  40f1be:	loop   0x40f164
  40f1c0:	fwait
  40f1c1:	loop   0x40f21d
  40f1c3:	mov    DWORD PTR [ebp+0x57],ebx
  40f1c6:	dec    ebx
  40f1c7:	xchg   esp,eax
  40f1c8:	leave  
  40f1c9:	js     0x40f15f
  40f1cb:	xor    bl,BYTE PTR [esi-0x3a95ae4c]
  40f1d1:	xor    esp,edx
  40f1d3:	les    eax,FWORD PTR [ebx]
  40f1d5:	and    BYTE PTR [edi+0x3a7d92d5],cl
  40f1db:	fist   WORD PTR [ebx+ebx*4+0x75588ce0]
  40f1e2:	and    esi,esp
  40f1e4:	pop    ebp
  40f1e5:	pop    ds
  40f1e6:	sbb    eax,0x742b7d9c
  40f1eb:	mov    esi,0x2a3d591c
  40f1f0:	iret   
  40f1f1:	test   BYTE PTR [edx],dh
  40f1f3:	sub    eax,0xd78cc74d
  40f1f8:	push   ss
  40f1f9:	iret   
  40f1fa:	xchg   esp,eax
  40f1fb:	jg     0x40f26c
  40f1fd:	jo     0x40f250
  40f1ff:	jae    0x40f229
  40f201:	jo     0x40f193
  40f203:	mov    dh,0xf
  40f205:	push   edx
  40f206:	imul   ebx,DWORD PTR [esi+0x2b],0x8184db56
  40f20d:	call   0x6c14:0x184b5b05
  40f214:	xchg   esi,eax
  40f215:	loope  0x40f23e
  40f217:	scas   eax,DWORD PTR es:[edi]
  40f218:	mov    bh,0x0
  40f21a:	mov    es,WORD PTR [edx-0x15]
  40f21d:	hlt    
  40f21e:	pop    ss
  40f21f:	push   eax
  40f220:	das    
  40f221:	fcomp  QWORD PTR [ebp+ebp*2+0x43]
  40f225:	cmc    
  40f226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f227:	repz aaa 
  40f229:	(bad)  
  40f22a:	stc    
  40f22b:	and    BYTE PTR [eax],dh
  40f22d:	mov    edi,0x7ba36e70
  40f232:	repnz xchg esp,eax
  40f234:	aad    0x80
  40f236:	fs dec ecx
  40f238:	or     DWORD PTR [esi+0x26],0x5
  40f23c:	inc    ecx
  40f23d:	mov    DWORD PTR [ebx-0x47],0x10f72c0a
  40f244:	iret   
  40f245:	or     ecx,0x50925e53
  40f24b:	jnp    0x40f1ec
  40f24d:	jae    0x40f1e1
  40f24f:	xor    eax,0x397defd8
  40f254:	sbb    al,0x8d
  40f256:	jbe    0x40f2ce
  40f258:	ret    0xe253
  40f25b:	ret    
  40f25c:	(bad)  
  40f25d:	in     al,0x88
  40f25f:	mov    al,ch
  40f261:	imul   edi,esi,0xffffffed
  40f264:	aaa    
  40f265:	pop    es
  40f266:	arpl   WORD PTR [esi+0x43],di
  40f269:	pop    ds
  40f26a:	aaa    
  40f26b:	push   edx
  40f26c:	test   al,0x8c
  40f26e:	jnp    0x40f2bd
  40f270:	mov    dh,0xef
  40f272:	sub    al,0x8c
  40f274:	jl     0x40f26f
  40f276:	out    dx,eax
  40f277:	jae    0x40f209
  40f279:	mov    gs:0x758afdcf,eax
  40f27f:	shl    dl,1
  40f281:	dec    ebp
  40f282:	out    0x1,al
  40f284:	push   edx
  40f285:	es call 0xf71a:0xafbd5edf
  40f28d:	or     esi,edi
  40f28f:	or     al,0x11
  40f291:	inc    esp
  40f292:	xor    BYTE PTR [edi],dh
  40f294:	dec    ebx
  40f295:	mov    cl,0xc0
  40f297:	sbb    eax,0x9e23a849
  40f29c:	(bad)  
  40f29d:	xchg   esi,eax
  40f29e:	xor    BYTE PTR [edx-0x45303713],al
  40f2a4:	push   cs
  40f2a5:	mov    ds:0x11587bae,eax
  40f2aa:	arpl   WORD PTR [edi-0x6e],bp
  40f2ad:	(bad)  
  40f2af:	or     BYTE PTR [ecx+ecx*2],dl
  40f2b2:	jp     0x40f259
  40f2b4:	and    BYTE PTR [esi-0x6d2f13f9],bl
  40f2ba:	call   0xa63ff663
  40f2bf:	lds    ecx,FWORD PTR [edx-0x22a9b73f]
  40f2c5:	xor    BYTE PTR [ecx+0x44a1473c],dh
  40f2cb:	test   eax,eax
  40f2cd:	mov    bl,0xd6
  40f2cf:	call   0x7bfe:0xc2f835a5
  40f2d6:	sbb    DWORD PTR [eax],ebx
  40f2d8:	(bad)  
  40f2da:	outs   dx,BYTE PTR ds:[esi]
  40f2db:	cmp    BYTE PTR [ecx-0x79],ah
  40f2de:	call   0xc3a6:0xd062af98
  40f2e5:	jns    0x40f31e
  40f2e7:	push   ebp
  40f2e8:	mov    ch,0x7f
  40f2ea:	scas   al,BYTE PTR es:[edi]
  40f2eb:	and    DWORD PTR [edx+edx*4+0x31],edi
  40f2ef:	adc    bh,ah
  40f2f1:	dec    edi
  40f2f2:	jg     0x40f34a
  40f2f4:	dec    DWORD PTR [esi]
  40f2f6:	mov    ebp,0x3b0ddc06
  40f2fb:	adc    DWORD PTR [ecx+edi*1+0x74d01319],0xf10acb7
  40f306:	inc    ebx
  40f307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f308:	sbb    edi,edi
  40f30a:	mov    es,WORD PTR [esi-0xd]
  40f30d:	shr    dh,cl
  40f30f:	(bad)  
  40f310:	jge    0x40f354
  40f312:	xor    DWORD PTR [esi-0x5ba6b94],ebp
  40f318:	nop
  40f319:	xchg   ebp,eax
  40f31a:	mov    eax,0x528fb049
  40f31f:	mov    al,0x2c
  40f321:	add    eax,DWORD PTR ds:0x68a8d4e1
  40f327:	pop    ss
  40f328:	jne    0x40f2dc
  40f32a:	and    BYTE PTR [ebx],dh
  40f32c:	(bad)  
  40f32e:	es jl  0x40f3ad
  40f331:	xor    DWORD PTR [esi],ecx
  40f333:	loopne 0x40f389
  40f335:	jo     0x40f3b1
  40f337:	mov    edi,0x584399e3
  40f33c:	xchg   BYTE PTR [edx-0x25],ch
  40f33f:	adc    al,0x8d
  40f341:	fwait
  40f342:	cmc    
  40f343:	mov    edi,0x5b223b22
  40f348:	imul   eax,DWORD PTR [ebx-0x5f],0x602b099d
  40f34f:	dec    edi
  40f350:	and    al,BYTE PTR [eax-0x5b59ad6d]
  40f356:	outs   dx,DWORD PTR ds:[esi]
  40f357:	and    al,0xe1
  40f359:	and    esi,DWORD PTR ds:0x12f99720
  40f35f:	nop
  40f360:	dec    edx
  40f361:	adc    BYTE PTR [ebx],ch
  40f363:	aam    0xd
  40f365:	nop
  40f366:	rcl    cl,1
  40f368:	test   DWORD PTR [eax],0x15455cb7
  40f36e:	gs das 
  40f370:	fwait
  40f371:	repnz sub DWORD PTR ds:0x4c9247df,0xffffffcd
  40f379:	push   0x2e
  40f37b:	lahf   
  40f37c:	xchg   edi,eax
  40f37d:	loop   0x40f349
  40f37f:	jge    0x40f30c
  40f381:	sbb    dh,BYTE PTR [ebx]
  40f383:	sti    
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xe349fcf2,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	mov    ds:0x6f3c27ab,al
  40f488:	lahf   
  40f489:	push   ebp
  40f48a:	je     0x40f503
  40f48c:	or     BYTE PTR [esi-0x62],dh
  40f48f:	imul   esp,DWORD PTR [ecx+0x783d14a8],0xa4e926f8
  40f499:	jp     0x40f446
  40f49b:	pop    ecx
  40f49c:	xchg   edx,eax
  40f49d:	lods   eax,DWORD PTR ds:[esi]
  40f49e:	dec    ebx
  40f49f:	call   FWORD PTR [edx]
  40f4a1:	xchg   edx,eax
  40f4a2:	xchg   edi,eax
  40f4a3:	jecxz  0x40f4c9
  40f4a5:	pusha  
  40f4a6:	add    ecx,eax
  40f4a8:	jge    0x40f4f5
  40f4aa:	sbb    eax,0xa54402f5
  40f4af:	bound  ecx,QWORD PTR [ecx]
  40f4b1:	adc    al,0x2f
  40f4b3:	hlt    
  40f4b4:	mov    eax,ds:0xb99682a9
  40f4b9:	dec    ecx
  40f4ba:	je     0x40f4cc
  40f4bc:	lock adc ah,BYTE PTR [ecx+ecx*2+0x2e936f4e]
  40f4c4:	call   0xf69b:0x5974f055
  40f4cb:	cmp    edx,DWORD PTR [edx-0x18ee95eb]
  40f4d1:	adc    esi,esi
  40f4d3:	clc    
  40f4d4:	pop    ss
  40f4d5:	(bad)  
  40f4d6:	xor    eax,0x2549b54b
  40f4db:	mov    bl,0xe2
  40f4dd:	mov    al,0xa8
  40f4df:	sub    bh,BYTE PTR [edi]
  40f4e1:	sbb    edx,DWORD PTR [ecx]
  40f4e3:	sar    BYTE PTR [edx+eax*8],1
  40f4e6:	pop    ds
  40f4e7:	test   al,0x5
  40f4e9:	in     al,dx
  40f4ea:	ror    DWORD PTR [ebp+0xfcc937c],0x92
  40f4f1:	mov    eax,ds:0x2ddbb0dd
  40f4f6:	int3   
  40f4f7:	jmp    0x93ac:0x808b4f3d
  40f4fe:	sbb    dh,BYTE PTR [edx]
  40f500:	lods   eax,DWORD PTR ds:[esi]
  40f501:	call   0xafe18c0c
  40f506:	dec    edx
  40f507:	cmp    ebx,DWORD PTR [esi+0x5ce63fd2]
  40f50d:	pop    ds
  40f50e:	xor    al,0x3b
  40f510:	adc    eax,0x5ca243e3
  40f515:	dec    ebx
  40f516:	sub    al,cl
  40f518:	cmp    ebx,DWORD PTR [edi+0x55]
  40f51b:	inc    ecx
  40f51c:	clc    
  40f51d:	add    edi,eax
  40f51f:	jmp    0x412e:0xbf376e9e
  40f526:	stc    
  40f527:	dec    ebx
  40f528:	mov    eax,ds:0x78df41d
  40f52d:	daa    
  40f52e:	push   esi
  40f52f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f530:	mov    WORD PTR [ebx+0x5d22f40b],cs
  40f536:	fdivr  st,st(0)
  40f538:	adc    al,0xc4
  40f53a:	mov    ds:0xd4d09bc3,eax
  40f53f:	scas   eax,DWORD PTR es:[edi]
  40f540:	dec    DWORD PTR [ebx-0xf3c0246]
  40f546:	aas    
  40f547:	out    0x2,eax
  40f549:	xchg   ebx,eax
  40f54a:	(bad)  
  40f54b:	hlt    
  40f54c:	jl     0x40f557
  40f54e:	(bad)  
  40f54f:	hlt    
  40f550:	outs   dx,BYTE PTR ds:[esi]
  40f551:	mov    ah,0xa
  40f553:	sub    DWORD PTR [ecx-0x69290d98],esi
  40f559:	stos   DWORD PTR es:[edi],eax
  40f55a:	fldcw  WORD PTR [edi+ecx*8]
  40f55d:	sub    eax,0x283e3211
  40f562:	push   ebp
  40f563:	scas   al,BYTE PTR es:[edi]
  40f564:	mov    ebp,es
  40f566:	outs   dx,DWORD PTR ds:[esi]
  40f567:	adc    ch,cl
  40f569:	push   cs
  40f56a:	cmp    al,0x49
  40f56c:	fadd   DWORD PTR [esi-0x16daff88]
  40f572:	int3   
  40f573:	jp     0x40f4fe
  40f575:	dec    edi
  40f576:	push   cs
  40f577:	lock push ecx
  40f579:	mov    esi,0x70ddfea9
  40f57e:	(bad)  
  40f57f:	adc    BYTE PTR gs:[ebx-0x221ff866],ch
  40f586:	fistp  DWORD PTR [edx]
  40f588:	ins    DWORD PTR es:[edi],dx
  40f589:	test   BYTE PTR [edi+0xa],bh
  40f58c:	int3   
  40f58d:	sti    
  40f58e:	loope  0x40f541
  40f590:	out    0xe5,eax
  40f592:	pop    esp
  40f593:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40f595:	pop    ecx
  40f596:	popa   
  40f597:	and    eax,0x7506f361
  40f59c:	mov    ch,0x2a
  40f59e:	mov    eax,ds:0x989bff67
  40f5a3:	jmp    0x40f595
  40f5a5:	aad    0x12
  40f5a7:	mov    ecx,0x7f53022e
  40f5ac:	adc    ebp,DWORD PTR [esi+esi*2]
  40f5af:	test   DWORD PTR [eax],eax
  40f5b1:	stos   DWORD PTR es:[edi],eax
  40f5b2:	or     ebp,ecx
  40f5b4:	inc    esi
  40f5b5:	fst    QWORD PTR [edi]
  40f5b7:	or     al,0xc3
  40f5b9:	cmp    al,0x7a
  40f5bb:	or     al,BYTE PTR [ecx-0xe00229a]
  40f5c1:	xlat   BYTE PTR ds:[ebx]
  40f5c2:	pop    ebx
  40f5c3:	lea    edi,[esi+0x1d]
  40f5c6:	xor    bl,BYTE PTR [ebx+eiz*1-0x6e07167c]
  40f5cd:	xchg   DWORD PTR [eax+0x52],eax
  40f5d0:	(bad)  
  40f5d1:	out    0xd8,al
  40f5d3:	loopne 0x40f600
  40f5d5:	les    edx,FWORD PTR [ebp-0x43]
  40f5d8:	jno    0x40f613
  40f5da:	pushf  
  40f5db:	ret    0xb6ef
  40f5de:	nop
  40f5df:	in     eax,dx
  40f5e0:	push   DWORD PTR [edi+edx*4+0x29]
  40f5e4:	div    BYTE PTR [ebp+0x9]
  40f5e7:	mov    ch,0x34
  40f5e9:	fs (bad) 
  40f5ec:	pop    ebx
  40f5ed:	adc    eax,0x38eda72b
  40f5f2:	fiadd  WORD PTR [eax]
  40f5f4:	popa   
  40f5f5:	sti    
  40f5f6:	jns    0x40f654
  40f5f8:	mov    eax,ds:0x7cf1980e
  40f5fd:	and    BYTE PTR [esi+0x3175ac74],ch
  40f603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f604:	dec    eax
  40f605:	popf   
  40f606:	mov    ah,0xaf
  40f608:	add    eax,0x583d4000
  40f60d:	bound  edx,QWORD PTR [eax+ebx*1-0x5]
  40f611:	icebp  
  40f612:	push   0x8a29113
  40f617:	dec    esi
  40f618:	test   al,0x16
  40f61a:	out    dx,eax
  40f61b:	and    DWORD PTR [eax+0x564ddff4],ecx
  40f621:	rcl    bh,cl
  40f623:	mov    al,ds:0xe8348cba
  40f628:	ss xor ecx,edx
  40f62b:	cmc    
  40f62c:	stos   BYTE PTR es:[edi],al
  40f62d:	xlat   BYTE PTR ds:[ebx]
  40f62e:	adc    al,0x6a
  40f630:	(bad)  
  40f631:	sbb    eax,0x935153de
  40f636:	int    0x92
  40f638:	daa    
  40f639:	mov    ah,0x2f
  40f63b:	mov    BYTE PTR [esi+0x45],ah
  40f63e:	into   
  40f63f:	std    
  40f640:	fcmovnb st,st(3)
  40f642:	xor    dh,dl
  40f644:	sbb    edi,DWORD PTR ds:0xcfd066f3
  40f64a:	repnz ficomp WORD PTR [esp+eiz*2]
  40f64e:	jl     0x40f69d
  40f650:	pop    ds
  40f651:	mov    bl,0x6b
  40f653:	in     eax,dx
  40f654:	fbld   TBYTE PTR ds:0xdfc67692
  40f65a:	sbb    ebx,DWORD PTR [esi-0x510688fc]
  40f660:	(bad)  [esi-0x6c]
  40f663:	mov    esi,0x3a45c22a
  40f668:	nop
  40f669:	mov    esp,0xe9d0732f
  40f66e:	and    al,0xcd
  40f670:	das    
  40f671:	or     al,BYTE PTR [esi-0x44]
  40f674:	sub    eax,DWORD PTR [esi+0x0]
  40f677:	mov    eax,0xe34a3569
  40f67c:	push   0xbb2c4f81
  40f681:	sub    ah,al
  40f683:	xchg   edi,eax
  40f684:	cdq    
  40f685:	into   
  40f686:	add    BYTE PTR [edx-0x305ec60b],bh
  40f68c:	lock lock test DWORD PTR [esi+0x7c541bf7],ebx
  40f694:	je     0x40f710
  40f696:	and    bh,BYTE PTR [ebp+0xe29a56e]
  40f69c:	jmp    0xa43e324e
  40f6a1:	push   0x1681d27e
  40f6a6:	sub    edx,ebx
  40f6a8:	imul   ecx,DWORD PTR [esi+ecx*1-0x5e676048],0xb5ff040f
  40f6b3:	shl    DWORD PTR [edx-0x7e28fc53],1
  40f6b9:	push   edi
  40f6ba:	xor    eax,0xf9bdcbac
  40f6bf:	sbb    esi,DWORD PTR [edx]
  40f6c1:	out    0x68,eax
  40f6c3:	in     eax,dx
  40f6c4:	mov    al,ds:0x41d87181
  40f6c9:	inc    eax
  40f6ca:	in     eax,0x67
  40f6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6cd:	(bad)  
  40f6ce:	cmp    BYTE PTR [edx+0x10],0x5
  40f6d2:	jmp    0x803bf4fd
  40f6d7:	shl    DWORD PTR [eax-0x70],cl
  40f6da:	(bad)  
  40f6dc:	fistp  QWORD PTR [ebx-0x79]
  40f6df:	jo     0x2813
  40f6e4:	stos   DWORD PTR es:[edi],eax
  40f6e5:	and    ch,BYTE PTR [ecx-0x39]
  40f6e8:	imul   esi,DWORD PTR [ecx+eiz*4+0x1a742076],0xb3a76c74
  40f6f3:	jnp    0x40f6ec
  40f6f5:	std    
  40f6f6:	fwait
  40f6f7:	lods   eax,DWORD PTR ds:[esi]
  40f6f8:	or     DWORD PTR [ebp-0x76],ebx
  40f6fb:	sahf   
  40f6fc:	cwde   
  40f6fd:	ja     0x40f6f8
  40f6ff:	xchg   ecx,eax
  40f700:	test   BYTE PTR [esi],bl
  40f702:	jp     0x40f6e8
  40f704:	mov    dl,0xc9
  40f706:	sub    al,0x52
  40f708:	pop    edi
  40f709:	dec    edi
  40f70a:	push   0xffffff9b
  40f70c:	cmp    BYTE PTR [ebp-0x2b],bl
  40f70f:	add    al,0x23
  40f711:	cs xchg ebp,eax
  40f713:	mov    ecx,0xd63025d6
  40f718:	dec    ebp
  40f719:	in     al,0x6b
  40f71b:	imul   ecx,DWORD PTR [edi],0xffffffff
  40f71e:	out    dx,eax
  40f71f:	mov    al,0x5b
  40f721:	call   0x111a6c49
  40f726:	add    BYTE PTR es:[edi+0x456fcb86],0xac
  40f72e:	mov    bl,0x93
  40f730:	mov    cl,0x13
  40f732:	ret    0x932
  40f735:	pop    eax
  40f736:	jae    0x40f6e0
  40f738:	call   0xe1a17a8b
  40f73d:	sbb    esp,DWORD PTR [edx-0x6b]
  40f740:	inc    esi
  40f741:	test   eax,0xd5e7377b
  40f746:	aam    0x4e
  40f748:	mov    bh,0x3f
  40f74a:	icebp  
  40f74b:	lods   eax,DWORD PTR ds:[esi]
  40f74c:	clc    
  40f74d:	int    0x40
  40f74f:	sar    DWORD PTR [ecx+ecx*1],1
  40f752:	dec    ebx
  40f753:	push   0xf6f34602
  40f758:	mov    fs,WORD PTR ds:0x95864459
  40f75e:	call   0xec7e:0xd7e39ab6
  40f765:	jle    0x40f73f
  40f767:	adc    dh,BYTE PTR [ebx+0x47]
  40f76a:	mov    BYTE PTR [eax],al
  40f76c:	mov    eax,0x6856f3eb
  40f771:	mov    ch,0xf2
  40f773:	jg     0x40f7de
  40f775:	out    0xcc,eax
  40f777:	mov    ch,0x69
  40f779:	test   eax,0x33222443
  40f77e:	rcl    eax,0xd9
  40f781:	or     BYTE PTR [edx+0x18],bh
  40f784:	sbb    BYTE PTR [esi+esi*1-0x13],bl
  40f788:	aaa    
  40f789:	add    ebp,0x2f1a5a5f
  40f78f:	xor    ebp,ebp
  40f791:	mov    edi,0xdfd2d87e
  40f796:	sbb    bh,ah
  40f798:	scas   eax,DWORD PTR es:[edi]
  40f799:	adc    al,0x88
  40f79b:	add    BYTE PTR [eax+0x11],ch
  40f79e:	sub    eax,0xe0322e
  40f7a3:	scas   eax,DWORD PTR es:[edi]
  40f7a4:	jl     0x40f7a5
  40f7a6:	cmp    esp,DWORD PTR [ecx+0x1fa7b52b]
  40f7ac:	or     edx,DWORD PTR [ebx]
  40f7ae:	mov    eax,ds:0x586e74bf
  40f7b3:	sbb    BYTE PTR [ecx+0x51],bl
  40f7b6:	(bad)  
  40f7b7:	dec    edx
  40f7b8:	push   ss
  40f7b9:	cdq    
  40f7ba:	dec    ebp
  40f7bb:	pusha  
  40f7bc:	mov    edi,0x6f222614
  40f7c1:	dec    eax
  40f7c2:	mov    ebp,0xf8b56f47
  40f7c7:	adc    BYTE PTR [ecx],ah
  40f7c9:	mov    ebp,0x1fc0134c
  40f7ce:	inc    esp
  40f7cf:	sbb    ch,cl
  40f7d1:	pop    esi
  40f7d2:	test   DWORD PTR [edx],ecx
  40f7d4:	out    0x12,al
  40f7d6:	adc    al,0xfa
  40f7d8:	jne    0x40f836
  40f7da:	mov    edx,0xd62d38b
  40f7df:	xor    eax,0xffffffea
  40f7e2:	imul   edx,DWORD PTR [esi],0x1ba3fda0
  40f7e8:	scas   al,BYTE PTR es:[edi]
  40f7e9:	jge    0x40f7a1
  40f7eb:	scas   al,BYTE PTR es:[edi]
  40f7ec:	push   ds
  40f7ed:	mov    ds:0xec20a164,eax
  40f7f2:	sub    al,0x5f
  40f7f4:	mov    ebp,ss
  40f7f6:	add    BYTE PTR cs:[esi],dl
  40f7f9:	out    0xb2,al
  40f7fb:	das    
  40f7fc:	bound  edi,QWORD PTR [edx-0x30]
  40f7ff:	test   DWORD PTR [ebp-0x60],ebp
  40f802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f803:	test   DWORD PTR [ecx],esi
  40f805:	dec    esp
  40f806:	jecxz  0x40f857
  40f808:	pop    edx
  40f809:	sub    ebx,eax
  40f80b:	push   eax
  40f80c:	shr    BYTE PTR [ecx+0x65a88705],0x3
  40f813:	or     eax,0x1174d20a
  40f818:	and    eax,0xef70cbc1
  40f81d:	mov    dh,0x9a
  40f81f:	inc    edx
  40f820:	xchg   ebx,eax
  40f821:	lds    ecx,FWORD PTR [ecx+ebp*8]
  40f824:	addr16 push ebx
  40f826:	addr16 push es
  40f828:	fs dec edi
  40f82a:	mov    bh,0x57
  40f82c:	test   eax,0x8309c241
  40f831:	hlt    
  40f832:	adc    DWORD PTR [ebx],edx
  40f834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f835:	or     dl,bl
  40f837:	in     al,0x7
  40f839:	fadd   DWORD PTR [edx-0x26bc8979]
  40f83f:	cmp    al,0x9e
  40f841:	int    0xd8
  40f843:	je     0x40f88d
  40f845:	add    BYTE PTR [edx-0x71b9cd77],cl
  40f84b:	mov    fs,WORD PTR ds:0xd5bb234b
  40f851:	jge    0x40f849
  40f853:	sbb    ah,BYTE PTR [ebx+eax*4+0x1991b686]
  40f85a:	fisubr DWORD PTR [eax-0x72701cdf]
  40f860:	sbb    bl,ch
  40f862:	pusha  
  40f863:	daa    
  40f864:	mov    ebp,0x464f81a
  40f869:	add    eax,0x87559a62
  40f86e:	pop    ebx
  40f870:	ret    0xf1c
  40f873:	add    eax,esp
  40f875:	add    al,0x95
  40f877:	pop    esp
  40f878:	clc    
  40f879:	shr    BYTE PTR [ecx+0x46294dda],0xbc
  40f880:	ret    
  40f881:	loop   0x40f901
  40f883:	aad    0xc3
  40f885:	lea    ebp,fs:0x47688a2a
  40f88c:	fwait
  40f88d:	clc    
  40f88e:	fstp   TBYTE PTR [ebx]
  40f890:	add    BYTE PTR [edx+0x68c18fe2],0x4e
  40f897:	push   ds
  40f898:	push   ebp
  40f899:	xchg   ebp,eax
  40f89a:	xor    eax,0x435f5eae
  40f89f:	rol    BYTE PTR [esi],1
  40f8a1:	outs   dx,DWORD PTR ds:[si]
  40f8a3:	mov    ds:0x4b8a6237,eax
  40f8a8:	adc    cl,BYTE PTR [eax+0x184e5a4a]
  40f8ae:	imul   eax,DWORD PTR [ebp-0x30],0xbe2e75e5
  40f8b5:	sub    esp,eax
  40f8b7:	cmp    BYTE PTR [edi+0x341401bf],ch
  40f8bd:	fidiv  DWORD PTR [ecx+0x47]
  40f8c0:	push   ds
  40f8c1:	in     eax,0xb7
  40f8c3:	fcomp  QWORD PTR [eax+0x289eef91]
  40f8c9:	xchg   esi,eax
  40f8ca:	jg     0x40f92f
  40f8cc:	or     bl,BYTE PTR [eax+0x7c]
  40f8cf:	sbb    ebp,0xb544dc48
  40f8d5:	dec    ecx
  40f8d6:	inc    eax
  40f8d7:	dec    edi
  40f8d8:	fild   DWORD PTR [eax+0x68951c17]
  40f8de:	out    dx,al
  40f8df:	xor    eax,0x2ad73084
  40f8e4:	in     eax,dx
  40f8e5:	cdq    
  40f8e6:	xchg   ebx,eax
  40f8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e8:	sub    al,0xdb
  40f8ea:	adc    DWORD PTR [eax+0x6734fb76],ecx
  40f8f0:	sbb    BYTE PTR [ebx],dl
  40f8f2:	test   DWORD PTR [eax],esp
  40f8f4:	jp     0x40f8f2
  40f8f6:	(bad)  
  40f8f7:	xor    bl,dh
  40f8f9:	hlt    
  40f8fa:	xchg   ecx,eax
  40f8fb:	scas   al,BYTE PTR es:[edi]
  40f8fc:	dec    ecx
  40f8fd:	mov    dl,0xd1
  40f8ff:	mov    cl,0x32
  40f901:	sbb    eax,0xa47eb989
  40f906:	xchg   di,ax
  40f908:	pop    esp
  40f909:	fwait
  40f90a:	or     BYTE PTR [edx-0x51],0x45
  40f90e:	push   esi
  40f90f:	and    eax,0x6a41fc76
  40f914:	and    DWORD PTR [eax],0x35
  40f917:	sahf   
  40f918:	data16 or al,0xb9
  40f91b:	add    eax,0x4497b4ff
  40f920:	jmp    0x40610553
  40f925:	bound  ecx,QWORD PTR [edx]
  40f927:	imul   esi,DWORD PTR [edi],0xcfd14c66
  40f92d:	jb     0x40f959
  40f92f:	arpl   cx,ax
  40f931:	imul   ebp,DWORD PTR [edi+0x46],0x66a7d21a
  40f938:	sbb    dl,bl
  40f93a:	jno    0x40f95d
  40f93c:	iret   
  40f93d:	fsubr  DWORD PTR [ebp-0x698d98fd]
  40f943:	pop    ss
  40f944:	call   0x836:0x899b3d02
  40f94b:	lock xor al,0x82
  40f94e:	xor    eax,0xd3f8a27b
  40f953:	dec    ebx
  40f954:	cmp    dl,BYTE PTR [esi+ecx*2+0x36e7fa70]
  40f95b:	and    ch,bh
  40f95d:	pop    ds
  40f95e:	pop    ss
  40f95f:	jp     0x40f94b
  40f961:	out    0x1d,eax
  40f963:	into   
  40f964:	push   ds
  40f965:	adc    al,0xd9
  40f967:	dec    ebx
  40f968:	js     0x40f971
  40f96a:	jp     0x40f928
  40f96c:	push   es
  40f96d:	fwait
  40f96e:	xor    ecx,ebx
  40f970:	dec    eax
  40f971:	in     eax,dx
  40f972:	push   esp
  40f973:	cmp    al,0x9a
  40f975:	mov    DWORD PTR [edi],ecx
  40f977:	dec    esi
  40f978:	jo     0x40f9b9
  40f97a:	pop    eax
  40f97b:	fadd   QWORD PTR [ebx]
  40f97d:	mov    BYTE PTR [edi-0x36436171],al
  40f983:	out    0xcf,al
  40f985:	xchg   esi,eax
  40f986:	jmp    0x73d89fc5
  40f98b:	dec    esp
  40f98c:	xchg   ebx,eax
  40f98d:	cwde   
  40f98e:	cmc    
  40f98f:	mov    ?,ebp
  40f991:	inc    esi
  40f992:	daa    
  40f993:	ret    
  40f994:	aam    0xdf
  40f996:	cli    
  40f997:	cdq    
  40f998:	jl     0x40f931
  40f99a:	loope  0x40f972
  40f99c:	pop    ss
  40f99d:	mov    ch,0x66
  40f99f:	add    BYTE PTR [eax+0x2791538a],ah
  40f9a5:	iret   
  40f9a6:	pop    ecx
  40f9a7:	cmp    BYTE PTR [eax+0x3b07382c],dh
  40f9ad:	pop    ss
  40f9ae:	(bad)  
  40f9af:	jbe    0x40f941
  40f9b1:	xchg   ebx,eax
  40f9b2:	lea    edx,[eax-0x38]
  40f9b5:	and    DWORD PTR [ebp+0x5db49c7c],esi
  40f9bb:	jno    0x40f9c1
  40f9bd:	mov    dl,0x8a
  40f9bf:	jae    0x40f968
  40f9c1:	push   edx
  40f9c2:	lods   eax,DWORD PTR ds:[esi]
  40f9c3:	call   0x6d6:0xbdc2541d
  40f9ca:	push   edx
  40f9cb:	jg     0x40fa35
  40f9cd:	imul   ebx,DWORD PTR [ebx-0x6388c114],0x2d
  40f9d4:	(bad)  
  40f9d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9d7:	out    0xff,eax
  40f9d9:	jne    0x40fa51
  40f9db:	xchg   BYTE PTR [edi],dh
  40f9dd:	jp     0x40f988
  40f9df:	fild   DWORD PTR [ebp-0x314bd8bb]
  40f9e5:	lahf   
  40f9e6:	arpl   sp,sp
  40f9e8:	rcl    DWORD PTR [ebx+0x90fcfde],1
  40f9ee:	sub    DWORD PTR [eax+0x65],esi
  40f9f1:	jbe    0x40f9ce
  40f9f3:	mov    ebp,0x971a64
  40f9f8:	dec    edx
  40f9f9:	cmp    al,0x84
  40f9fb:	jae    0x40f9e0
  40f9fd:	sub    eax,0xcee35286
  40fa02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa03:	mov    ch,BYTE PTR [ebp-0x76]
  40fa06:	ret    0xc26
  40fa09:	mov    eax,DWORD PTR [ebx]
  40fa0b:	mov    edx,0xa985a951
  40fa10:	mov    al,BYTE PTR [ebp+0x21]
  40fa13:	inc    eax
  40fa14:	and    eax,0x453a31ae
  40fa19:	xchg   edx,eax
  40fa1a:	std    
  40fa1b:	mov    ebp,0x1b273fc7
  40fa20:	or     BYTE PTR [ebp-0x17],dh
  40fa23:	push   ecx
  40fa24:	ins    DWORD PTR es:[edi],dx
  40fa25:	jmp    0xdae9:0x6481a0bc
  40fa2c:	sub    DWORD PTR [edx-0x57b7d1c9],eax
  40fa32:	and    bl,BYTE PTR [eax+0x57be403b]
  40fa38:	jnp    0x40fa4c
  40fa3a:	mov    ds:0xcc6afb23,al
  40fa3f:	and    DWORD PTR [edx-0x564d0df5],0xffffff99
  40fa46:	inc    ecx
  40fa47:	jg     0x40fa46
  40fa49:	imul   ecx,DWORD PTR [ebx],0x3bc5b3de
  40fa4f:	xor    dl,BYTE PTR [eax+0x28]
  40fa52:	jecxz  0x40fa8f
  40fa54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa55:	sub    ch,al
  40fa57:	add    BYTE PTR [ebx],dl
  40fa59:	cld    
  40fa5a:	bnd jo 0x40facc
  40fa5d:	push   edx
  40fa5e:	add    edx,DWORD PTR [edi+0x2d]
  40fa61:	aad    0x8e
  40fa63:	push   eax
  40fa64:	pop    ebx
  40fa65:	lods   al,BYTE PTR ds:[esi]
  40fa66:	push   es
  40fa67:	rcr    DWORD PTR [ebp+0x3f],0xd5
  40fa6b:	call   0x9b8c3cd6
  40fa70:	dec    ecx
  40fa71:	cmc    
  40fa72:	add    DWORD PTR [ebp-0x1e],edx
  40fa75:	push   esi
  40fa76:	test   eax,0x35c6ebbe
  40fa7b:	mov    DWORD PTR [edx-0x26],ecx
  40fa7e:	retf   0xdd33
  40fa81:	cmc    
  40fa82:	les    eax,FWORD PTR [edi-0x76]
  40fa85:	scas   eax,DWORD PTR es:[edi]
  40fa86:	xchg   edi,eax
  40fa87:	mov    bl,0xb2
  40fa89:	aaa    
  40fa8a:	xchg   edx,eax
  40fa8b:	or     al,0xde
  40fa8d:	pop    ebp
  40fa8e:	xchg   edi,eax
  40fa8f:	xchg   esi,eax
  40fa90:	pop    esi
  40fa91:	test   dl,0x26
  40fa94:	xlat   BYTE PTR ds:[ebx]
  40fa95:	retf   0x1b51
  40fa98:	repz cmp BYTE PTR [edx],0xe5
  40fa9c:	loopne 0x40fa7b
  40fa9e:	sbb    al,0xc8
  40faa0:	aam    0x9f
  40faa2:	mov    eax,ds:0x87b58eee
  40faa7:	xor    BYTE PTR [edx+0x6f081aed],cl
  40faad:	test   ch,ah
  40faaf:	adc    cl,BYTE PTR ds:0x54f5f9f3
  40fab5:	sbb    bh,BYTE PTR [esi-0x5f]
  40fab8:	push   ebp
  40fab9:	mov    ah,0x9a
  40fabb:	xor    dh,ch
  40fabd:	jae    0x40fa78
  40fabf:	ins    BYTE PTR es:[edi],dx
  40fac0:	pushf  
  40fac1:	jb     0x40faf3
  40fac3:	jecxz  0x40fb11
  40fac5:	cmc    
  40fac6:	jae    0x40fb46
  40fac8:	inc    ebp
  40fac9:	out    dx,al
  40faca:	or     DWORD PTR [ecx+0x4467b250],esi
  40fad0:	mov    al,ds:0x58c321f4
  40fad5:	fs sti 
  40fad7:	adc    al,0x36
  40fad9:	mov    esi,0x98ada582
  40fade:	mov    DWORD PTR [eax],ebp
  40fae0:	cmp    DWORD PTR [eax],0x39
  40fae3:	jno    0x40fb2b
  40fae5:	xor    DWORD PTR [edx],edx
  40fae7:	mov    ds:0xf193f30,eax
  40faec:	(bad)  
  40faed:	clc    
  40faee:	xor    eax,0x3fc0bc36
  40faf3:	sub    ebp,DWORD PTR [esi-0x7ab9af9a]
  40faf9:	dec    edx
  40fafa:	(bad)  
  40fafb:	out    0xfb,eax
  40fafd:	xchg   edx,eax
  40fafe:	enter  0x9524,0xe4
  40fb02:	les    esp,FWORD PTR [edi+0x3894cd4e]
  40fb08:	mov    ebx,0x97f801c8
  40fb0d:	push   0x3d0492a9
  40fb12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb13:	scas   al,BYTE PTR es:[edi]
  40fb14:	mov    edi,0xe53e4bd4
  40fb19:	push   edx
  40fb1a:	or     eax,ecx
  40fb1c:	sbb    eax,0x89d5f919
  40fb21:	jns    0x40fb4f
  40fb23:	pusha  
  40fb24:	inc    edi
  40fb25:	aas    
  40fb26:	fld    DWORD PTR [edx]
  40fb28:	in     eax,0x7b
  40fb2a:	hlt    
  40fb2b:	rcl    BYTE PTR [edi-0x64],0x63
  40fb2f:	dec    edx
  40fb30:	pop    ebp
  40fb31:	xor    BYTE PTR [edx+0x73],dl
  40fb34:	lahf   
  40fb35:	xor    BYTE PTR [ecx-0x29a21b44],al
  40fb3b:	and    ecx,ebp
  40fb3d:	aad    0xb3
  40fb3f:	push   0xb76f7c1b
  40fb44:	in     al,dx
  40fb45:	mov    al,0x7f
  40fb47:	stos   BYTE PTR es:[edi],al
  40fb48:	pop    ebp
  40fb49:	pop    esi
  40fb4a:	out    dx,eax
  40fb4b:	sbb    DWORD PTR [ecx+0x6c],0xcaf718a1
  40fb52:	push   ecx
  40fb53:	loopne 0x40fbbf
  40fb55:	inc    edx
  40fb56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb57:	mov    WORD PTR [ebp-0x69a03281],fs
  40fb5d:	add    eax,0x839ab4af
  40fb62:	pop    ebx
  40fb63:	jmp    0x40fb48
  40fb65:	call   0xa365:0xbda549a3
  40fb6c:	lods   eax,DWORD PTR ds:[esi]
  40fb6d:	add    eax,DWORD PTR [ebp-0x5feb1294]
  40fb73:	inc    edi
  40fb74:	in     eax,dx
  40fb75:	hlt    
  40fb76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb77:	popf   
  40fb78:	add    eax,0xe967dcd8
  40fb7d:	dec    esi
  40fb7e:	cli    
  40fb7f:	lds    esi,FWORD PTR [edi-0x6e6977b5]
  40fb85:	pinsrw mm1,esi,0xca
  40fb89:	xchg   esp,eax
  40fb8a:	iret   
  40fb8b:	mov    edi,0x63b7f6d4
  40fb90:	mov    dh,0xa
  40fb92:	iret   
  40fb93:	adc    edi,DWORD PTR [esi+0x1b]
  40fb96:	push   ebx
  40fb97:	outs   dx,DWORD PTR ds:[esi]
  40fb98:	ds mov ah,0xd4
  40fb9b:	or     al,0xb
  40fb9d:	icebp  
  40fb9e:	push   edx
  40fb9f:	cs push esi
  40fba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fba2:	adc    DWORD PTR [edi-0x38e2197d],esp
  40fba8:	cwde   
  40fba9:	push   0xffffffd0
  40fbab:	sub    BYTE PTR [edx+0x7fd8cc87],bh
  40fbb1:	pushf  
  40fbb2:	in     al,0x9f
  40fbb4:	das    
  40fbb5:	shr    esi,cl
  40fbb7:	jmp    0x7beef413
  40fbbc:	jb     0x40fb6e
  40fbbe:	pop    edi
  40fbbf:	pop    ss
  40fbc0:	and    ebx,DWORD PTR [ecx]
  40fbc2:	mov    DWORD PTR [eax],edi
  40fbc4:	call   0x44a4ef90
  40fbc9:	sbb    BYTE PTR [edx],dl
  40fbcb:	sbb    al,0x6f
  40fbcd:	(bad)  
  40fbce:	pop    eax
  40fbcf:	ret    
  40fbd0:	hlt    
  40fbd1:	add    al,0x95
  40fbd3:	enter  0x5901,0x32
  40fbd7:	icebp  
  40fbd8:	iret   
  40fbd9:	je     0x40fc52
  40fbdb:	push   edi
  40fbdc:	std    
  40fbdd:	cmc    
  40fbde:	div    ah
  40fbe0:	jo     0x40fb7a
  40fbe2:	push   esi
  40fbe3:	add    BYTE PTR [edi+0x3f],0x40
  40fbe7:	dec    edx
  40fbe8:	test   BYTE PTR [ecx+0x40],al
  40fbeb:	call   0x91849340
  40fbf0:	rcr    DWORD PTR [esi+0x73],cl
  40fbf3:	mov    ecx,0x6ae01add
  40fbf8:	fsub   DWORD PTR [esi+0x62]
  40fbfb:	jge    0x40fbbc
  40fbfd:	lds    edx,FWORD PTR [esi-0x689f2b90]
  40fc03:	jecxz  0x40fbca
  40fc05:	lods   eax,DWORD PTR ds:[esi]
  40fc06:	and    eax,0xf3c7e265
  40fc0b:	aad    0x82
  40fc0d:	pop    ss
  40fc0e:	and    bh,BYTE PTR [eax+0x3b]
  40fc11:	in     eax,dx
  40fc12:	in     eax,dx
  40fc13:	adc    ah,BYTE PTR [ecx+0x312ed476]
  40fc19:	mov    bh,0xb4
  40fc1b:	adc    dh,ch
  40fc1d:	fbld   TBYTE PTR [edi+eiz*2]
  40fc20:	pop    ss
  40fc21:	test   DWORD PTR [edx],edi
  40fc23:	dec    esi
  40fc24:	xchg   edx,eax
  40fc25:	and    ebx,esp
  40fc27:	mov    fs,WORD PTR [edx]
  40fc29:	jnp    0x40fbee
  40fc2b:	and    esi,DWORD PTR [edi+ecx*1-0x79ebacfa]
  40fc32:	fmul   DWORD PTR [ebp+0x4f32bffd]
  40fc38:	push   ebp
  40fc39:	(bad)  
  40fc3b:	cmc    
  40fc3c:	mov    eax,ds:0x5105dc78
  40fc41:	fsubr  QWORD PTR [edx+0x8f97f32]
  40fc47:	cdq    
  40fc48:	retf   
  40fc49:	sbb    DWORD PTR [edi-0x20c25482],esi
  40fc4f:	pop    edx
  40fc50:	sti    
  40fc51:	dec    edx
  40fc52:	aad    0x77
  40fc54:	dec    edx
  40fc55:	mov    bh,BYTE PTR [eax]
  40fc57:	pop    ds
  40fc58:	mov    eax,ds:0xd6077e2a
  40fc5d:	mov    ebx,0x2c7ec039
  40fc62:	cmp    eax,0x77764fc3
  40fc67:	pop    esi
  40fc68:	sbb    DWORD PTR [ebx],ecx
  40fc6a:	pop    esi
  40fc6b:	popa   
  40fc6c:	rcr    DWORD PTR [ebx+ebp*2+0x12],cl
  40fc70:	xor    bh,BYTE PTR [esi]
  40fc72:	setne  al
  40fc75:	test   eax,0x3b5b5473
  40fc7a:	mov    dl,0xee
  40fc7c:	stos   BYTE PTR es:[edi],al
  40fc7d:	jl     0x40fc0e
  40fc7f:	out    dx,eax
  40fc80:	add    ch,bl
  40fc82:	adc    BYTE PTR [ecx-0x5da84ccb],dl
  40fc88:	xchg   ebx,eax
  40fc89:	loopne 0x40fc64
  40fc8b:	fimul  DWORD PTR [ebx-0x55c0ca6a]
  40fc91:	js     0x40fce7
  40fc93:	mov    ds:0xa5430853,eax
  40fc98:	pop    ecx
  40fc99:	ret    0x7783
  40fc9c:	aas    
  40fc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc9e:	sub    cl,BYTE PTR [edx+0x7db313c7]
  40fca4:	xchg   BYTE PTR [ebx+eax*2],al
  40fca7:	or     al,BYTE PTR [ebx-0x3346ae48]
  40fcad:	pop    ebx
  40fcae:	outs   dx,DWORD PTR ds:[esi]
  40fcaf:	jbe    0x40fc61
  40fcb1:	in     eax,0xec
  40fcb3:	mov    edi,ecx
  40fcb5:	xlat   BYTE PTR cs:[ebx]
  40fcb7:	fcom   QWORD PTR [ebx]
  40fcb9:	jg     0x40fcd7
  40fcbb:	mov    ebx,0x4ba0921e
  40fcc0:	test   al,0x95
  40fcc2:	in     al,0xec
  40fcc4:	pop    esi
  40fcc5:	dec    ebp
  40fcc6:	lock xor DWORD PTR [edi],eax
  40fcc9:	loopne 0x40fcfa
  40fccb:	push   eax
  40fccc:	int3   
  40fccd:	sbb    DWORD PTR ds:0x8da711e7,0x62
  40fcd4:	mov    esi,DWORD PTR ds:0x2c9d4e51
  40fcda:	outs   dx,DWORD PTR ds:[esi]
  40fcdb:	fsubr  st(4),st
  40fcdd:	mov    ah,0xae
  40fcdf:	push   edi
  40fce0:	add    al,BYTE PTR ds:0xc2ab3cb3
  40fce6:	add    al,0x23
  40fce8:	sbb    eax,0x7cbbe5a3
  40fced:	ds pop ecx
  40fcef:	sub    cl,BYTE PTR [eax+0x1f3641be]
  40fcf5:	sub    DWORD PTR [edi+0x22dfa0a7],ecx
  40fcfb:	cmp    ch,BYTE PTR ds:0xae090858
  40fd01:	adc    BYTE PTR [edi-0x4b174df1],ch
  40fd07:	lds    ecx,FWORD PTR [ecx-0x33]
  40fd0a:	icebp  
  40fd0b:	into   
  40fd0c:	aam    0xb5
  40fd0e:	mov    al,ds:0xffb9c5f6
  40fd13:	(bad)  
  40fd14:	fdivrp st(0),st
  40fd16:	dec    ebp
  40fd17:	outs   dx,DWORD PTR ds:[esi]
  40fd18:	mov    dl,0x47
  40fd1a:	iret   
  40fd1b:	pop    edi
  40fd1c:	jne    0x40fd27
  40fd1e:	dec    edx
  40fd1f:	or     al,0x2
  40fd21:	adc    ecx,esi
  40fd23:	xchg   esp,eax
  40fd24:	sar    BYTE PTR [edx+0x7a],0x10
  40fd28:	pop    ss
  40fd29:	in     al,dx
  40fd2a:	sbb    eax,0xd962ddf5
  40fd2f:	sti    
  40fd30:	mov    ds:0x775a0537,eax
  40fd35:	addr16 and dh,cl
  40fd38:	jl     0x40fd4e
  40fd3a:	jnp    0x40fd36
  40fd3c:	sahf   
  40fd3d:	call   0xd9c16253
  40fd42:	xchg   al,ah
  40fd44:	repz jmp 0x40fd16
  40fd47:	(bad)  
  40fd48:	sub    edi,eax
  40fd4a:	pop    ss
  40fd4b:	jmp    0x40fced
  40fd4d:	js     0x40fd3a
  40fd4f:	aad    0x13
  40fd51:	int    0xb8
  40fd53:	and    dh,dl
  40fd55:	inc    eax
  40fd56:	dec    edx
  40fd57:	ds js  0x40fd52
  40fd5a:	sar    BYTE PTR [edi],1
  40fd5c:	in     al,dx
  40fd5d:	cmp    al,0xbb
  40fd5f:	mov    eax,ds:0x17e9022e
  40fd64:	sar    DWORD PTR [ebx-0x15f2c762],1
  40fd6a:	lds    esp,FWORD PTR [ebx]
  40fd6c:	lahf   
  40fd6d:	push   esp
  40fd6e:	leave  
  40fd6f:	jle    0x40fd8e
  40fd71:	int3   
  40fd72:	mov    ebp,esp
  40fd74:	add    DWORD PTR [ebx-0x37],esi
  40fd77:	test   al,0xfb
  40fd79:	ins    DWORD PTR es:[edi],dx
  40fd7a:	pop    ds
  40fd7b:	cdq    
  40fd7c:	dec    eax
  40fd7d:	mov    eax,ds:0xb286d0bf
  40fd82:	mov    esp,0x71e67bc1
  40fd87:	sti    
  40fd88:	out    dx,eax
  40fd89:	out    0x56,eax
  40fd8b:	jmp    0x9f17fd5b
  40fd90:	inc    eax
  40fd91:	(bad)  
  40fd92:	jb     0x40fd97
  40fd94:	(bad)  
  40fd95:	iret   
  40fd96:	inc    esp
  40fd98:	and    ebp,DWORD PTR [ebx]
  40fd9a:	sbb    BYTE PTR [eax],0x9b
  40fd9d:	mov    dl,0x56
  40fd9f:	stc    
  40fda0:	ins    BYTE PTR es:[edi],dx
  40fda1:	dec    ebx
  40fda2:	dec    eax
  40fda3:	cwde   
  40fda4:	push   0x30
  40fda6:	xchg   ebx,eax
  40fda7:	and    edx,DWORD PTR [ebx]
  40fda9:	inc    esp
  40fdaa:	lds    ebx,FWORD PTR [ebx]
  40fdac:	or     ebp,DWORD PTR [edi-0x1251700f]
  40fdb2:	inc    esp
  40fdb3:	(bad)  
  40fdb4:	fild   DWORD PTR [edi+0x7]
  40fdb7:	dec    ecx
  40fdb8:	(bad)  
  40fdb9:	mov    edi,0xb1b9c892
  40fdbe:	mov    dl,0x77
  40fdc0:	sbb    eax,0x73296965
  40fdc6:	or     ebp,DWORD PTR [edx-0x1fb49ff4]
  40fdcc:	xchg   ecx,eax
  40fdcd:	pop    ebx
  40fdce:	call   0x7825:0xbd56e62b
  40fdd5:	xchg   esp,eax
  40fdd6:	and    eax,0xa84186d6
  40fddb:	adc    al,0xc1
  40fddd:	and    edi,DWORD PTR [edi]
  40fddf:	mov    bh,0xc1
  40fde1:	cs int 0xed
  40fde4:	xchg   edi,ebx
  40fde6:	sbb    BYTE PTR [edx+edx*8+0x6b],ah
  40fdea:	sar    DWORD PTR [esi],cl
  40fdec:	mov    ss,WORD PTR [ecx+0x78a7fb54]
  40fdf2:	hlt    
  40fdf3:	inc    ecx
  40fdf4:	pushf  
  40fdf5:	cld    
  40fdf6:	push   esi
  40fdf7:	push   esp
  40fdf8:	xchg   BYTE PTR [edx+0x6b],ah
  40fdfb:	jnp    0x40fddf
  40fdfd:	sbb    al,0x7c
  40fdff:	adc    al,0xf9
  40fe01:	push   eax
  40fe02:	pop    ds
  40fe03:	(bad)  
  40fe05:	out    dx,eax
  40fe06:	cmp    ch,al
  40fe08:	push   esi
  40fe09:	jns    0x40fe32
  40fe0b:	outs   dx,BYTE PTR ds:[esi]
  40fe0c:	jmp    0x9d37790d
  40fe11:	sbb    DWORD PTR [ebp+0x61],eax
  40fe14:	das    
  40fe15:	cs inc eax
  40fe17:	mov    dl,BYTE PTR [eax]
  40fe19:	pusha  
  40fe1a:	jbe    0x40fe56
  40fe1c:	iret   
  40fe1d:	jp     0x40fe15
  40fe1f:	jo     0x40fdc9
  40fe21:	out    dx,eax
  40fe22:	adc    ebx,edx
  40fe24:	and    al,0x59
  40fe26:	jb     0x40fdcc
  40fe28:	pop    esi
  40fe29:	pop    ss
  40fe2a:	dec    esi
  40fe2b:	and    al,0xf7
  40fe2d:	add    ecx,esp
  40fe2f:	aaa    
  40fe30:	sbb    DWORD PTR [esi],edx
  40fe32:	retf   
  40fe33:	cmc    
  40fe34:	sbb    eax,0x70968755
  40fe39:	mov    dl,BYTE PTR [esi]
  40fe3b:	div    BYTE PTR [esi]
  40fe3d:	xchg   ebp,eax
  40fe3e:	jle    0x40fe23
  40fe40:	mul    bh
  40fe42:	loopne 0x40feb8
  40fe44:	push   edi
  40fe45:	into   
  40fe46:	or     BYTE PTR [eax+0x75],al
  40fe49:	mov    bh,0xd8
  40fe4b:	sbb    al,0xf
  40fe4d:	and    ah,BYTE PTR [ebx+0x11eb0fa5]
  40fe53:	push   0xffffffff
  40fe55:	or     bh,cl
  40fe57:	jbe    0x40fe1e
  40fe59:	inc    ecx
  40fe5a:	sahf   
  40fe5b:	mov    dh,0x55
  40fe5d:	add    al,0xf2
  40fe5f:	pop    esp
  40fe60:	and    eax,0xadd7b539
  40fe65:	mov    dh,0x4c
  40fe67:	and    DWORD PTR [edi-0x1d],eax
  40fe6a:	hlt    
  40fe6b:	add    al,0x47
  40fe6d:	loopne 0x40fe01
  40fe6f:	ud0    esi,DWORD PTR [esi+0x28921349]
  40fe76:	sbb    DWORD PTR [edx],ebx
  40fe78:	xchg   ebp,eax
  40fe79:	ins    BYTE PTR es:[edi],dx
  40fe7a:	imul   edx,DWORD PTR [edx-0x54],0x55d008cf
  40fe81:	dec    ebx
  40fe82:	cmp    ebx,DWORD PTR [ebp+0x14fa815a]
  40fe88:	ret    
  40fe89:	cli    
  40fe8a:	call   0xaf299b9f
  40fe8f:	sub    BYTE PTR [edi+0x1c],bh
  40fe92:	(bad)  
  40fe93:	push   esp
  40fe94:	push   ebx
  40fe95:	xor    DWORD PTR [esi+0x3],ecx
  40fe98:	sub    DWORD PTR [ebp+edx*8-0x49],ebp
  40fe9c:	jb     0x40fe47
  40fe9e:	fild   QWORD PTR [ebp-0x23]
  40fea1:	ja     0x40feab
  40fea3:	xlat   BYTE PTR ds:[ebx]
  40fea4:	(bad)  
  40fea6:	xchg   ebp,eax
  40fea7:	(bad)  
  40fea8:	popf   
  40fea9:	enter  0xb4b8,0x82
  40fead:	ds aaa 
  40feaf:	mov    ah,BYTE PTR ds:0x13f79f90
  40feb5:	xchg   BYTE PTR [edi-0x79],bh
  40feb8:	sbb    ecx,DWORD PTR [ebx+0x219673cb]
  40febe:	sbb    ecx,edi
  40fec0:	stos   DWORD PTR es:[edi],eax
  40fec1:	cwde   
  40fec2:	test   bl,0x70
  40fec5:	adc    al,0x8d
  40fec7:	mov    ?,WORD PTR [eax+0x4f797437]
  40fecd:	js     0x40ff15
  40fecf:	retf   
  40fed0:	rol    BYTE PTR [edx],1
  40fed2:	loope  0x40fe66
  40fed4:	inc    esp
  40fed5:	push   es
  40fed6:	std    
  40fed7:	xor    esp,DWORD PTR [ebx+eiz*2-0x4049698b]
  40fede:	cmp    BYTE PTR [esi],dh
  40fee0:	repnz ins BYTE PTR es:[edi],dx
  40fee2:	dec    edx
  40fee3:	inc    esi
  40fee4:	xchg   ebx,eax
  40fee5:	mov    cs,edi
  40fee7:	fdiv   DWORD PTR [ebx+ebx*1-0x62]
  40feeb:	iret   
  40feec:	outs   dx,DWORD PTR ds:[esi]
  40feed:	xchg   BYTE PTR [edi+ebx*1],cl
  40fef0:	adc    eax,0x2f313c80
  40fef5:	mov    ds:0x92c88f58,eax
  40fefa:	nop
  40fefb:	jnp    0x40ff1b
  40fefd:	pop    ds
  40fefe:	or     ebx,DWORD PTR [edx-0x6a]
  40ff01:	push   ecx
  40ff02:	xchg   esp,esp
  40ff04:	jb     0x40ff75
  40ff06:	sub    ebx,ecx
  40ff08:	aad    0x15
  40ff0a:	push   ecx
  40ff0b:	xchg   BYTE PTR [esp+edx*2+0x7a],cl
  40ff0f:	and    BYTE PTR [esi-0x5362d3b5],0x58
  40ff16:	push   esp
  40ff17:	out    dx,eax
  40ff18:	jae    0x40ff83
  40ff1a:	mov    ?,WORD PTR [edx]
  40ff1c:	jne    0x40ff6b
  40ff1e:	mov    WORD PTR [ebp+0x78],fs
  40ff21:	pop    eax
  40ff22:	loop   0x40ff08
  40ff24:	sub    DWORD PTR [esi+0x51],edx
  40ff27:	pusha  
  40ff28:	push   ebp
  40ff29:	inc    ecx
  40ff2a:	dec    ebx
  40ff2b:	push   0xa0dca63
  40ff30:	push   ss
  40ff31:	adc    al,0x34
  40ff33:	scas   al,BYTE PTR es:[edi]
  40ff34:	lods   al,BYTE PTR ds:[esi]
  40ff35:	(bad)  
  40ff36:	push   esi
  40ff37:	add    dh,BYTE PTR [ebx]
  40ff39:	xor    DWORD PTR [esi],edx
  40ff3b:	inc    esp
  40ff3c:	icebp  
  40ff3d:	scas   eax,DWORD PTR es:[edi]
  40ff3e:	xor    bl,BYTE PTR [ebx]
  40ff40:	out    dx,al
  40ff41:	or     ecx,DWORD PTR [ebp+edx*8+0x31]
  40ff45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff46:	and    al,0xa4
  40ff48:	dec    edi
  40ff49:	xlat   BYTE PTR ds:[ebx]
  40ff4a:	rol    BYTE PTR [eax+0x4a],cl
  40ff4d:	xchg   ebp,eax
  40ff4e:	test   BYTE PTR [edx],ah
  40ff50:	xor    al,0x5f
  40ff52:	xchg   edx,eax
  40ff53:	mov    al,0x22
  40ff55:	arpl   WORD PTR [eax-0x7529ec26],bx
  40ff5b:	or     BYTE PTR [eax+ebx*4],ch
  40ff5e:	xor    cl,al
  40ff60:	pop    eax
  40ff61:	into   
  40ff62:	icebp  
  40ff63:	fcomp  QWORD PTR [ebx]
  40ff65:	and    bh,cl
  40ff67:	div    BYTE PTR [edx-0x7083a4d4]
  40ff6d:	add    al,0x8c
  40ff6f:	mov    bh,0x6d
  40ff71:	xchg   esp,eax
  40ff72:	div    DWORD PTR [ecx+0x4093c457]
  40ff78:	adc    dl,cl
  40ff7a:	sbb    al,0x46
  40ff7c:	and    al,BYTE PTR [ecx-0xc]
  40ff7f:	das    
  40ff80:	xchg   esp,eax
  40ff81:	sbb    DWORD PTR [eax],edi
  40ff83:	shr    DWORD PTR [esi],cl
  40ff85:	dec    ecx
  40ff86:	xchg   DWORD PTR [edx-0x438063fc],eax
  40ff8c:	dec    eax
  40ff8d:	xchg   ebp,eax
  40ff8e:	loope  0x40ffda
  40ff90:	fiadd  WORD PTR ds:0x600cfcbb
  40ff96:	repz mov ah,0x14
  40ff99:	aaa    
  40ff9a:	jle    0x40ff2d
  40ff9c:	ins    DWORD PTR es:[edi],dx
  40ff9d:	pop    esp
  40ff9e:	fld    QWORD PTR [ebp-0x54b54eb5]
  40ffa4:	sub    eax,0xd476dbce
  40ffa9:	jg     0x40ff2f
  40ffab:	xlat   BYTE PTR ds:[ebx]
  40ffac:	or     eax,0x5b929ff6
  40ffb1:	jmp    0x4d00888d
  40ffb6:	mov    al,ds:0x588256f7
  40ffbb:	add    BYTE PTR fs:[eiz*1-0x653f33f4],ah
  40ffc3:	jp     0x40ffb1
  40ffc5:	mov    esp,0x12de04c0
  40ffca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffcb:	push   ecx
  40ffcc:	pusha  
  40ffcd:	push   cs
  40ffce:	pop    esp
  40ffcf:	gs mov ebp,0x869274e6
  40ffd5:	pop    ecx
  40ffd6:	sbb    al,0x68
  40ffd8:	push   eax
  40ffd9:	push   esp
  40ffda:	add    esp,DWORD PTR [esi+esi*8-0x71248dc3]
  40ffe1:	xchg   ebx,eax
  40ffe2:	cmp    dh,cl
  40ffe4:	jp     0x40ffbe
  40ffe6:	iret   
  40ffe7:	mov    dh,0x57
  40ffe9:	pop    esi
  40ffea:	mov    edx,0xc8bb60e6
  40ffef:	mov    edx,DWORD PTR [edi]
  40fff1:	xchg   edx,eax
  40fff2:	cli    
  40fff3:	inc    ecx
  40fff4:	mov    ecx,0xb4fbcae
  40fff9:	push   0xffffffca
  40fffb:	bound  esp,QWORD PTR [ebp+0x3234de82]
  410001:	inc    ecx
  410002:	sub    edi,esi
  410004:	ds stos DWORD PTR es:[edi],eax
  410006:	pop    ss
  410007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410008:	(bad)  
  410009:	fstp   DWORD PTR [edx+0x65]
  41000c:	and    DWORD PTR ds:0x7fa74031,0x626765b
  410016:	mov    WORD PTR ds:0x1ca45640,?
  41001c:	js     0x40ffb1
  41001e:	inc    eax
  41001f:	bound  ebp,QWORD PTR [ebx]
  410021:	fmul   DWORD PTR [ebx+0x312e6494]
  410027:	(bad)  
  410028:	xor    BYTE PTR [esi-0xa8504e],ch
  41002e:	mov    BYTE PTR [esi-0x123cffcf],ch
  410034:	and    eax,0x3e59e2b1
  410039:	pop    ss
  41003a:	adc    ch,BYTE PTR [ecx+ebp*4+0x7c]
  41003e:	pop    ss
  41003f:	and    DWORD PTR [ebx-0x41044397],ecx
  410045:	inc    ecx
  410046:	jbe    0x4100b8
  410048:	enter  0xa714,0xe2
  41004c:	rcl    ecx,0xd8
  41004f:	jnp    0x41007f
  410051:	dec    ebx
  410052:	mov    al,0xb4
  410054:	jne    0x410046
  410056:	out    0x7d,al
  410058:	adc    esp,0x2e719114
  41005e:	dec    edx
  41005f:	dec    edi
  410060:	test   BYTE PTR [esi],dh
  410062:	and    ah,BYTE PTR [edx]
  410064:	sub    al,0xf4
  410066:	pop    ebx
  410067:	stos   BYTE PTR es:[edi],al
  410068:	icebp  
  410069:	std    
  41006a:	jg     0x4100cb
  41006c:	pop    ss
  41006d:	in     al,0x3a
  41006f:	dec    esp
  410070:	xlat   BYTE PTR ds:[ebx]
  410071:	loope  0x4100c1
  410073:	outs   dx,DWORD PTR ds:[esi]
  410074:	dec    ecx
  410075:	popa   
  410076:	pop    ecx
  410077:	sub    BYTE PTR [ebx-0x17c2a3d5],0x5f
  41007e:	in     eax,0x5
  410080:	call   0x7daffe12
  410085:	jne    0x4100c2
  410087:	jl     0x41009b
  410089:	xor    bh,cl
  41008b:	repnz cmc 
  41008d:	ret    0x32d4
  410090:	mov    ebx,0x21c8abee
  410095:	push   cs
  410096:	cmp    DWORD PTR [esi-0x3614ea51],0xb5aa61d7
  4100a0:	mov    WORD PTR [edx+0x11929731],?
  4100a6:	adc    ebp,DWORD PTR [ebp+0x10729286]
  4100ac:	cmp    al,0xd1
  4100ae:	pop    esi
  4100af:	ss inc edi
  4100b1:	loope  0x41010e
  4100b3:	jnp    0x41004c
  4100b5:	es call 0x6f8a:0xa958164
  4100bd:	pop    edi
  4100be:	jge    0x4100ce
  4100c0:	inc    ecx
  4100c1:	icebp  
  4100c2:	inc    edi
  4100c3:	loop   0x4100c3
  4100c5:	inc    esp
  4100c6:	test   eax,0x33eb122b
  4100cb:	loope  0x410128
  4100cd:	fwait
  4100ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100cf:	jns    0x41007c
  4100d1:	cmp    ecx,DWORD PTR [ecx]
  4100d3:	sub    al,0x5f
  4100d5:	or     dl,dh
  4100d7:	aas    
  4100d8:	adc    esi,edi
  4100da:	adc    eax,0x999d7fbe
  4100df:	sbb    BYTE PTR [edi-0x8],dl
  4100e2:	clc    
  4100e3:	ror    BYTE PTR [esi+0x6890395c],cl
  4100e9:	mov    eax,ds:0x7eb40ad0
  4100ee:	or     BYTE PTR [ecx+0x39],dh
  4100f1:	aam    0xf4
  4100f3:	in     eax,0x28
  4100f5:	mov    dh,0x58
  4100f7:	dec    edi
  4100f8:	int3   
  4100f9:	loope  0x4100da
  4100fb:	add    BYTE PTR [esi+0xa8fc7c2],bl
  410101:	sbb    ebp,DWORD PTR [edi-0x43]
  410104:	fld    TBYTE PTR [eax+0x32]
  410107:	cmp    DWORD PTR [ebp-0x71],0x3a
  41010b:	lahf   
  41010c:	adc    al,0x96
  41010e:	pusha  
  41010f:	pop    ebp
  410110:	pop    esp
  410111:	sbb    DWORD PTR [edi],eax
  410113:	loopne 0x410154
  410115:	inc    esp
  410116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410117:	pushf  
  410118:	dec    esp
  410119:	cs pop ebx
  41011b:	and    dl,cl
  41011d:	inc    edi
  41011e:	pop    es
  41011f:	pop    edx
  410120:	mov    esp,0xbd4bde1f
  410125:	in     eax,dx
  410126:	jnp    0x410180
  410128:	fld    QWORD PTR [edi+0x45]
  41012b:	xor    esi,esi
  41012d:	orps   xmm3,XMMWORD PTR [ecx+esi*8-0x1b]
  410132:	jmp    0x41016a
  410134:	arpl   WORD PTR [edx],cx
  410136:	pop    ebp
  410137:	retf   
  410138:	xchg   esi,eax
  410139:	mov    cl,0x4b
  41013b:	mov    DWORD PTR [ebp+ebx*8-0x55],ebp
  41013f:	cmp    edi,esi
  410141:	stos   BYTE PTR es:[edi],al
  410142:	nop
  410143:	sub    al,0x63
  410145:	enter  0x1ebe,0xc4
  410149:	or     dh,dl
  41014b:	sub    al,0x6
  41014d:	pop    edx
  41014e:	sbb    eax,0xd4c11bc7
  410153:	jbe    0x4101c8
  410155:	dec    edx
  410156:	out    0x88,eax
  410158:	aam    0xd8
  41015a:	push   es
  41015b:	nop
  41015c:	retf   
  41015d:	sbb    al,0xbd
  41015f:	pushf  
  410160:	icebp  
  410161:	fsubrp st(0),st
  410163:	lods   eax,DWORD PTR ds:[esi]
  410164:	sbb    eax,0x82e39d5e
  410169:	pop    esp
  41016a:	or     eax,0xa977e071
  41016f:	lock loope 0x4101a6
  410172:	pop    ebp
  410173:	inc    esp
  410174:	push   ebp
  410175:	mov    bl,0xdd
  410177:	adc    ah,BYTE PTR [eax]
  410179:	addr16 and edi,ebp
  41017c:	call   0xee66:0xa6b34159
  410183:	xchg   esp,eax
  410184:	aad    0x6a
  410186:	test   al,0xe1
  410188:	fcomp  DWORD PTR [esi+ebx*1-0x62]
  41018c:	out    dx,al
  41018d:	or     DWORD PTR [ecx+edi*4+0x67],edx
  410191:	aad    0x44
  410193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410194:	lock es faddp st(3),st
  410198:	push   cs
  410199:	pushf  
  41019a:	cmp    eax,0x5075213e
  41019f:	or     BYTE PTR [esi-0x8],0xe
  4101a3:	inc    ecx
  4101a4:	jns    0x410175
  4101a6:	push   ds
  4101a7:	adc    al,0x5b
  4101a9:	mov    ah,0x20
  4101ab:	ja     0x4101d7
  4101ad:	jecxz  0x410149
  4101af:	adc    al,0x55
  4101b1:	mov    ebp,0xf96821ef
  4101b6:	xchg   ecx,eax
  4101b7:	pop    ecx
  4101b8:	mov    ebp,?
  4101ba:	inc    esp
  4101bb:	jecxz  0x4101a2
  4101bd:	xchg   BYTE PTR [ebx+0x786a1a99],ah
  4101c3:	shr    ecx,cl
  4101c5:	mov    DWORD PTR [ebx-0x4],edx
  4101c8:	push   es
  4101c9:	(bad)  
  4101ca:	push   cs
  4101cb:	xor    edx,DWORD PTR [eax+ebp*8]
  4101ce:	mov    dl,0xa4
  4101d0:	lds    ebx,FWORD PTR [ebp+0x5d]
  4101d3:	loop   0x41015c
  4101d5:	sbb    al,0xc9
  4101d7:	add    esp,DWORD PTR [esi]
  4101d9:	(bad)  [esi+0x1fc00222]
  4101df:	mov    esp,0x4f618cba
  4101e4:	test   BYTE PTR [esi-0x2ace65f1],dl
  4101ea:	cld    
  4101eb:	push   esi
  4101ec:	fcom   DWORD PTR [esi]
  4101ee:	lods   al,BYTE PTR ds:[esi]
  4101ef:	jmp    0xeaa8bf4d
  4101f4:	sti    
  4101f5:	inc    edi
  4101f6:	int3   
  4101f7:	sbb    al,0xd8
  4101f9:	ds xchg ebp,eax
  4101fb:	dec    esp
  4101fc:	nop
  4101fd:	fidiv  DWORD PTR [ebp-0x4]
  410200:	mov    bh,0x74
  410202:	and    DWORD PTR [bp+si-0x32],ebp
  410206:	mov    cl,0x84
  410208:	dec    ebx
  410209:	shr    dl,1
  41020b:	adc    eax,DWORD PTR [ecx]
  41020d:	jp     0x4101e5
  41020f:	(bad)  
  410210:	mov    esi,edi
  410212:	push   ss
  410213:	pop    es
  410214:	mul    BYTE PTR [ebp+ebx*1-0x1]
  410218:	ins    DWORD PTR es:[edi],dx
  410219:	stos   BYTE PTR es:[edi],al
  41021a:	scas   eax,DWORD PTR es:[edi]
  41021b:	mov    ecx,DWORD PTR [eax+0x54767e]
  410221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410222:	icebp  
  410223:	jmp    0xa85f9e0f
  410228:	cmp    dh,BYTE PTR [edx]
  41022a:	mov    edi,0x8ce5b8e0
  41022f:	fimul  WORD PTR [esi-0x4aae6de4]
  410235:	clc    
  410236:	mov    eax,DWORD PTR [eax-0xd]
  410239:	jmp    0x410285
  41023b:	jg     0x4101d0
  41023d:	clc    
  41023e:	xor    eax,0x51881e89
  410243:	inc    ebp
  410244:	inc    ebx
  410245:	in     al,dx
  410246:	jg     0x41025f
  410248:	inc    eax
  410249:	mov    dh,0x38
  41024b:	push   ecx
  41024c:	ror    DWORD PTR cs:[edx-0xffdb03a],0x32
  410254:	and    al,0xa1
  410256:	xor    esp,DWORD PTR [esi]
  410258:	push   0xb84fb3e7
  41025d:	push   edi
  41025e:	xchg   ecx,eax
  41025f:	(bad)  
  410260:	dec    ecx
  410261:	jne    0x41028e
  410263:	dec    ecx
  410264:	dec    edx
  410265:	mov    esi,0xf18e2007
  41026a:	mov    al,0xcb
  41026c:	out    0xbb,eax
  41026e:	sub    esi,DWORD PTR [edx-0x7c]
  410271:	stos   BYTE PTR es:[edi],al
  410272:	add    eax,0x7a004802
  410277:	fnstsw WORD PTR [eax+0x18]
  41027a:	enter  0x4c4c,0xfb
  41027e:	std    
  41027f:	ins    DWORD PTR es:[edi],dx
  410280:	sti    
  410281:	add    eax,DWORD PTR ss:[ebp+0x12]
  410285:	sub    BYTE PTR [ebx],cl
  410287:	dec    edi
  410288:	sti    
  410289:	and    ah,dl
  41028b:	fidiv  WORD PTR [eax-0xf]
  41028e:	dec    esp
  41028f:	mov    ecx,0x56b15ea
  410294:	stos   BYTE PTR es:[edi],al
  410295:	out    0x41,al
  410297:	pop    esi
  410298:	(bad)  
  410299:	pop    edi
  41029a:	in     eax,0xb7
  41029c:	push   edx
  41029d:	mov    eax,0xa6296eeb
  4102a2:	mov    edi,0xea58f6ca
  4102a7:	jne    0x4102db
  4102a9:	jecxz  0x410314
  4102ab:	pop    edx
  4102ac:	push   edx
  4102ad:	xor    esi,DWORD PTR [eax+0x5da9d3fe]
  4102b3:	es into 
  4102b5:	(bad)  
  4102b6:	cli    
  4102b7:	inc    edi
  4102b8:	jp     0x410334
  4102ba:	scas   eax,DWORD PTR es:[edi]
  4102bb:	ja     0x4102f1
  4102bd:	ins    DWORD PTR es:[edi],dx
  4102be:	mov    ah,0xfd
  4102c0:	sub    ebp,DWORD PTR [edx+0x65316bfe]
  4102c6:	mov    DWORD PTR [ebx-0xe],edi
  4102c9:	out    0xc2,eax
  4102cb:	xchg   DWORD PTR [edi-0x510abb87],ebp
  4102d1:	xchg   DWORD PTR [ebx+eiz*2+0x25],ebx
  4102d5:	xchg   ebx,eax
  4102d6:	dec    esp
  4102d7:	out    0x5b,al
  4102d9:	sti    
  4102da:	int    0x55
  4102dc:	and    eax,0xe61dccec
  4102e1:	adc    dl,ah
  4102e3:	inc    esi
  4102e4:	imul   ecx,esi,0xffffffb5
  4102e7:	jae    0x4102b3
  4102e9:	cmc    
  4102ea:	add    al,0x20
  4102ec:	or     bl,BYTE PTR [esi+0x5e94bc4a]
  4102f2:	in     eax,dx
  4102f3:	adc    BYTE PTR [ecx+0x17f6af0d],0xe
  4102fa:	jmp    0x2b07fd12
  4102ff:	sub    eax,0x8596c7f6
  410304:	sbb    al,0x84
  410306:	xor    edx,ebx
  410308:	loope  0x4102be
  41030a:	repz loope 0x410363
  41030d:	(bad)  
  41030e:	xchg   ebp,eax
  41030f:	stc    
  410310:	adc    eax,0x90e76187
  410315:	push   cs
  410316:	xor    al,0xee
  410318:	mov    eax,0xfbd7d153
  41031d:	(bad)  
  41031f:	or     DWORD PTR [eax+0x7b],esi
  410322:	call   0x3698:0x2c5623fd
  410329:	sbb    eax,0x13a12b38
  41032e:	sbb    BYTE PTR [ebx-0x1b0e6268],0xa9
  410335:	mov    bl,0x7d
  410337:	push   edi
  410338:	cld    
  410339:	mov    esi,0x59af2f69
  41033e:	out    0xb9,eax
  410340:	or     al,0x43
  410342:	loopne 0x41033f
  410344:	jno    0x4102f0
  410346:	fstp   DWORD PTR [eax-0xd]
  410349:	loop   0x410391
  41034b:	cli    
  41034c:	sub    esi,edi
  41034e:	hlt    
  41034f:	mov    cl,0xcd
  410351:	xchg   edx,eax
  410352:	add    cl,cl
  410354:	aas    
  410355:	mov    eax,0x47373690
  41035a:	test   al,cl
  41035c:	cmp    al,0xbe
  41035e:	add    ebx,ecx
  410360:	cs scas eax,DWORD PTR es:[edi]
  410362:	xchg   esp,eax
  410363:	pop    esi
  410364:	mov    BYTE PTR [edx+0x338e85c4],dh
  41036a:	pop    esi
  41036b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41036c:	iret   
  41036d:	dec    ebx
  41036e:	test   BYTE PTR [ebx],al
  410370:	adc    dh,bl
  410372:	fistp  DWORD PTR [ebx]
  410374:	push   ss
  410375:	test   al,0x2b
  410377:	mov    ?,ebp
  410379:	les    esi,FWORD PTR [edx-0x3f]
  41037c:	mov    edi,0x725d038d
  410381:	lahf   
  410382:	mov    DWORD PTR [edx+0x60684213],edi
  410388:	enter  0x4401,0x54
  41038c:	shl    DWORD PTR [edi],0x3f
  41038f:	loop   0x41032d
  410391:	and    DWORD PTR [edx-0x3b129be7],esp
  410397:	mov    al,ds:0xa19163d5
  41039c:	clc    
  41039d:	jp     0x410362
  41039f:	fucomp st(4)
  4103a1:	cmp    BYTE PTR [ecx+eax*4-0x52],ah
  4103a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103a6:	jbe    0x4103e3
  4103a8:	dec    edx
  4103a9:	adc    DWORD PTR [ecx+0x1],0x54
  4103ad:	pop    esi
  4103ae:	push   eax
  4103af:	mov    BYTE PTR [edx],0xb0
  4103b2:	cmp    dh,BYTE PTR [edi+0x46c7fba5]
  4103b8:	outs   dx,BYTE PTR ds:[esi]
  4103b9:	test   esi,edi
  4103bb:	sub    edi,DWORD PTR [esp+edx*1+0x32]
  4103bf:	push   0x3f
  4103c1:	pop    ecx
  4103c2:	and    ebx,DWORD PTR [edx+0x45]
  4103c5:	arpl   di,sp
  4103c7:	jne    0x410396
  4103c9:	stc    
  4103ca:	xor    dh,BYTE PTR [eax-0x6c]
  4103cd:	adc    BYTE PTR [ecx-0x561b0fb4],bh
  4103d3:	iret   
  4103d4:	inc    ebp
  4103d5:	pop    edx
  4103d6:	adc    cl,dh
  4103d8:	ficom  DWORD PTR ds:0x843ba899
  4103de:	rcr    ebp,cl
  4103e0:	div    DWORD PTR [ebx-0x1d]
  4103e3:	sbb    eax,0xc4105dbc
  4103e8:	loop   0x410446
  4103ea:	and    bl,ah
  4103ec:	in     al,0xa3
  4103ee:	sub    al,0xe
  4103f0:	adc    BYTE PTR [ebx],dl
  4103f2:	scas   eax,DWORD PTR es:[edi]
  4103f3:	xchg   ecx,eax
  4103f4:	mov    edx,0x210a630d
  4103f9:	dec    esp
  4103fa:	std    
  4103fb:	sub    DWORD PTR [esi-0x5fd55c49],ebp
  410401:	pop    edx
  410402:	in     eax,0xe2
  410404:	push   ds
  410405:	(bad)  
  410406:	mov    ds:0x78d71f16,al
  41040b:	fdiv   st(6),st
  41040d:	or     esp,DWORD PTR [edx+ebp*4-0x580fd974]
  410414:	cmp    eax,esi
  410416:	ret    0x430e
  410419:	or     al,0xd2
  41041b:	jge    0x4103d3
  41041d:	or     DWORD PTR [esi],0x7a41e08
  410423:	push   esi
  410424:	add    DWORD PTR [ebx-0x74db195d],ecx
  41042a:	cli    
  41042b:	retf   0x8135
  41042e:	in     eax,dx
  41042f:	push   cs
  410430:	xlat   BYTE PTR ds:[ebx]
  410431:	xor    bl,BYTE PTR [ebx+0xb]
  410434:	imul   BYTE PTR [ebp-0x101b5632]
  41043a:	jns    0x410466
  41043c:	mov    bh,0x23
  41043e:	mov    eax,0x901d1418
  410443:	ret    0xdd3c
  410446:	push   0xdec1235d
  41044b:	mov    al,ds:0x308eb701
  410450:	stc    
  410451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410452:	adc    BYTE PTR [ecx-0x5736a876],al
  410458:	(bad)  
  410459:	adc    esp,DWORD PTR ds:0x87dbc066
  41045f:	push   ebx
  410460:	inc    ebp
  410461:	(bad)  
  410462:	push   ebp
  410463:	sub    DWORD PTR [edi],ebp
  410465:	stc    
  410466:	rcl    ah,0x94
  410469:	shr    DWORD PTR ds:0x727bf6ff,1
  41046f:	adc    BYTE PTR [ecx],bl
  410471:	push   edi
  410472:	cmp    eax,0xdc5eb28e
  410477:	jo     0x4104f1
  410479:	push   edi
  41047a:	mov    ds:0x60a94641,eax
  41047f:	test   BYTE PTR [ecx],dl
  410481:	or     dl,BYTE PTR [esp+ecx*4]
  410484:	adc    bl,bl
  410486:	xchg   ebp,eax
  410487:	lock shl DWORD PTR [esi+0x7050dc6a],0x1e
  41048f:	test   ebp,eax
  410491:	retf   
  410492:	push   eax
  410493:	xor    ebx,DWORD PTR ds:0xdec89e60
  410499:	xchg   esp,eax
  41049a:	inc    edi
  41049b:	xor    DWORD PTR [ebx+0x2c9fcce1],0x56
  4104a2:	sar    BYTE PTR [esp+0x5c6d86f8],cl
  4104a9:	retf   
  4104aa:	pop    edi
  4104ab:	sti    
  4104ac:	cdq    
  4104ad:	mov    BYTE PTR [edx+0x44f3dd37],ch
  4104b3:	xor    edx,DWORD PTR [esi+0x49]
  4104b6:	dec    esi
  4104b7:	fnstcw WORD PTR [ebx+0x61ebc140]
  4104bd:	in     al,dx
  4104be:	retf   
  4104bf:	bound  ebp,QWORD PTR es:[edi]
  4104c2:	retf   0xe4de
  4104c5:	or     ebp,DWORD PTR [edi]
  4104c7:	leave  
  4104c8:	xchg   ecx,eax
  4104c9:	pusha  
  4104ca:	sbb    BYTE PTR [eax-0x7f55af80],al
  4104d0:	test   ebx,esi
  4104d2:	aas    
  4104d3:	cmp    BYTE PTR [edx+eiz*1-0x49],ah
  4104d7:	cmp    dl,BYTE PTR [edi+0x12]
  4104da:	call   0x9729:0x6204fb46
  4104e1:	ss dec ebx
  4104e3:	mov    ecx,0xe102a5ff
  4104e8:	out    dx,al
  4104e9:	in     eax,0xbc
  4104eb:	icebp  
  4104ec:	sub    esi,DWORD PTR [ebx]
  4104ee:	jae    0x410552
  4104f0:	das    
  4104f1:	dec    esp
  4104f2:	mov    ecx,0x52e84dc7
  4104f7:	xor    BYTE PTR [ecx],0x88
  4104fa:	mov    edi,0xb3e71830
  4104ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410500:	push   esi
  410501:	outs   dx,DWORD PTR ds:[esi]
  410502:	mov    ecx,0x1b0d440f
  410507:	pop    eax
  410508:	push   esi
  410509:	mov    ?,WORD PTR [esi+edi*2+0x4ac701e1]
  410510:	mov    ecx,0x13ce9e22
  410515:	dec    ebp
  410516:	lock inc esi
  410518:	jne    0x410525
  41051a:	cmc    
  41051b:	pushf  
  41051c:	cmc    
  41051d:	inc    ebx
  41051e:	jne    0x41056b
  410520:	mov    ds:0xe1d22682,eax
  410525:	lods   al,BYTE PTR ds:[esi]
  410526:	enter  0x6188,0x45
  41052a:	adc    al,BYTE PTR [ebp+0x6426a983]
  410530:	pop    eax
  410531:	loope  0x4104f4
  410533:	jg     0x410595
  410535:	mov    ecx,0x62f99581
  41053a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41053b:	std    
  41053c:	xchg   ecx,eax
  41053d:	mov    ebp,0xca3a187d
  410542:	mov    ebp,DWORD PTR [ebp+0x2b]
  410545:	shl    DWORD PTR [ecx],cl
  410547:	fwait
  410548:	cmp    ecx,DWORD PTR [ebx+0x38d783a7]
  41054e:	inc    eax
  41054f:	std    
  410550:	daa    
  410551:	scas   eax,DWORD PTR es:[edi]
  410552:	inc    ecx
  410553:	jge    0x410517
  410555:	pop    ds
  410556:	push   eax
  410558:	push   ebx
  410559:	lock in al,0x61
  41055c:	inc    ebx
  41055d:	cmp    eax,DWORD PTR [ebx+0xb]
  410560:	mov    al,0x9a
  410562:	(bad)  
  410563:	jmp    0x41bc:0x5c6c8d9
  41056a:	jp     0x41050f
  41056c:	pop    ebx
  41056d:	xlat   BYTE PTR ds:[ebx]
  41056e:	aas    
  41056f:	aam    0xfb
  410571:	dec    esi
  410572:	xchg   esi,eax
  410573:	pop    ebx
  410574:	pop    ds
  410575:	ds dec esp
  410577:	jg     0x41058a
  410579:	hlt    
  41057a:	cmp    ebx,DWORD PTR [ebx-0x3bfdc180]
  410580:	ja     0x4105df
  410582:	push   es
  410583:	inc    ecx
  410584:	std    
  410585:	sub    BYTE PTR [esi],bh
  410587:	mov    ds:0xca76d21c,eax
  41058c:	xor    DWORD PTR [edx],0x21347b09
  410592:	jl     0x4105ef
  410594:	popa   
  410595:	dec    edx
  410596:	jmp    0xf2f0adb0
  41059b:	lods   eax,DWORD PTR ds:[esi]
  41059c:	(bad)  
  41059d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41059e:	repz jns 0x410545
  4105a1:	jno    0x410540
  4105a3:	popa   
  4105a4:	xchg   esp,eax
  4105a5:	sbb    eax,0x19b9d4b5
  4105aa:	aam    0x82
  4105ac:	les    esi,FWORD PTR [ecx-0x34]
  4105af:	daa    
  4105b0:	adc    al,0xb8
  4105b2:	mov    ebp,0x1eb8e4c4
  4105b7:	jnp    0x410594
  4105b9:	je     0x4105c4
  4105bb:	push   ss
  4105bc:	mov    edx,0xf66a6f98
  4105c1:	dec    edi
  4105c2:	int3   
  4105c3:	(bad)  
  4105c4:	jnp    0x410570
  4105c6:	mov    dh,0x30
  4105c8:	stos   BYTE PTR es:[edi],al
  4105c9:	fisubr WORD PTR [ecx*8-0x6e536cac]
  4105d0:	gs inc edx
  4105d2:	fisubr WORD PTR [ebp+0x7e1a5dec]
  4105d8:	lock rcr BYTE PTR [ecx+edi*2+0x2ed5cc3a],cl
  4105e0:	loope  0x410599
  4105e2:	push   esi
  4105e3:	cmp    eax,0x6471e97d
  4105e8:	dec    ebx
  4105e9:	sub    dl,ch
  4105eb:	mov    edi,0xd6449214
  4105f0:	cdq    
  4105f1:	mov    dh,0x39
  4105f3:	call   0xd9f8:0x3928778f
  4105fa:	int3   
  4105fb:	aas    
  4105fc:	aas    
  4105fd:	fidiv  WORD PTR [edi+edx*1]
  410600:	mov    al,ds:0x8ed3c3d8
  410605:	adc    BYTE PTR [ecx-0x78cb0b70],dh
  41060b:	mov    esi,0x9767c4ef
  410610:	xchg   ecx,eax
  410611:	arpl   bx,bp
  410613:	outs   dx,DWORD PTR ds:[esi]
  410614:	cmp    eax,0x1941fd34
  410619:	loopne 0x41065e
  41061b:	jg     0x4105b0
  41061d:	mov    edx,0x262e8122
  410622:	mov    edi,0x3858d09f
  410627:	pop    edx
  410628:	outs   dx,BYTE PTR ds:[esi]
  410629:	xchg   edx,eax
  41062a:	jg     0x41061f
  41062c:	shl    BYTE PTR [bp+0x12],cl
  410630:	pop    esp
  410632:	mov    esp,0x609d6818
  410637:	jnp    0x410608
  410639:	out    dx,al
  41063a:	call   0x3d02:0x1c875dc
  410641:	scas   al,BYTE PTR es:[edi]
  410642:	jne    0x410630
  410644:	adc    ah,0x48
  410647:	xor    eax,0x194a949b
  41064c:	sub    ch,cl
  41064e:	push   ecx
  41064f:	aaa    
  410650:	jmp    0x3d3bc517
  410655:	out    0x63,eax
  410657:	push   eax
  410658:	das    
  410659:	gs and al,0x8b
  41065c:	push   cs
  41065d:	xor    al,BYTE PTR [ebp+0x5b]
  410660:	mov    al,0x93
  410662:	(bad)  
  410663:	xor    BYTE PTR [eax+0x8],ch
  410666:	sbb    ah,BYTE PTR [ebx]
  410668:	imul   esp,ebp,0xa45158ca
  41066e:	dec    edi
  41066f:	push   ecx
  410670:	lahf   
  410671:	ret    
  410672:	mov    WORD PTR [edi+edx*8],?
  410675:	cmc    
  410676:	test   eax,ebp
  410678:	mov    edi,DWORD PTR [ecx+eiz*8+0x7b]
  41067c:	inc    eax
  41067d:	shr    BYTE PTR [esi],1
  41067f:	sub    dl,BYTE PTR [edi+eiz*8-0x19ae91d5]
  410686:	push   edi
  410687:	adc    DWORD PTR ss:[ebp+0x56],ebp
  41068b:	test   eax,0x98abc9d2
  410690:	out    dx,al
  410691:	and    BYTE PTR [eax+eiz*1+0x6d],ah
  410695:	sub    bl,BYTE PTR [ecx+0x19]
  410698:	push   ecx
  410699:	mov    ds:0xcb28acf8,eax
  41069e:	push   DWORD PTR [edx]
  4106a0:	pop    ss
  4106a1:	xor    BYTE PTR [esi],0xbf
  4106a4:	push   ecx
  4106a5:	mov    ch,0x68
  4106a7:	pop    esi
  4106a8:	dec    ebx
  4106a9:	mov    ebp,0x3cf7db8a
  4106ae:	aaa    
  4106af:	cmp    DWORD PTR [eax+0x68],ebx
  4106b2:	sub    cl,BYTE PTR [edx+esi*4]
  4106b5:	(bad)  
  4106b6:	je     0x410702
  4106b8:	mov    al,0x10
  4106ba:	xchg   ebp,eax
  4106bb:	inc    esp
  4106bc:	jno    0x4106cf
  4106be:	dec    edi
  4106bf:	push   ss
  4106c0:	leave  
  4106c1:	loope  0x4106e9
  4106c3:	mov    ch,0x6d
  4106c5:	fimul  DWORD PTR ds:0x57eb07c9
  4106cb:	xlat   BYTE PTR ds:[ebx]
  4106cc:	aaa    
  4106cd:	outs   dx,DWORD PTR ds:[esi]
  4106ce:	xchg   ebp,eax
  4106cf:	and    eax,0xefd0c342
  4106d4:	or     eax,0x5442f7d0
  4106d9:	adc    al,0xe5
  4106db:	cld    
  4106dc:	out    0x9a,al
  4106de:	inc    ebx
  4106df:	inc    esi
  4106e0:	ret    
  4106e1:	sar    BYTE PTR [esi+0xe564c],0xf5
  4106e8:	mov    al,0x74
  4106ea:	cmp    eax,0x8cdedebe
  4106ef:	fs sbb al,0x44
  4106f2:	pusha  
  4106f3:	lock and DWORD PTR [ecx-0x516afb10],0x188866b0
  4106fe:	mov    ebp,DWORD PTR [esi-0x72]
  410701:	ret    0xa30f
  410704:	cdq    
  410705:	(bad)  
  410706:	cmp    eax,0xd0f0854e
  41070b:	ror    BYTE PTR [edi-0x45],0x8b
  41070f:	dec    eax
  410710:	push   ebp
  410711:	xchg   ecx,eax
  410712:	fisttp DWORD PTR [ecx+0x5bb5a595]
  410718:	inc    ecx
  410719:	sbb    edx,DWORD PTR [ecx-0x20]
  41071c:	rol    BYTE PTR [edx+edx*2+0x50],1
  410720:	dec    esp
  410721:	inc    ebx
  410722:	stos   BYTE PTR es:[edi],al
  410723:	fs push 0xd41eb52e
  410729:	mov    WORD PTR [ecx],?
  41072b:	sub    ch,BYTE PTR [ebp-0x1a]
  41072e:	hlt    
  41072f:	sub    dh,cl
  410731:	xlat   BYTE PTR ds:[ebx]
  410732:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410734:	(bad)  
  410735:	outs   dx,BYTE PTR ds:[esi]
  410736:	or     DWORD PTR [edx+0x33],edx
  410739:	sti    
  41073a:	and    bl,ch
  41073c:	sbb    ebx,DWORD PTR [edi+eax*4-0x79]
  410740:	push   edi
  410741:	adc    al,0xb9
  410743:	sub    BYTE PTR [ebx+0x78],al
  410746:	sbb    cl,dl
  410748:	icebp  
  410749:	push   ss
  41074a:	mov    BYTE PTR ds:0xf54e11a3,dh
  410750:	cld    
  410751:	jl     0x41072e
  410753:	pushf  
  410754:	int    0xa1
  410756:	cs mov ecx,0xe8203046
  41075d:	inc    ecx
  41075e:	mov    esp,0xaa6f78c5
  410763:	mov    bh,0x76
  410765:	stc    
  410766:	cmp    ah,bh
  410768:	cwde   
  410769:	push   edx
  41076a:	push   edx
  41076b:	pop    es
  41076c:	and    DWORD PTR ds:0x370fe727,esp
  410772:	sub    DWORD PTR [edi-0x63],esp
  410775:	stos   BYTE PTR es:[edi],al
  410776:	pop    ecx
  410777:	cmp    eax,0x2ddbb2da
  41077c:	adc    eax,0x6173f380
  410781:	imul   esp
  410783:	ins    DWORD PTR es:[edi],dx
  410784:	pushf  
  410785:	aad    0x42
  410787:	inc    ebp
  410788:	inc    edx
  410789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41078a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41078b:	xchg   ecx,eax
  41078c:	xchg   esi,eax
  41078d:	push   0x71
  41078f:	stos   BYTE PTR es:[edi],al
  410790:	retf   0xc14e
  410793:	lock test DWORD PTR [edx],edi
  410796:	sar    ch,0x11
  410799:	cmp    DWORD PTR [ebx-0x681a7ced],edi
  41079f:	(bad)  
  4107a0:	xchg   ecx,eax
  4107a1:	sbb    BYTE PTR [edi+eax*2],0x39
  4107a5:	fstp   QWORD PTR ds:0xa3e8a23a
  4107ab:	sub    edx,DWORD PTR [ebp-0x25]
  4107ae:	sub    DWORD PTR [ecx-0x658fc266],ebx
  4107b4:	push   edx
  4107b5:	in     al,0x7b
  4107b7:	pop    edx
  4107b8:	mov    dh,0xfd
  4107ba:	mov    eax,ds:0x40100fdd
  4107bf:	adc    ebx,ebx
  4107c1:	rcl    ebp,1
  4107c3:	clc    
  4107c4:	mov    dl,0x3a
  4107c6:	rcl    DWORD PTR [ebp+0x4],cl
  4107c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ca:	sbb    al,0x27
  4107cc:	jmp    0x41077c
  4107ce:	fisub  WORD PTR [edx-0x7b]
  4107d1:	xor    ecx,edi
  4107d3:	xor    al,0xbc
  4107d5:	jl     0x4107d5
  4107d7:	sub    edx,DWORD PTR [eax-0x64ab0c0]
  4107dd:	mov    BYTE PTR ds:0x5e06117b,bh
  4107e3:	mov    ch,0x35
  4107e5:	(bad)  
  4107e6:	out    dx,al
  4107e7:	mov    ebx,0xa47faa44
  4107ec:	outs   dx,BYTE PTR ds:[esi]
  4107ed:	shl    DWORD PTR [eax-0x2e6079bd],1
  4107f3:	pop    edi
  4107f4:	cmp    al,0xc2
  4107f6:	stos   BYTE PTR es:[edi],al
  4107f7:	xchg   esi,eax
  4107f8:	(bad)  
  4107f9:	xor    al,BYTE PTR [ecx+0x6e]
  4107fc:	push   edi
  4107fd:	add    DWORD PTR [edi],edx
  4107ff:	jmp    0x410857
  410801:	rol    BYTE PTR [eax+0x7c],cl
  410804:	ins    DWORD PTR es:[edi],dx
  410805:	push   ebx
  410806:	inc    edx
  410807:	int    0x4a
  410809:	out    0xc2,eax
  41080b:	lods   al,BYTE PTR ds:[esi]
  41080c:	ror    ebx,cl
  41080e:	push   cs
  41080f:	outs   dx,BYTE PTR ds:[esi]
  410810:	imul   edi,DWORD PTR [edi],0xffffff81
  410813:	pop    es
  410814:	xor    DWORD PTR [eax+edi*8],edx
  410817:	dec    ebp
  410818:	aas    
  410819:	inc    ebx
  41081a:	and    BYTE PTR [edi],ch
  41081c:	jo     0x4107bc
  41081e:	add    DWORD PTR [edx],ebx
  410820:	cmp    DWORD PTR [esi+0x76a1f422],0xff61a2dc
  41082a:	mov    bh,0x60
  41082c:	dec    ebx
  41082d:	ss test al,0x70
  410830:	call   0x3d28:0xab58c93a
  410837:	and    eax,0xdbbdfed7
  41083c:	xchg   esi,eax
  41083d:	mov    ebx,0x7145ce8c
  410842:	retf   0x4bc9
  410845:	sahf   
  410846:	dec    edi
  410847:	and    ebx,edi
  410849:	sub    ch,dl
  41084b:	(bad)  
  41084e:	bound  esi,QWORD PTR [esi-0x6b]
  410851:	(bad)  
  410852:	sbb    dh,BYTE PTR [edi+0x1f90e56a]
  410858:	retf   0xba7d
  41085b:	test   BYTE PTR [edx+0x1a],cl
  41085e:	lea    eax,[ebx-0x2d4c5f10]
  410864:	lock pop ss
  410866:	inc    eax
  410867:	push   ds
  410868:	push   esi
  410869:	sub    DWORD PTR [ecx+0x4b],esi
  41086c:	popf   
  41086d:	das    
  41086e:	adc    DWORD PTR [edi+0x4e6be787],edx
  410874:	cmp    BYTE PTR [edi+0x6ed4b647],bl
  41087a:	mov    ebx,0x4ca6db4c
  41087f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410880:	jmp    0x4108d8
  410882:	fidivr DWORD PTR [edx]
  410884:	dec    eax
  410885:	aam    0x6c
  410887:	jmp    0x6ead:0xffff0570
  41088e:	xor    al,0x8
  410890:	cmp    DWORD PTR [ecx*8-0x2a1d77c6],0xffffffee
  410898:	mov    ah,0x8c
  41089a:	shl    BYTE PTR [esi],0x23
  41089d:	mov    ds:0xff198a1e,al
  4108a2:	out    0xb5,eax
  4108a4:	sub    al,0x32
  4108a6:	cmp    dh,0xea
  4108a9:	jb     0x410881
  4108ab:	out    0x3d,al
  4108ad:	test   eax,0x44fb10b3
  4108b2:	hlt    
  4108b3:	dec    eax
  4108b4:	xchg   ebx,eax
  4108b5:	jl     0x41088b
  4108b7:	imul   edx,ecx,0x4f
  4108ba:	std    
  4108bb:	and    al,0x74
  4108bd:	adc    ebp,DWORD PTR [eax+0x5f]
  4108c0:	je     0x4108f3
  4108c2:	inc    edx
  4108c3:	aad    0xcc
  4108c5:	mov    edi,0xa03114d7
  4108ca:	sub    eax,0x28ef665a
  4108cf:	test   BYTE PTR ds:0x7620be13,bl
  4108d5:	xchg   esp,eax
  4108d6:	and    BYTE PTR [ebx-0x12366bdf],cl
  4108dc:	ret    
  4108dd:	call   FWORD PTR [eax]
  4108df:	jmp    0xffc2:0x13ec4a17
  4108e6:	pop    esp
  4108e7:	out    dx,eax
  4108e8:	aas    
  4108e9:	(bad)
  4108ec:	clc    
  4108ed:	push   ecx
  4108ee:	imul   esi,DWORD PTR [edx-0x416c887],0xffffff8e
  4108f5:	and    BYTE PTR [edi-0x59],bh
  4108f8:	cld    
  4108f9:	adc    ah,BYTE PTR [esi-0x25]
  4108fc:	xchg   ebp,eax
  4108fd:	jmp    0x410889
  4108ff:	adc    al,0x49
  410901:	inc    ebp
  410902:	ins    BYTE PTR es:[edi],dx
  410903:	sbb    dh,BYTE PTR [edi]
  410905:	dec    eax
  410906:	imul   esi,DWORD PTR [esi],0xd1b2ccc
  41090c:	and    bh,BYTE PTR [ecx-0x2cfb8b7c]
  410912:	or     ebx,DWORD PTR [edi-0x7b1a4436]
  410918:	imul   ebp,esi,0x63cd0da4
  41091e:	inc    edi
  41091f:	or     DWORD PTR [ebx-0x4760f682],eax
  410925:	adc    BYTE PTR [edi],bl
  410927:	das    
  410928:	dec    esi
  410929:	test   al,0x6c
  41092b:	or     BYTE PTR [edx],ch
  41092d:	jecxz  0x4108c1
  41092f:	cmp    esi,ecx
  410931:	xchg   ebp,eax
  410932:	add    ebp,DWORD PTR ds:0xd554de50
  410938:	outs   dx,DWORD PTR ds:[esi]
  410939:	jg     0x41093a
  41093b:	pusha  
  41093c:	xor    BYTE PTR [ebx-0x3],cl
  41093f:	inc    edx
  410940:	data16 sbb bh,BYTE PTR [ecx+0x3ad1c3b2]
  410947:	inc    esp
  410948:	dec    esi
  410949:	mov    bl,0x58
  41094b:	and    esi,DWORD PTR [esi+edx*4]
  41094e:	xor    BYTE PTR [ebx-0x4],al
  410951:	and    DWORD PTR [ebx+0x70],eax
  410954:	ror    BYTE PTR [edx-0xf],1
  410957:	ret    0x475d
  41095a:	mov    dl,0x47
  41095c:	sahf   
  41095d:	iret   
  41095e:	pop    esp
  41095f:	jbe    0x4109a4
  410961:	(bad)  
  410962:	fneni(8087 only) 
  410964:	cli    
  410965:	push   esp
  410966:	jle    0x4109d7
  410968:	es jl  0x410937
  41096b:	scas   eax,DWORD PTR es:[edi]
  41096c:	jmp    0xdaa6862f
  410971:	pop    ecx
  410972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410973:	inc    ebx
  410974:	(bad)  
  410975:	retf   0x101c
  410978:	mov    DWORD PTR [ebx+0x4a],eax
  41097b:	bnd jns 0x410989
  41097e:	push   esi
  41097f:	rcr    DWORD PTR [edi],0xd1
  410982:	sub    eax,0x93e5a44a
  410987:	or     dl,BYTE PTR [ecx+0x16f97308]
  41098d:	int3   
  41098e:	out    0x8d,eax
  410990:	stos   BYTE PTR es:[edi],al
  410991:	sar    DWORD PTR [ebp-0x48],cl
  410994:	cs mov bl,0x48
  410997:	xor    BYTE PTR [edi],bh
  410999:	push   0xffffffed
  41099b:	(bad)  
  41099e:	cmp    DWORD PTR [ecx-0x4d],edi
  4109a1:	inc    esp
  4109a2:	addr16 jg 0x4109c3
  4109a5:	push   edi
  4109a6:	loop   0x4109dc
  4109a8:	xor    BYTE PTR [eax+0x43],ah
  4109ab:	push   cs
  4109ac:	xchg   ecx,eax
  4109ad:	xchg   ecx,eax
  4109ae:	jbe    0x410958
  4109b0:	xlat   BYTE PTR ds:[ebx]
  4109b1:	fimul  DWORD PTR [ecx-0x5f8ad31d]
  4109b7:	ins    DWORD PTR es:[edi],dx
  4109b8:	iret   
  4109b9:	inc    ecx
  4109ba:	push   ebp
  4109bb:	icebp  
  4109bc:	rcl    BYTE PTR [esi],1
  4109be:	pop    es
  4109bf:	push   0x2a
  4109c1:	jge    0x4109b5
  4109c3:	std    
  4109c4:	xchg   esi,eax
  4109c5:	and    esp,eax
  4109c7:	xor    al,BYTE PTR [esi-0x41c3c451]
  4109cd:	jae    0x410959
  4109cf:	add    al,0x6d
  4109d1:	xor    dh,bl
  4109d3:	cld    
  4109d4:	sbb    eax,0xdfdca9a8
  4109d9:	iret   
  4109da:	xchg   ebp,eax
  4109db:	repz xchg ecx,eax
  4109dd:	sub    BYTE PTR [ebp-0x71],dl
  4109e0:	sbb    DWORD PTR [edi+0x36dee10b],edx
  4109e6:	mov    eax,0x6b582606
  4109eb:	sub    edx,0x61fca5c6
  4109f1:	mov    ah,BYTE PTR [edx-0x16]
  4109f4:	adc    BYTE PTR [edx+0x47d66e88],cl
  4109fa:	dec    ebx
  4109fb:	fisub  DWORD PTR [ebx-0x76ca3209]
  410a01:	add    BYTE PTR [ebx],0x40
  410a04:	sbb    dh,dh
  410a06:	xor    DWORD PTR [ebx],edi
  410a08:	xor    eax,0x44760058
  410a0d:	mul    eax
  410a0f:	jae    0x410a5c
  410a11:	inc    eax
  410a12:	jg     0x410a1a
  410a14:	jae    0x4109ed
  410a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a17:	outs   dx,BYTE PTR ds:[esi]
  410a18:	imul   ecx,DWORD PTR ss:[ecx],0xffffffd5
  410a1c:	mov    ecx,0x4fbbaf98
  410a21:	out    0x6c,eax
  410a23:	in     al,0xda
  410a25:	mov    BYTE PTR [eax+ebp*4-0x51f07ca0],al
  410a2c:	mov    gs,WORD PTR [ebx+0x11]
  410a2f:	or     DWORD PTR [ebx+eiz*4],edx
  410a32:	hlt    
  410a33:	data16 jno 0x410a82
  410a36:	inc    edx
  410a37:	or     dl,dh
  410a39:	jae    0x4109c1
  410a3b:	fstp   TBYTE PTR [esi-0x25]
  410a3e:	push   ebp
  410a3f:	call   FWORD PTR [ebp-0x45]
  410a42:	stos   BYTE PTR es:[edi],al
  410a43:	jbe    0x410a9c
  410a45:	push   edi
  410a46:	mov    dh,0x42
  410a48:	sbb    BYTE PTR [edi-0xb3ac0c4],ch
  410a4e:	mov    bh,0xa
  410a50:	and    eax,0xce5c300d
  410a55:	test   al,bh
  410a57:	gs out dx,eax
  410a59:	xchg   esi,eax
  410a5a:	int3   
  410a5b:	jmp    0x410aa9
  410a5d:	push   eax
  410a5e:	hlt    
  410a5f:	pop    ebp
  410a60:	xchg   edx,eax
  410a61:	inc    esp
  410a62:	addr16 pop ebp
  410a64:	stc    
  410a65:	fbld   TBYTE PTR [ebp+0x4d]
  410a68:	mov    cl,0xc6
  410a6a:	jno    0x410a55
  410a6c:	jg     0x410a7e
  410a6e:	dec    ebp
  410a6f:	jmp    0xcf43:0x76a0052a
  410a76:	inc    esp
  410a77:	in     eax,dx
  410a78:	ss pop eax
  410a7a:	cdq    
  410a7b:	xchg   esi,eax
  410a7c:	test   ah,bh
  410a7e:	adc    dh,BYTE PTR [ebp+0x7e]
  410a81:	imul   esp,DWORD PTR [esi+0x3a],0xffffffe2
  410a85:	test   al,0x37
  410a87:	test   ebx,edx
  410a89:	xlat   BYTE PTR ds:[ebx]
  410a8a:	out    dx,al
  410a8b:	loop   0x410a94
  410a8d:	push   es
  410a8e:	jno    0x410ac5
  410a90:	jecxz  0x410ad6
  410a92:	sub    al,0x3b
  410a94:	(bad)  
  410a95:	pop    edx
  410a96:	rol    DWORD PTR [edx+0x1e],0xf0
  410a9a:	cdq    
  410a9b:	jmp    0xaaa6bfef
  410aa0:	daa    
  410aa1:	and    DWORD PTR [esi+ebx*1],esi
  410aa4:	jl     0x410afd
  410aa6:	lods   eax,DWORD PTR ds:[esi]
  410aa7:	js     0x410ab5
  410aa9:	mov    ebx,ebx
  410aab:	daa    
  410aac:	dec    ecx
  410aad:	loopne 0x410a81
  410aaf:	jmp    0x70b6:0x25c4af3e
  410ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab7:	mov    esp,0xd79978b2
  410abc:	ins    BYTE PTR es:[edi],dx
  410abd:	push   ds
  410abe:	sbb    cl,BYTE PTR [ebp+0x2f]
  410ac1:	fdiv   DWORD PTR [eax+0x5ccf1f62]
  410ac7:	out    0x82,al
  410ac9:	out    0xe1,eax
  410acb:	rol    BYTE PTR [esi-0x8],0x5
  410acf:	enter  0x84a6,0x9e
  410ad3:	and    BYTE PTR [edx+0x5],ah
  410ad6:	add    eax,0x5a8ce6da
  410adb:	nop
  410adc:	inc    edx
  410add:	and    ah,BYTE PTR [ebp+0x44462dd2]
  410ae3:	dec    edx
  410ae4:	lea    edx,[eax-0x45]
  410ae7:	arpl   WORD PTR [esi],dx
  410ae9:	sbb    cl,BYTE PTR [eax+0x1a789b60]
  410aef:	test   BYTE PTR [esi-0x78],dh
  410af2:	imul   esp,DWORD PTR [ebx],0x1a
  410af5:	cmp    al,0x1c
  410af7:	je     0x410aa2
  410af9:	stos   BYTE PTR es:[edi],al
  410afa:	adc    DWORD PTR [esi+0x69],ebp
  410afd:	adc    al,dl
  410aff:	inc    esp
  410b00:	adc    al,dl
  410b02:	psadbw mm0,QWORD PTR [eax+0x7b]
  410b06:	ins    DWORD PTR es:[edi],dx
  410b07:	jno    0x410b34
  410b09:	fisttp DWORD PTR [edx]
  410b0b:	jmp    0x410adc
  410b0d:	sbb    BYTE PTR [ebx+0x63],dl
  410b10:	inc    esp
  410b11:	popa   
  410b12:	sbb    al,0xb2
  410b14:	mov    esp,ebx
  410b16:	xor    ch,BYTE PTR [ebx+0x20]
  410b19:	out    dx,al
  410b1a:	xchg   ebp,eax
  410b1b:	adc    BYTE PTR [edx+0x2a],0xd7
  410b1f:	test   ebx,0x4446c2dd
  410b25:	mul    DWORD PTR [ebx-0x25dd4dc8]
  410b2b:	jae    0x410b55
  410b2d:	xor    esi,DWORD PTR [ecx-0x31]
  410b30:	jno    0x410b72
  410b32:	push   0x929e1584
  410b37:	fs cmc 
  410b39:	clc    
  410b3a:	in     al,dx
  410b3b:	jb     0x410ae2
  410b3d:	cmp    al,0x8b
  410b3f:	data16 ror al,0x16
  410b43:	in     al,dx
  410b44:	retf   
  410b45:	or     BYTE PTR [ecx+edx*2],cl
  410b48:	or     DWORD PTR [ebx*1-0x247bd019],edx
  410b4f:	jne    0x410b89
  410b51:	mov    esi,0x2b38585a
  410b56:	push   ds
  410b57:	fcom   QWORD PTR [edx+ebx*8+0x30a43bee]
  410b5e:	lahf   
  410b5f:	aaa    
  410b60:	cmp    bl,BYTE PTR [ebp+0x3d5b93e5]
  410b66:	pop    edx
  410b67:	xchg   DWORD PTR [ebx-0x26],esi
  410b6a:	jne    0x410b6c
  410b6c:	add    DWORD PTR [esi+0x1b],0x7c
  410b70:	lock shl DWORD PTR [esi-0x2b],1
  410b74:	hlt    
  410b75:	xor    al,0xb9
  410b77:	mov    edx,fs
  410b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b7a:	lahf   
  410b7b:	mov    edx,0xd372ce63
  410b80:	arpl   bx,cx
  410b82:	test   BYTE PTR [ebx+edi*8],dl
  410b85:	cwde   
  410b86:	imul   edx,DWORD PTR [edi-0x60127a0b],0x3c
  410b8d:	and    WORD PTR es:[esi-0x6],si
  410b92:	or     DWORD PTR [ecx*1+0x87be8cc],eax
  410b99:	sti    
  410b9a:	ret    
  410b9b:	dec    edx
  410b9c:	pop    ebp
  410b9d:	and    BYTE PTR [ebx+0x77],bh
  410ba0:	cmp    al,0x2f
  410ba2:	(bad)  
  410ba3:	mov    al,0xcb
  410ba5:	sub    DWORD PTR [ebp+0x523cfad2],esp
  410bab:	lds    edi,FWORD PTR [ecx]
  410bad:	jb     0x410b7a
  410baf:	mov    ebp,0x275aed66
  410bb4:	jp     0x410c1a
  410bb6:	jbe    0x410c04
  410bb8:	mov    al,BYTE PTR [ecx-0x48]
  410bbb:	pop    edi
  410bbc:	mov    bl,0xd3
  410bbe:	add    ch,BYTE PTR [edx]
  410bc0:	(bad)  [eax+0x546d54f6]
  410bc6:	sti    
  410bc7:	fadd   DWORD PTR [ebx]
  410bc9:	mov    esp,0xff925b8a
  410bce:	ret    
  410bcf:	add    BYTE PTR [edx-0x50c68b10],dh
  410bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd6:	popa   
  410bd7:	push   ecx
  410bd8:	shl    BYTE PTR [edi+eiz*8],1
  410bdb:	add    al,0x52
  410bdd:	mov    cl,0x40
  410bdf:	ss inc ecx
  410be1:	and    al,0xc9
  410be3:	pop    ds
  410be4:	jp     0x410b6a
  410be6:	(bad)  
  410be7:	std    
  410be8:	popf   
  410be9:	adc    DWORD PTR [ebp-0x592248ba],edx
  410bef:	rcl    BYTE PTR [ebp-0x3],0xa3
  410bf3:	mov    edi,0xd43841d8
  410bf8:	sar    DWORD PTR [esi-0x5402c80c],cl
  410bfe:	std    
  410bff:	gs xchg ebx,eax
  410c01:	sbb    al,0xbf
  410c03:	lods   eax,DWORD PTR ds:[esi]
  410c04:	inc    ecx
  410c05:	xchg   BYTE PTR [ebp-0x80],dh
  410c08:	inc    ecx
  410c09:	out    0x3,eax
  410c0b:	test   BYTE PTR [ecx],0x53
  410c0e:	mov    cl,0x91
  410c10:	pop    esi
  410c11:	loope  0x410be2
  410c13:	aas    
  410c14:	hlt    
  410c15:	dec    esp
  410c16:	dec    esi
  410c17:	fadd   QWORD PTR [edx]
  410c19:	daa    
  410c1a:	and    eax,0xd0e92759
  410c1f:	pop    edi
  410c20:	adc    esp,DWORD PTR ds:0x43fd550e
  410c26:	aam    0x9
  410c28:	sub    esi,esi
  410c2a:	jae    0x410c65
  410c2c:	cld    
  410c2d:	jnp    0x410cab
  410c2f:	and    ebx,DWORD PTR [eax+0x79]
  410c32:	test   DWORD PTR [esi-0x1],edx
  410c35:	repnz int 0x77
  410c38:	std    
  410c39:	inc    edi
  410c3a:	push   ecx
  410c3b:	xchg   esi,eax
  410c3c:	imul   ebx,DWORD PTR [ecx-0x31],0xd18b00a3
  410c43:	mov    esi,edx
  410c45:	jecxz  0x410c6b
  410c47:	shl    BYTE PTR [eax],1
  410c49:	cmp    eax,0xa63d7368
  410c4e:	daa    
  410c4f:	repz es mov dl,0x8f
  410c53:	sbb    esp,DWORD PTR [edi-0x27fe6b2b]
  410c59:	sbb    cl,cl
  410c5b:	jle    0x410c63
  410c5d:	sub    DWORD PTR [eax],ebx
  410c5f:	pop    eax
  410c60:	sbb    eax,DWORD PTR [edx]
  410c62:	retf   0x67b4
  410c65:	mov    bh,0x48
  410c67:	jle    0x410c51
  410c69:	xor    bl,ah
  410c6b:	jns    0x410cba
  410c6d:	clc    
  410c6e:	mov    ch,BYTE PTR [edi-0x9]
  410c71:	mov    eax,ds:0x26d6b0b
  410c76:	adc    al,0xd8
  410c78:	outs   dx,DWORD PTR ds:[esi]
  410c79:	mov    al,0x8d
  410c7b:	arpl   WORD PTR [ecx-0x6f1b1660],sp
  410c81:	push   esi
  410c82:	inc    ebp
  410c83:	nop
  410c84:	sahf   
  410c85:	lock dec edi
  410c87:	mov    esp,0xd07355a9
  410c8c:	and    eax,0x125c8fb9
  410c91:	xor    eax,0x8179fc54
  410c96:	jp     0x410d16
  410c98:	int3   
  410c99:	lods   al,BYTE PTR ds:[esi]
  410c9a:	jnp    0x410c6c
  410c9c:	fst    DWORD PTR [ecx+0x35629c11]
  410ca2:	or     eax,0xb3b86806
  410ca7:	pop    eax
  410ca8:	inc    edx
  410ca9:	jbe    0x410cd1
  410cab:	ror    BYTE PTR [esi-0x403ced1e],1
  410cb1:	sub    ebx,ebp
  410cb3:	cs popf 
  410cb5:	adc    BYTE PTR [ebx],dl
  410cb7:	xlat   BYTE PTR ds:[ebx]
  410cb8:	jecxz  0x410d39
  410cba:	out    0xe3,al
  410cbc:	mov    cl,0x35
  410cbe:	push   ss
  410cbf:	dec    edx
  410cc0:	xor    ebp,edx
  410cc2:	sbb    eax,0x81449213
  410cc7:	inc    eax
  410cc8:	push   esi
  410cc9:	out    0xe3,al
  410ccb:	push   ebp
  410ccc:	retf   0xe7cf
  410ccf:	leave  
  410cd0:	ror    BYTE PTR [ecx+0x669e8e3d],0xe4
  410cd7:	lock leave 
  410cd9:	and    esp,DWORD PTR [eax-0x23]
  410cdc:	inc    ebx
  410cdd:	dec    esi
  410cde:	cmp    dl,BYTE PTR [ebp-0x75]
  410ce1:	mov    al,ds:0x57fcc488
  410ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ce7:	cmp    al,0xa3
  410ce9:	repz or bh,cl
  410cec:	jmp    0x75001337
  410cf1:	test   BYTE PTR [ebp*2-0x638a42c],0x18
  410cf9:	mov    WORD PTR ds:0xd34c5ac7,cs
  410cff:	rcr    DWORD PTR [ecx-0x20f5fc46],cl
  410d05:	in     eax,0x69
  410d07:	ins    BYTE PTR es:[edi],dx
  410d08:	jmp    0x410d32
  410d0a:	mov    al,0x2a
  410d0c:	lea    esi,[ecx+0x7b736c29]
  410d12:	fistp  QWORD PTR [eax-0x398b1cf3]
  410d18:	popa   
  410d19:	loope  0x410d23
  410d1b:	xor    ebx,DWORD PTR [edi]
  410d1d:	sub    DWORD PTR [edi+0x47],0x72ba8786
  410d24:	adc    DWORD PTR [eax],eax
  410d26:	scas   al,BYTE PTR es:[edi]
  410d27:	mov    ebx,0xf45a865
  410d2c:	test   esi,ebx
  410d2e:	cmp    ebp,DWORD PTR [eax+0x26]
  410d31:	in     al,0x7e
  410d33:	cmp    bh,BYTE PTR [edx+edi*8]
  410d36:	pop    esi
  410d37:	mov    dh,0xf2
  410d39:	dec    edi
  410d3a:	xchg   edi,eax
  410d3b:	fimul  WORD PTR [eax]
  410d3d:	and    eax,0xf2f38d28
  410d42:	mov    dh,0x9b
  410d44:	mov    DWORD PTR [eax],ebp
  410d46:	xchg   edi,eax
  410d47:	in     al,0xda
  410d49:	fadd   st,st(0)
  410d4b:	test   DWORD PTR [eax-0x2b4a5616],edx
  410d51:	cmp    eax,ecx
  410d53:	loope  0x410cda
  410d55:	dec    ecx
  410d56:	dec    eax
  410d57:	push   esp
  410d58:	or     al,0xdd
  410d5a:	jl     0x410db1
  410d5c:	(bad)  
  410d5e:	imul   ecx,DWORD PTR [esi-0x69],0x1383d446
  410d65:	push   edi
  410d66:	mov    dl,0x55
  410d68:	repz call 0x56646a12
  410d6e:	sbb    BYTE PTR [eax+ecx*8],dh
  410d71:	mov    cl,0xd8
  410d73:	push   edx
  410d74:	mov    eax,0xf62778ad
  410d79:	hlt    
  410d7a:	in     eax,0xa7
  410d7c:	clc    
  410d7d:	add    ch,ah
  410d7f:	pop    edi
  410d80:	mov    cl,0x73
  410d82:	xchg   DWORD PTR [ebx-0x3f1a0414],ebx
  410d88:	push   ss
  410d89:	addr16 pop ecx
  410d8b:	push   edi
  410d8c:	hlt    
  410d8d:	and    BYTE PTR [eax+0x17],al
  410d90:	add    al,0x6b
  410d92:	aad    0xc8
  410d94:	lahf   
  410d95:	add    ah,BYTE PTR [edx]
  410d97:	cmp    al,0xa4
  410d99:	out    dx,al
  410d9a:	lea    ebp,[ebx]
  410d9c:	cmp    esp,DWORD PTR [edx-0x3c60b630]
  410da2:	in     eax,dx
  410da3:	mov    ebp,0x6c96ccec
  410da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410da9:	lock jmp 0x75620b25
  410daf:	lahf   
  410db0:	test   esp,0xdd046cf6
  410db6:	jbe    0x410d7f
  410db8:	push   ss
  410db9:	cmp    dl,BYTE PTR [ebx+0x10]
  410dbc:	fdivr  st,st(5)
  410dbe:	inc    ebp
  410dbf:	out    0xe9,al
  410dc1:	mov    WORD PTR [ecx-0x52],gs
  410dc4:	adc    ah,ch
  410dc6:	and    eax,0xb3932245
  410dcb:	sub    ecx,edi
  410dcd:	outs   dx,DWORD PTR ds:[si]
  410dcf:	cdq    
  410dd0:	js     0x410da4
  410dd2:	cmp    bl,BYTE PTR [eax]
  410dd4:	lods   eax,DWORD PTR ds:[esi]
  410dd5:	jb     0x410dc4
  410dd7:	jno    0x410d61
  410dd9:	xor    eax,0xcd203118
  410dde:	cld    
  410ddf:	or     eax,0x42d390ce
  410de4:	or     BYTE PTR [eax],ah
  410de6:	pop    ebp
  410de7:	loopne 0x410dcc
  410de9:	icebp  
  410dea:	call   0x4b52:0x327f6586
  410df1:	je     0x410d95
  410df3:	mov    ebx,0xbeedd55c
  410df8:	jne    0x410e5a
  410dfa:	pop    eax
  410dfb:	jge    0x410da4
  410dfd:	aas    
  410dfe:	sbb    al,0xb2
  410e00:	jmp    0xa72e37b3
  410e05:	or     DWORD PTR [bx+si+0x35],esi
  410e09:	sbb    DWORD PTR [eax-0x2512aa54],eax
  410e0f:	mov    dl,0x4a
  410e11:	pop    edx
  410e12:	sub    dl,BYTE PTR [esp+ebp*2-0x1a]
  410e16:	outs   dx,DWORD PTR ds:[esi]
  410e18:	into   
  410e19:	mov    bh,0x8e
  410e1b:	shr    ebx,1
  410e1d:	cmp    dl,al
  410e1f:	jl     0x410e75
  410e21:	int3   
  410e22:	cmova  esp,DWORD PTR [ebx+0x3a]
  410e26:	dec    edi
  410e27:	cld    
  410e28:	cmc    
  410e29:	adc    eax,0xe24b49b
  410e2e:	mov    BYTE PTR [ecx-0x43],cl
  410e31:	(bad)  
  410e32:	(bad)  
  410e33:	jg     0x410e00
  410e35:	aad    0xb
  410e37:	sbb    eax,0xe726dd7a
  410e3c:	clc    
  410e3d:	lods   al,BYTE PTR ds:[esi]
  410e3e:	sbb    BYTE PTR [edx-0x7225e498],bh
  410e44:	aaa    
  410e45:	shl    cl,0x68
  410e48:	pop    esp
  410e49:	loope  0x410e1a
  410e4b:	psllw  mm4,QWORD PTR [ebx+0x69]
  410e4f:	imul   ebx,DWORD PTR [esi],0x5b
  410e52:	adc    DWORD PTR [esi+0x43],eax
  410e55:	aas    
  410e56:	loop   0x410e43
  410e58:	sub    BYTE PTR [esp-0x1d],dh
  410e5c:	push   ecx
  410e5d:	leave  
  410e5e:	aad    0x3a
  410e60:	mov    ebx,0x78c7b9ce
  410e65:	xor    eax,0x914fcc71
  410e6a:	ret    0x5ad1
  410e6d:	pop    ebp
  410e6e:	mov    ah,0x2
  410e70:	shl    edx,0x67
  410e73:	xchg   esi,eax
  410e74:	push   eax
  410e75:	xchg   ecx,eax
  410e76:	cmp    BYTE PTR [eax-0x2999888e],bl
  410e7c:	xchg   edx,eax
  410e7d:	dec    edx
  410e7e:	repnz xor eax,0x2e982cae
  410e84:	lods   eax,DWORD PTR ds:[esi]
  410e85:	and    ebx,DWORD PTR [edi+0x79]
  410e88:	sub    al,0xdd
  410e8a:	gs push edx
  410e8c:	retf   0xcafb
  410e8f:	fs test eax,0xf82d4b66
  410e95:	hlt    
  410e96:	mov    bl,0x91
  410e98:	hlt    
  410e99:	mov    eax,ds:0x7ce4cc5e
  410e9e:	push   es
  410e9f:	mov    DWORD PTR [esi],ebx
  410ea1:	popf   
  410ea2:	or     edi,esi
  410ea4:	arpl   WORD PTR [ecx+edi*1+0x24],dx
  410ea8:	jmp    0x410ea8
  410eaa:	push   cs
  410eab:	shl    BYTE PTR [eax+0xb9c2570],0x77
  410eb2:	sar    BYTE PTR [ecx],1
  410eb4:	iret   
  410eb5:	pop    DWORD PTR [edx+esi*8-0x70a4fc95]
  410ebc:	jg     0x410e9b
  410ebe:	mov    cl,0x3b
  410ec0:	(bad)  
  410ec1:	out    dx,eax
  410ec2:	(bad)  
  410ec3:	and    eax,0x6f1e354f
  410ec8:	pop    esi
  410ec9:	aas    
  410eca:	mov    cl,0xf2
  410ecc:	sbb    ebp,DWORD PTR [eax]
  410ece:	inc    edi
  410ecf:	scas   eax,DWORD PTR es:[edi]
  410ed0:	sub    BYTE PTR [ebp+esi*2+0x4a],cl
  410ed4:	fdivr  st(2),st
  410ed6:	pushf  
  410ed7:	test   DWORD PTR [esi],esi
  410ed9:	sbb    esi,eax
  410edb:	mov    edi,0x79491a97
  410ee0:	cmc    
  410ee1:	bnd jae 0x410ed7
  410ee4:	sbb    BYTE PTR [edx-0x6f5733aa],al
  410eea:	shr    DWORD PTR [ebx-0x6f7c9ed2],1
  410ef0:	arpl   WORD PTR [ecx],bp
  410ef2:	add    ch,bl
  410ef4:	(bad)  
  410ef5:	dec    ebx
  410ef6:	ss jl  0x410f32
  410ef9:	sbb    BYTE PTR [ebx],bl
  410efb:	cdq    
  410efc:	xchg   esi,eax
  410efd:	sar    BYTE PTR [esi+0x3fb4964f],1
  410f03:	push   es
  410f04:	push   cs
  410f05:	loopne 0x410ec7
  410f07:	cmp    cl,BYTE PTR [eax+0x15623fbe]
  410f0d:	or     eax,0x29f81991
  410f12:	(bad)  
  410f13:	sbb    eax,0x69f6e581
  410f18:	not    BYTE PTR [edi-0x30]
  410f1b:	push   0x4b
  410f1d:	add    al,0x21
  410f1f:	dec    ebx
  410f20:	lock push ss
  410f22:	sbb    DWORD PTR [eax],edi
  410f24:	out    0xa4,al
  410f26:	cmc    
  410f27:	dec    esi
  410f28:	ins    DWORD PTR es:[edi],dx
  410f29:	xor    eax,eax
  410f2b:	add    ah,BYTE PTR [ecx+eax*4+0x2f]
  410f2f:	inc    edi
  410f30:	inc    ebp
  410f31:	fisubr WORD PTR ss:[eax+0x3717e8ca]
  410f38:	in     al,dx
  410f39:	test   DWORD PTR [esi-0xcad508d],esi
  410f3f:	ss ja  0x410f5f
  410f42:	hlt    
  410f43:	mov    ebp,0xdcd4386e
  410f48:	neg    DWORD PTR [ecx+0xdcb7c1]
  410f4e:	mov    WORD PTR [esi+0x3df8ae09],ss
  410f54:	adc    al,0x5e
  410f56:	xchg   DWORD PTR ss:[edx-0x3a],esi
  410f5a:	inc    ebx
  410f5b:	jecxz  0x410f2c
  410f5d:	push   esp
  410f5e:	mov    eax,ds:0x4b1d1a95
  410f63:	gs retf 
  410f65:	mov    al,0x35
  410f67:	pop    ebp
  410f68:	dec    ecx
  410f69:	lods   eax,DWORD PTR ds:[esi]
  410f6a:	mov    WORD PTR [ebp-0x1f],ds
  410f6d:	shl    cl,cl
  410f6f:	push   eax
  410f70:	in     al,dx
  410f71:	lds    edx,FWORD PTR [esp+edx*1-0x77]
  410f75:	retf   
  410f76:	sar    DWORD PTR [ecx+ebx*1],0x1d
  410f7a:	adc    ch,cl
  410f7c:	jmp    0x410f00
  410f7e:	mov    ds:0xd3f577ae,al
  410f83:	push   edx
  410f84:	push   edx
  410f85:	xlat   BYTE PTR ds:[ebx]
  410f86:	out    dx,al
  410f87:	gs scas al,BYTE PTR es:[edi]
  410f89:	out    dx,al
  410f8a:	push   cs
  410f8b:	fld    QWORD PTR [edi+0x2b7fe0f7]
  410f91:	and    DWORD PTR [ecx+0x47],esi
  410f94:	retf   0xdd2
  410f97:	xchg   edi,eax
  410f98:	jb     0x410f50
  410f9a:	cwde   
  410f9b:	and    ebx,DWORD PTR [ecx+0x42]
  410f9e:	mov    ch,cl
  410fa0:	rcr    DWORD PTR [ebp-0x3e],cl
  410fa3:	and    BYTE PTR [edi],ch
  410fa5:	aad    0x23
  410fa7:	xchg   esp,eax
  410fa8:	adc    bh,BYTE PTR [edi-0x4bd7a559]
  410fae:	mov    edi,0xc6bf5658
  410fb3:	sbb    al,0x9
  410fb5:	cmp    BYTE PTR [ecx+0x75419e03],ch
  410fbb:	sahf   
  410fbc:	add    al,0x95
  410fbe:	bound  esi,QWORD PTR [edx-0x752d6959]
  410fc4:	outs   dx,DWORD PTR ds:[esi]
  410fc5:	mov    ah,0xb4
  410fc7:	test   eax,0x835d21ba
  410fcc:	sub    DWORD PTR cs:[edi+0x79ead5],edx
  410fd3:	push   ebx
  410fd4:	cmp    BYTE PTR [edi+ebx*2+0x7e],dl
  410fd8:	jb     0x411049
  410fda:	not    DWORD PTR [edx]
  410fdc:	pop    es
  410fdd:	pop    eax
  410fde:	jg     0x411050
  410fe0:	inc    ecx
  410fe1:	cmp    bl,ch
  410fe3:	sub    DWORD PTR [edi],ebx
  410fe5:	inc    eax
  410fe6:	jge    0x410f77
  410fe8:	and    bh,BYTE PTR [eax-0x61]
  410feb:	pushf  
  410fec:	cmp    DWORD PTR [ecx-0x15],edi
  410fef:	sbb    ch,BYTE PTR [ebp-0x24807f01]
  410ff5:	shl    ebx,1
  410ff7:	ficom  WORD PTR [edx+eiz*4-0x5b07ac49]
  410ffe:	mov    al,ds:0xf248ce8b
  411003:	jb     0x410f8d
  411005:	adc    al,dl
  411007:	(bad)  [esi-0x1f]
  41100a:	dec    esi
  41100b:	clc    
  41100c:	das    
  41100d:	lods   eax,DWORD PTR ds:[esi]
  41100e:	and    BYTE PTR [ecx],al
  411010:	cmp    DWORD PTR [edi+0x1b60dff3],edi
  411016:	ss inc eax
  411018:	xchg   ecx,eax
  411019:	aad    0x72
  41101b:	fisub  WORD PTR [eax+0x1c5a34fe]
  411021:	add    bh,BYTE PTR [esi-0x16]
  411024:	div    BYTE PTR [edi-0x6411bc95]
  41102a:	(bad)
  41102d:	stos   BYTE PTR es:[edi],al
  41102e:	pop    es
  41102f:	mov    dl,0x52
  411031:	dec    edi
  411032:	jp     0x410fc4
  411034:	leave  
  411035:	add    eax,0x4a0415e
  41103a:	mov    ebx,0xdb0c7468
  41103f:	sbb    DWORD PTR [edx-0x4b],esp
  411042:	retf   0x31ae
  411045:	inc    edx
  411046:	mov    BYTE PTR ds:0xcb3c203a,dh
  41104c:	and    eax,0xb24253e4
  411051:	stos   DWORD PTR es:[edi],eax
  411052:	push   ecx
  411053:	push   esi
  411054:	test   BYTE PTR [eax+0x7d],ah
  411057:	cld    
  411058:	popa   
  411059:	and    eax,0x164cc79f
  41105e:	sbb    DWORD PTR [edx+0xf],ebx
  411061:	sub    ebp,eax
  411063:	arpl   WORD PTR [edx],dx
  411065:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  411067:	ins    BYTE PTR es:[edi],dx
  411068:	shr    bl,cl
  41106a:	popa   
  41106b:	jb     0x411054
  41106d:	xchg   ebp,eax
  41106e:	jnp    0x411058
  411070:	jle    0x4110d3
  411072:	outs   dx,DWORD PTR ds:[esi]
  411073:	mov    edx,0xd32b5ce0
  411078:	xor    DWORD PTR [ecx-0x58],ebx
  41107b:	pop    ebp
  41107c:	push   esp
  41107d:	and    eax,0xe66f430e
  411082:	je     0x41102b
  411084:	popa   
  411085:	arpl   WORD PTR [ecx+eiz*4-0x786958d2],sp
  41108c:	push   esp
  41108d:	pop    ebx
  41108f:	mov    dh,0xaf
  411091:	clc    
  411092:	mov    edi,0xfa19241d
  411097:	mov    bl,0x6c
  411099:	test   eax,0x9e31cbff
  41109e:	aas    
  41109f:	dec    esp
  4110a0:	cmovle eax,DWORD PTR [edx-0x505b75cb]
  4110a7:	test   DWORD PTR [edi],ebx
  4110a9:	push   esp
  4110aa:	xchg   ebx,eax
  4110ab:	add    ch,BYTE PTR [ebx+0x43bca52c]
  4110b1:	mov    cl,0xca
  4110b3:	mov    bh,BYTE PTR [ebx-0xd94b6bf]
  4110b9:	in     al,dx
  4110ba:	int3   
  4110bb:	ror    BYTE PTR [edx-0xb],1
  4110be:	push   ds
  4110bf:	pop    ecx
  4110c0:	add    eax,0x2c96eefe
  4110c5:	rcl    DWORD PTR [ebx],1
  4110c7:	les    esp,FWORD PTR [ebx-0x62]
  4110ca:	or     BYTE PTR [esp+ebx*4],cl
  4110cd:	mov    DWORD PTR [esp+ecx*8],ecx
  4110d0:	dec    edi
  4110d1:	hlt    
  4110d2:	cmp    al,0x1
  4110d4:	xor    bl,BYTE PTR [ebp-0x1b3a364a]
  4110da:	mov    ecx,0xa22bb58b
  4110df:	inc    edx
  4110e0:	dec    ecx
  4110e1:	add    BYTE PTR [edi-0x130706c0],dh
  4110e7:	call   0x73d25797
  4110ec:	dec    edx
  4110ed:	cld    
  4110ee:	stos   BYTE PTR es:[edi],al
  4110ef:	adc    bl,BYTE PTR [edx]
  4110f1:	mov    bl,0x11
  4110f3:	inc    eax
  4110f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f5:	or     BYTE PTR [ebp+0xf],bh
  4110f8:	inc    ecx
  4110f9:	jo     0x4110d7
  4110fb:	es jmp 0x5c0162f6
  411101:	int    0xda
  411103:	mov    ds:0xf211da6c,al
  411108:	jae    0x41117c
  41110a:	mov    DWORD PTR [edx+0x1879abb9],edx
  411110:	lds    edx,FWORD PTR [esi]
  411112:	dec    ebx
  411113:	ins    DWORD PTR es:[edi],dx
  411114:	nop
  411115:	push   bp
  411117:	sti    
  411118:	push   ss
  411119:	jbe    0x411138
  41111b:	and    eax,0x3fd206a4
  411120:	shl    DWORD PTR [ebx+0x14],1
  411123:	stos   BYTE PTR es:[edi],al
  411124:	cmc    
  411125:	sahf   
  411126:	mov    DWORD PTR [eax],ecx
  411128:	pop    esp
  411129:	and    ah,0x86
  41112c:	dec    edi
  41112d:	jno    0x4110d2
  41112f:	(bad)
  411133:	idiv   BYTE PTR [edx+0x3c2f12b1]
  411139:	adc    DWORD PTR [esi+0x61],esp
  41113c:	or     ah,BYTE PTR [ecx+0x7a]
  41113f:	jo     0x4110da
  411141:	dec    ecx
  411142:	mov    bl,0x8f
  411144:	cmp    eax,0x6716b44
  411149:	and    edi,eax
  41114b:	shr    BYTE PTR [ecx],1
  41114d:	xchg   esi,eax
  41114e:	xor    BYTE PTR [ecx+0xe],bl
  411151:	mov    ds:0xeeadbbe3,al
  411156:	add    ecx,edi
  411158:	pop    eax
  411159:	or     dh,BYTE PTR [ebx+0x74]
  41115c:	push   edx
  41115d:	push   ecx
  41115e:	scas   al,BYTE PTR es:[edi]
  41115f:	es jno 0x4110fb
  411162:	adc    al,0xdf
  411164:	icebp  
  411165:	sub    BYTE PTR [ebx],0x19
  411168:	inc    ebp
  411169:	dec    BYTE PTR [ebx+eax*1]
  41116c:	sbb    DWORD PTR [ecx],edx
  41116e:	sub    DWORD PTR es:[edi],eax
  411171:	add    ebx,edi
  411173:	iret   
  411174:	xchg   BYTE PTR [edi],dl
  411176:	dec    esi
  411177:	js     0x41110d
  411179:	jmp    0x65f5:0xe5cf633f
  411180:	mov    ah,0xfa
  411182:	repz mov dh,0x16
  411185:	jno    0x411139
  411187:	popa   
  411188:	jmp    0x411204
  41118a:	dec    ebp
  41118b:	(bad)  
  41118c:	loope  0x411198
  41118e:	lock xor BYTE PTR [edi+edi*2+0x9],al
  411193:	hlt    
  411194:	test   al,0xeb
  411196:	test   BYTE PTR [edx+0x7ebe781c],al
  41119c:	loope  0x411155
  41119e:	test   al,0x97
  4111a0:	jmp    0x73221237
  4111a5:	inc    esp
  4111a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a7:	push   ebp
  4111a8:	arpl   WORD PTR [edx],bp
  4111aa:	test   dh,ah
  4111ac:	sub    al,0xda
  4111ae:	mov    al,ds:0x3bc8e212
  4111b3:	push   esp
  4111b4:	add    eax,0x2bc51f95
  4111b9:	pop    edx
  4111ba:	outs   dx,BYTE PTR ds:[esi]
  4111bb:	std    
  4111bc:	dec    ecx
  4111bd:	pushf  
  4111be:	pop    ebx
  4111bf:	mov    eax,ds:0xa7a5b9dc
  4111c4:	dec    ebp
  4111c5:	mov    al,0x51
  4111c7:	(bad)  
  4111c8:	dec    edx
  4111c9:	pop    ds
  4111ca:	(bad)  
  4111cb:	adc    eax,0x92ee3292
  4111d0:	sar    DWORD PTR [ebx],0xa6
  4111d3:	int    0x5e
  4111d5:	int    0xce
  4111d7:	inc    edx
  4111d8:	and    BYTE PTR [ecx+eiz*8],dh
  4111db:	fcom   QWORD PTR [ebx+0x6fee74a5]
  4111e1:	and    ch,BYTE PTR [eax-0x638a79a2]
  4111e7:	out    0xd9,al
  4111e9:	div    DWORD PTR [ebx+esi*8-0x4543ed9a]
  4111f0:	leave  
  4111f1:	pop    ds
  4111f2:	mov    ecx,0x2e8122f7
  4111f7:	add    DWORD PTR [edx+0x1e],esp
  4111fa:	add    eax,0x74e97412
  4111ff:	sub    DWORD PTR [eax-0x19cf2c9d],0xc788acf4
  411209:	outs   dx,BYTE PTR ds:[esi]
  41120a:	out    dx,eax
  41120b:	add    BYTE PTR [ebp+0x72f2457e],dl
  411211:	(bad)  
  411212:	out    dx,al
  411213:	adc    ebp,DWORD PTR [ecx+ebx*1+0x7a2a425e]
  41121a:	sub    ch,ah
  41121c:	int3   
  41121d:	mov    al,0xd
  41121f:	jl     0x4111c4
  411221:	inc    ecx
  411222:	or     al,0xfc
  411224:	cmp    esp,DWORD PTR ds:0x4bdd1fcb
  41122a:	jp     0x4111f5
  41122c:	jle    0x411221
  41122e:	call   0xf2c2d167
  411233:	sub    eax,0x4722cba8
  411238:	dec    bl
  41123a:	(bad)  
  41123b:	xor    al,0x4f
  41123d:	test   eax,0x4b277265
  411242:	ret    0xa8f2
  411245:	ins    DWORD PTR es:[edi],dx
  411246:	adc    BYTE PTR [ecx+0x11b89565],bh
  41124c:	cmp    BYTE PTR [ecx],al
  41124e:	sti    
  41124f:	and    al,0x5a
  411251:	dec    ebx
  411252:	and    ah,bl
  411254:	add    eax,0xecdd99e4
  411259:	scas   eax,DWORD PTR es:[edi]
  41125a:	pop    ebx
  41125b:	test   BYTE PTR [ebp+0x61],cl
  41125e:	mov    al,ds:0x1ec1747b
  411263:	outs   dx,BYTE PTR ds:[esi]
  411264:	rcl    DWORD PTR [ebx],cl
  411266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411267:	pop    ds
  411268:	adc    al,BYTE PTR [ecx-0x55]
  41126b:	jbe    0x411278
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	adc    ah,bh
  411270:	mov    ch,0x5
  411272:	mov    cl,0x8e
  411274:	jbe    0x4112ab
  411276:	mov    dl,0xdd
  411278:	dec    esi
  411279:	bound  esi,QWORD PTR [ecx+0x58e6c3c7]
  41127f:	aad    0x49
  411281:	pop    esi
  411282:	xchg   esp,eax
  411283:	cmp    bh,ah
  411285:	lea    esi,[esi]
  411287:	dec    esp
  411288:	and    di,WORD PTR [edi]
  41128b:	and    eax,0x592b5ace
  411290:	inc    ecx
  411291:	inc    edx
  411292:	push   edi
  411293:	test   DWORD PTR [ebp+0x4ab8546a],0xfbfaf0a6
  41129d:	fidivr WORD PTR [edx]
  41129f:	nop
  4112a0:	fmul   st,st(7)
  4112a2:	or     DWORD PTR [edi+0x38],edx
  4112a5:	enter  0x43be,0xaa
  4112a9:	stos   BYTE PTR es:[edi],al
  4112aa:	iret   
  4112ab:	mov    dh,0xb2
  4112ad:	outs   dx,BYTE PTR ds:[esi]
  4112ae:	adc    ch,bl
  4112b0:	jg     0x4112ee
  4112b2:	stos   DWORD PTR es:[edi],eax
  4112b3:	fcom   DWORD PTR [esi]
  4112b5:	scas   al,BYTE PTR es:[edi]
  4112b6:	ror    DWORD PTR [edi+0x69798f60],cl
  4112bc:	and    eax,0x3d425645
  4112c1:	mov    ebp,0xfdb527fb
  4112c6:	pop    edi
  4112c7:	(bad)  
  4112c8:	(bad)  
  4112c9:	push   ebp
  4112ca:	fldcw  WORD PTR [ecx]
  4112cc:	jnp    0x4112b8
  4112ce:	mov    ecx,0xabb20005
  4112d3:	fwait
  4112d4:	cmp    al,0x58
  4112d6:	out    0x5,al
  4112d8:	retf   
  4112d9:	popa   
  4112da:	cmp    ebp,esi
  4112dc:	mov    eax,0x2c6f0c9d
  4112e1:	aas    
  4112e2:	loope  0x411338
  4112e4:	dec    ebx
  4112e5:	jns    0x41127c
  4112e7:	jecxz  0x4112cf
  4112e9:	mov    BYTE PTR [ecx-0x1d],dh
  4112ec:	pop    ecx
  4112ed:	mov    ds:0xb08ce378,eax
  4112f2:	call   0x7bc8:0x9e541b4e
  4112f9:	or     bl,BYTE PTR [edi+0x63]
  4112fc:	and    BYTE PTR [eax],bh
  4112fe:	mov    cl,0x2b
  411300:	push   ebx
  411301:	sar    BYTE PTR [edx+edx*8-0x37],cl
  411305:	icebp  
  411306:	shr    ah,1
  411308:	push   es
  411309:	xchg   edx,eax
  41130a:	push   eax
  41130b:	inc    esp
  41130c:	pop    edi
  41130d:	es push esi
  41130f:	pusha  
  411310:	outs   dx,BYTE PTR ds:[esi]
  411311:	jb     0x41131c
  411313:	outs   dx,BYTE PTR ds:[esi]
  411314:	cs jecxz 0x411313
  411317:	adc    al,0xcb
  411319:	out    dx,al
  41131a:	dec    ebx
  41131b:	retf   0xc43e
  41131e:	sub    edx,DWORD PTR [esp+ebp*4-0x415a1358]
  411325:	cmc    
  411326:	sub    esi,DWORD PTR [ebp+0x3f8fac78]
  41132c:	mov    cl,0x83
  41132e:	mov    dl,0xb
  411330:	jp     0x411317
  411332:	rcl    BYTE PTR [ecx-0x52108690],0x9b
  411339:	pop    ds
  41133a:	sahf   
  41133b:	outs   dx,BYTE PTR ds:[esi]
  41133c:	xchg   ebp,eax
  41133d:	cmp    ebp,DWORD PTR [eax+0x2b9920f7]
  411343:	dec    esi
  411344:	adc    DWORD PTR [ecx-0x56f032d3],ebx
  41134a:	mov    ch,0x22
  41134c:	loope  0x411380
  41134e:	push   cs
  41134f:	daa    
  411350:	cmp    BYTE PTR [ebp-0x473dc4dd],bh
  411356:	sbb    DWORD PTR [ebp+0xc0f404f],0x984da462
  411360:	sub    ecx,ebx
  411362:	mov    BYTE PTR [esi+0x457669d5],ch
  411368:	push   edx
  411369:	xchg   edx,eax
  41136a:	shl    DWORD PTR [ecx],0x1a
  41136d:	mov    al,0xf7
  41136f:	jo     0x41130c
  411371:	ja     0x411326
  411373:	cwde   
  411374:	jg     0x41134d
  411376:	jne    0x411380
  411378:	adc    ebx,esi
  41137a:	ret    0x9edc
  41137d:	sub    al,0xcc
  41137f:	cli    
  411380:	shl    DWORD PTR [eax],cl
  411382:	pop    ecx
  411383:	outs   dx,BYTE PTR ds:[esi]
  411384:	xchg   BYTE PTR cs:[esi],ch
  411387:	ret    
  411388:	inc    eax
  411389:	test   eax,0xfc7be299
  41138e:	jbe    0x4113b7
  411390:	xlat   BYTE PTR ds:[ebx]
  411391:	(bad)  
  411392:	jge    0x4113b5
  411394:	icebp  
  411395:	mov    ds:0xb3d55d9e,al
  41139a:	jle    0x4113a2
  41139c:	push   ebx
  41139d:	in     eax,dx
  41139e:	lahf   
  41139f:	mov    dl,BYTE PTR [ebx-0xe600a4]
  4113a5:	iret   
  4113a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113a7:	pushf  
  4113a8:	stos   DWORD PTR es:[edi],eax
  4113a9:	inc    eax
  4113aa:	daa    
  4113ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ac:	in     al,0x4f
  4113ae:	arpl   WORD PTR [edi],ax
  4113b0:	xchg   esi,eax
  4113b1:	(bad)  
  4113b2:	pop    ecx
  4113b3:	xor    esp,eax
  4113b5:	mov    eax,ecx
  4113b7:	dec    esp
  4113b8:	mov    ds:0xe18bb971,eax
  4113bd:	add    al,0xc8
  4113bf:	cmp    esi,DWORD PTR [ebp-0x2605a4ba]
  4113c5:	dec    ebx
  4113c6:	ins    BYTE PTR es:[edi],dx
  4113c7:	xchg   edi,eax
  4113c8:	and    DWORD PTR [esi],edx
  4113ca:	xchg   ecx,eax
  4113cb:	mov    ecx,0x3fb19e80
  4113d0:	cmp    BYTE PTR [ebx+ecx*2],cl
  4113d3:	sti    
  4113d4:	mov    ds:0xa25f5644,eax
  4113d9:	cli    
  4113da:	adc    ah,BYTE PTR [ebx+ebx*4-0x70]
  4113de:	stc    
  4113df:	pop    ss
  4113e0:	lods   eax,DWORD PTR ds:[esi]
  4113e1:	xchg   esi,eax
  4113e2:	or     BYTE PTR [esi-0x728181d3],bl
  4113e8:	push   cs
  4113e9:	or     DWORD PTR [edi],esp
  4113eb:	mov    edx,0xfe1e35d3
  4113f0:	shr    BYTE PTR [ecx+ebp*4],0x11
  4113f4:	test   BYTE PTR [eax+0x7f],dl
  4113f7:	cli    
  4113f8:	loop   0x411476
  4113fa:	mov    eax,DWORD PTR [ebx-0x49]
  4113fd:	and    BYTE PTR [ecx+0x7a],al
  411400:	fcomp  DWORD PTR [ebx]
  411402:	mov    ds,ecx
  411404:	mov    ebx,0x78e3f9d8
  411409:	nop
  41140a:	in     al,0x44
  41140c:	or     dh,al
  41140e:	in     al,dx
  41140f:	add    eax,0x3f375925
  411414:	xchg   ecx,edx
  411416:	scas   al,BYTE PTR es:[edi]
  411417:	ror    DWORD PTR [edi],1
  411419:	into   
  41141a:	sbb    al,0x91
  41141c:	xchg   ebp,eax
  41141d:	mov    BYTE PTR [edi-0x12],bl
  411420:	cmp    BYTE PTR [edi],al
  411422:	test   al,0x2a
  411424:	mov    ebx,0x705a563e
  411429:	fistp  QWORD PTR [edx-0x76]
  41142c:	aas    
  41142d:	scas   al,BYTE PTR es:[edi]
  41142e:	xchg   ecx,eax
  41142f:	push   es
  411430:	sbb    eax,0xcd180d15
  411435:	aaa    
  411436:	or     eax,0x1194bafd
  41143b:	and    edx,ebp
  41143d:	sbb    al,BYTE PTR [ecx+0x10]
  411440:	add    eax,0xb92fff15
  411445:	aad    0x1c
  411447:	cmp    dh,BYTE PTR [esi+0x2890f85d]
  41144d:	jmp    0x4114c4
  41144f:	jmp    0xca7d22a
  411454:	jg     0x4114b5
  411456:	rcl    DWORD PTR [edi+edi*8],0xcf
  41145a:	ss dec edi
  41145c:	mov    bh,dh
  41145e:	loope  0x411458
  411460:	add    ch,BYTE PTR [ebp+0x206611f]
  411466:	sti    
  411467:	mov    ecx,0x96536c49
  41146c:	daa    
  41146d:	call   0x2fd:0x40328f93
  411474:	and    DWORD PTR [eax+edx*4+0x700280a2],ebx
  41147b:	mov    ch,0xba
  41147d:	add    bl,BYTE PTR [ebx-0x6f]
  411480:	push   ebx
  411481:	adc    DWORD PTR [edx-0x61f5d46e],0x74
  411488:	outs   dx,BYTE PTR ds:[esi]
  411489:	inc    ebp
  41148a:	mov    eax,0x4218fba0
  41148f:	lods   al,BYTE PTR ds:[esi]
  411490:	(bad)  
  411492:	sub    ebx,DWORD PTR [ecx-0x7e]
  411495:	addr16 adc eax,0x88cb84c9
  41149b:	xchg   ebx,eax
  41149d:	(bad)  [ebp+0x4c]
  4114a0:	fistp  DWORD PTR [ebx+0x17]
  4114a3:	jl     0x4114aa
  4114a5:	fistp  DWORD PTR [ebp+0x4fe82070]
  4114ab:	out    0x46,al
  4114ad:	lea    eax,ds:0xa64484cd
  4114b3:	mov    bl,0x77
  4114b5:	push   0xffffffb7
  4114b7:	or     eax,0x79b06727
  4114bc:	loop   0x41150d
  4114be:	int    0xb5
  4114c0:	test   DWORD PTR [edx+0x8dcc51f],edx
  4114c6:	mov    eax,0x5d17e673
  4114cb:	inc    eax
  4114cc:	pop    ds
  4114cd:	mov    ds:0xdd0b4be5,al
  4114d2:	jge    0x411525
  4114d4:	ret    
  4114d5:	cmp    esi,ebp
  4114d7:	pop    ecx
  4114d8:	cmp    DWORD PTR [ecx-0x5c],eax
  4114db:	xchg   ebx,eax
  4114dc:	jge    0x411486
  4114de:	retf   0xc7ef
  4114e1:	lods   eax,DWORD PTR ds:[esi]
  4114e2:	jno    0x4114bb
  4114e4:	dec    ebp
  4114e5:	or     eax,0x8d9bddb7
  4114ea:	enter  0xf421,0x52
  4114ee:	jmp    0xeccc:0x363409cd
  4114f5:	jno    0x4114dd
  4114f7:	mov    dl,0x47
  4114f9:	sbb    al,0xd1
  4114fb:	shl    edx,1
  4114fd:	adc    DWORD PTR [edi-0x34],eax
  411500:	js     0x4114a2
  411502:	push   eax
  411503:	add    DWORD PTR [eax],esp
  411505:	xchg   esi,eax
  411506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411507:	dec    edx
  411508:	stos   BYTE PTR es:[edi],al
  411509:	jge    0x4114eb
  41150b:	daa    
  41150c:	arpl   WORD PTR [edx+0x2],bp
  41150f:	xor    esp,ecx
  411511:	jae    0x4114c5
  411513:	sahf   
  411514:	out    0xd2,al
  411516:	std    
  411517:	ror    DWORD PTR [eax-0x21d07bb4],0x7d
  41151e:	pop    edi
  41151f:	pop    ebp
  411520:	div    ah
  411522:	cdq    
  411523:	jp     0x411561
  411525:	pop    edx
  411526:	out    dx,eax
  411527:	mov    bl,0x78
  411529:	rcr    DWORD PTR [ebp-0x78c735ea],cl
  41152f:	test   DWORD PTR [ebx-0x234a71df],0x594d336e
  411539:	xor    bl,dl
  41153b:	ror    BYTE PTR [edx+0x6],1
  41153e:	push   cs
  41153f:	pop    ebp
  411540:	pushf  
  411541:	cmp    eax,0x11f8cbb9
  411546:	stos   BYTE PTR es:[edi],al
  411547:	out    dx,al
  411548:	call   0xb34c47a6
  41154d:	aaa    
  41154e:	gs (bad) 
  411550:	cwde   
  411551:	outs   dx,BYTE PTR ds:[esi]
  411552:	repz and al,0x5d
  411555:	mov    dh,0xad
  411557:	pushf  
  411558:	inc    ebx
  411559:	adc    eax,0x7c899584
  41155e:	sar    ch,0x4e
  411561:	ror    DWORD PTR [ebx+0x52bba975],0xfb
  411568:	stos   DWORD PTR es:[edi],eax
  411569:	les    eax,FWORD PTR [edx-0x49]
  41156c:	mov    ebx,0x800adfe2
  411571:	add    eax,0x72744c74
  411576:	adc    al,0x8e
  411578:	ja     0x4115c3
  41157a:	add    ebx,DWORD PTR [ebx-0x75ecc8ad]
  411580:	xchg   DWORD PTR [edi+eiz*8],ebp
  411583:	jle    0x4115be
  411585:	addr16 pop ds
  411587:	rcr    DWORD PTR [edx+0x72],0x89
  41158b:	test   DWORD PTR [eax-0x29],ebp
  41158e:	outs   dx,BYTE PTR ds:[esi]
  41158f:	xor    eax,0x716acad0
  411594:	push   ds
  411595:	fstp   TBYTE PTR [eax-0x2b]
  411598:	jmp    0x3b3c:0x4159959b
  41159f:	pop    esi
  4115a0:	mov    cl,ch
  4115a2:	dec    eax
  4115a3:	pop    ss
  4115a4:	push   es
  4115a5:	cmp    eax,0xbe183403
  4115aa:	aam    0xc0
  4115ac:	mov    ebp,0x15549702
  4115b1:	rcr    BYTE PTR [ecx+0x2c996fd2],1
  4115b7:	pop    eax
  4115b8:	mov    ch,0xcb
  4115ba:	sbb    eax,0xf01dca31
  4115bf:	retf   0x9a2d
  4115c2:	loop   0x4115e0
  4115c4:	mov    ebp,0xdbd735b9
  4115c9:	test   BYTE PTR [ebp-0x16636bd9],0x22
  4115d0:	(bad)  
  4115d2:	sub    esi,DWORD PTR [edx+0x74a34103]
  4115d8:	jnp    0x4115bf
  4115da:	retf   
  4115db:	xchg   esi,eax
  4115dc:	sbb    ch,bh
  4115de:	cmp    BYTE PTR [eax+edx*8],cl
  4115e1:	mov    BYTE PTR [ebx+0x64],ch
  4115e4:	dec    esp
  4115e5:	jno    0x41163d
  4115e7:	dec    edi
  4115e8:	and    esi,edx
  4115ea:	dec    ebp
  4115eb:	gs je  0x411584
  4115ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ef:	jmp    0xac3:0xc368e6dc
  4115f6:	cld    
  4115f7:	loope  0x4115b1
  4115f9:	dec    ecx
  4115fa:	scas   eax,DWORD PTR es:[edi]
  4115fb:	mov    dl,BYTE PTR [edi-0x19]
  4115fe:	lahf   
  4115ff:	jne    0x41167b
  411601:	outs   dx,BYTE PTR ds:[esi]
  411602:	cmp    edi,DWORD PTR [ebx-0x6aada755]
  411608:	jmp    0x411643
  41160a:	xor    BYTE PTR [ecx],bh
  41160c:	iret   
  41160d:	sub    esi,DWORD PTR [edx+eax*2+0x360d72ec]
  411614:	dec    edx
  411615:	out    0xeb,eax
  411617:	and    dl,BYTE PTR [ecx]
  411619:	outs   dx,BYTE PTR ds:[esi]
  41161a:	je     0x41169b
  41161c:	mov    bl,0xae
  41161e:	lock call 0x9eabfcaf
  411624:	push   ebp
  411625:	adc    ebp,DWORD PTR [esi-0x7c]
  411628:	dec    esi
  411629:	jmp    0x17f41f90
  41162e:	adc    DWORD PTR [esp+edi*1+0x5d],0x12ce030c
  411636:	sbb    BYTE PTR [ebp-0x227488b0],ch
  41163c:	xor    ch,BYTE PTR [edi-0x6a3e84ee]
  411642:	and    esi,DWORD PTR [edi-0x43]
  411645:	data16 ins BYTE PTR es:[edi],dx
  411647:	mov    edi,0xf3bce0f3
  41164c:	test   eax,edi
  41164e:	daa    
  41164f:	js     0x411618
  411651:	xchg   DWORD PTR [eax-0x2c029065],esi
  411657:	mov    esi,0x27a7e014
  41165c:	push   ebx
  41165d:	mov    dh,0x7e
  41165f:	adc    ah,BYTE PTR [esp+ecx*8+0x16]
  411663:	sub    ebp,DWORD PTR [ebx+0x66]
  411666:	and    ebp,ebp
  411668:	adc    DWORD PTR [esi+eiz*4+0x59399f77],esp
  41166f:	sar    edx,cl
  411671:	cmp    eax,0xffce433f
  411676:	mov    dh,0x7e
  411678:	imul   edx,ebp,0x809a27fa
  41167e:	in     eax,dx
  41167f:	(bad)  
  411680:	dec    edi
  411681:	adc    ah,dl
  411683:	jb     0x4116b3
  411685:	gs jns 0x411652
  411688:	fisttp WORD PTR [edx+0x57]
  41168b:	lods   eax,DWORD PTR ds:[esi]
  41168c:	add    DWORD PTR [eax],esi
  41168e:	mov    eax,0x63bdebbd
  411693:	adc    eax,0xbfcf9321
  411698:	jl     0x41170c
  41169a:	popa   
  41169b:	sar    DWORD PTR [esi+0x347ff3ed],1
  4116a1:	mov    edx,0x3907900e
  4116a6:	lock and BYTE PTR [ecx-0x2d05e5d1],bl
  4116ad:	enter  0x181c,0xc1
  4116b1:	scas   al,BYTE PTR es:[edi]
  4116b2:	inc    edi
  4116b3:	cli    
  4116b4:	outs   dx,DWORD PTR ds:[esi]
  4116b5:	data16 (bad) 
  4116b7:	xchg   esi,eax
  4116b8:	pop    ebx
  4116b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ba:	je     0x411709
  4116bc:	bound  ecx,QWORD PTR [ebp-0x72c83e78]
  4116c2:	cs ret 
  4116c4:	push   esp
  4116c5:	call   0x8a1083f2
  4116ca:	mov    esi,0x4d61ee88
  4116cf:	pop    edx
  4116d0:	scas   al,BYTE PTR es:[edi]
  4116d1:	or     eax,edx
  4116d3:	fcomp  DWORD PTR [ecx+edi*1+0x545fcd01]
  4116da:	mov    cl,0x6f
  4116dc:	xchg   DWORD PTR [ebp+0x63c3684c],ebx
  4116e2:	daa    
  4116e3:	das    
  4116e4:	fwait
  4116e5:	push   es
  4116e6:	push   0x6710c530
  4116eb:	mov    eax,0xd6f88afc
  4116f0:	sar    DWORD PTR [ebp+0x47],cl
  4116f3:	inc    ebp
  4116f4:	ror    BYTE PTR [edx],cl
  4116f6:	scas   eax,DWORD PTR es:[edi]
  4116f7:	sti    
  4116f8:	mov    ds:0x8cbaecee,eax
  4116fd:	hlt    
  4116fe:	cmp    al,BYTE PTR [ebx-0x167e488e]
  411704:	adc    DWORD PTR [edi-0x52be765a],ebx
  41170a:	pushf  
  41170b:	out    dx,eax
  41170c:	ins    BYTE PTR es:[edi],dx
  41170d:	jge    0x4116c8
  41170f:	xchg   edx,eax
  411710:	retf   
  411711:	lods   eax,DWORD PTR ds:[esi]
  411712:	sahf   
  411713:	sti    
  411714:	push   0x69
  411716:	dec    ecx
  411717:	sbb    bh,BYTE PTR [ecx-0xf]
  41171a:	mov    esp,0xd0492d3e
  41171f:	dec    ebx
  411720:	or     dh,BYTE PTR [ebx-0x71]
  411723:	stos   BYTE PTR es:[edi],al
  411724:	xor    BYTE PTR [ecx+0x34],ah
  411727:	shl    DWORD PTR [ebp-0xfed75e8],1
  41172d:	inc    esi
  41172e:	cwde   
  41172f:	mov    dh,0x2a
  411731:	aas    
  411732:	into   
  411733:	aad    0x3
  411735:	xor    al,0x89
  411737:	hlt    
  411738:	repz sbb ch,BYTE PTR [ecx-0x21]
  41173c:	(bad)  
  41173e:	mov    al,ch
  411740:	(bad)  
  411741:	jmp    0xa0a1:0xd91362d7
  411748:	jecxz  0x411730
  41174a:	outs   dx,DWORD PTR ds:[esi]
  41174b:	adc    eax,0x3b95f0b
  411750:	(bad)  
  411751:	sbb    DWORD PTR [esi+0x39],edi
  411754:	sub    dh,BYTE PTR [ecx+0x26]
  411757:	rcl    ebp,cl
  411759:	inc    esp
  41175a:	inc    esi
  41175b:	pop    ds
  41175c:	cmp    al,0x21
  41175e:	fild   WORD PTR [ecx+edi*2+0x44]
  411762:	outs   dx,BYTE PTR ds:[esi]
  411763:	test   BYTE PTR [esi+0x18],bl
  411766:	cmp    al,ch
  411768:	pushf  
  411769:	mov    ch,al
  41176b:	shr    DWORD PTR [esi+0x7d],cl
  41176e:	popf   
  41176f:	les    edi,FWORD PTR [edi-0x67df0f7a]
  411775:	loopne 0x411737
  411777:	dec    ebp
  411778:	push   ebp
  411779:	push   eax
  41177a:	aam    0xa5
  41177c:	cdq    
  41177d:	stc    
  41177e:	scas   eax,DWORD PTR es:[edi]
  41177f:	js     0x4117de
  411781:	ins    DWORD PTR es:[edi],dx
  411782:	imul   edi,DWORD PTR [edi+0x8],0xc9384484
  411789:	in     eax,dx
  41178a:	xor    eax,0x19dd0046
  41178f:	bound  esp,QWORD PTR [edi+0x60]
  411792:	add    eax,0x6649057e
  411797:	or     esi,ebx
  411799:	aas    
  41179a:	std    
  41179b:	in     al,dx
  41179c:	je     0x411759
  41179e:	ds retf 
  4117a0:	into   
  4117a1:	cmp    al,0x6
  4117a3:	jmp    0xafd9:0x499dbc0d
  4117aa:	jb     0x411806
  4117ac:	mov    eax,ds:0x9ba76e73
  4117b1:	jb     0x411817
  4117b3:	icebp  
  4117b4:	dec    ebx
  4117b5:	call   DWORD PTR [eax+ebp*1]
  4117b8:	cs push ebx
  4117ba:	xchg   esp,eax
  4117bb:	test   DWORD PTR [edi],ebp
  4117bd:	xor    ebx,esp
  4117bf:	xchg   ecx,eax
  4117c0:	mov    DWORD PTR [ecx],ecx
  4117c2:	pusha  
  4117c3:	or     cl,BYTE PTR [edx]
  4117c5:	aas    
  4117c6:	ret    0xce7c
  4117c9:	rcl    ch,1
  4117cb:	in     al,0x9a
  4117cd:	adc    DWORD PTR ds:[ecx-0x342b7dcc],edx
  4117d4:	pop    ds
  4117d5:	int3   
  4117d6:	pop    eax
  4117d7:	adc    ebp,DWORD PTR [esi]
  4117d9:	fisub  WORD PTR [eax+0x5c15689e]
  4117df:	sub    eax,0xb9693c5d
  4117e4:	push   ebx
  4117e5:	jo     0x411828
  4117e7:	push   esp
  4117e8:	mov    edi,0xb02cb37d
  4117ed:	sub    eax,0xc833ce2b
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	push   0xe81565e7
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	popa   
  411879:	inc    esp
  41187a:	adc    edi,DWORD PTR [ebx+0x32]
  41187d:	xor    ah,al
  41187f:	repz icebp 
  411881:	xlat   BYTE PTR ds:[ebx]
  411882:	push   cs
  411883:	and    eax,0x9841afdd
  411888:	or     DWORD PTR [esi-0x461f507f],edx
  41188e:	std    
  41188f:	mov    cl,0x80
  411891:	mov    bl,0x53
  411893:	nop
  411894:	pop    ss
  411895:	sub    al,0xb6
  411897:	jns    0x41183b
  411899:	les    edi,FWORD PTR [ebx+0x65b1f6a7]
  41189f:	jb     0x4118aa
  4118a1:	xchg   esp,eax
  4118a2:	cmp    al,0x52
  4118a4:	adc    ebp,DWORD PTR [esi+edi*8]
  4118a7:	out    0x1b,al
  4118a9:	jbe    0x4118d5
  4118ab:	cmp    edx,ebx
  4118ad:	std    
  4118ae:	and    BYTE PTR [eax+0x7a],dh
  4118b1:	arpl   WORD PTR [ecx],cx
  4118b3:	mov    es,ebx
  4118b5:	ds inc esi
  4118b7:	pop    ss
  4118b8:	and    al,0xb4
  4118ba:	dec    ebx
  4118bb:	jo     0x4118ba
  4118bd:	(bad)  [esi+0x13b58247]
  4118c3:	pop    ebx
  4118c4:	mov    es,WORD PTR [esi]
  4118c6:	add    eax,0x5c501db6
  4118cb:	test   ch,dh
  4118cd:	retf   
  4118ce:	dec    ebx
  4118cf:	repz js 0x4118ac
  4118d2:	cld    
  4118d3:	sbb    ch,dl
  4118d5:	leave  
  4118d6:	sbb    ch,BYTE PTR [ebp+0x3a86b01c]
  4118dc:	int    0x11
  4118de:	(bad)  
  4118df:	rcl    DWORD PTR [eax],1
  4118e1:	sub    DWORD PTR [esp+ecx*2+0x55],esi
  4118e5:	mov    cl,0xd8
  4118e7:	stos   BYTE PTR es:[edi],al
  4118e8:	cmc    
  4118e9:	pop    ebp
  4118ea:	and    eax,edi
  4118ec:	adc    al,BYTE PTR [ebx]
  4118ee:	(bad)  
  4118ef:	mov    bh,0x29
  4118f1:	lahf   
  4118f2:	scas   al,BYTE PTR es:[edi]
  4118f3:	test   dh,al
  4118f5:	pop    edi
  4118f6:	mov    ebp,0xdd9b9e51
  4118fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118fc:	mov    esp,0x441d5daa
  411901:	cli    
  411902:	(bad)  
  411903:	or     DWORD PTR [eax+0x10d45a29],edi
  411909:	and    al,0x6a
  41190b:	out    dx,eax
  41190c:	mov    bl,0x80
  41190e:	nop
  41190f:	mov    DWORD PTR [ecx+0x21],esi
  411912:	mov    bh,al
  411914:	sti    
  411915:	dec    edx
  411916:	inc    eax
  411917:	mov    dh,0x1e
  411919:	xchg   esi,eax
  41191a:	and    al,0xd1
  41191c:	fidiv  WORD PTR [ecx-0x19]
  41191f:	and    dl,BYTE PTR [edx+0x5e]
  411922:	adc    BYTE PTR [eax-0x69],ah
  411925:	mov    bl,0xea
  411927:	push   ecx
  411928:	call   0x841a:0x4086e38
  41192f:	jecxz  0x41197c
  411931:	dec    edx
  411932:	fcom   st(3)
  411934:	cld    
  411935:	lods   eax,DWORD PTR ds:[esi]
  411936:	push   ecx
  411937:	out    dx,al
  411938:	iret   
  411939:	push   cs
  41193a:	mov    cl,BYTE PTR [esi-0x5f]
  41193d:	out    0xfb,al
  41193f:	in     eax,0xa4
  411941:	sbb    al,0xa5
  411943:	add    eax,ebx
  411945:	push   ds
  411946:	sub    al,0xe8
  411948:	hlt    
  411949:	rol    DWORD PTR [edi-0x36],cl
  41194c:	fs mov esi,ecx
  41194f:	out    dx,al
  411950:	and    eax,0x98f72e15
  411955:	and    al,0x9
  411957:	addr16 and bh,dl
  41195a:	inc    ebp
  41195b:	and    eax,0xd85ad96a
  411960:	icebp  
  411961:	push   0x3719d0c1
  411966:	add    ebx,DWORD PTR [edi]
  411968:	jb     0x4119d1
  41196a:	leave  
  41196b:	cmp    dh,dh
  41196d:	sbb    dh,ah
  41196f:	mov    DWORD PTR [ebx-0x3b],edi
  411972:	call   0x4f5c37b
  411977:	push   ecx
  411978:	pop    esi
  411979:	dec    esp
  41197a:	mov    ds:0xd634447,al
  41197f:	fbstp  TBYTE PTR [edx+0x4d]
  411982:	sbb    al,0xe1
  411984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411985:	sbb    bl,BYTE PTR [edx-0x36b96365]
  41198b:	jl     0x411929
  41198d:	inc    BYTE PTR ds:[ecx]
  411990:	dec    edi
  411991:	outs   dx,DWORD PTR ds:[esi]
  411992:	mov    ebp,0x57afb455
  411997:	dec    esi
  411998:	xor    BYTE PTR [ecx-0x86e1674],bl
  41199e:	aas    
  41199f:	mov    ch,0x7
  4119a1:	mov    ebp,0x2ab7c4f9
  4119a6:	mov    bl,0xbd
  4119a8:	stc    
  4119a9:	adc    bl,BYTE PTR [edi-0x7f]
  4119ac:	xchg   ecx,eax
  4119ad:	push   0x27
  4119af:	inc    ecx
  4119b0:	inc    bl
  4119b2:	fdiv   QWORD PTR [ebx+eax*1+0x7fd94047]
  4119b9:	retf   
  4119ba:	mov    ebp,0xca2c3a18
  4119bf:	ja     0x411a2d
  4119c1:	test   DWORD PTR [edi],esp
  4119c3:	jnp    0x411a17
  4119c5:	xor    esi,ecx
  4119c7:	fidivr WORD PTR [edi]
  4119c9:	push   eax
  4119ca:	std    
  4119cb:	inc    esp
  4119cc:	mov    eax,0xc2306404
  4119d1:	hlt    
  4119d2:	push   edx
  4119d3:	pop    ecx
  4119d4:	ret    0x61f5
  4119d7:	mov    edx,0xdd644424
  4119dc:	out    0x92,al
  4119de:	cs xor ebx,edi
  4119e1:	mov    bh,0x36
  4119e3:	addr16 dec edi
  4119e5:	(bad)  
  4119e6:	pop    edi
  4119e7:	cld    
  4119e8:	lock mov ebp,0x1dbbc02d
  4119ee:	or     eax,0x8d3e9850
  4119f3:	and    ebx,DWORD PTR [ecx]
  4119f5:	(bad)  
  4119f6:	nop
  4119f7:	cmp    al,0xa8
  4119f9:	mov    DWORD PTR [edi+0x75],esi
  4119fc:	mov    edi,0x5b57c71a
  411a01:	fs jbe 0x411a07
  411a04:	push   esi
  411a05:	fist   DWORD PTR [ebp-0x5f]
  411a08:	test   eax,esi
  411a0a:	les    ecx,FWORD PTR [esi-0x71]
  411a0d:	inc    ecx
  411a0e:	and    eax,0x42e8d9c9
  411a13:	jb     0x411a87
  411a15:	sti    
  411a16:	push   esp
  411a17:	popf   
  411a18:	push   edx
  411a19:	mov    edi,0xf429b80d
  411a1e:	mov    ebx,0x919dd9f5
  411a23:	mov    gs,WORD PTR [ecx-0x18]
  411a26:	and    ah,BYTE PTR [esi-0x3c]
  411a29:	jae    0x411a67
  411a2b:	aas    
  411a2c:	add    al,0x76
  411a2e:	inc    esp
  411a2f:	push   ebx
  411a30:	add    DWORD PTR [eax],edi
  411a32:	mov    dh,al
  411a34:	dec    esi
  411a35:	pop    es
  411a36:	sub    eax,0xd7ef0356
  411a3b:	push   ebx
  411a3c:	adc    al,0xca
  411a3e:	ja     0x4119ed
  411a40:	push   esp
  411a41:	sub    dh,bh
  411a43:	(bad)  
  411a44:	mov    eax,0xd34d9360
  411a49:	jecxz  0x411ac7
  411a4b:	call   0x955ed2cd
  411a50:	sub    edx,DWORD PTR [ecx]
  411a52:	xchg   ebx,eax
  411a53:	cs mov ecx,0x28067957
  411a59:	adc    DWORD PTR [edx-0x28],ecx
  411a5c:	pop    ss
  411a5d:	(bad)  
  411a5e:	lods   al,BYTE PTR gs:[esi]
  411a60:	fidiv  DWORD PTR ss:[ecx-0x7bbdb647]
  411a67:	dec    edi
  411a68:	aaa    
  411a69:	add    bl,cl
  411a6b:	mov    edi,0xb180ad62
  411a70:	(bad)
  411a75:	ret    0x31b2
  411a78:	idiv   BYTE PTR [ecx-0x7e]
  411a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a7c:	pushaw 
  411a7e:	or     eax,0x930cb05d
  411a83:	gs mov esi,0x78cc25a2
  411a89:	out    dx,eax
  411a8a:	mov    ds:0x73f21aaa,al
  411a8f:	pop    edi
  411a90:	mov    eax,0xb6c88685
  411a95:	xchg   edx,eax
  411a96:	xor    bh,BYTE PTR [edi-0x54980f63]
  411a9c:	xchg   edx,eax
  411a9d:	mov    bh,0x91
  411a9f:	(bad)  
  411aa0:	xlat   BYTE PTR ds:[ebx]
  411aa1:	cdq    
  411aa2:	mov    edx,0x722fe4ef
  411aa7:	mov    bl,0x79
  411aa9:	xchg   esp,eax
  411aaa:	inc    ecx
  411aab:	lds    esp,FWORD PTR [eax]
  411aad:	pushf  
  411aae:	sub    DWORD PTR ss:[esp+eiz*4-0x54],ebx
  411ab3:	iret   
  411ab4:	cs popf 
  411ab6:	adc    esp,DWORD PTR [esp+edx*2-0x53]
  411aba:	aad    0x30
  411abc:	pop    edi
  411abd:	mov    dl,BYTE PTR [ebx+0x37a7c691]
  411ac3:	fdivr  st,st(7)
  411ac5:	pop    ebp
  411ac6:	cdq    
  411ac7:	(bad)
  411aca:	cmp    al,bl
  411acc:	xor    edi,0x1149c372
  411ad2:	push   ds
  411ad3:	inc    esi
  411ad4:	dec    ecx
  411ad5:	in     eax,dx
  411ad6:	pop    es
  411ad7:	fs cdq 
  411ad9:	cmp    DWORD PTR [edi+eiz*1],edi
  411adc:	jb     0x411ab1
  411ade:	inc    esi
  411adf:	test   al,0xf3
  411ae1:	arpl   WORD PTR [esi-0x2f0f6308],sp
  411ae7:	pushf  
  411ae8:	inc    edi
  411ae9:	fmul   QWORD PTR [edi]
  411aeb:	or     DWORD PTR [edx-0x6],ecx
  411aee:	cmc    
  411aef:	std    
  411af0:	cmp    ch,BYTE PTR [esi]
  411af2:	sub    eax,0x782af7a5
  411af7:	bound  edi,QWORD PTR [ebx+0x66]
  411afa:	(bad)  
  411afc:	sub    dl,bl
  411afe:	test   eax,0x35711403
  411b03:	xchg   edx,eax
  411b04:	pop    eax
  411b05:	(bad)  [ecx+0x7599ac45]
  411b0b:	pop    edx
  411b0c:	in     eax,0x68
  411b0e:	(bad)  
  411b10:	adc    ebp,DWORD PTR [esi-0xa620ffe]
  411b16:	sbb    DWORD PTR [ecx],edx
  411b18:	out    dx,eax
  411b19:	mov    al,ds:0xc6060a69
  411b1e:	(bad)  
  411b1f:	enter  0x66d1,0xc8
  411b23:	jns    0x411acd
  411b25:	sub    al,0xd5
  411b27:	cli    
  411b28:	jle    0x411b40
  411b2a:	retfw  
  411b2c:	push   ecx
  411b2d:	das    
  411b2e:	sub    BYTE PTR [eax-0x52],cl
  411b31:	lds    eax,FWORD PTR [eax+0x352d2452]
  411b37:	add    BYTE PTR [ecx],dl
  411b39:	mov    al,0x3a
  411b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b3c:	mov    ah,0xb
  411b3e:	cmp    eax,0x9929e0fa
  411b43:	test   BYTE PTR [esi],ah
  411b45:	bound  ebx,QWORD PTR [ebp+0x1fbc2953]
  411b4b:	sub    eax,0xb3189a29
  411b50:	leave  
  411b51:	mov    cl,0x6a
  411b53:	sbb    eax,0x293fde59
  411b58:	adc    eax,0xd35efd43
  411b5d:	push   0x7f39d8d7
  411b62:	add    ecx,ebp
  411b64:	jl     0x411b91
  411b66:	add    esi,esi
  411b68:	mov    al,ds:0x391eb7e7
  411b6d:	imul   ebp,ebp,0x17254ca2
  411b73:	push   ebp
  411b74:	cwde   
  411b75:	jge    0x411b59
  411b77:	nop
  411b78:	push   0xfffffff6
  411b7a:	cs in  eax,0x4b
  411b7d:	mov    ebx,0xb9674899
  411b82:	inc    edx
  411b83:	fs xchg edx,eax
  411b85:	jnp    0x411be6
  411b87:	(bad)  
  411b88:	int3   
  411b89:	pop    edx
  411b8a:	xchg   esi,eax
  411b8b:	push   ebx
  411b8c:	scas   eax,DWORD PTR es:[edi]
  411b8d:	xchg   ebx,eax
  411b8e:	pop    ss
  411b8f:	out    dx,eax
  411b90:	(bad)  
  411b91:	sbb    eax,DWORD PTR [edx-0x565dbad7]
  411b97:	adc    ch,BYTE PTR [edi-0x1a]
  411b9a:	repz add DWORD PTR [edx-0x1f],edx
  411b9e:	sub    ch,dl
  411ba0:	add    al,0x8d
  411ba2:	mov    bh,0x53
  411ba4:	mov    WORD PTR [ecx],es
  411ba6:	popa   
  411ba7:	pop    edi
  411ba8:	stos   DWORD PTR es:[edi],eax
  411ba9:	fcom   DWORD PTR [esi]
  411bab:	cs push esi
  411bad:	scas   al,BYTE PTR es:[edi]
  411bae:	gs (bad) 
  411bb0:	push   0x16
  411bb2:	or     eax,0x4435702d
  411bb7:	pop    edi
  411bb8:	imul   esp,ebp,0x17
  411bbb:	dec    edi
  411bbc:	in     al,0xc6
  411bbe:	push   DWORD PTR ds:0x4174dc22
  411bc4:	xchg   ebp,eax
  411bc5:	loopne 0x411bde
  411bc7:	stos   BYTE PTR es:[edi],al
  411bc8:	sti    
  411bc9:	inc    ebx
  411bca:	scas   eax,DWORD PTR es:[edi]
  411bcb:	imul   edx,DWORD PTR [ebx+0x677324d6],0xffffff92
  411bd2:	test   BYTE PTR [ebx+0x2],0xbf
  411bd6:	add    ch,al
  411bd8:	mov    bl,0x7a
  411bda:	inc    ecx
  411bdb:	push   ds
  411bdc:	xor    esi,DWORD PTR [eax+0x61]
  411bdf:	aam    0xe5
  411be1:	jb     0x411c1d
  411be3:	cmc    
  411be4:	and    al,0xee
  411be6:	xor    al,0x25
  411be8:	out    dx,eax
  411be9:	sbb    eax,0xffceac13
  411bee:	pop    esi
  411bef:	stos   BYTE PTR es:[edi],al
  411bf0:	jecxz  0x411b87
  411bf2:	inc    ecx
  411bf3:	mov    al,ds:0x40c4fffd
  411bf8:	popf   
  411bf9:	mov    dl,0x7
  411bfb:	xor    al,0x70
  411bfd:	push   cs
  411bfe:	jp     0x411b89
  411c00:	imul   edi,DWORD PTR [ebp+0x162e2be1],0x61
  411c07:	cli    
  411c08:	mov    BYTE PTR [ebp+0x31],bh
  411c0b:	pop    esp
  411c0c:	lahf   
  411c0d:	fld    QWORD PTR [esi]
  411c0f:	ja     0x411c5c
  411c11:	xor    ecx,DWORD PTR [edx-0x27]
  411c14:	cwde   
  411c15:	ret    
  411c16:	or     ch,BYTE PTR ds:0x8c609ae3
  411c1c:	rcr    BYTE PTR [ebp-0x14],1
  411c1f:	mov    BYTE PTR [ebx+0x65],bh
  411c22:	cmp    eax,0x508ff96
  411c27:	jne    0x411c64
  411c29:	inc    edx
  411c2a:	dec    eax
  411c2b:	dec    esp
  411c2c:	sbb    DWORD PTR [ebx+0x1afaa8c0],0xffffffac
  411c33:	mov    dl,0x67
  411c35:	cmp    al,0xb6
  411c37:	bound  ecx,QWORD PTR [ecx]
  411c39:	and    DWORD PTR [edx-0x4a],eax
  411c3c:	loopne 0x411c6b
  411c3e:	cld    
  411c3f:	xlat   BYTE PTR ds:[ebx]
  411c40:	dec    edi
  411c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c42:	fidivr WORD PTR [ecx]
  411c44:	jp     0x411bc8
  411c46:	gs loope 0x411c0d
  411c49:	pop    edx
  411c4a:	dec    ebx
  411c4b:	cdq    
  411c4c:	nop
  411c4d:	test   DWORD PTR [ecx-0x58],eax
  411c50:	mov    eax,ds:0x330de914
  411c55:	cmp    eax,0x814d5ad1
  411c5a:	jecxz  0x411cc1
  411c5c:	jg     0x411c03
  411c5e:	ret    0xdbcf
  411c61:	(bad)  
  411c62:	test   DWORD PTR [ebp+0x7d],0xbb9e23ec
  411c69:	ss mov esi,0x10092594
  411c6f:	xchg   esp,eax
  411c70:	mov    al,0xf6
  411c72:	(bad)  
  411c73:	and    eax,eax
  411c75:	retf   
  411c76:	jmp    0x411c17
  411c78:	fisttp WORD PTR [edi]
  411c7a:	lock xor esi,DWORD PTR [ecx+0x3b45b2c4]
  411c81:	cmp    bh,BYTE PTR [esp+esi*4+0x23]
  411c85:	xchg   esi,eax
  411c86:	out    dx,eax
  411c87:	sahf   
  411c88:	rcl    DWORD PTR [edx-0x7f],1
  411c8b:	cmp    bl,BYTE PTR [esi-0x9]
  411c8e:	mov    eax,ds:0x811a9992
  411c93:	mov    ds,WORD PTR [eax+0x4182ffc6]
  411c99:	arpl   WORD PTR [si+0x26],bx
  411c9d:	push   edi
  411c9e:	or     BYTE PTR [eax+0x77875a7b],dh
  411ca4:	push   esi
  411ca5:	and    DWORD PTR [ebx],ebx
  411ca7:	or     BYTE PTR [ecx],al
  411ca9:	jbe    0x411c6d
  411cab:	lds    edx,FWORD PTR [edi-0x5b53ae50]
  411cb1:	int3   
  411cb2:	inc    DWORD PTR [eax]
  411cb4:	xchg   esi,eax
  411cb5:	aas    
  411cb6:	retf   0x8eef
  411cb9:	cdq    
  411cba:	fmul   DWORD PTR [eax-0x2e]
  411cbd:	test   DWORD PTR [ebx+ecx*8+0x2ace8349],0xc39286c4
  411cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cc9:	pop    ds
  411cca:	adc    eax,0xfd24b094
  411ccf:	and    DWORD PTR [edi+0x7f40e7cf],eax
  411cd5:	xchg   DWORD PTR [ebx+0x5e],ecx
  411cd8:	aaa    
  411cd9:	sti    
  411cda:	pop    ecx
  411cdb:	add    DWORD PTR [edi-0x9],ebp
  411cde:	add    DWORD PTR [eax],esi
  411ce0:	jmp    FWORD PTR [edx-0x3eb9db78]
  411ce6:	rcl    eax,cl
  411ce8:	clc    
  411ce9:	push   0x854831ca
  411cee:	scas   al,BYTE PTR es:[edi]
  411cef:	fmul   QWORD PTR [eax+0xb]
  411cf2:	jmp    ecx
  411cf4:	dec    esi
  411cf5:	fcom   QWORD PTR ds:0x84ba6d05
  411cfb:	xor    BYTE PTR [esi],0x3
  411cfe:	mov    ebp,0xf0c0f181
  411d03:	xor    DWORD PTR [edx+0xed778e9],0xffffffb2
  411d0a:	or     al,BYTE PTR [ebx]
  411d0c:	sub    BYTE PTR [ebx],ah
  411d0e:	arpl   WORD PTR [ebp+0x59e6856c],si
  411d14:	cmovle esp,edx
  411d17:	sub    DWORD PTR [edx+edx*4],ecx
  411d1a:	cmc    
  411d1b:	xor    eax,0xf36d1b55
  411d20:	dec    sp
  411d22:	and    eax,0x991d2d48
  411d27:	lock (bad) 
  411d29:	or     edx,DWORD PTR [esi-0x5]
  411d2c:	xchg   ebx,eax
  411d2d:	das    
  411d2e:	in     al,dx
  411d2f:	mov    cl,0x41
  411d31:	pop    ebp
  411d32:	jns    0x411ccb
  411d34:	ds jmp 0x3ef3:0x13c13248
  411d3c:	fs lahf 
  411d3e:	sbb    ecx,DWORD PTR [edx-0x79]
  411d41:	inc    ecx
  411d42:	adc    al,0xac
  411d44:	sbb    dl,BYTE PTR ds:0x150892ee
  411d4a:	jns    0x411d3d
  411d4c:	dec    ebp
  411d4d:	data16 ja 0x411d00
  411d50:	mov    ebp,0x21f73c1f
  411d55:	push   esi
  411d56:	jb     0x411d84
  411d58:	add    DWORD PTR [edx-0x28],ecx
  411d5b:	iret   
  411d5c:	push   DWORD PTR [ecx]
  411d5e:	xchg   edi,eax
  411d5f:	ds (bad) 
  411d61:	cmp    cl,BYTE PTR [esi+0x10712eef]
  411d67:	test   BYTE PTR [esi+0x49],dl
  411d6a:	ret    
  411d6b:	bound  ebx,QWORD PTR [ebp-0x56322e30]
  411d71:	add    al,0x39
  411d73:	retf   0xdfed
  411d76:	add    DWORD PTR [ebx+edi*2+0x7],ebp
  411d7a:	fidivr WORD PTR [edx+0x660091]
  411d80:	add    DWORD PTR [edx],edi
  411d82:	cmp    dh,cl
  411d84:	xchg   edx,eax
  411d85:	add    esi,DWORD PTR [edi-0x42]
  411d88:	out    dx,al
  411d89:	xor    eax,0xa7b56de0
  411d8e:	cmp    al,0xfc
  411d90:	popa   
  411d91:	bound  edx,QWORD PTR [ecx+0x7c]
  411d94:	das    
  411d95:	aad    0xe3
  411d97:	push   esp
  411d98:	sbb    ah,0xce
  411d9b:	mov    cl,BYTE PTR [edx-0x22570e07]
  411da1:	hlt    
  411da2:	jb     0x411d9f
  411da4:	pop    es
  411da5:	leave  
  411da6:	std    
  411da7:	call   FWORD PTR [esi]
  411da9:	xor    ah,BYTE PTR [ebp-0x66]
  411dac:	pop    eax
  411dad:	and    dh,bh
  411daf:	ret    0xfa3e
  411db2:	jmp    0x7f5129d
  411db7:	std    
  411db8:	jl     0x411e1f
  411dba:	add    ebp,DWORD PTR [edi+0x7e]
  411dbd:	retf   
  411dbe:	stos   BYTE PTR es:[edi],al
  411dbf:	repnz inc eax
  411dc1:	dec    edi
  411dc2:	inc    ebp
  411dc3:	push   ebx
  411dc4:	clc    
  411dc5:	jecxz  0x411dcc
  411dc7:	cmp    DWORD PTR [esi],0x4d
  411dca:	imul   esp,DWORD PTR [esp+ecx*2-0x52],0x70
  411dcf:	mov    ebp,0xf95013bf
  411dd4:	mov    edx,0x64ba0480
  411dd9:	add    al,0x44
  411ddb:	jecxz  0x411de7
  411ddd:	xor    esi,0xffffffdf
  411de0:	adc    edx,DWORD PTR [edi-0x6d]
  411de3:	call   FWORD PTR [ebx]
  411de5:	shl    bl,1
  411de7:	stc    
  411de8:	push   eax
  411de9:	leave  
  411dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411deb:	adc    al,al
  411ded:	retf   
  411dee:	ins    BYTE PTR es:[edi],dx
  411def:	loope  0x411dfd
  411df1:	pop    ecx
  411df2:	sbb    BYTE PTR [edx-0x424a5a0c],ah
  411df8:	dec    esp
  411df9:	arpl   WORD PTR ds:0xdd15b7c2,di
  411dff:	inc    ecx
  411e00:	dec    ecx
  411e01:	pop    edx
  411e02:	xor    eax,0x80bc6d6f
  411e07:	cli    
  411e08:	jecxz  0x411db5
  411e0a:	xchg   esp,eax
  411e0b:	js     0x411e47
  411e0d:	jge    0x411e73
  411e0f:	mov    al,0xaf
  411e11:	das    
  411e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e13:	scas   eax,DWORD PTR es:[edi]
  411e14:	jb     0x411e77
  411e16:	scas   eax,DWORD PTR es:[edi]
  411e17:	pop    ss
  411e18:	cmp    ebp,DWORD PTR [eax]
  411e1a:	cli    
  411e1b:	adc    DWORD PTR [ecx+ebx*8-0x3be9855e],eax
  411e22:	push   ds
  411e23:	add    DWORD PTR [edi+esi*1+0x6a23fc0c],eax
  411e2a:	or     DWORD PTR [esi],edi
  411e2c:	inc    ebx
  411e2d:	std    
  411e2e:	dec    ebx
  411e2f:	arpl   WORD PTR [ecx-0x1445999],di
  411e35:	add    dh,BYTE PTR [esi+eiz*1]
  411e38:	dec    esi
  411e39:	in     al,dx
  411e3a:	enter  0x97ad,0xa4
  411e3e:	outs   dx,DWORD PTR ds:[esi]
  411e3f:	aad    0xa9
  411e41:	or     BYTE PTR [eax+0x6c0156c6],bh
  411e47:	fstp   st(6)
  411e49:	adc    eax,0x445b2f0a
  411e4e:	push   ebx
  411e4f:	xor    bh,BYTE PTR [ecx-0x3c]
  411e52:	mov    edi,0xae235514
  411e57:	sub    DWORD PTR [eax],esp
  411e59:	loope  0x411e9e
  411e5b:	sti    
  411e5c:	mov    eax,ds:0xb9e6e2c8
  411e61:	(bad)  
  411e62:	cld    
  411e63:	cdq    
  411e64:	mov    ?,WORD PTR [ecx+ecx*2+0x43f83dd4]
  411e6b:	cmc    
  411e6c:	xor    esp,DWORD PTR [edi]
  411e6e:	jle    0x411e61
  411e70:	jbe    0x411df8
  411e72:	lahf   
  411e73:	jge    0x411ea8
  411e75:	into   
  411e76:	or     bl,dl
  411e78:	dec    ebp
  411e79:	mov    ebp,0xa0ad866b
  411e7e:	in     eax,0xc8
  411e80:	pop    es
  411e81:	xor    cl,al
  411e83:	int3   
  411e84:	cld    
  411e85:	pushf  
  411e86:	stos   DWORD PTR es:[edi],eax
  411e87:	dec    ecx
  411e88:	pop    ds
  411e89:	(bad)  
  411e8a:	in     eax,dx
  411e8b:	ins    BYTE PTR es:[edi],dx
  411e8c:	add    eax,DWORD PTR [esi-0x246918af]
  411e92:	ret    
  411e93:	push   0xdd884635
  411e98:	fwait
  411e99:	mov    ah,0x54
  411e9b:	sbb    BYTE PTR [ebp-0x34],dh
  411e9e:	(bad)
  411ea2:	mov    dh,0x83
  411ea4:	add    ecx,DWORD PTR [eax+edi*1]
  411ea7:	jb     0x411e7a
  411ea9:	dec    esi
  411eaa:	mov    eax,0x125d8f3c
  411eaf:	xchg   ecx,eax
  411eb0:	outs   dx,DWORD PTR ds:[esi]
  411eb1:	inc    edx
  411eb2:	sbb    esp,DWORD PTR [ebp-0x73d87503]
  411eb8:	loope  0x411ea0
  411eba:	jmp    0x38869e2b
  411ebf:	scas   al,BYTE PTR es:[edi]
  411ec0:	int3   
  411ec1:	xchg   edi,eax
  411ec2:	fcom   DWORD PTR [esi-0x59bf516d]
  411ec8:	lds    ebp,FWORD PTR cs:[ecx]
  411ecb:	inc    esi
  411ecc:	into   
  411ecd:	adc    esi,ebp
  411ecf:	pop    es
  411ed0:	pop    eax
  411ed1:	mov    cl,0xef
  411ed3:	mov    cl,0x35
  411ed5:	mov    edx,0x95c6361
  411eda:	icebp  
  411edb:	scas   al,BYTE PTR es:[edi]
  411edc:	push   edx
  411edd:	jl     0x411e72
  411edf:	push   ebx
  411ee0:	mov    ah,0x9f
  411ee2:	out    0xe2,eax
  411ee4:	push   0x10
  411ee6:	arpl   WORD PTR [ebp+ecx*4-0x42],cx
  411eea:	mov    esp,0xe19b1acd
  411eef:	add    al,BYTE PTR [edx+ebp*1-0x59]
  411ef3:	icebp  
  411ef4:	push   edi
  411ef5:	mov    ebx,0x7f8cd99c
  411efa:	push   edi
  411efb:	call   0xcebfb791
  411f00:	pop    ebx
  411f01:	icebp  
  411f02:	xor    BYTE PTR [edx+esi*2+0x4ab3f902],cl
  411f09:	pop    ss
  411f0a:	add    al,BYTE PTR [edi]
  411f0c:	fdivr  QWORD PTR [ebp+0x51dfbcd6]
  411f12:	call   0x7cce:0x8ec1f0eb
  411f19:	stos   DWORD PTR es:[edi],eax
  411f1a:	cli    
  411f1b:	xor    eax,0xc94ca663
  411f20:	push   0x2721857b
  411f25:	das    
  411f26:	(bad)  
  411f28:	xchg   esp,eax
  411f29:	je     0x411f5d
  411f2b:	sbb    al,0x43
  411f2d:	jo     0x411f88
  411f2f:	add    ah,BYTE PTR [ebp-0x65d227a2]
  411f35:	ja     0x411ec1
  411f37:	mov    cl,0x85
  411f39:	neg    DWORD PTR [edi+0x10]
  411f3c:	jae    0x411fad
  411f3e:	xchg   ecx,eax
  411f3f:	and    DWORD PTR [edi+0x61],esp
  411f42:	sar    DWORD PTR [esi+0x74],0x97
  411f46:	arpl   WORD PTR [eax-0x17],ax
  411f49:	out    dx,eax
  411f4a:	(bad)  
  411f4b:	mov    bl,0xa8
  411f4d:	pop    eax
  411f4e:	mov    ?,WORD PTR [ecx]
  411f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f51:	cmc    
  411f52:	dec    eax
  411f53:	jge    0x411f85
  411f55:	add    eax,0xf3d51b8b
  411f5a:	jno    0x411fbc
  411f5c:	xchg   edi,eax
  411f5d:	mov    DWORD PTR [ecx-0x6b],esi
  411f60:	cmp    ah,BYTE PTR ds:0xde5e8903
  411f66:	(bad)
  411f69:	loopne 0x411f8e
  411f6b:	loopne 0x411f59
  411f6d:	fst    QWORD PTR [edi-0x446fca08]
  411f73:	rdtsc  
  411f75:	inc    ebx
  411f76:	adc    dh,BYTE PTR [ecx-0x34]
  411f79:	xor    esp,esp
  411f7b:	(bad)  
  411f7c:	ds imul ebx,ebp,0x1e
  411f80:	xchg   ecx,eax
  411f81:	mov    bh,0xf1
  411f83:	test   DWORD PTR [esi+esi*1-0x3c],ebx
  411f87:	in     eax,0x59
  411f89:	pop    edi
  411f8a:	js     0x411f6c
  411f8c:	push   eax
  411f8d:	cdq    
  411f8e:	pop    edx
  411f8f:	add    eax,0xe9f97ddc
  411f94:	or     DWORD PTR [eax],esi
  411f96:	jmp    0x411fb5
  411f98:	mov    ecx,0x5fcc0a72
  411f9d:	dec    esi
  411f9e:	fcmovne st,st(2)
  411fa0:	out    dx,al
  411fa1:	retf   
  411fa2:	or     BYTE PTR [edi],al
  411fa4:	pop    esi
  411fa5:	psubsw mm2,QWORD PTR [ebx+ebp*1]
  411fa9:	fisttp DWORD PTR [ebx+ecx*1]
  411fac:	ins    DWORD PTR es:[edi],dx
  411fad:	push   edi
  411fae:	out    dx,eax
  411faf:	idiv   DWORD PTR [edi-0x19]
  411fb2:	xchg   esi,eax
  411fb3:	cdq    
  411fb4:	stos   DWORD PTR es:[edi],eax
  411fb5:	ret    0xb8cc
  411fb8:	in     eax,dx
  411fb9:	dec    esp
  411fba:	inc    ecx
  411fbb:	in     al,0xe0
  411fbd:	push   esp
  411fbe:	mov    edi,0x648f5b18
  411fc3:	pop    edx
  411fc4:	ds pop ecx
  411fc6:	cmp    ebx,DWORD PTR [ecx]
  411fc8:	xor    cl,ch
  411fca:	xchg   esi,eax
  411fcb:	push   edi
  411fcc:	mov    al,0x1e
  411fce:	add    eax,0xf43d1f9b
  411fd3:	xchg   ebp,eax
  411fd4:	jbe    0x411fd7
  411fd6:	fdiv   QWORD PTR [eax]
  411fd8:	and    DWORD PTR [esp+ecx*8+0x1e],edi
  411fdc:	dec    ebp
  411fdd:	or     BYTE PTR [esi],bl
  411fdf:	ds int 0x5c
  411fe2:	pop    edx
  411fe3:	mov    BYTE PTR ds:0x10d21212,bh
  411fe9:	and    dh,al
  411feb:	push   esp
  411fec:	push   0x40d59d1e
  411ff1:	ins    BYTE PTR es:[edi],dx
  411ff2:	and    dl,BYTE PTR [eax]
  411ff4:	cwde   
  411ff5:	mov    dl,BYTE PTR [edx]
  411ff7:	jae    0x411f8e
  411ff9:	xchg   edx,eax
  411ffa:	inc    esp
  411ffb:	sub    bh,BYTE PTR ds:0xd0e0fe82
  412001:	dec    ebx
  412002:	jns    0x411fed
  412004:	or     DWORD PTR [edi-0x36cef132],esi
  41200a:	mov    ds:0x4f4e79c8,al
  41200f:	inc    esi
  412010:	aam    0xbf
  412012:	adc    ebp,0x37
  412015:	call   0x40ff:0x617aa1f0
  41201c:	mov    esi,0x6b4428
  412021:	pusha  
  412022:	repnz xor BYTE PTR [ebx+0x47b42a8b],bh
  412029:	push   eax
  41202a:	jp     0x41204a
  41202c:	fidivr DWORD PTR [eax-0x1d8624e2]
  412032:	dec    ebp
  412033:	loopne 0x412075
  412035:	or     BYTE PTR [esi+0x2e34efa6],ah
  41203b:	ins    BYTE PTR es:[edi],dx
  41203c:	ror    BYTE PTR [edx+0x486a3548],0x53
  412043:	fcomp  DWORD PTR cs:[ebx]
  412046:	mov    esi,0x4ba9c545
  41204b:	iret   
  41204c:	daa    
  41204d:	xchg   DWORD PTR [edx+0x2167b19e],ebx
  412053:	gs (bad) 
  412055:	jmp    0xdb83fa5e
  41205a:	addr16 das 
  41205c:	jecxz  0x4120cc
  41205e:	mov    dl,cl
  412060:	sub    DWORD PTR [ecx+0x5],edi
  412063:	push   0xd1b485c7
  412068:	jg     0x412097
  41206a:	retf   
  41206b:	rcl    BYTE PTR [edi+0x49],1
  41206e:	add    eax,DWORD PTR [ebx+0x70]
  412071:	sub    DWORD PTR [esi+0x2a],esi
  412074:	inc    esp
  412075:	cmp    eax,DWORD PTR [edx+0x33b1d111]
  41207b:	aas    
  41207c:	xchg   ebx,eax
  41207d:	adc    eax,0xb763597b
  412082:	mov    WORD PTR [esi],?
  412084:	lods   al,BYTE PTR ds:[esi]
  412085:	shl    BYTE PTR ds:0x7e1bd400,cl
  41208b:	adc    eax,0x380b395f
  412090:	adc    al,0xbc
  412092:	fidivr DWORD PTR [edx+0x3628fe42]
  412098:	jno    0x4120f4
  41209a:	in     al,0xa7
  41209c:	fidiv  DWORD PTR [edx-0x5f]
  41209f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a0:	sbb    DWORD PTR [esi-0x7f1a2d42],edi
  4120a6:	mov    al,0x53
  4120a8:	fild   WORD PTR [esi]
  4120aa:	add    BYTE PTR [ebp-0x36],al
  4120ad:	mov    ds:0x9f622bf,eax
  4120b2:	push   esi
  4120b3:	push   ds
  4120b4:	mov    ebp,0xd2e74e8b
  4120b9:	dec    edi
  4120ba:	xor    eax,0x16f02476
  4120bf:	jo     0x41211e
  4120c1:	pop    ds
  4120c2:	mov    esi,0x1a4fd4b7
  4120c7:	dec    edx
  4120c8:	fsubr  DWORD PTR [edx+0x30]
  4120cb:	sbb    BYTE PTR [eax+esi*1+0x4accf1d1],bh
  4120d2:	mov    BYTE PTR [esi-0x37],dh
  4120d5:	popf   
  4120d6:	js     0x4120c9
  4120d8:	adc    eax,0x7fa92dab
  4120dd:	and    al,0xe8
  4120df:	(bad)  
  4120e0:	jp     0x412072
  4120e2:	jge    0x412129
  4120e4:	inc    esi
  4120e5:	adc    bh,0xfe
  4120e8:	repnz xadd DWORD PTR [ebx-0x66],ebx
  4120ed:	mov    ds:0x56af80ae,eax
  4120f2:	jecxz  0x4120a6
  4120f4:	pop    ds
  4120f5:	test   BYTE PTR [ecx-0x7d97390a],dl
  4120fb:	pop    eax
  4120fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120fd:	mov    dh,0xf7
  4120ff:	jle    0x412128
  412101:	mov    dl,0x85
  412103:	sub    DWORD PTR [ecx],ebp
  412105:	push   ds
  412106:	jmp    0xfd13:0xa7909731
  41210d:	mov    dl,0xc5
  41210f:	rol    BYTE PTR [edx+0x0],cl
  412112:	adc    DWORD PTR [ebx+0x2e436c83],edi
  412118:	add    eax,0xbd0bddfb
  41211d:	jbe    0x4120f6
  41211f:	out    dx,al
  412120:	icebp  
  412121:	pop    ebx
  412122:	cld    
  412123:	adc    ecx,esi
  412125:	mov    al,0xfa
  412127:	cdq    
  412128:	shr    edx,1
  41212a:	inc    ecx
  41212b:	rcr    DWORD PTR [edi],1
  41212d:	mov    ebx,0x375a60a4
  412132:	dec    ecx
  412133:	(bad)
  412138:	jbe    0x4121a1
  41213a:	or     BYTE PTR [edx-0x1b9f5d1],ch
  412140:	in     eax,0xbd
  412142:	(bad)  [esi+0x6fb2a27f]
  412148:	sub    dh,BYTE PTR [edx]
  41214a:	jne    0x41214f
  41214c:	sub    al,0x2f
  41214e:	inc    esi
  41214f:	xlat   BYTE PTR gs:[ebx]
  412151:	sub    eax,0xf37794b
  412156:	in     eax,0x2e
  412158:	inc    esi
  412159:	js     0x4121b5
  41215b:	jmp    0xc443c3be
  412160:	fwait
  412161:	inc    esi
  412162:	push   ecx
  412163:	into   
  412164:	repz xor al,0x49
  412167:	ins    DWORD PTR es:[edi],dx
  412168:	inc    ebp
  412169:	inc    edx
  41216a:	add    BYTE PTR [ebx],al
  41216c:	clc    
  41216d:	(bad)  
  41216e:	jmp    0x4121d6
  412170:	sub    esp,DWORD PTR [esp+ebp*8-0x5f54a957]
  412177:	retf   
  412178:	sbb    BYTE PTR [esi-0x1c],dl
  41217b:	jae    0x41216a
  41217d:	xlat   BYTE PTR ds:[ebx]
  41217e:	add    esi,DWORD PTR [eax-0x6b1eaaf0]
  412184:	adc    BYTE PTR [eax+edi*2-0x5a],ah
  412188:	jmp    0xe860:0xea0510d3
  41218f:	lea    ebp,[eax]
  412191:	push   ebx
  412192:	test   BYTE PTR [ebx+0x53],dh
  412195:	sub    bl,ch
  412197:	dec    ebp
  412198:	pusha  
  412199:	pop    edx
  41219a:	dec    edi
  41219b:	or     BYTE PTR [edx],ch
  41219d:	dec    ecx
  41219e:	fbstp  TBYTE PTR [ebx]
  4121a0:	mov    al,0x24
  4121a2:	jge    0x4121d4
  4121a4:	jecxz  0x4121b8
  4121a6:	inc    edi
  4121a7:	in     eax,dx
  4121a8:	test   eax,0x346f324b
  4121ad:	xor    BYTE PTR [edi+edx*4],dh
  4121b0:	push   ss
  4121b1:	push   ebp
  4121b2:	inc    esi
  4121b3:	jns    0x41216e
  4121b5:	jae    0x4121db
  4121b7:	loop   0x412147
  4121b9:	adc    ebx,DWORD PTR [edx-0x4fdb5384]
  4121bf:	stc    
  4121c0:	dec    eax
  4121c1:	cmp    DWORD PTR [eax-0x57],ebp
  4121c4:	test   al,0x8
  4121c6:	cmp    eax,0xade96d2e
  4121cb:	(bad)  
  4121cc:	mov    ebx,0x5258fd45
  4121d1:	popa   
  4121d2:	and    bh,ah
  4121d4:	or     BYTE PTR ds:0x7f564cfa,ch
  4121da:	jae    0x412161
  4121dc:	or     eax,esi
  4121de:	adc    ah,bh
  4121e0:	(bad)  
  4121e1:	push   eax
  4121e2:	rol    BYTE PTR [ebp+0x4d0c8844],1
  4121e8:	hlt    
  4121e9:	nop
  4121ea:	call   FWORD PTR [esi+edi*2+0x3a]
  4121ee:	dec    ebx
  4121ef:	jb     0x412189
  4121f1:	call   0x2181:0x2e50a2d5
  4121f8:	out    dx,eax
  4121f9:	shl    bl,cl
  4121fb:	into   
  4121fc:	mov    ch,0xef
  4121fe:	hlt    
  4121ff:	clc    
  412200:	sub    DWORD PTR [eax],0xfffffff0
  412203:	push   cs
  412204:	sub    eax,0xb51d2745
  412209:	inc    ebx
  41220a:	imul   edx,DWORD PTR [edi],0xd8385535
  412210:	adc    eax,0x25e22c2
  412215:	or     eax,0x30953184
  41221a:	nop
  41221b:	cmp    al,0xab
  41221d:	mov    ds:0x475305c3,eax
  412222:	mov    al,ds:0x179496d5
  412227:	pop    ebx
  412228:	jbe    0x41222c
  41222a:	cli    
  41222b:	stc    
  41222c:	ret    
  41222d:	test   eax,0xc18ba7eb
  412232:	mov    BYTE PTR [edi+0x5d],cl
  412235:	inc    eax
  412236:	jbe    0x4121e1
  412238:	(bad)  
  41223a:	retf   
  41223b:	cmp    cl,bh
  41223d:	jbe    0x41228e
  41223f:	shl    DWORD PTR [ebp-0x44],1
  412242:	mov    ecx,0x71e72ce9
  412247:	xchg   ebx,ebx
  412249:	mov    ecx,0xaa9204da
  41224e:	lahf   
  41224f:	test   al,0xda
  412251:	and    esp,DWORD PTR [ebp-0x4a]
  412254:	cmp    al,BYTE PTR [esi]
  412256:	call   0x63ed1700
  41225b:	test   BYTE PTR [edx+0x69087420],ah
  412261:	test   BYTE PTR [ebp-0x36607d9c],dl
  412267:	test   dl,ah
  412269:	sub    al,0x83
  41226b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41226c:	push   ss
  41226d:	mov    DWORD PTR [esi],0x6142534f
  412273:	push   eax
  412274:	out    0x2e,eax
  412276:	push   0xdff60e5d
  41227b:	call   0x17e96e4d
  412280:	rcr    DWORD PTR [ebp-0x71e2d5bd],cl
  412286:	repnz and eax,0x4a75c79f
  41228c:	(bad)  
  41228d:	pop    edi
  41228e:	xor    dh,BYTE PTR ds:0x93eacc32
  412294:	leave  
  412295:	mov    dl,0xd2
  412297:	sti    
  412298:	fdivrp st(7),st
  41229a:	iret   
  41229b:	mov    bh,0x2a
  41229d:	(bad)  
  41229f:	sar    DWORD PTR [ecx+0x58c00a25],1
  4122a5:	mov    ebp,0x86f36468
  4122aa:	jle    0x412293
  4122ac:	jnp    0x4122c2
  4122ae:	retf   0xffd3
  4122b1:	std    
  4122b2:	adc    cl,dh
  4122b4:	sti    
  4122b5:	mov    dh,0x61
  4122b7:	fisttp WORD PTR [ebx+0x36c31629]
  4122bd:	(bad)  
  4122be:	in     al,0xb7
  4122c0:	fidiv  DWORD PTR [eax-0x2b]
  4122c3:	inc    ebp
  4122c4:	jo     0x41230c
  4122c6:	dec    esp
  4122c7:	es mov esp,0xea003163
  4122cd:	pushf  
  4122ce:	mov    BYTE PTR [ebx+0x103edbd7],cl
  4122d4:	mov    ch,0x3
  4122d6:	sub    eax,0x32999652
  4122db:	sbb    BYTE PTR [eax+0x3579fa44],dh
  4122e1:	xor    al,0xab
  4122e3:	inc    esi
  4122e4:	xchg   ebp,eax
  4122e5:	adc    dh,BYTE PTR ds:0xda777d57
  4122eb:	scas   al,BYTE PTR es:[edi]
  4122ec:	pushf  
  4122ed:	addr16 sbb ebx,edx
  4122f0:	test   BYTE PTR [eax+0x4af4af9a],bl
  4122f6:	mov    gs,WORD PTR [ecx-0x6e]
  4122f9:	bound  bp,DWORD PTR ds:0x35c7929d
  412300:	push   ecx
  412301:	call   0xed5739a5
  412306:	lock call 0xd52a:0xb0e71151
  41230e:	(bad)  
  41230f:	imul   BYTE PTR [eax+0x59943dd]
  412315:	fcmovne st,st(5)
  412317:	js     0x41237a
  412319:	add    DWORD PTR [edx+0x3c2f7e9],esp
  41231f:	mov    DWORD PTR [eax+0x32c9d8c6],esp
  412325:	(bad)
  412328:	push   ebp
  412329:	sub    ah,BYTE PTR [edi]
  41232b:	mov    ebp,0x2aebd084
  412330:	push   ebx
  412331:	adc    BYTE PTR [ecx],0xcd
  412334:	icebp  
  412335:	xchg   BYTE PTR [edi+0x7e],al
  412338:	mov    cx,0x676d
  41233c:	xchg   esp,eax
  41233d:	sbb    dl,BYTE PTR [edx+0x1d]
  412340:	push   cs
  412341:	mov    ebx,0x33abd8c7
  412346:	pop    es
  412347:	je     0x412371
  412349:	jmp    0x8ac39471
  41234e:	in     eax,dx
  41234f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412350:	leave  
  412351:	mov    ecx,0xcaed9088
  412356:	push   ebx
  412357:	iret   
  412358:	leave  
  412359:	sub    BYTE PTR [ebp+0x50],ch
  41235c:	add    ebx,ebx
  41235e:	sub    DWORD PTR [ecx],esi
  412360:	mov    edx,DWORD PTR gs:[eax+0x25025e3f]
  412367:	or     al,BYTE PTR [ebp-0x78]
  41236a:	aaa    
  41236b:	out    dx,eax
  41236c:	fwait
  41236d:	sti    
  41236e:	adc    DWORD PTR [eax],ebx
  412370:	mov    esi,0x8396c265
  412375:	rcl    edx,1
  412377:	xor    ecx,edi
  412379:	mov    dl,BYTE PTR [edx+0x75400f12]
  41237f:	in     eax,0x13
  412381:	xchg   DWORD PTR [ebx-0x2e],esp
  412384:	or     DWORD PTR [ebp+0x61],ecx
  412387:	rcr    BYTE PTR [ebx+eiz*2+0x6fdc812d],cl
  41238e:	mov    esi,0xb99585b7
  412393:	jmp    0x4123f0
  412395:	mov    DWORD PTR [eax+0x31],ebx
  412398:	inc    eax
  412399:	out    0x6d,al
  41239b:	pop    esp
  41239c:	jo     0x41240d
  41239e:	fld    TBYTE PTR [bp-0x75e2]
  4123a3:	aam    0x38
  4123a5:	or     cl,BYTE PTR ds:0xa4aa8fb2
  4123ab:	xor    eax,0xcf4e97a0
  4123b0:	xchg   ebx,eax
  4123b1:	add    eax,0xe08288df
  4123b6:	and    al,0x8e
  4123b8:	int    0x19
  4123ba:	(bad)  
  4123bd:	outs   dx,DWORD PTR ds:[esi]
  4123be:	sbb    BYTE PTR [ebp+0x24],bh
  4123c1:	jg     0x4123dd
  4123c3:	in     al,0x2d
  4123c5:	jno    0x4123f5
  4123c7:	dec    ebp
  4123c8:	imul   ebx,DWORD PTR [ebp-0xc682eec],0x6f
  4123cf:	sub    ch,0xb5
  4123d2:	and    ecx,DWORD PTR [edx]
  4123d4:	jae    0x4123d8
  4123d6:	mov    dl,0x93
  4123d8:	pop    ebx
  4123d9:	sub    al,0x81
  4123db:	inc    edx
  4123dc:	jmp    0x31ef9ec5
  4123e1:	or     DWORD PTR [esp+eiz*8-0xe],0x4546b812
  4123e9:	enter  0x6b4a,0x89
  4123ed:	shl    ebx,1
  4123ef:	repz ror DWORD PTR [edi+ecx*1+0x4e],0xe1
  4123f5:	adc    edx,DWORD PTR [esi+0x2fd189f2]
  4123fb:	leave  
  4123fc:	and    dh,cl
  4123fe:	in     al,dx
  4123ff:	test   BYTE PTR [eax-0x2e],ch
  412402:	pusha  
  412403:	adc    ah,dl
  412405:	das    
  412406:	push   ecx
  412407:	icebp  
  412408:	pop    esi
  412409:	stc    
  41240a:	sar    DWORD PTR [eax+ebx*4],cl
  41240d:	hlt    
  41240e:	dec    esi
  41240f:	mov    ch,0xc9
  412411:	mov    al,ds:0x57e3f3b1
  412416:	sbb    al,0x96
  412418:	sub    BYTE PTR [ebp+0x2a],dl
  41241b:	sahf   
  41241c:	sbb    eax,0x77030245
  412421:	inc    edx
  412422:	jle    0x41241f
  412424:	cld    
  412425:	nop
  412426:	(bad)  
  412427:	test   eax,0xd9fb4bfd
  41242c:	mov    al,BYTE PTR [edi-0x21]
  41242f:	push   ecx
  412430:	ja     0x41247c
  412432:	jne    0x4123e2
  412434:	add    bl,BYTE PTR [ebx+0x3b]
  412437:	loop   0x4123f4
  412439:	jmp    DWORD PTR [ecx+0x10]
  41243c:	pop    ss
  41243d:	pop    es
  41243e:	int3   
  41243f:	(bad)  
  412440:	sbb    ebp,DWORD PTR [edi+0x7e]
  412443:	mov    DWORD PTR [eax+0x64],esp
  412446:	test   DWORD PTR [ecx+0x2009c381],0x97af9623
  412450:	or     edx,DWORD PTR [edx+esi*2-0x7951b6b8]
  412457:	jle    0x41241b
  412459:	fs mov bh,0x68
  41245c:	pop    ebp
  41245d:	push   edi
  41245e:	xor    DWORD PTR [eax-0x4eac8a65],eax
  412464:	pop    ebp
  412465:	hlt    
  412466:	pop    esp
  412467:	add    dl,BYTE PTR [esi]
  412469:	(bad)  
  41246a:	aas    
  41246b:	cdq    
  41246c:	push   edx
  41246d:	pop    eax
  41246e:	mov    ds:0x55be0a66,eax
  412473:	or     ebp,DWORD PTR [eax*2-0x72f2b3a]
  41247a:	adc    eax,0xdf2b7e08
  41247f:	bound  esi,QWORD PTR [ebp+esi*1+0x3e]
  412483:	ins    BYTE PTR es:[edi],dx
  412484:	xor    ecx,edx
  412486:	push   ebp
  412487:	std    
  412488:	mov    dh,0x26
  41248a:	jne    0x41243d
  41248c:	jmp    0x412414
  41248e:	inc    edi
  41248f:	(bad)  
  412490:	es xchg ebp,eax
  412492:	push   edx
  412493:	fadd   QWORD PTR [edi+0x45]
  412496:	push   ecx
  412497:	push   eax
  412498:	push   esp
  412499:	jecxz  0x412443
  41249b:	adc    esi,ebp
  41249d:	lea    edx,[eax]
  41249f:	push   ebx
  4124a0:	xchg   esp,eax
  4124a1:	cdq    
  4124a2:	dec    ecx
  4124a3:	pop    ss
  4124a4:	imul   ebp,DWORD PTR [esi-0x50],0x3b
  4124a8:	out    0x71,eax
  4124aa:	lock xchg edi,eax
  4124ac:	sbb    esi,DWORD PTR [ecx-0x5297984f]
  4124b2:	xor    ah,ah
  4124b4:	into   
  4124b5:	pop    edx
  4124b6:	jnp    0x412535
  4124b8:	fs arpl WORD PTR ds:[eax],dx
  4124bc:	xor    BYTE PTR [ecx],0x3b
  4124bf:	nop
  4124c0:	pop    ds
  4124c1:	(bad)  
  4124c2:	or     bh,BYTE PTR [eax-0x20]
  4124c5:	jno    0x4124aa
  4124c7:	nop
  4124c8:	fwait
  4124c9:	int3   
  4124ca:	mov    al,ds:0xee1f1e
  4124cf:	mov    edi,0xf3802178
  4124d4:	fisttp QWORD PTR [edx+0x73]
  4124d7:	retf   0xf1f4
  4124da:	jecxz  0x412540
  4124dc:	stos   DWORD PTR es:[edi],eax
  4124dd:	push   ds
  4124de:	ds and esi,ebx
  4124e1:	dec    ebx
  4124e2:	sub    esi,DWORD PTR [edi+0x79]
  4124e5:	call   0x3483:0xde8da1ff
  4124ec:	mov    ebx,0x797378ce
  4124f1:	lahf   
  4124f2:	or     DWORD PTR [ebp+0x73010ed3],0x153dc505
  4124fc:	push   edx
  4124fd:	in     al,0xae
  4124ff:	push   ecx
  412500:	je     0x412555
  412502:	sbb    ebx,DWORD PTR [ebx+0x6f]
  412505:	daa    
  412506:	not    BYTE PTR [edx+ecx*8+0x5ed90730]
  41250d:	adc    ebp,DWORD PTR [esi-0x66]
  412510:	mov    ch,0x43
  412512:	imul   edx,DWORD PTR [eax],0x2588d7be
  412518:	mov    dl,0xfa
  41251a:	out    dx,al
  41251b:	jae    0x4124e5
  41251d:	mov    cl,0xc8
  41251f:	and    eax,0xb1ed0105
  412524:	loope  0x4124df
  412526:	(bad)  
  412527:	(bad)  
  412528:	push   ds
  412529:	pop    edx
  41252a:	aaa    
  41252b:	mov    ds:0xe91446fa,eax
  412530:	outs   dx,BYTE PTR ds:[esi]
  412531:	popa   
  412532:	call   0xad5e5c41
  412537:	sbb    al,0xed
  412539:	mov    ds:0xcc419cf0,eax
  41253e:	es icebp 
  412540:	cmp    al,0x59
  412542:	jmp    0x4b8a:0x4df84129
  412549:	and    ecx,eax
  41254b:	cmp    al,0xa5
  41254d:	jns    0x4124e2
  41254f:	fist   DWORD PTR [ebx+0x3b]
  412552:	(bad)  
  412553:	push   ebp
  412554:	(bad)  
  412556:	mov    esp,0x696401a1
  41255b:	sbb    BYTE PTR [edi-0xa],cl
  41255e:	iret   
  41255f:	inc    ebx
  412560:	lock dec ecx
  412562:	mov    ch,0x91
  412564:	mov    edi,0xd0ba2687
  412569:	bnd jle 0x41258f
  41256c:	push   ebp
  41256d:	add    DWORD PTR [ebx+0x17],0xffffffd5
  412571:	ja     0x412506
  412573:	cmp    bh,dl
  412575:	jge    0x4124f9
  412577:	(bad)  
  412578:	int    0xa9
  41257a:	xor    eax,0xada0423b
  41257f:	push   esp
  412580:	imul   esi,DWORD PTR ds:0xdd22d1ba,0xc1fe9bdc
  41258a:	mov    al,0x43
  41258c:	leave  
  41258d:	jl     0x412596
  41258f:	sbb    DWORD PTR [esi],ebx
  412591:	inc    ebx
  412592:	xrelease xchg DWORD PTR [edi+edx*2+0x51],edx
  412597:	pop    esp
  412598:	mov    eax,DWORD PTR [edi+eax*8]
  41259b:	sbb    DWORD PTR [esp+ebp*1-0x76],edx
  41259f:	pushf  
  4125a0:	rcr    BYTE PTR [ebx],0x8
  4125a3:	mov    edx,cs
  4125a5:	nop
  4125a6:	fisub  DWORD PTR ds:[edx]
  4125a9:	es xor eax,0x1bae43de
  4125af:	inc    edi
  4125b0:	xor    ebx,DWORD PTR [ebp+0x5]
  4125b3:	(bad)  
  4125b4:	xor    al,0x57
  4125b6:	inc    ebx
  4125b7:	sub    eax,0x13419297
  4125bc:	mov    dh,BYTE PTR [eax+ecx*4+0x19]
  4125c0:	lods   al,BYTE PTR ds:[esi]
  4125c1:	das    
  4125c2:	repnz xchg ebp,eax
  4125c4:	jmp    0x45c6:0xccaaac5
  4125cb:	adc    al,bh
  4125cd:	add    ecx,ebp
  4125cf:	and    al,0xb5
  4125d1:	or     al,0x30
  4125d3:	sti    
  4125d4:	(bad)  
  4125d5:	sbb    DWORD PTR [eax+0x65],ebx
  4125d8:	xchg   edx,eax
  4125d9:	sub    eax,DWORD PTR [edx+0x71]
  4125dc:	and    ebx,DWORD PTR [ebx]
  4125de:	repz adc al,0x7a
  4125e1:	mov    cl,0x21
  4125e3:	sahf   
  4125e4:	push   esi
  4125e5:	xchg   ecx,eax
  4125e6:	outs   dx,DWORD PTR ds:[esi]
  4125e7:	ja     0x41263f
  4125e9:	enter  0xcb7a,0x8
  4125ed:	xchg   ebp,eax
  4125ee:	enter  0xb752,0x6a
  4125f2:	sbb    eax,0x8965622e
  4125f7:	jg     0x4125bc
  4125f9:	and    BYTE PTR [esi],ch
  4125fb:	cmc    
  4125fc:	dec    DWORD PTR [edi+0x3]
  4125ff:	jl     0x4125ba
  412601:	daa    
  412602:	sbb    ah,0x21
  412605:	mov    eax,DWORD PTR [esi-0x557e4511]
  41260b:	push   ebp
  41260c:	loop   0x4125fb
  41260e:	out    0xd8,eax
  412610:	xor    BYTE PTR [edi+0x48d63618],0x3a
  412617:	sub    bl,BYTE PTR [edx+0x2ac18dd4]
  41261d:	lahf   
  41261e:	xchg   ecx,eax
  41261f:	add    al,0x5d
  412621:	lock mov cl,BYTE PTR [ebp+0x195a907d]
  412628:	mov    esi,0xe6c425f1
  41262d:	retf   
  41262e:	sbb    edi,DWORD PTR [esi]
  412630:	mov    eax,0x84291b85
  412635:	or     BYTE PTR [eax-0x76465547],ah
  41263b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41263c:	jmp    0xc23:0x327e2954
  412643:	sub    BYTE PTR [edi+0x22b29346],cl
  412649:	frstor [ebx+0x25]
  41264c:	cmp    BYTE PTR [esi+0xfceb260],ah
  412652:	xchg   ebx,eax
  412653:	jg     0x412612
  412655:	jge    0x4126b6
  412657:	push   0xffffffa9
  412659:	pop    es
  41265a:	test   ah,ah
  41265c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265d:	sub    ecx,DWORD PTR gs:[esi-0x7c2a1f67]
  412664:	xor    al,0x7a
  412666:	sbb    DWORD PTR ds:0x197e706,0x52f3cbaa
  412670:	inc    esp
  412671:	dec    edx
  412672:	push   edi
  412673:	pop    ecx
  412674:	std    
  412675:	adc    al,0x63
  412677:	scas   al,BYTE PTR es:[edi]
  412678:	arpl   WORD PTR [eax],bx
  41267a:	mov    dl,0x16
  41267c:	and    esi,ebx
  41267e:	fldenv [edi-0x36]
  412681:	jg     0x412667
  412683:	xchg   ebx,eax
  412684:	mov    ah,0xed
  412686:	add    edi,esp
  412688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412689:	mov    ds:0xbc14acff,eax
  41268e:	push   ds
  41268f:	stos   DWORD PTR es:[edi],eax
  412690:	imul   ecx
  412692:	adc    al,0x15
  412694:	and    al,0x28
  412696:	int3   
  412697:	mov    esi,0xa1d31f78
  41269c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41269d:	pop    edx
  41269e:	cmc    
  41269f:	dec    ebp
  4126a0:	nop
  4126a1:	xchg   edx,eax
  4126a2:	scas   eax,DWORD PTR es:[edi]
  4126a3:	pop    ecx
  4126a4:	lods   eax,DWORD PTR ds:[esi]
  4126a5:	in     al,0x3c
  4126a7:	inc    eax
  4126a8:	in     al,dx
  4126a9:	jmp    0x5da3:0x2a4b578a
  4126b0:	xor    eax,0xb0d1b7d3
  4126b5:	xlat   BYTE PTR ds:[ebx]
  4126b6:	fdiv   QWORD PTR [ebx-0x7f4a54aa]
  4126bc:	(bad)  
  4126bd:	mov    ch,0x72
  4126bf:	iret   
  4126c0:	mov    esp,DWORD PTR [esi]
  4126c2:	mov    edi,0x696e242e
  4126c7:	cmp    al,0x7b
  4126c9:	pop    eax
  4126ca:	add    BYTE PTR [ecx],0x83
  4126cd:	cwde   
  4126ce:	sbb    eax,0xd51ba323
  4126d3:	add    bh,BYTE PTR [edi+0x1]
  4126d6:	adc    ah,BYTE PTR [ecx]
  4126d8:	(bad)  
  4126d9:	in     al,dx
  4126da:	xchg   esp,eax
  4126db:	scas   al,BYTE PTR es:[edi]
  4126dc:	nop
  4126dd:	and    DWORD PTR [edi+0x522c059a],0x7d
  4126e4:	mov    dh,0x33
  4126e6:	cwde   
  4126e7:	mov    esp,0x42a6f816
  4126ec:	div    BYTE PTR [eax+0x66]
  4126ef:	add    esp,ebx
  4126f1:	and    al,0xc8
  4126f3:	sahf   
  4126f4:	xchg   ebx,eax
  4126f5:	xchg   esp,eax
  4126f6:	inc    esp
  4126f7:	fistp  WORD PTR [esi+ecx*2-0x4e]
  4126fb:	inc    ecx
  4126fc:	lods   al,BYTE PTR ds:[esi]
  4126fd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ff:	push   esp
  412700:	ror    DWORD PTR [edi],cl
  412702:	xchg   edx,eax
  412703:	daa    
  412704:	fisttp QWORD PTR [ebp+0x15]
  412707:	cmp    BYTE PTR [ebx],dl
  412709:	pop    es
  41270a:	lock cmp BYTE PTR [ecx+0x25d6edf6],0x84
  412712:	adc    eax,0xa21f650e
  412717:	push   esp
  412718:	inc    ebp
  412719:	mov    ch,0x14
  41271b:	test   BYTE PTR [edx+0x6a],ch
  41271e:	lds    eax,FWORD PTR [ecx-0x4d71159c]
  412724:	jg     0x4126b6
  412726:	imul   ebx,ebp,0xffffffeb
  412729:	ret    
  41272a:	xor    al,0xea
  41272c:	(bad)  
  41272d:	in     eax,dx
  41272e:	std    
  41272f:	retf   
  412730:	loopne 0x412762
  412732:	add    DWORD PTR [ecx-0x306a82a7],esi
  412738:	clc    
  412739:	(bad)  
  41273a:	sbb    eax,0xf19f4983
  41273f:	jae    0x4127a8
  412741:	add    DWORD PTR [edx+0x173eee50],eax
  412747:	or     BYTE PTR [edx],cl
  412749:	popa   
  41274a:	and    ebp,DWORD PTR [ebp+0xa]
  41274d:	sbb    al,BYTE PTR [ebp-0x3a056c6b]
  412753:	cmp    DWORD PTR [ebx+edx*8-0x58],ebx
  412757:	xchg   esp,eax
  412758:	stos   DWORD PTR es:[edi],eax
  412759:	push   0x2f4e217c
  41275e:	je     0x41273c
  412760:	lods   eax,DWORD PTR ds:[esi]
  412761:	outs   dx,BYTE PTR ds:[esi]
  412763:	cmp    BYTE PTR [eax-0x4b],bl
  412766:	fldcw  WORD PTR [esi+0x134be5b0]
  41276c:	not    ecx
  41276e:	and    al,BYTE PTR [ecx+edx*8]
  412771:	adc    al,0x92
  412773:	outs   dx,DWORD PTR ds:[esi]
  412774:	adc    DWORD PTR [ecx],0x13107a3f
  41277a:	(bad)  
  41277b:	sub    al,0xfd
  41277d:	and    ebx,DWORD PTR es:[ebp+0x1b]
  412781:	adc    eax,DWORD PTR [edx+0x33031006]
  412787:	lahf   
  412788:	add    eax,0x6c3cae43
  41278d:	rep lods eax,DWORD PTR ds:[esi]
  41278f:	out    dx,al
  412790:	adc    dl,dl
  412792:	xor    bh,BYTE PTR [ecx]
  412794:	inc    edx
  412795:	xlat   BYTE PTR ds:[ebx]
  412796:	fs inc ecx
  412798:	push   ecx
  412799:	lds    ecx,FWORD PTR [ebx+eax*2-0x4ebe9057]
  4127a0:	cmp    eax,0x73c8ded0
  4127a5:	leave  
  4127a6:	mov    edi,0x70a628a9
  4127ab:	jnp    0x41279a
  4127ad:	pop    edx
  4127ae:	cwde   
  4127af:	xchg   DWORD PTR [edx-0x4f],ebp
  4127b2:	addr16 iret 
  4127b4:	pop    ecx
  4127b5:	cli    
  4127b6:	jmp    0x412779
  4127b8:	jmp    0x41278f
  4127ba:	mov    eax,ds:0x61163df9
  4127bf:	lds    ebx,FWORD PTR cs:[edi+0x5681cdc8]
  4127c6:	push   es
  4127c7:	mov    ecx,0x7d68e498
  4127cc:	jp     0x412790
  4127ce:	xchg   BYTE PTR [eax-0xf40d113],dh
  4127d4:	sbb    DWORD PTR [ecx],edx
  4127d6:	enter  0x2f94,0x79
  4127da:	fnstenv [eax]
  4127dc:	push   ss
  4127dd:	mov    bl,0x22
  4127df:	mov    al,dh
  4127e1:	(bad)  
  4127e2:	outs   dx,DWORD PTR ds:[esi]
  4127e3:	loop   0x412817
  4127e5:	loop   0x4127e5
  4127e7:	sbb    dh,bl
  4127e9:	(bad)  
  4127ea:	adc    edx,ebx
  4127ec:	imul   ecx,DWORD PTR [ecx-0x1e6a3c02],0x7c69bcd3
  4127f6:	in     eax,0x2d
  4127f8:	mov    cl,bl
  4127fa:	mov    ebx,DWORD PTR [esi+0x76]
  4127fd:	addr16 push 0x6aac9056
  412803:	mov    bl,0x25
  412805:	mov    ch,0x3e
  412807:	inc    ebp
  412808:	gs pop esp
  41280a:	xchg   BYTE PTR [edi],cl
  41280c:	in     eax,0x74
  41280e:	mul    ebp
  412810:	scas   al,BYTE PTR es:[edi]
  412811:	cdq    
  412812:	adc    DWORD PTR [edi+0x548e6f40],ecx
  412818:	arpl   si,cx
  41281a:	arpl   WORD PTR [esp+ecx*4+0x75],dx
  41281e:	add    BYTE PTR [ecx+edi*4],bh
  412821:	(bad)  
  412823:	xchg   edi,eax
  412824:	push   esp
  412825:	jp     0x41287a
  412827:	jns    0x4127e4
  412829:	sbb    DWORD PTR [edx],0xffffff80
  41282c:	ret    0x198b
  41282f:	leave  
  412830:	cwde   
  412831:	inc    ecx
  412832:	lock enter 0x6a9c,0x20
  412837:	test   DWORD PTR [eax+0x5f],edi
  41283a:	xor    al,0x3f
  41283c:	dec    esp
  41283d:	sahf   
  41283e:	add    BYTE PTR [ebp-0x29e39197],ch
  412844:	inc    edi
  412845:	aad    0xd9
  412847:	fist   DWORD PTR [edi-0x12]
  41284a:	or     al,0x2e
  41284c:	pop    edx
  41284d:	inc    ebx
  41284e:	shl    BYTE PTR [eax],1
  412850:	in     eax,0x33
  412852:	shr    DWORD PTR [ecx+0x23],1
  412855:	stos   DWORD PTR es:[edi],eax
  412856:	xor    eax,esi
  412858:	jecxz  0x4128a4
  41285a:	mov    dl,0xce
  41285c:	ja     0x4128b4
  41285e:	dec    ecx
  41285f:	mov    ds:0xd6bdfaeb,eax
  412864:	pushf  
  412865:	xchg   esi,eax
  412866:	jmp    0x9a996c3c
  41286b:	fisub  WORD PTR [ebx]
  41286d:	sub    eax,0xc0dee2c6
  412872:	hlt    
  412873:	mov    edi,0x365fe49a
  412878:	(bad)  
  412879:	pop    esp
  41287a:	ins    DWORD PTR es:[edi],dx
  41287b:	mov    ecx,0x84a3e31f
  412880:	pslld  mm3,mm6
  412883:	mov    dh,0xcd
  412885:	sti    
  412886:	pop    esp
  412887:	ins    DWORD PTR es:[edi],dx
  412888:	sti    
  412889:	cmp    ecx,DWORD PTR [eax-0x7d632244]
  41288f:	dec    ebp
  412890:	lock rol BYTE PTR [esi-0x1dc53584],cl
  412897:	mov    edi,0x501268c
  41289c:	mov    cl,0x99
  41289e:	fild   QWORD PTR [ebp+0x3b]
  4128a1:	cs pop esp
  4128a3:	mov    ebx,0xe8c74df4
  4128a8:	out    dx,al
  4128a9:	jle    0x412902
  4128ab:	aam    0x55
  4128ad:	stos   BYTE PTR es:[edi],al
  4128ae:	sbb    cl,BYTE PTR [ecx+0x79]
  4128b1:	pop    es
  4128b2:	rep ins BYTE PTR es:[edi],dx
  4128b4:	imul   ebx,DWORD PTR [eax+eiz*1],0x43
  4128b8:	dec    ecx
  4128b9:	push   0xffffff99
  4128bb:	adc    DWORD PTR [eax-0x1a],eax
  4128be:	push   cs
  4128bf:	popa   
  4128c0:	fnstsw WORD PTR [esi+0x67]
  4128c3:	fnsave [ecx+0x33]
  4128c6:	lods   al,BYTE PTR ds:[esi]
  4128c7:	mov    al,ds:0x4f61467b
  4128cc:	ficom  DWORD PTR [ebx-0x50]
  4128cf:	xchg   edx,eax
  4128d0:	out    0x31,eax
  4128d2:	fbld   TBYTE PTR [edi]
  4128d4:	jne    0x4128bb
  4128d6:	jmp    FWORD PTR [edi+edi*8+0x8f8f9c3]
  4128dd:	jb     0x4128a1
  4128df:	cmp    eax,0x5d7ef0c3
  4128e4:	xchg   edi,eax
  4128e5:	in     al,0xd1
  4128e7:	(bad)  
  4128ea:	dec    esi
  4128eb:	sbb    BYTE PTR [ebp+0x47],cl
  4128ee:	imul   eax,DWORD PTR [esi],0x7e
  4128f1:	fcmovb st,st(5)
  4128f3:	xchg   ebp,eax
  4128f4:	mov    edi,0xc005b223
  4128f9:	push   edi
  4128fa:	call   0x9a6160d5
  4128ff:	clc    
  412900:	push   esp
  412901:	jg     0x4128a2
  412903:	sbb    eax,0x3c15ac4c
  412908:	pop    ds
  412909:	stos   BYTE PTR es:[edi],al
  41290a:	cli    
  41290b:	(bad)  
  41290c:	mov    WORD PTR ss:[ebx+0x37b73580],ds
  412913:	jnp    0x4128a0
  412915:	or     ecx,DWORD PTR [eax]
  412917:	mov    ds:0xcceab89c,eax
  41291c:	in     al,dx
  41291d:	mov    edx,0x10bf2128
  412922:	jp     0x412915
  412924:	xchg   ecx,eax
  412925:	mov    bl,0xef
  412927:	mov    ecx,DWORD PTR [ecx+0xe5f004f]
  41292d:	jecxz  0x412916
  41292f:	mov    eax,ds:0x6cadc892
  412934:	mov    es,WORD PTR [edx]
  412936:	scas   al,BYTE PTR es:[edi]
  412937:	(bad)  [edi]
  412939:	(bad)  
  41293a:	in     eax,0x5f
  41293c:	push   ss
  41293d:	in     al,dx
  41293e:	rcl    BYTE PTR [eax+0x52],1
  412941:	cwde   
  412942:	mov    ebp,DWORD PTR [ecx]
  412944:	test   al,0x6a
  412946:	mov    esp,0x275dc9b6
  41294b:	and    eax,0x29b372e6
  412950:	test   esi,0x8d52ef89
  412956:	iret   
  412957:	push   ecx
  412958:	xor    ebp,DWORD PTR [edx]
  41295a:	adc    eax,0xfd1de51f
  41295f:	sbb    bh,0xf1
  412962:	retf   
  412963:	adc    edi,DWORD PTR [eax]
  412965:	xchg   ebp,eax
  412966:	(bad)  
  412968:	mov    ah,0x51
  41296a:	jne    0x412939
  41296c:	jl     0x412951
  41296e:	test   DWORD PTR [eax+ecx*1+0x16],esi
  412972:	push   edi
  412973:	xchg   BYTE PTR [ebp-0x4c836310],ah
  412979:	pop    edi
  41297a:	cmp    ch,bh
  41297c:	jbe    0x41291a
  41297e:	dec    esi
  41297f:	push   0xde01ee03
  412984:	idiv   esi
  412986:	pop    esi
  412987:	ror    DWORD PTR [eax+0x1b64f4a9],0xa4
  41298e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41298f:	mov    dh,0x45
  412991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412992:	stos   DWORD PTR es:[edi],eax
  412993:	in     eax,0xad
  412995:	mov    DWORD PTR [ebp+0x66],esp
  412998:	pop    esp
  412999:	xor    DWORD PTR [edi+0x38587d5a],edi
  41299f:	xor    dl,BYTE PTR [esi-0x3c8a0ec8]
  4129a5:	pop    es
  4129a6:	mov    edx,0xace8826
  4129ab:	push   0x60420635
  4129b0:	dec    ebx
  4129b1:	push   esp
  4129b2:	mov    ecx,0xb4acf673
  4129b7:	push   edi
  4129b8:	push   es
  4129b9:	ret    0xaa5a
  4129bc:	inc    esi
  4129bd:	cmp    al,0x5
  4129bf:	jno    0x41296d
  4129c1:	data16 cld 
  4129c3:	jne    0x412a1b
  4129c5:	cmp    eax,0x1ba42214
  4129ca:	pop    edx
  4129cb:	jge    0x412990
  4129cd:	xor    ecx,DWORD PTR ds:0xb8140dd0
  4129d3:	mov    dl,0x33
  4129d5:	dec    edx
  4129d6:	inc    ecx
  4129d7:	mov    dl,0xea
  4129d9:	inc    ecx
  4129da:	pop    es
  4129db:	add    eax,0x5f32b36f
  4129e0:	mov    gs,ebp
  4129e2:	scas   al,BYTE PTR es:[edi]
  4129e3:	(bad)  
  4129e4:	leave  
  4129e5:	sti    
  4129e6:	xchg   edx,eax
  4129e7:	repnz addr16 mov al,0xac
  4129eb:	or     BYTE PTR [esp+edx*2],0x86
  4129ef:	inc    edx
  4129f0:	out    dx,eax
  4129f1:	outs   dx,BYTE PTR ds:[esi]
  4129f2:	pop    eax
  4129f3:	out    dx,al
  4129f4:	push   cs
  4129f5:	pop    ebp
  4129f6:	test   DWORD PTR [ebx+0x42],eax
  4129f9:	push   ebp
  4129fa:	cwde   
  4129fb:	out    dx,al
  4129fc:	in     eax,dx
  4129fd:	outs   dx,DWORD PTR ds:[esi]
  4129fe:	imul   esi,edi,0xd5f9ef28
  412a04:	pushf  
  412a05:	gs js  0x4129d0
  412a08:	fs popa 
  412a0a:	addr16 dec eax
  412a0c:	jb     0x412992
  412a0e:	push   ebx
  412a0f:	ret    0xc3b9
  412a12:	sub    BYTE PTR [eax+edi*4-0x75d3f985],0xf2
  412a1a:	test   BYTE PTR [ebx],bl
  412a1c:	hlt    
  412a1d:	mov    dh,bl
  412a1f:	and    al,0x6f
  412a21:	in     al,0xc2
  412a23:	mov    ecx,DWORD PTR [esi+0x10]
  412a26:	cmp    al,ch
  412a28:	ret    0xd67a
  412a2b:	jno    0x4129e9
  412a2d:	mov    edi,0x3ab88a1a
  412a32:	lods   eax,DWORD PTR ds:[esi]
  412a33:	jb     0x412a3c
  412a35:	inc    esi
  412a36:	loop   0x412ab6
  412a38:	or     ebx,DWORD PTR [edx-0x42]
  412a3b:	icebp  
  412a3c:	sub    bh,BYTE PTR [esi+0x2987b74e]
  412a42:	cld    
  412a43:	stos   DWORD PTR es:[edi],eax
  412a44:	(bad)  
  412a46:	mov    bh,0x74
  412a48:	cwde   
  412a49:	add    DWORD PTR [eax+0x6a1c8456],eax
  412a4f:	out    0xaf,eax
  412a51:	retf   
  412a52:	rcl    BYTE PTR [eax],0x82
  412a55:	xchg   edi,eax
  412a56:	lods   eax,DWORD PTR ds:[esi]
  412a57:	pop    ds
  412a58:	xchg   edx,eax
  412a59:	lock mov edx,0x7934d7e7
  412a5f:	test   eax,0x53d6a4d5
  412a64:	jmp    0xf7ec:0xb8f677bf
  412a6b:	xchg   ebp,ebx
  412a6d:	dec    esp
  412a6e:	cmp    eax,0xdf293fcf
  412a73:	call   0xaa13:0x5eba4477
  412a7a:	outs   dx,BYTE PTR ds:[esi]
  412a7b:	in     eax,dx
  412a7c:	jmp    0x412aa2
  412a7e:	or     cl,dh
  412a80:	sub    ecx,ebx
  412a82:	xor    dl,ch
  412a84:	out    dx,al
  412a85:	dec    edi
  412a86:	mov    ah,0x68
  412a88:	dec    eax
  412a89:	sub    ebx,ebx
  412a8b:	(bad)  
  412a8c:	pop    ebp
  412a8d:	fld    QWORD PTR [esi]
  412a8f:	shl    DWORD PTR [edi+0x3],0xf4
  412a93:	inc    ebx
  412a94:	inc    ebx
  412a95:	push   edi
  412a96:	sub    BYTE PTR [ecx+0x233fd3b6],ah
  412a9c:	(bad)  
  412a9e:	inc    edx
  412a9f:	push   ds
  412aa0:	mov    BYTE PTR [edx-0x71],ch
  412aa3:	test   eax,0xecad0979
  412aa8:	popf   
  412aa9:	popa   
  412aaa:	adc    dh,0x63
  412aad:	xor    DWORD PTR [edi-0x3b18c67c],0x707e4607
  412ab7:	inc    esi
  412ab8:	pop    ds
  412ab9:	mov    ch,0xa5
  412abb:	cdq    
  412abc:	in     al,dx
  412abd:	add    ebx,DWORD PTR [ebx-0x27]
  412ac0:	inc    esp
  412ac1:	arpl   di,dx
  412ac3:	cmp    esi,eax
  412ac5:	jp     0x412add
  412ac7:	lods   al,BYTE PTR ds:[esi]
  412ac8:	mov    WORD PTR [edx+0x58a4330b],?
  412ace:	loopne 0x412b48
  412ad0:	stos   BYTE PTR es:[edi],al
  412ad1:	or     BYTE PTR [ebp+0x7a],al
  412ad4:	inc    edx
  412ad5:	add    al,BYTE PTR [eax]
  412ad7:	xor    al,0x5b
  412ad9:	pop    ecx
  412ada:	sbb    esi,DWORD PTR [eax]
  412adc:	sbb    eax,0xa23f18f2
  412ae1:	xor    DWORD PTR [eax-0x9],ecx
  412ae4:	leave  
  412ae5:	test   eax,0x2982ca6a
  412aea:	repnz push ebp
  412aec:	mov    esi,0xfcf59fe3
  412af1:	cs push edi
  412af3:	out    0xf7,eax
  412af5:	icebp  
  412af6:	jmp    0x412b45
  412af8:	sub    bl,BYTE PTR [edi-0xf]
  412afb:	push   0x1b
  412afd:	loope  0x412af8
  412aff:	lods   eax,DWORD PTR ds:[esi]
  412b00:	or     esi,edi
  412b02:	ins    DWORD PTR es:[edi],dx
  412b03:	mov    edx,0x90919fb7
  412b08:	mov    esi,0xc1a4995a
  412b0d:	aam    0x6f
  412b0f:	sub    edi,edx
  412b11:	sbb    dx,WORD PTR [edx-0x7f911101]
  412b18:	xchg   edi,eax
  412b19:	nop
  412b1a:	dec    esi
  412b1b:	test   eax,0x9a7eaeda
  412b20:	xor    esi,DWORD PTR [ebp-0x1338095b]
  412b26:	outs   dx,BYTE PTR ds:[esi]
  412b27:	inc    edi
  412b28:	mov    ch,ch
  412b2a:	pop    esi
  412b2b:	rol    BYTE PTR [ebp-0x1df119a8],1
  412b31:	fstp   TBYTE PTR [esi-0x6a]
  412b34:	adc    BYTE PTR [ebp+eax*8-0x5a6ccb6e],dh
  412b3b:	pop    ebx
  412b3c:	(bad)  
  412b3d:	fldenv [eax-0x14]
  412b40:	and    al,0xee
  412b42:	cmp    al,BYTE PTR [edx+0x5e41f3f8]
  412b48:	cmp    al,0xf2
  412b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b4b:	jnp    0x412b11
  412b4d:	mov    esp,0x206cd9b8
  412b52:	adc    BYTE PTR [edx],dh
  412b54:	ret    0xdb31
  412b57:	push   es
  412b58:	jnp    0x412af1
  412b5a:	sahf   
  412b5b:	out    dx,al
  412b5c:	push   ebp
  412b5d:	xor    dl,BYTE PTR [ebp-0x5e]
  412b60:	lea    ebp,ds:0xa53a5e56
  412b66:	xchg   esi,eax
  412b67:	xchg   edi,eax
  412b68:	lods   eax,DWORD PTR ds:[esi]
  412b69:	sub    al,0x8
  412b6b:	iret   
  412b6c:	js     0x412b8f
  412b6e:	pushf  
  412b6f:	daa    
  412b70:	cdq    
  412b71:	pop    ds
  412b72:	inc    esp
  412b73:	jno    0x412bc5
  412b75:	push   esi
  412b76:	jnp    0x412b6e
  412b78:	test   eax,0x307af532
  412b7d:	inc    ecx
  412b7e:	xlat   BYTE PTR ds:[ebx]
  412b7f:	add    DWORD PTR [edx-0x2f4472b1],edx
  412b85:	pushf  
  412b86:	stos   DWORD PTR es:[edi],eax
  412b87:	fsubr  QWORD PTR ds:[eax-0x4c]
  412b8b:	inc    ebx
  412b8c:	xor    eax,0x3e73c003
  412b91:	mov    ah,0x66
  412b93:	neg    DWORD PTR [esi]
  412b95:	push   0xffffffda
  412b97:	mov    bh,0x3d
  412b99:	push   edi
  412b9a:	addr16 push esp
  412b9c:	sbb    DWORD PTR [ebp-0x46],0x772dde8f
  412ba3:	xor    edx,edi
  412ba5:	scas   al,BYTE PTR es:[edi]
  412ba6:	mov    bl,0xf3
  412ba8:	add    al,0x7
  412baa:	add    DWORD PTR [eax],eax
  412bac:	and    ebp,ebx
  412bae:	test   BYTE PTR [edx-0x43],dh
  412bb1:	dec    ebp
  412bb2:	xchg   ecx,eax
  412bb3:	(bad)  
  412bb4:	lahf   
  412bb5:	mov    ch,0x3f
  412bb7:	rol    DWORD PTR [edx],cl
  412bb9:	mov    ds:0xa30d505a,al
  412bbe:	adc    al,0x2e
  412bc0:	adc    al,0xe4
  412bc2:	xchg   edi,eax
  412bc3:	mov    bh,0x3c
  412bc5:	(bad)  
  412bc6:	mov    ah,0x1b
  412bc8:	lock push esp
  412bca:	cmp    al,0x54
  412bcc:	jbe    0x412b8e
  412bce:	mov    dl,0xd7
  412bd0:	leave  
  412bd1:	pop    ebp
  412bd2:	or     DWORD PTR [ebx+0x66366e2c],0x65bee07f
  412bdc:	xor    ch,al
  412bde:	std    
  412bdf:	pop    ss
  412be0:	add    eax,0x13b1de1b
  412be5:	(bad)  
  412be6:	pop    ds
  412be7:	sub    BYTE PTR [ecx+ebx*1+0x13],dh
  412beb:	dec    eax
  412bec:	sti    
  412bed:	test   DWORD PTR [eax+0x31],esp
  412bf0:	pop    esi
  412bf1:	repz pop edi
  412bf3:	mov    dl,0x9d
  412bf5:	inc    edx
  412bf6:	dec    ebp
  412bf7:	ficomp DWORD PTR [ebx+eax*8-0x39072964]
  412bfe:	or     BYTE PTR [esi+0x7b],dl
  412c01:	xchg   BYTE PTR [ecx+0x44799fbc],al
  412c07:	out    dx,al
  412c08:	sbb    eax,0xd61d4d2c
  412c0d:	push   edi
  412c0e:	jne    0x412c76
  412c10:	add    al,0xf1
  412c12:	mov    edx,0x7f6ce08e
  412c17:	retf   
  412c18:	daa    
  412c19:	mov    cl,0x7f
  412c1b:	mov    edi,DWORD PTR [edx+0x3c]
  412c1e:	jo     0x412c44
  412c20:	and    al,0x6
  412c22:	scas   al,BYTE PTR es:[edi]
  412c23:	mov    esi,0xb3d309f4
  412c28:	das    
  412c29:	ins    DWORD PTR es:[edi],dx
  412c2a:	push   ebx
  412c2b:	inc    edx
  412c2c:	sar    ch,cl
  412c2e:	arpl   WORD PTR [ebp-0x65833458],bx
  412c34:	cs jb  0x412c2b
  412c37:	or     cl,ah
  412c39:	push   ebp
  412c3a:	adc    eax,0xae229a46
  412c3f:	(bad)  
  412c40:	daa    
  412c41:	in     al,0x74
  412c43:	xchg   edx,eax
  412c44:	fld    DWORD PTR [ebx+0x13598f7]
  412c4a:	adc    eax,0x6e6934b7
  412c4f:	pop    ebp
  412c50:	jmp    0x412c16
  412c52:	cmp    al,0xbf
  412c54:	mov    esi,0x58b5b4af
  412c59:	lods   eax,DWORD PTR ds:[esi]
  412c5a:	push   es
  412c5b:	dec    edx
  412c5c:	mov    ebp,ss
  412c5e:	mov    al,BYTE PTR [edx]
  412c60:	test   DWORD PTR [edi-0x6e8286f7],edi
  412c66:	add    ch,BYTE PTR [ebp+eax*2-0x28]
  412c6a:	icebp  
  412c6b:	and    BYTE PTR [ecx],0x67
  412c6e:	fdivr  st(0),st
  412c70:	jecxz  0x412cd2
  412c72:	push   ebx
  412c73:	in     eax,dx
  412c74:	adc    BYTE PTR [esi-0x13],0xb1
  412c78:	rol    DWORD PTR [ebx-0x26],cl
  412c7b:	pop    esi
  412c7c:	mov    cl,0xa9
  412c7e:	or     al,bh
  412c80:	pop    esi
  412c81:	retf   0x9c39
  412c84:	lds    edi,FWORD PTR [edx-0xdf42163]
  412c8a:	popa   
  412c8b:	inc    ecx
  412c8c:	scas   eax,DWORD PTR es:[edi]
  412c8d:	xchg   ebx,eax
  412c8e:	sbb    edx,edx
  412c90:	hlt    
  412c91:	arpl   WORD PTR [esi],di
  412c93:	jecxz  0x412c1d
  412c95:	push   edx
  412c96:	push   esi
  412c97:	test   BYTE PTR [eax-0x1c87cb0e],dl
  412c9d:	cmp    eax,0x9815ae85
  412ca2:	in     al,dx
  412ca3:	sbb    al,BYTE PTR gs:[eax]
  412ca6:	arpl   WORD PTR [edi-0x5c],bp
  412ca9:	rcr    edx,cl
  412cab:	add    cl,0x26
  412cae:	dec    ecx
  412caf:	sub    BYTE PTR [edi],0xbe
  412cb2:	jne    0x412d32
  412cb4:	xor    DWORD PTR [esp+edi*4-0x48643c92],esp
  412cbb:	pop    DWORD PTR [ecx+ebx*8+0x3e6ebf3d]
  412cc2:	arpl   WORD PTR [edi-0xf],dx
  412cc5:	stos   DWORD PTR es:[edi],eax
  412cc6:	scas   al,BYTE PTR es:[edi]
  412cc7:	mov    ebp,0xf8676d5f
  412ccc:	mov    cl,0x8f
  412cce:	(bad)  
  412ccf:	sbb    DWORD PTR [eax+0x24dad481],esi
  412cd5:	mov    ecx,0xdd3eca74
  412cda:	jp     0x412ccc
  412cdc:	lahf   
  412cdd:	fdiv   QWORD PTR [esi-0x5ea98d51]
  412ce3:	sbb    ah,BYTE PTR [edi+0x7c]
  412ce6:	and    eax,0x10740e4a
  412ceb:	leave  
  412cec:	jmp    0x253c:0x5269902e
  412cf3:	inc    esi
  412cf4:	push   ds
  412cf5:	(bad)  
  412cf6:	stos   WORD PTR es:[edi],ax
  412cf8:	sub    bh,BYTE PTR [edx+0x30]
  412cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cfc:	inc    esp
  412cfd:	jg     0x412c93
  412cff:	xor    eax,0xa16b5fee
  412d04:	ins    BYTE PTR es:[edi],dx
  412d05:	addr16 xchg ecx,eax
  412d07:	xchg   ebx,eax
  412d08:	push   ecx
  412d09:	mov    edi,0x3b861dac
  412d0e:	mov    dl,0x2
  412d10:	arpl   WORD PTR [edx-0x40],si
  412d13:	push   edi
  412d14:	es jmp 0x412ce2
  412d17:	jge    0x412d45
  412d19:	inc    ebx
  412d1a:	pop    edi
  412d1b:	repnz pop esp
  412d1d:	add    DWORD PTR [eax],ebx
  412d1f:	loope  0x412cb6
  412d21:	sahf   
  412d22:	ss popa 
  412d24:	(bad)  
  412d25:	sahf   
  412d26:	and    BYTE PTR [eax],dl
  412d28:	gs dec esi
  412d2a:	leave  
  412d2b:	je     0x412d0d
  412d2d:	inc    esi
  412d2e:	mov    ebp,0xc889035e
  412d33:	add    eax,0xd9e60231
  412d38:	test   al,0xd3
  412d3a:	hlt    
  412d3b:	mov    dh,0x5a
  412d3d:	or     DWORD PTR [esi+0x58d24e9a],0x33
  412d44:	add    al,0x88
  412d46:	or     ch,bh
  412d48:	xchg   ecx,eax
  412d49:	dec    esi
  412d4a:	push   0xffffffca
  412d4c:	popa   
  412d4d:	inc    eax
  412d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d4f:	adc    BYTE PTR [edi+0x5b],0x46
  412d53:	xor    eax,0x8a0a78f6
  412d58:	scas   al,BYTE PTR es:[edi]
  412d59:	int    0xe7
  412d5b:	stos   DWORD PTR es:[edi],eax
  412d5c:	mov    ch,dl
  412d5e:	mov    esi,0xfca744e0
  412d63:	xor    BYTE PTR [ebp+0x1c90ce5],dh
  412d69:	inc    esp
  412d6a:	rol    bh,0x77
  412d6d:	mov    esp,0x2f46e4db
  412d72:	aam    0x91
  412d74:	mov    ch,0x95
  412d76:	(bad)  
  412d77:	push   esi
  412d78:	and    eax,0xb126836a
  412d7d:	pop    ss
  412d7e:	jp     0x412d06
  412d80:	(bad)  
  412d81:	pop    ecx
  412d82:	push   0x2
  412d84:	and    ecx,ecx
  412d86:	push   ecx
  412d87:	pop    ebx
  412d88:	cmp    DWORD PTR [eax+0x7df1b250],ebx
  412d8e:	inc    edx
  412d8f:	test   al,0xa3
  412d91:	jmp    0xa6cf5b25
  412d96:	js     0x412d6d
  412d98:	hlt    
  412d99:	push   ebp
  412d9a:	out    dx,eax
  412d9b:	fdiv   st(2),st
  412d9d:	dec    edi
  412d9e:	inc    esi
  412d9f:	in     al,0xb9
  412da1:	sbb    eax,0x2acaf160
  412da6:	pop    ecx
  412da7:	ins    BYTE PTR es:[edi],dx
  412da8:	out    0x34,eax
  412daa:	pop    ds
  412dab:	js     0x412de4
  412dad:	jae    0x412e1b
  412daf:	fmul   st(6),st
  412db1:	rcr    DWORD PTR [ebp-0x5f],cl
  412db4:	dec    ebp
  412db5:	sbb    al,0x4f
  412db7:	mov    dh,0xdd
  412db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dba:	outs   dx,DWORD PTR ds:[esi]
  412dbb:	pop    ss
  412dbc:	mov    eax,0xf9208b3e
  412dc1:	cli    
  412dc2:	mov    ch,0x84
  412dc4:	leave  
  412dc5:	or     BYTE PTR [eax],dl
  412dc7:	sub    DWORD PTR [ecx-0x6d31e43a],ebx
  412dcd:	sbb    bl,dh
  412dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dd0:	pusha  
  412dd1:	dec    edx
  412dd2:	jp     0x412e0f
  412dd4:	call   0xf324:0x2d57e2f2
  412ddb:	jbe    0x412dac
  412ddd:	iret   
  412dde:	mov    eax,ds:0xbbf5e348
  412de3:	cmovbe esi,DWORD PTR fs:[ebp-0x1b]
  412de8:	add    DWORD PTR [eax-0x4fea7ca4],0x6d5204d0
  412df2:	stos   DWORD PTR es:[edi],eax
  412df3:	cmp    edx,DWORD PTR [edx+0x58342916]
  412df9:	fdivr  st,st(2)
  412dfb:	xchg   ecx,eax
  412dfc:	cs push edi
  412dfe:	push   es
  412dff:	clc    
  412e00:	ret    0x242e
  412e03:	push   esi
  412e04:	fwait
  412e05:	dec    edi
  412e06:	add    al,0x40
  412e08:	imul   ebx,DWORD PTR [ebx],0x32
  412e0b:	out    dx,eax
  412e0c:	push   0x10053b93
  412e11:	and    DWORD PTR [edx-0x10],edx
  412e14:	repz invd 
  412e17:	pop    ecx
  412e18:	push   ebp
  412e19:	fs aaa 
  412e1b:	xchg   esp,eax
  412e1c:	jmp    0x122fbc9c
  412e21:	sub    ah,BYTE PTR [esi-0x66]
  412e24:	mov    WORD PTR [ecx],gs
  412e26:	cld    
  412e27:	sub    al,0x2b
  412e29:	inc    esp
  412e2a:	mov    BYTE PTR [ebp+esi*4-0x1c],bh
  412e2e:	mov    ebp,0xc140452b
  412e33:	clc    
  412e34:	sub    al,0x67
  412e36:	retf   0xfb41
  412e39:	jne    0x412de1
  412e3b:	push   esi
  412e3c:	repz mov ah,0xff
  412e3f:	mov    cl,0x22
  412e41:	(bad)  
  412e42:	sbb    DWORD PTR [ebx+0x2a],ebx
  412e45:	push   0xa
  412e47:	ds jb  0x412e96
  412e4a:	mov    bl,0x6f
  412e4c:	pop    esi
  412e4d:	mov    ?,WORD PTR [ecx+0x5bc85dcb]
  412e53:	mov    ds:0xb23f34cb,al
  412e58:	stos   BYTE PTR es:[edi],al
  412e59:	pop    esi
  412e5a:	out    dx,eax
  412e5b:	sub    BYTE PTR [eax+0x3],0xad
  412e5f:	mov    WORD PTR [ecx-0xea49121],ss
  412e65:	imul   ebp,DWORD PTR [esi],0x35
  412e68:	dec    BYTE PTR [esi]
  412e6a:	inc    edx
  412e6b:	test   DWORD PTR [ecx],ebx
  412e6d:	jecxz  0x412e73
  412e6f:	jl     0x412e28
  412e71:	mov    esp,0x84779dad
  412e76:	or     DWORD PTR [ebx+eax*8+0x13],0xa
  412e7b:	fsubr  QWORD PTR [ecx+edi*1+0x2e1b798e]
  412e82:	test   ch,dl
  412e84:	pop    esi
  412e85:	xchg   edx,eax
  412e86:	jmp    0x412eb1
  412e88:	and    DWORD PTR ds:0x36c9e864,esp
  412e8e:	iret   
  412e8f:	jge    0x412ed0
  412e91:	lods   al,BYTE PTR ds:[esi]
  412e92:	in     eax,0x71
  412e94:	inc    ebx
  412e95:	data16 (bad) 
  412e99:	pop    esi
  412e9a:	cmp    ebp,ebx
  412e9c:	out    dx,eax
  412e9d:	pop    esp
  412e9e:	pop    edx
  412e9f:	ins    BYTE PTR es:[edi],dx
  412ea0:	cmp    al,0x3a
  412ea2:	mov    al,ds:0x3271b46
  412ea7:	jae    0x412e67
  412ea9:	jae    0x412e2d
  412eab:	push   ecx
  412eac:	jp     0x412eaa
  412eae:	adc    ah,BYTE PTR [esp+ebx*1+0x22d09ad0]
  412eb5:	cmp    DWORD PTR [eax+ecx*1+0x4],edx
  412eb9:	stos   DWORD PTR es:[edi],eax
  412eba:	pop    es
  412ebb:	xchg   esp,eax
  412ebc:	add    eax,0x4ce04bb
  412ec1:	sub    BYTE PTR ss:[edi],0xf8
  412ec5:	fiadd  WORD PTR [ebx]
  412ec7:	jb     0x412e4a
  412ec9:	rol    DWORD PTR [edx+0x20],0xd4
  412ecd:	ret    0x5d21
  412ed0:	cli    
  412ed1:	mov    al,0x14
  412ed3:	and    eax,0x1f016fa9
  412ed8:	sub    bh,BYTE PTR [esi+0xd]
  412edb:	push   ds
  412edc:	sbb    ebx,DWORD PTR [ebp-0x30]
  412edf:	test   BYTE PTR [ebp-0x50a8caff],ch
  412ee5:	fistp  QWORD PTR [eax+0x18]
  412ee8:	out    dx,al
  412ee9:	mov    ecx,DWORD PTR [ebp+0x3621e1bb]
  412eef:	jb     0x412ef5
  412ef1:	mov    ah,BYTE PTR [edi]
  412ef3:	rol    BYTE PTR [ebx],cl
  412ef5:	xchg   ah,ch
  412ef7:	or     cl,BYTE PTR [ebx+0x1]
  412efa:	pushf  
  412efb:	mov    ah,0x4e
  412efd:	call   DWORD PTR [ebp-0x56]
  412f00:	lods   eax,DWORD PTR ds:[esi]
  412f01:	aas    
  412f02:	loopne 0x412eb7
  412f04:	xchg   BYTE PTR [ebp+esi*1+0x73],al
  412f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f09:	stc    
  412f0a:	jbe    0x412f6d
  412f0c:	fcomp  QWORD PTR [esi+0x63]
  412f0f:	retf   
  412f10:	mov    esi,0x3dbdb20
  412f15:	push   esp
  412f16:	xchg   DWORD PTR ds:0x6a0474fa,edi
  412f1c:	push   ebx
  412f1d:	icebp  
  412f1e:	adc    DWORD PTR [ebp-0x58],ebx
  412f21:	(bad)  
  412f22:	es out 0x4c,eax
  412f25:	push   0x1f823d05
  412f2a:	ds jne 0x412f67
  412f2d:	fs pop ecx
  412f2f:	push   0x1d460c9
  412f34:	cmp    BYTE PTR [ebx],0xf7
  412f37:	adc    dl,bl
  412f39:	mov    ebx,0xee438d3d
  412f3e:	adc    DWORD PTR [eax],0x87da32f3
  412f44:	loopne 0x412f78
  412f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f47:	dec    ecx
  412f48:	add    eax,0x1d949cd
  412f4d:	hlt    
  412f4e:	xchg   esp,eax
  412f4f:	stos   BYTE PTR es:[edi],al
  412f50:	pop    eax
  412f52:	leave  
  412f53:	js     0x412f72
  412f55:	push   ecx
  412f56:	ficomp DWORD PTR [esi+0x78]
  412f59:	lock sbb eax,DWORD PTR [esi+0x14257bb9]
  412f60:	adc    ah,BYTE PTR [edi+0x3506d173]
  412f66:	jl     0x412f25
  412f68:	xchg   BYTE PTR [ebp+eax*1+0x34b32b8b],bl
  412f6f:	into   
  412f70:	std    
  412f71:	add    al,0x42
  412f73:	inc    edx
  412f74:	stos   DWORD PTR es:[edi],eax
  412f75:	(bad)
  412f78:	fwait
  412f79:	pop    ss
  412f7a:	retf   
  412f7b:	adc    al,0xc2
  412f7d:	adc    BYTE PTR [edx],cl
  412f7f:	sbb    al,0x9b
  412f81:	ds (bad) 
  412f83:	test   DWORD PTR [eax+0x40],eax
  412f86:	ror    BYTE PTR [edi],0xa3
  412f89:	xor    DWORD PTR [ebx+edi*8+0x62],ebp
  412f8d:	dec    ecx
  412f8e:	fimul  WORD PTR [edi-0x33]
  412f91:	shr    DWORD PTR [esi-0x77],0x99
  412f95:	push   ebx
  412f96:	xchg   edi,eax
  412f97:	adc    cl,BYTE PTR [ebx-0x1ed4614d]
  412f9d:	jb     0x412fe1
  412f9f:	xchg   ebp,eax
  412fa0:	icebp  
  412fa1:	addr16 int 0x1b
  412fa4:	mov    dl,0xca
  412fa6:	adc    bh,ch
  412fa8:	mov    ebx,0x25f23230
  412fad:	(bad)  
  412fae:	cld    
  412faf:	add    dh,BYTE PTR [eax-0x692d0255]
  412fb5:	pop    edi
  412fb6:	mov    ds:0xed1b7c69,al
  412fbb:	test   al,0xaa
  412fbd:	pop    es
  412fbe:	hlt    
  412fbf:	(bad)  
  412fc0:	pop    ds
  412fc1:	jle    0x412ffb
  412fc3:	add    al,0xff
  412fc5:	or     bh,BYTE PTR [edx+0x48]
  412fc8:	xchg   ecx,eax
  412fc9:	and    ah,al
  412fcb:	inc    ecx
  412fcc:	retf   
  412fcd:	mov    ebp,0x206a090b
  412fd2:	xchg   esi,eax
  412fd3:	ret    0xb498
  412fd6:	out    0x30,al
  412fd8:	shl    ebx,cl
  412fda:	aad    0xf
  412fdc:	test   BYTE PTR [edi+0x5f],dh
  412fdf:	mov    eax,0xf97bbf6
  412fe4:	int3   
  412fe5:	jp     0x412fd9
  412fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe8:	sbb    eax,DWORD PTR [edx]
  412fea:	or     eax,0xc647cf4c
  412fef:	into   
  412ff0:	sbb    eax,DWORD PTR [edx+0x50]
  412ff3:	outs   dx,BYTE PTR ds:[esi]
  412ff4:	push   ebx
  412ff5:	in     al,dx
  412ff6:	jmp    0xf2abf26f
  412ffb:	out    0xe0,al
  412ffd:	jp     0x412fdc
  412fff:	pop    esi
  413000:	push   ebx
  413001:	loope  0x412fbd
  413003:	test   eax,0xb33e91c7
  413008:	in     eax,dx
  413009:	inc    edi
  41300a:	jne    0x412fbd
  41300c:	shl    ah,cl
  41300e:	xchg   DWORD PTR [ecx-0x51],edi
  413011:	mov    bl,BYTE PTR [esi]
  413013:	stos   DWORD PTR es:[edi],eax
  413014:	jmp    0xd64385dd
  413019:	mov    edi,0xd98e798d
  41301e:	cdq    
  41301f:	push   0x24
  413021:	adc    bh,BYTE PTR [edx+0x794ccb10]
  413027:	pop    ebx
  413028:	fs sbb eax,0xaac0774b
  41302e:	push   0xffffffb2
  413030:	sbb    al,bh
  413032:	sti    
  413033:	jbe    0x413038
  413035:	call   0x7e91:0x3430f16d
  41303c:	repz dec edi
  41303e:	jb     0x413082
  413040:	jno    0x41306c
  413042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413043:	bound  eax,QWORD PTR [ebp-0x1467eb68]
  413049:	mov    ch,0xd9
  41304b:	mov    DWORD PTR [ebx+0x8a4ab51],edi
  413051:	push   esi
  413052:	aas    
  413053:	and    eax,0xd95522de
  413058:	aad    0x2f
  41305a:	(bad)  
  41305c:	and    BYTE PTR [edi],ch
  41305e:	bound  eax,QWORD PTR [ebx-0x239c51ea]
  413064:	icebp  
  413065:	pop    ds
  413066:	and    DWORD PTR [eax],esi
  413068:	adc    DWORD PTR ds:0x7e892f47,ebx
  41306e:	inc    ebp
  41306f:	repz mov eax,ds:0x3e1e96e6
  413075:	cwde   
  413076:	xchg   ebx,eax
  413077:	sub    al,ah
  413079:	in     eax,0x41
  41307b:	xor    al,0x53
  41307d:	adc    al,0x42
  41307f:	shl    BYTE PTR [edi+eiz*2],cl
  413082:	clc    
  413083:	cld    
  413084:	aas    
  413085:	jbe    0x4130b0
  413087:	inc    ebx
  413088:	pop    edi
  413089:	inc    esp
  41308a:	or     BYTE PTR [edx+0x3d2e6d68],al
  413090:	inc    esp
  413091:	loopne 0x4130bf
  413093:	out    0x5c,al
  413095:	mov    bh,0x62
  413097:	xchg   BYTE PTR [ebp-0x10],ah
  41309a:	bnd jl 0x4130b9
  41309d:	push   eax
  41309e:	daa    
  41309f:	xchg   edi,eax
  4130a0:	icebp  
  4130a1:	mov    cl,cl
  4130a3:	push   es
  4130a4:	push   ss
  4130a5:	xchg   ebx,eax
  4130a6:	inc    ebx
  4130a7:	mov    al,0xda
  4130a9:	in     al,0xd6
  4130ab:	js     0x41307b
  4130ad:	mov    ds:0x7c0a2276,eax
  4130b2:	cli    
  4130b3:	mov    ecx,0x794bab28
  4130b8:	sahf   
  4130b9:	xchg   ebx,eax
  4130ba:	lock addr16 mov ebx,0x4cdf9c12
  4130c1:	sbb    ch,BYTE PTR [edi]
  4130c3:	or     ebp,edi
  4130c5:	outs   dx,BYTE PTR ds:[esi]
  4130c6:	or     al,0xa1
  4130c8:	pop    ss
  4130c9:	cwde   
  4130ca:	xchg   BYTE PTR [ebp+0x18937b8d],dh
  4130d0:	or     cl,BYTE PTR [eax+0x1c]
  4130d3:	cmp    DWORD PTR [esp+eiz*8],edx
  4130d6:	xchg   ebx,eax
  4130d7:	sub    DWORD PTR [edx],ecx
  4130d9:	(bad)  
  4130da:	pushf  
  4130db:	and    al,0x9f
  4130dd:	and    BYTE PTR [ebx],bh
  4130df:	push   edx
  4130e0:	imul   esp,DWORD PTR [ebp-0x5c],0x23fe9740
  4130e7:	dec    eax
  4130e8:	dec    ebp
  4130e9:	stos   DWORD PTR es:[edi],eax
  4130ea:	push   edx
  4130eb:	repz jns 0x41309f
  4130ee:	jb     0x4130dc
  4130f0:	mov    esp,DWORD PTR [edx-0x6526a537]
  4130f6:	pop    edi
  4130f7:	rcr    BYTE PTR [edi],1
  4130f9:	xor    DWORD PTR [ecx],esi
  4130fb:	or     eax,0x5557fc09
  413100:	jb     0x413172
  413102:	xchg   ecx,eax
  413103:	xchg   dl,bh
  413105:	fdivr  st(2),st
  413107:	add    BYTE PTR [ecx],al
  413109:	pusha  
  41310a:	xchg   esi,eax
  41310b:	mov    ch,0xcc
  41310d:	popf   
  41310e:	je     0x4130ba
  413110:	pop    edi
  413111:	and    ecx,ebx
  413113:	sbb    BYTE PTR [edx+0x2d],dl
  413116:	das    
  413117:	xchg   esi,eax
  413118:	pop    edx
  413119:	push   ebp
  41311a:	jecxz  0x4130ca
  41311c:	jmp    0x70ad:0x851cf0af
  413123:	loope  0x413123
  413125:	mov    edx,0x73181ead
  41312a:	retf   
  41312b:	pop    edi
  41312c:	sbb    ah,al
  41312e:	xchg   edx,eax
  41312f:	fstp   QWORD PTR [esi]
  413131:	aad    0xb5
  413133:	pop    ecx
  413134:	add    ch,cl
  413136:	scas   eax,DWORD PTR es:[edi]
  413137:	test   al,0x33
  413139:	scas   al,BYTE PTR es:[edi]
  41313a:	mov    edi,0x9c4039df
  41313f:	inc    edx
  413140:	xchg   ebp,eax
  413141:	jle    0x413149
  413143:	aas    
  413144:	mov    edx,0xd7a5975f
  413149:	loope  0x413192
  41314b:	cdq    
  41314c:	add    BYTE PTR [ebp*1+0x5f82fd2a],0xdf
  413154:	inc    ebx
  413155:	stos   DWORD PTR es:[edi],eax
  413156:	and    bh,dl
  413158:	out    dx,al
  413159:	sbb    esi,eax
  41315b:	out    dx,eax
  41315c:	jae    0x413192
  41315e:	mov    BYTE PTR [ebp+0x1c],dh
  413161:	or     ch,ah
  413163:	retf   0xfca5
  413166:	pop    eax
  413167:	jg     0x4131a3
  413169:	ins    BYTE PTR es:[edi],dx
  41316a:	pop    ebp
  41316b:	addr16 leave 
  41316d:	mov    ah,0xfa
  41316f:	or     BYTE PTR [esi-0x2a],bl
  413172:	clc    
  413173:	fldcw  WORD PTR [eax+0x29]
  413176:	ja     0x413156
  413178:	std    
  413179:	push   esi
  41317a:	mov    dl,0x58
  41317c:	cmp    DWORD PTR [ecx-0x431b451a],ebx
  413182:	mul    eax
  413184:	jmp    0x4cd5d6e2
  413189:	dec    edx
  41318a:	scas   eax,DWORD PTR es:[edi]
  41318b:	test   al,al
  41318d:	gs push cs
  41318f:	adc    BYTE PTR [ebx],cl
  413191:	test   eax,0x8067e5a7
  413196:	or     ah,bh
  413198:	or     BYTE PTR [ecx],dl
  41319a:	sbb    bh,dl
  41319c:	std    
  41319d:	pop    ebx
  41319e:	mov    ah,0xf7
  4131a0:	mov    ds:0xea1c829f,al
  4131a5:	pop    esi
  4131a6:	jmp    0x4131d5
  4131a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131a9:	das    
  4131aa:	xor    al,cl
  4131ac:	test   al,0x69
  4131ae:	or     BYTE PTR [ebp-0x75],ch
  4131b1:	leave  
  4131b2:	fisttp DWORD PTR [edi]
  4131b4:	ins    BYTE PTR es:[edi],dx
  4131b5:	jp     0x41319b
  4131b7:	mov    esp,0x3037f2f7
  4131bc:	add    ah,BYTE PTR [edi-0x75b2501]
  4131c2:	ds into 
  4131c4:	or     esp,0xdc328c5d
  4131ca:	stos   DWORD PTR es:[edi],eax
  4131cb:	adc    DWORD PTR [esi],0x38fb63b6
  4131d1:	data16 ss in al,0x30
  4131d5:	mov    BYTE PTR [esp+ecx*2-0x4cbaec4e],ch
  4131dc:	dec    edx
  4131dd:	aad    0xf4
  4131df:	mov    al,BYTE PTR [esi]
  4131e1:	adc    eax,0x654f3c81
  4131e6:	ins    DWORD PTR es:[edi],dx
  4131e7:	test   BYTE PTR [ebp+0xa2ccd49],0x84
  4131ee:	aas    
  4131ef:	push   eax
  4131f0:	pop    esi
  4131f1:	retf   0x2f03
  4131f4:	xchg   BYTE PTR [eax-0x127f162d],al
  4131fa:	stc    
  4131fb:	std    
  4131fc:	push   ecx
  4131fd:	test   BYTE PTR [esi],bh
  4131ff:	pop    ecx
  413200:	add    eax,0x2416f40e
  413205:	js     0x413228
  413207:	cmp    ebx,DWORD PTR [ecx-0x73]
  41320a:	lea    esp,[eax+edi*1-0x2d31228d]
  413211:	mov    bl,BYTE PTR [esi-0x41ba05f2]
  413217:	dec    edx
  413218:	out    0x6,eax
  41321a:	sbb    edi,DWORD PTR [edx+0x23]
  41321d:	ret    
  41321e:	adc    ah,cl
  413220:	mov    ch,0x15
  413222:	(bad)  
  413223:	fadd   QWORD PTR [edi-0x6a]
  413226:	repz mov bh,0xb8
  41322a:	into   
  41322b:	lock js 0x41323a
  41322e:	mov    cl,0xbe
  413230:	pop    es
  413231:	addr16 test eax,0xe7b1ef59
  413237:	xchg   ebx,eax
  413238:	xchg   esi,eax
  413239:	fs addr16 push eax
  41323c:	mov    cs,WORD PTR [ecx]
  41323e:	dec    esp
  41323f:	pop    edi
  413240:	mov    bh,0x8
  413242:	into   
  413243:	push   eax
  413244:	and    al,0x23
  413246:	(bad)  
  413248:	pop    ss
  413249:	jge    0x413284
  41324b:	sub    al,0x6d
  41324d:	scas   al,BYTE PTR es:[edi]
  41324e:	lods   eax,DWORD PTR ds:[esi]
  41324f:	dec    eax
  413250:	inc    edi
  413251:	out    0x28,eax
  413253:	or     BYTE PTR [esi],dh
  413255:	sbb    eax,0xf55c85b3
  41325a:	xchg   esi,eax
  41325b:	inc    esp
  41325c:	and    al,0xe6
  41325e:	stos   DWORD PTR es:[edi],eax
  41325f:	shr    BYTE PTR [edx-0x50],cl
  413262:	inc    eax
  413263:	loopne 0x41324b
  413265:	push   eax
  413266:	clc    
  413267:	jmp    DWORD PTR [eax+0x79a69c7d]
  41326d:	sub    BYTE PTR [ebx-0x43],bl
  413270:	stos   DWORD PTR es:[edi],eax
  413271:	mov    ch,0x73
  413273:	push   ecx
  413274:	dec    esi
  413275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413276:	sbb    bl,dh
  413278:	and    al,0xe8
  41327a:	inc    esp
  41327b:	cmp    DWORD PTR [ebx+0xfd2d5e8],esi
  413281:	pushf  
  413282:	push   esp
  413283:	mov    cl,0x10
  413285:	enter  0xe4e5,0xa0
  413289:	ffreep st(5)
  41328b:	push   edi
  41328c:	xchg   DWORD PTR [esi-0x34],edx
  41328f:	and    esi,ebx
  413291:	push   ebx
  413292:	xchg   ecx,eax
  413293:	inc    ebp
  413294:	jo     0x4132fd
  413296:	ret    
  413297:	jmp    0x15a0e116
  41329c:	dec    ebx
  41329d:	add    bl,dh
  41329f:	mov    ecx,0x2cd588a1
  4132a4:	adc    BYTE PTR [eax],ch
  4132a6:	cmp    al,0x69
  4132a8:	xor    al,0x3
  4132aa:	push   esp
  4132ab:	mov    dh,0xd7
  4132ad:	das    
  4132ae:	adc    eax,0x2841d351
  4132b3:	cwde   
  4132b4:	shr    DWORD PTR [edi-0xe6d491a],1
  4132ba:	mov    ebp,0x20c9ec32
  4132bf:	call   0xcc5f4882
  4132c4:	test   DWORD PTR [ebx-0x25],esi
  4132c7:	pusha  
  4132c8:	aaa    
  4132c9:	lds    esi,FWORD PTR ds:0x2923f2fd
  4132cf:	int3   
  4132d0:	push   cs
  4132d1:	sbb    bl,dl
  4132d3:	cmp    eax,0xc4058bbf
  4132d8:	test   eax,0xd264844b
  4132dd:	sub    BYTE PTR [esi+0x76f873ae],0xce
  4132e4:	xor    DWORD PTR ds:0xc8c3d31d,ebx
  4132ea:	push   edx
  4132eb:	lods   eax,DWORD PTR ds:[esi]
  4132ec:	out    dx,al
  4132ed:	pop    esi
  4132ee:	aad    0x89
  4132f0:	jge    0x41336f
  4132f2:	lods   al,BYTE PTR ds:[esi]
  4132f3:	loope  0x413352
  4132f5:	rcl    DWORD PTR [eax],cl
  4132f7:	xor    ebx,DWORD PTR [edi-0x2f]
  4132fa:	mov    eax,0x84baa8b0
  4132ff:	or     al,0x54
  413301:	and    DWORD PTR [edi+0x3f],esi
  413304:	sbb    ebp,DWORD PTR [edi]
  413306:	xor    ebx,DWORD PTR cs:[eax+ebx*4+0x12]
  41330b:	sbb    edi,edx
  41330d:	jmp    0x7e4b:0xb0d5cee0
  413314:	mov    dh,0xcf
  413316:	sbb    DWORD PTR [esi+0x3d],ecx
  413319:	and    esi,DWORD PTR [ecx]
  41331b:	add    ch,BYTE PTR [ebp-0x54ec690e]
  413321:	jns    0x41338c
  413323:	call   0xb73e:0x36f289b6
  41332a:	sbb    BYTE PTR [ecx-0x56],bl
  41332d:	jmp    0x4132d7
  41332f:	stc    
  413330:	mov    esp,ebx
  413332:	add    DWORD PTR [ebp+0x1d],0xc822dd1
  413339:	fstp   DWORD PTR [ecx-0x14]
  41333c:	dec    edx
  41333d:	je     0x41330f
  41333f:	push   ds
  413340:	imul   ebx,DWORD PTR [ebp+0x621da41],0x34
  413347:	xor    esp,edx
  413349:	cmp    BYTE PTR [ebx-0x105ae3c1],dl
  41334f:	gs mov edx,0x9850f8a1
  413355:	popf   
  413356:	fld    QWORD PTR [ebx+0x6b]
  413359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41335a:	jg     0x41334c
  41335c:	and    BYTE PTR [ebp+0x7c],dh
  41335f:	test   al,0x52
  413361:	cwde   
  413362:	jmp    0x49b0:0x1f89e68a
  413369:	jmp    0xf7ed:0x1507b31f
  413370:	outs   dx,DWORD PTR ds:[esi]
  413371:	in     al,dx
  413372:	test   BYTE PTR [edi+esi*4-0x4e],al
  413376:	addr16 cmp eax,0x7ea83b35
  41337c:	mov    esp,0x1b461a90
  413381:	stc    
  413382:	test   al,0xb2
  413384:	or     DWORD PTR [edx+0x145f11dd],ecx
  41338a:	and    edx,DWORD PTR [edx]
  41338c:	lds    edx,FWORD PTR [edx+0x6404dda8]
  413392:	mov    eax,0xf3025b65
  413397:	rol    BYTE PTR [ecx+esi*1+0x2322b1cd],0xa2
  41339f:	sbb    DWORD PTR [edi-0xd],ebp
  4133a2:	rcl    bh,1
  4133a4:	in     eax,dx
  4133a5:	cld    
  4133a6:	or     BYTE PTR [ebp+0x965669],ah
  4133ac:	cld    
  4133ad:	dec    eax
  4133ae:	outs   dx,BYTE PTR ds:[esi]
  4133af:	mov    ds:0x822e9675,eax
  4133b4:	pop    ebp
  4133b5:	fdivp  st(6),st
  4133b7:	xchg   DWORD PTR [eax],ebx
  4133b9:	add    al,0x30
  4133bb:	pop    ecx
  4133bc:	dec    esp
  4133bd:	jmp    0x3fa2:0x99451f38
  4133c4:	or     esi,DWORD PTR [esi]
  4133c6:	push   ebp
  4133c7:	jecxz  0x413354
  4133c9:	gs pop esi
  4133cb:	add    eax,0xc61b4908
  4133d0:	sub    DWORD PTR [ebp+0xcd5a300],edi
  4133d6:	hlt    
  4133d7:	mov    bl,0x67
  4133d9:	mov    ebx,0x33913cf2
  4133de:	adc    edx,DWORD PTR ds:0xf8cb8da
  4133e4:	mov    ah,0x8e
  4133e6:	inc    ebp
  4133e7:	outs   dx,DWORD PTR ds:[esi]
  4133e8:	dec    esi
  4133e9:	mov    dl,0xc7
  4133eb:	dec    ebx
  4133ec:	in     al,0x8b
  4133ee:	cmp    DWORD PTR [ebp+0x6f],edx
  4133f1:	mov    al,ds:0x8d3a1e21
  4133f6:	and    BYTE PTR [eax+0x23],0xe9
  4133fa:	icebp  
  4133fb:	xchg   esi,eax
  4133fc:	(bad)  
  4133fd:	scas   eax,DWORD PTR es:[edi]
  4133fe:	and    eax,0xd9754b88
  413403:	cmp    esi,eax
  413405:	int    0x68
  413407:	sbb    dl,BYTE PTR [edi+0x1a1c793a]
  41340d:	mov    al,0xcb
  41340f:	cld    
  413410:	(bad)  
  413412:	repnz xor edx,ebx
  413415:	bound  esi,QWORD PTR fs:[ecx-0x7e]
  413419:	fidiv  WORD PTR [edi]
  41341b:	jmp    0x75aa88ff
  413420:	or     BYTE PTR [ebx+eiz*2-0x4f7142b],bl
  413427:	lods   eax,DWORD PTR ds:[esi]
  413428:	outs   dx,DWORD PTR ds:[esi]
  413429:	jns    0x413415
  41342b:	hlt    
  41342c:	fs aam 0x53
  41342f:	or     al,0xde
  413431:	repz in eax,dx
  413433:	cwde   
  413434:	std    
  413435:	dec    edi
  413436:	fs int 0x4c
  413439:	fcmovnu st,st(1)
  41343b:	mov    ah,0x27
  41343d:	mov    bl,bl
  41343f:	outs   dx,BYTE PTR ds:[esi]
  413440:	call   0xd39f487e
  413445:	sbb    BYTE PTR [ecx],bh
  413447:	xor    al,0xcb
  413449:	outs   dx,BYTE PTR ds:[esi]
  41344a:	xchg   ebx,ebx
  41344c:	or     ebp,DWORD PTR [ebx]
  41344e:	in     eax,dx
  41344f:	inc    ecx
  413450:	xchg   ecx,eax
  413451:	daa    
  413452:	ins    DWORD PTR es:[edi],dx
  413453:	push   edi
  413454:	fs div ebx
  413457:	jno    0x41349e
  413459:	sub    ch,bh
  41345b:	sbb    BYTE PTR [edi-0x17],dh
  41345e:	outs   dx,DWORD PTR ds:[esi]
  41345f:	ds mov eax,0xe07a0162
  413465:	call   0x58e42589
  41346a:	jle    0x413458
  41346c:	push   edi
  41346e:	cmp    bh,0x94
  413471:	pop    ecx
  413472:	sub    eax,0xe18f4fe
  413477:	or     al,0x1a
  413479:	mov    cl,BYTE PTR [eax]
  41347b:	jmp    0x6162:0xd723b6b1
  413482:	mov    ds:0x51c57880,al
  413487:	dec    ebp
  413488:	clc    
  413489:	mov    ecx,0xcfa558a2
  41348e:	jecxz  0x413498
  413490:	mov    dl,0xe6
  413492:	sbb    esp,DWORD PTR [ecx-0x38]
  413495:	(bad)  
  413496:	xor    bl,BYTE PTR [ebp-0x3c953737]
  41349c:	adc    al,0xe9
  41349e:	mov    dh,BYTE PTR [ebx]
  4134a0:	inc    ecx
  4134a1:	inc    esp
  4134a2:	sbb    BYTE PTR [edi+esi*8+0x5cbc52e5],0xc6
  4134aa:	sub    cl,BYTE PTR ds:0xb6255b1a
  4134b0:	push   ebp
  4134b1:	int    0xac
  4134b3:	aad    0x28
  4134b5:	cmp    DWORD PTR [esp-0x65],0xd0390a19
  4134bd:	push   esi
  4134be:	mov    bl,0x46
  4134c0:	sbb    ecx,DWORD PTR [ebp-0x7bdc8892]
  4134c6:	pop    edi
  4134c7:	fiadd  WORD PTR [ecx]
  4134c9:	sbb    ah,dl
  4134cb:	mov    WORD PTR [edx+0x2d6e911e],?
  4134d1:	mov    dl,0x22
  4134d3:	fnstsw WORD PTR [ebx-0x471d7f7f]
  4134d9:	add    al,0x26
  4134db:	or     eax,0xb71d71e
  4134e0:	and    edx,esp
  4134e2:	sbb    al,0xb6
  4134e4:	dec    ebp
  4134e5:	(bad)  
  4134e7:	inc    ecx
  4134e8:	test   al,0xdf
  4134ea:	enter  0xd5c2,0xaa
  4134ee:	pop    esp
  4134ef:	fwait
  4134f0:	jmp    0x876cd03c
  4134f5:	sbb    al,0x71
  4134f7:	in     eax,dx
  4134f8:	fst    QWORD PTR [ecx+0x11]
  4134fb:	mov    WORD PTR [edx+0x17454fa8],ss
  413501:	xor    ebp,DWORD PTR [edx-0x5]
  413504:	xchg   ah,ah
  413506:	nop
  413507:	mov    ds:0x6888d7be,eax
  41350c:	xor    DWORD PTR [esi+eiz*2],eax
  41350f:	(bad)  
  413510:	xchg   edx,eax
  413511:	inc    ebx
  413512:	call   0xba17:0x12514c64
  413519:	test   eax,0x1c25badb
  41351e:	in     eax,0x19
  413520:	shl    BYTE PTR [eax+0x53ec4010],cl
  413526:	(bad)  
  413527:	out    dx,eax
  413528:	mov    al,0xe1
  41352a:	push   cs
  41352b:	test   DWORD PTR [ebx],esp
  41352d:	mov    ebx,0x1c48cf63
  413532:	std    
  413533:	je     0x41357a
  413535:	popf   
  413536:	mov    dh,0x5a
  413538:	jnp    0x4134d7
  41353a:	mov    DWORD PTR [esi-0x6964cdc3],edx
  413540:	test   DWORD PTR [ebx+ecx*4-0x2e],0xf574e800
  413548:	(bad)  
  413549:	jp     0x4134eb
  41354b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41354c:	xlat   BYTE PTR ds:[ebx]
  41354d:	pop    ecx
  41354e:	xchg   ah,bh
  413550:	inc    ebp
  413551:	or     al,0xa9
  413553:	jns    0x4135b5
  413555:	or     DWORD PTR [ebp+0x7feb688b],ebp
  41355b:	lods   al,BYTE PTR ds:[esi]
  41355c:	popf   
  41355d:	(bad)  
  41355e:	push   ds
  41355f:	xchg   ebx,eax
  413560:	pusha  
  413561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413562:	stos   BYTE PTR es:[edi],al
  413563:	mov    ds:0xb06eb905,eax
  413568:	(bad)  [esi]
  41356a:	fsubr  QWORD PTR [ecx+0x14]
  41356d:	pop    es
  41356e:	mov    eax,ds:0xf8f17aa6
  413573:	pop    eax
  413574:	dec    eax
  413575:	xchg   DWORD PTR [ebx-0x5e],ebp
  413578:	push   edi
  413579:	mov    ds:0x203dbc65,eax
  41357e:	mov    ch,0x78
  413580:	scas   al,BYTE PTR es:[edi]
  413581:	fild   WORD PTR [esi+0x17d0c2dd]
  413587:	(bad)  
  413588:	out    dx,al
  413589:	outs   dx,BYTE PTR ds:[esi]
  41358a:	cdq    
  41358b:	pop    ss
  41358c:	xchg   ecx,eax
  41358d:	fist   DWORD PTR [edx+ecx*1+0x66]
  413591:	das    
  413592:	inc    esi
  413593:	jg     0x4135b8
  413595:	adc    ch,BYTE PTR [edx-0x6a]
  413598:	xchg   esp,eax
  413599:	int3   
  41359a:	xor    ecx,DWORD PTR [esi+0x4c]
  41359d:	cmp    DWORD PTR [esi+0x209c0511],0xd3e7c56
  4135a7:	mov    esp,0x33bd433b
  4135ac:	and    eax,0x8bf484b1
  4135b1:	out    0xbf,eax
  4135b3:	fwait
  4135b4:	dec    eax
  4135b5:	nop
  4135b6:	jnp    0x4135a8
  4135b8:	enter  0x165a,0x79
  4135bc:	loopne 0x413577
  4135be:	shl    DWORD PTR ds:0x6245f4af,cl
  4135c4:	test   DWORD PTR [esi+0x56d03b43],edi
  4135ca:	mov    ch,0x8a
  4135cc:	out    dx,eax
  4135cd:	xor    BYTE PTR [edx-0x254cf0e5],dh
  4135d3:	push   ebx
  4135d4:	jmp    0x4135f8
  4135d6:	mul    DWORD PTR [edx-0x21]
  4135d9:	aas    
  4135da:	mov    ah,0xf5
  4135dc:	jno    0x413562
  4135de:	(bad)  
  4135df:	dec    edx
  4135e0:	jo     0x4135a2
  4135e2:	mov    bh,0xe7
  4135e4:	stc    
  4135e5:	loop   0x4135b7
  4135e7:	mov    dh,0x40
  4135e9:	ja     0x4135d3
  4135eb:	sti    
  4135ec:	lea    ebp,[edi-0x48c80a06]
  4135f2:	adc    esi,DWORD PTR [ebp+0x60]
  4135f5:	test   eax,0x21d19c3f
  4135fa:	(bad)  
  4135fb:	iret   
  4135fc:	stc    
  4135fd:	adc    BYTE PTR [esi+0x20],al
  413600:	test   DWORD PTR [eax+0x4d],ebx
  413603:	lahf   
  413604:	scas   eax,DWORD PTR es:[edi]
  413605:	add    bl,bh
  413607:	dec    eax
  413608:	test   eax,0x8763e32b
  41360d:	lods   eax,DWORD PTR ds:[esi]
  41360e:	fsub   QWORD PTR [eax]
  413610:	jmp    edx
  413612:	(bad)  
  413613:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413615:	inc    ebx
  413616:	cld    
  413617:	mov    al,ds:0x49fc54b8
  41361c:	mov    WORD PTR [eax-0x5b3ad72d],gs
  413622:	sub    al,0x3b
  413624:	cli    
  413625:	fcom   QWORD PTR [ecx-0x2d]
  413628:	fisttp WORD PTR [ebx-0x50]
  41362b:	pusha  
  41362c:	cmp    eax,0x19cdbb26
  413631:	push   0xffffffd6
  413633:	or     bl,dh
  413635:	adc    eax,0x2d9cb085
  41363a:	adc    eax,DWORD PTR [esi+ebx*4]
  41363d:	cmp    edx,DWORD PTR [edi-0x11]
  413640:	mov    dl,0xce
  413642:	pop    ds
  413643:	jle    0x413646
  413645:	out    dx,al
  413646:	jae    0x413656
  413648:	mov    ebx,0x80e7f481
  41364d:	adc    al,BYTE PTR [ebp+0xc]
  413650:	and    DWORD PTR [eax+0x301caa48],ecx
  413656:	ret    
  413657:	into   
  413658:	lods   al,BYTE PTR ds:[esi]
  413659:	dec    edx
  41365a:	xor    ah,BYTE PTR [eax+ebx*2-0x47]
  41365e:	fs loopne 0x4136b4
  413661:	mov    edi,0xa9a36ea3
  413666:	jne    0x41368c
  413668:	pop    ebx
  413669:	xor    edi,ecx
  41366b:	xor    eax,0x8ab896f
  413670:	mov    ah,0x7
  413672:	sub    eax,esi
  413674:	add    cl,BYTE PTR [ebp-0x45]
  413677:	daa    
  413678:	pop    ebp
  413679:	stos   DWORD PTR es:[edi],eax
  41367a:	jb     0x4136ee
  41367c:	shl    BYTE PTR ds:[eax-0x7b49a992],1
  413683:	ror    BYTE PTR [eax-0x39],1
  413686:	jmp    0xc83ddd52
  41368b:	lods   al,BYTE PTR ds:[esi]
  41368c:	push   ebx
  41368d:	pushf  
  41368e:	cld    
  41368f:	cdq    
  413690:	arpl   WORD PTR [ebx+0x68],bx
  413693:	cs xchg ebx,eax
  413695:	dec    edx
  413696:	xor    al,0x30
  413698:	out    0x8d,al
  41369a:	(bad)  
  41369b:	mul    ecx
  41369d:	adc    eax,0x65a3cb6e
  4136a2:	popa   
  4136a3:	add    eax,0xdb337804
  4136a8:	(bad)
  4136ab:	mov    bl,0x93
  4136ad:	cmp    eax,0x67a6388d
  4136b2:	fdivr  DWORD PTR [edx-0x2960b60c]
  4136b8:	mul    ecx
  4136ba:	es mov eax,0x68d8b08a
  4136c0:	sti    
  4136c1:	fsubr  QWORD PTR [esi+ebp*8]
  4136c4:	int    0x44
  4136c6:	mov    ds:0xc8b37415,eax
  4136cb:	fcomi  st,st(6)
  4136cd:	add    DWORD PTR [eax+0x63],ecx
  4136d0:	xchg   edi,eax
  4136d1:	push   ecx
  4136d2:	jo     0x413699
  4136d4:	mov    cl,0x49
  4136d6:	adc    bl,BYTE PTR [ecx-0x4e5f5ba9]
  4136dc:	jae    0x4136d6
  4136de:	es push es
  4136e0:	or     al,BYTE PTR [esi+edi*2-0xb]
  4136e4:	shl    DWORD PTR es:[ecx-0x2055711c],cl
  4136eb:	aas    
  4136ec:	xor    ah,BYTE PTR [edi+eiz*4-0x1c]
  4136f0:	mov    ebp,0x62b2ae72
  4136f5:	jb     0x41374b
  4136f7:	call   0x87af348a
  4136fc:	mov    esp,0xe07d8367
  413701:	inc    ecx
  413702:	loopne 0x4136aa
  413704:	pop    DWORD PTR [edx]
  413706:	mov    ecx,DWORD PTR [ecx]
  413708:	dec    ebp
  413709:	sbb    ch,ah
  41370b:	es xchg ecx,eax
  41370d:	(bad)  
  41370e:	aas    
  41370f:	pop    esi
  413710:	ret    
  413711:	mov    ecx,0xef2723b4
  413716:	loope  0x4136e9
  413718:	loope  0x413719
  41371a:	div    DWORD PTR [ebx]
  41371c:	cmp    al,0x87
  41371e:	fadd   st(2),st
  413720:	pushf  
  413721:	hlt    
  413722:	ret    
  413723:	dec    esi
  413724:	xor    DWORD PTR [ebx-0x13],ebp
  413727:	cld    
  413728:	sub    DWORD PTR [esi-0x36e99eb0],ecx
  41372e:	sbb    edi,DWORD PTR [ebx+eiz*8-0x74737482]
  413735:	adc    al,0x7b
  413737:	inc    esi
  413738:	cdq    
  413739:	cmp    al,0xa6
  41373b:	pop    es
  41373c:	push   edi
  41373d:	(bad)  
  41373e:	jno    0x413724
  413740:	cld    
  413741:	or     eax,0x3d825b06
  413746:	adc    BYTE PTR [edi+0x62],0xe1
  41374a:	bound  esp,QWORD PTR [edi]
  41374c:	rcr    BYTE PTR [eax-0x580643e7],1
  413752:	rcpps  xmm1,XMMWORD PTR [edi+edx*1]
  413756:	cmp    esp,DWORD PTR [edi+0x47396876]
  41375c:	and    esi,edx
  41375e:	push   0x84d3a70b
  413763:	mov    eax,ds:0x7092a1dc
  413768:	jmp    0x7ccf1ff6
  41376d:	adc    ebx,ebp
  41376f:	test   al,0x26
  413771:	push   eax
  413772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413773:	dec    edx
  413774:	out    0x73,eax
  413776:	xor    ecx,ecx
  413778:	pop    eax
  413779:	sbb    al,BYTE PTR [esi+0x4d7c2438]
  41377f:	pop    edi
  413780:	jne    0x413719
  413782:	jg     0x4137f7
  413784:	xor    DWORD PTR [edi],ecx
  413786:	push   esi
  413787:	cmp    DWORD PTR [edi],ebx
  413789:	mov    edi,DWORD PTR [ebx]
  41378b:	dec    edi
  41378c:	shl    DWORD PTR [ebx],cl
  41378e:	mov    dl,0x21
  413790:	fbstp  TBYTE PTR [ebp+0x707e3f52]
  413796:	or     cl,ch
  413798:	hlt    
  413799:	sub    ebx,0xd048dc10
  41379f:	jle    0x413740
  4137a1:	(bad)  
  4137a2:	cmp    BYTE PTR [eax],ch
  4137a4:	mov    ds:0xfc87feae,al
  4137a9:	adc    eax,0x919cbb8c
  4137ae:	addr16 jg 0x413757
  4137b1:	pop    eax
  4137b2:	mov    ch,0xb0
  4137b4:	bound  esp,QWORD PTR [ecx+0x6da98530]
  4137ba:	inc    ebx
  4137bb:	push   ecx
  4137bc:	dec    edx
  4137bd:	sbb    al,0xd7
  4137bf:	cld    
  4137c0:	scas   al,BYTE PTR es:[edi]
  4137c1:	sbb    al,0x56
  4137c3:	adc    BYTE PTR [edx+0x24],bh
  4137c6:	shl    DWORD PTR [edi+0x21d05aa1],cl
  4137cc:	mov    eax,0x4f36f520
  4137d1:	mov    al,ds:0x6bd5443d
  4137d6:	or     ebx,ebx
  4137d8:	mov    ecx,0x1f74c3fb
  4137dd:	cld    
  4137de:	mov    ebp,0xcd00c7b3
  4137e3:	fst    QWORD PTR [ebp-0x2d]
  4137e6:	rol    BYTE PTR [ecx+eiz*4],cl
  4137e9:	sub    dl,0x2a
  4137ec:	mov    BYTE PTR [edx],dl
  4137ee:	iret   
  4137ef:	(bad)  
  4137f0:	fsub   DWORD PTR [esp+esi*8+0x3b79e7c]
  4137f7:	in     al,dx
  4137f8:	loope  0x4137b1
  4137fa:	sub    BYTE PTR [eax-0x70da8ee],cl
  413800:	(bad)  
  413801:	jp     0x41387e
  413803:	dec    ecx
  413804:	add    bl,BYTE PTR [ecx-0x4]
  413807:	out    dx,al
  413808:	pop    esp
  413809:	and    bh,al
  41380b:	mov    cl,0x38
  41380d:	stos   DWORD PTR es:[edi],eax
  41380e:	push   es
  41380f:	adc    al,BYTE PTR [esi+0x7a]
  413812:	push   esp
  413813:	sahf   
  413814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413815:	add    al,0x78
  413817:	mov    bh,0x6f
  413819:	in     eax,dx
  41381a:	sub    ebp,DWORD PTR [ebx-0x54bc9501]
  413820:	fld    st(7)
  413822:	outs   dx,DWORD PTR ds:[esi]
  413823:	jmp    0x783c78bf
  413828:	data16 test al,0x99
  41382b:	loopne 0x413899
  41382d:	shr    BYTE PTR [ecx],cl
  41382f:	sbb    ecx,esi
  413831:	adc    eax,0x2cdb108d
  413836:	(bad)  
  413837:	and    eax,0x716cc073
  41383c:	cli    
  41383d:	cld    
  41383e:	loope  0x4138b7
  413840:	mov    ebp,0xb9238dd5
  413845:	mov    bh,0x8e
  413847:	push   ebx
  413848:	jle    0x41380f
  41384a:	test   eax,0xb4ff31d3
  41384f:	shl    DWORD PTR ds:0x1783893e,cl
  413855:	mov    BYTE PTR [edx-0x5],ch
  413858:	mov    bl,0x45
  41385a:	sub    esi,edx
  41385c:	push   ss
  41385d:	cmc    
  41385e:	in     al,0x5b
  413860:	sar    dl,1
  413862:	add    eax,0xcbedaaa4
  413867:	add    BYTE PTR [esi+0x56],bh
  41386a:	scas   al,BYTE PTR es:[edi]
  41386b:	aaa    
  41386c:	cld    
  41386d:	push   edi
  41386e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41386f:	adc    BYTE PTR [eax],dl
  413871:	jne    0x413819
  413873:	stos   BYTE PTR es:[di],al
  413875:	cmp    eax,0x9c99c5e8
  41387a:	repnz mov DWORD PTR ds:0x13dc7c20,esi
  413881:	sbb    al,0x4c
  413883:	adc    al,0x22
  413885:	test   eax,0xee977c7a
  41388a:	and    BYTE PTR [edi+ebx*8+0x6d],ch
  41388e:	inc    eax
  41388f:	pop    edi
  413890:	mov    ecx,eax
  413892:	(bad)  
  413893:	jge    0x413834
  413895:	pop    ss
  413896:	cmp    cl,BYTE PTR [ecx+0x20]
  413899:	mov    ebx,0x232d73a5
  41389e:	inc    edx
  41389f:	pop    esp
  4138a0:	sbb    esi,edi
  4138a2:	mov    dh,0xb5
  4138a4:	out    dx,eax
  4138a5:	popf   
  4138a6:	outs   dx,DWORD PTR ds:[esi]
  4138a7:	sbb    DWORD PTR [eax-0x59],esi
  4138aa:	mov    WORD PTR [esi],gs
  4138ac:	sahf   
  4138ad:	fstp   DWORD PTR [eax]
  4138af:	jmp    0x41385f
  4138b1:	mov    ch,0xa5
  4138b3:	mov    ebp,0xe0de1f0f
  4138b8:	test   DWORD PTR [edx-0x12caddad],0xd55f9d6
  4138c2:	xor    eax,esp
  4138c4:	imul   ecx,DWORD PTR [edi],0xffffffae
  4138c7:	cmp    ah,BYTE PTR [ebx]
  4138c9:	or     BYTE PTR [ecx-0x4bec07c6],ah
  4138cf:	push   esp
  4138d0:	cmp    eax,0xb47fc971
  4138d5:	mov    dh,0x25
  4138d7:	into   
  4138d8:	call   0xf633b81b
  4138dd:	retf   0x507f
  4138e0:	xchg   ebx,eax
  4138e1:	js     0x4138ef
  4138e3:	xor    BYTE PTR [esi-0x57bbbcae],ah
  4138e9:	xor    BYTE PTR [edi+0x7b],dh
  4138ec:	shl    DWORD PTR [ebp-0x2a],0x77
  4138f0:	mov    edi,0x31044e0c
  4138f5:	sub    eax,0x806925ed
  4138fa:	xchg   ebp,eax
  4138fb:	mov    bl,0xe6
  4138fd:	dec    esi
  4138fe:	mov    eax,0x3832f46c
  413903:	loope  0x4138da
  413905:	xor    ebp,ecx
  413907:	xchg   ebx,eax
  413908:	aas    
  413909:	mov    bh,0xa
  41390b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41390c:	or     DWORD PTR [ebp+0x2],edi
  41390f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413910:	dec    esi
  413911:	ins    DWORD PTR es:[edi],dx
  413912:	cld    
  413913:	les    ecx,FWORD PTR ds:0x7a20610d
  413919:	scas   eax,DWORD PTR es:[edi]
  41391a:	fild   WORD PTR [edx]
  41391c:	jmp    0x3e34:0x3f136c67
  413923:	dec    edx
  413924:	add    al,0xd7
  413926:	into   
  413927:	jbe    0x4138ff
  413929:	jo     0x4138ee
  41392b:	imul   esp,DWORD PTR [edi],0xc8c28025
  413931:	fs enter 0x9b62,0xbb
  413936:	xchg   ch,dh
  413938:	xor    al,0x73
  41393a:	jae    0x41398a
  41393c:	retf   0xbc8e
  41393f:	stos   DWORD PTR es:[edi],eax
  413940:	add    eax,0xe82115ec
  413945:	push   ebx
  413946:	sbb    dl,dl
  413948:	xchg   ecx,eax
  413949:	inc    edi
  41394a:	mov    bl,0xc5
  41394c:	gs jns 0x41397a
  41394f:	out    dx,al
  413950:	mov    esp,0x3cd92912
  413955:	add    al,BYTE PTR [ebp-0x27]
  413958:	push   0x7c
  41395a:	or     al,0xc9
  41395c:	(bad)  
  41395d:	xchg   ecx,eax
  41395e:	hlt    
  41395f:	push   edx
  413960:	shl    DWORD PTR [esi-0x43683c75],1
  413966:	pop    ds
  413967:	cdq    
  413968:	hlt    
  413969:	fstp   DWORD PTR [ebp-0x5b]
  41396c:	repnz jecxz 0x4138fb
  41396f:	dec    esi
  413970:	mov    bh,BYTE PTR [eax-0x60]
  413973:	fdivr  DWORD PTR [ebx]
  413975:	retf   0x4f1d
  413978:	pop    es
  413979:	cli    
  41397a:	jle    0x4139b2
  41397c:	rol    BYTE PTR [esi],cl
  41397e:	dec    ebp
  41397f:	test   DWORD PTR ds:0x4a8fa92,0xf889d819
  413989:	mov    al,0xcb
  41398b:	and    al,0x7b
  41398d:	adc    DWORD PTR [edi-0x5c],ecx
  413990:	inc    ebx
  413991:	adc    DWORD PTR [ecx-0x44b3d6f0],edx
  413997:	and    al,0xc2
  413999:	add    al,0xf1
  41399b:	adc    ebp,edx
  41399d:	sbb    edx,eax
  41399f:	ins    DWORD PTR es:[edi],dx
  4139a0:	scas   al,BYTE PTR es:[edi]
  4139a1:	jnp    0x4139ab
  4139a3:	mov    cl,0xc4
  4139a5:	sub    DWORD PTR [ebp-0x5c],ebx
  4139a8:	inc    edx
  4139a9:	dec    ebx
  4139aa:	mov    DWORD PTR [ebp-0x4019b27d],esi
  4139b0:	mov    dl,0x76
  4139b2:	lea    edx,[ecx]
  4139b4:	fdiv   QWORD PTR fs:[ecx-0x1e]
  4139b8:	jmp    0xcb07:0xcb8df943
  4139bf:	jno    0x4139ba
  4139c1:	xchg   edx,eax
  4139c2:	xchg   ebp,eax
  4139c3:	add    al,BYTE PTR [eax+0x4f1abb77]
  4139c9:	repnz mov bl,BYTE PTR [edx]
  4139cc:	push   0xfffffff7
  4139ce:	adc    BYTE PTR [ecx-0x3a],bh
  4139d1:	cvtdq2ps xmm5,XMMWORD PTR [eax+0x33]
  4139d5:	push   ebp
  4139d6:	xchg   ecx,eax
  4139d7:	mov    ds:0x618c5ca7,al
  4139dc:	fwait
  4139dd:	or     ch,BYTE PTR [ebp+0x464c2625]
  4139e3:	sub    eax,0x93669638
  4139e8:	sar    BYTE PTR [esi],1
  4139ea:	cmp    al,BYTE PTR [ecx]
  4139ec:	bound  eax,QWORD PTR [edi]
  4139ee:	data16 pushw 0x27f3
  4139f3:	cmp    dl,dh
  4139f5:	iret   
  4139f6:	rcl    DWORD PTR [esi-0x4524fe40],cl
  4139fc:	xchg   dh,bh
  4139fe:	cmp    dl,0xa8
  413a01:	in     eax,dx
  413a02:	popa   
  413a03:	push   es
  413a04:	addr16 sbb ebx,eax
  413a07:	jb     0x4139d7
  413a09:	aas    
  413a0a:	mov    dl,ch
  413a0c:	in     eax,dx
  413a0d:	mov    esp,0x5f7403e8
  413a12:	bound  ebp,QWORD PTR [ebx-0xf78158c]
  413a18:	jns    0x413a3c
  413a1a:	lock nop
  413a1c:	test   eax,0xd65ef38a
  413a21:	sub    BYTE PTR [ebx+0x7959e8f2],dl
  413a27:	repnz shl edx,0xcd
  413a2b:	or     al,BYTE PTR [ebx+esi*4+0x1b]
  413a2f:	lods   eax,DWORD PTR ds:[esi]
  413a30:	xchg   ecx,esp
  413a32:	pop    edi
  413a33:	or     BYTE PTR [edx],0x45
  413a36:	outs   dx,DWORD PTR ds:[esi]
  413a37:	mov    sp,0x506a
  413a3b:	adc    eax,0xf784df50
  413a40:	sub    BYTE PTR [eax-0x1777ceb4],bh
  413a46:	aaa    
  413a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a48:	jp     0x413a92
  413a4a:	jo     0x413a33
  413a4c:	mov    eax,ds:0x9db7949e
  413a51:	cmp    ah,BYTE PTR [esi]
  413a53:	cmc    
  413a54:	fcomip st,st(0)
  413a56:	(bad)  [esi+0x48]
  413a59:	inc    edi
  413a5a:	and    al,0x7e
  413a5c:	xchg   edi,eax
  413a5d:	fstp   DWORD PTR [eax+0x11b81a27]
  413a63:	aas    
  413a64:	and    eax,0x826a0a04
  413a69:	out    0xa6,eax
  413a6b:	ret    0xf61c
  413a6e:	retf   
  413a6f:	dec    BYTE PTR [ecx-0x33]
  413a72:	sub    eax,0xf32047b1
  413a77:	iret   
  413a78:	icebp  
  413a79:	out    0x3f,eax
  413a7b:	cmp    ecx,0xffffffce
  413a7e:	iret   
  413a7f:	jnp    0x413a53
  413a81:	cmc    
  413a82:	es pop ebp
  413a84:	sti    
  413a85:	mov    WORD PTR [eax+0x4f25fdb1],?
  413a8b:	jbe    0x413a19
  413a8d:	and    al,0x82
  413a8f:	push   0xffffffc1
  413a91:	mov    BYTE PTR [ebp-0x60f7fe2],ch
  413a97:	push   cs
  413a98:	push   DWORD PTR [ebx-0x34]
  413a9b:	xchg   edi,eax
  413a9c:	aas    
  413a9d:	popf   
  413a9e:	sub    DWORD PTR [eax],esp
  413aa0:	test   ah,dl
  413aa2:	jb     0x413a6e
  413aa4:	cdq    
  413aa5:	ins    DWORD PTR es:[edi],dx
  413aa6:	dec    ebp
  413aa7:	and    al,0xeb
  413aa9:	cdq    
  413aaa:	push   edi
  413aab:	aaa    
  413aac:	mov    BYTE PTR [esi-0x52],al
  413aaf:	addr16 jne 0x413afd
  413ab2:	inc    edx
  413ab3:	xchg   ecx,eax
  413ab4:	jmp    0xd6f8ce13
  413ab9:	add    edx,eax
  413abb:	push   0x43
  413abd:	outs   dx,DWORD PTR ds:[esi]
  413abe:	mov    dl,0xab
  413ac0:	jns    0x413af8
  413ac2:	in     al,dx
  413ac3:	(bad)  
  413ac4:	retf   
  413ac5:	push   esi
  413ac6:	mov    dl,0xbc
  413ac8:	scas   al,BYTE PTR es:[edi]
  413ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aca:	(bad)
  413acf:	xor    ebp,edi
  413ad1:	pushf  
  413ad2:	dec    ebp
  413ad3:	dec    ecx
  413ad4:	pop    eax
  413ad5:	lds    edi,FWORD PTR [edx+eiz*2-0x2dcab613]
  413adc:	in     eax,dx
  413add:	jle    0x413b56
  413adf:	jg     0x413aff
  413ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae2:	xchg   ebx,eax
  413ae3:	xbegin 0x69dbf5d9
  413ae9:	add    al,0x1f
  413aeb:	push   ecx
  413aec:	aaa    
  413aed:	leave  
  413aee:	lods   al,BYTE PTR ds:[esi]
  413aef:	xor    al,0x15
  413af1:	popa   
  413af2:	sahf   
  413af3:	sub    eax,0xb89683a7
  413af8:	aam    0xb2
  413afa:	xchg   edi,eax
  413afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413afc:	(bad)  
  413aff:	xlat   BYTE PTR ds:[ebx]
  413b00:	loopne 0x413b3a
  413b02:	dec    esi
  413b03:	ins    DWORD PTR es:[edi],dx
  413b04:	xchg   ecx,eax
  413b05:	(bad)  
  413b06:	fcomp  QWORD PTR [ecx-0x6598c195]
  413b0c:	and    bl,BYTE PTR [ebp+0x3f]
  413b0f:	push   es
  413b10:	scas   al,BYTE PTR es:[edi]
  413b11:	div    BYTE PTR [ecx+0x17]
  413b14:	sub    eax,0x5e67cdc
  413b19:	ins    DWORD PTR es:[edi],dx
  413b1a:	sbb    al,0x9c
  413b1c:	out    dx,al
  413b1d:	dec    esi
  413b1e:	jae    0x413aac
  413b20:	push   0x5afab51d
  413b25:	jbe    0x413b42
  413b27:	mov    dh,BYTE PTR [ebx]
  413b29:	lea    ebp,[edx]
  413b2b:	pop    ebp
  413b2c:	fmul   DWORD PTR [ebp+eax*8+0x6fc00f42]
  413b33:	repnz pop es
  413b35:	jne    0x413ba6
  413b37:	inc    edi
  413b38:	and    eax,0x615d794d
  413b3d:	fs push edx
  413b3f:	jno    0x413b76
  413b41:	call   0xafd4:0xc5118df3
  413b48:	sub    DWORD PTR [eax],esi
  413b4a:	gs popa 
  413b4c:	test   ebx,0x459d7b03
  413b52:	or     esp,DWORD PTR [ecx-0x7]
  413b55:	sti    
  413b56:	jle    0x413b72
  413b58:	(bad)  
  413b59:	shl    dh,cl
  413b5b:	or     al,0xb8
  413b5d:	sbb    eax,0x78307878
  413b62:	pop    edi
  413b63:	and    BYTE PTR [esi-0x1c],bh
  413b66:	xor    ebp,DWORD PTR [ebx-0x5ec06e5c]
  413b6c:	xor    eax,0x63f9a5b
  413b71:	or     bl,bh
  413b73:	ret    
  413b74:	mov    al,0x6b
  413b76:	(bad)  
  413b78:	imul   edi,DWORD PTR [esi+0x77beb961],0x8950beba
  413b82:	sti    
  413b83:	cmp    dl,BYTE PTR [ebp-0x1a5dd5a1]
  413b89:	ret    
  413b8a:	mov    dl,0x8e
  413b8c:	fwait
  413b8d:	mov    DWORD PTR [ebp+ebx*2+0x3230d78a],0xfcd9cdce
  413b98:	mov    BYTE PTR [edi],bh
  413b9a:	lods   al,BYTE PTR ds:[esi]
  413b9b:	push   cs
  413b9c:	jbe    0x413c05
  413b9e:	data16 mov ds:0x62c2d3e,al
  413ba4:	fnstcw WORD PTR [ebx]
  413ba6:	pop    ss
  413ba7:	xchg   ebp,eax
  413ba8:	push   ebp
  413ba9:	adc    bh,ah
  413bab:	inc    ecx
  413bac:	popa   
  413bad:	out    dx,al
  413bae:	sub    DWORD PTR ds:0x720177e2,esp
  413bb4:	dec    edx
  413bb5:	cld    
  413bb6:	add    BYTE PTR [eax+0x33],al
  413bb9:	jbe    0x413b4a
  413bbb:	cdq    
  413bbc:	hlt    
  413bbd:	and    ebp,eax
  413bbf:	mov    eax,ds:0xa5de4a17
  413bc4:	shl    ebx,cl
  413bc6:	fwait
  413bc7:	mov    ebx,0xd727914f
  413bcc:	adc    bh,dh
  413bce:	lods   al,BYTE PTR ds:[esi]
  413bcf:	sub    eax,0x9f937c4a
  413bd4:	or     eax,0xa0d97f76
  413bd9:	and    al,0x5d
  413bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bdc:	and    al,0xc2
  413bde:	cwde   
  413bdf:	stc    
  413be0:	mov    cl,0xac
  413be2:	push   edi
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	in     al,dx
  413d45:	in     al,dx
  413d46:	imul   esi,DWORD PTR [eax+0x414a97d9],0x823365bc
  413d50:	add    BYTE PTR [ebx+eax*2],bh
  413d53:	ret    0x1
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
